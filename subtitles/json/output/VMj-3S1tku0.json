{
  "video_id": "VMj-3S1tku0",
  "sentences": [
    {
      "id": 1,
      "text": "hello my name is andre hello my name is andre and i've been training deep neural and i've been training deep neural and i've been training deep neural networks for a bit more than a decade networks for a bit more than a decade networks for a bit more than a decade and in this lecture i'd like to show you and in this lecture i'd like to show you and in this lecture i'd like to show you what neural network training looks like what neural network training looks like what neural network training looks like under the hood so in particular we are under the hood so in particular we are under the hood so in particular we are going to start with a blank jupiter going to start with a blank jupiter going to start with a blank jupiter notebook and by the end of this lecture notebook and by the end of this lecture notebook and by the end of this lecture we will define and train in neural net we will define and train in neural net we will define and train in neural net and you'll get to see everything that",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 2,
      "text": "and you'll get to see everything that",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 3,
      "text": "and you'll get to see everything that goes on under the hood and exactly goes on under the hood and exactly goes on under the hood and exactly sort of how that works on an intuitive sort of how that works on an intuitive sort of how that works on an intuitive level level level now specifically what i would like to do now specifically what i would like to do now specifically what i would like to do is i would like to take you through is i would like to take you through is i would like to take you through building of micrograd now micrograd is building of micrograd now micrograd is building of micrograd now micrograd is this library that i released on github this library that i released on github this library that i released on github about two years ago but at the time i about two years ago but at the time i about two years ago but at the time i only uploaded the source code and you'd only uploaded the source code and you'd only uploaded the source code and you'd have to go in by yourself and really have to go in by yourself and really have to go in by yourself and really figure out how it works figure out how it works figure out how it works so in this lecture i will take you so in this lecture i will take you so in this lecture i will take you through it step by step and kind of through it step by step and kind of through it step by step and kind of comment on all the pieces of it",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 4,
      "text": "so what comment on all the pieces of it so what comment on all the pieces of it",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 5,
      "text": "so what is micrograd and why is it interesting is micrograd and why is it interesting is micrograd and why is it interesting",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 6,
      "text": "good good good",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 7,
      "text": "um um um micrograd is basically an autograd micrograd is basically an autograd micrograd is basically an autograd engine autograd is short for automatic engine autograd is short for automatic engine autograd is short for automatic gradient and really what it does is it gradient and really what it does is it gradient and really what it does is it implements backpropagation now implements backpropagation now implements backpropagation now backpropagation is this algorithm that backpropagation is this algorithm that backpropagation is this algorithm that allows you to efficiently evaluate the allows you to efficiently evaluate the allows you to efficiently evaluate the gradient of gradient of gradient of some kind of a loss function with some kind of a loss function with some kind of a loss function with respect to the weights of a neural respect to the weights of a neural respect to the weights of a neural network and what that allows us to do network and what that allows us to do network and what that allows us to do then is we can iteratively tune the then is we can iteratively tune the then is we can iteratively tune the weights of that neural network to weights of that neural network to weights of that neural network to minimize the loss function and therefore minimize the loss function and therefore minimize the loss function and therefore improve the accuracy of the network so improve the accuracy of the network so improve the accuracy of the network so back propagation would be at the back propagation would be at the back propagation would be at the mathematical core of any modern deep mathematical core of any modern deep mathematical core of any modern deep neural network library like say pytorch neural network library like say pytorch neural network library like say pytorch or jaxx or jaxx or jaxx so the functionality of microgrant is i so the functionality of microgrant is i",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 8,
      "text": "so the functionality of microgrant is i think best illustrated by an example so think best illustrated by an example so think best illustrated by an example",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 9,
      "text": "so if we just scroll down here if we just scroll down here if we just scroll down here you'll see that micrograph basically you'll see that micrograph basically you'll see that micrograph basically allows you to build out mathematical allows you to build out mathematical allows you to build out mathematical expressions expressions expressions and um here what we are doing is we have",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 10,
      "text": "and um here what we are doing is we have",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 11,
      "text": "and um here what we are doing is we have an expression that we're building out an expression that we're building out an expression that we're building out where you have two inputs a and b where you have two inputs a and b where you have two inputs a and b",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 12,
      "text": "and you'll see that a and b are negative and you'll see that a and b are negative and you'll see that a and b are negative four and two but we are wrapping those four and two",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 13,
      "text": "but we are wrapping those four and two",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 14,
      "text": "but we are wrapping those values into this value object that we values into this value object that we values into this value object that we are going to build out as part of are going to build out as part of are going to build out as part of micrograd micrograd micrograd",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 15,
      "text": "so this value object will wrap the so this value object will wrap the so this value object will wrap the numbers themselves numbers themselves numbers themselves",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 16,
      "text": "and then we are going to build out a",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 17,
      "text": "and then we are going to build out a",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 18,
      "text": "and then we are going to build out a mathematical expression here where a and mathematical expression here where a and mathematical expression here where a and b are transformed into c d and b are transformed into c d and b are transformed into c d and",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 19,
      "text": "eventually e f and g eventually e f and g eventually e f and g and i'm showing some of the functions and i'm showing some of the functions and i'm showing some of the functions some of the functionality of micrograph some of the functionality of micrograph some of the functionality of micrograph and the operations that it supports so and the operations that it supports so and the operations that it supports so you can add two value objects you can you can add two value objects you can you can add two value objects you can multiply them you can raise them to a multiply them you can raise them to a multiply them you can raise them to a constant power you can offset by one constant power you can offset by one constant power you can offset by one negate squash at zero negate squash at zero negate squash at zero square divide by constant divide by it square divide by constant divide by it square divide by constant divide by it etc etc etc",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 20,
      "text": "and so we're building out an expression and so we're building out an expression and so we're building out an expression graph with with these two inputs a and b graph with with these two inputs a and b graph with with these two inputs a and b",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 21,
      "text": "and we're creating an output value of g",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 22,
      "text": "and we're creating an output value of g",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 23,
      "text": "and we're creating an output value of g and micrograd will in the background and micrograd will in the background and micrograd will in the background build out this entire mathematical build out this entire mathematical build out this entire mathematical expression so it will for example know expression",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 24,
      "text": "so it will for example know expression so it will for example know that c is also a value that c is also a value that c is also a value c was a result of an addition operation c was a result of an addition operation c was a result of an addition operation and the and the and the child nodes of c are a and b because the child nodes of c are a and b because the child nodes of c are a and b because the and will maintain pointers to a and b and will maintain pointers to a and b and will maintain pointers to a and b value objects so we'll basically know value objects so we'll basically know value objects",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 25,
      "text": "so we'll basically know exactly how all of this is laid out exactly how all of this is laid out exactly how all of this is laid out and then not only can we do what we call and then not only can we do what we call and then not only can we do what we call the forward pass where we actually look the forward pass where we actually look the forward pass where we actually look at the value of g of course that's at the value of g of course that's at the value of g of course that's pretty straightforward we will access pretty straightforward we will access pretty straightforward we will access that using the dot data attribute and so",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 26,
      "text": "that using the dot data attribute and so that using the dot data attribute and so the output of the forward pass the value the output of the forward pass the value the output of the forward pass the value of g is 24.7 it turns out but the big of g is 24.7 it turns out but the big of g is 24.7 it turns out but the big deal is that we can also take this g deal is that we can also take this g deal is that we can also take this g value object and we can call that value object and we can call that value object and we can call that backward backward backward and this will basically uh initialize and this will basically uh initialize and this will basically uh initialize back propagation at the node g back propagation at the node g back propagation at the node g and what backpropagation is going to do and what backpropagation is going to do and what backpropagation is going to do is it's going to start at g",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 27,
      "text": "and it's is",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 28,
      "text": "it's going to start at g",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 29,
      "text": "and it's is",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 30,
      "text": "it's going to start at g",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 31,
      "text": "and it's going to go backwards through that going to go backwards through that going to go backwards through that expression graph",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 32,
      "text": "and it's going to expression graph and it's going to expression graph",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 33,
      "text": "and it's going to recursively apply the chain rule from recursively apply the chain rule from recursively apply the chain rule from calculus calculus calculus and what that allows us to do then is and what that allows us to do then is and what that allows us to do then is we're going to evaluate basically the we're going to evaluate basically the we're going to evaluate basically the derivative of g with respect to all the derivative of g with respect to all the derivative of g with respect to all the internal nodes internal nodes internal nodes like e d and c",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 34,
      "text": "but also with respect to like e d and c but also with respect to like e d and c but also with respect to the inputs a and b the inputs a and b the inputs a and b and then we can actually query this and then we can actually query this",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 35,
      "text": "and then we can actually query this derivative of g with respect to a for derivative of g with respect to a for derivative of g with respect to a for example that's a dot grad in this case example that's a dot grad in this case example that's a dot grad in this case it happens to be 138 and the derivative it happens to be 138 and the derivative it happens to be 138 and the derivative of g with respect to b of g with respect to b of g with respect to b which also happens to be here 645 which also happens to be here 645 which also happens to be here 645 and this derivative we'll see soon is and this derivative we'll see soon is and this derivative we'll see soon is very important information because it's very important information because it's very important information because it's telling us how a and b are affecting g telling us how a and b are affecting g telling us how a and b are affecting g through this mathematical expression so through this mathematical expression so through this mathematical expression so in particular in particular in particular a dot grad is 138",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 36,
      "text": "so if we slightly a dot grad is 138 so if we slightly a dot grad is 138 so if we slightly nudge a and make it slightly larger nudge a and make it slightly larger nudge a and make it slightly larger 138 is telling us that g will grow and 138 is telling us that g will grow and 138 is telling us that g will grow and the slope of that growth is going to be the slope of that growth is going to be the slope of that growth is going to be 138 138 138 and the slope of growth of b is going to and the slope of growth of b is going to and the slope of growth of b is going to be 645.",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 37,
      "text": "so that's going to tell us about be 645.",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 38,
      "text": "so that's going to tell us about be 645.",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 39,
      "text": "so that's going to tell us about how g will respond if a and b get how g will respond if a and b get how g will respond if a and b get tweaked a tiny amount in a positive tweaked a tiny amount in a positive tweaked a tiny amount in a positive direction direction direction",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 40,
      "text": "okay now you might be confused about what now you might be confused about what this expression is that we built out this expression is that we built out this expression is that we built out here and this expression by the way is here and this expression by the way is here and this expression by the way is completely meaningless",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 41,
      "text": "i just made it up completely meaningless i just made it up completely meaningless i just made it up i'm just flexing about the kinds of i'm just flexing about the kinds of i'm just flexing about the kinds of operations that are supported by operations that are supported by operations that are supported by micrograd micrograd what we actually really care about are what we actually really care about are what we actually really care about are neural networks but it turns out that neural networks",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 42,
      "text": "but it turns out that neural networks",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 43,
      "text": "but it turns out that neural networks are just mathematical neural networks are just mathematical neural networks are just mathematical expressions just like this one but expressions just like this one but expressions just like this one but actually slightly bit less crazy even actually slightly bit less crazy even actually slightly bit less crazy even neural networks are just a mathematical neural networks are just a mathematical neural networks are just a mathematical expression they take the input data as expression they take the input data as expression they take the input data as an input and they take the weights of a an input and they take the weights of a an input and they take the weights of a neural network as an input",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 44,
      "text": "and it's a neural network as an input",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 45,
      "text": "and it's a neural network as an input",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 46,
      "text": "and it's a mathematical expression and the output mathematical expression and the output mathematical expression and the output are your predictions of your neural net are your predictions of your neural net are your predictions of your neural net or the loss function we'll see this in a or the loss function we'll see this in a or the loss function we'll see this in a bit but basically neural networks just bit",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 47,
      "text": "but basically neural networks just bit but basically neural networks just happen to be a certain class of happen to be a certain class of happen to be a certain class of mathematical expressions mathematical expressions mathematical expressions but back propagation is actually but back propagation is actually but back propagation is actually significantly more general it doesn't significantly more general it doesn't significantly more general it doesn't actually care about neural networks at actually care about neural networks at actually care about neural networks at all it only tells us about arbitrary all it only tells us about arbitrary all it only tells us about arbitrary mathematical expressions and then we mathematical expressions and then we mathematical expressions and then we happen to use that machinery for happen to use that machinery for happen to use that machinery for training of neural networks now one more training of neural networks now one more training of neural networks now one more note i would like to make at this stage note i would like to make at this stage note i would like to make at this stage is that as you see here micrograd is a is that as you see here micrograd is a is that as you see here micrograd is a scalar valued auto grant engine so it's scalar valued auto grant engine",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 48,
      "text": "so it's scalar valued auto grant engine so it's working on the you know level of working on the you know level of working on the you know level of individual scalars like negative four individual scalars like negative four individual scalars like negative four and two and we're taking neural nets and and two",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 49,
      "text": "and we're taking neural nets and and two",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 50,
      "text": "and we're taking neural nets",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 51,
      "text": "and we're breaking them down all the way to we're breaking them down all the way to we're breaking them down all the way to these atoms of individual scalars and these atoms of individual scalars and these atoms of individual scalars and all the little pluses and times and it's all the little pluses and times and it's all the little pluses and times",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 52,
      "text": "and it's just excessive",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 53,
      "text": "and so obviously you just excessive",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 54,
      "text": "and so obviously you just excessive",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 55,
      "text": "and so obviously you would never be doing any of this in would never be doing any of this in would never be doing any of this in production it's really just put down for production it's really just put down for production it's really just put down for pedagogical reasons because it allows us pedagogical reasons because it allows us pedagogical reasons because it allows us to not have to deal with these to not have to deal with these to not have to deal with these n-dimensional tensors that you would use n-dimensional tensors that you would use n-dimensional tensors that you would use in modern deep neural network library so in modern deep neural network library so in modern deep neural network library so this is really done so that you this is really done so that you this is really done so that you understand and refactor out back understand and refactor out back understand and refactor out back propagation and chain rule and propagation and chain rule and propagation and chain rule and understanding of neurologic training understanding of neurologic training understanding of neurologic training and then if you actually want to train and then if you actually want to train and then if you actually want to train bigger networks you have to be using bigger networks you have to be using bigger networks you have to be using these tensors but none of the math these tensors but none of the math these tensors but none of the math changes this is done purely for changes this is done purely for changes this is done purely for efficiency we are basically taking scale efficiency we are basically taking scale efficiency we are basically taking scale value value value all the scale values we're packaging all the scale values we're packaging all the scale values we're packaging them up into tensors which are just them up into tensors which are just them up into tensors which are just arrays of these scalars and then because arrays of these scalars and then because arrays of these scalars and then because we have these large arrays we're making we have these large arrays we're making we have these large arrays we're making operations on those large arrays that operations on those large arrays that operations on those large arrays that allows us to take advantage of the allows us to take advantage of the allows us to take advantage of the parallelism in a computer and all those parallelism in a computer and all those parallelism in a computer and all those operations can be done in parallel and operations can be done in parallel and operations can be done in parallel and then the whole thing runs faster but then the whole thing runs faster but then the whole thing runs faster but really none of the math changes and really none of the math changes and really none of the math changes and that's done purely for efficiency",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 56,
      "text": "so i that's done purely for efficiency",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 57,
      "text": "so i that's done purely for efficiency",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 58,
      "text": "so i don't think that it's pedagogically don't think that it's pedagogically don't think that it's pedagogically useful to be dealing with tensors from useful to be dealing with tensors from useful to be dealing with tensors from scratch",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 59,
      "text": "uh",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 60,
      "text": "and i think and that's why i scratch uh",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 61,
      "text": "and i think and that's why i scratch uh",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 62,
      "text": "and i think and that's why i fundamentally wrote micrograd because fundamentally wrote micrograd because fundamentally wrote micrograd because you can understand how things work uh at you can understand how things work uh at you can understand how things work uh at the fundamental level",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 63,
      "text": "and then you can the fundamental level",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 64,
      "text": "and then you can the fundamental level",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 65,
      "text": "and then you can speed it up later",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 66,
      "text": "okay",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 67,
      "text": "so here's the fun speed it up later",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 68,
      "text": "okay",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 69,
      "text": "so here's the fun speed it up later",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 70,
      "text": "okay",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 71,
      "text": "so here's the fun part my claim is that micrograd is what part my claim is that micrograd is what part my claim is that micrograd is what you need to train your networks and you need to train your networks and you need to train your networks and everything else is just efficiency so everything else is just efficiency so everything else is just efficiency so you'd think that micrograd would be a you'd think that micrograd would be a you'd think that micrograd would be a very complex piece of code and that very complex piece of code and that very complex piece of code and that turns out to not be the case turns out to not be the case turns out to not be the case",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 72,
      "text": "so if we just go to micrograd so if we just go to micrograd so if we just go to micrograd",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 73,
      "text": "and you'll see that there's only two and you'll see that there's only two and you'll see that there's only two files here in micrograd this is the files here in micrograd this is the files here in micrograd this is the actual engine it doesn't know anything actual engine it doesn't know anything actual engine it doesn't know anything about neural nuts and this is the entire about neural nuts and this is the entire about neural nuts and this is the entire neural nets library neural nets library neural nets library on top of micrograd so engine and nn.pi on top of micrograd so engine and nn.pi on top of micrograd so engine and nn.pi so the actual backpropagation autograd",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 74,
      "text": "so the actual backpropagation autograd",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 75,
      "text": "so the actual backpropagation autograd engine engine engine that gives you the power of neural that gives you the power of neural that gives you the power of neural networks is literally networks is literally networks is literally 100 lines of code of like very simple 100 lines of code of like very simple 100 lines of code of like very simple python python python which we'll understand by the end of which we'll understand by the end of which we'll understand by the end of this lecture this lecture this lecture and then nn.pi and then nn.pi and then nn.pi this neural network library built on top this neural network library built on top this neural network library built on top of the autograd engine of the autograd engine of the autograd engine um is like a joke it's like um is like a joke it's like um is like a joke it's like we have to define what is a neuron",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 76,
      "text": "and we have to define what is a neuron",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 77,
      "text": "and we have to define what is a neuron",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 78,
      "text": "and then we have to define what is the layer then we have to define what is the layer then we have to define what is the layer of neurons and then we define what is a of neurons and then we define what is a of neurons and then we define what is a multi-layer perceptron which is just a multi-layer perceptron which is just a multi-layer perceptron which is just a sequence of layers of neurons and so sequence of layers of neurons and so sequence of layers of neurons and so it's just a total joke it's just a total joke it's just a total joke so basically so basically so basically there's a lot of power that comes from there's a lot of power that comes from there's a lot of power that comes from only 150 lines of code only 150 lines of code only 150 lines of code and that's all you need to understand to and that's all you need to understand to and that's all you need to understand to understand neural network training and understand neural network training and understand neural network training and everything else is just efficiency and everything else is just efficiency and everything else is just efficiency and of course there's a lot to efficiency of course there's a lot to efficiency of course there's a lot to efficiency but fundamentally that's all that's but fundamentally that's all that's but fundamentally that's all that's happening",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 79,
      "text": "okay so now let's dive right happening",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 80,
      "text": "okay so now let's dive right happening",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 81,
      "text": "okay so now let's dive right in and implement micrograph step by step in and implement micrograph step by step in and implement micrograph step by step the first thing i'd like to do is i'd the first thing i'd like to do is i'd the first thing",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 82,
      "text": "i'd like to do is i'd like to make sure that you have a very like to make sure that you have a very like to make sure that you have a very good understanding intuitively of what a good understanding intuitively of what a good understanding intuitively of what a derivative is and exactly what derivative is and exactly what derivative is and exactly what information it gives you so let's start information it gives you so let's start information it gives you so let's start with some basic imports that i copy with some basic imports that i copy with some basic imports that i copy paste in every jupiter notebook always paste in every jupiter notebook always paste in every jupiter notebook always and let's define a function a scalar and let's define a function a scalar and let's define a function a scalar valued function valued function valued function f of x f of x f of x as follows as follows as follows",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 83,
      "text": "so i just make this up randomly",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 84,
      "text": "i just",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 85,
      "text": "so i just make this up randomly",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 86,
      "text": "i just",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 87,
      "text": "so i just make this up randomly i just want to scale a valid function that want to scale a valid function that want to scale a valid function that takes a single scalar x and returns a takes a single scalar x and returns a takes a single scalar x and returns a single scalar y single scalar",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 88,
      "text": "y single scalar y",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 89,
      "text": "and we can call this function of course and we can call this function of course and we can call this function of course so we can pass in say 3.0 and get 20",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 90,
      "text": "so we can pass in say 3.0 and get 20",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 91,
      "text": "so we can pass in say 3.0 and get 20 back back back now we can also plot this function to now we can also plot this function to now we can also plot this function to get a sense of its shape you can tell get a sense of its shape you can tell get a sense of its shape you can tell from the mathematical expression that from the mathematical expression that from the mathematical expression that this is probably a parabola it's a this is probably a parabola it's a this is probably a parabola it's a quadratic quadratic quadratic",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 92,
      "text": "and so if we just uh create a set of um",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 93,
      "text": "and so if we just uh create a set of um",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 94,
      "text": "and so if we just uh create a set of um um um scale values that we can feed in using scale values that we can feed in using scale values that we can feed in using for example a range from negative five for example a range from negative five for example a range from negative five to five in steps of 0.25 to five in steps of 0.25 to five in steps of 0.25",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 95,
      "text": "so this is so axis is just from negative so this is so axis is just from negative so this is so axis is just from negative 5 to 5 not including 5 in steps of 0.25 5 to 5 not including 5 in steps of 0.25 5 to 5 not including 5 in steps of 0.25 and we can actually call this function and we can actually call this function and we can actually call this function on this numpy array as well so we get a on this numpy array",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 96,
      "text": "as well so we get a on this numpy array as well so we get a set of y's if we call f on axis set of y's if we call f on axis set of y's if we call f on axis and these y's are basically and these y's are basically and these y's are basically also applying a function on every one of also applying a function on every one of also applying a function on every one of these elements independently these elements independently these elements independently and we can plot this using matplotlib",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 97,
      "text": "so and we can plot this using matplotlib",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 98,
      "text": "so and we can plot this using matplotlib so plt.plot x's and y's",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 99,
      "text": "and we get a nice plt.plot",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 100,
      "text": "x's and y's",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 101,
      "text": "and we get a nice plt.plot",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 102,
      "text": "x's and y's",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 103,
      "text": "and we get a nice parabola so previously here we fed in parabola so previously here we fed in parabola so previously here we fed in 3.0 somewhere here",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 104,
      "text": "and we received 20 3.0 somewhere here",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 105,
      "text": "and we received 20 3.0 somewhere here",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 106,
      "text": "and we received 20 back which is here the y coordinate so back which is here the y coordinate so back which is here the y coordinate",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 107,
      "text": "so now i'd like to think through now i'd like to think through now i'd like to think through what is the derivative what is the derivative what is the derivative of this function at any single input of this function at any single input of this function at any single input point x point x point x",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 108,
      "text": "right",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 109,
      "text": "so what is the derivative at right",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 110,
      "text": "so what is the derivative at right",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 111,
      "text": "so what is the derivative at different points x of this function now different points x of this function now different points x of this function now if you remember back to your calculus if you remember back to your calculus if you remember back to your calculus class you've probably derived class you've probably derived class you've probably derived derivatives so we take this mathematical derivatives so we take this mathematical derivatives so we take this mathematical expression 3x squared minus 4x plus 5 expression 3x squared minus 4x plus 5 expression 3x squared minus 4x plus 5",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 112,
      "text": "and you would write out on a piece of and you would write out on a piece of and you would write out on a piece of paper and you would you know apply the paper and you would you know apply the paper and you would you know apply the product rule and all the other rules and product rule and all the other rules and product rule and all the other rules and derive the mathematical expression of derive the mathematical expression of derive the mathematical expression of the great derivative of the original the great derivative of the original the great derivative of the original function",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 113,
      "text": "and then you could plug in function",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 114,
      "text": "and then you could plug in function",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 115,
      "text": "and then you could plug in different texts and see what the different texts and see what the different texts and see what the derivative is derivative is derivative is we're not going to actually do that we're not going to actually do that we're not going to actually do that because no one in neural networks because no one in neural networks because no one in neural networks actually writes out the expression for actually writes out the expression for actually writes out the expression for the neural net it would be a massive the neural net it would be a massive the neural net it would be a massive expression um it would be you know expression um it would be you know expression um it would be you know thousands tens of thousands of terms no thousands tens of thousands of terms no thousands tens of thousands of terms no one actually derives the derivative of one actually derives the derivative of one actually derives the derivative of course",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 116,
      "text": "and so we're not going to take course",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 117,
      "text": "and so we're not going to take course",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 118,
      "text": "and so we're not going to take this kind of like a symbolic approach this kind of like a symbolic approach this kind of like a symbolic approach instead what i'd like to do is i'd like instead what i'd like to do is i'd like instead what i'd like to do is i'd like to look at the definition of derivative to look at the definition of derivative to look at the definition of derivative and just make sure that we really and just make sure that we really and just make sure that we really understand what derivative is measuring understand what derivative is measuring understand what derivative is measuring what it's telling you about the function what it's telling you about the function what it's telling you about the function",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 119,
      "text": "and so if we just look up derivative we see that we see that",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 120,
      "text": "okay",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 121,
      "text": "so this is not a very good",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 122,
      "text": "okay",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 123,
      "text": "so this is not a very good",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 124,
      "text": "okay",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 125,
      "text": "so this is not a very good definition of derivative this is a definition of derivative this is a definition of derivative this is a definition of what it means to be definition of what it means to be definition of what it means to be differentiable differentiable differentiable",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 126,
      "text": "but if you remember from your calculus but if you remember from your calculus but if you remember from your calculus it is the limit as h goes to zero of f",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 127,
      "text": "it is the limit as h goes to zero of f",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 128,
      "text": "it is the limit as h goes to zero of f of x plus h minus f of x over h",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 129,
      "text": "so of x plus h minus f of x over h",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 130,
      "text": "so of x plus h minus f of x over h",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 131,
      "text": "so basically what it's saying is if you basically what it's saying is if you basically what it's saying is if you slightly bump up you're at some point x slightly bump up you're at some point x slightly bump up you're at some point x that you're interested in or a and if that you're interested in or a and if that you're interested in or a and if you slightly bump up you slightly bump up you slightly bump up you know you slightly increase it by you know you slightly increase it by you know you slightly increase it by small number h small number h small number",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 132,
      "text": "h",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 133,
      "text": "how does the function respond with what how does the function respond with what how does the function respond with what sensitivity does it respond what is the sensitivity does it respond what is the sensitivity does it respond what is the slope at that point does the function go slope at that point does the function go slope at that point does the function go up or does it go down and by how much up or does it go down and by how much up or does it go down and by how much and that's the slope of that function and that's the slope of that function and that's the slope of that function the the the the slope of that response at that point the slope of that response at that point the slope of that response at that point",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 134,
      "text": "and so we can basically evaluate and so we can basically evaluate",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 135,
      "text": "and so we can basically evaluate the derivative here numerically by the derivative here numerically by the derivative here numerically by taking a very small h of course the taking a very small h of course the taking a very small h of course the definition would ask us to take h to definition would ask us to take h to definition would ask us to take h to zero we're just going to pick a very zero we're just going to pick a very zero we're just going to pick a very small h 0.001 small h 0.001 small h 0.001 and let's say we're interested in point and let's say we're interested in point and let's say we're interested in point 3.0 so we can look at f of x of course 3.0 so we can look at f of x of course 3.0 so we can look at f of x of course as 20 as 20 as 20 and now f of x plus h and",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 136,
      "text": "now f of x plus h and now f of x plus h",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 137,
      "text": "so if we slightly nudge x in a positive",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 138,
      "text": "so if we slightly nudge x in a positive",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 139,
      "text": "so if we slightly nudge x in a positive direction how is the function going to direction how is the function going to direction how is the function going to respond respond respond and just looking at this do you expect and just looking at this do you expect and just looking at this do you expect do you expect f of x plus h to be do you expect f of x plus h to be do you expect f of x plus h to be slightly greater than 20 or do you slightly greater than 20 or do you slightly greater than 20 or do you expect to be slightly lower than 20 expect to be slightly lower than 20 expect to be slightly lower than 20 and since this 3 is here and this is 20 and since this 3 is here and this is 20 and since this 3 is here and this is 20 if we slightly go positively the if we slightly go positively the if we slightly go positively the function will respond positively so function will respond positively so function will respond positively",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 140,
      "text": "so you'd expect this to be slightly greater you'd expect this to be slightly greater you'd expect this to be slightly greater than 20.",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 141,
      "text": "and now by how much it's than 20.",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 142,
      "text": "and now by how much it's than 20.",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 143,
      "text": "and now by how much it's telling you the telling you the telling you the sort of the sort of the sort of the the strength of that slope right the the the strength of that slope right the the the strength of that slope right the the size of the slope so f of x plus h minus size of the slope so f of x plus h minus size of the slope so f of x plus h minus f of x this is how much the function f of x this is how much the function f of x this is how much the function responded responded responded in the positive direction and we have to in the positive direction and we have to in the positive direction and we have to normalize by the normalize by the normalize by the run so we have the rise over run to get run so we have the rise over run to get run so we have the rise over run to get the slope",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 144,
      "text": "so this of course is just a the slope so this of course is just a the slope so this of course is just a numerical approximation of the slope numerical approximation of the slope numerical approximation of the slope because we have to make age very very because we have to make age very very because we have to make age very very small to converge to the exact amount small to converge to the exact amount small to converge to the exact amount now if i'm doing too many zeros now if i'm doing too many zeros now if i'm doing too many zeros at some point at some point at some point i'm gonna get an incorrect answer i'm gonna get an incorrect answer i'm gonna get an incorrect answer because we're using floating point because we're using floating point because we're using floating point arithmetic and the representations of arithmetic and the representations of arithmetic and the representations of all these numbers in computer memory is all these numbers in computer memory is all these numbers in computer memory is finite and at some point we get into finite and at some point we get into finite and at some point we get into trouble trouble trouble so we can converse towards the right",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 145,
      "text": "so we can converse towards the right so we can converse towards the right answer with this approach answer with this approach answer with this approach but basically um at 3 the slope is 14.",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 146,
      "text": "but basically um at 3 the slope is 14.",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 147,
      "text": "but basically um at 3 the slope is 14.",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 148,
      "text": "and you can see that by taking 3x and you can see that by taking 3x and you can see that by taking 3x squared minus 4x plus 5 and squared minus 4x plus 5 and squared minus 4x plus 5 and differentiating it in our head differentiating it in our head differentiating it in our head so 3x squared would be so 3x squared would be so 3x squared would be 6 x minus 4 6 x minus 4 6 x minus 4",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 149,
      "text": "and then we plug in x equals 3",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 150,
      "text": "so that's",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 151,
      "text": "and then we plug in x equals 3",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 152,
      "text": "so that's",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 153,
      "text": "and then we plug in x equals 3",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 154,
      "text": "so that's 18 minus 4 is 14.",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 155,
      "text": "so this is correct 18 minus 4 is 14.",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 156,
      "text": "so this is correct 18 minus 4 is 14.",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 157,
      "text": "so this is correct so that's so that's so that's at 3.",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 158,
      "text": "now how about the slope at say at 3.",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 159,
      "text": "now how about the slope at say at 3.",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 160,
      "text": "now how about the slope at say negative 3 negative 3 negative 3 would you expect would you expect for would you expect would you expect for would you expect would you expect for the slope the slope the slope now telling the exact value is really now telling the exact value is really now telling the exact value is really hard",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 161,
      "text": "but what is the sign of that slope hard",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 162,
      "text": "but what is the sign of that slope hard",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 163,
      "text": "but what is the sign of that slope",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 164,
      "text": "so at negative three so at negative three so at negative three if we slightly go in the positive if we slightly go in the positive if we slightly go in the positive direction at x",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 165,
      "text": "the function would direction at x",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 166,
      "text": "the function would direction at x",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 167,
      "text": "the function would actually go down and so that tells you actually go down and so that tells you actually go down and so that tells you that the slope would be negative so that the slope would be negative so that the slope would be negative so we'll get a slight number below we'll get a slight number below we'll get a slight number below below 20.",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 168,
      "text": "and so if we take the slope we below 20.",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 169,
      "text": "and so if we take the slope we below 20.",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 170,
      "text": "and so if we take the slope we expect something negative expect something negative expect something negative negative 22.",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 171,
      "text": "okay negative 22.",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 172,
      "text": "okay",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 173,
      "text": "negative 22.",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 174,
      "text": "okay",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 175,
      "text": "and at some point here of course the and at some point here of course the and at some point here of course the slope would be zero now for this slope would be zero now for this slope would be zero now for this specific function i looked it up specific function i looked it up specific function i looked it up previously and it's at point two over previously and it's at point two over previously and it's at point two over three three three so at roughly two over three so at roughly two over three so at roughly two over three",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 176,
      "text": "uh",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 177,
      "text": "that's somewhere here uh that's somewhere here uh that's somewhere here um um this derivative be zero this derivative be zero this derivative be zero so basically at that precise point so basically at that precise point so basically at that precise point",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 178,
      "text": "yeah",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 179,
      "text": "yeah",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 180,
      "text": "yeah",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 181,
      "text": "at that precise point if we nudge in a at that precise point if we nudge in a at that precise point if we nudge in a positive direction the function doesn't positive direction the function doesn't positive direction the function doesn't respond this stays the same almost and respond this stays the same almost and respond this stays the same almost and so that's why the slope is zero",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 182,
      "text": "okay now",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 183,
      "text": "so that's why the slope is zero",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 184,
      "text": "okay now",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 185,
      "text": "so that's why the slope is zero",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 186,
      "text": "okay now let's look at a bit more complex case let's look at a bit more complex case let's look at a bit more complex case so we're going to start you know",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 187,
      "text": "so we're going to start you know",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 188,
      "text": "so we're going to start you know complexifying a bit",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 189,
      "text": "so now we have a complexifying a bit",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 190,
      "text": "so now we have a complexifying a bit",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 191,
      "text": "so now we have a function function function here here here with output variable d with output variable d with",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 192,
      "text": "output variable d",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 193,
      "text": "that is a function of three scalar that is a function of three scalar that is a function of three scalar inputs a b and c inputs a b and c inputs a b and c so a b and c are some specific values so a b and c are some specific values so a b and c are some specific values three inputs into our expression graph three inputs into our expression graph three inputs into our expression graph and a single output d and a single output d and a single output d",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 194,
      "text": "and",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 195,
      "text": "so if we just print d",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 196,
      "text": "we get four and so if we just print d",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 197,
      "text": "we get four and so if we just print d",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 198,
      "text": "we get four and now what i have to do is i'd like to and now what i have to do is i'd like to and now what i have to do is i'd like to again look at the derivatives of d with again look at the derivatives of d with again look at the derivatives of d with respect to a b and c respect to a b and c respect to a b and c and uh think through uh again just the and uh think through uh again just the and uh think through uh again just the intuition of what this derivative is intuition of what this derivative is intuition of what this derivative is telling us telling us telling us so in order to evaluate this derivative so in order to evaluate this derivative so in order to evaluate this derivative we're going to get a bit hacky here we're going to get a bit hacky here we're going to get a bit hacky here we're going to again have a very small we're going to again have a very small we're going to again have a very small value of h value of h value of h",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 199,
      "text": "and then we're going to fix the inputs",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 200,
      "text": "and then we're going to fix the inputs",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 201,
      "text": "and then we're going to fix the inputs at some at some at some values that we're interested in values that we're interested in values that we're interested in so these are the this is the point abc so these are the this is the point abc so these are the this is the point abc at which we're going to be evaluating at which we're going to be evaluating at which we're going to be evaluating the the the the the the derivative of d with respect to all a b derivative of d with respect to all a b derivative of d with respect to all a b and c at that point and c at that point and c at that point so there are the inputs and now we have so there are the inputs and now we have so there are the inputs and now we have d1 is that expression d1 is that expression d1 is that expression and then we're going to for example look",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 202,
      "text": "and then we're going to for example look",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 203,
      "text": "and then we're going to for example look at the derivative of d with respect to a at the derivative of d with respect to a at the derivative of d with respect to a so we'll take a and we'll bump it by h",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 204,
      "text": "so we'll take a",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 205,
      "text": "and we'll bump it by h",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 206,
      "text": "so we'll take a",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 207,
      "text": "and we'll bump it by h",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 208,
      "text": "and then we'll get d2 to be the exact",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 209,
      "text": "and then we'll get d2 to be the exact",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 210,
      "text": "and then we'll get d2 to be the exact same function same function same function and now we're going to print um and now we're going to print um and now we're going to print um you know f1 you know f1",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 211,
      "text": "you know f1 d1 is d1 d1 is d1 d1 is d1 d2 is d2 d2 is d2 d2 is d2 and print slope and print slope and print slope",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 212,
      "text": "so the derivative or slope so the derivative or slope so the derivative or slope here will be um here will be um here will be um of course of course of course d2 d2 d2 minus d1 divide h minus d1 divide h minus d1 divide h so d2 minus d1 is how much the function so d2 minus d1 is how much the function so d2 minus d1 is how much the function increased increased increased uh when we bumped uh when we bumped uh when we bumped the uh the uh the uh the specific input that we're interested the specific input that we're interested the specific input that we're interested in by a tiny amount in by a tiny amount in by a tiny amount",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 213,
      "text": "and",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 214,
      "text": "and and this is then normalized by h",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 215,
      "text": "this is then normalized by h this is then normalized by h to get the slope",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 216,
      "text": "so",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 217,
      "text": "so um um",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 218,
      "text": "yeah",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 219,
      "text": "yeah",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 220,
      "text": "so this",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 221,
      "text": "so if i just run this we're so this",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 222,
      "text": "so if i just run this we're so this",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 223,
      "text": "so if i just run this we're going to print going to print going to print d1 d1 d1 which we know is four which we know is four which we know is four now d2 will be bumped a will be bumped now d2 will be bumped a will be bumped now d2 will be bumped a will be bumped by h by h by h",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 224,
      "text": "so let's just think through so let's just think through so let's just think through a little bit uh what d2 will be uh a little bit uh what d2 will be uh a little bit uh what d2 will be uh printed out here printed out here printed out here in particular in particular d1 will be four d1 will be four d1 will be four will d2 be a number slightly greater will d2 be a number slightly greater will d2 be a number slightly greater than four or slightly lower than four than four or slightly lower than four than four or slightly lower than four and that's going to tell us the sl the",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 225,
      "text": "and that's going to tell us the sl the",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 226,
      "text": "and that's going to tell us the sl the the sign of the derivative the sign of the derivative the sign of the derivative so we're bumping a by h we're bumping a by h b as minus three c is ten b as minus three c is ten b as minus three c is ten so you can just intuitively think so you can just intuitively think so you can just intuitively think through this derivative and what it's through this derivative and what it's through this derivative and what it's doing a will be slightly more positive doing a will be slightly more positive doing a will be slightly more positive",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 227,
      "text": "and but b is a negative number",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 228,
      "text": "and",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 229,
      "text": "but b is a negative number",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 230,
      "text": "and",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 231,
      "text": "but b is a negative number",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 232,
      "text": "so if a is slightly more positive so if a is slightly more positive so if a is slightly more positive because b is negative three because b is negative three because b is negative three we're actually going to be adding less we're actually going to be adding less we're actually going to be adding less to d to d to",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 233,
      "text": "d",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 234,
      "text": "so you'd actually expect that the value so you'd actually expect that the value so you'd actually expect that the value of the function will go down of the function will go down of the function will go down so let's just see this so let's just see this so let's just see this",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 235,
      "text": "yeah",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 236,
      "text": "and so we went from 4",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 237,
      "text": "yeah",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 238,
      "text": "and so we went from 4",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 239,
      "text": "yeah",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 240,
      "text": "and so we went from 4 to 3.9996 to 3.9996 to 3.9996 and that tells you that the slope will and that tells you that the slope will and that tells you that the slope will be negative be negative be negative and then",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 241,
      "text": "and then",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 242,
      "text": "and then uh will be a negative number uh will be a negative number uh will be a negative number because we went down because we went down because we went down and then and then the exact number of slope will be the exact number of slope will be the exact number of slope will be exact amount of slope is negative 3. exact amount of slope is negative 3. exact amount of slope is negative 3.",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 243,
      "text": "and you can also convince yourself that and you can also convince yourself that and you can also convince yourself that negative 3 is the right answer negative 3 is the right answer negative 3 is the right answer mathematically and analytically because mathematically and analytically because mathematically and analytically because if you have a times b plus c and you are if you have a times b plus c",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 244,
      "text": "and you are if you have a times b plus c and you are you know you have calculus",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 245,
      "text": "then you know you have calculus",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 246,
      "text": "then you know you have calculus then differentiating a times b plus c with differentiating a times b plus c with differentiating a times b plus c with respect to a gives you just b respect to a gives you just b respect to a gives you just b and indeed the value of b is negative 3 and indeed the value of b is negative 3 and indeed the value of b is negative 3 which is the derivative that we have so which is the derivative that we have so which is the derivative that we have so you can tell that that's correct you can tell that that's correct you can tell that that's correct",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 247,
      "text": "so now if we do this with b so now if we do this with b so now if we do this with b",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 248,
      "text": "so if we bump b by a little bit in a so if we bump b by a little bit in a so if we bump b by a little bit in a positive direction we'd get different positive direction we'd get different positive direction we'd get different slopes so what is the influence of b on slopes so what is the influence of b on slopes so what is the influence of b on the output d",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 249,
      "text": "the output d",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 250,
      "text": "the output",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 251,
      "text": "d",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 252,
      "text": "so if we bump b by a tiny amount in a so if we bump b by a tiny amount in a so if we bump b by a tiny amount in a positive direction then because a is positive direction then because a is positive direction then because a is positive positive positive we'll be adding more to d",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 253,
      "text": "we'll be adding more to d",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 254,
      "text": "we'll be adding more to d",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 255,
      "text": "right right",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 256,
      "text": "right",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 257,
      "text": "so um and now what is the what is the so um and now what is the what is the so",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 258,
      "text": "um and now what is the what is the sensitivity what is the slope of that sensitivity what is the slope of that sensitivity what is the slope of that addition addition addition and it might not surprise you that this",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 259,
      "text": "and it might not surprise you that this",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 260,
      "text": "and it might not surprise you that this should be should be should be 2 2 2 and y is a 2 because d of d and y is a 2 because d of d and y is a 2 because d of d by db differentiating with respect to b by db differentiating with respect to b by db differentiating with respect to b would be would give us a would be would give us a would be would give us a and the value of a is two",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 261,
      "text": "so that's also and the value of a is two",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 262,
      "text": "so that's also and the value of a is two",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 263,
      "text": "so that's also working well working well working well",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 264,
      "text": "and then if c gets bumped a tiny amount and then if c gets bumped a tiny amount and then if c gets bumped a tiny amount in h in h in h by h by h then of course a times b is unaffected then of course a times b is unaffected then of course a times b is unaffected and now c becomes slightly bit higher and now c becomes slightly bit higher and now c becomes slightly bit higher what does that do to the function it what does that do to the function it what does that do to the function it makes it slightly bit higher because makes it slightly bit higher because makes it slightly bit higher because we're simply adding c we're simply adding c we're simply adding c and it makes it slightly bit higher by and it makes it slightly bit higher by and it makes it slightly bit higher by the exact same amount that we added to c the exact same amount that we added to c the exact same amount that we added to c and so that tells you that the slope is and so that tells you that the slope is and so that tells you that the slope is one one one that will be the that will be the that will be the the rate at which the rate at which the rate at which d will increase as we scale d will increase as we scale d will increase as we scale c c",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 265,
      "text": "c",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 266,
      "text": "okay",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 267,
      "text": "so we now have some intuitive sense",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 268,
      "text": "okay",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 269,
      "text": "so we now have some intuitive sense",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 270,
      "text": "okay",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 271,
      "text": "so we now have some intuitive sense of what this derivative is telling you of what this derivative is telling you of what this derivative is telling you about the function and we'd like to move about the function and we'd like to move about the function and we'd like to move to neural networks now as i mentioned to neural networks now as i mentioned to neural networks now as i mentioned neural networks will be pretty massive neural networks will be pretty massive neural networks will be pretty massive expressions mathematical expressions so expressions mathematical expressions so expressions mathematical expressions",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 272,
      "text": "so we need some data structures that we need some data structures that we need some data structures that maintain these expressions and that's maintain these expressions and that's maintain these expressions and that's what we're going to start to build out what we're going to start to build out what we're going to start to build out now now now so we're going to",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 273,
      "text": "so we're going to",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 274,
      "text": "so we're going to build out this value object that i build out this value object that i build out this value object that i showed you in the readme page of showed you in the readme page of showed you in the readme page of micrograd micrograd so let me copy paste a skeleton of the so let me copy paste a skeleton of the so let me copy paste a skeleton of the first very simple value object first very simple value object first very simple value object so class value takes a single so class value takes a single so class value takes a single scalar value that it wraps and keeps scalar value that it wraps and keeps scalar value that it wraps and keeps track of track of track of",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 275,
      "text": "and that's it so",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 276,
      "text": "and that's it so",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 277,
      "text": "and that's it so we can for example do value of 2.0 and we can for example do value of 2.0 and we can for example do value of 2.0 and then we can then we can then we can get we can look at its content and get we can look at its content and get we can look at its content and python will internally python will internally python will internally use the wrapper function use the wrapper function use the wrapper function to uh return to uh return to uh return uh this string",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 278,
      "text": "oops uh this string oops uh this string oops like that like that like that",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 279,
      "text": "so this is a value object with data so this is a value object with data",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 280,
      "text": "so this is a value object with data equals two that we're creating here equals two that we're creating here equals two that we're creating here now we'd like to do is like we'd like to now we'd like to do is like we'd like to now we'd like to do is like we'd like to be able to be able to be able to have not just like two values have not just like two values have not just like two values but we'd like to do a bluffy",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 281,
      "text": "right we'd",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 282,
      "text": "but we'd like to do a bluffy",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 283,
      "text": "right we'd",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 284,
      "text": "but we'd like to do a bluffy",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 285,
      "text": "right we'd like to add them like to add them like to add them so currently you would get an error so currently you would get an error so currently you would get an error because python doesn't know how to add because python doesn't know how to add because python doesn't know how to add two value objects",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 286,
      "text": "so we have to tell it two value objects so we have to tell it two value objects so we have to tell it",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 287,
      "text": "so here's so here's so here's addition",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 288,
      "text": "so you have to basically use these so you have to basically use these special double underscore methods in special double underscore methods in special double underscore methods in python to define these operators for python to define these operators for python to define these operators for these objects",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 289,
      "text": "so if we call um these objects so if we call um these objects so if we call um the uh if we use this plus operator the uh if we use this plus operator the uh if we use this plus operator python will internally call a dot add of python will internally call a dot add of python will internally call a dot add of b b b that's what will happen internally and that's what will happen internally",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 290,
      "text": "and that's what will happen internally and so b will be the other and so b will be the other and so b will be the other and self will be a self will be a self will be a",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 291,
      "text": "and so we see that what we're going to",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 292,
      "text": "and so we see that what we're going to",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 293,
      "text": "and so we see that what we're going to return is a new value object and it's return is a new value object and it's return is a new value object",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 294,
      "text": "and it's just it's going to be wrapping just it's going to be wrapping just it's going to be wrapping the plus of the plus of the plus of their data their data their data but remember now because data is the but remember now because data is the but remember now because data is the actual like numbered python number so actual like numbered python number so actual like numbered python number so this operator here is just the typical this operator here is just the typical this operator here is just the typical floating point plus addition now it's floating point plus addition",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 295,
      "text": "now it's floating point plus addition now it's not an addition of value objects not an addition of value objects not an addition of value objects and will return a new value so now a and will return a new value so now a and will return a new value so now a plus b should work and it should print plus b should work and it should print plus b should work and it should print value of value of value of negative one negative one negative one because that's two plus minus three because that's two plus minus three because that's two plus minus three there we go there we go there we go",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 296,
      "text": "okay",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 297,
      "text": "let's now implement multiply",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 298,
      "text": "okay let's now implement",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 299,
      "text": "multiply",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 300,
      "text": "okay let's now implement multiply",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 301,
      "text": "just so we can recreate this expression just so we can recreate this expression just so we can recreate this expression here here",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 302,
      "text": "so multiply i think it won't surprise so multiply",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 303,
      "text": "i think it won't surprise so multiply",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 304,
      "text": "i think it won't surprise you will be fairly similar you will be fairly similar you will be fairly similar",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 305,
      "text": "so instead of add we're going to be so instead of add we're going to be so instead of add we're going to be using mul using mul using mul and then here of course we want to do and then here of course we want to do and then here of course we want to do times times times",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 306,
      "text": "and so now we can create a c value",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 307,
      "text": "and so now we can create a c value",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 308,
      "text": "and so now we can create a c value object which will be 10.0 and now we object which will be 10.0 and now we object which will be 10.0 and now we should be able to do a times b well should be able to do a times b well should be able to do",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 309,
      "text": "a times b well let's just do a times b first let's just do a times b first let's just do a times b first",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 310,
      "text": "um um [Music]",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 311,
      "text": "[Music] [Music] that's value of negative six now that's value of negative six now that's value of negative six now and by the way i skipped over this a and by the way i skipped over this a and by the way i skipped over this a little bit suppose that i didn't have little bit suppose that i didn't have little bit suppose that i didn't have the wrapper function here the wrapper function here the wrapper function here then it's just that you'll get some kind then it's just that you'll get some kind",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 312,
      "text": "then it's just that you'll get some kind of an ugly expression so what wrapper is of an ugly expression so what wrapper is of an ugly expression so what wrapper is doing is it's providing us a way to doing is it's providing us a way to doing is it's providing us a way to print out like a nicer looking print out like a nicer looking print out like a nicer looking expression in python expression in python expression in python",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 313,
      "text": "uh so we don't just have something uh so we don't just have something",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 314,
      "text": "uh so we don't just have something cryptic we actually are you know it's cryptic we actually are you know",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 315,
      "text": "it's cryptic we actually are you know",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 316,
      "text": "it's value of value of negative six",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 317,
      "text": "so this gives us a times negative six so this gives us a times negative six so this gives us a times and then this we should now be able to and then this we should now be able to and then this we should now be able to add c to it because we've defined and add c to it because we've defined and add c to it because we've defined and told the python how to do mul and add told the python how to do mul and add told the python how to do mul and add and so this will call this will",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 318,
      "text": "and so this will call this will",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 319,
      "text": "and so this will call this will basically be equivalent to a dot basically be equivalent to a dot basically be equivalent to a dot small small small of b of b of b and then this new value object will be and then this new value object will be and then this new value object will be dot add dot add dot add of c of c of c",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 320,
      "text": "and so let's see if that worked and so let's see if that worked and so let's see if that worked",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 321,
      "text": "yep",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 322,
      "text": "so that worked well that gave us yep",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 323,
      "text": "so that worked well that gave us yep",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 324,
      "text": "so that worked well that gave us four which is what we expect from before four which is what we expect from before four which is what we expect from before",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 325,
      "text": "and i believe we can just call them",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 326,
      "text": "and i believe we can just call them",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 327,
      "text": "and i believe we can just call them manually as well there we go so manually as well there we go so manually as well there we go",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 328,
      "text": "so",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 329,
      "text": "yeah",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 330,
      "text": "yeah",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 331,
      "text": "okay",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 332,
      "text": "so now what we are missing is the okay",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 333,
      "text": "so now what we are missing is the okay",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 334,
      "text": "so now what we are missing is the connective tissue of this expression as connective tissue of this expression as connective tissue of this expression as i mentioned we want to keep these i mentioned we want to keep these i mentioned we want to keep these expression graphs so we need to know and expression graphs so we need to know and expression graphs so we need to know and keep pointers about what values produce keep pointers about what values produce keep pointers about what values produce what other values what other values what other values so here for example we are going to so here for example we are going to so here for example we are going to introduce a new variable which we'll introduce a new variable which we'll introduce a new variable which we'll call children and by default it will be call children and by default it will be call children and by default it will be an empty tuple an empty tuple an empty tuple",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 335,
      "text": "and then we're actually going to keep a",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 336,
      "text": "and then we're actually going to keep a",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 337,
      "text": "and then we're actually going to keep a slightly different variable in the class slightly different variable in the class slightly different variable in the class which we'll call underscore prev which which we'll call underscore prev which which we'll call underscore prev which will be the set of children will be the set of children will be the set of children this is how i done i did it in the this is how i done i did it in the this is how i done i did it in the original micrograd looking at my code original micrograd looking at my code original micrograd looking at my code here",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 338,
      "text": "i can't remember exactly the reason here i can't remember exactly the reason here i can't remember exactly the reason i believe it was efficiency but this i believe it was efficiency",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 339,
      "text": "but this i believe it was efficiency but this underscore children will be a tuple for underscore children will be a tuple for underscore children will be a tuple for convenience",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 340,
      "text": "but then when we actually convenience but then when we actually convenience but then when we actually maintain it in the class it will be just maintain it in the class it will be just maintain it in the class it will be just this set",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 341,
      "text": "yeah i believe for efficiency this set",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 342,
      "text": "yeah i believe for efficiency this set",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 343,
      "text": "yeah i believe for efficiency um um so now so now so now when we are creating a value like this when we are creating a value like this when we are creating a value like this with a constructor children will be with a constructor children will be with a constructor children will be empty and prep will be the empty set but empty and prep will be the empty set but empty and prep will be the empty set",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 344,
      "text": "but when we're creating a value through when we're creating a value through when we're creating a value through addition or multiplication we're going addition or multiplication we're going addition or multiplication we're going to feed in the children of this value to feed in the children of this value to feed in the children of this value which in this case is self and other which in this case is self and other which in this case is self and other so those are the children so those are the children so those are the children here here",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 345,
      "text": "so now we can do d dot prev so now we can do d dot prev",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 346,
      "text": "so now we can do d dot prev and we'll see that the children of the and we'll see that the children of the and we'll see that the children of the we now know are this value of negative 6 we now know are this value of negative 6 we now know are this value of negative 6 and value of 10 and this of course is and value of 10 and this of course is and value of 10 and this of course is the value resulting from a times b and the value resulting from a times b and the value resulting from a times b and the c value which is 10.",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 347,
      "text": "the c value which is 10.",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 348,
      "text": "the c value which is 10.",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 349,
      "text": "now the last piece of information we now the last piece of information we now the last piece of information we don't know",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 350,
      "text": "so we know that the children don't know so we know that the children don't know",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 351,
      "text": "so we know that the children of every single value",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 352,
      "text": "but we don't know of every single value",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 353,
      "text": "but we don't know of every single value",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 354,
      "text": "but we don't know what operation created this value what operation created this value what operation created this value so we need one more element here let's so we need one more element here let's so we need one more element here let's call it underscore pop call it underscore pop call it underscore pop and by default this is the empty set for and by default this is the empty set for and by default this is the empty set for leaves leaves leaves and then we'll just maintain it here",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 355,
      "text": "and then we'll just maintain it here",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 356,
      "text": "and then we'll just maintain it here and now the operation will be just a and now the operation will be just a and now the operation will be just a simple string and in the case of simple string and in the case of simple string and in the case of addition it's plus in the case of addition it's plus in the case of addition it's plus in the case of multiplication is times multiplication is times multiplication is times so now we",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 357,
      "text": "so now we so now we not just have d dot pref we also have a not just have d dot pref we also have a not just have d dot pref we also have a d dot up d dot up d dot up",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 358,
      "text": "and we know that d was produced by an",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 359,
      "text": "and we know that d was produced by an",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 360,
      "text": "and we know that d was produced by an addition of those two values and so now addition of those two values and so now addition of those two values",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 361,
      "text": "and so now we have the full we have the full",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 362,
      "text": "we have the full mathematical expression uh and we're mathematical expression",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 363,
      "text": "uh and we're mathematical expression uh and we're building out this data structure and we building out this data structure and we building out this data structure",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 364,
      "text": "and we know exactly how each value came to be know exactly how each value came to be know exactly how each value came to be by word expression and from what other by word expression and from what other by word expression and from what other values now because these expressions are about now because these expressions are about to get quite a bit larger we'd like a to get quite a bit larger we'd like a to get quite a bit larger we'd like a way to nicely visualize these way to nicely visualize these way to nicely visualize these expressions that we're building out so expressions that we're building out so expressions that we're building out so for that i'm going to copy paste a bunch for that i'm going to copy paste a bunch for that i'm going to copy paste a bunch of slightly scary code that's going to of slightly scary code that's going to of slightly scary code that's going to visualize this these expression graphs visualize this these expression graphs visualize this these expression graphs for us for us for us so here's the code",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 365,
      "text": "and i'll explain it so here's the code and i'll explain it so here's the code and i'll explain it in a bit but first let me just show you in a bit but first let me just show you in a bit but first let me just show you what this code does what this code does what this code does basically what it does is it creates a basically what it does is it creates a basically what it does is it creates a new function drawdot that we can call on new function drawdot that we can call on new function drawdot that we can call on some root node some root node some root node",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 366,
      "text": "and then it's going to visualize it",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 367,
      "text": "so",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 368,
      "text": "and then it's going to visualize it",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 369,
      "text": "so",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 370,
      "text": "and then it's going to visualize it",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 371,
      "text": "so if we call drawdot on",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 372,
      "text": "d if we call drawdot on d",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 373,
      "text": "if we call drawdot on d which is this final value here that is a which is this final value here that is a which is this final value here that is a times b plus c times b plus c times b plus c it creates something like this so this it creates something like this so this it creates something like this",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 374,
      "text": "so this is d is d is",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 375,
      "text": "d",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 376,
      "text": "and you see that this is a times b",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 377,
      "text": "and you see that this is a times b",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 378,
      "text": "and you see that this is a times b creating an integrated value plus",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 379,
      "text": "c creating an integrated value plus c creating an integrated value plus c gives us this output node d gives us this output node d gives us this output node d",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 380,
      "text": "so that's dried out of d",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 381,
      "text": "so that's dried out of d",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 382,
      "text": "so that's dried out of d",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 383,
      "text": "and i'm not going to go through this in",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 384,
      "text": "and i'm not going to go through this in",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 385,
      "text": "and i'm not going to go through this in complete detail you can take a look at complete detail you can take a look at complete detail you can take a look at graphless and its api uh graphis is a graphless and its api uh graphis is a graphless and its api uh graphis is a open source graph visualization software open source graph visualization software open source graph visualization software and what we're doing here is we're and what we're doing here is we're and what we're doing here is we're building out this graph and graphis building out this graph and graphis building out this graph and graphis api and api and api",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 386,
      "text": "and you can basically see that trace is this you can basically see that trace is this you can basically see that trace is this helper function that enumerates all of helper function that enumerates all of helper function that enumerates all of the nodes and edges in the graph the nodes and edges in the graph the nodes and edges in the graph so that just builds a set of all the so that just builds a set of all the so that just builds a set of all the nodes and edges",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 387,
      "text": "and then we iterate for nodes and edges and then we iterate for nodes and edges and then we iterate for all the nodes and we create special node all the nodes",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 388,
      "text": "and we create special node all the nodes",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 389,
      "text": "and we create special node objects objects objects for them in for them in for them in using dot node using dot node using dot node",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 390,
      "text": "and then we also create edges using dot and then we also create edges using dot and then we also create edges using dot dot edge dot edge dot edge and the only thing that's like slightly and the only thing that's like slightly and the only thing that's like slightly tricky here is you'll notice that i tricky here is you'll notice that i tricky here is you'll notice that i basically add these fake nodes which are basically add these fake nodes which are basically add these fake nodes which are these operation nodes so for example these operation nodes so for example these operation nodes",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 391,
      "text": "so for example this node here is just like a plus node this node here is just like a plus node this node here is just like a plus node and and i create these i create these i create these special op nodes here special op nodes here special op nodes here",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 392,
      "text": "and i connect them accordingly so these",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 393,
      "text": "and i connect them accordingly so these",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 394,
      "text": "and i connect them accordingly so these nodes of course are not actual nodes of course are not actual nodes of course are not actual nodes in the original graph nodes in the original graph nodes in the original graph they're not actually a value object the they're not actually a value object the they're not actually a value object the only value objects here are the things only value objects here are the things only value objects here are the things in squares those are actual value in squares those are actual value in squares those are actual value objects or representations thereof and objects or representations thereof and objects or representations thereof and these op nodes are just created in this these op nodes are just created in this these op nodes are just created in this drawdot routine so that it looks nice drawdot routine so that it looks nice drawdot routine so that it looks nice let's also add labels to these graphs let's also add labels to these graphs let's also add labels to these graphs just so we know what variables are where just so we know what variables are where just so we know what variables are where so let's create a special underscore",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 395,
      "text": "so let's create a special underscore so let's create a special underscore label label label um um or let's just do label or let's just do label or let's just do label equals empty by default and save it in equals empty by default and save it in equals empty by default and save it in each node",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 396,
      "text": "and then here we're going to do label as and then here we're going to do label as a a a label is the label is the label is the label a c",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 397,
      "text": "and then let's create a special um let's create a special um let's create a special um e equals a times b and e dot label will be e and e dot label will be e",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 398,
      "text": "it's kind of naughty",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 399,
      "text": "it's kind of naughty",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 400,
      "text": "it's kind of naughty and e will be e plus c and e will be e plus c and e will be e plus c and a d dot label will be and a d dot label will be and a d dot label will be",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 401,
      "text": "d",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 402,
      "text": "d",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 403,
      "text": "d",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 404,
      "text": "okay",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 405,
      "text": "so nothing really changes i",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 406,
      "text": "just okay",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 407,
      "text": "so nothing really changes i",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 408,
      "text": "just okay",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 409,
      "text": "so nothing really changes i just added this new e function added this new e function added this new e function a new e variable a new e variable a new e variable",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 410,
      "text": "and then here when we are and then here when we are and then here when we are printing this printing this printing this",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 411,
      "text": "i'm going to print the label here",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 412,
      "text": "so i'm going to print the label here",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 413,
      "text": "so i'm going to print the label here so this will be a percent s this will be a percent s this will be a percent s bar bar bar and this will be end.label and so now and so now we have the label on the left here so it we have the label on the left here so it we have the label on the left here so it says a b creating e and then e plus c says a b creating e and then e plus c says a b creating e and then e plus c creates d creates d creates",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 414,
      "text": "d",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 415,
      "text": "just like we have it here just like we have it here just like we have it here and finally let's make this expression and finally let's make this expression and finally let's make this expression just one layer deeper just one layer deeper just one layer deeper so d will not be the final output node so d will not be the final output node",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 416,
      "text": "so d will not be the final output node instead after d we are going to create a instead after",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 417,
      "text": "d we are going to create a instead after",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 418,
      "text": "d we are going to create a new value object new value object new value object called f we're going to start running",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 419,
      "text": "called f",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 420,
      "text": "we're going to start running called f",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 421,
      "text": "we're going to start running out of variables soon f will be negative out of variables soon f will be negative out of variables soon f will be negative 2.0 2.0 2.0 and its label will of course just be f and its label will of course just be f and its label will of course just be f and then l capital l will be the output and then l capital l will be the output and then l capital l will be the output of our graph of our graph of our graph and l will be p times f and l will be p times f and l will be p times",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 422,
      "text": "f",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 423,
      "text": "okay",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 424,
      "text": "okay",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 425,
      "text": "okay",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 426,
      "text": "so l will be negative eight is the so l will be negative eight is the so l will be negative eight is the output",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 427,
      "text": "so now we don't just draw a d we draw l",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 428,
      "text": "okay",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 429,
      "text": "and somehow the label of and somehow the label of and somehow the label of l was undefined oops all that label has l was undefined oops all that label has l was undefined oops all that label has to be explicitly sort of given to it to be explicitly sort of given to it to be explicitly sort of given to it",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 430,
      "text": "there we go so l is the output there we go so l is the output there we go so l is the output so let's quickly recap what we've done so let's quickly recap what we've done so let's quickly recap what we've done so far so far so far we are able to build out mathematical we are able to build out mathematical we are able to build out mathematical expressions using only plus and times so expressions using only plus and times so expressions using only plus and times so far far far they are scalar valued along the way they are scalar valued along the way they are scalar valued along the way and we can do this forward pass and we can do this forward pass and we can do this forward pass and build out a mathematical expression and build out a mathematical expression and build out a mathematical expression so we have multiple inputs here",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 431,
      "text": "a b c",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 432,
      "text": "so we have multiple inputs here a b",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 433,
      "text": "c",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 434,
      "text": "so we have multiple inputs here a b c and f and f and f going into a mathematical expression going into a mathematical expression going into a mathematical expression that produces a single output l that produces a single output l that produces a single output l and this here is visualizing the forward and this here is visualizing the forward and this here is visualizing the forward pass so the output of the forward pass pass so the output of the forward pass pass so the output of the forward pass is negative eight",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 435,
      "text": "that's the value is negative eight",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 436,
      "text": "that's the value is negative eight",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 437,
      "text": "that's the value now what we'd like to do next is we'd now what we'd like to do next is we'd now what we'd like to do next is we'd like to run back propagation like to run back propagation like to run back propagation and in back propagation we are going to and in back propagation we are going to and in back propagation we are going to start here at the end and we're going to start here at the end and we're going to start here at the end and we're going to reverse reverse reverse and calculate the gradient along along and calculate the gradient along along and calculate the gradient along along all these intermediate values all these intermediate values all these intermediate values and really what we're computing for and really what we're computing for and really what we're computing for every single value here every single value here every single value here um we're going to compute the derivative um we're going to compute the derivative um we're going to compute the derivative of that node with respect to l of that node with respect to l of that node with respect to l",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 438,
      "text": "so so the derivative of l with respect to l is the derivative of l with respect to l is the derivative of l with respect to l is just uh one just uh one just uh one",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 439,
      "text": "and then we're going to derive what is",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 440,
      "text": "and then we're going to derive what is",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 441,
      "text": "and then we're going to derive what is the derivative of l with respect to f the derivative of l with respect to f the derivative of l with respect to f with respect to d with respect to c with with respect to d with respect to c with with respect to d with respect to c with respect to e respect to e respect to e with respect to b and with respect to a with respect to b and with respect to a with respect to b and with respect to a and in the neural network setting you'd and in the neural network setting you'd and in the neural network setting you'd be very interested in the derivative of be very interested in the derivative of be very interested in the derivative of basically this loss function l basically this loss function l basically this loss function l with respect to the weights of a neural with respect to the weights of a neural with respect to the weights of a neural network network network and here of course we have just these and here of course we have just these and here of course we have just these variables a b c and f variables a b c and f variables a b c and f",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 442,
      "text": "but some of these will eventually but some of these will eventually but some of these will eventually represent the weights of a neural net represent the weights of a neural net represent the weights of a neural net",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 443,
      "text": "and so we'll need to know how those and so we'll need to know how those and so we'll need to know how those weights are impacting weights are impacting weights are impacting the loss function so we'll be interested the loss function",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 444,
      "text": "so we'll be interested the loss function so we'll be interested basically in the derivative of the basically in the derivative of the basically in the derivative of the output with respect to some of its leaf output with respect to some of its leaf output with respect to some of its leaf nodes and those leaf nodes will be the nodes and those leaf nodes will be the nodes and those leaf nodes will be the weights of the neural net weights of the neural net weights of the neural net and the other leaf nodes of course will and the other leaf nodes of course will and the other leaf nodes of course will be the data itself but usually we will be the data itself but usually we will be the data itself but usually we will not want or use the derivative of the not want or use the derivative of the not want or use the derivative of the loss function with respect to data loss function with respect to data loss function with respect to data because the data is fixed but the because the data is fixed but the because the data is fixed but the weights will be iterated on weights will be iterated on weights will be iterated on using the gradient information so next using the gradient information so next using the gradient information so next we are going to create a variable inside we are going to create a variable inside we are going to create a variable inside the value class that maintains the the value class that maintains the the value class that maintains the derivative of l with respect to that derivative of l with respect to that derivative of l with respect to that value value",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 445,
      "text": "and we will call this variable grad and we will call this variable grad and we will call this variable grad so there's a data and there's a so there's a data and there's a so there's a data and there's a self.grad self.grad self.grad and initially it will be zero",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 446,
      "text": "and and initially it will be zero and and initially it will be zero and remember that zero is basically means no remember that zero is basically means no remember that zero is basically means no effect so at initialization we're effect so at initialization we're effect so at initialization we're assuming that every value does not assuming that every value does not assuming that every value does not impact does not affect the out the impact does not affect the out the impact does not affect the out the output output output right",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 447,
      "text": "because if the gradient is zero right because if the gradient is zero right because if the gradient is zero that means that changing this variable that means that changing this variable that means that changing this variable is not changing the loss function is not changing the loss function is not changing the loss function so by default we assume that the so by default we assume that the so by default we assume that the gradient is zero gradient is zero gradient is zero and then and then now that we have grad",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 448,
      "text": "and it's 0.0 we are going to be able to visualize it we are going to be able to visualize it here after data so here grad is 0.4 f here after data so here grad is 0.4 f here after data so here grad is 0.4 f and this will be in that graph and this will be in that graph and this will be in that graph and now we are going to be showing both",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 449,
      "text": "and now we are going to be showing both",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 450,
      "text": "and now we are going to be showing both the data and the grad the data and the grad the data and the grad initialized at zero initialized at zero initialized at zero and we are just about getting ready",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 451,
      "text": "to and we are just about getting ready to and we are just about getting ready to calculate the back propagation calculate the back propagation calculate the back propagation and of course this grad again as i and of course this grad again as i and of course this grad again as i mentioned is representing mentioned is representing mentioned is representing the derivative of the output in this the derivative of the output in this the derivative of the output in this case l with respect to this value so case l with respect to this value so case l with respect to this value so with respect to so this is the with respect to so this is the with respect to so this is the derivative of l with respect to f with derivative of l with respect to f with derivative of l with respect to f with respect to d",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 452,
      "text": "and so on so let's now fill respect to d",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 453,
      "text": "and so on so let's now fill respect to d",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 454,
      "text": "and so on so let's now fill in those gradients and actually do back in those gradients and actually do back in those gradients and actually do back propagation manually",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 455,
      "text": "so let's start propagation manually",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 456,
      "text": "so let's start propagation manually",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 457,
      "text": "so let's start filling in these gradients and start all filling in these gradients and start all filling in these gradients and start all the way at the end as i mentioned here the way at the end as i mentioned here the way at the end as i mentioned here first we are interested to fill in this first we are interested to fill in this first we are interested to fill in this gradient here",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 458,
      "text": "so what is the derivative gradient here",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 459,
      "text": "so what is the derivative gradient here",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 460,
      "text": "so what is the derivative of l with respect to l of l with respect to l of l with respect to l in other words if i change l by a tiny in other words if i change l by a tiny in other words if i change l by a tiny amount of h amount of h amount of h how much does how much does how much does l change l change l change it changes by h",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 461,
      "text": "so it's proportional and it changes by h",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 462,
      "text": "so it's proportional and it changes by h",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 463,
      "text": "so it's proportional and therefore derivative will be one therefore derivative will be one therefore derivative will be one we can of course measure these or we can of course measure these or we can of course measure these or estimate these numerical gradients estimate these numerical gradients estimate these numerical gradients numerically just like we've seen before numerically just like we've seen before numerically just like we've seen before",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 464,
      "text": "so if i take this expression so if i take this expression so if i take this expression",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 465,
      "text": "and i create a def lol function here",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 466,
      "text": "and i create a def lol function here",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 467,
      "text": "and i create a def lol function here and put this here now the reason i'm and put this here now the reason i'm and put this here now the reason i'm creating a gating function hello here is creating a gating function hello here is creating a gating function",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 468,
      "text": "hello here is because i don't want to pollute or mess because i don't want to pollute or mess because i don't want to pollute or mess up the global scope here this is just up the global scope here this is just up the global scope here this is just kind of like a little staging area and kind of like a little staging area and kind of like a little staging area and as you know in python all of these will as you know in python all of these will as you know in python all of these will be local variables to this function so be local variables to this function so be local variables to this function",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 469,
      "text": "so i'm not changing any of the global scope i'm not changing any of the global scope i'm not changing any of the global scope here here so here l1 will be l so here l1 will be l so here l1 will be l and then copy pasting this expression and then copy pasting this expression and then copy pasting this expression we're going to add a small amount h in for example a in for example a right",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 470,
      "text": "and this would be measuring the right and this would be measuring the right and this would be measuring the derivative of l with respect to a derivative of l with respect to a derivative of l with respect to a so here this will be l2 so here this will be l2 so here this will be l2",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 471,
      "text": "and then we want to print this",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 472,
      "text": "and then we want to print this",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 473,
      "text": "and then we want to print this derivative so print derivative so print derivative so print l2 minus l1 which is how much l changed l2 minus l1 which is how much l changed l2 minus l1 which is how much l changed and then normalize it by h",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 474,
      "text": "so this is and then normalize it by h",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 475,
      "text": "so this is and then normalize it by h",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 476,
      "text": "so this is the rise over run the rise over run the rise over run and we have to be careful because l is a",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 477,
      "text": "and we have to be careful because l is a",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 478,
      "text": "and we have to be careful because l is a value node",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 479,
      "text": "so we actually want its data value node",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 480,
      "text": "so we actually want its data value node",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 481,
      "text": "so we actually want its data um um so that these are floats dividing by h so that these are floats dividing by h so that these are floats dividing by h and this should print the derivative of and this should print the derivative of and this should print the derivative of l with respect to a because a is the one l with respect to a because a is the one l with respect to a because a is the one that we bumped a little bit by h that we bumped a little bit by h that we bumped a little bit by h",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 482,
      "text": "so what is the so what is the so what is the derivative of l with respect to a derivative of l with respect to a it's six",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 483,
      "text": "it's six",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 484,
      "text": "it's six",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 485,
      "text": "okay",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 486,
      "text": "and obviously okay",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 487,
      "text": "and obviously okay",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 488,
      "text": "and obviously if we change l by h if we change l by h if we change l by h then that would be then that would be then that would be here effectively here effectively here effectively this looks really awkward but changing l this looks really awkward but changing l this looks really awkward but changing l by h by h",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 489,
      "text": "you see the derivative here is 1.",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 490,
      "text": "um you see the derivative here is 1.",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 491,
      "text": "um you see the derivative here is 1.",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 492,
      "text": "um that's kind of like the base case of that's kind of like the base case of that's kind of like the base case of what we are doing here what we are doing here what we are doing here",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 493,
      "text": "so basically we cannot come up here",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 494,
      "text": "and so basically we cannot come up here",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 495,
      "text": "and so basically we cannot come up here and we can manually set l.grad to one this we can manually set l.grad to one this we can manually set l.grad to one this is our manual back propagation is our manual back propagation is our manual back propagation l dot grad is one and let's redraw l dot grad is one and let's redraw l dot grad is one and let's redraw and we'll see that we filled in grad as and we'll see that we filled in grad as and we'll see that we filled in grad as 1 for l 1 for l 1 for l we're now going to continue the back we're now going to continue the back we're now going to continue the back propagation",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 496,
      "text": "so let's here look at the propagation",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 497,
      "text": "so let's here look at the propagation",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 498,
      "text": "so let's here look at the derivatives of l with respect to d and f derivatives of l with respect to d and f derivatives of l with respect to d",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 499,
      "text": "and f let's do a d",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 500,
      "text": "first let's do a d first let's do a d first",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 501,
      "text": "so what we are interested in if i create so what we are interested in if i create so what we are interested in if i create a markdown on here is we'd like to know a markdown on here is we'd like to know a markdown on here is we'd like to know basically we have that l is d times f basically we have that l is d times f basically we have that l is d times",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 502,
      "text": "f",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 503,
      "text": "and we'd like to know what is uh d",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 504,
      "text": "and we'd like to know what is uh d",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 505,
      "text": "and we'd like to know what is uh d l by d",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 506,
      "text": "d l by d",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 507,
      "text": "d l by d",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 508,
      "text": "d what is that what is that what is that and if you know your calculus uh l is d",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 509,
      "text": "and if you know your calculus uh l is d",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 510,
      "text": "and if you know your calculus uh l is d times f",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 511,
      "text": "so what is d l by d",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 512,
      "text": "d it would times f",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 513,
      "text": "so what is d l by d",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 514,
      "text": "d it would times f",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 515,
      "text": "so what is d l by d",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 516,
      "text": "d it would be f be f be f",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 517,
      "text": "and if you don't believe me we can also and if you don't believe me we can also and if you don't believe me we can also just derive it because the proof would just derive it because the proof would just derive it because the proof would be fairly straightforward uh we go to be fairly straightforward uh we go to be fairly straightforward uh we go to the the definition of the derivative which is f definition of the derivative which is f definition of the derivative which is f of x plus h minus f of x divide h of x plus h minus f of x divide h of x plus h minus f of x divide h as a limit limit of h goes to zero of as a limit limit of h goes to zero of as a limit limit of h goes to zero of this kind of expression",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 518,
      "text": "so when we have this kind of expression so when we have this kind of expression so when we have l is d times f l is d times f l is d times f then increasing d by h then increasing d by h then increasing d by h would give us the output of b plus h would give us the output of b plus h would give us the output of b plus h times f times f times f",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 519,
      "text": "that's basically f of x",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 520,
      "text": "plus",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 521,
      "text": "h right that's basically f of x plus",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 522,
      "text": "h right that's basically f of x plus h right minus d times f minus d times f minus d times",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 523,
      "text": "f",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 524,
      "text": "and then divide h and symbolically and then divide h and symbolically and then divide h and symbolically expanding out here we would have expanding out here we would have expanding out here we would have basically d times f plus h times f minus basically d times f plus h times f minus basically d times f plus h times f minus t times f divide h t times f divide h t times f divide",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 525,
      "text": "h",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 526,
      "text": "and then you see how the df minus df",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 527,
      "text": "and then you see how the df minus df",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 528,
      "text": "and then you see how the df minus df cancels so you're left with h times f cancels",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 529,
      "text": "so you're left with h times f cancels so you're left with h times f divide h divide h divide h which is f which is f which is f so in the limit as h goes to zero of so in the limit as h goes to zero of so in the limit as h goes to zero of you know you know you know derivative derivative derivative definition we just get f in the case of definition we just get f in the case of definition we just get f in the case of d times f d",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 530,
      "text": "times f d times f",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 531,
      "text": "so so symmetrically symmetrically symmetrically dl by d dl by d dl by d f will just be d",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 532,
      "text": "f will just be d",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 533,
      "text": "f will just be d",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 534,
      "text": "so what we have is that f dot grad so what we have is that f dot grad so what we have is that f dot grad we see now is just the value of d",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 535,
      "text": "we see now is just the value of d",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 536,
      "text": "we see now is just the value of d which is 4.",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 537,
      "text": "and we see that",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 538,
      "text": "and we see that d dot grad d dot grad d dot grad is just uh the value of f and so the value of f is negative two",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 539,
      "text": "and so the value of f is negative two",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 540,
      "text": "so we'll set those manually let me erase this markdown node and then let me erase this markdown node and then let's redraw what we have",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 541,
      "text": "okay",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 542,
      "text": "and let's just make sure that these were and let's just make sure that these were and let's just make sure that these were correct so we seem to think that dl by correct",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 543,
      "text": "so we seem to think that dl by correct",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 544,
      "text": "so we seem to think that dl by dd is negative two",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 545,
      "text": "so let's double check dd is negative two",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 546,
      "text": "so let's double check dd is negative two",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 547,
      "text": "so let's double check um let me erase this plus h from before um let me erase this plus h from before um let me erase this plus h from before",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 548,
      "text": "and now we want the derivative with and now we want the derivative with and now we want the derivative with respect to f respect to f respect to f",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 549,
      "text": "so let's just come here when i create f",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 550,
      "text": "so let's just come here when i create f",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 551,
      "text": "so let's just come here when i create f and let's do a plus h here and this and let's do a",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 552,
      "text": "plus h here and this and let's do a plus h here and this should print the derivative of l with should print the derivative of l with should print the derivative of l with respect to f",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 553,
      "text": "so we expect to see four respect to f",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 554,
      "text": "so we expect to see four respect to f",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 555,
      "text": "so we expect to see four",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 556,
      "text": "yeah",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 557,
      "text": "and this is four up to floating",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 558,
      "text": "yeah",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 559,
      "text": "and this is four up to floating",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 560,
      "text": "yeah",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 561,
      "text": "and this is four up to floating point point point funkiness funkiness funkiness and then dl by dd and then dl by dd",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 562,
      "text": "and then dl by dd should be f which is negative two should be f which is negative two should be f which is negative two grad is negative two grad is negative two grad is negative two",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 563,
      "text": "so if we again come here and we change d",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 564,
      "text": "d dot data plus equals h right here d dot data plus equals h right here",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 565,
      "text": "so we expect so we've added a little h",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 566,
      "text": "so we expect so we've added a little h",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 567,
      "text": "so we expect so we've added a little h",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 568,
      "text": "and then we see how l changed and we",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 569,
      "text": "and then we see how l changed and we",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 570,
      "text": "and then we see how l changed and we expect to print expect to print expect to print uh negative two uh negative two uh negative two there we go so we've numerically verified what we're so we've numerically verified what we're doing here is what kind of like an doing here is what kind of like an doing here is what kind of like an inline gradient check gradient check is inline gradient check gradient check is inline gradient check gradient check is when we when we when we are deriving this like back propagation are deriving this like back propagation are deriving this like back propagation and getting the derivative with respect and getting the derivative with respect and getting the derivative with respect to all the intermediate results and then to all the intermediate results and then to all the intermediate results and then numerical gradient is just you know numerical gradient is just you know numerical gradient is just you know estimating it using small step size estimating it using small step size estimating it using small step size now we're getting to the crux of now we're getting to the crux of now we're getting to the crux of backpropagation",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 571,
      "text": "so this will be the most backpropagation so this will be the most backpropagation",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 572,
      "text": "so this will be the most important node to understand because if important node to understand because if important node to understand because if you understand the gradient for this you understand the gradient for this you understand the gradient for this node you understand all of back node you understand all of back node you understand all of back propagation and all of training of propagation and all of training of propagation and all of training of neural nets basically neural nets basically neural nets basically so we need to derive dl by bc so we need to derive dl by bc so we need to derive dl by bc in other words the derivative of l with in other words the derivative of l with in other words the derivative of l with respect to c respect to c respect to c because we've computed all these other because we've computed all these other because we've computed all these other gradients already gradients already gradients already now we're coming here and we're now we're coming here and we're now we're coming here and we're continuing the back propagation manually continuing the back propagation manually continuing the back propagation manually so we want dl by dc",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 573,
      "text": "and then we'll also so we want dl by dc",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 574,
      "text": "and then we'll also so we want dl by dc",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 575,
      "text": "and then we'll also derive dl by de derive dl by de derive dl by de now here's the problem now here's the problem now here's the problem how do we derive dl how do we derive dl how do we derive dl by dc by dc by dc we actually know the derivative l with we actually know the derivative l with we actually know the derivative l with respect to",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 576,
      "text": "d",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 577,
      "text": "so we know how l assessed respect to d",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 578,
      "text": "so we know how l assessed respect to d",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 579,
      "text": "so we know how l assessed it to d it to d it to d",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 580,
      "text": "but how is l sensitive to c",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 581,
      "text": "so if we but how is l sensitive to c so if we but how is l sensitive to c so if we wiggle c how does that impact l wiggle c how does that impact l wiggle c how does that impact l through d through d through d",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 582,
      "text": "so we know dl by dc",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 583,
      "text": "and we also here know how c impacts d",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 584,
      "text": "and we also here know how c impacts d",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 585,
      "text": "and so just very intuitively if you know",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 586,
      "text": "and so just very intuitively if you know",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 587,
      "text": "and so just very intuitively if you know the impact that c is having on d and the the impact that c is having on d and the the impact that c is having on d and the impact that d is having on l impact that d is having on l impact that d is having on l then you should be able to somehow put then you should be able to somehow put then you should be able to somehow put that information together to figure out that information together to figure out that information together to figure out how c impacts l how c impacts l how c impacts l and indeed this is what we can actually and indeed this is what we can actually and indeed this is what we can actually do so in particular we know just do so in particular we know just do so in particular we know just concentrating on",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 588,
      "text": "d first let's look at concentrating on",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 589,
      "text": "d first let's look at concentrating on",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 590,
      "text": "d first let's look at how what is the derivative basically of how what is the derivative basically of how what is the derivative basically of d with respect to c so in other words d with respect to c so in other words d with respect to c so in other words what is dd by dc",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 591,
      "text": "so here we know that d is c times c",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 592,
      "text": "plus so here we know that d is c times c plus e e e that's what we know",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 593,
      "text": "and now we're that's what we know",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 594,
      "text": "and now we're that's what we know",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 595,
      "text": "and now we're interested in dd by dc interested in dd by dc interested in dd by dc if you just know your calculus again",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 596,
      "text": "and if you just know your calculus again and if you just know your calculus again and you remember that differentiating c",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 597,
      "text": "plus you remember that differentiating c plus you remember that differentiating c plus e with respect to c you know that that e with respect to c you know that that e with respect to c you know that that gives you gives you gives you 1.0 1.0 1.0 and we can also go back to the basics and we can also go back to the basics and we can also go back to the basics and derive this because again we can go and derive this because again we can go and derive this because again we can go to our f of x plus h minus f of x to our f of x plus h minus f of x to our f of x plus h minus f of x divide by h divide by h divide by h that's the definition of a derivative as that's the definition of a derivative as that's the definition of a derivative as h goes to zero h goes to zero h goes to zero and",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 598,
      "text": "so here and so here and so here focusing on c and its effect on d focusing on c and its effect on d focusing on c and its effect on d we can basically do the f of x plus",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 599,
      "text": "h we can basically do the f of x",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 600,
      "text": "plus h we can basically do the f of x plus h will be will be will be c is incremented by h plus e c is incremented by h plus e c is incremented by h plus e that's the first evaluation of our that's the first evaluation of our that's the first evaluation of our function minus function minus function minus c plus e c plus e c plus e and then divide h and then divide h and then divide h",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 601,
      "text": "and so what is this",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 602,
      "text": "and so what is this",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 603,
      "text": "and so what is this uh just expanding this out this will be uh just expanding this out this will be uh just expanding this out this will be c plus h plus e minus c minus e c plus h plus e minus c minus e c plus h plus e minus c minus e divide",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 604,
      "text": "h",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 605,
      "text": "and then you see here how c divide h",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 606,
      "text": "and then you see here how c divide h",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 607,
      "text": "and then you see here how c minus c cancels e minus e cancels we're minus c cancels e minus e cancels we're minus c cancels e minus e cancels we're left with h over h which is 1.0 left with h over h which is 1.0 left with h over h which is 1.0 and so and so and so by symmetry also d",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 608,
      "text": "d by d by symmetry also d",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 609,
      "text": "d by d by symmetry also d",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 610,
      "text": "d by d e e will be 1.0 as well will be 1.0 as well will be 1.0 as well so basically the derivative of a sum so basically the derivative of a sum so basically the derivative of a sum expression is very simple and and this expression is very simple and and this expression is very simple and and this is the local derivative",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 611,
      "text": "so i call this is the local derivative",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 612,
      "text": "so i call this is the local derivative",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 613,
      "text": "so i call this the local derivative because we have the the local derivative because we have the the local derivative because we have the final output value all the way at the final output value all the way at the final output value all the way at the end of this graph and we're now like a end of this graph and we're now like a end of this graph and we're now like a small node here small node here small node here",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 614,
      "text": "and this is a little plus node and this is a little plus node and this is a little plus node and it the little plus node doesn't know and it the little plus node doesn't know and it the little plus node doesn't know anything about the rest of the graph anything about the rest of the graph anything about the rest of the graph that it's embedded in all it knows is that it's embedded in all it knows",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 615,
      "text": "is that it's embedded in all it knows is that it did a plus it took a c and an e that it did a plus it took a c and an e that it did a plus it took a c and an e added them and created d added them and created d added them and created d",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 616,
      "text": "and this plus note also knows the local and this plus note also knows the local and this plus note also knows the local influence of c on d or rather rather the influence of c on d or rather rather the influence of c on d or rather rather the derivative of d with respect to c",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 617,
      "text": "and it derivative of d with respect to c",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 618,
      "text": "and it derivative of d with respect to c",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 619,
      "text": "and it also also also knows the derivative of d with respect knows the derivative of d with respect knows the derivative of d with respect to e",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 620,
      "text": "but that's not what we want that's to e",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 621,
      "text": "but that's not what we want that's to e",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 622,
      "text": "but that's not what we want that's just a local derivative",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 623,
      "text": "what we actually just a local derivative what we actually just a local derivative what we actually want is d l by d",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 624,
      "text": "c and l could l is here want is",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 625,
      "text": "d l by d",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 626,
      "text": "c and l could l is here want is",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 627,
      "text": "d l by d",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 628,
      "text": "c and l could l is here just one step away but in a general case just one step away but in a general case just one step away but in a general case this little plus note is could be this little plus note is could be this little plus note is could be embedded in like a massive graph embedded in like a massive graph embedded in like a massive graph",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 629,
      "text": "so so again we know how l impacts d",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 630,
      "text": "and now we again we know how l impacts d",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 631,
      "text": "and now we again we know how l impacts d",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 632,
      "text": "and now we know how c and e impact",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 633,
      "text": "d how do we put know how c and e impact",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 634,
      "text": "d how do we put know how c and e impact",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 635,
      "text": "d how do we put that information together to write dl by that information together to write dl by that information together to write dl by dc and the answer of course is the chain dc and the answer of course is the chain dc and the answer of course is the chain rule in calculus rule in calculus rule in calculus",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 636,
      "text": "and so um and so um and so um i pulled up a chain rule here from i pulled up a chain rule here from i pulled up a chain rule here from kapedia kapedia kapedia and and i'm going to go through",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 637,
      "text": "this very",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 638,
      "text": "i'm going to go through",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 639,
      "text": "this very",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 640,
      "text": "i'm going to go through this very briefly so chain rule briefly",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 641,
      "text": "so chain rule briefly so chain rule wikipedia sometimes can be very wikipedia sometimes can be very wikipedia sometimes can be very confusing and calculus can confusing and calculus can confusing and calculus can can be very confusing like this is the can be very confusing like this is the can be very confusing like this is the way i way i way i learned learned learned chain rule and it was very confusing chain rule and it was very confusing chain rule and it was very confusing like what is happening it's just like what is happening it's just like what is happening it's just complicated",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 642,
      "text": "so i like this expression complicated",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 643,
      "text": "so i like this expression complicated",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 644,
      "text": "so i like this expression much better much better much better if a variable z depends on a variable y if a variable z depends on a variable y if a variable z depends on a variable y which itself depends on the variable x which itself depends on the variable x which itself depends on the variable x then z depends on x as well obviously then z depends on x as well obviously then z depends on x as well obviously through the intermediate variable y through the intermediate variable y through the intermediate variable y in this case the chain rule is expressed in this case the chain rule is expressed in this case the chain rule is expressed as as as if you want dz by dx if you want dz by dx if you want dz by dx then you take the dz by dy",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 645,
      "text": "and you then you take the dz by dy",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 646,
      "text": "and you then you take the dz by dy",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 647,
      "text": "and you multiply it by d y by dx multiply it by d",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 648,
      "text": "y",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 649,
      "text": "by dx multiply it by d y by dx",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 650,
      "text": "so the chain rule fundamentally is so the chain rule fundamentally is so the chain rule fundamentally is telling you telling you telling you how how how we chain these we chain these we chain these uh derivatives together uh derivatives together uh derivatives together correctly so to differentiate through a correctly so to differentiate through a correctly so to differentiate through a function composition function composition function composition we have to apply a multiplication we have to apply a multiplication we have to apply a multiplication of of of those derivatives those derivatives those derivatives so that's really what chain rule is so that's really what chain rule is so that's really what chain rule is telling us telling us and there's a nice little intuitive and there's a nice little intuitive and there's a nice little intuitive explanation here which i also think is explanation here which i also think is explanation here which i also think is kind of cute the chain rule says that kind of cute the chain rule says that kind of cute the chain rule says that knowing the instantaneous rate of change knowing the instantaneous rate of change knowing the instantaneous rate of change of z with respect to y and y relative to of z with respect to y and y relative to of z with respect to y and y relative to x allows one to calculate the x allows one to calculate the x allows one to calculate the instantaneous rate of change of z instantaneous rate of change of z instantaneous rate of change of z relative to x relative to x relative to x as a product of those two rates of as a product of those two rates of as a product of those two rates of change change change simply the product of those two simply the product of those two simply the product of those two so here's a good one",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 651,
      "text": "so here's a good one",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 652,
      "text": "so here's a good one if a car travels twice as fast as if a car travels twice as fast as if a car travels twice as fast as bicycle and the bicycle is four times as bicycle and the bicycle is four times as bicycle and the bicycle is four times as fast as walking man fast as walking man fast as walking man then the car travels two times four then the car travels two times four then the car travels two times four eight times as fast as demand eight times as fast as demand eight times as fast as demand and so this makes it very clear that the and so this makes it very clear that the and so this makes it very clear that the correct thing to do sort of correct thing to do sort of correct thing to do sort of is to multiply is to multiply is to multiply so so cars twice as fast as bicycle and cars twice as fast as bicycle and cars twice as fast as bicycle and bicycle is four times as fast as man bicycle is four times as fast as man bicycle is four times as fast as man",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 653,
      "text": "so the car will be eight times as fast so the car will be eight times as fast so the car will be eight times as fast as the man",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 654,
      "text": "and so we can take these as the man",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 655,
      "text": "and so we can take these as the man",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 656,
      "text": "and so we can take these intermediate rates of change if you will intermediate rates of change if you will intermediate rates of change if you will and multiply them together and multiply them together and multiply them together and that justifies the and that justifies the and that justifies the chain rule intuitively so have a look at chain rule intuitively so have a look at chain rule intuitively so have a look at chain rule about here really what it chain rule about here really what it chain rule about here really what it means for us is there's a very simple means for us is there's a very simple means for us is there's a very simple recipe for deriving what we want which recipe for deriving what we want which recipe for deriving what we want which is dl by dc is dl by dc is dl by dc and what we have so far and what we have so far and what we have so far is we know is",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 657,
      "text": "we know is we know want want want",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 658,
      "text": "and we know",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 659,
      "text": "and we know",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 660,
      "text": "and we know what is the what is the what is the impact of d on l",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 661,
      "text": "so we know d l by impact of d on l",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 662,
      "text": "so we know d l by impact of d on l",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 663,
      "text": "so we know d l by d",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 664,
      "text": "d the derivative of l with respect to d",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 665,
      "text": "d the derivative of l with respect to d",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 666,
      "text": "d the derivative of l with respect to d",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 667,
      "text": "d we know that that's negative two",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 668,
      "text": "d d",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 669,
      "text": "we know that that's negative two",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 670,
      "text": "d d",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 671,
      "text": "we know that that's negative two and now because of this local and now because of this local and now because of this local reasoning that we've done here we know reasoning that we've done here we know reasoning that we've done here we know dd by d dd by d dd by d",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 672,
      "text": "c c",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 673,
      "text": "so how does c impact d and in so how does c impact d and in so how does c impact d and in particular this is a plus node so the particular this is a plus node so the particular this is a plus node so the local derivative is simply 1.0 it's very local derivative is simply 1.0 it's very local derivative is simply 1.0 it's very simple simple simple and so and so the chain rule tells us that dl by dc the chain rule tells us that dl by dc the chain rule tells us that dl by dc going through this intermediate variable going through this intermediate variable going through this intermediate variable will just be simply d l by will just be simply d l by will just be simply d l by d",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 674,
      "text": "d times dd by dc dd by dc that's chain rule that's chain rule that's chain rule",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 675,
      "text": "so this is identical to what's happening so this is identical to what's happening so this is identical to what's happening here here except except except z is rl z is rl z is rl y is our d and x is rc y is our d and x is rc y is our d and x is rc",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 676,
      "text": "so we literally just have to multiply",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 677,
      "text": "so we literally just have to multiply",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 678,
      "text": "so we literally just have to multiply these these these and because these local derivatives like dd by dc these local derivatives like dd by dc are just one are just one are just one we basically just copy over dl by dd we basically just copy over dl by dd we basically just copy over dl by dd because this is just times one because this is just times one because this is just times one",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 679,
      "text": "so what does it do so because dl by dd",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 680,
      "text": "so what does it do so because dl by dd",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 681,
      "text": "so what does it do so because dl by dd is negative two what is dl by dc is negative two",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 682,
      "text": "what is dl by dc is negative two what is dl by dc",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 683,
      "text": "well it's the local gradient 1.0 times",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 684,
      "text": "well it's the local gradient 1.0 times",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 685,
      "text": "well it's the local gradient 1.0 times dl by dd which is negative two dl by dd which is negative two dl by dd which is negative two so literally",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 686,
      "text": "what a plus node does you so literally",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 687,
      "text": "what a plus node does you so literally",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 688,
      "text": "what a plus node does you can look at it that way is it literally can look at it that way is it literally can look at it that way is it literally just routes the gradient just routes the gradient just routes the gradient because the plus nodes local derivatives because the plus nodes local derivatives because the plus nodes local derivatives are just one and so in the chain rule are just one and so in the chain rule are just one and so in the chain rule one times one times one times dl by dd dl by dd dl by dd is um is um is um is uh is just dl by dd and so that is uh is just dl by dd and so that is uh is just dl by dd and so that derivative just gets routed to both c derivative just gets routed to both c derivative just gets routed to both c and to e in this case and to e in this case and to e in this case so basically um we have that that grad",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 689,
      "text": "so basically um we have that that grad",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 690,
      "text": "so basically um we have that that grad or let's start with c since that's the or let's start with c since that's the or let's start with c since that's the one we looked at one we looked at one we looked at is is is negative",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 691,
      "text": "two times one negative two times one negative two times one negative two negative two negative two and in the same way by symmetry e",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 692,
      "text": "that and in the same way by symmetry e that and in the same way by symmetry e that grad will be negative two that's the grad will be negative two that's the grad will be negative two that's the claim so we can set those claim so we can set those claim so we can set those we can redraw we can redraw we can redraw and you see how we just assign negative and you see how we just assign negative and you see how we just assign negative to negative two",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 693,
      "text": "so this backpropagating to negative two so this backpropagating to negative two so this backpropagating signal which is carrying the information signal which is carrying the information signal which is carrying the information of like what is the derivative of l with of like what is the derivative of l with of like what is the derivative of l with respect to all the intermediate nodes respect to all the intermediate nodes respect to all the intermediate nodes we can imagine it almost like flowing we can imagine it almost like flowing we can imagine it almost like flowing backwards through the graph and a plus backwards through the graph and a plus backwards through the graph and a plus node will simply distribute the node will simply distribute the node will simply distribute the derivative to all the leaf nodes sorry derivative to all the leaf nodes sorry derivative to all the leaf nodes sorry to all the children nodes of it to all the children nodes of it to all the children nodes of it",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 694,
      "text": "so this is the claim and now let's so this is the claim and now let's so this is the claim and now let's verify it so let me remove the plus h verify it",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 695,
      "text": "so let me remove the plus h verify it so let me remove the plus h here from before here from before here from before and now instead what we're going to do and now instead what we're going to do and now instead what we're going to do is we're going to increment",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 696,
      "text": "c",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 697,
      "text": "so c dot is we're going to increment c",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 698,
      "text": "so c dot is we're going to increment c",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 699,
      "text": "so c dot data will be credited by h data will be credited by h data will be credited by h and when i run this we expect to see and when i run this we expect to see and when i run this we expect to see negative 2 negative 2 negative 2 negative 2.",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 700,
      "text": "and then of course for e negative 2.",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 701,
      "text": "and then of course for e negative 2.",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 702,
      "text": "and then of course for e so e dot data plus equals h",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 703,
      "text": "and we so e dot data plus equals h",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 704,
      "text": "and we so e dot data plus equals h",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 705,
      "text": "and we expect to see negative 2.",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 706,
      "text": "expect to see negative 2. expect to see negative 2.",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 707,
      "text": "simple so those are the derivatives of these so those are the derivatives of these internal nodes internal nodes and now we're going to recurse our way and now we're going to recurse our way and now we're going to recurse our way backwards again backwards again backwards again and we're again going to apply the chain and we're again going to apply the chain and we're again going to apply the chain rule so here we go our second rule so here we go our second rule so here we go our second application of chain rule and we will application of chain rule and we will application of chain rule and we will apply it all the way through the graph apply it all the way through the graph apply it all the way through the graph we just happen to only have one more we just happen to only have one more we just happen to only have one more node remaining node remaining node remaining we have that",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 708,
      "text": "d l we have that",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 709,
      "text": "d l we have that d l by d e by d e by d e as we have just calculated is negative as we have just calculated is negative as we have just calculated is negative two",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 710,
      "text": "so we know that two",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 711,
      "text": "so we know that two",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 712,
      "text": "so we know that so we know the derivative of l with so we know the derivative of l with so we know the derivative of l with respect to e",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 713,
      "text": "and now we want dl",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 714,
      "text": "and now we want dl by by by da da da",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 715,
      "text": "right right and the chain rule is telling us that and the chain rule is telling us that and the chain rule is telling us that that's just dl by de negative",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 716,
      "text": "2 times the local gradient so what is the times the local gradient",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 717,
      "text": "so what is the times the local gradient",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 718,
      "text": "so what is the local gradient basically d e local gradient basically d e local gradient basically d e by d a by d a by d a we have to look at that we have to look at that we have to look at that",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 719,
      "text": "so i'm a little times node",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 720,
      "text": "so i'm a little times node",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 721,
      "text": "so i'm a little times node inside a massive graph inside a massive graph inside a massive graph",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 722,
      "text": "and i only know that i did a times b",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 723,
      "text": "and and i only know that i did a times b",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 724,
      "text": "and and i only know that i did a times b",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 725,
      "text": "and i produced an e i produced an e i produced an e so now what is d e by d",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 726,
      "text": "a and d e by d b",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 727,
      "text": "so now what is d e by d a and d e by d b",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 728,
      "text": "so now what is d e by d a and d e by d b that's the only thing",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 729,
      "text": "that i sort of that's the only thing",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 730,
      "text": "that i sort of that's the only thing that i sort of know about that's my local gradient know about that's my local gradient know about that's my local gradient",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 731,
      "text": "so so because we have that e's a times b",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 732,
      "text": "we're because we have that e's a times b we're because we have that e's a times b we're asking what is d e by d a asking what is d e by d a asking what is d e by d",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 733,
      "text": "a and of course we just did that here we and of course we just did that here we and of course we just did that here we had a had a had a times",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 734,
      "text": "so i'm not going to rederive it times",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 735,
      "text": "so i'm not going to rederive it times",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 736,
      "text": "so i'm not going to rederive it",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 737,
      "text": "but if you want to differentiate this but if you want to differentiate this but if you want to differentiate this with respect to a you'll just get b with respect to a you'll just get b with respect to a you'll just get b right the value of b right the value of b right the value of b which in this case is negative 3.0 so basically we have that dl by da basically we have that dl by da basically we have that dl by da",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 738,
      "text": "well let me just do it right here we well let me just do it right here we well let me just do it right here we have that a dot grad",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 739,
      "text": "and we are applying have that a dot grad",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 740,
      "text": "and we are applying have that a dot grad",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 741,
      "text": "and we are applying chain rule here chain rule here chain rule here is d l by d e which we see here is is",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 742,
      "text": "d l by d e which we see here is is d l by d e which we see here is negative two negative two times times what is d e by d",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 743,
      "text": "a what is d e by d",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 744,
      "text": "a what is d e by d a",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 745,
      "text": "it's the value of b which is negative 3.",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 746,
      "text": "and then we have b grad is again dl by",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 747,
      "text": "and then we have b grad is again dl by de de de which is negative 2 which is negative 2 which is negative 2 just the same way just the same way just the same way times times what is d e by d",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 748,
      "text": "what is d e by d",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 749,
      "text": "what is d e by d",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 750,
      "text": "um db um db um db is the value of a which is 2.2.0 is the value of a which is 2.2.0 is the value of a which is 2.2.0 as the value of a as the value of a as the value of a so these are our claimed derivatives so these are our claimed derivatives so these are our claimed derivatives let's let's let's redraw redraw redraw and we see here",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 751,
      "text": "that",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 752,
      "text": "and we see here that",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 753,
      "text": "and we see here that a dot grad turns out to be 6 because a dot grad turns out to be 6 because a dot grad turns out to be 6 because that is negative 2 times negative 3 that is negative 2 times negative 3 that is negative 2 times negative 3 and b dot grad is negative 4 and b dot grad is negative 4 and b dot grad is negative 4 times sorry is negative 2 times 2 which times sorry is negative 2 times 2 which times sorry is negative 2 times 2 which is negative 4. is negative 4. is negative 4.",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 754,
      "text": "so those are our claims let's delete so those are our claims let's delete so those are our claims let's delete this and let's verify them this and let's verify them this and let's verify them we have we have we have a here a dot data plus equals h so the claim is that so the claim is that a dot grad is six a dot grad is six a dot grad is six let's verify let's verify let's verify six six six and we have beta data and we have beta data and we have beta data plus equals h plus equals h plus equals h so nudging b by h so nudging b by h so nudging b by h and looking at what happens and looking at what happens and looking at what happens we claim it's negative four we claim it's negative four we claim it's negative four",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 755,
      "text": "and indeed it's negative four plus minus",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 756,
      "text": "and indeed it's negative four plus minus",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 757,
      "text": "and indeed it's negative four plus minus again float oddness again float oddness again float oddness um um and uh and uh and uh that's it this",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 758,
      "text": "that's it this that's it this that was the manual that was the manual that was the manual back propagation back propagation back propagation uh all the way from here to all the leaf uh all the way from here to all the leaf uh all the way from here to all the leaf nodes and we've done it piece by piece nodes and we've done it piece by piece nodes and we've done it piece by piece and really all we've done is as you saw and really all we've done is as you saw and really all we've done is as you saw we iterated through all the nodes one by we iterated through all the nodes one by we iterated through all the nodes one by one and locally applied the chain rule one and locally applied the chain rule one and locally applied the chain rule we always know what is the derivative of we always know what is the derivative of we always know what is the derivative of l with respect to this little output and l with respect to this little output and l with respect to this little output",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 759,
      "text": "and then we look at how this output was then we look at how this output was then we look at how this output was produced this output was produced produced this output was produced produced this output was produced through some operation and we have the through some operation and we have the through some operation and we have the pointers to the children nodes of this pointers to the children nodes of this pointers to the children nodes of this operation operation operation and so in this little operation we know",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 760,
      "text": "and so in this little operation we know",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 761,
      "text": "and so in this little operation we know what the local derivatives are and we what the local derivatives are and we what the local derivatives are and we just multiply them onto the derivative just multiply them onto the derivative just multiply them onto the derivative",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 762,
      "text": "always always always so we just go through and recursively so we just go through and recursively so we just go through and recursively multiply on the local derivatives and multiply on the local derivatives and multiply on the local derivatives and that's what back propagation is is just that's what back propagation is is just that's what back propagation is is just a recursive application of chain rule a recursive application of chain rule a recursive application of chain rule backwards through the computation graph backwards through the computation graph backwards through the computation graph let's see this power in action just very let's see this power in action just very let's see this power in action just very briefly what we're going to do is we're briefly what we're going to do is we're briefly what we're going to do is we're going to going to going to nudge our inputs to try to make l go up nudge our inputs to try to make l go up nudge our inputs to try to make l go up so in particular what we're doing is we so in particular what we're doing is we so in particular what we're doing is we want a.data we're going to change it want a.data we're going to change it want a.data we're going to change it and if we want l to go up that means we and if we want l to go up that means we and if we want l to go up that means we just have to go in the direction of the just have to go in the direction of the just have to go in the direction of the gradient so gradient so gradient",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 763,
      "text": "so a a should increase in the direction of should increase in the direction of should increase in the direction of gradient by like some small step amount gradient by like some small step amount gradient by like some small step amount this is the step size this is the step size this is the step size and we don't just want this for ba",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 764,
      "text": "but and we don't just want this for ba",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 765,
      "text": "but and we don't just want this for ba",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 766,
      "text": "but also for b also for c also for c also for f also for f also for f those are those are those are leaf nodes which we usually have control leaf nodes which we usually have control leaf nodes which we usually have control over over over and if we nudge in direction of the",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 767,
      "text": "and if we nudge in direction of the",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 768,
      "text": "and if we nudge in direction of the gradient we expect a positive influence gradient we expect a positive influence gradient we expect a positive influence on l on l on l",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 769,
      "text": "so we expect l to go up so we expect l to go up so we expect l to go up positively positively positively so it should become less negative it",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 770,
      "text": "so it should become less negative it",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 771,
      "text": "so it should become less negative it should go up to say negative you know should go up to say negative you know should go up to say negative you know six or something like that six or something like that six or something like that",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 772,
      "text": "uh it's hard to tell exactly and we'd uh it's hard to tell exactly and we'd uh it's hard to tell exactly and we'd have to rewrite the forward pass so let have to rewrite the forward pass so let have to rewrite the forward pass so let me",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 773,
      "text": "just um me just um me just um do that here do that here do that here um this would be the forward pass f would this would be the forward pass f would be unchanged this is effectively the be unchanged this is effectively the be unchanged this is effectively the forward pass and now if we print l.data forward pass and now if we print l.data forward pass and now if we print l.data we expect because we nudged all the we expect because we nudged all the we expect because we nudged all the values all the inputs in the rational values all the inputs in the rational values all the inputs in the rational gradient we expected a less negative l gradient we expected a less negative l gradient we expected a less negative l we expect it to go up we expect it to go up we expect it to go up",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 774,
      "text": "so maybe it's negative six or so let's",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 775,
      "text": "so maybe it's negative six or so let's",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 776,
      "text": "so maybe it's negative six or so let's see what happens see what happens see what happens",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 777,
      "text": "okay negative seven",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 778,
      "text": "okay negative seven okay negative seven",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 779,
      "text": "and uh this is basically one step of an and uh this is basically one step of an",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 780,
      "text": "and uh this is basically one step of an optimization that we'll end up running optimization that we'll end up running optimization that we'll end up running and really does gradient just give us and really does gradient just give us and really does gradient just give us some power because we know how to some power because we know how to some power because we know how to influence the final outcome and this influence the final outcome and this influence the final outcome and this will be extremely useful for training will be extremely useful for training will be extremely useful for training knowledge as well as you'll see knowledge as well as you'll see knowledge as well as you'll see",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 781,
      "text": "so now i would like to do one more uh",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 782,
      "text": "so now i would like to do one more uh",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 783,
      "text": "so now i would like to do one more uh example of manual backpropagation using example of manual backpropagation using example of manual backpropagation using a bit more complex and uh useful example a bit more complex and uh useful example a bit more complex and uh useful example we are going to back propagate through a we are going to back propagate through a we are going to back propagate through a neuron neuron neuron",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 784,
      "text": "so so we want to eventually build up neural we want to eventually build up neural we want to eventually build up neural networks and in the simplest case these networks and in the simplest case these networks and in the simplest case these are multilateral perceptrons as they're are multilateral perceptrons as they're are multilateral perceptrons as they're called so this is a two layer neural net called so this is a two layer neural net called so this is a two layer neural net and it's got these hidden layers made up and it's got these hidden layers made up and it's got these hidden layers made up of neurons and these neurons are fully of neurons and these neurons are fully of neurons and these neurons are fully connected to each other connected to each other connected to each other now biologically neurons are very now biologically neurons are very now biologically neurons are very complicated devices but we have very complicated devices but we have very complicated devices but we have very simple mathematical models of them simple mathematical models of them simple mathematical models of them",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 785,
      "text": "and so this is a very simple",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 786,
      "text": "and so this is a very simple",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 787,
      "text": "and so this is a very simple mathematical model of a neuron you have mathematical model of a neuron you have mathematical model of a neuron you have some inputs axis some inputs axis some inputs axis",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 788,
      "text": "and then you have these synapses that",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 789,
      "text": "and then you have these synapses that",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 790,
      "text": "and then you have these synapses that have weights on them so have weights on them so have weights on them so the w's are weights the w's are weights the w's are weights and then and then the synapse interacts with the input to the synapse interacts with the input to the synapse interacts with the input to this neuron multiplicatively",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 791,
      "text": "so what this neuron multiplicatively so",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 792,
      "text": "what this neuron multiplicatively so what flows to the cell body flows to the cell body flows to the cell body of this neuron is w times x of this neuron is w times x of this neuron is w times x",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 793,
      "text": "but there's multiple inputs so there's but there's multiple inputs so there's but there's multiple inputs so there's many w times x's flowing into the cell many w times x's flowing into the cell many w times x's flowing into the cell body body body the cell body then has also like some the cell body then has also like some the cell body then has also like some bias bias bias",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 794,
      "text": "so this is kind of like the so this is kind of like the so this is kind of like the inert innate sort of trigger happiness inert innate sort of trigger happiness inert innate sort of trigger happiness of this neuron so this bias can make it of this neuron",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 795,
      "text": "so this bias can make it of this neuron so this bias can make it a bit more trigger happy or a bit less a bit more trigger happy or a bit less a bit more trigger happy or a bit less trigger happy regardless of the input trigger happy regardless of the input trigger happy regardless of the input but basically we're taking all the w but basically we're taking all the w but basically we're taking all the w times x times x times x of all the inputs adding the bias and of all the inputs adding the bias and of all the inputs adding the bias and then we take it through an activation then we take it through an activation then we take it through an activation function function and this activation function is usually and this activation function is usually and this activation function is usually some kind of a squashing function some kind of a squashing function some kind of a squashing function like a sigmoid or 10h or something like like a sigmoid or 10h or something like like a sigmoid or 10h or something like that",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 796,
      "text": "so as an example that so as an example that so as an example we're going to use the 10h in this we're going to use the 10h in this we're going to use the 10h in this example example example numpy has a numpy has a numpy has a np.10h np.10h np.10h",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 797,
      "text": "so so we can call it on a range we can call it on a range we can call it on a range and we can plot it and we can plot it and we can plot it this is the 10h function",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 798,
      "text": "and you see this is the 10h function and you see this is the 10h function and you see that the inputs as they come in that the inputs as they come in that the inputs as they come in get squashed on the y coordinate here so get squashed on the y coordinate here so get squashed on the y coordinate here",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 799,
      "text": "so um um right at zero we're going to get exactly right at zero we're going to get exactly right at zero we're going to get exactly zero",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 800,
      "text": "and then as you go more positive in zero and then as you go more positive in zero and then as you go more positive in the input the input the input then you'll see that the function will then you'll see that the function will then you'll see that the function will only go up to one and then plateau out only go up to one and then plateau out only go up to one and then plateau out",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 801,
      "text": "and so if you pass in very positive",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 802,
      "text": "and so if you pass in very positive",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 803,
      "text": "and so if you pass in very positive inputs we're gonna cap it smoothly at inputs we're gonna cap it smoothly at inputs we're gonna cap it smoothly at one and on the negative side we're gonna one and on the negative side we're gonna one and on the negative side we're gonna cap it smoothly to negative one cap it smoothly to negative one cap it smoothly to negative one",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 804,
      "text": "so that's 10h so that's 10h",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 805,
      "text": "so that's 10h and that's the squashing function or an",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 806,
      "text": "and that's the squashing function or an",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 807,
      "text": "and that's the squashing function or an activation function and what comes out activation function and what comes out activation function and what comes out of this neuron is just the activation of this neuron is just the activation of this neuron is just the activation function applied to the dot product of function applied to the dot product of function applied to the dot product of the weights and the the weights and the the weights and the inputs inputs inputs so let's so let's so let's write one out write one out write one out um um i'm going to copy paste because i don't want to type too much i don't want to type too much",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 808,
      "text": "but okay",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 809,
      "text": "so here we have the inputs",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 810,
      "text": "but okay",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 811,
      "text": "so here we have the inputs",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 812,
      "text": "but okay",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 813,
      "text": "so here we have the inputs x1 x2",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 814,
      "text": "so this is a two-dimensional x1 x2",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 815,
      "text": "so this is a two-dimensional x1 x2",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 816,
      "text": "so this is a two-dimensional neuron so two inputs are going to come neuron",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 817,
      "text": "so two inputs are going to come neuron",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 818,
      "text": "so two inputs are going to come in in in these are thought out as the weights of these are thought out as the weights of these are thought out as the weights of this neuron this neuron this neuron weights w1 w2 and these weights again weights w1 w2 and these weights again weights w1 w2 and these weights again are the synaptic strengths for each are the synaptic strengths for each are the synaptic strengths for each input input input and this is the bias of the neuron and this is the bias of the neuron and this is the bias of the neuron b b and now we want to do is according to and now we want to do is according to and now we want to do is according to this model we need to multiply x1 times this model we need to multiply x1 times this model we need to multiply x1 times w1 w1 w1 and x2 times w2 and x2 times w2 and x2 times w2 and then we need to add bias on top of and then we need to add bias on top of and then we need to add bias on top of it",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 819,
      "text": "it it",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 820,
      "text": "and it gets a little messy here but all",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 821,
      "text": "and it gets a little messy here but all",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 822,
      "text": "and it gets a little messy here",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 823,
      "text": "but all we are trying to do is x1 w1 plus x2 w2 we are trying to do is x1 w1 plus x2 w2 we are trying to do is x1 w1 plus x2 w2 plus b plus b plus b and these are multiply here and these are multiply here and these are multiply here except i'm doing it in small steps so except i'm doing it in small steps so except i'm doing it in small steps so that we actually have pointers to all that we actually have pointers to all that we actually have pointers to all these intermediate nodes so we have x1 these intermediate nodes",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 824,
      "text": "so we have x1 these intermediate nodes",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 825,
      "text": "so we have x1 w1 variable x times x2 w2 variable and w1 variable x times x2 w2 variable and w1 variable x times x2 w2 variable",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 826,
      "text": "and i'm also labeling them",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 827,
      "text": "i'm also labeling them",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 828,
      "text": "i'm also labeling them so n is now so n is now so n is now the cell body raw the cell body raw the cell body raw raw raw raw activation without activation without activation without the activation function for now the activation function for now the activation function for now and this should be enough to basically and this should be enough to basically and this should be enough to basically plot it so draw dot of n gives us x1 times w1 x2 times w2 gives us x1 times w1 x2 times w2 being added being added being added then the bias gets added on top of this then the bias gets added on top of this then the bias gets added on top of this and this n and this n and this n is this sum is this sum is this sum",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 829,
      "text": "so we're now going to take it through",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 830,
      "text": "an so we're now going to take it through",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 831,
      "text": "an so we're now going to take it through an activation function activation function activation function and let's say we use the 10h and let's say we use the 10h and let's say we use the 10h so that we produce the output so that we produce the output so that we produce the output so what we'd like to do here is we'd so what we'd like to do here is we'd so what we'd like to do here is we'd like to do the output",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 832,
      "text": "and i'll call it o like to do the output",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 833,
      "text": "and i'll call it o like to do the output",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 834,
      "text": "and i'll call it",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 835,
      "text": "o is um is um",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 836,
      "text": "n dot 10h n dot 10h n dot 10h",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 837,
      "text": "okay",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 838,
      "text": "but we haven't yet written the 10h",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 839,
      "text": "okay",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 840,
      "text": "but we haven't yet written the 10h",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 841,
      "text": "okay",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 842,
      "text": "but we haven't yet written the 10h now the reason that we need to implement now the reason that we need to implement now the reason that we need to implement another 10h function here is that another 10h function here is that another 10h function here is that tanh is a tanh is a tanh is a hyperbolic function and we've only so hyperbolic function and we've only so hyperbolic function and we've only so far implemented a plus and the times and far implemented a plus and the times and far implemented a plus and the times and you can't make a 10h out of just pluses you can't make a 10h out of just pluses you can't make a 10h out of just pluses and times and times and times you also need exponentiation so 10h is you also need exponentiation so 10h is you also need exponentiation so 10h is this kind of a formula here this kind of a formula here this kind of a formula here you can use either one of these",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 843,
      "text": "and you you can use either one of these",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 844,
      "text": "and you you can use either one of these and you see that there's exponentiation involved see that there's exponentiation involved see that there's exponentiation involved which we have not implemented yet for which we have not implemented yet for which we have not implemented yet for our low value node here so we're not our low value node here",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 845,
      "text": "so we're not our low value node here so we're not going to be able to produce 10h yet and going to be able to produce 10h yet and going to be able to produce 10h yet and we have to go back up and implement we have to go back up and implement we have to go back up and implement something like it",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 846,
      "text": "something like it something like it now one option here now one option here now one option here is we could actually implement um is we could actually implement um is we could actually implement um exponentiation exponentiation exponentiation",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 847,
      "text": "right",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 848,
      "text": "and we could return the x of a right",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 849,
      "text": "and we could return the x of a right",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 850,
      "text": "and we could return the x of a value instead of a 10h of a value value instead of a 10h of a value value instead of a 10h of a value because if we had x then we have because if we had x then we have because if we had x then we have everything else that we need so um everything else that we need so um everything else that we need",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 851,
      "text": "so um because we know how to add and we know because we know how to add",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 852,
      "text": "and we know because we know how to add",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 853,
      "text": "and we know how to how to how to um um we know how to add",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 854,
      "text": "and we know how to we know how to add",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 855,
      "text": "and we know how to we know how to add",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 856,
      "text": "and we know how to multiply",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 857,
      "text": "so we'd be able to create 10h multiply",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 858,
      "text": "so we'd be able to create 10h multiply",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 859,
      "text": "so we'd be able to create 10h if we knew how to x if we knew how to x if we knew how to",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 860,
      "text": "x but for the purposes of this example i but for the purposes of this example",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 861,
      "text": "i but for the purposes of this example i specifically wanted to specifically wanted to specifically wanted to show you show you show you that we don't necessarily need to have that we don't necessarily need to have that we don't necessarily need to have the most atomic pieces the most atomic pieces the most atomic pieces in in um um in this value object we can actually in this value object we can actually in this value object we can actually like create functions at arbitrary like create functions at arbitrary like create functions at arbitrary points of abstraction they can be points of abstraction they can be points of abstraction they can be complicated functions but they can be complicated functions but they can be complicated functions but they can be also very very simple functions like a also very very simple functions like a also very very simple functions like a plus and it's totally up to us the only plus",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 862,
      "text": "and it's totally up to us the only plus",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 863,
      "text": "and it's totally up to us the only thing that matters is that we know how thing that matters is that we know how thing that matters is that we know how to differentiate through any one to differentiate through any one to differentiate through any one function so we take some inputs and we function so we take some inputs and we function so we take some inputs and we make an output the only thing that make an output the only thing that make an output the only thing that matters it can be arbitrarily complex matters it can be arbitrarily complex matters it can be arbitrarily complex function as long as you know how to function as long as you know how to function as long as you know how to create the local derivative if you know create the local derivative if you know create the local derivative if you know the local derivative of how the inputs the local derivative of how the inputs the local derivative of how the inputs impact the output then that's all you impact the output then that's all you impact the output then that's all you need so we're going to cluster up need so we're going to cluster up need so we're going to cluster up all of this expression and we're not all of this expression and we're not all of this expression and we're not going to break it down to its atomic going to break it down to its atomic going to break it down to its atomic pieces we're just going to directly pieces we're just going to directly pieces we're just going to directly implement tanh implement tanh implement tanh",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 864,
      "text": "so let's do that",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 865,
      "text": "so let's do that",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 866,
      "text": "so let's do that depth nh depth nh depth nh and then out will be a value and then out will be a value and then out will be a value of of and we need this expression here",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 867,
      "text": "so and we need this expression here",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 868,
      "text": "so and we need this expression here so um let me actually let me actually copy paste",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 869,
      "text": "let's grab n which is a cell.theta let's grab n which is a cell.theta and then this and then this and then this i believe is the tan h i believe is",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 870,
      "text": "the tan h",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 871,
      "text": "i believe is the tan h math.x of math.x of math.x of two two two",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 872,
      "text": "no n no n no n n minus one over n minus one over n minus one",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 873,
      "text": "over two n plus one two n plus one two n plus one maybe i can call this",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 874,
      "text": "x maybe i can call this x maybe i can call this x just so that it matches exactly just so that it matches exactly just so that it matches exactly okay",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 875,
      "text": "and now okay",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 876,
      "text": "and now okay",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 877,
      "text": "and now this will be t this will be t this will be t and uh children of this node there's and uh children of this node there's and uh children of this node there's just one child just one child just one child and i'm wrapping it in a tuple",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 878,
      "text": "so this",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 879,
      "text": "and i'm wrapping it in a tuple",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 880,
      "text": "so this",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 881,
      "text": "and i'm wrapping it in a tuple so this is a tuple of one object just self is a tuple of one object just self is a tuple of one object just self and here the name of this operation will and here the name of this operation will and here the name of this operation will be 10h be 10h be 10h and we're going to return that",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 882,
      "text": "okay",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 883,
      "text": "so now valley should be implementing 10h so now valley should be implementing 10h so now valley should be implementing 10h and now we can scroll all the way down and now we can scroll all the way down and now we can scroll all the way down here here and we can actually do n.10",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 884,
      "text": "h",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 885,
      "text": "and that's",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 886,
      "text": "and we can actually do n.10 h",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 887,
      "text": "and that's",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 888,
      "text": "and we can actually do n.10 h",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 889,
      "text": "and that's going to return the tanhd going to return the tanhd going to return the tanhd output of n output of n output of n",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 890,
      "text": "and now we should be able to draw it out and now we should be able to draw it out and now we should be able to draw it out of o not of n of o not of n of o not of n so let's see how that worked there we go n went through 10 h n went through 10 h n went through 10 h to produce this output to produce this output to produce this output so now tan h is a so now tan h is a so now tan h is a sort of sort of sort of our little micro grad supported node our little micro grad supported node our little micro grad supported node here as an operation here as an operation here as an operation and as long as we know the derivative of and as long as we know the derivative of and as long as we know the derivative of 10h 10h 10h then we'll be able to back propagate",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 891,
      "text": "then we'll be able to back propagate",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 892,
      "text": "then we'll be able to back propagate through it now let's see this 10h in through it now let's see this 10h in through it now let's see this 10h in action currently it's not squashing too action currently it's not squashing too action currently it's not squashing too much because the input to it is pretty much because the input to it is pretty much because the input to it is pretty low",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 893,
      "text": "so if the bias was increased to say low",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 894,
      "text": "so if the bias was increased to say low",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 895,
      "text": "so if the bias was increased to say eight eight eight then we'll see that what's flowing into then we'll see that what's flowing into then we'll see that what's flowing into the 10h now is the 10h now is the 10h now is two two and 10h is squashing it to 0.96 so we're and 10h is squashing it to 0.96 so we're and 10h is squashing it to 0.96 so we're already hitting the tail of this 10h and already hitting the tail of this 10h and already hitting the tail of this 10h and it will sort of smoothly go up to 1 and it will sort of smoothly go up to 1 and it will sort of smoothly go up to 1 and then plateau out over there then plateau out over there then plateau out over there",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 896,
      "text": "okay",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 897,
      "text": "so now i'm going to do something",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 898,
      "text": "okay",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 899,
      "text": "so now i'm going to do something",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 900,
      "text": "okay",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 901,
      "text": "so now i'm going to do something slightly strange i'm going to change slightly strange i'm going to change slightly strange i'm going to change this bias from 8 to this number this bias from 8 to this number this bias from 8 to this number 6.88 etc 6.88 etc 6.88 etc",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 902,
      "text": "and i'm going to do this for specific",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 903,
      "text": "and i'm going to do this for specific",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 904,
      "text": "and i'm going to do this for specific reasons because we're about to start reasons because we're about to start reasons because we're about to start back propagation back propagation",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 905,
      "text": "and i want to make sure that our numbers and i want to make sure that",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 906,
      "text": "our numbers and i want to make sure that our numbers come out nice they're not like very come out nice they're not like very come out nice they're not like very crazy numbers they're nice numbers that crazy numbers they're nice numbers that crazy numbers they're nice numbers that we can sort of understand in our head we can sort of understand in our head we can sort of understand in our head let me also add a pose label let me also add a pose label let me also add a pose label o is short for output here o is short for output here o is short for output here so that's zero",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 907,
      "text": "so that's zero",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 908,
      "text": "so that's zero",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 909,
      "text": "okay",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 910,
      "text": "so okay",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 911,
      "text": "so okay so 0.88 flows into 10 h comes out 0.7 so on 0.88 flows into 10 h comes out 0.7 so on 0.88 flows into 10 h comes out 0.7 so on so",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 912,
      "text": "now we're going to do back",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 913,
      "text": "so now we're going to do back",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 914,
      "text": "so now we're going to do back propagation and we're going to fill in propagation and we're going to fill in propagation and we're going to fill in all the gradients all the gradients all the gradients",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 915,
      "text": "so what is the derivative o with respect",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 916,
      "text": "so what is the derivative o with respect",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 917,
      "text": "so what is the derivative o with respect to to to all the all the all the inputs here and of course in the typical inputs here and of course in the typical inputs here and of course in the typical neural network setting what we really neural network setting what we really neural network setting what we really care about the most is the derivative of care about the most is the derivative of care about the most is the derivative of these neurons on the weights these neurons on the weights these neurons on the weights specifically the w2 and w1 because those specifically the w2 and w1 because those specifically the w2 and w1 because those are the weights that we're going to be are the weights that we're going to be are the weights that we're going to be changing part of the optimization changing part of the optimization changing part of the optimization and the other thing that we have to and the other thing that we have to and the other thing that we have to remember is here we have only a single remember is here we have only a single remember is here we have only a single neuron but in the neural natives neuron but in the neural natives neuron but in the neural natives typically have many neurons and they're typically have many neurons and they're typically have many neurons and they're connected connected connected so this is only like a one small neuron",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 918,
      "text": "so this is only like a one small neuron",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 919,
      "text": "so this is only like a one small neuron a piece of a much bigger puzzle and a piece of a much bigger puzzle and a piece of a much bigger puzzle and eventually there's a loss function that eventually there's a loss function that eventually there's a loss function that sort of measures the accuracy of the sort of measures the accuracy of the sort of measures the accuracy of the neural net and we're back propagating neural net and we're back propagating neural net and we're back propagating with respect to that accuracy and trying with respect to that accuracy and trying with respect to that accuracy and trying to increase it to increase it to increase it",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 920,
      "text": "so let's start off by propagation here so let's start off by propagation here so let's start off by propagation here in the end in the end in the end what is the derivative of o with respect what is the derivative of o with respect what is the derivative of o with respect to o the base case sort of we know to o the base case sort of we know to o the base case sort of we know always is that the gradient is just 1.0 always is that the gradient is just 1.0 always is that the gradient is just 1.0 so let me fill it in",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 921,
      "text": "so let me fill it in so let me fill it in and then let me and then let me and then let me split out split out split out the drawing function the drawing function the drawing function here clear this output here okay clear this output here",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 922,
      "text": "okay",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 923,
      "text": "so now when we draw o we'll see that",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 924,
      "text": "oh so now when we draw o we'll see that",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 925,
      "text": "oh so now when we draw o we'll see that",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 926,
      "text": "oh that grad is one that grad is one that grad is one",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 927,
      "text": "so now we're going to back propagate",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 928,
      "text": "so now we're going to back propagate",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 929,
      "text": "so now we're going to back propagate through the tan h through the tan h through the tan h so to back propagate through 10h we need so to back propagate through 10h we need so to back propagate through 10h we need to know the local derivative of 10h to know the local derivative of 10h to know the local derivative of 10h",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 930,
      "text": "so if we have that",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 931,
      "text": "so if we have that",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 932,
      "text": "so if we have that o is 10 h of o is 10 h of o is 10 h of n n n then what is d o by d",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 933,
      "text": "n then what is d o by d",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 934,
      "text": "n then what is d o by d",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 935,
      "text": "n now what you could do is you could come now what you could do is you could come now what you could do is you could come here and you could take this expression here and you could take this expression here and you could take this expression and you could and you could and you could do your calculus derivative taking",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 936,
      "text": "do your calculus derivative taking do your calculus derivative",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 937,
      "text": "taking",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 938,
      "text": "um",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 939,
      "text": "and that would work",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 940,
      "text": "but we can also um and that would work",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 941,
      "text": "but we can also um and that would work",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 942,
      "text": "but we can also just scroll down wikipedia here just scroll down wikipedia here just scroll down wikipedia here into a section that hopefully tells us into a section that hopefully tells us into a section that hopefully tells us that derivative uh that derivative uh that derivative uh d by dx of 10 h of x is d by dx of 10 h of x is d by dx of 10 h of x is any of these i like this one 1 minus 10 any of these i like this one 1 minus 10 any of these i like this one 1 minus 10 h square of x h square of x h square of x",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 943,
      "text": "so this is 1 minus 10 h",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 944,
      "text": "so this is 1 minus 10 h",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 945,
      "text": "so this is 1 minus 10 h of x squared of x squared of x squared so basically what this is saying is that so basically what this is saying is that so basically what this is saying is that",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 946,
      "text": "d o by d n d o by d n d o by d n is is 1 minus 10 h 1 minus 10 h 1 minus 10 h of n of n of n squared squared squared",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 947,
      "text": "and we already have 10 h of n that's",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 948,
      "text": "and we already have 10 h of n that's",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 949,
      "text": "and we already have 10 h of n that's",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 950,
      "text": "just o just o just o",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 951,
      "text": "so it's one minus o squared so it's one minus o squared so it's one minus o squared so o is the output here so the output is so o is the output here so the output is so o is the output here so the output is this number this number this number data data data is this number is this number is this number and then and then what this is saying is that do by dn is what this is saying is that do by dn is what this is saying is that do by dn is 1 minus 1 minus 1 minus this squared so this squared so this squared so one minus of that data squared one minus of that data squared one minus of that data squared is 0.5 conveniently is 0.5 conveniently is 0.5 conveniently so the local derivative of this 10 h so the local derivative of this 10 h so the local derivative of this 10 h operation here is 0.5 operation here is 0.5 operation here is 0.5 and and so that would be d o by d",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 952,
      "text": "n",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 953,
      "text": "so that would be d o by d",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 954,
      "text": "n",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 955,
      "text": "so that would be d o by d",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 956,
      "text": "n",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 957,
      "text": "so so we can fill in that in that grad so this is exactly 0.5 one half so this is exactly 0.5 one half",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 958,
      "text": "so now we're going to continue the back so now we're going to continue the back",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 959,
      "text": "so now we're going to continue the back propagation propagation propagation this is 0.5 and this is a plus node this is 0.5 and this is a plus node this is 0.5 and this is a plus node",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 960,
      "text": "so how is backprop going to what is that so how is backprop going to what is that so how is backprop going to what is that going to do here going to do here going to do here and if you remember our previous example and if you remember our previous example and if you remember our previous example a plus is just a distributor of gradient a plus is just a distributor of gradient a plus is just a distributor of gradient so this gradient will simply flow to so this gradient will simply flow to so this gradient will simply flow to both of these equally",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 961,
      "text": "and that's because both of these equally",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 962,
      "text": "and that's because both of these equally",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 963,
      "text": "and that's because the local derivative of this operation the local derivative of this operation the local derivative of this operation is one for every one of its nodes so 1 is one for every one of its nodes so 1 is one for every one of its nodes so 1 times 0.5 is 0.5 times 0.5 is 0.5 times 0.5 is 0.5 so therefore we know that so therefore we know that",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 964,
      "text": "so therefore we know that this node here which we called this this node here which we called this this node here which we called this its grad is just 0.5 its grad is just 0.5 its grad is just 0.5",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 965,
      "text": "and we know that b dot grad is also 0.5",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 966,
      "text": "and we know that b dot grad is also 0.5",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 967,
      "text": "and we know that b dot grad is also 0.5 so let's set those and let's draw so 0.5 so 0.5 continuing we have another plus continuing we have another plus continuing we have another plus 0.5 again we'll just distribute it so 0.5 again we'll just distribute it so 0.5",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 968,
      "text": "again we'll just distribute it so 0.5 will flow to both of these 0.5 will flow to both of these 0.5 will flow to both of these so we can set so we can set so we can set theirs x2w2 as well that grad is 0.5 x2w2 as well that grad is 0.5 and let's redraw pluses are my favorite and let's redraw pluses are my favorite and let's redraw pluses are my favorite uh operations to back propagate through uh operations to back propagate through uh operations to back propagate through because because because it's very simple it's very simple",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 969,
      "text": "it's very simple",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 970,
      "text": "so now it's flowing into these so now it's flowing into these",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 971,
      "text": "so now it's flowing into these expressions is 0.5 and so really again expressions is 0.5 and so really again expressions is 0.5 and so really again keep in mind what the derivative is keep in mind what the derivative is keep in mind what the derivative is telling us at every point in time along telling us at every point in time along telling us at every point in time along here this is saying that here this is saying that here this is saying that if we want the output of this neuron to if we want the output of this neuron to if we want the output of this neuron to increase increase increase then then then the influence on these expressions is the influence on these expressions is the influence on these expressions is positive on the output both of them are positive on the output both of them are positive on the output both of them are positive so now back propagating to x2 and w2 so now back propagating to x2 and w2 first first first this is a times node",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 972,
      "text": "so we know that the this is a times node",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 973,
      "text": "so we know that the this is a times node",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 974,
      "text": "so we know that the local derivative is you know the other local derivative is you know the other local derivative is you know the other term term term",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 975,
      "text": "so if we want to calculate x2.grad",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 976,
      "text": "so if we want to calculate x2.grad",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 977,
      "text": "so if we want to calculate x2.grad then then can you think through what it's going to can you think through what it's going to can you think through what it's going to be so x2.grad will be so x2.grad will be w2.data w2.data w2.data times this x2w2 times this x2w2 times this x2w2 by grad right by grad right by",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 978,
      "text": "grad right",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 979,
      "text": "and and w2.grad will be w2.grad will be w2.grad will be x2 that data times x2w2.grad",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 980,
      "text": "right",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 981,
      "text": "so that's the local piece of chain",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 982,
      "text": "right",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 983,
      "text": "so that's the local piece of chain rule let's set them and let's redraw let's set them and let's redraw so here we see that the gradient on",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 984,
      "text": "our so",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 985,
      "text": "here we see that the gradient on",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 986,
      "text": "our so",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 987,
      "text": "here we see that the gradient on our weight 2 is 0 because x2 data was 0 weight 2 is 0 because x2 data was 0 weight 2 is 0 because x2 data was 0 right",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 988,
      "text": "but x2 will have the gradient 0.5 right",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 989,
      "text": "but x2 will have the gradient 0.5 right",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 990,
      "text": "but x2 will have the gradient 0.5 because data here was 1. because data here was 1. because data here was 1.",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 991,
      "text": "and so what's interesting here right is and so what's interesting here right is",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 992,
      "text": "and so what's interesting here right is because the input x2 was 0 then because because the input x2 was 0 then because because the input x2 was 0 then because of the way the times works of the way the times works of the way the times works of course this gradient will be zero and of course this gradient will be zero and of course this gradient will be zero and think about intuitively why that is think about intuitively why that is think about intuitively why that is derivative always tells us the influence derivative always tells us the influence derivative always tells us the influence of of this on the final output if i wiggle w2 this on the final output if i wiggle w2 this on the final output if i wiggle w2 how is the output changing how is the output changing how is the output changing it's not changing because we're it's not changing because we're it's not changing because we're multiplying by zero multiplying by zero multiplying by zero so because it's not changing there's no so because it's not changing there's no so because it's not changing there's no derivative and zero is the correct derivative and zero is the correct derivative and zero is the correct answer answer answer because we're because we're because we're squashing it at zero squashing it at zero squashing it at zero and let's do it here point five should and let's do it here point five should and let's do it here point five should come here and flow through this times come here and flow through this times come here and flow through this times and so we'll have that x1.grad is",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 993,
      "text": "and so we'll have that x1.grad is",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 994,
      "text": "and so we'll have that x1.grad is can you think through a little bit what can you think through a little bit what can you think through a little bit",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 995,
      "text": "what what what what this should be the local derivative of times the local derivative of times with respect to x1 is going to be w1 with respect to x1 is going to be w1 with respect to x1 is going to be w1 so w1 is data times so w1 is data times so w1 is data times x1 w1 dot grad x1 w1 dot grad x1 w1 dot grad and w1.grad will be x1.data times and w1.grad will be x1.data times and w1.grad will be x1.data times x1 w2 w1 with graph x1 w2 w1 with graph x1 w2 w1 with graph let's see what those came out to be let's see what those came out to be let's see what those came out to be so this is 0.5 so this would be negative so this is 0.5 so this would be negative so this is 0.5 so this would be negative 1.5 and this would be 1. 1.5 and this would be 1. 1.5 and this would be 1.",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 996,
      "text": "and we've back propagated through this and we've back propagated through this and we've back propagated through this expression these are the actual final expression these are the actual final expression these are the actual final derivatives so if we want this neuron's derivatives so if we want this neuron's derivatives so if we want this neuron's output to increase output to increase output to increase we know that what's necessary is that we know that what's necessary is that we know that what's necessary is that w2 we have no gradient w2 doesn't w2 we have no gradient w2 doesn't w2 we have no gradient w2 doesn't actually matter to this neuron right now actually matter to this neuron right now actually matter to this neuron right now",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 997,
      "text": "but this neuron this weight should uh go",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 998,
      "text": "but this neuron this weight should uh go",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 999,
      "text": "but this neuron this weight should uh go up up up so if this weight goes up then this so if this weight goes up then this so if this weight goes up then this neuron's output would have gone up and neuron's output would have gone up and neuron's output would have gone up and proportionally because the gradient is proportionally because the gradient is proportionally because the gradient is one",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1000,
      "text": "okay",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1001,
      "text": "so doing the back propagation one",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1002,
      "text": "okay",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1003,
      "text": "so doing the back propagation one",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1004,
      "text": "okay",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1005,
      "text": "so doing the back propagation manually is obviously ridiculous so we manually is obviously ridiculous so we manually is obviously ridiculous so we are now going to put an end to this are now going to put an end to this are now going to put an end to this suffering and we're going to see how we suffering and we're going to see how we suffering and we're going to see how we can implement uh the backward pass a bit can implement uh the backward pass a bit can implement uh the backward pass a bit more automatically we're not going to be more automatically we're not going to be more automatically we're not going to be doing all of it manually out here doing all of it manually out here doing all of it manually out here it's now pretty obvious to us by example",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1006,
      "text": "it's now pretty obvious to us by example",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1007,
      "text": "it's now pretty obvious to us by example how these pluses and times are back how these pluses and times are back how these pluses and times are back property ingredients so let's go up to property ingredients so let's go up to property ingredients so let's go up to the value the value the value object and we're going to start object and we're going to start object and we're going to start codifying what we've seen codifying what we've seen codifying what we've seen in the examples below in the examples below in the examples below so we're going to do this by storing a so we're going to do this by storing a so we're going to do this by storing a special cell dot backward special cell dot backward special cell dot backward and underscore backward and this will be and underscore backward and this will be and underscore backward and this will be a function which is going to do that a function which is going to do that a function which is going to do that little piece of chain rule at each little piece of chain rule at each little piece of chain rule at each little node that compute that took little node that compute that took little node that compute that took inputs and produced output uh we're inputs and produced output",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1008,
      "text": "uh we're inputs and produced output",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1009,
      "text": "uh",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1010,
      "text": "we're going to store going to store going to store how we are going to chain the the how we are going to chain the the how we are going to chain the the outputs gradient into the inputs outputs gradient into the inputs outputs gradient into the inputs gradients gradients gradients so by default so by default so by default this will be a function this will be a function this will be a function that uh doesn't do anything that uh doesn't do anything that uh doesn't do anything",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1011,
      "text": "so um so um and you can also see that here in the and you can also see that here in the and you can also see that here in the value in micrograb value in micrograb value in micrograb so so with this backward function by default with this backward function by default with this backward function by default doesn't do anything doesn't do anything doesn't do anything this is an empty function this is an empty function this is an empty function and that would be sort of the case for and that would be sort of the case for and that would be sort of the case for example for a leaf node for leaf node example for a leaf node for leaf node example for a leaf node for leaf node there's nothing to do there's nothing to do there's nothing to do but now if when we're creating these out but now if when we're creating these out but now if when we're creating these out values these out values are an addition values these out values are an addition values these out values are an addition of self and other of self and other of self and other",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1012,
      "text": "and so we will want to sell set",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1013,
      "text": "and so we will want to sell set",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1014,
      "text": "and so we will want to sell set outs backward to be outs backward to be outs backward to be the function that propagates the the function that propagates the the function that propagates the gradient",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1015,
      "text": "so let's define what should happen and we're going to store it in a closure",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1016,
      "text": "and we're going to store it in a closure let's define what should happen when we let's define what should happen when we let's define what should happen when we call call call outs grad for in addition for in addition our job is to take our job is to take our job is to take outs grad and propagate it into self's outs grad and propagate it into self's outs grad and propagate it into self's grad and other grad",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1017,
      "text": "so basically we want grad and other grad",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1018,
      "text": "so basically we want grad and other grad",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1019,
      "text": "so basically we want to sell self.grad to something to sell self.grad to something to sell self.grad to something and we want to set others.grad to and we want to set others.grad to and we want to set others.grad to something something something",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1020,
      "text": "okay",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1021,
      "text": "okay",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1022,
      "text": "and the way we saw below how chain rule and the way we saw below how chain rule and the way we saw below how chain rule works we want to take the local works we want to take the local works we want to take the local derivative times derivative times derivative times the the sort of global derivative i should call sort of global derivative i should call sort of global derivative i should call it which is the derivative of the final it which is the derivative of the final it which is the derivative of the final output of the expression with respect to output of the expression with respect to output of the expression with respect to out's data out's data out's data with respect to out with respect to out with respect to out",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1023,
      "text": "so so the local derivative of self in an the local derivative of self in an the local derivative of self in an addition is 1.0 addition is 1.0 addition is 1.0",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1024,
      "text": "so it's just 1.0 times",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1025,
      "text": "so it's just 1.0 times",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1026,
      "text": "so it's just 1.0 times outs grad outs grad outs grad that's the chain rule that's the chain rule that's the chain rule and others.grad will be 1.0 times and others.grad will be 1.0 times and others.grad will be 1.0 times outgrad outgrad outgrad and what you basically what you're and what you basically what you're and what you basically what you're seeing here is that outscrad seeing here is that outscrad seeing here is that outscrad will simply be copied onto selfs grad will simply be copied onto selfs grad will simply be copied onto selfs grad and others grad as we saw happens for an and others grad as we saw happens for an and others grad as we saw happens for an addition operation addition operation addition operation",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1027,
      "text": "so we're going to later call this so we're going to later call this so we're going to later call this function to propagate the gradient function to propagate the gradient function to propagate the gradient having done an addition having done an addition having done an addition let's now do multiplication we're going let's now do multiplication we're going let's now do multiplication we're going to also define that backward",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1028,
      "text": "and we're going to set its backward to and we're going to set its backward to be backward",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1029,
      "text": "and we want to chain outgrad into and we want to chain outgrad into self.grad and others.grad and others.grad and this will be a little piece of chain and this will be a little piece of chain and this will be a little piece of chain rule for multiplication rule for multiplication rule for multiplication so we'll have so we'll have so we'll have so what should this be so what should this be so what should this be can you think through",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1030,
      "text": "so what is the local derivative so what is the local derivative here the local derivative was here the local derivative was here the local derivative was others.data",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1031,
      "text": "and then oops others.data and the times of that oops others.data and the times of that oops others.data and the times of that grad that's",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1032,
      "text": "channel grad",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1033,
      "text": "that's channel grad that's channel",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1034,
      "text": "and here we have self.data times of that",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1035,
      "text": "and here we have self.data times of that and here we have self.data times of that grad grad grad that's what we've been doing and finally here for 10 h and finally here for 10 h left backward",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1036,
      "text": "and then we want to set out backwards to",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1037,
      "text": "and then we want to set out backwards to be just backward",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1038,
      "text": "and here we need to",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1039,
      "text": "and here we need to back propagate we have out that grad and back propagate we have out that grad and back propagate we have out that grad",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1040,
      "text": "and we want to chain it into self.grad and salt.grad will be and salt.grad will be the local derivative of this operation the local derivative of this operation that we've done here which is 10h that we've done here which is 10h that we've done here which is 10h",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1041,
      "text": "and so we saw that the local the",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1042,
      "text": "and so we saw that the local the",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1043,
      "text": "and so we saw that the local the gradient is 1 minus the tan h of x gradient is 1 minus the tan h of x gradient is 1 minus the tan h of x squared which here is t squared which here is t squared which here is t that's the local derivative because that's the local derivative because that's the local derivative because that's t is the output of this 10 h",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1044,
      "text": "so 1 that's t is the output of this 10 h",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1045,
      "text": "so 1 that's t is the output of this 10 h so 1 minus t squared is the local derivative minus t squared is the local derivative minus t squared is the local derivative and then gradient um and then gradient um and then gradient um has to be multiplied because of the has to be multiplied because of the has to be multiplied because of the chain rule chain rule chain rule so outgrad is chained through the local so outgrad is chained through the local so outgrad is chained through the local gradient into salt.grad gradient into salt.grad gradient into salt.grad and that should be basically it so we're and that should be basically it",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1046,
      "text": "so we're and that should be basically it",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1047,
      "text": "so we're going to redefine our value node going to redefine our value node going to redefine our value node we're going to swing all the way down we're going to swing all the way down we're going to swing all the way down here here",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1048,
      "text": "and we're going to and we're going to and we're going to redefine redefine redefine our expression our expression our expression make sure that all the grads are zero make sure that all the grads are zero make sure that all the grads are zero",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1049,
      "text": "okay",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1050,
      "text": "okay",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1051,
      "text": "but now we don't have to do this",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1052,
      "text": "but now we don't have to do this",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1053,
      "text": "but now we don't have to do this manually anymore manually",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1054,
      "text": "anymore manually anymore we are going to basically be calling the we are going to basically be calling the we are going to basically be calling the dot backward in the right order dot backward in the right order dot backward in the right order",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1055,
      "text": "so so first we want to call os first we want to call os first we want to call os dot backwards so o was the outcome of 10h so o was the outcome of 10h",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1056,
      "text": "right so calling all that those who's right so calling all that those who's right so calling all that those who's backward backward will be will be this function this is what it will do this function this is what it will do this function this is what it will do now we have to be careful because now we have to be careful because now we have to be careful because there's a times out.grad there's a times out.grad there's a times out.grad and out.grad remember is initialized to and out.grad remember is initialized to and out.grad remember is initialized to zero so here we see grad zero",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1057,
      "text": "so as a base so here we see grad zero so as a base case we need to set both.grad to 1.0 case we need to set both.grad to 1.0 case we need to set both.grad to 1.0 to initialize this with 1 and then once this is 1 we can call oda and then once this is 1 we can call oda backward backward and what that should do is it should and what that should do is it should and what that should do is it should propagate this grad through 10h propagate this grad through 10h propagate this grad through 10h so the local derivative times so the local derivative times so the local derivative times the global derivative which is the global derivative which is the global derivative which is initialized at one so initialized at one so initialized at one",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1058,
      "text": "so this should this should this should um a dope a dope",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1059,
      "text": "so i thought about redoing it",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1060,
      "text": "but i",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1061,
      "text": "so i thought about redoing it",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1062,
      "text": "but i",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1063,
      "text": "so i thought about redoing it",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1064,
      "text": "but i figured i should just leave the error in figured i should just leave the error in figured i should just leave the error in here because it's pretty funny why is here because it's pretty funny why is here because it's pretty funny why is anti-object not callable anti-object not callable anti-object not callable uh it's because uh it's because uh it's because i screwed up we're trying to save these i screwed up we're trying to save these i screwed up we're trying to save these functions",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1065,
      "text": "so this is correct functions so this is correct functions",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1066,
      "text": "so this is correct this here this here this here we don't want to call the function we don't want to call the function we don't want to call the function because that returns none these because that returns none these because that returns none these functions return none we just want to functions return none we just want to functions return none we just want to store the function store the function store the function so let me redefine the value object",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1067,
      "text": "so let me redefine the value object",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1068,
      "text": "so let me redefine the value object and then we're going to come back in",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1069,
      "text": "and then we're going to come back in",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1070,
      "text": "and then we're going to come back in redefine the expression draw a dot redefine the expression draw a dot redefine the expression draw a dot everything is great o dot grad is one everything is great o dot grad is one everything is great o dot grad is one o dot grad is one and now o dot grad is one and now o dot grad is one and now now this should work of course now this should work of course now this should work of course",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1071,
      "text": "okay",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1072,
      "text": "so all that backward should okay",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1073,
      "text": "so all that backward should okay",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1074,
      "text": "so all that backward should this grant should now be 0.5 if we this grant should now be 0.5 if we this grant should now be 0.5 if we redraw and if everything went correctly redraw",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1075,
      "text": "and if everything went correctly redraw and if everything went correctly 0.5 yay 0.5 yay 0.5 yay",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1076,
      "text": "okay",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1077,
      "text": "so now we need to call ns.grad and it's not awkward sorry",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1078,
      "text": "and it's not awkward sorry ends backward ends backward ends backward",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1079,
      "text": "so that seems to have worked so instead backward routed the gradient so instead backward routed the gradient to both of these",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1080,
      "text": "so this is looking to both of these",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1081,
      "text": "so this is looking to both of these",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1082,
      "text": "so this is looking great great great",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1083,
      "text": "now we could of course called uh called now we could of course called uh called now we could of course called uh called b grad b grad b grad beat up backwards sorry beat up backwards sorry beat up backwards sorry what's gonna happen what's gonna happen what's gonna happen well b doesn't have it backward",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1084,
      "text": "b is well b doesn't have it backward",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1085,
      "text": "b is well b doesn't have it backward",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1086,
      "text": "b is backward backward because b is a leaf node because b is a leaf node because b is a leaf node b's backward is by initialization the b's backward is by initialization the b's backward is by initialization the empty function empty function empty function so nothing would happen but we can call so nothing would happen but we can call so nothing would happen but we can call call it on it call it on it call it on it",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1087,
      "text": "but when we call but when we call but when we call this one this one this one it's backward then we expect this 0.5 to get further then we expect this 0.5 to get further routed routed routed right",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1088,
      "text": "so there we go 0.5.5",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1089,
      "text": "right",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1090,
      "text": "so there we go 0.5.5",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1091,
      "text": "right",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1092,
      "text": "so there we go 0.5.5",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1093,
      "text": "and then finally and then finally",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1094,
      "text": "and then finally we want to call we want to call we want to call it here on x2 w2 do both of those do both of those and there we go and there we go and there we go so we get 0 0.5 negative 1.5 and 1 so we get 0 0.5 negative 1.5 and 1 so we get 0 0.5 negative 1.5 and 1 exactly as we did before but now exactly as we did before but now exactly as we did before but now we've done it through we've done it through we've done it through calling that backward um calling that backward um calling that backward um sort of manually sort of manually sort of manually",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1095,
      "text": "so we have the lamp one last piece to so we have the lamp one last piece to",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1096,
      "text": "so we have the lamp one last piece to get rid of which is us calling get rid of which is us calling get rid of which is us calling underscore backward manually",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1097,
      "text": "so let's underscore backward manually",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1098,
      "text": "so let's underscore backward manually",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1099,
      "text": "so let's think through what we are actually doing think through what we are actually doing think through what we are actually doing um um we've laid out a mathematical expression we've laid out a mathematical expression we've laid out a mathematical expression and now we're trying to go backwards and now we're trying to go backwards and now we're trying to go backwards through that expression through that expression through that expression um so going backwards through the um so going backwards through the um so going backwards through the expression just means that we never want expression just means that we never want expression just means that we never want to call a dot backward for any node to call a dot backward for any node to call a dot backward for any node before before before we've done a sort of um everything after we've done a sort of um everything after we've done a sort of um everything after it",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1100,
      "text": "it",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1101,
      "text": "so we have to do everything after it",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1102,
      "text": "so we have to do everything after it",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1103,
      "text": "so we have to do everything after it before we're ever going to call that before we're ever going to call that before we're ever going to call that backward on any one node we have to get backward on any one node we have to get backward on any one node we have to get all of its full dependencies everything all of its full dependencies everything all of its full dependencies everything that it depends on has to that it depends on has to that it depends on has to propagate to it before we can continue propagate to it before we can continue propagate to it before we can continue back propagation so this ordering of back propagation",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1104,
      "text": "so this ordering of back propagation so this ordering of graphs can be achieved using something graphs can be achieved using something graphs can be achieved using something called topological sort called topological sort called topological sort so topological sort so topological sort so topological sort is basically a laying out of a graph is basically a laying out of a graph is basically a laying out of a graph such that all the edges go only from such that all the edges go only from such that all the edges go only from left to right basically left to right basically left to right basically",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1105,
      "text": "so here we have a graph it's a directory",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1106,
      "text": "so here we have a graph it's a directory",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1107,
      "text": "so here we have a graph it's a directory a cyclic graph a dag a cyclic graph a dag a cyclic graph a dag and this is two different topological and this is two different topological and this is two different topological orders of it",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1108,
      "text": "i believe where basically orders of it i believe where basically orders of it i believe where basically you'll see that it's laying out of the you'll see that it's laying out of the you'll see that it's laying out of the notes such that all the edges go only notes such that all the edges go only notes such that all the edges go only one way from left to right one way from left to right one way from left to right and implementing topological sort you and implementing topological sort you and implementing topological sort you can look in wikipedia and so on i'm not can look in wikipedia and so on i'm not can look in wikipedia and so on i'm not going to go through it in detail going to go through it in detail going to go through it in detail but basically this is what builds a but basically this is what builds a but basically this is what builds a topological graph topological graph topological graph we maintain a set of visited nodes and we maintain a set of visited nodes and we maintain a set of visited nodes and then we are then we are then we are going through starting at some root node going through starting at some root node going through starting at some root node which for us is o that's where we want which for us is o that's where we want which for us is o that's where we want to start the topological sort to start the topological sort to start the topological sort and starting at o we go through all of and starting at o we go through all of and starting at o we go through all of its children and we need to lay them out its children and we need to lay them out its children and we need to lay them out from left to right from left to right from left to right",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1109,
      "text": "and basically this starts at o and basically this starts at o and basically this starts at o if it's not visited then it marks it as if it's not visited then it marks it as if it's not visited then it marks it as visited",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1110,
      "text": "and then it iterates through all visited",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1111,
      "text": "and then it iterates through all visited",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1112,
      "text": "and then it iterates through all of its children of its children of its children and calls build topological on them and calls build topological on them and calls build topological on them and then uh after it's gone through all",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1113,
      "text": "and then uh after it's gone through all",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1114,
      "text": "and then uh after it's gone through all the children it adds itself the children it adds itself the children it adds itself so basically so basically this node that we're going to call it on this node that we're going to call it on this node that we're going to call it on like say o is only going to add itself like say o is only going to add itself like say o is only going to add itself to the topo list after all of the to the topo list after all of the to the topo list after all of the children have been processed and that's children have been processed and that's children have been processed and that's how this function is guaranteeing how this function is guaranteeing how this function is guaranteeing that you're only going to be in the list that you're only going to be in the list that you're only going to be in the list once all your children are in the list once all your children are in the list once all your children are in the list and that's the invariant that is being and that's the invariant that is being and that's the invariant that is being maintained so if we built upon o and maintained so if we built upon o and maintained so if we built upon o and then inspect this list then inspect this list then inspect this list we're going to see that it ordered our we're going to see that it ordered our we're going to see that it ordered our value objects value objects value objects and the last one and the last one and the last one is the value of 0.707 which is the is the value of 0.707 which is the is the value of 0.707 which is the output output so this is o and then this is n so this is o and then this is n so this is o and then this is n and then all the other nodes get laid and then all the other nodes get laid and then all the other nodes get laid out before it out before it out before it so that builds the topological graph and so that builds the topological graph and so that builds the topological graph and really what we're doing now is we're really what we're doing now is we're really what we're doing now is we're just calling dot underscore backward on just calling dot underscore backward on just calling dot underscore backward on all of the nodes in a topological order all of the nodes in a topological order all of the nodes in a topological order so if we just reset the gradients so if we just reset the gradients so if we just reset the gradients they're all zero",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1115,
      "text": "they're all zero they're all zero",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1116,
      "text": "what did we do what did we do what did we do we started by we started by we started by setting o dot grad setting o dot grad setting o dot grad to b1 to b1 to b1 that's the base case that's the base case that's the base case then we built the topological order and then we went for node and then we went for node in in reversed reversed reversed of topo of topo of topo now now in in the reverse order because this in in the reverse order because this in in the reverse order because this list goes from list goes from list goes from you know we need to go through it in you know we need to go through it in you know we need to go through it in reversed order reversed order reversed order so starting at o so starting at o so starting at o note that backward note that backward note that backward and this should be and this should be and this should be it it there we go there we go those are the correct derivatives those are the correct derivatives those are the correct derivatives finally we are going to hide this finally we are going to hide this finally we are going to hide this functionality functionality functionality",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1117,
      "text": "so i'm going to",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1118,
      "text": "so i'm going to",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1119,
      "text": "so i'm going to copy this and we're going to hide it copy this",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1120,
      "text": "and we're going to hide it copy this and we're going to hide it inside the valley class because we don't inside the valley class because we don't inside the valley class because we don't want to have all that code lying around want to have all that code lying around want to have all that code lying around so instead of an underscore backward so instead of an underscore backward so instead of an underscore backward we're now going to define an actual we're now going to define an actual we're now going to define an actual backward",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1121,
      "text": "so that's backward without the backward so that's backward without the backward",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1122,
      "text": "so that's backward without the underscore underscore underscore and that's going to do all the stuff",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1123,
      "text": "and that's going to do all the stuff",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1124,
      "text": "and that's going to do all the stuff that we just arrived that we just arrived that we just arrived so let me just clean this up a little so let me just clean this up a little so let me just clean this up a little bit",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1125,
      "text": "so bit so bit so we're first going to build a topological graph build a topological graph starting at self starting at self starting at self so build topo of self so build topo of self so build topo of self will populate the topological order into will populate the topological order into will populate the topological order into the topo list which is a local variable the topo list which is a local variable the topo list which is a local variable then we set self.grad to be one then we set self.grad to be one then we set self.grad to be one",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1126,
      "text": "and then for each node in the reversed and then for each node in the reversed and then for each node in the reversed list so starting at us and going to all list so starting at us and going to all list so starting at us and going to all the children the children the children underscore backward underscore backward underscore backward and and that should be it so that should be it",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1127,
      "text": "so that should be it",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1128,
      "text": "so save save save come down here come down here come down here redefine redefine [Music]",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1129,
      "text": "[Music] okay all the grands are zero",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1130,
      "text": "okay all the grands are zero",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1131,
      "text": "okay all the grands are zero and now what we can do is oh that",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1132,
      "text": "and now what we can do is oh that",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1133,
      "text": "and now what we can do is oh that backward without the underscore backward without the underscore backward without the underscore",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1134,
      "text": "and there we go",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1135,
      "text": "and that's uh that's back propagation",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1136,
      "text": "and that's uh that's back propagation",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1137,
      "text": "and that's uh that's back propagation place for one neuron place for one neuron place for one neuron now we shouldn't be too happy with now we shouldn't be too happy with now we shouldn't be too happy with ourselves actually because we have a bad ourselves actually because we have a bad ourselves actually because we have a bad bug",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1138,
      "text": "um and we have not surfaced the bug bug um and we have not surfaced the bug bug",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1139,
      "text": "um and we have not surfaced the bug because of some specific conditions that because of some specific conditions that because of some specific conditions that we are we have to think about right now we are we have to think about right now we are we have to think about right now so here's the simplest case that shows so here's the simplest case that shows so here's the simplest case that shows the bug the bug the bug say i create a single node",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1140,
      "text": "a",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1141,
      "text": "and then i create a b that is a plus a",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1142,
      "text": "and then i create a b that is a plus a",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1143,
      "text": "and then i called backward so what's going to happen is a is 3",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1144,
      "text": "so what's going to happen is a is 3 and then a b is a plus a",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1145,
      "text": "so there's two and then a b is a plus a",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1146,
      "text": "so there's two and then a b is a plus a",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1147,
      "text": "so there's two arrows on top of each other here then we can see that b is of course the then we can see that b is of course the forward pass works forward pass works forward pass works b is just b is just b is just a plus a which is six a plus a which is six a plus a which is six but the gradient here is not actually but the gradient here is not actually but the gradient here is not actually correct correct correct that we calculate it automatically that we calculate it automatically that we calculate it automatically",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1148,
      "text": "and that's because and that's because and that's because um um of course uh of course uh of course uh just doing calculus in your head the just doing calculus in your head the just doing calculus in your head the derivative of b with respect to a derivative of b with respect to a derivative of b with respect to a should be uh two should be uh two should be uh two one plus one one plus one one plus one",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1149,
      "text": "it's not one it's not one it's not one intuitively what's happening here right intuitively what's happening here right intuitively what's happening here",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1150,
      "text": "right so b is the result of a plus a",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1151,
      "text": "and then so b is the result of a plus a",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1152,
      "text": "and then so b is the result of a plus a",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1153,
      "text": "and then we call backward on it we call backward on it we call backward on it",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1154,
      "text": "so let's go up and see what that does um b is a result of addition b is a result of addition b is a result of addition so out as so out as so out as b",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1155,
      "text": "and then when we called backward what b",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1156,
      "text": "and then when we called backward what b",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1157,
      "text": "and then when we called backward what happened is happened is happened is self.grad was set self.grad was set self.grad was set to one to one to one and then other that grad was set to one and then other that grad was set to one and then other that grad was set to one but because we're doing a plus a",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1158,
      "text": "but because we're doing a plus a but because we're doing a plus a self and other are actually the exact self and other are actually the exact self and other are actually the exact same object same object same object so we are overriding the gradient we are so we are overriding the gradient we are so we are overriding the gradient we are setting it to one",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1159,
      "text": "and then we are setting it to one",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1160,
      "text": "and then we are setting it to one",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1161,
      "text": "and then we are setting it again to one",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1162,
      "text": "and that's why setting it again to one",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1163,
      "text": "and that's why setting it again to one",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1164,
      "text": "and that's why it stays it stays it stays at one at one at one",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1165,
      "text": "so that's a problem so that's a problem",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1166,
      "text": "so that's a problem there's another way to see this in a there's another way to see this in a there's another way to see this in a little bit more complicated expression so here we have so here we have a and b a and b a and b",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1167,
      "text": "and then uh d will be the multiplication and then uh d will be the multiplication and then uh d will be the multiplication of the two and e will be the addition of of the two and e will be the addition of of the two and e will be the addition of the two the two the two and",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1168,
      "text": "and then we multiply e times d to get f",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1169,
      "text": "and then we multiply e times d to get f",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1170,
      "text": "and then we multiply e times d to get f",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1171,
      "text": "and then we called fda backward then we called fda backward then we called fda backward and these gradients if you check will be and these gradients if you check will be and these gradients if you check will be incorrect incorrect incorrect",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1172,
      "text": "so fundamentally what's happening here so fundamentally what's happening here",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1173,
      "text": "so fundamentally what's happening here again is again is again is basically we're going to see an issue basically we're going to see an issue basically we're going to see an issue anytime we use a variable more than once anytime we use a variable more than once anytime we use a variable more than once until now in these expressions above until now in these expressions above until now in these expressions above every variable is used exactly once so every variable is used exactly once so every variable is used exactly once so we didn't see the issue we didn't see the issue we didn't see the issue but here if a variable is used more than but here if a variable is used more than but here if a variable is used more than once",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1174,
      "text": "what's going to happen during once what's going to happen during once what's going to happen during backward pass we're backpropagating from backward pass we're backpropagating from backward pass we're backpropagating from f to e to d so far so good",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1175,
      "text": "but now f to e to d so far so good",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1176,
      "text": "but now f to e to d so far so good",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1177,
      "text": "but now equals it backward",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1178,
      "text": "and it deposits its equals it backward",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1179,
      "text": "and it deposits its equals it backward",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1180,
      "text": "and it deposits its gradients to a and b",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1181,
      "text": "but then we come gradients to a and b",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1182,
      "text": "but then we come gradients to a and b",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1183,
      "text": "but then we come back to d back to d back to d and call backward and it overwrites and call backward and it overwrites and call backward and it overwrites those gradients at a and b those gradients at a and b those gradients at a and b",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1184,
      "text": "so that's obviously a problem so that's obviously a problem",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1185,
      "text": "so that's obviously a problem and the solution here if you look at and the solution here if you look at and the solution here if you look at the multivariate case of the chain rule the multivariate case of the chain rule the multivariate case of the chain rule and its generalization there and its generalization there and its generalization there the solution there is basically that we the solution there is basically that we the solution there is basically that we have to accumulate these gradients these have to accumulate these gradients these have to accumulate these gradients these gradients add gradients add gradients add",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1186,
      "text": "and so instead of setting those and so instead of setting those and so instead of setting those gradients gradients we can simply do plus equals we need to we can simply do plus equals we need to we can simply do plus equals we need to accumulate those gradients accumulate those gradients accumulate those gradients plus equals plus equals plus equals plus equals plus equals plus equals plus equals plus equals plus equals and this will be",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1187,
      "text": "okay remember because and this will be okay remember because and this will be",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1188,
      "text": "okay remember because we are initializing them at zero so they we are initializing them at zero so they we are initializing them at zero so they start at zero start at zero start at zero and then any and then any and then any contribution contribution contribution that flows backwards that flows backwards that flows backwards will simply add will simply add will simply add so now if we redefine so now if we redefine so now if we redefine this one this one because the plus equals this now works because the plus equals this now works because the plus equals this now works because a.grad started at zero and we because a.grad started at zero and we because a.grad started at zero and we called beta backward we deposit one and called beta backward we deposit one and called beta backward we deposit one",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1189,
      "text": "and then we deposit one again and now this then we deposit one again and now this then we deposit one again and now this is two which is correct is two which is correct is two which is correct and here this will also work and we'll",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1190,
      "text": "and here this will also work and we'll",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1191,
      "text": "and here this will also work and we'll get correct gradients get correct gradients get correct gradients because when we call eta backward we because when we call eta backward we because when we call eta backward we will deposit the gradients from this will deposit the gradients from this will deposit the gradients from this branch and then we get to back into branch",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1192,
      "text": "and then we get to back into branch",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1193,
      "text": "and then we get to back into detail backward it will deposit its own detail backward it will deposit its own detail backward it will deposit its own gradients and then those gradients gradients and then those gradients gradients and then those gradients simply add on top of each other and so simply add on top of each other and so simply add on top of each other",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1194,
      "text": "and so we just accumulate those gradients and we just accumulate those gradients and we just accumulate those gradients and that fixes the issue okay now before we that fixes the issue okay now before we that fixes the issue okay now before we move on let me actually do a bit of move on let me actually do a bit of move on let me actually do a bit of cleanup here and delete some of these cleanup here and delete some of these cleanup here and delete some of these some of this intermediate work so some of this intermediate work so some of this intermediate work so we're not gonna need any of this now we're not gonna need any of this",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1195,
      "text": "now we're not gonna need any of this now that we've derived all of it that we've derived all of it that we've derived all of it",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1196,
      "text": "um um we are going to keep this because i want we are going to keep this because i want we are going to keep this because i want to come back to it to come back to it to come back to it delete the 10h delete the 10h delete the 10h delete our morning example delete our morning example delete our morning example delete the step delete the step delete the step delete this keep the code that draws delete this keep the code that draws delete this keep the code that draws and then delete this example and then delete this example and then delete this example and leave behind only the definition of and leave behind only the definition of and leave behind only the definition of value value and now let's come back to this and now let's come back to this and now let's come back to this non-linearity here that we implemented non-linearity here that we implemented non-linearity here that we implemented the tanh now i told you that we could the tanh now i told you that we could the tanh now i told you that we could have broken down 10h into its explicit have broken down 10h into its explicit have broken down 10h into its explicit atoms in terms of other expressions if atoms in terms of other expressions if atoms in terms of other expressions if we had the x function",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1197,
      "text": "so if you remember we had the x function so if you remember we had the x function",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1198,
      "text": "so if you remember tan h is defined like this and we chose tan h is defined like this and we chose tan h is defined like this and we chose to develop tan h as a single function to develop tan h as a single function to develop tan h as a single function and we can do that because we know its",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1199,
      "text": "and we can do that because we know its",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1200,
      "text": "and we can do that because we know its derivative and we can back propagate derivative",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1201,
      "text": "and we can back propagate derivative and we can back propagate through it through it through it",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1202,
      "text": "but we can also break down tan h into but we can also break down tan h into but we can also break down tan h into and express it as a function of x",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1203,
      "text": "and i and express it as a function of x",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1204,
      "text": "and i and express it as a function of x",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1205,
      "text": "and i would like to do that now because i want would like to do that now because i want would like to do that now because i want to prove to you that you get all the to prove to you that you get all the to prove to you that you get all the same results and all those ingredients same results and all those ingredients same results and all those ingredients but also because it forces us to but also because it forces us to but also because it forces us to implement a few more expressions it implement a few more expressions it implement a few more expressions it forces us to do exponentiation addition forces us to do exponentiation addition forces us to do exponentiation addition subtraction division and things like subtraction division and things like subtraction division and things like that",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1206,
      "text": "and i think it's a good exercise to that",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1207,
      "text": "and i think it's a good exercise to that",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1208,
      "text": "and i think it's a good exercise to go through a few more of these go through a few more of these go through a few more of these",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1209,
      "text": "okay so let's scroll up",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1210,
      "text": "okay",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1211,
      "text": "so let's scroll up",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1212,
      "text": "okay",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1213,
      "text": "so let's scroll up to the definition of value to the definition of value to the definition of value",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1214,
      "text": "and here one thing that we currently and here one thing that we currently and here one thing that we currently can't do is we can do like a value of can't do is we can do like a value of can't do is we can do like a value of say 2.0 say 2.0 say 2.0 but we can't do you know here for",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1215,
      "text": "but we can't do you know here for",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1216,
      "text": "but we can't do you know here for example we want to add constant one and example we want to add constant one and example we want to add constant one",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1217,
      "text": "and we can't do something like this we can't do something like this we can't do something like this and we can't do it because it says and we can't do it because it says and we can't do it because it says object has no attribute data that's object has no attribute data that's object has no attribute data that's because a plus one comes right here to because a plus one comes right here to because a plus one comes right here to add add add and then other is the integer one and and then other is the integer one and and then other is the integer one and then here python is trying to access then here python is trying to access then here python is trying to access one.data",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1218,
      "text": "and that's not a thing and one.data",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1219,
      "text": "and that's not a thing and one.data",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1220,
      "text": "and that's not a thing",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1221,
      "text": "and that's because basically one is not a that's because basically one is not a that's because basically one is not a value object and we only have addition value object and we only have addition value object and we only have addition for value objects so as a matter of for value objects so as a matter of for value objects so as a matter of convenience so that we can create convenience so that we can create convenience so that we can create expressions like this and make them make expressions like this and make them make expressions like this and make them make sense sense sense we can simply do something like this we can simply do something like this we can simply do something like this basically basically basically we let other alone if other is an we let other alone if other is an we let other alone if other is an instance of value but if it's not an instance of value but if it's not an instance of value but if it's not an instance of value we're going to assume instance of value we're going to assume instance of value we're going to assume that it's a number like an integer float that it's a number like an integer float that it's a number like an integer float and we're going to simply wrap it in in",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1222,
      "text": "and we're going to simply wrap it in in",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1223,
      "text": "and we're going to simply wrap it in in value",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1224,
      "text": "and then other will just become value and then other will just become value and then other will just become value of other and then other will have value of other and then other will have value of other and then other will have a data attribute and this should work so a data attribute and this should work so a data attribute and this should work so if i just say this predefined value then if i just say this predefined value then if i just say this predefined value then this should work this should work this should work there we go okay now let's do the exact there we go okay now let's do the exact there we go okay now let's do the exact same thing for multiply because we can't same thing for multiply because we can't same thing for multiply because we can't do something like this do something like this do something like this again again again for the exact same reason so we just for the exact same reason so we just for the exact same reason so we just have to go to mole and if other is have to go to mole and if other is have to go to mole and if other is not a value then let's wrap it in value not a value then let's wrap it in value not a value then let's wrap it in value let's redefine value and now this works let's redefine value and now this works let's redefine value and now this works now here's a kind of unfortunate and not now here's a kind of unfortunate and not now here's a kind of unfortunate and not obvious part a times two works we saw obvious part a times two works we saw obvious part a times two works we saw that but two times a is that gonna work that but two times a is that gonna work that but two times a is that gonna work you'd expect it to right",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1225,
      "text": "but actually it you'd expect it to right",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1226,
      "text": "but actually it you'd expect it to right",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1227,
      "text": "but actually it will not will not will not and the reason it won't is because and the reason it won't is because and the reason it won't is because python doesn't know python doesn't know python doesn't know like when when you do a times two like when when you do a times two like when when you do a times two basically um so a times two python will basically um so a times two python will basically um so a times two python will go and it will basically do something go",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1228,
      "text": "and it will basically do something go and it will basically do something like a dot mul like a dot mul like a dot mul of two that's basically what it will of two that's basically what it will of two that's basically what it will call but to it 2 times a is the same as call but to it 2 times a is the same as call but to it 2 times a is the same as 2 dot mol of a 2 dot mol of a 2 dot mol of a",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1229,
      "text": "and it doesn't 2 can't multiply and it doesn't 2 can't multiply",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1230,
      "text": "and it doesn't 2 can't multiply value",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1231,
      "text": "and so it's really confused about value",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1232,
      "text": "and so it's really confused about value",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1233,
      "text": "and so it's really confused about that that that so instead what happens is in python the so instead what happens is in python",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1234,
      "text": "the so instead what happens is in python the way this works is you are free to define way this works is you are free to define way this works is you are free to define something called the r mold something called the r mold something called the r mold and our mole and our mole and our mole is kind of like a fallback",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1235,
      "text": "so if python is kind of like a fallback",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1236,
      "text": "so if python is kind of like a fallback",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1237,
      "text": "so if python can't do 2 times a it will check if um can't do 2 times a it will check if um can't do 2 times a it will check if um if by any chance a knows how to multiply if by any chance a knows how to multiply if by any chance a knows how to multiply two and that will be called into our two and that will be called into our two and that will be called into our mole mole mole so because python can't do two times a so because python can't do two times a so because python can't do two times a it will check is there an our mole in it will check is there an our mole in it will check is there an our mole in value and because there is it will now value and because there is it will now value and because there is it will now call that call that call that and what we'll do here is we will swap and what we'll do here is we will swap and what we'll do here is we will swap the order of the operands so basically the order of the operands so basically the order of the operands so basically two times a will redirect to armel and two times a will redirect to armel and two times a will redirect to armel and our mole will basically call a times two our mole will basically call a times two our mole will basically call a times two and that's how that will work and that's how that will work and that's how that will work so so redefining now with armor two times a redefining now with armor two times a redefining now with armor two times a becomes four okay now looking at the becomes four okay now looking at the becomes four okay now looking at the other elements that we still need we other elements that we still need we other elements that we still need we need to know how to exponentiate and how need to know how to exponentiate and how need to know how to exponentiate and how to divide so let's first the explanation to divide so let's first the explanation to divide so let's first the explanation to the exponentiation part we're going to the exponentiation part we're going to the exponentiation part we're going to introduce to introduce to introduce a single a single a single function x here function x here function x here and x is going to mirror 10h in the and x is going to mirror 10h in the and x is going to mirror 10h in the sense that it's a simple single function sense that it's a simple single function sense that it's a simple single function that transforms a single scalar value that transforms a single scalar value that transforms a single scalar value and outputs a single scalar value and outputs a single scalar value and outputs a single scalar value so we pop out the python number we use so we pop out the python number we use so we pop out the python number we use math.x to exponentiate it create a new math.x to exponentiate it create a new math.x to exponentiate it create a new value object value object value object everything that we've seen before the everything that we've seen before the everything that we've seen before the tricky part of course is how do you tricky part of course is how do you tricky part of course is how do you propagate through e to the x propagate through e to the x propagate through e to the x and and so here you can potentially pause the so here you can potentially pause the so here you can potentially pause the video and think about what should go video and think about what should go video and think about what should go here",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1238,
      "text": "okay",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1239,
      "text": "so basically we need to know",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1240,
      "text": "what okay",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1241,
      "text": "so basically we need to know what is the local derivative of e to the x so is the local derivative of e to the x so is the local derivative of e to the x",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1242,
      "text": "so d by d x of e to the x is famously just d by d x of e to the x is famously just d by d x of e to the x is famously just e to the x",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1243,
      "text": "and we've already just e to the x",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1244,
      "text": "and we've already just e to the x",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1245,
      "text": "and we've already just calculated e to the x",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1246,
      "text": "and it's inside calculated e to the x",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1247,
      "text": "and it's inside calculated e to the x",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1248,
      "text": "and it's inside out that data",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1249,
      "text": "so we can do up that data out that data",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1250,
      "text": "so we can do up that data out that data",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1251,
      "text": "so we can do up that data times times and and out that grad that's the chain rule out",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1252,
      "text": "that grad",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1253,
      "text": "that's the chain rule out that grad",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1254,
      "text": "that's the chain rule so we're just chaining on to the current",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1255,
      "text": "so we're just chaining on to the current so we're just chaining on to the current running grad running grad running grad and this is what the expression looks and this is what the expression looks and this is what the expression looks like it looks a little confusing",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1256,
      "text": "but like it looks a little confusing",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1257,
      "text": "but like it looks a little confusing",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1258,
      "text": "but this is what it is",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1259,
      "text": "and that's the this is what it is and that's the this is what it is and that's the exponentiation exponentiation so redefining we should now be able to so redefining we should now be able to so redefining we should now be able to call a.x call a.x call a.x and and hopefully the backward pass works as hopefully the backward pass works as hopefully the backward pass works as well",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1260,
      "text": "okay and the last thing we'd like",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1261,
      "text": "well okay and the last thing we'd like",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1262,
      "text": "well okay and the last thing we'd like to do of course is we'd like to be able to do of course is we'd like to be able to do of course is we'd like to be able to divide to divide to divide now",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1263,
      "text": "now i actually will implement something i actually will implement something i actually will implement something slightly more powerful than division slightly more powerful than division slightly more powerful than division because division is just a special case because division is just a special case because division is just a special case of something a bit more powerful of something a bit more powerful of something a bit more powerful so in particular just by rearranging so in particular just by rearranging so in particular just by rearranging if we have some kind of a b equals if we have some kind of a b equals if we have some kind of a b equals value of 4.0 here we'd like to basically value of 4.0 here we'd like to basically value of 4.0 here we'd like to basically be able to do a divide b",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1264,
      "text": "and we'd like be able to do a divide b",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1265,
      "text": "and we'd like be able to do a divide b",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1266,
      "text": "and we'd like this to be able to give us 0.5 this to be able to give us 0.5 this to be able to give us 0.5 now division actually can be reshuffled now division actually can be reshuffled now division actually can be reshuffled as follows if we have a divide",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1267,
      "text": "b that's as follows if we have a divide",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1268,
      "text": "b that's as follows if we have a divide",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1269,
      "text": "b that's actually the same as a multiplying one actually the same as a multiplying one actually the same as a multiplying one over b over b over b",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1270,
      "text": "and that's the same as a multiplying b and that's the same as a multiplying b",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1271,
      "text": "and that's the same as a multiplying b to the power of negative one to the power of negative one to the power of negative one",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1272,
      "text": "and so what i'd like to do instead is i",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1273,
      "text": "and so what i'd like to do instead is i",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1274,
      "text": "and so what i'd like to do instead is i basically like to implement the basically like to implement the basically like to implement the operation of x to the k for some operation of x to the k for some operation of x to the k for some constant uh k",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1275,
      "text": "so it's an integer or a constant uh k",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1276,
      "text": "so it's an integer or a constant uh k",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1277,
      "text": "so it's an integer or a float",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1278,
      "text": "um and we would like to be able to float um and we would like to be able to float um and we would like to be able to differentiate this and then as a special differentiate this and then as a special differentiate this and then as a special case uh negative one will be division case uh negative one will be division case uh negative one will be division",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1279,
      "text": "and so i'm doing that just because uh and so i'm doing that just because uh and so i'm doing that just because uh it's more general and um",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1280,
      "text": "yeah you might it's more general and",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1281,
      "text": "um yeah you might it's more general and",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1282,
      "text": "um yeah you might as well do it that way so basically what as well do it that way so basically what as well do it that way so basically what i'm saying is we can redefine i'm saying is we can redefine i'm saying is we can redefine uh division uh division uh division which we will put here somewhere which we will put here somewhere which we will put here somewhere",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1283,
      "text": "yeah we can put it here somewhere",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1284,
      "text": "what yeah we can put it here somewhere what yeah we can put it here somewhere what i'm saying is that we can redefine i'm saying is that we can redefine i'm saying is that we can redefine division so self-divide other division so self-divide other division so self-divide other can actually be rewritten as self times can actually be rewritten as self times can actually be rewritten as self times other to the power of negative one other to the power of negative one other to the power of negative one and now and now and now a value raised to the power of negative a value raised to the power of negative a value raised to the power of negative one we have now defined that one we have now defined that one we have now defined that so here's here's so we need to implement the pow function so we need to implement the pow function so we need to implement the pow function where am i going to put the power where am i going to put the power where am i going to put the power function maybe here somewhere function maybe here somewhere function maybe here somewhere this is the skeleton for it this is the skeleton for it this is the skeleton for it",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1285,
      "text": "so this function will be called when we so this function will be called when we so this function will be called when we try to raise a value to some power and try to raise a value to some power and try to raise a value to some power and other will be that power other will be that power other will be that power now i'd like to make sure that other is now i'd like to make sure that other is now i'd like to make sure that other is only an int or a float usually other is only an int or a float usually other is only an int or a float usually other is some kind of a different value object some kind of a different value object some kind of a different value object but here other will be forced to be an but here other will be forced to be an but here other will be forced to be an end or a float otherwise the math end or a float otherwise the math end or a float otherwise the math won't work for won't work for won't work for for or try to achieve in the specific for or try to achieve in the specific for or try to achieve in the specific case that would be a different case that would be a different case that would be a different derivative expression if we wanted other derivative expression if we wanted other derivative expression if we wanted other to be a value to be a value to be a value so here we create the output value which so here we create the output value which so here we create the output value which is just uh you know this data raised to is just uh you know this data raised to is just uh you know this data raised to the power of other and other here could the power of other and other here could the power of other and other here could be for example negative one that's what be for example negative one that's what be for example negative one",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1286,
      "text": "that's what we are hoping to achieve we are hoping to achieve we are hoping to achieve",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1287,
      "text": "and then uh this is the backwards stub and then uh this is the backwards stub and then uh this is the backwards stub and this is the fun part which is what and this is the fun part which is what and this is the fun part which is what is the uh chain rule expression here for is the uh chain rule expression here for is the uh chain rule expression here for back for um back for um back for um back propagating through the power back propagating through the power back propagating through the power function where the power is to the power function where the power is to the power function where the power is to the power of some kind of a constant of some kind of a constant of some kind of a constant",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1288,
      "text": "so this is the exercise and maybe pause so this is the exercise and maybe pause",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1289,
      "text": "so this is the exercise and maybe pause the video here and see if you can figure the video here and see if you can figure the video here and see if you can figure it out yourself as to what we should put it out yourself as to what we should put it out yourself as to what we should put here",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1290,
      "text": "okay so you can actually go here and look at you can actually go here and look at you can actually go here and look at derivative rules as an example",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1291,
      "text": "and we derivative rules as an example and we derivative rules as an example",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1292,
      "text": "and we see lots of derivatives that you can see lots of derivatives that you can see lots of derivatives that you can hopefully know from calculus in hopefully know from calculus in hopefully know from calculus in particular what we're looking for is the particular what we're looking for is the particular what we're looking for is the power rule power rule power rule because that's telling us that if we're because that's telling us that if we're because that's telling us that if we're trying to take d by dx of x to the n trying to take d by dx of x to the n trying to take d by dx of x to the n which is what we're doing here which is what we're doing here which is what we're doing here then that is just n times x to the n then that is just n times x to the n then that is just n times x to the n minus 1 minus 1 minus 1",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1293,
      "text": "right",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1294,
      "text": "right",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1295,
      "text": "okay",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1296,
      "text": "so that's telling us about the local that's telling us about the local that's telling us about the local derivative of this power operation derivative of this power operation derivative of this power operation so all we want here",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1297,
      "text": "so all we want here so all we want here basically n is now other basically n is now other basically n is now other and self.data is x and self.data is x and self.data is x",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1298,
      "text": "and so this now becomes",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1299,
      "text": "and so this now becomes",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1300,
      "text": "and so this now becomes other which is n times other which is n times other which is n times self.data self.data self.data which is now a python in torah float which is now a python in torah float which is now a python in torah float",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1301,
      "text": "it's not a valley object we're accessing it's not a valley object we're accessing it's not a valley object we're accessing the data attribute the data attribute the data attribute raised raised raised to the power of other minus one or n to the power of other minus one or n to the power of other minus one or n minus one minus one minus one",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1302,
      "text": "i can put brackets around this",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1303,
      "text": "but this i can put brackets around this",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1304,
      "text": "but this i can put brackets around this",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1305,
      "text": "but this doesn't matter because doesn't matter because doesn't matter because power takes precedence over multiply and power takes precedence over multiply and power takes precedence over multiply and python so that would have been okay python",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1306,
      "text": "so that would have been okay python",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1307,
      "text": "so that would have been okay",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1308,
      "text": "and that's the local derivative only",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1309,
      "text": "but and that's the local derivative only",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1310,
      "text": "but and that's the local derivative only",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1311,
      "text": "but now we have to chain it and we change now we have to chain it",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1312,
      "text": "and we change now we have to chain it and we change just simply by multiplying by output just simply by multiplying by output just simply by multiplying by output grad that's chain rule grad that's chain rule grad that's chain rule and this should technically work and this should technically work and this should technically work and we're going to find out soon but now and we're going to find out soon but now and we're going to find out soon",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1313,
      "text": "but now if we if we if we do this this should now work do this this should now work do this this should now work and we get 0.5 so the forward pass works",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1314,
      "text": "and we get 0.5 so the forward pass works",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1315,
      "text": "and we get 0.5 so the forward pass works but does the backward pass work",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1316,
      "text": "and i but does the backward pass work",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1317,
      "text": "and i but does the backward pass work",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1318,
      "text": "and i realize that we actually also have to realize that we actually also have to realize that we actually also have to know how to subtract so know how to subtract so know how to subtract",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1319,
      "text": "so right now a minus b will not work right now a minus b will not work right now a minus b will not work to make it work we need one more to make it work we need one more to make it work we need one more piece of code here piece of code here piece of code here and and basically this is the basically this is the basically this is the subtraction and the way we're going to subtraction and the way we're going to subtraction and the way we're going to implement subtraction is we're going to implement subtraction is we're going to implement subtraction is we're going to implement it by addition of a negation implement it by addition of a negation implement it by addition of a negation and then to implement negation we're and then to implement negation we're and then to implement negation we're gonna multiply by negative one so just gonna multiply by negative one so just gonna multiply by negative one so just again using the stuff we've already again using the stuff we've already again using the stuff we've already built and just um expressing it in terms built and just um expressing it in terms built and just um expressing it in terms of what we have and a minus b is now of what we have and a minus b is now of what we have and a minus b is now working",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1320,
      "text": "okay",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1321,
      "text": "so now let's scroll again working",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1322,
      "text": "okay",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1323,
      "text": "so now let's scroll again working",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1324,
      "text": "okay",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1325,
      "text": "so now let's scroll again to this expression here for this neuron to this expression here for this neuron to this expression here for this neuron and let's just and let's just and let's just compute the backward pass here once compute the backward pass here once compute the backward pass here once we've defined o we've defined o we've defined o and let's draw it and let's draw it and let's draw it so here's the gradients for all these so here's the gradients for all these so here's the gradients for all these leaf nodes for this two-dimensional leaf nodes for this two-dimensional leaf nodes for this two-dimensional neuron that has a 10h that we've seen neuron that has a 10h that we've seen neuron that has a 10h that we've seen before so now what i'd like to do is i'd before so now what i'd like to do is i'd before so now what i'd like to do is i'd like to break up this 10h like to break up this 10h like to break up this 10h into this expression here into this expression here into this expression here so let me copy paste this so let me copy paste this so let me copy paste this here here and now instead of we'll preserve the and now instead of we'll preserve the and now instead of we'll preserve the label label and we will change how we define o and we will change how we define o and we will change how we define o",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1326,
      "text": "so in particular we're going to so in particular we're going to so in particular we're going to implement this formula here implement this formula here implement this formula here",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1327,
      "text": "so we need e to the 2x so we need e to the 2x so we need e to the 2x minus 1 over e to the x plus 1.",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1328,
      "text": "so e to minus 1 over e to the x plus 1.",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1329,
      "text": "so e to minus 1 over e to the x plus 1.",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1330,
      "text": "so e to the 2x we need to take 2 times n",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1331,
      "text": "and we the 2x we need to take 2 times n and we the 2x we need to take 2 times n and we need to exponentiate it that's e to the need to exponentiate it that's e to the need to exponentiate it that's e to the two x and then because we're using it two x",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1332,
      "text": "and then because we're using it two x",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1333,
      "text": "and then because we're using it twice let's create an intermediate twice let's create an intermediate twice let's create an intermediate variable e variable e variable e and then define o as and then define o as and then define o as e plus one over e plus one over e plus one over e minus one over e plus one e minus one over e plus one e minus one over e plus one e minus one over e plus one e minus one over e plus one",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1334,
      "text": "and that should be it",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1335,
      "text": "and then we should and that should be it",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1336,
      "text": "and then we should and that should be it",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1337,
      "text": "and then we should be able to draw that of o be able to draw that of o be able to draw that of o so now before i run this what do we so now before i run this what do we so now before i run this what do we expect to see expect to see expect to see number one we're expecting to see a much number one we're expecting to see a much number one we're expecting to see a much longer longer longer graph here because we've broken up 10h graph here because we've broken up 10h graph here because we've broken up 10h into a bunch of other operations into a bunch of other operations into a bunch of other operations but those operations are mathematically but those operations are mathematically but those operations are mathematically equivalent",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1338,
      "text": "and so what we're expecting equivalent",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1339,
      "text": "and so what we're expecting equivalent",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1340,
      "text": "and so what we're expecting to see is number one the same to see is number one the same to see is number one the same result here so the forward pass works result here so the forward pass works result here so the forward pass works and number two because of that and number two because of that and number two because of that mathematical equivalence we expect to mathematical equivalence we expect to mathematical equivalence we expect to see the same backward pass and the same see the same backward pass and the same see the same backward pass and the same gradients on these leaf nodes so these gradients on these leaf nodes so these gradients on these leaf nodes so these gradients should be identical gradients should be identical gradients should be identical",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1341,
      "text": "so let's run this so let's run this so let's run this so number one let's verify that instead so number one let's verify that instead so number one let's verify that instead of a single 10h node we have now",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1342,
      "text": "x and of a single 10h node we have now",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1343,
      "text": "x and of a single 10h node we have now",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1344,
      "text": "x and we have plus we have times negative one we have plus we have times negative one we have plus we have times negative one",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1345,
      "text": "uh this is the division uh this is the division uh this is the division and we end up with the same forward pass and we end up with the same forward pass and we end up with the same forward pass here here and then the gradients we have to be and then the gradients we have to be and then the gradients we have to be careful because they're in slightly careful because they're in slightly careful because they're in slightly different order potentially the different order potentially the different order potentially the gradients for w2x2 should be 0 and 0.5 gradients for w2x2 should be 0 and 0.5 gradients for w2x2 should be 0 and 0.5 w2 and x2 are 0 and 0.5 w2 and x2 are 0 and 0.5 w2 and x2 are 0 and 0.5 and w1 x1 are 1 and negative 1.5 and w1 x1 are 1 and negative 1.5 and w1 x1 are 1 and negative 1.5 1 and negative 1.5 1 and negative 1.5 1 and negative 1.5 so that means that both our forward so that means that both our forward so that means that both our forward passes and backward passes were correct passes and backward passes were correct passes and backward passes were correct because this turned out to be equivalent because this turned out to be equivalent because this turned out to be equivalent to to 10h before 10h before 10h before and so the reason i wanted to go through and so the reason i wanted to go through and so the reason i wanted to go through this exercise is number one we got to this exercise is number one we got to this exercise is number one we got to practice a few more operations and uh practice a few more operations and uh practice a few more operations and uh writing more backwards passes and number writing more backwards passes and number writing more backwards passes and",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1346,
      "text": "number two i wanted to illustrate the point two i wanted to illustrate the point two i wanted to illustrate the point that that the um the um the um the level at which you implement your the level at which you implement your the level at which you implement your operations is totally up to you you can operations is totally up to you you can operations is totally up to you you can implement backward passes for tiny implement backward passes for tiny implement backward passes for tiny expressions like a single individual expressions like a single individual expressions like a single individual plus or a single times plus or a single times plus or a single times or you can implement them for say or you can implement them for say or you can implement them for say 10h 10h which is a kind of a potentially you can which is a kind of a potentially",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1347,
      "text": "you can which is a kind of a potentially you can see it as a composite operation because see it as a composite operation because see it as a composite operation because it's made up of all these more atomic it's made up of all these more atomic it's made up of all these more atomic operations but really all of this is operations but really all of this is operations but really all of this is kind of like a fake concept all that kind of like a fake concept all that kind of like a fake concept all that matters is we have some kind of inputs matters is we have some kind of inputs matters is we have some kind of inputs and some kind of an output and",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1348,
      "text": "this and some kind of an output and this and some kind of an output and this output is a function of the inputs in output is a function of the inputs in output is a function of the inputs in some way and as long as you can do some way and as long as you can do some way and as long as you can do forward pass and the backward pass of forward pass and the backward pass of forward pass and the backward pass of that little operation it doesn't matter that little operation it doesn't matter that little operation it doesn't matter what that operation is what that operation is what that operation is and how composite it is and how composite it is and how composite it is if you can write the local gradients you if you can write the local gradients you if you can write the local gradients you can chain the gradient and you can can chain the gradient and you can can chain the gradient and you can continue back propagation so the design continue back propagation so the design continue back propagation so the design of what those functions are is of what those functions are is of what those functions are is completely up to you completely up to you completely up to you so now i would like to show you how you so now i would like to show you how you so now i would like to show you how you can do the exact same thing by using a can do the exact same thing by using a can do the exact same thing by using a modern deep neural network library like modern deep neural network library like modern deep neural network library like for example pytorch which i've roughly for example pytorch which i've roughly for example pytorch which i've roughly modeled micrograd modeled micrograd modeled micrograd by by and so and so pytorch is something you would use in pytorch is something you would use in pytorch is something you would use in production and i'll show you how you can production",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1349,
      "text": "and i'll show you how you can production",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1350,
      "text": "and i'll show you how you can do the exact same thing but in pytorch do the exact same thing but in pytorch do the exact same thing but in pytorch api",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1351,
      "text": "so i'm just going to copy paste it api",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1352,
      "text": "so i'm just going to copy paste it api",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1353,
      "text": "so i'm just going to copy paste it in and walk you through it a little bit in and walk you through it a little bit in and walk you through it a little bit this is what it looks like this is what it looks like this is what it looks like so we're going to import pi torch",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1354,
      "text": "and so we're going to import pi torch",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1355,
      "text": "and so we're going to import pi torch",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1356,
      "text": "and then we need to define these then we need to define these then we need to define these value objects like we have here value objects like we have here value objects like we have here now micrograd is a scalar valued now micrograd is a scalar valued now micrograd is a scalar valued engine so we only have scalar values engine so we only have scalar values engine so we only have scalar values like 2.0 but in pi torch everything is like 2.0 but in pi torch everything is like 2.0 but in pi torch everything is based around tensors and like i based around tensors and like i based around tensors and like i mentioned tensors are just n-dimensional mentioned tensors are just n-dimensional mentioned tensors are just n-dimensional arrays of scalars arrays of scalars arrays of scalars",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1357,
      "text": "so that's why things get a little bit",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1358,
      "text": "so that's why things get a little bit",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1359,
      "text": "so that's why things get a little bit more complicated here i just need a more complicated here i just need a more complicated here",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1360,
      "text": "i just need a scalar value to tensor a tensor with scalar value to tensor a tensor with scalar value to tensor a tensor with just a single element just a single element just a single element but by default when you work with but by default when you work with but by default when you work with pytorch you would use um pytorch you would use um pytorch you would use um more complicated tensors like this so if more complicated tensors like this so if more complicated tensors like this so if i import pytorch then i can create tensors like this",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1361,
      "text": "and then i can create tensors like this and this tensor for example is a two by this tensor for example is a two by this tensor for example is a two by three array three array three array of scalar of scalar of scalar scalars scalars scalars in a single compact representation so we in a single compact representation",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1362,
      "text": "so we in a single compact representation so we can check its shape we see that it's a can check its shape we see that it's a can check its shape we see that it's a two by three array two by three array two by three array and so on and so on and so on so this is usually what you would work so this is usually what you would work so this is usually what you would work with um in the actual libraries so here with um in the actual libraries so here with um in the actual libraries",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1363,
      "text": "so here i'm creating i'm creating i'm creating a tensor that has only a single element a tensor that has only a single element a tensor that has only a single element 2.0 2.0 and then i'm casting it to be double",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1364,
      "text": "and then i'm casting it to be double",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1365,
      "text": "and then i'm casting it to be double because python is by default using because python is by default using because python is by default using double precision for its floating point double precision for its floating point double precision for its floating point numbers",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1366,
      "text": "so i'd like everything to be numbers",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1367,
      "text": "so i'd like everything to be numbers",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1368,
      "text": "so i'd like everything to be identical by default the data type of identical by default the data type of identical by default the data type of these tensors will be float32",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1369,
      "text": "so it's these tensors will be float32",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1370,
      "text": "so it's these tensors will be float32",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1371,
      "text": "so it's only using a single precision float so only using a single precision float so only using a single precision float",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1372,
      "text": "so i'm casting it to double",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1373,
      "text": "i'm casting it to double",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1374,
      "text": "i'm casting it to double so that we have float64 just like in so that we have float64 just like in so that we have float64 just like in python python",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1375,
      "text": "so i'm casting to double",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1376,
      "text": "and then we get so i'm casting to double",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1377,
      "text": "and then we get so i'm casting to double",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1378,
      "text": "and then we get something similar to value of two the something similar to value of two the something similar to value of two the next thing i have to do is because these next thing i have to do is because these next thing i have to do is because these are leaf nodes by default pytorch are leaf nodes by default pytorch are leaf nodes by default pytorch assumes that they do not require assumes that they do not require assumes that they do not require gradients so i need to explicitly say gradients so i need to explicitly say gradients so i need to explicitly say that all of these nodes require that all of these nodes require that all of these nodes require gradients gradients",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1379,
      "text": "okay",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1380,
      "text": "so this is going to construct",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1381,
      "text": "okay",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1382,
      "text": "so this is going to construct",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1383,
      "text": "okay",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1384,
      "text": "so this is going to construct scalar valued one element tensors scalar valued one element tensors scalar valued one element tensors make sure that fighters knows that they make sure that fighters knows that they make sure that fighters knows that they require gradients now by default these require gradients now by default these require gradients now by default these are set to false by the way because of are set to false by the way because of are set to false by the way because of efficiency reasons because usually you efficiency reasons because usually you efficiency reasons because usually you would not want gradients for leaf nodes would not want gradients for leaf nodes would not want gradients for leaf nodes like the inputs to the network and this like the inputs to the network and this like the inputs to the network and this is just trying to be efficient in the is just trying to be efficient in the is just trying to be efficient in the most common cases most common cases most common cases",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1385,
      "text": "so once we've defined all of our values so once we've defined all of our values so once we've defined all of our values in python we can perform arithmetic just in python we can perform arithmetic just in python we can perform arithmetic just like we can here in microgradlend",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1386,
      "text": "so like we can here in microgradlend so like we can here in microgradlend so this will just work and then there's a this will just work and then there's a this will just work and then there's a torch.10h also torch.10h also torch.10h also and when we get back is a tensor again and when we get back is a tensor again and when we get back is a tensor again",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1387,
      "text": "and we can and we can",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1388,
      "text": "and we can just like in micrograd it's got a data just like in micrograd it's got a data just like in micrograd it's got a data attribute and it's got grant attributes attribute",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1389,
      "text": "and it's got grant attributes attribute",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1390,
      "text": "and it's got grant attributes",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1391,
      "text": "so these tensor objects just like in so these tensor objects just like in so these tensor objects just like in micrograd have a dot data and a dot grad micrograd have a dot data and a dot grad micrograd have a dot data and a dot grad and and the only difference here is that we need the only difference here is that we need the only difference here is that we need to call it that item because otherwise to call it that item because otherwise to call it that item because otherwise um pi torch um pi torch um pi torch that item basically takes that item basically takes that item basically takes a single tensor of one element and it a single tensor of one element and it a single tensor of one element and it just returns that element stripping out just returns that element stripping out just returns that element stripping out the tensor the tensor the tensor",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1392,
      "text": "so let me just run this",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1393,
      "text": "and hopefully we so let me just run this",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1394,
      "text": "and hopefully we so let me just run this",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1395,
      "text": "and hopefully we are going to get this is going to print are going to get this is going to print are going to get this is going to print the forward pass the forward pass the forward pass which is 0.707 which is 0.707 which is 0.707 and this will be the gradients which and this will be the gradients which and this will be the gradients which hopefully are hopefully are hopefully are 0.5 0 negative 1.5 and 1. 0.5 0 negative 1.5 and 1. 0.5 0 negative 1.5 and 1.",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1396,
      "text": "so if we just run this so if we just run this so if we just run this there we go there we go 0.7",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1397,
      "text": "so the forward pass agrees and then 0.7 so the forward pass agrees and then 0.7",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1398,
      "text": "so the forward pass agrees and then point five zero negative one point five point five zero negative one point five point five zero negative one point five and one and one and one so pi torch agrees with us so pi torch agrees with us so pi torch agrees with us and just to show you here basically o and just to show you here basically o and just to show you here basically o here's a tensor with a single element here's a tensor with a single element here's a tensor with a single element and it's a double",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1399,
      "text": "and it's a double",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1400,
      "text": "and it's a double",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1401,
      "text": "and we can call that item on it to just",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1402,
      "text": "and we can call that item on it to just",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1403,
      "text": "and we can call that item on it to just get the single number out get the single number out get the single number out",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1404,
      "text": "so that's what item does and o is a",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1405,
      "text": "so that's what item does and o is a",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1406,
      "text": "so that's what item does and o is a tensor object like i mentioned",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1407,
      "text": "and it's tensor object like i mentioned",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1408,
      "text": "and it's tensor object like i mentioned",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1409,
      "text": "and it's got a backward function just like we've got a backward function just like we've got a backward function just like we've implemented implemented implemented and then all of these also have a dot and then all of these also have a dot and then all of these also have a dot graph so like x2 for example in the grad graph so like x2 for example in the grad graph so like x2 for example in the grad and it's a tensor and we can pop out the",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1410,
      "text": "and it's a tensor and we can pop out the",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1411,
      "text": "and it's a tensor and we can pop out the individual number with that actin individual number with that actin individual number with that actin so basically so basically torches torch can do what we did in torches torch can do what we did in torches torch can do what we did in micrograph is a special case when your micrograph is a special case when your micrograph is a special case when your tensors are all single element tensors tensors are all single element tensors tensors are all single element tensors but the big deal with pytorch is that but the big deal with pytorch is that but the big deal with pytorch is that everything is significantly more everything is significantly more everything is significantly more efficient because we are working with efficient because we are working with efficient because we are working with these tensor objects and we can do lots these tensor objects",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1412,
      "text": "and we can do lots these tensor objects and we can do lots of operations in parallel on all of of operations in parallel on all of of operations in parallel on all of these tensors these tensors these tensors",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1413,
      "text": "but otherwise what we've built very much",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1414,
      "text": "but otherwise what we've built very much",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1415,
      "text": "but otherwise what we've built very much agrees with the api of pytorch agrees with the api of pytorch agrees with the api of pytorch",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1416,
      "text": "okay",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1417,
      "text": "so now that we have some machinery",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1418,
      "text": "okay",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1419,
      "text": "so now that we have some machinery",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1420,
      "text": "okay",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1421,
      "text": "so now that we have some machinery to build out pretty complicated to build out pretty complicated to build out pretty complicated mathematical expressions we can also mathematical expressions we can also mathematical expressions we can also start building out neural nets and as i start building out neural nets and as i start building out neural nets and as i mentioned neural nets are just a mentioned neural nets are just a mentioned neural nets are just a specific class of mathematical specific class of mathematical specific class of mathematical expressions expressions",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1422,
      "text": "so we're going to start building out",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1423,
      "text": "a so we're going to start building out",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1424,
      "text": "a so we're going to start building out a neural net piece by piece and eventually neural net piece by piece and eventually neural net piece by piece and eventually we'll build out a two-layer multi-layer we'll build out a two-layer multi-layer we'll build out a two-layer multi-layer layer perceptron as it's called and i'll layer perceptron as it's called and i'll layer perceptron as it's called and i'll show you exactly what that means show you exactly what that means show you exactly what that means let's start with",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1425,
      "text": "a single individual let's start with",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1426,
      "text": "a single individual let's start with a single individual neuron we've implemented one here",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1427,
      "text": "but neuron we've implemented one here but neuron we've implemented one here",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1428,
      "text": "but here i'm going to implement one that here i'm going to implement one that here i'm going to implement one that also subscribes to the pytorch api in also subscribes to the pytorch api in also subscribes to the pytorch api in how it designs its neural network how it designs its neural network how it designs its neural network modules modules modules",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1429,
      "text": "so just like we saw that we can like so just like we saw that we can like so just like we saw that we can like match the api of pytorch match the api of pytorch match the api of pytorch on the auto grad side we're going to try on the auto grad side we're going to try on the auto grad side we're going to try to do that on the neural network modules to do that on the neural network modules to do that on the neural network modules so here's class neuron so here's class neuron",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1430,
      "text": "so here's class neuron and just for the sake of efficiency i'm and just for the sake of efficiency i'm and just for the sake of efficiency i'm going to copy paste some sections that going to copy paste some sections that going to copy paste some sections that are relatively straightforward are relatively straightforward are relatively straightforward so the constructor will take so the constructor will take so the constructor will take number of inputs to this neuron which is number of inputs to this neuron which is number of inputs to this neuron which is how many inputs come to a neuron",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1431,
      "text": "so this how many inputs come to a neuron",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1432,
      "text": "so this how many inputs come to a neuron",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1433,
      "text": "so this one for example has three inputs one for example has three inputs one for example has three inputs",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1434,
      "text": "and then it's going to create a weight",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1435,
      "text": "and then it's going to create a weight",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1436,
      "text": "and then it's going to create a weight there is some random number between there is some random number between there is some random number between negative one and one for every one of negative one and one for every one of negative one and one for every one of those inputs those inputs those inputs and a bias that controls the overall and a bias that controls the overall and a bias that controls the overall trigger happiness of this neuron trigger happiness of this neuron trigger happiness of this neuron",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1437,
      "text": "and then we're going to implement a def",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1438,
      "text": "and then we're going to implement a def",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1439,
      "text": "and then we're going to implement a def underscore underscore call underscore underscore call underscore underscore call of self and x some input x of self and x some input x of self and x some input x",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1440,
      "text": "and really what we don't do here is w and really what we don't do here is w and really what we don't do here is w times x plus b times x plus b times x plus b where w times x here is a dot product where w times x here is a dot product where w times x here is a dot product specifically specifically specifically now if you haven't seen now if you haven't seen now if you haven't seen call call let me just return 0.0 here for now the let me just return 0.0 here for now the let me just return 0.0 here for now the way this works now is we can have an x way this works now is we can have an x way this works now is we can have an x which is say like 2.0 3.0 then we can which is say like 2.0 3.0 then we can which is say like 2.0 3.0 then we can initialize a neuron that is initialize a neuron that is initialize a neuron that is two-dimensional two-dimensional two-dimensional because these are two numbers and then because these are two numbers and then because these are two numbers and then we can feed those two numbers into that we can feed those two numbers into that we can feed those two numbers into that neuron to get an output neuron to get an output neuron to get an output",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1441,
      "text": "and so when you use this notation n of x",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1442,
      "text": "and so when you use this notation n of x",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1443,
      "text": "and so when you use this notation n of x python will use call python will use call python will use call so currently call just return 0.0 now we'd like to actually do the forward now we'd like to actually do the forward pass of this neuron instead pass of this neuron instead pass of this neuron instead",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1444,
      "text": "so we're going to do here first is we so we're going to do here first is we so we're going to do here first is we need to basically multiply all of the need to basically multiply all of the need to basically multiply all of the elements of w with all of the elements elements of w with all of the elements elements of w with all of the elements of x pairwise we need to multiply them of x pairwise we need to multiply them of x pairwise we need to multiply them so the first thing we're going to do is so the first thing we're going to do is so the first thing we're going to do is we're going to zip up we're going to zip up we're going to zip up celta w and x celta w and x celta w and x and in python zip takes two iterators and in python zip takes two iterators and in python zip takes two iterators and it creates a new iterator that",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1445,
      "text": "and it creates a new iterator that",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1446,
      "text": "and it creates a new iterator that iterates over the tuples of the iterates over the tuples of the iterates over the tuples of the corresponding entries corresponding entries corresponding entries so for example just to show you we can so for example just to show you we can so for example just to show you we can print this list print this list print this list and still return 0.0 here so we see that these w's are paired up so we see that these w's are paired up with the x's w with x for w i x i in for",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1447,
      "text": "w i x i in we want to multiply w times we want to multiply w times we want to multiply w times w wi times",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1448,
      "text": "x i w wi times x i w wi times x",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1449,
      "text": "i",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1450,
      "text": "and then we want to sum all of that",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1451,
      "text": "and then we want to sum all of that",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1452,
      "text": "and then we want to sum all of that together together together to come up with an activation to come up with an activation to come up with an activation and add also subnet b on top and add also subnet b on top and add also subnet b on top",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1453,
      "text": "so that's the raw activation",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1454,
      "text": "and then of so that's the raw activation",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1455,
      "text": "and then of so that's the raw activation",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1456,
      "text": "and then of course we need to pass that through a course we need to pass that through a course we need to pass that through a non-linearity so what we're going to be non-linearity so what we're going to be non-linearity so what we're going to be returning is act.10h returning is act.10h returning is act.10h and here's out and here's out and here's out",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1457,
      "text": "so so now we see that we are getting some now we see that we are getting some now we see that we are getting some outputs",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1458,
      "text": "and we get a different output outputs and we get a different output outputs and we get a different output from a neuron each time because we are from a neuron each time because we are from a neuron each time because we are initializing different weights and by initializing different weights and by initializing different weights and by and biases and biases and biases and then to be a bit more efficient here and then to be a bit more efficient here and then to be a bit more efficient here actually sum by the way takes a second actually sum by the way takes a second actually sum by the way takes a second optional parameter which is the start optional parameter which is the start optional parameter which is the start and by default the start is zero so and by default the start is zero so and by default the start is zero so these elements of this sum will be added these elements of this sum will be added these elements of this sum will be added on top of zero to begin with but on top of zero to begin with but on top of zero to begin with",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1459,
      "text": "but actually we can just start with cell dot actually we can just start with cell dot actually we can just start with cell dot b b",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1460,
      "text": "and then we just have an expression like",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1461,
      "text": "and then we just have an expression like",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1462,
      "text": "and then we just have an expression like this",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1463,
      "text": "and then the generator expression here and then the generator expression here must be parenthesized in python must be parenthesized in python must be parenthesized in python there we go yep",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1464,
      "text": "so now we can forward a single",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1465,
      "text": "yep",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1466,
      "text": "so now we can forward a single neuron next up we're going to define a neuron next up we're going to define a neuron next up we're going to define a layer of neurons so here we have a layer of neurons so here we have a layer of neurons so here we have a schematic for a mlb schematic for a mlb schematic for a mlb",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1467,
      "text": "so we see that these mlps each layer so we see that these mlps each layer so we see that these mlps each layer this is one layer has actually a number this is one layer has actually a number this is one layer has actually a number of neurons and they're not connected to of neurons and they're not connected to of neurons and they're not connected to each other but all of them are fully each other but all of them are fully each other but all of them are fully connected to the input connected to the input connected to the input so what is a layer of neurons it's just so what is a layer of neurons it's just so what is a layer of neurons it's just it's just a set of neurons evaluated it's just a set of neurons evaluated it's just a set of neurons evaluated independently independently independently so so in the interest of time i'm going to do in the interest of time i'm going to do in the interest of time i'm going to do something fairly straightforward here something fairly straightforward here something fairly straightforward here it's um",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1468,
      "text": "it's um",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1469,
      "text": "it's um literally a layer is just a list of literally a layer is just a list of literally a layer is just a list of neurons neurons neurons and then how many neurons do we have we and then how many neurons do we have we and then how many neurons do we have we take that as an input argument here how take that as an input argument here how take that as an input argument here how many neurons do you want in your layer many neurons do you want in your layer many neurons",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1470,
      "text": "do you want in your layer number of outputs in this layer number of outputs in this layer number of outputs in this layer",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1471,
      "text": "and so we just initialize completely",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1472,
      "text": "and so we just initialize completely",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1473,
      "text": "and so we just initialize completely independent neurons with this given independent neurons with this given independent neurons with this given dimensionality and when we call on it we dimensionality and when we call on it we dimensionality and when we call on it we just independently just independently just independently evaluate them so now instead of a neuron evaluate them so now instead of a neuron evaluate them so now instead of a neuron we can make a layer of neurons they are we can make a layer of neurons they are we can make a layer of neurons they are two-dimensional neurons and let's have two-dimensional neurons and let's have two-dimensional neurons and let's have three of them three of them three of them and now we see that we have three and now we see that we have three and now we see that we have three independent evaluations of three independent evaluations of three independent evaluations of three different neurons different neurons different neurons",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1474,
      "text": "right right",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1475,
      "text": "okay finally let's complete this picture",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1476,
      "text": "okay finally let's complete this picture",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1477,
      "text": "okay finally let's complete this picture and define an entire multi-layer and define an entire multi-layer and define an entire multi-layer perceptron or mlp perceptron or mlp perceptron or mlp and as we can see here in an mlp these",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1478,
      "text": "and as we can see here in an mlp these and as we can see here in an mlp these layers just feed into each other layers just feed into each other layers just feed into each other sequentially sequentially sequentially",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1479,
      "text": "so let's come here",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1480,
      "text": "and i'm just going to so let's come here",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1481,
      "text": "and i'm just going to so let's come here",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1482,
      "text": "and i'm just going to copy the code here in interest of time copy the code here in interest of time copy the code here in interest of time",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1483,
      "text": "so an mlp is very similar so an mlp is very similar so an mlp is very similar we're taking the number of inputs we're taking the number of inputs we're taking the number of inputs as before but",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1484,
      "text": "now instead of taking a as before but now instead of taking a as before but now instead of taking a single n out which is number of neurons single n out which is number of neurons single n out which is number of neurons in a single layer we're going to take a in a single layer we're going to take a in a single layer we're going to take a list of an outs and this list defines list of an outs and this list defines list of an outs and this list defines the sizes of all the layers that we want the sizes of all the layers that we want the sizes of all the layers that we want in our mlp in our mlp in our mlp so here we just put them all together",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1485,
      "text": "so here we just put them all together",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1486,
      "text": "so here we just put them all together and then iterate over consecutive pairs and then iterate over consecutive pairs and then iterate over consecutive pairs of these sizes and create layer objects of these sizes and create layer objects of these sizes and create layer objects for them for them for them and then in the call function we are and then in the call function we are and then in the call function we are just calling them sequentially so that's just calling them sequentially",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1487,
      "text": "so that's just calling them sequentially so that's an mlp really an mlp really an mlp really and let's actually re-implement this and let's actually re-implement this and let's actually re-implement this picture",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1488,
      "text": "so we want three input neurons picture",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1489,
      "text": "so we want three input neurons picture",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1490,
      "text": "so we want three input neurons and then two layers of four and an and then two layers of four and an and then two layers of four and an output unit output unit output unit",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1491,
      "text": "so so we want we want we want a three-dimensional input say this is an a three-dimensional input",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1492,
      "text": "say this is an a three-dimensional input say this is an example input we want three inputs into example input we want three inputs into example input we want three inputs into two layers of four and one output two layers of four and one output two layers of four and one output and this of course is an mlp and this of course is an mlp and this of course is an mlp and there we go that's a forward pass of and there we go that's a forward pass of and there we go that's a forward pass of an mlp an mlp an mlp to make this a little bit nicer you see to make this a little bit nicer you see to make this a little bit nicer you see how we have just a single element but how we have just a single element but how we have just a single element but it's wrapped in a list because layer it's wrapped in a list because layer it's wrapped in a list because layer always returns lists always returns lists always returns lists circle for convenience circle for convenience circle for convenience return outs at zero if len out is return outs at zero if len out is return outs at zero if len out is exactly a single element exactly a single element exactly a single element else return fullest else return fullest else return fullest and this will allow us to just get a and this will allow us to just get a and this will allow us to just get a single value out at the last layer that single value out at the last layer that single value out at the last layer that only has a single neuron only has a single neuron only has a single neuron and finally we should be able to draw and finally we should be able to draw and finally we should be able to draw dot of n of x dot of n of x dot of n of x",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1493,
      "text": "and and as you might imagine as you might imagine as you might imagine these expressions are now getting these expressions are now getting these expressions are now getting relatively involved relatively involved relatively involved so this is an entire mlp that we're so this is an entire mlp that we're so this is an entire mlp that we're defining now all the way until a single output all the way until a single output",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1494,
      "text": "okay",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1495,
      "text": "okay",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1496,
      "text": "and so obviously you would never",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1497,
      "text": "and so obviously you would never",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1498,
      "text": "and so obviously you would never differentiate on pen and paper these differentiate on pen and paper these differentiate on pen and paper these expressions but with micrograd we will expressions but with micrograd we will expressions but with micrograd we will be able to back propagate all the way be able to back propagate all the way be able to back propagate all the way through this through this through this and back propagate and back propagate and back propagate into into into these weights of all these neurons so these weights of all these neurons so these weights of all these neurons so let's see how that works",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1499,
      "text": "okay",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1500,
      "text": "so let's let's see how that works",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1501,
      "text": "okay",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1502,
      "text": "so let's let's see how that works",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1503,
      "text": "okay",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1504,
      "text": "so let's create ourselves a very simple create ourselves a very simple create ourselves a very simple example data set here example data set here example data set here so this data set has four examples so this data set has four examples so this data set has four examples",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1505,
      "text": "and so we have four possible",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1506,
      "text": "and so we have four possible",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1507,
      "text": "and so we have four possible inputs into the neural net inputs into the neural net inputs into the neural net and we have four desired targets so we'd and we have four desired targets",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1508,
      "text": "so we'd and we have four desired targets",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1509,
      "text": "so we'd like the neural net to assign like the neural net to assign like the neural net to assign or output 1.0 when it's fed this example or output 1.0 when it's fed this example or output 1.0 when it's fed this example negative one when it's fed these negative one when it's fed these negative one when it's fed these examples and one when it's fed this examples and one when it's fed this examples and one when it's fed this example",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1510,
      "text": "so it's a very simple binary example so it's a very simple binary example",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1511,
      "text": "so it's a very simple binary classifier neural net basically that we classifier neural net basically that we classifier neural net basically that we would like here would like here would like here now let's think what the neural net now let's think what the neural net now let's think what the neural net currently thinks about these four currently thinks about these four currently thinks about these four examples we can just get their examples we can just get their examples we can just get their predictions predictions predictions um basically we can just call n of x for um basically we can just call n of x for um basically we can just call n of x for x in axis x in axis x in axis",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1512,
      "text": "and then we can",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1513,
      "text": "and then we can",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1514,
      "text": "and then we can print print print so these are the outputs of the neural so these are the outputs of the neural so these are the outputs of the neural net on those four examples net on those four examples net on those four examples",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1515,
      "text": "so so the first one is 0.91",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1516,
      "text": "but we'd like it the first one is 0.91",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1517,
      "text": "but we'd like it the first one is 0.91",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1518,
      "text": "but we'd like it to be one",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1519,
      "text": "so we should push this one to be one",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1520,
      "text": "so we should push this one to be one",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1521,
      "text": "so we should push this one higher this one we want to be higher higher this one we want to be higher higher this one we want to be higher this one says 0.88 and we want this to this one says 0.88 and we want this to this one says 0.88 and we want this to be negative one be negative one be negative one this is 0.8 we want it to be negative this is 0.8 we want it to be negative this is 0.8 we want it to be negative one one and this one is 0.8 we want it to be one and this one is 0.8 we want it to be one and this one is 0.8 we want it to be one",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1522,
      "text": "so how do we make the neural net and how so how do we make the neural net and how so how do we make the neural net and how do we tune the weights do we tune the weights do we tune the weights to to better predict the desired targets better predict the desired targets better predict the desired targets and the trick used in deep learning to and the trick used in deep learning to and the trick used in deep learning to achieve this is to achieve this is to achieve this is to calculate a single number that somehow calculate a single number that somehow calculate a single number that somehow measures the total performance of your measures the total performance of your measures the total performance of your neural net",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1523,
      "text": "and we call this single neural net and we call this single neural net and we call this single number the loss number the loss number the loss so the loss so the loss so the loss first first is is a single number that we're going is is a single number that we're going is is a single number that we're going to define that basically measures how to define that basically measures how to define that basically measures how well the neural net is performing right well the neural net is performing right well the neural net is performing right now we have the intuitive sense that now we have the intuitive sense that now we have the intuitive sense that it's not performing very well because it's not performing very well because it's not performing very well because we're not very much close to this we're not very much close to this we're not very much close to this so the loss will be high",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1524,
      "text": "and we'll want so the loss will be high and we'll want so the loss will be high and we'll want to minimize the loss to minimize the loss to minimize the loss so in particular in this case what we're so in particular in this case what we're so in particular in this case what we're going to do is we're going to implement going to do is we're going to implement going to do is we're going to implement the mean squared error loss the mean squared error loss the mean squared error loss",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1525,
      "text": "so this is doing is we're going to so this is doing is we're going to",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1526,
      "text": "so this is doing is we're going to basically iterate um basically iterate um basically iterate um for y ground truth for y ground truth for y ground truth and y output in zip of um and y output in zip of um and y output in zip of um wise and white red",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1527,
      "text": "so we're going to wise and white red",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1528,
      "text": "so we're going to wise and white red",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1529,
      "text": "so we're going to pair up the pair up the pair up the ground truths with the predictions ground truths with the predictions ground truths with the predictions and this zip iterates over tuples of and this zip iterates over tuples of and this zip iterates over tuples of them",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1530,
      "text": "them them and for each and for each and for each y ground truth and y output we're going y ground truth and y output we're going y ground truth and y output we're going to subtract them and square them and square them so let's first see what these losses are so let's first see what these losses are so let's first see what these losses are these are individual loss components these are individual loss components these are individual loss components and so basically for each and so basically for each and so basically for each one of the four one of the four one of the four we are taking the prediction and the we are taking the prediction and the we are taking the prediction and the ground truth we are subtracting them and ground truth we are subtracting them and ground truth we are subtracting them and squaring them squaring them squaring them so because so because so because this one is so close to its target 0.91 this one is so close to its target 0.91",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1531,
      "text": "this one is so close to its target 0.91 is almost one is almost one is almost one subtracting them gives a very small subtracting them gives a very small subtracting them gives a very small number number number",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1532,
      "text": "so here we would get like a negative so here we would get like a negative",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1533,
      "text": "so here we would get like a negative point one and then squaring it point one and then squaring it point one and then squaring it just makes sure just makes sure just makes sure that regardless of whether we are more that regardless of whether we are more that regardless of whether we are more negative or more positive we always get negative or more positive we always get negative or more positive we always get a positive a positive a positive number instead of squaring we should we number instead of squaring we should we number instead of squaring we should we could also take for example the absolute could also take for example the absolute could also take for example the absolute value we need to discard the sign value we need to discard the sign value we need to discard the sign",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1534,
      "text": "and so you see that the expression is",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1535,
      "text": "and so you see that the expression is",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1536,
      "text": "and so you see that the expression is ranged so that you only get zero exactly ranged so that you only get zero exactly ranged so that you only get zero exactly when y out is equal to y ground truth when y out is equal to y ground truth when y out is equal to y ground truth when those two are equal so your when those two are equal so your when those two are equal so your prediction is exactly the target you are prediction is exactly the target you are prediction is exactly the target you are going to get zero going to get zero going to get zero and if your prediction is not the target and if your prediction is not the target and if your prediction is not the target you are going to get some other number you are going to get some other number you are going to get some other number so here for example we are way off and so here for example we are way off",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1537,
      "text": "and so here for example we are way off",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1538,
      "text": "and so that's why the loss is quite high so that's why the loss is quite high so that's why the loss is quite high and the more off we are the greater the and the more off we are the greater the and the more off we are the greater the loss will be loss will be loss will be so we don't want high loss we want low",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1539,
      "text": "so we don't want high loss we want low",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1540,
      "text": "so we don't want high loss we want low loss loss loss and so the final loss here will be just and so the final loss here will be just and so the final loss here will be just the sum the sum the sum of all of these of all of these of all of these numbers numbers numbers",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1541,
      "text": "so you see that this should be zero",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1542,
      "text": "so you see that this should be zero",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1543,
      "text": "so you see that this should be zero roughly plus zero roughly roughly plus zero roughly roughly plus zero roughly but plus but plus but plus seven seven seven so loss should be about seven so loss should be about seven so loss should be about seven here here and now we want to minimize the loss we and now we want to minimize the loss we and now we want to minimize the loss we want the loss to be low want the loss to be low want the loss to be low because if loss is low because if loss is low because if loss is low then every one of the predictions is then every one of the predictions is then every one of the predictions is equal to its target equal to its target equal to its target so the loss the lowest it can be is zero",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1544,
      "text": "so the loss the lowest it can be is zero",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1545,
      "text": "so the loss the lowest it can be is zero and the greater it is the worse off the and the greater it is the worse off the and the greater it is the worse off the neural net is predicting neural net is predicting neural net is predicting so now of course if we do lost that so now of course if we do lost that so now of course if we do lost that backward backward something magical happened when i hit something magical happened when i hit something magical happened when i hit enter enter enter and the magical thing of course that and the magical thing of course that and the magical thing of course that happened is that we can look at happened is that we can look at happened is that we can look at end.layers.neuron and that layers at say end.layers.neuron and that layers at say end.layers.neuron and that layers at say like the the first layer like the the first layer like the the first layer that neurons at zero because remember that mlp has the layers because remember that mlp has the layers which is a list which is a list which is a list and each layer has a neurons which is a and each layer has a neurons which is a and each layer has a neurons which is a list and that gives us an individual list and that gives us an individual list and that gives us an individual neuron neuron and then it's got some weights and then it's got some weights",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1546,
      "text": "and then it's got some weights",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1547,
      "text": "and so we can for example look at the",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1548,
      "text": "and so we can for example look at the",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1549,
      "text": "and so we can for example look at the weights at zero um oops",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1550,
      "text": "it's not called weights it's called oops it's not called weights it's called oops it's not called weights it's called w w w and that's a value",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1551,
      "text": "but now this value",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1552,
      "text": "and that's a value",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1553,
      "text": "but now this value",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1554,
      "text": "and that's a value",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1555,
      "text": "but now this value also has a groud because of the backward also has a groud because of the backward also has a groud because of the backward pass pass pass",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1556,
      "text": "and so we see that because this gradient and so we see that because this gradient and so we see that because this gradient here on this particular weight of this here on this particular weight of this here on this particular weight of this particular neuron of this particular particular neuron of this particular particular neuron of this particular layer is negative layer is negative layer is negative we see that its influence on the loss is we see that its influence on the loss is we see that its influence on the loss is also negative so slightly increasing also negative so slightly increasing also negative so slightly increasing this particular weight of this neuron of this particular weight of this neuron of this particular weight of this neuron of this layer would make the loss go down this layer would make the loss go down this layer would make the loss go down",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1557,
      "text": "and we actually have this information and we actually have this information and we actually have this information for every single one of our neurons and for every single one of our neurons and for every single one of our neurons and all their parameters",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1558,
      "text": "actually it's worth all their parameters",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1559,
      "text": "actually it's worth all their parameters",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1560,
      "text": "actually it's worth looking at also the draw dot loss by the looking at also the draw dot loss by the looking at also the draw dot loss by the way way way so previously we looked at the draw dot so previously we looked at the draw dot so previously we looked at the draw dot of a single neural neuron forward pass of a single neural neuron forward pass of a single neural neuron forward pass and that was already a large expression and that was already a large expression and that was already a large expression but what is this expression we actually",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1561,
      "text": "but what is this expression we actually",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1562,
      "text": "but what is this expression we actually forwarded forwarded forwarded every one of those four examples and every one of those four examples and every one of those four examples",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1563,
      "text": "and then we have the loss on top of them then we have the loss on top of them then we have the loss on top of them with the mean squared error with the mean squared error with the mean squared error and so this is a really massive graph and so this is a really massive graph and so this is a really massive graph because this graph that we've built up because this graph that we've built up because this graph that we've built up now now",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1564,
      "text": "oh my gosh this graph that we've built",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1565,
      "text": "oh my gosh this graph that we've built",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1566,
      "text": "oh my gosh this graph that we've built up now up now up now which is kind of excessive it's which is kind of excessive it's which is kind of excessive it's excessive because it has four forward excessive because it has four forward excessive because it has four forward passes of a neural net for every one of passes of a neural net for every one of passes of a neural net for every one of the examples and then it has the loss on the examples and then it has the loss on the examples and then it has the loss on top top top and it ends with the value of the loss and it ends with the value of the loss and it ends with the value of the loss which was 7.12 which was 7.12 which was 7.12 and this loss will now back propagate and this loss will now back propagate and this loss will now back propagate through all the four forward passes all through all the four forward passes all through all the four forward passes all the way through just every single the way through just every single the way through just every single intermediate value of the neural net intermediate value of the neural net intermediate value of the neural net all the way back to of course the all the way back to of course the all the way back to of course the parameters of the weights which are the parameters of the weights which are the parameters of the weights which are the input input so these weight parameters here are so these weight parameters here are so these weight parameters here are inputs to this neural net inputs to this neural net inputs to this neural net and and these numbers here these scalars are these numbers here these scalars are these numbers here these scalars are inputs to the neural net inputs to the neural net inputs to the neural net",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1567,
      "text": "so if we went around here so if we went around here so if we went around here we'll probably find we'll probably find we'll probably find some of these examples this 1.0 some of these examples this 1.0 some of these examples this 1.0 potentially maybe this 1.0 or you know potentially maybe this 1.0 or you know potentially maybe this 1.0 or you know some of the others and you'll see that some of the others and you'll see that some of the others and you'll see that they all have gradients as well they all have gradients as well they all have gradients as well the thing is these gradients on the the thing is these gradients on the the thing is these gradients on the input data are not that useful to us input data are not that useful to us input data are not that useful to us and that's because the input data seems and that's because the input data seems and that's because the input data seems to be not changeable it's it's a given to be not changeable",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1568,
      "text": "it's it's a given to be not changeable",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1569,
      "text": "it's it's a given to the problem",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1570,
      "text": "and so it's a fixed input to the problem",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1571,
      "text": "and so it's a fixed input to the problem",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1572,
      "text": "and so it's a fixed input we're not going to be changing it or we're not going to be changing it or we're not going to be changing it or messing with it even though we do have messing with it even though we do have messing with it even though we do have gradients for it gradients for it gradients for it but some of these gradients here",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1573,
      "text": "but some of these gradients here but some of these gradients here will be for the neural network will be for the neural network will be for the neural network parameters the ws and the bs and those parameters the ws and the bs and those parameters the ws and the bs and those we of course we want to change we of course we want to change we of course we want to change",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1574,
      "text": "okay",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1575,
      "text": "so now we're going to want some",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1576,
      "text": "okay",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1577,
      "text": "so now we're going to want some",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1578,
      "text": "okay",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1579,
      "text": "so now we're going to want some convenience code to gather up all of the convenience code to gather up all of the convenience code to gather up all of the parameters of the neural net so that we parameters of the neural net so that we parameters of the neural net so that we can operate on all of them can operate on all of them can operate on all of them simultaneously and every one of them we simultaneously and every one of them we simultaneously and every one of them we will nudge a tiny amount will nudge a tiny amount will nudge a tiny amount based on the gradient information based on the gradient information based on the gradient information so let's collect the parameters of the so let's collect the parameters of the so let's collect the parameters of the neural net all in one array neural net all in one array neural net all in one array so let's create a parameters of self so let's create a parameters of self so let's create a parameters of self that just that just that just returns celta w which is a list returns celta w which is a list returns celta w which is a list concatenated with concatenated with concatenated with a list of self.b a list of self.b a list of self.b so this will just return a list so this will just return a list so this will just return a list list plus list just you know gives you a list plus list just you know gives you a list plus list just you know gives you a list list list so that's parameters of neuron and i'm so that's parameters of neuron and i'm so that's parameters of neuron and i'm calling it this way because also pi calling it this way because also pi calling it this way because also pi torch has a parameters on every single torch has a parameters on every single torch has a parameters on every single and in module and in module and in module and uh it does exactly what we're doing",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1580,
      "text": "and uh it does exactly what we're doing and uh it does exactly what we're doing here it just returns the here it just returns the here it just returns the parameter tensors for us as the parameter tensors for us as the parameter tensors for us as the parameter scalars parameter scalars parameter scalars now layer is also a module so it will now layer is also a module so it will now layer is also a module so it will have parameters have parameters have parameters itself itself itself and basically what we want to do here is and basically what we want to do here is and basically what we want to do here is something like this like params is here and then for params is here and then for neuron in salt out neurons neuron in salt out neurons neuron in salt out neurons we want to get neuron.parameters we want to get neuron.parameters we want to get neuron.parameters",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1581,
      "text": "and we want to params.extend and we want to params.extend and we want to params.extend right",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1582,
      "text": "so these are the parameters of right",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1583,
      "text": "so these are the parameters of right",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1584,
      "text": "so these are the parameters of this neuron and then we want to put them this neuron",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1585,
      "text": "and then we want to put them this neuron",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1586,
      "text": "and then we want to put them on top of params so params dot extend on top of params so params dot extend on top of params so params dot extend of peace of peace of peace",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1587,
      "text": "and then we want to return brands and then we want to return brands",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1588,
      "text": "and then we want to return brands so this is way too much code",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1589,
      "text": "so actually so this is way too much code",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1590,
      "text": "so actually so this is way too much code",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1591,
      "text": "so actually there's a way to simplify this which is there's a way to simplify this which is there's a way to simplify this which is return return return p p p for neuron in self for neuron in self for neuron in self neurons neurons for for for p in neuron dot parameters p in neuron dot parameters p in neuron dot parameters so it's a single list comprehension in so it's a single list comprehension in so it's a single list comprehension in python you can sort of nest them like python you can sort of nest them like python you can sort of nest them like this and you can um this",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1592,
      "text": "and you can um this",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1593,
      "text": "and you can um then create then create then create uh the desired uh the desired uh the desired array",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1594,
      "text": "so this is these are identical array",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1595,
      "text": "so this is these are identical array",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1596,
      "text": "so this is these are identical we can take this out we can take this out we can take this out and then let's do the same here def parameters def parameters self self self and return and return and return a parameter for layer in self dot layers a parameter for layer in self dot layers a parameter for layer in self dot layers for for p in layer dot parameters and that should be good and that should be good now let me pop out this so now let me pop out this so now let me pop out this",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1597,
      "text": "so we don't re-initialize our network we don't re-initialize our network we don't re-initialize our network because we need to re-initialize because we need to re-initialize because we need to re-initialize",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1598,
      "text": "our okay",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1599,
      "text": "so unfortunately we will have to okay",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1600,
      "text": "so unfortunately we will have to probably re-initialize the network probably re-initialize the network probably re-initialize the network because we just add functionality because we just add functionality because we just add functionality because this class of course we i want because this class of course we i want because this class of course we i want to get all the and that parameters but to get all the and that parameters but to get all the and that parameters but that's not going to work because this is that's not going to work because this is that's not going to work because this is the old class the old class the old class",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1601,
      "text": "okay",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1602,
      "text": "okay",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1603,
      "text": "so unfortunately we do have to so unfortunately we do have to so unfortunately we do have to reinitialize the network which will reinitialize the network which will reinitialize the network which will change some of the numbers change some of the numbers change some of the numbers but let me do that so that we pick up but let me do that so that we pick up but let me do that so that we pick up the new api we can now do in the the new api we can now do in the the new api we can now do in the parameters parameters parameters and these are all the weights and biases and these are all the weights and biases and these are all the weights and biases inside the entire neural net inside the entire neural net inside the entire neural net so in total this mlp has 41 parameters and now we'll be able to change them now we'll be able to change them now we'll be able to change them if we recalculate the loss here we see if we recalculate the loss here we see if we recalculate the loss here we see that unfortunately we have slightly that unfortunately we have slightly that unfortunately we have slightly different different different predictions and slightly different laws but that's okay",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1604,
      "text": "but that's okay",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1605,
      "text": "okay",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1606,
      "text": "so we see that this neurons",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1607,
      "text": "okay",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1608,
      "text": "so we see that this neurons",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1609,
      "text": "okay",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1610,
      "text": "so we see that this neurons gradient is slightly negative we can gradient is slightly negative we can gradient is slightly negative we can also look at its data right now also look at its data right now also look at its data right now which is 0.85 so this is the current which is 0.85 so this is the current which is 0.85 so this is the current value of this neuron and this is its value of this neuron and this is its value of this neuron and this is its gradient on the loss gradient on the loss gradient on the loss so what we want to do now is we want to",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1611,
      "text": "so what we want to do now is we want to",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1612,
      "text": "so what we want to do now is we want to iterate for every p in iterate for every p in iterate for every p in n dot parameters",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1613,
      "text": "so for all the 41 n dot parameters so for all the 41 n dot parameters so for all the 41 parameters in this neural net parameters in this neural net parameters in this neural net we actually want to change p data we actually want to change p data we actually want to change p data slightly slightly slightly according to the gradient information according to the gradient information according to the gradient information",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1614,
      "text": "okay",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1615,
      "text": "so okay so dot dot to do here dot dot to do here dot dot to do here but this will be basically a tiny update but this will be basically a tiny update but this will be basically a tiny update in this gradient descent scheme in in this gradient descent scheme in in this gradient descent scheme in gradient descent we are thinking of the gradient descent we are thinking of the gradient descent we are thinking of the gradient as a vector pointing in the gradient as a vector pointing in the gradient as a vector pointing in the direction direction of of increased increased loss loss and so and so in gradient descent we are modifying in gradient descent we are modifying in gradient descent we are modifying p data p data p data by a small step size in the direction of by a small step size in the direction of by a small step size in the direction of the gradient",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1616,
      "text": "so the step size as an the gradient so the step size as an the gradient so the step size as an example could be like a very small example could be like a very small example could be like a very small number like 0.01 is the step size times number like 0.01 is the step size times number like 0.01 is the step size times p dot grad p dot grad p dot grad",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1617,
      "text": "right right",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1618,
      "text": "but we have to think through some of the",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1619,
      "text": "but we have to think through some of the",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1620,
      "text": "but we have to think through some of the signs here signs here signs here",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1621,
      "text": "so uh so uh so uh in particular working with this specific in particular working with this specific in particular working with this specific example here example here example here we see that if we just left it like this we see that if we just left it like this we see that if we just left it like this then this neuron's value then this neuron's value then this neuron's value would be currently increased by a tiny would be currently increased by a tiny would be currently increased by a tiny amount of the gradient amount of the gradient amount of the gradient the grain is negative so this value of the grain is negative so this value of the grain is negative so this value of this neuron would go slightly down it this neuron would go slightly down it this neuron would go slightly down it would become like 0.8 you know four or would become like 0.8 you know four or would become like 0.8 you know four or something like that something like that something like that but if this neuron's value goes lower but if this neuron's value goes lower but if this neuron's value goes lower that would actually that would actually that would actually increase the loss increase the loss increase the loss that's because that's because that's because the derivative of this neuron is the derivative of this neuron is the derivative of this neuron is negative so increasing negative so increasing negative so increasing this makes the loss go down so this makes the loss go down so this makes the loss go down so increasing it is what we want to do increasing it is what we want to do increasing it is what we want to do instead of decreasing it so basically instead of decreasing it so basically instead of decreasing it so basically what we're missing here is we're what we're missing here is we're what we're missing here is we're actually missing a negative sign actually missing a negative sign actually missing a negative sign and again this other interpretation and again this other interpretation and again this other interpretation and that's because we want to minimize and that's because we want to minimize and that's because we want to minimize the loss we don't want to maximize the the loss we don't want to maximize the the loss we don't want to maximize the loss we want to decrease it loss we want to decrease it loss we want to decrease it and the other interpretation as i and the other interpretation as i and the other interpretation as i mentioned is you can think of the mentioned is you can think of the mentioned is you can think of the gradient vector gradient vector gradient vector so basically just the vector of all the so basically just the vector of all the so basically just the vector of all the gradients gradients as pointing in the direction of as pointing in the direction of as pointing in the direction of increasing increasing increasing the loss",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1622,
      "text": "but then we want to decrease it the loss",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1623,
      "text": "but then we want to decrease it the loss",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1624,
      "text": "but then we want to decrease it",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1625,
      "text": "so we actually want to go in the so we actually want to go in",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1626,
      "text": "the so we actually want to go in the opposite direction opposite direction opposite direction",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1627,
      "text": "and so you can convince yourself that",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1628,
      "text": "and so you can convince yourself that",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1629,
      "text": "and so you can convince yourself that this sort of plug does the right thing this sort of plug does the right thing this sort of plug does the right thing here with the negative because we want here with the negative because we want here with the negative because we want to minimize the loss to minimize the loss",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1630,
      "text": "so if we nudge all the parameters by so if we nudge all the parameters by so if we nudge all the parameters by tiny amount then we'll see that then we'll see that this data will have changed a little bit this data will have changed a little bit this data will have changed a little bit",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1631,
      "text": "so now this neuron so now this neuron so now this neuron is a tiny amount greater is a tiny amount greater is a tiny amount greater value",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1632,
      "text": "so 0.854 went to 0.857 value so 0.854 went to 0.857 value so 0.854 went to 0.857 and that's a good thing because slightly and that's a good thing because slightly and that's a good thing because slightly increasing this neuron increasing this neuron increasing this neuron uh uh uh data makes the loss go down according to data makes the loss go down according to data makes the loss go down according to the gradient and so the correct thing the gradient",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1633,
      "text": "and so the correct thing the gradient",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1634,
      "text": "and so the correct thing has happened sign wise has happened sign wise has happened sign wise",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1635,
      "text": "and so now what we would expect of",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1636,
      "text": "and so now what we would expect of and so now what we would expect of course is that course is that course is that because we've changed all these because we've changed all these because we've changed all these parameters we expect that the loss parameters we expect that the loss parameters we expect that the loss should have gone down a bit should have gone down a bit should have gone down a bit",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1637,
      "text": "so we want to re-evaluate the loss let",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1638,
      "text": "so we want to re-evaluate the loss let",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1639,
      "text": "so we want to re-evaluate the loss let me basically this is just a data definition that this is just a data definition that hasn't changed but the forward pass here hasn't changed but the forward pass here hasn't changed but the forward pass here of the network we can recalculate and actually let me do it outside here and actually let me do it outside here so that we can compare the two loss so that we can compare the two loss so that we can compare the two loss values values values so here if i recalculate the loss so here if i recalculate the loss so here if i recalculate the loss we'd expect the new loss now to be we'd expect the new loss now to be we'd expect the new loss now to be slightly lower than this number so slightly lower than this number so slightly lower than this number so hopefully what we're getting now is a hopefully what we're getting now is a hopefully what we're getting now is a tiny bit lower than 4.84 tiny bit lower than 4.84 tiny bit lower than 4.84 4.36 4.36 4.36",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1640,
      "text": "okay",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1641,
      "text": "and remember the way we've arranged okay and remember the way we've arranged okay and remember the way we've arranged this is that low loss means that our this is that low loss means that our this is that low loss means that our predictions are matching the targets so predictions are matching the targets so predictions are matching the targets so our predictions now are probably our predictions now are probably our predictions now are probably slightly closer to the slightly closer to the slightly closer to the targets and now all we have to do is we targets and now all we have to do is we targets and now all we have to do is we have to iterate this process have to iterate this process have to iterate this process so again um we've done the forward pass so again um we've done the forward pass so again um we've done the forward pass and this is the loss and this is the loss and this is the loss now we can lost that backward",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1642,
      "text": "now we can lost that backward now we can lost that backward let me take these out and we can do a let me take these out and we can do a let me take these out and we can do a step size step size step size and now we should have a slightly lower",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1643,
      "text": "and now we should have a slightly lower",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1644,
      "text": "and now we should have a slightly lower loss 4.36 goes to 3.9 loss 4.36 goes to 3.9 loss 4.36 goes to 3.9",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1645,
      "text": "and okay",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1646,
      "text": "so",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1647,
      "text": "and okay",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1648,
      "text": "so",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1649,
      "text": "and okay",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1650,
      "text": "so we've done the forward pass here's the we've done the forward pass here's the we've done the forward pass here's the backward pass backward pass backward pass nudge nudge nudge and now the loss is 3.66 3.47 3.47 and you get the idea we just continue and you get the idea we just continue and you get the idea we just continue doing this",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1651,
      "text": "and this is uh gradient doing this",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1652,
      "text": "and this is uh gradient doing this",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1653,
      "text": "and this is uh gradient descent we're just iteratively doing descent we're just iteratively doing descent we're just iteratively doing forward pass backward pass update forward pass backward pass update forward pass backward pass update forward pass backward pass update and forward pass backward pass update and forward pass backward pass update and the neural net is improving its the neural net is improving its the neural net is improving its predictions predictions so here if we look at why pred now so here if we look at why pred now so here if we look at why pred now like red we see that um we see that um this value should be getting closer to this value should be getting closer to this value should be getting closer to one one so this value should be getting more so this value should be getting more so this value should be getting more positive these should be getting more positive these should be getting more positive these should be getting more negative and this one should be also negative and this one should be also negative and this one should be also getting more positive",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1654,
      "text": "so if we just getting more positive so if we just getting more positive so if we just iterate this iterate this iterate this a few more times",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1655,
      "text": "actually we may be able to afford go to actually we may be able to afford go to go a bit faster let's try a slightly go a bit faster let's try a slightly go a bit faster let's try a slightly higher learning rate",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1656,
      "text": "oops",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1657,
      "text": "okay there we go so now we're at oops",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1658,
      "text": "okay there we go so now we're at 0.31 if you go too fast by the way if you try if you go too fast by the way if you try to make it too big of a step you may to make it too big of a step you may to make it too big of a step you may actually overstep it's overconfidence because again it's overconfidence because again remember we don't actually know exactly remember we don't actually know exactly remember we don't actually know exactly about the loss function the loss about the loss function the loss about the loss function the loss function has all kinds of structure and function has all kinds of structure and function has all kinds of structure",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1659,
      "text": "and we only know about the very local we only know about the very local we only know about the very local dependence of all these parameters on dependence of all these parameters on dependence of all these parameters on the loss",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1660,
      "text": "but if we step too far the loss but if we step too far the loss but if we step too far we may step into you know a part of the we may step into you know a part of the we may step into you know a part of the loss that is completely different loss that is completely different loss that is completely different and that can destabilize training and and that can destabilize training and and that can destabilize training and make your loss actually blow up even make your loss actually blow up even make your loss actually blow up even so the loss is now 0.04 so actually the so the loss is now 0.04 so actually the so the loss is now 0.04 so actually the predictions should be really quite close predictions should be really quite close predictions should be really quite close",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1661,
      "text": "let's take a look let's take a look let's take a look",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1662,
      "text": "so you see how this is almost one",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1663,
      "text": "so you see how this is almost one",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1664,
      "text": "so you see how this is almost one almost negative one almost one we can almost negative one almost one we can almost negative one almost one we can continue going continue going continue going uh so uh",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1665,
      "text": "so uh so yep backward yep backward yep backward update update update oops there we go",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1666,
      "text": "so we went way too fast oops",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1667,
      "text": "there we go so we went way too fast oops there we go so we went way too fast and um and um and um we actually overstepped we actually overstepped we actually overstepped so we got two uh too eager where are we so we got two uh too eager where are we so we got two uh too eager where are we now oops now oops now",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1668,
      "text": "oops",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1669,
      "text": "okay okay",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1670,
      "text": "seven e negative nine",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1671,
      "text": "so this is very seven e negative nine",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1672,
      "text": "so this is very seven e negative nine",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1673,
      "text": "so this is very very low loss very low loss very low loss and the predictions and the predictions and the predictions are basically perfect are basically perfect are basically perfect",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1674,
      "text": "so somehow we",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1675,
      "text": "so somehow we",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1676,
      "text": "so somehow we basically we were doing way too big basically we were doing way too big basically we were doing way too big updates and we briefly exploded but then updates and we briefly exploded but then updates and we briefly exploded",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1677,
      "text": "but then somehow we ended up getting into a somehow we ended up getting into a somehow we ended up getting into a really good spot so usually this really good spot",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1678,
      "text": "so usually this really good spot so usually this learning rate and the tuning of it is a learning rate and the tuning of it is a learning rate and the tuning of it is a subtle art you want to set your learning subtle art you want to set your learning subtle art you want to set your learning rate if it's too low you're going to rate if it's too low you're going to rate if it's too low you're going to take way too long to converge but if take way too long to converge but if take way too long to converge but if it's too high the whole thing gets it's too high the whole thing gets it's too high the whole thing gets unstable and you might actually even unstable and you might actually even unstable and you might actually even explode the loss explode the loss explode the loss depending on your loss function depending on your loss function depending on your loss function so finding the step size to be just so finding the step size to be just so finding the step size to be just right",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1679,
      "text": "it's it's a pretty subtle art",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1680,
      "text": "right it's it's a pretty subtle art",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1681,
      "text": "right it's it's a pretty subtle art sometimes when you're using sort of sometimes when you're using sort of sometimes when you're using sort of vanilla gradient descent vanilla gradient descent vanilla gradient descent",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1682,
      "text": "but we happen to get into a good spot we",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1683,
      "text": "but we happen to get into a good spot we",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1684,
      "text": "but we happen to get into a good spot we can look at can look at can look at n-dot parameters n-dot parameters n-dot parameters so this is the setting of weights",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1685,
      "text": "and so this is the setting of weights and so this is the setting of weights and biases biases biases that makes our network that makes our network that makes our network predict predict predict the desired targets the desired targets the desired targets very very close very very close very very close",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1686,
      "text": "and and basically we've successfully trained basically we've successfully trained basically we've successfully trained neural net neural net neural net",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1687,
      "text": "okay let's make this a tiny bit more",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1688,
      "text": "okay",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1689,
      "text": "let's make this a tiny bit more",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1690,
      "text": "okay",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1691,
      "text": "let's make this a tiny bit more respectable and implement an actual respectable and implement an actual respectable and implement an actual training loop and what that looks like training loop and what that looks like training loop and what that looks like so this is the data definition that so this is the data definition that so this is the data definition that stays this is the forward pass stays this is the forward pass stays this is the forward pass",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1692,
      "text": "um so um so um so for uh k in range you know we're going for uh k in range you know we're going for uh k in range",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1693,
      "text": "you know we're going to to take a bunch of steps first you do the forward pass first you do the forward pass we validate the loss let's re-initialize the neural net from let's re-initialize the neural net from scratch scratch scratch and here's the data and here's the data and here's the data",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1694,
      "text": "and we first do before pass then we do",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1695,
      "text": "and we first do before pass then we do",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1696,
      "text": "and we first do before pass then we do the backward pass and then we do an update that's gradient and then we do an update that's gradient descent",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1697,
      "text": "and then we should be able to iterate",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1698,
      "text": "and then we should be able to iterate this and we should be able to print the this",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1699,
      "text": "and we should be able to print the this and we should be able to print the current step current step current step the current loss um let's just print the the current loss um let's just print the the current loss um let's just print the sort of sort of number of the loss number of the loss number of the loss",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1700,
      "text": "and and that should be it that should be it that should be it",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1701,
      "text": "and then the learning rate 0.01 is a",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1702,
      "text": "and then the learning rate 0.01 is a",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1703,
      "text": "and then the learning rate 0.01 is a little too small 0.1 we saw is like a little too small 0.1",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1704,
      "text": "we saw is like a little too small 0.1",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1705,
      "text": "we saw is like a little bit dangerously too high let's go little bit dangerously too high let's go little bit dangerously too high let's go somewhere in between somewhere in between somewhere in between and we'll optimize this for and we'll optimize this for and we'll optimize this for not 10 steps but let's go for say 20 not 10 steps but let's go for say 20 not 10 steps but let's go for say 20 steps steps steps let me erase all of this junk and you see how we've actually converged and you see how we've actually converged slower in a more controlled manner and slower in a more controlled manner and slower in a more controlled manner and got to a loss that is very low got to a loss that is very low got to a loss that is very low",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1706,
      "text": "so so i expect white bread to be quite good i expect white bread to be quite good i expect white bread to be quite good there we go um",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1707,
      "text": "and and that's it",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1708,
      "text": "that's it",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1709,
      "text": "that's it",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1710,
      "text": "okay",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1711,
      "text": "so this is kind of embarrassing",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1712,
      "text": "but okay",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1713,
      "text": "so this is kind of embarrassing",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1714,
      "text": "but okay",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1715,
      "text": "so this is kind of embarrassing",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1716,
      "text": "but we actually have a really terrible bug we actually have a really terrible bug we actually have a really terrible bug in here",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1717,
      "text": "and it's a subtle bug",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1718,
      "text": "and it's a in here and it's a subtle bug",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1719,
      "text": "and it's a in here and it's a subtle bug",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1720,
      "text": "and it's a very common bug",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1721,
      "text": "and i can't believe i've very common bug",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1722,
      "text": "and i can't believe i've very common bug",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1723,
      "text": "and i can't believe i've done it for the 20th time in my life done it for the 20th time in my life done it for the 20th time in my life especially on camera and i could have especially on camera and i could have especially on camera and i could have reshot the whole thing",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1724,
      "text": "but i think it's reshot the whole thing",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1725,
      "text": "but i think it's reshot the whole thing",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1726,
      "text": "but i think it's pretty funny",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1727,
      "text": "and you know you get to pretty funny",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1728,
      "text": "and you know you get to pretty funny",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1729,
      "text": "and you know you get to appreciate a bit what um working with appreciate a bit what um working with appreciate a bit what um working with neural nets maybe neural nets maybe neural nets maybe is like sometimes is like sometimes is like sometimes we are guilty of we are guilty of we are guilty of come bug i've actually tweeted come bug i've actually tweeted come bug i've actually tweeted the most common neural net mistakes a the most common neural net mistakes a the most common neural net mistakes a long time ago now long time ago now long time ago now uh and uh and uh and i'm not really",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1730,
      "text": "i'm not really",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1731,
      "text": "i'm not really gonna explain any of these except for we gonna explain any of these except for we gonna explain any of these except for we are guilty of number three you forgot to are guilty of number three you forgot to are guilty of number three you forgot to zero grad zero grad zero grad before that backward what is that basically what's happening and it's a basically what's happening and it's a subtle bug",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1732,
      "text": "and i'm not sure if you saw subtle bug and i'm not sure if you saw subtle bug and i'm not sure if you saw it it is that is that is that all of these all of these all of these weights here have a dot data and a dot weights here have a dot data and a dot weights here have a dot data and a dot grad grad and that grad starts at zero and that grad starts at zero and that grad starts at zero and then we do backward",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1733,
      "text": "and we fill in",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1734,
      "text": "and then we do backward",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1735,
      "text": "and we fill in",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1736,
      "text": "and then we do backward",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1737,
      "text": "and we fill in the gradients the gradients the gradients",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1738,
      "text": "and then we do an update on the data",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1739,
      "text": "but and then we do an update on the data",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1740,
      "text": "but and then we do an update on the data",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1741,
      "text": "but we don't flush the grad we don't flush the grad we don't flush the grad it stays there it stays there it stays there",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1742,
      "text": "so when we do the second so when we do the second",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1743,
      "text": "so when we do the second forward pass and we do backward again forward pass",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1744,
      "text": "and we do backward again forward pass",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1745,
      "text": "and we do backward again remember that all the backward remember that all the backward remember that all the backward operations do a plus equals on the grad operations do a plus equals on the grad operations do a plus equals on the grad and so these gradients just and so these gradients just and so these gradients just add up and they never get reset to zero add up and they never get reset to zero add up and they never get reset to zero so basically we didn't zero grad",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1746,
      "text": "so so basically we didn't zero grad",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1747,
      "text": "so so basically we didn't zero grad so here's how we zero grad before here's how we zero grad before here's how we zero grad before backward backward we need to iterate over all the we need to iterate over all the we need to iterate over all the parameters parameters and we need to make sure that p dot grad and we need to make sure that p dot grad and we need to make sure that p dot grad is set to zero is set to zero is set to zero we need to reset it to zero just like it we need to reset it to zero just like it we need to reset it to zero just like it is in the constructor is in the constructor is in the constructor so remember all the way here for all so remember all the way here for all so remember all the way here for all these value nodes grad is reset to zero these value nodes grad is reset to zero these value nodes grad is reset to zero and then all these backward passes do a",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1748,
      "text": "and then all these backward passes do a",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1749,
      "text": "and then all these backward passes do a plus equals from that grad plus equals from that grad plus equals from that grad",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1750,
      "text": "but we need to make sure that",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1751,
      "text": "but we need to make sure that",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1752,
      "text": "but we need to make sure that we reset these graphs to zero so that we reset these graphs to zero so that we reset these graphs to zero so that when we do backward when we do backward when we do backward all of them start at zero and the actual all of them start at zero and the actual all of them start at zero and the actual backward pass accumulates um backward pass accumulates um backward pass accumulates um the loss derivatives into the grads the loss derivatives into the grads the loss derivatives into the grads so this is zero grad in pytorch so this is zero grad in pytorch",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1753,
      "text": "so this is zero grad in pytorch and",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1754,
      "text": "uh and uh we will slightly get we'll get a we will slightly get we'll get a we will slightly get we'll get a slightly different optimization let's slightly different optimization let's slightly different optimization let's reset the neural net reset the neural net reset the neural net the data is the same this is now i think the data is the same this is now i think the data is the same this is now i think correct correct",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1755,
      "text": "and we get a much more and we get a much more and we get a much more you know we get a much more you know we get a much more you know we get a much more slower descent slower descent slower descent we still end up with pretty good results we still end up with pretty good results we still end up with pretty good results and we can continue this a bit more",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1756,
      "text": "and we can continue this a bit more and we can continue this a bit more to get down lower to get down lower to get down lower and lower and lower and lower and lower",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1757,
      "text": "yeah",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1758,
      "text": "so the only reason that the previous so the only reason that the previous so the only reason that the previous thing worked it's extremely buggy um the thing worked it's extremely buggy um the thing worked it's extremely buggy um the only reason that worked is that only reason that worked is that only reason that worked is that this is a very very simple problem this is a very very simple problem this is a very very simple problem and it's very easy for this neural net",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1759,
      "text": "and it's very easy for this neural net",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1760,
      "text": "and it's very easy for this neural net to fit this data to fit this data to fit this data",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1761,
      "text": "and so the grads ended up accumulating and so the grads ended up accumulating and so the grads ended up accumulating and it effectively gave us a massive and it effectively gave us a massive and it effectively gave us a massive step size and it made us converge step size and it made us converge step size and it made us converge extremely fast but basically now we have to do more but basically now we have to do more steps to get to very low values of loss steps to get to very low values of loss steps to get to very low values of loss and get wipe red to be really good we and get wipe red to be really good we and get wipe red to be really good we can try to can try to can try to step a bit greater",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1762,
      "text": "yeah we're gonna get closer and closer",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1763,
      "text": "yeah we're gonna get closer and closer to one minus one and one to one minus one and one to one minus one and one so so working with neural nets is sometimes working with neural nets is sometimes working with neural nets is sometimes tricky because tricky because tricky because uh uh you may have lots of bugs in the code you may have lots of bugs in the code you may have lots of bugs in the code and uh your network might actually work and uh your network might actually work and uh your network might actually work just like ours worked just like ours worked just like ours worked but chances are is that if we had a more but chances are is that if we had a more but chances are is that if we had a more complex problem then actually this bug complex problem then actually this bug complex problem then actually this bug would have made us not optimize the loss would have made us not optimize the loss would have made us not optimize the loss very well",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1764,
      "text": "and we were only able to get very well",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1765,
      "text": "and we were only able to get very well",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1766,
      "text": "and we were only able to get away with it because away with it because away with it because the problem is very simple the problem is very simple the problem is very simple",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1767,
      "text": "so let's now bring everything together",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1768,
      "text": "so let's now bring everything together",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1769,
      "text": "so let's now bring everything together and summarize what we learned and summarize what we learned and summarize what we learned what are neural nets neural nets are what are neural nets neural nets are what are neural nets neural nets are these mathematical expressions these mathematical expressions these mathematical expressions fairly simple mathematical expressions fairly simple mathematical expressions fairly simple mathematical expressions in the case of multi-layer perceptron in the case of multi-layer perceptron in the case of multi-layer perceptron that take that take that take input as the data and they take input input as the data and they take input input as the data and they take input the weights and the parameters of the the weights and the parameters of the the weights and the parameters of the neural net mathematical expression for neural net mathematical expression for neural net mathematical expression for the forward pass followed by a loss the forward pass followed by a loss the forward pass followed by a loss function and the loss function tries to function and the loss function tries to function and the loss function tries to measure the accuracy of the predictions measure the accuracy of the predictions measure the accuracy of the predictions and usually the loss will be low when and usually the loss will be low when and usually the loss will be low when your predictions are matching your your predictions are matching your your predictions are matching your targets or where the network is targets or where the network is targets or where the network is basically behaving",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1770,
      "text": "well so we we basically behaving well",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1771,
      "text": "so we we basically behaving well",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1772,
      "text": "so we we manipulate the loss function so that manipulate the loss function so that manipulate the loss function so that when the loss is low the network is when the loss is low the network is when the loss is low the network is doing what you want it to do on your doing what you want it to do on your doing what you want it to do on your problem problem problem",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1773,
      "text": "and then we backward the loss",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1774,
      "text": "and then we backward the loss",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1775,
      "text": "and then we backward the loss use backpropagation to get the gradient use backpropagation to get the gradient use backpropagation to get the gradient",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1776,
      "text": "and then we know how to tune all the",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1777,
      "text": "and then we know how to tune all the",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1778,
      "text": "and then we know how to tune all the parameters to decrease the loss locally parameters to decrease the loss locally parameters to decrease the loss locally",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1779,
      "text": "but then we have to iterate that process",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1780,
      "text": "but then we have to iterate that process",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1781,
      "text": "but then we have to iterate that process many times in what's called the gradient many times in what's called the gradient many times in what's called the gradient descent descent descent",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1782,
      "text": "so we simply follow the gradient",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1783,
      "text": "so we simply follow the gradient",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1784,
      "text": "so we simply follow the gradient information and that minimizes the loss information and that minimizes the loss information and that minimizes the loss and the loss is arranged so that when and the loss is arranged so that when and the loss is arranged so that when the loss is minimized the network is the loss is minimized the network is the loss is minimized the network is doing what you want it to do doing what you want it to do doing what you want it to do",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1785,
      "text": "and",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1786,
      "text": "yeah",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1787,
      "text": "so we just have a blob of",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1788,
      "text": "and yeah",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1789,
      "text": "so we just have a blob of",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1790,
      "text": "and yeah",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1791,
      "text": "so we just have a blob of neural stuff",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1792,
      "text": "and we can make it do neural stuff",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1793,
      "text": "and we can make it do neural stuff",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1794,
      "text": "and we can make it do arbitrary things and that's what gives arbitrary things and that's what gives arbitrary things and that's what gives neural nets their power um neural nets their power um neural nets their power um it's you know this is a very tiny",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1795,
      "text": "it's you know this is a very tiny",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1796,
      "text": "it's you know this is a very tiny network with 41 parameters network with 41 parameters network with 41 parameters but you can build significantly more but you can build significantly more",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1797,
      "text": "but you can build significantly more complicated neural nets with billions complicated neural nets with billions complicated neural nets with billions at this point almost trillions of at this point almost trillions of at this point almost trillions of parameters",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1798,
      "text": "and it's a massive blob of parameters and it's a massive blob of parameters and it's a massive blob of neural tissue simulated neural tissue neural tissue simulated neural tissue neural tissue simulated neural tissue roughly speaking roughly speaking roughly speaking and you can make it do extremely complex",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1799,
      "text": "and you can make it do extremely complex",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1800,
      "text": "and you can make it do extremely complex problems and these neurons then have all problems and these neurons then have all problems and these neurons then have all kinds of very fascinating emergent kinds of very fascinating emergent kinds of very fascinating emergent properties properties properties in in when you try to make them do when you try to make them do when you try to make them do significantly hard problems as in the significantly hard problems as in the significantly hard problems as in the case of gpt for example case of gpt for example case of gpt for example we have massive amounts of text from the we have massive amounts of text from the we have massive amounts of text from the internet and we're trying to get a internet and we're trying to get a internet and we're trying to get a neural net to predict to take like a few neural net to predict to take like a few neural net to predict to take like a few words and try to predict the next word words and try to predict the next word words and try to predict the next word in a sequence that's the learning in a sequence that's the learning in a sequence that's the learning problem problem and it turns out that when you train and it turns out that when you train and it turns out that when you train this on all of internet the neural net this on all of internet the neural net this on all of internet the neural net actually has like really remarkable actually has like really remarkable actually has like really remarkable emergent properties but that neural net emergent properties but that neural net emergent properties but that neural net would have hundreds of billions of would have hundreds of billions of would have hundreds of billions of parameters parameters but it works on fundamentally the exact but it works on fundamentally the exact but it works on fundamentally the exact same principles same principles same principles the neural net of course will be a bit the neural net of course will be a bit the neural net of course will be a bit more complex but otherwise the more complex but otherwise the more complex but otherwise the value in the gradient is there value in the gradient is there value in the gradient is there and would be identical and the gradient and would be identical and the gradient and would be identical and the gradient descent would be there and would be descent would be there and would be descent would be there and would be basically identical but people usually basically identical but people usually basically identical but people usually use slightly different updates this is a use slightly different updates this is a use slightly different updates this is a very simple stochastic gradient descent very simple stochastic gradient descent very simple stochastic gradient descent update update um um and the loss function would not be mean and the loss function would not be mean and the loss function would not be mean squared error they would be using squared error they would be using squared error they would be using something called the cross-entropy loss something called the cross-entropy loss something called the cross-entropy loss for predicting the next token",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1801,
      "text": "so there's for predicting the next token",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1802,
      "text": "so there's for predicting the next token",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1803,
      "text": "so there's a few more details but fundamentally the a few more details but fundamentally the a few more details but fundamentally the neural network setup and neural network neural network setup and neural network neural network setup and neural network training is identical and pervasive and training is identical and pervasive and training is identical and pervasive and now you understand intuitively now you understand intuitively now you understand intuitively how that works under the hood in the how that works under the hood in the how that works under the hood in the beginning of this video i told you that beginning of this video i told you that beginning of this video i told you that by the end of it you would understand by the end of it you would understand by the end of it you would understand everything in micrograd",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1804,
      "text": "and then we'd everything in micrograd",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1805,
      "text": "and then we'd everything in micrograd",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1806,
      "text": "and then we'd slowly build it up let me briefly prove slowly build it up let me briefly prove slowly build it up let me briefly prove that to you that to you that to you",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1807,
      "text": "so i'm going to step through all the",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1808,
      "text": "so i'm going to step through all the",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1809,
      "text": "so i'm going to step through all the code that is in micrograd as of today code that is in micrograd as of today code that is in micrograd as of today actually potentially some of the code actually potentially some of the code actually potentially some of the code will change by the time you watch this will change by the time you watch this will change by the time you watch this video because i intend to continue video because i intend to continue video because i intend to continue developing micrograd developing micrograd developing micrograd but let's look at what we have so far at but let's look at what we have so far at but let's look at what we have so far at least init.pi is empty when you go to least init.pi is empty when you go to least init.pi is empty when you go to engine.pi that has the value engine.pi that has the value engine.pi that has the value everything here you should mostly everything here you should mostly everything here you should mostly recognize so we have the data.grad recognize",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1810,
      "text": "so we have the data.grad recognize",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1811,
      "text": "so we have the data.grad attributes we have the backward function attributes we have the backward function attributes we have the backward function uh we have the previous set of children uh we have the previous set of children uh we have the previous set of children and the operation that produced this and the operation that produced this and the operation that produced this value value we have addition multiplication and we have addition multiplication and we have addition multiplication and raising to a scalar power raising to a scalar power raising to a scalar power we have the relu non-linearity which is we have the relu non-linearity which is we have the relu non-linearity which is slightly different type of nonlinearity slightly different type of nonlinearity slightly different type of nonlinearity than 10h that we used in this video than 10h that we used in this video than 10h that we used in this video both of them are non-linearities and both of them are non-linearities and both of them are non-linearities and notably 10h is not actually present in notably 10h is not actually present in notably 10h is not actually present in micrograd as of right now",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1812,
      "text": "but i intend micrograd as of right now",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1813,
      "text": "but i intend micrograd as of right now",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1814,
      "text": "but i intend to add it later to add it later to add it later with the backward which is identical and with the backward which is identical and with the backward which is identical",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1815,
      "text": "and then all of these other operations which then all of these other operations which then all of these other operations which are built up on top of operations here are built up on top of operations here are built up on top of operations here so values should be very recognizable so values should be very recognizable so values should be very recognizable except for the non-linearity used in except for the non-linearity used in except for the non-linearity used in this video this video this video um there's no massive difference between um there's no massive difference between um there's no massive difference between relu and 10h and sigmoid and these other relu and 10h and sigmoid and these other relu and 10h and sigmoid and these other non-linearities they're all roughly non-linearities they're all roughly non-linearities they're all roughly equivalent and can be used in mlps so i equivalent and can be used in mlps so i equivalent and can be used in mlps",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1816,
      "text": "so i use 10h because it's a bit smoother and use 10h because it's a bit smoother and use 10h because it's a bit smoother and because it's a little bit more because it's a little bit more because it's a little bit more complicated than relu",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1817,
      "text": "and therefore it's complicated than relu",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1818,
      "text": "and therefore it's complicated than relu",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1819,
      "text": "and therefore it's stressed a little bit more the stressed a little bit more the stressed a little bit more the local gradients and working with those local gradients and working with those local gradients and working with those derivatives which i thought would be derivatives which i thought would be derivatives which i thought would be useful useful useful and then that pi is the neural networks and then that pi is the neural networks and then that pi is the neural networks library as i mentioned so you should library as i mentioned so you should library as i mentioned so you should recognize identical implementation of recognize identical implementation of recognize identical implementation of neuron layer and mlp neuron layer and mlp neuron layer and mlp notably or not so much notably or not so much notably or not so much we have a class module here there is a we have a class module here there is a we have a class module here there is a parent class of all these modules i did parent class of all these modules i did parent class of all these modules i did that because there's an nn.module class that because there's an nn.module class that because there's an nn.module class in pytorch and so this exactly matches in pytorch and so this exactly matches in pytorch and so this exactly matches that api and end.module and pytorch has that api and end.module and pytorch has that api and end.module and pytorch has also a zero grad which i've refactored also a zero grad which i've refactored also a zero grad which i've refactored out here so that's the end of micrograd really",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1820,
      "text": "so that's the end of micrograd really then there's a test then there's a test then there's a test which you'll see which you'll see which you'll see basically creates basically creates basically creates two chunks of code one in micrograd and two chunks of code one in micrograd and two chunks of code one in micrograd and one in pi torch and we'll make sure that one in pi torch and we'll make sure that one in pi torch and we'll make sure that the forward and the backward pass agree the forward and the backward pass agree the forward and the backward pass agree identically identically identically for a slightly less complicated for a slightly less complicated for a slightly less complicated expression a slightly more complicated expression a slightly more complicated expression a slightly more complicated expression everything expression everything expression everything agrees so we agree with pytorch on all agrees so we agree with pytorch on all agrees so we agree with pytorch on all of these operations of these operations of these operations and finally there's a demo.ipymb here and finally there's a demo.ipymb here and finally there's a demo.ipymb here and it's a bit more complicated binary and it's a bit more complicated binary and it's a bit more complicated binary classification demo than the one i classification demo than the one i classification demo than the one i covered in this lecture",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1821,
      "text": "so we only had a covered in this lecture so we only had a covered in this lecture so we only had a tiny data set of four examples um here tiny data set of four examples um here tiny data set of four examples um here we have a bit more complicated example we have a bit more complicated example we have a bit more complicated example with lots of blue points and lots of red with lots of blue points and lots of red with lots of blue points and lots of red points and we're trying to again build a points and we're trying to again build a points and we're trying to again build a binary classifier to distinguish uh two binary classifier to distinguish uh two binary classifier to distinguish uh two dimensional points as red or blue dimensional points as red or blue dimensional points as red or blue it's a bit more complicated mlp here it's a bit more complicated mlp here it's a bit more complicated mlp here with it's a bigger mlp with it's a bigger mlp with it's a bigger mlp the loss is a bit more complicated the loss is a bit more complicated the loss is a bit more complicated because because it supports batches it supports batches it supports batches so because our dataset was so tiny we so because our dataset was so tiny we so because our dataset was so tiny we always did a forward pass on the entire always did a forward pass on the entire always did a forward pass on the entire data set of four examples but when your data set of four examples but when your data set of four examples but when your data set is like a million examples what data set is like a million examples what data set is like a million examples what we usually do in practice is we chair we we usually do in practice is we chair we we usually do in practice is we chair we basically pick out some random subset we basically pick out some random subset we basically pick out some random subset we call that a batch",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1822,
      "text": "and then we only call that a batch",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1823,
      "text": "and then we only call that a batch",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1824,
      "text": "and then we only process the batch forward backward and process the batch forward backward and process the batch forward backward and update so we don't have to forward the update so we don't have to forward the update so we don't have to forward the entire training set entire training set entire training set so this supports batching because so this supports batching because so this supports batching because there's a lot more examples here there's a lot more examples here there's a lot more examples here we do a forward pass the loss is we do a forward pass the loss is we do a forward pass the loss is slightly more different this is a max slightly more different this is a max slightly more different this is a max margin loss that i implement here margin loss that i implement here margin loss that i implement here the one that we used was the mean the one that we used was the mean the one that we used was the mean squared error loss because it's the squared error loss because it's the squared error loss because it's the simplest one simplest one simplest one there's also the binary cross entropy there's also the binary cross entropy there's also the binary cross entropy loss all of them can be used for binary loss all of them can be used for binary loss all of them can be used for binary classification and don't make too much classification and don't make too much classification and don't make too much of a difference in the simple examples of a difference in the simple examples of a difference in the simple examples that we looked at so far that we looked at so far that we looked at so far there's something called l2 there's something called l2 there's something called l2 regularization used here this has to do regularization used here this has to do regularization used here this has to do with generalization of the neural net with generalization of the neural net with generalization of the neural net and controls the overfitting in machine and controls the overfitting in machine and controls the overfitting in machine learning setting",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1825,
      "text": "but i did not cover learning setting but i did not cover learning setting but i did not cover these concepts and concepts in this these concepts and concepts in this these concepts and concepts in this video potentially later video potentially later video potentially later and the training loop you should and the training loop you should and the training loop you should recognize so forward backward with zero recognize so forward backward with zero recognize so forward backward with zero grad grad and update and so on you'll notice that and update and so on you'll notice that and update and so on you'll notice that in the update here the learning rate is in the update here the learning rate is in the update here the learning rate is scaled as a function of number of scaled as a function of number of scaled as a function of number of iterations and it iterations and it iterations and it shrinks shrinks shrinks and this is something called learning and this is something called learning and this is something called learning rate decay so in the beginning you have rate decay",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1826,
      "text": "so in the beginning you have rate decay so in the beginning you have a high learning rate and as the network a high learning rate and as the network a high learning rate and as the network sort of stabilizes near the end you sort of stabilizes near the end you sort of stabilizes near the end you bring down the learning rate to get some bring down the learning rate to get some bring down the learning rate to get some of the fine details in the end of the fine details in the end of the fine details in the end and in the end we see the decision and in the end we see the decision and in the end we see the decision surface of the neural net and we see surface of the neural net and we see surface of the neural net and we see that it learns to separate out the red that it learns to separate out the red that it learns to separate out the red and the blue area based on the data and the blue area based on the data and the blue area based on the data points points points",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1827,
      "text": "so that's the slightly more complicated so that's the slightly more complicated",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1828,
      "text": "so that's the slightly more complicated example",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1829,
      "text": "and then we'll demo that hyper example",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1830,
      "text": "and then we'll demo that hyper example",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1831,
      "text": "and then we'll demo that hyper ymb that you're free to go over ymb that you're free to go over ymb that you're free to go over",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1832,
      "text": "but yeah as of today that is micrograd",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1833,
      "text": "i",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1834,
      "text": "but yeah as of today that is micrograd",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1835,
      "text": "i",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1836,
      "text": "but yeah as of today that is micrograd",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1837,
      "text": "i also wanted to show you a little bit of also wanted to show you a little bit of also wanted to show you a little bit of real stuff so that you get to see how real stuff so that you get to see how real stuff so that you get to see how this is actually implemented in this is actually implemented in this is actually implemented in production grade library like by torch production grade library like by torch production grade library like by torch",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1838,
      "text": "uh so in particular i wanted to show i uh so in particular i wanted to show i uh so in particular i wanted to show i wanted to find and show you the backward wanted to find and show you the backward wanted to find and show you the backward pass for 10h in pytorch so here in pass for 10h in pytorch so here in pass for 10h in pytorch so here in micrograd we see that the backward micrograd we see that the backward micrograd we see that the backward password 10h is one minus t square password 10h is one minus t square password 10h is one minus t square where t is the output of the tanh of x times of that grad which is the chain times of that grad which is the chain rule so we're looking for something that rule so we're looking for something that rule so we're looking for something that looks like this looks like this looks like this now now i went to pytorch um which has an open i went to pytorch um which has an open i went to pytorch um which has an open source github codebase and uh i looked source github codebase",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1839,
      "text": "and uh i looked source github codebase",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1840,
      "text": "and uh i looked through a lot of its code through a lot of its code through a lot of its code and",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1841,
      "text": "honestly i",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1842,
      "text": "i i spent about 15 and",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1843,
      "text": "honestly i",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1844,
      "text": "i i spent about 15 and",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1845,
      "text": "honestly i",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1846,
      "text": "i i spent about 15 minutes",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1847,
      "text": "and i couldn't find 10h minutes",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1848,
      "text": "and i couldn't find 10h minutes",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1849,
      "text": "and i couldn't find 10h and that's because these libraries",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1850,
      "text": "and that's because these libraries",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1851,
      "text": "and that's because these libraries unfortunately they grow in size and unfortunately they grow in size and unfortunately they grow in size and entropy and if you just search for 10h entropy and if you just search for 10h entropy and if you just search for 10h you get apparently 2 800 results and 400 you get apparently 2 800 results and 400 you get apparently 2 800 results and 400 and 406 files",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1852,
      "text": "so i don't know what these and 406 files",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1853,
      "text": "so i don't know what these and 406 files",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1854,
      "text": "so i don't know what these files are doing honestly files are doing honestly files are doing honestly and why there are so many mentions of and why there are so many mentions of and why there are so many mentions of 10h but unfortunately these libraries 10h but unfortunately these libraries 10h but unfortunately these libraries are quite complex they're meant to be are quite complex they're meant to be are quite complex they're meant to be used not really inspected um used not really inspected um used not really inspected um eventually i did stumble on someone",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1855,
      "text": "eventually i did stumble on someone eventually i did stumble on someone who tries to change the 10 h backward who tries to change the 10 h backward who tries to change the 10 h backward code for some reason code for some reason code for some reason and someone here pointed to the cpu and someone here pointed to the cpu and someone here pointed to the cpu kernel and the kuda kernel for 10 inch kernel and the kuda kernel for 10 inch kernel and the kuda kernel for 10 inch backward backward",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1856,
      "text": "so this so basically depends on if so this so basically depends on if so this so basically depends on if you're using pi torch on a cpu device or you're using pi torch on a cpu device or you're using pi torch on a cpu device or on a gpu which these are different on a gpu which these are different on a gpu which these are different devices and i haven't covered this but devices and i haven't covered this but devices and i haven't covered this",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1857,
      "text": "but this is the 10 h backwards kernel this is the 10 h backwards kernel this is the 10 h backwards kernel for uh cpu for uh cpu for uh cpu and the reason it's so large is that and the reason it's so large is that and the reason it's so large is",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1858,
      "text": "that number one this is like if you're using number one this is like if you're using number one this is like if you're using a complex type which we haven't even a complex type which we haven't even a complex type which we haven't even talked about if you're using a specific talked about if you're using a specific talked about if you're using a specific data type of b-float 16 which we haven't data type of b-float 16 which we haven't data type of b-float 16 which we haven't talked about talked about talked about and then if you're not then this is the",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1859,
      "text": "and then if you're not then this is the",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1860,
      "text": "and then if you're not then this is the kernel and deep here we see something kernel and deep here we see something kernel and deep here we see something that resembles our backward pass",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1861,
      "text": "so they that resembles our backward pass so they that resembles our backward pass so they have a times one minus have a times one minus have a times one minus b square uh so this b b square",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1862,
      "text": "uh so this b b square uh so this b b here must be the output of the 10h and b here must be the output of the 10h and b here must be the output of the 10h and this is the health.grad so here we found this is the health.grad so here we found this is the health.grad so here we found it",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1863,
      "text": "it uh deep inside uh deep inside uh deep inside pi torch from this location for some pi torch from this location for some pi torch from this location for some reason inside binaryops kernel when 10h reason inside binaryops kernel when 10h reason inside binaryops kernel when 10h is not actually a binary op is not actually a binary op is not actually a binary op",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1864,
      "text": "and then this is the gpu kernel we're not complex we're not complex",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1865,
      "text": "we're we're we're here",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1866,
      "text": "and here we go with one line of here",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1867,
      "text": "and here we go with one line of here",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1868,
      "text": "and here we go with one line of code code code",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1869,
      "text": "so we did find it but basically so we did find it but basically so we did find it but basically unfortunately these codepieces are very unfortunately these codepieces are very unfortunately these codepieces are very large and large and large and micrograd is very very simple but if you micrograd is very very simple but if you micrograd is very very simple but if you actually want to use real stuff uh actually want to use real stuff uh actually want to use real stuff uh finding the code for it you'll actually finding the code for it you'll actually finding the code for it you'll actually find that difficult find that difficult find that difficult",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1870,
      "text": "i also wanted to show you a little i also wanted to show you a little i also wanted to show you a little example here where pytorch is showing example here where pytorch is showing example here where pytorch is showing you how can you can register a new type you how can you can register a new type you how can you can register a new type of function that you want to add to of function that you want to add to of function that you want to add to pytorch as a lego building block pytorch as a lego building block pytorch as a lego building block",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1871,
      "text": "so here if you want to for example add a so here if you want to for example add a so here if you want to for example add a gender polynomial 3 gender polynomial 3 gender polynomial 3 here's how you could do it you will here's how you could do it you will here's how you could do it you will register it as a class that register it as a class that register it as a class that subclasses storage.org that function subclasses storage.org that function subclasses storage.org that function and then you have to tell pytorch how to and then you have to tell pytorch how to and then you have to tell pytorch how to forward your new function forward your new function forward your new function and how to backward through it and how to backward through it and how to backward through it so as long as you can do the forward so as long as you can do the forward so as long as you can do the forward pass of this little function piece that pass of this little function piece that pass of this little function piece that you want to add and as long as you know you want to add and as long as you know you want to add and as long as you know the the local derivative the local the the local derivative the local the the local derivative the local gradients which are implemented in the gradients which are implemented in the gradients which are implemented in the backward pi torch will be able to back backward pi torch will be able to back backward pi torch will be able to back propagate through your function and then propagate through your function and then propagate through your function and then you can use this as a lego block in a you can use this as a lego block in a you can use this as a lego block in a larger lego castle of all the different larger lego castle of all the different larger lego castle of all the different lego blocks that pytorch already has lego blocks that pytorch already has lego blocks that pytorch already has",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1872,
      "text": "and so that's the only thing you have to",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1873,
      "text": "and so that's the only thing you have to",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1874,
      "text": "and so that's the only thing you have to tell pytorch and everything would just tell pytorch and everything would just tell pytorch and everything would just work and you can register new types of work and you can register new types of work and you can register new types of functions functions functions in this way following this example in this way following this example in this way following this example and that is everything that i wanted to and that is everything that i wanted to and that is everything that i wanted to cover in this lecture cover in this lecture cover in this lecture",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1875,
      "text": "so i hope you enjoyed building out",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1876,
      "text": "so i hope you enjoyed building out",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1877,
      "text": "so i hope you enjoyed building out micrograd with me",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1878,
      "text": "i hope you find it micrograd with me",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1879,
      "text": "i hope you find it micrograd with me",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1880,
      "text": "i hope you find it interesting insightful interesting insightful interesting insightful",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1881,
      "text": "and",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1882,
      "text": "and",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1883,
      "text": "yeah",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1884,
      "text": "i will post a lot of the links",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1885,
      "text": "yeah",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1886,
      "text": "i will post a lot of the links",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1887,
      "text": "yeah",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1888,
      "text": "i will post a lot of the links that are related to this video in the that are related to this video in the that are related to this video in the video description below i will also video description below i will also video description below",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1889,
      "text": "i will also probably post a link to a discussion probably post a link to a discussion probably post a link to a discussion forum forum forum or discussion group where you can ask or discussion group where you can ask or discussion group where you can ask questions related to this video and then questions related to this video and then questions related to this video",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1890,
      "text": "and then i can answer or someone else can answer i can answer or someone else can answer i can answer or someone else can answer your questions and i may also do a your questions and i may also do a your questions and i may also do a follow-up video that answers some of the follow-up video that answers some of the follow-up video that answers some of the most common questions most common questions most common questions",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1891,
      "text": "but for now that's it",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1892,
      "text": "i hope you enjoyed",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1893,
      "text": "but for now that's it",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1894,
      "text": "i hope you enjoyed",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1895,
      "text": "but for now that's it",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1896,
      "text": "i hope you enjoyed it if you did then please like and it if you did then please like and it",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1897,
      "text": "if you did then please like and subscribe so that youtube knows to subscribe so that youtube knows to subscribe so that youtube knows to feature this video to more people feature this video to more people feature this video to more people and that's it for now i'll see you later now here's the problem we know",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1898,
      "text": "we know we know dl by dl by dl by wait what is the problem",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1899,
      "text": "and that's everything i wanted to cover and that's everything i wanted to cover in this lecture in this lecture in this lecture",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1900,
      "text": "so i hope so i hope so i hope you enjoyed us building up microcraft you enjoyed us building up microcraft you enjoyed us building up microcraft micro crab",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1901,
      "text": "okay now let's do the exact same thing",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    },
    {
      "id": 1902,
      "text": "okay now let's do the exact same thing for multiply because we can't do for multiply because we can't do for multiply because we can't do something like a times two something like a times two something like a times two oops",
      "start_time": "00:00:01.829",
      "end_time": "02:25:50.790"
    }
  ]
}