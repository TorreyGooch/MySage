WEBVTT
Kind: captions
Language: en

00:00:00.040 --> 00:00:02.030 align:start position:0%
 
hi<00:00:00.160><c> everyone</c><00:00:01.000><c> so</c><00:00:01.160><c> in</c><00:00:01.280><c> this</c><00:00:01.439><c> video</c><00:00:01.680><c> I'd</c><00:00:01.800><c> like</c><00:00:01.920><c> us</c>

00:00:02.030 --> 00:00:02.040 align:start position:0%
hi everyone so in this video I'd like us
 

00:00:02.040 --> 00:00:04.070 align:start position:0%
hi everyone so in this video I'd like us
to<00:00:02.200><c> cover</c><00:00:02.560><c> the</c><00:00:02.760><c> process</c><00:00:03.000><c> of</c><00:00:03.159><c> tokenization</c><00:00:03.879><c> in</c>

00:00:04.070 --> 00:00:04.080 align:start position:0%
to cover the process of tokenization in
 

00:00:04.080 --> 00:00:06.430 align:start position:0%
to cover the process of tokenization in
large<00:00:04.319><c> language</c><00:00:04.600><c> models</c><00:00:05.560><c> now</c><00:00:05.920><c> you</c><00:00:06.080><c> see</c><00:00:06.319><c> here</c>

00:00:06.430 --> 00:00:06.440 align:start position:0%
large language models now you see here
 

00:00:06.440 --> 00:00:08.270 align:start position:0%
large language models now you see here
that<00:00:06.560><c> I</c><00:00:06.680><c> have</c><00:00:06.759><c> a</c><00:00:06.839><c> set</c><00:00:07.160><c> face</c><00:00:07.799><c> and</c><00:00:08.000><c> that's</c>

00:00:08.270 --> 00:00:08.280 align:start position:0%
that I have a set face and that's
 

00:00:08.280 --> 00:00:10.310 align:start position:0%
that I have a set face and that's
because<00:00:08.880><c> uh</c><00:00:09.120><c> tokenization</c><00:00:09.719><c> is</c><00:00:09.880><c> my</c><00:00:10.040><c> least</c>

00:00:10.310 --> 00:00:10.320 align:start position:0%
because uh tokenization is my least
 

00:00:10.320 --> 00:00:11.669 align:start position:0%
because uh tokenization is my least
favorite<00:00:10.759><c> part</c><00:00:10.960><c> of</c><00:00:11.080><c> working</c><00:00:11.320><c> with</c><00:00:11.440><c> large</c>

00:00:11.669 --> 00:00:11.679 align:start position:0%
favorite part of working with large
 

00:00:11.679 --> 00:00:13.470 align:start position:0%
favorite part of working with large
language<00:00:11.960><c> models</c><00:00:12.559><c> but</c><00:00:12.679><c> unfortunately</c><00:00:13.200><c> it</c><00:00:13.280><c> is</c>

00:00:13.470 --> 00:00:13.480 align:start position:0%
language models but unfortunately it is
 

00:00:13.480 --> 00:00:15.509 align:start position:0%
language models but unfortunately it is
necessary<00:00:13.839><c> to</c><00:00:14.240><c> understand</c><00:00:14.440><c> in</c><00:00:14.559><c> some</c><00:00:14.839><c> detail</c>

00:00:15.509 --> 00:00:15.519 align:start position:0%
necessary to understand in some detail
 

00:00:15.519 --> 00:00:17.590 align:start position:0%
necessary to understand in some detail
because<00:00:15.879><c> it</c><00:00:16.080><c> it</c><00:00:16.160><c> is</c><00:00:16.320><c> fairly</c><00:00:16.640><c> hairy</c><00:00:17.000><c> gnarly</c><00:00:17.520><c> and</c>

00:00:17.590 --> 00:00:17.600 align:start position:0%
because it it is fairly hairy gnarly and
 

00:00:17.600 --> 00:00:19.470 align:start position:0%
because it it is fairly hairy gnarly and
there's<00:00:17.760><c> a</c><00:00:17.880><c> lot</c><00:00:18.000><c> of</c><00:00:18.119><c> hidden</c><00:00:18.359><c> foot</c><00:00:18.600><c> guns</c><00:00:19.199><c> to</c><00:00:19.359><c> be</c>

00:00:19.470 --> 00:00:19.480 align:start position:0%
there's a lot of hidden foot guns to be
 

00:00:19.480 --> 00:00:21.830 align:start position:0%
there's a lot of hidden foot guns to be
aware<00:00:19.800><c> of</c><00:00:20.400><c> and</c><00:00:20.560><c> a</c><00:00:20.680><c> lot</c><00:00:20.800><c> of</c><00:00:21.039><c> oddness</c><00:00:21.439><c> with</c><00:00:21.560><c> large</c>

00:00:21.830 --> 00:00:21.840 align:start position:0%
aware of and a lot of oddness with large
 

00:00:21.840 --> 00:00:24.589 align:start position:0%
aware of and a lot of oddness with large
language<00:00:22.119><c> models</c><00:00:22.480><c> typically</c><00:00:22.800><c> traces</c><00:00:23.400><c> back</c><00:00:23.760><c> to</c>

00:00:24.589 --> 00:00:24.599 align:start position:0%
language models typically traces back to
 

00:00:24.599 --> 00:00:26.630 align:start position:0%
language models typically traces back to
tokenization<00:00:25.599><c> so</c><00:00:25.840><c> what</c><00:00:25.960><c> is</c>

00:00:26.630 --> 00:00:26.640 align:start position:0%
tokenization so what is
 

00:00:26.640 --> 00:00:28.910 align:start position:0%
tokenization so what is
tokenization<00:00:27.640><c> now</c><00:00:28.080><c> in</c><00:00:28.199><c> my</c><00:00:28.359><c> previous</c><00:00:28.679><c> video</c>

00:00:28.910 --> 00:00:28.920 align:start position:0%
tokenization now in my previous video
 

00:00:28.920 --> 00:00:31.550 align:start position:0%
tokenization now in my previous video
Let's<00:00:29.119><c> Build</c><00:00:29.320><c> GPT</c><00:00:29.720><c> from</c><00:00:30.240><c> scratch</c><00:00:31.240><c> uh</c><00:00:31.400><c> we</c>

00:00:31.550 --> 00:00:31.560 align:start position:0%
Let's Build GPT from scratch uh we
 

00:00:31.560 --> 00:00:33.470 align:start position:0%
Let's Build GPT from scratch uh we
actually<00:00:31.920><c> already</c><00:00:32.239><c> did</c><00:00:32.480><c> tokenization</c><00:00:33.200><c> but</c><00:00:33.320><c> we</c>

00:00:33.470 --> 00:00:33.480 align:start position:0%
actually already did tokenization but we
 

00:00:33.480 --> 00:00:35.790 align:start position:0%
actually already did tokenization but we
did<00:00:33.640><c> a</c><00:00:33.800><c> very</c><00:00:34.040><c> naive</c><00:00:34.680><c> simple</c><00:00:35.120><c> version</c><00:00:35.360><c> of</c>

00:00:35.790 --> 00:00:35.800 align:start position:0%
did a very naive simple version of
 

00:00:35.800 --> 00:00:37.470 align:start position:0%
did a very naive simple version of
tokenization<00:00:36.800><c> so</c><00:00:36.960><c> when</c><00:00:37.040><c> you</c><00:00:37.160><c> go</c><00:00:37.280><c> to</c><00:00:37.360><c> the</c>

00:00:37.470 --> 00:00:37.480 align:start position:0%
tokenization so when you go to the
 

00:00:37.480 --> 00:00:40.549 align:start position:0%
tokenization so when you go to the
Google<00:00:37.760><c> colab</c><00:00:38.280><c> for</c><00:00:38.559><c> that</c><00:00:39.000><c> video</c><00:00:40.000><c> uh</c><00:00:40.120><c> you</c><00:00:40.280><c> see</c>

00:00:40.549 --> 00:00:40.559 align:start position:0%
Google colab for that video uh you see
 

00:00:40.559 --> 00:00:43.190 align:start position:0%
Google colab for that video uh you see
here<00:00:40.760><c> that</c><00:00:40.879><c> we</c><00:00:41.000><c> loaded</c><00:00:41.680><c> our</c><00:00:41.879><c> training</c><00:00:42.239><c> set</c><00:00:43.079><c> and</c>

00:00:43.190 --> 00:00:43.200 align:start position:0%
here that we loaded our training set and
 

00:00:43.200 --> 00:00:45.510 align:start position:0%
here that we loaded our training set and
our<00:00:43.320><c> training</c><00:00:43.600><c> set</c><00:00:43.840><c> was</c><00:00:44.039><c> this</c><00:00:44.239><c> uh</c><00:00:44.520><c> Shakespeare</c>

00:00:45.510 --> 00:00:45.520 align:start position:0%
our training set was this uh Shakespeare
 

00:00:45.520 --> 00:00:48.110 align:start position:0%
our training set was this uh Shakespeare
uh<00:00:45.640><c> data</c><00:00:46.360><c> set</c><00:00:47.360><c> now</c><00:00:47.480><c> in</c><00:00:47.600><c> the</c><00:00:47.719><c> beginning</c><00:00:48.039><c> the</c>

00:00:48.110 --> 00:00:48.120 align:start position:0%
uh data set now in the beginning the
 

00:00:48.120 --> 00:00:49.750 align:start position:0%
uh data set now in the beginning the
Shakespeare<00:00:48.600><c> data</c><00:00:48.840><c> set</c><00:00:48.960><c> is</c><00:00:49.120><c> just</c><00:00:49.280><c> a</c><00:00:49.440><c> large</c>

00:00:49.750 --> 00:00:49.760 align:start position:0%
Shakespeare data set is just a large
 

00:00:49.760 --> 00:00:52.430 align:start position:0%
Shakespeare data set is just a large
string<00:00:50.320><c> in</c><00:00:50.520><c> Python</c><00:00:50.920><c> it's</c><00:00:51.199><c> just</c><00:00:51.440><c> text</c><00:00:52.199><c> and</c><00:00:52.280><c> so</c>

00:00:52.430 --> 00:00:52.440 align:start position:0%
string in Python it's just text and so
 

00:00:52.440 --> 00:00:54.830 align:start position:0%
string in Python it's just text and so
the<00:00:52.559><c> question</c><00:00:52.760><c> is</c><00:00:52.879><c> how</c><00:00:53.000><c> do</c><00:00:53.079><c> we</c><00:00:53.239><c> plug</c><00:00:53.640><c> text</c><00:00:54.239><c> into</c>

00:00:54.830 --> 00:00:54.840 align:start position:0%
the question is how do we plug text into
 

00:00:54.840 --> 00:00:58.069 align:start position:0%
the question is how do we plug text into
large<00:00:55.120><c> language</c><00:00:55.719><c> models</c><00:00:56.719><c> and</c><00:00:57.039><c> in</c><00:00:57.199><c> this</c><00:00:57.399><c> case</c>

00:00:58.069 --> 00:00:58.079 align:start position:0%
large language models and in this case
 

00:00:58.079 --> 00:01:01.430 align:start position:0%
large language models and in this case
here<00:00:59.079><c> we</c><00:00:59.280><c> created</c><00:00:59.640><c> a</c><00:00:59.920><c> vocabulary</c><00:01:00.559><c> of</c><00:01:00.760><c> 65</c>

00:01:01.430 --> 00:01:01.440 align:start position:0%
here we created a vocabulary of 65
 

00:01:01.440 --> 00:01:03.950 align:start position:0%
here we created a vocabulary of 65
possible<00:01:01.960><c> characters</c><00:01:02.680><c> that</c><00:01:02.800><c> we</c><00:01:02.920><c> saw</c><00:01:03.320><c> occur</c><00:01:03.760><c> in</c>

00:01:03.950 --> 00:01:03.960 align:start position:0%
possible characters that we saw occur in
 

00:01:03.960 --> 00:01:05.789 align:start position:0%
possible characters that we saw occur in
this<00:01:04.159><c> string</c><00:01:05.000><c> these</c><00:01:05.159><c> were</c><00:01:05.360><c> the</c><00:01:05.479><c> possible</c>

00:01:05.789 --> 00:01:05.799 align:start position:0%
this string these were the possible
 

00:01:05.799 --> 00:01:07.950 align:start position:0%
this string these were the possible
characters<00:01:06.600><c> and</c><00:01:06.720><c> we</c><00:01:06.799><c> saw</c><00:01:07.040><c> that</c><00:01:07.200><c> there</c><00:01:07.320><c> are</c><00:01:07.479><c> 65</c>

00:01:07.950 --> 00:01:07.960 align:start position:0%
characters and we saw that there are 65
 

00:01:07.960 --> 00:01:10.630 align:start position:0%
characters and we saw that there are 65
of<00:01:08.119><c> them</c><00:01:08.759><c> and</c><00:01:08.920><c> then</c><00:01:09.040><c> we</c><00:01:09.200><c> created</c><00:01:09.840><c> a</c><00:01:10.119><c> a</c><00:01:10.280><c> lookup</c>

00:01:10.630 --> 00:01:10.640 align:start position:0%
of them and then we created a a lookup
 

00:01:10.640 --> 00:01:13.390 align:start position:0%
of them and then we created a a lookup
table<00:01:11.200><c> for</c><00:01:11.439><c> converting</c><00:01:12.159><c> from</c><00:01:12.560><c> every</c><00:01:12.920><c> possible</c>

00:01:13.390 --> 00:01:13.400 align:start position:0%
table for converting from every possible
 

00:01:13.400 --> 00:01:16.310 align:start position:0%
table for converting from every possible
character<00:01:13.880><c> a</c><00:01:14.000><c> little</c><00:01:14.200><c> string</c><00:01:14.640><c> piece</c><00:01:15.240><c> into</c><00:01:16.119><c> a</c>

00:01:16.310 --> 00:01:16.320 align:start position:0%
character a little string piece into a
 

00:01:16.320 --> 00:01:17.749 align:start position:0%
character a little string piece into a
token<00:01:17.000><c> an</c>

00:01:17.749 --> 00:01:17.759 align:start position:0%
token an
 

00:01:17.759 --> 00:01:20.510 align:start position:0%
token an
integer<00:01:18.759><c> so</c><00:01:18.960><c> here</c><00:01:19.080><c> for</c><00:01:19.280><c> example</c><00:01:19.640><c> we</c><00:01:19.799><c> tokenized</c>

00:01:20.510 --> 00:01:20.520 align:start position:0%
integer so here for example we tokenized
 

00:01:20.520 --> 00:01:23.270 align:start position:0%
integer so here for example we tokenized
the<00:01:20.680><c> string</c><00:01:21.320><c> High</c><00:01:21.640><c> there</c><00:01:22.360><c> and</c><00:01:22.520><c> we</c><00:01:22.880><c> received</c>

00:01:23.270 --> 00:01:23.280 align:start position:0%
the string High there and we received
 

00:01:23.280 --> 00:01:24.710 align:start position:0%
the string High there and we received
this<00:01:23.479><c> sequence</c><00:01:23.799><c> of</c>

00:01:24.710 --> 00:01:24.720 align:start position:0%
this sequence of
 

00:01:24.720 --> 00:01:27.590 align:start position:0%
this sequence of
tokens<00:01:25.720><c> and</c><00:01:25.880><c> here</c><00:01:26.040><c> we</c><00:01:26.159><c> took</c><00:01:26.360><c> the</c><00:01:26.479><c> first</c><00:01:26.759><c> 1,000</c>

00:01:27.590 --> 00:01:27.600 align:start position:0%
tokens and here we took the first 1,000
 

00:01:27.600 --> 00:01:29.910 align:start position:0%
tokens and here we took the first 1,000
characters<00:01:28.280><c> of</c><00:01:28.439><c> our</c><00:01:28.640><c> data</c><00:01:28.920><c> set</c><00:01:29.439><c> and</c><00:01:29.560><c> we</c>

00:01:29.910 --> 00:01:29.920 align:start position:0%
characters of our data set and we
 

00:01:29.920 --> 00:01:32.550 align:start position:0%
characters of our data set and we
encoded<00:01:30.320><c> it</c><00:01:30.600><c> into</c><00:01:30.880><c> tokens</c><00:01:31.880><c> and</c><00:01:32.040><c> because</c><00:01:32.280><c> it</c><00:01:32.399><c> is</c>

00:01:32.550 --> 00:01:32.560 align:start position:0%
encoded it into tokens and because it is
 

00:01:32.560 --> 00:01:34.630 align:start position:0%
encoded it into tokens and because it is
this<00:01:32.680><c> is</c><00:01:32.880><c> character</c><00:01:33.280><c> level</c><00:01:33.880><c> we</c><00:01:34.280><c> received</c>

00:01:34.630 --> 00:01:34.640 align:start position:0%
this is character level we received
 

00:01:34.640 --> 00:01:38.950 align:start position:0%
this is character level we received
1,000<00:01:35.600><c> tokens</c><00:01:36.159><c> in</c><00:01:36.280><c> a</c><00:01:36.680><c> sequence</c><00:01:37.680><c> so</c><00:01:38.119><c> token</c><00:01:38.560><c> 18</c>

00:01:38.950 --> 00:01:38.960 align:start position:0%
1,000 tokens in a sequence so token 18
 

00:01:38.960 --> 00:01:40.109 align:start position:0%
1,000 tokens in a sequence so token 18
47

00:01:40.109 --> 00:01:40.119 align:start position:0%
47
 

00:01:40.119 --> 00:01:43.429 align:start position:0%
47
Etc<00:01:41.119><c> now</c><00:01:41.799><c> later</c><00:01:42.159><c> we</c><00:01:42.280><c> saw</c><00:01:42.640><c> that</c><00:01:42.920><c> the</c><00:01:43.079><c> way</c><00:01:43.240><c> we</c>

00:01:43.429 --> 00:01:43.439 align:start position:0%
Etc now later we saw that the way we
 

00:01:43.439 --> 00:01:45.630 align:start position:0%
Etc now later we saw that the way we
plug<00:01:43.960><c> these</c><00:01:44.320><c> tokens</c><00:01:44.840><c> into</c><00:01:45.159><c> the</c><00:01:45.320><c> language</c>

00:01:45.630 --> 00:01:45.640 align:start position:0%
plug these tokens into the language
 

00:01:45.640 --> 00:01:48.469 align:start position:0%
plug these tokens into the language
model<00:01:46.600><c> is</c><00:01:46.840><c> by</c><00:01:47.000><c> using</c><00:01:47.399><c> an</c><00:01:47.560><c> embedding</c>

00:01:48.469 --> 00:01:48.479 align:start position:0%
model is by using an embedding
 

00:01:48.479 --> 00:01:51.469 align:start position:0%
model is by using an embedding
table<00:01:49.479><c> and</c><00:01:49.600><c> so</c><00:01:49.840><c> basically</c><00:01:50.399><c> if</c><00:01:50.520><c> we</c><00:01:50.640><c> have</c><00:01:50.759><c> 65</c>

00:01:51.469 --> 00:01:51.479 align:start position:0%
table and so basically if we have 65
 

00:01:51.479 --> 00:01:53.469 align:start position:0%
table and so basically if we have 65
possible<00:01:51.880><c> tokens</c><00:01:52.719><c> then</c><00:01:52.880><c> this</c><00:01:53.079><c> embedding</c>

00:01:53.469 --> 00:01:53.479 align:start position:0%
possible tokens then this embedding
 

00:01:53.479 --> 00:01:56.429 align:start position:0%
possible tokens then this embedding
table<00:01:53.719><c> is</c><00:01:53.880><c> going</c><00:01:54.000><c> to</c><00:01:54.119><c> have</c><00:01:54.280><c> 65</c><00:01:55.079><c> rows</c><00:01:56.079><c> and</c>

00:01:56.429 --> 00:01:56.439 align:start position:0%
table is going to have 65 rows and
 

00:01:56.439 --> 00:01:58.149 align:start position:0%
table is going to have 65 rows and
roughly<00:01:56.799><c> speaking</c><00:01:57.280><c> we're</c><00:01:57.479><c> taking</c><00:01:57.840><c> the</c>

00:01:58.149 --> 00:01:58.159 align:start position:0%
roughly speaking we're taking the
 

00:01:58.159 --> 00:01:59.789 align:start position:0%
roughly speaking we're taking the
integer<00:01:58.920><c> associated</c><00:01:59.360><c> with</c><00:01:59.479><c> every</c><00:01:59.600><c> single</c>

00:01:59.789 --> 00:01:59.799 align:start position:0%
integer associated with every single
 

00:01:59.799 --> 00:02:01.510 align:start position:0%
integer associated with every single
sing<00:01:59.920><c> Le</c><00:02:00.039><c> token</c><00:02:00.640><c> we're</c><00:02:00.799><c> using</c><00:02:01.119><c> that</c><00:02:01.280><c> as</c><00:02:01.360><c> a</c>

00:02:01.510 --> 00:02:01.520 align:start position:0%
sing Le token we're using that as a
 

00:02:01.520 --> 00:02:04.029 align:start position:0%
sing Le token we're using that as a
lookup<00:02:02.000><c> into</c><00:02:02.880><c> this</c><00:02:03.079><c> table</c><00:02:03.719><c> and</c><00:02:03.840><c> we're</c>

00:02:04.029 --> 00:02:04.039 align:start position:0%
lookup into this table and we're
 

00:02:04.039 --> 00:02:06.469 align:start position:0%
lookup into this table and we're
plucking<00:02:04.399><c> out</c><00:02:04.640><c> the</c><00:02:04.759><c> corresponding</c><00:02:05.320><c> row</c><00:02:06.320><c> and</c>

00:02:06.469 --> 00:02:06.479 align:start position:0%
plucking out the corresponding row and
 

00:02:06.479 --> 00:02:09.350 align:start position:0%
plucking out the corresponding row and
this<00:02:06.640><c> row</c><00:02:07.159><c> is</c><00:02:07.439><c> a</c><00:02:07.920><c> uh</c><00:02:08.039><c> is</c><00:02:08.239><c> trainable</c><00:02:08.759><c> parameters</c>

00:02:09.350 --> 00:02:09.360 align:start position:0%
this row is a uh is trainable parameters
 

00:02:09.360 --> 00:02:10.469 align:start position:0%
this row is a uh is trainable parameters
that<00:02:09.479><c> we're</c><00:02:09.599><c> going</c><00:02:09.720><c> to</c><00:02:09.840><c> train</c><00:02:10.039><c> using</c><00:02:10.280><c> back</c>

00:02:10.469 --> 00:02:10.479 align:start position:0%
that we're going to train using back
 

00:02:10.479 --> 00:02:12.869 align:start position:0%
that we're going to train using back
propagation<00:02:11.360><c> and</c><00:02:11.520><c> this</c><00:02:11.640><c> is</c><00:02:11.800><c> the</c><00:02:11.959><c> vector</c><00:02:12.760><c> that</c>

00:02:12.869 --> 00:02:12.879 align:start position:0%
propagation and this is the vector that
 

00:02:12.879 --> 00:02:15.350 align:start position:0%
propagation and this is the vector that
then<00:02:13.040><c> feeds</c><00:02:13.319><c> into</c><00:02:13.520><c> the</c><00:02:13.760><c> Transformer</c><00:02:14.760><c> um</c><00:02:15.160><c> and</c>

00:02:15.350 --> 00:02:15.360 align:start position:0%
then feeds into the Transformer um and
 

00:02:15.360 --> 00:02:16.550 align:start position:0%
then feeds into the Transformer um and
that's<00:02:15.519><c> how</c><00:02:15.640><c> the</c><00:02:15.800><c> Transformer</c><00:02:16.160><c> Ser</c><00:02:16.400><c> of</c>

00:02:16.550 --> 00:02:16.560 align:start position:0%
that's how the Transformer Ser of
 

00:02:16.560 --> 00:02:18.110 align:start position:0%
that's how the Transformer Ser of
perceives<00:02:17.080><c> every</c><00:02:17.239><c> single</c>

00:02:18.110 --> 00:02:18.120 align:start position:0%
perceives every single
 

00:02:18.120 --> 00:02:21.270 align:start position:0%
perceives every single
token<00:02:19.120><c> so</c><00:02:19.680><c> here</c><00:02:19.959><c> we</c><00:02:20.080><c> had</c><00:02:20.200><c> a</c><00:02:20.319><c> very</c><00:02:20.560><c> naive</c>

00:02:21.270 --> 00:02:21.280 align:start position:0%
token so here we had a very naive
 

00:02:21.280 --> 00:02:23.110 align:start position:0%
token so here we had a very naive
tokenization<00:02:22.080><c> process</c><00:02:22.640><c> that</c><00:02:22.760><c> was</c><00:02:23.000><c> a</c>

00:02:23.110 --> 00:02:23.120 align:start position:0%
tokenization process that was a
 

00:02:23.120 --> 00:02:25.229 align:start position:0%
tokenization process that was a
character<00:02:23.440><c> level</c><00:02:23.879><c> tokenizer</c><00:02:24.879><c> but</c><00:02:25.040><c> in</c>

00:02:25.229 --> 00:02:25.239 align:start position:0%
character level tokenizer but in
 

00:02:25.239 --> 00:02:27.270 align:start position:0%
character level tokenizer but in
practice<00:02:25.519><c> in</c><00:02:25.640><c> state-ofthe-art</c><00:02:25.959><c> uh</c><00:02:26.920><c> language</c>

00:02:27.270 --> 00:02:27.280 align:start position:0%
practice in state-ofthe-art uh language
 

00:02:27.280 --> 00:02:28.949 align:start position:0%
practice in state-ofthe-art uh language
models<00:02:27.800><c> people</c><00:02:28.000><c> use</c><00:02:28.160><c> a</c><00:02:28.280><c> lot</c><00:02:28.400><c> more</c><00:02:28.560><c> complicated</c>

00:02:28.949 --> 00:02:28.959 align:start position:0%
models people use a lot more complicated
 

00:02:28.959 --> 00:02:30.430 align:start position:0%
models people use a lot more complicated
schemes<00:02:29.280><c> unfortunately</c>

00:02:30.430 --> 00:02:30.440 align:start position:0%
schemes unfortunately
 

00:02:30.440 --> 00:02:34.350 align:start position:0%
schemes unfortunately
uh<00:02:30.560><c> for</c><00:02:31.360><c> constructing</c><00:02:32.200><c> these</c><00:02:32.680><c> uh</c><00:02:32.840><c> token</c>

00:02:34.350 --> 00:02:34.360 align:start position:0%
uh for constructing these uh token
 

00:02:34.360 --> 00:02:36.630 align:start position:0%
uh for constructing these uh token
vocabularies<00:02:35.360><c> so</c><00:02:35.519><c> we're</c><00:02:35.680><c> not</c><00:02:35.800><c> dealing</c><00:02:36.160><c> on</c><00:02:36.280><c> the</c>

00:02:36.630 --> 00:02:36.640 align:start position:0%
vocabularies so we're not dealing on the
 

00:02:36.640 --> 00:02:38.630 align:start position:0%
vocabularies so we're not dealing on the
Character<00:02:37.040><c> level</c><00:02:37.519><c> we're</c><00:02:37.800><c> dealing</c><00:02:38.080><c> on</c><00:02:38.319><c> chunk</c>

00:02:38.630 --> 00:02:38.640 align:start position:0%
Character level we're dealing on chunk
 

00:02:38.640 --> 00:02:41.509 align:start position:0%
Character level we're dealing on chunk
level<00:02:39.480><c> and</c><00:02:39.599><c> the</c><00:02:39.760><c> way</c><00:02:40.000><c> these</c><00:02:40.519><c> um</c><00:02:40.920><c> character</c>

00:02:41.509 --> 00:02:41.519 align:start position:0%
level and the way these um character
 

00:02:41.519 --> 00:02:43.869 align:start position:0%
level and the way these um character
chunks<00:02:41.920><c> are</c><00:02:42.159><c> constructed</c><00:02:43.040><c> is</c><00:02:43.319><c> using</c>

00:02:43.869 --> 00:02:43.879 align:start position:0%
chunks are constructed is using
 

00:02:43.879 --> 00:02:45.470 align:start position:0%
chunks are constructed is using
algorithms<00:02:44.480><c> such</c><00:02:44.599><c> as</c><00:02:44.720><c> for</c><00:02:44.879><c> example</c><00:02:45.120><c> the</c><00:02:45.239><c> bik</c>

00:02:45.470 --> 00:02:45.480 align:start position:0%
algorithms such as for example the bik
 

00:02:45.480 --> 00:02:46.949 align:start position:0%
algorithms such as for example the bik
pair<00:02:45.640><c> in</c><00:02:45.800><c> coding</c><00:02:46.040><c> algorithm</c><00:02:46.680><c> which</c><00:02:46.800><c> we're</c>

00:02:46.949 --> 00:02:46.959 align:start position:0%
pair in coding algorithm which we're
 

00:02:46.959 --> 00:02:50.990 align:start position:0%
pair in coding algorithm which we're
going<00:02:47.120><c> to</c><00:02:47.239><c> go</c><00:02:47.480><c> into</c><00:02:48.000><c> in</c><00:02:48.599><c> detail</c><00:02:49.599><c> um</c><00:02:50.599><c> and</c><00:02:50.800><c> cover</c>

00:02:50.990 --> 00:02:51.000 align:start position:0%
going to go into in detail um and cover
 

00:02:51.000 --> 00:02:52.869 align:start position:0%
going to go into in detail um and cover
in<00:02:51.159><c> this</c><00:02:51.319><c> video</c><00:02:52.080><c> I'd</c><00:02:52.200><c> like</c><00:02:52.360><c> to</c><00:02:52.480><c> briefly</c><00:02:52.760><c> show</c>

00:02:52.869 --> 00:02:52.879 align:start position:0%
in this video I'd like to briefly show
 

00:02:52.879 --> 00:02:54.830 align:start position:0%
in this video I'd like to briefly show
you<00:02:53.000><c> the</c><00:02:53.120><c> paper</c><00:02:53.400><c> that</c><00:02:53.599><c> introduced</c><00:02:54.400><c> a</c><00:02:54.560><c> bite</c>

00:02:54.830 --> 00:02:54.840 align:start position:0%
you the paper that introduced a bite
 

00:02:54.840 --> 00:02:56.910 align:start position:0%
you the paper that introduced a bite
level<00:02:55.159><c> encoding</c><00:02:56.040><c> as</c><00:02:56.200><c> a</c><00:02:56.360><c> mechanism</c><00:02:56.760><c> for</c>

00:02:56.910 --> 00:02:56.920 align:start position:0%
level encoding as a mechanism for
 

00:02:56.920 --> 00:02:58.430 align:start position:0%
level encoding as a mechanism for
tokenization<00:02:57.599><c> in</c><00:02:57.680><c> the</c><00:02:57.800><c> context</c><00:02:58.080><c> of</c><00:02:58.200><c> large</c>

00:02:58.430 --> 00:02:58.440 align:start position:0%
tokenization in the context of large
 

00:02:58.440 --> 00:03:00.589 align:start position:0%
tokenization in the context of large
language<00:02:58.760><c> models</c><00:02:59.800><c> and</c><00:02:59.920><c> I</c><00:03:00.000><c> would</c><00:03:00.159><c> say</c><00:03:00.360><c> that</c>

00:03:00.589 --> 00:03:00.599 align:start position:0%
language models and I would say that
 

00:03:00.599 --> 00:03:02.710 align:start position:0%
language models and I would say that
that's<00:03:00.800><c> probably</c><00:03:01.040><c> the</c><00:03:01.159><c> gpt2</c><00:03:01.760><c> paper</c><00:03:02.519><c> and</c><00:03:02.640><c> if</c>

00:03:02.710 --> 00:03:02.720 align:start position:0%
that's probably the gpt2 paper and if
 

00:03:02.720 --> 00:03:05.550 align:start position:0%
that's probably the gpt2 paper and if
you<00:03:02.840><c> scroll</c><00:03:03.239><c> down</c><00:03:03.720><c> here</c><00:03:04.720><c> to</c><00:03:04.959><c> the</c><00:03:05.159><c> section</c>

00:03:05.550 --> 00:03:05.560 align:start position:0%
you scroll down here to the section
 

00:03:05.560 --> 00:03:07.710 align:start position:0%
you scroll down here to the section
input<00:03:06.120><c> representation</c><00:03:07.120><c> this</c><00:03:07.200><c> is</c><00:03:07.360><c> where</c><00:03:07.519><c> they</c>

00:03:07.710 --> 00:03:07.720 align:start position:0%
input representation this is where they
 

00:03:07.720 --> 00:03:09.470 align:start position:0%
input representation this is where they
cover<00:03:08.040><c> tokenization</c><00:03:09.040><c> the</c><00:03:09.120><c> kinds</c><00:03:09.319><c> of</c>

00:03:09.470 --> 00:03:09.480 align:start position:0%
cover tokenization the kinds of
 

00:03:09.480 --> 00:03:10.550 align:start position:0%
cover tokenization the kinds of
properties<00:03:09.879><c> that</c><00:03:10.000><c> you'd</c><00:03:10.200><c> like</c><00:03:10.440><c> the</c>

00:03:10.550 --> 00:03:10.560 align:start position:0%
properties that you'd like the
 

00:03:10.560 --> 00:03:12.990 align:start position:0%
properties that you'd like the
tokenization<00:03:11.159><c> to</c><00:03:11.440><c> have</c><00:03:12.280><c> and</c><00:03:12.400><c> they</c><00:03:12.560><c> conclude</c>

00:03:12.990 --> 00:03:13.000 align:start position:0%
tokenization to have and they conclude
 

00:03:13.000 --> 00:03:14.949 align:start position:0%
tokenization to have and they conclude
here<00:03:13.280><c> that</c><00:03:13.799><c> they're</c><00:03:14.000><c> going</c><00:03:14.159><c> to</c><00:03:14.400><c> have</c><00:03:14.760><c> a</c>

00:03:14.949 --> 00:03:14.959 align:start position:0%
here that they're going to have a
 

00:03:14.959 --> 00:03:17.589 align:start position:0%
here that they're going to have a
tokenizer<00:03:15.959><c> where</c><00:03:16.120><c> you</c><00:03:16.200><c> have</c><00:03:16.319><c> a</c><00:03:16.480><c> vocabulary</c><00:03:17.040><c> of</c>

00:03:17.589 --> 00:03:17.599 align:start position:0%
tokenizer where you have a vocabulary of
 

00:03:17.599 --> 00:03:20.670 align:start position:0%
tokenizer where you have a vocabulary of
50,2<00:03:18.599><c> 57</c><00:03:19.319><c> possible</c>

00:03:20.670 --> 00:03:20.680 align:start position:0%
50,2 57 possible
 

00:03:20.680 --> 00:03:24.390 align:start position:0%
50,2 57 possible
tokens<00:03:21.680><c> and</c><00:03:22.239><c> the</c><00:03:22.720><c> context</c><00:03:23.280><c> size</c><00:03:24.040><c> is</c><00:03:24.159><c> going</c><00:03:24.319><c> to</c>

00:03:24.390 --> 00:03:24.400 align:start position:0%
tokens and the context size is going to
 

00:03:24.400 --> 00:03:27.350 align:start position:0%
tokens and the context size is going to
be<00:03:24.560><c> 1,24</c><00:03:25.440><c> tokens</c><00:03:26.200><c> so</c><00:03:26.360><c> in</c><00:03:26.480><c> the</c><00:03:26.680><c> in</c><00:03:27.080><c> in</c><00:03:27.239><c> the</c>

00:03:27.350 --> 00:03:27.360 align:start position:0%
be 1,24 tokens so in the in in the
 

00:03:27.360 --> 00:03:29.229 align:start position:0%
be 1,24 tokens so in the in in the
attention<00:03:27.840><c> layer</c><00:03:28.360><c> of</c><00:03:28.599><c> the</c><00:03:28.760><c> Transformer</c>

00:03:29.229 --> 00:03:29.239 align:start position:0%
attention layer of the Transformer
 

00:03:29.239 --> 00:03:30.470 align:start position:0%
attention layer of the Transformer
neural<00:03:29.480><c> network</c>

00:03:30.470 --> 00:03:30.480 align:start position:0%
neural network
 

00:03:30.480 --> 00:03:32.309 align:start position:0%
neural network
every<00:03:30.680><c> single</c><00:03:30.959><c> token</c><00:03:31.319><c> is</c><00:03:31.519><c> attending</c><00:03:32.000><c> to</c><00:03:32.159><c> the</c>

00:03:32.309 --> 00:03:32.319 align:start position:0%
every single token is attending to the
 

00:03:32.319 --> 00:03:34.070 align:start position:0%
every single token is attending to the
previous<00:03:32.640><c> tokens</c><00:03:32.920><c> in</c><00:03:33.040><c> the</c><00:03:33.159><c> sequence</c><00:03:33.840><c> and</c><00:03:33.920><c> it's</c>

00:03:34.070 --> 00:03:34.080 align:start position:0%
previous tokens in the sequence and it's
 

00:03:34.080 --> 00:03:37.910 align:start position:0%
previous tokens in the sequence and it's
going<00:03:34.200><c> to</c><00:03:34.280><c> see</c><00:03:34.599><c> up</c><00:03:34.760><c> to</c><00:03:35.360><c> 1,24</c><00:03:36.360><c> tokens</c><00:03:37.319><c> so</c><00:03:37.519><c> tokens</c>

00:03:37.910 --> 00:03:37.920 align:start position:0%
going to see up to 1,24 tokens so tokens
 

00:03:37.920 --> 00:03:40.670 align:start position:0%
going to see up to 1,24 tokens so tokens
are<00:03:38.159><c> this</c><00:03:38.400><c> like</c><00:03:38.599><c> fundamental</c><00:03:39.200><c> unit</c><00:03:40.200><c> um</c><00:03:40.480><c> the</c>

00:03:40.670 --> 00:03:40.680 align:start position:0%
are this like fundamental unit um the
 

00:03:40.680 --> 00:03:43.110 align:start position:0%
are this like fundamental unit um the
atom<00:03:41.319><c> of</c><00:03:41.840><c> uh</c><00:03:41.959><c> large</c><00:03:42.239><c> language</c><00:03:42.560><c> models</c><00:03:42.879><c> if</c><00:03:43.000><c> you</c>

00:03:43.110 --> 00:03:43.120 align:start position:0%
atom of uh large language models if you
 

00:03:43.120 --> 00:03:44.789 align:start position:0%
atom of uh large language models if you
will<00:03:43.640><c> and</c><00:03:43.840><c> everything</c><00:03:44.080><c> is</c><00:03:44.239><c> in</c><00:03:44.400><c> units</c><00:03:44.640><c> of</c>

00:03:44.789 --> 00:03:44.799 align:start position:0%
will and everything is in units of
 

00:03:44.799 --> 00:03:47.070 align:start position:0%
will and everything is in units of
tokens<00:03:45.239><c> everything</c><00:03:45.519><c> is</c><00:03:45.760><c> about</c><00:03:46.159><c> tokens</c><00:03:46.920><c> and</c>

00:03:47.070 --> 00:03:47.080 align:start position:0%
tokens everything is about tokens and
 

00:03:47.080 --> 00:03:48.350 align:start position:0%
tokens everything is about tokens and
tokenization<00:03:47.640><c> is</c><00:03:47.760><c> the</c><00:03:47.959><c> process</c><00:03:48.200><c> for</c>

00:03:48.350 --> 00:03:48.360 align:start position:0%
tokenization is the process for
 

00:03:48.360 --> 00:03:51.070 align:start position:0%
tokenization is the process for
translating<00:03:49.120><c> strings</c><00:03:49.720><c> or</c><00:03:50.000><c> text</c><00:03:50.680><c> into</c>

00:03:51.070 --> 00:03:51.080 align:start position:0%
translating strings or text into
 

00:03:51.080 --> 00:03:54.869 align:start position:0%
translating strings or text into
sequences<00:03:51.599><c> of</c><00:03:51.799><c> tokens</c><00:03:52.640><c> and</c><00:03:53.239><c> uh</c><00:03:53.360><c> vice</c><00:03:53.879><c> versa</c>

00:03:54.869 --> 00:03:54.879 align:start position:0%
sequences of tokens and uh vice versa
 

00:03:54.879 --> 00:03:56.869 align:start position:0%
sequences of tokens and uh vice versa
when<00:03:55.000><c> you</c><00:03:55.120><c> go</c><00:03:55.280><c> into</c><00:03:55.599><c> the</c><00:03:55.799><c> Llama</c><00:03:56.120><c> 2</c><00:03:56.360><c> paper</c><00:03:56.720><c> as</c>

00:03:56.869 --> 00:03:56.879 align:start position:0%
when you go into the Llama 2 paper as
 

00:03:56.879 --> 00:03:58.270 align:start position:0%
when you go into the Llama 2 paper as
well<00:03:57.200><c> I</c><00:03:57.280><c> can</c><00:03:57.400><c> show</c><00:03:57.599><c> you</c><00:03:57.720><c> that</c><00:03:57.840><c> when</c><00:03:57.920><c> you</c><00:03:58.000><c> search</c>

00:03:58.270 --> 00:03:58.280 align:start position:0%
well I can show you that when you search
 

00:03:58.280 --> 00:04:01.710 align:start position:0%
well I can show you that when you search
token<00:03:58.920><c> you're</c><00:03:59.120><c> going</c><00:03:59.280><c> to</c><00:03:59.519><c> get</c><00:03:59.680><c> get</c><00:03:59.840><c> 63</c><00:04:00.400><c> hits</c><00:04:01.120><c> um</c>

00:04:01.710 --> 00:04:01.720 align:start position:0%
token you're going to get get 63 hits um
 

00:04:01.720 --> 00:04:03.309 align:start position:0%
token you're going to get get 63 hits um
and<00:04:01.879><c> that's</c><00:04:02.040><c> because</c><00:04:02.280><c> tokens</c><00:04:02.720><c> are</c><00:04:03.079><c> again</c>

00:04:03.309 --> 00:04:03.319 align:start position:0%
and that's because tokens are again
 

00:04:03.319 --> 00:04:05.110 align:start position:0%
and that's because tokens are again
pervasive<00:04:04.280><c> so</c><00:04:04.439><c> here</c><00:04:04.599><c> they</c><00:04:04.720><c> mentioned</c><00:04:05.040><c> that</c>

00:04:05.110 --> 00:04:05.120 align:start position:0%
pervasive so here they mentioned that
 

00:04:05.120 --> 00:04:06.869 align:start position:0%
pervasive so here they mentioned that
they<00:04:05.239><c> trained</c><00:04:05.519><c> on</c><00:04:05.680><c> two</c><00:04:05.879><c> trillion</c><00:04:06.360><c> tokens</c><00:04:06.720><c> of</c>

00:04:06.869 --> 00:04:06.879 align:start position:0%
they trained on two trillion tokens of
 

00:04:06.879 --> 00:04:08.429 align:start position:0%
they trained on two trillion tokens of
data<00:04:07.280><c> and</c><00:04:07.400><c> so</c>

00:04:08.429 --> 00:04:08.439 align:start position:0%
data and so
 

00:04:08.439 --> 00:04:11.069 align:start position:0%
data and so
on<00:04:09.439><c> so</c><00:04:09.760><c> we're</c><00:04:09.920><c> going</c><00:04:10.040><c> to</c><00:04:10.200><c> build</c><00:04:10.480><c> our</c><00:04:10.640><c> own</c>

00:04:11.069 --> 00:04:11.079 align:start position:0%
on so we're going to build our own
 

00:04:11.079 --> 00:04:13.030 align:start position:0%
on so we're going to build our own
tokenizer<00:04:11.920><c> luckily</c><00:04:12.239><c> the</c><00:04:12.360><c> bite</c><00:04:12.560><c> be</c><00:04:12.720><c> encoding</c>

00:04:13.030 --> 00:04:13.040 align:start position:0%
tokenizer luckily the bite be encoding
 

00:04:13.040 --> 00:04:15.110 align:start position:0%
tokenizer luckily the bite be encoding
algorithm<00:04:13.560><c> is</c><00:04:13.720><c> not</c><00:04:14.200><c> uh</c><00:04:14.400><c> that</c><00:04:14.599><c> super</c>

00:04:15.110 --> 00:04:15.120 align:start position:0%
algorithm is not uh that super
 

00:04:15.120 --> 00:04:16.949 align:start position:0%
algorithm is not uh that super
complicated<00:04:15.959><c> and</c><00:04:16.079><c> we</c><00:04:16.199><c> can</c><00:04:16.359><c> build</c><00:04:16.560><c> it</c><00:04:16.799><c> from</c>

00:04:16.949 --> 00:04:16.959 align:start position:0%
complicated and we can build it from
 

00:04:16.959 --> 00:04:18.509 align:start position:0%
complicated and we can build it from
scratch<00:04:17.320><c> ourselves</c><00:04:17.759><c> and</c><00:04:17.880><c> we'll</c><00:04:18.040><c> see</c><00:04:18.199><c> exactly</c>

00:04:18.509 --> 00:04:18.519 align:start position:0%
scratch ourselves and we'll see exactly
 

00:04:18.519 --> 00:04:20.710 align:start position:0%
scratch ourselves and we'll see exactly
how<00:04:18.680><c> this</c><00:04:18.840><c> works</c><00:04:19.639><c> before</c><00:04:19.840><c> we</c><00:04:19.959><c> dive</c><00:04:20.160><c> into</c><00:04:20.400><c> code</c>

00:04:20.710 --> 00:04:20.720 align:start position:0%
how this works before we dive into code
 

00:04:20.720 --> 00:04:22.550 align:start position:0%
how this works before we dive into code
I'd<00:04:20.880><c> like</c><00:04:21.000><c> to</c><00:04:21.239><c> give</c><00:04:21.359><c> you</c><00:04:21.639><c> a</c><00:04:21.799><c> brief</c><00:04:22.120><c> Taste</c><00:04:22.440><c> of</c>

00:04:22.550 --> 00:04:22.560 align:start position:0%
I'd like to give you a brief Taste of
 

00:04:22.560 --> 00:04:24.110 align:start position:0%
I'd like to give you a brief Taste of
some<00:04:22.680><c> of</c><00:04:22.800><c> the</c><00:04:22.919><c> complexities</c><00:04:23.720><c> that</c><00:04:23.840><c> come</c><00:04:24.000><c> from</c>

00:04:24.110 --> 00:04:24.120 align:start position:0%
some of the complexities that come from
 

00:04:24.120 --> 00:04:26.110 align:start position:0%
some of the complexities that come from
the<00:04:24.360><c> tokenization</c><00:04:25.360><c> because</c><00:04:25.680><c> I</c><00:04:25.759><c> just</c><00:04:25.880><c> want</c><00:04:26.000><c> to</c>

00:04:26.110 --> 00:04:26.120 align:start position:0%
the tokenization because I just want to
 

00:04:26.120 --> 00:04:27.189 align:start position:0%
the tokenization because I just want to
make<00:04:26.240><c> sure</c><00:04:26.440><c> that</c><00:04:26.560><c> we</c><00:04:26.720><c> motivate</c><00:04:27.080><c> it</c>

00:04:27.189 --> 00:04:27.199 align:start position:0%
make sure that we motivate it
 

00:04:27.199 --> 00:04:29.469 align:start position:0%
make sure that we motivate it
sufficiently<00:04:27.720><c> for</c><00:04:28.040><c> why</c><00:04:28.240><c> we</c><00:04:28.400><c> are</c><00:04:29.000><c> doing</c><00:04:29.280><c> all</c>

00:04:29.469 --> 00:04:29.479 align:start position:0%
sufficiently for why we are doing all
 

00:04:29.479 --> 00:04:32.629 align:start position:0%
sufficiently for why we are doing all
this<00:04:29.720><c> and</c><00:04:29.840><c> why</c><00:04:29.960><c> this</c><00:04:30.039><c> is</c><00:04:30.160><c> so</c><00:04:30.759><c> gross</c><00:04:31.759><c> so</c>

00:04:32.629 --> 00:04:32.639 align:start position:0%
this and why this is so gross so
 

00:04:32.639 --> 00:04:34.189 align:start position:0%
this and why this is so gross so
tokenization<00:04:33.240><c> is</c><00:04:33.360><c> at</c><00:04:33.479><c> the</c><00:04:33.560><c> heart</c><00:04:33.720><c> of</c><00:04:33.880><c> a</c><00:04:33.960><c> lot</c><00:04:34.080><c> of</c>

00:04:34.189 --> 00:04:34.199 align:start position:0%
tokenization is at the heart of a lot of
 

00:04:34.199 --> 00:04:36.110 align:start position:0%
tokenization is at the heart of a lot of
weirdness<00:04:34.560><c> in</c><00:04:34.759><c> large</c><00:04:35.000><c> language</c><00:04:35.320><c> models</c><00:04:35.840><c> and</c><00:04:36.039><c> I</c>

00:04:36.110 --> 00:04:36.120 align:start position:0%
weirdness in large language models and I
 

00:04:36.120 --> 00:04:37.749 align:start position:0%
weirdness in large language models and I
would<00:04:36.320><c> advise</c><00:04:36.600><c> that</c><00:04:36.720><c> you</c><00:04:36.840><c> do</c><00:04:37.039><c> not</c><00:04:37.240><c> brush</c><00:04:37.520><c> it</c>

00:04:37.749 --> 00:04:37.759 align:start position:0%
would advise that you do not brush it
 

00:04:37.759 --> 00:04:40.590 align:start position:0%
would advise that you do not brush it
off<00:04:38.680><c> a</c><00:04:38.800><c> lot</c><00:04:38.919><c> of</c><00:04:39.039><c> the</c><00:04:39.199><c> issues</c><00:04:39.639><c> that</c><00:04:40.160><c> may</c><00:04:40.400><c> look</c>

00:04:40.590 --> 00:04:40.600 align:start position:0%
off a lot of the issues that may look
 

00:04:40.600 --> 00:04:42.310 align:start position:0%
off a lot of the issues that may look
like<00:04:40.880><c> just</c><00:04:41.080><c> issues</c><00:04:41.440><c> with</c><00:04:41.600><c> the</c><00:04:41.720><c> new</c><00:04:42.000><c> network</c>

00:04:42.310 --> 00:04:42.320 align:start position:0%
like just issues with the new network
 

00:04:42.320 --> 00:04:44.510 align:start position:0%
like just issues with the new network
architecture<00:04:43.000><c> or</c><00:04:43.560><c> the</c><00:04:43.639><c> large</c><00:04:43.919><c> language</c><00:04:44.280><c> model</c>

00:04:44.510 --> 00:04:44.520 align:start position:0%
architecture or the large language model
 

00:04:44.520 --> 00:04:46.590 align:start position:0%
architecture or the large language model
itself<00:04:45.240><c> are</c><00:04:45.440><c> actually</c><00:04:45.840><c> issues</c><00:04:46.320><c> with</c><00:04:46.479><c> the</c>

00:04:46.590 --> 00:04:46.600 align:start position:0%
itself are actually issues with the
 

00:04:46.600 --> 00:04:49.150 align:start position:0%
itself are actually issues with the
tokenization<00:04:47.560><c> and</c><00:04:47.759><c> fundamentally</c><00:04:48.280><c> Trace</c><00:04:49.000><c> uh</c>

00:04:49.150 --> 00:04:49.160 align:start position:0%
tokenization and fundamentally Trace uh
 

00:04:49.160 --> 00:04:51.749 align:start position:0%
tokenization and fundamentally Trace uh
back<00:04:49.320><c> to</c><00:04:49.520><c> it</c><00:04:50.400><c> so</c><00:04:50.919><c> if</c><00:04:51.000><c> you've</c><00:04:51.199><c> noticed</c><00:04:51.560><c> any</c>

00:04:51.749 --> 00:04:51.759 align:start position:0%
back to it so if you've noticed any
 

00:04:51.759 --> 00:04:54.230 align:start position:0%
back to it so if you've noticed any
issues<00:04:52.199><c> with</c><00:04:52.520><c> large</c><00:04:52.800><c> language</c><00:04:53.160><c> models</c><00:04:53.600><c> can't</c>

00:04:54.230 --> 00:04:54.240 align:start position:0%
issues with large language models can't
 

00:04:54.240 --> 00:04:56.150 align:start position:0%
issues with large language models can't
you<00:04:54.360><c> know</c><00:04:54.520><c> not</c><00:04:54.720><c> able</c><00:04:54.919><c> to</c><00:04:55.039><c> do</c><00:04:55.320><c> spelling</c><00:04:55.759><c> tasks</c>

00:04:56.150 --> 00:04:56.160 align:start position:0%
you know not able to do spelling tasks
 

00:04:56.160 --> 00:04:57.950 align:start position:0%
you know not able to do spelling tasks
very<00:04:56.320><c> easily</c><00:04:57.000><c> that's</c><00:04:57.199><c> usually</c><00:04:57.479><c> due</c><00:04:57.680><c> to</c>

00:04:57.950 --> 00:04:57.960 align:start position:0%
very easily that's usually due to
 

00:04:57.960 --> 00:05:00.150 align:start position:0%
very easily that's usually due to
tokenization<00:04:58.960><c> simple</c><00:04:59.240><c> string</c><00:04:59.680><c> processing</c>

00:05:00.150 --> 00:05:00.160 align:start position:0%
tokenization simple string processing
 

00:05:00.160 --> 00:05:02.270 align:start position:0%
tokenization simple string processing
can<00:05:00.320><c> be</c><00:05:00.880><c> difficult</c><00:05:01.120><c> for</c><00:05:01.360><c> the</c><00:05:01.680><c> large</c><00:05:02.000><c> language</c>

00:05:02.270 --> 00:05:02.280 align:start position:0%
can be difficult for the large language
 

00:05:02.280 --> 00:05:03.590 align:start position:0%
can be difficult for the large language
model<00:05:02.560><c> to</c><00:05:02.759><c> perform</c>

00:05:03.590 --> 00:05:03.600 align:start position:0%
model to perform
 

00:05:03.600 --> 00:05:06.070 align:start position:0%
model to perform
natively<00:05:04.600><c> uh</c><00:05:04.759><c> non-english</c><00:05:05.400><c> languages</c><00:05:05.880><c> can</c>

00:05:06.070 --> 00:05:06.080 align:start position:0%
natively uh non-english languages can
 

00:05:06.080 --> 00:05:08.230 align:start position:0%
natively uh non-english languages can
work<00:05:06.360><c> much</c><00:05:06.560><c> worse</c><00:05:07.120><c> and</c><00:05:07.280><c> to</c><00:05:07.560><c> a</c><00:05:07.680><c> large</c><00:05:07.919><c> extent</c>

00:05:08.230 --> 00:05:08.240 align:start position:0%
work much worse and to a large extent
 

00:05:08.240 --> 00:05:09.430 align:start position:0%
work much worse and to a large extent
this<00:05:08.360><c> is</c><00:05:08.479><c> due</c><00:05:08.639><c> to</c>

00:05:09.430 --> 00:05:09.440 align:start position:0%
this is due to
 

00:05:09.440 --> 00:05:11.749 align:start position:0%
this is due to
tokenization<00:05:10.440><c> sometimes</c><00:05:10.880><c> llms</c><00:05:11.320><c> are</c><00:05:11.479><c> bad</c><00:05:11.639><c> at</c>

00:05:11.749 --> 00:05:11.759 align:start position:0%
tokenization sometimes llms are bad at
 

00:05:11.759 --> 00:05:14.070 align:start position:0%
tokenization sometimes llms are bad at
simple<00:05:12.039><c> arithmetic</c><00:05:12.880><c> also</c><00:05:13.199><c> can</c><00:05:13.440><c> trace</c><00:05:13.919><c> be</c>

00:05:14.070 --> 00:05:14.080 align:start position:0%
simple arithmetic also can trace be
 

00:05:14.080 --> 00:05:15.469 align:start position:0%
simple arithmetic also can trace be
traced<00:05:14.520><c> to</c>

00:05:15.469 --> 00:05:15.479 align:start position:0%
traced to
 

00:05:15.479 --> 00:05:17.749 align:start position:0%
traced to
tokenization<00:05:16.479><c> uh</c><00:05:16.600><c> gbt2</c><00:05:17.160><c> specifically</c><00:05:17.639><c> would</c>

00:05:17.749 --> 00:05:17.759 align:start position:0%
tokenization uh gbt2 specifically would
 

00:05:17.759 --> 00:05:19.629 align:start position:0%
tokenization uh gbt2 specifically would
have<00:05:17.960><c> had</c><00:05:18.240><c> quite</c><00:05:18.400><c> a</c><00:05:18.479><c> bit</c><00:05:18.639><c> more</c><00:05:18.840><c> issues</c><00:05:19.400><c> with</c>

00:05:19.629 --> 00:05:19.639 align:start position:0%
have had quite a bit more issues with
 

00:05:19.639 --> 00:05:22.150 align:start position:0%
have had quite a bit more issues with
python<00:05:20.080><c> than</c><00:05:20.680><c> uh</c><00:05:20.800><c> future</c><00:05:21.120><c> versions</c><00:05:21.520><c> of</c><00:05:21.680><c> it</c><00:05:22.000><c> due</c>

00:05:22.150 --> 00:05:22.160 align:start position:0%
python than uh future versions of it due
 

00:05:22.160 --> 00:05:24.390 align:start position:0%
python than uh future versions of it due
to<00:05:22.720><c> tokenization</c><00:05:23.720><c> there's</c><00:05:23.880><c> a</c><00:05:24.000><c> lot</c><00:05:24.120><c> of</c><00:05:24.240><c> other</c>

00:05:24.390 --> 00:05:24.400 align:start position:0%
to tokenization there's a lot of other
 

00:05:24.400 --> 00:05:25.870 align:start position:0%
to tokenization there's a lot of other
issues<00:05:24.720><c> maybe</c><00:05:24.919><c> you've</c><00:05:25.039><c> seen</c><00:05:25.240><c> weird</c><00:05:25.479><c> warnings</c>

00:05:25.870 --> 00:05:25.880 align:start position:0%
issues maybe you've seen weird warnings
 

00:05:25.880 --> 00:05:27.430 align:start position:0%
issues maybe you've seen weird warnings
about<00:05:26.039><c> a</c><00:05:26.160><c> trailing</c><00:05:26.560><c> whites</c><00:05:26.800><c> space</c><00:05:27.120><c> this</c><00:05:27.240><c> is</c><00:05:27.319><c> a</c>

00:05:27.430 --> 00:05:27.440 align:start position:0%
about a trailing whites space this is a
 

00:05:27.440 --> 00:05:30.670 align:start position:0%
about a trailing whites space this is a
tokenization<00:05:28.360><c> issue</c><00:05:29.360><c> um</c>

00:05:30.670 --> 00:05:30.680 align:start position:0%
tokenization issue um
 

00:05:30.680 --> 00:05:33.510 align:start position:0%
tokenization issue um
if<00:05:30.759><c> you</c><00:05:30.960><c> had</c><00:05:31.199><c> asked</c><00:05:31.600><c> GPT</c><00:05:32.160><c> earlier</c><00:05:32.800><c> about</c><00:05:33.160><c> solid</c>

00:05:33.510 --> 00:05:33.520 align:start position:0%
if you had asked GPT earlier about solid
 

00:05:33.520 --> 00:05:35.230 align:start position:0%
if you had asked GPT earlier about solid
gold<00:05:33.759><c> Magikarp</c><00:05:34.280><c> and</c><00:05:34.440><c> what</c><00:05:34.520><c> it</c><00:05:34.680><c> is</c><00:05:35.000><c> you</c><00:05:35.080><c> would</c>

00:05:35.230 --> 00:05:35.240 align:start position:0%
gold Magikarp and what it is you would
 

00:05:35.240 --> 00:05:37.510 align:start position:0%
gold Magikarp and what it is you would
see<00:05:35.440><c> the</c><00:05:35.520><c> llm</c><00:05:35.960><c> go</c><00:05:36.199><c> totally</c><00:05:36.520><c> crazy</c><00:05:37.199><c> and</c><00:05:37.360><c> it</c>

00:05:37.510 --> 00:05:37.520 align:start position:0%
see the llm go totally crazy and it
 

00:05:37.520 --> 00:05:39.550 align:start position:0%
see the llm go totally crazy and it
would<00:05:37.720><c> start</c><00:05:38.240><c> going</c><00:05:38.520><c> off</c><00:05:38.800><c> about</c><00:05:39.039><c> a</c><00:05:39.160><c> completely</c>

00:05:39.550 --> 00:05:39.560 align:start position:0%
would start going off about a completely
 

00:05:39.560 --> 00:05:41.909 align:start position:0%
would start going off about a completely
unrelated<00:05:40.120><c> tangent</c><00:05:40.560><c> topic</c><00:05:41.560><c> maybe</c><00:05:41.759><c> you've</c>

00:05:41.909 --> 00:05:41.919 align:start position:0%
unrelated tangent topic maybe you've
 

00:05:41.919 --> 00:05:43.710 align:start position:0%
unrelated tangent topic maybe you've
been<00:05:42.039><c> told</c><00:05:42.240><c> to</c><00:05:42.319><c> use</c><00:05:42.520><c> yl</c><00:05:42.960><c> over</c><00:05:43.160><c> Json</c><00:05:43.600><c> in</c>

00:05:43.710 --> 00:05:43.720 align:start position:0%
been told to use yl over Json in
 

00:05:43.720 --> 00:05:45.430 align:start position:0%
been told to use yl over Json in
structure<00:05:44.160><c> data</c><00:05:44.720><c> all</c><00:05:44.840><c> of</c><00:05:44.960><c> that</c><00:05:45.080><c> has</c><00:05:45.199><c> to</c><00:05:45.319><c> do</c>

00:05:45.430 --> 00:05:45.440 align:start position:0%
structure data all of that has to do
 

00:05:45.440 --> 00:05:47.629 align:start position:0%
structure data all of that has to do
with<00:05:46.039><c> tokenization</c><00:05:47.039><c> so</c><00:05:47.319><c> basically</c>

00:05:47.629 --> 00:05:47.639 align:start position:0%
with tokenization so basically
 

00:05:47.639 --> 00:05:49.390 align:start position:0%
with tokenization so basically
tokenization<00:05:48.199><c> is</c><00:05:48.360><c> at</c><00:05:48.479><c> the</c><00:05:48.639><c> heart</c><00:05:48.880><c> of</c><00:05:49.039><c> many</c>

00:05:49.390 --> 00:05:49.400 align:start position:0%
tokenization is at the heart of many
 

00:05:49.400 --> 00:05:51.870 align:start position:0%
tokenization is at the heart of many
issues<00:05:50.400><c> I</c><00:05:50.479><c> will</c><00:05:50.639><c> look</c><00:05:50.919><c> back</c><00:05:51.120><c> around</c><00:05:51.440><c> to</c><00:05:51.680><c> these</c>

00:05:51.870 --> 00:05:51.880 align:start position:0%
issues I will look back around to these
 

00:05:51.880 --> 00:05:54.070 align:start position:0%
issues I will look back around to these
at<00:05:52.000><c> the</c><00:05:52.080><c> end</c><00:05:52.199><c> of</c><00:05:52.319><c> the</c><00:05:52.440><c> video</c><00:05:53.120><c> but</c><00:05:53.280><c> for</c><00:05:53.440><c> now</c><00:05:53.960><c> let</c>

00:05:54.070 --> 00:05:54.080 align:start position:0%
at the end of the video but for now let
 

00:05:54.080 --> 00:05:56.909 align:start position:0%
at the end of the video but for now let
me<00:05:54.360><c> just</c><00:05:54.840><c> um</c><00:05:55.400><c> skip</c><00:05:55.680><c> over</c><00:05:55.840><c> it</c><00:05:55.960><c> a</c><00:05:56.080><c> little</c><00:05:56.240><c> bit</c><00:05:56.800><c> and</c>

00:05:56.909 --> 00:05:56.919 align:start position:0%
me just um skip over it a little bit and
 

00:05:56.919 --> 00:05:59.950 align:start position:0%
me just um skip over it a little bit and
let's<00:05:57.120><c> go</c><00:05:57.280><c> to</c><00:05:57.520><c> this</c><00:05:57.960><c> web</c><00:05:58.199><c> app</c><00:05:59.120><c> um</c><00:05:59.600><c> the</c><00:05:59.720><c> Tik</c>

00:05:59.950 --> 00:05:59.960 align:start position:0%
let's go to this web app um the Tik
 

00:05:59.960 --> 00:06:02.909 align:start position:0%
let's go to this web app um the Tik
tokenizer<00:06:00.560><c> bell.app</c><00:06:01.280><c> so</c><00:06:02.240><c> I</c><00:06:02.319><c> have</c><00:06:02.440><c> it</c><00:06:02.520><c> loaded</c>

00:06:02.909 --> 00:06:02.919 align:start position:0%
tokenizer bell.app so I have it loaded
 

00:06:02.919 --> 00:06:04.670 align:start position:0%
tokenizer bell.app so I have it loaded
here<00:06:03.520><c> and</c><00:06:03.639><c> what</c><00:06:03.720><c> I</c><00:06:03.840><c> like</c><00:06:04.000><c> about</c><00:06:04.160><c> this</c><00:06:04.280><c> web</c><00:06:04.479><c> app</c>

00:06:04.670 --> 00:06:04.680 align:start position:0%
here and what I like about this web app
 

00:06:04.680 --> 00:06:06.550 align:start position:0%
here and what I like about this web app
is<00:06:04.800><c> that</c><00:06:04.960><c> tokenization</c><00:06:05.560><c> is</c><00:06:05.680><c> running</c><00:06:06.280><c> a</c><00:06:06.400><c> sort</c>

00:06:06.550 --> 00:06:06.560 align:start position:0%
is that tokenization is running a sort
 

00:06:06.560 --> 00:06:09.510 align:start position:0%
is that tokenization is running a sort
of<00:06:06.960><c> live</c><00:06:07.440><c> in</c><00:06:07.599><c> your</c><00:06:07.759><c> browser</c><00:06:08.120><c> in</c><00:06:08.319><c> JavaScript</c><00:06:09.280><c> so</c>

00:06:09.510 --> 00:06:09.520 align:start position:0%
of live in your browser in JavaScript so
 

00:06:09.520 --> 00:06:11.950 align:start position:0%
of live in your browser in JavaScript so
you<00:06:09.680><c> can</c><00:06:09.960><c> just</c><00:06:10.120><c> type</c><00:06:10.319><c> here</c><00:06:10.599><c> stuff</c><00:06:10.880><c> hello</c><00:06:11.199><c> world</c>

00:06:11.950 --> 00:06:11.960 align:start position:0%
you can just type here stuff hello world
 

00:06:11.960 --> 00:06:14.189 align:start position:0%
you can just type here stuff hello world
and<00:06:12.120><c> the</c><00:06:12.280><c> whole</c><00:06:12.520><c> string</c>

00:06:14.189 --> 00:06:14.199 align:start position:0%
and the whole string
 

00:06:14.199 --> 00:06:18.469 align:start position:0%
and the whole string
rokenes<00:06:15.639><c> so</c><00:06:16.639><c> here</c><00:06:16.840><c> what</c><00:06:16.960><c> we</c><00:06:17.120><c> see</c><00:06:17.520><c> on</c><00:06:18.160><c> uh</c><00:06:18.360><c> the</c>

00:06:18.469 --> 00:06:18.479 align:start position:0%
rokenes so here what we see on uh the
 

00:06:18.479 --> 00:06:20.350 align:start position:0%
rokenes so here what we see on uh the
left<00:06:18.720><c> is</c><00:06:18.840><c> a</c><00:06:18.960><c> string</c><00:06:19.199><c> that</c><00:06:19.280><c> you</c><00:06:19.400><c> put</c><00:06:19.560><c> in</c><00:06:20.080><c> on</c><00:06:20.199><c> the</c>

00:06:20.350 --> 00:06:20.360 align:start position:0%
left is a string that you put in on the
 

00:06:20.360 --> 00:06:22.189 align:start position:0%
left is a string that you put in on the
right<00:06:20.599><c> we're</c><00:06:20.759><c> currently</c><00:06:21.080><c> using</c><00:06:21.280><c> the</c><00:06:21.400><c> gpt2</c>

00:06:22.189 --> 00:06:22.199 align:start position:0%
right we're currently using the gpt2
 

00:06:22.199 --> 00:06:24.550 align:start position:0%
right we're currently using the gpt2
tokenizer<00:06:23.199><c> we</c><00:06:23.440><c> see</c><00:06:23.599><c> that</c><00:06:23.800><c> this</c><00:06:23.960><c> string</c><00:06:24.319><c> that</c><00:06:24.440><c> I</c>

00:06:24.550 --> 00:06:24.560 align:start position:0%
tokenizer we see that this string that I
 

00:06:24.560 --> 00:06:27.070 align:start position:0%
tokenizer we see that this string that I
pasted<00:06:25.000><c> here</c><00:06:25.680><c> is</c><00:06:25.919><c> currently</c><00:06:26.319><c> tokenizing</c><00:06:26.840><c> into</c>

00:06:27.070 --> 00:06:27.080 align:start position:0%
pasted here is currently tokenizing into
 

00:06:27.080 --> 00:06:30.510 align:start position:0%
pasted here is currently tokenizing into
300<00:06:27.680><c> tokens</c><00:06:28.680><c> and</c><00:06:28.840><c> here</c><00:06:29.000><c> they</c><00:06:29.120><c> are</c><00:06:29.720><c> sort</c><00:06:29.919><c> of</c><00:06:30.400><c> uh</c>

00:06:30.510 --> 00:06:30.520 align:start position:0%
300 tokens and here they are sort of uh
 

00:06:30.520 --> 00:06:32.670 align:start position:0%
300 tokens and here they are sort of uh
shown<00:06:31.039><c> explicitly</c><00:06:31.639><c> in</c><00:06:31.840><c> different</c><00:06:32.120><c> colors</c><00:06:32.479><c> for</c>

00:06:32.670 --> 00:06:32.680 align:start position:0%
shown explicitly in different colors for
 

00:06:32.680 --> 00:06:35.510 align:start position:0%
shown explicitly in different colors for
every<00:06:32.880><c> single</c><00:06:33.319><c> token</c><00:06:34.319><c> so</c><00:06:34.479><c> for</c><00:06:34.680><c> example</c><00:06:35.360><c> uh</c>

00:06:35.510 --> 00:06:35.520 align:start position:0%
every single token so for example uh
 

00:06:35.520 --> 00:06:38.870 align:start position:0%
every single token so for example uh
this<00:06:35.919><c> word</c><00:06:36.240><c> tokenization</c><00:06:37.240><c> became</c><00:06:37.639><c> two</c><00:06:37.880><c> tokens</c>

00:06:38.870 --> 00:06:38.880 align:start position:0%
this word tokenization became two tokens
 

00:06:38.880 --> 00:06:40.710 align:start position:0%
this word tokenization became two tokens
the<00:06:39.080><c> token</c>

00:06:40.710 --> 00:06:40.720 align:start position:0%
the token
 

00:06:40.720 --> 00:06:43.990 align:start position:0%
the token
3,642<00:06:41.720><c> and</c>

00:06:43.990 --> 00:06:44.000 align:start position:0%
 
 

00:06:44.000 --> 00:06:50.150 align:start position:0%
 
1,634<00:06:45.000><c> the</c><00:06:45.440><c> token</c><00:06:46.440><c> um</c><00:06:47.160><c> space</c><00:06:47.680><c> is</c><00:06:48.280><c> is</c><00:06:48.440><c> token</c><00:06:49.160><c> 318</c>

00:06:50.150 --> 00:06:50.160 align:start position:0%
1,634 the token um space is is token 318
 

00:06:50.160 --> 00:06:51.909 align:start position:0%
1,634 the token um space is is token 318
so<00:06:50.319><c> be</c><00:06:50.479><c> careful</c><00:06:50.840><c> on</c><00:06:50.960><c> the</c><00:06:51.080><c> bottom</c><00:06:51.319><c> you</c><00:06:51.440><c> can</c><00:06:51.599><c> show</c>

00:06:51.909 --> 00:06:51.919 align:start position:0%
so be careful on the bottom you can show
 

00:06:51.919 --> 00:06:54.589 align:start position:0%
so be careful on the bottom you can show
white<00:06:52.280><c> space</c><00:06:53.280><c> and</c><00:06:53.880><c> keep</c><00:06:54.039><c> in</c><00:06:54.160><c> mind</c><00:06:54.360><c> that</c><00:06:54.479><c> there</c>

00:06:54.589 --> 00:06:54.599 align:start position:0%
white space and keep in mind that there
 

00:06:54.599 --> 00:06:57.350 align:start position:0%
white space and keep in mind that there
are<00:06:54.880><c> spaces</c><00:06:55.639><c> and</c><00:06:56.080><c> uh</c><00:06:56.199><c> sln</c><00:06:56.879><c> new</c><00:06:57.120><c> line</c>

00:06:57.350 --> 00:06:57.360 align:start position:0%
are spaces and uh sln new line
 

00:06:57.360 --> 00:06:59.710 align:start position:0%
are spaces and uh sln new line
characters<00:06:57.800><c> in</c><00:06:58.000><c> here</c><00:06:58.599><c> but</c><00:06:58.759><c> you</c><00:06:58.879><c> can</c><00:06:59.400><c> hide</c><00:06:59.599><c> them</c>

00:06:59.710 --> 00:06:59.720 align:start position:0%
characters in here but you can hide them
 

00:06:59.720 --> 00:07:01.589 align:start position:0%
characters in here but you can hide them
for

00:07:01.589 --> 00:07:01.599 align:start position:0%
for
 

00:07:01.599 --> 00:07:05.990 align:start position:0%
for
clarity<00:07:02.599><c> the</c><00:07:02.759><c> token</c><00:07:03.199><c> space</c><00:07:03.639><c> at</c><00:07:04.240><c> is</c><00:07:04.440><c> token</c><00:07:05.000><c> 379</c>

00:07:05.990 --> 00:07:06.000 align:start position:0%
clarity the token space at is token 379
 

00:07:06.000 --> 00:07:11.070 align:start position:0%
clarity the token space at is token 379
the<00:07:06.160><c> to</c><00:07:06.520><c> the</c><00:07:06.639><c> Token</c><00:07:07.120><c> space</c><00:07:07.680><c> the</c><00:07:08.479><c> is</c><00:07:09.039><c> 262</c><00:07:09.960><c> Etc</c><00:07:10.960><c> so</c>

00:07:11.070 --> 00:07:11.080 align:start position:0%
the to the Token space the is 262 Etc so
 

00:07:11.080 --> 00:07:12.950 align:start position:0%
the to the Token space the is 262 Etc so
you<00:07:11.199><c> notice</c><00:07:11.520><c> here</c><00:07:11.639><c> that</c><00:07:11.800><c> the</c><00:07:11.960><c> space</c><00:07:12.280><c> is</c><00:07:12.520><c> part</c>

00:07:12.950 --> 00:07:12.960 align:start position:0%
you notice here that the space is part
 

00:07:12.960 --> 00:07:15.950 align:start position:0%
you notice here that the space is part
of<00:07:13.280><c> that</c><00:07:13.840><c> uh</c><00:07:14.240><c> token</c>

00:07:15.950 --> 00:07:15.960 align:start position:0%
of that uh token
 

00:07:15.960 --> 00:07:18.629 align:start position:0%
of that uh token
chunk<00:07:16.960><c> now</c><00:07:17.440><c> so</c><00:07:17.639><c> this</c><00:07:17.720><c> is</c><00:07:17.840><c> kind</c><00:07:17.960><c> of</c><00:07:18.080><c> like</c><00:07:18.319><c> how</c>

00:07:18.629 --> 00:07:18.639 align:start position:0%
chunk now so this is kind of like how
 

00:07:18.639 --> 00:07:21.150 align:start position:0%
chunk now so this is kind of like how
our<00:07:18.919><c> English</c><00:07:19.360><c> sentence</c><00:07:19.759><c> broke</c><00:07:20.039><c> up</c><00:07:20.560><c> and</c><00:07:20.919><c> that</c>

00:07:21.150 --> 00:07:21.160 align:start position:0%
our English sentence broke up and that
 

00:07:21.160 --> 00:07:24.029 align:start position:0%
our English sentence broke up and that
seems<00:07:21.520><c> all</c><00:07:21.759><c> well</c><00:07:21.919><c> and</c><00:07:22.120><c> good</c><00:07:23.120><c> now</c><00:07:23.479><c> now</c><00:07:23.680><c> here</c><00:07:23.919><c> I</c>

00:07:24.029 --> 00:07:24.039 align:start position:0%
seems all well and good now now here I
 

00:07:24.039 --> 00:07:26.909 align:start position:0%
seems all well and good now now here I
put<00:07:24.199><c> in</c><00:07:24.360><c> some</c><00:07:24.800><c> arithmetic</c><00:07:25.800><c> so</c><00:07:25.919><c> we</c><00:07:26.039><c> see</c><00:07:26.360><c> that</c><00:07:26.800><c> uh</c>

00:07:26.909 --> 00:07:26.919 align:start position:0%
put in some arithmetic so we see that uh
 

00:07:26.919 --> 00:07:31.790 align:start position:0%
put in some arithmetic so we see that uh
the<00:07:27.039><c> token</c><00:07:27.639><c> 127</c><00:07:28.639><c> Plus</c><00:07:29.800><c> and</c><00:07:29.960><c> then</c><00:07:30.560><c> token</c><00:07:31.039><c> six</c>

00:07:31.790 --> 00:07:31.800 align:start position:0%
the token 127 Plus and then token six
 

00:07:31.800 --> 00:07:34.230 align:start position:0%
the token 127 Plus and then token six
space<00:07:32.120><c> 6</c><00:07:32.479><c> followed</c><00:07:32.800><c> by</c><00:07:32.960><c> 77</c><00:07:33.960><c> so</c><00:07:34.080><c> what's</c>

00:07:34.230 --> 00:07:34.240 align:start position:0%
space 6 followed by 77 so what's
 

00:07:34.240 --> 00:07:36.629 align:start position:0%
space 6 followed by 77 so what's
happening<00:07:34.520><c> here</c><00:07:34.639><c> is</c><00:07:34.759><c> that</c><00:07:34.879><c> 127</c><00:07:35.759><c> is</c><00:07:35.879><c> feeding</c><00:07:36.280><c> in</c>

00:07:36.629 --> 00:07:36.639 align:start position:0%
happening here is that 127 is feeding in
 

00:07:36.639 --> 00:07:38.150 align:start position:0%
happening here is that 127 is feeding in
as<00:07:36.759><c> a</c><00:07:36.879><c> single</c><00:07:37.199><c> token</c><00:07:37.599><c> into</c><00:07:37.800><c> the</c><00:07:37.919><c> large</c>

00:07:38.150 --> 00:07:38.160 align:start position:0%
as a single token into the large
 

00:07:38.160 --> 00:07:42.670 align:start position:0%
as a single token into the large
language<00:07:38.479><c> model</c><00:07:39.440><c> but</c><00:07:39.879><c> the</c><00:07:40.560><c> um</c><00:07:41.000><c> number</c><00:07:41.680><c> 677</c>

00:07:42.670 --> 00:07:42.680 align:start position:0%
language model but the um number 677
 

00:07:42.680 --> 00:07:44.830 align:start position:0%
language model but the um number 677
will<00:07:42.919><c> actually</c><00:07:43.160><c> feed</c><00:07:43.440><c> in</c><00:07:43.639><c> as</c><00:07:43.879><c> two</c><00:07:44.159><c> separate</c>

00:07:44.830 --> 00:07:44.840 align:start position:0%
will actually feed in as two separate
 

00:07:44.840 --> 00:07:46.990 align:start position:0%
will actually feed in as two separate
tokens<00:07:45.840><c> and</c><00:07:45.919><c> so</c><00:07:46.080><c> the</c><00:07:46.159><c> large</c><00:07:46.440><c> language</c><00:07:46.759><c> model</c>

00:07:46.990 --> 00:07:47.000 align:start position:0%
tokens and so the large language model
 

00:07:47.000 --> 00:07:50.710 align:start position:0%
tokens and so the large language model
has<00:07:47.159><c> to</c><00:07:48.159><c> sort</c><00:07:48.360><c> of</c><00:07:48.879><c> um</c><00:07:49.680><c> take</c><00:07:49.919><c> account</c><00:07:50.199><c> of</c><00:07:50.400><c> that</c>

00:07:50.710 --> 00:07:50.720 align:start position:0%
has to sort of um take account of that
 

00:07:50.720 --> 00:07:53.869 align:start position:0%
has to sort of um take account of that
and<00:07:50.960><c> process</c><00:07:51.240><c> it</c><00:07:51.400><c> correctly</c><00:07:52.199><c> in</c><00:07:52.400><c> its</c><00:07:52.879><c> Network</c>

00:07:53.869 --> 00:07:53.879 align:start position:0%
and process it correctly in its Network
 

00:07:53.879 --> 00:07:56.189 align:start position:0%
and process it correctly in its Network
and<00:07:54.000><c> see</c><00:07:54.319><c> here</c><00:07:54.520><c> 804</c><00:07:55.400><c> will</c><00:07:55.520><c> be</c><00:07:55.639><c> broken</c><00:07:55.919><c> up</c><00:07:56.039><c> into</c>

00:07:56.189 --> 00:07:56.199 align:start position:0%
and see here 804 will be broken up into
 

00:07:56.199 --> 00:07:57.950 align:start position:0%
and see here 804 will be broken up into
two<00:07:56.400><c> tokens</c><00:07:57.039><c> and</c><00:07:57.159><c> it's</c><00:07:57.199><c> is</c><00:07:57.319><c> all</c><00:07:57.479><c> completely</c>

00:07:57.950 --> 00:07:57.960 align:start position:0%
two tokens and it's is all completely
 

00:07:57.960 --> 00:07:59.790 align:start position:0%
two tokens and it's is all completely
arbitrary<00:07:58.960><c> and</c><00:07:59.080><c> here</c><00:07:59.319><c> I</c><00:07:59.400><c> have</c><00:07:59.520><c> another</c>

00:07:59.790 --> 00:07:59.800 align:start position:0%
arbitrary and here I have another
 

00:07:59.800 --> 00:08:02.029 align:start position:0%
arbitrary and here I have another
example<00:08:00.240><c> of</c><00:08:00.440><c> four-digit</c><00:08:00.840><c> numbers</c><00:08:01.680><c> and</c><00:08:01.879><c> they</c>

00:08:02.029 --> 00:08:02.039 align:start position:0%
example of four-digit numbers and they
 

00:08:02.039 --> 00:08:03.909 align:start position:0%
example of four-digit numbers and they
break<00:08:02.280><c> up</c><00:08:02.639><c> in</c><00:08:02.759><c> a</c><00:08:02.919><c> way</c><00:08:03.080><c> that</c><00:08:03.240><c> they</c><00:08:03.360><c> break</c><00:08:03.599><c> up</c><00:08:03.840><c> and</c>

00:08:03.909 --> 00:08:03.919 align:start position:0%
break up in a way that they break up and
 

00:08:03.919 --> 00:08:05.270 align:start position:0%
break up in a way that they break up and
it's<00:08:04.080><c> totally</c><00:08:04.319><c> arbitrary</c><00:08:04.960><c> sometimes</c><00:08:05.120><c> you</c>

00:08:05.270 --> 00:08:05.280 align:start position:0%
it's totally arbitrary sometimes you
 

00:08:05.280 --> 00:08:08.350 align:start position:0%
it's totally arbitrary sometimes you
have<00:08:05.800><c> um</c><00:08:06.240><c> multiple</c><00:08:06.639><c> digits</c><00:08:07.280><c> single</c><00:08:07.560><c> token</c>

00:08:08.350 --> 00:08:08.360 align:start position:0%
have um multiple digits single token
 

00:08:08.360 --> 00:08:10.350 align:start position:0%
have um multiple digits single token
sometimes<00:08:08.560><c> you</c><00:08:08.720><c> have</c><00:08:09.000><c> individual</c><00:08:09.520><c> digits</c><00:08:10.080><c> as</c>

00:08:10.350 --> 00:08:10.360 align:start position:0%
sometimes you have individual digits as
 

00:08:10.360 --> 00:08:12.230 align:start position:0%
sometimes you have individual digits as
many<00:08:10.639><c> tokens</c><00:08:11.319><c> and</c><00:08:11.400><c> it's</c><00:08:11.520><c> all</c><00:08:11.720><c> kind</c><00:08:11.800><c> of</c><00:08:12.039><c> pretty</c>

00:08:12.230 --> 00:08:12.240 align:start position:0%
many tokens and it's all kind of pretty
 

00:08:12.240 --> 00:08:14.670 align:start position:0%
many tokens and it's all kind of pretty
arbitrary<00:08:12.720><c> and</c><00:08:12.840><c> coming</c><00:08:13.039><c> out</c><00:08:13.159><c> of</c><00:08:13.280><c> the</c>

00:08:14.670 --> 00:08:14.680 align:start position:0%
arbitrary and coming out of the
 

00:08:14.680 --> 00:08:17.469 align:start position:0%
arbitrary and coming out of the
tokenizer<00:08:15.680><c> here's</c><00:08:15.919><c> another</c><00:08:16.199><c> example</c><00:08:17.199><c> we</c><00:08:17.319><c> have</c>

00:08:17.469 --> 00:08:17.479 align:start position:0%
tokenizer here's another example we have
 

00:08:17.479 --> 00:08:21.029 align:start position:0%
tokenizer here's another example we have
the<00:08:18.000><c> string</c><00:08:19.159><c> egg</c><00:08:20.159><c> and</c><00:08:20.240><c> you</c><00:08:20.360><c> see</c><00:08:20.639><c> here</c><00:08:20.879><c> that</c>

00:08:21.029 --> 00:08:21.039 align:start position:0%
the string egg and you see here that
 

00:08:21.039 --> 00:08:22.350 align:start position:0%
the string egg and you see here that
this<00:08:21.240><c> became</c><00:08:21.560><c> two</c>

00:08:22.350 --> 00:08:22.360 align:start position:0%
this became two
 

00:08:22.360 --> 00:08:24.749 align:start position:0%
this became two
tokens<00:08:23.360><c> but</c><00:08:23.479><c> for</c><00:08:23.599><c> some</c><00:08:23.800><c> reason</c><00:08:24.039><c> when</c><00:08:24.120><c> I</c><00:08:24.280><c> say</c><00:08:24.599><c> I</c>

00:08:24.749 --> 00:08:24.759 align:start position:0%
tokens but for some reason when I say I
 

00:08:24.759 --> 00:08:27.710 align:start position:0%
tokens but for some reason when I say I
have<00:08:24.919><c> an</c><00:08:25.199><c> egg</c><00:08:26.199><c> you</c><00:08:26.319><c> see</c><00:08:26.560><c> when</c><00:08:26.680><c> it's</c><00:08:26.800><c> a</c><00:08:27.080><c> space</c>

00:08:27.710 --> 00:08:27.720 align:start position:0%
have an egg you see when it's a space
 

00:08:27.720 --> 00:08:30.830 align:start position:0%
have an egg you see when it's a space
egg<00:08:28.720><c> it's</c><00:08:28.919><c> two</c><00:08:29.319><c> token</c><00:08:29.879><c> it's</c><00:08:30.319><c> sorry</c><00:08:30.560><c> it's</c><00:08:30.680><c> a</c>

00:08:30.830 --> 00:08:30.840 align:start position:0%
egg it's two token it's sorry it's a
 

00:08:30.840 --> 00:08:33.230 align:start position:0%
egg it's two token it's sorry it's a
single<00:08:31.159><c> token</c><00:08:31.879><c> so</c><00:08:32.120><c> just</c><00:08:32.360><c> egg</c><00:08:32.640><c> by</c><00:08:32.800><c> itself</c><00:08:33.120><c> in</c>

00:08:33.230 --> 00:08:33.240 align:start position:0%
single token so just egg by itself in
 

00:08:33.240 --> 00:08:34.750 align:start position:0%
single token so just egg by itself in
the<00:08:33.399><c> beginning</c><00:08:33.719><c> of</c><00:08:33.839><c> a</c><00:08:33.959><c> sentence</c><00:08:34.360><c> is</c><00:08:34.519><c> two</c>

00:08:34.750 --> 00:08:34.760 align:start position:0%
the beginning of a sentence is two
 

00:08:34.760 --> 00:08:37.670 align:start position:0%
the beginning of a sentence is two
tokens<00:08:35.760><c> but</c><00:08:36.000><c> here</c><00:08:36.320><c> as</c><00:08:36.440><c> a</c><00:08:36.680><c> space</c><00:08:37.000><c> egg</c><00:08:37.440><c> is</c>

00:08:37.670 --> 00:08:37.680 align:start position:0%
tokens but here as a space egg is
 

00:08:37.680 --> 00:08:40.509 align:start position:0%
tokens but here as a space egg is
suddenly<00:08:38.159><c> a</c><00:08:38.279><c> single</c><00:08:38.880><c> token</c><00:08:39.880><c> uh</c><00:08:39.959><c> for</c><00:08:40.159><c> the</c><00:08:40.279><c> exact</c>

00:08:40.509 --> 00:08:40.519 align:start position:0%
suddenly a single token uh for the exact
 

00:08:40.519 --> 00:08:44.190 align:start position:0%
suddenly a single token uh for the exact
same<00:08:40.839><c> string</c><00:08:42.039><c> okay</c><00:08:43.039><c> here</c><00:08:43.399><c> lowercase</c><00:08:44.000><c> egg</c>

00:08:44.190 --> 00:08:44.200 align:start position:0%
same string okay here lowercase egg
 

00:08:44.200 --> 00:08:46.230 align:start position:0%
same string okay here lowercase egg
turns<00:08:44.440><c> out</c><00:08:44.560><c> to</c><00:08:44.680><c> be</c><00:08:44.760><c> a</c><00:08:44.880><c> single</c><00:08:45.240><c> token</c><00:08:45.920><c> and</c><00:08:46.120><c> in</c>

00:08:46.230 --> 00:08:46.240 align:start position:0%
turns out to be a single token and in
 

00:08:46.240 --> 00:08:47.470 align:start position:0%
turns out to be a single token and in
particular<00:08:46.600><c> notice</c><00:08:46.880><c> that</c><00:08:47.000><c> the</c><00:08:47.080><c> color</c><00:08:47.320><c> is</c>

00:08:47.470 --> 00:08:47.480 align:start position:0%
particular notice that the color is
 

00:08:47.480 --> 00:08:49.350 align:start position:0%
particular notice that the color is
different<00:08:47.720><c> so</c><00:08:47.920><c> this</c><00:08:48.040><c> is</c><00:08:48.160><c> a</c><00:08:48.360><c> different</c><00:08:48.720><c> token</c>

00:08:49.350 --> 00:08:49.360 align:start position:0%
different so this is a different token
 

00:08:49.360 --> 00:08:51.750 align:start position:0%
different so this is a different token
so<00:08:49.560><c> this</c><00:08:49.680><c> is</c><00:08:49.880><c> case</c><00:08:50.240><c> sensitive</c><00:08:51.080><c> and</c><00:08:51.200><c> of</c><00:08:51.360><c> course</c>

00:08:51.750 --> 00:08:51.760 align:start position:0%
so this is case sensitive and of course
 

00:08:51.760 --> 00:08:54.550 align:start position:0%
so this is case sensitive and of course
a<00:08:52.000><c> capital</c><00:08:52.720><c> egg</c><00:08:53.399><c> would</c><00:08:53.680><c> also</c><00:08:53.959><c> be</c><00:08:54.200><c> different</c>

00:08:54.550 --> 00:08:54.560 align:start position:0%
a capital egg would also be different
 

00:08:54.560 --> 00:08:57.430 align:start position:0%
a capital egg would also be different
tokens<00:08:55.279><c> and</c><00:08:55.480><c> again</c><00:08:56.160><c> um</c><00:08:56.560><c> this</c><00:08:56.680><c> would</c><00:08:56.839><c> be</c><00:08:57.200><c> two</c>

00:08:57.430 --> 00:08:57.440 align:start position:0%
tokens and again um this would be two
 

00:08:57.440 --> 00:09:00.069 align:start position:0%
tokens and again um this would be two
tokens<00:08:58.000><c> arbitrarily</c><00:08:59.000><c> so</c><00:08:59.200><c> so</c><00:08:59.480><c> for</c><00:08:59.640><c> the</c><00:08:59.760><c> same</c>

00:09:00.069 --> 00:09:00.079 align:start position:0%
tokens arbitrarily so so for the same
 

00:09:00.079 --> 00:09:02.310 align:start position:0%
tokens arbitrarily so so for the same
concept<00:09:00.680><c> egg</c><00:09:01.440><c> depending</c><00:09:01.760><c> on</c><00:09:01.880><c> if</c><00:09:01.959><c> it's</c><00:09:02.079><c> in</c><00:09:02.200><c> the</c>

00:09:02.310 --> 00:09:02.320 align:start position:0%
concept egg depending on if it's in the
 

00:09:02.320 --> 00:09:03.790 align:start position:0%
concept egg depending on if it's in the
beginning<00:09:02.560><c> of</c><00:09:02.640><c> a</c><00:09:02.760><c> sentence</c><00:09:03.240><c> at</c><00:09:03.320><c> the</c><00:09:03.440><c> end</c><00:09:03.600><c> of</c><00:09:03.680><c> a</c>

00:09:03.790 --> 00:09:03.800 align:start position:0%
beginning of a sentence at the end of a
 

00:09:03.800 --> 00:09:06.230 align:start position:0%
beginning of a sentence at the end of a
sentence<00:09:04.399><c> lowercase</c><00:09:05.040><c> uppercase</c><00:09:05.480><c> or</c><00:09:05.640><c> mixed</c>

00:09:06.230 --> 00:09:06.240 align:start position:0%
sentence lowercase uppercase or mixed
 

00:09:06.240 --> 00:09:08.069 align:start position:0%
sentence lowercase uppercase or mixed
all<00:09:06.519><c> this</c><00:09:06.640><c> will</c><00:09:06.800><c> be</c><00:09:07.160><c> uh</c><00:09:07.320><c> basically</c><00:09:07.880><c> very</c>

00:09:08.069 --> 00:09:08.079 align:start position:0%
all this will be uh basically very
 

00:09:08.079 --> 00:09:10.310 align:start position:0%
all this will be uh basically very
different<00:09:08.360><c> tokens</c><00:09:08.880><c> and</c><00:09:09.079><c> different</c><00:09:09.399><c> IDs</c><00:09:10.200><c> and</c>

00:09:10.310 --> 00:09:10.320 align:start position:0%
different tokens and different IDs and
 

00:09:10.320 --> 00:09:12.030 align:start position:0%
different tokens and different IDs and
the<00:09:10.440><c> language</c><00:09:10.760><c> model</c><00:09:11.000><c> has</c><00:09:11.120><c> to</c><00:09:11.240><c> learn</c><00:09:11.519><c> from</c><00:09:11.720><c> raw</c>

00:09:12.030 --> 00:09:12.040 align:start position:0%
the language model has to learn from raw
 

00:09:12.040 --> 00:09:13.550 align:start position:0%
the language model has to learn from raw
data<00:09:12.399><c> from</c><00:09:12.600><c> all</c><00:09:12.720><c> the</c><00:09:12.839><c> internet</c><00:09:13.200><c> text</c><00:09:13.440><c> that</c>

00:09:13.550 --> 00:09:13.560 align:start position:0%
data from all the internet text that
 

00:09:13.560 --> 00:09:15.150 align:start position:0%
data from all the internet text that
it's<00:09:13.640><c> going</c><00:09:13.839><c> to</c><00:09:13.959><c> be</c><00:09:14.040><c> training</c><00:09:14.360><c> on</c><00:09:14.839><c> that</c><00:09:15.000><c> these</c>

00:09:15.150 --> 00:09:15.160 align:start position:0%
it's going to be training on that these
 

00:09:15.160 --> 00:09:17.430 align:start position:0%
it's going to be training on that these
are<00:09:15.399><c> actually</c><00:09:15.680><c> all</c><00:09:15.880><c> the</c><00:09:16.079><c> exact</c><00:09:16.440><c> same</c><00:09:16.720><c> concept</c>

00:09:17.430 --> 00:09:17.440 align:start position:0%
are actually all the exact same concept
 

00:09:17.440 --> 00:09:19.269 align:start position:0%
are actually all the exact same concept
and<00:09:17.519><c> it</c><00:09:17.680><c> has</c><00:09:17.760><c> to</c><00:09:17.880><c> sort</c><00:09:18.040><c> of</c><00:09:18.200><c> group</c><00:09:18.519><c> them</c><00:09:18.760><c> in</c><00:09:19.000><c> the</c>

00:09:19.269 --> 00:09:19.279 align:start position:0%
and it has to sort of group them in the
 

00:09:19.279 --> 00:09:21.310 align:start position:0%
and it has to sort of group them in the
parameters<00:09:19.720><c> of</c><00:09:19.839><c> the</c><00:09:19.920><c> neural</c><00:09:20.200><c> network</c><00:09:20.880><c> and</c>

00:09:21.310 --> 00:09:21.320 align:start position:0%
parameters of the neural network and
 

00:09:21.320 --> 00:09:22.470 align:start position:0%
parameters of the neural network and
understand<00:09:21.519><c> just</c><00:09:21.760><c> based</c><00:09:21.959><c> on</c><00:09:22.040><c> the</c><00:09:22.200><c> data</c>

00:09:22.470 --> 00:09:22.480 align:start position:0%
understand just based on the data
 

00:09:22.480 --> 00:09:24.750 align:start position:0%
understand just based on the data
patterns<00:09:23.200><c> that</c><00:09:23.360><c> these</c><00:09:23.480><c> are</c><00:09:23.640><c> all</c><00:09:23.880><c> very</c><00:09:24.120><c> similar</c>

00:09:24.750 --> 00:09:24.760 align:start position:0%
patterns that these are all very similar
 

00:09:24.760 --> 00:09:27.389 align:start position:0%
patterns that these are all very similar
but<00:09:24.959><c> maybe</c><00:09:25.240><c> not</c><00:09:25.640><c> almost</c><00:09:25.959><c> exactly</c><00:09:26.440><c> similar</c><00:09:27.000><c> but</c>

00:09:27.389 --> 00:09:27.399 align:start position:0%
but maybe not almost exactly similar but
 

00:09:27.399 --> 00:09:30.150 align:start position:0%
but maybe not almost exactly similar but
but<00:09:27.560><c> very</c><00:09:27.800><c> very</c><00:09:28.120><c> similar</c>

00:09:30.150 --> 00:09:30.160 align:start position:0%
but very very similar
 

00:09:30.160 --> 00:09:32.790 align:start position:0%
but very very similar
um<00:09:30.640><c> after</c><00:09:30.920><c> the</c><00:09:31.079><c> EG</c><00:09:31.320><c> demonstration</c><00:09:31.920><c> here</c><00:09:32.560><c> I</c>

00:09:32.790 --> 00:09:32.800 align:start position:0%
um after the EG demonstration here I
 

00:09:32.800 --> 00:09:35.630 align:start position:0%
um after the EG demonstration here I
have<00:09:33.560><c> um</c><00:09:33.920><c> an</c><00:09:34.079><c> introduction</c><00:09:34.600><c> from</c><00:09:34.800><c> open</c><00:09:35.079><c> a</c><00:09:35.279><c> eyes</c>

00:09:35.630 --> 00:09:35.640 align:start position:0%
have um an introduction from open a eyes
 

00:09:35.640 --> 00:09:41.949 align:start position:0%
have um an introduction from open a eyes
chbt<00:09:36.640><c> in</c><00:09:37.000><c> Korean</c><00:09:38.000><c> so</c><00:09:38.600><c> manaso</c><00:09:39.680><c> Pang</c><00:09:40.680><c> uh</c><00:09:40.880><c> Etc</c><00:09:41.880><c> uh</c>

00:09:41.949 --> 00:09:41.959 align:start position:0%
chbt in Korean so manaso Pang uh Etc uh
 

00:09:41.959 --> 00:09:44.069 align:start position:0%
chbt in Korean so manaso Pang uh Etc uh
so<00:09:42.120><c> this</c><00:09:42.200><c> is</c><00:09:42.320><c> in</c><00:09:42.480><c> Korean</c><00:09:43.320><c> and</c><00:09:43.440><c> the</c><00:09:43.560><c> reason</c><00:09:43.800><c> I</c>

00:09:44.069 --> 00:09:44.079 align:start position:0%
so this is in Korean and the reason I
 

00:09:44.079 --> 00:09:47.750 align:start position:0%
so this is in Korean and the reason I
put<00:09:44.240><c> this</c><00:09:44.440><c> here</c><00:09:44.720><c> is</c><00:09:44.920><c> because</c><00:09:45.880><c> you'll</c><00:09:46.160><c> notice</c>

00:09:47.750 --> 00:09:47.760 align:start position:0%
put this here is because you'll notice
 

00:09:47.760 --> 00:09:50.990 align:start position:0%
put this here is because you'll notice
that<00:09:48.760><c> um</c><00:09:49.279><c> non-english</c><00:09:50.040><c> languages</c><00:09:50.600><c> work</c>

00:09:50.990 --> 00:09:51.000 align:start position:0%
that um non-english languages work
 

00:09:51.000 --> 00:09:54.310 align:start position:0%
that um non-english languages work
slightly<00:09:51.480><c> worse</c><00:09:51.959><c> in</c><00:09:52.360><c> Chachi</c><00:09:53.360><c> part</c><00:09:53.519><c> of</c><00:09:53.680><c> this</c><00:09:53.839><c> is</c>

00:09:54.310 --> 00:09:54.320 align:start position:0%
slightly worse in Chachi part of this is
 

00:09:54.320 --> 00:09:55.630 align:start position:0%
slightly worse in Chachi part of this is
because<00:09:54.519><c> of</c><00:09:54.640><c> course</c><00:09:54.800><c> the</c><00:09:54.920><c> training</c><00:09:55.240><c> data</c><00:09:55.480><c> set</c>

00:09:55.630 --> 00:09:55.640 align:start position:0%
because of course the training data set
 

00:09:55.640 --> 00:09:58.069 align:start position:0%
because of course the training data set
for<00:09:55.800><c> Chachi</c><00:09:56.480><c> is</c><00:09:56.640><c> much</c><00:09:57.000><c> larger</c><00:09:57.480><c> for</c><00:09:57.720><c> English</c>

00:09:58.069 --> 00:09:58.079 align:start position:0%
for Chachi is much larger for English
 

00:09:58.079 --> 00:09:59.949 align:start position:0%
for Chachi is much larger for English
and<00:09:58.240><c> for</c><00:09:58.399><c> everything</c><00:09:58.640><c> else</c><00:09:59.320><c> but</c><00:09:59.519><c> the</c><00:09:59.600><c> same</c><00:09:59.800><c> is</c>

00:09:59.949 --> 00:09:59.959 align:start position:0%
and for everything else but the same is
 

00:09:59.959 --> 00:10:01.670 align:start position:0%
and for everything else but the same is
true<00:10:00.360><c> not</c><00:10:00.560><c> just</c><00:10:00.720><c> for</c><00:10:00.920><c> the</c><00:10:01.079><c> large</c><00:10:01.360><c> language</c>

00:10:01.670 --> 00:10:01.680 align:start position:0%
true not just for the large language
 

00:10:01.680 --> 00:10:04.310 align:start position:0%
true not just for the large language
model<00:10:01.959><c> itself</c><00:10:02.519><c> but</c><00:10:02.720><c> also</c><00:10:02.920><c> for</c><00:10:03.079><c> the</c><00:10:03.320><c> tokenizer</c>

00:10:04.310 --> 00:10:04.320 align:start position:0%
model itself but also for the tokenizer
 

00:10:04.320 --> 00:10:05.870 align:start position:0%
model itself but also for the tokenizer
so<00:10:04.480><c> when</c><00:10:04.600><c> we</c><00:10:04.720><c> train</c><00:10:05.000><c> the</c><00:10:05.120><c> tokenizer</c><00:10:05.760><c> we're</c>

00:10:05.870 --> 00:10:05.880 align:start position:0%
so when we train the tokenizer we're
 

00:10:05.880 --> 00:10:07.230 align:start position:0%
so when we train the tokenizer we're
going<00:10:06.040><c> to</c><00:10:06.120><c> see</c><00:10:06.279><c> that</c><00:10:06.399><c> there's</c><00:10:06.560><c> a</c><00:10:06.640><c> training</c><00:10:06.920><c> set</c>

00:10:07.230 --> 00:10:07.240 align:start position:0%
going to see that there's a training set
 

00:10:07.240 --> 00:10:09.230 align:start position:0%
going to see that there's a training set
as<00:10:07.399><c> well</c><00:10:08.000><c> and</c><00:10:08.120><c> there's</c><00:10:08.279><c> a</c><00:10:08.399><c> lot</c><00:10:08.560><c> more</c><00:10:08.760><c> English</c>

00:10:09.230 --> 00:10:09.240 align:start position:0%
as well and there's a lot more English
 

00:10:09.240 --> 00:10:11.310 align:start position:0%
as well and there's a lot more English
than<00:10:09.680><c> non-english</c><00:10:10.680><c> and</c><00:10:10.800><c> what</c><00:10:10.920><c> ends</c><00:10:11.120><c> up</c>

00:10:11.310 --> 00:10:11.320 align:start position:0%
than non-english and what ends up
 

00:10:11.320 --> 00:10:13.470 align:start position:0%
than non-english and what ends up
happening<00:10:11.800><c> is</c><00:10:11.959><c> that</c><00:10:12.120><c> we're</c><00:10:12.279><c> going</c><00:10:12.480><c> to</c><00:10:13.120><c> have</c><00:10:13.279><c> a</c>

00:10:13.470 --> 00:10:13.480 align:start position:0%
happening is that we're going to have a
 

00:10:13.480 --> 00:10:16.590 align:start position:0%
happening is that we're going to have a
lot<00:10:13.720><c> more</c><00:10:14.240><c> longer</c><00:10:14.800><c> tokens</c><00:10:15.600><c> for</c>

00:10:16.590 --> 00:10:16.600 align:start position:0%
lot more longer tokens for
 

00:10:16.600 --> 00:10:19.590 align:start position:0%
lot more longer tokens for
English<00:10:17.600><c> so</c><00:10:18.320><c> how</c><00:10:18.440><c> do</c><00:10:18.560><c> I</c><00:10:18.720><c> put</c><00:10:18.920><c> this</c><00:10:19.320><c> if</c><00:10:19.399><c> you</c><00:10:19.519><c> have</c>

00:10:19.590 --> 00:10:19.600 align:start position:0%
English so how do I put this if you have
 

00:10:19.600 --> 00:10:21.389 align:start position:0%
English so how do I put this if you have
a<00:10:19.680><c> single</c><00:10:20.000><c> sentence</c><00:10:20.360><c> in</c><00:10:20.560><c> English</c><00:10:21.160><c> and</c><00:10:21.240><c> you</c>

00:10:21.389 --> 00:10:21.399 align:start position:0%
a single sentence in English and you
 

00:10:21.399 --> 00:10:23.550 align:start position:0%
a single sentence in English and you
tokenize<00:10:21.880><c> it</c><00:10:22.360><c> you</c><00:10:22.519><c> might</c><00:10:22.680><c> see</c><00:10:22.880><c> that</c><00:10:23.000><c> it's</c><00:10:23.279><c> 10</c>

00:10:23.550 --> 00:10:23.560 align:start position:0%
tokenize it you might see that it's 10
 

00:10:23.560 --> 00:10:25.470 align:start position:0%
tokenize it you might see that it's 10
tokens<00:10:23.920><c> or</c><00:10:24.079><c> something</c><00:10:24.320><c> like</c><00:10:24.519><c> that</c><00:10:25.120><c> but</c><00:10:25.240><c> if</c><00:10:25.320><c> you</c>

00:10:25.470 --> 00:10:25.480 align:start position:0%
tokens or something like that but if you
 

00:10:25.480 --> 00:10:27.350 align:start position:0%
tokens or something like that but if you
translate<00:10:25.959><c> that</c><00:10:26.079><c> sentence</c><00:10:26.440><c> into</c><00:10:26.720><c> say</c><00:10:26.959><c> Korean</c>

00:10:27.350 --> 00:10:27.360 align:start position:0%
translate that sentence into say Korean
 

00:10:27.360 --> 00:10:29.430 align:start position:0%
translate that sentence into say Korean
or<00:10:27.560><c> Japanese</c><00:10:27.959><c> or</c><00:10:28.120><c> something</c><00:10:28.399><c> else</c><00:10:29.160><c> you'll</c>

00:10:29.430 --> 00:10:29.440 align:start position:0%
or Japanese or something else you'll
 

00:10:29.440 --> 00:10:30.829 align:start position:0%
or Japanese or something else you'll
typically<00:10:29.760><c> see</c><00:10:30.000><c> that</c><00:10:30.120><c> the</c><00:10:30.240><c> number</c><00:10:30.399><c> of</c><00:10:30.519><c> tokens</c>

00:10:30.829 --> 00:10:30.839 align:start position:0%
typically see that the number of tokens
 

00:10:30.839 --> 00:10:33.389 align:start position:0%
typically see that the number of tokens
used<00:10:31.160><c> is</c><00:10:31.360><c> much</c><00:10:31.600><c> larger</c><00:10:32.560><c> and</c><00:10:32.680><c> that's</c><00:10:32.920><c> because</c>

00:10:33.389 --> 00:10:33.399 align:start position:0%
used is much larger and that's because
 

00:10:33.399 --> 00:10:36.750 align:start position:0%
used is much larger and that's because
the<00:10:33.560><c> chunks</c><00:10:34.000><c> here</c><00:10:34.240><c> are</c><00:10:34.440><c> a</c><00:10:34.560><c> lot</c><00:10:34.760><c> more</c><00:10:35.000><c> broken</c><00:10:35.760><c> up</c>

00:10:36.750 --> 00:10:36.760 align:start position:0%
the chunks here are a lot more broken up
 

00:10:36.760 --> 00:10:38.509 align:start position:0%
the chunks here are a lot more broken up
so<00:10:36.880><c> we're</c><00:10:37.000><c> using</c><00:10:37.240><c> a</c><00:10:37.399><c> lot</c><00:10:37.560><c> more</c><00:10:37.760><c> tokens</c><00:10:38.160><c> for</c><00:10:38.360><c> the</c>

00:10:38.509 --> 00:10:38.519 align:start position:0%
so we're using a lot more tokens for the
 

00:10:38.519 --> 00:10:41.350 align:start position:0%
so we're using a lot more tokens for the
exact<00:10:38.959><c> same</c><00:10:39.440><c> thing</c><00:10:40.440><c> and</c><00:10:40.680><c> what</c><00:10:40.839><c> this</c><00:10:41.040><c> does</c><00:10:41.240><c> is</c>

00:10:41.350 --> 00:10:41.360 align:start position:0%
exact same thing and what this does is
 

00:10:41.360 --> 00:10:43.750 align:start position:0%
exact same thing and what this does is
it<00:10:41.519><c> bloats</c><00:10:41.959><c> up</c><00:10:42.480><c> the</c><00:10:42.639><c> sequence</c><00:10:43.079><c> length</c><00:10:43.399><c> of</c><00:10:43.600><c> all</c>

00:10:43.750 --> 00:10:43.760 align:start position:0%
it bloats up the sequence length of all
 

00:10:43.760 --> 00:10:46.230 align:start position:0%
it bloats up the sequence length of all
the<00:10:44.000><c> documents</c><00:10:44.920><c> so</c><00:10:45.360><c> you're</c><00:10:45.560><c> using</c><00:10:45.839><c> up</c><00:10:46.040><c> more</c>

00:10:46.230 --> 00:10:46.240 align:start position:0%
the documents so you're using up more
 

00:10:46.240 --> 00:10:48.389 align:start position:0%
the documents so you're using up more
tokens<00:10:46.959><c> and</c><00:10:47.120><c> then</c><00:10:47.320><c> in</c><00:10:47.480><c> the</c><00:10:47.639><c> attention</c><00:10:48.120><c> of</c><00:10:48.240><c> the</c>

00:10:48.389 --> 00:10:48.399 align:start position:0%
tokens and then in the attention of the
 

00:10:48.399 --> 00:10:49.910 align:start position:0%
tokens and then in the attention of the
Transformer<00:10:49.000><c> when</c><00:10:49.160><c> these</c><00:10:49.279><c> tokens</c><00:10:49.600><c> try</c><00:10:49.760><c> to</c>

00:10:49.910 --> 00:10:49.920 align:start position:0%
Transformer when these tokens try to
 

00:10:49.920 --> 00:10:51.910 align:start position:0%
Transformer when these tokens try to
attend<00:10:50.240><c> each</c><00:10:50.360><c> other</c><00:10:50.760><c> you</c><00:10:50.880><c> are</c><00:10:51.040><c> running</c><00:10:51.320><c> out</c><00:10:51.480><c> of</c>

00:10:51.910 --> 00:10:51.920 align:start position:0%
attend each other you are running out of
 

00:10:51.920 --> 00:10:55.110 align:start position:0%
attend each other you are running out of
context<00:10:52.760><c> um</c><00:10:53.200><c> in</c><00:10:53.399><c> the</c><00:10:53.800><c> maximum</c><00:10:54.279><c> context</c><00:10:54.680><c> length</c>

00:10:55.110 --> 00:10:55.120 align:start position:0%
context um in the maximum context length
 

00:10:55.120 --> 00:10:57.949 align:start position:0%
context um in the maximum context length
of<00:10:55.240><c> that</c><00:10:55.440><c> Transformer</c><00:10:56.440><c> and</c><00:10:56.560><c> so</c><00:10:56.760><c> basically</c><00:10:57.760><c> all</c>

00:10:57.949 --> 00:10:57.959 align:start position:0%
of that Transformer and so basically all
 

00:10:57.959 --> 00:11:01.269 align:start position:0%
of that Transformer and so basically all
the<00:10:58.120><c> non-english</c><00:10:59.120><c> text</c><00:10:59.680><c> is</c><00:11:00.079><c> stretched</c><00:11:00.600><c> out</c>

00:11:01.269 --> 00:11:01.279 align:start position:0%
the non-english text is stretched out
 

00:11:01.279 --> 00:11:03.430 align:start position:0%
the non-english text is stretched out
from<00:11:01.440><c> the</c><00:11:01.639><c> perspective</c><00:11:02.200><c> of</c><00:11:02.320><c> the</c><00:11:02.440><c> Transformer</c>

00:11:03.430 --> 00:11:03.440 align:start position:0%
from the perspective of the Transformer
 

00:11:03.440 --> 00:11:05.670 align:start position:0%
from the perspective of the Transformer
and<00:11:03.560><c> this</c><00:11:03.720><c> just</c><00:11:03.920><c> has</c><00:11:04.040><c> to</c><00:11:04.200><c> do</c><00:11:04.440><c> with</c><00:11:04.880><c> the</c><00:11:05.399><c> um</c>

00:11:05.670 --> 00:11:05.680 align:start position:0%
and this just has to do with the um
 

00:11:05.680 --> 00:11:07.470 align:start position:0%
and this just has to do with the um
trainings<00:11:06.120><c> that</c><00:11:06.320><c> used</c><00:11:06.639><c> for</c><00:11:06.800><c> the</c><00:11:06.920><c> tokenizer</c>

00:11:07.470 --> 00:11:07.480 align:start position:0%
trainings that used for the tokenizer
 

00:11:07.480 --> 00:11:10.030 align:start position:0%
trainings that used for the tokenizer
and<00:11:07.560><c> the</c><00:11:07.680><c> tokenization</c><00:11:08.440><c> itself</c><00:11:09.440><c> so</c><00:11:09.760><c> it</c><00:11:09.880><c> will</c>

00:11:10.030 --> 00:11:10.040 align:start position:0%
and the tokenization itself so it will
 

00:11:10.040 --> 00:11:12.069 align:start position:0%
and the tokenization itself so it will
create<00:11:10.320><c> a</c><00:11:10.440><c> lot</c><00:11:10.639><c> bigger</c><00:11:10.959><c> tokens</c><00:11:11.480><c> and</c><00:11:11.760><c> a</c><00:11:11.880><c> lot</c>

00:11:12.069 --> 00:11:12.079 align:start position:0%
create a lot bigger tokens and a lot
 

00:11:12.079 --> 00:11:14.190 align:start position:0%
create a lot bigger tokens and a lot
larger<00:11:12.399><c> groups</c><00:11:12.680><c> in</c><00:11:12.839><c> English</c><00:11:13.560><c> and</c><00:11:13.680><c> it</c><00:11:13.800><c> will</c>

00:11:14.190 --> 00:11:14.200 align:start position:0%
larger groups in English and it will
 

00:11:14.200 --> 00:11:16.150 align:start position:0%
larger groups in English and it will
have<00:11:14.360><c> a</c><00:11:14.480><c> lot</c><00:11:14.600><c> of</c><00:11:14.720><c> little</c><00:11:15.040><c> boundaries</c><00:11:15.839><c> for</c><00:11:16.000><c> all</c>

00:11:16.150 --> 00:11:16.160 align:start position:0%
have a lot of little boundaries for all
 

00:11:16.160 --> 00:11:19.750 align:start position:0%
have a lot of little boundaries for all
the<00:11:16.240><c> other</c><00:11:16.440><c> non-english</c><00:11:17.360><c> text</c><00:11:18.360><c> um</c><00:11:19.360><c> so</c><00:11:19.519><c> if</c><00:11:19.600><c> we</c>

00:11:19.750 --> 00:11:19.760 align:start position:0%
the other non-english text um so if we
 

00:11:19.760 --> 00:11:21.910 align:start position:0%
the other non-english text um so if we
translated<00:11:20.399><c> this</c><00:11:20.639><c> into</c><00:11:20.959><c> English</c><00:11:21.519><c> it</c><00:11:21.639><c> would</c><00:11:21.800><c> be</c>

00:11:21.910 --> 00:11:21.920 align:start position:0%
translated this into English it would be
 

00:11:21.920 --> 00:11:23.310 align:start position:0%
translated this into English it would be
significantly<00:11:22.399><c> fewer</c>

00:11:23.310 --> 00:11:23.320 align:start position:0%
significantly fewer
 

00:11:23.320 --> 00:11:25.629 align:start position:0%
significantly fewer
tokens<00:11:24.320><c> the</c><00:11:24.399><c> final</c><00:11:24.720><c> example</c><00:11:25.040><c> I</c><00:11:25.160><c> have</c><00:11:25.360><c> here</c><00:11:25.519><c> is</c>

00:11:25.629 --> 00:11:25.639 align:start position:0%
tokens the final example I have here is
 

00:11:25.639 --> 00:11:28.069 align:start position:0%
tokens the final example I have here is
a<00:11:26.240><c> little</c><00:11:26.440><c> snippet</c><00:11:26.880><c> of</c><00:11:27.040><c> python</c><00:11:27.399><c> for</c><00:11:27.560><c> doing</c><00:11:27.800><c> FS</c>

00:11:28.069 --> 00:11:28.079 align:start position:0%
a little snippet of python for doing FS
 

00:11:28.079 --> 00:11:30.990 align:start position:0%
a little snippet of python for doing FS
buuz<00:11:29.160><c> and</c><00:11:29.279><c> what</c><00:11:29.360><c> I'd</c><00:11:29.519><c> like</c><00:11:29.639><c> you</c><00:11:29.760><c> to</c><00:11:29.880><c> notice</c><00:11:30.360><c> is</c>

00:11:30.990 --> 00:11:31.000 align:start position:0%
buuz and what I'd like you to notice is
 

00:11:31.000 --> 00:11:34.030 align:start position:0%
buuz and what I'd like you to notice is
look<00:11:32.000><c> all</c><00:11:32.200><c> these</c><00:11:32.399><c> individual</c><00:11:32.920><c> spaces</c><00:11:33.519><c> are</c><00:11:33.720><c> all</c>

00:11:34.030 --> 00:11:34.040 align:start position:0%
look all these individual spaces are all
 

00:11:34.040 --> 00:11:36.990 align:start position:0%
look all these individual spaces are all
separate<00:11:34.639><c> tokens</c><00:11:35.600><c> they</c><00:11:35.720><c> are</c><00:11:35.959><c> token</c>

00:11:36.990 --> 00:11:37.000 align:start position:0%
separate tokens they are token
 

00:11:37.000 --> 00:11:42.750 align:start position:0%
separate tokens they are token
220<00:11:38.160><c> so</c><00:11:39.160><c> uh</c><00:11:39.279><c> 220</c><00:11:39.839><c> 220</c><00:11:40.360><c> 220</c><00:11:41.000><c> 220</c><00:11:41.880><c> and</c><00:11:42.000><c> then</c><00:11:42.360><c> space</c>

00:11:42.750 --> 00:11:42.760 align:start position:0%
220 so uh 220 220 220 220 and then space
 

00:11:42.760 --> 00:11:45.310 align:start position:0%
220 so uh 220 220 220 220 and then space
if<00:11:43.160><c> is</c><00:11:43.240><c> a</c><00:11:43.399><c> single</c><00:11:43.720><c> token</c><00:11:44.720><c> and</c><00:11:44.800><c> so</c><00:11:45.000><c> what's</c><00:11:45.160><c> going</c>

00:11:45.310 --> 00:11:45.320 align:start position:0%
if is a single token and so what's going
 

00:11:45.320 --> 00:11:46.710 align:start position:0%
if is a single token and so what's going
on<00:11:45.519><c> here</c><00:11:45.680><c> is</c><00:11:45.800><c> that</c><00:11:45.959><c> when</c><00:11:46.079><c> the</c><00:11:46.200><c> Transformer</c><00:11:46.639><c> is</c>

00:11:46.710 --> 00:11:46.720 align:start position:0%
on here is that when the Transformer is
 

00:11:46.720 --> 00:11:49.310 align:start position:0%
on here is that when the Transformer is
going<00:11:46.880><c> to</c><00:11:47.040><c> consume</c><00:11:47.600><c> or</c><00:11:47.800><c> try</c><00:11:48.000><c> to</c><00:11:48.480><c> uh</c><00:11:48.639><c> create</c>

00:11:49.310 --> 00:11:49.320 align:start position:0%
going to consume or try to uh create
 

00:11:49.320 --> 00:11:52.629 align:start position:0%
going to consume or try to uh create
this<00:11:49.639><c> text</c><00:11:50.639><c> it</c><00:11:50.800><c> needs</c><00:11:51.040><c> to</c><00:11:51.680><c> um</c><00:11:52.160><c> handle</c><00:11:52.480><c> all</c>

00:11:52.629 --> 00:11:52.639 align:start position:0%
this text it needs to um handle all
 

00:11:52.639 --> 00:11:54.470 align:start position:0%
this text it needs to um handle all
these<00:11:52.800><c> spaces</c><00:11:53.240><c> individually</c><00:11:53.839><c> they</c><00:11:54.000><c> all</c><00:11:54.160><c> feed</c>

00:11:54.470 --> 00:11:54.480 align:start position:0%
these spaces individually they all feed
 

00:11:54.480 --> 00:11:56.550 align:start position:0%
these spaces individually they all feed
in<00:11:55.000><c> one</c><00:11:55.240><c> by</c><00:11:55.440><c> one</c><00:11:55.839><c> into</c><00:11:56.079><c> the</c><00:11:56.240><c> entire</c>

00:11:56.550 --> 00:11:56.560 align:start position:0%
in one by one into the entire
 

00:11:56.560 --> 00:11:59.110 align:start position:0%
in one by one into the entire
Transformer<00:11:57.560><c> in</c><00:11:57.720><c> the</c><00:11:57.880><c> sequence</c><00:11:58.600><c> and</c><00:11:58.720><c> so</c><00:11:59.040><c> this</c>

00:11:59.110 --> 00:11:59.120 align:start position:0%
Transformer in the sequence and so this
 

00:11:59.120 --> 00:12:01.269 align:start position:0%
Transformer in the sequence and so this
is<00:11:59.240><c> being</c><00:11:59.560><c> extremely</c><00:12:00.160><c> wasteful</c><00:12:00.720><c> tokenizing</c>

00:12:01.269 --> 00:12:01.279 align:start position:0%
is being extremely wasteful tokenizing
 

00:12:01.279 --> 00:12:04.430 align:start position:0%
is being extremely wasteful tokenizing
it<00:12:01.560><c> in</c><00:12:01.720><c> this</c><00:12:01.959><c> way</c><00:12:02.959><c> and</c><00:12:03.120><c> so</c><00:12:03.760><c> as</c><00:12:03.839><c> a</c><00:12:04.040><c> result</c><00:12:04.279><c> of</c>

00:12:04.430 --> 00:12:04.440 align:start position:0%
it in this way and so as a result of
 

00:12:04.440 --> 00:12:07.030 align:start position:0%
it in this way and so as a result of
that<00:12:04.600><c> gpt2</c><00:12:05.200><c> is</c><00:12:05.360><c> not</c><00:12:05.600><c> very</c><00:12:05.800><c> good</c><00:12:05.959><c> with</c><00:12:06.240><c> python</c>

00:12:07.030 --> 00:12:07.040 align:start position:0%
that gpt2 is not very good with python
 

00:12:07.040 --> 00:12:08.670 align:start position:0%
that gpt2 is not very good with python
and<00:12:07.120><c> it's</c><00:12:07.320><c> not</c><00:12:07.639><c> anything</c><00:12:07.920><c> to</c><00:12:08.040><c> do</c><00:12:08.200><c> with</c><00:12:08.360><c> coding</c>

00:12:08.670 --> 00:12:08.680 align:start position:0%
and it's not anything to do with coding
 

00:12:08.680 --> 00:12:10.670 align:start position:0%
and it's not anything to do with coding
or<00:12:08.839><c> the</c><00:12:08.920><c> language</c><00:12:09.200><c> model</c><00:12:09.480><c> itself</c><00:12:10.240><c> it's</c><00:12:10.440><c> just</c>

00:12:10.670 --> 00:12:10.680 align:start position:0%
or the language model itself it's just
 

00:12:10.680 --> 00:12:12.069 align:start position:0%
or the language model itself it's just
that<00:12:10.839><c> if</c><00:12:10.959><c> he</c><00:12:11.040><c> use</c><00:12:11.240><c> a</c><00:12:11.360><c> lot</c><00:12:11.440><c> of</c><00:12:11.560><c> indentation</c>

00:12:12.069 --> 00:12:12.079 align:start position:0%
that if he use a lot of indentation
 

00:12:12.079 --> 00:12:15.389 align:start position:0%
that if he use a lot of indentation
using<00:12:12.360><c> space</c><00:12:12.639><c> in</c><00:12:12.839><c> Python</c><00:12:13.519><c> like</c><00:12:14.120><c> we</c><00:12:14.279><c> usually</c><00:12:14.600><c> do</c>

00:12:15.389 --> 00:12:15.399 align:start position:0%
using space in Python like we usually do
 

00:12:15.399 --> 00:12:17.389 align:start position:0%
using space in Python like we usually do
uh<00:12:15.480><c> you</c><00:12:15.639><c> just</c><00:12:15.800><c> end</c><00:12:15.959><c> up</c><00:12:16.279><c> bloating</c><00:12:16.760><c> out</c><00:12:17.079><c> all</c><00:12:17.240><c> the</c>

00:12:17.389 --> 00:12:17.399 align:start position:0%
uh you just end up bloating out all the
 

00:12:17.399 --> 00:12:19.350 align:start position:0%
uh you just end up bloating out all the
text<00:12:17.720><c> and</c><00:12:17.839><c> it's</c><00:12:18.120><c> separated</c><00:12:18.639><c> across</c><00:12:19.000><c> way</c><00:12:19.160><c> too</c>

00:12:19.350 --> 00:12:19.360 align:start position:0%
text and it's separated across way too
 

00:12:19.360 --> 00:12:21.030 align:start position:0%
text and it's separated across way too
much<00:12:19.480><c> of</c><00:12:19.600><c> the</c><00:12:19.760><c> sequence</c><00:12:20.440><c> and</c><00:12:20.560><c> we</c><00:12:20.680><c> are</c><00:12:20.800><c> running</c>

00:12:21.030 --> 00:12:21.040 align:start position:0%
much of the sequence and we are running
 

00:12:21.040 --> 00:12:22.750 align:start position:0%
much of the sequence and we are running
out<00:12:21.160><c> of</c><00:12:21.279><c> the</c><00:12:21.440><c> context</c><00:12:21.800><c> length</c><00:12:22.560><c> in</c><00:12:22.680><c> the</c>

00:12:22.750 --> 00:12:22.760 align:start position:0%
out of the context length in the
 

00:12:22.760 --> 00:12:24.430 align:start position:0%
out of the context length in the
sequence<00:12:23.560><c> uh</c><00:12:23.639><c> that's</c><00:12:23.800><c> roughly</c><00:12:24.079><c> speaking</c>

00:12:24.430 --> 00:12:24.440 align:start position:0%
sequence uh that's roughly speaking
 

00:12:24.440 --> 00:12:25.629 align:start position:0%
sequence uh that's roughly speaking
what's<00:12:24.720><c> what's</c><00:12:24.880><c> happening</c><00:12:25.160><c> we're</c><00:12:25.320><c> being</c><00:12:25.519><c> way</c>

00:12:25.629 --> 00:12:25.639 align:start position:0%
what's what's happening we're being way
 

00:12:25.639 --> 00:12:27.389 align:start position:0%
what's what's happening we're being way
too<00:12:25.839><c> wasteful</c><00:12:26.399><c> we're</c><00:12:26.560><c> taking</c><00:12:26.839><c> up</c><00:12:27.079><c> way</c><00:12:27.199><c> too</c>

00:12:27.389 --> 00:12:27.399 align:start position:0%
too wasteful we're taking up way too
 

00:12:27.399 --> 00:12:29.670 align:start position:0%
too wasteful we're taking up way too
much<00:12:27.600><c> token</c><00:12:27.920><c> space</c><00:12:28.680><c> now</c><00:12:28.959><c> we</c><00:12:29.040><c> can</c><00:12:29.160><c> also</c><00:12:29.360><c> scroll</c>

00:12:29.670 --> 00:12:29.680 align:start position:0%
much token space now we can also scroll
 

00:12:29.680 --> 00:12:31.590 align:start position:0%
much token space now we can also scroll
up<00:12:29.800><c> here</c><00:12:29.920><c> and</c><00:12:30.000><c> we</c><00:12:30.079><c> can</c><00:12:30.199><c> change</c><00:12:30.399><c> the</c><00:12:30.600><c> tokenizer</c>

00:12:31.590 --> 00:12:31.600 align:start position:0%
up here and we can change the tokenizer
 

00:12:31.600 --> 00:12:34.030 align:start position:0%
up here and we can change the tokenizer
so<00:12:31.800><c> note</c><00:12:32.079><c> here</c><00:12:32.199><c> that</c><00:12:32.360><c> gpt2</c><00:12:32.959><c> tokenizer</c><00:12:33.639><c> creates</c>

00:12:34.030 --> 00:12:34.040 align:start position:0%
so note here that gpt2 tokenizer creates
 

00:12:34.040 --> 00:12:36.710 align:start position:0%
so note here that gpt2 tokenizer creates
a<00:12:34.160><c> token</c><00:12:34.480><c> count</c><00:12:34.720><c> of</c><00:12:34.880><c> 300</c><00:12:35.560><c> for</c><00:12:35.880><c> this</c><00:12:36.360><c> string</c>

00:12:36.710 --> 00:12:36.720 align:start position:0%
a token count of 300 for this string
 

00:12:36.720 --> 00:12:39.509 align:start position:0%
a token count of 300 for this string
here<00:12:37.639><c> we</c><00:12:37.720><c> can</c><00:12:37.880><c> change</c><00:12:38.040><c> it</c><00:12:38.160><c> to</c><00:12:38.279><c> CL</c><00:12:38.839><c> 100K</c><00:12:39.240><c> base</c>

00:12:39.509 --> 00:12:39.519 align:start position:0%
here we can change it to CL 100K base
 

00:12:39.519 --> 00:12:41.829 align:start position:0%
here we can change it to CL 100K base
which<00:12:39.639><c> is</c><00:12:39.760><c> the</c><00:12:39.839><c> GPT</c><00:12:40.199><c> for</c><00:12:40.639><c> tokenizer</c><00:12:41.639><c> and</c><00:12:41.720><c> we</c>

00:12:41.829 --> 00:12:41.839 align:start position:0%
which is the GPT for tokenizer and we
 

00:12:41.839 --> 00:12:44.550 align:start position:0%
which is the GPT for tokenizer and we
see<00:12:42.000><c> that</c><00:12:42.120><c> the</c><00:12:42.199><c> token</c><00:12:42.480><c> count</c><00:12:42.720><c> drops</c><00:12:43.040><c> to</c><00:12:43.440><c> 185</c><00:12:44.440><c> so</c>

00:12:44.550 --> 00:12:44.560 align:start position:0%
see that the token count drops to 185 so
 

00:12:44.560 --> 00:12:46.790 align:start position:0%
see that the token count drops to 185 so
for<00:12:44.720><c> the</c><00:12:44.959><c> exact</c><00:12:45.320><c> same</c><00:12:45.519><c> string</c><00:12:46.120><c> we</c><00:12:46.199><c> are</c><00:12:46.440><c> now</c>

00:12:46.790 --> 00:12:46.800 align:start position:0%
for the exact same string we are now
 

00:12:46.800 --> 00:12:49.790 align:start position:0%
for the exact same string we are now
roughly<00:12:47.320><c> having</c><00:12:48.040><c> the</c><00:12:48.160><c> number</c><00:12:48.360><c> of</c><00:12:48.639><c> tokens</c><00:12:49.639><c> and</c>

00:12:49.790 --> 00:12:49.800 align:start position:0%
roughly having the number of tokens and
 

00:12:49.800 --> 00:12:51.750 align:start position:0%
roughly having the number of tokens and
roughly<00:12:50.079><c> speaking</c><00:12:50.440><c> this</c><00:12:50.560><c> is</c><00:12:50.800><c> because</c><00:12:51.560><c> uh</c><00:12:51.639><c> the</c>

00:12:51.750 --> 00:12:51.760 align:start position:0%
roughly speaking this is because uh the
 

00:12:51.760 --> 00:12:54.350 align:start position:0%
roughly speaking this is because uh the
number<00:12:52.079><c> of</c><00:12:52.440><c> tokens</c><00:12:53.040><c> in</c><00:12:53.120><c> the</c><00:12:53.240><c> GPT</c><00:12:53.560><c> 4</c><00:12:53.760><c> tokenizer</c>

00:12:54.350 --> 00:12:54.360 align:start position:0%
number of tokens in the GPT 4 tokenizer
 

00:12:54.360 --> 00:12:56.710 align:start position:0%
number of tokens in the GPT 4 tokenizer
is<00:12:54.560><c> roughly</c><00:12:55.079><c> double</c><00:12:56.079><c> that</c><00:12:56.199><c> of</c><00:12:56.320><c> the</c><00:12:56.440><c> number</c><00:12:56.600><c> of</c>

00:12:56.710 --> 00:12:56.720 align:start position:0%
is roughly double that of the number of
 

00:12:56.720 --> 00:12:58.829 align:start position:0%
is roughly double that of the number of
tokens<00:12:57.000><c> in</c><00:12:57.079><c> the</c><00:12:57.160><c> gpt2</c><00:12:57.680><c> tokenizer</c><00:12:58.440><c> so</c><00:12:58.600><c> we</c><00:12:58.680><c> went</c>

00:12:58.829 --> 00:12:58.839 align:start position:0%
tokens in the gpt2 tokenizer so we went
 

00:12:58.839 --> 00:13:01.629 align:start position:0%
tokens in the gpt2 tokenizer so we went
went<00:12:58.959><c> from</c><00:12:59.120><c> roughly</c><00:12:59.360><c> 50k</c><00:12:59.839><c> to</c><00:13:00.000><c> roughly</c><00:13:00.639><c> 100K</c>

00:13:01.629 --> 00:13:01.639 align:start position:0%
went from roughly 50k to roughly 100K
 

00:13:01.639 --> 00:13:02.990 align:start position:0%
went from roughly 50k to roughly 100K
now<00:13:01.839><c> you</c><00:13:01.920><c> can</c><00:13:02.040><c> imagine</c><00:13:02.320><c> that</c><00:13:02.480><c> this</c><00:13:02.560><c> is</c><00:13:02.680><c> a</c><00:13:02.839><c> good</c>

00:13:02.990 --> 00:13:03.000 align:start position:0%
now you can imagine that this is a good
 

00:13:03.000 --> 00:13:05.990 align:start position:0%
now you can imagine that this is a good
thing<00:13:03.880><c> because</c><00:13:04.360><c> the</c><00:13:04.519><c> same</c><00:13:05.079><c> text</c><00:13:05.519><c> is</c><00:13:05.720><c> now</c>

00:13:05.990 --> 00:13:06.000 align:start position:0%
thing because the same text is now
 

00:13:06.000 --> 00:13:10.189 align:start position:0%
thing because the same text is now
squished<00:13:06.680><c> into</c><00:13:07.120><c> half</c><00:13:07.320><c> as</c><00:13:07.480><c> many</c><00:13:07.720><c> tokens</c><00:13:08.560><c> so</c><00:13:09.440><c> uh</c>

00:13:10.189 --> 00:13:10.199 align:start position:0%
squished into half as many tokens so uh
 

00:13:10.199 --> 00:13:12.750 align:start position:0%
squished into half as many tokens so uh
this<00:13:10.320><c> is</c><00:13:10.440><c> a</c><00:13:10.600><c> lot</c><00:13:10.920><c> denser</c><00:13:11.399><c> input</c><00:13:11.720><c> to</c><00:13:11.839><c> the</c>

00:13:12.750 --> 00:13:12.760 align:start position:0%
this is a lot denser input to the
 

00:13:12.760 --> 00:13:15.430 align:start position:0%
this is a lot denser input to the
Transformer<00:13:13.760><c> and</c><00:13:13.920><c> in</c><00:13:14.040><c> the</c><00:13:14.240><c> Transformer</c><00:13:15.240><c> every</c>

00:13:15.430 --> 00:13:15.440 align:start position:0%
Transformer and in the Transformer every
 

00:13:15.440 --> 00:13:17.030 align:start position:0%
Transformer and in the Transformer every
single<00:13:15.720><c> token</c><00:13:16.079><c> has</c><00:13:16.160><c> a</c><00:13:16.399><c> finite</c><00:13:16.720><c> number</c><00:13:16.920><c> of</c>

00:13:17.030 --> 00:13:17.040 align:start position:0%
single token has a finite number of
 

00:13:17.040 --> 00:13:18.389 align:start position:0%
single token has a finite number of
tokens<00:13:17.399><c> before</c><00:13:17.600><c> it</c><00:13:17.760><c> that</c><00:13:17.839><c> it's</c><00:13:17.959><c> going</c><00:13:18.120><c> to</c><00:13:18.240><c> pay</c>

00:13:18.389 --> 00:13:18.399 align:start position:0%
tokens before it that it's going to pay
 

00:13:18.399 --> 00:13:20.430 align:start position:0%
tokens before it that it's going to pay
attention<00:13:18.680><c> to</c><00:13:19.480><c> and</c><00:13:19.560><c> so</c><00:13:19.720><c> what</c><00:13:19.839><c> this</c><00:13:19.959><c> is</c><00:13:20.120><c> doing</c>

00:13:20.430 --> 00:13:20.440 align:start position:0%
attention to and so what this is doing
 

00:13:20.440 --> 00:13:23.470 align:start position:0%
attention to and so what this is doing
is<00:13:20.639><c> we're</c><00:13:20.920><c> roughly</c><00:13:21.320><c> able</c><00:13:21.560><c> to</c><00:13:21.920><c> see</c><00:13:22.920><c> twice</c><00:13:23.320><c> as</c>

00:13:23.470 --> 00:13:23.480 align:start position:0%
is we're roughly able to see twice as
 

00:13:23.480 --> 00:13:26.509 align:start position:0%
is we're roughly able to see twice as
much<00:13:23.760><c> text</c><00:13:24.760><c> as</c><00:13:24.880><c> a</c><00:13:25.120><c> context</c><00:13:25.720><c> for</c><00:13:25.959><c> what</c><00:13:26.120><c> token</c><00:13:26.360><c> to</c>

00:13:26.509 --> 00:13:26.519 align:start position:0%
much text as a context for what token to
 

00:13:26.519 --> 00:13:29.269 align:start position:0%
much text as a context for what token to
predict<00:13:26.880><c> next</c><00:13:27.720><c> uh</c><00:13:27.839><c> because</c><00:13:28.000><c> of</c><00:13:28.160><c> this</c><00:13:28.320><c> change</c>

00:13:29.269 --> 00:13:29.279 align:start position:0%
predict next uh because of this change
 

00:13:29.279 --> 00:13:30.790 align:start position:0%
predict next uh because of this change
but<00:13:29.440><c> of</c><00:13:29.560><c> course</c><00:13:29.920><c> just</c><00:13:30.079><c> increasing</c><00:13:30.480><c> the</c><00:13:30.600><c> number</c>

00:13:30.790 --> 00:13:30.800 align:start position:0%
but of course just increasing the number
 

00:13:30.800 --> 00:13:33.389 align:start position:0%
but of course just increasing the number
of<00:13:30.920><c> tokens</c><00:13:31.560><c> is</c><00:13:32.000><c> uh</c><00:13:32.160><c> not</c><00:13:32.639><c> strictly</c><00:13:33.079><c> better</c>

00:13:33.389 --> 00:13:33.399 align:start position:0%
of tokens is uh not strictly better
 

00:13:33.399 --> 00:13:35.150 align:start position:0%
of tokens is uh not strictly better
infinitely<00:13:34.320><c> uh</c><00:13:34.440><c> because</c><00:13:34.680><c> as</c><00:13:34.760><c> you</c><00:13:34.880><c> increase</c>

00:13:35.150 --> 00:13:35.160 align:start position:0%
infinitely uh because as you increase
 

00:13:35.160 --> 00:13:36.910 align:start position:0%
infinitely uh because as you increase
the<00:13:35.240><c> number</c><00:13:35.399><c> of</c><00:13:35.519><c> tokens</c><00:13:36.160><c> now</c><00:13:36.320><c> your</c><00:13:36.480><c> embedding</c>

00:13:36.910 --> 00:13:36.920 align:start position:0%
the number of tokens now your embedding
 

00:13:36.920 --> 00:13:39.870 align:start position:0%
the number of tokens now your embedding
table<00:13:37.440><c> is</c><00:13:37.959><c> um</c><00:13:38.199><c> sort</c><00:13:38.399><c> of</c><00:13:38.560><c> getting</c><00:13:38.880><c> a</c><00:13:39.000><c> lot</c><00:13:39.240><c> larger</c>

00:13:39.870 --> 00:13:39.880 align:start position:0%
table is um sort of getting a lot larger
 

00:13:39.880 --> 00:13:41.470 align:start position:0%
table is um sort of getting a lot larger
and<00:13:40.040><c> also</c><00:13:40.279><c> at</c><00:13:40.399><c> the</c><00:13:40.519><c> output</c><00:13:40.959><c> we</c><00:13:41.040><c> are</c><00:13:41.160><c> trying</c><00:13:41.360><c> to</c>

00:13:41.470 --> 00:13:41.480 align:start position:0%
and also at the output we are trying to
 

00:13:41.480 --> 00:13:42.870 align:start position:0%
and also at the output we are trying to
predict<00:13:41.760><c> the</c><00:13:41.839><c> next</c><00:13:42.040><c> token</c><00:13:42.399><c> and</c><00:13:42.519><c> there's</c><00:13:42.720><c> the</c>

00:13:42.870 --> 00:13:42.880 align:start position:0%
predict the next token and there's the
 

00:13:42.880 --> 00:13:45.110 align:start position:0%
predict the next token and there's the
soft<00:13:43.120><c> Max</c><00:13:43.519><c> there</c><00:13:44.000><c> and</c><00:13:44.120><c> that</c><00:13:44.279><c> grows</c><00:13:44.600><c> as</c><00:13:44.680><c> well</c>

00:13:45.110 --> 00:13:45.120 align:start position:0%
soft Max there and that grows as well
 

00:13:45.120 --> 00:13:46.389 align:start position:0%
soft Max there and that grows as well
we're<00:13:45.240><c> going</c><00:13:45.360><c> to</c><00:13:45.480><c> go</c><00:13:45.560><c> into</c><00:13:45.720><c> more</c><00:13:45.880><c> detail</c><00:13:46.199><c> later</c>

00:13:46.389 --> 00:13:46.399 align:start position:0%
we're going to go into more detail later
 

00:13:46.399 --> 00:13:48.430 align:start position:0%
we're going to go into more detail later
on<00:13:46.600><c> this</c><00:13:47.199><c> but</c><00:13:47.399><c> there's</c><00:13:47.639><c> some</c><00:13:47.800><c> kind</c><00:13:47.920><c> of</c><00:13:48.000><c> a</c><00:13:48.120><c> Sweet</c>

00:13:48.430 --> 00:13:48.440 align:start position:0%
on this but there's some kind of a Sweet
 

00:13:48.440 --> 00:13:50.990 align:start position:0%
on this but there's some kind of a Sweet
Spot<00:13:48.720><c> somewhere</c><00:13:49.600><c> where</c><00:13:49.920><c> you</c><00:13:50.079><c> have</c><00:13:50.240><c> a</c><00:13:50.680><c> just</c>

00:13:50.990 --> 00:13:51.000 align:start position:0%
Spot somewhere where you have a just
 

00:13:51.000 --> 00:13:52.269 align:start position:0%
Spot somewhere where you have a just
right<00:13:51.399><c> number</c><00:13:51.600><c> of</c><00:13:51.720><c> tokens</c><00:13:52.000><c> in</c><00:13:52.120><c> your</c>

00:13:52.269 --> 00:13:52.279 align:start position:0%
right number of tokens in your
 

00:13:52.279 --> 00:13:53.870 align:start position:0%
right number of tokens in your
vocabulary<00:13:53.079><c> where</c><00:13:53.279><c> everything</c><00:13:53.600><c> is</c>

00:13:53.870 --> 00:13:53.880 align:start position:0%
vocabulary where everything is
 

00:13:53.880 --> 00:13:56.509 align:start position:0%
vocabulary where everything is
appropriately<00:13:54.639><c> dense</c><00:13:55.240><c> and</c><00:13:55.399><c> still</c><00:13:55.639><c> fairly</c>

00:13:56.509 --> 00:13:56.519 align:start position:0%
appropriately dense and still fairly
 

00:13:56.519 --> 00:13:58.350 align:start position:0%
appropriately dense and still fairly
efficient<00:13:57.519><c> now</c><00:13:57.720><c> one</c><00:13:57.839><c> thing</c><00:13:57.959><c> I</c><00:13:58.040><c> would</c><00:13:58.160><c> like</c><00:13:58.279><c> you</c>

00:13:58.350 --> 00:13:58.360 align:start position:0%
efficient now one thing I would like you
 

00:13:58.360 --> 00:14:00.150 align:start position:0%
efficient now one thing I would like you
to<00:13:58.480><c> note</c><00:13:58.839><c> specifically</c><00:13:59.279><c> for</c><00:13:59.399><c> the</c><00:13:59.519><c> gp4</c>

00:14:00.150 --> 00:14:00.160 align:start position:0%
to note specifically for the gp4
 

00:14:00.160 --> 00:14:03.550 align:start position:0%
to note specifically for the gp4
tokenizer<00:14:01.160><c> is</c><00:14:01.560><c> that</c><00:14:02.560><c> the</c><00:14:02.920><c> handling</c><00:14:03.279><c> of</c><00:14:03.399><c> the</c>

00:14:03.550 --> 00:14:03.560 align:start position:0%
tokenizer is that the handling of the
 

00:14:03.560 --> 00:14:05.430 align:start position:0%
tokenizer is that the handling of the
white<00:14:03.800><c> space</c><00:14:04.120><c> for</c><00:14:04.399><c> python</c><00:14:04.800><c> has</c><00:14:04.920><c> improved</c><00:14:05.320><c> a</c>

00:14:05.430 --> 00:14:05.440 align:start position:0%
white space for python has improved a
 

00:14:05.440 --> 00:14:08.350 align:start position:0%
white space for python has improved a
lot<00:14:06.079><c> you</c><00:14:06.240><c> see</c><00:14:06.519><c> that</c><00:14:07.000><c> here</c><00:14:07.560><c> these</c><00:14:07.759><c> four</c><00:14:08.000><c> spaces</c>

00:14:08.350 --> 00:14:08.360 align:start position:0%
lot you see that here these four spaces
 

00:14:08.360 --> 00:14:10.230 align:start position:0%
lot you see that here these four spaces
are<00:14:08.519><c> represented</c><00:14:09.000><c> as</c><00:14:09.160><c> one</c><00:14:09.320><c> single</c><00:14:09.639><c> token</c><00:14:10.000><c> for</c>

00:14:10.230 --> 00:14:10.240 align:start position:0%
are represented as one single token for
 

00:14:10.240 --> 00:14:13.749 align:start position:0%
are represented as one single token for
the<00:14:10.440><c> three</c><00:14:11.399><c> spaces</c><00:14:11.839><c> here</c><00:14:12.360><c> and</c><00:14:12.519><c> then</c><00:14:12.720><c> the</c><00:14:12.880><c> token</c>

00:14:13.749 --> 00:14:13.759 align:start position:0%
the three spaces here and then the token
 

00:14:13.759 --> 00:14:16.749 align:start position:0%
the three spaces here and then the token
SPF<00:14:14.759><c> and</c><00:14:14.959><c> here</c><00:14:15.320><c> seven</c><00:14:16.079><c> spaces</c><00:14:16.440><c> were</c><00:14:16.600><c> all</c>

00:14:16.749 --> 00:14:16.759 align:start position:0%
SPF and here seven spaces were all
 

00:14:16.759 --> 00:14:18.790 align:start position:0%
SPF and here seven spaces were all
grouped<00:14:17.079><c> into</c><00:14:17.240><c> a</c><00:14:17.360><c> single</c><00:14:17.680><c> token</c><00:14:18.480><c> so</c><00:14:18.639><c> we're</c>

00:14:18.790 --> 00:14:18.800 align:start position:0%
grouped into a single token so we're
 

00:14:18.800 --> 00:14:20.189 align:start position:0%
grouped into a single token so we're
being<00:14:19.000><c> a</c><00:14:19.160><c> lot</c><00:14:19.320><c> more</c><00:14:19.519><c> efficient</c><00:14:19.800><c> in</c><00:14:19.959><c> how</c><00:14:20.040><c> we</c>

00:14:20.189 --> 00:14:20.199 align:start position:0%
being a lot more efficient in how we
 

00:14:20.199 --> 00:14:21.910 align:start position:0%
being a lot more efficient in how we
represent<00:14:20.600><c> Python</c><00:14:21.360><c> and</c><00:14:21.480><c> this</c><00:14:21.600><c> was</c><00:14:21.759><c> a</c>

00:14:21.910 --> 00:14:21.920 align:start position:0%
represent Python and this was a
 

00:14:21.920 --> 00:14:23.749 align:start position:0%
represent Python and this was a
deliberate<00:14:22.399><c> Choice</c><00:14:22.759><c> made</c><00:14:22.920><c> by</c><00:14:23.079><c> open</c><00:14:23.320><c> aai</c><00:14:23.639><c> when</c>

00:14:23.749 --> 00:14:23.759 align:start position:0%
deliberate Choice made by open aai when
 

00:14:23.759 --> 00:14:27.550 align:start position:0%
deliberate Choice made by open aai when
they<00:14:23.920><c> designed</c><00:14:24.360><c> the</c><00:14:24.480><c> gp4</c><00:14:25.480><c> tokenizer</c><00:14:26.480><c> and</c><00:14:27.040><c> they</c>

00:14:27.550 --> 00:14:27.560 align:start position:0%
they designed the gp4 tokenizer and they
 

00:14:27.560 --> 00:14:29.670 align:start position:0%
they designed the gp4 tokenizer and they
group<00:14:28.079><c> a</c><00:14:28.199><c> lot</c><00:14:28.320><c> more</c><00:14:28.920><c> space</c><00:14:29.120><c> into</c><00:14:29.279><c> a</c><00:14:29.360><c> single</c>

00:14:29.670 --> 00:14:29.680 align:start position:0%
group a lot more space into a single
 

00:14:29.680 --> 00:14:32.069 align:start position:0%
group a lot more space into a single
character<00:14:30.560><c> what</c><00:14:30.720><c> this</c><00:14:30.920><c> does</c><00:14:31.199><c> is</c><00:14:31.759><c> this</c>

00:14:32.069 --> 00:14:32.079 align:start position:0%
character what this does is this
 

00:14:32.079 --> 00:14:35.189 align:start position:0%
character what this does is this
densifies<00:14:32.880><c> Python</c><00:14:33.880><c> and</c><00:14:34.120><c> therefore</c><00:14:34.839><c> we</c><00:14:35.000><c> can</c>

00:14:35.189 --> 00:14:35.199 align:start position:0%
densifies Python and therefore we can
 

00:14:35.199 --> 00:14:38.110 align:start position:0%
densifies Python and therefore we can
attend<00:14:35.600><c> to</c><00:14:35.839><c> more</c><00:14:36.720><c> code</c><00:14:37.199><c> before</c><00:14:37.480><c> it</c><00:14:37.839><c> when</c><00:14:37.959><c> we're</c>

00:14:38.110 --> 00:14:38.120 align:start position:0%
attend to more code before it when we're
 

00:14:38.120 --> 00:14:39.710 align:start position:0%
attend to more code before it when we're
trying<00:14:38.279><c> to</c><00:14:38.440><c> predict</c><00:14:38.680><c> the</c><00:14:38.800><c> next</c><00:14:38.959><c> token</c><00:14:39.199><c> in</c><00:14:39.320><c> the</c>

00:14:39.710 --> 00:14:39.720 align:start position:0%
trying to predict the next token in the
 

00:14:39.720 --> 00:14:42.030 align:start position:0%
trying to predict the next token in the
sequence<00:14:40.720><c> and</c><00:14:40.839><c> so</c><00:14:41.120><c> the</c><00:14:41.279><c> Improvement</c><00:14:41.759><c> in</c><00:14:41.880><c> the</c>

00:14:42.030 --> 00:14:42.040 align:start position:0%
sequence and so the Improvement in the
 

00:14:42.040 --> 00:14:45.389 align:start position:0%
sequence and so the Improvement in the
python<00:14:42.680><c> coding</c><00:14:43.079><c> ability</c><00:14:43.639><c> from</c><00:14:43.839><c> gbt2</c><00:14:44.360><c> to</c><00:14:44.440><c> gp4</c>

00:14:45.389 --> 00:14:45.399 align:start position:0%
python coding ability from gbt2 to gp4
 

00:14:45.399 --> 00:14:47.069 align:start position:0%
python coding ability from gbt2 to gp4
is<00:14:45.560><c> not</c><00:14:45.720><c> just</c><00:14:45.880><c> a</c><00:14:46.000><c> matter</c><00:14:46.240><c> of</c><00:14:46.440><c> the</c><00:14:46.720><c> language</c>

00:14:47.069 --> 00:14:47.079 align:start position:0%
is not just a matter of the language
 

00:14:47.079 --> 00:14:48.829 align:start position:0%
is not just a matter of the language
model<00:14:47.440><c> and</c><00:14:47.560><c> the</c><00:14:47.639><c> architecture</c><00:14:48.320><c> and</c><00:14:48.440><c> the</c>

00:14:48.829 --> 00:14:48.839 align:start position:0%
model and the architecture and the
 

00:14:48.839 --> 00:14:50.749 align:start position:0%
model and the architecture and the
details<00:14:49.160><c> of</c><00:14:49.240><c> the</c><00:14:49.360><c> optimization</c><00:14:50.360><c> but</c><00:14:50.480><c> a</c><00:14:50.560><c> lot</c><00:14:50.680><c> of</c>

00:14:50.749 --> 00:14:50.759 align:start position:0%
details of the optimization but a lot of
 

00:14:50.759 --> 00:14:52.230 align:start position:0%
details of the optimization but a lot of
the<00:14:50.839><c> Improvement</c><00:14:51.320><c> here</c><00:14:51.480><c> is</c><00:14:51.639><c> also</c><00:14:51.839><c> coming</c><00:14:52.079><c> from</c>

00:14:52.230 --> 00:14:52.240 align:start position:0%
the Improvement here is also coming from
 

00:14:52.240 --> 00:14:54.230 align:start position:0%
the Improvement here is also coming from
the<00:14:52.360><c> design</c><00:14:52.720><c> of</c><00:14:52.800><c> the</c><00:14:52.920><c> tokenizer</c><00:14:53.759><c> and</c><00:14:53.920><c> how</c><00:14:54.079><c> it</c>

00:14:54.230 --> 00:14:54.240 align:start position:0%
the design of the tokenizer and how it
 

00:14:54.240 --> 00:14:56.949 align:start position:0%
the design of the tokenizer and how it
groups<00:14:54.800><c> characters</c><00:14:55.199><c> into</c><00:14:55.720><c> tokens</c><00:14:56.720><c> okay</c><00:14:56.839><c> so</c>

00:14:56.949 --> 00:14:56.959 align:start position:0%
groups characters into tokens okay so
 

00:14:56.959 --> 00:14:59.389 align:start position:0%
groups characters into tokens okay so
let's<00:14:57.160><c> now</c><00:14:57.279><c> start</c><00:14:57.519><c> writing</c><00:14:57.759><c> some</c><00:14:58.000><c> code</c>

00:14:59.389 --> 00:14:59.399 align:start position:0%
let's now start writing some code
 

00:14:59.399 --> 00:15:01.430 align:start position:0%
let's now start writing some code
so<00:14:59.759><c> remember</c><00:15:00.120><c> what</c><00:15:00.240><c> we</c><00:15:00.360><c> want</c><00:15:00.519><c> to</c><00:15:00.680><c> do</c><00:15:01.120><c> we</c><00:15:01.279><c> want</c>

00:15:01.430 --> 00:15:01.440 align:start position:0%
so remember what we want to do we want
 

00:15:01.440 --> 00:15:03.710 align:start position:0%
so remember what we want to do we want
to<00:15:01.600><c> take</c><00:15:01.839><c> strings</c><00:15:02.519><c> and</c><00:15:02.680><c> feed</c><00:15:03.000><c> them</c><00:15:03.279><c> into</c>

00:15:03.710 --> 00:15:03.720 align:start position:0%
to take strings and feed them into
 

00:15:03.720 --> 00:15:05.949 align:start position:0%
to take strings and feed them into
language<00:15:04.079><c> models</c><00:15:05.040><c> for</c><00:15:05.279><c> that</c><00:15:05.480><c> we</c><00:15:05.639><c> need</c><00:15:05.800><c> to</c>

00:15:05.949 --> 00:15:05.959 align:start position:0%
language models for that we need to
 

00:15:05.959 --> 00:15:08.790 align:start position:0%
language models for that we need to
somehow<00:15:06.360><c> tokenize</c><00:15:06.959><c> strings</c><00:15:07.639><c> into</c><00:15:08.240><c> some</c>

00:15:08.790 --> 00:15:08.800 align:start position:0%
somehow tokenize strings into some
 

00:15:08.800 --> 00:15:12.350 align:start position:0%
somehow tokenize strings into some
integers<00:15:09.800><c> in</c><00:15:09.959><c> some</c><00:15:10.399><c> fixed</c><00:15:11.160><c> vocabulary</c><00:15:12.160><c> and</c>

00:15:12.350 --> 00:15:12.360 align:start position:0%
integers in some fixed vocabulary and
 

00:15:12.360 --> 00:15:14.230 align:start position:0%
integers in some fixed vocabulary and
then<00:15:12.720><c> we</c><00:15:12.800><c> will</c><00:15:13.000><c> use</c><00:15:13.240><c> those</c><00:15:13.399><c> integers</c><00:15:13.839><c> to</c><00:15:14.120><c> make</c>

00:15:14.230 --> 00:15:14.240 align:start position:0%
then we will use those integers to make
 

00:15:14.240 --> 00:15:16.749 align:start position:0%
then we will use those integers to make
a<00:15:14.399><c> look</c><00:15:14.519><c> up</c><00:15:14.720><c> into</c><00:15:14.920><c> a</c><00:15:15.000><c> lookup</c><00:15:15.360><c> table</c><00:15:15.800><c> of</c><00:15:16.079><c> vectors</c>

00:15:16.749 --> 00:15:16.759 align:start position:0%
a look up into a lookup table of vectors
 

00:15:16.759 --> 00:15:17.990 align:start position:0%
a look up into a lookup table of vectors
and<00:15:16.880><c> feed</c><00:15:17.199><c> those</c><00:15:17.360><c> vectors</c><00:15:17.680><c> into</c><00:15:17.880><c> the</c>

00:15:17.990 --> 00:15:18.000 align:start position:0%
and feed those vectors into the
 

00:15:18.000 --> 00:15:21.350 align:start position:0%
and feed those vectors into the
Transformer<00:15:18.839><c> as</c><00:15:18.959><c> an</c><00:15:19.360><c> input</c><00:15:20.360><c> now</c><00:15:21.000><c> the</c><00:15:21.120><c> reason</c>

00:15:21.350 --> 00:15:21.360 align:start position:0%
Transformer as an input now the reason
 

00:15:21.360 --> 00:15:22.710 align:start position:0%
Transformer as an input now the reason
this<00:15:21.519><c> gets</c><00:15:21.680><c> a</c><00:15:21.759><c> little</c><00:15:21.880><c> bit</c><00:15:22.000><c> tricky</c><00:15:22.360><c> of</c><00:15:22.440><c> course</c>

00:15:22.710 --> 00:15:22.720 align:start position:0%
this gets a little bit tricky of course
 

00:15:22.720 --> 00:15:23.990 align:start position:0%
this gets a little bit tricky of course
is<00:15:22.839><c> that</c><00:15:22.920><c> we</c><00:15:23.040><c> don't</c><00:15:23.199><c> just</c><00:15:23.320><c> want</c><00:15:23.440><c> to</c><00:15:23.600><c> support</c>

00:15:23.990 --> 00:15:24.000 align:start position:0%
is that we don't just want to support
 

00:15:24.000 --> 00:15:26.110 align:start position:0%
is that we don't just want to support
the<00:15:24.120><c> simple</c><00:15:24.560><c> English</c><00:15:24.959><c> alphabet</c><00:15:25.720><c> we</c><00:15:25.839><c> want</c><00:15:25.959><c> to</c>

00:15:26.110 --> 00:15:26.120 align:start position:0%
the simple English alphabet we want to
 

00:15:26.120 --> 00:15:28.110 align:start position:0%
the simple English alphabet we want to
support<00:15:26.480><c> different</c><00:15:26.720><c> kinds</c><00:15:26.920><c> of</c><00:15:27.040><c> languages</c><00:15:27.880><c> so</c>

00:15:28.110 --> 00:15:28.120 align:start position:0%
support different kinds of languages so
 

00:15:28.120 --> 00:15:31.629 align:start position:0%
support different kinds of languages so
this<00:15:28.199><c> is</c><00:15:28.680><c> anango</c><00:15:29.639><c> in</c><00:15:29.839><c> Korean</c><00:15:30.480><c> which</c><00:15:30.600><c> is</c><00:15:30.800><c> hello</c>

00:15:31.629 --> 00:15:31.639 align:start position:0%
this is anango in Korean which is hello
 

00:15:31.639 --> 00:15:32.990 align:start position:0%
this is anango in Korean which is hello
and<00:15:31.759><c> we</c><00:15:31.880><c> also</c><00:15:32.040><c> want</c><00:15:32.199><c> to</c><00:15:32.360><c> support</c><00:15:32.680><c> many</c><00:15:32.839><c> kinds</c>

00:15:32.990 --> 00:15:33.000 align:start position:0%
and we also want to support many kinds
 

00:15:33.000 --> 00:15:34.710 align:start position:0%
and we also want to support many kinds
of<00:15:33.120><c> special</c><00:15:33.399><c> characters</c><00:15:33.880><c> that</c><00:15:34.120><c> we</c><00:15:34.279><c> might</c><00:15:34.480><c> find</c>

00:15:34.710 --> 00:15:34.720 align:start position:0%
of special characters that we might find
 

00:15:34.720 --> 00:15:37.309 align:start position:0%
of special characters that we might find
on<00:15:34.839><c> the</c><00:15:34.959><c> internet</c><00:15:35.680><c> for</c><00:15:35.839><c> example</c>

00:15:37.309 --> 00:15:37.319 align:start position:0%
on the internet for example
 

00:15:37.319 --> 00:15:41.470 align:start position:0%
on the internet for example
Emoji<00:15:38.319><c> so</c><00:15:38.920><c> how</c><00:15:39.040><c> do</c><00:15:39.199><c> we</c><00:15:39.360><c> feed</c><00:15:39.880><c> this</c><00:15:40.120><c> text</c><00:15:40.480><c> into</c>

00:15:41.470 --> 00:15:41.480 align:start position:0%
Emoji so how do we feed this text into
 

00:15:41.480 --> 00:15:42.189 align:start position:0%
Emoji so how do we feed this text into
uh

00:15:42.189 --> 00:15:42.199 align:start position:0%
uh
 

00:15:42.199 --> 00:15:44.470 align:start position:0%
uh
Transformers<00:15:43.199><c> well</c><00:15:43.680><c> how's</c><00:15:44.000><c> the</c><00:15:44.120><c> what</c><00:15:44.199><c> is</c><00:15:44.360><c> this</c>

00:15:44.470 --> 00:15:44.480 align:start position:0%
Transformers well how's the what is this
 

00:15:44.480 --> 00:15:46.550 align:start position:0%
Transformers well how's the what is this
text<00:15:44.839><c> anyway</c><00:15:45.240><c> in</c><00:15:45.440><c> Python</c><00:15:46.040><c> so</c><00:15:46.160><c> if</c><00:15:46.240><c> you</c><00:15:46.360><c> go</c><00:15:46.440><c> to</c>

00:15:46.550 --> 00:15:46.560 align:start position:0%
text anyway in Python so if you go to
 

00:15:46.560 --> 00:15:49.590 align:start position:0%
text anyway in Python so if you go to
the<00:15:46.759><c> documentation</c><00:15:47.440><c> of</c><00:15:47.880><c> a</c><00:15:48.079><c> string</c><00:15:48.519><c> in</c><00:15:48.720><c> Python</c>

00:15:49.590 --> 00:15:49.600 align:start position:0%
the documentation of a string in Python
 

00:15:49.600 --> 00:15:51.509 align:start position:0%
the documentation of a string in Python
you<00:15:49.720><c> can</c><00:15:49.839><c> see</c><00:15:50.120><c> that</c><00:15:50.319><c> strings</c><00:15:50.680><c> are</c><00:15:50.959><c> immutable</c>

00:15:51.509 --> 00:15:51.519 align:start position:0%
you can see that strings are immutable
 

00:15:51.519 --> 00:15:54.110 align:start position:0%
you can see that strings are immutable
sequences<00:15:52.319><c> of</c><00:15:52.680><c> Unicode</c><00:15:53.279><c> code</c>

00:15:54.110 --> 00:15:54.120 align:start position:0%
sequences of Unicode code
 

00:15:54.120 --> 00:15:57.870 align:start position:0%
sequences of Unicode code
points<00:15:55.120><c> okay</c><00:15:55.360><c> what</c><00:15:55.480><c> are</c><00:15:55.680><c> Unicode</c><00:15:56.199><c> code</c><00:15:56.880><c> points</c>

00:15:57.870 --> 00:15:57.880 align:start position:0%
points okay what are Unicode code points
 

00:15:57.880 --> 00:16:01.470 align:start position:0%
points okay what are Unicode code points
we<00:15:58.000><c> can</c><00:15:58.120><c> go</c><00:15:58.240><c> to</c><00:15:58.920><c> PDF</c><00:15:59.920><c> so</c><00:16:00.160><c> Unicode</c><00:16:00.800><c> code</c><00:16:01.120><c> points</c>

00:16:01.470 --> 00:16:01.480 align:start position:0%
we can go to PDF so Unicode code points
 

00:16:01.480 --> 00:16:04.670 align:start position:0%
we can go to PDF so Unicode code points
are<00:16:01.720><c> defined</c><00:16:02.360><c> by</c><00:16:02.519><c> the</c><00:16:02.639><c> Unicode</c><00:16:03.480><c> Consortium</c><00:16:04.480><c> as</c>

00:16:04.670 --> 00:16:04.680 align:start position:0%
are defined by the Unicode Consortium as
 

00:16:04.680 --> 00:16:07.550 align:start position:0%
are defined by the Unicode Consortium as
part<00:16:04.880><c> of</c><00:16:05.160><c> the</c><00:16:05.319><c> Unicode</c><00:16:06.240><c> standard</c><00:16:07.240><c> and</c><00:16:07.399><c> what</c>

00:16:07.550 --> 00:16:07.560 align:start position:0%
part of the Unicode standard and what
 

00:16:07.560 --> 00:16:08.990 align:start position:0%
part of the Unicode standard and what
this<00:16:07.680><c> is</c><00:16:07.920><c> really</c><00:16:08.199><c> is</c><00:16:08.360><c> that</c><00:16:08.480><c> it's</c><00:16:08.680><c> just</c><00:16:08.800><c> a</c>

00:16:08.990 --> 00:16:09.000 align:start position:0%
this is really is that it's just a
 

00:16:09.000 --> 00:16:11.829 align:start position:0%
this is really is that it's just a
definition<00:16:09.680><c> of</c><00:16:09.959><c> roughly</c><00:16:10.319><c> 150,000</c><00:16:11.319><c> characters</c>

00:16:11.829 --> 00:16:11.839 align:start position:0%
definition of roughly 150,000 characters
 

00:16:11.839 --> 00:16:14.710 align:start position:0%
definition of roughly 150,000 characters
right<00:16:12.079><c> now</c><00:16:13.079><c> and</c><00:16:13.759><c> roughly</c><00:16:14.040><c> speaking</c><00:16:14.360><c> what</c><00:16:14.560><c> they</c>

00:16:14.710 --> 00:16:14.720 align:start position:0%
right now and roughly speaking what they
 

00:16:14.720 --> 00:16:17.550 align:start position:0%
right now and roughly speaking what they
look<00:16:14.920><c> like</c><00:16:15.240><c> and</c><00:16:15.440><c> what</c><00:16:15.720><c> integers</c><00:16:16.720><c> um</c><00:16:16.959><c> represent</c>

00:16:17.550 --> 00:16:17.560 align:start position:0%
look like and what integers um represent
 

00:16:17.560 --> 00:16:19.710 align:start position:0%
look like and what integers um represent
those<00:16:17.800><c> characters</c><00:16:18.600><c> so</c><00:16:18.720><c> it</c><00:16:18.800><c> says</c><00:16:19.000><c> 150,000</c>

00:16:19.710 --> 00:16:19.720 align:start position:0%
those characters so it says 150,000
 

00:16:19.720 --> 00:16:22.629 align:start position:0%
those characters so it says 150,000
characters<00:16:20.160><c> across</c><00:16:20.920><c> 161</c><00:16:21.319><c> scripts</c><00:16:22.040><c> as</c><00:16:22.199><c> of</c>

00:16:22.629 --> 00:16:22.639 align:start position:0%
characters across 161 scripts as of
 

00:16:22.639 --> 00:16:24.710 align:start position:0%
characters across 161 scripts as of
right<00:16:22.839><c> now</c><00:16:23.519><c> so</c><00:16:23.680><c> if</c><00:16:23.759><c> you</c><00:16:23.839><c> scroll</c><00:16:24.160><c> down</c><00:16:24.440><c> here</c><00:16:24.600><c> you</c>

00:16:24.710 --> 00:16:24.720 align:start position:0%
right now so if you scroll down here you
 

00:16:24.720 --> 00:16:26.269 align:start position:0%
right now so if you scroll down here you
can<00:16:24.839><c> see</c><00:16:25.040><c> that</c><00:16:25.199><c> the</c><00:16:25.360><c> standard</c><00:16:25.759><c> is</c><00:16:25.920><c> very</c><00:16:26.079><c> much</c>

00:16:26.269 --> 00:16:26.279 align:start position:0%
can see that the standard is very much
 

00:16:26.279 --> 00:16:28.710 align:start position:0%
can see that the standard is very much
alive<00:16:27.199><c> the</c><00:16:27.319><c> latest</c><00:16:27.639><c> standard</c><00:16:27.959><c> 15.1</c><00:16:28.600><c> in</c>

00:16:28.710 --> 00:16:28.720 align:start position:0%
alive the latest standard 15.1 in
 

00:16:28.720 --> 00:16:30.189 align:start position:0%
alive the latest standard 15.1 in
September

00:16:30.189 --> 00:16:30.199 align:start position:0%
September
 

00:16:30.199 --> 00:16:33.910 align:start position:0%
September
2023<00:16:31.199><c> and</c><00:16:32.199><c> basically</c><00:16:32.600><c> this</c><00:16:32.720><c> is</c><00:16:32.880><c> just</c><00:16:33.000><c> a</c><00:16:33.199><c> way</c><00:16:33.360><c> to</c>

00:16:33.910 --> 00:16:33.920 align:start position:0%
2023 and basically this is just a way to
 

00:16:33.920 --> 00:16:36.910 align:start position:0%
2023 and basically this is just a way to
define<00:16:34.920><c> lots</c><00:16:35.160><c> of</c><00:16:35.480><c> types</c><00:16:35.680><c> of</c>

00:16:36.910 --> 00:16:36.920 align:start position:0%
define lots of types of
 

00:16:36.920 --> 00:16:39.150 align:start position:0%
define lots of types of
characters<00:16:37.920><c> like</c><00:16:38.079><c> for</c><00:16:38.240><c> example</c><00:16:38.839><c> all</c><00:16:39.000><c> these</c>

00:16:39.150 --> 00:16:39.160 align:start position:0%
characters like for example all these
 

00:16:39.160 --> 00:16:41.870 align:start position:0%
characters like for example all these
characters<00:16:39.519><c> across</c><00:16:39.800><c> different</c><00:16:40.360><c> scripts</c><00:16:41.360><c> so</c>

00:16:41.870 --> 00:16:41.880 align:start position:0%
characters across different scripts so
 

00:16:41.880 --> 00:16:44.030 align:start position:0%
characters across different scripts so
the<00:16:42.000><c> way</c><00:16:42.160><c> we</c><00:16:42.279><c> can</c><00:16:42.639><c> access</c><00:16:43.120><c> the</c><00:16:43.240><c> unic</c><00:16:43.519><c> code</c><00:16:43.759><c> code</c>

00:16:44.030 --> 00:16:44.040 align:start position:0%
the way we can access the unic code code
 

00:16:44.040 --> 00:16:45.949 align:start position:0%
the way we can access the unic code code
Point<00:16:44.240><c> given</c><00:16:44.639><c> Single</c><00:16:45.000><c> Character</c><00:16:45.480><c> is</c><00:16:45.600><c> by</c><00:16:45.720><c> using</c>

00:16:45.949 --> 00:16:45.959 align:start position:0%
Point given Single Character is by using
 

00:16:45.959 --> 00:16:48.189 align:start position:0%
Point given Single Character is by using
the<00:16:46.040><c> or</c><00:16:46.319><c> function</c><00:16:46.600><c> in</c><00:16:46.759><c> Python</c><00:16:47.519><c> so</c><00:16:47.720><c> for</c><00:16:47.880><c> example</c>

00:16:48.189 --> 00:16:48.199 align:start position:0%
the or function in Python so for example
 

00:16:48.199 --> 00:16:51.269 align:start position:0%
the or function in Python so for example
I<00:16:48.279><c> can</c><00:16:48.600><c> pass</c><00:16:48.800><c> in</c><00:16:48.959><c> Ord</c><00:16:49.199><c> of</c><00:16:49.639><c> H</c><00:16:50.639><c> and</c><00:16:50.880><c> I</c><00:16:50.959><c> can</c><00:16:51.079><c> see</c>

00:16:51.269 --> 00:16:51.279 align:start position:0%
I can pass in Ord of H and I can see
 

00:16:51.279 --> 00:16:54.710 align:start position:0%
I can pass in Ord of H and I can see
that<00:16:51.440><c> for</c><00:16:51.600><c> the</c><00:16:52.040><c> Single</c><00:16:52.720><c> Character</c><00:16:53.160><c> H</c><00:16:54.040><c> the</c><00:16:54.360><c> unic</c>

00:16:54.710 --> 00:16:54.720 align:start position:0%
that for the Single Character H the unic
 

00:16:54.720 --> 00:16:56.470 align:start position:0%
that for the Single Character H the unic
code<00:16:54.920><c> code</c><00:16:55.240><c> point</c><00:16:55.519><c> is</c>

00:16:56.470 --> 00:16:56.480 align:start position:0%
code code point is
 

00:16:56.480 --> 00:17:00.389 align:start position:0%
code code point is
104<00:16:57.480><c> okay</c><00:16:58.639><c> um</c><00:16:59.199><c> but</c><00:16:59.360><c> this</c><00:16:59.480><c> can</c><00:16:59.600><c> be</c><00:16:59.839><c> arbitr</c>

00:17:00.389 --> 00:17:00.399 align:start position:0%
104 okay um but this can be arbitr
 

00:17:00.399 --> 00:17:02.150 align:start position:0%
104 okay um but this can be arbitr
complicated<00:17:00.880><c> so</c><00:17:01.040><c> we</c><00:17:01.160><c> can</c><00:17:01.360><c> take</c><00:17:01.560><c> for</c><00:17:01.759><c> example</c>

00:17:02.150 --> 00:17:02.160 align:start position:0%
complicated so we can take for example
 

00:17:02.160 --> 00:17:04.150 align:start position:0%
complicated so we can take for example
our<00:17:02.399><c> Emoji</c><00:17:02.880><c> here</c><00:17:03.519><c> and</c><00:17:03.639><c> we</c><00:17:03.720><c> can</c><00:17:03.839><c> see</c><00:17:03.959><c> that</c><00:17:04.079><c> the</c>

00:17:04.150 --> 00:17:04.160 align:start position:0%
our Emoji here and we can see that the
 

00:17:04.160 --> 00:17:06.390 align:start position:0%
our Emoji here and we can see that the
code<00:17:04.400><c> point</c><00:17:04.600><c> for</c><00:17:04.799><c> this</c><00:17:04.919><c> one</c><00:17:05.319><c> is</c>

00:17:06.390 --> 00:17:06.400 align:start position:0%
code point for this one is
 

00:17:06.400 --> 00:17:10.350 align:start position:0%
code point for this one is
128,000<00:17:07.400><c> or</c><00:17:07.600><c> we</c><00:17:07.679><c> can</c><00:17:07.919><c> take</c>

00:17:10.350 --> 00:17:10.360 align:start position:0%
128,000 or we can take
 

00:17:10.360 --> 00:17:13.710 align:start position:0%
128,000 or we can take
un<00:17:11.360><c> and</c><00:17:11.480><c> this</c><00:17:11.600><c> is</c><00:17:12.120><c> 50,000</c><00:17:13.120><c> now</c><00:17:13.280><c> keep</c><00:17:13.439><c> in</c><00:17:13.520><c> mind</c>

00:17:13.710 --> 00:17:13.720 align:start position:0%
un and this is 50,000 now keep in mind
 

00:17:13.720 --> 00:17:16.710 align:start position:0%
un and this is 50,000 now keep in mind
you<00:17:13.799><c> can't</c><00:17:14.000><c> plug</c><00:17:14.199><c> in</c><00:17:14.799><c> strings</c><00:17:15.319><c> here</c><00:17:15.919><c> because</c>

00:17:16.710 --> 00:17:16.720 align:start position:0%
you can't plug in strings here because
 

00:17:16.720 --> 00:17:18.429 align:start position:0%
you can't plug in strings here because
you<00:17:17.079><c> uh</c><00:17:17.199><c> this</c><00:17:17.319><c> doesn't</c><00:17:17.559><c> have</c><00:17:17.679><c> a</c><00:17:17.799><c> single</c><00:17:18.120><c> code</c>

00:17:18.429 --> 00:17:18.439 align:start position:0%
you uh this doesn't have a single code
 

00:17:18.439 --> 00:17:20.669 align:start position:0%
you uh this doesn't have a single code
point<00:17:18.919><c> it</c><00:17:19.039><c> only</c><00:17:19.240><c> takes</c><00:17:19.439><c> a</c><00:17:19.559><c> single</c><00:17:20.079><c> uni</c><00:17:20.439><c> code</c>

00:17:20.669 --> 00:17:20.679 align:start position:0%
point it only takes a single uni code
 

00:17:20.679 --> 00:17:23.949 align:start position:0%
point it only takes a single uni code
code<00:17:20.959><c> Point</c><00:17:21.199><c> character</c><00:17:22.000><c> and</c><00:17:22.160><c> tells</c><00:17:22.360><c> you</c><00:17:22.640><c> its</c>

00:17:23.949 --> 00:17:23.959 align:start position:0%
code Point character and tells you its
 

00:17:23.959 --> 00:17:26.789 align:start position:0%
code Point character and tells you its
integer<00:17:24.959><c> so</c><00:17:25.240><c> in</c><00:17:25.439><c> this</c><00:17:25.600><c> way</c><00:17:25.760><c> we</c><00:17:25.880><c> can</c><00:17:26.039><c> look</c>

00:17:26.789 --> 00:17:26.799 align:start position:0%
integer so in this way we can look
 

00:17:26.799 --> 00:17:30.070 align:start position:0%
integer so in this way we can look
up<00:17:27.799><c> all</c><00:17:28.039><c> the</c><00:17:28.679><c> um</c><00:17:29.080><c> characters</c><00:17:29.559><c> of</c><00:17:29.760><c> this</c>

00:17:30.070 --> 00:17:30.080 align:start position:0%
up all the um characters of this
 

00:17:30.080 --> 00:17:32.150 align:start position:0%
up all the um characters of this
specific<00:17:30.480><c> string</c><00:17:30.799><c> and</c><00:17:30.960><c> their</c><00:17:31.160><c> code</c><00:17:31.360><c> points</c><00:17:31.960><c> so</c>

00:17:32.150 --> 00:17:32.160 align:start position:0%
specific string and their code points so
 

00:17:32.160 --> 00:17:36.750 align:start position:0%
specific string and their code points so
or<00:17:32.520><c> of</c><00:17:32.679><c> X</c><00:17:33.280><c> forx</c><00:17:33.880><c> in</c><00:17:34.240><c> this</c><00:17:34.480><c> string</c><00:17:35.480><c> and</c><00:17:35.679><c> we</c><00:17:35.919><c> get</c>

00:17:36.750 --> 00:17:36.760 align:start position:0%
or of X forx in this string and we get
 

00:17:36.760 --> 00:17:40.350 align:start position:0%
or of X forx in this string and we get
this<00:17:36.919><c> encoding</c><00:17:37.640><c> here</c><00:17:38.640><c> now</c><00:17:39.640><c> see</c><00:17:39.960><c> here</c><00:17:40.120><c> we've</c>

00:17:40.350 --> 00:17:40.360 align:start position:0%
this encoding here now see here we've
 

00:17:40.360 --> 00:17:42.190 align:start position:0%
this encoding here now see here we've
already<00:17:40.640><c> turned</c><00:17:41.160><c> the</c><00:17:41.320><c> raw</c><00:17:41.600><c> code</c><00:17:41.840><c> points</c>

00:17:42.190 --> 00:17:42.200 align:start position:0%
already turned the raw code points
 

00:17:42.200 --> 00:17:44.430 align:start position:0%
already turned the raw code points
already<00:17:42.520><c> have</c><00:17:42.679><c> integers</c><00:17:43.679><c> so</c><00:17:43.880><c> why</c><00:17:44.000><c> can't</c><00:17:44.200><c> we</c>

00:17:44.430 --> 00:17:44.440 align:start position:0%
already have integers so why can't we
 

00:17:44.440 --> 00:17:46.830 align:start position:0%
already have integers so why can't we
simply<00:17:44.720><c> just</c><00:17:44.840><c> use</c><00:17:45.120><c> these</c><00:17:45.320><c> integers</c><00:17:46.240><c> and</c><00:17:46.640><c> not</c>

00:17:46.830 --> 00:17:46.840 align:start position:0%
simply just use these integers and not
 

00:17:46.840 --> 00:17:48.549 align:start position:0%
simply just use these integers and not
have<00:17:47.000><c> any</c><00:17:47.160><c> tokenization</c><00:17:47.720><c> at</c><00:17:47.799><c> all</c><00:17:48.240><c> why</c><00:17:48.360><c> can't</c>

00:17:48.549 --> 00:17:48.559 align:start position:0%
have any tokenization at all why can't
 

00:17:48.559 --> 00:17:50.630 align:start position:0%
have any tokenization at all why can't
we<00:17:48.679><c> just</c><00:17:48.840><c> use</c><00:17:49.039><c> this</c><00:17:49.280><c> natively</c><00:17:49.960><c> as</c><00:17:50.160><c> is</c><00:17:50.400><c> and</c><00:17:50.520><c> just</c>

00:17:50.630 --> 00:17:50.640 align:start position:0%
we just use this natively as is and just
 

00:17:50.640 --> 00:17:52.870 align:start position:0%
we just use this natively as is and just
use<00:17:50.799><c> the</c><00:17:50.880><c> code</c><00:17:51.160><c> Point</c><00:17:52.160><c> well</c><00:17:52.320><c> one</c><00:17:52.520><c> reason</c><00:17:52.760><c> for</c>

00:17:52.870 --> 00:17:52.880 align:start position:0%
use the code Point well one reason for
 

00:17:52.880 --> 00:17:54.350 align:start position:0%
use the code Point well one reason for
that<00:17:53.039><c> of</c><00:17:53.160><c> course</c><00:17:53.320><c> is</c><00:17:53.480><c> that</c><00:17:53.600><c> the</c><00:17:53.720><c> vocabulary</c><00:17:54.240><c> in</c>

00:17:54.350 --> 00:17:54.360 align:start position:0%
that of course is that the vocabulary in
 

00:17:54.360 --> 00:17:56.789 align:start position:0%
that of course is that the vocabulary in
that<00:17:54.520><c> case</c><00:17:54.679><c> would</c><00:17:54.840><c> be</c><00:17:55.039><c> quite</c><00:17:55.280><c> long</c><00:17:56.039><c> so</c><00:17:56.440><c> in</c><00:17:56.600><c> this</c>

00:17:56.789 --> 00:17:56.799 align:start position:0%
that case would be quite long so in this
 

00:17:56.799 --> 00:17:58.669 align:start position:0%
that case would be quite long so in this
case<00:17:57.200><c> for</c><00:17:57.400><c> Unicode</c><00:17:58.200><c> the</c><00:17:58.400><c> this</c><00:17:58.480><c> is</c><00:17:58.559><c> a</c>

00:17:58.669 --> 00:17:58.679 align:start position:0%
case for Unicode the this is a
 

00:17:58.679 --> 00:17:59.789 align:start position:0%
case for Unicode the this is a
vocabulary<00:17:59.159><c> of</c>

00:17:59.789 --> 00:17:59.799 align:start position:0%
vocabulary of
 

00:17:59.799 --> 00:18:02.630 align:start position:0%
vocabulary of
150,000<00:18:00.799><c> different</c><00:18:01.080><c> code</c><00:18:01.320><c> points</c><00:18:02.240><c> but</c><00:18:02.440><c> more</c>

00:18:02.630 --> 00:18:02.640 align:start position:0%
150,000 different code points but more
 

00:18:02.640 --> 00:18:05.029 align:start position:0%
150,000 different code points but more
worryingly<00:18:03.200><c> than</c><00:18:03.400><c> that</c><00:18:03.600><c> I</c><00:18:03.720><c> think</c><00:18:04.200><c> the</c><00:18:04.320><c> Unicode</c>

00:18:05.029 --> 00:18:05.039 align:start position:0%
worryingly than that I think the Unicode
 

00:18:05.039 --> 00:18:07.029 align:start position:0%
worryingly than that I think the Unicode
standard<00:18:05.600><c> is</c><00:18:05.760><c> very</c><00:18:05.919><c> much</c><00:18:06.080><c> alive</c><00:18:06.520><c> and</c><00:18:06.640><c> it</c><00:18:06.799><c> keeps</c>

00:18:07.029 --> 00:18:07.039 align:start position:0%
standard is very much alive and it keeps
 

00:18:07.039 --> 00:18:09.230 align:start position:0%
standard is very much alive and it keeps
changing<00:18:08.039><c> and</c><00:18:08.200><c> so</c><00:18:08.440><c> it's</c><00:18:08.600><c> not</c><00:18:08.799><c> kind</c><00:18:08.919><c> of</c><00:18:09.000><c> a</c>

00:18:09.230 --> 00:18:09.240 align:start position:0%
changing and so it's not kind of a
 

00:18:09.240 --> 00:18:11.070 align:start position:0%
changing and so it's not kind of a
stable<00:18:09.799><c> representation</c><00:18:10.400><c> necessarily</c><00:18:10.919><c> that</c>

00:18:11.070 --> 00:18:11.080 align:start position:0%
stable representation necessarily that
 

00:18:11.080 --> 00:18:13.870 align:start position:0%
stable representation necessarily that
we<00:18:11.200><c> may</c><00:18:11.360><c> want</c><00:18:11.440><c> to</c><00:18:11.600><c> use</c><00:18:12.240><c> directly</c><00:18:13.240><c> so</c><00:18:13.480><c> for</c><00:18:13.679><c> those</c>

00:18:13.870 --> 00:18:13.880 align:start position:0%
we may want to use directly so for those
 

00:18:13.880 --> 00:18:15.750 align:start position:0%
we may want to use directly so for those
reasons<00:18:14.159><c> we</c><00:18:14.280><c> need</c><00:18:14.480><c> something</c><00:18:14.799><c> a</c><00:18:14.919><c> bit</c><00:18:15.120><c> better</c>

00:18:15.750 --> 00:18:15.760 align:start position:0%
reasons we need something a bit better
 

00:18:15.760 --> 00:18:17.630 align:start position:0%
reasons we need something a bit better
so<00:18:15.919><c> to</c><00:18:16.039><c> find</c><00:18:16.240><c> something</c><00:18:16.520><c> better</c><00:18:16.760><c> we</c><00:18:16.880><c> turn</c><00:18:17.080><c> to</c>

00:18:17.630 --> 00:18:17.640 align:start position:0%
so to find something better we turn to
 

00:18:17.640 --> 00:18:19.750 align:start position:0%
so to find something better we turn to
encodings<00:18:18.640><c> so</c><00:18:18.760><c> if</c><00:18:18.840><c> we</c><00:18:18.960><c> go</c><00:18:19.039><c> to</c><00:18:19.159><c> the</c><00:18:19.240><c> Wikipedia</c>

00:18:19.750 --> 00:18:19.760 align:start position:0%
encodings so if we go to the Wikipedia
 

00:18:19.760 --> 00:18:21.270 align:start position:0%
encodings so if we go to the Wikipedia
page<00:18:20.000><c> here</c><00:18:20.159><c> we</c><00:18:20.280><c> see</c><00:18:20.520><c> that</c><00:18:20.679><c> the</c><00:18:20.799><c> Unicode</c>

00:18:21.270 --> 00:18:21.280 align:start position:0%
page here we see that the Unicode
 

00:18:21.280 --> 00:18:23.789 align:start position:0%
page here we see that the Unicode
consortion<00:18:22.159><c> defines</c><00:18:22.880><c> three</c><00:18:23.320><c> types</c><00:18:23.559><c> of</c>

00:18:23.789 --> 00:18:23.799 align:start position:0%
consortion defines three types of
 

00:18:23.799 --> 00:18:27.950 align:start position:0%
consortion defines three types of
encodings<00:18:24.760><c> utf8</c><00:18:25.480><c> UTF</c><00:18:25.919><c> 16</c><00:18:26.200><c> and</c><00:18:26.320><c> UTF</c><00:18:26.799><c> 32</c><00:18:27.799><c> these</c>

00:18:27.950 --> 00:18:27.960 align:start position:0%
encodings utf8 UTF 16 and UTF 32 these
 

00:18:27.960 --> 00:18:30.710 align:start position:0%
encodings utf8 UTF 16 and UTF 32 these
encoding<00:18:28.799><c> are</c><00:18:29.559><c> the</c><00:18:29.760><c> way</c><00:18:30.080><c> by</c><00:18:30.240><c> which</c><00:18:30.400><c> we</c><00:18:30.520><c> can</c>

00:18:30.710 --> 00:18:30.720 align:start position:0%
encoding are the way by which we can
 

00:18:30.720 --> 00:18:33.470 align:start position:0%
encoding are the way by which we can
take<00:18:30.960><c> Unicode</c><00:18:31.559><c> text</c><00:18:32.320><c> and</c><00:18:32.559><c> translate</c><00:18:33.039><c> it</c><00:18:33.240><c> into</c>

00:18:33.470 --> 00:18:33.480 align:start position:0%
take Unicode text and translate it into
 

00:18:33.480 --> 00:18:37.190 align:start position:0%
take Unicode text and translate it into
binary<00:18:33.880><c> data</c><00:18:34.240><c> or</c><00:18:34.480><c> by</c><00:18:35.039><c> streams</c><00:18:36.039><c> utf8</c><00:18:36.679><c> is</c><00:18:36.840><c> by</c><00:18:37.000><c> far</c>

00:18:37.190 --> 00:18:37.200 align:start position:0%
binary data or by streams utf8 is by far
 

00:18:37.200 --> 00:18:39.950 align:start position:0%
binary data or by streams utf8 is by far
the<00:18:37.320><c> most</c><00:18:37.760><c> common</c><00:18:38.760><c> uh</c><00:18:38.840><c> so</c><00:18:39.000><c> this</c><00:18:39.080><c> is</c><00:18:39.200><c> the</c><00:18:39.280><c> utf8</c>

00:18:39.950 --> 00:18:39.960 align:start position:0%
the most common uh so this is the utf8
 

00:18:39.960 --> 00:18:41.990 align:start position:0%
the most common uh so this is the utf8
page<00:18:40.520><c> now</c><00:18:40.640><c> this</c><00:18:40.799><c> Wikipedia</c><00:18:41.240><c> page</c><00:18:41.440><c> is</c><00:18:41.600><c> actually</c>

00:18:41.990 --> 00:18:42.000 align:start position:0%
page now this Wikipedia page is actually
 

00:18:42.000 --> 00:18:44.390 align:start position:0%
page now this Wikipedia page is actually
quite<00:18:42.440><c> long</c><00:18:43.320><c> but</c><00:18:43.559><c> what's</c><00:18:43.799><c> important</c><00:18:44.080><c> for</c><00:18:44.200><c> our</c>

00:18:44.390 --> 00:18:44.400 align:start position:0%
quite long but what's important for our
 

00:18:44.400 --> 00:18:46.430 align:start position:0%
quite long but what's important for our
purposes<00:18:44.880><c> is</c><00:18:45.000><c> that</c><00:18:45.159><c> utf8</c><00:18:45.799><c> takes</c><00:18:46.039><c> every</c><00:18:46.200><c> single</c>

00:18:46.430 --> 00:18:46.440 align:start position:0%
purposes is that utf8 takes every single
 

00:18:46.440 --> 00:18:49.630 align:start position:0%
purposes is that utf8 takes every single
Cod<00:18:46.799><c> point</c><00:18:47.799><c> and</c><00:18:47.919><c> it</c><00:18:48.080><c> translates</c><00:18:48.600><c> it</c><00:18:48.880><c> to</c><00:18:49.240><c> a</c><00:18:49.400><c> by</c>

00:18:49.630 --> 00:18:49.640 align:start position:0%
Cod point and it translates it to a by
 

00:18:49.640 --> 00:18:52.350 align:start position:0%
Cod point and it translates it to a by
stream<00:18:50.480><c> and</c><00:18:50.640><c> this</c><00:18:50.799><c> by</c><00:18:51.039><c> stream</c><00:18:51.400><c> is</c><00:18:51.559><c> between</c><00:18:51.880><c> one</c>

00:18:52.350 --> 00:18:52.360 align:start position:0%
stream and this by stream is between one
 

00:18:52.360 --> 00:18:54.350 align:start position:0%
stream and this by stream is between one
to<00:18:52.520><c> four</c><00:18:52.799><c> bytes</c><00:18:53.320><c> so</c><00:18:53.440><c> it's</c><00:18:53.520><c> a</c><00:18:53.640><c> variable</c><00:18:54.039><c> length</c>

00:18:54.350 --> 00:18:54.360 align:start position:0%
to four bytes so it's a variable length
 

00:18:54.360 --> 00:18:56.470 align:start position:0%
to four bytes so it's a variable length
encoding<00:18:55.360><c> so</c><00:18:55.559><c> depending</c><00:18:55.840><c> on</c><00:18:55.919><c> the</c><00:18:56.039><c> Unicode</c>

00:18:56.470 --> 00:18:56.480 align:start position:0%
encoding so depending on the Unicode
 

00:18:56.480 --> 00:18:58.029 align:start position:0%
encoding so depending on the Unicode
Point<00:18:56.880><c> according</c><00:18:57.200><c> to</c><00:18:57.320><c> the</c><00:18:57.480><c> schema</c><00:18:57.919><c> you're</c>

00:18:58.029 --> 00:18:58.039 align:start position:0%
Point according to the schema you're
 

00:18:58.039 --> 00:18:59.750 align:start position:0%
Point according to the schema you're
going<00:18:58.159><c> to</c><00:18:58.320><c> end</c><00:18:58.480><c> up</c><00:18:58.600><c> with</c><00:18:58.760><c> between</c><00:18:59.080><c> 1</c><00:18:59.360><c> to</c><00:18:59.520><c> four</c>

00:18:59.750 --> 00:18:59.760 align:start position:0%
going to end up with between 1 to four
 

00:18:59.760 --> 00:19:02.990 align:start position:0%
going to end up with between 1 to four
bytes<00:19:00.440><c> for</c><00:19:00.640><c> each</c><00:19:00.960><c> code</c><00:19:01.400><c> point</c><00:19:02.400><c> on</c><00:19:02.559><c> top</c><00:19:02.720><c> of</c><00:19:02.840><c> that</c>

00:19:02.990 --> 00:19:03.000 align:start position:0%
bytes for each code point on top of that
 

00:19:03.000 --> 00:19:05.110 align:start position:0%
bytes for each code point on top of that
there's<00:19:03.440><c> utf8</c><00:19:04.440><c> uh</c>

00:19:05.110 --> 00:19:05.120 align:start position:0%
there's utf8 uh
 

00:19:05.120 --> 00:19:08.830 align:start position:0%
there's utf8 uh
utf16<00:19:06.120><c> and</c><00:19:06.320><c> UTF</c><00:19:06.679><c> 32</c><00:19:07.400><c> UTF</c><00:19:07.799><c> 32</c><00:19:08.159><c> is</c><00:19:08.320><c> nice</c><00:19:08.640><c> because</c>

00:19:08.830 --> 00:19:08.840 align:start position:0%
utf16 and UTF 32 UTF 32 is nice because
 

00:19:08.840 --> 00:19:10.549 align:start position:0%
utf16 and UTF 32 UTF 32 is nice because
it<00:19:08.960><c> is</c><00:19:09.280><c> fixed</c><00:19:09.600><c> length</c><00:19:09.880><c> instead</c><00:19:10.120><c> of</c><00:19:10.240><c> variable</c>

00:19:10.549 --> 00:19:10.559 align:start position:0%
it is fixed length instead of variable
 

00:19:10.559 --> 00:19:12.470 align:start position:0%
it is fixed length instead of variable
length<00:19:11.080><c> but</c><00:19:11.200><c> it</c><00:19:11.320><c> has</c><00:19:11.480><c> many</c><00:19:11.720><c> other</c><00:19:12.000><c> downsides</c>

00:19:12.470 --> 00:19:12.480 align:start position:0%
length but it has many other downsides
 

00:19:12.480 --> 00:19:16.990 align:start position:0%
length but it has many other downsides
as<00:19:12.679><c> well</c><00:19:13.679><c> so</c><00:19:14.120><c> the</c><00:19:14.280><c> full</c><00:19:14.840><c> kind</c><00:19:15.280><c> of</c><00:19:16.280><c> spectrum</c><00:19:16.799><c> of</c>

00:19:16.990 --> 00:19:17.000 align:start position:0%
as well so the full kind of spectrum of
 

00:19:17.000 --> 00:19:18.310 align:start position:0%
as well so the full kind of spectrum of
pros<00:19:17.200><c> and</c><00:19:17.360><c> cons</c><00:19:17.640><c> of</c><00:19:17.760><c> all</c><00:19:17.919><c> these</c><00:19:18.080><c> different</c>

00:19:18.310 --> 00:19:18.320 align:start position:0%
pros and cons of all these different
 

00:19:18.320 --> 00:19:20.470 align:start position:0%
pros and cons of all these different
three<00:19:18.600><c> encodings</c><00:19:19.480><c> are</c><00:19:19.679><c> beyond</c><00:19:19.960><c> the</c><00:19:20.039><c> scope</c><00:19:20.320><c> of</c>

00:19:20.470 --> 00:19:20.480 align:start position:0%
three encodings are beyond the scope of
 

00:19:20.480 --> 00:19:22.510 align:start position:0%
three encodings are beyond the scope of
this<00:19:20.799><c> video</c><00:19:21.360><c> I</c><00:19:21.480><c> just</c><00:19:21.600><c> like</c><00:19:21.720><c> to</c><00:19:21.840><c> point</c><00:19:22.000><c> out</c><00:19:22.159><c> that</c>

00:19:22.510 --> 00:19:22.520 align:start position:0%
this video I just like to point out that
 

00:19:22.520 --> 00:19:25.230 align:start position:0%
this video I just like to point out that
I<00:19:22.720><c> enjoyed</c><00:19:23.240><c> this</c><00:19:23.400><c> block</c><00:19:23.720><c> post</c><00:19:24.559><c> and</c><00:19:24.840><c> this</c><00:19:25.000><c> block</c>

00:19:25.230 --> 00:19:25.240 align:start position:0%
I enjoyed this block post and this block
 

00:19:25.240 --> 00:19:27.029 align:start position:0%
I enjoyed this block post and this block
post<00:19:25.440><c> at</c><00:19:25.559><c> the</c><00:19:25.640><c> end</c><00:19:25.799><c> of</c><00:19:25.919><c> it</c><00:19:26.200><c> also</c><00:19:26.520><c> has</c><00:19:26.679><c> a</c><00:19:26.799><c> number</c>

00:19:27.029 --> 00:19:27.039 align:start position:0%
post at the end of it also has a number
 

00:19:27.039 --> 00:19:29.230 align:start position:0%
post at the end of it also has a number
of<00:19:27.200><c> references</c><00:19:27.760><c> that</c><00:19:27.840><c> can</c><00:19:27.960><c> be</c><00:19:28.080><c> quite</c><00:19:28.440><c> useful</c>

00:19:29.230 --> 00:19:29.240 align:start position:0%
of references that can be quite useful
 

00:19:29.240 --> 00:19:32.029 align:start position:0%
of references that can be quite useful
uh<00:19:29.360><c> one</c><00:19:29.480><c> of</c><00:19:29.600><c> them</c><00:19:29.799><c> is</c><00:19:30.360><c> uh</c><00:19:30.640><c> utf8</c><00:19:31.280><c> everywhere</c>

00:19:32.029 --> 00:19:32.039 align:start position:0%
uh one of them is uh utf8 everywhere
 

00:19:32.039 --> 00:19:34.310 align:start position:0%
uh one of them is uh utf8 everywhere
Manifesto<00:19:33.039><c> um</c><00:19:33.600><c> and</c><00:19:33.760><c> this</c><00:19:33.880><c> Manifesto</c>

00:19:34.310 --> 00:19:34.320 align:start position:0%
Manifesto um and this Manifesto
 

00:19:34.320 --> 00:19:36.630 align:start position:0%
Manifesto um and this Manifesto
describes<00:19:34.679><c> the</c><00:19:34.799><c> reason</c><00:19:35.159><c> why</c><00:19:35.360><c> utf8</c><00:19:36.360><c> is</c>

00:19:36.630 --> 00:19:36.640 align:start position:0%
describes the reason why utf8 is
 

00:19:36.640 --> 00:19:39.870 align:start position:0%
describes the reason why utf8 is
significantly<00:19:37.240><c> preferred</c><00:19:38.120><c> and</c><00:19:38.600><c> a</c><00:19:38.720><c> lot</c><00:19:38.960><c> nicer</c>

00:19:39.870 --> 00:19:39.880 align:start position:0%
significantly preferred and a lot nicer
 

00:19:39.880 --> 00:19:41.789 align:start position:0%
significantly preferred and a lot nicer
than<00:19:40.360><c> the</c><00:19:40.480><c> other</c><00:19:40.679><c> encodings</c><00:19:41.240><c> and</c><00:19:41.400><c> why</c><00:19:41.520><c> it</c><00:19:41.640><c> is</c>

00:19:41.789 --> 00:19:41.799 align:start position:0%
than the other encodings and why it is
 

00:19:41.799 --> 00:19:45.470 align:start position:0%
than the other encodings and why it is
used<00:19:42.240><c> a</c><00:19:42.320><c> lot</c><00:19:42.520><c> more</c><00:19:42.960><c> prominently</c><00:19:43.960><c> um</c><00:19:44.640><c> on</c><00:19:44.799><c> the</c>

00:19:45.470 --> 00:19:45.480 align:start position:0%
used a lot more prominently um on the
 

00:19:45.480 --> 00:19:48.070 align:start position:0%
used a lot more prominently um on the
internet<00:19:46.480><c> one</c><00:19:46.600><c> of</c><00:19:46.720><c> the</c><00:19:46.880><c> major</c><00:19:47.559><c> advantages</c>

00:19:48.070 --> 00:19:48.080 align:start position:0%
internet one of the major advantages
 

00:19:48.080 --> 00:19:49.549 align:start position:0%
internet one of the major advantages
just<00:19:48.280><c> just</c><00:19:48.360><c> to</c><00:19:48.480><c> give</c><00:19:48.600><c> you</c><00:19:48.720><c> a</c><00:19:48.840><c> sense</c><00:19:49.320><c> is</c><00:19:49.440><c> that</c>

00:19:49.549 --> 00:19:49.559 align:start position:0%
just just to give you a sense is that
 

00:19:49.559 --> 00:19:51.990 align:start position:0%
just just to give you a sense is that
utf8<00:19:50.240><c> is</c><00:19:50.400><c> the</c><00:19:50.520><c> only</c><00:19:50.720><c> one</c><00:19:50.880><c> of</c><00:19:51.080><c> these</c><00:19:51.600><c> that</c><00:19:51.720><c> is</c>

00:19:51.990 --> 00:19:52.000 align:start position:0%
utf8 is the only one of these that is
 

00:19:52.000 --> 00:19:54.190 align:start position:0%
utf8 is the only one of these that is
backwards<00:19:52.480><c> compatible</c><00:19:53.000><c> to</c><00:19:53.200><c> the</c><00:19:53.360><c> much</c><00:19:53.600><c> simpler</c>

00:19:54.190 --> 00:19:54.200 align:start position:0%
backwards compatible to the much simpler
 

00:19:54.200 --> 00:19:57.070 align:start position:0%
backwards compatible to the much simpler
asky<00:19:54.720><c> encoding</c><00:19:55.280><c> of</c><00:19:55.520><c> text</c><00:19:56.520><c> um</c><00:19:56.760><c> but</c><00:19:56.880><c> I'm</c><00:19:56.960><c> not</c>

00:19:57.070 --> 00:19:57.080 align:start position:0%
asky encoding of text um but I'm not
 

00:19:57.080 --> 00:19:58.470 align:start position:0%
asky encoding of text um but I'm not
going<00:19:57.159><c> to</c><00:19:57.280><c> go</c><00:19:57.400><c> into</c><00:19:57.520><c> the</c><00:19:57.600><c> full</c><00:19:57.760><c> detail</c><00:19:58.000><c> in</c><00:19:58.039><c> this</c>

00:19:58.470 --> 00:19:58.480 align:start position:0%
going to go into the full detail in this
 

00:19:58.480 --> 00:20:00.990 align:start position:0%
going to go into the full detail in this
video<00:19:59.480><c> so</c><00:19:59.679><c> suffice</c><00:20:00.039><c> to</c><00:20:00.200><c> say</c><00:20:00.360><c> that</c><00:20:00.520><c> we</c><00:20:00.679><c> like</c><00:20:00.880><c> the</c>

00:20:00.990 --> 00:20:01.000 align:start position:0%
video so suffice to say that we like the
 

00:20:01.000 --> 00:20:03.830 align:start position:0%
video so suffice to say that we like the
utf8<00:20:01.520><c> encoding</c><00:20:02.520><c> and</c><00:20:02.919><c> uh</c><00:20:03.039><c> let's</c><00:20:03.320><c> try</c><00:20:03.480><c> to</c><00:20:03.679><c> take</c>

00:20:03.830 --> 00:20:03.840 align:start position:0%
utf8 encoding and uh let's try to take
 

00:20:03.840 --> 00:20:06.029 align:start position:0%
utf8 encoding and uh let's try to take
the<00:20:04.000><c> string</c><00:20:04.799><c> and</c><00:20:05.159><c> see</c><00:20:05.400><c> what</c><00:20:05.520><c> we</c><00:20:05.679><c> get</c><00:20:05.840><c> if</c><00:20:05.919><c> we</c>

00:20:06.029 --> 00:20:06.039 align:start position:0%
the string and see what we get if we
 

00:20:06.039 --> 00:20:07.990 align:start position:0%
the string and see what we get if we
encoded<00:20:06.440><c> into</c>

00:20:07.990 --> 00:20:08.000 align:start position:0%
encoded into
 

00:20:08.000 --> 00:20:10.750 align:start position:0%
encoded into
utf8<00:20:09.000><c> the</c><00:20:09.400><c> string</c><00:20:09.840><c> class</c><00:20:10.039><c> in</c><00:20:10.200><c> Python</c><00:20:10.559><c> actually</c>

00:20:10.750 --> 00:20:10.760 align:start position:0%
utf8 the string class in Python actually
 

00:20:10.760 --> 00:20:12.350 align:start position:0%
utf8 the string class in Python actually
has<00:20:10.919><c> do</c><00:20:11.120><c> encode</c><00:20:11.600><c> and</c><00:20:11.679><c> you</c><00:20:11.799><c> can</c><00:20:11.919><c> give</c><00:20:12.039><c> it</c><00:20:12.240><c> the</c>

00:20:12.350 --> 00:20:12.360 align:start position:0%
has do encode and you can give it the
 

00:20:12.360 --> 00:20:15.549 align:start position:0%
has do encode and you can give it the
encoding<00:20:12.799><c> which</c><00:20:12.919><c> is</c><00:20:13.360><c> say</c><00:20:14.080><c> utf8</c><00:20:15.080><c> now</c><00:20:15.280><c> we</c><00:20:15.400><c> get</c>

00:20:15.549 --> 00:20:15.559 align:start position:0%
encoding which is say utf8 now we get
 

00:20:15.559 --> 00:20:17.830 align:start position:0%
encoding which is say utf8 now we get
out<00:20:15.640><c> of</c><00:20:15.840><c> this</c><00:20:16.080><c> is</c><00:20:16.240><c> not</c><00:20:16.520><c> very</c><00:20:16.840><c> nice</c><00:20:17.240><c> because</c>

00:20:17.830 --> 00:20:17.840 align:start position:0%
out of this is not very nice because
 

00:20:17.840 --> 00:20:20.950 align:start position:0%
out of this is not very nice because
this<00:20:17.960><c> is</c><00:20:18.200><c> the</c><00:20:18.440><c> bytes</c><00:20:19.400><c> is</c><00:20:19.520><c> a</c><00:20:19.679><c> bytes</c><00:20:20.120><c> object</c><00:20:20.559><c> and</c>

00:20:20.950 --> 00:20:20.960 align:start position:0%
this is the bytes is a bytes object and
 

00:20:20.960 --> 00:20:22.750 align:start position:0%
this is the bytes is a bytes object and
it's<00:20:21.159><c> not</c><00:20:21.360><c> very</c><00:20:21.880><c> nice</c><00:20:22.120><c> in</c><00:20:22.280><c> the</c><00:20:22.360><c> way</c><00:20:22.520><c> that</c><00:20:22.600><c> it's</c>

00:20:22.750 --> 00:20:22.760 align:start position:0%
it's not very nice in the way that it's
 

00:20:22.760 --> 00:20:25.029 align:start position:0%
it's not very nice in the way that it's
printed<00:20:23.440><c> so</c><00:20:23.640><c> I</c><00:20:23.760><c> personally</c><00:20:24.159><c> like</c><00:20:24.280><c> to</c><00:20:24.760><c> take</c><00:20:24.919><c> it</c>

00:20:25.029 --> 00:20:25.039 align:start position:0%
printed so I personally like to take it
 

00:20:25.039 --> 00:20:26.830 align:start position:0%
printed so I personally like to take it
through<00:20:25.400><c> list</c><00:20:26.000><c> because</c><00:20:26.240><c> then</c><00:20:26.400><c> we</c><00:20:26.559><c> actually</c>

00:20:26.830 --> 00:20:26.840 align:start position:0%
through list because then we actually
 

00:20:26.840 --> 00:20:28.710 align:start position:0%
through list because then we actually
get<00:20:27.080><c> the</c><00:20:27.240><c> raw</c><00:20:27.880><c> B</c>

00:20:28.710 --> 00:20:28.720 align:start position:0%
get the raw B
 

00:20:28.720 --> 00:20:32.390 align:start position:0%
get the raw B
of<00:20:28.960><c> this</c><00:20:29.960><c> uh</c><00:20:30.600><c> encoding</c><00:20:31.600><c> so</c><00:20:31.760><c> this</c><00:20:31.880><c> is</c><00:20:32.000><c> the</c><00:20:32.120><c> raw</c>

00:20:32.390 --> 00:20:32.400 align:start position:0%
of this uh encoding so this is the raw
 

00:20:32.400 --> 00:20:35.590 align:start position:0%
of this uh encoding so this is the raw
byes<00:20:33.200><c> that</c><00:20:33.600><c> represent</c><00:20:34.600><c> this</c><00:20:34.799><c> string</c>

00:20:35.590 --> 00:20:35.600 align:start position:0%
byes that represent this string
 

00:20:35.600 --> 00:20:38.070 align:start position:0%
byes that represent this string
according<00:20:35.919><c> to</c><00:20:36.080><c> the</c><00:20:36.200><c> utf8</c><00:20:36.760><c> en</c><00:20:36.880><c> coding</c><00:20:37.840><c> we</c><00:20:37.960><c> can</c>

00:20:38.070 --> 00:20:38.080 align:start position:0%
according to the utf8 en coding we can
 

00:20:38.080 --> 00:20:40.549 align:start position:0%
according to the utf8 en coding we can
also<00:20:38.280><c> look</c><00:20:38.400><c> at</c><00:20:38.919><c> utf16</c><00:20:39.919><c> we</c><00:20:40.080><c> get</c><00:20:40.159><c> a</c><00:20:40.280><c> slightly</c>

00:20:40.549 --> 00:20:40.559 align:start position:0%
also look at utf16 we get a slightly
 

00:20:40.559 --> 00:20:43.230 align:start position:0%
also look at utf16 we get a slightly
different<00:20:40.799><c> by</c><00:20:41.400><c> stream</c><00:20:42.400><c> and</c><00:20:42.679><c> we</c><00:20:42.840><c> here</c><00:20:42.960><c> we</c><00:20:43.039><c> start</c>

00:20:43.230 --> 00:20:43.240 align:start position:0%
different by stream and we here we start
 

00:20:43.240 --> 00:20:45.470 align:start position:0%
different by stream and we here we start
to<00:20:43.360><c> see</c><00:20:43.520><c> one</c><00:20:43.640><c> of</c><00:20:43.760><c> the</c><00:20:43.840><c> disadvantages</c><00:20:44.440><c> of</c><00:20:44.559><c> utf16</c>

00:20:45.470 --> 00:20:45.480 align:start position:0%
to see one of the disadvantages of utf16
 

00:20:45.480 --> 00:20:47.950 align:start position:0%
to see one of the disadvantages of utf16
you<00:20:45.640><c> see</c><00:20:45.840><c> how</c><00:20:46.000><c> we</c><00:20:46.080><c> have</c><00:20:46.280><c> zero</c><00:20:47.080><c> Z</c><00:20:47.400><c> something</c><00:20:47.720><c> Z</c>

00:20:47.950 --> 00:20:47.960 align:start position:0%
you see how we have zero Z something Z
 

00:20:47.960 --> 00:20:49.669 align:start position:0%
you see how we have zero Z something Z
something<00:20:48.280><c> Z</c><00:20:48.520><c> something</c><00:20:49.159><c> we're</c><00:20:49.320><c> starting</c><00:20:49.559><c> to</c>

00:20:49.669 --> 00:20:49.679 align:start position:0%
something Z something we're starting to
 

00:20:49.679 --> 00:20:50.830 align:start position:0%
something Z something we're starting to
get<00:20:49.760><c> a</c><00:20:49.880><c> sense</c><00:20:50.120><c> that</c><00:20:50.240><c> this</c><00:20:50.320><c> is</c><00:20:50.400><c> a</c><00:20:50.520><c> bit</c><00:20:50.640><c> of</c><00:20:50.679><c> a</c>

00:20:50.830 --> 00:20:50.840 align:start position:0%
get a sense that this is a bit of a
 

00:20:50.840 --> 00:20:53.909 align:start position:0%
get a sense that this is a bit of a
wasteful<00:20:51.320><c> encoding</c><00:20:52.320><c> and</c><00:20:52.600><c> indeed</c><00:20:52.960><c> for</c><00:20:53.559><c> simple</c>

00:20:53.909 --> 00:20:53.919 align:start position:0%
wasteful encoding and indeed for simple
 

00:20:53.919 --> 00:20:56.270 align:start position:0%
wasteful encoding and indeed for simple
asky<00:20:54.440><c> characters</c><00:20:55.280><c> or</c><00:20:55.480><c> English</c><00:20:55.799><c> characters</c>

00:20:56.270 --> 00:20:56.280 align:start position:0%
asky characters or English characters
 

00:20:56.280 --> 00:20:58.549 align:start position:0%
asky characters or English characters
here<00:20:57.120><c> uh</c><00:20:57.240><c> we</c><00:20:57.360><c> just</c><00:20:57.520><c> have</c><00:20:57.640><c> the</c><00:20:57.760><c> structure</c><00:20:58.200><c> of</c><00:20:58.280><c> 0</c>

00:20:58.549 --> 00:20:58.559 align:start position:0%
here uh we just have the structure of 0
 

00:20:58.559 --> 00:21:00.750 align:start position:0%
here uh we just have the structure of 0
something<00:20:58.840><c> Z</c><00:20:59.120><c> something</c><00:20:59.640><c> and</c><00:20:59.799><c> it's</c><00:21:00.520><c> not</c>

00:21:00.750 --> 00:21:00.760 align:start position:0%
something Z something and it's not
 

00:21:00.760 --> 00:21:04.230 align:start position:0%
something Z something and it's not
exactly<00:21:01.320><c> nice</c><00:21:02.200><c> same</c><00:21:02.360><c> for</c><00:21:02.520><c> UTF</c><00:21:02.919><c> 32</c><00:21:03.919><c> when</c><00:21:04.039><c> we</c>

00:21:04.230 --> 00:21:04.240 align:start position:0%
exactly nice same for UTF 32 when we
 

00:21:04.240 --> 00:21:06.070 align:start position:0%
exactly nice same for UTF 32 when we
expand<00:21:04.640><c> this</c><00:21:05.080><c> we</c><00:21:05.200><c> can</c><00:21:05.320><c> start</c><00:21:05.480><c> to</c><00:21:05.600><c> get</c><00:21:05.720><c> a</c><00:21:05.799><c> sense</c>

00:21:06.070 --> 00:21:06.080 align:start position:0%
expand this we can start to get a sense
 

00:21:06.080 --> 00:21:07.990 align:start position:0%
expand this we can start to get a sense
of<00:21:06.360><c> the</c><00:21:06.520><c> wastefulness</c><00:21:07.240><c> of</c><00:21:07.400><c> this</c><00:21:07.520><c> encoding</c><00:21:07.880><c> for</c>

00:21:07.990 --> 00:21:08.000 align:start position:0%
of the wastefulness of this encoding for
 

00:21:08.000 --> 00:21:10.390 align:start position:0%
of the wastefulness of this encoding for
our<00:21:08.159><c> purposes</c><00:21:08.840><c> you</c><00:21:09.000><c> see</c><00:21:09.200><c> a</c><00:21:09.320><c> lot</c><00:21:09.440><c> of</c><00:21:10.000><c> zeros</c>

00:21:10.390 --> 00:21:10.400 align:start position:0%
our purposes you see a lot of zeros
 

00:21:10.400 --> 00:21:11.390 align:start position:0%
our purposes you see a lot of zeros
followed<00:21:10.760><c> by</c>

00:21:11.390 --> 00:21:11.400 align:start position:0%
followed by
 

00:21:11.400 --> 00:21:14.830 align:start position:0%
followed by
something<00:21:12.400><c> and</c><00:21:12.559><c> so</c><00:21:13.159><c> uh</c><00:21:13.279><c> this</c><00:21:13.400><c> is</c><00:21:13.559><c> not</c>

00:21:14.830 --> 00:21:14.840 align:start position:0%
something and so uh this is not
 

00:21:14.840 --> 00:21:17.830 align:start position:0%
something and so uh this is not
desirable<00:21:15.840><c> so</c><00:21:16.799><c> suffice</c><00:21:17.159><c> it</c><00:21:17.279><c> to</c><00:21:17.440><c> say</c><00:21:17.600><c> that</c><00:21:17.720><c> we</c>

00:21:17.830 --> 00:21:17.840 align:start position:0%
desirable so suffice it to say that we
 

00:21:17.840 --> 00:21:20.870 align:start position:0%
desirable so suffice it to say that we
would<00:21:18.000><c> like</c><00:21:18.120><c> to</c><00:21:18.279><c> stick</c><00:21:18.799><c> with</c><00:21:19.080><c> utf8</c><00:21:20.080><c> for</c><00:21:20.279><c> our</c>

00:21:20.870 --> 00:21:20.880 align:start position:0%
would like to stick with utf8 for our
 

00:21:20.880 --> 00:21:23.870 align:start position:0%
would like to stick with utf8 for our
purposes<00:21:21.880><c> however</c><00:21:22.720><c> if</c><00:21:22.840><c> we</c><00:21:22.960><c> just</c><00:21:23.120><c> use</c><00:21:23.320><c> utf8</c>

00:21:23.870 --> 00:21:23.880 align:start position:0%
purposes however if we just use utf8
 

00:21:23.880 --> 00:21:26.390 align:start position:0%
purposes however if we just use utf8
naively<00:21:24.600><c> these</c><00:21:24.720><c> are</c><00:21:24.960><c> by</c><00:21:25.200><c> streams</c><00:21:26.039><c> so</c><00:21:26.279><c> that</c>

00:21:26.390 --> 00:21:26.400 align:start position:0%
naively these are by streams so that
 

00:21:26.400 --> 00:21:29.230 align:start position:0%
naively these are by streams so that
would<00:21:26.640><c> imply</c><00:21:27.400><c> a</c><00:21:27.559><c> vocabulary</c><00:21:28.360><c> length</c><00:21:28.640><c> of</c><00:21:28.799><c> only</c>

00:21:29.230 --> 00:21:29.240 align:start position:0%
would imply a vocabulary length of only
 

00:21:29.240 --> 00:21:33.110 align:start position:0%
would imply a vocabulary length of only
256<00:21:30.240><c> possible</c><00:21:31.159><c> tokens</c><00:21:32.159><c> uh</c><00:21:32.320><c> but</c><00:21:32.520><c> this</c><00:21:32.880><c> this</c>

00:21:33.110 --> 00:21:33.120 align:start position:0%
256 possible tokens uh but this this
 

00:21:33.120 --> 00:21:35.310 align:start position:0%
256 possible tokens uh but this this
vocabulary<00:21:33.679><c> size</c><00:21:33.880><c> is</c><00:21:34.039><c> very</c><00:21:34.240><c> very</c><00:21:34.440><c> small</c><00:21:35.200><c> what</c>

00:21:35.310 --> 00:21:35.320 align:start position:0%
vocabulary size is very very small what
 

00:21:35.320 --> 00:21:36.669 align:start position:0%
vocabulary size is very very small what
this<00:21:35.440><c> is</c><00:21:35.559><c> going</c><00:21:35.679><c> to</c><00:21:35.799><c> do</c><00:21:35.960><c> if</c><00:21:36.080><c> we</c><00:21:36.200><c> just</c><00:21:36.360><c> were</c><00:21:36.559><c> to</c>

00:21:36.669 --> 00:21:36.679 align:start position:0%
this is going to do if we just were to
 

00:21:36.679 --> 00:21:39.870 align:start position:0%
this is going to do if we just were to
use<00:21:36.799><c> it</c><00:21:37.000><c> naively</c><00:21:37.960><c> is</c><00:21:38.200><c> that</c><00:21:38.679><c> all</c><00:21:38.840><c> of</c><00:21:39.000><c> our</c><00:21:39.320><c> text</c>

00:21:39.870 --> 00:21:39.880 align:start position:0%
use it naively is that all of our text
 

00:21:39.880 --> 00:21:41.909 align:start position:0%
use it naively is that all of our text
would<00:21:40.120><c> be</c><00:21:40.400><c> stretched</c><00:21:40.840><c> out</c><00:21:41.039><c> over</c><00:21:41.400><c> very</c><00:21:41.679><c> very</c>

00:21:41.909 --> 00:21:41.919 align:start position:0%
would be stretched out over very very
 

00:21:41.919 --> 00:21:46.149 align:start position:0%
would be stretched out over very very
long<00:21:42.240><c> sequences</c><00:21:42.880><c> of</c><00:21:43.480><c> bytes</c><00:21:44.480><c> and</c><00:21:44.760><c> so</c>

00:21:46.149 --> 00:21:46.159 align:start position:0%
long sequences of bytes and so
 

00:21:46.159 --> 00:21:49.310 align:start position:0%
long sequences of bytes and so
um<00:21:47.159><c> what</c><00:21:47.480><c> what</c><00:21:47.600><c> this</c><00:21:47.799><c> does</c><00:21:48.240><c> is</c><00:21:48.760><c> that</c><00:21:48.919><c> certainly</c>

00:21:49.310 --> 00:21:49.320 align:start position:0%
um what what this does is that certainly
 

00:21:49.320 --> 00:21:50.990 align:start position:0%
um what what this does is that certainly
the<00:21:49.440><c> embeding</c><00:21:49.799><c> table</c><00:21:50.039><c> is</c><00:21:50.159><c> going</c><00:21:50.279><c> to</c><00:21:50.400><c> be</c><00:21:50.559><c> tiny</c>

00:21:50.990 --> 00:21:51.000 align:start position:0%
the embeding table is going to be tiny
 

00:21:51.000 --> 00:21:52.310 align:start position:0%
the embeding table is going to be tiny
and<00:21:51.080><c> the</c><00:21:51.240><c> prediction</c><00:21:51.679><c> at</c><00:21:51.799><c> the</c><00:21:51.919><c> top</c><00:21:52.120><c> at</c><00:21:52.200><c> the</c>

00:21:52.310 --> 00:21:52.320 align:start position:0%
and the prediction at the top at the
 

00:21:52.320 --> 00:21:54.149 align:start position:0%
and the prediction at the top at the
final<00:21:52.600><c> layer</c><00:21:52.880><c> is</c><00:21:53.000><c> going</c><00:21:53.159><c> to</c><00:21:53.240><c> be</c><00:21:53.400><c> very</c><00:21:53.600><c> tiny</c><00:21:54.039><c> but</c>

00:21:54.149 --> 00:21:54.159 align:start position:0%
final layer is going to be very tiny but
 

00:21:54.159 --> 00:21:56.430 align:start position:0%
final layer is going to be very tiny but
our<00:21:54.279><c> sequences</c><00:21:54.720><c> are</c><00:21:54.880><c> very</c><00:21:55.080><c> long</c><00:21:55.919><c> and</c><00:21:56.120><c> remember</c>

00:21:56.430 --> 00:21:56.440 align:start position:0%
our sequences are very long and remember
 

00:21:56.440 --> 00:21:59.310 align:start position:0%
our sequences are very long and remember
that<00:21:56.559><c> we</c><00:21:56.720><c> have</c><00:21:56.919><c> pretty</c><00:21:57.200><c> finite</c><00:21:58.200><c> um</c><00:21:58.919><c> context</c>

00:21:59.310 --> 00:21:59.320 align:start position:0%
that we have pretty finite um context
 

00:21:59.320 --> 00:22:00.990 align:start position:0%
that we have pretty finite um context
length<00:21:59.760><c> and</c><00:21:59.919><c> the</c><00:22:00.080><c> attention</c><00:22:00.640><c> that</c><00:22:00.760><c> we</c><00:22:00.840><c> can</c>

00:22:00.990 --> 00:22:01.000 align:start position:0%
length and the attention that we can
 

00:22:01.000 --> 00:22:02.750 align:start position:0%
length and the attention that we can
support<00:22:01.679><c> in</c><00:22:01.799><c> a</c><00:22:01.960><c> transformer</c><00:22:02.559><c> for</c>

00:22:02.750 --> 00:22:02.760 align:start position:0%
support in a transformer for
 

00:22:02.760 --> 00:22:05.510 align:start position:0%
support in a transformer for
computational<00:22:03.320><c> reasons</c><00:22:04.240><c> and</c><00:22:04.400><c> so</c><00:22:05.159><c> we</c><00:22:05.279><c> only</c>

00:22:05.510 --> 00:22:05.520 align:start position:0%
computational reasons and so we only
 

00:22:05.520 --> 00:22:07.470 align:start position:0%
computational reasons and so we only
have<00:22:05.840><c> as</c><00:22:06.080><c> much</c><00:22:06.279><c> context</c><00:22:06.640><c> length</c><00:22:07.080><c> but</c><00:22:07.200><c> now</c><00:22:07.360><c> we</c>

00:22:07.470 --> 00:22:07.480 align:start position:0%
have as much context length but now we
 

00:22:07.480 --> 00:22:09.430 align:start position:0%
have as much context length but now we
have<00:22:07.640><c> very</c><00:22:07.840><c> very</c><00:22:08.120><c> long</c><00:22:08.440><c> sequences</c><00:22:09.240><c> and</c><00:22:09.360><c> this</c>

00:22:09.430 --> 00:22:09.440 align:start position:0%
have very very long sequences and this
 

00:22:09.440 --> 00:22:10.789 align:start position:0%
have very very long sequences and this
is<00:22:09.600><c> just</c><00:22:09.720><c> inefficient</c><00:22:10.200><c> and</c><00:22:10.320><c> it's</c><00:22:10.480><c> not</c><00:22:10.640><c> going</c>

00:22:10.789 --> 00:22:10.799 align:start position:0%
is just inefficient and it's not going
 

00:22:10.799 --> 00:22:12.789 align:start position:0%
is just inefficient and it's not going
to<00:22:11.000><c> allow</c><00:22:11.240><c> us</c><00:22:11.360><c> to</c><00:22:11.520><c> attend</c><00:22:12.080><c> to</c><00:22:12.279><c> sufficiently</c>

00:22:12.789 --> 00:22:12.799 align:start position:0%
to allow us to attend to sufficiently
 

00:22:12.799 --> 00:22:15.630 align:start position:0%
to allow us to attend to sufficiently
long<00:22:13.240><c> text</c><00:22:14.000><c> uh</c><00:22:14.159><c> before</c><00:22:14.440><c> us</c><00:22:15.039><c> for</c><00:22:15.200><c> the</c><00:22:15.320><c> purposes</c>

00:22:15.630 --> 00:22:15.640 align:start position:0%
long text uh before us for the purposes
 

00:22:15.640 --> 00:22:18.350 align:start position:0%
long text uh before us for the purposes
of<00:22:15.760><c> the</c><00:22:15.880><c> next</c><00:22:16.080><c> token</c><00:22:16.360><c> prediction</c><00:22:17.000><c> task</c><00:22:18.000><c> so</c><00:22:18.240><c> we</c>

00:22:18.350 --> 00:22:18.360 align:start position:0%
of the next token prediction task so we
 

00:22:18.360 --> 00:22:21.590 align:start position:0%
of the next token prediction task so we
don't<00:22:18.559><c> want</c><00:22:18.720><c> to</c><00:22:19.240><c> use</c><00:22:20.240><c> the</c><00:22:20.440><c> raw</c><00:22:20.880><c> bytes</c><00:22:21.360><c> of</c><00:22:21.480><c> the</c>

00:22:21.590 --> 00:22:21.600 align:start position:0%
don't want to use the raw bytes of the
 

00:22:21.600 --> 00:22:24.190 align:start position:0%
don't want to use the raw bytes of the
utf8<00:22:22.360><c> encoding</c><00:22:23.080><c> we</c><00:22:23.200><c> want</c><00:22:23.320><c> to</c><00:22:23.440><c> be</c><00:22:23.559><c> able</c><00:22:23.760><c> to</c>

00:22:24.190 --> 00:22:24.200 align:start position:0%
utf8 encoding we want to be able to
 

00:22:24.200 --> 00:22:26.909 align:start position:0%
utf8 encoding we want to be able to
support<00:22:24.960><c> larger</c><00:22:25.520><c> vocabulary</c><00:22:26.159><c> size</c><00:22:26.720><c> that</c><00:22:26.840><c> we</c>

00:22:26.909 --> 00:22:26.919 align:start position:0%
support larger vocabulary size that we
 

00:22:26.919 --> 00:22:28.630 align:start position:0%
support larger vocabulary size that we
can<00:22:27.080><c> tune</c><00:22:27.360><c> as</c><00:22:27.480><c> a</c><00:22:27.559><c> hyper</c>

00:22:28.630 --> 00:22:28.640 align:start position:0%
can tune as a hyper
 

00:22:28.640 --> 00:22:30.830 align:start position:0%
can tune as a hyper
but<00:22:28.760><c> we</c><00:22:28.880><c> want</c><00:22:29.039><c> to</c><00:22:29.240><c> stick</c><00:22:29.559><c> with</c><00:22:29.679><c> the</c><00:22:29.840><c> utf8</c>

00:22:30.830 --> 00:22:30.840 align:start position:0%
but we want to stick with the utf8
 

00:22:30.840 --> 00:22:33.549 align:start position:0%
but we want to stick with the utf8
encoding<00:22:31.600><c> of</c><00:22:31.760><c> these</c><00:22:31.919><c> strings</c><00:22:32.840><c> so</c><00:22:33.159><c> what</c><00:22:33.240><c> do</c><00:22:33.400><c> we</c>

00:22:33.549 --> 00:22:33.559 align:start position:0%
encoding of these strings so what do we
 

00:22:33.559 --> 00:22:35.470 align:start position:0%
encoding of these strings so what do we
do<00:22:34.279><c> well</c><00:22:34.440><c> the</c><00:22:34.559><c> answer</c><00:22:34.799><c> of</c><00:22:34.919><c> course</c><00:22:35.080><c> is</c><00:22:35.240><c> we</c><00:22:35.320><c> turn</c>

00:22:35.470 --> 00:22:35.480 align:start position:0%
do well the answer of course is we turn
 

00:22:35.480 --> 00:22:37.430 align:start position:0%
do well the answer of course is we turn
to<00:22:35.640><c> the</c><00:22:35.720><c> bite</c><00:22:36.000><c> pair</c><00:22:36.159><c> encoding</c><00:22:36.520><c> algorithm</c>

00:22:37.430 --> 00:22:37.440 align:start position:0%
to the bite pair encoding algorithm
 

00:22:37.440 --> 00:22:39.070 align:start position:0%
to the bite pair encoding algorithm
which<00:22:37.559><c> will</c><00:22:37.760><c> allow</c><00:22:38.000><c> us</c><00:22:38.120><c> to</c><00:22:38.320><c> compress</c><00:22:38.880><c> these</c>

00:22:39.070 --> 00:22:39.080 align:start position:0%
which will allow us to compress these
 

00:22:39.080 --> 00:22:42.590 align:start position:0%
which will allow us to compress these
bite<00:22:39.360><c> sequences</c><00:22:40.360><c> um</c><00:22:41.159><c> to</c><00:22:41.400><c> a</c><00:22:41.600><c> variable</c><00:22:42.000><c> amount</c>

00:22:42.590 --> 00:22:42.600 align:start position:0%
bite sequences um to a variable amount
 

00:22:42.600 --> 00:22:44.669 align:start position:0%
bite sequences um to a variable amount
so<00:22:42.720><c> we'll</c><00:22:42.880><c> get</c><00:22:43.000><c> to</c><00:22:43.159><c> that</c><00:22:43.279><c> in</c><00:22:43.360><c> a</c><00:22:43.520><c> bit</c><00:22:43.799><c> but</c><00:22:44.440><c> I</c><00:22:44.559><c> just</c>

00:22:44.669 --> 00:22:44.679 align:start position:0%
so we'll get to that in a bit but I just
 

00:22:44.679 --> 00:22:47.110 align:start position:0%
so we'll get to that in a bit but I just
want<00:22:44.799><c> to</c><00:22:45.080><c> briefly</c><00:22:45.400><c> speak</c><00:22:45.600><c> to</c><00:22:45.799><c> the</c><00:22:46.039><c> fact</c><00:22:46.360><c> that</c><00:22:47.000><c> I</c>

00:22:47.110 --> 00:22:47.120 align:start position:0%
want to briefly speak to the fact that I
 

00:22:47.120 --> 00:22:49.269 align:start position:0%
want to briefly speak to the fact that I
would<00:22:47.679><c> love</c><00:22:48.000><c> nothing</c><00:22:48.320><c> more</c><00:22:48.679><c> than</c><00:22:48.799><c> to</c><00:22:48.919><c> be</c><00:22:49.039><c> able</c>

00:22:49.269 --> 00:22:49.279 align:start position:0%
would love nothing more than to be able
 

00:22:49.279 --> 00:22:52.950 align:start position:0%
would love nothing more than to be able
to<00:22:49.760><c> feed</c><00:22:50.279><c> raw</c><00:22:50.679><c> bite</c><00:22:50.919><c> sequences</c><00:22:51.559><c> into</c><00:22:52.559><c> uh</c>

00:22:52.950 --> 00:22:52.960 align:start position:0%
to feed raw bite sequences into uh
 

00:22:52.960 --> 00:22:54.870 align:start position:0%
to feed raw bite sequences into uh
language<00:22:53.320><c> models</c><00:22:54.039><c> in</c><00:22:54.159><c> fact</c><00:22:54.320><c> there's</c><00:22:54.480><c> a</c><00:22:54.600><c> paper</c>

00:22:54.870 --> 00:22:54.880 align:start position:0%
language models in fact there's a paper
 

00:22:54.880 --> 00:22:57.070 align:start position:0%
language models in fact there's a paper
about<00:22:55.120><c> how</c><00:22:55.400><c> this</c><00:22:55.520><c> could</c><00:22:55.679><c> potentially</c><00:22:56.120><c> be</c><00:22:56.279><c> done</c>

00:22:57.070 --> 00:22:57.080 align:start position:0%
about how this could potentially be done
 

00:22:57.080 --> 00:22:59.269 align:start position:0%
about how this could potentially be done
uh<00:22:57.200><c> from</c><00:22:57.440><c> Summer</c><00:22:57.760><c> last</c><00:22:57.960><c> last</c><00:22:58.120><c> year</c><00:22:58.960><c> now</c><00:22:59.120><c> the</c>

00:22:59.269 --> 00:22:59.279 align:start position:0%
uh from Summer last last year now the
 

00:22:59.279 --> 00:23:00.950 align:start position:0%
uh from Summer last last year now the
problem<00:22:59.520><c> is</c><00:22:59.679><c> you</c><00:22:59.840><c> actually</c><00:23:00.080><c> have</c><00:23:00.200><c> to</c><00:23:00.600><c> go</c><00:23:00.760><c> in</c>

00:23:00.950 --> 00:23:00.960 align:start position:0%
problem is you actually have to go in
 

00:23:00.960 --> 00:23:02.269 align:start position:0%
problem is you actually have to go in
and<00:23:01.080><c> you</c><00:23:01.159><c> have</c><00:23:01.279><c> to</c><00:23:01.400><c> modify</c><00:23:01.720><c> the</c><00:23:01.799><c> Transformer</c>

00:23:02.269 --> 00:23:02.279 align:start position:0%
and you have to modify the Transformer
 

00:23:02.279 --> 00:23:04.470 align:start position:0%
and you have to modify the Transformer
architecture<00:23:03.279><c> because</c><00:23:03.760><c> as</c><00:23:03.880><c> I</c><00:23:04.000><c> mentioned</c>

00:23:04.470 --> 00:23:04.480 align:start position:0%
architecture because as I mentioned
 

00:23:04.480 --> 00:23:06.630 align:start position:0%
architecture because as I mentioned
you're<00:23:04.720><c> going</c><00:23:04.840><c> to</c><00:23:05.080><c> have</c><00:23:05.200><c> a</c><00:23:05.400><c> problem</c><00:23:06.120><c> where</c><00:23:06.480><c> the</c>

00:23:06.630 --> 00:23:06.640 align:start position:0%
you're going to have a problem where the
 

00:23:06.640 --> 00:23:08.230 align:start position:0%
you're going to have a problem where the
attention<00:23:07.080><c> will</c><00:23:07.240><c> start</c><00:23:07.400><c> to</c><00:23:07.559><c> become</c><00:23:07.799><c> extremely</c>

00:23:08.230 --> 00:23:08.240 align:start position:0%
attention will start to become extremely
 

00:23:08.240 --> 00:23:10.350 align:start position:0%
attention will start to become extremely
expensive<00:23:08.720><c> because</c><00:23:08.919><c> the</c><00:23:09.080><c> sequences</c><00:23:09.559><c> are</c><00:23:09.840><c> so</c>

00:23:10.350 --> 00:23:10.360 align:start position:0%
expensive because the sequences are so
 

00:23:10.360 --> 00:23:13.430 align:start position:0%
expensive because the sequences are so
long<00:23:11.360><c> and</c><00:23:11.480><c> so</c><00:23:11.720><c> in</c><00:23:11.880><c> this</c><00:23:12.039><c> paper</c><00:23:12.799><c> they</c><00:23:13.000><c> propose</c>

00:23:13.430 --> 00:23:13.440 align:start position:0%
long and so in this paper they propose
 

00:23:13.440 --> 00:23:15.750 align:start position:0%
long and so in this paper they propose
kind<00:23:13.520><c> of</c><00:23:13.640><c> a</c><00:23:14.120><c> hierarchical</c><00:23:15.120><c> structuring</c><00:23:15.640><c> of</c>

00:23:15.750 --> 00:23:15.760 align:start position:0%
kind of a hierarchical structuring of
 

00:23:15.760 --> 00:23:17.630 align:start position:0%
kind of a hierarchical structuring of
the<00:23:15.880><c> Transformer</c><00:23:16.799><c> that</c><00:23:16.960><c> could</c><00:23:17.159><c> allow</c><00:23:17.360><c> you</c><00:23:17.480><c> to</c>

00:23:17.630 --> 00:23:17.640 align:start position:0%
the Transformer that could allow you to
 

00:23:17.640 --> 00:23:20.350 align:start position:0%
the Transformer that could allow you to
just<00:23:17.760><c> feed</c><00:23:18.039><c> in</c><00:23:18.440><c> raw</c><00:23:18.799><c> bites</c><00:23:19.640><c> and</c><00:23:19.720><c> so</c><00:23:19.960><c> at</c><00:23:20.039><c> the</c><00:23:20.120><c> end</c>

00:23:20.350 --> 00:23:20.360 align:start position:0%
just feed in raw bites and so at the end
 

00:23:20.360 --> 00:23:21.909 align:start position:0%
just feed in raw bites and so at the end
they<00:23:20.520><c> say</c><00:23:21.080><c> together</c><00:23:21.360><c> these</c><00:23:21.520><c> results</c>

00:23:21.909 --> 00:23:21.919 align:start position:0%
they say together these results
 

00:23:21.919 --> 00:23:23.630 align:start position:0%
they say together these results
establish<00:23:22.279><c> the</c><00:23:22.400><c> viability</c><00:23:22.840><c> of</c><00:23:22.960><c> tokenization</c>

00:23:23.630 --> 00:23:23.640 align:start position:0%
establish the viability of tokenization
 

00:23:23.640 --> 00:23:25.310 align:start position:0%
establish the viability of tokenization
free<00:23:24.080><c> autor</c><00:23:24.360><c> regressive</c><00:23:24.679><c> sequence</c><00:23:25.039><c> modeling</c>

00:23:25.310 --> 00:23:25.320 align:start position:0%
free autor regressive sequence modeling
 

00:23:25.320 --> 00:23:27.390 align:start position:0%
free autor regressive sequence modeling
at<00:23:25.480><c> scale</c><00:23:26.240><c> so</c><00:23:26.400><c> tokenization</c><00:23:26.960><c> free</c><00:23:27.240><c> would</c>

00:23:27.390 --> 00:23:27.400 align:start position:0%
at scale so tokenization free would
 

00:23:27.400 --> 00:23:30.269 align:start position:0%
at scale so tokenization free would
indeed<00:23:27.679><c> be</c><00:23:28.120><c> amazing</c><00:23:28.679><c> we</c><00:23:28.799><c> would</c><00:23:29.039><c> just</c><00:23:29.360><c> feed</c><00:23:30.080><c> B</c>

00:23:30.269 --> 00:23:30.279 align:start position:0%
indeed be amazing we would just feed B
 

00:23:30.279 --> 00:23:32.269 align:start position:0%
indeed be amazing we would just feed B
streams<00:23:30.679><c> directly</c><00:23:31.000><c> into</c><00:23:31.200><c> our</c><00:23:31.360><c> models</c><00:23:32.120><c> but</c>

00:23:32.269 --> 00:23:32.279 align:start position:0%
streams directly into our models but
 

00:23:32.279 --> 00:23:34.149 align:start position:0%
streams directly into our models but
unfortunately<00:23:32.840><c> I</c><00:23:32.919><c> don't</c><00:23:33.080><c> know</c><00:23:33.240><c> that</c><00:23:33.400><c> this</c><00:23:33.600><c> has</c>

00:23:34.149 --> 00:23:34.159 align:start position:0%
unfortunately I don't know that this has
 

00:23:34.159 --> 00:23:36.070 align:start position:0%
unfortunately I don't know that this has
really<00:23:34.400><c> been</c><00:23:34.640><c> proven</c><00:23:35.000><c> out</c><00:23:35.360><c> yet</c><00:23:35.640><c> by</c>

00:23:36.070 --> 00:23:36.080 align:start position:0%
really been proven out yet by
 

00:23:36.080 --> 00:23:37.230 align:start position:0%
really been proven out yet by
sufficiently<00:23:36.520><c> many</c><00:23:36.720><c> groups</c><00:23:36.960><c> and</c><00:23:37.080><c> a</c>

00:23:37.230 --> 00:23:37.240 align:start position:0%
sufficiently many groups and a
 

00:23:37.240 --> 00:23:39.230 align:start position:0%
sufficiently many groups and a
sufficient<00:23:37.600><c> scale</c><00:23:38.440><c> uh</c><00:23:38.559><c> but</c><00:23:38.760><c> something</c><00:23:39.080><c> like</c>

00:23:39.230 --> 00:23:39.240 align:start position:0%
sufficient scale uh but something like
 

00:23:39.240 --> 00:23:40.669 align:start position:0%
sufficient scale uh but something like
this<00:23:39.400><c> at</c><00:23:39.559><c> one</c><00:23:39.720><c> point</c><00:23:39.919><c> would</c><00:23:40.039><c> be</c><00:23:40.159><c> amazing</c><00:23:40.480><c> and</c><00:23:40.559><c> I</c>

00:23:40.669 --> 00:23:40.679 align:start position:0%
this at one point would be amazing and I
 

00:23:40.679 --> 00:23:42.310 align:start position:0%
this at one point would be amazing and I
hope<00:23:40.840><c> someone</c><00:23:41.080><c> comes</c><00:23:41.279><c> up</c><00:23:41.400><c> with</c><00:23:41.520><c> it</c><00:23:42.000><c> but</c><00:23:42.120><c> for</c>

00:23:42.310 --> 00:23:42.320 align:start position:0%
hope someone comes up with it but for
 

00:23:42.320 --> 00:23:44.430 align:start position:0%
hope someone comes up with it but for
now<00:23:42.799><c> we</c><00:23:42.919><c> have</c><00:23:43.039><c> to</c><00:23:43.200><c> come</c><00:23:43.480><c> back</c><00:23:44.000><c> and</c><00:23:44.120><c> we</c><00:23:44.240><c> can't</c>

00:23:44.430 --> 00:23:44.440 align:start position:0%
now we have to come back and we can't
 

00:23:44.440 --> 00:23:46.430 align:start position:0%
now we have to come back and we can't
feed<00:23:44.720><c> this</c><00:23:44.880><c> directly</c><00:23:45.200><c> into</c><00:23:45.600><c> language</c><00:23:45.919><c> models</c>

00:23:46.430 --> 00:23:46.440 align:start position:0%
feed this directly into language models
 

00:23:46.440 --> 00:23:48.269 align:start position:0%
feed this directly into language models
and<00:23:46.559><c> we</c><00:23:46.679><c> have</c><00:23:46.760><c> to</c><00:23:46.960><c> compress</c><00:23:47.320><c> it</c><00:23:47.679><c> using</c><00:23:48.000><c> the</c><00:23:48.120><c> B</c>

00:23:48.269 --> 00:23:48.279 align:start position:0%
and we have to compress it using the B
 

00:23:48.279 --> 00:23:49.830 align:start position:0%
and we have to compress it using the B
paare<00:23:48.440><c> encoding</c><00:23:48.760><c> algorithm</c><00:23:49.400><c> so</c><00:23:49.559><c> let's</c><00:23:49.679><c> see</c>

00:23:49.830 --> 00:23:49.840 align:start position:0%
paare encoding algorithm so let's see
 

00:23:49.840 --> 00:23:51.630 align:start position:0%
paare encoding algorithm so let's see
how<00:23:49.960><c> that</c><00:23:50.080><c> works</c><00:23:50.559><c> so</c><00:23:50.720><c> as</c><00:23:50.799><c> I</c><00:23:50.919><c> mentioned</c><00:23:51.320><c> the</c><00:23:51.440><c> B</c>

00:23:51.630 --> 00:23:51.640 align:start position:0%
how that works so as I mentioned the B
 

00:23:51.640 --> 00:23:53.510 align:start position:0%
how that works so as I mentioned the B
paare<00:23:51.799><c> encoding</c><00:23:52.159><c> algorithm</c><00:23:52.600><c> is</c><00:23:52.799><c> not</c><00:23:53.120><c> all</c><00:23:53.320><c> that</c>

00:23:53.510 --> 00:23:53.520 align:start position:0%
paare encoding algorithm is not all that
 

00:23:53.520 --> 00:23:55.510 align:start position:0%
paare encoding algorithm is not all that
complicated<00:23:54.440><c> and</c><00:23:54.600><c> the</c><00:23:54.720><c> Wikipedia</c><00:23:55.200><c> page</c><00:23:55.360><c> is</c>

00:23:55.510 --> 00:23:55.520 align:start position:0%
complicated and the Wikipedia page is
 

00:23:55.520 --> 00:23:57.149 align:start position:0%
complicated and the Wikipedia page is
actually<00:23:55.799><c> quite</c><00:23:55.960><c> instructive</c><00:23:56.520><c> as</c><00:23:56.640><c> far</c><00:23:56.799><c> as</c><00:23:56.960><c> the</c>

00:23:57.149 --> 00:23:57.159 align:start position:0%
actually quite instructive as far as the
 

00:23:57.159 --> 00:23:59.470 align:start position:0%
actually quite instructive as far as the
basic<00:23:57.440><c> idea</c><00:23:57.720><c> goes</c><00:23:57.919><c> go</c><00:23:58.880><c> what</c><00:23:58.960><c> we're</c><00:23:59.159><c> doing</c><00:23:59.360><c> is</c>

00:23:59.470 --> 00:23:59.480 align:start position:0%
basic idea goes go what we're doing is
 

00:23:59.480 --> 00:24:01.750 align:start position:0%
basic idea goes go what we're doing is
we<00:23:59.600><c> have</c><00:23:59.720><c> some</c><00:23:59.880><c> kind</c><00:24:00.000><c> of</c><00:24:00.200><c> a</c><00:24:00.480><c> input</c><00:24:00.840><c> sequence</c><00:24:01.640><c> uh</c>

00:24:01.750 --> 00:24:01.760 align:start position:0%
we have some kind of a input sequence uh
 

00:24:01.760 --> 00:24:03.630 align:start position:0%
we have some kind of a input sequence uh
like<00:24:01.919><c> for</c><00:24:02.039><c> example</c><00:24:02.400><c> here</c><00:24:02.520><c> we</c><00:24:02.679><c> have</c><00:24:02.840><c> only</c><00:24:03.120><c> four</c>

00:24:03.630 --> 00:24:03.640 align:start position:0%
like for example here we have only four
 

00:24:03.640 --> 00:24:06.310 align:start position:0%
like for example here we have only four
elements<00:24:04.000><c> in</c><00:24:04.080><c> our</c><00:24:04.279><c> vocabulary</c><00:24:05.159><c> a</c><00:24:05.320><c> b</c><00:24:05.520><c> c</c><00:24:05.840><c> and</c><00:24:05.960><c> d</c>

00:24:06.310 --> 00:24:06.320 align:start position:0%
elements in our vocabulary a b c and d
 

00:24:06.320 --> 00:24:07.990 align:start position:0%
elements in our vocabulary a b c and d
and<00:24:06.440><c> we</c><00:24:06.520><c> have</c><00:24:06.640><c> a</c><00:24:06.760><c> sequence</c><00:24:07.200><c> of</c><00:24:07.400><c> them</c><00:24:07.840><c> so</c>

00:24:07.990 --> 00:24:08.000 align:start position:0%
and we have a sequence of them so
 

00:24:08.000 --> 00:24:09.750 align:start position:0%
and we have a sequence of them so
instead<00:24:08.240><c> of</c><00:24:08.440><c> bytes</c><00:24:08.960><c> let's</c><00:24:09.120><c> say</c><00:24:09.279><c> we</c><00:24:09.400><c> just</c><00:24:09.559><c> have</c>

00:24:09.750 --> 00:24:09.760 align:start position:0%
instead of bytes let's say we just have
 

00:24:09.760 --> 00:24:12.029 align:start position:0%
instead of bytes let's say we just have
four<00:24:10.360><c> a</c><00:24:10.559><c> vocab</c><00:24:10.919><c> size</c><00:24:11.120><c> of</c>

00:24:12.029 --> 00:24:12.039 align:start position:0%
four a vocab size of
 

00:24:12.039 --> 00:24:14.110 align:start position:0%
four a vocab size of
four<00:24:13.039><c> the</c><00:24:13.159><c> sequence</c><00:24:13.440><c> is</c><00:24:13.559><c> too</c><00:24:13.720><c> long</c><00:24:13.880><c> and</c><00:24:13.960><c> we'd</c>

00:24:14.110 --> 00:24:14.120 align:start position:0%
four the sequence is too long and we'd
 

00:24:14.120 --> 00:24:16.149 align:start position:0%
four the sequence is too long and we'd
like<00:24:14.240><c> to</c><00:24:14.320><c> compress</c><00:24:14.679><c> it</c><00:24:15.320><c> so</c><00:24:15.480><c> what</c><00:24:15.559><c> we</c><00:24:15.720><c> do</c><00:24:16.000><c> is</c>

00:24:16.149 --> 00:24:16.159 align:start position:0%
like to compress it so what we do is
 

00:24:16.159 --> 00:24:20.149 align:start position:0%
like to compress it so what we do is
that<00:24:16.320><c> we</c><00:24:16.679><c> iteratively</c><00:24:17.679><c> find</c><00:24:18.360><c> the</c><00:24:18.600><c> pair</c><00:24:19.159><c> of</c><00:24:20.000><c> uh</c>

00:24:20.149 --> 00:24:20.159 align:start position:0%
that we iteratively find the pair of uh
 

00:24:20.159 --> 00:24:23.430 align:start position:0%
that we iteratively find the pair of uh
tokens<00:24:21.159><c> that</c><00:24:21.400><c> occur</c><00:24:22.159><c> the</c><00:24:22.360><c> most</c>

00:24:23.430 --> 00:24:23.440 align:start position:0%
tokens that occur the most
 

00:24:23.440 --> 00:24:25.269 align:start position:0%
tokens that occur the most
frequently<00:24:24.440><c> and</c><00:24:24.600><c> then</c><00:24:24.840><c> once</c><00:24:25.039><c> we've</c>

00:24:25.269 --> 00:24:25.279 align:start position:0%
frequently and then once we've
 

00:24:25.279 --> 00:24:28.470 align:start position:0%
frequently and then once we've
identified<00:24:25.840><c> that</c><00:24:26.120><c> pair</c><00:24:27.120><c> we</c><00:24:27.480><c> repl</c><00:24:27.799><c> replace</c>

00:24:28.470 --> 00:24:28.480 align:start position:0%
identified that pair we repl replace
 

00:24:28.480 --> 00:24:30.870 align:start position:0%
identified that pair we repl replace
that<00:24:28.679><c> pair</c><00:24:29.200><c> with</c><00:24:29.399><c> just</c><00:24:29.520><c> a</c><00:24:29.679><c> single</c><00:24:30.039><c> new</c><00:24:30.320><c> token</c>

00:24:30.870 --> 00:24:30.880 align:start position:0%
that pair with just a single new token
 

00:24:30.880 --> 00:24:33.549 align:start position:0%
that pair with just a single new token
that<00:24:31.000><c> we</c><00:24:31.240><c> append</c><00:24:31.760><c> to</c><00:24:31.919><c> our</c><00:24:32.240><c> vocabulary</c><00:24:33.240><c> so</c><00:24:33.399><c> for</c>

00:24:33.549 --> 00:24:33.559 align:start position:0%
that we append to our vocabulary so for
 

00:24:33.559 --> 00:24:36.269 align:start position:0%
that we append to our vocabulary so for
example<00:24:33.919><c> here</c><00:24:34.520><c> the</c><00:24:34.720><c> bite</c><00:24:34.960><c> pair</c><00:24:35.240><c> AA</c><00:24:35.880><c> occurs</c>

00:24:36.269 --> 00:24:36.279 align:start position:0%
example here the bite pair AA occurs
 

00:24:36.279 --> 00:24:38.909 align:start position:0%
example here the bite pair AA occurs
most<00:24:36.520><c> often</c><00:24:37.240><c> so</c><00:24:37.440><c> we</c><00:24:37.559><c> mint</c><00:24:37.880><c> a</c><00:24:38.000><c> new</c><00:24:38.200><c> token</c><00:24:38.720><c> let's</c>

00:24:38.909 --> 00:24:38.919 align:start position:0%
most often so we mint a new token let's
 

00:24:38.919 --> 00:24:41.669 align:start position:0%
most often so we mint a new token let's
call<00:24:39.080><c> it</c><00:24:39.279><c> capital</c><00:24:39.720><c> Z</c><00:24:40.720><c> and</c><00:24:40.880><c> we</c><00:24:41.039><c> replace</c><00:24:41.480><c> every</c>

00:24:41.669 --> 00:24:41.679 align:start position:0%
call it capital Z and we replace every
 

00:24:41.679 --> 00:24:45.990 align:start position:0%
call it capital Z and we replace every
single<00:24:41.960><c> occurrence</c><00:24:42.399><c> of</c><00:24:42.640><c> AA</c><00:24:43.360><c> by</c><00:24:43.880><c> Z</c><00:24:44.880><c> so</c><00:24:45.720><c> now</c><00:24:45.880><c> we</c>

00:24:45.990 --> 00:24:46.000 align:start position:0%
single occurrence of AA by Z so now we
 

00:24:46.000 --> 00:24:48.909 align:start position:0%
single occurrence of AA by Z so now we
have<00:24:46.159><c> two</c><00:24:46.360><c> Z's</c><00:24:46.880><c> here</c><00:24:47.880><c> so</c><00:24:48.159><c> here</c><00:24:48.440><c> we</c><00:24:48.559><c> took</c><00:24:48.720><c> a</c>

00:24:48.909 --> 00:24:48.919 align:start position:0%
have two Z's here so here we took a
 

00:24:48.919 --> 00:24:51.789 align:start position:0%
have two Z's here so here we took a
sequence<00:24:49.399><c> of</c><00:24:49.640><c> 11</c><00:24:50.520><c> characters</c><00:24:51.520><c> with</c>

00:24:51.789 --> 00:24:51.799 align:start position:0%
sequence of 11 characters with
 

00:24:51.799 --> 00:24:54.430 align:start position:0%
sequence of 11 characters with
vocabulary<00:24:52.320><c> size</c><00:24:52.679><c> four</c><00:24:53.679><c> and</c><00:24:53.799><c> we've</c><00:24:54.000><c> converted</c>

00:24:54.430 --> 00:24:54.440 align:start position:0%
vocabulary size four and we've converted
 

00:24:54.440 --> 00:24:58.630 align:start position:0%
vocabulary size four and we've converted
it<00:24:54.640><c> to</c><00:24:54.960><c> a</c><00:24:55.640><c> um</c><00:24:56.159><c> sequence</c><00:24:56.559><c> of</c><00:24:56.799><c> only</c><00:24:57.279><c> nine</c><00:24:57.919><c> tokens</c>

00:24:58.630 --> 00:24:58.640 align:start position:0%
it to a um sequence of only nine tokens
 

00:24:58.640 --> 00:25:00.549 align:start position:0%
it to a um sequence of only nine tokens
but<00:24:58.799><c> now</c><00:24:58.960><c> with</c><00:24:59.080><c> a</c><00:24:59.200><c> vocabulary</c><00:24:59.760><c> of</c><00:25:00.000><c> five</c>

00:25:00.549 --> 00:25:00.559 align:start position:0%
but now with a vocabulary of five
 

00:25:00.559 --> 00:25:02.389 align:start position:0%
but now with a vocabulary of five
because<00:25:00.760><c> we</c><00:25:00.880><c> have</c><00:25:01.000><c> a</c><00:25:01.200><c> fifth</c><00:25:01.840><c> vocabulary</c>

00:25:02.389 --> 00:25:02.399 align:start position:0%
because we have a fifth vocabulary
 

00:25:02.399 --> 00:25:04.950 align:start position:0%
because we have a fifth vocabulary
element<00:25:02.679><c> that</c><00:25:02.760><c> we</c><00:25:02.919><c> just</c><00:25:03.039><c> created</c><00:25:03.760><c> and</c><00:25:03.880><c> it's</c><00:25:04.080><c> Z</c>

00:25:04.950 --> 00:25:04.960 align:start position:0%
element that we just created and it's Z
 

00:25:04.960 --> 00:25:07.510 align:start position:0%
element that we just created and it's Z
standing<00:25:05.240><c> for</c><00:25:05.440><c> concatination</c><00:25:05.840><c> of</c><00:25:06.279><c> AA</c><00:25:07.279><c> and</c><00:25:07.399><c> we</c>

00:25:07.510 --> 00:25:07.520 align:start position:0%
standing for concatination of AA and we
 

00:25:07.520 --> 00:25:10.230 align:start position:0%
standing for concatination of AA and we
can<00:25:08.080><c> again</c><00:25:08.320><c> repeat</c><00:25:08.640><c> this</c><00:25:08.880><c> process</c><00:25:09.679><c> so</c><00:25:10.000><c> we</c>

00:25:10.230 --> 00:25:10.240 align:start position:0%
can again repeat this process so we
 

00:25:10.240 --> 00:25:12.870 align:start position:0%
can again repeat this process so we
again<00:25:10.600><c> look</c><00:25:10.760><c> at</c><00:25:10.919><c> the</c><00:25:11.080><c> sequence</c><00:25:11.919><c> and</c><00:25:12.159><c> identify</c>

00:25:12.870 --> 00:25:12.880 align:start position:0%
again look at the sequence and identify
 

00:25:12.880 --> 00:25:15.630 align:start position:0%
again look at the sequence and identify
the<00:25:13.720><c> pair</c><00:25:14.039><c> of</c><00:25:14.279><c> tokens</c><00:25:14.840><c> that</c><00:25:14.919><c> are</c><00:25:15.200><c> most</c>

00:25:15.630 --> 00:25:15.640 align:start position:0%
the pair of tokens that are most
 

00:25:15.640 --> 00:25:19.149 align:start position:0%
the pair of tokens that are most
frequent<00:25:16.640><c> let's</c><00:25:16.840><c> say</c><00:25:17.039><c> that</c><00:25:17.200><c> that</c><00:25:17.320><c> is</c><00:25:17.520><c> now</c><00:25:18.159><c> AB</c>

00:25:19.149 --> 00:25:19.159 align:start position:0%
frequent let's say that that is now AB
 

00:25:19.159 --> 00:25:20.750 align:start position:0%
frequent let's say that that is now AB
well<00:25:19.360><c> we</c><00:25:19.440><c> are</c><00:25:19.559><c> going</c><00:25:19.679><c> to</c><00:25:19.840><c> replace</c><00:25:20.200><c> AB</c><00:25:20.559><c> with</c><00:25:20.679><c> a</c>

00:25:20.750 --> 00:25:20.760 align:start position:0%
well we are going to replace AB with a
 

00:25:20.760 --> 00:25:23.750 align:start position:0%
well we are going to replace AB with a
new<00:25:20.960><c> token</c><00:25:21.279><c> that</c><00:25:21.360><c> we</c><00:25:21.480><c> meant</c><00:25:22.200><c> call</c><00:25:22.600><c> Y</c><00:25:23.360><c> so</c><00:25:23.600><c> y</c>

00:25:23.750 --> 00:25:23.760 align:start position:0%
new token that we meant call Y so y
 

00:25:23.760 --> 00:25:25.230 align:start position:0%
new token that we meant call Y so y
becomes<00:25:24.080><c> ab</c><00:25:24.520><c> and</c><00:25:24.640><c> then</c><00:25:24.799><c> every</c><00:25:24.960><c> single</c>

00:25:25.230 --> 00:25:25.240 align:start position:0%
becomes ab and then every single
 

00:25:25.240 --> 00:25:28.029 align:start position:0%
becomes ab and then every single
occurrence<00:25:25.600><c> of</c><00:25:25.799><c> ab</c><00:25:26.159><c> is</c><00:25:26.279><c> now</c><00:25:26.440><c> replaced</c><00:25:26.880><c> with</c><00:25:27.320><c> y</c>

00:25:28.029 --> 00:25:28.039 align:start position:0%
occurrence of ab is now replaced with y
 

00:25:28.039 --> 00:25:31.430 align:start position:0%
occurrence of ab is now replaced with y
so<00:25:28.200><c> we</c><00:25:28.320><c> end</c><00:25:28.520><c> up</c><00:25:28.919><c> with</c><00:25:29.559><c> this</c><00:25:30.559><c> so</c><00:25:30.799><c> now</c><00:25:31.000><c> we</c><00:25:31.159><c> only</c>

00:25:31.430 --> 00:25:31.440 align:start position:0%
so we end up with this so now we only
 

00:25:31.440 --> 00:25:35.149 align:start position:0%
so we end up with this so now we only
have<00:25:31.679><c> 1</c><00:25:31.919><c> 2</c><00:25:32.240><c> 3</c><00:25:32.799><c> 4</c><00:25:33.200><c> 5</c><00:25:33.520><c> 6</c><00:25:33.840><c> seven</c><00:25:34.279><c> characters</c><00:25:34.799><c> in</c><00:25:34.919><c> our</c>

00:25:35.149 --> 00:25:35.159 align:start position:0%
have 1 2 3 4 5 6 seven characters in our
 

00:25:35.159 --> 00:25:40.110 align:start position:0%
have 1 2 3 4 5 6 seven characters in our
sequence<00:25:36.159><c> but</c><00:25:36.640><c> we</c><00:25:36.960><c> have</c><00:25:37.480><c> not</c><00:25:38.159><c> just</c><00:25:38.919><c> um</c><00:25:39.559><c> four</c>

00:25:40.110 --> 00:25:40.120 align:start position:0%
sequence but we have not just um four
 

00:25:40.120 --> 00:25:42.310 align:start position:0%
sequence but we have not just um four
vocabulary<00:25:40.600><c> elements</c><00:25:41.320><c> or</c><00:25:41.559><c> five</c><00:25:41.880><c> but</c><00:25:42.039><c> now</c><00:25:42.200><c> we</c>

00:25:42.310 --> 00:25:42.320 align:start position:0%
vocabulary elements or five but now we
 

00:25:42.320 --> 00:25:45.789 align:start position:0%
vocabulary elements or five but now we
have<00:25:42.559><c> six</c><00:25:43.559><c> and</c><00:25:43.960><c> for</c><00:25:44.159><c> the</c><00:25:44.320><c> final</c><00:25:44.679><c> round</c><00:25:45.520><c> we</c>

00:25:45.789 --> 00:25:45.799 align:start position:0%
have six and for the final round we
 

00:25:45.799 --> 00:25:47.630 align:start position:0%
have six and for the final round we
again<00:25:46.080><c> look</c><00:25:46.279><c> through</c><00:25:46.440><c> the</c><00:25:46.600><c> sequence</c><00:25:47.279><c> find</c>

00:25:47.630 --> 00:25:47.640 align:start position:0%
again look through the sequence find
 

00:25:47.640 --> 00:25:50.549 align:start position:0%
again look through the sequence find
that<00:25:47.960><c> the</c><00:25:48.120><c> phrase</c><00:25:48.640><c> zy</c><00:25:49.440><c> or</c><00:25:49.600><c> the</c><00:25:49.720><c> pair</c><00:25:49.960><c> zy</c><00:25:50.360><c> is</c>

00:25:50.549 --> 00:25:50.559 align:start position:0%
that the phrase zy or the pair zy is
 

00:25:50.559 --> 00:25:53.310 align:start position:0%
that the phrase zy or the pair zy is
most<00:25:50.760><c> common</c><00:25:51.480><c> and</c><00:25:51.919><c> replace</c><00:25:52.320><c> it</c><00:25:52.679><c> one</c><00:25:52.840><c> more</c><00:25:53.039><c> time</c>

00:25:53.310 --> 00:25:53.320 align:start position:0%
most common and replace it one more time
 

00:25:53.320 --> 00:25:56.630 align:start position:0%
most common and replace it one more time
with<00:25:53.840><c> another</c><00:25:54.799><c> um</c><00:25:55.039><c> character</c><00:25:55.440><c> let's</c><00:25:55.600><c> say</c><00:25:55.840><c> x</c><00:25:56.440><c> so</c>

00:25:56.630 --> 00:25:56.640 align:start position:0%
with another um character let's say x so
 

00:25:56.640 --> 00:25:59.909 align:start position:0%
with another um character let's say x so
X<00:25:56.880><c> is</c><00:25:57.039><c> z</c><00:25:57.279><c> y</c><00:25:57.720><c> and</c><00:25:57.840><c> we</c><00:25:58.000><c> replace</c><00:25:58.320><c> all</c><00:25:58.559><c> curses</c><00:25:58.840><c> of</c><00:25:58.960><c> zy</c>

00:25:59.909 --> 00:25:59.919 align:start position:0%
X is z y and we replace all curses of zy
 

00:25:59.919 --> 00:26:02.110 align:start position:0%
X is z y and we replace all curses of zy
and<00:26:00.120><c> we</c><00:26:00.279><c> get</c><00:26:00.440><c> this</c><00:26:00.559><c> following</c><00:26:00.960><c> sequence</c><00:26:01.919><c> so</c>

00:26:02.110 --> 00:26:02.120 align:start position:0%
and we get this following sequence so
 

00:26:02.120 --> 00:26:03.590 align:start position:0%
and we get this following sequence so
basically<00:26:02.600><c> after</c><00:26:02.799><c> we</c><00:26:02.919><c> have</c><00:26:03.080><c> gone</c><00:26:03.320><c> through</c>

00:26:03.590 --> 00:26:03.600 align:start position:0%
basically after we have gone through
 

00:26:03.600 --> 00:26:08.470 align:start position:0%
basically after we have gone through
this<00:26:03.880><c> process</c><00:26:04.840><c> instead</c><00:26:05.279><c> of</c><00:26:05.480><c> having</c><00:26:06.480><c> a</c><00:26:07.480><c> um</c>

00:26:08.470 --> 00:26:08.480 align:start position:0%
this process instead of having a um
 

00:26:08.480 --> 00:26:09.750 align:start position:0%
this process instead of having a um
sequence<00:26:08.919><c> of</c>

00:26:09.750 --> 00:26:09.760 align:start position:0%
sequence of
 

00:26:09.760 --> 00:26:13.630 align:start position:0%
sequence of
11<00:26:10.760><c> uh</c><00:26:11.360><c> tokens</c><00:26:12.360><c> with</c><00:26:12.559><c> a</c><00:26:12.720><c> vocabulary</c><00:26:13.240><c> length</c><00:26:13.480><c> of</c>

00:26:13.630 --> 00:26:13.640 align:start position:0%
11 uh tokens with a vocabulary length of
 

00:26:13.640 --> 00:26:18.149 align:start position:0%
11 uh tokens with a vocabulary length of
four<00:26:14.600><c> we</c><00:26:14.799><c> now</c><00:26:15.120><c> have</c><00:26:15.600><c> a</c><00:26:16.080><c> sequence</c><00:26:16.640><c> of</c><00:26:16.919><c> 1</c><00:26:17.159><c> 2</c><00:26:17.440><c> 3</c>

00:26:18.149 --> 00:26:18.159 align:start position:0%
four we now have a sequence of 1 2 3
 

00:26:18.159 --> 00:26:21.470 align:start position:0%
four we now have a sequence of 1 2 3
four<00:26:18.720><c> five</c><00:26:19.679><c> tokens</c><00:26:20.679><c> but</c><00:26:20.840><c> our</c><00:26:21.039><c> vocabulary</c>

00:26:21.470 --> 00:26:21.480 align:start position:0%
four five tokens but our vocabulary
 

00:26:21.480 --> 00:26:25.149 align:start position:0%
four five tokens but our vocabulary
length<00:26:21.840><c> now</c><00:26:22.120><c> is</c><00:26:23.080><c> seven</c><00:26:24.080><c> and</c><00:26:24.240><c> so</c><00:26:24.640><c> in</c><00:26:24.799><c> this</c><00:26:25.000><c> way</c>

00:26:25.149 --> 00:26:25.159 align:start position:0%
length now is seven and so in this way
 

00:26:25.159 --> 00:26:27.430 align:start position:0%
length now is seven and so in this way
we<00:26:25.240><c> can</c><00:26:25.399><c> iteratively</c><00:26:26.039><c> compress</c><00:26:26.600><c> our</c><00:26:26.799><c> sequence</c>

00:26:27.430 --> 00:26:27.440 align:start position:0%
we can iteratively compress our sequence
 

00:26:27.440 --> 00:26:30.269 align:start position:0%
we can iteratively compress our sequence
I<00:26:27.760><c> we</c><00:26:27.880><c> Mint</c><00:26:28.320><c> new</c><00:26:28.520><c> tokens</c><00:26:29.480><c> so</c><00:26:29.640><c> in</c><00:26:29.799><c> the</c><00:26:30.039><c> in</c><00:26:30.120><c> the</c>

00:26:30.269 --> 00:26:30.279 align:start position:0%
I we Mint new tokens so in the in the
 

00:26:30.279 --> 00:26:32.389 align:start position:0%
I we Mint new tokens so in the in the
exact<00:26:30.600><c> same</c><00:26:30.880><c> way</c><00:26:31.320><c> we</c><00:26:31.520><c> start</c><00:26:31.799><c> we</c><00:26:31.919><c> start</c><00:26:32.159><c> out</c>

00:26:32.389 --> 00:26:32.399 align:start position:0%
exact same way we start we start out
 

00:26:32.399 --> 00:26:36.230 align:start position:0%
exact same way we start we start out
with<00:26:32.679><c> bite</c><00:26:33.240><c> sequences</c><00:26:34.240><c> so</c><00:26:34.440><c> we</c><00:26:34.559><c> have</c><00:26:35.240><c> 256</c>

00:26:36.230 --> 00:26:36.240 align:start position:0%
with bite sequences so we have 256
 

00:26:36.240 --> 00:26:38.190 align:start position:0%
with bite sequences so we have 256
vocabulary<00:26:36.799><c> size</c><00:26:37.399><c> but</c><00:26:37.520><c> we're</c><00:26:37.679><c> now</c><00:26:37.840><c> going</c><00:26:38.000><c> to</c>

00:26:38.190 --> 00:26:38.200 align:start position:0%
vocabulary size but we're now going to
 

00:26:38.200 --> 00:26:40.630 align:start position:0%
vocabulary size but we're now going to
go<00:26:38.360><c> through</c><00:26:38.640><c> these</c><00:26:38.880><c> and</c><00:26:39.039><c> find</c><00:26:39.279><c> the</c><00:26:39.440><c> bite</c><00:26:39.919><c> pairs</c>

00:26:40.630 --> 00:26:40.640 align:start position:0%
go through these and find the bite pairs
 

00:26:40.640 --> 00:26:42.549 align:start position:0%
go through these and find the bite pairs
that<00:26:40.840><c> occur</c><00:26:41.360><c> the</c><00:26:41.520><c> most</c><00:26:42.080><c> and</c><00:26:42.159><c> we're</c><00:26:42.279><c> going</c><00:26:42.399><c> to</c>

00:26:42.549 --> 00:26:42.559 align:start position:0%
that occur the most and we're going to
 

00:26:42.559 --> 00:26:44.830 align:start position:0%
that occur the most and we're going to
iteratively<00:26:43.279><c> start</c><00:26:43.640><c> minting</c><00:26:44.000><c> new</c><00:26:44.200><c> tokens</c>

00:26:44.830 --> 00:26:44.840 align:start position:0%
iteratively start minting new tokens
 

00:26:44.840 --> 00:26:46.750 align:start position:0%
iteratively start minting new tokens
appending<00:26:45.240><c> them</c><00:26:45.360><c> to</c><00:26:45.480><c> our</c><00:26:45.679><c> vocabulary</c><00:26:46.559><c> and</c>

00:26:46.750 --> 00:26:46.760 align:start position:0%
appending them to our vocabulary and
 

00:26:46.760 --> 00:26:48.870 align:start position:0%
appending them to our vocabulary and
replacing<00:26:47.279><c> things</c><00:26:48.120><c> and</c><00:26:48.320><c> in</c><00:26:48.440><c> this</c><00:26:48.600><c> way</c><00:26:48.720><c> we're</c>

00:26:48.870 --> 00:26:48.880 align:start position:0%
replacing things and in this way we're
 

00:26:48.880 --> 00:26:50.230 align:start position:0%
replacing things and in this way we're
going<00:26:49.000><c> to</c><00:26:49.120><c> end</c><00:26:49.279><c> up</c><00:26:49.399><c> with</c><00:26:49.520><c> a</c><00:26:49.640><c> compressed</c>

00:26:50.230 --> 00:26:50.240 align:start position:0%
going to end up with a compressed
 

00:26:50.240 --> 00:26:52.950 align:start position:0%
going to end up with a compressed
training<00:26:50.600><c> data</c><00:26:50.880><c> set</c><00:26:51.559><c> and</c><00:26:51.960><c> also</c><00:26:52.320><c> an</c><00:26:52.440><c> algorithm</c>

00:26:52.950 --> 00:26:52.960 align:start position:0%
training data set and also an algorithm
 

00:26:52.960 --> 00:26:55.269 align:start position:0%
training data set and also an algorithm
for<00:26:53.399><c> taking</c><00:26:53.679><c> any</c><00:26:53.880><c> arbitrary</c><00:26:54.360><c> sequence</c><00:26:54.919><c> and</c>

00:26:55.269 --> 00:26:55.279 align:start position:0%
for taking any arbitrary sequence and
 

00:26:55.279 --> 00:26:58.230 align:start position:0%
for taking any arbitrary sequence and
encoding<00:26:55.760><c> it</c><00:26:56.039><c> using</c><00:26:56.440><c> this</c><00:26:57.000><c> uh</c><00:26:57.159><c> vocabul</c>

00:26:58.230 --> 00:26:58.240 align:start position:0%
encoding it using this uh vocabul
 

00:26:58.240 --> 00:27:00.990 align:start position:0%
encoding it using this uh vocabul
and<00:26:58.520><c> also</c><00:26:58.919><c> decoding</c><00:26:59.360><c> it</c><00:26:59.559><c> back</c><00:26:59.679><c> to</c><00:26:59.840><c> Strings</c><00:27:00.720><c> so</c>

00:27:00.990 --> 00:27:01.000 align:start position:0%
and also decoding it back to Strings so
 

00:27:01.000 --> 00:27:03.230 align:start position:0%
and also decoding it back to Strings so
let's<00:27:01.159><c> now</c><00:27:01.320><c> Implement</c><00:27:01.679><c> all</c><00:27:01.880><c> that</c><00:27:02.840><c> so</c><00:27:03.039><c> here's</c>

00:27:03.230 --> 00:27:03.240 align:start position:0%
let's now Implement all that so here's
 

00:27:03.240 --> 00:27:05.669 align:start position:0%
let's now Implement all that so here's
what<00:27:03.360><c> I</c><00:27:03.520><c> did</c><00:27:04.200><c> I</c><00:27:04.320><c> went</c><00:27:04.480><c> to</c><00:27:04.760><c> this</c><00:27:05.000><c> block</c><00:27:05.279><c> post</c>

00:27:05.669 --> 00:27:05.679 align:start position:0%
what I did I went to this block post
 

00:27:05.679 --> 00:27:07.310 align:start position:0%
what I did I went to this block post
that<00:27:05.799><c> I</c><00:27:05.919><c> enjoyed</c><00:27:06.559><c> and</c><00:27:06.679><c> I</c><00:27:06.760><c> took</c><00:27:06.960><c> the</c><00:27:07.080><c> first</c>

00:27:07.310 --> 00:27:07.320 align:start position:0%
that I enjoyed and I took the first
 

00:27:07.320 --> 00:27:09.990 align:start position:0%
that I enjoyed and I took the first
paragraph<00:27:07.880><c> and</c><00:27:08.000><c> I</c><00:27:08.159><c> copy</c><00:27:08.480><c> pasted</c><00:27:08.840><c> it</c><00:27:09.360><c> here</c><00:27:09.640><c> into</c>

00:27:09.990 --> 00:27:10.000 align:start position:0%
paragraph and I copy pasted it here into
 

00:27:10.000 --> 00:27:13.269 align:start position:0%
paragraph and I copy pasted it here into
text<00:27:10.760><c> so</c><00:27:10.960><c> this</c><00:27:11.039><c> is</c><00:27:11.200><c> one</c><00:27:11.440><c> very</c><00:27:11.679><c> long</c><00:27:12.279><c> line</c>

00:27:13.269 --> 00:27:13.279 align:start position:0%
text so this is one very long line
 

00:27:13.279 --> 00:27:15.950 align:start position:0%
text so this is one very long line
here<00:27:14.279><c> now</c><00:27:14.840><c> to</c><00:27:15.000><c> get</c><00:27:15.159><c> the</c><00:27:15.320><c> tokens</c><00:27:15.760><c> as</c><00:27:15.880><c> I</c>

00:27:15.950 --> 00:27:15.960 align:start position:0%
here now to get the tokens as I
 

00:27:15.960 --> 00:27:17.350 align:start position:0%
here now to get the tokens as I
mentioned<00:27:16.279><c> we</c><00:27:16.399><c> just</c><00:27:16.520><c> take</c><00:27:16.679><c> our</c><00:27:16.880><c> text</c><00:27:17.120><c> and</c><00:27:17.240><c> we</c>

00:27:17.350 --> 00:27:17.360 align:start position:0%
mentioned we just take our text and we
 

00:27:17.360 --> 00:27:20.149 align:start position:0%
mentioned we just take our text and we
encode<00:27:17.640><c> it</c><00:27:17.760><c> into</c><00:27:18.360><c> utf8</c><00:27:19.360><c> the</c><00:27:19.520><c> tokens</c><00:27:19.880><c> here</c><00:27:20.039><c> at</c>

00:27:20.149 --> 00:27:20.159 align:start position:0%
encode it into utf8 the tokens here at
 

00:27:20.159 --> 00:27:22.750 align:start position:0%
encode it into utf8 the tokens here at
this<00:27:20.320><c> point</c><00:27:20.520><c> will</c><00:27:20.679><c> be</c><00:27:20.799><c> a</c><00:27:21.039><c> raw</c><00:27:21.440><c> bites</c><00:27:22.440><c> single</c>

00:27:22.750 --> 00:27:22.760 align:start position:0%
this point will be a raw bites single
 

00:27:22.760 --> 00:27:25.590 align:start position:0%
this point will be a raw bites single
stream<00:27:23.120><c> of</c><00:27:23.679><c> bytes</c><00:27:24.679><c> and</c><00:27:24.960><c> just</c><00:27:25.080><c> so</c><00:27:25.279><c> that</c><00:27:25.399><c> it's</c>

00:27:25.590 --> 00:27:25.600 align:start position:0%
stream of bytes and just so that it's
 

00:27:25.600 --> 00:27:27.630 align:start position:0%
stream of bytes and just so that it's
easier<00:27:26.000><c> to</c><00:27:26.159><c> work</c><00:27:26.440><c> with</c><00:27:26.720><c> instead</c><00:27:26.960><c> of</c><00:27:27.120><c> just</c><00:27:27.360><c> a</c>

00:27:27.630 --> 00:27:27.640 align:start position:0%
easier to work with instead of just a
 

00:27:27.640 --> 00:27:29.950 align:start position:0%
easier to work with instead of just a
bytes<00:27:28.000><c> object</c><00:27:28.799><c> I'm</c><00:27:28.960><c> going</c><00:27:29.159><c> to</c><00:27:29.520><c> convert</c><00:27:29.840><c> all</c>

00:27:29.950 --> 00:27:29.960 align:start position:0%
bytes object I'm going to convert all
 

00:27:29.960 --> 00:27:32.630 align:start position:0%
bytes object I'm going to convert all
those<00:27:30.159><c> bytes</c><00:27:30.399><c> to</c><00:27:31.000><c> integers</c><00:27:32.000><c> and</c><00:27:32.200><c> then</c><00:27:32.399><c> create</c>

00:27:32.630 --> 00:27:32.640 align:start position:0%
those bytes to integers and then create
 

00:27:32.640 --> 00:27:34.269 align:start position:0%
those bytes to integers and then create
a<00:27:32.799><c> list</c><00:27:33.000><c> of</c><00:27:33.120><c> it</c><00:27:33.360><c> just</c><00:27:33.480><c> so</c><00:27:33.600><c> it's</c><00:27:33.720><c> easier</c><00:27:34.039><c> for</c><00:27:34.159><c> us</c>

00:27:34.269 --> 00:27:34.279 align:start position:0%
a list of it just so it's easier for us
 

00:27:34.279 --> 00:27:35.870 align:start position:0%
a list of it just so it's easier for us
to<00:27:34.480><c> manipulate</c><00:27:34.919><c> and</c><00:27:35.039><c> work</c><00:27:35.200><c> with</c><00:27:35.320><c> in</c><00:27:35.520><c> Python</c>

00:27:35.870 --> 00:27:35.880 align:start position:0%
to manipulate and work with in Python
 

00:27:35.880 --> 00:27:37.990 align:start position:0%
to manipulate and work with in Python
and<00:27:36.159><c> visualize</c><00:27:37.159><c> and</c><00:27:37.320><c> here</c><00:27:37.440><c> I'm</c><00:27:37.600><c> printing</c><00:27:37.919><c> all</c>

00:27:37.990 --> 00:27:38.000 align:start position:0%
and visualize and here I'm printing all
 

00:27:38.000 --> 00:27:42.070 align:start position:0%
and visualize and here I'm printing all
of<00:27:38.159><c> that</c><00:27:38.360><c> so</c><00:27:39.039><c> this</c><00:27:39.159><c> is</c><00:27:39.320><c> the</c><00:27:39.600><c> original</c><00:27:40.960><c> um</c><00:27:41.960><c> this</c>

00:27:42.070 --> 00:27:42.080 align:start position:0%
of that so this is the original um this
 

00:27:42.080 --> 00:27:44.990 align:start position:0%
of that so this is the original um this
is<00:27:42.200><c> the</c><00:27:42.559><c> original</c><00:27:43.559><c> paragraph</c><00:27:44.440><c> and</c><00:27:44.559><c> its</c><00:27:44.720><c> length</c>

00:27:44.990 --> 00:27:45.000 align:start position:0%
is the original paragraph and its length
 

00:27:45.000 --> 00:27:45.789 align:start position:0%
is the original paragraph and its length
is

00:27:45.789 --> 00:27:45.799 align:start position:0%
is
 

00:27:45.799 --> 00:27:49.789 align:start position:0%
is
533<00:27:46.799><c> uh</c><00:27:46.960><c> code</c><00:27:47.720><c> points</c><00:27:48.720><c> and</c><00:27:48.880><c> then</c><00:27:49.080><c> here</c><00:27:49.279><c> are</c><00:27:49.559><c> the</c>

00:27:49.789 --> 00:27:49.799 align:start position:0%
533 uh code points and then here are the
 

00:27:49.799 --> 00:27:53.310 align:start position:0%
533 uh code points and then here are the
bytes<00:27:50.480><c> encoded</c><00:27:50.880><c> in</c><00:27:51.000><c> ut</c><00:27:51.760><c> utf8</c><00:27:52.760><c> and</c><00:27:52.840><c> we</c><00:27:52.960><c> see</c><00:27:53.200><c> that</c>

00:27:53.310 --> 00:27:53.320 align:start position:0%
bytes encoded in ut utf8 and we see that
 

00:27:53.320 --> 00:27:56.310 align:start position:0%
bytes encoded in ut utf8 and we see that
this<00:27:53.480><c> has</c><00:27:53.559><c> a</c><00:27:53.679><c> length</c><00:27:53.919><c> of</c><00:27:54.519><c> 616</c><00:27:55.519><c> bytes</c><00:27:56.080><c> at</c><00:27:56.200><c> this</c>

00:27:56.310 --> 00:27:56.320 align:start position:0%
this has a length of 616 bytes at this
 

00:27:56.320 --> 00:27:59.029 align:start position:0%
this has a length of 616 bytes at this
point<00:27:56.480><c> or</c><00:27:56.679><c> 616</c><00:27:57.640><c> tokens</c><00:27:58.480><c> and</c><00:27:58.600><c> the</c><00:27:58.679><c> reason</c><00:27:58.960><c> this</c>

00:27:59.029 --> 00:27:59.039 align:start position:0%
point or 616 tokens and the reason this
 

00:27:59.039 --> 00:28:01.830 align:start position:0%
point or 616 tokens and the reason this
is<00:27:59.240><c> more</c><00:27:59.799><c> is</c><00:28:00.080><c> because</c><00:28:00.840><c> a</c><00:28:00.960><c> lot</c><00:28:01.080><c> of</c><00:28:01.240><c> these</c><00:28:01.440><c> simple</c>

00:28:01.830 --> 00:28:01.840 align:start position:0%
is more is because a lot of these simple
 

00:28:01.840 --> 00:28:04.590 align:start position:0%
is more is because a lot of these simple
asky<00:28:02.360><c> characters</c><00:28:03.159><c> or</c><00:28:03.600><c> simple</c><00:28:03.960><c> characters</c>

00:28:04.590 --> 00:28:04.600 align:start position:0%
asky characters or simple characters
 

00:28:04.600 --> 00:28:06.430 align:start position:0%
asky characters or simple characters
they<00:28:04.720><c> just</c><00:28:04.880><c> become</c><00:28:05.080><c> a</c><00:28:05.200><c> single</c><00:28:05.519><c> bite</c><00:28:06.080><c> but</c><00:28:06.200><c> a</c><00:28:06.320><c> lot</c>

00:28:06.430 --> 00:28:06.440 align:start position:0%
they just become a single bite but a lot
 

00:28:06.440 --> 00:28:08.750 align:start position:0%
they just become a single bite but a lot
of<00:28:06.559><c> these</c><00:28:06.720><c> Unicode</c><00:28:07.720><c> more</c><00:28:07.960><c> complex</c><00:28:08.360><c> characters</c>

00:28:08.750 --> 00:28:08.760 align:start position:0%
of these Unicode more complex characters
 

00:28:08.760 --> 00:28:11.070 align:start position:0%
of these Unicode more complex characters
become<00:28:09.000><c> multiple</c><00:28:09.360><c> bytes</c><00:28:09.720><c> up</c><00:28:09.840><c> to</c><00:28:10.000><c> four</c><00:28:10.679><c> and</c><00:28:10.840><c> so</c>

00:28:11.070 --> 00:28:11.080 align:start position:0%
become multiple bytes up to four and so
 

00:28:11.080 --> 00:28:12.750 align:start position:0%
become multiple bytes up to four and so
we<00:28:11.159><c> are</c><00:28:11.399><c> expanding</c><00:28:11.960><c> that</c>

00:28:12.750 --> 00:28:12.760 align:start position:0%
we are expanding that
 

00:28:12.760 --> 00:28:14.789 align:start position:0%
we are expanding that
size<00:28:13.760><c> so</c><00:28:13.960><c> now</c><00:28:14.080><c> what</c><00:28:14.159><c> we'd</c><00:28:14.320><c> like</c><00:28:14.440><c> to</c><00:28:14.519><c> do</c><00:28:14.640><c> as</c><00:28:14.720><c> a</c>

00:28:14.789 --> 00:28:14.799 align:start position:0%
size so now what we'd like to do as a
 

00:28:14.799 --> 00:28:16.230 align:start position:0%
size so now what we'd like to do as a
first<00:28:15.000><c> step</c><00:28:15.159><c> of</c><00:28:15.240><c> the</c><00:28:15.320><c> algorithm</c><00:28:15.799><c> is</c><00:28:15.919><c> we'd</c><00:28:16.120><c> like</c>

00:28:16.230 --> 00:28:16.240 align:start position:0%
first step of the algorithm is we'd like
 

00:28:16.240 --> 00:28:18.909 align:start position:0%
first step of the algorithm is we'd like
to<00:28:16.399><c> iterate</c><00:28:16.799><c> over</c><00:28:17.000><c> here</c><00:28:17.679><c> and</c><00:28:17.919><c> find</c><00:28:18.440><c> the</c><00:28:18.679><c> pair</c>

00:28:18.909 --> 00:28:18.919 align:start position:0%
to iterate over here and find the pair
 

00:28:18.919 --> 00:28:21.990 align:start position:0%
to iterate over here and find the pair
of<00:28:19.120><c> bites</c><00:28:19.679><c> that</c><00:28:19.840><c> occur</c><00:28:20.519><c> most</c><00:28:21.000><c> frequently</c>

00:28:21.990 --> 00:28:22.000 align:start position:0%
of bites that occur most frequently
 

00:28:22.000 --> 00:28:24.110 align:start position:0%
of bites that occur most frequently
because<00:28:22.200><c> we're</c><00:28:22.399><c> then</c><00:28:22.519><c> going</c><00:28:22.679><c> to</c><00:28:22.799><c> merge</c><00:28:23.080><c> it</c><00:28:23.840><c> so</c>

00:28:24.110 --> 00:28:24.120 align:start position:0%
because we're then going to merge it so
 

00:28:24.120 --> 00:28:25.789 align:start position:0%
because we're then going to merge it so
if<00:28:24.200><c> you</c><00:28:24.360><c> are</c><00:28:24.519><c> working</c><00:28:24.799><c> long</c><00:28:25.039><c> on</c><00:28:25.159><c> a</c><00:28:25.320><c> notebook</c><00:28:25.720><c> on</c>

00:28:25.789 --> 00:28:25.799 align:start position:0%
if you are working long on a notebook on
 

00:28:25.799 --> 00:28:27.750 align:start position:0%
if you are working long on a notebook on
a<00:28:26.039><c> side</c><00:28:26.480><c> then</c><00:28:26.760><c> I</c><00:28:26.880><c> encourage</c><00:28:27.159><c> you</c><00:28:27.240><c> to</c><00:28:27.480><c> basically</c>

00:28:27.750 --> 00:28:27.760 align:start position:0%
a side then I encourage you to basically
 

00:28:27.760 --> 00:28:29.909 align:start position:0%
a side then I encourage you to basically
click<00:28:27.919><c> on</c><00:28:28.039><c> the</c><00:28:28.159><c> link</c><00:28:28.640><c> find</c><00:28:28.880><c> this</c><00:28:29.039><c> notebook</c><00:28:29.799><c> and</c>

00:28:29.909 --> 00:28:29.919 align:start position:0%
click on the link find this notebook and
 

00:28:29.919 --> 00:28:31.870 align:start position:0%
click on the link find this notebook and
try<00:28:30.120><c> to</c><00:28:30.240><c> write</c><00:28:30.440><c> that</c><00:28:30.600><c> function</c><00:28:30.919><c> yourself</c>

00:28:31.870 --> 00:28:31.880 align:start position:0%
try to write that function yourself
 

00:28:31.880 --> 00:28:32.950 align:start position:0%
try to write that function yourself
otherwise<00:28:32.200><c> I'm</c><00:28:32.320><c> going</c><00:28:32.440><c> to</c><00:28:32.559><c> come</c><00:28:32.720><c> here</c><00:28:32.840><c> and</c>

00:28:32.950 --> 00:28:32.960 align:start position:0%
otherwise I'm going to come here and
 

00:28:32.960 --> 00:28:34.950 align:start position:0%
otherwise I'm going to come here and
Implement<00:28:33.519><c> first</c><00:28:34.039><c> the</c><00:28:34.159><c> function</c><00:28:34.519><c> that</c><00:28:34.640><c> finds</c>

00:28:34.950 --> 00:28:34.960 align:start position:0%
Implement first the function that finds
 

00:28:34.960 --> 00:28:36.909 align:start position:0%
Implement first the function that finds
the<00:28:35.080><c> most</c><00:28:35.240><c> common</c><00:28:35.559><c> pair</c><00:28:36.320><c> okay</c><00:28:36.440><c> so</c><00:28:36.600><c> here's</c><00:28:36.799><c> what</c>

00:28:36.909 --> 00:28:36.919 align:start position:0%
the most common pair okay so here's what
 

00:28:36.919 --> 00:28:38.389 align:start position:0%
the most common pair okay so here's what
I<00:28:37.039><c> came</c><00:28:37.240><c> up</c><00:28:37.399><c> with</c><00:28:37.600><c> there</c><00:28:37.679><c> are</c><00:28:37.840><c> many</c><00:28:38.120><c> different</c>

00:28:38.389 --> 00:28:38.399 align:start position:0%
I came up with there are many different
 

00:28:38.399 --> 00:28:40.310 align:start position:0%
I came up with there are many different
ways<00:28:38.600><c> to</c><00:28:38.840><c> implement</c><00:28:39.279><c> this</c><00:28:39.799><c> but</c><00:28:39.960><c> I'm</c><00:28:40.080><c> calling</c>

00:28:40.310 --> 00:28:40.320 align:start position:0%
ways to implement this but I'm calling
 

00:28:40.320 --> 00:28:42.149 align:start position:0%
ways to implement this but I'm calling
the<00:28:40.399><c> function</c><00:28:40.679><c> get</c><00:28:40.919><c> stats</c><00:28:41.360><c> it</c><00:28:41.519><c> expects</c><00:28:41.840><c> a</c><00:28:42.000><c> list</c>

00:28:42.149 --> 00:28:42.159 align:start position:0%
the function get stats it expects a list
 

00:28:42.159 --> 00:28:44.470 align:start position:0%
the function get stats it expects a list
of<00:28:42.320><c> integers</c><00:28:43.240><c> I'm</c><00:28:43.440><c> using</c><00:28:43.679><c> a</c><00:28:43.840><c> dictionary</c><00:28:44.279><c> to</c>

00:28:44.470 --> 00:28:44.480 align:start position:0%
of integers I'm using a dictionary to
 

00:28:44.480 --> 00:28:46.870 align:start position:0%
of integers I'm using a dictionary to
keep<00:28:44.720><c> track</c><00:28:45.120><c> of</c><00:28:45.320><c> basically</c><00:28:45.679><c> the</c><00:28:45.840><c> counts</c><00:28:46.799><c> and</c>

00:28:46.870 --> 00:28:46.880 align:start position:0%
keep track of basically the counts and
 

00:28:46.880 --> 00:28:48.830 align:start position:0%
keep track of basically the counts and
then<00:28:47.039><c> this</c><00:28:47.120><c> is</c><00:28:47.240><c> a</c><00:28:47.399><c> pythonic</c><00:28:47.840><c> way</c><00:28:48.000><c> to</c><00:28:48.320><c> iterate</c>

00:28:48.830 --> 00:28:48.840 align:start position:0%
then this is a pythonic way to iterate
 

00:28:48.840 --> 00:28:51.430 align:start position:0%
then this is a pythonic way to iterate
consecutive<00:28:49.399><c> elements</c><00:28:50.039><c> of</c><00:28:50.320><c> this</c><00:28:50.519><c> list</c><00:28:51.279><c> uh</c>

00:28:51.430 --> 00:28:51.440 align:start position:0%
consecutive elements of this list uh
 

00:28:51.440 --> 00:28:53.710 align:start position:0%
consecutive elements of this list uh
which<00:28:51.600><c> we</c><00:28:51.720><c> covered</c><00:28:51.960><c> in</c><00:28:52.039><c> the</c><00:28:52.200><c> previous</c><00:28:52.720><c> video</c>

00:28:53.710 --> 00:28:53.720 align:start position:0%
which we covered in the previous video
 

00:28:53.720 --> 00:28:55.909 align:start position:0%
which we covered in the previous video
and<00:28:53.919><c> then</c><00:28:54.279><c> here</c><00:28:54.519><c> I'm</c><00:28:54.679><c> just</c><00:28:54.880><c> keeping</c><00:28:55.159><c> track</c><00:28:55.399><c> of</c>

00:28:55.909 --> 00:28:55.919 align:start position:0%
and then here I'm just keeping track of
 

00:28:55.919 --> 00:28:58.549 align:start position:0%
and then here I'm just keeping track of
just<00:28:56.080><c> incrementing</c><00:28:56.600><c> by</c><00:28:56.799><c> one</c><00:28:57.679><c> um</c><00:28:58.120><c> for</c><00:28:58.320><c> all</c><00:28:58.440><c> the</c>

00:28:58.549 --> 00:28:58.559 align:start position:0%
just incrementing by one um for all the
 

00:28:58.559 --> 00:29:00.389 align:start position:0%
just incrementing by one um for all the
pairs<00:28:59.200><c> so</c><00:28:59.320><c> if</c><00:28:59.440><c> I</c><00:28:59.519><c> call</c><00:28:59.720><c> this</c><00:28:59.840><c> on</c><00:28:59.960><c> all</c><00:29:00.159><c> the</c>

00:29:00.389 --> 00:29:00.399 align:start position:0%
pairs so if I call this on all the
 

00:29:00.399 --> 00:29:03.389 align:start position:0%
pairs so if I call this on all the
tokens<00:29:01.039><c> here</c><00:29:01.919><c> then</c><00:29:02.120><c> the</c><00:29:02.279><c> stats</c><00:29:02.720><c> comes</c><00:29:03.000><c> out</c>

00:29:03.389 --> 00:29:03.399 align:start position:0%
tokens here then the stats comes out
 

00:29:03.399 --> 00:29:06.149 align:start position:0%
tokens here then the stats comes out
here<00:29:04.080><c> so</c><00:29:04.279><c> this</c><00:29:04.360><c> is</c><00:29:04.480><c> the</c><00:29:04.640><c> dictionary</c><00:29:05.600><c> the</c><00:29:05.760><c> keys</c>

00:29:06.149 --> 00:29:06.159 align:start position:0%
here so this is the dictionary the keys
 

00:29:06.159 --> 00:29:08.909 align:start position:0%
here so this is the dictionary the keys
are<00:29:06.559><c> these</c><00:29:07.039><c> topples</c><00:29:07.960><c> of</c><00:29:08.360><c> consecutive</c>

00:29:08.909 --> 00:29:08.919 align:start position:0%
are these topples of consecutive
 

00:29:08.919 --> 00:29:11.590 align:start position:0%
are these topples of consecutive
elements<00:29:09.440><c> and</c><00:29:09.559><c> this</c><00:29:09.640><c> is</c><00:29:09.799><c> the</c><00:29:10.080><c> count</c><00:29:11.080><c> so</c><00:29:11.320><c> just</c>

00:29:11.590 --> 00:29:11.600 align:start position:0%
elements and this is the count so just
 

00:29:11.600 --> 00:29:14.669 align:start position:0%
elements and this is the count so just
to<00:29:12.600><c> uh</c><00:29:12.720><c> print</c><00:29:12.919><c> it</c><00:29:13.039><c> in</c><00:29:13.120><c> a</c><00:29:13.279><c> slightly</c><00:29:13.600><c> better</c><00:29:13.880><c> way</c>

00:29:14.669 --> 00:29:14.679 align:start position:0%
to uh print it in a slightly better way
 

00:29:14.679 --> 00:29:17.590 align:start position:0%
to uh print it in a slightly better way
this<00:29:14.799><c> is</c><00:29:15.039><c> one</c><00:29:15.279><c> way</c><00:29:15.440><c> that</c><00:29:15.600><c> I</c><00:29:15.720><c> like</c><00:29:15.919><c> to</c><00:29:16.080><c> do</c><00:29:16.600><c> that</c>

00:29:17.590 --> 00:29:17.600 align:start position:0%
this is one way that I like to do that
 

00:29:17.600 --> 00:29:20.549 align:start position:0%
this is one way that I like to do that
where<00:29:18.000><c> you</c><00:29:18.600><c> it's</c><00:29:18.720><c> a</c><00:29:18.840><c> little</c><00:29:19.039><c> bit</c><00:29:20.039><c> compound</c>

00:29:20.549 --> 00:29:20.559 align:start position:0%
where you it's a little bit compound
 

00:29:20.559 --> 00:29:22.350 align:start position:0%
where you it's a little bit compound
here<00:29:20.679><c> so</c><00:29:20.799><c> you</c><00:29:20.919><c> can</c><00:29:21.039><c> pause</c><00:29:21.320><c> if</c><00:29:21.440><c> you</c><00:29:21.559><c> like</c><00:29:22.039><c> but</c><00:29:22.159><c> we</c>

00:29:22.350 --> 00:29:22.360 align:start position:0%
here so you can pause if you like but we
 

00:29:22.360 --> 00:29:25.029 align:start position:0%
here so you can pause if you like but we
iterate<00:29:22.720><c> all</c><00:29:22.960><c> all</c><00:29:23.080><c> the</c><00:29:23.440><c> items</c><00:29:24.440><c> the</c><00:29:24.600><c> items</c>

00:29:25.029 --> 00:29:25.039 align:start position:0%
iterate all all the items the items
 

00:29:25.039 --> 00:29:27.389 align:start position:0%
iterate all all the items the items
called<00:29:25.320><c> on</c><00:29:25.519><c> dictionary</c><00:29:26.159><c> returns</c><00:29:26.640><c> pairs</c><00:29:26.960><c> of</c>

00:29:27.389 --> 00:29:27.399 align:start position:0%
called on dictionary returns pairs of
 

00:29:27.399 --> 00:29:31.789 align:start position:0%
called on dictionary returns pairs of
key<00:29:27.960><c> value</c><00:29:28.960><c> and</c><00:29:29.159><c> instead</c><00:29:29.640><c> I</c><00:29:30.000><c> create</c><00:29:31.000><c> a</c><00:29:31.360><c> list</c>

00:29:31.789 --> 00:29:31.799 align:start position:0%
key value and instead I create a list
 

00:29:31.799 --> 00:29:35.110 align:start position:0%
key value and instead I create a list
here<00:29:32.399><c> of</c><00:29:32.760><c> value</c><00:29:33.159><c> key</c><00:29:34.039><c> because</c><00:29:34.279><c> if</c><00:29:34.399><c> it's</c><00:29:34.519><c> a</c>

00:29:35.110 --> 00:29:35.120 align:start position:0%
here of value key because if it's a
 

00:29:35.120 --> 00:29:37.269 align:start position:0%
here of value key because if it's a
value<00:29:35.519><c> key</c><00:29:35.799><c> list</c><00:29:36.120><c> then</c><00:29:36.279><c> I</c><00:29:36.360><c> can</c><00:29:36.519><c> call</c><00:29:36.720><c> sort</c><00:29:37.080><c> on</c>

00:29:37.269 --> 00:29:37.279 align:start position:0%
value key list then I can call sort on
 

00:29:37.279 --> 00:29:41.350 align:start position:0%
value key list then I can call sort on
it<00:29:37.960><c> and</c><00:29:38.120><c> by</c><00:29:38.320><c> default</c><00:29:39.080><c> python</c><00:29:39.559><c> will</c><00:29:40.480><c> uh</c><00:29:40.640><c> use</c><00:29:41.000><c> the</c>

00:29:41.350 --> 00:29:41.360 align:start position:0%
it and by default python will uh use the
 

00:29:41.360 --> 00:29:43.549 align:start position:0%
it and by default python will uh use the
first<00:29:42.240><c> element</c><00:29:42.679><c> which</c><00:29:42.799><c> in</c><00:29:42.919><c> this</c><00:29:43.039><c> case</c><00:29:43.200><c> will</c><00:29:43.360><c> be</c>

00:29:43.549 --> 00:29:43.559 align:start position:0%
first element which in this case will be
 

00:29:43.559 --> 00:29:46.630 align:start position:0%
first element which in this case will be
value<00:29:43.960><c> to</c><00:29:44.080><c> sort</c><00:29:44.480><c> by</c><00:29:44.840><c> if</c><00:29:44.919><c> it's</c><00:29:45.080><c> given</c><00:29:45.519><c> tles</c><00:29:46.519><c> and</c>

00:29:46.630 --> 00:29:46.640 align:start position:0%
value to sort by if it's given tles and
 

00:29:46.640 --> 00:29:48.710 align:start position:0%
value to sort by if it's given tles and
then<00:29:46.840><c> reverse</c><00:29:47.279><c> so</c><00:29:47.440><c> it's</c><00:29:47.640><c> descending</c><00:29:48.519><c> and</c>

00:29:48.710 --> 00:29:48.720 align:start position:0%
then reverse so it's descending and
 

00:29:48.720 --> 00:29:50.870 align:start position:0%
then reverse so it's descending and
print<00:29:48.960><c> that</c><00:29:49.200><c> so</c><00:29:49.440><c> basically</c><00:29:50.320><c> it</c><00:29:50.440><c> looks</c><00:29:50.679><c> like</c>

00:29:50.870 --> 00:29:50.880 align:start position:0%
print that so basically it looks like
 

00:29:50.880 --> 00:29:53.950 align:start position:0%
print that so basically it looks like
101<00:29:51.640><c> comma</c><00:29:51.919><c> 32</c><00:29:52.600><c> was</c><00:29:52.760><c> the</c><00:29:52.960><c> most</c><00:29:53.519><c> commonly</c>

00:29:53.950 --> 00:29:53.960 align:start position:0%
101 comma 32 was the most commonly
 

00:29:53.960 --> 00:29:55.710 align:start position:0%
101 comma 32 was the most commonly
occurring<00:29:54.440><c> consecutive</c><00:29:54.960><c> pair</c><00:29:55.480><c> and</c><00:29:55.559><c> it</c>

00:29:55.710 --> 00:29:55.720 align:start position:0%
occurring consecutive pair and it
 

00:29:55.720 --> 00:29:58.190 align:start position:0%
occurring consecutive pair and it
occurred<00:29:56.159><c> 20</c><00:29:56.559><c> times</c><00:29:57.399><c> we</c><00:29:57.519><c> can</c><00:29:57.679><c> double</c><00:29:57.919><c> check</c>

00:29:58.190 --> 00:29:58.200 align:start position:0%
occurred 20 times we can double check
 

00:29:58.200 --> 00:30:00.430 align:start position:0%
occurred 20 times we can double check
that<00:29:58.399><c> that</c><00:29:58.799><c> makes</c><00:29:59.080><c> reasonable</c><00:29:59.519><c> sense</c><00:30:00.039><c> so</c><00:30:00.200><c> if</c><00:30:00.320><c> I</c>

00:30:00.430 --> 00:30:00.440 align:start position:0%
that that makes reasonable sense so if I
 

00:30:00.440 --> 00:30:02.070 align:start position:0%
that that makes reasonable sense so if I
just<00:30:00.559><c> search</c>

00:30:02.070 --> 00:30:02.080 align:start position:0%
just search
 

00:30:02.080 --> 00:30:05.190 align:start position:0%
just search
10132<00:30:03.080><c> then</c><00:30:03.200><c> you</c><00:30:03.360><c> see</c><00:30:03.720><c> that</c><00:30:04.279><c> these</c><00:30:04.440><c> are</c><00:30:04.640><c> the</c><00:30:04.799><c> 20</c>

00:30:05.190 --> 00:30:05.200 align:start position:0%
10132 then you see that these are the 20
 

00:30:05.200 --> 00:30:10.110 align:start position:0%
10132 then you see that these are the 20
occurrences<00:30:06.039><c> of</c><00:30:06.360><c> that</c><00:30:07.279><c> um</c><00:30:08.440><c> pair</c><00:30:09.440><c> and</c><00:30:09.799><c> if</c><00:30:09.919><c> we'd</c>

00:30:10.110 --> 00:30:10.120 align:start position:0%
occurrences of that um pair and if we'd
 

00:30:10.120 --> 00:30:11.509 align:start position:0%
occurrences of that um pair and if we'd
like<00:30:10.240><c> to</c><00:30:10.360><c> take</c><00:30:10.480><c> a</c><00:30:10.559><c> look</c><00:30:10.679><c> at</c><00:30:10.880><c> what</c><00:30:11.039><c> exactly</c><00:30:11.399><c> that</c>

00:30:11.509 --> 00:30:11.519 align:start position:0%
like to take a look at what exactly that
 

00:30:11.519 --> 00:30:14.269 align:start position:0%
like to take a look at what exactly that
pair<00:30:11.720><c> is</c><00:30:11.919><c> we</c><00:30:12.000><c> can</c><00:30:12.120><c> use</c><00:30:12.880><c> Char</c><00:30:13.880><c> which</c><00:30:14.000><c> is</c><00:30:14.159><c> the</c>

00:30:14.269 --> 00:30:14.279 align:start position:0%
pair is we can use Char which is the
 

00:30:14.279 --> 00:30:17.830 align:start position:0%
pair is we can use Char which is the
opposite<00:30:14.640><c> of</c><00:30:14.799><c> or</c><00:30:15.399><c> in</c><00:30:15.600><c> Python</c><00:30:16.279><c> so</c><00:30:16.519><c> we</c><00:30:16.679><c> give</c><00:30:16.840><c> it</c><00:30:17.200><c> a</c>

00:30:17.830 --> 00:30:17.840 align:start position:0%
opposite of or in Python so we give it a
 

00:30:17.840 --> 00:30:22.029 align:start position:0%
opposite of or in Python so we give it a
um<00:30:18.120><c> unic</c><00:30:18.440><c> code</c><00:30:18.679><c> Cod</c><00:30:18.919><c> point</c><00:30:19.080><c> so</c><00:30:19.399><c> 101</c><00:30:20.399><c> and</c><00:30:20.720><c> of</c><00:30:21.039><c> 32</c>

00:30:22.029 --> 00:30:22.039 align:start position:0%
um unic code Cod point so 101 and of 32
 

00:30:22.039 --> 00:30:24.990 align:start position:0%
um unic code Cod point so 101 and of 32
and<00:30:22.200><c> we</c><00:30:22.360><c> see</c><00:30:22.640><c> that</c><00:30:22.840><c> this</c><00:30:22.960><c> is</c><00:30:23.279><c> e</c><00:30:23.519><c> and</c><00:30:23.840><c> space</c><00:30:24.840><c> so</c>

00:30:24.990 --> 00:30:25.000 align:start position:0%
and we see that this is e and space so
 

00:30:25.000 --> 00:30:28.070 align:start position:0%
and we see that this is e and space so
basically<00:30:25.440><c> there's</c><00:30:26.000><c> a</c><00:30:26.240><c> lot</c><00:30:26.399><c> of</c><00:30:26.840><c> E</c><00:30:27.320><c> space</c><00:30:27.679><c> here</c>

00:30:28.070 --> 00:30:28.080 align:start position:0%
basically there's a lot of E space here
 

00:30:28.080 --> 00:30:29.470 align:start position:0%
basically there's a lot of E space here
meaning<00:30:28.399><c> that</c><00:30:28.519><c> a</c><00:30:28.640><c> lot</c><00:30:28.760><c> of</c><00:30:28.880><c> these</c><00:30:29.039><c> words</c><00:30:29.279><c> seem</c>

00:30:29.470 --> 00:30:29.480 align:start position:0%
meaning that a lot of these words seem
 

00:30:29.480 --> 00:30:32.110 align:start position:0%
meaning that a lot of these words seem
to<00:30:29.679><c> end</c><00:30:29.960><c> with</c><00:30:30.200><c> e</c><00:30:30.679><c> so</c><00:30:31.000><c> here's</c><00:30:31.320><c> eace</c><00:30:31.840><c> as</c><00:30:31.919><c> an</c>

00:30:32.110 --> 00:30:32.120 align:start position:0%
to end with e so here's eace as an
 

00:30:32.120 --> 00:30:34.029 align:start position:0%
to end with e so here's eace as an
example<00:30:33.120><c> so</c><00:30:33.240><c> there's</c><00:30:33.399><c> a</c><00:30:33.480><c> lot</c><00:30:33.600><c> of</c><00:30:33.720><c> that</c><00:30:33.880><c> going</c>

00:30:34.029 --> 00:30:34.039 align:start position:0%
example so there's a lot of that going
 

00:30:34.039 --> 00:30:36.710 align:start position:0%
example so there's a lot of that going
on<00:30:34.240><c> here</c><00:30:34.519><c> and</c><00:30:34.679><c> this</c><00:30:34.760><c> is</c><00:30:34.960><c> the</c><00:30:35.120><c> most</c><00:30:35.399><c> common</c><00:30:35.720><c> pair</c>

00:30:36.710 --> 00:30:36.720 align:start position:0%
on here and this is the most common pair
 

00:30:36.720 --> 00:30:38.230 align:start position:0%
on here and this is the most common pair
so<00:30:36.880><c> now</c><00:30:37.039><c> that</c><00:30:37.159><c> we've</c><00:30:37.360><c> identified</c><00:30:37.840><c> the</c><00:30:38.000><c> most</c>

00:30:38.230 --> 00:30:38.240 align:start position:0%
so now that we've identified the most
 

00:30:38.240 --> 00:30:40.350 align:start position:0%
so now that we've identified the most
common<00:30:38.559><c> pair</c><00:30:39.120><c> we</c><00:30:39.240><c> would</c><00:30:39.440><c> like</c><00:30:39.600><c> to</c><00:30:39.960><c> iterate</c>

00:30:40.350 --> 00:30:40.360 align:start position:0%
common pair we would like to iterate
 

00:30:40.360 --> 00:30:42.669 align:start position:0%
common pair we would like to iterate
over<00:30:40.559><c> this</c><00:30:40.840><c> sequence</c><00:30:41.840><c> we're</c><00:30:42.039><c> going</c><00:30:42.159><c> to</c><00:30:42.320><c> Mint</c><00:30:42.559><c> a</c>

00:30:42.669 --> 00:30:42.679 align:start position:0%
over this sequence we're going to Mint a
 

00:30:42.679 --> 00:30:44.789 align:start position:0%
over this sequence we're going to Mint a
new<00:30:42.840><c> token</c><00:30:43.159><c> with</c><00:30:43.320><c> the</c><00:30:43.480><c> ID</c><00:30:43.880><c> of</c>

00:30:44.789 --> 00:30:44.799 align:start position:0%
new token with the ID of
 

00:30:44.799 --> 00:30:47.830 align:start position:0%
new token with the ID of
256<00:30:45.799><c> right</c><00:30:46.320><c> because</c><00:30:46.919><c> these</c><00:30:47.120><c> tokens</c><00:30:47.480><c> currently</c>

00:30:47.830 --> 00:30:47.840 align:start position:0%
256 right because these tokens currently
 

00:30:47.840 --> 00:30:50.630 align:start position:0%
256 right because these tokens currently
go<00:30:48.000><c> from</c><00:30:48.159><c> Z</c><00:30:48.440><c> to</c><00:30:48.679><c> 255</c><00:30:49.679><c> so</c><00:30:49.840><c> when</c><00:30:49.960><c> we</c><00:30:50.120><c> create</c><00:30:50.320><c> a</c><00:30:50.440><c> new</c>

00:30:50.630 --> 00:30:50.640 align:start position:0%
go from Z to 255 so when we create a new
 

00:30:50.640 --> 00:30:52.830 align:start position:0%
go from Z to 255 so when we create a new
token<00:30:51.039><c> it</c><00:30:51.159><c> will</c><00:30:51.320><c> have</c><00:30:51.440><c> an</c><00:30:51.559><c> ID</c><00:30:51.840><c> of</c>

00:30:52.830 --> 00:30:52.840 align:start position:0%
token it will have an ID of
 

00:30:52.840 --> 00:30:55.990 align:start position:0%
token it will have an ID of
256<00:30:53.840><c> and</c><00:30:54.440><c> we're</c><00:30:54.640><c> going</c><00:30:54.840><c> to</c><00:30:55.000><c> iterate</c><00:30:55.440><c> over</c><00:30:55.799><c> this</c>

00:30:55.990 --> 00:30:56.000 align:start position:0%
256 and we're going to iterate over this
 

00:30:56.000 --> 00:30:59.830 align:start position:0%
256 and we're going to iterate over this
entire<00:30:56.880><c> um</c><00:30:57.720><c> list</c><00:30:58.399><c> and</c><00:30:58.720><c> every</c><00:30:59.240><c> every</c><00:30:59.480><c> time</c><00:30:59.720><c> we</c>

00:30:59.830 --> 00:30:59.840 align:start position:0%
entire um list and every every time we
 

00:30:59.840 --> 00:31:02.710 align:start position:0%
entire um list and every every time we
see<00:31:00.320><c> 101</c><00:31:00.880><c> comma</c><00:31:01.159><c> 32</c><00:31:01.919><c> we're</c><00:31:02.080><c> going</c><00:31:02.159><c> to</c><00:31:02.320><c> swap</c>

00:31:02.710 --> 00:31:02.720 align:start position:0%
see 101 comma 32 we're going to swap
 

00:31:02.720 --> 00:31:03.909 align:start position:0%
see 101 comma 32 we're going to swap
that<00:31:02.880><c> out</c><00:31:03.159><c> for</c>

00:31:03.909 --> 00:31:03.919 align:start position:0%
that out for
 

00:31:03.919 --> 00:31:07.230 align:start position:0%
that out for
256<00:31:04.919><c> so</c><00:31:05.519><c> let's</c><00:31:05.799><c> Implement</c><00:31:06.360><c> that</c><00:31:06.600><c> now</c><00:31:06.880><c> and</c><00:31:07.000><c> feel</c>

00:31:07.230 --> 00:31:07.240 align:start position:0%
256 so let's Implement that now and feel
 

00:31:07.240 --> 00:31:09.950 align:start position:0%
256 so let's Implement that now and feel
free<00:31:07.440><c> to</c><00:31:08.039><c> uh</c><00:31:08.159><c> do</c><00:31:08.320><c> that</c><00:31:08.440><c> yourself</c><00:31:08.799><c> as</c><00:31:08.960><c> well</c><00:31:09.799><c> so</c>

00:31:09.950 --> 00:31:09.960 align:start position:0%
free to uh do that yourself as well so
 

00:31:09.960 --> 00:31:11.950 align:start position:0%
free to uh do that yourself as well so
first<00:31:10.240><c> I</c><00:31:10.360><c> commented</c><00:31:11.080><c> uh</c><00:31:11.279><c> this</c><00:31:11.559><c> just</c><00:31:11.679><c> so</c><00:31:11.840><c> we</c>

00:31:11.950 --> 00:31:11.960 align:start position:0%
first I commented uh this just so we
 

00:31:11.960 --> 00:31:14.950 align:start position:0%
first I commented uh this just so we
don't<00:31:12.200><c> pollute</c><00:31:13.120><c> uh</c><00:31:13.320><c> the</c><00:31:13.440><c> notebook</c><00:31:13.799><c> too</c><00:31:13.960><c> much</c>

00:31:14.950 --> 00:31:14.960 align:start position:0%
don't pollute uh the notebook too much
 

00:31:14.960 --> 00:31:17.950 align:start position:0%
don't pollute uh the notebook too much
this<00:31:15.159><c> is</c><00:31:15.480><c> a</c><00:31:15.919><c> nice</c><00:31:16.360><c> way</c><00:31:16.720><c> of</c><00:31:17.200><c> in</c><00:31:17.440><c> Python</c>

00:31:17.950 --> 00:31:17.960 align:start position:0%
this is a nice way of in Python
 

00:31:17.960 --> 00:31:20.389 align:start position:0%
this is a nice way of in Python
obtaining<00:31:18.639><c> the</c><00:31:18.840><c> highest</c><00:31:19.159><c> ranking</c><00:31:19.559><c> pair</c><00:31:20.279><c> so</c>

00:31:20.389 --> 00:31:20.399 align:start position:0%
obtaining the highest ranking pair so
 

00:31:20.399 --> 00:31:23.070 align:start position:0%
obtaining the highest ranking pair so
we're<00:31:20.600><c> basically</c><00:31:20.880><c> calling</c><00:31:21.240><c> the</c><00:31:21.399><c> Max</c><00:31:22.000><c> on</c><00:31:22.600><c> this</c>

00:31:23.070 --> 00:31:23.080 align:start position:0%
we're basically calling the Max on this
 

00:31:23.080 --> 00:31:26.310 align:start position:0%
we're basically calling the Max on this
dictionary<00:31:23.960><c> stats</c><00:31:24.960><c> and</c><00:31:25.080><c> this</c><00:31:25.200><c> will</c><00:31:25.600><c> return</c>

00:31:26.310 --> 00:31:26.320 align:start position:0%
dictionary stats and this will return
 

00:31:26.320 --> 00:31:27.669 align:start position:0%
dictionary stats and this will return
the<00:31:26.519><c> maximum</c>

00:31:27.669 --> 00:31:27.679 align:start position:0%
the maximum
 

00:31:27.679 --> 00:31:30.149 align:start position:0%
the maximum
key<00:31:28.679><c> and</c><00:31:28.960><c> then</c><00:31:29.080><c> the</c><00:31:29.240><c> question</c><00:31:29.480><c> is</c><00:31:29.639><c> how</c><00:31:29.799><c> does</c><00:31:29.960><c> it</c>

00:31:30.149 --> 00:31:30.159 align:start position:0%
key and then the question is how does it
 

00:31:30.159 --> 00:31:32.830 align:start position:0%
key and then the question is how does it
rank<00:31:30.679><c> keys</c><00:31:31.679><c> so</c><00:31:31.840><c> you</c><00:31:31.960><c> can</c><00:31:32.159><c> provide</c><00:31:32.399><c> it</c><00:31:32.559><c> with</c><00:31:32.679><c> a</c>

00:31:32.830 --> 00:31:32.840 align:start position:0%
rank keys so you can provide it with a
 

00:31:32.840 --> 00:31:35.190 align:start position:0%
rank keys so you can provide it with a
function<00:31:33.240><c> that</c><00:31:33.399><c> ranks</c><00:31:33.919><c> keys</c><00:31:34.799><c> and</c><00:31:35.000><c> that</c>

00:31:35.190 --> 00:31:35.200 align:start position:0%
function that ranks keys and that
 

00:31:35.200 --> 00:31:38.190 align:start position:0%
function that ranks keys and that
function<00:31:35.480><c> is</c><00:31:35.639><c> just</c><00:31:35.840><c> stats.</c><00:31:36.480><c> getet</c><00:31:37.480><c> uh</c><00:31:37.639><c> stats.</c>

00:31:38.190 --> 00:31:38.200 align:start position:0%
function is just stats. getet uh stats.
 

00:31:38.200 --> 00:31:41.110 align:start position:0%
function is just stats. getet uh stats.
getet<00:31:38.360><c> would</c><00:31:38.559><c> basically</c><00:31:39.039><c> return</c><00:31:39.760><c> the</c><00:31:40.120><c> value</c>

00:31:41.110 --> 00:31:41.120 align:start position:0%
getet would basically return the value
 

00:31:41.120 --> 00:31:42.789 align:start position:0%
getet would basically return the value
and<00:31:41.240><c> so</c><00:31:41.440><c> we're</c><00:31:41.639><c> ranking</c><00:31:42.039><c> by</c><00:31:42.200><c> the</c><00:31:42.360><c> value</c><00:31:42.639><c> and</c>

00:31:42.789 --> 00:31:42.799 align:start position:0%
and so we're ranking by the value and
 

00:31:42.799 --> 00:31:45.470 align:start position:0%
and so we're ranking by the value and
getting<00:31:43.039><c> the</c><00:31:43.240><c> maximum</c><00:31:43.880><c> key</c><00:31:44.480><c> so</c><00:31:44.679><c> it's</c><00:31:44.880><c> 101</c>

00:31:45.470 --> 00:31:45.480 align:start position:0%
getting the maximum key so it's 101
 

00:31:45.480 --> 00:31:49.190 align:start position:0%
getting the maximum key so it's 101
comma<00:31:45.720><c> 32</c><00:31:46.120><c> as</c><00:31:46.240><c> we</c><00:31:46.480><c> saw</c><00:31:47.480><c> now</c><00:31:47.639><c> to</c><00:31:47.840><c> actually</c><00:31:48.080><c> merge</c>

00:31:49.190 --> 00:31:49.200 align:start position:0%
comma 32 as we saw now to actually merge
 

00:31:49.200 --> 00:31:51.870 align:start position:0%
comma 32 as we saw now to actually merge
10132<00:31:50.200><c> um</c><00:31:51.039><c> this</c><00:31:51.200><c> is</c><00:31:51.320><c> the</c><00:31:51.399><c> function</c><00:31:51.639><c> that</c><00:31:51.760><c> I</c>

00:31:51.870 --> 00:31:51.880 align:start position:0%
10132 um this is the function that I
 

00:31:51.880 --> 00:31:53.269 align:start position:0%
10132 um this is the function that I
wrote<00:31:52.200><c> but</c><00:31:52.360><c> again</c><00:31:52.519><c> there</c><00:31:52.600><c> are</c><00:31:52.760><c> many</c><00:31:52.960><c> different</c>

00:31:53.269 --> 00:31:53.279 align:start position:0%
wrote but again there are many different
 

00:31:53.279 --> 00:31:55.710 align:start position:0%
wrote but again there are many different
versions<00:31:53.720><c> of</c><00:31:53.919><c> it</c><00:31:54.799><c> so</c><00:31:54.960><c> we're</c><00:31:55.080><c> going</c><00:31:55.200><c> to</c><00:31:55.399><c> take</c><00:31:55.559><c> a</c>

00:31:55.710 --> 00:31:55.720 align:start position:0%
versions of it so we're going to take a
 

00:31:55.720 --> 00:31:57.710 align:start position:0%
versions of it so we're going to take a
list<00:31:55.919><c> of</c><00:31:56.039><c> IDs</c><00:31:56.799><c> and</c><00:31:57.000><c> the</c><00:31:57.159><c> the</c><00:31:57.320><c> pair</c><00:31:57.519><c> that</c><00:31:57.600><c> we</c>

00:31:57.710 --> 00:31:57.720 align:start position:0%
list of IDs and the the pair that we
 

00:31:57.720 --> 00:31:59.750 align:start position:0%
list of IDs and the the pair that we
want<00:31:57.799><c> to</c><00:31:58.000><c> replace</c><00:31:58.840><c> and</c><00:31:59.039><c> that</c><00:31:59.240><c> pair</c><00:31:59.480><c> will</c><00:31:59.600><c> be</c>

00:31:59.750 --> 00:31:59.760 align:start position:0%
want to replace and that pair will be
 

00:31:59.760 --> 00:32:02.230 align:start position:0%
want to replace and that pair will be
replaced<00:32:00.159><c> with</c><00:32:00.279><c> the</c><00:32:00.399><c> new</c><00:32:00.720><c> index</c>

00:32:02.230 --> 00:32:02.240 align:start position:0%
replaced with the new index
 

00:32:02.240 --> 00:32:05.549 align:start position:0%
replaced with the new index
idx<00:32:03.240><c> so</c><00:32:03.559><c> iterating</c><00:32:04.000><c> through</c><00:32:04.200><c> IDs</c><00:32:04.960><c> if</c><00:32:05.120><c> we</c><00:32:05.320><c> find</c>

00:32:05.549 --> 00:32:05.559 align:start position:0%
idx so iterating through IDs if we find
 

00:32:05.559 --> 00:32:08.430 align:start position:0%
idx so iterating through IDs if we find
the<00:32:05.720><c> pair</c><00:32:06.240><c> swap</c><00:32:06.600><c> it</c><00:32:06.679><c> out</c><00:32:06.799><c> for</c><00:32:07.159><c> idx</c><00:32:08.159><c> so</c><00:32:08.279><c> we</c>

00:32:08.430 --> 00:32:08.440 align:start position:0%
the pair swap it out for idx so we
 

00:32:08.440 --> 00:32:10.509 align:start position:0%
the pair swap it out for idx so we
create<00:32:08.679><c> this</c><00:32:08.840><c> new</c><00:32:09.080><c> list</c><00:32:10.000><c> and</c><00:32:10.080><c> then</c><00:32:10.200><c> we</c><00:32:10.320><c> start</c>

00:32:10.509 --> 00:32:10.519 align:start position:0%
create this new list and then we start
 

00:32:10.519 --> 00:32:12.750 align:start position:0%
create this new list and then we start
at<00:32:10.720><c> zero</c><00:32:11.639><c> and</c><00:32:11.720><c> then</c><00:32:11.840><c> we</c><00:32:12.000><c> go</c><00:32:12.240><c> through</c><00:32:12.559><c> this</c>

00:32:12.750 --> 00:32:12.760 align:start position:0%
at zero and then we go through this
 

00:32:12.760 --> 00:32:14.830 align:start position:0%
at zero and then we go through this
entire<00:32:13.120><c> list</c><00:32:13.320><c> sequentially</c><00:32:13.799><c> from</c><00:32:14.000><c> left</c><00:32:14.159><c> to</c>

00:32:14.830 --> 00:32:14.840 align:start position:0%
entire list sequentially from left to
 

00:32:14.840 --> 00:32:17.110 align:start position:0%
entire list sequentially from left to
right<00:32:15.840><c> and</c><00:32:16.159><c> here</c><00:32:16.320><c> we</c><00:32:16.399><c> are</c><00:32:16.559><c> checking</c><00:32:16.880><c> for</c>

00:32:17.110 --> 00:32:17.120 align:start position:0%
right and here we are checking for
 

00:32:17.120 --> 00:32:19.629 align:start position:0%
right and here we are checking for
equality<00:32:17.960><c> at</c><00:32:18.080><c> the</c><00:32:18.200><c> current</c><00:32:18.519><c> position</c><00:32:19.240><c> with</c>

00:32:19.629 --> 00:32:19.639 align:start position:0%
equality at the current position with
 

00:32:19.639 --> 00:32:20.870 align:start position:0%
equality at the current position with
the

00:32:20.870 --> 00:32:20.880 align:start position:0%
the
 

00:32:20.880 --> 00:32:23.389 align:start position:0%
the
pair<00:32:21.880><c> um</c><00:32:22.240><c> so</c><00:32:22.480><c> here</c><00:32:22.600><c> we</c><00:32:22.720><c> are</c><00:32:22.799><c> checking</c><00:32:23.080><c> that</c><00:32:23.240><c> the</c>

00:32:23.389 --> 00:32:23.399 align:start position:0%
pair um so here we are checking that the
 

00:32:23.399 --> 00:32:25.470 align:start position:0%
pair um so here we are checking that the
pair<00:32:23.679><c> matches</c><00:32:24.600><c> now</c><00:32:24.799><c> here</c><00:32:24.880><c> is</c><00:32:25.000><c> a</c><00:32:25.120><c> bit</c><00:32:25.240><c> of</c><00:32:25.320><c> a</c>

00:32:25.470 --> 00:32:25.480 align:start position:0%
pair matches now here is a bit of a
 

00:32:25.480 --> 00:32:27.230 align:start position:0%
pair matches now here is a bit of a
tricky<00:32:26.000><c> condition</c><00:32:26.320><c> that</c><00:32:26.440><c> you</c><00:32:26.559><c> have</c><00:32:26.639><c> to</c><00:32:26.799><c> append</c>

00:32:27.230 --> 00:32:27.240 align:start position:0%
tricky condition that you have to append
 

00:32:27.240 --> 00:32:29.070 align:start position:0%
tricky condition that you have to append
if<00:32:27.320><c> you're</c><00:32:27.480><c> trying</c><00:32:27.679><c> to</c><00:32:27.799><c> be</c><00:32:27.919><c> careful</c><00:32:28.760><c> and</c><00:32:28.919><c> that</c>

00:32:29.070 --> 00:32:29.080 align:start position:0%
if you're trying to be careful and that
 

00:32:29.080 --> 00:32:31.669 align:start position:0%
if you're trying to be careful and that
is<00:32:29.320><c> that</c><00:32:29.720><c> um</c><00:32:29.880><c> you</c><00:32:30.000><c> don't</c><00:32:30.200><c> want</c><00:32:30.639><c> this</c><00:32:30.960><c> here</c><00:32:31.519><c> to</c>

00:32:31.669 --> 00:32:31.679 align:start position:0%
is that um you don't want this here to
 

00:32:31.679 --> 00:32:33.750 align:start position:0%
is that um you don't want this here to
be<00:32:31.840><c> out</c><00:32:32.000><c> of</c><00:32:32.200><c> Bounds</c><00:32:32.960><c> at</c><00:32:33.080><c> the</c><00:32:33.240><c> very</c><00:32:33.480><c> last</c>

00:32:33.750 --> 00:32:33.760 align:start position:0%
be out of Bounds at the very last
 

00:32:33.760 --> 00:32:35.389 align:start position:0%
be out of Bounds at the very last
position<00:32:34.200><c> when</c><00:32:34.320><c> you're</c><00:32:34.440><c> on</c><00:32:34.600><c> the</c><00:32:34.799><c> rightmost</c>

00:32:35.389 --> 00:32:35.399 align:start position:0%
position when you're on the rightmost
 

00:32:35.399 --> 00:32:37.110 align:start position:0%
position when you're on the rightmost
element<00:32:35.720><c> of</c><00:32:35.880><c> this</c><00:32:36.039><c> list</c><00:32:36.559><c> otherwise</c><00:32:36.960><c> this</c>

00:32:37.110 --> 00:32:37.120 align:start position:0%
element of this list otherwise this
 

00:32:37.120 --> 00:32:39.269 align:start position:0%
element of this list otherwise this
would<00:32:37.639><c> uh</c><00:32:37.720><c> give</c><00:32:37.840><c> you</c><00:32:37.960><c> an</c><00:32:38.039><c> autof</c><00:32:38.360><c> bounds</c><00:32:38.600><c> error</c>

00:32:39.269 --> 00:32:39.279 align:start position:0%
would uh give you an autof bounds error
 

00:32:39.279 --> 00:32:40.669 align:start position:0%
would uh give you an autof bounds error
so<00:32:39.399><c> we</c><00:32:39.519><c> have</c><00:32:39.639><c> to</c><00:32:39.720><c> make</c><00:32:39.880><c> sure</c><00:32:40.080><c> that</c><00:32:40.200><c> we're</c><00:32:40.399><c> not</c>

00:32:40.669 --> 00:32:40.679 align:start position:0%
so we have to make sure that we're not
 

00:32:40.679 --> 00:32:44.029 align:start position:0%
so we have to make sure that we're not
at<00:32:40.840><c> the</c><00:32:41.039><c> very</c><00:32:41.320><c> very</c><00:32:41.639><c> last</c><00:32:42.000><c> element</c><00:32:42.799><c> so</c><00:32:43.720><c> uh</c><00:32:43.919><c> this</c>

00:32:44.029 --> 00:32:44.039 align:start position:0%
at the very very last element so uh this
 

00:32:44.039 --> 00:32:46.590 align:start position:0%
at the very very last element so uh this
would<00:32:44.240><c> be</c><00:32:44.399><c> false</c><00:32:44.679><c> for</c><00:32:44.919><c> that</c><00:32:45.760><c> so</c><00:32:46.000><c> if</c><00:32:46.120><c> we</c><00:32:46.279><c> find</c><00:32:46.440><c> a</c>

00:32:46.590 --> 00:32:46.600 align:start position:0%
would be false for that so if we find a
 

00:32:46.600 --> 00:32:51.070 align:start position:0%
would be false for that so if we find a
match<00:32:47.519><c> we</c><00:32:48.360><c> append</c><00:32:48.960><c> to</c><00:32:49.200><c> this</c><00:32:49.399><c> new</c><00:32:49.720><c> list</c><00:32:50.639><c> that</c>

00:32:51.070 --> 00:32:51.080 align:start position:0%
match we append to this new list that
 

00:32:51.080 --> 00:32:53.310 align:start position:0%
match we append to this new list that
replacement<00:32:51.600><c> index</c><00:32:52.559><c> and</c><00:32:52.679><c> we</c><00:32:52.840><c> increment</c><00:32:53.200><c> the</c>

00:32:53.310 --> 00:32:53.320 align:start position:0%
replacement index and we increment the
 

00:32:53.320 --> 00:32:54.789 align:start position:0%
replacement index and we increment the
position<00:32:53.639><c> by</c><00:32:53.760><c> two</c><00:32:53.960><c> so</c><00:32:54.080><c> we</c><00:32:54.200><c> skip</c><00:32:54.480><c> over</c><00:32:54.679><c> that</c>

00:32:54.789 --> 00:32:54.799 align:start position:0%
position by two so we skip over that
 

00:32:54.799 --> 00:32:57.110 align:start position:0%
position by two so we skip over that
entire<00:32:55.320><c> pair</c><00:32:56.320><c> but</c><00:32:56.480><c> otherwise</c><00:32:56.760><c> if</c><00:32:56.840><c> we</c><00:32:57.039><c> we</c>

00:32:57.110 --> 00:32:57.120 align:start position:0%
entire pair but otherwise if we we
 

00:32:57.120 --> 00:32:59.070 align:start position:0%
entire pair but otherwise if we we
haven't<00:32:57.519><c> found</c><00:32:57.760><c> a</c><00:32:57.880><c> matching</c><00:32:58.240><c> pair</c><00:32:58.799><c> we</c><00:32:58.960><c> just</c>

00:32:59.070 --> 00:32:59.080 align:start position:0%
haven't found a matching pair we just
 

00:32:59.080 --> 00:33:02.110 align:start position:0%
haven't found a matching pair we just
sort<00:32:59.240><c> of</c><00:32:59.519><c> copy</c><00:32:59.840><c> over</c><00:33:00.679><c> the</c><00:33:01.200><c> um</c><00:33:01.440><c> element</c><00:33:01.760><c> at</c><00:33:01.919><c> that</c>

00:33:02.110 --> 00:33:02.120 align:start position:0%
sort of copy over the um element at that
 

00:33:02.120 --> 00:33:05.230 align:start position:0%
sort of copy over the um element at that
position<00:33:02.720><c> and</c><00:33:03.679><c> increment</c><00:33:04.159><c> by</c><00:33:04.320><c> one</c><00:33:05.000><c> then</c>

00:33:05.230 --> 00:33:05.240 align:start position:0%
position and increment by one then
 

00:33:05.240 --> 00:33:07.350 align:start position:0%
position and increment by one then
return<00:33:05.440><c> this</c><00:33:06.200><c> so</c><00:33:06.360><c> here's</c><00:33:06.519><c> a</c><00:33:06.639><c> very</c><00:33:06.760><c> small</c><00:33:07.080><c> toy</c>

00:33:07.350 --> 00:33:07.360 align:start position:0%
return this so here's a very small toy
 

00:33:07.360 --> 00:33:10.350 align:start position:0%
return this so here's a very small toy
example<00:33:07.720><c> if</c><00:33:07.840><c> we</c><00:33:07.919><c> have</c><00:33:08.000><c> a</c><00:33:08.120><c> list</c><00:33:08.399><c> 566</c><00:33:09.159><c> 791</c><00:33:10.159><c> and</c><00:33:10.279><c> we</c>

00:33:10.350 --> 00:33:10.360 align:start position:0%
example if we have a list 566 791 and we
 

00:33:10.360 --> 00:33:12.350 align:start position:0%
example if we have a list 566 791 and we
want<00:33:10.480><c> to</c><00:33:10.639><c> replace</c><00:33:10.919><c> the</c><00:33:11.000><c> occurrences</c><00:33:11.440><c> of</c><00:33:11.559><c> 67</c>

00:33:12.350 --> 00:33:12.360 align:start position:0%
want to replace the occurrences of 67
 

00:33:12.360 --> 00:33:16.350 align:start position:0%
want to replace the occurrences of 67
with<00:33:12.679><c> 99</c><00:33:13.679><c> then</c><00:33:14.320><c> calling</c><00:33:14.840><c> this</c><00:33:15.080><c> on</c><00:33:15.399><c> that</c><00:33:16.039><c> will</c>

00:33:16.350 --> 00:33:16.360 align:start position:0%
with 99 then calling this on that will
 

00:33:16.360 --> 00:33:18.909 align:start position:0%
with 99 then calling this on that will
give<00:33:16.519><c> us</c><00:33:17.200><c> what</c><00:33:17.360><c> we're</c><00:33:17.639><c> asking</c><00:33:17.919><c> for</c><00:33:18.519><c> so</c><00:33:18.720><c> here</c>

00:33:18.909 --> 00:33:18.919 align:start position:0%
give us what we're asking for so here
 

00:33:18.919 --> 00:33:21.509 align:start position:0%
give us what we're asking for so here
the<00:33:19.080><c> 67</c><00:33:19.960><c> is</c><00:33:20.240><c> replaced</c><00:33:20.639><c> with</c>

00:33:21.509 --> 00:33:21.519 align:start position:0%
the 67 is replaced with
 

00:33:21.519 --> 00:33:23.750 align:start position:0%
the 67 is replaced with
99<00:33:22.519><c> so</c><00:33:22.720><c> now</c><00:33:22.840><c> I'm</c><00:33:22.919><c> going</c><00:33:23.000><c> to</c><00:33:23.120><c> uncomment</c><00:33:23.639><c> this</c>

00:33:23.750 --> 00:33:23.760 align:start position:0%
99 so now I'm going to uncomment this
 

00:33:23.760 --> 00:33:27.269 align:start position:0%
99 so now I'm going to uncomment this
for<00:33:23.919><c> our</c><00:33:24.159><c> actual</c><00:33:25.120><c> use</c><00:33:25.480><c> case</c><00:33:26.200><c> where</c><00:33:26.399><c> we</c><00:33:27.080><c> want</c><00:33:27.159><c> to</c>

00:33:27.269 --> 00:33:27.279 align:start position:0%
for our actual use case where we want to
 

00:33:27.279 --> 00:33:29.509 align:start position:0%
for our actual use case where we want to
take<00:33:27.440><c> our</c><00:33:27.639><c> tokens</c><00:33:28.399><c> we</c><00:33:28.519><c> want</c><00:33:28.639><c> to</c><00:33:28.799><c> take</c><00:33:29.000><c> the</c><00:33:29.200><c> top</c>

00:33:29.509 --> 00:33:29.519 align:start position:0%
take our tokens we want to take the top
 

00:33:29.519 --> 00:33:33.110 align:start position:0%
take our tokens we want to take the top
pair<00:33:30.240><c> here</c><00:33:30.919><c> and</c><00:33:31.080><c> replace</c><00:33:31.399><c> it</c><00:33:31.519><c> with</c><00:33:31.679><c> 256</c><00:33:32.679><c> to</c><00:33:32.880><c> get</c>

00:33:33.110 --> 00:33:33.120 align:start position:0%
pair here and replace it with 256 to get
 

00:33:33.120 --> 00:33:37.230 align:start position:0%
pair here and replace it with 256 to get
tokens<00:33:33.480><c> to</c><00:33:34.000><c> if</c><00:33:34.159><c> we</c><00:33:34.320><c> run</c><00:33:34.679><c> this</c><00:33:35.679><c> we</c><00:33:35.840><c> get</c><00:33:35.960><c> the</c>

00:33:37.230 --> 00:33:37.240 align:start position:0%
tokens to if we run this we get the
 

00:33:37.240 --> 00:33:40.870 align:start position:0%
tokens to if we run this we get the
following<00:33:38.240><c> so</c><00:33:38.799><c> recall</c><00:33:39.279><c> that</c><00:33:39.679><c> previously</c><00:33:40.679><c> we</c>

00:33:40.870 --> 00:33:40.880 align:start position:0%
following so recall that previously we
 

00:33:40.880 --> 00:33:45.110 align:start position:0%
following so recall that previously we
had<00:33:41.120><c> a</c><00:33:41.279><c> length</c><00:33:42.240><c> 616</c><00:33:43.240><c> in</c><00:33:43.399><c> this</c><00:33:43.679><c> list</c><00:33:44.679><c> and</c><00:33:44.840><c> now</c><00:33:45.039><c> we</c>

00:33:45.110 --> 00:33:45.120 align:start position:0%
had a length 616 in this list and now we
 

00:33:45.120 --> 00:33:48.430 align:start position:0%
had a length 616 in this list and now we
have<00:33:45.240><c> a</c><00:33:45.360><c> length</c><00:33:46.279><c> 596</c><00:33:47.279><c> right</c><00:33:47.559><c> so</c><00:33:48.240><c> this</c>

00:33:48.430 --> 00:33:48.440 align:start position:0%
have a length 596 right so this
 

00:33:48.440 --> 00:33:50.149 align:start position:0%
have a length 596 right so this
decreased<00:33:48.919><c> by</c><00:33:49.080><c> 20</c><00:33:49.559><c> which</c><00:33:49.679><c> makes</c><00:33:49.919><c> sense</c>

00:33:50.149 --> 00:33:50.159 align:start position:0%
decreased by 20 which makes sense
 

00:33:50.159 --> 00:33:52.350 align:start position:0%
decreased by 20 which makes sense
because<00:33:50.320><c> there</c><00:33:50.440><c> are</c><00:33:50.600><c> 20</c><00:33:51.360><c> occurrences</c>

00:33:52.350 --> 00:33:52.360 align:start position:0%
because there are 20 occurrences
 

00:33:52.360 --> 00:33:55.470 align:start position:0%
because there are 20 occurrences
moreover<00:33:52.840><c> we</c><00:33:52.960><c> can</c><00:33:53.080><c> try</c><00:33:53.240><c> to</c><00:33:53.440><c> find</c><00:33:53.720><c> 256</c><00:33:54.720><c> here</c><00:33:55.399><c> and</c>

00:33:55.470 --> 00:33:55.480 align:start position:0%
moreover we can try to find 256 here and
 

00:33:55.480 --> 00:33:58.430 align:start position:0%
moreover we can try to find 256 here and
we<00:33:55.600><c> see</c><00:33:55.840><c> plenty</c><00:33:56.080><c> of</c><00:33:56.240><c> occurrences</c><00:33:56.760><c> on</c><00:33:56.960><c> off</c><00:33:57.440><c> it</c>

00:33:58.430 --> 00:33:58.440 align:start position:0%
we see plenty of occurrences on off it
 

00:33:58.440 --> 00:33:59.750 align:start position:0%
we see plenty of occurrences on off it
and<00:33:58.600><c> moreover</c><00:33:58.960><c> just</c><00:33:59.159><c> double</c><00:33:59.399><c> check</c><00:33:59.679><c> there</c>

00:33:59.750 --> 00:33:59.760 align:start position:0%
and moreover just double check there
 

00:33:59.760 --> 00:34:02.509 align:start position:0%
and moreover just double check there
should<00:33:59.919><c> be</c><00:34:00.080><c> no</c><00:34:00.279><c> occurrence</c><00:34:00.639><c> of</c><00:34:01.240><c> 10132</c><00:34:02.240><c> so</c><00:34:02.399><c> this</c>

00:34:02.509 --> 00:34:02.519 align:start position:0%
should be no occurrence of 10132 so this
 

00:34:02.519 --> 00:34:04.990 align:start position:0%
should be no occurrence of 10132 so this
is<00:34:02.679><c> the</c><00:34:02.840><c> original</c><00:34:03.360><c> array</c><00:34:03.919><c> plenty</c><00:34:04.200><c> of</c><00:34:04.360><c> them</c><00:34:04.840><c> and</c>

00:34:04.990 --> 00:34:05.000 align:start position:0%
is the original array plenty of them and
 

00:34:05.000 --> 00:34:06.149 align:start position:0%
is the original array plenty of them and
in<00:34:05.120><c> the</c><00:34:05.200><c> second</c><00:34:05.440><c> array</c><00:34:05.720><c> there</c><00:34:05.799><c> are</c><00:34:05.960><c> no</c>

00:34:06.149 --> 00:34:06.159 align:start position:0%
in the second array there are no
 

00:34:06.159 --> 00:34:08.510 align:start position:0%
in the second array there are no
occurrences<00:34:06.639><c> of</c><00:34:07.200><c> 1032</c><00:34:08.200><c> so</c><00:34:08.320><c> we've</c>

00:34:08.510 --> 00:34:08.520 align:start position:0%
occurrences of 1032 so we've
 

00:34:08.520 --> 00:34:11.589 align:start position:0%
occurrences of 1032 so we've
successfully<00:34:09.000><c> merged</c><00:34:09.760><c> this</c><00:34:09.960><c> single</c><00:34:10.440><c> pair</c><00:34:11.440><c> and</c>

00:34:11.589 --> 00:34:11.599 align:start position:0%
successfully merged this single pair and
 

00:34:11.599 --> 00:34:13.909 align:start position:0%
successfully merged this single pair and
now<00:34:11.760><c> we</c><00:34:11.960><c> just</c><00:34:12.320><c> uh</c><00:34:12.440><c> iterate</c><00:34:12.839><c> this</c><00:34:13.359><c> so</c><00:34:13.679><c> we</c><00:34:13.800><c> are</c>

00:34:13.909 --> 00:34:13.919 align:start position:0%
now we just uh iterate this so we are
 

00:34:13.919 --> 00:34:15.470 align:start position:0%
now we just uh iterate this so we are
going<00:34:14.000><c> to</c><00:34:14.159><c> go</c><00:34:14.280><c> over</c><00:34:14.480><c> the</c><00:34:14.599><c> sequence</c><00:34:15.000><c> again</c><00:34:15.320><c> find</c>

00:34:15.470 --> 00:34:15.480 align:start position:0%
going to go over the sequence again find
 

00:34:15.480 --> 00:34:17.790 align:start position:0%
going to go over the sequence again find
the<00:34:15.599><c> most</c><00:34:15.760><c> common</c><00:34:16.040><c> pair</c><00:34:16.399><c> and</c><00:34:16.560><c> replace</c><00:34:16.919><c> it</c><00:34:17.639><c> so</c>

00:34:17.790 --> 00:34:17.800 align:start position:0%
the most common pair and replace it so
 

00:34:17.800 --> 00:34:19.470 align:start position:0%
the most common pair and replace it so
let<00:34:17.919><c> me</c><00:34:18.079><c> now</c><00:34:18.280><c> write</c><00:34:18.440><c> a</c><00:34:18.560><c> y</c><00:34:18.800><c> Loop</c><00:34:19.079><c> that</c><00:34:19.159><c> uses</c>

00:34:19.470 --> 00:34:19.480 align:start position:0%
let me now write a y Loop that uses
 

00:34:19.480 --> 00:34:21.790 align:start position:0%
let me now write a y Loop that uses
these<00:34:19.679><c> functions</c><00:34:20.079><c> to</c><00:34:20.240><c> do</c><00:34:20.520><c> this</c><00:34:21.159><c> um</c><00:34:21.359><c> sort</c><00:34:21.520><c> of</c>

00:34:21.790 --> 00:34:21.800 align:start position:0%
these functions to do this um sort of
 

00:34:21.800 --> 00:34:24.270 align:start position:0%
these functions to do this um sort of
iteratively<00:34:22.800><c> and</c><00:34:23.159><c> how</c><00:34:23.280><c> many</c><00:34:23.480><c> times</c><00:34:23.679><c> do</c><00:34:23.839><c> we</c><00:34:24.079><c> do</c>

00:34:24.270 --> 00:34:24.280 align:start position:0%
iteratively and how many times do we do
 

00:34:24.280 --> 00:34:26.270 align:start position:0%
iteratively and how many times do we do
it<00:34:24.440><c> four</c><00:34:25.119><c> well</c><00:34:25.320><c> that's</c><00:34:25.599><c> totally</c><00:34:25.879><c> up</c><00:34:26.000><c> to</c><00:34:26.079><c> us</c><00:34:26.200><c> as</c>

00:34:26.270 --> 00:34:26.280 align:start position:0%
it four well that's totally up to us as
 

00:34:26.280 --> 00:34:27.389 align:start position:0%
it four well that's totally up to us as
a<00:34:26.359><c> hyper</c><00:34:26.599><c> parameter</c>

00:34:27.389 --> 00:34:27.399 align:start position:0%
a hyper parameter
 

00:34:27.399 --> 00:34:30.909 align:start position:0%
a hyper parameter
the<00:34:27.560><c> more</c><00:34:28.480><c> um</c><00:34:29.040><c> steps</c><00:34:29.399><c> we</c><00:34:29.599><c> take</c><00:34:30.280><c> the</c><00:34:30.440><c> larger</c>

00:34:30.909 --> 00:34:30.919 align:start position:0%
the more um steps we take the larger
 

00:34:30.919 --> 00:34:33.030 align:start position:0%
the more um steps we take the larger
will<00:34:31.079><c> be</c><00:34:31.240><c> our</c><00:34:31.440><c> vocabulary</c><00:34:32.320><c> and</c><00:34:32.480><c> the</c><00:34:32.599><c> shorter</c>

00:34:33.030 --> 00:34:33.040 align:start position:0%
will be our vocabulary and the shorter
 

00:34:33.040 --> 00:34:35.109 align:start position:0%
will be our vocabulary and the shorter
will<00:34:33.200><c> be</c><00:34:33.359><c> our</c><00:34:33.520><c> sequence</c><00:34:34.440><c> and</c><00:34:34.560><c> there</c><00:34:34.679><c> is</c><00:34:34.919><c> some</c>

00:34:35.109 --> 00:34:35.119 align:start position:0%
will be our sequence and there is some
 

00:34:35.119 --> 00:34:37.230 align:start position:0%
will be our sequence and there is some
sweet<00:34:35.480><c> spot</c><00:34:35.879><c> that</c><00:34:36.000><c> we</c><00:34:36.119><c> usually</c><00:34:36.480><c> find</c><00:34:36.879><c> works</c>

00:34:37.230 --> 00:34:37.240 align:start position:0%
sweet spot that we usually find works
 

00:34:37.240 --> 00:34:39.909 align:start position:0%
sweet spot that we usually find works
the<00:34:37.399><c> best</c><00:34:37.639><c> in</c><00:34:37.879><c> practice</c><00:34:38.839><c> and</c><00:34:39.119><c> so</c><00:34:39.599><c> this</c><00:34:39.679><c> is</c><00:34:39.839><c> kind</c>

00:34:39.909 --> 00:34:39.919 align:start position:0%
the best in practice and so this is kind
 

00:34:39.919 --> 00:34:41.629 align:start position:0%
the best in practice and so this is kind
of<00:34:40.000><c> a</c><00:34:40.119><c> hyperparameter</c><00:34:40.800><c> and</c><00:34:40.919><c> we</c><00:34:41.040><c> tune</c><00:34:41.280><c> it</c><00:34:41.520><c> and</c>

00:34:41.629 --> 00:34:41.639 align:start position:0%
of a hyperparameter and we tune it and
 

00:34:41.639 --> 00:34:44.190 align:start position:0%
of a hyperparameter and we tune it and
we<00:34:41.760><c> find</c><00:34:42.079><c> good</c><00:34:42.480><c> vocabulary</c><00:34:43.000><c> sizes</c><00:34:43.919><c> as</c><00:34:44.040><c> an</c>

00:34:44.190 --> 00:34:44.200 align:start position:0%
we find good vocabulary sizes as an
 

00:34:44.200 --> 00:34:45.990 align:start position:0%
we find good vocabulary sizes as an
example<00:34:44.480><c> gp4</c><00:34:45.000><c> currently</c><00:34:45.280><c> uses</c><00:34:45.599><c> roughly</c>

00:34:45.990 --> 00:34:46.000 align:start position:0%
example gp4 currently uses roughly
 

00:34:46.000 --> 00:34:49.869 align:start position:0%
example gp4 currently uses roughly
100,000<00:34:46.839><c> tokens</c><00:34:47.839><c> and</c><00:34:48.240><c> um</c><00:34:48.560><c> bpark</c><00:34:49.560><c> that</c><00:34:49.760><c> those</c>

00:34:49.869 --> 00:34:49.879 align:start position:0%
100,000 tokens and um bpark that those
 

00:34:49.879 --> 00:34:51.790 align:start position:0%
100,000 tokens and um bpark that those
are<00:34:50.040><c> reasonable</c><00:34:50.639><c> numbers</c><00:34:51.079><c> currently</c><00:34:51.440><c> instead</c>

00:34:51.790 --> 00:34:51.800 align:start position:0%
are reasonable numbers currently instead
 

00:34:51.800 --> 00:34:53.909 align:start position:0%
are reasonable numbers currently instead
the<00:34:51.879><c> are</c><00:34:52.040><c> large</c><00:34:52.280><c> language</c><00:34:52.560><c> models</c><00:34:53.440><c> so</c><00:34:53.639><c> let</c><00:34:53.760><c> me</c>

00:34:53.909 --> 00:34:53.919 align:start position:0%
the are large language models so let me
 

00:34:53.919 --> 00:34:55.950 align:start position:0%
the are large language models so let me
now<00:34:54.200><c> write</c><00:34:54.879><c> uh</c><00:34:55.000><c> putting</c><00:34:55.320><c> putting</c><00:34:55.520><c> it</c><00:34:55.679><c> all</c>

00:34:55.950 --> 00:34:55.960 align:start position:0%
now write uh putting putting it all
 

00:34:55.960 --> 00:34:58.670 align:start position:0%
now write uh putting putting it all
together<00:34:56.560><c> and</c><00:34:57.000><c> uh</c><00:34:57.119><c> iterating</c><00:34:57.599><c> these</c><00:34:57.760><c> steps</c>

00:34:58.670 --> 00:34:58.680 align:start position:0%
together and uh iterating these steps
 

00:34:58.680 --> 00:35:00.510 align:start position:0%
together and uh iterating these steps
okay<00:34:58.839><c> now</c><00:34:59.000><c> before</c><00:34:59.200><c> we</c><00:34:59.320><c> dive</c><00:34:59.520><c> into</c><00:34:59.680><c> the</c><00:34:59.839><c> Y</c><00:35:00.079><c> loop</c>

00:35:00.510 --> 00:35:00.520 align:start position:0%
okay now before we dive into the Y loop
 

00:35:00.520 --> 00:35:03.270 align:start position:0%
okay now before we dive into the Y loop
I<00:35:00.599><c> wanted</c><00:35:01.000><c> to</c><00:35:01.560><c> add</c><00:35:01.760><c> one</c><00:35:01.880><c> more</c><00:35:02.040><c> cell</c><00:35:02.400><c> here</c><00:35:03.079><c> where</c>

00:35:03.270 --> 00:35:03.280 align:start position:0%
I wanted to add one more cell here where
 

00:35:03.280 --> 00:35:04.950 align:start position:0%
I wanted to add one more cell here where
I<00:35:03.359><c> went</c><00:35:03.520><c> to</c><00:35:03.640><c> the</c><00:35:03.760><c> block</c><00:35:04.040><c> post</c><00:35:04.400><c> and</c><00:35:04.520><c> instead</c><00:35:04.800><c> of</c>

00:35:04.950 --> 00:35:04.960 align:start position:0%
I went to the block post and instead of
 

00:35:04.960 --> 00:35:06.990 align:start position:0%
I went to the block post and instead of
grabbing<00:35:05.280><c> just</c><00:35:05.440><c> the</c><00:35:05.640><c> first</c><00:35:06.119><c> paragraph</c><00:35:06.520><c> or</c><00:35:06.680><c> two</c>

00:35:06.990 --> 00:35:07.000 align:start position:0%
grabbing just the first paragraph or two
 

00:35:07.000 --> 00:35:08.790 align:start position:0%
grabbing just the first paragraph or two
I<00:35:07.079><c> took</c><00:35:07.240><c> the</c><00:35:07.400><c> entire</c><00:35:07.800><c> block</c><00:35:08.079><c> post</c><00:35:08.599><c> and</c><00:35:08.680><c> I</c>

00:35:08.790 --> 00:35:08.800 align:start position:0%
I took the entire block post and I
 

00:35:08.800 --> 00:35:10.950 align:start position:0%
I took the entire block post and I
stretched<00:35:09.119><c> it</c><00:35:09.240><c> out</c><00:35:09.359><c> in</c><00:35:09.440><c> a</c><00:35:09.560><c> single</c><00:35:09.839><c> line</c><00:35:10.760><c> and</c>

00:35:10.950 --> 00:35:10.960 align:start position:0%
stretched it out in a single line and
 

00:35:10.960 --> 00:35:12.470 align:start position:0%
stretched it out in a single line and
basically<00:35:11.320><c> just</c><00:35:11.440><c> using</c><00:35:11.720><c> longer</c><00:35:12.079><c> text</c><00:35:12.320><c> will</c>

00:35:12.470 --> 00:35:12.480 align:start position:0%
basically just using longer text will
 

00:35:12.480 --> 00:35:13.870 align:start position:0%
basically just using longer text will
allow<00:35:12.640><c> us</c><00:35:12.760><c> to</c><00:35:12.920><c> have</c><00:35:13.040><c> more</c><00:35:13.240><c> representative</c>

00:35:13.870 --> 00:35:13.880 align:start position:0%
allow us to have more representative
 

00:35:13.880 --> 00:35:16.270 align:start position:0%
allow us to have more representative
statistics<00:35:14.599><c> for</c><00:35:14.800><c> the</c><00:35:14.960><c> bite</c><00:35:15.240><c> Pairs</c><00:35:15.920><c> and</c><00:35:16.079><c> we'll</c>

00:35:16.270 --> 00:35:16.280 align:start position:0%
statistics for the bite Pairs and we'll
 

00:35:16.280 --> 00:35:18.030 align:start position:0%
statistics for the bite Pairs and we'll
just<00:35:16.400><c> get</c><00:35:16.520><c> a</c><00:35:16.839><c> more</c><00:35:17.040><c> sensible</c><00:35:17.480><c> results</c><00:35:17.800><c> out</c><00:35:17.920><c> of</c>

00:35:18.030 --> 00:35:18.040 align:start position:0%
just get a more sensible results out of
 

00:35:18.040 --> 00:35:21.750 align:start position:0%
just get a more sensible results out of
it<00:35:18.839><c> because</c><00:35:19.040><c> it's</c><00:35:19.200><c> longer</c><00:35:20.040><c> text</c><00:35:21.040><c> um</c><00:35:21.359><c> so</c><00:35:21.599><c> here</c>

00:35:21.750 --> 00:35:21.760 align:start position:0%
it because it's longer text um so here
 

00:35:21.760 --> 00:35:24.349 align:start position:0%
it because it's longer text um so here
we<00:35:21.880><c> have</c><00:35:22.000><c> the</c><00:35:22.119><c> raw</c><00:35:22.440><c> text</c><00:35:23.119><c> we</c><00:35:23.280><c> encode</c><00:35:23.680><c> it</c><00:35:23.920><c> into</c>

00:35:24.349 --> 00:35:24.359 align:start position:0%
we have the raw text we encode it into
 

00:35:24.359 --> 00:35:27.630 align:start position:0%
we have the raw text we encode it into
bytes<00:35:24.920><c> using</c><00:35:25.240><c> the</c><00:35:25.400><c> utf8</c><00:35:26.359><c> encoding</c>

00:35:27.630 --> 00:35:27.640 align:start position:0%
bytes using the utf8 encoding
 

00:35:27.640 --> 00:35:30.069 align:start position:0%
bytes using the utf8 encoding
and<00:35:27.760><c> then</c><00:35:28.000><c> here</c><00:35:28.480><c> as</c><00:35:28.720><c> before</c><00:35:29.079><c> we</c><00:35:29.200><c> are</c><00:35:29.920><c> just</c>

00:35:30.069 --> 00:35:30.079 align:start position:0%
and then here as before we are just
 

00:35:30.079 --> 00:35:31.829 align:start position:0%
and then here as before we are just
changing<00:35:30.400><c> it</c><00:35:30.560><c> into</c><00:35:30.760><c> a</c><00:35:30.880><c> list</c><00:35:31.079><c> of</c><00:35:31.200><c> integers</c><00:35:31.680><c> in</c>

00:35:31.829 --> 00:35:31.839 align:start position:0%
changing it into a list of integers in
 

00:35:31.839 --> 00:35:33.950 align:start position:0%
changing it into a list of integers in
Python<00:35:32.200><c> just</c><00:35:32.320><c> so</c><00:35:32.480><c> it's</c><00:35:32.680><c> easier</c><00:35:33.040><c> to</c><00:35:33.200><c> work</c><00:35:33.440><c> with</c>

00:35:33.950 --> 00:35:33.960 align:start position:0%
Python just so it's easier to work with
 

00:35:33.960 --> 00:35:36.670 align:start position:0%
Python just so it's easier to work with
instead<00:35:34.200><c> of</c><00:35:34.320><c> the</c><00:35:34.400><c> raw</c><00:35:34.680><c> byes</c><00:35:35.359><c> objects</c><00:35:36.359><c> and</c><00:35:36.480><c> then</c>

00:35:36.670 --> 00:35:36.680 align:start position:0%
instead of the raw byes objects and then
 

00:35:36.680 --> 00:35:40.750 align:start position:0%
instead of the raw byes objects and then
this<00:35:36.800><c> is</c><00:35:37.040><c> the</c><00:35:37.920><c> code</c><00:35:38.480><c> that</c><00:35:38.640><c> I</c><00:35:38.800><c> came</c><00:35:39.000><c> up</c><00:35:39.280><c> with</c><00:35:40.000><c> uh</c>

00:35:40.750 --> 00:35:40.760 align:start position:0%
this is the code that I came up with uh
 

00:35:40.760 --> 00:35:43.990 align:start position:0%
this is the code that I came up with uh
to<00:35:41.760><c> actually</c><00:35:42.000><c> do</c><00:35:42.160><c> the</c><00:35:42.240><c> merging</c><00:35:42.520><c> in</c><00:35:42.839><c> Loop</c><00:35:43.839><c> these</c>

00:35:43.990 --> 00:35:44.000 align:start position:0%
to actually do the merging in Loop these
 

00:35:44.000 --> 00:35:45.829 align:start position:0%
to actually do the merging in Loop these
two<00:35:44.160><c> functions</c><00:35:44.599><c> here</c><00:35:44.880><c> are</c><00:35:45.119><c> identical</c><00:35:45.560><c> to</c><00:35:45.720><c> what</c>

00:35:45.829 --> 00:35:45.839 align:start position:0%
two functions here are identical to what
 

00:35:45.839 --> 00:35:48.109 align:start position:0%
two functions here are identical to what
we<00:35:45.960><c> had</c><00:35:46.160><c> above</c><00:35:46.720><c> I</c><00:35:46.800><c> only</c><00:35:47.040><c> included</c><00:35:47.480><c> them</c><00:35:47.680><c> here</c>

00:35:48.109 --> 00:35:48.119 align:start position:0%
we had above I only included them here
 

00:35:48.119 --> 00:35:49.870 align:start position:0%
we had above I only included them here
just<00:35:48.320><c> so</c><00:35:48.599><c> that</c><00:35:48.760><c> you</c><00:35:48.920><c> have</c><00:35:49.079><c> the</c><00:35:49.520><c> point</c><00:35:49.720><c> of</c>

00:35:49.870 --> 00:35:49.880 align:start position:0%
just so that you have the point of
 

00:35:49.880 --> 00:35:53.349 align:start position:0%
just so that you have the point of
reference<00:35:50.760><c> here</c><00:35:51.760><c> so</c><00:35:52.400><c> uh</c><00:35:52.839><c> these</c><00:35:53.000><c> two</c><00:35:53.160><c> are</c>

00:35:53.349 --> 00:35:53.359 align:start position:0%
reference here so uh these two are
 

00:35:53.359 --> 00:35:54.990 align:start position:0%
reference here so uh these two are
identical<00:35:53.960><c> and</c><00:35:54.079><c> then</c><00:35:54.200><c> this</c><00:35:54.319><c> is</c><00:35:54.440><c> the</c><00:35:54.560><c> new</c><00:35:54.760><c> code</c>

00:35:54.990 --> 00:35:55.000 align:start position:0%
identical and then this is the new code
 

00:35:55.000 --> 00:35:57.069 align:start position:0%
identical and then this is the new code
that<00:35:55.119><c> I</c><00:35:55.359><c> added</c><00:35:56.359><c> so</c><00:35:56.520><c> the</c><00:35:56.599><c> first</c><00:35:56.800><c> first</c><00:35:56.920><c> thing</c><00:35:57.000><c> we</c>

00:35:57.069 --> 00:35:57.079 align:start position:0%
that I added so the first first thing we
 

00:35:57.079 --> 00:35:58.550 align:start position:0%
that I added so the first first thing we
want<00:35:57.160><c> to</c><00:35:57.240><c> do</c><00:35:57.359><c> is</c><00:35:57.440><c> we</c><00:35:57.560><c> want</c><00:35:57.680><c> to</c><00:35:57.839><c> decide</c><00:35:58.079><c> on</c><00:35:58.200><c> the</c>

00:35:58.550 --> 00:35:58.560 align:start position:0%
want to do is we want to decide on the
 

00:35:58.560 --> 00:36:01.030 align:start position:0%
want to do is we want to decide on the
final<00:35:59.079><c> vocabulary</c><00:35:59.760><c> size</c><00:36:00.119><c> that</c><00:36:00.240><c> we</c><00:36:00.400><c> want</c><00:36:00.839><c> our</c>

00:36:01.030 --> 00:36:01.040 align:start position:0%
final vocabulary size that we want our
 

00:36:01.040 --> 00:36:02.950 align:start position:0%
final vocabulary size that we want our
tokenizer<00:36:01.560><c> to</c><00:36:01.760><c> have</c><00:36:02.400><c> and</c><00:36:02.520><c> as</c><00:36:02.599><c> I</c><00:36:02.720><c> mentioned</c>

00:36:02.950 --> 00:36:02.960 align:start position:0%
tokenizer to have and as I mentioned
 

00:36:02.960 --> 00:36:04.510 align:start position:0%
tokenizer to have and as I mentioned
this<00:36:03.040><c> is</c><00:36:03.160><c> a</c><00:36:03.280><c> hyper</c><00:36:03.520><c> parameter</c><00:36:03.960><c> and</c><00:36:04.040><c> you</c><00:36:04.160><c> set</c><00:36:04.359><c> it</c>

00:36:04.510 --> 00:36:04.520 align:start position:0%
this is a hyper parameter and you set it
 

00:36:04.520 --> 00:36:06.430 align:start position:0%
this is a hyper parameter and you set it
in<00:36:04.760><c> some</c><00:36:05.000><c> way</c><00:36:05.240><c> depending</c><00:36:05.560><c> on</c><00:36:05.839><c> your</c><00:36:06.040><c> best</c>

00:36:06.430 --> 00:36:06.440 align:start position:0%
in some way depending on your best
 

00:36:06.440 --> 00:36:08.470 align:start position:0%
in some way depending on your best
performance<00:36:07.440><c> so</c><00:36:07.599><c> let's</c><00:36:07.760><c> say</c><00:36:07.920><c> for</c><00:36:08.119><c> us</c><00:36:08.319><c> we're</c>

00:36:08.470 --> 00:36:08.480 align:start position:0%
performance so let's say for us we're
 

00:36:08.480 --> 00:36:10.829 align:start position:0%
performance so let's say for us we're
going<00:36:08.599><c> to</c><00:36:08.680><c> use</c><00:36:09.119><c> 276</c><00:36:10.119><c> because</c><00:36:10.359><c> that</c><00:36:10.520><c> way</c><00:36:10.680><c> we're</c>

00:36:10.829 --> 00:36:10.839 align:start position:0%
going to use 276 because that way we're
 

00:36:10.839 --> 00:36:13.069 align:start position:0%
going to use 276 because that way we're
going<00:36:10.960><c> to</c><00:36:11.079><c> be</c><00:36:11.200><c> doing</c><00:36:11.560><c> exactly</c><00:36:12.000><c> 20</c>

00:36:13.069 --> 00:36:13.079 align:start position:0%
going to be doing exactly 20
 

00:36:13.079 --> 00:36:15.710 align:start position:0%
going to be doing exactly 20
merges<00:36:14.079><c> and</c><00:36:14.440><c> uh</c><00:36:14.599><c> 20</c><00:36:14.920><c> merges</c><00:36:15.359><c> because</c><00:36:15.560><c> we</c>

00:36:15.710 --> 00:36:15.720 align:start position:0%
merges and uh 20 merges because we
 

00:36:15.720 --> 00:36:16.870 align:start position:0%
merges and uh 20 merges because we
already<00:36:16.079><c> have</c>

00:36:16.870 --> 00:36:16.880 align:start position:0%
already have
 

00:36:16.880 --> 00:36:20.870 align:start position:0%
already have
256<00:36:17.880><c> tokens</c><00:36:18.280><c> for</c><00:36:18.480><c> the</c><00:36:18.640><c> raw</c><00:36:19.319><c> bytes</c><00:36:20.319><c> and</c><00:36:20.760><c> to</c>

00:36:20.870 --> 00:36:20.880 align:start position:0%
256 tokens for the raw bytes and to
 

00:36:20.880 --> 00:36:23.670 align:start position:0%
256 tokens for the raw bytes and to
reach<00:36:21.040><c> 276</c><00:36:21.720><c> we</c><00:36:21.839><c> have</c><00:36:21.920><c> to</c><00:36:22.119><c> do</c><00:36:22.319><c> 20</c><00:36:22.640><c> merges</c><00:36:23.400><c> uh</c><00:36:23.480><c> to</c>

00:36:23.670 --> 00:36:23.680 align:start position:0%
reach 276 we have to do 20 merges uh to
 

00:36:23.680 --> 00:36:25.470 align:start position:0%
reach 276 we have to do 20 merges uh to
add<00:36:23.920><c> 20</c><00:36:24.200><c> new</c>

00:36:25.470 --> 00:36:25.480 align:start position:0%
add 20 new
 

00:36:25.480 --> 00:36:28.190 align:start position:0%
add 20 new
tokens<00:36:26.480><c> here</c><00:36:26.960><c> uh</c><00:36:27.119><c> this</c><00:36:27.200><c> is</c><00:36:27.520><c> uh</c><00:36:27.680><c> one</c><00:36:27.880><c> way</c><00:36:28.040><c> in</c>

00:36:28.190 --> 00:36:28.200 align:start position:0%
tokens here uh this is uh one way in
 

00:36:28.200 --> 00:36:31.470 align:start position:0%
tokens here uh this is uh one way in
Python<00:36:28.560><c> to</c><00:36:28.800><c> just</c><00:36:28.960><c> create</c><00:36:29.319><c> a</c><00:36:29.599><c> copy</c><00:36:29.839><c> of</c><00:36:29.960><c> a</c><00:36:30.480><c> list</c>

00:36:31.470 --> 00:36:31.480 align:start position:0%
Python to just create a copy of a list
 

00:36:31.480 --> 00:36:33.510 align:start position:0%
Python to just create a copy of a list
so<00:36:31.640><c> I'm</c><00:36:31.800><c> taking</c><00:36:32.040><c> the</c><00:36:32.160><c> tokens</c><00:36:32.640><c> list</c><00:36:33.240><c> and</c><00:36:33.400><c> by</c>

00:36:33.510 --> 00:36:33.520 align:start position:0%
so I'm taking the tokens list and by
 

00:36:33.520 --> 00:36:35.829 align:start position:0%
so I'm taking the tokens list and by
wrapping<00:36:33.839><c> it</c><00:36:33.960><c> in</c><00:36:34.079><c> a</c><00:36:34.240><c> list</c><00:36:34.880><c> python</c><00:36:35.280><c> will</c>

00:36:35.829 --> 00:36:35.839 align:start position:0%
wrapping it in a list python will
 

00:36:35.839 --> 00:36:37.150 align:start position:0%
wrapping it in a list python will
construct<00:36:36.240><c> a</c><00:36:36.359><c> new</c><00:36:36.560><c> list</c><00:36:36.760><c> of</c><00:36:36.920><c> all</c><00:36:37.040><c> the</c>

00:36:37.150 --> 00:36:37.160 align:start position:0%
construct a new list of all the
 

00:36:37.160 --> 00:36:38.630 align:start position:0%
construct a new list of all the
individual<00:36:37.560><c> elements</c><00:36:38.000><c> so</c><00:36:38.119><c> this</c><00:36:38.240><c> is</c><00:36:38.319><c> just</c><00:36:38.440><c> a</c>

00:36:38.630 --> 00:36:38.640 align:start position:0%
individual elements so this is just a
 

00:36:38.640 --> 00:36:39.910 align:start position:0%
individual elements so this is just a
copy

00:36:39.910 --> 00:36:39.920 align:start position:0%
copy
 

00:36:39.920 --> 00:36:42.069 align:start position:0%
copy
operation<00:36:40.920><c> then</c><00:36:41.119><c> here</c><00:36:41.319><c> I'm</c><00:36:41.480><c> creating</c><00:36:41.880><c> a</c>

00:36:42.069 --> 00:36:42.079 align:start position:0%
operation then here I'm creating a
 

00:36:42.079 --> 00:36:44.829 align:start position:0%
operation then here I'm creating a
merges<00:36:43.040><c> uh</c><00:36:43.200><c> dictionary</c><00:36:44.160><c> so</c><00:36:44.319><c> this</c><00:36:44.440><c> merges</c>

00:36:44.829 --> 00:36:44.839 align:start position:0%
merges uh dictionary so this merges
 

00:36:44.839 --> 00:36:46.109 align:start position:0%
merges uh dictionary so this merges
dictionary<00:36:45.200><c> is</c><00:36:45.319><c> going</c><00:36:45.440><c> to</c><00:36:45.599><c> maintain</c>

00:36:46.109 --> 00:36:46.119 align:start position:0%
dictionary is going to maintain
 

00:36:46.119 --> 00:36:49.390 align:start position:0%
dictionary is going to maintain
basically<00:36:47.119><c> the</c><00:36:47.400><c> child</c><00:36:47.760><c> one</c><00:36:48.359><c> child</c><00:36:48.760><c> two</c>

00:36:49.390 --> 00:36:49.400 align:start position:0%
basically the child one child two
 

00:36:49.400 --> 00:36:52.510 align:start position:0%
basically the child one child two
mapping<00:36:50.000><c> to</c><00:36:50.240><c> a</c><00:36:50.440><c> new</c><00:36:51.040><c> uh</c><00:36:51.200><c> token</c><00:36:52.200><c> and</c><00:36:52.319><c> so</c><00:36:52.440><c> what</c>

00:36:52.510 --> 00:36:52.520 align:start position:0%
mapping to a new uh token and so what
 

00:36:52.520 --> 00:36:53.910 align:start position:0%
mapping to a new uh token and so what
we're<00:36:52.640><c> going</c><00:36:52.760><c> to</c><00:36:52.839><c> be</c><00:36:52.960><c> building</c><00:36:53.280><c> up</c><00:36:53.440><c> here</c><00:36:53.599><c> is</c><00:36:53.720><c> a</c>

00:36:53.910 --> 00:36:53.920 align:start position:0%
we're going to be building up here is a
 

00:36:53.920 --> 00:36:56.910 align:start position:0%
we're going to be building up here is a
binary<00:36:54.280><c> tree</c><00:36:55.040><c> of</c><00:36:55.319><c> merges</c><00:36:56.319><c> but</c><00:36:56.440><c> actually</c><00:36:56.800><c> it's</c>

00:36:56.910 --> 00:36:56.920 align:start position:0%
binary tree of merges but actually it's
 

00:36:56.920 --> 00:36:59.270 align:start position:0%
binary tree of merges but actually it's
not<00:36:57.040><c> exactly</c><00:36:57.359><c> a</c><00:36:57.480><c> tree</c><00:36:57.920><c> because</c><00:36:58.800><c> a</c><00:36:58.920><c> tree</c><00:36:59.160><c> would</c>

00:36:59.270 --> 00:36:59.280 align:start position:0%
not exactly a tree because a tree would
 

00:36:59.280 --> 00:37:01.430 align:start position:0%
not exactly a tree because a tree would
have<00:36:59.359><c> a</c><00:36:59.480><c> single</c><00:36:59.720><c> root</c><00:37:00.000><c> node</c><00:37:00.560><c> with</c><00:37:00.960><c> a</c><00:37:01.079><c> bunch</c><00:37:01.280><c> of</c>

00:37:01.430 --> 00:37:01.440 align:start position:0%
have a single root node with a bunch of
 

00:37:01.440 --> 00:37:03.430 align:start position:0%
have a single root node with a bunch of
leaves<00:37:02.160><c> for</c><00:37:02.359><c> us</c><00:37:02.560><c> we're</c><00:37:02.720><c> starting</c><00:37:03.079><c> with</c><00:37:03.280><c> the</c>

00:37:03.430 --> 00:37:03.440 align:start position:0%
leaves for us we're starting with the
 

00:37:03.440 --> 00:37:04.990 align:start position:0%
leaves for us we're starting with the
leaves<00:37:04.000><c> on</c><00:37:04.160><c> the</c><00:37:04.280><c> bottom</c><00:37:04.560><c> which</c><00:37:04.680><c> are</c><00:37:04.839><c> the</c>

00:37:04.990 --> 00:37:05.000 align:start position:0%
leaves on the bottom which are the
 

00:37:05.000 --> 00:37:06.910 align:start position:0%
leaves on the bottom which are the
individual<00:37:05.520><c> bites</c><00:37:06.000><c> those</c><00:37:06.119><c> are</c><00:37:06.319><c> the</c><00:37:06.480><c> starting</c>

00:37:06.910 --> 00:37:06.920 align:start position:0%
individual bites those are the starting
 

00:37:06.920 --> 00:37:09.510 align:start position:0%
individual bites those are the starting
256<00:37:07.839><c> tokens</c><00:37:08.680><c> and</c><00:37:08.800><c> then</c><00:37:08.880><c> we're</c><00:37:09.040><c> starting</c><00:37:09.280><c> to</c>

00:37:09.510 --> 00:37:09.520 align:start position:0%
256 tokens and then we're starting to
 

00:37:09.520 --> 00:37:11.510 align:start position:0%
256 tokens and then we're starting to
like<00:37:09.680><c> merge</c><00:37:10.119><c> two</c><00:37:10.319><c> of</c><00:37:10.440><c> them</c><00:37:10.560><c> at</c><00:37:10.680><c> a</c><00:37:10.839><c> time</c><00:37:11.319><c> and</c><00:37:11.400><c> so</c>

00:37:11.510 --> 00:37:11.520 align:start position:0%
like merge two of them at a time and so
 

00:37:11.520 --> 00:37:14.950 align:start position:0%
like merge two of them at a time and so
it's<00:37:11.680><c> not</c><00:37:11.800><c> a</c><00:37:11.920><c> tree</c><00:37:12.240><c> it's</c><00:37:12.359><c> more</c><00:37:12.560><c> like</c><00:37:12.760><c> a</c><00:37:13.480><c> forest</c>

00:37:14.950 --> 00:37:14.960 align:start position:0%
it's not a tree it's more like a forest
 

00:37:14.960 --> 00:37:18.910 align:start position:0%
it's not a tree it's more like a forest
um<00:37:15.960><c> uh</c><00:37:16.119><c> as</c><00:37:16.240><c> we</c><00:37:16.400><c> merge</c><00:37:16.800><c> these</c><00:37:17.400><c> elements</c>

00:37:18.910 --> 00:37:18.920 align:start position:0%
um uh as we merge these elements
 

00:37:18.920 --> 00:37:22.870 align:start position:0%
um uh as we merge these elements
so<00:37:19.920><c> for</c><00:37:20.240><c> 20</c><00:37:20.640><c> merges</c><00:37:21.440><c> we're</c><00:37:21.640><c> going</c><00:37:21.800><c> to</c><00:37:22.000><c> find</c><00:37:22.640><c> the</c>

00:37:22.870 --> 00:37:22.880 align:start position:0%
so for 20 merges we're going to find the
 

00:37:22.880 --> 00:37:25.069 align:start position:0%
so for 20 merges we're going to find the
most<00:37:23.240><c> commonly</c><00:37:23.599><c> occurring</c><00:37:24.000><c> pair</c><00:37:24.760><c> we're</c><00:37:24.920><c> going</c>

00:37:25.069 --> 00:37:25.079 align:start position:0%
most commonly occurring pair we're going
 

00:37:25.079 --> 00:37:28.470 align:start position:0%
most commonly occurring pair we're going
to<00:37:25.240><c> Mint</c><00:37:25.520><c> a</c><00:37:25.680><c> new</c><00:37:25.920><c> token</c><00:37:26.680><c> integer</c><00:37:27.040><c> for</c><00:37:27.240><c> it</c><00:37:27.960><c> so</c><00:37:28.240><c> I</c>

00:37:28.470 --> 00:37:28.480 align:start position:0%
to Mint a new token integer for it so I
 

00:37:28.480 --> 00:37:30.069 align:start position:0%
to Mint a new token integer for it so I
here<00:37:28.599><c> will</c><00:37:28.760><c> start</c><00:37:28.960><c> at</c><00:37:29.119><c> zero</c><00:37:29.480><c> so</c><00:37:29.680><c> we'll</c><00:37:29.960><c> going</c>

00:37:30.069 --> 00:37:30.079 align:start position:0%
here will start at zero so we'll going
 

00:37:30.079 --> 00:37:32.349 align:start position:0%
here will start at zero so we'll going
to<00:37:30.200><c> start</c><00:37:30.359><c> at</c><00:37:30.800><c> 256</c><00:37:31.800><c> we're</c><00:37:31.960><c> going</c><00:37:32.040><c> to</c><00:37:32.160><c> print</c>

00:37:32.349 --> 00:37:32.359 align:start position:0%
to start at 256 we're going to print
 

00:37:32.359 --> 00:37:34.430 align:start position:0%
to start at 256 we're going to print
that<00:37:32.480><c> we're</c><00:37:32.599><c> merging</c><00:37:32.960><c> it</c><00:37:33.599><c> and</c><00:37:33.760><c> we're</c><00:37:33.920><c> going</c><00:37:34.000><c> to</c>

00:37:34.430 --> 00:37:34.440 align:start position:0%
that we're merging it and we're going to
 

00:37:34.440 --> 00:37:36.190 align:start position:0%
that we're merging it and we're going to
replace<00:37:34.839><c> all</c><00:37:34.920><c> of</c><00:37:35.040><c> the</c><00:37:35.119><c> occurrences</c><00:37:35.640><c> of</c><00:37:35.880><c> that</c>

00:37:36.190 --> 00:37:36.200 align:start position:0%
replace all of the occurrences of that
 

00:37:36.200 --> 00:37:39.550 align:start position:0%
replace all of the occurrences of that
pair<00:37:36.680><c> with</c><00:37:36.839><c> the</c><00:37:37.040><c> new</c><00:37:37.760><c> new</c><00:37:38.000><c> lied</c><00:37:38.480><c> token</c><00:37:39.440><c> and</c>

00:37:39.550 --> 00:37:39.560 align:start position:0%
pair with the new new lied token and
 

00:37:39.560 --> 00:37:42.150 align:start position:0%
pair with the new new lied token and
we're<00:37:39.720><c> going</c><00:37:39.880><c> to</c><00:37:40.119><c> record</c><00:37:41.119><c> that</c><00:37:41.359><c> this</c><00:37:41.599><c> pair</c><00:37:41.920><c> of</c>

00:37:42.150 --> 00:37:42.160 align:start position:0%
we're going to record that this pair of
 

00:37:42.160 --> 00:37:45.510 align:start position:0%
we're going to record that this pair of
integers<00:37:42.920><c> merged</c><00:37:43.480><c> into</c><00:37:43.880><c> this</c><00:37:44.119><c> new</c>

00:37:45.510 --> 00:37:45.520 align:start position:0%
integers merged into this new
 

00:37:45.520 --> 00:37:49.069 align:start position:0%
integers merged into this new
integer<00:37:46.520><c> so</c><00:37:46.880><c> running</c><00:37:47.599><c> this</c><00:37:48.599><c> gives</c><00:37:48.800><c> us</c><00:37:48.960><c> the</c>

00:37:49.069 --> 00:37:49.079 align:start position:0%
integer so running this gives us the
 

00:37:49.079 --> 00:37:51.150 align:start position:0%
integer so running this gives us the
following

00:37:51.150 --> 00:37:51.160 align:start position:0%
following
 

00:37:51.160 --> 00:37:54.470 align:start position:0%
following
output<00:37:52.160><c> so</c><00:37:52.400><c> we</c><00:37:52.560><c> did</c><00:37:52.800><c> 20</c><00:37:53.160><c> merges</c><00:37:54.160><c> and</c><00:37:54.319><c> for</c>

00:37:54.470 --> 00:37:54.480 align:start position:0%
output so we did 20 merges and for
 

00:37:54.480 --> 00:37:56.829 align:start position:0%
output so we did 20 merges and for
example<00:37:54.960><c> the</c><00:37:55.119><c> first</c><00:37:55.400><c> merge</c><00:37:55.920><c> was</c><00:37:56.160><c> exactly</c><00:37:56.680><c> as</c>

00:37:56.829 --> 00:37:56.839 align:start position:0%
example the first merge was exactly as
 

00:37:56.839 --> 00:37:58.829 align:start position:0%
example the first merge was exactly as
before<00:37:57.599><c> the</c>

00:37:58.829 --> 00:37:58.839 align:start position:0%
before the
 

00:37:58.839 --> 00:38:01.790 align:start position:0%
before the
10132<00:37:59.839><c> um</c><00:38:00.200><c> tokens</c><00:38:00.560><c> merging</c><00:38:00.920><c> into</c><00:38:01.079><c> a</c><00:38:01.200><c> new</c><00:38:01.319><c> token</c>

00:38:01.790 --> 00:38:01.800 align:start position:0%
10132 um tokens merging into a new token
 

00:38:01.800 --> 00:38:03.990 align:start position:0%
10132 um tokens merging into a new token
2556<00:38:02.800><c> now</c><00:38:03.000><c> keep</c><00:38:03.160><c> in</c><00:38:03.280><c> mind</c><00:38:03.560><c> that</c><00:38:03.720><c> the</c>

00:38:03.990 --> 00:38:04.000 align:start position:0%
2556 now keep in mind that the
 

00:38:04.000 --> 00:38:06.589 align:start position:0%
2556 now keep in mind that the
individual<00:38:05.000><c> uh</c><00:38:05.119><c> tokens</c><00:38:05.480><c> 101</c><00:38:05.839><c> and</c><00:38:05.960><c> 32</c><00:38:06.440><c> can</c>

00:38:06.589 --> 00:38:06.599 align:start position:0%
individual uh tokens 101 and 32 can
 

00:38:06.599 --> 00:38:08.430 align:start position:0%
individual uh tokens 101 and 32 can
still<00:38:06.880><c> occur</c><00:38:07.240><c> in</c><00:38:07.359><c> the</c><00:38:07.560><c> sequence</c><00:38:08.160><c> after</c>

00:38:08.430 --> 00:38:08.440 align:start position:0%
still occur in the sequence after
 

00:38:08.440 --> 00:38:10.349 align:start position:0%
still occur in the sequence after
merging<00:38:09.200><c> it's</c><00:38:09.359><c> only</c><00:38:09.599><c> when</c><00:38:09.760><c> they</c><00:38:09.920><c> occur</c>

00:38:10.349 --> 00:38:10.359 align:start position:0%
merging it's only when they occur
 

00:38:10.359 --> 00:38:12.589 align:start position:0%
merging it's only when they occur
exactly<00:38:10.880><c> consecutively</c><00:38:11.839><c> that</c><00:38:12.079><c> that</c><00:38:12.200><c> becomes</c>

00:38:12.589 --> 00:38:12.599 align:start position:0%
exactly consecutively that that becomes
 

00:38:12.599 --> 00:38:13.870 align:start position:0%
exactly consecutively that that becomes
256

00:38:13.870 --> 00:38:13.880 align:start position:0%
256
 

00:38:13.880 --> 00:38:16.910 align:start position:0%
256
now<00:38:14.880><c> um</c><00:38:15.720><c> and</c><00:38:15.960><c> in</c><00:38:16.079><c> particular</c><00:38:16.520><c> the</c><00:38:16.640><c> other</c><00:38:16.800><c> thing</c>

00:38:16.910 --> 00:38:16.920 align:start position:0%
now um and in particular the other thing
 

00:38:16.920 --> 00:38:19.150 align:start position:0%
now um and in particular the other thing
to<00:38:17.079><c> notice</c><00:38:17.400><c> here</c><00:38:17.599><c> is</c><00:38:17.800><c> that</c><00:38:18.000><c> the</c><00:38:18.119><c> token</c><00:38:18.480><c> 256</c>

00:38:19.150 --> 00:38:19.160 align:start position:0%
to notice here is that the token 256
 

00:38:19.160 --> 00:38:21.390 align:start position:0%
to notice here is that the token 256
which<00:38:19.280><c> is</c><00:38:19.400><c> the</c><00:38:19.480><c> newly</c><00:38:19.839><c> minted</c><00:38:20.200><c> token</c><00:38:20.920><c> is</c><00:38:21.119><c> also</c>

00:38:21.390 --> 00:38:21.400 align:start position:0%
which is the newly minted token is also
 

00:38:21.400 --> 00:38:23.390 align:start position:0%
which is the newly minted token is also
eligible<00:38:21.800><c> for</c><00:38:22.000><c> merging</c><00:38:22.800><c> so</c><00:38:23.000><c> here</c><00:38:23.160><c> on</c><00:38:23.280><c> the</c>

00:38:23.390 --> 00:38:23.400 align:start position:0%
eligible for merging so here on the
 

00:38:23.400 --> 00:38:26.829 align:start position:0%
eligible for merging so here on the
bottom<00:38:23.720><c> the</c><00:38:23.839><c> 20th</c><00:38:24.319><c> merge</c><00:38:25.000><c> was</c><00:38:25.200><c> a</c><00:38:25.520><c> merge</c><00:38:25.880><c> of</c><00:38:26.040><c> 25</c>

00:38:26.829 --> 00:38:26.839 align:start position:0%
bottom the 20th merge was a merge of 25
 

00:38:26.839 --> 00:38:28.870 align:start position:0%
bottom the 20th merge was a merge of 25
and<00:38:27.000><c> 259</c><00:38:27.680><c> becoming</c>

00:38:28.870 --> 00:38:28.880 align:start position:0%
and 259 becoming
 

00:38:28.880 --> 00:38:31.790 align:start position:0%
and 259 becoming
275<00:38:29.880><c> so</c><00:38:30.440><c> every</c><00:38:30.640><c> time</c><00:38:30.839><c> we</c><00:38:31.280><c> replace</c><00:38:31.640><c> these</c>

00:38:31.790 --> 00:38:31.800 align:start position:0%
275 so every time we replace these
 

00:38:31.800 --> 00:38:33.630 align:start position:0%
275 so every time we replace these
tokens<00:38:32.119><c> they</c><00:38:32.280><c> become</c><00:38:32.520><c> eligible</c><00:38:32.960><c> for</c><00:38:33.160><c> merging</c>

00:38:33.630 --> 00:38:33.640 align:start position:0%
tokens they become eligible for merging
 

00:38:33.640 --> 00:38:35.910 align:start position:0%
tokens they become eligible for merging
in<00:38:33.760><c> the</c><00:38:33.920><c> next</c><00:38:34.160><c> round</c><00:38:34.359><c> of</c><00:38:34.560><c> data</c><00:38:34.839><c> ration</c><00:38:35.720><c> so</c>

00:38:35.910 --> 00:38:35.920 align:start position:0%
in the next round of data ration so
 

00:38:35.920 --> 00:38:37.109 align:start position:0%
in the next round of data ration so
that's<00:38:36.040><c> why</c><00:38:36.160><c> we're</c><00:38:36.319><c> building</c><00:38:36.560><c> up</c><00:38:36.680><c> a</c><00:38:36.800><c> small</c>

00:38:37.109 --> 00:38:37.119 align:start position:0%
that's why we're building up a small
 

00:38:37.119 --> 00:38:38.790 align:start position:0%
that's why we're building up a small
sort<00:38:37.280><c> of</c><00:38:37.440><c> binary</c><00:38:37.839><c> Forest</c><00:38:38.359><c> instead</c><00:38:38.599><c> of</c><00:38:38.680><c> a</c>

00:38:38.790 --> 00:38:38.800 align:start position:0%
sort of binary Forest instead of a
 

00:38:38.800 --> 00:38:40.190 align:start position:0%
sort of binary Forest instead of a
single<00:38:39.079><c> individual</c>

00:38:40.190 --> 00:38:40.200 align:start position:0%
single individual
 

00:38:40.200 --> 00:38:42.309 align:start position:0%
single individual
tree<00:38:41.200><c> one</c><00:38:41.359><c> thing</c><00:38:41.480><c> we</c><00:38:41.560><c> can</c><00:38:41.680><c> take</c><00:38:41.800><c> a</c><00:38:41.920><c> look</c><00:38:42.040><c> at</c><00:38:42.200><c> as</c>

00:38:42.309 --> 00:38:42.319 align:start position:0%
tree one thing we can take a look at as
 

00:38:42.319 --> 00:38:43.990 align:start position:0%
tree one thing we can take a look at as
well<00:38:42.960><c> is</c><00:38:43.119><c> we</c><00:38:43.200><c> can</c><00:38:43.440><c> take</c><00:38:43.560><c> a</c><00:38:43.680><c> look</c><00:38:43.800><c> at</c><00:38:43.880><c> the</c>

00:38:43.990 --> 00:38:44.000 align:start position:0%
well is we can take a look at the
 

00:38:44.000 --> 00:38:46.150 align:start position:0%
well is we can take a look at the
compression<00:38:44.400><c> ratio</c><00:38:44.720><c> that</c><00:38:44.839><c> we've</c><00:38:45.000><c> achieved</c><00:38:46.000><c> so</c>

00:38:46.150 --> 00:38:46.160 align:start position:0%
compression ratio that we've achieved so
 

00:38:46.160 --> 00:38:48.349 align:start position:0%
compression ratio that we've achieved so
in<00:38:46.280><c> particular</c><00:38:46.680><c> we</c><00:38:46.800><c> started</c><00:38:47.240><c> off</c><00:38:47.640><c> with</c><00:38:48.160><c> this</c>

00:38:48.349 --> 00:38:48.359 align:start position:0%
in particular we started off with this
 

00:38:48.359 --> 00:38:51.390 align:start position:0%
in particular we started off with this
tokens<00:38:48.800><c> list</c><00:38:49.720><c> um</c><00:38:50.240><c> so</c><00:38:50.440><c> we</c><00:38:50.640><c> started</c><00:38:50.920><c> off</c><00:38:51.119><c> with</c>

00:38:51.390 --> 00:38:51.400 align:start position:0%
tokens list um so we started off with
 

00:38:51.400 --> 00:38:56.270 align:start position:0%
tokens list um so we started off with
24,000<00:38:52.400><c> bytes</c><00:38:53.400><c> and</c><00:38:53.640><c> after</c><00:38:53.880><c> merging</c><00:38:54.760><c> 20</c><00:38:55.280><c> times</c>

00:38:56.270 --> 00:38:56.280 align:start position:0%
24,000 bytes and after merging 20 times
 

00:38:56.280 --> 00:38:58.510 align:start position:0%
24,000 bytes and after merging 20 times
uh<00:38:56.599><c> we</c><00:38:56.839><c> now</c><00:38:57.200><c> have</c><00:38:57.640><c> only</c>

00:38:58.510 --> 00:38:58.520 align:start position:0%
uh we now have only
 

00:38:58.520 --> 00:39:01.910 align:start position:0%
uh we now have only
19,000<00:38:59.520><c> um</c><00:39:00.160><c> tokens</c><00:39:01.160><c> and</c><00:39:01.280><c> so</c><00:39:01.480><c> therefore</c><00:39:01.800><c> the</c>

00:39:01.910 --> 00:39:01.920 align:start position:0%
19,000 um tokens and so therefore the
 

00:39:01.920 --> 00:39:03.630 align:start position:0%
19,000 um tokens and so therefore the
compression<00:39:02.319><c> ratio</c><00:39:02.680><c> simply</c><00:39:03.079><c> just</c><00:39:03.240><c> dividing</c>

00:39:03.630 --> 00:39:03.640 align:start position:0%
compression ratio simply just dividing
 

00:39:03.640 --> 00:39:06.790 align:start position:0%
compression ratio simply just dividing
the<00:39:03.760><c> two</c><00:39:04.319><c> is</c><00:39:04.760><c> roughly</c><00:39:05.200><c> 1.27</c><00:39:06.200><c> so</c><00:39:06.359><c> that's</c><00:39:06.680><c> the</c>

00:39:06.790 --> 00:39:06.800 align:start position:0%
the two is roughly 1.27 so that's the
 

00:39:06.800 --> 00:39:07.950 align:start position:0%
the two is roughly 1.27 so that's the
amount<00:39:06.960><c> of</c><00:39:07.079><c> compression</c><00:39:07.400><c> we</c><00:39:07.480><c> were</c><00:39:07.599><c> able</c><00:39:07.800><c> to</c>

00:39:07.950 --> 00:39:07.960 align:start position:0%
amount of compression we were able to
 

00:39:07.960 --> 00:39:10.790 align:start position:0%
amount of compression we were able to
achieve<00:39:08.319><c> of</c><00:39:08.560><c> this</c><00:39:08.720><c> text</c><00:39:09.160><c> with</c><00:39:09.319><c> only</c><00:39:09.599><c> 20</c>

00:39:10.790 --> 00:39:10.800 align:start position:0%
achieve of this text with only 20
 

00:39:10.800 --> 00:39:13.109 align:start position:0%
achieve of this text with only 20
merges<00:39:11.800><c> um</c><00:39:12.079><c> and</c><00:39:12.200><c> of</c><00:39:12.280><c> course</c><00:39:12.480><c> the</c><00:39:12.599><c> more</c>

00:39:13.109 --> 00:39:13.119 align:start position:0%
merges um and of course the more
 

00:39:13.119 --> 00:39:15.589 align:start position:0%
merges um and of course the more
vocabulary<00:39:13.680><c> elements</c><00:39:14.079><c> you</c><00:39:14.359><c> add</c><00:39:15.200><c> uh</c><00:39:15.359><c> the</c>

00:39:15.589 --> 00:39:15.599 align:start position:0%
vocabulary elements you add uh the
 

00:39:15.599 --> 00:39:19.230 align:start position:0%
vocabulary elements you add uh the
greater<00:39:16.000><c> the</c><00:39:16.119><c> compression</c><00:39:16.520><c> ratio</c><00:39:16.880><c> here</c><00:39:17.079><c> would</c>

00:39:19.230 --> 00:39:19.240 align:start position:0%
greater the compression ratio here would
 

00:39:19.240 --> 00:39:23.750 align:start position:0%
greater the compression ratio here would
be<00:39:20.240><c> finally</c><00:39:21.040><c> so</c><00:39:21.240><c> that's</c><00:39:21.400><c> kind</c><00:39:21.520><c> of</c><00:39:21.680><c> like</c><00:39:22.599><c> um</c><00:39:23.599><c> the</c>

00:39:23.750 --> 00:39:23.760 align:start position:0%
be finally so that's kind of like um the
 

00:39:23.760 --> 00:39:25.710 align:start position:0%
be finally so that's kind of like um the
training<00:39:24.040><c> of</c><00:39:24.160><c> the</c><00:39:24.240><c> tokenizer</c><00:39:24.800><c> if</c><00:39:24.920><c> you</c><00:39:25.040><c> will</c>

00:39:25.710 --> 00:39:25.720 align:start position:0%
training of the tokenizer if you will
 

00:39:25.720 --> 00:39:28.270 align:start position:0%
training of the tokenizer if you will
now<00:39:25.960><c> 1</c><00:39:26.160><c> Point</c><00:39:26.599><c> I</c><00:39:26.680><c> wanted</c><00:39:26.839><c> to</c><00:39:27.040><c> make</c><00:39:27.440><c> is</c><00:39:27.680><c> that</c><00:39:28.160><c> and</c>

00:39:28.270 --> 00:39:28.280 align:start position:0%
now 1 Point I wanted to make is that and
 

00:39:28.280 --> 00:39:31.270 align:start position:0%
now 1 Point I wanted to make is that and
maybe<00:39:28.520><c> this</c><00:39:28.599><c> is</c><00:39:28.720><c> a</c><00:39:28.839><c> diagram</c><00:39:29.280><c> that</c><00:39:29.440><c> can</c><00:39:29.839><c> help</c><00:39:30.839><c> um</c>

00:39:31.270 --> 00:39:31.280 align:start position:0%
maybe this is a diagram that can help um
 

00:39:31.280 --> 00:39:33.069 align:start position:0%
maybe this is a diagram that can help um
kind<00:39:31.359><c> of</c><00:39:31.520><c> illustrate</c><00:39:32.160><c> is</c><00:39:32.280><c> that</c><00:39:32.480><c> tokenizer</c><00:39:32.960><c> is</c>

00:39:33.069 --> 00:39:33.079 align:start position:0%
kind of illustrate is that tokenizer is
 

00:39:33.079 --> 00:39:34.910 align:start position:0%
kind of illustrate is that tokenizer is
a<00:39:33.200><c> completely</c><00:39:33.760><c> separate</c><00:39:34.200><c> object</c><00:39:34.640><c> from</c><00:39:34.800><c> the</c>

00:39:34.910 --> 00:39:34.920 align:start position:0%
a completely separate object from the
 

00:39:34.920 --> 00:39:36.990 align:start position:0%
a completely separate object from the
large<00:39:35.160><c> language</c><00:39:35.480><c> model</c><00:39:35.800><c> itself</c><00:39:36.720><c> so</c>

00:39:36.990 --> 00:39:37.000 align:start position:0%
large language model itself so
 

00:39:37.000 --> 00:39:38.030 align:start position:0%
large language model itself so
everything<00:39:37.240><c> in</c><00:39:37.359><c> this</c><00:39:37.480><c> lecture</c><00:39:37.760><c> we're</c><00:39:37.920><c> not</c>

00:39:38.030 --> 00:39:38.040 align:start position:0%
everything in this lecture we're not
 

00:39:38.040 --> 00:39:40.109 align:start position:0%
everything in this lecture we're not
really<00:39:38.200><c> touching</c><00:39:38.480><c> the</c><00:39:38.599><c> llm</c><00:39:39.040><c> itself</c><00:39:39.720><c> uh</c><00:39:39.920><c> we're</c>

00:39:40.109 --> 00:39:40.119 align:start position:0%
really touching the llm itself uh we're
 

00:39:40.119 --> 00:39:41.829 align:start position:0%
really touching the llm itself uh we're
just<00:39:40.240><c> training</c><00:39:40.560><c> the</c><00:39:40.680><c> tokenizer</c><00:39:41.520><c> this</c><00:39:41.640><c> is</c><00:39:41.720><c> a</c>

00:39:41.829 --> 00:39:41.839 align:start position:0%
just training the tokenizer this is a
 

00:39:41.839 --> 00:39:43.910 align:start position:0%
just training the tokenizer this is a
completely<00:39:42.280><c> separate</c><00:39:42.839><c> pre-processing</c><00:39:43.560><c> stage</c>

00:39:43.910 --> 00:39:43.920 align:start position:0%
completely separate pre-processing stage
 

00:39:43.920 --> 00:39:46.230 align:start position:0%
completely separate pre-processing stage
usually<00:39:44.720><c> so</c><00:39:44.960><c> the</c><00:39:45.079><c> tokenizer</c><00:39:45.760><c> will</c><00:39:45.920><c> have</c><00:39:46.079><c> its</c>

00:39:46.230 --> 00:39:46.240 align:start position:0%
usually so the tokenizer will have its
 

00:39:46.240 --> 00:39:47.950 align:start position:0%
usually so the tokenizer will have its
own<00:39:46.560><c> training</c><00:39:46.920><c> set</c><00:39:47.319><c> just</c><00:39:47.480><c> like</c><00:39:47.599><c> a</c><00:39:47.720><c> large</c>

00:39:47.950 --> 00:39:47.960 align:start position:0%
own training set just like a large
 

00:39:47.960 --> 00:39:49.790 align:start position:0%
own training set just like a large
language<00:39:48.319><c> model</c><00:39:48.560><c> has</c><00:39:48.680><c> a</c><00:39:49.319><c> potentially</c>

00:39:49.790 --> 00:39:49.800 align:start position:0%
language model has a potentially
 

00:39:49.800 --> 00:39:52.030 align:start position:0%
language model has a potentially
different<00:39:50.119><c> training</c><00:39:50.560><c> set</c><00:39:51.319><c> so</c><00:39:51.480><c> the</c><00:39:51.599><c> tokenizer</c>

00:39:52.030 --> 00:39:52.040 align:start position:0%
different training set so the tokenizer
 

00:39:52.040 --> 00:39:53.390 align:start position:0%
different training set so the tokenizer
has<00:39:52.119><c> a</c><00:39:52.240><c> training</c><00:39:52.480><c> set</c><00:39:52.640><c> of</c><00:39:52.760><c> documents</c><00:39:53.119><c> on</c><00:39:53.280><c> which</c>

00:39:53.390 --> 00:39:53.400 align:start position:0%
has a training set of documents on which
 

00:39:53.400 --> 00:39:54.750 align:start position:0%
has a training set of documents on which
you're<00:39:53.520><c> going</c><00:39:53.640><c> to</c><00:39:53.760><c> train</c><00:39:54.040><c> the</c>

00:39:54.750 --> 00:39:54.760 align:start position:0%
you're going to train the
 

00:39:54.760 --> 00:39:57.750 align:start position:0%
you're going to train the
tokenizer<00:39:55.760><c> and</c><00:39:56.200><c> then</c><00:39:56.480><c> and</c><00:39:56.960><c> um</c><00:39:57.359><c> we're</c>

00:39:57.750 --> 00:39:57.760 align:start position:0%
tokenizer and then and um we're
 

00:39:57.760 --> 00:39:58.950 align:start position:0%
tokenizer and then and um we're
performing<00:39:58.119><c> The</c><00:39:58.240><c> Bite</c><00:39:58.400><c> pair</c><00:39:58.599><c> encoding</c>

00:39:58.950 --> 00:39:58.960 align:start position:0%
performing The Bite pair encoding
 

00:39:58.960 --> 00:40:01.069 align:start position:0%
performing The Bite pair encoding
algorithm<00:39:59.400><c> as</c><00:39:59.520><c> we</c><00:39:59.599><c> saw</c><00:39:59.880><c> above</c><00:40:00.440><c> to</c><00:40:00.599><c> train</c><00:40:00.920><c> the</c>

00:40:01.069 --> 00:40:01.079 align:start position:0%
algorithm as we saw above to train the
 

00:40:01.079 --> 00:40:02.630 align:start position:0%
algorithm as we saw above to train the
vocabulary<00:40:01.800><c> of</c><00:40:01.960><c> this</c>

00:40:02.630 --> 00:40:02.640 align:start position:0%
vocabulary of this
 

00:40:02.640 --> 00:40:04.950 align:start position:0%
vocabulary of this
tokenizer<00:40:03.640><c> so</c><00:40:03.839><c> it</c><00:40:03.960><c> has</c><00:40:04.079><c> its</c><00:40:04.200><c> own</c><00:40:04.400><c> training</c><00:40:04.680><c> set</c>

00:40:04.950 --> 00:40:04.960 align:start position:0%
tokenizer so it has its own training set
 

00:40:04.960 --> 00:40:06.510 align:start position:0%
tokenizer so it has its own training set
it<00:40:05.079><c> is</c><00:40:05.160><c> a</c><00:40:05.359><c> pre-processing</c><00:40:06.000><c> stage</c><00:40:06.319><c> that</c><00:40:06.440><c> you</c>

00:40:06.510 --> 00:40:06.520 align:start position:0%
it is a pre-processing stage that you
 

00:40:06.520 --> 00:40:09.230 align:start position:0%
it is a pre-processing stage that you
would<00:40:06.720><c> run</c><00:40:07.160><c> a</c><00:40:07.280><c> single</c><00:40:07.560><c> time</c><00:40:07.720><c> in</c><00:40:07.839><c> the</c><00:40:08.240><c> beginning</c>

00:40:09.230 --> 00:40:09.240 align:start position:0%
would run a single time in the beginning
 

00:40:09.240 --> 00:40:11.950 align:start position:0%
would run a single time in the beginning
um<00:40:09.960><c> and</c><00:40:10.440><c> the</c><00:40:10.560><c> tokenizer</c><00:40:11.079><c> is</c><00:40:11.200><c> trained</c><00:40:11.640><c> using</c>

00:40:11.950 --> 00:40:11.960 align:start position:0%
um and the tokenizer is trained using
 

00:40:11.960 --> 00:40:14.349 align:start position:0%
um and the tokenizer is trained using
bipar<00:40:12.319><c> coding</c><00:40:12.760><c> algorithm</c><00:40:13.760><c> once</c><00:40:13.960><c> you</c><00:40:14.079><c> have</c><00:40:14.240><c> the</c>

00:40:14.349 --> 00:40:14.359 align:start position:0%
bipar coding algorithm once you have the
 

00:40:14.359 --> 00:40:16.309 align:start position:0%
bipar coding algorithm once you have the
tokenizer<00:40:15.119><c> once</c><00:40:15.280><c> it's</c><00:40:15.440><c> trained</c><00:40:15.960><c> and</c><00:40:16.079><c> you</c><00:40:16.200><c> have</c>

00:40:16.309 --> 00:40:16.319 align:start position:0%
tokenizer once it's trained and you have
 

00:40:16.319 --> 00:40:19.030 align:start position:0%
tokenizer once it's trained and you have
the<00:40:16.480><c> vocabulary</c><00:40:17.079><c> and</c><00:40:17.200><c> you</c><00:40:17.280><c> have</c><00:40:17.400><c> the</c><00:40:18.040><c> merges</c>

00:40:19.030 --> 00:40:19.040 align:start position:0%
the vocabulary and you have the merges
 

00:40:19.040 --> 00:40:22.270 align:start position:0%
the vocabulary and you have the merges
uh<00:40:19.160><c> we</c><00:40:19.280><c> can</c><00:40:19.520><c> do</c><00:40:19.839><c> both</c><00:40:20.400><c> encoding</c><00:40:21.000><c> and</c><00:40:21.280><c> decoding</c>

00:40:22.270 --> 00:40:22.280 align:start position:0%
uh we can do both encoding and decoding
 

00:40:22.280 --> 00:40:24.510 align:start position:0%
uh we can do both encoding and decoding
so<00:40:22.640><c> these</c><00:40:22.839><c> two</c><00:40:23.119><c> arrows</c><00:40:23.560><c> here</c><00:40:24.240><c> so</c><00:40:24.400><c> the</c>

00:40:24.510 --> 00:40:24.520 align:start position:0%
so these two arrows here so the
 

00:40:24.520 --> 00:40:26.990 align:start position:0%
so these two arrows here so the
tokenizer<00:40:25.079><c> is</c><00:40:25.200><c> a</c><00:40:25.400><c> translation</c><00:40:25.920><c> layer</c><00:40:26.440><c> between</c>

00:40:26.990 --> 00:40:27.000 align:start position:0%
tokenizer is a translation layer between
 

00:40:27.000 --> 00:40:30.030 align:start position:0%
tokenizer is a translation layer between
raw<00:40:27.440><c> text</c><00:40:28.160><c> which</c><00:40:28.319><c> is</c><00:40:28.680><c> as</c><00:40:28.800><c> we</c><00:40:28.920><c> saw</c><00:40:29.280><c> the</c><00:40:29.640><c> sequence</c>

00:40:30.030 --> 00:40:30.040 align:start position:0%
raw text which is as we saw the sequence
 

00:40:30.040 --> 00:40:32.510 align:start position:0%
raw text which is as we saw the sequence
of<00:40:30.200><c> Unicode</c><00:40:30.680><c> code</c><00:40:30.880><c> points</c><00:40:31.720><c> it</c><00:40:31.839><c> can</c><00:40:32.000><c> take</c><00:40:32.200><c> raw</c>

00:40:32.510 --> 00:40:32.520 align:start position:0%
of Unicode code points it can take raw
 

00:40:32.520 --> 00:40:35.430 align:start position:0%
of Unicode code points it can take raw
text<00:40:33.000><c> and</c><00:40:33.119><c> turn</c><00:40:33.319><c> it</c><00:40:33.480><c> into</c><00:40:33.720><c> a</c><00:40:33.880><c> token</c><00:40:34.440><c> sequence</c>

00:40:35.430 --> 00:40:35.440 align:start position:0%
text and turn it into a token sequence
 

00:40:35.440 --> 00:40:36.990 align:start position:0%
text and turn it into a token sequence
and<00:40:35.640><c> vice</c><00:40:35.839><c> versa</c><00:40:36.079><c> it</c><00:40:36.160><c> can</c><00:40:36.280><c> take</c><00:40:36.400><c> a</c><00:40:36.560><c> token</c>

00:40:36.990 --> 00:40:37.000 align:start position:0%
and vice versa it can take a token
 

00:40:37.000 --> 00:40:40.750 align:start position:0%
and vice versa it can take a token
sequence<00:40:38.000><c> and</c><00:40:38.160><c> translate</c><00:40:38.560><c> it</c><00:40:38.760><c> back</c><00:40:38.880><c> into</c><00:40:39.160><c> raw</c>

00:40:40.750 --> 00:40:40.760 align:start position:0%
sequence and translate it back into raw
 

00:40:40.760 --> 00:40:43.349 align:start position:0%
sequence and translate it back into raw
text<00:40:41.760><c> so</c><00:40:41.960><c> now</c><00:40:42.079><c> that</c><00:40:42.200><c> we</c><00:40:42.319><c> have</c><00:40:42.440><c> trained</c><00:40:43.200><c> uh</c>

00:40:43.349 --> 00:40:43.359 align:start position:0%
text so now that we have trained uh
 

00:40:43.359 --> 00:40:45.950 align:start position:0%
text so now that we have trained uh
tokenizer<00:40:44.040><c> and</c><00:40:44.160><c> we</c><00:40:44.240><c> have</c><00:40:44.400><c> these</c><00:40:44.839><c> merges</c><00:40:45.839><c> we</c>

00:40:45.950 --> 00:40:45.960 align:start position:0%
tokenizer and we have these merges we
 

00:40:45.960 --> 00:40:47.430 align:start position:0%
tokenizer and we have these merges we
are<00:40:46.079><c> going</c><00:40:46.240><c> to</c><00:40:46.319><c> turn</c><00:40:46.520><c> to</c><00:40:46.800><c> how</c><00:40:46.920><c> we</c><00:40:47.040><c> can</c><00:40:47.160><c> do</c><00:40:47.319><c> the</c>

00:40:47.430 --> 00:40:47.440 align:start position:0%
are going to turn to how we can do the
 

00:40:47.440 --> 00:40:49.470 align:start position:0%
are going to turn to how we can do the
encoding<00:40:47.960><c> and</c><00:40:48.079><c> the</c><00:40:48.200><c> decoding</c><00:40:48.680><c> step</c><00:40:49.280><c> if</c><00:40:49.359><c> you</c>

00:40:49.470 --> 00:40:49.480 align:start position:0%
encoding and the decoding step if you
 

00:40:49.480 --> 00:40:51.230 align:start position:0%
encoding and the decoding step if you
give<00:40:49.640><c> me</c><00:40:49.800><c> text</c><00:40:50.160><c> here</c><00:40:50.359><c> are</c><00:40:50.480><c> the</c><00:40:50.599><c> tokens</c><00:40:51.079><c> and</c>

00:40:51.230 --> 00:40:51.240 align:start position:0%
give me text here are the tokens and
 

00:40:51.240 --> 00:40:52.990 align:start position:0%
give me text here are the tokens and
vice<00:40:51.440><c> versa</c><00:40:51.880><c> if</c><00:40:51.960><c> you</c><00:40:52.079><c> give</c><00:40:52.200><c> me</c><00:40:52.359><c> tokens</c><00:40:52.800><c> here's</c>

00:40:52.990 --> 00:40:53.000 align:start position:0%
vice versa if you give me tokens here's
 

00:40:53.000 --> 00:40:55.270 align:start position:0%
vice versa if you give me tokens here's
the<00:40:53.160><c> text</c><00:40:54.160><c> once</c><00:40:54.319><c> we</c><00:40:54.480><c> have</c><00:40:54.680><c> that</c><00:40:54.920><c> we</c><00:40:55.040><c> can</c>

00:40:55.270 --> 00:40:55.280 align:start position:0%
the text once we have that we can
 

00:40:55.280 --> 00:40:57.510 align:start position:0%
the text once we have that we can
translate<00:40:55.760><c> between</c><00:40:56.000><c> these</c><00:40:56.119><c> two</c><00:40:56.440><c> Realms</c><00:40:57.440><c> and</c>

00:40:57.510 --> 00:40:57.520 align:start position:0%
translate between these two Realms and
 

00:40:57.520 --> 00:40:58.750 align:start position:0%
translate between these two Realms and
then<00:40:57.680><c> the</c><00:40:57.839><c> language</c><00:40:58.119><c> model</c><00:40:58.359><c> is</c><00:40:58.440><c> going</c><00:40:58.599><c> to</c><00:40:58.680><c> be</c>

00:40:58.750 --> 00:40:58.760 align:start position:0%
then the language model is going to be
 

00:40:58.760 --> 00:41:01.630 align:start position:0%
then the language model is going to be
trained<00:40:59.079><c> as</c><00:40:59.160><c> a</c><00:40:59.319><c> step</c><00:40:59.560><c> two</c><00:41:00.160><c> afterwards</c><00:41:01.160><c> and</c>

00:41:01.630 --> 00:41:01.640 align:start position:0%
trained as a step two afterwards and
 

00:41:01.640 --> 00:41:03.630 align:start position:0%
trained as a step two afterwards and
typically<00:41:02.280><c> in</c><00:41:02.480><c> a</c><00:41:02.960><c> in</c><00:41:03.079><c> a</c><00:41:03.240><c> sort</c><00:41:03.400><c> of</c><00:41:03.520><c> a</c>

00:41:03.630 --> 00:41:03.640 align:start position:0%
typically in a in a sort of a
 

00:41:03.640 --> 00:41:05.470 align:start position:0%
typically in a in a sort of a
state-of-the-art<00:41:04.280><c> application</c><00:41:05.119><c> you</c><00:41:05.280><c> might</c>

00:41:05.470 --> 00:41:05.480 align:start position:0%
state-of-the-art application you might
 

00:41:05.480 --> 00:41:06.829 align:start position:0%
state-of-the-art application you might
take<00:41:05.680><c> all</c><00:41:05.800><c> of</c><00:41:05.880><c> your</c><00:41:06.000><c> training</c><00:41:06.319><c> data</c><00:41:06.520><c> for</c><00:41:06.720><c> the</c>

00:41:06.829 --> 00:41:06.839 align:start position:0%
take all of your training data for the
 

00:41:06.839 --> 00:41:08.349 align:start position:0%
take all of your training data for the
language<00:41:07.160><c> model</c><00:41:07.680><c> and</c><00:41:07.760><c> you</c><00:41:07.880><c> might</c><00:41:08.040><c> run</c><00:41:08.200><c> it</c>

00:41:08.349 --> 00:41:08.359 align:start position:0%
language model and you might run it
 

00:41:08.359 --> 00:41:10.390 align:start position:0%
language model and you might run it
through<00:41:08.560><c> the</c><00:41:08.720><c> tokenizer</c><00:41:09.440><c> and</c><00:41:10.040><c> sort</c><00:41:10.240><c> of</c>

00:41:10.390 --> 00:41:10.400 align:start position:0%
through the tokenizer and sort of
 

00:41:10.400 --> 00:41:11.910 align:start position:0%
through the tokenizer and sort of
translate<00:41:10.880><c> everything</c><00:41:11.160><c> into</c><00:41:11.359><c> a</c><00:41:11.640><c> massive</c>

00:41:11.910 --> 00:41:11.920 align:start position:0%
translate everything into a massive
 

00:41:11.920 --> 00:41:13.630 align:start position:0%
translate everything into a massive
token<00:41:12.280><c> sequence</c><00:41:12.960><c> and</c><00:41:13.040><c> then</c><00:41:13.160><c> you</c><00:41:13.240><c> can</c><00:41:13.400><c> throw</c>

00:41:13.630 --> 00:41:13.640 align:start position:0%
token sequence and then you can throw
 

00:41:13.640 --> 00:41:15.430 align:start position:0%
token sequence and then you can throw
away<00:41:13.800><c> the</c><00:41:13.920><c> raw</c><00:41:14.200><c> text</c><00:41:14.560><c> you're</c><00:41:14.800><c> just</c><00:41:14.960><c> left</c><00:41:15.240><c> with</c>

00:41:15.430 --> 00:41:15.440 align:start position:0%
away the raw text you're just left with
 

00:41:15.440 --> 00:41:17.710 align:start position:0%
away the raw text you're just left with
the<00:41:15.560><c> tokens</c><00:41:16.079><c> themselves</c><00:41:17.000><c> and</c><00:41:17.200><c> those</c><00:41:17.440><c> are</c>

00:41:17.710 --> 00:41:17.720 align:start position:0%
the tokens themselves and those are
 

00:41:17.720 --> 00:41:19.710 align:start position:0%
the tokens themselves and those are
stored<00:41:18.200><c> on</c><00:41:18.480><c> disk</c><00:41:19.040><c> and</c><00:41:19.200><c> that</c><00:41:19.280><c> is</c><00:41:19.440><c> what</c><00:41:19.599><c> the</c>

00:41:19.710 --> 00:41:19.720 align:start position:0%
stored on disk and that is what the
 

00:41:19.720 --> 00:41:21.309 align:start position:0%
stored on disk and that is what the
large<00:41:20.000><c> language</c><00:41:20.280><c> model</c><00:41:20.520><c> is</c><00:41:20.640><c> actually</c><00:41:20.880><c> reading</c>

00:41:21.309 --> 00:41:21.319 align:start position:0%
large language model is actually reading
 

00:41:21.319 --> 00:41:23.230 align:start position:0%
large language model is actually reading
when<00:41:21.440><c> it's</c><00:41:21.599><c> training</c><00:41:21.920><c> on</c><00:41:22.079><c> them</c><00:41:22.800><c> so</c><00:41:22.920><c> this</c><00:41:23.079><c> one</c>

00:41:23.230 --> 00:41:23.240 align:start position:0%
when it's training on them so this one
 

00:41:23.240 --> 00:41:24.790 align:start position:0%
when it's training on them so this one
approach<00:41:23.520><c> that</c><00:41:23.599><c> you</c><00:41:23.720><c> can</c><00:41:23.839><c> take</c><00:41:24.040><c> as</c><00:41:24.160><c> a</c><00:41:24.319><c> single</c>

00:41:24.790 --> 00:41:24.800 align:start position:0%
approach that you can take as a single
 

00:41:24.800 --> 00:41:26.870 align:start position:0%
approach that you can take as a single
massive<00:41:25.160><c> pre-processing</c><00:41:25.760><c> step</c><00:41:26.000><c> a</c>

00:41:26.870 --> 00:41:26.880 align:start position:0%
massive pre-processing step a
 

00:41:26.880 --> 00:41:30.390 align:start position:0%
massive pre-processing step a
stage<00:41:27.960><c> um</c><00:41:28.960><c> so</c><00:41:29.560><c> yeah</c><00:41:29.760><c> basically</c><00:41:30.119><c> I</c><00:41:30.200><c> think</c><00:41:30.319><c> the</c>

00:41:30.390 --> 00:41:30.400 align:start position:0%
stage um so yeah basically I think the
 

00:41:30.400 --> 00:41:31.390 align:start position:0%
stage um so yeah basically I think the
most<00:41:30.599><c> important</c><00:41:30.839><c> thing</c><00:41:30.960><c> I</c><00:41:31.040><c> want</c><00:41:31.119><c> to</c><00:41:31.280><c> get</c>

00:41:31.390 --> 00:41:31.400 align:start position:0%
most important thing I want to get
 

00:41:31.400 --> 00:41:32.589 align:start position:0%
most important thing I want to get
across<00:41:31.720><c> is</c><00:41:31.880><c> that</c><00:41:32.000><c> this</c><00:41:32.119><c> is</c><00:41:32.280><c> completely</c>

00:41:32.589 --> 00:41:32.599 align:start position:0%
across is that this is completely
 

00:41:32.599 --> 00:41:34.390 align:start position:0%
across is that this is completely
separate<00:41:32.880><c> stage</c><00:41:33.359><c> it</c><00:41:33.480><c> usually</c><00:41:33.800><c> has</c><00:41:33.920><c> its</c><00:41:34.040><c> own</c>

00:41:34.390 --> 00:41:34.400 align:start position:0%
separate stage it usually has its own
 

00:41:34.400 --> 00:41:36.829 align:start position:0%
separate stage it usually has its own
entire<00:41:34.960><c> uh</c><00:41:35.079><c> training</c><00:41:35.440><c> set</c><00:41:36.280><c> you</c><00:41:36.440><c> may</c><00:41:36.599><c> want</c><00:41:36.680><c> to</c>

00:41:36.829 --> 00:41:36.839 align:start position:0%
entire uh training set you may want to
 

00:41:36.839 --> 00:41:38.349 align:start position:0%
entire uh training set you may want to
have<00:41:36.960><c> those</c><00:41:37.119><c> training</c><00:41:37.359><c> sets</c><00:41:37.640><c> be</c><00:41:37.839><c> different</c>

00:41:38.349 --> 00:41:38.359 align:start position:0%
have those training sets be different
 

00:41:38.359 --> 00:41:39.589 align:start position:0%
have those training sets be different
between<00:41:38.640><c> the</c><00:41:38.720><c> tokenizer</c><00:41:39.200><c> and</c><00:41:39.280><c> the</c><00:41:39.319><c> logge</c>

00:41:39.589 --> 00:41:39.599 align:start position:0%
between the tokenizer and the logge
 

00:41:39.599 --> 00:41:41.270 align:start position:0%
between the tokenizer and the logge
language<00:41:39.880><c> model</c><00:41:40.599><c> so</c><00:41:40.760><c> for</c><00:41:40.920><c> example</c><00:41:41.160><c> when</c>

00:41:41.270 --> 00:41:41.280 align:start position:0%
language model so for example when
 

00:41:41.280 --> 00:41:43.309 align:start position:0%
language model so for example when
you're<00:41:41.400><c> training</c><00:41:41.680><c> the</c><00:41:42.079><c> tokenizer</c><00:41:43.079><c> as</c><00:41:43.160><c> I</c>

00:41:43.309 --> 00:41:43.319 align:start position:0%
you're training the tokenizer as I
 

00:41:43.319 --> 00:41:45.069 align:start position:0%
you're training the tokenizer as I
mentioned<00:41:43.839><c> we</c><00:41:43.960><c> don't</c><00:41:44.160><c> just</c><00:41:44.359><c> care</c><00:41:44.640><c> about</c><00:41:44.920><c> the</c>

00:41:45.069 --> 00:41:45.079 align:start position:0%
mentioned we don't just care about the
 

00:41:45.079 --> 00:41:46.750 align:start position:0%
mentioned we don't just care about the
performance<00:41:45.440><c> of</c><00:41:45.560><c> English</c><00:41:45.839><c> text</c><00:41:46.359><c> we</c><00:41:46.480><c> care</c>

00:41:46.750 --> 00:41:46.760 align:start position:0%
performance of English text we care
 

00:41:46.760 --> 00:41:49.430 align:start position:0%
performance of English text we care
about<00:41:47.240><c> uh</c><00:41:47.359><c> multi</c><00:41:48.119><c> many</c><00:41:48.319><c> different</c><00:41:48.599><c> languages</c>

00:41:49.430 --> 00:41:49.440 align:start position:0%
about uh multi many different languages
 

00:41:49.440 --> 00:41:51.510 align:start position:0%
about uh multi many different languages
and<00:41:49.560><c> we</c><00:41:49.680><c> also</c><00:41:49.880><c> care</c><00:41:50.040><c> about</c><00:41:50.319><c> code</c><00:41:50.560><c> or</c><00:41:50.680><c> not</c><00:41:50.920><c> code</c>

00:41:51.510 --> 00:41:51.520 align:start position:0%
and we also care about code or not code
 

00:41:51.520 --> 00:41:53.230 align:start position:0%
and we also care about code or not code
so<00:41:51.640><c> you</c><00:41:51.800><c> may</c><00:41:51.960><c> want</c><00:41:52.040><c> to</c><00:41:52.520><c> look</c><00:41:52.720><c> into</c><00:41:53.040><c> different</c>

00:41:53.230 --> 00:41:53.240 align:start position:0%
so you may want to look into different
 

00:41:53.240 --> 00:41:55.190 align:start position:0%
so you may want to look into different
kinds<00:41:53.440><c> of</c><00:41:53.640><c> mixtures</c><00:41:54.480><c> of</c><00:41:54.680><c> different</c><00:41:54.880><c> kinds</c><00:41:55.079><c> of</c>

00:41:55.190 --> 00:41:55.200 align:start position:0%
kinds of mixtures of different kinds of
 

00:41:55.200 --> 00:41:57.349 align:start position:0%
kinds of mixtures of different kinds of
languages<00:41:55.880><c> and</c><00:41:56.240><c> different</c><00:41:56.480><c> amounts</c><00:41:56.760><c> of</c><00:41:56.920><c> code</c>

00:41:57.349 --> 00:41:57.359 align:start position:0%
languages and different amounts of code
 

00:41:57.359 --> 00:42:00.230 align:start position:0%
languages and different amounts of code
and<00:41:57.520><c> things</c><00:41:57.760><c> like</c><00:41:57.960><c> that</c><00:41:58.800><c> because</c><00:41:59.680><c> the</c><00:41:59.880><c> amount</c>

00:42:00.230 --> 00:42:00.240 align:start position:0%
and things like that because the amount
 

00:42:00.240 --> 00:42:01.950 align:start position:0%
and things like that because the amount
of<00:42:00.480><c> different</c><00:42:00.839><c> language</c><00:42:01.280><c> that</c><00:42:01.400><c> you</c><00:42:01.599><c> have</c><00:42:01.800><c> in</c>

00:42:01.950 --> 00:42:01.960 align:start position:0%
of different language that you have in
 

00:42:01.960 --> 00:42:03.750 align:start position:0%
of different language that you have in
your<00:42:02.119><c> tokenizer</c><00:42:02.680><c> training</c><00:42:03.000><c> set</c><00:42:03.560><c> will</c>

00:42:03.750 --> 00:42:03.760 align:start position:0%
your tokenizer training set will
 

00:42:03.760 --> 00:42:06.109 align:start position:0%
your tokenizer training set will
determine<00:42:04.280><c> how</c><00:42:04.400><c> many</c><00:42:04.560><c> merges</c><00:42:05.280><c> of</c><00:42:05.560><c> it</c><00:42:06.000><c> there</c>

00:42:06.109 --> 00:42:06.119 align:start position:0%
determine how many merges of it there
 

00:42:06.119 --> 00:42:08.230 align:start position:0%
determine how many merges of it there
will<00:42:06.359><c> be</c><00:42:07.200><c> and</c><00:42:07.359><c> therefore</c><00:42:07.680><c> that</c><00:42:07.800><c> determines</c>

00:42:08.230 --> 00:42:08.240 align:start position:0%
will be and therefore that determines
 

00:42:08.240 --> 00:42:11.309 align:start position:0%
will be and therefore that determines
the<00:42:08.440><c> density</c><00:42:09.400><c> with</c><00:42:09.640><c> which</c><00:42:10.480><c> uh</c><00:42:10.680><c> this</c><00:42:10.960><c> type</c><00:42:11.160><c> of</c>

00:42:11.309 --> 00:42:11.319 align:start position:0%
the density with which uh this type of
 

00:42:11.319 --> 00:42:15.190 align:start position:0%
the density with which uh this type of
data<00:42:11.800><c> is</c><00:42:12.800><c> um</c><00:42:13.480><c> sort</c><00:42:13.680><c> of</c><00:42:13.920><c> has</c><00:42:14.359><c> in</c><00:42:14.520><c> the</c><00:42:14.640><c> token</c>

00:42:15.190 --> 00:42:15.200 align:start position:0%
data is um sort of has in the token
 

00:42:15.200 --> 00:42:17.750 align:start position:0%
data is um sort of has in the token
space<00:42:16.200><c> and</c><00:42:16.359><c> so</c><00:42:17.040><c> roughly</c><00:42:17.440><c> speaking</c>

00:42:17.750 --> 00:42:17.760 align:start position:0%
space and so roughly speaking
 

00:42:17.760 --> 00:42:19.710 align:start position:0%
space and so roughly speaking
intuitively<00:42:18.720><c> if</c><00:42:18.839><c> you</c><00:42:19.040><c> add</c><00:42:19.240><c> some</c><00:42:19.440><c> amount</c><00:42:19.599><c> of</c>

00:42:19.710 --> 00:42:19.720 align:start position:0%
intuitively if you add some amount of
 

00:42:19.720 --> 00:42:21.349 align:start position:0%
intuitively if you add some amount of
data<00:42:19.920><c> like</c><00:42:20.079><c> say</c><00:42:20.280><c> you</c><00:42:20.359><c> have</c><00:42:20.440><c> a</c><00:42:20.559><c> ton</c><00:42:20.720><c> of</c><00:42:20.920><c> Japanese</c>

00:42:21.349 --> 00:42:21.359 align:start position:0%
data like say you have a ton of Japanese
 

00:42:21.359 --> 00:42:24.030 align:start position:0%
data like say you have a ton of Japanese
data<00:42:21.680><c> in</c><00:42:21.839><c> your</c><00:42:22.280><c> uh</c><00:42:22.400><c> tokenizer</c><00:42:22.920><c> training</c><00:42:23.280><c> set</c>

00:42:24.030 --> 00:42:24.040 align:start position:0%
data in your uh tokenizer training set
 

00:42:24.040 --> 00:42:25.349 align:start position:0%
data in your uh tokenizer training set
then<00:42:24.200><c> that</c><00:42:24.319><c> means</c><00:42:24.520><c> that</c><00:42:24.680><c> more</c><00:42:24.960><c> Japanese</c>

00:42:25.349 --> 00:42:25.359 align:start position:0%
then that means that more Japanese
 

00:42:25.359 --> 00:42:26.829 align:start position:0%
then that means that more Japanese
tokens<00:42:25.640><c> will</c><00:42:25.760><c> get</c><00:42:25.880><c> merged</c>

00:42:26.829 --> 00:42:26.839 align:start position:0%
tokens will get merged
 

00:42:26.839 --> 00:42:28.910 align:start position:0%
tokens will get merged
and<00:42:27.000><c> therefore</c><00:42:27.400><c> Japanese</c><00:42:27.880><c> will</c><00:42:28.040><c> have</c><00:42:28.240><c> shorter</c>

00:42:28.910 --> 00:42:28.920 align:start position:0%
and therefore Japanese will have shorter
 

00:42:28.920 --> 00:42:30.630 align:start position:0%
and therefore Japanese will have shorter
sequences<00:42:29.920><c> uh</c><00:42:30.040><c> and</c><00:42:30.160><c> that's</c><00:42:30.280><c> going</c><00:42:30.400><c> to</c><00:42:30.520><c> be</c>

00:42:30.630 --> 00:42:30.640 align:start position:0%
sequences uh and that's going to be
 

00:42:30.640 --> 00:42:32.390 align:start position:0%
sequences uh and that's going to be
beneficial<00:42:31.040><c> for</c><00:42:31.160><c> the</c><00:42:31.240><c> large</c><00:42:31.599><c> language</c><00:42:31.920><c> model</c>

00:42:32.390 --> 00:42:32.400 align:start position:0%
beneficial for the large language model
 

00:42:32.400 --> 00:42:34.349 align:start position:0%
beneficial for the large language model
which<00:42:32.599><c> has</c><00:42:32.800><c> a</c><00:42:32.960><c> finite</c><00:42:33.359><c> context</c><00:42:33.760><c> length</c><00:42:34.240><c> on</c>

00:42:34.349 --> 00:42:34.359 align:start position:0%
which has a finite context length on
 

00:42:34.359 --> 00:42:36.589 align:start position:0%
which has a finite context length on
which<00:42:34.520><c> it</c><00:42:34.640><c> can</c><00:42:34.839><c> work</c><00:42:35.040><c> on</c><00:42:35.720><c> in</c><00:42:35.960><c> in</c><00:42:36.079><c> the</c><00:42:36.240><c> token</c>

00:42:36.589 --> 00:42:36.599 align:start position:0%
which it can work on in in the token
 

00:42:36.599 --> 00:42:39.230 align:start position:0%
which it can work on in in the token
space<00:42:37.599><c> uh</c><00:42:37.720><c> so</c><00:42:37.839><c> hopefully</c><00:42:38.160><c> that</c><00:42:38.240><c> makes</c><00:42:38.440><c> sense</c>

00:42:39.230 --> 00:42:39.240 align:start position:0%
space uh so hopefully that makes sense
 

00:42:39.240 --> 00:42:41.190 align:start position:0%
space uh so hopefully that makes sense
so<00:42:39.359><c> we're</c><00:42:39.520><c> now</c><00:42:39.680><c> going</c><00:42:39.800><c> to</c><00:42:39.960><c> turn</c><00:42:40.200><c> to</c><00:42:40.680><c> encoding</c>

00:42:41.190 --> 00:42:41.200 align:start position:0%
so we're now going to turn to encoding
 

00:42:41.200 --> 00:42:43.069 align:start position:0%
so we're now going to turn to encoding
and<00:42:41.359><c> decoding</c><00:42:42.000><c> now</c><00:42:42.280><c> that</c><00:42:42.359><c> we</c><00:42:42.480><c> have</c><00:42:42.599><c> trained</c><00:42:42.920><c> a</c>

00:42:43.069 --> 00:42:43.079 align:start position:0%
and decoding now that we have trained a
 

00:42:43.079 --> 00:42:46.390 align:start position:0%
and decoding now that we have trained a
tokenizer<00:42:43.960><c> so</c><00:42:44.119><c> we</c><00:42:44.240><c> have</c><00:42:44.400><c> our</c><00:42:45.119><c> merges</c><00:42:46.119><c> and</c><00:42:46.240><c> now</c>

00:42:46.390 --> 00:42:46.400 align:start position:0%
tokenizer so we have our merges and now
 

00:42:46.400 --> 00:42:48.430 align:start position:0%
tokenizer so we have our merges and now
how<00:42:46.480><c> do</c><00:42:46.599><c> we</c><00:42:46.680><c> do</c><00:42:46.800><c> encoding</c><00:42:47.160><c> and</c><00:42:47.319><c> decoding</c><00:42:48.319><c> okay</c>

00:42:48.430 --> 00:42:48.440 align:start position:0%
how do we do encoding and decoding okay
 

00:42:48.440 --> 00:42:50.430 align:start position:0%
how do we do encoding and decoding okay
so<00:42:48.559><c> let's</c><00:42:48.760><c> begin</c><00:42:49.000><c> with</c><00:42:49.160><c> decoding</c><00:42:50.000><c> which</c><00:42:50.200><c> is</c>

00:42:50.430 --> 00:42:50.440 align:start position:0%
so let's begin with decoding which is
 

00:42:50.440 --> 00:42:52.710 align:start position:0%
so let's begin with decoding which is
this<00:42:50.599><c> Arrow</c><00:42:50.920><c> over</c><00:42:51.160><c> here</c><00:42:51.800><c> so</c><00:42:52.000><c> given</c><00:42:52.240><c> a</c><00:42:52.400><c> token</c>

00:42:52.710 --> 00:42:52.720 align:start position:0%
this Arrow over here so given a token
 

00:42:52.720 --> 00:42:54.910 align:start position:0%
this Arrow over here so given a token
sequence<00:42:53.720><c> let's</c><00:42:53.920><c> go</c><00:42:54.079><c> through</c><00:42:54.240><c> the</c><00:42:54.400><c> tokenizer</c>

00:42:54.910 --> 00:42:54.920 align:start position:0%
sequence let's go through the tokenizer
 

00:42:54.920 --> 00:42:57.510 align:start position:0%
sequence let's go through the tokenizer
to<00:42:55.079><c> get</c><00:42:55.280><c> back</c><00:42:55.440><c> a</c><00:42:55.680><c> python</c><00:42:56.240><c> string</c><00:42:56.680><c> object</c><00:42:57.200><c> so</c>

00:42:57.510 --> 00:42:57.520 align:start position:0%
to get back a python string object so
 

00:42:57.520 --> 00:42:59.870 align:start position:0%
to get back a python string object so
the<00:42:57.640><c> raw</c><00:42:58.079><c> text</c><00:42:59.079><c> so</c><00:42:59.319><c> this</c><00:42:59.440><c> is</c><00:42:59.559><c> the</c><00:42:59.640><c> function</c>

00:42:59.870 --> 00:42:59.880 align:start position:0%
the raw text so this is the function
 

00:42:59.880 --> 00:43:01.870 align:start position:0%
the raw text so this is the function
that<00:43:00.000><c> we'</c><00:43:00.160><c> like</c><00:43:00.240><c> to</c><00:43:00.559><c> implement</c><00:43:01.559><c> um</c><00:43:01.720><c> we're</c>

00:43:01.870 --> 00:43:01.880 align:start position:0%
that we' like to implement um we're
 

00:43:01.880 --> 00:43:03.430 align:start position:0%
that we' like to implement um we're
given<00:43:02.160><c> the</c><00:43:02.440><c> list</c><00:43:02.599><c> of</c><00:43:02.720><c> integers</c><00:43:03.160><c> and</c><00:43:03.240><c> we</c><00:43:03.359><c> want</c>

00:43:03.430 --> 00:43:03.440 align:start position:0%
given the list of integers and we want
 

00:43:03.440 --> 00:43:05.670 align:start position:0%
given the list of integers and we want
to<00:43:03.720><c> return</c><00:43:03.839><c> a</c><00:43:03.960><c> python</c><00:43:04.280><c> string</c><00:43:04.920><c> if</c><00:43:05.000><c> you'd</c><00:43:05.240><c> like</c>

00:43:05.670 --> 00:43:05.680 align:start position:0%
to return a python string if you'd like
 

00:43:05.680 --> 00:43:06.829 align:start position:0%
to return a python string if you'd like
uh<00:43:05.800><c> try</c><00:43:05.960><c> to</c><00:43:06.079><c> implement</c><00:43:06.400><c> this</c><00:43:06.559><c> function</c>

00:43:06.829 --> 00:43:06.839 align:start position:0%
uh try to implement this function
 

00:43:06.839 --> 00:43:08.829 align:start position:0%
uh try to implement this function
yourself<00:43:07.319><c> it's</c><00:43:07.440><c> a</c><00:43:07.559><c> fun</c><00:43:07.800><c> exercise</c><00:43:08.520><c> otherwise</c>

00:43:08.829 --> 00:43:08.839 align:start position:0%
yourself it's a fun exercise otherwise
 

00:43:08.839 --> 00:43:11.270 align:start position:0%
yourself it's a fun exercise otherwise
I'm<00:43:08.960><c> going</c><00:43:09.079><c> to</c><00:43:09.240><c> start</c><00:43:09.559><c> uh</c><00:43:09.680><c> pasting</c><00:43:09.960><c> in</c><00:43:10.079><c> my</c><00:43:10.200><c> own</c>

00:43:11.270 --> 00:43:11.280 align:start position:0%
I'm going to start uh pasting in my own
 

00:43:11.280 --> 00:43:13.510 align:start position:0%
I'm going to start uh pasting in my own
solution<00:43:12.280><c> so</c><00:43:12.760><c> there</c><00:43:12.880><c> are</c><00:43:13.000><c> many</c><00:43:13.240><c> different</c>

00:43:13.510 --> 00:43:13.520 align:start position:0%
solution so there are many different
 

00:43:13.520 --> 00:43:16.870 align:start position:0%
solution so there are many different
ways<00:43:13.800><c> to</c><00:43:13.960><c> do</c><00:43:14.079><c> it</c><00:43:14.640><c> um</c><00:43:15.040><c> here's</c><00:43:15.319><c> one</c><00:43:15.520><c> way</c><00:43:16.440><c> I</c><00:43:16.559><c> will</c>

00:43:16.870 --> 00:43:16.880 align:start position:0%
ways to do it um here's one way I will
 

00:43:16.880 --> 00:43:18.870 align:start position:0%
ways to do it um here's one way I will
create<00:43:17.319><c> an</c><00:43:17.800><c> uh</c><00:43:17.920><c> kind</c><00:43:18.040><c> of</c><00:43:18.200><c> pre-processing</c>

00:43:18.870 --> 00:43:18.880 align:start position:0%
create an uh kind of pre-processing
 

00:43:18.880 --> 00:43:21.030 align:start position:0%
create an uh kind of pre-processing
variable<00:43:19.400><c> that</c><00:43:19.559><c> I</c><00:43:19.640><c> will</c><00:43:19.800><c> call</c>

00:43:21.030 --> 00:43:21.040 align:start position:0%
variable that I will call
 

00:43:21.040 --> 00:43:24.670 align:start position:0%
variable that I will call
vocab<00:43:22.040><c> and</c><00:43:22.920><c> vocab</c><00:43:23.640><c> is</c><00:43:23.760><c> a</c><00:43:23.960><c> mapping</c><00:43:24.440><c> or</c><00:43:24.559><c> a</c>

00:43:24.670 --> 00:43:24.680 align:start position:0%
vocab and vocab is a mapping or a
 

00:43:24.680 --> 00:43:27.549 align:start position:0%
vocab and vocab is a mapping or a
dictionary<00:43:25.119><c> in</c><00:43:25.280><c> Python</c><00:43:25.839><c> for</c><00:43:26.160><c> from</c><00:43:26.359><c> the</c><00:43:26.559><c> token</c>

00:43:27.549 --> 00:43:27.559 align:start position:0%
dictionary in Python for from the token
 

00:43:27.559 --> 00:43:31.510 align:start position:0%
dictionary in Python for from the token
uh<00:43:27.720><c> ID</c><00:43:28.520><c> to</c><00:43:29.000><c> the</c><00:43:29.160><c> bytes</c><00:43:29.559><c> object</c><00:43:30.000><c> for</c><00:43:30.280><c> that</c><00:43:30.520><c> token</c>

00:43:31.510 --> 00:43:31.520 align:start position:0%
uh ID to the bytes object for that token
 

00:43:31.520 --> 00:43:33.790 align:start position:0%
uh ID to the bytes object for that token
so<00:43:31.720><c> we</c><00:43:31.880><c> begin</c><00:43:32.160><c> with</c><00:43:32.319><c> the</c><00:43:32.480><c> raw</c><00:43:32.839><c> bytes</c><00:43:33.599><c> for</c>

00:43:33.790 --> 00:43:33.800 align:start position:0%
so we begin with the raw bytes for
 

00:43:33.800 --> 00:43:36.829 align:start position:0%
so we begin with the raw bytes for
tokens<00:43:34.160><c> from</c><00:43:34.240><c> 0</c><00:43:34.480><c> to</c><00:43:34.880><c> 255</c><00:43:35.880><c> and</c><00:43:36.000><c> then</c><00:43:36.119><c> we</c><00:43:36.280><c> go</c><00:43:36.640><c> in</c>

00:43:36.829 --> 00:43:36.839 align:start position:0%
tokens from 0 to 255 and then we go in
 

00:43:36.839 --> 00:43:39.750 align:start position:0%
tokens from 0 to 255 and then we go in
order<00:43:37.160><c> of</c><00:43:37.319><c> all</c><00:43:37.480><c> the</c><00:43:37.800><c> merges</c><00:43:38.800><c> and</c><00:43:39.000><c> we</c><00:43:39.119><c> sort</c><00:43:39.319><c> of</c>

00:43:39.750 --> 00:43:39.760 align:start position:0%
order of all the merges and we sort of
 

00:43:39.760 --> 00:43:42.270 align:start position:0%
order of all the merges and we sort of
uh<00:43:39.960><c> populate</c><00:43:40.480><c> this</c><00:43:40.680><c> vocab</c><00:43:41.160><c> list</c><00:43:41.680><c> by</c><00:43:41.839><c> doing</c><00:43:42.119><c> an</c>

00:43:42.270 --> 00:43:42.280 align:start position:0%
uh populate this vocab list by doing an
 

00:43:42.280 --> 00:43:45.710 align:start position:0%
uh populate this vocab list by doing an
addition<00:43:42.720><c> here</c><00:43:43.359><c> so</c><00:43:43.559><c> this</c><00:43:43.720><c> is</c><00:43:44.599><c> the</c><00:43:45.359><c> basically</c>

00:43:45.710 --> 00:43:45.720 align:start position:0%
addition here so this is the basically
 

00:43:45.720 --> 00:43:47.750 align:start position:0%
addition here so this is the basically
the<00:43:45.839><c> bytes</c><00:43:46.240><c> representation</c><00:43:46.760><c> of</c><00:43:46.920><c> the</c><00:43:47.119><c> first</c>

00:43:47.750 --> 00:43:47.760 align:start position:0%
the bytes representation of the first
 

00:43:47.760 --> 00:43:50.030 align:start position:0%
the bytes representation of the first
child<00:43:48.400><c> followed</c><00:43:48.760><c> by</c><00:43:48.880><c> the</c><00:43:49.040><c> second</c><00:43:49.319><c> one</c><00:43:49.880><c> and</c>

00:43:50.030 --> 00:43:50.040 align:start position:0%
child followed by the second one and
 

00:43:50.040 --> 00:43:52.069 align:start position:0%
child followed by the second one and
remember<00:43:50.400><c> these</c><00:43:50.520><c> are</c><00:43:50.680><c> bytes</c><00:43:51.200><c> objects</c><00:43:51.720><c> so</c><00:43:51.920><c> this</c>

00:43:52.069 --> 00:43:52.079 align:start position:0%
remember these are bytes objects so this
 

00:43:52.079 --> 00:43:54.190 align:start position:0%
remember these are bytes objects so this
addition<00:43:52.520><c> here</c><00:43:52.760><c> is</c><00:43:52.880><c> an</c><00:43:53.119><c> addition</c><00:43:53.599><c> of</c><00:43:53.800><c> two</c>

00:43:54.190 --> 00:43:54.200 align:start position:0%
addition here is an addition of two
 

00:43:54.200 --> 00:43:57.030 align:start position:0%
addition here is an addition of two
bytes<00:43:54.760><c> objects</c><00:43:55.160><c> just</c><00:43:55.400><c> concatenation</c>

00:43:57.030 --> 00:43:57.040 align:start position:0%
bytes objects just concatenation
 

00:43:57.040 --> 00:43:58.750 align:start position:0%
bytes objects just concatenation
so<00:43:57.200><c> that's</c><00:43:57.359><c> what</c><00:43:57.440><c> we</c><00:43:57.599><c> get</c>

00:43:58.750 --> 00:43:58.760 align:start position:0%
so that's what we get
 

00:43:58.760 --> 00:44:01.190 align:start position:0%
so that's what we get
here<00:43:59.760><c> one</c><00:44:00.079><c> tricky</c><00:44:00.359><c> thing</c><00:44:00.520><c> to</c><00:44:00.640><c> be</c><00:44:00.720><c> careful</c><00:44:01.040><c> with</c>

00:44:01.190 --> 00:44:01.200 align:start position:0%
here one tricky thing to be careful with
 

00:44:01.200 --> 00:44:02.870 align:start position:0%
here one tricky thing to be careful with
by<00:44:01.280><c> the</c><00:44:01.359><c> way</c><00:44:01.480><c> is</c><00:44:01.599><c> that</c><00:44:01.720><c> I'm</c><00:44:01.839><c> iterating</c><00:44:02.599><c> a</c>

00:44:02.870 --> 00:44:02.880 align:start position:0%
by the way is that I'm iterating a
 

00:44:02.880 --> 00:44:05.990 align:start position:0%
by the way is that I'm iterating a
dictionary<00:44:03.359><c> in</c><00:44:03.520><c> Python</c><00:44:04.240><c> using</c><00:44:04.520><c> a</c><00:44:04.720><c> DOT</c><00:44:05.000><c> items</c>

00:44:05.990 --> 00:44:06.000 align:start position:0%
dictionary in Python using a DOT items
 

00:44:06.000 --> 00:44:08.710 align:start position:0%
dictionary in Python using a DOT items
and<00:44:06.480><c> uh</c><00:44:06.640><c> it</c><00:44:06.800><c> really</c><00:44:07.040><c> matters</c><00:44:07.480><c> that</c><00:44:07.839><c> this</c><00:44:08.240><c> runs</c>

00:44:08.710 --> 00:44:08.720 align:start position:0%
and uh it really matters that this runs
 

00:44:08.720 --> 00:44:11.470 align:start position:0%
and uh it really matters that this runs
in<00:44:08.839><c> the</c><00:44:09.000><c> order</c><00:44:09.400><c> in</c><00:44:09.599><c> which</c><00:44:10.319><c> we</c><00:44:10.559><c> inserted</c><00:44:11.119><c> items</c>

00:44:11.470 --> 00:44:11.480 align:start position:0%
in the order in which we inserted items
 

00:44:11.480 --> 00:44:13.549 align:start position:0%
in the order in which we inserted items
into<00:44:11.680><c> the</c><00:44:11.800><c> merous</c><00:44:12.359><c> dictionary</c><00:44:13.160><c> luckily</c>

00:44:13.549 --> 00:44:13.559 align:start position:0%
into the merous dictionary luckily
 

00:44:13.559 --> 00:44:15.390 align:start position:0%
into the merous dictionary luckily
starting<00:44:13.839><c> with</c><00:44:14.000><c> python</c><00:44:14.280><c> 3.7</c><00:44:15.119><c> this</c><00:44:15.240><c> is</c>

00:44:15.390 --> 00:44:15.400 align:start position:0%
starting with python 3.7 this is
 

00:44:15.400 --> 00:44:17.030 align:start position:0%
starting with python 3.7 this is
guaranteed<00:44:15.800><c> to</c><00:44:15.880><c> be</c><00:44:16.000><c> the</c><00:44:16.119><c> case</c><00:44:16.599><c> but</c><00:44:16.760><c> before</c>

00:44:17.030 --> 00:44:17.040 align:start position:0%
guaranteed to be the case but before
 

00:44:17.040 --> 00:44:19.150 align:start position:0%
guaranteed to be the case but before
python<00:44:17.319><c> 3.7</c><00:44:18.240><c> this</c><00:44:18.400><c> iteration</c><00:44:18.839><c> may</c><00:44:18.960><c> have</c><00:44:19.079><c> been</c>

00:44:19.150 --> 00:44:19.160 align:start position:0%
python 3.7 this iteration may have been
 

00:44:19.160 --> 00:44:20.950 align:start position:0%
python 3.7 this iteration may have been
out<00:44:19.359><c> of</c><00:44:19.520><c> order</c><00:44:20.119><c> with</c><00:44:20.319><c> respect</c><00:44:20.520><c> to</c><00:44:20.680><c> how</c><00:44:20.800><c> we</c>

00:44:20.950 --> 00:44:20.960 align:start position:0%
out of order with respect to how we
 

00:44:20.960 --> 00:44:23.150 align:start position:0%
out of order with respect to how we
inserted<00:44:21.520><c> elements</c><00:44:21.880><c> into</c><00:44:22.079><c> merges</c><00:44:22.880><c> and</c><00:44:23.000><c> this</c>

00:44:23.150 --> 00:44:23.160 align:start position:0%
inserted elements into merges and this
 

00:44:23.160 --> 00:44:25.790 align:start position:0%
inserted elements into merges and this
may<00:44:23.319><c> not</c><00:44:23.520><c> have</c><00:44:23.680><c> worked</c><00:44:24.280><c> but</c><00:44:24.440><c> we</c><00:44:24.520><c> are</c><00:44:24.680><c> using</c><00:44:25.480><c> an</c>

00:44:25.790 --> 00:44:25.800 align:start position:0%
may not have worked but we are using an
 

00:44:25.800 --> 00:44:28.790 align:start position:0%
may not have worked but we are using an
um<00:44:26.000><c> modern</c><00:44:26.280><c> python</c><00:44:26.559><c> so</c><00:44:26.720><c> we're</c><00:44:27.400><c> okay</c><00:44:28.400><c> and</c><00:44:28.559><c> then</c>

00:44:28.790 --> 00:44:28.800 align:start position:0%
um modern python so we're okay and then
 

00:44:28.800 --> 00:44:31.589 align:start position:0%
um modern python so we're okay and then
here<00:44:29.720><c> uh</c><00:44:29.839><c> given</c><00:44:30.079><c> the</c><00:44:30.240><c> IDS</c><00:44:31.200><c> the</c><00:44:31.319><c> first</c><00:44:31.480><c> thing</c>

00:44:31.589 --> 00:44:31.599 align:start position:0%
here uh given the IDS the first thing
 

00:44:31.599 --> 00:44:35.030 align:start position:0%
here uh given the IDS the first thing
we're<00:44:31.760><c> going</c><00:44:31.920><c> to</c><00:44:32.400><c> do</c><00:44:32.640><c> is</c><00:44:32.839><c> get</c><00:44:33.000><c> the</c>

00:44:35.030 --> 00:44:35.040 align:start position:0%
we're going to do is get the
 

00:44:35.040 --> 00:44:37.230 align:start position:0%
we're going to do is get the
tokens<00:44:36.040><c> so</c><00:44:36.240><c> the</c><00:44:36.319><c> way</c><00:44:36.440><c> I</c><00:44:36.559><c> implemented</c><00:44:37.040><c> this</c>

00:44:37.230 --> 00:44:37.240 align:start position:0%
tokens so the way I implemented this
 

00:44:37.240 --> 00:44:39.589 align:start position:0%
tokens so the way I implemented this
here<00:44:37.480><c> is</c><00:44:38.240><c> I'm</c><00:44:38.400><c> taking</c><00:44:38.839><c> I'm</c><00:44:38.960><c> iterating</c><00:44:39.400><c> over</c>

00:44:39.589 --> 00:44:39.599 align:start position:0%
here is I'm taking I'm iterating over
 

00:44:39.599 --> 00:44:41.870 align:start position:0%
here is I'm taking I'm iterating over
all<00:44:39.720><c> the</c><00:44:39.839><c> IDS</c><00:44:40.559><c> I'm</c><00:44:40.720><c> using</c><00:44:41.000><c> vocap</c><00:44:41.480><c> to</c><00:44:41.599><c> look</c><00:44:41.720><c> up</c>

00:44:41.870 --> 00:44:41.880 align:start position:0%
all the IDS I'm using vocap to look up
 

00:44:41.880 --> 00:44:44.109 align:start position:0%
all the IDS I'm using vocap to look up
their<00:44:42.079><c> bytes</c><00:44:42.880><c> and</c><00:44:43.000><c> then</c><00:44:43.240><c> here</c><00:44:43.599><c> this</c><00:44:43.680><c> is</c><00:44:43.920><c> one</c>

00:44:44.109 --> 00:44:44.119 align:start position:0%
their bytes and then here this is one
 

00:44:44.119 --> 00:44:46.630 align:start position:0%
their bytes and then here this is one
way<00:44:44.319><c> in</c><00:44:44.559><c> Python</c><00:44:44.960><c> to</c><00:44:45.559><c> concatenate</c><00:44:46.240><c> all</c><00:44:46.440><c> these</c>

00:44:46.630 --> 00:44:46.640 align:start position:0%
way in Python to concatenate all these
 

00:44:46.640 --> 00:44:49.710 align:start position:0%
way in Python to concatenate all these
bytes<00:44:47.119><c> together</c><00:44:47.520><c> to</c><00:44:47.720><c> create</c><00:44:48.040><c> our</c><00:44:48.640><c> tokens</c><00:44:49.640><c> and</c>

00:44:49.710 --> 00:44:49.720 align:start position:0%
bytes together to create our tokens and
 

00:44:49.720 --> 00:44:51.710 align:start position:0%
bytes together to create our tokens and
then<00:44:49.880><c> these</c><00:44:50.119><c> tokens</c><00:44:50.480><c> here</c><00:44:50.680><c> at</c><00:44:50.839><c> this</c><00:44:50.960><c> point</c><00:44:51.240><c> are</c>

00:44:51.710 --> 00:44:51.720 align:start position:0%
then these tokens here at this point are
 

00:44:51.720 --> 00:44:55.990 align:start position:0%
then these tokens here at this point are
raw<00:44:52.160><c> bytes</c><00:44:53.160><c> so</c><00:44:53.599><c> I</c><00:44:53.720><c> have</c><00:44:53.839><c> to</c><00:44:54.200><c> decode</c><00:44:55.200><c> using</c><00:44:55.520><c> UTF</c>

00:44:55.990 --> 00:44:56.000 align:start position:0%
raw bytes so I have to decode using UTF
 

00:44:56.000 --> 00:44:59.190 align:start position:0%
raw bytes so I have to decode using UTF
F<00:44:56.240><c> now</c><00:44:56.839><c> back</c><00:44:57.079><c> into</c><00:44:57.680><c> python</c><00:44:58.000><c> strings</c><00:44:58.960><c> so</c>

00:44:59.190 --> 00:44:59.200 align:start position:0%
F now back into python strings so
 

00:44:59.200 --> 00:45:01.150 align:start position:0%
F now back into python strings so
previously<00:44:59.599><c> we</c><00:44:59.720><c> called</c><00:44:59.960><c> that</c><00:45:00.200><c> encode</c><00:45:00.839><c> on</c><00:45:01.040><c> a</c>

00:45:01.150 --> 00:45:01.160 align:start position:0%
previously we called that encode on a
 

00:45:01.160 --> 00:45:03.190 align:start position:0%
previously we called that encode on a
string<00:45:01.520><c> object</c><00:45:01.920><c> to</c><00:45:02.119><c> get</c><00:45:02.280><c> the</c><00:45:02.400><c> bytes</c><00:45:02.960><c> and</c><00:45:03.079><c> now</c>

00:45:03.190 --> 00:45:03.200 align:start position:0%
string object to get the bytes and now
 

00:45:03.200 --> 00:45:05.190 align:start position:0%
string object to get the bytes and now
we're<00:45:03.359><c> doing</c><00:45:03.680><c> it</c><00:45:04.000><c> Opposite</c><00:45:04.599><c> we're</c><00:45:04.800><c> taking</c><00:45:05.040><c> the</c>

00:45:05.190 --> 00:45:05.200 align:start position:0%
we're doing it Opposite we're taking the
 

00:45:05.200 --> 00:45:07.790 align:start position:0%
we're doing it Opposite we're taking the
bytes<00:45:05.720><c> and</c><00:45:05.880><c> calling</c><00:45:06.119><c> a</c><00:45:06.280><c> decode</c><00:45:07.119><c> on</c><00:45:07.319><c> the</c><00:45:07.440><c> bytes</c>

00:45:07.790 --> 00:45:07.800 align:start position:0%
bytes and calling a decode on the bytes
 

00:45:07.800 --> 00:45:10.990 align:start position:0%
bytes and calling a decode on the bytes
object<00:45:08.400><c> to</c><00:45:08.599><c> get</c><00:45:08.760><c> a</c><00:45:08.960><c> string</c><00:45:09.520><c> in</c><00:45:09.880><c> Python</c><00:45:10.880><c> and</c>

00:45:10.990 --> 00:45:11.000 align:start position:0%
object to get a string in Python and
 

00:45:11.000 --> 00:45:13.309 align:start position:0%
object to get a string in Python and
then<00:45:11.119><c> we</c><00:45:11.240><c> can</c><00:45:11.559><c> return</c>

00:45:13.309 --> 00:45:13.319 align:start position:0%
then we can return
 

00:45:13.319 --> 00:45:16.950 align:start position:0%
then we can return
text<00:45:14.319><c> so</c><00:45:15.119><c> um</c><00:45:15.520><c> this</c><00:45:15.640><c> is</c><00:45:15.760><c> how</c><00:45:15.880><c> we</c><00:45:16.000><c> can</c><00:45:16.119><c> do</c><00:45:16.280><c> it</c><00:45:16.760><c> now</c>

00:45:16.950 --> 00:45:16.960 align:start position:0%
text so um this is how we can do it now
 

00:45:16.960 --> 00:45:20.790 align:start position:0%
text so um this is how we can do it now
this<00:45:17.200><c> actually</c><00:45:17.559><c> has</c><00:45:17.920><c> a</c><00:45:18.680><c> um</c><00:45:19.359><c> issue</c><00:45:20.359><c> um</c><00:45:20.559><c> in</c><00:45:20.680><c> the</c>

00:45:20.790 --> 00:45:20.800 align:start position:0%
this actually has a um issue um in the
 

00:45:20.800 --> 00:45:22.109 align:start position:0%
this actually has a um issue um in the
way<00:45:20.880><c> I</c><00:45:21.000><c> implemented</c><00:45:21.440><c> it</c><00:45:21.680><c> and</c><00:45:21.800><c> this</c><00:45:21.920><c> could</c>

00:45:22.109 --> 00:45:22.119 align:start position:0%
way I implemented it and this could
 

00:45:22.119 --> 00:45:24.109 align:start position:0%
way I implemented it and this could
actually<00:45:22.319><c> throw</c><00:45:22.559><c> an</c><00:45:22.720><c> error</c><00:45:23.400><c> so</c><00:45:23.559><c> try</c><00:45:23.760><c> to</c><00:45:23.920><c> think</c>

00:45:24.109 --> 00:45:24.119 align:start position:0%
actually throw an error so try to think
 

00:45:24.119 --> 00:45:26.470 align:start position:0%
actually throw an error so try to think
figure<00:45:24.359><c> out</c><00:45:24.880><c> why</c><00:45:25.240><c> this</c><00:45:25.440><c> code</c><00:45:26.000><c> could</c><00:45:26.200><c> actually</c>

00:45:26.470 --> 00:45:26.480 align:start position:0%
figure out why this code could actually
 

00:45:26.480 --> 00:45:30.230 align:start position:0%
figure out why this code could actually
result<00:45:26.839><c> in</c><00:45:26.960><c> an</c><00:45:27.160><c> error</c><00:45:27.720><c> if</c><00:45:27.839><c> we</c><00:45:28.000><c> plug</c><00:45:28.240><c> in</c><00:45:29.119><c> um</c><00:45:30.119><c> uh</c>

00:45:30.230 --> 00:45:30.240 align:start position:0%
result in an error if we plug in um uh
 

00:45:30.240 --> 00:45:32.589 align:start position:0%
result in an error if we plug in um uh
some<00:45:30.480><c> sequence</c><00:45:30.839><c> of</c><00:45:31.000><c> IDs</c><00:45:31.400><c> that</c><00:45:31.520><c> is</c>

00:45:32.589 --> 00:45:32.599 align:start position:0%
some sequence of IDs that is
 

00:45:32.599 --> 00:45:35.230 align:start position:0%
some sequence of IDs that is
unlucky<00:45:33.599><c> so</c><00:45:33.760><c> let</c><00:45:33.880><c> me</c><00:45:34.000><c> demonstrate</c><00:45:34.359><c> the</c><00:45:34.480><c> issue</c>

00:45:35.230 --> 00:45:35.240 align:start position:0%
unlucky so let me demonstrate the issue
 

00:45:35.240 --> 00:45:37.150 align:start position:0%
unlucky so let me demonstrate the issue
when<00:45:35.359><c> I</c><00:45:35.480><c> try</c><00:45:35.680><c> to</c><00:45:35.800><c> decode</c><00:45:36.280><c> just</c><00:45:36.440><c> something</c><00:45:36.720><c> like</c>

00:45:37.150 --> 00:45:37.160 align:start position:0%
when I try to decode just something like
 

00:45:37.160 --> 00:45:41.069 align:start position:0%
when I try to decode just something like
97<00:45:38.160><c> I</c><00:45:38.240><c> am</c><00:45:38.440><c> going</c><00:45:38.599><c> to</c><00:45:38.839><c> get</c><00:45:39.520><c> letter</c><00:45:39.839><c> A</c><00:45:40.119><c> here</c><00:45:40.559><c> back</c>

00:45:41.069 --> 00:45:41.079 align:start position:0%
97 I am going to get letter A here back
 

00:45:41.079 --> 00:45:44.390 align:start position:0%
97 I am going to get letter A here back
so<00:45:41.480><c> nothing</c><00:45:41.720><c> too</c><00:45:41.960><c> crazy</c><00:45:42.640><c> happening</c><00:45:43.640><c> but</c><00:45:44.240><c> when</c>

00:45:44.390 --> 00:45:44.400 align:start position:0%
so nothing too crazy happening but when
 

00:45:44.400 --> 00:45:48.230 align:start position:0%
so nothing too crazy happening but when
I<00:45:44.520><c> try</c><00:45:44.680><c> to</c><00:45:44.800><c> decode</c><00:45:45.319><c> 128</c><00:45:46.319><c> as</c><00:45:46.440><c> a</c><00:45:46.559><c> single</c><00:45:47.240><c> element</c>

00:45:48.230 --> 00:45:48.240 align:start position:0%
I try to decode 128 as a single element
 

00:45:48.240 --> 00:45:51.309 align:start position:0%
I try to decode 128 as a single element
the<00:45:48.400><c> token</c><00:45:48.680><c> 128</c><00:45:49.319><c> is</c><00:45:49.559><c> what</c><00:45:49.720><c> in</c><00:45:50.000><c> string</c><00:45:50.760><c> or</c><00:45:50.920><c> in</c>

00:45:51.309 --> 00:45:51.319 align:start position:0%
the token 128 is what in string or in
 

00:45:51.319 --> 00:45:55.109 align:start position:0%
the token 128 is what in string or in
Python<00:45:51.680><c> object</c><00:45:52.160><c> uni</c><00:45:52.480><c> Cod</c><00:45:53.119><c> decoder</c><00:45:54.119><c> utfa</c><00:45:54.680><c> can't</c>

00:45:55.109 --> 00:45:55.119 align:start position:0%
Python object uni Cod decoder utfa can't
 

00:45:55.119 --> 00:46:00.109 align:start position:0%
Python object uni Cod decoder utfa can't
Decode<00:45:55.559><c> by</c><00:45:56.200><c> um</c><00:45:56.880><c> 0x8</c><00:45:57.880><c> which</c><00:45:58.040><c> is</c><00:45:58.400><c> this</c><00:45:58.599><c> in</c><00:45:59.240><c> HEX</c><00:45:59.920><c> in</c>

00:46:00.109 --> 00:46:00.119 align:start position:0%
Decode by um 0x8 which is this in HEX in
 

00:46:00.119 --> 00:46:01.910 align:start position:0%
Decode by um 0x8 which is this in HEX in
position<00:46:00.440><c> zero</c><00:46:00.720><c> invalid</c><00:46:01.119><c> start</c><00:46:01.400><c> bite</c><00:46:01.800><c> what</c>

00:46:01.910 --> 00:46:01.920 align:start position:0%
position zero invalid start bite what
 

00:46:01.920 --> 00:46:03.630 align:start position:0%
position zero invalid start bite what
does<00:46:02.079><c> that</c><00:46:02.200><c> mean</c><00:46:03.000><c> well</c><00:46:03.119><c> to</c><00:46:03.440><c> understand</c><00:46:03.559><c> what</c>

00:46:03.630 --> 00:46:03.640 align:start position:0%
does that mean well to understand what
 

00:46:03.640 --> 00:46:04.750 align:start position:0%
does that mean well to understand what
this<00:46:03.760><c> means</c><00:46:03.960><c> we</c><00:46:04.040><c> have</c><00:46:04.119><c> to</c><00:46:04.240><c> go</c><00:46:04.359><c> back</c><00:46:04.480><c> to</c><00:46:04.599><c> our</c>

00:46:04.750 --> 00:46:04.760 align:start position:0%
this means we have to go back to our
 

00:46:04.760 --> 00:46:07.910 align:start position:0%
this means we have to go back to our
utf8<00:46:05.440><c> page</c><00:46:06.440><c> uh</c><00:46:06.520><c> that</c><00:46:06.640><c> I</c><00:46:06.800><c> briefly</c><00:46:07.400><c> showed</c>

00:46:07.910 --> 00:46:07.920 align:start position:0%
utf8 page uh that I briefly showed
 

00:46:07.920 --> 00:46:10.750 align:start position:0%
utf8 page uh that I briefly showed
earlier<00:46:08.520><c> and</c><00:46:08.640><c> this</c><00:46:08.720><c> is</c><00:46:08.880><c> Wikipedia</c><00:46:09.640><c> utf8</c><00:46:10.640><c> and</c>

00:46:10.750 --> 00:46:10.760 align:start position:0%
earlier and this is Wikipedia utf8 and
 

00:46:10.760 --> 00:46:13.549 align:start position:0%
earlier and this is Wikipedia utf8 and
basically<00:46:11.440><c> there's</c><00:46:11.599><c> a</c><00:46:11.839><c> specific</c><00:46:12.280><c> schema</c><00:46:13.240><c> that</c>

00:46:13.549 --> 00:46:13.559 align:start position:0%
basically there's a specific schema that
 

00:46:13.559 --> 00:46:16.910 align:start position:0%
basically there's a specific schema that
utfa<00:46:14.319><c> bytes</c><00:46:14.960><c> take</c><00:46:15.960><c> so</c><00:46:16.119><c> in</c><00:46:16.240><c> particular</c><00:46:16.720><c> if</c><00:46:16.800><c> you</c>

00:46:16.910 --> 00:46:16.920 align:start position:0%
utfa bytes take so in particular if you
 

00:46:16.920 --> 00:46:19.829 align:start position:0%
utfa bytes take so in particular if you
have<00:46:17.040><c> a</c><00:46:17.319><c> multi-te</c><00:46:18.280><c> object</c><00:46:19.280><c> for</c><00:46:19.480><c> some</c><00:46:19.599><c> of</c><00:46:19.720><c> the</c>

00:46:19.829 --> 00:46:19.839 align:start position:0%
have a multi-te object for some of the
 

00:46:19.839 --> 00:46:21.510 align:start position:0%
have a multi-te object for some of the
Unicode<00:46:20.200><c> characters</c><00:46:20.920><c> they</c><00:46:21.079><c> have</c><00:46:21.200><c> to</c><00:46:21.359><c> have</c>

00:46:21.510 --> 00:46:21.520 align:start position:0%
Unicode characters they have to have
 

00:46:21.520 --> 00:46:24.150 align:start position:0%
Unicode characters they have to have
this<00:46:21.720><c> special</c><00:46:22.040><c> sort</c><00:46:22.240><c> of</c><00:46:22.480><c> envelope</c><00:46:23.160><c> in</c><00:46:23.400><c> how</c><00:46:24.040><c> the</c>

00:46:24.150 --> 00:46:24.160 align:start position:0%
this special sort of envelope in how the
 

00:46:24.160 --> 00:46:26.510 align:start position:0%
this special sort of envelope in how the
encoding<00:46:24.800><c> works</c><00:46:25.839><c> and</c><00:46:25.920><c> so</c><00:46:26.040><c> what's</c><00:46:26.200><c> happening</c>

00:46:26.510 --> 00:46:26.520 align:start position:0%
encoding works and so what's happening
 

00:46:26.520 --> 00:46:29.990 align:start position:0%
encoding works and so what's happening
here<00:46:26.680><c> is</c><00:46:27.240><c> that</c><00:46:28.240><c> invalid</c><00:46:28.720><c> start</c><00:46:29.040><c> pite</c><00:46:29.800><c> that's</c>

00:46:29.990 --> 00:46:30.000 align:start position:0%
here is that invalid start pite that's
 

00:46:30.000 --> 00:46:30.990 align:start position:0%
here is that invalid start pite that's
because

00:46:30.990 --> 00:46:31.000 align:start position:0%
because
 

00:46:31.000 --> 00:46:33.870 align:start position:0%
because
128<00:46:32.000><c> the</c><00:46:32.119><c> binary</c><00:46:32.480><c> representation</c><00:46:33.040><c> of</c><00:46:33.200><c> it</c><00:46:33.599><c> is</c>

00:46:33.870 --> 00:46:33.880 align:start position:0%
128 the binary representation of it is
 

00:46:33.880 --> 00:46:37.349 align:start position:0%
128 the binary representation of it is
one<00:46:34.240><c> followed</c><00:46:34.599><c> by</c><00:46:34.760><c> all</c><00:46:35.319><c> zeros</c><00:46:36.319><c> so</c><00:46:36.599><c> we</c><00:46:36.760><c> have</c><00:46:36.960><c> one</c>

00:46:37.349 --> 00:46:37.359 align:start position:0%
one followed by all zeros so we have one
 

00:46:37.359 --> 00:46:39.549 align:start position:0%
one followed by all zeros so we have one
and<00:46:37.480><c> then</c><00:46:37.680><c> all</c><00:46:38.000><c> zero</c><00:46:38.760><c> and</c><00:46:38.880><c> we</c><00:46:38.960><c> see</c><00:46:39.200><c> here</c><00:46:39.400><c> that</c>

00:46:39.549 --> 00:46:39.559 align:start position:0%
and then all zero and we see here that
 

00:46:39.559 --> 00:46:41.030 align:start position:0%
and then all zero and we see here that
that<00:46:39.680><c> doesn't</c><00:46:39.960><c> conform</c><00:46:40.280><c> to</c><00:46:40.440><c> the</c><00:46:40.559><c> format</c>

00:46:41.030 --> 00:46:41.040 align:start position:0%
that doesn't conform to the format
 

00:46:41.040 --> 00:46:42.670 align:start position:0%
that doesn't conform to the format
because<00:46:41.280><c> one</c><00:46:41.440><c> followed</c><00:46:41.760><c> by</c><00:46:41.880><c> all</c><00:46:42.119><c> zero</c><00:46:42.520><c> just</c>

00:46:42.670 --> 00:46:42.680 align:start position:0%
because one followed by all zero just
 

00:46:42.680 --> 00:46:44.950 align:start position:0%
because one followed by all zero just
doesn't<00:46:43.400><c> fit</c><00:46:43.680><c> any</c><00:46:43.839><c> of</c><00:46:43.960><c> these</c><00:46:44.160><c> rules</c><00:46:44.640><c> so</c><00:46:44.760><c> to</c>

00:46:44.950 --> 00:46:44.960 align:start position:0%
doesn't fit any of these rules so to
 

00:46:44.960 --> 00:46:47.630 align:start position:0%
doesn't fit any of these rules so to
speak<00:46:45.680><c> so</c><00:46:45.920><c> it's</c><00:46:46.040><c> an</c><00:46:46.200><c> invalid</c><00:46:46.920><c> start</c><00:46:47.280><c> bite</c>

00:46:47.630 --> 00:46:47.640 align:start position:0%
speak so it's an invalid start bite
 

00:46:47.640 --> 00:46:50.589 align:start position:0%
speak so it's an invalid start bite
which<00:46:47.720><c> is</c><00:46:47.920><c> byte</c><00:46:48.280><c> one</c><00:46:49.280><c> this</c><00:46:49.480><c> one</c><00:46:49.960><c> must</c><00:46:50.240><c> have</c><00:46:50.440><c> a</c>

00:46:50.589 --> 00:46:50.599 align:start position:0%
which is byte one this one must have a
 

00:46:50.599 --> 00:46:52.750 align:start position:0%
which is byte one this one must have a
one<00:46:51.040><c> following</c><00:46:51.480><c> it</c><00:46:52.040><c> and</c><00:46:52.160><c> then</c><00:46:52.319><c> a</c><00:46:52.480><c> zero</c>

00:46:52.750 --> 00:46:52.760 align:start position:0%
one following it and then a zero
 

00:46:52.760 --> 00:46:54.470 align:start position:0%
one following it and then a zero
following<00:46:53.160><c> it</c><00:46:53.520><c> and</c><00:46:53.640><c> then</c><00:46:53.839><c> the</c><00:46:53.960><c> content</c><00:46:54.319><c> of</c>

00:46:54.470 --> 00:46:54.480 align:start position:0%
following it and then the content of
 

00:46:54.480 --> 00:46:57.670 align:start position:0%
following it and then the content of
your<00:46:54.640><c> uni</c><00:46:54.960><c> codee</c><00:46:55.319><c> in</c><00:46:55.559><c> x</c><00:46:56.119><c> here</c><00:46:57.000><c> so</c><00:46:57.160><c> basically</c><00:46:57.559><c> we</c>

00:46:57.670 --> 00:46:57.680 align:start position:0%
your uni codee in x here so basically we
 

00:46:57.680 --> 00:46:59.950 align:start position:0%
your uni codee in x here so basically we
don't<00:46:58.359><c> um</c><00:46:58.800><c> exactly</c><00:46:59.119><c> follow</c><00:46:59.359><c> the</c><00:46:59.440><c> utf8</c>

00:46:59.950 --> 00:46:59.960 align:start position:0%
don't um exactly follow the utf8
 

00:46:59.960 --> 00:47:02.510 align:start position:0%
don't um exactly follow the utf8
standard<00:47:00.559><c> and</c><00:47:00.720><c> this</c><00:47:00.839><c> cannot</c><00:47:01.160><c> be</c><00:47:01.440><c> decoded</c><00:47:02.440><c> and</c>

00:47:02.510 --> 00:47:02.520 align:start position:0%
standard and this cannot be decoded and
 

00:47:02.520 --> 00:47:06.270 align:start position:0%
standard and this cannot be decoded and
so<00:47:02.720><c> the</c><00:47:02.839><c> way</c><00:47:02.960><c> to</c><00:47:03.160><c> fix</c><00:47:03.480><c> this</c><00:47:04.400><c> um</c><00:47:05.000><c> is</c><00:47:05.200><c> to</c>

00:47:06.270 --> 00:47:06.280 align:start position:0%
so the way to fix this um is to
 

00:47:06.280 --> 00:47:11.030 align:start position:0%
so the way to fix this um is to
use<00:47:07.280><c> this</c><00:47:07.559><c> errors</c><00:47:08.200><c> equals</c><00:47:09.200><c> in</c><00:47:09.800><c> bytes.</c><00:47:10.400><c> decode</c>

00:47:11.030 --> 00:47:11.040 align:start position:0%
use this errors equals in bytes. decode
 

00:47:11.040 --> 00:47:13.829 align:start position:0%
use this errors equals in bytes. decode
function<00:47:11.400><c> of</c><00:47:11.720><c> python</c><00:47:12.720><c> and</c><00:47:12.880><c> by</c><00:47:13.040><c> default</c><00:47:13.400><c> errors</c>

00:47:13.829 --> 00:47:13.839 align:start position:0%
function of python and by default errors
 

00:47:13.839 --> 00:47:17.150 align:start position:0%
function of python and by default errors
is<00:47:14.119><c> strict</c><00:47:14.800><c> so</c><00:47:15.240><c> we</c><00:47:15.319><c> will</c><00:47:15.599><c> throw</c><00:47:15.880><c> an</c><00:47:16.040><c> error</c><00:47:16.640><c> if</c>

00:47:17.150 --> 00:47:17.160 align:start position:0%
is strict so we will throw an error if
 

00:47:17.160 --> 00:47:20.270 align:start position:0%
is strict so we will throw an error if
um<00:47:17.319><c> it's</c><00:47:17.480><c> not</c><00:47:17.760><c> valid</c><00:47:18.079><c> utf8</c><00:47:18.960><c> bytes</c><00:47:19.280><c> encoding</c>

00:47:20.270 --> 00:47:20.280 align:start position:0%
um it's not valid utf8 bytes encoding
 

00:47:20.280 --> 00:47:21.670 align:start position:0%
um it's not valid utf8 bytes encoding
but<00:47:20.400><c> there</c><00:47:20.480><c> are</c><00:47:20.599><c> many</c><00:47:20.800><c> different</c><00:47:21.319><c> things</c><00:47:21.559><c> that</c>

00:47:21.670 --> 00:47:21.680 align:start position:0%
but there are many different things that
 

00:47:21.680 --> 00:47:23.670 align:start position:0%
but there are many different things that
you<00:47:21.760><c> could</c><00:47:21.880><c> put</c><00:47:22.079><c> here</c><00:47:22.240><c> on</c><00:47:22.400><c> error</c><00:47:22.720><c> handling</c>

00:47:23.670 --> 00:47:23.680 align:start position:0%
you could put here on error handling
 

00:47:23.680 --> 00:47:25.349 align:start position:0%
you could put here on error handling
this<00:47:23.800><c> is</c><00:47:23.920><c> the</c><00:47:24.040><c> full</c><00:47:24.359><c> list</c><00:47:24.559><c> of</c><00:47:24.680><c> all</c><00:47:24.839><c> the</c><00:47:24.920><c> errors</c>

00:47:25.349 --> 00:47:25.359 align:start position:0%
this is the full list of all the errors
 

00:47:25.359 --> 00:47:27.349 align:start position:0%
this is the full list of all the errors
that<00:47:25.440><c> you</c><00:47:25.520><c> can</c><00:47:25.880><c> use</c><00:47:26.680><c> and</c><00:47:26.800><c> in</c><00:47:26.960><c> particular</c>

00:47:27.349 --> 00:47:27.359 align:start position:0%
that you can use and in particular
 

00:47:27.359 --> 00:47:29.349 align:start position:0%
that you can use and in particular
instead<00:47:27.599><c> of</c><00:47:27.720><c> strict</c><00:47:28.240><c> let's</c><00:47:28.440><c> change</c><00:47:28.640><c> it</c><00:47:28.800><c> to</c>

00:47:29.349 --> 00:47:29.359 align:start position:0%
instead of strict let's change it to
 

00:47:29.359 --> 00:47:32.270 align:start position:0%
instead of strict let's change it to
replace<00:47:30.359><c> and</c><00:47:30.520><c> that</c><00:47:30.640><c> will</c><00:47:30.880><c> replace</c><00:47:31.680><c> uh</c><00:47:31.880><c> with</c>

00:47:32.270 --> 00:47:32.280 align:start position:0%
replace and that will replace uh with
 

00:47:32.280 --> 00:47:35.790 align:start position:0%
replace and that will replace uh with
this<00:47:32.760><c> special</c><00:47:33.760><c> marker</c><00:47:34.760><c> this</c><00:47:35.079><c> replacement</c>

00:47:35.790 --> 00:47:35.800 align:start position:0%
this special marker this replacement
 

00:47:35.800 --> 00:47:40.510 align:start position:0%
this special marker this replacement
character<00:47:36.800><c> so</c><00:47:37.480><c> errors</c><00:47:38.040><c> equals</c><00:47:39.359><c> replace</c><00:47:40.359><c> and</c>

00:47:40.510 --> 00:47:40.520 align:start position:0%
character so errors equals replace and
 

00:47:40.520 --> 00:47:43.150 align:start position:0%
character so errors equals replace and
now<00:47:40.680><c> we</c><00:47:40.800><c> just</c><00:47:40.920><c> get</c><00:47:41.240><c> that</c><00:47:41.400><c> character</c>

00:47:43.150 --> 00:47:43.160 align:start position:0%
now we just get that character
 

00:47:43.160 --> 00:47:46.950 align:start position:0%
now we just get that character
back<00:47:44.160><c> so</c><00:47:44.839><c> basically</c><00:47:45.319><c> not</c><00:47:45.599><c> every</c><00:47:45.839><c> single</c><00:47:46.640><c> by</c>

00:47:46.950 --> 00:47:46.960 align:start position:0%
back so basically not every single by
 

00:47:46.960 --> 00:47:48.510 align:start position:0%
back so basically not every single by
sequence<00:47:47.400><c> is</c><00:47:47.599><c> valid</c>

00:47:48.510 --> 00:47:48.520 align:start position:0%
sequence is valid
 

00:47:48.520 --> 00:47:51.470 align:start position:0%
sequence is valid
utf8<00:47:49.520><c> and</c><00:47:49.960><c> if</c><00:47:50.079><c> it</c><00:47:50.280><c> happens</c><00:47:50.680><c> that</c><00:47:50.839><c> your</c><00:47:51.119><c> large</c>

00:47:51.470 --> 00:47:51.480 align:start position:0%
utf8 and if it happens that your large
 

00:47:51.480 --> 00:47:53.870 align:start position:0%
utf8 and if it happens that your large
language<00:47:51.800><c> model</c><00:47:52.079><c> for</c><00:47:52.240><c> example</c><00:47:52.720><c> predicts</c><00:47:53.640><c> your</c>

00:47:53.870 --> 00:47:53.880 align:start position:0%
language model for example predicts your
 

00:47:53.880 --> 00:47:56.630 align:start position:0%
language model for example predicts your
tokens<00:47:54.359><c> in</c><00:47:54.480><c> a</c><00:47:54.720><c> bad</c><00:47:55.000><c> manner</c><00:47:56.079><c> then</c><00:47:56.240><c> they</c><00:47:56.400><c> might</c>

00:47:56.630 --> 00:47:56.640 align:start position:0%
tokens in a bad manner then they might
 

00:47:56.640 --> 00:48:00.230 align:start position:0%
tokens in a bad manner then they might
not<00:47:56.960><c> fall</c><00:47:57.640><c> into</c><00:47:58.440><c> valid</c><00:47:58.760><c> utf8</c><00:47:59.760><c> and</c><00:47:59.960><c> then</c><00:48:00.119><c> we</c>

00:48:00.230 --> 00:48:00.240 align:start position:0%
not fall into valid utf8 and then we
 

00:48:00.240 --> 00:48:02.870 align:start position:0%
not fall into valid utf8 and then we
won't<00:48:00.480><c> be</c><00:48:00.559><c> able</c><00:48:00.720><c> to</c><00:48:00.839><c> decode</c><00:48:01.240><c> them</c><00:48:02.240><c> so</c><00:48:02.760><c> the</c>

00:48:02.870 --> 00:48:02.880 align:start position:0%
won't be able to decode them so the
 

00:48:02.880 --> 00:48:05.630 align:start position:0%
won't be able to decode them so the
standard<00:48:03.319><c> practice</c><00:48:03.839><c> is</c><00:48:04.040><c> to</c><00:48:04.319><c> basically</c><00:48:05.240><c> uh</c><00:48:05.359><c> use</c>

00:48:05.630 --> 00:48:05.640 align:start position:0%
standard practice is to basically uh use
 

00:48:05.640 --> 00:48:07.510 align:start position:0%
standard practice is to basically uh use
errors<00:48:05.960><c> equals</c><00:48:06.319><c> replace</c><00:48:07.079><c> and</c><00:48:07.200><c> this</c><00:48:07.280><c> is</c><00:48:07.400><c> what</c>

00:48:07.510 --> 00:48:07.520 align:start position:0%
errors equals replace and this is what
 

00:48:07.520 --> 00:48:10.309 align:start position:0%
errors equals replace and this is what
you<00:48:07.599><c> will</c><00:48:07.800><c> also</c><00:48:08.040><c> find</c><00:48:08.319><c> in</c><00:48:08.440><c> the</c><00:48:08.559><c> openai</c><00:48:09.480><c> um</c><00:48:10.040><c> code</c>

00:48:10.309 --> 00:48:10.319 align:start position:0%
you will also find in the openai um code
 

00:48:10.319 --> 00:48:12.710 align:start position:0%
you will also find in the openai um code
that<00:48:10.440><c> they</c><00:48:10.920><c> released</c><00:48:11.319><c> as</c><00:48:11.440><c> well</c><00:48:12.240><c> but</c><00:48:12.400><c> basically</c>

00:48:12.710 --> 00:48:12.720 align:start position:0%
that they released as well but basically
 

00:48:12.720 --> 00:48:14.190 align:start position:0%
that they released as well but basically
whenever<00:48:13.000><c> you</c><00:48:13.079><c> see</c><00:48:13.520><c> um</c><00:48:13.760><c> this</c><00:48:13.920><c> kind</c><00:48:14.040><c> of</c><00:48:14.119><c> a</c>

00:48:14.190 --> 00:48:14.200 align:start position:0%
whenever you see um this kind of a
 

00:48:14.200 --> 00:48:15.990 align:start position:0%
whenever you see um this kind of a
character<00:48:14.480><c> in</c><00:48:14.599><c> your</c><00:48:14.720><c> output</c><00:48:15.079><c> in</c><00:48:15.240><c> that</c><00:48:15.440><c> case</c><00:48:15.880><c> uh</c>

00:48:15.990 --> 00:48:16.000 align:start position:0%
character in your output in that case uh
 

00:48:16.000 --> 00:48:18.150 align:start position:0%
character in your output in that case uh
something<00:48:16.240><c> went</c><00:48:16.480><c> wrong</c><00:48:17.079><c> and</c><00:48:17.240><c> the</c><00:48:17.359><c> LM</c><00:48:17.800><c> output</c>

00:48:18.150 --> 00:48:18.160 align:start position:0%
something went wrong and the LM output
 

00:48:18.160 --> 00:48:21.510 align:start position:0%
something went wrong and the LM output
not<00:48:18.400><c> was</c><00:48:18.559><c> not</c><00:48:19.079><c> valid</c><00:48:20.079><c> uh</c><00:48:20.200><c> sort</c><00:48:20.359><c> of</c><00:48:20.599><c> sequence</c><00:48:20.920><c> of</c>

00:48:21.510 --> 00:48:21.520 align:start position:0%
not was not valid uh sort of sequence of
 

00:48:21.520 --> 00:48:23.470 align:start position:0%
not was not valid uh sort of sequence of
tokens<00:48:22.520><c> okay</c><00:48:22.680><c> and</c><00:48:22.800><c> now</c><00:48:22.920><c> we're</c><00:48:23.040><c> going</c><00:48:23.200><c> to</c><00:48:23.319><c> go</c>

00:48:23.470 --> 00:48:23.480 align:start position:0%
tokens okay and now we're going to go
 

00:48:23.480 --> 00:48:25.309 align:start position:0%
tokens okay and now we're going to go
the<00:48:23.559><c> other</c><00:48:23.839><c> way</c><00:48:24.440><c> so</c><00:48:24.839><c> we</c><00:48:24.920><c> are</c><00:48:25.079><c> going</c><00:48:25.200><c> to</c>

00:48:25.309 --> 00:48:25.319 align:start position:0%
the other way so we are going to
 

00:48:25.319 --> 00:48:26.230 align:start position:0%
the other way so we are going to
implement

00:48:26.230 --> 00:48:26.240 align:start position:0%
implement
 

00:48:26.240 --> 00:48:27.950 align:start position:0%
implement
this<00:48:26.400><c> Arrow</c><00:48:26.800><c> right</c><00:48:26.960><c> here</c><00:48:27.520><c> where</c><00:48:27.640><c> we</c><00:48:27.720><c> are</c><00:48:27.880><c> going</c>

00:48:27.950 --> 00:48:27.960 align:start position:0%
this Arrow right here where we are going
 

00:48:27.960 --> 00:48:29.630 align:start position:0%
this Arrow right here where we are going
to<00:48:28.079><c> be</c><00:48:28.200><c> given</c><00:48:28.400><c> a</c><00:48:28.599><c> string</c><00:48:29.119><c> and</c><00:48:29.240><c> we</c><00:48:29.359><c> want</c><00:48:29.480><c> to</c>

00:48:29.630 --> 00:48:29.640 align:start position:0%
to be given a string and we want to
 

00:48:29.640 --> 00:48:31.150 align:start position:0%
to be given a string and we want to
encode<00:48:29.960><c> it</c><00:48:30.079><c> into</c>

00:48:31.150 --> 00:48:31.160 align:start position:0%
encode it into
 

00:48:31.160 --> 00:48:33.710 align:start position:0%
encode it into
tokens<00:48:32.160><c> so</c><00:48:32.800><c> this</c><00:48:32.920><c> is</c><00:48:33.040><c> the</c><00:48:33.160><c> signature</c><00:48:33.520><c> of</c><00:48:33.640><c> the</c>

00:48:33.710 --> 00:48:33.720 align:start position:0%
tokens so this is the signature of the
 

00:48:33.720 --> 00:48:36.910 align:start position:0%
tokens so this is the signature of the
function<00:48:34.000><c> that</c><00:48:34.079><c> we're</c><00:48:34.280><c> interested</c><00:48:34.800><c> in</c><00:48:35.800><c> and</c><00:48:36.599><c> um</c>

00:48:36.910 --> 00:48:36.920 align:start position:0%
function that we're interested in and um
 

00:48:36.920 --> 00:48:38.150 align:start position:0%
function that we're interested in and um
this<00:48:37.040><c> should</c><00:48:37.240><c> basically</c><00:48:37.559><c> print</c><00:48:37.760><c> a</c><00:48:37.880><c> list</c><00:48:38.040><c> of</c>

00:48:38.150 --> 00:48:38.160 align:start position:0%
this should basically print a list of
 

00:48:38.160 --> 00:48:41.750 align:start position:0%
this should basically print a list of
integers<00:48:38.960><c> of</c><00:48:39.079><c> the</c><00:48:39.240><c> tokens</c><00:48:40.079><c> so</c><00:48:40.640><c> again</c><00:48:41.359><c> uh</c><00:48:41.640><c> try</c>

00:48:41.750 --> 00:48:41.760 align:start position:0%
integers of the tokens so again uh try
 

00:48:41.760 --> 00:48:43.030 align:start position:0%
integers of the tokens so again uh try
to<00:48:41.880><c> maybe</c><00:48:42.119><c> implement</c><00:48:42.440><c> this</c><00:48:42.599><c> yourself</c><00:48:42.920><c> if</c>

00:48:43.030 --> 00:48:43.040 align:start position:0%
to maybe implement this yourself if
 

00:48:43.040 --> 00:48:45.549 align:start position:0%
to maybe implement this yourself if
you'd<00:48:43.200><c> like</c><00:48:43.319><c> a</c><00:48:43.440><c> fun</c><00:48:43.920><c> exercise</c><00:48:44.920><c> uh</c><00:48:45.040><c> and</c><00:48:45.280><c> pause</c>

00:48:45.549 --> 00:48:45.559 align:start position:0%
you'd like a fun exercise uh and pause
 

00:48:45.559 --> 00:48:46.510 align:start position:0%
you'd like a fun exercise uh and pause
here<00:48:45.760><c> otherwise</c><00:48:46.079><c> I'm</c><00:48:46.160><c> going</c><00:48:46.280><c> to</c><00:48:46.359><c> start</c>

00:48:46.510 --> 00:48:46.520 align:start position:0%
here otherwise I'm going to start
 

00:48:46.520 --> 00:48:47.950 align:start position:0%
here otherwise I'm going to start
putting<00:48:46.760><c> in</c><00:48:46.880><c> my</c>

00:48:47.950 --> 00:48:47.960 align:start position:0%
putting in my
 

00:48:47.960 --> 00:48:50.270 align:start position:0%
putting in my
solution<00:48:48.960><c> so</c><00:48:49.160><c> again</c><00:48:49.280><c> there</c><00:48:49.359><c> are</c><00:48:49.480><c> many</c><00:48:49.720><c> ways</c><00:48:49.920><c> to</c>

00:48:50.270 --> 00:48:50.280 align:start position:0%
solution so again there are many ways to
 

00:48:50.280 --> 00:48:53.630 align:start position:0%
solution so again there are many ways to
do<00:48:50.520><c> this</c><00:48:50.920><c> so</c><00:48:51.680><c> um</c><00:48:52.680><c> this</c><00:48:52.760><c> is</c><00:48:52.920><c> one</c><00:48:53.040><c> of</c><00:48:53.160><c> the</c><00:48:53.280><c> ways</c>

00:48:53.630 --> 00:48:53.640 align:start position:0%
do this so um this is one of the ways
 

00:48:53.640 --> 00:48:57.589 align:start position:0%
do this so um this is one of the ways
that<00:48:54.160><c> sort</c><00:48:54.359><c> of</c><00:48:55.280><c> I</c><00:48:55.400><c> came</c><00:48:55.559><c> came</c><00:48:55.720><c> up</c><00:48:56.359><c> with</c><00:48:57.359><c> so</c><00:48:57.520><c> the</c>

00:48:57.589 --> 00:48:57.599 align:start position:0%
that sort of I came came up with so the
 

00:48:57.599 --> 00:48:59.150 align:start position:0%
that sort of I came came up with so the
first<00:48:57.760><c> thing</c><00:48:57.880><c> we're</c><00:48:58.040><c> going</c><00:48:58.160><c> to</c><00:48:58.319><c> do</c><00:48:58.680><c> is</c><00:48:58.880><c> we</c><00:48:59.000><c> are</c>

00:48:59.150 --> 00:48:59.160 align:start position:0%
first thing we're going to do is we are
 

00:48:59.160 --> 00:49:00.109 align:start position:0%
first thing we're going to do is we are
going

00:49:00.109 --> 00:49:00.119 align:start position:0%
going
 

00:49:00.119 --> 00:49:03.430 align:start position:0%
going
to<00:49:01.119><c> uh</c><00:49:01.440><c> take</c><00:49:01.640><c> our</c><00:49:01.880><c> text</c><00:49:02.240><c> encode</c><00:49:02.559><c> it</c><00:49:02.680><c> into</c><00:49:02.880><c> utf8</c>

00:49:03.430 --> 00:49:03.440 align:start position:0%
to uh take our text encode it into utf8
 

00:49:03.440 --> 00:49:05.789 align:start position:0%
to uh take our text encode it into utf8
to<00:49:03.559><c> get</c><00:49:03.680><c> the</c><00:49:03.839><c> raw</c><00:49:04.119><c> bytes</c><00:49:05.079><c> and</c><00:49:05.200><c> then</c><00:49:05.400><c> as</c><00:49:05.559><c> before</c>

00:49:05.789 --> 00:49:05.799 align:start position:0%
to get the raw bytes and then as before
 

00:49:05.799 --> 00:49:07.270 align:start position:0%
to get the raw bytes and then as before
we're<00:49:05.960><c> going</c><00:49:06.079><c> to</c><00:49:06.200><c> call</c><00:49:06.440><c> list</c><00:49:06.720><c> on</c><00:49:06.839><c> the</c><00:49:06.960><c> bytes</c>

00:49:07.270 --> 00:49:07.280 align:start position:0%
we're going to call list on the bytes
 

00:49:07.280 --> 00:49:10.069 align:start position:0%
we're going to call list on the bytes
object<00:49:07.680><c> to</c><00:49:07.880><c> get</c><00:49:08.119><c> a</c><00:49:08.359><c> list</c><00:49:08.559><c> of</c><00:49:08.720><c> integers</c><00:49:09.720><c> of</c>

00:49:10.069 --> 00:49:10.079 align:start position:0%
object to get a list of integers of
 

00:49:10.079 --> 00:49:12.750 align:start position:0%
object to get a list of integers of
those<00:49:10.640><c> bytes</c><00:49:11.640><c> so</c><00:49:11.839><c> those</c><00:49:12.000><c> are</c><00:49:12.240><c> the</c><00:49:12.400><c> starting</c>

00:49:12.750 --> 00:49:12.760 align:start position:0%
those bytes so those are the starting
 

00:49:12.760 --> 00:49:14.589 align:start position:0%
those bytes so those are the starting
tokens<00:49:13.160><c> those</c><00:49:13.280><c> are</c><00:49:13.400><c> the</c><00:49:13.559><c> raw</c><00:49:13.839><c> bytes</c><00:49:14.119><c> of</c><00:49:14.240><c> our</c>

00:49:14.589 --> 00:49:14.599 align:start position:0%
tokens those are the raw bytes of our
 

00:49:14.599 --> 00:49:16.950 align:start position:0%
tokens those are the raw bytes of our
sequence<00:49:15.599><c> but</c><00:49:15.760><c> now</c><00:49:15.960><c> of</c><00:49:16.079><c> course</c><00:49:16.559><c> according</c><00:49:16.839><c> to</c>

00:49:16.950 --> 00:49:16.960 align:start position:0%
sequence but now of course according to
 

00:49:16.960 --> 00:49:19.549 align:start position:0%
sequence but now of course according to
the<00:49:17.079><c> merges</c><00:49:17.520><c> dictionary</c><00:49:18.079><c> above</c><00:49:19.040><c> and</c><00:49:19.160><c> recall</c>

00:49:19.549 --> 00:49:19.559 align:start position:0%
the merges dictionary above and recall
 

00:49:19.559 --> 00:49:21.069 align:start position:0%
the merges dictionary above and recall
this<00:49:19.680><c> was</c><00:49:19.839><c> the</c>

00:49:21.069 --> 00:49:21.079 align:start position:0%
this was the
 

00:49:21.079 --> 00:49:23.950 align:start position:0%
this was the
merges<00:49:22.079><c> some</c><00:49:22.240><c> of</c><00:49:22.359><c> the</c><00:49:22.480><c> bytes</c><00:49:22.760><c> may</c><00:49:22.920><c> be</c><00:49:23.079><c> merged</c>

00:49:23.950 --> 00:49:23.960 align:start position:0%
merges some of the bytes may be merged
 

00:49:23.960 --> 00:49:26.549 align:start position:0%
merges some of the bytes may be merged
according<00:49:24.319><c> to</c><00:49:24.559><c> this</c><00:49:24.880><c> lookup</c><00:49:25.960><c> in</c><00:49:26.119><c> addition</c><00:49:26.400><c> to</c>

00:49:26.549 --> 00:49:26.559 align:start position:0%
according to this lookup in addition to
 

00:49:26.559 --> 00:49:28.150 align:start position:0%
according to this lookup in addition to
that<00:49:26.760><c> remember</c><00:49:27.119><c> that</c><00:49:27.240><c> the</c><00:49:27.359><c> merges</c><00:49:27.760><c> was</c><00:49:27.920><c> built</c>

00:49:28.150 --> 00:49:28.160 align:start position:0%
that remember that the merges was built
 

00:49:28.160 --> 00:49:29.910 align:start position:0%
that remember that the merges was built
from<00:49:28.359><c> top</c><00:49:28.559><c> to</c><00:49:28.720><c> bottom</c><00:49:29.319><c> and</c><00:49:29.440><c> this</c><00:49:29.520><c> is</c><00:49:29.640><c> sort</c><00:49:29.799><c> of</c>

00:49:29.910 --> 00:49:29.920 align:start position:0%
from top to bottom and this is sort of
 

00:49:29.920 --> 00:49:31.349 align:start position:0%
from top to bottom and this is sort of
the<00:49:30.000><c> order</c><00:49:30.280><c> in</c><00:49:30.400><c> which</c><00:49:30.559><c> we</c><00:49:30.680><c> inserted</c><00:49:31.160><c> stuff</c>

00:49:31.349 --> 00:49:31.359 align:start position:0%
the order in which we inserted stuff
 

00:49:31.359 --> 00:49:34.270 align:start position:0%
the order in which we inserted stuff
into<00:49:31.599><c> merges</c><00:49:32.599><c> and</c><00:49:32.720><c> so</c><00:49:32.920><c> we</c><00:49:33.119><c> prefer</c><00:49:33.559><c> to</c><00:49:33.799><c> do</c><00:49:34.079><c> all</c>

00:49:34.270 --> 00:49:34.280 align:start position:0%
into merges and so we prefer to do all
 

00:49:34.280 --> 00:49:36.109 align:start position:0%
into merges and so we prefer to do all
these<00:49:34.440><c> merges</c><00:49:34.799><c> in</c><00:49:34.880><c> the</c><00:49:35.040><c> beginning</c><00:49:35.720><c> before</c><00:49:35.960><c> we</c>

00:49:36.109 --> 00:49:36.119 align:start position:0%
these merges in the beginning before we
 

00:49:36.119 --> 00:49:39.190 align:start position:0%
these merges in the beginning before we
do<00:49:36.319><c> these</c><00:49:36.520><c> merges</c><00:49:36.920><c> later</c><00:49:37.880><c> because</c><00:49:38.640><c> um</c><00:49:39.040><c> for</c>

00:49:39.190 --> 00:49:39.200 align:start position:0%
do these merges later because um for
 

00:49:39.200 --> 00:49:40.950 align:start position:0%
do these merges later because um for
example<00:49:39.520><c> this</c><00:49:39.640><c> merge</c><00:49:39.960><c> over</c><00:49:40.160><c> here</c><00:49:40.400><c> relies</c><00:49:40.799><c> on</c>

00:49:40.950 --> 00:49:40.960 align:start position:0%
example this merge over here relies on
 

00:49:40.960 --> 00:49:44.630 align:start position:0%
example this merge over here relies on
the<00:49:41.280><c> 256</c><00:49:42.160><c> which</c><00:49:42.520><c> got</c><00:49:42.720><c> merged</c><00:49:43.200><c> here</c><00:49:44.119><c> so</c><00:49:44.440><c> we</c><00:49:44.559><c> have</c>

00:49:44.630 --> 00:49:44.640 align:start position:0%
the 256 which got merged here so we have
 

00:49:44.640 --> 00:49:46.910 align:start position:0%
the 256 which got merged here so we have
to<00:49:44.799><c> go</c><00:49:44.960><c> in</c><00:49:45.119><c> the</c><00:49:45.240><c> order</c><00:49:45.799><c> from</c><00:49:46.319><c> top</c><00:49:46.480><c> to</c><00:49:46.640><c> bottom</c>

00:49:46.910 --> 00:49:46.920 align:start position:0%
to go in the order from top to bottom
 

00:49:46.920 --> 00:49:48.910 align:start position:0%
to go in the order from top to bottom
sort<00:49:47.079><c> of</c><00:49:47.280><c> if</c><00:49:47.359><c> we</c><00:49:47.440><c> are</c><00:49:47.559><c> going</c><00:49:47.720><c> to</c><00:49:47.799><c> be</c><00:49:47.920><c> merging</c>

00:49:48.910 --> 00:49:48.920 align:start position:0%
sort of if we are going to be merging
 

00:49:48.920 --> 00:49:51.430 align:start position:0%
sort of if we are going to be merging
anything<00:49:49.920><c> now</c><00:49:50.079><c> we</c><00:49:50.240><c> expect</c><00:49:50.440><c> to</c><00:49:50.520><c> be</c><00:49:50.640><c> doing</c><00:49:51.160><c> a</c><00:49:51.240><c> few</c>

00:49:51.430 --> 00:49:51.440 align:start position:0%
anything now we expect to be doing a few
 

00:49:51.440 --> 00:49:54.510 align:start position:0%
anything now we expect to be doing a few
merges<00:49:52.160><c> so</c><00:49:52.359><c> we're</c><00:49:52.520><c> going</c><00:49:52.599><c> to</c><00:49:52.720><c> be</c><00:49:52.839><c> doing</c><00:49:53.040><c> W</c>

00:49:54.510 --> 00:49:54.520 align:start position:0%
merges so we're going to be doing W
 

00:49:54.520 --> 00:49:58.069 align:start position:0%
merges so we're going to be doing W
true<00:49:55.920><c> um</c><00:49:56.200><c> and</c><00:49:56.359><c> now</c><00:49:56.640><c> we</c><00:49:56.760><c> want</c><00:49:56.880><c> to</c><00:49:57.119><c> find</c><00:49:57.640><c> a</c><00:49:57.839><c> pair</c>

00:49:58.069 --> 00:49:58.079 align:start position:0%
true um and now we want to find a pair
 

00:49:58.079 --> 00:50:00.710 align:start position:0%
true um and now we want to find a pair
of<00:49:58.280><c> byes</c><00:49:58.880><c> that</c><00:49:58.960><c> is</c><00:49:59.200><c> consecutive</c><00:50:00.200><c> that</c><00:50:00.359><c> we</c><00:50:00.520><c> are</c>

00:50:00.710 --> 00:50:00.720 align:start position:0%
of byes that is consecutive that we are
 

00:50:00.720 --> 00:50:03.589 align:start position:0%
of byes that is consecutive that we are
allowed<00:50:01.000><c> to</c><00:50:01.160><c> merge</c><00:50:01.640><c> according</c><00:50:01.960><c> to</c><00:50:02.480><c> this</c><00:50:03.480><c> in</c>

00:50:03.589 --> 00:50:03.599 align:start position:0%
allowed to merge according to this in
 

00:50:03.599 --> 00:50:04.990 align:start position:0%
allowed to merge according to this in
order<00:50:03.760><c> to</c><00:50:03.920><c> reuse</c><00:50:04.240><c> some</c><00:50:04.319><c> of</c><00:50:04.400><c> the</c><00:50:04.520><c> functionality</c>

00:50:04.990 --> 00:50:05.000 align:start position:0%
order to reuse some of the functionality
 

00:50:05.000 --> 00:50:06.549 align:start position:0%
order to reuse some of the functionality
that<00:50:05.119><c> we've</c><00:50:05.359><c> already</c><00:50:05.640><c> written</c><00:50:06.119><c> I'm</c><00:50:06.240><c> going</c><00:50:06.359><c> to</c>

00:50:06.549 --> 00:50:06.559 align:start position:0%
that we've already written I'm going to
 

00:50:06.559 --> 00:50:09.069 align:start position:0%
that we've already written I'm going to
reuse<00:50:07.000><c> the</c><00:50:07.119><c> function</c><00:50:07.880><c> uh</c><00:50:08.040><c> get</c>

00:50:09.069 --> 00:50:09.079 align:start position:0%
reuse the function uh get
 

00:50:09.079 --> 00:50:12.069 align:start position:0%
reuse the function uh get
stats<00:50:10.079><c> so</c><00:50:10.280><c> recall</c><00:50:10.599><c> that</c><00:50:10.799><c> get</c><00:50:11.000><c> stats</c><00:50:11.720><c> uh</c><00:50:11.799><c> will</c>

00:50:12.069 --> 00:50:12.079 align:start position:0%
stats so recall that get stats uh will
 

00:50:12.079 --> 00:50:14.230 align:start position:0%
stats so recall that get stats uh will
give<00:50:12.240><c> us</c><00:50:12.680><c> the</c><00:50:12.920><c> we'll</c><00:50:13.119><c> basically</c><00:50:13.480><c> count</c><00:50:13.799><c> up</c><00:50:14.119><c> how</c>

00:50:14.230 --> 00:50:14.240 align:start position:0%
give us the we'll basically count up how
 

00:50:14.240 --> 00:50:16.589 align:start position:0%
give us the we'll basically count up how
many<00:50:14.440><c> times</c><00:50:14.760><c> every</c><00:50:14.960><c> single</c><00:50:15.319><c> pair</c><00:50:16.000><c> occurs</c><00:50:16.480><c> in</c>

00:50:16.589 --> 00:50:16.599 align:start position:0%
many times every single pair occurs in
 

00:50:16.599 --> 00:50:18.910 align:start position:0%
many times every single pair occurs in
our<00:50:16.799><c> sequence</c><00:50:17.119><c> of</c><00:50:17.280><c> tokens</c><00:50:18.280><c> and</c><00:50:18.559><c> return</c><00:50:18.799><c> that</c>

00:50:18.910 --> 00:50:18.920 align:start position:0%
our sequence of tokens and return that
 

00:50:18.920 --> 00:50:22.069 align:start position:0%
our sequence of tokens and return that
as<00:50:19.040><c> a</c><00:50:19.359><c> dictionary</c><00:50:20.359><c> and</c><00:50:20.520><c> the</c><00:50:20.640><c> dictionary</c><00:50:21.079><c> was</c><00:50:21.240><c> a</c>

00:50:22.069 --> 00:50:22.079 align:start position:0%
as a dictionary and the dictionary was a
 

00:50:22.079 --> 00:50:25.589 align:start position:0%
as a dictionary and the dictionary was a
mapping<00:50:23.079><c> from</c><00:50:23.680><c> all</c><00:50:23.880><c> the</c><00:50:24.079><c> different</c><00:50:24.920><c> uh</c><00:50:25.119><c> by</c>

00:50:25.589 --> 00:50:25.599 align:start position:0%
mapping from all the different uh by
 

00:50:25.599 --> 00:50:27.390 align:start position:0%
mapping from all the different uh by
pairs<00:50:26.240><c> to</c><00:50:26.480><c> the</c><00:50:26.599><c> number</c><00:50:26.799><c> of</c><00:50:26.920><c> times</c><00:50:27.119><c> that</c><00:50:27.280><c> they</c>

00:50:27.390 --> 00:50:27.400 align:start position:0%
pairs to the number of times that they
 

00:50:27.400 --> 00:50:30.270 align:start position:0%
pairs to the number of times that they
occur<00:50:28.200><c> right</c><00:50:29.200><c> um</c><00:50:29.559><c> at</c><00:50:29.680><c> this</c><00:50:29.799><c> point</c><00:50:30.000><c> we</c><00:50:30.119><c> don't</c>

00:50:30.270 --> 00:50:30.280 align:start position:0%
occur right um at this point we don't
 

00:50:30.280 --> 00:50:32.349 align:start position:0%
occur right um at this point we don't
actually<00:50:30.520><c> care</c><00:50:30.760><c> how</c><00:50:30.880><c> many</c><00:50:31.119><c> times</c><00:50:31.799><c> they</c><00:50:31.920><c> occur</c>

00:50:32.349 --> 00:50:32.359 align:start position:0%
actually care how many times they occur
 

00:50:32.359 --> 00:50:34.349 align:start position:0%
actually care how many times they occur
in<00:50:32.480><c> the</c><00:50:32.599><c> sequence</c><00:50:32.960><c> we</c><00:50:33.079><c> only</c><00:50:33.280><c> care</c><00:50:33.920><c> what</c><00:50:34.119><c> the</c>

00:50:34.349 --> 00:50:34.359 align:start position:0%
in the sequence we only care what the
 

00:50:34.359 --> 00:50:36.829 align:start position:0%
in the sequence we only care what the
raw<00:50:34.760><c> pairs</c><00:50:35.200><c> are</c><00:50:35.520><c> in</c><00:50:35.680><c> that</c><00:50:35.839><c> sequence</c><00:50:36.599><c> and</c><00:50:36.680><c> so</c>

00:50:36.829 --> 00:50:36.839 align:start position:0%
raw pairs are in that sequence and so
 

00:50:36.839 --> 00:50:38.270 align:start position:0%
raw pairs are in that sequence and so
I'm<00:50:36.960><c> only</c><00:50:37.119><c> going</c><00:50:37.200><c> to</c><00:50:37.319><c> be</c><00:50:37.400><c> using</c><00:50:37.680><c> basically</c><00:50:38.079><c> the</c>

00:50:38.270 --> 00:50:38.280 align:start position:0%
I'm only going to be using basically the
 

00:50:38.280 --> 00:50:40.430 align:start position:0%
I'm only going to be using basically the
keys<00:50:38.720><c> of</c><00:50:38.880><c> the</c><00:50:39.079><c> dictionary</c><00:50:39.720><c> I</c><00:50:39.839><c> only</c><00:50:40.000><c> care</c><00:50:40.200><c> about</c>

00:50:40.430 --> 00:50:40.440 align:start position:0%
keys of the dictionary I only care about
 

00:50:40.440 --> 00:50:42.910 align:start position:0%
keys of the dictionary I only care about
the<00:50:40.640><c> set</c><00:50:40.920><c> of</c><00:50:41.200><c> possible</c><00:50:41.720><c> merge</c><00:50:42.160><c> candidates</c><00:50:42.799><c> if</c>

00:50:42.910 --> 00:50:42.920 align:start position:0%
the set of possible merge candidates if
 

00:50:42.920 --> 00:50:43.750 align:start position:0%
the set of possible merge candidates if
that<00:50:43.040><c> makes</c>

00:50:43.750 --> 00:50:43.760 align:start position:0%
that makes
 

00:50:43.760 --> 00:50:46.150 align:start position:0%
that makes
sense<00:50:44.760><c> now</c><00:50:44.880><c> we</c><00:50:45.000><c> want</c><00:50:45.079><c> to</c><00:50:45.240><c> identify</c><00:50:45.680><c> the</c><00:50:45.839><c> pair</c>

00:50:46.150 --> 00:50:46.160 align:start position:0%
sense now we want to identify the pair
 

00:50:46.160 --> 00:50:47.710 align:start position:0%
sense now we want to identify the pair
that<00:50:46.280><c> we're</c><00:50:46.400><c> going</c><00:50:46.520><c> to</c><00:50:46.640><c> be</c><00:50:46.760><c> merging</c><00:50:47.359><c> at</c><00:50:47.559><c> this</c>

00:50:47.710 --> 00:50:47.720 align:start position:0%
that we're going to be merging at this
 

00:50:47.720 --> 00:50:50.230 align:start position:0%
that we're going to be merging at this
stage<00:50:48.040><c> of</c><00:50:48.160><c> the</c><00:50:48.319><c> loop</c><00:50:49.319><c> so</c><00:50:49.599><c> what</c><00:50:49.680><c> do</c><00:50:49.799><c> we</c><00:50:49.920><c> want</c><00:50:50.119><c> we</c>

00:50:50.230 --> 00:50:50.240 align:start position:0%
stage of the loop so what do we want we
 

00:50:50.240 --> 00:50:53.230 align:start position:0%
stage of the loop so what do we want we
want<00:50:50.359><c> to</c><00:50:50.559><c> find</c><00:50:51.240><c> the</c><00:50:51.400><c> pair</c><00:50:52.040><c> or</c><00:50:52.319><c> like</c><00:50:52.559><c> the</c><00:50:52.760><c> a</c><00:50:52.920><c> key</c>

00:50:53.230 --> 00:50:53.240 align:start position:0%
want to find the pair or like the a key
 

00:50:53.240 --> 00:50:57.069 align:start position:0%
want to find the pair or like the a key
inside<00:50:53.760><c> stats</c><00:50:54.760><c> that</c><00:50:54.960><c> has</c><00:50:55.160><c> the</c><00:50:55.559><c> lowest</c><00:50:56.160><c> index</c>

00:50:57.069 --> 00:50:57.079 align:start position:0%
inside stats that has the lowest index
 

00:50:57.079 --> 00:50:59.630 align:start position:0%
inside stats that has the lowest index
in<00:50:57.200><c> the</c><00:50:57.319><c> merges</c><00:50:58.240><c> uh</c><00:50:58.359><c> dictionary</c><00:50:59.319><c> because</c><00:50:59.520><c> we</c>

00:50:59.630 --> 00:50:59.640 align:start position:0%
in the merges uh dictionary because we
 

00:50:59.640 --> 00:51:01.270 align:start position:0%
in the merges uh dictionary because we
want<00:50:59.720><c> to</c><00:50:59.839><c> do</c><00:50:59.960><c> all</c><00:51:00.160><c> the</c><00:51:00.280><c> early</c><00:51:00.559><c> merges</c><00:51:01.040><c> before</c>

00:51:01.270 --> 00:51:01.280 align:start position:0%
want to do all the early merges before
 

00:51:01.280 --> 00:51:03.069 align:start position:0%
want to do all the early merges before
we<00:51:01.440><c> work</c><00:51:01.640><c> our</c><00:51:01.799><c> way</c><00:51:01.960><c> to</c><00:51:02.160><c> the</c><00:51:02.359><c> late</c>

00:51:03.069 --> 00:51:03.079 align:start position:0%
we work our way to the late
 

00:51:03.079 --> 00:51:05.309 align:start position:0%
we work our way to the late
merges<00:51:04.079><c> so</c><00:51:04.480><c> again</c><00:51:04.640><c> there</c><00:51:04.760><c> are</c><00:51:04.880><c> many</c><00:51:05.079><c> different</c>

00:51:05.309 --> 00:51:05.319 align:start position:0%
merges so again there are many different
 

00:51:05.319 --> 00:51:07.710 align:start position:0%
merges so again there are many different
ways<00:51:05.480><c> to</c><00:51:05.640><c> implement</c><00:51:06.040><c> this</c><00:51:06.280><c> but</c><00:51:06.559><c> I'm</c><00:51:06.720><c> going</c><00:51:06.920><c> to</c>

00:51:07.710 --> 00:51:07.720 align:start position:0%
ways to implement this but I'm going to
 

00:51:07.720 --> 00:51:11.270 align:start position:0%
ways to implement this but I'm going to
do<00:51:08.040><c> something</c><00:51:09.040><c> a</c><00:51:09.160><c> little</c><00:51:09.319><c> bit</c><00:51:09.520><c> fancy</c>

00:51:11.270 --> 00:51:11.280 align:start position:0%
do something a little bit fancy
 

00:51:11.280 --> 00:51:14.190 align:start position:0%
do something a little bit fancy
here<00:51:12.280><c> so</c><00:51:12.520><c> I'm</c><00:51:12.640><c> going</c><00:51:12.760><c> to</c><00:51:12.880><c> be</c><00:51:13.000><c> using</c><00:51:13.319><c> the</c><00:51:13.520><c> Min</c>

00:51:14.190 --> 00:51:14.200 align:start position:0%
here so I'm going to be using the Min
 

00:51:14.200 --> 00:51:16.789 align:start position:0%
here so I'm going to be using the Min
over<00:51:14.440><c> an</c><00:51:14.880><c> iterator</c><00:51:15.880><c> in</c><00:51:16.040><c> Python</c><00:51:16.400><c> when</c><00:51:16.480><c> you</c><00:51:16.599><c> call</c>

00:51:16.789 --> 00:51:16.799 align:start position:0%
over an iterator in Python when you call
 

00:51:16.799 --> 00:51:18.950 align:start position:0%
over an iterator in Python when you call
Min<00:51:17.040><c> on</c><00:51:17.160><c> an</c><00:51:17.319><c> iterator</c><00:51:18.119><c> and</c><00:51:18.280><c> stats</c><00:51:18.599><c> here</c><00:51:18.720><c> as</c><00:51:18.839><c> a</c>

00:51:18.950 --> 00:51:18.960 align:start position:0%
Min on an iterator and stats here as a
 

00:51:18.960 --> 00:51:20.829 align:start position:0%
Min on an iterator and stats here as a
dictionary<00:51:19.760><c> we're</c><00:51:19.960><c> going</c><00:51:20.079><c> to</c><00:51:20.160><c> be</c><00:51:20.280><c> iterating</c>

00:51:20.829 --> 00:51:20.839 align:start position:0%
dictionary we're going to be iterating
 

00:51:20.839 --> 00:51:24.109 align:start position:0%
dictionary we're going to be iterating
the<00:51:21.000><c> keys</c><00:51:21.280><c> of</c><00:51:21.480><c> this</c><00:51:21.680><c> dictionary</c><00:51:22.319><c> in</c><00:51:22.520><c> Python</c><00:51:23.520><c> so</c>

00:51:24.109 --> 00:51:24.119 align:start position:0%
the keys of this dictionary in Python so
 

00:51:24.119 --> 00:51:27.069 align:start position:0%
the keys of this dictionary in Python so
we're<00:51:24.359><c> looking</c><00:51:24.599><c> at</c><00:51:24.839><c> all</c><00:51:25.000><c> the</c><00:51:25.440><c> pairs</c><00:51:25.799><c> inside</c>

00:51:27.069 --> 00:51:27.079 align:start position:0%
we're looking at all the pairs inside
 

00:51:27.079 --> 00:51:29.349 align:start position:0%
we're looking at all the pairs inside
stats<00:51:28.079><c> um</c><00:51:28.359><c> which</c><00:51:28.480><c> are</c><00:51:28.640><c> all</c><00:51:28.760><c> the</c><00:51:28.880><c> consecutive</c>

00:51:29.349 --> 00:51:29.359 align:start position:0%
stats um which are all the consecutive
 

00:51:29.359 --> 00:51:32.069 align:start position:0%
stats um which are all the consecutive
Pairs<00:51:30.359><c> and</c><00:51:30.480><c> we're</c><00:51:30.599><c> going</c><00:51:30.720><c> to</c><00:51:30.880><c> be</c><00:51:31.160><c> taking</c><00:51:31.559><c> the</c>

00:51:32.069 --> 00:51:32.079 align:start position:0%
Pairs and we're going to be taking the
 

00:51:32.079 --> 00:51:34.430 align:start position:0%
Pairs and we're going to be taking the
consecutive<00:51:32.599><c> pair</c><00:51:33.040><c> inside</c><00:51:33.400><c> tokens</c><00:51:34.160><c> that</c><00:51:34.280><c> has</c>

00:51:34.430 --> 00:51:34.440 align:start position:0%
consecutive pair inside tokens that has
 

00:51:34.440 --> 00:51:38.870 align:start position:0%
consecutive pair inside tokens that has
the<00:51:34.680><c> minimum</c><00:51:36.040><c> what</c><00:51:37.040><c> the</c><00:51:37.160><c> Min</c><00:51:37.480><c> takes</c><00:51:37.839><c> a</c><00:51:38.079><c> key</c>

00:51:38.870 --> 00:51:38.880 align:start position:0%
the minimum what the Min takes a key
 

00:51:38.880 --> 00:51:40.309 align:start position:0%
the minimum what the Min takes a key
which<00:51:39.040><c> gives</c><00:51:39.200><c> us</c><00:51:39.359><c> the</c><00:51:39.520><c> function</c><00:51:40.079><c> that</c><00:51:40.200><c> is</c>

00:51:40.309 --> 00:51:40.319 align:start position:0%
which gives us the function that is
 

00:51:40.319 --> 00:51:42.349 align:start position:0%
which gives us the function that is
going<00:51:40.440><c> to</c><00:51:40.680><c> return</c><00:51:40.880><c> a</c><00:51:41.040><c> value</c><00:51:41.839><c> over</c><00:51:42.079><c> which</c><00:51:42.200><c> we're</c>

00:51:42.349 --> 00:51:42.359 align:start position:0%
going to return a value over which we're
 

00:51:42.359 --> 00:51:44.950 align:start position:0%
going to return a value over which we're
going<00:51:42.440><c> to</c><00:51:42.559><c> do</c><00:51:42.680><c> the</c><00:51:43.160><c> Min</c><00:51:44.160><c> and</c><00:51:44.359><c> the</c><00:51:44.480><c> one</c><00:51:44.640><c> we</c><00:51:44.760><c> care</c>

00:51:44.950 --> 00:51:44.960 align:start position:0%
going to do the Min and the one we care
 

00:51:44.960 --> 00:51:46.430 align:start position:0%
going to do the Min and the one we care
about<00:51:45.200><c> is</c><00:51:45.440><c> we're</c><00:51:45.720><c> we</c><00:51:45.880><c> care</c><00:51:46.040><c> about</c><00:51:46.200><c> taking</c>

00:51:46.430 --> 00:51:46.440 align:start position:0%
about is we're we care about taking
 

00:51:46.440 --> 00:51:50.910 align:start position:0%
about is we're we care about taking
merges<00:51:47.319><c> and</c><00:51:47.520><c> basically</c><00:51:48.240><c> getting</c><00:51:49.440><c> um</c><00:51:50.440><c> that</c>

00:51:50.910 --> 00:51:50.920 align:start position:0%
merges and basically getting um that
 

00:51:50.920 --> 00:51:52.829 align:start position:0%
merges and basically getting um that
pairs

00:51:52.829 --> 00:51:52.839 align:start position:0%
pairs
 

00:51:52.839 --> 00:51:57.150 align:start position:0%
pairs
index<00:51:53.880><c> so</c><00:51:54.880><c> basically</c><00:51:55.520><c> for</c><00:51:55.760><c> any</c><00:51:56.040><c> pair</c><00:51:56.640><c> inside</c>

00:51:57.150 --> 00:51:57.160 align:start position:0%
index so basically for any pair inside
 

00:51:57.160 --> 00:51:59.710 align:start position:0%
index so basically for any pair inside
stats<00:51:58.160><c> we</c><00:51:58.280><c> are</c><00:51:58.440><c> going</c><00:51:58.599><c> to</c><00:51:58.760><c> be</c><00:51:59.040><c> looking</c><00:51:59.280><c> into</c>

00:51:59.710 --> 00:51:59.720 align:start position:0%
stats we are going to be looking into
 

00:51:59.720 --> 00:52:03.069 align:start position:0%
stats we are going to be looking into
merges<00:52:00.720><c> at</c><00:52:00.920><c> what</c><00:52:01.079><c> index</c><00:52:01.440><c> it</c><00:52:01.680><c> has</c><00:52:02.680><c> and</c><00:52:02.799><c> we</c><00:52:02.920><c> want</c>

00:52:03.069 --> 00:52:03.079 align:start position:0%
merges at what index it has and we want
 

00:52:03.079 --> 00:52:05.829 align:start position:0%
merges at what index it has and we want
to<00:52:03.319><c> get</c><00:52:03.520><c> the</c><00:52:03.680><c> pair</c><00:52:03.960><c> with</c><00:52:04.079><c> the</c><00:52:04.240><c> Min</c><00:52:04.880><c> number</c><00:52:05.640><c> so</c>

00:52:05.829 --> 00:52:05.839 align:start position:0%
to get the pair with the Min number so
 

00:52:05.839 --> 00:52:07.549 align:start position:0%
to get the pair with the Min number so
as<00:52:05.920><c> an</c><00:52:06.079><c> example</c><00:52:06.359><c> if</c><00:52:06.480><c> there's</c><00:52:06.640><c> a</c><00:52:06.799><c> pair</c><00:52:07.000><c> 101</c><00:52:07.400><c> and</c>

00:52:07.549 --> 00:52:07.559 align:start position:0%
as an example if there's a pair 101 and
 

00:52:07.559 --> 00:52:10.430 align:start position:0%
as an example if there's a pair 101 and
32<00:52:08.280><c> we</c><00:52:08.440><c> definitely</c><00:52:08.880><c> want</c><00:52:09.000><c> to</c><00:52:09.200><c> get</c><00:52:09.400><c> that</c><00:52:09.599><c> pair</c>

00:52:10.430 --> 00:52:10.440 align:start position:0%
32 we definitely want to get that pair
 

00:52:10.440 --> 00:52:11.910 align:start position:0%
32 we definitely want to get that pair
uh<00:52:10.520><c> we</c><00:52:10.640><c> want</c><00:52:10.760><c> to</c><00:52:10.880><c> identify</c><00:52:11.319><c> it</c><00:52:11.480><c> here</c><00:52:11.640><c> and</c>

00:52:11.910 --> 00:52:11.920 align:start position:0%
uh we want to identify it here and
 

00:52:11.920 --> 00:52:15.030 align:start position:0%
uh we want to identify it here and
return<00:52:12.079><c> it</c><00:52:12.480><c> and</c><00:52:12.680><c> pair</c><00:52:12.920><c> would</c><00:52:13.160><c> become</c><00:52:13.920><c> 10132</c><00:52:14.920><c> if</c>

00:52:15.030 --> 00:52:15.040 align:start position:0%
return it and pair would become 10132 if
 

00:52:15.040 --> 00:52:15.750 align:start position:0%
return it and pair would become 10132 if
it

00:52:15.750 --> 00:52:15.760 align:start position:0%
it
 

00:52:15.760 --> 00:52:17.950 align:start position:0%
it
occurs<00:52:16.760><c> and</c><00:52:16.880><c> the</c><00:52:17.000><c> reason</c><00:52:17.359><c> that</c><00:52:17.520><c> I'm</c><00:52:17.640><c> putting</c><00:52:17.839><c> a</c>

00:52:17.950 --> 00:52:17.960 align:start position:0%
occurs and the reason that I'm putting a
 

00:52:17.960 --> 00:52:21.390 align:start position:0%
occurs and the reason that I'm putting a
float<00:52:18.280><c> INF</c><00:52:18.680><c> here</c><00:52:19.079><c> as</c><00:52:19.200><c> a</c><00:52:19.400><c> fall</c><00:52:19.839><c> back</c><00:52:20.839><c> is</c><00:52:21.040><c> that</c><00:52:21.280><c> in</c>

00:52:21.390 --> 00:52:21.400 align:start position:0%
float INF here as a fall back is that in
 

00:52:21.400 --> 00:52:24.190 align:start position:0%
float INF here as a fall back is that in
the<00:52:21.599><c> get</c><00:52:21.799><c> function</c><00:52:22.119><c> when</c><00:52:22.240><c> we</c><00:52:22.400><c> call</c><00:52:23.119><c> uh</c><00:52:23.839><c> when</c><00:52:24.000><c> we</c>

00:52:24.190 --> 00:52:24.200 align:start position:0%
the get function when we call uh when we
 

00:52:24.200 --> 00:52:26.589 align:start position:0%
the get function when we call uh when we
basically<00:52:24.599><c> consider</c><00:52:25.040><c> a</c><00:52:25.359><c> pair</c><00:52:26.160><c> that</c><00:52:26.319><c> doesn't</c>

00:52:26.589 --> 00:52:26.599 align:start position:0%
basically consider a pair that doesn't
 

00:52:26.599 --> 00:52:28.990 align:start position:0%
basically consider a pair that doesn't
occur<00:52:26.880><c> in</c><00:52:27.000><c> the</c><00:52:27.359><c> merges</c><00:52:28.359><c> then</c><00:52:28.520><c> that</c><00:52:28.680><c> pair</c><00:52:28.880><c> is</c>

00:52:28.990 --> 00:52:29.000 align:start position:0%
occur in the merges then that pair is
 

00:52:29.000 --> 00:52:31.870 align:start position:0%
occur in the merges then that pair is
not<00:52:29.200><c> eligible</c><00:52:29.680><c> to</c><00:52:29.799><c> be</c><00:52:29.920><c> merged</c><00:52:30.480><c> right</c><00:52:30.760><c> so</c><00:52:31.559><c> if</c><00:52:31.760><c> in</c>

00:52:31.870 --> 00:52:31.880 align:start position:0%
not eligible to be merged right so if in
 

00:52:31.880 --> 00:52:33.470 align:start position:0%
not eligible to be merged right so if in
the<00:52:32.000><c> token</c><00:52:32.280><c> sequence</c><00:52:32.599><c> there's</c><00:52:32.839><c> some</c><00:52:33.040><c> pair</c>

00:52:33.470 --> 00:52:33.480 align:start position:0%
the token sequence there's some pair
 

00:52:33.480 --> 00:52:35.549 align:start position:0%
the token sequence there's some pair
that<00:52:33.599><c> is</c><00:52:33.799><c> not</c><00:52:34.160><c> a</c><00:52:34.319><c> merging</c><00:52:34.720><c> pair</c><00:52:35.079><c> it</c><00:52:35.200><c> cannot</c><00:52:35.440><c> be</c>

00:52:35.549 --> 00:52:35.559 align:start position:0%
that is not a merging pair it cannot be
 

00:52:35.559 --> 00:52:38.109 align:start position:0%
that is not a merging pair it cannot be
merged<00:52:36.440><c> then</c><00:52:36.920><c> uh</c><00:52:37.040><c> it</c><00:52:37.160><c> doesn't</c><00:52:37.440><c> actually</c><00:52:37.760><c> occur</c>

00:52:38.109 --> 00:52:38.119 align:start position:0%
merged then uh it doesn't actually occur
 

00:52:38.119 --> 00:52:40.829 align:start position:0%
merged then uh it doesn't actually occur
here<00:52:38.559><c> and</c><00:52:38.680><c> it</c><00:52:38.799><c> doesn't</c><00:52:39.000><c> have</c><00:52:39.119><c> an</c><00:52:39.319><c> index</c><00:52:40.319><c> and</c><00:52:40.720><c> uh</c>

00:52:40.829 --> 00:52:40.839 align:start position:0%
here and it doesn't have an index and uh
 

00:52:40.839 --> 00:52:42.589 align:start position:0%
here and it doesn't have an index and uh
it<00:52:40.920><c> cannot</c><00:52:41.160><c> be</c><00:52:41.319><c> merged</c><00:52:41.799><c> which</c><00:52:41.920><c> we</c><00:52:42.040><c> will</c><00:52:42.240><c> denote</c>

00:52:42.589 --> 00:52:42.599 align:start position:0%
it cannot be merged which we will denote
 

00:52:42.599 --> 00:52:45.069 align:start position:0%
it cannot be merged which we will denote
as<00:52:42.720><c> float</c><00:52:43.079><c> INF</c><00:52:44.040><c> and</c><00:52:44.119><c> the</c><00:52:44.240><c> reason</c><00:52:44.520><c> Infinity</c><00:52:44.920><c> is</c>

00:52:45.069 --> 00:52:45.079 align:start position:0%
as float INF and the reason Infinity is
 

00:52:45.079 --> 00:52:46.589 align:start position:0%
as float INF and the reason Infinity is
nice<00:52:45.319><c> here</c><00:52:45.480><c> is</c><00:52:45.640><c> because</c><00:52:46.000><c> for</c><00:52:46.160><c> sure</c><00:52:46.359><c> we're</c>

00:52:46.589 --> 00:52:46.599 align:start position:0%
nice here is because for sure we're
 

00:52:46.599 --> 00:52:48.069 align:start position:0%
nice here is because for sure we're
guaranteed<00:52:47.359><c> that</c><00:52:47.480><c> it's</c><00:52:47.599><c> not</c><00:52:47.720><c> going</c><00:52:47.880><c> to</c>

00:52:48.069 --> 00:52:48.079 align:start position:0%
guaranteed that it's not going to
 

00:52:48.079 --> 00:52:50.030 align:start position:0%
guaranteed that it's not going to
participate<00:52:48.640><c> in</c><00:52:48.760><c> the</c><00:52:48.880><c> list</c><00:52:49.040><c> of</c><00:52:49.280><c> candidates</c>

00:52:50.030 --> 00:52:50.040 align:start position:0%
participate in the list of candidates
 

00:52:50.040 --> 00:52:53.430 align:start position:0%
participate in the list of candidates
when<00:52:50.200><c> we</c><00:52:50.280><c> do</c><00:52:50.440><c> the</c><00:52:50.960><c> men</c><00:52:51.960><c> so</c><00:52:52.799><c> uh</c><00:52:52.920><c> so</c><00:52:53.079><c> this</c><00:52:53.160><c> is</c><00:52:53.280><c> one</c>

00:52:53.430 --> 00:52:53.440 align:start position:0%
when we do the men so uh so this is one
 

00:52:53.440 --> 00:52:55.870 align:start position:0%
when we do the men so uh so this is one
way<00:52:53.559><c> to</c><00:52:53.680><c> do</c><00:52:53.920><c> it</c><00:52:54.920><c> so</c><00:52:55.079><c> B</c><00:52:55.240><c> basically</c><00:52:55.520><c> long</c><00:52:55.640><c> story</c>

00:52:55.870 --> 00:52:55.880 align:start position:0%
way to do it so B basically long story
 

00:52:55.880 --> 00:52:58.270 align:start position:0%
way to do it so B basically long story
short<00:52:56.319><c> this</c><00:52:56.599><c> Returns</c><00:52:56.920><c> the</c><00:52:57.040><c> most</c><00:52:57.280><c> eligible</c>

00:52:58.270 --> 00:52:58.280 align:start position:0%
short this Returns the most eligible
 

00:52:58.280 --> 00:53:01.109 align:start position:0%
short this Returns the most eligible
merging<00:52:58.760><c> candidate</c><00:52:59.640><c> pair</c><00:53:00.559><c> uh</c><00:53:00.640><c> that</c><00:53:00.760><c> occurs</c><00:53:01.000><c> in</c>

00:53:01.109 --> 00:53:01.119 align:start position:0%
merging candidate pair uh that occurs in
 

00:53:01.119 --> 00:53:04.069 align:start position:0%
merging candidate pair uh that occurs in
the<00:53:01.400><c> tokens</c><00:53:02.400><c> now</c><00:53:03.280><c> one</c><00:53:03.400><c> thing</c><00:53:03.520><c> to</c><00:53:03.640><c> be</c><00:53:03.760><c> careful</c>

00:53:04.069 --> 00:53:04.079 align:start position:0%
the tokens now one thing to be careful
 

00:53:04.079 --> 00:53:07.470 align:start position:0%
the tokens now one thing to be careful
with<00:53:04.319><c> here</c><00:53:04.520><c> is</c><00:53:05.240><c> this</c><00:53:05.799><c> uh</c><00:53:06.040><c> function</c><00:53:06.640><c> here</c><00:53:07.079><c> might</c>

00:53:07.470 --> 00:53:07.480 align:start position:0%
with here is this uh function here might
 

00:53:07.480 --> 00:53:09.870 align:start position:0%
with here is this uh function here might
fail<00:53:08.200><c> in</c><00:53:08.280><c> the</c><00:53:08.440><c> following</c><00:53:08.799><c> way</c><00:53:09.480><c> if</c><00:53:09.599><c> there's</c>

00:53:09.870 --> 00:53:09.880 align:start position:0%
fail in the following way if there's
 

00:53:09.880 --> 00:53:13.589 align:start position:0%
fail in the following way if there's
nothing<00:53:10.160><c> to</c><00:53:10.319><c> merge</c><00:53:11.319><c> then</c><00:53:12.040><c> uh</c><00:53:12.799><c> uh</c><00:53:13.000><c> then</c><00:53:13.319><c> there's</c>

00:53:13.589 --> 00:53:13.599 align:start position:0%
nothing to merge then uh uh then there's
 

00:53:13.599 --> 00:53:16.910 align:start position:0%
nothing to merge then uh uh then there's
nothing<00:53:13.920><c> in</c><00:53:14.200><c> merges</c><00:53:15.200><c> um</c><00:53:15.839><c> that</c><00:53:16.240><c> satisfi</c><00:53:16.799><c> that</c>

00:53:16.910 --> 00:53:16.920 align:start position:0%
nothing in merges um that satisfi that
 

00:53:16.920 --> 00:53:18.549 align:start position:0%
nothing in merges um that satisfi that
is<00:53:17.200><c> satisfied</c><00:53:17.680><c> anymore</c><00:53:18.040><c> there's</c><00:53:18.200><c> nothing</c><00:53:18.400><c> to</c>

00:53:18.549 --> 00:53:18.559 align:start position:0%
is satisfied anymore there's nothing to
 

00:53:18.559 --> 00:53:21.710 align:start position:0%
is satisfied anymore there's nothing to
merge<00:53:19.200><c> everything</c><00:53:19.480><c> just</c><00:53:19.760><c> returns</c><00:53:20.000><c> float</c><00:53:20.720><c> imps</c>

00:53:21.710 --> 00:53:21.720 align:start position:0%
merge everything just returns float imps
 

00:53:21.720 --> 00:53:23.670 align:start position:0%
merge everything just returns float imps
and<00:53:21.920><c> then</c><00:53:22.440><c> the</c><00:53:22.599><c> pair</c><00:53:23.040><c> I</c><00:53:23.160><c> think</c><00:53:23.319><c> will</c><00:53:23.520><c> just</c>

00:53:23.670 --> 00:53:23.680 align:start position:0%
and then the pair I think will just
 

00:53:23.680 --> 00:53:26.950 align:start position:0%
and then the pair I think will just
become<00:53:24.000><c> the</c><00:53:24.160><c> very</c><00:53:24.440><c> first</c><00:53:24.880><c> element</c><00:53:25.599><c> of</c><00:53:25.960><c> stats</c>

00:53:26.950 --> 00:53:26.960 align:start position:0%
become the very first element of stats
 

00:53:26.960 --> 00:53:28.349 align:start position:0%
become the very first element of stats
um<00:53:27.400><c> but</c><00:53:27.559><c> this</c><00:53:27.720><c> pair</c><00:53:27.880><c> is</c><00:53:27.960><c> not</c><00:53:28.119><c> actually</c><00:53:28.280><c> a</c>

00:53:28.349 --> 00:53:28.359 align:start position:0%
um but this pair is not actually a
 

00:53:28.359 --> 00:53:31.150 align:start position:0%
um but this pair is not actually a
mergeable<00:53:28.880><c> pair</c><00:53:29.200><c> it</c><00:53:29.319><c> just</c><00:53:29.520><c> becomes</c><00:53:29.920><c> the</c><00:53:30.160><c> first</c>

00:53:31.150 --> 00:53:31.160 align:start position:0%
mergeable pair it just becomes the first
 

00:53:31.160 --> 00:53:33.270 align:start position:0%
mergeable pair it just becomes the first
pair<00:53:31.400><c> inside</c><00:53:31.720><c> stats</c><00:53:32.000><c> arbitrarily</c><00:53:32.960><c> because</c>

00:53:33.270 --> 00:53:33.280 align:start position:0%
pair inside stats arbitrarily because
 

00:53:33.280 --> 00:53:36.309 align:start position:0%
pair inside stats arbitrarily because
all<00:53:33.400><c> of</c><00:53:33.520><c> these</c><00:53:33.640><c> pairs</c><00:53:34.119><c> evaluate</c><00:53:34.520><c> to</c><00:53:34.640><c> float</c><00:53:35.319><c> in</c>

00:53:36.309 --> 00:53:36.319 align:start position:0%
all of these pairs evaluate to float in
 

00:53:36.319 --> 00:53:38.549 align:start position:0%
all of these pairs evaluate to float in
for<00:53:36.520><c> the</c><00:53:36.640><c> merging</c><00:53:37.119><c> Criterion</c><00:53:38.119><c> so</c><00:53:38.280><c> basically</c>

00:53:38.549 --> 00:53:38.559 align:start position:0%
for the merging Criterion so basically
 

00:53:38.559 --> 00:53:40.349 align:start position:0%
for the merging Criterion so basically
it<00:53:38.680><c> could</c><00:53:38.839><c> be</c><00:53:39.000><c> that</c><00:53:39.200><c> this</c><00:53:39.599><c> this</c><00:53:39.720><c> doesn't</c><00:53:40.040><c> look</c>

00:53:40.349 --> 00:53:40.359 align:start position:0%
it could be that this this doesn't look
 

00:53:40.359 --> 00:53:41.630 align:start position:0%
it could be that this this doesn't look
succeed<00:53:40.720><c> because</c><00:53:40.880><c> there's</c><00:53:41.040><c> no</c><00:53:41.200><c> more</c><00:53:41.319><c> merging</c>

00:53:41.630 --> 00:53:41.640 align:start position:0%
succeed because there's no more merging
 

00:53:41.640 --> 00:53:44.630 align:start position:0%
succeed because there's no more merging
pairs<00:53:42.119><c> so</c><00:53:42.640><c> if</c><00:53:42.799><c> this</c><00:53:42.960><c> pair</c><00:53:43.200><c> is</c><00:53:43.359><c> not</c><00:53:43.559><c> in</c><00:53:43.760><c> merges</c>

00:53:44.630 --> 00:53:44.640 align:start position:0%
pairs so if this pair is not in merges
 

00:53:44.640 --> 00:53:46.829 align:start position:0%
pairs so if this pair is not in merges
that<00:53:44.760><c> was</c><00:53:45.040><c> returned</c><00:53:46.000><c> then</c><00:53:46.119><c> this</c><00:53:46.240><c> is</c><00:53:46.319><c> a</c><00:53:46.480><c> signal</c>

00:53:46.829 --> 00:53:46.839 align:start position:0%
that was returned then this is a signal
 

00:53:46.839 --> 00:53:48.390 align:start position:0%
that was returned then this is a signal
for<00:53:47.000><c> us</c><00:53:47.240><c> that</c><00:53:47.480><c> actually</c><00:53:47.920><c> there</c><00:53:48.040><c> was</c><00:53:48.200><c> nothing</c>

00:53:48.390 --> 00:53:48.400 align:start position:0%
for us that actually there was nothing
 

00:53:48.400 --> 00:53:50.710 align:start position:0%
for us that actually there was nothing
to<00:53:48.599><c> merge</c><00:53:49.440><c> no</c><00:53:49.680><c> single</c><00:53:50.000><c> pair</c><00:53:50.200><c> can</c><00:53:50.319><c> be</c><00:53:50.400><c> merged</c>

00:53:50.710 --> 00:53:50.720 align:start position:0%
to merge no single pair can be merged
 

00:53:50.720 --> 00:53:53.069 align:start position:0%
to merge no single pair can be merged
anymore<00:53:51.400><c> in</c><00:53:51.520><c> that</c><00:53:51.680><c> case</c><00:53:51.839><c> we</c><00:53:51.960><c> will</c><00:53:52.119><c> break</c>

00:53:53.069 --> 00:53:53.079 align:start position:0%
anymore in that case we will break
 

00:53:53.079 --> 00:53:57.870 align:start position:0%
anymore in that case we will break
out<00:53:54.160><c> um</c><00:53:55.160><c> nothing</c><00:53:55.400><c> else</c><00:53:55.559><c> can</c><00:53:55.680><c> be</c>

00:53:57.870 --> 00:53:57.880 align:start position:0%
 
 

00:53:57.880 --> 00:53:59.829 align:start position:0%
 
merged<00:53:58.880><c> you</c><00:53:59.000><c> may</c><00:53:59.240><c> come</c><00:53:59.359><c> up</c><00:53:59.480><c> with</c><00:53:59.559><c> a</c><00:53:59.640><c> different</c>

00:53:59.829 --> 00:53:59.839 align:start position:0%
merged you may come up with a different
 

00:53:59.839 --> 00:54:01.030 align:start position:0%
merged you may come up with a different
implementation<00:54:00.359><c> by</c><00:54:00.480><c> the</c><00:54:00.559><c> way</c><00:54:00.720><c> this</c><00:54:00.799><c> is</c><00:54:00.920><c> kind</c>

00:54:01.030 --> 00:54:01.040 align:start position:0%
implementation by the way this is kind
 

00:54:01.040 --> 00:54:03.870 align:start position:0%
implementation by the way this is kind
of<00:54:01.200><c> like</c><00:54:01.720><c> really</c><00:54:02.280><c> trying</c><00:54:02.680><c> hard</c><00:54:02.839><c> in</c>

00:54:03.870 --> 00:54:03.880 align:start position:0%
of like really trying hard in
 

00:54:03.880 --> 00:54:05.950 align:start position:0%
of like really trying hard in
Python<00:54:04.880><c> um</c><00:54:05.160><c> but</c><00:54:05.319><c> really</c><00:54:05.480><c> we're</c><00:54:05.640><c> just</c><00:54:05.760><c> trying</c>

00:54:05.950 --> 00:54:05.960 align:start position:0%
Python um but really we're just trying
 

00:54:05.960 --> 00:54:07.789 align:start position:0%
Python um but really we're just trying
to<00:54:06.440><c> find</c><00:54:06.599><c> a</c><00:54:06.760><c> pair</c><00:54:07.000><c> that</c><00:54:07.079><c> can</c><00:54:07.200><c> be</c><00:54:07.280><c> merged</c><00:54:07.680><c> with</c>

00:54:07.789 --> 00:54:07.799 align:start position:0%
to find a pair that can be merged with
 

00:54:07.799 --> 00:54:09.589 align:start position:0%
to find a pair that can be merged with
the<00:54:07.960><c> lowest</c><00:54:08.559><c> index</c>

00:54:09.589 --> 00:54:09.599 align:start position:0%
the lowest index
 

00:54:09.599 --> 00:54:13.870 align:start position:0%
the lowest index
here<00:54:10.599><c> now</c><00:54:11.040><c> if</c><00:54:11.240><c> we</c><00:54:11.400><c> did</c><00:54:11.599><c> find</c><00:54:11.799><c> a</c><00:54:12.359><c> pair</c><00:54:13.359><c> that</c><00:54:13.680><c> is</c>

00:54:13.870 --> 00:54:13.880 align:start position:0%
here now if we did find a pair that is
 

00:54:13.880 --> 00:54:16.270 align:start position:0%
here now if we did find a pair that is
inside<00:54:14.200><c> merges</c><00:54:15.200><c> with</c><00:54:15.359><c> the</c><00:54:15.440><c> lowest</c><00:54:15.760><c> index</c><00:54:16.160><c> then</c>

00:54:16.270 --> 00:54:16.280 align:start position:0%
inside merges with the lowest index then
 

00:54:16.280 --> 00:54:19.829 align:start position:0%
inside merges with the lowest index then
we<00:54:16.400><c> can</c><00:54:16.520><c> merge</c><00:54:16.799><c> it</c>

00:54:19.829 --> 00:54:19.839 align:start position:0%
 
 

00:54:19.839 --> 00:54:22.030 align:start position:0%
 
so<00:54:20.839><c> we're</c><00:54:21.040><c> going</c><00:54:21.160><c> to</c><00:54:21.280><c> look</c><00:54:21.480><c> into</c><00:54:21.640><c> the</c><00:54:21.720><c> merger</c>

00:54:22.030 --> 00:54:22.040 align:start position:0%
so we're going to look into the merger
 

00:54:22.040 --> 00:54:24.270 align:start position:0%
so we're going to look into the merger
dictionary<00:54:22.400><c> for</c><00:54:22.559><c> that</c><00:54:22.720><c> pair</c><00:54:22.960><c> to</c><00:54:23.079><c> look</c><00:54:23.240><c> up</c><00:54:23.480><c> the</c>

00:54:24.270 --> 00:54:24.280 align:start position:0%
dictionary for that pair to look up the
 

00:54:24.280 --> 00:54:27.270 align:start position:0%
dictionary for that pair to look up the
index<00:54:25.200><c> and</c><00:54:25.319><c> we're</c><00:54:25.480><c> going</c><00:54:25.640><c> to</c><00:54:25.760><c> now</c><00:54:25.960><c> merge</c><00:54:26.839><c> that</c>

00:54:27.270 --> 00:54:27.280 align:start position:0%
index and we're going to now merge that
 

00:54:27.280 --> 00:54:29.230 align:start position:0%
index and we're going to now merge that
into<00:54:27.520><c> that</c><00:54:27.680><c> index</c><00:54:28.559><c> so</c><00:54:28.720><c> we're</c><00:54:28.839><c> going</c><00:54:28.960><c> to</c><00:54:29.079><c> do</c>

00:54:29.230 --> 00:54:29.240 align:start position:0%
into that index so we're going to do
 

00:54:29.240 --> 00:54:32.230 align:start position:0%
into that index so we're going to do
tokens<00:54:29.559><c> equals</c><00:54:30.119><c> and</c><00:54:30.240><c> we're</c><00:54:30.359><c> going</c><00:54:30.480><c> to</c>

00:54:32.230 --> 00:54:32.240 align:start position:0%
tokens equals and we're going to
 

00:54:32.240 --> 00:54:34.630 align:start position:0%
tokens equals and we're going to
replace<00:54:33.240><c> the</c><00:54:33.319><c> original</c><00:54:33.680><c> tokens</c><00:54:34.359><c> we're</c><00:54:34.480><c> going</c>

00:54:34.630 --> 00:54:34.640 align:start position:0%
replace the original tokens we're going
 

00:54:34.640 --> 00:54:36.750 align:start position:0%
replace the original tokens we're going
to<00:54:34.720><c> be</c><00:54:34.880><c> replacing</c><00:54:35.359><c> the</c><00:54:35.520><c> pair</c><00:54:35.880><c> pair</c><00:54:36.520><c> and</c><00:54:36.640><c> we're</c>

00:54:36.750 --> 00:54:36.760 align:start position:0%
to be replacing the pair pair and we're
 

00:54:36.760 --> 00:54:38.950 align:start position:0%
to be replacing the pair pair and we're
going<00:54:36.839><c> to</c><00:54:36.960><c> be</c><00:54:37.119><c> replacing</c><00:54:37.480><c> it</c><00:54:37.599><c> with</c><00:54:37.720><c> index</c><00:54:38.040><c> idx</c>

00:54:38.950 --> 00:54:38.960 align:start position:0%
going to be replacing it with index idx
 

00:54:38.960 --> 00:54:41.630 align:start position:0%
going to be replacing it with index idx
and<00:54:39.079><c> this</c><00:54:39.400><c> returns</c><00:54:40.200><c> a</c><00:54:40.319><c> new</c><00:54:40.520><c> list</c><00:54:40.680><c> of</c><00:54:40.799><c> tokens</c>

00:54:41.630 --> 00:54:41.640 align:start position:0%
and this returns a new list of tokens
 

00:54:41.640 --> 00:54:43.150 align:start position:0%
and this returns a new list of tokens
where<00:54:41.960><c> every</c><00:54:42.200><c> occurrence</c><00:54:42.520><c> of</c><00:54:42.720><c> pair</c><00:54:43.040><c> is</c>

00:54:43.150 --> 00:54:43.160 align:start position:0%
where every occurrence of pair is
 

00:54:43.160 --> 00:54:46.270 align:start position:0%
where every occurrence of pair is
replaced<00:54:43.559><c> with</c><00:54:43.720><c> idx</c><00:54:44.359><c> so</c><00:54:44.480><c> we're</c><00:54:44.640><c> doing</c><00:54:44.799><c> a</c><00:54:45.280><c> merge</c>

00:54:46.270 --> 00:54:46.280 align:start position:0%
replaced with idx so we're doing a merge
 

00:54:46.280 --> 00:54:47.589 align:start position:0%
replaced with idx so we're doing a merge
and<00:54:46.359><c> we're</c><00:54:46.480><c> going</c><00:54:46.599><c> to</c><00:54:46.680><c> be</c><00:54:46.839><c> continuing</c><00:54:47.319><c> this</c>

00:54:47.589 --> 00:54:47.599 align:start position:0%
and we're going to be continuing this
 

00:54:47.599 --> 00:54:49.270 align:start position:0%
and we're going to be continuing this
until<00:54:47.920><c> eventually</c><00:54:48.400><c> nothing</c><00:54:48.640><c> can</c><00:54:48.760><c> be</c><00:54:48.880><c> merged</c>

00:54:49.270 --> 00:54:49.280 align:start position:0%
until eventually nothing can be merged
 

00:54:49.280 --> 00:54:51.270 align:start position:0%
until eventually nothing can be merged
we'll<00:54:49.480><c> come</c><00:54:49.599><c> out</c><00:54:49.839><c> here</c><00:54:50.040><c> and</c><00:54:50.160><c> we'll</c><00:54:50.319><c> break</c><00:54:50.559><c> out</c>

00:54:51.270 --> 00:54:51.280 align:start position:0%
we'll come out here and we'll break out
 

00:54:51.280 --> 00:54:53.309 align:start position:0%
we'll come out here and we'll break out
and<00:54:51.480><c> here</c><00:54:51.640><c> we</c><00:54:51.760><c> just</c><00:54:52.079><c> return</c>

00:54:53.309 --> 00:54:53.319 align:start position:0%
and here we just return
 

00:54:53.319 --> 00:54:55.829 align:start position:0%
and here we just return
tokens<00:54:54.319><c> and</c><00:54:54.559><c> so</c><00:54:54.920><c> that</c><00:54:55.160><c> that's</c><00:54:55.520><c> the</c>

00:54:55.829 --> 00:54:55.839 align:start position:0%
tokens and so that that's the
 

00:54:55.839 --> 00:54:57.430 align:start position:0%
tokens and so that that's the
implementation<00:54:56.480><c> I</c><00:54:56.559><c> think</c><00:54:56.799><c> so</c><00:54:56.960><c> hopefully</c><00:54:57.319><c> this</c>

00:54:57.430 --> 00:54:57.440 align:start position:0%
implementation I think so hopefully this
 

00:54:57.440 --> 00:55:02.430 align:start position:0%
implementation I think so hopefully this
runs<00:54:58.200><c> okay</c><00:54:58.839><c> cool</c><00:55:00.040><c> um</c><00:55:01.040><c> yeah</c><00:55:01.200><c> and</c><00:55:01.400><c> this</c><00:55:01.799><c> looks</c><00:55:02.280><c> uh</c>

00:55:02.430 --> 00:55:02.440 align:start position:0%
runs okay cool um yeah and this looks uh
 

00:55:02.440 --> 00:55:04.870 align:start position:0%
runs okay cool um yeah and this looks uh
reasonable<00:55:02.839><c> so</c><00:55:03.040><c> for</c><00:55:03.160><c> example</c><00:55:03.440><c> 32</c><00:55:04.000><c> is</c><00:55:04.119><c> a</c><00:55:04.400><c> space</c>

00:55:04.870 --> 00:55:04.880 align:start position:0%
reasonable so for example 32 is a space
 

00:55:04.880 --> 00:55:09.190 align:start position:0%
reasonable so for example 32 is a space
in<00:55:05.079><c> asky</c><00:55:05.640><c> so</c><00:55:05.839><c> that's</c><00:55:06.079><c> here</c><00:55:07.480><c> um</c><00:55:08.480><c> so</c><00:55:08.880><c> this</c><00:55:09.000><c> looks</c>

00:55:09.190 --> 00:55:09.200 align:start position:0%
in asky so that's here um so this looks
 

00:55:09.200 --> 00:55:11.470 align:start position:0%
in asky so that's here um so this looks
like<00:55:09.319><c> it</c><00:55:09.440><c> worked</c><00:55:09.960><c> great</c><00:55:10.720><c> okay</c><00:55:10.839><c> so</c><00:55:11.040><c> let's</c><00:55:11.240><c> wrap</c>

00:55:11.470 --> 00:55:11.480 align:start position:0%
like it worked great okay so let's wrap
 

00:55:11.480 --> 00:55:13.470 align:start position:0%
like it worked great okay so let's wrap
up<00:55:11.760><c> this</c><00:55:11.880><c> section</c><00:55:12.119><c> of</c><00:55:12.240><c> the</c><00:55:12.359><c> video</c><00:55:12.599><c> at</c><00:55:12.720><c> least</c><00:55:13.400><c> I</c>

00:55:13.470 --> 00:55:13.480 align:start position:0%
up this section of the video at least I
 

00:55:13.480 --> 00:55:14.870 align:start position:0%
up this section of the video at least I
wanted<00:55:13.720><c> to</c><00:55:13.839><c> point</c><00:55:14.040><c> out</c><00:55:14.240><c> that</c><00:55:14.440><c> this</c><00:55:14.559><c> is</c><00:55:14.680><c> not</c>

00:55:14.870 --> 00:55:14.880 align:start position:0%
wanted to point out that this is not
 

00:55:14.880 --> 00:55:16.349 align:start position:0%
wanted to point out that this is not
quite<00:55:15.040><c> the</c><00:55:15.160><c> right</c><00:55:15.319><c> implementation</c><00:55:15.920><c> just</c><00:55:16.119><c> yet</c>

00:55:16.349 --> 00:55:16.359 align:start position:0%
quite the right implementation just yet
 

00:55:16.359 --> 00:55:17.950 align:start position:0%
quite the right implementation just yet
because<00:55:16.599><c> we</c><00:55:16.720><c> are</c><00:55:16.920><c> leaving</c><00:55:17.240><c> out</c><00:55:17.440><c> a</c><00:55:17.599><c> special</c>

00:55:17.950 --> 00:55:17.960 align:start position:0%
because we are leaving out a special
 

00:55:17.960 --> 00:55:20.670 align:start position:0%
because we are leaving out a special
case<00:55:18.640><c> so</c><00:55:18.799><c> in</c><00:55:18.920><c> particular</c><00:55:19.480><c> if</c><00:55:19.839><c> uh</c><00:55:19.960><c> we</c><00:55:20.079><c> try</c><00:55:20.319><c> to</c><00:55:20.440><c> do</c>

00:55:20.670 --> 00:55:20.680 align:start position:0%
case so in particular if uh we try to do
 

00:55:20.680 --> 00:55:23.549 align:start position:0%
case so in particular if uh we try to do
this<00:55:21.520><c> this</c><00:55:21.640><c> would</c><00:55:21.799><c> give</c><00:55:21.920><c> us</c><00:55:22.039><c> an</c><00:55:22.280><c> error</c><00:55:23.280><c> and</c><00:55:23.440><c> the</c>

00:55:23.549 --> 00:55:23.559 align:start position:0%
this this would give us an error and the
 

00:55:23.559 --> 00:55:25.630 align:start position:0%
this this would give us an error and the
issue<00:55:23.880><c> is</c><00:55:24.160><c> that</c><00:55:24.720><c> um</c><00:55:25.079><c> if</c><00:55:25.160><c> we</c><00:55:25.280><c> only</c><00:55:25.400><c> have</c><00:55:25.520><c> a</c>

00:55:25.630 --> 00:55:25.640 align:start position:0%
issue is that um if we only have a
 

00:55:25.640 --> 00:55:28.029 align:start position:0%
issue is that um if we only have a
single<00:55:25.960><c> character</c><00:55:26.280><c> or</c><00:55:26.440><c> an</c><00:55:26.559><c> empty</c><00:55:26.839><c> string</c><00:55:27.680><c> then</c>

00:55:28.029 --> 00:55:28.039 align:start position:0%
single character or an empty string then
 

00:55:28.039 --> 00:55:29.829 align:start position:0%
single character or an empty string then
stats<00:55:28.400><c> is</c><00:55:28.559><c> empty</c><00:55:28.920><c> and</c><00:55:29.039><c> that</c><00:55:29.160><c> causes</c><00:55:29.440><c> an</c><00:55:29.559><c> issue</c>

00:55:29.829 --> 00:55:29.839 align:start position:0%
stats is empty and that causes an issue
 

00:55:29.839 --> 00:55:32.950 align:start position:0%
stats is empty and that causes an issue
inside<00:55:30.160><c> Min</c><00:55:31.039><c> so</c><00:55:31.280><c> one</c><00:55:31.520><c> way</c><00:55:31.720><c> to</c><00:55:31.920><c> fight</c><00:55:32.280><c> this</c><00:55:32.559><c> is</c>

00:55:32.950 --> 00:55:32.960 align:start position:0%
inside Min so one way to fight this is
 

00:55:32.960 --> 00:55:36.349 align:start position:0%
inside Min so one way to fight this is
if<00:55:33.480><c> L</c><00:55:33.760><c> of</c><00:55:33.920><c> tokens</c><00:55:34.319><c> is</c><00:55:34.559><c> at</c><00:55:34.720><c> least</c><00:55:35.160><c> two</c><00:55:36.160><c> because</c>

00:55:36.349 --> 00:55:36.359 align:start position:0%
if L of tokens is at least two because
 

00:55:36.359 --> 00:55:37.829 align:start position:0%
if L of tokens is at least two because
if<00:55:36.480><c> it's</c><00:55:36.720><c> less</c><00:55:36.880><c> than</c><00:55:37.039><c> two</c><00:55:37.240><c> it's</c><00:55:37.359><c> just</c><00:55:37.480><c> a</c><00:55:37.599><c> single</c>

00:55:37.829 --> 00:55:37.839 align:start position:0%
if it's less than two it's just a single
 

00:55:37.839 --> 00:55:40.069 align:start position:0%
if it's less than two it's just a single
token<00:55:38.079><c> or</c><00:55:38.240><c> no</c><00:55:38.440><c> tokens</c><00:55:38.839><c> then</c><00:55:39.039><c> let's</c><00:55:39.359><c> just</c><00:55:39.720><c> uh</c>

00:55:40.069 --> 00:55:40.079 align:start position:0%
token or no tokens then let's just uh
 

00:55:40.079 --> 00:55:41.510 align:start position:0%
token or no tokens then let's just uh
there's<00:55:40.280><c> nothing</c><00:55:40.480><c> to</c><00:55:40.599><c> merge</c><00:55:40.920><c> so</c><00:55:41.119><c> we</c><00:55:41.240><c> just</c>

00:55:41.510 --> 00:55:41.520 align:start position:0%
there's nothing to merge so we just
 

00:55:41.520 --> 00:55:44.630 align:start position:0%
there's nothing to merge so we just
return<00:55:42.319><c> so</c><00:55:42.520><c> that</c><00:55:42.640><c> would</c><00:55:42.839><c> fix</c><00:55:43.359><c> uh</c><00:55:43.520><c> that</c>

00:55:44.630 --> 00:55:44.640 align:start position:0%
return so that would fix uh that
 

00:55:44.640 --> 00:55:48.069 align:start position:0%
return so that would fix uh that
case<00:55:45.640><c> Okay</c><00:55:46.400><c> and</c><00:55:46.559><c> then</c><00:55:46.799><c> second</c><00:55:47.599><c> I</c><00:55:47.680><c> have</c><00:55:47.799><c> a</c><00:55:47.920><c> few</c>

00:55:48.069 --> 00:55:48.079 align:start position:0%
case Okay and then second I have a few
 

00:55:48.079 --> 00:55:50.430 align:start position:0%
case Okay and then second I have a few
test<00:55:48.319><c> cases</c><00:55:48.599><c> here</c><00:55:48.720><c> for</c><00:55:48.880><c> us</c><00:55:49.119><c> as</c><00:55:49.280><c> well</c><00:55:49.960><c> so</c><00:55:50.200><c> first</c>

00:55:50.430 --> 00:55:50.440 align:start position:0%
test cases here for us as well so first
 

00:55:50.440 --> 00:55:53.349 align:start position:0%
test cases here for us as well so first
let's<00:55:50.640><c> make</c><00:55:50.799><c> sure</c><00:55:51.760><c> uh</c><00:55:51.960><c> about</c><00:55:52.599><c> or</c><00:55:52.799><c> let's</c><00:55:53.000><c> note</c>

00:55:53.349 --> 00:55:53.359 align:start position:0%
let's make sure uh about or let's note
 

00:55:53.359 --> 00:55:56.430 align:start position:0%
let's make sure uh about or let's note
the<00:55:54.000><c> following</c><00:55:55.160><c> if</c><00:55:55.280><c> we</c><00:55:55.440><c> take</c><00:55:55.559><c> a</c><00:55:55.720><c> string</c><00:55:56.200><c> and</c><00:55:56.319><c> we</c>

00:55:56.430 --> 00:55:56.440 align:start position:0%
the following if we take a string and we
 

00:55:56.440 --> 00:55:58.630 align:start position:0%
the following if we take a string and we
try<00:55:56.599><c> to</c><00:55:56.720><c> encode</c><00:55:57.079><c> it</c><00:55:57.319><c> and</c><00:55:57.440><c> then</c><00:55:57.599><c> decode</c><00:55:57.960><c> it</c><00:55:58.160><c> back</c>

00:55:58.630 --> 00:55:58.640 align:start position:0%
try to encode it and then decode it back
 

00:55:58.640 --> 00:56:00.230 align:start position:0%
try to encode it and then decode it back
you'd<00:55:58.960><c> expect</c><00:55:59.160><c> to</c><00:55:59.280><c> get</c><00:55:59.400><c> the</c><00:55:59.480><c> same</c><00:55:59.599><c> string</c><00:55:59.960><c> back</c>

00:56:00.230 --> 00:56:00.240 align:start position:0%
you'd expect to get the same string back
 

00:56:00.240 --> 00:56:04.670 align:start position:0%
you'd expect to get the same string back
right<00:56:01.000><c> is</c><00:56:01.119><c> that</c><00:56:01.280><c> true</c><00:56:01.480><c> for</c><00:56:01.640><c> all</c>

00:56:04.670 --> 00:56:04.680 align:start position:0%
 
 

00:56:04.680 --> 00:56:07.150 align:start position:0%
 
strings<00:56:05.680><c> so</c><00:56:05.880><c> I</c><00:56:06.000><c> think</c><00:56:06.319><c> uh</c><00:56:06.400><c> so</c><00:56:06.599><c> here</c><00:56:06.720><c> it</c><00:56:06.799><c> is</c><00:56:07.000><c> the</c>

00:56:07.150 --> 00:56:07.160 align:start position:0%
strings so I think uh so here it is the
 

00:56:07.160 --> 00:56:08.710 align:start position:0%
strings so I think uh so here it is the
case<00:56:07.520><c> and</c><00:56:07.720><c> I</c><00:56:07.799><c> think</c><00:56:07.960><c> in</c><00:56:08.079><c> general</c><00:56:08.440><c> this</c><00:56:08.520><c> is</c>

00:56:08.710 --> 00:56:08.720 align:start position:0%
case and I think in general this is
 

00:56:08.720 --> 00:56:12.029 align:start position:0%
case and I think in general this is
probably<00:56:09.079><c> the</c><00:56:09.240><c> case</c><00:56:10.200><c> um</c><00:56:11.200><c> but</c><00:56:11.400><c> notice</c><00:56:11.720><c> that</c>

00:56:12.029 --> 00:56:12.039 align:start position:0%
probably the case um but notice that
 

00:56:12.039 --> 00:56:14.630 align:start position:0%
probably the case um but notice that
going<00:56:12.359><c> backwards</c><00:56:12.960><c> is</c><00:56:13.200><c> not</c><00:56:13.880><c> is</c><00:56:14.079><c> not</c><00:56:14.359><c> you're</c><00:56:14.520><c> not</c>

00:56:14.630 --> 00:56:14.640 align:start position:0%
going backwards is not is not you're not
 

00:56:14.640 --> 00:56:15.910 align:start position:0%
going backwards is not is not you're not
going<00:56:14.799><c> to</c><00:56:14.920><c> have</c><00:56:15.039><c> an</c><00:56:15.200><c> identity</c><00:56:15.680><c> going</c>

00:56:15.910 --> 00:56:15.920 align:start position:0%
going to have an identity going
 

00:56:15.920 --> 00:56:19.190 align:start position:0%
going to have an identity going
backwards<00:56:16.599><c> because</c><00:56:16.880><c> as</c><00:56:16.960><c> I</c><00:56:17.119><c> mentioned</c><00:56:17.960><c> us</c><00:56:18.319><c> not</c>

00:56:19.190 --> 00:56:19.200 align:start position:0%
backwards because as I mentioned us not
 

00:56:19.200 --> 00:56:22.950 align:start position:0%
backwards because as I mentioned us not
all<00:56:20.000><c> token</c><00:56:20.319><c> sequences</c><00:56:20.839><c> are</c><00:56:21.119><c> valid</c><00:56:21.839><c> utf8</c><00:56:22.839><c> uh</c>

00:56:22.950 --> 00:56:22.960 align:start position:0%
all token sequences are valid utf8 uh
 

00:56:22.960 --> 00:56:25.430 align:start position:0%
all token sequences are valid utf8 uh
sort<00:56:23.119><c> of</c><00:56:23.480><c> by</c><00:56:23.720><c> streams</c><00:56:24.640><c> and</c><00:56:24.720><c> so</c><00:56:24.920><c> so</c><00:56:25.039><c> therefore</c>

00:56:25.430 --> 00:56:25.440 align:start position:0%
sort of by streams and so so therefore
 

00:56:25.440 --> 00:56:27.190 align:start position:0%
sort of by streams and so so therefore
you're<00:56:25.720><c> some</c><00:56:25.880><c> of</c><00:56:26.000><c> them</c><00:56:26.200><c> can't</c><00:56:26.400><c> even</c><00:56:26.599><c> be</c>

00:56:27.190 --> 00:56:27.200 align:start position:0%
you're some of them can't even be
 

00:56:27.200 --> 00:56:30.470 align:start position:0%
you're some of them can't even be
decodable<00:56:28.200><c> um</c><00:56:28.799><c> so</c><00:56:29.119><c> this</c><00:56:29.280><c> only</c><00:56:29.520><c> goes</c><00:56:29.760><c> in</c><00:56:29.920><c> One</c>

00:56:30.470 --> 00:56:30.480 align:start position:0%
decodable um so this only goes in One
 

00:56:30.480 --> 00:56:32.910 align:start position:0%
decodable um so this only goes in One
Direction<00:56:31.480><c> but</c><00:56:31.720><c> for</c><00:56:31.960><c> that</c><00:56:32.160><c> one</c><00:56:32.359><c> direction</c><00:56:32.720><c> we</c>

00:56:32.910 --> 00:56:32.920 align:start position:0%
Direction but for that one direction we
 

00:56:32.920 --> 00:56:34.750 align:start position:0%
Direction but for that one direction we
can<00:56:33.079><c> check</c><00:56:33.640><c> uh</c><00:56:33.839><c> here</c><00:56:34.240><c> if</c><00:56:34.359><c> we</c><00:56:34.480><c> take</c><00:56:34.640><c> the</c>

00:56:34.750 --> 00:56:34.760 align:start position:0%
can check uh here if we take the
 

00:56:34.760 --> 00:56:36.309 align:start position:0%
can check uh here if we take the
training<00:56:35.160><c> text</c><00:56:35.559><c> which</c><00:56:35.680><c> is</c><00:56:35.799><c> the</c><00:56:35.920><c> text</c><00:56:36.119><c> that</c><00:56:36.240><c> we</c>

00:56:36.309 --> 00:56:36.319 align:start position:0%
training text which is the text that we
 

00:56:36.319 --> 00:56:37.990 align:start position:0%
training text which is the text that we
train<00:56:36.520><c> to</c><00:56:36.640><c> tokenizer</c><00:56:37.119><c> around</c><00:56:37.640><c> we</c><00:56:37.720><c> can</c><00:56:37.880><c> make</c>

00:56:37.990 --> 00:56:38.000 align:start position:0%
train to tokenizer around we can make
 

00:56:38.000 --> 00:56:39.430 align:start position:0%
train to tokenizer around we can make
sure<00:56:38.160><c> that</c><00:56:38.280><c> when</c><00:56:38.400><c> we</c><00:56:38.520><c> encode</c><00:56:38.839><c> and</c><00:56:38.960><c> decode</c><00:56:39.319><c> we</c>

00:56:39.430 --> 00:56:39.440 align:start position:0%
sure that when we encode and decode we
 

00:56:39.440 --> 00:56:41.950 align:start position:0%
sure that when we encode and decode we
get<00:56:39.559><c> the</c><00:56:39.640><c> same</c><00:56:39.839><c> thing</c><00:56:40.079><c> back</c><00:56:40.599><c> which</c><00:56:40.720><c> is</c><00:56:40.960><c> true</c>

00:56:41.950 --> 00:56:41.960 align:start position:0%
get the same thing back which is true
 

00:56:41.960 --> 00:56:43.829 align:start position:0%
get the same thing back which is true
and<00:56:42.119><c> here</c><00:56:42.280><c> I</c><00:56:42.400><c> took</c><00:56:42.559><c> some</c><00:56:42.760><c> validation</c><00:56:43.240><c> data</c><00:56:43.599><c> so</c>

00:56:43.829 --> 00:56:43.839 align:start position:0%
and here I took some validation data so
 

00:56:43.839 --> 00:56:45.589 align:start position:0%
and here I took some validation data so
I<00:56:43.920><c> went</c><00:56:44.160><c> to</c><00:56:44.440><c> I</c><00:56:44.520><c> think</c><00:56:44.799><c> this</c><00:56:44.960><c> web</c><00:56:45.160><c> page</c><00:56:45.359><c> and</c><00:56:45.480><c> I</c>

00:56:45.589 --> 00:56:45.599 align:start position:0%
I went to I think this web page and I
 

00:56:45.599 --> 00:56:47.750 align:start position:0%
I went to I think this web page and I
grabbed<00:56:45.880><c> some</c><00:56:46.400><c> text</c><00:56:46.920><c> so</c><00:56:47.079><c> this</c><00:56:47.200><c> is</c><00:56:47.359><c> text</c><00:56:47.640><c> that</c>

00:56:47.750 --> 00:56:47.760 align:start position:0%
grabbed some text so this is text that
 

00:56:47.760 --> 00:56:49.670 align:start position:0%
grabbed some text so this is text that
the<00:56:47.839><c> tokenizer</c><00:56:48.319><c> has</c><00:56:48.480><c> not</c><00:56:48.599><c> seen</c><00:56:49.319><c> and</c><00:56:49.440><c> we</c><00:56:49.559><c> can</c>

00:56:49.670 --> 00:56:49.680 align:start position:0%
the tokenizer has not seen and we can
 

00:56:49.680 --> 00:56:52.710 align:start position:0%
the tokenizer has not seen and we can
make<00:56:49.799><c> sure</c><00:56:50.079><c> that</c><00:56:50.280><c> this</c><00:56:50.480><c> also</c><00:56:51.359><c> works</c><00:56:52.359><c> um</c><00:56:52.599><c> okay</c>

00:56:52.710 --> 00:56:52.720 align:start position:0%
make sure that this also works um okay
 

00:56:52.720 --> 00:56:53.910 align:start position:0%
make sure that this also works um okay
so<00:56:52.880><c> that</c><00:56:53.000><c> gives</c><00:56:53.160><c> us</c><00:56:53.280><c> some</c><00:56:53.480><c> confidence</c><00:56:53.799><c> that</c>

00:56:53.910 --> 00:56:53.920 align:start position:0%
so that gives us some confidence that
 

00:56:53.920 --> 00:56:55.990 align:start position:0%
so that gives us some confidence that
this<00:56:54.000><c> was</c><00:56:54.119><c> correctly</c><00:56:54.440><c> implemented</c>

00:56:55.990 --> 00:56:56.000 align:start position:0%
this was correctly implemented
 

00:56:56.000 --> 00:56:58.029 align:start position:0%
this was correctly implemented
so<00:56:56.240><c> those</c><00:56:56.359><c> are</c><00:56:56.559><c> the</c><00:56:56.720><c> basics</c><00:56:57.240><c> of</c><00:56:57.520><c> the</c><00:56:57.680><c> bite</c><00:56:57.880><c> pair</c>

00:56:58.029 --> 00:56:58.039 align:start position:0%
so those are the basics of the bite pair
 

00:56:58.039 --> 00:57:00.710 align:start position:0%
so those are the basics of the bite pair
encoding<00:56:58.400><c> algorithm</c><00:56:59.160><c> we</c><00:56:59.280><c> saw</c><00:56:59.640><c> how</c><00:56:59.839><c> we</c><00:56:59.960><c> can</c><00:57:00.599><c> uh</c>

00:57:00.710 --> 00:57:00.720 align:start position:0%
encoding algorithm we saw how we can uh
 

00:57:00.720 --> 00:57:03.670 align:start position:0%
encoding algorithm we saw how we can uh
take<00:57:00.880><c> some</c><00:57:01.079><c> training</c><00:57:01.400><c> set</c><00:57:02.039><c> train</c><00:57:02.240><c> a</c><00:57:02.680><c> tokenizer</c>

00:57:03.670 --> 00:57:03.680 align:start position:0%
take some training set train a tokenizer
 

00:57:03.680 --> 00:57:05.430 align:start position:0%
take some training set train a tokenizer
the<00:57:03.880><c> parameters</c><00:57:04.319><c> of</c><00:57:04.440><c> this</c><00:57:04.599><c> tokenizer</c><00:57:05.119><c> really</c>

00:57:05.430 --> 00:57:05.440 align:start position:0%
the parameters of this tokenizer really
 

00:57:05.440 --> 00:57:08.109 align:start position:0%
the parameters of this tokenizer really
are<00:57:05.720><c> just</c><00:57:06.000><c> this</c><00:57:06.280><c> dictionary</c><00:57:06.680><c> of</c><00:57:06.920><c> merges</c><00:57:07.920><c> and</c>

00:57:08.109 --> 00:57:08.119 align:start position:0%
are just this dictionary of merges and
 

00:57:08.119 --> 00:57:09.589 align:start position:0%
are just this dictionary of merges and
that<00:57:08.400><c> basically</c><00:57:08.720><c> creates</c><00:57:08.960><c> the</c><00:57:09.079><c> little</c><00:57:09.280><c> binary</c>

00:57:09.589 --> 00:57:09.599 align:start position:0%
that basically creates the little binary
 

00:57:09.599 --> 00:57:11.549 align:start position:0%
that basically creates the little binary
Forest<00:57:09.960><c> on</c><00:57:10.119><c> top</c><00:57:10.280><c> of</c><00:57:10.400><c> raw</c>

00:57:11.549 --> 00:57:11.559 align:start position:0%
Forest on top of raw
 

00:57:11.559 --> 00:57:14.670 align:start position:0%
Forest on top of raw
bites<00:57:12.559><c> once</c><00:57:12.760><c> we</c><00:57:12.960><c> have</c><00:57:13.200><c> this</c><00:57:13.640><c> the</c><00:57:13.839><c> merges</c><00:57:14.200><c> table</c>

00:57:14.670 --> 00:57:14.680 align:start position:0%
bites once we have this the merges table
 

00:57:14.680 --> 00:57:16.789 align:start position:0%
bites once we have this the merges table
we<00:57:14.799><c> can</c><00:57:15.000><c> both</c><00:57:15.240><c> encode</c><00:57:15.720><c> and</c><00:57:15.880><c> decode</c><00:57:16.480><c> between</c>

00:57:16.789 --> 00:57:16.799 align:start position:0%
we can both encode and decode between
 

00:57:16.799 --> 00:57:19.390 align:start position:0%
we can both encode and decode between
raw<00:57:17.039><c> text</c><00:57:17.319><c> and</c><00:57:17.440><c> token</c><00:57:17.960><c> sequences</c><00:57:18.960><c> so</c><00:57:19.160><c> that's</c>

00:57:19.390 --> 00:57:19.400 align:start position:0%
raw text and token sequences so that's
 

00:57:19.400 --> 00:57:21.270 align:start position:0%
raw text and token sequences so that's
the<00:57:19.680><c> the</c><00:57:19.839><c> simplest</c><00:57:20.400><c> setting</c><00:57:20.799><c> of</c><00:57:20.880><c> The</c>

00:57:21.270 --> 00:57:21.280 align:start position:0%
the the simplest setting of The
 

00:57:21.280 --> 00:57:23.190 align:start position:0%
the the simplest setting of The
tokenizer<00:57:22.280><c> what</c><00:57:22.400><c> we're</c><00:57:22.520><c> going</c><00:57:22.640><c> to</c><00:57:22.760><c> do</c><00:57:22.960><c> now</c>

00:57:23.190 --> 00:57:23.200 align:start position:0%
tokenizer what we're going to do now
 

00:57:23.200 --> 00:57:24.470 align:start position:0%
tokenizer what we're going to do now
though<00:57:23.440><c> is</c><00:57:23.520><c> we're</c><00:57:23.680><c> going</c><00:57:23.839><c> to</c><00:57:24.000><c> look</c><00:57:24.119><c> at</c><00:57:24.240><c> some</c><00:57:24.359><c> of</c>

00:57:24.470 --> 00:57:24.480 align:start position:0%
though is we're going to look at some of
 

00:57:24.480 --> 00:57:26.549 align:start position:0%
though is we're going to look at some of
the<00:57:24.559><c> St</c><00:57:25.000><c> the</c><00:57:25.079><c> art</c><00:57:25.280><c> lar</c><00:57:25.520><c> language</c><00:57:25.839><c> models</c><00:57:26.319><c> and</c>

00:57:26.549 --> 00:57:26.559 align:start position:0%
the St the art lar language models and
 

00:57:26.559 --> 00:57:28.349 align:start position:0%
the St the art lar language models and
the<00:57:26.680><c> kinds</c><00:57:26.839><c> of</c><00:57:26.960><c> tokenizers</c><00:57:27.520><c> that</c><00:57:27.680><c> they</c><00:57:27.799><c> use</c>

00:57:28.349 --> 00:57:28.359 align:start position:0%
the kinds of tokenizers that they use
 

00:57:28.359 --> 00:57:29.549 align:start position:0%
the kinds of tokenizers that they use
and<00:57:28.440><c> we're</c><00:57:28.559><c> going</c><00:57:28.720><c> to</c><00:57:28.799><c> see</c><00:57:29.000><c> that</c><00:57:29.160><c> this</c><00:57:29.280><c> picture</c>

00:57:29.549 --> 00:57:29.559 align:start position:0%
and we're going to see that this picture
 

00:57:29.559 --> 00:57:31.630 align:start position:0%
and we're going to see that this picture
complexifies<00:57:30.240><c> very</c><00:57:30.440><c> quickly</c><00:57:31.200><c> so</c><00:57:31.400><c> we're</c><00:57:31.520><c> going</c>

00:57:31.630 --> 00:57:31.640 align:start position:0%
complexifies very quickly so we're going
 

00:57:31.640 --> 00:57:34.589 align:start position:0%
complexifies very quickly so we're going
to<00:57:31.799><c> go</c><00:57:32.000><c> through</c><00:57:32.559><c> the</c><00:57:32.839><c> details</c><00:57:33.319><c> of</c><00:57:33.680><c> this</c><00:57:33.880><c> comp</c>

00:57:34.589 --> 00:57:34.599 align:start position:0%
to go through the details of this comp
 

00:57:34.599 --> 00:57:37.510 align:start position:0%
to go through the details of this comp
complexification<00:57:35.599><c> one</c><00:57:35.799><c> at</c><00:57:35.880><c> a</c><00:57:36.200><c> time</c><00:57:37.200><c> so</c><00:57:37.359><c> let's</c>

00:57:37.510 --> 00:57:37.520 align:start position:0%
complexification one at a time so let's
 

00:57:37.520 --> 00:57:39.029 align:start position:0%
complexification one at a time so let's
kick<00:57:37.760><c> things</c><00:57:37.920><c> off</c><00:57:38.079><c> by</c><00:57:38.200><c> looking</c><00:57:38.400><c> at</c><00:57:38.480><c> the</c><00:57:38.599><c> GPD</c>

00:57:39.029 --> 00:57:39.039 align:start position:0%
kick things off by looking at the GPD
 

00:57:39.039 --> 00:57:41.630 align:start position:0%
kick things off by looking at the GPD
Series<00:57:39.920><c> so</c><00:57:40.079><c> in</c><00:57:40.240><c> particular</c><00:57:40.680><c> I</c><00:57:40.839><c> have</c><00:57:40.960><c> the</c><00:57:41.079><c> gpt2</c>

00:57:41.630 --> 00:57:41.640 align:start position:0%
Series so in particular I have the gpt2
 

00:57:41.640 --> 00:57:44.630 align:start position:0%
Series so in particular I have the gpt2
paper<00:57:41.960><c> here</c><00:57:42.599><c> um</c><00:57:43.480><c> and</c><00:57:43.920><c> this</c><00:57:44.079><c> paper</c><00:57:44.319><c> is</c><00:57:44.440><c> from</c>

00:57:44.630 --> 00:57:44.640 align:start position:0%
paper here um and this paper is from
 

00:57:44.640 --> 00:57:48.349 align:start position:0%
paper here um and this paper is from
2019<00:57:45.559><c> or</c><00:57:45.720><c> so</c><00:57:46.440><c> so</c><00:57:46.640><c> 5</c><00:57:46.799><c> years</c><00:57:47.000><c> ago</c><00:57:47.960><c> and</c><00:57:48.160><c> let's</c>

00:57:48.349 --> 00:57:48.359 align:start position:0%
2019 or so so 5 years ago and let's
 

00:57:48.359 --> 00:57:51.270 align:start position:0%
2019 or so so 5 years ago and let's
scroll<00:57:48.680><c> down</c><00:57:49.039><c> to</c><00:57:49.760><c> input</c><00:57:50.200><c> representation</c><00:57:51.200><c> this</c>

00:57:51.270 --> 00:57:51.280 align:start position:0%
scroll down to input representation this
 

00:57:51.280 --> 00:57:52.670 align:start position:0%
scroll down to input representation this
is<00:57:51.400><c> where</c><00:57:51.559><c> they</c><00:57:51.680><c> talk</c><00:57:51.839><c> about</c><00:57:52.000><c> the</c><00:57:52.119><c> tokenizer</c>

00:57:52.670 --> 00:57:52.680 align:start position:0%
is where they talk about the tokenizer
 

00:57:52.680 --> 00:57:55.630 align:start position:0%
is where they talk about the tokenizer
that<00:57:52.760><c> they're</c><00:57:52.960><c> using</c><00:57:53.400><c> for</c><00:57:53.799><c> gpd2</c><00:57:55.119><c> now</c><00:57:55.440><c> this</c><00:57:55.520><c> is</c>

00:57:55.630 --> 00:57:55.640 align:start position:0%
that they're using for gpd2 now this is
 

00:57:55.640 --> 00:57:57.029 align:start position:0%
that they're using for gpd2 now this is
all<00:57:55.799><c> fairly</c><00:57:56.039><c> readable</c><00:57:56.400><c> so</c><00:57:56.520><c> I</c><00:57:56.640><c> encourage</c><00:57:56.960><c> you</c>

00:57:57.029 --> 00:57:57.039 align:start position:0%
all fairly readable so I encourage you
 

00:57:57.039 --> 00:58:00.029 align:start position:0%
all fairly readable so I encourage you
to<00:57:57.200><c> pause</c><00:57:57.720><c> and</c><00:57:58.280><c> um</c><00:57:58.640><c> read</c><00:57:58.880><c> this</c><00:57:59.119><c> yourself</c><00:57:59.880><c> but</c>

00:58:00.029 --> 00:58:00.039 align:start position:0%
to pause and um read this yourself but
 

00:58:00.039 --> 00:58:01.990 align:start position:0%
to pause and um read this yourself but
this<00:58:00.119><c> is</c><00:58:00.240><c> where</c><00:58:00.400><c> they</c><00:58:00.520><c> motivate</c><00:58:00.960><c> the</c><00:58:01.119><c> use</c><00:58:01.480><c> of</c>

00:58:01.990 --> 00:58:02.000 align:start position:0%
this is where they motivate the use of
 

00:58:02.000 --> 00:58:04.670 align:start position:0%
this is where they motivate the use of
the<00:58:02.160><c> bite</c><00:58:02.440><c> pair</c><00:58:02.640><c> encoding</c><00:58:03.079><c> algorithm</c><00:58:03.880><c> on</c><00:58:04.480><c> the</c>

00:58:04.670 --> 00:58:04.680 align:start position:0%
the bite pair encoding algorithm on the
 

00:58:04.680 --> 00:58:07.510 align:start position:0%
the bite pair encoding algorithm on the
bite<00:58:05.000><c> level</c><00:58:05.520><c> representation</c><00:58:06.520><c> of</c><00:58:06.799><c> utf8</c>

00:58:07.510 --> 00:58:07.520 align:start position:0%
bite level representation of utf8
 

00:58:07.520 --> 00:58:09.510 align:start position:0%
bite level representation of utf8
encoding<00:58:08.520><c> so</c><00:58:08.680><c> this</c><00:58:08.799><c> is</c><00:58:08.880><c> where</c><00:58:09.039><c> they</c><00:58:09.160><c> motivate</c>

00:58:09.510 --> 00:58:09.520 align:start position:0%
encoding so this is where they motivate
 

00:58:09.520 --> 00:58:11.069 align:start position:0%
encoding so this is where they motivate
it<00:58:09.880><c> and</c><00:58:10.000><c> they</c><00:58:10.119><c> talk</c><00:58:10.280><c> about</c><00:58:10.440><c> the</c><00:58:10.520><c> vocabulary</c>

00:58:11.069 --> 00:58:11.079 align:start position:0%
it and they talk about the vocabulary
 

00:58:11.079 --> 00:58:13.829 align:start position:0%
it and they talk about the vocabulary
sizes<00:58:11.760><c> and</c><00:58:12.039><c> everything</c><00:58:13.039><c> now</c><00:58:13.280><c> everything</c><00:58:13.640><c> here</c>

00:58:13.829 --> 00:58:13.839 align:start position:0%
sizes and everything now everything here
 

00:58:13.839 --> 00:58:15.910 align:start position:0%
sizes and everything now everything here
is<00:58:14.000><c> exactly</c><00:58:14.359><c> as</c><00:58:14.520><c> we've</c><00:58:14.720><c> covered</c><00:58:15.000><c> it</c><00:58:15.200><c> so</c><00:58:15.400><c> far</c>

00:58:15.910 --> 00:58:15.920 align:start position:0%
is exactly as we've covered it so far
 

00:58:15.920 --> 00:58:18.549 align:start position:0%
is exactly as we've covered it so far
but<00:58:16.079><c> things</c><00:58:16.280><c> start</c><00:58:16.480><c> to</c><00:58:16.599><c> depart</c><00:58:17.079><c> around</c><00:58:17.559><c> here</c>

00:58:18.549 --> 00:58:18.559 align:start position:0%
but things start to depart around here
 

00:58:18.559 --> 00:58:20.430 align:start position:0%
but things start to depart around here
so<00:58:18.760><c> what</c><00:58:18.880><c> they</c><00:58:19.000><c> mention</c><00:58:19.319><c> is</c><00:58:19.520><c> that</c><00:58:20.079><c> they</c><00:58:20.200><c> don't</c>

00:58:20.430 --> 00:58:20.440 align:start position:0%
so what they mention is that they don't
 

00:58:20.440 --> 00:58:22.270 align:start position:0%
so what they mention is that they don't
just<00:58:20.640><c> apply</c><00:58:20.920><c> the</c><00:58:21.039><c> naive</c><00:58:21.359><c> algorithm</c><00:58:21.960><c> as</c><00:58:22.119><c> we</c>

00:58:22.270 --> 00:58:22.280 align:start position:0%
just apply the naive algorithm as we
 

00:58:22.280 --> 00:58:25.150 align:start position:0%
just apply the naive algorithm as we
have<00:58:22.480><c> done</c><00:58:22.640><c> it</c><00:58:23.440><c> and</c><00:58:23.559><c> in</c><00:58:23.680><c> particular</c><00:58:24.280><c> here's</c><00:58:24.440><c> a</c>

00:58:25.150 --> 00:58:25.160 align:start position:0%
have done it and in particular here's a
 

00:58:25.160 --> 00:58:26.990 align:start position:0%
have done it and in particular here's a
example<00:58:26.160><c> suppose</c><00:58:26.440><c> that</c><00:58:26.520><c> you</c><00:58:26.640><c> have</c><00:58:26.760><c> common</c>

00:58:26.990 --> 00:58:27.000 align:start position:0%
example suppose that you have common
 

00:58:27.000 --> 00:58:29.470 align:start position:0%
example suppose that you have common
words<00:58:27.319><c> like</c><00:58:27.559><c> dog</c><00:58:28.480><c> what</c><00:58:28.640><c> will</c><00:58:28.839><c> happen</c><00:58:29.119><c> is</c><00:58:29.280><c> that</c>

00:58:29.470 --> 00:58:29.480 align:start position:0%
words like dog what will happen is that
 

00:58:29.480 --> 00:58:31.630 align:start position:0%
words like dog what will happen is that
dog<00:58:29.680><c> of</c><00:58:29.799><c> course</c><00:58:30.000><c> occurs</c><00:58:30.480><c> very</c><00:58:30.760><c> frequently</c><00:58:31.520><c> in</c>

00:58:31.630 --> 00:58:31.640 align:start position:0%
dog of course occurs very frequently in
 

00:58:31.640 --> 00:58:34.270 align:start position:0%
dog of course occurs very frequently in
the<00:58:31.839><c> text</c><00:58:32.480><c> and</c><00:58:32.599><c> it</c><00:58:32.760><c> occurs</c><00:58:33.160><c> right</c><00:58:33.319><c> next</c><00:58:33.520><c> to</c><00:58:34.160><c> all</c>

00:58:34.270 --> 00:58:34.280 align:start position:0%
the text and it occurs right next to all
 

00:58:34.280 --> 00:58:36.390 align:start position:0%
the text and it occurs right next to all
kinds<00:58:34.440><c> of</c><00:58:34.640><c> punctuation</c><00:58:35.200><c> as</c><00:58:35.280><c> an</c><00:58:35.480><c> example</c><00:58:36.079><c> so</c>

00:58:36.390 --> 00:58:36.400 align:start position:0%
kinds of punctuation as an example so
 

00:58:36.400 --> 00:58:39.150 align:start position:0%
kinds of punctuation as an example so
doc<00:58:36.799><c> dot</c><00:58:37.400><c> dog</c><00:58:37.839><c> exclamation</c><00:58:38.359><c> mark</c><00:58:38.799><c> dog</c>

00:58:39.150 --> 00:58:39.160 align:start position:0%
doc dot dog exclamation mark dog
 

00:58:39.160 --> 00:58:42.230 align:start position:0%
doc dot dog exclamation mark dog
question<00:58:39.400><c> mark</c><00:58:39.880><c> Etc</c><00:58:40.880><c> and</c><00:58:41.240><c> naively</c><00:58:41.920><c> you</c><00:58:42.039><c> might</c>

00:58:42.230 --> 00:58:42.240 align:start position:0%
question mark Etc and naively you might
 

00:58:42.240 --> 00:58:43.630 align:start position:0%
question mark Etc and naively you might
imagine<00:58:42.480><c> that</c><00:58:42.599><c> the</c><00:58:42.720><c> BP</c><00:58:43.039><c> algorithm</c><00:58:43.480><c> could</c>

00:58:43.630 --> 00:58:43.640 align:start position:0%
imagine that the BP algorithm could
 

00:58:43.640 --> 00:58:45.750 align:start position:0%
imagine that the BP algorithm could
merge<00:58:44.039><c> these</c><00:58:44.240><c> to</c><00:58:44.400><c> be</c><00:58:44.559><c> single</c><00:58:44.920><c> tokens</c><00:58:45.559><c> and</c><00:58:45.680><c> then</c>

00:58:45.750 --> 00:58:45.760 align:start position:0%
merge these to be single tokens and then
 

00:58:45.760 --> 00:58:47.430 align:start position:0%
merge these to be single tokens and then
you<00:58:45.880><c> end</c><00:58:46.000><c> up</c><00:58:46.160><c> with</c><00:58:46.319><c> lots</c><00:58:46.480><c> of</c><00:58:46.799><c> tokens</c><00:58:47.200><c> that</c><00:58:47.280><c> are</c>

00:58:47.430 --> 00:58:47.440 align:start position:0%
you end up with lots of tokens that are
 

00:58:47.440 --> 00:58:48.990 align:start position:0%
you end up with lots of tokens that are
just<00:58:47.559><c> like</c><00:58:47.799><c> dog</c><00:58:48.039><c> with</c><00:58:48.160><c> a</c><00:58:48.240><c> slightly</c><00:58:48.559><c> different</c>

00:58:48.990 --> 00:58:49.000 align:start position:0%
just like dog with a slightly different
 

00:58:49.000 --> 00:58:50.870 align:start position:0%
just like dog with a slightly different
punctuation<00:58:50.000><c> and</c><00:58:50.119><c> so</c><00:58:50.240><c> it</c><00:58:50.319><c> feels</c><00:58:50.559><c> like</c><00:58:50.680><c> you're</c>

00:58:50.870 --> 00:58:50.880 align:start position:0%
punctuation and so it feels like you're
 

00:58:50.880 --> 00:58:52.029 align:start position:0%
punctuation and so it feels like you're
clustering<00:58:51.400><c> things</c><00:58:51.559><c> that</c><00:58:51.680><c> shouldn't</c><00:58:51.920><c> be</c>

00:58:52.029 --> 00:58:52.039 align:start position:0%
clustering things that shouldn't be
 

00:58:52.039 --> 00:58:53.630 align:start position:0%
clustering things that shouldn't be
clustered<00:58:52.480><c> you're</c><00:58:52.760><c> combining</c><00:58:53.359><c> kind</c><00:58:53.440><c> of</c>

00:58:53.630 --> 00:58:53.640 align:start position:0%
clustered you're combining kind of
 

00:58:53.640 --> 00:58:55.549 align:start position:0%
clustered you're combining kind of
semantics<00:58:54.240><c> with</c>

00:58:55.549 --> 00:58:55.559 align:start position:0%
semantics with
 

00:58:55.559 --> 00:58:58.910 align:start position:0%
semantics with
uation<00:58:56.559><c> and</c><00:58:56.799><c> this</c><00:58:57.200><c> uh</c><00:58:57.440><c> feels</c><00:58:57.839><c> suboptimal</c><00:58:58.760><c> and</c>

00:58:58.910 --> 00:58:58.920 align:start position:0%
uation and this uh feels suboptimal and
 

00:58:58.920 --> 00:59:00.950 align:start position:0%
uation and this uh feels suboptimal and
indeed<00:58:59.240><c> they</c><00:58:59.359><c> also</c><00:58:59.640><c> say</c><00:58:59.960><c> that</c><00:59:00.319><c> this</c><00:59:00.720><c> is</c>

00:59:00.950 --> 00:59:00.960 align:start position:0%
indeed they also say that this is
 

00:59:00.960 --> 00:59:02.349 align:start position:0%
indeed they also say that this is
suboptimal<00:59:01.480><c> according</c><00:59:01.720><c> to</c><00:59:01.839><c> some</c><00:59:01.960><c> of</c><00:59:02.079><c> the</c>

00:59:02.349 --> 00:59:02.359 align:start position:0%
suboptimal according to some of the
 

00:59:02.359 --> 00:59:04.190 align:start position:0%
suboptimal according to some of the
experiments<00:59:03.359><c> so</c><00:59:03.520><c> what</c><00:59:03.599><c> they</c><00:59:03.720><c> want</c><00:59:03.839><c> to</c><00:59:03.960><c> do</c><00:59:04.079><c> is</c>

00:59:04.190 --> 00:59:04.200 align:start position:0%
experiments so what they want to do is
 

00:59:04.200 --> 00:59:06.309 align:start position:0%
experiments so what they want to do is
they<00:59:04.319><c> want</c><00:59:04.440><c> to</c><00:59:04.640><c> top</c><00:59:04.960><c> down</c><00:59:05.319><c> in</c><00:59:05.440><c> a</c><00:59:05.599><c> manual</c><00:59:06.000><c> way</c>

00:59:06.309 --> 00:59:06.319 align:start position:0%
they want to top down in a manual way
 

00:59:06.319 --> 00:59:09.589 align:start position:0%
they want to top down in a manual way
enforce<00:59:07.280><c> that</c><00:59:07.480><c> some</c><00:59:07.880><c> types</c><00:59:08.160><c> of</c><00:59:08.880><c> um</c><00:59:09.160><c> characters</c>

00:59:09.589 --> 00:59:09.599 align:start position:0%
enforce that some types of um characters
 

00:59:09.599 --> 00:59:12.750 align:start position:0%
enforce that some types of um characters
should<00:59:09.839><c> never</c><00:59:10.079><c> be</c><00:59:10.240><c> merged</c><00:59:11.319><c> together</c><00:59:12.319><c> um</c><00:59:12.599><c> so</c>

00:59:12.750 --> 00:59:12.760 align:start position:0%
should never be merged together um so
 

00:59:12.760 --> 00:59:14.789 align:start position:0%
should never be merged together um so
they<00:59:12.880><c> want</c><00:59:13.000><c> to</c><00:59:13.160><c> enforce</c><00:59:13.559><c> these</c><00:59:13.839><c> merging</c><00:59:14.240><c> rules</c>

00:59:14.789 --> 00:59:14.799 align:start position:0%
they want to enforce these merging rules
 

00:59:14.799 --> 00:59:17.670 align:start position:0%
they want to enforce these merging rules
on<00:59:15.079><c> top</c><00:59:15.359><c> of</c><00:59:15.720><c> the</c><00:59:15.839><c> bite</c><00:59:16.039><c> PA</c><00:59:16.200><c> encoding</c><00:59:16.680><c> algorithm</c>

00:59:17.670 --> 00:59:17.680 align:start position:0%
on top of the bite PA encoding algorithm
 

00:59:17.680 --> 00:59:19.870 align:start position:0%
on top of the bite PA encoding algorithm
so<00:59:17.839><c> let's</c><00:59:18.039><c> take</c><00:59:18.160><c> a</c><00:59:18.280><c> look</c><00:59:18.880><c> um</c><00:59:19.079><c> at</c><00:59:19.240><c> their</c><00:59:19.440><c> code</c>

00:59:19.870 --> 00:59:19.880 align:start position:0%
so let's take a look um at their code
 

00:59:19.880 --> 00:59:21.470 align:start position:0%
so let's take a look um at their code
and<00:59:20.039><c> see</c><00:59:20.280><c> how</c><00:59:20.440><c> they</c><00:59:20.599><c> actually</c><00:59:20.839><c> enforce</c><00:59:21.240><c> this</c>

00:59:21.470 --> 00:59:21.480 align:start position:0%
and see how they actually enforce this
 

00:59:21.480 --> 00:59:23.190 align:start position:0%
and see how they actually enforce this
and<00:59:21.640><c> what</c><00:59:21.760><c> kinds</c><00:59:21.960><c> of</c><00:59:22.160><c> mergy</c><00:59:22.559><c> they</c><00:59:22.680><c> actually</c><00:59:22.880><c> do</c>

00:59:23.190 --> 00:59:23.200 align:start position:0%
and what kinds of mergy they actually do
 

00:59:23.200 --> 00:59:25.829 align:start position:0%
and what kinds of mergy they actually do
perform<00:59:24.200><c> so</c><00:59:24.359><c> I</c><00:59:24.440><c> have</c><00:59:24.520><c> to</c><00:59:24.839><c> to</c><00:59:25.119><c> tab</c><00:59:25.359><c> open</c><00:59:25.640><c> here</c>

00:59:25.829 --> 00:59:25.839 align:start position:0%
perform so I have to to tab open here
 

00:59:25.839 --> 00:59:29.630 align:start position:0%
perform so I have to to tab open here
for<00:59:26.240><c> gpt2</c><00:59:27.240><c> under</c><00:59:27.599><c> open</c><00:59:27.839><c> AI</c><00:59:28.200><c> on</c><00:59:28.520><c> GitHub</c><00:59:29.520><c> and</c>

00:59:29.630 --> 00:59:29.640 align:start position:0%
for gpt2 under open AI on GitHub and
 

00:59:29.640 --> 00:59:30.670 align:start position:0%
for gpt2 under open AI on GitHub and
when<00:59:29.720><c> we</c><00:59:29.880><c> go</c><00:59:30.000><c> to</c>

00:59:30.670 --> 00:59:30.680 align:start position:0%
when we go to
 

00:59:30.680 --> 00:59:34.270 align:start position:0%
when we go to
Source<00:59:31.680><c> there</c><00:59:31.799><c> is</c><00:59:31.920><c> an</c><00:59:32.119><c> encoder</c><00:59:33.000><c> thatp</c><00:59:34.000><c> now</c><00:59:34.200><c> I</c>

00:59:34.270 --> 00:59:34.280 align:start position:0%
Source there is an encoder thatp now I
 

00:59:34.280 --> 00:59:35.589 align:start position:0%
Source there is an encoder thatp now I
don't<00:59:34.559><c> personally</c><00:59:34.960><c> love</c><00:59:35.160><c> that</c><00:59:35.280><c> they</c><00:59:35.400><c> call</c><00:59:35.520><c> it</c>

00:59:35.589 --> 00:59:35.599 align:start position:0%
don't personally love that they call it
 

00:59:35.599 --> 00:59:37.069 align:start position:0%
don't personally love that they call it
encoder<00:59:36.000><c> dopy</c><00:59:36.440><c> because</c><00:59:36.720><c> this</c><00:59:36.799><c> is</c><00:59:36.960><c> the</c>

00:59:37.069 --> 00:59:37.079 align:start position:0%
encoder dopy because this is the
 

00:59:37.079 --> 00:59:39.349 align:start position:0%
encoder dopy because this is the
tokenizer<00:59:38.079><c> and</c><00:59:38.200><c> the</c><00:59:38.319><c> tokenizer</c><00:59:38.799><c> can</c><00:59:38.920><c> do</c><00:59:39.119><c> both</c>

00:59:39.349 --> 00:59:39.359 align:start position:0%
tokenizer and the tokenizer can do both
 

00:59:39.359 --> 00:59:41.870 align:start position:0%
tokenizer and the tokenizer can do both
encode<00:59:39.880><c> and</c><00:59:40.039><c> decode</c><00:59:41.000><c> uh</c><00:59:41.079><c> so</c><00:59:41.319><c> it</c><00:59:41.400><c> feels</c><00:59:41.680><c> kind</c><00:59:41.760><c> of</c>

00:59:41.870 --> 00:59:41.880 align:start position:0%
encode and decode uh so it feels kind of
 

00:59:41.880 --> 00:59:43.190 align:start position:0%
encode and decode uh so it feels kind of
awkward<00:59:42.119><c> to</c><00:59:42.200><c> me</c><00:59:42.319><c> that</c><00:59:42.400><c> it's</c><00:59:42.520><c> called</c><00:59:42.680><c> encoder</c>

00:59:43.190 --> 00:59:43.200 align:start position:0%
awkward to me that it's called encoder
 

00:59:43.200 --> 00:59:45.910 align:start position:0%
awkward to me that it's called encoder
but<00:59:43.680><c> that</c><00:59:43.799><c> is</c><00:59:43.960><c> the</c><00:59:44.520><c> tokenizer</c><00:59:45.520><c> and</c><00:59:45.640><c> there's</c><00:59:45.799><c> a</c>

00:59:45.910 --> 00:59:45.920 align:start position:0%
but that is the tokenizer and there's a
 

00:59:45.920 --> 00:59:46.990 align:start position:0%
but that is the tokenizer and there's a
lot<00:59:46.119><c> going</c><00:59:46.280><c> on</c><00:59:46.440><c> here</c><00:59:46.599><c> and</c><00:59:46.680><c> we're</c><00:59:46.799><c> going</c><00:59:46.880><c> to</c>

00:59:46.990 --> 00:59:47.000 align:start position:0%
lot going on here and we're going to
 

00:59:47.000 --> 00:59:49.230 align:start position:0%
lot going on here and we're going to
step<00:59:47.200><c> through</c><00:59:47.359><c> it</c><00:59:47.480><c> in</c><00:59:47.640><c> detail</c><00:59:48.160><c> at</c><00:59:48.319><c> one</c><00:59:48.480><c> point</c>

00:59:49.230 --> 00:59:49.240 align:start position:0%
step through it in detail at one point
 

00:59:49.240 --> 00:59:51.589 align:start position:0%
step through it in detail at one point
for<00:59:49.440><c> now</c><00:59:49.640><c> I</c><00:59:49.760><c> just</c><00:59:49.880><c> want</c><00:59:50.079><c> to</c><00:59:50.680><c> focus</c><00:59:51.079><c> on</c><00:59:51.400><c> this</c>

00:59:51.589 --> 00:59:51.599 align:start position:0%
for now I just want to focus on this
 

00:59:51.599 --> 00:59:54.349 align:start position:0%
for now I just want to focus on this
part<00:59:52.000><c> here</c><00:59:53.000><c> the</c><00:59:53.200><c> create</c><00:59:53.440><c> a</c><00:59:53.599><c> rigix</c><00:59:54.000><c> pattern</c>

00:59:54.349 --> 00:59:54.359 align:start position:0%
part here the create a rigix pattern
 

00:59:54.359 --> 00:59:56.230 align:start position:0%
part here the create a rigix pattern
here<00:59:55.119><c> that</c><00:59:55.280><c> looks</c><00:59:55.520><c> very</c><00:59:55.680><c> complicated</c><00:59:56.160><c> and</c>

00:59:56.230 --> 00:59:56.240 align:start position:0%
here that looks very complicated and
 

00:59:56.240 --> 00:59:58.670 align:start position:0%
here that looks very complicated and
we're<00:59:56.359><c> going</c><00:59:56.440><c> to</c><00:59:56.599><c> go</c><00:59:56.720><c> through</c><00:59:56.839><c> it</c><00:59:56.960><c> in</c><00:59:57.039><c> a</c><00:59:57.520><c> bit</c><00:59:58.520><c> uh</c>

00:59:58.670 --> 00:59:58.680 align:start position:0%
we're going to go through it in a bit uh
 

00:59:58.680 --> 01:00:00.270 align:start position:0%
we're going to go through it in a bit uh
but<00:59:58.839><c> this</c><00:59:58.920><c> is</c><00:59:59.079><c> the</c><00:59:59.240><c> core</c><00:59:59.520><c> part</c><00:59:59.799><c> that</c><00:59:59.960><c> allows</c>

01:00:00.270 --> 01:00:00.280 align:start position:0%
but this is the core part that allows
 

01:00:00.280 --> 01:00:03.990 align:start position:0%
but this is the core part that allows
them<01:00:00.440><c> to</c><01:00:00.880><c> enforce</c><01:00:01.440><c> rules</c><01:00:02.440><c> uh</c><01:00:02.680><c> for</c><01:00:03.400><c> what</c><01:00:03.720><c> parts</c>

01:00:03.990 --> 01:00:04.000 align:start position:0%
them to enforce rules uh for what parts
 

01:00:04.000 --> 01:00:05.950 align:start position:0%
them to enforce rules uh for what parts
of<01:00:04.119><c> the</c><01:00:04.240><c> text</c><01:00:04.480><c> Will</c><01:00:04.680><c> Never</c><01:00:04.920><c> Be</c><01:00:05.039><c> merged</c><01:00:05.440><c> for</c>

01:00:05.950 --> 01:00:05.960 align:start position:0%
of the text Will Never Be merged for
 

01:00:05.960 --> 01:00:08.630 align:start position:0%
of the text Will Never Be merged for
sure<01:00:06.960><c> now</c><01:00:07.119><c> notice</c><01:00:07.440><c> that</c><01:00:07.559><c> re.</c><01:00:08.079><c> compile</c><01:00:08.440><c> here</c><01:00:08.559><c> is</c>

01:00:08.630 --> 01:00:08.640 align:start position:0%
sure now notice that re. compile here is
 

01:00:08.640 --> 01:00:10.750 align:start position:0%
sure now notice that re. compile here is
a<01:00:08.760><c> little</c><01:00:08.960><c> bit</c><01:00:09.079><c> misleading</c><01:00:09.720><c> because</c><01:00:10.599><c> we're</c>

01:00:10.750 --> 01:00:10.760 align:start position:0%
a little bit misleading because we're
 

01:00:10.760 --> 01:00:12.430 align:start position:0%
a little bit misleading because we're
not<01:00:10.880><c> just</c><01:00:11.000><c> doing</c><01:00:11.240><c> import</c><01:00:11.559><c> re</c><01:00:12.079><c> which</c><01:00:12.200><c> is</c><01:00:12.280><c> the</c>

01:00:12.430 --> 01:00:12.440 align:start position:0%
not just doing import re which is the
 

01:00:12.440 --> 01:00:14.630 align:start position:0%
not just doing import re which is the
python<01:00:12.720><c> re</c><01:00:13.000><c> module</c><01:00:13.480><c> we're</c><01:00:13.640><c> doing</c><01:00:13.839><c> import</c><01:00:14.160><c> reex</c>

01:00:14.630 --> 01:00:14.640 align:start position:0%
python re module we're doing import reex
 

01:00:14.640 --> 01:00:17.710 align:start position:0%
python re module we're doing import reex
as<01:00:14.799><c> re</c><01:00:15.559><c> and</c><01:00:15.720><c> reex</c><01:00:16.160><c> is</c><01:00:16.280><c> a</c><01:00:16.799><c> python</c><01:00:17.280><c> package</c><01:00:17.599><c> that</c>

01:00:17.710 --> 01:00:17.720 align:start position:0%
as re and reex is a python package that
 

01:00:17.720 --> 01:00:20.390 align:start position:0%
as re and reex is a python package that
you<01:00:17.799><c> can</c><01:00:17.960><c> install</c><01:00:18.680><c> P</c><01:00:18.839><c> install</c><01:00:19.160><c> r</c><01:00:19.400><c> x</c><01:00:20.119><c> and</c><01:00:20.240><c> it's</c>

01:00:20.390 --> 01:00:20.400 align:start position:0%
you can install P install r x and it's
 

01:00:20.400 --> 01:00:22.069 align:start position:0%
you can install P install r x and it's
basically<01:00:20.680><c> an</c><01:00:20.799><c> extension</c><01:00:21.200><c> of</c><01:00:21.359><c> re</c><01:00:21.720><c> so</c><01:00:21.880><c> it's</c><01:00:21.960><c> a</c>

01:00:22.069 --> 01:00:22.079 align:start position:0%
basically an extension of re so it's a
 

01:00:22.079 --> 01:00:23.230 align:start position:0%
basically an extension of re so it's a
bit<01:00:22.200><c> more</c><01:00:22.359><c> powerful</c>

01:00:23.230 --> 01:00:23.240 align:start position:0%
bit more powerful
 

01:00:23.240 --> 01:00:25.990 align:start position:0%
bit more powerful
re<01:00:24.240><c> um</c>

01:00:25.990 --> 01:00:26.000 align:start position:0%
re um
 

01:00:26.000 --> 01:00:28.870 align:start position:0%
re um
so<01:00:26.160><c> let's</c><01:00:26.359><c> take</c><01:00:26.480><c> a</c><01:00:26.599><c> look</c><01:00:26.880><c> at</c><01:00:27.880><c> this</c><01:00:28.079><c> pattern</c><01:00:28.680><c> and</c>

01:00:28.870 --> 01:00:28.880 align:start position:0%
so let's take a look at this pattern and
 

01:00:28.880 --> 01:00:30.789 align:start position:0%
so let's take a look at this pattern and
what<01:00:29.000><c> it's</c><01:00:29.160><c> doing</c><01:00:29.680><c> and</c><01:00:29.920><c> why</c><01:00:30.119><c> this</c><01:00:30.240><c> is</c><01:00:30.440><c> actually</c>

01:00:30.789 --> 01:00:30.799 align:start position:0%
what it's doing and why this is actually
 

01:00:30.799 --> 01:00:32.630 align:start position:0%
what it's doing and why this is actually
doing<01:00:31.119><c> the</c><01:00:31.319><c> separation</c><01:00:32.200><c> that</c><01:00:32.319><c> they</c><01:00:32.440><c> are</c>

01:00:32.630 --> 01:00:32.640 align:start position:0%
doing the separation that they are
 

01:00:32.640 --> 01:00:34.910 align:start position:0%
doing the separation that they are
looking<01:00:32.880><c> for</c><01:00:33.839><c> okay</c><01:00:33.960><c> so</c><01:00:34.079><c> I've</c><01:00:34.240><c> copy</c><01:00:34.480><c> pasted</c><01:00:34.799><c> the</c>

01:00:34.910 --> 01:00:34.920 align:start position:0%
looking for okay so I've copy pasted the
 

01:00:34.920 --> 01:00:37.109 align:start position:0%
looking for okay so I've copy pasted the
pattern<01:00:35.280><c> here</c><01:00:35.680><c> to</c><01:00:35.839><c> our</c><01:00:35.960><c> jupit</c><01:00:36.319><c> notebook</c><01:00:36.960><c> where</c>

01:00:37.109 --> 01:00:37.119 align:start position:0%
pattern here to our jupit notebook where
 

01:00:37.119 --> 01:00:39.230 align:start position:0%
pattern here to our jupit notebook where
we<01:00:37.280><c> left</c><01:00:37.520><c> off</c><01:00:38.240><c> and</c><01:00:38.400><c> let's</c><01:00:38.680><c> take</c><01:00:38.839><c> this</c><01:00:39.000><c> pattern</c>

01:00:39.230 --> 01:00:39.240 align:start position:0%
we left off and let's take this pattern
 

01:00:39.240 --> 01:00:42.109 align:start position:0%
we left off and let's take this pattern
for<01:00:39.319><c> a</c><01:00:39.720><c> spin</c><01:00:40.720><c> so</c><01:00:40.880><c> in</c><01:00:41.039><c> the</c><01:00:41.160><c> exact</c><01:00:41.440><c> same</c><01:00:41.640><c> way</c><01:00:41.880><c> that</c>

01:00:42.109 --> 01:00:42.119 align:start position:0%
for a spin so in the exact same way that
 

01:00:42.119 --> 01:00:44.069 align:start position:0%
for a spin so in the exact same way that
their<01:00:42.359><c> code</c><01:00:42.640><c> does</c><01:00:43.280><c> we're</c><01:00:43.440><c> going</c><01:00:43.559><c> to</c><01:00:43.720><c> call</c><01:00:43.880><c> an</c>

01:00:44.069 --> 01:00:44.079 align:start position:0%
their code does we're going to call an
 

01:00:44.079 --> 01:00:47.270 align:start position:0%
their code does we're going to call an
re.<01:00:44.640><c> findall</c><01:00:45.640><c> for</c><01:00:45.920><c> this</c><01:00:46.119><c> pattern</c><01:00:46.880><c> on</c><01:00:47.119><c> any</c>

01:00:47.270 --> 01:00:47.280 align:start position:0%
re. findall for this pattern on any
 

01:00:47.280 --> 01:00:49.349 align:start position:0%
re. findall for this pattern on any
arbitrary<01:00:47.760><c> string</c><01:00:48.039><c> that</c><01:00:48.119><c> we</c><01:00:48.240><c> are</c><01:00:48.359><c> interested</c>

01:00:49.349 --> 01:00:49.359 align:start position:0%
arbitrary string that we are interested
 

01:00:49.359 --> 01:00:50.589 align:start position:0%
arbitrary string that we are interested
so<01:00:49.520><c> this</c><01:00:49.599><c> is</c><01:00:49.720><c> the</c><01:00:49.839><c> string</c><01:00:50.119><c> that</c><01:00:50.200><c> we</c><01:00:50.319><c> want</c><01:00:50.440><c> to</c>

01:00:50.589 --> 01:00:50.599 align:start position:0%
so this is the string that we want to
 

01:00:50.599 --> 01:00:55.230 align:start position:0%
so this is the string that we want to
encode<01:00:51.039><c> into</c><01:00:51.280><c> tokens</c><01:00:52.599><c> um</c><01:00:53.599><c> to</c><01:00:53.799><c> feed</c><01:00:54.079><c> into</c><01:00:54.520><c> n</c><01:00:54.640><c> llm</c>

01:00:55.230 --> 01:00:55.240 align:start position:0%
encode into tokens um to feed into n llm
 

01:00:55.240 --> 01:00:59.029 align:start position:0%
encode into tokens um to feed into n llm
like<01:00:55.799><c> gpt2</c><01:00:56.799><c> so</c><01:00:57.079><c> what</c><01:00:57.240><c> exactly</c><01:00:57.640><c> is</c><01:00:57.760><c> this</c><01:00:58.039><c> doing</c>

01:00:59.029 --> 01:00:59.039 align:start position:0%
like gpt2 so what exactly is this doing
 

01:00:59.039 --> 01:01:01.029 align:start position:0%
like gpt2 so what exactly is this doing
well<01:00:59.240><c> re.</c><01:00:59.799><c> findall</c><01:01:00.280><c> will</c><01:01:00.440><c> take</c><01:01:00.599><c> this</c><01:01:00.720><c> pattern</c>

01:01:01.029 --> 01:01:01.039 align:start position:0%
well re. findall will take this pattern
 

01:01:01.039 --> 01:01:02.829 align:start position:0%
well re. findall will take this pattern
and<01:01:01.119><c> try</c><01:01:01.280><c> to</c><01:01:01.400><c> match</c><01:01:01.559><c> it</c><01:01:01.760><c> against</c><01:01:01.960><c> a</c>

01:01:02.829 --> 01:01:02.839 align:start position:0%
and try to match it against a
 

01:01:02.839 --> 01:01:06.109 align:start position:0%
and try to match it against a
string<01:01:03.880><c> um</c><01:01:04.880><c> the</c><01:01:05.000><c> way</c><01:01:05.200><c> this</c><01:01:05.359><c> works</c><01:01:05.760><c> is</c><01:01:05.920><c> that</c><01:01:06.039><c> you</c>

01:01:06.109 --> 01:01:06.119 align:start position:0%
string um the way this works is that you
 

01:01:06.119 --> 01:01:07.950 align:start position:0%
string um the way this works is that you
are<01:01:06.280><c> going</c><01:01:06.520><c> from</c><01:01:06.760><c> left</c><01:01:07.119><c> to</c><01:01:07.400><c> right</c><01:01:07.680><c> in</c><01:01:07.799><c> the</c>

01:01:07.950 --> 01:01:07.960 align:start position:0%
are going from left to right in the
 

01:01:07.960 --> 01:01:10.270 align:start position:0%
are going from left to right in the
string<01:01:08.480><c> and</c><01:01:08.599><c> you're</c><01:01:08.760><c> trying</c><01:01:09.000><c> to</c><01:01:09.240><c> match</c><01:01:09.880><c> the</c>

01:01:10.270 --> 01:01:10.280 align:start position:0%
string and you're trying to match the
 

01:01:10.280 --> 01:01:13.789 align:start position:0%
string and you're trying to match the
pattern<01:01:11.280><c> and</c><01:01:11.520><c> R.F</c><01:01:12.520><c> find</c><01:01:12.799><c> all</c><01:01:13.200><c> will</c><01:01:13.440><c> get</c><01:01:13.640><c> all</c>

01:01:13.789 --> 01:01:13.799 align:start position:0%
pattern and R.F find all will get all
 

01:01:13.799 --> 01:01:16.309 align:start position:0%
pattern and R.F find all will get all
the<01:01:14.000><c> occurrences</c><01:01:14.920><c> and</c><01:01:15.079><c> organize</c><01:01:15.480><c> them</c><01:01:15.599><c> into</c><01:01:15.799><c> a</c>

01:01:16.309 --> 01:01:16.319 align:start position:0%
the occurrences and organize them into a
 

01:01:16.319 --> 01:01:19.150 align:start position:0%
the occurrences and organize them into a
list<01:01:17.319><c> now</c><01:01:17.440><c> when</c><01:01:17.520><c> you</c><01:01:17.640><c> look</c><01:01:17.760><c> at</c><01:01:17.920><c> the</c><01:01:18.440><c> um</c><01:01:19.039><c> when</c>

01:01:19.150 --> 01:01:19.160 align:start position:0%
list now when you look at the um when
 

01:01:19.160 --> 01:01:20.870 align:start position:0%
list now when you look at the um when
you<01:01:19.280><c> look</c><01:01:19.559><c> at</c><01:01:19.760><c> this</c><01:01:19.960><c> pattern</c><01:01:20.440><c> first</c><01:01:20.599><c> of</c><01:01:20.720><c> all</c>

01:01:20.870 --> 01:01:20.880 align:start position:0%
you look at this pattern first of all
 

01:01:20.880 --> 01:01:23.950 align:start position:0%
you look at this pattern first of all
notice<01:01:21.200><c> that</c><01:01:21.319><c> this</c><01:01:21.440><c> is</c><01:01:21.640><c> a</c><01:01:21.839><c> raw</c><01:01:22.200><c> string</c><01:01:23.079><c> um</c><01:01:23.799><c> and</c>

01:01:23.950 --> 01:01:23.960 align:start position:0%
notice that this is a raw string um and
 

01:01:23.960 --> 01:01:26.309 align:start position:0%
notice that this is a raw string um and
then<01:01:24.079><c> these</c><01:01:24.240><c> are</c><01:01:24.720><c> three</c><01:01:25.559><c> double</c><01:01:25.880><c> quotes</c><01:01:26.240><c> just</c>

01:01:26.309 --> 01:01:26.319 align:start position:0%
then these are three double quotes just
 

01:01:26.319 --> 01:01:28.829 align:start position:0%
then these are three double quotes just
to<01:01:26.520><c> start</c><01:01:26.880><c> the</c><01:01:27.000><c> string</c><01:01:27.760><c> so</c><01:01:28.000><c> really</c><01:01:28.280><c> the</c><01:01:28.440><c> string</c>

01:01:28.829 --> 01:01:28.839 align:start position:0%
to start the string so really the string
 

01:01:28.839 --> 01:01:31.309 align:start position:0%
to start the string so really the string
itself<01:01:29.359><c> this</c><01:01:29.480><c> is</c><01:01:29.599><c> the</c><01:01:29.720><c> pattern</c><01:01:30.079><c> itself</c>

01:01:31.309 --> 01:01:31.319 align:start position:0%
itself this is the pattern itself
 

01:01:31.319 --> 01:01:34.069 align:start position:0%
itself this is the pattern itself
right<01:01:32.319><c> and</c><01:01:32.760><c> notice</c><01:01:33.119><c> that</c><01:01:33.280><c> it's</c><01:01:33.480><c> made</c><01:01:33.680><c> up</c><01:01:33.839><c> of</c><01:01:33.960><c> a</c>

01:01:34.069 --> 01:01:34.079 align:start position:0%
right and notice that it's made up of a
 

01:01:34.079 --> 01:01:36.470 align:start position:0%
right and notice that it's made up of a
lot<01:01:34.200><c> of</c><01:01:34.559><c> ores</c><01:01:35.200><c> so</c><01:01:35.400><c> see</c><01:01:35.599><c> these</c><01:01:35.760><c> vertical</c><01:01:36.119><c> bars</c>

01:01:36.470 --> 01:01:36.480 align:start position:0%
lot of ores so see these vertical bars
 

01:01:36.480 --> 01:01:40.190 align:start position:0%
lot of ores so see these vertical bars
those<01:01:36.599><c> are</c><01:01:36.799><c> ores</c><01:01:37.440><c> in</c><01:01:37.640><c> reg</c><01:01:38.359><c> X</c><01:01:39.359><c> and</c><01:01:39.480><c> so</c><01:01:39.880><c> you</c><01:01:40.039><c> go</c>

01:01:40.190 --> 01:01:40.200 align:start position:0%
those are ores in reg X and so you go
 

01:01:40.200 --> 01:01:41.470 align:start position:0%
those are ores in reg X and so you go
from<01:01:40.359><c> left</c><01:01:40.559><c> to</c><01:01:40.720><c> right</c><01:01:40.880><c> in</c><01:01:41.000><c> this</c><01:01:41.119><c> pattern</c><01:01:41.359><c> and</c>

01:01:41.470 --> 01:01:41.480 align:start position:0%
from left to right in this pattern and
 

01:01:41.480 --> 01:01:43.150 align:start position:0%
from left to right in this pattern and
try<01:01:41.640><c> to</c><01:01:41.799><c> match</c><01:01:42.000><c> it</c><01:01:42.200><c> against</c><01:01:42.440><c> the</c><01:01:42.599><c> string</c>

01:01:43.150 --> 01:01:43.160 align:start position:0%
try to match it against the string
 

01:01:43.160 --> 01:01:46.430 align:start position:0%
try to match it against the string
wherever<01:01:43.480><c> you</c><01:01:43.640><c> are</c><01:01:44.559><c> so</c><01:01:44.920><c> we</c><01:01:45.079><c> have</c><01:01:45.799><c> hello</c><01:01:46.359><c> and</c>

01:01:46.430 --> 01:01:46.440 align:start position:0%
wherever you are so we have hello and
 

01:01:46.440 --> 01:01:48.230 align:start position:0%
wherever you are so we have hello and
we're<01:01:46.559><c> going</c><01:01:46.640><c> to</c><01:01:46.760><c> try</c><01:01:46.920><c> to</c><01:01:47.039><c> match</c><01:01:47.240><c> it</c><01:01:47.960><c> well</c><01:01:48.119><c> it's</c>

01:01:48.230 --> 01:01:48.240 align:start position:0%
we're going to try to match it well it's
 

01:01:48.240 --> 01:01:50.789 align:start position:0%
we're going to try to match it well it's
not<01:01:48.559><c> apostrophe</c><01:01:49.039><c> s</c><01:01:49.480><c> it's</c><01:01:49.640><c> not</c><01:01:49.880><c> apostrophe</c><01:01:50.400><c> t</c>

01:01:50.789 --> 01:01:50.799 align:start position:0%
not apostrophe s it's not apostrophe t
 

01:01:50.799 --> 01:01:53.950 align:start position:0%
not apostrophe s it's not apostrophe t
or<01:01:51.000><c> any</c><01:01:51.160><c> of</c><01:01:51.520><c> these</c><01:01:52.520><c> but</c><01:01:52.720><c> it</c><01:01:52.880><c> is</c><01:01:53.160><c> an</c><01:01:53.440><c> optional</c>

01:01:53.950 --> 01:01:53.960 align:start position:0%
or any of these but it is an optional
 

01:01:53.960 --> 01:01:58.109 align:start position:0%
or any of these but it is an optional
space<01:01:54.839><c> followed</c><01:01:55.279><c> by-</c><01:01:56.000><c> P</c><01:01:56.240><c> of</c><01:01:57.000><c> uh</c><01:01:57.160><c> sorry</c><01:01:57.400><c> SL</c><01:01:57.760><c> P</c><01:01:57.960><c> of</c>

01:01:58.109 --> 01:01:58.119 align:start position:0%
space followed by- P of uh sorry SL P of
 

01:01:58.119 --> 01:02:02.309 align:start position:0%
space followed by- P of uh sorry SL P of
L<01:01:59.000><c> one</c><01:01:59.240><c> or</c><01:01:59.400><c> more</c><01:01:59.640><c> times</c><01:02:00.240><c> what</c><01:02:00.359><c> is/</c><01:02:00.799><c> P</c><01:02:00.920><c> of</c><01:02:01.039><c> L</c><01:02:01.960><c> it</c>

01:02:02.309 --> 01:02:02.319 align:start position:0%
L one or more times what is/ P of L it
 

01:02:02.319 --> 01:02:04.710 align:start position:0%
L one or more times what is/ P of L it
is<01:02:03.319><c> coming</c><01:02:03.559><c> to</c><01:02:03.760><c> some</c><01:02:03.960><c> documentation</c><01:02:04.440><c> that</c><01:02:04.599><c> I</c>

01:02:04.710 --> 01:02:04.720 align:start position:0%
is coming to some documentation that I
 

01:02:04.720 --> 01:02:07.990 align:start position:0%
is coming to some documentation that I
found<01:02:05.760><c> um</c><01:02:06.760><c> there</c><01:02:06.920><c> might</c><01:02:07.039><c> be</c><01:02:07.160><c> other</c><01:02:07.319><c> sources</c><01:02:07.680><c> as</c>

01:02:07.990 --> 01:02:08.000 align:start position:0%
found um there might be other sources as
 

01:02:08.000 --> 01:02:11.589 align:start position:0%
found um there might be other sources as
well<01:02:09.000><c> uh</c><01:02:09.160><c> SLP</c><01:02:10.160><c> is</c><01:02:10.559><c> a</c><01:02:10.720><c> letter</c><01:02:11.160><c> any</c><01:02:11.359><c> kind</c><01:02:11.480><c> of</c>

01:02:11.589 --> 01:02:11.599 align:start position:0%
well uh SLP is a letter any kind of
 

01:02:11.599 --> 01:02:15.029 align:start position:0%
well uh SLP is a letter any kind of
letter<01:02:11.839><c> from</c><01:02:12.039><c> any</c><01:02:12.720><c> language</c><01:02:13.720><c> and</c><01:02:14.319><c> hello</c><01:02:14.880><c> is</c>

01:02:15.029 --> 01:02:15.039 align:start position:0%
letter from any language and hello is
 

01:02:15.039 --> 01:02:19.510 align:start position:0%
letter from any language and hello is
made<01:02:15.200><c> up</c><01:02:15.319><c> of</c><01:02:15.480><c> letters</c><01:02:16.000><c> h</c><01:02:16.240><c> e</c><01:02:16.440><c> l</c><01:02:17.319><c> Etc</c><01:02:18.319><c> so</c><01:02:18.960><c> optional</c>

01:02:19.510 --> 01:02:19.520 align:start position:0%
made up of letters h e l Etc so optional
 

01:02:19.520 --> 01:02:21.549 align:start position:0%
made up of letters h e l Etc so optional
space<01:02:20.119><c> followed</c><01:02:20.520><c> by</c><01:02:20.680><c> a</c><01:02:20.799><c> bunch</c><01:02:21.000><c> of</c><01:02:21.119><c> letters</c><01:02:21.440><c> one</c>

01:02:21.549 --> 01:02:21.559 align:start position:0%
space followed by a bunch of letters one
 

01:02:21.559 --> 01:02:24.710 align:start position:0%
space followed by a bunch of letters one
or<01:02:21.680><c> more</c><01:02:21.920><c> letters</c><01:02:22.640><c> is</c><01:02:22.799><c> going</c><01:02:22.960><c> to</c><01:02:23.160><c> match</c><01:02:23.640><c> hello</c>

01:02:24.710 --> 01:02:24.720 align:start position:0%
or more letters is going to match hello
 

01:02:24.720 --> 01:02:27.069 align:start position:0%
or more letters is going to match hello
but<01:02:24.880><c> then</c><01:02:25.000><c> the</c><01:02:25.160><c> match</c><01:02:25.559><c> ends</c><01:02:26.319><c> because</c><01:02:26.599><c> a</c><01:02:26.839><c> white</c>

01:02:27.069 --> 01:02:27.079 align:start position:0%
but then the match ends because a white
 

01:02:27.079 --> 01:02:31.069 align:start position:0%
but then the match ends because a white
space<01:02:27.480><c> is</c><01:02:27.640><c> not</c><01:02:27.839><c> a</c><01:02:28.000><c> letter</c><01:02:28.839><c> so</c><01:02:29.720><c> from</c><01:02:29.960><c> there</c><01:02:30.119><c> on</c>

01:02:31.069 --> 01:02:31.079 align:start position:0%
space is not a letter so from there on
 

01:02:31.079 --> 01:02:33.630 align:start position:0%
space is not a letter so from there on
begins<01:02:31.480><c> a</c><01:02:31.680><c> new</c><01:02:32.400><c> sort</c><01:02:32.520><c> of</c><01:02:32.720><c> attempt</c><01:02:33.119><c> to</c><01:02:33.319><c> match</c>

01:02:33.630 --> 01:02:33.640 align:start position:0%
begins a new sort of attempt to match
 

01:02:33.640 --> 01:02:36.430 align:start position:0%
begins a new sort of attempt to match
against<01:02:34.160><c> the</c><01:02:34.319><c> string</c><01:02:34.760><c> again</c><01:02:35.760><c> and</c><01:02:35.880><c> starting</c><01:02:36.240><c> in</c>

01:02:36.430 --> 01:02:36.440 align:start position:0%
against the string again and starting in
 

01:02:36.440 --> 01:02:38.069 align:start position:0%
against the string again and starting in
here<01:02:36.960><c> we're</c><01:02:37.119><c> going</c><01:02:37.200><c> to</c><01:02:37.359><c> skip</c><01:02:37.640><c> over</c><01:02:37.839><c> all</c><01:02:37.960><c> of</c>

01:02:38.069 --> 01:02:38.079 align:start position:0%
here we're going to skip over all of
 

01:02:38.079 --> 01:02:40.150 align:start position:0%
here we're going to skip over all of
these<01:02:38.359><c> again</c><01:02:39.119><c> until</c><01:02:39.359><c> we</c><01:02:39.480><c> get</c><01:02:39.599><c> to</c><01:02:39.760><c> the</c><01:02:39.880><c> exact</c>

01:02:40.150 --> 01:02:40.160 align:start position:0%
these again until we get to the exact
 

01:02:40.160 --> 01:02:42.309 align:start position:0%
these again until we get to the exact
same<01:02:40.359><c> Point</c><01:02:40.720><c> again</c><01:02:41.559><c> and</c><01:02:41.680><c> we</c><01:02:41.799><c> see</c><01:02:42.000><c> that</c><01:02:42.160><c> there's</c>

01:02:42.309 --> 01:02:42.319 align:start position:0%
same Point again and we see that there's
 

01:02:42.319 --> 01:02:44.269 align:start position:0%
same Point again and we see that there's
an<01:02:42.520><c> optional</c><01:02:42.960><c> space</c><01:02:43.520><c> this</c><01:02:43.599><c> is</c><01:02:43.760><c> the</c><01:02:43.920><c> optional</c>

01:02:44.269 --> 01:02:44.279 align:start position:0%
an optional space this is the optional
 

01:02:44.279 --> 01:02:46.230 align:start position:0%
an optional space this is the optional
space<01:02:44.839><c> followed</c><01:02:45.240><c> by</c><01:02:45.319><c> a</c><01:02:45.400><c> bunch</c><01:02:45.559><c> of</c><01:02:45.680><c> letters</c><01:02:46.119><c> one</c>

01:02:46.230 --> 01:02:46.240 align:start position:0%
space followed by a bunch of letters one
 

01:02:46.240 --> 01:02:48.710 align:start position:0%
space followed by a bunch of letters one
or<01:02:46.400><c> more</c><01:02:46.559><c> of</c><01:02:46.680><c> them</c><01:02:47.119><c> and</c><01:02:47.200><c> so</c><01:02:47.400><c> that</c><01:02:47.559><c> matches</c><01:02:48.559><c> so</c>

01:02:48.710 --> 01:02:48.720 align:start position:0%
or more of them and so that matches so
 

01:02:48.720 --> 01:02:51.990 align:start position:0%
or more of them and so that matches so
when<01:02:48.839><c> we</c><01:02:49.000><c> run</c><01:02:49.279><c> this</c><01:02:50.119><c> we</c><01:02:50.319><c> get</c><01:02:50.839><c> a</c><01:02:51.039><c> list</c><01:02:51.400><c> of</c><01:02:51.680><c> two</c>

01:02:51.990 --> 01:02:52.000 align:start position:0%
when we run this we get a list of two
 

01:02:52.000 --> 01:02:55.710 align:start position:0%
when we run this we get a list of two
elements<01:02:52.599><c> hello</c><01:02:53.079><c> and</c><01:02:53.240><c> then</c><01:02:53.680><c> space</c><01:02:54.000><c> world</c>

01:02:55.710 --> 01:02:55.720 align:start position:0%
elements hello and then space world
 

01:02:55.720 --> 01:02:58.870 align:start position:0%
elements hello and then space world
so<01:02:56.480><c> how</c><01:02:56.599><c> are</c><01:02:56.799><c> you</c><01:02:57.039><c> if</c><01:02:57.200><c> we</c><01:02:57.400><c> add</c><01:02:57.599><c> more</c><01:02:57.799><c> letters</c><01:02:58.760><c> we</c>

01:02:58.870 --> 01:02:58.880 align:start position:0%
so how are you if we add more letters we
 

01:02:58.880 --> 01:03:01.589 align:start position:0%
so how are you if we add more letters we
would<01:02:59.079><c> just</c><01:02:59.200><c> get</c><01:02:59.359><c> them</c><01:02:59.520><c> like</c><01:03:00.200><c> this</c><01:03:01.200><c> now</c><01:03:01.480><c> what</c>

01:03:01.589 --> 01:03:01.599 align:start position:0%
would just get them like this now what
 

01:03:01.599 --> 01:03:03.630 align:start position:0%
would just get them like this now what
is<01:03:01.720><c> this</c><01:03:01.839><c> doing</c><01:03:02.079><c> and</c><01:03:02.200><c> why</c><01:03:02.359><c> is</c><01:03:02.480><c> this</c><01:03:02.640><c> important</c>

01:03:03.630 --> 01:03:03.640 align:start position:0%
is this doing and why is this important
 

01:03:03.640 --> 01:03:05.910 align:start position:0%
is this doing and why is this important
we<01:03:03.760><c> are</c><01:03:03.960><c> taking</c><01:03:04.319><c> our</c><01:03:04.720><c> string</c><01:03:05.400><c> and</c><01:03:05.520><c> instead</c><01:03:05.760><c> of</c>

01:03:05.910 --> 01:03:05.920 align:start position:0%
we are taking our string and instead of
 

01:03:05.920 --> 01:03:08.990 align:start position:0%
we are taking our string and instead of
directly<01:03:06.480><c> encoding</c><01:03:07.000><c> it</c><01:03:07.799><c> um</c><01:03:08.240><c> for</c>

01:03:08.990 --> 01:03:09.000 align:start position:0%
directly encoding it um for
 

01:03:09.000 --> 01:03:11.390 align:start position:0%
directly encoding it um for
tokenization<01:03:10.000><c> we</c><01:03:10.160><c> are</c><01:03:10.480><c> first</c><01:03:10.839><c> splitting</c><01:03:11.240><c> it</c>

01:03:11.390 --> 01:03:11.400 align:start position:0%
tokenization we are first splitting it
 

01:03:11.400 --> 01:03:13.470 align:start position:0%
tokenization we are first splitting it
up<01:03:12.200><c> and</c><01:03:12.440><c> when</c><01:03:12.559><c> you</c><01:03:12.720><c> actually</c><01:03:12.960><c> step</c><01:03:13.279><c> through</c>

01:03:13.470 --> 01:03:13.480 align:start position:0%
up and when you actually step through
 

01:03:13.480 --> 01:03:15.309 align:start position:0%
up and when you actually step through
the<01:03:13.680><c> code</c><01:03:14.119><c> and</c><01:03:14.279><c> we'll</c><01:03:14.480><c> do</c><01:03:14.680><c> that</c><01:03:14.799><c> in</c><01:03:14.880><c> a</c><01:03:15.000><c> bit</c><01:03:15.160><c> more</c>

01:03:15.309 --> 01:03:15.319 align:start position:0%
the code and we'll do that in a bit more
 

01:03:15.319 --> 01:03:17.349 align:start position:0%
the code and we'll do that in a bit more
detail<01:03:16.279><c> what</c><01:03:16.480><c> really</c><01:03:16.640><c> is</c><01:03:16.760><c> doing</c><01:03:16.960><c> on</c><01:03:17.039><c> a</c><01:03:17.160><c> high</c>

01:03:17.349 --> 01:03:17.359 align:start position:0%
detail what really is doing on a high
 

01:03:17.359 --> 01:03:20.910 align:start position:0%
detail what really is doing on a high
level<01:03:17.760><c> is</c><01:03:17.960><c> that</c><01:03:18.680><c> it</c><01:03:18.880><c> first</c><01:03:19.760><c> splits</c><01:03:20.200><c> your</c><01:03:20.440><c> text</c>

01:03:20.910 --> 01:03:20.920 align:start position:0%
level is that it first splits your text
 

01:03:20.920 --> 01:03:24.630 align:start position:0%
level is that it first splits your text
into<01:03:21.799><c> a</c><01:03:22.000><c> list</c><01:03:22.240><c> of</c><01:03:22.440><c> texts</c><01:03:23.119><c> just</c><01:03:23.319><c> like</c><01:03:23.520><c> this</c><01:03:23.680><c> one</c>

01:03:24.630 --> 01:03:24.640 align:start position:0%
into a list of texts just like this one
 

01:03:24.640 --> 01:03:26.549 align:start position:0%
into a list of texts just like this one
and<01:03:24.880><c> all</c><01:03:25.160><c> these</c><01:03:25.359><c> elements</c><01:03:25.760><c> of</c><01:03:25.920><c> this</c><01:03:26.119><c> list</c><01:03:26.359><c> are</c>

01:03:26.549 --> 01:03:26.559 align:start position:0%
and all these elements of this list are
 

01:03:26.559 --> 01:03:29.269 align:start position:0%
and all these elements of this list are
processed<01:03:27.039><c> independently</c><01:03:27.640><c> by</c><01:03:27.760><c> the</c><01:03:28.279><c> tokenizer</c>

01:03:29.269 --> 01:03:29.279 align:start position:0%
processed independently by the tokenizer
 

01:03:29.279 --> 01:03:30.750 align:start position:0%
processed independently by the tokenizer
and<01:03:29.559><c> all</c><01:03:29.680><c> of</c><01:03:29.839><c> the</c><01:03:30.000><c> results</c><01:03:30.440><c> of</c><01:03:30.599><c> that</c>

01:03:30.750 --> 01:03:30.760 align:start position:0%
and all of the results of that
 

01:03:30.760 --> 01:03:32.269 align:start position:0%
and all of the results of that
processing<01:03:31.240><c> are</c><01:03:31.440><c> simply</c>

01:03:32.269 --> 01:03:32.279 align:start position:0%
processing are simply
 

01:03:32.279 --> 01:03:35.910 align:start position:0%
processing are simply
concatenated<01:03:33.279><c> so</c><01:03:33.680><c> hello</c><01:03:34.359><c> world</c><01:03:35.359><c> oh</c><01:03:35.599><c> I</c><01:03:35.839><c> I</c>

01:03:35.910 --> 01:03:35.920 align:start position:0%
concatenated so hello world oh I I
 

01:03:35.920 --> 01:03:39.630 align:start position:0%
concatenated so hello world oh I I
missed<01:03:36.640><c> how</c><01:03:37.640><c> hello</c><01:03:37.960><c> world</c><01:03:38.480><c> how</c><01:03:38.720><c> are</c><01:03:38.960><c> you</c><01:03:39.520><c> we</c>

01:03:39.630 --> 01:03:39.640 align:start position:0%
missed how hello world how are you we
 

01:03:39.640 --> 01:03:41.589 align:start position:0%
missed how hello world how are you we
have<01:03:39.839><c> five</c><01:03:40.039><c> elements</c><01:03:40.319><c> of</c><01:03:40.559><c> list</c><01:03:41.119><c> all</c><01:03:41.279><c> of</c><01:03:41.440><c> these</c>

01:03:41.589 --> 01:03:41.599 align:start position:0%
have five elements of list all of these
 

01:03:41.599 --> 01:03:44.390 align:start position:0%
have five elements of list all of these
will<01:03:42.279><c> independent</c>

01:03:44.390 --> 01:03:44.400 align:start position:0%
will independent
 

01:03:44.400 --> 01:03:46.990 align:start position:0%
will independent
independently<01:03:45.400><c> go</c><01:03:45.599><c> from</c><01:03:45.799><c> text</c><01:03:46.200><c> to</c><01:03:46.359><c> a</c><01:03:46.559><c> token</c>

01:03:46.990 --> 01:03:47.000 align:start position:0%
independently go from text to a token
 

01:03:47.000 --> 01:03:49.190 align:start position:0%
independently go from text to a token
sequence<01:03:48.000><c> and</c><01:03:48.119><c> then</c><01:03:48.319><c> that</c><01:03:48.480><c> token</c><01:03:48.720><c> sequence</c><01:03:49.039><c> is</c>

01:03:49.190 --> 01:03:49.200 align:start position:0%
sequence and then that token sequence is
 

01:03:49.200 --> 01:03:50.789 align:start position:0%
sequence and then that token sequence is
going<01:03:49.319><c> to</c><01:03:49.480><c> be</c><01:03:49.880><c> concatenated</c><01:03:50.480><c> it's</c><01:03:50.599><c> all</c><01:03:50.720><c> going</c>

01:03:50.789 --> 01:03:50.799 align:start position:0%
going to be concatenated it's all going
 

01:03:50.799 --> 01:03:54.349 align:start position:0%
going to be concatenated it's all going
to<01:03:50.920><c> be</c><01:03:51.039><c> joined</c><01:03:51.799><c> up</c><01:03:52.799><c> and</c><01:03:53.599><c> roughly</c><01:03:53.920><c> speaking</c>

01:03:54.349 --> 01:03:54.359 align:start position:0%
to be joined up and roughly speaking
 

01:03:54.359 --> 01:03:56.109 align:start position:0%
to be joined up and roughly speaking
what<01:03:54.520><c> that</c><01:03:54.680><c> does</c><01:03:55.000><c> is</c><01:03:55.319><c> you're</c><01:03:55.559><c> only</c><01:03:55.839><c> ever</c>

01:03:56.109 --> 01:03:56.119 align:start position:0%
what that does is you're only ever
 

01:03:56.119 --> 01:03:58.430 align:start position:0%
what that does is you're only ever
finding<01:03:56.480><c> merges</c><01:03:57.400><c> between</c><01:03:57.760><c> the</c><01:03:57.920><c> elements</c><01:03:58.279><c> of</c>

01:03:58.430 --> 01:03:58.440 align:start position:0%
finding merges between the elements of
 

01:03:58.440 --> 01:04:00.349 align:start position:0%
finding merges between the elements of
this<01:03:58.640><c> list</c><01:03:59.200><c> so</c><01:03:59.359><c> you</c><01:03:59.480><c> can</c><01:03:59.640><c> only</c><01:03:59.839><c> ever</c><01:04:00.039><c> consider</c>

01:04:00.349 --> 01:04:00.359 align:start position:0%
this list so you can only ever consider
 

01:04:00.359 --> 01:04:01.710 align:start position:0%
this list so you can only ever consider
merges<01:04:00.760><c> within</c><01:04:01.119><c> every</c><01:04:01.319><c> one</c><01:04:01.440><c> of</c><01:04:01.559><c> these</c>

01:04:01.710 --> 01:04:01.720 align:start position:0%
merges within every one of these
 

01:04:01.720 --> 01:04:03.230 align:start position:0%
merges within every one of these
elements<01:04:02.039><c> in</c>

01:04:03.230 --> 01:04:03.240 align:start position:0%
elements in
 

01:04:03.240 --> 01:04:06.309 align:start position:0%
elements in
individually<01:04:04.240><c> and</c><01:04:04.799><c> um</c><01:04:05.720><c> after</c><01:04:05.960><c> you've</c><01:04:06.160><c> done</c>

01:04:06.309 --> 01:04:06.319 align:start position:0%
individually and um after you've done
 

01:04:06.319 --> 01:04:07.910 align:start position:0%
individually and um after you've done
all<01:04:06.440><c> the</c><01:04:06.640><c> possible</c><01:04:06.920><c> merging</c><01:04:07.480><c> for</c><01:04:07.680><c> all</c><01:04:07.799><c> of</c>

01:04:07.910 --> 01:04:07.920 align:start position:0%
all the possible merging for all of
 

01:04:07.920 --> 01:04:09.870 align:start position:0%
all the possible merging for all of
these<01:04:08.079><c> elements</c><01:04:08.480><c> individually</c><01:04:09.400><c> the</c><01:04:09.559><c> results</c>

01:04:09.870 --> 01:04:09.880 align:start position:0%
these elements individually the results
 

01:04:09.880 --> 01:04:13.630 align:start position:0%
these elements individually the results
of<01:04:10.039><c> all</c><01:04:10.240><c> that</c><01:04:10.440><c> will</c><01:04:10.640><c> be</c><01:04:11.319><c> joined</c><01:04:12.319><c> um</c><01:04:12.880><c> by</c>

01:04:13.630 --> 01:04:13.640 align:start position:0%
of all that will be joined um by
 

01:04:13.640 --> 01:04:16.230 align:start position:0%
of all that will be joined um by
concatenation<01:04:14.640><c> and</c><01:04:14.799><c> so</c><01:04:15.119><c> you</c><01:04:15.240><c> are</c><01:04:15.480><c> basically</c>

01:04:16.230 --> 01:04:16.240 align:start position:0%
concatenation and so you are basically
 

01:04:16.240 --> 01:04:18.390 align:start position:0%
concatenation and so you are basically
what<01:04:16.440><c> what</c><01:04:16.640><c> you're</c><01:04:16.839><c> doing</c><01:04:17.200><c> effectively</c><01:04:17.839><c> is</c>

01:04:18.390 --> 01:04:18.400 align:start position:0%
what what you're doing effectively is
 

01:04:18.400 --> 01:04:20.990 align:start position:0%
what what you're doing effectively is
you<01:04:18.520><c> are</c><01:04:18.720><c> never</c><01:04:18.960><c> going</c><01:04:19.079><c> to</c><01:04:19.240><c> be</c><01:04:19.480><c> merging</c><01:04:20.119><c> this</c><01:04:20.319><c> e</c>

01:04:20.990 --> 01:04:21.000 align:start position:0%
you are never going to be merging this e
 

01:04:21.000 --> 01:04:23.190 align:start position:0%
you are never going to be merging this e
with<01:04:21.319><c> this</c><01:04:21.599><c> space</c><01:04:22.520><c> because</c><01:04:22.720><c> they</c><01:04:22.839><c> are</c><01:04:22.960><c> now</c>

01:04:23.190 --> 01:04:23.200 align:start position:0%
with this space because they are now
 

01:04:23.200 --> 01:04:25.069 align:start position:0%
with this space because they are now
parts<01:04:23.440><c> of</c><01:04:23.799><c> the</c><01:04:23.920><c> separate</c><01:04:24.319><c> elements</c><01:04:24.720><c> of</c><01:04:24.880><c> this</c>

01:04:25.069 --> 01:04:25.079 align:start position:0%
parts of the separate elements of this
 

01:04:25.079 --> 01:04:27.710 align:start position:0%
parts of the separate elements of this
list<01:04:25.799><c> and</c><01:04:25.920><c> so</c><01:04:26.079><c> you</c><01:04:26.200><c> are</c><01:04:26.400><c> saying</c><01:04:27.240><c> we</c><01:04:27.359><c> are</c><01:04:27.520><c> never</c>

01:04:27.710 --> 01:04:27.720 align:start position:0%
list and so you are saying we are never
 

01:04:27.720 --> 01:04:28.910 align:start position:0%
list and so you are saying we are never
going<01:04:27.839><c> to</c><01:04:27.960><c> merge</c>

01:04:28.910 --> 01:04:28.920 align:start position:0%
going to merge
 

01:04:28.920 --> 01:04:32.029 align:start position:0%
going to merge
eace<01:04:30.079><c> um</c><01:04:31.079><c> because</c><01:04:31.240><c> we're</c><01:04:31.400><c> breaking</c><01:04:31.680><c> it</c><01:04:31.799><c> up</c><01:04:31.920><c> in</c>

01:04:32.029 --> 01:04:32.039 align:start position:0%
eace um because we're breaking it up in
 

01:04:32.039 --> 01:04:35.710 align:start position:0%
eace um because we're breaking it up in
this<01:04:32.599><c> way</c><01:04:33.599><c> so</c><01:04:34.520><c> basically</c><01:04:34.880><c> using</c><01:04:35.160><c> this</c><01:04:35.319><c> regx</c>

01:04:35.710 --> 01:04:35.720 align:start position:0%
this way so basically using this regx
 

01:04:35.720 --> 01:04:37.950 align:start position:0%
this way so basically using this regx
pattern<01:04:36.000><c> to</c><01:04:36.160><c> Chunk</c><01:04:36.480><c> Up</c><01:04:36.640><c> the</c><01:04:36.799><c> text</c><01:04:37.319><c> is</c><01:04:37.480><c> just</c><01:04:37.680><c> one</c>

01:04:37.950 --> 01:04:37.960 align:start position:0%
pattern to Chunk Up the text is just one
 

01:04:37.960 --> 01:04:41.710 align:start position:0%
pattern to Chunk Up the text is just one
way<01:04:38.279><c> of</c><01:04:38.520><c> enforcing</c><01:04:39.520><c> that</c><01:04:39.760><c> some</c><01:04:40.480><c> merges</c><01:04:41.440><c> are</c>

01:04:41.710 --> 01:04:41.720 align:start position:0%
way of enforcing that some merges are
 

01:04:41.720 --> 01:04:43.750 align:start position:0%
way of enforcing that some merges are
not<01:04:41.880><c> to</c><01:04:42.160><c> happen</c><01:04:43.000><c> and</c><01:04:43.079><c> we're</c><01:04:43.200><c> going</c><01:04:43.279><c> to</c><01:04:43.400><c> go</c><01:04:43.520><c> into</c>

01:04:43.750 --> 01:04:43.760 align:start position:0%
not to happen and we're going to go into
 

01:04:43.760 --> 01:04:45.190 align:start position:0%
not to happen and we're going to go into
more<01:04:43.880><c> of</c><01:04:44.079><c> this</c><01:04:44.279><c> text</c><01:04:44.520><c> and</c><01:04:44.640><c> we'll</c><01:04:44.799><c> see</c><01:04:45.000><c> that</c>

01:04:45.190 --> 01:04:45.200 align:start position:0%
more of this text and we'll see that
 

01:04:45.200 --> 01:04:46.230 align:start position:0%
more of this text and we'll see that
what<01:04:45.319><c> this</c><01:04:45.400><c> is</c><01:04:45.520><c> trying</c><01:04:45.680><c> to</c><01:04:45.760><c> do</c><01:04:45.880><c> on</c><01:04:45.960><c> a</c><01:04:46.079><c> high</c>

01:04:46.230 --> 01:04:46.240 align:start position:0%
what this is trying to do on a high
 

01:04:46.240 --> 01:04:47.990 align:start position:0%
what this is trying to do on a high
level<01:04:46.440><c> is</c><01:04:46.720><c> we're</c><01:04:46.880><c> trying</c><01:04:47.119><c> to</c><01:04:47.319><c> not</c><01:04:47.520><c> merge</c>

01:04:47.990 --> 01:04:48.000 align:start position:0%
level is we're trying to not merge
 

01:04:48.000 --> 01:04:50.630 align:start position:0%
level is we're trying to not merge
across<01:04:48.599><c> letters</c><01:04:49.200><c> across</c><01:04:49.559><c> numbers</c><01:04:50.119><c> across</c>

01:04:50.630 --> 01:04:50.640 align:start position:0%
across letters across numbers across
 

01:04:50.640 --> 01:04:53.190 align:start position:0%
across letters across numbers across
punctuation<01:04:51.640><c> and</c><01:04:51.839><c> so</c><01:04:52.000><c> on</c><01:04:52.559><c> so</c><01:04:52.720><c> let's</c><01:04:52.880><c> see</c><01:04:53.079><c> in</c>

01:04:53.190 --> 01:04:53.200 align:start position:0%
punctuation and so on so let's see in
 

01:04:53.200 --> 01:04:54.710 align:start position:0%
punctuation and so on so let's see in
more<01:04:53.359><c> detail</c><01:04:53.680><c> how</c><01:04:53.799><c> that</c><01:04:53.920><c> works</c><01:04:54.359><c> so</c><01:04:54.520><c> let's</c>

01:04:54.710 --> 01:04:54.720 align:start position:0%
more detail how that works so let's
 

01:04:54.720 --> 01:04:57.990 align:start position:0%
more detail how that works so let's
continue<01:04:55.119><c> now</c><01:04:55.880><c> we</c><01:04:56.079><c> have/</c><01:04:56.760><c> P</c><01:04:56.920><c> ofn</c><01:04:57.559><c> if</c><01:04:57.640><c> you</c><01:04:57.760><c> go</c><01:04:57.839><c> to</c>

01:04:57.990 --> 01:04:58.000 align:start position:0%
continue now we have/ P ofn if you go to
 

01:04:58.000 --> 01:05:01.829 align:start position:0%
continue now we have/ P ofn if you go to
the<01:04:58.640><c> documentation</c><01:04:59.640><c> SLP</c><01:05:00.359><c> of</c><01:05:00.680><c> n</c><01:05:01.200><c> is</c><01:05:01.480><c> any</c><01:05:01.720><c> kind</c>

01:05:01.829 --> 01:05:01.839 align:start position:0%
the documentation SLP of n is any kind
 

01:05:01.839 --> 01:05:04.430 align:start position:0%
the documentation SLP of n is any kind
of<01:05:02.119><c> numeric</c><01:05:02.839><c> character</c><01:05:03.279><c> in</c><01:05:03.440><c> any</c><01:05:03.720><c> script</c><01:05:04.279><c> so</c>

01:05:04.430 --> 01:05:04.440 align:start position:0%
of numeric character in any script so
 

01:05:04.440 --> 01:05:06.589 align:start position:0%
of numeric character in any script so
it's<01:05:04.799><c> numbers</c><01:05:05.799><c> so</c><01:05:05.920><c> we</c><01:05:06.039><c> have</c><01:05:06.119><c> an</c><01:05:06.279><c> optional</c>

01:05:06.589 --> 01:05:06.599 align:start position:0%
it's numbers so we have an optional
 

01:05:06.599 --> 01:05:08.109 align:start position:0%
it's numbers so we have an optional
space<01:05:06.839><c> followed</c><01:05:07.119><c> by</c><01:05:07.279><c> numbers</c><01:05:07.839><c> and</c><01:05:08.000><c> those</c>

01:05:08.109 --> 01:05:08.119 align:start position:0%
space followed by numbers and those
 

01:05:08.119 --> 01:05:10.349 align:start position:0%
space followed by numbers and those
would<01:05:08.279><c> be</c><01:05:08.440><c> separated</c><01:05:08.920><c> out</c><01:05:09.640><c> so</c><01:05:09.839><c> letters</c><01:05:10.240><c> and</c>

01:05:10.349 --> 01:05:10.359 align:start position:0%
would be separated out so letters and
 

01:05:10.359 --> 01:05:12.549 align:start position:0%
would be separated out so letters and
numbers<01:05:10.640><c> are</c><01:05:10.760><c> being</c><01:05:10.960><c> separated</c><01:05:11.480><c> so</c><01:05:11.599><c> if</c><01:05:11.720><c> I</c><01:05:11.839><c> do</c>

01:05:12.549 --> 01:05:12.559 align:start position:0%
numbers are being separated so if I do
 

01:05:12.559 --> 01:05:15.829 align:start position:0%
numbers are being separated so if I do
Hello<01:05:12.799><c> World</c><01:05:13.160><c> 123</c><01:05:13.640><c> how</c><01:05:13.799><c> are</c><01:05:14.000><c> you</c><01:05:15.000><c> then</c><01:05:15.359><c> world</c>

01:05:15.829 --> 01:05:15.839 align:start position:0%
Hello World 123 how are you then world
 

01:05:15.839 --> 01:05:17.950 align:start position:0%
Hello World 123 how are you then world
will<01:05:16.039><c> stop</c><01:05:16.319><c> matching</c><01:05:16.680><c> here</c><01:05:16.920><c> because</c><01:05:17.200><c> one</c><01:05:17.799><c> is</c>

01:05:17.950 --> 01:05:17.960 align:start position:0%
will stop matching here because one is
 

01:05:17.960 --> 01:05:20.630 align:start position:0%
will stop matching here because one is
not<01:05:18.119><c> a</c><01:05:18.240><c> letter</c><01:05:18.520><c> anymore</c><01:05:19.480><c> but</c><01:05:19.640><c> one</c><01:05:19.839><c> is</c><01:05:19.960><c> a</c><01:05:20.119><c> number</c>

01:05:20.630 --> 01:05:20.640 align:start position:0%
not a letter anymore but one is a number
 

01:05:20.640 --> 01:05:22.510 align:start position:0%
not a letter anymore but one is a number
so<01:05:20.960><c> this</c><01:05:21.119><c> group</c><01:05:21.359><c> will</c><01:05:21.520><c> match</c><01:05:21.760><c> for</c><01:05:21.960><c> that</c><01:05:22.400><c> and</c>

01:05:22.510 --> 01:05:22.520 align:start position:0%
so this group will match for that and
 

01:05:22.520 --> 01:05:26.549 align:start position:0%
so this group will match for that and
we'll<01:05:22.760><c> get</c><01:05:22.880><c> it</c><01:05:23.039><c> as</c><01:05:23.160><c> a</c><01:05:23.359><c> separate</c><01:05:23.720><c> entity</c>

01:05:26.549 --> 01:05:26.559 align:start position:0%
 
 

01:05:26.559 --> 01:05:28.349 align:start position:0%
 
uh<01:05:26.720><c> let's</c><01:05:26.880><c> see</c><01:05:27.079><c> how</c><01:05:27.240><c> these</c><01:05:27.480><c> apostrophes</c><01:05:28.079><c> work</c>

01:05:28.349 --> 01:05:28.359 align:start position:0%
uh let's see how these apostrophes work
 

01:05:28.359 --> 01:05:30.990 align:start position:0%
uh let's see how these apostrophes work
so<01:05:28.599><c> here</c><01:05:29.279><c> if</c><01:05:29.400><c> we</c><01:05:29.640><c> have</c>

01:05:30.990 --> 01:05:31.000 align:start position:0%
so here if we have
 

01:05:31.000 --> 01:05:35.069 align:start position:0%
so here if we have
um<01:05:32.000><c> uh</c><01:05:32.599><c> Slash</c><01:05:33.240><c> V</c><01:05:33.599><c> or</c><01:05:34.039><c> I</c><01:05:34.119><c> mean</c><01:05:34.359><c> apostrophe</c><01:05:34.799><c> V</c><01:05:35.000><c> as</c>

01:05:35.069 --> 01:05:35.079 align:start position:0%
um uh Slash V or I mean apostrophe V as
 

01:05:35.079 --> 01:05:38.349 align:start position:0%
um uh Slash V or I mean apostrophe V as
an<01:05:35.680><c> example</c><01:05:36.680><c> then</c><01:05:37.000><c> apostrophe</c><01:05:37.680><c> here</c><01:05:37.880><c> is</c><01:05:38.000><c> not</c><01:05:38.160><c> a</c>

01:05:38.349 --> 01:05:38.359 align:start position:0%
an example then apostrophe here is not a
 

01:05:38.359 --> 01:05:39.510 align:start position:0%
an example then apostrophe here is not a
letter<01:05:38.640><c> or</c><01:05:38.760><c> a</c>

01:05:39.510 --> 01:05:39.520 align:start position:0%
letter or a
 

01:05:39.520 --> 01:05:42.430 align:start position:0%
letter or a
number<01:05:40.520><c> so</c><01:05:40.839><c> hello</c><01:05:41.200><c> will</c><01:05:41.400><c> stop</c><01:05:41.680><c> matching</c><01:05:42.319><c> and</c>

01:05:42.430 --> 01:05:42.440 align:start position:0%
number so hello will stop matching and
 

01:05:42.440 --> 01:05:44.950 align:start position:0%
number so hello will stop matching and
then<01:05:42.559><c> we</c><01:05:42.680><c> will</c><01:05:42.920><c> exactly</c><01:05:43.400><c> match</c><01:05:44.039><c> this</c><01:05:44.559><c> with</c>

01:05:44.950 --> 01:05:44.960 align:start position:0%
then we will exactly match this with
 

01:05:44.960 --> 01:05:48.190 align:start position:0%
then we will exactly match this with
that<01:05:45.960><c> so</c><01:05:46.640><c> that</c><01:05:46.760><c> will</c><01:05:46.920><c> come</c><01:05:47.079><c> out</c><01:05:47.359><c> as</c><01:05:47.440><c> a</c><01:05:47.599><c> separate</c>

01:05:48.190 --> 01:05:48.200 align:start position:0%
that so that will come out as a separate
 

01:05:48.200 --> 01:05:50.230 align:start position:0%
that so that will come out as a separate
thing<01:05:49.200><c> so</c><01:05:49.520><c> why</c><01:05:49.640><c> are</c><01:05:49.760><c> they</c><01:05:49.880><c> doing</c><01:05:50.079><c> the</c>

01:05:50.230 --> 01:05:50.240 align:start position:0%
thing so why are they doing the
 

01:05:50.240 --> 01:05:52.230 align:start position:0%
thing so why are they doing the
apostrophes<01:05:50.920><c> here</c><01:05:51.520><c> honestly</c><01:05:51.880><c> I</c><01:05:51.960><c> think</c><01:05:52.119><c> that</c>

01:05:52.230 --> 01:05:52.240 align:start position:0%
apostrophes here honestly I think that
 

01:05:52.240 --> 01:05:53.589 align:start position:0%
apostrophes here honestly I think that
these<01:05:52.359><c> are</c><01:05:52.520><c> just</c><01:05:52.640><c> like</c><01:05:52.839><c> very</c><01:05:53.119><c> common</c>

01:05:53.589 --> 01:05:53.599 align:start position:0%
these are just like very common
 

01:05:53.599 --> 01:05:56.950 align:start position:0%
these are just like very common
apostrophes<01:05:54.160><c> p</c><01:05:54.680><c> uh</c><01:05:54.799><c> that</c><01:05:54.920><c> are</c><01:05:55.240><c> used</c><01:05:56.119><c> um</c>

01:05:56.950 --> 01:05:56.960 align:start position:0%
apostrophes p uh that are used um
 

01:05:56.960 --> 01:05:59.349 align:start position:0%
apostrophes p uh that are used um
typically<01:05:57.960><c> I</c><01:05:58.079><c> don't</c><01:05:58.480><c> love</c><01:05:58.720><c> that</c><01:05:58.880><c> they've</c><01:05:59.119><c> done</c>

01:05:59.349 --> 01:05:59.359 align:start position:0%
typically I don't love that they've done
 

01:05:59.359 --> 01:06:00.589 align:start position:0%
typically I don't love that they've done
this

01:06:00.589 --> 01:06:00.599 align:start position:0%
this
 

01:06:00.599 --> 01:06:03.309 align:start position:0%
this
because<01:06:01.599><c> uh</c><01:06:01.680><c> let</c><01:06:01.799><c> me</c><01:06:02.039><c> show</c><01:06:02.240><c> you</c><01:06:02.799><c> what</c><01:06:02.960><c> happens</c>

01:06:03.309 --> 01:06:03.319 align:start position:0%
because uh let me show you what happens
 

01:06:03.319 --> 01:06:05.430 align:start position:0%
because uh let me show you what happens
when<01:06:03.480><c> you</c><01:06:03.680><c> have</c><01:06:04.240><c> uh</c><01:06:04.680><c> some</c><01:06:04.880><c> Unicode</c>

01:06:05.430 --> 01:06:05.440 align:start position:0%
when you have uh some Unicode
 

01:06:05.440 --> 01:06:07.349 align:start position:0%
when you have uh some Unicode
apostrophes<01:06:06.279><c> like</c><01:06:06.440><c> for</c><01:06:06.599><c> example</c><01:06:06.920><c> you</c><01:06:07.039><c> can</c>

01:06:07.349 --> 01:06:07.359 align:start position:0%
apostrophes like for example you can
 

01:06:07.359 --> 01:06:10.549 align:start position:0%
apostrophes like for example you can
have<01:06:08.079><c> if</c><01:06:08.160><c> you</c><01:06:08.359><c> have</c><01:06:09.119><c> house</c><01:06:10.119><c> then</c><01:06:10.240><c> this</c><01:06:10.319><c> will</c><01:06:10.440><c> be</c>

01:06:10.549 --> 01:06:10.559 align:start position:0%
have if you have house then this will be
 

01:06:10.559 --> 01:06:13.029 align:start position:0%
have if you have house then this will be
separated<01:06:10.920><c> out</c><01:06:11.160><c> because</c><01:06:11.319><c> of</c><01:06:11.480><c> this</c><01:06:12.039><c> matching</c>

01:06:13.029 --> 01:06:13.039 align:start position:0%
separated out because of this matching
 

01:06:13.039 --> 01:06:15.309 align:start position:0%
separated out because of this matching
but<01:06:13.160><c> if</c><01:06:13.240><c> you</c><01:06:13.400><c> use</c><01:06:13.680><c> the</c><01:06:13.799><c> Unicode</c><01:06:14.359><c> apostrophe</c>

01:06:15.309 --> 01:06:15.319 align:start position:0%
but if you use the Unicode apostrophe
 

01:06:15.319 --> 01:06:16.150 align:start position:0%
but if you use the Unicode apostrophe
like

01:06:16.150 --> 01:06:16.160 align:start position:0%
like
 

01:06:16.160 --> 01:06:19.829 align:start position:0%
like
this<01:06:17.160><c> then</c><01:06:17.319><c> suddenly</c><01:06:17.720><c> this</c><01:06:17.839><c> does</c><01:06:18.200><c> not</c><01:06:18.920><c> work</c>

01:06:19.829 --> 01:06:19.839 align:start position:0%
this then suddenly this does not work
 

01:06:19.839 --> 01:06:21.549 align:start position:0%
this then suddenly this does not work
and<01:06:19.960><c> so</c><01:06:20.160><c> this</c><01:06:20.359><c> apostrophe</c><01:06:20.920><c> will</c><01:06:21.119><c> actually</c>

01:06:21.549 --> 01:06:21.559 align:start position:0%
and so this apostrophe will actually
 

01:06:21.559 --> 01:06:24.910 align:start position:0%
and so this apostrophe will actually
become<01:06:21.799><c> its</c><01:06:21.920><c> own</c><01:06:22.079><c> thing</c><01:06:22.680><c> now</c><01:06:23.680><c> and</c><01:06:23.760><c> so</c><01:06:24.119><c> so</c><01:06:24.559><c> um</c>

01:06:24.910 --> 01:06:24.920 align:start position:0%
become its own thing now and so so um
 

01:06:24.920 --> 01:06:26.349 align:start position:0%
become its own thing now and so so um
it's<01:06:25.079><c> basically</c><01:06:25.400><c> hardcoded</c><01:06:25.920><c> for</c><01:06:26.160><c> this</c>

01:06:26.349 --> 01:06:26.359 align:start position:0%
it's basically hardcoded for this
 

01:06:26.359 --> 01:06:29.670 align:start position:0%
it's basically hardcoded for this
specific<01:06:26.680><c> kind</c><01:06:26.799><c> of</c><01:06:27.359><c> apostrophe</c><01:06:28.359><c> and</c><01:06:28.960><c> uh</c>

01:06:29.670 --> 01:06:29.680 align:start position:0%
specific kind of apostrophe and uh
 

01:06:29.680 --> 01:06:31.309 align:start position:0%
specific kind of apostrophe and uh
otherwise<01:06:30.559><c> they</c><01:06:30.720><c> become</c><01:06:31.000><c> completely</c>

01:06:31.309 --> 01:06:31.319 align:start position:0%
otherwise they become completely
 

01:06:31.319 --> 01:06:34.029 align:start position:0%
otherwise they become completely
separate<01:06:32.119><c> tokens</c><01:06:33.119><c> in</c><01:06:33.279><c> addition</c><01:06:33.559><c> to</c><01:06:33.760><c> this</c><01:06:33.960><c> you</c>

01:06:34.029 --> 01:06:34.039 align:start position:0%
separate tokens in addition to this you
 

01:06:34.039 --> 01:06:38.470 align:start position:0%
separate tokens in addition to this you
can<01:06:34.200><c> go</c><01:06:34.319><c> to</c><01:06:34.880><c> the</c><01:06:36.160><c> gpt2</c><01:06:37.160><c> docs</c><01:06:37.680><c> and</c><01:06:38.119><c> here</c><01:06:38.279><c> when</c>

01:06:38.470 --> 01:06:38.480 align:start position:0%
can go to the gpt2 docs and here when
 

01:06:38.480 --> 01:06:40.190 align:start position:0%
can go to the gpt2 docs and here when
they<01:06:38.640><c> Define</c><01:06:38.920><c> the</c><01:06:39.039><c> pattern</c><01:06:39.400><c> they</c><01:06:39.559><c> say</c><01:06:40.039><c> should</c>

01:06:40.190 --> 01:06:40.200 align:start position:0%
they Define the pattern they say should
 

01:06:40.200 --> 01:06:42.990 align:start position:0%
they Define the pattern they say should
have<01:06:40.359><c> added</c><01:06:40.640><c> re.</c><01:06:41.279><c> ignore</c><01:06:41.680><c> case</c><01:06:42.160><c> so</c><01:06:42.359><c> BP</c><01:06:42.640><c> merges</c>

01:06:42.990 --> 01:06:43.000 align:start position:0%
have added re. ignore case so BP merges
 

01:06:43.000 --> 01:06:44.549 align:start position:0%
have added re. ignore case so BP merges
can<01:06:43.119><c> happen</c><01:06:43.319><c> for</c><01:06:43.520><c> capitalized</c><01:06:44.000><c> versions</c><01:06:44.240><c> of</c>

01:06:44.549 --> 01:06:44.559 align:start position:0%
can happen for capitalized versions of
 

01:06:44.559 --> 01:06:46.510 align:start position:0%
can happen for capitalized versions of
contractions<01:06:45.559><c> so</c><01:06:45.920><c> what</c><01:06:46.039><c> they're</c><01:06:46.200><c> pointing</c>

01:06:46.510 --> 01:06:46.520 align:start position:0%
contractions so what they're pointing
 

01:06:46.520 --> 01:06:47.710 align:start position:0%
contractions so what they're pointing
out<01:06:46.760><c> is</c><01:06:46.920><c> that</c><01:06:47.039><c> you</c><01:06:47.160><c> see</c><01:06:47.359><c> how</c><01:06:47.520><c> this</c><01:06:47.599><c> is</c>

01:06:47.710 --> 01:06:47.720 align:start position:0%
out is that you see how this is
 

01:06:47.720 --> 01:06:50.829 align:start position:0%
out is that you see how this is
apostrophe<01:06:48.480><c> and</c><01:06:48.680><c> then</c><01:06:49.079><c> lowercase</c><01:06:49.839><c> letters</c>

01:06:50.829 --> 01:06:50.839 align:start position:0%
apostrophe and then lowercase letters
 

01:06:50.839 --> 01:06:52.910 align:start position:0%
apostrophe and then lowercase letters
well<01:06:51.319><c> because</c><01:06:51.559><c> they</c><01:06:51.680><c> didn't</c><01:06:51.920><c> do</c><01:06:52.079><c> re.</c><01:06:52.520><c> ignore</c>

01:06:52.910 --> 01:06:52.920 align:start position:0%
well because they didn't do re. ignore
 

01:06:52.920 --> 01:06:56.430 align:start position:0%
well because they didn't do re. ignore
case<01:06:53.839><c> then</c><01:06:54.039><c> then</c><01:06:54.520><c> um</c><01:06:55.200><c> these</c><01:06:55.400><c> rules</c><01:06:55.839><c> will</c><01:06:56.079><c> not</c>

01:06:56.430 --> 01:06:56.440 align:start position:0%
case then then um these rules will not
 

01:06:56.440 --> 01:06:58.870 align:start position:0%
case then then um these rules will not
separate<01:06:56.839><c> out</c><01:06:57.079><c> the</c><01:06:57.200><c> apostrophes</c><01:06:57.880><c> if</c><01:06:57.960><c> it's</c>

01:06:58.870 --> 01:06:58.880 align:start position:0%
separate out the apostrophes if it's
 

01:06:58.880 --> 01:07:01.430 align:start position:0%
separate out the apostrophes if it's
uppercase<01:06:59.880><c> so</c>

01:07:01.430 --> 01:07:01.440 align:start position:0%
uppercase so
 

01:07:01.440 --> 01:07:06.630 align:start position:0%
uppercase so
house<01:07:02.440><c> would</c><01:07:02.640><c> be</c><01:07:03.119><c> like</c><01:07:03.760><c> this</c><01:07:04.760><c> but</c><01:07:04.960><c> if</c><01:07:05.079><c> I</c><01:07:05.279><c> did</c>

01:07:06.630 --> 01:07:06.640 align:start position:0%
house would be like this but if I did
 

01:07:06.640 --> 01:07:10.230 align:start position:0%
house would be like this but if I did
house<01:07:07.640><c> if</c><01:07:07.760><c> I'm</c><01:07:07.960><c> uppercase</c><01:07:08.920><c> then</c><01:07:09.240><c> notice</c>

01:07:10.230 --> 01:07:10.240 align:start position:0%
house if I'm uppercase then notice
 

01:07:10.240 --> 01:07:12.269 align:start position:0%
house if I'm uppercase then notice
suddenly<01:07:10.680><c> the</c><01:07:10.760><c> apostrophe</c><01:07:11.279><c> comes</c><01:07:11.520><c> by</c>

01:07:12.269 --> 01:07:12.279 align:start position:0%
suddenly the apostrophe comes by
 

01:07:12.279 --> 01:07:15.470 align:start position:0%
suddenly the apostrophe comes by
itself<01:07:13.279><c> so</c><01:07:13.960><c> the</c><01:07:14.119><c> tokenization</c><01:07:14.760><c> will</c><01:07:15.160><c> work</c>

01:07:15.470 --> 01:07:15.480 align:start position:0%
itself so the tokenization will work
 

01:07:15.480 --> 01:07:17.430 align:start position:0%
itself so the tokenization will work
differently<01:07:16.039><c> in</c><01:07:16.200><c> uppercase</c><01:07:16.640><c> and</c><01:07:16.720><c> lower</c><01:07:17.039><c> case</c>

01:07:17.430 --> 01:07:17.440 align:start position:0%
differently in uppercase and lower case
 

01:07:17.440 --> 01:07:19.029 align:start position:0%
differently in uppercase and lower case
inconsistently<01:07:18.200><c> separating</c><01:07:18.640><c> out</c><01:07:18.880><c> these</c>

01:07:19.029 --> 01:07:19.039 align:start position:0%
inconsistently separating out these
 

01:07:19.039 --> 01:07:21.109 align:start position:0%
inconsistently separating out these
apostrophes<01:07:19.799><c> so</c><01:07:19.920><c> it</c><01:07:20.039><c> feels</c><01:07:20.279><c> extremely</c><01:07:20.640><c> gnarly</c>

01:07:21.109 --> 01:07:21.119 align:start position:0%
apostrophes so it feels extremely gnarly
 

01:07:21.119 --> 01:07:24.510 align:start position:0%
apostrophes so it feels extremely gnarly
and<01:07:21.319><c> slightly</c><01:07:21.680><c> gross</c><01:07:22.760><c> um</c><01:07:23.760><c> but</c><01:07:24.119><c> that's</c><01:07:24.359><c> that's</c>

01:07:24.510 --> 01:07:24.520 align:start position:0%
and slightly gross um but that's that's
 

01:07:24.520 --> 01:07:27.230 align:start position:0%
and slightly gross um but that's that's
how<01:07:24.680><c> that</c><01:07:24.839><c> works</c><01:07:25.799><c> okay</c><01:07:25.880><c> so</c><01:07:26.039><c> let's</c><01:07:26.240><c> come</c><01:07:26.520><c> back</c>

01:07:27.230 --> 01:07:27.240 align:start position:0%
how that works okay so let's come back
 

01:07:27.240 --> 01:07:28.430 align:start position:0%
how that works okay so let's come back
after<01:07:27.480><c> trying</c><01:07:27.680><c> to</c><01:07:27.799><c> match</c><01:07:27.960><c> a</c><01:07:28.079><c> bunch</c><01:07:28.240><c> of</c>

01:07:28.430 --> 01:07:28.440 align:start position:0%
after trying to match a bunch of
 

01:07:28.440 --> 01:07:30.269 align:start position:0%
after trying to match a bunch of
apostrophe<01:07:29.000><c> Expressions</c><01:07:29.839><c> by</c><01:07:29.960><c> the</c><01:07:30.039><c> way</c><01:07:30.200><c> the</c>

01:07:30.269 --> 01:07:30.279 align:start position:0%
apostrophe Expressions by the way the
 

01:07:30.279 --> 01:07:32.069 align:start position:0%
apostrophe Expressions by the way the
other<01:07:30.440><c> issue</c><01:07:30.680><c> here</c><01:07:30.799><c> is</c><01:07:30.880><c> that</c><01:07:31.039><c> these</c><01:07:31.160><c> are</c><01:07:31.720><c> quite</c>

01:07:32.069 --> 01:07:32.079 align:start position:0%
other issue here is that these are quite
 

01:07:32.079 --> 01:07:34.549 align:start position:0%
other issue here is that these are quite
language<01:07:32.480><c> specific</c><01:07:32.920><c> probably</c><01:07:33.359><c> so</c><01:07:34.359><c> I</c><01:07:34.400><c> don't</c>

01:07:34.549 --> 01:07:34.559 align:start position:0%
language specific probably so I don't
 

01:07:34.559 --> 01:07:35.789 align:start position:0%
language specific probably so I don't
know<01:07:34.680><c> that</c><01:07:34.799><c> all</c><01:07:34.920><c> the</c><01:07:35.039><c> languages</c><01:07:35.400><c> for</c><01:07:35.559><c> example</c>

01:07:35.789 --> 01:07:35.799 align:start position:0%
know that all the languages for example
 

01:07:35.799 --> 01:07:37.470 align:start position:0%
know that all the languages for example
use<01:07:36.039><c> or</c><01:07:36.160><c> don't</c><01:07:36.319><c> use</c><01:07:36.559><c> apostrophes</c><01:07:37.160><c> but</c><01:07:37.319><c> that</c>

01:07:37.470 --> 01:07:37.480 align:start position:0%
use or don't use apostrophes but that
 

01:07:37.480 --> 01:07:39.950 align:start position:0%
use or don't use apostrophes but that
would<01:07:37.599><c> be</c><01:07:38.160><c> inconsistently</c><01:07:39.160><c> tokenized</c><01:07:39.680><c> as</c><01:07:39.799><c> a</c>

01:07:39.950 --> 01:07:39.960 align:start position:0%
would be inconsistently tokenized as a
 

01:07:39.960 --> 01:07:42.510 align:start position:0%
would be inconsistently tokenized as a
result<01:07:40.920><c> then</c><01:07:41.039><c> we</c><01:07:41.160><c> try</c><01:07:41.279><c> to</c><01:07:41.400><c> match</c><01:07:41.640><c> letters</c><01:07:42.400><c> then</c>

01:07:42.510 --> 01:07:42.520 align:start position:0%
result then we try to match letters then
 

01:07:42.520 --> 01:07:44.870 align:start position:0%
result then we try to match letters then
we<01:07:42.640><c> try</c><01:07:42.799><c> to</c><01:07:42.880><c> match</c><01:07:43.319><c> numbers</c><01:07:44.319><c> and</c><01:07:44.440><c> then</c><01:07:44.559><c> if</c><01:07:44.760><c> that</c>

01:07:44.870 --> 01:07:44.880 align:start position:0%
we try to match numbers and then if that
 

01:07:44.880 --> 01:07:47.549 align:start position:0%
we try to match numbers and then if that
doesn't<01:07:45.160><c> work</c><01:07:45.400><c> we</c><01:07:45.520><c> fall</c><01:07:45.839><c> back</c><01:07:46.000><c> to</c><01:07:46.440><c> here</c><01:07:47.440><c> and</c>

01:07:47.549 --> 01:07:47.559 align:start position:0%
doesn't work we fall back to here and
 

01:07:47.559 --> 01:07:49.150 align:start position:0%
doesn't work we fall back to here and
what<01:07:47.680><c> this</c><01:07:47.760><c> is</c><01:07:47.880><c> saying</c><01:07:48.119><c> is</c><01:07:48.359><c> again</c><01:07:48.760><c> optional</c>

01:07:49.150 --> 01:07:49.160 align:start position:0%
what this is saying is again optional
 

01:07:49.160 --> 01:07:50.829 align:start position:0%
what this is saying is again optional
space<01:07:49.520><c> followed</c><01:07:49.880><c> by</c><01:07:50.000><c> something</c><01:07:50.279><c> that</c><01:07:50.400><c> is</c><01:07:50.599><c> not</c>

01:07:50.829 --> 01:07:50.839 align:start position:0%
space followed by something that is not
 

01:07:50.839 --> 01:07:53.950 align:start position:0%
space followed by something that is not
a<01:07:51.000><c> letter</c><01:07:51.359><c> number</c><01:07:51.680><c> or</c><01:07:51.839><c> a</c><01:07:52.440><c> space</c><01:07:53.440><c> in</c><01:07:53.559><c> one</c><01:07:53.720><c> or</c>

01:07:53.950 --> 01:07:53.960 align:start position:0%
a letter number or a space in one or
 

01:07:53.960 --> 01:07:55.789 align:start position:0%
a letter number or a space in one or
more<01:07:54.119><c> of</c><01:07:54.279><c> that</c><01:07:55.000><c> so</c><01:07:55.160><c> what</c><01:07:55.319><c> this</c><01:07:55.400><c> is</c><01:07:55.520><c> doing</c>

01:07:55.789 --> 01:07:55.799 align:start position:0%
more of that so what this is doing
 

01:07:55.799 --> 01:07:57.549 align:start position:0%
more of that so what this is doing
effectively<01:07:56.200><c> is</c><01:07:56.319><c> this</c><01:07:56.440><c> is</c><01:07:56.559><c> trying</c><01:07:56.760><c> to</c><01:07:56.960><c> match</c>

01:07:57.549 --> 01:07:57.559 align:start position:0%
effectively is this is trying to match
 

01:07:57.559 --> 01:07:59.510 align:start position:0%
effectively is this is trying to match
punctuation<01:07:58.240><c> roughly</c><01:07:58.559><c> speaking</c><01:07:59.039><c> not</c><01:07:59.240><c> letters</c>

01:07:59.510 --> 01:07:59.520 align:start position:0%
punctuation roughly speaking not letters
 

01:07:59.520 --> 01:08:02.269 align:start position:0%
punctuation roughly speaking not letters
and<01:07:59.680><c> not</c><01:08:00.119><c> numbers</c><01:08:01.119><c> so</c><01:08:01.440><c> this</c><01:08:01.599><c> group</c><01:08:01.920><c> will</c><01:08:02.119><c> try</c>

01:08:02.269 --> 01:08:02.279 align:start position:0%
and not numbers so this group will try
 

01:08:02.279 --> 01:08:04.190 align:start position:0%
and not numbers so this group will try
to<01:08:02.599><c> trigger</c><01:08:02.960><c> for</c><01:08:03.160><c> that</c><01:08:03.279><c> so</c><01:08:03.440><c> if</c><01:08:03.520><c> I</c><01:08:03.640><c> do</c><01:08:03.839><c> something</c>

01:08:04.190 --> 01:08:04.200 align:start position:0%
to trigger for that so if I do something
 

01:08:04.200 --> 01:08:08.470 align:start position:0%
to trigger for that so if I do something
like<01:08:04.640><c> this</c><01:08:05.640><c> then</c><01:08:06.079><c> these</c><01:08:06.279><c> parts</c><01:08:06.920><c> here</c><01:08:07.920><c> are</c><01:08:08.119><c> not</c>

01:08:08.470 --> 01:08:08.480 align:start position:0%
like this then these parts here are not
 

01:08:08.480 --> 01:08:09.950 align:start position:0%
like this then these parts here are not
letters<01:08:08.760><c> or</c><01:08:08.920><c> numbers</c><01:08:09.440><c> but</c><01:08:09.599><c> they</c><01:08:09.720><c> will</c>

01:08:09.950 --> 01:08:09.960 align:start position:0%
letters or numbers but they will
 

01:08:09.960 --> 01:08:12.029 align:start position:0%
letters or numbers but they will
actually<01:08:10.520><c> they</c><01:08:10.680><c> are</c><01:08:11.440><c> uh</c><01:08:11.559><c> they</c><01:08:11.640><c> will</c><01:08:11.799><c> actually</c>

01:08:12.029 --> 01:08:12.039 align:start position:0%
actually they are uh they will actually
 

01:08:12.039 --> 01:08:14.470 align:start position:0%
actually they are uh they will actually
get<01:08:12.200><c> caught</c><01:08:12.559><c> here</c><01:08:13.520><c> and</c><01:08:13.640><c> so</c><01:08:13.920><c> they</c><01:08:14.079><c> become</c><01:08:14.319><c> its</c>

01:08:14.470 --> 01:08:14.480 align:start position:0%
get caught here and so they become its
 

01:08:14.480 --> 01:08:17.390 align:start position:0%
get caught here and so they become its
own<01:08:14.960><c> group</c><01:08:15.640><c> so</c><01:08:15.799><c> we've</c><01:08:15.960><c> separated</c><01:08:16.359><c> out</c><01:08:16.480><c> the</c>

01:08:17.390 --> 01:08:17.400 align:start position:0%
own group so we've separated out the
 

01:08:17.400 --> 01:08:20.070 align:start position:0%
own group so we've separated out the
punctuation<01:08:18.400><c> and</c><01:08:18.560><c> finally</c><01:08:19.040><c> this</c><01:08:19.640><c> um</c><01:08:19.839><c> this</c><01:08:19.920><c> is</c>

01:08:20.070 --> 01:08:20.080 align:start position:0%
punctuation and finally this um this is
 

01:08:20.080 --> 01:08:22.149 align:start position:0%
punctuation and finally this um this is
also<01:08:20.239><c> a</c><01:08:20.319><c> little</c><01:08:20.480><c> bit</c><01:08:20.600><c> confusing</c><01:08:21.600><c> so</c><01:08:21.839><c> this</c><01:08:21.960><c> is</c>

01:08:22.149 --> 01:08:22.159 align:start position:0%
also a little bit confusing so this is
 

01:08:22.159 --> 01:08:25.349 align:start position:0%
also a little bit confusing so this is
matching<01:08:22.920><c> white</c><01:08:23.159><c> space</c><01:08:24.080><c> but</c><01:08:24.239><c> this</c><01:08:24.319><c> is</c><01:08:24.560><c> using</c><01:08:24.880><c> a</c>

01:08:25.349 --> 01:08:25.359 align:start position:0%
matching white space but this is using a
 

01:08:25.359 --> 01:08:29.030 align:start position:0%
matching white space but this is using a
negative<01:08:25.679><c> look</c><01:08:25.880><c> ahead</c><01:08:26.400><c> assertion</c><01:08:27.279><c> in</c><01:08:28.040><c> regex</c>

01:08:29.030 --> 01:08:29.040 align:start position:0%
negative look ahead assertion in regex
 

01:08:29.040 --> 01:08:30.910 align:start position:0%
negative look ahead assertion in regex
so<01:08:29.319><c> what</c><01:08:29.480><c> this</c><01:08:29.560><c> is</c><01:08:29.679><c> doing</c><01:08:29.960><c> is</c><01:08:30.199><c> it's</c><01:08:30.480><c> matching</c>

01:08:30.910 --> 01:08:30.920 align:start position:0%
so what this is doing is it's matching
 

01:08:30.920 --> 01:08:33.269 align:start position:0%
so what this is doing is it's matching
wh<01:08:31.159><c> space</c><01:08:31.480><c> up</c><01:08:31.679><c> to</c><01:08:32.080><c> but</c><01:08:32.239><c> not</c><01:08:32.440><c> including</c><01:08:33.080><c> the</c>

01:08:33.269 --> 01:08:33.279 align:start position:0%
wh space up to but not including the
 

01:08:33.279 --> 01:08:34.990 align:start position:0%
wh space up to but not including the
last<01:08:33.600><c> Whit</c><01:08:33.839><c> space</c>

01:08:34.990 --> 01:08:35.000 align:start position:0%
last Whit space
 

01:08:35.000 --> 01:08:37.910 align:start position:0%
last Whit space
character<01:08:36.000><c> why</c><01:08:36.120><c> is</c><01:08:36.239><c> this</c><01:08:36.520><c> important</c><01:08:37.520><c> um</c><01:08:37.799><c> this</c>

01:08:37.910 --> 01:08:37.920 align:start position:0%
character why is this important um this
 

01:08:37.920 --> 01:08:40.269 align:start position:0%
character why is this important um this
is<01:08:38.040><c> pretty</c><01:08:38.279><c> subtle</c><01:08:38.640><c> I</c><01:08:38.719><c> think</c><01:08:39.359><c> so</c><01:08:39.560><c> you</c><01:08:39.679><c> see</c><01:08:39.960><c> how</c>

01:08:40.269 --> 01:08:40.279 align:start position:0%
is pretty subtle I think so you see how
 

01:08:40.279 --> 01:08:41.709 align:start position:0%
is pretty subtle I think so you see how
the<01:08:40.400><c> white</c><01:08:40.600><c> space</c><01:08:40.799><c> is</c><01:08:40.960><c> always</c><01:08:41.199><c> included</c><01:08:41.600><c> at</c>

01:08:41.709 --> 01:08:41.719 align:start position:0%
the white space is always included at
 

01:08:41.719 --> 01:08:45.510 align:start position:0%
the white space is always included at
the<01:08:41.880><c> beginning</c><01:08:42.279><c> of</c><01:08:42.440><c> the</c><01:08:42.560><c> word</c><01:08:43.480><c> so</c><01:08:44.239><c> um</c><01:08:44.679><c> space</c><01:08:45.000><c> r</c>

01:08:45.510 --> 01:08:45.520 align:start position:0%
the beginning of the word so um space r
 

01:08:45.520 --> 01:08:48.070 align:start position:0%
the beginning of the word so um space r
space<01:08:45.880><c> u</c><01:08:46.279><c> Etc</c><01:08:47.199><c> suppose</c><01:08:47.520><c> we</c><01:08:47.600><c> have</c><01:08:47.719><c> a</c><01:08:47.839><c> lot</c><01:08:47.960><c> of</c>

01:08:48.070 --> 01:08:48.080 align:start position:0%
space u Etc suppose we have a lot of
 

01:08:48.080 --> 01:08:49.390 align:start position:0%
space u Etc suppose we have a lot of
spaces

01:08:49.390 --> 01:08:49.400 align:start position:0%
spaces
 

01:08:49.400 --> 01:08:52.349 align:start position:0%
spaces
here<01:08:50.400><c> what's</c><01:08:50.560><c> going</c><01:08:50.640><c> to</c><01:08:50.799><c> happen</c><01:08:51.080><c> here</c><01:08:51.719><c> is</c><01:08:51.960><c> that</c>

01:08:52.349 --> 01:08:52.359 align:start position:0%
here what's going to happen here is that
 

01:08:52.359 --> 01:08:54.590 align:start position:0%
here what's going to happen here is that
these<01:08:52.640><c> spaces</c><01:08:53.199><c> up</c><01:08:53.359><c> to</c><01:08:53.839><c> not</c><01:08:54.040><c> including</c><01:08:54.440><c> the</c>

01:08:54.590 --> 01:08:54.600 align:start position:0%
these spaces up to not including the
 

01:08:54.600 --> 01:08:57.910 align:start position:0%
these spaces up to not including the
last<01:08:54.799><c> character</c><01:08:55.440><c> will</c><01:08:55.719><c> get</c><01:08:55.920><c> caught</c><01:08:56.520><c> by</c><01:08:56.920><c> this</c>

01:08:57.910 --> 01:08:57.920 align:start position:0%
last character will get caught by this
 

01:08:57.920 --> 01:08:59.709 align:start position:0%
last character will get caught by this
and<01:08:58.080><c> what</c><01:08:58.239><c> that</c><01:08:58.359><c> will</c><01:08:58.600><c> do</c><01:08:59.319><c> is</c><01:08:59.440><c> it</c><01:08:59.560><c> will</c>

01:08:59.709 --> 01:08:59.719 align:start position:0%
and what that will do is it will
 

01:08:59.719 --> 01:09:01.870 align:start position:0%
and what that will do is it will
separate<01:09:00.040><c> out</c><01:09:00.239><c> the</c><01:09:00.400><c> spaces</c><01:09:01.040><c> up</c><01:09:01.239><c> to</c><01:09:01.480><c> but</c><01:09:01.640><c> not</c>

01:09:01.870 --> 01:09:01.880 align:start position:0%
separate out the spaces up to but not
 

01:09:01.880 --> 01:09:03.669 align:start position:0%
separate out the spaces up to but not
including<01:09:02.239><c> the</c><01:09:02.359><c> last</c><01:09:02.560><c> character</c><01:09:03.159><c> so</c><01:09:03.400><c> that</c><01:09:03.560><c> the</c>

01:09:03.669 --> 01:09:03.679 align:start position:0%
including the last character so that the
 

01:09:03.679 --> 01:09:05.910 align:start position:0%
including the last character so that the
last<01:09:03.920><c> character</c><01:09:04.319><c> can</c><01:09:04.560><c> come</c><01:09:04.880><c> here</c><01:09:05.480><c> and</c><01:09:05.640><c> join</c>

01:09:05.910 --> 01:09:05.920 align:start position:0%
last character can come here and join
 

01:09:05.920 --> 01:09:09.229 align:start position:0%
last character can come here and join
with<01:09:06.159><c> the</c><01:09:06.920><c> um</c><01:09:07.159><c> space</c><01:09:07.560><c> you</c><01:09:08.560><c> and</c><01:09:08.880><c> the</c><01:09:08.960><c> reason</c>

01:09:09.229 --> 01:09:09.239 align:start position:0%
with the um space you and the reason
 

01:09:09.239 --> 01:09:11.430 align:start position:0%
with the um space you and the reason
that's<01:09:09.440><c> nice</c><01:09:09.640><c> is</c><01:09:09.920><c> because</c><01:09:10.520><c> space</c><01:09:10.880><c> you</c><01:09:11.120><c> is</c><01:09:11.279><c> the</c>

01:09:11.430 --> 01:09:11.440 align:start position:0%
that's nice is because space you is the
 

01:09:11.440 --> 01:09:13.789 align:start position:0%
that's nice is because space you is the
common<01:09:11.799><c> token</c><01:09:12.480><c> so</c><01:09:12.640><c> if</c><01:09:12.759><c> I</c><01:09:12.880><c> didn't</c><01:09:13.120><c> have</c><01:09:13.319><c> these</c>

01:09:13.789 --> 01:09:13.799 align:start position:0%
common token so if I didn't have these
 

01:09:13.799 --> 01:09:15.430 align:start position:0%
common token so if I didn't have these
Extra<01:09:14.080><c> Spaces</c><01:09:14.520><c> here</c><01:09:14.880><c> you</c><01:09:15.000><c> would</c><01:09:15.159><c> just</c><01:09:15.279><c> have</c>

01:09:15.430 --> 01:09:15.440 align:start position:0%
Extra Spaces here you would just have
 

01:09:15.440 --> 01:09:18.149 align:start position:0%
Extra Spaces here you would just have
space<01:09:15.719><c> you</c><01:09:16.400><c> and</c><01:09:16.520><c> if</c><01:09:16.640><c> I</c><01:09:16.839><c> add</c><01:09:17.120><c> tokens</c><01:09:17.600><c> if</c><01:09:17.759><c> I</c><01:09:17.920><c> add</c>

01:09:18.149 --> 01:09:18.159 align:start position:0%
space you and if I add tokens if I add
 

01:09:18.159 --> 01:09:20.709 align:start position:0%
space you and if I add tokens if I add
spaces<01:09:18.880><c> we</c><01:09:19.000><c> still</c><01:09:19.199><c> have</c><01:09:19.319><c> a</c><01:09:19.480><c> space</c><01:09:19.759><c> view</c><01:09:20.560><c> but</c>

01:09:20.709 --> 01:09:20.719 align:start position:0%
spaces we still have a space view but
 

01:09:20.719 --> 01:09:22.950 align:start position:0%
spaces we still have a space view but
now<01:09:20.839><c> we</c><01:09:20.920><c> have</c><01:09:21.080><c> all</c><01:09:21.239><c> this</c><01:09:21.480><c> extra</c><01:09:21.759><c> white</c><01:09:22.000><c> space</c>

01:09:22.950 --> 01:09:22.960 align:start position:0%
now we have all this extra white space
 

01:09:22.960 --> 01:09:24.709 align:start position:0%
now we have all this extra white space
so<01:09:23.080><c> basically</c><01:09:23.400><c> the</c><01:09:23.480><c> GB</c><01:09:23.880><c> to</c><01:09:24.000><c> tokenizer</c><01:09:24.520><c> really</c>

01:09:24.709 --> 01:09:24.719 align:start position:0%
so basically the GB to tokenizer really
 

01:09:24.719 --> 01:09:27.430 align:start position:0%
so basically the GB to tokenizer really
likes<01:09:24.960><c> to</c><01:09:25.199><c> have</c><01:09:25.480><c> a</c><01:09:25.759><c> space</c><01:09:26.159><c> letters</c><01:09:26.480><c> or</c><01:09:26.719><c> numbers</c>

01:09:27.430 --> 01:09:27.440 align:start position:0%
likes to have a space letters or numbers
 

01:09:27.440 --> 01:09:30.430 align:start position:0%
likes to have a space letters or numbers
um<01:09:27.759><c> and</c><01:09:28.000><c> it</c><01:09:28.440><c> it</c><01:09:28.600><c> preens</c><01:09:29.159><c> these</c><01:09:29.400><c> spaces</c><01:09:30.279><c> and</c>

01:09:30.430 --> 01:09:30.440 align:start position:0%
um and it it preens these spaces and
 

01:09:30.440 --> 01:09:31.390 align:start position:0%
um and it it preens these spaces and
this<01:09:30.560><c> is</c><01:09:30.679><c> just</c><01:09:30.799><c> something</c><01:09:31.000><c> that</c><01:09:31.080><c> it</c><01:09:31.199><c> is</c>

01:09:31.390 --> 01:09:31.400 align:start position:0%
this is just something that it is
 

01:09:31.400 --> 01:09:33.669 align:start position:0%
this is just something that it is
consistent<01:09:31.920><c> about</c><01:09:32.920><c> so</c><01:09:33.080><c> that's</c><01:09:33.279><c> what</c><01:09:33.440><c> that</c><01:09:33.560><c> is</c>

01:09:33.669 --> 01:09:33.679 align:start position:0%
consistent about so that's what that is
 

01:09:33.679 --> 01:09:36.390 align:start position:0%
consistent about so that's what that is
for<01:09:34.400><c> and</c><01:09:34.520><c> then</c><01:09:34.719><c> finally</c><01:09:35.120><c> we</c><01:09:35.279><c> have</c><01:09:35.520><c> all</c><01:09:35.719><c> the</c><01:09:36.199><c> the</c>

01:09:36.390 --> 01:09:36.400 align:start position:0%
for and then finally we have all the the
 

01:09:36.400 --> 01:09:38.630 align:start position:0%
for and then finally we have all the the
last<01:09:36.640><c> fallback</c><01:09:37.279><c> is</c><01:09:37.719><c> um</c><01:09:38.159><c> whites</c><01:09:38.400><c> space</c>

01:09:38.630 --> 01:09:38.640 align:start position:0%
last fallback is um whites space
 

01:09:38.640 --> 01:09:42.709 align:start position:0%
last fallback is um whites space
characters<01:09:39.600><c> uh</c><01:09:40.000><c> so</c><01:09:41.000><c> um</c><01:09:41.520><c> that</c><01:09:41.640><c> would</c><01:09:41.799><c> be</c>

01:09:42.709 --> 01:09:42.719 align:start position:0%
characters uh so um that would be
 

01:09:42.719 --> 01:09:46.669 align:start position:0%
characters uh so um that would be
just<01:09:43.719><c> um</c><01:09:44.400><c> if</c><01:09:44.600><c> that</c><01:09:44.759><c> doesn't</c><01:09:45.480><c> get</c><01:09:45.679><c> caught</c><01:09:46.120><c> then</c>

01:09:46.669 --> 01:09:46.679 align:start position:0%
just um if that doesn't get caught then
 

01:09:46.679 --> 01:09:48.510 align:start position:0%
just um if that doesn't get caught then
this<01:09:46.880><c> thing</c><01:09:47.159><c> will</c><01:09:47.440><c> catch</c><01:09:47.920><c> any</c><01:09:48.159><c> trailing</c>

01:09:48.510 --> 01:09:48.520 align:start position:0%
this thing will catch any trailing
 

01:09:48.520 --> 01:09:50.749 align:start position:0%
this thing will catch any trailing
spaces<01:09:48.880><c> and</c><01:09:49.000><c> so</c><01:09:49.159><c> on</c><01:09:49.960><c> I</c><01:09:50.040><c> wanted</c><01:09:50.279><c> to</c><01:09:50.400><c> show</c><01:09:50.600><c> one</c>

01:09:50.749 --> 01:09:50.759 align:start position:0%
spaces and so on I wanted to show one
 

01:09:50.759 --> 01:09:53.149 align:start position:0%
spaces and so on I wanted to show one
more<01:09:51.000><c> real</c><01:09:51.239><c> world</c><01:09:51.600><c> example</c><01:09:52.040><c> here</c><01:09:52.679><c> so</c><01:09:52.920><c> if</c><01:09:53.040><c> we</c>

01:09:53.149 --> 01:09:53.159 align:start position:0%
more real world example here so if we
 

01:09:53.159 --> 01:09:54.430 align:start position:0%
more real world example here so if we
have<01:09:53.279><c> this</c><01:09:53.400><c> string</c><01:09:53.880><c> which</c><01:09:53.960><c> is</c><01:09:54.040><c> a</c><01:09:54.159><c> piece</c><01:09:54.320><c> of</c>

01:09:54.430 --> 01:09:54.440 align:start position:0%
have this string which is a piece of
 

01:09:54.440 --> 01:09:56.350 align:start position:0%
have this string which is a piece of
python<01:09:54.800><c> code</c><01:09:55.239><c> and</c><01:09:55.320><c> then</c><01:09:55.440><c> we</c><01:09:55.560><c> try</c><01:09:55.760><c> to</c><01:09:55.920><c> split</c><01:09:56.199><c> it</c>

01:09:56.350 --> 01:09:56.360 align:start position:0%
python code and then we try to split it
 

01:09:56.360 --> 01:09:58.390 align:start position:0%
python code and then we try to split it
up<01:09:57.239><c> then</c><01:09:57.360><c> this</c><01:09:57.480><c> is</c><01:09:57.560><c> the</c><01:09:57.679><c> kind</c><01:09:57.800><c> of</c><01:09:57.920><c> output</c><01:09:58.239><c> we</c>

01:09:58.390 --> 01:09:58.400 align:start position:0%
up then this is the kind of output we
 

01:09:58.400 --> 01:10:00.550 align:start position:0%
up then this is the kind of output we
get<01:09:59.360><c> so</c><01:09:59.480><c> you'll</c><01:09:59.679><c> notice</c><01:09:59.920><c> that</c><01:10:00.040><c> the</c><01:10:00.159><c> list</c><01:10:00.360><c> has</c>

01:10:00.550 --> 01:10:00.560 align:start position:0%
get so you'll notice that the list has
 

01:10:00.560 --> 01:10:02.470 align:start position:0%
get so you'll notice that the list has
many<01:10:00.800><c> elements</c><01:10:01.280><c> here</c><01:10:01.480><c> and</c><01:10:01.640><c> that's</c><01:10:01.920><c> because</c><01:10:02.400><c> we</c>

01:10:02.470 --> 01:10:02.480 align:start position:0%
many elements here and that's because we
 

01:10:02.480 --> 01:10:05.110 align:start position:0%
many elements here and that's because we
are<01:10:02.719><c> splitting</c><01:10:03.120><c> up</c><01:10:03.360><c> fairly</c><01:10:03.800><c> often</c><01:10:04.679><c> uh</c><01:10:04.840><c> every</c>

01:10:05.110 --> 01:10:05.120 align:start position:0%
are splitting up fairly often uh every
 

01:10:05.120 --> 01:10:07.110 align:start position:0%
are splitting up fairly often uh every
time<01:10:05.320><c> sort</c><01:10:05.520><c> of</c><01:10:05.960><c> a</c><01:10:06.159><c> category</c>

01:10:07.110 --> 01:10:07.120 align:start position:0%
time sort of a category
 

01:10:07.120 --> 01:10:09.350 align:start position:0%
time sort of a category
changes<01:10:08.120><c> um</c><01:10:08.440><c> so</c><01:10:08.640><c> there</c><01:10:08.760><c> will</c><01:10:08.920><c> never</c><01:10:09.120><c> be</c><01:10:09.239><c> any</c>

01:10:09.350 --> 01:10:09.360 align:start position:0%
changes um so there will never be any
 

01:10:09.360 --> 01:10:10.950 align:start position:0%
changes um so there will never be any
merges<01:10:09.840><c> Within</c><01:10:10.199><c> These</c>

01:10:10.950 --> 01:10:10.960 align:start position:0%
merges Within These
 

01:10:10.960 --> 01:10:13.470 align:start position:0%
merges Within These
elements<01:10:11.960><c> and</c><01:10:12.719><c> um</c><01:10:13.000><c> that's</c><01:10:13.120><c> what</c><01:10:13.239><c> you</c><01:10:13.360><c> are</c>

01:10:13.470 --> 01:10:13.480 align:start position:0%
elements and um that's what you are
 

01:10:13.480 --> 01:10:16.430 align:start position:0%
elements and um that's what you are
seeing<01:10:13.800><c> here</c><01:10:14.800><c> now</c><01:10:15.199><c> you</c><01:10:15.360><c> might</c><01:10:15.560><c> think</c><01:10:15.800><c> that</c><01:10:16.320><c> in</c>

01:10:16.430 --> 01:10:16.440 align:start position:0%
seeing here now you might think that in
 

01:10:16.440 --> 01:10:17.750 align:start position:0%
seeing here now you might think that in
order<01:10:16.640><c> to</c><01:10:16.800><c> train</c><01:10:17.080><c> the</c>

01:10:17.750 --> 01:10:17.760 align:start position:0%
order to train the
 

01:10:17.760 --> 01:10:21.110 align:start position:0%
order to train the
tokenizer<01:10:18.760><c> uh</c><01:10:18.920><c> open</c><01:10:19.159><c> AI</c><01:10:19.600><c> has</c><01:10:20.120><c> used</c><01:10:20.600><c> this</c><01:10:20.880><c> to</c>

01:10:21.110 --> 01:10:21.120 align:start position:0%
tokenizer uh open AI has used this to
 

01:10:21.120 --> 01:10:23.870 align:start position:0%
tokenizer uh open AI has used this to
split<01:10:21.440><c> up</c><01:10:21.760><c> text</c><01:10:22.080><c> into</c><01:10:22.360><c> chunks</c><01:10:23.080><c> and</c><01:10:23.199><c> then</c><01:10:23.360><c> run</c>

01:10:23.870 --> 01:10:23.880 align:start position:0%
split up text into chunks and then run
 

01:10:23.880 --> 01:10:25.790 align:start position:0%
split up text into chunks and then run
just<01:10:24.000><c> a</c><01:10:24.159><c> BP</c><01:10:24.600><c> algorithm</c><01:10:25.080><c> within</c><01:10:25.280><c> all</c><01:10:25.480><c> the</c>

01:10:25.790 --> 01:10:25.800 align:start position:0%
just a BP algorithm within all the
 

01:10:25.800 --> 01:10:27.950 align:start position:0%
just a BP algorithm within all the
chunks<01:10:26.800><c> but</c><01:10:26.920><c> that</c><01:10:27.040><c> is</c><01:10:27.120><c> not</c><01:10:27.320><c> exactly</c><01:10:27.719><c> what</c>

01:10:27.950 --> 01:10:27.960 align:start position:0%
chunks but that is not exactly what
 

01:10:27.960 --> 01:10:30.270 align:start position:0%
chunks but that is not exactly what
happened<01:10:28.600><c> and</c><01:10:28.840><c> the</c><01:10:28.960><c> reason</c><01:10:29.199><c> is</c><01:10:29.360><c> the</c><01:10:29.480><c> following</c>

01:10:30.270 --> 01:10:30.280 align:start position:0%
happened and the reason is the following
 

01:10:30.280 --> 01:10:33.310 align:start position:0%
happened and the reason is the following
notice<01:10:30.600><c> that</c><01:10:30.719><c> we</c><01:10:30.880><c> have</c><01:10:31.199><c> the</c><01:10:31.760><c> spaces</c><01:10:32.199><c> here</c><01:10:33.159><c> uh</c>

01:10:33.310 --> 01:10:33.320 align:start position:0%
notice that we have the spaces here uh
 

01:10:33.320 --> 01:10:35.430 align:start position:0%
notice that we have the spaces here uh
those<01:10:33.480><c> Spaces</c><01:10:33.840><c> end</c><01:10:34.000><c> up</c><01:10:34.199><c> being</c><01:10:34.640><c> entire</c>

01:10:35.430 --> 01:10:35.440 align:start position:0%
those Spaces end up being entire
 

01:10:35.440 --> 01:10:38.350 align:start position:0%
those Spaces end up being entire
elements<01:10:36.440><c> but</c><01:10:37.159><c> these</c><01:10:37.400><c> spaces</c><01:10:37.800><c> never</c><01:10:38.080><c> actually</c>

01:10:38.350 --> 01:10:38.360 align:start position:0%
elements but these spaces never actually
 

01:10:38.360 --> 01:10:40.630 align:start position:0%
elements but these spaces never actually
end<01:10:38.520><c> up</c><01:10:38.679><c> being</c><01:10:38.920><c> merged</c><01:10:39.440><c> by</c><01:10:39.560><c> by</c><01:10:39.719><c> open</c><01:10:39.960><c> Ai</c><01:10:40.520><c> and</c>

01:10:40.630 --> 01:10:40.640 align:start position:0%
end up being merged by by open Ai and
 

01:10:40.640 --> 01:10:42.470 align:start position:0%
end up being merged by by open Ai and
the<01:10:40.760><c> way</c><01:10:40.880><c> you</c><01:10:40.960><c> can</c><01:10:41.120><c> tell</c><01:10:41.560><c> is</c><01:10:41.760><c> that</c><01:10:41.960><c> if</c><01:10:42.040><c> you</c><01:10:42.199><c> copy</c>

01:10:42.470 --> 01:10:42.480 align:start position:0%
the way you can tell is that if you copy
 

01:10:42.480 --> 01:10:44.189 align:start position:0%
the way you can tell is that if you copy
paste<01:10:42.679><c> the</c><01:10:42.800><c> exact</c><01:10:43.040><c> same</c><01:10:43.199><c> chunk</c><01:10:43.440><c> here</c><01:10:43.600><c> into</c><01:10:43.840><c> Tik</c>

01:10:44.189 --> 01:10:44.199 align:start position:0%
paste the exact same chunk here into Tik
 

01:10:44.199 --> 01:10:47.270 align:start position:0%
paste the exact same chunk here into Tik
token<01:10:45.199><c> U</c><01:10:45.520><c> Tik</c><01:10:45.760><c> tokenizer</c><01:10:46.760><c> you</c><01:10:46.880><c> see</c><01:10:47.040><c> that</c><01:10:47.159><c> all</c>

01:10:47.270 --> 01:10:47.280 align:start position:0%
token U Tik tokenizer you see that all
 

01:10:47.280 --> 01:10:49.270 align:start position:0%
token U Tik tokenizer you see that all
the<01:10:47.400><c> spaces</c><01:10:47.760><c> are</c><01:10:47.960><c> kept</c><01:10:48.280><c> independent</c><01:10:49.159><c> and</c>

01:10:49.270 --> 01:10:49.280 align:start position:0%
the spaces are kept independent and
 

01:10:49.280 --> 01:10:50.990 align:start position:0%
the spaces are kept independent and
they're<01:10:49.440><c> all</c><01:10:49.600><c> token</c>

01:10:50.990 --> 01:10:51.000 align:start position:0%
they're all token
 

01:10:51.000 --> 01:10:53.830 align:start position:0%
they're all token
220<01:10:52.000><c> so</c><01:10:52.600><c> I</c><01:10:52.679><c> think</c><01:10:52.840><c> opena</c><01:10:53.280><c> at</c><01:10:53.360><c> some</c><01:10:53.480><c> point</c><01:10:53.640><c> Point</c>

01:10:53.830 --> 01:10:53.840 align:start position:0%
220 so I think opena at some point Point
 

01:10:53.840 --> 01:10:56.030 align:start position:0%
220 so I think opena at some point Point
en<01:10:53.960><c> Force</c><01:10:54.199><c> some</c><01:10:54.520><c> rule</c><01:10:55.280><c> that</c><01:10:55.480><c> these</c><01:10:55.679><c> spaces</c>

01:10:56.030 --> 01:10:56.040 align:start position:0%
en Force some rule that these spaces
 

01:10:56.040 --> 01:10:59.390 align:start position:0%
en Force some rule that these spaces
would<01:10:56.239><c> never</c><01:10:56.440><c> be</c><01:10:56.600><c> merged</c><01:10:57.600><c> and</c><01:10:57.800><c> so</c><01:10:58.560><c> um</c><01:10:59.159><c> there's</c>

01:10:59.390 --> 01:10:59.400 align:start position:0%
would never be merged and so um there's
 

01:10:59.400 --> 01:11:01.270 align:start position:0%
would never be merged and so um there's
some<01:10:59.600><c> additional</c><01:11:00.000><c> rules</c><01:11:00.360><c> on</c><01:11:00.560><c> top</c><01:11:00.719><c> of</c><01:11:00.920><c> just</c>

01:11:01.270 --> 01:11:01.280 align:start position:0%
some additional rules on top of just
 

01:11:01.280 --> 01:11:04.189 align:start position:0%
some additional rules on top of just
chunking<01:11:01.760><c> and</c><01:11:02.000><c> bpe</c><01:11:02.920><c> that</c><01:11:03.120><c> open</c><01:11:03.400><c> ey</c><01:11:03.560><c> is</c><01:11:03.679><c> not</c><01:11:04.080><c> uh</c>

01:11:04.189 --> 01:11:04.199 align:start position:0%
chunking and bpe that open ey is not uh
 

01:11:04.199 --> 01:11:06.310 align:start position:0%
chunking and bpe that open ey is not uh
clear<01:11:04.480><c> about</c><01:11:05.320><c> now</c><01:11:05.520><c> the</c><01:11:05.679><c> training</c><01:11:06.000><c> code</c><01:11:06.199><c> for</c>

01:11:06.310 --> 01:11:06.320 align:start position:0%
clear about now the training code for
 

01:11:06.320 --> 01:11:08.669 align:start position:0%
clear about now the training code for
the<01:11:06.400><c> gpt2</c><01:11:06.880><c> tokenizer</c><01:11:07.360><c> was</c><01:11:07.520><c> never</c><01:11:07.719><c> released</c><01:11:08.440><c> so</c>

01:11:08.669 --> 01:11:08.679 align:start position:0%
the gpt2 tokenizer was never released so
 

01:11:08.679 --> 01:11:10.790 align:start position:0%
the gpt2 tokenizer was never released so
all<01:11:08.840><c> we</c><01:11:09.040><c> have</c><01:11:09.320><c> is</c><01:11:09.920><c> uh</c><01:11:10.040><c> the</c><01:11:10.199><c> code</c><01:11:10.440><c> that</c><01:11:10.600><c> I've</c>

01:11:10.790 --> 01:11:10.800 align:start position:0%
all we have is uh the code that I've
 

01:11:10.800 --> 01:11:13.270 align:start position:0%
all we have is uh the code that I've
already<01:11:11.360><c> shown</c><01:11:11.719><c> you</c><01:11:12.280><c> but</c><01:11:12.600><c> this</c><01:11:12.800><c> code</c><01:11:13.080><c> here</c>

01:11:13.270 --> 01:11:13.280 align:start position:0%
already shown you but this code here
 

01:11:13.280 --> 01:11:14.390 align:start position:0%
already shown you but this code here
that<01:11:13.400><c> they've</c><01:11:13.600><c> released</c><01:11:13.920><c> is</c><01:11:14.040><c> only</c><01:11:14.239><c> the</c>

01:11:14.390 --> 01:11:14.400 align:start position:0%
that they've released is only the
 

01:11:14.400 --> 01:11:17.669 align:start position:0%
that they've released is only the
inference<01:11:14.920><c> code</c><01:11:15.560><c> for</c><01:11:15.880><c> the</c><01:11:16.320><c> tokens</c><01:11:17.199><c> so</c><01:11:17.360><c> this</c><01:11:17.480><c> is</c>

01:11:17.669 --> 01:11:17.679 align:start position:0%
inference code for the tokens so this is
 

01:11:17.679 --> 01:11:19.070 align:start position:0%
inference code for the tokens so this is
not<01:11:17.840><c> the</c><01:11:17.960><c> training</c><01:11:18.320><c> code</c><01:11:18.520><c> you</c><01:11:18.640><c> can't</c><01:11:18.840><c> give</c><01:11:18.960><c> it</c>

01:11:19.070 --> 01:11:19.080 align:start position:0%
not the training code you can't give it
 

01:11:19.080 --> 01:11:21.510 align:start position:0%
not the training code you can't give it
a<01:11:19.440><c> piece</c><01:11:19.600><c> of</c><01:11:19.760><c> text</c><01:11:19.960><c> and</c><01:11:20.159><c> training</c><01:11:20.520><c> tokenizer</c>

01:11:21.510 --> 01:11:21.520 align:start position:0%
a piece of text and training tokenizer
 

01:11:21.520 --> 01:11:23.310 align:start position:0%
a piece of text and training tokenizer
this<01:11:21.600><c> is</c><01:11:21.760><c> just</c><01:11:21.880><c> the</c><01:11:22.000><c> inference</c><01:11:22.440><c> code</c><01:11:23.080><c> which</c>

01:11:23.310 --> 01:11:23.320 align:start position:0%
this is just the inference code which
 

01:11:23.320 --> 01:11:25.590 align:start position:0%
this is just the inference code which
Tak<01:11:23.640><c> takes</c><01:11:24.120><c> the</c><01:11:24.280><c> merges</c><01:11:24.960><c> that</c><01:11:25.080><c> we</c><01:11:25.199><c> have</c><01:11:25.400><c> up</c>

01:11:25.590 --> 01:11:25.600 align:start position:0%
Tak takes the merges that we have up
 

01:11:25.600 --> 01:11:28.310 align:start position:0%
Tak takes the merges that we have up
above<01:11:26.280><c> and</c><01:11:26.480><c> applies</c><01:11:26.920><c> them</c><01:11:27.360><c> to</c><01:11:27.600><c> a</c><01:11:27.760><c> new</c><01:11:27.960><c> piece</c><01:11:28.120><c> of</c>

01:11:28.310 --> 01:11:28.320 align:start position:0%
above and applies them to a new piece of
 

01:11:28.320 --> 01:11:30.550 align:start position:0%
above and applies them to a new piece of
text<01:11:29.239><c> and</c><01:11:29.320><c> so</c><01:11:29.520><c> we</c><01:11:29.600><c> don't</c><01:11:29.760><c> know</c><01:11:29.920><c> exactly</c><01:11:30.320><c> how</c>

01:11:30.550 --> 01:11:30.560 align:start position:0%
text and so we don't know exactly how
 

01:11:30.560 --> 01:11:32.470 align:start position:0%
text and so we don't know exactly how
opening<01:11:30.880><c> ey</c><01:11:31.000><c> trained</c><01:11:31.520><c> um</c><01:11:32.040><c> train</c><01:11:32.320><c> the</c>

01:11:32.470 --> 01:11:32.480 align:start position:0%
opening ey trained um train the
 

01:11:32.480 --> 01:11:34.630 align:start position:0%
opening ey trained um train the
tokenizer<01:11:33.080><c> but</c><01:11:33.440><c> it</c><01:11:33.560><c> wasn't</c><01:11:33.880><c> as</c><01:11:34.040><c> simple</c><01:11:34.400><c> as</c>

01:11:34.630 --> 01:11:34.640 align:start position:0%
tokenizer but it wasn't as simple as
 

01:11:34.640 --> 01:11:38.350 align:start position:0%
tokenizer but it wasn't as simple as
chunk<01:11:34.960><c> it</c><01:11:35.080><c> up</c><01:11:35.320><c> and</c><01:11:35.480><c> BP</c><01:11:36.000><c> it</c><01:11:36.679><c> uh</c><01:11:36.800><c> whatever</c><01:11:37.080><c> it</c><01:11:37.360><c> was</c>

01:11:38.350 --> 01:11:38.360 align:start position:0%
chunk it up and BP it uh whatever it was
 

01:11:38.360 --> 01:11:40.229 align:start position:0%
chunk it up and BP it uh whatever it was
next<01:11:38.639><c> I</c><01:11:38.719><c> wanted</c><01:11:38.960><c> to</c><01:11:39.080><c> introduce</c><01:11:39.480><c> you</c><01:11:39.800><c> to</c><01:11:40.080><c> the</c>

01:11:40.229 --> 01:11:40.239 align:start position:0%
next I wanted to introduce you to the
 

01:11:40.239 --> 01:11:42.470 align:start position:0%
next I wanted to introduce you to the
Tik<01:11:40.480><c> token</c><01:11:40.760><c> library</c><01:11:41.120><c> from</c><01:11:41.280><c> openai</c><01:11:42.159><c> which</c><01:11:42.280><c> is</c>

01:11:42.470 --> 01:11:42.480 align:start position:0%
Tik token library from openai which is
 

01:11:42.480 --> 01:11:44.790 align:start position:0%
Tik token library from openai which is
the<01:11:42.719><c> official</c><01:11:43.520><c> library</c><01:11:43.840><c> for</c><01:11:44.040><c> tokenization</c>

01:11:44.790 --> 01:11:44.800 align:start position:0%
the official library for tokenization
 

01:11:44.800 --> 01:11:48.350 align:start position:0%
the official library for tokenization
from<01:11:45.199><c> openai</c><01:11:46.199><c> so</c><01:11:46.560><c> this</c><01:11:46.639><c> is</c><01:11:46.880><c> Tik</c><01:11:47.120><c> token</c><01:11:48.120><c> bip</c>

01:11:48.350 --> 01:11:48.360 align:start position:0%
from openai so this is Tik token bip
 

01:11:48.360 --> 01:11:51.430 align:start position:0%
from openai so this is Tik token bip
install<01:11:48.760><c> P</c><01:11:48.960><c> to</c><01:11:49.360><c> Tik</c><01:11:49.600><c> token</c><01:11:50.199><c> and</c><01:11:50.440><c> then</c><01:11:50.920><c> um</c><01:11:51.320><c> you</c>

01:11:51.430 --> 01:11:51.440 align:start position:0%
install P to Tik token and then um you
 

01:11:51.440 --> 01:11:54.350 align:start position:0%
install P to Tik token and then um you
can<01:11:52.120><c> do</c><01:11:52.360><c> the</c><01:11:52.679><c> tokenization</c><01:11:53.320><c> in</c><01:11:53.560><c> inference</c>

01:11:54.350 --> 01:11:54.360 align:start position:0%
can do the tokenization in inference
 

01:11:54.360 --> 01:11:55.870 align:start position:0%
can do the tokenization in inference
this<01:11:54.440><c> is</c><01:11:54.679><c> again</c><01:11:54.880><c> not</c><01:11:55.080><c> training</c><01:11:55.440><c> code</c><01:11:55.679><c> this</c><01:11:55.760><c> is</c>

01:11:55.870 --> 01:11:55.880 align:start position:0%
this is again not training code this is
 

01:11:55.880 --> 01:11:57.910 align:start position:0%
this is again not training code this is
only<01:11:56.120><c> inference</c><01:11:56.520><c> code</c><01:11:56.679><c> for</c>

01:11:57.910 --> 01:11:57.920 align:start position:0%
only inference code for
 

01:11:57.920 --> 01:12:00.350 align:start position:0%
only inference code for
tokenization<01:11:58.920><c> um</c><01:11:59.080><c> I</c><01:11:59.159><c> wanted</c><01:11:59.360><c> to</c><01:11:59.480><c> show</c><01:11:59.639><c> you</c><01:12:00.239><c> how</c>

01:12:00.350 --> 01:12:00.360 align:start position:0%
tokenization um I wanted to show you how
 

01:12:00.360 --> 01:12:02.470 align:start position:0%
tokenization um I wanted to show you how
you<01:12:00.480><c> would</c><01:12:00.639><c> use</c><01:12:00.800><c> it</c><01:12:01.199><c> quite</c><01:12:01.440><c> simple</c><01:12:02.199><c> and</c>

01:12:02.470 --> 01:12:02.480 align:start position:0%
you would use it quite simple and
 

01:12:02.480 --> 01:12:04.350 align:start position:0%
you would use it quite simple and
running<01:12:02.880><c> this</c><01:12:03.080><c> just</c><01:12:03.239><c> gives</c><01:12:03.480><c> us</c><01:12:03.679><c> the</c><01:12:03.800><c> gpt2</c>

01:12:04.350 --> 01:12:04.360 align:start position:0%
running this just gives us the gpt2
 

01:12:04.360 --> 01:12:06.910 align:start position:0%
running this just gives us the gpt2
tokens<01:12:04.800><c> or</c><01:12:05.000><c> the</c><01:12:05.120><c> GPT</c><01:12:05.480><c> 4</c><01:12:05.760><c> tokens</c><01:12:06.520><c> so</c><01:12:06.679><c> this</c><01:12:06.800><c> is</c>

01:12:06.910 --> 01:12:06.920 align:start position:0%
tokens or the GPT 4 tokens so this is
 

01:12:06.920 --> 01:12:09.669 align:start position:0%
tokens or the GPT 4 tokens so this is
the<01:12:07.040><c> tokenizer</c><01:12:07.560><c> use</c><01:12:07.719><c> for</c><01:12:07.840><c> GPT</c><01:12:08.320><c> 4</c><01:12:09.320><c> and</c><01:12:09.440><c> so</c><01:12:09.600><c> in</c>

01:12:09.669 --> 01:12:09.679 align:start position:0%
the tokenizer use for GPT 4 and so in
 

01:12:09.679 --> 01:12:11.229 align:start position:0%
the tokenizer use for GPT 4 and so in
particular<01:12:10.040><c> we</c><01:12:10.120><c> see</c><01:12:10.320><c> that</c><01:12:10.400><c> the</c><01:12:10.520><c> Whit</c><01:12:10.760><c> space</c><01:12:11.000><c> in</c>

01:12:11.229 --> 01:12:11.239 align:start position:0%
particular we see that the Whit space in
 

01:12:11.239 --> 01:12:14.470 align:start position:0%
particular we see that the Whit space in
gpt2<01:12:12.239><c> remains</c><01:12:12.440><c> unmerged</c><01:12:12.960><c> but</c><01:12:13.040><c> in</c><01:12:13.159><c> GPT</c><01:12:13.560><c> 4</c><01:12:14.320><c> uh</c>

01:12:14.470 --> 01:12:14.480 align:start position:0%
gpt2 remains unmerged but in GPT 4 uh
 

01:12:14.480 --> 01:12:17.310 align:start position:0%
gpt2 remains unmerged but in GPT 4 uh
these<01:12:14.760><c> Whit</c><01:12:15.000><c> spaces</c><01:12:15.360><c> merge</c><01:12:15.920><c> as</c><01:12:16.040><c> we</c><01:12:16.239><c> also</c><01:12:16.520><c> saw</c>

01:12:17.310 --> 01:12:17.320 align:start position:0%
these Whit spaces merge as we also saw
 

01:12:17.320 --> 01:12:19.430 align:start position:0%
these Whit spaces merge as we also saw
in<01:12:17.800><c> this</c><01:12:17.960><c> one</c><01:12:18.639><c> where</c><01:12:18.880><c> here</c><01:12:19.040><c> they're</c><01:12:19.239><c> all</c>

01:12:19.430 --> 01:12:19.440 align:start position:0%
in this one where here they're all
 

01:12:19.440 --> 01:12:22.629 align:start position:0%
in this one where here they're all
unmerged<01:12:20.080><c> but</c><01:12:20.199><c> if</c><01:12:20.280><c> we</c><01:12:20.440><c> go</c><01:12:20.639><c> down</c><01:12:20.840><c> to</c><01:12:21.040><c> GPT</c><01:12:21.639><c> 4</c><01:12:22.520><c> uh</c>

01:12:22.629 --> 01:12:22.639 align:start position:0%
unmerged but if we go down to GPT 4 uh
 

01:12:22.639 --> 01:12:25.229 align:start position:0%
unmerged but if we go down to GPT 4 uh
they<01:12:22.800><c> become</c><01:12:23.040><c> merged</c>

01:12:25.229 --> 01:12:25.239 align:start position:0%
they become merged
 

01:12:25.239 --> 01:12:27.750 align:start position:0%
they become merged
um<01:12:26.239><c> now</c><01:12:26.679><c> in</c><01:12:26.880><c> the</c>

01:12:27.750 --> 01:12:27.760 align:start position:0%
um now in the
 

01:12:27.760 --> 01:12:31.030 align:start position:0%
um now in the
gp4<01:12:28.760><c> uh</c><01:12:29.000><c> tokenizer</c><01:12:30.000><c> they</c><01:12:30.159><c> changed</c><01:12:30.880><c> the</c>

01:12:31.030 --> 01:12:31.040 align:start position:0%
gp4 uh tokenizer they changed the
 

01:12:31.040 --> 01:12:33.110 align:start position:0%
gp4 uh tokenizer they changed the
regular<01:12:31.560><c> expression</c><01:12:32.239><c> that</c><01:12:32.360><c> they</c><01:12:32.520><c> use</c><01:12:32.920><c> to</c>

01:12:33.110 --> 01:12:33.120 align:start position:0%
regular expression that they use to
 

01:12:33.120 --> 01:12:35.629 align:start position:0%
regular expression that they use to
Chunk<01:12:33.440><c> Up</c><01:12:33.679><c> text</c><01:12:34.560><c> so</c><01:12:34.760><c> the</c><01:12:34.880><c> way</c><01:12:35.000><c> to</c><01:12:35.120><c> see</c><01:12:35.320><c> this</c><01:12:35.520><c> is</c>

01:12:35.629 --> 01:12:35.639 align:start position:0%
Chunk Up text so the way to see this is
 

01:12:35.639 --> 01:12:37.990 align:start position:0%
Chunk Up text so the way to see this is
that<01:12:35.760><c> if</c><01:12:35.840><c> you</c><01:12:35.960><c> come</c><01:12:36.080><c> to</c><01:12:36.239><c> your</c><01:12:36.840><c> the</c><01:12:36.960><c> Tik</c><01:12:37.239><c> token</c>

01:12:37.990 --> 01:12:38.000 align:start position:0%
that if you come to your the Tik token
 

01:12:38.000 --> 01:12:41.070 align:start position:0%
that if you come to your the Tik token
uh<01:12:38.400><c> library</c><01:12:39.400><c> and</c><01:12:39.679><c> then</c><01:12:39.840><c> you</c><01:12:40.080><c> go</c><01:12:40.280><c> to</c><01:12:40.560><c> this</c><01:12:40.760><c> file</c>

01:12:41.070 --> 01:12:41.080 align:start position:0%
uh library and then you go to this file
 

01:12:41.080 --> 01:12:44.110 align:start position:0%
uh library and then you go to this file
Tik<01:12:41.360><c> token</c><01:12:41.679><c> X</c><01:12:42.159><c> openi</c><01:12:42.719><c> public</c><01:12:43.719><c> this</c><01:12:43.840><c> is</c><01:12:43.960><c> where</c>

01:12:44.110 --> 01:12:44.120 align:start position:0%
Tik token X openi public this is where
 

01:12:44.120 --> 01:12:45.629 align:start position:0%
Tik token X openi public this is where
sort<01:12:44.280><c> of</c><01:12:44.440><c> like</c><01:12:44.560><c> the</c><01:12:44.719><c> definition</c><01:12:45.199><c> of</c><01:12:45.360><c> all</c><01:12:45.480><c> these</c>

01:12:45.629 --> 01:12:45.639 align:start position:0%
sort of like the definition of all these
 

01:12:45.639 --> 01:12:46.950 align:start position:0%
sort of like the definition of all these
different<01:12:45.840><c> tokenizers</c><01:12:46.440><c> that</c><01:12:46.520><c> openi</c>

01:12:46.950 --> 01:12:46.960 align:start position:0%
different tokenizers that openi
 

01:12:46.960 --> 01:12:50.550 align:start position:0%
different tokenizers that openi
maintains<01:12:47.800><c> is</c><01:12:48.719><c> and</c><01:12:48.880><c> so</c><01:12:49.560><c> uh</c><01:12:49.840><c> necessarily</c><01:12:50.280><c> to</c><01:12:50.400><c> do</c>

01:12:50.550 --> 01:12:50.560 align:start position:0%
maintains is and so uh necessarily to do
 

01:12:50.560 --> 01:12:51.750 align:start position:0%
maintains is and so uh necessarily to do
the<01:12:50.639><c> inference</c><01:12:51.040><c> they</c><01:12:51.159><c> had</c><01:12:51.239><c> to</c><01:12:51.360><c> publish</c><01:12:51.639><c> some</c>

01:12:51.750 --> 01:12:51.760 align:start position:0%
the inference they had to publish some
 

01:12:51.760 --> 01:12:53.950 align:start position:0%
the inference they had to publish some
of<01:12:51.840><c> the</c><01:12:51.960><c> details</c><01:12:52.280><c> about</c><01:12:52.520><c> the</c><01:12:52.760><c> strings</c>

01:12:53.950 --> 01:12:53.960 align:start position:0%
of the details about the strings
 

01:12:53.960 --> 01:12:55.350 align:start position:0%
of the details about the strings
so<01:12:54.159><c> this</c><01:12:54.239><c> is</c><01:12:54.400><c> the</c><01:12:54.520><c> string</c><01:12:54.840><c> that</c><01:12:54.920><c> we</c><01:12:55.080><c> already</c>

01:12:55.350 --> 01:12:55.360 align:start position:0%
so this is the string that we already
 

01:12:55.360 --> 01:12:58.350 align:start position:0%
so this is the string that we already
saw<01:12:55.719><c> for</c><01:12:56.040><c> gpt2</c><01:12:57.040><c> it</c><01:12:57.159><c> is</c><01:12:57.360><c> slightly</c><01:12:57.800><c> different</c>

01:12:58.350 --> 01:12:58.360 align:start position:0%
saw for gpt2 it is slightly different
 

01:12:58.360 --> 01:13:00.350 align:start position:0%
saw for gpt2 it is slightly different
but<01:12:58.520><c> it</c><01:12:58.600><c> is</c><01:12:58.760><c> actually</c><01:12:59.040><c> equivalent</c><01:12:59.800><c> uh</c><01:12:59.920><c> to</c><01:13:00.159><c> what</c>

01:13:00.350 --> 01:13:00.360 align:start position:0%
but it is actually equivalent uh to what
 

01:13:00.360 --> 01:13:02.830 align:start position:0%
but it is actually equivalent uh to what
we<01:13:00.840><c> discussed</c><01:13:01.280><c> here</c><01:13:02.000><c> so</c><01:13:02.239><c> this</c><01:13:02.400><c> pattern</c><01:13:02.719><c> that</c>

01:13:02.830 --> 01:13:02.840 align:start position:0%
we discussed here so this pattern that
 

01:13:02.840 --> 01:13:04.950 align:start position:0%
we discussed here so this pattern that
we<01:13:03.000><c> discussed</c><01:13:03.520><c> is</c><01:13:03.760><c> equivalent</c><01:13:04.560><c> to</c><01:13:04.800><c> this</c>

01:13:04.950 --> 01:13:04.960 align:start position:0%
we discussed is equivalent to this
 

01:13:04.960 --> 01:13:06.990 align:start position:0%
we discussed is equivalent to this
pattern<01:13:05.679><c> this</c><01:13:05.760><c> one</c><01:13:06.000><c> just</c><01:13:06.400><c> executes</c><01:13:06.800><c> a</c><01:13:06.880><c> little</c>

01:13:06.990 --> 01:13:07.000 align:start position:0%
pattern this one just executes a little
 

01:13:07.000 --> 01:13:09.229 align:start position:0%
pattern this one just executes a little
bit<01:13:07.239><c> faster</c><01:13:08.239><c> so</c><01:13:08.480><c> here</c><01:13:08.639><c> you</c><01:13:08.760><c> see</c><01:13:08.920><c> a</c><01:13:09.000><c> little</c><01:13:09.120><c> bit</c>

01:13:09.229 --> 01:13:09.239 align:start position:0%
bit faster so here you see a little bit
 

01:13:09.239 --> 01:13:10.709 align:start position:0%
bit faster so here you see a little bit
of<01:13:09.360><c> a</c><01:13:09.480><c> slightly</c><01:13:09.840><c> different</c><01:13:10.120><c> definition</c><01:13:10.560><c> but</c>

01:13:10.709 --> 01:13:10.719 align:start position:0%
of a slightly different definition but
 

01:13:10.719 --> 01:13:12.709 align:start position:0%
of a slightly different definition but
otherwise<01:13:11.040><c> it's</c><01:13:11.199><c> the</c><01:13:11.400><c> same</c><01:13:12.400><c> we're</c><01:13:12.520><c> going</c><01:13:12.639><c> to</c>

01:13:12.709 --> 01:13:12.719 align:start position:0%
otherwise it's the same we're going to
 

01:13:12.719 --> 01:13:15.310 align:start position:0%
otherwise it's the same we're going to
go<01:13:12.840><c> into</c><01:13:13.000><c> special</c><01:13:13.239><c> tokens</c><01:13:13.560><c> in</c><01:13:13.679><c> a</c><01:13:14.120><c> bit</c><01:13:15.120><c> and</c><01:13:15.199><c> then</c>

01:13:15.310 --> 01:13:15.320 align:start position:0%
go into special tokens in a bit and then
 

01:13:15.320 --> 01:13:18.590 align:start position:0%
go into special tokens in a bit and then
if<01:13:15.400><c> you</c><01:13:15.480><c> scroll</c><01:13:15.840><c> down</c><01:13:16.280><c> to</c><01:13:16.480><c> CL</c><01:13:17.480><c> 100k</c><01:13:18.360><c> this</c><01:13:18.480><c> is</c>

01:13:18.590 --> 01:13:18.600 align:start position:0%
if you scroll down to CL 100k this is
 

01:13:18.600 --> 01:13:20.750 align:start position:0%
if you scroll down to CL 100k this is
the<01:13:18.679><c> GPT</c><01:13:19.040><c> 4</c><01:13:19.239><c> tokenizer</c><01:13:20.199><c> you</c><01:13:20.320><c> see</c><01:13:20.480><c> that</c><01:13:20.639><c> the</c>

01:13:20.750 --> 01:13:20.760 align:start position:0%
the GPT 4 tokenizer you see that the
 

01:13:20.760 --> 01:13:23.950 align:start position:0%
the GPT 4 tokenizer you see that the
pattern<01:13:21.159><c> has</c><01:13:21.480><c> changed</c><01:13:22.480><c> um</c><01:13:23.440><c> and</c><01:13:23.600><c> this</c><01:13:23.679><c> is</c><01:13:23.840><c> kind</c>

01:13:23.950 --> 01:13:23.960 align:start position:0%
pattern has changed um and this is kind
 

01:13:23.960 --> 01:13:26.070 align:start position:0%
pattern has changed um and this is kind
of<01:13:24.120><c> like</c><01:13:24.280><c> the</c><01:13:24.440><c> main</c><01:13:24.920><c> the</c><01:13:25.040><c> major</c><01:13:25.360><c> change</c><01:13:25.920><c> in</c>

01:13:26.070 --> 01:13:26.080 align:start position:0%
of like the main the major change in
 

01:13:26.080 --> 01:13:27.350 align:start position:0%
of like the main the major change in
addition<01:13:26.360><c> to</c><01:13:26.480><c> a</c><01:13:26.560><c> bunch</c><01:13:26.760><c> of</c><01:13:26.880><c> other</c><01:13:27.080><c> special</c>

01:13:27.350 --> 01:13:27.360 align:start position:0%
addition to a bunch of other special
 

01:13:27.360 --> 01:13:30.390 align:start position:0%
addition to a bunch of other special
tokens<01:13:27.800><c> which</c><01:13:28.000><c> I'll</c><01:13:28.199><c> go</c><01:13:28.320><c> into</c><01:13:28.480><c> in</c><01:13:28.520><c> a</c><01:13:28.679><c> bit</c><01:13:29.400><c> again</c>

01:13:30.390 --> 01:13:30.400 align:start position:0%
tokens which I'll go into in a bit again
 

01:13:30.400 --> 01:13:31.830 align:start position:0%
tokens which I'll go into in a bit again
now<01:13:30.560><c> some</c><01:13:30.920><c> I'm</c><01:13:31.040><c> not</c><01:13:31.159><c> going</c><01:13:31.280><c> to</c><01:13:31.480><c> actually</c><01:13:31.719><c> go</c>

01:13:31.830 --> 01:13:31.840 align:start position:0%
now some I'm not going to actually go
 

01:13:31.840 --> 01:13:33.270 align:start position:0%
now some I'm not going to actually go
into<01:13:32.040><c> the</c><01:13:32.159><c> full</c><01:13:32.360><c> detail</c><01:13:32.760><c> of</c><01:13:32.880><c> the</c><01:13:33.000><c> pattern</c>

01:13:33.270 --> 01:13:33.280 align:start position:0%
into the full detail of the pattern
 

01:13:33.280 --> 01:13:35.430 align:start position:0%
into the full detail of the pattern
change<01:13:33.719><c> because</c><01:13:34.560><c> honestly</c><01:13:34.880><c> this</c><01:13:35.000><c> is</c><01:13:35.199><c> my</c>

01:13:35.430 --> 01:13:35.440 align:start position:0%
change because honestly this is my
 

01:13:35.440 --> 01:13:37.430 align:start position:0%
change because honestly this is my
numbing<01:13:36.000><c> uh</c><01:13:36.120><c> I</c><01:13:36.199><c> would</c><01:13:36.360><c> just</c><01:13:36.520><c> advise</c><01:13:36.880><c> that</c><01:13:37.000><c> you</c>

01:13:37.430 --> 01:13:37.440 align:start position:0%
numbing uh I would just advise that you
 

01:13:37.440 --> 01:13:39.870 align:start position:0%
numbing uh I would just advise that you
pull<01:13:37.639><c> out</c><01:13:37.840><c> chat</c><01:13:38.159><c> GPT</c><01:13:38.560><c> and</c><01:13:38.719><c> the</c><01:13:39.040><c> regex</c>

01:13:39.870 --> 01:13:39.880 align:start position:0%
pull out chat GPT and the regex
 

01:13:39.880 --> 01:13:42.149 align:start position:0%
pull out chat GPT and the regex
documentation<01:13:40.480><c> and</c><01:13:40.679><c> just</c><01:13:40.960><c> step</c><01:13:41.280><c> through</c><01:13:41.440><c> it</c>

01:13:42.149 --> 01:13:42.159 align:start position:0%
documentation and just step through it
 

01:13:42.159 --> 01:13:44.510 align:start position:0%
documentation and just step through it
but<01:13:42.360><c> really</c><01:13:42.600><c> the</c><01:13:42.719><c> major</c><01:13:43.000><c> changes</c><01:13:43.400><c> are</c><01:13:44.199><c> number</c>

01:13:44.510 --> 01:13:44.520 align:start position:0%
but really the major changes are number
 

01:13:44.520 --> 01:13:48.070 align:start position:0%
but really the major changes are number
one<01:13:45.159><c> you</c><01:13:45.320><c> see</c><01:13:45.679><c> this</c><01:13:46.320><c> eye</c><01:13:46.679><c> here</c><01:13:47.320><c> that</c><01:13:47.560><c> means</c>

01:13:48.070 --> 01:13:48.080 align:start position:0%
one you see this eye here that means
 

01:13:48.080 --> 01:13:51.070 align:start position:0%
one you see this eye here that means
that<01:13:48.400><c> the</c><01:13:48.920><c> um</c><01:13:49.320><c> case</c><01:13:49.719><c> sensitivity</c><01:13:50.719><c> this</c><01:13:50.840><c> is</c>

01:13:51.070 --> 01:13:51.080 align:start position:0%
that the um case sensitivity this is
 

01:13:51.080 --> 01:13:53.669 align:start position:0%
that the um case sensitivity this is
case<01:13:51.320><c> insensitive</c><01:13:51.960><c> match</c><01:13:52.679><c> and</c><01:13:52.840><c> so</c><01:13:53.480><c> the</c>

01:13:53.669 --> 01:13:53.679 align:start position:0%
case insensitive match and so the
 

01:13:53.679 --> 01:13:56.110 align:start position:0%
case insensitive match and so the
comment<01:13:54.120><c> that</c><01:13:54.239><c> we</c><01:13:54.320><c> saw</c><01:13:54.560><c> earlier</c><01:13:55.000><c> on</c><01:13:55.560><c> oh</c><01:13:56.000><c> we</c>

01:13:56.110 --> 01:13:56.120 align:start position:0%
comment that we saw earlier on oh we
 

01:13:56.120 --> 01:13:58.390 align:start position:0%
comment that we saw earlier on oh we
should<01:13:56.239><c> have</c><01:13:56.360><c> used</c><01:13:56.639><c> re.</c><01:13:57.239><c> uppercase</c><01:13:58.239><c> uh</c>

01:13:58.390 --> 01:13:58.400 align:start position:0%
should have used re. uppercase uh
 

01:13:58.400 --> 01:14:01.790 align:start position:0%
should have used re. uppercase uh
basically<01:13:59.159><c> we're</c><01:13:59.360><c> now</c><01:13:59.560><c> going</c><01:13:59.719><c> to</c><01:14:00.400><c> be</c><01:14:00.800><c> matching</c>

01:14:01.790 --> 01:14:01.800 align:start position:0%
basically we're now going to be matching
 

01:14:01.800 --> 01:14:04.590 align:start position:0%
basically we're now going to be matching
these<01:14:02.800><c> apostrophe</c><01:14:03.360><c> s</c><01:14:03.679><c> apostrophe</c><01:14:04.159><c> D</c>

01:14:04.590 --> 01:14:04.600 align:start position:0%
these apostrophe s apostrophe D
 

01:14:04.600 --> 01:14:06.910 align:start position:0%
these apostrophe s apostrophe D
apostrophe<01:14:05.120><c> M</c><01:14:05.400><c> Etc</c><01:14:06.400><c> uh</c><01:14:06.480><c> we're</c><01:14:06.639><c> going</c><01:14:06.719><c> to</c><01:14:06.800><c> be</c>

01:14:06.910 --> 01:14:06.920 align:start position:0%
apostrophe M Etc uh we're going to be
 

01:14:06.920 --> 01:14:08.590 align:start position:0%
apostrophe M Etc uh we're going to be
matching<01:14:07.199><c> them</c><01:14:07.360><c> both</c><01:14:07.480><c> in</c><01:14:07.639><c> lowercase</c><01:14:08.159><c> and</c><01:14:08.280><c> in</c>

01:14:08.590 --> 01:14:08.600 align:start position:0%
matching them both in lowercase and in
 

01:14:08.600 --> 01:14:11.310 align:start position:0%
matching them both in lowercase and in
uppercase<01:14:09.600><c> so</c><01:14:09.800><c> that's</c><01:14:10.000><c> fixed</c><01:14:11.000><c> there's</c><01:14:11.199><c> a</c>

01:14:11.310 --> 01:14:11.320 align:start position:0%
uppercase so that's fixed there's a
 

01:14:11.320 --> 01:14:12.750 align:start position:0%
uppercase so that's fixed there's a
bunch<01:14:11.480><c> of</c><01:14:11.639><c> different</c><01:14:11.960><c> like</c><01:14:12.120><c> handling</c><01:14:12.520><c> of</c><01:14:12.639><c> the</c>

01:14:12.750 --> 01:14:12.760 align:start position:0%
bunch of different like handling of the
 

01:14:12.760 --> 01:14:14.070 align:start position:0%
bunch of different like handling of the
whites<01:14:13.000><c> space</c><01:14:13.360><c> that</c><01:14:13.480><c> I'm</c><01:14:13.600><c> not</c><01:14:13.719><c> going</c><01:14:13.880><c> to</c><01:14:14.000><c> go</c>

01:14:14.070 --> 01:14:14.080 align:start position:0%
whites space that I'm not going to go
 

01:14:14.080 --> 01:14:16.470 align:start position:0%
whites space that I'm not going to go
into<01:14:14.239><c> the</c><01:14:14.320><c> full</c><01:14:14.520><c> details</c><01:14:14.880><c> of</c><01:14:15.840><c> and</c><01:14:16.000><c> then</c><01:14:16.280><c> one</c>

01:14:16.470 --> 01:14:16.480 align:start position:0%
into the full details of and then one
 

01:14:16.480 --> 01:14:18.629 align:start position:0%
into the full details of and then one
more<01:14:16.679><c> thing</c><01:14:16.920><c> here</c><01:14:17.239><c> is</c><01:14:17.440><c> you</c><01:14:17.520><c> will</c><01:14:17.719><c> notice</c><01:14:18.520><c> that</c>

01:14:18.629 --> 01:14:18.639 align:start position:0%
more thing here is you will notice that
 

01:14:18.639 --> 01:14:20.669 align:start position:0%
more thing here is you will notice that
when<01:14:18.800><c> they</c><01:14:18.920><c> match</c><01:14:19.159><c> the</c><01:14:19.360><c> numbers</c><01:14:20.199><c> they</c><01:14:20.360><c> only</c>

01:14:20.669 --> 01:14:20.679 align:start position:0%
when they match the numbers they only
 

01:14:20.679 --> 01:14:23.550 align:start position:0%
when they match the numbers they only
match<01:14:21.120><c> one</c><01:14:21.520><c> to</c><01:14:21.800><c> three</c><01:14:22.080><c> numbers</c><01:14:23.080><c> so</c><01:14:23.320><c> so</c><01:14:23.480><c> they</c>

01:14:23.550 --> 01:14:23.560 align:start position:0%
match one to three numbers so so they
 

01:14:23.560 --> 01:14:26.110 align:start position:0%
match one to three numbers so so they
will<01:14:23.760><c> never</c><01:14:24.560><c> merge</c>

01:14:26.110 --> 01:14:26.120 align:start position:0%
will never merge
 

01:14:26.120 --> 01:14:28.870 align:start position:0%
will never merge
numbers<01:14:27.120><c> that</c><01:14:27.280><c> are</c><01:14:27.800><c> in</c><01:14:28.080><c> low</c><01:14:28.320><c> in</c><01:14:28.440><c> more</c><01:14:28.679><c> than</c>

01:14:28.870 --> 01:14:28.880 align:start position:0%
numbers that are in low in more than
 

01:14:28.880 --> 01:14:31.149 align:start position:0%
numbers that are in low in more than
three<01:14:29.120><c> digits</c><01:14:29.800><c> only</c><01:14:30.120><c> up</c><01:14:30.280><c> to</c><01:14:30.440><c> three</c><01:14:30.679><c> digits</c><01:14:31.000><c> of</c>

01:14:31.149 --> 01:14:31.159 align:start position:0%
three digits only up to three digits of
 

01:14:31.159 --> 01:14:34.669 align:start position:0%
three digits only up to three digits of
numbers<01:14:31.600><c> will</c><01:14:31.800><c> ever</c><01:14:32.080><c> be</c><01:14:33.000><c> merged</c><01:14:34.000><c> and</c><01:14:34.440><c> uh</c>

01:14:34.669 --> 01:14:34.679 align:start position:0%
numbers will ever be merged and uh
 

01:14:34.679 --> 01:14:36.310 align:start position:0%
numbers will ever be merged and uh
that's<01:14:34.920><c> one</c><01:14:35.120><c> change</c><01:14:35.360><c> that</c><01:14:35.480><c> they</c><01:14:35.639><c> made</c><01:14:35.840><c> as</c><01:14:36.000><c> well</c>

01:14:36.310 --> 01:14:36.320 align:start position:0%
that's one change that they made as well
 

01:14:36.320 --> 01:14:38.590 align:start position:0%
that's one change that they made as well
to<01:14:36.520><c> prevent</c><01:14:37.199><c> uh</c><01:14:37.360><c> tokens</c><01:14:37.800><c> that</c><01:14:37.920><c> are</c><01:14:38.159><c> very</c><01:14:38.400><c> very</c>

01:14:38.590 --> 01:14:38.600 align:start position:0%
to prevent uh tokens that are very very
 

01:14:38.600 --> 01:14:39.990 align:start position:0%
to prevent uh tokens that are very very
long<01:14:38.960><c> number</c>

01:14:39.990 --> 01:14:40.000 align:start position:0%
long number
 

01:14:40.000 --> 01:14:42.070 align:start position:0%
long number
sequences<01:14:41.000><c> uh</c><01:14:41.159><c> but</c><01:14:41.360><c> again</c><01:14:41.520><c> we</c><01:14:41.639><c> don't</c><01:14:41.880><c> really</c>

01:14:42.070 --> 01:14:42.080 align:start position:0%
sequences uh but again we don't really
 

01:14:42.080 --> 01:14:44.189 align:start position:0%
sequences uh but again we don't really
know<01:14:42.360><c> why</c><01:14:42.600><c> they</c><01:14:42.760><c> do</c><01:14:43.000><c> any</c><01:14:43.159><c> of</c><01:14:43.320><c> this</c><01:14:43.520><c> stuff</c><01:14:44.080><c> uh</c>

01:14:44.189 --> 01:14:44.199 align:start position:0%
know why they do any of this stuff uh
 

01:14:44.199 --> 01:14:46.270 align:start position:0%
know why they do any of this stuff uh
because<01:14:44.400><c> none</c><01:14:44.520><c> of</c><01:14:44.639><c> this</c><01:14:44.760><c> is</c><01:14:44.960><c> documented</c><01:14:45.960><c> and</c>

01:14:46.270 --> 01:14:46.280 align:start position:0%
because none of this is documented and
 

01:14:46.280 --> 01:14:49.510 align:start position:0%
because none of this is documented and
uh<01:14:46.360><c> it's</c><01:14:46.560><c> just</c><01:14:46.880><c> we</c><01:14:47.000><c> just</c><01:14:47.159><c> get</c><01:14:47.360><c> the</c><01:14:47.480><c> pattern</c><01:14:48.520><c> so</c>

01:14:49.510 --> 01:14:49.520 align:start position:0%
uh it's just we just get the pattern so
 

01:14:49.520 --> 01:14:51.750 align:start position:0%
uh it's just we just get the pattern so
um<01:14:49.960><c> yeah</c><01:14:50.639><c> it</c><01:14:50.760><c> is</c><01:14:50.920><c> what</c><01:14:51.040><c> it</c><01:14:51.159><c> is</c><01:14:51.360><c> but</c><01:14:51.520><c> those</c><01:14:51.639><c> are</c>

01:14:51.750 --> 01:14:51.760 align:start position:0%
um yeah it is what it is but those are
 

01:14:51.760 --> 01:14:54.350 align:start position:0%
um yeah it is what it is but those are
some<01:14:51.880><c> of</c><01:14:52.000><c> the</c><01:14:52.080><c> changes</c><01:14:52.440><c> that</c><01:14:52.760><c> gp4</c><01:14:53.639><c> has</c><01:14:53.840><c> made</c>

01:14:54.350 --> 01:14:54.360 align:start position:0%
some of the changes that gp4 has made
 

01:14:54.360 --> 01:14:56.350 align:start position:0%
some of the changes that gp4 has made
and<01:14:54.480><c> of</c><01:14:54.600><c> course</c><01:14:55.120><c> the</c><01:14:55.280><c> vocabulary</c><01:14:55.840><c> size</c><01:14:56.120><c> went</c>

01:14:56.350 --> 01:14:56.360 align:start position:0%
and of course the vocabulary size went
 

01:14:56.360 --> 01:14:58.390 align:start position:0%
and of course the vocabulary size went
from<01:14:56.560><c> roughly</c><01:14:56.800><c> 50k</c><01:14:57.239><c> to</c><01:14:57.440><c> roughly</c>

01:14:58.390 --> 01:14:58.400 align:start position:0%
from roughly 50k to roughly
 

01:14:58.400 --> 01:15:00.390 align:start position:0%
from roughly 50k to roughly
100K<01:14:59.400><c> the</c><01:14:59.520><c> next</c><01:14:59.679><c> thing</c><01:14:59.800><c> I</c><01:14:59.880><c> would</c><01:15:00.000><c> like</c><01:15:00.120><c> to</c><01:15:00.199><c> do</c>

01:15:00.390 --> 01:15:00.400 align:start position:0%
100K the next thing I would like to do
 

01:15:00.400 --> 01:15:02.310 align:start position:0%
100K the next thing I would like to do
very<01:15:00.560><c> briefly</c><01:15:01.000><c> is</c><01:15:01.239><c> to</c><01:15:01.520><c> take</c><01:15:01.679><c> you</c><01:15:01.840><c> through</c><01:15:02.159><c> the</c>

01:15:02.310 --> 01:15:02.320 align:start position:0%
very briefly is to take you through the
 

01:15:02.320 --> 01:15:05.390 align:start position:0%
very briefly is to take you through the
gpt2<01:15:02.920><c> encoder</c><01:15:03.360><c> dopy</c><01:15:03.880><c> that</c><01:15:04.000><c> openi</c><01:15:04.560><c> has</c>

01:15:05.390 --> 01:15:05.400 align:start position:0%
gpt2 encoder dopy that openi has
 

01:15:05.400 --> 01:15:07.350 align:start position:0%
gpt2 encoder dopy that openi has
released<01:15:06.400><c> uh</c><01:15:06.520><c> this</c><01:15:06.639><c> is</c><01:15:06.760><c> the</c><01:15:06.880><c> file</c><01:15:07.159><c> that</c><01:15:07.239><c> I</c>

01:15:07.350 --> 01:15:07.360 align:start position:0%
released uh this is the file that I
 

01:15:07.360 --> 01:15:09.629 align:start position:0%
released uh this is the file that I
already<01:15:07.639><c> mentioned</c><01:15:08.000><c> to</c><01:15:08.120><c> you</c><01:15:08.320><c> briefly</c><01:15:09.320><c> now</c>

01:15:09.629 --> 01:15:09.639 align:start position:0%
already mentioned to you briefly now
 

01:15:09.639 --> 01:15:12.830 align:start position:0%
already mentioned to you briefly now
this<01:15:09.800><c> file</c><01:15:10.199><c> is</c><01:15:10.880><c> uh</c><01:15:11.159><c> fairly</c><01:15:11.560><c> short</c><01:15:12.520><c> and</c><01:15:12.639><c> should</c>

01:15:12.830 --> 01:15:12.840 align:start position:0%
this file is uh fairly short and should
 

01:15:12.840 --> 01:15:14.629 align:start position:0%
this file is uh fairly short and should
be<01:15:13.159><c> relatively</c><01:15:13.880><c> understandable</c><01:15:14.159><c> to</c><01:15:14.320><c> you</c><01:15:14.480><c> at</c>

01:15:14.629 --> 01:15:14.639 align:start position:0%
be relatively understandable to you at
 

01:15:14.639 --> 01:15:17.950 align:start position:0%
be relatively understandable to you at
this<01:15:14.840><c> point</c><01:15:16.000><c> um</c><01:15:17.000><c> starting</c><01:15:17.400><c> at</c><01:15:17.520><c> the</c><01:15:17.639><c> bottom</c>

01:15:17.950 --> 01:15:17.960 align:start position:0%
this point um starting at the bottom
 

01:15:17.960 --> 01:15:21.470 align:start position:0%
this point um starting at the bottom
here<01:15:18.760><c> they</c><01:15:18.920><c> are</c><01:15:19.360><c> loading</c><01:15:20.040><c> two</c><01:15:20.320><c> files</c><01:15:20.880><c> encoder</c>

01:15:21.470 --> 01:15:21.480 align:start position:0%
here they are loading two files encoder
 

01:15:21.480 --> 01:15:24.149 align:start position:0%
here they are loading two files encoder
Json<01:15:21.920><c> and</c><01:15:22.080><c> vocab</c><01:15:22.639><c> bpe</c><01:15:23.639><c> and</c><01:15:23.760><c> they</c><01:15:23.840><c> do</c><01:15:24.000><c> some</c>

01:15:24.149 --> 01:15:24.159 align:start position:0%
Json and vocab bpe and they do some
 

01:15:24.159 --> 01:15:25.390 align:start position:0%
Json and vocab bpe and they do some
light<01:15:24.400><c> processing</c><01:15:24.800><c> on</c><01:15:24.920><c> it</c><01:15:25.080><c> and</c><01:15:25.159><c> then</c><01:15:25.280><c> they</c>

01:15:25.390 --> 01:15:25.400 align:start position:0%
light processing on it and then they
 

01:15:25.400 --> 01:15:27.709 align:start position:0%
light processing on it and then they
call<01:15:25.679><c> this</c><01:15:26.000><c> encoder</c><01:15:26.480><c> object</c><01:15:26.840><c> which</c><01:15:26.920><c> is</c><01:15:27.080><c> the</c>

01:15:27.709 --> 01:15:27.719 align:start position:0%
call this encoder object which is the
 

01:15:27.719 --> 01:15:30.110 align:start position:0%
call this encoder object which is the
tokenizer<01:15:28.719><c> now</c><01:15:29.000><c> if</c><01:15:29.120><c> you'd</c><01:15:29.360><c> like</c><01:15:29.480><c> to</c><01:15:29.679><c> inspect</c>

01:15:30.110 --> 01:15:30.120 align:start position:0%
tokenizer now if you'd like to inspect
 

01:15:30.120 --> 01:15:31.950 align:start position:0%
tokenizer now if you'd like to inspect
these<01:15:30.280><c> two</c><01:15:30.520><c> files</c><01:15:31.280><c> which</c><01:15:31.679><c> together</c>

01:15:31.950 --> 01:15:31.960 align:start position:0%
these two files which together
 

01:15:31.960 --> 01:15:34.550 align:start position:0%
these two files which together
constitute<01:15:32.440><c> their</c><01:15:32.639><c> saved</c><01:15:33.440><c> tokenizer</c><01:15:34.440><c> then</c>

01:15:34.550 --> 01:15:34.560 align:start position:0%
constitute their saved tokenizer then
 

01:15:34.560 --> 01:15:36.110 align:start position:0%
constitute their saved tokenizer then
you<01:15:34.639><c> can</c><01:15:34.800><c> do</c><01:15:35.000><c> that</c><01:15:35.280><c> with</c><01:15:35.480><c> a</c><01:15:35.600><c> piece</c><01:15:35.760><c> of</c><01:15:35.880><c> code</c>

01:15:36.110 --> 01:15:36.120 align:start position:0%
you can do that with a piece of code
 

01:15:36.120 --> 01:15:36.830 align:start position:0%
you can do that with a piece of code
like

01:15:36.830 --> 01:15:36.840 align:start position:0%
like
 

01:15:36.840 --> 01:15:39.310 align:start position:0%
like
this<01:15:37.840><c> um</c><01:15:38.400><c> this</c><01:15:38.520><c> is</c><01:15:38.639><c> where</c><01:15:38.760><c> you</c><01:15:38.840><c> can</c><01:15:38.960><c> download</c>

01:15:39.310 --> 01:15:39.320 align:start position:0%
this um this is where you can download
 

01:15:39.320 --> 01:15:40.790 align:start position:0%
this um this is where you can download
these<01:15:39.480><c> two</c><01:15:39.639><c> files</c><01:15:40.000><c> and</c><01:15:40.120><c> you</c><01:15:40.199><c> can</c><01:15:40.360><c> inspect</c><01:15:40.639><c> them</c>

01:15:40.790 --> 01:15:40.800 align:start position:0%
these two files and you can inspect them
 

01:15:40.800 --> 01:15:42.870 align:start position:0%
these two files and you can inspect them
if<01:15:40.880><c> you'd</c><01:15:41.120><c> like</c><01:15:41.840><c> and</c><01:15:41.960><c> what</c><01:15:42.040><c> you</c><01:15:42.159><c> will</c><01:15:42.360><c> find</c><01:15:42.679><c> is</c>

01:15:42.870 --> 01:15:42.880 align:start position:0%
if you'd like and what you will find is
 

01:15:42.880 --> 01:15:45.070 align:start position:0%
if you'd like and what you will find is
that<01:15:43.280><c> this</c><01:15:43.639><c> encoder</c><01:15:44.400><c> as</c><01:15:44.560><c> they</c><01:15:44.679><c> call</c><01:15:44.840><c> it</c><01:15:44.960><c> in</c>

01:15:45.070 --> 01:15:45.080 align:start position:0%
that this encoder as they call it in
 

01:15:45.080 --> 01:15:47.629 align:start position:0%
that this encoder as they call it in
their<01:15:45.280><c> code</c><01:15:45.920><c> is</c><01:15:46.080><c> exactly</c><01:15:46.480><c> equivalent</c><01:15:46.880><c> to</c><01:15:47.040><c> our</c>

01:15:47.629 --> 01:15:47.639 align:start position:0%
their code is exactly equivalent to our
 

01:15:47.639 --> 01:15:51.790 align:start position:0%
their code is exactly equivalent to our
vocab<01:15:48.639><c> so</c><01:15:48.880><c> remember</c><01:15:49.360><c> here</c><01:15:50.480><c> where</c><01:15:51.480><c> we</c><01:15:51.639><c> have</c>

01:15:51.790 --> 01:15:51.800 align:start position:0%
vocab so remember here where we have
 

01:15:51.800 --> 01:15:53.470 align:start position:0%
vocab so remember here where we have
this<01:15:51.960><c> vocab</c><01:15:52.480><c> object</c><01:15:52.760><c> which</c><01:15:52.880><c> allowed</c><01:15:53.120><c> us</c><01:15:53.280><c> us</c><01:15:53.360><c> to</c>

01:15:53.470 --> 01:15:53.480 align:start position:0%
this vocab object which allowed us us to
 

01:15:53.480 --> 01:15:55.990 align:start position:0%
this vocab object which allowed us us to
decode<01:15:53.880><c> very</c><01:15:54.120><c> efficiently</c><01:15:55.080><c> and</c><01:15:55.320><c> basically</c><01:15:55.840><c> it</c>

01:15:55.990 --> 01:15:56.000 align:start position:0%
decode very efficiently and basically it
 

01:15:56.000 --> 01:16:00.110 align:start position:0%
decode very efficiently and basically it
took<01:15:56.199><c> us</c><01:15:56.440><c> from</c><01:15:56.679><c> the</c><01:15:57.040><c> integer</c><01:15:57.600><c> to</c><01:15:58.440><c> the</c><01:15:59.000><c> byes</c><01:16:00.000><c> uh</c>

01:16:00.110 --> 01:16:00.120 align:start position:0%
took us from the integer to the byes uh
 

01:16:00.120 --> 01:16:03.310 align:start position:0%
took us from the integer to the byes uh
for<01:16:00.400><c> that</c><01:16:00.560><c> integer</c><01:16:01.560><c> so</c><01:16:01.800><c> our</c><01:16:02.040><c> vocab</c><01:16:02.639><c> is</c><01:16:02.840><c> exactly</c>

01:16:03.310 --> 01:16:03.320 align:start position:0%
for that integer so our vocab is exactly
 

01:16:03.320 --> 01:16:07.750 align:start position:0%
for that integer so our vocab is exactly
their<01:16:04.080><c> encoder</c><01:16:05.080><c> and</c><01:16:05.239><c> then</c><01:16:05.600><c> their</c><01:16:05.880><c> vocab</c><01:16:06.520><c> bpe</c>

01:16:07.750 --> 01:16:07.760 align:start position:0%
their encoder and then their vocab bpe
 

01:16:07.760 --> 01:16:11.149 align:start position:0%
their encoder and then their vocab bpe
confusingly<01:16:08.760><c> is</c><01:16:08.960><c> actually</c><01:16:09.560><c> are</c><01:16:09.960><c> merges</c><01:16:10.960><c> so</c>

01:16:11.149 --> 01:16:11.159 align:start position:0%
confusingly is actually are merges so
 

01:16:11.159 --> 01:16:13.990 align:start position:0%
confusingly is actually are merges so
their<01:16:11.400><c> BP</c><01:16:11.840><c> merges</c><01:16:12.560><c> which</c><01:16:12.679><c> is</c><01:16:12.880><c> based</c><01:16:13.159><c> on</c><01:16:13.840><c> the</c>

01:16:13.990 --> 01:16:14.000 align:start position:0%
their BP merges which is based on the
 

01:16:14.000 --> 01:16:16.669 align:start position:0%
their BP merges which is based on the
data<01:16:14.239><c> inside</c><01:16:14.520><c> vocab</c><01:16:15.159><c> bpe</c><01:16:16.159><c> ends</c><01:16:16.360><c> up</c><01:16:16.480><c> being</c>

01:16:16.669 --> 01:16:16.679 align:start position:0%
data inside vocab bpe ends up being
 

01:16:16.679 --> 01:16:20.669 align:start position:0%
data inside vocab bpe ends up being
equivalent<01:16:17.080><c> to</c><01:16:17.280><c> our</c><01:16:18.000><c> merges</c><01:16:19.000><c> so</c><01:16:19.880><c> uh</c><01:16:20.080><c> basically</c>

01:16:20.669 --> 01:16:20.679 align:start position:0%
equivalent to our merges so uh basically
 

01:16:20.679 --> 01:16:24.350 align:start position:0%
equivalent to our merges so uh basically
they<01:16:20.800><c> are</c><01:16:21.080><c> saving</c><01:16:21.520><c> and</c><01:16:21.800><c> loading</c><01:16:22.800><c> the</c><01:16:23.199><c> two</c><01:16:24.159><c> uh</c>

01:16:24.350 --> 01:16:24.360 align:start position:0%
they are saving and loading the two uh
 

01:16:24.360 --> 01:16:26.229 align:start position:0%
they are saving and loading the two uh
variables<01:16:24.800><c> that</c><01:16:24.920><c> for</c><01:16:25.120><c> us</c><01:16:25.280><c> are</c><01:16:25.440><c> also</c><01:16:25.719><c> critical</c>

01:16:26.229 --> 01:16:26.239 align:start position:0%
variables that for us are also critical
 

01:16:26.239 --> 01:16:28.310 align:start position:0%
variables that for us are also critical
the<01:16:26.360><c> merges</c><01:16:26.920><c> variable</c><01:16:27.560><c> and</c><01:16:27.800><c> the</c><01:16:27.920><c> vocab</c>

01:16:28.310 --> 01:16:28.320 align:start position:0%
the merges variable and the vocab
 

01:16:28.320 --> 01:16:31.110 align:start position:0%
the merges variable and the vocab
variable<01:16:28.920><c> using</c><01:16:29.280><c> just</c><01:16:29.480><c> these</c><01:16:29.600><c> two</c><01:16:30.120><c> variables</c>

01:16:31.110 --> 01:16:31.120 align:start position:0%
variable using just these two variables
 

01:16:31.120 --> 01:16:32.550 align:start position:0%
variable using just these two variables
you<01:16:31.199><c> can</c><01:16:31.320><c> represent</c><01:16:31.679><c> a</c><01:16:31.800><c> tokenizer</c><01:16:32.400><c> and</c><01:16:32.480><c> you</c>

01:16:32.550 --> 01:16:32.560 align:start position:0%
you can represent a tokenizer and you
 

01:16:32.560 --> 01:16:34.510 align:start position:0%
you can represent a tokenizer and you
can<01:16:32.719><c> both</c><01:16:32.880><c> do</c><01:16:33.000><c> encoding</c><01:16:33.520><c> and</c><01:16:33.679><c> decoding</c><01:16:34.320><c> once</c>

01:16:34.510 --> 01:16:34.520 align:start position:0%
can both do encoding and decoding once
 

01:16:34.520 --> 01:16:35.990 align:start position:0%
can both do encoding and decoding once
you've<01:16:34.719><c> trained</c><01:16:35.239><c> this</c>

01:16:35.990 --> 01:16:36.000 align:start position:0%
you've trained this
 

01:16:36.000 --> 01:16:39.990 align:start position:0%
you've trained this
tokenizer<01:16:37.000><c> now</c><01:16:37.199><c> the</c><01:16:37.320><c> only</c><01:16:37.560><c> thing</c><01:16:37.840><c> that</c><01:16:38.840><c> um</c><01:16:39.840><c> is</c>

01:16:39.990 --> 01:16:40.000 align:start position:0%
tokenizer now the only thing that um is
 

01:16:40.000 --> 01:16:42.550 align:start position:0%
tokenizer now the only thing that um is
actually<01:16:40.239><c> slightly</c><01:16:40.600><c> confusing</c><01:16:41.560><c> inside</c><01:16:42.320><c> what</c>

01:16:42.550 --> 01:16:42.560 align:start position:0%
actually slightly confusing inside what
 

01:16:42.560 --> 01:16:44.510 align:start position:0%
actually slightly confusing inside what
opening<01:16:42.880><c> ey</c><01:16:43.080><c> does</c><01:16:43.320><c> here</c><01:16:43.800><c> is</c><01:16:43.960><c> that</c><01:16:44.120><c> in</c><01:16:44.239><c> addition</c>

01:16:44.510 --> 01:16:44.520 align:start position:0%
opening ey does here is that in addition
 

01:16:44.520 --> 01:16:46.870 align:start position:0%
opening ey does here is that in addition
to<01:16:44.760><c> this</c><01:16:44.960><c> encoder</c><01:16:45.400><c> and</c><01:16:45.520><c> a</c><01:16:45.679><c> decoder</c><01:16:46.520><c> they</c><01:16:46.679><c> also</c>

01:16:46.870 --> 01:16:46.880 align:start position:0%
to this encoder and a decoder they also
 

01:16:46.880 --> 01:16:48.510 align:start position:0%
to this encoder and a decoder they also
have<01:16:47.000><c> something</c><01:16:47.280><c> called</c><01:16:47.480><c> a</c><01:16:47.639><c> bite</c><01:16:47.960><c> encoder</c><01:16:48.400><c> and</c>

01:16:48.510 --> 01:16:48.520 align:start position:0%
have something called a bite encoder and
 

01:16:48.520 --> 01:16:51.270 align:start position:0%
have something called a bite encoder and
a<01:16:48.679><c> bite</c><01:16:49.400><c> decoder</c><01:16:50.400><c> and</c><01:16:50.719><c> this</c><01:16:50.840><c> is</c><01:16:51.040><c> actually</c>

01:16:51.270 --> 01:16:51.280 align:start position:0%
a bite decoder and this is actually
 

01:16:51.280 --> 01:16:53.950 align:start position:0%
a bite decoder and this is actually
unfortunately<01:16:52.080><c> just</c>

01:16:53.950 --> 01:16:53.960 align:start position:0%
unfortunately just
 

01:16:53.960 --> 01:16:55.870 align:start position:0%
unfortunately just
kind<01:16:54.080><c> of</c><01:16:54.159><c> a</c><01:16:54.320><c> spirous</c><01:16:54.920><c> implementation</c><01:16:55.520><c> detail</c>

01:16:55.870 --> 01:16:55.880 align:start position:0%
kind of a spirous implementation detail
 

01:16:55.880 --> 01:16:57.709 align:start position:0%
kind of a spirous implementation detail
and<01:16:56.000><c> isn't</c><01:16:56.239><c> actually</c><01:16:56.600><c> deep</c><01:16:57.000><c> or</c><01:16:57.280><c> interesting</c>

01:16:57.709 --> 01:16:57.719 align:start position:0%
and isn't actually deep or interesting
 

01:16:57.719 --> 01:16:59.070 align:start position:0%
and isn't actually deep or interesting
in<01:16:57.840><c> any</c><01:16:58.040><c> way</c><01:16:58.199><c> so</c><01:16:58.320><c> I'm</c><01:16:58.440><c> going</c><01:16:58.560><c> to</c><01:16:58.679><c> skip</c><01:16:58.920><c> the</c>

01:16:59.070 --> 01:16:59.080 align:start position:0%
in any way so I'm going to skip the
 

01:16:59.080 --> 01:17:01.030 align:start position:0%
in any way so I'm going to skip the
discussion<01:16:59.400><c> of</c><01:16:59.560><c> it</c><01:17:00.239><c> but</c><01:17:00.400><c> what</c><01:17:00.520><c> opening</c><01:17:00.800><c> ey</c>

01:17:01.030 --> 01:17:01.040 align:start position:0%
discussion of it but what opening ey
 

01:17:01.040 --> 01:17:02.790 align:start position:0%
discussion of it but what opening ey
does<01:17:01.199><c> here</c><01:17:01.360><c> for</c><01:17:01.600><c> reasons</c><01:17:01.920><c> that</c><01:17:02.040><c> I</c><01:17:02.120><c> don't</c><01:17:02.280><c> fully</c>

01:17:02.790 --> 01:17:02.800 align:start position:0%
does here for reasons that I don't fully
 

01:17:02.800 --> 01:17:04.990 align:start position:0%
does here for reasons that I don't fully
understand<01:17:03.040><c> is</c><01:17:03.239><c> that</c><01:17:04.000><c> not</c><01:17:04.159><c> only</c><01:17:04.400><c> have</c><01:17:04.560><c> they</c>

01:17:04.990 --> 01:17:05.000 align:start position:0%
understand is that not only have they
 

01:17:05.000 --> 01:17:06.430 align:start position:0%
understand is that not only have they
this<01:17:05.159><c> tokenizer</c><01:17:05.719><c> which</c><01:17:05.840><c> can</c><01:17:05.960><c> encode</c><01:17:06.280><c> and</c>

01:17:06.430 --> 01:17:06.440 align:start position:0%
this tokenizer which can encode and
 

01:17:06.440 --> 01:17:08.149 align:start position:0%
this tokenizer which can encode and
decode<01:17:07.159><c> but</c><01:17:07.280><c> they</c><01:17:07.400><c> have</c><01:17:07.480><c> a</c><01:17:07.600><c> whole</c><01:17:07.840><c> separate</c>

01:17:08.149 --> 01:17:08.159 align:start position:0%
decode but they have a whole separate
 

01:17:08.159 --> 01:17:09.990 align:start position:0%
decode but they have a whole separate
layer<01:17:08.480><c> here</c><01:17:08.639><c> in</c><01:17:08.800><c> addition</c><01:17:09.480><c> that</c><01:17:09.600><c> is</c><01:17:09.719><c> used</c>

01:17:09.990 --> 01:17:10.000 align:start position:0%
layer here in addition that is used
 

01:17:10.000 --> 01:17:12.629 align:start position:0%
layer here in addition that is used
serially<01:17:10.520><c> with</c><01:17:10.639><c> the</c><01:17:11.040><c> tokenizer</c><01:17:12.040><c> and</c><01:17:12.159><c> so</c><01:17:12.400><c> you</c>

01:17:12.629 --> 01:17:12.639 align:start position:0%
serially with the tokenizer and so you
 

01:17:12.639 --> 01:17:16.070 align:start position:0%
serially with the tokenizer and so you
first<01:17:13.040><c> do</c><01:17:13.760><c> um</c><01:17:14.159><c> bite</c><01:17:14.480><c> encode</c><01:17:15.040><c> and</c><01:17:15.159><c> then</c><01:17:15.320><c> encode</c>

01:17:16.070 --> 01:17:16.080 align:start position:0%
first do um bite encode and then encode
 

01:17:16.080 --> 01:17:17.669 align:start position:0%
first do um bite encode and then encode
and<01:17:16.199><c> then</c><01:17:16.280><c> you</c><01:17:16.400><c> do</c><01:17:16.639><c> decode</c><01:17:17.159><c> and</c><01:17:17.280><c> then</c><01:17:17.440><c> bite</c>

01:17:17.669 --> 01:17:17.679 align:start position:0%
and then you do decode and then bite
 

01:17:17.679 --> 01:17:20.229 align:start position:0%
and then you do decode and then bite
decode<01:17:18.679><c> so</c><01:17:19.080><c> that's</c><01:17:19.280><c> the</c><01:17:19.400><c> loop</c><01:17:19.880><c> and</c><01:17:20.000><c> they</c><01:17:20.080><c> are</c>

01:17:20.229 --> 01:17:20.239 align:start position:0%
decode so that's the loop and they are
 

01:17:20.239 --> 01:17:22.830 align:start position:0%
decode so that's the loop and they are
just<01:17:20.400><c> stacked</c><01:17:20.800><c> serial</c><01:17:21.280><c> on</c><01:17:21.440><c> top</c><01:17:21.560><c> of</c><01:17:21.719><c> each</c><01:17:21.840><c> other</c>

01:17:22.830 --> 01:17:22.840 align:start position:0%
just stacked serial on top of each other
 

01:17:22.840 --> 01:17:24.709 align:start position:0%
just stacked serial on top of each other
and<01:17:23.120><c> and</c><01:17:23.719><c> it's</c><01:17:23.880><c> not</c><01:17:24.040><c> that</c><01:17:24.199><c> interesting</c><01:17:24.520><c> so</c><01:17:24.679><c> I</c>

01:17:24.709 --> 01:17:24.719 align:start position:0%
and and it's not that interesting so I
 

01:17:24.719 --> 01:17:25.950 align:start position:0%
and and it's not that interesting so I
won't<01:17:24.960><c> cover</c><01:17:25.159><c> it</c><01:17:25.320><c> and</c><01:17:25.400><c> you</c><01:17:25.480><c> can</c><01:17:25.600><c> step</c><01:17:25.800><c> through</c>

01:17:25.950 --> 01:17:25.960 align:start position:0%
won't cover it and you can step through
 

01:17:25.960 --> 01:17:28.629 align:start position:0%
won't cover it and you can step through
it<01:17:26.080><c> if</c><01:17:26.159><c> you'd</c><01:17:26.360><c> like</c><01:17:27.360><c> otherwise</c><01:17:27.840><c> this</c><01:17:28.000><c> file</c><01:17:28.520><c> if</c>

01:17:28.629 --> 01:17:28.639 align:start position:0%
it if you'd like otherwise this file if
 

01:17:28.639 --> 01:17:30.229 align:start position:0%
it if you'd like otherwise this file if
you<01:17:28.800><c> ignore</c><01:17:29.199><c> the</c><01:17:29.320><c> bite</c><01:17:29.520><c> encoder</c><01:17:29.840><c> and</c><01:17:29.920><c> the</c><01:17:30.040><c> bite</c>

01:17:30.229 --> 01:17:30.239 align:start position:0%
you ignore the bite encoder and the bite
 

01:17:30.239 --> 01:17:31.870 align:start position:0%
you ignore the bite encoder and the bite
decoder<01:17:30.719><c> will</c><01:17:30.880><c> be</c><01:17:31.080><c> algorithmically</c><01:17:31.719><c> very</c>

01:17:31.870 --> 01:17:31.880 align:start position:0%
decoder will be algorithmically very
 

01:17:31.880 --> 01:17:33.950 align:start position:0%
decoder will be algorithmically very
familiar<01:17:32.280><c> with</c><01:17:32.440><c> you</c><01:17:33.120><c> and</c><01:17:33.239><c> the</c><01:17:33.320><c> meat</c><01:17:33.560><c> of</c><01:17:33.719><c> it</c>

01:17:33.950 --> 01:17:33.960 align:start position:0%
familiar with you and the meat of it
 

01:17:33.960 --> 01:17:37.030 align:start position:0%
familiar with you and the meat of it
here<01:17:34.199><c> is</c><01:17:34.440><c> the</c><01:17:35.199><c> what</c><01:17:35.360><c> they</c><01:17:35.480><c> call</c><01:17:35.679><c> bpe</c><01:17:36.199><c> function</c>

01:17:37.030 --> 01:17:37.040 align:start position:0%
here is the what they call bpe function
 

01:17:37.040 --> 01:17:39.629 align:start position:0%
here is the what they call bpe function
and<01:17:37.159><c> you</c><01:17:37.280><c> should</c><01:17:37.480><c> recognize</c><01:17:38.040><c> this</c><01:17:38.840><c> Loop</c><01:17:39.320><c> here</c>

01:17:39.629 --> 01:17:39.639 align:start position:0%
and you should recognize this Loop here
 

01:17:39.639 --> 01:17:41.950 align:start position:0%
and you should recognize this Loop here
which<01:17:39.760><c> is</c><01:17:39.920><c> very</c><01:17:40.080><c> similar</c><01:17:40.360><c> to</c><01:17:40.520><c> our</c><01:17:40.840><c> own</c><01:17:41.159><c> y</c><01:17:41.400><c> Loop</c>

01:17:41.950 --> 01:17:41.960 align:start position:0%
which is very similar to our own y Loop
 

01:17:41.960 --> 01:17:43.510 align:start position:0%
which is very similar to our own y Loop
where<01:17:42.120><c> they're</c><01:17:42.320><c> trying</c><01:17:42.480><c> to</c><01:17:42.679><c> identify</c><01:17:43.159><c> the</c>

01:17:43.510 --> 01:17:43.520 align:start position:0%
where they're trying to identify the
 

01:17:43.520 --> 01:17:46.950 align:start position:0%
where they're trying to identify the
Byram<01:17:44.520><c> uh</c><01:17:44.880><c> a</c><01:17:45.239><c> pair</c><01:17:46.239><c> that</c><01:17:46.520><c> they</c><01:17:46.639><c> should</c><01:17:46.800><c> be</c>

01:17:46.950 --> 01:17:46.960 align:start position:0%
Byram uh a pair that they should be
 

01:17:46.960 --> 01:17:49.149 align:start position:0%
Byram uh a pair that they should be
merging<01:17:47.400><c> next</c><01:17:48.040><c> and</c><01:17:48.159><c> then</c><01:17:48.360><c> here</c><01:17:48.600><c> just</c><01:17:48.800><c> like</c><01:17:48.960><c> we</c>

01:17:49.149 --> 01:17:49.159 align:start position:0%
merging next and then here just like we
 

01:17:49.159 --> 01:17:50.950 align:start position:0%
merging next and then here just like we
had<01:17:49.600><c> they</c><01:17:49.719><c> have</c><01:17:49.840><c> a</c><01:17:49.920><c> for</c><01:17:50.159><c> Loop</c><01:17:50.320><c> trying</c><01:17:50.520><c> to</c><01:17:50.679><c> merge</c>

01:17:50.950 --> 01:17:50.960 align:start position:0%
had they have a for Loop trying to merge
 

01:17:50.960 --> 01:17:53.590 align:start position:0%
had they have a for Loop trying to merge
this<01:17:51.239><c> pair</c><01:17:52.239><c> uh</c><01:17:52.360><c> so</c><01:17:52.560><c> they</c><01:17:52.639><c> will</c><01:17:52.800><c> go</c><01:17:53.159><c> over</c><01:17:53.360><c> all</c><01:17:53.480><c> of</c>

01:17:53.590 --> 01:17:53.600 align:start position:0%
this pair uh so they will go over all of
 

01:17:53.600 --> 01:17:55.110 align:start position:0%
this pair uh so they will go over all of
the<01:17:53.719><c> sequence</c><01:17:54.120><c> and</c><01:17:54.239><c> they</c><01:17:54.360><c> will</c><01:17:54.639><c> merge</c><01:17:54.960><c> the</c>

01:17:55.110 --> 01:17:55.120 align:start position:0%
the sequence and they will merge the
 

01:17:55.120 --> 01:17:57.830 align:start position:0%
the sequence and they will merge the
pair<01:17:55.360><c> whenever</c><01:17:55.719><c> they</c><01:17:55.880><c> find</c><01:17:56.199><c> it</c><01:17:57.199><c> and</c><01:17:57.480><c> they</c><01:17:57.639><c> keep</c>

01:17:57.830 --> 01:17:57.840 align:start position:0%
pair whenever they find it and they keep
 

01:17:57.840 --> 01:17:59.790 align:start position:0%
pair whenever they find it and they keep
repeating<01:17:58.280><c> that</c><01:17:58.480><c> until</c><01:17:58.800><c> they</c><01:17:58.960><c> run</c><01:17:59.159><c> out</c><01:17:59.280><c> of</c>

01:17:59.790 --> 01:17:59.800 align:start position:0%
repeating that until they run out of
 

01:17:59.800 --> 01:18:02.350 align:start position:0%
repeating that until they run out of
possible<01:18:00.120><c> merges</c><01:18:00.600><c> in</c><01:18:00.800><c> the</c><01:18:01.280><c> in</c><01:18:01.400><c> the</c><01:18:01.560><c> text</c><01:18:02.159><c> so</c>

01:18:02.350 --> 01:18:02.360 align:start position:0%
possible merges in the in the text so
 

01:18:02.360 --> 01:18:04.550 align:start position:0%
possible merges in the in the text so
that's<01:18:02.480><c> the</c><01:18:02.600><c> meat</c><01:18:02.840><c> of</c><01:18:03.000><c> this</c><01:18:03.199><c> file</c><01:18:04.080><c> and</c><01:18:04.440><c> uh</c>

01:18:04.550 --> 01:18:04.560 align:start position:0%
that's the meat of this file and uh
 

01:18:04.560 --> 01:18:06.030 align:start position:0%
that's the meat of this file and uh
there's<01:18:04.719><c> an</c><01:18:04.840><c> encode</c><01:18:05.199><c> and</c><01:18:05.280><c> a</c><01:18:05.360><c> decode</c><01:18:05.719><c> function</c>

01:18:06.030 --> 01:18:06.040 align:start position:0%
there's an encode and a decode function
 

01:18:06.040 --> 01:18:08.149 align:start position:0%
there's an encode and a decode function
just<01:18:06.159><c> like</c><01:18:06.320><c> we</c><01:18:06.440><c> have</c><01:18:06.600><c> implemented</c><01:18:07.040><c> it</c><01:18:07.800><c> so</c><01:18:08.000><c> long</c>

01:18:08.149 --> 01:18:08.159 align:start position:0%
just like we have implemented it so long
 

01:18:08.159 --> 01:18:09.709 align:start position:0%
just like we have implemented it so long
story<01:18:08.440><c> short</c><01:18:08.840><c> what</c><01:18:08.960><c> I</c><01:18:09.040><c> want</c><01:18:09.159><c> you</c><01:18:09.239><c> to</c><01:18:09.360><c> take</c><01:18:09.520><c> away</c>

01:18:09.709 --> 01:18:09.719 align:start position:0%
story short what I want you to take away
 

01:18:09.719 --> 01:18:11.629 align:start position:0%
story short what I want you to take away
at<01:18:09.840><c> this</c><01:18:09.960><c> point</c><01:18:10.239><c> is</c><01:18:10.440><c> that</c><01:18:11.040><c> unfortunately</c><01:18:11.560><c> it's</c>

01:18:11.629 --> 01:18:11.639 align:start position:0%
at this point is that unfortunately it's
 

01:18:11.639 --> 01:18:12.990 align:start position:0%
at this point is that unfortunately it's
a<01:18:11.760><c> little</c><01:18:11.880><c> bit</c><01:18:12.000><c> of</c><01:18:12.080><c> a</c><01:18:12.159><c> messy</c><01:18:12.480><c> code</c><01:18:12.679><c> that</c><01:18:12.800><c> they</c>

01:18:12.990 --> 01:18:13.000 align:start position:0%
a little bit of a messy code that they
 

01:18:13.000 --> 01:18:15.110 align:start position:0%
a little bit of a messy code that they
have<01:18:13.440><c> but</c><01:18:13.639><c> algorithmically</c><01:18:14.280><c> it</c><01:18:14.360><c> is</c><01:18:14.560><c> identical</c>

01:18:15.110 --> 01:18:15.120 align:start position:0%
have but algorithmically it is identical
 

01:18:15.120 --> 01:18:17.709 align:start position:0%
have but algorithmically it is identical
to<01:18:15.360><c> what</c><01:18:15.560><c> we've</c><01:18:15.800><c> built</c><01:18:16.120><c> up</c><01:18:16.320><c> above</c><01:18:17.239><c> and</c><01:18:17.600><c> what</c>

01:18:17.709 --> 01:18:17.719 align:start position:0%
to what we've built up above and what
 

01:18:17.719 --> 01:18:19.149 align:start position:0%
to what we've built up above and what
we've<01:18:17.920><c> built</c><01:18:18.159><c> up</c><01:18:18.320><c> above</c><01:18:18.600><c> if</c><01:18:18.679><c> you</c><01:18:19.040><c> understand</c>

01:18:19.149 --> 01:18:19.159 align:start position:0%
we've built up above if you understand
 

01:18:19.159 --> 01:18:21.310 align:start position:0%
we've built up above if you understand
it<01:18:19.400><c> is</c><01:18:19.600><c> algorithmically</c><01:18:20.360><c> what</c><01:18:20.440><c> is</c><01:18:20.639><c> necessary</c>

01:18:21.310 --> 01:18:21.320 align:start position:0%
it is algorithmically what is necessary
 

01:18:21.320 --> 01:18:23.709 align:start position:0%
it is algorithmically what is necessary
to<01:18:21.600><c> actually</c><01:18:21.840><c> build</c><01:18:22.080><c> a</c><01:18:22.199><c> BP</c><01:18:22.679><c> to</c><01:18:22.960><c> organizer</c>

01:18:23.709 --> 01:18:23.719 align:start position:0%
to actually build a BP to organizer
 

01:18:23.719 --> 01:18:26.830 align:start position:0%
to actually build a BP to organizer
train<01:18:24.000><c> it</c><01:18:24.360><c> and</c><01:18:24.480><c> then</c><01:18:24.679><c> both</c><01:18:24.960><c> encode</c><01:18:25.320><c> and</c><01:18:25.840><c> decode</c>

01:18:26.830 --> 01:18:26.840 align:start position:0%
train it and then both encode and decode
 

01:18:26.840 --> 01:18:28.270 align:start position:0%
train it and then both encode and decode
the<01:18:26.960><c> next</c><01:18:27.159><c> topic</c><01:18:27.400><c> I</c><01:18:27.440><c> would</c><01:18:27.600><c> like</c><01:18:27.679><c> to</c><01:18:27.760><c> turn</c><01:18:27.960><c> to</c>

01:18:28.270 --> 01:18:28.280 align:start position:0%
the next topic I would like to turn to
 

01:18:28.280 --> 01:18:30.910 align:start position:0%
the next topic I would like to turn to
is<01:18:28.480><c> that</c><01:18:28.600><c> of</c><01:18:28.800><c> special</c><01:18:29.320><c> tokens</c><01:18:30.320><c> so</c><01:18:30.520><c> in</c><01:18:30.639><c> addition</c>

01:18:30.910 --> 01:18:30.920 align:start position:0%
is that of special tokens so in addition
 

01:18:30.920 --> 01:18:32.590 align:start position:0%
is that of special tokens so in addition
to<01:18:31.080><c> tokens</c><01:18:31.360><c> that</c><01:18:31.440><c> are</c><01:18:31.560><c> coming</c><01:18:31.800><c> from</c><01:18:32.280><c> you</c><01:18:32.400><c> know</c>

01:18:32.590 --> 01:18:32.600 align:start position:0%
to tokens that are coming from you know
 

01:18:32.600 --> 01:18:35.229 align:start position:0%
to tokens that are coming from you know
raw<01:18:32.880><c> bytes</c><01:18:33.320><c> and</c><01:18:33.440><c> the</c><01:18:33.600><c> BP</c><01:18:34.000><c> merges</c><01:18:34.920><c> we</c><01:18:35.040><c> can</c>

01:18:35.229 --> 01:18:35.239 align:start position:0%
raw bytes and the BP merges we can
 

01:18:35.239 --> 01:18:36.790 align:start position:0%
raw bytes and the BP merges we can
insert<01:18:35.560><c> all</c><01:18:35.719><c> kinds</c><01:18:35.880><c> of</c><01:18:36.040><c> tokens</c><01:18:36.440><c> that</c><01:18:36.560><c> we</c><01:18:36.679><c> are</c>

01:18:36.790 --> 01:18:36.800 align:start position:0%
insert all kinds of tokens that we are
 

01:18:36.800 --> 01:18:38.950 align:start position:0%
insert all kinds of tokens that we are
going<01:18:36.960><c> to</c><01:18:37.120><c> use</c><01:18:37.400><c> to</c><01:18:38.000><c> delimit</c><01:18:38.480><c> different</c><01:18:38.719><c> parts</c>

01:18:38.950 --> 01:18:38.960 align:start position:0%
going to use to delimit different parts
 

01:18:38.960 --> 01:18:41.030 align:start position:0%
going to use to delimit different parts
of<01:18:39.080><c> the</c><01:18:39.239><c> data</c><01:18:39.719><c> or</c><01:18:39.960><c> introduced</c><01:18:40.480><c> to</c><01:18:40.600><c> create</c><01:18:40.880><c> a</c>

01:18:41.030 --> 01:18:41.040 align:start position:0%
of the data or introduced to create a
 

01:18:41.040 --> 01:18:44.790 align:start position:0%
of the data or introduced to create a
special<01:18:41.480><c> structure</c><01:18:42.280><c> of</c><01:18:42.560><c> the</c><01:18:42.760><c> token</c><01:18:43.800><c> streams</c>

01:18:44.790 --> 01:18:44.800 align:start position:0%
special structure of the token streams
 

01:18:44.800 --> 01:18:47.470 align:start position:0%
special structure of the token streams
so<01:18:45.520><c> in</c><01:18:46.159><c> uh</c><01:18:46.280><c> if</c><01:18:46.360><c> you</c><01:18:46.520><c> look</c><01:18:46.639><c> at</c><01:18:46.800><c> this</c><01:18:47.000><c> encoder</c>

01:18:47.470 --> 01:18:47.480 align:start position:0%
so in uh if you look at this encoder
 

01:18:47.480 --> 01:18:50.870 align:start position:0%
so in uh if you look at this encoder
object<01:18:47.960><c> from</c><01:18:48.280><c> open</c><01:18:48.560><c> AIS</c><01:18:48.960><c> gpd2</c><01:18:49.960><c> right</c><01:18:50.159><c> here</c><01:18:50.760><c> we</c>

01:18:50.870 --> 01:18:50.880 align:start position:0%
object from open AIS gpd2 right here we
 

01:18:50.880 --> 01:18:52.149 align:start position:0%
object from open AIS gpd2 right here we
mentioned<01:18:51.159><c> this</c><01:18:51.280><c> is</c><01:18:51.400><c> very</c><01:18:51.520><c> similar</c><01:18:51.800><c> to</c><01:18:51.920><c> our</c>

01:18:52.149 --> 01:18:52.159 align:start position:0%
mentioned this is very similar to our
 

01:18:52.159 --> 01:18:54.830 align:start position:0%
mentioned this is very similar to our
vocab<01:18:53.159><c> you'll</c><01:18:53.400><c> notice</c><01:18:53.760><c> that</c><01:18:54.080><c> the</c><01:18:54.280><c> length</c><01:18:54.600><c> of</c>

01:18:54.830 --> 01:18:54.840 align:start position:0%
vocab you'll notice that the length of
 

01:18:54.840 --> 01:18:58.870 align:start position:0%
vocab you'll notice that the length of
this<01:18:55.480><c> is</c>

01:18:58.870 --> 01:18:58.880 align:start position:0%
 
 

01:18:58.880 --> 01:19:01.830 align:start position:0%
 
50257<01:18:59.880><c> and</c><01:19:00.000><c> as</c><01:19:00.080><c> I</c><01:19:00.199><c> mentioned</c><01:19:00.440><c> it's</c><01:19:00.719><c> mapping</c><01:19:01.719><c> uh</c>

01:19:01.830 --> 01:19:01.840 align:start position:0%
50257 and as I mentioned it's mapping uh
 

01:19:01.840 --> 01:19:03.350 align:start position:0%
50257 and as I mentioned it's mapping uh
and<01:19:01.920><c> it's</c><01:19:02.120><c> inverted</c><01:19:02.600><c> from</c><01:19:02.800><c> the</c><01:19:02.960><c> mapping</c><01:19:03.239><c> of</c>

01:19:03.350 --> 01:19:03.360 align:start position:0%
and it's inverted from the mapping of
 

01:19:03.360 --> 01:19:06.110 align:start position:0%
and it's inverted from the mapping of
our<01:19:03.520><c> vocab</c><01:19:04.159><c> our</c><01:19:04.320><c> vocab</c><01:19:04.760><c> goes</c><01:19:05.000><c> from</c><01:19:05.400><c> integer</c><01:19:05.840><c> to</c>

01:19:06.110 --> 01:19:06.120 align:start position:0%
our vocab our vocab goes from integer to
 

01:19:06.120 --> 01:19:08.070 align:start position:0%
our vocab our vocab goes from integer to
string<01:19:06.920><c> and</c><01:19:07.080><c> they</c><01:19:07.239><c> go</c><01:19:07.400><c> the</c><01:19:07.520><c> other</c><01:19:07.679><c> way</c><01:19:07.840><c> around</c>

01:19:08.070 --> 01:19:08.080 align:start position:0%
string and they go the other way around
 

01:19:08.080 --> 01:19:11.830 align:start position:0%
string and they go the other way around
for<01:19:08.960><c> no</c><01:19:09.440><c> amazing</c><01:19:10.040><c> reason</c><01:19:11.040><c> um</c><01:19:11.520><c> but</c><01:19:11.639><c> the</c><01:19:11.719><c> thing</c>

01:19:11.830 --> 01:19:11.840 align:start position:0%
for no amazing reason um but the thing
 

01:19:11.840 --> 01:19:13.270 align:start position:0%
for no amazing reason um but the thing
to<01:19:12.000><c> note</c><01:19:12.199><c> here</c><01:19:12.320><c> is</c><01:19:12.440><c> that</c><01:19:12.639><c> this</c><01:19:12.800><c> the</c><01:19:12.920><c> mapping</c>

01:19:13.270 --> 01:19:13.280 align:start position:0%
to note here is that this the mapping
 

01:19:13.280 --> 01:19:14.990 align:start position:0%
to note here is that this the mapping
table<01:19:13.639><c> here</c><01:19:13.840><c> is</c>

01:19:14.990 --> 01:19:15.000 align:start position:0%
table here is
 

01:19:15.000 --> 01:19:18.590 align:start position:0%
table here is
50257<01:19:16.000><c> where</c><01:19:16.199><c> does</c><01:19:16.360><c> that</c><01:19:16.520><c> number</c><01:19:16.760><c> come</c><01:19:17.159><c> from</c>

01:19:18.590 --> 01:19:18.600 align:start position:0%
50257 where does that number come from
 

01:19:18.600 --> 01:19:20.790 align:start position:0%
50257 where does that number come from
where<01:19:19.600><c> what</c><01:19:19.719><c> are</c><01:19:19.880><c> the</c><01:19:20.000><c> tokens</c><01:19:20.360><c> as</c><01:19:20.440><c> I</c><01:19:20.520><c> mentioned</c>

01:19:20.790 --> 01:19:20.800 align:start position:0%
where what are the tokens as I mentioned
 

01:19:20.800 --> 01:19:24.390 align:start position:0%
where what are the tokens as I mentioned
there<01:19:20.880><c> are</c><01:19:21.080><c> 256</c><01:19:22.080><c> raw</c><01:19:22.400><c> bite</c><01:19:22.639><c> token</c>

01:19:24.390 --> 01:19:24.400 align:start position:0%
there are 256 raw bite token
 

01:19:24.400 --> 01:19:27.189 align:start position:0%
there are 256 raw bite token
tokens<01:19:25.400><c> and</c><01:19:25.600><c> then</c><01:19:26.239><c> opena</c><01:19:26.719><c> actually</c><01:19:26.960><c> did</c>

01:19:27.189 --> 01:19:27.199 align:start position:0%
tokens and then opena actually did
 

01:19:27.199 --> 01:19:28.629 align:start position:0%
tokens and then opena actually did
50,000

01:19:28.629 --> 01:19:28.639 align:start position:0%
50,000
 

01:19:28.639 --> 01:19:31.990 align:start position:0%
50,000
merges<01:19:29.639><c> so</c><01:19:29.840><c> those</c><01:19:30.040><c> become</c><01:19:30.440><c> the</c><01:19:30.600><c> other</c><01:19:31.080><c> tokens</c>

01:19:31.990 --> 01:19:32.000 align:start position:0%
merges so those become the other tokens
 

01:19:32.000 --> 01:19:34.030 align:start position:0%
merges so those become the other tokens
but<01:19:32.239><c> this</c><01:19:32.400><c> would</c><01:19:32.520><c> have</c><01:19:32.639><c> been</c>

01:19:34.030 --> 01:19:34.040 align:start position:0%
but this would have been
 

01:19:34.040 --> 01:19:37.669 align:start position:0%
but this would have been
50256<01:19:35.040><c> so</c><01:19:35.320><c> what</c><01:19:35.400><c> is</c><01:19:35.600><c> the</c><01:19:35.800><c> 57th</c><01:19:36.800><c> token</c><01:19:37.520><c> and</c>

01:19:37.669 --> 01:19:37.679 align:start position:0%
50256 so what is the 57th token and
 

01:19:37.679 --> 01:19:40.510 align:start position:0%
50256 so what is the 57th token and
there<01:19:37.760><c> is</c><01:19:37.960><c> basically</c><01:19:38.320><c> one</c><01:19:38.679><c> special</c>

01:19:40.510 --> 01:19:40.520 align:start position:0%
there is basically one special
 

01:19:40.520 --> 01:19:43.229 align:start position:0%
there is basically one special
token<01:19:41.520><c> and</c><01:19:41.679><c> that</c><01:19:41.800><c> one</c><01:19:42.040><c> special</c><01:19:42.360><c> token</c><01:19:42.960><c> you</c><01:19:43.080><c> can</c>

01:19:43.229 --> 01:19:43.239 align:start position:0%
token and that one special token you can
 

01:19:43.239 --> 01:19:47.030 align:start position:0%
token and that one special token you can
see<01:19:43.679><c> is</c><01:19:43.880><c> called</c><01:19:44.480><c> end</c><01:19:44.800><c> of</c><01:19:45.480><c> text</c><01:19:46.480><c> so</c><01:19:46.639><c> this</c><01:19:46.760><c> is</c><01:19:46.880><c> a</c>

01:19:47.030 --> 01:19:47.040 align:start position:0%
see is called end of text so this is a
 

01:19:47.040 --> 01:19:49.550 align:start position:0%
see is called end of text so this is a
special<01:19:47.360><c> token</c><01:19:48.080><c> and</c><01:19:48.360><c> it's</c><01:19:48.560><c> the</c><01:19:48.760><c> very</c><01:19:49.000><c> last</c>

01:19:49.550 --> 01:19:49.560 align:start position:0%
special token and it's the very last
 

01:19:49.560 --> 01:19:52.470 align:start position:0%
special token and it's the very last
token<01:19:50.560><c> and</c><01:19:50.760><c> this</c><01:19:50.920><c> token</c><01:19:51.280><c> is</c><01:19:51.400><c> used</c><01:19:51.760><c> to</c><01:19:51.960><c> delimit</c>

01:19:52.470 --> 01:19:52.480 align:start position:0%
token and this token is used to delimit
 

01:19:52.480 --> 01:19:55.750 align:start position:0%
token and this token is used to delimit
documents<01:19:52.920><c> ments</c><01:19:53.239><c> in</c><01:19:53.360><c> the</c><01:19:53.480><c> training</c><01:19:54.159><c> set</c><01:19:55.159><c> so</c>

01:19:55.750 --> 01:19:55.760 align:start position:0%
documents ments in the training set so
 

01:19:55.760 --> 01:19:57.310 align:start position:0%
documents ments in the training set so
when<01:19:55.920><c> we're</c><01:19:56.080><c> creating</c><01:19:56.400><c> the</c><01:19:56.520><c> training</c><01:19:56.880><c> data</c><01:19:57.239><c> we</c>

01:19:57.310 --> 01:19:57.320 align:start position:0%
when we're creating the training data we
 

01:19:57.320 --> 01:19:59.189 align:start position:0%
when we're creating the training data we
have<01:19:57.440><c> all</c><01:19:57.600><c> these</c><01:19:57.800><c> documents</c><01:19:58.480><c> and</c><01:19:58.600><c> we</c><01:19:58.719><c> tokenize</c>

01:19:59.189 --> 01:19:59.199 align:start position:0%
have all these documents and we tokenize
 

01:19:59.199 --> 01:20:01.790 align:start position:0%
have all these documents and we tokenize
them<01:19:59.400><c> and</c><01:19:59.480><c> we</c><01:19:59.600><c> get</c><01:19:59.679><c> a</c><01:19:59.760><c> stream</c><01:20:00.040><c> of</c><01:20:00.600><c> tokens</c><01:20:01.600><c> those</c>

01:20:01.790 --> 01:20:01.800 align:start position:0%
them and we get a stream of tokens those
 

01:20:01.800 --> 01:20:05.270 align:start position:0%
them and we get a stream of tokens those
tokens<01:20:02.199><c> only</c><01:20:02.440><c> range</c><01:20:02.719><c> from</c><01:20:02.960><c> Z</c><01:20:03.560><c> to</c>

01:20:05.270 --> 01:20:05.280 align:start position:0%
tokens only range from Z to
 

01:20:05.280 --> 01:20:07.390 align:start position:0%
tokens only range from Z to
50256<01:20:06.280><c> and</c><01:20:06.440><c> then</c><01:20:06.639><c> in</c><01:20:06.800><c> between</c><01:20:07.199><c> those</c>

01:20:07.390 --> 01:20:07.400 align:start position:0%
50256 and then in between those
 

01:20:07.400 --> 01:20:10.390 align:start position:0%
50256 and then in between those
documents<01:20:07.960><c> we</c><01:20:08.120><c> put</c><01:20:08.400><c> special</c><01:20:09.040><c> end</c><01:20:09.280><c> of</c><01:20:09.520><c> text</c>

01:20:10.390 --> 01:20:10.400 align:start position:0%
documents we put special end of text
 

01:20:10.400 --> 01:20:12.790 align:start position:0%
documents we put special end of text
token<01:20:11.400><c> and</c><01:20:11.520><c> we</c><01:20:11.719><c> insert</c><01:20:12.120><c> that</c><01:20:12.280><c> token</c><01:20:12.639><c> in</c>

01:20:12.790 --> 01:20:12.800 align:start position:0%
token and we insert that token in
 

01:20:12.800 --> 01:20:15.629 align:start position:0%
token and we insert that token in
between<01:20:13.480><c> documents</c><01:20:14.480><c> and</c><01:20:14.920><c> we</c><01:20:15.040><c> are</c><01:20:15.199><c> using</c><01:20:15.480><c> this</c>

01:20:15.629 --> 01:20:15.639 align:start position:0%
between documents and we are using this
 

01:20:15.639 --> 01:20:18.390 align:start position:0%
between documents and we are using this
as<01:20:15.760><c> a</c><01:20:15.880><c> signal</c><01:20:16.199><c> to</c><01:20:16.360><c> the</c><01:20:16.600><c> language</c><01:20:17.040><c> model</c><01:20:18.000><c> that</c>

01:20:18.390 --> 01:20:18.400 align:start position:0%
as a signal to the language model that
 

01:20:18.400 --> 01:20:20.709 align:start position:0%
as a signal to the language model that
the<01:20:18.639><c> document</c><01:20:19.000><c> has</c><01:20:19.199><c> ended</c><01:20:19.800><c> and</c><01:20:19.960><c> what</c><01:20:20.159><c> follows</c>

01:20:20.709 --> 01:20:20.719 align:start position:0%
the document has ended and what follows
 

01:20:20.719 --> 01:20:23.270 align:start position:0%
the document has ended and what follows
is<01:20:20.880><c> going</c><01:20:21.040><c> to</c><01:20:21.159><c> be</c><01:20:21.360><c> unrelated</c><01:20:22.000><c> to</c><01:20:22.159><c> the</c><01:20:22.280><c> document</c>

01:20:23.270 --> 01:20:23.280 align:start position:0%
is going to be unrelated to the document
 

01:20:23.280 --> 01:20:25.189 align:start position:0%
is going to be unrelated to the document
previously<01:20:24.280><c> that</c><01:20:24.400><c> said</c><01:20:24.560><c> the</c><01:20:24.679><c> language</c><01:20:24.960><c> model</c>

01:20:25.189 --> 01:20:25.199 align:start position:0%
previously that said the language model
 

01:20:25.199 --> 01:20:27.189 align:start position:0%
previously that said the language model
has<01:20:25.320><c> to</c><01:20:25.400><c> learn</c><01:20:25.639><c> this</c><01:20:25.800><c> from</c><01:20:26.000><c> data</c><01:20:26.520><c> it</c><01:20:26.880><c> it</c><01:20:27.000><c> needs</c>

01:20:27.189 --> 01:20:27.199 align:start position:0%
has to learn this from data it it needs
 

01:20:27.199 --> 01:20:29.709 align:start position:0%
has to learn this from data it it needs
to<01:20:27.360><c> learn</c><01:20:27.760><c> that</c><01:20:28.239><c> this</c><01:20:28.400><c> token</c><01:20:28.800><c> usually</c><01:20:29.199><c> means</c>

01:20:29.709 --> 01:20:29.719 align:start position:0%
to learn that this token usually means
 

01:20:29.719 --> 01:20:31.910 align:start position:0%
to learn that this token usually means
that<01:20:29.880><c> it</c><01:20:30.000><c> should</c><01:20:30.280><c> wipe</c><01:20:30.880><c> its</c><01:20:31.120><c> sort</c><01:20:31.320><c> of</c><01:20:31.520><c> memory</c>

01:20:31.910 --> 01:20:31.920 align:start position:0%
that it should wipe its sort of memory
 

01:20:31.920 --> 01:20:34.030 align:start position:0%
that it should wipe its sort of memory
of<01:20:32.120><c> what</c><01:20:32.280><c> came</c><01:20:32.480><c> before</c><01:20:33.199><c> and</c><01:20:33.400><c> what</c><01:20:33.560><c> came</c><01:20:33.760><c> before</c>

01:20:34.030 --> 01:20:34.040 align:start position:0%
of what came before and what came before
 

01:20:34.040 --> 01:20:35.550 align:start position:0%
of what came before and what came before
this<01:20:34.159><c> token</c><01:20:34.440><c> is</c><01:20:34.560><c> not</c><01:20:34.760><c> actually</c><01:20:35.040><c> informative</c>

01:20:35.550 --> 01:20:35.560 align:start position:0%
this token is not actually informative
 

01:20:35.560 --> 01:20:37.550 align:start position:0%
this token is not actually informative
to<01:20:35.760><c> what</c><01:20:35.880><c> comes</c><01:20:36.199><c> next</c><01:20:36.880><c> but</c><01:20:37.000><c> we</c><01:20:37.120><c> are</c><01:20:37.280><c> expecting</c>

01:20:37.550 --> 01:20:37.560 align:start position:0%
to what comes next but we are expecting
 

01:20:37.560 --> 01:20:38.990 align:start position:0%
to what comes next but we are expecting
the<01:20:37.679><c> language</c><01:20:37.960><c> model</c><01:20:38.199><c> to</c><01:20:38.320><c> just</c><01:20:38.440><c> like</c><01:20:38.600><c> learn</c>

01:20:38.990 --> 01:20:39.000 align:start position:0%
the language model to just like learn
 

01:20:39.000 --> 01:20:40.910 align:start position:0%
the language model to just like learn
this<01:20:39.600><c> but</c><01:20:39.719><c> we're</c><01:20:39.960><c> giving</c><01:20:40.159><c> it</c><01:20:40.360><c> the</c><01:20:40.560><c> Special</c>

01:20:40.910 --> 01:20:40.920 align:start position:0%
this but we're giving it the Special
 

01:20:40.920 --> 01:20:44.070 align:start position:0%
this but we're giving it the Special
sort<01:20:41.120><c> of</c><01:20:41.360><c> the</c><01:20:41.520><c> limiter</c><01:20:42.239><c> of</c><01:20:42.440><c> these</c><01:20:43.080><c> documents</c>

01:20:44.070 --> 01:20:44.080 align:start position:0%
sort of the limiter of these documents
 

01:20:44.080 --> 01:20:46.669 align:start position:0%
sort of the limiter of these documents
we<01:20:44.159><c> can</c><01:20:44.320><c> go</c><01:20:44.440><c> here</c><01:20:44.560><c> to</c><01:20:44.719><c> Tech</c><01:20:44.920><c> tokenizer</c><01:20:45.880><c> and</c><01:20:46.320><c> um</c>

01:20:46.669 --> 01:20:46.679 align:start position:0%
we can go here to Tech tokenizer and um
 

01:20:46.679 --> 01:20:49.470 align:start position:0%
we can go here to Tech tokenizer and um
this<01:20:46.880><c> the</c><01:20:46.960><c> gpt2</c><01:20:47.880><c> tokenizer</c><01:20:48.880><c> uh</c><01:20:49.000><c> our</c><01:20:49.199><c> code</c><01:20:49.400><c> that</c>

01:20:49.470 --> 01:20:49.480 align:start position:0%
this the gpt2 tokenizer uh our code that
 

01:20:49.480 --> 01:20:51.430 align:start position:0%
this the gpt2 tokenizer uh our code that
we've<01:20:49.639><c> been</c><01:20:49.760><c> playing</c><01:20:50.040><c> with</c><01:20:50.280><c> before</c><01:20:51.040><c> so</c><01:20:51.159><c> we</c><01:20:51.280><c> can</c>

01:20:51.430 --> 01:20:51.440 align:start position:0%
we've been playing with before so we can
 

01:20:51.440 --> 01:20:53.669 align:start position:0%
we've been playing with before so we can
add<01:20:51.679><c> here</c><01:20:51.880><c> right</c><01:20:52.120><c> hello</c><01:20:52.440><c> world</c><01:20:52.760><c> world</c><01:20:53.320><c> how</c><01:20:53.480><c> are</c>

01:20:53.669 --> 01:20:53.679 align:start position:0%
add here right hello world world how are
 

01:20:53.679 --> 01:20:55.830 align:start position:0%
add here right hello world world how are
you<01:20:54.239><c> and</c><01:20:54.320><c> we're</c><01:20:54.480><c> getting</c><01:20:54.719><c> different</c><01:20:54.960><c> tokens</c>

01:20:55.830 --> 01:20:55.840 align:start position:0%
you and we're getting different tokens
 

01:20:55.840 --> 01:20:58.229 align:start position:0%
you and we're getting different tokens
but<01:20:56.040><c> now</c><01:20:56.199><c> you</c><01:20:56.280><c> can</c><01:20:56.600><c> see</c><01:20:57.600><c> what</c><01:20:57.679><c> if</c><01:20:57.880><c> what</c><01:20:57.960><c> happens</c>

01:20:58.229 --> 01:20:58.239 align:start position:0%
but now you can see what if what happens
 

01:20:58.239 --> 01:21:02.189 align:start position:0%
but now you can see what if what happens
if<01:20:58.320><c> I</c><01:20:58.440><c> put</c><01:20:58.639><c> end</c><01:20:58.840><c> of</c><01:20:59.440><c> text</c><01:21:00.440><c> you</c><01:21:00.679><c> see</c><01:21:00.960><c> how</c><01:21:01.679><c> until</c><01:21:02.080><c> I</c>

01:21:02.189 --> 01:21:02.199 align:start position:0%
if I put end of text you see how until I
 

01:21:02.199 --> 01:21:03.910 align:start position:0%
if I put end of text you see how until I
finished<01:21:02.560><c> it</c><01:21:03.159><c> these</c><01:21:03.280><c> are</c><01:21:03.440><c> all</c><01:21:03.600><c> different</c>

01:21:03.910 --> 01:21:03.920 align:start position:0%
finished it these are all different
 

01:21:03.920 --> 01:21:06.350 align:start position:0%
finished it these are all different
tokens<01:21:04.920><c> end</c><01:21:05.199><c> of</c>

01:21:06.350 --> 01:21:06.360 align:start position:0%
tokens end of
 

01:21:06.360 --> 01:21:08.790 align:start position:0%
tokens end of
text<01:21:07.360><c> still</c><01:21:07.639><c> set</c><01:21:07.920><c> different</c><01:21:08.159><c> tokens</c><01:21:08.520><c> and</c><01:21:08.679><c> now</c>

01:21:08.790 --> 01:21:08.800 align:start position:0%
text still set different tokens and now
 

01:21:08.800 --> 01:21:13.270 align:start position:0%
text still set different tokens and now
when<01:21:08.920><c> I</c><01:21:09.199><c> finish</c><01:21:09.480><c> it</c><01:21:10.040><c> suddenly</c><01:21:11.040><c> we</c><01:21:11.199><c> get</c><01:21:11.360><c> token</c>

01:21:13.270 --> 01:21:13.280 align:start position:0%
when I finish it suddenly we get token
 

01:21:13.280 --> 01:21:15.870 align:start position:0%
when I finish it suddenly we get token
50256<01:21:14.280><c> and</c><01:21:14.400><c> the</c><01:21:14.520><c> reason</c><01:21:14.840><c> this</c><01:21:15.000><c> works</c><01:21:15.440><c> is</c>

01:21:15.870 --> 01:21:15.880 align:start position:0%
50256 and the reason this works is
 

01:21:15.880 --> 01:21:18.229 align:start position:0%
50256 and the reason this works is
because<01:21:16.880><c> this</c><01:21:17.040><c> didn't</c><01:21:17.360><c> actually</c><01:21:17.679><c> go</c><01:21:17.920><c> through</c>

01:21:18.229 --> 01:21:18.239 align:start position:0%
because this didn't actually go through
 

01:21:18.239 --> 01:21:21.910 align:start position:0%
because this didn't actually go through
the<01:21:18.440><c> bpe</c><01:21:18.960><c> merges</c><01:21:19.960><c> instead</c><01:21:20.960><c> the</c><01:21:21.159><c> code</c><01:21:21.679><c> that</c>

01:21:21.910 --> 01:21:21.920 align:start position:0%
the bpe merges instead the code that
 

01:21:21.920 --> 01:21:24.990 align:start position:0%
the bpe merges instead the code that
actually<01:21:23.000><c> outposted</c><01:21:23.600><c> tokens</c><01:21:24.199><c> has</c><01:21:24.600><c> special</c>

01:21:24.990 --> 01:21:25.000 align:start position:0%
actually outposted tokens has special
 

01:21:25.000 --> 01:21:28.030 align:start position:0%
actually outposted tokens has special
case<01:21:25.320><c> instructions</c><01:21:26.320><c> for</c><01:21:26.560><c> handling</c><01:21:27.320><c> special</c>

01:21:28.030 --> 01:21:28.040 align:start position:0%
case instructions for handling special
 

01:21:28.040 --> 01:21:30.750 align:start position:0%
case instructions for handling special
tokens<01:21:29.040><c> um</c><01:21:29.400><c> we</c><01:21:29.520><c> did</c><01:21:29.679><c> not</c><01:21:29.840><c> see</c><01:21:30.120><c> these</c><01:21:30.360><c> special</c>

01:21:30.750 --> 01:21:30.760 align:start position:0%
tokens um we did not see these special
 

01:21:30.760 --> 01:21:32.830 align:start position:0%
tokens um we did not see these special
instructions<01:21:31.400><c> for</c><01:21:31.600><c> handling</c><01:21:32.000><c> special</c><01:21:32.280><c> tokens</c>

01:21:32.830 --> 01:21:32.840 align:start position:0%
instructions for handling special tokens
 

01:21:32.840 --> 01:21:36.350 align:start position:0%
instructions for handling special tokens
in<01:21:33.080><c> the</c><01:21:33.719><c> encoder</c><01:21:34.199><c> dopy</c><01:21:34.800><c> it's</c><01:21:35.040><c> absent</c><01:21:35.560><c> there</c>

01:21:36.350 --> 01:21:36.360 align:start position:0%
in the encoder dopy it's absent there
 

01:21:36.360 --> 01:21:37.990 align:start position:0%
in the encoder dopy it's absent there
but<01:21:36.480><c> if</c><01:21:36.560><c> you</c><01:21:36.679><c> go</c><01:21:36.800><c> to</c><01:21:36.920><c> Tech</c><01:21:37.159><c> token</c><01:21:37.440><c> Library</c>

01:21:37.990 --> 01:21:38.000 align:start position:0%
but if you go to Tech token Library
 

01:21:38.000 --> 01:21:40.910 align:start position:0%
but if you go to Tech token Library
which<01:21:38.120><c> is</c><01:21:38.560><c> uh</c><01:21:38.719><c> implemented</c><01:21:39.199><c> in</c><01:21:39.520><c> Rust</c><01:21:40.520><c> you</c><01:21:40.639><c> will</c>

01:21:40.910 --> 01:21:40.920 align:start position:0%
which is uh implemented in Rust you will
 

01:21:40.920 --> 01:21:42.629 align:start position:0%
which is uh implemented in Rust you will
find<01:21:41.199><c> all</c><01:21:41.400><c> kinds</c><01:21:41.560><c> of</c><01:21:41.719><c> special</c><01:21:42.080><c> case</c><01:21:42.239><c> handling</c>

01:21:42.629 --> 01:21:42.639 align:start position:0%
find all kinds of special case handling
 

01:21:42.639 --> 01:21:44.510 align:start position:0%
find all kinds of special case handling
for<01:21:42.880><c> these</c><01:21:43.239><c> special</c><01:21:43.600><c> tokens</c><01:21:43.960><c> that</c><01:21:44.080><c> you</c><01:21:44.159><c> can</c>

01:21:44.510 --> 01:21:44.520 align:start position:0%
for these special tokens that you can
 

01:21:44.520 --> 01:21:47.110 align:start position:0%
for these special tokens that you can
register<01:21:45.520><c> uh</c><01:21:45.719><c> create</c><01:21:46.520><c> adds</c><01:21:46.840><c> to</c><01:21:46.960><c> the</c>

01:21:47.110 --> 01:21:47.120 align:start position:0%
register uh create adds to the
 

01:21:47.120 --> 01:21:48.990 align:start position:0%
register uh create adds to the
vocabulary<01:21:48.000><c> and</c><01:21:48.120><c> then</c><01:21:48.239><c> it</c><01:21:48.360><c> looks</c><01:21:48.560><c> for</c><01:21:48.760><c> them</c>

01:21:48.990 --> 01:21:49.000 align:start position:0%
vocabulary and then it looks for them
 

01:21:49.000 --> 01:21:50.910 align:start position:0%
vocabulary and then it looks for them
and<01:21:49.159><c> it</c><01:21:49.480><c> uh</c><01:21:49.600><c> whenever</c><01:21:49.880><c> it</c><01:21:50.000><c> sees</c><01:21:50.360><c> these</c><01:21:50.560><c> special</c>

01:21:50.910 --> 01:21:50.920 align:start position:0%
and it uh whenever it sees these special
 

01:21:50.920 --> 01:21:53.430 align:start position:0%
and it uh whenever it sees these special
tokens<01:21:51.840><c> like</c><01:21:52.080><c> this</c><01:21:52.639><c> it</c><01:21:52.719><c> will</c><01:21:52.920><c> actually</c><01:21:53.239><c> come</c>

01:21:53.430 --> 01:21:53.440 align:start position:0%
tokens like this it will actually come
 

01:21:53.440 --> 01:21:56.070 align:start position:0%
tokens like this it will actually come
in<01:21:53.639><c> and</c><01:21:53.800><c> swap</c><01:21:54.159><c> in</c><01:21:54.320><c> that</c><01:21:54.480><c> special</c><01:21:54.880><c> token</c><01:21:55.880><c> so</c>

01:21:56.070 --> 01:21:56.080 align:start position:0%
in and swap in that special token so
 

01:21:56.080 --> 01:21:58.110 align:start position:0%
in and swap in that special token so
these<01:21:56.239><c> things</c><01:21:56.400><c> are</c><01:21:56.639><c> outside</c><01:21:57.040><c> of</c><01:21:57.280><c> the</c><01:21:57.719><c> typical</c>

01:21:58.110 --> 01:21:58.120 align:start position:0%
these things are outside of the typical
 

01:21:58.120 --> 01:22:00.550 align:start position:0%
these things are outside of the typical
algorithm<01:21:58.800><c> of</c><01:21:59.159><c> uh</c><01:21:59.280><c> B</c><01:21:59.480><c> PA</c><01:21:59.639><c> en</c>

01:22:00.550 --> 01:22:00.560 align:start position:0%
algorithm of uh B PA en
 

01:22:00.560 --> 01:22:02.910 align:start position:0%
algorithm of uh B PA en
coding<01:22:01.560><c> so</c><01:22:01.800><c> these</c><01:22:01.960><c> special</c><01:22:02.239><c> tokens</c><01:22:02.520><c> are</c><01:22:02.639><c> used</c>

01:22:02.910 --> 01:22:02.920 align:start position:0%
coding so these special tokens are used
 

01:22:02.920 --> 01:22:05.629 align:start position:0%
coding so these special tokens are used
pervasively<01:22:03.880><c> uh</c><01:22:04.040><c> not</c><01:22:04.239><c> just</c><01:22:04.480><c> in</c><01:22:05.040><c> uh</c><01:22:05.199><c> basically</c>

01:22:05.629 --> 01:22:05.639 align:start position:0%
pervasively uh not just in uh basically
 

01:22:05.639 --> 01:22:07.390 align:start position:0%
pervasively uh not just in uh basically
base<01:22:06.080><c> language</c><01:22:06.440><c> modeling</c><01:22:06.800><c> of</c><01:22:06.920><c> predicting</c><01:22:07.280><c> the</c>

01:22:07.390 --> 01:22:07.400 align:start position:0%
base language modeling of predicting the
 

01:22:07.400 --> 01:22:09.070 align:start position:0%
base language modeling of predicting the
next<01:22:07.600><c> token</c><01:22:07.840><c> in</c><01:22:07.920><c> the</c><01:22:08.080><c> sequence</c><01:22:08.880><c> but</c>

01:22:09.070 --> 01:22:09.080 align:start position:0%
next token in the sequence but
 

01:22:09.080 --> 01:22:10.669 align:start position:0%
next token in the sequence but
especially<01:22:09.480><c> when</c><01:22:09.600><c> it</c><01:22:09.719><c> gets</c><01:22:09.880><c> to</c><01:22:10.080><c> later</c><01:22:10.440><c> to</c><01:22:10.560><c> the</c>

01:22:10.669 --> 01:22:10.679 align:start position:0%
especially when it gets to later to the
 

01:22:10.679 --> 01:22:13.229 align:start position:0%
especially when it gets to later to the
fine<01:22:10.880><c> tuning</c><01:22:11.239><c> stage</c><01:22:11.760><c> and</c><01:22:11.960><c> all</c><01:22:12.080><c> of</c><01:22:12.199><c> the</c><01:22:12.400><c> chat</c><01:22:13.120><c> uh</c>

01:22:13.229 --> 01:22:13.239 align:start position:0%
fine tuning stage and all of the chat uh
 

01:22:13.239 --> 01:22:15.669 align:start position:0%
fine tuning stage and all of the chat uh
gbt<01:22:13.679><c> sort</c><01:22:13.880><c> of</c><01:22:14.080><c> aspects</c><01:22:14.440><c> of</c><01:22:14.560><c> it</c><01:22:15.320><c> uh</c><01:22:15.400><c> because</c><01:22:15.600><c> we</c>

01:22:15.669 --> 01:22:15.679 align:start position:0%
gbt sort of aspects of it uh because we
 

01:22:15.679 --> 01:22:16.870 align:start position:0%
gbt sort of aspects of it uh because we
don't<01:22:15.800><c> just</c><01:22:15.920><c> want</c><01:22:16.040><c> to</c><01:22:16.159><c> Del</c><01:22:16.280><c> limit</c><01:22:16.520><c> documents</c>

01:22:16.870 --> 01:22:16.880 align:start position:0%
don't just want to Del limit documents
 

01:22:16.880 --> 01:22:18.709 align:start position:0%
don't just want to Del limit documents
we<01:22:16.960><c> want</c><01:22:17.080><c> to</c><01:22:17.199><c> delimit</c><01:22:17.600><c> entire</c><01:22:17.960><c> conversations</c>

01:22:18.709 --> 01:22:18.719 align:start position:0%
we want to delimit entire conversations
 

01:22:18.719 --> 01:22:21.550 align:start position:0%
we want to delimit entire conversations
between<01:22:19.159><c> an</c><01:22:19.360><c> assistant</c><01:22:19.840><c> and</c><01:22:19.960><c> a</c><01:22:20.120><c> user</c><01:22:21.080><c> so</c><01:22:21.239><c> if</c><01:22:21.360><c> I</c>

01:22:21.550 --> 01:22:21.560 align:start position:0%
between an assistant and a user so if I
 

01:22:21.560 --> 01:22:24.229 align:start position:0%
between an assistant and a user so if I
refresh<01:22:22.120><c> this</c><01:22:22.320><c> sck</c><01:22:22.639><c> tokenizer</c><01:22:23.159><c> page</c><01:22:24.080><c> the</c>

01:22:24.229 --> 01:22:24.239 align:start position:0%
refresh this sck tokenizer page the
 

01:22:24.239 --> 01:22:26.430 align:start position:0%
refresh this sck tokenizer page the
default<01:22:24.639><c> example</c><01:22:24.960><c> that</c><01:22:25.120><c> they</c><01:22:25.280><c> have</c><01:22:25.520><c> here</c><01:22:26.239><c> is</c>

01:22:26.430 --> 01:22:26.440 align:start position:0%
default example that they have here is
 

01:22:26.440 --> 01:22:30.110 align:start position:0%
default example that they have here is
using<01:22:27.400><c> not</c><01:22:27.840><c> sort</c><01:22:28.040><c> of</c><01:22:28.239><c> base</c><01:22:28.560><c> model</c><01:22:29.120><c> encoders</c>

01:22:30.110 --> 01:22:30.120 align:start position:0%
using not sort of base model encoders
 

01:22:30.120 --> 01:22:33.590 align:start position:0%
using not sort of base model encoders
but<01:22:30.360><c> ftuned</c><01:22:30.880><c> model</c><01:22:31.840><c> uh</c><01:22:31.920><c> sort</c><01:22:32.120><c> of</c><01:22:32.600><c> tokenizers</c>

01:22:33.590 --> 01:22:33.600 align:start position:0%
but ftuned model uh sort of tokenizers
 

01:22:33.600 --> 01:22:35.830 align:start position:0%
but ftuned model uh sort of tokenizers
um<01:22:34.080><c> so</c><01:22:34.239><c> for</c><01:22:34.400><c> example</c><01:22:34.679><c> using</c><01:22:34.880><c> the</c><01:22:35.000><c> GPT</c><01:22:35.320><c> 3.5</c>

01:22:35.830 --> 01:22:35.840 align:start position:0%
um so for example using the GPT 3.5
 

01:22:35.840 --> 01:22:38.950 align:start position:0%
um so for example using the GPT 3.5
turbo<01:22:36.199><c> scheme</c><01:22:37.159><c> these</c><01:22:37.440><c> here</c><01:22:37.679><c> are</c><01:22:38.239><c> all</c><01:22:38.639><c> special</c>

01:22:38.950 --> 01:22:38.960 align:start position:0%
turbo scheme these here are all special
 

01:22:38.960 --> 01:22:43.229 align:start position:0%
turbo scheme these here are all special
tokens<01:22:39.480><c> I</c><01:22:39.639><c> am</c><01:22:39.840><c> start</c><01:22:40.480><c> I</c><01:22:40.840><c> end</c><01:22:41.920><c> Etc</c><01:22:42.920><c> uh</c><01:22:43.040><c> this</c><01:22:43.159><c> is</c>

01:22:43.229 --> 01:22:43.239 align:start position:0%
tokens I am start I end Etc uh this is
 

01:22:43.239 --> 01:22:46.830 align:start position:0%
tokens I am start I end Etc uh this is
short<01:22:43.520><c> for</c><01:22:43.880><c> Imaginary</c><01:22:44.880><c> mcore</c><01:22:45.880><c> start</c><01:22:46.239><c> by</c><01:22:46.360><c> the</c>

01:22:46.830 --> 01:22:46.840 align:start position:0%
short for Imaginary mcore start by the
 

01:22:46.840 --> 01:22:49.590 align:start position:0%
short for Imaginary mcore start by the
way<01:22:47.840><c> but</c><01:22:47.960><c> you</c><01:22:48.040><c> can</c><01:22:48.159><c> see</c><01:22:48.360><c> here</c><01:22:48.600><c> that</c><01:22:49.120><c> there's</c><01:22:49.400><c> a</c>

01:22:49.590 --> 01:22:49.600 align:start position:0%
way but you can see here that there's a
 

01:22:49.600 --> 01:22:51.189 align:start position:0%
way but you can see here that there's a
sort<01:22:49.800><c> of</c><01:22:49.960><c> start</c><01:22:50.199><c> and</c><01:22:50.360><c> end</c><01:22:50.560><c> of</c><01:22:50.719><c> every</c><01:22:50.880><c> single</c>

01:22:51.189 --> 01:22:51.199 align:start position:0%
sort of start and end of every single
 

01:22:51.199 --> 01:22:52.550 align:start position:0%
sort of start and end of every single
message<01:22:51.760><c> and</c><01:22:51.880><c> there</c><01:22:51.960><c> can</c><01:22:52.080><c> be</c><01:22:52.199><c> many</c><01:22:52.360><c> other</c>

01:22:52.550 --> 01:22:52.560 align:start position:0%
message and there can be many other
 

01:22:52.560 --> 01:22:56.510 align:start position:0%
message and there can be many other
other<01:22:52.760><c> tokens</c><01:22:53.520><c> lots</c><01:22:53.679><c> of</c><01:22:53.880><c> tokens</c><01:22:54.880><c> um</c><01:22:55.360><c> in</c><01:22:55.600><c> use</c><01:22:56.199><c> to</c>

01:22:56.510 --> 01:22:56.520 align:start position:0%
other tokens lots of tokens um in use to
 

01:22:56.520 --> 01:22:58.709 align:start position:0%
other tokens lots of tokens um in use to
delimit<01:22:57.040><c> these</c><01:22:57.239><c> conversations</c><01:22:58.239><c> and</c><01:22:58.440><c> kind</c><01:22:58.560><c> of</c>

01:22:58.709 --> 01:22:58.719 align:start position:0%
delimit these conversations and kind of
 

01:22:58.719 --> 01:23:00.830 align:start position:0%
delimit these conversations and kind of
keep<01:22:58.960><c> track</c><01:22:59.159><c> of</c><01:22:59.280><c> the</c><01:22:59.400><c> flow</c><01:22:59.960><c> of</c><01:23:00.080><c> the</c><01:23:00.199><c> messages</c>

01:23:00.830 --> 01:23:00.840 align:start position:0%
keep track of the flow of the messages
 

01:23:00.840 --> 01:23:03.790 align:start position:0%
keep track of the flow of the messages
here<01:23:01.840><c> now</c><01:23:02.000><c> we</c><01:23:02.080><c> can</c><01:23:02.239><c> go</c><01:23:02.360><c> back</c><01:23:02.480><c> to</c><01:23:02.560><c> the</c><01:23:02.679><c> Tik</c><01:23:02.920><c> token</c>

01:23:03.790 --> 01:23:03.800 align:start position:0%
here now we can go back to the Tik token
 

01:23:03.800 --> 01:23:06.229 align:start position:0%
here now we can go back to the Tik token
library<01:23:04.800><c> and</c><01:23:05.000><c> here</c><01:23:05.159><c> when</c><01:23:05.280><c> you</c><01:23:05.400><c> scroll</c><01:23:05.679><c> to</c><01:23:05.800><c> the</c>

01:23:06.229 --> 01:23:06.239 align:start position:0%
library and here when you scroll to the
 

01:23:06.239 --> 01:23:08.149 align:start position:0%
library and here when you scroll to the
bottom<01:23:07.239><c> they</c><01:23:07.400><c> talk</c><01:23:07.560><c> about</c><01:23:07.760><c> how</c><01:23:07.880><c> you</c><01:23:07.960><c> can</c>

01:23:08.149 --> 01:23:08.159 align:start position:0%
bottom they talk about how you can
 

01:23:08.159 --> 01:23:10.229 align:start position:0%
bottom they talk about how you can
extend<01:23:08.639><c> tick</c><01:23:08.920><c> token</c><01:23:09.239><c> and</c><01:23:09.360><c> I</c><01:23:09.560><c> can</c><01:23:09.880><c> you</c><01:23:10.000><c> can</c>

01:23:10.229 --> 01:23:10.239 align:start position:0%
extend tick token and I can you can
 

01:23:10.239 --> 01:23:13.669 align:start position:0%
extend tick token and I can you can
create<01:23:10.600><c> basically</c><01:23:10.920><c> you</c><01:23:10.960><c> can</c><01:23:11.400><c> Fork</c><01:23:12.400><c> uh</c><01:23:12.600><c> the</c><01:23:13.000><c> um</c>

01:23:13.669 --> 01:23:13.679 align:start position:0%
create basically you can Fork uh the um
 

01:23:13.679 --> 01:23:17.310 align:start position:0%
create basically you can Fork uh the um
CL<01:23:14.440><c> 100K</c><01:23:14.880><c> base</c><01:23:15.360><c> tokenizers</c><01:23:16.000><c> in</c><01:23:16.120><c> gp4</c><01:23:17.040><c> and</c><01:23:17.159><c> for</c>

01:23:17.310 --> 01:23:17.320 align:start position:0%
CL 100K base tokenizers in gp4 and for
 

01:23:17.320 --> 01:23:18.910 align:start position:0%
CL 100K base tokenizers in gp4 and for
example<01:23:17.600><c> you</c><01:23:17.679><c> can</c><01:23:17.800><c> extend</c><01:23:18.080><c> it</c><01:23:18.280><c> by</c><01:23:18.440><c> adding</c><01:23:18.719><c> more</c>

01:23:18.910 --> 01:23:18.920 align:start position:0%
example you can extend it by adding more
 

01:23:18.920 --> 01:23:20.350 align:start position:0%
example you can extend it by adding more
special<01:23:19.239><c> tokens</c><01:23:19.600><c> and</c><01:23:19.719><c> these</c><01:23:19.840><c> are</c><01:23:19.960><c> totally</c><01:23:20.239><c> up</c>

01:23:20.350 --> 01:23:20.360 align:start position:0%
special tokens and these are totally up
 

01:23:20.360 --> 01:23:21.350 align:start position:0%
special tokens and these are totally up
to<01:23:20.480><c> you</c><01:23:20.639><c> you</c><01:23:20.719><c> can</c><01:23:20.880><c> come</c><01:23:21.000><c> up</c><01:23:21.120><c> with</c><01:23:21.239><c> any</c>

01:23:21.350 --> 01:23:21.360 align:start position:0%
to you you can come up with any
 

01:23:21.360 --> 01:23:23.750 align:start position:0%
to you you can come up with any
arbitrary<01:23:21.800><c> tokens</c><01:23:22.280><c> and</c><01:23:22.639><c> add</c><01:23:22.840><c> them</c><01:23:23.440><c> with</c><01:23:23.600><c> the</c>

01:23:23.750 --> 01:23:23.760 align:start position:0%
arbitrary tokens and add them with the
 

01:23:23.760 --> 01:23:26.510 align:start position:0%
arbitrary tokens and add them with the
new<01:23:24.080><c> ID</c><01:23:24.520><c> afterwards</c><01:23:25.400><c> and</c><01:23:25.520><c> the</c><01:23:25.600><c> tikken</c><01:23:26.080><c> library</c>

01:23:26.510 --> 01:23:26.520 align:start position:0%
new ID afterwards and the tikken library
 

01:23:26.520 --> 01:23:29.870 align:start position:0%
new ID afterwards and the tikken library
will<01:23:27.360><c> uh</c><01:23:27.560><c> correctly</c><01:23:28.120><c> swap</c><01:23:28.520><c> them</c><01:23:28.679><c> out</c><01:23:29.520><c> uh</c><01:23:29.679><c> when</c>

01:23:29.870 --> 01:23:29.880 align:start position:0%
will uh correctly swap them out uh when
 

01:23:29.880 --> 01:23:31.750 align:start position:0%
will uh correctly swap them out uh when
it<01:23:30.000><c> sees</c><01:23:30.400><c> this</c><01:23:30.760><c> in</c><01:23:30.920><c> the</c>

01:23:31.750 --> 01:23:31.760 align:start position:0%
it sees this in the
 

01:23:31.760 --> 01:23:34.950 align:start position:0%
it sees this in the
strings<01:23:32.760><c> now</c><01:23:33.560><c> we</c><01:23:33.639><c> can</c><01:23:33.800><c> also</c><01:23:34.040><c> go</c><01:23:34.280><c> back</c><01:23:34.480><c> to</c><01:23:34.760><c> this</c>

01:23:34.950 --> 01:23:34.960 align:start position:0%
strings now we can also go back to this
 

01:23:34.960 --> 01:23:37.070 align:start position:0%
strings now we can also go back to this
file<01:23:35.199><c> which</c><01:23:35.320><c> we've</c><01:23:35.480><c> looked</c><01:23:35.679><c> at</c><01:23:36.080><c> previously</c>

01:23:37.070 --> 01:23:37.080 align:start position:0%
file which we've looked at previously
 

01:23:37.080 --> 01:23:39.669 align:start position:0%
file which we've looked at previously
and<01:23:37.199><c> I</c><01:23:37.320><c> mentioned</c><01:23:37.639><c> that</c><01:23:37.719><c> the</c><01:23:38.239><c> gpt2</c><01:23:39.239><c> in</c><01:23:39.480><c> Tik</c>

01:23:39.669 --> 01:23:39.679 align:start position:0%
and I mentioned that the gpt2 in Tik
 

01:23:39.679 --> 01:23:41.430 align:start position:0%
and I mentioned that the gpt2 in Tik
toen<01:23:40.000><c> open</c>

01:23:41.430 --> 01:23:41.440 align:start position:0%
toen open
 

01:23:41.440 --> 01:23:43.990 align:start position:0%
toen open
I.P<01:23:42.440><c> we</c><01:23:42.560><c> have</c><01:23:42.679><c> the</c><01:23:42.840><c> vocabulary</c><01:23:43.600><c> we</c><01:23:43.719><c> have</c><01:23:43.840><c> the</c>

01:23:43.990 --> 01:23:44.000 align:start position:0%
I.P we have the vocabulary we have the
 

01:23:44.000 --> 01:23:46.270 align:start position:0%
I.P we have the vocabulary we have the
pattern<01:23:44.639><c> for</c><01:23:44.960><c> splitting</c><01:23:45.760><c> and</c><01:23:45.880><c> then</c><01:23:46.040><c> here</c><01:23:46.199><c> we</c>

01:23:46.270 --> 01:23:46.280 align:start position:0%
pattern for splitting and then here we
 

01:23:46.280 --> 01:23:48.030 align:start position:0%
pattern for splitting and then here we
are<01:23:46.520><c> registering</c><01:23:46.960><c> the</c><01:23:47.080><c> single</c><01:23:47.480><c> special</c><01:23:47.800><c> token</c>

01:23:48.030 --> 01:23:48.040 align:start position:0%
are registering the single special token
 

01:23:48.040 --> 01:23:50.310 align:start position:0%
are registering the single special token
in<01:23:48.159><c> gpd2</c><01:23:48.840><c> which</c><01:23:48.960><c> was</c><01:23:49.080><c> the</c><01:23:49.159><c> end</c><01:23:49.360><c> of</c><01:23:49.520><c> text</c><01:23:49.800><c> token</c>

01:23:50.310 --> 01:23:50.320 align:start position:0%
in gpd2 which was the end of text token
 

01:23:50.320 --> 01:23:52.990 align:start position:0%
in gpd2 which was the end of text token
and<01:23:50.480><c> we</c><01:23:50.600><c> saw</c><01:23:50.920><c> that</c><01:23:51.080><c> it</c><01:23:51.239><c> has</c><01:23:51.400><c> this</c><01:23:51.560><c> ID</c>

01:23:52.990 --> 01:23:53.000 align:start position:0%
and we saw that it has this ID
 

01:23:53.000 --> 01:23:56.390 align:start position:0%
and we saw that it has this ID
in<01:23:53.159><c> GPT</c><01:23:53.760><c> 4</c><01:23:54.760><c> when</c><01:23:54.920><c> they</c><01:23:55.120><c> defy</c><01:23:55.520><c> this</c><01:23:55.719><c> here</c><01:23:56.280><c> you</c>

01:23:56.390 --> 01:23:56.400 align:start position:0%
in GPT 4 when they defy this here you
 

01:23:56.400 --> 01:23:57.590 align:start position:0%
in GPT 4 when they defy this here you
see<01:23:56.560><c> that</c><01:23:56.679><c> the</c><01:23:56.760><c> pattern</c><01:23:57.040><c> has</c><01:23:57.159><c> changed</c><01:23:57.480><c> as</c>

01:23:57.590 --> 01:23:57.600 align:start position:0%
see that the pattern has changed as
 

01:23:57.600 --> 01:23:59.350 align:start position:0%
see that the pattern has changed as
we've<01:23:57.800><c> discussed</c><01:23:58.560><c> but</c><01:23:58.760><c> also</c><01:23:58.960><c> the</c><01:23:59.080><c> special</c>

01:23:59.350 --> 01:23:59.360 align:start position:0%
we've discussed but also the special
 

01:23:59.360 --> 01:24:01.790 align:start position:0%
we've discussed but also the special
tokens<01:23:59.679><c> have</c><01:23:59.800><c> changed</c><01:24:00.080><c> in</c><01:24:00.159><c> this</c><01:24:00.320><c> tokenizer</c><01:24:01.280><c> so</c>

01:24:01.790 --> 01:24:01.800 align:start position:0%
tokens have changed in this tokenizer so
 

01:24:01.800 --> 01:24:03.709 align:start position:0%
tokens have changed in this tokenizer so
we<01:24:01.960><c> of</c><01:24:02.080><c> course</c><01:24:02.280><c> have</c><01:24:02.440><c> the</c><01:24:02.600><c> end</c><01:24:02.760><c> of</c><01:24:02.960><c> text</c><01:24:03.560><c> just</c>

01:24:03.709 --> 01:24:03.719 align:start position:0%
we of course have the end of text just
 

01:24:03.719 --> 01:24:06.870 align:start position:0%
we of course have the end of text just
like<01:24:03.880><c> in</c><01:24:04.040><c> gpd2</c><01:24:05.040><c> but</c><01:24:05.239><c> we</c><01:24:05.400><c> also</c><01:24:05.639><c> see</c><01:24:05.960><c> three</c><01:24:06.560><c> sorry</c>

01:24:06.870 --> 01:24:06.880 align:start position:0%
like in gpd2 but we also see three sorry
 

01:24:06.880 --> 01:24:09.510 align:start position:0%
like in gpd2 but we also see three sorry
four<01:24:07.159><c> additional</c><01:24:07.560><c> tokens</c><01:24:08.000><c> here</c><01:24:08.679><c> Thim</c><01:24:09.080><c> prefix</c>

01:24:09.510 --> 01:24:09.520 align:start position:0%
four additional tokens here Thim prefix
 

01:24:09.520 --> 01:24:12.350 align:start position:0%
four additional tokens here Thim prefix
middle<01:24:09.800><c> and</c><01:24:10.000><c> suffix</c><01:24:11.000><c> what</c><01:24:11.120><c> is</c><01:24:11.280><c> fim</c><01:24:11.800><c> fim</c><01:24:12.199><c> is</c>

01:24:12.350 --> 01:24:12.360 align:start position:0%
middle and suffix what is fim fim is
 

01:24:12.360 --> 01:24:14.870 align:start position:0%
middle and suffix what is fim fim is
short<01:24:12.679><c> for</c><01:24:12.960><c> fill</c><01:24:13.239><c> in</c><01:24:13.400><c> the</c><01:24:13.560><c> middle</c><01:24:14.560><c> and</c><01:24:14.800><c> if</c>

01:24:14.870 --> 01:24:14.880 align:start position:0%
short for fill in the middle and if
 

01:24:14.880 --> 01:24:16.990 align:start position:0%
short for fill in the middle and if
you'd<01:24:15.080><c> like</c><01:24:15.199><c> to</c><01:24:15.280><c> learn</c><01:24:15.520><c> more</c><01:24:15.760><c> about</c><01:24:16.440><c> this</c><01:24:16.719><c> idea</c>

01:24:16.990 --> 01:24:17.000 align:start position:0%
you'd like to learn more about this idea
 

01:24:17.000 --> 01:24:19.990 align:start position:0%
you'd like to learn more about this idea
it<01:24:17.120><c> comes</c><01:24:17.280><c> from</c><01:24:17.440><c> this</c><01:24:18.120><c> paper</c><01:24:19.120><c> um</c><01:24:19.679><c> and</c><01:24:19.800><c> I'm</c><01:24:19.880><c> not</c>

01:24:19.990 --> 01:24:20.000 align:start position:0%
it comes from this paper um and I'm not
 

01:24:20.000 --> 01:24:21.189 align:start position:0%
it comes from this paper um and I'm not
going<01:24:20.080><c> to</c><01:24:20.199><c> go</c><01:24:20.280><c> into</c><01:24:20.440><c> detail</c><01:24:20.679><c> in</c><01:24:20.800><c> this</c><01:24:20.960><c> video</c>

01:24:21.189 --> 01:24:21.199 align:start position:0%
going to go into detail in this video
 

01:24:21.199 --> 01:24:23.430 align:start position:0%
going to go into detail in this video
it's<01:24:21.360><c> beyond</c><01:24:21.719><c> this</c><01:24:21.880><c> video</c><01:24:22.639><c> and</c><01:24:22.760><c> then</c><01:24:22.920><c> there's</c>

01:24:23.430 --> 01:24:23.440 align:start position:0%
it's beyond this video and then there's
 

01:24:23.440 --> 01:24:27.030 align:start position:0%
it's beyond this video and then there's
one<01:24:23.840><c> additional</c><01:24:24.840><c> uh</c><01:24:24.960><c> serve</c><01:24:25.360><c> token</c><01:24:25.760><c> here</c><01:24:26.760><c> so</c>

01:24:27.030 --> 01:24:27.040 align:start position:0%
one additional uh serve token here so
 

01:24:27.040 --> 01:24:29.910 align:start position:0%
one additional uh serve token here so
that's<01:24:27.440><c> that</c><01:24:27.639><c> encoding</c><01:24:28.080><c> as</c><01:24:28.520><c> well</c><01:24:29.520><c> so</c><01:24:29.760><c> it's</c>

01:24:29.910 --> 01:24:29.920 align:start position:0%
that's that encoding as well so it's
 

01:24:29.920 --> 01:24:31.590 align:start position:0%
that's that encoding as well so it's
very<01:24:30.080><c> common</c><01:24:30.560><c> basically</c><01:24:31.000><c> to</c><01:24:31.159><c> train</c><01:24:31.440><c> a</c>

01:24:31.590 --> 01:24:31.600 align:start position:0%
very common basically to train a
 

01:24:31.600 --> 01:24:34.709 align:start position:0%
very common basically to train a
language<01:24:31.920><c> model</c><01:24:32.920><c> and</c><01:24:33.120><c> then</c><01:24:33.480><c> if</c><01:24:33.600><c> you'd</c><01:24:33.920><c> like</c><01:24:34.600><c> uh</c>

01:24:34.709 --> 01:24:34.719 align:start position:0%
language model and then if you'd like uh
 

01:24:34.719 --> 01:24:37.510 align:start position:0%
language model and then if you'd like uh
you<01:24:34.840><c> can</c><01:24:35.120><c> add</c><01:24:35.400><c> special</c><01:24:35.960><c> tokens</c><01:24:36.960><c> now</c><01:24:37.280><c> when</c><01:24:37.400><c> you</c>

01:24:37.510 --> 01:24:37.520 align:start position:0%
you can add special tokens now when you
 

01:24:37.520 --> 01:24:39.790 align:start position:0%
you can add special tokens now when you
add<01:24:37.719><c> special</c><01:24:38.000><c> tokens</c><01:24:38.320><c> you</c><01:24:38.440><c> of</c><01:24:38.600><c> course</c><01:24:38.920><c> have</c><01:24:39.040><c> to</c>

01:24:39.790 --> 01:24:39.800 align:start position:0%
add special tokens you of course have to
 

01:24:39.800 --> 01:24:41.709 align:start position:0%
add special tokens you of course have to
um<01:24:40.080><c> do</c><01:24:40.280><c> some</c><01:24:40.480><c> model</c><01:24:40.840><c> surgery</c><01:24:41.400><c> to</c><01:24:41.560><c> the</c>

01:24:41.709 --> 01:24:41.719 align:start position:0%
um do some model surgery to the
 

01:24:41.719 --> 01:24:43.430 align:start position:0%
um do some model surgery to the
Transformer<01:24:42.480><c> and</c><01:24:42.639><c> all</c><01:24:42.880><c> the</c><01:24:43.000><c> parameters</c>

01:24:43.430 --> 01:24:43.440 align:start position:0%
Transformer and all the parameters
 

01:24:43.440 --> 01:24:45.149 align:start position:0%
Transformer and all the parameters
involved<01:24:43.760><c> in</c><01:24:43.880><c> that</c><01:24:44.000><c> Transformer</c><01:24:44.880><c> because</c><01:24:45.040><c> you</c>

01:24:45.149 --> 01:24:45.159 align:start position:0%
involved in that Transformer because you
 

01:24:45.159 --> 01:24:47.109 align:start position:0%
involved in that Transformer because you
are<01:24:45.280><c> basically</c><01:24:45.560><c> adding</c><01:24:45.800><c> an</c><01:24:46.000><c> integer</c><01:24:46.920><c> and</c><01:24:47.040><c> you</c>

01:24:47.109 --> 01:24:47.119 align:start position:0%
are basically adding an integer and you
 

01:24:47.119 --> 01:24:48.550 align:start position:0%
are basically adding an integer and you
want<01:24:47.199><c> to</c><01:24:47.320><c> make</c><01:24:47.440><c> sure</c><01:24:47.639><c> that</c><01:24:47.800><c> for</c><01:24:47.960><c> example</c><01:24:48.320><c> your</c>

01:24:48.550 --> 01:24:48.560 align:start position:0%
want to make sure that for example your
 

01:24:48.560 --> 01:24:50.629 align:start position:0%
want to make sure that for example your
embedding<01:24:48.960><c> Matrix</c><01:24:49.360><c> for</c><01:24:49.600><c> the</c><01:24:50.040><c> vocabulary</c>

01:24:50.629 --> 01:24:50.639 align:start position:0%
embedding Matrix for the vocabulary
 

01:24:50.639 --> 01:24:53.030 align:start position:0%
embedding Matrix for the vocabulary
tokens<01:24:51.320><c> has</c><01:24:51.440><c> to</c><01:24:51.560><c> be</c><01:24:51.719><c> extended</c><01:24:52.480><c> by</c><01:24:52.600><c> adding</c><01:24:52.880><c> a</c>

01:24:53.030 --> 01:24:53.040 align:start position:0%
tokens has to be extended by adding a
 

01:24:53.040 --> 01:24:54.870 align:start position:0%
tokens has to be extended by adding a
row<01:24:53.760><c> and</c><01:24:53.880><c> typically</c><01:24:54.239><c> this</c><01:24:54.400><c> row</c><01:24:54.600><c> would</c><01:24:54.719><c> be</c>

01:24:54.870 --> 01:24:54.880 align:start position:0%
row and typically this row would be
 

01:24:54.880 --> 01:24:56.870 align:start position:0%
row and typically this row would be
initialized<01:24:55.639><c> uh</c><01:24:55.760><c> with</c><01:24:56.000><c> small</c><01:24:56.280><c> random</c><01:24:56.600><c> numbers</c>

01:24:56.870 --> 01:24:56.880 align:start position:0%
initialized uh with small random numbers
 

01:24:56.880 --> 01:24:58.790 align:start position:0%
initialized uh with small random numbers
or<01:24:57.040><c> something</c><01:24:57.320><c> like</c><01:24:57.520><c> that</c><01:24:58.360><c> because</c><01:24:58.520><c> we</c><01:24:58.639><c> need</c>

01:24:58.790 --> 01:24:58.800 align:start position:0%
or something like that because we need
 

01:24:58.800 --> 01:25:01.189 align:start position:0%
or something like that because we need
to<01:24:58.920><c> have</c><01:24:59.040><c> a</c><01:24:59.199><c> vector</c><01:24:59.600><c> that</c><01:24:59.760><c> now</c><01:25:00.000><c> stands</c><01:25:00.520><c> for</c>

01:25:01.189 --> 01:25:01.199 align:start position:0%
to have a vector that now stands for
 

01:25:01.199 --> 01:25:03.270 align:start position:0%
to have a vector that now stands for
that<01:25:01.480><c> token</c><01:25:02.480><c> in</c><01:25:02.600><c> addition</c><01:25:02.880><c> to</c><01:25:03.000><c> that</c><01:25:03.119><c> you</c><01:25:03.199><c> have</c>

01:25:03.270 --> 01:25:03.280 align:start position:0%
that token in addition to that you have
 

01:25:03.280 --> 01:25:04.270 align:start position:0%
that token in addition to that you have
to<01:25:03.360><c> go</c><01:25:03.480><c> to</c><01:25:03.560><c> the</c><01:25:03.679><c> final</c><01:25:03.880><c> layer</c><01:25:04.119><c> of</c><01:25:04.199><c> the</c>

01:25:04.270 --> 01:25:04.280 align:start position:0%
to go to the final layer of the
 

01:25:04.280 --> 01:25:05.669 align:start position:0%
to go to the final layer of the
Transformer<01:25:04.920><c> and</c><01:25:05.000><c> you</c><01:25:05.080><c> have</c><01:25:05.199><c> to</c><01:25:05.320><c> make</c><01:25:05.440><c> sure</c>

01:25:05.669 --> 01:25:05.679 align:start position:0%
Transformer and you have to make sure
 

01:25:05.679 --> 01:25:07.510 align:start position:0%
Transformer and you have to make sure
that<01:25:05.920><c> that</c><01:25:06.119><c> projection</c><01:25:06.520><c> at</c><01:25:06.639><c> the</c><01:25:06.800><c> very</c><01:25:07.000><c> end</c>

01:25:07.510 --> 01:25:07.520 align:start position:0%
that that projection at the very end
 

01:25:07.520 --> 01:25:09.669 align:start position:0%
that that projection at the very end
into<01:25:07.719><c> the</c><01:25:07.840><c> classifier</c><01:25:08.840><c> uh</c><01:25:08.920><c> is</c><01:25:09.080><c> extended</c><01:25:09.520><c> by</c>

01:25:09.669 --> 01:25:09.679 align:start position:0%
into the classifier uh is extended by
 

01:25:09.679 --> 01:25:11.790 align:start position:0%
into the classifier uh is extended by
one<01:25:10.119><c> as</c><01:25:10.239><c> well</c><01:25:10.840><c> so</c><01:25:11.000><c> basically</c><01:25:11.320><c> there's</c><01:25:11.520><c> some</c>

01:25:11.790 --> 01:25:11.800 align:start position:0%
one as well so basically there's some
 

01:25:11.800 --> 01:25:13.470 align:start position:0%
one as well so basically there's some
model<01:25:12.080><c> surgery</c><01:25:12.520><c> involved</c><01:25:13.000><c> that</c><01:25:13.080><c> you</c><01:25:13.199><c> have</c><01:25:13.280><c> to</c>

01:25:13.470 --> 01:25:13.480 align:start position:0%
model surgery involved that you have to
 

01:25:13.480 --> 01:25:16.510 align:start position:0%
model surgery involved that you have to
couple<01:25:14.360><c> with</c><01:25:14.719><c> the</c><01:25:14.920><c> tokenization</c><01:25:15.600><c> changes</c><01:25:16.400><c> if</c>

01:25:16.510 --> 01:25:16.520 align:start position:0%
couple with the tokenization changes if
 

01:25:16.520 --> 01:25:18.910 align:start position:0%
couple with the tokenization changes if
you<01:25:16.600><c> are</c><01:25:16.719><c> going</c><01:25:16.880><c> to</c><01:25:17.119><c> add</c><01:25:17.440><c> special</c><01:25:17.800><c> tokens</c><01:25:18.800><c> but</c>

01:25:18.910 --> 01:25:18.920 align:start position:0%
you are going to add special tokens but
 

01:25:18.920 --> 01:25:20.189 align:start position:0%
you are going to add special tokens but
this<01:25:19.000><c> is</c><01:25:19.080><c> a</c><01:25:19.239><c> very</c><01:25:19.400><c> common</c><01:25:19.679><c> operation</c><01:25:20.040><c> that</c>

01:25:20.189 --> 01:25:20.199 align:start position:0%
this is a very common operation that
 

01:25:20.199 --> 01:25:21.790 align:start position:0%
this is a very common operation that
people<01:25:20.400><c> do</c><01:25:20.960><c> especially</c><01:25:21.320><c> if</c><01:25:21.400><c> they'd</c><01:25:21.560><c> like</c><01:25:21.679><c> to</c>

01:25:21.790 --> 01:25:21.800 align:start position:0%
people do especially if they'd like to
 

01:25:21.800 --> 01:25:23.709 align:start position:0%
people do especially if they'd like to
fine<01:25:22.040><c> tune</c><01:25:22.480><c> the</c><01:25:22.600><c> model</c><01:25:23.080><c> for</c><01:25:23.199><c> example</c><01:25:23.520><c> taking</c>

01:25:23.709 --> 01:25:23.719 align:start position:0%
fine tune the model for example taking
 

01:25:23.719 --> 01:25:26.229 align:start position:0%
fine tune the model for example taking
it<01:25:23.840><c> from</c><01:25:23.960><c> a</c><01:25:24.119><c> base</c><01:25:24.360><c> model</c><01:25:24.960><c> to</c><01:25:25.280><c> a</c><01:25:25.480><c> chat</c><01:25:25.800><c> model</c>

01:25:26.229 --> 01:25:26.239 align:start position:0%
it from a base model to a chat model
 

01:25:26.239 --> 01:25:27.870 align:start position:0%
it from a base model to a chat model
like<01:25:26.400><c> chat</c>

01:25:27.870 --> 01:25:27.880 align:start position:0%
like chat
 

01:25:27.880 --> 01:25:29.830 align:start position:0%
like chat
GPT<01:25:28.880><c> okay</c><01:25:29.000><c> so</c><01:25:29.119><c> at</c><01:25:29.280><c> this</c><01:25:29.400><c> point</c><01:25:29.600><c> you</c><01:25:29.679><c> should</c>

01:25:29.830 --> 01:25:29.840 align:start position:0%
GPT okay so at this point you should
 

01:25:29.840 --> 01:25:31.030 align:start position:0%
GPT okay so at this point you should
have<01:25:30.000><c> everything</c><01:25:30.320><c> you</c><01:25:30.440><c> need</c><01:25:30.639><c> in</c><01:25:30.719><c> order</c><01:25:30.920><c> to</c>

01:25:31.030 --> 01:25:31.040 align:start position:0%
have everything you need in order to
 

01:25:31.040 --> 01:25:33.709 align:start position:0%
have everything you need in order to
build<01:25:31.239><c> your</c><01:25:31.320><c> own</c><01:25:31.480><c> gp4</c><01:25:32.280><c> tokenizer</c><01:25:33.280><c> now</c><01:25:33.440><c> in</c><01:25:33.560><c> the</c>

01:25:33.709 --> 01:25:33.719 align:start position:0%
build your own gp4 tokenizer now in the
 

01:25:33.719 --> 01:25:35.350 align:start position:0%
build your own gp4 tokenizer now in the
process<01:25:33.920><c> of</c><01:25:34.040><c> developing</c><01:25:34.440><c> this</c><01:25:34.600><c> lecture</c><01:25:35.080><c> I've</c>

01:25:35.350 --> 01:25:35.360 align:start position:0%
process of developing this lecture I've
 

01:25:35.360 --> 01:25:37.229 align:start position:0%
process of developing this lecture I've
done<01:25:35.639><c> that</c><01:25:35.960><c> and</c><01:25:36.080><c> I</c><01:25:36.239><c> published</c><01:25:36.560><c> the</c><01:25:36.679><c> code</c><01:25:36.960><c> under</c>

01:25:37.229 --> 01:25:37.239 align:start position:0%
done that and I published the code under
 

01:25:37.239 --> 01:25:38.910 align:start position:0%
done that and I published the code under
this<01:25:37.440><c> repository</c>

01:25:38.910 --> 01:25:38.920 align:start position:0%
this repository
 

01:25:38.920 --> 01:25:42.510 align:start position:0%
this repository
MBP<01:25:39.920><c> so</c><01:25:40.360><c> MBP</c><01:25:41.239><c> looks</c><01:25:41.520><c> like</c><01:25:41.719><c> this</c><01:25:42.119><c> right</c><01:25:42.239><c> now</c><01:25:42.440><c> as</c>

01:25:42.510 --> 01:25:42.520 align:start position:0%
MBP so MBP looks like this right now as
 

01:25:42.520 --> 01:25:45.350 align:start position:0%
MBP so MBP looks like this right now as
I'm<01:25:42.679><c> recording</c><01:25:43.480><c> but</c><01:25:43.920><c> uh</c><01:25:44.159><c> the</c><01:25:44.280><c> MBP</c><01:25:44.880><c> repository</c>

01:25:45.350 --> 01:25:45.360 align:start position:0%
I'm recording but uh the MBP repository
 

01:25:45.360 --> 01:25:46.709 align:start position:0%
I'm recording but uh the MBP repository
will<01:25:45.520><c> probably</c><01:25:45.800><c> change</c><01:25:46.080><c> quite</c><01:25:46.199><c> a</c><01:25:46.360><c> bit</c><01:25:46.560><c> because</c>

01:25:46.709 --> 01:25:46.719 align:start position:0%
will probably change quite a bit because
 

01:25:46.719 --> 01:25:49.830 align:start position:0%
will probably change quite a bit because
I<01:25:46.800><c> intend</c><01:25:47.040><c> to</c><01:25:47.199><c> continue</c><01:25:47.560><c> working</c><01:25:47.800><c> on</c><01:25:48.239><c> it</c><01:25:49.239><c> um</c><01:25:49.719><c> in</c>

01:25:49.830 --> 01:25:49.840 align:start position:0%
I intend to continue working on it um in
 

01:25:49.840 --> 01:25:51.750 align:start position:0%
I intend to continue working on it um in
addition<01:25:50.119><c> to</c><01:25:50.239><c> the</c><01:25:50.320><c> MBP</c><01:25:50.920><c> repository</c><01:25:51.600><c> I've</c>

01:25:51.750 --> 01:25:51.760 align:start position:0%
addition to the MBP repository I've
 

01:25:51.760 --> 01:25:53.430 align:start position:0%
addition to the MBP repository I've
published<01:25:52.159><c> the</c><01:25:52.360><c> this</c><01:25:52.719><c> uh</c><01:25:52.920><c> exercise</c>

01:25:53.430 --> 01:25:53.440 align:start position:0%
published the this uh exercise
 

01:25:53.440 --> 01:25:55.350 align:start position:0%
published the this uh exercise
progression<01:25:53.920><c> that</c><01:25:54.040><c> you</c><01:25:54.119><c> can</c><01:25:54.320><c> follow</c><01:25:55.159><c> so</c><01:25:55.280><c> if</c>

01:25:55.350 --> 01:25:55.360 align:start position:0%
progression that you can follow so if
 

01:25:55.360 --> 01:25:58.350 align:start position:0%
progression that you can follow so if
you<01:25:55.440><c> go</c><01:25:55.560><c> to</c><01:25:55.719><c> exercise.</c><01:25:56.320><c> MD</c><01:25:56.960><c> here</c><01:25:57.960><c> uh</c><01:25:58.080><c> this</c><01:25:58.199><c> is</c>

01:25:58.350 --> 01:25:58.360 align:start position:0%
you go to exercise. MD here uh this is
 

01:25:58.360 --> 01:26:01.149 align:start position:0%
you go to exercise. MD here uh this is
sort<01:25:58.520><c> of</c><01:25:58.920><c> me</c><01:25:59.159><c> breaking</c><01:25:59.600><c> up</c><01:26:00.360><c> the</c><01:26:00.560><c> task</c><01:26:00.880><c> ahead</c><01:26:01.080><c> of</c>

01:26:01.149 --> 01:26:01.159 align:start position:0%
sort of me breaking up the task ahead of
 

01:26:01.159 --> 01:26:03.390 align:start position:0%
sort of me breaking up the task ahead of
you<01:26:01.320><c> into</c><01:26:01.600><c> four</c><01:26:02.000><c> steps</c><01:26:02.639><c> that</c><01:26:02.800><c> sort</c><01:26:02.960><c> of</c><01:26:03.320><c> uh</c>

01:26:03.390 --> 01:26:03.400 align:start position:0%
you into four steps that sort of uh
 

01:26:03.400 --> 01:26:06.629 align:start position:0%
you into four steps that sort of uh
build<01:26:03.679><c> up</c><01:26:04.159><c> to</c><01:26:04.560><c> what</c><01:26:04.760><c> can</c><01:26:04.880><c> be</c><01:26:05.040><c> a</c><01:26:05.159><c> gp4</c><01:26:05.679><c> tokenizer</c>

01:26:06.629 --> 01:26:06.639 align:start position:0%
build up to what can be a gp4 tokenizer
 

01:26:06.639 --> 01:26:08.390 align:start position:0%
build up to what can be a gp4 tokenizer
and<01:26:06.800><c> so</c><01:26:07.080><c> feel</c><01:26:07.280><c> free</c><01:26:07.480><c> to</c><01:26:07.600><c> follow</c><01:26:07.920><c> these</c><01:26:08.040><c> steps</c>

01:26:08.390 --> 01:26:08.400 align:start position:0%
and so feel free to follow these steps
 

01:26:08.400 --> 01:26:10.390 align:start position:0%
and so feel free to follow these steps
exactly<01:26:09.280><c> and</c><01:26:09.639><c> follow</c><01:26:09.880><c> a</c><01:26:09.960><c> little</c><01:26:10.080><c> bit</c><01:26:10.199><c> of</c><01:26:10.280><c> the</c>

01:26:10.390 --> 01:26:10.400 align:start position:0%
exactly and follow a little bit of the
 

01:26:10.400 --> 01:26:12.470 align:start position:0%
exactly and follow a little bit of the
guidance<01:26:10.679><c> that</c><01:26:10.800><c> I've</c><01:26:10.960><c> laid</c><01:26:11.159><c> out</c><01:26:11.400><c> here</c><01:26:12.239><c> and</c>

01:26:12.470 --> 01:26:12.480 align:start position:0%
guidance that I've laid out here and
 

01:26:12.480 --> 01:26:14.629 align:start position:0%
guidance that I've laid out here and
anytime<01:26:12.920><c> you</c><01:26:13.040><c> feel</c><01:26:13.400><c> stuck</c><01:26:14.080><c> just</c><01:26:14.280><c> reference</c>

01:26:14.629 --> 01:26:14.639 align:start position:0%
anytime you feel stuck just reference
 

01:26:14.639 --> 01:26:17.950 align:start position:0%
anytime you feel stuck just reference
the<01:26:14.800><c> MBP</c><01:26:15.760><c> repository</c><01:26:16.440><c> here</c><01:26:17.080><c> so</c><01:26:17.520><c> either</c><01:26:17.800><c> the</c>

01:26:17.950 --> 01:26:17.960 align:start position:0%
the MBP repository here so either the
 

01:26:17.960 --> 01:26:20.070 align:start position:0%
the MBP repository here so either the
tests<01:26:18.360><c> could</c><01:26:18.520><c> be</c><01:26:18.639><c> useful</c><01:26:19.239><c> or</c><01:26:19.400><c> the</c><01:26:19.520><c> MBP</c>

01:26:20.070 --> 01:26:20.080 align:start position:0%
tests could be useful or the MBP
 

01:26:20.080 --> 01:26:22.590 align:start position:0%
tests could be useful or the MBP
repository<01:26:20.719><c> itself</c><01:26:21.480><c> I</c><01:26:21.600><c> try</c><01:26:21.800><c> to</c><01:26:21.960><c> keep</c><01:26:22.280><c> the</c><01:26:22.400><c> code</c>

01:26:22.590 --> 01:26:22.600 align:start position:0%
repository itself I try to keep the code
 

01:26:22.600 --> 01:26:26.149 align:start position:0%
repository itself I try to keep the code
fairly<01:26:22.960><c> clean</c><01:26:23.719><c> and</c><01:26:24.199><c> understandable</c><01:26:25.119><c> and</c><01:26:25.320><c> so</c>

01:26:26.149 --> 01:26:26.159 align:start position:0%
fairly clean and understandable and so
 

01:26:26.159 --> 01:26:28.910 align:start position:0%
fairly clean and understandable and so
um<01:26:26.360><c> feel</c><01:26:26.560><c> free</c><01:26:26.760><c> to</c><01:26:26.880><c> reference</c><01:26:27.239><c> it</c><01:26:27.520><c> whenever</c><01:26:28.360><c> um</c>

01:26:28.910 --> 01:26:28.920 align:start position:0%
um feel free to reference it whenever um
 

01:26:28.920 --> 01:26:30.149 align:start position:0%
um feel free to reference it whenever um
you<01:26:29.119><c> get</c>

01:26:30.149 --> 01:26:30.159 align:start position:0%
you get
 

01:26:30.159 --> 01:26:32.550 align:start position:0%
you get
stuck<01:26:31.159><c> uh</c><01:26:31.280><c> in</c><01:26:31.400><c> addition</c><01:26:31.679><c> to</c><01:26:31.840><c> that</c><01:26:32.000><c> basically</c>

01:26:32.550 --> 01:26:32.560 align:start position:0%
stuck uh in addition to that basically
 

01:26:32.560 --> 01:26:34.669 align:start position:0%
stuck uh in addition to that basically
once<01:26:32.760><c> you</c><01:26:33.119><c> write</c><01:26:33.560><c> it</c><01:26:33.960><c> you</c><01:26:34.040><c> should</c><01:26:34.239><c> be</c><01:26:34.360><c> able</c><01:26:34.520><c> to</c>

01:26:34.669 --> 01:26:34.679 align:start position:0%
once you write it you should be able to
 

01:26:34.679 --> 01:26:36.830 align:start position:0%
once you write it you should be able to
reproduce<01:26:35.119><c> this</c><01:26:35.239><c> behavior</c><01:26:35.600><c> from</c><01:26:35.719><c> Tech</c><01:26:36.000><c> token</c>

01:26:36.830 --> 01:26:36.840 align:start position:0%
reproduce this behavior from Tech token
 

01:26:36.840 --> 01:26:39.310 align:start position:0%
reproduce this behavior from Tech token
so<01:26:37.080><c> getting</c><01:26:37.280><c> the</c><01:26:37.400><c> gb4</c><01:26:37.880><c> tokenizer</c><01:26:38.840><c> you</c><01:26:38.960><c> can</c>

01:26:39.310 --> 01:26:39.320 align:start position:0%
so getting the gb4 tokenizer you can
 

01:26:39.320 --> 01:26:41.310 align:start position:0%
so getting the gb4 tokenizer you can
take<01:26:39.960><c> uh</c><01:26:40.159><c> you</c><01:26:40.239><c> can</c><01:26:40.400><c> encode</c><01:26:40.760><c> the</c><01:26:40.920><c> string</c><01:26:41.199><c> and</c>

01:26:41.310 --> 01:26:41.320 align:start position:0%
take uh you can encode the string and
 

01:26:41.320 --> 01:26:43.229 align:start position:0%
take uh you can encode the string and
you<01:26:41.360><c> should</c><01:26:41.560><c> get</c><01:26:41.719><c> these</c><01:26:41.920><c> tokens</c><01:26:42.920><c> and</c><01:26:43.040><c> then</c><01:26:43.159><c> you</c>

01:26:43.229 --> 01:26:43.239 align:start position:0%
you should get these tokens and then you
 

01:26:43.239 --> 01:26:44.669 align:start position:0%
you should get these tokens and then you
can<01:26:43.400><c> encode</c><01:26:43.760><c> and</c><01:26:43.880><c> decode</c><01:26:44.199><c> the</c><01:26:44.280><c> exact</c><01:26:44.560><c> same</c>

01:26:44.669 --> 01:26:44.679 align:start position:0%
can encode and decode the exact same
 

01:26:44.679 --> 01:26:47.229 align:start position:0%
can encode and decode the exact same
string<01:26:44.960><c> to</c><01:26:45.159><c> recover</c><01:26:45.520><c> it</c><01:26:46.480><c> and</c><01:26:46.639><c> in</c><01:26:46.800><c> addition</c><01:26:47.080><c> to</c>

01:26:47.229 --> 01:26:47.239 align:start position:0%
string to recover it and in addition to
 

01:26:47.239 --> 01:26:48.390 align:start position:0%
string to recover it and in addition to
all<01:26:47.400><c> that</c><01:26:47.520><c> you</c><01:26:47.560><c> should</c><01:26:47.719><c> be</c><01:26:47.800><c> able</c><01:26:47.960><c> to</c><01:26:48.080><c> implement</c>

01:26:48.390 --> 01:26:48.400 align:start position:0%
all that you should be able to implement
 

01:26:48.400 --> 01:26:50.709 align:start position:0%
all that you should be able to implement
your<01:26:48.520><c> own</c><01:26:48.679><c> train</c><01:26:49.040><c> function</c><01:26:50.040><c> uh</c><01:26:50.199><c> which</c><01:26:50.440><c> Tik</c>

01:26:50.709 --> 01:26:50.719 align:start position:0%
your own train function uh which Tik
 

01:26:50.719 --> 01:26:52.470 align:start position:0%
your own train function uh which Tik
token<01:26:51.000><c> Library</c><01:26:51.360><c> does</c><01:26:51.520><c> not</c><01:26:51.760><c> provide</c><01:26:52.000><c> it's</c><01:26:52.199><c> it's</c>

01:26:52.470 --> 01:26:52.480 align:start position:0%
token Library does not provide it's it's
 

01:26:52.480 --> 01:26:54.590 align:start position:0%
token Library does not provide it's it's
again<01:26:52.719><c> only</c><01:26:53.040><c> inference</c><01:26:53.480><c> code</c><01:26:54.040><c> but</c><01:26:54.199><c> you</c><01:26:54.440><c> could</c>

01:26:54.590 --> 01:26:54.600 align:start position:0%
again only inference code but you could
 

01:26:54.600 --> 01:26:57.870 align:start position:0%
again only inference code but you could
write<01:26:54.800><c> your</c><01:26:54.920><c> own</c><01:26:55.119><c> train</c><01:26:55.800><c> MBP</c><01:26:56.360><c> does</c><01:26:56.520><c> it</c><01:26:56.719><c> as</c><01:26:56.880><c> well</c>

01:26:57.870 --> 01:26:57.880 align:start position:0%
write your own train MBP does it as well
 

01:26:57.880 --> 01:26:59.310 align:start position:0%
write your own train MBP does it as well
and<01:26:58.280><c> that</c><01:26:58.360><c> will</c><01:26:58.560><c> allow</c><01:26:58.760><c> you</c><01:26:58.880><c> to</c><01:26:58.960><c> train</c><01:26:59.199><c> your</c>

01:26:59.310 --> 01:26:59.320 align:start position:0%
and that will allow you to train your
 

01:26:59.320 --> 01:27:00.709 align:start position:0%
and that will allow you to train your
own<01:26:59.480><c> token</c>

01:27:00.709 --> 01:27:00.719 align:start position:0%
own token
 

01:27:00.719 --> 01:27:02.390 align:start position:0%
own token
vocabularies<01:27:01.719><c> so</c><01:27:01.880><c> here</c><01:27:02.000><c> are</c><01:27:02.080><c> some</c><01:27:02.199><c> of</c><01:27:02.320><c> the</c>

01:27:02.390 --> 01:27:02.400 align:start position:0%
vocabularies so here are some of the
 

01:27:02.400 --> 01:27:06.030 align:start position:0%
vocabularies so here are some of the
code<01:27:02.600><c> inside</c><01:27:02.920><c> M</c><01:27:03.080><c> be</c><01:27:03.679><c> mean</c><01:27:04.080><c> bpe</c><01:27:05.080><c> uh</c><01:27:05.199><c> shows</c><01:27:05.880><c> the</c>

01:27:06.030 --> 01:27:06.040 align:start position:0%
code inside M be mean bpe uh shows the
 

01:27:06.040 --> 01:27:08.709 align:start position:0%
code inside M be mean bpe uh shows the
token<01:27:06.360><c> vocabularies</c><01:27:07.000><c> that</c><01:27:07.159><c> you</c><01:27:07.440><c> might</c><01:27:07.719><c> obtain</c>

01:27:08.709 --> 01:27:08.719 align:start position:0%
token vocabularies that you might obtain
 

01:27:08.719 --> 01:27:12.390 align:start position:0%
token vocabularies that you might obtain
so<01:27:09.000><c> on</c><01:27:09.159><c> the</c><01:27:09.360><c> left</c><01:27:10.119><c> uh</c><01:27:10.280><c> here</c><01:27:10.800><c> we</c><01:27:10.960><c> have</c><01:27:11.159><c> the</c><01:27:11.280><c> GPT</c><01:27:11.679><c> 4</c>

01:27:12.390 --> 01:27:12.400 align:start position:0%
so on the left uh here we have the GPT 4
 

01:27:12.400 --> 01:27:15.830 align:start position:0%
so on the left uh here we have the GPT 4
merges<01:27:13.400><c> uh</c><01:27:13.520><c> so</c><01:27:13.639><c> the</c><01:27:13.760><c> first</c><01:27:14.000><c> 256</c><01:27:15.000><c> are</c><01:27:15.560><c> raw</c>

01:27:15.830 --> 01:27:15.840 align:start position:0%
merges uh so the first 256 are raw
 

01:27:15.840 --> 01:27:17.709 align:start position:0%
merges uh so the first 256 are raw
individual<01:27:16.400><c> bytes</c><01:27:17.080><c> and</c><01:27:17.199><c> then</c><01:27:17.360><c> here</c><01:27:17.520><c> I</c><01:27:17.600><c> am</c>

01:27:17.709 --> 01:27:17.719 align:start position:0%
individual bytes and then here I am
 

01:27:17.719 --> 01:27:19.550 align:start position:0%
individual bytes and then here I am
visualizing<01:27:18.199><c> the</c><01:27:18.320><c> merges</c><01:27:18.800><c> that</c><01:27:18.920><c> gp4</c>

01:27:19.550 --> 01:27:19.560 align:start position:0%
visualizing the merges that gp4
 

01:27:19.560 --> 01:27:21.750 align:start position:0%
visualizing the merges that gp4
performed<01:27:20.239><c> during</c><01:27:20.520><c> its</c><01:27:20.719><c> training</c><01:27:21.520><c> so</c><01:27:21.639><c> the</c>

01:27:21.750 --> 01:27:21.760 align:start position:0%
performed during its training so the
 

01:27:21.760 --> 01:27:24.910 align:start position:0%
performed during its training so the
very<01:27:21.920><c> first</c><01:27:22.320><c> merge</c><01:27:22.600><c> that</c><01:27:22.760><c> gp4</c><01:27:23.440><c> did</c><01:27:24.040><c> was</c><01:27:24.239><c> merge</c>

01:27:24.910 --> 01:27:24.920 align:start position:0%
very first merge that gp4 did was merge
 

01:27:24.920 --> 01:27:27.590 align:start position:0%
very first merge that gp4 did was merge
two<01:27:25.199><c> spaces</c><01:27:25.920><c> into</c><01:27:26.159><c> a</c><01:27:26.280><c> single</c><01:27:26.560><c> token</c><01:27:26.840><c> for</c><01:27:27.480><c> you</c>

01:27:27.590 --> 01:27:27.600 align:start position:0%
two spaces into a single token for you
 

01:27:27.600 --> 01:27:30.830 align:start position:0%
two spaces into a single token for you
know<01:27:27.800><c> two</c><01:27:28.000><c> spaces</c><01:27:28.719><c> and</c><01:27:28.840><c> that</c><01:27:28.960><c> is</c><01:27:29.040><c> a</c><01:27:29.159><c> token</c><01:27:29.840><c> 256</c>

01:27:30.830 --> 01:27:30.840 align:start position:0%
know two spaces and that is a token 256
 

01:27:30.840 --> 01:27:32.229 align:start position:0%
know two spaces and that is a token 256
and<01:27:30.960><c> so</c><01:27:31.119><c> this</c><01:27:31.239><c> is</c><01:27:31.360><c> the</c><01:27:31.440><c> order</c><01:27:31.719><c> in</c><01:27:31.840><c> which</c><01:27:32.040><c> things</c>

01:27:32.229 --> 01:27:32.239 align:start position:0%
and so this is the order in which things
 

01:27:32.239 --> 01:27:34.669 align:start position:0%
and so this is the order in which things
merged<01:27:32.600><c> during</c><01:27:32.800><c> gb4</c><01:27:33.360><c> training</c><01:27:34.239><c> and</c><01:27:34.360><c> this</c><01:27:34.480><c> is</c>

01:27:34.669 --> 01:27:34.679 align:start position:0%
merged during gb4 training and this is
 

01:27:34.679 --> 01:27:39.070 align:start position:0%
merged during gb4 training and this is
the<01:27:35.080><c> merge</c><01:27:35.560><c> order</c><01:27:36.080><c> that</c><01:27:36.560><c> um</c><01:27:37.199><c> we</c><01:27:37.400><c> obtain</c><01:27:37.760><c> in</c><01:27:38.080><c> MBP</c>

01:27:39.070 --> 01:27:39.080 align:start position:0%
the merge order that um we obtain in MBP
 

01:27:39.080 --> 01:27:41.189 align:start position:0%
the merge order that um we obtain in MBP
by<01:27:39.199><c> training</c><01:27:39.520><c> a</c><01:27:39.639><c> tokenizer</c><01:27:40.639><c> and</c><01:27:40.760><c> in</c><01:27:40.880><c> this</c><01:27:41.040><c> case</c>

01:27:41.189 --> 01:27:41.199 align:start position:0%
by training a tokenizer and in this case
 

01:27:41.199 --> 01:27:43.229 align:start position:0%
by training a tokenizer and in this case
I<01:27:41.320><c> trained</c><01:27:41.639><c> it</c><01:27:41.880><c> on</c><01:27:42.239><c> a</c><01:27:42.440><c> Wikipedia</c><01:27:42.920><c> page</c><01:27:43.119><c> of</c>

01:27:43.229 --> 01:27:43.239 align:start position:0%
I trained it on a Wikipedia page of
 

01:27:43.239 --> 01:27:45.590 align:start position:0%
I trained it on a Wikipedia page of
Taylor<01:27:43.520><c> Swift</c><01:27:44.360><c> uh</c><01:27:44.480><c> not</c><01:27:44.679><c> because</c><01:27:44.880><c> I'm</c><01:27:45.000><c> a</c><01:27:45.080><c> Swifty</c>

01:27:45.590 --> 01:27:45.600 align:start position:0%
Taylor Swift uh not because I'm a Swifty
 

01:27:45.600 --> 01:27:47.790 align:start position:0%
Taylor Swift uh not because I'm a Swifty
but<01:27:45.840><c> because</c><01:27:46.280><c> that</c><01:27:46.400><c> is</c><01:27:46.520><c> one</c><01:27:46.639><c> of</c><01:27:46.760><c> the</c><01:27:46.960><c> longest</c>

01:27:47.790 --> 01:27:47.800 align:start position:0%
but because that is one of the longest
 

01:27:47.800 --> 01:27:49.629 align:start position:0%
but because that is one of the longest
um<01:27:48.239><c> Wikipedia</c><01:27:48.760><c> Pages</c><01:27:49.040><c> apparently</c><01:27:49.440><c> that's</c>

01:27:49.629 --> 01:27:49.639 align:start position:0%
um Wikipedia Pages apparently that's
 

01:27:49.639 --> 01:27:54.030 align:start position:0%
um Wikipedia Pages apparently that's
available<01:27:50.480><c> but</c><01:27:50.639><c> she</c><01:27:50.760><c> is</c><01:27:50.920><c> pretty</c><01:27:51.159><c> cool</c><01:27:52.440><c> and</c>

01:27:54.030 --> 01:27:54.040 align:start position:0%
available but she is pretty cool and
 

01:27:54.040 --> 01:27:56.629 align:start position:0%
available but she is pretty cool and
um<01:27:55.040><c> what</c><01:27:55.159><c> was</c><01:27:55.280><c> I</c><01:27:55.400><c> going</c><01:27:55.480><c> to</c><01:27:55.639><c> say</c><01:27:56.199><c> yeah</c><01:27:56.400><c> so</c><01:27:56.560><c> you</c>

01:27:56.629 --> 01:27:56.639 align:start position:0%
um what was I going to say yeah so you
 

01:27:56.639 --> 01:27:59.070 align:start position:0%
um what was I going to say yeah so you
can<01:27:56.840><c> compare</c><01:27:57.280><c> these</c><01:27:57.440><c> two</c><01:27:57.840><c> uh</c><01:27:58.080><c> vocabularies</c>

01:27:59.070 --> 01:27:59.080 align:start position:0%
can compare these two uh vocabularies
 

01:27:59.080 --> 01:28:03.990 align:start position:0%
can compare these two uh vocabularies
and<01:28:00.080><c> so</c><01:28:00.199><c> as</c><01:28:00.280><c> an</c><01:28:00.920><c> example</c><01:28:02.080><c> um</c><01:28:03.080><c> here</c><01:28:03.360><c> GPT</c><01:28:03.760><c> for</c>

01:28:03.990 --> 01:28:04.000 align:start position:0%
and so as an example um here GPT for
 

01:28:04.000 --> 01:28:06.790 align:start position:0%
and so as an example um here GPT for
merged<01:28:04.480><c> I</c><01:28:04.679><c> in</c><01:28:04.880><c> to</c><01:28:05.000><c> become</c><01:28:05.280><c> in</c><01:28:06.119><c> and</c><01:28:06.320><c> we've</c><01:28:06.560><c> done</c>

01:28:06.790 --> 01:28:06.800 align:start position:0%
merged I in to become in and we've done
 

01:28:06.800 --> 01:28:09.990 align:start position:0%
merged I in to become in and we've done
the<01:28:06.920><c> exact</c><01:28:07.199><c> same</c><01:28:07.440><c> thing</c><01:28:08.199><c> on</c><01:28:08.360><c> this</c><01:28:08.520><c> token</c><01:28:09.000><c> 259</c>

01:28:09.990 --> 01:28:10.000 align:start position:0%
the exact same thing on this token 259
 

01:28:10.000 --> 01:28:13.270 align:start position:0%
the exact same thing on this token 259
here<01:28:10.360><c> space</c><01:28:10.679><c> t</c><01:28:10.960><c> becomes</c><01:28:11.520><c> space</c><01:28:11.840><c> t</c><01:28:12.719><c> and</c><01:28:13.119><c> that</c>

01:28:13.270 --> 01:28:13.280 align:start position:0%
here space t becomes space t and that
 

01:28:13.280 --> 01:28:14.629 align:start position:0%
here space t becomes space t and that
happened<01:28:13.560><c> for</c><01:28:13.719><c> us</c><01:28:13.880><c> a</c><01:28:13.960><c> little</c><01:28:14.119><c> bit</c><01:28:14.239><c> later</c><01:28:14.480><c> as</c>

01:28:14.629 --> 01:28:14.639 align:start position:0%
happened for us a little bit later as
 

01:28:14.639 --> 01:28:16.709 align:start position:0%
happened for us a little bit later as
well<01:28:15.119><c> so</c><01:28:15.280><c> the</c><01:28:15.440><c> difference</c><01:28:15.800><c> here</c><01:28:16.000><c> is</c><01:28:16.320><c> again</c><01:28:16.560><c> to</c>

01:28:16.709 --> 01:28:16.719 align:start position:0%
well so the difference here is again to
 

01:28:16.719 --> 01:28:18.390 align:start position:0%
well so the difference here is again to
my<01:28:17.119><c> understanding</c><01:28:17.520><c> only</c><01:28:17.840><c> a</c><01:28:17.960><c> difference</c><01:28:18.280><c> of</c>

01:28:18.390 --> 01:28:18.400 align:start position:0%
my understanding only a difference of
 

01:28:18.400 --> 01:28:20.270 align:start position:0%
my understanding only a difference of
the<01:28:18.480><c> training</c><01:28:18.840><c> set</c><01:28:19.480><c> so</c><01:28:19.719><c> as</c><01:28:19.800><c> an</c><01:28:19.960><c> example</c>

01:28:20.270 --> 01:28:20.280 align:start position:0%
the training set so as an example
 

01:28:20.280 --> 01:28:22.070 align:start position:0%
the training set so as an example
because<01:28:20.440><c> I</c><01:28:20.520><c> see</c><01:28:20.639><c> a</c><01:28:20.760><c> lot</c><01:28:20.880><c> of</c><01:28:21.000><c> white</c><01:28:21.239><c> space</c><01:28:21.800><c> I</c>

01:28:22.070 --> 01:28:22.080 align:start position:0%
because I see a lot of white space I
 

01:28:22.080 --> 01:28:23.750 align:start position:0%
because I see a lot of white space I
supect<01:28:22.360><c> that</c><01:28:22.480><c> gp4</c><01:28:23.040><c> probably</c><01:28:23.280><c> had</c><01:28:23.400><c> a</c><01:28:23.480><c> lot</c><01:28:23.600><c> of</c>

01:28:23.750 --> 01:28:23.760 align:start position:0%
supect that gp4 probably had a lot of
 

01:28:23.760 --> 01:28:25.470 align:start position:0%
supect that gp4 probably had a lot of
python<01:28:24.080><c> code</c><01:28:24.280><c> in</c><01:28:24.400><c> its</c><01:28:24.560><c> training</c><01:28:24.880><c> set</c><01:28:25.119><c> I'm</c><01:28:25.239><c> not</c>

01:28:25.470 --> 01:28:25.480 align:start position:0%
python code in its training set I'm not
 

01:28:25.480 --> 01:28:27.590 align:start position:0%
python code in its training set I'm not
sure<01:28:26.480><c> uh</c><01:28:26.560><c> for</c><01:28:26.719><c> the</c>

01:28:27.590 --> 01:28:27.600 align:start position:0%
sure uh for the
 

01:28:27.600 --> 01:28:30.070 align:start position:0%
sure uh for the
tokenizer<01:28:28.600><c> and</c><01:28:29.000><c> uh</c><01:28:29.159><c> here</c><01:28:29.360><c> we</c><01:28:29.440><c> see</c><01:28:29.679><c> much</c><01:28:29.880><c> less</c>

01:28:30.070 --> 01:28:30.080 align:start position:0%
tokenizer and uh here we see much less
 

01:28:30.080 --> 01:28:32.950 align:start position:0%
tokenizer and uh here we see much less
of<01:28:30.199><c> that</c><01:28:30.360><c> of</c><01:28:30.480><c> course</c><01:28:30.639><c> in</c><01:28:30.800><c> the</c><01:28:31.000><c> Wikipedia</c><01:28:31.960><c> page</c>

01:28:32.950 --> 01:28:32.960 align:start position:0%
of that of course in the Wikipedia page
 

01:28:32.960 --> 01:28:34.669 align:start position:0%
of that of course in the Wikipedia page
so<01:28:33.239><c> roughly</c><01:28:33.520><c> speaking</c><01:28:33.840><c> they</c><01:28:33.960><c> look</c><01:28:34.159><c> the</c><01:28:34.280><c> same</c>

01:28:34.669 --> 01:28:34.679 align:start position:0%
so roughly speaking they look the same
 

01:28:34.679 --> 01:28:35.950 align:start position:0%
so roughly speaking they look the same
and<01:28:34.840><c> they</c><01:28:34.960><c> look</c><01:28:35.119><c> the</c><01:28:35.199><c> same</c><01:28:35.400><c> because</c><01:28:35.600><c> they're</c>

01:28:35.950 --> 01:28:35.960 align:start position:0%
and they look the same because they're
 

01:28:35.960 --> 01:28:38.070 align:start position:0%
and they look the same because they're
running<01:28:36.280><c> the</c><01:28:36.360><c> same</c><01:28:36.520><c> algorithm</c><01:28:37.400><c> and</c><01:28:37.760><c> when</c><01:28:37.920><c> you</c>

01:28:38.070 --> 01:28:38.080 align:start position:0%
running the same algorithm and when you
 

01:28:38.080 --> 01:28:39.189 align:start position:0%
running the same algorithm and when you
train<01:28:38.320><c> your</c><01:28:38.440><c> own</c><01:28:38.639><c> you're</c><01:28:38.800><c> probably</c><01:28:39.000><c> going</c><01:28:39.080><c> to</c>

01:28:39.189 --> 01:28:39.199 align:start position:0%
train your own you're probably going to
 

01:28:39.199 --> 01:28:41.189 align:start position:0%
train your own you're probably going to
get<01:28:39.320><c> something</c><01:28:39.679><c> similar</c><01:28:40.679><c> depending</c><01:28:41.000><c> on</c><01:28:41.119><c> what</c>

01:28:41.189 --> 01:28:41.199 align:start position:0%
get something similar depending on what
 

01:28:41.199 --> 01:28:43.270 align:start position:0%
get something similar depending on what
you<01:28:41.320><c> train</c><01:28:41.520><c> it</c><01:28:41.639><c> on</c><01:28:42.480><c> okay</c><01:28:42.560><c> so</c><01:28:42.719><c> we</c><01:28:42.800><c> are</c><01:28:42.920><c> now</c><01:28:43.119><c> going</c>

01:28:43.270 --> 01:28:43.280 align:start position:0%
you train it on okay so we are now going
 

01:28:43.280 --> 01:28:45.070 align:start position:0%
you train it on okay so we are now going
to<01:28:43.440><c> move</c><01:28:43.639><c> on</c><01:28:43.800><c> from</c><01:28:44.000><c> tick</c><01:28:44.280><c> token</c><01:28:44.679><c> and</c><01:28:44.840><c> the</c><01:28:44.960><c> way</c>

01:28:45.070 --> 01:28:45.080 align:start position:0%
to move on from tick token and the way
 

01:28:45.080 --> 01:28:47.590 align:start position:0%
to move on from tick token and the way
that<01:28:45.239><c> open</c><01:28:45.520><c> AI</c><01:28:45.840><c> tokenizes</c><01:28:46.440><c> its</c><01:28:46.600><c> strings</c><01:28:47.520><c> and</c>

01:28:47.590 --> 01:28:47.600 align:start position:0%
that open AI tokenizes its strings and
 

01:28:47.600 --> 01:28:49.189 align:start position:0%
that open AI tokenizes its strings and
we're<01:28:47.760><c> going</c><01:28:47.920><c> to</c><01:28:48.159><c> discuss</c><01:28:48.520><c> one</c><01:28:48.679><c> more</c><01:28:48.960><c> very</c>

01:28:49.189 --> 01:28:49.199 align:start position:0%
we're going to discuss one more very
 

01:28:49.199 --> 01:28:50.990 align:start position:0%
we're going to discuss one more very
commonly<01:28:49.560><c> used</c><01:28:49.880><c> library</c><01:28:50.360><c> for</c><01:28:50.600><c> working</c><01:28:50.840><c> with</c>

01:28:50.990 --> 01:28:51.000 align:start position:0%
commonly used library for working with
 

01:28:51.000 --> 01:28:52.709 align:start position:0%
commonly used library for working with
tokenization<01:28:51.520><c> inlm</c>

01:28:52.709 --> 01:28:52.719 align:start position:0%
tokenization inlm
 

01:28:52.719 --> 01:28:55.350 align:start position:0%
tokenization inlm
and<01:28:52.880><c> that</c><01:28:53.000><c> is</c><01:28:53.280><c> sentence</c><01:28:53.760><c> piece</c><01:28:54.760><c> so</c><01:28:54.960><c> sentence</c>

01:28:55.350 --> 01:28:55.360 align:start position:0%
and that is sentence piece so sentence
 

01:28:55.360 --> 01:28:58.149 align:start position:0%
and that is sentence piece so sentence
piece<01:28:55.800><c> is</c><01:28:56.360><c> very</c><01:28:56.600><c> commonly</c><01:28:57.040><c> used</c><01:28:57.600><c> in</c><01:28:57.840><c> language</c>

01:28:58.149 --> 01:28:58.159 align:start position:0%
piece is very commonly used in language
 

01:28:58.159 --> 01:29:00.109 align:start position:0%
piece is very commonly used in language
models<01:28:58.800><c> because</c><01:28:59.040><c> unlike</c><01:28:59.320><c> Tik</c><01:28:59.560><c> token</c><01:28:59.840><c> it</c><01:29:00.000><c> can</c>

01:29:00.109 --> 01:29:00.119 align:start position:0%
models because unlike Tik token it can
 

01:29:00.119 --> 01:29:02.350 align:start position:0%
models because unlike Tik token it can
do<01:29:00.320><c> both</c><01:29:00.600><c> training</c><01:29:01.080><c> and</c><01:29:01.280><c> inference</c><01:29:02.040><c> and</c><01:29:02.159><c> is</c>

01:29:02.350 --> 01:29:02.360 align:start position:0%
do both training and inference and is
 

01:29:02.360 --> 01:29:04.830 align:start position:0%
do both training and inference and is
quite<01:29:02.600><c> efficient</c><01:29:03.119><c> at</c><01:29:03.320><c> both</c><01:29:04.239><c> it</c><01:29:04.400><c> supports</c><01:29:04.719><c> a</c>

01:29:04.830 --> 01:29:04.840 align:start position:0%
quite efficient at both it supports a
 

01:29:04.840 --> 01:29:06.750 align:start position:0%
quite efficient at both it supports a
number<01:29:05.040><c> of</c><01:29:05.199><c> algorithms</c><01:29:05.719><c> for</c><01:29:05.880><c> training</c><01:29:06.600><c> uh</c>

01:29:06.750 --> 01:29:06.760 align:start position:0%
number of algorithms for training uh
 

01:29:06.760 --> 01:29:09.189 align:start position:0%
number of algorithms for training uh
vocabularies<01:29:07.679><c> but</c><01:29:07.840><c> one</c><01:29:08.040><c> of</c><01:29:08.199><c> them</c><01:29:08.440><c> is</c><01:29:08.639><c> the</c><01:29:08.960><c> B</c>

01:29:09.189 --> 01:29:09.199 align:start position:0%
vocabularies but one of them is the B
 

01:29:09.199 --> 01:29:10.430 align:start position:0%
vocabularies but one of them is the B
pair<01:29:09.360><c> en</c><01:29:09.440><c> coding</c><01:29:09.679><c> algorithm</c><01:29:10.080><c> that</c><01:29:10.159><c> we've</c><01:29:10.320><c> been</c>

01:29:10.430 --> 01:29:10.440 align:start position:0%
pair en coding algorithm that we've been
 

01:29:10.440 --> 01:29:13.629 align:start position:0%
pair en coding algorithm that we've been
looking<01:29:10.679><c> at</c><01:29:11.280><c> so</c><01:29:11.600><c> it</c><01:29:11.719><c> supports</c><01:29:12.280><c> it</c><01:29:13.280><c> now</c>

01:29:13.629 --> 01:29:13.639 align:start position:0%
looking at so it supports it now
 

01:29:13.639 --> 01:29:15.709 align:start position:0%
looking at so it supports it now
sentence<01:29:14.000><c> piece</c><01:29:14.239><c> is</c><01:29:14.360><c> used</c><01:29:14.760><c> both</c><01:29:15.000><c> by</c><01:29:15.159><c> llama</c><01:29:15.600><c> and</c>

01:29:15.709 --> 01:29:15.719 align:start position:0%
sentence piece is used both by llama and
 

01:29:15.719 --> 01:29:18.189 align:start position:0%
sentence piece is used both by llama and
mistal<01:29:16.199><c> series</c><01:29:16.960><c> and</c><01:29:17.320><c> many</c><01:29:17.520><c> other</c><01:29:17.719><c> models</c><01:29:18.080><c> as</c>

01:29:18.189 --> 01:29:18.199 align:start position:0%
mistal series and many other models as
 

01:29:18.199 --> 01:29:20.750 align:start position:0%
mistal series and many other models as
well<01:29:19.040><c> it</c><01:29:19.159><c> is</c><01:29:19.280><c> on</c><01:29:19.480><c> GitHub</c><01:29:19.840><c> under</c><01:29:20.080><c> Google</c>

01:29:20.750 --> 01:29:20.760 align:start position:0%
well it is on GitHub under Google
 

01:29:20.760 --> 01:29:22.750 align:start position:0%
well it is on GitHub under Google
sentence<01:29:21.159><c> piece</c>

01:29:22.750 --> 01:29:22.760 align:start position:0%
sentence piece
 

01:29:22.760 --> 01:29:24.390 align:start position:0%
sentence piece
and<01:29:23.199><c> the</c><01:29:23.360><c> big</c><01:29:23.560><c> difference</c><01:29:23.880><c> with</c><01:29:24.080><c> sentence</c>

01:29:24.390 --> 01:29:24.400 align:start position:0%
and the big difference with sentence
 

01:29:24.400 --> 01:29:26.189 align:start position:0%
and the big difference with sentence
piece<01:29:24.679><c> and</c><01:29:24.760><c> we're</c><01:29:24.880><c> going</c><01:29:25.040><c> to</c><01:29:25.159><c> look</c><01:29:25.320><c> at</c><01:29:25.600><c> example</c>

01:29:26.189 --> 01:29:26.199 align:start position:0%
piece and we're going to look at example
 

01:29:26.199 --> 01:29:27.910 align:start position:0%
piece and we're going to look at example
because<01:29:26.480><c> this</c><01:29:26.560><c> is</c><01:29:26.760><c> kind</c><01:29:26.880><c> of</c><01:29:27.239><c> hard</c><01:29:27.440><c> and</c><01:29:27.600><c> subtle</c>

01:29:27.910 --> 01:29:27.920 align:start position:0%
because this is kind of hard and subtle
 

01:29:27.920 --> 01:29:31.030 align:start position:0%
because this is kind of hard and subtle
to<01:29:28.280><c> explain</c><01:29:29.280><c> is</c><01:29:29.520><c> that</c><01:29:30.199><c> they</c><01:29:30.360><c> think</c><01:29:30.600><c> different</c>

01:29:31.030 --> 01:29:31.040 align:start position:0%
to explain is that they think different
 

01:29:31.040 --> 01:29:35.470 align:start position:0%
to explain is that they think different
about<01:29:31.280><c> the</c><01:29:31.520><c> order</c><01:29:32.520><c> of</c><01:29:33.360><c> operations</c><01:29:33.920><c> here</c><01:29:34.560><c> so</c><01:29:35.360><c> in</c>

01:29:35.470 --> 01:29:35.480 align:start position:0%
about the order of operations here so in
 

01:29:35.480 --> 01:29:38.550 align:start position:0%
about the order of operations here so in
the<01:29:35.600><c> case</c><01:29:35.760><c> of</c><01:29:35.920><c> Tik</c><01:29:36.159><c> token</c><01:29:36.880><c> we</c><01:29:37.159><c> first</c><01:29:38.000><c> take</c><01:29:38.280><c> our</c>

01:29:38.550 --> 01:29:38.560 align:start position:0%
the case of Tik token we first take our
 

01:29:38.560 --> 01:29:40.990 align:start position:0%
the case of Tik token we first take our
code<01:29:38.840><c> points</c><01:29:39.360><c> in</c><01:29:39.480><c> the</c><01:29:39.639><c> string</c><01:29:40.280><c> we</c><01:29:40.480><c> encode</c><01:29:40.840><c> them</c>

01:29:40.990 --> 01:29:41.000 align:start position:0%
code points in the string we encode them
 

01:29:41.000 --> 01:29:42.870 align:start position:0%
code points in the string we encode them
using<01:29:41.239><c> mutf</c><01:29:41.840><c> to</c><01:29:42.040><c> bytes</c><01:29:42.520><c> and</c><01:29:42.639><c> then</c><01:29:42.760><c> we're</c>

01:29:42.870 --> 01:29:42.880 align:start position:0%
using mutf to bytes and then we're
 

01:29:42.880 --> 01:29:44.950 align:start position:0%
using mutf to bytes and then we're
merging<01:29:43.280><c> bytes</c><01:29:43.760><c> it's</c><01:29:43.960><c> fairly</c>

01:29:44.950 --> 01:29:44.960 align:start position:0%
merging bytes it's fairly
 

01:29:44.960 --> 01:29:48.870 align:start position:0%
merging bytes it's fairly
straightforward<01:29:45.960><c> for</c><01:29:46.360><c> sentence</c><01:29:46.800><c> piece</c><01:29:47.800><c> um</c><01:29:48.239><c> it</c>

01:29:48.870 --> 01:29:48.880 align:start position:0%
straightforward for sentence piece um it
 

01:29:48.880 --> 01:29:50.390 align:start position:0%
straightforward for sentence piece um it
works<01:29:49.199><c> directly</c><01:29:49.520><c> on</c><01:29:49.639><c> the</c><01:29:49.760><c> level</c><01:29:49.960><c> of</c><01:29:50.080><c> the</c><01:29:50.199><c> code</c>

01:29:50.390 --> 01:29:50.400 align:start position:0%
works directly on the level of the code
 

01:29:50.400 --> 01:29:52.510 align:start position:0%
works directly on the level of the code
points<01:29:50.840><c> themselves</c><01:29:51.679><c> so</c><01:29:51.920><c> so</c><01:29:52.040><c> it</c><01:29:52.159><c> looks</c><01:29:52.320><c> at</c>

01:29:52.510 --> 01:29:52.520 align:start position:0%
points themselves so so it looks at
 

01:29:52.520 --> 01:29:53.910 align:start position:0%
points themselves so so it looks at
whatever<01:29:52.840><c> code</c><01:29:53.080><c> points</c><01:29:53.280><c> are</c><01:29:53.440><c> available</c><01:29:53.800><c> in</c>

01:29:53.910 --> 01:29:53.920 align:start position:0%
whatever code points are available in
 

01:29:53.920 --> 01:29:55.870 align:start position:0%
whatever code points are available in
your<01:29:54.040><c> training</c><01:29:54.360><c> set</c><01:29:55.320><c> and</c><01:29:55.400><c> then</c><01:29:55.520><c> it</c><01:29:55.639><c> starts</c>

01:29:55.870 --> 01:29:55.880 align:start position:0%
your training set and then it starts
 

01:29:55.880 --> 01:29:59.750 align:start position:0%
your training set and then it starts
merging<01:29:56.280><c> those</c><01:29:56.440><c> code</c><01:29:56.800><c> points</c><01:29:57.800><c> and</c><01:29:58.480><c> um</c><01:29:59.159><c> the</c><01:29:59.320><c> bpe</c>

01:29:59.750 --> 01:29:59.760 align:start position:0%
merging those code points and um the bpe
 

01:29:59.760 --> 01:30:01.590 align:start position:0%
merging those code points and um the bpe
is<01:29:59.960><c> running</c><01:30:00.159><c> on</c><01:30:00.239><c> the</c><01:30:00.400><c> level</c><01:30:00.600><c> of</c><01:30:00.719><c> code</c>

01:30:01.590 --> 01:30:01.600 align:start position:0%
is running on the level of code
 

01:30:01.600 --> 01:30:04.229 align:start position:0%
is running on the level of code
points<01:30:02.600><c> and</c><01:30:02.800><c> if</c><01:30:02.880><c> you</c><01:30:03.080><c> happen</c><01:30:03.320><c> to</c><01:30:03.480><c> run</c><01:30:03.719><c> out</c><01:30:03.920><c> of</c>

01:30:04.229 --> 01:30:04.239 align:start position:0%
points and if you happen to run out of
 

01:30:04.239 --> 01:30:06.750 align:start position:0%
points and if you happen to run out of
code<01:30:04.520><c> points</c><01:30:05.119><c> so</c><01:30:05.400><c> there</c><01:30:05.520><c> are</c><01:30:05.639><c> maybe</c><01:30:05.880><c> some</c><01:30:06.119><c> rare</c>

01:30:06.750 --> 01:30:06.760 align:start position:0%
code points so there are maybe some rare
 

01:30:06.760 --> 01:30:08.030 align:start position:0%
code points so there are maybe some rare
uh<01:30:06.840><c> code</c><01:30:07.080><c> points</c><01:30:07.320><c> that</c><01:30:07.440><c> just</c><01:30:07.560><c> don't</c><01:30:07.719><c> come</c><01:30:07.920><c> up</c>

01:30:08.030 --> 01:30:08.040 align:start position:0%
uh code points that just don't come up
 

01:30:08.040 --> 01:30:09.709 align:start position:0%
uh code points that just don't come up
too<01:30:08.239><c> often</c><01:30:08.600><c> and</c><01:30:08.719><c> the</c><01:30:08.840><c> Rarity</c><01:30:09.239><c> is</c><01:30:09.320><c> determined</c>

01:30:09.709 --> 01:30:09.719 align:start position:0%
too often and the Rarity is determined
 

01:30:09.719 --> 01:30:11.189 align:start position:0%
too often and the Rarity is determined
by<01:30:09.840><c> this</c><01:30:10.000><c> character</c><01:30:10.360><c> coverage</c><01:30:10.679><c> hyper</c>

01:30:11.189 --> 01:30:11.199 align:start position:0%
by this character coverage hyper
 

01:30:11.199 --> 01:30:14.350 align:start position:0%
by this character coverage hyper
parameter<01:30:12.199><c> then</c><01:30:12.719><c> these</c><01:30:13.119><c> uh</c><01:30:13.239><c> code</c><01:30:13.480><c> points</c><01:30:13.760><c> will</c>

01:30:14.350 --> 01:30:14.360 align:start position:0%
parameter then these uh code points will
 

01:30:14.360 --> 01:30:16.270 align:start position:0%
parameter then these uh code points will
either<01:30:14.600><c> get</c><01:30:14.760><c> mapped</c><01:30:15.080><c> to</c><01:30:15.239><c> a</c><01:30:15.400><c> special</c><01:30:15.880><c> unknown</c>

01:30:16.270 --> 01:30:16.280 align:start position:0%
either get mapped to a special unknown
 

01:30:16.280 --> 01:30:19.510 align:start position:0%
either get mapped to a special unknown
token<01:30:16.880><c> like</c><01:30:17.119><c> ank</c><01:30:18.119><c> or</c><01:30:18.880><c> if</c><01:30:19.000><c> you</c><01:30:19.119><c> have</c><01:30:19.239><c> the</c><01:30:19.360><c> bite</c>

01:30:19.510 --> 01:30:19.520 align:start position:0%
token like ank or if you have the bite
 

01:30:19.520 --> 01:30:22.109 align:start position:0%
token like ank or if you have the bite
foldback<01:30:20.000><c> option</c><01:30:20.199><c> turned</c><01:30:20.480><c> on</c><01:30:21.320><c> then</c><01:30:21.920><c> that</c><01:30:22.000><c> will</c>

01:30:22.109 --> 01:30:22.119 align:start position:0%
foldback option turned on then that will
 

01:30:22.119 --> 01:30:23.950 align:start position:0%
foldback option turned on then that will
take<01:30:22.320><c> those</c><01:30:22.480><c> rare</c><01:30:22.800><c> Cod</c><01:30:23.080><c> points</c><01:30:23.560><c> it</c><01:30:23.679><c> will</c>

01:30:23.950 --> 01:30:23.960 align:start position:0%
take those rare Cod points it will
 

01:30:23.960 --> 01:30:26.070 align:start position:0%
take those rare Cod points it will
encode<01:30:24.400><c> them</c><01:30:24.560><c> using</c><01:30:24.800><c> utf8</c><01:30:25.679><c> and</c><01:30:25.800><c> then</c><01:30:25.920><c> the</c>

01:30:26.070 --> 01:30:26.080 align:start position:0%
encode them using utf8 and then the
 

01:30:26.080 --> 01:30:27.750 align:start position:0%
encode them using utf8 and then the
individual<01:30:26.560><c> bytes</c><01:30:26.880><c> of</c><01:30:27.000><c> that</c><01:30:27.159><c> encoding</c><01:30:27.600><c> will</c>

01:30:27.750 --> 01:30:27.760 align:start position:0%
individual bytes of that encoding will
 

01:30:27.760 --> 01:30:30.109 align:start position:0%
individual bytes of that encoding will
be<01:30:28.040><c> translated</c><01:30:28.560><c> into</c><01:30:28.840><c> tokens</c><01:30:29.719><c> and</c><01:30:29.880><c> there</c><01:30:29.960><c> are</c>

01:30:30.109 --> 01:30:30.119 align:start position:0%
be translated into tokens and there are
 

01:30:30.119 --> 01:30:32.189 align:start position:0%
be translated into tokens and there are
these<01:30:30.320><c> special</c><01:30:30.840><c> bite</c><01:30:31.119><c> tokens</c><01:30:31.560><c> that</c><01:30:31.880><c> basically</c>

01:30:32.189 --> 01:30:32.199 align:start position:0%
these special bite tokens that basically
 

01:30:32.199 --> 01:30:35.510 align:start position:0%
these special bite tokens that basically
get<01:30:32.360><c> added</c><01:30:32.600><c> to</c><01:30:32.679><c> the</c><01:30:33.119><c> vocabulary</c><01:30:34.119><c> so</c><01:30:35.000><c> it</c><01:30:35.159><c> uses</c>

01:30:35.510 --> 01:30:35.520 align:start position:0%
get added to the vocabulary so it uses
 

01:30:35.520 --> 01:30:38.229 align:start position:0%
get added to the vocabulary so it uses
BP<01:30:36.080><c> on</c><01:30:36.520><c> on</c><01:30:36.679><c> the</c><01:30:36.840><c> code</c><01:30:37.119><c> points</c><01:30:37.719><c> and</c><01:30:37.920><c> then</c><01:30:38.040><c> it</c>

01:30:38.229 --> 01:30:38.239 align:start position:0%
BP on on the code points and then it
 

01:30:38.239 --> 01:30:41.790 align:start position:0%
BP on on the code points and then it
falls<01:30:38.639><c> back</c><01:30:38.760><c> to</c><01:30:38.960><c> bytes</c><01:30:39.360><c> for</c><01:30:39.679><c> rare</c><01:30:40.400><c> Cod</c><01:30:40.800><c> points</c>

01:30:41.790 --> 01:30:41.800 align:start position:0%
falls back to bytes for rare Cod points
 

01:30:41.800 --> 01:30:44.070 align:start position:0%
falls back to bytes for rare Cod points
um<01:30:42.719><c> and</c><01:30:42.800><c> so</c><01:30:43.000><c> that's</c><01:30:43.159><c> kind</c><01:30:43.280><c> of</c><01:30:43.400><c> like</c><01:30:43.639><c> difference</c>

01:30:44.070 --> 01:30:44.080 align:start position:0%
um and so that's kind of like difference
 

01:30:44.080 --> 01:30:45.510 align:start position:0%
um and so that's kind of like difference
personally<01:30:44.440><c> I</c><01:30:44.560><c> find</c><01:30:44.679><c> the</c><01:30:44.840><c> Tik</c><01:30:45.000><c> token</c><01:30:45.280><c> we</c>

01:30:45.510 --> 01:30:45.520 align:start position:0%
personally I find the Tik token we
 

01:30:45.520 --> 01:30:47.470 align:start position:0%
personally I find the Tik token we
significantly<01:30:46.119><c> cleaner</c><01:30:47.040><c> uh</c><01:30:47.119><c> but</c><01:30:47.239><c> it's</c><01:30:47.360><c> kind</c>

01:30:47.470 --> 01:30:47.480 align:start position:0%
significantly cleaner uh but it's kind
 

01:30:47.480 --> 01:30:48.830 align:start position:0%
significantly cleaner uh but it's kind
of<01:30:47.600><c> like</c><01:30:47.679><c> a</c><01:30:47.800><c> subtle</c><01:30:48.159><c> but</c><01:30:48.320><c> pretty</c><01:30:48.520><c> major</c>

01:30:48.830 --> 01:30:48.840 align:start position:0%
of like a subtle but pretty major
 

01:30:48.840 --> 01:30:50.310 align:start position:0%
of like a subtle but pretty major
difference<01:30:49.159><c> between</c><01:30:49.480><c> the</c><01:30:49.600><c> way</c><01:30:49.760><c> they</c><01:30:49.880><c> approach</c>

01:30:50.310 --> 01:30:50.320 align:start position:0%
difference between the way they approach
 

01:30:50.320 --> 01:30:52.030 align:start position:0%
difference between the way they approach
tokenization<01:30:51.320><c> let's</c><01:30:51.520><c> work</c><01:30:51.719><c> with</c><01:30:51.880><c> with</c><01:30:51.960><c> a</c>

01:30:52.030 --> 01:30:52.040 align:start position:0%
tokenization let's work with with a
 

01:30:52.040 --> 01:30:53.990 align:start position:0%
tokenization let's work with with a
concrete<01:30:52.360><c> example</c><01:30:52.800><c> because</c><01:30:53.080><c> otherwise</c><01:30:53.880><c> this</c>

01:30:53.990 --> 01:30:54.000 align:start position:0%
concrete example because otherwise this
 

01:30:54.000 --> 01:30:56.709 align:start position:0%
concrete example because otherwise this
is<01:30:54.159><c> kind</c><01:30:54.239><c> of</c><01:30:54.400><c> hard</c><01:30:54.600><c> to</c><01:30:55.440><c> um</c><01:30:55.960><c> to</c><01:30:56.119><c> get</c><01:30:56.239><c> your</c><01:30:56.400><c> head</c>

01:30:56.709 --> 01:30:56.719 align:start position:0%
is kind of hard to um to get your head
 

01:30:56.719 --> 01:30:59.109 align:start position:0%
is kind of hard to um to get your head
around<01:30:57.719><c> so</c><01:30:57.880><c> let's</c><01:30:58.040><c> work</c><01:30:58.199><c> with</c><01:30:58.320><c> a</c><01:30:58.440><c> concrete</c>

01:30:59.109 --> 01:30:59.119 align:start position:0%
around so let's work with a concrete
 

01:30:59.119 --> 01:31:01.109 align:start position:0%
around so let's work with a concrete
example<01:31:00.119><c> this</c><01:31:00.199><c> is</c><01:31:00.360><c> how</c><01:31:00.480><c> we</c><01:31:00.600><c> can</c><01:31:00.760><c> import</c>

01:31:01.109 --> 01:31:01.119 align:start position:0%
example this is how we can import
 

01:31:01.119 --> 01:31:03.590 align:start position:0%
example this is how we can import
sentence<01:31:01.760><c> piece</c><01:31:02.760><c> and</c><01:31:02.840><c> then</c><01:31:03.080><c> here</c><01:31:03.239><c> we're</c><01:31:03.440><c> going</c>

01:31:03.590 --> 01:31:03.600 align:start position:0%
sentence piece and then here we're going
 

01:31:03.600 --> 01:31:05.189 align:start position:0%
sentence piece and then here we're going
to<01:31:03.840><c> take</c><01:31:04.360><c> I</c><01:31:04.440><c> think</c><01:31:04.560><c> I</c><01:31:04.679><c> took</c><01:31:04.960><c> like</c><01:31:05.080><c> the</c>

01:31:05.189 --> 01:31:05.199 align:start position:0%
to take I think I took like the
 

01:31:05.199 --> 01:31:06.750 align:start position:0%
to take I think I took like the
description<01:31:05.600><c> of</c><01:31:05.760><c> sentence</c><01:31:06.119><c> piece</c><01:31:06.400><c> and</c><01:31:06.480><c> I</c><01:31:06.600><c> just</c>

01:31:06.750 --> 01:31:06.760 align:start position:0%
description of sentence piece and I just
 

01:31:06.760 --> 01:31:08.669 align:start position:0%
description of sentence piece and I just
created<01:31:07.119><c> like</c><01:31:07.239><c> a</c><01:31:07.320><c> little</c><01:31:07.560><c> toy</c><01:31:07.880><c> data</c><01:31:08.159><c> set</c><01:31:08.560><c> it</c>

01:31:08.669 --> 01:31:08.679 align:start position:0%
created like a little toy data set it
 

01:31:08.679 --> 01:31:10.390 align:start position:0%
created like a little toy data set it
really<01:31:08.880><c> likes</c><01:31:09.080><c> to</c><01:31:09.199><c> have</c><01:31:09.280><c> a</c><01:31:09.480><c> file</c><01:31:09.840><c> so</c><01:31:10.040><c> I</c><01:31:10.159><c> created</c>

01:31:10.390 --> 01:31:10.400 align:start position:0%
really likes to have a file so I created
 

01:31:10.400 --> 01:31:13.070 align:start position:0%
really likes to have a file so I created
a<01:31:10.520><c> toy.</c><01:31:10.880><c> txt</c><01:31:11.320><c> file</c><01:31:12.000><c> with</c><01:31:12.159><c> this</c>

01:31:13.070 --> 01:31:13.080 align:start position:0%
a toy. txt file with this
 

01:31:13.080 --> 01:31:15.510 align:start position:0%
a toy. txt file with this
content<01:31:14.080><c> now</c><01:31:14.679><c> what's</c><01:31:14.880><c> kind</c><01:31:15.000><c> of</c><01:31:15.199><c> a</c><01:31:15.239><c> little</c><01:31:15.360><c> bit</c>

01:31:15.510 --> 01:31:15.520 align:start position:0%
content now what's kind of a little bit
 

01:31:15.520 --> 01:31:16.750 align:start position:0%
content now what's kind of a little bit
crazy<01:31:15.840><c> about</c><01:31:15.960><c> sentence</c><01:31:16.280><c> piece</c><01:31:16.520><c> is</c><01:31:16.639><c> that</c>

01:31:16.750 --> 01:31:16.760 align:start position:0%
crazy about sentence piece is that
 

01:31:16.760 --> 01:31:18.669 align:start position:0%
crazy about sentence piece is that
there's<01:31:16.960><c> a</c><01:31:17.119><c> ton</c><01:31:17.320><c> of</c><01:31:17.840><c> options</c><01:31:18.119><c> and</c>

01:31:18.669 --> 01:31:18.679 align:start position:0%
there's a ton of options and
 

01:31:18.679 --> 01:31:20.790 align:start position:0%
there's a ton of options and
configurations<01:31:19.679><c> and</c><01:31:19.800><c> the</c><01:31:19.920><c> reason</c><01:31:20.199><c> this</c><01:31:20.320><c> is</c><01:31:20.480><c> so</c>

01:31:20.790 --> 01:31:20.800 align:start position:0%
configurations and the reason this is so
 

01:31:20.800 --> 01:31:22.189 align:start position:0%
configurations and the reason this is so
is<01:31:21.040><c> because</c><01:31:21.280><c> sentence</c><01:31:21.600><c> piece</c><01:31:21.920><c> has</c><01:31:22.040><c> been</c>

01:31:22.189 --> 01:31:22.199 align:start position:0%
is because sentence piece has been
 

01:31:22.199 --> 01:31:23.830 align:start position:0%
is because sentence piece has been
around<01:31:22.440><c> I</c><01:31:22.520><c> think</c><01:31:22.679><c> for</c><01:31:22.800><c> a</c><01:31:22.960><c> while</c><01:31:23.440><c> and</c><01:31:23.560><c> it</c><01:31:23.679><c> really</c>

01:31:23.830 --> 01:31:23.840 align:start position:0%
around I think for a while and it really
 

01:31:23.840 --> 01:31:25.750 align:start position:0%
around I think for a while and it really
tries<01:31:24.040><c> to</c><01:31:24.199><c> handle</c><01:31:24.480><c> a</c><01:31:24.600><c> large</c><01:31:24.880><c> diversity</c><01:31:25.320><c> of</c>

01:31:25.750 --> 01:31:25.760 align:start position:0%
tries to handle a large diversity of
 

01:31:25.760 --> 01:31:28.430 align:start position:0%
tries to handle a large diversity of
things<01:31:26.760><c> and</c><01:31:27.239><c> um</c><01:31:27.360><c> because</c><01:31:27.560><c> it's</c><01:31:27.760><c> been</c><01:31:27.960><c> around</c><01:31:28.360><c> I</c>

01:31:28.430 --> 01:31:28.440 align:start position:0%
things and um because it's been around I
 

01:31:28.440 --> 01:31:30.510 align:start position:0%
things and um because it's been around I
think<01:31:28.600><c> it</c><01:31:28.760><c> has</c><01:31:29.239><c> quite</c><01:31:29.400><c> a</c><01:31:29.480><c> bit</c><01:31:29.600><c> of</c><01:31:29.920><c> accumulated</c>

01:31:30.510 --> 01:31:30.520 align:start position:0%
think it has quite a bit of accumulated
 

01:31:30.520 --> 01:31:33.669 align:start position:0%
think it has quite a bit of accumulated
historical<01:31:31.000><c> baggage</c><01:31:31.679><c> uh</c><01:31:31.800><c> as</c><01:31:32.080><c> well</c><01:31:33.080><c> and</c><01:31:33.199><c> so</c><01:31:33.520><c> in</c>

01:31:33.669 --> 01:31:33.679 align:start position:0%
historical baggage uh as well and so in
 

01:31:33.679 --> 01:31:35.550 align:start position:0%
historical baggage uh as well and so in
particular<01:31:34.119><c> there's</c><01:31:34.400><c> like</c><01:31:34.880><c> a</c><01:31:35.000><c> ton</c><01:31:35.199><c> of</c>

01:31:35.550 --> 01:31:35.560 align:start position:0%
particular there's like a ton of
 

01:31:35.560 --> 01:31:36.950 align:start position:0%
particular there's like a ton of
configuration<01:31:36.040><c> arguments</c><01:31:36.440><c> this</c><01:31:36.520><c> is</c><01:31:36.639><c> not</c><01:31:36.760><c> even</c>

01:31:36.950 --> 01:31:36.960 align:start position:0%
configuration arguments this is not even
 

01:31:36.960 --> 01:31:39.790 align:start position:0%
configuration arguments this is not even
all<01:31:37.119><c> of</c><01:31:37.239><c> it</c><01:31:38.239><c> you</c><01:31:38.360><c> can</c><01:31:38.600><c> go</c><01:31:38.800><c> to</c><01:31:39.119><c> here</c><01:31:39.320><c> to</c><01:31:39.480><c> see</c><01:31:39.679><c> all</c>

01:31:39.790 --> 01:31:39.800 align:start position:0%
all of it you can go to here to see all
 

01:31:39.800 --> 01:31:40.950 align:start position:0%
all of it you can go to here to see all
the<01:31:39.920><c> training</c>

01:31:40.950 --> 01:31:40.960 align:start position:0%
the training
 

01:31:40.960 --> 01:31:44.390 align:start position:0%
the training
options<01:31:41.960><c> um</c><01:31:42.639><c> and</c><01:31:43.119><c> uh</c><01:31:43.360><c> there's</c><01:31:43.639><c> also</c><01:31:44.239><c> quite</c>

01:31:44.390 --> 01:31:44.400 align:start position:0%
options um and uh there's also quite
 

01:31:44.400 --> 01:31:45.709 align:start position:0%
options um and uh there's also quite
useful<01:31:44.800><c> documentation</c><01:31:45.280><c> when</c><01:31:45.400><c> you</c><01:31:45.480><c> look</c><01:31:45.600><c> at</c>

01:31:45.709 --> 01:31:45.719 align:start position:0%
useful documentation when you look at
 

01:31:45.719 --> 01:31:48.590 align:start position:0%
useful documentation when you look at
the<01:31:45.880><c> raw</c><01:31:46.119><c> Proto</c><01:31:46.480><c> buff</c><01:31:47.320><c> uh</c><01:31:47.480><c> that</c><01:31:47.560><c> is</c><01:31:47.880><c> used</c><01:31:48.280><c> to</c>

01:31:48.590 --> 01:31:48.600 align:start position:0%
the raw Proto buff uh that is used to
 

01:31:48.600 --> 01:31:52.430 align:start position:0%
the raw Proto buff uh that is used to
represent<01:31:48.920><c> the</c><01:31:49.040><c> trainer</c><01:31:49.440><c> spec</c><01:31:50.000><c> and</c><01:31:50.159><c> so</c><01:31:50.600><c> on</c><01:31:51.600><c> um</c>

01:31:52.430 --> 01:31:52.440 align:start position:0%
represent the trainer spec and so on um
 

01:31:52.440 --> 01:31:54.510 align:start position:0%
represent the trainer spec and so on um
many<01:31:52.639><c> of</c><01:31:52.840><c> these</c><01:31:53.239><c> options</c><01:31:53.600><c> are</c><01:31:53.840><c> irrelevant</c><01:31:54.360><c> to</c>

01:31:54.510 --> 01:31:54.520 align:start position:0%
many of these options are irrelevant to
 

01:31:54.520 --> 01:31:56.950 align:start position:0%
many of these options are irrelevant to
us<01:31:54.760><c> so</c><01:31:55.000><c> maybe</c><01:31:55.199><c> to</c><01:31:55.360><c> point</c><01:31:55.520><c> out</c><01:31:55.719><c> one</c><01:31:55.880><c> example</c><01:31:56.679><c> Das</c>

01:31:56.950 --> 01:31:56.960 align:start position:0%
us so maybe to point out one example Das
 

01:31:56.960 --> 01:31:59.830 align:start position:0%
us so maybe to point out one example Das
Das<01:31:57.119><c> shrinking</c><01:31:57.600><c> Factor</c><01:31:58.600><c> uh</c><01:31:58.800><c> this</c><01:31:59.360><c> shrinking</c>

01:31:59.830 --> 01:31:59.840 align:start position:0%
Das shrinking Factor uh this shrinking
 

01:31:59.840 --> 01:32:01.270 align:start position:0%
Das shrinking Factor uh this shrinking
factor<01:32:00.080><c> is</c><01:32:00.239><c> not</c><01:32:00.400><c> used</c><01:32:00.639><c> in</c><01:32:00.760><c> the</c><01:32:00.880><c> B</c><01:32:01.040><c> pair</c><01:32:01.199><c> en</c>

01:32:01.270 --> 01:32:01.280 align:start position:0%
factor is not used in the B pair en
 

01:32:01.280 --> 01:32:03.149 align:start position:0%
factor is not used in the B pair en
coding<01:32:01.520><c> algorithm</c><01:32:02.199><c> so</c><01:32:02.440><c> this</c><01:32:02.560><c> is</c><01:32:02.760><c> just</c><01:32:03.000><c> an</c>

01:32:03.149 --> 01:32:03.159 align:start position:0%
coding algorithm so this is just an
 

01:32:03.159 --> 01:32:05.910 align:start position:0%
coding algorithm so this is just an
argument<01:32:03.639><c> that</c><01:32:03.880><c> is</c><01:32:04.199><c> irrelevant</c><01:32:04.679><c> to</c><01:32:04.840><c> us</c><01:32:05.400><c> um</c><01:32:05.800><c> it</c>

01:32:05.910 --> 01:32:05.920 align:start position:0%
argument that is irrelevant to us um it
 

01:32:05.920 --> 01:32:09.510 align:start position:0%
argument that is irrelevant to us um it
applies<01:32:06.239><c> to</c><01:32:06.360><c> a</c><01:32:06.480><c> different</c><01:32:06.719><c> training</c>

01:32:09.510 --> 01:32:09.520 align:start position:0%
 
 

01:32:09.520 --> 01:32:11.910 align:start position:0%
 
algorithm<01:32:10.520><c> now</c><01:32:10.800><c> what</c><01:32:10.920><c> I</c><01:32:11.000><c> tried</c><01:32:11.239><c> to</c><01:32:11.320><c> do</c><01:32:11.560><c> here</c><01:32:11.760><c> is</c>

01:32:11.910 --> 01:32:11.920 align:start position:0%
algorithm now what I tried to do here is
 

01:32:11.920 --> 01:32:13.870 align:start position:0%
algorithm now what I tried to do here is
I<01:32:12.040><c> tried</c><01:32:12.320><c> to</c><01:32:12.600><c> set</c><01:32:12.800><c> up</c><01:32:13.000><c> sentence</c><01:32:13.360><c> piece</c><01:32:13.639><c> in</c><01:32:13.719><c> a</c>

01:32:13.870 --> 01:32:13.880 align:start position:0%
I tried to set up sentence piece in a
 

01:32:13.880 --> 01:32:15.709 align:start position:0%
I tried to set up sentence piece in a
way<01:32:14.360><c> that</c><01:32:14.440><c> is</c><01:32:14.639><c> very</c><01:32:14.840><c> very</c><01:32:15.000><c> similar</c><01:32:15.360><c> as</c><01:32:15.480><c> far</c><01:32:15.600><c> as</c>

01:32:15.709 --> 01:32:15.719 align:start position:0%
way that is very very similar as far as
 

01:32:15.719 --> 01:32:18.870 align:start position:0%
way that is very very similar as far as
I<01:32:15.840><c> can</c><01:32:16.000><c> tell</c><01:32:16.679><c> to</c><01:32:17.280><c> maybe</c><01:32:17.600><c> identical</c><01:32:18.119><c> hopefully</c>

01:32:18.870 --> 01:32:18.880 align:start position:0%
I can tell to maybe identical hopefully
 

01:32:18.880 --> 01:32:22.070 align:start position:0%
I can tell to maybe identical hopefully
to<01:32:19.159><c> the</c><01:32:19.320><c> way</c><01:32:19.520><c> that</c><01:32:19.679><c> llama</c><01:32:20.080><c> 2</c><01:32:20.600><c> was</c><01:32:20.760><c> strained</c><01:32:21.760><c> so</c>

01:32:22.070 --> 01:32:22.080 align:start position:0%
to the way that llama 2 was strained so
 

01:32:22.080 --> 01:32:25.030 align:start position:0%
to the way that llama 2 was strained so
the<01:32:22.199><c> way</c><01:32:22.360><c> they</c><01:32:22.520><c> trained</c><01:32:23.000><c> their</c><01:32:23.159><c> own</c><01:32:23.920><c> um</c><01:32:24.920><c> their</c>

01:32:25.030 --> 01:32:25.040 align:start position:0%
the way they trained their own um their
 

01:32:25.040 --> 01:32:27.109 align:start position:0%
the way they trained their own um their
own<01:32:25.239><c> tokenizer</c><01:32:26.199><c> and</c><01:32:26.280><c> the</c><01:32:26.400><c> way</c><01:32:26.560><c> I</c><01:32:26.679><c> did</c><01:32:26.840><c> this</c><01:32:27.000><c> was</c>

01:32:27.109 --> 01:32:27.119 align:start position:0%
own tokenizer and the way I did this was
 

01:32:27.119 --> 01:32:28.709 align:start position:0%
own tokenizer and the way I did this was
basically<01:32:27.400><c> you</c><01:32:27.480><c> can</c><01:32:27.639><c> take</c><01:32:27.800><c> the</c><01:32:27.960><c> tokenizer</c>

01:32:28.709 --> 01:32:28.719 align:start position:0%
basically you can take the tokenizer
 

01:32:28.719 --> 01:32:31.390 align:start position:0%
basically you can take the tokenizer
model<01:32:29.080><c> file</c><01:32:29.520><c> that</c><01:32:29.880><c> meta</c><01:32:30.239><c> released</c><01:32:31.119><c> and</c><01:32:31.239><c> you</c>

01:32:31.390 --> 01:32:31.400 align:start position:0%
model file that meta released and you
 

01:32:31.400 --> 01:32:35.189 align:start position:0%
model file that meta released and you
can<01:32:31.920><c> um</c><01:32:32.440><c> open</c><01:32:32.719><c> it</c><01:32:33.280><c> using</c><01:32:33.560><c> the</c><01:32:33.800><c> Proto</c><01:32:34.320><c> protuff</c>

01:32:35.189 --> 01:32:35.199 align:start position:0%
can um open it using the Proto protuff
 

01:32:35.199 --> 01:32:38.350 align:start position:0%
can um open it using the Proto protuff
uh<01:32:35.320><c> sort</c><01:32:35.560><c> of</c><01:32:36.560><c> file</c><01:32:37.000><c> that</c><01:32:37.119><c> you</c><01:32:37.199><c> can</c><01:32:37.360><c> generate</c>

01:32:38.350 --> 01:32:38.360 align:start position:0%
uh sort of file that you can generate
 

01:32:38.360 --> 01:32:39.709 align:start position:0%
uh sort of file that you can generate
and<01:32:38.480><c> then</c><01:32:38.600><c> you</c><01:32:38.719><c> can</c><01:32:38.880><c> inspect</c><01:32:39.199><c> all</c><01:32:39.320><c> the</c><01:32:39.440><c> options</c>

01:32:39.709 --> 01:32:39.719 align:start position:0%
and then you can inspect all the options
 

01:32:39.719 --> 01:32:41.350 align:start position:0%
and then you can inspect all the options
and<01:32:39.840><c> I</c><01:32:39.960><c> tried</c><01:32:40.159><c> to</c><01:32:40.360><c> copy</c><01:32:40.600><c> over</c><01:32:40.840><c> all</c><01:32:40.960><c> the</c><01:32:41.080><c> options</c>

01:32:41.350 --> 01:32:41.360 align:start position:0%
and I tried to copy over all the options
 

01:32:41.360 --> 01:32:43.669 align:start position:0%
and I tried to copy over all the options
that<01:32:41.480><c> looked</c><01:32:41.880><c> relevant</c><01:32:42.880><c> so</c><01:32:43.159><c> here</c><01:32:43.280><c> we</c><01:32:43.400><c> set</c><01:32:43.520><c> up</c>

01:32:43.669 --> 01:32:43.679 align:start position:0%
that looked relevant so here we set up
 

01:32:43.679 --> 01:32:46.590 align:start position:0%
that looked relevant so here we set up
the<01:32:43.760><c> input</c><01:32:44.520><c> it's</c><01:32:44.840><c> raw</c><01:32:45.199><c> text</c><01:32:45.480><c> in</c><01:32:45.679><c> this</c><01:32:45.880><c> file</c>

01:32:46.590 --> 01:32:46.600 align:start position:0%
the input it's raw text in this file
 

01:32:46.600 --> 01:32:48.070 align:start position:0%
the input it's raw text in this file
here's<01:32:46.840><c> going</c><01:32:46.920><c> to</c><01:32:47.040><c> be</c><01:32:47.159><c> the</c><01:32:47.280><c> output</c><01:32:47.800><c> so</c><01:32:47.960><c> it's</c>

01:32:48.070 --> 01:32:48.080 align:start position:0%
here's going to be the output so it's
 

01:32:48.080 --> 01:32:50.750 align:start position:0%
here's going to be the output so it's
going<01:32:48.159><c> to</c><01:32:48.239><c> be</c><01:32:48.400><c> for</c><01:32:48.760><c> talk</c><01:32:49.119><c> 400.</c><01:32:50.119><c> model</c><01:32:50.360><c> and</c>

01:32:50.750 --> 01:32:50.760 align:start position:0%
going to be for talk 400. model and
 

01:32:50.760 --> 01:32:52.430 align:start position:0%
going to be for talk 400. model and
vocab

01:32:52.430 --> 01:32:52.440 align:start position:0%
vocab
 

01:32:52.440 --> 01:32:53.390 align:start position:0%
vocab
we're<01:32:52.600><c> saying</c><01:32:52.800><c> that</c><01:32:52.920><c> we're</c><01:32:53.040><c> going</c><01:32:53.119><c> to</c><01:32:53.199><c> use</c><01:32:53.320><c> the</c>

01:32:53.390 --> 01:32:53.400 align:start position:0%
we're saying that we're going to use the
 

01:32:53.400 --> 01:32:56.030 align:start position:0%
we're saying that we're going to use the
BP<01:32:53.679><c> algorithm</c><01:32:54.119><c> and</c><01:32:54.199><c> we</c><01:32:54.320><c> want</c><01:32:54.440><c> to</c><01:32:54.560><c> Bap</c><01:32:54.920><c> size</c><01:32:55.080><c> of</c>

01:32:56.030 --> 01:32:56.040 align:start position:0%
BP algorithm and we want to Bap size of
 

01:32:56.040 --> 01:32:58.590 align:start position:0%
BP algorithm and we want to Bap size of
400<01:32:57.040><c> then</c><01:32:57.159><c> there's</c><01:32:57.320><c> a</c><01:32:57.480><c> ton</c><01:32:57.639><c> of</c><01:32:57.960><c> configurations</c>

01:32:58.590 --> 01:32:58.600 align:start position:0%
400 then there's a ton of configurations
 

01:32:58.600 --> 01:33:01.070 align:start position:0%
400 then there's a ton of configurations
here

01:33:01.070 --> 01:33:01.080 align:start position:0%
 
 

01:33:01.080 --> 01:33:05.070 align:start position:0%
 
for<01:33:02.320><c> um</c><01:33:03.320><c> for</c><01:33:03.679><c> basically</c><01:33:04.159><c> pre-processing</c><01:33:04.920><c> and</c>

01:33:05.070 --> 01:33:05.080 align:start position:0%
for um for basically pre-processing and
 

01:33:05.080 --> 01:33:07.070 align:start position:0%
for um for basically pre-processing and
normalization<01:33:05.760><c> rules</c><01:33:06.119><c> as</c><01:33:06.239><c> they're</c><01:33:06.440><c> called</c>

01:33:07.070 --> 01:33:07.080 align:start position:0%
normalization rules as they're called
 

01:33:07.080 --> 01:33:09.470 align:start position:0%
normalization rules as they're called
normalization<01:33:07.800><c> used</c><01:33:08.000><c> to</c><01:33:08.159><c> be</c><01:33:08.400><c> very</c><01:33:08.719><c> prevalent</c>

01:33:09.470 --> 01:33:09.480 align:start position:0%
normalization used to be very prevalent
 

01:33:09.480 --> 01:33:11.149 align:start position:0%
normalization used to be very prevalent
I<01:33:09.560><c> would</c><01:33:09.679><c> say</c><01:33:09.840><c> before</c><01:33:10.119><c> llms</c><01:33:10.679><c> in</c><01:33:10.840><c> natural</c>

01:33:11.149 --> 01:33:11.159 align:start position:0%
I would say before llms in natural
 

01:33:11.159 --> 01:33:12.790 align:start position:0%
I would say before llms in natural
language<01:33:11.480><c> processing</c><01:33:12.199><c> so</c><01:33:12.360><c> in</c><01:33:12.480><c> machine</c>

01:33:12.790 --> 01:33:12.800 align:start position:0%
language processing so in machine
 

01:33:12.800 --> 01:33:14.870 align:start position:0%
language processing so in machine
translation<01:33:13.440><c> and</c><01:33:13.880><c> uh</c><01:33:14.040><c> text</c><01:33:14.320><c> classification</c>

01:33:14.870 --> 01:33:14.880 align:start position:0%
translation and uh text classification
 

01:33:14.880 --> 01:33:16.709 align:start position:0%
translation and uh text classification
and<01:33:15.000><c> so</c><01:33:15.159><c> on</c><01:33:15.679><c> you</c><01:33:15.760><c> want</c><01:33:15.880><c> to</c><01:33:16.040><c> normalize</c><01:33:16.520><c> and</c>

01:33:16.709 --> 01:33:16.719 align:start position:0%
and so on you want to normalize and
 

01:33:16.719 --> 01:33:17.990 align:start position:0%
and so on you want to normalize and
simplify<01:33:17.159><c> the</c><01:33:17.280><c> text</c><01:33:17.480><c> and</c><01:33:17.560><c> you</c><01:33:17.639><c> want</c><01:33:17.719><c> to</c><01:33:17.840><c> turn</c>

01:33:17.990 --> 01:33:18.000 align:start position:0%
simplify the text and you want to turn
 

01:33:18.000 --> 01:33:19.510 align:start position:0%
simplify the text and you want to turn
it<01:33:18.119><c> all</c><01:33:18.280><c> lowercase</c><01:33:18.800><c> and</c><01:33:18.880><c> you</c><01:33:18.960><c> want</c><01:33:19.040><c> to</c><01:33:19.159><c> remove</c>

01:33:19.510 --> 01:33:19.520 align:start position:0%
it all lowercase and you want to remove
 

01:33:19.520 --> 01:33:22.189 align:start position:0%
it all lowercase and you want to remove
all<01:33:19.760><c> double</c><01:33:20.520><c> whites</c><01:33:20.800><c> space</c><01:33:21.080><c> Etc</c>

01:33:22.189 --> 01:33:22.199 align:start position:0%
all double whites space Etc
 

01:33:22.199 --> 01:33:23.750 align:start position:0%
all double whites space Etc
and<01:33:22.360><c> in</c><01:33:22.520><c> language</c><01:33:22.800><c> models</c><01:33:23.080><c> we</c><01:33:23.239><c> prefer</c><01:33:23.520><c> not</c><01:33:23.639><c> to</c>

01:33:23.750 --> 01:33:23.760 align:start position:0%
and in language models we prefer not to
 

01:33:23.760 --> 01:33:25.270 align:start position:0%
and in language models we prefer not to
do<01:33:23.960><c> any</c><01:33:24.119><c> of</c><01:33:24.239><c> it</c><01:33:24.520><c> or</c><01:33:24.639><c> at</c><01:33:24.719><c> least</c><01:33:24.920><c> that</c><01:33:25.000><c> is</c><01:33:25.119><c> my</c>

01:33:25.270 --> 01:33:25.280 align:start position:0%
do any of it or at least that is my
 

01:33:25.280 --> 01:33:26.950 align:start position:0%
do any of it or at least that is my
preference<01:33:25.639><c> as</c><01:33:25.719><c> a</c><01:33:25.840><c> deep</c><01:33:26.000><c> learning</c><01:33:26.320><c> person</c><01:33:26.840><c> you</c>

01:33:26.950 --> 01:33:26.960 align:start position:0%
preference as a deep learning person you
 

01:33:26.960 --> 01:33:28.830 align:start position:0%
preference as a deep learning person you
want<01:33:27.080><c> to</c><01:33:27.320><c> not</c><01:33:27.520><c> touch</c><01:33:27.760><c> your</c><01:33:28.000><c> data</c><01:33:28.320><c> you</c><01:33:28.400><c> want</c><01:33:28.560><c> to</c>

01:33:28.830 --> 01:33:28.840 align:start position:0%
want to not touch your data you want to
 

01:33:28.840 --> 01:33:31.669 align:start position:0%
want to not touch your data you want to
keep<01:33:29.119><c> the</c><01:33:29.280><c> raw</c><01:33:29.639><c> data</c><01:33:29.960><c> as</c><01:33:30.080><c> much</c><01:33:30.239><c> as</c><01:33:30.520><c> possible</c><01:33:31.520><c> um</c>

01:33:31.669 --> 01:33:31.679 align:start position:0%
keep the raw data as much as possible um
 

01:33:31.679 --> 01:33:33.109 align:start position:0%
keep the raw data as much as possible um
in<01:33:31.800><c> a</c><01:33:32.000><c> raw</c>

01:33:33.109 --> 01:33:33.119 align:start position:0%
in a raw
 

01:33:33.119 --> 01:33:35.149 align:start position:0%
in a raw
form<01:33:34.119><c> so</c><01:33:34.239><c> you're</c><01:33:34.400><c> basically</c><01:33:34.679><c> trying</c><01:33:34.840><c> to</c><01:33:34.960><c> turn</c>

01:33:35.149 --> 01:33:35.159 align:start position:0%
form so you're basically trying to turn
 

01:33:35.159 --> 01:33:37.990 align:start position:0%
form so you're basically trying to turn
off<01:33:35.360><c> a</c><01:33:35.440><c> lot</c><01:33:35.600><c> of</c><01:33:35.760><c> this</c><01:33:36.280><c> if</c><01:33:36.360><c> you</c><01:33:36.719><c> can</c><01:33:37.719><c> the</c><01:33:37.840><c> other</c>

01:33:37.990 --> 01:33:38.000 align:start position:0%
off a lot of this if you can the other
 

01:33:38.000 --> 01:33:39.510 align:start position:0%
off a lot of this if you can the other
thing<01:33:38.119><c> that</c><01:33:38.239><c> sentence</c><01:33:38.520><c> piece</c><01:33:38.840><c> does</c><01:33:39.199><c> is</c><01:33:39.360><c> that</c>

01:33:39.510 --> 01:33:39.520 align:start position:0%
thing that sentence piece does is that
 

01:33:39.520 --> 01:33:43.030 align:start position:0%
thing that sentence piece does is that
it<01:33:39.639><c> has</c><01:33:39.800><c> this</c><01:33:40.000><c> concept</c><01:33:40.360><c> of</c><01:33:40.719><c> sentences</c><01:33:42.040><c> so</c>

01:33:43.030 --> 01:33:43.040 align:start position:0%
it has this concept of sentences so
 

01:33:43.040 --> 01:33:45.470 align:start position:0%
it has this concept of sentences so
sentence<01:33:43.480><c> piece</c><01:33:44.280><c> it's</c><01:33:44.560><c> back</c><01:33:45.119><c> it's</c><01:33:45.280><c> kind</c><01:33:45.360><c> of</c>

01:33:45.470 --> 01:33:45.480 align:start position:0%
sentence piece it's back it's kind of
 

01:33:45.480 --> 01:33:46.830 align:start position:0%
sentence piece it's back it's kind of
like<01:33:45.600><c> was</c><01:33:45.760><c> developed</c><01:33:46.119><c> I</c><01:33:46.199><c> think</c><01:33:46.320><c> early</c><01:33:46.600><c> in</c><01:33:46.679><c> the</c>

01:33:46.830 --> 01:33:46.840 align:start position:0%
like was developed I think early in the
 

01:33:46.840 --> 01:33:50.149 align:start position:0%
like was developed I think early in the
days<01:33:47.159><c> where</c><01:33:47.679><c> there</c><01:33:47.920><c> was</c><01:33:48.560><c> um</c><01:33:49.480><c> an</c><01:33:49.679><c> idea</c><01:33:50.000><c> that</c>

01:33:50.149 --> 01:33:50.159 align:start position:0%
days where there was um an idea that
 

01:33:50.159 --> 01:33:51.950 align:start position:0%
days where there was um an idea that
they<01:33:50.320><c> you're</c><01:33:50.560><c> training</c><01:33:51.000><c> a</c><01:33:51.159><c> tokenizer</c><01:33:51.760><c> on</c><01:33:51.840><c> a</c>

01:33:51.950 --> 01:33:51.960 align:start position:0%
they you're training a tokenizer on a
 

01:33:51.960 --> 01:33:54.189 align:start position:0%
they you're training a tokenizer on a
bunch<01:33:52.159><c> of</c><01:33:52.360><c> independent</c><01:33:52.840><c> sentences</c><01:33:53.719><c> so</c><01:33:53.880><c> it</c><01:33:54.040><c> has</c>

01:33:54.189 --> 01:33:54.199 align:start position:0%
bunch of independent sentences so it has
 

01:33:54.199 --> 01:33:56.350 align:start position:0%
bunch of independent sentences so it has
a<01:33:54.320><c> lot</c><01:33:54.440><c> of</c><01:33:54.679><c> like</c><01:33:55.440><c> how</c><01:33:55.560><c> many</c><01:33:55.800><c> sentences</c><01:33:56.239><c> you're</c>

01:33:56.350 --> 01:33:56.360 align:start position:0%
a lot of like how many sentences you're
 

01:33:56.360 --> 01:33:57.990 align:start position:0%
a lot of like how many sentences you're
going<01:33:56.480><c> to</c><01:33:56.600><c> train</c><01:33:56.840><c> on</c><01:33:57.280><c> what</c><01:33:57.360><c> is</c><01:33:57.480><c> the</c><01:33:57.600><c> maximum</c>

01:33:57.990 --> 01:33:58.000 align:start position:0%
going to train on what is the maximum
 

01:33:58.000 --> 01:34:00.669 align:start position:0%
going to train on what is the maximum
sentence<01:33:58.480><c> length</c>

01:34:00.669 --> 01:34:00.679 align:start position:0%
sentence length
 

01:34:00.679 --> 01:34:03.709 align:start position:0%
sentence length
um<01:34:01.679><c> shuffling</c><01:34:02.280><c> sentences</c><01:34:03.000><c> and</c><01:34:03.119><c> so</c><01:34:03.280><c> for</c><01:34:03.440><c> it</c>

01:34:03.709 --> 01:34:03.719 align:start position:0%
um shuffling sentences and so for it
 

01:34:03.719 --> 01:34:04.790 align:start position:0%
um shuffling sentences and so for it
sentences<01:34:04.159><c> are</c><01:34:04.320><c> kind</c><01:34:04.440><c> of</c><01:34:04.560><c> like</c><01:34:04.679><c> the</c>

01:34:04.790 --> 01:34:04.800 align:start position:0%
sentences are kind of like the
 

01:34:04.800 --> 01:34:06.870 align:start position:0%
sentences are kind of like the
individual<01:34:05.199><c> training</c><01:34:05.560><c> examples</c><01:34:06.480><c> but</c><01:34:06.679><c> again</c>

01:34:06.870 --> 01:34:06.880 align:start position:0%
individual training examples but again
 

01:34:06.880 --> 01:34:08.709 align:start position:0%
individual training examples but again
in<01:34:06.960><c> the</c><01:34:07.040><c> context</c><01:34:07.360><c> of</c><01:34:07.520><c> llms</c><01:34:08.119><c> I</c><01:34:08.239><c> find</c><01:34:08.440><c> that</c><01:34:08.600><c> this</c>

01:34:08.709 --> 01:34:08.719 align:start position:0%
in the context of llms I find that this
 

01:34:08.719 --> 01:34:10.430 align:start position:0%
in the context of llms I find that this
is<01:34:08.880><c> like</c><01:34:09.000><c> a</c><01:34:09.119><c> very</c><01:34:09.320><c> spous</c><01:34:09.920><c> and</c><01:34:10.119><c> weird</c>

01:34:10.430 --> 01:34:10.440 align:start position:0%
is like a very spous and weird
 

01:34:10.440 --> 01:34:13.910 align:start position:0%
is like a very spous and weird
distinction<01:34:11.360><c> like</c><01:34:11.840><c> sentences</c><01:34:12.600><c> are</c><01:34:13.600><c> just</c><01:34:13.800><c> like</c>

01:34:13.910 --> 01:34:13.920 align:start position:0%
distinction like sentences are just like
 

01:34:13.920 --> 01:34:15.590 align:start position:0%
distinction like sentences are just like
don't<01:34:14.119><c> touch</c><01:34:14.360><c> the</c><01:34:14.520><c> raw</c><01:34:14.760><c> data</c><01:34:15.040><c> sentences</c>

01:34:15.590 --> 01:34:15.600 align:start position:0%
don't touch the raw data sentences
 

01:34:15.600 --> 01:34:18.669 align:start position:0%
don't touch the raw data sentences
happen<01:34:15.880><c> to</c><01:34:16.080><c> exist</c><01:34:16.840><c> but</c><01:34:17.000><c> in</c><01:34:17.239><c> raw</c><01:34:17.480><c> data</c><01:34:17.760><c> sets</c>

01:34:18.669 --> 01:34:18.679 align:start position:0%
happen to exist but in raw data sets
 

01:34:18.679 --> 01:34:20.590 align:start position:0%
happen to exist but in raw data sets
there<01:34:18.800><c> are</c><01:34:18.960><c> a</c><01:34:19.080><c> lot</c><01:34:19.199><c> of</c><01:34:19.360><c> like</c><01:34:19.520><c> inet</c><01:34:20.159><c> like</c><01:34:20.360><c> what</c>

01:34:20.590 --> 01:34:20.600 align:start position:0%
there are a lot of like inet like what
 

01:34:20.600 --> 01:34:22.430 align:start position:0%
there are a lot of like inet like what
exactly<01:34:20.960><c> is</c><01:34:21.040><c> a</c><01:34:21.159><c> sentence</c><01:34:21.840><c> what</c><01:34:22.000><c> isn't</c><01:34:22.280><c> a</c>

01:34:22.430 --> 01:34:22.440 align:start position:0%
exactly is a sentence what isn't a
 

01:34:22.440 --> 01:34:24.990 align:start position:0%
exactly is a sentence what isn't a
sentence<01:34:23.199><c> um</c><01:34:24.159><c> and</c><01:34:24.280><c> so</c><01:34:24.480><c> I</c><01:34:24.560><c> think</c><01:34:24.760><c> like</c><01:34:24.880><c> it's</c>

01:34:24.990 --> 01:34:25.000 align:start position:0%
sentence um and so I think like it's
 

01:34:25.000 --> 01:34:26.470 align:start position:0%
sentence um and so I think like it's
really<01:34:25.159><c> hard</c><01:34:25.280><c> to</c><01:34:25.480><c> Define</c><01:34:25.840><c> what</c><01:34:25.960><c> an</c><01:34:26.119><c> actual</c>

01:34:26.470 --> 01:34:26.480 align:start position:0%
really hard to Define what an actual
 

01:34:26.480 --> 01:34:28.629 align:start position:0%
really hard to Define what an actual
sentence<01:34:27.080><c> is</c><01:34:27.520><c> if</c><01:34:27.600><c> you</c><01:34:27.800><c> really</c><01:34:28.040><c> like</c><01:34:28.199><c> dig</c><01:34:28.400><c> into</c>

01:34:28.629 --> 01:34:28.639 align:start position:0%
sentence is if you really like dig into
 

01:34:28.639 --> 01:34:30.910 align:start position:0%
sentence is if you really like dig into
it<01:34:29.360><c> and</c><01:34:29.639><c> there</c><01:34:29.800><c> could</c><01:34:29.920><c> be</c><01:34:30.119><c> different</c><01:34:30.600><c> concepts</c>

01:34:30.910 --> 01:34:30.920 align:start position:0%
it and there could be different concepts
 

01:34:30.920 --> 01:34:32.109 align:start position:0%
it and there could be different concepts
of<01:34:31.080><c> it</c><01:34:31.199><c> in</c><01:34:31.320><c> different</c><01:34:31.560><c> languages</c><01:34:32.000><c> or</c>

01:34:32.109 --> 01:34:32.119 align:start position:0%
of it in different languages or
 

01:34:32.119 --> 01:34:33.709 align:start position:0%
of it in different languages or
something<01:34:32.400><c> like</c><01:34:32.560><c> that</c><01:34:32.760><c> so</c><01:34:33.320><c> why</c><01:34:33.480><c> even</c>

01:34:33.709 --> 01:34:33.719 align:start position:0%
something like that so why even
 

01:34:33.719 --> 01:34:35.550 align:start position:0%
something like that so why even
introduce<01:34:34.119><c> the</c><01:34:34.239><c> concept</c><01:34:34.760><c> it</c><01:34:34.960><c> it</c><01:34:35.080><c> doesn't</c>

01:34:35.550 --> 01:34:35.560 align:start position:0%
introduce the concept it it doesn't
 

01:34:35.560 --> 01:34:36.910 align:start position:0%
introduce the concept it it doesn't
honestly<01:34:35.920><c> make</c><01:34:36.080><c> sense</c><01:34:36.239><c> to</c><01:34:36.360><c> me</c><01:34:36.560><c> I</c><01:34:36.600><c> would</c><01:34:36.760><c> just</c>

01:34:36.910 --> 01:34:36.920 align:start position:0%
honestly make sense to me I would just
 

01:34:36.920 --> 01:34:39.189 align:start position:0%
honestly make sense to me I would just
prefer<01:34:37.199><c> to</c><01:34:37.360><c> treat</c><01:34:37.920><c> a</c><01:34:38.080><c> file</c><01:34:38.320><c> as</c><01:34:38.440><c> a</c><01:34:38.600><c> giant</c><01:34:39.080><c> uh</c>

01:34:39.189 --> 01:34:39.199 align:start position:0%
prefer to treat a file as a giant uh
 

01:34:39.199 --> 01:34:40.350 align:start position:0%
prefer to treat a file as a giant uh
stream<01:34:39.520><c> of</c>

01:34:40.350 --> 01:34:40.360 align:start position:0%
stream of
 

01:34:40.360 --> 01:34:42.790 align:start position:0%
stream of
bytes<01:34:41.360><c> it</c><01:34:41.480><c> has</c><01:34:41.600><c> a</c><01:34:41.719><c> lot</c><01:34:41.840><c> of</c><01:34:42.000><c> treatment</c><01:34:42.440><c> around</c>

01:34:42.790 --> 01:34:42.800 align:start position:0%
bytes it has a lot of treatment around
 

01:34:42.800 --> 01:34:45.109 align:start position:0%
bytes it has a lot of treatment around
rare<01:34:43.080><c> word</c><01:34:43.639><c> characters</c><01:34:44.320><c> and</c><01:34:44.440><c> when</c><01:34:44.560><c> I</c><01:34:44.679><c> say</c><01:34:44.880><c> word</c>

01:34:45.109 --> 01:34:45.119 align:start position:0%
rare word characters and when I say word
 

01:34:45.119 --> 01:34:46.470 align:start position:0%
rare word characters and when I say word
I<01:34:45.199><c> mean</c><01:34:45.360><c> code</c><01:34:45.679><c> points</c><01:34:46.000><c> we're</c><01:34:46.119><c> going</c><01:34:46.239><c> to</c><01:34:46.360><c> come</c>

01:34:46.470 --> 01:34:46.480 align:start position:0%
I mean code points we're going to come
 

01:34:46.480 --> 01:34:48.669 align:start position:0%
I mean code points we're going to come
back<01:34:46.600><c> to</c><01:34:46.719><c> this</c><01:34:46.840><c> in</c><01:34:46.960><c> a</c><01:34:47.239><c> second</c><01:34:48.239><c> and</c><01:34:48.320><c> it</c><01:34:48.440><c> has</c><01:34:48.560><c> a</c>

01:34:48.669 --> 01:34:48.679 align:start position:0%
back to this in a second and it has a
 

01:34:48.679 --> 01:34:51.669 align:start position:0%
back to this in a second and it has a
lot<01:34:48.800><c> of</c><01:34:48.960><c> other</c><01:34:49.199><c> rules</c><01:34:49.560><c> for</c><01:34:50.239><c> um</c><01:34:51.159><c> basically</c>

01:34:51.669 --> 01:34:51.679 align:start position:0%
lot of other rules for um basically
 

01:34:51.679 --> 01:34:54.470 align:start position:0%
lot of other rules for um basically
splitting<01:34:52.199><c> digits</c><01:34:53.000><c> splitting</c><01:34:53.840><c> white</c><01:34:54.119><c> space</c>

01:34:54.470 --> 01:34:54.480 align:start position:0%
splitting digits splitting white space
 

01:34:54.480 --> 01:34:56.550 align:start position:0%
splitting digits splitting white space
and<01:34:54.679><c> numbers</c><01:34:55.159><c> and</c><01:34:55.600><c> how</c><01:34:55.679><c> you</c><01:34:55.840><c> deal</c><01:34:56.080><c> with</c><01:34:56.280><c> that</c>

01:34:56.550 --> 01:34:56.560 align:start position:0%
and numbers and how you deal with that
 

01:34:56.560 --> 01:34:58.189 align:start position:0%
and numbers and how you deal with that
so<01:34:57.080><c> these</c><01:34:57.199><c> are</c><01:34:57.440><c> some</c><01:34:57.600><c> kind</c><01:34:57.719><c> of</c><01:34:57.800><c> like</c><01:34:57.920><c> merge</c>

01:34:58.189 --> 01:34:58.199 align:start position:0%
so these are some kind of like merge
 

01:34:58.199 --> 01:35:00.070 align:start position:0%
so these are some kind of like merge
rules<01:34:59.000><c> so</c><01:34:59.159><c> I</c><01:34:59.239><c> think</c><01:34:59.440><c> this</c><01:34:59.520><c> is</c><01:34:59.639><c> a</c><01:34:59.760><c> little</c><01:34:59.920><c> bit</c>

01:35:00.070 --> 01:35:00.080 align:start position:0%
rules so I think this is a little bit
 

01:35:00.080 --> 01:35:02.910 align:start position:0%
rules so I think this is a little bit
equivalent<01:35:00.560><c> to</c><01:35:01.320><c> tick</c><01:35:01.600><c> token</c><01:35:02.040><c> using</c><01:35:02.800><c> the</c>

01:35:02.910 --> 01:35:02.920 align:start position:0%
equivalent to tick token using the
 

01:35:02.920 --> 01:35:04.510 align:start position:0%
equivalent to tick token using the
regular<01:35:03.280><c> expression</c><01:35:03.679><c> to</c><01:35:03.840><c> split</c><01:35:04.159><c> up</c>

01:35:04.510 --> 01:35:04.520 align:start position:0%
regular expression to split up
 

01:35:04.520 --> 01:35:07.030 align:start position:0%
regular expression to split up
categories<01:35:05.520><c> there's</c><01:35:06.239><c> like</c><01:35:06.600><c> kind</c><01:35:06.719><c> of</c>

01:35:07.030 --> 01:35:07.040 align:start position:0%
categories there's like kind of
 

01:35:07.040 --> 01:35:09.229 align:start position:0%
categories there's like kind of
equivalence<01:35:07.520><c> of</c><01:35:07.679><c> it</c><01:35:07.800><c> if</c><01:35:07.880><c> you</c><01:35:08.000><c> squint</c><01:35:08.360><c> T</c><01:35:08.560><c> it</c><01:35:09.000><c> in</c>

01:35:09.229 --> 01:35:09.239 align:start position:0%
equivalence of it if you squint T it in
 

01:35:09.239 --> 01:35:10.629 align:start position:0%
equivalence of it if you squint T it in
sentence<01:35:09.600><c> piece</c><01:35:09.880><c> where</c><01:35:09.960><c> you</c><01:35:10.080><c> can</c><01:35:10.239><c> also</c><01:35:10.480><c> for</c>

01:35:10.629 --> 01:35:10.639 align:start position:0%
sentence piece where you can also for
 

01:35:10.639 --> 01:35:14.189 align:start position:0%
sentence piece where you can also for
example<01:35:10.880><c> split</c><01:35:11.159><c> up</c><01:35:11.440><c> split</c><01:35:11.679><c> up</c><01:35:11.840><c> the</c><01:35:12.360><c> digits</c><01:35:13.360><c> uh</c>

01:35:14.189 --> 01:35:14.199 align:start position:0%
example split up split up the digits uh
 

01:35:14.199 --> 01:35:15.830 align:start position:0%
example split up split up the digits uh
and<01:35:14.719><c> uh</c><01:35:14.880><c> so</c>

01:35:15.830 --> 01:35:15.840 align:start position:0%
and uh so
 

01:35:15.840 --> 01:35:18.189 align:start position:0%
and uh so
on<01:35:16.840><c> there's</c><01:35:17.000><c> a</c><01:35:17.119><c> few</c><01:35:17.280><c> more</c><01:35:17.440><c> things</c><01:35:17.760><c> here</c><01:35:18.040><c> that</c>

01:35:18.189 --> 01:35:18.199 align:start position:0%
on there's a few more things here that
 

01:35:18.199 --> 01:35:19.350 align:start position:0%
on there's a few more things here that
I'll<01:35:18.360><c> come</c><01:35:18.520><c> back</c><01:35:18.600><c> to</c><01:35:18.760><c> in</c><01:35:18.840><c> a</c><01:35:18.960><c> bit</c><01:35:19.159><c> and</c><01:35:19.280><c> then</c>

01:35:19.350 --> 01:35:19.360 align:start position:0%
I'll come back to in a bit and then
 

01:35:19.360 --> 01:35:20.470 align:start position:0%
I'll come back to in a bit and then
there<01:35:19.440><c> are</c><01:35:19.560><c> some</c><01:35:19.760><c> special</c><01:35:20.000><c> tokens</c><01:35:20.320><c> that</c><01:35:20.440><c> you</c>

01:35:20.470 --> 01:35:20.480 align:start position:0%
there are some special tokens that you
 

01:35:20.480 --> 01:35:23.350 align:start position:0%
there are some special tokens that you
can<01:35:20.639><c> indicate</c><01:35:21.679><c> and</c><01:35:21.960><c> it</c><01:35:22.119><c> hardcodes</c><01:35:22.920><c> the</c><01:35:23.040><c> UN</c>

01:35:23.350 --> 01:35:23.360 align:start position:0%
can indicate and it hardcodes the UN
 

01:35:23.360 --> 01:35:25.550 align:start position:0%
can indicate and it hardcodes the UN
token<01:35:24.000><c> the</c><01:35:24.159><c> beginning</c><01:35:24.480><c> of</c><01:35:24.600><c> sentence</c><01:35:25.239><c> end</c><01:35:25.400><c> of</c>

01:35:25.550 --> 01:35:25.560 align:start position:0%
token the beginning of sentence end of
 

01:35:25.560 --> 01:35:29.310 align:start position:0%
token the beginning of sentence end of
sentence<01:35:26.159><c> and</c><01:35:26.280><c> a</c><01:35:26.520><c> pad</c><01:35:27.040><c> token</c><01:35:28.040><c> um</c><01:35:28.760><c> and</c><01:35:28.920><c> the</c><01:35:29.040><c> UN</c>

01:35:29.310 --> 01:35:29.320 align:start position:0%
sentence and a pad token um and the UN
 

01:35:29.320 --> 01:35:32.510 align:start position:0%
sentence and a pad token um and the UN
token<01:35:29.960><c> must</c><01:35:30.320><c> exist</c><01:35:30.679><c> for</c><01:35:30.880><c> my</c><01:35:31.520><c> understanding</c>

01:35:32.510 --> 01:35:32.520 align:start position:0%
token must exist for my understanding
 

01:35:32.520 --> 01:35:34.709 align:start position:0%
token must exist for my understanding
and<01:35:32.639><c> then</c><01:35:32.800><c> some</c><01:35:33.159><c> some</c><01:35:33.320><c> things</c><01:35:33.880><c> so</c><01:35:34.040><c> we</c><01:35:34.119><c> can</c>

01:35:34.709 --> 01:35:34.719 align:start position:0%
and then some some things so we can
 

01:35:34.719 --> 01:35:37.270 align:start position:0%
and then some some things so we can
train<01:35:35.719><c> and</c><01:35:35.920><c> when</c><01:35:36.119><c> when</c><01:35:36.239><c> I</c><01:35:36.560><c> press</c><01:35:36.800><c> train</c><01:35:37.119><c> it's</c>

01:35:37.270 --> 01:35:37.280 align:start position:0%
train and when when I press train it's
 

01:35:37.280 --> 01:35:40.109 align:start position:0%
train and when when I press train it's
going<01:35:37.440><c> to</c><01:35:38.040><c> create</c><01:35:38.360><c> this</c><01:35:38.560><c> file</c><01:35:39.159><c> talk</c><01:35:39.440><c> 400.</c>

01:35:40.109 --> 01:35:40.119 align:start position:0%
going to create this file talk 400.
 

01:35:40.119 --> 01:35:43.149 align:start position:0%
going to create this file talk 400.
model<01:35:40.320><c> and</c><01:35:40.480><c> talk</c><01:35:40.679><c> 400.</c><01:35:41.320><c> wab</c><01:35:42.320><c> I</c><01:35:42.400><c> can</c><01:35:42.560><c> then</c><01:35:42.719><c> load</c>

01:35:43.149 --> 01:35:43.159 align:start position:0%
model and talk 400. wab I can then load
 

01:35:43.159 --> 01:35:45.550 align:start position:0%
model and talk 400. wab I can then load
the<01:35:43.280><c> model</c><01:35:43.639><c> file</c><01:35:44.440><c> and</c><01:35:44.600><c> I</c><01:35:44.679><c> can</c><01:35:44.960><c> inspect</c><01:35:45.360><c> the</c>

01:35:45.550 --> 01:35:45.560 align:start position:0%
the model file and I can inspect the
 

01:35:45.560 --> 01:35:48.550 align:start position:0%
the model file and I can inspect the
vocabulary<01:35:46.119><c> off</c><01:35:46.440><c> it</c><01:35:47.440><c> and</c><01:35:47.560><c> so</c><01:35:47.960><c> we</c><01:35:48.159><c> trained</c>

01:35:48.550 --> 01:35:48.560 align:start position:0%
vocabulary off it and so we trained
 

01:35:48.560 --> 01:35:53.310 align:start position:0%
vocabulary off it and so we trained
vocab<01:35:49.000><c> size</c><01:35:49.360><c> 400</c><01:35:50.360><c> on</c><01:35:51.159><c> this</c><01:35:51.560><c> text</c><01:35:52.159><c> here</c><01:35:53.159><c> and</c>

01:35:53.310 --> 01:35:53.320 align:start position:0%
vocab size 400 on this text here and
 

01:35:53.320 --> 01:35:54.990 align:start position:0%
vocab size 400 on this text here and
these<01:35:53.400><c> are</c><01:35:53.639><c> the</c><01:35:53.880><c> individual</c><01:35:54.480><c> pieces</c><01:35:54.880><c> the</c>

01:35:54.990 --> 01:35:55.000 align:start position:0%
these are the individual pieces the
 

01:35:55.000 --> 01:35:56.870 align:start position:0%
these are the individual pieces the
individual<01:35:55.440><c> tokens</c><01:35:56.159><c> that</c><01:35:56.320><c> sentence</c><01:35:56.679><c> piece</c>

01:35:56.870 --> 01:35:56.880 align:start position:0%
individual tokens that sentence piece
 

01:35:56.880 --> 01:35:58.790 align:start position:0%
individual tokens that sentence piece
will<01:35:57.040><c> create</c><01:35:57.880><c> so</c><01:35:58.000><c> in</c><01:35:58.080><c> the</c><01:35:58.239><c> beginning</c><01:35:58.520><c> we</c><01:35:58.639><c> see</c>

01:35:58.790 --> 01:35:58.800 align:start position:0%
will create so in the beginning we see
 

01:35:58.800 --> 01:36:02.070 align:start position:0%
will create so in the beginning we see
that<01:35:58.920><c> we</c><01:35:59.000><c> have</c><01:35:59.159><c> the</c><01:35:59.360><c> an</c><01:36:00.119><c> token</c><01:36:01.119><c> uh</c><01:36:01.440><c> with</c><01:36:01.639><c> the</c><01:36:01.760><c> ID</c>

01:36:02.070 --> 01:36:02.080 align:start position:0%
that we have the an token uh with the ID
 

01:36:02.080 --> 01:36:04.030 align:start position:0%
that we have the an token uh with the ID
zero<01:36:02.960><c> then</c><01:36:03.119><c> we</c><01:36:03.239><c> have</c><01:36:03.360><c> the</c><01:36:03.480><c> beginning</c><01:36:03.760><c> of</c>

01:36:04.030 --> 01:36:04.040 align:start position:0%
zero then we have the beginning of
 

01:36:04.040 --> 01:36:07.790 align:start position:0%
zero then we have the beginning of
sequence<01:36:04.760><c> end</c><01:36:04.960><c> of</c><01:36:05.119><c> sequence</c><01:36:06.080><c> one</c><01:36:06.360><c> and</c><01:36:06.679><c> two</c><01:36:07.679><c> and</c>

01:36:07.790 --> 01:36:07.800 align:start position:0%
sequence end of sequence one and two and
 

01:36:07.800 --> 01:36:09.310 align:start position:0%
sequence end of sequence one and two and
then<01:36:07.920><c> we</c><01:36:08.040><c> said</c><01:36:08.199><c> that</c><01:36:08.320><c> the</c><01:36:08.480><c> pad</c><01:36:08.679><c> ID</c><01:36:08.920><c> is</c><01:36:09.040><c> negative</c>

01:36:09.310 --> 01:36:09.320 align:start position:0%
then we said that the pad ID is negative
 

01:36:09.320 --> 01:36:12.070 align:start position:0%
then we said that the pad ID is negative
1<01:36:09.560><c> so</c><01:36:09.760><c> we</c><01:36:10.080><c> chose</c><01:36:10.400><c> not</c><01:36:10.560><c> to</c><01:36:10.719><c> use</c><01:36:10.920><c> it</c><01:36:11.719><c> so</c><01:36:11.880><c> there's</c>

01:36:12.070 --> 01:36:12.080 align:start position:0%
1 so we chose not to use it so there's
 

01:36:12.080 --> 01:36:13.470 align:start position:0%
1 so we chose not to use it so there's
no<01:36:12.320><c> pad</c><01:36:12.520><c> ID</c>

01:36:13.470 --> 01:36:13.480 align:start position:0%
no pad ID
 

01:36:13.480 --> 01:36:16.830 align:start position:0%
no pad ID
here<01:36:14.480><c> then</c><01:36:15.480><c> these</c><01:36:15.600><c> are</c><01:36:15.840><c> individual</c><01:36:16.400><c> bite</c>

01:36:16.830 --> 01:36:16.840 align:start position:0%
here then these are individual bite
 

01:36:16.840 --> 01:36:20.149 align:start position:0%
here then these are individual bite
tokens<01:36:17.840><c> so</c><01:36:18.080><c> here</c><01:36:18.239><c> we</c><01:36:18.400><c> saw</c><01:36:18.800><c> that</c><01:36:19.080><c> bite</c><01:36:19.360><c> fallback</c>

01:36:20.149 --> 01:36:20.159 align:start position:0%
tokens so here we saw that bite fallback
 

01:36:20.159 --> 01:36:23.550 align:start position:0%
tokens so here we saw that bite fallback
in<01:36:20.360><c> llama</c><01:36:20.920><c> was</c><01:36:21.320><c> turned</c><01:36:21.600><c> on</c><01:36:22.040><c> so</c><01:36:22.199><c> it's</c><01:36:22.400><c> true</c><01:36:23.360><c> so</c>

01:36:23.550 --> 01:36:23.560 align:start position:0%
in llama was turned on so it's true so
 

01:36:23.560 --> 01:36:26.149 align:start position:0%
in llama was turned on so it's true so
what<01:36:23.760><c> follows</c><01:36:24.119><c> are</c><01:36:24.280><c> going</c><01:36:24.400><c> to</c><01:36:24.520><c> be</c><01:36:24.760><c> the</c><01:36:25.159><c> 256</c>

01:36:26.149 --> 01:36:26.159 align:start position:0%
what follows are going to be the 256
 

01:36:26.159 --> 01:36:27.189 align:start position:0%
what follows are going to be the 256
bite

01:36:27.189 --> 01:36:27.199 align:start position:0%
bite
 

01:36:27.199 --> 01:36:31.709 align:start position:0%
bite
tokens<01:36:28.199><c> and</c><01:36:28.360><c> these</c><01:36:28.440><c> are</c><01:36:28.639><c> their</c>

01:36:31.709 --> 01:36:31.719 align:start position:0%
 
 

01:36:31.719 --> 01:36:35.030 align:start position:0%
 
IDs<01:36:32.719><c> and</c><01:36:32.840><c> then</c><01:36:33.000><c> at</c><01:36:33.119><c> the</c><01:36:33.679><c> bottom</c><01:36:34.679><c> after</c><01:36:34.880><c> the</c>

01:36:35.030 --> 01:36:35.040 align:start position:0%
IDs and then at the bottom after the
 

01:36:35.040 --> 01:36:37.669 align:start position:0%
IDs and then at the bottom after the
bite<01:36:35.320><c> tokens</c><01:36:36.199><c> come</c><01:36:36.600><c> the</c>

01:36:37.669 --> 01:36:37.679 align:start position:0%
bite tokens come the
 

01:36:37.679 --> 01:36:40.550 align:start position:0%
bite tokens come the
merges<01:36:38.679><c> and</c><01:36:38.840><c> these</c><01:36:38.960><c> are</c><01:36:39.159><c> the</c><01:36:39.360><c> parent</c><01:36:39.719><c> nodes</c><01:36:40.400><c> in</c>

01:36:40.550 --> 01:36:40.560 align:start position:0%
merges and these are the parent nodes in
 

01:36:40.560 --> 01:36:42.189 align:start position:0%
merges and these are the parent nodes in
the<01:36:40.679><c> merges</c><01:36:41.400><c> so</c><01:36:41.600><c> we're</c><01:36:41.719><c> not</c><01:36:41.840><c> seeing</c><01:36:42.119><c> the</c>

01:36:42.189 --> 01:36:42.199 align:start position:0%
the merges so we're not seeing the
 

01:36:42.199 --> 01:36:43.709 align:start position:0%
the merges so we're not seeing the
children<01:36:42.520><c> we're</c><01:36:42.679><c> just</c><01:36:42.800><c> seeing</c><01:36:43.040><c> the</c><01:36:43.199><c> parents</c>

01:36:43.709 --> 01:36:43.719 align:start position:0%
children we're just seeing the parents
 

01:36:43.719 --> 01:36:44.590 align:start position:0%
children we're just seeing the parents
and<01:36:43.880><c> their</c>

01:36:44.590 --> 01:36:44.600 align:start position:0%
and their
 

01:36:44.600 --> 01:36:47.030 align:start position:0%
and their
ID<01:36:45.600><c> and</c><01:36:45.719><c> then</c><01:36:45.960><c> after</c><01:36:46.199><c> the</c>

01:36:47.030 --> 01:36:47.040 align:start position:0%
ID and then after the
 

01:36:47.040 --> 01:36:50.709 align:start position:0%
ID and then after the
merges<01:36:48.040><c> comes</c><01:36:48.440><c> eventually</c><01:36:49.199><c> the</c><01:36:50.199><c> individual</c>

01:36:50.709 --> 01:36:50.719 align:start position:0%
merges comes eventually the individual
 

01:36:50.719 --> 01:36:53.550 align:start position:0%
merges comes eventually the individual
tokens<01:36:51.520><c> and</c><01:36:51.679><c> their</c><01:36:52.000><c> IDs</c><01:36:53.000><c> and</c><01:36:53.119><c> so</c><01:36:53.280><c> these</c><01:36:53.360><c> are</c>

01:36:53.550 --> 01:36:53.560 align:start position:0%
tokens and their IDs and so these are
 

01:36:53.560 --> 01:36:55.310 align:start position:0%
tokens and their IDs and so these are
the<01:36:53.679><c> individual</c><01:36:54.080><c> tokens</c><01:36:54.400><c> so</c><01:36:54.600><c> these</c><01:36:54.679><c> are</c><01:36:54.880><c> the</c>

01:36:55.310 --> 01:36:55.320 align:start position:0%
the individual tokens so these are the
 

01:36:55.320 --> 01:36:58.229 align:start position:0%
the individual tokens so these are the
individual<01:36:56.119><c> code</c><01:36:56.480><c> Point</c><01:36:56.880><c> tokens</c><01:36:57.320><c> if</c><01:36:57.440><c> you</c><01:36:57.560><c> will</c>

01:36:58.229 --> 01:36:58.239 align:start position:0%
individual code Point tokens if you will
 

01:36:58.239 --> 01:37:00.270 align:start position:0%
individual code Point tokens if you will
and<01:36:58.360><c> they</c><01:36:58.480><c> come</c><01:36:58.639><c> at</c><01:36:58.760><c> the</c><01:36:58.880><c> end</c><01:36:59.760><c> so</c><01:36:59.920><c> that</c><01:37:00.040><c> is</c><01:37:00.159><c> the</c>

01:37:00.270 --> 01:37:00.280 align:start position:0%
and they come at the end so that is the
 

01:37:00.280 --> 01:37:01.750 align:start position:0%
and they come at the end so that is the
ordering<01:37:00.760><c> with</c><01:37:00.920><c> which</c><01:37:01.080><c> sentence</c><01:37:01.400><c> piece</c><01:37:01.600><c> sort</c>

01:37:01.750 --> 01:37:01.760 align:start position:0%
ordering with which sentence piece sort
 

01:37:01.760 --> 01:37:03.910 align:start position:0%
ordering with which sentence piece sort
of<01:37:01.880><c> like</c><01:37:02.040><c> represents</c><01:37:02.719><c> its</c><01:37:02.920><c> vocabularies</c><01:37:03.800><c> it</c>

01:37:03.910 --> 01:37:03.920 align:start position:0%
of like represents its vocabularies it
 

01:37:03.920 --> 01:37:06.109 align:start position:0%
of like represents its vocabularies it
starts<01:37:04.280><c> with</c><01:37:04.600><c> special</c><01:37:04.920><c> tokens</c><01:37:05.560><c> then</c><01:37:05.719><c> the</c><01:37:05.840><c> bike</c>

01:37:06.109 --> 01:37:06.119 align:start position:0%
starts with special tokens then the bike
 

01:37:06.119 --> 01:37:08.149 align:start position:0%
starts with special tokens then the bike
tokens<01:37:06.760><c> then</c><01:37:06.880><c> the</c><01:37:07.000><c> merge</c><01:37:07.320><c> tokens</c><01:37:07.920><c> and</c><01:37:08.040><c> then</c>

01:37:08.149 --> 01:37:08.159 align:start position:0%
tokens then the merge tokens and then
 

01:37:08.159 --> 01:37:11.629 align:start position:0%
tokens then the merge tokens and then
the<01:37:08.280><c> individual</c><01:37:08.719><c> codo</c><01:37:09.719><c> tokens</c><01:37:10.719><c> and</c><01:37:11.000><c> all</c><01:37:11.239><c> these</c>

01:37:11.629 --> 01:37:11.639 align:start position:0%
the individual codo tokens and all these
 

01:37:11.639 --> 01:37:14.030 align:start position:0%
the individual codo tokens and all these
raw<01:37:12.040><c> codepoint</c><01:37:12.560><c> to</c><01:37:12.880><c> tokens</c><01:37:13.520><c> are</c><01:37:13.679><c> the</c><01:37:13.800><c> ones</c>

01:37:14.030 --> 01:37:14.040 align:start position:0%
raw codepoint to tokens are the ones
 

01:37:14.040 --> 01:37:16.109 align:start position:0%
raw codepoint to tokens are the ones
that<01:37:14.159><c> it</c><01:37:14.360><c> encountered</c><01:37:14.920><c> in</c><01:37:15.040><c> the</c><01:37:15.239><c> training</c>

01:37:16.109 --> 01:37:16.119 align:start position:0%
that it encountered in the training
 

01:37:16.119 --> 01:37:19.790 align:start position:0%
that it encountered in the training
set<01:37:17.119><c> so</c><01:37:17.639><c> those</c><01:37:18.360><c> individual</c><01:37:18.840><c> code</c><01:37:19.080><c> points</c><01:37:19.480><c> are</c>

01:37:19.790 --> 01:37:19.800 align:start position:0%
set so those individual code points are
 

01:37:19.800 --> 01:37:22.149 align:start position:0%
set so those individual code points are
all<01:37:20.119><c> the</c><01:37:20.639><c> the</c><01:37:20.760><c> entire</c><01:37:21.320><c> set</c><01:37:21.520><c> of</c><01:37:21.679><c> code</c><01:37:21.880><c> points</c>

01:37:22.149 --> 01:37:22.159 align:start position:0%
all the the entire set of code points
 

01:37:22.159 --> 01:37:24.390 align:start position:0%
all the the entire set of code points
that<01:37:22.280><c> occurred</c>

01:37:24.390 --> 01:37:24.400 align:start position:0%
that occurred
 

01:37:24.400 --> 01:37:27.470 align:start position:0%
that occurred
here<01:37:25.400><c> so</c><01:37:25.639><c> those</c><01:37:25.880><c> all</c><01:37:26.080><c> get</c><01:37:26.239><c> put</c><01:37:26.400><c> in</c><01:37:26.600><c> there</c><01:37:27.360><c> and</c>

01:37:27.470 --> 01:37:27.480 align:start position:0%
here so those all get put in there and
 

01:37:27.480 --> 01:37:29.270 align:start position:0%
here so those all get put in there and
then<01:37:27.639><c> those</c><01:37:27.800><c> that</c><01:37:27.920><c> are</c><01:37:28.119><c> extremely</c><01:37:28.639><c> rare</c><01:37:29.080><c> as</c>

01:37:29.270 --> 01:37:29.280 align:start position:0%
then those that are extremely rare as
 

01:37:29.280 --> 01:37:31.109 align:start position:0%
then those that are extremely rare as
determined<01:37:29.679><c> by</c><01:37:29.840><c> character</c><01:37:30.199><c> coverage</c><01:37:30.760><c> so</c><01:37:30.920><c> if</c><01:37:31.000><c> a</c>

01:37:31.109 --> 01:37:31.119 align:start position:0%
determined by character coverage so if a
 

01:37:31.119 --> 01:37:32.510 align:start position:0%
determined by character coverage so if a
code<01:37:31.360><c> Point</c><01:37:31.520><c> occurred</c><01:37:31.800><c> only</c><01:37:31.960><c> a</c><01:37:32.080><c> single</c><01:37:32.360><c> time</c>

01:37:32.510 --> 01:37:32.520 align:start position:0%
code Point occurred only a single time
 

01:37:32.520 --> 01:37:35.149 align:start position:0%
code Point occurred only a single time
out<01:37:32.639><c> of</c><01:37:32.760><c> like</c><01:37:32.880><c> a</c><01:37:33.000><c> million</c><01:37:33.840><c> um</c><01:37:34.320><c> sentences</c><01:37:34.960><c> or</c>

01:37:35.149 --> 01:37:35.159 align:start position:0%
out of like a million um sentences or
 

01:37:35.159 --> 01:37:37.070 align:start position:0%
out of like a million um sentences or
something<01:37:35.440><c> like</c><01:37:35.600><c> that</c><01:37:36.239><c> then</c><01:37:36.480><c> it</c><01:37:36.600><c> would</c><01:37:36.840><c> be</c>

01:37:37.070 --> 01:37:37.080 align:start position:0%
something like that then it would be
 

01:37:37.080 --> 01:37:40.189 align:start position:0%
something like that then it would be
ignored<01:37:37.719><c> and</c><01:37:37.840><c> it</c><01:37:37.920><c> would</c><01:37:38.119><c> not</c><01:37:38.280><c> be</c><01:37:38.520><c> added</c><01:37:39.119><c> to</c><01:37:39.360><c> our</c>

01:37:40.189 --> 01:37:40.199 align:start position:0%
ignored and it would not be added to our
 

01:37:40.199 --> 01:37:41.030 align:start position:0%
ignored and it would not be added to our
uh

01:37:41.030 --> 01:37:41.040 align:start position:0%
uh
 

01:37:41.040 --> 01:37:43.350 align:start position:0%
uh
vocabulary<01:37:42.040><c> once</c><01:37:42.199><c> we</c><01:37:42.320><c> have</c><01:37:42.400><c> a</c><01:37:42.560><c> vocabulary</c><01:37:43.239><c> we</c>

01:37:43.350 --> 01:37:43.360 align:start position:0%
vocabulary once we have a vocabulary we
 

01:37:43.360 --> 01:37:46.470 align:start position:0%
vocabulary once we have a vocabulary we
can<01:37:43.599><c> encode</c><01:37:44.040><c> into</c><01:37:44.400><c> IDs</c><01:37:44.880><c> and</c><01:37:45.000><c> we</c><01:37:45.159><c> can</c><01:37:45.920><c> um</c><01:37:46.280><c> sort</c>

01:37:46.470 --> 01:37:46.480 align:start position:0%
can encode into IDs and we can um sort
 

01:37:46.480 --> 01:37:47.390 align:start position:0%
can encode into IDs and we can um sort
of<01:37:46.639><c> get</c><01:37:46.719><c> a</c>

01:37:47.390 --> 01:37:47.400 align:start position:0%
of get a
 

01:37:47.400 --> 01:37:50.669 align:start position:0%
of get a
list<01:37:48.400><c> and</c><01:37:48.520><c> then</c><01:37:48.760><c> here</c><01:37:49.080><c> I</c><01:37:49.159><c> am</c><01:37:49.440><c> also</c><01:37:50.119><c> decoding</c>

01:37:50.669 --> 01:37:50.679 align:start position:0%
list and then here I am also decoding
 

01:37:50.679 --> 01:37:54.310 align:start position:0%
list and then here I am also decoding
the<01:37:50.840><c> indiv</c><01:37:51.159><c> idual</c><01:37:52.119><c> tokens</c><01:37:53.119><c> back</c><01:37:53.360><c> into</c><01:37:54.040><c> little</c>

01:37:54.310 --> 01:37:54.320 align:start position:0%
the indiv idual tokens back into little
 

01:37:54.320 --> 01:37:56.950 align:start position:0%
the indiv idual tokens back into little
pieces<01:37:54.880><c> as</c><01:37:55.000><c> they</c><01:37:55.159><c> call</c><01:37:55.480><c> it</c><01:37:56.480><c> so</c><01:37:56.599><c> let's</c><01:37:56.760><c> take</c><01:37:56.880><c> a</c>

01:37:56.950 --> 01:37:56.960 align:start position:0%
pieces as they call it so let's take a
 

01:37:56.960 --> 01:38:01.070 align:start position:0%
pieces as they call it so let's take a
look<01:37:57.080><c> at</c><01:37:57.239><c> what</c><01:37:57.360><c> happened</c><01:37:57.880><c> here</c><01:37:58.880><c> hello</c><01:37:59.520><c> space</c>

01:38:01.070 --> 01:38:01.080 align:start position:0%
look at what happened here hello space
 

01:38:01.080 --> 01:38:04.669 align:start position:0%
look at what happened here hello space
on<01:38:02.080><c> so</c><01:38:02.719><c> these</c><01:38:02.960><c> are</c><01:38:03.320><c> the</c><01:38:03.760><c> token</c><01:38:04.040><c> IDs</c><01:38:04.360><c> we</c><01:38:04.480><c> got</c>

01:38:04.669 --> 01:38:04.679 align:start position:0%
on so these are the token IDs we got
 

01:38:04.679 --> 01:38:07.470 align:start position:0%
on so these are the token IDs we got
back<01:38:05.599><c> and</c><01:38:05.840><c> when</c><01:38:05.960><c> we</c><01:38:06.119><c> look</c><01:38:06.360><c> here</c><01:38:06.880><c> uh</c><01:38:07.199><c> a</c><01:38:07.280><c> few</c>

01:38:07.470 --> 01:38:07.480 align:start position:0%
back and when we look here uh a few
 

01:38:07.480 --> 01:38:11.510 align:start position:0%
back and when we look here uh a few
things<01:38:07.880><c> sort</c><01:38:08.239><c> of</c><01:38:09.239><c> uh</c><01:38:09.480><c> jump</c><01:38:09.800><c> to</c><01:38:10.199><c> mind</c><01:38:11.199><c> number</c>

01:38:11.510 --> 01:38:11.520 align:start position:0%
things sort of uh jump to mind number
 

01:38:11.520 --> 01:38:14.149 align:start position:0%
things sort of uh jump to mind number
one<01:38:12.159><c> take</c><01:38:12.320><c> a</c><01:38:12.480><c> look</c><01:38:12.639><c> at</c><01:38:13.280><c> these</c><01:38:13.480><c> characters</c><01:38:14.040><c> the</c>

01:38:14.149 --> 01:38:14.159 align:start position:0%
one take a look at these characters the
 

01:38:14.159 --> 01:38:15.510 align:start position:0%
one take a look at these characters the
Korean<01:38:14.520><c> characters</c><01:38:14.880><c> of</c><01:38:15.000><c> course</c><01:38:15.239><c> were</c><01:38:15.400><c> not</c>

01:38:15.510 --> 01:38:15.520 align:start position:0%
Korean characters of course were not
 

01:38:15.520 --> 01:38:17.990 align:start position:0%
Korean characters of course were not
part<01:38:15.679><c> of</c><01:38:15.760><c> the</c><01:38:15.880><c> training</c><01:38:16.199><c> set</c><01:38:17.119><c> so</c><01:38:17.639><c> sentence</c>

01:38:17.990 --> 01:38:18.000 align:start position:0%
part of the training set so sentence
 

01:38:18.000 --> 01:38:19.589 align:start position:0%
part of the training set so sentence
piece<01:38:18.239><c> is</c><01:38:18.360><c> encountering</c><01:38:18.880><c> code</c><01:38:19.159><c> points</c><01:38:19.520><c> that</c>

01:38:19.589 --> 01:38:19.599 align:start position:0%
piece is encountering code points that
 

01:38:19.599 --> 01:38:22.189 align:start position:0%
piece is encountering code points that
it<01:38:19.760><c> has</c><01:38:19.960><c> not</c><01:38:20.119><c> seen</c><01:38:20.719><c> during</c><01:38:21.159><c> training</c><01:38:21.480><c> time</c><01:38:22.040><c> and</c>

01:38:22.189 --> 01:38:22.199 align:start position:0%
it has not seen during training time and
 

01:38:22.199 --> 01:38:24.550 align:start position:0%
it has not seen during training time and
those<01:38:22.360><c> code</c><01:38:22.560><c> points</c><01:38:22.880><c> do</c><01:38:23.040><c> not</c><01:38:23.400><c> have</c><01:38:24.000><c> a</c><01:38:24.159><c> token</c>

01:38:24.550 --> 01:38:24.560 align:start position:0%
those code points do not have a token
 

01:38:24.560 --> 01:38:26.390 align:start position:0%
those code points do not have a token
associated<01:38:25.000><c> with</c><01:38:25.159><c> them</c><01:38:25.760><c> so</c><01:38:25.920><c> suddenly</c><01:38:26.280><c> these</c>

01:38:26.390 --> 01:38:26.400 align:start position:0%
associated with them so suddenly these
 

01:38:26.400 --> 01:38:30.550 align:start position:0%
associated with them so suddenly these
are<01:38:26.599><c> un</c><01:38:27.199><c> tokens</c><01:38:28.000><c> unknown</c><01:38:28.760><c> tokens</c><01:38:29.760><c> but</c><01:38:30.000><c> because</c>

01:38:30.550 --> 01:38:30.560 align:start position:0%
are un tokens unknown tokens but because
 

01:38:30.560 --> 01:38:33.830 align:start position:0%
are un tokens unknown tokens but because
bite<01:38:30.840><c> fall</c><01:38:31.119><c> back</c><01:38:31.320><c> as</c><01:38:31.520><c> true</c><01:38:32.360><c> instead</c><01:38:33.360><c> sentence</c>

01:38:33.830 --> 01:38:33.840 align:start position:0%
bite fall back as true instead sentence
 

01:38:33.840 --> 01:38:36.430 align:start position:0%
bite fall back as true instead sentence
piece<01:38:34.199><c> falls</c><01:38:34.560><c> back</c><01:38:34.679><c> to</c><01:38:34.880><c> bytes</c><01:38:35.760><c> and</c><01:38:35.880><c> so</c><01:38:36.199><c> it</c>

01:38:36.430 --> 01:38:36.440 align:start position:0%
piece falls back to bytes and so it
 

01:38:36.440 --> 01:38:39.830 align:start position:0%
piece falls back to bytes and so it
takes<01:38:36.840><c> this</c><01:38:37.360><c> it</c><01:38:37.719><c> encodes</c><01:38:38.159><c> it</c><01:38:38.280><c> with</c><01:38:38.679><c> utf8</c><01:38:39.679><c> and</c>

01:38:39.830 --> 01:38:39.840 align:start position:0%
takes this it encodes it with utf8 and
 

01:38:39.840 --> 01:38:43.270 align:start position:0%
takes this it encodes it with utf8 and
then<01:38:40.040><c> it</c><01:38:40.199><c> uses</c><01:38:41.199><c> these</c><01:38:41.440><c> tokens</c><01:38:42.000><c> to</c><01:38:42.280><c> represent</c>

01:38:43.270 --> 01:38:43.280 align:start position:0%
then it uses these tokens to represent
 

01:38:43.280 --> 01:38:45.790 align:start position:0%
then it uses these tokens to represent
uh<01:38:43.400><c> those</c><01:38:44.000><c> bytes</c><01:38:45.000><c> and</c><01:38:45.199><c> that's</c><01:38:45.360><c> what</c><01:38:45.480><c> we</c><01:38:45.599><c> are</c>

01:38:45.790 --> 01:38:45.800 align:start position:0%
uh those bytes and that's what we are
 

01:38:45.800 --> 01:38:49.709 align:start position:0%
uh those bytes and that's what we are
getting<01:38:46.360><c> sort</c><01:38:46.560><c> of</c><01:38:46.920><c> here</c><01:38:47.920><c> this</c><01:38:48.040><c> is</c><01:38:48.199><c> the</c><01:38:48.560><c> utf8</c><01:38:49.560><c> uh</c>

01:38:49.709 --> 01:38:49.719 align:start position:0%
getting sort of here this is the utf8 uh
 

01:38:49.719 --> 01:38:52.870 align:start position:0%
getting sort of here this is the utf8 uh
encoding<01:38:50.560><c> and</c><01:38:50.679><c> in</c><01:38:50.800><c> this</c><01:38:51.080><c> shifted</c><01:38:51.520><c> by</c><01:38:51.760><c> three</c><01:38:52.719><c> uh</c>

01:38:52.870 --> 01:38:52.880 align:start position:0%
encoding and in this shifted by three uh
 

01:38:52.880 --> 01:38:56.229 align:start position:0%
encoding and in this shifted by three uh
because<01:38:53.159><c> of</c><01:38:53.480><c> these</c><01:38:54.400><c> um</c><01:38:55.400><c> special</c><01:38:55.719><c> tokens</c><01:38:56.080><c> here</c>

01:38:56.229 --> 01:38:56.239 align:start position:0%
because of these um special tokens here
 

01:38:56.239 --> 01:38:58.830 align:start position:0%
because of these um special tokens here
that<01:38:56.320><c> have</c><01:38:56.520><c> IDs</c><01:38:56.920><c> earlier</c><01:38:57.320><c> on</c><01:38:58.320><c> so</c><01:38:58.520><c> that's</c><01:38:58.679><c> what</c>

01:38:58.830 --> 01:38:58.840 align:start position:0%
that have IDs earlier on so that's what
 

01:38:58.840 --> 01:39:02.910 align:start position:0%
that have IDs earlier on so that's what
happened<01:38:59.440><c> here</c><01:39:00.440><c> now</c><01:39:00.800><c> one</c><01:39:01.000><c> more</c><01:39:01.280><c> thing</c><01:39:01.840><c> that</c><01:39:02.480><c> um</c>

01:39:02.910 --> 01:39:02.920 align:start position:0%
happened here now one more thing that um
 

01:39:02.920 --> 01:39:05.510 align:start position:0%
happened here now one more thing that um
well<01:39:03.119><c> first</c><01:39:03.360><c> before</c><01:39:03.599><c> I</c><01:39:03.800><c> go</c><01:39:04.159><c> on</c><01:39:05.159><c> with</c><01:39:05.320><c> respect</c>

01:39:05.510 --> 01:39:05.520 align:start position:0%
well first before I go on with respect
 

01:39:05.520 --> 01:39:08.229 align:start position:0%
well first before I go on with respect
to<01:39:05.639><c> the</c><01:39:05.719><c> bitef</c><01:39:06.159><c> back</c><01:39:06.800><c> let</c><01:39:07.000><c> me</c><01:39:07.480><c> remove</c><01:39:07.920><c> bite</c>

01:39:08.229 --> 01:39:08.239 align:start position:0%
to the bitef back let me remove bite
 

01:39:08.239 --> 01:39:10.830 align:start position:0%
to the bitef back let me remove bite
foldback<01:39:09.239><c> if</c><01:39:09.400><c> this</c><01:39:09.520><c> is</c><01:39:09.719><c> false</c><01:39:10.599><c> what's</c><01:39:10.760><c> going</c>

01:39:10.830 --> 01:39:10.840 align:start position:0%
foldback if this is false what's going
 

01:39:10.840 --> 01:39:12.510 align:start position:0%
foldback if this is false what's going
to<01:39:11.000><c> happen</c><01:39:11.639><c> let's</c>

01:39:12.510 --> 01:39:12.520 align:start position:0%
to happen let's
 

01:39:12.520 --> 01:39:14.430 align:start position:0%
to happen let's
retrain<01:39:13.520><c> so</c><01:39:13.679><c> the</c><01:39:13.760><c> first</c><01:39:13.960><c> thing</c><01:39:14.080><c> that</c><01:39:14.199><c> happened</c>

01:39:14.430 --> 01:39:14.440 align:start position:0%
retrain so the first thing that happened
 

01:39:14.440 --> 01:39:17.270 align:start position:0%
retrain so the first thing that happened
is<01:39:14.560><c> all</c><01:39:14.760><c> the</c><01:39:14.880><c> bite</c><01:39:15.119><c> tokens</c><01:39:15.520><c> disappeared</c><01:39:16.360><c> right</c>

01:39:17.270 --> 01:39:17.280 align:start position:0%
is all the bite tokens disappeared right
 

01:39:17.280 --> 01:39:18.990 align:start position:0%
is all the bite tokens disappeared right
and<01:39:17.440><c> now</c><01:39:17.560><c> we</c><01:39:17.679><c> just</c><01:39:17.840><c> have</c><01:39:17.960><c> the</c><01:39:18.080><c> merges</c><01:39:18.760><c> and</c><01:39:18.880><c> we</c>

01:39:18.990 --> 01:39:19.000 align:start position:0%
and now we just have the merges and we
 

01:39:19.000 --> 01:39:20.470 align:start position:0%
and now we just have the merges and we
have<01:39:19.080><c> a</c><01:39:19.199><c> lot</c><01:39:19.320><c> more</c><01:39:19.480><c> merges</c><01:39:19.920><c> now</c><01:39:20.199><c> because</c><01:39:20.400><c> we</c>

01:39:20.470 --> 01:39:20.480 align:start position:0%
have a lot more merges now because we
 

01:39:20.480 --> 01:39:21.790 align:start position:0%
have a lot more merges now because we
have<01:39:20.560><c> a</c><01:39:20.639><c> lot</c><01:39:20.760><c> more</c><01:39:21.119><c> space</c><01:39:21.360><c> because</c><01:39:21.520><c> we're</c><01:39:21.679><c> not</c>

01:39:21.790 --> 01:39:21.800 align:start position:0%
have a lot more space because we're not
 

01:39:21.800 --> 01:39:25.030 align:start position:0%
have a lot more space because we're not
taking<01:39:22.080><c> up</c><01:39:22.800><c> space</c><01:39:23.159><c> in</c><01:39:23.280><c> the</c><01:39:23.400><c> wab</c><01:39:23.920><c> size</c><01:39:24.760><c> uh</c><01:39:24.920><c> with</c>

01:39:25.030 --> 01:39:25.040 align:start position:0%
taking up space in the wab size uh with
 

01:39:25.040 --> 01:39:25.950 align:start position:0%
taking up space in the wab size uh with
all<01:39:25.199><c> the</c>

01:39:25.950 --> 01:39:25.960 align:start position:0%
all the
 

01:39:25.960 --> 01:39:29.070 align:start position:0%
all the
bytes<01:39:26.960><c> and</c><01:39:27.119><c> now</c><01:39:27.360><c> if</c><01:39:27.520><c> we</c><01:39:27.840><c> encode</c>

01:39:29.070 --> 01:39:29.080 align:start position:0%
bytes and now if we encode
 

01:39:29.080 --> 01:39:33.229 align:start position:0%
bytes and now if we encode
this<01:39:30.080><c> we</c><01:39:30.360><c> get</c><01:39:30.599><c> a</c><01:39:30.920><c> zero</c><01:39:31.920><c> so</c><01:39:32.199><c> this</c><01:39:32.440><c> entire</c><01:39:32.840><c> string</c>

01:39:33.229 --> 01:39:33.239 align:start position:0%
this we get a zero so this entire string
 

01:39:33.239 --> 01:39:35.109 align:start position:0%
this we get a zero so this entire string
here<01:39:33.400><c> suddenly</c><01:39:33.800><c> there's</c><01:39:33.960><c> no</c><01:39:34.119><c> bitef</c><01:39:34.560><c> back</c><01:39:34.960><c> so</c>

01:39:35.109 --> 01:39:35.119 align:start position:0%
here suddenly there's no bitef back so
 

01:39:35.119 --> 01:39:39.390 align:start position:0%
here suddenly there's no bitef back so
this<01:39:35.239><c> is</c><01:39:35.520><c> unknown</c><01:39:36.520><c> and</c><01:39:36.760><c> unknown</c><01:39:37.480><c> is</c><01:39:38.040><c> an</c><01:39:39.040><c> and</c><01:39:39.159><c> so</c>

01:39:39.390 --> 01:39:39.400 align:start position:0%
this is unknown and unknown is an and so
 

01:39:39.400 --> 01:39:42.030 align:start position:0%
this is unknown and unknown is an and so
this<01:39:39.520><c> is</c><01:39:39.760><c> zero</c><01:39:40.520><c> because</c><01:39:41.000><c> the</c><01:39:41.119><c> an</c><01:39:41.440><c> token</c><01:39:41.840><c> is</c>

01:39:42.030 --> 01:39:42.040 align:start position:0%
this is zero because the an token is
 

01:39:42.040 --> 01:39:44.910 align:start position:0%
this is zero because the an token is
token<01:39:43.080><c> zero</c><01:39:44.080><c> and</c><01:39:44.199><c> you</c><01:39:44.320><c> have</c><01:39:44.400><c> to</c><01:39:44.520><c> keep</c><01:39:44.639><c> in</c><01:39:44.719><c> mind</c>

01:39:44.910 --> 01:39:44.920 align:start position:0%
token zero and you have to keep in mind
 

01:39:44.920 --> 01:39:46.870 align:start position:0%
token zero and you have to keep in mind
that<01:39:45.080><c> this</c><01:39:45.199><c> would</c><01:39:45.360><c> feed</c><01:39:45.679><c> into</c><01:39:45.960><c> your</c><01:39:46.639><c> uh</c>

01:39:46.870 --> 01:39:46.880 align:start position:0%
that this would feed into your uh
 

01:39:46.880 --> 01:39:48.390 align:start position:0%
that this would feed into your uh
language<01:39:47.199><c> model</c><01:39:47.639><c> so</c><01:39:47.800><c> what</c><01:39:47.880><c> is</c><01:39:48.000><c> a</c><01:39:48.119><c> language</c>

01:39:48.390 --> 01:39:48.400 align:start position:0%
language model so what is a language
 

01:39:48.400 --> 01:39:49.910 align:start position:0%
language model so what is a language
model<01:39:48.639><c> supposed</c><01:39:48.920><c> to</c><01:39:49.040><c> do</c><01:39:49.239><c> when</c><01:39:49.400><c> all</c><01:39:49.560><c> kinds</c><01:39:49.719><c> of</c>

01:39:49.910 --> 01:39:49.920 align:start position:0%
model supposed to do when all kinds of
 

01:39:49.920 --> 01:39:52.149 align:start position:0%
model supposed to do when all kinds of
different<01:39:50.599><c> things</c><01:39:50.840><c> that</c><01:39:51.119><c> are</c><01:39:51.400><c> unrecognized</c>

01:39:52.149 --> 01:39:52.159 align:start position:0%
different things that are unrecognized
 

01:39:52.159 --> 01:39:53.990 align:start position:0%
different things that are unrecognized
because<01:39:52.320><c> they're</c><01:39:52.560><c> rare</c><01:39:53.040><c> just</c><01:39:53.320><c> end</c><01:39:53.520><c> up</c><01:39:53.719><c> mapping</c>

01:39:53.990 --> 01:39:54.000 align:start position:0%
because they're rare just end up mapping
 

01:39:54.000 --> 01:39:56.109 align:start position:0%
because they're rare just end up mapping
into<01:39:54.280><c> Unk</c><01:39:54.840><c> it's</c><01:39:55.000><c> not</c><01:39:55.199><c> exactly</c><01:39:55.679><c> the</c><01:39:55.800><c> property</c>

01:39:56.109 --> 01:39:56.119 align:start position:0%
into Unk it's not exactly the property
 

01:39:56.119 --> 01:39:57.750 align:start position:0%
into Unk it's not exactly the property
that<01:39:56.239><c> you</c><01:39:56.360><c> want</c><01:39:57.040><c> so</c><01:39:57.199><c> that's</c><01:39:57.360><c> why</c><01:39:57.480><c> I</c><01:39:57.599><c> think</c>

01:39:57.750 --> 01:39:57.760 align:start position:0%
that you want so that's why I think
 

01:39:57.760 --> 01:40:02.030 align:start position:0%
that you want so that's why I think
llama<01:39:58.280><c> correctly</c><01:39:59.280><c> uh</c><01:39:59.400><c> used</c><01:39:59.719><c> by</c><01:40:00.000><c> fallback</c><01:40:01.040><c> true</c>

01:40:02.030 --> 01:40:02.040 align:start position:0%
llama correctly uh used by fallback true
 

01:40:02.040 --> 01:40:03.709 align:start position:0%
llama correctly uh used by fallback true
uh<01:40:02.159><c> because</c><01:40:02.400><c> we</c><01:40:02.560><c> definitely</c><01:40:02.960><c> want</c><01:40:03.080><c> to</c><01:40:03.239><c> feed</c>

01:40:03.709 --> 01:40:03.719 align:start position:0%
uh because we definitely want to feed
 

01:40:03.719 --> 01:40:06.030 align:start position:0%
uh because we definitely want to feed
these<01:40:04.320><c> um</c><01:40:04.599><c> unknown</c><01:40:05.040><c> or</c><01:40:05.199><c> rare</c><01:40:05.480><c> code</c><01:40:05.760><c> points</c>

01:40:06.030 --> 01:40:06.040 align:start position:0%
these um unknown or rare code points
 

01:40:06.040 --> 01:40:08.550 align:start position:0%
these um unknown or rare code points
into<01:40:06.239><c> the</c><01:40:06.360><c> model</c><01:40:06.599><c> and</c><01:40:06.760><c> some</c><01:40:07.480><c> uh</c><01:40:07.599><c> some</c><01:40:07.840><c> manner</c>

01:40:08.550 --> 01:40:08.560 align:start position:0%
into the model and some uh some manner
 

01:40:08.560 --> 01:40:10.669 align:start position:0%
into the model and some uh some manner
the<01:40:08.679><c> next</c><01:40:08.840><c> thing</c><01:40:08.960><c> I</c><01:40:09.040><c> want</c><01:40:09.119><c> to</c><01:40:09.239><c> show</c><01:40:09.400><c> you</c><01:40:09.560><c> is</c><01:40:09.840><c> the</c>

01:40:10.669 --> 01:40:10.679 align:start position:0%
the next thing I want to show you is the
 

01:40:10.679 --> 01:40:12.470 align:start position:0%
the next thing I want to show you is the
following<01:40:11.679><c> notice</c><01:40:11.960><c> here</c><01:40:12.119><c> when</c><01:40:12.239><c> we</c><01:40:12.320><c> are</c>

01:40:12.470 --> 01:40:12.480 align:start position:0%
following notice here when we are
 

01:40:12.480 --> 01:40:14.709 align:start position:0%
following notice here when we are
decoding<01:40:13.000><c> all</c><01:40:13.119><c> the</c><01:40:13.280><c> individual</c><01:40:13.719><c> tokens</c><01:40:14.599><c> you</c>

01:40:14.709 --> 01:40:14.719 align:start position:0%
decoding all the individual tokens you
 

01:40:14.719 --> 01:40:18.030 align:start position:0%
decoding all the individual tokens you
see<01:40:15.000><c> how</c><01:40:15.639><c> spaces</c><01:40:16.639><c> uh</c><01:40:16.920><c> space</c><01:40:17.320><c> here</c><01:40:17.679><c> ends</c><01:40:17.880><c> up</c>

01:40:18.030 --> 01:40:18.040 align:start position:0%
see how spaces uh space here ends up
 

01:40:18.040 --> 01:40:21.229 align:start position:0%
see how spaces uh space here ends up
being<01:40:18.320><c> this</c><01:40:18.800><c> um</c><01:40:19.040><c> bold</c><01:40:19.960><c> underline</c><01:40:20.960><c> I'm</c><01:40:21.040><c> not</c>

01:40:21.229 --> 01:40:21.239 align:start position:0%
being this um bold underline I'm not
 

01:40:21.239 --> 01:40:23.070 align:start position:0%
being this um bold underline I'm not
100%<01:40:21.560><c> sure</c><01:40:21.840><c> by</c><01:40:21.960><c> the</c><01:40:22.040><c> way</c><01:40:22.199><c> why</c><01:40:22.400><c> sentence</c><01:40:22.719><c> piece</c>

01:40:23.070 --> 01:40:23.080 align:start position:0%
100% sure by the way why sentence piece
 

01:40:23.080 --> 01:40:25.350 align:start position:0%
100% sure by the way why sentence piece
switches<01:40:23.599><c> whites</c><01:40:23.840><c> space</c><01:40:24.159><c> into</c><01:40:24.440><c> these</c><01:40:24.880><c> bold</c>

01:40:25.350 --> 01:40:25.360 align:start position:0%
switches whites space into these bold
 

01:40:25.360 --> 01:40:27.629 align:start position:0%
switches whites space into these bold
underscore<01:40:26.239><c> characters</c><01:40:27.159><c> maybe</c><01:40:27.360><c> it's</c><01:40:27.480><c> for</c>

01:40:27.629 --> 01:40:27.639 align:start position:0%
underscore characters maybe it's for
 

01:40:27.639 --> 01:40:29.870 align:start position:0%
underscore characters maybe it's for
visualization<01:40:28.280><c> I'm</c><01:40:28.400><c> not</c><01:40:28.639><c> 100%</c><01:40:29.040><c> sure</c><01:40:29.280><c> why</c><01:40:29.440><c> that</c>

01:40:29.870 --> 01:40:29.880 align:start position:0%
visualization I'm not 100% sure why that
 

01:40:29.880 --> 01:40:32.430 align:start position:0%
visualization I'm not 100% sure why that
happens<01:40:30.880><c> uh</c><01:40:31.000><c> but</c><01:40:31.119><c> notice</c><01:40:31.480><c> this</c><01:40:32.000><c> why</c><01:40:32.119><c> do</c><01:40:32.280><c> we</c>

01:40:32.430 --> 01:40:32.440 align:start position:0%
happens uh but notice this why do we
 

01:40:32.440 --> 01:40:37.430 align:start position:0%
happens uh but notice this why do we
have<01:40:32.639><c> an</c><01:40:32.920><c> extra</c><01:40:33.840><c> space</c><01:40:34.840><c> in</c><01:40:34.960><c> the</c><01:40:35.440><c> front</c><01:40:36.440><c> of</c>

01:40:37.430 --> 01:40:37.440 align:start position:0%
have an extra space in the front of
 

01:40:37.440 --> 01:40:40.470 align:start position:0%
have an extra space in the front of
hello<01:40:38.440><c> um</c><01:40:38.800><c> what</c><01:40:39.159><c> where</c><01:40:39.280><c> is</c><01:40:39.440><c> this</c><01:40:39.599><c> coming</c><01:40:39.840><c> from</c>

01:40:40.470 --> 01:40:40.480 align:start position:0%
hello um what where is this coming from
 

01:40:40.480 --> 01:40:43.149 align:start position:0%
hello um what where is this coming from
well<01:40:40.599><c> it's</c><01:40:40.760><c> coming</c><01:40:41.040><c> from</c><01:40:41.599><c> this</c><01:40:41.800><c> option</c>

01:40:43.149 --> 01:40:43.159 align:start position:0%
well it's coming from this option
 

01:40:43.159 --> 01:40:45.030 align:start position:0%
well it's coming from this option
here

01:40:45.030 --> 01:40:45.040 align:start position:0%
here
 

01:40:45.040 --> 01:40:48.350 align:start position:0%
here
um<01:40:46.040><c> add</c><01:40:46.239><c> dummy</c><01:40:46.599><c> prefix</c><01:40:47.000><c> is</c><01:40:47.159><c> true</c><01:40:48.040><c> and</c><01:40:48.159><c> when</c><01:40:48.239><c> you</c>

01:40:48.350 --> 01:40:48.360 align:start position:0%
um add dummy prefix is true and when you
 

01:40:48.360 --> 01:40:49.550 align:start position:0%
um add dummy prefix is true and when you
go<01:40:48.480><c> to</c><01:40:48.719><c> the</c>

01:40:49.550 --> 01:40:49.560 align:start position:0%
go to the
 

01:40:49.560 --> 01:40:51.870 align:start position:0%
go to the
documentation<01:40:50.560><c> add</c><01:40:50.920><c> D</c><01:40:51.239><c> whites</c><01:40:51.440><c> space</c><01:40:51.639><c> at</c><01:40:51.760><c> the</c>

01:40:51.870 --> 01:40:51.880 align:start position:0%
documentation add D whites space at the
 

01:40:51.880 --> 01:40:53.350 align:start position:0%
documentation add D whites space at the
beginning<01:40:52.119><c> of</c><01:40:52.280><c> text</c><01:40:52.560><c> in</c><01:40:52.639><c> order</c><01:40:52.880><c> to</c><01:40:53.040><c> treat</c>

01:40:53.350 --> 01:40:53.360 align:start position:0%
beginning of text in order to treat
 

01:40:53.360 --> 01:40:55.910 align:start position:0%
beginning of text in order to treat
World<01:40:53.960><c> in</c><01:40:54.239><c> world</c><01:40:54.800><c> and</c><01:40:55.000><c> hello</c><01:40:55.320><c> world</c><01:40:55.639><c> in</c><01:40:55.760><c> the</c>

01:40:55.910 --> 01:40:55.920 align:start position:0%
World in world and hello world in the
 

01:40:55.920 --> 01:40:57.950 align:start position:0%
World in world and hello world in the
exact<01:40:56.199><c> same</c><01:40:56.480><c> way</c><01:40:57.159><c> so</c><01:40:57.320><c> what</c><01:40:57.440><c> this</c><01:40:57.520><c> is</c><01:40:57.639><c> trying</c><01:40:57.840><c> to</c>

01:40:57.950 --> 01:40:57.960 align:start position:0%
exact same way so what this is trying to
 

01:40:57.960 --> 01:40:59.229 align:start position:0%
exact same way so what this is trying to
do<01:40:58.119><c> is</c><01:40:58.280><c> the</c>

01:40:59.229 --> 01:40:59.239 align:start position:0%
do is the
 

01:40:59.239 --> 01:41:02.030 align:start position:0%
do is the
following<01:41:00.239><c> if</c><01:41:00.360><c> we</c><01:41:00.480><c> go</c><01:41:00.639><c> back</c><01:41:00.760><c> to</c><01:41:00.880><c> our</c><01:41:01.040><c> tick</c>

01:41:02.030 --> 01:41:02.040 align:start position:0%
following if we go back to our tick
 

01:41:02.040 --> 01:41:06.310 align:start position:0%
following if we go back to our tick
tokenizer<01:41:03.040><c> world</c><01:41:03.800><c> as</c><01:41:04.440><c> uh</c><01:41:04.920><c> token</c><01:41:05.280><c> by</c><01:41:05.520><c> itself</c>

01:41:06.310 --> 01:41:06.320 align:start position:0%
tokenizer world as uh token by itself
 

01:41:06.320 --> 01:41:10.229 align:start position:0%
tokenizer world as uh token by itself
has<01:41:06.440><c> a</c><01:41:06.639><c> different</c><01:41:07.119><c> ID</c><01:41:08.080><c> than</c><01:41:08.560><c> space</c><01:41:09.000><c> world</c><01:41:10.000><c> so</c>

01:41:10.229 --> 01:41:10.239 align:start position:0%
has a different ID than space world so
 

01:41:10.239 --> 01:41:14.589 align:start position:0%
has a different ID than space world so
we<01:41:10.360><c> have</c><01:41:10.719><c> this</c><01:41:10.800><c> is</c><01:41:10.960><c> 1917</c><01:41:11.960><c> but</c><01:41:12.159><c> this</c><01:41:12.280><c> is</c><01:41:12.719><c> 14</c><01:41:13.679><c> Etc</c>

01:41:14.589 --> 01:41:14.599 align:start position:0%
we have this is 1917 but this is 14 Etc
 

01:41:14.599 --> 01:41:15.990 align:start position:0%
we have this is 1917 but this is 14 Etc
so<01:41:14.800><c> these</c><01:41:14.960><c> are</c><01:41:15.080><c> two</c><01:41:15.280><c> different</c><01:41:15.520><c> tokens</c><01:41:15.840><c> for</c>

01:41:15.990 --> 01:41:16.000 align:start position:0%
so these are two different tokens for
 

01:41:16.000 --> 01:41:17.390 align:start position:0%
so these are two different tokens for
the<01:41:16.119><c> language</c><01:41:16.400><c> model</c><01:41:16.920><c> and</c><01:41:17.000><c> the</c><01:41:17.119><c> language</c>

01:41:17.390 --> 01:41:17.400 align:start position:0%
the language model and the language
 

01:41:17.400 --> 01:41:18.870 align:start position:0%
the language model and the language
model<01:41:17.599><c> has</c><01:41:17.719><c> to</c><01:41:17.840><c> learn</c><01:41:18.119><c> from</c><01:41:18.320><c> data</c><01:41:18.679><c> that</c><01:41:18.800><c> they</c>

01:41:18.870 --> 01:41:18.880 align:start position:0%
model has to learn from data that they
 

01:41:18.880 --> 01:41:20.310 align:start position:0%
model has to learn from data that they
are<01:41:19.040><c> actually</c><01:41:19.320><c> kind</c><01:41:19.440><c> of</c><01:41:19.560><c> like</c><01:41:19.639><c> a</c><01:41:19.760><c> very</c><01:41:19.920><c> similar</c>

01:41:20.310 --> 01:41:20.320 align:start position:0%
are actually kind of like a very similar
 

01:41:20.320 --> 01:41:22.990 align:start position:0%
are actually kind of like a very similar
concept<01:41:21.119><c> so</c><01:41:21.320><c> to</c><01:41:21.440><c> the</c><01:41:21.560><c> language</c><01:41:21.880><c> model</c><01:41:22.679><c> in</c><01:41:22.800><c> the</c>

01:41:22.990 --> 01:41:23.000 align:start position:0%
concept so to the language model in the
 

01:41:23.000 --> 01:41:25.990 align:start position:0%
concept so to the language model in the
Tik<01:41:23.239><c> token</c><01:41:23.520><c> World</c><01:41:24.480><c> um</c><01:41:25.239><c> basically</c><01:41:25.599><c> words</c><01:41:25.880><c> in</c>

01:41:25.990 --> 01:41:26.000 align:start position:0%
Tik token World um basically words in
 

01:41:26.000 --> 01:41:27.629 align:start position:0%
Tik token World um basically words in
the<01:41:26.119><c> beginning</c><01:41:26.360><c> of</c><01:41:26.480><c> sentences</c><01:41:26.920><c> and</c><01:41:27.119><c> words</c><01:41:27.560><c> in</c>

01:41:27.629 --> 01:41:27.639 align:start position:0%
the beginning of sentences and words in
 

01:41:27.639 --> 01:41:29.030 align:start position:0%
the beginning of sentences and words in
the<01:41:27.760><c> middle</c><01:41:27.960><c> of</c><01:41:28.080><c> sentences</c><01:41:28.560><c> actually</c><01:41:28.880><c> look</c>

01:41:29.030 --> 01:41:29.040 align:start position:0%
the middle of sentences actually look
 

01:41:29.040 --> 01:41:32.030 align:start position:0%
the middle of sentences actually look
completely<01:41:29.599><c> different</c><01:41:30.599><c> um</c><01:41:31.440><c> and</c><01:41:31.719><c> it</c><01:41:31.840><c> has</c><01:41:31.960><c> to</c>

01:41:32.030 --> 01:41:32.040 align:start position:0%
completely different um and it has to
 

01:41:32.040 --> 01:41:34.430 align:start position:0%
completely different um and it has to
learned<01:41:32.320><c> that</c><01:41:32.440><c> they</c><01:41:32.520><c> are</c><01:41:32.840><c> roughly</c><01:41:33.199><c> the</c><01:41:33.440><c> same</c>

01:41:34.430 --> 01:41:34.440 align:start position:0%
learned that they are roughly the same
 

01:41:34.440 --> 01:41:36.910 align:start position:0%
learned that they are roughly the same
so<01:41:35.320><c> this</c><01:41:35.560><c> add</c><01:41:35.800><c> dami</c><01:41:36.040><c> prefix</c><01:41:36.400><c> is</c><01:41:36.480><c> trying</c><01:41:36.719><c> to</c>

01:41:36.910 --> 01:41:36.920 align:start position:0%
so this add dami prefix is trying to
 

01:41:36.920 --> 01:41:38.950 align:start position:0%
so this add dami prefix is trying to
fight<01:41:37.239><c> that</c><01:41:37.560><c> a</c><01:41:37.679><c> little</c><01:41:37.880><c> bit</c><01:41:38.360><c> and</c><01:41:38.520><c> the</c><01:41:38.639><c> way</c><01:41:38.800><c> that</c>

01:41:38.950 --> 01:41:38.960 align:start position:0%
fight that a little bit and the way that
 

01:41:38.960 --> 01:41:41.709 align:start position:0%
fight that a little bit and the way that
works<01:41:39.320><c> is</c><01:41:39.560><c> that</c><01:41:39.719><c> it</c><01:41:40.080><c> basically</c>

01:41:41.709 --> 01:41:41.719 align:start position:0%
works is that it basically
 

01:41:41.719 --> 01:41:46.750 align:start position:0%
works is that it basically
uh<01:41:42.719><c> adds</c><01:41:42.920><c> a</c><01:41:43.040><c> dummy</c><01:41:43.360><c> prefix</c><01:41:44.440><c> so</c><01:41:45.440><c> for</c><01:41:46.080><c> as</c><01:41:46.159><c> a</c><01:41:46.520><c> as</c><01:41:46.599><c> a</c>

01:41:46.750 --> 01:41:46.760 align:start position:0%
uh adds a dummy prefix so for as a as a
 

01:41:46.760 --> 01:41:49.070 align:start position:0%
uh adds a dummy prefix so for as a as a
part<01:41:46.920><c> of</c><01:41:47.520><c> pre-processing</c><01:41:48.520><c> it</c><01:41:48.599><c> will</c><01:41:48.800><c> take</c><01:41:48.960><c> the</c>

01:41:49.070 --> 01:41:49.080 align:start position:0%
part of pre-processing it will take the
 

01:41:49.080 --> 01:41:51.310 align:start position:0%
part of pre-processing it will take the
string<01:41:49.560><c> and</c><01:41:49.679><c> it</c><01:41:49.760><c> will</c><01:41:49.960><c> add</c><01:41:50.119><c> a</c><01:41:50.360><c> space</c><01:41:51.040><c> it</c><01:41:51.159><c> will</c>

01:41:51.310 --> 01:41:51.320 align:start position:0%
string and it will add a space it will
 

01:41:51.320 --> 01:41:54.910 align:start position:0%
string and it will add a space it will
do<01:41:51.960><c> this</c><01:41:52.960><c> and</c><01:41:53.239><c> that's</c><01:41:53.440><c> done</c><01:41:53.639><c> in</c><01:41:53.800><c> an</c><01:41:54.040><c> effort</c><01:41:54.679><c> to</c>

01:41:54.910 --> 01:41:54.920 align:start position:0%
do this and that's done in an effort to
 

01:41:54.920 --> 01:41:57.510 align:start position:0%
do this and that's done in an effort to
make<01:41:55.679><c> this</c><01:41:55.880><c> world</c><01:41:56.239><c> and</c><01:41:56.440><c> that</c><01:41:56.599><c> world</c><01:41:56.960><c> the</c><01:41:57.080><c> same</c>

01:41:57.510 --> 01:41:57.520 align:start position:0%
make this world and that world the same
 

01:41:57.520 --> 01:42:00.270 align:start position:0%
make this world and that world the same
they<01:41:57.639><c> will</c><01:41:57.840><c> both</c><01:41:58.040><c> be</c><01:41:58.280><c> space</c><01:41:58.920><c> world</c><01:41:59.920><c> so</c><01:42:00.080><c> that's</c>

01:42:00.270 --> 01:42:00.280 align:start position:0%
they will both be space world so that's
 

01:42:00.280 --> 01:42:02.149 align:start position:0%
they will both be space world so that's
one<01:42:00.480><c> other</c><01:42:00.760><c> kind</c><01:42:00.880><c> of</c><01:42:01.040><c> pre-processing</c><01:42:01.760><c> option</c>

01:42:02.149 --> 01:42:02.159 align:start position:0%
one other kind of pre-processing option
 

01:42:02.159 --> 01:42:05.270 align:start position:0%
one other kind of pre-processing option
that<01:42:02.320><c> is</c><01:42:02.599><c> turned</c><01:42:02.920><c> on</c><01:42:03.360><c> and</c><01:42:03.520><c> llama</c><01:42:03.840><c> 2</c><01:42:04.239><c> also</c><01:42:05.159><c> uh</c>

01:42:05.270 --> 01:42:05.280 align:start position:0%
that is turned on and llama 2 also uh
 

01:42:05.280 --> 01:42:07.390 align:start position:0%
that is turned on and llama 2 also uh
uses<01:42:05.679><c> this</c><01:42:05.880><c> option</c><01:42:06.800><c> and</c><01:42:06.880><c> that's</c><01:42:07.040><c> I</c><01:42:07.159><c> think</c>

01:42:07.390 --> 01:42:07.400 align:start position:0%
uses this option and that's I think
 

01:42:07.400 --> 01:42:08.629 align:start position:0%
uses this option and that's I think
everything<01:42:07.679><c> that</c><01:42:07.800><c> I</c><01:42:07.880><c> want</c><01:42:08.000><c> to</c><01:42:08.119><c> say</c><01:42:08.280><c> for</c><01:42:08.480><c> my</c>

01:42:08.629 --> 01:42:08.639 align:start position:0%
everything that I want to say for my
 

01:42:08.639 --> 01:42:10.430 align:start position:0%
everything that I want to say for my
preview<01:42:08.960><c> of</c><01:42:09.080><c> sentence</c><01:42:09.480><c> piece</c><01:42:09.719><c> and</c><01:42:09.840><c> how</c><01:42:10.000><c> it</c><01:42:10.080><c> is</c>

01:42:10.430 --> 01:42:10.440 align:start position:0%
preview of sentence piece and how it is
 

01:42:10.440 --> 01:42:13.109 align:start position:0%
preview of sentence piece and how it is
different<01:42:11.440><c> um</c><01:42:11.880><c> maybe</c><01:42:12.199><c> here</c><01:42:12.400><c> what</c><01:42:12.560><c> I've</c><01:42:12.760><c> done</c>

01:42:13.109 --> 01:42:13.119 align:start position:0%
different um maybe here what I've done
 

01:42:13.119 --> 01:42:16.709 align:start position:0%
different um maybe here what I've done
is<01:42:14.000><c> I</c><01:42:14.159><c> just</c><01:42:14.560><c> uh</c><01:42:14.679><c> put</c><01:42:14.880><c> in</c><01:42:15.040><c> the</c><01:42:15.199><c> Raw</c><01:42:16.159><c> protocol</c>

01:42:16.709 --> 01:42:16.719 align:start position:0%
is I just uh put in the Raw protocol
 

01:42:16.719 --> 01:42:19.830 align:start position:0%
is I just uh put in the Raw protocol
buffer<01:42:17.719><c> representation</c><01:42:18.440><c> basically</c><01:42:19.320><c> of</c><01:42:19.719><c> the</c>

01:42:19.830 --> 01:42:19.840 align:start position:0%
buffer representation basically of the
 

01:42:19.840 --> 01:42:22.870 align:start position:0%
buffer representation basically of the
tokenizer<01:42:20.400><c> the</c><01:42:21.000><c> too</c><01:42:21.280><c> trained</c><01:42:22.280><c> so</c><01:42:22.440><c> feel</c><01:42:22.679><c> free</c>

01:42:22.870 --> 01:42:22.880 align:start position:0%
tokenizer the too trained so feel free
 

01:42:22.880 --> 01:42:24.750 align:start position:0%
tokenizer the too trained so feel free
to<01:42:23.040><c> sort</c><01:42:23.239><c> of</c><01:42:23.440><c> Step</c><01:42:23.960><c> through</c><01:42:24.199><c> this</c><01:42:24.440><c> and</c><01:42:24.560><c> if</c><01:42:24.639><c> you</c>

01:42:24.750 --> 01:42:24.760 align:start position:0%
to sort of Step through this and if you
 

01:42:24.760 --> 01:42:26.990 align:start position:0%
to sort of Step through this and if you
would<01:42:24.960><c> like</c><01:42:25.480><c> uh</c><01:42:25.679><c> your</c><01:42:25.880><c> tokenization</c><01:42:26.520><c> to</c><01:42:26.679><c> look</c>

01:42:26.990 --> 01:42:27.000 align:start position:0%
would like uh your tokenization to look
 

01:42:27.000 --> 01:42:30.310 align:start position:0%
would like uh your tokenization to look
identical<01:42:27.480><c> to</c><01:42:27.719><c> that</c><01:42:27.920><c> of</c><01:42:28.280><c> the</c><01:42:28.480><c> meta</c><01:42:29.480><c> uh</c><01:42:29.599><c> llama</c><01:42:29.920><c> 2</c>

01:42:30.310 --> 01:42:30.320 align:start position:0%
identical to that of the meta uh llama 2
 

01:42:30.320 --> 01:42:31.669 align:start position:0%
identical to that of the meta uh llama 2
then<01:42:30.440><c> you</c><01:42:30.560><c> would</c><01:42:30.760><c> be</c><01:42:30.960><c> copy</c><01:42:31.239><c> pasting</c><01:42:31.520><c> these</c>

01:42:31.669 --> 01:42:31.679 align:start position:0%
then you would be copy pasting these
 

01:42:31.679 --> 01:42:34.750 align:start position:0%
then you would be copy pasting these
settings<01:42:32.000><c> as</c><01:42:32.119><c> I</c><01:42:32.280><c> tried</c><01:42:32.440><c> to</c><01:42:32.560><c> do</c><01:42:32.679><c> up</c><01:42:33.199><c> above</c><01:42:34.199><c> and</c>

01:42:34.750 --> 01:42:34.760 align:start position:0%
settings as I tried to do up above and
 

01:42:34.760 --> 01:42:36.950 align:start position:0%
settings as I tried to do up above and
uh<01:42:34.960><c> yeah</c><01:42:35.960><c> that's</c><01:42:36.280><c> I</c><01:42:36.360><c> think</c><01:42:36.480><c> that's</c><01:42:36.599><c> it</c><01:42:36.800><c> for</c>

01:42:36.950 --> 01:42:36.960 align:start position:0%
uh yeah that's I think that's it for
 

01:42:36.960 --> 01:42:38.870 align:start position:0%
uh yeah that's I think that's it for
this<01:42:37.119><c> section</c><01:42:37.760><c> I</c><01:42:37.840><c> think</c><01:42:38.000><c> my</c><01:42:38.119><c> summary</c><01:42:38.520><c> for</c>

01:42:38.870 --> 01:42:38.880 align:start position:0%
this section I think my summary for
 

01:42:38.880 --> 01:42:40.790 align:start position:0%
this section I think my summary for
sentence<01:42:39.239><c> piece</c><01:42:39.560><c> from</c><01:42:39.760><c> all</c><01:42:39.880><c> of</c><01:42:40.040><c> this</c><01:42:40.280><c> is</c>

01:42:40.790 --> 01:42:40.800 align:start position:0%
sentence piece from all of this is
 

01:42:40.800 --> 01:42:42.430 align:start position:0%
sentence piece from all of this is
number<01:42:41.040><c> one</c><01:42:41.400><c> I</c><01:42:41.639><c> think</c><01:42:41.800><c> that</c><01:42:41.920><c> there's</c><01:42:42.080><c> a</c><01:42:42.199><c> lot</c><01:42:42.320><c> of</c>

01:42:42.430 --> 01:42:42.440 align:start position:0%
number one I think that there's a lot of
 

01:42:42.440 --> 01:42:44.270 align:start position:0%
number one I think that there's a lot of
historical<01:42:42.840><c> baggage</c><01:42:43.159><c> in</c><01:42:43.280><c> sentence</c><01:42:43.599><c> piece</c><01:42:44.159><c> a</c>

01:42:44.270 --> 01:42:44.280 align:start position:0%
historical baggage in sentence piece a
 

01:42:44.280 --> 01:42:45.669 align:start position:0%
historical baggage in sentence piece a
lot<01:42:44.400><c> of</c><01:42:44.560><c> Concepts</c><01:42:45.040><c> that</c><01:42:45.199><c> I</c><01:42:45.360><c> think</c><01:42:45.520><c> are</c>

01:42:45.669 --> 01:42:45.679 align:start position:0%
lot of Concepts that I think are
 

01:42:45.679 --> 01:42:47.229 align:start position:0%
lot of Concepts that I think are
slightly<01:42:46.119><c> confusing</c><01:42:46.800><c> and</c><01:42:46.960><c> I</c><01:42:47.040><c> think</c>

01:42:47.229 --> 01:42:47.239 align:start position:0%
slightly confusing and I think
 

01:42:47.239 --> 01:42:49.390 align:start position:0%
slightly confusing and I think
potentially<01:42:47.960><c> um</c><01:42:48.159><c> contain</c><01:42:48.440><c> foot</c><01:42:48.719><c> guns</c><01:42:49.199><c> like</c>

01:42:49.390 --> 01:42:49.400 align:start position:0%
potentially um contain foot guns like
 

01:42:49.400 --> 01:42:50.790 align:start position:0%
potentially um contain foot guns like
this<01:42:49.599><c> concept</c><01:42:49.880><c> of</c><01:42:49.960><c> a</c><01:42:50.119><c> sentence</c><01:42:50.440><c> and</c><01:42:50.560><c> it's</c>

01:42:50.790 --> 01:42:50.800 align:start position:0%
this concept of a sentence and it's
 

01:42:50.800 --> 01:42:53.709 align:start position:0%
this concept of a sentence and it's
maximum<01:42:51.159><c> length</c><01:42:51.440><c> and</c><01:42:51.639><c> stuff</c><01:42:51.840><c> like</c><01:42:52.199><c> that</c><01:42:53.199><c> um</c>

01:42:53.709 --> 01:42:53.719 align:start position:0%
maximum length and stuff like that um
 

01:42:53.719 --> 01:42:55.870 align:start position:0%
maximum length and stuff like that um
otherwise<01:42:54.080><c> it</c><01:42:54.159><c> is</c><01:42:54.320><c> fairly</c><01:42:54.639><c> commonly</c><01:42:55.239><c> used</c><01:42:55.760><c> in</c>

01:42:55.870 --> 01:42:55.880 align:start position:0%
otherwise it is fairly commonly used in
 

01:42:55.880 --> 01:42:58.870 align:start position:0%
otherwise it is fairly commonly used in
the<01:42:56.320><c> industry</c><01:42:57.320><c> um</c><01:42:57.880><c> because</c><01:42:58.080><c> it</c><01:42:58.199><c> is</c><01:42:58.440><c> efficient</c>

01:42:58.870 --> 01:42:58.880 align:start position:0%
the industry um because it is efficient
 

01:42:58.880 --> 01:43:00.990 align:start position:0%
the industry um because it is efficient
and<01:42:59.040><c> can</c><01:42:59.159><c> do</c><01:42:59.280><c> both</c><01:42:59.440><c> training</c><01:42:59.679><c> and</c><01:43:00.000><c> inference</c>

01:43:00.990 --> 01:43:01.000 align:start position:0%
and can do both training and inference
 

01:43:01.000 --> 01:43:02.750 align:start position:0%
and can do both training and inference
uh<01:43:01.119><c> it</c><01:43:01.239><c> has</c><01:43:01.360><c> a</c><01:43:01.520><c> few</c><01:43:01.719><c> quirks</c><01:43:02.159><c> like</c><01:43:02.320><c> for</c><01:43:02.440><c> example</c>

01:43:02.750 --> 01:43:02.760 align:start position:0%
uh it has a few quirks like for example
 

01:43:02.760 --> 01:43:05.070 align:start position:0%
uh it has a few quirks like for example
un<01:43:03.080><c> token</c><01:43:03.400><c> must</c><01:43:03.719><c> exist</c><01:43:04.239><c> and</c><01:43:04.480><c> the</c><01:43:04.560><c> way</c><01:43:04.800><c> the</c><01:43:04.880><c> bite</c>

01:43:05.070 --> 01:43:05.080 align:start position:0%
un token must exist and the way the bite
 

01:43:05.080 --> 01:43:06.550 align:start position:0%
un token must exist and the way the bite
fallbacks<01:43:05.520><c> are</c><01:43:05.639><c> done</c><01:43:05.800><c> and</c><01:43:05.920><c> so</c><01:43:06.040><c> on</c><01:43:06.199><c> I</c><01:43:06.320><c> don't</c>

01:43:06.550 --> 01:43:06.560 align:start position:0%
fallbacks are done and so on I don't
 

01:43:06.560 --> 01:43:08.350 align:start position:0%
fallbacks are done and so on I don't
find<01:43:06.880><c> particularly</c><01:43:07.360><c> elegant</c><01:43:08.239><c> and</c>

01:43:08.350 --> 01:43:08.360 align:start position:0%
find particularly elegant and
 

01:43:08.360 --> 01:43:09.550 align:start position:0%
find particularly elegant and
unfortunately<01:43:08.880><c> I</c><01:43:08.960><c> have</c><01:43:09.040><c> to</c><01:43:09.159><c> say</c><01:43:09.280><c> it's</c><01:43:09.400><c> not</c>

01:43:09.550 --> 01:43:09.560 align:start position:0%
unfortunately I have to say it's not
 

01:43:09.560 --> 01:43:11.430 align:start position:0%
unfortunately I have to say it's not
very<01:43:09.719><c> well</c><01:43:09.920><c> documented</c><01:43:10.440><c> so</c><01:43:10.639><c> it</c><01:43:10.760><c> took</c><01:43:10.920><c> me</c><01:43:11.159><c> a</c><01:43:11.280><c> lot</c>

01:43:11.430 --> 01:43:11.440 align:start position:0%
very well documented so it took me a lot
 

01:43:11.440 --> 01:43:14.750 align:start position:0%
very well documented so it took me a lot
of<01:43:11.599><c> time</c><01:43:11.800><c> working</c><01:43:12.639><c> with</c><01:43:12.840><c> this</c><01:43:13.320><c> myself</c><01:43:14.320><c> um</c><01:43:14.560><c> and</c>

01:43:14.750 --> 01:43:14.760 align:start position:0%
of time working with this myself um and
 

01:43:14.760 --> 01:43:16.149 align:start position:0%
of time working with this myself um and
just<01:43:14.920><c> visualizing</c><01:43:15.480><c> things</c><01:43:15.639><c> and</c><01:43:15.760><c> trying</c><01:43:15.960><c> to</c>

01:43:16.149 --> 01:43:16.159 align:start position:0%
just visualizing things and trying to
 

01:43:16.159 --> 01:43:17.790 align:start position:0%
just visualizing things and trying to
really<01:43:16.560><c> understand</c><01:43:17.000><c> what</c><01:43:17.119><c> is</c><01:43:17.239><c> happening</c><01:43:17.599><c> here</c>

01:43:17.790 --> 01:43:17.800 align:start position:0%
really understand what is happening here
 

01:43:17.800 --> 01:43:19.270 align:start position:0%
really understand what is happening here
because<01:43:18.560><c> uh</c><01:43:18.679><c> the</c><01:43:18.800><c> documentation</c>

01:43:19.270 --> 01:43:19.280 align:start position:0%
because uh the documentation
 

01:43:19.280 --> 01:43:21.430 align:start position:0%
because uh the documentation
unfortunately<01:43:20.239><c> is</c><01:43:20.360><c> in</c><01:43:20.440><c> my</c><01:43:20.760><c> opion</c><01:43:21.040><c> not</c><01:43:21.239><c> not</c>

01:43:21.430 --> 01:43:21.440 align:start position:0%
unfortunately is in my opion not not
 

01:43:21.440 --> 01:43:24.669 align:start position:0%
unfortunately is in my opion not not
super<01:43:21.719><c> amazing</c><01:43:22.719><c> but</c><01:43:22.880><c> it</c><01:43:23.000><c> is</c><01:43:23.199><c> a</c><01:43:23.639><c> very</c><01:43:23.840><c> nice</c><01:43:24.040><c> repo</c>

01:43:24.669 --> 01:43:24.679 align:start position:0%
super amazing but it is a very nice repo
 

01:43:24.679 --> 01:43:26.149 align:start position:0%
super amazing but it is a very nice repo
that<01:43:25.040><c> is</c><01:43:25.239><c> available</c><01:43:25.599><c> to</c><01:43:25.719><c> you</c><01:43:25.840><c> if</c><01:43:25.920><c> you'd</c><01:43:26.080><c> like</c>

01:43:26.149 --> 01:43:26.159 align:start position:0%
that is available to you if you'd like
 

01:43:26.159 --> 01:43:28.189 align:start position:0%
that is available to you if you'd like
to<01:43:26.239><c> train</c><01:43:26.440><c> your</c><01:43:26.520><c> own</c><01:43:26.639><c> tokenizer</c><01:43:27.199><c> right</c><01:43:27.320><c> now</c>

01:43:28.189 --> 01:43:28.199 align:start position:0%
to train your own tokenizer right now
 

01:43:28.199 --> 01:43:29.629 align:start position:0%
to train your own tokenizer right now
okay<01:43:28.320><c> let</c><01:43:28.440><c> me</c><01:43:28.560><c> now</c><01:43:28.719><c> switch</c><01:43:29.000><c> gears</c><01:43:29.280><c> again</c><01:43:29.520><c> as</c>

01:43:29.629 --> 01:43:29.639 align:start position:0%
okay let me now switch gears again as
 

01:43:29.639 --> 01:43:31.709 align:start position:0%
okay let me now switch gears again as
we're<01:43:29.760><c> starting</c><01:43:30.000><c> to</c><01:43:30.119><c> slowly</c><01:43:30.480><c> wrap</c><01:43:30.719><c> up</c><01:43:30.920><c> here</c><01:43:31.639><c> I</c>

01:43:31.709 --> 01:43:31.719 align:start position:0%
we're starting to slowly wrap up here I
 

01:43:31.719 --> 01:43:33.350 align:start position:0%
we're starting to slowly wrap up here I
want<01:43:31.880><c> to</c><01:43:32.080><c> revisit</c><01:43:32.520><c> this</c><01:43:32.679><c> issue</c><01:43:32.880><c> in</c><01:43:32.960><c> a</c><01:43:33.080><c> bit</c><01:43:33.199><c> more</c>

01:43:33.350 --> 01:43:33.360 align:start position:0%
want to revisit this issue in a bit more
 

01:43:33.360 --> 01:43:35.310 align:start position:0%
want to revisit this issue in a bit more
detail<01:43:33.800><c> of</c><01:43:34.000><c> how</c><01:43:34.159><c> we</c><01:43:34.280><c> should</c><01:43:34.480><c> set</c><01:43:34.760><c> the</c><01:43:34.880><c> vocap</c>

01:43:35.310 --> 01:43:35.320 align:start position:0%
detail of how we should set the vocap
 

01:43:35.320 --> 01:43:36.189 align:start position:0%
detail of how we should set the vocap
size<01:43:35.639><c> and</c><01:43:35.719><c> what</c><01:43:35.800><c> are</c><01:43:35.920><c> some</c><01:43:36.000><c> of</c><01:43:36.080><c> the</c>

01:43:36.189 --> 01:43:36.199 align:start position:0%
size and what are some of the
 

01:43:36.199 --> 01:43:39.629 align:start position:0%
size and what are some of the
considerations<01:43:36.880><c> around</c><01:43:37.239><c> it</c><01:43:38.239><c> so</c><01:43:39.040><c> for</c><01:43:39.320><c> this</c><01:43:39.520><c> I'd</c>

01:43:39.629 --> 01:43:39.639 align:start position:0%
considerations around it so for this I'd
 

01:43:39.639 --> 01:43:40.830 align:start position:0%
considerations around it so for this I'd
like<01:43:39.760><c> to</c><01:43:39.880><c> go</c><01:43:40.040><c> back</c><01:43:40.159><c> to</c><01:43:40.320><c> the</c><01:43:40.520><c> model</c>

01:43:40.830 --> 01:43:40.840 align:start position:0%
like to go back to the model
 

01:43:40.840 --> 01:43:42.149 align:start position:0%
like to go back to the model
architecture<01:43:41.320><c> that</c><01:43:41.440><c> we</c><01:43:41.560><c> developed</c><01:43:41.920><c> in</c><01:43:42.000><c> the</c>

01:43:42.149 --> 01:43:42.159 align:start position:0%
architecture that we developed in the
 

01:43:42.159 --> 01:43:44.669 align:start position:0%
architecture that we developed in the
last<01:43:42.400><c> video</c><01:43:43.000><c> when</c><01:43:43.159><c> we</c><01:43:43.320><c> built</c><01:43:43.560><c> the</c><01:43:43.679><c> GPT</c><01:43:44.159><c> from</c>

01:43:44.669 --> 01:43:44.679 align:start position:0%
last video when we built the GPT from
 

01:43:44.679 --> 01:43:47.390 align:start position:0%
last video when we built the GPT from
scratch<01:43:45.679><c> so</c><01:43:45.920><c> this</c><01:43:46.119><c> here</c><01:43:46.520><c> was</c><01:43:46.960><c> uh</c><01:43:47.080><c> the</c><01:43:47.199><c> file</c>

01:43:47.390 --> 01:43:47.400 align:start position:0%
scratch so this here was uh the file
 

01:43:47.400 --> 01:43:49.070 align:start position:0%
scratch so this here was uh the file
that<01:43:47.520><c> we</c><01:43:47.679><c> built</c><01:43:47.880><c> in</c><01:43:47.960><c> the</c><01:43:48.080><c> previous</c><01:43:48.400><c> video</c><01:43:48.960><c> and</c>

01:43:49.070 --> 01:43:49.080 align:start position:0%
that we built in the previous video and
 

01:43:49.080 --> 01:43:51.310 align:start position:0%
that we built in the previous video and
we<01:43:49.199><c> defined</c><01:43:49.520><c> the</c><01:43:49.599><c> Transformer</c><01:43:50.119><c> model</c><01:43:50.520><c> and</c><01:43:50.760><c> and</c>

01:43:51.310 --> 01:43:51.320 align:start position:0%
we defined the Transformer model and and
 

01:43:51.320 --> 01:43:52.870 align:start position:0%
we defined the Transformer model and and
let's<01:43:51.560><c> specifically</c><01:43:51.960><c> look</c><01:43:52.080><c> at</c><01:43:52.199><c> Bap</c><01:43:52.599><c> size</c><01:43:52.760><c> and</c>

01:43:52.870 --> 01:43:52.880 align:start position:0%
let's specifically look at Bap size and
 

01:43:52.880 --> 01:43:55.189 align:start position:0%
let's specifically look at Bap size and
where<01:43:53.000><c> it</c><01:43:53.119><c> appears</c><01:43:53.400><c> in</c><01:43:53.599><c> this</c><01:43:53.840><c> file</c><01:43:54.760><c> so</c><01:43:54.920><c> here</c><01:43:55.040><c> we</c>

01:43:55.189 --> 01:43:55.199 align:start position:0%
where it appears in this file so here we
 

01:43:55.199 --> 01:43:58.149 align:start position:0%
where it appears in this file so here we
Define<01:43:55.440><c> the</c><01:43:55.520><c> voap</c><01:43:56.159><c> size</c><01:43:57.159><c> uh</c><01:43:57.520><c> at</c><01:43:57.719><c> this</c><01:43:57.880><c> time</c><01:43:58.080><c> it</c>

01:43:58.149 --> 01:43:58.159 align:start position:0%
Define the voap size uh at this time it
 

01:43:58.159 --> 01:43:59.950 align:start position:0%
Define the voap size uh at this time it
was<01:43:58.400><c> 65</c><01:43:59.000><c> or</c><01:43:59.080><c> something</c><01:43:59.320><c> like</c><01:43:59.440><c> that</c><01:43:59.639><c> extremely</c>

01:43:59.950 --> 01:43:59.960 align:start position:0%
was 65 or something like that extremely
 

01:43:59.960 --> 01:44:02.070 align:start position:0%
was 65 or something like that extremely
small<01:44:00.199><c> number</c><01:44:00.719><c> so</c><01:44:00.920><c> this</c><01:44:01.040><c> will</c><01:44:01.239><c> grow</c><01:44:01.639><c> much</c>

01:44:02.070 --> 01:44:02.080 align:start position:0%
small number so this will grow much
 

01:44:02.080 --> 01:44:04.270 align:start position:0%
small number so this will grow much
larger<01:44:03.080><c> you'll</c><01:44:03.239><c> see</c><01:44:03.400><c> that</c><01:44:03.560><c> Bap</c><01:44:03.880><c> size</c><01:44:04.080><c> doesn't</c>

01:44:04.270 --> 01:44:04.280 align:start position:0%
larger you'll see that Bap size doesn't
 

01:44:04.280 --> 01:44:06.149 align:start position:0%
larger you'll see that Bap size doesn't
come<01:44:04.400><c> up</c><01:44:04.560><c> too</c><01:44:04.719><c> much</c><01:44:04.960><c> in</c><01:44:05.119><c> most</c><01:44:05.280><c> of</c><01:44:05.440><c> these</c><01:44:05.599><c> layers</c>

01:44:06.149 --> 01:44:06.159 align:start position:0%
come up too much in most of these layers
 

01:44:06.159 --> 01:44:08.510 align:start position:0%
come up too much in most of these layers
the<01:44:06.280><c> only</c><01:44:06.880><c> place</c><01:44:07.119><c> that</c><01:44:07.239><c> it</c><01:44:07.360><c> comes</c><01:44:07.560><c> up</c><01:44:07.679><c> to</c><01:44:08.199><c> is</c><01:44:08.320><c> in</c>

01:44:08.510 --> 01:44:08.520 align:start position:0%
the only place that it comes up to is in
 

01:44:08.520 --> 01:44:11.470 align:start position:0%
the only place that it comes up to is in
exactly<01:44:09.000><c> these</c><01:44:09.199><c> two</c><01:44:09.440><c> places</c><01:44:09.960><c> here</c><01:44:10.960><c> so</c><01:44:11.239><c> when</c><01:44:11.360><c> we</c>

01:44:11.470 --> 01:44:11.480 align:start position:0%
exactly these two places here so when we
 

01:44:11.480 --> 01:44:13.550 align:start position:0%
exactly these two places here so when we
Define<01:44:11.760><c> the</c><01:44:11.880><c> language</c><01:44:12.239><c> model</c><01:44:13.239><c> there's</c><01:44:13.440><c> the</c>

01:44:13.550 --> 01:44:13.560 align:start position:0%
Define the language model there's the
 

01:44:13.560 --> 01:44:15.790 align:start position:0%
Define the language model there's the
token<01:44:13.840><c> embedding</c><01:44:14.320><c> table</c><01:44:15.320><c> which</c><01:44:15.480><c> is</c><01:44:15.679><c> this</c>

01:44:15.790 --> 01:44:15.800 align:start position:0%
token embedding table which is this
 

01:44:15.800 --> 01:44:18.070 align:start position:0%
token embedding table which is this
two-dimensional<01:44:16.440><c> array</c><01:44:17.320><c> where</c><01:44:17.480><c> the</c><01:44:17.639><c> vocap</c>

01:44:18.070 --> 01:44:18.080 align:start position:0%
two-dimensional array where the vocap
 

01:44:18.080 --> 01:44:21.189 align:start position:0%
two-dimensional array where the vocap
size<01:44:18.280><c> is</c><01:44:18.400><c> basically</c><01:44:18.719><c> the</c><01:44:18.840><c> number</c><01:44:19.040><c> of</c><01:44:19.599><c> rows</c><01:44:20.719><c> and</c>

01:44:21.189 --> 01:44:21.199 align:start position:0%
size is basically the number of rows and
 

01:44:21.199 --> 01:44:23.910 align:start position:0%
size is basically the number of rows and
uh<01:44:21.440><c> each</c><01:44:21.960><c> vocabulary</c><01:44:22.639><c> element</c><01:44:23.080><c> each</c><01:44:23.280><c> token</c>

01:44:23.910 --> 01:44:23.920 align:start position:0%
uh each vocabulary element each token
 

01:44:23.920 --> 01:44:25.910 align:start position:0%
uh each vocabulary element each token
has<01:44:24.040><c> a</c><01:44:24.239><c> vector</c><01:44:25.000><c> that</c><01:44:25.119><c> we're</c><01:44:25.280><c> going</c><01:44:25.400><c> to</c><01:44:25.520><c> train</c>

01:44:25.910 --> 01:44:25.920 align:start position:0%
has a vector that we're going to train
 

01:44:25.920 --> 01:44:27.950 align:start position:0%
has a vector that we're going to train
using<01:44:26.159><c> back</c><01:44:26.400><c> propagation</c><01:44:27.199><c> that</c><01:44:27.360><c> Vector</c><01:44:27.639><c> is</c><01:44:27.760><c> of</c>

01:44:27.950 --> 01:44:27.960 align:start position:0%
using back propagation that Vector is of
 

01:44:27.960 --> 01:44:29.430 align:start position:0%
using back propagation that Vector is of
size<01:44:28.199><c> and</c><01:44:28.400><c> embed</c><01:44:28.880><c> which</c><01:44:28.960><c> is</c><01:44:29.159><c> number</c><01:44:29.320><c> of</c>

01:44:29.430 --> 01:44:29.440 align:start position:0%
size and embed which is number of
 

01:44:29.440 --> 01:44:31.589 align:start position:0%
size and embed which is number of
channels<01:44:29.800><c> in</c><01:44:29.880><c> the</c><01:44:30.440><c> Transformer</c><01:44:31.440><c> and</c>

01:44:31.589 --> 01:44:31.599 align:start position:0%
channels in the Transformer and
 

01:44:31.599 --> 01:44:33.669 align:start position:0%
channels in the Transformer and
basically<01:44:31.960><c> as</c><01:44:32.119><c> voap</c><01:44:32.520><c> size</c><01:44:32.719><c> increases</c><01:44:33.520><c> this</c>

01:44:33.669 --> 01:44:33.679 align:start position:0%
basically as voap size increases this
 

01:44:33.679 --> 01:44:35.669 align:start position:0%
basically as voap size increases this
embedding<01:44:34.080><c> table</c><01:44:34.560><c> as</c><01:44:34.639><c> I</c><01:44:34.760><c> mentioned</c><01:44:35.239><c> earlier</c>

01:44:35.669 --> 01:44:35.679 align:start position:0%
embedding table as I mentioned earlier
 

01:44:35.679 --> 01:44:36.990 align:start position:0%
embedding table as I mentioned earlier
is<01:44:35.800><c> going</c><01:44:35.920><c> to</c><01:44:36.080><c> also</c><01:44:36.280><c> grow</c><01:44:36.599><c> we're</c><01:44:36.719><c> going</c><01:44:36.800><c> to</c><01:44:36.880><c> be</c>

01:44:36.990 --> 01:44:37.000 align:start position:0%
is going to also grow we're going to be
 

01:44:37.000 --> 01:44:39.709 align:start position:0%
is going to also grow we're going to be
adding<01:44:37.639><c> rows</c><01:44:38.639><c> in</c><01:44:38.800><c> addition</c><01:44:39.080><c> to</c><01:44:39.280><c> that</c><01:44:39.480><c> at</c><01:44:39.599><c> the</c>

01:44:39.709 --> 01:44:39.719 align:start position:0%
adding rows in addition to that at the
 

01:44:39.719 --> 01:44:41.870 align:start position:0%
adding rows in addition to that at the
end<01:44:39.920><c> of</c><01:44:40.000><c> the</c><01:44:40.119><c> Transformer</c><01:44:41.000><c> there's</c><01:44:41.280><c> this</c><01:44:41.440><c> LM</c>

01:44:41.870 --> 01:44:41.880 align:start position:0%
end of the Transformer there's this LM
 

01:44:41.880 --> 01:44:44.229 align:start position:0%
end of the Transformer there's this LM
head<01:44:42.040><c> layer</c><01:44:42.440><c> which</c><01:44:42.560><c> is</c><01:44:42.639><c> a</c><01:44:42.760><c> linear</c><01:44:43.159><c> layer</c><01:44:44.159><c> and</c>

01:44:44.229 --> 01:44:44.239 align:start position:0%
head layer which is a linear layer and
 

01:44:44.239 --> 01:44:46.270 align:start position:0%
head layer which is a linear layer and
you'll<01:44:44.400><c> notice</c><01:44:44.800><c> that</c><01:44:45.040><c> that</c><01:44:45.320><c> layer</c><01:44:45.719><c> is</c><01:44:45.840><c> used</c><01:44:46.159><c> at</c>

01:44:46.270 --> 01:44:46.280 align:start position:0%
you'll notice that that layer is used at
 

01:44:46.280 --> 01:44:48.629 align:start position:0%
you'll notice that that layer is used at
the<01:44:46.440><c> very</c><01:44:46.639><c> end</c><01:44:46.920><c> to</c><01:44:47.040><c> produce</c><01:44:47.320><c> the</c><01:44:47.520><c> logits</c><01:44:48.520><c> uh</c>

01:44:48.629 --> 01:44:48.639 align:start position:0%
the very end to produce the logits uh
 

01:44:48.639 --> 01:44:49.950 align:start position:0%
the very end to produce the logits uh
which<01:44:48.800><c> become</c><01:44:49.040><c> the</c><01:44:49.199><c> probabilities</c><01:44:49.719><c> for</c><01:44:49.840><c> the</c>

01:44:49.950 --> 01:44:49.960 align:start position:0%
which become the probabilities for the
 

01:44:49.960 --> 01:44:51.750 align:start position:0%
which become the probabilities for the
next<01:44:50.119><c> token</c><01:44:50.360><c> in</c><01:44:50.639><c> sequence</c><01:44:51.480><c> and</c><01:44:51.560><c> so</c>

01:44:51.750 --> 01:44:51.760 align:start position:0%
next token in sequence and so
 

01:44:51.760 --> 01:44:53.910 align:start position:0%
next token in sequence and so
intuitively<01:44:52.719><c> we're</c><01:44:52.920><c> trying</c><01:44:53.119><c> to</c><01:44:53.320><c> produce</c><01:44:53.719><c> a</c>

01:44:53.910 --> 01:44:53.920 align:start position:0%
intuitively we're trying to produce a
 

01:44:53.920 --> 01:44:56.229 align:start position:0%
intuitively we're trying to produce a
probability<01:44:54.480><c> for</c><01:44:55.040><c> every</c><01:44:55.280><c> single</c><01:44:55.679><c> token</c><01:44:56.040><c> that</c>

01:44:56.229 --> 01:44:56.239 align:start position:0%
probability for every single token that
 

01:44:56.239 --> 01:44:58.830 align:start position:0%
probability for every single token that
might<01:44:56.480><c> come</c><01:44:56.760><c> next</c><01:44:57.239><c> at</c><01:44:57.440><c> every</c><01:44:57.760><c> point</c><01:44:58.119><c> in</c><01:44:58.280><c> time</c>

01:44:58.830 --> 01:44:58.840 align:start position:0%
might come next at every point in time
 

01:44:58.840 --> 01:45:01.070 align:start position:0%
might come next at every point in time
of<01:44:59.000><c> that</c><01:44:59.360><c> Transformer</c><01:45:00.360><c> and</c><01:45:00.520><c> if</c><01:45:00.639><c> we</c><01:45:00.800><c> have</c><01:45:00.920><c> more</c>

01:45:01.070 --> 01:45:01.080 align:start position:0%
of that Transformer and if we have more
 

01:45:01.080 --> 01:45:02.669 align:start position:0%
of that Transformer and if we have more
and<01:45:01.199><c> more</c><01:45:01.400><c> tokens</c><01:45:01.880><c> we</c><01:45:02.000><c> need</c><01:45:02.119><c> to</c><01:45:02.239><c> produce</c><01:45:02.560><c> more</c>

01:45:02.669 --> 01:45:02.679 align:start position:0%
and more tokens we need to produce more
 

01:45:02.679 --> 01:45:04.910 align:start position:0%
and more tokens we need to produce more
and<01:45:02.840><c> more</c><01:45:03.239><c> probabilities</c><01:45:04.239><c> so</c><01:45:04.440><c> every</c><01:45:04.639><c> single</c>

01:45:04.910 --> 01:45:04.920 align:start position:0%
and more probabilities so every single
 

01:45:04.920 --> 01:45:06.189 align:start position:0%
and more probabilities so every single
token<01:45:05.280><c> is</c><01:45:05.440><c> going</c><01:45:05.560><c> to</c><01:45:05.719><c> introduce</c><01:45:06.080><c> an</c>

01:45:06.189 --> 01:45:06.199 align:start position:0%
token is going to introduce an
 

01:45:06.199 --> 01:45:08.149 align:start position:0%
token is going to introduce an
additional<01:45:06.679><c> dot</c><01:45:07.000><c> product</c><01:45:07.639><c> that</c><01:45:07.760><c> we</c><01:45:07.920><c> have</c><01:45:08.000><c> to</c>

01:45:08.149 --> 01:45:08.159 align:start position:0%
additional dot product that we have to
 

01:45:08.159 --> 01:45:10.189 align:start position:0%
additional dot product that we have to
do<01:45:08.520><c> here</c><01:45:08.679><c> in</c><01:45:08.800><c> this</c><01:45:08.960><c> linear</c><01:45:09.320><c> layer</c><01:45:09.800><c> for</c><01:45:10.040><c> this</c>

01:45:10.189 --> 01:45:10.199 align:start position:0%
do here in this linear layer for this
 

01:45:10.199 --> 01:45:11.430 align:start position:0%
do here in this linear layer for this
final<01:45:10.480><c> layer</c><01:45:10.719><c> in</c><01:45:10.760><c> a</c>

01:45:11.430 --> 01:45:11.440 align:start position:0%
final layer in a
 

01:45:11.440 --> 01:45:14.550 align:start position:0%
final layer in a
Transformer<01:45:12.440><c> so</c><01:45:13.119><c> why</c><01:45:13.360><c> can't</c><01:45:13.639><c> vocap</c><01:45:14.040><c> size</c><01:45:14.280><c> be</c>

01:45:14.550 --> 01:45:14.560 align:start position:0%
Transformer so why can't vocap size be
 

01:45:14.560 --> 01:45:16.510 align:start position:0%
Transformer so why can't vocap size be
infinite<01:45:15.280><c> why</c><01:45:15.440><c> can't</c><01:45:15.599><c> we</c><01:45:15.719><c> grow</c><01:45:15.960><c> to</c><01:45:16.119><c> Infinity</c>

01:45:16.510 --> 01:45:16.520 align:start position:0%
infinite why can't we grow to Infinity
 

01:45:16.520 --> 01:45:18.189 align:start position:0%
infinite why can't we grow to Infinity
well<01:45:16.639><c> number</c><01:45:16.880><c> one</c><01:45:17.360><c> your</c><01:45:17.560><c> token</c><01:45:17.800><c> embedding</c>

01:45:18.189 --> 01:45:18.199 align:start position:0%
well number one your token embedding
 

01:45:18.199 --> 01:45:21.550 align:start position:0%
well number one your token embedding
table<01:45:18.440><c> is</c><01:45:18.599><c> going</c><01:45:18.760><c> to</c><01:45:19.480><c> grow</c><01:45:20.679><c> uh</c><01:45:20.840><c> your</c><01:45:21.159><c> linear</c>

01:45:21.550 --> 01:45:21.560 align:start position:0%
table is going to grow uh your linear
 

01:45:21.560 --> 01:45:23.589 align:start position:0%
table is going to grow uh your linear
layer<01:45:21.840><c> is</c><01:45:21.960><c> going</c><01:45:22.119><c> to</c><01:45:22.239><c> grow</c><01:45:23.000><c> so</c><01:45:23.239><c> we're</c><01:45:23.400><c> going</c><01:45:23.520><c> to</c>

01:45:23.589 --> 01:45:23.599 align:start position:0%
layer is going to grow so we're going to
 

01:45:23.599 --> 01:45:25.109 align:start position:0%
layer is going to grow so we're going to
be<01:45:23.679><c> doing</c><01:45:23.880><c> a</c><01:45:24.000><c> lot</c><01:45:24.119><c> more</c><01:45:24.320><c> computation</c><01:45:24.880><c> here</c>

01:45:25.109 --> 01:45:25.119 align:start position:0%
be doing a lot more computation here
 

01:45:25.119 --> 01:45:26.550 align:start position:0%
be doing a lot more computation here
because<01:45:25.320><c> this</c><01:45:25.480><c> LM</c><01:45:25.840><c> head</c><01:45:26.000><c> layer</c><01:45:26.239><c> will</c><01:45:26.360><c> become</c>

01:45:26.550 --> 01:45:26.560 align:start position:0%
because this LM head layer will become
 

01:45:26.560 --> 01:45:29.109 align:start position:0%
because this LM head layer will become
more<01:45:26.719><c> computational</c><01:45:27.679><c> expensive</c><01:45:28.679><c> number</c><01:45:28.880><c> two</c>

01:45:29.109 --> 01:45:29.119 align:start position:0%
more computational expensive number two
 

01:45:29.119 --> 01:45:30.830 align:start position:0%
more computational expensive number two
because<01:45:29.320><c> we</c><01:45:29.400><c> have</c><01:45:29.520><c> more</c><01:45:29.760><c> parameters</c><01:45:30.560><c> we</c><01:45:30.679><c> could</c>

01:45:30.830 --> 01:45:30.840 align:start position:0%
because we have more parameters we could
 

01:45:30.840 --> 01:45:33.430 align:start position:0%
because we have more parameters we could
be<01:45:31.000><c> worried</c><01:45:31.520><c> that</c><01:45:31.800><c> we</c><01:45:31.920><c> are</c><01:45:32.080><c> going</c><01:45:32.239><c> to</c><01:45:32.360><c> be</c><01:45:32.560><c> under</c>

01:45:33.430 --> 01:45:33.440 align:start position:0%
be worried that we are going to be under
 

01:45:33.440 --> 01:45:35.189 align:start position:0%
be worried that we are going to be under
trining<01:45:34.199><c> some</c><01:45:34.360><c> of</c><01:45:34.480><c> these</c>

01:45:35.189 --> 01:45:35.199 align:start position:0%
trining some of these
 

01:45:35.199 --> 01:45:37.390 align:start position:0%
trining some of these
parameters<01:45:36.199><c> so</c><01:45:36.360><c> intuitively</c><01:45:37.040><c> if</c><01:45:37.119><c> you</c><01:45:37.239><c> have</c><01:45:37.320><c> a</c>

01:45:37.390 --> 01:45:37.400 align:start position:0%
parameters so intuitively if you have a
 

01:45:37.400 --> 01:45:38.950 align:start position:0%
parameters so intuitively if you have a
very<01:45:37.560><c> large</c><01:45:37.800><c> vocabulary</c><01:45:38.280><c> size</c><01:45:38.520><c> say</c><01:45:38.639><c> we</c><01:45:38.760><c> have</c><01:45:38.840><c> a</c>

01:45:38.950 --> 01:45:38.960 align:start position:0%
very large vocabulary size say we have a
 

01:45:38.960 --> 01:45:41.310 align:start position:0%
very large vocabulary size say we have a
million<01:45:39.800><c> uh</c><01:45:39.920><c> tokens</c><01:45:40.760><c> then</c><01:45:40.920><c> every</c><01:45:41.080><c> one</c><01:45:41.199><c> of</c>

01:45:41.310 --> 01:45:41.320 align:start position:0%
million uh tokens then every one of
 

01:45:41.320 --> 01:45:42.669 align:start position:0%
million uh tokens then every one of
these<01:45:41.480><c> tokens</c><01:45:41.800><c> is</c><01:45:41.920><c> going</c><01:45:42.040><c> to</c><01:45:42.159><c> come</c><01:45:42.280><c> up</c><01:45:42.480><c> more</c>

01:45:42.669 --> 01:45:42.679 align:start position:0%
these tokens is going to come up more
 

01:45:42.679 --> 01:45:45.030 align:start position:0%
these tokens is going to come up more
and<01:45:42.800><c> more</c><01:45:43.080><c> rarely</c><01:45:43.800><c> in</c><01:45:43.960><c> the</c><01:45:44.119><c> training</c><01:45:44.520><c> data</c>

01:45:45.030 --> 01:45:45.040 align:start position:0%
and more rarely in the training data
 

01:45:45.040 --> 01:45:46.510 align:start position:0%
and more rarely in the training data
because<01:45:45.239><c> there's</c><01:45:45.440><c> a</c><01:45:45.599><c> lot</c><01:45:45.800><c> more</c><01:45:45.960><c> other</c><01:45:46.199><c> tokens</c>

01:45:46.510 --> 01:45:46.520 align:start position:0%
because there's a lot more other tokens
 

01:45:46.520 --> 01:45:48.550 align:start position:0%
because there's a lot more other tokens
all<01:45:46.639><c> over</c><01:45:46.840><c> the</c><01:45:47.000><c> place</c><01:45:47.840><c> and</c><01:45:47.960><c> so</c><01:45:48.159><c> we're</c><01:45:48.320><c> going</c><01:45:48.440><c> to</c>

01:45:48.550 --> 01:45:48.560 align:start position:0%
all over the place and so we're going to
 

01:45:48.560 --> 01:45:50.990 align:start position:0%
all over the place and so we're going to
be<01:45:48.639><c> seeing</c><01:45:48.920><c> fewer</c><01:45:49.239><c> and</c><01:45:49.400><c> fewer</c><01:45:49.800><c> examples</c><01:45:50.880><c> uh</c>

01:45:50.990 --> 01:45:51.000 align:start position:0%
be seeing fewer and fewer examples uh
 

01:45:51.000 --> 01:45:53.270 align:start position:0%
be seeing fewer and fewer examples uh
for<01:45:51.239><c> each</c><01:45:51.480><c> individual</c><01:45:52.040><c> token</c><01:45:52.880><c> and</c><01:45:53.000><c> you</c><01:45:53.119><c> might</c>

01:45:53.270 --> 01:45:53.280 align:start position:0%
for each individual token and you might
 

01:45:53.280 --> 01:45:54.990 align:start position:0%
for each individual token and you might
be<01:45:53.400><c> worried</c><01:45:53.719><c> that</c><01:45:53.920><c> basically</c><01:45:54.320><c> the</c><01:45:54.560><c> vectors</c>

01:45:54.990 --> 01:45:55.000 align:start position:0%
be worried that basically the vectors
 

01:45:55.000 --> 01:45:56.270 align:start position:0%
be worried that basically the vectors
associated<01:45:55.440><c> with</c><01:45:55.560><c> every</c><01:45:55.719><c> token</c><01:45:56.000><c> will</c><01:45:56.119><c> be</c>

01:45:56.270 --> 01:45:56.280 align:start position:0%
associated with every token will be
 

01:45:56.280 --> 01:45:58.270 align:start position:0%
associated with every token will be
undertrained<01:45:57.000><c> as</c><01:45:57.080><c> a</c><01:45:57.239><c> result</c><01:45:57.760><c> because</c><01:45:58.119><c> they</c>

01:45:58.270 --> 01:45:58.280 align:start position:0%
undertrained as a result because they
 

01:45:58.280 --> 01:45:59.910 align:start position:0%
undertrained as a result because they
just<01:45:58.480><c> don't</c><01:45:58.679><c> come</c><01:45:58.800><c> up</c><01:45:58.920><c> too</c><01:45:59.159><c> often</c><01:45:59.679><c> and</c><01:45:59.800><c> they</c>

01:45:59.910 --> 01:45:59.920 align:start position:0%
just don't come up too often and they
 

01:45:59.920 --> 01:46:00.950 align:start position:0%
just don't come up too often and they
don't<01:46:00.080><c> participate</c><01:46:00.480><c> in</c><01:46:00.560><c> the</c><01:46:00.679><c> forward</c>

01:46:00.950 --> 01:46:00.960 align:start position:0%
don't participate in the forward
 

01:46:00.960 --> 01:46:03.189 align:start position:0%
don't participate in the forward
backward<01:46:01.400><c> pass</c><01:46:02.400><c> in</c><01:46:02.560><c> addition</c><01:46:02.800><c> to</c><01:46:02.960><c> that</c><01:46:03.080><c> as</c>

01:46:03.189 --> 01:46:03.199 align:start position:0%
backward pass in addition to that as
 

01:46:03.199 --> 01:46:04.870 align:start position:0%
backward pass in addition to that as
your<01:46:03.320><c> vocab</c><01:46:03.679><c> size</c><01:46:03.880><c> grows</c><01:46:04.480><c> you're</c><01:46:04.639><c> going</c><01:46:04.760><c> to</c>

01:46:04.870 --> 01:46:04.880 align:start position:0%
your vocab size grows you're going to
 

01:46:04.880 --> 01:46:07.030 align:start position:0%
your vocab size grows you're going to
start<01:46:05.080><c> shrinking</c><01:46:05.560><c> your</c><01:46:05.719><c> sequences</c><01:46:06.239><c> a</c><01:46:06.480><c> lot</c>

01:46:07.030 --> 01:46:07.040 align:start position:0%
start shrinking your sequences a lot
 

01:46:07.040 --> 01:46:09.310 align:start position:0%
start shrinking your sequences a lot
right<01:46:07.760><c> and</c><01:46:07.920><c> that's</c><01:46:08.119><c> really</c><01:46:08.360><c> nice</c><01:46:08.679><c> because</c>

01:46:09.310 --> 01:46:09.320 align:start position:0%
right and that's really nice because
 

01:46:09.320 --> 01:46:10.109 align:start position:0%
right and that's really nice because
that<01:46:09.440><c> means</c><01:46:09.639><c> that</c><01:46:09.719><c> we're</c><01:46:09.840><c> going</c><01:46:09.920><c> to</c><01:46:10.000><c> be</c>

01:46:10.109 --> 01:46:10.119 align:start position:0%
that means that we're going to be
 

01:46:10.119 --> 01:46:11.990 align:start position:0%
that means that we're going to be
attending<01:46:10.480><c> to</c><01:46:10.639><c> more</c><01:46:10.840><c> and</c><01:46:11.000><c> more</c><01:46:11.239><c> text</c><01:46:11.840><c> so</c>

01:46:11.990 --> 01:46:12.000 align:start position:0%
attending to more and more text so
 

01:46:12.000 --> 01:46:13.589 align:start position:0%
attending to more and more text so
that's<01:46:12.239><c> nice</c><01:46:12.920><c> but</c><01:46:13.080><c> also</c><01:46:13.239><c> you</c><01:46:13.360><c> might</c><01:46:13.520><c> be</c>

01:46:13.589 --> 01:46:13.599 align:start position:0%
that's nice but also you might be
 

01:46:13.599 --> 01:46:15.910 align:start position:0%
that's nice but also you might be
worrying<01:46:13.960><c> that</c><01:46:14.119><c> two</c><01:46:14.480><c> large</c><01:46:14.880><c> of</c><01:46:15.119><c> chunks</c><01:46:15.679><c> are</c>

01:46:15.910 --> 01:46:15.920 align:start position:0%
worrying that two large of chunks are
 

01:46:15.920 --> 01:46:18.550 align:start position:0%
worrying that two large of chunks are
being<01:46:16.159><c> squished</c><01:46:16.679><c> into</c><01:46:16.920><c> single</c><01:46:17.280><c> tokens</c><01:46:18.199><c> and</c><01:46:18.320><c> so</c>

01:46:18.550 --> 01:46:18.560 align:start position:0%
being squished into single tokens and so
 

01:46:18.560 --> 01:46:20.709 align:start position:0%
being squished into single tokens and so
the<01:46:18.679><c> model</c><01:46:19.040><c> just</c><01:46:19.159><c> doesn't</c><01:46:19.480><c> have</c><01:46:19.679><c> as</c><01:46:19.840><c> much</c><01:46:20.599><c> of</c>

01:46:20.709 --> 01:46:20.719 align:start position:0%
the model just doesn't have as much of
 

01:46:20.719 --> 01:46:25.070 align:start position:0%
the model just doesn't have as much of
time<01:46:20.880><c> to</c><01:46:21.119><c> think</c><01:46:22.000><c> per</c><01:46:22.760><c> sort</c><01:46:23.000><c> of</c><01:46:23.760><c> um</c><01:46:24.360><c> some</c><01:46:24.880><c> number</c>

01:46:25.070 --> 01:46:25.080 align:start position:0%
time to think per sort of um some number
 

01:46:25.080 --> 01:46:26.669 align:start position:0%
time to think per sort of um some number
of<01:46:25.239><c> characters</c><01:46:25.639><c> in</c><01:46:25.719><c> the</c><01:46:25.920><c> text</c><01:46:26.280><c> or</c><01:46:26.440><c> you</c><01:46:26.560><c> can</c>

01:46:26.669 --> 01:46:26.679 align:start position:0%
of characters in the text or you can
 

01:46:26.679 --> 01:46:28.070 align:start position:0%
of characters in the text or you can
think<01:46:26.800><c> about</c><01:46:26.960><c> it</c><01:46:27.119><c> that</c><01:46:27.239><c> way</c><01:46:27.440><c> right</c><01:46:27.920><c> so</c>

01:46:28.070 --> 01:46:28.080 align:start position:0%
think about it that way right so
 

01:46:28.080 --> 01:46:29.470 align:start position:0%
think about it that way right so
basically<01:46:28.480><c> we're</c><01:46:28.639><c> squishing</c><01:46:29.119><c> too</c><01:46:29.280><c> much</c>

01:46:29.470 --> 01:46:29.480 align:start position:0%
basically we're squishing too much
 

01:46:29.480 --> 01:46:31.629 align:start position:0%
basically we're squishing too much
information<01:46:29.840><c> into</c><01:46:30.040><c> a</c><01:46:30.159><c> single</c><01:46:30.440><c> token</c><01:46:31.159><c> and</c><01:46:31.320><c> then</c>

01:46:31.629 --> 01:46:31.639 align:start position:0%
information into a single token and then
 

01:46:31.639 --> 01:46:33.030 align:start position:0%
information into a single token and then
the<01:46:31.719><c> forward</c><01:46:32.119><c> pass</c><01:46:32.280><c> of</c><01:46:32.360><c> the</c><01:46:32.440><c> Transformer</c><01:46:32.880><c> is</c>

01:46:33.030 --> 01:46:33.040 align:start position:0%
the forward pass of the Transformer is
 

01:46:33.040 --> 01:46:34.390 align:start position:0%
the forward pass of the Transformer is
not<01:46:33.239><c> enough</c><01:46:33.440><c> to</c><01:46:33.639><c> actually</c><01:46:33.920><c> process</c><01:46:34.239><c> that</c>

01:46:34.390 --> 01:46:34.400 align:start position:0%
not enough to actually process that
 

01:46:34.400 --> 01:46:36.430 align:start position:0%
not enough to actually process that
information<01:46:35.040><c> appropriately</c><01:46:36.040><c> and</c><01:46:36.119><c> so</c><01:46:36.280><c> these</c>

01:46:36.430 --> 01:46:36.440 align:start position:0%
information appropriately and so these
 

01:46:36.440 --> 01:46:37.470 align:start position:0%
information appropriately and so these
are<01:46:36.560><c> some</c><01:46:36.639><c> of</c><01:46:36.760><c> the</c><01:46:36.840><c> considerations</c><01:46:37.320><c> you're</c>

01:46:37.470 --> 01:46:37.480 align:start position:0%
are some of the considerations you're
 

01:46:37.480 --> 01:46:38.629 align:start position:0%
are some of the considerations you're
thinking<01:46:37.719><c> about</c><01:46:37.920><c> when</c><01:46:38.040><c> you're</c><01:46:38.199><c> designing</c><01:46:38.520><c> the</c>

01:46:38.629 --> 01:46:38.639 align:start position:0%
thinking about when you're designing the
 

01:46:38.639 --> 01:46:40.629 align:start position:0%
thinking about when you're designing the
vocab<01:46:39.080><c> size</c><01:46:39.719><c> as</c><01:46:39.800><c> I</c><01:46:39.920><c> mentioned</c><01:46:40.199><c> this</c><01:46:40.280><c> is</c><01:46:40.400><c> mostly</c>

01:46:40.629 --> 01:46:40.639 align:start position:0%
vocab size as I mentioned this is mostly
 

01:46:40.639 --> 01:46:42.870 align:start position:0%
vocab size as I mentioned this is mostly
an<01:46:40.800><c> empirical</c><01:46:41.280><c> hyperparameter</c><01:46:42.280><c> and</c><01:46:42.440><c> it</c><01:46:42.599><c> seems</c>

01:46:42.870 --> 01:46:42.880 align:start position:0%
an empirical hyperparameter and it seems
 

01:46:42.880 --> 01:46:44.229 align:start position:0%
an empirical hyperparameter and it seems
like<01:46:43.040><c> in</c><01:46:43.199><c> state-of-the-art</c><01:46:43.719><c> architectures</c>

01:46:44.229 --> 01:46:44.239 align:start position:0%
like in state-of-the-art architectures
 

01:46:44.239 --> 01:46:46.750 align:start position:0%
like in state-of-the-art architectures
today<01:46:44.880><c> this</c><01:46:45.000><c> is</c><01:46:45.159><c> usually</c><01:46:45.440><c> in</c><01:46:45.560><c> the</c><01:46:45.760><c> high</c><01:46:46.040><c> 10,000</c>

01:46:46.750 --> 01:46:46.760 align:start position:0%
today this is usually in the high 10,000
 

01:46:46.760 --> 01:46:49.350 align:start position:0%
today this is usually in the high 10,000
or<01:46:46.960><c> somewhere</c><01:46:47.239><c> around</c><01:46:47.599><c> 100,000</c><01:46:48.360><c> today</c><01:46:49.239><c> and</c>

01:46:49.350 --> 01:46:49.360 align:start position:0%
or somewhere around 100,000 today and
 

01:46:49.360 --> 01:46:50.870 align:start position:0%
or somewhere around 100,000 today and
the<01:46:49.480><c> next</c><01:46:49.679><c> consideration</c><01:46:50.080><c> I</c><01:46:50.159><c> want</c><01:46:50.440><c> to</c><01:46:50.520><c> briefly</c>

01:46:50.870 --> 01:46:50.880 align:start position:0%
the next consideration I want to briefly
 

01:46:50.880 --> 01:46:52.990 align:start position:0%
the next consideration I want to briefly
talk<01:46:51.080><c> about</c><01:46:51.520><c> is</c><01:46:52.040><c> what</c><01:46:52.159><c> if</c><01:46:52.320><c> we</c><01:46:52.440><c> want</c><01:46:52.560><c> to</c><01:46:52.719><c> take</c><01:46:52.840><c> a</c>

01:46:52.990 --> 01:46:53.000 align:start position:0%
talk about is what if we want to take a
 

01:46:53.000 --> 01:46:55.189 align:start position:0%
talk about is what if we want to take a
pre-trained<01:46:53.480><c> model</c><01:46:54.159><c> and</c><01:46:54.280><c> we</c><01:46:54.400><c> want</c><01:46:54.520><c> to</c><01:46:54.760><c> extend</c>

01:46:55.189 --> 01:46:55.199 align:start position:0%
pre-trained model and we want to extend
 

01:46:55.199 --> 01:46:57.350 align:start position:0%
pre-trained model and we want to extend
the<01:46:55.360><c> vocap</c><01:46:55.800><c> size</c><01:46:56.560><c> and</c><01:46:56.679><c> this</c><01:46:56.760><c> is</c><01:46:56.920><c> done</c><01:46:57.080><c> fairly</c>

01:46:57.350 --> 01:46:57.360 align:start position:0%
the vocap size and this is done fairly
 

01:46:57.360 --> 01:46:58.870 align:start position:0%
the vocap size and this is done fairly
commonly<01:46:57.800><c> actually</c><01:46:58.040><c> so</c><01:46:58.199><c> for</c><01:46:58.440><c> example</c><01:46:58.760><c> when</c>

01:46:58.870 --> 01:46:58.880 align:start position:0%
commonly actually so for example when
 

01:46:58.880 --> 01:47:02.149 align:start position:0%
commonly actually so for example when
you're<01:46:59.119><c> doing</c><01:46:59.360><c> fine-tuning</c><01:47:00.119><c> for</c><01:47:00.360><c> cha</c><01:47:00.760><c> GPT</c><01:47:01.760><c> um</c>

01:47:02.149 --> 01:47:02.159 align:start position:0%
you're doing fine-tuning for cha GPT um
 

01:47:02.159 --> 01:47:03.750 align:start position:0%
you're doing fine-tuning for cha GPT um
a<01:47:02.280><c> lot</c><01:47:02.440><c> more</c><01:47:02.639><c> new</c><01:47:02.960><c> special</c><01:47:03.239><c> tokens</c><01:47:03.599><c> get</c>

01:47:03.750 --> 01:47:03.760 align:start position:0%
a lot more new special tokens get
 

01:47:03.760 --> 01:47:05.790 align:start position:0%
a lot more new special tokens get
introduced<01:47:04.159><c> on</c><01:47:04.280><c> top</c><01:47:04.400><c> of</c><01:47:04.480><c> the</c><01:47:04.599><c> base</c><01:47:04.800><c> model</c><01:47:05.480><c> to</c>

01:47:05.790 --> 01:47:05.800 align:start position:0%
introduced on top of the base model to
 

01:47:05.800 --> 01:47:08.030 align:start position:0%
introduced on top of the base model to
maintain<01:47:06.239><c> the</c><01:47:06.440><c> metadata</c><01:47:07.199><c> and</c><01:47:07.360><c> all</c><01:47:07.560><c> the</c>

01:47:08.030 --> 01:47:08.040 align:start position:0%
maintain the metadata and all the
 

01:47:08.040 --> 01:47:09.870 align:start position:0%
maintain the metadata and all the
structure<01:47:08.560><c> of</c><01:47:08.840><c> conversation</c><01:47:09.520><c> objects</c>

01:47:09.870 --> 01:47:09.880 align:start position:0%
structure of conversation objects
 

01:47:09.880 --> 01:47:11.910 align:start position:0%
structure of conversation objects
between<01:47:10.119><c> a</c><01:47:10.239><c> user</c><01:47:10.440><c> and</c><01:47:10.560><c> an</c><01:47:10.719><c> assistant</c><01:47:11.639><c> so</c><01:47:11.800><c> that</c>

01:47:11.910 --> 01:47:11.920 align:start position:0%
between a user and an assistant so that
 

01:47:11.920 --> 01:47:14.030 align:start position:0%
between a user and an assistant so that
takes<01:47:12.119><c> a</c><01:47:12.239><c> lot</c><01:47:12.400><c> of</c><01:47:12.679><c> special</c><01:47:13.000><c> tokens</c><01:47:13.719><c> you</c><01:47:13.840><c> might</c>

01:47:14.030 --> 01:47:14.040 align:start position:0%
takes a lot of special tokens you might
 

01:47:14.040 --> 01:47:15.870 align:start position:0%
takes a lot of special tokens you might
also<01:47:14.360><c> try</c><01:47:14.480><c> to</c><01:47:14.599><c> throw</c><01:47:14.840><c> in</c><01:47:15.000><c> more</c><01:47:15.199><c> special</c><01:47:15.520><c> tokens</c>

01:47:15.870 --> 01:47:15.880 align:start position:0%
also try to throw in more special tokens
 

01:47:15.880 --> 01:47:17.790 align:start position:0%
also try to throw in more special tokens
for<01:47:16.040><c> example</c><01:47:16.280><c> for</c><01:47:16.440><c> using</c><01:47:16.679><c> the</c><01:47:16.800><c> browser</c><01:47:17.440><c> or</c><01:47:17.639><c> any</c>

01:47:17.790 --> 01:47:17.800 align:start position:0%
for example for using the browser or any
 

01:47:17.800 --> 01:47:20.629 align:start position:0%
for example for using the browser or any
other<01:47:18.040><c> tool</c><01:47:18.920><c> and</c><01:47:19.040><c> so</c><01:47:19.360><c> it's</c><01:47:19.520><c> very</c><01:47:19.719><c> tempting</c><01:47:20.040><c> to</c>

01:47:20.629 --> 01:47:20.639 align:start position:0%
other tool and so it's very tempting to
 

01:47:20.639 --> 01:47:22.149 align:start position:0%
other tool and so it's very tempting to
add<01:47:20.800><c> a</c><01:47:20.920><c> lot</c><01:47:21.040><c> of</c><01:47:21.119><c> tokens</c><01:47:21.440><c> for</c><01:47:21.679><c> all</c><01:47:21.800><c> kinds</c><01:47:21.960><c> of</c>

01:47:22.149 --> 01:47:22.159 align:start position:0%
add a lot of tokens for all kinds of
 

01:47:22.159 --> 01:47:24.510 align:start position:0%
add a lot of tokens for all kinds of
special<01:47:22.920><c> functionality</c><01:47:23.920><c> so</c><01:47:24.159><c> if</c><01:47:24.239><c> you</c><01:47:24.320><c> want</c><01:47:24.440><c> to</c>

01:47:24.510 --> 01:47:24.520 align:start position:0%
special functionality so if you want to
 

01:47:24.520 --> 01:47:25.790 align:start position:0%
special functionality so if you want to
be<01:47:24.639><c> adding</c><01:47:24.840><c> a</c><01:47:24.960><c> token</c><01:47:25.280><c> that's</c><01:47:25.440><c> totally</c>

01:47:25.790 --> 01:47:25.800 align:start position:0%
be adding a token that's totally
 

01:47:25.800 --> 01:47:27.709 align:start position:0%
be adding a token that's totally
possible<01:47:26.320><c> Right</c><01:47:26.920><c> all</c><01:47:27.040><c> we</c><01:47:27.159><c> have</c><01:47:27.239><c> to</c><01:47:27.360><c> do</c><01:47:27.520><c> is</c><01:47:27.639><c> we</c>

01:47:27.709 --> 01:47:27.719 align:start position:0%
possible Right all we have to do is we
 

01:47:27.719 --> 01:47:29.870 align:start position:0%
possible Right all we have to do is we
have<01:47:27.840><c> to</c><01:47:28.000><c> resize</c><01:47:28.719><c> this</c><01:47:28.880><c> embedding</c><01:47:29.520><c> so</c><01:47:29.679><c> we</c><01:47:29.800><c> have</c>

01:47:29.870 --> 01:47:29.880 align:start position:0%
have to resize this embedding so we have
 

01:47:29.880 --> 01:47:32.470 align:start position:0%
have to resize this embedding so we have
to<01:47:30.080><c> add</c><01:47:30.280><c> rows</c><01:47:31.040><c> we</c><01:47:31.159><c> would</c><01:47:31.360><c> initialize</c><01:47:32.040><c> these</c><01:47:32.360><c> uh</c>

01:47:32.470 --> 01:47:32.480 align:start position:0%
to add rows we would initialize these uh
 

01:47:32.480 --> 01:47:34.430 align:start position:0%
to add rows we would initialize these uh
parameters<01:47:32.960><c> from</c><01:47:33.159><c> scratch</c><01:47:33.800><c> to</c><01:47:33.960><c> be</c><01:47:34.119><c> small</c>

01:47:34.430 --> 01:47:34.440 align:start position:0%
parameters from scratch to be small
 

01:47:34.440 --> 01:47:36.109 align:start position:0%
parameters from scratch to be small
random<01:47:34.719><c> numbers</c><01:47:35.599><c> and</c><01:47:35.719><c> then</c><01:47:35.800><c> we</c><01:47:35.920><c> have</c><01:47:36.000><c> to</c>

01:47:36.109 --> 01:47:36.119 align:start position:0%
random numbers and then we have to
 

01:47:36.119 --> 01:47:39.270 align:start position:0%
random numbers and then we have to
extend<01:47:36.560><c> the</c><01:47:36.719><c> weight</c><01:47:37.320><c> inside</c><01:47:37.679><c> this</c><01:47:38.159><c> linear</c><01:47:39.159><c> uh</c>

01:47:39.270 --> 01:47:39.280 align:start position:0%
extend the weight inside this linear uh
 

01:47:39.280 --> 01:47:41.430 align:start position:0%
extend the weight inside this linear uh
so<01:47:39.400><c> we</c><01:47:39.520><c> have</c><01:47:39.639><c> to</c><01:47:39.760><c> start</c><01:47:40.000><c> making</c><01:47:40.280><c> dot</c><01:47:40.560><c> products</c>

01:47:41.430 --> 01:47:41.440 align:start position:0%
so we have to start making dot products
 

01:47:41.440 --> 01:47:43.189 align:start position:0%
so we have to start making dot products
um<01:47:41.840><c> with</c><01:47:41.960><c> the</c><01:47:42.119><c> associated</c><01:47:42.560><c> parameters</c><01:47:43.040><c> as</c>

01:47:43.189 --> 01:47:43.199 align:start position:0%
um with the associated parameters as
 

01:47:43.199 --> 01:47:44.550 align:start position:0%
um with the associated parameters as
well<01:47:43.639><c> to</c><01:47:43.800><c> basically</c><01:47:44.080><c> calculate</c><01:47:44.480><c> the</c>

01:47:44.550 --> 01:47:44.560 align:start position:0%
well to basically calculate the
 

01:47:44.560 --> 01:47:46.750 align:start position:0%
well to basically calculate the
probabilities<01:47:45.000><c> for</c><01:47:45.199><c> these</c><01:47:45.320><c> new</c><01:47:45.560><c> tokens</c><01:47:46.560><c> so</c>

01:47:46.750 --> 01:47:46.760 align:start position:0%
probabilities for these new tokens so
 

01:47:46.760 --> 01:47:48.629 align:start position:0%
probabilities for these new tokens so
both<01:47:46.920><c> of</c><01:47:47.040><c> these</c><01:47:47.159><c> are</c><01:47:47.360><c> just</c><01:47:47.480><c> a</c><01:47:47.719><c> resizing</c>

01:47:48.629 --> 01:47:48.639 align:start position:0%
both of these are just a resizing
 

01:47:48.639 --> 01:47:50.830 align:start position:0%
both of these are just a resizing
operation<01:47:49.400><c> it's</c><01:47:49.520><c> a</c><01:47:49.719><c> very</c><01:47:49.960><c> mild</c>

01:47:50.830 --> 01:47:50.840 align:start position:0%
operation it's a very mild
 

01:47:50.840 --> 01:47:52.589 align:start position:0%
operation it's a very mild
model<01:47:51.159><c> surgery</c><01:47:51.840><c> and</c><01:47:51.960><c> can</c><01:47:52.080><c> be</c><01:47:52.159><c> done</c><01:47:52.320><c> fairly</c>

01:47:52.589 --> 01:47:52.599 align:start position:0%
model surgery and can be done fairly
 

01:47:52.599 --> 01:47:54.030 align:start position:0%
model surgery and can be done fairly
easily<01:47:53.159><c> and</c><01:47:53.280><c> it's</c><01:47:53.480><c> quite</c><01:47:53.639><c> common</c><01:47:53.920><c> that</c>

01:47:54.030 --> 01:47:54.040 align:start position:0%
easily and it's quite common that
 

01:47:54.040 --> 01:47:55.350 align:start position:0%
easily and it's quite common that
basically<01:47:54.360><c> you</c><01:47:54.480><c> would</c><01:47:54.639><c> freeze</c><01:47:55.000><c> the</c><01:47:55.119><c> base</c>

01:47:55.350 --> 01:47:55.360 align:start position:0%
basically you would freeze the base
 

01:47:55.360 --> 01:47:57.430 align:start position:0%
basically you would freeze the base
model<01:47:55.880><c> you</c><01:47:56.040><c> introduce</c><01:47:56.480><c> these</c><01:47:56.599><c> new</c><01:47:56.760><c> parameters</c>

01:47:57.430 --> 01:47:57.440 align:start position:0%
model you introduce these new parameters
 

01:47:57.440 --> 01:47:58.629 align:start position:0%
model you introduce these new parameters
and<01:47:57.560><c> then</c><01:47:57.639><c> you</c><01:47:57.760><c> only</c><01:47:57.960><c> train</c><01:47:58.320><c> these</c><01:47:58.480><c> new</c>

01:47:58.629 --> 01:47:58.639 align:start position:0%
and then you only train these new
 

01:47:58.639 --> 01:48:00.550 align:start position:0%
and then you only train these new
parameters<01:47:59.159><c> to</c><01:47:59.360><c> introduce</c><01:47:59.800><c> new</c><01:47:59.960><c> tokens</c><01:48:00.360><c> into</c>

01:48:00.550 --> 01:48:00.560 align:start position:0%
parameters to introduce new tokens into
 

01:48:00.560 --> 01:48:03.109 align:start position:0%
parameters to introduce new tokens into
the<01:48:00.920><c> architecture</c><01:48:01.920><c> um</c><01:48:02.560><c> and</c><01:48:02.719><c> so</c><01:48:02.920><c> you</c><01:48:03.000><c> can</c>

01:48:03.109 --> 01:48:03.119 align:start position:0%
the architecture um and so you can
 

01:48:03.119 --> 01:48:04.950 align:start position:0%
the architecture um and so you can
freeze<01:48:03.440><c> arbitrary</c><01:48:03.880><c> parts</c><01:48:04.080><c> of</c><01:48:04.199><c> it</c><01:48:04.520><c> or</c><01:48:04.719><c> you</c><01:48:04.840><c> can</c>

01:48:04.950 --> 01:48:04.960 align:start position:0%
freeze arbitrary parts of it or you can
 

01:48:04.960 --> 01:48:06.390 align:start position:0%
freeze arbitrary parts of it or you can
train<01:48:05.239><c> arbitrary</c><01:48:05.639><c> parts</c><01:48:05.840><c> of</c><01:48:05.920><c> it</c><01:48:06.040><c> and</c><01:48:06.159><c> that's</c>

01:48:06.390 --> 01:48:06.400 align:start position:0%
train arbitrary parts of it and that's
 

01:48:06.400 --> 01:48:08.310 align:start position:0%
train arbitrary parts of it and that's
totally<01:48:06.639><c> up</c><01:48:06.760><c> to</c><01:48:06.880><c> you</c><01:48:07.480><c> but</c><01:48:07.599><c> basically</c><01:48:07.920><c> minor</c>

01:48:08.310 --> 01:48:08.320 align:start position:0%
totally up to you but basically minor
 

01:48:08.320 --> 01:48:10.109 align:start position:0%
totally up to you but basically minor
surgery<01:48:08.840><c> required</c><01:48:09.400><c> if</c><01:48:09.480><c> you'd</c><01:48:09.719><c> like</c><01:48:09.880><c> to</c>

01:48:10.109 --> 01:48:10.119 align:start position:0%
surgery required if you'd like to
 

01:48:10.119 --> 01:48:11.870 align:start position:0%
surgery required if you'd like to
introduce<01:48:10.520><c> new</c><01:48:10.679><c> tokens</c><01:48:11.320><c> and</c><01:48:11.440><c> finally</c><01:48:11.719><c> I'd</c>

01:48:11.870 --> 01:48:11.880 align:start position:0%
introduce new tokens and finally I'd
 

01:48:11.880 --> 01:48:13.350 align:start position:0%
introduce new tokens and finally I'd
like<01:48:12.000><c> to</c><01:48:12.119><c> mention</c><01:48:12.480><c> that</c><01:48:12.760><c> actually</c><01:48:13.000><c> there's</c><01:48:13.199><c> an</c>

01:48:13.350 --> 01:48:13.360 align:start position:0%
like to mention that actually there's an
 

01:48:13.360 --> 01:48:15.910 align:start position:0%
like to mention that actually there's an
entire<01:48:13.760><c> design</c><01:48:14.080><c> space</c><01:48:14.639><c> of</c><01:48:14.880><c> applications</c><01:48:15.800><c> in</c>

01:48:15.910 --> 01:48:15.920 align:start position:0%
entire design space of applications in
 

01:48:15.920 --> 01:48:17.629 align:start position:0%
entire design space of applications in
terms<01:48:16.119><c> of</c><01:48:16.320><c> introducing</c><01:48:16.800><c> new</c><01:48:17.000><c> tokens</c><01:48:17.280><c> into</c><01:48:17.480><c> a</c>

01:48:17.629 --> 01:48:17.639 align:start position:0%
terms of introducing new tokens into a
 

01:48:17.639 --> 01:48:19.350 align:start position:0%
terms of introducing new tokens into a
vocabulary<01:48:18.360><c> that</c><01:48:18.520><c> go</c><01:48:18.719><c> Way</c><01:48:18.880><c> Beyond</c><01:48:19.199><c> just</c>

01:48:19.350 --> 01:48:19.360 align:start position:0%
vocabulary that go Way Beyond just
 

01:48:19.360 --> 01:48:21.189 align:start position:0%
vocabulary that go Way Beyond just
adding<01:48:19.639><c> special</c><01:48:19.920><c> tokens</c><01:48:20.360><c> and</c><01:48:20.520><c> special</c><01:48:20.800><c> new</c>

01:48:21.189 --> 01:48:21.199 align:start position:0%
adding special tokens and special new
 

01:48:21.199 --> 01:48:22.990 align:start position:0%
adding special tokens and special new
functionality<01:48:22.199><c> so</c><01:48:22.440><c> just</c><01:48:22.560><c> to</c><01:48:22.679><c> give</c><01:48:22.800><c> you</c><01:48:22.880><c> a</c>

01:48:22.990 --> 01:48:23.000 align:start position:0%
functionality so just to give you a
 

01:48:23.000 --> 01:48:24.350 align:start position:0%
functionality so just to give you a
sense<01:48:23.159><c> of</c><01:48:23.280><c> the</c><01:48:23.440><c> design</c><01:48:23.679><c> space</c><01:48:24.000><c> but</c><01:48:24.119><c> this</c><01:48:24.239><c> could</c>

01:48:24.350 --> 01:48:24.360 align:start position:0%
sense of the design space but this could
 

01:48:24.360 --> 01:48:26.589 align:start position:0%
sense of the design space but this could
be<01:48:24.440><c> an</c><01:48:24.560><c> entire</c><01:48:24.880><c> video</c><01:48:25.159><c> just</c><01:48:25.320><c> by</c><01:48:25.480><c> itself</c><01:48:26.440><c> uh</c>

01:48:26.589 --> 01:48:26.599 align:start position:0%
be an entire video just by itself uh
 

01:48:26.599 --> 01:48:28.629 align:start position:0%
be an entire video just by itself uh
this<01:48:26.679><c> is</c><01:48:26.880><c> a</c><01:48:27.040><c> paper</c><01:48:27.440><c> on</c><01:48:27.639><c> learning</c><01:48:27.960><c> to</c><01:48:28.239><c> compress</c>

01:48:28.629 --> 01:48:28.639 align:start position:0%
this is a paper on learning to compress
 

01:48:28.639 --> 01:48:31.030 align:start position:0%
this is a paper on learning to compress
prompts<01:48:29.159><c> with</c><01:48:29.320><c> what</c><01:48:29.480><c> they</c><01:48:29.639><c> called</c><01:48:30.239><c> uh</c><01:48:30.400><c> gist</c>

01:48:31.030 --> 01:48:31.040 align:start position:0%
prompts with what they called uh gist
 

01:48:31.040 --> 01:48:33.390 align:start position:0%
prompts with what they called uh gist
tokens<01:48:32.040><c> and</c><01:48:32.159><c> the</c><01:48:32.280><c> rough</c><01:48:32.480><c> idea</c><01:48:32.800><c> is</c><01:48:33.080><c> suppose</c>

01:48:33.390 --> 01:48:33.400 align:start position:0%
tokens and the rough idea is suppose
 

01:48:33.400 --> 01:48:34.669 align:start position:0%
tokens and the rough idea is suppose
that<01:48:33.520><c> you're</c><01:48:33.639><c> using</c><01:48:33.920><c> language</c><01:48:34.239><c> models</c><01:48:34.480><c> in</c><01:48:34.560><c> a</c>

01:48:34.669 --> 01:48:34.679 align:start position:0%
that you're using language models in a
 

01:48:34.679 --> 01:48:37.149 align:start position:0%
that you're using language models in a
setting<01:48:34.960><c> that</c><01:48:35.119><c> requires</c><01:48:35.719><c> very</c><01:48:35.920><c> long</c><01:48:36.239><c> prompts</c>

01:48:37.149 --> 01:48:37.159 align:start position:0%
setting that requires very long prompts
 

01:48:37.159 --> 01:48:38.790 align:start position:0%
setting that requires very long prompts
while<01:48:37.400><c> these</c><01:48:37.560><c> long</c><01:48:37.840><c> prompts</c><01:48:38.280><c> just</c><01:48:38.480><c> slow</c>

01:48:38.790 --> 01:48:38.800 align:start position:0%
while these long prompts just slow
 

01:48:38.800 --> 01:48:39.830 align:start position:0%
while these long prompts just slow
everything<01:48:39.119><c> down</c><01:48:39.320><c> because</c><01:48:39.520><c> you</c><01:48:39.599><c> have</c><01:48:39.679><c> to</c>

01:48:39.830 --> 01:48:39.840 align:start position:0%
everything down because you have to
 

01:48:39.840 --> 01:48:41.390 align:start position:0%
everything down because you have to
encode<01:48:40.239><c> them</c><01:48:40.440><c> and</c><01:48:40.560><c> then</c><01:48:40.679><c> you</c><01:48:40.800><c> have</c><01:48:40.920><c> to</c><01:48:41.119><c> use</c>

01:48:41.390 --> 01:48:41.400 align:start position:0%
encode them and then you have to use
 

01:48:41.400 --> 01:48:43.109 align:start position:0%
encode them and then you have to use
them<01:48:41.639><c> and</c><01:48:41.800><c> then</c><01:48:42.040><c> you're</c><01:48:42.320><c> tending</c><01:48:42.679><c> over</c><01:48:42.920><c> them</c>

01:48:43.109 --> 01:48:43.119 align:start position:0%
them and then you're tending over them
 

01:48:43.119 --> 01:48:45.109 align:start position:0%
them and then you're tending over them
and<01:48:43.199><c> it's</c><01:48:43.480><c> just</c><01:48:43.840><c> um</c><01:48:44.239><c> you</c><01:48:44.360><c> know</c><01:48:44.520><c> heavy</c><01:48:44.760><c> to</c><01:48:44.960><c> have</c>

01:48:45.109 --> 01:48:45.119 align:start position:0%
and it's just um you know heavy to have
 

01:48:45.119 --> 01:48:47.629 align:start position:0%
and it's just um you know heavy to have
very<01:48:45.320><c> large</c><01:48:45.760><c> prompts</c><01:48:46.760><c> so</c><01:48:47.040><c> instead</c><01:48:47.400><c> what</c><01:48:47.520><c> they</c>

01:48:47.629 --> 01:48:47.639 align:start position:0%
very large prompts so instead what they
 

01:48:47.639 --> 01:48:50.669 align:start position:0%
very large prompts so instead what they
do<01:48:47.800><c> here</c><01:48:47.880><c> in</c><01:48:48.040><c> this</c><01:48:48.239><c> paper</c><01:48:49.239><c> is</c><01:48:49.800><c> they</c><01:48:50.199><c> introduce</c>

01:48:50.669 --> 01:48:50.679 align:start position:0%
do here in this paper is they introduce
 

01:48:50.679 --> 01:48:54.550 align:start position:0%
do here in this paper is they introduce
new<01:48:51.360><c> tokens</c><01:48:52.360><c> and</c><01:48:53.000><c> um</c><01:48:53.800><c> imagine</c><01:48:54.239><c> basically</c>

01:48:54.550 --> 01:48:54.560 align:start position:0%
new tokens and um imagine basically
 

01:48:54.560 --> 01:48:56.390 align:start position:0%
new tokens and um imagine basically
having<01:48:55.000><c> a</c><01:48:55.080><c> few</c><01:48:55.320><c> new</c><01:48:55.520><c> tokens</c><01:48:55.960><c> you</c><01:48:56.080><c> put</c><01:48:56.199><c> them</c><01:48:56.320><c> in</c>

01:48:56.390 --> 01:48:56.400 align:start position:0%
having a few new tokens you put them in
 

01:48:56.400 --> 01:48:59.350 align:start position:0%
having a few new tokens you put them in
a<01:48:56.679><c> sequence</c><01:48:57.679><c> and</c><01:48:57.880><c> then</c><01:48:58.040><c> you</c><01:48:58.280><c> train</c><01:48:58.639><c> the</c><01:48:58.800><c> model</c>

01:48:59.350 --> 01:48:59.360 align:start position:0%
a sequence and then you train the model
 

01:48:59.360 --> 01:49:01.510 align:start position:0%
a sequence and then you train the model
by<01:48:59.679><c> distillation</c><01:49:00.679><c> so</c><01:49:00.840><c> you</c><01:49:00.920><c> are</c><01:49:01.080><c> keeping</c><01:49:01.400><c> the</c>

01:49:01.510 --> 01:49:01.520 align:start position:0%
by distillation so you are keeping the
 

01:49:01.520 --> 01:49:03.149 align:start position:0%
by distillation so you are keeping the
entire<01:49:01.840><c> model</c><01:49:02.080><c> Frozen</c><01:49:02.639><c> and</c><01:49:02.719><c> you're</c><01:49:02.920><c> only</c>

01:49:03.149 --> 01:49:03.159 align:start position:0%
entire model Frozen and you're only
 

01:49:03.159 --> 01:49:04.990 align:start position:0%
entire model Frozen and you're only
training<01:49:03.679><c> the</c><01:49:03.960><c> representations</c><01:49:04.560><c> of</c><01:49:04.679><c> the</c><01:49:04.800><c> new</c>

01:49:04.990 --> 01:49:05.000 align:start position:0%
training the representations of the new
 

01:49:05.000 --> 01:49:06.950 align:start position:0%
training the representations of the new
tokens<01:49:05.400><c> their</c><01:49:05.679><c> embeddings</c><01:49:06.679><c> and</c><01:49:06.760><c> you're</c>

01:49:06.950 --> 01:49:06.960 align:start position:0%
tokens their embeddings and you're
 

01:49:06.960 --> 01:49:09.430 align:start position:0%
tokens their embeddings and you're
optimizing<01:49:07.440><c> over</c><01:49:07.639><c> the</c><01:49:07.760><c> new</c><01:49:08.000><c> tokens</c><01:49:08.639><c> such</c><01:49:09.000><c> that</c>

01:49:09.430 --> 01:49:09.440 align:start position:0%
optimizing over the new tokens such that
 

01:49:09.440 --> 01:49:11.910 align:start position:0%
optimizing over the new tokens such that
the<01:49:09.599><c> behavior</c><01:49:09.960><c> of</c><01:49:10.080><c> the</c><01:49:10.199><c> language</c><01:49:10.560><c> model</c><01:49:11.119><c> is</c>

01:49:11.910 --> 01:49:11.920 align:start position:0%
the behavior of the language model is
 

01:49:11.920 --> 01:49:15.030 align:start position:0%
the behavior of the language model is
identical<01:49:12.920><c> uh</c><01:49:13.080><c> to</c><01:49:13.679><c> the</c><01:49:13.840><c> model</c><01:49:14.520><c> that</c><01:49:14.679><c> has</c><01:49:14.880><c> a</c>

01:49:15.030 --> 01:49:15.040 align:start position:0%
identical uh to the model that has a
 

01:49:15.040 --> 01:49:17.669 align:start position:0%
identical uh to the model that has a
very<01:49:15.280><c> long</c><01:49:15.639><c> prompt</c><01:49:16.639><c> that</c><01:49:16.760><c> works</c><01:49:17.000><c> for</c><01:49:17.159><c> you</c><01:49:17.560><c> and</c>

01:49:17.669 --> 01:49:17.679 align:start position:0%
very long prompt that works for you and
 

01:49:17.679 --> 01:49:18.990 align:start position:0%
very long prompt that works for you and
so<01:49:17.800><c> it's</c><01:49:17.880><c> a</c><01:49:18.040><c> compression</c><01:49:18.520><c> technique</c><01:49:18.880><c> of</c>

01:49:18.990 --> 01:49:19.000 align:start position:0%
so it's a compression technique of
 

01:49:19.000 --> 01:49:20.790 align:start position:0%
so it's a compression technique of
compressing<01:49:19.440><c> that</c><01:49:19.599><c> very</c><01:49:19.719><c> long</c><01:49:19.880><c> prompt</c><01:49:20.560><c> into</c>

01:49:20.790 --> 01:49:20.800 align:start position:0%
compressing that very long prompt into
 

01:49:20.800 --> 01:49:23.790 align:start position:0%
compressing that very long prompt into
those<01:49:21.000><c> few</c><01:49:21.280><c> new</c><01:49:21.599><c> gist</c><01:49:22.239><c> tokens</c><01:49:23.239><c> and</c><01:49:23.360><c> so</c><01:49:23.560><c> you</c><01:49:23.639><c> can</c>

01:49:23.790 --> 01:49:23.800 align:start position:0%
those few new gist tokens and so you can
 

01:49:23.800 --> 01:49:25.030 align:start position:0%
those few new gist tokens and so you can
train<01:49:24.080><c> this</c><01:49:24.199><c> and</c><01:49:24.320><c> then</c><01:49:24.400><c> at</c><01:49:24.560><c> test</c><01:49:24.719><c> time</c><01:49:24.880><c> you</c><01:49:24.920><c> can</c>

01:49:25.030 --> 01:49:25.040 align:start position:0%
train this and then at test time you can
 

01:49:25.040 --> 01:49:26.709 align:start position:0%
train this and then at test time you can
discard<01:49:25.400><c> your</c><01:49:25.480><c> old</c><01:49:25.679><c> prompt</c><01:49:26.000><c> and</c><01:49:26.119><c> just</c><01:49:26.239><c> swap</c><01:49:26.520><c> in</c>

01:49:26.709 --> 01:49:26.719 align:start position:0%
discard your old prompt and just swap in
 

01:49:26.719 --> 01:49:28.629 align:start position:0%
discard your old prompt and just swap in
those<01:49:26.920><c> tokens</c><01:49:27.560><c> and</c><01:49:27.679><c> they</c><01:49:27.800><c> sort</c><01:49:27.960><c> of</c><01:49:28.159><c> like</c><01:49:28.480><c> uh</c>

01:49:28.629 --> 01:49:28.639 align:start position:0%
those tokens and they sort of like uh
 

01:49:28.639 --> 01:49:31.109 align:start position:0%
those tokens and they sort of like uh
stand<01:49:28.960><c> in</c><01:49:29.280><c> for</c><01:49:29.560><c> that</c><01:49:29.760><c> very</c><01:49:29.960><c> long</c><01:49:30.199><c> prompt</c><01:49:30.840><c> and</c>

01:49:31.109 --> 01:49:31.119 align:start position:0%
stand in for that very long prompt and
 

01:49:31.119 --> 01:49:33.669 align:start position:0%
stand in for that very long prompt and
have<01:49:31.480><c> an</c><01:49:31.679><c> almost</c><01:49:31.960><c> identical</c><01:49:32.560><c> performance</c><01:49:33.560><c> and</c>

01:49:33.669 --> 01:49:33.679 align:start position:0%
have an almost identical performance and
 

01:49:33.679 --> 01:49:36.470 align:start position:0%
have an almost identical performance and
so<01:49:34.000><c> this</c><01:49:34.119><c> is</c><01:49:34.400><c> one</c><01:49:35.159><c> um</c><01:49:35.560><c> technique</c><01:49:35.920><c> and</c><01:49:36.040><c> a</c><01:49:36.239><c> class</c>

01:49:36.470 --> 01:49:36.480 align:start position:0%
so this is one um technique and a class
 

01:49:36.480 --> 01:49:37.990 align:start position:0%
so this is one um technique and a class
of<01:49:36.719><c> parameter</c><01:49:37.159><c> efficient</c><01:49:37.480><c> fine-tuning</c>

01:49:37.990 --> 01:49:38.000 align:start position:0%
of parameter efficient fine-tuning
 

01:49:38.000 --> 01:49:39.910 align:start position:0%
of parameter efficient fine-tuning
techniques<01:49:38.679><c> where</c><01:49:38.840><c> most</c><01:49:39.000><c> of</c><01:49:39.119><c> the</c><01:49:39.239><c> model</c><01:49:39.520><c> is</c>

01:49:39.910 --> 01:49:39.920 align:start position:0%
techniques where most of the model is
 

01:49:39.920 --> 01:49:41.870 align:start position:0%
techniques where most of the model is
basically<01:49:40.320><c> fixed</c><01:49:40.960><c> and</c><01:49:41.080><c> there's</c><01:49:41.280><c> no</c><01:49:41.599><c> training</c>

01:49:41.870 --> 01:49:41.880 align:start position:0%
basically fixed and there's no training
 

01:49:41.880 --> 01:49:43.589 align:start position:0%
basically fixed and there's no training
of<01:49:42.040><c> the</c><01:49:42.119><c> model</c><01:49:42.400><c> weights</c><01:49:42.880><c> there's</c><01:49:43.080><c> no</c><01:49:43.239><c> training</c>

01:49:43.589 --> 01:49:43.599 align:start position:0%
of the model weights there's no training
 

01:49:43.599 --> 01:49:45.430 align:start position:0%
of the model weights there's no training
of<01:49:43.800><c> Laura</c><01:49:44.239><c> or</c><01:49:44.360><c> anything</c><01:49:44.679><c> like</c><01:49:44.880><c> that</c><01:49:45.080><c> of</c><01:49:45.280><c> new</c>

01:49:45.430 --> 01:49:45.440 align:start position:0%
of Laura or anything like that of new
 

01:49:45.440 --> 01:49:47.229 align:start position:0%
of Laura or anything like that of new
parameters<01:49:46.280><c> the</c><01:49:46.639><c> the</c><01:49:46.719><c> parameters</c><01:49:47.119><c> that</c>

01:49:47.229 --> 01:49:47.239 align:start position:0%
parameters the the parameters that
 

01:49:47.239 --> 01:49:49.109 align:start position:0%
parameters the the parameters that
you're<01:49:47.360><c> training</c><01:49:47.760><c> are</c><01:49:47.920><c> now</c><01:49:48.159><c> just</c><01:49:48.679><c> the</c><01:49:49.000><c> uh</c>

01:49:49.109 --> 01:49:49.119 align:start position:0%
you're training are now just the uh
 

01:49:49.119 --> 01:49:51.189 align:start position:0%
you're training are now just the uh
token<01:49:49.400><c> embeddings</c><01:49:50.480><c> so</c><01:49:50.639><c> that's</c><01:49:50.840><c> just</c><01:49:51.000><c> one</c>

01:49:51.189 --> 01:49:51.199 align:start position:0%
token embeddings so that's just one
 

01:49:51.199 --> 01:49:52.870 align:start position:0%
token embeddings so that's just one
example<01:49:51.639><c> but</c><01:49:51.840><c> this</c><01:49:51.960><c> could</c><01:49:52.280><c> again</c><01:49:52.440><c> be</c><01:49:52.599><c> like</c><01:49:52.719><c> an</c>

01:49:52.870 --> 01:49:52.880 align:start position:0%
example but this could again be like an
 

01:49:52.880 --> 01:49:54.510 align:start position:0%
example but this could again be like an
entire<01:49:53.159><c> video</c><01:49:53.800><c> but</c><01:49:53.920><c> just</c><01:49:54.040><c> to</c><01:49:54.199><c> give</c><01:49:54.320><c> you</c><01:49:54.400><c> a</c>

01:49:54.510 --> 01:49:54.520 align:start position:0%
entire video but just to give you a
 

01:49:54.520 --> 01:49:55.750 align:start position:0%
entire video but just to give you a
sense<01:49:54.719><c> that</c><01:49:54.840><c> there's</c><01:49:54.960><c> a</c><01:49:55.080><c> whole</c><01:49:55.239><c> design</c><01:49:55.480><c> space</c>

01:49:55.750 --> 01:49:55.760 align:start position:0%
sense that there's a whole design space
 

01:49:55.760 --> 01:49:57.350 align:start position:0%
sense that there's a whole design space
here<01:49:55.960><c> that</c><01:49:56.040><c> is</c><01:49:56.400><c> potentially</c><01:49:56.760><c> worth</c><01:49:56.960><c> exploring</c>

01:49:57.350 --> 01:49:57.360 align:start position:0%
here that is potentially worth exploring
 

01:49:57.360 --> 01:49:59.189 align:start position:0%
here that is potentially worth exploring
in<01:49:57.440><c> the</c><01:49:57.520><c> future</c><01:49:58.440><c> the</c><01:49:58.560><c> next</c><01:49:58.760><c> thing</c><01:49:58.880><c> I</c><01:49:58.960><c> want</c><01:49:59.080><c> to</c>

01:49:59.189 --> 01:49:59.199 align:start position:0%
in the future the next thing I want to
 

01:49:59.199 --> 01:50:01.189 align:start position:0%
in the future the next thing I want to
briefly<01:49:59.560><c> address</c><01:50:00.000><c> is</c><01:50:00.199><c> that</c><01:50:00.480><c> I</c><01:50:00.560><c> think</c><01:50:00.840><c> recently</c>

01:50:01.189 --> 01:50:01.199 align:start position:0%
briefly address is that I think recently
 

01:50:01.199 --> 01:50:03.070 align:start position:0%
briefly address is that I think recently
there's<01:50:01.400><c> a</c><01:50:01.480><c> lot</c><01:50:01.639><c> of</c><01:50:01.760><c> momentum</c><01:50:02.360><c> in</c><01:50:02.599><c> how</c><01:50:02.800><c> you</c>

01:50:03.070 --> 01:50:03.080 align:start position:0%
there's a lot of momentum in how you
 

01:50:03.080 --> 01:50:05.070 align:start position:0%
there's a lot of momentum in how you
actually<01:50:03.800><c> could</c><01:50:04.119><c> construct</c><01:50:04.520><c> Transformers</c>

01:50:05.070 --> 01:50:05.080 align:start position:0%
actually could construct Transformers
 

01:50:05.080 --> 01:50:06.790 align:start position:0%
actually could construct Transformers
that<01:50:05.199><c> can</c><01:50:05.320><c> simultaneously</c><01:50:06.080><c> process</c><01:50:06.400><c> not</c><01:50:06.599><c> just</c>

01:50:06.790 --> 01:50:06.800 align:start position:0%
that can simultaneously process not just
 

01:50:06.800 --> 01:50:08.830 align:start position:0%
that can simultaneously process not just
text<01:50:07.199><c> as</c><01:50:07.320><c> the</c><01:50:07.440><c> input</c><01:50:07.719><c> modality</c><01:50:08.400><c> but</c><01:50:08.520><c> a</c><01:50:08.599><c> lot</c><01:50:08.719><c> of</c>

01:50:08.830 --> 01:50:08.840 align:start position:0%
text as the input modality but a lot of
 

01:50:08.840 --> 01:50:11.510 align:start position:0%
text as the input modality but a lot of
other<01:50:09.040><c> modalities</c><01:50:09.639><c> so</c><01:50:10.119><c> be</c><01:50:10.280><c> it</c><01:50:10.480><c> images</c><01:50:10.960><c> videos</c>

01:50:11.510 --> 01:50:11.520 align:start position:0%
other modalities so be it images videos
 

01:50:11.520 --> 01:50:14.270 align:start position:0%
other modalities so be it images videos
audio<01:50:11.960><c> Etc</c><01:50:12.880><c> and</c><01:50:13.040><c> how</c><01:50:13.159><c> do</c><01:50:13.239><c> you</c><01:50:13.440><c> feed</c><01:50:13.719><c> in</c><01:50:14.080><c> all</c>

01:50:14.270 --> 01:50:14.280 align:start position:0%
audio Etc and how do you feed in all
 

01:50:14.280 --> 01:50:15.990 align:start position:0%
audio Etc and how do you feed in all
these<01:50:14.400><c> modalities</c><01:50:14.840><c> and</c><01:50:14.960><c> potentially</c><01:50:15.440><c> predict</c>

01:50:15.990 --> 01:50:16.000 align:start position:0%
these modalities and potentially predict
 

01:50:16.000 --> 01:50:18.830 align:start position:0%
these modalities and potentially predict
these<01:50:16.199><c> modalities</c><01:50:16.960><c> from</c><01:50:17.199><c> a</c><01:50:17.760><c> Transformer</c><01:50:18.760><c> uh</c>

01:50:18.830 --> 01:50:18.840 align:start position:0%
these modalities from a Transformer uh
 

01:50:18.840 --> 01:50:19.830 align:start position:0%
these modalities from a Transformer uh
do<01:50:18.920><c> you</c><01:50:19.000><c> have</c><01:50:19.119><c> to</c><01:50:19.199><c> change</c><01:50:19.360><c> the</c><01:50:19.480><c> architecture</c>

01:50:19.830 --> 01:50:19.840 align:start position:0%
do you have to change the architecture
 

01:50:19.840 --> 01:50:21.589 align:start position:0%
do you have to change the architecture
in<01:50:20.119><c> some</c><01:50:20.239><c> fundamental</c><01:50:20.679><c> way</c><01:50:21.040><c> and</c><01:50:21.159><c> I</c><01:50:21.280><c> think</c><01:50:21.520><c> what</c>

01:50:21.589 --> 01:50:21.599 align:start position:0%
in some fundamental way and I think what
 

01:50:21.599 --> 01:50:23.109 align:start position:0%
in some fundamental way and I think what
a<01:50:21.679><c> lot</c><01:50:21.800><c> of</c><01:50:21.920><c> people</c><01:50:22.080><c> are</c><01:50:22.199><c> starting</c><01:50:22.520><c> to</c><01:50:22.760><c> converge</c>

01:50:23.109 --> 01:50:23.119 align:start position:0%
a lot of people are starting to converge
 

01:50:23.119 --> 01:50:24.270 align:start position:0%
a lot of people are starting to converge
towards<01:50:23.440><c> is</c><01:50:23.560><c> that</c><01:50:23.639><c> you're</c><01:50:23.760><c> not</c><01:50:23.920><c> changing</c><01:50:24.199><c> the</c>

01:50:24.270 --> 01:50:24.280 align:start position:0%
towards is that you're not changing the
 

01:50:24.280 --> 01:50:25.430 align:start position:0%
towards is that you're not changing the
architecture<01:50:24.880><c> you</c><01:50:25.000><c> stick</c><01:50:25.199><c> with</c><01:50:25.320><c> the</c>

01:50:25.430 --> 01:50:25.440 align:start position:0%
architecture you stick with the
 

01:50:25.440 --> 01:50:27.550 align:start position:0%
architecture you stick with the
Transformer<01:50:26.320><c> you</c><01:50:26.520><c> just</c><01:50:26.719><c> kind</c><01:50:26.840><c> of</c><01:50:27.040><c> tokenize</c>

01:50:27.550 --> 01:50:27.560 align:start position:0%
Transformer you just kind of tokenize
 

01:50:27.560 --> 01:50:29.950 align:start position:0%
Transformer you just kind of tokenize
your<01:50:27.719><c> input</c><01:50:28.080><c> domains</c><01:50:28.920><c> and</c><01:50:29.080><c> then</c><01:50:29.360><c> call</c><01:50:29.639><c> the</c><01:50:29.800><c> day</c>

01:50:29.950 --> 01:50:29.960 align:start position:0%
your input domains and then call the day
 

01:50:29.960 --> 01:50:31.510 align:start position:0%
your input domains and then call the day
and<01:50:30.080><c> pretend</c><01:50:30.360><c> it's</c><01:50:30.560><c> just</c><01:50:30.679><c> text</c><01:50:30.920><c> tokens</c><01:50:31.360><c> and</c>

01:50:31.510 --> 01:50:31.520 align:start position:0%
and pretend it's just text tokens and
 

01:50:31.520 --> 01:50:33.950 align:start position:0%
and pretend it's just text tokens and
just<01:50:32.040><c> do</c><01:50:32.239><c> everything</c><01:50:32.520><c> else</c><01:50:33.119><c> identical</c><01:50:33.719><c> in</c><01:50:33.840><c> an</c>

01:50:33.950 --> 01:50:33.960 align:start position:0%
just do everything else identical in an
 

01:50:33.960 --> 01:50:36.070 align:start position:0%
just do everything else identical in an
identical<01:50:34.360><c> manner</c><01:50:35.320><c> so</c><01:50:35.480><c> here</c><01:50:35.599><c> for</c><01:50:35.760><c> example</c>

01:50:36.070 --> 01:50:36.080 align:start position:0%
identical manner so here for example
 

01:50:36.080 --> 01:50:37.550 align:start position:0%
identical manner so here for example
there<01:50:36.159><c> was</c><01:50:36.280><c> a</c><01:50:36.400><c> early</c><01:50:36.679><c> paper</c><01:50:36.960><c> that</c><01:50:37.080><c> has</c><01:50:37.280><c> nice</c>

01:50:37.550 --> 01:50:37.560 align:start position:0%
there was a early paper that has nice
 

01:50:37.560 --> 01:50:39.589 align:start position:0%
there was a early paper that has nice
graphic<01:50:38.159><c> for</c><01:50:38.360><c> how</c><01:50:38.480><c> you</c><01:50:38.560><c> can</c><01:50:38.719><c> take</c><01:50:38.840><c> an</c><01:50:39.040><c> image</c>

01:50:39.589 --> 01:50:39.599 align:start position:0%
graphic for how you can take an image
 

01:50:39.599 --> 01:50:42.149 align:start position:0%
graphic for how you can take an image
and<01:50:39.719><c> you</c><01:50:39.800><c> can</c><01:50:39.920><c> chunc</c><01:50:40.239><c> at</c><01:50:40.440><c> it</c><01:50:40.679><c> into</c>

01:50:42.149 --> 01:50:42.159 align:start position:0%
and you can chunc at it into
 

01:50:42.159 --> 01:50:45.390 align:start position:0%
and you can chunc at it into
integers<01:50:43.159><c> um</c><01:50:43.400><c> and</c><01:50:43.599><c> these</c><01:50:44.199><c> sometimes</c><01:50:44.920><c> uh</c><01:50:45.239><c> so</c>

01:50:45.390 --> 01:50:45.400 align:start position:0%
integers um and these sometimes uh so
 

01:50:45.400 --> 01:50:46.830 align:start position:0%
integers um and these sometimes uh so
these<01:50:45.520><c> will</c><01:50:45.679><c> basically</c><01:50:45.960><c> become</c><01:50:46.159><c> the</c><01:50:46.320><c> tokens</c>

01:50:46.830 --> 01:50:46.840 align:start position:0%
these will basically become the tokens
 

01:50:46.840 --> 01:50:49.550 align:start position:0%
these will basically become the tokens
of<01:50:47.079><c> images</c><01:50:47.599><c> as</c><01:50:47.719><c> an</c><01:50:47.920><c> example</c><01:50:48.920><c> and</c><01:50:49.239><c> uh</c><01:50:49.360><c> these</c>

01:50:49.550 --> 01:50:49.560 align:start position:0%
of images as an example and uh these
 

01:50:49.560 --> 01:50:52.189 align:start position:0%
of images as an example and uh these
tokens<01:50:50.079><c> can</c><01:50:50.239><c> be</c><01:50:50.639><c> uh</c><01:50:50.800><c> hard</c><01:50:51.079><c> tokens</c><01:50:51.480><c> where</c><01:50:51.599><c> you</c>

01:50:52.189 --> 01:50:52.199 align:start position:0%
tokens can be uh hard tokens where you
 

01:50:52.199 --> 01:50:53.910 align:start position:0%
tokens can be uh hard tokens where you
force<01:50:52.440><c> them</c><01:50:52.560><c> to</c><01:50:52.679><c> be</c><01:50:52.800><c> integers</c><01:50:53.520><c> they</c><01:50:53.639><c> can</c><01:50:53.760><c> also</c>

01:50:53.910 --> 01:50:53.920 align:start position:0%
force them to be integers they can also
 

01:50:53.920 --> 01:50:56.990 align:start position:0%
force them to be integers they can also
be<01:50:54.119><c> soft</c><01:50:54.599><c> tokens</c><01:50:55.599><c> where</c><01:50:55.880><c> you</c><01:50:56.480><c> uh</c><01:50:56.599><c> sort</c><01:50:56.800><c> of</c>

01:50:56.990 --> 01:50:57.000 align:start position:0%
be soft tokens where you uh sort of
 

01:50:57.000 --> 01:51:00.229 align:start position:0%
be soft tokens where you uh sort of
don't<01:50:57.719><c> require</c><01:50:58.719><c> uh</c><01:50:58.960><c> these</c><01:50:59.159><c> to</c><01:50:59.320><c> be</c><01:50:59.599><c> discrete</c>

01:51:00.229 --> 01:51:00.239 align:start position:0%
don't require uh these to be discrete
 

01:51:00.239 --> 01:51:02.149 align:start position:0%
don't require uh these to be discrete
but<01:51:00.360><c> you</c><01:51:00.560><c> do</c><01:51:00.800><c> Force</c><01:51:01.400><c> these</c><01:51:01.599><c> representations</c>

01:51:02.149 --> 01:51:02.159 align:start position:0%
but you do Force these representations
 

01:51:02.159 --> 01:51:04.750 align:start position:0%
but you do Force these representations
to<01:51:02.320><c> go</c><01:51:02.440><c> through</c><01:51:02.679><c> bottlenecks</c><01:51:03.480><c> like</c><01:51:03.639><c> in</c><01:51:03.880><c> Auto</c>

01:51:04.750 --> 01:51:04.760 align:start position:0%
to go through bottlenecks like in Auto
 

01:51:04.760 --> 01:51:06.910 align:start position:0%
to go through bottlenecks like in Auto
encoders<01:51:05.760><c> uh</c><01:51:05.880><c> also</c><01:51:06.159><c> in</c><01:51:06.280><c> this</c><01:51:06.400><c> paper</c><01:51:06.639><c> that</c><01:51:06.800><c> came</c>

01:51:06.910 --> 01:51:06.920 align:start position:0%
encoders uh also in this paper that came
 

01:51:06.920 --> 01:51:08.870 align:start position:0%
encoders uh also in this paper that came
out<01:51:07.040><c> from</c><01:51:07.159><c> open</c><01:51:07.360><c> a</c><01:51:07.639><c> SORA</c><01:51:08.360><c> which</c><01:51:08.520><c> I</c><01:51:08.599><c> think</c>

01:51:08.870 --> 01:51:08.880 align:start position:0%
out from open a SORA which I think
 

01:51:08.880 --> 01:51:11.830 align:start position:0%
out from open a SORA which I think
really<01:51:09.520><c> um</c><01:51:10.520><c> uh</c><01:51:10.840><c> blew</c><01:51:11.159><c> the</c><01:51:11.239><c> mind</c><01:51:11.440><c> of</c><01:51:11.599><c> many</c>

01:51:11.830 --> 01:51:11.840 align:start position:0%
really um uh blew the mind of many
 

01:51:11.840 --> 01:51:13.510 align:start position:0%
really um uh blew the mind of many
people<01:51:12.400><c> and</c><01:51:12.639><c> inspired</c><01:51:13.000><c> a</c><01:51:13.079><c> lot</c><01:51:13.199><c> of</c><01:51:13.280><c> people</c><01:51:13.440><c> in</c>

01:51:13.510 --> 01:51:13.520 align:start position:0%
people and inspired a lot of people in
 

01:51:13.520 --> 01:51:15.189 align:start position:0%
people and inspired a lot of people in
terms<01:51:13.719><c> of</c><01:51:13.840><c> what's</c><01:51:14.079><c> possible</c><01:51:14.840><c> they</c><01:51:14.960><c> have</c><01:51:15.079><c> a</c>

01:51:15.189 --> 01:51:15.199 align:start position:0%
terms of what's possible they have a
 

01:51:15.199 --> 01:51:16.910 align:start position:0%
terms of what's possible they have a
Graphic<01:51:15.560><c> here</c><01:51:15.760><c> and</c><01:51:15.880><c> they</c><01:51:16.000><c> talk</c><01:51:16.239><c> briefly</c><01:51:16.599><c> about</c>

01:51:16.910 --> 01:51:16.920 align:start position:0%
Graphic here and they talk briefly about
 

01:51:16.920 --> 01:51:20.149 align:start position:0%
Graphic here and they talk briefly about
how<01:51:17.639><c> llms</c><01:51:18.560><c> have</c><01:51:18.719><c> text</c><01:51:19.000><c> tokens</c><01:51:19.400><c> Sora</c><01:51:19.840><c> has</c>

01:51:20.149 --> 01:51:20.159 align:start position:0%
how llms have text tokens Sora has
 

01:51:20.159 --> 01:51:22.510 align:start position:0%
how llms have text tokens Sora has
visual<01:51:20.520><c> patches</c><01:51:21.280><c> so</c><01:51:21.520><c> again</c><01:51:22.119><c> they</c><01:51:22.239><c> came</c><01:51:22.400><c> up</c>

01:51:22.510 --> 01:51:22.520 align:start position:0%
visual patches so again they came up
 

01:51:22.520 --> 01:51:24.910 align:start position:0%
visual patches so again they came up
with<01:51:22.639><c> a</c><01:51:22.760><c> way</c><01:51:22.920><c> to</c><01:51:23.079><c> chunc</c><01:51:23.400><c> a</c><01:51:23.719><c> videos</c><01:51:24.239><c> into</c>

01:51:24.910 --> 01:51:24.920 align:start position:0%
with a way to chunc a videos into
 

01:51:24.920 --> 01:51:26.510 align:start position:0%
with a way to chunc a videos into
basically<01:51:25.360><c> tokens</c><01:51:25.960><c> when</c><01:51:26.119><c> they</c><01:51:26.239><c> own</c>

01:51:26.510 --> 01:51:26.520 align:start position:0%
basically tokens when they own
 

01:51:26.520 --> 01:51:28.510 align:start position:0%
basically tokens when they own
vocabularies<01:51:27.520><c> and</c><01:51:27.639><c> then</c><01:51:27.760><c> you</c><01:51:27.840><c> can</c><01:51:28.119><c> either</c>

01:51:28.510 --> 01:51:28.520 align:start position:0%
vocabularies and then you can either
 

01:51:28.520 --> 01:51:30.030 align:start position:0%
vocabularies and then you can either
process<01:51:28.880><c> discrete</c><01:51:29.239><c> tokens</c><01:51:29.520><c> say</c><01:51:29.679><c> with</c><01:51:29.800><c> autog</c>

01:51:30.030 --> 01:51:30.040 align:start position:0%
process discrete tokens say with autog
 

01:51:30.040 --> 01:51:32.069 align:start position:0%
process discrete tokens say with autog
regressive<01:51:30.400><c> models</c><01:51:30.920><c> or</c><01:51:31.079><c> even</c><01:51:31.280><c> soft</c><01:51:31.599><c> tokens</c>

01:51:32.069 --> 01:51:32.079 align:start position:0%
regressive models or even soft tokens
 

01:51:32.079 --> 01:51:35.229 align:start position:0%
regressive models or even soft tokens
with<01:51:32.280><c> diffusion</c><01:51:32.719><c> models</c><01:51:33.719><c> and</c><01:51:34.119><c> uh</c><01:51:34.880><c> all</c><01:51:35.000><c> of</c><01:51:35.119><c> that</c>

01:51:35.229 --> 01:51:35.239 align:start position:0%
with diffusion models and uh all of that
 

01:51:35.239 --> 01:51:38.229 align:start position:0%
with diffusion models and uh all of that
is<01:51:35.400><c> sort</c><01:51:35.560><c> of</c><01:51:36.119><c> uh</c><01:51:36.599><c> being</c><01:51:36.920><c> actively</c><01:51:37.719><c> worked</c><01:51:38.000><c> on</c>

01:51:38.229 --> 01:51:38.239 align:start position:0%
is sort of uh being actively worked on
 

01:51:38.239 --> 01:51:39.629 align:start position:0%
is sort of uh being actively worked on
designed<01:51:38.560><c> on</c><01:51:38.760><c> and</c><01:51:38.840><c> is</c><01:51:39.000><c> beyond</c><01:51:39.239><c> the</c><01:51:39.320><c> scope</c><01:51:39.520><c> of</c>

01:51:39.629 --> 01:51:39.639 align:start position:0%
designed on and is beyond the scope of
 

01:51:39.639 --> 01:51:40.870 align:start position:0%
designed on and is beyond the scope of
this<01:51:39.800><c> video</c><01:51:40.079><c> but</c><01:51:40.199><c> just</c><01:51:40.360><c> something</c><01:51:40.599><c> I</c><01:51:40.679><c> wanted</c>

01:51:40.870 --> 01:51:40.880 align:start position:0%
this video but just something I wanted
 

01:51:40.880 --> 01:51:42.950 align:start position:0%
this video but just something I wanted
to<01:51:41.000><c> mention</c><01:51:41.280><c> briefly</c><01:51:42.079><c> okay</c><01:51:42.280><c> now</c><01:51:42.480><c> that</c><01:51:42.599><c> we</c><01:51:42.719><c> have</c>

01:51:42.950 --> 01:51:42.960 align:start position:0%
to mention briefly okay now that we have
 

01:51:42.960 --> 01:51:45.109 align:start position:0%
to mention briefly okay now that we have
come<01:51:43.599><c> quite</c><01:51:44.000><c> deep</c><01:51:44.280><c> into</c><01:51:44.440><c> the</c><01:51:44.560><c> tokenization</c>

01:51:45.109 --> 01:51:45.119 align:start position:0%
come quite deep into the tokenization
 

01:51:45.119 --> 01:51:46.750 align:start position:0%
come quite deep into the tokenization
algorithm<01:51:45.599><c> and</c><01:51:45.679><c> we</c><01:51:46.040><c> understand</c><01:51:46.199><c> a</c><01:51:46.320><c> lot</c><01:51:46.520><c> more</c>

01:51:46.750 --> 01:51:46.760 align:start position:0%
algorithm and we understand a lot more
 

01:51:46.760 --> 01:51:48.910 align:start position:0%
algorithm and we understand a lot more
about<01:51:47.280><c> how</c><01:51:47.440><c> it</c><01:51:47.599><c> works</c><01:51:48.280><c> let's</c><01:51:48.440><c> loop</c><01:51:48.800><c> back</c>

01:51:48.910 --> 01:51:48.920 align:start position:0%
about how it works let's loop back
 

01:51:48.920 --> 01:51:50.510 align:start position:0%
about how it works let's loop back
around<01:51:49.159><c> to</c><01:51:49.320><c> the</c><01:51:49.520><c> beginning</c><01:51:49.800><c> of</c><01:51:50.079><c> this</c><01:51:50.239><c> video</c>

01:51:50.510 --> 01:51:50.520 align:start position:0%
around to the beginning of this video
 

01:51:50.520 --> 01:51:51.589 align:start position:0%
around to the beginning of this video
and<01:51:50.639><c> go</c><01:51:50.800><c> through</c><01:51:50.960><c> some</c><01:51:51.079><c> of</c><01:51:51.199><c> these</c><01:51:51.320><c> bullet</c>

01:51:51.589 --> 01:51:51.599 align:start position:0%
and go through some of these bullet
 

01:51:51.599 --> 01:51:54.870 align:start position:0%
and go through some of these bullet
points<01:51:51.920><c> and</c><01:51:52.280><c> really</c><01:51:52.599><c> see</c><01:51:53.040><c> why</c><01:51:53.280><c> they</c><01:51:53.679><c> happen</c><01:51:54.679><c> so</c>

01:51:54.870 --> 01:51:54.880 align:start position:0%
points and really see why they happen so
 

01:51:54.880 --> 01:51:56.950 align:start position:0%
points and really see why they happen so
first<01:51:55.040><c> of</c><01:51:55.159><c> all</c><01:51:55.560><c> why</c><01:51:55.760><c> can't</c><01:51:56.000><c> my</c><01:51:56.119><c> llm</c><01:51:56.639><c> spell</c>

01:51:56.950 --> 01:51:56.960 align:start position:0%
first of all why can't my llm spell
 

01:51:56.960 --> 01:51:58.750 align:start position:0%
first of all why can't my llm spell
words<01:51:57.280><c> very</c><01:51:57.480><c> well</c><01:51:57.679><c> or</c><01:51:57.920><c> do</c><01:51:58.119><c> other</c><01:51:58.400><c> spell</c>

01:51:58.750 --> 01:51:58.760 align:start position:0%
words very well or do other spell
 

01:51:58.760 --> 01:52:00.550 align:start position:0%
words very well or do other spell
related

01:52:00.550 --> 01:52:00.560 align:start position:0%
related
 

01:52:00.560 --> 01:52:02.910 align:start position:0%
related
tasks<01:52:01.560><c> so</c><01:52:01.760><c> fundamentally</c><01:52:02.280><c> this</c><01:52:02.400><c> is</c><01:52:02.599><c> because</c>

01:52:02.910 --> 01:52:02.920 align:start position:0%
tasks so fundamentally this is because
 

01:52:02.920 --> 01:52:05.669 align:start position:0%
tasks so fundamentally this is because
as<01:52:03.040><c> we</c><01:52:03.199><c> saw</c><01:52:03.800><c> these</c><01:52:04.119><c> characters</c><01:52:04.760><c> are</c><01:52:05.199><c> chunked</c>

01:52:05.669 --> 01:52:05.679 align:start position:0%
as we saw these characters are chunked
 

01:52:05.679 --> 01:52:07.950 align:start position:0%
as we saw these characters are chunked
up<01:52:06.040><c> into</c><01:52:06.360><c> tokens</c><01:52:07.119><c> and</c><01:52:07.239><c> some</c><01:52:07.400><c> of</c><01:52:07.520><c> these</c><01:52:07.679><c> tokens</c>

01:52:07.950 --> 01:52:07.960 align:start position:0%
up into tokens and some of these tokens
 

01:52:07.960 --> 01:52:10.390 align:start position:0%
up into tokens and some of these tokens
are<01:52:08.119><c> actually</c><01:52:08.440><c> fairly</c><01:52:08.840><c> long</c><01:52:09.840><c> so</c><01:52:10.119><c> as</c><01:52:10.199><c> an</c>

01:52:10.390 --> 01:52:10.400 align:start position:0%
are actually fairly long so as an
 

01:52:10.400 --> 01:52:12.790 align:start position:0%
are actually fairly long so as an
example<01:52:10.679><c> I</c><01:52:10.760><c> went</c><01:52:10.920><c> to</c><01:52:11.119><c> the</c><01:52:11.199><c> gp4</c><01:52:11.880><c> vocabulary</c><01:52:12.719><c> and</c>

01:52:12.790 --> 01:52:12.800 align:start position:0%
example I went to the gp4 vocabulary and
 

01:52:12.800 --> 01:52:15.270 align:start position:0%
example I went to the gp4 vocabulary and
I<01:52:12.920><c> looked</c><01:52:13.159><c> at</c><01:52:13.599><c> uh</c><01:52:13.719><c> one</c><01:52:13.920><c> of</c><01:52:14.079><c> the</c><01:52:14.239><c> longer</c><01:52:14.639><c> tokens</c>

01:52:15.270 --> 01:52:15.280 align:start position:0%
I looked at uh one of the longer tokens
 

01:52:15.280 --> 01:52:17.870 align:start position:0%
I looked at uh one of the longer tokens
so<01:52:15.960><c> that</c><01:52:16.360><c> default</c><01:52:16.800><c> style</c><01:52:17.119><c> turns</c><01:52:17.360><c> out</c><01:52:17.520><c> to</c><01:52:17.599><c> be</c><01:52:17.719><c> a</c>

01:52:17.870 --> 01:52:17.880 align:start position:0%
so that default style turns out to be a
 

01:52:17.880 --> 01:52:19.709 align:start position:0%
so that default style turns out to be a
single<01:52:18.320><c> individual</c><01:52:18.840><c> token</c><01:52:19.280><c> so</c><01:52:19.440><c> that's</c><01:52:19.560><c> a</c><01:52:19.599><c> lot</c>

01:52:19.709 --> 01:52:19.719 align:start position:0%
single individual token so that's a lot
 

01:52:19.719 --> 01:52:22.149 align:start position:0%
single individual token so that's a lot
of<01:52:19.920><c> characters</c><01:52:20.239><c> for</c><01:52:20.400><c> a</c><01:52:20.520><c> single</c><01:52:20.800><c> token</c><01:52:21.800><c> so</c><01:52:22.000><c> my</c>

01:52:22.149 --> 01:52:22.159 align:start position:0%
of characters for a single token so my
 

01:52:22.159 --> 01:52:23.750 align:start position:0%
of characters for a single token so my
suspicion<01:52:22.639><c> is</c><01:52:22.760><c> that</c><01:52:22.920><c> there's</c><01:52:23.119><c> just</c><01:52:23.280><c> too</c><01:52:23.480><c> much</c>

01:52:23.750 --> 01:52:23.760 align:start position:0%
suspicion is that there's just too much
 

01:52:23.760 --> 01:52:26.069 align:start position:0%
suspicion is that there's just too much
crammed<01:52:24.280><c> into</c><01:52:24.520><c> this</c><01:52:24.639><c> single</c><01:52:25.000><c> token</c><01:52:25.760><c> and</c><01:52:25.920><c> my</c>

01:52:26.069 --> 01:52:26.079 align:start position:0%
crammed into this single token and my
 

01:52:26.079 --> 01:52:27.750 align:start position:0%
crammed into this single token and my
suspicion<01:52:26.560><c> was</c><01:52:26.800><c> that</c><01:52:27.119><c> the</c><01:52:27.199><c> model</c><01:52:27.440><c> should</c><01:52:27.599><c> not</c>

01:52:27.750 --> 01:52:27.760 align:start position:0%
suspicion was that the model should not
 

01:52:27.760 --> 01:52:30.350 align:start position:0%
suspicion was that the model should not
be<01:52:28.040><c> very</c><01:52:28.280><c> good</c><01:52:28.599><c> at</c><01:52:29.040><c> tasks</c><01:52:29.840><c> related</c><01:52:30.159><c> to</c>

01:52:30.350 --> 01:52:30.360 align:start position:0%
be very good at tasks related to
 

01:52:30.360 --> 01:52:34.669 align:start position:0%
be very good at tasks related to
spelling<01:52:31.320><c> of</c><01:52:31.800><c> this</c><01:52:32.520><c> uh</c><01:52:32.719><c> single</c><01:52:33.280><c> token</c><01:52:34.280><c> so</c><01:52:34.520><c> I</c>

01:52:34.669 --> 01:52:34.679 align:start position:0%
spelling of this uh single token so I
 

01:52:34.679 --> 01:52:36.990 align:start position:0%
spelling of this uh single token so I
asked<01:52:35.119><c> how</c><01:52:35.239><c> many</c><01:52:35.440><c> letters</c><01:52:35.920><c> L</c><01:52:36.480><c> are</c><01:52:36.719><c> there</c><01:52:36.880><c> in</c>

01:52:36.990 --> 01:52:37.000 align:start position:0%
asked how many letters L are there in
 

01:52:37.000 --> 01:52:41.470 align:start position:0%
asked how many letters L are there in
the<01:52:37.119><c> word</c><01:52:37.719><c> default</c><01:52:38.320><c> style</c><01:52:39.320><c> and</c><01:52:39.520><c> of</c><01:52:39.679><c> course</c><01:52:40.520><c> my</c>

01:52:41.470 --> 01:52:41.480 align:start position:0%
the word default style and of course my
 

01:52:41.480 --> 01:52:44.350 align:start position:0%
the word default style and of course my
prompt<01:52:42.480><c> is</c><01:52:42.679><c> intentionally</c><01:52:43.480><c> done</c><01:52:43.719><c> that</c><01:52:43.920><c> way</c>

01:52:44.350 --> 01:52:44.360 align:start position:0%
prompt is intentionally done that way
 

01:52:44.360 --> 01:52:45.750 align:start position:0%
prompt is intentionally done that way
and<01:52:44.440><c> you</c><01:52:44.520><c> see</c><01:52:44.719><c> how</c><01:52:44.880><c> default</c><01:52:45.199><c> style</c><01:52:45.440><c> will</c><01:52:45.520><c> be</c><01:52:45.639><c> a</c>

01:52:45.750 --> 01:52:45.760 align:start position:0%
and you see how default style will be a
 

01:52:45.760 --> 01:52:47.350 align:start position:0%
and you see how default style will be a
single<01:52:46.079><c> token</c><01:52:46.480><c> so</c><01:52:46.599><c> this</c><01:52:46.719><c> is</c><01:52:46.840><c> what</c><01:52:46.960><c> the</c><01:52:47.079><c> model</c>

01:52:47.350 --> 01:52:47.360 align:start position:0%
single token so this is what the model
 

01:52:47.360 --> 01:52:49.390 align:start position:0%
single token so this is what the model
sees<01:52:48.159><c> so</c><01:52:48.320><c> my</c><01:52:48.480><c> suspicion</c><01:52:48.840><c> is</c><01:52:49.000><c> that</c><01:52:49.119><c> it</c><01:52:49.199><c> wouldn't</c>

01:52:49.390 --> 01:52:49.400 align:start position:0%
sees so my suspicion is that it wouldn't
 

01:52:49.400 --> 01:52:51.310 align:start position:0%
sees so my suspicion is that it wouldn't
be<01:52:49.520><c> very</c><01:52:49.639><c> good</c><01:52:49.960><c> at</c><01:52:50.159><c> this</c><01:52:50.480><c> and</c><01:52:50.639><c> indeed</c><01:52:51.000><c> it</c><01:52:51.119><c> is</c>

01:52:51.310 --> 01:52:51.320 align:start position:0%
be very good at this and indeed it is
 

01:52:51.320 --> 01:52:53.149 align:start position:0%
be very good at this and indeed it is
not<01:52:51.800><c> it</c><01:52:51.920><c> doesn't</c><01:52:52.199><c> actually</c><01:52:52.400><c> know</c><01:52:52.560><c> how</c><01:52:52.679><c> many</c>

01:52:53.149 --> 01:52:53.159 align:start position:0%
not it doesn't actually know how many
 

01:52:53.159 --> 01:52:54.629 align:start position:0%
not it doesn't actually know how many
L's<01:52:53.520><c> are</c><01:52:53.679><c> in</c><01:52:53.840><c> there</c><01:52:54.000><c> it</c><01:52:54.119><c> thinks</c><01:52:54.320><c> there</c><01:52:54.440><c> are</c>

01:52:54.629 --> 01:52:54.639 align:start position:0%
L's are in there it thinks there are
 

01:52:54.639 --> 01:52:56.990 align:start position:0%
L's are in there it thinks there are
three<01:52:55.000><c> and</c><01:52:55.159><c> actually</c><01:52:55.440><c> there</c><01:52:55.560><c> are</c><01:52:56.280><c> four</c><01:52:56.760><c> if</c><01:52:56.880><c> I'm</c>

01:52:56.990 --> 01:52:57.000 align:start position:0%
three and actually there are four if I'm
 

01:52:57.000 --> 01:52:59.629 align:start position:0%
three and actually there are four if I'm
not<01:52:57.159><c> getting</c><01:52:57.360><c> this</c><01:52:57.520><c> wrong</c><01:52:58.280><c> myself</c><01:52:59.280><c> so</c><01:52:59.520><c> that</c>

01:52:59.629 --> 01:52:59.639 align:start position:0%
not getting this wrong myself so that
 

01:52:59.639 --> 01:53:02.310 align:start position:0%
not getting this wrong myself so that
didn't<01:52:59.920><c> go</c><01:53:00.119><c> extremely</c><01:53:00.560><c> well</c><01:53:01.239><c> let's</c><01:53:01.800><c> look</c><01:53:02.199><c> look</c>

01:53:02.310 --> 01:53:02.320 align:start position:0%
didn't go extremely well let's look look
 

01:53:02.320 --> 01:53:04.589 align:start position:0%
didn't go extremely well let's look look
at<01:53:02.560><c> another</c><01:53:03.119><c> kind</c><01:53:03.239><c> of</c><01:53:03.760><c> uh</c><01:53:03.880><c> character</c><01:53:04.239><c> level</c>

01:53:04.589 --> 01:53:04.599 align:start position:0%
at another kind of uh character level
 

01:53:04.599 --> 01:53:08.390 align:start position:0%
at another kind of uh character level
task<01:53:05.480><c> so</c><01:53:05.800><c> for</c><01:53:05.960><c> example</c><01:53:06.400><c> here</c><01:53:06.599><c> I</c><01:53:06.800><c> asked</c><01:53:07.440><c> uh</c><01:53:07.560><c> gp4</c>

01:53:08.390 --> 01:53:08.400 align:start position:0%
task so for example here I asked uh gp4
 

01:53:08.400 --> 01:53:11.149 align:start position:0%
task so for example here I asked uh gp4
to<01:53:08.599><c> reverse</c><01:53:08.960><c> the</c><01:53:09.119><c> string</c><01:53:09.599><c> default</c><01:53:10.000><c> style</c><01:53:11.000><c> and</c>

01:53:11.149 --> 01:53:11.159 align:start position:0%
to reverse the string default style and
 

01:53:11.159 --> 01:53:13.189 align:start position:0%
to reverse the string default style and
they<01:53:11.280><c> tried</c><01:53:11.480><c> to</c><01:53:11.560><c> use</c><01:53:11.679><c> a</c><01:53:11.800><c> code</c><01:53:12.119><c> interpreter</c><01:53:13.119><c> and</c>

01:53:13.189 --> 01:53:13.199 align:start position:0%
they tried to use a code interpreter and
 

01:53:13.199 --> 01:53:15.430 align:start position:0%
they tried to use a code interpreter and
I<01:53:13.320><c> stopped</c><01:53:13.679><c> it</c><01:53:14.119><c> and</c><01:53:14.239><c> I</c><01:53:14.360><c> said</c><01:53:14.679><c> just</c><01:53:14.840><c> do</c><01:53:15.000><c> it</c><01:53:15.280><c> just</c>

01:53:15.430 --> 01:53:15.440 align:start position:0%
I stopped it and I said just do it just
 

01:53:15.440 --> 01:53:19.550 align:start position:0%
I stopped it and I said just do it just
try<01:53:15.679><c> it</c><01:53:16.480><c> and</c><01:53:16.800><c> uh</c><01:53:16.920><c> it</c><01:53:17.079><c> gave</c><01:53:17.280><c> me</c><01:53:18.079><c> jumble</c><01:53:18.880><c> so</c><01:53:19.440><c> it</c>

01:53:19.550 --> 01:53:19.560 align:start position:0%
try it and uh it gave me jumble so it
 

01:53:19.560 --> 01:53:21.430 align:start position:0%
try it and uh it gave me jumble so it
doesn't<01:53:19.960><c> actually</c><01:53:20.239><c> really</c><01:53:20.719><c> know</c><01:53:21.079><c> how</c><01:53:21.239><c> to</c>

01:53:21.430 --> 01:53:21.440 align:start position:0%
doesn't actually really know how to
 

01:53:21.440 --> 01:53:23.750 align:start position:0%
doesn't actually really know how to
reverse<01:53:22.040><c> this</c><01:53:22.199><c> string</c><01:53:22.760><c> going</c><01:53:23.040><c> from</c><01:53:23.280><c> right</c><01:53:23.520><c> to</c>

01:53:23.750 --> 01:53:23.760 align:start position:0%
reverse this string going from right to
 

01:53:23.760 --> 01:53:26.750 align:start position:0%
reverse this string going from right to
left<01:53:24.560><c> uh</c><01:53:24.679><c> so</c><01:53:24.840><c> it</c><01:53:25.000><c> gave</c><01:53:25.199><c> a</c><01:53:25.360><c> wrong</c><01:53:25.639><c> result</c><01:53:26.520><c> so</c>

01:53:26.750 --> 01:53:26.760 align:start position:0%
left uh so it gave a wrong result so
 

01:53:26.760 --> 01:53:28.310 align:start position:0%
left uh so it gave a wrong result so
again<01:53:26.960><c> like</c><01:53:27.159><c> working</c><01:53:27.440><c> with</c><01:53:27.599><c> this</c><01:53:27.920><c> working</c>

01:53:28.310 --> 01:53:28.320 align:start position:0%
again like working with this working
 

01:53:28.320 --> 01:53:29.990 align:start position:0%
again like working with this working
hypothesis<01:53:28.960><c> that</c><01:53:29.119><c> maybe</c><01:53:29.360><c> this</c><01:53:29.440><c> is</c><01:53:29.560><c> due</c><01:53:29.719><c> to</c><01:53:29.800><c> the</c>

01:53:29.990 --> 01:53:30.000 align:start position:0%
hypothesis that maybe this is due to the
 

01:53:30.000 --> 01:53:31.830 align:start position:0%
hypothesis that maybe this is due to the
tokenization<01:53:31.000><c> I</c><01:53:31.119><c> tried</c><01:53:31.400><c> a</c><01:53:31.560><c> different</c>

01:53:31.830 --> 01:53:31.840 align:start position:0%
tokenization I tried a different
 

01:53:31.840 --> 01:53:34.109 align:start position:0%
tokenization I tried a different
approach<01:53:32.199><c> I</c><01:53:32.320><c> said</c><01:53:33.159><c> okay</c><01:53:33.400><c> let's</c><01:53:33.599><c> reverse</c><01:53:33.960><c> the</c>

01:53:34.109 --> 01:53:34.119 align:start position:0%
approach I said okay let's reverse the
 

01:53:34.119 --> 01:53:36.430 align:start position:0%
approach I said okay let's reverse the
exact<01:53:34.360><c> same</c><01:53:34.560><c> string</c><01:53:35.400><c> but</c><01:53:35.800><c> take</c><01:53:35.960><c> the</c><01:53:36.079><c> following</c>

01:53:36.430 --> 01:53:36.440 align:start position:0%
exact same string but take the following
 

01:53:36.440 --> 01:53:38.669 align:start position:0%
exact same string but take the following
approach<01:53:37.360><c> step</c><01:53:37.599><c> one</c><01:53:37.880><c> just</c><01:53:38.040><c> print</c><01:53:38.280><c> out</c><01:53:38.480><c> every</c>

01:53:38.669 --> 01:53:38.679 align:start position:0%
approach step one just print out every
 

01:53:38.679 --> 01:53:40.709 align:start position:0%
approach step one just print out every
single<01:53:38.960><c> character</c><01:53:39.360><c> separated</c><01:53:39.760><c> by</c><01:53:39.920><c> spaces</c><01:53:40.599><c> and</c>

01:53:40.709 --> 01:53:40.719 align:start position:0%
single character separated by spaces and
 

01:53:40.719 --> 01:53:43.270 align:start position:0%
single character separated by spaces and
then<01:53:40.880><c> as</c><01:53:40.960><c> a</c><01:53:41.159><c> step</c><01:53:41.360><c> two</c><01:53:41.719><c> reverse</c><01:53:42.159><c> that</c><01:53:42.360><c> list</c><01:53:43.199><c> and</c>

01:53:43.270 --> 01:53:43.280 align:start position:0%
then as a step two reverse that list and
 

01:53:43.280 --> 01:53:44.790 align:start position:0%
then as a step two reverse that list and
it<01:53:43.440><c> again</c><01:53:43.599><c> Tred</c><01:53:43.800><c> to</c><01:53:43.920><c> use</c><01:53:44.040><c> a</c><01:53:44.159><c> tool</c><01:53:44.440><c> but</c><01:53:44.599><c> when</c><01:53:44.679><c> I</c>

01:53:44.790 --> 01:53:44.800 align:start position:0%
it again Tred to use a tool but when I
 

01:53:44.800 --> 01:53:47.750 align:start position:0%
it again Tred to use a tool but when I
stopped<01:53:45.159><c> it</c><01:53:45.880><c> it</c><01:53:46.239><c> uh</c><01:53:46.400><c> first</c><01:53:47.119><c> uh</c><01:53:47.280><c> produced</c><01:53:47.639><c> all</c>

01:53:47.750 --> 01:53:47.760 align:start position:0%
stopped it it uh first uh produced all
 

01:53:47.760 --> 01:53:48.910 align:start position:0%
stopped it it uh first uh produced all
the<01:53:47.880><c> characters</c><01:53:48.280><c> and</c><01:53:48.400><c> that</c><01:53:48.520><c> was</c><01:53:48.679><c> actually</c>

01:53:48.910 --> 01:53:48.920 align:start position:0%
the characters and that was actually
 

01:53:48.920 --> 01:53:50.910 align:start position:0%
the characters and that was actually
correct<01:53:49.960><c> and</c><01:53:50.079><c> then</c><01:53:50.199><c> It</c><01:53:50.320><c> reversed</c><01:53:50.679><c> them</c><01:53:50.800><c> and</c>

01:53:50.910 --> 01:53:50.920 align:start position:0%
correct and then It reversed them and
 

01:53:50.920 --> 01:53:53.030 align:start position:0%
correct and then It reversed them and
that<01:53:51.040><c> was</c><01:53:51.159><c> correct</c><01:53:51.520><c> once</c><01:53:51.679><c> it</c><01:53:51.880><c> had</c><01:53:52.159><c> this</c><01:53:52.880><c> so</c>

01:53:53.030 --> 01:53:53.040 align:start position:0%
that was correct once it had this so
 

01:53:53.040 --> 01:53:54.870 align:start position:0%
that was correct once it had this so
somehow<01:53:53.400><c> it</c><01:53:53.520><c> can't</c><01:53:53.719><c> reverse</c><01:53:54.040><c> it</c><01:53:54.199><c> directly</c><01:53:54.719><c> but</c>

01:53:54.870 --> 01:53:54.880 align:start position:0%
somehow it can't reverse it directly but
 

01:53:54.880 --> 01:53:57.390 align:start position:0%
somehow it can't reverse it directly but
when<01:53:55.000><c> you</c><01:53:55.159><c> go</c><01:53:55.480><c> just</c><01:53:55.719><c> first</c><01:53:56.440><c> uh</c><01:53:57.040><c> you</c><01:53:57.159><c> know</c>

01:53:57.390 --> 01:53:57.400 align:start position:0%
when you go just first uh you know
 

01:53:57.400 --> 01:53:59.270 align:start position:0%
when you go just first uh you know
listing<01:53:57.800><c> it</c><01:53:57.920><c> out</c><01:53:58.119><c> in</c><01:53:58.280><c> order</c><01:53:58.679><c> it</c><01:53:58.800><c> can</c><01:53:58.920><c> do</c><01:53:59.119><c> that</c>

01:53:59.270 --> 01:53:59.280 align:start position:0%
listing it out in order it can do that
 

01:53:59.280 --> 01:54:01.870 align:start position:0%
listing it out in order it can do that
somehow<01:54:00.119><c> and</c><01:54:00.280><c> then</c><01:54:00.480><c> it</c><01:54:00.679><c> can</c><01:54:01.079><c> once</c><01:54:01.280><c> it's</c><01:54:01.800><c> uh</c>

01:54:01.870 --> 01:54:01.880 align:start position:0%
somehow and then it can once it's uh
 

01:54:01.880 --> 01:54:03.870 align:start position:0%
somehow and then it can once it's uh
broken<01:54:02.199><c> up</c><01:54:02.440><c> this</c><01:54:02.599><c> way</c><01:54:03.239><c> this</c><01:54:03.400><c> becomes</c><01:54:03.719><c> all</c>

01:54:03.870 --> 01:54:03.880 align:start position:0%
broken up this way this becomes all
 

01:54:03.880 --> 01:54:06.030 align:start position:0%
broken up this way this becomes all
these<01:54:04.079><c> individual</c><01:54:04.560><c> characters</c><01:54:05.400><c> and</c><01:54:05.480><c> so</c><01:54:05.719><c> now</c>

01:54:06.030 --> 01:54:06.040 align:start position:0%
these individual characters and so now
 

01:54:06.040 --> 01:54:07.870 align:start position:0%
these individual characters and so now
this<01:54:06.119><c> is</c><01:54:06.320><c> much</c><01:54:06.520><c> easier</c><01:54:06.800><c> for</c><01:54:06.960><c> it</c><01:54:07.119><c> to</c><01:54:07.360><c> see</c><01:54:07.679><c> these</c>

01:54:07.870 --> 01:54:07.880 align:start position:0%
this is much easier for it to see these
 

01:54:07.880 --> 01:54:10.069 align:start position:0%
this is much easier for it to see these
individual<01:54:08.360><c> tokens</c><01:54:09.159><c> and</c><01:54:09.480><c> reverse</c><01:54:09.800><c> them</c><01:54:09.920><c> and</c>

01:54:10.069 --> 01:54:10.079 align:start position:0%
individual tokens and reverse them and
 

01:54:10.079 --> 01:54:13.510 align:start position:0%
individual tokens and reverse them and
print<01:54:10.280><c> them</c><01:54:10.800><c> out</c><01:54:11.800><c> so</c><01:54:12.679><c> that</c><01:54:12.760><c> is</c><01:54:12.880><c> kind</c><01:54:13.000><c> of</c>

01:54:13.510 --> 01:54:13.520 align:start position:0%
print them out so that is kind of
 

01:54:13.520 --> 01:54:16.830 align:start position:0%
print them out so that is kind of
interesting<01:54:14.520><c> so</c><01:54:14.679><c> let's</c><01:54:14.880><c> continue</c><01:54:15.400><c> now</c><01:54:16.400><c> why</c>

01:54:16.830 --> 01:54:16.840 align:start position:0%
interesting so let's continue now why
 

01:54:16.840 --> 01:54:20.390 align:start position:0%
interesting so let's continue now why
are<01:54:17.079><c> llms</c><01:54:17.599><c> worse</c><01:54:17.920><c> at</c><01:54:18.480><c> uh</c><01:54:18.639><c> non-english</c><01:54:19.400><c> langu</c>

01:54:20.390 --> 01:54:20.400 align:start position:0%
are llms worse at uh non-english langu
 

01:54:20.400 --> 01:54:22.669 align:start position:0%
are llms worse at uh non-english langu
and<01:54:20.520><c> I</c><01:54:20.639><c> briefly</c><01:54:20.920><c> covered</c><01:54:21.239><c> this</c><01:54:21.440><c> already</c><01:54:21.880><c> but</c>

01:54:22.669 --> 01:54:22.679 align:start position:0%
and I briefly covered this already but
 

01:54:22.679 --> 01:54:24.870 align:start position:0%
and I briefly covered this already but
basically<01:54:23.520><c> um</c><01:54:23.960><c> it's</c><01:54:24.159><c> not</c><01:54:24.360><c> only</c><01:54:24.639><c> that</c><01:54:24.760><c> the</c>

01:54:24.870 --> 01:54:24.880 align:start position:0%
basically um it's not only that the
 

01:54:24.880 --> 01:54:27.149 align:start position:0%
basically um it's not only that the
language<01:54:25.199><c> model</c><01:54:25.440><c> sees</c><01:54:25.880><c> less</c><01:54:26.520><c> non-english</c>

01:54:27.149 --> 01:54:27.159 align:start position:0%
language model sees less non-english
 

01:54:27.159 --> 01:54:28.750 align:start position:0%
language model sees less non-english
data<01:54:27.360><c> during</c><01:54:27.719><c> training</c><01:54:28.079><c> of</c><01:54:28.239><c> the</c><01:54:28.400><c> model</c>

01:54:28.750 --> 01:54:28.760 align:start position:0%
data during training of the model
 

01:54:28.760 --> 01:54:31.629 align:start position:0%
data during training of the model
parameters<01:54:29.560><c> but</c><01:54:29.719><c> also</c><01:54:29.960><c> the</c><01:54:30.079><c> tokenizer</c><01:54:30.800><c> is</c><01:54:31.000><c> not</c>

01:54:31.629 --> 01:54:31.639 align:start position:0%
parameters but also the tokenizer is not
 

01:54:31.639 --> 01:54:34.629 align:start position:0%
parameters but also the tokenizer is not
um<01:54:32.480><c> is</c><01:54:32.639><c> not</c><01:54:33.000><c> sufficiently</c><01:54:33.560><c> trained</c><01:54:34.040><c> on</c>

01:54:34.629 --> 01:54:34.639 align:start position:0%
um is not sufficiently trained on
 

01:54:34.639 --> 01:54:37.270 align:start position:0%
um is not sufficiently trained on
non-english<01:54:35.280><c> data</c><01:54:36.159><c> and</c><01:54:36.280><c> so</c><01:54:36.599><c> here</c><01:54:36.760><c> for</c><01:54:36.920><c> example</c>

01:54:37.270 --> 01:54:37.280 align:start position:0%
non-english data and so here for example
 

01:54:37.280 --> 01:54:40.510 align:start position:0%
non-english data and so here for example
hello<01:54:37.599><c> how</c><01:54:37.719><c> are</c><01:54:37.880><c> you</c><01:54:38.280><c> is</c><01:54:38.760><c> five</c><01:54:39.119><c> tokens</c><01:54:40.119><c> and</c><01:54:40.320><c> its</c>

01:54:40.510 --> 01:54:40.520 align:start position:0%
hello how are you is five tokens and its
 

01:54:40.520 --> 01:54:42.870 align:start position:0%
hello how are you is five tokens and its
translation<01:54:41.079><c> is</c><01:54:41.280><c> 15</c><01:54:41.719><c> tokens</c><01:54:42.280><c> so</c><01:54:42.480><c> this</c><01:54:42.560><c> is</c><01:54:42.679><c> a</c>

01:54:42.870 --> 01:54:42.880 align:start position:0%
translation is 15 tokens so this is a
 

01:54:42.880 --> 01:54:45.790 align:start position:0%
translation is 15 tokens so this is a
three<01:54:43.199><c> times</c><01:54:43.520><c> blow</c><01:54:44.000><c> up</c><01:54:45.000><c> and</c><01:54:45.159><c> so</c><01:54:45.320><c> for</c><01:54:45.480><c> example</c>

01:54:45.790 --> 01:54:45.800 align:start position:0%
three times blow up and so for example
 

01:54:45.800 --> 01:54:48.629 align:start position:0%
three times blow up and so for example
anang<01:54:46.800><c> is</c><01:54:47.280><c> uh</c><01:54:47.440><c> just</c><01:54:47.719><c> hello</c><01:54:48.159><c> basically</c><01:54:48.480><c> in</c>

01:54:48.629 --> 01:54:48.639 align:start position:0%
anang is uh just hello basically in
 

01:54:48.639 --> 01:54:50.310 align:start position:0%
anang is uh just hello basically in
Korean<01:54:49.199><c> and</c><01:54:49.360><c> that</c><01:54:49.639><c> end</c><01:54:49.800><c> up</c><01:54:49.920><c> being</c><01:54:50.119><c> three</c>

01:54:50.310 --> 01:54:50.320 align:start position:0%
Korean and that end up being three
 

01:54:50.320 --> 01:54:51.790 align:start position:0%
Korean and that end up being three
tokens<01:54:50.760><c> I'm</c><01:54:50.880><c> actually</c><01:54:51.040><c> kind</c><01:54:51.159><c> of</c><01:54:51.280><c> surprised</c><01:54:51.639><c> by</c>

01:54:51.790 --> 01:54:51.800 align:start position:0%
tokens I'm actually kind of surprised by
 

01:54:51.800 --> 01:54:53.109 align:start position:0%
tokens I'm actually kind of surprised by
that<01:54:51.960><c> because</c><01:54:52.119><c> that</c><01:54:52.239><c> is</c><01:54:52.320><c> a</c><01:54:52.480><c> very</c><01:54:52.760><c> common</c>

01:54:53.109 --> 01:54:53.119 align:start position:0%
that because that is a very common
 

01:54:53.119 --> 01:54:55.149 align:start position:0%
that because that is a very common
phrase<01:54:53.920><c> there</c><01:54:54.079><c> just</c><01:54:54.199><c> the</c><01:54:54.480><c> typical</c><01:54:54.800><c> greeting</c>

01:54:55.149 --> 01:54:55.159 align:start position:0%
phrase there just the typical greeting
 

01:54:55.159 --> 01:54:56.990 align:start position:0%
phrase there just the typical greeting
of<01:54:55.280><c> like</c><01:54:55.480><c> hello</c><01:54:56.280><c> and</c><01:54:56.400><c> that</c><01:54:56.560><c> ends</c><01:54:56.719><c> up</c><01:54:56.840><c> being</c>

01:54:56.990 --> 01:54:57.000 align:start position:0%
of like hello and that ends up being
 

01:54:57.000 --> 01:54:58.750 align:start position:0%
of like hello and that ends up being
three<01:54:57.199><c> tokens</c><01:54:57.560><c> whereas</c><01:54:57.840><c> our</c><01:54:58.159><c> hello</c><01:54:58.480><c> is</c><01:54:58.599><c> a</c>

01:54:58.750 --> 01:54:58.760 align:start position:0%
three tokens whereas our hello is a
 

01:54:58.760 --> 01:55:00.550 align:start position:0%
three tokens whereas our hello is a
single<01:54:59.040><c> token</c><01:54:59.760><c> and</c><01:54:59.840><c> so</c><01:55:00.000><c> basically</c><01:55:00.320><c> everything</c>

01:55:00.550 --> 01:55:00.560 align:start position:0%
single token and so basically everything
 

01:55:00.560 --> 01:55:02.310 align:start position:0%
single token and so basically everything
is<01:55:00.639><c> a</c><01:55:00.760><c> lot</c><01:55:00.920><c> more</c><01:55:01.079><c> bloated</c><01:55:01.480><c> and</c><01:55:01.679><c> diffuse</c><01:55:02.199><c> and</c>

01:55:02.310 --> 01:55:02.320 align:start position:0%
is a lot more bloated and diffuse and
 

01:55:02.320 --> 01:55:04.069 align:start position:0%
is a lot more bloated and diffuse and
this<01:55:02.440><c> is</c><01:55:02.599><c> I</c><01:55:02.679><c> think</c><01:55:02.920><c> partly</c><01:55:03.400><c> the</c><01:55:03.560><c> reason</c><01:55:03.920><c> that</c>

01:55:04.069 --> 01:55:04.079 align:start position:0%
this is I think partly the reason that
 

01:55:04.079 --> 01:55:06.990 align:start position:0%
this is I think partly the reason that
the<01:55:04.199><c> model</c><01:55:04.520><c> Works</c><01:55:05.239><c> worse</c><01:55:05.719><c> on</c><01:55:05.920><c> other</c>

01:55:06.990 --> 01:55:07.000 align:start position:0%
the model Works worse on other
 

01:55:07.000 --> 01:55:10.030 align:start position:0%
the model Works worse on other
languages<01:55:08.000><c> uh</c><01:55:08.159><c> coming</c><01:55:08.520><c> back</c><01:55:09.280><c> why</c><01:55:09.400><c> is</c><01:55:09.520><c> LM</c><01:55:09.880><c> bad</c>

01:55:10.030 --> 01:55:10.040 align:start position:0%
languages uh coming back why is LM bad
 

01:55:10.040 --> 01:55:13.149 align:start position:0%
languages uh coming back why is LM bad
at<01:55:10.159><c> simple</c><01:55:10.679><c> arithmetic</c><01:55:11.679><c> um</c><01:55:12.480><c> that</c><01:55:12.639><c> has</c><01:55:12.760><c> to</c><01:55:12.920><c> do</c>

01:55:13.149 --> 01:55:13.159 align:start position:0%
at simple arithmetic um that has to do
 

01:55:13.159 --> 01:55:17.350 align:start position:0%
at simple arithmetic um that has to do
with<01:55:13.480><c> the</c><01:55:13.719><c> tokenization</c><01:55:14.679><c> of</c><01:55:15.560><c> numbers</c><01:55:16.560><c> and</c><01:55:16.719><c> so</c>

01:55:17.350 --> 01:55:17.360 align:start position:0%
with the tokenization of numbers and so
 

01:55:17.360 --> 01:55:19.069 align:start position:0%
with the tokenization of numbers and so
um<01:55:18.079><c> you'll</c><01:55:18.280><c> notice</c><01:55:18.560><c> that</c><01:55:18.679><c> for</c><01:55:18.800><c> example</c>

01:55:19.069 --> 01:55:19.079 align:start position:0%
um you'll notice that for example
 

01:55:19.079 --> 01:55:20.950 align:start position:0%
um you'll notice that for example
addition<01:55:19.679><c> is</c><01:55:19.840><c> very</c><01:55:19.960><c> sort</c><01:55:20.119><c> of</c>

01:55:20.950 --> 01:55:20.960 align:start position:0%
addition is very sort of
 

01:55:20.960 --> 01:55:23.069 align:start position:0%
addition is very sort of
like<01:55:21.960><c> uh</c><01:55:22.079><c> there's</c><01:55:22.199><c> an</c><01:55:22.360><c> algorithm</c><01:55:22.840><c> that</c><01:55:22.920><c> is</c>

01:55:23.069 --> 01:55:23.079 align:start position:0%
like uh there's an algorithm that is
 

01:55:23.079 --> 01:55:25.709 align:start position:0%
like uh there's an algorithm that is
like<01:55:23.280><c> character</c><01:55:23.679><c> level</c><01:55:24.079><c> for</c><01:55:24.320><c> doing</c><01:55:24.719><c> addition</c>

01:55:25.709 --> 01:55:25.719 align:start position:0%
like character level for doing addition
 

01:55:25.719 --> 01:55:27.629 align:start position:0%
like character level for doing addition
so<01:55:25.880><c> for</c><01:55:26.079><c> example</c><01:55:26.480><c> here</c><01:55:26.679><c> we</c><01:55:26.800><c> would</c><01:55:27.000><c> first</c><01:55:27.360><c> add</c>

01:55:27.629 --> 01:55:27.639 align:start position:0%
so for example here we would first add
 

01:55:27.639 --> 01:55:29.189 align:start position:0%
so for example here we would first add
the<01:55:27.760><c> ones</c><01:55:28.119><c> and</c><01:55:28.239><c> then</c><01:55:28.400><c> the</c><01:55:28.520><c> tens</c><01:55:28.840><c> and</c><01:55:28.960><c> then</c><01:55:29.079><c> the</c>

01:55:29.189 --> 01:55:29.199 align:start position:0%
the ones and then the tens and then the
 

01:55:29.199 --> 01:55:31.069 align:start position:0%
the ones and then the tens and then the
hundreds<01:55:29.719><c> you</c><01:55:29.840><c> have</c><01:55:29.960><c> to</c><01:55:30.079><c> refer</c><01:55:30.360><c> to</c><01:55:30.599><c> specific</c>

01:55:31.069 --> 01:55:31.079 align:start position:0%
hundreds you have to refer to specific
 

01:55:31.079 --> 01:55:34.709 align:start position:0%
hundreds you have to refer to specific
parts<01:55:31.440><c> of</c><01:55:31.679><c> these</c><01:55:32.400><c> digits</c><01:55:33.400><c> but</c><01:55:33.920><c> uh</c><01:55:34.360><c> these</c>

01:55:34.709 --> 01:55:34.719 align:start position:0%
parts of these digits but uh these
 

01:55:34.719 --> 01:55:36.189 align:start position:0%
parts of these digits but uh these
numbers<01:55:35.159><c> are</c><01:55:35.320><c> represented</c><01:55:35.880><c> completely</c>

01:55:36.189 --> 01:55:36.199 align:start position:0%
numbers are represented completely
 

01:55:36.199 --> 01:55:37.669 align:start position:0%
numbers are represented completely
arbitrarily<01:55:36.760><c> based</c><01:55:36.960><c> on</c><01:55:37.040><c> whatever</c><01:55:37.360><c> happened</c>

01:55:37.669 --> 01:55:37.679 align:start position:0%
arbitrarily based on whatever happened
 

01:55:37.679 --> 01:55:39.270 align:start position:0%
arbitrarily based on whatever happened
to<01:55:37.840><c> merge</c><01:55:38.119><c> or</c><01:55:38.320><c> not</c><01:55:38.560><c> merge</c><01:55:38.920><c> during</c><01:55:39.159><c> the</c>

01:55:39.270 --> 01:55:39.280 align:start position:0%
to merge or not merge during the
 

01:55:39.280 --> 01:55:41.430 align:start position:0%
to merge or not merge during the
tokenization<01:55:39.960><c> process</c><01:55:40.840><c> there's</c><01:55:41.000><c> an</c><01:55:41.159><c> entire</c>

01:55:41.430 --> 01:55:41.440 align:start position:0%
tokenization process there's an entire
 

01:55:41.440 --> 01:55:42.830 align:start position:0%
tokenization process there's an entire
blog<01:55:41.679><c> post</c><01:55:41.920><c> about</c><01:55:42.119><c> this</c><01:55:42.280><c> that</c><01:55:42.400><c> I</c><01:55:42.480><c> think</c><01:55:42.639><c> is</c>

01:55:42.830 --> 01:55:42.840 align:start position:0%
blog post about this that I think is
 

01:55:42.840 --> 01:55:44.709 align:start position:0%
blog post about this that I think is
quite<01:55:43.079><c> good</c><01:55:43.679><c> integer</c><01:55:44.000><c> tokenization</c><01:55:44.560><c> is</c>

01:55:44.709 --> 01:55:44.719 align:start position:0%
quite good integer tokenization is
 

01:55:44.719 --> 01:55:46.669 align:start position:0%
quite good integer tokenization is
insane<01:55:45.520><c> and</c><01:55:45.679><c> this</c><01:55:45.800><c> person</c><01:55:46.040><c> basically</c>

01:55:46.669 --> 01:55:46.679 align:start position:0%
insane and this person basically
 

01:55:46.679 --> 01:55:48.709 align:start position:0%
insane and this person basically
systematically<01:55:47.320><c> explores</c><01:55:47.760><c> the</c><01:55:47.880><c> tokenization</c>

01:55:48.709 --> 01:55:48.719 align:start position:0%
systematically explores the tokenization
 

01:55:48.719 --> 01:55:52.030 align:start position:0%
systematically explores the tokenization
of<01:55:48.920><c> numbers</c><01:55:49.679><c> in</c><01:55:50.119><c> I</c><01:55:50.199><c> believe</c><01:55:50.440><c> this</c><01:55:50.560><c> is</c><01:55:50.960><c> gpt2</c><01:55:51.960><c> and</c>

01:55:52.030 --> 01:55:52.040 align:start position:0%
of numbers in I believe this is gpt2 and
 

01:55:52.040 --> 01:55:53.750 align:start position:0%
of numbers in I believe this is gpt2 and
so<01:55:52.239><c> they</c><01:55:52.360><c> notice</c><01:55:52.639><c> that</c><01:55:52.760><c> for</c><01:55:52.880><c> example</c><01:55:53.239><c> for</c><01:55:53.520><c> the</c>

01:55:53.750 --> 01:55:53.760 align:start position:0%
so they notice that for example for the
 

01:55:53.760 --> 01:55:57.270 align:start position:0%
so they notice that for example for the
for<01:55:54.360><c> um</c><01:55:55.040><c> four-digit</c><01:55:55.800><c> numbers</c><01:55:56.800><c> you</c><01:55:56.880><c> can</c><01:55:57.040><c> take</c><01:55:57.199><c> a</c>

01:55:57.270 --> 01:55:57.280 align:start position:0%
for um four-digit numbers you can take a
 

01:55:57.280 --> 01:56:00.189 align:start position:0%
for um four-digit numbers you can take a
look<01:55:57.400><c> at</c><01:55:57.760><c> whether</c><01:55:58.040><c> it</c><01:55:58.199><c> is</c><01:55:59.159><c> uh</c><01:55:59.280><c> a</c><01:55:59.400><c> single</c><01:55:59.719><c> token</c>

01:56:00.189 --> 01:56:00.199 align:start position:0%
look at whether it is uh a single token
 

01:56:00.199 --> 01:56:02.109 align:start position:0%
look at whether it is uh a single token
or<01:56:00.400><c> whether</c><01:56:00.599><c> it</c><01:56:00.719><c> is</c><01:56:00.920><c> two</c><01:56:01.159><c> tokens</c><01:56:01.560><c> that</c><01:56:01.679><c> is</c><01:56:01.760><c> a</c><01:56:01.920><c> 1</c>

01:56:02.109 --> 01:56:02.119 align:start position:0%
or whether it is two tokens that is a 1
 

01:56:02.119 --> 01:56:04.910 align:start position:0%
or whether it is two tokens that is a 1
three<01:56:02.520><c> or</c><01:56:02.679><c> a</c><01:56:02.800><c> 2</c><01:56:03.000><c> two</c><01:56:03.239><c> or</c><01:56:03.360><c> a</c><01:56:03.440><c> 31</c><01:56:03.880><c> combination</c><01:56:04.800><c> and</c>

01:56:04.910 --> 01:56:04.920 align:start position:0%
three or a 2 two or a 31 combination and
 

01:56:04.920 --> 01:56:06.550 align:start position:0%
three or a 2 two or a 31 combination and
so<01:56:05.239><c> all</c><01:56:05.400><c> the</c><01:56:05.560><c> different</c><01:56:05.760><c> numbers</c><01:56:06.079><c> are</c><01:56:06.280><c> all</c><01:56:06.440><c> the</c>

01:56:06.550 --> 01:56:06.560 align:start position:0%
so all the different numbers are all the
 

01:56:06.560 --> 01:56:08.030 align:start position:0%
so all the different numbers are all the
different<01:56:06.840><c> combinations</c><01:56:07.679><c> and</c><01:56:07.800><c> you</c><01:56:07.880><c> can</c>

01:56:08.030 --> 01:56:08.040 align:start position:0%
different combinations and you can
 

01:56:08.040 --> 01:56:09.189 align:start position:0%
different combinations and you can
imagine<01:56:08.440><c> this</c><01:56:08.520><c> is</c><01:56:08.639><c> all</c><01:56:08.840><c> completely</c>

01:56:09.189 --> 01:56:09.199 align:start position:0%
imagine this is all completely
 

01:56:09.199 --> 01:56:11.270 align:start position:0%
imagine this is all completely
arbitrarily<01:56:09.760><c> so</c><01:56:10.560><c> and</c><01:56:10.800><c> the</c><01:56:10.920><c> model</c>

01:56:11.270 --> 01:56:11.280 align:start position:0%
arbitrarily so and the model
 

01:56:11.280 --> 01:56:14.149 align:start position:0%
arbitrarily so and the model
unfortunately<01:56:12.040><c> sometimes</c><01:56:12.239><c> sees</c><01:56:12.880><c> uh</c><01:56:13.000><c> four</c><01:56:13.840><c> um</c>

01:56:14.149 --> 01:56:14.159 align:start position:0%
unfortunately sometimes sees uh four um
 

01:56:14.159 --> 01:56:16.589 align:start position:0%
unfortunately sometimes sees uh four um
a<01:56:14.320><c> token</c><01:56:14.599><c> for</c><01:56:15.199><c> for</c><01:56:15.400><c> all</c><01:56:15.599><c> four</c><01:56:15.880><c> digits</c>

01:56:16.589 --> 01:56:16.599 align:start position:0%
a token for for all four digits
 

01:56:16.599 --> 01:56:18.030 align:start position:0%
a token for for all four digits
sometimes<01:56:16.800><c> for</c><01:56:17.000><c> three</c><01:56:17.360><c> sometimes</c><01:56:17.560><c> for</c><01:56:17.679><c> two</c>

01:56:18.030 --> 01:56:18.040 align:start position:0%
sometimes for three sometimes for two
 

01:56:18.040 --> 01:56:19.990 align:start position:0%
sometimes for three sometimes for two
sometimes<01:56:18.239><c> for</c><01:56:18.440><c> one</c><01:56:19.159><c> and</c><01:56:19.280><c> it's</c><01:56:19.560><c> in</c><01:56:19.639><c> an</c>

01:56:19.990 --> 01:56:20.000 align:start position:0%
sometimes for one and it's in an
 

01:56:20.000 --> 01:56:22.510 align:start position:0%
sometimes for one and it's in an
arbitrary<01:56:21.000><c> uh</c><01:56:21.280><c> Manner</c><01:56:22.000><c> and</c><01:56:22.079><c> so</c><01:56:22.280><c> this</c><01:56:22.360><c> is</c>

01:56:22.510 --> 01:56:22.520 align:start position:0%
arbitrary uh Manner and so this is
 

01:56:22.520 --> 01:56:24.990 align:start position:0%
arbitrary uh Manner and so this is
definitely<01:56:23.079><c> a</c><01:56:23.639><c> headwind</c><01:56:24.360><c> if</c><01:56:24.480><c> you</c><01:56:24.599><c> will</c><01:56:24.840><c> for</c>

01:56:24.990 --> 01:56:25.000 align:start position:0%
definitely a headwind if you will for
 

01:56:25.000 --> 01:56:26.350 align:start position:0%
definitely a headwind if you will for
the<01:56:25.119><c> language</c><01:56:25.400><c> model</c><01:56:25.880><c> and</c><01:56:26.000><c> it's</c><01:56:26.119><c> kind</c><01:56:26.239><c> of</c>

01:56:26.350 --> 01:56:26.360 align:start position:0%
the language model and it's kind of
 

01:56:26.360 --> 01:56:27.910 align:start position:0%
the language model and it's kind of
incredible<01:56:26.800><c> that</c><01:56:26.880><c> it</c><01:56:27.000><c> can</c><01:56:27.239><c> kind</c><01:56:27.360><c> of</c><01:56:27.520><c> do</c><01:56:27.679><c> it</c><01:56:27.800><c> and</c>

01:56:27.910 --> 01:56:27.920 align:start position:0%
incredible that it can kind of do it and
 

01:56:27.920 --> 01:56:30.109 align:start position:0%
incredible that it can kind of do it and
deal<01:56:28.159><c> with</c><01:56:28.280><c> it</c><01:56:28.599><c> but</c><01:56:28.760><c> it's</c><01:56:28.960><c> also</c><01:56:29.480><c> kind</c><01:56:29.639><c> of</c><01:56:29.880><c> not</c>

01:56:30.109 --> 01:56:30.119 align:start position:0%
deal with it but it's also kind of not
 

01:56:30.119 --> 01:56:31.990 align:start position:0%
deal with it but it's also kind of not
ideal<01:56:30.880><c> and</c><01:56:30.960><c> so</c><01:56:31.159><c> that's</c><01:56:31.320><c> why</c><01:56:31.440><c> for</c><01:56:31.599><c> example</c><01:56:31.880><c> we</c>

01:56:31.990 --> 01:56:32.000 align:start position:0%
ideal and so that's why for example we
 

01:56:32.000 --> 01:56:34.189 align:start position:0%
ideal and so that's why for example we
saw<01:56:32.280><c> that</c><01:56:32.560><c> meta</c><01:56:32.920><c> when</c><01:56:33.079><c> they</c><01:56:33.199><c> train</c><01:56:33.560><c> the</c><01:56:33.800><c> Llama</c>

01:56:34.189 --> 01:56:34.199 align:start position:0%
saw that meta when they train the Llama
 

01:56:34.199 --> 01:56:36.430 align:start position:0%
saw that meta when they train the Llama
2<01:56:34.440><c> algorithm</c><01:56:35.000><c> and</c><01:56:35.159><c> they</c><01:56:35.360><c> use</c><01:56:35.560><c> sentence</c><01:56:35.880><c> piece</c>

01:56:36.430 --> 01:56:36.440 align:start position:0%
2 algorithm and they use sentence piece
 

01:56:36.440 --> 01:56:39.510 align:start position:0%
2 algorithm and they use sentence piece
they<01:56:36.599><c> make</c><01:56:36.760><c> sure</c><01:56:36.960><c> to</c><01:56:37.199><c> split</c><01:56:37.560><c> up</c><01:56:37.800><c> all</c><01:56:38.079><c> the</c><01:56:39.079><c> um</c>

01:56:39.510 --> 01:56:39.520 align:start position:0%
they make sure to split up all the um
 

01:56:39.520 --> 01:56:42.310 align:start position:0%
they make sure to split up all the um
all<01:56:39.719><c> the</c><01:56:39.960><c> digits</c><01:56:40.480><c> as</c><01:56:40.560><c> an</c><01:56:40.760><c> example</c><01:56:41.199><c> for</c><01:56:42.119><c> uh</c>

01:56:42.310 --> 01:56:42.320 align:start position:0%
all the digits as an example for uh
 

01:56:42.320 --> 01:56:44.870 align:start position:0%
all the digits as an example for uh
llama<01:56:42.679><c> 2</c><01:56:43.360><c> and</c><01:56:43.520><c> this</c><01:56:43.639><c> is</c><01:56:43.800><c> partly</c><01:56:44.079><c> to</c><01:56:44.239><c> improve</c><01:56:44.760><c> a</c>

01:56:44.870 --> 01:56:44.880 align:start position:0%
llama 2 and this is partly to improve a
 

01:56:44.880 --> 01:56:46.910 align:start position:0%
llama 2 and this is partly to improve a
simple<01:56:45.199><c> arithmetic</c><01:56:45.880><c> kind</c><01:56:46.000><c> of</c>

01:56:46.910 --> 01:56:46.920 align:start position:0%
simple arithmetic kind of
 

01:56:46.920 --> 01:56:50.510 align:start position:0%
simple arithmetic kind of
performance<01:56:47.920><c> and</c><01:56:48.119><c> finally</c><01:56:49.000><c> why</c><01:56:49.159><c> is</c><01:56:49.440><c> gpt2</c><01:56:50.199><c> not</c>

01:56:50.510 --> 01:56:50.520 align:start position:0%
performance and finally why is gpt2 not
 

01:56:50.520 --> 01:56:52.910 align:start position:0%
performance and finally why is gpt2 not
as<01:56:50.719><c> good</c><01:56:50.920><c> in</c><01:56:51.159><c> Python</c><01:56:52.000><c> again</c><01:56:52.199><c> this</c><01:56:52.320><c> is</c><01:56:52.520><c> partly</c><01:56:52.800><c> a</c>

01:56:52.910 --> 01:56:52.920 align:start position:0%
as good in Python again this is partly a
 

01:56:52.920 --> 01:56:54.870 align:start position:0%
as good in Python again this is partly a
modeling<01:56:53.320><c> issue</c><01:56:53.840><c> on</c><01:56:54.079><c> in</c><01:56:54.199><c> the</c><01:56:54.320><c> architecture</c>

01:56:54.870 --> 01:56:54.880 align:start position:0%
modeling issue on in the architecture
 

01:56:54.880 --> 01:56:56.629 align:start position:0%
modeling issue on in the architecture
and<01:56:55.079><c> the</c><01:56:55.239><c> data</c><01:56:55.520><c> set</c><01:56:55.800><c> and</c><01:56:55.920><c> the</c><01:56:56.119><c> strength</c><01:56:56.400><c> of</c><01:56:56.520><c> the</c>

01:56:56.629 --> 01:56:56.639 align:start position:0%
and the data set and the strength of the
 

01:56:56.639 --> 01:56:58.189 align:start position:0%
and the data set and the strength of the
model<01:56:57.159><c> but</c><01:56:57.239><c> it's</c><01:56:57.440><c> also</c><01:56:57.599><c> partially</c>

01:56:58.189 --> 01:56:58.199 align:start position:0%
model but it's also partially
 

01:56:58.199 --> 01:57:00.310 align:start position:0%
model but it's also partially
tokenization<01:56:59.199><c> because</c><01:56:59.520><c> as</c><01:56:59.639><c> we</c><01:56:59.719><c> saw</c><01:57:00.000><c> here</c><01:57:00.199><c> with</c>

01:57:00.310 --> 01:57:00.320 align:start position:0%
tokenization because as we saw here with
 

01:57:00.320 --> 01:57:03.030 align:start position:0%
tokenization because as we saw here with
the<01:57:00.440><c> simple</c><01:57:00.719><c> python</c><01:57:01.119><c> example</c><01:57:02.040><c> the</c><01:57:02.520><c> encoding</c>

01:57:03.030 --> 01:57:03.040 align:start position:0%
the simple python example the encoding
 

01:57:03.040 --> 01:57:05.189 align:start position:0%
the simple python example the encoding
efficiency<01:57:03.840><c> of</c><01:57:03.960><c> the</c><01:57:04.119><c> tokenizer</c><01:57:04.639><c> for</c><01:57:04.880><c> handling</c>

01:57:05.189 --> 01:57:05.199 align:start position:0%
efficiency of the tokenizer for handling
 

01:57:05.199 --> 01:57:07.350 align:start position:0%
efficiency of the tokenizer for handling
spaces<01:57:05.639><c> in</c><01:57:05.800><c> Python</c><01:57:06.199><c> is</c><01:57:06.320><c> terrible</c><01:57:07.040><c> and</c><01:57:07.199><c> every</c>

01:57:07.350 --> 01:57:07.360 align:start position:0%
spaces in Python is terrible and every
 

01:57:07.360 --> 01:57:09.430 align:start position:0%
spaces in Python is terrible and every
single<01:57:07.599><c> space</c><01:57:07.800><c> is</c><01:57:07.920><c> an</c><01:57:08.079><c> individual</c><01:57:08.520><c> token</c><01:57:09.280><c> and</c>

01:57:09.430 --> 01:57:09.440 align:start position:0%
single space is an individual token and
 

01:57:09.440 --> 01:57:11.069 align:start position:0%
single space is an individual token and
this<01:57:09.599><c> dramatically</c><01:57:10.119><c> reduces</c><01:57:10.599><c> the</c><01:57:10.719><c> context</c>

01:57:11.069 --> 01:57:11.079 align:start position:0%
this dramatically reduces the context
 

01:57:11.079 --> 01:57:12.510 align:start position:0%
this dramatically reduces the context
length<01:57:11.560><c> that</c><01:57:11.679><c> the</c><01:57:11.760><c> model</c><01:57:12.000><c> can</c><01:57:12.119><c> attend</c><01:57:12.360><c> to</c>

01:57:12.510 --> 01:57:12.520 align:start position:0%
length that the model can attend to
 

01:57:12.520 --> 01:57:14.069 align:start position:0%
length that the model can attend to
cross<01:57:13.239><c> so</c><01:57:13.520><c> that's</c><01:57:13.679><c> almost</c><01:57:13.880><c> like</c><01:57:14.000><c> a</c>

01:57:14.069 --> 01:57:14.079 align:start position:0%
cross so that's almost like a
 

01:57:14.079 --> 01:57:16.790 align:start position:0%
cross so that's almost like a
tokenization<01:57:14.719><c> bug</c><01:57:15.079><c> for</c><01:57:15.320><c> gpd2</c><01:57:16.320><c> and</c><01:57:16.480><c> that</c><01:57:16.599><c> was</c>

01:57:16.790 --> 01:57:16.800 align:start position:0%
tokenization bug for gpd2 and that was
 

01:57:16.800 --> 01:57:19.990 align:start position:0%
tokenization bug for gpd2 and that was
later<01:57:17.119><c> fixed</c><01:57:17.719><c> with</c><01:57:18.400><c> gp4</c><01:57:19.520><c> okay</c><01:57:19.639><c> so</c><01:57:19.800><c> here's</c>

01:57:19.990 --> 01:57:20.000 align:start position:0%
later fixed with gp4 okay so here's
 

01:57:20.000 --> 01:57:22.510 align:start position:0%
later fixed with gp4 okay so here's
another<01:57:20.280><c> fun</c><01:57:20.480><c> one</c><01:57:21.119><c> my</c><01:57:21.280><c> llm</c><01:57:21.719><c> abruptly</c><01:57:22.159><c> halts</c>

01:57:22.510 --> 01:57:22.520 align:start position:0%
another fun one my llm abruptly halts
 

01:57:22.520 --> 01:57:25.270 align:start position:0%
another fun one my llm abruptly halts
when<01:57:22.800><c> it</c><01:57:22.880><c> sees</c><01:57:23.199><c> the</c><01:57:23.320><c> string</c><01:57:23.639><c> end</c><01:57:23.840><c> of</c><01:57:24.040><c> text</c><01:57:25.040><c> so</c>

01:57:25.270 --> 01:57:25.280 align:start position:0%
when it sees the string end of text so
 

01:57:25.280 --> 01:57:28.030 align:start position:0%
when it sees the string end of text so
here's<01:57:26.000><c> um</c><01:57:26.320><c> here's</c><01:57:26.480><c> a</c><01:57:26.639><c> very</c><01:57:26.800><c> strange</c><01:57:27.079><c> Behavior</c>

01:57:28.030 --> 01:57:28.040 align:start position:0%
here's um here's a very strange Behavior
 

01:57:28.040 --> 01:57:30.069 align:start position:0%
here's um here's a very strange Behavior
print<01:57:28.239><c> a</c><01:57:28.400><c> string</c><01:57:28.639><c> end</c><01:57:28.800><c> of</c><01:57:29.000><c> text</c><01:57:29.639><c> is</c><01:57:29.760><c> what</c><01:57:29.920><c> I</c>

01:57:30.069 --> 01:57:30.079 align:start position:0%
print a string end of text is what I
 

01:57:30.079 --> 01:57:32.229 align:start position:0%
print a string end of text is what I
told<01:57:30.360><c> jt4</c><01:57:31.360><c> and</c><01:57:31.440><c> it</c><01:57:31.560><c> says</c><01:57:31.800><c> could</c><01:57:31.920><c> you</c><01:57:32.040><c> please</c>

01:57:32.229 --> 01:57:32.239 align:start position:0%
told jt4 and it says could you please
 

01:57:32.239 --> 01:57:35.109 align:start position:0%
told jt4 and it says could you please
specify<01:57:32.599><c> the</c><01:57:33.000><c> string</c><01:57:34.000><c> and</c><01:57:34.320><c> I'm</c><01:57:34.760><c> I'm</c><01:57:34.840><c> telling</c>

01:57:35.109 --> 01:57:35.119 align:start position:0%
specify the string and I'm I'm telling
 

01:57:35.119 --> 01:57:37.149 align:start position:0%
specify the string and I'm I'm telling
it<01:57:35.440><c> give</c><01:57:35.520><c> me</c><01:57:35.639><c> end</c><01:57:35.800><c> of</c><01:57:35.960><c> text</c><01:57:36.360><c> and</c><01:57:36.440><c> it</c><01:57:36.560><c> seems</c><01:57:36.880><c> like</c>

01:57:37.149 --> 01:57:37.159 align:start position:0%
it give me end of text and it seems like
 

01:57:37.159 --> 01:57:39.229 align:start position:0%
it give me end of text and it seems like
there's<01:57:37.320><c> an</c><01:57:37.480><c> issue</c><01:57:37.920><c> it's</c><01:57:38.079><c> not</c><01:57:38.239><c> seeing</c><01:57:38.639><c> end</c><01:57:38.840><c> of</c>

01:57:39.229 --> 01:57:39.239 align:start position:0%
there's an issue it's not seeing end of
 

01:57:39.239 --> 01:57:41.589 align:start position:0%
there's an issue it's not seeing end of
text<01:57:40.239><c> and</c><01:57:40.360><c> then</c><01:57:40.560><c> I</c><01:57:40.679><c> give</c><01:57:40.800><c> it</c><01:57:40.920><c> end</c><01:57:41.119><c> of</c><01:57:41.239><c> text</c><01:57:41.440><c> is</c>

01:57:41.589 --> 01:57:41.599 align:start position:0%
text and then I give it end of text is
 

01:57:41.599 --> 01:57:44.229 align:start position:0%
text and then I give it end of text is
the<01:57:41.800><c> string</c><01:57:42.800><c> and</c><01:57:42.960><c> then</c><01:57:43.159><c> here's</c><01:57:43.360><c> a</c><01:57:43.560><c> string</c><01:57:44.119><c> and</c>

01:57:44.229 --> 01:57:44.239 align:start position:0%
the string and then here's a string and
 

01:57:44.239 --> 01:57:45.830 align:start position:0%
the string and then here's a string and
then<01:57:44.360><c> it</c><01:57:44.480><c> just</c><01:57:44.599><c> doesn't</c><01:57:44.880><c> print</c><01:57:45.119><c> it</c><01:57:45.679><c> so</c>

01:57:45.830 --> 01:57:45.840 align:start position:0%
then it just doesn't print it so
 

01:57:45.840 --> 01:57:47.109 align:start position:0%
then it just doesn't print it so
obviously<01:57:46.199><c> something</c><01:57:46.440><c> is</c><01:57:46.599><c> breaking</c><01:57:46.960><c> here</c>

01:57:47.109 --> 01:57:47.119 align:start position:0%
obviously something is breaking here
 

01:57:47.119 --> 01:57:48.310 align:start position:0%
obviously something is breaking here
with<01:57:47.280><c> respect</c><01:57:47.520><c> to</c><01:57:47.639><c> the</c><01:57:47.719><c> handling</c><01:57:48.079><c> of</c><01:57:48.199><c> the</c>

01:57:48.310 --> 01:57:48.320 align:start position:0%
with respect to the handling of the
 

01:57:48.320 --> 01:57:50.189 align:start position:0%
with respect to the handling of the
special<01:57:48.639><c> token</c><01:57:49.400><c> and</c><01:57:49.520><c> I</c><01:57:49.599><c> don't</c><01:57:49.800><c> actually</c><01:57:50.040><c> know</c>

01:57:50.189 --> 01:57:50.199 align:start position:0%
special token and I don't actually know
 

01:57:50.199 --> 01:57:52.629 align:start position:0%
special token and I don't actually know
what<01:57:50.320><c> open</c><01:57:50.639><c> ey</c><01:57:50.800><c> is</c><01:57:50.920><c> doing</c><01:57:51.520><c> under</c><01:57:52.119><c> the</c><01:57:52.320><c> hood</c>

01:57:52.629 --> 01:57:52.639 align:start position:0%
what open ey is doing under the hood
 

01:57:52.639 --> 01:57:54.510 align:start position:0%
what open ey is doing under the hood
here<01:57:52.920><c> and</c><01:57:53.159><c> whether</c><01:57:53.760><c> they</c><01:57:53.880><c> are</c><01:57:54.079><c> potentially</c>

01:57:54.510 --> 01:57:54.520 align:start position:0%
here and whether they are potentially
 

01:57:54.520 --> 01:57:58.950 align:start position:0%
here and whether they are potentially
parsing<01:57:55.119><c> this</c><01:57:55.560><c> as</c><01:57:55.880><c> an</c><01:57:56.880><c> um</c><01:57:57.840><c> as</c><01:57:57.960><c> an</c><01:57:58.159><c> actual</c><01:57:58.480><c> token</c>

01:57:58.950 --> 01:57:58.960 align:start position:0%
parsing this as an um as an actual token
 

01:57:58.960 --> 01:58:01.149 align:start position:0%
parsing this as an um as an actual token
instead<01:57:59.239><c> of</c><01:57:59.400><c> this</c><01:57:59.599><c> just</c><01:57:59.800><c> being</c><01:58:00.560><c> uh</c><01:58:00.719><c> end</c><01:58:00.920><c> of</c>

01:58:01.149 --> 01:58:01.159 align:start position:0%
instead of this just being uh end of
 

01:58:01.159 --> 01:58:04.589 align:start position:0%
instead of this just being uh end of
text<01:58:02.280><c> um</c><01:58:03.280><c> as</c><01:58:03.440><c> like</c><01:58:03.679><c> individual</c><01:58:04.280><c> sort</c><01:58:04.480><c> of</c>

01:58:04.589 --> 01:58:04.599 align:start position:0%
text um as like individual sort of
 

01:58:04.599 --> 01:58:06.430 align:start position:0%
text um as like individual sort of
pieces<01:58:04.880><c> of</c><01:58:05.040><c> it</c><01:58:05.159><c> without</c><01:58:05.480><c> the</c><01:58:05.679><c> special</c><01:58:06.040><c> token</c>

01:58:06.430 --> 01:58:06.440 align:start position:0%
pieces of it without the special token
 

01:58:06.440 --> 01:58:09.510 align:start position:0%
pieces of it without the special token
handling<01:58:07.280><c> logic</c><01:58:08.280><c> and</c><01:58:08.440><c> so</c><01:58:08.760><c> it</c><01:58:08.920><c> might</c><01:58:09.159><c> be</c><01:58:09.360><c> that</c>

01:58:09.510 --> 01:58:09.520 align:start position:0%
handling logic and so it might be that
 

01:58:09.520 --> 01:58:11.750 align:start position:0%
handling logic and so it might be that
someone<01:58:09.800><c> when</c><01:58:09.920><c> they're</c><01:58:10.119><c> calling</c><01:58:10.480><c> do</c><01:58:10.760><c> encode</c>

01:58:11.750 --> 01:58:11.760 align:start position:0%
someone when they're calling do encode
 

01:58:11.760 --> 01:58:13.350 align:start position:0%
someone when they're calling do encode
uh<01:58:11.880><c> they</c><01:58:11.960><c> are</c><01:58:12.159><c> passing</c><01:58:12.440><c> in</c><01:58:12.639><c> the</c><01:58:12.800><c> allowed</c>

01:58:13.350 --> 01:58:13.360 align:start position:0%
uh they are passing in the allowed
 

01:58:13.360 --> 01:58:16.189 align:start position:0%
uh they are passing in the allowed
special<01:58:14.239><c> and</c><01:58:14.480><c> they</c><01:58:14.599><c> are</c><01:58:14.880><c> allowing</c><01:58:15.800><c> end</c><01:58:16.000><c> of</c>

01:58:16.189 --> 01:58:16.199 align:start position:0%
special and they are allowing end of
 

01:58:16.199 --> 01:58:18.350 align:start position:0%
special and they are allowing end of
text<01:58:16.599><c> as</c><01:58:16.719><c> a</c><01:58:16.880><c> special</c><01:58:17.199><c> character</c><01:58:17.719><c> in</c><01:58:17.880><c> the</c><01:58:18.040><c> user</c>

01:58:18.350 --> 01:58:18.360 align:start position:0%
text as a special character in the user
 

01:58:18.360 --> 01:58:20.830 align:start position:0%
text as a special character in the user
prompt<01:58:19.119><c> but</c><01:58:19.400><c> the</c><01:58:19.440><c> user</c><01:58:19.639><c> prompt</c><01:58:19.920><c> of</c><01:58:20.040><c> course</c><01:58:20.199><c> is</c>

01:58:20.830 --> 01:58:20.840 align:start position:0%
prompt but the user prompt of course is
 

01:58:20.840 --> 01:58:23.510 align:start position:0%
prompt but the user prompt of course is
is<01:58:20.960><c> a</c><01:58:21.199><c> sort</c><01:58:21.400><c> of</c><01:58:21.719><c> um</c><01:58:22.000><c> attacker</c><01:58:22.440><c> controlled</c><01:58:22.920><c> text</c>

01:58:23.510 --> 01:58:23.520 align:start position:0%
is a sort of um attacker controlled text
 

01:58:23.520 --> 01:58:25.310 align:start position:0%
is a sort of um attacker controlled text
so<01:58:23.679><c> you</c><01:58:23.800><c> would</c><01:58:23.960><c> hope</c><01:58:24.119><c> that</c><01:58:24.280><c> they</c><01:58:24.400><c> don't</c><01:58:24.719><c> really</c>

01:58:25.310 --> 01:58:25.320 align:start position:0%
so you would hope that they don't really
 

01:58:25.320 --> 01:58:28.750 align:start position:0%
so you would hope that they don't really
parse<01:58:25.760><c> or</c><01:58:26.040><c> use</c><01:58:26.400><c> special</c><01:58:26.719><c> tokens</c><01:58:27.360><c> or</c><01:58:27.920><c> you</c><01:58:28.040><c> know</c>

01:58:28.750 --> 01:58:28.760 align:start position:0%
parse or use special tokens or you know
 

01:58:28.760 --> 01:58:30.589 align:start position:0%
parse or use special tokens or you know
from<01:58:29.239><c> that</c><01:58:29.360><c> kind</c><01:58:29.480><c> of</c><01:58:29.599><c> input</c><01:58:30.079><c> but</c><01:58:30.199><c> it</c><01:58:30.320><c> appears</c>

01:58:30.589 --> 01:58:30.599 align:start position:0%
from that kind of input but it appears
 

01:58:30.599 --> 01:58:31.750 align:start position:0%
from that kind of input but it appears
that<01:58:30.719><c> there's</c><01:58:30.880><c> something</c><01:58:31.119><c> definitely</c><01:58:31.520><c> going</c>

01:58:31.750 --> 01:58:31.760 align:start position:0%
that there's something definitely going
 

01:58:31.760 --> 01:58:34.790 align:start position:0%
that there's something definitely going
wrong<01:58:32.040><c> here</c><01:58:32.719><c> and</c><01:58:33.119><c> um</c><01:58:33.520><c> so</c><01:58:33.719><c> your</c><01:58:33.960><c> knowledge</c><01:58:34.520><c> of</c>

01:58:34.790 --> 01:58:34.800 align:start position:0%
wrong here and um so your knowledge of
 

01:58:34.800 --> 01:58:36.390 align:start position:0%
wrong here and um so your knowledge of
these<01:58:35.040><c> special</c><01:58:35.400><c> tokens</c><01:58:35.719><c> ends</c><01:58:35.880><c> up</c><01:58:36.000><c> being</c><01:58:36.119><c> in</c><01:58:36.239><c> a</c>

01:58:36.390 --> 01:58:36.400 align:start position:0%
these special tokens ends up being in a
 

01:58:36.400 --> 01:58:38.870 align:start position:0%
these special tokens ends up being in a
tax<01:58:36.599><c> surface</c><01:58:37.119><c> potentially</c><01:58:38.119><c> and</c><01:58:38.280><c> so</c><01:58:38.520><c> if</c><01:58:38.639><c> you'd</c>

01:58:38.870 --> 01:58:38.880 align:start position:0%
tax surface potentially and so if you'd
 

01:58:38.880 --> 01:58:42.990 align:start position:0%
tax surface potentially and so if you'd
like<01:58:39.079><c> to</c><01:58:39.560><c> confuse</c><01:58:40.440><c> llms</c><01:58:41.440><c> then</c><01:58:41.719><c> just</c><01:58:42.199><c> um</c><01:58:42.679><c> try</c><01:58:42.880><c> to</c>

01:58:42.990 --> 01:58:43.000 align:start position:0%
like to confuse llms then just um try to
 

01:58:43.000 --> 01:58:44.310 align:start position:0%
like to confuse llms then just um try to
give<01:58:43.119><c> them</c><01:58:43.239><c> some</c><01:58:43.440><c> special</c><01:58:43.679><c> tokens</c><01:58:43.960><c> and</c><01:58:44.079><c> see</c><01:58:44.239><c> if</c>

01:58:44.310 --> 01:58:44.320 align:start position:0%
give them some special tokens and see if
 

01:58:44.320 --> 01:58:46.390 align:start position:0%
give them some special tokens and see if
you're<01:58:44.480><c> breaking</c><01:58:44.800><c> something</c><01:58:45.079><c> by</c><01:58:45.280><c> chance</c><01:58:46.280><c> okay</c>

01:58:46.390 --> 01:58:46.400 align:start position:0%
you're breaking something by chance okay
 

01:58:46.400 --> 01:58:49.470 align:start position:0%
you're breaking something by chance okay
so<01:58:46.599><c> this</c><01:58:46.719><c> next</c><01:58:46.880><c> one</c><01:58:47.040><c> is</c><01:58:47.119><c> a</c><01:58:47.239><c> really</c><01:58:47.440><c> fun</c><01:58:48.000><c> one</c><01:58:49.000><c> uh</c>

01:58:49.470 --> 01:58:49.480 align:start position:0%
so this next one is a really fun one uh
 

01:58:49.480 --> 01:58:52.870 align:start position:0%
so this next one is a really fun one uh
the<01:58:49.760><c> trailing</c><01:58:50.239><c> whites</c><01:58:50.520><c> space</c><01:58:51.239><c> issue</c><01:58:52.000><c> so</c><01:58:52.760><c> if</c>

01:58:52.870 --> 01:58:52.880 align:start position:0%
the trailing whites space issue so if
 

01:58:52.880 --> 01:58:55.990 align:start position:0%
the trailing whites space issue so if
you<01:58:53.000><c> come</c><01:58:53.159><c> to</c><01:58:53.480><c> playground</c><01:58:54.480><c> and</c><01:58:55.159><c> uh</c><01:58:55.679><c> we</c><01:58:55.840><c> come</c>

01:58:55.990 --> 01:58:56.000 align:start position:0%
you come to playground and uh we come
 

01:58:56.000 --> 01:58:58.430 align:start position:0%
you come to playground and uh we come
here<01:58:56.159><c> to</c><01:58:56.280><c> GPT</c><01:58:56.639><c> 3.5</c><01:58:57.079><c> turbo</c><01:58:57.520><c> instruct</c><01:58:58.159><c> so</c><01:58:58.320><c> this</c>

01:58:58.430 --> 01:58:58.440 align:start position:0%
here to GPT 3.5 turbo instruct so this
 

01:58:58.440 --> 01:59:00.310 align:start position:0%
here to GPT 3.5 turbo instruct so this
is<01:58:58.599><c> not</c><01:58:58.719><c> a</c><01:58:58.840><c> chat</c><01:58:59.119><c> model</c><01:58:59.440><c> this</c><01:58:59.560><c> is</c><01:58:59.639><c> a</c><01:58:59.800><c> completion</c>

01:59:00.310 --> 01:59:00.320 align:start position:0%
is not a chat model this is a completion
 

01:59:00.320 --> 01:59:02.870 align:start position:0%
is not a chat model this is a completion
model<01:59:00.679><c> so</c><01:59:01.119><c> think</c><01:59:01.280><c> of</c><01:59:01.360><c> it</c><01:59:01.520><c> more</c><01:59:01.760><c> like</c><01:59:02.360><c> it's</c><01:59:02.760><c> a</c>

01:59:02.870 --> 01:59:02.880 align:start position:0%
model so think of it more like it's a
 

01:59:02.880 --> 01:59:05.270 align:start position:0%
model so think of it more like it's a
lot<01:59:03.040><c> more</c><01:59:03.199><c> closer</c><01:59:03.520><c> to</c><01:59:03.719><c> a</c><01:59:03.880><c> base</c><01:59:04.159><c> model</c><01:59:04.560><c> it</c><01:59:04.760><c> does</c>

01:59:05.270 --> 01:59:05.280 align:start position:0%
lot more closer to a base model it does
 

01:59:05.280 --> 01:59:07.589 align:start position:0%
lot more closer to a base model it does
completion<01:59:05.840><c> it</c><01:59:05.960><c> will</c><01:59:06.159><c> continue</c><01:59:06.679><c> the</c><01:59:06.840><c> token</c>

01:59:07.589 --> 01:59:07.599 align:start position:0%
completion it will continue the token
 

01:59:07.599 --> 01:59:09.870 align:start position:0%
completion it will continue the token
sequence<01:59:08.599><c> so</c><01:59:08.800><c> here's</c><01:59:08.960><c> a</c><01:59:09.119><c> tagline</c><01:59:09.440><c> for</c><01:59:09.639><c> ice</c>

01:59:09.870 --> 01:59:09.880 align:start position:0%
sequence so here's a tagline for ice
 

01:59:09.880 --> 01:59:11.629 align:start position:0%
sequence so here's a tagline for ice
cream<01:59:10.079><c> shop</c><01:59:10.400><c> and</c><01:59:10.520><c> we</c><01:59:10.599><c> want</c><01:59:10.719><c> to</c><01:59:10.880><c> continue</c><01:59:11.320><c> the</c>

01:59:11.629 --> 01:59:11.639 align:start position:0%
cream shop and we want to continue the
 

01:59:11.639 --> 01:59:14.229 align:start position:0%
cream shop and we want to continue the
sequence<01:59:12.639><c> and</c><01:59:12.880><c> so</c><01:59:13.040><c> we</c><01:59:13.119><c> can</c><01:59:13.320><c> submit</c><01:59:13.840><c> and</c><01:59:14.000><c> get</c><01:59:14.119><c> a</c>

01:59:14.229 --> 01:59:14.239 align:start position:0%
sequence and so we can submit and get a
 

01:59:14.239 --> 01:59:18.229 align:start position:0%
sequence and so we can submit and get a
bunch<01:59:14.400><c> of</c><01:59:14.679><c> tokens</c><01:59:15.679><c> okay</c><01:59:16.040><c> no</c><01:59:16.360><c> problem</c><01:59:17.360><c> but</c><01:59:17.599><c> now</c>

01:59:18.229 --> 01:59:18.239 align:start position:0%
bunch of tokens okay no problem but now
 

01:59:18.239 --> 01:59:20.830 align:start position:0%
bunch of tokens okay no problem but now
suppose<01:59:18.599><c> I</c><01:59:18.719><c> do</c><01:59:18.960><c> this</c><01:59:19.639><c> but</c><01:59:19.840><c> instead</c><01:59:20.280><c> of</c>

01:59:20.830 --> 01:59:20.840 align:start position:0%
suppose I do this but instead of
 

01:59:20.840 --> 01:59:23.109 align:start position:0%
suppose I do this but instead of
pressing<01:59:21.280><c> submit</c><01:59:21.719><c> here</c><01:59:22.400><c> I</c><01:59:22.560><c> do</c><01:59:22.840><c> here's</c><01:59:23.000><c> a</c>

01:59:23.109 --> 01:59:23.119 align:start position:0%
pressing submit here I do here's a
 

01:59:23.119 --> 01:59:25.990 align:start position:0%
pressing submit here I do here's a
tagline<01:59:23.400><c> for</c><01:59:23.560><c> ice</c><01:59:23.760><c> cream</c><01:59:23.920><c> shop</c><01:59:24.760><c> space</c><01:59:25.760><c> so</c><01:59:25.920><c> I</c>

01:59:25.990 --> 01:59:26.000 align:start position:0%
tagline for ice cream shop space so I
 

01:59:26.000 --> 01:59:28.950 align:start position:0%
tagline for ice cream shop space so I
have<01:59:26.119><c> a</c><01:59:26.320><c> space</c><01:59:26.719><c> here</c><01:59:27.320><c> before</c><01:59:27.520><c> I</c><01:59:27.719><c> click</c>

01:59:28.950 --> 01:59:28.960 align:start position:0%
have a space here before I click
 

01:59:28.960 --> 01:59:31.830 align:start position:0%
have a space here before I click
submit<01:59:29.960><c> we</c><01:59:30.079><c> get</c><01:59:30.199><c> a</c><01:59:30.320><c> warning</c><01:59:31.119><c> your</c><01:59:31.360><c> text</c><01:59:31.599><c> ends</c>

01:59:31.830 --> 01:59:31.840 align:start position:0%
submit we get a warning your text ends
 

01:59:31.840 --> 01:59:33.390 align:start position:0%
submit we get a warning your text ends
in<01:59:31.920><c> a</c><01:59:32.000><c> trail</c><01:59:32.199><c> Ling</c><01:59:32.400><c> space</c><01:59:32.679><c> which</c><01:59:32.840><c> causes</c><01:59:33.159><c> worse</c>

01:59:33.390 --> 01:59:33.400 align:start position:0%
in a trail Ling space which causes worse
 

01:59:33.400 --> 01:59:35.830 align:start position:0%
in a trail Ling space which causes worse
performance<01:59:33.800><c> due</c><01:59:33.960><c> to</c><01:59:34.040><c> how</c><01:59:34.199><c> API</c><01:59:34.599><c> splits</c><01:59:35.560><c> text</c>

01:59:35.830 --> 01:59:35.840 align:start position:0%
performance due to how API splits text
 

01:59:35.840 --> 01:59:38.229 align:start position:0%
performance due to how API splits text
into<01:59:36.199><c> tokens</c><01:59:37.199><c> so</c><01:59:37.440><c> what's</c><01:59:37.599><c> happening</c><01:59:37.920><c> here</c><01:59:38.079><c> it</c>

01:59:38.229 --> 01:59:38.239 align:start position:0%
into tokens so what's happening here it
 

01:59:38.239 --> 01:59:40.550 align:start position:0%
into tokens so what's happening here it
still<01:59:38.480><c> gave</c><01:59:38.679><c> us</c><01:59:39.159><c> a</c><01:59:39.560><c> uh</c><01:59:39.760><c> sort</c><01:59:40.000><c> of</c><01:59:40.119><c> completion</c>

01:59:40.550 --> 01:59:40.560 align:start position:0%
still gave us a uh sort of completion
 

01:59:40.560 --> 01:59:42.790 align:start position:0%
still gave us a uh sort of completion
here<01:59:40.719><c> but</c><01:59:40.840><c> let's</c><01:59:41.040><c> take</c><01:59:41.119><c> a</c><01:59:41.239><c> look</c><01:59:41.360><c> at</c><01:59:41.520><c> what's</c>

01:59:42.790 --> 01:59:42.800 align:start position:0%
here but let's take a look at what's
 

01:59:42.800 --> 01:59:44.870 align:start position:0%
here but let's take a look at what's
happening<01:59:43.800><c> so</c><01:59:43.960><c> here's</c><01:59:44.119><c> a</c><01:59:44.239><c> tagline</c><01:59:44.560><c> for</c><01:59:44.639><c> an</c><01:59:44.719><c> ice</c>

01:59:44.870 --> 01:59:44.880 align:start position:0%
happening so here's a tagline for an ice
 

01:59:44.880 --> 01:59:48.669 align:start position:0%
happening so here's a tagline for an ice
cream<01:59:45.599><c> shop</c><01:59:46.599><c> and</c><01:59:46.960><c> then</c><01:59:47.960><c> what</c><01:59:48.159><c> does</c><01:59:48.400><c> this</c><01:59:48.520><c> look</c>

01:59:48.669 --> 01:59:48.679 align:start position:0%
cream shop and then what does this look
 

01:59:48.679 --> 01:59:50.149 align:start position:0%
cream shop and then what does this look
like<01:59:48.840><c> in</c><01:59:48.920><c> the</c><01:59:49.040><c> actual</c><01:59:49.239><c> actual</c><01:59:49.520><c> training</c><01:59:49.840><c> data</c>

01:59:50.149 --> 01:59:50.159 align:start position:0%
like in the actual actual training data
 

01:59:50.159 --> 01:59:52.270 align:start position:0%
like in the actual actual training data
suppose<01:59:50.440><c> you</c><01:59:50.639><c> found</c><01:59:51.159><c> the</c><01:59:51.320><c> completion</c><01:59:52.000><c> in</c><01:59:52.159><c> the</c>

01:59:52.270 --> 01:59:52.280 align:start position:0%
suppose you found the completion in the
 

01:59:52.280 --> 01:59:53.550 align:start position:0%
suppose you found the completion in the
training<01:59:52.639><c> document</c><01:59:53.040><c> somewhere</c><01:59:53.320><c> on</c><01:59:53.440><c> the</c>

01:59:53.550 --> 01:59:53.560 align:start position:0%
training document somewhere on the
 

01:59:53.560 --> 01:59:55.669 align:start position:0%
training document somewhere on the
internet<01:59:54.119><c> and</c><01:59:54.400><c> the</c><01:59:54.520><c> llm</c><01:59:54.960><c> trained</c><01:59:55.280><c> on</c><01:59:55.480><c> this</c>

01:59:55.669 --> 01:59:55.679 align:start position:0%
internet and the llm trained on this
 

01:59:55.679 --> 01:59:58.310 align:start position:0%
internet and the llm trained on this
data<01:59:56.239><c> so</c><01:59:56.440><c> maybe</c><01:59:56.719><c> it's</c><01:59:56.840><c> something</c><01:59:57.199><c> like</c><01:59:57.880><c> oh</c>

01:59:58.310 --> 01:59:58.320 align:start position:0%
data so maybe it's something like oh
 

01:59:58.320 --> 02:00:00.390 align:start position:0%
data so maybe it's something like oh
yeah<01:59:59.320><c> maybe</c><01:59:59.560><c> that's</c><01:59:59.679><c> the</c><01:59:59.880><c> tagline</c><02:00:00.199><c> that's</c><02:00:00.320><c> a</c>

02:00:00.390 --> 02:00:00.400 align:start position:0%
yeah maybe that's the tagline that's a
 

02:00:00.400 --> 02:00:02.750 align:start position:0%
yeah maybe that's the tagline that's a
terrible<02:00:00.719><c> tagline</c><02:00:01.159><c> but</c><02:00:02.119><c> notice</c><02:00:02.440><c> here</c><02:00:02.599><c> that</c>

02:00:02.750 --> 02:00:02.760 align:start position:0%
terrible tagline but notice here that
 

02:00:02.760 --> 02:00:05.750 align:start position:0%
terrible tagline but notice here that
when<02:00:02.840><c> I</c><02:00:03.000><c> create</c><02:00:03.599><c> o</c><02:00:04.560><c> you</c><02:00:04.679><c> see</c><02:00:04.960><c> that</c><02:00:05.400><c> because</c>

02:00:05.750 --> 02:00:05.760 align:start position:0%
when I create o you see that because
 

02:00:05.760 --> 02:00:07.790 align:start position:0%
when I create o you see that because
there's<02:00:06.119><c> the</c><02:00:06.840><c> the</c><02:00:07.000><c> space</c><02:00:07.320><c> character</c><02:00:07.639><c> is</c>

02:00:07.790 --> 02:00:07.800 align:start position:0%
there's the the space character is
 

02:00:07.800 --> 02:00:11.149 align:start position:0%
there's the the space character is
always<02:00:08.000><c> a</c><02:00:08.199><c> prefix</c><02:00:08.880><c> to</c><02:00:09.119><c> these</c><02:00:09.320><c> tokens</c><02:00:09.920><c> in</c><02:00:10.280><c> GPT</c>

02:00:11.149 --> 02:00:11.159 align:start position:0%
always a prefix to these tokens in GPT
 

02:00:11.159 --> 02:00:13.470 align:start position:0%
always a prefix to these tokens in GPT
so<02:00:11.320><c> it's</c><02:00:11.480><c> not</c><02:00:11.599><c> an</c><02:00:11.840><c> O</c><02:00:12.159><c> token</c><02:00:12.480><c> it's</c><02:00:12.599><c> a</c><02:00:12.800><c> space</c><02:00:13.199><c> o</c>

02:00:13.470 --> 02:00:13.480 align:start position:0%
so it's not an O token it's a space o
 

02:00:13.480 --> 02:00:16.750 align:start position:0%
so it's not an O token it's a space o
token<02:00:14.000><c> the</c><02:00:14.239><c> space</c><02:00:14.800><c> is</c><02:00:15.040><c> part</c><02:00:15.239><c> of</c><02:00:15.440><c> the</c><02:00:15.599><c> O</c><02:00:16.440><c> and</c>

02:00:16.750 --> 02:00:16.760 align:start position:0%
token the space is part of the O and
 

02:00:16.760 --> 02:00:19.229 align:start position:0%
token the space is part of the O and
together<02:00:17.199><c> they</c><02:00:17.320><c> are</c><02:00:17.560><c> token</c><02:00:18.000><c> 8840</c><02:00:19.000><c> that's</c>

02:00:19.229 --> 02:00:19.239 align:start position:0%
together they are token 8840 that's
 

02:00:19.239 --> 02:00:21.910 align:start position:0%
together they are token 8840 that's
that's<02:00:19.520><c> space</c><02:00:20.119><c> o</c><02:00:21.119><c> so</c><02:00:21.320><c> what's</c><02:00:21.760><c> What's</c>

02:00:21.910 --> 02:00:21.920 align:start position:0%
that's space o so what's What's
 

02:00:21.920 --> 02:00:24.109 align:start position:0%
that's space o so what's What's
Happening<02:00:22.280><c> Here</c><02:00:22.520><c> is</c><02:00:22.760><c> that</c><02:00:23.560><c> when</c><02:00:23.679><c> I</c><02:00:23.840><c> just</c><02:00:24.000><c> have</c>

02:00:24.109 --> 02:00:24.119 align:start position:0%
Happening Here is that when I just have
 

02:00:24.119 --> 02:00:27.030 align:start position:0%
Happening Here is that when I just have
it<02:00:24.280><c> like</c><02:00:24.719><c> this</c><02:00:25.719><c> and</c><02:00:26.000><c> I</c><02:00:26.159><c> let</c><02:00:26.440><c> it</c><02:00:26.599><c> complete</c><02:00:26.920><c> the</c>

02:00:27.030 --> 02:00:27.040 align:start position:0%
it like this and I let it complete the
 

02:00:27.040 --> 02:00:30.030 align:start position:0%
it like this and I let it complete the
next<02:00:27.280><c> token</c><02:00:28.040><c> it</c><02:00:28.199><c> can</c><02:00:28.400><c> sample</c><02:00:28.920><c> the</c><02:00:29.320><c> space</c><02:00:29.639><c> o</c>

02:00:30.030 --> 02:00:30.040 align:start position:0%
next token it can sample the space o
 

02:00:30.040 --> 02:00:32.589 align:start position:0%
next token it can sample the space o
token<02:00:31.040><c> but</c><02:00:31.239><c> instead</c><02:00:31.639><c> if</c><02:00:31.760><c> I</c><02:00:31.960><c> have</c><02:00:32.159><c> this</c><02:00:32.320><c> and</c><02:00:32.440><c> I</c>

02:00:32.589 --> 02:00:32.599 align:start position:0%
token but instead if I have this and I
 

02:00:32.599 --> 02:00:34.750 align:start position:0%
token but instead if I have this and I
add<02:00:32.840><c> my</c><02:00:33.119><c> space</c><02:00:34.000><c> then</c><02:00:34.119><c> what</c><02:00:34.239><c> I'm</c><02:00:34.360><c> doing</c><02:00:34.599><c> here</c>

02:00:34.750 --> 02:00:34.760 align:start position:0%
add my space then what I'm doing here
 

02:00:34.760 --> 02:00:37.629 align:start position:0%
add my space then what I'm doing here
when<02:00:34.880><c> I</c><02:00:35.040><c> incode</c><02:00:35.599><c> this</c><02:00:35.800><c> string</c><02:00:36.719><c> is</c><02:00:36.960><c> I</c><02:00:37.119><c> have</c>

02:00:37.629 --> 02:00:37.639 align:start position:0%
when I incode this string is I have
 

02:00:37.639 --> 02:00:39.069 align:start position:0%
when I incode this string is I have
basically<02:00:38.119><c> here's</c><02:00:38.280><c> a</c><02:00:38.400><c> t</c><02:00:38.560><c> line</c><02:00:38.719><c> for</c><02:00:38.800><c> an</c><02:00:38.880><c> ice</c>

02:00:39.069 --> 02:00:39.079 align:start position:0%
basically here's a t line for an ice
 

02:00:39.079 --> 02:00:41.990 align:start position:0%
basically here's a t line for an ice
cream<02:00:39.719><c> uh</c><02:00:39.920><c> shop</c><02:00:40.840><c> and</c><02:00:41.040><c> this</c><02:00:41.280><c> space</c><02:00:41.599><c> at</c><02:00:41.679><c> the</c><02:00:41.800><c> very</c>

02:00:41.990 --> 02:00:42.000 align:start position:0%
cream uh shop and this space at the very
 

02:00:42.000 --> 02:00:44.069 align:start position:0%
cream uh shop and this space at the very
end<02:00:42.199><c> becomes</c><02:00:42.480><c> a</c><02:00:42.599><c> token</c>

02:00:44.069 --> 02:00:44.079 align:start position:0%
end becomes a token
 

02:00:44.079 --> 02:00:47.830 align:start position:0%
end becomes a token
220<02:00:45.079><c> and</c><02:00:45.320><c> so</c><02:00:45.599><c> we've</c><02:00:45.960><c> added</c><02:00:46.320><c> token</c><02:00:46.679><c> 220</c><02:00:47.679><c> and</c>

02:00:47.830 --> 02:00:47.840 align:start position:0%
220 and so we've added token 220 and
 

02:00:47.840 --> 02:00:49.750 align:start position:0%
220 and so we've added token 220 and
this<02:00:48.040><c> token</c><02:00:48.360><c> otherwise</c><02:00:48.679><c> would</c><02:00:48.840><c> be</c><02:00:49.159><c> part</c><02:00:49.320><c> of</c>

02:00:49.750 --> 02:00:49.760 align:start position:0%
this token otherwise would be part of
 

02:00:49.760 --> 02:00:51.870 align:start position:0%
this token otherwise would be part of
the<02:00:49.960><c> tagline</c><02:00:50.960><c> because</c><02:00:51.280><c> if</c><02:00:51.400><c> there</c><02:00:51.560><c> actually</c><02:00:51.800><c> is</c>

02:00:51.870 --> 02:00:51.880 align:start position:0%
the tagline because if there actually is
 

02:00:51.880 --> 02:00:55.229 align:start position:0%
the tagline because if there actually is
a<02:00:52.000><c> tagline</c><02:00:52.440><c> here</c><02:00:52.599><c> so</c><02:00:52.840><c> space</c><02:00:53.159><c> o</c><02:00:53.719><c> is</c><02:00:53.880><c> the</c><02:00:54.239><c> token</c>

02:00:55.229 --> 02:00:55.239 align:start position:0%
a tagline here so space o is the token
 

02:00:55.239 --> 02:00:57.310 align:start position:0%
a tagline here so space o is the token
and<02:00:55.400><c> so</c><02:00:55.920><c> this</c><02:00:56.040><c> is</c><02:00:56.599><c> suddenly</c><02:00:56.960><c> a</c><02:00:57.159><c> of</c>

02:00:57.310 --> 02:00:57.320 align:start position:0%
and so this is suddenly a of
 

02:00:57.320 --> 02:00:59.669 align:start position:0%
and so this is suddenly a of
distribution<02:00:57.760><c> for</c><02:00:57.920><c> the</c><02:00:58.079><c> model</c><02:00:58.840><c> because</c><02:00:59.480><c> this</c>

02:00:59.669 --> 02:00:59.679 align:start position:0%
distribution for the model because this
 

02:00:59.679 --> 02:01:01.510 align:start position:0%
distribution for the model because this
space<02:01:00.000><c> is</c><02:01:00.159><c> part</c><02:01:00.320><c> of</c><02:01:00.440><c> the</c><02:01:00.560><c> next</c><02:01:00.800><c> token</c><02:01:01.400><c> but</c>

02:01:01.510 --> 02:01:01.520 align:start position:0%
space is part of the next token but
 

02:01:01.520 --> 02:01:04.030 align:start position:0%
space is part of the next token but
we're<02:01:01.719><c> putting</c><02:01:01.960><c> it</c><02:01:02.239><c> here</c><02:01:02.920><c> like</c><02:01:03.159><c> this</c><02:01:03.800><c> and</c><02:01:03.920><c> the</c>

02:01:04.030 --> 02:01:04.040 align:start position:0%
we're putting it here like this and the
 

02:01:04.040 --> 02:01:07.189 align:start position:0%
we're putting it here like this and the
model<02:01:04.320><c> has</c><02:01:04.560><c> seen</c><02:01:04.920><c> very</c><02:01:05.199><c> very</c><02:01:05.440><c> little</c><02:01:05.840><c> data</c><02:01:06.679><c> of</c>

02:01:07.189 --> 02:01:07.199 align:start position:0%
model has seen very very little data of
 

02:01:07.199 --> 02:01:10.069 align:start position:0%
model has seen very very little data of
actual<02:01:07.960><c> Space</c><02:01:08.400><c> by</c><02:01:08.560><c> itself</c><02:01:09.560><c> and</c><02:01:09.639><c> we're</c><02:01:09.840><c> asking</c>

02:01:10.069 --> 02:01:10.079 align:start position:0%
actual Space by itself and we're asking
 

02:01:10.079 --> 02:01:11.709 align:start position:0%
actual Space by itself and we're asking
it<02:01:10.199><c> to</c><02:01:10.320><c> complete</c><02:01:10.639><c> the</c><02:01:10.760><c> sequence</c><02:01:11.239><c> like</c><02:01:11.440><c> add</c><02:01:11.560><c> in</c>

02:01:11.709 --> 02:01:11.719 align:start position:0%
it to complete the sequence like add in
 

02:01:11.719 --> 02:01:13.470 align:start position:0%
it to complete the sequence like add in
more<02:01:11.960><c> tokens</c><02:01:12.679><c> but</c><02:01:12.800><c> the</c><02:01:12.920><c> problem</c><02:01:13.199><c> is</c><02:01:13.320><c> that</c>

02:01:13.470 --> 02:01:13.480 align:start position:0%
more tokens but the problem is that
 

02:01:13.480 --> 02:01:16.350 align:start position:0%
more tokens but the problem is that
we've<02:01:13.800><c> sort</c><02:01:14.000><c> of</c><02:01:14.199><c> begun</c><02:01:14.679><c> the</c><02:01:14.880><c> first</c><02:01:15.360><c> token</c><02:01:16.159><c> and</c>

02:01:16.350 --> 02:01:16.360 align:start position:0%
we've sort of begun the first token and
 

02:01:16.360 --> 02:01:18.750 align:start position:0%
we've sort of begun the first token and
now<02:01:16.880><c> it's</c><02:01:17.079><c> been</c><02:01:17.320><c> split</c><02:01:17.760><c> up</c><02:01:18.239><c> and</c><02:01:18.360><c> now</c><02:01:18.520><c> we're</c><02:01:18.679><c> out</c>

02:01:18.750 --> 02:01:18.760 align:start position:0%
now it's been split up and now we're out
 

02:01:18.760 --> 02:01:20.750 align:start position:0%
now it's been split up and now we're out
of<02:01:18.880><c> this</c><02:01:19.079><c> distribution</c><02:01:19.920><c> and</c><02:01:20.040><c> now</c><02:01:20.280><c> arbitrary</c>

02:01:20.750 --> 02:01:20.760 align:start position:0%
of this distribution and now arbitrary
 

02:01:20.760 --> 02:01:23.030 align:start position:0%
of this distribution and now arbitrary
bad<02:01:20.920><c> things</c><02:01:21.159><c> happen</c><02:01:22.079><c> and</c><02:01:22.280><c> it's</c><02:01:22.440><c> just</c><02:01:22.599><c> a</c><02:01:22.800><c> very</c>

02:01:23.030 --> 02:01:23.040 align:start position:0%
bad things happen and it's just a very
 

02:01:23.040 --> 02:01:24.550 align:start position:0%
bad things happen and it's just a very
rare<02:01:23.280><c> example</c><02:01:23.599><c> for</c><02:01:23.719><c> it</c><02:01:23.880><c> to</c><02:01:24.000><c> see</c><02:01:24.239><c> something</c>

02:01:24.550 --> 02:01:24.560 align:start position:0%
rare example for it to see something
 

02:01:24.560 --> 02:01:26.910 align:start position:0%
rare example for it to see something
like<02:01:24.760><c> that</c><02:01:25.560><c> and</c><02:01:26.000><c> uh</c><02:01:26.320><c> that's</c><02:01:26.480><c> why</c><02:01:26.599><c> we</c><02:01:26.719><c> get</c><02:01:26.840><c> the</c>

02:01:26.910 --> 02:01:26.920 align:start position:0%
like that and uh that's why we get the
 

02:01:26.920 --> 02:01:29.109 align:start position:0%
like that and uh that's why we get the
warning<02:01:27.599><c> so</c><02:01:27.760><c> the</c><02:01:27.880><c> fundamental</c><02:01:28.360><c> issue</c><02:01:28.719><c> here</c><02:01:28.960><c> is</c>

02:01:29.109 --> 02:01:29.119 align:start position:0%
warning so the fundamental issue here is
 

02:01:29.119 --> 02:01:32.430 align:start position:0%
warning so the fundamental issue here is
of<02:01:29.239><c> course</c><02:01:29.599><c> that</c><02:01:30.520><c> um</c><02:01:31.000><c> the</c><02:01:31.159><c> llm</c><02:01:31.639><c> is</c><02:01:31.760><c> on</c><02:01:32.000><c> top</c><02:01:32.159><c> of</c>

02:01:32.430 --> 02:01:32.440 align:start position:0%
of course that um the llm is on top of
 

02:01:32.440 --> 02:01:34.589 align:start position:0%
of course that um the llm is on top of
these<02:01:32.960><c> tokens</c><02:01:33.560><c> and</c><02:01:33.679><c> these</c><02:01:33.840><c> tokens</c><02:01:34.159><c> are</c><02:01:34.360><c> text</c>

02:01:34.589 --> 02:01:34.599 align:start position:0%
these tokens and these tokens are text
 

02:01:34.599 --> 02:01:36.550 align:start position:0%
these tokens and these tokens are text
chunks<02:01:35.119><c> they're</c><02:01:35.320><c> not</c><02:01:35.599><c> characters</c><02:01:36.079><c> in</c><02:01:36.199><c> a</c><02:01:36.360><c> way</c>

02:01:36.550 --> 02:01:36.560 align:start position:0%
chunks they're not characters in a way
 

02:01:36.560 --> 02:01:38.189 align:start position:0%
chunks they're not characters in a way
you<02:01:36.679><c> and</c><02:01:36.800><c> I</c><02:01:36.960><c> would</c><02:01:37.119><c> think</c><02:01:37.280><c> of</c><02:01:37.440><c> them</c><02:01:37.679><c> they</c><02:01:37.760><c> are</c>

02:01:38.189 --> 02:01:38.199 align:start position:0%
you and I would think of them they are
 

02:01:38.199 --> 02:01:40.350 align:start position:0%
you and I would think of them they are
these<02:01:38.320><c> are</c><02:01:38.520><c> the</c><02:01:38.760><c> atoms</c><02:01:39.320><c> of</c><02:01:39.480><c> what</c><02:01:39.599><c> the</c><02:01:39.719><c> LM</c><02:01:40.239><c> is</c>

02:01:40.350 --> 02:01:40.360 align:start position:0%
these are the atoms of what the LM is
 

02:01:40.360 --> 02:01:41.790 align:start position:0%
these are the atoms of what the LM is
seeing<02:01:40.760><c> and</c><02:01:40.880><c> there's</c><02:01:41.040><c> a</c><02:01:41.159><c> bunch</c><02:01:41.320><c> of</c><02:01:41.520><c> weird</c>

02:01:41.790 --> 02:01:41.800 align:start position:0%
seeing and there's a bunch of weird
 

02:01:41.800 --> 02:01:43.629 align:start position:0%
seeing and there's a bunch of weird
stuff<02:01:42.000><c> that</c><02:01:42.159><c> comes</c><02:01:42.320><c> out</c><02:01:42.440><c> of</c><02:01:42.560><c> it</c><02:01:43.119><c> let's</c><02:01:43.320><c> go</c><02:01:43.480><c> back</c>

02:01:43.629 --> 02:01:43.639 align:start position:0%
stuff that comes out of it let's go back
 

02:01:43.639 --> 02:01:47.990 align:start position:0%
stuff that comes out of it let's go back
to<02:01:43.840><c> our</c><02:01:44.560><c> default</c><02:01:45.239><c> cell</c><02:01:45.800><c> style</c><02:01:46.800><c> I</c><02:01:47.000><c> bet</c><02:01:47.239><c> you</c><02:01:47.840><c> that</c>

02:01:47.990 --> 02:01:48.000 align:start position:0%
to our default cell style I bet you that
 

02:01:48.000 --> 02:01:49.950 align:start position:0%
to our default cell style I bet you that
the<02:01:48.159><c> model</c><02:01:48.480><c> has</c><02:01:48.639><c> never</c><02:01:49.079><c> in</c><02:01:49.159><c> its</c><02:01:49.320><c> training</c><02:01:49.679><c> set</c>

02:01:49.950 --> 02:01:49.960 align:start position:0%
the model has never in its training set
 

02:01:49.960 --> 02:01:54.189 align:start position:0%
the model has never in its training set
seen<02:01:50.800><c> default</c><02:01:51.119><c> cell</c><02:01:51.840><c> sta</c><02:01:52.840><c> without</c><02:01:53.400><c> Le</c><02:01:53.880><c> in</c>

02:01:54.189 --> 02:01:54.199 align:start position:0%
seen default cell sta without Le in
 

02:01:54.199 --> 02:01:56.589 align:start position:0%
seen default cell sta without Le in
there<02:01:55.199><c> it's</c><02:01:55.400><c> always</c><02:01:55.599><c> seen</c><02:01:55.880><c> this</c><02:01:56.040><c> as</c><02:01:56.159><c> a</c><02:01:56.280><c> single</c>

02:01:56.589 --> 02:01:56.599 align:start position:0%
there it's always seen this as a single
 

02:01:56.599 --> 02:01:59.229 align:start position:0%
there it's always seen this as a single
group<02:01:57.199><c> because</c><02:01:57.880><c> uh</c><02:01:58.360><c> this</c><02:01:58.480><c> is</c><02:01:58.599><c> some</c><02:01:58.760><c> kind</c><02:01:58.880><c> of</c><02:01:59.000><c> a</c>

02:01:59.229 --> 02:01:59.239 align:start position:0%
group because uh this is some kind of a
 

02:01:59.239 --> 02:02:01.990 align:start position:0%
group because uh this is some kind of a
function<02:01:59.800><c> in</c><02:02:00.360><c> um</c><02:02:01.360><c> I'm</c><02:02:01.560><c> guess</c><02:02:01.719><c> I</c><02:02:01.800><c> don't</c>

02:02:01.990 --> 02:02:02.000 align:start position:0%
function in um I'm guess I don't
 

02:02:02.000 --> 02:02:03.069 align:start position:0%
function in um I'm guess I don't
actually<02:02:02.199><c> know</c><02:02:02.360><c> what</c><02:02:02.480><c> this</c><02:02:02.599><c> is</c><02:02:02.719><c> part</c><02:02:02.840><c> of</c><02:02:03.000><c> this</c>

02:02:03.069 --> 02:02:03.079 align:start position:0%
actually know what this is part of this
 

02:02:03.079 --> 02:02:05.109 align:start position:0%
actually know what this is part of this
is<02:02:03.159><c> some</c><02:02:03.239><c> kind</c><02:02:03.360><c> of</c><02:02:03.480><c> API</c><02:02:04.159><c> but</c><02:02:04.360><c> I</c><02:02:04.480><c> bet</c><02:02:04.639><c> you</c><02:02:04.840><c> that</c>

02:02:05.109 --> 02:02:05.119 align:start position:0%
is some kind of API but I bet you that
 

02:02:05.119 --> 02:02:07.069 align:start position:0%
is some kind of API but I bet you that
it's<02:02:05.360><c> never</c><02:02:05.560><c> seen</c><02:02:06.079><c> this</c><02:02:06.360><c> combination</c><02:02:06.840><c> of</c>

02:02:07.069 --> 02:02:07.079 align:start position:0%
it's never seen this combination of
 

02:02:07.079 --> 02:02:10.629 align:start position:0%
it's never seen this combination of
tokens<02:02:08.079><c> uh</c><02:02:08.199><c> in</c><02:02:08.320><c> its</c><02:02:08.480><c> training</c><02:02:08.880><c> data</c><02:02:09.800><c> because</c>

02:02:10.629 --> 02:02:10.639 align:start position:0%
tokens uh in its training data because
 

02:02:10.639 --> 02:02:12.350 align:start position:0%
tokens uh in its training data because
or<02:02:10.760><c> I</c><02:02:10.840><c> think</c><02:02:10.960><c> it</c><02:02:11.040><c> would</c><02:02:11.159><c> be</c><02:02:11.239><c> extremely</c><02:02:11.639><c> rare</c><02:02:12.199><c> so</c>

02:02:12.350 --> 02:02:12.360 align:start position:0%
or I think it would be extremely rare so
 

02:02:12.360 --> 02:02:14.709 align:start position:0%
or I think it would be extremely rare so
I<02:02:12.440><c> took</c><02:02:12.639><c> this</c><02:02:12.760><c> and</c><02:02:12.880><c> I</c><02:02:13.040><c> copy</c><02:02:13.280><c> pasted</c><02:02:13.520><c> it</c><02:02:13.760><c> here</c>

02:02:14.709 --> 02:02:14.719 align:start position:0%
I took this and I copy pasted it here
 

02:02:14.719 --> 02:02:17.470 align:start position:0%
I took this and I copy pasted it here
and<02:02:14.960><c> I</c><02:02:15.199><c> had</c><02:02:15.480><c> I</c><02:02:15.880><c> tried</c><02:02:16.079><c> to</c><02:02:16.280><c> complete</c><02:02:16.719><c> from</c><02:02:16.920><c> it</c>

02:02:17.470 --> 02:02:17.480 align:start position:0%
and I had I tried to complete from it
 

02:02:17.480 --> 02:02:19.189 align:start position:0%
and I had I tried to complete from it
and<02:02:17.719><c> the</c><02:02:17.960><c> it</c><02:02:18.119><c> immediately</c><02:02:18.560><c> gave</c><02:02:18.679><c> me</c><02:02:18.760><c> a</c><02:02:19.040><c> big</c>

02:02:19.189 --> 02:02:19.199 align:start position:0%
and the it immediately gave me a big
 

02:02:19.199 --> 02:02:21.069 align:start position:0%
and the it immediately gave me a big
error<02:02:19.920><c> and</c><02:02:20.040><c> it</c><02:02:20.119><c> said</c><02:02:20.320><c> the</c><02:02:20.440><c> model</c><02:02:20.679><c> predicted</c><02:02:21.000><c> to</c>

02:02:21.069 --> 02:02:21.079 align:start position:0%
error and it said the model predicted to
 

02:02:21.079 --> 02:02:22.310 align:start position:0%
error and it said the model predicted to
completion<02:02:21.440><c> that</c><02:02:21.560><c> begins</c><02:02:21.800><c> with</c><02:02:21.920><c> a</c><02:02:22.079><c> stop</c>

02:02:22.310 --> 02:02:22.320 align:start position:0%
completion that begins with a stop
 

02:02:22.320 --> 02:02:24.149 align:start position:0%
completion that begins with a stop
sequence<02:02:22.760><c> resulting</c><02:02:23.119><c> in</c><02:02:23.280><c> no</c><02:02:23.440><c> output</c><02:02:23.840><c> consider</c>

02:02:24.149 --> 02:02:24.159 align:start position:0%
sequence resulting in no output consider
 

02:02:24.159 --> 02:02:26.350 align:start position:0%
sequence resulting in no output consider
adjusting<02:02:24.480><c> your</c><02:02:24.599><c> prompt</c><02:02:24.880><c> or</c><02:02:25.079><c> stop</c><02:02:25.360><c> sequences</c>

02:02:26.350 --> 02:02:26.360 align:start position:0%
adjusting your prompt or stop sequences
 

02:02:26.360 --> 02:02:27.629 align:start position:0%
adjusting your prompt or stop sequences
so<02:02:26.480><c> what</c><02:02:26.599><c> happened</c><02:02:26.840><c> here</c><02:02:27.000><c> when</c><02:02:27.079><c> I</c><02:02:27.159><c> clicked</c>

02:02:27.629 --> 02:02:27.639 align:start position:0%
so what happened here when I clicked
 

02:02:27.639 --> 02:02:30.189 align:start position:0%
so what happened here when I clicked
submit<02:02:28.639><c> is</c><02:02:28.880><c> that</c><02:02:29.159><c> immediately</c><02:02:29.679><c> the</c><02:02:29.840><c> model</c>

02:02:30.189 --> 02:02:30.199 align:start position:0%
submit is that immediately the model
 

02:02:30.199 --> 02:02:32.229 align:start position:0%
submit is that immediately the model
emitted<02:02:30.840><c> and</c><02:02:31.159><c> sort</c><02:02:31.320><c> of</c><02:02:31.480><c> like</c><02:02:31.599><c> end</c><02:02:31.800><c> of</c><02:02:31.960><c> text</c>

02:02:32.229 --> 02:02:32.239 align:start position:0%
emitted and sort of like end of text
 

02:02:32.239 --> 02:02:34.430 align:start position:0%
emitted and sort of like end of text
token<02:02:32.719><c> I</c><02:02:32.800><c> think</c><02:02:32.960><c> or</c><02:02:33.079><c> something</c><02:02:33.360><c> like</c><02:02:33.520><c> that</c><02:02:34.239><c> it</c>

02:02:34.430 --> 02:02:34.440 align:start position:0%
token I think or something like that it
 

02:02:34.440 --> 02:02:36.430 align:start position:0%
token I think or something like that it
basically<02:02:35.280><c> predicted</c><02:02:35.679><c> the</c><02:02:35.800><c> stop</c><02:02:36.040><c> sequence</c>

02:02:36.430 --> 02:02:36.440 align:start position:0%
basically predicted the stop sequence
 

02:02:36.440 --> 02:02:38.750 align:start position:0%
basically predicted the stop sequence
immediately<02:02:36.880><c> so</c><02:02:37.040><c> it</c><02:02:37.199><c> had</c><02:02:37.400><c> no</c><02:02:37.639><c> completion</c><02:02:38.639><c> and</c>

02:02:38.750 --> 02:02:38.760 align:start position:0%
immediately so it had no completion and
 

02:02:38.760 --> 02:02:40.189 align:start position:0%
immediately so it had no completion and
so<02:02:38.960><c> this</c><02:02:39.079><c> is</c><02:02:39.199><c> why</c><02:02:39.320><c> I'm</c><02:02:39.440><c> getting</c><02:02:39.599><c> a</c><02:02:39.760><c> warning</c>

02:02:40.189 --> 02:02:40.199 align:start position:0%
so this is why I'm getting a warning
 

02:02:40.199 --> 02:02:42.149 align:start position:0%
so this is why I'm getting a warning
again<02:02:40.639><c> because</c><02:02:41.360><c> we're</c><02:02:41.599><c> off</c><02:02:41.760><c> the</c><02:02:41.920><c> data</c>

02:02:42.149 --> 02:02:42.159 align:start position:0%
again because we're off the data
 

02:02:42.159 --> 02:02:45.109 align:start position:0%
again because we're off the data
distribution<02:02:42.679><c> and</c><02:02:42.800><c> the</c><02:02:42.880><c> model</c><02:02:43.199><c> is</c><02:02:43.400><c> just</c><02:02:43.960><c> uh</c>

02:02:45.109 --> 02:02:45.119 align:start position:0%
distribution and the model is just uh
 

02:02:45.119 --> 02:02:47.629 align:start position:0%
distribution and the model is just uh
predicting<02:02:46.119><c> just</c><02:02:46.320><c> totally</c><02:02:46.679><c> arbitrary</c><02:02:47.360><c> things</c>

02:02:47.629 --> 02:02:47.639 align:start position:0%
predicting just totally arbitrary things
 

02:02:47.639 --> 02:02:49.430 align:start position:0%
predicting just totally arbitrary things
it's<02:02:47.800><c> just</c><02:02:47.920><c> really</c><02:02:48.119><c> confused</c><02:02:48.560><c> basically</c><02:02:49.320><c> this</c>

02:02:49.430 --> 02:02:49.440 align:start position:0%
it's just really confused basically this
 

02:02:49.440 --> 02:02:50.910 align:start position:0%
it's just really confused basically this
is<02:02:49.760><c> uh</c><02:02:49.840><c> this</c><02:02:49.920><c> is</c><02:02:50.040><c> giving</c><02:02:50.239><c> it</c><02:02:50.360><c> brain</c><02:02:50.639><c> damage</c>

02:02:50.910 --> 02:02:50.920 align:start position:0%
is uh this is giving it brain damage
 

02:02:50.920 --> 02:02:53.310 align:start position:0%
is uh this is giving it brain damage
it's<02:02:51.119><c> never</c><02:02:51.280><c> seen</c><02:02:51.560><c> this</c><02:02:51.760><c> before</c><02:02:52.000><c> it's</c><02:02:52.320><c> shocked</c>

02:02:53.310 --> 02:02:53.320 align:start position:0%
it's never seen this before it's shocked
 

02:02:53.320 --> 02:02:54.550 align:start position:0%
it's never seen this before it's shocked
and<02:02:53.400><c> it's</c><02:02:53.560><c> predicting</c><02:02:53.880><c> end</c><02:02:54.040><c> of</c><02:02:54.159><c> text</c><02:02:54.400><c> or</c>

02:02:54.550 --> 02:02:54.560 align:start position:0%
and it's predicting end of text or
 

02:02:54.560 --> 02:02:57.030 align:start position:0%
and it's predicting end of text or
something<02:02:55.440><c> I</c><02:02:55.560><c> tried</c><02:02:55.760><c> it</c><02:02:55.960><c> again</c><02:02:56.199><c> here</c><02:02:56.599><c> and</c><02:02:56.760><c> it</c>

02:02:57.030 --> 02:02:57.040 align:start position:0%
something I tried it again here and it
 

02:02:57.040 --> 02:02:59.069 align:start position:0%
something I tried it again here and it
in<02:02:57.159><c> this</c><02:02:57.320><c> case</c><02:02:57.480><c> it</c><02:02:57.639><c> completed</c><02:02:58.119><c> it</c><02:02:58.840><c> but</c><02:02:58.960><c> then</c>

02:02:59.069 --> 02:02:59.079 align:start position:0%
in this case it completed it but then
 

02:02:59.079 --> 02:03:01.430 align:start position:0%
in this case it completed it but then
for<02:02:59.239><c> some</c><02:02:59.440><c> reason</c><02:03:00.199><c> this</c><02:03:00.440><c> request</c><02:03:00.840><c> May</c><02:03:01.079><c> violate</c>

02:03:01.430 --> 02:03:01.440 align:start position:0%
for some reason this request May violate
 

02:03:01.440 --> 02:03:03.629 align:start position:0%
for some reason this request May violate
our<02:03:01.639><c> usage</c><02:03:02.040><c> policies</c><02:03:02.800><c> this</c><02:03:02.920><c> was</c>

02:03:03.629 --> 02:03:03.639 align:start position:0%
our usage policies this was
 

02:03:03.639 --> 02:03:06.629 align:start position:0%
our usage policies this was
flagged<02:03:04.639><c> um</c><02:03:05.599><c> basically</c><02:03:05.960><c> something</c><02:03:06.320><c> just</c><02:03:06.480><c> like</c>

02:03:06.629 --> 02:03:06.639 align:start position:0%
flagged um basically something just like
 

02:03:06.639 --> 02:03:07.669 align:start position:0%
flagged um basically something just like
goes<02:03:06.840><c> wrong</c><02:03:07.040><c> and</c><02:03:07.159><c> there's</c><02:03:07.320><c> something</c><02:03:07.520><c> like</c>

02:03:07.669 --> 02:03:07.679 align:start position:0%
goes wrong and there's something like
 

02:03:07.679 --> 02:03:09.510 align:start position:0%
goes wrong and there's something like
Jank<02:03:08.119><c> you</c><02:03:08.199><c> can</c><02:03:08.320><c> just</c><02:03:08.440><c> feel</c><02:03:08.719><c> the</c><02:03:08.880><c> Jank</c><02:03:09.320><c> because</c>

02:03:09.510 --> 02:03:09.520 align:start position:0%
Jank you can just feel the Jank because
 

02:03:09.520 --> 02:03:11.390 align:start position:0%
Jank you can just feel the Jank because
the<02:03:09.599><c> model</c><02:03:09.880><c> is</c><02:03:10.040><c> like</c><02:03:10.199><c> extremely</c><02:03:10.599><c> unhappy</c><02:03:11.159><c> with</c>

02:03:11.390 --> 02:03:11.400 align:start position:0%
the model is like extremely unhappy with
 

02:03:11.400 --> 02:03:12.950 align:start position:0%
the model is like extremely unhappy with
just<02:03:11.679><c> this</c><02:03:12.239><c> and</c><02:03:12.320><c> it</c><02:03:12.440><c> doesn't</c><02:03:12.599><c> know</c><02:03:12.719><c> how</c><02:03:12.800><c> to</c>

02:03:12.950 --> 02:03:12.960 align:start position:0%
just this and it doesn't know how to
 

02:03:12.960 --> 02:03:14.149 align:start position:0%
just this and it doesn't know how to
complete<02:03:13.199><c> it</c><02:03:13.360><c> because</c><02:03:13.520><c> it's</c><02:03:13.639><c> never</c><02:03:13.840><c> occurred</c>

02:03:14.149 --> 02:03:14.159 align:start position:0%
complete it because it's never occurred
 

02:03:14.159 --> 02:03:16.189 align:start position:0%
complete it because it's never occurred
in<02:03:14.320><c> training</c><02:03:14.639><c> set</c><02:03:15.280><c> in</c><02:03:15.360><c> a</c><02:03:15.520><c> training</c><02:03:15.800><c> set</c><02:03:16.040><c> it</c>

02:03:16.189 --> 02:03:16.199 align:start position:0%
in training set in a training set it
 

02:03:16.199 --> 02:03:18.310 align:start position:0%
in training set in a training set it
always<02:03:16.599><c> appears</c><02:03:17.079><c> like</c><02:03:17.440><c> this</c><02:03:17.800><c> and</c><02:03:17.960><c> becomes</c><02:03:18.199><c> a</c>

02:03:18.310 --> 02:03:18.320 align:start position:0%
always appears like this and becomes a
 

02:03:18.320 --> 02:03:20.030 align:start position:0%
always appears like this and becomes a
single<02:03:18.599><c> token</c>

02:03:20.030 --> 02:03:20.040 align:start position:0%
single token
 

02:03:20.040 --> 02:03:21.950 align:start position:0%
single token
so<02:03:20.320><c> these</c><02:03:20.520><c> kinds</c><02:03:20.679><c> of</c><02:03:20.880><c> issues</c><02:03:21.280><c> where</c><02:03:21.520><c> tokens</c>

02:03:21.950 --> 02:03:21.960 align:start position:0%
so these kinds of issues where tokens
 

02:03:21.960 --> 02:03:24.229 align:start position:0%
so these kinds of issues where tokens
are<02:03:22.840><c> either</c><02:03:23.040><c> you</c><02:03:23.159><c> sort</c><02:03:23.320><c> of</c><02:03:23.480><c> like</c><02:03:23.679><c> complete</c><02:03:24.040><c> the</c>

02:03:24.229 --> 02:03:24.239 align:start position:0%
are either you sort of like complete the
 

02:03:24.239 --> 02:03:26.750 align:start position:0%
are either you sort of like complete the
first<02:03:24.639><c> character</c><02:03:25.079><c> of</c><02:03:25.199><c> the</c><02:03:25.360><c> next</c><02:03:25.639><c> token</c><02:03:26.440><c> or</c><02:03:26.639><c> you</c>

02:03:26.750 --> 02:03:26.760 align:start position:0%
first character of the next token or you
 

02:03:26.760 --> 02:03:28.550 align:start position:0%
first character of the next token or you
are<02:03:27.000><c> sort</c><02:03:27.199><c> of</c><02:03:27.520><c> you</c><02:03:27.639><c> have</c><02:03:27.760><c> long</c><02:03:28.040><c> tokens</c><02:03:28.440><c> that</c>

02:03:28.550 --> 02:03:28.560 align:start position:0%
are sort of you have long tokens that
 

02:03:28.560 --> 02:03:29.790 align:start position:0%
are sort of you have long tokens that
you<02:03:28.760><c> then</c><02:03:28.960><c> have</c><02:03:29.199><c> just</c><02:03:29.360><c> some</c><02:03:29.560><c> of</c><02:03:29.679><c> the</c>

02:03:29.790 --> 02:03:29.800 align:start position:0%
you then have just some of the
 

02:03:29.800 --> 02:03:32.310 align:start position:0%
you then have just some of the
characters<02:03:30.280><c> off</c><02:03:31.280><c> all</c><02:03:31.400><c> of</c><02:03:31.560><c> these</c><02:03:31.719><c> are</c><02:03:31.920><c> kind</c><02:03:32.040><c> of</c>

02:03:32.310 --> 02:03:32.320 align:start position:0%
characters off all of these are kind of
 

02:03:32.320 --> 02:03:35.350 align:start position:0%
characters off all of these are kind of
like<02:03:32.960><c> issues</c><02:03:33.520><c> with</c><02:03:34.040><c> partial</c><02:03:34.480><c> tokens</c><02:03:35.000><c> is</c><02:03:35.119><c> how</c><02:03:35.280><c> I</c>

02:03:35.350 --> 02:03:35.360 align:start position:0%
like issues with partial tokens is how I
 

02:03:35.360 --> 02:03:37.750 align:start position:0%
like issues with partial tokens is how I
would<02:03:35.560><c> describe</c><02:03:35.880><c> it</c><02:03:36.880><c> and</c><02:03:37.239><c> if</c><02:03:37.360><c> you</c><02:03:37.520><c> actually</c>

02:03:37.750 --> 02:03:37.760 align:start position:0%
would describe it and if you actually
 

02:03:37.760 --> 02:03:39.790 align:start position:0%
would describe it and if you actually
dig<02:03:37.960><c> into</c><02:03:38.159><c> the</c><02:03:38.320><c> T</c><02:03:38.599><c> token</c>

02:03:39.790 --> 02:03:39.800 align:start position:0%
dig into the T token
 

02:03:39.800 --> 02:03:41.950 align:start position:0%
dig into the T token
repository<02:03:40.800><c> go</c><02:03:40.920><c> to</c><02:03:41.040><c> the</c><02:03:41.199><c> rust</c><02:03:41.520><c> code</c><02:03:41.840><c> and</c>

02:03:41.950 --> 02:03:41.960 align:start position:0%
repository go to the rust code and
 

02:03:41.960 --> 02:03:44.149 align:start position:0%
repository go to the rust code and
search<02:03:42.239><c> for</c>

02:03:44.149 --> 02:03:44.159 align:start position:0%
search for
 

02:03:44.159 --> 02:03:47.069 align:start position:0%
search for
unstable<02:03:45.159><c> and</c><02:03:45.280><c> you'll</c><02:03:45.520><c> see</c><02:03:46.119><c> um</c><02:03:46.480><c> en</c><02:03:46.760><c> code</c>

02:03:47.069 --> 02:03:47.079 align:start position:0%
unstable and you'll see um en code
 

02:03:47.079 --> 02:03:49.229 align:start position:0%
unstable and you'll see um en code
unstable<02:03:47.639><c> native</c><02:03:48.159><c> unstable</c><02:03:48.599><c> token</c><02:03:48.880><c> tokens</c>

02:03:49.229 --> 02:03:49.239 align:start position:0%
unstable native unstable token tokens
 

02:03:49.239 --> 02:03:51.510 align:start position:0%
unstable native unstable token tokens
and<02:03:49.360><c> a</c><02:03:49.480><c> lot</c><02:03:49.599><c> of</c><02:03:49.800><c> like</c><02:03:49.960><c> special</c><02:03:50.280><c> case</c><02:03:50.520><c> handling</c>

02:03:51.510 --> 02:03:51.520 align:start position:0%
and a lot of like special case handling
 

02:03:51.520 --> 02:03:53.390 align:start position:0%
and a lot of like special case handling
none<02:03:51.679><c> of</c><02:03:51.840><c> this</c><02:03:52.040><c> stuff</c><02:03:52.280><c> about</c><02:03:52.520><c> unstable</c><02:03:53.000><c> tokens</c>

02:03:53.390 --> 02:03:53.400 align:start position:0%
none of this stuff about unstable tokens
 

02:03:53.400 --> 02:03:55.470 align:start position:0%
none of this stuff about unstable tokens
is<02:03:53.559><c> documented</c><02:03:54.119><c> anywhere</c><02:03:54.880><c> but</c><02:03:55.040><c> there's</c><02:03:55.199><c> a</c><02:03:55.320><c> ton</c>

02:03:55.470 --> 02:03:55.480 align:start position:0%
is documented anywhere but there's a ton
 

02:03:55.480 --> 02:03:58.350 align:start position:0%
is documented anywhere but there's a ton
of<02:03:55.679><c> code</c><02:03:56.040><c> dealing</c><02:03:56.400><c> with</c><02:03:56.559><c> unstable</c><02:03:57.079><c> tokens</c><02:03:58.040><c> and</c>

02:03:58.350 --> 02:03:58.360 align:start position:0%
of code dealing with unstable tokens and
 

02:03:58.360 --> 02:04:00.790 align:start position:0%
of code dealing with unstable tokens and
unstable<02:03:58.920><c> tokens</c><02:03:59.320><c> is</c><02:03:59.719><c> exactly</c><02:04:00.199><c> kind</c><02:04:00.320><c> of</c><02:04:00.520><c> like</c>

02:04:00.790 --> 02:04:00.800 align:start position:0%
unstable tokens is exactly kind of like
 

02:04:00.800 --> 02:04:02.750 align:start position:0%
unstable tokens is exactly kind of like
what<02:04:00.920><c> I'm</c><02:04:01.119><c> describing</c><02:04:01.599><c> here</c><02:04:02.320><c> what</c><02:04:02.440><c> you</c><02:04:02.559><c> would</c>

02:04:02.750 --> 02:04:02.760 align:start position:0%
what I'm describing here what you would
 

02:04:02.760 --> 02:04:05.229 align:start position:0%
what I'm describing here what you would
like<02:04:03.000><c> out</c><02:04:03.159><c> of</c><02:04:03.239><c> a</c><02:04:03.400><c> completion</c><02:04:04.040><c> API</c><02:04:05.040><c> is</c>

02:04:05.229 --> 02:04:05.239 align:start position:0%
like out of a completion API is
 

02:04:05.239 --> 02:04:06.589 align:start position:0%
like out of a completion API is
something<02:04:05.520><c> a</c><02:04:05.599><c> lot</c><02:04:05.760><c> more</c><02:04:05.920><c> fancy</c><02:04:06.280><c> like</c><02:04:06.400><c> if</c><02:04:06.480><c> we're</c>

02:04:06.589 --> 02:04:06.599 align:start position:0%
something a lot more fancy like if we're
 

02:04:06.599 --> 02:04:08.950 align:start position:0%
something a lot more fancy like if we're
putting<02:04:06.840><c> in</c><02:04:07.159><c> default</c><02:04:07.480><c> cell</c><02:04:07.800><c> sta</c><02:04:08.679><c> if</c><02:04:08.760><c> we're</c>

02:04:08.950 --> 02:04:08.960 align:start position:0%
putting in default cell sta if we're
 

02:04:08.960 --> 02:04:10.669 align:start position:0%
putting in default cell sta if we're
asking<02:04:09.159><c> for</c><02:04:09.320><c> the</c><02:04:09.440><c> next</c><02:04:09.639><c> token</c><02:04:09.920><c> sequence</c><02:04:10.520><c> we're</c>

02:04:10.669 --> 02:04:10.679 align:start position:0%
asking for the next token sequence we're
 

02:04:10.679 --> 02:04:12.229 align:start position:0%
asking for the next token sequence we're
not<02:04:10.920><c> actually</c><02:04:11.159><c> trying</c><02:04:11.360><c> to</c><02:04:11.559><c> append</c><02:04:11.880><c> the</c><02:04:12.000><c> next</c>

02:04:12.229 --> 02:04:12.239 align:start position:0%
not actually trying to append the next
 

02:04:12.239 --> 02:04:14.629 align:start position:0%
not actually trying to append the next
token<02:04:12.559><c> exactly</c><02:04:13.079><c> after</c><02:04:13.360><c> this</c><02:04:13.559><c> list</c><02:04:14.360><c> we're</c>

02:04:14.629 --> 02:04:14.639 align:start position:0%
token exactly after this list we're
 

02:04:14.639 --> 02:04:16.470 align:start position:0%
token exactly after this list we're
actually<02:04:14.880><c> trying</c><02:04:15.119><c> to</c><02:04:15.320><c> append</c><02:04:16.119><c> we're</c><02:04:16.280><c> trying</c>

02:04:16.470 --> 02:04:16.480 align:start position:0%
actually trying to append we're trying
 

02:04:16.480 --> 02:04:19.510 align:start position:0%
actually trying to append we're trying
to<02:04:16.599><c> consider</c><02:04:16.960><c> lots</c><02:04:17.159><c> of</c><02:04:17.559><c> tokens</c><02:04:18.559><c> um</c>

02:04:19.510 --> 02:04:19.520 align:start position:0%
to consider lots of tokens um
 

02:04:19.520 --> 02:04:22.149 align:start position:0%
to consider lots of tokens um
that<02:04:20.199><c> if</c><02:04:20.440><c> we</c><02:04:20.719><c> were</c><02:04:21.239><c> or</c><02:04:21.360><c> I</c><02:04:21.520><c> guess</c><02:04:21.719><c> like</c><02:04:21.960><c> we're</c>

02:04:22.149 --> 02:04:22.159 align:start position:0%
that if we were or I guess like we're
 

02:04:22.159 --> 02:04:25.750 align:start position:0%
that if we were or I guess like we're
trying<02:04:22.360><c> to</c><02:04:22.559><c> search</c><02:04:22.840><c> over</c><02:04:23.440><c> characters</c><02:04:24.599><c> that</c><02:04:25.599><c> if</c>

02:04:25.750 --> 02:04:25.760 align:start position:0%
trying to search over characters that if
 

02:04:25.760 --> 02:04:28.149 align:start position:0%
trying to search over characters that if
we<02:04:25.920><c> retened</c><02:04:26.800><c> would</c><02:04:26.920><c> be</c><02:04:27.040><c> of</c><02:04:27.199><c> high</c><02:04:27.360><c> probability</c>

02:04:28.149 --> 02:04:28.159 align:start position:0%
we retened would be of high probability
 

02:04:28.159 --> 02:04:30.669 align:start position:0%
we retened would be of high probability
if<02:04:28.280><c> that</c><02:04:28.400><c> makes</c><02:04:28.639><c> sense</c><02:04:29.639><c> um</c><02:04:30.079><c> so</c><02:04:30.280><c> that</c><02:04:30.400><c> we</c><02:04:30.480><c> can</c>

02:04:30.669 --> 02:04:30.679 align:start position:0%
if that makes sense um so that we can
 

02:04:30.679 --> 02:04:32.310 align:start position:0%
if that makes sense um so that we can
actually<02:04:30.960><c> add</c><02:04:31.159><c> a</c><02:04:31.280><c> single</c><02:04:31.559><c> individual</c>

02:04:32.310 --> 02:04:32.320 align:start position:0%
actually add a single individual
 

02:04:32.320 --> 02:04:34.470 align:start position:0%
actually add a single individual
character<02:04:33.320><c> uh</c><02:04:33.480><c> instead</c><02:04:33.719><c> of</c><02:04:33.880><c> just</c><02:04:34.079><c> like</c><02:04:34.239><c> adding</c>

02:04:34.470 --> 02:04:34.480 align:start position:0%
character uh instead of just like adding
 

02:04:34.480 --> 02:04:36.669 align:start position:0%
character uh instead of just like adding
the<02:04:34.639><c> next</c><02:04:34.880><c> full</c><02:04:35.239><c> token</c><02:04:35.760><c> that</c><02:04:35.920><c> comes</c><02:04:36.199><c> after</c>

02:04:36.669 --> 02:04:36.679 align:start position:0%
the next full token that comes after
 

02:04:36.679 --> 02:04:39.350 align:start position:0%
the next full token that comes after
this<02:04:37.040><c> partial</c><02:04:37.400><c> token</c><02:04:37.719><c> list</c><02:04:38.719><c> so</c><02:04:38.960><c> I</c><02:04:39.119><c> this</c><02:04:39.199><c> is</c>

02:04:39.350 --> 02:04:39.360 align:start position:0%
this partial token list so I this is
 

02:04:39.360 --> 02:04:41.310 align:start position:0%
this partial token list so I this is
very<02:04:39.559><c> tricky</c><02:04:39.840><c> to</c><02:04:40.000><c> describe</c><02:04:40.599><c> and</c><02:04:40.880><c> I</c><02:04:41.000><c> invite</c><02:04:41.239><c> you</c>

02:04:41.310 --> 02:04:41.320 align:start position:0%
very tricky to describe and I invite you
 

02:04:41.320 --> 02:04:43.030 align:start position:0%
very tricky to describe and I invite you
to<02:04:41.480><c> maybe</c><02:04:41.719><c> like</c><02:04:41.880><c> look</c><02:04:42.079><c> through</c><02:04:42.360><c> this</c><02:04:42.800><c> it</c><02:04:42.880><c> ends</c>

02:04:43.030 --> 02:04:43.040 align:start position:0%
to maybe like look through this it ends
 

02:04:43.040 --> 02:04:44.669 align:start position:0%
to maybe like look through this it ends
up<02:04:43.159><c> being</c><02:04:43.400><c> extremely</c><02:04:43.719><c> gnarly</c><02:04:44.079><c> and</c><02:04:44.239><c> hairy</c><02:04:44.559><c> kind</c>

02:04:44.669 --> 02:04:44.679 align:start position:0%
up being extremely gnarly and hairy kind
 

02:04:44.679 --> 02:04:46.350 align:start position:0%
up being extremely gnarly and hairy kind
of<02:04:44.880><c> topic</c><02:04:45.679><c> it</c><02:04:45.880><c> and</c><02:04:45.960><c> it</c><02:04:46.040><c> comes</c><02:04:46.239><c> from</c>

02:04:46.350 --> 02:04:46.360 align:start position:0%
of topic it and it comes from
 

02:04:46.360 --> 02:04:49.390 align:start position:0%
of topic it and it comes from
tokenization<02:04:46.960><c> fundamentally</c><02:04:47.679><c> so</c><02:04:48.639><c> um</c><02:04:49.119><c> maybe</c><02:04:49.320><c> I</c>

02:04:49.390 --> 02:04:49.400 align:start position:0%
tokenization fundamentally so um maybe I
 

02:04:49.400 --> 02:04:50.790 align:start position:0%
tokenization fundamentally so um maybe I
can<02:04:49.559><c> even</c><02:04:49.719><c> spend</c><02:04:49.920><c> an</c><02:04:50.079><c> entire</c><02:04:50.320><c> video</c><02:04:50.599><c> talking</c>

02:04:50.790 --> 02:04:50.800 align:start position:0%
can even spend an entire video talking
 

02:04:50.800 --> 02:04:52.109 align:start position:0%
can even spend an entire video talking
about<02:04:50.960><c> unstable</c><02:04:51.400><c> tokens</c><02:04:51.679><c> sometime</c><02:04:51.960><c> in</c><02:04:52.040><c> the</c>

02:04:52.109 --> 02:04:52.119 align:start position:0%
about unstable tokens sometime in the
 

02:04:52.119 --> 02:04:54.189 align:start position:0%
about unstable tokens sometime in the
future<02:04:53.119><c> okay</c><02:04:53.239><c> and</c><02:04:53.360><c> I'm</c><02:04:53.480><c> really</c><02:04:53.639><c> saving</c><02:04:54.040><c> the</c>

02:04:54.189 --> 02:04:54.199 align:start position:0%
future okay and I'm really saving the
 

02:04:54.199 --> 02:04:56.589 align:start position:0%
future okay and I'm really saving the
best<02:04:54.400><c> for</c><02:04:54.679><c> last</c><02:04:55.280><c> my</c><02:04:55.480><c> favorite</c><02:04:55.800><c> one</c><02:04:56.000><c> by</c><02:04:56.199><c> far</c><02:04:56.440><c> is</c>

02:04:56.589 --> 02:04:56.599 align:start position:0%
best for last my favorite one by far is
 

02:04:56.599 --> 02:04:59.189 align:start position:0%
best for last my favorite one by far is
the<02:04:56.840><c> solid</c><02:04:57.239><c> gold</c>

02:04:59.189 --> 02:04:59.199 align:start position:0%
the solid gold
 

02:04:59.199 --> 02:05:01.350 align:start position:0%
the solid gold
Magikarp<02:05:00.199><c> and</c><02:05:00.360><c> it</c><02:05:00.599><c> just</c><02:05:00.800><c> okay</c><02:05:00.920><c> so</c><02:05:01.079><c> this</c><02:05:01.199><c> comes</c>

02:05:01.350 --> 02:05:01.360 align:start position:0%
Magikarp and it just okay so this comes
 

02:05:01.360 --> 02:05:03.629 align:start position:0%
Magikarp and it just okay so this comes
from<02:05:01.520><c> this</c><02:05:01.719><c> blog</c><02:05:02.000><c> post</c><02:05:02.520><c> uh</c><02:05:02.639><c> solid</c><02:05:02.960><c> gold</c>

02:05:03.629 --> 02:05:03.639 align:start position:0%
from this blog post uh solid gold
 

02:05:03.639 --> 02:05:06.990 align:start position:0%
from this blog post uh solid gold
Magikarp<02:05:04.639><c> and</c><02:05:05.079><c> uh</c><02:05:05.239><c> this</c><02:05:05.360><c> is</c><02:05:06.079><c> um</c><02:05:06.559><c> internet</c>

02:05:06.990 --> 02:05:07.000 align:start position:0%
Magikarp and uh this is um internet
 

02:05:07.000 --> 02:05:10.069 align:start position:0%
Magikarp and uh this is um internet
famous<02:05:07.400><c> now</c><02:05:07.639><c> for</c><02:05:07.920><c> those</c><02:05:08.119><c> of</c><02:05:08.320><c> us</c><02:05:08.520><c> in</c><02:05:08.920><c> llms</c><02:05:09.920><c> and</c>

02:05:10.069 --> 02:05:10.079 align:start position:0%
famous now for those of us in llms and
 

02:05:10.079 --> 02:05:11.830 align:start position:0%
famous now for those of us in llms and
basically<02:05:10.559><c> I</c><02:05:10.719><c> I</c><02:05:10.800><c> would</c><02:05:10.960><c> advise</c><02:05:11.280><c> you</c><02:05:11.360><c> to</c><02:05:11.760><c> uh</c>

02:05:11.830 --> 02:05:11.840 align:start position:0%
basically I I would advise you to uh
 

02:05:11.840 --> 02:05:13.669 align:start position:0%
basically I I would advise you to uh
read<02:05:12.079><c> this</c><02:05:12.239><c> block</c><02:05:12.480><c> Post</c><02:05:12.719><c> in</c><02:05:12.880><c> full</c><02:05:13.520><c> but</c>

02:05:13.669 --> 02:05:13.679 align:start position:0%
read this block Post in full but
 

02:05:13.679 --> 02:05:16.549 align:start position:0%
read this block Post in full but
basically<02:05:14.040><c> what</c><02:05:14.159><c> this</c><02:05:14.320><c> person</c><02:05:14.520><c> was</c><02:05:14.679><c> doing</c><02:05:15.559><c> is</c>

02:05:16.549 --> 02:05:16.559 align:start position:0%
basically what this person was doing is
 

02:05:16.559 --> 02:05:19.229 align:start position:0%
basically what this person was doing is
this<02:05:16.719><c> person</c><02:05:17.079><c> went</c><02:05:17.440><c> to</c><02:05:17.800><c> the</c><02:05:18.480><c> um</c>

02:05:19.229 --> 02:05:19.239 align:start position:0%
this person went to the um
 

02:05:19.239 --> 02:05:22.310 align:start position:0%
this person went to the um
token<02:05:19.599><c> embedding</c><02:05:20.239><c> stable</c><02:05:21.239><c> and</c><02:05:21.599><c> clustered</c><02:05:22.159><c> the</c>

02:05:22.310 --> 02:05:22.320 align:start position:0%
token embedding stable and clustered the
 

02:05:22.320 --> 02:05:24.790 align:start position:0%
token embedding stable and clustered the
tokens<02:05:23.000><c> based</c><02:05:23.239><c> on</c><02:05:23.440><c> their</c><02:05:23.679><c> embedding</c>

02:05:24.790 --> 02:05:24.800 align:start position:0%
tokens based on their embedding
 

02:05:24.800 --> 02:05:27.270 align:start position:0%
tokens based on their embedding
representation<02:05:25.800><c> and</c><02:05:26.280><c> this</c><02:05:26.440><c> person</c><02:05:26.760><c> noticed</c>

02:05:27.270 --> 02:05:27.280 align:start position:0%
representation and this person noticed
 

02:05:27.280 --> 02:05:29.229 align:start position:0%
representation and this person noticed
that<02:05:27.400><c> there's</c><02:05:27.599><c> a</c><02:05:27.760><c> cluster</c><02:05:28.440><c> of</c><02:05:28.639><c> tokens</c><02:05:29.079><c> that</c>

02:05:29.229 --> 02:05:29.239 align:start position:0%
that there's a cluster of tokens that
 

02:05:29.239 --> 02:05:31.149 align:start position:0%
that there's a cluster of tokens that
look<02:05:29.480><c> really</c><02:05:29.719><c> strange</c><02:05:30.320><c> so</c><02:05:30.480><c> there's</c><02:05:30.639><c> a</c><02:05:30.760><c> cluster</c>

02:05:31.149 --> 02:05:31.159 align:start position:0%
look really strange so there's a cluster
 

02:05:31.159 --> 02:05:34.069 align:start position:0%
look really strange so there's a cluster
here<02:05:31.920><c> at</c><02:05:32.239><c> rot</c><02:05:32.639><c> e</c><02:05:32.920><c> stream</c><02:05:33.199><c> Fame</c><02:05:33.520><c> solid</c><02:05:33.880><c> gold</c>

02:05:34.069 --> 02:05:34.079 align:start position:0%
here at rot e stream Fame solid gold
 

02:05:34.079 --> 02:05:35.990 align:start position:0%
here at rot e stream Fame solid gold
Magikarp<02:05:34.760><c> Signet</c><02:05:35.199><c> message</c><02:05:35.599><c> like</c><02:05:35.800><c> really</c>

02:05:35.990 --> 02:05:36.000 align:start position:0%
Magikarp Signet message like really
 

02:05:36.000 --> 02:05:39.950 align:start position:0%
Magikarp Signet message like really
weird<02:05:36.360><c> tokens</c><02:05:37.239><c> in</c><02:05:38.239><c> uh</c><02:05:38.639><c> basically</c><02:05:39.639><c> in</c><02:05:39.800><c> this</c>

02:05:39.950 --> 02:05:39.960 align:start position:0%
weird tokens in uh basically in this
 

02:05:39.960 --> 02:05:42.229 align:start position:0%
weird tokens in uh basically in this
embedding<02:05:40.520><c> cluster</c><02:05:41.480><c> and</c><02:05:41.599><c> so</c><02:05:41.760><c> what</c><02:05:41.880><c> are</c><02:05:42.079><c> these</c>

02:05:42.229 --> 02:05:42.239 align:start position:0%
embedding cluster and so what are these
 

02:05:42.239 --> 02:05:43.669 align:start position:0%
embedding cluster and so what are these
tokens<02:05:42.639><c> and</c><02:05:42.800><c> where</c><02:05:42.920><c> do</c><02:05:43.040><c> they</c><02:05:43.159><c> even</c><02:05:43.360><c> come</c><02:05:43.520><c> from</c>

02:05:43.669 --> 02:05:43.679 align:start position:0%
tokens and where do they even come from
 

02:05:43.679 --> 02:05:45.390 align:start position:0%
tokens and where do they even come from
like<02:05:43.800><c> what</c><02:05:43.880><c> is</c><02:05:44.040><c> solid</c><02:05:44.360><c> gold</c><02:05:44.559><c> magikarpet</c><02:05:45.199><c> makes</c>

02:05:45.390 --> 02:05:45.400 align:start position:0%
like what is solid gold magikarpet makes
 

02:05:45.400 --> 02:05:48.950 align:start position:0%
like what is solid gold magikarpet makes
no<02:05:45.559><c> sense</c><02:05:46.559><c> and</c><02:05:47.079><c> then</c><02:05:48.079><c> they</c><02:05:48.239><c> found</c><02:05:48.719><c> bunch</c><02:05:48.880><c> of</c>

02:05:48.950 --> 02:05:48.960 align:start position:0%
no sense and then they found bunch of
 

02:05:48.960 --> 02:05:50.189 align:start position:0%
no sense and then they found bunch of
these

02:05:50.189 --> 02:05:50.199 align:start position:0%
these
 

02:05:50.199 --> 02:05:52.109 align:start position:0%
these
tokens<02:05:51.199><c> and</c><02:05:51.360><c> then</c><02:05:51.520><c> they</c><02:05:51.639><c> notice</c><02:05:51.960><c> that</c>

02:05:52.109 --> 02:05:52.119 align:start position:0%
tokens and then they notice that
 

02:05:52.119 --> 02:05:53.549 align:start position:0%
tokens and then they notice that
actually<02:05:52.360><c> the</c><02:05:52.480><c> plot</c><02:05:52.719><c> thickens</c><02:05:53.119><c> here</c><02:05:53.360><c> because</c>

02:05:53.549 --> 02:05:53.559 align:start position:0%
actually the plot thickens here because
 

02:05:53.559 --> 02:05:56.030 align:start position:0%
actually the plot thickens here because
if<02:05:53.679><c> you</c><02:05:53.960><c> ask</c><02:05:54.480><c> the</c><02:05:54.639><c> model</c><02:05:55.079><c> about</c><02:05:55.400><c> these</c><02:05:55.559><c> tokens</c>

02:05:56.030 --> 02:05:56.040 align:start position:0%
if you ask the model about these tokens
 

02:05:56.040 --> 02:05:58.629 align:start position:0%
if you ask the model about these tokens
like<02:05:56.119><c> you</c><02:05:56.280><c> ask</c><02:05:56.440><c> it</c><02:05:57.360><c> uh</c><02:05:57.559><c> some</c><02:05:57.880><c> very</c><02:05:58.079><c> benign</c>

02:05:58.629 --> 02:05:58.639 align:start position:0%
like you ask it uh some very benign
 

02:05:58.639 --> 02:06:00.189 align:start position:0%
like you ask it uh some very benign
question<02:05:59.040><c> like</c><02:05:59.320><c> please</c><02:05:59.559><c> can</c><02:05:59.639><c> you</c><02:05:59.760><c> repeat</c><02:06:00.079><c> back</c>

02:06:00.189 --> 02:06:00.199 align:start position:0%
question like please can you repeat back
 

02:06:00.199 --> 02:06:02.950 align:start position:0%
question like please can you repeat back
to<02:06:00.320><c> me</c><02:06:00.440><c> the</c><02:06:00.599><c> string</c><02:06:00.880><c> sold</c><02:06:01.199><c> gold</c><02:06:01.840><c> Magikarp</c><02:06:02.840><c> uh</c>

02:06:02.950 --> 02:06:02.960 align:start position:0%
to me the string sold gold Magikarp uh
 

02:06:02.960 --> 02:06:04.790 align:start position:0%
to me the string sold gold Magikarp uh
then<02:06:03.079><c> you</c><02:06:03.199><c> get</c><02:06:03.360><c> a</c><02:06:03.559><c> variety</c><02:06:04.040><c> of</c><02:06:04.280><c> basically</c>

02:06:04.790 --> 02:06:04.800 align:start position:0%
then you get a variety of basically
 

02:06:04.800 --> 02:06:07.750 align:start position:0%
then you get a variety of basically
totally<02:06:05.159><c> broken</c><02:06:06.159><c> llm</c><02:06:06.679><c> Behavior</c><02:06:07.360><c> so</c><02:06:07.559><c> either</c>

02:06:07.750 --> 02:06:07.760 align:start position:0%
totally broken llm Behavior so either
 

02:06:07.760 --> 02:06:09.830 align:start position:0%
totally broken llm Behavior so either
you<02:06:07.920><c> get</c><02:06:08.159><c> evasion</c><02:06:08.760><c> so</c><02:06:09.119><c> I'm</c><02:06:09.199><c> sorry</c><02:06:09.520><c> I</c><02:06:09.599><c> can't</c>

02:06:09.830 --> 02:06:09.840 align:start position:0%
you get evasion so I'm sorry I can't
 

02:06:09.840 --> 02:06:11.390 align:start position:0%
you get evasion so I'm sorry I can't
hear<02:06:10.040><c> you</c><02:06:10.639><c> or</c><02:06:10.800><c> you</c><02:06:10.880><c> get</c><02:06:11.000><c> a</c><02:06:11.119><c> bunch</c><02:06:11.280><c> of</c>

02:06:11.390 --> 02:06:11.400 align:start position:0%
hear you or you get a bunch of
 

02:06:11.400 --> 02:06:14.549 align:start position:0%
hear you or you get a bunch of
hallucinations<02:06:12.320><c> as</c><02:06:12.440><c> a</c><02:06:13.000><c> response</c><02:06:14.000><c> um</c><02:06:14.280><c> you</c><02:06:14.400><c> can</c>

02:06:14.549 --> 02:06:14.559 align:start position:0%
hallucinations as a response um you can
 

02:06:14.559 --> 02:06:17.270 align:start position:0%
hallucinations as a response um you can
even<02:06:14.719><c> get</c><02:06:14.920><c> back</c><02:06:15.159><c> like</c><02:06:15.360><c> insults</c><02:06:16.199><c> so</c><02:06:16.360><c> you</c><02:06:16.520><c> ask</c><02:06:16.760><c> it</c>

02:06:17.270 --> 02:06:17.280 align:start position:0%
even get back like insults so you ask it
 

02:06:17.280 --> 02:06:19.990 align:start position:0%
even get back like insults so you ask it
uh<02:06:17.480><c> about</c><02:06:17.719><c> streamer</c><02:06:18.239><c> bot</c><02:06:18.760><c> it</c><02:06:19.159><c> uh</c><02:06:19.280><c> tells</c><02:06:19.639><c> the</c>

02:06:19.990 --> 02:06:20.000 align:start position:0%
uh about streamer bot it uh tells the
 

02:06:20.000 --> 02:06:22.030 align:start position:0%
uh about streamer bot it uh tells the
and<02:06:20.320><c> the</c><02:06:20.400><c> model</c><02:06:20.719><c> actually</c><02:06:21.000><c> just</c><02:06:21.119><c> calls</c><02:06:21.360><c> you</c>

02:06:22.030 --> 02:06:22.040 align:start position:0%
and the model actually just calls you
 

02:06:22.040 --> 02:06:24.149 align:start position:0%
and the model actually just calls you
names<02:06:23.040><c> uh</c><02:06:23.159><c> or</c><02:06:23.320><c> it</c><02:06:23.480><c> kind</c><02:06:23.559><c> of</c><02:06:23.679><c> comes</c><02:06:23.840><c> up</c><02:06:24.000><c> with</c>

02:06:24.149 --> 02:06:24.159 align:start position:0%
names uh or it kind of comes up with
 

02:06:24.159 --> 02:06:26.229 align:start position:0%
names uh or it kind of comes up with
like<02:06:24.280><c> weird</c><02:06:24.559><c> humor</c><02:06:25.199><c> like</c><02:06:25.320><c> you're</c><02:06:25.559><c> actually</c>

02:06:26.229 --> 02:06:26.239 align:start position:0%
like weird humor like you're actually
 

02:06:26.239 --> 02:06:28.470 align:start position:0%
like weird humor like you're actually
breaking<02:06:26.719><c> the</c><02:06:26.880><c> model</c><02:06:27.239><c> by</c><02:06:27.440><c> asking</c><02:06:27.920><c> about</c><02:06:28.199><c> these</c>

02:06:28.470 --> 02:06:28.480 align:start position:0%
breaking the model by asking about these
 

02:06:28.480 --> 02:06:30.510 align:start position:0%
breaking the model by asking about these
very<02:06:28.679><c> simple</c><02:06:28.960><c> strings</c><02:06:29.480><c> like</c><02:06:29.719><c> at</c><02:06:30.040><c> Roth</c><02:06:30.400><c> and</c>

02:06:30.510 --> 02:06:30.520 align:start position:0%
very simple strings like at Roth and
 

02:06:30.520 --> 02:06:32.830 align:start position:0%
very simple strings like at Roth and
sold<02:06:30.880><c> gold</c><02:06:31.119><c> Magikarp</c><02:06:32.119><c> so</c><02:06:32.320><c> like</c><02:06:32.480><c> what</c><02:06:32.599><c> the</c><02:06:32.719><c> hell</c>

02:06:32.830 --> 02:06:32.840 align:start position:0%
sold gold Magikarp so like what the hell
 

02:06:32.840 --> 02:06:34.470 align:start position:0%
sold gold Magikarp so like what the hell
is<02:06:33.000><c> happening</c><02:06:33.480><c> and</c><02:06:33.599><c> there's</c><02:06:33.760><c> a</c><02:06:33.880><c> variety</c><02:06:34.280><c> of</c>

02:06:34.470 --> 02:06:34.480 align:start position:0%
is happening and there's a variety of
 

02:06:34.480 --> 02:06:37.069 align:start position:0%
is happening and there's a variety of
here<02:06:34.800><c> documented</c><02:06:35.719><c> behaviors</c><02:06:36.719><c> uh</c><02:06:36.840><c> there's</c><02:06:37.000><c> a</c>

02:06:37.069 --> 02:06:37.079 align:start position:0%
here documented behaviors uh there's a
 

02:06:37.079 --> 02:06:38.470 align:start position:0%
here documented behaviors uh there's a
bunch<02:06:37.239><c> of</c><02:06:37.360><c> tokens</c><02:06:37.719><c> not</c><02:06:37.840><c> just</c><02:06:37.960><c> so</c><02:06:38.280><c> good</c>

02:06:38.470 --> 02:06:38.480 align:start position:0%
bunch of tokens not just so good
 

02:06:38.480 --> 02:06:40.270 align:start position:0%
bunch of tokens not just so good
Magikarp<02:06:39.040><c> that</c><02:06:39.239><c> have</c><02:06:39.599><c> that</c><02:06:39.719><c> kind</c><02:06:39.840><c> of</c><02:06:39.920><c> a</c>

02:06:40.270 --> 02:06:40.280 align:start position:0%
Magikarp that have that kind of a
 

02:06:40.280 --> 02:06:42.109 align:start position:0%
Magikarp that have that kind of a
behavior<02:06:41.280><c> and</c><02:06:41.400><c> so</c><02:06:41.559><c> basically</c><02:06:41.840><c> there's</c><02:06:42.000><c> a</c>

02:06:42.109 --> 02:06:42.119 align:start position:0%
behavior and so basically there's a
 

02:06:42.119 --> 02:06:44.149 align:start position:0%
behavior and so basically there's a
bunch<02:06:42.280><c> of</c><02:06:42.440><c> like</c><02:06:42.719><c> trigger</c><02:06:43.119><c> words</c><02:06:43.840><c> and</c><02:06:43.920><c> if</c><02:06:44.000><c> you</c>

02:06:44.149 --> 02:06:44.159 align:start position:0%
bunch of like trigger words and if you
 

02:06:44.159 --> 02:06:46.030 align:start position:0%
bunch of like trigger words and if you
ask<02:06:44.320><c> the</c><02:06:44.480><c> model</c><02:06:44.960><c> about</c><02:06:45.159><c> these</c><02:06:45.320><c> trigger</c><02:06:45.599><c> words</c>

02:06:46.030 --> 02:06:46.040 align:start position:0%
ask the model about these trigger words
 

02:06:46.040 --> 02:06:48.030 align:start position:0%
ask the model about these trigger words
or<02:06:46.239><c> you</c><02:06:46.440><c> just</c><02:06:46.599><c> include</c><02:06:47.000><c> them</c><02:06:47.119><c> in</c><02:06:47.239><c> your</c><02:06:47.440><c> prompt</c>

02:06:48.030 --> 02:06:48.040 align:start position:0%
or you just include them in your prompt
 

02:06:48.040 --> 02:06:49.990 align:start position:0%
or you just include them in your prompt
the<02:06:48.119><c> model</c><02:06:48.360><c> goes</c><02:06:48.679><c> haywire</c><02:06:49.239><c> and</c><02:06:49.400><c> has</c><02:06:49.599><c> all</c><02:06:49.800><c> kinds</c>

02:06:49.990 --> 02:06:50.000 align:start position:0%
the model goes haywire and has all kinds
 

02:06:50.000 --> 02:06:52.790 align:start position:0%
the model goes haywire and has all kinds
of<02:06:50.480><c> uh</c><02:06:50.639><c> really</c><02:06:50.880><c> Strange</c><02:06:51.320><c> Behaviors</c><02:06:52.159><c> including</c>

02:06:52.790 --> 02:06:52.800 align:start position:0%
of uh really Strange Behaviors including
 

02:06:52.800 --> 02:06:54.830 align:start position:0%
of uh really Strange Behaviors including
sort<02:06:53.000><c> of</c><02:06:53.199><c> ones</c><02:06:53.480><c> that</c><02:06:53.639><c> violate</c><02:06:54.159><c> typical</c><02:06:54.520><c> safety</c>

02:06:54.830 --> 02:06:54.840 align:start position:0%
sort of ones that violate typical safety
 

02:06:54.840 --> 02:06:56.990 align:start position:0%
sort of ones that violate typical safety
guidelines<02:06:55.840><c> uh</c><02:06:56.239><c> and</c><02:06:56.360><c> the</c><02:06:56.440><c> alignment</c><02:06:56.800><c> of</c><02:06:56.920><c> the</c>

02:06:56.990 --> 02:06:57.000 align:start position:0%
guidelines uh and the alignment of the
 

02:06:57.000 --> 02:06:59.830 align:start position:0%
guidelines uh and the alignment of the
model<02:06:57.520><c> like</c><02:06:57.679><c> it's</c><02:06:57.880><c> swearing</c><02:06:58.320><c> back</c><02:06:58.520><c> at</c><02:06:58.679><c> you</c><02:06:59.559><c> so</c>

02:06:59.830 --> 02:06:59.840 align:start position:0%
model like it's swearing back at you so
 

02:06:59.840 --> 02:07:01.750 align:start position:0%
model like it's swearing back at you so
what<02:07:00.000><c> is</c><02:07:00.239><c> happening</c><02:07:00.679><c> here</c><02:07:01.159><c> and</c><02:07:01.360><c> how</c><02:07:01.480><c> can</c><02:07:01.639><c> this</c>

02:07:01.750 --> 02:07:01.760 align:start position:0%
what is happening here and how can this
 

02:07:01.760 --> 02:07:04.549 align:start position:0%
what is happening here and how can this
possibly<02:07:02.079><c> be</c><02:07:02.239><c> true</c><02:07:03.239><c> well</c><02:07:03.639><c> this</c><02:07:03.920><c> again</c><02:07:04.159><c> comes</c>

02:07:04.549 --> 02:07:04.559 align:start position:0%
possibly be true well this again comes
 

02:07:04.559 --> 02:07:06.709 align:start position:0%
possibly be true well this again comes
down<02:07:04.679><c> to</c><02:07:05.040><c> tokenization</c><02:07:06.040><c> so</c><02:07:06.199><c> what's</c><02:07:06.360><c> happening</c>

02:07:06.709 --> 02:07:06.719 align:start position:0%
down to tokenization so what's happening
 

02:07:06.719 --> 02:07:08.750 align:start position:0%
down to tokenization so what's happening
here<02:07:06.960><c> is</c><02:07:07.079><c> that</c><02:07:07.199><c> sold</c><02:07:07.559><c> gold</c><02:07:07.760><c> Magikarp</c><02:07:08.480><c> if</c><02:07:08.559><c> you</c>

02:07:08.750 --> 02:07:08.760 align:start position:0%
here is that sold gold Magikarp if you
 

02:07:08.760 --> 02:07:11.709 align:start position:0%
here is that sold gold Magikarp if you
actually<02:07:09.000><c> dig</c><02:07:09.239><c> into</c><02:07:09.480><c> it</c><02:07:10.000><c> is</c><02:07:10.079><c> a</c><02:07:10.280><c> Reddit</c><02:07:10.599><c> user</c><02:07:11.520><c> so</c>

02:07:11.709 --> 02:07:11.719 align:start position:0%
actually dig into it is a Reddit user so
 

02:07:11.719 --> 02:07:14.030 align:start position:0%
actually dig into it is a Reddit user so
there's<02:07:11.880><c> a</c><02:07:12.079><c> u</c><02:07:12.639><c> Sol</c><02:07:13.000><c> gold</c>

02:07:14.030 --> 02:07:14.040 align:start position:0%
there's a u Sol gold
 

02:07:14.040 --> 02:07:16.790 align:start position:0%
there's a u Sol gold
Magikarp<02:07:15.040><c> and</c><02:07:15.239><c> probably</c><02:07:15.639><c> what</c><02:07:15.800><c> happened</c><02:07:16.159><c> here</c>

02:07:16.790 --> 02:07:16.800 align:start position:0%
Magikarp and probably what happened here
 

02:07:16.800 --> 02:07:17.990 align:start position:0%
Magikarp and probably what happened here
even<02:07:17.000><c> though</c><02:07:17.199><c> I</c><02:07:17.320><c> I</c><02:07:17.400><c> don't</c><02:07:17.480><c> know</c><02:07:17.639><c> that</c><02:07:17.760><c> this</c><02:07:17.880><c> has</c>

02:07:17.990 --> 02:07:18.000 align:start position:0%
even though I I don't know that this has
 

02:07:18.000 --> 02:07:20.430 align:start position:0%
even though I I don't know that this has
been<02:07:18.119><c> like</c><02:07:18.239><c> really</c><02:07:18.599><c> definitively</c><02:07:19.480><c> explored</c>

02:07:20.430 --> 02:07:20.440 align:start position:0%
been like really definitively explored
 

02:07:20.440 --> 02:07:23.149 align:start position:0%
been like really definitively explored
but<02:07:20.960><c> what</c><02:07:21.320><c> is</c><02:07:21.520><c> thought</c><02:07:21.760><c> to</c><02:07:21.920><c> have</c><02:07:22.119><c> happened</c><02:07:22.880><c> is</c>

02:07:23.149 --> 02:07:23.159 align:start position:0%
but what is thought to have happened is
 

02:07:23.159 --> 02:07:25.549 align:start position:0%
but what is thought to have happened is
that<02:07:23.800><c> the</c><02:07:23.960><c> tokenization</c><02:07:24.639><c> data</c><02:07:24.880><c> set</c><02:07:25.119><c> was</c><02:07:25.320><c> very</c>

02:07:25.549 --> 02:07:25.559 align:start position:0%
that the tokenization data set was very
 

02:07:25.559 --> 02:07:27.990 align:start position:0%
that the tokenization data set was very
different<02:07:26.159><c> from</c><02:07:26.400><c> the</c><02:07:26.920><c> training</c><02:07:27.320><c> data</c><02:07:27.599><c> set</c><02:07:27.840><c> for</c>

02:07:27.990 --> 02:07:28.000 align:start position:0%
different from the training data set for
 

02:07:28.000 --> 02:07:29.910 align:start position:0%
different from the training data set for
the<02:07:28.119><c> actual</c><02:07:28.440><c> language</c><02:07:28.760><c> model</c><02:07:29.520><c> so</c><02:07:29.679><c> in</c><02:07:29.760><c> the</c>

02:07:29.910 --> 02:07:29.920 align:start position:0%
the actual language model so in the
 

02:07:29.920 --> 02:07:31.510 align:start position:0%
the actual language model so in the
tokenization<02:07:30.480><c> data</c><02:07:30.719><c> set</c><02:07:30.880><c> there</c><02:07:30.960><c> was</c><02:07:31.079><c> a</c><02:07:31.199><c> ton</c><02:07:31.400><c> of</c>

02:07:31.510 --> 02:07:31.520 align:start position:0%
tokenization data set there was a ton of
 

02:07:31.520 --> 02:07:34.589 align:start position:0%
tokenization data set there was a ton of
redded<02:07:32.000><c> data</c><02:07:32.440><c> potentially</c><02:07:33.440><c> where</c><02:07:33.760><c> the</c><02:07:34.079><c> user</c>

02:07:34.589 --> 02:07:34.599 align:start position:0%
redded data potentially where the user
 

02:07:34.599 --> 02:07:36.390 align:start position:0%
redded data potentially where the user
solid<02:07:34.920><c> gold</c><02:07:35.079><c> Magikarp</c><02:07:35.639><c> was</c><02:07:35.760><c> mentioned</c><02:07:36.119><c> in</c><02:07:36.239><c> the</c>

02:07:36.390 --> 02:07:36.400 align:start position:0%
solid gold Magikarp was mentioned in the
 

02:07:36.400 --> 02:07:39.189 align:start position:0%
solid gold Magikarp was mentioned in the
text<02:07:37.320><c> because</c><02:07:37.639><c> solid</c><02:07:38.000><c> gold</c><02:07:38.159><c> Magikarp</c><02:07:38.679><c> was</c><02:07:38.800><c> a</c>

02:07:39.189 --> 02:07:39.199 align:start position:0%
text because solid gold Magikarp was a
 

02:07:39.199 --> 02:07:41.669 align:start position:0%
text because solid gold Magikarp was a
very<02:07:39.480><c> common</c><02:07:40.159><c> um</c><02:07:40.320><c> sort</c><02:07:40.520><c> of</c><02:07:41.199><c> uh</c><02:07:41.320><c> person</c><02:07:41.559><c> who</c>

02:07:41.669 --> 02:07:41.679 align:start position:0%
very common um sort of uh person who
 

02:07:41.679 --> 02:07:43.669 align:start position:0%
very common um sort of uh person who
would<02:07:41.840><c> post</c><02:07:42.119><c> a</c><02:07:42.239><c> lot</c><02:07:43.159><c> uh</c><02:07:43.280><c> this</c><02:07:43.360><c> would</c><02:07:43.520><c> be</c><02:07:43.599><c> a</c>

02:07:43.669 --> 02:07:43.679 align:start position:0%
would post a lot uh this would be a
 

02:07:43.679 --> 02:07:45.270 align:start position:0%
would post a lot uh this would be a
string<02:07:44.000><c> that</c><02:07:44.159><c> occurs</c><02:07:44.520><c> many</c><02:07:44.800><c> times</c><02:07:45.040><c> in</c><02:07:45.119><c> a</c>

02:07:45.270 --> 02:07:45.280 align:start position:0%
string that occurs many times in a
 

02:07:45.280 --> 02:07:47.990 align:start position:0%
string that occurs many times in a
tokenization<02:07:45.800><c> data</c><02:07:46.079><c> set</c><02:07:46.960><c> because</c><02:07:47.239><c> it</c><02:07:47.679><c> occurs</c>

02:07:47.990 --> 02:07:48.000 align:start position:0%
tokenization data set because it occurs
 

02:07:48.000 --> 02:07:49.990 align:start position:0%
tokenization data set because it occurs
many<02:07:48.199><c> times</c><02:07:48.599><c> in</c><02:07:48.719><c> a</c><02:07:48.840><c> tokenization</c><02:07:49.360><c> data</c><02:07:49.559><c> set</c>

02:07:49.990 --> 02:07:50.000 align:start position:0%
many times in a tokenization data set
 

02:07:50.000 --> 02:07:51.470 align:start position:0%
many times in a tokenization data set
these<02:07:50.159><c> tokens</c><02:07:50.480><c> would</c><02:07:50.639><c> end</c><02:07:50.760><c> up</c><02:07:50.920><c> getting</c><02:07:51.119><c> merged</c>

02:07:51.470 --> 02:07:51.480 align:start position:0%
these tokens would end up getting merged
 

02:07:51.480 --> 02:07:53.510 align:start position:0%
these tokens would end up getting merged
to<02:07:51.679><c> the</c><02:07:51.840><c> single</c><02:07:52.079><c> individual</c><02:07:52.559><c> token</c><02:07:53.079><c> for</c><02:07:53.360><c> that</c>

02:07:53.510 --> 02:07:53.520 align:start position:0%
to the single individual token for that
 

02:07:53.520 --> 02:07:56.390 align:start position:0%
to the single individual token for that
single<02:07:53.960><c> Reddit</c><02:07:54.320><c> user</c><02:07:54.800><c> sold</c><02:07:55.280><c> gold</c><02:07:55.480><c> Magikarp</c><02:07:56.199><c> so</c>

02:07:56.390 --> 02:07:56.400 align:start position:0%
single Reddit user sold gold Magikarp so
 

02:07:56.400 --> 02:07:58.350 align:start position:0%
single Reddit user sold gold Magikarp so
they<02:07:56.520><c> would</c><02:07:56.679><c> have</c><02:07:56.760><c> a</c><02:07:56.920><c> dedicated</c><02:07:57.440><c> token</c><02:07:58.079><c> in</c><02:07:58.199><c> a</c>

02:07:58.350 --> 02:07:58.360 align:start position:0%
they would have a dedicated token in a
 

02:07:58.360 --> 02:08:00.709 align:start position:0%
they would have a dedicated token in a
vocabulary<02:07:59.040><c> of</c><02:07:59.320><c> was</c><02:07:59.440><c> it</c><02:07:59.599><c> 50,000</c><02:08:00.199><c> tokens</c><02:08:00.559><c> in</c>

02:08:00.709 --> 02:08:00.719 align:start position:0%
vocabulary of was it 50,000 tokens in
 

02:08:00.719 --> 02:08:04.109 align:start position:0%
vocabulary of was it 50,000 tokens in
gpd2<02:08:01.719><c> that</c><02:08:01.800><c> is</c><02:08:01.960><c> devoted</c><02:08:02.280><c> to</c><02:08:02.440><c> that</c><02:08:02.559><c> Reddit</c><02:08:03.119><c> user</c>

02:08:04.109 --> 02:08:04.119 align:start position:0%
gpd2 that is devoted to that Reddit user
 

02:08:04.119 --> 02:08:05.589 align:start position:0%
gpd2 that is devoted to that Reddit user
and<02:08:04.280><c> then</c><02:08:04.480><c> what</c><02:08:04.599><c> happens</c><02:08:05.000><c> is</c><02:08:05.440><c> the</c>

02:08:05.589 --> 02:08:05.599 align:start position:0%
and then what happens is the
 

02:08:05.599 --> 02:08:08.589 align:start position:0%
and then what happens is the
tokenization<02:08:06.239><c> data</c><02:08:06.480><c> set</c><02:08:06.840><c> has</c><02:08:07.480><c> those</c><02:08:07.679><c> strings</c>

02:08:08.589 --> 02:08:08.599 align:start position:0%
tokenization data set has those strings
 

02:08:08.599 --> 02:08:10.910 align:start position:0%
tokenization data set has those strings
but<02:08:08.840><c> then</c><02:08:09.280><c> later</c><02:08:09.599><c> when</c><02:08:09.719><c> you</c><02:08:09.840><c> train</c><02:08:10.280><c> the</c><02:08:10.520><c> model</c>

02:08:10.910 --> 02:08:10.920 align:start position:0%
but then later when you train the model
 

02:08:10.920 --> 02:08:13.910 align:start position:0%
but then later when you train the model
the<02:08:11.000><c> language</c><02:08:11.360><c> model</c><02:08:11.880><c> itself</c><02:08:12.880><c> um</c><02:08:13.440><c> this</c><02:08:13.679><c> data</c>

02:08:13.910 --> 02:08:13.920 align:start position:0%
the language model itself um this data
 

02:08:13.920 --> 02:08:16.669 align:start position:0%
the language model itself um this data
from<02:08:14.119><c> Reddit</c><02:08:14.520><c> was</c><02:08:14.719><c> not</c><02:08:15.280><c> present</c><02:08:16.280><c> and</c><02:08:16.400><c> so</c>

02:08:16.669 --> 02:08:16.679 align:start position:0%
from Reddit was not present and so
 

02:08:16.679 --> 02:08:18.790 align:start position:0%
from Reddit was not present and so
therefore<02:08:17.480><c> in</c><02:08:17.639><c> the</c><02:08:17.760><c> entire</c><02:08:18.040><c> training</c><02:08:18.520><c> set</c><02:08:18.679><c> for</c>

02:08:18.790 --> 02:08:18.800 align:start position:0%
therefore in the entire training set for
 

02:08:18.800 --> 02:08:21.270 align:start position:0%
therefore in the entire training set for
the<02:08:18.920><c> language</c><02:08:19.239><c> model</c><02:08:20.079><c> sold</c><02:08:20.480><c> gold</c><02:08:20.679><c> Magikarp</c>

02:08:21.270 --> 02:08:21.280 align:start position:0%
the language model sold gold Magikarp
 

02:08:21.280 --> 02:08:24.310 align:start position:0%
the language model sold gold Magikarp
never<02:08:21.599><c> occurs</c><02:08:22.280><c> that</c><02:08:22.480><c> token</c><02:08:23.280><c> never</c><02:08:23.679><c> appears</c><02:08:24.199><c> in</c>

02:08:24.310 --> 02:08:24.320 align:start position:0%
never occurs that token never appears in
 

02:08:24.320 --> 02:08:25.830 align:start position:0%
never occurs that token never appears in
the<02:08:24.440><c> training</c><02:08:24.760><c> set</c><02:08:24.960><c> for</c><02:08:25.119><c> the</c><02:08:25.280><c> actual</c><02:08:25.559><c> language</c>

02:08:25.830 --> 02:08:25.840 align:start position:0%
the training set for the actual language
 

02:08:25.840 --> 02:08:28.910 align:start position:0%
the training set for the actual language
model<02:08:26.440><c> later</c><02:08:27.440><c> so</c><02:08:27.880><c> this</c><02:08:28.079><c> token</c><02:08:28.440><c> never</c><02:08:28.679><c> gets</c>

02:08:28.910 --> 02:08:28.920 align:start position:0%
model later so this token never gets
 

02:08:28.920 --> 02:08:31.030 align:start position:0%
model later so this token never gets
activated<02:08:29.800><c> it's</c><02:08:30.040><c> initialized</c><02:08:30.559><c> at</c><02:08:30.679><c> random</c><02:08:30.960><c> in</c>

02:08:31.030 --> 02:08:31.040 align:start position:0%
activated it's initialized at random in
 

02:08:31.040 --> 02:08:32.870 align:start position:0%
activated it's initialized at random in
the<02:08:31.119><c> beginning</c><02:08:31.360><c> of</c><02:08:31.679><c> optimization</c><02:08:32.679><c> then</c><02:08:32.800><c> you</c>

02:08:32.870 --> 02:08:32.880 align:start position:0%
the beginning of optimization then you
 

02:08:32.880 --> 02:08:34.470 align:start position:0%
the beginning of optimization then you
have<02:08:33.000><c> forward</c><02:08:33.320><c> backward</c><02:08:33.679><c> passes</c><02:08:33.960><c> and</c><02:08:34.119><c> updates</c>

02:08:34.470 --> 02:08:34.480 align:start position:0%
have forward backward passes and updates
 

02:08:34.480 --> 02:08:35.990 align:start position:0%
have forward backward passes and updates
to<02:08:34.599><c> the</c><02:08:34.719><c> model</c><02:08:35.199><c> and</c><02:08:35.320><c> this</c><02:08:35.480><c> token</c><02:08:35.719><c> is</c><02:08:35.840><c> just</c>

02:08:35.990 --> 02:08:36.000 align:start position:0%
to the model and this token is just
 

02:08:36.000 --> 02:08:37.910 align:start position:0%
to the model and this token is just
never<02:08:36.239><c> updated</c><02:08:36.679><c> in</c><02:08:36.800><c> the</c><02:08:36.920><c> embedding</c><02:08:37.360><c> table</c>

02:08:37.910 --> 02:08:37.920 align:start position:0%
never updated in the embedding table
 

02:08:37.920 --> 02:08:39.990 align:start position:0%
never updated in the embedding table
that<02:08:38.159><c> row</c><02:08:38.480><c> Vector</c><02:08:38.800><c> never</c><02:08:39.040><c> gets</c><02:08:39.239><c> sampled</c><02:08:39.880><c> it</c>

02:08:39.990 --> 02:08:40.000 align:start position:0%
that row Vector never gets sampled it
 

02:08:40.000 --> 02:08:42.030 align:start position:0%
that row Vector never gets sampled it
never<02:08:40.199><c> gets</c><02:08:40.400><c> used</c><02:08:40.920><c> so</c><02:08:41.079><c> it</c><02:08:41.199><c> never</c><02:08:41.360><c> gets</c><02:08:41.559><c> trained</c>

02:08:42.030 --> 02:08:42.040 align:start position:0%
never gets used so it never gets trained
 

02:08:42.040 --> 02:08:43.870 align:start position:0%
never gets used so it never gets trained
and<02:08:42.119><c> it's</c><02:08:42.280><c> completely</c><02:08:42.719><c> untrained</c><02:08:43.599><c> it's</c><02:08:43.760><c> kind</c>

02:08:43.870 --> 02:08:43.880 align:start position:0%
and it's completely untrained it's kind
 

02:08:43.880 --> 02:08:46.390 align:start position:0%
and it's completely untrained it's kind
of<02:08:44.040><c> like</c><02:08:44.239><c> unallocated</c><02:08:44.920><c> memory</c><02:08:45.480><c> in</c><02:08:45.760><c> a</c><02:08:45.960><c> typical</c>

02:08:46.390 --> 02:08:46.400 align:start position:0%
of like unallocated memory in a typical
 

02:08:46.400 --> 02:08:48.149 align:start position:0%
of like unallocated memory in a typical
binary<02:08:46.880><c> program</c><02:08:47.199><c> written</c><02:08:47.480><c> in</c><02:08:47.599><c> C</c><02:08:47.840><c> or</c><02:08:47.960><c> something</c>

02:08:48.149 --> 02:08:48.159 align:start position:0%
binary program written in C or something
 

02:08:48.159 --> 02:08:49.990 align:start position:0%
binary program written in C or something
like<02:08:48.280><c> that</c><02:08:48.520><c> that</c><02:08:49.119><c> so</c><02:08:49.239><c> it's</c><02:08:49.440><c> unallocated</c>

02:08:49.990 --> 02:08:50.000 align:start position:0%
like that that so it's unallocated
 

02:08:50.000 --> 02:08:51.830 align:start position:0%
like that that so it's unallocated
memory<02:08:50.639><c> and</c><02:08:50.719><c> then</c><02:08:50.840><c> at</c><02:08:51.040><c> test</c><02:08:51.280><c> time</c><02:08:51.520><c> if</c><02:08:51.639><c> you</c>

02:08:51.830 --> 02:08:51.840 align:start position:0%
memory and then at test time if you
 

02:08:51.840 --> 02:08:54.270 align:start position:0%
memory and then at test time if you
evoke<02:08:52.280><c> this</c><02:08:52.480><c> token</c><02:08:53.400><c> then</c><02:08:53.520><c> you're</c><02:08:53.800><c> basically</c>

02:08:54.270 --> 02:08:54.280 align:start position:0%
evoke this token then you're basically
 

02:08:54.280 --> 02:08:55.629 align:start position:0%
evoke this token then you're basically
plucking<02:08:54.639><c> out</c><02:08:54.840><c> a</c><02:08:54.960><c> row</c><02:08:55.159><c> of</c><02:08:55.239><c> the</c><02:08:55.320><c> embedding</c>

02:08:55.629 --> 02:08:55.639 align:start position:0%
plucking out a row of the embedding
 

02:08:55.639 --> 02:08:57.310 align:start position:0%
plucking out a row of the embedding
table<02:08:55.880><c> that</c><02:08:55.960><c> is</c><02:08:56.079><c> completely</c><02:08:56.440><c> untrained</c><02:08:57.199><c> and</c>

02:08:57.310 --> 02:08:57.320 align:start position:0%
table that is completely untrained and
 

02:08:57.320 --> 02:08:58.910 align:start position:0%
table that is completely untrained and
that<02:08:57.440><c> feeds</c><02:08:57.719><c> into</c><02:08:57.880><c> a</c><02:08:58.000><c> Transformer</c><02:08:58.800><c> and</c>

02:08:58.910 --> 02:08:58.920 align:start position:0%
that feeds into a Transformer and
 

02:08:58.920 --> 02:09:00.950 align:start position:0%
that feeds into a Transformer and
creates<02:08:59.280><c> undefined</c><02:08:59.840><c> behavior</c><02:09:00.719><c> and</c><02:09:00.840><c> that's</c>

02:09:00.950 --> 02:09:00.960 align:start position:0%
creates undefined behavior and that's
 

02:09:00.960 --> 02:09:02.149 align:start position:0%
creates undefined behavior and that's
what<02:09:01.040><c> we're</c><02:09:01.199><c> seeing</c><02:09:01.400><c> here</c><02:09:01.639><c> this</c><02:09:01.800><c> completely</c>

02:09:02.149 --> 02:09:02.159 align:start position:0%
what we're seeing here this completely
 

02:09:02.159 --> 02:09:03.870 align:start position:0%
what we're seeing here this completely
undefined<02:09:02.920><c> never</c><02:09:03.159><c> before</c><02:09:03.400><c> seen</c><02:09:03.639><c> in</c><02:09:03.760><c> a</c>

02:09:03.870 --> 02:09:03.880 align:start position:0%
undefined never before seen in a
 

02:09:03.880 --> 02:09:06.549 align:start position:0%
undefined never before seen in a
training<02:09:04.639><c> behavior</c><02:09:05.639><c> and</c><02:09:05.760><c> so</c><02:09:06.040><c> any</c><02:09:06.199><c> of</c><02:09:06.400><c> these</c>

02:09:06.549 --> 02:09:06.559 align:start position:0%
training behavior and so any of these
 

02:09:06.559 --> 02:09:07.990 align:start position:0%
training behavior and so any of these
kind<02:09:06.679><c> of</c><02:09:06.800><c> like</c><02:09:06.920><c> weird</c><02:09:07.159><c> tokens</c><02:09:07.520><c> would</c><02:09:07.679><c> evoke</c>

02:09:07.990 --> 02:09:08.000 align:start position:0%
kind of like weird tokens would evoke
 

02:09:08.000 --> 02:09:09.310 align:start position:0%
kind of like weird tokens would evoke
this<02:09:08.119><c> Behavior</c><02:09:08.559><c> because</c><02:09:08.760><c> fundamentally</c><02:09:09.239><c> the</c>

02:09:09.310 --> 02:09:09.320 align:start position:0%
this Behavior because fundamentally the
 

02:09:09.320 --> 02:09:14.470 align:start position:0%
this Behavior because fundamentally the
model<02:09:09.599><c> is</c><02:09:10.040><c> um</c><02:09:10.880><c> is</c><02:09:11.480><c> uh</c><02:09:12.480><c> uh</c><02:09:12.599><c> out</c><02:09:12.760><c> of</c><02:09:13.320><c> sample</c><02:09:14.320><c> out</c>

02:09:14.470 --> 02:09:14.480 align:start position:0%
model is um is uh uh out of sample out
 

02:09:14.480 --> 02:09:16.750 align:start position:0%
model is um is uh uh out of sample out
of<02:09:15.079><c> distribution</c><02:09:16.079><c> okay</c><02:09:16.199><c> and</c><02:09:16.320><c> the</c><02:09:16.440><c> very</c><02:09:16.639><c> last</c>

02:09:16.750 --> 02:09:16.760 align:start position:0%
of distribution okay and the very last
 

02:09:16.760 --> 02:09:18.510 align:start position:0%
of distribution okay and the very last
thing<02:09:16.920><c> I</c><02:09:17.000><c> wanted</c><02:09:17.199><c> to</c><02:09:17.320><c> just</c><02:09:17.480><c> briefly</c><02:09:17.920><c> mention</c>

02:09:18.510 --> 02:09:18.520 align:start position:0%
thing I wanted to just briefly mention
 

02:09:18.520 --> 02:09:19.669 align:start position:0%
thing I wanted to just briefly mention
point<02:09:18.679><c> out</c><02:09:18.920><c> although</c><02:09:19.159><c> I</c><02:09:19.239><c> think</c><02:09:19.400><c> a</c><02:09:19.480><c> lot</c><02:09:19.599><c> of</c>

02:09:19.669 --> 02:09:19.679 align:start position:0%
point out although I think a lot of
 

02:09:19.679 --> 02:09:21.629 align:start position:0%
point out although I think a lot of
people<02:09:19.880><c> are</c><02:09:20.040><c> quite</c><02:09:20.199><c> aware</c><02:09:20.440><c> of</c><02:09:20.639><c> this</c><02:09:21.280><c> is</c><02:09:21.480><c> that</c>

02:09:21.629 --> 02:09:21.639 align:start position:0%
people are quite aware of this is that
 

02:09:21.639 --> 02:09:23.149 align:start position:0%
people are quite aware of this is that
different<02:09:21.920><c> kinds</c><02:09:22.079><c> of</c><02:09:22.280><c> formats</c><02:09:22.760><c> and</c><02:09:22.920><c> different</c>

02:09:23.149 --> 02:09:23.159 align:start position:0%
different kinds of formats and different
 

02:09:23.159 --> 02:09:24.990 align:start position:0%
different kinds of formats and different
representations<02:09:23.920><c> and</c><02:09:24.079><c> different</c><02:09:24.360><c> languages</c>

02:09:24.990 --> 02:09:25.000 align:start position:0%
representations and different languages
 

02:09:25.000 --> 02:09:26.870 align:start position:0%
representations and different languages
and<02:09:25.119><c> so</c><02:09:25.280><c> on</c><02:09:25.760><c> might</c><02:09:25.960><c> be</c><02:09:26.079><c> more</c><02:09:26.400><c> or</c><02:09:26.599><c> less</c>

02:09:26.870 --> 02:09:26.880 align:start position:0%
and so on might be more or less
 

02:09:26.880 --> 02:09:29.790 align:start position:0%
and so on might be more or less
efficient<02:09:27.440><c> with</c><02:09:27.599><c> GPD</c><02:09:28.360><c> tokenizers</c><02:09:29.360><c> uh</c><02:09:29.480><c> or</c><02:09:29.639><c> any</c>

02:09:29.790 --> 02:09:29.800 align:start position:0%
efficient with GPD tokenizers uh or any
 

02:09:29.800 --> 02:09:31.390 align:start position:0%
efficient with GPD tokenizers uh or any
tokenizers<02:09:30.320><c> for</c><02:09:30.440><c> any</c><02:09:30.559><c> other</c><02:09:30.719><c> L</c><02:09:31.119><c> for</c><02:09:31.239><c> that</c>

02:09:31.390 --> 02:09:31.400 align:start position:0%
tokenizers for any other L for that
 

02:09:31.400 --> 02:09:33.549 align:start position:0%
tokenizers for any other L for that
matter<02:09:31.920><c> so</c><02:09:32.119><c> for</c><02:09:32.280><c> example</c><02:09:32.599><c> Json</c><02:09:33.079><c> is</c><02:09:33.239><c> actually</c>

02:09:33.549 --> 02:09:33.559 align:start position:0%
matter so for example Json is actually
 

02:09:33.559 --> 02:09:36.310 align:start position:0%
matter so for example Json is actually
really<02:09:33.800><c> dense</c><02:09:34.119><c> in</c><02:09:34.360><c> tokens</c><02:09:35.040><c> and</c><02:09:35.239><c> yaml</c><02:09:35.760><c> is</c><02:09:36.000><c> a</c><02:09:36.119><c> lot</c>

02:09:36.310 --> 02:09:36.320 align:start position:0%
really dense in tokens and yaml is a lot
 

02:09:36.320 --> 02:09:39.229 align:start position:0%
really dense in tokens and yaml is a lot
more<02:09:36.760><c> efficient</c><02:09:37.119><c> in</c><02:09:37.440><c> tokens</c><02:09:38.440><c> um</c><02:09:38.920><c> so</c><02:09:39.079><c> for</c>

02:09:39.229 --> 02:09:39.239 align:start position:0%
more efficient in tokens um so for
 

02:09:39.239 --> 02:09:41.310 align:start position:0%
more efficient in tokens um so for
example<02:09:39.679><c> this</c><02:09:40.119><c> are</c><02:09:40.440><c> these</c><02:09:40.559><c> are</c><02:09:40.719><c> the</c><02:09:40.880><c> same</c><02:09:41.159><c> in</c>

02:09:41.310 --> 02:09:41.320 align:start position:0%
example this are these are the same in
 

02:09:41.320 --> 02:09:44.589 align:start position:0%
example this are these are the same in
Json<02:09:41.880><c> and</c><02:09:42.079><c> in</c><02:09:42.280><c> yaml</c><02:09:43.159><c> the</c><02:09:43.320><c> Json</c><02:09:43.760><c> is</c>

02:09:44.589 --> 02:09:44.599 align:start position:0%
Json and in yaml the Json is
 

02:09:44.599 --> 02:09:48.109 align:start position:0%
Json and in yaml the Json is
116<02:09:45.599><c> and</c><02:09:45.840><c> the</c><02:09:46.040><c> yaml</c><02:09:46.480><c> is</c><02:09:46.599><c> 99</c><02:09:47.480><c> so</c><02:09:47.760><c> quite</c><02:09:47.880><c> a</c><02:09:47.960><c> bit</c><02:09:48.040><c> of</c>

02:09:48.109 --> 02:09:48.119 align:start position:0%
116 and the yaml is 99 so quite a bit of
 

02:09:48.119 --> 02:09:51.629 align:start position:0%
116 and the yaml is 99 so quite a bit of
an<02:09:48.400><c> Improvement</c><02:09:49.400><c> and</c><02:09:49.559><c> so</c><02:09:50.559><c> in</c><02:09:50.800><c> the</c><02:09:51.239><c> token</c>

02:09:51.629 --> 02:09:51.639 align:start position:0%
an Improvement and so in the token
 

02:09:51.639 --> 02:09:53.629 align:start position:0%
an Improvement and so in the token
economy<02:09:52.040><c> where</c><02:09:52.159><c> we</c><02:09:52.239><c> are</c><02:09:52.400><c> paying</c><02:09:53.000><c> uh</c><02:09:53.159><c> per</c><02:09:53.320><c> token</c>

02:09:53.629 --> 02:09:53.639 align:start position:0%
economy where we are paying uh per token
 

02:09:53.639 --> 02:09:55.669 align:start position:0%
economy where we are paying uh per token
in<02:09:53.800><c> many</c><02:09:54.000><c> ways</c><02:09:54.840><c> and</c><02:09:54.960><c> you</c><02:09:55.040><c> are</c><02:09:55.199><c> paying</c><02:09:55.440><c> in</c><02:09:55.559><c> the</c>

02:09:55.669 --> 02:09:55.679 align:start position:0%
in many ways and you are paying in the
 

02:09:55.679 --> 02:09:57.629 align:start position:0%
in many ways and you are paying in the
context<02:09:56.000><c> length</c><02:09:56.280><c> and</c><02:09:56.400><c> you're</c><02:09:56.520><c> paying</c><02:09:56.760><c> in</c><02:09:57.239><c> um</c>

02:09:57.629 --> 02:09:57.639 align:start position:0%
context length and you're paying in um
 

02:09:57.639 --> 02:09:59.870 align:start position:0%
context length and you're paying in um
dollar<02:09:58.040><c> amount</c><02:09:58.520><c> for</c><02:09:59.159><c> uh</c><02:09:59.320><c> the</c><02:09:59.480><c> cost</c><02:09:59.679><c> of</c>

02:09:59.870 --> 02:09:59.880 align:start position:0%
dollar amount for uh the cost of
 

02:09:59.880 --> 02:10:01.189 align:start position:0%
dollar amount for uh the cost of
processing<02:10:00.280><c> all</c><02:10:00.440><c> this</c><02:10:00.559><c> kind</c><02:10:00.679><c> of</c><02:10:00.760><c> structured</c>

02:10:01.189 --> 02:10:01.199 align:start position:0%
processing all this kind of structured
 

02:10:01.199 --> 02:10:03.510 align:start position:0%
processing all this kind of structured
data<02:10:01.440><c> when</c><02:10:01.559><c> you</c><02:10:01.679><c> have</c><02:10:01.840><c> to</c><02:10:02.679><c> um</c><02:10:02.920><c> so</c><02:10:03.199><c> prefer</c><02:10:03.440><c> to</c>

02:10:03.510 --> 02:10:03.520 align:start position:0%
data when you have to um so prefer to
 

02:10:03.520 --> 02:10:06.069 align:start position:0%
data when you have to um so prefer to
use<02:10:03.679><c> theal</c><02:10:04.079><c> over</c><02:10:04.320><c> Json</c><02:10:05.280><c> and</c><02:10:05.440><c> in</c><02:10:05.559><c> general</c><02:10:05.960><c> kind</c>

02:10:06.069 --> 02:10:06.079 align:start position:0%
use theal over Json and in general kind
 

02:10:06.079 --> 02:10:07.589 align:start position:0%
use theal over Json and in general kind
of<02:10:06.199><c> like</c><02:10:06.360><c> the</c><02:10:06.480><c> tokenization</c><02:10:07.119><c> density</c><02:10:07.480><c> is</c>

02:10:07.589 --> 02:10:07.599 align:start position:0%
of like the tokenization density is
 

02:10:07.599 --> 02:10:09.830 align:start position:0%
of like the tokenization density is
something<02:10:07.840><c> that</c><02:10:07.960><c> you</c><02:10:08.079><c> have</c><02:10:08.199><c> to</c><02:10:09.040><c> um</c><02:10:09.280><c> sort</c><02:10:09.480><c> of</c>

02:10:09.830 --> 02:10:09.840 align:start position:0%
something that you have to um sort of
 

02:10:09.840 --> 02:10:11.669 align:start position:0%
something that you have to um sort of
care<02:10:10.079><c> about</c><02:10:10.440><c> and</c><02:10:10.559><c> worry</c><02:10:10.840><c> about</c><02:10:11.079><c> at</c><02:10:11.239><c> all</c><02:10:11.440><c> times</c>

02:10:11.669 --> 02:10:11.679 align:start position:0%
care about and worry about at all times
 

02:10:11.679 --> 02:10:13.390 align:start position:0%
care about and worry about at all times
and<02:10:11.800><c> try</c><02:10:11.960><c> to</c><02:10:12.079><c> find</c><02:10:12.639><c> efficient</c><02:10:12.960><c> encoding</c>

02:10:13.390 --> 02:10:13.400 align:start position:0%
and try to find efficient encoding
 

02:10:13.400 --> 02:10:15.390 align:start position:0%
and try to find efficient encoding
schemes<02:10:14.079><c> and</c><02:10:14.199><c> spend</c><02:10:14.400><c> a</c><02:10:14.520><c> lot</c><02:10:14.639><c> of</c><02:10:14.760><c> time</c><02:10:15.000><c> in</c><02:10:15.159><c> tick</c>

02:10:15.390 --> 02:10:15.400 align:start position:0%
schemes and spend a lot of time in tick
 

02:10:15.400 --> 02:10:16.870 align:start position:0%
schemes and spend a lot of time in tick
tokenizer<02:10:15.960><c> and</c><02:10:16.119><c> measure</c><02:10:16.480><c> the</c><02:10:16.599><c> different</c>

02:10:16.870 --> 02:10:16.880 align:start position:0%
tokenizer and measure the different
 

02:10:16.880 --> 02:10:18.910 align:start position:0%
tokenizer and measure the different
token<02:10:17.199><c> efficiencies</c><02:10:18.000><c> of</c><02:10:18.320><c> different</c><02:10:18.559><c> formats</c>

02:10:18.910 --> 02:10:18.920 align:start position:0%
token efficiencies of different formats
 

02:10:18.920 --> 02:10:20.990 align:start position:0%
token efficiencies of different formats
and<02:10:19.079><c> settings</c><02:10:19.480><c> and</c><02:10:19.639><c> so</c><02:10:19.800><c> on</c><02:10:20.520><c> okay</c><02:10:20.639><c> so</c><02:10:20.840><c> that</c>

02:10:20.990 --> 02:10:21.000 align:start position:0%
and settings and so on okay so that
 

02:10:21.000 --> 02:10:23.350 align:start position:0%
and settings and so on okay so that
concludes<02:10:21.480><c> my</c><02:10:22.000><c> fairly</c><02:10:22.360><c> long</c><02:10:22.599><c> video</c><02:10:22.840><c> on</c>

02:10:23.350 --> 02:10:23.360 align:start position:0%
concludes my fairly long video on
 

02:10:23.360 --> 02:10:25.950 align:start position:0%
concludes my fairly long video on
tokenization<02:10:24.360><c> I</c><02:10:24.480><c> know</c><02:10:24.679><c> it's</c><02:10:25.000><c> a</c><02:10:25.199><c> try</c><02:10:25.679><c> I</c><02:10:25.760><c> know</c>

02:10:25.950 --> 02:10:25.960 align:start position:0%
tokenization I know it's a try I know
 

02:10:25.960 --> 02:10:28.430 align:start position:0%
tokenization I know it's a try I know
it's<02:10:26.280><c> annoying</c><02:10:26.800><c> I</c><02:10:26.880><c> know</c><02:10:27.040><c> it's</c><02:10:27.239><c> irritating</c><02:10:28.119><c> I</c>

02:10:28.430 --> 02:10:28.440 align:start position:0%
it's annoying I know it's irritating I
 

02:10:28.440 --> 02:10:30.870 align:start position:0%
it's annoying I know it's irritating I
personally<02:10:28.880><c> really</c><02:10:29.119><c> dislike</c><02:10:29.520><c> the</c><02:10:29.760><c> stage</c><02:10:30.760><c> what</c>

02:10:30.870 --> 02:10:30.880 align:start position:0%
personally really dislike the stage what
 

02:10:30.880 --> 02:10:32.589 align:start position:0%
personally really dislike the stage what
I<02:10:30.960><c> do</c><02:10:31.119><c> have</c><02:10:31.239><c> to</c><02:10:31.360><c> say</c><02:10:31.520><c> at</c><02:10:31.639><c> this</c><02:10:31.800><c> point</c><02:10:32.040><c> is</c><02:10:32.239><c> don't</c>

02:10:32.589 --> 02:10:32.599 align:start position:0%
I do have to say at this point is don't
 

02:10:32.599 --> 02:10:34.950 align:start position:0%
I do have to say at this point is don't
brush<02:10:32.840><c> it</c><02:10:33.040><c> off</c><02:10:33.719><c> there's</c><02:10:33.920><c> a</c><02:10:34.000><c> lot</c><02:10:34.159><c> of</c><02:10:34.320><c> foot</c><02:10:34.599><c> guns</c>

02:10:34.950 --> 02:10:34.960 align:start position:0%
brush it off there's a lot of foot guns
 

02:10:34.960 --> 02:10:38.109 align:start position:0%
brush it off there's a lot of foot guns
sharp<02:10:35.280><c> edges</c><02:10:35.679><c> here</c><02:10:36.119><c> security</c><02:10:36.599><c> issues</c><02:10:37.440><c> uh</c><02:10:37.760><c> AI</c>

02:10:38.109 --> 02:10:38.119 align:start position:0%
sharp edges here security issues uh AI
 

02:10:38.119 --> 02:10:39.870 align:start position:0%
sharp edges here security issues uh AI
safety<02:10:38.480><c> issues</c><02:10:38.880><c> as</c><02:10:39.000><c> we</c><02:10:39.119><c> saw</c><02:10:39.360><c> plugging</c><02:10:39.679><c> in</c>

02:10:39.870 --> 02:10:39.880 align:start position:0%
safety issues as we saw plugging in
 

02:10:39.880 --> 02:10:42.069 align:start position:0%
safety issues as we saw plugging in
unallocated<02:10:40.559><c> memory</c><02:10:41.079><c> into</c><02:10:41.559><c> uh</c><02:10:41.679><c> language</c>

02:10:42.069 --> 02:10:42.079 align:start position:0%
unallocated memory into uh language
 

02:10:42.079 --> 02:10:45.149 align:start position:0%
unallocated memory into uh language
models<02:10:43.079><c> so</c><02:10:43.719><c> um</c><02:10:43.920><c> it's</c><02:10:44.159><c> worth</c><02:10:44.840><c> understanding</c>

02:10:45.149 --> 02:10:45.159 align:start position:0%
models so um it's worth understanding
 

02:10:45.159 --> 02:10:48.470 align:start position:0%
models so um it's worth understanding
this<02:10:45.360><c> stage</c><02:10:46.440><c> um</c><02:10:47.440><c> that</c><02:10:47.599><c> said</c><02:10:47.760><c> I</c><02:10:47.840><c> will</c><02:10:48.000><c> say</c><02:10:48.360><c> that</c>

02:10:48.470 --> 02:10:48.480 align:start position:0%
this stage um that said I will say that
 

02:10:48.480 --> 02:10:50.310 align:start position:0%
this stage um that said I will say that
eternal<02:10:48.800><c> glory</c><02:10:49.119><c> goes</c><02:10:49.280><c> to</c><02:10:49.480><c> anyone</c><02:10:49.800><c> who</c><02:10:49.920><c> can</c><02:10:50.119><c> get</c>

02:10:50.310 --> 02:10:50.320 align:start position:0%
eternal glory goes to anyone who can get
 

02:10:50.320 --> 02:10:52.549 align:start position:0%
eternal glory goes to anyone who can get
rid<02:10:50.480><c> of</c><02:10:50.599><c> it</c><02:10:51.199><c> uh</c><02:10:51.320><c> I</c><02:10:51.400><c> showed</c><02:10:51.679><c> you</c><02:10:51.880><c> one</c><02:10:52.199><c> possible</c>

02:10:52.549 --> 02:10:52.559 align:start position:0%
rid of it uh I showed you one possible
 

02:10:52.559 --> 02:10:54.669 align:start position:0%
rid of it uh I showed you one possible
paper<02:10:52.920><c> that</c><02:10:53.040><c> tried</c><02:10:53.320><c> to</c><02:10:53.840><c> uh</c><02:10:53.960><c> do</c><02:10:54.159><c> that</c><02:10:54.400><c> and</c><02:10:54.559><c> I</c>

02:10:54.669 --> 02:10:54.679 align:start position:0%
paper that tried to uh do that and I
 

02:10:54.679 --> 02:10:57.030 align:start position:0%
paper that tried to uh do that and I
think<02:10:55.040><c> I</c><02:10:55.199><c> hope</c><02:10:55.840><c> a</c><02:10:55.920><c> lot</c><02:10:56.040><c> more</c><02:10:56.280><c> can</c><02:10:56.440><c> follow</c><02:10:56.800><c> over</c>

02:10:57.030 --> 02:10:57.040 align:start position:0%
think I hope a lot more can follow over
 

02:10:57.040 --> 02:10:59.390 align:start position:0%
think I hope a lot more can follow over
time<02:10:57.960><c> and</c><02:10:58.079><c> my</c><02:10:58.199><c> final</c><02:10:58.480><c> recommendations</c><02:10:59.199><c> for</c>

02:10:59.390 --> 02:10:59.400 align:start position:0%
time and my final recommendations for
 

02:10:59.400 --> 02:11:01.430 align:start position:0%
time and my final recommendations for
the<02:10:59.559><c> application</c><02:11:00.040><c> right</c><02:11:00.159><c> now</c><02:11:00.400><c> are</c><02:11:01.079><c> if</c><02:11:01.199><c> you</c><02:11:01.280><c> can</c>

02:11:01.430 --> 02:11:01.440 align:start position:0%
the application right now are if you can
 

02:11:01.440 --> 02:11:03.030 align:start position:0%
the application right now are if you can
reuse<02:11:01.719><c> the</c><02:11:01.800><c> GPT</c><02:11:02.159><c> 4</c><02:11:02.400><c> tokens</c><02:11:02.760><c> and</c><02:11:02.880><c> the</c>

02:11:03.030 --> 02:11:03.040 align:start position:0%
reuse the GPT 4 tokens and the
 

02:11:03.040 --> 02:11:04.990 align:start position:0%
reuse the GPT 4 tokens and the
vocabulary<02:11:04.040><c> uh</c><02:11:04.159><c> in</c><02:11:04.280><c> your</c><02:11:04.400><c> application</c><02:11:04.840><c> then</c>

02:11:04.990 --> 02:11:05.000 align:start position:0%
vocabulary uh in your application then
 

02:11:05.000 --> 02:11:06.189 align:start position:0%
vocabulary uh in your application then
that's<02:11:05.159><c> something</c><02:11:05.360><c> you</c><02:11:05.440><c> should</c><02:11:05.679><c> consider</c><02:11:06.079><c> and</c>

02:11:06.189 --> 02:11:06.199 align:start position:0%
that's something you should consider and
 

02:11:06.199 --> 02:11:07.830 align:start position:0%
that's something you should consider and
just<02:11:06.320><c> use</c><02:11:06.520><c> Tech</c><02:11:06.719><c> token</c><02:11:07.079><c> because</c><02:11:07.280><c> it</c><02:11:07.360><c> is</c><02:11:07.559><c> very</c>

02:11:07.830 --> 02:11:07.840 align:start position:0%
just use Tech token because it is very
 

02:11:07.840 --> 02:11:11.229 align:start position:0%
just use Tech token because it is very
efficient<02:11:08.719><c> and</c><02:11:08.960><c> nice</c><02:11:09.599><c> library</c><02:11:10.159><c> for</c><02:11:10.520><c> inference</c>

02:11:11.229 --> 02:11:11.239 align:start position:0%
efficient and nice library for inference
 

02:11:11.239 --> 02:11:13.709 align:start position:0%
efficient and nice library for inference
for<02:11:11.599><c> bpe</c><02:11:12.599><c> I</c><02:11:12.719><c> also</c><02:11:12.960><c> really</c><02:11:13.159><c> like</c><02:11:13.320><c> the</c><02:11:13.480><c> bite</c>

02:11:13.709 --> 02:11:13.719 align:start position:0%
for bpe I also really like the bite
 

02:11:13.719 --> 02:11:17.310 align:start position:0%
for bpe I also really like the bite
level<02:11:13.960><c> BP</c><02:11:14.440><c> that</c><02:11:14.719><c> uh</c><02:11:14.800><c> Tik</c><02:11:15.040><c> toen</c><02:11:15.280><c> and</c><02:11:15.360><c> openi</c><02:11:16.320><c> uses</c>

02:11:17.310 --> 02:11:17.320 align:start position:0%
level BP that uh Tik toen and openi uses
 

02:11:17.320 --> 02:11:19.030 align:start position:0%
level BP that uh Tik toen and openi uses
uh<02:11:17.400><c> if</c><02:11:17.520><c> you</c><02:11:17.679><c> for</c><02:11:17.800><c> some</c><02:11:18.000><c> reason</c><02:11:18.440><c> want</c><02:11:18.599><c> to</c><02:11:18.760><c> train</c>

02:11:19.030 --> 02:11:19.040 align:start position:0%
uh if you for some reason want to train
 

02:11:19.040 --> 02:11:22.669 align:start position:0%
uh if you for some reason want to train
your<02:11:19.239><c> own</c><02:11:19.480><c> vocabulary</c><02:11:20.079><c> from</c><02:11:20.480><c> scratch</c><02:11:21.480><c> um</c><02:11:22.159><c> then</c>

02:11:22.669 --> 02:11:22.679 align:start position:0%
your own vocabulary from scratch um then
 

02:11:22.679 --> 02:11:24.990 align:start position:0%
your own vocabulary from scratch um then
I<02:11:22.760><c> would</c><02:11:23.000><c> use</c><02:11:23.440><c> uh</c><02:11:23.559><c> the</c><02:11:23.679><c> bpe</c><02:11:24.280><c> with</c><02:11:24.480><c> sentence</c>

02:11:24.990 --> 02:11:25.000 align:start position:0%
I would use uh the bpe with sentence
 

02:11:25.000 --> 02:11:28.109 align:start position:0%
I would use uh the bpe with sentence
piece<02:11:26.000><c> um</c><02:11:26.400><c> oops</c><02:11:27.199><c> as</c><02:11:27.280><c> I</c><02:11:27.440><c> mentioned</c><02:11:27.800><c> I'm</c><02:11:27.880><c> not</c><02:11:28.000><c> a</c>

02:11:28.109 --> 02:11:28.119 align:start position:0%
piece um oops as I mentioned I'm not a
 

02:11:28.119 --> 02:11:30.669 align:start position:0%
piece um oops as I mentioned I'm not a
huge<02:11:28.320><c> fan</c><02:11:28.480><c> of</c><02:11:28.599><c> sentence</c><02:11:28.960><c> piece</c><02:11:29.440><c> I</c><02:11:29.520><c> don't</c><02:11:30.119><c> like</c>

02:11:30.669 --> 02:11:30.679 align:start position:0%
huge fan of sentence piece I don't like
 

02:11:30.679 --> 02:11:33.910 align:start position:0%
huge fan of sentence piece I don't like
its<02:11:31.079><c> uh</c><02:11:31.239><c> bite</c><02:11:32.040><c> fallback</c><02:11:33.040><c> and</c><02:11:33.280><c> I</c><02:11:33.400><c> don't</c><02:11:33.679><c> like</c>

02:11:33.910 --> 02:11:33.920 align:start position:0%
its uh bite fallback and I don't like
 

02:11:33.920 --> 02:11:35.549 align:start position:0%
its uh bite fallback and I don't like
that<02:11:34.079><c> it's</c><02:11:34.239><c> doing</c><02:11:34.480><c> BP</c><02:11:34.840><c> on</c><02:11:34.920><c> unic</c><02:11:35.159><c> code</c><02:11:35.320><c> code</c>

02:11:35.549 --> 02:11:35.559 align:start position:0%
that it's doing BP on unic code code
 

02:11:35.559 --> 02:11:37.750 align:start position:0%
that it's doing BP on unic code code
points<02:11:36.320><c> I</c><02:11:36.400><c> think</c><02:11:36.559><c> it's</c><02:11:37.000><c> uh</c><02:11:37.159><c> it</c><02:11:37.280><c> also</c><02:11:37.480><c> has</c><02:11:37.639><c> like</c>

02:11:37.750 --> 02:11:37.760 align:start position:0%
points I think it's uh it also has like
 

02:11:37.760 --> 02:11:39.109 align:start position:0%
points I think it's uh it also has like
a<02:11:37.840><c> million</c><02:11:38.159><c> settings</c><02:11:38.480><c> and</c><02:11:38.639><c> I</c><02:11:38.719><c> think</c><02:11:38.880><c> there's</c><02:11:39.040><c> a</c>

02:11:39.109 --> 02:11:39.119 align:start position:0%
a million settings and I think there's a
 

02:11:39.119 --> 02:11:40.390 align:start position:0%
a million settings and I think there's a
lot<02:11:39.239><c> of</c><02:11:39.320><c> foot</c><02:11:39.520><c> gonss</c><02:11:39.800><c> here</c><02:11:39.880><c> and</c><02:11:40.000><c> I</c><02:11:40.119><c> think</c><02:11:40.239><c> it's</c>

02:11:40.390 --> 02:11:40.400 align:start position:0%
lot of foot gonss here and I think it's
 

02:11:40.400 --> 02:11:42.189 align:start position:0%
lot of foot gonss here and I think it's
really<02:11:40.639><c> easy</c><02:11:40.840><c> to</c><02:11:41.000><c> Mis</c><02:11:41.239><c> calibrate</c><02:11:41.679><c> them</c><02:11:42.040><c> and</c>

02:11:42.189 --> 02:11:42.199 align:start position:0%
really easy to Mis calibrate them and
 

02:11:42.199 --> 02:11:43.750 align:start position:0%
really easy to Mis calibrate them and
you<02:11:42.280><c> end</c><02:11:42.400><c> up</c><02:11:42.520><c> cropping</c><02:11:42.880><c> your</c><02:11:43.040><c> sentences</c><02:11:43.599><c> or</c>

02:11:43.750 --> 02:11:43.760 align:start position:0%
you end up cropping your sentences or
 

02:11:43.760 --> 02:11:45.790 align:start position:0%
you end up cropping your sentences or
something<02:11:44.040><c> like</c><02:11:44.239><c> that</c><02:11:44.880><c> uh</c><02:11:45.000><c> because</c><02:11:45.199><c> of</c><02:11:45.360><c> some</c>

02:11:45.790 --> 02:11:45.800 align:start position:0%
something like that uh because of some
 

02:11:45.800 --> 02:11:47.270 align:start position:0%
something like that uh because of some
type<02:11:46.000><c> of</c><02:11:46.119><c> parameter</c><02:11:46.480><c> that</c><02:11:46.559><c> you</c><02:11:46.639><c> don't</c><02:11:46.800><c> fully</c>

02:11:47.270 --> 02:11:47.280 align:start position:0%
type of parameter that you don't fully
 

02:11:47.280 --> 02:11:49.430 align:start position:0%
type of parameter that you don't fully
understand<02:11:47.920><c> so</c><02:11:48.159><c> so</c><02:11:48.639><c> be</c><02:11:48.840><c> very</c><02:11:49.040><c> careful</c><02:11:49.320><c> with</c>

02:11:49.430 --> 02:11:49.440 align:start position:0%
understand so so be very careful with
 

02:11:49.440 --> 02:11:51.709 align:start position:0%
understand so so be very careful with
the<02:11:49.559><c> settings</c><02:11:50.280><c> try</c><02:11:50.520><c> to</c><02:11:50.719><c> copy</c><02:11:51.040><c> paste</c><02:11:51.320><c> exactly</c>

02:11:51.709 --> 02:11:51.719 align:start position:0%
the settings try to copy paste exactly
 

02:11:51.719 --> 02:11:54.270 align:start position:0%
the settings try to copy paste exactly
maybe<02:11:52.000><c> where</c><02:11:52.440><c> what</c><02:11:52.559><c> meta</c><02:11:52.960><c> did</c><02:11:53.280><c> or</c><02:11:54.000><c> basically</c>

02:11:54.270 --> 02:11:54.280 align:start position:0%
maybe where what meta did or basically
 

02:11:54.280 --> 02:11:56.109 align:start position:0%
maybe where what meta did or basically
spend<02:11:54.480><c> a</c><02:11:54.559><c> lot</c><02:11:54.719><c> of</c><02:11:54.840><c> time</c><02:11:55.040><c> looking</c><02:11:55.280><c> at</c><02:11:55.480><c> all</c><02:11:55.719><c> the</c>

02:11:56.109 --> 02:11:56.119 align:start position:0%
spend a lot of time looking at all the
 

02:11:56.119 --> 02:11:57.470 align:start position:0%
spend a lot of time looking at all the
hyper<02:11:56.360><c> parameters</c><02:11:56.760><c> and</c><02:11:56.880><c> go</c><02:11:57.000><c> through</c><02:11:57.159><c> the</c><02:11:57.280><c> code</c>

02:11:57.470 --> 02:11:57.480 align:start position:0%
hyper parameters and go through the code
 

02:11:57.480 --> 02:11:59.069 align:start position:0%
hyper parameters and go through the code
of<02:11:57.599><c> sentence</c><02:11:57.960><c> piece</c><02:11:58.360><c> and</c><02:11:58.480><c> make</c><02:11:58.599><c> sure</c><02:11:58.840><c> that</c><02:11:58.960><c> you</c>

02:11:59.069 --> 02:11:59.079 align:start position:0%
of sentence piece and make sure that you
 

02:11:59.079 --> 02:12:02.030 align:start position:0%
of sentence piece and make sure that you
have<02:11:59.239><c> this</c><02:11:59.840><c> correct</c><02:12:00.840><c> um</c><02:12:01.360><c> but</c><02:12:01.559><c> even</c><02:12:01.760><c> if</c><02:12:01.880><c> you</c>

02:12:02.030 --> 02:12:02.040 align:start position:0%
have this correct um but even if you
 

02:12:02.040 --> 02:12:03.470 align:start position:0%
have this correct um but even if you
have<02:12:02.159><c> all</c><02:12:02.280><c> the</c><02:12:02.400><c> settings</c><02:12:02.760><c> correct</c><02:12:03.159><c> I</c><02:12:03.280><c> still</c>

02:12:03.470 --> 02:12:03.480 align:start position:0%
have all the settings correct I still
 

02:12:03.480 --> 02:12:04.910 align:start position:0%
have all the settings correct I still
think<02:12:03.639><c> that</c><02:12:03.760><c> the</c><02:12:03.840><c> algorithm</c><02:12:04.320><c> is</c><02:12:04.639><c> kind</c><02:12:04.760><c> of</c>

02:12:04.910 --> 02:12:04.920 align:start position:0%
think that the algorithm is kind of
 

02:12:04.920 --> 02:12:07.669 align:start position:0%
think that the algorithm is kind of
inferior<02:12:05.559><c> to</c><02:12:05.760><c> what's</c><02:12:05.920><c> happening</c><02:12:06.440><c> here</c><02:12:07.440><c> and</c>

02:12:07.669 --> 02:12:07.679 align:start position:0%
inferior to what's happening here and
 

02:12:07.679 --> 02:12:09.510 align:start position:0%
inferior to what's happening here and
maybe<02:12:08.280><c> the</c><02:12:08.480><c> best</c><02:12:08.800><c> if</c><02:12:08.920><c> you</c><02:12:09.040><c> really</c><02:12:09.239><c> need</c><02:12:09.400><c> to</c>

02:12:09.510 --> 02:12:09.520 align:start position:0%
maybe the best if you really need to
 

02:12:09.520 --> 02:12:11.310 align:start position:0%
maybe the best if you really need to
train<02:12:10.040><c> your</c><02:12:10.400><c> vocabulary</c><02:12:10.880><c> maybe</c><02:12:11.079><c> the</c><02:12:11.199><c> best</c>

02:12:11.310 --> 02:12:11.320 align:start position:0%
train your vocabulary maybe the best
 

02:12:11.320 --> 02:12:13.149 align:start position:0%
train your vocabulary maybe the best
thing<02:12:11.480><c> is</c><02:12:11.559><c> to</c><02:12:11.760><c> just</c><02:12:11.920><c> wait</c><02:12:12.159><c> for</c><02:12:12.320><c> M</c><02:12:12.559><c> bpe</c><02:12:13.000><c> to</c>

02:12:13.149 --> 02:12:13.159 align:start position:0%
thing is to just wait for M bpe to
 

02:12:13.159 --> 02:12:16.830 align:start position:0%
thing is to just wait for M bpe to
becomes<02:12:13.599><c> as</c><02:12:13.760><c> efficient</c><02:12:14.679><c> as</c><02:12:15.000><c> possible</c><02:12:16.000><c> and</c><02:12:16.480><c> uh</c>

02:12:16.830 --> 02:12:16.840 align:start position:0%
becomes as efficient as possible and uh
 

02:12:16.840 --> 02:12:18.149 align:start position:0%
becomes as efficient as possible and uh
that's<02:12:17.040><c> something</c><02:12:17.280><c> that</c><02:12:17.480><c> maybe</c><02:12:17.719><c> I</c><02:12:17.800><c> hope</c><02:12:17.920><c> to</c>

02:12:18.149 --> 02:12:18.159 align:start position:0%
that's something that maybe I hope to
 

02:12:18.159 --> 02:12:20.790 align:start position:0%
that's something that maybe I hope to
work<02:12:18.440><c> on</c><02:12:19.440><c> and</c><02:12:19.920><c> at</c><02:12:20.040><c> some</c><02:12:20.199><c> point</c><02:12:20.400><c> maybe</c><02:12:20.559><c> we</c><02:12:20.679><c> can</c>

02:12:20.790 --> 02:12:20.800 align:start position:0%
work on and at some point maybe we can
 

02:12:20.800 --> 02:12:22.870 align:start position:0%
work on and at some point maybe we can
be<02:12:20.920><c> training</c><02:12:21.440><c> basically</c><02:12:22.400><c> really</c><02:12:22.639><c> what</c><02:12:22.760><c> we</c>

02:12:22.870 --> 02:12:22.880 align:start position:0%
be training basically really what we
 

02:12:22.880 --> 02:12:24.950 align:start position:0%
be training basically really what we
want<02:12:23.159><c> is</c><02:12:23.280><c> we</c><02:12:23.440><c> want</c><02:12:23.760><c> tick</c><02:12:24.040><c> token</c><02:12:24.440><c> but</c><02:12:24.599><c> training</c>

02:12:24.950 --> 02:12:24.960 align:start position:0%
want is we want tick token but training
 

02:12:24.960 --> 02:12:27.830 align:start position:0%
want is we want tick token but training
code<02:12:25.840><c> and</c><02:12:26.239><c> that</c><02:12:26.440><c> is</c><02:12:26.599><c> the</c><02:12:26.760><c> ideal</c><02:12:27.239><c> thing</c><02:12:27.679><c> that</c>

02:12:27.830 --> 02:12:27.840 align:start position:0%
code and that is the ideal thing that
 

02:12:27.840 --> 02:12:31.350 align:start position:0%
code and that is the ideal thing that
currently<02:12:28.239><c> does</c><02:12:28.400><c> not</c><02:12:28.679><c> exist</c><02:12:29.639><c> and</c><02:12:29.920><c> MBP</c><02:12:30.679><c> is</c><02:12:31.040><c> um</c>

02:12:31.350 --> 02:12:31.360 align:start position:0%
currently does not exist and MBP is um
 

02:12:31.360 --> 02:12:33.229 align:start position:0%
currently does not exist and MBP is um
is<02:12:31.480><c> in</c><02:12:32.040><c> implementation</c><02:12:32.559><c> of</c><02:12:32.679><c> it</c><02:12:32.800><c> but</c><02:12:32.920><c> currently</c>

02:12:33.229 --> 02:12:33.239 align:start position:0%
is in implementation of it but currently
 

02:12:33.239 --> 02:12:35.870 align:start position:0%
is in implementation of it but currently
it's<02:12:33.360><c> in</c><02:12:33.840><c> Python</c><02:12:34.840><c> so</c><02:12:35.040><c> that's</c><02:12:35.400><c> currently</c><02:12:35.760><c> what</c>

02:12:35.870 --> 02:12:35.880 align:start position:0%
it's in Python so that's currently what
 

02:12:35.880 --> 02:12:38.189 align:start position:0%
it's in Python so that's currently what
I<02:12:35.960><c> have</c><02:12:36.040><c> to</c><02:12:36.159><c> say</c><02:12:36.320><c> for</c><02:12:36.840><c> uh</c><02:12:36.960><c> tokenization</c><02:12:37.960><c> there</c>

02:12:38.189 --> 02:12:38.199 align:start position:0%
I have to say for uh tokenization there
 

02:12:38.199 --> 02:12:40.390 align:start position:0%
I have to say for uh tokenization there
might<02:12:38.400><c> be</c><02:12:38.559><c> an</c><02:12:38.719><c> advanced</c><02:12:39.119><c> video</c><02:12:39.679><c> that</c><02:12:39.960><c> has</c><02:12:40.199><c> even</c>

02:12:40.390 --> 02:12:40.400 align:start position:0%
might be an advanced video that has even
 

02:12:40.400 --> 02:12:41.910 align:start position:0%
might be an advanced video that has even
drier<02:12:40.880><c> and</c><02:12:41.040><c> even</c><02:12:41.199><c> more</c><02:12:41.360><c> detailed</c><02:12:41.719><c> in</c><02:12:41.800><c> the</c>

02:12:41.910 --> 02:12:41.920 align:start position:0%
drier and even more detailed in the
 

02:12:41.920 --> 02:12:43.629 align:start position:0%
drier and even more detailed in the
future<02:12:42.679><c> but</c><02:12:42.840><c> for</c><02:12:43.000><c> now</c><02:12:43.199><c> I</c><02:12:43.280><c> think</c><02:12:43.400><c> we're</c><02:12:43.520><c> going</c>

02:12:43.629 --> 02:12:43.639 align:start position:0%
future but for now I think we're going
 

02:12:43.639 --> 02:12:46.750 align:start position:0%
future but for now I think we're going
to<02:12:43.760><c> leave</c><02:12:43.960><c> things</c><02:12:44.199><c> off</c><02:12:44.520><c> here</c><02:12:45.000><c> and</c><02:12:45.480><c> uh</c><02:12:46.480><c> I</c><02:12:46.599><c> hope</c>

02:12:46.750 --> 02:12:46.760 align:start position:0%
to leave things off here and uh I hope
 

02:12:46.760 --> 02:12:54.109 align:start position:0%
to leave things off here and uh I hope
that<02:12:46.880><c> was</c><02:12:47.000><c> helpful</c><02:12:47.840><c> bye</c>

02:12:54.109 --> 02:12:54.119 align:start position:0%
 
 

02:12:54.119 --> 02:12:56.030 align:start position:0%
 
and<02:12:54.520><c> uh</c><02:12:54.639><c> they</c><02:12:54.800><c> increase</c><02:12:55.239><c> this</c><02:12:55.360><c> contact</c><02:12:55.760><c> size</c>

02:12:56.030 --> 02:12:56.040 align:start position:0%
and uh they increase this contact size
 

02:12:56.040 --> 02:13:02.669 align:start position:0%
and uh they increase this contact size
from<02:12:56.239><c> gpt1</c><02:12:56.960><c> of</c><02:12:57.440><c> 512</c><02:12:58.440><c> uh</c><02:12:58.559><c> to</c><02:12:58.840><c> 1024</c><02:12:59.719><c> and</c><02:12:59.920><c> GPT</c><02:13:00.639><c> 4</c>

02:13:02.669 --> 02:13:02.679 align:start position:0%
from gpt1 of 512 uh to 1024 and GPT 4
 

02:13:02.679 --> 02:13:05.430 align:start position:0%
from gpt1 of 512 uh to 1024 and GPT 4
two<02:13:03.679><c> the</c>

02:13:05.430 --> 02:13:05.440 align:start position:0%
two the
 

02:13:05.440 --> 02:13:07.629 align:start position:0%
two the
next<02:13:06.440><c> okay</c><02:13:06.639><c> next</c><02:13:06.920><c> I</c><02:13:07.000><c> would</c><02:13:07.159><c> like</c><02:13:07.280><c> us</c><02:13:07.440><c> to</c>

02:13:07.629 --> 02:13:07.639 align:start position:0%
next okay next I would like us to
 

02:13:07.639 --> 02:13:09.790 align:start position:0%
next okay next I would like us to
briefly<02:13:08.040><c> walk</c><02:13:08.280><c> through</c><02:13:08.639><c> the</c><02:13:09.079><c> code</c><02:13:09.360><c> from</c><02:13:09.559><c> open</c>

02:13:09.790 --> 02:13:09.800 align:start position:0%
briefly walk through the code from open
 

02:13:09.800 --> 02:13:15.830 align:start position:0%
briefly walk through the code from open
AI<02:13:10.159><c> on</c><02:13:10.280><c> the</c><02:13:10.400><c> gpt2</c><02:13:10.960><c> encoded</c>

02:13:15.830 --> 02:13:15.840 align:start position:0%
 
 

02:13:15.840 --> 02:13:19.109 align:start position:0%
 
ATP<02:13:16.840><c> I'm</c><02:13:16.960><c> sorry</c><02:13:17.239><c> I'm</c><02:13:17.360><c> gonna</c><02:13:17.559><c> sneeze</c>

02:13:19.109 --> 02:13:19.119 align:start position:0%
ATP I'm sorry I'm gonna sneeze
 

02:13:19.119 --> 02:13:21.830 align:start position:0%
ATP I'm sorry I'm gonna sneeze
and<02:13:19.280><c> then</c><02:13:19.520><c> what's</c><02:13:19.719><c> Happening</c><02:13:20.159><c> Here</c>

02:13:21.830 --> 02:13:21.840 align:start position:0%
and then what's Happening Here
 

02:13:21.840 --> 02:13:24.629 align:start position:0%
and then what's Happening Here
is<02:13:22.840><c> this</c><02:13:22.960><c> is</c><02:13:23.079><c> a</c><02:13:23.239><c> spous</c><02:13:23.760><c> layer</c><02:13:24.199><c> that</c><02:13:24.320><c> I</c><02:13:24.400><c> will</c>

02:13:24.629 --> 02:13:24.639 align:start position:0%
is this is a spous layer that I will
 

02:13:24.639 --> 02:13:26.109 align:start position:0%
is this is a spous layer that I will
explain<02:13:24.920><c> in</c><02:13:25.040><c> a</c>

02:13:26.109 --> 02:13:26.119 align:start position:0%
explain in a
 

02:13:26.119 --> 02:13:33.149 align:start position:0%
explain in a
bit<02:13:27.119><c> What's</c><02:13:27.320><c> Happening</c><02:13:27.719><c> Here</c>

02:13:33.149 --> 02:13:33.159 align:start position:0%
 
 

02:13:33.159 --> 02:13:36.159 align:start position:0%
 
is

