WEBVTT
Kind: captions
Language: en

00:00:00.160 --> 00:00:02.350 align:start position:0%
 
hi<00:00:00.320><c> everyone</c><00:00:01.319><c> so</c><00:00:01.520><c> today</c><00:00:01.760><c> we</c><00:00:01.839><c> are</c><00:00:01.959><c> going</c><00:00:02.120><c> to</c><00:00:02.200><c> be</c>

00:00:02.350 --> 00:00:02.360 align:start position:0%
hi everyone so today we are going to be
 

00:00:02.360 --> 00:00:04.670 align:start position:0%
hi everyone so today we are going to be
continuing<00:00:02.800><c> our</c><00:00:02.960><c> Zero</c><00:00:03.199><c> to</c><00:00:03.360><c> Hero</c><00:00:03.639><c> series</c><00:00:04.480><c> and</c>

00:00:04.670 --> 00:00:04.680 align:start position:0%
continuing our Zero to Hero series and
 

00:00:04.680 --> 00:00:05.990 align:start position:0%
continuing our Zero to Hero series and
in<00:00:04.839><c> particular</c><00:00:05.319><c> today</c><00:00:05.560><c> we</c><00:00:05.640><c> are</c><00:00:05.720><c> going</c><00:00:05.879><c> to</c>

00:00:05.990 --> 00:00:06.000 align:start position:0%
in particular today we are going to
 

00:00:06.000 --> 00:00:09.629 align:start position:0%
in particular today we are going to
reproduce<00:00:06.480><c> the</c><00:00:06.600><c> gpt2</c><00:00:07.319><c> model</c><00:00:08.000><c> the</c><00:00:08.160><c> 124</c><00:00:09.160><c> million</c>

00:00:09.629 --> 00:00:09.639 align:start position:0%
reproduce the gpt2 model the 124 million
 

00:00:09.639 --> 00:00:13.350 align:start position:0%
reproduce the gpt2 model the 124 million
version<00:00:10.240><c> of</c><00:00:10.799><c> it</c><00:00:11.799><c> so</c><00:00:12.440><c> when</c><00:00:12.599><c> openi</c><00:00:13.080><c> released</c>

00:00:13.350 --> 00:00:13.360 align:start position:0%
version of it so when openi released
 

00:00:13.360 --> 00:00:16.750 align:start position:0%
version of it so when openi released
gpt2<00:00:14.080><c> this</c><00:00:14.200><c> was</c><00:00:14.799><c> 2019</c><00:00:15.799><c> and</c><00:00:16.080><c> they</c><00:00:16.199><c> released</c><00:00:16.560><c> it</c>

00:00:16.750 --> 00:00:16.760 align:start position:0%
gpt2 this was 2019 and they released it
 

00:00:16.760 --> 00:00:19.029 align:start position:0%
gpt2 this was 2019 and they released it
with<00:00:16.920><c> this</c><00:00:17.080><c> blog</c><00:00:17.359><c> post</c><00:00:18.320><c> on</c><00:00:18.480><c> top</c><00:00:18.640><c> of</c><00:00:18.760><c> that</c><00:00:18.920><c> they</c>

00:00:19.029 --> 00:00:19.039 align:start position:0%
with this blog post on top of that they
 

00:00:19.039 --> 00:00:21.310 align:start position:0%
with this blog post on top of that they
released<00:00:19.560><c> this</c><00:00:19.760><c> paper</c><00:00:20.600><c> and</c><00:00:20.760><c> on</c><00:00:20.920><c> top</c><00:00:21.080><c> of</c><00:00:21.199><c> that</c>

00:00:21.310 --> 00:00:21.320 align:start position:0%
released this paper and on top of that
 

00:00:21.320 --> 00:00:23.349 align:start position:0%
released this paper and on top of that
they<00:00:21.480><c> released</c><00:00:22.000><c> this</c><00:00:22.160><c> code</c><00:00:22.400><c> on</c><00:00:22.560><c> GitHub</c><00:00:23.160><c> so</c>

00:00:23.349 --> 00:00:23.359 align:start position:0%
they released this code on GitHub so
 

00:00:23.359 --> 00:00:24.670 align:start position:0%
they released this code on GitHub so
open<00:00:23.680><c> a/</c>

00:00:24.670 --> 00:00:24.680 align:start position:0%
open a/
 

00:00:24.680 --> 00:00:27.230 align:start position:0%
open a/
gpt2<00:00:25.680><c> now</c><00:00:26.119><c> when</c><00:00:26.240><c> we</c><00:00:26.400><c> talk</c><00:00:26.560><c> about</c><00:00:26.760><c> reproducing</c>

00:00:27.230 --> 00:00:27.240 align:start position:0%
gpt2 now when we talk about reproducing
 

00:00:27.240 --> 00:00:29.310 align:start position:0%
gpt2 now when we talk about reproducing
gpt2<00:00:28.080><c> we</c><00:00:28.199><c> have</c><00:00:28.279><c> to</c><00:00:28.359><c> be</c><00:00:28.480><c> careful</c><00:00:28.920><c> because</c><00:00:29.160><c> in</c>

00:00:29.310 --> 00:00:29.320 align:start position:0%
gpt2 we have to be careful because in
 

00:00:29.320 --> 00:00:30.749 align:start position:0%
gpt2 we have to be careful because in
particular<00:00:29.640><c> in</c><00:00:29.800><c> this</c><00:00:30.039><c> video</c><00:00:30.439><c> we're</c><00:00:30.560><c> going</c><00:00:30.679><c> to</c>

00:00:30.749 --> 00:00:30.759 align:start position:0%
particular in this video we're going to
 

00:00:30.759 --> 00:00:33.350 align:start position:0%
particular in this video we're going to
be<00:00:30.880><c> reproducing</c><00:00:31.320><c> the</c><00:00:31.480><c> 124</c><00:00:32.360><c> million</c><00:00:32.920><c> parameter</c>

00:00:33.350 --> 00:00:33.360 align:start position:0%
be reproducing the 124 million parameter
 

00:00:33.360 --> 00:00:35.430 align:start position:0%
be reproducing the 124 million parameter
model<00:00:34.320><c> so</c><00:00:34.520><c> the</c><00:00:34.640><c> thing</c><00:00:34.760><c> to</c><00:00:34.879><c> realize</c><00:00:35.239><c> is</c><00:00:35.320><c> that</c>

00:00:35.430 --> 00:00:35.440 align:start position:0%
model so the thing to realize is that
 

00:00:35.440 --> 00:00:37.670 align:start position:0%
model so the thing to realize is that
there's<00:00:35.640><c> always</c><00:00:35.920><c> a</c><00:00:36.200><c> miniseries</c><00:00:37.200><c> when</c><00:00:37.480><c> these</c>

00:00:37.670 --> 00:00:37.680 align:start position:0%
there's always a miniseries when these
 

00:00:37.680 --> 00:00:40.510 align:start position:0%
there's always a miniseries when these
are<00:00:38.480><c> releases</c><00:00:38.879><c> are</c><00:00:39.040><c> made</c><00:00:39.760><c> so</c><00:00:40.120><c> there</c><00:00:40.200><c> are</c><00:00:40.399><c> the</c>

00:00:40.510 --> 00:00:40.520 align:start position:0%
are releases are made so there are the
 

00:00:40.520 --> 00:00:42.950 align:start position:0%
are releases are made so there are the
gpt2<00:00:41.120><c> miniseries</c><00:00:41.840><c> made</c><00:00:42.000><c> up</c><00:00:42.160><c> of</c><00:00:42.320><c> models</c><00:00:42.760><c> at</c>

00:00:42.950 --> 00:00:42.960 align:start position:0%
gpt2 miniseries made up of models at
 

00:00:42.960 --> 00:00:45.029 align:start position:0%
gpt2 miniseries made up of models at
different<00:00:43.320><c> sizes</c><00:00:44.000><c> and</c><00:00:44.120><c> usually</c><00:00:44.440><c> the</c><00:00:44.600><c> biggest</c>

00:00:45.029 --> 00:00:45.039 align:start position:0%
different sizes and usually the biggest
 

00:00:45.039 --> 00:00:46.869 align:start position:0%
different sizes and usually the biggest
model<00:00:45.360><c> is</c><00:00:45.520><c> called</c><00:00:46.000><c> the</c>

00:00:46.869 --> 00:00:46.879 align:start position:0%
model is called the
 

00:00:46.879 --> 00:00:49.189 align:start position:0%
model is called the
gpt2<00:00:47.879><c> but</c><00:00:48.039><c> basically</c><00:00:48.399><c> the</c><00:00:48.480><c> reason</c><00:00:48.719><c> we</c><00:00:48.840><c> do</c><00:00:49.039><c> that</c>

00:00:49.189 --> 00:00:49.199 align:start position:0%
gpt2 but basically the reason we do that
 

00:00:49.199 --> 00:00:51.069 align:start position:0%
gpt2 but basically the reason we do that
is<00:00:49.360><c> because</c><00:00:49.559><c> you</c><00:00:49.680><c> can</c><00:00:49.879><c> put</c><00:00:50.039><c> the</c><00:00:50.160><c> model</c><00:00:50.520><c> sizes</c>

00:00:51.069 --> 00:00:51.079 align:start position:0%
is because you can put the model sizes
 

00:00:51.079 --> 00:00:53.709 align:start position:0%
is because you can put the model sizes
on<00:00:51.320><c> the</c><00:00:51.480><c> x-axis</c><00:00:52.120><c> of</c><00:00:52.280><c> plots</c><00:00:52.640><c> like</c><00:00:52.879><c> this</c><00:00:53.480><c> and</c><00:00:53.600><c> on</c>

00:00:53.709 --> 00:00:53.719 align:start position:0%
on the x-axis of plots like this and on
 

00:00:53.719 --> 00:00:55.590 align:start position:0%
on the x-axis of plots like this and on
the<00:00:53.840><c> Y</c><00:00:54.039><c> AIS</c><00:00:54.280><c> you</c><00:00:54.399><c> put</c><00:00:54.520><c> a</c><00:00:54.640><c> lot</c><00:00:54.760><c> of</c><00:00:55.039><c> uh</c><00:00:55.160><c> Downstream</c>

00:00:55.590 --> 00:00:55.600 align:start position:0%
the Y AIS you put a lot of uh Downstream
 

00:00:55.600 --> 00:00:57.029 align:start position:0%
the Y AIS you put a lot of uh Downstream
metrics<00:00:55.920><c> that</c><00:00:56.000><c> you're</c><00:00:56.160><c> interested</c><00:00:56.480><c> in</c><00:00:56.879><c> like</c>

00:00:57.029 --> 00:00:57.039 align:start position:0%
metrics that you're interested in like
 

00:00:57.039 --> 00:00:58.549 align:start position:0%
metrics that you're interested in like
translation<00:00:57.520><c> summarization</c><00:00:58.280><c> question</c>

00:00:58.549 --> 00:00:58.559 align:start position:0%
translation summarization question
 

00:00:58.559 --> 00:01:00.470 align:start position:0%
translation summarization question
answering<00:00:58.920><c> and</c><00:00:59.039><c> so</c><00:00:59.160><c> on</c><00:00:59.719><c> and</c><00:01:00.000><c> you</c><00:01:00.079><c> can</c><00:01:00.199><c> chart</c>

00:01:00.470 --> 00:01:00.480 align:start position:0%
answering and so on and you can chart
 

00:01:00.480 --> 00:01:03.549 align:start position:0%
answering and so on and you can chart
out<00:01:00.680><c> these</c><00:01:00.879><c> scaling</c><00:01:01.280><c> laws</c><00:01:02.239><c> so</c><00:01:03.000><c> basically</c><00:01:03.440><c> as</c>

00:01:03.549 --> 00:01:03.559 align:start position:0%
out these scaling laws so basically as
 

00:01:03.559 --> 00:01:05.070 align:start position:0%
out these scaling laws so basically as
the<00:01:03.680><c> model</c><00:01:04.000><c> size</c><00:01:04.239><c> increases</c><00:01:04.680><c> you're</c><00:01:04.839><c> getting</c>

00:01:05.070 --> 00:01:05.080 align:start position:0%
the model size increases you're getting
 

00:01:05.080 --> 00:01:07.710 align:start position:0%
the model size increases you're getting
better<00:01:05.280><c> and</c><00:01:05.439><c> better</c><00:01:05.760><c> at</c><00:01:05.920><c> Downstream</c><00:01:06.720><c> metrics</c>

00:01:07.710 --> 00:01:07.720 align:start position:0%
better and better at Downstream metrics
 

00:01:07.720 --> 00:01:09.910 align:start position:0%
better and better at Downstream metrics
and<00:01:07.799><c> so</c><00:01:08.159><c> in</c><00:01:08.320><c> particular</c><00:01:08.680><c> for</c>

00:01:09.910 --> 00:01:09.920 align:start position:0%
and so in particular for
 

00:01:09.920 --> 00:01:12.870 align:start position:0%
and so in particular for
gpt2<00:01:10.920><c> if</c><00:01:11.000><c> we</c><00:01:11.119><c> scroll</c><00:01:11.400><c> down</c><00:01:11.520><c> in</c><00:01:11.799><c> paper</c><00:01:12.759><c> there</c>

00:01:12.870 --> 00:01:12.880 align:start position:0%
gpt2 if we scroll down in paper there
 

00:01:12.880 --> 00:01:15.469 align:start position:0%
gpt2 if we scroll down in paper there
are<00:01:13.119><c> four</c><00:01:13.439><c> models</c><00:01:13.799><c> in</c><00:01:13.920><c> the</c><00:01:14.040><c> gpt2</c><00:01:14.560><c> miniseries</c>

00:01:15.469 --> 00:01:15.479 align:start position:0%
are four models in the gpt2 miniseries
 

00:01:15.479 --> 00:01:18.230 align:start position:0%
are four models in the gpt2 miniseries
starting<00:01:15.960><c> at</c><00:01:16.240><c> 124</c><00:01:17.080><c> million</c><00:01:17.640><c> all</c><00:01:17.799><c> the</c><00:01:17.920><c> way</c><00:01:18.080><c> up</c>

00:01:18.230 --> 00:01:18.240 align:start position:0%
starting at 124 million all the way up
 

00:01:18.240 --> 00:01:22.270 align:start position:0%
starting at 124 million all the way up
to<00:01:19.240><c> 1558</c><00:01:20.280><c> million</c><00:01:21.280><c> now</c><00:01:21.720><c> the</c><00:01:21.840><c> reason</c><00:01:22.119><c> my</c>

00:01:22.270 --> 00:01:22.280 align:start position:0%
to 1558 million now the reason my
 

00:01:22.280 --> 00:01:23.950 align:start position:0%
to 1558 million now the reason my
numbers<00:01:22.840><c> the</c><00:01:22.920><c> way</c><00:01:23.040><c> I</c><00:01:23.119><c> say</c><00:01:23.320><c> them</c><00:01:23.479><c> disagree</c><00:01:23.840><c> with</c>

00:01:23.950 --> 00:01:23.960 align:start position:0%
numbers the way I say them disagree with
 

00:01:23.960 --> 00:01:25.910 align:start position:0%
numbers the way I say them disagree with
this<00:01:24.079><c> table</c><00:01:24.400><c> is</c><00:01:24.520><c> that</c><00:01:24.680><c> this</c><00:01:24.799><c> table</c><00:01:25.040><c> is</c><00:01:25.200><c> wrong</c>

00:01:25.910 --> 00:01:25.920 align:start position:0%
this table is that this table is wrong
 

00:01:25.920 --> 00:01:29.190 align:start position:0%
this table is that this table is wrong
if<00:01:26.040><c> you</c><00:01:26.200><c> actually</c><00:01:26.479><c> go</c><00:01:26.680><c> to</c><00:01:26.960><c> the</c><00:01:27.479><c> uh</c><00:01:28.079><c> gpt2</c><00:01:29.079><c> uh</c>

00:01:29.190 --> 00:01:29.200 align:start position:0%
if you actually go to the uh gpt2 uh
 

00:01:29.200 --> 00:01:32.149 align:start position:0%
if you actually go to the uh gpt2 uh
GitHub<00:01:29.520><c> repo</c><00:01:30.000><c> they</c><00:01:30.119><c> sort</c><00:01:30.280><c> of</c><00:01:30.439><c> say</c><00:01:30.720><c> that</c><00:01:31.400><c> um</c>

00:01:32.149 --> 00:01:32.159 align:start position:0%
GitHub repo they sort of say that um
 

00:01:32.159 --> 00:01:33.749 align:start position:0%
GitHub repo they sort of say that um
there<00:01:32.280><c> was</c><00:01:32.439><c> an</c><00:01:32.600><c> error</c><00:01:32.880><c> in</c><00:01:33.040><c> how</c><00:01:33.200><c> they</c><00:01:33.320><c> added</c><00:01:33.600><c> up</c>

00:01:33.749 --> 00:01:33.759 align:start position:0%
there was an error in how they added up
 

00:01:33.759 --> 00:01:35.310 align:start position:0%
there was an error in how they added up
the<00:01:33.840><c> parameters</c><00:01:34.520><c> but</c><00:01:34.640><c> basically</c><00:01:34.960><c> this</c><00:01:35.079><c> is</c><00:01:35.200><c> the</c>

00:01:35.310 --> 00:01:35.320 align:start position:0%
the parameters but basically this is the
 

00:01:35.320 --> 00:01:38.630 align:start position:0%
the parameters but basically this is the
124<00:01:35.880><c> million</c><00:01:36.159><c> parameter</c><00:01:36.560><c> model</c><00:01:37.240><c> Etc</c><00:01:38.240><c> so</c><00:01:38.520><c> the</c>

00:01:38.630 --> 00:01:38.640 align:start position:0%
124 million parameter model Etc so the
 

00:01:38.640 --> 00:01:40.870 align:start position:0%
124 million parameter model Etc so the
124<00:01:39.119><c> million</c><00:01:39.399><c> parameter</c><00:01:39.840><c> had</c><00:01:40.159><c> 12</c><00:01:40.439><c> layers</c><00:01:40.759><c> in</c>

00:01:40.870 --> 00:01:40.880 align:start position:0%
124 million parameter had 12 layers in
 

00:01:40.880 --> 00:01:44.590 align:start position:0%
124 million parameter had 12 layers in
the<00:01:41.079><c> Transformer</c><00:01:42.079><c> and</c><00:01:42.320><c> it</c><00:01:42.479><c> had</c><00:01:42.759><c> 768</c><00:01:43.759><c> channels</c>

00:01:44.590 --> 00:01:44.600 align:start position:0%
the Transformer and it had 768 channels
 

00:01:44.600 --> 00:01:47.630 align:start position:0%
the Transformer and it had 768 channels
in<00:01:44.880><c> the</c><00:01:45.079><c> Transformer</c><00:01:45.880><c> 768</c><00:01:46.560><c> dimensions</c><00:01:47.560><c> and</c>

00:01:47.630 --> 00:01:47.640 align:start position:0%
in the Transformer 768 dimensions and
 

00:01:47.640 --> 00:01:48.630 align:start position:0%
in the Transformer 768 dimensions and
I'm<00:01:47.759><c> going</c><00:01:47.880><c> to</c><00:01:48.000><c> be</c><00:01:48.119><c> assuming</c><00:01:48.439><c> some</c>

00:01:48.630 --> 00:01:48.640 align:start position:0%
I'm going to be assuming some
 

00:01:48.640 --> 00:01:50.630 align:start position:0%
I'm going to be assuming some
familiarity<00:01:49.320><c> with</c><00:01:49.520><c> what</c><00:01:49.759><c> these</c><00:01:49.920><c> terms</c><00:01:50.200><c> mean</c>

00:01:50.630 --> 00:01:50.640 align:start position:0%
familiarity with what these terms mean
 

00:01:50.640 --> 00:01:51.830 align:start position:0%
familiarity with what these terms mean
because<00:01:50.840><c> I</c><00:01:50.960><c> covered</c><00:01:51.240><c> all</c><00:01:51.360><c> of</c><00:01:51.479><c> this</c><00:01:51.600><c> in</c><00:01:51.680><c> my</c>

00:01:51.830 --> 00:01:51.840 align:start position:0%
because I covered all of this in my
 

00:01:51.840 --> 00:01:54.670 align:start position:0%
because I covered all of this in my
previous<00:01:52.159><c> video</c><00:01:52.560><c> let's</c><00:01:52.719><c> build</c><00:01:53.280><c> gpt2</c><00:01:54.280><c> uh</c><00:01:54.479><c> let's</c>

00:01:54.670 --> 00:01:54.680 align:start position:0%
previous video let's build gpt2 uh let's
 

00:01:54.680 --> 00:01:56.749 align:start position:0%
previous video let's build gpt2 uh let's
build<00:01:54.880><c> GPT</c><00:01:55.280><c> from</c><00:01:55.439><c> scratch</c><00:01:56.039><c> so</c><00:01:56.200><c> I</c><00:01:56.360><c> covered</c><00:01:56.640><c> that</c>

00:01:56.749 --> 00:01:56.759 align:start position:0%
build GPT from scratch so I covered that
 

00:01:56.759 --> 00:01:59.429 align:start position:0%
build GPT from scratch so I covered that
in<00:01:56.840><c> the</c><00:01:57.000><c> previous</c><00:01:57.320><c> video</c><00:01:57.719><c> in</c><00:01:57.880><c> this</c><00:01:58.439><c> playlist</c>

00:01:59.429 --> 00:01:59.439 align:start position:0%
in the previous video in this playlist
 

00:01:59.439 --> 00:02:01.270 align:start position:0%
in the previous video in this playlist
now<00:01:59.960><c> if</c><00:02:00.079><c> we</c><00:02:00.200><c> do</c><00:02:00.439><c> everything</c><00:02:00.759><c> correctly</c><00:02:01.159><c> and</c>

00:02:01.270 --> 00:02:01.280 align:start position:0%
now if we do everything correctly and
 

00:02:01.280 --> 00:02:03.029 align:start position:0%
now if we do everything correctly and
everything<00:02:01.520><c> works</c><00:02:01.759><c> out</c><00:02:02.000><c> well</c><00:02:02.520><c> by</c><00:02:02.680><c> the</c><00:02:02.759><c> end</c><00:02:02.880><c> of</c>

00:02:03.029 --> 00:02:03.039 align:start position:0%
everything works out well by the end of
 

00:02:03.039 --> 00:02:04.550 align:start position:0%
everything works out well by the end of
this<00:02:03.200><c> video</c><00:02:03.479><c> we're</c><00:02:03.600><c> going</c><00:02:03.719><c> to</c><00:02:03.960><c> see</c><00:02:04.240><c> something</c>

00:02:04.550 --> 00:02:04.560 align:start position:0%
this video we're going to see something
 

00:02:04.560 --> 00:02:06.310 align:start position:0%
this video we're going to see something
like<00:02:04.759><c> this</c><00:02:05.439><c> where</c><00:02:05.600><c> we're</c><00:02:05.759><c> looking</c><00:02:06.000><c> at</c><00:02:06.159><c> the</c>

00:02:06.310 --> 00:02:06.320 align:start position:0%
like this where we're looking at the
 

00:02:06.320 --> 00:02:09.990 align:start position:0%
like this where we're looking at the
validation<00:02:06.759><c> loss</c><00:02:07.560><c> which</c><00:02:07.759><c> basically</c><00:02:09.000><c> um</c>

00:02:09.990 --> 00:02:10.000 align:start position:0%
validation loss which basically um
 

00:02:10.000 --> 00:02:11.830 align:start position:0%
validation loss which basically um
measures<00:02:10.560><c> how</c><00:02:10.759><c> good</c><00:02:10.959><c> we</c><00:02:11.080><c> are</c><00:02:11.280><c> at</c><00:02:11.480><c> predicting</c>

00:02:11.830 --> 00:02:11.840 align:start position:0%
measures how good we are at predicting
 

00:02:11.840 --> 00:02:13.869 align:start position:0%
measures how good we are at predicting
the<00:02:12.000><c> next</c><00:02:12.200><c> token</c><00:02:12.560><c> in</c><00:02:12.680><c> a</c><00:02:12.800><c> sequence</c><00:02:13.400><c> on</c><00:02:13.599><c> some</c>

00:02:13.869 --> 00:02:13.879 align:start position:0%
the next token in a sequence on some
 

00:02:13.879 --> 00:02:15.390 align:start position:0%
the next token in a sequence on some
validation<00:02:14.360><c> data</c><00:02:14.680><c> that</c><00:02:14.800><c> the</c><00:02:14.920><c> model</c><00:02:15.160><c> has</c><00:02:15.280><c> not</c>

00:02:15.390 --> 00:02:15.400 align:start position:0%
validation data that the model has not
 

00:02:15.400 --> 00:02:17.750 align:start position:0%
validation data that the model has not
seen<00:02:15.560><c> during</c><00:02:15.879><c> training</c><00:02:16.840><c> and</c><00:02:17.120><c> we</c><00:02:17.200><c> see</c><00:02:17.440><c> that</c><00:02:17.599><c> we</c>

00:02:17.750 --> 00:02:17.760 align:start position:0%
seen during training and we see that we
 

00:02:17.760 --> 00:02:20.390 align:start position:0%
seen during training and we see that we
go<00:02:18.000><c> from</c><00:02:18.519><c> doing</c><00:02:18.840><c> that</c><00:02:19.000><c> task</c><00:02:19.280><c> not</c><00:02:19.480><c> very</c><00:02:19.680><c> well</c>

00:02:20.390 --> 00:02:20.400 align:start position:0%
go from doing that task not very well
 

00:02:20.400 --> 00:02:22.030 align:start position:0%
go from doing that task not very well
because<00:02:20.599><c> we're</c><00:02:20.760><c> initializing</c><00:02:21.239><c> from</c><00:02:21.400><c> scratch</c>

00:02:22.030 --> 00:02:22.040 align:start position:0%
because we're initializing from scratch
 

00:02:22.040 --> 00:02:23.589 align:start position:0%
because we're initializing from scratch
all<00:02:22.200><c> the</c><00:02:22.280><c> way</c><00:02:22.400><c> to</c><00:02:22.560><c> doing</c><00:02:22.800><c> that</c><00:02:23.000><c> task</c><00:02:23.360><c> quite</c>

00:02:23.589 --> 00:02:23.599 align:start position:0%
all the way to doing that task quite
 

00:02:23.599 --> 00:02:26.270 align:start position:0%
all the way to doing that task quite
well<00:02:24.480><c> um</c><00:02:24.760><c> by</c><00:02:24.920><c> the</c><00:02:25.000><c> end</c><00:02:25.120><c> of</c><00:02:25.239><c> the</c><00:02:25.319><c> training</c><00:02:26.120><c> and</c>

00:02:26.270 --> 00:02:26.280 align:start position:0%
well um by the end of the training and
 

00:02:26.280 --> 00:02:28.430 align:start position:0%
well um by the end of the training and
hopefully<00:02:26.560><c> we're</c><00:02:26.680><c> going</c><00:02:26.840><c> to</c><00:02:26.959><c> beat</c><00:02:27.239><c> the</c><00:02:27.440><c> gpt2</c>

00:02:28.430 --> 00:02:28.440 align:start position:0%
hopefully we're going to beat the gpt2
 

00:02:28.440 --> 00:02:30.750 align:start position:0%
hopefully we're going to beat the gpt2
uh<00:02:28.560><c> 124</c><00:02:29.239><c> M</c><00:02:29.560><c> model</c>

00:02:30.750 --> 00:02:30.760 align:start position:0%
uh 124 M model
 

00:02:30.760 --> 00:02:32.910 align:start position:0%
uh 124 M model
now<00:02:31.160><c> previously</c><00:02:31.640><c> when</c><00:02:31.800><c> they</c><00:02:31.920><c> were</c><00:02:32.519><c> working</c><00:02:32.760><c> on</c>

00:02:32.910 --> 00:02:32.920 align:start position:0%
now previously when they were working on
 

00:02:32.920 --> 00:02:35.070 align:start position:0%
now previously when they were working on
this<00:02:33.080><c> this</c><00:02:33.160><c> is</c><00:02:33.319><c> already</c><00:02:33.640><c> 5</c><00:02:33.840><c> years</c><00:02:34.040><c> ago</c><00:02:34.680><c> so</c><00:02:34.959><c> this</c>

00:02:35.070 --> 00:02:35.080 align:start position:0%
this this is already 5 years ago so this
 

00:02:35.080 --> 00:02:36.830 align:start position:0%
this this is already 5 years ago so this
was<00:02:35.280><c> probably</c><00:02:35.800><c> a</c><00:02:36.000><c> fairly</c><00:02:36.360><c> complicated</c>

00:02:36.830 --> 00:02:36.840 align:start position:0%
was probably a fairly complicated
 

00:02:36.840 --> 00:02:38.509 align:start position:0%
was probably a fairly complicated
optimization<00:02:37.400><c> at</c><00:02:37.480><c> the</c><00:02:37.599><c> time</c><00:02:37.800><c> and</c><00:02:37.959><c> the</c><00:02:38.040><c> gpus</c>

00:02:38.509 --> 00:02:38.519 align:start position:0%
optimization at the time and the gpus
 

00:02:38.519 --> 00:02:41.149 align:start position:0%
optimization at the time and the gpus
and<00:02:38.680><c> the</c><00:02:38.800><c> compute</c><00:02:39.239><c> was</c><00:02:39.680><c> a</c><00:02:39.800><c> lot</c><00:02:40.000><c> smaller</c><00:02:40.760><c> today</c>

00:02:41.149 --> 00:02:41.159 align:start position:0%
and the compute was a lot smaller today
 

00:02:41.159 --> 00:02:42.949 align:start position:0%
and the compute was a lot smaller today
you<00:02:41.280><c> can</c><00:02:41.440><c> reproduce</c><00:02:41.879><c> this</c><00:02:42.000><c> model</c><00:02:42.280><c> in</c><00:02:42.560><c> roughly</c>

00:02:42.949 --> 00:02:42.959 align:start position:0%
you can reproduce this model in roughly
 

00:02:42.959 --> 00:02:45.710 align:start position:0%
you can reproduce this model in roughly
an<00:02:43.239><c> hour</c><00:02:44.239><c> or</c><00:02:44.440><c> probably</c><00:02:44.760><c> less</c><00:02:45.080><c> even</c><00:02:45.519><c> and</c><00:02:45.640><c> it</c>

00:02:45.710 --> 00:02:45.720 align:start position:0%
an hour or probably less even and it
 

00:02:45.720 --> 00:02:47.430 align:start position:0%
an hour or probably less even and it
will<00:02:45.920><c> cost</c><00:02:46.080><c> you</c><00:02:46.239><c> about</c><00:02:46.440><c> 10</c><00:02:46.680><c> bucks</c><00:02:47.080><c> if</c><00:02:47.200><c> you</c><00:02:47.280><c> want</c>

00:02:47.430 --> 00:02:47.440 align:start position:0%
will cost you about 10 bucks if you want
 

00:02:47.440 --> 00:02:49.949 align:start position:0%
will cost you about 10 bucks if you want
to<00:02:47.560><c> do</c><00:02:47.720><c> this</c><00:02:47.840><c> on</c><00:02:47.959><c> the</c><00:02:48.120><c> cloud</c><00:02:48.800><c> uh</c><00:02:48.959><c> Cloud</c><00:02:49.280><c> Compu</c><00:02:49.840><c> a</c>

00:02:49.949 --> 00:02:49.959 align:start position:0%
to do this on the cloud uh Cloud Compu a
 

00:02:49.959 --> 00:02:52.350 align:start position:0%
to do this on the cloud uh Cloud Compu a
sort<00:02:50.120><c> of</c><00:02:50.280><c> computer</c><00:02:50.680><c> that</c><00:02:50.760><c> you</c><00:02:50.879><c> can</c><00:02:51.080><c> all</c><00:02:51.480><c> rent</c>

00:02:52.350 --> 00:02:52.360 align:start position:0%
sort of computer that you can all rent
 

00:02:52.360 --> 00:02:54.710 align:start position:0%
sort of computer that you can all rent
and<00:02:52.480><c> if</c><00:02:52.599><c> you</c><00:02:52.720><c> pay</c><00:02:52.879><c> $10</c><00:02:53.440><c> for</c><00:02:53.599><c> that</c><00:02:53.760><c> computer</c><00:02:54.519><c> you</c>

00:02:54.710 --> 00:02:54.720 align:start position:0%
and if you pay $10 for that computer you
 

00:02:54.720 --> 00:02:56.790 align:start position:0%
and if you pay $10 for that computer you
wait<00:02:55.080><c> about</c><00:02:55.319><c> an</c><00:02:55.480><c> hour</c><00:02:55.720><c> or</c><00:02:55.920><c> less</c><00:02:56.480><c> you</c><00:02:56.599><c> can</c>

00:02:56.790 --> 00:02:56.800 align:start position:0%
wait about an hour or less you can
 

00:02:56.800 --> 00:02:58.670 align:start position:0%
wait about an hour or less you can
actually<00:02:57.120><c> achieve</c><00:02:57.400><c> a</c><00:02:57.560><c> model</c><00:02:57.959><c> that</c><00:02:58.080><c> is</c><00:02:58.280><c> as</c><00:02:58.480><c> good</c>

00:02:58.670 --> 00:02:58.680 align:start position:0%
actually achieve a model that is as good
 

00:02:58.680 --> 00:03:02.070 align:start position:0%
actually achieve a model that is as good
as<00:02:59.120><c> this</c><00:02:59.280><c> model</c><00:02:59.519><c> that</c><00:02:59.840><c> open</c><00:03:00.040><c> ey</c><00:03:00.599><c> released</c><00:03:01.599><c> and</c>

00:03:02.070 --> 00:03:02.080 align:start position:0%
as this model that open ey released and
 

00:03:02.080 --> 00:03:04.229 align:start position:0%
as this model that open ey released and
uh<00:03:02.440><c> one</c><00:03:02.560><c> more</c><00:03:02.720><c> thing</c><00:03:02.840><c> to</c><00:03:02.959><c> mention</c><00:03:03.280><c> is</c><00:03:03.920><c> unlike</c>

00:03:04.229 --> 00:03:04.239 align:start position:0%
uh one more thing to mention is unlike
 

00:03:04.239 --> 00:03:06.350 align:start position:0%
uh one more thing to mention is unlike
many<00:03:04.440><c> other</c><00:03:04.640><c> models</c><00:03:05.280><c> open</c><00:03:05.599><c> ey</c><00:03:05.799><c> did</c><00:03:05.959><c> release</c>

00:03:06.350 --> 00:03:06.360 align:start position:0%
many other models open ey did release
 

00:03:06.360 --> 00:03:08.869 align:start position:0%
many other models open ey did release
the<00:03:06.519><c> weights</c><00:03:07.040><c> for</c><00:03:07.319><c> gpt2</c><00:03:08.319><c> so</c><00:03:08.480><c> those</c><00:03:08.640><c> weights</c>

00:03:08.869 --> 00:03:08.879 align:start position:0%
the weights for gpt2 so those weights
 

00:03:08.879 --> 00:03:11.390 align:start position:0%
the weights for gpt2 so those weights
are<00:03:09.000><c> all</c><00:03:09.159><c> available</c><00:03:09.519><c> in</c><00:03:09.640><c> this</c><00:03:10.200><c> repository</c><00:03:11.200><c> but</c>

00:03:11.390 --> 00:03:11.400 align:start position:0%
are all available in this repository but
 

00:03:11.400 --> 00:03:14.190 align:start position:0%
are all available in this repository but
the<00:03:11.519><c> gpt2</c><00:03:12.080><c> paper</c><00:03:12.360><c> is</c><00:03:12.560><c> not</c><00:03:12.879><c> always</c><00:03:13.760><c> as</c><00:03:14.000><c> good</c>

00:03:14.190 --> 00:03:14.200 align:start position:0%
the gpt2 paper is not always as good
 

00:03:14.200 --> 00:03:16.430 align:start position:0%
the gpt2 paper is not always as good
with<00:03:14.360><c> all</c><00:03:14.480><c> of</c><00:03:14.599><c> the</c><00:03:14.720><c> details</c><00:03:15.080><c> of</c><00:03:15.319><c> training</c><00:03:16.239><c> so</c>

00:03:16.430 --> 00:03:16.440 align:start position:0%
with all of the details of training so
 

00:03:16.440 --> 00:03:17.990 align:start position:0%
with all of the details of training so
in<00:03:16.599><c> addition</c><00:03:16.879><c> to</c><00:03:17.000><c> the</c><00:03:17.080><c> gpt2</c><00:03:17.640><c> paper</c><00:03:17.840><c> we're</c>

00:03:17.990 --> 00:03:18.000 align:start position:0%
in addition to the gpt2 paper we're
 

00:03:18.000 --> 00:03:20.470 align:start position:0%
in addition to the gpt2 paper we're
going<00:03:18.120><c> to</c><00:03:18.239><c> be</c><00:03:18.360><c> referencing</c><00:03:18.879><c> the</c><00:03:19.000><c> gpt3</c><00:03:19.760><c> paper</c>

00:03:20.470 --> 00:03:20.480 align:start position:0%
going to be referencing the gpt3 paper
 

00:03:20.480 --> 00:03:22.589 align:start position:0%
going to be referencing the gpt3 paper
which<00:03:20.599><c> is</c><00:03:20.720><c> a</c><00:03:20.879><c> lot</c><00:03:21.080><c> more</c><00:03:21.360><c> Concrete</c><00:03:21.879><c> in</c><00:03:22.159><c> a</c><00:03:22.280><c> lot</c><00:03:22.440><c> of</c>

00:03:22.589 --> 00:03:22.599 align:start position:0%
which is a lot more Concrete in a lot of
 

00:03:22.599 --> 00:03:24.830 align:start position:0%
which is a lot more Concrete in a lot of
the<00:03:23.400><c> hyp</c><00:03:23.720><c> parameters</c><00:03:24.120><c> and</c><00:03:24.319><c> optimization</c>

00:03:24.830 --> 00:03:24.840 align:start position:0%
the hyp parameters and optimization
 

00:03:24.840 --> 00:03:27.910 align:start position:0%
the hyp parameters and optimization
settings<00:03:25.200><c> and</c><00:03:25.360><c> so</c><00:03:25.480><c> on</c><00:03:26.400><c> um</c><00:03:27.400><c> and</c><00:03:27.519><c> it's</c><00:03:27.680><c> not</c><00:03:27.799><c> a</c>

00:03:27.910 --> 00:03:27.920 align:start position:0%
settings and so on um and it's not a
 

00:03:27.920 --> 00:03:29.270 align:start position:0%
settings and so on um and it's not a
huge<00:03:28.159><c> departure</c><00:03:28.519><c> in</c><00:03:28.599><c> the</c><00:03:28.720><c> architecture</c><00:03:29.159><c> from</c>

00:03:29.270 --> 00:03:29.280 align:start position:0%
huge departure in the architecture from
 

00:03:29.280 --> 00:03:31.949 align:start position:0%
huge departure in the architecture from
the<00:03:29.360><c> GPT</c><00:03:29.920><c> 2</c><00:03:30.640><c> uh</c><00:03:30.760><c> version</c><00:03:31.000><c> of</c><00:03:31.120><c> the</c><00:03:31.239><c> model</c><00:03:31.799><c> so</c>

00:03:31.949 --> 00:03:31.959 align:start position:0%
the GPT 2 uh version of the model so
 

00:03:31.959 --> 00:03:33.309 align:start position:0%
the GPT 2 uh version of the model so
we're<00:03:32.080><c> going</c><00:03:32.159><c> to</c><00:03:32.239><c> be</c><00:03:32.319><c> referencing</c><00:03:32.760><c> both</c><00:03:32.920><c> gpt2</c>

00:03:33.309 --> 00:03:33.319 align:start position:0%
we're going to be referencing both gpt2
 

00:03:33.319 --> 00:03:36.910 align:start position:0%
we're going to be referencing both gpt2
and<00:03:33.400><c> gpt3</c><00:03:34.280><c> as</c><00:03:34.400><c> we</c><00:03:34.519><c> try</c><00:03:34.720><c> to</c><00:03:34.879><c> reproduce</c><00:03:35.560><c> gpt2</c><00:03:36.280><c> 124</c>

00:03:36.910 --> 00:03:36.920 align:start position:0%
and gpt3 as we try to reproduce gpt2 124
 

00:03:36.920 --> 00:03:39.990 align:start position:0%
and gpt3 as we try to reproduce gpt2 124
M<00:03:37.640><c> uh</c><00:03:37.799><c> so</c><00:03:38.200><c> let's</c><00:03:38.439><c> go</c><00:03:39.400><c> so</c><00:03:39.519><c> the</c><00:03:39.640><c> first</c><00:03:39.799><c> thing</c><00:03:39.920><c> I</c>

00:03:39.990 --> 00:03:40.000 align:start position:0%
M uh so let's go so the first thing I
 

00:03:40.000 --> 00:03:41.429 align:start position:0%
M uh so let's go so the first thing I
would<00:03:40.120><c> like</c><00:03:40.239><c> to</c><00:03:40.319><c> do</c><00:03:40.480><c> is</c><00:03:40.640><c> actually</c><00:03:40.879><c> start</c><00:03:41.319><c> at</c>

00:03:41.429 --> 00:03:41.439 align:start position:0%
would like to do is actually start at
 

00:03:41.439 --> 00:03:43.470 align:start position:0%
would like to do is actually start at
the<00:03:41.560><c> end</c><00:03:41.879><c> or</c><00:03:42.080><c> at</c><00:03:42.200><c> the</c><00:03:42.360><c> Target</c><00:03:43.080><c> so</c><00:03:43.200><c> in</c><00:03:43.319><c> other</c>

00:03:43.470 --> 00:03:43.480 align:start position:0%
the end or at the Target so in other
 

00:03:43.480 --> 00:03:47.149 align:start position:0%
the end or at the Target so in other
words<00:03:43.760><c> let's</c><00:03:44.000><c> load</c><00:03:44.680><c> the</c><00:03:44.879><c> GPT</c><00:03:45.439><c> to</c><00:03:45.879><c> 124</c><00:03:46.519><c> M</c><00:03:46.720><c> model</c>

00:03:47.149 --> 00:03:47.159 align:start position:0%
words let's load the GPT to 124 M model
 

00:03:47.159 --> 00:03:48.910 align:start position:0%
words let's load the GPT to 124 M model
as<00:03:47.239><c> it</c><00:03:47.360><c> was</c><00:03:47.480><c> released</c><00:03:47.799><c> by</c><00:03:47.920><c> openi</c><00:03:48.599><c> and</c><00:03:48.720><c> maybe</c>

00:03:48.910 --> 00:03:48.920 align:start position:0%
as it was released by openi and maybe
 

00:03:48.920 --> 00:03:50.309 align:start position:0%
as it was released by openi and maybe
take<00:03:49.040><c> it</c><00:03:49.120><c> for</c><00:03:49.239><c> a</c><00:03:49.360><c> spin</c><00:03:49.640><c> let's</c><00:03:49.840><c> sample</c><00:03:50.120><c> some</c>

00:03:50.309 --> 00:03:50.319 align:start position:0%
take it for a spin let's sample some
 

00:03:50.319 --> 00:03:52.550 align:start position:0%
take it for a spin let's sample some
tokens<00:03:50.640><c> from</c><00:03:50.799><c> it</c><00:03:51.720><c> now</c><00:03:51.920><c> the</c><00:03:52.040><c> issue</c><00:03:52.319><c> with</c><00:03:52.439><c> that</c>

00:03:52.550 --> 00:03:52.560 align:start position:0%
tokens from it now the issue with that
 

00:03:52.560 --> 00:03:54.350 align:start position:0%
tokens from it now the issue with that
is<00:03:52.760><c> when</c><00:03:52.840><c> you</c><00:03:52.959><c> go</c><00:03:53.120><c> into</c><00:03:53.280><c> the</c><00:03:53.400><c> code</c><00:03:53.599><c> base</c><00:03:54.200><c> of</c>

00:03:54.350 --> 00:03:54.360 align:start position:0%
is when you go into the code base of
 

00:03:54.360 --> 00:03:56.630 align:start position:0%
is when you go into the code base of
gpt2<00:03:54.879><c> and</c><00:03:54.959><c> you</c><00:03:55.040><c> go</c><00:03:55.159><c> into</c><00:03:55.360><c> the</c><00:03:55.480><c> source</c><00:03:56.400><c> and</c><00:03:56.480><c> you</c>

00:03:56.630 --> 00:03:56.640 align:start position:0%
gpt2 and you go into the source and you
 

00:03:56.640 --> 00:03:58.949 align:start position:0%
gpt2 and you go into the source and you
click<00:03:56.840><c> in</c><00:03:57.000><c> on</c><00:03:57.120><c> the</c><00:03:57.239><c> model.</c><00:03:57.760><c> pi</c><00:03:58.280><c> you'll</c><00:03:58.560><c> realize</c>

00:03:58.949 --> 00:03:58.959 align:start position:0%
click in on the model. pi you'll realize
 

00:03:58.959 --> 00:04:01.509 align:start position:0%
click in on the model. pi you'll realize
that<00:03:59.120><c> actually</c><00:03:59.439><c> this</c><00:03:59.560><c> is</c><00:03:59.879><c> using</c><00:04:00.519><c> tensorflow</c>

00:04:01.509 --> 00:04:01.519 align:start position:0%
that actually this is using tensorflow
 

00:04:01.519 --> 00:04:03.229 align:start position:0%
that actually this is using tensorflow
so<00:04:01.680><c> the</c><00:04:01.799><c> original</c><00:04:02.079><c> gpt2</c><00:04:02.599><c> code</c><00:04:02.879><c> here</c><00:04:03.040><c> was</c>

00:04:03.229 --> 00:04:03.239 align:start position:0%
so the original gpt2 code here was
 

00:04:03.239 --> 00:04:06.750 align:start position:0%
so the original gpt2 code here was
written<00:04:03.560><c> in</c><00:04:03.760><c> tensor</c><00:04:04.120><c> flow</c><00:04:05.000><c> which</c><00:04:05.239><c> is</c>

00:04:06.750 --> 00:04:06.760 align:start position:0%
written in tensor flow which is
 

00:04:06.760 --> 00:04:09.949 align:start position:0%
written in tensor flow which is
um<00:04:07.760><c> you</c><00:04:07.879><c> know</c><00:04:08.319><c> not</c><00:04:08.680><c> let's</c><00:04:08.879><c> just</c><00:04:09.040><c> say</c><00:04:09.480><c> not</c><00:04:09.640><c> used</c>

00:04:09.949 --> 00:04:09.959 align:start position:0%
um you know not let's just say not used
 

00:04:09.959 --> 00:04:12.149 align:start position:0%
um you know not let's just say not used
as<00:04:10.120><c> much</c><00:04:10.319><c> anymore</c><00:04:11.280><c> um</c><00:04:11.480><c> so</c><00:04:11.640><c> we'd</c><00:04:11.799><c> like</c><00:04:11.879><c> to</c><00:04:11.959><c> use</c>

00:04:12.149 --> 00:04:12.159 align:start position:0%
as much anymore um so we'd like to use
 

00:04:12.159 --> 00:04:14.229 align:start position:0%
as much anymore um so we'd like to use
pytorch<00:04:12.840><c> uh</c><00:04:12.959><c> because</c><00:04:13.120><c> it's</c><00:04:13.239><c> a</c><00:04:13.360><c> lot</c><00:04:13.720><c> friendlier</c>

00:04:14.229 --> 00:04:14.239 align:start position:0%
pytorch uh because it's a lot friendlier
 

00:04:14.239 --> 00:04:15.990 align:start position:0%
pytorch uh because it's a lot friendlier
easier<00:04:14.599><c> and</c><00:04:14.879><c> I</c><00:04:15.000><c> just</c><00:04:15.159><c> personally</c><00:04:15.480><c> like</c><00:04:15.640><c> a</c><00:04:15.799><c> lot</c>

00:04:15.990 --> 00:04:16.000 align:start position:0%
easier and I just personally like a lot
 

00:04:16.000 --> 00:04:17.469 align:start position:0%
easier and I just personally like a lot
more<00:04:16.639><c> the</c><00:04:16.759><c> problem</c><00:04:17.000><c> with</c><00:04:17.120><c> that</c><00:04:17.239><c> is</c><00:04:17.359><c> the</c>

00:04:17.469 --> 00:04:17.479 align:start position:0%
more the problem with that is the
 

00:04:17.479 --> 00:04:19.349 align:start position:0%
more the problem with that is the
initial<00:04:17.840><c> code</c><00:04:18.040><c> is</c><00:04:18.160><c> intenser</c><00:04:18.560><c> flow</c><00:04:19.040><c> we'd</c><00:04:19.239><c> like</c>

00:04:19.349 --> 00:04:19.359 align:start position:0%
initial code is intenser flow we'd like
 

00:04:19.359 --> 00:04:21.830 align:start position:0%
initial code is intenser flow we'd like
to<00:04:19.440><c> use</c><00:04:19.600><c> pytorch</c><00:04:20.320><c> so</c><00:04:20.680><c> instead</c><00:04:21.359><c> uh</c><00:04:21.479><c> to</c><00:04:21.600><c> get</c><00:04:21.720><c> the</c>

00:04:21.830 --> 00:04:21.840 align:start position:0%
to use pytorch so instead uh to get the
 

00:04:21.840 --> 00:04:23.230 align:start position:0%
to use pytorch so instead uh to get the
target<00:04:22.199><c> we're</c><00:04:22.320><c> going</c><00:04:22.479><c> to</c><00:04:22.600><c> use</c><00:04:22.759><c> the</c><00:04:22.880><c> hugging</c>

00:04:23.230 --> 00:04:23.240 align:start position:0%
target we're going to use the hugging
 

00:04:23.240 --> 00:04:26.990 align:start position:0%
target we're going to use the hugging
face<00:04:23.560><c> Transformers</c><00:04:24.919><c> um</c><00:04:25.919><c> code</c><00:04:26.479><c> which</c><00:04:26.639><c> I</c><00:04:26.759><c> like</c><00:04:26.919><c> a</c>

00:04:26.990 --> 00:04:27.000 align:start position:0%
face Transformers um code which I like a
 

00:04:27.000 --> 00:04:28.830 align:start position:0%
face Transformers um code which I like a
lot<00:04:27.199><c> more</c><00:04:27.919><c> so</c><00:04:28.160><c> when</c><00:04:28.240><c> you</c><00:04:28.360><c> go</c><00:04:28.479><c> into</c><00:04:28.680><c> the</c>

00:04:28.830 --> 00:04:28.840 align:start position:0%
lot more so when you go into the
 

00:04:28.840 --> 00:04:30.510 align:start position:0%
lot more so when you go into the
Transformers<00:04:29.360><c> source</c><00:04:29.759><c> Transformers</c><00:04:30.199><c> models</c>

00:04:30.510 --> 00:04:30.520 align:start position:0%
Transformers source Transformers models
 

00:04:30.520 --> 00:04:33.870 align:start position:0%
Transformers source Transformers models
gpt2<00:04:31.039><c> modeling</c><00:04:31.400><c> gpt2</c><00:04:32.240><c> Pi</c><00:04:33.240><c> you</c><00:04:33.320><c> will</c><00:04:33.479><c> see</c><00:04:33.720><c> that</c>

00:04:33.870 --> 00:04:33.880 align:start position:0%
gpt2 modeling gpt2 Pi you will see that
 

00:04:33.880 --> 00:04:35.749 align:start position:0%
gpt2 modeling gpt2 Pi you will see that
they<00:04:34.039><c> have</c><00:04:34.160><c> the</c><00:04:34.280><c> gpt2</c><00:04:34.800><c> implementation</c><00:04:35.600><c> of</c>

00:04:35.749 --> 00:04:35.759 align:start position:0%
they have the gpt2 implementation of
 

00:04:35.759 --> 00:04:37.830 align:start position:0%
they have the gpt2 implementation of
that<00:04:35.919><c> Transformer</c><00:04:36.800><c> here</c><00:04:36.960><c> in</c><00:04:37.120><c> this</c>

00:04:37.830 --> 00:04:37.840 align:start position:0%
that Transformer here in this
 

00:04:37.840 --> 00:04:42.909 align:start position:0%
that Transformer here in this
file<00:04:38.880><c> um</c><00:04:40.240><c> and</c><00:04:41.240><c> it's</c><00:04:41.479><c> like</c><00:04:41.720><c> medium</c><00:04:42.080><c> readable</c>

00:04:42.909 --> 00:04:42.919 align:start position:0%
file um and it's like medium readable
 

00:04:42.919 --> 00:04:45.510 align:start position:0%
file um and it's like medium readable
but<00:04:43.080><c> not</c><00:04:43.240><c> fully</c><00:04:43.800><c> readable</c><00:04:44.800><c> um</c><00:04:45.160><c> but</c><00:04:45.280><c> what</c><00:04:45.400><c> it</c>

00:04:45.510 --> 00:04:45.520 align:start position:0%
but not fully readable um but what it
 

00:04:45.520 --> 00:04:47.510 align:start position:0%
but not fully readable um but what it
does<00:04:45.880><c> is</c><00:04:46.039><c> it</c><00:04:46.639><c> did</c><00:04:46.840><c> all</c><00:04:47.000><c> the</c><00:04:47.120><c> work</c><00:04:47.320><c> of</c>

00:04:47.510 --> 00:04:47.520 align:start position:0%
does is it did all the work of
 

00:04:47.520 --> 00:04:50.029 align:start position:0%
does is it did all the work of
converting<00:04:48.039><c> all</c><00:04:48.280><c> those</c><00:04:48.680><c> weights</c><00:04:49.400><c> uh</c><00:04:49.600><c> from</c>

00:04:50.029 --> 00:04:50.039 align:start position:0%
converting all those weights uh from
 

00:04:50.039 --> 00:04:52.270 align:start position:0%
converting all those weights uh from
tensor<00:04:50.400><c> flow</c><00:04:50.759><c> to</c><00:04:51.039><c> pytorch</c><00:04:51.520><c> Friendly</c><00:04:52.080><c> and</c><00:04:52.160><c> so</c>

00:04:52.270 --> 00:04:52.280 align:start position:0%
tensor flow to pytorch Friendly and so
 

00:04:52.280 --> 00:04:54.550 align:start position:0%
tensor flow to pytorch Friendly and so
it's<00:04:52.440><c> much</c><00:04:52.600><c> easier</c><00:04:52.840><c> to</c><00:04:52.960><c> load</c><00:04:53.199><c> and</c><00:04:53.360><c> work</c><00:04:53.560><c> with</c>

00:04:54.550 --> 00:04:54.560 align:start position:0%
it's much easier to load and work with
 

00:04:54.560 --> 00:04:56.749 align:start position:0%
it's much easier to load and work with
so<00:04:54.880><c> in</c><00:04:55.039><c> particular</c><00:04:55.479><c> we</c><00:04:55.600><c> can</c><00:04:55.759><c> look</c><00:04:55.880><c> at</c><00:04:56.039><c> the</c>

00:04:56.749 --> 00:04:56.759 align:start position:0%
so in particular we can look at the
 

00:04:56.759 --> 00:04:59.670 align:start position:0%
so in particular we can look at the
gpt2<00:04:57.759><c> um</c><00:04:58.280><c> model</c><00:04:58.600><c> here</c><00:04:58.880><c> and</c><00:04:59.000><c> we</c><00:04:59.080><c> can</c><00:04:59.199><c> load</c><00:04:59.360><c> it</c>

00:04:59.670 --> 00:04:59.680 align:start position:0%
gpt2 um model here and we can load it
 

00:04:59.680 --> 00:05:01.749 align:start position:0%
gpt2 um model here and we can load it
using<00:04:59.919><c> hugging</c><00:05:00.240><c> face</c><00:05:00.440><c> Transformers</c><00:05:01.440><c> so</c>

00:05:01.749 --> 00:05:01.759 align:start position:0%
using hugging face Transformers so
 

00:05:01.759 --> 00:05:03.830 align:start position:0%
using hugging face Transformers so
swinging<00:05:02.199><c> over</c><00:05:02.600><c> this</c><00:05:02.680><c> is</c><00:05:02.840><c> what</c><00:05:03.000><c> that</c><00:05:03.160><c> looks</c>

00:05:03.830 --> 00:05:03.840 align:start position:0%
swinging over this is what that looks
 

00:05:03.840 --> 00:05:07.710 align:start position:0%
swinging over this is what that looks
like<00:05:04.840><c> from</c><00:05:05.080><c> Transformers</c><00:05:05.720><c> import</c><00:05:06.360><c> the</c><00:05:06.600><c> DP</c><00:05:07.199><c> GT2</c>

00:05:07.710 --> 00:05:07.720 align:start position:0%
like from Transformers import the DP GT2
 

00:05:07.720 --> 00:05:12.230 align:start position:0%
like from Transformers import the DP GT2
LM<00:05:08.039><c> head</c><00:05:08.240><c> model</c><00:05:09.240><c> and</c><00:05:09.639><c> then</c><00:05:10.639><c> from</c><00:05:10.880><c> pre-train</c>

00:05:12.230 --> 00:05:12.240 align:start position:0%
LM head model and then from pre-train
 

00:05:12.240 --> 00:05:15.070 align:start position:0%
LM head model and then from pre-train
gpt2<00:05:13.240><c> uh</c><00:05:13.440><c> now</c><00:05:13.800><c> one</c><00:05:14.039><c> awkward</c><00:05:14.400><c> thing</c><00:05:14.600><c> about</c><00:05:14.840><c> this</c>

00:05:15.070 --> 00:05:15.080 align:start position:0%
gpt2 uh now one awkward thing about this
 

00:05:15.080 --> 00:05:17.150 align:start position:0%
gpt2 uh now one awkward thing about this
is<00:05:15.280><c> that</c><00:05:15.680><c> when</c><00:05:15.800><c> you</c><00:05:15.880><c> do</c><00:05:16.080><c> gpt2</c><00:05:16.720><c> as</c><00:05:16.840><c> the</c><00:05:16.919><c> model</c>

00:05:17.150 --> 00:05:17.160 align:start position:0%
is that when you do gpt2 as the model
 

00:05:17.160 --> 00:05:18.990 align:start position:0%
is that when you do gpt2 as the model
that<00:05:17.280><c> we're</c><00:05:17.400><c> loading</c><00:05:18.120><c> this</c><00:05:18.360><c> actually</c><00:05:18.680><c> is</c><00:05:18.840><c> the</c>

00:05:18.990 --> 00:05:19.000 align:start position:0%
that we're loading this actually is the
 

00:05:19.000 --> 00:05:22.270 align:start position:0%
that we're loading this actually is the
124<00:05:19.919><c> million</c><00:05:20.280><c> parameter</c><00:05:20.759><c> model</c><00:05:21.759><c> if</c><00:05:21.840><c> you</c><00:05:21.960><c> want</c>

00:05:22.270 --> 00:05:22.280 align:start position:0%
124 million parameter model if you want
 

00:05:22.280 --> 00:05:25.710 align:start position:0%
124 million parameter model if you want
the<00:05:22.479><c> actual</c><00:05:22.960><c> the</c><00:05:23.120><c> gpt2</c><00:05:23.919><c> the</c><00:05:24.080><c> 1.5</c><00:05:24.680><c> billion</c><00:05:25.600><c> then</c>

00:05:25.710 --> 00:05:25.720 align:start position:0%
the actual the gpt2 the 1.5 billion then
 

00:05:25.720 --> 00:05:28.870 align:start position:0%
the actual the gpt2 the 1.5 billion then
you<00:05:25.840><c> actually</c><00:05:26.080><c> want</c><00:05:26.160><c> to</c><00:05:26.319><c> do-</c><00:05:27.280><c> XL</c><00:05:28.280><c> so</c><00:05:28.520><c> this</c><00:05:28.639><c> is</c>

00:05:28.870 --> 00:05:28.880 align:start position:0%
you actually want to do- XL so this is
 

00:05:28.880 --> 00:05:32.230 align:start position:0%
you actually want to do- XL so this is
the<00:05:29.240><c> 12</c><00:05:29.800><c> 4</c><00:05:29.919><c> M</c><00:05:30.160><c> our</c><00:05:30.880><c> Target</c><00:05:31.880><c> now</c><00:05:32.000><c> what</c><00:05:32.080><c> we're</c>

00:05:32.230 --> 00:05:32.240 align:start position:0%
the 12 4 M our Target now what we're
 

00:05:32.240 --> 00:05:33.830 align:start position:0%
the 12 4 M our Target now what we're
doing<00:05:32.479><c> is</c><00:05:32.600><c> when</c><00:05:32.759><c> we</c><00:05:32.919><c> actually</c><00:05:33.160><c> get</c><00:05:33.360><c> this</c><00:05:33.600><c> we're</c>

00:05:33.830 --> 00:05:33.840 align:start position:0%
doing is when we actually get this we're
 

00:05:33.840 --> 00:05:37.150 align:start position:0%
doing is when we actually get this we're
initializing<00:05:34.600><c> the</c><00:05:35.039><c> uh</c><00:05:35.240><c> pytorch</c><00:05:35.960><c> NN</c><00:05:36.360><c> module</c><00:05:36.919><c> as</c>

00:05:37.150 --> 00:05:37.160 align:start position:0%
initializing the uh pytorch NN module as
 

00:05:37.160 --> 00:05:38.909 align:start position:0%
initializing the uh pytorch NN module as
defined<00:05:37.560><c> here</c><00:05:37.720><c> in</c><00:05:37.880><c> this</c>

00:05:38.909 --> 00:05:38.919 align:start position:0%
defined here in this
 

00:05:38.919 --> 00:05:41.189 align:start position:0%
defined here in this
class<00:05:39.919><c> from</c><00:05:40.120><c> it</c><00:05:40.319><c> I</c><00:05:40.400><c> want</c><00:05:40.520><c> to</c><00:05:40.680><c> get</c><00:05:40.840><c> just</c><00:05:40.960><c> the</c>

00:05:41.189 --> 00:05:41.199 align:start position:0%
class from it I want to get just the
 

00:05:41.199 --> 00:05:44.189 align:start position:0%
class from it I want to get just the
state<00:05:41.639><c> dict</c><00:05:42.120><c> which</c><00:05:42.240><c> is</c><00:05:42.400><c> just</c><00:05:42.520><c> a</c><00:05:42.720><c> raw</c><00:05:43.360><c> tensors</c>

00:05:44.189 --> 00:05:44.199 align:start position:0%
state dict which is just a raw tensors
 

00:05:44.199 --> 00:05:46.870 align:start position:0%
state dict which is just a raw tensors
so<00:05:44.400><c> we</c><00:05:44.560><c> just</c><00:05:44.800><c> have</c><00:05:45.319><c> um</c><00:05:45.759><c> the</c><00:05:45.880><c> tensors</c><00:05:46.319><c> of</c><00:05:46.479><c> that</c>

00:05:46.870 --> 00:05:46.880 align:start position:0%
so we just have um the tensors of that
 

00:05:46.880 --> 00:05:49.150 align:start position:0%
so we just have um the tensors of that
file<00:05:47.880><c> and</c><00:05:48.000><c> by</c><00:05:48.120><c> the</c><00:05:48.199><c> way</c><00:05:48.400><c> here</c><00:05:48.720><c> this</c><00:05:48.919><c> is</c><00:05:49.039><c> a</c>

00:05:49.150 --> 00:05:49.160 align:start position:0%
file and by the way here this is a
 

00:05:49.160 --> 00:05:51.189 align:start position:0%
file and by the way here this is a
jupyter<00:05:49.479><c> notebook</c><00:05:50.360><c> uh</c><00:05:50.479><c> but</c><00:05:50.600><c> this</c><00:05:50.680><c> is</c><00:05:50.840><c> jupyter</c>

00:05:51.189 --> 00:05:51.199 align:start position:0%
jupyter notebook uh but this is jupyter
 

00:05:51.199 --> 00:05:54.070 align:start position:0%
jupyter notebook uh but this is jupyter
notebook<00:05:51.560><c> running</c><00:05:51.840><c> inside</c><00:05:52.160><c> vs</c><00:05:52.520><c> code</c><00:05:53.240><c> uh</c><00:05:53.360><c> so</c><00:05:53.960><c> I</c>

00:05:54.070 --> 00:05:54.080 align:start position:0%
notebook running inside vs code uh so I
 

00:05:54.080 --> 00:05:55.990 align:start position:0%
notebook running inside vs code uh so I
like<00:05:54.240><c> to</c><00:05:54.560><c> work</c><00:05:54.759><c> with</c><00:05:54.880><c> it</c><00:05:55.039><c> all</c><00:05:55.160><c> in</c><00:05:55.280><c> a</c><00:05:55.440><c> single</c>

00:05:55.990 --> 00:05:56.000 align:start position:0%
like to work with it all in a single
 

00:05:56.000 --> 00:05:57.830 align:start position:0%
like to work with it all in a single
sort<00:05:56.199><c> of</c><00:05:56.319><c> interface</c><00:05:56.720><c> so</c><00:05:56.919><c> I</c><00:05:57.039><c> like</c><00:05:57.160><c> to</c><00:05:57.280><c> use</c><00:05:57.520><c> vs</c>

00:05:57.830 --> 00:05:57.840 align:start position:0%
sort of interface so I like to use vs
 

00:05:57.840 --> 00:06:00.550 align:start position:0%
sort of interface so I like to use vs
code<00:05:58.160><c> so</c><00:05:58.680><c> this</c><00:05:58.800><c> is</c><00:05:59.000><c> the</c><00:05:59.680><c> jupyter</c><00:06:00.120><c> notebook</c>

00:06:00.550 --> 00:06:00.560 align:start position:0%
code so this is the jupyter notebook
 

00:06:00.560 --> 00:06:03.950 align:start position:0%
code so this is the jupyter notebook
extension<00:06:01.120><c> inside</c><00:06:02.000><c> the</c><00:06:02.199><c> es</c>

00:06:03.950 --> 00:06:03.960 align:start position:0%
extension inside the es
 

00:06:03.960 --> 00:06:06.110 align:start position:0%
extension inside the es
code<00:06:04.960><c> so</c><00:06:05.120><c> when</c><00:06:05.199><c> we</c><00:06:05.319><c> get</c><00:06:05.400><c> the</c><00:06:05.520><c> state</c><00:06:05.720><c> dick</c><00:06:06.039><c> this</c>

00:06:06.110 --> 00:06:06.120 align:start position:0%
code so when we get the state dick this
 

00:06:06.120 --> 00:06:09.350 align:start position:0%
code so when we get the state dick this
is<00:06:06.280><c> just</c><00:06:06.440><c> a</c><00:06:06.639><c> dict</c><00:06:07.080><c> so</c><00:06:07.280><c> we</c><00:06:07.400><c> can</c><00:06:08.039><c> print</c><00:06:08.599><c> the</c><00:06:08.880><c> key</c>

00:06:09.350 --> 00:06:09.360 align:start position:0%
is just a dict so we can print the key
 

00:06:09.360 --> 00:06:11.629 align:start position:0%
is just a dict so we can print the key
and<00:06:09.840><c> the</c><00:06:10.039><c> value</c><00:06:10.479><c> which</c><00:06:10.599><c> is</c><00:06:10.759><c> the</c><00:06:10.880><c> tensor</c><00:06:11.440><c> and</c>

00:06:11.629 --> 00:06:11.639 align:start position:0%
and the value which is the tensor and
 

00:06:11.639 --> 00:06:13.629 align:start position:0%
and the value which is the tensor and
let's<00:06:11.840><c> just</c><00:06:11.960><c> look</c><00:06:12.080><c> at</c><00:06:12.199><c> the</c><00:06:12.319><c> shapes</c><00:06:13.319><c> so</c><00:06:13.520><c> these</c>

00:06:13.629 --> 00:06:13.639 align:start position:0%
let's just look at the shapes so these
 

00:06:13.639 --> 00:06:14.909 align:start position:0%
let's just look at the shapes so these
are<00:06:13.759><c> sort</c><00:06:13.960><c> of</c>

00:06:14.909 --> 00:06:14.919 align:start position:0%
are sort of
 

00:06:14.919 --> 00:06:17.670 align:start position:0%
are sort of
the<00:06:15.919><c> uh</c><00:06:16.120><c> different</c><00:06:16.759><c> parameters</c><00:06:17.319><c> inside</c><00:06:17.560><c> the</c>

00:06:17.670 --> 00:06:17.680 align:start position:0%
the uh different parameters inside the
 

00:06:17.680 --> 00:06:22.189 align:start position:0%
the uh different parameters inside the
gbt2<00:06:18.199><c> model</c><00:06:18.960><c> and</c><00:06:19.400><c> their</c><00:06:19.639><c> shape</c><00:06:20.560><c> so</c><00:06:20.880><c> the</c><00:06:21.560><c> W</c>

00:06:22.189 --> 00:06:22.199 align:start position:0%
gbt2 model and their shape so the W
 

00:06:22.199 --> 00:06:25.309 align:start position:0%
gbt2 model and their shape so the W
weight<00:06:22.759><c> for</c><00:06:23.000><c> token</c>

00:06:25.309 --> 00:06:25.319 align:start position:0%
weight for token
 

00:06:25.319 --> 00:06:27.510 align:start position:0%
weight for token
embedding<00:06:26.319><c> is</c><00:06:26.440><c> of</c><00:06:26.680><c> size</c>

00:06:27.510 --> 00:06:27.520 align:start position:0%
embedding is of size
 

00:06:27.520 --> 00:06:30.990 align:start position:0%
embedding is of size
50257<00:06:28.520><c> by</c><00:06:28.680><c> 768</c><00:06:30.039><c> where</c><00:06:30.199><c> this</c><00:06:30.319><c> is</c><00:06:30.479><c> coming</c><00:06:30.759><c> from</c>

00:06:30.990 --> 00:06:31.000 align:start position:0%
50257 by 768 where this is coming from
 

00:06:31.000 --> 00:06:32.510 align:start position:0%
50257 by 768 where this is coming from
is<00:06:31.160><c> that</c><00:06:31.280><c> we</c><00:06:31.400><c> have</c>

00:06:32.510 --> 00:06:32.520 align:start position:0%
is that we have
 

00:06:32.520 --> 00:06:37.390 align:start position:0%
is that we have
50257<00:06:33.520><c> tokens</c><00:06:34.080><c> in</c><00:06:34.199><c> the</c><00:06:34.319><c> gpt2</c><00:06:35.720><c> vocabulary</c><00:06:36.720><c> um</c>

00:06:37.390 --> 00:06:37.400 align:start position:0%
50257 tokens in the gpt2 vocabulary um
 

00:06:37.400 --> 00:06:39.469 align:start position:0%
50257 tokens in the gpt2 vocabulary um
and<00:06:38.039><c> the</c><00:06:38.160><c> tokens</c><00:06:38.599><c> by</c><00:06:38.720><c> the</c><00:06:38.840><c> way</c><00:06:39.199><c> these</c><00:06:39.280><c> are</c>

00:06:39.469 --> 00:06:39.479 align:start position:0%
and the tokens by the way these are
 

00:06:39.479 --> 00:06:40.950 align:start position:0%
and the tokens by the way these are
exactly<00:06:39.800><c> the</c><00:06:39.919><c> tokens</c><00:06:40.240><c> that</c><00:06:40.319><c> we</c><00:06:40.479><c> spoken</c><00:06:40.759><c> about</c>

00:06:40.950 --> 00:06:40.960 align:start position:0%
exactly the tokens that we spoken about
 

00:06:40.960 --> 00:06:43.550 align:start position:0%
exactly the tokens that we spoken about
in<00:06:41.039><c> the</c><00:06:41.199><c> previous</c><00:06:41.560><c> video</c><00:06:42.280><c> on</c><00:06:42.720><c> my</c><00:06:42.880><c> tokenization</c>

00:06:43.550 --> 00:06:43.560 align:start position:0%
in the previous video on my tokenization
 

00:06:43.560 --> 00:06:45.870 align:start position:0%
in the previous video on my tokenization
Series<00:06:44.560><c> so</c><00:06:44.919><c> the</c><00:06:45.080><c> previous</c><00:06:45.360><c> videos</c><00:06:45.720><c> just</c>

00:06:45.870 --> 00:06:45.880 align:start position:0%
Series so the previous videos just
 

00:06:45.880 --> 00:06:47.469 align:start position:0%
Series so the previous videos just
before<00:06:46.080><c> this</c><00:06:46.199><c> I</c><00:06:46.319><c> go</c><00:06:46.479><c> into</c><00:06:46.639><c> a</c><00:06:46.720><c> ton</c><00:06:46.880><c> of</c><00:06:46.960><c> detail</c><00:06:47.240><c> on</c>

00:06:47.469 --> 00:06:47.479 align:start position:0%
before this I go into a ton of detail on
 

00:06:47.479 --> 00:06:49.870 align:start position:0%
before this I go into a ton of detail on
tokenization<00:06:48.479><c> gpt2</c><00:06:49.000><c> tokenizer</c><00:06:49.479><c> happens</c><00:06:49.720><c> to</c>

00:06:49.870 --> 00:06:49.880 align:start position:0%
tokenization gpt2 tokenizer happens to
 

00:06:49.880 --> 00:06:53.110 align:start position:0%
tokenization gpt2 tokenizer happens to
have<00:06:50.360><c> this</c><00:06:50.520><c> many</c><00:06:50.840><c> tokens</c><00:06:51.840><c> for</c><00:06:52.080><c> each</c>

00:06:53.110 --> 00:06:53.120 align:start position:0%
have this many tokens for each
 

00:06:53.120 --> 00:06:56.430 align:start position:0%
have this many tokens for each
token<00:06:54.120><c> we</c><00:06:54.240><c> have</c><00:06:54.440><c> a</c><00:06:54.680><c> 768</c><00:06:55.680><c> dimensional</c>

00:06:56.430 --> 00:06:56.440 align:start position:0%
token we have a 768 dimensional
 

00:06:56.440 --> 00:06:58.469 align:start position:0%
token we have a 768 dimensional
embedding<00:06:57.440><c> that</c><00:06:57.599><c> is</c><00:06:57.759><c> the</c><00:06:57.919><c> distributed</c>

00:06:58.469 --> 00:06:58.479 align:start position:0%
embedding that is the distributed
 

00:06:58.479 --> 00:07:01.390 align:start position:0%
embedding that is the distributed
representation<00:06:59.680><c> that</c><00:06:59.960><c> stands</c><00:07:00.360><c> in</c><00:07:00.879><c> for</c><00:07:01.199><c> that</c>

00:07:01.390 --> 00:07:01.400 align:start position:0%
representation that stands in for that
 

00:07:01.400 --> 00:07:03.550 align:start position:0%
representation that stands in for that
token<00:07:02.199><c> so</c><00:07:02.360><c> each</c><00:07:02.560><c> token</c><00:07:02.800><c> is</c><00:07:02.879><c> a</c><00:07:03.000><c> little</c><00:07:03.160><c> string</c>

00:07:03.550 --> 00:07:03.560 align:start position:0%
token so each token is a little string
 

00:07:03.560 --> 00:07:06.950 align:start position:0%
token so each token is a little string
piece<00:07:04.440><c> and</c><00:07:04.639><c> then</c><00:07:04.960><c> the</c><00:07:05.160><c> 768</c><00:07:05.759><c> numbers</c><00:07:06.240><c> are</c><00:07:06.800><c> the</c>

00:07:06.950 --> 00:07:06.960 align:start position:0%
piece and then the 768 numbers are the
 

00:07:06.960 --> 00:07:08.909 align:start position:0%
piece and then the 768 numbers are the
vector<00:07:07.360><c> that</c><00:07:07.560><c> represents</c><00:07:08.240><c> that</c>

00:07:08.909 --> 00:07:08.919 align:start position:0%
vector that represents that
 

00:07:08.919 --> 00:07:10.909 align:start position:0%
vector that represents that
token<00:07:09.919><c> and</c><00:07:10.039><c> so</c><00:07:10.160><c> this</c><00:07:10.280><c> is</c><00:07:10.360><c> just</c><00:07:10.479><c> our</c><00:07:10.599><c> lookup</c>

00:07:10.909 --> 00:07:10.919 align:start position:0%
token and so this is just our lookup
 

00:07:10.919 --> 00:07:13.309 align:start position:0%
token and so this is just our lookup
table<00:07:11.120><c> for</c><00:07:11.479><c> tokens</c><00:07:12.479><c> and</c><00:07:12.560><c> then</c><00:07:12.800><c> here</c><00:07:13.080><c> we</c><00:07:13.199><c> have</c>

00:07:13.309 --> 00:07:13.319 align:start position:0%
table for tokens and then here we have
 

00:07:13.319 --> 00:07:16.110 align:start position:0%
table for tokens and then here we have
the<00:07:13.400><c> lookup</c><00:07:13.759><c> table</c><00:07:14.080><c> for</c><00:07:14.440><c> the</c><00:07:14.879><c> positions</c><00:07:15.879><c> so</c>

00:07:16.110 --> 00:07:16.120 align:start position:0%
the lookup table for the positions so
 

00:07:16.120 --> 00:07:18.309 align:start position:0%
the lookup table for the positions so
because<00:07:16.599><c> gbt2</c><00:07:17.360><c> has</c><00:07:17.479><c> a</c><00:07:17.639><c> maximum</c><00:07:17.960><c> sequence</c>

00:07:18.309 --> 00:07:18.319 align:start position:0%
because gbt2 has a maximum sequence
 

00:07:18.319 --> 00:07:19.550 align:start position:0%
because gbt2 has a maximum sequence
length<00:07:18.599><c> of</c>

00:07:19.550 --> 00:07:19.560 align:start position:0%
length of
 

00:07:19.560 --> 00:07:23.550 align:start position:0%
length of
1024<00:07:20.560><c> we</c><00:07:20.680><c> have</c><00:07:20.919><c> up</c><00:07:21.039><c> to</c><00:07:21.599><c> 1,24</c><00:07:22.599><c> positions</c><00:07:23.360><c> that</c>

00:07:23.550 --> 00:07:23.560 align:start position:0%
1024 we have up to 1,24 positions that
 

00:07:23.560 --> 00:07:25.589 align:start position:0%
1024 we have up to 1,24 positions that
each<00:07:23.720><c> token</c><00:07:24.039><c> can</c><00:07:24.160><c> be</c><00:07:24.319><c> attending</c><00:07:24.759><c> to</c><00:07:25.160><c> in</c><00:07:25.319><c> the</c>

00:07:25.589 --> 00:07:25.599 align:start position:0%
each token can be attending to in the
 

00:07:25.599 --> 00:07:28.150 align:start position:0%
each token can be attending to in the
past<00:07:26.599><c> and</c><00:07:26.759><c> every</c><00:07:26.960><c> one</c><00:07:27.080><c> of</c><00:07:27.199><c> those</c><00:07:27.400><c> positions</c><00:07:27.840><c> in</c>

00:07:28.150 --> 00:07:28.160 align:start position:0%
past and every one of those positions in
 

00:07:28.160 --> 00:07:31.270 align:start position:0%
past and every one of those positions in
gpd2<00:07:29.160><c> has</c><00:07:29.599><c> a</c><00:07:29.720><c> fixed</c><00:07:30.039><c> Vector</c><00:07:30.440><c> of</c>

00:07:31.270 --> 00:07:31.280 align:start position:0%
gpd2 has a fixed Vector of
 

00:07:31.280 --> 00:07:33.950 align:start position:0%
gpd2 has a fixed Vector of
768<00:07:32.280><c> that</c><00:07:32.440><c> is</c><00:07:32.599><c> learned</c><00:07:33.120><c> by</c>

00:07:33.950 --> 00:07:33.960 align:start position:0%
768 that is learned by
 

00:07:33.960 --> 00:07:36.629 align:start position:0%
768 that is learned by
optimization<00:07:34.960><c> um</c><00:07:35.560><c> and</c><00:07:35.680><c> so</c><00:07:35.960><c> this</c><00:07:36.080><c> is</c><00:07:36.319><c> the</c>

00:07:36.629 --> 00:07:36.639 align:start position:0%
optimization um and so this is the
 

00:07:36.639 --> 00:07:38.670 align:start position:0%
optimization um and so this is the
position<00:07:36.960><c> embedding</c><00:07:37.599><c> and</c><00:07:37.720><c> the</c><00:07:37.840><c> token</c>

00:07:38.670 --> 00:07:38.680 align:start position:0%
position embedding and the token
 

00:07:38.680 --> 00:07:41.230 align:start position:0%
position embedding and the token
embedding<00:07:39.680><c> um</c><00:07:40.199><c> and</c><00:07:40.319><c> then</c><00:07:40.560><c> everything</c><00:07:40.919><c> here</c><00:07:41.080><c> is</c>

00:07:41.230 --> 00:07:41.240 align:start position:0%
embedding um and then everything here is
 

00:07:41.240 --> 00:07:43.270 align:start position:0%
embedding um and then everything here is
just<00:07:41.360><c> the</c><00:07:41.479><c> other</c><00:07:41.919><c> weights</c><00:07:42.440><c> and</c><00:07:42.599><c> biases</c><00:07:43.120><c> and</c>

00:07:43.270 --> 00:07:43.280 align:start position:0%
just the other weights and biases and
 

00:07:43.280 --> 00:07:45.270 align:start position:0%
just the other weights and biases and
everything<00:07:43.560><c> else</c><00:07:43.840><c> of</c><00:07:44.000><c> this</c>

00:07:45.270 --> 00:07:45.280 align:start position:0%
everything else of this
 

00:07:45.280 --> 00:07:47.350 align:start position:0%
everything else of this
Transformer<00:07:46.280><c> so</c><00:07:46.520><c> when</c><00:07:46.639><c> you</c><00:07:46.879><c> just</c><00:07:47.039><c> take</c><00:07:47.199><c> for</c>

00:07:47.350 --> 00:07:47.360 align:start position:0%
Transformer so when you just take for
 

00:07:47.360 --> 00:07:49.270 align:start position:0%
Transformer so when you just take for
example<00:07:47.599><c> the</c><00:07:47.759><c> positional</c><00:07:48.120><c> embeddings</c><00:07:49.080><c> and</c>

00:07:49.270 --> 00:07:49.280 align:start position:0%
example the positional embeddings and
 

00:07:49.280 --> 00:07:50.990 align:start position:0%
example the positional embeddings and
flatten<00:07:49.680><c> it</c><00:07:49.840><c> out</c><00:07:50.080><c> and</c><00:07:50.199><c> take</c><00:07:50.360><c> just</c><00:07:50.479><c> the</c><00:07:50.639><c> 20</c>

00:07:50.990 --> 00:07:51.000 align:start position:0%
flatten it out and take just the 20
 

00:07:51.000 --> 00:07:52.950 align:start position:0%
flatten it out and take just the 20
elements<00:07:51.639><c> you</c><00:07:51.720><c> can</c><00:07:51.840><c> see</c><00:07:52.000><c> that</c><00:07:52.520><c> these</c><00:07:52.639><c> are</c><00:07:52.800><c> just</c>

00:07:52.950 --> 00:07:52.960 align:start position:0%
elements you can see that these are just
 

00:07:52.960 --> 00:07:56.270 align:start position:0%
elements you can see that these are just
the<00:07:53.080><c> parameters</c><00:07:53.560><c> these</c><00:07:53.680><c> are</c><00:07:53.919><c> weights</c><00:07:55.000><c> floats</c>

00:07:56.270 --> 00:07:56.280 align:start position:0%
the parameters these are weights floats
 

00:07:56.280 --> 00:07:59.029 align:start position:0%
the parameters these are weights floats
just<00:07:57.280><c> we</c><00:07:57.400><c> can</c><00:07:57.560><c> take</c><00:07:57.759><c> and</c><00:07:57.879><c> we</c><00:07:57.960><c> can</c><00:07:58.120><c> plot</c><00:07:58.400><c> them</c><00:07:58.879><c> so</c>

00:07:59.029 --> 00:07:59.039 align:start position:0%
just we can take and we can plot them so
 

00:07:59.039 --> 00:08:01.950 align:start position:0%
just we can take and we can plot them so
these<00:07:59.120><c> are</c><00:07:59.240><c> the</c><00:07:59.560><c> position</c><00:08:00.639><c> embeddings</c><00:08:01.639><c> and</c><00:08:01.800><c> we</c>

00:08:01.950 --> 00:08:01.960 align:start position:0%
these are the position embeddings and we
 

00:08:01.960 --> 00:08:03.149 align:start position:0%
these are the position embeddings and we
get<00:08:02.080><c> something</c><00:08:02.360><c> like</c><00:08:02.520><c> this</c><00:08:02.720><c> and</c><00:08:02.800><c> you</c><00:08:02.879><c> can</c><00:08:03.000><c> see</c>

00:08:03.149 --> 00:08:03.159 align:start position:0%
get something like this and you can see
 

00:08:03.159 --> 00:08:04.950 align:start position:0%
get something like this and you can see
that<00:08:03.319><c> this</c><00:08:03.440><c> has</c><00:08:03.599><c> structure</c><00:08:04.599><c> and</c><00:08:04.680><c> it</c><00:08:04.800><c> has</c>

00:08:04.950 --> 00:08:04.960 align:start position:0%
that this has structure and it has
 

00:08:04.960 --> 00:08:07.469 align:start position:0%
that this has structure and it has
structure<00:08:05.639><c> because</c><00:08:06.639><c> what</c><00:08:06.800><c> we</c><00:08:07.039><c> what</c><00:08:07.120><c> we</c><00:08:07.280><c> have</c>

00:08:07.469 --> 00:08:07.479 align:start position:0%
structure because what we what we have
 

00:08:07.479 --> 00:08:10.070 align:start position:0%
structure because what we what we have
here<00:08:07.720><c> really</c><00:08:08.120><c> is</c><00:08:08.800><c> every</c><00:08:09.120><c> Row</c><00:08:09.680><c> in</c><00:08:09.840><c> this</c>

00:08:10.070 --> 00:08:10.080 align:start position:0%
here really is every Row in this
 

00:08:10.080 --> 00:08:12.869 align:start position:0%
here really is every Row in this
visualization<00:08:11.080><c> is</c><00:08:11.199><c> a</c><00:08:11.400><c> different</c><00:08:11.759><c> position</c><00:08:12.680><c> a</c>

00:08:12.869 --> 00:08:12.879 align:start position:0%
visualization is a different position a
 

00:08:12.879 --> 00:08:16.230 align:start position:0%
visualization is a different position a
fixed<00:08:13.319><c> absolute</c><00:08:13.800><c> position</c><00:08:14.639><c> in</c><00:08:15.400><c> um</c><00:08:15.800><c> the</c><00:08:15.960><c> range</c>

00:08:16.230 --> 00:08:16.240 align:start position:0%
fixed absolute position in um the range
 

00:08:16.240 --> 00:08:17.430 align:start position:0%
fixed absolute position in um the range
from<00:08:16.400><c> 0</c><00:08:16.720><c> to</c>

00:08:17.430 --> 00:08:17.440 align:start position:0%
from 0 to
 

00:08:17.440 --> 00:08:19.909 align:start position:0%
from 0 to
1024<00:08:18.440><c> and</c><00:08:18.639><c> each</c><00:08:18.879><c> row</c><00:08:19.199><c> here</c><00:08:19.599><c> is</c><00:08:19.720><c> the</c>

00:08:19.909 --> 00:08:19.919 align:start position:0%
1024 and each row here is the
 

00:08:19.919 --> 00:08:22.990 align:start position:0%
1024 and each row here is the
representation<00:08:20.680><c> of</c><00:08:20.919><c> that</c><00:08:21.560><c> position</c><00:08:22.560><c> and</c><00:08:22.720><c> so</c>

00:08:22.990 --> 00:08:23.000 align:start position:0%
representation of that position and so
 

00:08:23.000 --> 00:08:24.469 align:start position:0%
representation of that position and so
it<00:08:23.199><c> has</c><00:08:23.479><c> structure</c><00:08:24.000><c> because</c><00:08:24.280><c> these</c>

00:08:24.469 --> 00:08:24.479 align:start position:0%
it has structure because these
 

00:08:24.479 --> 00:08:26.629 align:start position:0%
it has structure because these
positional<00:08:24.919><c> embeddings</c><00:08:25.879><c> end</c><00:08:26.080><c> up</c><00:08:26.240><c> learning</c>

00:08:26.629 --> 00:08:26.639 align:start position:0%
positional embeddings end up learning
 

00:08:26.639 --> 00:08:29.629 align:start position:0%
positional embeddings end up learning
these<00:08:26.879><c> sinusoids</c><00:08:27.520><c> and</c><00:08:28.159><c> cosiness</c><00:08:29.159><c> um</c><00:08:29.520><c> that</c>

00:08:29.629 --> 00:08:29.639 align:start position:0%
these sinusoids and cosiness um that
 

00:08:29.639 --> 00:08:31.870 align:start position:0%
these sinusoids and cosiness um that
sort<00:08:29.800><c> of</c><00:08:30.039><c> like</c><00:08:30.879><c> represent</c><00:08:31.319><c> each</c><00:08:31.479><c> of</c><00:08:31.639><c> these</c>

00:08:31.870 --> 00:08:31.880 align:start position:0%
sort of like represent each of these
 

00:08:31.880 --> 00:08:35.110 align:start position:0%
sort of like represent each of these
positions<00:08:32.880><c> and</c><00:08:33.800><c> uh</c><00:08:33.919><c> each</c><00:08:34.120><c> row</c><00:08:34.440><c> here</c><00:08:34.640><c> stands</c><00:08:34.959><c> in</c>

00:08:35.110 --> 00:08:35.120 align:start position:0%
positions and uh each row here stands in
 

00:08:35.120 --> 00:08:36.790 align:start position:0%
positions and uh each row here stands in
for<00:08:35.360><c> that</c><00:08:35.560><c> position</c><00:08:36.000><c> and</c><00:08:36.120><c> is</c><00:08:36.320><c> processed</c><00:08:36.719><c> by</c>

00:08:36.790 --> 00:08:36.800 align:start position:0%
for that position and is processed by
 

00:08:36.800 --> 00:08:38.790 align:start position:0%
for that position and is processed by
the<00:08:36.919><c> Transformer</c><00:08:37.680><c> to</c><00:08:37.880><c> recover</c><00:08:38.320><c> all</c><00:08:38.519><c> the</c>

00:08:38.790 --> 00:08:38.800 align:start position:0%
the Transformer to recover all the
 

00:08:38.800 --> 00:08:41.750 align:start position:0%
the Transformer to recover all the
relative<00:08:39.560><c> positions</c><00:08:40.320><c> and</c><00:08:41.080><c> uh</c><00:08:41.159><c> sort</c><00:08:41.360><c> of</c>

00:08:41.750 --> 00:08:41.760 align:start position:0%
relative positions and uh sort of
 

00:08:41.760 --> 00:08:44.110 align:start position:0%
relative positions and uh sort of
realize<00:08:42.159><c> which</c><00:08:42.320><c> token</c><00:08:42.560><c> is</c><00:08:42.760><c> where</c><00:08:43.479><c> and</c><00:08:43.880><c> um</c>

00:08:44.110 --> 00:08:44.120 align:start position:0%
realize which token is where and um
 

00:08:44.120 --> 00:08:45.269 align:start position:0%
realize which token is where and um
attend<00:08:44.399><c> to</c><00:08:44.560><c> them</c><00:08:44.720><c> depending</c><00:08:45.000><c> on</c><00:08:45.120><c> their</c>

00:08:45.269 --> 00:08:45.279 align:start position:0%
attend to them depending on their
 

00:08:45.279 --> 00:08:47.030 align:start position:0%
attend to them depending on their
position<00:08:45.880><c> not</c><00:08:46.080><c> just</c><00:08:46.240><c> their</c>

00:08:47.030 --> 00:08:47.040 align:start position:0%
position not just their
 

00:08:47.040 --> 00:08:49.670 align:start position:0%
position not just their
content<00:08:48.040><c> so</c><00:08:48.440><c> when</c><00:08:48.560><c> we</c><00:08:48.760><c> actually</c><00:08:49.160><c> just</c><00:08:49.360><c> look</c>

00:08:49.670 --> 00:08:49.680 align:start position:0%
content so when we actually just look
 

00:08:49.680 --> 00:08:53.310 align:start position:0%
content so when we actually just look
into<00:08:50.680><c> an</c><00:08:51.000><c> individual</c><00:08:52.000><c> column</c><00:08:52.600><c> inside</c><00:08:53.040><c> these</c>

00:08:53.310 --> 00:08:53.320 align:start position:0%
into an individual column inside these
 

00:08:53.320 --> 00:08:55.710 align:start position:0%
into an individual column inside these
and<00:08:53.480><c> I</c><00:08:53.600><c> just</c><00:08:53.760><c> grabbed</c><00:08:54.120><c> three</c><00:08:54.360><c> random</c><00:08:54.720><c> columns</c>

00:08:55.710 --> 00:08:55.720 align:start position:0%
and I just grabbed three random columns
 

00:08:55.720 --> 00:08:57.949 align:start position:0%
and I just grabbed three random columns
you'll<00:08:55.920><c> see</c><00:08:56.120><c> that</c><00:08:56.279><c> for</c><00:08:56.480><c> example</c><00:08:57.480><c> here</c><00:08:57.680><c> we</c><00:08:57.760><c> are</c>

00:08:57.949 --> 00:08:57.959 align:start position:0%
you'll see that for example here we are
 

00:08:57.959 --> 00:09:01.550 align:start position:0%
you'll see that for example here we are
focusing<00:08:58.320><c> on</c><00:08:59.160><c> every</c><00:08:59.440><c> every</c><00:09:00.000><c> single</c><00:09:01.000><c> um</c>

00:09:01.550 --> 00:09:01.560 align:start position:0%
focusing on every every single um
 

00:09:01.560 --> 00:09:03.910 align:start position:0%
focusing on every every single um
Channel<00:09:02.560><c> and</c><00:09:02.720><c> we're</c><00:09:02.959><c> looking</c>

00:09:03.910 --> 00:09:03.920 align:start position:0%
Channel and we're looking
 

00:09:03.920 --> 00:09:07.670 align:start position:0%
Channel and we're looking
at<00:09:04.920><c> what</c><00:09:05.560><c> that</c><00:09:05.920><c> channel</c><00:09:06.399><c> is</c><00:09:06.640><c> doing</c><00:09:07.440><c> as</c><00:09:07.560><c> a</c>

00:09:07.670 --> 00:09:07.680 align:start position:0%
at what that channel is doing as a
 

00:09:07.680 --> 00:09:11.389 align:start position:0%
at what that channel is doing as a
function<00:09:08.000><c> of</c><00:09:08.480><c> uh</c><00:09:09.040><c> position</c><00:09:10.040><c> from</c><00:09:10.440><c> one</c><00:09:10.959><c> from</c><00:09:11.160><c> Z</c>

00:09:11.389 --> 00:09:11.399 align:start position:0%
function of uh position from one from Z
 

00:09:11.399 --> 00:09:12.110 align:start position:0%
function of uh position from one from Z
to

00:09:12.110 --> 00:09:12.120 align:start position:0%
to
 

00:09:12.120 --> 00:09:14.030 align:start position:0%
to
1223

00:09:14.030 --> 00:09:14.040 align:start position:0%
1223
 

00:09:14.040 --> 00:09:15.949 align:start position:0%
1223
really<00:09:15.040><c> and</c><00:09:15.160><c> we</c><00:09:15.240><c> can</c><00:09:15.399><c> see</c><00:09:15.519><c> that</c><00:09:15.600><c> some</c><00:09:15.720><c> of</c><00:09:15.839><c> these</c>

00:09:15.949 --> 00:09:15.959 align:start position:0%
really and we can see that some of these
 

00:09:15.959 --> 00:09:17.750 align:start position:0%
really and we can see that some of these
channels<00:09:16.279><c> basically</c><00:09:16.640><c> like</c><00:09:16.839><c> respond</c><00:09:17.279><c> more</c><00:09:17.480><c> or</c>

00:09:17.750 --> 00:09:17.760 align:start position:0%
channels basically like respond more or
 

00:09:17.760 --> 00:09:19.910 align:start position:0%
channels basically like respond more or
less<00:09:18.440><c> to</c><00:09:18.640><c> different</c><00:09:19.000><c> parts</c><00:09:19.240><c> of</c><00:09:19.399><c> the</c><00:09:19.600><c> position</c>

00:09:19.910 --> 00:09:19.920 align:start position:0%
less to different parts of the position
 

00:09:19.920 --> 00:09:22.870 align:start position:0%
less to different parts of the position
Spectrum<00:09:20.600><c> so</c><00:09:20.800><c> this</c><00:09:21.000><c> green</c><00:09:21.360><c> channel</c><00:09:22.360><c> uh</c><00:09:22.640><c> really</c>

00:09:22.870 --> 00:09:22.880 align:start position:0%
Spectrum so this green channel uh really
 

00:09:22.880 --> 00:09:26.949 align:start position:0%
Spectrum so this green channel uh really
likes<00:09:23.120><c> to</c><00:09:23.240><c> fire</c><00:09:23.600><c> for</c><00:09:23.880><c> everything</c><00:09:24.680><c> after</c><00:09:25.959><c> 200</c>

00:09:26.949 --> 00:09:26.959 align:start position:0%
likes to fire for everything after 200
 

00:09:26.959 --> 00:09:30.470 align:start position:0%
likes to fire for everything after 200
uh<00:09:27.079><c> up</c><00:09:27.240><c> to</c><00:09:27.440><c> 800</c><00:09:28.360><c> but</c><00:09:28.600><c> not</c><00:09:28.880><c> less</c><00:09:29.640><c> a</c><00:09:29.760><c> lot</c><00:09:29.959><c> less</c><00:09:30.320><c> and</c>

00:09:30.470 --> 00:09:30.480 align:start position:0%
uh up to 800 but not less a lot less and
 

00:09:30.480 --> 00:09:33.150 align:start position:0%
uh up to 800 but not less a lot less and
has<00:09:30.560><c> a</c><00:09:30.720><c> sharp</c><00:09:31.040><c> drop</c><00:09:31.320><c> off</c><00:09:31.560><c> here</c><00:09:31.720><c> near</c><00:09:32.000><c> zero</c><00:09:32.839><c> so</c>

00:09:33.150 --> 00:09:33.160 align:start position:0%
has a sharp drop off here near zero so
 

00:09:33.160 --> 00:09:34.389 align:start position:0%
has a sharp drop off here near zero so
who<00:09:33.320><c> knows</c><00:09:33.560><c> what</c><00:09:33.680><c> these</c><00:09:33.880><c> embeddings</c><00:09:34.279><c> are</c>

00:09:34.389 --> 00:09:34.399 align:start position:0%
who knows what these embeddings are
 

00:09:34.399 --> 00:09:36.230 align:start position:0%
who knows what these embeddings are
doing<00:09:34.600><c> and</c><00:09:34.800><c> why</c><00:09:34.959><c> they</c><00:09:35.040><c> are</c><00:09:35.240><c> the</c><00:09:35.360><c> way</c><00:09:35.519><c> they</c><00:09:35.640><c> are</c>

00:09:36.230 --> 00:09:36.240 align:start position:0%
doing and why they are the way they are
 

00:09:36.240 --> 00:09:37.509 align:start position:0%
doing and why they are the way they are
you<00:09:36.320><c> can</c><00:09:36.519><c> tell</c><00:09:36.720><c> for</c><00:09:36.880><c> example</c><00:09:37.160><c> that</c><00:09:37.360><c> because</c>

00:09:37.509 --> 00:09:37.519 align:start position:0%
you can tell for example that because
 

00:09:37.519 --> 00:09:38.829 align:start position:0%
you can tell for example that because
they're<00:09:37.680><c> a</c><00:09:37.760><c> bit</c><00:09:37.880><c> more</c><00:09:38.079><c> Jagged</c><00:09:38.440><c> and</c><00:09:38.600><c> they're</c>

00:09:38.829 --> 00:09:38.839 align:start position:0%
they're a bit more Jagged and they're
 

00:09:38.839 --> 00:09:40.470 align:start position:0%
they're a bit more Jagged and they're
kind<00:09:38.920><c> of</c><00:09:39.040><c> noisy</c><00:09:39.720><c> you</c><00:09:39.839><c> can</c><00:09:39.959><c> tell</c><00:09:40.160><c> that</c><00:09:40.360><c> this</c>

00:09:40.470 --> 00:09:40.480 align:start position:0%
kind of noisy you can tell that this
 

00:09:40.480 --> 00:09:43.030 align:start position:0%
kind of noisy you can tell that this
model<00:09:40.760><c> was</c><00:09:40.920><c> not</c><00:09:41.160><c> fully</c><00:09:41.480><c> trained</c><00:09:42.320><c> and</c><00:09:42.640><c> the</c><00:09:42.760><c> more</c>

00:09:43.030 --> 00:09:43.040 align:start position:0%
model was not fully trained and the more
 

00:09:43.040 --> 00:09:45.190 align:start position:0%
model was not fully trained and the more
trained<00:09:43.560><c> this</c><00:09:43.760><c> model</c><00:09:44.200><c> was</c><00:09:44.800><c> the</c><00:09:44.920><c> more</c><00:09:45.079><c> you</c>

00:09:45.190 --> 00:09:45.200 align:start position:0%
trained this model was the more you
 

00:09:45.200 --> 00:09:47.430 align:start position:0%
trained this model was the more you
would<00:09:45.519><c> expect</c><00:09:45.760><c> to</c><00:09:45.920><c> smooth</c><00:09:46.360><c> this</c><00:09:46.480><c> out</c><00:09:47.200><c> and</c><00:09:47.320><c> so</c>

00:09:47.430 --> 00:09:47.440 align:start position:0%
would expect to smooth this out and so
 

00:09:47.440 --> 00:09:48.350 align:start position:0%
would expect to smooth this out and so
this<00:09:47.519><c> is</c><00:09:47.640><c> telling</c><00:09:47.839><c> you</c><00:09:47.959><c> that</c><00:09:48.079><c> this</c><00:09:48.160><c> is</c><00:09:48.279><c> a</c>

00:09:48.350 --> 00:09:48.360 align:start position:0%
this is telling you that this is a
 

00:09:48.360 --> 00:09:51.389 align:start position:0%
this is telling you that this is a
little<00:09:48.519><c> bit</c><00:09:48.640><c> of</c><00:09:48.720><c> an</c><00:09:48.920><c> undertrained</c><00:09:49.720><c> model</c><00:09:50.680><c> um</c>

00:09:51.389 --> 00:09:51.399 align:start position:0%
little bit of an undertrained model um
 

00:09:51.399 --> 00:09:53.630 align:start position:0%
little bit of an undertrained model um
but<00:09:52.200><c> in</c><00:09:52.360><c> principle</c><00:09:52.800><c> actually</c><00:09:53.079><c> these</c><00:09:53.360><c> curves</c>

00:09:53.630 --> 00:09:53.640 align:start position:0%
but in principle actually these curves
 

00:09:53.640 --> 00:09:55.430 align:start position:0%
but in principle actually these curves
don't<00:09:53.800><c> even</c><00:09:53.959><c> have</c><00:09:54.079><c> to</c><00:09:54.160><c> be</c><00:09:54.279><c> smooth</c><00:09:54.760><c> this</c><00:09:54.839><c> should</c>

00:09:55.430 --> 00:09:55.440 align:start position:0%
don't even have to be smooth this should
 

00:09:55.440 --> 00:09:57.630 align:start position:0%
don't even have to be smooth this should
just<00:09:55.560><c> be</c><00:09:55.760><c> totally</c><00:09:56.079><c> random</c><00:09:56.399><c> noise</c><00:09:57.040><c> and</c><00:09:57.200><c> in</c><00:09:57.320><c> fact</c>

00:09:57.630 --> 00:09:57.640 align:start position:0%
just be totally random noise and in fact
 

00:09:57.640 --> 00:09:58.870 align:start position:0%
just be totally random noise and in fact
in<00:09:57.760><c> the</c><00:09:57.880><c> beginning</c><00:09:58.120><c> of</c><00:09:58.200><c> the</c><00:09:58.279><c> optimization</c><00:09:58.800><c> it</c>

00:09:58.870 --> 00:09:58.880 align:start position:0%
in the beginning of the optimization it
 

00:09:58.880 --> 00:10:01.350 align:start position:0%
in the beginning of the optimization it
is<00:09:59.000><c> complete</c><00:09:59.640><c> random</c><00:10:00.000><c> noise</c><00:10:00.519><c> because</c><00:10:01.200><c> this</c>

00:10:01.350 --> 00:10:01.360 align:start position:0%
is complete random noise because this
 

00:10:01.360 --> 00:10:03.190 align:start position:0%
is complete random noise because this
position<00:10:01.640><c> embedding</c><00:10:02.040><c> table</c><00:10:02.440><c> is</c><00:10:02.600><c> initialized</c>

00:10:03.190 --> 00:10:03.200 align:start position:0%
position embedding table is initialized
 

00:10:03.200 --> 00:10:05.030 align:start position:0%
position embedding table is initialized
completely<00:10:03.560><c> at</c><00:10:03.720><c> random</c><00:10:04.480><c> so</c><00:10:04.600><c> in</c><00:10:04.680><c> the</c><00:10:04.800><c> beginning</c>

00:10:05.030 --> 00:10:05.040 align:start position:0%
completely at random so in the beginning
 

00:10:05.040 --> 00:10:07.509 align:start position:0%
completely at random so in the beginning
you<00:10:05.160><c> have</c><00:10:05.839><c> jaggedness</c><00:10:06.839><c> and</c><00:10:07.079><c> the</c><00:10:07.200><c> fact</c><00:10:07.399><c> that</c>

00:10:07.509 --> 00:10:07.519 align:start position:0%
you have jaggedness and the fact that
 

00:10:07.519 --> 00:10:09.030 align:start position:0%
you have jaggedness and the fact that
you<00:10:07.600><c> end</c><00:10:07.760><c> up</c><00:10:07.880><c> with</c><00:10:08.000><c> something</c><00:10:08.240><c> smooth</c><00:10:08.839><c> is</c>

00:10:09.030 --> 00:10:09.040 align:start position:0%
you end up with something smooth is
 

00:10:09.040 --> 00:10:11.790 align:start position:0%
you end up with something smooth is
already<00:10:09.440><c> kind</c><00:10:09.600><c> of</c><00:10:10.240><c> impressive</c><00:10:11.200><c> um</c><00:10:11.480><c> that</c><00:10:11.680><c> that</c>

00:10:11.790 --> 00:10:11.800 align:start position:0%
already kind of impressive um that that
 

00:10:11.800 --> 00:10:13.430 align:start position:0%
already kind of impressive um that that
just<00:10:11.920><c> falls</c><00:10:12.240><c> out</c><00:10:12.360><c> of</c><00:10:12.480><c> the</c><00:10:12.600><c> optimization</c>

00:10:13.430 --> 00:10:13.440 align:start position:0%
just falls out of the optimization
 

00:10:13.440 --> 00:10:14.470 align:start position:0%
just falls out of the optimization
because<00:10:13.560><c> in</c><00:10:13.680><c> principle</c><00:10:14.040><c> you</c><00:10:14.079><c> shouldn't</c><00:10:14.320><c> even</c>

00:10:14.470 --> 00:10:14.480 align:start position:0%
because in principle you shouldn't even
 

00:10:14.480 --> 00:10:16.910 align:start position:0%
because in principle you shouldn't even
be<00:10:14.560><c> able</c><00:10:14.760><c> to</c><00:10:14.880><c> get</c><00:10:15.079><c> any</c><00:10:15.720><c> single</c><00:10:16.279><c> graph</c><00:10:16.640><c> out</c><00:10:16.760><c> of</c>

00:10:16.910 --> 00:10:16.920 align:start position:0%
be able to get any single graph out of
 

00:10:16.920 --> 00:10:18.350 align:start position:0%
be able to get any single graph out of
this<00:10:17.040><c> that</c><00:10:17.160><c> makes</c><00:10:17.399><c> sense</c><00:10:17.920><c> but</c><00:10:18.040><c> we</c><00:10:18.160><c> actually</c>

00:10:18.350 --> 00:10:18.360 align:start position:0%
this that makes sense but we actually
 

00:10:18.360 --> 00:10:19.829 align:start position:0%
this that makes sense but we actually
get<00:10:18.560><c> something</c><00:10:18.880><c> that</c><00:10:19.240><c> looks</c><00:10:19.440><c> a</c><00:10:19.519><c> little</c><00:10:19.680><c> bit</c>

00:10:19.829 --> 00:10:19.839 align:start position:0%
get something that looks a little bit
 

00:10:19.839 --> 00:10:21.310 align:start position:0%
get something that looks a little bit
noisy<00:10:20.360><c> but</c><00:10:20.480><c> for</c><00:10:20.640><c> the</c><00:10:20.720><c> most</c><00:10:20.880><c> part</c><00:10:21.079><c> looks</c>

00:10:21.310 --> 00:10:21.320 align:start position:0%
noisy but for the most part looks
 

00:10:21.320 --> 00:10:24.790 align:start position:0%
noisy but for the most part looks
sinusoidal<00:10:22.560><c> like</c><00:10:23.560><c> um</c><00:10:24.079><c> in</c><00:10:24.200><c> the</c><00:10:24.360><c> original</c>

00:10:24.790 --> 00:10:24.800 align:start position:0%
sinusoidal like um in the original
 

00:10:24.800 --> 00:10:26.590 align:start position:0%
sinusoidal like um in the original
Transformer<00:10:25.800><c> um</c><00:10:26.040><c> in</c><00:10:26.160><c> the</c><00:10:26.279><c> original</c>

00:10:26.590 --> 00:10:26.600 align:start position:0%
Transformer um in the original
 

00:10:26.600 --> 00:10:28.110 align:start position:0%
Transformer um in the original
Transformer<00:10:27.120><c> paper</c><00:10:27.440><c> the</c><00:10:27.560><c> attention</c><00:10:27.880><c> is</c><00:10:28.000><c> all</c>

00:10:28.110 --> 00:10:28.120 align:start position:0%
Transformer paper the attention is all
 

00:10:28.120 --> 00:10:30.230 align:start position:0%
Transformer paper the attention is all
you<00:10:28.240><c> need</c><00:10:28.480><c> paper</c><00:10:29.320><c> the</c><00:10:29.440><c> positional</c><00:10:29.839><c> embeddings</c>

00:10:30.230 --> 00:10:30.240 align:start position:0%
you need paper the positional embeddings
 

00:10:30.240 --> 00:10:32.470 align:start position:0%
you need paper the positional embeddings
are<00:10:30.440><c> actually</c><00:10:31.040><c> initialized</c><00:10:31.680><c> and</c><00:10:31.839><c> fixed</c><00:10:32.240><c> if</c><00:10:32.360><c> I</c>

00:10:32.470 --> 00:10:32.480 align:start position:0%
are actually initialized and fixed if I
 

00:10:32.480 --> 00:10:34.470 align:start position:0%
are actually initialized and fixed if I
remember<00:10:32.760><c> correctly</c><00:10:33.360><c> to</c><00:10:33.600><c> sinusoids</c><00:10:34.279><c> and</c>

00:10:34.470 --> 00:10:34.480 align:start position:0%
remember correctly to sinusoids and
 

00:10:34.480 --> 00:10:37.389 align:start position:0%
remember correctly to sinusoids and
cosiness<00:10:35.440><c> of</c><00:10:35.839><c> uh</c><00:10:35.959><c> different</c><00:10:36.279><c> frequencies</c><00:10:37.279><c> and</c>

00:10:37.389 --> 00:10:37.399 align:start position:0%
cosiness of uh different frequencies and
 

00:10:37.399 --> 00:10:38.710 align:start position:0%
cosiness of uh different frequencies and
that's<00:10:37.519><c> the</c><00:10:37.639><c> positional</c><00:10:38.200><c> coding</c><00:10:38.480><c> and</c><00:10:38.560><c> it's</c>

00:10:38.710 --> 00:10:38.720 align:start position:0%
that's the positional coding and it's
 

00:10:38.720 --> 00:10:40.710 align:start position:0%
that's the positional coding and it's
fixed<00:10:39.360><c> but</c><00:10:39.480><c> in</c><00:10:39.600><c> gpt2</c><00:10:40.240><c> these</c><00:10:40.360><c> are</c><00:10:40.519><c> just</c>

00:10:40.710 --> 00:10:40.720 align:start position:0%
fixed but in gpt2 these are just
 

00:10:40.720 --> 00:10:41.910 align:start position:0%
fixed but in gpt2 these are just
parameters<00:10:41.279><c> and</c><00:10:41.360><c> they're</c><00:10:41.480><c> trained</c><00:10:41.760><c> from</c>

00:10:41.910 --> 00:10:41.920 align:start position:0%
parameters and they're trained from
 

00:10:41.920 --> 00:10:44.710 align:start position:0%
parameters and they're trained from
scratch<00:10:42.839><c> just</c><00:10:43.000><c> like</c><00:10:43.160><c> any</c><00:10:43.320><c> other</c><00:10:43.600><c> parameter</c><00:10:44.600><c> uh</c>

00:10:44.710 --> 00:10:44.720 align:start position:0%
scratch just like any other parameter uh
 

00:10:44.720 --> 00:10:46.790 align:start position:0%
scratch just like any other parameter uh
and<00:10:44.880><c> that</c><00:10:45.000><c> seems</c><00:10:45.279><c> to</c><00:10:45.360><c> work</c><00:10:45.760><c> about</c><00:10:46.079><c> as</c><00:10:46.240><c> well</c><00:10:46.720><c> and</c>

00:10:46.790 --> 00:10:46.800 align:start position:0%
and that seems to work about as well and
 

00:10:46.800 --> 00:10:47.949 align:start position:0%
and that seems to work about as well and
so<00:10:46.920><c> what</c><00:10:47.040><c> they</c><00:10:47.160><c> do</c><00:10:47.279><c> is</c><00:10:47.399><c> they</c><00:10:47.519><c> kind</c><00:10:47.639><c> of</c><00:10:47.760><c> like</c>

00:10:47.949 --> 00:10:47.959 align:start position:0%
so what they do is they kind of like
 

00:10:47.959 --> 00:10:50.430 align:start position:0%
so what they do is they kind of like
recover<00:10:48.600><c> these</c><00:10:48.800><c> sinusoidal</c><00:10:49.560><c> like</c><00:10:49.920><c> features</c>

00:10:50.430 --> 00:10:50.440 align:start position:0%
recover these sinusoidal like features
 

00:10:50.440 --> 00:10:52.190 align:start position:0%
recover these sinusoidal like features
during<00:10:50.680><c> the</c>

00:10:52.190 --> 00:10:52.200 align:start position:0%
during the
 

00:10:52.200 --> 00:10:54.269 align:start position:0%
during the
optimization<00:10:53.200><c> we</c><00:10:53.320><c> can</c><00:10:53.440><c> also</c><00:10:53.639><c> look</c><00:10:53.760><c> at</c><00:10:54.000><c> any</c><00:10:54.160><c> of</c>

00:10:54.269 --> 00:10:54.279 align:start position:0%
optimization we can also look at any of
 

00:10:54.279 --> 00:10:57.470 align:start position:0%
optimization we can also look at any of
the<00:10:54.399><c> other</c><00:10:54.959><c> matrices</c><00:10:55.600><c> here</c><00:10:55.880><c> so</c><00:10:56.880><c> here</c><00:10:57.079><c> I</c><00:10:57.200><c> took</c>

00:10:57.470 --> 00:10:57.480 align:start position:0%
the other matrices here so here I took
 

00:10:57.480 --> 00:11:00.350 align:start position:0%
the other matrices here so here I took
the<00:10:57.800><c> first</c><00:10:58.200><c> layer</c><00:10:59.360><c> of</c><00:10:59.519><c> the</c>

00:11:00.350 --> 00:11:00.360 align:start position:0%
the first layer of the
 

00:11:00.360 --> 00:11:02.790 align:start position:0%
the first layer of the
Transformer<00:11:01.360><c> and</c><00:11:01.720><c> looking</c><00:11:02.040><c> at</c><00:11:02.360><c> like</c><00:11:02.519><c> one</c><00:11:02.639><c> of</c>

00:11:02.790 --> 00:11:02.800 align:start position:0%
Transformer and looking at like one of
 

00:11:02.800 --> 00:11:05.430 align:start position:0%
Transformer and looking at like one of
its<00:11:03.000><c> weights</c><00:11:04.000><c> and</c><00:11:04.200><c> just</c><00:11:04.360><c> the</c><00:11:04.560><c> first</c><00:11:05.000><c> block</c><00:11:05.320><c> of</c>

00:11:05.430 --> 00:11:05.440 align:start position:0%
its weights and just the first block of
 

00:11:05.440 --> 00:11:08.550 align:start position:0%
its weights and just the first block of
300<00:11:05.880><c> by</c><00:11:06.079><c> 300</c><00:11:07.079><c> and</c><00:11:07.360><c> you</c><00:11:07.480><c> see</c><00:11:07.680><c> some</c><00:11:07.959><c> structure</c>

00:11:08.550 --> 00:11:08.560 align:start position:0%
300 by 300 and you see some structure
 

00:11:08.560 --> 00:11:10.829 align:start position:0%
300 by 300 and you see some structure
but<00:11:08.800><c> like</c><00:11:09.440><c> again</c><00:11:09.680><c> like</c><00:11:09.839><c> who</c><00:11:10.000><c> knows</c><00:11:10.399><c> what</c><00:11:10.720><c> any</c>

00:11:10.829 --> 00:11:10.839 align:start position:0%
but like again like who knows what any
 

00:11:10.839 --> 00:11:12.910 align:start position:0%
but like again like who knows what any
of<00:11:11.000><c> this</c><00:11:11.160><c> is</c><00:11:11.720><c> if</c><00:11:11.839><c> you're</c><00:11:12.079><c> into</c><00:11:12.360><c> mechanistic</c>

00:11:12.910 --> 00:11:12.920 align:start position:0%
of this is if you're into mechanistic
 

00:11:12.920 --> 00:11:14.790 align:start position:0%
of this is if you're into mechanistic
interpretability<00:11:13.760><c> you</c><00:11:13.880><c> might</c><00:11:14.120><c> get</c><00:11:14.279><c> a</c><00:11:14.519><c> real</c>

00:11:14.790 --> 00:11:14.800 align:start position:0%
interpretability you might get a real
 

00:11:14.800 --> 00:11:16.389 align:start position:0%
interpretability you might get a real
kick<00:11:15.000><c> out</c><00:11:15.120><c> of</c><00:11:15.279><c> trying</c><00:11:15.480><c> to</c><00:11:15.560><c> figure</c><00:11:15.800><c> out</c><00:11:16.040><c> like</c>

00:11:16.389 --> 00:11:16.399 align:start position:0%
kick out of trying to figure out like
 

00:11:16.399 --> 00:11:18.389 align:start position:0%
kick out of trying to figure out like
what<00:11:16.519><c> is</c><00:11:16.680><c> going</c><00:11:16.839><c> on</c><00:11:17.079><c> what</c><00:11:17.160><c> is</c><00:11:17.320><c> this</c><00:11:17.480><c> structure</c>

00:11:18.389 --> 00:11:18.399 align:start position:0%
what is going on what is this structure
 

00:11:18.399 --> 00:11:19.949 align:start position:0%
what is going on what is this structure
and<00:11:18.519><c> what</c><00:11:18.639><c> does</c><00:11:18.800><c> this</c><00:11:18.880><c> all</c><00:11:19.079><c> mean</c><00:11:19.639><c> but</c><00:11:19.839><c> we're</c>

00:11:19.949 --> 00:11:19.959 align:start position:0%
and what does this all mean but we're
 

00:11:19.959 --> 00:11:21.590 align:start position:0%
and what does this all mean but we're
not<00:11:20.079><c> going</c><00:11:20.200><c> to</c><00:11:20.279><c> be</c><00:11:20.360><c> doing</c><00:11:20.560><c> that</c><00:11:20.680><c> in</c><00:11:20.800><c> this</c><00:11:20.959><c> video</c>

00:11:21.590 --> 00:11:21.600 align:start position:0%
not going to be doing that in this video
 

00:11:21.600 --> 00:11:22.949 align:start position:0%
not going to be doing that in this video
but<00:11:21.720><c> we</c><00:11:21.839><c> definitely</c><00:11:22.160><c> see</c><00:11:22.360><c> that</c><00:11:22.480><c> there's</c><00:11:22.680><c> some</c>

00:11:22.949 --> 00:11:22.959 align:start position:0%
but we definitely see that there's some
 

00:11:22.959 --> 00:11:24.910 align:start position:0%
but we definitely see that there's some
interesting<00:11:23.399><c> structure</c><00:11:24.000><c> and</c><00:11:24.519><c> that's</c><00:11:24.680><c> kind</c><00:11:24.800><c> of</c>

00:11:24.910 --> 00:11:24.920 align:start position:0%
interesting structure and that's kind of
 

00:11:24.920 --> 00:11:26.949 align:start position:0%
interesting structure and that's kind of
cool<00:11:25.760><c> what</c><00:11:25.880><c> we're</c><00:11:26.040><c> mostly</c><00:11:26.360><c> interested</c><00:11:26.639><c> in</c><00:11:26.760><c> is</c>

00:11:26.949 --> 00:11:26.959 align:start position:0%
cool what we're mostly interested in is
 

00:11:26.959 --> 00:11:28.590 align:start position:0%
cool what we're mostly interested in is
we've<00:11:27.120><c> loaded</c><00:11:27.480><c> the</c><00:11:27.600><c> weights</c><00:11:28.040><c> of</c><00:11:28.160><c> this</c><00:11:28.320><c> model</c>

00:11:28.590 --> 00:11:28.600 align:start position:0%
we've loaded the weights of this model
 

00:11:28.600 --> 00:11:30.829 align:start position:0%
we've loaded the weights of this model
that<00:11:28.720><c> was</c><00:11:28.800><c> released</c><00:11:29.079><c> by</c><00:11:29.320><c> open</c><00:11:29.480><c> Ai</c><00:11:30.360><c> and</c><00:11:30.600><c> now</c>

00:11:30.829 --> 00:11:30.839 align:start position:0%
that was released by open Ai and now
 

00:11:30.839 --> 00:11:33.030 align:start position:0%
that was released by open Ai and now
using<00:11:31.200><c> the</c><00:11:31.519><c> hogging</c><00:11:31.839><c> face</c><00:11:32.000><c> Transformers</c><00:11:32.920><c> we</c>

00:11:33.030 --> 00:11:33.040 align:start position:0%
using the hogging face Transformers we
 

00:11:33.040 --> 00:11:35.949 align:start position:0%
using the hogging face Transformers we
can<00:11:33.200><c> not</c><00:11:33.399><c> just</c><00:11:33.720><c> get</c><00:11:33.920><c> all</c><00:11:34.079><c> the</c><00:11:34.279><c> raw</c><00:11:34.839><c> weights</c><00:11:35.800><c> but</c>

00:11:35.949 --> 00:11:35.959 align:start position:0%
can not just get all the raw weights but
 

00:11:35.959 --> 00:11:39.069 align:start position:0%
can not just get all the raw weights but
we<00:11:36.040><c> can</c><00:11:36.279><c> also</c><00:11:36.760><c> get</c><00:11:37.079><c> the</c><00:11:37.720><c> um</c><00:11:38.560><c> what</c><00:11:38.680><c> they</c><00:11:38.839><c> call</c>

00:11:39.069 --> 00:11:39.079 align:start position:0%
we can also get the um what they call
 

00:11:39.079 --> 00:11:42.190 align:start position:0%
we can also get the um what they call
Pipeline<00:11:39.639><c> and</c><00:11:39.839><c> sample</c><00:11:40.200><c> from</c><00:11:40.399><c> it</c><00:11:41.240><c> so</c><00:11:41.959><c> this</c><00:11:42.040><c> is</c>

00:11:42.190 --> 00:11:42.200 align:start position:0%
Pipeline and sample from it so this is
 

00:11:42.200 --> 00:11:44.350 align:start position:0%
Pipeline and sample from it so this is
the<00:11:42.399><c> prefix</c><00:11:43.200><c> hello</c><00:11:43.480><c> I'm</c><00:11:43.560><c> a</c><00:11:43.680><c> language</c><00:11:43.959><c> model</c>

00:11:44.350 --> 00:11:44.360 align:start position:0%
the prefix hello I'm a language model
 

00:11:44.360 --> 00:11:47.710 align:start position:0%
the prefix hello I'm a language model
comma<00:11:45.360><c> and</c><00:11:45.440><c> then</c><00:11:45.560><c> we're</c><00:11:45.839><c> sampling</c><00:11:46.839><c> uh</c><00:11:47.000><c> 30</c>

00:11:47.710 --> 00:11:47.720 align:start position:0%
comma and then we're sampling uh 30
 

00:11:47.720 --> 00:11:50.870 align:start position:0%
comma and then we're sampling uh 30
tokens<00:11:48.720><c> and</c><00:11:48.839><c> we</c><00:11:49.000><c> getting</c><00:11:49.480><c> five</c><00:11:50.079><c> sequences</c><00:11:50.760><c> and</c>

00:11:50.870 --> 00:11:50.880 align:start position:0%
tokens and we getting five sequences and
 

00:11:50.880 --> 00:11:53.870 align:start position:0%
tokens and we getting five sequences and
I<00:11:51.000><c> ran</c><00:11:51.360><c> this</c><00:11:52.000><c> and</c><00:11:52.200><c> this</c><00:11:52.279><c> is</c><00:11:52.440><c> what</c><00:11:52.560><c> it</c><00:11:52.880><c> produced</c>

00:11:53.870 --> 00:11:53.880 align:start position:0%
I ran this and this is what it produced
 

00:11:53.880 --> 00:11:55.710 align:start position:0%
I ran this and this is what it produced
um<00:11:54.399><c> hell</c><00:11:54.800><c> language</c>

00:11:55.710 --> 00:11:55.720 align:start position:0%
um hell language
 

00:11:55.720 --> 00:11:57.590 align:start position:0%
um hell language
model<00:11:56.720><c> but</c><00:11:56.839><c> what</c><00:11:56.959><c> I'm</c><00:11:57.079><c> really</c><00:11:57.240><c> doing</c><00:11:57.480><c> is</c>

00:11:57.590 --> 00:11:57.600 align:start position:0%
model but what I'm really doing is
 

00:11:57.600 --> 00:11:59.670 align:start position:0%
model but what I'm really doing is
making<00:11:57.839><c> a</c><00:11:57.959><c> human</c><00:11:58.200><c> readable</c><00:11:58.680><c> document</c><00:11:59.560><c> there</c>

00:11:59.670 --> 00:11:59.680 align:start position:0%
making a human readable document there
 

00:11:59.680 --> 00:12:01.629 align:start position:0%
making a human readable document there
are<00:11:59.839><c> other</c><00:12:00.040><c> languages</c><00:12:00.480><c> but</c><00:12:00.680><c> those</c><00:12:00.800><c> are</c><00:12:01.440><c> dot</c>

00:12:01.629 --> 00:12:01.639 align:start position:0%
are other languages but those are dot
 

00:12:01.639 --> 00:12:03.470 align:start position:0%
are other languages but those are dot
dot<00:12:01.839><c> dot</c><00:12:02.519><c> so</c><00:12:02.639><c> you</c><00:12:02.720><c> can</c><00:12:02.839><c> read</c><00:12:03.000><c> through</c><00:12:03.240><c> these</c><00:12:03.399><c> if</c>

00:12:03.470 --> 00:12:03.480 align:start position:0%
dot dot so you can read through these if
 

00:12:03.480 --> 00:12:05.190 align:start position:0%
dot dot so you can read through these if
you<00:12:03.639><c> like</c><00:12:03.920><c> but</c><00:12:04.320><c> basically</c><00:12:04.639><c> these</c><00:12:04.760><c> are</c><00:12:05.000><c> five</c>

00:12:05.190 --> 00:12:05.200 align:start position:0%
you like but basically these are five
 

00:12:05.200 --> 00:12:07.550 align:start position:0%
you like but basically these are five
different<00:12:05.440><c> completions</c><00:12:05.920><c> of</c><00:12:06.079><c> the</c><00:12:06.160><c> same</c><00:12:06.560><c> prefix</c>

00:12:07.550 --> 00:12:07.560 align:start position:0%
different completions of the same prefix
 

00:12:07.560 --> 00:12:09.430 align:start position:0%
different completions of the same prefix
from<00:12:07.880><c> this</c><00:12:08.440><c> uh</c><00:12:08.560><c> gbt</c>

00:12:09.430 --> 00:12:09.440 align:start position:0%
from this uh gbt
 

00:12:09.440 --> 00:12:13.030 align:start position:0%
from this uh gbt
2124m<00:12:10.440><c> now</c><00:12:11.320><c> uh</c><00:12:11.560><c> if</c><00:12:11.680><c> I</c><00:12:11.920><c> go</c><00:12:12.200><c> here</c><00:12:12.519><c> I</c><00:12:12.639><c> took</c><00:12:12.839><c> this</c>

00:12:13.030 --> 00:12:13.040 align:start position:0%
2124m now uh if I go here I took this
 

00:12:13.040 --> 00:12:16.829 align:start position:0%
2124m now uh if I go here I took this
example<00:12:13.519><c> from</c><00:12:14.639><c> here</c><00:12:15.639><c> and</c><00:12:15.920><c> sadly</c><00:12:16.519><c> even</c><00:12:16.720><c> though</c>

00:12:16.829 --> 00:12:16.839 align:start position:0%
example from here and sadly even though
 

00:12:16.839 --> 00:12:18.750 align:start position:0%
example from here and sadly even though
we<00:12:16.959><c> are</c><00:12:17.079><c> fixing</c><00:12:17.399><c> the</c><00:12:17.519><c> seed</c><00:12:18.199><c> we</c><00:12:18.320><c> are</c><00:12:18.440><c> getting</c>

00:12:18.750 --> 00:12:18.760 align:start position:0%
we are fixing the seed we are getting
 

00:12:18.760 --> 00:12:21.629 align:start position:0%
we are fixing the seed we are getting
different<00:12:19.120><c> Generations</c><00:12:20.120><c> from</c><00:12:20.279><c> the</c><00:12:20.639><c> snippet</c>

00:12:21.629 --> 00:12:21.639 align:start position:0%
different Generations from the snippet
 

00:12:21.639 --> 00:12:24.189 align:start position:0%
different Generations from the snippet
than<00:12:22.040><c> what</c><00:12:22.440><c> they</c><00:12:22.639><c> got</c><00:12:23.320><c> so</c><00:12:23.639><c> presumably</c><00:12:24.079><c> the</c>

00:12:24.189 --> 00:12:24.199 align:start position:0%
than what they got so presumably the
 

00:12:24.199 --> 00:12:28.310 align:start position:0%
than what they got so presumably the
code<00:12:24.560><c> changed</c><00:12:25.560><c> um</c><00:12:26.600><c> but</c><00:12:27.600><c> what</c><00:12:27.760><c> we</c><00:12:27.880><c> see</c><00:12:28.160><c> though</c>

00:12:28.310 --> 00:12:28.320 align:start position:0%
code changed um but what we see though
 

00:12:28.320 --> 00:12:29.870 align:start position:0%
code changed um but what we see though
at<00:12:28.440><c> this</c><00:12:28.600><c> stage</c><00:12:28.880><c> that's</c><00:12:29.199><c> important</c><00:12:29.600><c> is</c><00:12:29.760><c> that</c>

00:12:29.870 --> 00:12:29.880 align:start position:0%
at this stage that's important is that
 

00:12:29.880 --> 00:12:32.389 align:start position:0%
at this stage that's important is that
we<00:12:30.000><c> are</c><00:12:30.120><c> getting</c><00:12:30.399><c> coherent</c><00:12:30.800><c> text</c><00:12:31.560><c> so</c><00:12:32.199><c> we've</c>

00:12:32.389 --> 00:12:32.399 align:start position:0%
we are getting coherent text so we've
 

00:12:32.399 --> 00:12:34.150 align:start position:0%
we are getting coherent text so we've
loaded<00:12:32.760><c> the</c><00:12:32.880><c> model</c><00:12:33.279><c> successfully</c><00:12:33.920><c> we</c><00:12:34.040><c> can</c>

00:12:34.150 --> 00:12:34.160 align:start position:0%
loaded the model successfully we can
 

00:12:34.160 --> 00:12:36.470 align:start position:0%
loaded the model successfully we can
look<00:12:34.279><c> at</c><00:12:34.399><c> all</c><00:12:34.560><c> its</c><00:12:34.720><c> parameters</c><00:12:35.680><c> and</c><00:12:35.880><c> the</c><00:12:36.079><c> keys</c>

00:12:36.470 --> 00:12:36.480 align:start position:0%
look at all its parameters and the keys
 

00:12:36.480 --> 00:12:39.310 align:start position:0%
look at all its parameters and the keys
tell<00:12:36.720><c> us</c><00:12:37.160><c> where</c><00:12:37.680><c> in</c><00:12:37.800><c> the</c><00:12:37.959><c> model</c><00:12:38.440><c> these</c><00:12:38.639><c> come</c>

00:12:39.310 --> 00:12:39.320 align:start position:0%
tell us where in the model these come
 

00:12:39.320 --> 00:12:41.629 align:start position:0%
tell us where in the model these come
from<00:12:40.320><c> and</c><00:12:40.600><c> we</c><00:12:40.720><c> want</c><00:12:40.839><c> to</c><00:12:41.040><c> actually</c><00:12:41.240><c> write</c><00:12:41.519><c> our</c>

00:12:41.629 --> 00:12:41.639 align:start position:0%
from and we want to actually write our
 

00:12:41.639 --> 00:12:43.590 align:start position:0%
from and we want to actually write our
own<00:12:41.800><c> gpt2</c><00:12:42.399><c> class</c><00:12:42.680><c> so</c><00:12:42.839><c> that</c><00:12:42.959><c> we</c><00:12:43.040><c> have</c><00:12:43.160><c> full</c>

00:12:43.590 --> 00:12:43.600 align:start position:0%
own gpt2 class so that we have full
 

00:12:43.600 --> 00:12:44.829 align:start position:0%
own gpt2 class so that we have full
understanding<00:12:43.800><c> of</c><00:12:43.920><c> what's</c><00:12:44.079><c> happening</c><00:12:44.519><c> there</c>

00:12:44.829 --> 00:12:44.839 align:start position:0%
understanding of what's happening there
 

00:12:44.839 --> 00:12:46.030 align:start position:0%
understanding of what's happening there
we<00:12:44.959><c> don't</c><00:12:45.160><c> want</c><00:12:45.240><c> to</c><00:12:45.320><c> be</c><00:12:45.440><c> working</c><00:12:45.760><c> with</c>

00:12:46.030 --> 00:12:46.040 align:start position:0%
we don't want to be working with
 

00:12:46.040 --> 00:12:49.269 align:start position:0%
we don't want to be working with
something<00:12:46.560><c> like</c><00:12:47.480><c> uh</c><00:12:47.639><c> the</c><00:12:47.760><c> modeling</c><00:12:48.079><c> gpt2</c><00:12:48.800><c> Pi</c>

00:12:49.269 --> 00:12:49.279 align:start position:0%
something like uh the modeling gpt2 Pi
 

00:12:49.279 --> 00:12:50.430 align:start position:0%
something like uh the modeling gpt2 Pi
because<00:12:49.440><c> it's</c><00:12:49.600><c> just</c><00:12:49.720><c> too</c><00:12:49.880><c> complicated</c><00:12:50.360><c> we</c>

00:12:50.430 --> 00:12:50.440 align:start position:0%
because it's just too complicated we
 

00:12:50.440 --> 00:12:51.550 align:start position:0%
because it's just too complicated we
want<00:12:50.560><c> to</c><00:12:50.680><c> write</c><00:12:50.880><c> this</c><00:12:51.000><c> from</c><00:12:51.160><c> scratch</c>

00:12:51.550 --> 00:12:51.560 align:start position:0%
want to write this from scratch
 

00:12:51.560 --> 00:12:53.030 align:start position:0%
want to write this from scratch
ourselves<00:12:52.440><c> so</c><00:12:52.600><c> we're</c><00:12:52.720><c> going</c><00:12:52.839><c> to</c><00:12:52.920><c> be</c>

00:12:53.030 --> 00:12:53.040 align:start position:0%
ourselves so we're going to be
 

00:12:53.040 --> 00:12:54.829 align:start position:0%
ourselves so we're going to be
implementing<00:12:53.480><c> the</c><00:12:53.600><c> GPT</c><00:12:54.000><c> model</c><00:12:54.360><c> here</c><00:12:54.639><c> in</c>

00:12:54.829 --> 00:12:54.839 align:start position:0%
implementing the GPT model here in
 

00:12:54.839 --> 00:12:57.509 align:start position:0%
implementing the GPT model here in
parallel<00:12:55.800><c> and</c><00:12:55.920><c> as</c><00:12:56.040><c> our</c><00:12:56.240><c> first</c><00:12:56.560><c> task</c><00:12:57.199><c> let's</c>

00:12:57.509 --> 00:12:57.519 align:start position:0%
parallel and as our first task let's
 

00:12:57.519 --> 00:13:01.910 align:start position:0%
parallel and as our first task let's
load<00:12:58.360><c> the</c><00:12:58.480><c> gpt2</c><00:12:59.360><c> 124</c><00:12:59.959><c> M</c><00:13:00.519><c> into</c><00:13:01.360><c> the</c><00:13:01.560><c> class</c><00:13:01.839><c> that</c>

00:13:01.910 --> 00:13:01.920 align:start position:0%
load the gpt2 124 M into the class that
 

00:13:01.920 --> 00:13:04.430 align:start position:0%
load the gpt2 124 M into the class that
we're<00:13:02.120><c> going</c><00:13:02.240><c> to</c><00:13:02.399><c> develop</c><00:13:02.839><c> here</c><00:13:03.199><c> from</c><00:13:03.440><c> scratch</c>

00:13:04.430 --> 00:13:04.440 align:start position:0%
we're going to develop here from scratch
 

00:13:04.440 --> 00:13:06.590 align:start position:0%
we're going to develop here from scratch
that's<00:13:04.600><c> going</c><00:13:04.720><c> to</c><00:13:04.839><c> give</c><00:13:04.959><c> us</c><00:13:05.240><c> confidence</c><00:13:06.240><c> that</c>

00:13:06.590 --> 00:13:06.600 align:start position:0%
that's going to give us confidence that
 

00:13:06.600 --> 00:13:08.750 align:start position:0%
that's going to give us confidence that
we<00:13:06.720><c> can</c><00:13:06.880><c> load</c><00:13:07.199><c> the</c><00:13:07.279><c> open</c><00:13:07.600><c> ey</c><00:13:07.800><c> model</c><00:13:08.600><c> and</c>

00:13:08.750 --> 00:13:08.760 align:start position:0%
we can load the open ey model and
 

00:13:08.760 --> 00:13:10.910 align:start position:0%
we can load the open ey model and
therefore<00:13:09.320><c> there's</c><00:13:09.519><c> a</c><00:13:09.680><c> setting</c><00:13:10.000><c> of</c><00:13:10.160><c> Weights</c>

00:13:10.910 --> 00:13:10.920 align:start position:0%
therefore there's a setting of Weights
 

00:13:10.920 --> 00:13:13.509 align:start position:0%
therefore there's a setting of Weights
that<00:13:11.160><c> exactly</c><00:13:11.600><c> is</c><00:13:11.800><c> the</c><00:13:11.920><c> 124</c><00:13:12.480><c> model</c><00:13:13.279><c> but</c><00:13:13.399><c> then</c>

00:13:13.509 --> 00:13:13.519 align:start position:0%
that exactly is the 124 model but then
 

00:13:13.519 --> 00:13:14.430 align:start position:0%
that exactly is the 124 model but then
of<00:13:13.639><c> course</c><00:13:13.800><c> what</c><00:13:13.880><c> we're</c><00:13:14.000><c> going</c><00:13:14.079><c> to</c><00:13:14.199><c> do</c><00:13:14.360><c> is</c>

00:13:14.430 --> 00:13:14.440 align:start position:0%
of course what we're going to do is
 

00:13:14.440 --> 00:13:15.710 align:start position:0%
of course what we're going to do is
we're<00:13:14.560><c> going</c><00:13:14.639><c> to</c><00:13:14.760><c> initialize</c><00:13:15.160><c> the</c><00:13:15.279><c> model</c><00:13:15.519><c> from</c>

00:13:15.710 --> 00:13:15.720 align:start position:0%
we're going to initialize the model from
 

00:13:15.720 --> 00:13:18.509 align:start position:0%
we're going to initialize the model from
scratch<00:13:16.160><c> instead</c><00:13:17.000><c> and</c><00:13:17.199><c> try</c><00:13:17.440><c> try</c><00:13:17.600><c> to</c><00:13:17.720><c> train</c><00:13:18.000><c> it</c>

00:13:18.509 --> 00:13:18.519 align:start position:0%
scratch instead and try try to train it
 

00:13:18.519 --> 00:13:20.949 align:start position:0%
scratch instead and try try to train it
ourselves<00:13:19.519><c> um</c><00:13:20.000><c> on</c><00:13:20.240><c> a</c><00:13:20.360><c> bunch</c><00:13:20.519><c> of</c><00:13:20.639><c> documents</c>

00:13:20.949 --> 00:13:20.959 align:start position:0%
ourselves um on a bunch of documents
 

00:13:20.959 --> 00:13:22.430 align:start position:0%
ourselves um on a bunch of documents
that<00:13:21.040><c> we're</c><00:13:21.160><c> going</c><00:13:21.240><c> to</c><00:13:21.399><c> get</c><00:13:22.120><c> and</c><00:13:22.199><c> we're</c><00:13:22.360><c> going</c>

00:13:22.430 --> 00:13:22.440 align:start position:0%
that we're going to get and we're going
 

00:13:22.440 --> 00:13:24.509 align:start position:0%
that we're going to get and we're going
to<00:13:22.560><c> try</c><00:13:22.720><c> to</c><00:13:22.880><c> surpass</c><00:13:23.360><c> that</c><00:13:23.560><c> model</c><00:13:24.240><c> so</c><00:13:24.360><c> we're</c>

00:13:24.509 --> 00:13:24.519 align:start position:0%
to try to surpass that model so we're
 

00:13:24.519 --> 00:13:25.750 align:start position:0%
to try to surpass that model so we're
going<00:13:24.600><c> to</c><00:13:24.760><c> get</c><00:13:25.000><c> different</c><00:13:25.279><c> weights</c><00:13:25.600><c> and</c>

00:13:25.750 --> 00:13:25.760 align:start position:0%
going to get different weights and
 

00:13:25.760 --> 00:13:27.230 align:start position:0%
going to get different weights and
everything's<00:13:26.040><c> going</c><00:13:26.160><c> to</c><00:13:26.240><c> look</c><00:13:26.440><c> different</c>

00:13:27.230 --> 00:13:27.240 align:start position:0%
everything's going to look different
 

00:13:27.240 --> 00:13:29.629 align:start position:0%
everything's going to look different
hopefully<00:13:27.600><c> better</c><00:13:27.880><c> even</c><00:13:28.839><c> um</c>

00:13:29.629 --> 00:13:29.639 align:start position:0%
hopefully better even um
 

00:13:29.639 --> 00:13:31.150 align:start position:0%
hopefully better even um
but<00:13:30.240><c> uh</c><00:13:30.320><c> we're</c><00:13:30.440><c> going</c><00:13:30.560><c> to</c><00:13:30.720><c> have</c><00:13:30.839><c> a</c><00:13:30.920><c> lot</c><00:13:31.040><c> of</c>

00:13:31.150 --> 00:13:31.160 align:start position:0%
but uh we're going to have a lot of
 

00:13:31.160 --> 00:13:32.550 align:start position:0%
but uh we're going to have a lot of
confidence<00:13:31.600><c> that</c><00:13:31.800><c> because</c><00:13:32.040><c> we</c><00:13:32.120><c> can</c><00:13:32.279><c> load</c><00:13:32.440><c> the</c>

00:13:32.550 --> 00:13:32.560 align:start position:0%
confidence that because we can load the
 

00:13:32.560 --> 00:13:34.550 align:start position:0%
confidence that because we can load the
openi<00:13:32.959><c> model</c><00:13:33.519><c> we</c><00:13:33.639><c> are</c><00:13:33.760><c> in</c><00:13:33.880><c> the</c><00:13:34.000><c> same</c><00:13:34.240><c> model</c>

00:13:34.550 --> 00:13:34.560 align:start position:0%
openi model we are in the same model
 

00:13:34.560 --> 00:13:36.550 align:start position:0%
openi model we are in the same model
family<00:13:34.880><c> and</c><00:13:35.040><c> model</c><00:13:35.360><c> class</c><00:13:36.040><c> and</c><00:13:36.199><c> we</c><00:13:36.320><c> just</c><00:13:36.480><c> have</c>

00:13:36.550 --> 00:13:36.560 align:start position:0%
family and model class and we just have
 

00:13:36.560 --> 00:13:37.949 align:start position:0%
family and model class and we just have
to<00:13:36.720><c> ReDiscover</c><00:13:37.279><c> a</c><00:13:37.360><c> good</c><00:13:37.480><c> setting</c><00:13:37.720><c> of</c><00:13:37.839><c> the</c>

00:13:37.949 --> 00:13:37.959 align:start position:0%
to ReDiscover a good setting of the
 

00:13:37.959 --> 00:13:41.310 align:start position:0%
to ReDiscover a good setting of the
weights<00:13:38.600><c> uh</c><00:13:38.720><c> but</c><00:13:38.839><c> from</c><00:13:39.040><c> scratch</c><00:13:40.040><c> so</c><00:13:40.639><c> let's</c><00:13:40.920><c> now</c>

00:13:41.310 --> 00:13:41.320 align:start position:0%
weights uh but from scratch so let's now
 

00:13:41.320 --> 00:13:43.910 align:start position:0%
weights uh but from scratch so let's now
write<00:13:41.959><c> the</c><00:13:42.079><c> gbt2</c><00:13:42.639><c> model</c><00:13:43.160><c> and</c><00:13:43.320><c> let's</c><00:13:43.519><c> load</c><00:13:43.800><c> the</c>

00:13:43.910 --> 00:13:43.920 align:start position:0%
write the gbt2 model and let's load the
 

00:13:43.920 --> 00:13:45.750 align:start position:0%
write the gbt2 model and let's load the
weights<00:13:44.560><c> and</c><00:13:44.680><c> make</c><00:13:44.800><c> sure</c><00:13:45.079><c> that</c><00:13:45.199><c> we</c><00:13:45.279><c> can</c><00:13:45.480><c> also</c>

00:13:45.750 --> 00:13:45.760 align:start position:0%
weights and make sure that we can also
 

00:13:45.760 --> 00:13:48.310 align:start position:0%
weights and make sure that we can also
generate<00:13:46.160><c> text</c><00:13:46.639><c> that</c><00:13:46.760><c> looks</c><00:13:47.199><c> coherent</c><00:13:48.199><c> okay</c>

00:13:48.310 --> 00:13:48.320 align:start position:0%
generate text that looks coherent okay
 

00:13:48.320 --> 00:13:49.870 align:start position:0%
generate text that looks coherent okay
so<00:13:48.480><c> let's</c><00:13:48.639><c> now</c><00:13:48.760><c> swing</c><00:13:49.079><c> over</c><00:13:49.240><c> to</c><00:13:49.360><c> the</c><00:13:49.560><c> attention</c>

00:13:49.870 --> 00:13:49.880 align:start position:0%
so let's now swing over to the attention
 

00:13:49.880 --> 00:13:51.189 align:start position:0%
so let's now swing over to the attention
is<00:13:50.040><c> all</c><00:13:50.160><c> un</c><00:13:50.279><c> need</c><00:13:50.440><c> paper</c><00:13:50.680><c> that</c><00:13:50.839><c> started</c>

00:13:51.189 --> 00:13:51.199 align:start position:0%
is all un need paper that started
 

00:13:51.199 --> 00:13:53.069 align:start position:0%
is all un need paper that started
everything<00:13:51.720><c> and</c><00:13:51.880><c> let's</c><00:13:52.040><c> scroll</c><00:13:52.399><c> over</c><00:13:52.639><c> to</c><00:13:52.880><c> the</c>

00:13:53.069 --> 00:13:53.079 align:start position:0%
everything and let's scroll over to the
 

00:13:53.079 --> 00:13:55.189 align:start position:0%
everything and let's scroll over to the
model<00:13:53.360><c> architecture</c><00:13:54.000><c> the</c><00:13:54.120><c> original</c>

00:13:55.189 --> 00:13:55.199 align:start position:0%
model architecture the original
 

00:13:55.199 --> 00:13:57.710 align:start position:0%
model architecture the original
Transformer<00:13:56.199><c> now</c><00:13:56.639><c> remember</c><00:13:56.959><c> that</c><00:13:57.120><c> gpt2</c><00:13:57.600><c> is</c>

00:13:57.710 --> 00:13:57.720 align:start position:0%
Transformer now remember that gpt2 is
 

00:13:57.720 --> 00:13:59.350 align:start position:0%
Transformer now remember that gpt2 is
slightly<00:13:58.079><c> modified</c><00:13:58.600><c> from</c><00:13:58.720><c> the</c><00:13:58.839><c> or</c><00:13:59.079><c> or</c>

00:13:59.350 --> 00:13:59.360 align:start position:0%
slightly modified from the or or
 

00:13:59.360 --> 00:14:02.509 align:start position:0%
slightly modified from the or or
Transformer<00:14:00.120><c> in</c><00:14:00.279><c> particular</c><00:14:01.160><c> we</c><00:14:01.320><c> do</c><00:14:01.480><c> not</c><00:14:01.839><c> have</c>

00:14:02.509 --> 00:14:02.519 align:start position:0%
Transformer in particular we do not have
 

00:14:02.519 --> 00:14:05.189 align:start position:0%
Transformer in particular we do not have
uh<00:14:02.639><c> the</c><00:14:02.800><c> encoder</c><00:14:03.560><c> gpt2</c><00:14:04.120><c> is</c><00:14:04.199><c> a</c><00:14:04.320><c> decoder</c><00:14:04.800><c> only</c>

00:14:05.189 --> 00:14:05.199 align:start position:0%
uh the encoder gpt2 is a decoder only
 

00:14:05.199 --> 00:14:07.269 align:start position:0%
uh the encoder gpt2 is a decoder only
Transformer<00:14:05.839><c> as</c><00:14:05.959><c> we</c><00:14:06.120><c> call</c><00:14:06.240><c> it</c><00:14:06.639><c> so</c><00:14:06.800><c> this</c><00:14:06.920><c> entire</c>

00:14:07.269 --> 00:14:07.279 align:start position:0%
Transformer as we call it so this entire
 

00:14:07.279 --> 00:14:09.790 align:start position:0%
Transformer as we call it so this entire
encoder<00:14:07.759><c> here</c><00:14:07.959><c> is</c><00:14:08.160><c> missing</c><00:14:09.160><c> in</c><00:14:09.279><c> addition</c><00:14:09.600><c> to</c>

00:14:09.790 --> 00:14:09.800 align:start position:0%
encoder here is missing in addition to
 

00:14:09.800 --> 00:14:12.310 align:start position:0%
encoder here is missing in addition to
that<00:14:10.279><c> this</c><00:14:10.480><c> cross</c><00:14:10.720><c> attention</c><00:14:11.440><c> here</c><00:14:12.040><c> that</c><00:14:12.160><c> was</c>

00:14:12.310 --> 00:14:12.320 align:start position:0%
that this cross attention here that was
 

00:14:12.320 --> 00:14:14.790 align:start position:0%
that this cross attention here that was
using<00:14:12.639><c> that</c><00:14:12.800><c> encoder</c><00:14:13.440><c> is</c><00:14:13.720><c> also</c><00:14:14.000><c> missing</c><00:14:14.440><c> so</c><00:14:14.560><c> we</c>

00:14:14.790 --> 00:14:14.800 align:start position:0%
using that encoder is also missing so we
 

00:14:14.800 --> 00:14:17.990 align:start position:0%
using that encoder is also missing so we
delete<00:14:15.800><c> this</c><00:14:16.000><c> entire</c><00:14:16.440><c> part</c><00:14:17.440><c> everything</c><00:14:17.720><c> else</c>

00:14:17.990 --> 00:14:18.000 align:start position:0%
delete this entire part everything else
 

00:14:18.000 --> 00:14:20.230 align:start position:0%
delete this entire part everything else
stays<00:14:18.639><c> almost</c><00:14:18.959><c> the</c><00:14:19.079><c> same</c><00:14:19.680><c> but</c><00:14:19.800><c> there</c><00:14:19.920><c> are</c><00:14:20.079><c> some</c>

00:14:20.230 --> 00:14:20.240 align:start position:0%
stays almost the same but there are some
 

00:14:20.240 --> 00:14:21.949 align:start position:0%
stays almost the same but there are some
differences<00:14:20.720><c> that</c><00:14:20.880><c> we're</c><00:14:21.040><c> going</c><00:14:21.120><c> to</c><00:14:21.680><c> uh</c><00:14:21.759><c> sort</c>

00:14:21.949 --> 00:14:21.959 align:start position:0%
differences that we're going to uh sort
 

00:14:21.959 --> 00:14:26.749 align:start position:0%
differences that we're going to uh sort
of<00:14:22.279><c> look</c><00:14:22.440><c> at</c><00:14:22.920><c> here</c><00:14:23.920><c> so</c><00:14:24.320><c> there</c><00:14:24.440><c> are</c><00:14:24.720><c> two</c><00:14:25.000><c> main</c>

00:14:26.749 --> 00:14:26.759 align:start position:0%
of look at here so there are two main
 

00:14:26.759 --> 00:14:29.389 align:start position:0%
of look at here so there are two main
differences<00:14:27.759><c> when</c><00:14:27.880><c> we</c><00:14:28.040><c> go</c><00:14:28.199><c> to</c><00:14:28.360><c> the</c><00:14:28.480><c> gb2</c><00:14:28.880><c> page</c>

00:14:29.389 --> 00:14:29.399 align:start position:0%
differences when we go to the gb2 page
 

00:14:29.399 --> 00:14:32.870 align:start position:0%
differences when we go to the gb2 page
under<00:14:29.759><c> 2.3</c><00:14:30.519><c> model</c><00:14:31.519><c> we</c><00:14:31.680><c> notice</c><00:14:32.040><c> that</c><00:14:32.440><c> first</c>

00:14:32.870 --> 00:14:32.880 align:start position:0%
under 2.3 model we notice that first
 

00:14:32.880 --> 00:14:34.790 align:start position:0%
under 2.3 model we notice that first
there's<00:14:33.079><c> a</c><00:14:33.240><c> reshuffling</c><00:14:33.800><c> of</c><00:14:33.920><c> the</c><00:14:34.040><c> layer</c><00:14:34.320><c> Norms</c>

00:14:34.790 --> 00:14:34.800 align:start position:0%
there's a reshuffling of the layer Norms
 

00:14:34.800 --> 00:14:38.230 align:start position:0%
there's a reshuffling of the layer Norms
so<00:14:34.959><c> they</c><00:14:35.160><c> change</c><00:14:35.800><c> place</c><00:14:36.759><c> and</c><00:14:37.079><c> second</c><00:14:38.079><c> an</c>

00:14:38.230 --> 00:14:38.240 align:start position:0%
so they change place and second an
 

00:14:38.240 --> 00:14:40.550 align:start position:0%
so they change place and second an
additional<00:14:38.639><c> layer</c><00:14:38.920><c> normalization</c><00:14:39.680><c> was</c><00:14:40.160><c> added</c>

00:14:40.550 --> 00:14:40.560 align:start position:0%
additional layer normalization was added
 

00:14:40.560 --> 00:14:43.749 align:start position:0%
additional layer normalization was added
here<00:14:41.000><c> to</c><00:14:41.240><c> the</c><00:14:42.120><c> final</c><00:14:42.360><c> self</c><00:14:42.680><c> detention</c><00:14:43.120><c> block</c>

00:14:43.749 --> 00:14:43.759 align:start position:0%
here to the final self detention block
 

00:14:43.759 --> 00:14:46.389 align:start position:0%
here to the final self detention block
so<00:14:44.000><c> basically</c><00:14:44.680><c> all</c><00:14:44.920><c> the</c><00:14:45.079><c> layer</c><00:14:45.360><c> Norms</c><00:14:45.800><c> here</c>

00:14:46.389 --> 00:14:46.399 align:start position:0%
so basically all the layer Norms here
 

00:14:46.399 --> 00:14:48.350 align:start position:0%
so basically all the layer Norms here
instead<00:14:46.639><c> of</c><00:14:46.800><c> being</c><00:14:47.120><c> after</c><00:14:47.440><c> the</c><00:14:47.560><c> MLP</c><00:14:47.959><c> or</c><00:14:48.160><c> after</c>

00:14:48.350 --> 00:14:48.360 align:start position:0%
instead of being after the MLP or after
 

00:14:48.360 --> 00:14:50.870 align:start position:0%
instead of being after the MLP or after
the<00:14:48.480><c> attention</c><00:14:49.040><c> they</c><00:14:49.160><c> SN</c><00:14:49.720><c> before</c><00:14:50.000><c> it</c><00:14:50.560><c> and</c><00:14:50.720><c> an</c>

00:14:50.870 --> 00:14:50.880 align:start position:0%
the attention they SN before it and an
 

00:14:50.880 --> 00:14:52.629 align:start position:0%
the attention they SN before it and an
additional<00:14:51.199><c> layer</c><00:14:51.440><c> Norm</c><00:14:51.720><c> gets</c><00:14:51.920><c> added</c><00:14:52.279><c> here</c>

00:14:52.629 --> 00:14:52.639 align:start position:0%
additional layer Norm gets added here
 

00:14:52.639 --> 00:14:54.350 align:start position:0%
additional layer Norm gets added here
right<00:14:52.839><c> before</c><00:14:53.199><c> the</c><00:14:53.279><c> final</c>

00:14:54.350 --> 00:14:54.360 align:start position:0%
right before the final
 

00:14:54.360 --> 00:14:56.710 align:start position:0%
right before the final
classifier<00:14:55.360><c> so</c><00:14:55.920><c> now</c><00:14:56.079><c> let's</c><00:14:56.279><c> Implement</c><00:14:56.600><c> some</c>

00:14:56.710 --> 00:14:56.720 align:start position:0%
classifier so now let's Implement some
 

00:14:56.720 --> 00:14:59.030 align:start position:0%
classifier so now let's Implement some
of<00:14:56.839><c> the</c><00:14:57.079><c> first</c><00:14:57.480><c> sort</c><00:14:57.680><c> of</c><00:14:57.880><c> skeleton</c><00:14:58.480><c> NN</c><00:14:58.759><c> module</c>

00:14:59.030 --> 00:14:59.040 align:start position:0%
of the first sort of skeleton NN module
 

00:14:59.040 --> 00:15:02.910 align:start position:0%
of the first sort of skeleton NN module
modules<00:15:00.040><c> here</c><00:15:00.279><c> in</c><00:15:00.480><c> our</c><00:15:00.680><c> GPT</c><00:15:01.240><c> NN</c><00:15:01.639><c> module</c><00:15:02.639><c> and</c><00:15:02.800><c> in</c>

00:15:02.910 --> 00:15:02.920 align:start position:0%
modules here in our GPT NN module and in
 

00:15:02.920 --> 00:15:04.389 align:start position:0%
modules here in our GPT NN module and in
particular<00:15:03.320><c> we're</c><00:15:03.440><c> going</c><00:15:03.560><c> to</c><00:15:03.720><c> try</c><00:15:03.920><c> to</c><00:15:04.120><c> match</c>

00:15:04.389 --> 00:15:04.399 align:start position:0%
particular we're going to try to match
 

00:15:04.399 --> 00:15:06.710 align:start position:0%
particular we're going to try to match
up<00:15:04.800><c> this</c><00:15:04.959><c> schema</c><00:15:05.480><c> here</c><00:15:05.959><c> that</c><00:15:06.199><c> is</c><00:15:06.360><c> used</c><00:15:06.600><c> by</c>

00:15:06.710 --> 00:15:06.720 align:start position:0%
up this schema here that is used by
 

00:15:06.720 --> 00:15:08.509 align:start position:0%
up this schema here that is used by
hugging<00:15:07.079><c> face</c><00:15:07.279><c> Transformers</c><00:15:08.199><c> because</c><00:15:08.440><c> that</c>

00:15:08.509 --> 00:15:08.519 align:start position:0%
hugging face Transformers because that
 

00:15:08.519 --> 00:15:10.069 align:start position:0%
hugging face Transformers because that
will<00:15:08.639><c> make</c><00:15:08.759><c> it</c><00:15:08.880><c> much</c><00:15:09.040><c> easier</c><00:15:09.360><c> to</c><00:15:09.519><c> load</c><00:15:09.880><c> these</c>

00:15:10.069 --> 00:15:10.079 align:start position:0%
will make it much easier to load these
 

00:15:10.079 --> 00:15:12.910 align:start position:0%
will make it much easier to load these
weights<00:15:10.600><c> from</c><00:15:10.880><c> this</c><00:15:11.160><c> state</c><00:15:11.519><c> dict</c><00:15:12.519><c> so</c><00:15:12.639><c> we</c><00:15:12.759><c> want</c>

00:15:12.910 --> 00:15:12.920 align:start position:0%
weights from this state dict so we want
 

00:15:12.920 --> 00:15:15.629 align:start position:0%
weights from this state dict so we want
something<00:15:13.199><c> that</c><00:15:13.680><c> reflects</c><00:15:14.680><c> uh</c><00:15:14.839><c> this</c><00:15:15.160><c> schema</c>

00:15:15.629 --> 00:15:15.639 align:start position:0%
something that reflects uh this schema
 

00:15:15.639 --> 00:15:19.910 align:start position:0%
something that reflects uh this schema
here<00:15:16.440><c> so</c><00:15:16.639><c> here's</c><00:15:16.839><c> what</c><00:15:16.959><c> I</c><00:15:17.079><c> came</c><00:15:17.240><c> up</c><00:15:17.399><c> with</c>

00:15:19.910 --> 00:15:19.920 align:start position:0%
here so here's what I came up with
 

00:15:19.920 --> 00:15:22.189 align:start position:0%
here so here's what I came up with
um<00:15:20.920><c> basically</c><00:15:21.440><c> we</c><00:15:21.560><c> see</c><00:15:21.759><c> that</c><00:15:21.880><c> the</c><00:15:22.000><c> main</c>

00:15:22.189 --> 00:15:22.199 align:start position:0%
um basically we see that the main
 

00:15:22.199 --> 00:15:24.829 align:start position:0%
um basically we see that the main
container<00:15:22.680><c> here</c><00:15:23.120><c> that</c><00:15:23.240><c> has</c><00:15:23.399><c> all</c><00:15:23.600><c> the</c><00:15:24.360><c> modules</c>

00:15:24.829 --> 00:15:24.839 align:start position:0%
container here that has all the modules
 

00:15:24.839 --> 00:15:26.749 align:start position:0%
container here that has all the modules
is<00:15:24.959><c> called</c><00:15:25.160><c> Transformer</c><00:15:26.079><c> so</c><00:15:26.199><c> I'm</c><00:15:26.360><c> reflecting</c>

00:15:26.749 --> 00:15:26.759 align:start position:0%
is called Transformer so I'm reflecting
 

00:15:26.759 --> 00:15:29.230 align:start position:0%
is called Transformer so I'm reflecting
that<00:15:26.920><c> with</c><00:15:27.040><c> an</c><00:15:27.160><c> NN</c><00:15:27.440><c> module</c><00:15:27.800><c> dict</c><00:15:28.720><c> and</c><00:15:29.000><c> this</c><00:15:29.120><c> is</c>

00:15:29.230 --> 00:15:29.240 align:start position:0%
that with an NN module dict and this is
 

00:15:29.240 --> 00:15:30.749 align:start position:0%
that with an NN module dict and this is
basically<00:15:29.519><c> a</c><00:15:29.639><c> module</c><00:15:29.959><c> that</c><00:15:30.079><c> allows</c><00:15:30.360><c> you</c><00:15:30.480><c> to</c>

00:15:30.749 --> 00:15:30.759 align:start position:0%
basically a module that allows you to
 

00:15:30.759 --> 00:15:34.230 align:start position:0%
basically a module that allows you to
index<00:15:31.240><c> into</c><00:15:31.639><c> the</c><00:15:32.120><c> subm</c><00:15:32.440><c> modules</c><00:15:33.000><c> using</c><00:15:33.639><c> keys</c>

00:15:34.230 --> 00:15:34.240 align:start position:0%
index into the subm modules using keys
 

00:15:34.240 --> 00:15:36.550 align:start position:0%
index into the subm modules using keys
just<00:15:34.399><c> like</c><00:15:34.519><c> a</c><00:15:34.639><c> dictionary</c><00:15:35.639><c> uh</c>

00:15:36.550 --> 00:15:36.560 align:start position:0%
just like a dictionary uh
 

00:15:36.560 --> 00:15:39.150 align:start position:0%
just like a dictionary uh
strings<00:15:37.560><c> within</c><00:15:37.759><c> it</c><00:15:37.959><c> we</c><00:15:38.120><c> have</c><00:15:38.319><c> the</c><00:15:38.560><c> weights</c><00:15:39.000><c> of</c>

00:15:39.150 --> 00:15:39.160 align:start position:0%
strings within it we have the weights of
 

00:15:39.160 --> 00:15:41.949 align:start position:0%
strings within it we have the weights of
the<00:15:39.319><c> token</c><00:15:39.639><c> embeddings</c><00:15:40.160><c> WT</c><00:15:41.000><c> and</c><00:15:41.079><c> that's</c><00:15:41.240><c> an</c><00:15:41.360><c> N</c>

00:15:41.949 --> 00:15:41.959 align:start position:0%
the token embeddings WT and that's an N
 

00:15:41.959 --> 00:15:44.069 align:start position:0%
the token embeddings WT and that's an N
embedding<00:15:42.959><c> and</c><00:15:43.279><c> the</c><00:15:43.560><c> weights</c><00:15:43.839><c> of</c><00:15:43.959><c> the</c>

00:15:44.069 --> 00:15:44.079 align:start position:0%
embedding and the weights of the
 

00:15:44.079 --> 00:15:45.470 align:start position:0%
embedding and the weights of the
position<00:15:44.360><c> embeddings</c><00:15:44.839><c> which</c><00:15:44.959><c> is</c><00:15:45.160><c> also</c><00:15:45.360><c> just</c>

00:15:45.470 --> 00:15:45.480 align:start position:0%
position embeddings which is also just
 

00:15:45.480 --> 00:15:47.590 align:start position:0%
position embeddings which is also just
an<00:15:45.600><c> N</c><00:15:45.880><c> embedding</c><00:15:46.680><c> and</c><00:15:46.800><c> if</c><00:15:46.880><c> you</c><00:15:47.000><c> remember</c><00:15:47.319><c> n</c>

00:15:47.590 --> 00:15:47.600 align:start position:0%
an N embedding and if you remember n
 

00:15:47.600 --> 00:15:49.350 align:start position:0%
an N embedding and if you remember n
embedding<00:15:48.000><c> is</c><00:15:48.120><c> really</c><00:15:48.319><c> just</c><00:15:48.440><c> a</c><00:15:48.639><c> fancy</c><00:15:49.120><c> little</c>

00:15:49.350 --> 00:15:49.360 align:start position:0%
embedding is really just a fancy little
 

00:15:49.360 --> 00:15:53.150 align:start position:0%
embedding is really just a fancy little
wrapper<00:15:49.800><c> module</c><00:15:50.440><c> around</c><00:15:50.759><c> just</c><00:15:50.880><c> a</c><00:15:51.120><c> single</c><00:15:52.160><c> um</c>

00:15:53.150 --> 00:15:53.160 align:start position:0%
wrapper module around just a single um
 

00:15:53.160 --> 00:15:56.550 align:start position:0%
wrapper module around just a single um
single<00:15:53.720><c> array</c><00:15:54.360><c> of</c><00:15:54.560><c> numbers</c><00:15:54.959><c> a</c><00:15:55.319><c> single</c><00:15:56.319><c> uh</c>

00:15:56.550 --> 00:15:56.560 align:start position:0%
single array of numbers a single uh
 

00:15:56.560 --> 00:15:58.550 align:start position:0%
single array of numbers a single uh
block<00:15:56.880><c> of</c><00:15:57.480><c> numbers</c><00:15:57.839><c> just</c><00:15:58.000><c> like</c><00:15:58.199><c> this</c><00:15:58.360><c> it's</c><00:15:58.440><c> a</c>

00:15:58.550 --> 00:15:58.560 align:start position:0%
block of numbers just like this it's a
 

00:15:58.560 --> 00:16:01.990 align:start position:0%
block of numbers just like this it's a
single<00:15:59.160><c> tensor</c><00:16:00.160><c> and</c><00:16:00.360><c> an</c><00:16:00.920><c> embedding</c><00:16:01.319><c> is</c><00:16:01.440><c> a</c>

00:16:01.990 --> 00:16:02.000 align:start position:0%
single tensor and an embedding is a
 

00:16:02.000 --> 00:16:04.749 align:start position:0%
single tensor and an embedding is a
glorified<00:16:03.000><c> um</c><00:16:03.440><c> wrapper</c><00:16:03.880><c> around</c><00:16:04.079><c> a</c><00:16:04.240><c> tensor</c>

00:16:04.749 --> 00:16:04.759 align:start position:0%
glorified um wrapper around a tensor
 

00:16:04.759 --> 00:16:07.110 align:start position:0%
glorified um wrapper around a tensor
that<00:16:04.880><c> allows</c><00:16:05.160><c> you</c><00:16:05.279><c> to</c><00:16:05.759><c> access</c><00:16:06.079><c> its</c><00:16:06.279><c> elements</c>

00:16:07.110 --> 00:16:07.120 align:start position:0%
that allows you to access its elements
 

00:16:07.120 --> 00:16:08.870 align:start position:0%
that allows you to access its elements
uh<00:16:07.240><c> by</c><00:16:07.399><c> indexing</c><00:16:07.839><c> into</c><00:16:08.040><c> the</c>

00:16:08.870 --> 00:16:08.880 align:start position:0%
uh by indexing into the
 

00:16:08.880 --> 00:16:11.269 align:start position:0%
uh by indexing into the
rows<00:16:09.880><c> now</c><00:16:10.040><c> in</c><00:16:10.160><c> addition</c><00:16:10.440><c> to</c><00:16:10.560><c> that</c><00:16:10.720><c> we</c><00:16:10.839><c> see</c><00:16:11.079><c> here</c>

00:16:11.269 --> 00:16:11.279 align:start position:0%
rows now in addition to that we see here
 

00:16:11.279 --> 00:16:14.590 align:start position:0%
rows now in addition to that we see here
that<00:16:11.440><c> we</c><00:16:11.600><c> have</c><00:16:11.839><c> a</c><00:16:12.399><c> h</c><00:16:13.360><c> and</c><00:16:13.560><c> then</c><00:16:13.880><c> there's</c><00:16:14.120><c> a</c><00:16:14.519><c> this</c>

00:16:14.590 --> 00:16:14.600 align:start position:0%
that we have a h and then there's a this
 

00:16:14.600 --> 00:16:16.550 align:start position:0%
that we have a h and then there's a this
is<00:16:14.800><c> index</c><00:16:15.199><c> using</c><00:16:15.480><c> numbers</c><00:16:16.079><c> instead</c><00:16:16.360><c> of</c>

00:16:16.550 --> 00:16:16.560 align:start position:0%
is index using numbers instead of
 

00:16:16.560 --> 00:16:19.629 align:start position:0%
is index using numbers instead of
indexed<00:16:17.000><c> using</c><00:16:17.279><c> strings</c><00:16:18.000><c> so</c><00:16:18.160><c> there's</c><00:16:18.319><c> a</c><00:16:18.680><c> h.</c><00:16:19.199><c> 0</c>

00:16:19.629 --> 00:16:19.639 align:start position:0%
indexed using strings so there's a h. 0
 

00:16:19.639 --> 00:16:23.870 align:start position:0%
indexed using strings so there's a h. 0
1<00:16:20.040><c> 2</c><00:16:20.480><c> Etc</c><00:16:21.199><c> all</c><00:16:21.360><c> the</c><00:16:21.480><c> way</c><00:16:21.680><c> up</c><00:16:21.839><c> till</c><00:16:22.399><c> h.</c><00:16:22.839><c> 11</c><00:16:23.759><c> and</c>

00:16:23.870 --> 00:16:23.880 align:start position:0%
1 2 Etc all the way up till h. 11 and
 

00:16:23.880 --> 00:16:25.990 align:start position:0%
1 2 Etc all the way up till h. 11 and
that's<00:16:24.120><c> because</c><00:16:24.560><c> there</c><00:16:24.680><c> are</c><00:16:24.880><c> 12</c><00:16:25.160><c> layers</c><00:16:25.800><c> here</c>

00:16:25.990 --> 00:16:26.000 align:start position:0%
that's because there are 12 layers here
 

00:16:26.000 --> 00:16:28.590 align:start position:0%
that's because there are 12 layers here
in<00:16:26.160><c> this</c><00:16:26.399><c> Transformer</c><00:16:27.399><c> so</c><00:16:27.519><c> to</c><00:16:27.680><c> reflect</c><00:16:28.120><c> that</c>

00:16:28.590 --> 00:16:28.600 align:start position:0%
in this Transformer so to reflect that
 

00:16:28.600 --> 00:16:31.230 align:start position:0%
in this Transformer so to reflect that
I'm<00:16:28.920><c> creating</c><00:16:29.279><c> also</c><00:16:29.680><c> an</c><00:16:29.959><c> H</c><00:16:30.800><c> I</c><00:16:30.920><c> think</c><00:16:31.120><c> that</c>

00:16:31.230 --> 00:16:31.240 align:start position:0%
I'm creating also an H I think that
 

00:16:31.240 --> 00:16:33.430 align:start position:0%
I'm creating also an H I think that
probably<00:16:31.519><c> stands</c><00:16:31.720><c> for</c><00:16:32.040><c> hidden</c><00:16:33.040><c> and</c><00:16:33.199><c> instead</c>

00:16:33.430 --> 00:16:33.440 align:start position:0%
probably stands for hidden and instead
 

00:16:33.440 --> 00:16:35.509 align:start position:0%
probably stands for hidden and instead
of<00:16:33.519><c> a</c><00:16:33.600><c> module</c><00:16:33.920><c> dict</c><00:16:34.319><c> this</c><00:16:34.399><c> is</c><00:16:34.519><c> a</c><00:16:34.639><c> model</c><00:16:35.000><c> list</c><00:16:35.399><c> so</c>

00:16:35.509 --> 00:16:35.519 align:start position:0%
of a module dict this is a model list so
 

00:16:35.519 --> 00:16:37.749 align:start position:0%
of a module dict this is a model list so
we<00:16:35.600><c> can</c><00:16:35.759><c> index</c><00:16:36.079><c> it</c><00:16:36.240><c> using</c><00:16:36.519><c> integers</c><00:16:37.399><c> exactly</c>

00:16:37.749 --> 00:16:37.759 align:start position:0%
we can index it using integers exactly
 

00:16:37.759 --> 00:16:41.990 align:start position:0%
we can index it using integers exactly
as<00:16:37.880><c> we</c><00:16:38.000><c> see</c><00:16:38.279><c> here</c><00:16:38.880><c> 01</c><00:16:39.639><c> 2</c><00:16:40.360><c> Etc</c><00:16:41.360><c> and</c><00:16:41.480><c> the</c><00:16:41.600><c> modular</c>

00:16:41.990 --> 00:16:42.000 align:start position:0%
as we see here 01 2 Etc and the modular
 

00:16:42.000 --> 00:16:46.069 align:start position:0%
as we see here 01 2 Etc and the modular
list<00:16:42.480><c> has</c><00:16:43.240><c> a</c><00:16:43.600><c> n</c><00:16:43.920><c> layer</c><00:16:44.639><c> blocks</c><00:16:45.560><c> and</c><00:16:45.680><c> the</c><00:16:45.800><c> blocks</c>

00:16:46.069 --> 00:16:46.079 align:start position:0%
list has a n layer blocks and the blocks
 

00:16:46.079 --> 00:16:48.509 align:start position:0%
list has a n layer blocks and the blocks
are<00:16:46.279><c> yet</c><00:16:46.440><c> to</c><00:16:46.600><c> be</c><00:16:46.800><c> defined</c><00:16:47.240><c> in</c><00:16:47.399><c> a</c><00:16:47.560><c> module</c><00:16:48.040><c> in</c><00:16:48.160><c> a</c>

00:16:48.509 --> 00:16:48.519 align:start position:0%
are yet to be defined in a module in a
 

00:16:48.519 --> 00:16:50.590 align:start position:0%
are yet to be defined in a module in a
bit<00:16:49.519><c> in</c><00:16:49.680><c> addition</c><00:16:49.959><c> to</c><00:16:50.079><c> that</c><00:16:50.199><c> following</c><00:16:50.519><c> the</c>

00:16:50.590 --> 00:16:50.600 align:start position:0%
bit in addition to that following the
 

00:16:50.600 --> 00:16:53.590 align:start position:0%
bit in addition to that following the
gpt2<00:16:51.120><c> paper</c><00:16:52.000><c> we</c><00:16:52.160><c> have</c><00:16:52.319><c> we</c><00:16:52.440><c> need</c><00:16:52.600><c> an</c><00:16:52.759><c> additional</c>

00:16:53.590 --> 00:16:53.600 align:start position:0%
gpt2 paper we have we need an additional
 

00:16:53.600 --> 00:16:56.269 align:start position:0%
gpt2 paper we have we need an additional
final<00:16:54.120><c> layer</c><00:16:54.480><c> Norm</c><00:16:55.360><c> that</c><00:16:55.480><c> we're</c><00:16:55.639><c> going</c><00:16:55.759><c> to</c><00:16:56.120><c> put</c>

00:16:56.269 --> 00:16:56.279 align:start position:0%
final layer Norm that we're going to put
 

00:16:56.279 --> 00:16:58.150 align:start position:0%
final layer Norm that we're going to put
in<00:16:56.480><c> there</c><00:16:57.160><c> and</c><00:16:57.279><c> then</c><00:16:57.440><c> we</c><00:16:57.560><c> have</c><00:16:57.720><c> the</c><00:16:57.839><c> final</c>

00:16:58.150 --> 00:16:58.160 align:start position:0%
in there and then we have the final
 

00:16:58.160 --> 00:17:01.389 align:start position:0%
in there and then we have the final
classifier<00:16:59.199><c> uh</c><00:16:59.399><c> the</c><00:16:59.560><c> language</c><00:16:59.920><c> model</c><00:17:00.399><c> head</c>

00:17:01.389 --> 00:17:01.399 align:start position:0%
classifier uh the language model head
 

00:17:01.399 --> 00:17:05.710 align:start position:0%
classifier uh the language model head
which<00:17:02.360><c> um</c><00:17:03.360><c> projects</c><00:17:04.039><c> from</c><00:17:04.240><c> 768</c><00:17:05.160><c> the</c><00:17:05.280><c> number</c><00:17:05.520><c> of</c>

00:17:05.710 --> 00:17:05.720 align:start position:0%
which um projects from 768 the number of
 

00:17:05.720 --> 00:17:08.029 align:start position:0%
which um projects from 768 the number of
embedding<00:17:06.160><c> dimensions</c><00:17:06.600><c> in</c><00:17:06.720><c> this</c><00:17:06.919><c> GPT</c><00:17:07.799><c> all</c><00:17:07.959><c> the</c>

00:17:08.029 --> 00:17:08.039 align:start position:0%
embedding dimensions in this GPT all the
 

00:17:08.039 --> 00:17:10.350 align:start position:0%
embedding dimensions in this GPT all the
way<00:17:08.160><c> to</c><00:17:08.240><c> the</c><00:17:08.360><c> vocab</c><00:17:08.760><c> size</c><00:17:09.000><c> which</c><00:17:09.079><c> is</c>

00:17:10.350 --> 00:17:10.360 align:start position:0%
way to the vocab size which is
 

00:17:10.360 --> 00:17:13.590 align:start position:0%
way to the vocab size which is
50257<00:17:11.360><c> and</c><00:17:11.480><c> gpt2</c><00:17:11.959><c> uses</c><00:17:12.280><c> no</c><00:17:12.480><c> bias</c><00:17:13.079><c> for</c><00:17:13.360><c> this</c>

00:17:13.590 --> 00:17:13.600 align:start position:0%
50257 and gpt2 uses no bias for this
 

00:17:13.600 --> 00:17:16.949 align:start position:0%
50257 and gpt2 uses no bias for this
final<00:17:14.439><c> uh</c><00:17:14.559><c> sort</c><00:17:14.720><c> of</c><00:17:15.400><c> projection</c><00:17:16.400><c> so</c><00:17:16.679><c> this</c><00:17:16.760><c> is</c>

00:17:16.949 --> 00:17:16.959 align:start position:0%
final uh sort of projection so this is
 

00:17:16.959 --> 00:17:19.230 align:start position:0%
final uh sort of projection so this is
the<00:17:17.400><c> skeleton</c><00:17:18.280><c> and</c><00:17:18.400><c> you</c><00:17:18.520><c> can</c><00:17:18.679><c> see</c><00:17:18.919><c> that</c><00:17:19.039><c> it</c>

00:17:19.230 --> 00:17:19.240 align:start position:0%
the skeleton and you can see that it
 

00:17:19.240 --> 00:17:22.789 align:start position:0%
the skeleton and you can see that it
reflects<00:17:20.120><c> this</c><00:17:20.799><c> so</c><00:17:21.000><c> the</c><00:17:21.160><c> wte</c><00:17:22.160><c> is</c><00:17:22.319><c> the</c><00:17:22.480><c> token</c>

00:17:22.789 --> 00:17:22.799 align:start position:0%
reflects this so the wte is the token
 

00:17:22.799 --> 00:17:24.870 align:start position:0%
reflects this so the wte is the token
embeddings<00:17:23.799><c> here</c><00:17:23.959><c> it's</c><00:17:24.120><c> called</c><00:17:24.520><c> output</c>

00:17:24.870 --> 00:17:24.880 align:start position:0%
embeddings here it's called output
 

00:17:24.880 --> 00:17:26.590 align:start position:0%
embeddings here it's called output
embedding<00:17:25.240><c> but</c><00:17:25.360><c> it's</c><00:17:25.520><c> really</c><00:17:25.760><c> the</c><00:17:26.120><c> token</c>

00:17:26.590 --> 00:17:26.600 align:start position:0%
embedding but it's really the token
 

00:17:26.600 --> 00:17:29.230 align:start position:0%
embedding but it's really the token
embeddings<00:17:27.600><c> the</c><00:17:27.760><c> PE</c><00:17:28.120><c> is</c><00:17:28.240><c> the</c><00:17:28.360><c> positional</c>

00:17:29.230 --> 00:17:29.240 align:start position:0%
embeddings the PE is the positional
 

00:17:29.240 --> 00:17:31.190 align:start position:0%
embeddings the PE is the positional
codings<00:17:30.240><c> uh</c><00:17:30.400><c> those</c><00:17:30.559><c> two</c><00:17:30.799><c> pieces</c><00:17:31.039><c> of</c>

00:17:31.190 --> 00:17:31.200 align:start position:0%
codings uh those two pieces of
 

00:17:31.200 --> 00:17:32.430 align:start position:0%
codings uh those two pieces of
information<00:17:31.600><c> as</c><00:17:31.679><c> we</c><00:17:31.799><c> saw</c><00:17:32.000><c> previously</c><00:17:32.320><c> are</c>

00:17:32.430 --> 00:17:32.440 align:start position:0%
information as we saw previously are
 

00:17:32.440 --> 00:17:34.029 align:start position:0%
information as we saw previously are
going<00:17:32.520><c> to</c><00:17:32.720><c> add</c><00:17:33.120><c> and</c><00:17:33.200><c> then</c><00:17:33.400><c> go</c><00:17:33.520><c> into</c><00:17:33.720><c> the</c>

00:17:34.029 --> 00:17:34.039 align:start position:0%
going to add and then go into the
 

00:17:34.039 --> 00:17:37.150 align:start position:0%
going to add and then go into the
Transformer<00:17:35.039><c> the</c><00:17:35.440><c> H</c><00:17:35.960><c> is</c><00:17:36.200><c> the</c><00:17:36.400><c> all</c><00:17:36.640><c> the</c><00:17:36.760><c> blocks</c>

00:17:37.150 --> 00:17:37.160 align:start position:0%
Transformer the H is the all the blocks
 

00:17:37.160 --> 00:17:40.110 align:start position:0%
Transformer the H is the all the blocks
in<00:17:37.440><c> Gray</c><00:17:38.440><c> and</c><00:17:38.600><c> the</c><00:17:38.720><c> LNF</c><00:17:39.360><c> is</c><00:17:39.520><c> this</c><00:17:39.679><c> new</c><00:17:39.880><c> layer</c>

00:17:40.110 --> 00:17:40.120 align:start position:0%
in Gray and the LNF is this new layer
 

00:17:40.120 --> 00:17:43.789 align:start position:0%
in Gray and the LNF is this new layer
that<00:17:40.280><c> gets</c><00:17:40.480><c> added</c><00:17:40.799><c> here</c><00:17:41.520><c> by</c><00:17:41.640><c> the</c><00:17:41.760><c> gpt2</c><00:17:42.799><c> model</c>

00:17:43.789 --> 00:17:43.799 align:start position:0%
that gets added here by the gpt2 model
 

00:17:43.799 --> 00:17:47.310 align:start position:0%
that gets added here by the gpt2 model
and<00:17:43.960><c> LM</c><00:17:44.360><c> head</c><00:17:44.600><c> is</c><00:17:44.720><c> this</c><00:17:45.120><c> linear</c><00:17:45.640><c> part</c><00:17:46.120><c> here</c><00:17:47.120><c> so</c>

00:17:47.310 --> 00:17:47.320 align:start position:0%
and LM head is this linear part here so
 

00:17:47.320 --> 00:17:50.150 align:start position:0%
and LM head is this linear part here so
that's<00:17:47.520><c> the</c><00:17:47.720><c> skeleton</c><00:17:48.440><c> of</c><00:17:48.559><c> the</c><00:17:48.840><c> gpt2</c><00:17:49.840><c> we</c><00:17:50.000><c> now</c>

00:17:50.150 --> 00:17:50.160 align:start position:0%
that's the skeleton of the gpt2 we now
 

00:17:50.160 --> 00:17:52.990 align:start position:0%
that's the skeleton of the gpt2 we now
have<00:17:50.280><c> to</c><00:17:50.440><c> implement</c><00:17:51.039><c> the</c><00:17:51.679><c> block</c><00:17:52.679><c> okay</c><00:17:52.880><c> so</c>

00:17:52.990 --> 00:17:53.000 align:start position:0%
have to implement the block okay so
 

00:17:53.000 --> 00:17:55.510 align:start position:0%
have to implement the block okay so
let's<00:17:53.160><c> now</c><00:17:53.360><c> recurse</c><00:17:53.919><c> to</c><00:17:54.080><c> the</c><00:17:54.200><c> block</c><00:17:54.600><c> itself</c><00:17:55.360><c> so</c>

00:17:55.510 --> 00:17:55.520 align:start position:0%
let's now recurse to the block itself so
 

00:17:55.520 --> 00:17:58.990 align:start position:0%
let's now recurse to the block itself so
we<00:17:55.600><c> want</c><00:17:55.720><c> to</c><00:17:55.840><c> define</c><00:17:56.080><c> the</c><00:17:56.640><c> block</c><00:17:57.640><c> um</c><00:17:58.320><c> so</c><00:17:58.840><c> I'll</c>

00:17:58.990 --> 00:17:59.000 align:start position:0%
we want to define the block um so I'll
 

00:17:59.000 --> 00:18:02.230 align:start position:0%
we want to define the block um so I'll
start<00:17:59.200><c> putting</c><00:17:59.440><c> them</c><00:17:59.679><c> here</c><00:18:00.480><c> so</c><00:18:00.919><c> the</c><00:18:01.120><c> block</c><00:18:02.120><c> I</c>

00:18:02.230 --> 00:18:02.240 align:start position:0%
start putting them here so the block I
 

00:18:02.240 --> 00:18:04.470 align:start position:0%
start putting them here so the block I
like<00:18:02.440><c> to</c><00:18:02.919><c> write</c><00:18:03.200><c> out</c><00:18:03.440><c> like</c>

00:18:04.470 --> 00:18:04.480 align:start position:0%
like to write out like
 

00:18:04.480 --> 00:18:06.149 align:start position:0%
like to write out like
this<00:18:05.480><c> uh</c><00:18:05.600><c> these</c><00:18:05.720><c> are</c><00:18:05.840><c> some</c><00:18:05.960><c> of</c><00:18:06.039><c> the</c>

00:18:06.149 --> 00:18:06.159 align:start position:0%
this uh these are some of the
 

00:18:06.159 --> 00:18:07.430 align:start position:0%
this uh these are some of the
initializations<00:18:06.880><c> and</c><00:18:06.960><c> then</c><00:18:07.120><c> this</c><00:18:07.200><c> is</c><00:18:07.320><c> the</c>

00:18:07.430 --> 00:18:07.440 align:start position:0%
initializations and then this is the
 

00:18:07.440 --> 00:18:09.590 align:start position:0%
initializations and then this is the
actual<00:18:07.640><c> forward</c><00:18:08.039><c> pass</c><00:18:08.200><c> of</c><00:18:08.400><c> what</c><00:18:08.559><c> this</c><00:18:08.720><c> block</c>

00:18:09.590 --> 00:18:09.600 align:start position:0%
actual forward pass of what this block
 

00:18:09.600 --> 00:18:12.029 align:start position:0%
actual forward pass of what this block
computes<00:18:10.600><c> and</c><00:18:10.919><c> notice</c><00:18:11.320><c> here</c><00:18:11.520><c> that</c><00:18:11.640><c> there's</c><00:18:11.840><c> a</c>

00:18:12.029 --> 00:18:12.039 align:start position:0%
computes and notice here that there's a
 

00:18:12.039 --> 00:18:14.430 align:start position:0%
computes and notice here that there's a
change<00:18:12.720><c> from</c><00:18:13.159><c> the</c><00:18:13.320><c> Transformer</c><00:18:13.919><c> again</c><00:18:14.360><c> that</c>

00:18:14.430 --> 00:18:14.440 align:start position:0%
change from the Transformer again that
 

00:18:14.440 --> 00:18:17.669 align:start position:0%
change from the Transformer again that
is<00:18:14.559><c> mentioned</c><00:18:14.880><c> in</c><00:18:14.960><c> the</c><00:18:15.039><c> gpt2</c><00:18:15.640><c> paper</c><00:18:16.640><c> so</c><00:18:16.880><c> here</c>

00:18:17.669 --> 00:18:17.679 align:start position:0%
is mentioned in the gpt2 paper so here
 

00:18:17.679 --> 00:18:20.070 align:start position:0%
is mentioned in the gpt2 paper so here
the<00:18:17.840><c> layer</c><00:18:18.240><c> normalizations</c><00:18:19.240><c> are</c><00:18:19.600><c> after</c><00:18:19.960><c> the</c>

00:18:20.070 --> 00:18:20.080 align:start position:0%
the layer normalizations are after the
 

00:18:20.080 --> 00:18:22.029 align:start position:0%
the layer normalizations are after the
application<00:18:20.440><c> of</c><00:18:20.559><c> attention</c><00:18:20.960><c> or</c><00:18:21.080><c> feed</c><00:18:21.320><c> forward</c>

00:18:22.029 --> 00:18:22.039 align:start position:0%
application of attention or feed forward
 

00:18:22.039 --> 00:18:24.190 align:start position:0%
application of attention or feed forward
in<00:18:22.200><c> addition</c><00:18:22.480><c> to</c><00:18:22.640><c> that</c><00:18:22.880><c> note</c><00:18:23.520><c> that</c><00:18:23.760><c> the</c>

00:18:24.190 --> 00:18:24.200 align:start position:0%
in addition to that note that the
 

00:18:24.200 --> 00:18:26.390 align:start position:0%
in addition to that note that the
normalizations<00:18:25.120><c> are</c><00:18:25.480><c> inside</c><00:18:25.840><c> the</c><00:18:25.960><c> residual</c>

00:18:26.390 --> 00:18:26.400 align:start position:0%
normalizations are inside the residual
 

00:18:26.400 --> 00:18:28.270 align:start position:0%
normalizations are inside the residual
stream<00:18:27.080><c> you</c><00:18:27.200><c> see</c><00:18:27.400><c> how</c><00:18:27.559><c> feed</c><00:18:27.799><c> forward</c><00:18:28.120><c> is</c>

00:18:28.270 --> 00:18:28.280 align:start position:0%
stream you see how feed forward is
 

00:18:28.280 --> 00:18:30.909 align:start position:0%
stream you see how feed forward is
applied<00:18:28.559><c> and</c><00:18:28.919><c> this</c><00:18:29.039><c> arrow</c><00:18:29.480><c> goes</c><00:18:29.760><c> through</c><00:18:30.480><c> and</c>

00:18:30.909 --> 00:18:30.919 align:start position:0%
applied and this arrow goes through and
 

00:18:30.919 --> 00:18:33.110 align:start position:0%
applied and this arrow goes through and
through<00:18:31.200><c> the</c><00:18:31.559><c> normalization</c><00:18:32.559><c> so</c><00:18:32.760><c> that</c><00:18:32.880><c> means</c>

00:18:33.110 --> 00:18:33.120 align:start position:0%
through the normalization so that means
 

00:18:33.120 --> 00:18:35.070 align:start position:0%
through the normalization so that means
that<00:18:33.240><c> your</c><00:18:33.440><c> residual</c><00:18:34.080><c> pathway</c><00:18:34.799><c> has</c>

00:18:35.070 --> 00:18:35.080 align:start position:0%
that your residual pathway has
 

00:18:35.080 --> 00:18:37.310 align:start position:0%
that your residual pathway has
normalizations<00:18:35.919><c> inside</c><00:18:36.360><c> them</c><00:18:36.960><c> and</c><00:18:37.080><c> this</c><00:18:37.200><c> is</c>

00:18:37.310 --> 00:18:37.320 align:start position:0%
normalizations inside them and this is
 

00:18:37.320 --> 00:18:39.870 align:start position:0%
normalizations inside them and this is
not<00:18:37.520><c> very</c><00:18:37.760><c> good</c><00:18:38.240><c> or</c><00:18:38.480><c> desirable</c><00:18:39.480><c> uh</c><00:18:39.600><c> you</c>

00:18:39.870 --> 00:18:39.880 align:start position:0%
not very good or desirable uh you
 

00:18:39.880 --> 00:18:41.990 align:start position:0%
not very good or desirable uh you
actually<00:18:40.159><c> prefer</c><00:18:40.440><c> to</c><00:18:40.600><c> have</c><00:18:40.720><c> a</c><00:18:40.840><c> single</c><00:18:41.840><c> uh</c>

00:18:41.990 --> 00:18:42.000 align:start position:0%
actually prefer to have a single uh
 

00:18:42.000 --> 00:18:44.110 align:start position:0%
actually prefer to have a single uh
clean<00:18:42.360><c> residual</c><00:18:42.840><c> stream</c><00:18:43.400><c> all</c><00:18:43.559><c> the</c><00:18:43.640><c> way</c><00:18:43.840><c> from</c>

00:18:44.110 --> 00:18:44.120 align:start position:0%
clean residual stream all the way from
 

00:18:44.120 --> 00:18:45.830 align:start position:0%
clean residual stream all the way from
supervision<00:18:44.919><c> all</c><00:18:45.080><c> the</c><00:18:45.159><c> way</c><00:18:45.360><c> down</c><00:18:45.559><c> to</c><00:18:45.720><c> the</c>

00:18:45.830 --> 00:18:45.840 align:start position:0%
supervision all the way down to the
 

00:18:45.840 --> 00:18:48.470 align:start position:0%
supervision all the way down to the
inputs<00:18:46.320><c> the</c><00:18:46.760><c> tokens</c><00:18:47.760><c> and</c><00:18:48.039><c> this</c><00:18:48.159><c> is</c><00:18:48.280><c> very</c>

00:18:48.470 --> 00:18:48.480 align:start position:0%
inputs the tokens and this is very
 

00:18:48.480 --> 00:18:51.750 align:start position:0%
inputs the tokens and this is very
desirable<00:18:49.080><c> and</c><00:18:49.640><c> nice</c><00:18:50.080><c> because</c><00:18:50.840><c> the</c><00:18:51.080><c> gradients</c>

00:18:51.750 --> 00:18:51.760 align:start position:0%
desirable and nice because the gradients
 

00:18:51.760 --> 00:18:53.990 align:start position:0%
desirable and nice because the gradients
that<00:18:51.919><c> flow</c><00:18:52.240><c> from</c><00:18:52.360><c> the</c><00:18:52.559><c> top</c><00:18:53.159><c> if</c><00:18:53.240><c> you</c><00:18:53.440><c> remember</c>

00:18:53.990 --> 00:18:54.000 align:start position:0%
that flow from the top if you remember
 

00:18:54.000 --> 00:18:56.350 align:start position:0%
that flow from the top if you remember
from<00:18:54.159><c> your</c><00:18:54.480><c> microad</c><00:18:55.480><c> addition</c><00:18:56.159><c> just</c>

00:18:56.350 --> 00:18:56.360 align:start position:0%
from your microad addition just
 

00:18:56.360 --> 00:18:58.230 align:start position:0%
from your microad addition just
distributes<00:18:56.919><c> gradients</c><00:18:57.919><c> during</c><00:18:58.159><c> the</c>

00:18:58.230 --> 00:18:58.240 align:start position:0%
distributes gradients during the
 

00:18:58.240 --> 00:19:00.590 align:start position:0%
distributes gradients during the
backwards<00:18:58.559><c> state</c><00:18:59.159><c> to</c><00:18:59.360><c> both</c><00:18:59.520><c> of</c><00:18:59.640><c> its</c><00:18:59.799><c> branches</c>

00:19:00.590 --> 00:19:00.600 align:start position:0%
backwards state to both of its branches
 

00:19:00.600 --> 00:19:04.070 align:start position:0%
backwards state to both of its branches
equally<00:19:01.600><c> so</c><00:19:02.039><c> addition</c><00:19:02.640><c> is</c><00:19:02.840><c> a</c><00:19:03.159><c> branch</c><00:19:03.760><c> in</c><00:19:03.880><c> the</c>

00:19:04.070 --> 00:19:04.080 align:start position:0%
equally so addition is a branch in the
 

00:19:04.080 --> 00:19:06.230 align:start position:0%
equally so addition is a branch in the
gradients<00:19:05.000><c> and</c><00:19:05.120><c> so</c><00:19:05.280><c> that</c><00:19:05.400><c> means</c><00:19:05.799><c> that</c><00:19:06.120><c> the</c>

00:19:06.230 --> 00:19:06.240 align:start position:0%
gradients and so that means that the
 

00:19:06.240 --> 00:19:08.669 align:start position:0%
gradients and so that means that the
gradients<00:19:06.600><c> from</c><00:19:06.760><c> the</c><00:19:06.960><c> top</c><00:19:07.440><c> flows</c><00:19:08.080><c> straight</c><00:19:08.480><c> to</c>

00:19:08.669 --> 00:19:08.679 align:start position:0%
gradients from the top flows straight to
 

00:19:08.679 --> 00:19:10.830 align:start position:0%
gradients from the top flows straight to
the<00:19:08.799><c> inputs</c><00:19:09.320><c> the</c><00:19:09.480><c> tokens</c><00:19:10.480><c> through</c><00:19:10.679><c> the</c>

00:19:10.830 --> 00:19:10.840 align:start position:0%
the inputs the tokens through the
 

00:19:10.840 --> 00:19:13.390 align:start position:0%
the inputs the tokens through the
residual<00:19:11.320><c> Pathways</c><00:19:12.039><c> unchanged</c><00:19:13.039><c> but</c><00:19:13.159><c> then</c><00:19:13.280><c> in</c>

00:19:13.390 --> 00:19:13.400 align:start position:0%
residual Pathways unchanged but then in
 

00:19:13.400 --> 00:19:14.950 align:start position:0%
residual Pathways unchanged but then in
addition<00:19:13.679><c> to</c><00:19:13.840><c> that</c><00:19:13.960><c> the</c><00:19:14.080><c> gradient</c><00:19:14.440><c> also</c><00:19:14.600><c> flows</c>

00:19:14.950 --> 00:19:14.960 align:start position:0%
addition to that the gradient also flows
 

00:19:14.960 --> 00:19:16.990 align:start position:0%
addition to that the gradient also flows
through<00:19:15.159><c> the</c><00:19:15.280><c> blocks</c><00:19:15.799><c> and</c><00:19:15.919><c> the</c><00:19:16.039><c> blocks</c><00:19:16.919><c> you</c>

00:19:16.990 --> 00:19:17.000 align:start position:0%
through the blocks and the blocks you
 

00:19:17.000 --> 00:19:18.669 align:start position:0%
through the blocks and the blocks you
know<00:19:17.159><c> contribute</c><00:19:17.640><c> their</c><00:19:17.799><c> own</c><00:19:18.200><c> contribution</c>

00:19:18.669 --> 00:19:18.679 align:start position:0%
know contribute their own contribution
 

00:19:18.679 --> 00:19:20.110 align:start position:0%
know contribute their own contribution
over<00:19:18.919><c> time</c><00:19:19.080><c> and</c><00:19:19.280><c> kick</c><00:19:19.480><c> in</c><00:19:19.679><c> and</c><00:19:19.799><c> change</c><00:19:20.000><c> the</c>

00:19:20.110 --> 00:19:20.120 align:start position:0%
over time and kick in and change the
 

00:19:20.120 --> 00:19:22.310 align:start position:0%
over time and kick in and change the
optimization<00:19:20.679><c> over</c><00:19:20.880><c> time</c><00:19:21.760><c> but</c><00:19:21.960><c> basically</c>

00:19:22.310 --> 00:19:22.320 align:start position:0%
optimization over time but basically
 

00:19:22.320 --> 00:19:25.310 align:start position:0%
optimization over time but basically
clean<00:19:22.760><c> residual</c><00:19:23.520><c> pathway</c><00:19:23.960><c> is</c><00:19:24.360><c> desirable</c><00:19:25.159><c> from</c>

00:19:25.310 --> 00:19:25.320 align:start position:0%
clean residual pathway is desirable from
 

00:19:25.320 --> 00:19:28.710 align:start position:0%
clean residual pathway is desirable from
an<00:19:25.440><c> optimization</c><00:19:26.240><c> perspective</c><00:19:27.240><c> and</c><00:19:27.559><c> then</c><00:19:28.559><c> the</c>

00:19:28.710 --> 00:19:28.720 align:start position:0%
an optimization perspective and then the
 

00:19:28.720 --> 00:19:30.909 align:start position:0%
an optimization perspective and then the
this<00:19:28.799><c> is</c><00:19:28.880><c> the</c><00:19:29.080><c> pre-normalization</c><00:19:30.080><c> version</c>

00:19:30.909 --> 00:19:30.919 align:start position:0%
this is the pre-normalization version
 

00:19:30.919 --> 00:19:32.750 align:start position:0%
this is the pre-normalization version
where<00:19:31.039><c> you</c><00:19:31.159><c> see</c><00:19:31.360><c> that</c><00:19:31.480><c> RX</c><00:19:32.159><c> first</c><00:19:32.400><c> goes</c><00:19:32.559><c> through</c>

00:19:32.750 --> 00:19:32.760 align:start position:0%
where you see that RX first goes through
 

00:19:32.760 --> 00:19:34.549 align:start position:0%
where you see that RX first goes through
the<00:19:32.840><c> layer</c><00:19:33.120><c> normalization</c><00:19:34.039><c> and</c><00:19:34.159><c> then</c><00:19:34.280><c> the</c>

00:19:34.549 --> 00:19:34.559 align:start position:0%
the layer normalization and then the
 

00:19:34.559 --> 00:19:38.070 align:start position:0%
the layer normalization and then the
attention<00:19:35.559><c> and</c><00:19:35.720><c> then</c><00:19:35.960><c> goes</c><00:19:36.600><c> uh</c><00:19:36.960><c> back</c><00:19:37.200><c> out</c><00:19:37.799><c> to</c>

00:19:38.070 --> 00:19:38.080 align:start position:0%
attention and then goes uh back out to
 

00:19:38.080 --> 00:19:40.870 align:start position:0%
attention and then goes uh back out to
go<00:19:38.200><c> to</c><00:19:38.320><c> the</c><00:19:38.440><c> L</c><00:19:38.720><c> ration</c><00:19:39.200><c> number</c><00:19:39.400><c> two</c><00:19:40.280><c> and</c><00:19:40.520><c> the</c>

00:19:40.870 --> 00:19:40.880 align:start position:0%
go to the L ration number two and the
 

00:19:40.880 --> 00:19:43.149 align:start position:0%
go to the L ration number two and the
multia<00:19:41.640><c> perceptron</c><00:19:42.640><c> sometimes</c><00:19:42.919><c> also</c>

00:19:43.149 --> 00:19:43.159 align:start position:0%
multia perceptron sometimes also
 

00:19:43.159 --> 00:19:44.830 align:start position:0%
multia perceptron sometimes also
referred<00:19:43.520><c> to</c><00:19:43.640><c> as</c><00:19:43.760><c> a</c><00:19:43.840><c> feed</c><00:19:44.080><c> forward</c><00:19:44.360><c> Network</c><00:19:44.720><c> or</c>

00:19:44.830 --> 00:19:44.840 align:start position:0%
referred to as a feed forward Network or
 

00:19:44.840 --> 00:19:47.750 align:start position:0%
referred to as a feed forward Network or
an<00:19:45.280><c> FFN</c><00:19:46.280><c> and</c><00:19:46.480><c> then</c><00:19:46.840><c> that</c><00:19:47.039><c> goes</c><00:19:47.400><c> into</c><00:19:47.640><c> the</c>

00:19:47.750 --> 00:19:47.760 align:start position:0%
an FFN and then that goes into the
 

00:19:47.760 --> 00:19:50.350 align:start position:0%
an FFN and then that goes into the
residual<00:19:48.120><c> stream</c><00:19:48.840><c> again</c><00:19:49.840><c> and</c><00:19:50.000><c> the</c><00:19:50.120><c> one</c><00:19:50.200><c> more</c>

00:19:50.350 --> 00:19:50.360 align:start position:0%
residual stream again and the one more
 

00:19:50.360 --> 00:19:51.350 align:start position:0%
residual stream again and the one more
thing<00:19:50.480><c> that</c><00:19:50.559><c> is</c><00:19:50.679><c> kind</c><00:19:50.799><c> of</c><00:19:50.919><c> interesting</c><00:19:51.240><c> to</c>

00:19:51.350 --> 00:19:51.360 align:start position:0%
thing that is kind of interesting to
 

00:19:51.360 --> 00:19:53.710 align:start position:0%
thing that is kind of interesting to
note<00:19:51.640><c> is</c><00:19:51.840><c> that</c><00:19:52.400><c> recall</c><00:19:52.799><c> that</c><00:19:53.000><c> attention</c><00:19:53.440><c> is</c><00:19:53.559><c> a</c>

00:19:53.710 --> 00:19:53.720 align:start position:0%
note is that recall that attention is a
 

00:19:53.720 --> 00:19:55.870 align:start position:0%
note is that recall that attention is a
communication<00:19:54.360><c> operation</c><00:19:55.200><c> it</c><00:19:55.280><c> is</c><00:19:55.480><c> where</c><00:19:55.720><c> all</c>

00:19:55.870 --> 00:19:55.880 align:start position:0%
communication operation it is where all
 

00:19:55.880 --> 00:19:58.470 align:start position:0%
communication operation it is where all
the<00:19:56.039><c> tokens</c><00:19:56.679><c> and</c><00:19:56.799><c> there's</c><00:19:57.039><c> 1,24</c><00:19:57.880><c> tokens</c><00:19:58.240><c> lined</c>

00:19:58.470 --> 00:19:58.480 align:start position:0%
the tokens and there's 1,24 tokens lined
 

00:19:58.480 --> 00:20:00.830 align:start position:0%
the tokens and there's 1,24 tokens lined
up<00:19:59.000><c> in</c><00:19:59.080><c> a</c><00:19:59.280><c> sequence</c><00:20:00.159><c> and</c><00:20:00.320><c> this</c><00:20:00.400><c> is</c><00:20:00.520><c> where</c><00:20:00.679><c> the</c>

00:20:00.830 --> 00:20:00.840 align:start position:0%
up in a sequence and this is where the
 

00:20:00.840 --> 00:20:02.390 align:start position:0%
up in a sequence and this is where the
tokens<00:20:01.280><c> communicate</c><00:20:01.880><c> this</c><00:20:01.960><c> is</c><00:20:02.080><c> where</c><00:20:02.240><c> they</c>

00:20:02.390 --> 00:20:02.400 align:start position:0%
tokens communicate this is where they
 

00:20:02.400 --> 00:20:06.029 align:start position:0%
tokens communicate this is where they
exchange<00:20:02.840><c> information</c><00:20:03.840><c> so</c><00:20:04.240><c> attention</c><00:20:04.760><c> is</c><00:20:05.039><c> a</c>

00:20:06.029 --> 00:20:06.039 align:start position:0%
exchange information so attention is a
 

00:20:06.039 --> 00:20:08.590 align:start position:0%
exchange information so attention is a
um<00:20:06.520><c> aggregation</c><00:20:07.200><c> function</c><00:20:07.760><c> it's</c><00:20:07.880><c> a</c><00:20:08.080><c> pooling</c>

00:20:08.590 --> 00:20:08.600 align:start position:0%
um aggregation function it's a pooling
 

00:20:08.600 --> 00:20:12.029 align:start position:0%
um aggregation function it's a pooling
function<00:20:09.400><c> it's</c><00:20:09.600><c> a</c><00:20:09.840><c> weighted</c><00:20:10.480><c> sum</c><00:20:11.159><c> function</c><00:20:11.960><c> it</c>

00:20:12.029 --> 00:20:12.039 align:start position:0%
function it's a weighted sum function it
 

00:20:12.039 --> 00:20:16.789 align:start position:0%
function it's a weighted sum function it
is<00:20:12.240><c> a</c><00:20:12.520><c> reduce</c><00:20:13.679><c> operation</c><00:20:14.679><c> whereas</c><00:20:15.120><c> MLP</c><00:20:16.120><c> this</c>

00:20:16.789 --> 00:20:16.799 align:start position:0%
is a reduce operation whereas MLP this
 

00:20:16.799 --> 00:20:18.710 align:start position:0%
is a reduce operation whereas MLP this
uh<00:20:16.919><c> MLP</c><00:20:17.480><c> here</c><00:20:17.799><c> happens</c><00:20:18.080><c> at</c><00:20:18.280><c> every</c><00:20:18.440><c> single</c>

00:20:18.710 --> 00:20:18.720 align:start position:0%
uh MLP here happens at every single
 

00:20:18.720 --> 00:20:19.990 align:start position:0%
uh MLP here happens at every single
token<00:20:19.039><c> individually</c><00:20:19.640><c> there's</c><00:20:19.840><c> no</c>

00:20:19.990 --> 00:20:20.000 align:start position:0%
token individually there's no
 

00:20:20.000 --> 00:20:21.950 align:start position:0%
token individually there's no
information<00:20:20.440><c> being</c><00:20:20.760><c> collected</c><00:20:21.280><c> or</c><00:20:21.480><c> exchanged</c>

00:20:21.950 --> 00:20:21.960 align:start position:0%
information being collected or exchanged
 

00:20:21.960 --> 00:20:24.549 align:start position:0%
information being collected or exchanged
between<00:20:22.200><c> the</c><00:20:22.520><c> tokens</c><00:20:23.520><c> so</c><00:20:23.720><c> the</c><00:20:23.840><c> attention</c><00:20:24.360><c> is</c>

00:20:24.549 --> 00:20:24.559 align:start position:0%
between the tokens so the attention is
 

00:20:24.559 --> 00:20:27.470 align:start position:0%
between the tokens so the attention is
the<00:20:24.799><c> reduce</c><00:20:25.600><c> and</c><00:20:25.720><c> the</c><00:20:25.840><c> MLP</c><00:20:26.360><c> is</c><00:20:26.520><c> the</c><00:20:26.679><c> map</c><00:20:27.360><c> and</c>

00:20:27.470 --> 00:20:27.480 align:start position:0%
the reduce and the MLP is the map and
 

00:20:27.480 --> 00:20:28.630 align:start position:0%
the reduce and the MLP is the map and
what<00:20:27.559><c> you</c><00:20:27.679><c> end</c><00:20:27.880><c> up</c><00:20:28.039><c> with</c><00:20:28.200><c> is</c><00:20:28.320><c> that</c><00:20:28.440><c> the</c>

00:20:28.630 --> 00:20:28.640 align:start position:0%
what you end up with is that the
 

00:20:28.640 --> 00:20:30.789 align:start position:0%
what you end up with is that the
Transformer<00:20:29.400><c> just</c><00:20:29.640><c> ends</c><00:20:29.840><c> up</c><00:20:30.039><c> just</c><00:20:30.159><c> being</c><00:20:30.679><c> a</c>

00:20:30.789 --> 00:20:30.799 align:start position:0%
Transformer just ends up just being a
 

00:20:30.799 --> 00:20:33.390 align:start position:0%
Transformer just ends up just being a
repeated<00:20:31.200><c> application</c><00:20:31.559><c> of</c><00:20:31.679><c> map</c><00:20:32.320><c> produce</c><00:20:33.320><c> if</c>

00:20:33.390 --> 00:20:33.400 align:start position:0%
repeated application of map produce if
 

00:20:33.400 --> 00:20:36.029 align:start position:0%
repeated application of map produce if
you<00:20:33.480><c> want</c><00:20:33.559><c> to</c><00:20:33.679><c> think</c><00:20:33.840><c> about</c><00:20:33.960><c> it</c><00:20:34.159><c> that</c><00:20:34.320><c> way</c><00:20:35.039><c> so</c>

00:20:36.029 --> 00:20:36.039 align:start position:0%
you want to think about it that way so
 

00:20:36.039 --> 00:20:37.549 align:start position:0%
you want to think about it that way so
um<00:20:36.440><c> this</c><00:20:36.559><c> is</c><00:20:36.720><c> where</c><00:20:36.840><c> they</c><00:20:36.960><c> communicate</c><00:20:37.440><c> and</c>

00:20:37.549 --> 00:20:37.559 align:start position:0%
um this is where they communicate and
 

00:20:37.559 --> 00:20:39.430 align:start position:0%
um this is where they communicate and
this<00:20:37.640><c> is</c><00:20:37.799><c> where</c><00:20:37.960><c> they</c><00:20:38.159><c> think</c><00:20:38.559><c> individually</c>

00:20:39.430 --> 00:20:39.440 align:start position:0%
this is where they think individually
 

00:20:39.440 --> 00:20:41.190 align:start position:0%
this is where they think individually
about<00:20:39.640><c> the</c><00:20:39.760><c> information</c><00:20:40.120><c> that</c><00:20:40.240><c> they</c><00:20:40.400><c> gathered</c>

00:20:41.190 --> 00:20:41.200 align:start position:0%
about the information that they gathered
 

00:20:41.200 --> 00:20:43.350 align:start position:0%
about the information that they gathered
and<00:20:41.760><c> every</c><00:20:41.919><c> one</c><00:20:42.039><c> of</c><00:20:42.200><c> these</c><00:20:42.360><c> blocks</c><00:20:43.200><c> uh</c>

00:20:43.350 --> 00:20:43.360 align:start position:0%
and every one of these blocks uh
 

00:20:43.360 --> 00:20:46.149 align:start position:0%
and every one of these blocks uh
iteratively<00:20:44.159><c> refines</c><00:20:45.159><c> the</c><00:20:45.760><c> um</c>

00:20:46.149 --> 00:20:46.159 align:start position:0%
iteratively refines the um
 

00:20:46.159 --> 00:20:48.710 align:start position:0%
iteratively refines the um
representation<00:20:46.720><c> is</c><00:20:46.880><c> at</c><00:20:47.000><c> the</c><00:20:47.080><c> residual</c><00:20:47.720><c> stream</c>

00:20:48.710 --> 00:20:48.720 align:start position:0%
representation is at the residual stream
 

00:20:48.720 --> 00:20:51.070 align:start position:0%
representation is at the residual stream
so<00:20:49.000><c> this</c><00:20:49.080><c> is</c><00:20:49.200><c> our</c><00:20:49.400><c> block</c><00:20:50.360><c> um</c><00:20:50.720><c> slightly</c>

00:20:51.070 --> 00:20:51.080 align:start position:0%
so this is our block um slightly
 

00:20:51.080 --> 00:20:53.590 align:start position:0%
so this is our block um slightly
modified<00:20:51.480><c> from</c><00:20:51.600><c> this</c><00:20:52.159><c> picture</c><00:20:53.159><c> Okay</c><00:20:53.240><c> so</c><00:20:53.400><c> let's</c>

00:20:53.590 --> 00:20:53.600 align:start position:0%
modified from this picture Okay so let's
 

00:20:53.600 --> 00:20:57.510 align:start position:0%
modified from this picture Okay so let's
now<00:20:53.720><c> move</c><00:20:53.960><c> on</c><00:20:54.120><c> to</c><00:20:54.360><c> the</c><00:20:54.960><c> MLP</c><00:20:55.960><c> so</c><00:20:56.159><c> the</c><00:20:56.280><c> MLP</c><00:20:56.720><c> block</c>

00:20:57.510 --> 00:20:57.520 align:start position:0%
now move on to the MLP so the MLP block
 

00:20:57.520 --> 00:20:59.110 align:start position:0%
now move on to the MLP so the MLP block
uh<00:20:57.640><c> I</c><00:20:57.760><c> implemented</c><00:20:58.240><c> as</c><00:20:58.360><c> follows</c>

00:20:59.110 --> 00:20:59.120 align:start position:0%
uh I implemented as follows
 

00:20:59.120 --> 00:21:00.710 align:start position:0%
uh I implemented as follows
it<00:20:59.240><c> is</c><00:20:59.440><c> relatively</c><00:20:59.840><c> straightforward</c><00:21:00.559><c> we</c>

00:21:00.710 --> 00:21:00.720 align:start position:0%
it is relatively straightforward we
 

00:21:00.720 --> 00:21:02.789 align:start position:0%
it is relatively straightforward we
basically<00:21:01.080><c> have</c><00:21:01.320><c> two</c><00:21:01.640><c> linear</c><00:21:02.240><c> projections</c>

00:21:02.789 --> 00:21:02.799 align:start position:0%
basically have two linear projections
 

00:21:02.799 --> 00:21:05.110 align:start position:0%
basically have two linear projections
here<00:21:03.159><c> that</c><00:21:03.280><c> are</c><00:21:03.440><c> sandwiched</c><00:21:04.000><c> in</c><00:21:04.120><c> between</c><00:21:04.919><c> the</c>

00:21:05.110 --> 00:21:05.120 align:start position:0%
here that are sandwiched in between the
 

00:21:05.120 --> 00:21:06.390 align:start position:0%
here that are sandwiched in between the
G

00:21:06.390 --> 00:21:06.400 align:start position:0%
G
 

00:21:06.400 --> 00:21:11.110 align:start position:0%
G
nonlinearity<00:21:07.400><c> so</c><00:21:07.919><c> nn.</c><00:21:08.520><c> G</c><00:21:09.000><c> approximate</c><00:21:09.559><c> is</c><00:21:10.120><c> 10h</c>

00:21:11.110 --> 00:21:11.120 align:start position:0%
nonlinearity so nn. G approximate is 10h
 

00:21:11.120 --> 00:21:13.190 align:start position:0%
nonlinearity so nn. G approximate is 10h
now<00:21:11.279><c> when</c><00:21:11.400><c> we</c><00:21:11.520><c> swing</c><00:21:11.840><c> on</c><00:21:12.320><c> uh</c><00:21:12.440><c> swing</c><00:21:12.679><c> over</c><00:21:12.960><c> to</c>

00:21:13.190 --> 00:21:13.200 align:start position:0%
now when we swing on uh swing over to
 

00:21:13.200 --> 00:21:16.470 align:start position:0%
now when we swing on uh swing over to
the<00:21:13.600><c> Pyro</c><00:21:14.200><c> documentation</c><00:21:15.200><c> this</c><00:21:15.320><c> is</c><00:21:15.480><c> n.g</c><00:21:16.360><c> and</c>

00:21:16.470 --> 00:21:16.480 align:start position:0%
the Pyro documentation this is n.g and
 

00:21:16.480 --> 00:21:18.350 align:start position:0%
the Pyro documentation this is n.g and
it<00:21:16.600><c> has</c><00:21:16.799><c> this</c><00:21:16.960><c> format</c><00:21:17.799><c> and</c><00:21:17.919><c> it</c><00:21:18.039><c> has</c><00:21:18.200><c> two</c>

00:21:18.350 --> 00:21:18.360 align:start position:0%
it has this format and it has two
 

00:21:18.360 --> 00:21:20.510 align:start position:0%
it has this format and it has two
versions<00:21:19.120><c> the</c><00:21:19.240><c> original</c><00:21:19.640><c> version</c><00:21:19.880><c> of</c><00:21:20.000><c> G</c><00:21:20.400><c> which</c>

00:21:20.510 --> 00:21:20.520 align:start position:0%
versions the original version of G which
 

00:21:20.520 --> 00:21:22.830 align:start position:0%
versions the original version of G which
we'll<00:21:20.720><c> step</c><00:21:20.960><c> into</c><00:21:21.279><c> into</c><00:21:21.559><c> in</c><00:21:21.679><c> a</c><00:21:21.840><c> bit</c><00:21:22.400><c> and</c><00:21:22.679><c> the</c>

00:21:22.830 --> 00:21:22.840 align:start position:0%
we'll step into into in a bit and the
 

00:21:22.840 --> 00:21:24.510 align:start position:0%
we'll step into into in a bit and the
approximate<00:21:23.320><c> version</c><00:21:23.559><c> of</c><00:21:23.679><c> Galo</c><00:21:24.120><c> which</c><00:21:24.240><c> we</c><00:21:24.320><c> can</c>

00:21:24.510 --> 00:21:24.520 align:start position:0%
approximate version of Galo which we can
 

00:21:24.520 --> 00:21:25.750 align:start position:0%
approximate version of Galo which we can
request<00:21:24.840><c> using</c>

00:21:25.750 --> 00:21:25.760 align:start position:0%
request using
 

00:21:25.760 --> 00:21:28.590 align:start position:0%
request using
10<00:21:26.760><c> so</c><00:21:27.159><c> as</c><00:21:27.279><c> you</c><00:21:27.360><c> can</c><00:21:27.480><c> see</c><00:21:27.760><c> just</c><00:21:27.919><c> as</c><00:21:28.000><c> a</c><00:21:28.120><c> preview</c>

00:21:28.590 --> 00:21:28.600 align:start position:0%
10 so as you can see just as a preview
 

00:21:28.600 --> 00:21:32.230 align:start position:0%
10 so as you can see just as a preview
here<00:21:28.840><c> G</c><00:21:29.679><c> is</c><00:21:30.039><c> a</c><00:21:30.320><c> basically</c><00:21:30.840><c> like</c><00:21:30.960><c> a</c><00:21:31.120><c> reu</c><00:21:31.919><c> except</c>

00:21:32.230 --> 00:21:32.240 align:start position:0%
here G is a basically like a reu except
 

00:21:32.240 --> 00:21:35.750 align:start position:0%
here G is a basically like a reu except
there's<00:21:32.480><c> no</c><00:21:32.799><c> flat</c><00:21:33.480><c> exactly</c><00:21:33.960><c> Flat</c><00:21:34.679><c> Tail</c><00:21:35.279><c> here</c>

00:21:35.750 --> 00:21:35.760 align:start position:0%
there's no flat exactly Flat Tail here
 

00:21:35.760 --> 00:21:38.430 align:start position:0%
there's no flat exactly Flat Tail here
at<00:21:36.039><c> exactly</c><00:21:36.679><c> zero</c><00:21:37.679><c> but</c><00:21:37.840><c> otherwise</c><00:21:38.120><c> it</c><00:21:38.200><c> looks</c>

00:21:38.430 --> 00:21:38.440 align:start position:0%
at exactly zero but otherwise it looks
 

00:21:38.440 --> 00:21:41.110 align:start position:0%
at exactly zero but otherwise it looks
very<00:21:38.600><c> much</c><00:21:38.799><c> like</c><00:21:39.039><c> a</c><00:21:39.200><c> slightly</c><00:21:39.520><c> smoother</c><00:21:40.120><c> reu</c>

00:21:41.110 --> 00:21:41.120 align:start position:0%
very much like a slightly smoother reu
 

00:21:41.120 --> 00:21:43.830 align:start position:0%
very much like a slightly smoother reu
it<00:21:41.279><c> comes</c><00:21:41.480><c> from</c><00:21:41.679><c> this</c><00:21:41.880><c> paper</c><00:21:42.200><c> here</c><00:21:42.960><c> Gan</c><00:21:43.520><c> error</c>

00:21:43.830 --> 00:21:43.840 align:start position:0%
it comes from this paper here Gan error
 

00:21:43.840 --> 00:21:46.630 align:start position:0%
it comes from this paper here Gan error
linear<00:21:44.240><c> units</c><00:21:45.240><c> and</c><00:21:45.799><c> uh</c><00:21:45.880><c> you</c><00:21:46.000><c> can</c><00:21:46.120><c> step</c><00:21:46.400><c> through</c>

00:21:46.630 --> 00:21:46.640 align:start position:0%
linear units and uh you can step through
 

00:21:46.640 --> 00:21:48.190 align:start position:0%
linear units and uh you can step through
this<00:21:46.799><c> paper</c><00:21:47.039><c> and</c><00:21:47.159><c> there's</c><00:21:47.360><c> some</c><00:21:47.679><c> mathematical</c>

00:21:48.190 --> 00:21:48.200 align:start position:0%
this paper and there's some mathematical
 

00:21:48.200 --> 00:21:50.430 align:start position:0%
this paper and there's some mathematical
calac<00:21:48.600><c> reasoning</c><00:21:49.039><c> that</c><00:21:49.200><c> leads</c><00:21:49.520><c> to</c><00:21:50.279><c> an</c>

00:21:50.430 --> 00:21:50.440 align:start position:0%
calac reasoning that leads to an
 

00:21:50.440 --> 00:21:51.590 align:start position:0%
calac reasoning that leads to an
interpretation<00:21:50.960><c> that</c><00:21:51.080><c> leads</c><00:21:51.320><c> to</c><00:21:51.400><c> the</c>

00:21:51.590 --> 00:21:51.600 align:start position:0%
interpretation that leads to the
 

00:21:51.600 --> 00:21:53.909 align:start position:0%
interpretation that leads to the
specific<00:21:51.960><c> formulation</c><00:21:52.960><c> it</c><00:21:53.080><c> has</c><00:21:53.240><c> to</c><00:21:53.400><c> do</c><00:21:53.679><c> with</c>

00:21:53.909 --> 00:21:53.919 align:start position:0%
specific formulation it has to do with
 

00:21:53.919 --> 00:21:56.070 align:start position:0%
specific formulation it has to do with
stochastic<00:21:54.400><c> radial</c><00:21:54.760><c> risers</c><00:21:55.720><c> and</c><00:21:55.919><c> the</c>

00:21:56.070 --> 00:21:56.080 align:start position:0%
stochastic radial risers and the
 

00:21:56.080 --> 00:21:57.470 align:start position:0%
stochastic radial risers and the
expectation<00:21:56.520><c> of</c><00:21:56.640><c> a</c><00:21:56.799><c> modification</c><00:21:57.279><c> to</c>

00:21:57.470 --> 00:21:57.480 align:start position:0%
expectation of a modification to
 

00:21:57.480 --> 00:21:59.230 align:start position:0%
expectation of a modification to
Adaptive<00:21:57.840><c> dropout</c><00:21:58.600><c> so</c><00:21:58.679><c> you</c><00:21:58.760><c> can</c><00:21:58.880><c> read</c><00:21:59.080><c> through</c>

00:21:59.230 --> 00:21:59.240 align:start position:0%
Adaptive dropout so you can read through
 

00:21:59.240 --> 00:22:01.830 align:start position:0%
Adaptive dropout so you can read through
all<00:21:59.360><c> of</c><00:21:59.480><c> that</c><00:21:59.640><c> if</c><00:21:59.720><c> you'd</c><00:21:59.919><c> like</c><00:22:00.600><c> here</c><00:22:01.600><c> and</c>

00:22:01.830 --> 00:22:01.840 align:start position:0%
all of that if you'd like here and
 

00:22:01.840 --> 00:22:03.350 align:start position:0%
all of that if you'd like here and
there's<00:22:02.000><c> a</c><00:22:02.120><c> little</c><00:22:02.279><c> bit</c><00:22:02.400><c> of</c><00:22:02.600><c> history</c><00:22:03.039><c> as</c><00:22:03.159><c> to</c>

00:22:03.350 --> 00:22:03.360 align:start position:0%
there's a little bit of history as to
 

00:22:03.360 --> 00:22:05.190 align:start position:0%
there's a little bit of history as to
why<00:22:03.520><c> there</c><00:22:03.600><c> is</c><00:22:03.720><c> an</c><00:22:04.279><c> an</c><00:22:04.440><c> approximate</c><00:22:04.960><c> version</c>

00:22:05.190 --> 00:22:05.200 align:start position:0%
why there is an an approximate version
 

00:22:05.200 --> 00:22:08.310 align:start position:0%
why there is an an approximate version
of<00:22:05.320><c> G</c><00:22:06.080><c> and</c><00:22:06.320><c> that</c><00:22:06.559><c> comes</c><00:22:06.799><c> from</c><00:22:07.039><c> this</c><00:22:07.279><c> issue</c><00:22:07.679><c> here</c>

00:22:08.310 --> 00:22:08.320 align:start position:0%
of G and that comes from this issue here
 

00:22:08.320 --> 00:22:11.510 align:start position:0%
of G and that comes from this issue here
as<00:22:08.480><c> far</c><00:22:08.600><c> as</c><00:22:08.679><c> I</c><00:22:08.760><c> can</c><00:22:09.320><c> tell</c><00:22:10.320><c> and</c><00:22:10.480><c> in</c><00:22:10.679><c> this</c><00:22:10.880><c> issue</c>

00:22:11.510 --> 00:22:11.520 align:start position:0%
as far as I can tell and in this issue
 

00:22:11.520 --> 00:22:14.230 align:start position:0%
as far as I can tell and in this issue
Daniel<00:22:11.799><c> Hendrix</c><00:22:12.240><c> mentions</c><00:22:13.159><c> that</c><00:22:13.760><c> at</c><00:22:13.919><c> the</c><00:22:14.080><c> time</c>

00:22:14.230 --> 00:22:14.240 align:start position:0%
Daniel Hendrix mentions that at the time
 

00:22:14.240 --> 00:22:16.990 align:start position:0%
Daniel Hendrix mentions that at the time
when<00:22:14.400><c> they</c><00:22:14.600><c> developed</c><00:22:15.080><c> this</c><00:22:16.000><c> nonlinearity</c>

00:22:16.990 --> 00:22:17.000 align:start position:0%
when they developed this nonlinearity
 

00:22:17.000 --> 00:22:18.990 align:start position:0%
when they developed this nonlinearity
the<00:22:17.240><c> Earth</c><00:22:17.799><c> function</c><00:22:18.320><c> which</c><00:22:18.440><c> you</c><00:22:18.559><c> need</c><00:22:18.799><c> to</c>

00:22:18.990 --> 00:22:19.000 align:start position:0%
the Earth function which you need to
 

00:22:19.000 --> 00:22:21.549 align:start position:0%
the Earth function which you need to
evaluate<00:22:19.480><c> the</c><00:22:19.760><c> exact</c><00:22:20.240><c> G</c><00:22:20.919><c> was</c><00:22:21.080><c> very</c><00:22:21.240><c> slow</c><00:22:21.440><c> in</c>

00:22:21.549 --> 00:22:21.559 align:start position:0%
evaluate the exact G was very slow in
 

00:22:21.559 --> 00:22:23.070 align:start position:0%
evaluate the exact G was very slow in
tensor<00:22:21.840><c> flow</c><00:22:22.080><c> so</c><00:22:22.240><c> they</c><00:22:22.360><c> ended</c><00:22:22.600><c> up</c><00:22:22.720><c> basically</c>

00:22:23.070 --> 00:22:23.080 align:start position:0%
tensor flow so they ended up basically
 

00:22:23.080 --> 00:22:25.149 align:start position:0%
tensor flow so they ended up basically
developing<00:22:23.480><c> this</c><00:22:23.880><c> approximation</c><00:22:24.880><c> and</c><00:22:25.000><c> this</c>

00:22:25.149 --> 00:22:25.159 align:start position:0%
developing this approximation and this
 

00:22:25.159 --> 00:22:27.029 align:start position:0%
developing this approximation and this
approximation<00:22:25.799><c> that</c><00:22:26.240><c> then</c><00:22:26.400><c> ended</c><00:22:26.640><c> up</c><00:22:26.799><c> being</c>

00:22:27.029 --> 00:22:27.039 align:start position:0%
approximation that then ended up being
 

00:22:27.039 --> 00:22:30.149 align:start position:0%
approximation that then ended up being
picked<00:22:27.320><c> up</c><00:22:27.559><c> by</c><00:22:27.679><c> Bert</c><00:22:28.000><c> and</c><00:22:28.120><c> by</c><00:22:28.200><c> GP</c><00:22:28.520><c> P2</c><00:22:28.960><c> Etc</c><00:22:29.960><c> but</c>

00:22:30.149 --> 00:22:30.159 align:start position:0%
picked up by Bert and by GP P2 Etc but
 

00:22:30.159 --> 00:22:31.630 align:start position:0%
picked up by Bert and by GP P2 Etc but
today<00:22:30.440><c> there's</c><00:22:30.640><c> no</c><00:22:30.799><c> real</c><00:22:31.000><c> good</c><00:22:31.159><c> reason</c><00:22:31.360><c> to</c><00:22:31.480><c> use</c>

00:22:31.630 --> 00:22:31.640 align:start position:0%
today there's no real good reason to use
 

00:22:31.640 --> 00:22:33.310 align:start position:0%
today there's no real good reason to use
the<00:22:31.760><c> approximate</c><00:22:32.200><c> version</c><00:22:32.679><c> you'd</c><00:22:32.919><c> prefer</c><00:22:33.159><c> to</c>

00:22:33.310 --> 00:22:33.320 align:start position:0%
the approximate version you'd prefer to
 

00:22:33.320 --> 00:22:36.710 align:start position:0%
the approximate version you'd prefer to
just<00:22:33.440><c> use</c><00:22:33.640><c> the</c><00:22:33.799><c> exact</c><00:22:34.279><c> version</c><00:22:35.279><c> um</c><00:22:35.720><c> because</c><00:22:36.120><c> I</c>

00:22:36.710 --> 00:22:36.720 align:start position:0%
just use the exact version um because I
 

00:22:36.720 --> 00:22:38.269 align:start position:0%
just use the exact version um because I
my<00:22:36.840><c> expectation</c><00:22:37.200><c> is</c><00:22:37.320><c> that</c><00:22:37.440><c> there's</c><00:22:37.679><c> no</c><00:22:38.039><c> big</c>

00:22:38.269 --> 00:22:38.279 align:start position:0%
my expectation is that there's no big
 

00:22:38.279 --> 00:22:40.070 align:start position:0%
my expectation is that there's no big
difference<00:22:38.640><c> anymore</c><00:22:39.520><c> and</c><00:22:39.640><c> this</c><00:22:39.760><c> is</c><00:22:39.880><c> kind</c><00:22:40.000><c> of</c>

00:22:40.070 --> 00:22:40.080 align:start position:0%
difference anymore and this is kind of
 

00:22:40.080 --> 00:22:43.830 align:start position:0%
difference anymore and this is kind of
like<00:22:40.200><c> a</c><00:22:40.640><c> historical</c><00:22:41.640><c> um</c><00:22:42.159><c> kind</c><00:22:42.240><c> of</c><00:22:42.559><c> Quirk</c><00:22:43.559><c> um</c>

00:22:43.830 --> 00:22:43.840 align:start position:0%
like a historical um kind of Quirk um
 

00:22:43.840 --> 00:22:45.630 align:start position:0%
like a historical um kind of Quirk um
but<00:22:43.960><c> we</c><00:22:44.080><c> are</c><00:22:44.240><c> trying</c><00:22:44.480><c> to</c><00:22:44.600><c> reproduce</c><00:22:44.960><c> gpt2</c>

00:22:45.630 --> 00:22:45.640 align:start position:0%
but we are trying to reproduce gpt2
 

00:22:45.640 --> 00:22:48.990 align:start position:0%
but we are trying to reproduce gpt2
exactly<00:22:46.400><c> and</c><00:22:46.559><c> gpt2</c><00:22:47.520><c> used</c><00:22:48.000><c> the</c><00:22:48.200><c> 10h</c>

00:22:48.990 --> 00:22:49.000 align:start position:0%
exactly and gpt2 used the 10h
 

00:22:49.000 --> 00:22:51.350 align:start position:0%
exactly and gpt2 used the 10h
approximate<00:22:49.520><c> version</c><00:22:49.880><c> so</c><00:22:50.080><c> we</c><00:22:50.880><c> prefer</c><00:22:51.200><c> to</c>

00:22:51.350 --> 00:22:51.360 align:start position:0%
approximate version so we prefer to
 

00:22:51.360 --> 00:22:52.390 align:start position:0%
approximate version so we prefer to
stick<00:22:51.640><c> with</c>

00:22:52.390 --> 00:22:52.400 align:start position:0%
stick with
 

00:22:52.400 --> 00:22:55.350 align:start position:0%
stick with
that<00:22:53.400><c> um</c><00:22:54.080><c> now</c><00:22:54.279><c> one</c><00:22:54.400><c> other</c><00:22:54.600><c> reason</c><00:22:54.799><c> to</c><00:22:55.039><c> actually</c>

00:22:55.350 --> 00:22:55.360 align:start position:0%
that um now one other reason to actually
 

00:22:55.360 --> 00:22:57.549 align:start position:0%
that um now one other reason to actually
just<00:22:55.520><c> intuitively</c><00:22:56.039><c> use</c><00:22:56.279><c> G</c><00:22:56.760><c> instead</c><00:22:57.039><c> of</c><00:22:57.159><c> veru</c>

00:22:57.549 --> 00:22:57.559 align:start position:0%
just intuitively use G instead of veru
 

00:22:57.559 --> 00:22:59.669 align:start position:0%
just intuitively use G instead of veru
is<00:22:57.760><c> previously</c><00:22:58.159><c> in</c><00:22:58.279><c> the</c><00:22:58.880><c> in</c><00:22:59.080><c> videos</c><00:22:59.400><c> in</c><00:22:59.520><c> the</c>

00:22:59.669 --> 00:22:59.679 align:start position:0%
is previously in the in videos in the
 

00:22:59.679 --> 00:23:02.029 align:start position:0%
is previously in the in videos in the
past<00:22:59.880><c> we've</c><00:23:00.080><c> spoken</c><00:23:00.400><c> about</c><00:23:00.760><c> the</c><00:23:00.960><c> dead</c><00:23:01.320><c> reu</c>

00:23:02.029 --> 00:23:02.039 align:start position:0%
past we've spoken about the dead reu
 

00:23:02.039 --> 00:23:04.830 align:start position:0%
past we've spoken about the dead reu
neuron<00:23:02.559><c> problem</c><00:23:03.520><c> where</c><00:23:03.960><c> in</c><00:23:04.159><c> this</c><00:23:04.320><c> tale</c><00:23:04.600><c> of</c><00:23:04.720><c> a</c>

00:23:04.830 --> 00:23:04.840 align:start position:0%
neuron problem where in this tale of a
 

00:23:04.840 --> 00:23:07.750 align:start position:0%
neuron problem where in this tale of a
reu<00:23:05.320><c> if</c><00:23:05.400><c> it's</c><00:23:05.640><c> exactly</c><00:23:06.080><c> flat</c><00:23:06.520><c> at</c><00:23:06.679><c> zero</c><00:23:07.480><c> any</c>

00:23:07.750 --> 00:23:07.760 align:start position:0%
reu if it's exactly flat at zero any
 

00:23:07.760 --> 00:23:09.789 align:start position:0%
reu if it's exactly flat at zero any
activations<00:23:08.240><c> that</c><00:23:08.400><c> fall</c><00:23:08.840><c> there</c><00:23:09.320><c> will</c><00:23:09.559><c> get</c>

00:23:09.789 --> 00:23:09.799 align:start position:0%
activations that fall there will get
 

00:23:09.799 --> 00:23:11.590 align:start position:0%
activations that fall there will get
exactly<00:23:10.159><c> zero</c><00:23:10.440><c> gradient</c><00:23:10.919><c> there's</c><00:23:11.120><c> no</c><00:23:11.279><c> change</c>

00:23:11.590 --> 00:23:11.600 align:start position:0%
exactly zero gradient there's no change
 

00:23:11.600 --> 00:23:13.470 align:start position:0%
exactly zero gradient there's no change
there's<00:23:11.760><c> no</c><00:23:12.000><c> adaptation</c><00:23:12.559><c> there's</c><00:23:12.799><c> no</c>

00:23:13.470 --> 00:23:13.480 align:start position:0%
there's no adaptation there's no
 

00:23:13.480 --> 00:23:15.470 align:start position:0%
there's no adaptation there's no
development<00:23:14.039><c> of</c><00:23:14.159><c> the</c><00:23:14.240><c> network</c><00:23:15.039><c> if</c><00:23:15.200><c> any</c><00:23:15.360><c> of</c>

00:23:15.470 --> 00:23:15.480 align:start position:0%
development of the network if any of
 

00:23:15.480 --> 00:23:17.310 align:start position:0%
development of the network if any of
these<00:23:15.640><c> activations</c><00:23:16.240><c> end</c><00:23:16.600><c> in</c><00:23:16.840><c> this</c><00:23:17.000><c> flat</c>

00:23:17.310 --> 00:23:17.320 align:start position:0%
these activations end in this flat
 

00:23:17.320 --> 00:23:20.149 align:start position:0%
these activations end in this flat
region<00:23:18.320><c> but</c><00:23:18.480><c> the</c><00:23:18.640><c> G</c><00:23:19.120><c> always</c><00:23:19.520><c> contributes</c><00:23:20.000><c> a</c>

00:23:20.149 --> 00:23:20.159 align:start position:0%
region but the G always contributes a
 

00:23:20.159 --> 00:23:22.029 align:start position:0%
region but the G always contributes a
local<00:23:20.520><c> gradient</c><00:23:21.240><c> and</c><00:23:21.360><c> so</c><00:23:21.559><c> there's</c><00:23:21.799><c> always</c>

00:23:22.029 --> 00:23:22.039 align:start position:0%
local gradient and so there's always
 

00:23:22.039 --> 00:23:23.430 align:start position:0%
local gradient and so there's always
going<00:23:22.120><c> to</c><00:23:22.240><c> be</c><00:23:22.320><c> a</c><00:23:22.480><c> change</c><00:23:22.919><c> always</c><00:23:23.159><c> going</c><00:23:23.279><c> to</c><00:23:23.360><c> be</c>

00:23:23.430 --> 00:23:23.440 align:start position:0%
going to be a change always going to be
 

00:23:23.440 --> 00:23:25.470 align:start position:0%
going to be a change always going to be
an<00:23:23.559><c> adaptation</c><00:23:24.520><c> and</c><00:23:24.679><c> sort</c><00:23:24.840><c> of</c><00:23:24.960><c> smoothing</c><00:23:25.360><c> it</c>

00:23:25.470 --> 00:23:25.480 align:start position:0%
an adaptation and sort of smoothing it
 

00:23:25.480 --> 00:23:27.350 align:start position:0%
an adaptation and sort of smoothing it
out<00:23:25.880><c> ends</c><00:23:26.080><c> up</c><00:23:26.279><c> empirically</c><00:23:26.799><c> working</c><00:23:27.120><c> better</c>

00:23:27.350 --> 00:23:27.360 align:start position:0%
out ends up empirically working better
 

00:23:27.360 --> 00:23:29.110 align:start position:0%
out ends up empirically working better
in<00:23:27.600><c> practice</c><00:23:28.159><c> as</c><00:23:28.520><c> demonstrated</c><00:23:28.880><c> in</c><00:23:28.960><c> this</c>

00:23:29.110 --> 00:23:29.120 align:start position:0%
in practice as demonstrated in this
 

00:23:29.120 --> 00:23:31.230 align:start position:0%
in practice as demonstrated in this
paper<00:23:29.720><c> and</c><00:23:29.960><c> also</c><00:23:30.240><c> as</c><00:23:30.400><c> demonstrated</c><00:23:30.919><c> by</c><00:23:31.080><c> it</c>

00:23:31.230 --> 00:23:31.240 align:start position:0%
paper and also as demonstrated by it
 

00:23:31.240 --> 00:23:33.510 align:start position:0%
paper and also as demonstrated by it
being<00:23:31.480><c> picked</c><00:23:31.720><c> up</c><00:23:32.240><c> by</c><00:23:32.360><c> the</c><00:23:32.520><c> bird</c><00:23:32.760><c> paper</c><00:23:33.000><c> gbt2</c>

00:23:33.510 --> 00:23:33.520 align:start position:0%
being picked up by the bird paper gbt2
 

00:23:33.520 --> 00:23:35.789 align:start position:0%
being picked up by the bird paper gbt2
paper<00:23:33.760><c> and</c><00:23:33.919><c> so</c><00:23:34.039><c> on</c><00:23:34.760><c> so</c><00:23:34.960><c> for</c><00:23:35.159><c> that</c><00:23:35.279><c> reason</c><00:23:35.559><c> we</c>

00:23:35.789 --> 00:23:35.799 align:start position:0%
paper and so on so for that reason we
 

00:23:35.799 --> 00:23:38.310 align:start position:0%
paper and so on so for that reason we
adopt<00:23:36.200><c> this</c><00:23:36.640><c> nonlinearity</c><00:23:37.640><c> uh</c><00:23:37.840><c> here</c><00:23:38.039><c> in</c><00:23:38.200><c> the</c>

00:23:38.310 --> 00:23:38.320 align:start position:0%
adopt this nonlinearity uh here in the
 

00:23:38.320 --> 00:23:40.990 align:start position:0%
adopt this nonlinearity uh here in the
10<00:23:38.720><c> in</c><00:23:38.799><c> the</c><00:23:38.919><c> gbt2</c><00:23:39.520><c> reproduction</c><00:23:40.520><c> now</c><00:23:40.679><c> in</c><00:23:40.799><c> more</c>

00:23:40.990 --> 00:23:41.000 align:start position:0%
10 in the gbt2 reproduction now in more
 

00:23:41.000 --> 00:23:43.029 align:start position:0%
10 in the gbt2 reproduction now in more
modern<00:23:41.360><c> networks</c><00:23:41.880><c> also</c><00:23:42.120><c> like</c><00:23:42.279><c> llama</c><00:23:42.559><c> 3</c><00:23:42.760><c> and</c><00:23:42.919><c> so</c>

00:23:43.029 --> 00:23:43.039 align:start position:0%
modern networks also like llama 3 and so
 

00:23:43.039 --> 00:23:45.430 align:start position:0%
modern networks also like llama 3 and so
on<00:23:43.480><c> this</c><00:23:43.640><c> nonlinearity</c><00:23:44.320><c> also</c><00:23:45.000><c> further</c>

00:23:45.430 --> 00:23:45.440 align:start position:0%
on this nonlinearity also further
 

00:23:45.440 --> 00:23:48.110 align:start position:0%
on this nonlinearity also further
changes<00:23:46.320><c> uh</c><00:23:46.440><c> to</c><00:23:46.640><c> swiglo</c><00:23:47.240><c> and</c><00:23:47.440><c> other</c><00:23:47.640><c> variants</c>

00:23:48.110 --> 00:23:48.120 align:start position:0%
changes uh to swiglo and other variants
 

00:23:48.120 --> 00:23:50.590 align:start position:0%
changes uh to swiglo and other variants
like<00:23:48.320><c> that</c><00:23:48.919><c> uh</c><00:23:49.039><c> but</c><00:23:49.159><c> for</c><00:23:49.320><c> gpt2</c><00:23:49.919><c> they</c><00:23:50.039><c> Ed</c><00:23:50.360><c> this</c>

00:23:50.590 --> 00:23:50.600 align:start position:0%
like that uh but for gpt2 they Ed this
 

00:23:50.600 --> 00:23:51.789 align:start position:0%
like that uh but for gpt2 they Ed this
approximate

00:23:51.789 --> 00:23:51.799 align:start position:0%
approximate
 

00:23:51.799 --> 00:23:54.590 align:start position:0%
approximate
G<00:23:52.799><c> okay</c><00:23:52.960><c> and</c><00:23:53.080><c> finally</c><00:23:53.400><c> we</c><00:23:53.520><c> have</c><00:23:53.720><c> the</c><00:23:53.960><c> attention</c>

00:23:54.590 --> 00:23:54.600 align:start position:0%
G okay and finally we have the attention
 

00:23:54.600 --> 00:23:57.070 align:start position:0%
G okay and finally we have the attention
operation<00:23:55.600><c> so</c><00:23:55.840><c> let</c><00:23:55.960><c> me</c><00:23:56.279><c> paste</c><00:23:56.559><c> in</c><00:23:56.919><c> my</c>

00:23:57.070 --> 00:23:57.080 align:start position:0%
operation so let me paste in my
 

00:23:57.080 --> 00:24:00.430 align:start position:0%
operation so let me paste in my
attention

00:24:00.430 --> 00:24:00.440 align:start position:0%
 
 

00:24:00.440 --> 00:24:02.070 align:start position:0%
 
so<00:24:00.600><c> I</c><00:24:00.679><c> know</c><00:24:00.840><c> this</c><00:24:00.919><c> is</c><00:24:01.039><c> a</c><00:24:01.120><c> lot</c><00:24:01.320><c> so</c><00:24:01.400><c> I'm</c><00:24:01.520><c> going</c><00:24:01.600><c> to</c>

00:24:02.070 --> 00:24:02.080 align:start position:0%
so I know this is a lot so I'm going to
 

00:24:02.080 --> 00:24:03.870 align:start position:0%
so I know this is a lot so I'm going to
go<00:24:02.200><c> through</c><00:24:02.360><c> this</c><00:24:02.480><c> a</c><00:24:02.559><c> bit</c><00:24:02.720><c> quickly</c><00:24:03.640><c> a</c><00:24:03.720><c> bit</c>

00:24:03.870 --> 00:24:03.880 align:start position:0%
go through this a bit quickly a bit
 

00:24:03.880 --> 00:24:05.909 align:start position:0%
go through this a bit quickly a bit
slowly<00:24:04.320><c> but</c><00:24:04.520><c> not</c><00:24:04.760><c> too</c><00:24:05.000><c> slowly</c><00:24:05.520><c> because</c><00:24:05.760><c> we</c>

00:24:05.909 --> 00:24:05.919 align:start position:0%
slowly but not too slowly because we
 

00:24:05.919 --> 00:24:07.269 align:start position:0%
slowly but not too slowly because we
have<00:24:06.080><c> covered</c><00:24:06.440><c> this</c><00:24:06.520><c> in</c><00:24:06.600><c> the</c><00:24:06.760><c> previous</c><00:24:07.039><c> video</c>

00:24:07.269 --> 00:24:07.279 align:start position:0%
have covered this in the previous video
 

00:24:07.279 --> 00:24:10.110 align:start position:0%
have covered this in the previous video
and<00:24:07.400><c> I</c><00:24:07.440><c> would</c><00:24:07.600><c> just</c><00:24:07.679><c> point</c><00:24:07.919><c> you</c><00:24:08.360><c> there</c><00:24:09.360><c> um</c><00:24:09.919><c> so</c>

00:24:10.110 --> 00:24:10.120 align:start position:0%
and I would just point you there um so
 

00:24:10.120 --> 00:24:12.029 align:start position:0%
and I would just point you there um so
this<00:24:10.240><c> is</c><00:24:10.360><c> the</c><00:24:10.480><c> attention</c><00:24:10.840><c> operation</c><00:24:11.799><c> now</c><00:24:11.960><c> in</c>

00:24:12.029 --> 00:24:12.039 align:start position:0%
this is the attention operation now in
 

00:24:12.039 --> 00:24:13.789 align:start position:0%
this is the attention operation now in
the<00:24:12.240><c> previous</c><00:24:12.640><c> video</c><00:24:12.960><c> you</c><00:24:13.080><c> will</c><00:24:13.279><c> remember</c>

00:24:13.789 --> 00:24:13.799 align:start position:0%
the previous video you will remember
 

00:24:13.799 --> 00:24:16.510 align:start position:0%
the previous video you will remember
this<00:24:13.880><c> is</c><00:24:14.039><c> not</c><00:24:14.600><c> just</c><00:24:14.840><c> attention</c><00:24:15.400><c> this</c><00:24:15.559><c> is</c><00:24:16.200><c> um</c>

00:24:16.510 --> 00:24:16.520 align:start position:0%
this is not just attention this is um
 

00:24:16.520 --> 00:24:19.549 align:start position:0%
this is not just attention this is um
multi-headed<00:24:17.400><c> attention</c><00:24:18.200><c> right</c><00:24:19.200><c> and</c><00:24:19.320><c> so</c><00:24:19.480><c> in</c>

00:24:19.549 --> 00:24:19.559 align:start position:0%
multi-headed attention right and so in
 

00:24:19.559 --> 00:24:20.630 align:start position:0%
multi-headed attention right and so in
the<00:24:19.679><c> previous</c><00:24:19.960><c> video</c><00:24:20.240><c> we</c><00:24:20.360><c> had</c><00:24:20.480><c> this</c>

00:24:20.630 --> 00:24:20.640 align:start position:0%
the previous video we had this
 

00:24:20.640 --> 00:24:23.710 align:start position:0%
the previous video we had this
multi-headed<00:24:21.240><c> attention</c><00:24:21.799><c> module</c><00:24:22.799><c> and</c><00:24:23.320><c> this</c>

00:24:23.710 --> 00:24:23.720 align:start position:0%
multi-headed attention module and this
 

00:24:23.720 --> 00:24:25.269 align:start position:0%
multi-headed attention module and this
implementation<00:24:24.320><c> made</c><00:24:24.480><c> it</c><00:24:24.679><c> obvious</c><00:24:25.120><c> that</c>

00:24:25.269 --> 00:24:25.279 align:start position:0%
implementation made it obvious that
 

00:24:25.279 --> 00:24:26.789 align:start position:0%
implementation made it obvious that
these<00:24:25.480><c> heads</c><00:24:25.799><c> are</c><00:24:25.960><c> not</c><00:24:26.279><c> actually</c><00:24:26.559><c> that</c>

00:24:26.789 --> 00:24:26.799 align:start position:0%
these heads are not actually that
 

00:24:26.799 --> 00:24:28.870 align:start position:0%
these heads are not actually that
complicated<00:24:27.799><c> uh</c><00:24:27.919><c> there's</c><00:24:28.080><c> basically</c>

00:24:28.870 --> 00:24:28.880 align:start position:0%
complicated uh there's basically
 

00:24:28.880 --> 00:24:32.149 align:start position:0%
complicated uh there's basically
in<00:24:29.159><c> parallel</c><00:24:30.000><c> inside</c><00:24:30.320><c> every</c><00:24:30.520><c> attention</c><00:24:31.360><c> block</c>

00:24:32.149 --> 00:24:32.159 align:start position:0%
in parallel inside every attention block
 

00:24:32.159 --> 00:24:33.590 align:start position:0%
in parallel inside every attention block
there's<00:24:32.399><c> multiple</c><00:24:32.799><c> heads</c><00:24:33.159><c> and</c><00:24:33.279><c> they're</c><00:24:33.440><c> all</c>

00:24:33.590 --> 00:24:33.600 align:start position:0%
there's multiple heads and they're all
 

00:24:33.600 --> 00:24:36.669 align:start position:0%
there's multiple heads and they're all
functioning<00:24:34.000><c> in</c><00:24:34.600><c> parallel</c><00:24:35.600><c> and</c><00:24:36.240><c> uh</c><00:24:36.440><c> their</c>

00:24:36.669 --> 00:24:36.679 align:start position:0%
functioning in parallel and uh their
 

00:24:36.679 --> 00:24:38.750 align:start position:0%
functioning in parallel and uh their
outputs<00:24:37.080><c> are</c><00:24:37.240><c> just</c><00:24:37.360><c> being</c><00:24:37.640><c> concatenated</c><00:24:38.600><c> and</c>

00:24:38.750 --> 00:24:38.760 align:start position:0%
outputs are just being concatenated and
 

00:24:38.760 --> 00:24:40.510 align:start position:0%
outputs are just being concatenated and
that<00:24:38.880><c> becomes</c><00:24:39.279><c> the</c><00:24:39.480><c> output</c><00:24:39.880><c> of</c><00:24:40.320><c> the</c>

00:24:40.510 --> 00:24:40.520 align:start position:0%
that becomes the output of the
 

00:24:40.520 --> 00:24:42.909 align:start position:0%
that becomes the output of the
multi-headed<00:24:41.279><c> attention</c><00:24:42.279><c> so</c><00:24:42.440><c> the</c><00:24:42.559><c> heads</c><00:24:42.760><c> are</c>

00:24:42.909 --> 00:24:42.919 align:start position:0%
multi-headed attention so the heads are
 

00:24:42.919 --> 00:24:45.190 align:start position:0%
multi-headed attention so the heads are
just<00:24:43.039><c> kind</c><00:24:43.159><c> of</c><00:24:43.240><c> like</c><00:24:43.600><c> parallel</c><00:24:44.080><c> streams</c><00:24:45.080><c> and</c>

00:24:45.190 --> 00:24:45.200 align:start position:0%
just kind of like parallel streams and
 

00:24:45.200 --> 00:24:46.549 align:start position:0%
just kind of like parallel streams and
their<00:24:45.320><c> outputs</c><00:24:45.679><c> get</c>

00:24:46.549 --> 00:24:46.559 align:start position:0%
their outputs get
 

00:24:46.559 --> 00:24:48.590 align:start position:0%
their outputs get
concatenated<00:24:47.559><c> and</c><00:24:47.679><c> so</c><00:24:47.880><c> it</c><00:24:48.000><c> was</c><00:24:48.159><c> very</c><00:24:48.320><c> simple</c>

00:24:48.590 --> 00:24:48.600 align:start position:0%
concatenated and so it was very simple
 

00:24:48.600 --> 00:24:51.389 align:start position:0%
concatenated and so it was very simple
and<00:24:48.720><c> made</c><00:24:48.960><c> the</c><00:24:49.200><c> head</c><00:24:49.799><c> be</c><00:24:50.240><c> kind</c><00:24:50.360><c> of</c><00:24:50.600><c> like</c><00:24:51.039><c> U</c>

00:24:51.389 --> 00:24:51.399 align:start position:0%
and made the head be kind of like U
 

00:24:51.399 --> 00:24:54.029 align:start position:0%
and made the head be kind of like U
fairly<00:24:51.720><c> straightforward</c><00:24:52.360><c> in</c><00:24:52.440><c> terms</c><00:24:52.640><c> of</c><00:24:52.720><c> its</c>

00:24:54.029 --> 00:24:54.039 align:start position:0%
fairly straightforward in terms of its
 

00:24:54.039 --> 00:24:56.350 align:start position:0%
fairly straightforward in terms of its
implementation<00:24:55.039><c> what</c><00:24:55.159><c> happens</c><00:24:55.559><c> here</c><00:24:55.799><c> is</c><00:24:56.039><c> that</c>

00:24:56.350 --> 00:24:56.360 align:start position:0%
implementation what happens here is that
 

00:24:56.360 --> 00:24:58.070 align:start position:0%
implementation what happens here is that
instead<00:24:56.600><c> of</c><00:24:56.720><c> having</c><00:24:56.919><c> two</c><00:24:57.120><c> separate</c><00:24:57.440><c> modules</c>

00:24:58.070 --> 00:24:58.080 align:start position:0%
instead of having two separate modules
 

00:24:58.080 --> 00:24:59.830 align:start position:0%
instead of having two separate modules
and<00:24:58.399><c> indeed</c><00:24:58.679><c> many</c><00:24:58.880><c> more</c><00:24:59.039><c> modules</c><00:24:59.480><c> that</c><00:24:59.600><c> get</c>

00:24:59.830 --> 00:24:59.840 align:start position:0%
and indeed many more modules that get
 

00:24:59.840 --> 00:25:01.870 align:start position:0%
and indeed many more modules that get
concatenated<00:25:00.840><c> all</c><00:25:01.000><c> of</c><00:25:01.159><c> that</c><00:25:01.320><c> is</c><00:25:01.520><c> just</c><00:25:01.679><c> put</c>

00:25:01.870 --> 00:25:01.880 align:start position:0%
concatenated all of that is just put
 

00:25:01.880 --> 00:25:04.870 align:start position:0%
concatenated all of that is just put
into<00:25:02.120><c> a</c><00:25:02.279><c> single</c><00:25:03.080><c> uh</c><00:25:03.200><c> self</c><00:25:03.720><c> attention</c><00:25:04.720><c> uh</c>

00:25:04.870 --> 00:25:04.880 align:start position:0%
into a single uh self attention uh
 

00:25:04.880 --> 00:25:07.310 align:start position:0%
into a single uh self attention uh
module<00:25:05.840><c> and</c><00:25:06.000><c> instead</c><00:25:06.440><c> I'm</c><00:25:06.600><c> being</c><00:25:06.880><c> very</c>

00:25:07.310 --> 00:25:07.320 align:start position:0%
module and instead I'm being very
 

00:25:07.320 --> 00:25:10.269 align:start position:0%
module and instead I'm being very
careful<00:25:07.840><c> and</c><00:25:08.000><c> doing</c><00:25:08.200><c> a</c><00:25:08.320><c> bunch</c><00:25:08.480><c> of</c><00:25:09.279><c> transpose</c>

00:25:10.269 --> 00:25:10.279 align:start position:0%
careful and doing a bunch of transpose
 

00:25:10.279 --> 00:25:13.389 align:start position:0%
careful and doing a bunch of transpose
split<00:25:11.200><c> um</c><00:25:11.520><c> tensor</c><00:25:12.039><c> gymnastics</c><00:25:12.880><c> to</c><00:25:13.039><c> make</c><00:25:13.200><c> this</c>

00:25:13.389 --> 00:25:13.399 align:start position:0%
split um tensor gymnastics to make this
 

00:25:13.399 --> 00:25:15.590 align:start position:0%
split um tensor gymnastics to make this
very<00:25:13.600><c> efficient</c><00:25:13.919><c> in</c><00:25:14.120><c> pych</c><00:25:14.919><c> but</c><00:25:15.120><c> fundamentally</c>

00:25:15.590 --> 00:25:15.600 align:start position:0%
very efficient in pych but fundamentally
 

00:25:15.600 --> 00:25:17.110 align:start position:0%
very efficient in pych but fundamentally
and<00:25:15.720><c> algorithmically</c><00:25:16.440><c> nothing</c><00:25:16.640><c> is</c><00:25:16.840><c> different</c>

00:25:17.110 --> 00:25:17.120 align:start position:0%
and algorithmically nothing is different
 

00:25:17.120 --> 00:25:19.750 align:start position:0%
and algorithmically nothing is different
from<00:25:17.279><c> the</c><00:25:17.480><c> implementation</c><00:25:18.480><c> we</c><00:25:18.640><c> saw</c>

00:25:19.750 --> 00:25:19.760 align:start position:0%
from the implementation we saw
 

00:25:19.760 --> 00:25:22.710 align:start position:0%
from the implementation we saw
before<00:25:20.760><c> um</c><00:25:21.080><c> in</c><00:25:21.279><c> this</c><00:25:21.600><c> uh</c><00:25:21.760><c> give</c>

00:25:22.710 --> 00:25:22.720 align:start position:0%
before um in this uh give
 

00:25:22.720 --> 00:25:25.909 align:start position:0%
before um in this uh give
repository<00:25:23.799><c> so</c><00:25:24.799><c> to</c><00:25:25.000><c> remind</c><00:25:25.279><c> you</c><00:25:25.440><c> very</c><00:25:25.600><c> briefly</c>

00:25:25.909 --> 00:25:25.919 align:start position:0%
repository so to remind you very briefly
 

00:25:25.919 --> 00:25:27.909 align:start position:0%
repository so to remind you very briefly
and<00:25:26.000><c> I</c><00:25:26.080><c> don't</c><00:25:26.200><c> want</c><00:25:26.279><c> to</c><00:25:26.440><c> go</c><00:25:26.720><c> in</c><00:25:26.960><c> this</c><00:25:27.600><c> uh</c><00:25:27.720><c> into</c>

00:25:27.909 --> 00:25:27.919 align:start position:0%
and I don't want to go in this uh into
 

00:25:27.919 --> 00:25:30.590 align:start position:0%
and I don't want to go in this uh into
this<00:25:28.039><c> in</c><00:25:28.320><c> too</c><00:25:28.480><c> many</c><00:25:28.960><c> in</c><00:25:29.080><c> too</c><00:25:29.240><c> much</c><00:25:29.480><c> time</c><00:25:30.200><c> but</c><00:25:30.440><c> we</c>

00:25:30.590 --> 00:25:30.600 align:start position:0%
this in too many in too much time but we
 

00:25:30.600 --> 00:25:32.669 align:start position:0%
this in too many in too much time but we
have<00:25:31.000><c> these</c><00:25:31.200><c> tokens</c><00:25:31.600><c> lined</c><00:25:31.880><c> up</c><00:25:32.039><c> in</c><00:25:32.120><c> a</c><00:25:32.279><c> sequence</c>

00:25:32.669 --> 00:25:32.679 align:start position:0%
have these tokens lined up in a sequence
 

00:25:32.679 --> 00:25:35.909 align:start position:0%
have these tokens lined up in a sequence
and<00:25:32.760><c> there's</c><00:25:32.960><c> 1,20</c><00:25:33.720><c> of</c><00:25:34.000><c> them</c><00:25:35.000><c> and</c><00:25:35.200><c> then</c><00:25:35.640><c> each</c>

00:25:35.909 --> 00:25:35.919 align:start position:0%
and there's 1,20 of them and then each
 

00:25:35.919 --> 00:25:37.870 align:start position:0%
and there's 1,20 of them and then each
token<00:25:36.480><c> at</c><00:25:36.640><c> this</c><00:25:36.799><c> stage</c><00:25:37.000><c> of</c><00:25:37.120><c> the</c><00:25:37.240><c> attention</c>

00:25:37.870 --> 00:25:37.880 align:start position:0%
token at this stage of the attention
 

00:25:37.880 --> 00:25:40.750 align:start position:0%
token at this stage of the attention
emits<00:25:38.440><c> three</c><00:25:38.720><c> vectors</c><00:25:39.679><c> the</c><00:25:39.880><c> query</c><00:25:40.360><c> key</c><00:25:40.640><c> and</c>

00:25:40.750 --> 00:25:40.760 align:start position:0%
emits three vectors the query key and
 

00:25:40.760 --> 00:25:44.950 align:start position:0%
emits three vectors the query key and
the<00:25:41.240><c> value</c><00:25:42.240><c> and</c><00:25:42.840><c> first</c><00:25:43.120><c> what</c><00:25:43.279><c> happens</c><00:25:43.679><c> here</c><00:25:44.480><c> um</c>

00:25:44.950 --> 00:25:44.960 align:start position:0%
the value and first what happens here um
 

00:25:44.960 --> 00:25:46.909 align:start position:0%
the value and first what happens here um
is<00:25:45.159><c> that</c><00:25:45.320><c> the</c><00:25:45.440><c> queries</c><00:25:45.799><c> and</c><00:25:45.919><c> the</c><00:25:46.080><c> keys</c><00:25:46.600><c> have</c><00:25:46.760><c> to</c>

00:25:46.909 --> 00:25:46.919 align:start position:0%
is that the queries and the keys have to
 

00:25:46.919 --> 00:25:49.389 align:start position:0%
is that the queries and the keys have to
multiply<00:25:47.480><c> each</c><00:25:47.640><c> other</c><00:25:48.320><c> to</c><00:25:48.520><c> get</c><00:25:48.720><c> sort</c><00:25:48.919><c> of</c><00:25:49.080><c> the</c>

00:25:49.389 --> 00:25:49.399 align:start position:0%
multiply each other to get sort of the
 

00:25:49.399 --> 00:25:52.630 align:start position:0%
multiply each other to get sort of the
attention<00:25:50.399><c> um</c><00:25:51.080><c> amount</c><00:25:51.760><c> like</c><00:25:51.960><c> how</c><00:25:52.279><c> interesting</c>

00:25:52.630 --> 00:25:52.640 align:start position:0%
attention um amount like how interesting
 

00:25:52.640 --> 00:25:54.230 align:start position:0%
attention um amount like how interesting
they<00:25:52.760><c> find</c><00:25:53.000><c> each</c><00:25:53.159><c> other</c><00:25:53.760><c> so</c><00:25:53.919><c> they</c><00:25:54.039><c> have</c><00:25:54.120><c> to</c>

00:25:54.230 --> 00:25:54.240 align:start position:0%
they find each other so they have to
 

00:25:54.240 --> 00:25:56.310 align:start position:0%
they find each other so they have to
interact<00:25:54.960><c> multiplicatively</c><00:25:55.960><c> so</c><00:25:56.120><c> what</c><00:25:56.200><c> we're</c>

00:25:56.310 --> 00:25:56.320 align:start position:0%
interact multiplicatively so what we're
 

00:25:56.320 --> 00:25:58.430 align:start position:0%
interact multiplicatively so what we're
doing<00:25:56.520><c> here</c><00:25:56.640><c> is</c><00:25:56.799><c> we're</c><00:25:57.000><c> calculating</c><00:25:57.440><c> the</c><00:25:57.559><c> qkv</c>

00:25:58.430 --> 00:25:58.440 align:start position:0%
doing here is we're calculating the qkv
 

00:25:58.440 --> 00:26:00.430 align:start position:0%
doing here is we're calculating the qkv
we<00:25:58.679><c> splitting</c><00:25:59.120><c> it</c><00:25:59.720><c> and</c><00:25:59.840><c> then</c><00:26:00.000><c> there's</c><00:26:00.159><c> a</c><00:26:00.279><c> bunch</c>

00:26:00.430 --> 00:26:00.440 align:start position:0%
we splitting it and then there's a bunch
 

00:26:00.440 --> 00:26:03.070 align:start position:0%
we splitting it and then there's a bunch
of<00:26:00.559><c> gymnastics</c><00:26:01.039><c> as</c><00:26:01.159><c> I</c><00:26:01.279><c> mentioned</c><00:26:01.679><c> here</c><00:26:02.440><c> and</c>

00:26:03.070 --> 00:26:03.080 align:start position:0%
of gymnastics as I mentioned here and
 

00:26:03.080 --> 00:26:04.269 align:start position:0%
of gymnastics as I mentioned here and
the<00:26:03.200><c> way</c><00:26:03.399><c> this</c><00:26:03.520><c> works</c><00:26:03.840><c> is</c><00:26:03.960><c> that</c><00:26:04.080><c> we're</c>

00:26:04.269 --> 00:26:04.279 align:start position:0%
the way this works is that we're
 

00:26:04.279 --> 00:26:06.909 align:start position:0%
the way this works is that we're
basically<00:26:04.640><c> making</c><00:26:05.120><c> the</c><00:26:05.720><c> number</c><00:26:05.960><c> of</c><00:26:06.159><c> heads</c><00:26:06.720><c> and</c>

00:26:06.909 --> 00:26:06.919 align:start position:0%
basically making the number of heads and
 

00:26:06.919 --> 00:26:10.389 align:start position:0%
basically making the number of heads and
H<00:26:07.679><c> into</c><00:26:08.159><c> a</c><00:26:08.360><c> batch</c><00:26:08.880><c> Dimension</c><00:26:09.880><c> and</c><00:26:09.960><c> so</c><00:26:10.120><c> it's</c><00:26:10.240><c> a</c>

00:26:10.389 --> 00:26:10.399 align:start position:0%
H into a batch Dimension and so it's a
 

00:26:10.399 --> 00:26:12.750 align:start position:0%
H into a batch Dimension and so it's a
batch<00:26:10.679><c> Dimension</c><00:26:11.120><c> just</c><00:26:11.279><c> like</c><00:26:11.480><c> B</c><00:26:12.200><c> so</c><00:26:12.399><c> that</c><00:26:12.559><c> in</c>

00:26:12.750 --> 00:26:12.760 align:start position:0%
batch Dimension just like B so that in
 

00:26:12.760 --> 00:26:14.909 align:start position:0%
batch Dimension just like B so that in
these<00:26:12.960><c> operations</c><00:26:13.480><c> that</c><00:26:13.640><c> follow</c><00:26:14.399><c> pytorch</c>

00:26:14.909 --> 00:26:14.919 align:start position:0%
these operations that follow pytorch
 

00:26:14.919 --> 00:26:18.149 align:start position:0%
these operations that follow pytorch
treats<00:26:15.440><c> B</c><00:26:15.679><c> and</c><00:26:15.840><c> NH</c><00:26:16.559><c> as</c><00:26:16.919><c> batches</c><00:26:17.919><c> and</c><00:26:18.000><c> it</c>

00:26:18.149 --> 00:26:18.159 align:start position:0%
treats B and NH as batches and it
 

00:26:18.159 --> 00:26:20.389 align:start position:0%
treats B and NH as batches and it
applies<00:26:18.520><c> all</c><00:26:18.640><c> the</c><00:26:18.919><c> operations</c><00:26:19.919><c> on</c><00:26:20.120><c> all</c><00:26:20.240><c> of</c>

00:26:20.389 --> 00:26:20.399 align:start position:0%
applies all the operations on all of
 

00:26:20.399 --> 00:26:22.549 align:start position:0%
applies all the operations on all of
them<00:26:20.559><c> in</c><00:26:20.760><c> parallel</c><00:26:21.520><c> in</c><00:26:21.720><c> both</c><00:26:21.919><c> the</c><00:26:22.039><c> batch</c><00:26:22.399><c> and</c>

00:26:22.549 --> 00:26:22.559 align:start position:0%
them in parallel in both the batch and
 

00:26:22.559 --> 00:26:23.230 align:start position:0%
them in parallel in both the batch and
the

00:26:23.230 --> 00:26:23.240 align:start position:0%
the
 

00:26:23.240 --> 00:26:25.430 align:start position:0%
the
heads<00:26:24.240><c> and</c><00:26:24.520><c> the</c><00:26:24.679><c> operations</c><00:26:25.120><c> that</c><00:26:25.240><c> get</c>

00:26:25.430 --> 00:26:25.440 align:start position:0%
heads and the operations that get
 

00:26:25.440 --> 00:26:27.190 align:start position:0%
heads and the operations that get
applied<00:26:25.840><c> are</c><00:26:26.159><c> number</c><00:26:26.399><c> one</c><00:26:26.679><c> the</c><00:26:26.799><c> queries</c><00:26:27.080><c> and</c>

00:26:27.190 --> 00:26:27.200 align:start position:0%
applied are number one the queries and
 

00:26:27.200 --> 00:26:30.389 align:start position:0%
applied are number one the queries and
the<00:26:27.360><c> keys</c><00:26:27.799><c> intera</c><00:26:28.520><c> to</c><00:26:28.640><c> give</c><00:26:28.760><c> us</c><00:26:28.880><c> her</c><00:26:29.399><c> attention</c>

00:26:30.389 --> 00:26:30.399 align:start position:0%
the keys intera to give us her attention
 

00:26:30.399 --> 00:26:32.110 align:start position:0%
the keys intera to give us her attention
this<00:26:30.480><c> is</c><00:26:30.640><c> the</c><00:26:30.760><c> autoaggressive</c><00:26:31.279><c> mask</c><00:26:32.000><c> that</c>

00:26:32.110 --> 00:26:32.120 align:start position:0%
this is the autoaggressive mask that
 

00:26:32.120 --> 00:26:35.190 align:start position:0%
this is the autoaggressive mask that
makes<00:26:32.360><c> sure</c><00:26:33.240><c> that</c><00:26:33.600><c> the</c><00:26:33.840><c> tokens</c><00:26:34.360><c> only</c><00:26:34.679><c> attend</c>

00:26:35.190 --> 00:26:35.200 align:start position:0%
makes sure that the tokens only attend
 

00:26:35.200 --> 00:26:37.430 align:start position:0%
makes sure that the tokens only attend
to<00:26:35.399><c> tokens</c><00:26:36.000><c> before</c><00:26:36.399><c> them</c><00:26:36.760><c> and</c><00:26:36.919><c> never</c><00:26:37.240><c> to</c>

00:26:37.430 --> 00:26:37.440 align:start position:0%
to tokens before them and never to
 

00:26:37.440 --> 00:26:39.029 align:start position:0%
to tokens before them and never to
tokens<00:26:37.799><c> in</c><00:26:37.919><c> the</c>

00:26:39.029 --> 00:26:39.039 align:start position:0%
tokens in the
 

00:26:39.039 --> 00:26:41.789 align:start position:0%
tokens in the
future<00:26:40.039><c> the</c><00:26:40.200><c> softmax</c><00:26:40.840><c> here</c><00:26:41.120><c> normalizes</c><00:26:41.679><c> the</c>

00:26:41.789 --> 00:26:41.799 align:start position:0%
future the softmax here normalizes the
 

00:26:41.799 --> 00:26:45.310 align:start position:0%
future the softmax here normalizes the
attention<00:26:42.279><c> so</c><00:26:42.480><c> it</c><00:26:42.600><c> sums</c><00:26:42.880><c> to</c><00:26:43.159><c> one</c><00:26:44.159><c> always</c><00:26:45.159><c> and</c>

00:26:45.310 --> 00:26:45.320 align:start position:0%
attention so it sums to one always and
 

00:26:45.320 --> 00:26:47.110 align:start position:0%
attention so it sums to one always and
then<00:26:45.799><c> recall</c><00:26:46.120><c> from</c><00:26:46.240><c> the</c><00:26:46.399><c> previous</c><00:26:46.720><c> video</c><00:26:47.000><c> that</c>

00:26:47.110 --> 00:26:47.120 align:start position:0%
then recall from the previous video that
 

00:26:47.120 --> 00:26:48.750 align:start position:0%
then recall from the previous video that
doing<00:26:47.320><c> the</c><00:26:47.440><c> attention</c><00:26:47.799><c> Matrix</c><00:26:48.159><c> multiply</c><00:26:48.640><c> with</c>

00:26:48.750 --> 00:26:48.760 align:start position:0%
doing the attention Matrix multiply with
 

00:26:48.760 --> 00:26:50.669 align:start position:0%
doing the attention Matrix multiply with
the<00:26:48.880><c> values</c><00:26:49.559><c> is</c><00:26:49.720><c> basically</c><00:26:50.039><c> a</c><00:26:50.159><c> way</c><00:26:50.279><c> to</c><00:26:50.360><c> do</c><00:26:50.520><c> a</c>

00:26:50.669 --> 00:26:50.679 align:start position:0%
the values is basically a way to do a
 

00:26:50.679 --> 00:26:53.269 align:start position:0%
the values is basically a way to do a
weighted<00:26:51.080><c> sum</c><00:26:51.720><c> of</c><00:26:51.880><c> the</c><00:26:52.000><c> values</c><00:26:52.640><c> of</c><00:26:52.799><c> the</c><00:26:52.919><c> tokens</c>

00:26:53.269 --> 00:26:53.279 align:start position:0%
weighted sum of the values of the tokens
 

00:26:53.279 --> 00:26:55.070 align:start position:0%
weighted sum of the values of the tokens
that<00:26:53.399><c> we</c><00:26:53.520><c> found</c><00:26:53.799><c> interesting</c><00:26:54.720><c> at</c><00:26:54.880><c> every</c>

00:26:55.070 --> 00:26:55.080 align:start position:0%
that we found interesting at every
 

00:26:55.080 --> 00:26:57.430 align:start position:0%
that we found interesting at every
single<00:26:55.799><c> token</c><00:26:56.799><c> and</c><00:26:56.919><c> then</c><00:26:57.080><c> the</c><00:26:57.159><c> final</c>

00:26:57.430 --> 00:26:57.440 align:start position:0%
single token and then the final
 

00:26:57.440 --> 00:26:59.830 align:start position:0%
single token and then the final
transpose<00:26:57.880><c> conf</c><00:26:58.240><c> VI</c><00:26:58.480><c> and</c><00:26:58.640><c> view</c><00:26:59.360><c> is</c><00:26:59.640><c> just</c>

00:26:59.830 --> 00:26:59.840 align:start position:0%
transpose conf VI and view is just
 

00:26:59.840 --> 00:27:02.269 align:start position:0%
transpose conf VI and view is just
reassembling<00:27:00.520><c> all</c><00:27:00.640><c> of</c><00:27:00.760><c> that</c><00:27:01.000><c> again</c><00:27:01.760><c> and</c><00:27:02.120><c> this</c>

00:27:02.269 --> 00:27:02.279 align:start position:0%
reassembling all of that again and this
 

00:27:02.279 --> 00:27:04.149 align:start position:0%
reassembling all of that again and this
actually<00:27:02.520><c> performs</c><00:27:02.880><c> the</c><00:27:03.039><c> concatenation</c>

00:27:04.149 --> 00:27:04.159 align:start position:0%
actually performs the concatenation
 

00:27:04.159 --> 00:27:06.269 align:start position:0%
actually performs the concatenation
operation<00:27:05.159><c> so</c><00:27:05.279><c> you</c><00:27:05.360><c> can</c><00:27:05.480><c> step</c><00:27:05.760><c> through</c><00:27:05.960><c> this</c>

00:27:06.269 --> 00:27:06.279 align:start position:0%
operation so you can step through this
 

00:27:06.279 --> 00:27:08.630 align:start position:0%
operation so you can step through this
uh<00:27:06.399><c> slowly</c><00:27:06.760><c> if</c><00:27:06.880><c> you'd</c><00:27:07.120><c> like</c><00:27:07.679><c> um</c><00:27:08.120><c> but</c><00:27:08.279><c> it</c><00:27:08.399><c> is</c>

00:27:08.630 --> 00:27:08.640 align:start position:0%
uh slowly if you'd like um but it is
 

00:27:08.640 --> 00:27:10.870 align:start position:0%
uh slowly if you'd like um but it is
equivalent<00:27:09.120><c> mathematically</c><00:27:09.840><c> to</c><00:27:10.640><c> our</c>

00:27:10.870 --> 00:27:10.880 align:start position:0%
equivalent mathematically to our
 

00:27:10.880 --> 00:27:12.909 align:start position:0%
equivalent mathematically to our
previous<00:27:11.600><c> implementation</c><00:27:12.320><c> is</c><00:27:12.520><c> just</c><00:27:12.720><c> more</c>

00:27:12.909 --> 00:27:12.919 align:start position:0%
previous implementation is just more
 

00:27:12.919 --> 00:27:14.549 align:start position:0%
previous implementation is just more
efficient<00:27:13.240><c> in</c><00:27:13.440><c> P</c><00:27:13.600><c> torch</c><00:27:13.919><c> so</c><00:27:14.080><c> that's</c><00:27:14.320><c> why</c><00:27:14.440><c> I</c>

00:27:14.549 --> 00:27:14.559 align:start position:0%
efficient in P torch so that's why I
 

00:27:14.559 --> 00:27:16.149 align:start position:0%
efficient in P torch so that's why I
chose<00:27:14.880><c> this</c><00:27:15.039><c> implementation</c>

00:27:16.149 --> 00:27:16.159 align:start position:0%
chose this implementation
 

00:27:16.159 --> 00:27:18.149 align:start position:0%
chose this implementation
instead<00:27:17.159><c> now</c><00:27:17.320><c> in</c><00:27:17.480><c> addition</c><00:27:17.720><c> to</c><00:27:17.919><c> that</c><00:27:18.039><c> I'm</c>

00:27:18.149 --> 00:27:18.159 align:start position:0%
instead now in addition to that I'm
 

00:27:18.159 --> 00:27:19.549 align:start position:0%
instead now in addition to that I'm
being<00:27:18.399><c> careful</c><00:27:18.799><c> with</c><00:27:18.960><c> how</c><00:27:19.080><c> I</c><00:27:19.200><c> name</c><00:27:19.399><c> my</c>

00:27:19.549 --> 00:27:19.559 align:start position:0%
being careful with how I name my
 

00:27:19.559 --> 00:27:22.430 align:start position:0%
being careful with how I name my
variables<00:27:20.320><c> so</c><00:27:20.480><c> for</c><00:27:20.640><c> example</c><00:27:21.120><c> cattin</c><00:27:22.120><c> is</c><00:27:22.320><c> the</c>

00:27:22.430 --> 00:27:22.440 align:start position:0%
variables so for example cattin is the
 

00:27:22.440 --> 00:27:25.389 align:start position:0%
variables so for example cattin is the
same<00:27:22.720><c> as</c><00:27:23.080><c> seaten</c><00:27:24.080><c> and</c><00:27:24.200><c> so</c><00:27:24.399><c> actually</c><00:27:24.679><c> our</c><00:27:24.919><c> keys</c>

00:27:25.389 --> 00:27:25.399 align:start position:0%
same as seaten and so actually our keys
 

00:27:25.399 --> 00:27:26.990 align:start position:0%
same as seaten and so actually our keys
should<00:27:25.760><c> basically</c><00:27:26.279><c> exactly</c><00:27:26.600><c> follow</c><00:27:26.880><c> the</c>

00:27:26.990 --> 00:27:27.000 align:start position:0%
should basically exactly follow the
 

00:27:27.000 --> 00:27:28.149 align:start position:0%
should basically exactly follow the
schema<00:27:27.320><c> of</c><00:27:27.440><c> the</c><00:27:27.559><c> hugging</c><00:27:27.840><c> face</c><00:27:28.000><c> train</c>

00:27:28.149 --> 00:27:28.159 align:start position:0%
schema of the hugging face train
 

00:27:28.159 --> 00:27:29.789 align:start position:0%
schema of the hugging face train
Transformers<00:27:28.600><c> code</c><00:27:29.200><c> and</c><00:27:29.279><c> that</c><00:27:29.399><c> will</c><00:27:29.520><c> make</c><00:27:29.640><c> it</c>

00:27:29.789 --> 00:27:29.799 align:start position:0%
Transformers code and that will make it
 

00:27:29.799 --> 00:27:32.310 align:start position:0%
Transformers code and that will make it
very<00:27:29.960><c> easy</c><00:27:30.200><c> for</c><00:27:30.360><c> us</c><00:27:30.480><c> to</c><00:27:30.679><c> now</c><00:27:31.080><c> Port</c><00:27:31.440><c> over</c><00:27:32.120><c> all</c>

00:27:32.310 --> 00:27:32.320 align:start position:0%
very easy for us to now Port over all
 

00:27:32.320 --> 00:27:34.909 align:start position:0%
very easy for us to now Port over all
the<00:27:32.480><c> weights</c><00:27:33.039><c> from</c><00:27:33.320><c> exactly</c><00:27:33.840><c> this</c><00:27:34.640><c> sort</c><00:27:34.799><c> of</c>

00:27:34.909 --> 00:27:34.919 align:start position:0%
the weights from exactly this sort of
 

00:27:34.919 --> 00:27:36.870 align:start position:0%
the weights from exactly this sort of
naming<00:27:35.320><c> conventions</c><00:27:36.320><c> because</c><00:27:36.520><c> all</c><00:27:36.640><c> of</c><00:27:36.720><c> our</c>

00:27:36.870 --> 00:27:36.880 align:start position:0%
naming conventions because all of our
 

00:27:36.880 --> 00:27:39.510 align:start position:0%
naming conventions because all of our
variables<00:27:37.200><c> are</c><00:27:37.360><c> named</c><00:27:37.640><c> the</c><00:27:37.720><c> same</c><00:27:37.960><c> thing</c><00:27:38.919><c> but</c>

00:27:39.510 --> 00:27:39.520 align:start position:0%
variables are named the same thing but
 

00:27:39.520 --> 00:27:41.669 align:start position:0%
variables are named the same thing but
um<00:27:39.760><c> at</c><00:27:39.880><c> this</c><00:27:40.039><c> point</c><00:27:40.200><c> we</c><00:27:40.320><c> have</c><00:27:40.840><c> finished</c><00:27:41.399><c> the</c>

00:27:41.669 --> 00:27:41.679 align:start position:0%
um at this point we have finished the
 

00:27:41.679 --> 00:27:44.389 align:start position:0%
um at this point we have finished the
gpt2<00:27:42.679><c> implementation</c><00:27:43.679><c> and</c><00:27:43.880><c> what</c><00:27:44.000><c> that</c><00:27:44.159><c> allows</c>

00:27:44.389 --> 00:27:44.399 align:start position:0%
gpt2 implementation and what that allows
 

00:27:44.399 --> 00:27:46.070 align:start position:0%
gpt2 implementation and what that allows
us<00:27:44.519><c> to</c><00:27:44.640><c> do</c><00:27:44.840><c> is</c><00:27:45.000><c> we</c><00:27:45.120><c> don't</c><00:27:45.320><c> have</c><00:27:45.440><c> to</c><00:27:45.640><c> basically</c>

00:27:46.070 --> 00:27:46.080 align:start position:0%
us to do is we don't have to basically
 

00:27:46.080 --> 00:27:48.190 align:start position:0%
us to do is we don't have to basically
use<00:27:46.519><c> uh</c><00:27:46.640><c> this</c><00:27:46.799><c> file</c><00:27:46.960><c> from</c><00:27:47.159><c> hugging</c><00:27:47.519><c> face</c><00:27:48.080><c> which</c>

00:27:48.190 --> 00:27:48.200 align:start position:0%
use uh this file from hugging face which
 

00:27:48.200 --> 00:27:49.990 align:start position:0%
use uh this file from hugging face which
is<00:27:48.360><c> fairly</c><00:27:48.720><c> long</c>

00:27:49.990 --> 00:27:50.000 align:start position:0%
is fairly long
 

00:27:50.000 --> 00:27:52.950 align:start position:0%
is fairly long
um<00:27:51.000><c> this</c>

00:27:52.950 --> 00:27:52.960 align:start position:0%
um this
 

00:27:52.960 --> 00:27:57.310 align:start position:0%
um this
is<00:27:53.960><c> uh</c><00:27:54.159><c> 2,000</c><00:27:54.679><c> lines</c><00:27:54.880><c> of</c><00:27:55.159><c> code</c><00:27:56.159><c> um</c><00:27:56.799><c> instead</c><00:27:57.159><c> we</c>

00:27:57.310 --> 00:27:57.320 align:start position:0%
is uh 2,000 lines of code um instead we
 

00:27:57.320 --> 00:27:59.430 align:start position:0%
is uh 2,000 lines of code um instead we
just<00:27:57.519><c> have</c><00:27:57.760><c> a</c><00:27:57.919><c> less</c><00:27:58.240><c> than</c><00:27:58.440><c> 100</c><00:27:58.640><c> lines</c><00:27:58.840><c> of</c><00:27:58.960><c> code</c>

00:27:59.430 --> 00:27:59.440 align:start position:0%
just have a less than 100 lines of code
 

00:27:59.440 --> 00:28:01.149 align:start position:0%
just have a less than 100 lines of code
and<00:27:59.559><c> this</c><00:27:59.679><c> is</c><00:27:59.799><c> the</c><00:27:59.960><c> complete</c><00:28:00.519><c> uh</c><00:28:00.600><c> gpd2</c>

00:28:01.149 --> 00:28:01.159 align:start position:0%
and this is the complete uh gpd2
 

00:28:01.159 --> 00:28:02.830 align:start position:0%
and this is the complete uh gpd2
implementation<00:28:02.120><c> so</c><00:28:02.279><c> at</c><00:28:02.399><c> this</c><00:28:02.519><c> stage</c><00:28:02.760><c> we</c>

00:28:02.830 --> 00:28:02.840 align:start position:0%
implementation so at this stage we
 

00:28:02.840 --> 00:28:04.870 align:start position:0%
implementation so at this stage we
should<00:28:03.039><c> just</c><00:28:03.159><c> be</c><00:28:03.279><c> able</c><00:28:03.480><c> to</c><00:28:03.960><c> take</c><00:28:04.159><c> over</c><00:28:04.559><c> all</c><00:28:04.720><c> the</c>

00:28:04.870 --> 00:28:04.880 align:start position:0%
should just be able to take over all the
 

00:28:04.880 --> 00:28:07.669 align:start position:0%
should just be able to take over all the
weights<00:28:05.600><c> set</c><00:28:05.919><c> them</c><00:28:06.320><c> and</c><00:28:06.399><c> then</c><00:28:06.559><c> do</c><00:28:06.760><c> generation</c>

00:28:07.669 --> 00:28:07.679 align:start position:0%
weights set them and then do generation
 

00:28:07.679 --> 00:28:09.389 align:start position:0%
weights set them and then do generation
so<00:28:07.880><c> let's</c><00:28:08.039><c> see</c><00:28:08.159><c> what</c><00:28:08.320><c> that</c><00:28:08.440><c> looks</c><00:28:08.640><c> like</c><00:28:09.200><c> okay</c>

00:28:09.389 --> 00:28:09.399 align:start position:0%
so let's see what that looks like okay
 

00:28:09.399 --> 00:28:11.630 align:start position:0%
so let's see what that looks like okay
so<00:28:09.679><c> here</c><00:28:09.880><c> I've</c><00:28:10.039><c> also</c><00:28:10.279><c> changed</c><00:28:10.600><c> the</c><00:28:10.720><c> GPT</c><00:28:11.159><c> config</c>

00:28:11.630 --> 00:28:11.640 align:start position:0%
so here I've also changed the GPT config
 

00:28:11.640 --> 00:28:13.110 align:start position:0%
so here I've also changed the GPT config
so<00:28:11.840><c> that</c><00:28:12.000><c> the</c><00:28:12.120><c> numbers</c><00:28:12.519><c> here</c><00:28:12.720><c> the</c><00:28:12.840><c> H</c>

00:28:13.110 --> 00:28:13.120 align:start position:0%
so that the numbers here the H
 

00:28:13.120 --> 00:28:15.669 align:start position:0%
so that the numbers here the H
parameters<00:28:13.600><c> agree</c><00:28:13.960><c> with</c><00:28:14.120><c> the</c><00:28:14.240><c> gpt2</c><00:28:14.840><c> 124</c><00:28:15.480><c> M</c>

00:28:15.669 --> 00:28:15.679 align:start position:0%
parameters agree with the gpt2 124 M
 

00:28:15.679 --> 00:28:17.590 align:start position:0%
parameters agree with the gpt2 124 M
model<00:28:16.320><c> so</c><00:28:16.440><c> the</c><00:28:16.559><c> maximum</c><00:28:16.880><c> sequence</c><00:28:17.240><c> length</c>

00:28:17.590 --> 00:28:17.600 align:start position:0%
model so the maximum sequence length
 

00:28:17.600 --> 00:28:20.990 align:start position:0%
model so the maximum sequence length
which<00:28:17.840><c> I</c><00:28:17.960><c> call</c><00:28:18.200><c> block</c><00:28:18.480><c> size</c><00:28:18.760><c> here</c><00:28:19.320><c> is</c><00:28:19.880><c> 124</c><00:28:20.880><c> the</c>

00:28:20.990 --> 00:28:21.000 align:start position:0%
which I call block size here is 124 the
 

00:28:21.000 --> 00:28:24.990 align:start position:0%
which I call block size here is 124 the
number<00:28:21.200><c> of</c><00:28:21.360><c> tokens</c><00:28:22.000><c> is</c><00:28:22.600><c> 50250</c><00:28:23.760><c> 257</c><00:28:24.760><c> which</c><00:28:24.919><c> if</c>

00:28:24.990 --> 00:28:25.000 align:start position:0%
number of tokens is 50250 257 which if
 

00:28:25.000 --> 00:28:26.990 align:start position:0%
number of tokens is 50250 257 which if
you<00:28:25.200><c> watch</c><00:28:25.480><c> my</c><00:28:25.640><c> tokenizer</c><00:28:26.200><c> video</c><00:28:26.519><c> know</c><00:28:26.840><c> that</c>

00:28:26.990 --> 00:28:27.000 align:start position:0%
you watch my tokenizer video know that
 

00:28:27.000 --> 00:28:31.549 align:start position:0%
you watch my tokenizer video know that
this<00:28:27.120><c> is</c><00:28:27.320><c> 50,000</c><00:28:27.840><c> m</c><00:28:28.120><c> merges</c><00:28:28.679><c> BP</c><00:28:29.200><c> merges</c><00:28:30.559><c> 256</c>

00:28:31.549 --> 00:28:31.559 align:start position:0%
this is 50,000 m merges BP merges 256
 

00:28:31.559 --> 00:28:34.990 align:start position:0%
this is 50,000 m merges BP merges 256
bite<00:28:31.880><c> tokens</c><00:28:32.399><c> the</c><00:28:32.519><c> leaves</c><00:28:33.279><c> of</c><00:28:33.480><c> the</c><00:28:33.679><c> BP</c><00:28:34.120><c> tree</c>

00:28:34.990 --> 00:28:35.000 align:start position:0%
bite tokens the leaves of the BP tree
 

00:28:35.000 --> 00:28:36.789 align:start position:0%
bite tokens the leaves of the BP tree
and<00:28:35.200><c> one</c><00:28:35.480><c> special</c><00:28:35.760><c> end</c><00:28:35.960><c> of</c><00:28:36.120><c> text</c><00:28:36.320><c> token</c><00:28:36.679><c> that</c>

00:28:36.789 --> 00:28:36.799 align:start position:0%
and one special end of text token that
 

00:28:36.799 --> 00:28:38.789 align:start position:0%
and one special end of text token that
delimits<00:28:37.519><c> different</c><00:28:37.880><c> documents</c><00:28:38.480><c> and</c><00:28:38.640><c> can</c>

00:28:38.789 --> 00:28:38.799 align:start position:0%
delimits different documents and can
 

00:28:38.799 --> 00:28:41.549 align:start position:0%
delimits different documents and can
start<00:28:39.320><c> generation</c><00:28:39.840><c> as</c><00:28:40.159><c> well</c><00:28:41.159><c> and</c><00:28:41.279><c> there</c><00:28:41.399><c> are</c>

00:28:41.549 --> 00:28:41.559 align:start position:0%
start generation as well and there are
 

00:28:41.559 --> 00:28:43.190 align:start position:0%
start generation as well and there are
12<00:28:41.799><c> layers</c><00:28:42.279><c> there</c><00:28:42.360><c> are</c><00:28:42.519><c> 12</c><00:28:42.799><c> heads</c><00:28:42.960><c> in</c><00:28:43.080><c> the</c>

00:28:43.190 --> 00:28:43.200 align:start position:0%
12 layers there are 12 heads in the
 

00:28:43.200 --> 00:28:45.389 align:start position:0%
12 layers there are 12 heads in the
attention<00:28:43.760><c> and</c><00:28:43.919><c> the</c><00:28:44.279><c> dimension</c><00:28:45.120><c> of</c><00:28:45.279><c> the</c>

00:28:45.389 --> 00:28:45.399 align:start position:0%
attention and the dimension of the
 

00:28:45.399 --> 00:28:46.909 align:start position:0%
attention and the dimension of the
Transformers<00:28:45.960><c> was</c>

00:28:46.909 --> 00:28:46.919 align:start position:0%
Transformers was
 

00:28:46.919 --> 00:28:49.590 align:start position:0%
Transformers was
768<00:28:47.919><c> so</c><00:28:48.120><c> here's</c><00:28:48.320><c> how</c><00:28:48.480><c> we</c><00:28:48.559><c> can</c><00:28:48.720><c> now</c><00:28:48.960><c> load</c><00:28:49.480><c> the</c>

00:28:49.590 --> 00:28:49.600 align:start position:0%
768 so here's how we can now load the
 

00:28:49.600 --> 00:28:52.470 align:start position:0%
768 so here's how we can now load the
parameters<00:28:50.080><c> from</c><00:28:50.320><c> hugging</c><00:28:50.720><c> face</c><00:28:51.120><c> to</c><00:28:52.080><c> uh</c><00:28:52.240><c> our</c>

00:28:52.470 --> 00:28:52.480 align:start position:0%
parameters from hugging face to uh our
 

00:28:52.480 --> 00:28:54.830 align:start position:0%
parameters from hugging face to uh our
code<00:28:52.799><c> here</c><00:28:53.320><c> and</c><00:28:53.559><c> initialize</c><00:28:54.039><c> the</c><00:28:54.120><c> GPT</c><00:28:54.559><c> class</c>

00:28:54.830 --> 00:28:54.840 align:start position:0%
code here and initialize the GPT class
 

00:28:54.840 --> 00:28:56.470 align:start position:0%
code here and initialize the GPT class
with<00:28:55.000><c> those</c><00:28:55.159><c> parameters</c><00:28:55.919><c> so</c><00:28:56.039><c> let</c><00:28:56.120><c> me</c><00:28:56.279><c> just</c>

00:28:56.470 --> 00:28:56.480 align:start position:0%
with those parameters so let me just
 

00:28:56.480 --> 00:28:59.029 align:start position:0%
with those parameters so let me just
copy<00:28:56.799><c> paste</c><00:28:57.559><c> a</c><00:28:57.640><c> bunch</c><00:28:57.799><c> of</c><00:28:58.120><c> code</c>

00:28:59.029 --> 00:28:59.039 align:start position:0%
copy paste a bunch of code
 

00:28:59.039 --> 00:29:00.909 align:start position:0%
copy paste a bunch of code
here<00:29:00.039><c> and</c><00:29:00.240><c> I'm</c><00:29:00.320><c> not</c><00:29:00.440><c> going</c><00:29:00.519><c> to</c><00:29:00.640><c> go</c><00:29:00.760><c> through</c>

00:29:00.909 --> 00:29:00.919 align:start position:0%
here and I'm not going to go through
 

00:29:00.919 --> 00:29:03.909 align:start position:0%
here and I'm not going to go through
this<00:29:01.080><c> code</c><00:29:01.399><c> too</c><00:29:01.679><c> slow</c><00:29:02.399><c> too</c><00:29:02.640><c> quickly</c><00:29:03.440><c> too</c>

00:29:03.909 --> 00:29:03.919 align:start position:0%
this code too slow too quickly too
 

00:29:03.919 --> 00:29:07.630 align:start position:0%
this code too slow too quickly too
slowly<00:29:04.919><c> because</c><00:29:05.919><c> um</c><00:29:06.919><c> honestly</c><00:29:07.240><c> it's</c><00:29:07.360><c> not</c><00:29:07.519><c> that</c>

00:29:07.630 --> 00:29:07.640 align:start position:0%
slowly because um honestly it's not that
 

00:29:07.640 --> 00:29:08.870 align:start position:0%
slowly because um honestly it's not that
interesting<00:29:08.039><c> it's</c><00:29:08.159><c> not</c><00:29:08.320><c> that</c><00:29:08.440><c> exciting</c><00:29:08.760><c> we're</c>

00:29:08.870 --> 00:29:08.880 align:start position:0%
interesting it's not that exciting we're
 

00:29:08.880 --> 00:29:10.350 align:start position:0%
interesting it's not that exciting we're
just<00:29:09.000><c> loading</c><00:29:09.320><c> the</c><00:29:09.440><c> weights</c><00:29:09.799><c> so</c><00:29:09.960><c> it's</c><00:29:10.120><c> kind</c><00:29:10.200><c> of</c>

00:29:10.350 --> 00:29:10.360 align:start position:0%
just loading the weights so it's kind of
 

00:29:10.360 --> 00:29:12.830 align:start position:0%
just loading the weights so it's kind of
dry<00:29:11.120><c> but</c><00:29:11.279><c> as</c><00:29:11.360><c> I</c><00:29:11.480><c> mentioned</c><00:29:11.799><c> there</c><00:29:11.919><c> are</c><00:29:12.120><c> four</c>

00:29:12.830 --> 00:29:12.840 align:start position:0%
dry but as I mentioned there are four
 

00:29:12.840 --> 00:29:15.350 align:start position:0%
dry but as I mentioned there are four
models<00:29:13.240><c> in</c><00:29:13.360><c> this</c><00:29:13.480><c> miniseries</c><00:29:13.960><c> of</c><00:29:14.279><c> gpt2</c><00:29:15.279><c> this</c>

00:29:15.350 --> 00:29:15.360 align:start position:0%
models in this miniseries of gpt2 this
 

00:29:15.360 --> 00:29:18.070 align:start position:0%
models in this miniseries of gpt2 this
is<00:29:15.480><c> some</c><00:29:15.600><c> of</c><00:29:15.720><c> the</c><00:29:15.840><c> Jupiter</c><00:29:16.240><c> code</c><00:29:17.120><c> um</c><00:29:17.679><c> code</c><00:29:17.960><c> that</c>

00:29:18.070 --> 00:29:18.080 align:start position:0%
is some of the Jupiter code um code that
 

00:29:18.080 --> 00:29:20.310 align:start position:0%
is some of the Jupiter code um code that
we<00:29:18.240><c> had</c><00:29:18.480><c> here</c><00:29:18.600><c> on</c><00:29:18.760><c> the</c><00:29:18.919><c> right</c><00:29:19.440><c> I'm</c><00:29:19.600><c> just</c><00:29:19.960><c> pting</c>

00:29:20.310 --> 00:29:20.320 align:start position:0%
we had here on the right I'm just pting
 

00:29:20.320 --> 00:29:22.190 align:start position:0%
we had here on the right I'm just pting
it<00:29:20.480><c> over</c><00:29:21.200><c> these</c><00:29:21.360><c> are</c><00:29:21.480><c> the</c><00:29:21.600><c> hyper</c><00:29:21.799><c> parameters</c>

00:29:22.190 --> 00:29:22.200 align:start position:0%
it over these are the hyper parameters
 

00:29:22.200 --> 00:29:24.950 align:start position:0%
it over these are the hyper parameters
of<00:29:22.279><c> the</c><00:29:22.360><c> gpt2</c><00:29:23.240><c> models</c><00:29:24.240><c> uh</c><00:29:24.320><c> we're</c><00:29:24.519><c> creating</c><00:29:24.840><c> the</c>

00:29:24.950 --> 00:29:24.960 align:start position:0%
of the gpt2 models uh we're creating the
 

00:29:24.960 --> 00:29:27.269 align:start position:0%
of the gpt2 models uh we're creating the
config<00:29:25.399><c> object</c><00:29:25.679><c> and</c><00:29:25.799><c> creating</c><00:29:26.080><c> our</c><00:29:26.240><c> own</c><00:29:26.440><c> model</c>

00:29:27.269 --> 00:29:27.279 align:start position:0%
config object and creating our own model
 

00:29:27.279 --> 00:29:28.389 align:start position:0%
config object and creating our own model
and<00:29:27.399><c> then</c><00:29:27.519><c> what's</c><00:29:27.679><c> Happening</c><00:29:27.880><c> Here</c><00:29:28.159><c> is</c><00:29:28.279><c> we're</c>

00:29:28.389 --> 00:29:28.399 align:start position:0%
and then what's Happening Here is we're
 

00:29:28.399 --> 00:29:30.630 align:start position:0%
and then what's Happening Here is we're
creating<00:29:28.720><c> the</c><00:29:28.919><c> state</c><00:29:29.240><c> dict</c><00:29:29.880><c> both</c><00:29:30.080><c> for</c><00:29:30.320><c> our</c>

00:29:30.630 --> 00:29:30.640 align:start position:0%
creating the state dict both for our
 

00:29:30.640 --> 00:29:33.789 align:start position:0%
creating the state dict both for our
model<00:29:31.240><c> and</c><00:29:31.760><c> for</c><00:29:32.120><c> the</c><00:29:32.240><c> hugging</c><00:29:32.600><c> face</c>

00:29:33.789 --> 00:29:33.799 align:start position:0%
model and for the hugging face
 

00:29:33.799 --> 00:29:36.549 align:start position:0%
model and for the hugging face
model<00:29:34.799><c> um</c><00:29:35.559><c> and</c><00:29:35.760><c> then</c><00:29:35.919><c> what</c><00:29:36.080><c> we're</c><00:29:36.200><c> doing</c><00:29:36.440><c> here</c>

00:29:36.549 --> 00:29:36.559 align:start position:0%
model um and then what we're doing here
 

00:29:36.559 --> 00:29:37.990 align:start position:0%
model um and then what we're doing here
is<00:29:36.679><c> we're</c><00:29:36.840><c> going</c><00:29:37.000><c> over</c><00:29:37.159><c> the</c><00:29:37.320><c> hugging</c><00:29:37.720><c> face</c>

00:29:37.990 --> 00:29:38.000 align:start position:0%
is we're going over the hugging face
 

00:29:38.000 --> 00:29:42.350 align:start position:0%
is we're going over the hugging face
model<00:29:38.760><c> keys</c><00:29:39.760><c> and</c><00:29:40.000><c> we're</c><00:29:40.519><c> copying</c><00:29:41.080><c> over</c><00:29:41.760><c> those</c>

00:29:42.350 --> 00:29:42.360 align:start position:0%
model keys and we're copying over those
 

00:29:42.360 --> 00:29:45.070 align:start position:0%
model keys and we're copying over those
tensors<00:29:43.360><c> and</c><00:29:43.919><c> in</c><00:29:44.120><c> the</c><00:29:44.320><c> process</c><00:29:44.679><c> we</c><00:29:44.760><c> are</c><00:29:44.960><c> kind</c>

00:29:45.070 --> 00:29:45.080 align:start position:0%
tensors and in the process we are kind
 

00:29:45.080 --> 00:29:47.350 align:start position:0%
tensors and in the process we are kind
of<00:29:45.200><c> ignoring</c><00:29:45.640><c> a</c><00:29:45.720><c> few</c><00:29:45.919><c> of</c><00:29:46.080><c> the</c><00:29:46.480><c> buffers</c><00:29:47.159><c> they're</c>

00:29:47.350 --> 00:29:47.360 align:start position:0%
of ignoring a few of the buffers they're
 

00:29:47.360 --> 00:29:49.070 align:start position:0%
of ignoring a few of the buffers they're
not<00:29:47.519><c> parameters</c><00:29:47.919><c> they're</c><00:29:48.120><c> buffers</c><00:29:48.760><c> so</c><00:29:48.919><c> for</c>

00:29:49.070 --> 00:29:49.080 align:start position:0%
not parameters they're buffers so for
 

00:29:49.080 --> 00:29:51.190 align:start position:0%
not parameters they're buffers so for
example<00:29:49.360><c> attention</c><00:29:49.799><c> dobias</c><00:29:50.760><c> uh</c><00:29:50.919><c> that's</c><00:29:51.080><c> just</c>

00:29:51.190 --> 00:29:51.200 align:start position:0%
example attention dobias uh that's just
 

00:29:51.200 --> 00:29:53.750 align:start position:0%
example attention dobias uh that's just
used<00:29:51.440><c> for</c><00:29:51.559><c> the</c><00:29:51.640><c> autoaggressive</c><00:29:52.360><c> mask</c><00:29:53.360><c> and</c><00:29:53.519><c> so</c>

00:29:53.750 --> 00:29:53.760 align:start position:0%
used for the autoaggressive mask and so
 

00:29:53.760 --> 00:29:56.789 align:start position:0%
used for the autoaggressive mask and so
we<00:29:53.880><c> are</c><00:29:54.080><c> ignoring</c><00:29:54.519><c> some</c><00:29:54.640><c> of</c><00:29:54.840><c> those</c><00:29:55.320><c> masks</c><00:29:56.320><c> and</c>

00:29:56.789 --> 00:29:56.799 align:start position:0%
we are ignoring some of those masks and
 

00:29:56.799 --> 00:29:58.389 align:start position:0%
we are ignoring some of those masks and
uh<00:29:57.159><c> that's</c><00:29:57.360><c> it</c><00:29:57.799><c> and</c><00:29:57.919><c> then</c><00:29:58.080><c> then</c><00:29:58.200><c> one</c>

00:29:58.389 --> 00:29:58.399 align:start position:0%
uh that's it and then then one
 

00:29:58.399 --> 00:30:00.549 align:start position:0%
uh that's it and then then one
additional<00:29:58.919><c> kind</c><00:29:59.039><c> of</c><00:29:59.360><c> annoyance</c><00:30:00.240><c> is</c><00:30:00.360><c> that</c>

00:30:00.549 --> 00:30:00.559 align:start position:0%
additional kind of annoyance is that
 

00:30:00.559 --> 00:30:02.230 align:start position:0%
additional kind of annoyance is that
this<00:30:00.760><c> comes</c><00:30:01.000><c> from</c><00:30:01.159><c> the</c><00:30:01.279><c> tensorflow</c><00:30:01.760><c> repo</c><00:30:02.120><c> and</c>

00:30:02.230 --> 00:30:02.240 align:start position:0%
this comes from the tensorflow repo and
 

00:30:02.240 --> 00:30:04.029 align:start position:0%
this comes from the tensorflow repo and
I'm<00:30:02.360><c> not</c><00:30:02.480><c> sure</c><00:30:02.960><c> how</c><00:30:03.440><c> this</c><00:30:03.559><c> is</c><00:30:03.679><c> a</c><00:30:03.720><c> little</c><00:30:03.880><c> bit</c>

00:30:04.029 --> 00:30:04.039 align:start position:0%
I'm not sure how this is a little bit
 

00:30:04.039 --> 00:30:05.509 align:start position:0%
I'm not sure how this is a little bit
annoying<00:30:04.559><c> but</c><00:30:04.679><c> some</c><00:30:04.799><c> of</c><00:30:04.880><c> the</c><00:30:05.000><c> weights</c><00:30:05.279><c> are</c>

00:30:05.509 --> 00:30:05.519 align:start position:0%
annoying but some of the weights are
 

00:30:05.519 --> 00:30:08.149 align:start position:0%
annoying but some of the weights are
transposed<00:30:06.519><c> from</c><00:30:06.760><c> what</c><00:30:06.919><c> pytorch</c><00:30:07.360><c> would</c><00:30:07.519><c> want</c>

00:30:08.149 --> 00:30:08.159 align:start position:0%
transposed from what pytorch would want
 

00:30:08.159 --> 00:30:10.590 align:start position:0%
transposed from what pytorch would want
and<00:30:08.320><c> so</c><00:30:08.919><c> manually</c><00:30:09.440><c> I</c><00:30:09.600><c> hardcoded</c><00:30:10.200><c> the</c><00:30:10.320><c> weights</c>

00:30:10.590 --> 00:30:10.600 align:start position:0%
and so manually I hardcoded the weights
 

00:30:10.600 --> 00:30:12.630 align:start position:0%
and so manually I hardcoded the weights
that<00:30:10.720><c> should</c><00:30:10.880><c> be</c><00:30:11.159><c> transposed</c><00:30:12.159><c> and</c><00:30:12.279><c> then</c><00:30:12.480><c> we</c>

00:30:12.630 --> 00:30:12.640 align:start position:0%
that should be transposed and then we
 

00:30:12.640 --> 00:30:15.470 align:start position:0%
that should be transposed and then we
transpose<00:30:13.200><c> them</c><00:30:13.519><c> if</c><00:30:13.679><c> that</c><00:30:13.799><c> is</c><00:30:13.919><c> so</c><00:30:14.840><c> and</c><00:30:15.000><c> then</c><00:30:15.120><c> we</c>

00:30:15.470 --> 00:30:15.480 align:start position:0%
transpose them if that is so and then we
 

00:30:15.480 --> 00:30:18.310 align:start position:0%
transpose them if that is so and then we
return<00:30:15.840><c> this</c><00:30:16.399><c> model</c><00:30:17.399><c> so</c><00:30:17.840><c> the</c><00:30:17.960><c> from</c>

00:30:18.310 --> 00:30:18.320 align:start position:0%
return this model so the from
 

00:30:18.320 --> 00:30:20.389 align:start position:0%
return this model so the from
pre-trained<00:30:19.039><c> is</c><00:30:19.200><c> a</c>

00:30:20.389 --> 00:30:20.399 align:start position:0%
pre-trained is a
 

00:30:20.399 --> 00:30:23.549 align:start position:0%
pre-trained is a
Constructor<00:30:21.399><c> or</c><00:30:21.720><c> class</c><00:30:22.039><c> method</c><00:30:22.519><c> in</c><00:30:22.720><c> Python</c>

00:30:23.549 --> 00:30:23.559 align:start position:0%
Constructor or class method in Python
 

00:30:23.559 --> 00:30:26.590 align:start position:0%
Constructor or class method in Python
that<00:30:23.919><c> Returns</c><00:30:24.440><c> the</c><00:30:24.559><c> GPT</c><00:30:25.200><c> object</c><00:30:26.159><c> if</c><00:30:26.279><c> we</c><00:30:26.440><c> just</c>

00:30:26.590 --> 00:30:26.600 align:start position:0%
that Returns the GPT object if we just
 

00:30:26.600 --> 00:30:28.710 align:start position:0%
that Returns the GPT object if we just
give<00:30:26.679><c> it</c><00:30:26.919><c> the</c><00:30:27.039><c> model</c><00:30:27.360><c> type</c><00:30:27.760><c> which</c><00:30:28.039><c> in</c><00:30:28.200><c> our</c><00:30:28.440><c> case</c>

00:30:28.710 --> 00:30:28.720 align:start position:0%
give it the model type which in our case
 

00:30:28.720 --> 00:30:30.549 align:start position:0%
give it the model type which in our case
is<00:30:28.880><c> gpt2</c><00:30:29.600><c> the</c><00:30:29.720><c> smallest</c><00:30:30.080><c> model</c><00:30:30.320><c> that</c><00:30:30.399><c> we're</c>

00:30:30.549 --> 00:30:30.559 align:start position:0%
is gpt2 the smallest model that we're
 

00:30:30.559 --> 00:30:33.110 align:start position:0%
is gpt2 the smallest model that we're
interested<00:30:30.880><c> in</c><00:30:31.880><c> so</c><00:30:32.039><c> this</c><00:30:32.159><c> is</c><00:30:32.279><c> the</c><00:30:32.440><c> code</c><00:30:32.960><c> and</c>

00:30:33.110 --> 00:30:33.120 align:start position:0%
interested in so this is the code and
 

00:30:33.120 --> 00:30:35.950 align:start position:0%
interested in so this is the code and
this<00:30:33.200><c> is</c><00:30:33.399><c> how</c><00:30:33.519><c> you</c><00:30:33.640><c> would</c><00:30:33.799><c> use</c><00:30:34.000><c> it</c><00:30:35.000><c> and</c><00:30:35.440><c> um</c><00:30:35.760><c> we</c>

00:30:35.950 --> 00:30:35.960 align:start position:0%
this is how you would use it and um we
 

00:30:35.960 --> 00:30:38.750 align:start position:0%
this is how you would use it and um we
can<00:30:36.159><c> pop</c><00:30:36.399><c> open</c><00:30:36.559><c> the</c><00:30:36.679><c> terminal</c><00:30:37.159><c> here</c><00:30:38.159><c> in</c><00:30:38.360><c> vs</c>

00:30:38.750 --> 00:30:38.760 align:start position:0%
can pop open the terminal here in vs
 

00:30:38.760 --> 00:30:44.310 align:start position:0%
can pop open the terminal here in vs
code<00:30:39.279><c> and</c><00:30:39.480><c> we</c><00:30:39.640><c> can</c><00:30:40.120><c> python</c><00:30:40.559><c> train</c><00:30:40.919><c> gbt2</c><00:30:42.200><c> pi</c><00:30:43.320><c> and</c>

00:30:44.310 --> 00:30:44.320 align:start position:0%
code and we can python train gbt2 pi and
 

00:30:44.320 --> 00:30:46.870 align:start position:0%
code and we can python train gbt2 pi and
fingers

00:30:46.870 --> 00:30:46.880 align:start position:0%
 
 

00:30:46.880 --> 00:30:50.549 align:start position:0%
 
crossed<00:30:47.880><c> okay</c><00:30:48.000><c> so</c><00:30:48.120><c> we</c><00:30:48.240><c> didn't</c><00:30:48.840><c> crash</c><00:30:49.840><c> and</c><00:30:50.039><c> so</c>

00:30:50.549 --> 00:30:50.559 align:start position:0%
crossed okay so we didn't crash and so
 

00:30:50.559 --> 00:30:52.669 align:start position:0%
crossed okay so we didn't crash and so
we<00:30:50.679><c> can</c><00:30:50.880><c> load</c><00:30:51.320><c> the</c><00:30:51.480><c> weights</c><00:30:52.039><c> and</c><00:30:52.159><c> the</c><00:30:52.279><c> biases</c>

00:30:52.669 --> 00:30:52.679 align:start position:0%
we can load the weights and the biases
 

00:30:52.679 --> 00:30:55.750 align:start position:0%
we can load the weights and the biases
and<00:30:52.840><c> everything</c><00:30:53.120><c> else</c><00:30:53.760><c> into</c><00:30:54.159><c> our</c><00:30:54.559><c> Ann</c><00:30:54.919><c> module</c>

00:30:55.750 --> 00:30:55.760 align:start position:0%
and everything else into our Ann module
 

00:30:55.760 --> 00:30:57.070 align:start position:0%
and everything else into our Ann module
but<00:30:55.960><c> now</c><00:30:56.120><c> let's</c><00:30:56.320><c> also</c><00:30:56.559><c> get</c><00:30:56.720><c> additional</c>

00:30:57.070 --> 00:30:57.080 align:start position:0%
but now let's also get additional
 

00:30:57.080 --> 00:30:58.310 align:start position:0%
but now let's also get additional
confidence<00:30:57.440><c> that</c><00:30:57.519><c> this</c><00:30:57.639><c> is</c><00:30:57.720><c> working</c><00:30:58.200><c> and</c>

00:30:58.310 --> 00:30:58.320 align:start position:0%
confidence that this is working and
 

00:30:58.320 --> 00:31:00.070 align:start position:0%
confidence that this is working and
let's<00:30:58.480><c> try</c><00:30:58.679><c> to</c><00:30:59.000><c> actually</c><00:30:59.320><c> generate</c><00:30:59.720><c> from</c><00:30:59.919><c> this</c>

00:31:00.070 --> 00:31:00.080 align:start position:0%
let's try to actually generate from this
 

00:31:00.080 --> 00:31:01.870 align:start position:0%
let's try to actually generate from this
model<00:31:00.840><c> okay</c><00:31:01.000><c> now</c><00:31:01.200><c> before</c><00:31:01.399><c> we</c><00:31:01.519><c> can</c><00:31:01.679><c> actually</c>

00:31:01.870 --> 00:31:01.880 align:start position:0%
model okay now before we can actually
 

00:31:01.880 --> 00:31:03.110 align:start position:0%
model okay now before we can actually
generate<00:31:02.240><c> from</c><00:31:02.399><c> this</c><00:31:02.519><c> model</c><00:31:02.760><c> we</c><00:31:02.840><c> have</c><00:31:02.960><c> to</c><00:31:03.039><c> be</c>

00:31:03.110 --> 00:31:03.120 align:start position:0%
generate from this model we have to be
 

00:31:03.120 --> 00:31:04.909 align:start position:0%
generate from this model we have to be
able<00:31:03.320><c> to</c><00:31:03.480><c> forward</c><00:31:03.880><c> it</c><00:31:04.200><c> we</c><00:31:04.320><c> didn't</c><00:31:04.600><c> actually</c>

00:31:04.909 --> 00:31:04.919 align:start position:0%
able to forward it we didn't actually
 

00:31:04.919 --> 00:31:06.950 align:start position:0%
able to forward it we didn't actually
write<00:31:05.159><c> that</c><00:31:05.320><c> code</c><00:31:05.639><c> yet</c><00:31:06.240><c> so</c><00:31:06.480><c> here's</c><00:31:06.799><c> the</c>

00:31:06.950 --> 00:31:06.960 align:start position:0%
write that code yet so here's the
 

00:31:06.960 --> 00:31:08.110 align:start position:0%
write that code yet so here's the
forward

00:31:08.110 --> 00:31:08.120 align:start position:0%
forward
 

00:31:08.120 --> 00:31:11.070 align:start position:0%
forward
function<00:31:09.120><c> so</c><00:31:09.279><c> the</c><00:31:09.399><c> input</c><00:31:09.639><c> to</c><00:31:09.760><c> the</c><00:31:09.880><c> forward</c><00:31:10.559><c> is</c>

00:31:11.070 --> 00:31:11.080 align:start position:0%
function so the input to the forward is
 

00:31:11.080 --> 00:31:13.950 align:start position:0%
function so the input to the forward is
going<00:31:11.240><c> to</c><00:31:11.440><c> be</c><00:31:11.799><c> our</c><00:31:12.039><c> indices</c><00:31:12.720><c> our</c><00:31:13.039><c> tokens</c><00:31:13.799><c> uh</c>

00:31:13.950 --> 00:31:13.960 align:start position:0%
going to be our indices our tokens uh
 

00:31:13.960 --> 00:31:16.070 align:start position:0%
going to be our indices our tokens uh
token<00:31:14.240><c> indices</c><00:31:15.159><c> and</c><00:31:15.279><c> they</c><00:31:15.399><c> are</c><00:31:15.600><c> always</c><00:31:15.919><c> of</c>

00:31:16.070 --> 00:31:16.080 align:start position:0%
token indices and they are always of
 

00:31:16.080 --> 00:31:19.590 align:start position:0%
token indices and they are always of
shape<00:31:16.440><c> B</c><00:31:16.720><c> BYT</c><00:31:17.720><c> and</c><00:31:18.519><c> so</c><00:31:18.639><c> we</c><00:31:18.760><c> have</c><00:31:18.960><c> batch</c>

00:31:19.590 --> 00:31:19.600 align:start position:0%
shape B BYT and so we have batch
 

00:31:19.600 --> 00:31:22.269 align:start position:0%
shape B BYT and so we have batch
dimension<00:31:20.279><c> of</c><00:31:20.639><c> B</c><00:31:21.480><c> and</c><00:31:21.559><c> then</c><00:31:21.679><c> we</c><00:31:21.799><c> have</c><00:31:21.960><c> the</c><00:31:22.080><c> time</c>

00:31:22.269 --> 00:31:22.279 align:start position:0%
dimension of B and then we have the time
 

00:31:22.279 --> 00:31:26.029 align:start position:0%
dimension of B and then we have the time
dimension<00:31:22.880><c> of</c><00:31:23.159><c> up</c><00:31:23.320><c> to</c><00:31:24.039><c> T</c><00:31:25.039><c> and</c><00:31:25.240><c> the</c><00:31:25.399><c> T</c><00:31:25.679><c> can't</c><00:31:25.880><c> be</c>

00:31:26.029 --> 00:31:26.039 align:start position:0%
dimension of up to T and the T can't be
 

00:31:26.039 --> 00:31:27.750 align:start position:0%
dimension of up to T and the T can't be
more<00:31:26.240><c> than</c><00:31:26.440><c> the</c><00:31:26.600><c> block</c><00:31:26.919><c> size</c><00:31:27.279><c> the</c><00:31:27.360><c> block</c><00:31:27.600><c> size</c>

00:31:27.750 --> 00:31:27.760 align:start position:0%
more than the block size the block size
 

00:31:27.760 --> 00:31:30.629 align:start position:0%
more than the block size the block size
is<00:31:27.919><c> is</c><00:31:28.000><c> the</c><00:31:28.080><c> maximum</c><00:31:28.399><c> sequence</c><00:31:29.039><c> length</c><00:31:30.039><c> so</c><00:31:30.399><c> B</c>

00:31:30.629 --> 00:31:30.639 align:start position:0%
is is the maximum sequence length so B
 

00:31:30.639 --> 00:31:32.830 align:start position:0%
is is the maximum sequence length so B
BYT<00:31:31.000><c> indices</c><00:31:31.880><c> arranged</c><00:31:32.320><c> is</c><00:31:32.440><c> sort</c><00:31:32.559><c> of</c><00:31:32.679><c> like</c><00:31:32.760><c> a</c>

00:31:32.830 --> 00:31:32.840 align:start position:0%
BYT indices arranged is sort of like a
 

00:31:32.840 --> 00:31:35.070 align:start position:0%
BYT indices arranged is sort of like a
two-dimensional<00:31:33.440><c> layout</c><00:31:34.360><c> and</c><00:31:34.600><c> remember</c><00:31:34.960><c> that</c>

00:31:35.070 --> 00:31:35.080 align:start position:0%
two-dimensional layout and remember that
 

00:31:35.080 --> 00:31:37.549 align:start position:0%
two-dimensional layout and remember that
basically<00:31:35.440><c> every</c><00:31:35.600><c> single</c><00:31:35.960><c> row</c><00:31:36.480><c> of</c><00:31:36.720><c> this</c><00:31:37.080><c> is</c><00:31:37.320><c> of</c>

00:31:37.549 --> 00:31:37.559 align:start position:0%
basically every single row of this is of
 

00:31:37.559 --> 00:31:41.430 align:start position:0%
basically every single row of this is of
size<00:31:38.039><c> up</c><00:31:38.240><c> to</c><00:31:39.200><c> uh</c><00:31:39.320><c> block</c><00:31:39.679><c> size</c><00:31:40.480><c> and</c><00:31:40.639><c> this</c><00:31:40.720><c> is</c><00:31:40.960><c> T</c>

00:31:41.430 --> 00:31:41.440 align:start position:0%
size up to uh block size and this is T
 

00:31:41.440 --> 00:31:43.430 align:start position:0%
size up to uh block size and this is T
tokens<00:31:41.960><c> that</c><00:31:42.080><c> are</c><00:31:42.200><c> in</c><00:31:42.279><c> a</c><00:31:42.440><c> sequence</c><00:31:43.240><c> and</c><00:31:43.320><c> then</c>

00:31:43.430 --> 00:31:43.440 align:start position:0%
tokens that are in a sequence and then
 

00:31:43.440 --> 00:31:46.389 align:start position:0%
tokens that are in a sequence and then
we<00:31:43.559><c> have</c><00:31:43.720><c> B</c><00:31:44.080><c> independent</c><00:31:45.000><c> sequences</c><00:31:46.000><c> stacked</c>

00:31:46.389 --> 00:31:46.399 align:start position:0%
we have B independent sequences stacked
 

00:31:46.399 --> 00:31:48.629 align:start position:0%
we have B independent sequences stacked
up<00:31:46.519><c> in</c><00:31:46.600><c> a</c><00:31:46.760><c> batch</c><00:31:47.120><c> so</c><00:31:47.320><c> that</c><00:31:47.440><c> this</c><00:31:47.559><c> is</c>

00:31:48.629 --> 00:31:48.639 align:start position:0%
up in a batch so that this is
 

00:31:48.639 --> 00:31:51.190 align:start position:0%
up in a batch so that this is
efficient<00:31:49.639><c> now</c><00:31:50.039><c> here</c><00:31:50.200><c> we</c><00:31:50.320><c> are</c><00:31:50.440><c> forwarding</c><00:31:50.960><c> the</c>

00:31:51.190 --> 00:31:51.200 align:start position:0%
efficient now here we are forwarding the
 

00:31:51.200 --> 00:31:52.230 align:start position:0%
efficient now here we are forwarding the
position<00:31:51.480><c> embeddings</c><00:31:51.880><c> and</c><00:31:51.960><c> the</c><00:31:52.039><c> token</c>

00:31:52.230 --> 00:31:52.240 align:start position:0%
position embeddings and the token
 

00:31:52.240 --> 00:31:54.389 align:start position:0%
position embeddings and the token
embeddings<00:31:53.200><c> and</c><00:31:53.399><c> this</c><00:31:53.559><c> code</c><00:31:53.760><c> should</c><00:31:53.960><c> be</c><00:31:54.200><c> very</c>

00:31:54.389 --> 00:31:54.399 align:start position:0%
embeddings and this code should be very
 

00:31:54.399 --> 00:31:56.509 align:start position:0%
embeddings and this code should be very
recognizable<00:31:54.919><c> from</c><00:31:55.039><c> the</c><00:31:55.159><c> previous</c><00:31:55.519><c> lecture</c>

00:31:56.509 --> 00:31:56.519 align:start position:0%
recognizable from the previous lecture
 

00:31:56.519 --> 00:31:59.750 align:start position:0%
recognizable from the previous lecture
so<00:31:57.120><c> um</c><00:31:57.600><c> we</c><00:31:57.960><c> basically</c><00:31:58.320><c> use</c><00:31:58.919><c> uh</c><00:31:59.080><c> a</c><00:31:59.240><c> range</c><00:31:59.639><c> which</c>

00:31:59.750 --> 00:31:59.760 align:start position:0%
so um we basically use uh a range which
 

00:31:59.760 --> 00:32:01.310 align:start position:0%
so um we basically use uh a range which
is<00:31:59.880><c> kind</c><00:32:00.000><c> of</c><00:32:00.120><c> like</c><00:32:00.240><c> a</c><00:32:00.399><c> version</c><00:32:00.639><c> of</c><00:32:00.799><c> range</c><00:32:01.200><c> but</c>

00:32:01.310 --> 00:32:01.320 align:start position:0%
is kind of like a version of range but
 

00:32:01.320 --> 00:32:04.110 align:start position:0%
is kind of like a version of range but
for<00:32:01.799><c> pytorch</c><00:32:02.799><c> uh</c><00:32:02.919><c> and</c><00:32:03.039><c> we're</c><00:32:03.519><c> iterating</c><00:32:03.960><c> from</c>

00:32:04.110 --> 00:32:04.120 align:start position:0%
for pytorch uh and we're iterating from
 

00:32:04.120 --> 00:32:07.310 align:start position:0%
for pytorch uh and we're iterating from
Z<00:32:04.360><c> to</c><00:32:04.559><c> T</c><00:32:05.200><c> and</c><00:32:05.360><c> creating</c><00:32:05.760><c> this</c><00:32:06.080><c> uh</c><00:32:06.320><c> positions</c><00:32:07.200><c> uh</c>

00:32:07.310 --> 00:32:07.320 align:start position:0%
Z to T and creating this uh positions uh
 

00:32:07.320 --> 00:32:10.230 align:start position:0%
Z to T and creating this uh positions uh
sort<00:32:07.480><c> of</c><00:32:08.279><c> uh</c><00:32:08.679><c> indices</c>

00:32:10.230 --> 00:32:10.240 align:start position:0%
sort of uh indices
 

00:32:10.240 --> 00:32:12.389 align:start position:0%
sort of uh indices
um<00:32:11.240><c> and</c><00:32:11.440><c> then</c><00:32:11.639><c> we</c><00:32:11.720><c> are</c><00:32:11.880><c> making</c><00:32:12.080><c> sure</c><00:32:12.279><c> that</c>

00:32:12.389 --> 00:32:12.399 align:start position:0%
um and then we are making sure that
 

00:32:12.399 --> 00:32:14.230 align:start position:0%
um and then we are making sure that
they're<00:32:12.600><c> in</c><00:32:12.760><c> the</c><00:32:12.880><c> same</c><00:32:13.120><c> device</c><00:32:13.480><c> as</c><00:32:13.639><c> idx</c>

00:32:14.230 --> 00:32:14.240 align:start position:0%
they're in the same device as idx
 

00:32:14.240 --> 00:32:15.230 align:start position:0%
they're in the same device as idx
because<00:32:14.440><c> we're</c><00:32:14.559><c> not</c><00:32:14.679><c> going</c><00:32:14.799><c> to</c><00:32:14.880><c> be</c><00:32:14.960><c> training</c>

00:32:15.230 --> 00:32:15.240 align:start position:0%
because we're not going to be training
 

00:32:15.240 --> 00:32:16.750 align:start position:0%
because we're not going to be training
on<00:32:15.399><c> only</c><00:32:15.639><c> CPU</c><00:32:16.120><c> that's</c><00:32:16.279><c> going</c><00:32:16.360><c> to</c><00:32:16.440><c> be</c><00:32:16.559><c> too</c>

00:32:16.750 --> 00:32:16.760 align:start position:0%
on only CPU that's going to be too
 

00:32:16.760 --> 00:32:18.230 align:start position:0%
on only CPU that's going to be too
inefficient<00:32:17.279><c> we</c><00:32:17.399><c> want</c><00:32:17.519><c> to</c><00:32:17.600><c> be</c><00:32:17.720><c> training</c><00:32:18.000><c> on</c>

00:32:18.230 --> 00:32:18.240 align:start position:0%
inefficient we want to be training on
 

00:32:18.240 --> 00:32:20.470 align:start position:0%
inefficient we want to be training on
GPU<00:32:18.760><c> and</c><00:32:18.840><c> that's</c><00:32:18.960><c> going</c><00:32:19.080><c> to</c><00:32:19.159><c> come</c><00:32:19.360><c> in</c><00:32:19.679><c> in</c><00:32:19.760><c> a</c>

00:32:20.470 --> 00:32:20.480 align:start position:0%
GPU and that's going to come in in a
 

00:32:20.480 --> 00:32:22.310 align:start position:0%
GPU and that's going to come in in a
bit<00:32:21.480><c> uh</c><00:32:21.600><c> then</c><00:32:21.720><c> we</c><00:32:21.840><c> have</c><00:32:22.000><c> the</c><00:32:22.080><c> position</c>

00:32:22.310 --> 00:32:22.320 align:start position:0%
bit uh then we have the position
 

00:32:22.320 --> 00:32:24.350 align:start position:0%
bit uh then we have the position
embeddings<00:32:22.679><c> and</c><00:32:22.799><c> the</c><00:32:22.880><c> token</c><00:32:23.120><c> embeddings</c><00:32:23.880><c> and</c>

00:32:24.350 --> 00:32:24.360 align:start position:0%
embeddings and the token embeddings and
 

00:32:24.360 --> 00:32:26.909 align:start position:0%
embeddings and the token embeddings and
the<00:32:24.559><c> addition</c><00:32:25.120><c> operation</c><00:32:25.600><c> of</c><00:32:25.799><c> those</c><00:32:25.960><c> two</c><00:32:26.720><c> now</c>

00:32:26.909 --> 00:32:26.919 align:start position:0%
the addition operation of those two now
 

00:32:26.919 --> 00:32:28.310 align:start position:0%
the addition operation of those two now
notice<00:32:27.159><c> that</c><00:32:27.279><c> the</c><00:32:27.320><c> position</c><00:32:27.559><c> embed</c><00:32:28.120><c> are</c><00:32:28.200><c> going</c>

00:32:28.310 --> 00:32:28.320 align:start position:0%
notice that the position embed are going
 

00:32:28.320 --> 00:32:31.110 align:start position:0%
notice that the position embed are going
to<00:32:28.440><c> be</c><00:32:28.559><c> identical</c><00:32:29.000><c> for</c><00:32:29.240><c> every</c><00:32:29.440><c> single</c><00:32:29.799><c> row</c><00:32:30.600><c> of</c>

00:32:31.110 --> 00:32:31.120 align:start position:0%
to be identical for every single row of
 

00:32:31.120 --> 00:32:33.870 align:start position:0%
to be identical for every single row of
uh<00:32:31.279><c> of</c><00:32:31.440><c> input</c><00:32:32.240><c> and</c><00:32:32.360><c> so</c><00:32:32.559><c> there's</c><00:32:32.880><c> broadcasting</c>

00:32:33.870 --> 00:32:33.880 align:start position:0%
uh of input and so there's broadcasting
 

00:32:33.880 --> 00:32:36.710 align:start position:0%
uh of input and so there's broadcasting
hidden<00:32:34.519><c> inside</c><00:32:35.039><c> this</c><00:32:35.360><c> plus</c><00:32:36.159><c> where</c><00:32:36.320><c> we</c><00:32:36.440><c> have</c><00:32:36.559><c> to</c>

00:32:36.710 --> 00:32:36.720 align:start position:0%
hidden inside this plus where we have to
 

00:32:36.720 --> 00:32:38.549 align:start position:0%
hidden inside this plus where we have to
create<00:32:36.919><c> an</c><00:32:37.080><c> additional</c><00:32:37.440><c> Dimension</c><00:32:37.880><c> here</c><00:32:38.360><c> and</c>

00:32:38.549 --> 00:32:38.559 align:start position:0%
create an additional Dimension here and
 

00:32:38.559 --> 00:32:40.629 align:start position:0%
create an additional Dimension here and
then<00:32:38.799><c> these</c><00:32:38.960><c> two</c><00:32:39.240><c> add</c><00:32:39.440><c> up</c><00:32:40.120><c> because</c><00:32:40.360><c> the</c><00:32:40.480><c> same</c>

00:32:40.629 --> 00:32:40.639 align:start position:0%
then these two add up because the same
 

00:32:40.639 --> 00:32:41.950 align:start position:0%
then these two add up because the same
position<00:32:40.960><c> embeddings</c><00:32:41.360><c> apply</c><00:32:41.639><c> at</c><00:32:41.799><c> every</c>

00:32:41.950 --> 00:32:41.960 align:start position:0%
position embeddings apply at every
 

00:32:41.960 --> 00:32:44.269 align:start position:0%
position embeddings apply at every
single<00:32:42.279><c> row</c><00:32:42.840><c> of</c><00:32:43.000><c> our</c><00:32:43.399><c> example</c><00:32:43.880><c> stacked</c><00:32:44.120><c> up</c><00:32:44.200><c> in</c>

00:32:44.269 --> 00:32:44.279 align:start position:0%
single row of our example stacked up in
 

00:32:44.279 --> 00:32:46.830 align:start position:0%
single row of our example stacked up in
a<00:32:44.760><c> batch</c><00:32:45.760><c> then</c><00:32:45.840><c> we</c><00:32:45.960><c> forward</c><00:32:46.279><c> the</c><00:32:46.360><c> Transformer</c>

00:32:46.830 --> 00:32:46.840 align:start position:0%
a batch then we forward the Transformer
 

00:32:46.840 --> 00:32:49.070 align:start position:0%
a batch then we forward the Transformer
blocks<00:32:47.279><c> and</c><00:32:47.440><c> finally</c><00:32:47.799><c> the</c><00:32:48.039><c> last</c><00:32:48.279><c> layer</c><00:32:48.559><c> norm</c>

00:32:49.070 --> 00:32:49.080 align:start position:0%
blocks and finally the last layer norm
 

00:32:49.080 --> 00:32:52.350 align:start position:0%
blocks and finally the last layer norm
and<00:32:49.320><c> the</c><00:32:49.440><c> LM</c><00:32:50.240><c> head</c><00:32:51.240><c> so</c><00:32:51.399><c> what</c><00:32:51.559><c> comes</c><00:32:51.720><c> out</c><00:32:52.120><c> after</c>

00:32:52.350 --> 00:32:52.360 align:start position:0%
and the LM head so what comes out after
 

00:32:52.360 --> 00:32:55.230 align:start position:0%
and the LM head so what comes out after
forward<00:32:52.799><c> is</c><00:32:52.960><c> the</c><00:32:53.320><c> logits</c><00:32:54.320><c> and</c><00:32:54.639><c> if</c><00:32:54.760><c> the</c><00:32:54.880><c> input</c>

00:32:55.230 --> 00:32:55.240 align:start position:0%
forward is the logits and if the input
 

00:32:55.240 --> 00:32:58.470 align:start position:0%
forward is the logits and if the input
was<00:32:55.399><c> B</c><00:32:55.639><c> BYT</c><00:32:56.279><c> indices</c><00:32:57.279><c> then</c><00:32:57.399><c> at</c><00:32:57.519><c> every</c><00:32:57.919><c> single</c><00:32:58.200><c> B</c>

00:32:58.470 --> 00:32:58.480 align:start position:0%
was B BYT indices then at every single B
 

00:32:58.480 --> 00:33:02.950 align:start position:0%
was B BYT indices then at every single B
by<00:32:58.679><c> T</c><00:32:59.360><c> we</c><00:32:59.480><c> will</c><00:33:00.039><c> calculate</c><00:33:01.039><c> the</c><00:33:01.720><c> uh</c><00:33:01.880><c> logits</c><00:33:02.679><c> for</c>

00:33:02.950 --> 00:33:02.960 align:start position:0%
by T we will calculate the uh logits for
 

00:33:02.960 --> 00:33:05.470 align:start position:0%
by T we will calculate the uh logits for
what<00:33:03.159><c> token</c><00:33:03.519><c> comes</c><00:33:03.880><c> next</c><00:33:04.240><c> in</c><00:33:04.360><c> the</c><00:33:04.519><c> sequence</c><00:33:05.320><c> so</c>

00:33:05.470 --> 00:33:05.480 align:start position:0%
what token comes next in the sequence so
 

00:33:05.480 --> 00:33:09.549 align:start position:0%
what token comes next in the sequence so
what<00:33:05.600><c> is</c><00:33:05.799><c> the</c><00:33:06.039><c> token</c><00:33:06.760><c> B</c><00:33:07.919><c> t+1</c><00:33:08.919><c> the</c><00:33:09.039><c> one</c><00:33:09.279><c> on</c><00:33:09.399><c> the</c>

00:33:09.549 --> 00:33:09.559 align:start position:0%
what is the token B t+1 the one on the
 

00:33:09.559 --> 00:33:12.950 align:start position:0%
what is the token B t+1 the one on the
right<00:33:09.760><c> of</c><00:33:09.960><c> this</c><00:33:10.120><c> token</c><00:33:10.960><c> and</c><00:33:11.159><c> B</c><00:33:11.440><c> app</c><00:33:11.679><c> size</c><00:33:12.279><c> here</c>

00:33:12.950 --> 00:33:12.960 align:start position:0%
right of this token and B app size here
 

00:33:12.960 --> 00:33:16.110 align:start position:0%
right of this token and B app size here
is<00:33:13.159><c> the</c><00:33:13.320><c> number</c><00:33:13.799><c> of</c><00:33:14.240><c> possible</c><00:33:14.720><c> tokens</c><00:33:15.720><c> and</c><00:33:15.840><c> so</c>

00:33:16.110 --> 00:33:16.120 align:start position:0%
is the number of possible tokens and so
 

00:33:16.120 --> 00:33:17.710 align:start position:0%
is the number of possible tokens and so
therefore<00:33:16.519><c> this</c><00:33:16.639><c> is</c><00:33:16.840><c> the</c><00:33:17.039><c> tensor</c><00:33:17.480><c> that</c><00:33:17.559><c> we're</c>

00:33:17.710 --> 00:33:17.720 align:start position:0%
therefore this is the tensor that we're
 

00:33:17.720 --> 00:33:19.830 align:start position:0%
therefore this is the tensor that we're
going<00:33:17.880><c> to</c><00:33:18.120><c> obtain</c><00:33:18.960><c> and</c><00:33:19.080><c> these</c><00:33:19.200><c> low</c><00:33:19.440><c> jits</c><00:33:19.679><c> are</c>

00:33:19.830 --> 00:33:19.840 align:start position:0%
going to obtain and these low jits are
 

00:33:19.840 --> 00:33:22.669 align:start position:0%
going to obtain and these low jits are
just<00:33:20.000><c> a</c><00:33:20.159><c> softmax</c><00:33:20.799><c> away</c><00:33:21.320><c> from</c><00:33:21.480><c> becoming</c>

00:33:22.669 --> 00:33:22.679 align:start position:0%
just a softmax away from becoming
 

00:33:22.679 --> 00:33:25.190 align:start position:0%
just a softmax away from becoming
probabilities<00:33:23.679><c> so</c><00:33:24.159><c> this</c><00:33:24.279><c> is</c><00:33:24.440><c> the</c><00:33:24.559><c> forward</c>

00:33:25.190 --> 00:33:25.200 align:start position:0%
probabilities so this is the forward
 

00:33:25.200 --> 00:33:27.509 align:start position:0%
probabilities so this is the forward
pass<00:33:25.799><c> of</c><00:33:25.960><c> the</c><00:33:26.159><c> network</c><00:33:26.919><c> and</c><00:33:27.080><c> now</c><00:33:27.200><c> we</c><00:33:27.279><c> can</c><00:33:27.399><c> get</c>

00:33:27.509 --> 00:33:27.519 align:start position:0%
pass of the network and now we can get
 

00:33:27.519 --> 00:33:28.990 align:start position:0%
pass of the network and now we can get
load<00:33:28.159><c> and</c><00:33:28.240><c> so</c><00:33:28.360><c> we're</c><00:33:28.480><c> going</c><00:33:28.559><c> to</c><00:33:28.679><c> be</c><00:33:28.760><c> able</c><00:33:28.880><c> to</c>

00:33:28.990 --> 00:33:29.000 align:start position:0%
load and so we're going to be able to
 

00:33:29.000 --> 00:33:30.629 align:start position:0%
load and so we're going to be able to
generate<00:33:29.320><c> from</c><00:33:29.440><c> the</c><00:33:29.559><c> model</c>

00:33:30.629 --> 00:33:30.639 align:start position:0%
generate from the model
 

00:33:30.639 --> 00:33:32.509 align:start position:0%
generate from the model
imminently<00:33:31.639><c> okay</c><00:33:31.760><c> so</c><00:33:31.919><c> now</c><00:33:32.080><c> we're</c><00:33:32.240><c> going</c><00:33:32.399><c> to</c>

00:33:32.509 --> 00:33:32.519 align:start position:0%
imminently okay so now we're going to
 

00:33:32.519 --> 00:33:34.990 align:start position:0%
imminently okay so now we're going to
try<00:33:32.720><c> to</c><00:33:32.880><c> set</c><00:33:33.080><c> up</c><00:33:33.720><c> the</c><00:33:33.960><c> identical</c><00:33:34.519><c> thing</c><00:33:34.760><c> on</c><00:33:34.880><c> the</c>

00:33:34.990 --> 00:33:35.000 align:start position:0%
try to set up the identical thing on the
 

00:33:35.000 --> 00:33:36.669 align:start position:0%
try to set up the identical thing on the
left<00:33:35.279><c> here</c><00:33:35.559><c> that</c><00:33:35.760><c> matches</c><00:33:36.039><c> hug</c><00:33:36.240><c> and</c><00:33:36.399><c> face</c><00:33:36.559><c> on</c>

00:33:36.669 --> 00:33:36.679 align:start position:0%
left here that matches hug and face on
 

00:33:36.679 --> 00:33:39.190 align:start position:0%
left here that matches hug and face on
the<00:33:36.840><c> right</c><00:33:37.519><c> so</c><00:33:37.799><c> here</c><00:33:38.159><c> we've</c><00:33:38.440><c> sampled</c><00:33:38.880><c> from</c><00:33:39.000><c> the</c>

00:33:39.190 --> 00:33:39.200 align:start position:0%
the right so here we've sampled from the
 

00:33:39.200 --> 00:33:42.629 align:start position:0%
the right so here we've sampled from the
pipeline<00:33:40.039><c> and</c><00:33:40.159><c> we</c><00:33:40.360><c> sampled</c><00:33:41.240><c> five</c><00:33:41.519><c> times</c><00:33:42.320><c> up</c><00:33:42.480><c> to</c>

00:33:42.629 --> 00:33:42.639 align:start position:0%
pipeline and we sampled five times up to
 

00:33:42.639 --> 00:33:45.310 align:start position:0%
pipeline and we sampled five times up to
30<00:33:43.000><c> tokens</c><00:33:43.840><c> with</c><00:33:43.960><c> the</c><00:33:44.120><c> prefix</c><00:33:44.639><c> of</c><00:33:44.799><c> hello</c><00:33:45.080><c> I'm</c><00:33:45.200><c> a</c>

00:33:45.310 --> 00:33:45.320 align:start position:0%
30 tokens with the prefix of hello I'm a
 

00:33:45.320 --> 00:33:46.669 align:start position:0%
30 tokens with the prefix of hello I'm a
language<00:33:45.600><c> model</c><00:33:46.200><c> and</c><00:33:46.320><c> these</c><00:33:46.440><c> are</c><00:33:46.559><c> the</c>

00:33:46.669 --> 00:33:46.679 align:start position:0%
language model and these are the
 

00:33:46.679 --> 00:33:48.470 align:start position:0%
language model and these are the
completions<00:33:47.159><c> that</c><00:33:47.279><c> we</c><00:33:47.399><c> achieved</c><00:33:48.279><c> so</c><00:33:48.360><c> we're</c>

00:33:48.470 --> 00:33:48.480 align:start position:0%
completions that we achieved so we're
 

00:33:48.480 --> 00:33:49.590 align:start position:0%
completions that we achieved so we're
going<00:33:48.600><c> to</c><00:33:48.679><c> try</c><00:33:48.799><c> to</c><00:33:48.919><c> replicate</c><00:33:49.279><c> that</c><00:33:49.399><c> on</c><00:33:49.480><c> the</c>

00:33:49.590 --> 00:33:49.600 align:start position:0%
going to try to replicate that on the
 

00:33:49.600 --> 00:33:51.870 align:start position:0%
going to try to replicate that on the
left<00:33:49.880><c> here</c><00:33:50.679><c> so</c><00:33:50.840><c> number</c><00:33:51.120><c> turn</c><00:33:51.320><c> sequences</c><00:33:51.679><c> is</c>

00:33:51.870 --> 00:33:51.880 align:start position:0%
left here so number turn sequences is
 

00:33:51.880 --> 00:33:53.870 align:start position:0%
left here so number turn sequences is
five<00:33:52.200><c> max</c><00:33:52.440><c> length</c><00:33:52.679><c> is</c><00:33:52.840><c> 30</c><00:33:53.399><c> so</c><00:33:53.519><c> the</c><00:33:53.600><c> first</c><00:33:53.760><c> thing</c>

00:33:53.870 --> 00:33:53.880 align:start position:0%
five max length is 30 so the first thing
 

00:33:53.880 --> 00:33:55.149 align:start position:0%
five max length is 30 so the first thing
we<00:33:54.000><c> do</c><00:33:54.159><c> of</c><00:33:54.240><c> course</c><00:33:54.399><c> is</c><00:33:54.519><c> we</c><00:33:54.639><c> initialize</c><00:33:55.039><c> our</c>

00:33:55.149 --> 00:33:55.159 align:start position:0%
we do of course is we initialize our
 

00:33:55.159 --> 00:33:57.350 align:start position:0%
we do of course is we initialize our
model<00:33:56.080><c> then</c><00:33:56.200><c> we</c><00:33:56.320><c> put</c><00:33:56.440><c> it</c><00:33:56.559><c> into</c><00:33:56.880><c> evaluation</c>

00:33:57.350 --> 00:33:57.360 align:start position:0%
model then we put it into evaluation
 

00:33:57.360 --> 00:33:59.909 align:start position:0%
model then we put it into evaluation
mode<00:33:58.159><c> now</c><00:33:58.399><c> this</c><00:33:58.480><c> is</c><00:33:58.600><c> a</c><00:33:58.720><c> good</c><00:33:58.960><c> practice</c><00:33:59.320><c> to</c><00:33:59.600><c> put</c>

00:33:59.909 --> 00:33:59.919 align:start position:0%
mode now this is a good practice to put
 

00:33:59.919 --> 00:34:01.389 align:start position:0%
mode now this is a good practice to put
the<00:34:00.039><c> model</c><00:34:00.320><c> into</c><00:34:00.519><c> eval</c><00:34:01.039><c> when</c><00:34:01.159><c> you're</c><00:34:01.279><c> not</c>

00:34:01.389 --> 00:34:01.399 align:start position:0%
the model into eval when you're not
 

00:34:01.399 --> 00:34:02.430 align:start position:0%
the model into eval when you're not
going<00:34:01.480><c> to</c><00:34:01.600><c> be</c><00:34:01.679><c> training</c><00:34:02.039><c> it</c><00:34:02.159><c> you're</c><00:34:02.320><c> just</c>

00:34:02.430 --> 00:34:02.440 align:start position:0%
going to be training it you're just
 

00:34:02.440 --> 00:34:05.789 align:start position:0%
going to be training it you're just
going<00:34:02.519><c> to</c><00:34:02.639><c> be</c><00:34:02.799><c> using</c><00:34:03.159><c> it</c><00:34:04.440><c> and</c><00:34:05.440><c> I</c><00:34:05.559><c> don't</c>

00:34:05.789 --> 00:34:05.799 align:start position:0%
going to be using it and I don't
 

00:34:05.799 --> 00:34:07.110 align:start position:0%
going to be using it and I don't
actually<00:34:06.000><c> know</c><00:34:06.159><c> if</c><00:34:06.320><c> this</c><00:34:06.399><c> is</c><00:34:06.519><c> doing</c><00:34:06.799><c> anything</c>

00:34:07.110 --> 00:34:07.120 align:start position:0%
actually know if this is doing anything
 

00:34:07.120 --> 00:34:09.069 align:start position:0%
actually know if this is doing anything
right<00:34:07.279><c> now</c><00:34:07.399><c> for</c><00:34:07.600><c> the</c><00:34:07.720><c> following</c><00:34:08.079><c> reason</c><00:34:08.839><c> our</c>

00:34:09.069 --> 00:34:09.079 align:start position:0%
right now for the following reason our
 

00:34:09.079 --> 00:34:11.510 align:start position:0%
right now for the following reason our
model<00:34:09.399><c> up</c><00:34:09.599><c> above</c><00:34:09.919><c> here</c><00:34:10.480><c> contains</c><00:34:10.879><c> no</c><00:34:11.079><c> modules</c>

00:34:11.510 --> 00:34:11.520 align:start position:0%
model up above here contains no modules
 

00:34:11.520 --> 00:34:14.030 align:start position:0%
model up above here contains no modules
or<00:34:11.839><c> layers</c><00:34:12.560><c> that</c><00:34:12.760><c> actually</c><00:34:13.000><c> have</c><00:34:13.119><c> a</c><00:34:13.320><c> different</c>

00:34:14.030 --> 00:34:14.040 align:start position:0%
or layers that actually have a different
 

00:34:14.040 --> 00:34:16.190 align:start position:0%
or layers that actually have a different
uh<00:34:14.200><c> Behavior</c><00:34:14.960><c> at</c><00:34:15.159><c> training</c><00:34:15.480><c> or</c><00:34:15.679><c> evaluation</c>

00:34:16.190 --> 00:34:16.200 align:start position:0%
uh Behavior at training or evaluation
 

00:34:16.200 --> 00:34:18.510 align:start position:0%
uh Behavior at training or evaluation
time<00:34:16.679><c> so</c><00:34:16.879><c> for</c><00:34:17.000><c> example</c><00:34:17.320><c> Dropout</c><00:34:17.839><c> batch</c><00:34:18.159><c> norm</c>

00:34:18.510 --> 00:34:18.520 align:start position:0%
time so for example Dropout batch norm
 

00:34:18.520 --> 00:34:20.069 align:start position:0%
time so for example Dropout batch norm
and<00:34:18.639><c> a</c><00:34:18.760><c> bunch</c><00:34:18.919><c> of</c><00:34:19.040><c> other</c><00:34:19.159><c> layers</c><00:34:19.720><c> have</c><00:34:19.919><c> this</c>

00:34:20.069 --> 00:34:20.079 align:start position:0%
and a bunch of other layers have this
 

00:34:20.079 --> 00:34:22.069 align:start position:0%
and a bunch of other layers have this
kind<00:34:20.200><c> of</c><00:34:20.320><c> behavior</c><00:34:21.079><c> but</c><00:34:21.280><c> all</c><00:34:21.399><c> of</c><00:34:21.560><c> these</c><00:34:21.760><c> layers</c>

00:34:22.069 --> 00:34:22.079 align:start position:0%
kind of behavior but all of these layers
 

00:34:22.079 --> 00:34:23.550 align:start position:0%
kind of behavior but all of these layers
that<00:34:22.159><c> we've</c><00:34:22.320><c> used</c><00:34:22.599><c> here</c><00:34:22.760><c> should</c><00:34:22.960><c> be</c><00:34:23.119><c> identical</c>

00:34:23.550 --> 00:34:23.560 align:start position:0%
that we've used here should be identical
 

00:34:23.560 --> 00:34:27.470 align:start position:0%
that we've used here should be identical
in<00:34:23.679><c> both</c><00:34:23.839><c> training</c><00:34:24.280><c> and</c><00:34:24.480><c> evaluation</c><00:34:25.240><c> time</c><00:34:26.480><c> um</c>

00:34:27.470 --> 00:34:27.480 align:start position:0%
in both training and evaluation time um
 

00:34:27.480 --> 00:34:29.589 align:start position:0%
in both training and evaluation time um
so<00:34:27.720><c> so</c><00:34:28.359><c> potentially</c><00:34:28.720><c> model</c><00:34:29.000><c> that</c><00:34:29.119><c> eval</c><00:34:29.440><c> does</c>

00:34:29.589 --> 00:34:29.599 align:start position:0%
so so potentially model that eval does
 

00:34:29.599 --> 00:34:31.190 align:start position:0%
so so potentially model that eval does
nothing<00:34:29.919><c> but</c><00:34:30.079><c> then</c><00:34:30.200><c> I'm</c><00:34:30.320><c> not</c><00:34:30.520><c> actually</c><00:34:30.800><c> sure</c>

00:34:31.190 --> 00:34:31.200 align:start position:0%
nothing but then I'm not actually sure
 

00:34:31.200 --> 00:34:32.990 align:start position:0%
nothing but then I'm not actually sure
if<00:34:31.480><c> this</c><00:34:31.599><c> is</c><00:34:31.800><c> the</c><00:34:31.960><c> case</c><00:34:32.159><c> and</c><00:34:32.280><c> maybe</c><00:34:32.520><c> pytorch</c>

00:34:32.990 --> 00:34:33.000 align:start position:0%
if this is the case and maybe pytorch
 

00:34:33.000 --> 00:34:35.030 align:start position:0%
if this is the case and maybe pytorch
internals<00:34:34.000><c> uh</c><00:34:34.079><c> do</c><00:34:34.280><c> some</c><00:34:34.480><c> clever</c><00:34:34.800><c> things</c>

00:34:35.030 --> 00:34:35.040 align:start position:0%
internals uh do some clever things
 

00:34:35.040 --> 00:34:36.710 align:start position:0%
internals uh do some clever things
depending<00:34:35.320><c> on</c><00:34:35.399><c> the</c><00:34:35.520><c> evaluation</c><00:34:36.000><c> mode</c><00:34:36.560><c> uh</c>

00:34:36.710 --> 00:34:36.720 align:start position:0%
depending on the evaluation mode uh
 

00:34:36.720 --> 00:34:39.430 align:start position:0%
depending on the evaluation mode uh
inside<00:34:37.599><c> here</c><00:34:38.599><c> the</c><00:34:38.720><c> next</c><00:34:38.879><c> thing</c><00:34:39.000><c> we're</c><00:34:39.159><c> doing</c>

00:34:39.430 --> 00:34:39.440 align:start position:0%
inside here the next thing we're doing
 

00:34:39.440 --> 00:34:41.710 align:start position:0%
inside here the next thing we're doing
here<00:34:39.679><c> is</c><00:34:39.839><c> we</c><00:34:39.919><c> are</c><00:34:40.119><c> moving</c><00:34:40.720><c> the</c><00:34:40.879><c> entire</c><00:34:41.200><c> model</c>

00:34:41.710 --> 00:34:41.720 align:start position:0%
here is we are moving the entire model
 

00:34:41.720 --> 00:34:44.230 align:start position:0%
here is we are moving the entire model
to<00:34:42.119><c> Cuda</c><00:34:42.599><c> so</c><00:34:42.720><c> we're</c><00:34:42.879><c> moving</c><00:34:43.240><c> this</c><00:34:43.839><c> all</c><00:34:43.960><c> of</c><00:34:44.079><c> the</c>

00:34:44.230 --> 00:34:44.240 align:start position:0%
to Cuda so we're moving this all of the
 

00:34:44.240 --> 00:34:47.589 align:start position:0%
to Cuda so we're moving this all of the
tensors<00:34:44.960><c> to</c><00:34:45.200><c> GPU</c><00:34:46.200><c> so</c><00:34:46.359><c> I'm</c><00:34:46.599><c> sshed</c><00:34:47.159><c> here</c><00:34:47.280><c> to</c><00:34:47.480><c> a</c>

00:34:47.589 --> 00:34:47.599 align:start position:0%
tensors to GPU so I'm sshed here to a
 

00:34:47.599 --> 00:34:49.550 align:start position:0%
tensors to GPU so I'm sshed here to a
cloud<00:34:47.919><c> box</c><00:34:48.280><c> and</c><00:34:48.399><c> I</c><00:34:48.480><c> have</c><00:34:48.599><c> a</c><00:34:48.679><c> bunch</c><00:34:48.839><c> of</c><00:34:48.960><c> gpus</c><00:34:49.399><c> on</c>

00:34:49.550 --> 00:34:49.560 align:start position:0%
cloud box and I have a bunch of gpus on
 

00:34:49.560 --> 00:34:53.069 align:start position:0%
cloud box and I have a bunch of gpus on
this<00:34:49.760><c> box</c><00:34:50.560><c> and</c><00:34:50.960><c> here</c><00:34:51.240><c> I'm</c><00:34:51.560><c> moving</c><00:34:52.560><c> the</c><00:34:52.720><c> entire</c>

00:34:53.069 --> 00:34:53.079 align:start position:0%
this box and here I'm moving the entire
 

00:34:53.079 --> 00:34:54.750 align:start position:0%
this box and here I'm moving the entire
model<00:34:53.480><c> and</c><00:34:53.639><c> all</c><00:34:53.760><c> of</c><00:34:53.879><c> its</c><00:34:54.040><c> members</c><00:34:54.399><c> and</c><00:34:54.520><c> all</c><00:34:54.639><c> of</c>

00:34:54.750 --> 00:34:54.760 align:start position:0%
model and all of its members and all of
 

00:34:54.760 --> 00:34:56.790 align:start position:0%
model and all of its members and all of
its<00:34:54.879><c> tensors</c><00:34:55.240><c> and</c><00:34:55.399><c> everything</c><00:34:55.720><c> like</c><00:34:55.919><c> that</c>

00:34:56.790 --> 00:34:56.800 align:start position:0%
its tensors and everything like that
 

00:34:56.800 --> 00:34:59.270 align:start position:0%
its tensors and everything like that
everything<00:34:57.240><c> gets</c><00:34:57.880><c> shipped</c><00:34:58.359><c> off</c><00:34:58.680><c> to</c><00:34:58.920><c> basically</c>

00:34:59.270 --> 00:34:59.280 align:start position:0%
everything gets shipped off to basically
 

00:34:59.280 --> 00:35:01.230 align:start position:0%
everything gets shipped off to basically
a<00:34:59.440><c> whole</c><00:34:59.720><c> separate</c><00:35:00.119><c> computer</c><00:35:01.040><c> that</c><00:35:01.160><c> is</c>

00:35:01.230 --> 00:35:01.240 align:start position:0%
a whole separate computer that is
 

00:35:01.240 --> 00:35:03.270 align:start position:0%
a whole separate computer that is
sitting<00:35:01.520><c> on</c><00:35:01.599><c> the</c><00:35:01.720><c> GPU</c><00:35:02.440><c> and</c><00:35:02.560><c> the</c><00:35:02.680><c> GPU</c><00:35:03.119><c> is</c>

00:35:03.270 --> 00:35:03.280 align:start position:0%
sitting on the GPU and the GPU is
 

00:35:03.280 --> 00:35:05.470 align:start position:0%
sitting on the GPU and the GPU is
connected<00:35:03.680><c> to</c><00:35:03.920><c> the</c><00:35:04.359><c> uh</c><00:35:04.480><c> CPU</c><00:35:05.119><c> and</c><00:35:05.240><c> they</c><00:35:05.320><c> can</c>

00:35:05.470 --> 00:35:05.480 align:start position:0%
connected to the uh CPU and they can
 

00:35:05.480 --> 00:35:06.710 align:start position:0%
connected to the uh CPU and they can
communicate<00:35:05.960><c> but</c><00:35:06.079><c> it's</c><00:35:06.200><c> basically</c><00:35:06.440><c> a</c><00:35:06.520><c> whole</c>

00:35:06.710 --> 00:35:06.720 align:start position:0%
communicate but it's basically a whole
 

00:35:06.720 --> 00:35:08.310 align:start position:0%
communicate but it's basically a whole
separate<00:35:07.040><c> computer</c><00:35:07.520><c> with</c><00:35:07.680><c> its</c><00:35:07.800><c> own</c><00:35:07.960><c> computer</c>

00:35:08.310 --> 00:35:08.320 align:start position:0%
separate computer with its own computer
 

00:35:08.320 --> 00:35:09.710 align:start position:0%
separate computer with its own computer
architecture<00:35:09.040><c> and</c><00:35:09.160><c> it's</c><00:35:09.280><c> really</c><00:35:09.480><c> well</c>

00:35:09.710 --> 00:35:09.720 align:start position:0%
architecture and it's really well
 

00:35:09.720 --> 00:35:11.950 align:start position:0%
architecture and it's really well
catered<00:35:10.079><c> to</c><00:35:10.400><c> parallel</c><00:35:10.839><c> processing</c><00:35:11.320><c> tasks</c>

00:35:11.950 --> 00:35:11.960 align:start position:0%
catered to parallel processing tasks
 

00:35:11.960 --> 00:35:14.349 align:start position:0%
catered to parallel processing tasks
like<00:35:12.160><c> those</c><00:35:12.320><c> of</c><00:35:12.480><c> running</c><00:35:12.680><c> neural</c><00:35:13.079><c> networks</c><00:35:14.079><c> so</c>

00:35:14.349 --> 00:35:14.359 align:start position:0%
like those of running neural networks so
 

00:35:14.359 --> 00:35:16.349 align:start position:0%
like those of running neural networks so
I'm<00:35:14.480><c> doing</c><00:35:14.839><c> this</c><00:35:15.240><c> so</c><00:35:15.440><c> that</c><00:35:15.599><c> the</c><00:35:15.680><c> model</c><00:35:16.000><c> lives</c>

00:35:16.349 --> 00:35:16.359 align:start position:0%
I'm doing this so that the model lives
 

00:35:16.359 --> 00:35:19.510 align:start position:0%
I'm doing this so that the model lives
on<00:35:16.480><c> the</c><00:35:16.640><c> GPU</c><00:35:17.480><c> a</c><00:35:17.599><c> whole</c><00:35:17.839><c> separate</c><00:35:18.359><c> computer</c><00:35:19.359><c> and</c>

00:35:19.510 --> 00:35:19.520 align:start position:0%
on the GPU a whole separate computer and
 

00:35:19.520 --> 00:35:20.870 align:start position:0%
on the GPU a whole separate computer and
it's<00:35:19.680><c> just</c><00:35:19.800><c> going</c><00:35:19.960><c> to</c><00:35:20.040><c> make</c><00:35:20.200><c> our</c><00:35:20.320><c> code</c><00:35:20.560><c> a</c><00:35:20.680><c> lot</c>

00:35:20.870 --> 00:35:20.880 align:start position:0%
it's just going to make our code a lot
 

00:35:20.880 --> 00:35:22.829 align:start position:0%
it's just going to make our code a lot
more<00:35:21.320><c> efficient</c><00:35:22.000><c> because</c><00:35:22.280><c> all</c><00:35:22.400><c> of</c><00:35:22.520><c> this</c><00:35:22.640><c> stuff</c>

00:35:22.829 --> 00:35:22.839 align:start position:0%
more efficient because all of this stuff
 

00:35:22.839 --> 00:35:25.069 align:start position:0%
more efficient because all of this stuff
runs<00:35:23.079><c> a</c><00:35:23.160><c> lot</c><00:35:23.440><c> more</c><00:35:23.640><c> efficiently</c><00:35:24.000><c> on</c><00:35:24.119><c> the</c>

00:35:25.069 --> 00:35:25.079 align:start position:0%
runs a lot more efficiently on the
 

00:35:25.079 --> 00:35:29.069 align:start position:0%
runs a lot more efficiently on the
gpus<00:35:26.400><c> so</c><00:35:27.400><c> that's</c><00:35:27.800><c> the</c><00:35:27.880><c> model</c>

00:35:29.069 --> 00:35:29.079 align:start position:0%
gpus so that's the model
 

00:35:29.079 --> 00:35:31.870 align:start position:0%
gpus so that's the model
itself<00:35:30.079><c> now</c><00:35:31.000><c> uh</c><00:35:31.119><c> the</c><00:35:31.200><c> next</c><00:35:31.359><c> thing</c><00:35:31.480><c> we</c><00:35:31.599><c> want</c><00:35:31.720><c> to</c>

00:35:31.870 --> 00:35:31.880 align:start position:0%
itself now uh the next thing we want to
 

00:35:31.880 --> 00:35:34.390 align:start position:0%
itself now uh the next thing we want to
do<00:35:32.160><c> is</c><00:35:32.320><c> we</c><00:35:32.440><c> want</c><00:35:32.599><c> to</c><00:35:33.160><c> start</c><00:35:33.599><c> with</c><00:35:33.839><c> this</c><00:35:34.119><c> as</c><00:35:34.240><c> the</c>

00:35:34.390 --> 00:35:34.400 align:start position:0%
do is we want to start with this as the
 

00:35:34.400 --> 00:35:37.270 align:start position:0%
do is we want to start with this as the
prefix<00:35:34.839><c> when</c><00:35:34.960><c> we</c><00:35:35.079><c> do</c><00:35:35.200><c> the</c><00:35:35.800><c> generation</c><00:35:36.800><c> so</c>

00:35:37.270 --> 00:35:37.280 align:start position:0%
prefix when we do the generation so
 

00:35:37.280 --> 00:35:39.589 align:start position:0%
prefix when we do the generation so
let's<00:35:37.560><c> actually</c><00:35:38.000><c> create</c><00:35:38.320><c> those</c><00:35:38.560><c> prefix</c>

00:35:39.589 --> 00:35:39.599 align:start position:0%
let's actually create those prefix
 

00:35:39.599 --> 00:35:41.510 align:start position:0%
let's actually create those prefix
tokens<00:35:40.599><c> so</c><00:35:40.800><c> here's</c><00:35:41.000><c> the</c><00:35:41.119><c> code</c><00:35:41.280><c> that</c><00:35:41.400><c> I've</c>

00:35:41.510 --> 00:35:41.520 align:start position:0%
tokens so here's the code that I've
 

00:35:41.520 --> 00:35:43.230 align:start position:0%
tokens so here's the code that I've
written<00:35:42.240><c> we're</c><00:35:42.400><c> going</c><00:35:42.520><c> to</c><00:35:42.640><c> import</c><00:35:42.920><c> the</c><00:35:43.040><c> tich</c>

00:35:43.230 --> 00:35:43.240 align:start position:0%
written we're going to import the tich
 

00:35:43.240 --> 00:35:45.710 align:start position:0%
written we're going to import the tich
token<00:35:43.480><c> library</c><00:35:43.920><c> from</c><00:35:44.240><c> open</c><00:35:44.520><c> Ai</c><00:35:45.480><c> and</c><00:35:45.599><c> we're</c>

00:35:45.710 --> 00:35:45.720 align:start position:0%
token library from open Ai and we're
 

00:35:45.720 --> 00:35:48.069 align:start position:0%
token library from open Ai and we're
going<00:35:45.839><c> to</c><00:35:46.000><c> get</c><00:35:46.160><c> the</c><00:35:46.320><c> gpt2</c><00:35:47.040><c> encoding</c><00:35:47.640><c> so</c><00:35:47.839><c> that's</c>

00:35:48.069 --> 00:35:48.079 align:start position:0%
going to get the gpt2 encoding so that's
 

00:35:48.079 --> 00:35:51.069 align:start position:0%
going to get the gpt2 encoding so that's
the<00:35:48.640><c> tokenizer</c><00:35:49.200><c> for</c><00:35:49.800><c> gpt2</c><00:35:50.800><c> and</c><00:35:50.880><c> then</c><00:35:50.960><c> we're</c>

00:35:51.069 --> 00:35:51.079 align:start position:0%
the tokenizer for gpt2 and then we're
 

00:35:51.079 --> 00:35:54.430 align:start position:0%
the tokenizer for gpt2 and then we're
going<00:35:51.200><c> to</c><00:35:51.680><c> encode</c><00:35:52.680><c> this</c><00:35:52.960><c> string</c><00:35:53.839><c> and</c><00:35:54.040><c> get</c><00:35:54.240><c> a</c>

00:35:54.430 --> 00:35:54.440 align:start position:0%
going to encode this string and get a
 

00:35:54.440 --> 00:35:57.430 align:start position:0%
going to encode this string and get a
list<00:35:54.680><c> of</c><00:35:54.839><c> integers</c><00:35:55.400><c> which</c><00:35:55.520><c> are</c><00:35:55.680><c> the</c><00:35:56.280><c> tokens</c><00:35:57.280><c> uh</c>

00:35:57.430 --> 00:35:57.440 align:start position:0%
list of integers which are the tokens uh
 

00:35:57.440 --> 00:35:59.270 align:start position:0%
list of integers which are the tokens uh
now<00:35:57.839><c> these</c><00:35:58.160><c> integers</c><00:35:58.680><c> here</c><00:35:58.800><c> should</c><00:35:59.079><c> actually</c>

00:35:59.270 --> 00:35:59.280 align:start position:0%
now these integers here should actually
 

00:35:59.280 --> 00:36:01.069 align:start position:0%
now these integers here should actually
be<00:35:59.440><c> fairly</c><00:35:59.720><c> straightforward</c><00:36:00.560><c> because</c><00:36:00.760><c> we</c><00:36:00.880><c> can</c>

00:36:01.069 --> 00:36:01.079 align:start position:0%
be fairly straightforward because we can
 

00:36:01.079 --> 00:36:04.069 align:start position:0%
be fairly straightforward because we can
just<00:36:01.599><c> copy</c><00:36:01.960><c> paste</c><00:36:02.599><c> this</c><00:36:02.880><c> string</c><00:36:03.800><c> and</c><00:36:03.880><c> we</c><00:36:03.960><c> can</c>

00:36:04.069 --> 00:36:04.079 align:start position:0%
just copy paste this string and we can
 

00:36:04.079 --> 00:36:05.750 align:start position:0%
just copy paste this string and we can
sort<00:36:04.240><c> of</c><00:36:04.440><c> inspect</c><00:36:04.839><c> what</c><00:36:04.920><c> it</c><00:36:05.079><c> is</c><00:36:05.240><c> in</c><00:36:05.599><c> tick</c>

00:36:05.750 --> 00:36:05.760 align:start position:0%
sort of inspect what it is in tick
 

00:36:05.760 --> 00:36:08.309 align:start position:0%
sort of inspect what it is in tick
tokenizer<00:36:06.760><c> so</c><00:36:06.960><c> just</c><00:36:07.119><c> pasting</c><00:36:07.480><c> that</c><00:36:07.640><c> in</c><00:36:08.200><c> these</c>

00:36:08.309 --> 00:36:08.319 align:start position:0%
tokenizer so just pasting that in these
 

00:36:08.319 --> 00:36:09.550 align:start position:0%
tokenizer so just pasting that in these
are<00:36:08.560><c> the</c><00:36:08.680><c> tokens</c><00:36:09.000><c> that</c><00:36:09.079><c> are</c><00:36:09.200><c> going</c><00:36:09.280><c> to</c><00:36:09.400><c> come</c>

00:36:09.550 --> 00:36:09.560 align:start position:0%
are the tokens that are going to come
 

00:36:09.560 --> 00:36:12.349 align:start position:0%
are the tokens that are going to come
out<00:36:10.520><c> so</c><00:36:10.880><c> this</c><00:36:11.040><c> list</c><00:36:11.240><c> of</c><00:36:11.400><c> integers</c><00:36:11.839><c> is</c><00:36:12.000><c> what</c><00:36:12.160><c> we</c>

00:36:12.349 --> 00:36:12.359 align:start position:0%
out so this list of integers is what we
 

00:36:12.359 --> 00:36:15.790 align:start position:0%
out so this list of integers is what we
expect<00:36:12.920><c> tokens</c><00:36:13.640><c> to</c><00:36:14.000><c> become</c><00:36:15.000><c> and</c><00:36:15.560><c> as</c><00:36:15.640><c> you</c>

00:36:15.790 --> 00:36:15.800 align:start position:0%
expect tokens to become and as you
 

00:36:15.800 --> 00:36:17.670 align:start position:0%
expect tokens to become and as you
recall<00:36:16.079><c> if</c><00:36:16.160><c> you</c><00:36:16.240><c> saw</c><00:36:16.440><c> my</c><00:36:16.560><c> video</c><00:36:16.800><c> of</c><00:36:16.960><c> course</c><00:36:17.520><c> all</c>

00:36:17.670 --> 00:36:17.680 align:start position:0%
recall if you saw my video of course all
 

00:36:17.680 --> 00:36:18.990 align:start position:0%
recall if you saw my video of course all
the<00:36:17.800><c> tokens</c><00:36:18.160><c> they're</c><00:36:18.319><c> just</c><00:36:18.480><c> little</c><00:36:18.640><c> string</c>

00:36:18.990 --> 00:36:19.000 align:start position:0%
the tokens they're just little string
 

00:36:19.000 --> 00:36:21.630 align:start position:0%
the tokens they're just little string
chunks<00:36:19.680><c> right</c><00:36:19.880><c> so</c><00:36:20.520><c> these</c><00:36:20.640><c> are</c><00:36:21.119><c> this</c><00:36:21.240><c> is</c><00:36:21.400><c> the</c>

00:36:21.630 --> 00:36:21.640 align:start position:0%
chunks right so these are this is the
 

00:36:21.640 --> 00:36:25.309 align:start position:0%
chunks right so these are this is the
chunc<00:36:22.599><c> of</c><00:36:22.960><c> this</c><00:36:23.119><c> string</c><00:36:23.520><c> into</c><00:36:23.760><c> gpt2</c>

00:36:25.309 --> 00:36:25.319 align:start position:0%
chunc of this string into gpt2
 

00:36:25.319 --> 00:36:27.710 align:start position:0%
chunc of this string into gpt2
tokens<00:36:26.319><c> so</c><00:36:26.640><c> once</c><00:36:26.800><c> we</c><00:36:26.960><c> have</c><00:36:27.079><c> those</c><00:36:27.200><c> tokens</c><00:36:27.599><c> it's</c>

00:36:27.710 --> 00:36:27.720 align:start position:0%
tokens so once we have those tokens it's
 

00:36:27.720 --> 00:36:30.150 align:start position:0%
tokens so once we have those tokens it's
a<00:36:27.800><c> list</c><00:36:27.960><c> of</c><00:36:28.079><c> integers</c><00:36:28.920><c> we</c><00:36:29.040><c> can</c><00:36:29.200><c> create</c><00:36:29.520><c> a</c><00:36:29.680><c> torch</c>

00:36:30.150 --> 00:36:30.160 align:start position:0%
a list of integers we can create a torch
 

00:36:30.160 --> 00:36:32.270 align:start position:0%
a list of integers we can create a torch
tensor<00:36:30.599><c> out</c><00:36:30.760><c> of</c><00:36:30.880><c> it</c><00:36:31.359><c> in</c><00:36:31.520><c> this</c><00:36:31.640><c> case</c><00:36:31.839><c> it's</c><00:36:32.000><c> eight</c>

00:36:32.270 --> 00:36:32.280 align:start position:0%
tensor out of it in this case it's eight
 

00:36:32.280 --> 00:36:34.349 align:start position:0%
tensor out of it in this case it's eight
tokens<00:36:33.119><c> and</c><00:36:33.200><c> then</c><00:36:33.280><c> we're</c><00:36:33.400><c> going</c><00:36:33.520><c> to</c><00:36:33.839><c> replicate</c>

00:36:34.349 --> 00:36:34.359 align:start position:0%
tokens and then we're going to replicate
 

00:36:34.359 --> 00:36:36.829 align:start position:0%
tokens and then we're going to replicate
these<00:36:34.520><c> eight</c><00:36:34.760><c> tokens</c><00:36:35.240><c> for</c><00:36:35.800><c> five</c><00:36:36.040><c> times</c><00:36:36.440><c> to</c><00:36:36.599><c> get</c>

00:36:36.829 --> 00:36:36.839 align:start position:0%
these eight tokens for five times to get
 

00:36:36.839 --> 00:36:40.270 align:start position:0%
these eight tokens for five times to get
five<00:36:37.119><c> rows</c><00:36:37.920><c> of</c><00:36:38.119><c> eight</c><00:36:38.560><c> tokens</c><00:36:39.560><c> and</c><00:36:39.800><c> that</c><00:36:40.079><c> is</c>

00:36:40.270 --> 00:36:40.280 align:start position:0%
five rows of eight tokens and that is
 

00:36:40.280 --> 00:36:45.030 align:start position:0%
five rows of eight tokens and that is
our<00:36:41.160><c> initial</c><00:36:42.160><c> um</c><00:36:42.680><c> input</c><00:36:43.280><c> X</c><00:36:43.720><c> as</c><00:36:43.839><c> I</c><00:36:44.000><c> call</c><00:36:44.160><c> it</c><00:36:44.400><c> here</c>

00:36:45.030 --> 00:36:45.040 align:start position:0%
our initial um input X as I call it here
 

00:36:45.040 --> 00:36:48.109 align:start position:0%
our initial um input X as I call it here
and<00:36:45.200><c> it</c><00:36:45.319><c> lives</c><00:36:45.599><c> on</c><00:36:45.720><c> the</c><00:36:45.839><c> GPU</c><00:36:46.280><c> as</c><00:36:46.400><c> well</c><00:36:47.240><c> so</c><00:36:47.480><c> X</c><00:36:47.839><c> now</c>

00:36:48.109 --> 00:36:48.119 align:start position:0%
and it lives on the GPU as well so X now
 

00:36:48.119 --> 00:36:52.230 align:start position:0%
and it lives on the GPU as well so X now
is<00:36:48.400><c> this</c><00:36:49.000><c> idx</c><00:36:50.000><c> that</c><00:36:50.119><c> we</c><00:36:50.240><c> can</c><00:36:50.880><c> put</c><00:36:51.079><c> into</c><00:36:51.240><c> forward</c>

00:36:52.230 --> 00:36:52.240 align:start position:0%
is this idx that we can put into forward
 

00:36:52.240 --> 00:36:55.270 align:start position:0%
is this idx that we can put into forward
to<00:36:52.480><c> get</c><00:36:52.720><c> our</c><00:36:53.160><c> logits</c><00:36:54.040><c> so</c><00:36:54.240><c> that</c><00:36:54.400><c> we</c><00:36:54.560><c> know</c><00:36:55.079><c> what</c>

00:36:55.270 --> 00:36:55.280 align:start position:0%
to get our logits so that we know what
 

00:36:55.280 --> 00:36:58.270 align:start position:0%
to get our logits so that we know what
comes<00:36:55.599><c> as</c><00:36:55.800><c> the</c><00:36:56.040><c> sixth</c><00:36:57.040><c> token</c>

00:36:58.270 --> 00:36:58.280 align:start position:0%
comes as the sixth token
 

00:36:58.280 --> 00:37:01.309 align:start position:0%
comes as the sixth token
uh<00:36:58.400><c> sorry</c><00:36:58.720><c> as</c><00:36:58.839><c> the</c><00:36:59.040><c> ninth</c><00:36:59.760><c> token</c><00:37:00.760><c> in</c><00:37:00.960><c> every</c><00:37:01.160><c> one</c>

00:37:01.309 --> 00:37:01.319 align:start position:0%
uh sorry as the ninth token in every one
 

00:37:01.319 --> 00:37:04.030 align:start position:0%
uh sorry as the ninth token in every one
of<00:37:01.440><c> these</c><00:37:01.640><c> five</c><00:37:02.160><c> rows</c><00:37:03.160><c> okay</c><00:37:03.359><c> and</c><00:37:03.560><c> we</c><00:37:03.640><c> are</c><00:37:03.800><c> now</c>

00:37:04.030 --> 00:37:04.040 align:start position:0%
of these five rows okay and we are now
 

00:37:04.040 --> 00:37:05.790 align:start position:0%
of these five rows okay and we are now
ready<00:37:04.200><c> to</c><00:37:04.359><c> generate</c><00:37:04.800><c> so</c><00:37:04.960><c> let</c><00:37:05.079><c> me</c><00:37:05.240><c> paste</c><00:37:05.440><c> in</c><00:37:05.680><c> one</c>

00:37:05.790 --> 00:37:05.800 align:start position:0%
ready to generate so let me paste in one
 

00:37:05.800 --> 00:37:07.430 align:start position:0%
ready to generate so let me paste in one
more<00:37:06.200><c> code</c><00:37:06.440><c> block</c>

00:37:07.430 --> 00:37:07.440 align:start position:0%
more code block
 

00:37:07.440 --> 00:37:09.829 align:start position:0%
more code block
here<00:37:08.440><c> um</c><00:37:08.720><c> so</c><00:37:08.880><c> what's</c><00:37:09.040><c> happening</c><00:37:09.400><c> here</c><00:37:09.560><c> in</c><00:37:09.720><c> this</c>

00:37:09.829 --> 00:37:09.839 align:start position:0%
here um so what's happening here in this
 

00:37:09.839 --> 00:37:12.910 align:start position:0%
here um so what's happening here in this
code<00:37:10.079><c> block</c><00:37:10.359><c> is</c><00:37:10.520><c> we</c><00:37:10.680><c> have</c><00:37:11.000><c> this</c><00:37:11.920><c> x</c><00:37:12.359><c> which</c><00:37:12.480><c> is</c><00:37:12.599><c> of</c>

00:37:12.910 --> 00:37:12.920 align:start position:0%
code block is we have this x which is of
 

00:37:12.920 --> 00:37:16.670 align:start position:0%
code block is we have this x which is of
size<00:37:13.240><c> B</c><00:37:13.560><c> BYT</c><00:37:14.280><c> right</c><00:37:14.520><c> so</c><00:37:15.200><c> batch</c><00:37:15.599><c> by</c><00:37:15.800><c> time</c><00:37:16.560><c> and</c>

00:37:16.670 --> 00:37:16.680 align:start position:0%
size B BYT right so batch by time and
 

00:37:16.680 --> 00:37:18.270 align:start position:0%
size B BYT right so batch by time and
we're<00:37:16.839><c> going</c><00:37:16.920><c> to</c><00:37:17.079><c> be</c><00:37:17.280><c> in</c><00:37:17.480><c> every</c><00:37:17.680><c> iteration</c><00:37:18.079><c> of</c>

00:37:18.270 --> 00:37:18.280 align:start position:0%
we're going to be in every iteration of
 

00:37:18.280 --> 00:37:19.870 align:start position:0%
we're going to be in every iteration of
this<00:37:18.440><c> loop</c><00:37:18.880><c> we're</c><00:37:19.000><c> going</c><00:37:19.119><c> to</c><00:37:19.240><c> be</c><00:37:19.359><c> adding</c><00:37:19.680><c> a</c>

00:37:19.870 --> 00:37:19.880 align:start position:0%
this loop we're going to be adding a
 

00:37:19.880 --> 00:37:22.670 align:start position:0%
this loop we're going to be adding a
column<00:37:20.319><c> of</c><00:37:20.520><c> new</c><00:37:20.960><c> indices</c><00:37:21.960><c> into</c><00:37:22.240><c> each</c><00:37:22.440><c> one</c><00:37:22.560><c> of</c>

00:37:22.670 --> 00:37:22.680 align:start position:0%
column of new indices into each one of
 

00:37:22.680 --> 00:37:24.870 align:start position:0%
column of new indices into each one of
these<00:37:22.839><c> rows</c><00:37:23.400><c> right</c><00:37:24.160><c> and</c><00:37:24.280><c> so</c><00:37:24.480><c> these</c><00:37:24.599><c> are</c><00:37:24.760><c> the</c>

00:37:24.870 --> 00:37:24.880 align:start position:0%
these rows right and so these are the
 

00:37:24.880 --> 00:37:27.390 align:start position:0%
these rows right and so these are the
new<00:37:25.079><c> indices</c><00:37:25.839><c> and</c><00:37:26.000><c> we're</c><00:37:26.760><c> appending</c><00:37:27.160><c> them</c><00:37:27.280><c> to</c>

00:37:27.390 --> 00:37:27.400 align:start position:0%
new indices and we're appending them to
 

00:37:27.400 --> 00:37:29.230 align:start position:0%
new indices and we're appending them to
the<00:37:27.520><c> the</c><00:37:27.640><c> sequence</c><00:37:28.000><c> as</c><00:37:28.119><c> we're</c><00:37:28.280><c> sampling</c><00:37:29.040><c> so</c>

00:37:29.230 --> 00:37:29.240 align:start position:0%
the the sequence as we're sampling so
 

00:37:29.240 --> 00:37:31.470 align:start position:0%
the the sequence as we're sampling so
with<00:37:29.400><c> each</c><00:37:29.760><c> Loop</c><00:37:30.079><c> iteration</c><00:37:30.680><c> we</c><00:37:30.839><c> get</c><00:37:31.000><c> one</c><00:37:31.200><c> more</c>

00:37:31.470 --> 00:37:31.480 align:start position:0%
with each Loop iteration we get one more
 

00:37:31.480 --> 00:37:34.750 align:start position:0%
with each Loop iteration we get one more
column<00:37:31.880><c> into</c><00:37:32.720><c> X</c><00:37:33.720><c> and</c><00:37:33.960><c> all</c><00:37:34.079><c> of</c><00:37:34.200><c> the</c><00:37:34.319><c> operations</c>

00:37:34.750 --> 00:37:34.760 align:start position:0%
column into X and all of the operations
 

00:37:34.760 --> 00:37:36.390 align:start position:0%
column into X and all of the operations
happen<00:37:35.040><c> in</c><00:37:35.119><c> the</c><00:37:35.280><c> context</c><00:37:35.599><c> manager</c><00:37:35.880><c> of</c><00:37:36.000><c> torch.</c>

00:37:36.390 --> 00:37:36.400 align:start position:0%
happen in the context manager of torch.
 

00:37:36.400 --> 00:37:38.230 align:start position:0%
happen in the context manager of torch.
nograd<00:37:37.119><c> this</c><00:37:37.240><c> is</c><00:37:37.359><c> just</c><00:37:37.480><c> telling</c><00:37:37.760><c> pytorch</c><00:37:38.160><c> that</c>

00:37:38.230 --> 00:37:38.240 align:start position:0%
nograd this is just telling pytorch that
 

00:37:38.240 --> 00:37:39.390 align:start position:0%
nograd this is just telling pytorch that
we're<00:37:38.400><c> not</c><00:37:38.520><c> going</c><00:37:38.640><c> to</c><00:37:38.720><c> be</c><00:37:38.839><c> calling</c><00:37:39.119><c> that</c>

00:37:39.390 --> 00:37:39.400 align:start position:0%
we're not going to be calling that
 

00:37:39.400 --> 00:37:41.589 align:start position:0%
we're not going to be calling that
backward<00:37:39.839><c> on</c><00:37:40.160><c> any</c><00:37:40.359><c> of</c><00:37:40.560><c> this</c><00:37:41.119><c> so</c><00:37:41.280><c> it</c><00:37:41.359><c> doesn't</c>

00:37:41.589 --> 00:37:41.599 align:start position:0%
backward on any of this so it doesn't
 

00:37:41.599 --> 00:37:43.109 align:start position:0%
backward on any of this so it doesn't
have<00:37:41.720><c> to</c><00:37:41.960><c> cach</c><00:37:42.319><c> all</c><00:37:42.520><c> the</c><00:37:42.640><c> intermediate</c>

00:37:43.109 --> 00:37:43.119 align:start position:0%
have to cach all the intermediate
 

00:37:43.119 --> 00:37:44.589 align:start position:0%
have to cach all the intermediate
tensors<00:37:43.880><c> it's</c><00:37:44.000><c> not</c><00:37:44.119><c> going</c><00:37:44.240><c> to</c><00:37:44.319><c> have</c><00:37:44.440><c> to</c>

00:37:44.589 --> 00:37:44.599 align:start position:0%
tensors it's not going to have to
 

00:37:44.599 --> 00:37:46.190 align:start position:0%
tensors it's not going to have to
prepare<00:37:44.960><c> in</c><00:37:45.119><c> any</c><00:37:45.359><c> way</c><00:37:45.480><c> for</c><00:37:45.640><c> a</c><00:37:45.760><c> potential</c>

00:37:46.190 --> 00:37:46.200 align:start position:0%
prepare in any way for a potential
 

00:37:46.200 --> 00:37:48.750 align:start position:0%
prepare in any way for a potential
backward<00:37:46.760><c> later</c><00:37:47.440><c> and</c><00:37:47.560><c> this</c><00:37:47.720><c> saves</c><00:37:48.000><c> a</c><00:37:48.119><c> lot</c><00:37:48.280><c> of</c>

00:37:48.750 --> 00:37:48.760 align:start position:0%
backward later and this saves a lot of
 

00:37:48.760 --> 00:37:52.270 align:start position:0%
backward later and this saves a lot of
space<00:37:49.240><c> and</c><00:37:49.400><c> also</c><00:37:49.800><c> possibly</c><00:37:50.520><c> uh</c><00:37:50.640><c> some</c><00:37:51.160><c> time</c><00:37:52.160><c> so</c>

00:37:52.270 --> 00:37:52.280 align:start position:0%
space and also possibly uh some time so
 

00:37:52.280 --> 00:37:54.550 align:start position:0%
space and also possibly uh some time so
we<00:37:52.440><c> get</c><00:37:52.560><c> our</c><00:37:52.680><c> low</c><00:37:52.920><c> jits</c><00:37:53.640><c> we</c><00:37:53.800><c> get</c><00:37:53.960><c> the</c><00:37:54.079><c> loow</c><00:37:54.319><c> jits</c>

00:37:54.550 --> 00:37:54.560 align:start position:0%
we get our low jits we get the loow jits
 

00:37:54.560 --> 00:37:57.150 align:start position:0%
we get our low jits we get the loow jits
at<00:37:54.760><c> only</c><00:37:55.040><c> the</c><00:37:55.200><c> last</c><00:37:55.440><c> location</c><00:37:56.400><c> we</c><00:37:56.560><c> throw</c><00:37:56.920><c> away</c>

00:37:57.150 --> 00:37:57.160 align:start position:0%
at only the last location we throw away
 

00:37:57.160 --> 00:37:59.069 align:start position:0%
at only the last location we throw away
all<00:37:57.319><c> the</c><00:37:57.599><c> other</c><00:37:57.720><c> low</c><00:37:58.000><c> jits</c><00:37:58.480><c> uh</c><00:37:58.599><c> we</c><00:37:58.680><c> don't</c><00:37:58.880><c> need</c>

00:37:59.069 --> 00:37:59.079 align:start position:0%
all the other low jits uh we don't need
 

00:37:59.079 --> 00:38:01.510 align:start position:0%
all the other low jits uh we don't need
them<00:37:59.240><c> we</c><00:37:59.359><c> only</c><00:37:59.560><c> care</c><00:37:59.800><c> about</c><00:38:00.440><c> the</c><00:38:00.760><c> last</c><00:38:01.119><c> columns</c>

00:38:01.510 --> 00:38:01.520 align:start position:0%
them we only care about the last columns
 

00:38:01.520 --> 00:38:04.790 align:start position:0%
them we only care about the last columns
low<00:38:01.839><c> jits</c><00:38:02.800><c> so</c><00:38:03.000><c> this</c><00:38:03.079><c> is</c><00:38:03.240><c> being</c><00:38:03.560><c> wasteful</c><00:38:04.560><c> uh</c>

00:38:04.790 --> 00:38:04.800 align:start position:0%
low jits so this is being wasteful uh
 

00:38:04.800 --> 00:38:06.430 align:start position:0%
low jits so this is being wasteful uh
but<00:38:05.280><c> uh</c><00:38:05.480><c> this</c><00:38:05.560><c> is</c><00:38:05.720><c> just</c><00:38:05.920><c> kind</c><00:38:06.040><c> of</c><00:38:06.160><c> like</c><00:38:06.280><c> an</c>

00:38:06.430 --> 00:38:06.440 align:start position:0%
but uh this is just kind of like an
 

00:38:06.440 --> 00:38:08.230 align:start position:0%
but uh this is just kind of like an
inefficient<00:38:06.920><c> implementation</c><00:38:07.440><c> of</c>

00:38:08.230 --> 00:38:08.240 align:start position:0%
inefficient implementation of
 

00:38:08.240 --> 00:38:10.550 align:start position:0%
inefficient implementation of
sampling<00:38:09.240><c> um</c><00:38:09.440><c> so</c><00:38:09.599><c> it's</c><00:38:09.720><c> correct</c><00:38:10.000><c> but</c>

00:38:10.550 --> 00:38:10.560 align:start position:0%
sampling um so it's correct but
 

00:38:10.560 --> 00:38:13.150 align:start position:0%
sampling um so it's correct but
inefficient<00:38:11.560><c> so</c><00:38:11.720><c> we</c><00:38:11.880><c> get</c><00:38:12.000><c> the</c><00:38:12.240><c> last</c><00:38:12.760><c> column</c><00:38:13.040><c> of</c>

00:38:13.150 --> 00:38:13.160 align:start position:0%
inefficient so we get the last column of
 

00:38:13.160 --> 00:38:14.950 align:start position:0%
inefficient so we get the last column of
loow<00:38:13.359><c> jits</c><00:38:13.960><c> pass</c><00:38:14.119><c> it</c><00:38:14.240><c> through</c><00:38:14.440><c> soft</c><00:38:14.680><c> Max</c><00:38:14.880><c> to</c>

00:38:14.950 --> 00:38:14.960 align:start position:0%
loow jits pass it through soft Max to
 

00:38:14.960 --> 00:38:16.790 align:start position:0%
loow jits pass it through soft Max to
get<00:38:15.079><c> our</c><00:38:15.319><c> probabilities</c><00:38:16.319><c> then</c><00:38:16.520><c> here</c><00:38:16.680><c> I'm</c>

00:38:16.790 --> 00:38:16.800 align:start position:0%
get our probabilities then here I'm
 

00:38:16.800 --> 00:38:18.910 align:start position:0%
get our probabilities then here I'm
doing<00:38:17.040><c> top</c><00:38:17.359><c> case</c><00:38:17.480><c> sampling</c><00:38:17.880><c> of</c><00:38:18.040><c> 50</c><00:38:18.680><c> and</c><00:38:18.800><c> I'm</c>

00:38:18.910 --> 00:38:18.920 align:start position:0%
doing top case sampling of 50 and I'm
 

00:38:18.920 --> 00:38:20.230 align:start position:0%
doing top case sampling of 50 and I'm
doing<00:38:19.160><c> that</c><00:38:19.319><c> because</c><00:38:19.560><c> this</c><00:38:19.640><c> is</c><00:38:19.760><c> the</c><00:38:19.880><c> hugging</c>

00:38:20.230 --> 00:38:20.240 align:start position:0%
doing that because this is the hugging
 

00:38:20.240 --> 00:38:23.030 align:start position:0%
doing that because this is the hugging
face<00:38:20.480><c> default</c><00:38:21.280><c> so</c><00:38:21.480><c> just</c><00:38:21.640><c> looking</c><00:38:21.920><c> at</c><00:38:22.200><c> the</c>

00:38:23.030 --> 00:38:23.040 align:start position:0%
face default so just looking at the
 

00:38:23.040 --> 00:38:26.710 align:start position:0%
face default so just looking at the
hugging<00:38:23.480><c> face</c><00:38:23.760><c> docks</c><00:38:24.160><c> here</c><00:38:24.560><c> of</c><00:38:24.760><c> a</c><00:38:25.240><c> pipeline</c><00:38:26.240><c> um</c>

00:38:26.710 --> 00:38:26.720 align:start position:0%
hugging face docks here of a pipeline um
 

00:38:26.720 --> 00:38:28.550 align:start position:0%
hugging face docks here of a pipeline um
there's<00:38:26.880><c> a</c><00:38:27.000><c> bunch</c><00:38:27.200><c> of</c>

00:38:28.550 --> 00:38:28.560 align:start position:0%
there's a bunch of
 

00:38:28.560 --> 00:38:32.589 align:start position:0%
there's a bunch of
quarks<00:38:29.200><c> that</c><00:38:29.359><c> go</c><00:38:29.520><c> into</c><00:38:29.760><c> hugging</c><00:38:30.119><c> face</c><00:38:31.520><c> and</c><00:38:32.520><c> I</c>

00:38:32.589 --> 00:38:32.599 align:start position:0%
quarks that go into hugging face and I
 

00:38:32.599 --> 00:38:34.589 align:start position:0%
quarks that go into hugging face and I
mean<00:38:32.960><c> it's</c><00:38:33.280><c> it's</c><00:38:33.440><c> kind</c><00:38:33.560><c> of</c><00:38:33.640><c> a</c><00:38:33.760><c> lot</c><00:38:34.079><c> honestly</c>

00:38:34.589 --> 00:38:34.599 align:start position:0%
mean it's it's kind of a lot honestly
 

00:38:34.599 --> 00:38:36.430 align:start position:0%
mean it's it's kind of a lot honestly
but<00:38:35.520><c> I</c><00:38:35.599><c> guess</c><00:38:35.760><c> the</c><00:38:35.839><c> important</c><00:38:36.119><c> one</c><00:38:36.240><c> that</c><00:38:36.319><c> I</c>

00:38:36.430 --> 00:38:36.440 align:start position:0%
but I guess the important one that I
 

00:38:36.440 --> 00:38:38.190 align:start position:0%
but I guess the important one that I
noticed<00:38:36.760><c> is</c><00:38:36.839><c> that</c><00:38:36.960><c> they're</c><00:38:37.119><c> using</c><00:38:37.480><c> top</c><00:38:37.760><c> K</c><00:38:38.040><c> by</c>

00:38:38.190 --> 00:38:38.200 align:start position:0%
noticed is that they're using top K by
 

00:38:38.200 --> 00:38:41.069 align:start position:0%
noticed is that they're using top K by
default<00:38:38.880><c> which</c><00:38:39.000><c> is</c><00:38:39.200><c> 50</c><00:38:40.119><c> and</c><00:38:40.280><c> what</c><00:38:40.440><c> that</c><00:38:40.640><c> does</c>

00:38:41.069 --> 00:38:41.079 align:start position:0%
default which is 50 and what that does
 

00:38:41.079 --> 00:38:43.870 align:start position:0%
default which is 50 and what that does
is<00:38:41.680><c> that</c><00:38:42.680><c> uh</c><00:38:42.800><c> so</c><00:38:42.960><c> that's</c><00:38:43.119><c> being</c><00:38:43.280><c> used</c><00:38:43.599><c> here</c><00:38:43.760><c> as</c>

00:38:43.870 --> 00:38:43.880 align:start position:0%
is that uh so that's being used here as
 

00:38:43.880 --> 00:38:45.829 align:start position:0%
is that uh so that's being used here as
well<00:38:44.520><c> and</c><00:38:44.640><c> what</c><00:38:44.800><c> that</c><00:38:44.960><c> does</c><00:38:45.200><c> is</c><00:38:45.359><c> basically</c><00:38:45.720><c> we</c>

00:38:45.829 --> 00:38:45.839 align:start position:0%
well and what that does is basically we
 

00:38:45.839 --> 00:38:47.470 align:start position:0%
well and what that does is basically we
want<00:38:45.960><c> to</c><00:38:46.079><c> take</c><00:38:46.200><c> our</c><00:38:46.400><c> probabilities</c><00:38:47.240><c> and</c><00:38:47.359><c> we</c>

00:38:47.470 --> 00:38:47.480 align:start position:0%
want to take our probabilities and we
 

00:38:47.480 --> 00:38:49.390 align:start position:0%
want to take our probabilities and we
only<00:38:47.680><c> want</c><00:38:47.800><c> to</c><00:38:48.079><c> keep</c><00:38:48.520><c> the</c><00:38:48.720><c> top</c><00:38:49.000><c> 50</c>

00:38:49.390 --> 00:38:49.400 align:start position:0%
only want to keep the top 50
 

00:38:49.400 --> 00:38:51.750 align:start position:0%
only want to keep the top 50
probabilities<00:38:50.319><c> and</c><00:38:50.520><c> anything</c><00:38:50.960><c> that</c><00:38:51.079><c> is</c><00:38:51.280><c> lower</c>

00:38:51.750 --> 00:38:51.760 align:start position:0%
probabilities and anything that is lower
 

00:38:51.760 --> 00:38:54.150 align:start position:0%
probabilities and anything that is lower
than<00:38:51.880><c> the</c><00:38:52.000><c> 50th</c><00:38:52.760><c> probability</c><00:38:53.680><c> uh</c><00:38:53.800><c> we</c><00:38:53.960><c> just</c>

00:38:54.150 --> 00:38:54.160 align:start position:0%
than the 50th probability uh we just
 

00:38:54.160 --> 00:38:56.910 align:start position:0%
than the 50th probability uh we just
clamp<00:38:54.520><c> to</c><00:38:54.720><c> zero</c><00:38:55.160><c> and</c><00:38:55.680><c> renormalize</c><00:38:56.680><c> and</c><00:38:56.760><c> so</c>

00:38:56.910 --> 00:38:56.920 align:start position:0%
clamp to zero and renormalize and so
 

00:38:56.920 --> 00:38:59.510 align:start position:0%
clamp to zero and renormalize and so
that<00:38:57.040><c> way</c><00:38:57.160><c> we</c><00:38:57.240><c> are</c><00:38:57.520><c> never</c><00:38:57.720><c> sampling</c><00:38:58.640><c> very</c><00:38:58.960><c> rare</c>

00:38:59.510 --> 00:38:59.520 align:start position:0%
that way we are never sampling very rare
 

00:38:59.520 --> 00:39:01.349 align:start position:0%
that way we are never sampling very rare
tokens<00:39:00.520><c> uh</c><00:39:00.599><c> the</c><00:39:00.720><c> tokens</c><00:39:01.000><c> we're</c><00:39:01.119><c> going</c><00:39:01.200><c> to</c><00:39:01.280><c> be</c>

00:39:01.349 --> 00:39:01.359 align:start position:0%
tokens uh the tokens we're going to be
 

00:39:01.359 --> 00:39:03.430 align:start position:0%
tokens uh the tokens we're going to be
sampling<00:39:01.720><c> are</c><00:39:01.920><c> always</c><00:39:02.160><c> in</c><00:39:02.280><c> the</c><00:39:02.480><c> top</c><00:39:02.720><c> 50</c><00:39:03.200><c> of</c>

00:39:03.430 --> 00:39:03.440 align:start position:0%
sampling are always in the top 50 of
 

00:39:03.440 --> 00:39:05.510 align:start position:0%
sampling are always in the top 50 of
most<00:39:03.640><c> likely</c><00:39:04.000><c> tokens</c><00:39:04.800><c> and</c><00:39:04.920><c> this</c><00:39:05.040><c> helps</c><00:39:05.280><c> keep</c>

00:39:05.510 --> 00:39:05.520 align:start position:0%
most likely tokens and this helps keep
 

00:39:05.520 --> 00:39:07.270 align:start position:0%
most likely tokens and this helps keep
the<00:39:05.599><c> model</c><00:39:05.880><c> kind</c><00:39:06.000><c> of</c><00:39:06.160><c> on</c><00:39:06.400><c> track</c><00:39:06.960><c> and</c><00:39:07.160><c> it</c>

00:39:07.270 --> 00:39:07.280 align:start position:0%
the model kind of on track and it
 

00:39:07.280 --> 00:39:08.630 align:start position:0%
the model kind of on track and it
doesn't<00:39:07.520><c> blabber</c><00:39:07.920><c> on</c><00:39:08.119><c> and</c><00:39:08.200><c> it</c><00:39:08.280><c> doesn't</c><00:39:08.480><c> get</c>

00:39:08.630 --> 00:39:08.640 align:start position:0%
doesn't blabber on and it doesn't get
 

00:39:08.640 --> 00:39:10.390 align:start position:0%
doesn't blabber on and it doesn't get
lost<00:39:09.119><c> and</c><00:39:09.280><c> doesn't</c><00:39:09.480><c> go</c><00:39:09.640><c> off</c><00:39:09.760><c> the</c><00:39:09.880><c> rails</c><00:39:10.280><c> as</c>

00:39:10.390 --> 00:39:10.400 align:start position:0%
lost and doesn't go off the rails as
 

00:39:10.400 --> 00:39:13.109 align:start position:0%
lost and doesn't go off the rails as
easily<00:39:11.319><c> uh</c><00:39:11.440><c> and</c><00:39:11.520><c> it</c><00:39:11.680><c> kind</c><00:39:11.800><c> of</c><00:39:11.960><c> like</c><00:39:12.319><c> um</c><00:39:12.760><c> sticks</c>

00:39:13.109 --> 00:39:13.119 align:start position:0%
easily uh and it kind of like um sticks
 

00:39:13.119 --> 00:39:15.710 align:start position:0%
easily uh and it kind of like um sticks
in<00:39:13.400><c> the</c><00:39:13.760><c> vicinity</c><00:39:14.240><c> of</c><00:39:14.400><c> likely</c><00:39:14.720><c> tokens</c><00:39:15.400><c> a</c><00:39:15.520><c> lot</c>

00:39:15.710 --> 00:39:15.720 align:start position:0%
in the vicinity of likely tokens a lot
 

00:39:15.720 --> 00:39:17.550 align:start position:0%
in the vicinity of likely tokens a lot
better<00:39:16.599><c> so</c><00:39:16.800><c> this</c><00:39:16.880><c> is</c><00:39:17.000><c> the</c><00:39:17.079><c> way</c><00:39:17.160><c> to</c><00:39:17.240><c> do</c><00:39:17.359><c> it</c><00:39:17.440><c> in</c>

00:39:17.550 --> 00:39:17.560 align:start position:0%
better so this is the way to do it in
 

00:39:17.560 --> 00:39:18.950 align:start position:0%
better so this is the way to do it in
pytorch<00:39:18.119><c> and</c><00:39:18.200><c> you</c><00:39:18.280><c> can</c><00:39:18.400><c> step</c><00:39:18.599><c> through</c><00:39:18.760><c> it</c><00:39:18.880><c> if</c>

00:39:18.950 --> 00:39:18.960 align:start position:0%
pytorch and you can step through it if
 

00:39:18.960 --> 00:39:20.109 align:start position:0%
pytorch and you can step through it if
you<00:39:19.119><c> like</c><00:39:19.400><c> I</c><00:39:19.480><c> don't</c><00:39:19.599><c> think</c><00:39:19.760><c> it's</c><00:39:19.880><c> super</c>

00:39:20.109 --> 00:39:20.119 align:start position:0%
you like I don't think it's super
 

00:39:20.119 --> 00:39:22.270 align:start position:0%
you like I don't think it's super
insightful<00:39:20.560><c> so</c><00:39:20.720><c> I'll</c><00:39:20.960><c> speed</c><00:39:21.400><c> through</c><00:39:21.640><c> it</c><00:39:22.160><c> but</c>

00:39:22.270 --> 00:39:22.280 align:start position:0%
insightful so I'll speed through it but
 

00:39:22.280 --> 00:39:24.270 align:start position:0%
insightful so I'll speed through it but
roughly<00:39:22.640><c> speaking</c><00:39:22.960><c> we</c><00:39:23.119><c> get</c><00:39:23.319><c> this</c><00:39:23.480><c> new</c><00:39:23.720><c> column</c>

00:39:24.270 --> 00:39:24.280 align:start position:0%
roughly speaking we get this new column
 

00:39:24.280 --> 00:39:27.790 align:start position:0%
roughly speaking we get this new column
of<00:39:24.640><c> of</c><00:39:24.800><c> tokens</c><00:39:25.640><c> we</c><00:39:25.839><c> append</c><00:39:26.160><c> them</c><00:39:26.319><c> on</c><00:39:26.560><c> x</c><00:39:27.480><c> and</c>

00:39:27.790 --> 00:39:27.800 align:start position:0%
of of tokens we append them on x and
 

00:39:27.800 --> 00:39:30.710 align:start position:0%
of of tokens we append them on x and
basically<00:39:28.280><c> The</c><00:39:28.599><c> Columns</c><00:39:28.960><c> of</c><00:39:29.119><c> X</c><00:39:29.400><c> grow</c><00:39:30.200><c> until</c>

00:39:30.710 --> 00:39:30.720 align:start position:0%
basically The Columns of X grow until
 

00:39:30.720 --> 00:39:33.030 align:start position:0%
basically The Columns of X grow until
this<00:39:30.880><c> y</c><00:39:31.079><c> Loop</c><00:39:31.280><c> gets</c><00:39:31.400><c> tripped</c><00:39:31.800><c> up</c><00:39:32.800><c> and</c><00:39:32.880><c> then</c>

00:39:33.030 --> 00:39:33.040 align:start position:0%
this y Loop gets tripped up and then
 

00:39:33.040 --> 00:39:38.790 align:start position:0%
this y Loop gets tripped up and then
finally<00:39:33.440><c> we</c><00:39:33.560><c> have</c><00:39:33.680><c> an</c><00:39:33.839><c> entire</c><00:39:34.839><c> X</c><00:39:35.200><c> of</c><00:39:35.960><c> size</c><00:39:37.359><c> um</c><00:39:38.359><c> 5</c>

00:39:38.790 --> 00:39:38.800 align:start position:0%
finally we have an entire X of size um 5
 

00:39:38.800 --> 00:39:41.670 align:start position:0%
finally we have an entire X of size um 5
by<00:39:39.000><c> 30</c><00:39:39.480><c> in</c><00:39:39.640><c> this</c><00:39:39.839><c> case</c><00:39:40.200><c> in</c><00:39:40.319><c> this</c><00:39:40.520><c> example</c><00:39:41.480><c> and</c>

00:39:41.670 --> 00:39:41.680 align:start position:0%
by 30 in this case in this example and
 

00:39:41.680 --> 00:39:43.870 align:start position:0%
by 30 in this case in this example and
we<00:39:41.839><c> can</c><00:39:42.160><c> just</c><00:39:42.440><c> basically</c><00:39:43.000><c> print</c><00:39:43.440><c> all</c><00:39:43.640><c> those</c>

00:39:43.870 --> 00:39:43.880 align:start position:0%
we can just basically print all those
 

00:39:43.880 --> 00:39:46.150 align:start position:0%
we can just basically print all those
individual<00:39:44.319><c> rows</c><00:39:45.079><c> so</c><00:39:45.359><c> I'm</c><00:39:45.560><c> getting</c><00:39:45.839><c> all</c><00:39:46.040><c> the</c>

00:39:46.150 --> 00:39:46.160 align:start position:0%
individual rows so I'm getting all the
 

00:39:46.160 --> 00:39:48.309 align:start position:0%
individual rows so I'm getting all the
rows<00:39:47.160><c> I'm</c><00:39:47.319><c> getting</c><00:39:47.520><c> all</c><00:39:47.680><c> the</c><00:39:47.839><c> tokens</c><00:39:48.200><c> that</c>

00:39:48.309 --> 00:39:48.319 align:start position:0%
rows I'm getting all the tokens that
 

00:39:48.319 --> 00:39:50.430 align:start position:0%
rows I'm getting all the tokens that
were<00:39:48.520><c> sampled</c><00:39:49.280><c> and</c><00:39:49.400><c> I'm</c><00:39:49.560><c> using</c><00:39:49.839><c> the</c><00:39:50.000><c> decode</c>

00:39:50.430 --> 00:39:50.440 align:start position:0%
were sampled and I'm using the decode
 

00:39:50.440 --> 00:39:52.430 align:start position:0%
were sampled and I'm using the decode
function<00:39:50.720><c> from</c><00:39:50.880><c> Tik</c><00:39:51.079><c> tokenizer</c><00:39:51.680><c> to</c><00:39:52.079><c> get</c><00:39:52.280><c> back</c>

00:39:52.430 --> 00:39:52.440 align:start position:0%
function from Tik tokenizer to get back
 

00:39:52.440 --> 00:39:55.950 align:start position:0%
function from Tik tokenizer to get back
the<00:39:52.680><c> string</c><00:39:53.560><c> which</c><00:39:53.760><c> we</c><00:39:53.880><c> can</c><00:39:54.319><c> print</c><00:39:55.319><c> and</c><00:39:55.480><c> so</c>

00:39:55.950 --> 00:39:55.960 align:start position:0%
the string which we can print and so
 

00:39:55.960 --> 00:39:59.430 align:start position:0%
the string which we can print and so
terminal<00:39:56.560><c> new</c><00:39:56.800><c> terminal</c>

00:39:59.430 --> 00:39:59.440 align:start position:0%
 
 

00:39:59.440 --> 00:40:08.950 align:start position:0%
 
and<00:39:59.599><c> let</c><00:39:59.800><c> me</c><00:40:00.160><c> python</c><00:40:00.599><c> train</c>

00:40:08.950 --> 00:40:08.960 align:start position:0%
 
 

00:40:08.960 --> 00:40:11.510 align:start position:0%
 
gpt2<00:40:09.960><c> okay</c><00:40:10.560><c> so</c><00:40:10.720><c> these</c><00:40:10.839><c> are</c><00:40:10.960><c> the</c><00:40:11.079><c> generations</c>

00:40:11.510 --> 00:40:11.520 align:start position:0%
gpt2 okay so these are the generations
 

00:40:11.520 --> 00:40:13.510 align:start position:0%
gpt2 okay so these are the generations
that<00:40:11.640><c> we're</c><00:40:11.800><c> getting</c><00:40:12.319><c> hello</c><00:40:12.920><c> I'm</c><00:40:13.000><c> a</c><00:40:13.160><c> language</c>

00:40:13.510 --> 00:40:13.520 align:start position:0%
that we're getting hello I'm a language
 

00:40:13.520 --> 00:40:14.990 align:start position:0%
that we're getting hello I'm a language
model<00:40:13.960><c> not</c><00:40:14.119><c> a</c>

00:40:14.990 --> 00:40:15.000 align:start position:0%
model not a
 

00:40:15.000 --> 00:40:19.190 align:start position:0%
model not a
program<00:40:16.000><c> um</c><00:40:16.400><c> new</c><00:40:16.640><c> line</c><00:40:16.839><c> new</c><00:40:17.040><c> line</c><00:40:17.960><c> Etc</c><00:40:18.839><c> hello</c>

00:40:19.190 --> 00:40:19.200 align:start position:0%
program um new line new line Etc hello
 

00:40:19.200 --> 00:40:20.990 align:start position:0%
program um new line new line Etc hello
I'm<00:40:19.319><c> a</c><00:40:19.440><c> language</c><00:40:19.760><c> model</c><00:40:20.280><c> and</c><00:40:20.520><c> one</c><00:40:20.640><c> of</c><00:40:20.760><c> the</c><00:40:20.839><c> main</c>

00:40:20.990 --> 00:40:21.000 align:start position:0%
I'm a language model and one of the main
 

00:40:21.000 --> 00:40:22.349 align:start position:0%
I'm a language model and one of the main
things<00:40:21.200><c> that</c><00:40:21.400><c> bothers</c><00:40:21.680><c> me</c><00:40:21.839><c> when</c><00:40:21.960><c> they</c><00:40:22.079><c> create</c>

00:40:22.349 --> 00:40:22.359 align:start position:0%
things that bothers me when they create
 

00:40:22.359 --> 00:40:23.829 align:start position:0%
things that bothers me when they create
languages<00:40:22.800><c> is</c><00:40:22.960><c> how</c><00:40:23.119><c> easy</c><00:40:23.319><c> it</c><00:40:23.440><c> becomes</c><00:40:23.720><c> to</c>

00:40:23.829 --> 00:40:23.839 align:start position:0%
languages is how easy it becomes to
 

00:40:23.839 --> 00:40:26.190 align:start position:0%
languages is how easy it becomes to
create<00:40:24.119><c> something</c><00:40:24.640><c> that</c><00:40:25.640><c> I</c><00:40:25.720><c> me</c><00:40:25.839><c> so</c><00:40:25.960><c> this</c><00:40:26.040><c> will</c>

00:40:26.190 --> 00:40:26.200 align:start position:0%
create something that I me so this will
 

00:40:26.200 --> 00:40:27.710 align:start position:0%
create something that I me so this will
just<00:40:26.319><c> like</c><00:40:26.480><c> blabber</c><00:40:26.839><c> on</c><00:40:27.079><c> right</c><00:40:27.319><c> in</c><00:40:27.400><c> all</c><00:40:27.560><c> these</c>

00:40:27.710 --> 00:40:27.720 align:start position:0%
just like blabber on right in all these
 

00:40:27.720 --> 00:40:29.790 align:start position:0%
just like blabber on right in all these
cases<00:40:28.359><c> now</c><00:40:28.640><c> one</c><00:40:28.760><c> thing</c><00:40:28.920><c> you</c><00:40:29.040><c> will</c><00:40:29.240><c> notice</c><00:40:29.680><c> is</c>

00:40:29.790 --> 00:40:29.800 align:start position:0%
cases now one thing you will notice is
 

00:40:29.800 --> 00:40:31.589 align:start position:0%
cases now one thing you will notice is
that<00:40:30.040><c> these</c><00:40:30.200><c> Generations</c><00:40:30.880><c> are</c><00:40:31.119><c> not</c><00:40:31.480><c> the</c>

00:40:31.589 --> 00:40:31.599 align:start position:0%
that these Generations are not the
 

00:40:31.599 --> 00:40:35.430 align:start position:0%
that these Generations are not the
generations<00:40:32.319><c> of</c><00:40:32.920><c> hugging</c><00:40:33.280><c> face</c><00:40:33.680><c> here</c><00:40:34.680><c> and</c><00:40:35.200><c> I</c>

00:40:35.430 --> 00:40:35.440 align:start position:0%
generations of hugging face here and I
 

00:40:35.440 --> 00:40:37.589 align:start position:0%
generations of hugging face here and I
can't<00:40:35.720><c> find</c><00:40:36.040><c> the</c><00:40:36.200><c> discrepancy</c><00:40:36.760><c> to</c><00:40:36.880><c> be</c><00:40:37.040><c> honest</c>

00:40:37.589 --> 00:40:37.599 align:start position:0%
can't find the discrepancy to be honest
 

00:40:37.599 --> 00:40:39.349 align:start position:0%
can't find the discrepancy to be honest
and<00:40:37.720><c> I</c><00:40:37.880><c> didn't</c><00:40:38.280><c> fully</c><00:40:38.599><c> go</c><00:40:38.760><c> through</c><00:40:38.960><c> all</c><00:40:39.160><c> these</c>

00:40:39.349 --> 00:40:39.359 align:start position:0%
and I didn't fully go through all these
 

00:40:39.359 --> 00:40:40.550 align:start position:0%
and I didn't fully go through all these
options<00:40:39.720><c> but</c><00:40:39.880><c> probably</c><00:40:40.160><c> there's</c><00:40:40.319><c> something</c>

00:40:40.550 --> 00:40:40.560 align:start position:0%
options but probably there's something
 

00:40:40.560 --> 00:40:43.309 align:start position:0%
options but probably there's something
else<00:40:40.839><c> hiding</c><00:40:41.280><c> in</c><00:40:41.520><c> on</c><00:40:41.720><c> addition</c><00:40:42.000><c> to</c><00:40:42.160><c> the</c><00:40:42.319><c> top</c><00:40:42.560><c> P</c>

00:40:43.309 --> 00:40:43.319 align:start position:0%
else hiding in on addition to the top P
 

00:40:43.319 --> 00:40:44.990 align:start position:0%
else hiding in on addition to the top P
so<00:40:43.440><c> I'm</c><00:40:43.520><c> not</c><00:40:43.640><c> able</c><00:40:43.839><c> to</c><00:40:43.960><c> match</c><00:40:44.160><c> it</c><00:40:44.280><c> up</c><00:40:44.720><c> but</c><00:40:44.880><c> just</c>

00:40:44.990 --> 00:40:45.000 align:start position:0%
so I'm not able to match it up but just
 

00:40:45.000 --> 00:40:47.910 align:start position:0%
so I'm not able to match it up but just
for<00:40:45.440><c> correctness</c><00:40:46.440><c> um</c><00:40:47.079><c> down</c><00:40:47.319><c> here</c><00:40:47.480><c> Below</c><00:40:47.800><c> in</c>

00:40:47.910 --> 00:40:47.920 align:start position:0%
for correctness um down here Below in
 

00:40:47.920 --> 00:40:49.950 align:start position:0%
for correctness um down here Below in
the<00:40:48.000><c> juper</c><00:40:48.440><c> notebook</c><00:40:48.880><c> and</c><00:40:49.040><c> using</c><00:40:49.400><c> the</c><00:40:49.599><c> hugging</c>

00:40:49.950 --> 00:40:49.960 align:start position:0%
the juper notebook and using the hugging
 

00:40:49.960 --> 00:40:52.230 align:start position:0%
the juper notebook and using the hugging
face<00:40:50.280><c> model</c><00:40:51.280><c> so</c><00:40:51.440><c> this</c><00:40:51.520><c> is</c><00:40:51.599><c> the</c><00:40:51.720><c> hugging</c><00:40:52.040><c> face</c>

00:40:52.230 --> 00:40:52.240 align:start position:0%
face model so this is the hugging face
 

00:40:52.240 --> 00:40:56.309 align:start position:0%
face model so this is the hugging face
model<00:40:52.760><c> here</c><00:40:53.760><c> I</c><00:40:53.920><c> was</c><00:40:54.480><c> I</c><00:40:54.680><c> replicated</c><00:40:55.200><c> the</c><00:40:55.400><c> code</c>

00:40:56.309 --> 00:40:56.319 align:start position:0%
model here I was I replicated the code
 

00:40:56.319 --> 00:40:59.630 align:start position:0%
model here I was I replicated the code
and<00:40:56.480><c> if</c><00:40:56.640><c> I</c><00:40:56.760><c> do</c><00:40:57.400><c> this</c><00:40:57.560><c> and</c><00:40:57.680><c> I</c><00:40:57.839><c> run</c><00:40:58.359><c> that</c><00:40:59.359><c> then</c><00:40:59.560><c> I</c>

00:40:59.630 --> 00:40:59.640 align:start position:0%
and if I do this and I run that then I
 

00:40:59.640 --> 00:41:03.190 align:start position:0%
and if I do this and I run that then I
am<00:40:59.800><c> getting</c><00:41:00.240><c> the</c><00:41:00.640><c> same</c><00:41:01.200><c> results</c><00:41:02.200><c> so</c><00:41:02.480><c> basically</c>

00:41:03.190 --> 00:41:03.200 align:start position:0%
am getting the same results so basically
 

00:41:03.200 --> 00:41:05.390 align:start position:0%
am getting the same results so basically
the<00:41:03.359><c> model</c><00:41:03.720><c> internals</c><00:41:04.200><c> are</c><00:41:04.359><c> not</c><00:41:04.599><c> wrong</c><00:41:05.200><c> it's</c>

00:41:05.390 --> 00:41:05.400 align:start position:0%
the model internals are not wrong it's
 

00:41:05.400 --> 00:41:08.190 align:start position:0%
the model internals are not wrong it's
just<00:41:05.560><c> I'm</c><00:41:05.680><c> not</c><00:41:05.920><c> 100%</c><00:41:06.319><c> sure</c><00:41:06.720><c> what</c><00:41:07.440><c> the</c><00:41:07.760><c> pipeline</c>

00:41:08.190 --> 00:41:08.200 align:start position:0%
just I'm not 100% sure what the pipeline
 

00:41:08.200 --> 00:41:09.589 align:start position:0%
just I'm not 100% sure what the pipeline
does<00:41:08.480><c> in</c><00:41:08.640><c> hugging</c><00:41:09.000><c> face</c><00:41:09.240><c> and</c><00:41:09.359><c> that's</c><00:41:09.480><c> why</c>

00:41:09.589 --> 00:41:09.599 align:start position:0%
does in hugging face and that's why
 

00:41:09.599 --> 00:41:11.670 align:start position:0%
does in hugging face and that's why
we're<00:41:09.760><c> not</c><00:41:09.880><c> able</c><00:41:10.079><c> to</c><00:41:10.200><c> match</c><00:41:10.440><c> them</c><00:41:10.599><c> up</c><00:41:11.280><c> but</c>

00:41:11.670 --> 00:41:11.680 align:start position:0%
we're not able to match them up but
 

00:41:11.680 --> 00:41:13.309 align:start position:0%
we're not able to match them up but
otherwise<00:41:12.040><c> the</c><00:41:12.160><c> code</c><00:41:12.359><c> is</c><00:41:12.560><c> correct</c><00:41:13.000><c> and</c><00:41:13.119><c> we've</c>

00:41:13.309 --> 00:41:13.319 align:start position:0%
otherwise the code is correct and we've
 

00:41:13.319 --> 00:41:16.710 align:start position:0%
otherwise the code is correct and we've
loaded<00:41:13.680><c> all</c><00:41:13.920><c> the</c><00:41:14.760><c> um</c><00:41:15.319><c> tensors</c><00:41:15.760><c> correctly</c><00:41:16.560><c> so</c>

00:41:16.710 --> 00:41:16.720 align:start position:0%
loaded all the um tensors correctly so
 

00:41:16.720 --> 00:41:17.990 align:start position:0%
loaded all the um tensors correctly so
we're<00:41:16.880><c> initializing</c><00:41:17.359><c> the</c><00:41:17.440><c> model</c><00:41:17.680><c> correctly</c>

00:41:17.990 --> 00:41:18.000 align:start position:0%
we're initializing the model correctly
 

00:41:18.000 --> 00:41:20.109 align:start position:0%
we're initializing the model correctly
and<00:41:18.119><c> everything</c><00:41:18.440><c> here</c><00:41:18.599><c> works</c><00:41:19.480><c> so</c><00:41:19.680><c> long</c><00:41:19.839><c> story</c>

00:41:20.109 --> 00:41:20.119 align:start position:0%
and everything here works so long story
 

00:41:20.119 --> 00:41:22.470 align:start position:0%
and everything here works so long story
short<00:41:20.760><c> uh</c><00:41:20.920><c> We've</c><00:41:21.280><c> Port</c><00:41:21.480><c> it</c><00:41:21.599><c> all</c><00:41:21.720><c> the</c><00:41:21.880><c> weights</c>

00:41:22.470 --> 00:41:22.480 align:start position:0%
short uh We've Port it all the weights
 

00:41:22.480 --> 00:41:25.270 align:start position:0%
short uh We've Port it all the weights
we<00:41:22.640><c> initialize</c><00:41:23.000><c> the</c><00:41:23.280><c> gpt2</c><00:41:24.280><c> this</c><00:41:24.400><c> is</c><00:41:24.560><c> the</c><00:41:24.800><c> exact</c>

00:41:25.270 --> 00:41:25.280 align:start position:0%
we initialize the gpt2 this is the exact
 

00:41:25.280 --> 00:41:27.550 align:start position:0%
we initialize the gpt2 this is the exact
opening<00:41:25.760><c> gpt2</c><00:41:26.720><c> and</c><00:41:26.839><c> it</c><00:41:26.920><c> can</c><00:41:27.280><c> generate</c>

00:41:27.550 --> 00:41:27.560 align:start position:0%
opening gpt2 and it can generate
 

00:41:27.560 --> 00:41:30.950 align:start position:0%
opening gpt2 and it can generate
sequences<00:41:27.960><c> and</c><00:41:28.079><c> they</c><00:41:28.200><c> look</c><00:41:28.720><c> sensible</c><00:41:29.720><c> and</c><00:41:29.960><c> now</c>

00:41:30.950 --> 00:41:30.960 align:start position:0%
sequences and they look sensible and now
 

00:41:30.960 --> 00:41:32.270 align:start position:0%
sequences and they look sensible and now
here<00:41:31.160><c> of</c><00:41:31.280><c> course</c><00:41:31.440><c> we're</c><00:41:31.640><c> initializing</c><00:41:32.160><c> with</c>

00:41:32.270 --> 00:41:32.280 align:start position:0%
here of course we're initializing with
 

00:41:32.280 --> 00:41:34.910 align:start position:0%
here of course we're initializing with
gbt2<00:41:32.800><c> model</c><00:41:33.160><c> weights</c><00:41:34.000><c> but</c><00:41:34.240><c> now</c><00:41:34.560><c> we</c><00:41:34.640><c> want</c><00:41:34.760><c> to</c>

00:41:34.910 --> 00:41:34.920 align:start position:0%
gbt2 model weights but now we want to
 

00:41:34.920 --> 00:41:36.550 align:start position:0%
gbt2 model weights but now we want to
initialize<00:41:35.400><c> from</c><00:41:35.560><c> scratch</c><00:41:36.000><c> from</c><00:41:36.200><c> random</c>

00:41:36.550 --> 00:41:36.560 align:start position:0%
initialize from scratch from random
 

00:41:36.560 --> 00:41:38.470 align:start position:0%
initialize from scratch from random
numbers<00:41:37.280><c> and</c><00:41:37.400><c> we</c><00:41:37.520><c> want</c><00:41:37.640><c> to</c><00:41:37.800><c> actually</c><00:41:38.040><c> train</c><00:41:38.280><c> a</c>

00:41:38.470 --> 00:41:38.480 align:start position:0%
numbers and we want to actually train a
 

00:41:38.480 --> 00:41:40.829 align:start position:0%
numbers and we want to actually train a
model<00:41:39.000><c> that</c><00:41:39.119><c> will</c><00:41:39.280><c> give</c><00:41:39.400><c> us</c><00:41:39.680><c> sequences</c><00:41:40.680><c> as</c>

00:41:40.829 --> 00:41:40.839 align:start position:0%
model that will give us sequences as
 

00:41:40.839 --> 00:41:44.309 align:start position:0%
model that will give us sequences as
good<00:41:41.079><c> as</c><00:41:41.480><c> or</c><00:41:41.720><c> better</c><00:41:42.599><c> than</c><00:41:42.839><c> these</c><00:41:43.000><c> ones</c><00:41:43.839><c> in</c>

00:41:44.309 --> 00:41:44.319 align:start position:0%
good as or better than these ones in
 

00:41:44.319 --> 00:41:46.589 align:start position:0%
good as or better than these ones in
quality<00:41:45.319><c> and</c><00:41:45.480><c> so</c><00:41:45.800><c> that's</c><00:41:45.960><c> what</c><00:41:46.079><c> we</c><00:41:46.200><c> turn</c><00:41:46.359><c> to</c>

00:41:46.589 --> 00:41:46.599 align:start position:0%
quality and so that's what we turn to
 

00:41:46.599 --> 00:41:48.349 align:start position:0%
quality and so that's what we turn to
next<00:41:47.200><c> so</c><00:41:47.359><c> it</c><00:41:47.440><c> turns</c><00:41:47.680><c> out</c><00:41:47.839><c> that</c><00:41:47.960><c> using</c><00:41:48.240><c> the</c>

00:41:48.349 --> 00:41:48.359 align:start position:0%
next so it turns out that using the
 

00:41:48.359 --> 00:41:49.670 align:start position:0%
next so it turns out that using the
random<00:41:48.720><c> model</c><00:41:49.000><c> is</c><00:41:49.160><c> actually</c><00:41:49.440><c> fairly</c>

00:41:49.670 --> 00:41:49.680 align:start position:0%
random model is actually fairly
 

00:41:49.680 --> 00:41:51.670 align:start position:0%
random model is actually fairly
straightforward<00:41:50.599><c> because</c><00:41:50.839><c> pytorch</c><00:41:51.359><c> already</c>

00:41:51.670 --> 00:41:51.680 align:start position:0%
straightforward because pytorch already
 

00:41:51.680 --> 00:41:53.670 align:start position:0%
straightforward because pytorch already
initializes<00:41:52.240><c> our</c><00:41:52.480><c> model</c><00:41:52.800><c> randomly</c><00:41:53.359><c> and</c><00:41:53.520><c> by</c>

00:41:53.670 --> 00:41:53.680 align:start position:0%
initializes our model randomly and by
 

00:41:53.680 --> 00:41:58.230 align:start position:0%
initializes our model randomly and by
default<00:41:54.680><c> so</c><00:41:55.119><c> when</c><00:41:55.359><c> we</c><00:41:56.200><c> create</c><00:41:57.440><c> the</c><00:41:57.560><c> GPT</c><00:41:58.000><c> model</c>

00:41:58.230 --> 00:41:58.240 align:start position:0%
default so when we create the GPT model
 

00:41:58.240 --> 00:42:00.950 align:start position:0%
default so when we create the GPT model
and<00:41:58.359><c> the</c><00:41:58.520><c> Constructor</c><00:41:59.520><c> this</c><00:41:59.599><c> is</c><00:41:59.839><c> all</c><00:42:00.480><c> um</c><00:42:00.839><c> all</c>

00:42:00.950 --> 00:42:00.960 align:start position:0%
and the Constructor this is all um all
 

00:42:00.960 --> 00:42:03.589 align:start position:0%
and the Constructor this is all um all
of<00:42:01.160><c> these</c><00:42:01.520><c> layers</c><00:42:01.920><c> and</c><00:42:02.160><c> modules</c><00:42:02.960><c> have</c><00:42:03.280><c> random</c>

00:42:03.589 --> 00:42:03.599 align:start position:0%
of these layers and modules have random
 

00:42:03.599 --> 00:42:05.910 align:start position:0%
of these layers and modules have random
initializers<00:42:04.280><c> that</c><00:42:04.480><c> are</c><00:42:04.680><c> there</c><00:42:04.880><c> by</c><00:42:05.160><c> default</c>

00:42:05.910 --> 00:42:05.920 align:start position:0%
initializers that are there by default
 

00:42:05.920 --> 00:42:07.950 align:start position:0%
initializers that are there by default
so<00:42:06.119><c> when</c><00:42:06.319><c> these</c><00:42:06.599><c> linear</c><00:42:07.000><c> layers</c><00:42:07.359><c> get</c><00:42:07.560><c> created</c>

00:42:07.950 --> 00:42:07.960 align:start position:0%
so when these linear layers get created
 

00:42:07.960 --> 00:42:10.190 align:start position:0%
so when these linear layers get created
and<00:42:08.119><c> so</c><00:42:08.280><c> on</c><00:42:08.920><c> there's</c><00:42:09.280><c> default</c><00:42:09.640><c> Constructors</c>

00:42:10.190 --> 00:42:10.200 align:start position:0%
and so on there's default Constructors
 

00:42:10.200 --> 00:42:11.430 align:start position:0%
and so on there's default Constructors
for<00:42:10.359><c> example</c><00:42:10.640><c> using</c><00:42:10.880><c> the</c><00:42:11.000><c> Javier</c>

00:42:11.430 --> 00:42:11.440 align:start position:0%
for example using the Javier
 

00:42:11.440 --> 00:42:13.510 align:start position:0%
for example using the Javier
initialization<00:42:12.079><c> that</c><00:42:12.200><c> we</c><00:42:12.280><c> saw</c><00:42:12.440><c> in</c><00:42:12.560><c> the</c><00:42:12.720><c> past</c>

00:42:13.510 --> 00:42:13.520 align:start position:0%
initialization that we saw in the past
 

00:42:13.520 --> 00:42:15.550 align:start position:0%
initialization that we saw in the past
uh<00:42:13.599><c> to</c><00:42:13.800><c> construct</c><00:42:14.319><c> the</c><00:42:14.440><c> weights</c><00:42:14.800><c> of</c><00:42:15.040><c> these</c>

00:42:15.550 --> 00:42:15.560 align:start position:0%
uh to construct the weights of these
 

00:42:15.560 --> 00:42:18.309 align:start position:0%
uh to construct the weights of these
layers<00:42:16.560><c> and</c><00:42:16.680><c> so</c><00:42:16.920><c> creating</c><00:42:17.240><c> a</c><00:42:17.400><c> random</c><00:42:17.680><c> model</c>

00:42:18.309 --> 00:42:18.319 align:start position:0%
layers and so creating a random model
 

00:42:18.319 --> 00:42:20.950 align:start position:0%
layers and so creating a random model
instead<00:42:18.640><c> of</c><00:42:18.800><c> a</c><00:42:19.000><c> gpt2</c><00:42:19.680><c> model</c><00:42:20.599><c> is</c><00:42:20.760><c> actually</c>

00:42:20.950 --> 00:42:20.960 align:start position:0%
instead of a gpt2 model is actually
 

00:42:20.960 --> 00:42:22.589 align:start position:0%
instead of a gpt2 model is actually
fairly<00:42:21.280><c> straightforward</c><00:42:22.000><c> and</c><00:42:22.119><c> we</c><00:42:22.240><c> would</c><00:42:22.440><c> just</c>

00:42:22.589 --> 00:42:22.599 align:start position:0%
fairly straightforward and we would just
 

00:42:22.599 --> 00:42:24.790 align:start position:0%
fairly straightforward and we would just
come<00:42:22.839><c> here</c><00:42:23.800><c> and</c><00:42:23.920><c> instead</c><00:42:24.240><c> we</c><00:42:24.319><c> would</c><00:42:24.520><c> create</c>

00:42:24.790 --> 00:42:24.800 align:start position:0%
come here and instead we would create
 

00:42:24.800 --> 00:42:27.990 align:start position:0%
come here and instead we would create
model<00:42:25.160><c> equals</c><00:42:25.839><c> GPT</c><00:42:27.280><c> and</c><00:42:27.400><c> then</c><00:42:27.520><c> we</c><00:42:27.640><c> want</c><00:42:27.760><c> to</c><00:42:27.839><c> use</c>

00:42:27.990 --> 00:42:28.000 align:start position:0%
model equals GPT and then we want to use
 

00:42:28.000 --> 00:42:31.069 align:start position:0%
model equals GPT and then we want to use
the<00:42:28.119><c> default</c><00:42:28.520><c> config</c><00:42:29.160><c> GPT</c><00:42:29.800><c> config</c><00:42:30.800><c> and</c><00:42:30.920><c> the</c>

00:42:31.069 --> 00:42:31.079 align:start position:0%
the default config GPT config and the
 

00:42:31.079 --> 00:42:33.710 align:start position:0%
the default config GPT config and the
default<00:42:31.480><c> config</c><00:42:31.839><c> uses</c><00:42:32.119><c> the</c><00:42:32.240><c> 124</c><00:42:32.760><c> M</c><00:42:33.000><c> parameters</c>

00:42:33.710 --> 00:42:33.720 align:start position:0%
default config uses the 124 M parameters
 

00:42:33.720 --> 00:42:35.950 align:start position:0%
default config uses the 124 M parameters
so<00:42:34.440><c> this</c><00:42:34.559><c> is</c><00:42:34.760><c> the</c><00:42:34.920><c> random</c><00:42:35.280><c> model</c>

00:42:35.950 --> 00:42:35.960 align:start position:0%
so this is the random model
 

00:42:35.960 --> 00:42:42.230 align:start position:0%
so this is the random model
initialization<00:42:36.960><c> and</c><00:42:37.119><c> we</c><00:42:37.280><c> can</c><00:42:37.440><c> run</c>

00:42:42.230 --> 00:42:42.240 align:start position:0%
 
 

00:42:42.240 --> 00:42:46.309 align:start position:0%
 
it<00:42:43.240><c> and</c><00:42:43.400><c> we</c><00:42:43.520><c> should</c><00:42:43.720><c> be</c><00:42:43.839><c> able</c><00:42:44.040><c> to</c><00:42:44.319><c> get</c><00:42:45.319><c> uh</c>

00:42:46.309 --> 00:42:46.319 align:start position:0%
it and we should be able to get uh
 

00:42:46.319 --> 00:42:48.030 align:start position:0%
it and we should be able to get uh
results<00:42:47.000><c> now</c><00:42:47.119><c> the</c><00:42:47.240><c> results</c><00:42:47.599><c> here</c><00:42:47.720><c> of</c><00:42:47.839><c> course</c>

00:42:48.030 --> 00:42:48.040 align:start position:0%
results now the results here of course
 

00:42:48.040 --> 00:42:50.150 align:start position:0%
results now the results here of course
are<00:42:48.359><c> total</c><00:42:48.760><c> garbage</c><00:42:49.119><c> carbal</c><00:42:49.880><c> and</c><00:42:50.000><c> that's</c>

00:42:50.150 --> 00:42:50.160 align:start position:0%
are total garbage carbal and that's
 

00:42:50.160 --> 00:42:51.790 align:start position:0%
are total garbage carbal and that's
because<00:42:50.319><c> this</c><00:42:50.400><c> is</c><00:42:50.559><c> random</c><00:42:50.839><c> model</c><00:42:51.559><c> and</c><00:42:51.640><c> so</c>

00:42:51.790 --> 00:42:51.800 align:start position:0%
because this is random model and so
 

00:42:51.800 --> 00:42:53.030 align:start position:0%
because this is random model and so
we're<00:42:51.960><c> just</c><00:42:52.079><c> getting</c><00:42:52.319><c> all</c><00:42:52.480><c> these</c><00:42:52.720><c> random</c>

00:42:53.030 --> 00:42:53.040 align:start position:0%
we're just getting all these random
 

00:42:53.040 --> 00:42:55.430 align:start position:0%
we're just getting all these random
token<00:42:53.400><c> string</c><00:42:53.800><c> pieces</c><00:42:54.280><c> chunked</c><00:42:54.640><c> up</c><00:42:55.119><c> totally</c>

00:42:55.430 --> 00:42:55.440 align:start position:0%
token string pieces chunked up totally
 

00:42:55.440 --> 00:42:57.710 align:start position:0%
token string pieces chunked up totally
at<00:42:55.599><c> random</c><00:42:56.280><c> so</c><00:42:56.480><c> that's</c><00:42:56.599><c> what</c><00:42:56.720><c> we</c><00:42:56.800><c> have</c><00:42:56.920><c> right</c>

00:42:57.710 --> 00:42:57.720 align:start position:0%
at random so that's what we have right
 

00:42:57.720 --> 00:42:59.710 align:start position:0%
at random so that's what we have right
now<00:42:58.720><c> uh</c><00:42:58.839><c> now</c><00:42:59.000><c> one</c><00:42:59.079><c> more</c><00:42:59.240><c> thing</c><00:42:59.359><c> I</c><00:42:59.440><c> wanted</c><00:42:59.640><c> to</c>

00:42:59.710 --> 00:42:59.720 align:start position:0%
now uh now one more thing I wanted to
 

00:42:59.720 --> 00:43:01.430 align:start position:0%
now uh now one more thing I wanted to
point<00:42:59.920><c> out</c><00:43:00.079><c> by</c><00:43:00.160><c> the</c><00:43:00.280><c> way</c><00:43:00.440><c> is</c><00:43:00.800><c> in</c><00:43:00.960><c> case</c><00:43:01.119><c> you</c><00:43:01.240><c> do</c>

00:43:01.430 --> 00:43:01.440 align:start position:0%
point out by the way is in case you do
 

00:43:01.440 --> 00:43:03.109 align:start position:0%
point out by the way is in case you do
not<00:43:01.720><c> have</c><00:43:02.000><c> Cuda</c><00:43:02.440><c> available</c><00:43:02.880><c> because</c><00:43:03.040><c> you</c>

00:43:03.109 --> 00:43:03.119 align:start position:0%
not have Cuda available because you
 

00:43:03.119 --> 00:43:04.870 align:start position:0%
not have Cuda available because you
don't<00:43:03.280><c> have</c><00:43:03.400><c> a</c><00:43:03.520><c> GPU</c><00:43:04.119><c> you</c><00:43:04.200><c> can</c><00:43:04.359><c> still</c><00:43:04.559><c> follow</c>

00:43:04.870 --> 00:43:04.880 align:start position:0%
don't have a GPU you can still follow
 

00:43:04.880 --> 00:43:07.670 align:start position:0%
don't have a GPU you can still follow
along<00:43:05.359><c> with</c><00:43:05.880><c> uh</c><00:43:06.520><c> with</c><00:43:06.680><c> what</c><00:43:06.800><c> we're</c><00:43:06.960><c> doing</c><00:43:07.240><c> here</c>

00:43:07.670 --> 00:43:07.680 align:start position:0%
along with uh with what we're doing here
 

00:43:07.680 --> 00:43:10.270 align:start position:0%
along with uh with what we're doing here
uh<00:43:07.800><c> to</c><00:43:07.960><c> some</c><00:43:08.160><c> extent</c><00:43:09.119><c> uh</c><00:43:09.520><c> and</c><00:43:09.680><c> probably</c><00:43:09.960><c> not</c><00:43:10.160><c> to</c>

00:43:10.270 --> 00:43:10.280 align:start position:0%
uh to some extent uh and probably not to
 

00:43:10.280 --> 00:43:11.910 align:start position:0%
uh to some extent uh and probably not to
the<00:43:10.400><c> very</c><00:43:10.640><c> end</c><00:43:11.000><c> because</c><00:43:11.319><c> by</c><00:43:11.480><c> the</c><00:43:11.599><c> end</c><00:43:11.800><c> we're</c>

00:43:11.910 --> 00:43:11.920 align:start position:0%
the very end because by the end we're
 

00:43:11.920 --> 00:43:13.470 align:start position:0%
the very end because by the end we're
going<00:43:12.040><c> to</c><00:43:12.119><c> be</c><00:43:12.200><c> using</c><00:43:12.440><c> multiple</c><00:43:12.800><c> gpus</c><00:43:13.240><c> and</c>

00:43:13.470 --> 00:43:13.480 align:start position:0%
going to be using multiple gpus and
 

00:43:13.480 --> 00:43:15.510 align:start position:0%
going to be using multiple gpus and
actually<00:43:13.720><c> doing</c><00:43:13.960><c> a</c><00:43:14.079><c> serious</c><00:43:14.400><c> training</c><00:43:14.720><c> run</c><00:43:15.440><c> uh</c>

00:43:15.510 --> 00:43:15.520 align:start position:0%
actually doing a serious training run uh
 

00:43:15.520 --> 00:43:16.630 align:start position:0%
actually doing a serious training run uh
but<00:43:15.640><c> for</c><00:43:15.800><c> now</c><00:43:15.960><c> you</c><00:43:16.040><c> can</c><00:43:16.160><c> actually</c><00:43:16.359><c> follow</c>

00:43:16.630 --> 00:43:16.640 align:start position:0%
but for now you can actually follow
 

00:43:16.640 --> 00:43:19.150 align:start position:0%
but for now you can actually follow
along<00:43:16.960><c> decently</c><00:43:17.520><c> okay</c><00:43:18.280><c> uh</c><00:43:18.400><c> so</c><00:43:18.559><c> one</c><00:43:18.880><c> thing</c><00:43:19.040><c> that</c>

00:43:19.150 --> 00:43:19.160 align:start position:0%
along decently okay uh so one thing that
 

00:43:19.160 --> 00:43:20.950 align:start position:0%
along decently okay uh so one thing that
I<00:43:19.280><c> like</c><00:43:19.400><c> to</c><00:43:19.520><c> do</c><00:43:19.640><c> in</c><00:43:19.760><c> pytorch</c><00:43:20.319><c> is</c><00:43:20.480><c> I</c><00:43:20.599><c> like</c><00:43:20.760><c> to</c>

00:43:20.950 --> 00:43:20.960 align:start position:0%
I like to do in pytorch is I like to
 

00:43:20.960 --> 00:43:22.630 align:start position:0%
I like to do in pytorch is I like to
autod<00:43:21.359><c> detect</c><00:43:21.880><c> the</c><00:43:22.040><c> device</c><00:43:22.359><c> that</c><00:43:22.480><c> is</c>

00:43:22.630 --> 00:43:22.640 align:start position:0%
autod detect the device that is
 

00:43:22.640 --> 00:43:24.710 align:start position:0%
autod detect the device that is
available<00:43:23.000><c> to</c><00:43:23.160><c> you</c><00:43:23.920><c> so</c><00:43:24.040><c> in</c><00:43:24.200><c> particular</c><00:43:24.640><c> you</c>

00:43:24.710 --> 00:43:24.720 align:start position:0%
available to you so in particular you
 

00:43:24.720 --> 00:43:28.270 align:start position:0%
available to you so in particular you
could<00:43:24.880><c> do</c><00:43:25.079><c> that</c><00:43:25.319><c> like</c><00:43:25.680><c> this</c>

00:43:28.270 --> 00:43:28.280 align:start position:0%
could do that like this
 

00:43:28.280 --> 00:43:30.309 align:start position:0%
could do that like this
so<00:43:28.480><c> here</c><00:43:28.599><c> we</c><00:43:28.720><c> are</c><00:43:28.880><c> trying</c><00:43:29.119><c> to</c><00:43:29.520><c> detect</c><00:43:29.839><c> a</c><00:43:30.040><c> device</c>

00:43:30.309 --> 00:43:30.319 align:start position:0%
so here we are trying to detect a device
 

00:43:30.319 --> 00:43:32.190 align:start position:0%
so here we are trying to detect a device
to<00:43:30.480><c> run</c><00:43:30.680><c> on</c><00:43:31.079><c> that</c><00:43:31.240><c> has</c><00:43:31.400><c> the</c><00:43:31.520><c> highest</c><00:43:31.800><c> compute</c>

00:43:32.190 --> 00:43:32.200 align:start position:0%
to run on that has the highest compute
 

00:43:32.200 --> 00:43:33.790 align:start position:0%
to run on that has the highest compute
capability<00:43:32.920><c> you</c><00:43:33.040><c> can</c><00:43:33.160><c> think</c><00:43:33.319><c> about</c><00:43:33.480><c> it</c><00:43:33.640><c> that</c>

00:43:33.790 --> 00:43:33.800 align:start position:0%
capability you can think about it that
 

00:43:33.800 --> 00:43:36.430 align:start position:0%
capability you can think about it that
way<00:43:34.520><c> so</c><00:43:34.880><c> by</c><00:43:35.119><c> default</c><00:43:35.480><c> we</c><00:43:35.559><c> start</c><00:43:35.800><c> with</c><00:43:35.960><c> CPU</c>

00:43:36.430 --> 00:43:36.440 align:start position:0%
way so by default we start with CPU
 

00:43:36.440 --> 00:43:37.790 align:start position:0%
way so by default we start with CPU
which<00:43:36.559><c> of</c><00:43:36.680><c> course</c><00:43:36.839><c> is</c><00:43:36.960><c> available</c><00:43:37.319><c> everywhere</c>

00:43:37.790 --> 00:43:37.800 align:start position:0%
which of course is available everywhere
 

00:43:37.800 --> 00:43:39.349 align:start position:0%
which of course is available everywhere
because<00:43:38.240><c> every</c><00:43:38.480><c> single</c><00:43:38.760><c> computer</c><00:43:39.119><c> will</c><00:43:39.240><c> have</c>

00:43:39.349 --> 00:43:39.359 align:start position:0%
because every single computer will have
 

00:43:39.359 --> 00:43:41.990 align:start position:0%
because every single computer will have
a<00:43:39.480><c> CPU</c><00:43:40.480><c> but</c><00:43:40.680><c> then</c><00:43:41.160><c> we</c><00:43:41.280><c> can</c><00:43:41.400><c> try</c><00:43:41.559><c> to</c><00:43:41.680><c> detect</c><00:43:41.960><c> do</c>

00:43:41.990 --> 00:43:42.000 align:start position:0%
a CPU but then we can try to detect do
 

00:43:42.000 --> 00:43:44.670 align:start position:0%
a CPU but then we can try to detect do
you<00:43:42.119><c> have</c><00:43:42.200><c> a</c><00:43:42.280><c> GPU</c><00:43:42.800><c> you</c><00:43:42.960><c> so</c><00:43:43.160><c> use</c><00:43:43.319><c> a</c><00:43:43.480><c> Cuda</c><00:43:44.440><c> and</c>

00:43:44.670 --> 00:43:44.680 align:start position:0%
you have a GPU you so use a Cuda and
 

00:43:44.680 --> 00:43:47.150 align:start position:0%
you have a GPU you so use a Cuda and
then<00:43:45.079><c> if</c><00:43:45.160><c> you</c><00:43:45.280><c> don't</c><00:43:45.480><c> have</c><00:43:45.599><c> a</c><00:43:45.760><c> Cuda</c><00:43:46.680><c> uh</c><00:43:46.839><c> do</c><00:43:46.960><c> you</c>

00:43:47.150 --> 00:43:47.160 align:start position:0%
then if you don't have a Cuda uh do you
 

00:43:47.160 --> 00:43:49.470 align:start position:0%
then if you don't have a Cuda uh do you
at<00:43:47.280><c> least</c><00:43:47.480><c> have</c><00:43:47.680><c> MPS</c><00:43:48.359><c> MPS</c><00:43:48.800><c> is</c><00:43:48.920><c> the</c><00:43:49.079><c> back</c><00:43:49.240><c> end</c>

00:43:49.470 --> 00:43:49.480 align:start position:0%
at least have MPS MPS is the back end
 

00:43:49.480 --> 00:43:51.710 align:start position:0%
at least have MPS MPS is the back end
for<00:43:49.760><c> Apple</c><00:43:50.079><c> silicon</c><00:43:51.000><c> so</c><00:43:51.280><c> if</c><00:43:51.359><c> you</c><00:43:51.480><c> have</c><00:43:51.559><c> a</c>

00:43:51.710 --> 00:43:51.720 align:start position:0%
for Apple silicon so if you have a
 

00:43:51.720 --> 00:43:53.470 align:start position:0%
for Apple silicon so if you have a
Macbook<00:43:52.200><c> that</c><00:43:52.319><c> is</c><00:43:52.480><c> fairly</c><00:43:52.760><c> new</c><00:43:53.079><c> you</c><00:43:53.240><c> probably</c>

00:43:53.470 --> 00:43:53.480 align:start position:0%
Macbook that is fairly new you probably
 

00:43:53.480 --> 00:43:55.510 align:start position:0%
Macbook that is fairly new you probably
have<00:43:53.640><c> apple</c><00:43:53.880><c> silicon</c><00:43:54.240><c> on</c><00:43:54.359><c> the</c><00:43:54.480><c> inside</c><00:43:55.359><c> and</c>

00:43:55.510 --> 00:43:55.520 align:start position:0%
have apple silicon on the inside and
 

00:43:55.520 --> 00:43:57.150 align:start position:0%
have apple silicon on the inside and
then<00:43:55.760><c> that</c><00:43:55.960><c> has</c><00:43:56.079><c> a</c><00:43:56.200><c> GPU</c><00:43:56.599><c> that</c><00:43:56.680><c> is</c><00:43:56.760><c> actually</c>

00:43:57.150 --> 00:43:57.160 align:start position:0%
then that has a GPU that is actually
 

00:43:57.160 --> 00:43:59.190 align:start position:0%
then that has a GPU that is actually
fairly<00:43:57.440><c> capable</c><00:43:58.359><c> uh</c><00:43:58.480><c> depending</c><00:43:58.760><c> on</c><00:43:59.000><c> which</c>

00:43:59.190 --> 00:43:59.200 align:start position:0%
fairly capable uh depending on which
 

00:43:59.200 --> 00:44:01.069 align:start position:0%
fairly capable uh depending on which
MacBook<00:43:59.599><c> you</c><00:43:59.800><c> have</c><00:44:00.079><c> and</c><00:44:00.160><c> so</c><00:44:00.280><c> you</c><00:44:00.359><c> can</c><00:44:00.480><c> use</c><00:44:00.680><c> MPS</c>

00:44:01.069 --> 00:44:01.079 align:start position:0%
MacBook you have and so you can use MPS
 

00:44:01.079 --> 00:44:02.790 align:start position:0%
MacBook you have and so you can use MPS
which<00:44:01.200><c> will</c><00:44:01.319><c> be</c><00:44:01.760><c> potentially</c><00:44:02.240><c> faster</c><00:44:02.520><c> than</c>

00:44:02.790 --> 00:44:02.800 align:start position:0%
which will be potentially faster than
 

00:44:02.800 --> 00:44:05.589 align:start position:0%
which will be potentially faster than
CPU<00:44:03.800><c> and</c><00:44:03.880><c> so</c><00:44:04.040><c> we</c><00:44:04.119><c> can</c><00:44:04.240><c> print</c><00:44:04.440><c> the</c><00:44:04.599><c> device</c><00:44:04.880><c> here</c>

00:44:05.589 --> 00:44:05.599 align:start position:0%
CPU and so we can print the device here
 

00:44:05.599 --> 00:44:07.109 align:start position:0%
CPU and so we can print the device here
now<00:44:05.760><c> once</c><00:44:05.960><c> we</c><00:44:06.079><c> have</c><00:44:06.240><c> the</c><00:44:06.440><c> device</c><00:44:06.839><c> we</c><00:44:06.920><c> can</c>

00:44:07.109 --> 00:44:07.119 align:start position:0%
now once we have the device we can
 

00:44:07.119 --> 00:44:11.030 align:start position:0%
now once we have the device we can
actually<00:44:07.800><c> use</c><00:44:08.040><c> it</c><00:44:08.480><c> in</c><00:44:08.720><c> place</c><00:44:09.000><c> of</c><00:44:09.720><c> Puda</c><00:44:10.720><c> so</c><00:44:10.920><c> we</c>

00:44:11.030 --> 00:44:11.040 align:start position:0%
actually use it in place of Puda so we
 

00:44:11.040 --> 00:44:14.190 align:start position:0%
actually use it in place of Puda so we
just<00:44:11.200><c> swap</c><00:44:11.520><c> it</c><00:44:11.640><c> in</c><00:44:12.599><c> and</c><00:44:12.880><c> notice</c><00:44:13.359><c> that</c><00:44:13.920><c> here</c>

00:44:14.190 --> 00:44:14.200 align:start position:0%
just swap it in and notice that here
 

00:44:14.200 --> 00:44:17.589 align:start position:0%
just swap it in and notice that here
when<00:44:14.359><c> we</c><00:44:14.480><c> call</c><00:44:14.760><c> model</c><00:44:15.079><c> on</c><00:44:15.359><c> X</c><00:44:16.240><c> if</c><00:44:16.480><c> this</c><00:44:16.680><c> x</c><00:44:17.040><c> here</c>

00:44:17.589 --> 00:44:17.599 align:start position:0%
when we call model on X if this x here
 

00:44:17.599 --> 00:44:21.190 align:start position:0%
when we call model on X if this x here
is<00:44:17.720><c> on</c><00:44:18.040><c> CPU</c><00:44:19.040><c> instead</c><00:44:19.440><c> of</c><00:44:19.640><c> GPU</c><00:44:20.640><c> then</c><00:44:20.920><c> it</c><00:44:21.079><c> will</c>

00:44:21.190 --> 00:44:21.200 align:start position:0%
is on CPU instead of GPU then it will
 

00:44:21.200 --> 00:44:23.390 align:start position:0%
is on CPU instead of GPU then it will
work<00:44:21.520><c> fine</c><00:44:21.839><c> because</c><00:44:22.200><c> here</c><00:44:22.440><c> in</c><00:44:22.559><c> the</c><00:44:22.680><c> forward</c>

00:44:23.390 --> 00:44:23.400 align:start position:0%
work fine because here in the forward
 

00:44:23.400 --> 00:44:26.150 align:start position:0%
work fine because here in the forward
which<00:44:23.520><c> is</c><00:44:23.680><c> where</c><00:44:24.079><c> P</c><00:44:24.359><c> to</c><00:44:24.559><c> will</c><00:44:24.839><c> come</c><00:44:25.839><c> when</c><00:44:26.000><c> we</c>

00:44:26.150 --> 00:44:26.160 align:start position:0%
which is where P to will come when we
 

00:44:26.160 --> 00:44:28.430 align:start position:0%
which is where P to will come when we
create<00:44:26.359><c> a</c><00:44:26.599><c> pose</c><00:44:27.200><c> we</c><00:44:27.319><c> were</c><00:44:27.480><c> careful</c><00:44:27.800><c> to</c><00:44:27.960><c> use</c><00:44:28.200><c> the</c>

00:44:28.430 --> 00:44:28.440 align:start position:0%
create a pose we were careful to use the
 

00:44:28.440 --> 00:44:31.630 align:start position:0%
create a pose we were careful to use the
device<00:44:28.960><c> of</c><00:44:29.160><c> idx</c><00:44:30.119><c> to</c><00:44:30.359><c> create</c><00:44:30.960><c> this</c><00:44:31.119><c> tensor</c><00:44:31.480><c> as</c>

00:44:31.630 --> 00:44:31.640 align:start position:0%
device of idx to create this tensor as
 

00:44:31.640 --> 00:44:33.670 align:start position:0%
device of idx to create this tensor as
well<00:44:32.359><c> and</c><00:44:32.440><c> so</c><00:44:32.599><c> there</c><00:44:32.720><c> won't</c><00:44:32.960><c> be</c><00:44:33.040><c> any</c><00:44:33.240><c> mismatch</c>

00:44:33.670 --> 00:44:33.680 align:start position:0%
well and so there won't be any mismatch
 

00:44:33.680 --> 00:44:36.109 align:start position:0%
well and so there won't be any mismatch
where<00:44:33.880><c> one</c><00:44:34.040><c> tensor</c><00:44:34.359><c> is</c><00:44:34.440><c> on</c><00:44:34.599><c> CPU</c><00:44:35.079><c> one</c><00:44:35.319><c> is</c><00:44:35.400><c> on</c><00:44:35.599><c> GPU</c>

00:44:36.109 --> 00:44:36.119 align:start position:0%
where one tensor is on CPU one is on GPU
 

00:44:36.119 --> 00:44:38.510 align:start position:0%
where one tensor is on CPU one is on GPU
and<00:44:36.680><c> uh</c><00:44:36.839><c> that</c><00:44:37.040><c> you</c><00:44:37.160><c> can't</c><00:44:37.359><c> combine</c><00:44:37.800><c> those</c><00:44:38.319><c> but</c>

00:44:38.510 --> 00:44:38.520 align:start position:0%
and uh that you can't combine those but
 

00:44:38.520 --> 00:44:40.990 align:start position:0%
and uh that you can't combine those but
here<00:44:38.680><c> we</c><00:44:38.800><c> are</c><00:44:39.599><c> um</c><00:44:39.920><c> carefully</c><00:44:40.319><c> initializing</c><00:44:40.839><c> on</c>

00:44:40.990 --> 00:44:41.000 align:start position:0%
here we are um carefully initializing on
 

00:44:41.000 --> 00:44:43.750 align:start position:0%
here we are um carefully initializing on
the<00:44:41.160><c> correct</c><00:44:41.559><c> device</c><00:44:42.520><c> as</c><00:44:42.760><c> indicated</c><00:44:43.359><c> by</c><00:44:43.559><c> the</c>

00:44:43.750 --> 00:44:43.760 align:start position:0%
the correct device as indicated by the
 

00:44:43.760 --> 00:44:47.030 align:start position:0%
the correct device as indicated by the
input<00:44:44.319><c> to</c><00:44:44.599><c> this</c><00:44:45.160><c> model</c><00:44:46.160><c> so</c><00:44:46.400><c> this</c><00:44:46.520><c> will</c><00:44:46.720><c> autod</c>

00:44:47.030 --> 00:44:47.040 align:start position:0%
input to this model so this will autod
 

00:44:47.040 --> 00:44:49.150 align:start position:0%
input to this model so this will autod
detect<00:44:47.359><c> device</c><00:44:47.800><c> for</c><00:44:47.960><c> me</c><00:44:48.240><c> this</c><00:44:48.359><c> will</c><00:44:48.559><c> be</c><00:44:49.000><c> of</c>

00:44:49.150 --> 00:44:49.160 align:start position:0%
detect device for me this will be of
 

00:44:49.160 --> 00:44:50.309 align:start position:0%
detect device for me this will be of
course

00:44:50.309 --> 00:44:50.319 align:start position:0%
course
 

00:44:50.319 --> 00:44:54.589 align:start position:0%
course
GPU<00:44:51.319><c> so</c><00:44:52.119><c> using</c><00:44:52.480><c> device</c>

00:44:54.589 --> 00:44:54.599 align:start position:0%
GPU so using device
 

00:44:54.599 --> 00:44:58.349 align:start position:0%
GPU so using device
Cuda<00:44:55.599><c> uh</c><00:44:55.800><c> but</c><00:44:56.119><c> uh</c><00:44:56.240><c> you</c><00:44:56.319><c> can</c><00:44:56.480><c> also</c><00:44:56.680><c> run</c><00:44:57.200><c> with</c><00:44:57.880><c> um</c>

00:44:58.349 --> 00:44:58.359 align:start position:0%
Cuda uh but uh you can also run with um
 

00:44:58.359 --> 00:44:59.990 align:start position:0%
Cuda uh but uh you can also run with um
as<00:44:58.440><c> I</c><00:44:58.559><c> mentioned</c><00:44:58.880><c> another</c><00:44:59.160><c> device</c><00:44:59.760><c> and</c><00:44:59.880><c> it's</c>

00:44:59.990 --> 00:45:00.000 align:start position:0%
as I mentioned another device and it's
 

00:45:00.000 --> 00:45:01.390 align:start position:0%
as I mentioned another device and it's
not<00:45:00.119><c> going</c><00:45:00.240><c> to</c><00:45:00.319><c> be</c><00:45:00.400><c> too</c><00:45:00.559><c> much</c><00:45:00.680><c> slower</c><00:45:01.040><c> so</c><00:45:01.160><c> if</c><00:45:01.240><c> I</c>

00:45:01.390 --> 00:45:01.400 align:start position:0%
not going to be too much slower so if I
 

00:45:01.400 --> 00:45:03.630 align:start position:0%
not going to be too much slower so if I
override<00:45:02.040><c> device</c><00:45:02.440><c> here</c>

00:45:03.630 --> 00:45:03.640 align:start position:0%
override device here
 

00:45:03.640 --> 00:45:07.069 align:start position:0%
override device here
oops<00:45:04.640><c> if</c><00:45:04.720><c> I</c><00:45:05.000><c> override</c><00:45:05.440><c> device</c><00:45:05.720><c> equals</c>

00:45:07.069 --> 00:45:07.079 align:start position:0%
oops if I override device equals
 

00:45:07.079 --> 00:45:08.870 align:start position:0%
oops if I override device equals
CPU

00:45:08.870 --> 00:45:08.880 align:start position:0%
CPU
 

00:45:08.880 --> 00:45:11.309 align:start position:0%
CPU
then<00:45:09.880><c> we'll</c><00:45:10.040><c> still</c><00:45:10.319><c> print</c><00:45:10.559><c> Cuda</c><00:45:10.920><c> of</c><00:45:11.040><c> course</c>

00:45:11.309 --> 00:45:11.319 align:start position:0%
then we'll still print Cuda of course
 

00:45:11.319 --> 00:45:16.270 align:start position:0%
then we'll still print Cuda of course
but<00:45:11.440><c> now</c><00:45:11.559><c> we're</c><00:45:11.720><c> actually</c><00:45:11.920><c> using</c><00:45:12.160><c> CPU</c><00:45:12.839><c> one</c><00:45:13.880><c> 2</c><00:45:15.000><c> 3</c>

00:45:16.270 --> 00:45:16.280 align:start position:0%
but now we're actually using CPU one 2 3
 

00:45:16.280 --> 00:45:21.390 align:start position:0%
but now we're actually using CPU one 2 3
4<00:45:17.359><c> 5</c><00:45:18.359><c> 6</c><00:45:19.160><c> okay</c><00:45:19.319><c> about</c><00:45:19.559><c> 6</c><00:45:19.880><c> seconds</c><00:45:20.880><c> and</c><00:45:21.200><c> actually</c>

00:45:21.390 --> 00:45:21.400 align:start position:0%
4 5 6 okay about 6 seconds and actually
 

00:45:21.400 --> 00:45:22.950 align:start position:0%
4 5 6 okay about 6 seconds and actually
we're<00:45:21.559><c> not</c><00:45:21.680><c> using</c><00:45:21.960><c> torch</c><00:45:22.280><c> compile</c><00:45:22.640><c> and</c><00:45:22.760><c> stuff</c>

00:45:22.950 --> 00:45:22.960 align:start position:0%
we're not using torch compile and stuff
 

00:45:22.960 --> 00:45:24.309 align:start position:0%
we're not using torch compile and stuff
like<00:45:23.119><c> that</c><00:45:23.280><c> which</c><00:45:23.359><c> will</c><00:45:23.559><c> speed</c><00:45:23.800><c> up</c><00:45:24.000><c> everything</c>

00:45:24.309 --> 00:45:24.319 align:start position:0%
like that which will speed up everything
 

00:45:24.319 --> 00:45:27.190 align:start position:0%
like that which will speed up everything
a<00:45:24.480><c> lot</c><00:45:24.800><c> faster</c><00:45:25.160><c> as</c><00:45:25.280><c> well</c><00:45:25.800><c> but</c><00:45:26.240><c> you</c><00:45:26.400><c> can</c><00:45:26.559><c> follow</c>

00:45:27.190 --> 00:45:27.200 align:start position:0%
a lot faster as well but you can follow
 

00:45:27.200 --> 00:45:30.349 align:start position:0%
a lot faster as well but you can follow
even<00:45:27.319><c> on</c><00:45:27.440><c> a</c><00:45:27.520><c> CPU</c><00:45:27.920><c> I</c><00:45:28.000><c> think</c><00:45:28.160><c> to</c><00:45:28.319><c> a</c><00:45:28.680><c> decent</c><00:45:29.359><c> extent</c>

00:45:30.349 --> 00:45:30.359 align:start position:0%
even on a CPU I think to a decent extent
 

00:45:30.359 --> 00:45:32.630 align:start position:0%
even on a CPU I think to a decent extent
um<00:45:30.599><c> so</c><00:45:30.760><c> that's</c><00:45:30.960><c> note</c><00:45:31.200><c> on</c><00:45:31.400><c> that</c><00:45:32.119><c> okay</c><00:45:32.240><c> so</c><00:45:32.400><c> I</c><00:45:32.520><c> do</c>

00:45:32.630 --> 00:45:32.640 align:start position:0%
um so that's note on that okay so I do
 

00:45:32.640 --> 00:45:35.109 align:start position:0%
um so that's note on that okay so I do
want<00:45:32.760><c> to</c><00:45:32.920><c> loop</c><00:45:33.280><c> around</c><00:45:33.640><c> eventually</c><00:45:34.559><c> into</c><00:45:35.000><c> what</c>

00:45:35.109 --> 00:45:35.119 align:start position:0%
want to loop around eventually into what
 

00:45:35.119 --> 00:45:36.549 align:start position:0%
want to loop around eventually into what
it<00:45:35.200><c> means</c><00:45:35.359><c> to</c><00:45:35.520><c> have</c><00:45:35.680><c> different</c><00:45:35.960><c> devices</c><00:45:36.359><c> in</c>

00:45:36.549 --> 00:45:36.559 align:start position:0%
it means to have different devices in
 

00:45:36.559 --> 00:45:38.390 align:start position:0%
it means to have different devices in
pytorch<00:45:37.280><c> and</c><00:45:37.480><c> what</c><00:45:37.559><c> it</c><00:45:37.680><c> is</c><00:45:37.880><c> exactly</c><00:45:38.240><c> that</c>

00:45:38.390 --> 00:45:38.400 align:start position:0%
pytorch and what it is exactly that
 

00:45:38.400 --> 00:45:40.549 align:start position:0%
pytorch and what it is exactly that
pytorch<00:45:38.880><c> does</c><00:45:39.319><c> in</c><00:45:39.440><c> the</c><00:45:39.599><c> background</c><00:45:40.000><c> for</c><00:45:40.160><c> you</c>

00:45:40.549 --> 00:45:40.559 align:start position:0%
pytorch does in the background for you
 

00:45:40.559 --> 00:45:43.150 align:start position:0%
pytorch does in the background for you
when<00:45:40.680><c> you</c><00:45:40.800><c> do</c><00:45:41.000><c> something</c><00:45:41.400><c> like</c><00:45:41.800><c> module.</c><00:45:42.640><c> 2</c>

00:45:43.150 --> 00:45:43.160 align:start position:0%
when you do something like module. 2
 

00:45:43.160 --> 00:45:45.390 align:start position:0%
when you do something like module. 2
device<00:45:43.960><c> or</c><00:45:44.119><c> where</c><00:45:44.280><c> you</c><00:45:44.440><c> take</c><00:45:44.599><c> a</c><00:45:44.720><c> torch</c><00:45:45.000><c> tensor</c>

00:45:45.390 --> 00:45:45.400 align:start position:0%
device or where you take a torch tensor
 

00:45:45.400 --> 00:45:48.069 align:start position:0%
device or where you take a torch tensor
and<00:45:45.520><c> do</c><00:45:45.640><c> A2</c><00:45:46.400><c> device</c><00:45:47.280><c> and</c><00:45:47.559><c> what</c><00:45:47.720><c> exactly</c>

00:45:48.069 --> 00:45:48.079 align:start position:0%
and do A2 device and what exactly
 

00:45:48.079 --> 00:45:49.910 align:start position:0%
and do A2 device and what exactly
happens<00:45:48.319><c> and</c><00:45:48.480><c> how</c><00:45:48.640><c> that</c><00:45:48.760><c> works</c><00:45:49.440><c> but</c><00:45:49.559><c> for</c><00:45:49.720><c> now</c>

00:45:49.910 --> 00:45:49.920 align:start position:0%
happens and how that works but for now
 

00:45:49.920 --> 00:45:51.589 align:start position:0%
happens and how that works but for now
I'd<00:45:50.040><c> like</c><00:45:50.160><c> to</c><00:45:50.319><c> get</c><00:45:50.440><c> to</c><00:45:50.680><c> training</c><00:45:51.200><c> and</c><00:45:51.319><c> I'd</c><00:45:51.480><c> like</c>

00:45:51.589 --> 00:45:51.599 align:start position:0%
I'd like to get to training and I'd like
 

00:45:51.599 --> 00:45:53.870 align:start position:0%
I'd like to get to training and I'd like
to<00:45:51.800><c> start</c><00:45:52.200><c> training</c><00:45:52.559><c> the</c><00:45:52.680><c> model</c><00:45:53.359><c> and</c><00:45:53.480><c> for</c><00:45:53.680><c> now</c>

00:45:53.870 --> 00:45:53.880 align:start position:0%
to start training the model and for now
 

00:45:53.880 --> 00:45:55.829 align:start position:0%
to start training the model and for now
let's<00:45:54.040><c> just</c><00:45:54.160><c> say</c><00:45:54.359><c> the</c><00:45:54.520><c> device</c><00:45:54.920><c> makes</c><00:45:55.240><c> code</c><00:45:55.480><c> go</c>

00:45:55.829 --> 00:45:55.839 align:start position:0%
let's just say the device makes code go
 

00:45:55.839 --> 00:45:58.589 align:start position:0%
let's just say the device makes code go
fast<00:45:56.760><c> um</c><00:45:57.319><c> and</c><00:45:57.440><c> let's</c><00:45:57.680><c> go</c><00:45:57.920><c> into</c><00:45:58.240><c> how</c><00:45:58.359><c> we</c><00:45:58.440><c> can</c>

00:45:58.589 --> 00:45:58.599 align:start position:0%
fast um and let's go into how we can
 

00:45:58.599 --> 00:46:00.710 align:start position:0%
fast um and let's go into how we can
actually<00:45:58.800><c> train</c><00:45:59.040><c> the</c><00:45:59.160><c> model</c><00:46:00.079><c> so</c><00:46:00.280><c> to</c><00:46:00.400><c> train</c><00:46:00.640><c> the</c>

00:46:00.710 --> 00:46:00.720 align:start position:0%
actually train the model so to train the
 

00:46:00.720 --> 00:46:02.390 align:start position:0%
actually train the model so to train the
model<00:46:00.920><c> we're</c><00:46:01.040><c> going</c><00:46:01.160><c> to</c><00:46:01.280><c> need</c><00:46:01.400><c> some</c><00:46:01.599><c> data</c><00:46:01.839><c> set</c>

00:46:02.390 --> 00:46:02.400 align:start position:0%
model we're going to need some data set
 

00:46:02.400 --> 00:46:04.470 align:start position:0%
model we're going to need some data set
and<00:46:02.559><c> for</c><00:46:02.680><c> me</c><00:46:02.920><c> the</c><00:46:03.160><c> best</c><00:46:03.520><c> debugging</c><00:46:04.079><c> simplest</c>

00:46:04.470 --> 00:46:04.480 align:start position:0%
and for me the best debugging simplest
 

00:46:04.480 --> 00:46:06.309 align:start position:0%
and for me the best debugging simplest
data<00:46:04.680><c> set</c><00:46:04.800><c> that</c><00:46:04.960><c> I</c><00:46:05.040><c> like</c><00:46:05.200><c> to</c><00:46:05.319><c> use</c><00:46:05.640><c> is</c><00:46:05.839><c> the</c><00:46:06.040><c> tiny</c>

00:46:06.309 --> 00:46:06.319 align:start position:0%
data set that I like to use is the tiny
 

00:46:06.319 --> 00:46:08.990 align:start position:0%
data set that I like to use is the tiny
Shakespeare<00:46:06.880><c> data</c><00:46:07.160><c> set</c><00:46:08.119><c> um</c><00:46:08.680><c> and</c><00:46:08.800><c> it's</c>

00:46:08.990 --> 00:46:09.000 align:start position:0%
Shakespeare data set um and it's
 

00:46:09.000 --> 00:46:11.150 align:start position:0%
Shakespeare data set um and it's
available<00:46:09.400><c> at</c><00:46:09.559><c> this</c><00:46:09.680><c> URL</c><00:46:10.240><c> so</c><00:46:10.359><c> you</c><00:46:10.440><c> can</c><00:46:10.559><c> W</c><00:46:11.000><c> get</c>

00:46:11.150 --> 00:46:11.160 align:start position:0%
available at this URL so you can W get
 

00:46:11.160 --> 00:46:12.309 align:start position:0%
available at this URL so you can W get
it<00:46:11.400><c> or</c><00:46:11.520><c> you</c><00:46:11.599><c> can</c><00:46:11.720><c> just</c><00:46:11.839><c> search</c><00:46:12.119><c> tiny</c>

00:46:12.309 --> 00:46:12.319 align:start position:0%
it or you can just search tiny
 

00:46:12.319 --> 00:46:13.470 align:start position:0%
it or you can just search tiny
Shakespeare<00:46:12.720><c> data</c>

00:46:13.470 --> 00:46:13.480 align:start position:0%
Shakespeare data
 

00:46:13.480 --> 00:46:16.549 align:start position:0%
Shakespeare data
set<00:46:14.480><c> and</c><00:46:14.640><c> so</c><00:46:15.319><c> um</c><00:46:15.520><c> I</c><00:46:15.640><c> have</c><00:46:15.760><c> in</c><00:46:15.920><c> my</c><00:46:16.040><c> file</c><00:46:16.280><c> system</c>

00:46:16.549 --> 00:46:16.559 align:start position:0%
set and so um I have in my file system
 

00:46:16.559 --> 00:46:18.790 align:start position:0%
set and so um I have in my file system
as<00:46:16.800><c> just</c><00:46:17.000><c> LS</c><00:46:17.359><c> input.txt</c>

00:46:18.790 --> 00:46:18.800 align:start position:0%
as just LS input.txt
 

00:46:18.800 --> 00:46:22.030 align:start position:0%
as just LS input.txt
so<00:46:19.800><c> I</c><00:46:19.960><c> already</c><00:46:20.240><c> downloaded</c><00:46:20.680><c> it</c><00:46:21.599><c> and</c><00:46:21.760><c> here</c><00:46:21.920><c> I'm</c>

00:46:22.030 --> 00:46:22.040 align:start position:0%
so I already downloaded it and here I'm
 

00:46:22.040 --> 00:46:23.750 align:start position:0%
so I already downloaded it and here I'm
reading<00:46:22.359><c> the</c><00:46:22.480><c> data</c><00:46:22.760><c> set</c><00:46:23.079><c> getting</c><00:46:23.359><c> the</c><00:46:23.480><c> first</c>

00:46:23.750 --> 00:46:23.760 align:start position:0%
reading the data set getting the first
 

00:46:23.760 --> 00:46:26.309 align:start position:0%
reading the data set getting the first
1,000<00:46:24.200><c> characters</c><00:46:24.920><c> and</c><00:46:25.119><c> printing</c><00:46:25.559><c> the</c><00:46:25.720><c> first</c>

00:46:26.309 --> 00:46:26.319 align:start position:0%
1,000 characters and printing the first
 

00:46:26.319 --> 00:46:27.430 align:start position:0%
1,000 characters and printing the first
100

00:46:27.430 --> 00:46:27.440 align:start position:0%
100
 

00:46:27.440 --> 00:46:30.230 align:start position:0%
100
now<00:46:27.599><c> remember</c><00:46:27.920><c> that</c><00:46:28.079><c> gpt2</c><00:46:28.839><c> has</c><00:46:29.440><c> uh</c><00:46:29.640><c> roughly</c><00:46:30.040><c> a</c>

00:46:30.230 --> 00:46:30.240 align:start position:0%
now remember that gpt2 has uh roughly a
 

00:46:30.240 --> 00:46:32.510 align:start position:0%
now remember that gpt2 has uh roughly a
compression<00:46:30.720><c> ratio</c><00:46:31.200><c> the</c><00:46:31.359><c> tokenizer</c><00:46:32.240><c> has</c><00:46:32.359><c> a</c>

00:46:32.510 --> 00:46:32.520 align:start position:0%
compression ratio the tokenizer has a
 

00:46:32.520 --> 00:46:35.109 align:start position:0%
compression ratio the tokenizer has a
compression<00:46:32.880><c> ratio</c><00:46:33.119><c> of</c><00:46:33.240><c> rly</c><00:46:33.599><c> 3</c><00:46:33.800><c> to1</c><00:46:34.520><c> so</c><00:46:34.880><c> th000</c>

00:46:35.109 --> 00:46:35.119 align:start position:0%
compression ratio of rly 3 to1 so th000
 

00:46:35.119 --> 00:46:37.870 align:start position:0%
compression ratio of rly 3 to1 so th000
characters<00:46:35.520><c> is</c><00:46:35.680><c> roughly</c><00:46:36.000><c> 300</c><00:46:36.440><c> tokens</c><00:46:36.920><c> here</c><00:46:37.720><c> uh</c>

00:46:37.870 --> 00:46:37.880 align:start position:0%
characters is roughly 300 tokens here uh
 

00:46:37.880 --> 00:46:39.790 align:start position:0%
characters is roughly 300 tokens here uh
that<00:46:38.000><c> will</c><00:46:38.160><c> come</c><00:46:38.319><c> out</c><00:46:38.440><c> of</c><00:46:38.599><c> this</c><00:46:39.160><c> in</c><00:46:39.319><c> the</c><00:46:39.480><c> slice</c>

00:46:39.790 --> 00:46:39.800 align:start position:0%
that will come out of this in the slice
 

00:46:39.800 --> 00:46:41.990 align:start position:0%
that will come out of this in the slice
that<00:46:39.880><c> we're</c><00:46:40.079><c> currently</c><00:46:40.599><c> getting</c><00:46:41.599><c> so</c><00:46:41.760><c> this</c><00:46:41.880><c> is</c>

00:46:41.990 --> 00:46:42.000 align:start position:0%
that we're currently getting so this is
 

00:46:42.000 --> 00:46:44.549 align:start position:0%
that we're currently getting so this is
the<00:46:42.079><c> first</c><00:46:42.319><c> few</c><00:46:43.119><c> uh</c>

00:46:44.549 --> 00:46:44.559 align:start position:0%
the first few uh
 

00:46:44.559 --> 00:46:46.829 align:start position:0%
the first few uh
characters<00:46:45.559><c> and</c><00:46:46.040><c> uh</c><00:46:46.160><c> if</c><00:46:46.280><c> you</c><00:46:46.400><c> want</c><00:46:46.520><c> to</c><00:46:46.640><c> get</c><00:46:46.760><c> a</c>

00:46:46.829 --> 00:46:46.839 align:start position:0%
characters and uh if you want to get a
 

00:46:46.839 --> 00:46:48.390 align:start position:0%
characters and uh if you want to get a
few<00:46:47.000><c> more</c><00:46:47.160><c> statistics</c><00:46:47.640><c> on</c><00:46:47.800><c> this</c><00:46:47.960><c> we</c><00:46:48.079><c> can</c><00:46:48.200><c> do</c>

00:46:48.390 --> 00:46:48.400 align:start position:0%
few more statistics on this we can do
 

00:46:48.400 --> 00:46:50.390 align:start position:0%
few more statistics on this we can do
work<00:46:48.680><c> count</c><00:46:48.920><c> on</c><00:46:49.079><c> input.txt</c>

00:46:50.390 --> 00:46:50.400 align:start position:0%
work count on input.txt
 

00:46:50.400 --> 00:46:53.910 align:start position:0%
work count on input.txt
so<00:46:51.400><c> we</c><00:46:51.480><c> can</c><00:46:51.599><c> see</c><00:46:51.880><c> that</c><00:46:52.040><c> this</c><00:46:52.200><c> is</c><00:46:52.839><c> uh</c><00:46:53.240><c> 40,000</c>

00:46:53.910 --> 00:46:53.920 align:start position:0%
so we can see that this is uh 40,000
 

00:46:53.920 --> 00:46:56.309 align:start position:0%
so we can see that this is uh 40,000
lines<00:46:54.599><c> about</c><00:46:55.000><c> 200,000</c><00:46:55.480><c> words</c><00:46:55.760><c> in</c><00:46:55.880><c> this</c><00:46:56.079><c> data</c>

00:46:56.309 --> 00:46:56.319 align:start position:0%
lines about 200,000 words in this data
 

00:46:56.319 --> 00:46:59.510 align:start position:0%
lines about 200,000 words in this data
set<00:46:56.680><c> and</c><00:46:57.040><c> about</c><00:46:57.240><c> 1</c><00:46:57.440><c> million</c><00:46:58.200><c> bytes</c><00:46:59.079><c> in</c><00:46:59.280><c> this</c>

00:46:59.510 --> 00:46:59.520 align:start position:0%
set and about 1 million bytes in this
 

00:46:59.520 --> 00:47:01.870 align:start position:0%
set and about 1 million bytes in this
file<00:47:00.480><c> and</c><00:47:00.599><c> knowing</c><00:47:00.920><c> that</c><00:47:01.079><c> this</c><00:47:01.240><c> file</c><00:47:01.440><c> is</c><00:47:01.599><c> only</c>

00:47:01.870 --> 00:47:01.880 align:start position:0%
file and knowing that this file is only
 

00:47:01.880 --> 00:47:03.589 align:start position:0%
file and knowing that this file is only
asky<00:47:02.319><c> characters</c><00:47:02.720><c> there's</c><00:47:02.920><c> no</c><00:47:03.079><c> crazy</c><00:47:03.359><c> unic</c>

00:47:03.589 --> 00:47:03.599 align:start position:0%
asky characters there's no crazy unic
 

00:47:03.599 --> 00:47:05.910 align:start position:0%
asky characters there's no crazy unic
code<00:47:03.839><c> here</c><00:47:04.000><c> as</c><00:47:04.119><c> far</c><00:47:04.240><c> as</c><00:47:04.359><c> I</c><00:47:04.480><c> know</c><00:47:05.119><c> and</c><00:47:05.280><c> so</c><00:47:05.680><c> every</c>

00:47:05.910 --> 00:47:05.920 align:start position:0%
code here as far as I know and so every
 

00:47:05.920 --> 00:47:08.190 align:start position:0%
code here as far as I know and so every
asky<00:47:06.280><c> character</c><00:47:06.559><c> is</c><00:47:06.640><c> encoded</c><00:47:07.079><c> with</c><00:47:07.200><c> one</c><00:47:07.400><c> bite</c>

00:47:08.190 --> 00:47:08.200 align:start position:0%
asky character is encoded with one bite
 

00:47:08.200 --> 00:47:10.030 align:start position:0%
asky character is encoded with one bite
and<00:47:08.280><c> so</c><00:47:08.480><c> this</c><00:47:08.599><c> is</c><00:47:09.000><c> uh</c><00:47:09.119><c> the</c><00:47:09.200><c> same</c><00:47:09.480><c> number</c>

00:47:10.030 --> 00:47:10.040 align:start position:0%
and so this is uh the same number
 

00:47:10.040 --> 00:47:12.670 align:start position:0%
and so this is uh the same number
roughly<00:47:10.359><c> a</c><00:47:10.480><c> million</c><00:47:11.079><c> characters</c><00:47:11.880><c> inside</c><00:47:12.520><c> this</c>

00:47:12.670 --> 00:47:12.680 align:start position:0%
roughly a million characters inside this
 

00:47:12.680 --> 00:47:15.589 align:start position:0%
roughly a million characters inside this
data<00:47:13.160><c> set</c><00:47:14.160><c> so</c><00:47:14.359><c> that's</c><00:47:14.520><c> the</c><00:47:14.599><c> data</c><00:47:14.839><c> set</c><00:47:15.040><c> size</c><00:47:15.480><c> uh</c>

00:47:15.589 --> 00:47:15.599 align:start position:0%
data set so that's the data set size uh
 

00:47:15.599 --> 00:47:17.349 align:start position:0%
data set so that's the data set size uh
by<00:47:15.760><c> default</c><00:47:16.240><c> very</c><00:47:16.400><c> small</c><00:47:16.680><c> and</c><00:47:16.839><c> minimal</c><00:47:17.160><c> data</c>

00:47:17.349 --> 00:47:17.359 align:start position:0%
by default very small and minimal data
 

00:47:17.359 --> 00:47:19.630 align:start position:0%
by default very small and minimal data
set<00:47:17.520><c> for</c><00:47:17.960><c> debugging</c><00:47:18.960><c> to</c><00:47:19.119><c> get</c><00:47:19.240><c> us</c><00:47:19.359><c> off</c><00:47:19.520><c> the</c>

00:47:19.630 --> 00:47:19.640 align:start position:0%
set for debugging to get us off the
 

00:47:19.640 --> 00:47:21.510 align:start position:0%
set for debugging to get us off the
ground<00:47:20.319><c> in</c><00:47:20.440><c> order</c><00:47:20.640><c> to</c><00:47:20.760><c> tokenize</c><00:47:21.200><c> this</c><00:47:21.319><c> data</c>

00:47:21.510 --> 00:47:21.520 align:start position:0%
ground in order to tokenize this data
 

00:47:21.520 --> 00:47:23.950 align:start position:0%
ground in order to tokenize this data
set<00:47:21.680><c> we're</c><00:47:21.839><c> going</c><00:47:22.000><c> to</c><00:47:22.480><c> get</c><00:47:22.800><c> Tik</c><00:47:23.079><c> token</c>

00:47:23.950 --> 00:47:23.960 align:start position:0%
set we're going to get Tik token
 

00:47:23.960 --> 00:47:27.630 align:start position:0%
set we're going to get Tik token
encoding<00:47:24.319><c> for</c><00:47:24.599><c> gbt2</c><00:47:25.599><c> encode</c><00:47:26.079><c> the</c><00:47:26.200><c> data</c><00:47:27.280><c> uh</c><00:47:27.440><c> the</c>

00:47:27.630 --> 00:47:27.640 align:start position:0%
encoding for gbt2 encode the data uh the
 

00:47:27.640 --> 00:47:30.910 align:start position:0%
encoding for gbt2 encode the data uh the
first<00:47:28.599><c> um</c><00:47:29.119><c> 1,000</c><00:47:29.640><c> characters</c><00:47:30.520><c> and</c><00:47:30.640><c> then</c><00:47:30.800><c> I'm</c>

00:47:30.910 --> 00:47:30.920 align:start position:0%
first um 1,000 characters and then I'm
 

00:47:30.920 --> 00:47:33.670 align:start position:0%
first um 1,000 characters and then I'm
only<00:47:31.119><c> going</c><00:47:31.240><c> to</c><00:47:31.400><c> print</c><00:47:31.680><c> the</c><00:47:31.839><c> first</c><00:47:32.079><c> 24</c><00:47:32.680><c> tokens</c>

00:47:33.670 --> 00:47:33.680 align:start position:0%
only going to print the first 24 tokens
 

00:47:33.680 --> 00:47:36.109 align:start position:0%
only going to print the first 24 tokens
so<00:47:33.920><c> these</c><00:47:34.040><c> are</c><00:47:34.160><c> the</c><00:47:34.319><c> tokens</c><00:47:34.960><c> as</c><00:47:35.079><c> a</c><00:47:35.319><c> list</c><00:47:35.480><c> of</c>

00:47:36.109 --> 00:47:36.119 align:start position:0%
so these are the tokens as a list of
 

00:47:36.119 --> 00:47:38.910 align:start position:0%
so these are the tokens as a list of
integers<00:47:37.119><c> and</c><00:47:37.280><c> if</c><00:47:37.359><c> you</c><00:47:37.480><c> can</c><00:47:37.640><c> read</c><00:47:37.880><c> gpt2</c><00:47:38.440><c> tokens</c>

00:47:38.910 --> 00:47:38.920 align:start position:0%
integers and if you can read gpt2 tokens
 

00:47:38.920 --> 00:47:40.910 align:start position:0%
integers and if you can read gpt2 tokens
you<00:47:39.040><c> will</c><00:47:39.240><c> see</c><00:47:39.520><c> that</c><00:47:39.720><c> 198</c><00:47:40.440><c> here</c><00:47:40.680><c> you'll</c>

00:47:40.910 --> 00:47:40.920 align:start position:0%
you will see that 198 here you'll
 

00:47:40.920 --> 00:47:42.950 align:start position:0%
you will see that 198 here you'll
recognize<00:47:41.359><c> that</c><00:47:41.480><c> as</c><00:47:41.599><c> the</c><00:47:41.760><c> slashing</c><00:47:42.280><c> character</c>

00:47:42.950 --> 00:47:42.960 align:start position:0%
recognize that as the slashing character
 

00:47:42.960 --> 00:47:45.030 align:start position:0%
recognize that as the slashing character
so<00:47:43.119><c> that</c><00:47:43.200><c> is</c><00:47:43.280><c> a</c><00:47:43.400><c> new</c><00:47:43.640><c> line</c><00:47:44.440><c> and</c><00:47:44.559><c> then</c><00:47:44.760><c> here</c><00:47:44.880><c> for</c>

00:47:45.030 --> 00:47:45.040 align:start position:0%
so that is a new line and then here for
 

00:47:45.040 --> 00:47:46.630 align:start position:0%
so that is a new line and then here for
example<00:47:45.280><c> we</c><00:47:45.400><c> have</c><00:47:45.520><c> two</c><00:47:45.640><c> new</c><00:47:45.800><c> lines</c><00:47:46.240><c> so</c><00:47:46.440><c> that's</c>

00:47:46.630 --> 00:47:46.640 align:start position:0%
example we have two new lines so that's
 

00:47:46.640 --> 00:47:49.510 align:start position:0%
example we have two new lines so that's
198<00:47:47.280><c> twice</c><00:47:47.880><c> here</c><00:47:48.880><c> uh</c><00:47:48.960><c> so</c><00:47:49.119><c> this</c><00:47:49.200><c> is</c><00:47:49.319><c> just</c><00:47:49.440><c> a</c>

00:47:49.510 --> 00:47:49.520 align:start position:0%
198 twice here uh so this is just a
 

00:47:49.520 --> 00:47:52.549 align:start position:0%
198 twice here uh so this is just a
tokenization<00:47:50.079><c> of</c><00:47:50.240><c> the</c><00:47:50.359><c> first</c><00:47:50.680><c> 24</c><00:47:51.400><c> tokens</c><00:47:52.400><c> so</c>

00:47:52.549 --> 00:47:52.559 align:start position:0%
tokenization of the first 24 tokens so
 

00:47:52.559 --> 00:47:54.109 align:start position:0%
tokenization of the first 24 tokens so
what<00:47:52.680><c> we</c><00:47:52.760><c> want</c><00:47:52.880><c> to</c><00:47:53.000><c> do</c><00:47:53.240><c> now</c><00:47:53.520><c> is</c><00:47:53.680><c> we</c><00:47:53.800><c> want</c><00:47:53.920><c> to</c>

00:47:54.109 --> 00:47:54.119 align:start position:0%
what we want to do now is we want to
 

00:47:54.119 --> 00:47:56.870 align:start position:0%
what we want to do now is we want to
actually<00:47:54.480><c> process</c><00:47:55.000><c> these</c><00:47:55.359><c> token</c><00:47:55.839><c> sequences</c>

00:47:56.870 --> 00:47:56.880 align:start position:0%
actually process these token sequences
 

00:47:56.880 --> 00:47:59.430 align:start position:0%
actually process these token sequences
and<00:47:57.000><c> feed</c><00:47:57.280><c> them</c><00:47:57.440><c> into</c><00:47:57.760><c> a</c><00:47:58.040><c> Transformer</c><00:47:59.040><c> and</c><00:47:59.200><c> in</c>

00:47:59.430 --> 00:47:59.440 align:start position:0%
and feed them into a Transformer and in
 

00:47:59.440 --> 00:48:01.790 align:start position:0%
and feed them into a Transformer and in
particular<00:48:00.440><c> we</c><00:48:00.599><c> want</c><00:48:00.960><c> them</c><00:48:01.400><c> we</c><00:48:01.520><c> want</c><00:48:01.640><c> to</c>

00:48:01.790 --> 00:48:01.800 align:start position:0%
particular we want them we want to
 

00:48:01.800 --> 00:48:05.109 align:start position:0%
particular we want them we want to
rearrange<00:48:02.359><c> these</c><00:48:02.520><c> tokens</c><00:48:03.440><c> into</c><00:48:04.160><c> this</c><00:48:04.480><c> idx</c>

00:48:05.109 --> 00:48:05.119 align:start position:0%
rearrange these tokens into this idx
 

00:48:05.119 --> 00:48:06.309 align:start position:0%
rearrange these tokens into this idx
variable<00:48:05.559><c> that</c><00:48:05.680><c> we're</c><00:48:05.800><c> going</c><00:48:05.880><c> to</c><00:48:05.960><c> be</c><00:48:06.040><c> feeding</c>

00:48:06.309 --> 00:48:06.319 align:start position:0%
variable that we're going to be feeding
 

00:48:06.319 --> 00:48:08.270 align:start position:0%
variable that we're going to be feeding
into<00:48:06.480><c> the</c><00:48:06.599><c> Transformer</c><00:48:07.480><c> so</c><00:48:07.720><c> we</c><00:48:07.800><c> don't</c><00:48:07.960><c> want</c><00:48:08.119><c> a</c>

00:48:08.270 --> 00:48:08.280 align:start position:0%
into the Transformer so we don't want a
 

00:48:08.280 --> 00:48:10.470 align:start position:0%
into the Transformer so we don't want a
single<00:48:08.640><c> very</c><00:48:08.800><c> long</c><00:48:09.040><c> onedimensional</c><00:48:09.480><c> sequence</c>

00:48:10.470 --> 00:48:10.480 align:start position:0%
single very long onedimensional sequence
 

00:48:10.480 --> 00:48:12.950 align:start position:0%
single very long onedimensional sequence
we<00:48:10.599><c> want</c><00:48:10.800><c> an</c><00:48:10.960><c> entire</c><00:48:11.400><c> batch</c><00:48:12.400><c> where</c><00:48:12.640><c> each</c>

00:48:12.950 --> 00:48:12.960 align:start position:0%
we want an entire batch where each
 

00:48:12.960 --> 00:48:16.270 align:start position:0%
we want an entire batch where each
sequence<00:48:13.440><c> is</c><00:48:13.720><c> up</c><00:48:14.119><c> to</c><00:48:15.119><c> uh</c><00:48:15.480><c> is</c><00:48:15.640><c> basically</c><00:48:16.000><c> T</c>

00:48:16.270 --> 00:48:16.280 align:start position:0%
sequence is up to uh is basically T
 

00:48:16.280 --> 00:48:18.309 align:start position:0%
sequence is up to uh is basically T
tokens<00:48:17.000><c> and</c><00:48:17.119><c> T</c><00:48:17.400><c> cannot</c><00:48:17.640><c> be</c><00:48:17.800><c> larger</c><00:48:18.079><c> than</c><00:48:18.200><c> the</c>

00:48:18.309 --> 00:48:18.319 align:start position:0%
tokens and T cannot be larger than the
 

00:48:18.319 --> 00:48:21.150 align:start position:0%
tokens and T cannot be larger than the
maximum<00:48:18.640><c> sequence</c><00:48:19.079><c> length</c><00:48:20.079><c> and</c><00:48:20.240><c> then</c><00:48:20.400><c> we</c><00:48:20.559><c> have</c>

00:48:21.150 --> 00:48:21.160 align:start position:0%
maximum sequence length and then we have
 

00:48:21.160 --> 00:48:24.990 align:start position:0%
maximum sequence length and then we have
these<00:48:21.640><c> t</c><00:48:22.520><c> uh</c><00:48:22.680><c> tlong</c><00:48:23.680><c> uh</c><00:48:23.800><c> sequences</c><00:48:24.200><c> of</c><00:48:24.319><c> tokens</c>

00:48:24.990 --> 00:48:25.000 align:start position:0%
these t uh tlong uh sequences of tokens
 

00:48:25.000 --> 00:48:27.790 align:start position:0%
these t uh tlong uh sequences of tokens
and<00:48:25.160><c> we</c><00:48:25.280><c> have</c><00:48:25.480><c> B</c><00:48:25.800><c> independent</c><00:48:26.319><c> examples</c><00:48:27.119><c> of</c>

00:48:27.790 --> 00:48:27.800 align:start position:0%
and we have B independent examples of
 

00:48:27.800 --> 00:48:30.349 align:start position:0%
and we have B independent examples of
sequences<00:48:28.800><c> so</c><00:48:29.000><c> how</c><00:48:29.119><c> can</c><00:48:29.200><c> we</c><00:48:29.319><c> create</c><00:48:29.559><c> a</c><00:48:29.720><c> b</c><00:48:29.920><c> BYT</c>

00:48:30.349 --> 00:48:30.359 align:start position:0%
sequences so how can we create a b BYT
 

00:48:30.359 --> 00:48:32.390 align:start position:0%
sequences so how can we create a b BYT
tensor<00:48:30.839><c> that</c><00:48:30.960><c> we</c><00:48:31.040><c> can</c><00:48:31.160><c> feed</c><00:48:31.400><c> into</c><00:48:31.640><c> the</c><00:48:31.720><c> forward</c>

00:48:32.390 --> 00:48:32.400 align:start position:0%
tensor that we can feed into the forward
 

00:48:32.400 --> 00:48:34.069 align:start position:0%
tensor that we can feed into the forward
out<00:48:32.559><c> of</c><00:48:32.680><c> these</c><00:48:32.800><c> onedimensional</c>

00:48:34.069 --> 00:48:34.079 align:start position:0%
out of these onedimensional
 

00:48:34.079 --> 00:48:36.589 align:start position:0%
out of these onedimensional
sequences<00:48:35.079><c> so</c><00:48:35.240><c> here's</c><00:48:35.480><c> my</c><00:48:35.599><c> favorite</c><00:48:36.000><c> way</c><00:48:36.200><c> to</c>

00:48:36.589 --> 00:48:36.599 align:start position:0%
sequences so here's my favorite way to
 

00:48:36.599 --> 00:48:39.589 align:start position:0%
sequences so here's my favorite way to
to<00:48:36.839><c> achieve</c><00:48:37.319><c> this</c><00:48:38.319><c> uh</c><00:48:38.440><c> so</c><00:48:38.559><c> if</c><00:48:38.640><c> we</c><00:48:38.760><c> take</c><00:48:38.960><c> torch</c>

00:48:39.589 --> 00:48:39.599 align:start position:0%
to achieve this uh so if we take torch
 

00:48:39.599 --> 00:48:41.430 align:start position:0%
to achieve this uh so if we take torch
and<00:48:39.760><c> then</c><00:48:39.920><c> we</c><00:48:40.079><c> create</c><00:48:40.440><c> a</c><00:48:40.599><c> tensor</c><00:48:41.079><c> object</c><00:48:41.319><c> out</c>

00:48:41.430 --> 00:48:41.440 align:start position:0%
and then we create a tensor object out
 

00:48:41.440 --> 00:48:42.950 align:start position:0%
and then we create a tensor object out
of<00:48:41.599><c> this</c><00:48:41.720><c> list</c><00:48:41.880><c> of</c><00:48:42.000><c> integers</c><00:48:42.520><c> and</c><00:48:42.640><c> just</c><00:48:42.880><c> the</c>

00:48:42.950 --> 00:48:42.960 align:start position:0%
of this list of integers and just the
 

00:48:42.960 --> 00:48:45.710 align:start position:0%
of this list of integers and just the
first<00:48:43.200><c> 24</c><00:48:43.839><c> tokens</c><00:48:44.839><c> my</c><00:48:45.000><c> favorite</c><00:48:45.319><c> way</c><00:48:45.440><c> to</c><00:48:45.559><c> do</c>

00:48:45.710 --> 00:48:45.720 align:start position:0%
first 24 tokens my favorite way to do
 

00:48:45.720 --> 00:48:49.510 align:start position:0%
first 24 tokens my favorite way to do
this<00:48:45.880><c> is</c><00:48:46.000><c> basically</c><00:48:46.319><c> you</c><00:48:46.440><c> do</c><00:48:46.599><c> a</c><00:48:46.800><c> do</c><00:48:47.079><c> view</c><00:48:47.880><c> of</c><00:48:48.520><c> um</c>

00:48:49.510 --> 00:48:49.520 align:start position:0%
this is basically you do a do view of um
 

00:48:49.520 --> 00:48:52.870 align:start position:0%
this is basically you do a do view of um
of<00:48:50.119><c> uh</c><00:48:50.520><c> for</c><00:48:50.799><c> example</c><00:48:51.119><c> 4x6</c><00:48:52.119><c> which</c><00:48:52.280><c> multiply</c><00:48:52.720><c> to</c>

00:48:52.870 --> 00:48:52.880 align:start position:0%
of uh for example 4x6 which multiply to
 

00:48:52.880 --> 00:48:54.829 align:start position:0%
of uh for example 4x6 which multiply to
24<00:48:53.640><c> and</c><00:48:53.720><c> so</c><00:48:53.839><c> it's</c><00:48:54.000><c> just</c><00:48:54.119><c> a</c><00:48:54.280><c> two-dimensional</c>

00:48:54.829 --> 00:48:54.839 align:start position:0%
24 and so it's just a two-dimensional
 

00:48:54.839 --> 00:48:56.870 align:start position:0%
24 and so it's just a two-dimensional
rearrangement<00:48:55.359><c> of</c><00:48:55.480><c> these</c><00:48:55.640><c> tokens</c><00:48:56.319><c> and</c><00:48:56.400><c> you'll</c>

00:48:56.870 --> 00:48:56.880 align:start position:0%
rearrangement of these tokens and you'll
 

00:48:56.880 --> 00:48:57.750 align:start position:0%
rearrangement of these tokens and you'll
is<00:48:56.960><c> that</c><00:48:57.079><c> when</c><00:48:57.160><c> you</c><00:48:57.280><c> view</c><00:48:57.640><c> this</c>

00:48:57.750 --> 00:48:57.760 align:start position:0%
is that when you view this
 

00:48:57.760 --> 00:48:58.789 align:start position:0%
is that when you view this
onedimensional<00:48:58.119><c> sequence</c><00:48:58.640><c> as</c>

00:48:58.789 --> 00:48:58.799 align:start position:0%
onedimensional sequence as
 

00:48:58.799 --> 00:49:03.030 align:start position:0%
onedimensional sequence as
two-dimensional<00:48:59.799><c> 4x6</c><00:49:00.559><c> here</c><00:49:01.359><c> the</c><00:49:01.559><c> first</c><00:49:02.160><c> six</c>

00:49:03.030 --> 00:49:03.040 align:start position:0%
two-dimensional 4x6 here the first six
 

00:49:03.040 --> 00:49:06.390 align:start position:0%
two-dimensional 4x6 here the first six
uh<00:49:03.640><c> tokens</c><00:49:04.640><c> uh</c><00:49:04.839><c> up</c><00:49:04.960><c> to</c><00:49:05.280><c> here</c><00:49:05.720><c> end</c><00:49:05.920><c> up</c><00:49:06.079><c> being</c><00:49:06.280><c> the</c>

00:49:06.390 --> 00:49:06.400 align:start position:0%
uh tokens uh up to here end up being the
 

00:49:06.400 --> 00:49:09.950 align:start position:0%
uh tokens uh up to here end up being the
first<00:49:06.640><c> row</c><00:49:07.440><c> the</c><00:49:07.599><c> next</c><00:49:08.000><c> six</c><00:49:08.359><c> tokens</c><00:49:09.359><c> here</c><00:49:09.799><c> end</c>

00:49:09.950 --> 00:49:09.960 align:start position:0%
first row the next six tokens here end
 

00:49:09.960 --> 00:49:12.390 align:start position:0%
first row the next six tokens here end
up<00:49:10.119><c> being</c><00:49:10.280><c> the</c><00:49:10.400><c> second</c><00:49:10.680><c> row</c><00:49:11.200><c> and</c><00:49:11.319><c> so</c><00:49:11.520><c> on</c><00:49:12.160><c> and</c><00:49:12.240><c> so</c>

00:49:12.390 --> 00:49:12.400 align:start position:0%
up being the second row and so on and so
 

00:49:12.400 --> 00:49:14.710 align:start position:0%
up being the second row and so on and so
basically<00:49:12.839><c> it's</c><00:49:13.000><c> just</c><00:49:13.119><c> going</c><00:49:13.280><c> to</c><00:49:13.559><c> stack</c><00:49:13.920><c> up</c>

00:49:14.710 --> 00:49:14.720 align:start position:0%
basically it's just going to stack up
 

00:49:14.720 --> 00:49:18.589 align:start position:0%
basically it's just going to stack up
this<00:49:15.200><c> the</c><00:49:15.760><c> um</c><00:49:16.640><c> every</c><00:49:17.160><c> six</c><00:49:17.880><c> tokens</c><00:49:18.319><c> in</c><00:49:18.440><c> this</c>

00:49:18.589 --> 00:49:18.599 align:start position:0%
this the um every six tokens in this
 

00:49:18.599 --> 00:49:20.750 align:start position:0%
this the um every six tokens in this
case<00:49:18.839><c> as</c><00:49:19.000><c> independent</c><00:49:19.480><c> rows</c><00:49:20.119><c> and</c><00:49:20.240><c> it</c><00:49:20.359><c> creates</c>

00:49:20.750 --> 00:49:20.760 align:start position:0%
case as independent rows and it creates
 

00:49:20.760 --> 00:49:23.470 align:start position:0%
case as independent rows and it creates
a<00:49:20.960><c> batch</c><00:49:21.319><c> of</c><00:49:21.520><c> tokens</c><00:49:22.000><c> in</c><00:49:22.160><c> this</c><00:49:22.319><c> case</c><00:49:23.200><c> and</c><00:49:23.280><c> so</c>

00:49:23.470 --> 00:49:23.480 align:start position:0%
a batch of tokens in this case and so
 

00:49:23.480 --> 00:49:26.710 align:start position:0%
a batch of tokens in this case and so
for<00:49:23.640><c> example</c><00:49:24.040><c> if</c><00:49:24.119><c> we</c><00:49:24.240><c> are</c><00:49:24.680><c> token</c><00:49:25.280><c> 25</c><00:49:26.280><c> in</c><00:49:26.400><c> the</c>

00:49:26.710 --> 00:49:26.720 align:start position:0%
for example if we are token 25 in the
 

00:49:26.720 --> 00:49:28.270 align:start position:0%
for example if we are token 25 in the
Transformer<00:49:27.240><c> when</c><00:49:27.359><c> we</c><00:49:27.440><c> feed</c><00:49:27.760><c> this</c><00:49:27.880><c> in</c><00:49:28.119><c> and</c>

00:49:28.270 --> 00:49:28.280 align:start position:0%
Transformer when we feed this in and
 

00:49:28.280 --> 00:49:30.710 align:start position:0%
Transformer when we feed this in and
this<00:49:28.400><c> becomes</c><00:49:28.680><c> the</c><00:49:28.960><c> idx</c><00:49:29.960><c> this</c><00:49:30.119><c> token</c><00:49:30.440><c> is</c><00:49:30.559><c> going</c>

00:49:30.710 --> 00:49:30.720 align:start position:0%
this becomes the idx this token is going
 

00:49:30.720 --> 00:49:33.230 align:start position:0%
this becomes the idx this token is going
to<00:49:30.839><c> see</c><00:49:31.520><c> these</c><00:49:31.880><c> three</c><00:49:32.160><c> tokens</c><00:49:32.880><c> and</c><00:49:33.000><c> it's</c><00:49:33.119><c> going</c>

00:49:33.230 --> 00:49:33.240 align:start position:0%
to see these three tokens and it's going
 

00:49:33.240 --> 00:49:35.950 align:start position:0%
to see these three tokens and it's going
to<00:49:33.359><c> try</c><00:49:33.520><c> to</c><00:49:33.720><c> predict</c><00:49:34.079><c> that</c><00:49:34.240><c> 198</c><00:49:35.000><c> comes</c>

00:49:35.950 --> 00:49:35.960 align:start position:0%
to try to predict that 198 comes
 

00:49:35.960 --> 00:49:39.270 align:start position:0%
to try to predict that 198 comes
next<00:49:36.960><c> so</c><00:49:37.920><c> in</c><00:49:38.119><c> this</c><00:49:38.280><c> way</c><00:49:38.559><c> we</c><00:49:38.680><c> are</c><00:49:38.839><c> able</c><00:49:39.040><c> to</c>

00:49:39.270 --> 00:49:39.280 align:start position:0%
next so in this way we are able to
 

00:49:39.280 --> 00:49:41.150 align:start position:0%
next so in this way we are able to
create<00:49:39.599><c> this</c><00:49:39.760><c> two-dimensional</c><00:49:40.359><c> batch</c><00:49:40.880><c> that's</c>

00:49:41.150 --> 00:49:41.160 align:start position:0%
create this two-dimensional batch that's
 

00:49:41.160 --> 00:49:44.150 align:start position:0%
create this two-dimensional batch that's
that's<00:49:41.359><c> quite</c><00:49:41.599><c> nice</c><00:49:42.559><c> now</c><00:49:43.559><c> in</c><00:49:43.680><c> terms</c><00:49:43.880><c> of</c><00:49:44.000><c> the</c>

00:49:44.150 --> 00:49:44.160 align:start position:0%
that's quite nice now in terms of the
 

00:49:44.160 --> 00:49:45.670 align:start position:0%
that's quite nice now in terms of the
label<00:49:44.559><c> that</c><00:49:44.680><c> we're</c><00:49:44.799><c> going</c><00:49:44.960><c> to</c><00:49:45.119><c> need</c><00:49:45.359><c> for</c><00:49:45.520><c> the</c>

00:49:45.670 --> 00:49:45.680 align:start position:0%
label that we're going to need for the
 

00:49:45.680 --> 00:49:47.309 align:start position:0%
label that we're going to need for the
Target<00:49:46.000><c> to</c><00:49:46.200><c> calculate</c><00:49:46.520><c> the</c><00:49:46.640><c> loss</c><00:49:46.880><c> function</c>

00:49:47.309 --> 00:49:47.319 align:start position:0%
Target to calculate the loss function
 

00:49:47.319 --> 00:49:49.510 align:start position:0%
Target to calculate the loss function
how<00:49:47.440><c> do</c><00:49:47.559><c> we</c><00:49:47.680><c> get</c><00:49:47.880><c> that</c><00:49:48.760><c> well</c><00:49:48.960><c> we</c><00:49:49.079><c> could</c><00:49:49.280><c> write</c>

00:49:49.510 --> 00:49:49.520 align:start position:0%
how do we get that well we could write
 

00:49:49.520 --> 00:49:51.069 align:start position:0%
how do we get that well we could write
some<00:49:49.720><c> code</c><00:49:49.960><c> inside</c><00:49:50.200><c> the</c><00:49:50.280><c> forward</c><00:49:50.680><c> pass</c>

00:49:51.069 --> 00:49:51.079 align:start position:0%
some code inside the forward pass
 

00:49:51.079 --> 00:49:53.069 align:start position:0%
some code inside the forward pass
because<00:49:51.599><c> we</c><00:49:51.720><c> know</c><00:49:51.920><c> that</c><00:49:52.079><c> the</c><00:49:52.280><c> next</c><00:49:52.760><c> uh</c><00:49:52.839><c> token</c>

00:49:53.069 --> 00:49:53.079 align:start position:0%
because we know that the next uh token
 

00:49:53.079 --> 00:49:55.190 align:start position:0%
because we know that the next uh token
in<00:49:53.200><c> a</c><00:49:53.319><c> sequence</c><00:49:53.640><c> which</c><00:49:53.760><c> is</c><00:49:53.839><c> the</c><00:49:54.000><c> label</c><00:49:54.720><c> is</c><00:49:55.040><c> just</c>

00:49:55.190 --> 00:49:55.200 align:start position:0%
in a sequence which is the label is just
 

00:49:55.200 --> 00:49:57.349 align:start position:0%
in a sequence which is the label is just
to<00:49:55.319><c> the</c><00:49:55.480><c> right</c><00:49:55.640><c> of</c><00:49:55.760><c> us</c><00:49:56.799><c> but</c><00:49:56.920><c> you'll</c><00:49:57.079><c> notice</c>

00:49:57.349 --> 00:49:57.359 align:start position:0%
to the right of us but you'll notice
 

00:49:57.359 --> 00:49:59.910 align:start position:0%
to the right of us but you'll notice
that<00:49:57.640><c> actually</c><00:49:58.640><c> we</c><00:49:59.000><c> for</c><00:49:59.240><c> this</c><00:49:59.400><c> token</c><00:49:59.680><c> at</c><00:49:59.799><c> the</c>

00:49:59.910 --> 00:49:59.920 align:start position:0%
that actually we for this token at the
 

00:49:59.920 --> 00:50:02.230 align:start position:0%
that actually we for this token at the
very<00:50:00.119><c> end</c><00:50:00.440><c> 13</c><00:50:01.240><c> we</c><00:50:01.359><c> don't</c><00:50:01.640><c> actually</c><00:50:01.880><c> have</c><00:50:02.040><c> the</c>

00:50:02.230 --> 00:50:02.240 align:start position:0%
very end 13 we don't actually have the
 

00:50:02.240 --> 00:50:03.950 align:start position:0%
very end 13 we don't actually have the
next<00:50:02.559><c> correct</c><00:50:03.119><c> token</c><00:50:03.480><c> because</c><00:50:03.640><c> we</c><00:50:03.760><c> didn't</c>

00:50:03.950 --> 00:50:03.960 align:start position:0%
next correct token because we didn't
 

00:50:03.960 --> 00:50:07.190 align:start position:0%
next correct token because we didn't
load<00:50:04.200><c> it</c><00:50:05.160><c> so</c><00:50:05.799><c> uh</c><00:50:06.319><c> we</c><00:50:06.520><c> actually</c><00:50:06.760><c> didn't</c><00:50:07.040><c> get</c>

00:50:07.190 --> 00:50:07.200 align:start position:0%
load it so uh we actually didn't get
 

00:50:07.200 --> 00:50:09.950 align:start position:0%
load it so uh we actually didn't get
enough<00:50:07.440><c> information</c><00:50:08.319><c> here</c><00:50:09.319><c> so</c><00:50:09.480><c> I'll</c><00:50:09.640><c> show</c><00:50:09.799><c> you</c>

00:50:09.950 --> 00:50:09.960 align:start position:0%
enough information here so I'll show you
 

00:50:09.960 --> 00:50:11.910 align:start position:0%
enough information here so I'll show you
my<00:50:10.119><c> favorite</c><00:50:10.480><c> way</c><00:50:10.680><c> of</c><00:50:10.839><c> basically</c><00:50:11.559><c> getting</c>

00:50:11.910 --> 00:50:11.920 align:start position:0%
my favorite way of basically getting
 

00:50:11.920 --> 00:50:14.750 align:start position:0%
my favorite way of basically getting
these<00:50:12.359><c> batches</c><00:50:13.359><c> and</c><00:50:13.599><c> I</c><00:50:13.760><c> like</c><00:50:13.920><c> to</c><00:50:14.079><c> personally</c>

00:50:14.750 --> 00:50:14.760 align:start position:0%
these batches and I like to personally
 

00:50:14.760 --> 00:50:15.950 align:start position:0%
these batches and I like to personally
have<00:50:14.960><c> not</c><00:50:15.119><c> just</c><00:50:15.280><c> the</c><00:50:15.440><c> input</c><00:50:15.760><c> to</c><00:50:15.839><c> the</c>

00:50:15.950 --> 00:50:15.960 align:start position:0%
have not just the input to the
 

00:50:15.960 --> 00:50:18.430 align:start position:0%
have not just the input to the
Transformer<00:50:16.599><c> which</c><00:50:16.720><c> I</c><00:50:16.839><c> like</c><00:50:17.000><c> to</c><00:50:17.119><c> call</c><00:50:17.440><c> X</c><00:50:18.160><c> but</c><00:50:18.319><c> I</c>

00:50:18.430 --> 00:50:18.440 align:start position:0%
Transformer which I like to call X but I
 

00:50:18.440 --> 00:50:21.910 align:start position:0%
Transformer which I like to call X but I
also<00:50:18.640><c> like</c><00:50:18.799><c> to</c><00:50:18.920><c> create</c><00:50:19.480><c> the</c><00:50:20.040><c> labels</c><00:50:21.040><c> uh</c><00:50:21.160><c> tensor</c>

00:50:21.910 --> 00:50:21.920 align:start position:0%
also like to create the labels uh tensor
 

00:50:21.920 --> 00:50:24.630 align:start position:0%
also like to create the labels uh tensor
which<00:50:22.040><c> is</c><00:50:22.160><c> of</c><00:50:22.319><c> the</c><00:50:22.480><c> exact</c><00:50:22.839><c> same</c><00:50:23.280><c> size</c><00:50:23.720><c> as</c><00:50:23.920><c> X</c><00:50:24.480><c> but</c>

00:50:24.630 --> 00:50:24.640 align:start position:0%
which is of the exact same size as X but
 

00:50:24.640 --> 00:50:26.150 align:start position:0%
which is of the exact same size as X but
contains<00:50:25.000><c> the</c><00:50:25.119><c> targets</c><00:50:25.559><c> at</c><00:50:25.680><c> every</c><00:50:25.839><c> single</c>

00:50:26.150 --> 00:50:26.160 align:start position:0%
contains the targets at every single
 

00:50:26.160 --> 00:50:27.230 align:start position:0%
contains the targets at every single
position

00:50:27.230 --> 00:50:27.240 align:start position:0%
position
 

00:50:27.240 --> 00:50:28.589 align:start position:0%
position
and<00:50:27.359><c> so</c><00:50:27.520><c> here's</c><00:50:27.720><c> the</c><00:50:27.839><c> way</c><00:50:27.960><c> that</c><00:50:28.040><c> I</c><00:50:28.160><c> like</c><00:50:28.280><c> to</c><00:50:28.400><c> do</c>

00:50:28.589 --> 00:50:28.599 align:start position:0%
and so here's the way that I like to do
 

00:50:28.599 --> 00:50:30.470 align:start position:0%
and so here's the way that I like to do
that<00:50:29.119><c> I</c><00:50:29.240><c> like</c><00:50:29.400><c> to</c><00:50:29.480><c> make</c><00:50:29.599><c> sure</c><00:50:29.760><c> that</c><00:50:29.880><c> I</c><00:50:30.000><c> fetch</c>

00:50:30.470 --> 00:50:30.480 align:start position:0%
that I like to make sure that I fetch
 

00:50:30.480 --> 00:50:32.950 align:start position:0%
that I like to make sure that I fetch
plus<00:50:30.760><c> one</c><00:50:31.680><c> uh</c><00:50:31.839><c> token</c><00:50:32.359><c> because</c><00:50:32.559><c> we</c><00:50:32.680><c> need</c><00:50:32.839><c> the</c>

00:50:32.950 --> 00:50:32.960 align:start position:0%
plus one uh token because we need the
 

00:50:32.960 --> 00:50:35.589 align:start position:0%
plus one uh token because we need the
ground<00:50:33.200><c> Truth</c><00:50:33.440><c> for</c><00:50:33.599><c> the</c><00:50:33.760><c> very</c><00:50:34.000><c> last</c><00:50:34.520><c> token</c><00:50:35.520><c> uh</c>

00:50:35.589 --> 00:50:35.599 align:start position:0%
ground Truth for the very last token uh
 

00:50:35.599 --> 00:50:36.430 align:start position:0%
ground Truth for the very last token uh
for

00:50:36.430 --> 00:50:36.440 align:start position:0%
for
 

00:50:36.440 --> 00:50:39.109 align:start position:0%
for
13<00:50:37.440><c> and</c><00:50:37.599><c> then</c><00:50:38.079><c> when</c><00:50:38.240><c> we're</c><00:50:38.559><c> creating</c><00:50:38.960><c> the</c>

00:50:39.109 --> 00:50:39.119 align:start position:0%
13 and then when we're creating the
 

00:50:39.119 --> 00:50:41.470 align:start position:0%
13 and then when we're creating the
input<00:50:39.640><c> we</c><00:50:39.799><c> take</c><00:50:40.040><c> everything</c><00:50:40.400><c> up</c><00:50:40.559><c> to</c><00:50:41.040><c> the</c><00:50:41.200><c> last</c>

00:50:41.470 --> 00:50:41.480 align:start position:0%
input we take everything up to the last
 

00:50:41.480 --> 00:50:44.630 align:start position:0%
input we take everything up to the last
token<00:50:41.920><c> not</c><00:50:42.119><c> including</c><00:50:43.000><c> and</c><00:50:43.160><c> view</c><00:50:43.359><c> it</c><00:50:43.480><c> as</c><00:50:43.640><c> 4x6</c>

00:50:44.630 --> 00:50:44.640 align:start position:0%
token not including and view it as 4x6
 

00:50:44.640 --> 00:50:47.109 align:start position:0%
token not including and view it as 4x6
and<00:50:44.760><c> when</c><00:50:44.880><c> we're</c><00:50:45.000><c> creating</c><00:50:45.720><c> targets</c><00:50:46.720><c> we</c><00:50:46.880><c> do</c>

00:50:47.109 --> 00:50:47.119 align:start position:0%
and when we're creating targets we do
 

00:50:47.119 --> 00:50:50.349 align:start position:0%
and when we're creating targets we do
the<00:50:47.240><c> buffer</c><00:50:48.160><c> but</c><00:50:48.319><c> starting</c><00:50:48.720><c> at</c><00:50:48.960><c> index</c><00:50:49.359><c> one</c><00:50:50.119><c> not</c>

00:50:50.349 --> 00:50:50.359 align:start position:0%
the buffer but starting at index one not
 

00:50:50.359 --> 00:50:52.150 align:start position:0%
the buffer but starting at index one not
index<00:50:50.920><c> zero</c><00:50:51.280><c> so</c><00:50:51.400><c> we're</c><00:50:51.520><c> skipping</c><00:50:51.839><c> the</c><00:50:51.920><c> first</c>

00:50:52.150 --> 00:50:52.160 align:start position:0%
index zero so we're skipping the first
 

00:50:52.160 --> 00:50:54.230 align:start position:0%
index zero so we're skipping the first
element<00:50:52.839><c> and</c><00:50:52.960><c> we</c><00:50:53.119><c> view</c><00:50:53.319><c> it</c><00:50:53.440><c> in</c><00:50:53.559><c> the</c><00:50:53.680><c> exact</c><00:50:54.000><c> same</c>

00:50:54.230 --> 00:50:54.240 align:start position:0%
element and we view it in the exact same
 

00:50:54.240 --> 00:50:58.109 align:start position:0%
element and we view it in the exact same
size<00:50:55.040><c> and</c><00:50:55.160><c> then</c><00:50:55.280><c> when</c><00:50:55.400><c> I</c><00:50:55.559><c> print</c><00:50:55.880><c> this</c>

00:50:58.109 --> 00:50:58.119 align:start position:0%
size and then when I print this
 

00:50:58.119 --> 00:51:00.190 align:start position:0%
size and then when I print this
here's<00:50:58.359><c> what</c><00:50:58.520><c> happens</c><00:50:59.520><c> where</c><00:50:59.680><c> we</c><00:50:59.799><c> see</c><00:51:00.040><c> that</c>

00:51:00.190 --> 00:51:00.200 align:start position:0%
here's what happens where we see that
 

00:51:00.200 --> 00:51:02.069 align:start position:0%
here's what happens where we see that
basically<00:51:00.640><c> as</c><00:51:00.760><c> an</c><00:51:00.920><c> example</c><00:51:01.160><c> for</c><00:51:01.319><c> this</c><00:51:01.480><c> token</c>

00:51:02.069 --> 00:51:02.079 align:start position:0%
basically as an example for this token
 

00:51:02.079 --> 00:51:05.109 align:start position:0%
basically as an example for this token
25<00:51:03.079><c> its</c><00:51:03.280><c> Target</c><00:51:03.599><c> was</c><00:51:03.720><c> 198</c><00:51:04.559><c> and</c><00:51:04.760><c> that's</c><00:51:04.960><c> now</c>

00:51:05.109 --> 00:51:05.119 align:start position:0%
25 its Target was 198 and that's now
 

00:51:05.119 --> 00:51:07.190 align:start position:0%
25 its Target was 198 and that's now
just<00:51:05.280><c> stored</c><00:51:05.720><c> at</c><00:51:05.880><c> the</c><00:51:06.000><c> exact</c><00:51:06.280><c> same</c><00:51:06.520><c> position</c>

00:51:07.190 --> 00:51:07.200 align:start position:0%
just stored at the exact same position
 

00:51:07.200 --> 00:51:10.109 align:start position:0%
just stored at the exact same position
in<00:51:07.319><c> the</c><00:51:07.440><c> Target</c><00:51:07.799><c> tensor</c><00:51:08.480><c> which</c><00:51:08.599><c> is</c><00:51:08.880><c> 198</c><00:51:09.880><c> and</c>

00:51:10.109 --> 00:51:10.119 align:start position:0%
in the Target tensor which is 198 and
 

00:51:10.119 --> 00:51:13.750 align:start position:0%
in the Target tensor which is 198 and
also<00:51:10.920><c> this</c><00:51:11.119><c> last</c><00:51:11.359><c> token</c><00:51:11.720><c> 13</c><00:51:12.720><c> now</c><00:51:12.960><c> has</c><00:51:13.520><c> its</c>

00:51:13.750 --> 00:51:13.760 align:start position:0%
also this last token 13 now has its
 

00:51:13.760 --> 00:51:16.190 align:start position:0%
also this last token 13 now has its
label<00:51:14.200><c> which</c><00:51:14.319><c> is</c><00:51:14.680><c> 198</c><00:51:15.680><c> and</c><00:51:15.839><c> that's</c><00:51:16.040><c> just</c>

00:51:16.190 --> 00:51:16.200 align:start position:0%
label which is 198 and that's just
 

00:51:16.200 --> 00:51:19.430 align:start position:0%
label which is 198 and that's just
because<00:51:16.400><c> we</c><00:51:16.520><c> loaded</c><00:51:16.880><c> this</c><00:51:17.079><c> plus</c><00:51:17.319><c> one</c><00:51:18.040><c> here</c><00:51:19.040><c> so</c>

00:51:19.430 --> 00:51:19.440 align:start position:0%
because we loaded this plus one here so
 

00:51:19.440 --> 00:51:20.670 align:start position:0%
because we loaded this plus one here so
basically<00:51:19.799><c> this</c><00:51:19.880><c> is</c><00:51:20.000><c> the</c><00:51:20.079><c> way</c><00:51:20.200><c> I</c><00:51:20.319><c> like</c><00:51:20.440><c> to</c><00:51:20.559><c> do</c>

00:51:20.670 --> 00:51:20.680 align:start position:0%
basically this is the way I like to do
 

00:51:20.680 --> 00:51:24.069 align:start position:0%
basically this is the way I like to do
it<00:51:20.880><c> you</c><00:51:21.079><c> take</c><00:51:21.599><c> long</c><00:51:22.160><c> sequences</c><00:51:23.160><c> you</c><00:51:23.680><c> uh</c><00:51:23.799><c> view</c>

00:51:24.069 --> 00:51:24.079 align:start position:0%
it you take long sequences you uh view
 

00:51:24.079 --> 00:51:26.030 align:start position:0%
it you take long sequences you uh view
them<00:51:24.200><c> in</c><00:51:24.359><c> two-</c><00:51:24.520><c> dimensional</c><00:51:25.200><c> terms</c><00:51:25.760><c> so</c><00:51:25.920><c> that</c>

00:51:26.030 --> 00:51:26.040 align:start position:0%
them in two- dimensional terms so that
 

00:51:26.040 --> 00:51:29.030 align:start position:0%
them in two- dimensional terms so that
you<00:51:26.119><c> get</c><00:51:26.280><c> batch</c><00:51:26.760><c> of</c><00:51:27.079><c> time</c><00:51:28.079><c> and</c><00:51:28.280><c> then</c><00:51:28.760><c> we</c><00:51:28.920><c> make</c>

00:51:29.030 --> 00:51:29.040 align:start position:0%
you get batch of time and then we make
 

00:51:29.040 --> 00:51:31.230 align:start position:0%
you get batch of time and then we make
sure<00:51:29.200><c> to</c><00:51:29.359><c> load</c><00:51:29.640><c> one</c><00:51:29.880><c> additional</c><00:51:30.280><c> token</c><00:51:30.839><c> so</c><00:51:31.079><c> we</c>

00:51:31.230 --> 00:51:31.240 align:start position:0%
sure to load one additional token so we
 

00:51:31.240 --> 00:51:34.549 align:start position:0%
sure to load one additional token so we
basically<00:51:31.599><c> load</c><00:51:32.079><c> a</c><00:51:32.640><c> buffer</c><00:51:33.040><c> of</c><00:51:33.200><c> tokens</c><00:51:33.640><c> of</c><00:51:33.920><c> B</c><00:51:34.119><c> *</c>

00:51:34.549 --> 00:51:34.559 align:start position:0%
basically load a buffer of tokens of B *
 

00:51:34.559 --> 00:51:37.109 align:start position:0%
basically load a buffer of tokens of B *
t+<00:51:35.079><c> one</c><00:51:35.920><c> and</c><00:51:36.040><c> then</c><00:51:36.160><c> we</c><00:51:36.240><c> sort</c><00:51:36.440><c> of</c><00:51:36.599><c> offset</c><00:51:36.920><c> things</c>

00:51:37.109 --> 00:51:37.119 align:start position:0%
t+ one and then we sort of offset things
 

00:51:37.119 --> 00:51:39.230 align:start position:0%
t+ one and then we sort of offset things
and<00:51:37.280><c> view</c><00:51:37.520><c> them</c><00:51:38.160><c> and</c><00:51:38.280><c> then</c><00:51:38.400><c> we</c><00:51:38.559><c> have</c><00:51:38.920><c> two</c>

00:51:39.230 --> 00:51:39.240 align:start position:0%
and view them and then we have two
 

00:51:39.240 --> 00:51:41.030 align:start position:0%
and view them and then we have two
tensors<00:51:40.040><c> one</c><00:51:40.200><c> of</c><00:51:40.280><c> them</c><00:51:40.400><c> is</c><00:51:40.520><c> the</c><00:51:40.599><c> input</c><00:51:40.839><c> to</c><00:51:40.920><c> the</c>

00:51:41.030 --> 00:51:41.040 align:start position:0%
tensors one of them is the input to the
 

00:51:41.040 --> 00:51:43.589 align:start position:0%
tensors one of them is the input to the
Transformer<00:51:41.880><c> and</c><00:51:42.000><c> the</c><00:51:42.119><c> other</c><00:51:42.480><c> exactly</c><00:51:43.040><c> is</c><00:51:43.240><c> the</c>

00:51:43.589 --> 00:51:43.599 align:start position:0%
Transformer and the other exactly is the
 

00:51:43.599 --> 00:51:46.470 align:start position:0%
Transformer and the other exactly is the
labels<00:51:44.599><c> and</c><00:51:44.760><c> so</c><00:51:45.319><c> let's</c><00:51:45.520><c> now</c><00:51:45.720><c> reorganize</c><00:51:46.319><c> this</c>

00:51:46.470 --> 00:51:46.480 align:start position:0%
labels and so let's now reorganize this
 

00:51:46.480 --> 00:51:50.230 align:start position:0%
labels and so let's now reorganize this
code<00:51:47.359><c> and</c><00:51:48.000><c> um</c><00:51:48.960><c> create</c><00:51:49.280><c> a</c><00:51:49.440><c> very</c><00:51:49.640><c> simple</c><00:51:50.000><c> data</c>

00:51:50.230 --> 00:51:50.240 align:start position:0%
code and um create a very simple data
 

00:51:50.240 --> 00:51:52.670 align:start position:0%
code and um create a very simple data
loader<00:51:50.680><c> object</c><00:51:51.599><c> that</c><00:51:51.839><c> tries</c><00:51:52.119><c> to</c><00:51:52.359><c> basically</c>

00:51:52.670 --> 00:51:52.680 align:start position:0%
loader object that tries to basically
 

00:51:52.680 --> 00:51:55.230 align:start position:0%
loader object that tries to basically
load<00:51:52.920><c> these</c><00:51:53.079><c> tokens</c><00:51:53.720><c> and</c><00:51:54.480><c> um</c><00:51:54.720><c> feed</c><00:51:55.000><c> them</c><00:51:55.079><c> to</c>

00:51:55.230 --> 00:51:55.240 align:start position:0%
load these tokens and um feed them to
 

00:51:55.240 --> 00:51:57.190 align:start position:0%
load these tokens and um feed them to
the<00:51:55.359><c> Transformer</c><00:51:55.760><c> and</c><00:51:55.880><c> calculate</c><00:51:56.200><c> the</c><00:51:56.319><c> loss</c>

00:51:57.190 --> 00:51:57.200 align:start position:0%
the Transformer and calculate the loss
 

00:51:57.200 --> 00:51:59.349 align:start position:0%
the Transformer and calculate the loss
okay<00:51:57.319><c> so</c><00:51:57.480><c> I</c><00:51:57.640><c> reshuffled</c><00:51:58.119><c> the</c><00:51:58.240><c> code</c><00:51:58.520><c> here</c><00:51:59.000><c> uh</c>

00:51:59.349 --> 00:51:59.359 align:start position:0%
okay so I reshuffled the code here uh
 

00:51:59.359 --> 00:52:01.630 align:start position:0%
okay so I reshuffled the code here uh
accordingly<00:52:00.359><c> so</c><00:52:00.680><c> as</c><00:52:00.760><c> you</c><00:52:00.839><c> can</c><00:52:00.960><c> see</c><00:52:01.200><c> here</c><00:52:01.400><c> I'm</c>

00:52:01.630 --> 00:52:01.640 align:start position:0%
accordingly so as you can see here I'm
 

00:52:01.640 --> 00:52:05.190 align:start position:0%
accordingly so as you can see here I'm
temporarily<00:52:02.200><c> overwriting</c><00:52:03.200><c> U</c><00:52:03.359><c> to</c><00:52:03.599><c> run</c><00:52:03.799><c> a</c><00:52:04.200><c> CPU</c>

00:52:05.190 --> 00:52:05.200 align:start position:0%
temporarily overwriting U to run a CPU
 

00:52:05.200 --> 00:52:06.950 align:start position:0%
temporarily overwriting U to run a CPU
and<00:52:05.520><c> importing</c><00:52:05.920><c> TI</c><00:52:06.200><c> token</c><00:52:06.520><c> and</c><00:52:06.640><c> all</c><00:52:06.760><c> of</c><00:52:06.880><c> this</c>

00:52:06.950 --> 00:52:06.960 align:start position:0%
and importing TI token and all of this
 

00:52:06.960 --> 00:52:08.390 align:start position:0%
and importing TI token and all of this
should<00:52:07.119><c> look</c><00:52:07.280><c> familiar</c><00:52:07.720><c> we're</c><00:52:07.920><c> loading</c><00:52:08.280><c> a</c>

00:52:08.390 --> 00:52:08.400 align:start position:0%
should look familiar we're loading a
 

00:52:08.400 --> 00:52:10.710 align:start position:0%
should look familiar we're loading a
th000<00:52:08.720><c> characters</c><00:52:09.680><c> I'm</c><00:52:09.760><c> setting</c><00:52:10.079><c> BT</c><00:52:10.440><c> to</c><00:52:10.599><c> just</c>

00:52:10.710 --> 00:52:10.720 align:start position:0%
th000 characters I'm setting BT to just
 

00:52:10.720 --> 00:52:13.270 align:start position:0%
th000 characters I'm setting BT to just
be<00:52:10.920><c> 4</c><00:52:11.079><c> and</c><00:52:11.240><c> 32</c><00:52:11.799><c> right</c><00:52:11.920><c> now</c><00:52:12.240><c> just</c><00:52:12.640><c> because</c><00:52:12.880><c> we're</c>

00:52:13.270 --> 00:52:13.280 align:start position:0%
be 4 and 32 right now just because we're
 

00:52:13.280 --> 00:52:14.990 align:start position:0%
be 4 and 32 right now just because we're
debugging<00:52:14.040><c> we</c><00:52:14.160><c> just</c><00:52:14.280><c> want</c><00:52:14.400><c> to</c><00:52:14.520><c> have</c><00:52:14.640><c> a</c><00:52:14.720><c> single</c>

00:52:14.990 --> 00:52:15.000 align:start position:0%
debugging we just want to have a single
 

00:52:15.000 --> 00:52:17.470 align:start position:0%
debugging we just want to have a single
batch<00:52:15.359><c> that's</c><00:52:15.599><c> very</c><00:52:15.880><c> small</c><00:52:16.880><c> and</c><00:52:17.119><c> all</c><00:52:17.240><c> of</c><00:52:17.359><c> this</c>

00:52:17.470 --> 00:52:17.480 align:start position:0%
batch that's very small and all of this
 

00:52:17.480 --> 00:52:19.150 align:start position:0%
batch that's very small and all of this
should<00:52:17.680><c> now</c><00:52:17.880><c> look</c><00:52:18.240><c> familiar</c><00:52:18.640><c> and</c><00:52:18.760><c> follows</c>

00:52:19.150 --> 00:52:19.160 align:start position:0%
should now look familiar and follows
 

00:52:19.160 --> 00:52:21.710 align:start position:0%
should now look familiar and follows
what<00:52:19.240><c> we</c><00:52:19.319><c> did</c><00:52:19.440><c> on</c><00:52:19.559><c> the</c><00:52:19.799><c> right</c><00:52:20.799><c> and</c><00:52:20.960><c> then</c><00:52:21.200><c> here</c>

00:52:21.710 --> 00:52:21.720 align:start position:0%
what we did on the right and then here
 

00:52:21.720 --> 00:52:24.750 align:start position:0%
what we did on the right and then here
we<00:52:21.960><c> get</c><00:52:22.280><c> the</c><00:52:22.559><c> we</c><00:52:22.680><c> create</c><00:52:22.920><c> the</c><00:52:23.359><c> model</c><00:52:24.359><c> and</c><00:52:24.640><c> get</c>

00:52:24.750 --> 00:52:24.760 align:start position:0%
we get the we create the model and get
 

00:52:24.760 --> 00:52:28.069 align:start position:0%
we get the we create the model and get
the<00:52:25.040><c> lits</c><00:52:26.040><c> and</c><00:52:26.200><c> so</c><00:52:26.559><c> so</c><00:52:27.000><c> here</c><00:52:27.359><c> as</c><00:52:27.440><c> you</c><00:52:27.599><c> see</c><00:52:27.920><c> I</c>

00:52:28.069 --> 00:52:28.079 align:start position:0%
the lits and so so here as you see I
 

00:52:28.079 --> 00:52:29.990 align:start position:0%
the lits and so so here as you see I
already<00:52:28.319><c> ran</c><00:52:28.640><c> this</c><00:52:29.079><c> only</c><00:52:29.319><c> runs</c><00:52:29.559><c> in</c><00:52:29.680><c> a</c><00:52:29.799><c> few</c>

00:52:29.990 --> 00:52:30.000 align:start position:0%
already ran this only runs in a few
 

00:52:30.000 --> 00:52:32.789 align:start position:0%
already ran this only runs in a few
seconds<00:52:30.839><c> but</c><00:52:31.000><c> because</c><00:52:31.240><c> we</c><00:52:31.319><c> have</c><00:52:31.440><c> a</c><00:52:31.799><c> batch</c><00:52:32.160><c> of</c>

00:52:32.789 --> 00:52:32.799 align:start position:0%
seconds but because we have a batch of
 

00:52:32.799 --> 00:52:38.430 align:start position:0%
seconds but because we have a batch of
uh<00:52:32.920><c> 4X</c><00:52:33.520><c> 32</c><00:52:34.480><c> our</c><00:52:34.599><c> lits</c><00:52:35.000><c> are</c><00:52:35.160><c> now</c><00:52:35.359><c> of</c><00:52:35.599><c> size</c><00:52:36.200><c> 4X</c><00:52:36.760><c> 32x</c>

00:52:38.430 --> 00:52:38.440 align:start position:0%
uh 4X 32 our lits are now of size 4X 32x
 

00:52:38.440 --> 00:52:40.870 align:start position:0%
uh 4X 32 our lits are now of size 4X 32x
50257<00:52:39.440><c> so</c><00:52:39.640><c> those</c><00:52:39.799><c> are</c><00:52:40.000><c> the</c><00:52:40.119><c> lit</c><00:52:40.599><c> for</c><00:52:40.760><c> what</c>

00:52:40.870 --> 00:52:40.880 align:start position:0%
50257 so those are the lit for what
 

00:52:40.880 --> 00:52:43.670 align:start position:0%
50257 so those are the lit for what
comes<00:52:41.119><c> next</c><00:52:41.359><c> at</c><00:52:41.520><c> every</c><00:52:41.960><c> position</c><00:52:42.960><c> and</c><00:52:43.200><c> now</c><00:52:43.559><c> we</c>

00:52:43.670 --> 00:52:43.680 align:start position:0%
comes next at every position and now we
 

00:52:43.680 --> 00:52:46.270 align:start position:0%
comes next at every position and now we
have<00:52:43.839><c> the</c><00:52:44.000><c> labels</c><00:52:44.640><c> which</c><00:52:44.760><c> are</c><00:52:44.880><c> stored</c><00:52:45.200><c> in</c><00:52:45.440><c> y</c><00:52:46.079><c> so</c>

00:52:46.270 --> 00:52:46.280 align:start position:0%
have the labels which are stored in y so
 

00:52:46.280 --> 00:52:48.230 align:start position:0%
have the labels which are stored in y so
now<00:52:46.359><c> is</c><00:52:46.520><c> the</c><00:52:46.640><c> time</c><00:52:46.760><c> to</c><00:52:46.880><c> calculate</c><00:52:47.319><c> the</c><00:52:47.480><c> loss</c>

00:52:48.230 --> 00:52:48.240 align:start position:0%
now is the time to calculate the loss
 

00:52:48.240 --> 00:52:49.870 align:start position:0%
now is the time to calculate the loss
and<00:52:48.359><c> then</c><00:52:48.520><c> do</c><00:52:48.640><c> the</c><00:52:48.760><c> backward</c><00:52:49.160><c> pass</c><00:52:49.480><c> and</c><00:52:49.599><c> then</c>

00:52:49.870 --> 00:52:49.880 align:start position:0%
and then do the backward pass and then
 

00:52:49.880 --> 00:52:51.829 align:start position:0%
and then do the backward pass and then
the<00:52:49.960><c> optimization</c><00:52:50.880><c> so</c><00:52:51.160><c> let's</c><00:52:51.599><c> first</c>

00:52:51.829 --> 00:52:51.839 align:start position:0%
the optimization so let's first
 

00:52:51.839 --> 00:52:52.829 align:start position:0%
the optimization so let's first
calculate<00:52:52.200><c> the</c>

00:52:52.829 --> 00:52:52.839 align:start position:0%
calculate the
 

00:52:52.839 --> 00:52:55.270 align:start position:0%
calculate the
loss<00:52:53.839><c> okay</c><00:52:53.960><c> so</c><00:52:54.119><c> to</c><00:52:54.280><c> calculate</c><00:52:54.640><c> the</c><00:52:54.760><c> loss</c><00:52:55.119><c> we're</c>

00:52:55.270 --> 00:52:55.280 align:start position:0%
loss okay so to calculate the loss we're
 

00:52:55.280 --> 00:52:56.910 align:start position:0%
loss okay so to calculate the loss we're
going<00:52:55.440><c> to</c><00:52:55.599><c> adjust</c><00:52:55.839><c> the</c><00:52:55.920><c> forward</c><00:52:56.200><c> function</c><00:52:56.720><c> of</c>

00:52:56.910 --> 00:52:56.920 align:start position:0%
going to adjust the forward function of
 

00:52:56.920 --> 00:52:59.390 align:start position:0%
going to adjust the forward function of
this<00:52:57.119><c> NN</c><00:52:57.480><c> module</c><00:52:58.000><c> in</c><00:52:58.119><c> the</c><00:52:58.280><c> model</c><00:52:59.079><c> and</c><00:52:59.280><c> in</c>

00:52:59.390 --> 00:52:59.400 align:start position:0%
this NN module in the model and in
 

00:52:59.400 --> 00:53:00.829 align:start position:0%
this NN module in the model and in
particular<00:52:59.960><c> we're</c><00:53:00.160><c> not</c><00:53:00.319><c> just</c><00:53:00.480><c> going</c><00:53:00.599><c> to</c><00:53:00.720><c> be</c>

00:53:00.829 --> 00:53:00.839 align:start position:0%
particular we're not just going to be
 

00:53:00.839 --> 00:53:02.510 align:start position:0%
particular we're not just going to be
returning<00:53:01.200><c> logits</c><00:53:01.760><c> but</c><00:53:01.880><c> also</c><00:53:02.040><c> we're</c><00:53:02.160><c> going</c><00:53:02.240><c> to</c>

00:53:02.510 --> 00:53:02.520 align:start position:0%
returning logits but also we're going to
 

00:53:02.520 --> 00:53:04.870 align:start position:0%
returning logits but also we're going to
return<00:53:02.720><c> the</c><00:53:03.280><c> loss</c><00:53:04.280><c> uh</c><00:53:04.400><c> and</c><00:53:04.520><c> we're</c><00:53:04.640><c> going</c><00:53:04.760><c> to</c>

00:53:04.870 --> 00:53:04.880 align:start position:0%
return the loss uh and we're going to
 

00:53:04.880 --> 00:53:06.549 align:start position:0%
return the loss uh and we're going to
not<00:53:05.000><c> just</c><00:53:05.160><c> pass</c><00:53:05.359><c> in</c><00:53:05.520><c> the</c><00:53:05.640><c> input</c><00:53:05.920><c> in</c><00:53:06.079><c> thees</c><00:53:06.440><c> but</c>

00:53:06.549 --> 00:53:06.559 align:start position:0%
not just pass in the input in thees but
 

00:53:06.559 --> 00:53:12.109 align:start position:0%
not just pass in the input in thees but
also<00:53:06.760><c> the</c><00:53:06.880><c> targets</c><00:53:07.839><c> uh</c><00:53:07.960><c> in</c><00:53:08.720><c> y</c><00:53:09.720><c> and</c><00:53:10.200><c> now</c><00:53:10.559><c> we</c><00:53:11.119><c> will</c>

00:53:12.109 --> 00:53:12.119 align:start position:0%
also the targets uh in y and now we will
 

00:53:12.119 --> 00:53:14.030 align:start position:0%
also the targets uh in y and now we will
print<00:53:12.520><c> not</c><00:53:12.720><c> Lo</c><00:53:13.000><c> just.</c><00:53:13.319><c> shape</c><00:53:13.520><c> anymore</c><00:53:13.760><c> we're</c>

00:53:14.030 --> 00:53:14.040 align:start position:0%
print not Lo just. shape anymore we're
 

00:53:14.040 --> 00:53:14.910 align:start position:0%
print not Lo just. shape anymore we're
actually<00:53:14.200><c> going</c><00:53:14.319><c> to</c><00:53:14.400><c> print</c><00:53:14.559><c> the</c><00:53:14.680><c> loss</c>

00:53:14.910 --> 00:53:14.920 align:start position:0%
actually going to print the loss
 

00:53:14.920 --> 00:53:17.670 align:start position:0%
actually going to print the loss
function<00:53:15.720><c> and</c><00:53:15.839><c> then</c><00:53:16.000><c> c.</c><00:53:16.520><c> exit</c><00:53:16.920><c> of</c><00:53:17.200><c> zero</c><00:53:17.520><c> so</c>

00:53:17.670 --> 00:53:17.680 align:start position:0%
function and then c. exit of zero so
 

00:53:17.680 --> 00:53:20.150 align:start position:0%
function and then c. exit of zero so
that<00:53:17.799><c> we</c><00:53:17.920><c> skip</c><00:53:18.200><c> some</c><00:53:18.319><c> of</c><00:53:18.400><c> the</c><00:53:18.520><c> sampling</c><00:53:19.160><c> logic</c>

00:53:20.150 --> 00:53:20.160 align:start position:0%
that we skip some of the sampling logic
 

00:53:20.160 --> 00:53:21.870 align:start position:0%
that we skip some of the sampling logic
so<00:53:20.319><c> now</c><00:53:20.520><c> let's</c><00:53:20.680><c> swing</c><00:53:20.920><c> up</c><00:53:21.079><c> to</c><00:53:21.240><c> the</c><00:53:21.400><c> forward</c>

00:53:21.870 --> 00:53:21.880 align:start position:0%
so now let's swing up to the forward
 

00:53:21.880 --> 00:53:25.549 align:start position:0%
so now let's swing up to the forward
function<00:53:22.640><c> which</c><00:53:22.920><c> gets</c><00:53:23.680><c> called</c><00:53:24.599><c> there</c><00:53:25.319><c> because</c>

00:53:25.549 --> 00:53:25.559 align:start position:0%
function which gets called there because
 

00:53:25.559 --> 00:53:28.230 align:start position:0%
function which gets called there because
now<00:53:25.680><c> we</c><00:53:25.839><c> also</c><00:53:26.000><c> have</c><00:53:26.160><c> these</c><00:53:26.520><c> optional</c>

00:53:28.230 --> 00:53:28.240 align:start position:0%
now we also have these optional
 

00:53:28.240 --> 00:53:30.589 align:start position:0%
now we also have these optional
targets<00:53:29.240><c> and</c><00:53:29.520><c> when</c><00:53:29.680><c> we</c><00:53:29.839><c> get</c><00:53:29.960><c> the</c><00:53:30.079><c> targets</c><00:53:30.480><c> we</c>

00:53:30.589 --> 00:53:30.599 align:start position:0%
targets and when we get the targets we
 

00:53:30.599 --> 00:53:32.950 align:start position:0%
targets and when we get the targets we
can<00:53:30.799><c> also</c><00:53:31.119><c> calculate</c><00:53:31.960><c> uh</c><00:53:32.079><c> the</c><00:53:32.240><c> loss</c><00:53:32.839><c> and</c>

00:53:32.950 --> 00:53:32.960 align:start position:0%
can also calculate uh the loss and
 

00:53:32.960 --> 00:53:34.190 align:start position:0%
can also calculate uh the loss and
remember<00:53:33.280><c> that</c><00:53:33.359><c> we</c><00:53:33.440><c> want</c><00:53:33.559><c> to</c><00:53:33.640><c> basically</c>

00:53:34.190 --> 00:53:34.200 align:start position:0%
remember that we want to basically
 

00:53:34.200 --> 00:53:36.870 align:start position:0%
remember that we want to basically
return<00:53:35.200><c> uh</c><00:53:35.359><c> log</c><00:53:35.599><c> just</c><00:53:35.839><c> loss</c><00:53:36.240><c> and</c><00:53:36.400><c> loss</c><00:53:36.720><c> by</c>

00:53:36.870 --> 00:53:36.880 align:start position:0%
return uh log just loss and loss by
 

00:53:36.880 --> 00:53:39.270 align:start position:0%
return uh log just loss and loss by
default<00:53:37.200><c> is</c><00:53:37.640><c> none</c>

00:53:39.270 --> 00:53:39.280 align:start position:0%
default is none
 

00:53:39.280 --> 00:53:40.870 align:start position:0%
default is none
but

00:53:40.870 --> 00:53:40.880 align:start position:0%
but
 

00:53:40.880 --> 00:53:45.870 align:start position:0%
but
um<00:53:41.880><c> let's</c><00:53:42.119><c> put</c><00:53:42.280><c> this</c><00:53:42.680><c> here</c><00:53:43.680><c> if</c><00:53:44.280><c> uh</c><00:53:44.640><c> targets</c><00:53:45.640><c> is</c>

00:53:45.870 --> 00:53:45.880 align:start position:0%
um let's put this here if uh targets is
 

00:53:45.880 --> 00:53:49.589 align:start position:0%
um let's put this here if uh targets is
not<00:53:46.480><c> none</c><00:53:47.480><c> then</c><00:53:47.960><c> we</c><00:53:48.079><c> want</c><00:53:48.200><c> to</c><00:53:48.319><c> calculate</c><00:53:48.760><c> loss</c>

00:53:49.589 --> 00:53:49.599 align:start position:0%
not none then we want to calculate loss
 

00:53:49.599 --> 00:53:51.670 align:start position:0%
not none then we want to calculate loss
and<00:53:49.799><c> co-pilot</c><00:53:50.280><c> is</c><00:53:50.480><c> already</c><00:53:50.960><c> getting</c><00:53:51.280><c> excited</c>

00:53:51.670 --> 00:53:51.680 align:start position:0%
and co-pilot is already getting excited
 

00:53:51.680 --> 00:53:53.710 align:start position:0%
and co-pilot is already getting excited
here<00:53:51.880><c> and</c><00:53:52.040><c> calculating</c><00:53:52.599><c> the</c><00:53:53.280><c> what</c><00:53:53.440><c> looks</c><00:53:53.599><c> to</c>

00:53:53.710 --> 00:53:53.720 align:start position:0%
here and calculating the what looks to
 

00:53:53.720 --> 00:53:55.950 align:start position:0%
here and calculating the what looks to
be<00:53:53.880><c> correct</c><00:53:54.240><c> loss</c><00:53:54.920><c> it</c><00:53:55.040><c> is</c><00:53:55.160><c> using</c><00:53:55.480><c> the</c><00:53:55.680><c> cross</c>

00:53:55.950 --> 00:53:55.960 align:start position:0%
be correct loss it is using the cross
 

00:53:55.960 --> 00:54:00.430 align:start position:0%
be correct loss it is using the cross
entropy<00:53:56.720><c> loss</c><00:53:57.720><c> as</c><00:53:57.920><c> is</c><00:53:58.160><c> documented</c><00:53:59.079><c> here</c><00:54:00.079><c> uh</c><00:54:00.200><c> so</c>

00:54:00.430 --> 00:54:00.440 align:start position:0%
entropy loss as is documented here uh so
 

00:54:00.440 --> 00:54:03.670 align:start position:0%
entropy loss as is documented here uh so
this<00:54:00.559><c> is</c><00:54:00.839><c> a</c><00:54:01.079><c> function</c><00:54:01.359><c> in</c><00:54:01.559><c> pytorch</c><00:54:02.400><c> under</c><00:54:02.839><c> the</c>

00:54:03.670 --> 00:54:03.680 align:start position:0%
this is a function in pytorch under the
 

00:54:03.680 --> 00:54:05.789 align:start position:0%
this is a function in pytorch under the
functional<00:54:04.680><c> now</c><00:54:05.240><c> what</c><00:54:05.400><c> is</c><00:54:05.559><c> actually</c>

00:54:05.789 --> 00:54:05.799 align:start position:0%
functional now what is actually
 

00:54:05.799 --> 00:54:06.910 align:start position:0%
functional now what is actually
happening<00:54:06.119><c> here</c><00:54:06.319><c> because</c><00:54:06.480><c> it</c><00:54:06.559><c> looks</c><00:54:06.720><c> a</c><00:54:06.799><c> little</c>

00:54:06.910 --> 00:54:06.920 align:start position:0%
happening here because it looks a little
 

00:54:06.920 --> 00:54:09.589 align:start position:0%
happening here because it looks a little
bit<00:54:07.079><c> scary</c><00:54:07.920><c> uh</c><00:54:08.040><c> basically</c><00:54:08.799><c> uh</c><00:54:08.960><c> the</c><00:54:09.200><c> F</c><00:54:09.440><c> that</c>

00:54:09.589 --> 00:54:09.599 align:start position:0%
bit scary uh basically uh the F that
 

00:54:09.599 --> 00:54:10.870 align:start position:0%
bit scary uh basically uh the F that
cross<00:54:09.799><c> entropy</c><00:54:10.200><c> does</c><00:54:10.359><c> not</c><00:54:10.559><c> like</c>

00:54:10.870 --> 00:54:10.880 align:start position:0%
cross entropy does not like
 

00:54:10.880 --> 00:54:12.789 align:start position:0%
cross entropy does not like
multi-dimensional<00:54:11.599><c> inputs</c><00:54:12.000><c> it</c><00:54:12.119><c> can't</c><00:54:12.400><c> take</c><00:54:12.640><c> a</c>

00:54:12.789 --> 00:54:12.799 align:start position:0%
multi-dimensional inputs it can't take a
 

00:54:12.799 --> 00:54:15.309 align:start position:0%
multi-dimensional inputs it can't take a
b<00:54:13.040><c> BYT</c><00:54:13.440><c> by</c><00:54:13.559><c> vocap</c><00:54:14.040><c> size</c><00:54:14.680><c> so</c><00:54:14.799><c> what's</c><00:54:14.960><c> happening</c>

00:54:15.309 --> 00:54:15.319 align:start position:0%
b BYT by vocap size so what's happening
 

00:54:15.319 --> 00:54:17.750 align:start position:0%
b BYT by vocap size so what's happening
here<00:54:15.520><c> is</c><00:54:15.680><c> that</c><00:54:15.799><c> we</c><00:54:15.920><c> are</c><00:54:16.079><c> flattening</c><00:54:16.599><c> out</c><00:54:17.559><c> this</c>

00:54:17.750 --> 00:54:17.760 align:start position:0%
here is that we are flattening out this
 

00:54:17.760 --> 00:54:19.549 align:start position:0%
here is that we are flattening out this
three-dimensional<00:54:18.400><c> tensor</c><00:54:18.839><c> into</c><00:54:19.119><c> just</c><00:54:19.319><c> two</c>

00:54:19.549 --> 00:54:19.559 align:start position:0%
three-dimensional tensor into just two
 

00:54:19.559 --> 00:54:21.309 align:start position:0%
three-dimensional tensor into just two
Dimensions<00:54:20.520><c> the</c><00:54:20.599><c> First</c><00:54:20.799><c> Dimension</c><00:54:21.119><c> is</c><00:54:21.240><c> going</c>

00:54:21.309 --> 00:54:21.319 align:start position:0%
Dimensions the First Dimension is going
 

00:54:21.319 --> 00:54:23.190 align:start position:0%
Dimensions the First Dimension is going
to<00:54:21.440><c> be</c><00:54:21.599><c> calculated</c><00:54:22.160><c> automatically</c><00:54:22.960><c> and</c><00:54:23.079><c> it's</c>

00:54:23.190 --> 00:54:23.200 align:start position:0%
to be calculated automatically and it's
 

00:54:23.200 --> 00:54:26.510 align:start position:0%
to be calculated automatically and it's
going<00:54:23.280><c> to</c><00:54:23.400><c> be</c><00:54:23.680><c> B</c><00:54:23.880><c> *</c><00:54:24.440><c> T</c><00:54:25.440><c> and</c><00:54:25.599><c> then</c><00:54:26.000><c> the</c><00:54:26.400><c> last</c>

00:54:26.510 --> 00:54:26.520 align:start position:0%
going to be B * T and then the last
 

00:54:26.520 --> 00:54:28.630 align:start position:0%
going to be B * T and then the last
Dimension<00:54:26.799><c> is</c><00:54:26.920><c> vocap</c><00:54:27.359><c> size</c><00:54:28.040><c> so</c><00:54:28.200><c> basically</c>

00:54:28.630 --> 00:54:28.640 align:start position:0%
Dimension is vocap size so basically
 

00:54:28.640 --> 00:54:30.270 align:start position:0%
Dimension is vocap size so basically
this<00:54:28.799><c> is</c><00:54:29.200><c> uh</c><00:54:29.319><c> flattening</c><00:54:29.799><c> out</c><00:54:30.079><c> this</c>

00:54:30.270 --> 00:54:30.280 align:start position:0%
this is uh flattening out this
 

00:54:30.280 --> 00:54:32.630 align:start position:0%
this is uh flattening out this
three-dimensional<00:54:31.119><c> tensor</c><00:54:31.480><c> of</c><00:54:31.599><c> logits</c><00:54:32.440><c> to</c>

00:54:32.630 --> 00:54:32.640 align:start position:0%
three-dimensional tensor of logits to
 

00:54:32.640 --> 00:54:35.150 align:start position:0%
three-dimensional tensor of logits to
just<00:54:32.799><c> be</c><00:54:33.000><c> two-</c><00:54:33.200><c> dimensional</c><00:54:33.799><c> B</c><00:54:33.960><c> *</c><00:54:34.240><c> T</c><00:54:34.880><c> all</c>

00:54:35.150 --> 00:54:35.160 align:start position:0%
just be two- dimensional B * T all
 

00:54:35.160 --> 00:54:39.589 align:start position:0%
just be two- dimensional B * T all
individual<00:54:35.680><c> examples</c><00:54:36.680><c> and</c><00:54:36.960><c> vocap</c><00:54:37.400><c> size</c><00:54:38.119><c> on</c><00:54:39.119><c> uh</c>

00:54:39.589 --> 00:54:39.599 align:start position:0%
individual examples and vocap size on uh
 

00:54:39.599 --> 00:54:41.630 align:start position:0%
individual examples and vocap size on uh
in<00:54:39.720><c> terms</c><00:54:39.960><c> of</c><00:54:40.079><c> the</c><00:54:40.160><c> length</c><00:54:40.359><c> of</c><00:54:40.480><c> each</c><00:54:40.640><c> row</c><00:54:41.520><c> and</c>

00:54:41.630 --> 00:54:41.640 align:start position:0%
in terms of the length of each row and
 

00:54:41.640 --> 00:54:42.910 align:start position:0%
in terms of the length of each row and
then<00:54:41.760><c> it's</c><00:54:41.920><c> also</c><00:54:42.079><c> flattening</c><00:54:42.559><c> out</c><00:54:42.760><c> the</c>

00:54:42.910 --> 00:54:42.920 align:start position:0%
then it's also flattening out the
 

00:54:42.920 --> 00:54:44.630 align:start position:0%
then it's also flattening out the
targets<00:54:43.480><c> which</c><00:54:43.599><c> are</c><00:54:43.799><c> also</c><00:54:44.000><c> two-</c><00:54:44.200><c> dimensional</c>

00:54:44.630 --> 00:54:44.640 align:start position:0%
targets which are also two- dimensional
 

00:54:44.640 --> 00:54:46.710 align:start position:0%
targets which are also two- dimensional
at<00:54:44.760><c> this</c><00:54:44.920><c> stage</c><00:54:45.799><c> but</c><00:54:46.160><c> we're</c><00:54:46.280><c> going</c><00:54:46.400><c> to</c><00:54:46.559><c> just</c>

00:54:46.710 --> 00:54:46.720 align:start position:0%
at this stage but we're going to just
 

00:54:46.720 --> 00:54:48.190 align:start position:0%
at this stage but we're going to just
flatten<00:54:47.079><c> them</c><00:54:47.200><c> out</c><00:54:47.480><c> so</c><00:54:47.760><c> they're</c><00:54:47.960><c> just</c><00:54:48.079><c> a</c>

00:54:48.190 --> 00:54:48.200 align:start position:0%
flatten them out so they're just a
 

00:54:48.200 --> 00:54:51.069 align:start position:0%
flatten them out so they're just a
single<00:54:48.520><c> tensor</c><00:54:48.839><c> of</c><00:54:49.000><c> B</c><00:54:49.119><c> *</c><00:54:49.480><c> T</c><00:54:50.480><c> and</c><00:54:50.599><c> this</c><00:54:50.720><c> can</c><00:54:50.920><c> then</c>

00:54:51.069 --> 00:54:51.079 align:start position:0%
single tensor of B * T and this can then
 

00:54:51.079 --> 00:54:52.710 align:start position:0%
single tensor of B * T and this can then
pass<00:54:51.240><c> into</c><00:54:51.480><c> cross</c><00:54:51.680><c> entropy</c><00:54:52.079><c> to</c><00:54:52.200><c> calculate</c><00:54:52.520><c> a</c>

00:54:52.710 --> 00:54:52.720 align:start position:0%
pass into cross entropy to calculate a
 

00:54:52.720 --> 00:54:55.349 align:start position:0%
pass into cross entropy to calculate a
loss<00:54:53.040><c> which</c><00:54:53.160><c> we</c><00:54:53.520><c> return</c><00:54:54.520><c> so</c><00:54:54.839><c> this</c><00:54:55.000><c> should</c>

00:54:55.349 --> 00:54:55.359 align:start position:0%
loss which we return so this should
 

00:54:55.359 --> 00:54:57.750 align:start position:0%
loss which we return so this should
basically<00:54:56.040><c> at</c><00:54:56.480><c> this</c><00:54:56.640><c> point</c><00:54:57.000><c> run</c><00:54:57.480><c> because</c><00:54:57.680><c> this</c>

00:54:57.750 --> 00:54:57.760 align:start position:0%
basically at this point run because this
 

00:54:57.760 --> 00:54:59.870 align:start position:0%
basically at this point run because this
is<00:54:57.920><c> not</c><00:54:58.079><c> too</c><00:54:58.400><c> complicated</c>

00:54:59.870 --> 00:54:59.880 align:start position:0%
is not too complicated
 

00:54:59.880 --> 00:55:03.349 align:start position:0%
is not too complicated
so<00:55:00.880><c> let's</c><00:55:01.119><c> run</c><00:55:01.400><c> it</c><00:55:02.400><c> and</c><00:55:02.640><c> let's</c><00:55:02.880><c> see</c><00:55:03.119><c> if</c><00:55:03.240><c> we</c>

00:55:03.349 --> 00:55:03.359 align:start position:0%
so let's run it and let's see if we
 

00:55:03.359 --> 00:55:09.510 align:start position:0%
so let's run it and let's see if we
should<00:55:03.520><c> be</c><00:55:03.640><c> printing</c><00:55:03.960><c> the</c>

00:55:09.510 --> 00:55:09.520 align:start position:0%
 
 

00:55:09.520 --> 00:55:12.950 align:start position:0%
 
loss<00:55:10.520><c> and</c><00:55:10.839><c> here</c><00:55:11.000><c> we</c><00:55:11.079><c> see</c><00:55:11.280><c> that</c><00:55:11.400><c> we</c><00:55:11.520><c> printed</c><00:55:11.960><c> 11</c>

00:55:12.950 --> 00:55:12.960 align:start position:0%
loss and here we see that we printed 11
 

00:55:12.960 --> 00:55:16.030 align:start position:0%
loss and here we see that we printed 11
uh<00:55:13.160><c> roughly</c><00:55:14.119><c> and</c><00:55:14.280><c> so</c>

00:55:16.030 --> 00:55:16.040 align:start position:0%
uh roughly and so
 

00:55:16.040 --> 00:55:18.750 align:start position:0%
uh roughly and so
um<00:55:17.040><c> and</c><00:55:17.200><c> notice</c><00:55:17.480><c> that</c><00:55:17.599><c> this</c><00:55:17.720><c> is</c><00:55:17.839><c> the</c><00:55:18.040><c> tensor</c><00:55:18.599><c> of</c>

00:55:18.750 --> 00:55:18.760 align:start position:0%
um and notice that this is the tensor of
 

00:55:18.760 --> 00:55:21.630 align:start position:0%
um and notice that this is the tensor of
a<00:55:18.960><c> single</c><00:55:19.319><c> element</c><00:55:19.799><c> which</c><00:55:19.920><c> is</c><00:55:20.160><c> this</c><00:55:20.400><c> number</c><00:55:20.680><c> 11</c>

00:55:21.630 --> 00:55:21.640 align:start position:0%
a single element which is this number 11
 

00:55:21.640 --> 00:55:23.190 align:start position:0%
a single element which is this number 11
now<00:55:21.839><c> we</c><00:55:21.960><c> also</c><00:55:22.119><c> want</c><00:55:22.200><c> to</c><00:55:22.319><c> be</c><00:55:22.440><c> able</c><00:55:22.599><c> to</c><00:55:22.720><c> calculate</c>

00:55:23.190 --> 00:55:23.200 align:start position:0%
now we also want to be able to calculate
 

00:55:23.200 --> 00:55:25.750 align:start position:0%
now we also want to be able to calculate
a<00:55:23.680><c> reasonable</c><00:55:24.680><c> uh</c><00:55:24.839><c> kind</c><00:55:24.960><c> of</c><00:55:25.160><c> starting</c><00:55:25.520><c> point</c>

00:55:25.750 --> 00:55:25.760 align:start position:0%
a reasonable uh kind of starting point
 

00:55:25.760 --> 00:55:27.910 align:start position:0%
a reasonable uh kind of starting point
for<00:55:25.920><c> a</c><00:55:26.039><c> random</c><00:55:26.319><c> rationalized</c><00:55:26.960><c> Network</c><00:55:27.640><c> so</c><00:55:27.799><c> we</c>

00:55:27.910 --> 00:55:27.920 align:start position:0%
for a random rationalized Network so we
 

00:55:27.920 --> 00:55:29.870 align:start position:0%
for a random rationalized Network so we
covered<00:55:28.200><c> this</c><00:55:28.319><c> in</c><00:55:28.480><c> previous</c><00:55:28.799><c> videos</c><00:55:29.200><c> but</c><00:55:29.640><c> our</c>

00:55:29.870 --> 00:55:29.880 align:start position:0%
covered this in previous videos but our
 

00:55:29.880 --> 00:55:31.870 align:start position:0%
covered this in previous videos but our
vocabulary<00:55:30.400><c> size</c><00:55:30.599><c> is</c>

00:55:31.870 --> 00:55:31.880 align:start position:0%
vocabulary size is
 

00:55:31.880 --> 00:55:34.390 align:start position:0%
vocabulary size is
50257<00:55:32.880><c> at</c><00:55:33.039><c> initialization</c><00:55:33.680><c> of</c><00:55:33.760><c> the</c><00:55:33.880><c> network</c>

00:55:34.390 --> 00:55:34.400 align:start position:0%
50257 at initialization of the network
 

00:55:34.400 --> 00:55:37.870 align:start position:0%
50257 at initialization of the network
you<00:55:34.520><c> would</c><00:55:34.760><c> hope</c><00:55:35.599><c> that</c><00:55:36.280><c> um</c><00:55:36.599><c> every</c><00:55:37.359><c> vocab</c>

00:55:37.870 --> 00:55:37.880 align:start position:0%
you would hope that um every vocab
 

00:55:37.880 --> 00:55:40.670 align:start position:0%
you would hope that um every vocab
element<00:55:38.520><c> is</c><00:55:38.680><c> getting</c><00:55:39.039><c> roughly</c><00:55:39.480><c> a</c><00:55:39.680><c> uniform</c>

00:55:40.670 --> 00:55:40.680 align:start position:0%
element is getting roughly a uniform
 

00:55:40.680 --> 00:55:42.549 align:start position:0%
element is getting roughly a uniform
probability<00:55:41.680><c> uh</c><00:55:41.760><c> so</c><00:55:42.000><c> that</c><00:55:42.200><c> we're</c><00:55:42.400><c> not</c>

00:55:42.549 --> 00:55:42.559 align:start position:0%
probability uh so that we're not
 

00:55:42.559 --> 00:55:45.549 align:start position:0%
probability uh so that we're not
favoring<00:55:43.039><c> at</c><00:55:43.280><c> initialization</c><00:55:44.240><c> any</c><00:55:44.480><c> token</c><00:55:45.400><c> way</c>

00:55:45.549 --> 00:55:45.559 align:start position:0%
favoring at initialization any token way
 

00:55:45.559 --> 00:55:47.789 align:start position:0%
favoring at initialization any token way
too<00:55:45.760><c> much</c><00:55:46.079><c> we're</c><00:55:46.240><c> not</c><00:55:46.440><c> confidently</c><00:55:46.880><c> wrong</c><00:55:47.319><c> at</c>

00:55:47.789 --> 00:55:47.799 align:start position:0%
too much we're not confidently wrong at
 

00:55:47.799 --> 00:55:49.549 align:start position:0%
too much we're not confidently wrong at
initialization<00:55:48.799><c> so</c><00:55:48.960><c> what</c><00:55:49.039><c> we're</c><00:55:49.240><c> hoping</c><00:55:49.480><c> is</c>

00:55:49.549 --> 00:55:49.559 align:start position:0%
initialization so what we're hoping is
 

00:55:49.559 --> 00:55:51.029 align:start position:0%
initialization so what we're hoping is
that<00:55:49.680><c> the</c><00:55:49.799><c> probability</c><00:55:50.280><c> of</c><00:55:50.440><c> any</c><00:55:50.599><c> arbitrary</c>

00:55:51.029 --> 00:55:51.039 align:start position:0%
that the probability of any arbitrary
 

00:55:51.039 --> 00:55:55.349 align:start position:0%
that the probability of any arbitrary
token<00:55:51.280><c> is</c><00:55:51.520><c> roughly</c><00:55:52.520><c> 1</c><00:55:52.799><c> over</c><00:55:53.079><c> 50,2</c><00:55:54.079><c> 57</c><00:55:55.079><c> and</c><00:55:55.200><c> now</c>

00:55:55.349 --> 00:55:55.359 align:start position:0%
token is roughly 1 over 50,2 57 and now
 

00:55:55.359 --> 00:55:57.549 align:start position:0%
token is roughly 1 over 50,2 57 and now
we<00:55:55.480><c> can</c><00:55:55.680><c> sanity</c><00:55:56.319><c> check</c><00:55:56.520><c> the</c><00:55:56.640><c> loss</c><00:55:57.319><c> because</c>

00:55:57.549 --> 00:55:57.559 align:start position:0%
we can sanity check the loss because
 

00:55:57.559 --> 00:55:59.309 align:start position:0%
we can sanity check the loss because
remember<00:55:57.839><c> that</c><00:55:57.920><c> the</c><00:55:58.039><c> cross</c><00:55:58.240><c> entropy</c><00:55:58.680><c> loss</c><00:55:59.200><c> is</c>

00:55:59.309 --> 00:55:59.319 align:start position:0%
remember that the cross entropy loss is
 

00:55:59.319 --> 00:56:01.589 align:start position:0%
remember that the cross entropy loss is
just<00:55:59.480><c> basically</c><00:55:59.880><c> the</c><00:56:00.039><c> negative</c><00:56:00.880><c> um</c><00:56:01.160><c> log</c>

00:56:01.589 --> 00:56:01.599 align:start position:0%
just basically the negative um log
 

00:56:01.599 --> 00:56:04.510 align:start position:0%
just basically the negative um log
likelihood<00:56:02.599><c> so</c><00:56:02.960><c> if</c><00:56:03.119><c> we</c><00:56:03.319><c> now</c><00:56:03.599><c> take</c><00:56:04.160><c> this</c>

00:56:04.510 --> 00:56:04.520 align:start position:0%
likelihood so if we now take this
 

00:56:04.520 --> 00:56:06.349 align:start position:0%
likelihood so if we now take this
probability<00:56:05.520><c> and</c><00:56:05.640><c> we</c><00:56:05.799><c> take</c><00:56:05.920><c> it</c><00:56:06.039><c> through</c><00:56:06.240><c> the</c>

00:56:06.349 --> 00:56:06.359 align:start position:0%
probability and we take it through the
 

00:56:06.359 --> 00:56:08.910 align:start position:0%
probability and we take it through the
natural<00:56:07.079><c> logarithm</c><00:56:08.079><c> and</c><00:56:08.240><c> then</c><00:56:08.359><c> we</c><00:56:08.480><c> do</c><00:56:08.640><c> the</c>

00:56:08.910 --> 00:56:08.920 align:start position:0%
natural logarithm and then we do the
 

00:56:08.920 --> 00:56:11.589 align:start position:0%
natural logarithm and then we do the
negative<00:56:09.920><c> that</c><00:56:10.039><c> is</c><00:56:10.200><c> the</c><00:56:10.400><c> loss</c><00:56:10.839><c> we</c><00:56:11.039><c> expect</c><00:56:11.400><c> at</c>

00:56:11.589 --> 00:56:11.599 align:start position:0%
negative that is the loss we expect at
 

00:56:11.599 --> 00:56:13.270 align:start position:0%
negative that is the loss we expect at
initialization<00:56:12.520><c> and</c><00:56:12.599><c> we</c><00:56:12.760><c> covered</c><00:56:13.039><c> this</c><00:56:13.119><c> in</c>

00:56:13.270 --> 00:56:13.280 align:start position:0%
initialization and we covered this in
 

00:56:13.280 --> 00:56:15.390 align:start position:0%
initialization and we covered this in
previous<00:56:13.599><c> videos</c><00:56:14.559><c> so</c><00:56:14.839><c> I</c><00:56:14.920><c> would</c><00:56:15.119><c> expect</c>

00:56:15.390 --> 00:56:15.400 align:start position:0%
previous videos so I would expect
 

00:56:15.400 --> 00:56:17.670 align:start position:0%
previous videos so I would expect
something<00:56:15.720><c> around</c><00:56:16.160><c> 10.82</c><00:56:17.160><c> and</c><00:56:17.240><c> we're</c><00:56:17.400><c> seeing</c>

00:56:17.670 --> 00:56:17.680 align:start position:0%
something around 10.82 and we're seeing
 

00:56:17.680 --> 00:56:20.029 align:start position:0%
something around 10.82 and we're seeing
something<00:56:17.920><c> around</c><00:56:18.160><c> 11</c><00:56:18.799><c> so</c><00:56:19.000><c> it's</c><00:56:19.160><c> not</c><00:56:19.400><c> way</c><00:56:19.640><c> off</c>

00:56:20.029 --> 00:56:20.039 align:start position:0%
something around 11 so it's not way off
 

00:56:20.039 --> 00:56:21.870 align:start position:0%
something around 11 so it's not way off
this<00:56:20.160><c> is</c><00:56:20.480><c> roughly</c><00:56:20.880><c> the</c><00:56:21.039><c> probability</c><00:56:21.400><c> I</c><00:56:21.559><c> expect</c>

00:56:21.870 --> 00:56:21.880 align:start position:0%
this is roughly the probability I expect
 

00:56:21.880 --> 00:56:24.349 align:start position:0%
this is roughly the probability I expect
at<00:56:22.319><c> initialization</c><00:56:23.319><c> so</c><00:56:23.520><c> that</c><00:56:23.640><c> tells</c><00:56:23.880><c> me</c><00:56:24.119><c> that</c>

00:56:24.349 --> 00:56:24.359 align:start position:0%
at initialization so that tells me that
 

00:56:24.359 --> 00:56:26.270 align:start position:0%
at initialization so that tells me that
the<00:56:24.520><c> at</c><00:56:24.720><c> initialization</c><00:56:25.480><c> or</c><00:56:25.720><c> probability</c>

00:56:26.270 --> 00:56:26.280 align:start position:0%
the at initialization or probability
 

00:56:26.280 --> 00:56:27.910 align:start position:0%
the at initialization or probability
distribtion<00:56:26.559><c> is</c><00:56:26.720><c> roughly</c><00:56:27.000><c> diffused</c><00:56:27.680><c> it's</c><00:56:27.799><c> a</c>

00:56:27.910 --> 00:56:27.920 align:start position:0%
distribtion is roughly diffused it's a
 

00:56:27.920 --> 00:56:30.670 align:start position:0%
distribtion is roughly diffused it's a
good<00:56:28.079><c> starting</c><00:56:28.440><c> point</c><00:56:28.960><c> and</c><00:56:29.079><c> we</c><00:56:29.200><c> can</c><00:56:29.400><c> now</c><00:56:30.400><c> uh</c>

00:56:30.670 --> 00:56:30.680 align:start position:0%
good starting point and we can now uh
 

00:56:30.680 --> 00:56:32.589 align:start position:0%
good starting point and we can now uh
perform<00:56:30.960><c> the</c><00:56:31.160><c> optimization</c><00:56:31.960><c> and</c><00:56:32.240><c> tell</c><00:56:32.480><c> the</c>

00:56:32.589 --> 00:56:32.599 align:start position:0%
perform the optimization and tell the
 

00:56:32.599 --> 00:56:34.589 align:start position:0%
perform the optimization and tell the
network<00:56:33.000><c> which</c><00:56:33.200><c> elements</c><00:56:34.039><c> you</c><00:56:34.160><c> know</c><00:56:34.359><c> should</c>

00:56:34.589 --> 00:56:34.599 align:start position:0%
network which elements you know should
 

00:56:34.599 --> 00:56:37.270 align:start position:0%
network which elements you know should
follow<00:56:34.880><c> correctly</c><00:56:35.240><c> in</c><00:56:35.359><c> what</c><00:56:35.839><c> order</c><00:56:36.839><c> so</c><00:56:37.160><c> at</c>

00:56:37.270 --> 00:56:37.280 align:start position:0%
follow correctly in what order so at
 

00:56:37.280 --> 00:56:39.270 align:start position:0%
follow correctly in what order so at
this<00:56:37.400><c> point</c><00:56:37.599><c> we</c><00:56:37.680><c> can</c><00:56:37.799><c> do</c><00:56:37.960><c> a</c><00:56:38.240><c> l</c><00:56:38.559><c> step</c><00:56:38.760><c> backward</c>

00:56:39.270 --> 00:56:39.280 align:start position:0%
this point we can do a l step backward
 

00:56:39.280 --> 00:56:40.430 align:start position:0%
this point we can do a l step backward
calculate<00:56:39.599><c> the</c><00:56:39.720><c> gradients</c><00:56:40.119><c> and</c><00:56:40.240><c> do</c><00:56:40.359><c> an</c>

00:56:40.430 --> 00:56:40.440 align:start position:0%
calculate the gradients and do an
 

00:56:40.440 --> 00:56:43.069 align:start position:0%
calculate the gradients and do an
optimization<00:56:41.359><c> so</c><00:56:41.599><c> let's</c><00:56:41.760><c> get</c><00:56:41.880><c> to</c><00:56:42.079><c> that</c><00:56:42.920><c> okay</c>

00:56:43.069 --> 00:56:43.079 align:start position:0%
optimization so let's get to that okay
 

00:56:43.079 --> 00:56:46.630 align:start position:0%
optimization so let's get to that okay
so<00:56:43.280><c> let's</c><00:56:43.559><c> do</c><00:56:43.720><c> the</c><00:56:43.880><c> optimization</c><00:56:44.760><c> now</c><00:56:45.760><c> um</c><00:56:46.039><c> so</c>

00:56:46.630 --> 00:56:46.640 align:start position:0%
so let's do the optimization now um so
 

00:56:46.640 --> 00:56:47.950 align:start position:0%
so let's do the optimization now um so
here<00:56:46.839><c> we</c>

00:56:47.950 --> 00:56:47.960 align:start position:0%
here we
 

00:56:47.960 --> 00:56:51.150 align:start position:0%
here we
have<00:56:48.960><c> the</c><00:56:49.119><c> loss</c><00:56:49.880><c> is</c><00:56:50.160><c> this</c><00:56:50.319><c> is</c><00:56:50.440><c> how</c><00:56:50.559><c> we</c><00:56:50.680><c> get</c><00:56:50.799><c> the</c>

00:56:51.150 --> 00:56:51.160 align:start position:0%
have the loss is this is how we get the
 

00:56:51.160 --> 00:56:53.470 align:start position:0%
have the loss is this is how we get the
loss<00:56:52.160><c> but</c><00:56:52.319><c> now</c><00:56:52.520><c> basically</c><00:56:52.880><c> we</c><00:56:52.960><c> want</c><00:56:53.119><c> a</c><00:56:53.200><c> load</c>

00:56:53.470 --> 00:56:53.480 align:start position:0%
loss but now basically we want a load
 

00:56:53.480 --> 00:56:55.870 align:start position:0%
loss but now basically we want a load
for<00:56:53.680><c> Loop</c><00:56:53.880><c> here</c><00:56:54.000><c> so</c><00:56:54.160><c> 4</c><00:56:54.440><c> I</c><00:56:54.760><c> in</c><00:56:55.000><c> range</c><00:56:55.520><c> let's</c><00:56:55.720><c> do</c>

00:56:55.870 --> 00:56:55.880 align:start position:0%
for Loop here so 4 I in range let's do
 

00:56:55.880 --> 00:56:58.190 align:start position:0%
for Loop here so 4 I in range let's do
50<00:56:56.280><c> steps</c><00:56:56.520><c> or</c><00:56:56.680><c> something</c><00:56:56.920><c> like</c><00:56:57.119><c> that</c><00:56:57.839><c> uh</c><00:56:57.960><c> let's</c>

00:56:58.190 --> 00:56:58.200 align:start position:0%
50 steps or something like that uh let's
 

00:56:58.200 --> 00:57:00.589 align:start position:0%
50 steps or something like that uh let's
create<00:56:58.480><c> an</c><00:56:58.680><c> Optimizer</c><00:56:59.319><c> object</c><00:56:59.760><c> in</c>

00:57:00.589 --> 00:57:00.599 align:start position:0%
create an Optimizer object in
 

00:57:00.599 --> 00:57:04.430 align:start position:0%
create an Optimizer object in
pytorch<00:57:01.599><c> um</c><00:57:02.520><c> and</c><00:57:02.680><c> so</c><00:57:03.280><c> here</c><00:57:03.480><c> we</c><00:57:03.599><c> are</c><00:57:03.760><c> using</c><00:57:04.119><c> the</c>

00:57:04.430 --> 00:57:04.440 align:start position:0%
pytorch um and so here we are using the
 

00:57:04.440 --> 00:57:07.309 align:start position:0%
pytorch um and so here we are using the
atom<00:57:05.359><c> um</c><00:57:06.280><c> Optimizer</c><00:57:06.960><c> which</c><00:57:07.079><c> is</c><00:57:07.160><c> an</c>

00:57:07.309 --> 00:57:07.319 align:start position:0%
atom um Optimizer which is an
 

00:57:07.319 --> 00:57:08.829 align:start position:0%
atom um Optimizer which is an
alternative<00:57:07.799><c> to</c><00:57:07.920><c> the</c><00:57:08.000><c> stochastic</c><00:57:08.480><c> radian</c>

00:57:08.829 --> 00:57:08.839 align:start position:0%
alternative to the stochastic radian
 

00:57:08.839 --> 00:57:11.349 align:start position:0%
alternative to the stochastic radian
descent<00:57:09.359><c> Optimizer</c><00:57:09.880><c> SGD</c><00:57:10.400><c> that</c><00:57:10.520><c> we</c><00:57:10.599><c> were</c><00:57:10.760><c> using</c>

00:57:11.349 --> 00:57:11.359 align:start position:0%
descent Optimizer SGD that we were using
 

00:57:11.359 --> 00:57:13.150 align:start position:0%
descent Optimizer SGD that we were using
so<00:57:11.520><c> SGD</c><00:57:11.880><c> is</c><00:57:11.960><c> a</c><00:57:12.039><c> lot</c><00:57:12.240><c> simpler</c><00:57:12.599><c> atom</c><00:57:12.839><c> is</c><00:57:12.960><c> a</c><00:57:13.039><c> bit</c>

00:57:13.150 --> 00:57:13.160 align:start position:0%
so SGD is a lot simpler atom is a bit
 

00:57:13.160 --> 00:57:14.470 align:start position:0%
so SGD is a lot simpler atom is a bit
more<00:57:13.319><c> involved</c><00:57:13.920><c> and</c><00:57:14.039><c> I</c><00:57:14.160><c> actually</c>

00:57:14.470 --> 00:57:14.480 align:start position:0%
more involved and I actually
 

00:57:14.480 --> 00:57:17.309 align:start position:0%
more involved and I actually
specifically<00:57:14.960><c> like</c><00:57:15.160><c> the</c><00:57:15.319><c> atom</c><00:57:15.680><c> W</c><00:57:16.400><c> variation</c>

00:57:17.309 --> 00:57:17.319 align:start position:0%
specifically like the atom W variation
 

00:57:17.319 --> 00:57:19.109 align:start position:0%
specifically like the atom W variation
because<00:57:17.799><c> in</c><00:57:17.960><c> my</c><00:57:18.240><c> opinion</c><00:57:18.599><c> it</c><00:57:18.760><c> kind</c><00:57:18.880><c> of</c><00:57:19.000><c> just</c>

00:57:19.109 --> 00:57:19.119 align:start position:0%
because in my opinion it kind of just
 

00:57:19.119 --> 00:57:22.510 align:start position:0%
because in my opinion it kind of just
like<00:57:19.280><c> fixes</c><00:57:19.599><c> a</c><00:57:20.079><c> bug</c><00:57:21.079><c> um</c><00:57:21.240><c> so</c><00:57:21.440><c> adom</c><00:57:21.720><c> w</c><00:57:22.000><c> is</c><00:57:22.079><c> a</c><00:57:22.200><c> bug</c>

00:57:22.510 --> 00:57:22.520 align:start position:0%
like fixes a bug um so adom w is a bug
 

00:57:22.520 --> 00:57:25.150 align:start position:0%
like fixes a bug um so adom w is a bug
fix<00:57:22.760><c> of</c><00:57:22.960><c> atom</c><00:57:23.480><c> is</c><00:57:23.680><c> what</c><00:57:23.799><c> I</c><00:57:23.920><c> would</c><00:57:24.119><c> say</c><00:57:24.880><c> when</c><00:57:25.000><c> we</c>

00:57:25.150 --> 00:57:25.160 align:start position:0%
fix of atom is what I would say when we
 

00:57:25.160 --> 00:57:27.109 align:start position:0%
fix of atom is what I would say when we
go<00:57:25.240><c> to</c><00:57:25.359><c> the</c><00:57:25.520><c> documentation</c><00:57:25.960><c> for</c><00:57:26.240><c> atom</c>

00:57:27.109 --> 00:57:27.119 align:start position:0%
go to the documentation for atom
 

00:57:27.119 --> 00:57:29.270 align:start position:0%
go to the documentation for atom
W<00:57:28.119><c> oh</c><00:57:28.240><c> my</c>

00:57:29.270 --> 00:57:29.280 align:start position:0%
W oh my
 

00:57:29.280 --> 00:57:32.630 align:start position:0%
W oh my
gosh<00:57:30.280><c> we</c><00:57:30.440><c> see</c><00:57:31.280><c> um</c><00:57:31.880><c> that</c><00:57:32.000><c> it</c><00:57:32.079><c> takes</c><00:57:32.280><c> a</c><00:57:32.359><c> bunch</c><00:57:32.520><c> of</c>

00:57:32.630 --> 00:57:32.640 align:start position:0%
gosh we see um that it takes a bunch of
 

00:57:32.640 --> 00:57:33.990 align:start position:0%
gosh we see um that it takes a bunch of
hyper<00:57:32.880><c> parameters</c><00:57:33.319><c> and</c><00:57:33.400><c> it's</c><00:57:33.640><c> a</c><00:57:33.720><c> little</c><00:57:33.839><c> bit</c>

00:57:33.990 --> 00:57:34.000 align:start position:0%
hyper parameters and it's a little bit
 

00:57:34.000 --> 00:57:35.470 align:start position:0%
hyper parameters and it's a little bit
more<00:57:34.200><c> complicated</c><00:57:34.599><c> than</c><00:57:34.720><c> the</c><00:57:34.839><c> SGD</c><00:57:35.280><c> we</c><00:57:35.359><c> were</c>

00:57:35.470 --> 00:57:35.480 align:start position:0%
more complicated than the SGD we were
 

00:57:35.480 --> 00:57:37.750 align:start position:0%
more complicated than the SGD we were
looking<00:57:35.720><c> at</c><00:57:36.000><c> before</c><00:57:36.960><c> uh</c><00:57:37.079><c> because</c><00:57:37.319><c> in</c><00:57:37.440><c> addition</c>

00:57:37.750 --> 00:57:37.760 align:start position:0%
looking at before uh because in addition
 

00:57:37.760 --> 00:57:39.750 align:start position:0%
looking at before uh because in addition
to<00:57:38.000><c> basically</c><00:57:38.799><c> updating</c><00:57:39.200><c> the</c><00:57:39.319><c> parameters</c>

00:57:39.750 --> 00:57:39.760 align:start position:0%
to basically updating the parameters
 

00:57:39.760 --> 00:57:41.349 align:start position:0%
to basically updating the parameters
with<00:57:39.920><c> the</c><00:57:40.039><c> gradient</c><00:57:40.680><c> uh</c><00:57:40.760><c> scaled</c><00:57:41.160><c> by</c><00:57:41.280><c> the</c>

00:57:41.349 --> 00:57:41.359 align:start position:0%
with the gradient uh scaled by the
 

00:57:41.359 --> 00:57:43.549 align:start position:0%
with the gradient uh scaled by the
Learning<00:57:41.680><c> rate</c><00:57:42.359><c> it</c><00:57:42.520><c> keeps</c><00:57:42.880><c> these</c><00:57:43.079><c> buffers</c>

00:57:43.549 --> 00:57:43.559 align:start position:0%
Learning rate it keeps these buffers
 

00:57:43.559 --> 00:57:46.230 align:start position:0%
Learning rate it keeps these buffers
around<00:57:44.079><c> and</c><00:57:44.160><c> it</c><00:57:44.319><c> keeps</c><00:57:44.559><c> two</c><00:57:44.799><c> buffers</c><00:57:45.680><c> the</c><00:57:45.839><c> m</c>

00:57:46.230 --> 00:57:46.240 align:start position:0%
around and it keeps two buffers the m
 

00:57:46.240 --> 00:57:48.109 align:start position:0%
around and it keeps two buffers the m
and<00:57:46.400><c> the</c><00:57:46.559><c> V</c><00:57:47.000><c> which</c><00:57:47.119><c> it</c><00:57:47.280><c> calls</c><00:57:47.559><c> the</c><00:57:47.680><c> first</c><00:57:47.960><c> and</c>

00:57:48.109 --> 00:57:48.119 align:start position:0%
and the V which it calls the first and
 

00:57:48.119 --> 00:57:49.950 align:start position:0%
and the V which it calls the first and
the<00:57:48.240><c> second</c><00:57:48.520><c> moment</c><00:57:49.359><c> so</c><00:57:49.559><c> something</c><00:57:49.839><c> that</c>

00:57:49.950 --> 00:57:49.960 align:start position:0%
the second moment so something that
 

00:57:49.960 --> 00:57:51.549 align:start position:0%
the second moment so something that
looks<00:57:50.200><c> a</c><00:57:50.319><c> bit</c><00:57:50.480><c> like</c><00:57:50.680><c> momentum</c><00:57:51.200><c> and</c><00:57:51.319><c> something</c>

00:57:51.549 --> 00:57:51.559 align:start position:0%
looks a bit like momentum and something
 

00:57:51.559 --> 00:57:53.589 align:start position:0%
looks a bit like momentum and something
that<00:57:51.680><c> looks</c><00:57:51.880><c> a</c><00:57:52.000><c> bit</c><00:57:52.160><c> like</c><00:57:52.319><c> RMS</c><00:57:52.760><c> prop</c><00:57:53.160><c> if</c><00:57:53.280><c> you're</c>

00:57:53.589 --> 00:57:53.599 align:start position:0%
that looks a bit like RMS prop if you're
 

00:57:53.599 --> 00:57:55.349 align:start position:0%
that looks a bit like RMS prop if you're
familiar<00:57:54.039><c> with</c><00:57:54.160><c> it</c><00:57:54.720><c> but</c><00:57:54.839><c> you</c><00:57:54.960><c> don't</c><00:57:55.119><c> have</c><00:57:55.240><c> to</c>

00:57:55.349 --> 00:57:55.359 align:start position:0%
familiar with it but you don't have to
 

00:57:55.359 --> 00:57:57.309 align:start position:0%
familiar with it but you don't have to
be<00:57:55.559><c> it's</c><00:57:55.720><c> just</c><00:57:55.839><c> kind</c><00:57:55.920><c> of</c><00:57:56.280><c> a</c><00:57:56.440><c> normalization</c>

00:57:57.309 --> 00:57:57.319 align:start position:0%
be it's just kind of a normalization
 

00:57:57.319 --> 00:57:58.990 align:start position:0%
be it's just kind of a normalization
that<00:57:57.440><c> happens</c><00:57:57.799><c> on</c><00:57:57.960><c> each</c><00:57:58.160><c> gradient</c><00:57:58.559><c> element</c>

00:57:58.990 --> 00:57:59.000 align:start position:0%
that happens on each gradient element
 

00:57:59.000 --> 00:58:00.950 align:start position:0%
that happens on each gradient element
individually<00:58:00.000><c> and</c><00:58:00.319><c> speeds</c><00:58:00.680><c> up</c><00:58:00.839><c> the</c>

00:58:00.950 --> 00:58:00.960 align:start position:0%
individually and speeds up the
 

00:58:00.960 --> 00:58:02.589 align:start position:0%
individually and speeds up the
optimization<00:58:01.720><c> especially</c><00:58:02.079><c> for</c><00:58:02.280><c> language</c>

00:58:02.589 --> 00:58:02.599 align:start position:0%
optimization especially for language
 

00:58:02.599 --> 00:58:04.270 align:start position:0%
optimization especially for language
models<00:58:03.280><c> but</c><00:58:03.400><c> I'm</c><00:58:03.520><c> not</c><00:58:03.640><c> going</c><00:58:03.760><c> to</c><00:58:03.880><c> go</c><00:58:04.000><c> into</c><00:58:04.160><c> the</c>

00:58:04.270 --> 00:58:04.280 align:start position:0%
models but I'm not going to go into the
 

00:58:04.280 --> 00:58:06.150 align:start position:0%
models but I'm not going to go into the
detail<00:58:04.680><c> right</c><00:58:04.839><c> here</c><00:58:05.440><c> we're</c><00:58:05.599><c> going</c><00:58:05.760><c> to</c><00:58:05.920><c> treat</c>

00:58:06.150 --> 00:58:06.160 align:start position:0%
detail right here we're going to treat
 

00:58:06.160 --> 00:58:08.910 align:start position:0%
detail right here we're going to treat
it<00:58:06.319><c> as</c><00:58:06.400><c> a</c><00:58:06.520><c> bit</c><00:58:06.640><c> of</c><00:58:06.720><c> a</c><00:58:06.839><c> black</c><00:58:07.079><c> box</c><00:58:07.799><c> and</c><00:58:08.119><c> it</c><00:58:08.280><c> just</c>

00:58:08.910 --> 00:58:08.920 align:start position:0%
it as a bit of a black box and it just
 

00:58:08.920 --> 00:58:11.990 align:start position:0%
it as a bit of a black box and it just
optimizes<00:58:09.920><c> um</c><00:58:10.359><c> the</c><00:58:10.559><c> objective</c><00:58:11.119><c> faster</c><00:58:11.799><c> than</c>

00:58:11.990 --> 00:58:12.000 align:start position:0%
optimizes um the objective faster than
 

00:58:12.000 --> 00:58:13.750 align:start position:0%
optimizes um the objective faster than
SGD<00:58:12.680><c> which</c><00:58:12.799><c> is</c><00:58:12.920><c> what</c><00:58:13.039><c> we've</c><00:58:13.240><c> seen</c><00:58:13.520><c> in</c><00:58:13.640><c> the</c>

00:58:13.750 --> 00:58:13.760 align:start position:0%
SGD which is what we've seen in the
 

00:58:13.760 --> 00:58:15.870 align:start position:0%
SGD which is what we've seen in the
previous<00:58:14.079><c> lectures</c><00:58:15.039><c> so</c><00:58:15.200><c> let's</c><00:58:15.359><c> use</c><00:58:15.520><c> it</c><00:58:15.640><c> as</c><00:58:15.760><c> a</c>

00:58:15.870 --> 00:58:15.880 align:start position:0%
previous lectures so let's use it as a
 

00:58:15.880 --> 00:58:18.470 align:start position:0%
previous lectures so let's use it as a
black<00:58:16.079><c> box</c><00:58:16.319><c> in</c><00:58:16.440><c> our</c><00:58:16.960><c> case</c><00:58:17.960><c> uh</c><00:58:18.079><c> create</c><00:58:18.359><c> the</c>

00:58:18.470 --> 00:58:18.480 align:start position:0%
black box in our case uh create the
 

00:58:18.480 --> 00:58:21.589 align:start position:0%
black box in our case uh create the
optimizer<00:58:19.079><c> object</c><00:58:19.680><c> and</c>

00:58:21.589 --> 00:58:21.599 align:start position:0%
optimizer object and
 

00:58:21.599 --> 00:58:28.750 align:start position:0%
optimizer object and
then<00:58:22.599><c> go</c><00:58:22.760><c> through</c><00:58:22.960><c> the</c><00:58:23.119><c> optimization</c>

00:58:28.750 --> 00:58:28.760 align:start position:0%
 
 

00:58:28.760 --> 00:58:30.630 align:start position:0%
 
the<00:58:28.880><c> first</c><00:58:29.039><c> thing</c><00:58:29.200><c> to</c><00:58:29.480><c> always</c><00:58:29.720><c> make</c><00:58:29.880><c> sure</c><00:58:30.520><c> the</c>

00:58:30.630 --> 00:58:30.640 align:start position:0%
the first thing to always make sure the
 

00:58:30.640 --> 00:58:32.549 align:start position:0%
the first thing to always make sure the
co-pilot<00:58:31.160><c> did</c><00:58:31.319><c> not</c><00:58:31.599><c> forget</c><00:58:31.920><c> to</c><00:58:32.079><c> zero</c><00:58:32.400><c> the</c>

00:58:32.549 --> 00:58:32.559 align:start position:0%
co-pilot did not forget to zero the
 

00:58:32.559 --> 00:58:35.430 align:start position:0%
co-pilot did not forget to zero the
gradients<00:58:33.559><c> so</c><00:58:34.160><c> um</c><00:58:34.599><c> always</c><00:58:34.839><c> remember</c><00:58:35.240><c> that</c><00:58:35.359><c> you</c>

00:58:35.430 --> 00:58:35.440 align:start position:0%
gradients so um always remember that you
 

00:58:35.440 --> 00:58:38.109 align:start position:0%
gradients so um always remember that you
have<00:58:35.559><c> to</c><00:58:36.079><c> start</c><00:58:36.440><c> with</c><00:58:36.559><c> a</c><00:58:36.720><c> zero</c><00:58:37.000><c> gradient</c><00:58:38.000><c> then</c>

00:58:38.109 --> 00:58:38.119 align:start position:0%
have to start with a zero gradient then
 

00:58:38.119 --> 00:58:39.549 align:start position:0%
have to start with a zero gradient then
when<00:58:38.240><c> you</c><00:58:38.319><c> get</c><00:58:38.440><c> your</c><00:58:38.599><c> loss</c><00:58:38.920><c> and</c><00:58:39.000><c> you</c><00:58:39.079><c> do</c><00:58:39.200><c> a</c><00:58:39.319><c> DOT</c>

00:58:39.549 --> 00:58:39.559 align:start position:0%
when you get your loss and you do a DOT
 

00:58:39.559 --> 00:58:42.750 align:start position:0%
when you get your loss and you do a DOT
backward<00:58:40.559><c> dot</c><00:58:40.880><c> backward</c><00:58:41.440><c> adds</c><00:58:41.839><c> to</c><00:58:42.119><c> gradients</c>

00:58:42.750 --> 00:58:42.760 align:start position:0%
backward dot backward adds to gradients
 

00:58:42.760 --> 00:58:44.870 align:start position:0%
backward dot backward adds to gradients
so<00:58:42.920><c> it</c><00:58:43.200><c> deposits</c><00:58:43.720><c> gradients</c><00:58:44.319><c> it</c><00:58:44.520><c> it</c><00:58:44.640><c> always</c>

00:58:44.870 --> 00:58:44.880 align:start position:0%
so it deposits gradients it it always
 

00:58:44.880 --> 00:58:46.349 align:start position:0%
so it deposits gradients it it always
does<00:58:45.039><c> a</c><00:58:45.200><c> plus</c><00:58:45.440><c> equals</c><00:58:45.880><c> on</c><00:58:46.039><c> whatever</c><00:58:46.280><c> the</c>

00:58:46.349 --> 00:58:46.359 align:start position:0%
does a plus equals on whatever the
 

00:58:46.359 --> 00:58:48.109 align:start position:0%
does a plus equals on whatever the
gradients<00:58:46.799><c> are</c><00:58:47.319><c> which</c><00:58:47.440><c> is</c><00:58:47.559><c> why</c><00:58:47.640><c> you</c><00:58:47.760><c> must</c><00:58:47.920><c> set</c>

00:58:48.109 --> 00:58:48.119 align:start position:0%
gradients are which is why you must set
 

00:58:48.119 --> 00:58:50.270 align:start position:0%
gradients are which is why you must set
them<00:58:48.240><c> to</c><00:58:48.440><c> zero</c><00:58:49.400><c> so</c><00:58:49.559><c> this</c><00:58:49.720><c> accumulates</c><00:58:50.160><c> the</c>

00:58:50.270 --> 00:58:50.280 align:start position:0%
them to zero so this accumulates the
 

00:58:50.280 --> 00:58:52.630 align:start position:0%
them to zero so this accumulates the
gradient<00:58:50.680><c> from</c><00:58:50.880><c> this</c><00:58:51.079><c> loss</c><00:58:52.000><c> and</c><00:58:52.119><c> then</c><00:58:52.240><c> we</c><00:58:52.359><c> call</c>

00:58:52.630 --> 00:58:52.640 align:start position:0%
gradient from this loss and then we call
 

00:58:52.640 --> 00:58:56.630 align:start position:0%
gradient from this loss and then we call
the<00:58:52.839><c> step</c><00:58:53.520><c> function</c><00:58:53.920><c> on</c><00:58:54.119><c> the</c><00:58:54.359><c> optimizer</c><00:58:55.359><c> to</c><00:58:56.280><c> um</c>

00:58:56.630 --> 00:58:56.640 align:start position:0%
the step function on the optimizer to um
 

00:58:56.640 --> 00:59:00.150 align:start position:0%
the step function on the optimizer to um
update<00:58:56.960><c> the</c><00:58:57.559><c> parameters</c><00:58:58.559><c> and</c><00:58:58.880><c> to</c><00:58:59.480><c> um</c><00:58:59.760><c> decrease</c>

00:59:00.150 --> 00:59:00.160 align:start position:0%
update the parameters and to um decrease
 

00:59:00.160 --> 00:59:00.829 align:start position:0%
update the parameters and to um decrease
the

00:59:00.829 --> 00:59:00.839 align:start position:0%
the
 

00:59:00.839 --> 00:59:03.549 align:start position:0%
the
loss<00:59:01.839><c> and</c><00:59:02.119><c> then</c><00:59:02.359><c> we</c><00:59:02.599><c> print</c><00:59:02.839><c> a</c><00:59:03.039><c> step</c><00:59:03.280><c> and</c><00:59:03.440><c> the</c>

00:59:03.549 --> 00:59:03.559 align:start position:0%
loss and then we print a step and the
 

00:59:03.559 --> 00:59:06.190 align:start position:0%
loss and then we print a step and the
loss<00:59:04.559><c> do</c><00:59:04.799><c> item</c><00:59:05.079><c> is</c><00:59:05.200><c> used</c><00:59:05.480><c> here</c><00:59:05.680><c> because</c><00:59:05.880><c> loss</c>

00:59:06.190 --> 00:59:06.200 align:start position:0%
loss do item is used here because loss
 

00:59:06.200 --> 00:59:08.230 align:start position:0%
loss do item is used here because loss
is<00:59:06.280><c> a</c><00:59:06.440><c> tensor</c><00:59:06.839><c> with</c><00:59:06.920><c> a</c><00:59:07.039><c> single</c><00:59:07.280><c> element</c><00:59:07.960><c> do</c>

00:59:08.230 --> 00:59:08.240 align:start position:0%
is a tensor with a single element do
 

00:59:08.240 --> 00:59:11.230 align:start position:0%
is a tensor with a single element do
item<00:59:09.000><c> will</c><00:59:09.400><c> actually</c><00:59:10.240><c> uh</c><00:59:10.520><c> convert</c><00:59:10.880><c> that</c><00:59:11.000><c> to</c><00:59:11.119><c> a</c>

00:59:11.230 --> 00:59:11.240 align:start position:0%
item will actually uh convert that to a
 

00:59:11.240 --> 00:59:13.630 align:start position:0%
item will actually uh convert that to a
single<00:59:11.480><c> float</c><00:59:12.000><c> and</c><00:59:12.160><c> this</c><00:59:12.280><c> float</c><00:59:12.720><c> will</c><00:59:13.119><c> live</c>

00:59:13.630 --> 00:59:13.640 align:start position:0%
single float and this float will live
 

00:59:13.640 --> 00:59:16.510 align:start position:0%
single float and this float will live
not<00:59:14.319><c> will</c><00:59:14.599><c> will</c><00:59:14.720><c> live</c><00:59:14.880><c> on</c><00:59:14.960><c> the</c><00:59:15.200><c> CPU</c><00:59:16.200><c> so</c><00:59:16.359><c> this</c>

00:59:16.510 --> 00:59:16.520 align:start position:0%
not will will live on the CPU so this
 

00:59:16.520 --> 00:59:17.750 align:start position:0%
not will will live on the CPU so this
gets<00:59:16.680><c> to</c><00:59:16.799><c> some</c><00:59:16.920><c> of</c><00:59:17.000><c> the</c><00:59:17.079><c> internals</c><00:59:17.520><c> again</c><00:59:17.640><c> of</c>

00:59:17.750 --> 00:59:17.760 align:start position:0%
gets to some of the internals again of
 

00:59:17.760 --> 00:59:20.710 align:start position:0%
gets to some of the internals again of
the<00:59:17.880><c> devices</c><00:59:18.280><c> but</c><00:59:18.480><c> loss</c><00:59:18.920><c> is</c><00:59:19.119><c> a</c><00:59:20.119><c> is</c><00:59:20.240><c> a</c><00:59:20.359><c> tensor</c>

00:59:20.710 --> 00:59:20.720 align:start position:0%
the devices but loss is a is a tensor
 

00:59:20.720 --> 00:59:22.870 align:start position:0%
the devices but loss is a is a tensor
with<00:59:20.839><c> a</c><00:59:20.920><c> single</c><00:59:21.200><c> element</c><00:59:21.559><c> and</c><00:59:21.640><c> it</c><00:59:21.799><c> lifts</c><00:59:22.160><c> on</c>

00:59:22.870 --> 00:59:22.880 align:start position:0%
with a single element and it lifts on
 

00:59:22.880 --> 00:59:25.510 align:start position:0%
with a single element and it lifts on
GPU<00:59:23.440><c> for</c><00:59:23.640><c> me</c><00:59:23.920><c> because</c><00:59:24.079><c> I'm</c><00:59:24.160><c> using</c><00:59:24.400><c> gpus</c><00:59:25.400><c> when</c>

00:59:25.510 --> 00:59:25.520 align:start position:0%
GPU for me because I'm using gpus when
 

00:59:25.520 --> 00:59:28.589 align:start position:0%
GPU for me because I'm using gpus when
you<00:59:25.640><c> call</c><00:59:26.200><c> item</c><00:59:27.160><c> P</c><00:59:27.359><c> torch</c><00:59:27.599><c> behind</c><00:59:27.839><c> the</c><00:59:27.960><c> scenes</c>

00:59:28.589 --> 00:59:28.599 align:start position:0%
you call item P torch behind the scenes
 

00:59:28.599 --> 00:59:30.309 align:start position:0%
you call item P torch behind the scenes
will<00:59:28.839><c> take</c><00:59:29.039><c> that</c><00:59:29.200><c> one-dimensional</c><00:59:29.799><c> tensor</c>

00:59:30.309 --> 00:59:30.319 align:start position:0%
will take that one-dimensional tensor
 

00:59:30.319 --> 00:59:32.950 align:start position:0%
will take that one-dimensional tensor
ship<00:59:30.599><c> it</c><00:59:30.760><c> back</c><00:59:30.880><c> to</c><00:59:31.000><c> the</c><00:59:31.119><c> CPU</c><00:59:31.920><c> uh</c><00:59:32.039><c> memory</c><00:59:32.760><c> and</c>

00:59:32.950 --> 00:59:32.960 align:start position:0%
ship it back to the CPU uh memory and
 

00:59:32.960 --> 00:59:35.309 align:start position:0%
ship it back to the CPU uh memory and
convert<00:59:33.240><c> it</c><00:59:33.359><c> into</c><00:59:33.520><c> a</c><00:59:33.599><c> float</c><00:59:34.000><c> that</c><00:59:34.160><c> we</c><00:59:34.240><c> can</c><00:59:34.400><c> just</c>

00:59:35.309 --> 00:59:35.319 align:start position:0%
convert it into a float that we can just
 

00:59:35.319 --> 00:59:38.349 align:start position:0%
convert it into a float that we can just
print<00:59:36.319><c> so</c><00:59:36.599><c> this</c><00:59:36.680><c> is</c><00:59:36.880><c> the</c><00:59:37.119><c> optimization</c><00:59:38.119><c> and</c>

00:59:38.349 --> 00:59:38.359 align:start position:0%
print so this is the optimization and
 

00:59:38.359 --> 00:59:41.990 align:start position:0%
print so this is the optimization and
this<00:59:38.520><c> should</c><00:59:39.039><c> probably</c><00:59:39.520><c> just</c>

00:59:41.990 --> 00:59:42.000 align:start position:0%
this should probably just
 

00:59:42.000 --> 00:59:45.150 align:start position:0%
this should probably just
work<00:59:43.000><c> let's</c><00:59:43.160><c> see</c><00:59:43.319><c> what</c>

00:59:45.150 --> 00:59:45.160 align:start position:0%
work let's see what
 

00:59:45.160 --> 00:59:47.630 align:start position:0%
work let's see what
happens<00:59:46.160><c> actually</c><00:59:46.440><c> sorry</c><00:59:46.720><c> let</c><00:59:46.839><c> me</c><00:59:47.039><c> instead</c><00:59:47.319><c> of</c>

00:59:47.630 --> 00:59:47.640 align:start position:0%
happens actually sorry let me instead of
 

00:59:47.640 --> 00:59:50.430 align:start position:0%
happens actually sorry let me instead of
using<00:59:48.640><c> CPU</c><00:59:49.119><c> override</c><00:59:49.559><c> let</c><00:59:49.640><c> me</c><00:59:49.760><c> delete</c><00:59:50.160><c> that</c><00:59:50.280><c> so</c>

00:59:50.430 --> 00:59:50.440 align:start position:0%
using CPU override let me delete that so
 

00:59:50.440 --> 00:59:52.109 align:start position:0%
using CPU override let me delete that so
this<00:59:50.520><c> is</c><00:59:50.640><c> a</c><00:59:50.760><c> bit</c><00:59:50.960><c> faster</c><00:59:51.280><c> for</c><00:59:51.480><c> me</c><00:59:51.680><c> and</c><00:59:51.799><c> it</c><00:59:51.920><c> runs</c>

00:59:52.109 --> 00:59:52.119 align:start position:0%
this is a bit faster for me and it runs
 

00:59:52.119 --> 00:59:58.670 align:start position:0%
this is a bit faster for me and it runs
on<00:59:52.319><c> Cuda</c>

00:59:58.670 --> 00:59:58.680 align:start position:0%
 
 

00:59:58.680 --> 01:00:00.910 align:start position:0%
 
oh<00:59:59.680><c> expected</c><01:00:00.039><c> all</c><01:00:00.200><c> tensors</c><01:00:00.520><c> to</c><01:00:00.599><c> be</c><01:00:00.680><c> on</c><01:00:00.799><c> the</c>

01:00:00.910 --> 01:00:00.920 align:start position:0%
oh expected all tensors to be on the
 

01:00:00.920 --> 01:00:02.230 align:start position:0%
oh expected all tensors to be on the
same<01:00:01.119><c> device</c><01:00:01.359><c> but</c><01:00:01.480><c> found</c><01:00:01.680><c> at</c><01:00:01.799><c> least</c><01:00:02.000><c> two</c>

01:00:02.230 --> 01:00:02.240 align:start position:0%
same device but found at least two
 

01:00:02.240 --> 01:00:06.029 align:start position:0%
same device but found at least two
devices<01:00:03.079><c> Cuda</c><01:00:03.480><c> zero</c><01:00:03.720><c> and</c><01:00:04.200><c> CPU</c><01:00:05.200><c> so</c><01:00:05.400><c> Cuda</c><01:00:05.760><c> zero</c>

01:00:06.029 --> 01:00:06.039 align:start position:0%
devices Cuda zero and CPU so Cuda zero
 

01:00:06.039 --> 01:00:07.870 align:start position:0%
devices Cuda zero and CPU so Cuda zero
is<01:00:06.160><c> the</c><01:00:06.319><c> zeroth</c><01:00:06.920><c> GPU</c><01:00:07.400><c> because</c><01:00:07.599><c> I</c><01:00:07.720><c> actually</c>

01:00:07.870 --> 01:00:07.880 align:start position:0%
is the zeroth GPU because I actually
 

01:00:07.880 --> 01:00:10.789 align:start position:0%
is the zeroth GPU because I actually
have<01:00:08.000><c> eight</c><01:00:08.200><c> gpus</c><01:00:08.640><c> on</c><01:00:08.880><c> this</c><01:00:09.119><c> box</c><01:00:10.039><c> uh</c><01:00:10.200><c> so</c><01:00:10.640><c> the</c>

01:00:10.789 --> 01:00:10.799 align:start position:0%
have eight gpus on this box uh so the
 

01:00:10.799 --> 01:00:14.829 align:start position:0%
have eight gpus on this box uh so the
zeroth<01:00:11.200><c> GPU</c><01:00:11.559><c> in</c><01:00:11.680><c> my</c><01:00:11.799><c> box</c><01:00:12.119><c> and</c><01:00:12.520><c> CPU</c><01:00:13.520><c> and</c><01:00:14.160><c> model</c>

01:00:14.829 --> 01:00:14.839 align:start position:0%
zeroth GPU in my box and CPU and model
 

01:00:14.839 --> 01:00:17.190 align:start position:0%
zeroth GPU in my box and CPU and model
we<01:00:15.000><c> have</c><01:00:15.200><c> moved</c><01:00:15.599><c> to</c><01:00:15.880><c> device</c><01:00:16.680><c> but</c><01:00:16.839><c> when</c><01:00:16.960><c> I</c><01:00:17.039><c> was</c>

01:00:17.190 --> 01:00:17.200 align:start position:0%
we have moved to device but when I was
 

01:00:17.200 --> 01:00:18.510 align:start position:0%
we have moved to device but when I was
writing<01:00:17.400><c> this</c><01:00:17.559><c> code</c><01:00:17.760><c> I</c><01:00:17.880><c> actually</c><01:00:18.079><c> introduced</c>

01:00:18.510 --> 01:00:18.520 align:start position:0%
writing this code I actually introduced
 

01:00:18.520 --> 01:00:21.190 align:start position:0%
writing this code I actually introduced
a<01:00:18.640><c> bug</c><01:00:19.440><c> because</c><01:00:19.799><c> buff</c><01:00:20.160><c> we</c><01:00:20.319><c> never</c><01:00:20.480><c> moved</c><01:00:20.839><c> to</c>

01:00:21.190 --> 01:00:21.200 align:start position:0%
a bug because buff we never moved to
 

01:00:21.200 --> 01:00:23.150 align:start position:0%
a bug because buff we never moved to
device<01:00:22.200><c> and</c><01:00:22.359><c> you</c><01:00:22.480><c> have</c><01:00:22.559><c> to</c><01:00:22.680><c> be</c><01:00:22.799><c> careful</c>

01:00:23.150 --> 01:00:23.160 align:start position:0%
device and you have to be careful
 

01:00:23.160 --> 01:00:25.670 align:start position:0%
device and you have to be careful
because<01:00:23.359><c> you</c><01:00:23.480><c> can't</c><01:00:23.640><c> just</c><01:00:23.760><c> do</c><01:00:24.039><c> buff</c><01:00:24.400><c> dot</c><01:00:25.039><c> two</c>

01:00:25.670 --> 01:00:25.680 align:start position:0%
because you can't just do buff dot two
 

01:00:25.680 --> 01:00:26.910 align:start position:0%
because you can't just do buff dot two
of

01:00:26.910 --> 01:00:26.920 align:start position:0%
of
 

01:00:26.920 --> 01:00:29.990 align:start position:0%
of
device<01:00:27.920><c> um</c><01:00:28.680><c> it's</c><01:00:28.839><c> not</c><01:00:29.039><c> stateful</c><01:00:29.599><c> it</c><01:00:29.720><c> doesn't</c>

01:00:29.990 --> 01:00:30.000 align:start position:0%
device um it's not stateful it doesn't
 

01:00:30.000 --> 01:00:33.349 align:start position:0%
device um it's not stateful it doesn't
convert<01:00:30.319><c> it</c><01:00:30.480><c> to</c><01:00:30.640><c> be</c><01:00:30.760><c> a</c><01:00:30.920><c> device</c><01:00:31.319><c> it</c><01:00:32.119><c> instead</c><01:00:33.079><c> uh</c>

01:00:33.349 --> 01:00:33.359 align:start position:0%
convert it to be a device it instead uh
 

01:00:33.359 --> 01:00:35.630 align:start position:0%
convert it to be a device it instead uh
returns<01:00:33.960><c> pointer</c><01:00:34.280><c> to</c><01:00:34.440><c> a</c><01:00:34.559><c> new</c><01:00:34.880><c> memory</c><01:00:35.359><c> which</c><01:00:35.480><c> is</c>

01:00:35.630 --> 01:00:35.640 align:start position:0%
returns pointer to a new memory which is
 

01:00:35.640 --> 01:00:37.670 align:start position:0%
returns pointer to a new memory which is
on<01:00:35.839><c> the</c><01:00:36.039><c> device</c><01:00:36.760><c> so</c><01:00:36.920><c> you</c><01:00:37.039><c> see</c><01:00:37.240><c> how</c><01:00:37.359><c> we</c><01:00:37.440><c> can</c><01:00:37.559><c> just</c>

01:00:37.670 --> 01:00:37.680 align:start position:0%
on the device so you see how we can just
 

01:00:37.680 --> 01:00:39.589 align:start position:0%
on the device so you see how we can just
do<01:00:37.839><c> model</c><01:00:38.160><c> that</c><01:00:38.280><c> two</c><01:00:38.440><c> a</c><01:00:38.599><c> device</c><01:00:39.039><c> that</c><01:00:39.200><c> does</c><01:00:39.359><c> not</c>

01:00:39.589 --> 01:00:39.599 align:start position:0%
do model that two a device that does not
 

01:00:39.599 --> 01:00:42.109 align:start position:0%
do model that two a device that does not
apply<01:00:39.839><c> to</c><01:00:40.000><c> tensors</c><01:00:40.799><c> you</c><01:00:40.920><c> have</c><01:00:41.039><c> to</c><01:00:41.160><c> do</c><01:00:41.440><c> buff</c>

01:00:42.109 --> 01:00:42.119 align:start position:0%
apply to tensors you have to do buff
 

01:00:42.119 --> 01:00:44.510 align:start position:0%
apply to tensors you have to do buff
equals

01:00:44.510 --> 01:00:44.520 align:start position:0%
equals
 

01:00:44.520 --> 01:00:49.950 align:start position:0%
equals
um<01:00:45.520><c> b.2</c><01:00:46.280><c> device</c><01:00:47.280><c> and</c><01:00:47.480><c> then</c><01:00:47.720><c> this</c><01:00:47.880><c> should</c><01:00:48.400><c> work</c>

01:00:49.950 --> 01:00:49.960 align:start position:0%
um b.2 device and then this should work
 

01:00:49.960 --> 01:00:52.150 align:start position:0%
um b.2 device and then this should work
okay<01:00:50.960><c> so</c><01:00:51.119><c> what</c><01:00:51.200><c> do</c><01:00:51.319><c> we</c><01:00:51.440><c> expect</c><01:00:51.640><c> to</c><01:00:51.760><c> see</c><01:00:52.039><c> we</c>

01:00:52.150 --> 01:00:52.160 align:start position:0%
okay so what do we expect to see we
 

01:00:52.160 --> 01:00:53.789 align:start position:0%
okay so what do we expect to see we
expect<01:00:52.359><c> to</c><01:00:52.480><c> see</c><01:00:52.640><c> a</c><01:00:52.760><c> reasonable</c><01:00:53.240><c> loss</c><01:00:53.559><c> in</c><01:00:53.680><c> the</c>

01:00:53.789 --> 01:00:53.799 align:start position:0%
expect to see a reasonable loss in the
 

01:00:53.799 --> 01:00:55.270 align:start position:0%
expect to see a reasonable loss in the
beginning<01:00:54.480><c> and</c><01:00:54.599><c> then</c><01:00:54.680><c> we</c><01:00:54.839><c> continue</c><01:00:55.160><c> to</c>

01:00:55.270 --> 01:00:55.280 align:start position:0%
beginning and then we continue to
 

01:00:55.280 --> 01:00:57.390 align:start position:0%
beginning and then we continue to
optimize<01:00:55.640><c> just</c><01:00:55.760><c> the</c><01:00:56.119><c> single</c><01:00:56.480><c> batch</c><01:00:57.039><c> and</c><01:00:57.119><c> so</c><01:00:57.280><c> we</c>

01:00:57.390 --> 01:00:57.400 align:start position:0%
optimize just the single batch and so we
 

01:00:57.400 --> 01:00:58.870 align:start position:0%
optimize just the single batch and so we
want<01:00:57.480><c> to</c><01:00:57.599><c> see</c><01:00:57.799><c> that</c><01:00:57.920><c> we</c><01:00:58.000><c> can</c><01:00:58.200><c> overfit</c><01:00:58.720><c> this</c>

01:00:58.870 --> 01:00:58.880 align:start position:0%
want to see that we can overfit this
 

01:00:58.880 --> 01:01:01.029 align:start position:0%
want to see that we can overfit this
single<01:00:59.200><c> batch</c><01:00:59.480><c> we</c><01:00:59.599><c> can</c><01:01:00.119><c> we</c><01:01:00.240><c> can</c><01:01:00.440><c> crush</c><01:01:00.839><c> this</c>

01:01:01.029 --> 01:01:01.039 align:start position:0%
single batch we can we can crush this
 

01:01:01.039 --> 01:01:02.789 align:start position:0%
single batch we can we can crush this
little<01:01:01.319><c> batch</c><01:01:01.880><c> and</c><01:01:02.000><c> we</c><01:01:02.119><c> can</c><01:01:02.400><c> perfectly</c>

01:01:02.789 --> 01:01:02.799 align:start position:0%
little batch and we can perfectly
 

01:01:02.799 --> 01:01:04.510 align:start position:0%
little batch and we can perfectly
predict<01:01:03.079><c> the</c><01:01:03.240><c> indices</c><01:01:03.680><c> on</c><01:01:03.960><c> just</c><01:01:04.119><c> this</c><01:01:04.280><c> little</c>

01:01:04.510 --> 01:01:04.520 align:start position:0%
predict the indices on just this little
 

01:01:04.520 --> 01:01:06.750 align:start position:0%
predict the indices on just this little
batch<01:01:05.359><c> and</c><01:01:05.480><c> indeed</c><01:01:05.839><c> that</c><01:01:06.000><c> is</c><01:01:06.359><c> roughly</c><01:01:06.640><c> what</c>

01:01:06.750 --> 01:01:06.760 align:start position:0%
batch and indeed that is roughly what
 

01:01:06.760 --> 01:01:08.190 align:start position:0%
batch and indeed that is roughly what
we're<01:01:06.920><c> seeing</c><01:01:07.280><c> here</c>

01:01:08.190 --> 01:01:08.200 align:start position:0%
we're seeing here
 

01:01:08.200 --> 01:01:12.630 align:start position:0%
we're seeing here
so<01:01:09.200><c> um</c><01:01:09.680><c> we</c><01:01:09.799><c> started</c><01:01:10.119><c> off</c><01:01:10.319><c> at</c><01:01:10.640><c> roughly</c><01:01:11.280><c> 10.82</c><01:01:12.280><c> 11</c>

01:01:12.630 --> 01:01:12.640 align:start position:0%
so um we started off at roughly 10.82 11
 

01:01:12.640 --> 01:01:14.430 align:start position:0%
so um we started off at roughly 10.82 11
in<01:01:12.799><c> this</c><01:01:12.960><c> case</c><01:01:13.599><c> and</c><01:01:13.720><c> then</c><01:01:13.880><c> as</c><01:01:14.000><c> we</c><01:01:14.119><c> continue</c>

01:01:14.430 --> 01:01:14.440 align:start position:0%
in this case and then as we continue
 

01:01:14.440 --> 01:01:15.990 align:start position:0%
in this case and then as we continue
optimizing<01:01:14.839><c> on</c><01:01:15.000><c> this</c><01:01:15.160><c> single</c><01:01:15.480><c> batch</c><01:01:15.760><c> without</c>

01:01:15.990 --> 01:01:16.000 align:start position:0%
optimizing on this single batch without
 

01:01:16.000 --> 01:01:17.829 align:start position:0%
optimizing on this single batch without
loading<01:01:16.280><c> new</c><01:01:16.480><c> examples</c><01:01:17.160><c> we</c><01:01:17.280><c> are</c><01:01:17.400><c> making</c><01:01:17.640><c> sure</c>

01:01:17.829 --> 01:01:17.839 align:start position:0%
loading new examples we are making sure
 

01:01:17.839 --> 01:01:19.990 align:start position:0%
loading new examples we are making sure
that<01:01:17.960><c> we</c><01:01:18.079><c> can</c><01:01:18.240><c> overfit</c><01:01:18.680><c> a</c><01:01:18.799><c> single</c><01:01:19.160><c> batch</c><01:01:19.799><c> and</c>

01:01:19.990 --> 01:01:20.000 align:start position:0%
that we can overfit a single batch and
 

01:01:20.000 --> 01:01:21.910 align:start position:0%
that we can overfit a single batch and
we<01:01:20.119><c> are</c><01:01:20.240><c> getting</c><01:01:20.440><c> to</c><01:01:20.720><c> very</c><01:01:20.920><c> very</c><01:01:21.079><c> low</c><01:01:21.319><c> loss</c><01:01:21.760><c> so</c>

01:01:21.910 --> 01:01:21.920 align:start position:0%
we are getting to very very low loss so
 

01:01:21.920 --> 01:01:24.349 align:start position:0%
we are getting to very very low loss so
the<01:01:22.039><c> Transformer</c><01:01:22.680><c> is</c><01:01:23.160><c> memorizing</c><01:01:24.160><c> this</c>

01:01:24.349 --> 01:01:24.359 align:start position:0%
the Transformer is memorizing this
 

01:01:24.359 --> 01:01:26.630 align:start position:0%
the Transformer is memorizing this
single<01:01:24.640><c> individual</c><01:01:25.119><c> batch</c><01:01:26.200><c> and</c><01:01:26.359><c> one</c><01:01:26.480><c> more</c>

01:01:26.630 --> 01:01:26.640 align:start position:0%
single individual batch and one more
 

01:01:26.640 --> 01:01:28.109 align:start position:0%
single individual batch and one more
thing<01:01:26.760><c> I</c><01:01:26.839><c> didn't</c><01:01:27.119><c> mention</c><01:01:27.520><c> is</c><01:01:27.880><c> uh</c><01:01:28.000><c> the</c>

01:01:28.109 --> 01:01:28.119 align:start position:0%
thing I didn't mention is uh the
 

01:01:28.119 --> 01:01:30.710 align:start position:0%
thing I didn't mention is uh the
learning<01:01:28.440><c> rate</c><01:01:28.720><c> here</c><01:01:29.280><c> is</c><01:01:29.440><c> 3</c><01:01:29.680><c> E4</c><01:01:30.400><c> which</c><01:01:30.480><c> is</c><01:01:30.599><c> a</c>

01:01:30.710 --> 01:01:30.720 align:start position:0%
learning rate here is 3 E4 which is a
 

01:01:30.720 --> 01:01:33.309 align:start position:0%
learning rate here is 3 E4 which is a
pretty<01:01:30.880><c> good</c><01:01:31.039><c> default</c><01:01:31.480><c> for</c><01:01:32.240><c> most</c><01:01:33.039><c> uh</c>

01:01:33.309 --> 01:01:33.319 align:start position:0%
pretty good default for most uh
 

01:01:33.319 --> 01:01:35.150 align:start position:0%
pretty good default for most uh
optimizations<01:01:33.960><c> that</c><01:01:34.079><c> you</c><01:01:34.160><c> want</c><01:01:34.240><c> to</c><01:01:34.400><c> run</c><01:01:34.839><c> at</c><01:01:34.960><c> a</c>

01:01:35.150 --> 01:01:35.160 align:start position:0%
optimizations that you want to run at a
 

01:01:35.160 --> 01:01:38.390 align:start position:0%
optimizations that you want to run at a
very<01:01:35.440><c> early</c><01:01:35.920><c> debugging</c><01:01:36.480><c> stage</c><01:01:37.480><c> so</c><01:01:38.000><c> this</c><01:01:38.200><c> is</c>

01:01:38.390 --> 01:01:38.400 align:start position:0%
very early debugging stage so this is
 

01:01:38.400 --> 01:01:41.349 align:start position:0%
very early debugging stage so this is
our<01:01:38.839><c> simple</c><01:01:39.119><c> inter</c><01:01:39.440><c> Loop</c><01:01:40.359><c> and</c><01:01:40.960><c> uh</c><01:01:41.119><c> we</c><01:01:41.200><c> are</c>

01:01:41.349 --> 01:01:41.359 align:start position:0%
our simple inter Loop and uh we are
 

01:01:41.359 --> 01:01:42.950 align:start position:0%
our simple inter Loop and uh we are
overfitting<01:01:41.839><c> a</c><01:01:41.920><c> single</c><01:01:42.200><c> batch</c><01:01:42.680><c> and</c><01:01:42.839><c> this</c>

01:01:42.950 --> 01:01:42.960 align:start position:0%
overfitting a single batch and this
 

01:01:42.960 --> 01:01:45.470 align:start position:0%
overfitting a single batch and this
looks<01:01:43.240><c> good</c><01:01:43.920><c> so</c><01:01:44.160><c> now</c><01:01:44.520><c> what</c><01:01:44.960><c> uh</c><01:01:45.119><c> what</c><01:01:45.240><c> comes</c>

01:01:45.470 --> 01:01:45.480 align:start position:0%
looks good so now what uh what comes
 

01:01:45.480 --> 01:01:46.789 align:start position:0%
looks good so now what uh what comes
next<01:01:45.720><c> is</c><01:01:45.839><c> we</c><01:01:45.920><c> don't</c><01:01:46.079><c> just</c><01:01:46.200><c> want</c><01:01:46.280><c> to</c><01:01:46.400><c> overfit</c><01:01:46.760><c> a</c>

01:01:46.789 --> 01:01:46.799 align:start position:0%
next is we don't just want to overfit a
 

01:01:46.799 --> 01:01:48.349 align:start position:0%
next is we don't just want to overfit a
single<01:01:47.039><c> batch</c><01:01:47.319><c> we</c><01:01:47.440><c> actually</c><01:01:47.680><c> want</c><01:01:47.799><c> to</c><01:01:47.920><c> do</c><01:01:48.079><c> an</c>

01:01:48.349 --> 01:01:48.359 align:start position:0%
single batch we actually want to do an
 

01:01:48.359 --> 01:01:50.190 align:start position:0%
single batch we actually want to do an
optimization<01:01:49.359><c> so</c><01:01:49.480><c> we</c><01:01:49.599><c> actually</c><01:01:49.880><c> need</c><01:01:50.039><c> to</c>

01:01:50.190 --> 01:01:50.200 align:start position:0%
optimization so we actually need to
 

01:01:50.200 --> 01:01:52.549 align:start position:0%
optimization so we actually need to
iterate<01:01:50.799><c> these</c><01:01:51.000><c> XY</c><01:01:51.400><c> batches</c><01:01:52.079><c> and</c><01:01:52.240><c> create</c><01:01:52.440><c> a</c>

01:01:52.549 --> 01:01:52.559 align:start position:0%
iterate these XY batches and create a
 

01:01:52.559 --> 01:01:54.510 align:start position:0%
iterate these XY batches and create a
little<01:01:52.799><c> data</c><01:01:53.000><c> loader</c><01:01:53.839><c> uh</c><01:01:53.960><c> that</c><01:01:54.079><c> makes</c><01:01:54.279><c> sure</c>

01:01:54.510 --> 01:01:54.520 align:start position:0%
little data loader uh that makes sure
 

01:01:54.520 --> 01:01:56.670 align:start position:0%
little data loader uh that makes sure
that<01:01:54.640><c> we're</c><01:01:54.799><c> always</c><01:01:55.079><c> getting</c><01:01:55.480><c> a</c><01:01:55.599><c> fresh</c><01:01:56.039><c> batch</c>

01:01:56.670 --> 01:01:56.680 align:start position:0%
that we're always getting a fresh batch
 

01:01:56.680 --> 01:01:57.870 align:start position:0%
that we're always getting a fresh batch
and<01:01:56.839><c> that</c><01:01:56.920><c> we're</c><01:01:57.160><c> actually</c><01:01:57.400><c> optimizing</c><01:01:57.799><c> a</c>

01:01:57.870 --> 01:01:57.880 align:start position:0%
and that we're actually optimizing a
 

01:01:57.880 --> 01:01:59.589 align:start position:0%
and that we're actually optimizing a
reasonable<01:01:58.319><c> objective</c><01:01:58.920><c> so</c><01:01:59.119><c> let's</c><01:01:59.279><c> do</c><01:01:59.440><c> that</c>

01:01:59.589 --> 01:01:59.599 align:start position:0%
reasonable objective so let's do that
 

01:01:59.599 --> 01:02:01.750 align:start position:0%
reasonable objective so let's do that
next<01:02:00.480><c> okay</c><01:02:00.599><c> so</c><01:02:00.720><c> this</c><01:02:00.839><c> is</c><01:02:00.920><c> what</c><01:02:01.079><c> I</c><01:02:01.200><c> came</c><01:02:01.359><c> up</c><01:02:01.559><c> with</c>

01:02:01.750 --> 01:02:01.760 align:start position:0%
next okay so this is what I came up with
 

01:02:01.760 --> 01:02:03.750 align:start position:0%
next okay so this is what I came up with
and<01:02:01.880><c> I</c><01:02:01.960><c> wrote</c><01:02:02.200><c> a</c><01:02:02.279><c> little</c><01:02:02.599><c> data</c><01:02:02.839><c> loader</c>

01:02:03.750 --> 01:02:03.760 align:start position:0%
and I wrote a little data loader
 

01:02:03.760 --> 01:02:06.670 align:start position:0%
and I wrote a little data loader
light<01:02:04.760><c> um</c><01:02:05.200><c> so</c><01:02:05.359><c> what</c><01:02:05.480><c> this</c><01:02:05.599><c> data</c><01:02:05.799><c> loader</c><01:02:06.119><c> does</c>

01:02:06.670 --> 01:02:06.680 align:start position:0%
light um so what this data loader does
 

01:02:06.680 --> 01:02:08.910 align:start position:0%
light um so what this data loader does
is<01:02:06.960><c> we're</c><01:02:07.160><c> importing</c><01:02:07.559><c> the</c><01:02:07.760><c> token</c><01:02:08.039><c> up</c><01:02:08.240><c> here</c>

01:02:08.910 --> 01:02:08.920 align:start position:0%
is we're importing the token up here
 

01:02:08.920 --> 01:02:10.589 align:start position:0%
is we're importing the token up here
we're<01:02:09.079><c> reading</c><01:02:09.400><c> the</c><01:02:09.559><c> entire</c><01:02:09.839><c> text</c><01:02:10.119><c> file</c><01:02:10.359><c> from</c>

01:02:10.589 --> 01:02:10.599 align:start position:0%
we're reading the entire text file from
 

01:02:10.599 --> 01:02:12.789 align:start position:0%
we're reading the entire text file from
this<01:02:10.760><c> single</c><01:02:11.520><c> input.txt</c>

01:02:12.789 --> 01:02:12.799 align:start position:0%
this single input.txt
 

01:02:12.799 --> 01:02:14.829 align:start position:0%
this single input.txt
tokenizing<01:02:13.799><c> it</c><01:02:14.279><c> and</c><01:02:14.400><c> then</c><01:02:14.520><c> we're</c><01:02:14.680><c> just</c>

01:02:14.829 --> 01:02:14.839 align:start position:0%
tokenizing it and then we're just
 

01:02:14.839 --> 01:02:17.390 align:start position:0%
tokenizing it and then we're just
printing<01:02:15.119><c> the</c><01:02:15.240><c> number</c><01:02:15.440><c> of</c><01:02:15.559><c> tokens</c><01:02:15.880><c> in</c><01:02:16.400><c> total</c>

01:02:17.390 --> 01:02:17.400 align:start position:0%
printing the number of tokens in total
 

01:02:17.400 --> 01:02:19.430 align:start position:0%
printing the number of tokens in total
and<01:02:17.559><c> the</c><01:02:17.720><c> number</c><01:02:18.039><c> of</c><01:02:18.319><c> batches</c><01:02:18.799><c> in</c><01:02:18.960><c> a</c><01:02:19.079><c> single</c>

01:02:19.430 --> 01:02:19.440 align:start position:0%
and the number of batches in a single
 

01:02:19.440 --> 01:02:22.230 align:start position:0%
and the number of batches in a single
Epoch<01:02:20.200><c> of</c><01:02:20.440><c> iterating</c><01:02:20.920><c> over</c><01:02:21.119><c> this</c><01:02:21.279><c> data</c><01:02:21.559><c> set</c><01:02:22.079><c> so</c>

01:02:22.230 --> 01:02:22.240 align:start position:0%
Epoch of iterating over this data set so
 

01:02:22.240 --> 01:02:24.670 align:start position:0%
Epoch of iterating over this data set so
how<01:02:22.319><c> many</c><01:02:22.520><c> unique</c><01:02:22.839><c> batches</c><01:02:23.319><c> do</c><01:02:23.480><c> we</c><01:02:24.200><c> output</c>

01:02:24.670 --> 01:02:24.680 align:start position:0%
how many unique batches do we output
 

01:02:24.680 --> 01:02:26.269 align:start position:0%
how many unique batches do we output
before<01:02:24.920><c> we</c><01:02:25.039><c> loop</c><01:02:25.359><c> back</c><01:02:25.520><c> around</c><01:02:25.960><c> the</c><01:02:26.039><c> beginning</c>

01:02:26.269 --> 01:02:26.279 align:start position:0%
before we loop back around the beginning
 

01:02:26.279 --> 01:02:28.309 align:start position:0%
before we loop back around the beginning
of<01:02:26.359><c> the</c><01:02:26.520><c> document</c><01:02:27.240><c> and</c><01:02:27.400><c> start</c><01:02:27.640><c> reading</c><01:02:28.000><c> it</c>

01:02:28.309 --> 01:02:28.319 align:start position:0%
of the document and start reading it
 

01:02:28.319 --> 01:02:31.430 align:start position:0%
of the document and start reading it
again<01:02:29.319><c> so</c><01:02:29.440><c> we</c><01:02:29.559><c> start</c><01:02:29.799><c> off</c><01:02:29.960><c> at</c><01:02:30.119><c> position</c><01:02:30.520><c> zero</c>

01:02:31.430 --> 01:02:31.440 align:start position:0%
again so we start off at position zero
 

01:02:31.440 --> 01:02:33.510 align:start position:0%
again so we start off at position zero
and<01:02:31.599><c> then</c><01:02:31.799><c> we</c><01:02:31.960><c> simply</c><01:02:32.319><c> walk</c><01:02:32.760><c> the</c><01:02:32.960><c> document</c><01:02:33.279><c> in</c>

01:02:33.510 --> 01:02:33.520 align:start position:0%
and then we simply walk the document in
 

01:02:33.520 --> 01:02:36.390 align:start position:0%
and then we simply walk the document in
batches<01:02:34.039><c> of</c><01:02:34.240><c> B</c><01:02:34.400><c> *</c><01:02:34.760><c> T</c><01:02:35.319><c> so</c><01:02:35.440><c> we</c><01:02:35.599><c> take</c><01:02:35.760><c> chunks</c><01:02:36.079><c> of</c><01:02:36.279><c> B</c>

01:02:36.390 --> 01:02:36.400 align:start position:0%
batches of B * T so we take chunks of B
 

01:02:36.400 --> 01:02:40.870 align:start position:0%
batches of B * T so we take chunks of B
*<01:02:36.760><c> T</c><01:02:37.359><c> and</c><01:02:37.480><c> then</c><01:02:37.720><c> always</c><01:02:38.039><c> Advance</c><01:02:38.480><c> by</c><01:02:38.599><c> B</c><01:02:38.799><c> *</c><01:02:39.279><c> T</c><01:02:40.279><c> and</c>

01:02:40.870 --> 01:02:40.880 align:start position:0%
* T and then always Advance by B * T and
 

01:02:40.880 --> 01:02:42.789 align:start position:0%
* T and then always Advance by B * T and
um<01:02:41.720><c> it's</c><01:02:41.960><c> important</c><01:02:42.240><c> to</c><01:02:42.319><c> note</c><01:02:42.520><c> that</c><01:02:42.599><c> we're</c>

01:02:42.789 --> 01:02:42.799 align:start position:0%
um it's important to note that we're
 

01:02:42.799 --> 01:02:44.829 align:start position:0%
um it's important to note that we're
always<01:02:43.079><c> advancing</c><01:02:43.520><c> our</c><01:02:43.720><c> position</c><01:02:44.160><c> by</c><01:02:44.400><c> exactly</c>

01:02:44.829 --> 01:02:44.839 align:start position:0%
always advancing our position by exactly
 

01:02:44.839 --> 01:02:47.630 align:start position:0%
always advancing our position by exactly
B<01:02:45.039><c> *</c><01:02:45.400><c> T</c><01:02:46.279><c> but</c><01:02:46.440><c> when</c><01:02:46.559><c> we're</c><01:02:46.720><c> fetching</c><01:02:47.079><c> the</c><01:02:47.200><c> tokens</c>

01:02:47.630 --> 01:02:47.640 align:start position:0%
B * T but when we're fetching the tokens
 

01:02:47.640 --> 01:02:49.510 align:start position:0%
B * T but when we're fetching the tokens
we're<01:02:47.880><c> actually</c><01:02:48.200><c> fetching</c><01:02:49.000><c> from</c><01:02:49.240><c> current</c>

01:02:49.510 --> 01:02:49.520 align:start position:0%
we're actually fetching from current
 

01:02:49.520 --> 01:02:52.750 align:start position:0%
we're actually fetching from current
position<01:02:49.920><c> to</c><01:02:50.319><c> B</c><01:02:50.440><c> *</c><01:02:50.760><c> t</c><01:02:51.000><c> +</c><01:02:51.279><c> 1</c><01:02:52.119><c> and</c><01:02:52.240><c> we</c><01:02:52.359><c> need</c><01:02:52.559><c> that</c>

01:02:52.750 --> 01:02:52.760 align:start position:0%
position to B * t + 1 and we need that
 

01:02:52.760 --> 01:02:55.069 align:start position:0%
position to B * t + 1 and we need that
plus<01:02:52.960><c> one</c><01:02:53.279><c> because</c><01:02:53.559><c> remember</c><01:02:54.559><c> uh</c><01:02:54.640><c> we</c><01:02:54.760><c> need</c><01:02:54.920><c> the</c>

01:02:55.069 --> 01:02:55.079 align:start position:0%
plus one because remember uh we need the
 

01:02:55.079 --> 01:02:56.630 align:start position:0%
plus one because remember uh we need the
target<01:02:55.440><c> token</c>

01:02:56.630 --> 01:02:56.640 align:start position:0%
target token
 

01:02:56.640 --> 01:02:58.750 align:start position:0%
target token
um<01:02:56.799><c> for</c><01:02:57.039><c> the</c><01:02:57.240><c> last</c><01:02:57.559><c> token</c><01:02:58.079><c> in</c><01:02:58.319><c> the</c><01:02:58.440><c> current</c>

01:02:58.750 --> 01:02:58.760 align:start position:0%
um for the last token in the current
 

01:02:58.760 --> 01:03:02.829 align:start position:0%
um for the last token in the current
batch<01:02:59.640><c> and</c><01:02:59.720><c> so</c><01:03:00.000><c> that</c><01:03:00.160><c> way</c><01:03:00.359><c> we</c><01:03:00.520><c> can</c><01:03:00.760><c> do</c><01:03:01.720><c> um</c><01:03:02.640><c> the</c>

01:03:02.829 --> 01:03:02.839 align:start position:0%
batch and so that way we can do um the
 

01:03:02.839 --> 01:03:07.069 align:start position:0%
batch and so that way we can do um the
XY<01:03:03.440><c> exactly</c><01:03:03.839><c> as</c><01:03:03.960><c> we</c><01:03:04.039><c> did</c><01:03:04.160><c> it</c><01:03:04.720><c> before</c><01:03:05.760><c> and</c><01:03:06.760><c> if</c><01:03:06.920><c> we</c>

01:03:07.069 --> 01:03:07.079 align:start position:0%
XY exactly as we did it before and if we
 

01:03:07.079 --> 01:03:09.349 align:start position:0%
XY exactly as we did it before and if we
are<01:03:07.319><c> to</c><01:03:07.960><c> um</c><01:03:08.200><c> run</c><01:03:08.440><c> out</c><01:03:08.559><c> of</c><01:03:08.760><c> data</c><01:03:09.000><c> we'll</c><01:03:09.200><c> just</c>

01:03:09.349 --> 01:03:09.359 align:start position:0%
are to um run out of data we'll just
 

01:03:09.359 --> 01:03:12.109 align:start position:0%
are to um run out of data we'll just
loop<01:03:09.640><c> back</c><01:03:09.799><c> around</c><01:03:10.000><c> to</c><01:03:10.520><c> zero</c><01:03:11.520><c> so</c><01:03:11.680><c> this</c><01:03:11.799><c> is</c><01:03:11.960><c> one</c>

01:03:12.109 --> 01:03:12.119 align:start position:0%
loop back around to zero so this is one
 

01:03:12.119 --> 01:03:13.789 align:start position:0%
loop back around to zero so this is one
way<01:03:12.240><c> to</c><01:03:12.359><c> write</c><01:03:12.559><c> a</c><01:03:12.720><c> very</c><01:03:12.920><c> very</c><01:03:13.160><c> simple</c><01:03:13.559><c> data</c>

01:03:13.789 --> 01:03:13.799 align:start position:0%
way to write a very very simple data
 

01:03:13.799 --> 01:03:16.549 align:start position:0%
way to write a very very simple data
loader<01:03:14.760><c> um</c><01:03:15.520><c> that</c><01:03:15.680><c> simply</c><01:03:16.039><c> just</c><01:03:16.200><c> goes</c><01:03:16.400><c> through</c>

01:03:16.549 --> 01:03:16.559 align:start position:0%
loader um that simply just goes through
 

01:03:16.559 --> 01:03:19.309 align:start position:0%
loader um that simply just goes through
the<01:03:16.760><c> file</c><01:03:17.240><c> in</c><01:03:17.400><c> chunks</c><01:03:18.400><c> and</c><01:03:18.599><c> is</c><01:03:18.880><c> good</c><01:03:19.119><c> enough</c>

01:03:19.309 --> 01:03:19.319 align:start position:0%
the file in chunks and is good enough
 

01:03:19.319 --> 01:03:21.950 align:start position:0%
the file in chunks and is good enough
for<01:03:19.480><c> us</c><01:03:20.000><c> uh</c><01:03:20.119><c> for</c><01:03:20.799><c> current</c><01:03:21.119><c> purposes</c><01:03:21.720><c> and</c><01:03:21.839><c> we're</c>

01:03:21.950 --> 01:03:21.960 align:start position:0%
for us uh for current purposes and we're
 

01:03:21.960 --> 01:03:24.470 align:start position:0%
for us uh for current purposes and we're
going<01:03:22.039><c> to</c><01:03:22.200><c> complexify</c><01:03:22.720><c> it</c><01:03:22.880><c> later</c><01:03:23.880><c> and</c><01:03:24.079><c> now</c>

01:03:24.470 --> 01:03:24.480 align:start position:0%
going to complexify it later and now
 

01:03:24.480 --> 01:03:26.309 align:start position:0%
going to complexify it later and now
we'd<01:03:24.720><c> like</c><01:03:24.839><c> to</c><01:03:25.039><c> come</c><01:03:25.240><c> back</c><01:03:25.400><c> around</c><01:03:25.839><c> here</c><01:03:26.200><c> and</c>

01:03:26.309 --> 01:03:26.319 align:start position:0%
we'd like to come back around here and
 

01:03:26.319 --> 01:03:27.549 align:start position:0%
we'd like to come back around here and
we'd<01:03:26.520><c> like</c><01:03:26.680><c> to</c><01:03:26.799><c> actually</c><01:03:27.000><c> use</c><01:03:27.160><c> our</c><01:03:27.319><c> data</c>

01:03:27.549 --> 01:03:27.559 align:start position:0%
we'd like to actually use our data
 

01:03:27.559 --> 01:03:29.829 align:start position:0%
we'd like to actually use our data
loader<01:03:28.200><c> so</c><01:03:28.400><c> the</c><01:03:28.520><c> import</c><01:03:28.799><c> Tik</c><01:03:29.039><c> token</c><01:03:29.359><c> has</c><01:03:29.480><c> moved</c>

01:03:29.829 --> 01:03:29.839 align:start position:0%
loader so the import Tik token has moved
 

01:03:29.839 --> 01:03:32.309 align:start position:0%
loader so the import Tik token has moved
up<01:03:30.559><c> and</c><01:03:30.720><c> actually</c><01:03:30.960><c> all</c><01:03:31.079><c> of</c><01:03:31.240><c> this</c><01:03:31.520><c> is</c><01:03:31.720><c> now</c>

01:03:32.309 --> 01:03:32.319 align:start position:0%
up and actually all of this is now
 

01:03:32.319 --> 01:03:34.990 align:start position:0%
up and actually all of this is now
useless<01:03:33.319><c> so</c><01:03:33.520><c> instead</c><01:03:33.920><c> we</c><01:03:34.079><c> just</c><01:03:34.200><c> want</c><01:03:34.520><c> a</c><01:03:34.720><c> train</c>

01:03:34.990 --> 01:03:35.000 align:start position:0%
useless so instead we just want a train
 

01:03:35.000 --> 01:03:38.470 align:start position:0%
useless so instead we just want a train
loader<01:03:36.000><c> for</c><01:03:36.240><c> the</c><01:03:36.359><c> training</c><01:03:37.039><c> data</c><01:03:38.039><c> and</c><01:03:38.240><c> we</c><01:03:38.319><c> want</c>

01:03:38.470 --> 01:03:38.480 align:start position:0%
loader for the training data and we want
 

01:03:38.480 --> 01:03:39.870 align:start position:0%
loader for the training data and we want
to<01:03:38.599><c> use</c><01:03:38.760><c> the</c><01:03:38.880><c> same</c><01:03:39.079><c> hyper</c><01:03:39.319><c> parameters</c><01:03:39.720><c> for</c>

01:03:39.870 --> 01:03:39.880 align:start position:0%
to use the same hyper parameters for
 

01:03:39.880 --> 01:03:43.470 align:start position:0%
to use the same hyper parameters for
four<01:03:40.520><c> so</c><01:03:40.839><c> B</c><01:03:41.119><c> size</c><01:03:41.400><c> was</c><01:03:41.559><c> four</c><01:03:42.119><c> and</c><01:03:42.359><c> time</c><01:03:42.720><c> was</c>

01:03:43.470 --> 01:03:43.480 align:start position:0%
four so B size was four and time was
 

01:03:43.480 --> 01:03:47.069 align:start position:0%
four so B size was four and time was
32<01:03:44.480><c> and</c><01:03:44.599><c> then</c><01:03:44.880><c> here</c><01:03:45.760><c> we</c><01:03:46.000><c> need</c><01:03:46.160><c> to</c><01:03:46.279><c> get</c><01:03:46.440><c> the</c><01:03:46.640><c> XY</c>

01:03:47.069 --> 01:03:47.079 align:start position:0%
32 and then here we need to get the XY
 

01:03:47.079 --> 01:03:49.230 align:start position:0%
32 and then here we need to get the XY
for<01:03:47.319><c> the</c><01:03:47.480><c> current</c><01:03:47.799><c> batch</c><01:03:48.680><c> so</c><01:03:48.880><c> let's</c><01:03:49.000><c> see</c><01:03:49.119><c> if</c>

01:03:49.230 --> 01:03:49.240 align:start position:0%
for the current batch so let's see if
 

01:03:49.240 --> 01:03:51.230 align:start position:0%
for the current batch so let's see if
copal<01:03:49.680><c> gets</c><01:03:49.880><c> it</c><01:03:50.440><c> because</c><01:03:50.640><c> this</c><01:03:50.720><c> is</c><01:03:50.880><c> simple</c>

01:03:51.230 --> 01:03:51.240 align:start position:0%
copal gets it because this is simple
 

01:03:51.240 --> 01:03:53.910 align:start position:0%
copal gets it because this is simple
enough<01:03:52.200><c> uh</c><01:03:52.279><c> so</c><01:03:52.400><c> we</c><01:03:52.559><c> call</c><01:03:52.720><c> the</c><01:03:52.880><c> next</c><01:03:53.119><c> batch</c><01:03:53.720><c> and</c>

01:03:53.910 --> 01:03:53.920 align:start position:0%
enough uh so we call the next batch and
 

01:03:53.920 --> 01:03:57.589 align:start position:0%
enough uh so we call the next batch and
then<01:03:54.400><c> we</c><01:03:55.400><c> um</c><01:03:55.799><c> make</c><01:03:55.960><c> sure</c><01:03:56.200><c> that</c><01:03:56.319><c> we</c><01:03:56.480><c> have</c><01:03:56.599><c> to</c>

01:03:57.589 --> 01:03:57.599 align:start position:0%
then we um make sure that we have to
 

01:03:57.599 --> 01:04:02.750 align:start position:0%
then we um make sure that we have to
move<01:03:58.599><c> our</c><01:03:58.880><c> tensors</c><01:03:59.480><c> from</c><01:03:59.960><c> CPU</c><01:04:00.799><c> to</c><01:04:01.200><c> the</c><01:04:01.760><c> device</c>

01:04:02.750 --> 01:04:02.760 align:start position:0%
move our tensors from CPU to the device
 

01:04:02.760 --> 01:04:05.109 align:start position:0%
move our tensors from CPU to the device
so<01:04:03.359><c> here</c><01:04:03.760><c> when</c><01:04:03.920><c> I</c><01:04:04.119><c> converted</c><01:04:04.520><c> the</c><01:04:04.680><c> tokens</c>

01:04:05.109 --> 01:04:05.119 align:start position:0%
so here when I converted the tokens
 

01:04:05.119 --> 01:04:06.950 align:start position:0%
so here when I converted the tokens
notice<01:04:05.440><c> that</c><01:04:05.559><c> I</c><01:04:05.680><c> didn't</c><01:04:06.000><c> actually</c><01:04:06.319><c> move</c><01:04:06.760><c> these</c>

01:04:06.950 --> 01:04:06.960 align:start position:0%
notice that I didn't actually move these
 

01:04:06.960 --> 01:04:10.109 align:start position:0%
notice that I didn't actually move these
tokens<01:04:07.359><c> to</c><01:04:07.559><c> the</c><01:04:07.799><c> GPU</c><01:04:08.599><c> I</c><01:04:08.720><c> left</c><01:04:09.000><c> them</c><01:04:09.279><c> on</c><01:04:09.640><c> CPU</c>

01:04:10.109 --> 01:04:10.119 align:start position:0%
tokens to the GPU I left them on CPU
 

01:04:10.119 --> 01:04:12.670 align:start position:0%
tokens to the GPU I left them on CPU
which<01:04:10.240><c> is</c><01:04:10.359><c> the</c><01:04:10.880><c> default</c><01:04:11.880><c> um</c><01:04:12.200><c> and</c><01:04:12.359><c> that's</c><01:04:12.520><c> just</c>

01:04:12.670 --> 01:04:12.680 align:start position:0%
which is the default um and that's just
 

01:04:12.680 --> 01:04:14.670 align:start position:0%
which is the default um and that's just
because<01:04:12.920><c> I'm</c><01:04:13.039><c> trying</c><01:04:13.319><c> not</c><01:04:13.440><c> to</c><01:04:13.680><c> waste</c><01:04:14.039><c> too</c><01:04:14.240><c> much</c>

01:04:14.670 --> 01:04:14.680 align:start position:0%
because I'm trying not to waste too much
 

01:04:14.680 --> 01:04:16.789 align:start position:0%
because I'm trying not to waste too much
memory<01:04:15.000><c> on</c><01:04:15.160><c> the</c><01:04:15.319><c> GPU</c><01:04:16.000><c> in</c><01:04:16.119><c> this</c><01:04:16.279><c> case</c><01:04:16.480><c> this</c><01:04:16.559><c> is</c><01:04:16.680><c> a</c>

01:04:16.789 --> 01:04:16.799 align:start position:0%
memory on the GPU in this case this is a
 

01:04:16.799 --> 01:04:19.109 align:start position:0%
memory on the GPU in this case this is a
tiny<01:04:17.039><c> data</c><01:04:17.279><c> set</c><01:04:17.400><c> and</c><01:04:17.520><c> it</c><01:04:17.599><c> would</c><01:04:17.799><c> fit</c><01:04:18.520><c> uh</c><01:04:18.680><c> but</c>

01:04:19.109 --> 01:04:19.119 align:start position:0%
tiny data set and it would fit uh but
 

01:04:19.119 --> 01:04:21.309 align:start position:0%
tiny data set and it would fit uh but
it's<01:04:19.520><c> fine</c><01:04:19.799><c> to</c><01:04:20.039><c> just</c><01:04:20.279><c> uh</c><01:04:20.400><c> ship</c><01:04:20.599><c> it</c><01:04:20.720><c> to</c><01:04:20.839><c> GPU</c>

01:04:21.309 --> 01:04:21.319 align:start position:0%
it's fine to just uh ship it to GPU
 

01:04:21.319 --> 01:04:24.309 align:start position:0%
it's fine to just uh ship it to GPU
right<01:04:21.440><c> now</c><01:04:21.640><c> for</c><01:04:22.000><c> for</c><01:04:22.400><c> our</c><01:04:22.640><c> purposes</c><01:04:23.119><c> right</c><01:04:23.319><c> now</c>

01:04:24.309 --> 01:04:24.319 align:start position:0%
right now for for our purposes right now
 

01:04:24.319 --> 01:04:25.990 align:start position:0%
right now for for our purposes right now
so<01:04:24.559><c> we</c><01:04:24.720><c> get</c><01:04:24.839><c> the</c><01:04:25.000><c> next</c><01:04:25.240><c> batch</c><01:04:25.520><c> we</c><01:04:25.760><c> keep</c><01:04:25.920><c> the</c>

01:04:25.990 --> 01:04:26.000 align:start position:0%
so we get the next batch we keep the
 

01:04:26.000 --> 01:04:29.029 align:start position:0%
so we get the next batch we keep the
data<01:04:26.200><c> loader</c><01:04:26.520><c> simple</c><01:04:27.000><c> CPU</c><01:04:28.000><c> class</c><01:04:28.720><c> and</c><01:04:28.839><c> then</c>

01:04:29.029 --> 01:04:29.039 align:start position:0%
data loader simple CPU class and then
 

01:04:29.039 --> 01:04:31.349 align:start position:0%
data loader simple CPU class and then
here<01:04:29.279><c> we</c><01:04:29.520><c> actually</c><01:04:29.760><c> ship</c><01:04:30.000><c> it</c><01:04:30.119><c> to</c><01:04:30.240><c> the</c><01:04:30.319><c> GPU</c><01:04:31.200><c> and</c>

01:04:31.349 --> 01:04:31.359 align:start position:0%
here we actually ship it to the GPU and
 

01:04:31.359 --> 01:04:34.829 align:start position:0%
here we actually ship it to the GPU and
do<01:04:31.520><c> all</c><01:04:31.680><c> the</c><01:04:32.240><c> computation</c><01:04:33.240><c> and</c><01:04:33.599><c> uh</c><01:04:34.480><c> let's</c><01:04:34.680><c> see</c>

01:04:34.829 --> 01:04:34.839 align:start position:0%
do all the computation and uh let's see
 

01:04:34.839 --> 01:04:39.710 align:start position:0%
do all the computation and uh let's see
if<01:04:35.000><c> this</c><01:04:35.119><c> runs</c><01:04:36.079><c> so</c><01:04:36.359><c> python</c><01:04:37.039><c> train</c><01:04:37.680><c> gbt2</c><01:04:38.680><c> pi</c><01:04:39.599><c> and</c>

01:04:39.710 --> 01:04:39.720 align:start position:0%
if this runs so python train gbt2 pi and
 

01:04:39.720 --> 01:04:41.190 align:start position:0%
if this runs so python train gbt2 pi and
what<01:04:39.839><c> do</c><01:04:39.960><c> we</c><01:04:40.079><c> expect</c><01:04:40.319><c> to</c><01:04:40.400><c> see</c><01:04:40.680><c> before</c><01:04:41.039><c> this</c>

01:04:41.190 --> 01:04:41.200 align:start position:0%
what do we expect to see before this
 

01:04:41.200 --> 01:04:43.109 align:start position:0%
what do we expect to see before this
actually<01:04:41.480><c> happens</c><01:04:42.400><c> what</c><01:04:42.520><c> we</c><01:04:42.680><c> expect</c><01:04:42.880><c> to</c><01:04:42.960><c> see</c>

01:04:43.109 --> 01:04:43.119 align:start position:0%
actually happens what we expect to see
 

01:04:43.119 --> 01:04:44.710 align:start position:0%
actually happens what we expect to see
is<01:04:43.279><c> now</c><01:04:43.359><c> we're</c><01:04:43.559><c> actually</c><01:04:43.839><c> getting</c><01:04:44.279><c> the</c><01:04:44.440><c> next</c>

01:04:44.710 --> 01:04:44.720 align:start position:0%
is now we're actually getting the next
 

01:04:44.720 --> 01:04:47.430 align:start position:0%
is now we're actually getting the next
batch<01:04:45.240><c> so</c><01:04:45.400><c> we</c><01:04:45.559><c> expect</c><01:04:45.799><c> to</c><01:04:46.039><c> not</c><01:04:46.599><c> overfit</c><01:04:47.319><c> a</c>

01:04:47.430 --> 01:04:47.440 align:start position:0%
batch so we expect to not overfit a
 

01:04:47.440 --> 01:04:50.549 align:start position:0%
batch so we expect to not overfit a
single<01:04:47.799><c> batch</c><01:04:48.559><c> and</c><01:04:48.680><c> so</c><01:04:48.920><c> I</c><01:04:49.079><c> expect</c><01:04:49.359><c> our</c><01:04:49.559><c> loss</c><01:04:49.960><c> to</c>

01:04:50.549 --> 01:04:50.559 align:start position:0%
single batch and so I expect our loss to
 

01:04:50.559 --> 01:04:54.069 align:start position:0%
single batch and so I expect our loss to
come<01:04:51.039><c> down</c><01:04:52.039><c> but</c><01:04:52.240><c> not</c><01:04:52.599><c> too</c><01:04:52.839><c> much</c><01:04:53.720><c> and</c><01:04:53.880><c> that's</c>

01:04:54.069 --> 01:04:54.079 align:start position:0%
come down but not too much and that's
 

01:04:54.079 --> 01:04:55.910 align:start position:0%
come down but not too much and that's
because<01:04:54.359><c> I</c><01:04:54.480><c> still</c><01:04:54.920><c> expect</c><01:04:55.160><c> it</c><01:04:55.240><c> to</c><01:04:55.359><c> come</c><01:04:55.480><c> down</c>

01:04:55.910 --> 01:04:55.920 align:start position:0%
because I still expect it to come down
 

01:04:55.920 --> 01:04:57.269 align:start position:0%
because I still expect it to come down
because<01:04:56.440><c> in</c><01:04:56.599><c> the</c>

01:04:57.269 --> 01:04:57.279 align:start position:0%
because in the
 

01:04:57.279 --> 01:05:00.230 align:start position:0%
because in the
50257<01:04:58.279><c> tokens</c><01:04:58.960><c> many</c><01:04:59.160><c> of</c><01:04:59.319><c> those</c><01:04:59.480><c> tokens</c><01:04:59.920><c> never</c>

01:05:00.230 --> 01:05:00.240 align:start position:0%
50257 tokens many of those tokens never
 

01:05:00.240 --> 01:05:02.269 align:start position:0%
50257 tokens many of those tokens never
occur<01:05:00.559><c> in</c><01:05:00.680><c> our</c><01:05:00.880><c> data</c><01:05:01.160><c> set</c><01:05:01.720><c> so</c><01:05:01.880><c> there</c><01:05:01.960><c> are</c><01:05:02.079><c> some</c>

01:05:02.269 --> 01:05:02.279 align:start position:0%
occur in our data set so there are some
 

01:05:02.279 --> 01:05:04.230 align:start position:0%
occur in our data set so there are some
very<01:05:02.520><c> easy</c><01:05:02.839><c> gains</c><01:05:03.200><c> to</c><01:05:03.319><c> be</c><01:05:03.440><c> made</c><01:05:03.760><c> here</c><01:05:03.960><c> in</c><01:05:04.079><c> the</c>

01:05:04.230 --> 01:05:04.240 align:start position:0%
very easy gains to be made here in the
 

01:05:04.240 --> 01:05:06.349 align:start position:0%
very easy gains to be made here in the
optimization<01:05:05.240><c> by</c><01:05:05.359><c> for</c><01:05:05.559><c> example</c><01:05:05.880><c> taking</c><01:05:06.160><c> the</c>

01:05:06.349 --> 01:05:06.359 align:start position:0%
optimization by for example taking the
 

01:05:06.359 --> 01:05:08.829 align:start position:0%
optimization by for example taking the
biases<01:05:06.880><c> of</c><01:05:07.000><c> all</c><01:05:07.200><c> the</c><01:05:07.319><c> loits</c><01:05:07.880><c> that</c><01:05:08.000><c> never</c><01:05:08.279><c> occur</c>

01:05:08.829 --> 01:05:08.839 align:start position:0%
biases of all the loits that never occur
 

01:05:08.839 --> 01:05:11.190 align:start position:0%
biases of all the loits that never occur
and<01:05:09.000><c> driving</c><01:05:09.400><c> them</c><01:05:09.520><c> to</c><01:05:09.720><c> negative</c><01:05:10.200><c> infinity</c>

01:05:11.190 --> 01:05:11.200 align:start position:0%
and driving them to negative infinity
 

01:05:11.200 --> 01:05:12.870 align:start position:0%
and driving them to negative infinity
and<01:05:11.319><c> that</c><01:05:11.440><c> would</c><01:05:11.680><c> basically</c><01:05:12.119><c> just</c><01:05:12.599><c> it's</c><01:05:12.760><c> just</c>

01:05:12.870 --> 01:05:12.880 align:start position:0%
and that would basically just it's just
 

01:05:12.880 --> 01:05:14.589 align:start position:0%
and that would basically just it's just
that<01:05:13.039><c> all</c><01:05:13.160><c> of</c><01:05:13.319><c> these</c><01:05:13.520><c> crazy</c><01:05:13.799><c> unic</c><01:05:14.119><c> codes</c><01:05:14.440><c> or</c>

01:05:14.589 --> 01:05:14.599 align:start position:0%
that all of these crazy unic codes or
 

01:05:14.599 --> 01:05:16.430 align:start position:0%
that all of these crazy unic codes or
different<01:05:14.920><c> languages</c><01:05:15.680><c> those</c><01:05:15.839><c> tokens</c><01:05:16.200><c> never</c>

01:05:16.430 --> 01:05:16.440 align:start position:0%
different languages those tokens never
 

01:05:16.440 --> 01:05:17.910 align:start position:0%
different languages those tokens never
occur<01:05:16.880><c> so</c><01:05:17.039><c> their</c><01:05:17.200><c> probability</c><01:05:17.599><c> should</c><01:05:17.760><c> be</c>

01:05:17.910 --> 01:05:17.920 align:start position:0%
occur so their probability should be
 

01:05:17.920 --> 01:05:19.829 align:start position:0%
occur so their probability should be
very<01:05:18.160><c> low</c><01:05:18.839><c> and</c><01:05:18.960><c> so</c><01:05:19.079><c> the</c><01:05:19.200><c> gains</c><01:05:19.440><c> that</c><01:05:19.559><c> we</c><01:05:19.680><c> should</c>

01:05:19.829 --> 01:05:19.839 align:start position:0%
very low and so the gains that we should
 

01:05:19.839 --> 01:05:22.309 align:start position:0%
very low and so the gains that we should
be<01:05:19.960><c> seeing</c><01:05:20.599><c> are</c><01:05:20.839><c> along</c><01:05:21.119><c> the</c><01:05:21.279><c> lines</c><01:05:21.599><c> of</c>

01:05:22.309 --> 01:05:22.319 align:start position:0%
be seeing are along the lines of
 

01:05:22.319 --> 01:05:24.470 align:start position:0%
be seeing are along the lines of
basically<01:05:22.799><c> deleting</c><01:05:23.319><c> the</c><01:05:23.480><c> usage</c><01:05:23.880><c> of</c><01:05:24.079><c> tokens</c>

01:05:24.470 --> 01:05:24.480 align:start position:0%
basically deleting the usage of tokens
 

01:05:24.480 --> 01:05:26.510 align:start position:0%
basically deleting the usage of tokens
that<01:05:24.680><c> never</c><01:05:24.960><c> occur</c><01:05:25.720><c> that's</c><01:05:25.880><c> probably</c><01:05:26.160><c> most</c><01:05:26.359><c> of</c>

01:05:26.510 --> 01:05:26.520 align:start position:0%
that never occur that's probably most of
 

01:05:26.520 --> 01:05:28.109 align:start position:0%
that never occur that's probably most of
the<01:05:26.640><c> loss</c><01:05:27.000><c> gain</c><01:05:27.240><c> that</c><01:05:27.319><c> we're</c><01:05:27.440><c> going</c><01:05:27.520><c> to</c><01:05:27.640><c> see</c><01:05:27.880><c> at</c>

01:05:28.109 --> 01:05:28.119 align:start position:0%
the loss gain that we're going to see at
 

01:05:28.119 --> 01:05:30.549 align:start position:0%
the loss gain that we're going to see at
this<01:05:28.279><c> scale</c><01:05:28.720><c> right</c><01:05:28.960><c> now</c><01:05:29.960><c> uh</c><01:05:30.039><c> but</c><01:05:30.160><c> we</c><01:05:30.240><c> shouldn't</c>

01:05:30.549 --> 01:05:30.559 align:start position:0%
this scale right now uh but we shouldn't
 

01:05:30.559 --> 01:05:35.109 align:start position:0%
this scale right now uh but we shouldn't
come<01:05:30.760><c> to</c><01:05:31.559><c> a</c><01:05:31.839><c> zero</c><01:05:32.680><c> uh</c><01:05:32.880><c> because</c><01:05:33.839><c> um</c><01:05:34.680><c> we</c><01:05:34.799><c> are</c><01:05:34.920><c> only</c>

01:05:35.109 --> 01:05:35.119 align:start position:0%
come to a zero uh because um we are only
 

01:05:35.119 --> 01:05:37.230 align:start position:0%
come to a zero uh because um we are only
doing<01:05:35.359><c> 50</c><01:05:35.680><c> iterations</c><01:05:36.680><c> and</c><01:05:36.839><c> I</c><01:05:36.920><c> don't</c><01:05:37.079><c> think</c>

01:05:37.230 --> 01:05:37.240 align:start position:0%
doing 50 iterations and I don't think
 

01:05:37.240 --> 01:05:39.349 align:start position:0%
doing 50 iterations and I don't think
that's<01:05:37.400><c> enough</c><01:05:37.559><c> to</c><01:05:37.640><c> do</c><01:05:37.760><c> an</c><01:05:37.880><c> eoch</c><01:05:38.400><c> right</c><01:05:38.559><c> now</c><01:05:39.240><c> so</c>

01:05:39.349 --> 01:05:39.359 align:start position:0%
that's enough to do an eoch right now so
 

01:05:39.359 --> 01:05:40.589 align:start position:0%
that's enough to do an eoch right now so
let's<01:05:39.520><c> see</c><01:05:39.640><c> what</c><01:05:39.720><c> we</c>

01:05:40.589 --> 01:05:40.599 align:start position:0%
let's see what we
 

01:05:40.599 --> 01:05:44.829 align:start position:0%
let's see what we
got<01:05:41.599><c> we</c><01:05:42.240><c> um</c><01:05:42.680><c> we</c><01:05:42.799><c> have</c><01:05:43.319><c> 338,000</c>

01:05:44.829 --> 01:05:44.839 align:start position:0%
got we um we have 338,000
 

01:05:44.839 --> 01:05:47.269 align:start position:0%
got we um we have 338,000
tokens<01:05:45.839><c> which</c><01:05:45.960><c> makes</c><01:05:46.200><c> sense</c><01:05:46.440><c> with</c><01:05:46.559><c> our</c><01:05:46.760><c> 3:1</c>

01:05:47.269 --> 01:05:47.279 align:start position:0%
tokens which makes sense with our 3:1
 

01:05:47.279 --> 01:05:48.870 align:start position:0%
tokens which makes sense with our 3:1
compression<01:05:47.680><c> ratio</c><01:05:48.000><c> because</c><01:05:48.160><c> there</c><01:05:48.240><c> are</c><01:05:48.440><c> 1</c>

01:05:48.870 --> 01:05:48.880 align:start position:0%
compression ratio because there are 1
 

01:05:48.880 --> 01:05:52.710 align:start position:0%
compression ratio because there are 1
million<01:05:49.880><c> uh</c><01:05:50.559><c> characters</c><01:05:51.559><c> so</c><01:05:51.760><c> one</c><01:05:51.960><c> Epoch</c><01:05:52.599><c> with</c>

01:05:52.710 --> 01:05:52.720 align:start position:0%
million uh characters so one Epoch with
 

01:05:52.720 --> 01:05:55.190 align:start position:0%
million uh characters so one Epoch with
the<01:05:52.799><c> current</c><01:05:53.039><c> setting</c><01:05:53.319><c> of</c><01:05:53.440><c> B</c><01:05:53.640><c> and</c><01:05:53.839><c> T</c><01:05:54.559><c> will</c><01:05:54.799><c> take</c>

01:05:55.190 --> 01:05:55.200 align:start position:0%
the current setting of B and T will take
 

01:05:55.200 --> 01:05:58.549 align:start position:0%
the current setting of B and T will take
2,<01:05:55.839><c> 600</c><01:05:56.400><c> batches</c><01:05:57.400><c> and</c><01:05:57.520><c> we're</c><01:05:57.720><c> only</c><01:05:57.920><c> doing</c><01:05:58.200><c> 50</c>

01:05:58.549 --> 01:05:58.559 align:start position:0%
2, 600 batches and we're only doing 50
 

01:05:58.559 --> 01:06:00.990 align:start position:0%
2, 600 batches and we're only doing 50
batches<01:05:58.799><c> of</c><01:05:59.079><c> optimization</c><01:06:00.079><c> in</c>

01:06:00.990 --> 01:06:01.000 align:start position:0%
batches of optimization in
 

01:06:01.000 --> 01:06:03.230 align:start position:0%
batches of optimization in
here<01:06:02.000><c> so</c><01:06:02.119><c> we</c><01:06:02.240><c> start</c><01:06:02.480><c> off</c><01:06:02.599><c> in</c><01:06:02.680><c> a</c><01:06:02.839><c> familiar</c>

01:06:03.230 --> 01:06:03.240 align:start position:0%
here so we start off in a familiar
 

01:06:03.240 --> 01:06:05.670 align:start position:0%
here so we start off in a familiar
territory<01:06:03.880><c> as</c><01:06:04.119><c> expected</c><01:06:05.039><c> and</c><01:06:05.160><c> then</c><01:06:05.319><c> we</c><01:06:05.440><c> seem</c>

01:06:05.670 --> 01:06:05.680 align:start position:0%
territory as expected and then we seem
 

01:06:05.680 --> 01:06:09.789 align:start position:0%
territory as expected and then we seem
to<01:06:05.880><c> come</c><01:06:06.119><c> down</c><01:06:06.359><c> to</c><01:06:06.960><c> about</c><01:06:07.440><c> 6.6</c><01:06:08.440><c> so</c><01:06:08.799><c> basically</c>

01:06:09.789 --> 01:06:09.799 align:start position:0%
to come down to about 6.6 so basically
 

01:06:09.799 --> 01:06:11.870 align:start position:0%
to come down to about 6.6 so basically
things<01:06:10.000><c> seem</c><01:06:10.160><c> to</c><01:06:10.279><c> be</c><01:06:10.440><c> working</c><01:06:10.920><c> okay</c><01:06:11.200><c> right</c><01:06:11.359><c> now</c>

01:06:11.870 --> 01:06:11.880 align:start position:0%
things seem to be working okay right now
 

01:06:11.880 --> 01:06:13.789 align:start position:0%
things seem to be working okay right now
with<01:06:12.079><c> respect</c><01:06:12.279><c> to</c><01:06:12.400><c> our</c><01:06:12.599><c> expectations</c><01:06:13.599><c> so</c>

01:06:13.789 --> 01:06:13.799 align:start position:0%
with respect to our expectations so
 

01:06:13.799 --> 01:06:15.990 align:start position:0%
with respect to our expectations so
that's<01:06:14.000><c> good</c><01:06:14.640><c> okay</c><01:06:14.839><c> next</c><01:06:15.240><c> I</c><01:06:15.319><c> want</c><01:06:15.480><c> to</c><01:06:15.680><c> actually</c>

01:06:15.990 --> 01:06:16.000 align:start position:0%
that's good okay next I want to actually
 

01:06:16.000 --> 01:06:18.870 align:start position:0%
that's good okay next I want to actually
fix<01:06:16.359><c> a</c><01:06:16.599><c> bug</c><01:06:17.000><c> that</c><01:06:17.119><c> we</c><01:06:17.200><c> have</c><01:06:17.319><c> in</c><01:06:17.440><c> our</c><01:06:17.680><c> code</c><01:06:18.680><c> um</c>

01:06:18.870 --> 01:06:18.880 align:start position:0%
fix a bug that we have in our code um
 

01:06:18.880 --> 01:06:20.710 align:start position:0%
fix a bug that we have in our code um
it's<01:06:19.000><c> not</c><01:06:19.119><c> a</c><01:06:19.240><c> major</c><01:06:19.520><c> bug</c><01:06:19.799><c> but</c><01:06:19.960><c> it</c><01:06:20.039><c> is</c><01:06:20.160><c> a</c><01:06:20.319><c> bug</c>

01:06:20.710 --> 01:06:20.720 align:start position:0%
it's not a major bug but it is a bug
 

01:06:20.720 --> 01:06:22.670 align:start position:0%
it's not a major bug but it is a bug
with<01:06:20.880><c> respect</c><01:06:21.160><c> to</c><01:06:21.279><c> how</c><01:06:21.440><c> gpt2</c><01:06:22.000><c> training</c><01:06:22.559><c> uh</c>

01:06:22.670 --> 01:06:22.680 align:start position:0%
with respect to how gpt2 training uh
 

01:06:22.680 --> 01:06:24.069 align:start position:0%
with respect to how gpt2 training uh
should

01:06:24.069 --> 01:06:24.079 align:start position:0%
should
 

01:06:24.079 --> 01:06:26.309 align:start position:0%
should
happen<01:06:25.079><c> um</c>

01:06:26.309 --> 01:06:26.319 align:start position:0%
happen um
 

01:06:26.319 --> 01:06:28.910 align:start position:0%
happen um
so<01:06:26.559><c> the</c><01:06:26.640><c> buck</c><01:06:26.880><c> is</c><01:06:27.000><c> the</c><01:06:27.520><c> following</c><01:06:28.520><c> we</c><01:06:28.599><c> were</c><01:06:28.760><c> not</c>

01:06:28.910 --> 01:06:28.920 align:start position:0%
so the buck is the following we were not
 

01:06:28.920 --> 01:06:29.950 align:start position:0%
so the buck is the following we were not
being<01:06:29.119><c> careful</c><01:06:29.440><c> enough</c><01:06:29.640><c> when</c><01:06:29.760><c> we</c><01:06:29.839><c> were</c>

01:06:29.950 --> 01:06:29.960 align:start position:0%
being careful enough when we were
 

01:06:29.960 --> 01:06:31.109 align:start position:0%
being careful enough when we were
loading<01:06:30.200><c> the</c><01:06:30.319><c> weights</c><01:06:30.520><c> from</c><01:06:30.640><c> hugging</c><01:06:30.920><c> face</c>

01:06:31.109 --> 01:06:31.119 align:start position:0%
loading the weights from hugging face
 

01:06:31.119 --> 01:06:33.190 align:start position:0%
loading the weights from hugging face
and<01:06:31.200><c> we</c><01:06:31.319><c> actually</c><01:06:31.520><c> missed</c><01:06:31.760><c> a</c><01:06:31.880><c> little</c><01:06:32.200><c> detail</c>

01:06:33.190 --> 01:06:33.200 align:start position:0%
and we actually missed a little detail
 

01:06:33.200 --> 01:06:35.269 align:start position:0%
and we actually missed a little detail
so<01:06:33.760><c> if</c><01:06:33.880><c> we</c><01:06:34.039><c> come</c>

01:06:35.269 --> 01:06:35.279 align:start position:0%
so if we come
 

01:06:35.279 --> 01:06:38.829 align:start position:0%
so if we come
here<01:06:36.279><c> notice</c><01:06:36.720><c> that</c><01:06:37.480><c> um</c><01:06:38.079><c> the</c><01:06:38.240><c> shape</c><01:06:38.520><c> of</c><01:06:38.680><c> these</c>

01:06:38.829 --> 01:06:38.839 align:start position:0%
here notice that um the shape of these
 

01:06:38.839 --> 01:06:42.230 align:start position:0%
here notice that um the shape of these
two<01:06:39.000><c> tensors</c><01:06:39.599><c> is</c><01:06:39.839><c> the</c><01:06:39.960><c> same</c><01:06:40.680><c> so</c><01:06:41.680><c> this</c><01:06:41.799><c> one</c><01:06:42.039><c> here</c>

01:06:42.230 --> 01:06:42.240 align:start position:0%
two tensors is the same so this one here
 

01:06:42.240 --> 01:06:44.150 align:start position:0%
two tensors is the same so this one here
is<01:06:42.359><c> the</c><01:06:42.520><c> token</c><01:06:42.880><c> embedding</c><01:06:43.480><c> at</c><01:06:43.599><c> the</c><01:06:43.799><c> bottom</c><01:06:44.039><c> of</c>

01:06:44.150 --> 01:06:44.160 align:start position:0%
is the token embedding at the bottom of
 

01:06:44.160 --> 01:06:45.109 align:start position:0%
is the token embedding at the bottom of
the

01:06:45.109 --> 01:06:45.119 align:start position:0%
the
 

01:06:45.119 --> 01:06:48.309 align:start position:0%
the
Transformer<01:06:46.119><c> right</c><01:06:46.319><c> so</c><01:06:46.960><c> and</c><01:06:47.200><c> this</c><01:06:47.319><c> one</c><01:06:47.640><c> here</c>

01:06:48.309 --> 01:06:48.319 align:start position:0%
Transformer right so and this one here
 

01:06:48.319 --> 01:06:50.430 align:start position:0%
Transformer right so and this one here
is<01:06:48.520><c> the</c><01:06:48.720><c> language</c><01:06:49.079><c> modeling</c><01:06:49.559><c> head</c><01:06:49.960><c> at</c><01:06:50.119><c> the</c><01:06:50.279><c> top</c>

01:06:50.430 --> 01:06:50.440 align:start position:0%
is the language modeling head at the top
 

01:06:50.440 --> 01:06:51.309 align:start position:0%
is the language modeling head at the top
of<01:06:50.559><c> the</c>

01:06:51.309 --> 01:06:51.319 align:start position:0%
of the
 

01:06:51.319 --> 01:06:53.510 align:start position:0%
of the
Transformer<01:06:52.319><c> and</c><01:06:52.720><c> both</c><01:06:52.880><c> of</c><01:06:53.039><c> these</c><01:06:53.240><c> are</c>

01:06:53.510 --> 01:06:53.520 align:start position:0%
Transformer and both of these are
 

01:06:53.520 --> 01:06:55.349 align:start position:0%
Transformer and both of these are
basically<01:06:53.880><c> two-dimensional</c><01:06:54.520><c> tensors</c><01:06:55.240><c> and</c>

01:06:55.349 --> 01:06:55.359 align:start position:0%
basically two-dimensional tensors and
 

01:06:55.359 --> 01:06:59.470 align:start position:0%
basically two-dimensional tensors and
they<01:06:55.680><c> shape</c><01:06:56.000><c> is</c><01:06:56.680><c> identical</c><01:06:57.680><c> so</c><01:06:58.359><c> here</c><01:06:59.359><c> the</c>

01:06:59.470 --> 01:06:59.480 align:start position:0%
they shape is identical so here the
 

01:06:59.480 --> 01:07:00.750 align:start position:0%
they shape is identical so here the
first<01:06:59.640><c> one</c><01:06:59.799><c> is</c><01:06:59.920><c> the</c><01:07:00.000><c> output</c><01:07:00.279><c> embedding</c><01:07:00.640><c> the</c>

01:07:00.750 --> 01:07:00.760 align:start position:0%
first one is the output embedding the
 

01:07:00.760 --> 01:07:02.789 align:start position:0%
first one is the output embedding the
token<01:07:01.000><c> embedding</c><01:07:01.839><c> and</c><01:07:01.960><c> the</c><01:07:02.119><c> second</c><01:07:02.359><c> one</c><01:07:02.599><c> is</c>

01:07:02.789 --> 01:07:02.799 align:start position:0%
token embedding and the second one is
 

01:07:02.799 --> 01:07:04.670 align:start position:0%
token embedding and the second one is
this<01:07:03.079><c> linear</c><01:07:03.559><c> layer</c><01:07:03.799><c> at</c><01:07:03.920><c> the</c><01:07:04.079><c> very</c><01:07:04.319><c> top</c><01:07:04.599><c> the</c>

01:07:04.670 --> 01:07:04.680 align:start position:0%
this linear layer at the very top the
 

01:07:04.680 --> 01:07:06.990 align:start position:0%
this linear layer at the very top the
classifier<01:07:05.160><c> layer</c><01:07:06.119><c> both</c><01:07:06.319><c> of</c><01:07:06.440><c> them</c><01:07:06.640><c> are</c><01:07:06.839><c> of</c>

01:07:06.990 --> 01:07:07.000 align:start position:0%
classifier layer both of them are of
 

01:07:07.000 --> 01:07:08.230 align:start position:0%
classifier layer both of them are of
shape

01:07:08.230 --> 01:07:08.240 align:start position:0%
shape
 

01:07:08.240 --> 01:07:09.910 align:start position:0%
shape
50257<01:07:09.240><c> X</c>

01:07:09.910 --> 01:07:09.920 align:start position:0%
50257 X
 

01:07:09.920 --> 01:07:13.630 align:start position:0%
50257 X
768<01:07:11.039><c> um</c><01:07:12.039><c> this</c><01:07:12.160><c> one</c><01:07:12.400><c> here</c><01:07:12.559><c> is</c><01:07:12.720><c> giving</c><01:07:12.960><c> us</c><01:07:13.160><c> our</c>

01:07:13.630 --> 01:07:13.640 align:start position:0%
768 um this one here is giving us our
 

01:07:13.640 --> 01:07:16.029 align:start position:0%
768 um this one here is giving us our
token<01:07:14.000><c> embeddings</c><01:07:14.720><c> at</c><01:07:14.839><c> the</c><01:07:14.960><c> bottom</c><01:07:15.760><c> and</c><01:07:15.920><c> this</c>

01:07:16.029 --> 01:07:16.039 align:start position:0%
token embeddings at the bottom and this
 

01:07:16.039 --> 01:07:18.870 align:start position:0%
token embeddings at the bottom and this
one<01:07:16.240><c> here</c><01:07:16.440><c> is</c><01:07:16.599><c> taking</c><01:07:17.000><c> the</c><01:07:17.200><c> 768</c><01:07:18.119><c> channels</c><01:07:18.720><c> of</c>

01:07:18.870 --> 01:07:18.880 align:start position:0%
one here is taking the 768 channels of
 

01:07:18.880 --> 01:07:21.190 align:start position:0%
one here is taking the 768 channels of
the<01:07:19.000><c> Transformer</c><01:07:19.880><c> and</c><01:07:20.039><c> trying</c><01:07:20.279><c> to</c><01:07:20.640><c> upscale</c>

01:07:21.190 --> 01:07:21.200 align:start position:0%
the Transformer and trying to upscale
 

01:07:21.200 --> 01:07:24.430 align:start position:0%
the Transformer and trying to upscale
that<01:07:21.359><c> to</c><01:07:21.559><c> 50,</c><01:07:22.400><c> 257</c><01:07:23.400><c> to</c><01:07:23.559><c> get</c><01:07:23.680><c> the</c><01:07:23.760><c> Lis</c><01:07:24.160><c> for</c><01:07:24.319><c> the</c>

01:07:24.430 --> 01:07:24.440 align:start position:0%
that to 50, 257 to get the Lis for the
 

01:07:24.440 --> 01:07:26.990 align:start position:0%
that to 50, 257 to get the Lis for the
next<01:07:24.640><c> token</c><01:07:25.640><c> so</c><01:07:25.880><c> they're</c><01:07:26.079><c> both</c><01:07:26.359><c> the</c><01:07:26.480><c> same</c>

01:07:26.990 --> 01:07:27.000 align:start position:0%
next token so they're both the same
 

01:07:27.000 --> 01:07:29.470 align:start position:0%
next token so they're both the same
shape<01:07:27.920><c> but</c><01:07:28.119><c> more</c><01:07:28.319><c> than</c><01:07:28.559><c> that</c><01:07:28.839><c> actually</c><01:07:29.200><c> if</c><01:07:29.279><c> you</c>

01:07:29.470 --> 01:07:29.480 align:start position:0%
shape but more than that actually if you
 

01:07:29.480 --> 01:07:33.589 align:start position:0%
shape but more than that actually if you
look<01:07:29.720><c> at</c><01:07:30.520><c> um</c><01:07:31.359><c> comparing</c><01:07:31.880><c> their</c><01:07:32.279><c> elements</c><01:07:33.279><c> um</c>

01:07:33.589 --> 01:07:33.599 align:start position:0%
look at um comparing their elements um
 

01:07:33.599 --> 01:07:35.549 align:start position:0%
look at um comparing their elements um
in<01:07:33.760><c> pytorch</c><01:07:34.319><c> this</c><01:07:34.520><c> is</c><01:07:34.680><c> an</c><01:07:34.880><c> element</c><01:07:35.279><c> wise</c>

01:07:35.549 --> 01:07:35.559 align:start position:0%
in pytorch this is an element wise
 

01:07:35.559 --> 01:07:37.750 align:start position:0%
in pytorch this is an element wise
equality<01:07:36.079><c> so</c><01:07:36.279><c> then</c><01:07:36.359><c> we</c><01:07:36.480><c> use</c><01:07:36.680><c> do</c><01:07:36.920><c> all</c><01:07:37.520><c> and</c><01:07:37.640><c> we</c>

01:07:37.750 --> 01:07:37.760 align:start position:0%
equality so then we use do all and we
 

01:07:37.760 --> 01:07:39.309 align:start position:0%
equality so then we use do all and we
see<01:07:38.000><c> that</c><01:07:38.240><c> every</c><01:07:38.480><c> single</c><01:07:38.760><c> element</c><01:07:39.039><c> is</c>

01:07:39.309 --> 01:07:39.319 align:start position:0%
see that every single element is
 

01:07:39.319 --> 01:07:42.549 align:start position:0%
see that every single element is
identical<01:07:40.319><c> and</c><01:07:40.480><c> more</c><01:07:40.680><c> than</c><01:07:40.960><c> that</c><01:07:41.839><c> we</c><01:07:41.960><c> see</c><01:07:42.279><c> that</c>

01:07:42.549 --> 01:07:42.559 align:start position:0%
identical and more than that we see that
 

01:07:42.559 --> 01:07:44.910 align:start position:0%
identical and more than that we see that
if<01:07:42.640><c> we</c><01:07:42.799><c> actually</c><01:07:43.039><c> look</c><01:07:43.200><c> at</c><01:07:43.319><c> the</c><01:07:43.480><c> data</c><01:07:43.920><c> pointer</c>

01:07:44.910 --> 01:07:44.920 align:start position:0%
if we actually look at the data pointer
 

01:07:44.920 --> 01:07:46.990 align:start position:0%
if we actually look at the data pointer
uh<01:07:45.079><c> this</c><01:07:45.160><c> is</c><01:07:45.400><c> what</c><01:07:45.680><c> this</c><01:07:45.799><c> is</c><01:07:46.039><c> a</c><01:07:46.200><c> way</c><01:07:46.359><c> in</c><01:07:46.559><c> pytorch</c>

01:07:46.990 --> 01:07:47.000 align:start position:0%
uh this is what this is a way in pytorch
 

01:07:47.000 --> 01:07:49.349 align:start position:0%
uh this is what this is a way in pytorch
to<01:07:47.160><c> get</c><01:07:47.319><c> the</c><01:07:47.440><c> actual</c><01:07:47.760><c> pointer</c><01:07:48.079><c> to</c><01:07:48.279><c> the</c><01:07:48.799><c> uh</c><01:07:49.000><c> data</c>

01:07:49.349 --> 01:07:49.359 align:start position:0%
to get the actual pointer to the uh data
 

01:07:49.359 --> 01:07:51.430 align:start position:0%
to get the actual pointer to the uh data
and<01:07:49.520><c> the</c><01:07:49.680><c> storage</c><01:07:50.520><c> we</c><01:07:50.640><c> see</c><01:07:50.880><c> that</c><01:07:51.079><c> actually</c><01:07:51.319><c> the</c>

01:07:51.430 --> 01:07:51.440 align:start position:0%
and the storage we see that actually the
 

01:07:51.440 --> 01:07:53.710 align:start position:0%
and the storage we see that actually the
pointer<01:07:51.760><c> is</c><01:07:51.920><c> identical</c><01:07:52.880><c> so</c><01:07:53.119><c> not</c><01:07:53.279><c> only</c><01:07:53.480><c> are</c>

01:07:53.710 --> 01:07:53.720 align:start position:0%
pointer is identical so not only are
 

01:07:53.720 --> 01:07:55.510 align:start position:0%
pointer is identical so not only are
these<01:07:53.960><c> two</c><01:07:54.240><c> separate</c><01:07:54.599><c> tensors</c><01:07:55.039><c> that</c><01:07:55.160><c> happen</c>

01:07:55.510 --> 01:07:55.520 align:start position:0%
these two separate tensors that happen
 

01:07:55.520 --> 01:07:57.390 align:start position:0%
these two separate tensors that happen
to<01:07:55.680><c> have</c><01:07:55.839><c> the</c><01:07:55.960><c> same</c><01:07:56.240><c> shape</c><01:07:56.559><c> and</c><01:07:56.720><c> elements</c>

01:07:57.390 --> 01:07:57.400 align:start position:0%
to have the same shape and elements
 

01:07:57.400 --> 01:07:58.630 align:start position:0%
to have the same shape and elements
they're<01:07:57.640><c> actually</c><01:07:57.920><c> pointing</c><01:07:58.240><c> to</c><01:07:58.440><c> the</c>

01:07:58.630 --> 01:07:58.640 align:start position:0%
they're actually pointing to the
 

01:07:58.640 --> 01:08:02.109 align:start position:0%
they're actually pointing to the
identical<01:07:59.440><c> tensor</c><01:08:00.559><c> so</c><01:08:01.559><c> what's</c><01:08:01.760><c> happening</c>

01:08:02.109 --> 01:08:02.119 align:start position:0%
identical tensor so what's happening
 

01:08:02.119 --> 01:08:03.750 align:start position:0%
identical tensor so what's happening
here<01:08:02.240><c> is</c><01:08:02.359><c> that</c><01:08:02.520><c> this</c><01:08:02.599><c> is</c><01:08:02.799><c> a</c><01:08:03.119><c> common</c><01:08:03.480><c> weight</c>

01:08:03.750 --> 01:08:03.760 align:start position:0%
here is that this is a common weight
 

01:08:03.760 --> 01:08:06.510 align:start position:0%
here is that this is a common weight
tying<01:08:04.400><c> scheme</c><01:08:05.400><c> uh</c><01:08:05.520><c> that</c><01:08:05.680><c> actually</c><01:08:06.039><c> comes</c><01:08:06.319><c> from</c>

01:08:06.510 --> 01:08:06.520 align:start position:0%
tying scheme uh that actually comes from
 

01:08:06.520 --> 01:08:08.349 align:start position:0%
tying scheme uh that actually comes from
the<01:08:06.839><c> original</c>

01:08:08.349 --> 01:08:08.359 align:start position:0%
the original
 

01:08:08.359 --> 01:08:10.670 align:start position:0%
the original
um<01:08:09.359><c> from</c><01:08:09.559><c> the</c><01:08:09.680><c> original</c><01:08:10.079><c> attention</c><01:08:10.400><c> is</c><01:08:10.520><c> all</c>

01:08:10.670 --> 01:08:10.680 align:start position:0%
um from the original attention is all
 

01:08:10.680 --> 01:08:12.269 align:start position:0%
um from the original attention is all
you<01:08:10.760><c> need</c><01:08:11.000><c> paper</c><01:08:11.559><c> and</c><01:08:11.760><c> actually</c><01:08:11.960><c> even</c><01:08:12.160><c> the</c>

01:08:12.269 --> 01:08:12.279 align:start position:0%
you need paper and actually even the
 

01:08:12.279 --> 01:08:16.229 align:start position:0%
you need paper and actually even the
reference<01:08:12.680><c> before</c><01:08:13.039><c> it</c><01:08:14.039><c> so</c><01:08:14.400><c> if</c><01:08:14.520><c> we</c><01:08:14.680><c> come</c>

01:08:16.229 --> 01:08:16.239 align:start position:0%
reference before it so if we come
 

01:08:16.239 --> 01:08:19.950 align:start position:0%
reference before it so if we come
here

01:08:19.950 --> 01:08:19.960 align:start position:0%
 
 

01:08:19.960 --> 01:08:22.470 align:start position:0%
 
um<01:08:20.960><c> eddings</c><01:08:21.359><c> and</c><01:08:21.520><c> softmax</c><01:08:21.960><c> in</c><01:08:22.080><c> the</c><01:08:22.159><c> attention</c>

01:08:22.470 --> 01:08:22.480 align:start position:0%
um eddings and softmax in the attention
 

01:08:22.480 --> 01:08:24.910 align:start position:0%
um eddings and softmax in the attention
is<01:08:22.600><c> all</c><01:08:22.719><c> you</c><01:08:22.839><c> need</c><01:08:23.400><c> paper</c><01:08:24.400><c> they</c><01:08:24.520><c> mentioned</c>

01:08:24.910 --> 01:08:24.920 align:start position:0%
is all you need paper they mentioned
 

01:08:24.920 --> 01:08:26.950 align:start position:0%
is all you need paper they mentioned
that<01:08:25.040><c> in</c><01:08:25.159><c> our</c><01:08:25.520><c> model</c><01:08:26.080><c> we</c><01:08:26.199><c> shared</c><01:08:26.560><c> the</c><01:08:26.719><c> same</c>

01:08:26.950 --> 01:08:26.960 align:start position:0%
that in our model we shared the same
 

01:08:26.960 --> 01:08:28.510 align:start position:0%
that in our model we shared the same
weight<01:08:27.159><c> Matrix</c><01:08:27.600><c> between</c><01:08:27.839><c> the</c><01:08:27.960><c> two</c><01:08:28.120><c> embedding</c>

01:08:28.510 --> 01:08:28.520 align:start position:0%
weight Matrix between the two embedding
 

01:08:28.520 --> 01:08:30.789 align:start position:0%
weight Matrix between the two embedding
layers<01:08:29.279><c> and</c><01:08:29.480><c> the</c><01:08:29.759><c> pre</c><01:08:30.040><c> softmax</c><01:08:30.480><c> linear</c>

01:08:30.789 --> 01:08:30.799 align:start position:0%
layers and the pre softmax linear
 

01:08:30.799 --> 01:08:34.510 align:start position:0%
layers and the pre softmax linear
transformation<01:08:31.520><c> similar</c><01:08:31.839><c> to</c><01:08:32.319><c> 30</c><01:08:33.319><c> um</c><01:08:34.120><c> so</c><01:08:34.440><c> this</c>

01:08:34.510 --> 01:08:34.520 align:start position:0%
transformation similar to 30 um so this
 

01:08:34.520 --> 01:08:36.789 align:start position:0%
transformation similar to 30 um so this
is<01:08:34.880><c> an</c><01:08:35.120><c> awkward</c><01:08:35.480><c> way</c><01:08:35.600><c> to</c><01:08:35.799><c> phrase</c><01:08:36.480><c> that</c><01:08:36.640><c> these</c>

01:08:36.789 --> 01:08:36.799 align:start position:0%
is an awkward way to phrase that these
 

01:08:36.799 --> 01:08:38.349 align:start position:0%
is an awkward way to phrase that these
two<01:08:37.000><c> are</c><01:08:37.159><c> shared</c><01:08:37.640><c> and</c><01:08:37.759><c> they're</c><01:08:37.960><c> tied</c><01:08:38.239><c> and</c>

01:08:38.349 --> 01:08:38.359 align:start position:0%
two are shared and they're tied and
 

01:08:38.359 --> 01:08:40.950 align:start position:0%
two are shared and they're tied and
they're<01:08:38.560><c> the</c><01:08:38.719><c> same</c><01:08:38.960><c> Matrix</c><01:08:39.960><c> and</c><01:08:40.279><c> the</c><01:08:40.520><c> 30</c>

01:08:40.950 --> 01:08:40.960 align:start position:0%
they're the same Matrix and the 30
 

01:08:40.960 --> 01:08:42.510 align:start position:0%
they're the same Matrix and the 30
reference<01:08:41.480><c> is</c><01:08:41.679><c> this</c>

01:08:42.510 --> 01:08:42.520 align:start position:0%
reference is this
 

01:08:42.520 --> 01:08:45.189 align:start position:0%
reference is this
paper<01:08:43.520><c> um</c><01:08:43.880><c> so</c><01:08:44.120><c> this</c><01:08:44.239><c> came</c><01:08:44.400><c> out</c><01:08:44.520><c> in</c>

01:08:45.189 --> 01:08:45.199 align:start position:0%
paper um so this came out in
 

01:08:45.199 --> 01:08:47.709 align:start position:0%
paper um so this came out in
2017<01:08:46.199><c> and</c><01:08:46.400><c> you</c><01:08:46.520><c> can</c><01:08:46.679><c> read</c><01:08:46.880><c> the</c><01:08:46.960><c> full</c><01:08:47.239><c> paper</c><01:08:47.560><c> but</c>

01:08:47.709 --> 01:08:47.719 align:start position:0%
2017 and you can read the full paper but
 

01:08:47.719 --> 01:08:49.749 align:start position:0%
2017 and you can read the full paper but
basically<01:08:48.239><c> it</c><01:08:48.400><c> argues</c><01:08:48.839><c> for</c><01:08:49.159><c> this</c><01:08:49.520><c> weight</c>

01:08:49.749 --> 01:08:49.759 align:start position:0%
basically it argues for this weight
 

01:08:49.759 --> 01:08:53.149 align:start position:0%
basically it argues for this weight
tying<01:08:50.199><c> scheme</c><01:08:51.159><c> and</c><01:08:51.400><c> I</c><01:08:51.480><c> think</c><01:08:52.239><c> intuitively</c><01:08:52.960><c> the</c>

01:08:53.149 --> 01:08:53.159 align:start position:0%
tying scheme and I think intuitively the
 

01:08:53.159 --> 01:08:54.950 align:start position:0%
tying scheme and I think intuitively the
idea<01:08:53.520><c> for</c><01:08:53.799><c> why</c><01:08:53.960><c> you</c><01:08:54.080><c> might</c><01:08:54.239><c> want</c><01:08:54.359><c> to</c><01:08:54.480><c> do</c><01:08:54.679><c> this</c>

01:08:54.950 --> 01:08:54.960 align:start position:0%
idea for why you might want to do this
 

01:08:54.960 --> 01:08:57.990 align:start position:0%
idea for why you might want to do this
comes<01:08:55.199><c> from</c><01:08:55.480><c> from</c><01:08:56.279><c> this</c><01:08:56.480><c> paragraph</c><01:08:57.000><c> here</c><01:08:57.839><c> and</c>

01:08:57.990 --> 01:08:58.000 align:start position:0%
comes from from this paragraph here and
 

01:08:58.000 --> 01:09:01.390 align:start position:0%
comes from from this paragraph here and
basically<01:08:58.759><c> you</c><01:08:59.199><c> you</c><01:08:59.319><c> can</c><01:08:59.520><c> observe</c>

01:09:01.390 --> 01:09:01.400 align:start position:0%
basically you you can observe
 

01:09:01.400 --> 01:09:04.669 align:start position:0%
basically you you can observe
that<01:09:02.440><c> um</c><01:09:03.440><c> you</c><01:09:03.640><c> actually</c><01:09:03.880><c> want</c><01:09:04.239><c> these</c><01:09:04.440><c> two</c>

01:09:04.669 --> 01:09:04.679 align:start position:0%
that um you actually want these two
 

01:09:04.679 --> 01:09:07.149 align:start position:0%
that um you actually want these two
matrices<01:09:05.279><c> to</c><01:09:05.600><c> behave</c><01:09:06.199><c> similar</c><01:09:06.880><c> in</c><01:09:07.000><c> the</c>

01:09:07.149 --> 01:09:07.159 align:start position:0%
matrices to behave similar in the
 

01:09:07.159 --> 01:09:10.669 align:start position:0%
matrices to behave similar in the
following<01:09:08.040><c> sense</c><01:09:09.040><c> if</c><01:09:09.400><c> two</c><01:09:09.640><c> tokens</c><01:09:10.159><c> are</c><01:09:10.400><c> very</c>

01:09:10.669 --> 01:09:10.679 align:start position:0%
following sense if two tokens are very
 

01:09:10.679 --> 01:09:12.789 align:start position:0%
following sense if two tokens are very
similar<01:09:11.080><c> semantically</c><01:09:12.080><c> like</c><01:09:12.279><c> maybe</c><01:09:12.560><c> one</c><01:09:12.679><c> of</c>

01:09:12.789 --> 01:09:12.799 align:start position:0%
similar semantically like maybe one of
 

01:09:12.799 --> 01:09:14.269 align:start position:0%
similar semantically like maybe one of
them<01:09:12.920><c> is</c><01:09:13.080><c> all</c><01:09:13.279><c> lowercase</c><01:09:13.759><c> and</c><01:09:13.880><c> the</c><01:09:13.960><c> other</c><01:09:14.120><c> one</c>

01:09:14.269 --> 01:09:14.279 align:start position:0%
them is all lowercase and the other one
 

01:09:14.279 --> 01:09:16.470 align:start position:0%
them is all lowercase and the other one
is<01:09:14.600><c> all</c><01:09:14.839><c> uppercase</c><01:09:15.440><c> or</c><01:09:15.600><c> it's</c><01:09:15.799><c> the</c><01:09:15.920><c> same</c><01:09:16.199><c> token</c>

01:09:16.470 --> 01:09:16.480 align:start position:0%
is all uppercase or it's the same token
 

01:09:16.480 --> 01:09:17.789 align:start position:0%
is all uppercase or it's the same token
in<01:09:16.600><c> a</c><01:09:16.719><c> different</c><01:09:17.000><c> language</c><01:09:17.359><c> or</c><01:09:17.520><c> something</c>

01:09:17.789 --> 01:09:17.799 align:start position:0%
in a different language or something
 

01:09:17.799 --> 01:09:19.390 align:start position:0%
in a different language or something
like<01:09:17.960><c> that</c><01:09:18.359><c> if</c><01:09:18.480><c> you</c><01:09:18.560><c> have</c><01:09:18.679><c> similarity</c><01:09:19.120><c> between</c>

01:09:19.390 --> 01:09:19.400 align:start position:0%
like that if you have similarity between
 

01:09:19.400 --> 01:09:21.390 align:start position:0%
like that if you have similarity between
two<01:09:19.560><c> tokens</c><01:09:20.359><c> presumably</c><01:09:20.839><c> you</c><01:09:20.920><c> would</c><01:09:21.120><c> expect</c>

01:09:21.390 --> 01:09:21.400 align:start position:0%
two tokens presumably you would expect
 

01:09:21.400 --> 01:09:23.390 align:start position:0%
two tokens presumably you would expect
that<01:09:21.520><c> they</c><01:09:21.600><c> are</c><01:09:22.080><c> uh</c><01:09:22.279><c> nearby</c><01:09:22.839><c> in</c><01:09:22.960><c> the</c><01:09:23.120><c> token</c>

01:09:23.390 --> 01:09:23.400 align:start position:0%
that they are uh nearby in the token
 

01:09:23.400 --> 01:09:26.189 align:start position:0%
that they are uh nearby in the token
embedding<01:09:24.080><c> space</c><01:09:25.080><c> but</c><01:09:25.400><c> in</c><01:09:25.520><c> the</c><01:09:25.640><c> exact</c><01:09:25.960><c> same</c>

01:09:26.189 --> 01:09:26.199 align:start position:0%
embedding space but in the exact same
 

01:09:26.199 --> 01:09:27.870 align:start position:0%
embedding space but in the exact same
way<01:09:26.719><c> you'd</c><01:09:27.000><c> expect</c><01:09:27.239><c> that</c><01:09:27.359><c> if</c><01:09:27.480><c> you</c><01:09:27.560><c> have</c><01:09:27.679><c> two</c>

01:09:27.870 --> 01:09:27.880 align:start position:0%
way you'd expect that if you have two
 

01:09:27.880 --> 01:09:30.430 align:start position:0%
way you'd expect that if you have two
tokens<01:09:28.319><c> that</c><01:09:28.480><c> are</c><01:09:28.920><c> similar</c><01:09:29.440><c> semantically</c>

01:09:30.430 --> 01:09:30.440 align:start position:0%
tokens that are similar semantically
 

01:09:30.440 --> 01:09:32.189 align:start position:0%
tokens that are similar semantically
you'd<01:09:30.719><c> expect</c><01:09:31.000><c> them</c><01:09:31.120><c> to</c><01:09:31.319><c> get</c><01:09:31.520><c> the</c><01:09:31.640><c> same</c>

01:09:32.189 --> 01:09:32.199 align:start position:0%
you'd expect them to get the same
 

01:09:32.199 --> 01:09:33.950 align:start position:0%
you'd expect them to get the same
probabilities<01:09:33.199><c> at</c><01:09:33.400><c> the</c><01:09:33.520><c> output</c><01:09:33.799><c> of</c><01:09:33.880><c> a</c>

01:09:33.950 --> 01:09:33.960 align:start position:0%
probabilities at the output of a
 

01:09:33.960 --> 01:09:35.229 align:start position:0%
probabilities at the output of a
transformer<01:09:34.799><c> because</c><01:09:35.000><c> they</c><01:09:35.080><c> are</c>

01:09:35.229 --> 01:09:35.239 align:start position:0%
transformer because they are
 

01:09:35.239 --> 01:09:39.630 align:start position:0%
transformer because they are
semantically<01:09:36.199><c> similar</c><01:09:37.199><c> and</c><01:09:37.799><c> so</c><01:09:38.799><c> both</c>

01:09:39.630 --> 01:09:39.640 align:start position:0%
semantically similar and so both
 

01:09:39.640 --> 01:09:41.510 align:start position:0%
semantically similar and so both
positions<01:09:40.199><c> in</c><01:09:40.319><c> the</c><01:09:40.440><c> Transformer</c><01:09:40.960><c> at</c><01:09:41.080><c> the</c><01:09:41.239><c> very</c>

01:09:41.510 --> 01:09:41.520 align:start position:0%
positions in the Transformer at the very
 

01:09:41.520 --> 01:09:43.789 align:start position:0%
positions in the Transformer at the very
bottom<01:09:41.880><c> and</c><01:09:42.080><c> at</c><01:09:42.199><c> the</c><01:09:42.440><c> top</c><01:09:43.000><c> have</c><01:09:43.199><c> this</c><01:09:43.400><c> property</c>

01:09:43.789 --> 01:09:43.799 align:start position:0%
bottom and at the top have this property
 

01:09:43.799 --> 01:09:46.070 align:start position:0%
bottom and at the top have this property
that<01:09:44.000><c> similar</c><01:09:44.400><c> tokens</c><01:09:45.120><c> should</c><01:09:45.359><c> have</c><01:09:45.600><c> similar</c>

01:09:46.070 --> 01:09:46.080 align:start position:0%
that similar tokens should have similar
 

01:09:46.080 --> 01:09:49.229 align:start position:0%
that similar tokens should have similar
embeddings<01:09:47.080><c> or</c><01:09:47.279><c> similar</c><01:09:47.920><c> weights</c><01:09:48.920><c> and</c><01:09:49.000><c> so</c>

01:09:49.229 --> 01:09:49.239 align:start position:0%
embeddings or similar weights and so
 

01:09:49.239 --> 01:09:51.309 align:start position:0%
embeddings or similar weights and so
this<01:09:49.400><c> is</c><01:09:49.640><c> what</c><01:09:49.960><c> motivates</c><01:09:50.560><c> their</c><01:09:50.719><c> exploration</c>

01:09:51.309 --> 01:09:51.319 align:start position:0%
this is what motivates their exploration
 

01:09:51.319 --> 01:09:53.149 align:start position:0%
this is what motivates their exploration
here<01:09:51.560><c> and</c><01:09:51.759><c> they</c><01:09:52.199><c> they</c><01:09:52.319><c> kind</c><01:09:52.440><c> of</c><01:09:52.880><c> you</c><01:09:52.960><c> know</c><01:09:53.080><c> I</c>

01:09:53.149 --> 01:09:53.159 align:start position:0%
here and they they kind of you know I
 

01:09:53.159 --> 01:09:54.149 align:start position:0%
here and they they kind of you know I
don't<01:09:53.279><c> want</c><01:09:53.359><c> to</c><01:09:53.480><c> go</c><01:09:53.600><c> through</c><01:09:53.719><c> the</c><01:09:53.839><c> entire</c>

01:09:54.149 --> 01:09:54.159 align:start position:0%
don't want to go through the entire
 

01:09:54.159 --> 01:09:57.070 align:start position:0%
don't want to go through the entire
paper<01:09:55.159><c> and</c><01:09:55.440><c> and</c><01:09:55.800><c> uh</c><01:09:56.159><c> you</c><01:09:56.280><c> can</c><01:09:56.440><c> go</c><01:09:56.600><c> through</c><01:09:56.800><c> it</c>

01:09:57.070 --> 01:09:57.080 align:start position:0%
paper and and uh you can go through it
 

01:09:57.080 --> 01:09:59.310 align:start position:0%
paper and and uh you can go through it
but<01:09:57.400><c> this</c><01:09:57.480><c> is</c><01:09:57.640><c> what</c><01:09:57.760><c> they</c><01:09:57.920><c> observe</c><01:09:58.920><c> they</c><01:09:59.080><c> also</c>

01:09:59.310 --> 01:09:59.320 align:start position:0%
but this is what they observe they also
 

01:09:59.320 --> 01:10:00.590 align:start position:0%
but this is what they observe they also
observe<01:09:59.679><c> that</c><01:09:59.800><c> if</c><01:09:59.880><c> you</c><01:10:00.000><c> look</c><01:10:00.120><c> at</c><01:10:00.239><c> the</c><01:10:00.320><c> output</c>

01:10:00.590 --> 01:10:00.600 align:start position:0%
observe that if you look at the output
 

01:10:00.600 --> 01:10:02.630 align:start position:0%
observe that if you look at the output
embeddings<01:10:01.480><c> they</c><01:10:01.640><c> also</c><01:10:01.920><c> behave</c><01:10:02.280><c> like</c><01:10:02.400><c> word</c>

01:10:02.630 --> 01:10:02.640 align:start position:0%
embeddings they also behave like word
 

01:10:02.640 --> 01:10:06.149 align:start position:0%
embeddings they also behave like word
embeddings<01:10:03.640><c> um</c><01:10:04.400><c> if</c><01:10:04.560><c> you</c><01:10:05.280><c> um</c><01:10:05.600><c> if</c><01:10:05.679><c> you</c><01:10:05.840><c> just</c><01:10:06.040><c> kind</c>

01:10:06.149 --> 01:10:06.159 align:start position:0%
embeddings um if you um if you just kind
 

01:10:06.159 --> 01:10:07.990 align:start position:0%
embeddings um if you um if you just kind
of<01:10:06.360><c> try</c><01:10:06.560><c> to</c><01:10:06.640><c> use</c><01:10:06.840><c> those</c><01:10:07.000><c> weights</c><01:10:07.239><c> as</c><01:10:07.360><c> word</c>

01:10:07.990 --> 01:10:08.000 align:start position:0%
of try to use those weights as word
 

01:10:08.000 --> 01:10:10.590 align:start position:0%
of try to use those weights as word
embeddings<01:10:09.000><c> um</c><01:10:09.239><c> so</c><01:10:09.440><c> they</c><01:10:09.560><c> kind</c><01:10:09.679><c> of</c><01:10:09.880><c> observe</c>

01:10:10.590 --> 01:10:10.600 align:start position:0%
embeddings um so they kind of observe
 

01:10:10.600 --> 01:10:12.990 align:start position:0%
embeddings um so they kind of observe
this<01:10:10.840><c> similarity</c><01:10:11.760><c> they</c><01:10:11.880><c> try</c><01:10:12.080><c> to</c><01:10:12.280><c> tie</c><01:10:12.560><c> them</c><01:10:12.920><c> and</c>

01:10:12.990 --> 01:10:13.000 align:start position:0%
this similarity they try to tie them and
 

01:10:13.000 --> 01:10:14.110 align:start position:0%
this similarity they try to tie them and
they<01:10:13.120><c> observe</c><01:10:13.440><c> that</c><01:10:13.560><c> they</c><01:10:13.640><c> can</c><01:10:13.760><c> get</c><01:10:13.920><c> much</c>

01:10:14.110 --> 01:10:14.120 align:start position:0%
they observe that they can get much
 

01:10:14.120 --> 01:10:17.189 align:start position:0%
they observe that they can get much
better<01:10:14.520><c> performance</c><01:10:15.080><c> in</c><01:10:15.280><c> that</c><01:10:15.520><c> way</c><01:10:16.520><c> and</c><01:10:16.679><c> so</c>

01:10:17.189 --> 01:10:17.199 align:start position:0%
better performance in that way and so
 

01:10:17.199 --> 01:10:18.870 align:start position:0%
better performance in that way and so
this<01:10:17.400><c> was</c><01:10:17.760><c> adopted</c><01:10:18.239><c> and</c><01:10:18.360><c> the</c><01:10:18.480><c> attention</c><01:10:18.760><c> is</c>

01:10:18.870 --> 01:10:18.880 align:start position:0%
this was adopted and the attention is
 

01:10:18.880 --> 01:10:20.950 align:start position:0%
this was adopted and the attention is
all<01:10:19.080><c> need</c><01:10:19.320><c> paper</c><01:10:19.920><c> and</c><01:10:20.040><c> then</c><01:10:20.159><c> it</c><01:10:20.280><c> was</c><01:10:20.480><c> used</c>

01:10:20.950 --> 01:10:20.960 align:start position:0%
all need paper and then it was used
 

01:10:20.960 --> 01:10:24.310 align:start position:0%
all need paper and then it was used
again<01:10:21.520><c> in</c><01:10:21.800><c> gpt2</c><01:10:22.800><c> as</c><01:10:22.920><c> well</c>

01:10:24.310 --> 01:10:24.320 align:start position:0%
again in gpt2 as well
 

01:10:24.320 --> 01:10:26.149 align:start position:0%
again in gpt2 as well
so<01:10:25.320><c> I</c><01:10:25.400><c> couldn't</c><01:10:25.640><c> find</c><01:10:25.800><c> it</c><01:10:25.920><c> in</c><01:10:26.040><c> the</c>

01:10:26.149 --> 01:10:26.159 align:start position:0%
so I couldn't find it in the
 

01:10:26.159 --> 01:10:28.350 align:start position:0%
so I couldn't find it in the
Transformers<01:10:26.760><c> implementation</c><01:10:27.480><c> I'm</c><01:10:27.640><c> not</c><01:10:27.920><c> sure</c>

01:10:28.350 --> 01:10:28.360 align:start position:0%
Transformers implementation I'm not sure
 

01:10:28.360 --> 01:10:30.510 align:start position:0%
Transformers implementation I'm not sure
where<01:10:28.600><c> they</c><01:10:28.840><c> tie</c><01:10:29.120><c> those</c><01:10:29.320><c> embeddings</c><01:10:30.239><c> but</c><01:10:30.400><c> I</c>

01:10:30.510 --> 01:10:30.520 align:start position:0%
where they tie those embeddings but I
 

01:10:30.520 --> 01:10:34.149 align:start position:0%
where they tie those embeddings but I
can<01:10:30.840><c> find</c><01:10:31.040><c> it</c><01:10:31.280><c> in</c><01:10:31.480><c> the</c><01:10:31.840><c> original</c><01:10:32.239><c> gpt2</c><01:10:33.040><c> code</c><01:10:34.040><c> U</c>

01:10:34.149 --> 01:10:34.159 align:start position:0%
can find it in the original gpt2 code U
 

01:10:34.159 --> 01:10:36.910 align:start position:0%
can find it in the original gpt2 code U
introduced<01:10:34.640><c> by</c><01:10:34.800><c> open</c><01:10:35.040><c> aai</c><01:10:35.920><c> so</c><01:10:36.120><c> this</c><01:10:36.239><c> is</c><01:10:36.760><c> um</c>

01:10:36.910 --> 01:10:36.920 align:start position:0%
introduced by open aai so this is um
 

01:10:36.920 --> 01:10:40.430 align:start position:0%
introduced by open aai so this is um
openai<01:10:37.360><c> gpt2</c><01:10:37.920><c> Source</c><01:10:38.560><c> model</c><01:10:39.560><c> and</c><01:10:40.080><c> here</c><01:10:40.239><c> where</c>

01:10:40.430 --> 01:10:40.440 align:start position:0%
openai gpt2 Source model and here where
 

01:10:40.440 --> 01:10:41.950 align:start position:0%
openai gpt2 Source model and here where
they<01:10:40.560><c> are</c><01:10:40.679><c> forwarding</c><01:10:41.280><c> this</c><01:10:41.400><c> model</c><01:10:41.760><c> and</c><01:10:41.880><c> this</c>

01:10:41.950 --> 01:10:41.960 align:start position:0%
they are forwarding this model and this
 

01:10:41.960 --> 01:10:44.669 align:start position:0%
they are forwarding this model and this
is<01:10:42.040><c> in</c><01:10:42.199><c> tensorflow</c><01:10:42.880><c> but</c><01:10:43.520><c> uh</c><01:10:43.679><c> that's</c><01:10:43.960><c> okay</c><01:10:44.600><c> we</c>

01:10:44.669 --> 01:10:44.679 align:start position:0%
is in tensorflow but uh that's okay we
 

01:10:44.679 --> 01:10:46.590 align:start position:0%
is in tensorflow but uh that's okay we
see<01:10:44.880><c> that</c><01:10:45.000><c> they</c><01:10:45.120><c> get</c><01:10:45.280><c> the</c><01:10:45.440><c> wte</c><01:10:46.280><c> token</c>

01:10:46.590 --> 01:10:46.600 align:start position:0%
see that they get the wte token
 

01:10:46.600 --> 01:10:50.229 align:start position:0%
see that they get the wte token
embeddings<01:10:47.560><c> and</c><01:10:47.760><c> then</c><01:10:48.320><c> here</c><01:10:48.560><c> is</c><01:10:48.760><c> the</c><01:10:49.239><c> incoder</c>

01:10:50.229 --> 01:10:50.239 align:start position:0%
embeddings and then here is the incoder
 

01:10:50.239 --> 01:10:52.270 align:start position:0%
embeddings and then here is the incoder
of<01:10:50.440><c> the</c><01:10:50.560><c> token</c><01:10:50.840><c> embeddings</c><01:10:51.239><c> and</c><01:10:51.360><c> the</c>

01:10:52.270 --> 01:10:52.280 align:start position:0%
of the token embeddings and the
 

01:10:52.280 --> 01:10:54.310 align:start position:0%
of the token embeddings and the
position<01:10:53.280><c> and</c><01:10:53.400><c> then</c><01:10:53.600><c> here</c><01:10:53.800><c> at</c><01:10:53.920><c> the</c><01:10:54.040><c> bottom</c>

01:10:54.310 --> 01:10:54.320 align:start position:0%
position and then here at the bottom
 

01:10:54.320 --> 01:10:58.550 align:start position:0%
position and then here at the bottom
they<01:10:54.440><c> Ed</c><01:10:54.679><c> the</c><01:10:54.800><c> WT</c><01:10:55.719><c> again</c><01:10:56.440><c> to</c><01:10:56.640><c> do</c><01:10:56.880><c> the</c><01:10:57.040><c> lits</c><01:10:58.040><c> so</c>

01:10:58.550 --> 01:10:58.560 align:start position:0%
they Ed the WT again to do the lits so
 

01:10:58.560 --> 01:11:00.470 align:start position:0%
they Ed the WT again to do the lits so
when<01:10:58.679><c> they</c><01:10:58.840><c> get</c><01:10:58.920><c> the</c><01:10:59.040><c> loits</c><01:10:59.520><c> it's</c><01:10:59.600><c> a</c><01:10:59.760><c> math</c><01:11:00.040><c> Mo</c>

01:11:00.470 --> 01:11:00.480 align:start position:0%
when they get the loits it's a math Mo
 

01:11:00.480 --> 01:11:02.910 align:start position:0%
when they get the loits it's a math Mo
of<01:11:01.480><c> uh</c><01:11:01.600><c> this</c><01:11:01.719><c> output</c><01:11:02.040><c> from</c><01:11:02.120><c> the</c><01:11:02.239><c> Transformer</c>

01:11:02.910 --> 01:11:02.920 align:start position:0%
of uh this output from the Transformer
 

01:11:02.920 --> 01:11:05.350 align:start position:0%
of uh this output from the Transformer
and<01:11:03.199><c> the</c><01:11:03.400><c> wte</c><01:11:04.040><c> tensor</c><01:11:04.440><c> is</c>

01:11:05.350 --> 01:11:05.360 align:start position:0%
and the wte tensor is
 

01:11:05.360 --> 01:11:08.310 align:start position:0%
and the wte tensor is
reused<01:11:06.360><c> um</c><01:11:07.000><c> and</c><01:11:07.120><c> so</c><01:11:07.360><c> the</c><01:11:07.480><c> wte</c><01:11:08.000><c> tensor</c>

01:11:08.310 --> 01:11:08.320 align:start position:0%
reused um and so the wte tensor
 

01:11:08.320 --> 01:11:10.229 align:start position:0%
reused um and so the wte tensor
basically<01:11:08.640><c> is</c><01:11:08.760><c> used</c><01:11:09.080><c> twice</c><01:11:09.560><c> on</c><01:11:09.719><c> the</c><01:11:09.920><c> bottom</c><01:11:10.159><c> of</c>

01:11:10.229 --> 01:11:10.239 align:start position:0%
basically is used twice on the bottom of
 

01:11:10.239 --> 01:11:12.149 align:start position:0%
basically is used twice on the bottom of
the<01:11:10.360><c> Transformer</c><01:11:11.000><c> and</c><01:11:11.280><c> on</c><01:11:11.400><c> the</c><01:11:11.560><c> top</c><01:11:11.679><c> of</c><01:11:11.760><c> the</c>

01:11:12.149 --> 01:11:12.159 align:start position:0%
the Transformer and on the top of the
 

01:11:12.159 --> 01:11:14.630 align:start position:0%
the Transformer and on the top of the
Transformer<01:11:13.159><c> and</c><01:11:13.360><c> in</c><01:11:13.480><c> the</c><01:11:13.640><c> backward</c><01:11:14.040><c> pass</c>

01:11:14.630 --> 01:11:14.640 align:start position:0%
Transformer and in the backward pass
 

01:11:14.640 --> 01:11:17.070 align:start position:0%
Transformer and in the backward pass
we'll<01:11:14.920><c> get</c><01:11:15.280><c> gradients</c><01:11:16.080><c> contributions</c><01:11:16.760><c> from</c>

01:11:17.070 --> 01:11:17.080 align:start position:0%
we'll get gradients contributions from
 

01:11:17.080 --> 01:11:18.990 align:start position:0%
we'll get gradients contributions from
both<01:11:17.400><c> branches</c><01:11:18.159><c> right</c><01:11:18.360><c> and</c><01:11:18.480><c> these</c><01:11:18.640><c> gradients</c>

01:11:18.990 --> 01:11:19.000 align:start position:0%
both branches right and these gradients
 

01:11:19.000 --> 01:11:23.550 align:start position:0%
both branches right and these gradients
will<01:11:19.280><c> add</c><01:11:19.480><c> up</c><01:11:20.440><c> um</c><01:11:20.760><c> on</c><01:11:20.960><c> the</c><01:11:21.120><c> wte</c><01:11:22.040><c> tensor</c><01:11:23.040><c> um</c><01:11:23.400><c> so</c>

01:11:23.550 --> 01:11:23.560 align:start position:0%
will add up um on the wte tensor um so
 

01:11:23.560 --> 01:11:24.630 align:start position:0%
will add up um on the wte tensor um so
we'll<01:11:23.719><c> get</c><01:11:23.800><c> a</c><01:11:23.920><c> contribution</c><01:11:24.360><c> from</c><01:11:24.480><c> the</c>

01:11:24.630 --> 01:11:24.640 align:start position:0%
we'll get a contribution from the
 

01:11:24.640 --> 01:11:25.870 align:start position:0%
we'll get a contribution from the
classifier<01:11:25.080><c> list</c>

01:11:25.870 --> 01:11:25.880 align:start position:0%
classifier list
 

01:11:25.880 --> 01:11:26.990 align:start position:0%
classifier list
and<01:11:26.000><c> then</c><01:11:26.239><c> at</c><01:11:26.320><c> the</c><01:11:26.480><c> very</c><01:11:26.679><c> end</c><01:11:26.800><c> of</c><01:11:26.920><c> the</c>

01:11:26.990 --> 01:11:27.000 align:start position:0%
and then at the very end of the
 

01:11:27.000 --> 01:11:28.950 align:start position:0%
and then at the very end of the
Transformer<01:11:27.520><c> we'll</c><01:11:27.679><c> get</c><01:11:27.800><c> a</c><01:11:27.920><c> contribution</c><01:11:28.760><c> at</c>

01:11:28.950 --> 01:11:28.960 align:start position:0%
Transformer we'll get a contribution at
 

01:11:28.960 --> 01:11:31.430 align:start position:0%
Transformer we'll get a contribution at
the<01:11:29.159><c> at</c><01:11:29.239><c> the</c><01:11:29.400><c> bottom</c><01:11:29.640><c> of</c><01:11:29.760><c> it</c><01:11:30.360><c> float</c><01:11:30.760><c> floating</c>

01:11:31.430 --> 01:11:31.440 align:start position:0%
the at the bottom of it float floating
 

01:11:31.440 --> 01:11:35.270 align:start position:0%
the at the bottom of it float floating
again<01:11:31.679><c> into</c><01:11:31.880><c> the</c><01:11:32.360><c> wte</c><01:11:33.360><c> uh</c><01:11:33.600><c> tensor</c><01:11:34.600><c> so</c><01:11:34.960><c> we</c><01:11:35.080><c> want</c>

01:11:35.270 --> 01:11:35.280 align:start position:0%
again into the wte uh tensor so we want
 

01:11:35.280 --> 01:11:38.310 align:start position:0%
again into the wte uh tensor so we want
to<01:11:35.880><c> we</c><01:11:36.000><c> are</c><01:11:36.159><c> currently</c><01:11:36.640><c> not</c><01:11:36.920><c> sharing</c><01:11:37.520><c> WT</c><01:11:38.159><c> and</c>

01:11:38.310 --> 01:11:38.320 align:start position:0%
to we are currently not sharing WT and
 

01:11:38.320 --> 01:11:40.870 align:start position:0%
to we are currently not sharing WT and
our<01:11:38.600><c> code</c><01:11:39.199><c> but</c><01:11:39.360><c> we</c><01:11:39.480><c> want</c><01:11:39.600><c> to</c><01:11:39.760><c> do</c>

01:11:40.870 --> 01:11:40.880 align:start position:0%
our code but we want to do
 

01:11:40.880 --> 01:11:44.310 align:start position:0%
our code but we want to do
that<01:11:41.880><c> um</c>

01:11:44.310 --> 01:11:44.320 align:start position:0%
that um
 

01:11:44.320 --> 01:11:48.310 align:start position:0%
that um
so<01:11:45.320><c> weight</c><01:11:45.560><c> sharing</c><01:11:46.280><c> scheme</c><01:11:47.280><c> um</c><01:11:47.600><c> and</c><01:11:47.960><c> one</c><01:11:48.199><c> way</c>

01:11:48.310 --> 01:11:48.320 align:start position:0%
so weight sharing scheme um and one way
 

01:11:48.320 --> 01:11:50.950 align:start position:0%
so weight sharing scheme um and one way
to<01:11:48.480><c> do</c><01:11:48.679><c> this</c><01:11:48.880><c> let's</c><01:11:49.000><c> see</c><01:11:49.120><c> if</c><01:11:49.280><c> goil</c><01:11:49.679><c> gets</c><01:11:49.880><c> it</c><01:11:50.800><c> oh</c>

01:11:50.950 --> 01:11:50.960 align:start position:0%
to do this let's see if goil gets it oh
 

01:11:50.960 --> 01:11:54.550 align:start position:0%
to do this let's see if goil gets it oh
it<01:11:51.120><c> does</c><01:11:51.679><c> okay</c><01:11:52.520><c> uh</c><01:11:52.719><c> so</c><01:11:53.639><c> this</c><01:11:53.760><c> is</c><01:11:53.960><c> one</c><01:11:54.159><c> way</c><01:11:54.280><c> to</c><01:11:54.440><c> do</c>

01:11:54.550 --> 01:11:54.560 align:start position:0%
it does okay uh so this is one way to do
 

01:11:54.560 --> 01:11:56.229 align:start position:0%
it does okay uh so this is one way to do
it

01:11:56.229 --> 01:11:56.239 align:start position:0%
it
 

01:11:56.239 --> 01:11:56.950 align:start position:0%
it
uh

01:11:56.950 --> 01:11:56.960 align:start position:0%
uh
 

01:11:56.960 --> 01:11:58.990 align:start position:0%
uh
basically<01:11:57.960><c> relatively</c><01:11:58.400><c> straightforward</c>

01:11:58.990 --> 01:11:59.000 align:start position:0%
basically relatively straightforward
 

01:11:59.000 --> 01:12:00.270 align:start position:0%
basically relatively straightforward
what<01:11:59.080><c> we're</c><01:11:59.239><c> doing</c><01:11:59.480><c> here</c><01:11:59.679><c> is</c><01:11:59.800><c> we're</c><01:12:00.040><c> taking</c>

01:12:00.270 --> 01:12:00.280 align:start position:0%
what we're doing here is we're taking
 

01:12:00.280 --> 01:12:04.590 align:start position:0%
what we're doing here is we're taking
the<01:12:00.480><c> wte</c><01:12:01.320><c> do</c><01:12:01.560><c> weight</c><01:12:02.480><c> and</c><01:12:02.639><c> we're</c><01:12:02.840><c> simply</c><01:12:03.760><c> uh</c>

01:12:04.590 --> 01:12:04.600 align:start position:0%
the wte do weight and we're simply uh
 

01:12:04.600 --> 01:12:08.510 align:start position:0%
the wte do weight and we're simply uh
redirecting<01:12:05.600><c> it</c><01:12:05.880><c> to</c><01:12:06.080><c> point</c><01:12:06.320><c> to</c><01:12:06.560><c> the</c><01:12:06.760><c> LM</c><01:12:07.520><c> head</c>

01:12:08.510 --> 01:12:08.520 align:start position:0%
redirecting it to point to the LM head
 

01:12:08.520 --> 01:12:11.950 align:start position:0%
redirecting it to point to the LM head
so<01:12:09.320><c> um</c><01:12:10.000><c> this</c><01:12:10.600><c> basically</c><01:12:11.199><c> copies</c><01:12:11.560><c> the</c><01:12:11.719><c> data</c>

01:12:11.950 --> 01:12:11.960 align:start position:0%
so um this basically copies the data
 

01:12:11.960 --> 01:12:14.350 align:start position:0%
so um this basically copies the data
pointer<01:12:12.440><c> right</c><01:12:12.600><c> it</c><01:12:12.719><c> copies</c><01:12:13.040><c> the</c><01:12:13.360><c> reference</c>

01:12:14.350 --> 01:12:14.360 align:start position:0%
pointer right it copies the reference
 

01:12:14.360 --> 01:12:17.870 align:start position:0%
pointer right it copies the reference
and<01:12:14.560><c> now</c><01:12:15.000><c> the</c><01:12:15.159><c> wte</c><01:12:16.080><c> weight</c><01:12:16.600><c> becomes</c><01:12:16.960><c> orphaned</c>

01:12:17.870 --> 01:12:17.880 align:start position:0%
and now the wte weight becomes orphaned
 

01:12:17.880 --> 01:12:20.830 align:start position:0%
and now the wte weight becomes orphaned
uh<01:12:18.000><c> the</c><01:12:18.080><c> old</c><01:12:18.360><c> value</c><01:12:18.639><c> of</c><01:12:18.760><c> it</c><01:12:19.639><c> and</c><01:12:20.159><c> uh</c><01:12:20.360><c> pytorch</c>

01:12:20.830 --> 01:12:20.840 align:start position:0%
uh the old value of it and uh pytorch
 

01:12:20.840 --> 01:12:23.310 align:start position:0%
uh the old value of it and uh pytorch
will<01:12:21.000><c> clean</c><01:12:21.239><c> it</c><01:12:21.400><c> up</c><01:12:21.719><c> python</c><01:12:22.040><c> will</c><01:12:22.199><c> clean</c><01:12:22.440><c> it</c><01:12:22.560><c> up</c>

01:12:23.310 --> 01:12:23.320 align:start position:0%
will clean it up python will clean it up
 

01:12:23.320 --> 01:12:26.270 align:start position:0%
will clean it up python will clean it up
and<01:12:23.440><c> so</c><01:12:23.800><c> we</c><01:12:23.960><c> are</c><01:12:24.199><c> only</c><01:12:24.520><c> left</c><01:12:24.760><c> with</c><01:12:24.920><c> a</c><01:12:25.239><c> single</c>

01:12:26.270 --> 01:12:26.280 align:start position:0%
and so we are only left with a single
 

01:12:26.280 --> 01:12:28.629 align:start position:0%
and so we are only left with a single
tensor<01:12:27.280><c> and</c><01:12:27.400><c> it's</c><01:12:27.560><c> going</c><01:12:27.639><c> to</c><01:12:27.760><c> be</c><01:12:27.880><c> used</c><01:12:28.280><c> twice</c>

01:12:28.629 --> 01:12:28.639 align:start position:0%
tensor and it's going to be used twice
 

01:12:28.639 --> 01:12:31.950 align:start position:0%
tensor and it's going to be used twice
in<01:12:28.719><c> the</c><01:12:28.840><c> forward</c><01:12:29.280><c> pass</c><01:12:30.280><c> and</c><01:12:30.840><c> uh</c><01:12:31.040><c> this</c><01:12:31.159><c> is</c><01:12:31.560><c> to</c><01:12:31.800><c> my</c>

01:12:31.950 --> 01:12:31.960 align:start position:0%
in the forward pass and uh this is to my
 

01:12:31.960 --> 01:12:34.070 align:start position:0%
in the forward pass and uh this is to my
knowledge<01:12:32.840><c> all</c><01:12:33.040><c> that's</c><01:12:33.320><c> required</c><01:12:33.800><c> so</c><01:12:34.000><c> we</c>

01:12:34.070 --> 01:12:34.080 align:start position:0%
knowledge all that's required so we
 

01:12:34.080 --> 01:12:36.510 align:start position:0%
knowledge all that's required so we
should<01:12:34.239><c> be</c><01:12:34.360><c> able</c><01:12:34.560><c> to</c><01:12:35.560><c> use</c><01:12:35.880><c> this</c><01:12:36.239><c> and</c><01:12:36.400><c> this</c>

01:12:36.510 --> 01:12:36.520 align:start position:0%
should be able to use this and this
 

01:12:36.520 --> 01:12:39.030 align:start position:0%
should be able to use this and this
should<01:12:36.920><c> probably</c><01:12:37.679><c> train</c><01:12:38.679><c> uh</c><01:12:38.800><c> we're</c><01:12:38.920><c> just</c>

01:12:39.030 --> 01:12:39.040 align:start position:0%
should probably train uh we're just
 

01:12:39.040 --> 01:12:40.830 align:start position:0%
should probably train uh we're just
going<01:12:39.120><c> to</c><01:12:39.280><c> basically</c><01:12:39.560><c> be</c><01:12:39.719><c> using</c><01:12:40.320><c> this</c><01:12:40.600><c> exact</c>

01:12:40.830 --> 01:12:40.840 align:start position:0%
going to basically be using this exact
 

01:12:40.840 --> 01:12:43.990 align:start position:0%
going to basically be using this exact
same<01:12:40.960><c> sensor</c><01:12:41.520><c> twice</c><01:12:42.520><c> and</c>

01:12:43.990 --> 01:12:44.000 align:start position:0%
same sensor twice and
 

01:12:44.000 --> 01:12:46.229 align:start position:0%
same sensor twice and
um<01:12:45.000><c> we</c><01:12:45.120><c> weren't</c><01:12:45.440><c> being</c><01:12:45.679><c> careful</c><01:12:46.040><c> with</c>

01:12:46.229 --> 01:12:46.239 align:start position:0%
um we weren't being careful with
 

01:12:46.239 --> 01:12:48.550 align:start position:0%
um we weren't being careful with
tracking<01:12:46.600><c> the</c><01:12:46.719><c> likelihoods</c><01:12:47.679><c> but</c><01:12:48.199><c> uh</c>

01:12:48.550 --> 01:12:48.560 align:start position:0%
tracking the likelihoods but uh
 

01:12:48.560 --> 01:12:49.990 align:start position:0%
tracking the likelihoods but uh
according<01:12:48.800><c> to</c><01:12:48.960><c> the</c><01:12:49.080><c> paper</c><01:12:49.480><c> and</c><01:12:49.600><c> according</c><01:12:49.880><c> to</c>

01:12:49.990 --> 01:12:50.000 align:start position:0%
according to the paper and according to
 

01:12:50.000 --> 01:12:50.990 align:start position:0%
according to the paper and according to
the<01:12:50.080><c> results</c><01:12:50.360><c> you'd</c><01:12:50.560><c> actually</c><01:12:50.760><c> expect</c>

01:12:50.990 --> 01:12:51.000 align:start position:0%
the results you'd actually expect
 

01:12:51.000 --> 01:12:53.229 align:start position:0%
the results you'd actually expect
slightly<01:12:51.320><c> better</c><01:12:51.560><c> results</c><01:12:51.880><c> doing</c><01:12:52.159><c> this</c><01:12:53.040><c> and</c>

01:12:53.229 --> 01:12:53.239 align:start position:0%
slightly better results doing this and
 

01:12:53.239 --> 01:12:54.830 align:start position:0%
slightly better results doing this and
in<01:12:53.400><c> addition</c><01:12:53.639><c> to</c><01:12:53.840><c> that</c><01:12:54.040><c> one</c><01:12:54.239><c> other</c><01:12:54.560><c> reason</c>

01:12:54.830 --> 01:12:54.840 align:start position:0%
in addition to that one other reason
 

01:12:54.840 --> 01:12:57.110 align:start position:0%
in addition to that one other reason
that<01:12:54.960><c> this</c><01:12:55.239><c> is</c><01:12:55.400><c> very</c><01:12:55.560><c> very</c><01:12:55.800><c> nice</c><01:12:56.120><c> for</c><01:12:56.360><c> us</c><01:12:56.960><c> is</c>

01:12:57.110 --> 01:12:57.120 align:start position:0%
that this is very very nice for us is
 

01:12:57.120 --> 01:12:59.629 align:start position:0%
that this is very very nice for us is
that<01:12:57.280><c> this</c><01:12:57.400><c> is</c><01:12:57.520><c> a</c><01:12:57.719><c> ton</c><01:12:57.920><c> of</c><01:12:58.120><c> parameters</c><01:12:58.920><c> right</c>

01:12:59.629 --> 01:12:59.639 align:start position:0%
that this is a ton of parameters right
 

01:12:59.639 --> 01:13:03.950 align:start position:0%
that this is a ton of parameters right
uh<01:12:59.760><c> what</c><01:12:59.840><c> is</c><01:13:00.000><c> the</c><01:13:00.159><c> size</c><01:13:00.560><c> here</c><01:13:00.840><c> it's</c><01:13:01.239><c> 768</c><01:13:02.239><c> *</c>

01:13:03.950 --> 01:13:03.960 align:start position:0%
uh what is the size here it's 768 *
 

01:13:03.960 --> 01:13:07.310 align:start position:0%
uh what is the size here it's 768 *
50257<01:13:04.960><c> so</c><01:13:05.159><c> This</c><01:13:05.239><c> Is</c><01:13:05.400><c> 40</c><01:13:05.800><c> million</c><01:13:06.320><c> parameters</c>

01:13:07.310 --> 01:13:07.320 align:start position:0%
50257 so This Is 40 million parameters
 

01:13:07.320 --> 01:13:09.750 align:start position:0%
50257 so This Is 40 million parameters
and<01:13:07.440><c> this</c><01:13:07.520><c> is</c><01:13:07.639><c> a</c><01:13:07.920><c> 124</c><01:13:08.679><c> million</c><01:13:09.280><c> parameter</c>

01:13:09.750 --> 01:13:09.760 align:start position:0%
and this is a 124 million parameter
 

01:13:09.760 --> 01:13:12.870 align:start position:0%
and this is a 124 million parameter
model<01:13:10.480><c> so</c><01:13:10.679><c> 40</c><01:13:11.199><c> divide</c><01:13:11.520><c> 124</c><01:13:12.239><c> so</c><01:13:12.400><c> this</c><01:13:12.480><c> is</c><01:13:12.639><c> like</c>

01:13:12.870 --> 01:13:12.880 align:start position:0%
model so 40 divide 124 so this is like
 

01:13:12.880 --> 01:13:15.950 align:start position:0%
model so 40 divide 124 so this is like
30%<01:13:13.840><c> of</c><01:13:13.960><c> the</c><01:13:14.120><c> parameters</c><01:13:14.679><c> are</c><01:13:14.840><c> being</c><01:13:15.120><c> saved</c>

01:13:15.950 --> 01:13:15.960 align:start position:0%
30% of the parameters are being saved
 

01:13:15.960 --> 01:13:18.750 align:start position:0%
30% of the parameters are being saved
using<01:13:16.280><c> this</c><01:13:16.440><c> weight</c><01:13:16.679><c> time</c><01:13:17.159><c> scheme</c><01:13:18.159><c> and</c><01:13:18.360><c> so</c>

01:13:18.750 --> 01:13:18.760 align:start position:0%
using this weight time scheme and so
 

01:13:18.760 --> 01:13:19.990 align:start position:0%
using this weight time scheme and so
this<01:13:18.880><c> might</c><01:13:19.040><c> be</c><01:13:19.239><c> one</c><01:13:19.360><c> of</c><01:13:19.440><c> the</c><01:13:19.520><c> reasons</c><01:13:19.840><c> that</c>

01:13:19.990 --> 01:13:20.000 align:start position:0%
this might be one of the reasons that
 

01:13:20.000 --> 01:13:21.669 align:start position:0%
this might be one of the reasons that
this<01:13:20.080><c> is</c><01:13:20.320><c> working</c><01:13:20.639><c> slightly</c><01:13:21.000><c> better</c><01:13:21.560><c> if</c>

01:13:21.669 --> 01:13:21.679 align:start position:0%
this is working slightly better if
 

01:13:21.679 --> 01:13:22.910 align:start position:0%
this is working slightly better if
you're<01:13:21.800><c> not</c><01:13:21.920><c> training</c><01:13:22.280><c> the</c><01:13:22.360><c> model</c><01:13:22.679><c> long</c>

01:13:22.910 --> 01:13:22.920 align:start position:0%
you're not training the model long
 

01:13:22.920 --> 01:13:25.390 align:start position:0%
you're not training the model long
enough<01:13:23.920><c> because</c><01:13:24.120><c> of</c><01:13:24.239><c> the</c><01:13:24.360><c> weight</c><01:13:24.560><c> tying</c><01:13:25.280><c> uh</c>

01:13:25.390 --> 01:13:25.400 align:start position:0%
enough because of the weight tying uh
 

01:13:25.400 --> 01:13:26.470 align:start position:0%
enough because of the weight tying uh
you<01:13:25.480><c> don't</c><01:13:25.679><c> have</c><01:13:25.760><c> to</c><01:13:25.880><c> train</c><01:13:26.159><c> as</c><01:13:26.280><c> many</c>

01:13:26.470 --> 01:13:26.480 align:start position:0%
you don't have to train as many
 

01:13:26.480 --> 01:13:27.910 align:start position:0%
you don't have to train as many
parameters<01:13:27.080><c> and</c><01:13:27.159><c> so</c><01:13:27.280><c> you</c><01:13:27.440><c> become</c><01:13:27.679><c> more</c>

01:13:27.910 --> 01:13:27.920 align:start position:0%
parameters and so you become more
 

01:13:27.920 --> 01:13:30.669 align:start position:0%
parameters and so you become more
efficient<01:13:28.920><c> um</c><01:13:29.679><c> in</c><01:13:29.840><c> terms</c><01:13:30.040><c> of</c><01:13:30.159><c> the</c><01:13:30.280><c> training</c>

01:13:30.669 --> 01:13:30.679 align:start position:0%
efficient um in terms of the training
 

01:13:30.679 --> 01:13:32.550 align:start position:0%
efficient um in terms of the training
process<01:13:31.639><c> uh</c><01:13:31.760><c> because</c><01:13:31.960><c> you</c><01:13:32.040><c> have</c><01:13:32.199><c> fewer</c>

01:13:32.550 --> 01:13:32.560 align:start position:0%
process uh because you have fewer
 

01:13:32.560 --> 01:13:34.229 align:start position:0%
process uh because you have fewer
parameters<01:13:33.080><c> and</c><01:13:33.199><c> you're</c><01:13:33.320><c> putting</c><01:13:33.560><c> in</c><01:13:33.840><c> this</c>

01:13:34.229 --> 01:13:34.239 align:start position:0%
parameters and you're putting in this
 

01:13:34.239 --> 01:13:36.709 align:start position:0%
parameters and you're putting in this
inductive<01:13:34.800><c> bias</c><01:13:35.440><c> that</c><01:13:35.719><c> these</c><01:13:35.880><c> two</c><01:13:36.159><c> embeddings</c>

01:13:36.709 --> 01:13:36.719 align:start position:0%
inductive bias that these two embeddings
 

01:13:36.719 --> 01:13:40.110 align:start position:0%
inductive bias that these two embeddings
should<01:13:37.159><c> share</c><01:13:37.639><c> similarities</c><01:13:38.320><c> between</c><01:13:39.120><c> tokens</c>

01:13:40.110 --> 01:13:40.120 align:start position:0%
should share similarities between tokens
 

01:13:40.120 --> 01:13:42.390 align:start position:0%
should share similarities between tokens
so<01:13:40.440><c> this</c><01:13:40.560><c> is</c><01:13:40.679><c> the</c><01:13:40.760><c> way</c><01:13:40.920><c> time</c><01:13:41.199><c> scheme</c><01:13:41.880><c> and</c><01:13:42.199><c> we've</c>

01:13:42.390 --> 01:13:42.400 align:start position:0%
so this is the way time scheme and we've
 

01:13:42.400 --> 01:13:44.470 align:start position:0%
so this is the way time scheme and we've
saved<01:13:42.719><c> a</c><01:13:42.800><c> ton</c><01:13:42.960><c> of</c><01:13:43.120><c> parameters</c><01:13:43.960><c> and</c><01:13:44.080><c> we</c><01:13:44.239><c> expect</c>

01:13:44.470 --> 01:13:44.480 align:start position:0%
saved a ton of parameters and we expect
 

01:13:44.480 --> 01:13:45.830 align:start position:0%
saved a ton of parameters and we expect
our<01:13:44.600><c> model</c><01:13:44.840><c> to</c><01:13:44.920><c> work</c><01:13:45.120><c> slightly</c><01:13:45.480><c> better</c>

01:13:45.830 --> 01:13:45.840 align:start position:0%
our model to work slightly better
 

01:13:45.840 --> 01:13:47.950 align:start position:0%
our model to work slightly better
because<01:13:46.000><c> of</c><01:13:46.159><c> the</c><01:13:46.320><c> scheme</c><01:13:47.320><c> okay</c><01:13:47.520><c> next</c><01:13:47.760><c> I</c><01:13:47.840><c> would</c>

01:13:47.950 --> 01:13:47.960 align:start position:0%
because of the scheme okay next I would
 

01:13:47.960 --> 01:13:49.189 align:start position:0%
because of the scheme okay next I would
like<01:13:48.080><c> us</c><01:13:48.199><c> to</c><01:13:48.280><c> be</c><01:13:48.400><c> a</c><01:13:48.480><c> bit</c><01:13:48.600><c> more</c><01:13:48.719><c> careful</c><01:13:49.080><c> with</c>

01:13:49.189 --> 01:13:49.199 align:start position:0%
like us to be a bit more careful with
 

01:13:49.199 --> 01:13:50.870 align:start position:0%
like us to be a bit more careful with
the<01:13:49.280><c> initialization</c><01:13:50.040><c> and</c><01:13:50.120><c> to</c><01:13:50.280><c> try</c><01:13:50.440><c> to</c><01:13:50.560><c> follow</c>

01:13:50.870 --> 01:13:50.880 align:start position:0%
the initialization and to try to follow
 

01:13:50.880 --> 01:13:53.990 align:start position:0%
the initialization and to try to follow
the<01:13:51.000><c> way</c><01:13:51.159><c> gpt2</c><01:13:51.800><c> initialized</c><01:13:52.480><c> their</c><01:13:52.800><c> model</c><01:13:53.800><c> now</c>

01:13:53.990 --> 01:13:54.000 align:start position:0%
the way gpt2 initialized their model now
 

01:13:54.000 --> 01:13:55.950 align:start position:0%
the way gpt2 initialized their model now
unfortunately<01:13:54.760><c> the</c><01:13:55.080><c> gpt2</c><01:13:55.520><c> paper</c><01:13:55.760><c> and</c><01:13:55.880><c> the</c>

01:13:55.950 --> 01:13:55.960 align:start position:0%
unfortunately the gpt2 paper and the
 

01:13:55.960 --> 01:13:58.750 align:start position:0%
unfortunately the gpt2 paper and the
gpt3<01:13:56.560><c> paper</c><01:13:56.880><c> are</c><01:13:57.080><c> not</c><01:13:57.880><c> very</c><01:13:58.159><c> explicit</c><01:13:58.560><c> about</c>

01:13:58.750 --> 01:13:58.760 align:start position:0%
gpt3 paper are not very explicit about
 

01:13:58.760 --> 01:14:00.149 align:start position:0%
gpt3 paper are not very explicit about
initialization<01:13:59.440><c> so</c><01:13:59.560><c> we</c><01:13:59.679><c> kind</c><01:13:59.800><c> of</c><01:13:59.920><c> have</c><01:14:00.000><c> to</c>

01:14:00.149 --> 01:14:00.159 align:start position:0%
initialization so we kind of have to
 

01:14:00.159 --> 01:14:02.669 align:start position:0%
initialization so we kind of have to
read<01:14:00.360><c> between</c><01:14:00.639><c> the</c><01:14:01.159><c> lines</c><01:14:02.159><c> uh</c><01:14:02.239><c> and</c><01:14:02.360><c> instead</c><01:14:02.560><c> of</c>

01:14:02.669 --> 01:14:02.679 align:start position:0%
read between the lines uh and instead of
 

01:14:02.679 --> 01:14:04.910 align:start position:0%
read between the lines uh and instead of
going<01:14:02.800><c> to</c><01:14:02.920><c> the</c><01:14:03.080><c> paper</c><01:14:03.440><c> which</c><01:14:03.520><c> is</c><01:14:03.800><c> quite</c><01:14:04.080><c> vague</c>

01:14:04.910 --> 01:14:04.920 align:start position:0%
going to the paper which is quite vague
 

01:14:04.920 --> 01:14:07.430 align:start position:0%
going to the paper which is quite vague
um<01:14:05.440><c> there's</c><01:14:05.639><c> a</c><01:14:05.800><c> bit</c><01:14:06.440><c> of</c><01:14:06.600><c> information</c><01:14:07.080><c> in</c><01:14:07.239><c> the</c>

01:14:07.430 --> 01:14:07.440 align:start position:0%
um there's a bit of information in the
 

01:14:07.440 --> 01:14:09.149 align:start position:0%
um there's a bit of information in the
code<01:14:07.719><c> that</c><01:14:07.840><c> open</c><01:14:08.120><c> I</c><01:14:08.320><c> released</c><01:14:08.719><c> so</c><01:14:08.840><c> when</c><01:14:08.960><c> we</c><01:14:09.080><c> go</c>

01:14:09.149 --> 01:14:09.159 align:start position:0%
code that open I released so when we go
 

01:14:09.159 --> 01:14:11.270 align:start position:0%
code that open I released so when we go
to<01:14:09.280><c> the</c><01:14:09.560><c> model.py</c><01:14:10.560><c> we</c><01:14:10.679><c> see</c><01:14:10.880><c> that</c><01:14:11.000><c> when</c><01:14:11.159><c> they</c>

01:14:11.270 --> 01:14:11.280 align:start position:0%
to the model.py we see that when they
 

01:14:11.280 --> 01:14:13.950 align:start position:0%
to the model.py we see that when they
initialize<01:14:11.800><c> their</c><01:14:12.120><c> weights</c><01:14:13.120><c> they</c><01:14:13.239><c> are</c><01:14:13.440><c> using</c>

01:14:13.950 --> 01:14:13.960 align:start position:0%
initialize their weights they are using
 

01:14:13.960 --> 01:14:15.870 align:start position:0%
initialize their weights they are using
the<01:14:14.320><c> standard</c><01:14:14.679><c> deviation</c><01:14:15.040><c> of</c>

01:14:15.870 --> 01:14:15.880 align:start position:0%
the standard deviation of
 

01:14:15.880 --> 01:14:19.270 align:start position:0%
the standard deviation of
0.02<01:14:16.880><c> and</c><01:14:17.080><c> that's</c><01:14:17.280><c> how</c><01:14:17.520><c> they</c><01:14:18.159><c> they</c><01:14:18.800><c> so</c><01:14:19.000><c> this</c><01:14:19.159><c> is</c>

01:14:19.270 --> 01:14:19.280 align:start position:0%
0.02 and that's how they they so this is
 

01:14:19.280 --> 01:14:21.709 align:start position:0%
0.02 and that's how they they so this is
a<01:14:19.440><c> normal</c><01:14:19.800><c> distribution</c><01:14:20.520><c> for</c><01:14:20.760><c> the</c><01:14:20.920><c> weights</c>

01:14:21.709 --> 01:14:21.719 align:start position:0%
a normal distribution for the weights
 

01:14:21.719 --> 01:14:23.229 align:start position:0%
a normal distribution for the weights
and<01:14:21.840><c> the</c><01:14:22.000><c> standard</c><01:14:22.280><c> deviation</c><01:14:22.600><c> is</c>

01:14:23.229 --> 01:14:23.239 align:start position:0%
and the standard deviation is
 

01:14:23.239 --> 01:14:25.910 align:start position:0%
and the standard deviation is
0.02<01:14:24.239><c> for</c><01:14:24.440><c> the</c><01:14:24.600><c> bias</c><01:14:25.120><c> they</c><01:14:25.199><c> initialize</c><01:14:25.719><c> that</c>

01:14:25.910 --> 01:14:25.920 align:start position:0%
0.02 for the bias they initialize that
 

01:14:25.920 --> 01:14:26.870 align:start position:0%
0.02 for the bias they initialize that
with

01:14:26.870 --> 01:14:26.880 align:start position:0%
with
 

01:14:26.880 --> 01:14:30.590 align:start position:0%
with
zero<01:14:27.880><c> and</c><01:14:28.000><c> then</c><01:14:28.120><c> when</c><01:14:28.199><c> we</c><01:14:28.320><c> scroll</c><01:14:28.679><c> down</c>

01:14:30.590 --> 01:14:30.600 align:start position:0%
zero and then when we scroll down
 

01:14:30.600 --> 01:14:33.910 align:start position:0%
zero and then when we scroll down
here<01:14:31.600><c> why</c><01:14:31.719><c> is</c><01:14:31.840><c> this</c><01:14:31.960><c> not</c><01:14:32.320><c> scrolling</c>

01:14:33.910 --> 01:14:33.920 align:start position:0%
here why is this not scrolling
 

01:14:33.920 --> 01:14:36.390 align:start position:0%
here why is this not scrolling
um<01:14:34.920><c> the</c><01:14:35.199><c> token</c><01:14:35.480><c> embeddings</c><01:14:35.880><c> are</c><01:14:35.960><c> initialized</c>

01:14:36.390 --> 01:14:36.400 align:start position:0%
um the token embeddings are initialized
 

01:14:36.400 --> 01:14:37.030 align:start position:0%
um the token embeddings are initialized
at

01:14:37.030 --> 01:14:37.040 align:start position:0%
at
 

01:14:37.040 --> 01:14:40.270 align:start position:0%
at
0.02<01:14:38.040><c> and</c><01:14:38.400><c> position</c><01:14:38.679><c> embeddings</c><01:14:39.080><c> at</c><01:14:39.159><c> 0.01</c><01:14:40.080><c> for</c>

01:14:40.270 --> 01:14:40.280 align:start position:0%
0.02 and position embeddings at 0.01 for
 

01:14:40.280 --> 01:14:42.430 align:start position:0%
0.02 and position embeddings at 0.01 for
some<01:14:40.679><c> reason</c><01:14:41.679><c> so</c><01:14:41.880><c> those</c><01:14:42.040><c> are</c><01:14:42.239><c> the</c>

01:14:42.430 --> 01:14:42.440 align:start position:0%
some reason so those are the
 

01:14:42.440 --> 01:14:44.229 align:start position:0%
some reason so those are the
initializations<01:14:43.320><c> and</c><01:14:43.440><c> we'd</c><01:14:43.600><c> like</c><01:14:43.719><c> to</c><01:14:43.840><c> mirror</c>

01:14:44.229 --> 01:14:44.239 align:start position:0%
initializations and we'd like to mirror
 

01:14:44.239 --> 01:14:45.070 align:start position:0%
initializations and we'd like to mirror
that<01:14:44.440><c> in</c>

01:14:45.070 --> 01:14:45.080 align:start position:0%
that in
 

01:14:45.080 --> 01:14:48.270 align:start position:0%
that in
gpt2<01:14:46.080><c> uh</c><01:14:46.360><c> in</c><01:14:46.480><c> our</c><01:14:46.679><c> module</c><01:14:47.080><c> here</c><01:14:47.639><c> so</c><01:14:47.880><c> here's</c><01:14:48.159><c> a</c>

01:14:48.270 --> 01:14:48.280 align:start position:0%
gpt2 uh in our module here so here's a
 

01:14:48.280 --> 01:14:50.870 align:start position:0%
gpt2 uh in our module here so here's a
snippet<01:14:48.639><c> of</c><01:14:48.800><c> code</c><01:14:49.719><c> that</c><01:14:50.040><c> I</c><01:14:50.159><c> sort</c><01:14:50.360><c> of</c><01:14:50.560><c> came</c><01:14:50.719><c> up</c>

01:14:50.870 --> 01:14:50.880 align:start position:0%
snippet of code that I sort of came up
 

01:14:50.880 --> 01:14:52.709 align:start position:0%
snippet of code that I sort of came up
with<01:14:51.080><c> very</c>

01:14:52.709 --> 01:14:52.719 align:start position:0%
with very
 

01:14:52.719 --> 01:14:55.550 align:start position:0%
with very
quickly<01:14:53.719><c> so</c><01:14:54.320><c> what's</c><01:14:54.480><c> happening</c><01:14:54.800><c> here</c><01:14:55.239><c> is</c><01:14:55.440><c> at</c>

01:14:55.550 --> 01:14:55.560 align:start position:0%
quickly so what's happening here is at
 

01:14:55.560 --> 01:14:57.709 align:start position:0%
quickly so what's happening here is at
the<01:14:55.719><c> end</c><01:14:55.920><c> of</c><01:14:56.159><c> our</c><01:14:56.480><c> initializer</c><01:14:57.040><c> for</c><01:14:57.159><c> the</c><01:14:57.280><c> GPT</c>

01:14:57.709 --> 01:14:57.719 align:start position:0%
the end of our initializer for the GPT
 

01:14:57.719 --> 01:14:59.790 align:start position:0%
the end of our initializer for the GPT
module<01:14:58.320><c> we're</c><01:14:58.520><c> calling</c><01:14:58.880><c> the</c><01:14:59.040><c> apply</c><01:14:59.440><c> function</c>

01:14:59.790 --> 01:14:59.800 align:start position:0%
module we're calling the apply function
 

01:14:59.800 --> 01:15:02.470 align:start position:0%
module we're calling the apply function
of<01:14:59.960><c> NN</c><01:15:00.320><c> module</c><01:15:01.040><c> and</c><01:15:01.199><c> that</c><01:15:01.360><c> iterates</c><01:15:01.880><c> all</c><01:15:02.080><c> the</c>

01:15:02.470 --> 01:15:02.480 align:start position:0%
of NN module and that iterates all the
 

01:15:02.480 --> 01:15:05.830 align:start position:0%
of NN module and that iterates all the
sub<01:15:02.840><c> modules</c><01:15:03.480><c> of</c><01:15:03.679><c> this</c><01:15:04.159><c> module</c><01:15:05.159><c> and</c><01:15:05.679><c> uh</c>

01:15:05.830 --> 01:15:05.840 align:start position:0%
sub modules of this module and uh
 

01:15:05.840 --> 01:15:08.830 align:start position:0%
sub modules of this module and uh
applies<01:15:06.360><c> in</c><01:15:06.520><c> it</c><01:15:06.679><c> weights</c><01:15:07.040><c> function</c><01:15:07.440><c> on</c><01:15:07.840><c> them</c>

01:15:08.830 --> 01:15:08.840 align:start position:0%
applies in it weights function on them
 

01:15:08.840 --> 01:15:10.990 align:start position:0%
applies in it weights function on them
and<01:15:08.960><c> so</c><01:15:09.360><c> what's</c><01:15:09.560><c> happening</c><01:15:09.960><c> here</c><01:15:10.639><c> is</c><01:15:10.800><c> that</c>

01:15:10.990 --> 01:15:11.000 align:start position:0%
and so what's happening here is that
 

01:15:11.000 --> 01:15:13.149 align:start position:0%
and so what's happening here is that
we're<01:15:11.280><c> in</c><01:15:11.600><c> we're</c><01:15:11.800><c> iterating</c><01:15:12.480><c> all</c><01:15:12.600><c> the</c><01:15:12.719><c> modules</c>

01:15:13.149 --> 01:15:13.159 align:start position:0%
we're in we're iterating all the modules
 

01:15:13.159 --> 01:15:16.030 align:start position:0%
we're in we're iterating all the modules
here<01:15:13.880><c> and</c><01:15:14.199><c> if</c><01:15:14.400><c> they</c><01:15:14.520><c> are</c><01:15:14.800><c> an</c><01:15:15.120><c> nn.</c><01:15:15.639><c> linear</c>

01:15:16.030 --> 01:15:16.040 align:start position:0%
here and if they are an nn. linear
 

01:15:16.040 --> 01:15:17.790 align:start position:0%
here and if they are an nn. linear
module<01:15:16.719><c> then</c><01:15:16.840><c> we're</c><01:15:17.000><c> going</c><01:15:17.080><c> to</c><01:15:17.360><c> make</c><01:15:17.480><c> sure</c><01:15:17.639><c> to</c>

01:15:17.790 --> 01:15:17.800 align:start position:0%
module then we're going to make sure to
 

01:15:17.800 --> 01:15:19.910 align:start position:0%
module then we're going to make sure to
initialize<01:15:18.280><c> the</c><01:15:18.440><c> weight</c><01:15:18.880><c> using</c><01:15:19.199><c> a</c><01:15:19.400><c> normal</c>

01:15:19.910 --> 01:15:19.920 align:start position:0%
initialize the weight using a normal
 

01:15:19.920 --> 01:15:21.510 align:start position:0%
initialize the weight using a normal
with<01:15:20.040><c> the</c><01:15:20.159><c> standard</c><01:15:20.400><c> deviation</c><01:15:20.719><c> of</c>

01:15:21.510 --> 01:15:21.520 align:start position:0%
with the standard deviation of
 

01:15:21.520 --> 01:15:23.990 align:start position:0%
with the standard deviation of
0.02<01:15:22.520><c> if</c><01:15:22.679><c> there's</c><01:15:22.880><c> a</c><01:15:23.080><c> bias</c><01:15:23.400><c> in</c><01:15:23.520><c> this</c><01:15:23.639><c> layer</c><01:15:23.880><c> we</c>

01:15:23.990 --> 01:15:24.000 align:start position:0%
0.02 if there's a bias in this layer we
 

01:15:24.000 --> 01:15:25.430 align:start position:0%
0.02 if there's a bias in this layer we
will<01:15:24.120><c> make</c><01:15:24.199><c> sure</c><01:15:24.360><c> to</c><01:15:24.520><c> initialize</c><01:15:25.040><c> that</c><01:15:25.199><c> to</c>

01:15:25.430 --> 01:15:25.440 align:start position:0%
will make sure to initialize that to
 

01:15:25.440 --> 01:15:28.310 align:start position:0%
will make sure to initialize that to
zero<01:15:26.360><c> note</c><01:15:26.679><c> that</c><01:15:27.280><c> zero</c><01:15:27.600><c> initialization</c><01:15:28.159><c> for</c>

01:15:28.310 --> 01:15:28.320 align:start position:0%
zero note that zero initialization for
 

01:15:28.320 --> 01:15:29.950 align:start position:0%
zero note that zero initialization for
the<01:15:28.400><c> bias</c><01:15:28.719><c> is</c><01:15:28.840><c> not</c><01:15:29.040><c> actually</c><01:15:29.280><c> the</c><01:15:29.400><c> pyto</c>

01:15:29.950 --> 01:15:29.960 align:start position:0%
the bias is not actually the pyto
 

01:15:29.960 --> 01:15:33.430 align:start position:0%
the bias is not actually the pyto
default<01:15:31.040><c> um</c><01:15:32.040><c> by</c><01:15:32.199><c> default</c><01:15:32.639><c> the</c><01:15:32.760><c> bias</c><01:15:33.120><c> here</c><01:15:33.239><c> is</c>

01:15:33.430 --> 01:15:33.440 align:start position:0%
default um by default the bias here is
 

01:15:33.440 --> 01:15:36.070 align:start position:0%
default um by default the bias here is
initialized<01:15:34.000><c> with</c><01:15:34.120><c> a</c><01:15:34.320><c> uniform</c><01:15:35.320><c> so</c><01:15:35.800><c> uh</c><01:15:35.920><c> that's</c>

01:15:36.070 --> 01:15:36.080 align:start position:0%
initialized with a uniform so uh that's
 

01:15:36.080 --> 01:15:38.950 align:start position:0%
initialized with a uniform so uh that's
interesting<01:15:37.040><c> so</c><01:15:37.199><c> we</c><01:15:37.360><c> make</c><01:15:37.480><c> sure</c><01:15:37.600><c> to</c><01:15:37.760><c> use</c><01:15:37.960><c> zero</c>

01:15:38.950 --> 01:15:38.960 align:start position:0%
interesting so we make sure to use zero
 

01:15:38.960 --> 01:15:39.990 align:start position:0%
interesting so we make sure to use zero
and<01:15:39.080><c> for</c><01:15:39.239><c> the</c><01:15:39.320><c> embedding</c><01:15:39.679><c> we're</c><01:15:39.800><c> just</c><01:15:39.920><c> going</c>

01:15:39.990 --> 01:15:40.000 align:start position:0%
and for the embedding we're just going
 

01:15:40.000 --> 01:15:43.830 align:start position:0%
and for the embedding we're just going
to<01:15:40.080><c> use</c><01:15:40.280><c> 0.02</c><01:15:41.280><c> and</c><01:15:41.760><c> um</c><01:15:42.239><c> keep</c><01:15:42.400><c> it</c><01:15:42.560><c> the</c><01:15:42.679><c> same</c><01:15:43.440><c> um</c>

01:15:43.830 --> 01:15:43.840 align:start position:0%
to use 0.02 and um keep it the same um
 

01:15:43.840 --> 01:15:45.590 align:start position:0%
to use 0.02 and um keep it the same um
so<01:15:44.040><c> we're</c><01:15:44.159><c> not</c><01:15:44.280><c> going</c><01:15:44.400><c> to</c><01:15:44.520><c> change</c><01:15:44.679><c> it</c><01:15:44.800><c> to</c><01:15:44.880><c> 0.01</c>

01:15:45.590 --> 01:15:45.600 align:start position:0%
so we're not going to change it to 0.01
 

01:15:45.600 --> 01:15:47.430 align:start position:0%
so we're not going to change it to 0.01
for<01:15:45.760><c> positional</c><01:15:46.360><c> because</c><01:15:46.600><c> it's</c><01:15:46.760><c> about</c><01:15:46.960><c> the</c>

01:15:47.430 --> 01:15:47.440 align:start position:0%
for positional because it's about the
 

01:15:47.440 --> 01:15:49.430 align:start position:0%
for positional because it's about the
same<01:15:48.440><c> and</c><01:15:48.560><c> then</c><01:15:48.679><c> if</c><01:15:48.800><c> you</c><01:15:48.960><c> look</c><01:15:49.120><c> through</c><01:15:49.280><c> our</c>

01:15:49.430 --> 01:15:49.440 align:start position:0%
same and then if you look through our
 

01:15:49.440 --> 01:15:51.390 align:start position:0%
same and then if you look through our
model<01:15:49.800><c> the</c><01:15:49.920><c> only</c><01:15:50.239><c> other</c><01:15:50.480><c> layer</c><01:15:50.840><c> that</c><01:15:50.960><c> requires</c>

01:15:51.390 --> 01:15:51.400 align:start position:0%
model the only other layer that requires
 

01:15:51.400 --> 01:15:53.550 align:start position:0%
model the only other layer that requires
initialization<01:15:52.360><c> and</c><01:15:52.480><c> that</c><01:15:52.639><c> has</c><01:15:52.840><c> parameters</c>

01:15:53.550 --> 01:15:53.560 align:start position:0%
initialization and that has parameters
 

01:15:53.560 --> 01:15:55.750 align:start position:0%
initialization and that has parameters
is<01:15:53.719><c> the</c><01:15:53.880><c> layer</c><01:15:54.120><c> norm</c><01:15:54.600><c> and</c><01:15:54.719><c> the</c><01:15:54.960><c> fighter</c><01:15:55.239><c> defer</c>

01:15:55.750 --> 01:15:55.760 align:start position:0%
is the layer norm and the fighter defer
 

01:15:55.760 --> 01:15:57.790 align:start position:0%
is the layer norm and the fighter defer
initialization<01:15:56.760><c> sets</c><01:15:57.080><c> the</c><01:15:57.239><c> scale</c><01:15:57.560><c> in</c><01:15:57.679><c> the</c>

01:15:57.790 --> 01:15:57.800 align:start position:0%
initialization sets the scale in the
 

01:15:57.800 --> 01:15:59.990 align:start position:0%
initialization sets the scale in the
layer<01:15:58.080><c> Norm</c><01:15:58.360><c> to</c><01:15:58.520><c> be</c><01:15:58.679><c> one</c><01:15:59.239><c> and</c><01:15:59.400><c> the</c><01:15:59.560><c> offset</c><01:15:59.920><c> in</c>

01:15:59.990 --> 01:16:00.000 align:start position:0%
layer Norm to be one and the offset in
 

01:16:00.000 --> 01:16:01.669 align:start position:0%
layer Norm to be one and the offset in
the<01:16:00.080><c> layer</c><01:16:00.320><c> Norm</c><01:16:00.560><c> to</c><01:16:00.639><c> be</c><01:16:00.760><c> zero</c><01:16:01.280><c> so</c><01:16:01.480><c> that's</c>

01:16:01.669 --> 01:16:01.679 align:start position:0%
the layer Norm to be zero so that's
 

01:16:01.679 --> 01:16:03.350 align:start position:0%
the layer Norm to be zero so that's
exactly<01:16:02.080><c> what</c><01:16:02.199><c> we</c><01:16:02.320><c> want</c><01:16:02.679><c> and</c><01:16:02.760><c> so</c><01:16:03.040><c> we're</c><01:16:03.199><c> just</c>

01:16:03.350 --> 01:16:03.360 align:start position:0%
exactly what we want and so we're just
 

01:16:03.360 --> 01:16:06.110 align:start position:0%
exactly what we want and so we're just
going<01:16:03.440><c> to</c><01:16:03.960><c> uh</c><01:16:04.120><c> keep</c><01:16:04.239><c> it</c><01:16:04.440><c> that</c><01:16:04.679><c> way</c><01:16:05.679><c> and</c><01:16:05.800><c> so</c><01:16:06.000><c> this</c>

01:16:06.110 --> 01:16:06.120 align:start position:0%
going to uh keep it that way and so this
 

01:16:06.120 --> 01:16:09.189 align:start position:0%
going to uh keep it that way and so this
is<01:16:06.320><c> the</c><01:16:06.920><c> default</c><01:16:07.560><c> initialization</c><01:16:08.560><c> if</c><01:16:08.719><c> we</c><01:16:08.880><c> are</c>

01:16:09.189 --> 01:16:09.199 align:start position:0%
is the default initialization if we are
 

01:16:09.199 --> 01:16:14.350 align:start position:0%
is the default initialization if we are
following<01:16:09.840><c> the</c><01:16:11.120><c> um</c><01:16:12.120><c> where</c><01:16:12.239><c> is</c><01:16:12.400><c> it</c><01:16:12.760><c> the</c><01:16:13.280><c> uh</c><01:16:13.400><c> gpt2</c>

01:16:14.350 --> 01:16:14.360 align:start position:0%
following the um where is it the uh gpt2
 

01:16:14.360 --> 01:16:17.110 align:start position:0%
following the um where is it the uh gpt2
uh<01:16:15.199><c> source</c><01:16:15.480><c> code</c><01:16:15.719><c> that</c><01:16:15.800><c> they</c><01:16:16.040><c> released</c><01:16:17.040><c> I</c>

01:16:17.110 --> 01:16:17.120 align:start position:0%
uh source code that they released I
 

01:16:17.120 --> 01:16:19.350 align:start position:0%
uh source code that they released I
would<01:16:17.280><c> like</c><01:16:17.400><c> to</c><01:16:17.520><c> point</c><01:16:17.679><c> out</c><01:16:17.840><c> by</c><01:16:17.960><c> the</c><01:16:18.080><c> way</c><01:16:18.360><c> that</c>

01:16:19.350 --> 01:16:19.360 align:start position:0%
would like to point out by the way that
 

01:16:19.360 --> 01:16:21.470 align:start position:0%
would like to point out by the way that
um<01:16:19.800><c> typically</c><01:16:20.199><c> the</c><01:16:20.320><c> standard</c><01:16:20.639><c> deviation</c><01:16:21.159><c> here</c>

01:16:21.470 --> 01:16:21.480 align:start position:0%
um typically the standard deviation here
 

01:16:21.480 --> 01:16:23.149 align:start position:0%
um typically the standard deviation here
on<01:16:21.719><c> this</c><01:16:21.920><c> initialization</c><01:16:22.600><c> if</c><01:16:22.719><c> you</c><01:16:22.800><c> follow</c><01:16:23.080><c> the</c>

01:16:23.149 --> 01:16:23.159 align:start position:0%
on this initialization if you follow the
 

01:16:23.159 --> 01:16:24.950 align:start position:0%
on this initialization if you follow the
Javier<01:16:23.520><c> initialization</c><01:16:24.400><c> would</c><01:16:24.520><c> be</c><01:16:24.639><c> one</c><01:16:24.760><c> of</c>

01:16:24.950 --> 01:16:24.960 align:start position:0%
Javier initialization would be one of
 

01:16:24.960 --> 01:16:27.189 align:start position:0%
Javier initialization would be one of
over<01:16:25.159><c> the</c><01:16:25.280><c> square</c><01:16:25.520><c> root</c><01:16:26.199><c> of</c><01:16:26.520><c> the</c><01:16:26.840><c> number</c><01:16:27.040><c> of</c>

01:16:27.189 --> 01:16:27.199 align:start position:0%
over the square root of the number of
 

01:16:27.199 --> 01:16:28.790 align:start position:0%
over the square root of the number of
features<01:16:27.600><c> that</c><01:16:27.719><c> are</c><01:16:27.920><c> incoming</c><01:16:28.400><c> into</c><01:16:28.639><c> this</c>

01:16:28.790 --> 01:16:28.800 align:start position:0%
features that are incoming into this
 

01:16:28.800 --> 01:16:32.030 align:start position:0%
features that are incoming into this
layer<01:16:29.719><c> but</c><01:16:29.840><c> if</c><01:16:29.920><c> you'll</c><01:16:30.120><c> notice</c><01:16:30.600><c> actually</c><01:16:31.159><c> 0.02</c>

01:16:32.030 --> 01:16:32.040 align:start position:0%
layer but if you'll notice actually 0.02
 

01:16:32.040 --> 01:16:34.070 align:start position:0%
layer but if you'll notice actually 0.02
is<01:16:32.239><c> basically</c><01:16:32.600><c> consistent</c><01:16:33.199><c> with</c><01:16:33.400><c> that</c>

01:16:34.070 --> 01:16:34.080 align:start position:0%
is basically consistent with that
 

01:16:34.080 --> 01:16:36.270 align:start position:0%
is basically consistent with that
because<01:16:34.719><c> the</c><01:16:34.880><c> the</c><01:16:35.159><c> model</c><01:16:35.440><c> sizes</c><01:16:35.840><c> inside</c><01:16:36.120><c> these</c>

01:16:36.270 --> 01:16:36.280 align:start position:0%
because the the model sizes inside these
 

01:16:36.280 --> 01:16:39.070 align:start position:0%
because the the model sizes inside these
Transformers<01:16:36.719><c> for</c><01:16:36.880><c> gpt2</c><01:16:37.520><c> are</c><01:16:37.719><c> roughly</c><01:16:38.080><c> 768</c>

01:16:39.070 --> 01:16:39.080 align:start position:0%
Transformers for gpt2 are roughly 768
 

01:16:39.080 --> 01:16:41.950 align:start position:0%
Transformers for gpt2 are roughly 768
1600<01:16:39.679><c> Etc</c><01:16:40.560><c> so</c><01:16:40.719><c> 1</c><01:16:40.960><c> over</c><01:16:41.199><c> the</c><01:16:41.320><c> square</c><01:16:41.560><c> root</c><01:16:41.800><c> of</c>

01:16:41.950 --> 01:16:41.960 align:start position:0%
1600 Etc so 1 over the square root of
 

01:16:41.960 --> 01:16:44.510 align:start position:0%
1600 Etc so 1 over the square root of
for<01:16:42.120><c> example</c><01:16:42.639><c> 768</c><01:16:43.639><c> gives</c><01:16:43.840><c> us</c>

01:16:44.510 --> 01:16:44.520 align:start position:0%
for example 768 gives us
 

01:16:44.520 --> 01:16:49.709 align:start position:0%
for example 768 gives us
0.03<01:16:45.520><c> if</c><01:16:45.639><c> we</c><01:16:45.840><c> plug</c><01:16:46.080><c> in</c><01:16:47.000><c> 600</c><01:16:48.000><c> 1,600</c><01:16:48.880><c> we</c><01:16:49.000><c> get</c>

01:16:49.709 --> 01:16:49.719 align:start position:0%
0.03 if we plug in 600 1,600 we get
 

01:16:49.719 --> 01:16:52.590 align:start position:0%
0.03 if we plug in 600 1,600 we get
0.02<01:16:50.719><c> if</c><01:16:50.840><c> we</c><01:16:51.000><c> plug</c><01:16:51.239><c> in</c><01:16:51.400><c> three</c><01:16:51.560><c> times</c><01:16:51.920><c> that</c>

01:16:52.590 --> 01:16:52.600 align:start position:0%
0.02 if we plug in three times that
 

01:16:52.600 --> 01:16:56.149 align:start position:0%
0.02 if we plug in three times that
0.014<01:16:53.600><c> Etc</c><01:16:54.280><c> so</c><01:16:54.400><c> basically</c><01:16:54.880><c> 0.02</c><01:16:55.560><c> is</c><01:16:55.800><c> roughly</c>

01:16:56.149 --> 01:16:56.159 align:start position:0%
0.014 Etc so basically 0.02 is roughly
 

01:16:56.159 --> 01:16:59.629 align:start position:0%
0.014 Etc so basically 0.02 is roughly
in<01:16:56.280><c> the</c><01:16:56.560><c> vicinity</c><01:16:57.560><c> of</c><01:16:58.159><c> reasonable</c><01:16:58.679><c> values</c><01:16:59.320><c> for</c>

01:16:59.629 --> 01:16:59.639 align:start position:0%
in the vicinity of reasonable values for
 

01:16:59.639 --> 01:17:02.550 align:start position:0%
in the vicinity of reasonable values for
the<01:16:59.880><c> for</c><01:17:00.280><c> um</c><01:17:01.199><c> for</c><01:17:01.440><c> these</c><01:17:01.600><c> initializations</c>

01:17:02.550 --> 01:17:02.560 align:start position:0%
the for um for these initializations
 

01:17:02.560 --> 01:17:05.510 align:start position:0%
the for um for these initializations
anyway<01:17:03.560><c> so</c><01:17:03.960><c> so</c><01:17:04.120><c> it's</c><01:17:04.280><c> not</c><01:17:04.639><c> uh</c><01:17:04.800><c> completely</c>

01:17:05.510 --> 01:17:05.520 align:start position:0%
anyway so so it's not uh completely
 

01:17:05.520 --> 01:17:08.149 align:start position:0%
anyway so so it's not uh completely
crazy<01:17:05.800><c> to</c><01:17:05.920><c> be</c><01:17:06.000><c> hard</c><01:17:06.199><c> coding</c><01:17:06.400><c> 0.02</c><01:17:07.280><c> here</c><01:17:07.960><c> uh</c><01:17:08.080><c> but</c>

01:17:08.149 --> 01:17:08.159 align:start position:0%
crazy to be hard coding 0.02 here uh but
 

01:17:08.159 --> 01:17:11.430 align:start position:0%
crazy to be hard coding 0.02 here uh but
you'd<01:17:08.400><c> like</c><01:17:08.719><c> typically</c><01:17:09.719><c> uh</c><01:17:10.159><c> some</c><01:17:11.159><c> something</c>

01:17:11.430 --> 01:17:11.440 align:start position:0%
you'd like typically uh some something
 

01:17:11.440 --> 01:17:13.709 align:start position:0%
you'd like typically uh some something
that<01:17:11.600><c> grows</c><01:17:11.920><c> with</c><01:17:12.040><c> the</c><01:17:12.280><c> model</c><01:17:12.600><c> size</c><01:17:12.920><c> instead</c>

01:17:13.709 --> 01:17:13.719 align:start position:0%
that grows with the model size instead
 

01:17:13.719 --> 01:17:15.189 align:start position:0%
that grows with the model size instead
but<01:17:13.920><c> we</c><01:17:14.040><c> will</c><01:17:14.280><c> keep</c><01:17:14.520><c> this</c><01:17:14.719><c> because</c><01:17:14.960><c> that</c><01:17:15.080><c> is</c>

01:17:15.189 --> 01:17:15.199 align:start position:0%
but we will keep this because that is
 

01:17:15.199 --> 01:17:17.229 align:start position:0%
but we will keep this because that is
the<01:17:15.360><c> gpt2</c><01:17:15.960><c> initialization</c><01:17:16.520><c> per</c><01:17:16.760><c> their</c><01:17:16.960><c> source</c>

01:17:17.229 --> 01:17:17.239 align:start position:0%
the gpt2 initialization per their source
 

01:17:17.239 --> 01:17:19.470 align:start position:0%
the gpt2 initialization per their source
code<01:17:18.120><c> but</c><01:17:18.239><c> we</c><01:17:18.360><c> are</c><01:17:18.480><c> not</c><01:17:18.639><c> fully</c><01:17:18.960><c> done</c><01:17:19.159><c> yet</c><01:17:19.320><c> on</c>

01:17:19.470 --> 01:17:19.480 align:start position:0%
code but we are not fully done yet on
 

01:17:19.480 --> 01:17:20.790 align:start position:0%
code but we are not fully done yet on
initialization<01:17:20.199><c> because</c><01:17:20.320><c> there's</c><01:17:20.520><c> one</c><01:17:20.600><c> more</c>

01:17:20.790 --> 01:17:20.800 align:start position:0%
initialization because there's one more
 

01:17:20.800 --> 01:17:23.430 align:start position:0%
initialization because there's one more
caveat<01:17:21.320><c> here</c><01:17:22.080><c> so</c>

01:17:23.430 --> 01:17:23.440 align:start position:0%
caveat here so
 

01:17:23.440 --> 01:17:26.070 align:start position:0%
caveat here so
here<01:17:24.440><c> a</c><01:17:24.560><c> mod</c><01:17:25.120><c> initialization</c><01:17:25.679><c> which</c><01:17:25.840><c> accounts</c>

01:17:26.070 --> 01:17:26.080 align:start position:0%
here a mod initialization which accounts
 

01:17:26.080 --> 01:17:27.669 align:start position:0%
here a mod initialization which accounts
for<01:17:26.239><c> the</c><01:17:26.400><c> accumulation</c><01:17:26.920><c> on</c><01:17:27.080><c> the</c><01:17:27.199><c> residual</c>

01:17:27.669 --> 01:17:27.679 align:start position:0%
for the accumulation on the residual
 

01:17:27.679 --> 01:17:30.390 align:start position:0%
for the accumulation on the residual
path<01:17:28.120><c> with</c><01:17:28.280><c> model</c><01:17:28.639><c> depth</c><01:17:29.040><c> is</c><01:17:29.199><c> used</c><01:17:29.960><c> we</c><01:17:30.080><c> scale</c>

01:17:30.390 --> 01:17:30.400 align:start position:0%
path with model depth is used we scale
 

01:17:30.400 --> 01:17:31.709 align:start position:0%
path with model depth is used we scale
the<01:17:30.520><c> weight</c><01:17:30.760><c> of</c><01:17:30.920><c> residual</c><01:17:31.280><c> layers</c><01:17:31.560><c> of</c>

01:17:31.709 --> 01:17:31.719 align:start position:0%
the weight of residual layers of
 

01:17:31.719 --> 01:17:33.510 align:start position:0%
the weight of residual layers of
initialization<01:17:32.280><c> by</c><01:17:32.440><c> factor</c><01:17:32.639><c> of</c><01:17:32.760><c> one</c><01:17:32.960><c> over</c><01:17:33.120><c> squ</c>

01:17:33.510 --> 01:17:33.520 align:start position:0%
initialization by factor of one over squ
 

01:17:33.520 --> 01:17:35.430 align:start position:0%
initialization by factor of one over squ
of<01:17:33.600><c> n</c><01:17:33.920><c> where</c><01:17:34.080><c> n</c><01:17:34.239><c> is</c><01:17:34.320><c> the</c><01:17:34.440><c> number</c><01:17:34.600><c> of</c><01:17:34.760><c> residual</c>

01:17:35.430 --> 01:17:35.440 align:start position:0%
of n where n is the number of residual
 

01:17:35.440 --> 01:17:38.750 align:start position:0%
of n where n is the number of residual
layers<01:17:36.440><c> so</c><01:17:36.679><c> this</c><01:17:36.800><c> is</c><01:17:36.920><c> what</c><01:17:37.040><c> gbt2</c><01:17:37.560><c> paper</c><01:17:37.840><c> says</c>

01:17:38.750 --> 01:17:38.760 align:start position:0%
layers so this is what gbt2 paper says
 

01:17:38.760 --> 01:17:40.990 align:start position:0%
layers so this is what gbt2 paper says
so<01:17:38.960><c> we</c><01:17:39.080><c> have</c><01:17:39.199><c> not</c><01:17:39.360><c> implemented</c><01:17:39.880><c> that</c><01:17:40.080><c> yet</c><01:17:40.639><c> and</c>

01:17:40.990 --> 01:17:41.000 align:start position:0%
so we have not implemented that yet and
 

01:17:41.000 --> 01:17:43.030 align:start position:0%
so we have not implemented that yet and
uh<01:17:41.120><c> we</c><01:17:41.199><c> can</c><01:17:41.320><c> do</c><01:17:41.440><c> so</c><01:17:41.639><c> now</c><01:17:42.440><c> now</c><01:17:42.600><c> I'd</c><01:17:42.760><c> like</c><01:17:42.880><c> to</c>

01:17:43.030 --> 01:17:43.040 align:start position:0%
uh we can do so now now I'd like to
 

01:17:43.040 --> 01:17:44.270 align:start position:0%
uh we can do so now now I'd like to
actually<01:17:43.239><c> kind</c><01:17:43.360><c> of</c><01:17:43.480><c> like</c><01:17:43.600><c> motivate</c><01:17:44.000><c> a</c><01:17:44.080><c> little</c>

01:17:44.270 --> 01:17:44.280 align:start position:0%
actually kind of like motivate a little
 

01:17:44.280 --> 01:17:47.550 align:start position:0%
actually kind of like motivate a little
bit<01:17:44.520><c> what</c><01:17:44.679><c> they</c><01:17:44.840><c> mean</c><01:17:45.360><c> here</c><01:17:46.080><c> I</c><01:17:46.199><c> think</c><01:17:46.840><c> um</c><01:17:47.320><c> so</c>

01:17:47.550 --> 01:17:47.560 align:start position:0%
bit what they mean here I think um so
 

01:17:47.560 --> 01:17:49.390 align:start position:0%
bit what they mean here I think um so
here's<01:17:47.880><c> roughly</c><01:17:48.199><c> what</c><01:17:48.320><c> they</c>

01:17:49.390 --> 01:17:49.400 align:start position:0%
here's roughly what they
 

01:17:49.400 --> 01:17:52.390 align:start position:0%
here's roughly what they
mean<01:17:50.400><c> if</c><01:17:50.480><c> you</c><01:17:50.600><c> start</c><01:17:50.880><c> out</c><01:17:51.159><c> with</c><01:17:51.560><c> zeros</c><01:17:52.120><c> in</c><01:17:52.199><c> your</c>

01:17:52.390 --> 01:17:52.400 align:start position:0%
mean if you start out with zeros in your
 

01:17:52.400 --> 01:17:54.830 align:start position:0%
mean if you start out with zeros in your
residual<01:17:52.920><c> stream</c><01:17:53.920><c> remember</c><01:17:54.239><c> that</c><01:17:54.360><c> each</c>

01:17:54.830 --> 01:17:54.840 align:start position:0%
residual stream remember that each
 

01:17:54.840 --> 01:17:57.910 align:start position:0%
residual stream remember that each
residual<01:17:55.199><c> stream</c><01:17:55.960><c> is</c><01:17:56.239><c> a</c><01:17:57.080><c> is</c><01:17:57.239><c> of</c><01:17:57.440><c> this</c><01:17:57.600><c> form</c>

01:17:57.910 --> 01:17:57.920 align:start position:0%
residual stream is a is of this form
 

01:17:57.920 --> 01:18:00.189 align:start position:0%
residual stream is a is of this form
where<01:17:58.080><c> we</c><01:17:58.239><c> continue</c><01:17:58.639><c> adding</c><01:17:58.920><c> to</c><01:17:59.080><c> it</c><01:17:59.400><c> X</c><01:17:59.639><c> is</c><01:17:59.880><c> X</c>

01:18:00.189 --> 01:18:00.199 align:start position:0%
where we continue adding to it X is X
 

01:18:00.199 --> 01:18:02.910 align:start position:0%
where we continue adding to it X is X
plus<01:18:01.080><c> something</c><01:18:01.600><c> some</c><01:18:01.760><c> kind</c><01:18:01.880><c> of</c><01:18:02.040><c> contribution</c>

01:18:02.910 --> 01:18:02.920 align:start position:0%
plus something some kind of contribution
 

01:18:02.920 --> 01:18:05.270 align:start position:0%
plus something some kind of contribution
so<01:18:03.120><c> every</c><01:18:03.400><c> single</c><01:18:03.719><c> block</c><01:18:04.040><c> of</c><01:18:04.199><c> the</c><01:18:04.320><c> residual</c><01:18:05.120><c> uh</c>

01:18:05.270 --> 01:18:05.280 align:start position:0%
so every single block of the residual uh
 

01:18:05.280 --> 01:18:09.110 align:start position:0%
so every single block of the residual uh
Network<01:18:05.880><c> contributes</c><01:18:07.120><c> some</c><01:18:08.120><c> uh</c><01:18:08.520><c> amount</c><01:18:09.000><c> and</c>

01:18:09.110 --> 01:18:09.120 align:start position:0%
Network contributes some uh amount and
 

01:18:09.120 --> 01:18:11.669 align:start position:0%
Network contributes some uh amount and
it<01:18:09.320><c> gets</c><01:18:09.639><c> added</c><01:18:10.639><c> and</c><01:18:10.800><c> so</c><01:18:11.000><c> what</c><01:18:11.280><c> ends</c><01:18:11.480><c> up</c>

01:18:11.669 --> 01:18:11.679 align:start position:0%
it gets added and so what ends up
 

01:18:11.679 --> 01:18:15.030 align:start position:0%
it gets added and so what ends up
happening<01:18:12.159><c> is</c><01:18:12.440><c> that</c><01:18:13.239><c> the</c><01:18:13.639><c> variance</c><01:18:14.440><c> of</c><01:18:14.679><c> the</c>

01:18:15.030 --> 01:18:15.040 align:start position:0%
happening is that the variance of the
 

01:18:15.040 --> 01:18:17.990 align:start position:0%
happening is that the variance of the
activations<01:18:15.600><c> in</c><01:18:15.719><c> the</c><01:18:15.840><c> residual</c><01:18:16.239><c> stream</c><01:18:17.000><c> grows</c>

01:18:17.990 --> 01:18:18.000 align:start position:0%
activations in the residual stream grows
 

01:18:18.000 --> 01:18:19.750 align:start position:0%
activations in the residual stream grows
so<01:18:18.199><c> here's</c><01:18:18.400><c> a</c><01:18:18.560><c> small</c><01:18:18.880><c> example</c><01:18:19.199><c> if</c><01:18:19.280><c> we</c><01:18:19.400><c> start</c><01:18:19.600><c> at</c>

01:18:19.750 --> 01:18:19.760 align:start position:0%
so here's a small example if we start at
 

01:18:19.760 --> 01:18:23.350 align:start position:0%
so here's a small example if we start at
zero<01:18:20.600><c> and</c><01:18:20.760><c> then</c><01:18:21.000><c> we</c><01:18:21.159><c> for</c><01:18:21.639><c> 100</c><01:18:22.080><c> times</c><01:18:23.080><c> uh</c><01:18:23.199><c> we</c>

01:18:23.350 --> 01:18:23.360 align:start position:0%
zero and then we for 100 times uh we
 

01:18:23.360 --> 01:18:25.149 align:start position:0%
zero and then we for 100 times uh we
have<01:18:23.520><c> sort</c><01:18:23.679><c> of</c><01:18:23.800><c> this</c><01:18:23.960><c> residual</c><01:18:24.360><c> stream</c><01:18:24.639><c> of</c><01:18:24.840><c> of</c>

01:18:25.149 --> 01:18:25.159 align:start position:0%
have sort of this residual stream of of
 

01:18:25.159 --> 01:18:30.110 align:start position:0%
have sort of this residual stream of of
768<01:18:26.159><c> uh</c><01:18:26.639><c> zeros</c><01:18:27.639><c> and</c><01:18:27.800><c> then</c><01:18:28.080><c> 100</c><01:18:28.440><c> times</c><01:18:28.800><c> we</c><01:18:29.120><c> add</c>

01:18:30.110 --> 01:18:30.120 align:start position:0%
768 uh zeros and then 100 times we add
 

01:18:30.120 --> 01:18:33.070 align:start position:0%
768 uh zeros and then 100 times we add
um<01:18:30.520><c> random</c><01:18:31.159><c> which</c><01:18:31.280><c> is</c><01:18:31.480><c> a</c><01:18:31.679><c> normal</c><01:18:32.080><c> distribution</c>

01:18:33.070 --> 01:18:33.080 align:start position:0%
um random which is a normal distribution
 

01:18:33.080 --> 01:18:36.390 align:start position:0%
um random which is a normal distribution
zero<01:18:33.360><c> mean</c><01:18:33.960><c> one</c><01:18:34.560><c> standard</c><01:18:35.120><c> deviation</c><01:18:36.120><c> if</c><01:18:36.239><c> we</c>

01:18:36.390 --> 01:18:36.400 align:start position:0%
zero mean one standard deviation if we
 

01:18:36.400 --> 01:18:37.950 align:start position:0%
zero mean one standard deviation if we
add<01:18:36.560><c> to</c><01:18:36.719><c> it</c><01:18:36.840><c> then</c><01:18:37.000><c> by</c><01:18:37.120><c> the</c><01:18:37.199><c> end</c><01:18:37.440><c> the</c><01:18:37.560><c> residual</c>

01:18:37.950 --> 01:18:37.960 align:start position:0%
add to it then by the end the residual
 

01:18:37.960 --> 01:18:39.350 align:start position:0%
add to it then by the end the residual
stream<01:18:38.239><c> has</c><01:18:38.400><c> grown</c><01:18:38.679><c> to</c><01:18:38.920><c> have</c><01:18:39.080><c> standard</c>

01:18:39.350 --> 01:18:39.360 align:start position:0%
stream has grown to have standard
 

01:18:39.360 --> 01:18:42.390 align:start position:0%
stream has grown to have standard
deviation<01:18:39.679><c> of</c><01:18:39.960><c> 10</c><01:18:40.960><c> and</c><01:18:41.120><c> that's</c><01:18:41.320><c> just</c><01:18:41.560><c> because</c>

01:18:42.390 --> 01:18:42.400 align:start position:0%
deviation of 10 and that's just because
 

01:18:42.400 --> 01:18:47.550 align:start position:0%
deviation of 10 and that's just because
um<01:18:43.080><c> we're</c><01:18:43.679><c> always</c><01:18:44.320><c> adding</c><01:18:45.440><c> um</c><01:18:46.440><c> these</c><01:18:46.600><c> numbers</c>

01:18:47.550 --> 01:18:47.560 align:start position:0%
um we're always adding um these numbers
 

01:18:47.560 --> 01:18:50.550 align:start position:0%
um we're always adding um these numbers
and<01:18:48.080><c> so</c><01:18:49.080><c> this</c><01:18:49.280><c> scaling</c><01:18:49.719><c> factor</c><01:18:50.000><c> that</c><01:18:50.159><c> they</c><01:18:50.280><c> use</c>

01:18:50.550 --> 01:18:50.560 align:start position:0%
and so this scaling factor that they use
 

01:18:50.560 --> 01:18:53.629 align:start position:0%
and so this scaling factor that they use
here<01:18:51.080><c> exactly</c><01:18:51.520><c> compensates</c><01:18:52.040><c> for</c><01:18:52.199><c> that</c><01:18:52.639><c> growth</c>

01:18:53.629 --> 01:18:53.639 align:start position:0%
here exactly compensates for that growth
 

01:18:53.639 --> 01:18:57.629 align:start position:0%
here exactly compensates for that growth
so<01:18:54.080><c> if</c><01:18:54.199><c> we</c><01:18:54.400><c> take</c><01:18:55.080><c> n</c><01:18:56.040><c> and</c><01:18:56.199><c> we</c><01:18:56.400><c> basically</c><01:18:57.400><c> um</c>

01:18:57.629 --> 01:18:57.639 align:start position:0%
so if we take n and we basically um
 

01:18:57.639 --> 01:18:58.990 align:start position:0%
so if we take n and we basically um
scale<01:18:58.080><c> down</c><01:18:58.480><c> every</c><01:18:58.639><c> one</c><01:18:58.760><c> of</c><01:18:58.880><c> these</c>

01:18:58.990 --> 01:18:59.000 align:start position:0%
scale down every one of these
 

01:18:59.000 --> 01:19:00.709 align:start position:0%
scale down every one of these
contributions<01:18:59.520><c> into</c><01:18:59.679><c> the</c><01:18:59.800><c> residual</c><01:19:00.199><c> stream</c>

01:19:00.709 --> 01:19:00.719 align:start position:0%
contributions into the residual stream
 

01:19:00.719 --> 01:19:03.470 align:start position:0%
contributions into the residual stream
by<01:19:00.840><c> one</c><01:19:01.040><c> over</c><01:19:01.199><c> theare</c><01:19:01.520><c> Ro</c><01:19:01.719><c> of</c><01:19:01.840><c> n</c><01:19:02.840><c> so</c><01:19:03.120><c> 1</c><01:19:03.320><c> over</c>

01:19:03.470 --> 01:19:03.480 align:start position:0%
by one over theare Ro of n so 1 over
 

01:19:03.480 --> 01:19:07.390 align:start position:0%
by one over theare Ro of n so 1 over
theun<01:19:03.960><c> of</c><01:19:04.040><c> n</c><01:19:04.320><c> is</c><01:19:04.560><c> n</c><01:19:04.880><c> to</c><01:19:05.080><c> the</c><01:19:05.840><c> 0.5</c>

01:19:07.390 --> 01:19:07.400 align:start position:0%
theun of n is n to the 0.5
 

01:19:07.400 --> 01:19:11.270 align:start position:0%
theun of n is n to the 0.5
right<01:19:08.400><c> because</c><01:19:09.000><c> n</c><01:19:09.440><c> the5</c><01:19:10.280><c> is</c><01:19:10.400><c> the</c><01:19:10.520><c> square</c><01:19:10.800><c> root</c>

01:19:11.270 --> 01:19:11.280 align:start position:0%
right because n the5 is the square root
 

01:19:11.280 --> 01:19:14.149 align:start position:0%
right because n the5 is the square root
and<01:19:11.440><c> then</c><01:19:11.719><c> one</c><01:19:11.920><c> over</c><01:19:12.120><c> the</c><01:19:12.199><c> square</c><01:19:12.400><c> root</c><01:19:12.679><c> is</c><01:19:13.159><c> n.5</c>

01:19:14.149 --> 01:19:14.159 align:start position:0%
and then one over the square root is n.5
 

01:19:14.159 --> 01:19:16.750 align:start position:0%
and then one over the square root is n.5
if<01:19:14.239><c> we</c><01:19:14.400><c> scale</c><01:19:14.679><c> it</c><01:19:14.800><c> in</c><01:19:14.960><c> this</c><01:19:15.159><c> way</c><01:19:16.120><c> then</c><01:19:16.400><c> we</c><01:19:16.520><c> see</c>

01:19:16.750 --> 01:19:16.760 align:start position:0%
if we scale it in this way then we see
 

01:19:16.760 --> 01:19:19.990 align:start position:0%
if we scale it in this way then we see
that<01:19:16.880><c> we</c><01:19:17.040><c> actually</c><01:19:17.360><c> get</c><01:19:17.960><c> um</c>

01:19:19.990 --> 01:19:20.000 align:start position:0%
that we actually get um
 

01:19:20.000 --> 01:19:21.709 align:start position:0%
that we actually get um
one

01:19:21.709 --> 01:19:21.719 align:start position:0%
one
 

01:19:21.719 --> 01:19:24.510 align:start position:0%
one
so<01:19:22.719><c> this</c><01:19:22.840><c> is</c><01:19:22.960><c> a</c><01:19:23.080><c> way</c><01:19:23.199><c> to</c><01:19:23.360><c> control</c><01:19:23.800><c> the</c><01:19:24.000><c> growth</c>

01:19:24.510 --> 01:19:24.520 align:start position:0%
so this is a way to control the growth
 

01:19:24.520 --> 01:19:26.629 align:start position:0%
so this is a way to control the growth
of<01:19:24.800><c> of</c><01:19:25.159><c> activations</c><01:19:25.800><c> inside</c><01:19:26.080><c> the</c><01:19:26.239><c> residual</c>

01:19:26.629 --> 01:19:26.639 align:start position:0%
of of activations inside the residual
 

01:19:26.639 --> 01:19:29.189 align:start position:0%
of of activations inside the residual
stream<01:19:27.120><c> in</c><01:19:27.199><c> the</c><01:19:27.320><c> forward</c><01:19:27.679><c> pass</c><01:19:28.639><c> and</c><01:19:28.760><c> so</c><01:19:29.000><c> we'd</c>

01:19:29.189 --> 01:19:29.199 align:start position:0%
stream in the forward pass and so we'd
 

01:19:29.199 --> 01:19:31.590 align:start position:0%
stream in the forward pass and so we'd
like<01:19:29.320><c> to</c><01:19:29.440><c> initialize</c><01:19:29.880><c> in</c><01:19:30.000><c> the</c><01:19:30.120><c> same</c><01:19:30.360><c> way</c><01:19:31.080><c> where</c>

01:19:31.590 --> 01:19:31.600 align:start position:0%
like to initialize in the same way where
 

01:19:31.600 --> 01:19:33.790 align:start position:0%
like to initialize in the same way where
these<01:19:31.840><c> weights</c><01:19:32.480><c> that</c><01:19:32.880><c> are</c><01:19:33.120><c> at</c><01:19:33.280><c> the</c><01:19:33.400><c> end</c><01:19:33.600><c> of</c>

01:19:33.790 --> 01:19:33.800 align:start position:0%
these weights that are at the end of
 

01:19:33.800 --> 01:19:38.750 align:start position:0%
these weights that are at the end of
each<01:19:34.000><c> block</c><01:19:34.480><c> so</c><01:19:34.800><c> this</c><01:19:35.480><c> C</c><01:19:36.480><c> uh</c><01:19:37.000><c> layer</c><01:19:38.000><c> uh</c><01:19:38.159><c> the</c><01:19:38.280><c> gbt</c>

01:19:38.750 --> 01:19:38.760 align:start position:0%
each block so this C uh layer uh the gbt
 

01:19:38.760 --> 01:19:40.510 align:start position:0%
each block so this C uh layer uh the gbt
paper<01:19:39.080><c> proposes</c><01:19:39.639><c> to</c><01:19:39.840><c> scale</c><01:19:40.159><c> down</c><01:19:40.360><c> those</c>

01:19:40.510 --> 01:19:40.520 align:start position:0%
paper proposes to scale down those
 

01:19:40.520 --> 01:19:42.270 align:start position:0%
paper proposes to scale down those
weights<01:19:40.920><c> by</c><01:19:41.120><c> one</c><01:19:41.280><c> over</c><01:19:41.520><c> the</c><01:19:41.639><c> square</c><01:19:41.880><c> root</c><01:19:42.159><c> of</c>

01:19:42.270 --> 01:19:42.280 align:start position:0%
weights by one over the square root of
 

01:19:42.280 --> 01:19:43.629 align:start position:0%
weights by one over the square root of
the<01:19:42.360><c> number</c><01:19:42.560><c> of</c><01:19:42.719><c> residual</c>

01:19:43.629 --> 01:19:43.639 align:start position:0%
the number of residual
 

01:19:43.639 --> 01:19:46.310 align:start position:0%
the number of residual
layers<01:19:44.639><c> so</c><01:19:45.040><c> one</c><01:19:45.320><c> crude</c><01:19:45.639><c> way</c><01:19:45.760><c> to</c><01:19:45.920><c> implement</c>

01:19:46.310 --> 01:19:46.320 align:start position:0%
layers so one crude way to implement
 

01:19:46.320 --> 01:19:48.390 align:start position:0%
layers so one crude way to implement
this<01:19:46.480><c> is</c><01:19:46.639><c> the</c><01:19:46.760><c> following</c><01:19:47.760><c> I</c><01:19:47.840><c> don't</c><01:19:48.080><c> know</c><01:19:48.239><c> if</c>

01:19:48.390 --> 01:19:48.400 align:start position:0%
this is the following I don't know if
 

01:19:48.400 --> 01:19:50.750 align:start position:0%
this is the following I don't know if
this<01:19:48.480><c> is</c><01:19:49.120><c> uh</c><01:19:49.280><c> pyro</c><01:19:49.760><c> sanctioned</c><01:19:50.280><c> but</c><01:19:50.400><c> it</c><01:19:50.520><c> works</c>

01:19:50.750 --> 01:19:50.760 align:start position:0%
this is uh pyro sanctioned but it works
 

01:19:50.760 --> 01:19:53.629 align:start position:0%
this is uh pyro sanctioned but it works
for<01:19:50.960><c> me</c><01:19:51.600><c> is</c><01:19:51.800><c> we'll</c><01:19:52.159><c> do</c><01:19:52.719><c> in</c><01:19:52.840><c> the</c>

01:19:53.629 --> 01:19:53.639 align:start position:0%
for me is we'll do in the
 

01:19:53.639 --> 01:19:56.510 align:start position:0%
for me is we'll do in the
initialization<01:19:54.719><c> see</c><01:19:54.960><c> that</c><01:19:55.199><c> s</c><01:19:55.760><c> that</c><01:19:56.080><c> do</c>

01:19:56.510 --> 01:19:56.520 align:start position:0%
initialization see that s that do
 

01:19:56.520 --> 01:19:58.189 align:start position:0%
initialization see that s that do
special<01:19:57.239><c> nanog</c>

01:19:58.189 --> 01:19:58.199 align:start position:0%
special nanog
 

01:19:58.199 --> 01:20:04.390 align:start position:0%
special nanog
GPT<01:19:59.199><c> uh</c><01:19:59.920><c> scale</c><01:20:00.719><c> in</c><01:20:01.320><c> it</c><01:20:02.320><c> is</c><01:20:03.080><c> one</c><01:20:04.080><c> so</c><01:20:04.239><c> we're</c>

01:20:04.390 --> 01:20:04.400 align:start position:0%
GPT uh scale in it is one so we're
 

01:20:04.400 --> 01:20:06.790 align:start position:0%
GPT uh scale in it is one so we're
setting<01:20:04.960><c> um</c><01:20:05.280><c> kind</c><01:20:05.400><c> of</c><01:20:05.520><c> like</c><01:20:05.639><c> a</c><01:20:05.800><c> flag</c><01:20:06.199><c> for</c><01:20:06.440><c> this</c>

01:20:06.790 --> 01:20:06.800 align:start position:0%
setting um kind of like a flag for this
 

01:20:06.800 --> 01:20:08.830 align:start position:0%
setting um kind of like a flag for this
module<01:20:07.800><c> there</c><01:20:07.920><c> must</c><01:20:08.080><c> be</c><01:20:08.159><c> a</c><01:20:08.239><c> better</c><01:20:08.400><c> way</c><01:20:08.520><c> in</c><01:20:08.679><c> py</c>

01:20:08.830 --> 01:20:08.840 align:start position:0%
module there must be a better way in py
 

01:20:08.840 --> 01:20:11.470 align:start position:0%
module there must be a better way in py
torch<01:20:09.199><c> right</c><01:20:09.600><c> but</c><01:20:10.600><c> I</c><01:20:10.719><c> don't</c>

01:20:11.470 --> 01:20:11.480 align:start position:0%
torch right but I don't
 

01:20:11.480 --> 01:20:13.790 align:start position:0%
torch right but I don't
know<01:20:12.480><c> okay</c><01:20:12.600><c> so</c><01:20:12.760><c> we're</c><01:20:13.000><c> basically</c><01:20:13.360><c> attaching</c>

01:20:13.790 --> 01:20:13.800 align:start position:0%
know okay so we're basically attaching
 

01:20:13.800 --> 01:20:16.350 align:start position:0%
know okay so we're basically attaching
this<01:20:14.120><c> flag</c><01:20:15.120><c> and</c><01:20:15.639><c> trying</c><01:20:15.880><c> to</c><01:20:16.000><c> make</c><01:20:16.120><c> sure</c><01:20:16.280><c> that</c>

01:20:16.350 --> 01:20:16.360 align:start position:0%
this flag and trying to make sure that
 

01:20:16.360 --> 01:20:17.950 align:start position:0%
this flag and trying to make sure that
it<01:20:16.480><c> doesn't</c><01:20:16.719><c> conflict</c><01:20:17.080><c> with</c><01:20:17.239><c> anything</c>

01:20:17.950 --> 01:20:17.960 align:start position:0%
it doesn't conflict with anything
 

01:20:17.960 --> 01:20:20.350 align:start position:0%
it doesn't conflict with anything
previously<01:20:18.960><c> and</c><01:20:19.080><c> then</c><01:20:19.199><c> when</c><01:20:19.280><c> we</c><01:20:19.400><c> come</c><01:20:19.600><c> down</c>

01:20:20.350 --> 01:20:20.360 align:start position:0%
previously and then when we come down
 

01:20:20.360 --> 01:20:25.070 align:start position:0%
previously and then when we come down
here<01:20:21.360><c> this</c><01:20:21.520><c> STD</c><01:20:21.960><c> should</c><01:20:22.080><c> be</c><01:20:22.199><c> 0.02</c><01:20:23.000><c> by</c><01:20:23.159><c> default</c>

01:20:25.070 --> 01:20:25.080 align:start position:0%
here this STD should be 0.02 by default
 

01:20:25.080 --> 01:20:27.070 align:start position:0%
here this STD should be 0.02 by default
but<01:20:25.280><c> then</c><01:20:25.560><c> if</c>

01:20:27.070 --> 01:20:27.080 align:start position:0%
but then if
 

01:20:27.080 --> 01:20:31.390 align:start position:0%
but then if
haat<01:20:28.080><c> um</c><01:20:28.520><c> module</c><01:20:29.000><c> of</c><01:20:29.280><c> this</c><01:20:29.880><c> thing</c>

01:20:31.390 --> 01:20:31.400 align:start position:0%
haat um module of this thing
 

01:20:31.400 --> 01:20:34.229 align:start position:0%
haat um module of this thing
then<01:20:32.400><c> STD</c><01:20:32.960><c> *</c>

01:20:34.229 --> 01:20:34.239 align:start position:0%
then STD *
 

01:20:34.239 --> 01:20:36.590 align:start position:0%
then STD *
equals

01:20:36.590 --> 01:20:36.600 align:start position:0%
equals
 

01:20:36.600 --> 01:20:39.550 align:start position:0%
equals
um<01:20:37.600><c> copal</c><01:20:37.920><c> is</c><01:20:38.040><c> not</c><01:20:38.199><c> guessing</c><01:20:38.440><c> correctly</c><01:20:39.320><c> uh</c><01:20:39.400><c> so</c>

01:20:39.550 --> 01:20:39.560 align:start position:0%
um copal is not guessing correctly uh so
 

01:20:39.560 --> 01:20:41.030 align:start position:0%
um copal is not guessing correctly uh so
we<01:20:39.639><c> want</c><01:20:39.840><c> one</c><01:20:40.000><c> over</c><01:20:40.199><c> the</c><01:20:40.320><c> square</c><01:20:40.520><c> root</c><01:20:40.800><c> of</c><01:20:40.920><c> the</c>

01:20:41.030 --> 01:20:41.040 align:start position:0%
we want one over the square root of the
 

01:20:41.040 --> 01:20:44.110 align:start position:0%
we want one over the square root of the
number<01:20:41.320><c> of</c><01:20:41.600><c> layers</c><01:20:42.520><c> so</c>

01:20:44.110 --> 01:20:44.120 align:start position:0%
number of layers so
 

01:20:44.120 --> 01:20:47.229 align:start position:0%
number of layers so
um<01:20:45.120><c> the</c><01:20:45.239><c> number</c><01:20:45.480><c> of</c><01:20:45.639><c> residual</c><01:20:46.080><c> layers</c><01:20:46.480><c> here</c><01:20:46.840><c> is</c>

01:20:47.229 --> 01:20:47.239 align:start position:0%
um the number of residual layers here is
 

01:20:47.239 --> 01:20:48.550 align:start position:0%
um the number of residual layers here is
twice

01:20:48.550 --> 01:20:48.560 align:start position:0%
twice
 

01:20:48.560 --> 01:20:52.910 align:start position:0%
twice
times<01:20:49.560><c> Salt</c><01:20:49.880><c> out</c><01:20:50.080><c> config</c><01:20:50.679><c> layers</c><01:20:51.679><c> and</c><01:20:51.920><c> then</c>

01:20:52.910 --> 01:20:52.920 align:start position:0%
times Salt out config layers and then
 

01:20:52.920 --> 01:20:57.030 align:start position:0%
times Salt out config layers and then
this<01:20:53.920><c> times</c><01:20:55.000><c> .5</c><01:20:56.000><c> so</c><01:20:56.120><c> we</c><01:20:56.239><c> want</c><01:20:56.360><c> to</c><01:20:56.480><c> scale</c><01:20:56.760><c> down</c>

01:20:57.030 --> 01:20:57.040 align:start position:0%
this times .5 so we want to scale down
 

01:20:57.040 --> 01:20:59.590 align:start position:0%
this times .5 so we want to scale down
that<01:20:57.360><c> standard</c><01:20:57.800><c> deviation</c><01:20:58.800><c> and</c><01:20:59.120><c> this</c><01:20:59.280><c> should</c>

01:20:59.590 --> 01:20:59.600 align:start position:0%
that standard deviation and this should
 

01:20:59.600 --> 01:21:02.990 align:start position:0%
that standard deviation and this should
be<01:21:00.480><c> um</c><01:21:01.040><c> correct</c><01:21:01.400><c> and</c><01:21:01.560><c> Implement</c><01:21:02.000><c> that</c><01:21:02.920><c> I</c>

01:21:02.990 --> 01:21:03.000 align:start position:0%
be um correct and Implement that I
 

01:21:03.000 --> 01:21:04.510 align:start position:0%
be um correct and Implement that I
should<01:21:03.159><c> clarify</c><01:21:03.600><c> by</c><01:21:03.679><c> the</c><01:21:03.760><c> way</c><01:21:03.920><c> that</c><01:21:04.080><c> the</c><01:21:04.280><c> two</c>

01:21:04.510 --> 01:21:04.520 align:start position:0%
should clarify by the way that the two
 

01:21:04.520 --> 01:21:06.110 align:start position:0%
should clarify by the way that the two
times<01:21:04.880><c> number</c><01:21:05.080><c> of</c><01:21:05.199><c> layers</c><01:21:05.520><c> comes</c><01:21:05.760><c> from</c><01:21:05.960><c> the</c>

01:21:06.110 --> 01:21:06.120 align:start position:0%
times number of layers comes from the
 

01:21:06.120 --> 01:21:07.790 align:start position:0%
times number of layers comes from the
fact<01:21:06.360><c> that</c><01:21:06.600><c> every</c><01:21:06.800><c> single</c><01:21:07.120><c> one</c><01:21:07.239><c> of</c><01:21:07.360><c> our</c><01:21:07.520><c> layers</c>

01:21:07.790 --> 01:21:07.800 align:start position:0%
fact that every single one of our layers
 

01:21:07.800 --> 01:21:09.550 align:start position:0%
fact that every single one of our layers
in<01:21:07.880><c> the</c><01:21:08.000><c> Transformer</c><01:21:08.880><c> actually</c><01:21:09.159><c> has</c><01:21:09.320><c> two</c>

01:21:09.550 --> 01:21:09.560 align:start position:0%
in the Transformer actually has two
 

01:21:09.560 --> 01:21:11.870 align:start position:0%
in the Transformer actually has two
blocks<01:21:10.159><c> that</c><01:21:10.400><c> add</c><01:21:10.719><c> to</c><01:21:10.840><c> the</c><01:21:10.960><c> ridal</c><01:21:11.440><c> pathway</c>

01:21:11.870 --> 01:21:11.880 align:start position:0%
blocks that add to the ridal pathway
 

01:21:11.880 --> 01:21:13.510 align:start position:0%
blocks that add to the ridal pathway
right<01:21:12.159><c> we</c><01:21:12.280><c> have</c><01:21:12.400><c> the</c><01:21:12.520><c> attention</c><01:21:13.080><c> and</c><01:21:13.239><c> then</c><01:21:13.400><c> the</c>

01:21:13.510 --> 01:21:13.520 align:start position:0%
right we have the attention and then the
 

01:21:13.520 --> 01:21:15.990 align:start position:0%
right we have the attention and then the
MLP<01:21:14.280><c> so</c><01:21:14.440><c> that's</c><01:21:14.600><c> where</c><01:21:14.719><c> the</c><01:21:14.880><c> two</c><01:21:15.080><c> times</c><01:21:15.400><c> comes</c>

01:21:15.990 --> 01:21:16.000 align:start position:0%
MLP so that's where the two times comes
 

01:21:16.000 --> 01:21:18.790 align:start position:0%
MLP so that's where the two times comes
from<01:21:17.000><c> and</c><01:21:17.280><c> the</c><01:21:17.440><c> other</c><01:21:17.639><c> thing</c><01:21:17.800><c> to</c><01:21:18.000><c> mention</c><01:21:18.480><c> is</c>

01:21:18.790 --> 01:21:18.800 align:start position:0%
from and the other thing to mention is
 

01:21:18.800 --> 01:21:21.070 align:start position:0%
from and the other thing to mention is
that<01:21:19.239><c> uh</c><01:21:19.360><c> what's</c><01:21:19.600><c> slightly</c><01:21:20.480><c> awkward</c><01:21:20.960><c> but</c>

01:21:21.070 --> 01:21:21.080 align:start position:0%
that uh what's slightly awkward but
 

01:21:21.080 --> 01:21:23.910 align:start position:0%
that uh what's slightly awkward but
we're<01:21:21.239><c> not</c><01:21:21.360><c> going</c><01:21:21.480><c> to</c><01:21:21.639><c> fix</c><01:21:21.840><c> it</c><01:21:22.440><c> is</c><01:21:22.679><c> that</c><01:21:23.159><c> um</c>

01:21:23.910 --> 01:21:23.920 align:start position:0%
we're not going to fix it is that um
 

01:21:23.920 --> 01:21:26.510 align:start position:0%
we're not going to fix it is that um
because<01:21:24.199><c> we</c><01:21:24.280><c> are</c><01:21:24.600><c> weight</c><01:21:24.760><c> sharing</c><01:21:25.199><c> the</c><01:21:25.520><c> wte</c>

01:21:26.510 --> 01:21:26.520 align:start position:0%
because we are weight sharing the wte
 

01:21:26.520 --> 01:21:29.390 align:start position:0%
because we are weight sharing the wte
and<01:21:26.840><c> the</c><01:21:26.960><c> LM</c><01:21:27.400><c> head</c><01:21:28.400><c> in</c><01:21:28.560><c> this</c><01:21:28.719><c> iteration</c><01:21:29.120><c> of</c><01:21:29.280><c> our</c>

01:21:29.390 --> 01:21:29.400 align:start position:0%
and the LM head in this iteration of our
 

01:21:29.400 --> 01:21:31.070 align:start position:0%
and the LM head in this iteration of our
old<01:21:29.639><c> subm</c><01:21:29.920><c> modules</c><01:21:30.280><c> we're</c><01:21:30.400><c> going</c><01:21:30.480><c> to</c><01:21:30.719><c> actually</c>

01:21:31.070 --> 01:21:31.080 align:start position:0%
old subm modules we're going to actually
 

01:21:31.080 --> 01:21:33.350 align:start position:0%
old subm modules we're going to actually
come<01:21:31.280><c> around</c><01:21:31.560><c> to</c><01:21:31.760><c> that</c><01:21:31.880><c> tensor</c><01:21:32.360><c> twice</c><01:21:33.239><c> so</c>

01:21:33.350 --> 01:21:33.360 align:start position:0%
come around to that tensor twice so
 

01:21:33.360 --> 01:21:34.870 align:start position:0%
come around to that tensor twice so
we're<01:21:33.520><c> going</c><01:21:33.600><c> to</c><01:21:33.760><c> first</c><01:21:34.040><c> initialize</c><01:21:34.520><c> it</c><01:21:34.639><c> as</c><01:21:34.760><c> an</c>

01:21:34.870 --> 01:21:34.880 align:start position:0%
we're going to first initialize it as an
 

01:21:34.880 --> 01:21:37.390 align:start position:0%
we're going to first initialize it as an
embedding<01:21:35.760><c> with</c><01:21:36.000><c> 0.02</c><01:21:37.000><c> and</c><01:21:37.120><c> then</c><01:21:37.199><c> we're</c><01:21:37.320><c> going</c>

01:21:37.390 --> 01:21:37.400 align:start position:0%
embedding with 0.02 and then we're going
 

01:21:37.400 --> 01:21:39.590 align:start position:0%
embedding with 0.02 and then we're going
to<01:21:37.520><c> come</c><01:21:37.639><c> back</c><01:21:37.800><c> around</c><01:21:38.040><c> it</c><01:21:38.320><c> again</c><01:21:38.600><c> in</c><01:21:38.719><c> a</c><01:21:38.880><c> linear</c>

01:21:39.590 --> 01:21:39.600 align:start position:0%
to come back around it again in a linear
 

01:21:39.600 --> 01:21:42.550 align:start position:0%
to come back around it again in a linear
and<01:21:39.760><c> initialize</c><01:21:40.239><c> it</c><01:21:40.440><c> again</c><01:21:40.960><c> using</c><01:21:41.480><c> 0.02</c><01:21:42.480><c> and</c>

01:21:42.550 --> 01:21:42.560 align:start position:0%
and initialize it again using 0.02 and
 

01:21:42.560 --> 01:21:44.390 align:start position:0%
and initialize it again using 0.02 and
it's<01:21:42.679><c> going</c><01:21:42.760><c> to</c><01:21:42.840><c> be</c><01:21:42.880><c> 0.02</c><01:21:43.800><c> because</c><01:21:43.960><c> the</c><01:21:44.040><c> LM</c>

01:21:44.390 --> 01:21:44.400 align:start position:0%
it's going to be 0.02 because the LM
 

01:21:44.400 --> 01:21:46.310 align:start position:0%
it's going to be 0.02 because the LM
head<01:21:44.560><c> is</c><01:21:44.679><c> of</c><01:21:44.800><c> course</c><01:21:45.080><c> not</c><01:21:45.480><c> not</c><01:21:45.639><c> scaled</c><01:21:46.080><c> so</c><01:21:46.199><c> it's</c>

01:21:46.310 --> 01:21:46.320 align:start position:0%
head is of course not not scaled so it's
 

01:21:46.320 --> 01:21:48.669 align:start position:0%
head is of course not not scaled so it's
not<01:21:46.480><c> going</c><01:21:46.600><c> to</c><01:21:47.159><c> come</c><01:21:47.400><c> here</c><01:21:48.239><c> it's</c><01:21:48.360><c> just</c><01:21:48.560><c> it's</c>

01:21:48.669 --> 01:21:48.679 align:start position:0%
not going to come here it's just it's
 

01:21:48.679 --> 01:21:50.310 align:start position:0%
not going to come here it's just it's
going<01:21:48.760><c> to</c><01:21:48.840><c> be</c><01:21:48.960><c> basically</c><01:21:49.280><c> initialized</c><01:21:49.800><c> twice</c>

01:21:50.310 --> 01:21:50.320 align:start position:0%
going to be basically initialized twice
 

01:21:50.320 --> 01:21:52.830 align:start position:0%
going to be basically initialized twice
using<01:21:50.679><c> the</c><01:21:50.880><c> identical</c><01:21:51.480><c> same</c><01:21:51.840><c> initialization</c>

01:21:52.830 --> 01:21:52.840 align:start position:0%
using the identical same initialization
 

01:21:52.840 --> 01:21:56.590 align:start position:0%
using the identical same initialization
but<01:21:53.000><c> that's</c><01:21:53.280><c> okay</c><01:21:54.239><c> and</c><01:21:54.360><c> then</c><01:21:54.920><c> scrolling</c><01:21:55.440><c> over</c>

01:21:56.590 --> 01:21:56.600 align:start position:0%
but that's okay and then scrolling over
 

01:21:56.600 --> 01:21:59.709 align:start position:0%
but that's okay and then scrolling over
here<01:21:57.600><c> I</c><01:21:57.760><c> added</c><01:21:58.320><c> uh</c><01:21:58.440><c> some</c><01:21:58.639><c> code</c><01:21:58.960><c> here</c><01:21:59.360><c> so</c><01:21:59.600><c> that</c>

01:21:59.709 --> 01:21:59.719 align:start position:0%
here I added uh some code here so that
 

01:21:59.719 --> 01:22:00.629 align:start position:0%
here I added uh some code here so that
we<01:21:59.880><c> have</c>

01:22:00.629 --> 01:22:00.639 align:start position:0%
we have
 

01:22:00.639 --> 01:22:03.629 align:start position:0%
we have
reproducibility<01:22:01.639><c> um</c><01:22:02.400><c> to</c><01:22:02.639><c> set</c><01:22:02.920><c> the</c><01:22:03.040><c> seeds</c><01:22:03.520><c> and</c>

01:22:03.629 --> 01:22:03.639 align:start position:0%
reproducibility um to set the seeds and
 

01:22:03.639 --> 01:22:05.550 align:start position:0%
reproducibility um to set the seeds and
now<01:22:03.800><c> we</c><01:22:03.880><c> should</c><01:22:04.080><c> be</c><01:22:04.199><c> able</c><01:22:04.400><c> to</c><01:22:04.760><c> python</c><01:22:05.159><c> train</c>

01:22:05.550 --> 01:22:05.560 align:start position:0%
now we should be able to python train
 

01:22:05.560 --> 01:22:09.070 align:start position:0%
now we should be able to python train
gpt2<01:22:06.560><c> pi</c><01:22:07.520><c> and</c><01:22:07.800><c> let</c><01:22:08.000><c> this</c><01:22:08.080><c> running</c><01:22:08.719><c> and</c><01:22:08.840><c> as</c><01:22:08.960><c> far</c>

01:22:09.070 --> 01:22:09.080 align:start position:0%
gpt2 pi and let this running and as far
 

01:22:09.080 --> 01:22:11.149 align:start position:0%
gpt2 pi and let this running and as far
as<01:22:09.199><c> I</c><01:22:09.320><c> know</c><01:22:09.520><c> this</c><01:22:09.639><c> is</c><01:22:09.840><c> the</c><01:22:09.960><c> gpt2</c>

01:22:11.149 --> 01:22:11.159 align:start position:0%
as I know this is the gpt2
 

01:22:11.159 --> 01:22:12.830 align:start position:0%
as I know this is the gpt2
initialization<01:22:12.159><c> uh</c><01:22:12.280><c> in</c><01:22:12.400><c> the</c><01:22:12.520><c> way</c><01:22:12.639><c> we've</c>

01:22:12.830 --> 01:22:12.840 align:start position:0%
initialization uh in the way we've
 

01:22:12.840 --> 01:22:16.310 align:start position:0%
initialization uh in the way we've
implemented<01:22:13.239><c> it</c><01:22:13.400><c> right</c><01:22:13.520><c> now</c><01:22:14.480><c> so</c><01:22:14.840><c> this</c>

01:22:16.310 --> 01:22:16.320 align:start position:0%
implemented it right now so this
 

01:22:16.320 --> 01:22:19.750 align:start position:0%
implemented it right now so this
looks<01:22:17.320><c> uh</c><01:22:17.440><c> reasonable</c><01:22:17.880><c> to</c><01:22:18.320><c> me</c><01:22:19.320><c> okay</c><01:22:19.440><c> so</c><01:22:19.639><c> at</c>

01:22:19.750 --> 01:22:19.760 align:start position:0%
looks uh reasonable to me okay so at
 

01:22:19.760 --> 01:22:21.709 align:start position:0%
looks uh reasonable to me okay so at
this<01:22:19.920><c> point</c><01:22:20.159><c> we</c><01:22:20.320><c> have</c><01:22:20.480><c> the</c><01:22:20.560><c> gpt2</c><01:22:21.120><c> model</c><01:22:21.600><c> we</c>

01:22:21.709 --> 01:22:21.719 align:start position:0%
this point we have the gpt2 model we
 

01:22:21.719 --> 01:22:23.070 align:start position:0%
this point we have the gpt2 model we
have<01:22:21.840><c> some</c><01:22:22.159><c> confidence</c><01:22:22.520><c> that</c><01:22:22.600><c> it's</c><01:22:22.760><c> correctly</c>

01:22:23.070 --> 01:22:23.080 align:start position:0%
have some confidence that it's correctly
 

01:22:23.080 --> 01:22:24.830 align:start position:0%
have some confidence that it's correctly
implemented<01:22:23.840><c> we've</c><01:22:24.080><c> initialized</c><01:22:24.679><c> it</c>

01:22:24.830 --> 01:22:24.840 align:start position:0%
implemented we've initialized it
 

01:22:24.840 --> 01:22:26.390 align:start position:0%
implemented we've initialized it
properly<01:22:25.480><c> and</c><01:22:25.600><c> we</c><01:22:25.719><c> have</c><01:22:25.800><c> a</c><01:22:25.920><c> data</c><01:22:26.120><c> loader</c>

01:22:26.390 --> 01:22:26.400 align:start position:0%
properly and we have a data loader
 

01:22:26.400 --> 01:22:27.950 align:start position:0%
properly and we have a data loader
that's<01:22:26.560><c> iterating</c><01:22:26.960><c> through</c><01:22:27.120><c> data</c><01:22:27.360><c> batches</c>

01:22:27.950 --> 01:22:27.960 align:start position:0%
that's iterating through data batches
 

01:22:27.960 --> 01:22:30.229 align:start position:0%
that's iterating through data batches
and<01:22:28.120><c> we</c><01:22:28.239><c> can</c><01:22:28.400><c> train</c><01:22:29.280><c> so</c><01:22:29.480><c> now</c><01:22:29.679><c> comes</c><01:22:29.880><c> the</c><01:22:30.000><c> fun</c>

01:22:30.229 --> 01:22:30.239 align:start position:0%
and we can train so now comes the fun
 

01:22:30.239 --> 01:22:31.750 align:start position:0%
and we can train so now comes the fun
part<01:22:30.679><c> I'd</c><01:22:30.840><c> like</c><01:22:30.960><c> us</c><01:22:31.120><c> to</c><01:22:31.280><c> speed</c><01:22:31.520><c> up</c><01:22:31.639><c> the</c>

01:22:31.750 --> 01:22:31.760 align:start position:0%
part I'd like us to speed up the
 

01:22:31.760 --> 01:22:33.709 align:start position:0%
part I'd like us to speed up the
training<01:22:32.199><c> by</c><01:22:32.480><c> a</c><01:22:32.639><c> lot</c><01:22:33.080><c> so</c><01:22:33.239><c> we're</c><01:22:33.400><c> getting</c><01:22:33.600><c> our</c>

01:22:33.709 --> 01:22:33.719 align:start position:0%
training by a lot so we're getting our
 

01:22:33.719 --> 01:22:34.910 align:start position:0%
training by a lot so we're getting our
money's<01:22:34.040><c> worth</c><01:22:34.320><c> with</c><01:22:34.480><c> respect</c><01:22:34.719><c> to</c><01:22:34.800><c> the</c>

01:22:34.910 --> 01:22:34.920 align:start position:0%
money's worth with respect to the
 

01:22:34.920 --> 01:22:38.030 align:start position:0%
money's worth with respect to the
hardware<01:22:35.360><c> that</c><01:22:35.520><c> we</c><01:22:35.639><c> are</c><01:22:36.280><c> uh</c><01:22:36.400><c> using</c><01:22:36.760><c> here</c><01:22:37.760><c> and</c>

01:22:38.030 --> 01:22:38.040 align:start position:0%
hardware that we are uh using here and
 

01:22:38.040 --> 01:22:39.149 align:start position:0%
hardware that we are uh using here and
uh<01:22:38.120><c> we're</c><01:22:38.239><c> going</c><01:22:38.360><c> to</c><01:22:38.440><c> speed</c><01:22:38.639><c> up</c><01:22:38.760><c> the</c><01:22:38.840><c> training</c>

01:22:39.149 --> 01:22:39.159 align:start position:0%
uh we're going to speed up the training
 

01:22:39.159 --> 01:22:42.510 align:start position:0%
uh we're going to speed up the training
by<01:22:39.280><c> quite</c><01:22:39.440><c> a</c><01:22:40.000><c> bit</c><01:22:41.000><c> uh</c><01:22:41.480><c> now</c><01:22:41.639><c> you</c><01:22:41.800><c> always</c><01:22:42.040><c> want</c><01:22:42.159><c> to</c>

01:22:42.510 --> 01:22:42.520 align:start position:0%
by quite a bit uh now you always want to
 

01:22:42.520 --> 01:22:44.110 align:start position:0%
by quite a bit uh now you always want to
start<01:22:42.840><c> with</c><01:22:43.040><c> what</c><01:22:43.199><c> Hardware</c><01:22:43.560><c> do</c><01:22:43.639><c> you</c><01:22:43.800><c> have</c>

01:22:44.110 --> 01:22:44.120 align:start position:0%
start with what Hardware do you have
 

01:22:44.120 --> 01:22:45.910 align:start position:0%
start with what Hardware do you have
what<01:22:44.239><c> does</c><01:22:44.400><c> it</c><01:22:44.560><c> offer</c><01:22:45.040><c> and</c><01:22:45.239><c> are</c><01:22:45.400><c> you</c><01:22:45.600><c> fully</c>

01:22:45.910 --> 01:22:45.920 align:start position:0%
what does it offer and are you fully
 

01:22:45.920 --> 01:22:48.550 align:start position:0%
what does it offer and are you fully
utilizing<01:22:46.400><c> it</c><01:22:47.159><c> so</c><01:22:47.320><c> in</c><01:22:47.480><c> my</c><01:22:47.639><c> case</c><01:22:48.000><c> if</c><01:22:48.120><c> we</c><01:22:48.239><c> go</c><01:22:48.400><c> to</c>

01:22:48.550 --> 01:22:48.560 align:start position:0%
utilizing it so in my case if we go to
 

01:22:48.560 --> 01:22:49.910 align:start position:0%
utilizing it so in my case if we go to
Nvidia

01:22:49.910 --> 01:22:49.920 align:start position:0%
Nvidia
 

01:22:49.920 --> 01:22:53.110 align:start position:0%
Nvidia
SMI<01:22:50.920><c> we</c><01:22:51.080><c> can</c><01:22:51.320><c> see</c>

01:22:53.110 --> 01:22:53.120 align:start position:0%
SMI we can see
 

01:22:53.120 --> 01:22:56.990 align:start position:0%
SMI we can see
that<01:22:54.120><c> I</c><01:22:54.280><c> have</c><01:22:54.679><c> eight</c><01:22:55.400><c> gpus</c><01:22:56.400><c> and</c><01:22:56.560><c> each</c><01:22:56.760><c> one</c><01:22:56.880><c> of</c>

01:22:56.990 --> 01:22:57.000 align:start position:0%
that I have eight gpus and each one of
 

01:22:57.000 --> 01:23:01.870 align:start position:0%
that I have eight gpus and each one of
those<01:22:57.159><c> gpus</c><01:22:57.520><c> is</c><01:22:57.639><c> an</c><01:22:57.840><c> a100</c><01:22:58.760><c> sxm</c><01:22:59.639><c> 80</c><01:23:00.440><c> gb</c><01:23:01.440><c> so</c><01:23:01.760><c> this</c>

01:23:01.870 --> 01:23:01.880 align:start position:0%
those gpus is an a100 sxm 80 gb so this
 

01:23:01.880 --> 01:23:03.830 align:start position:0%
those gpus is an a100 sxm 80 gb so this
is<01:23:01.960><c> the</c><01:23:02.120><c> GPU</c><01:23:02.600><c> that</c><01:23:02.760><c> I</c><01:23:02.920><c> have</c><01:23:03.159><c> available</c><01:23:03.520><c> to</c><01:23:03.639><c> me</c>

01:23:03.830 --> 01:23:03.840 align:start position:0%
is the GPU that I have available to me
 

01:23:03.840 --> 01:23:07.510 align:start position:0%
is the GPU that I have available to me
in<01:23:04.040><c> this</c><01:23:04.360><c> box</c><01:23:05.360><c> now</c><01:23:05.960><c> when</c><01:23:06.080><c> I</c><01:23:06.239><c> look</c><01:23:06.560><c> when</c><01:23:06.679><c> I</c><01:23:06.920><c> use</c>

01:23:07.510 --> 01:23:07.520 align:start position:0%
in this box now when I look when I use
 

01:23:07.520 --> 01:23:09.270 align:start position:0%
in this box now when I look when I use
um<01:23:07.760><c> to</c><01:23:07.960><c> spin</c><01:23:08.199><c> up</c><01:23:08.400><c> these</c><01:23:08.520><c> kinds</c><01:23:08.679><c> of</c><01:23:08.800><c> Boxes</c><01:23:09.159><c> by</c>

01:23:09.270 --> 01:23:09.280 align:start position:0%
um to spin up these kinds of Boxes by
 

01:23:09.280 --> 01:23:11.830 align:start position:0%
um to spin up these kinds of Boxes by
the<01:23:09.400><c> way</c><01:23:10.159><c> my</c><01:23:10.320><c> favorite</c><01:23:10.679><c> place</c><01:23:10.840><c> to</c><01:23:10.960><c> go</c><01:23:11.080><c> to</c><01:23:11.480><c> is</c>

01:23:11.830 --> 01:23:11.840 align:start position:0%
the way my favorite place to go to is
 

01:23:11.840 --> 01:23:14.910 align:start position:0%
the way my favorite place to go to is
Lambda<01:23:12.560><c> Labs</c><01:23:13.560><c> um</c><01:23:13.960><c> they</c><01:23:14.080><c> do</c><01:23:14.320><c> sponsor</c><01:23:14.760><c> my</c>

01:23:14.910 --> 01:23:14.920 align:start position:0%
Lambda Labs um they do sponsor my
 

01:23:14.920 --> 01:23:17.870 align:start position:0%
Lambda Labs um they do sponsor my
development<01:23:15.480><c> and</c><01:23:15.679><c> that</c><01:23:15.960><c> of</c><01:23:16.320><c> my</c><01:23:16.719><c> projects</c><01:23:17.719><c> uh</c>

01:23:17.870 --> 01:23:17.880 align:start position:0%
development and that of my projects uh
 

01:23:17.880 --> 01:23:19.990 align:start position:0%
development and that of my projects uh
but<01:23:18.120><c> I</c><01:23:18.320><c> this</c><01:23:18.480><c> is</c><01:23:18.560><c> my</c><01:23:18.679><c> favorite</c><01:23:19.000><c> place</c><01:23:19.120><c> to</c><01:23:19.320><c> go</c>

01:23:19.990 --> 01:23:20.000 align:start position:0%
but I this is my favorite place to go
 

01:23:20.000 --> 01:23:21.470 align:start position:0%
but I this is my favorite place to go
and<01:23:20.199><c> this</c><01:23:20.280><c> is</c><01:23:20.440><c> where</c><01:23:20.560><c> you</c><01:23:20.639><c> can</c><01:23:20.800><c> spin</c><01:23:21.040><c> up</c><01:23:21.239><c> one</c><01:23:21.360><c> of</c>

01:23:21.470 --> 01:23:21.480 align:start position:0%
and this is where you can spin up one of
 

01:23:21.480 --> 01:23:23.310 align:start position:0%
and this is where you can spin up one of
these<01:23:21.639><c> machines</c><01:23:22.080><c> and</c><01:23:22.199><c> you</c><01:23:22.320><c> pay</c><01:23:22.560><c> per</c><01:23:22.719><c> hour</c><01:23:23.199><c> and</c>

01:23:23.310 --> 01:23:23.320 align:start position:0%
these machines and you pay per hour and
 

01:23:23.320 --> 01:23:24.990 align:start position:0%
these machines and you pay per hour and
it's<01:23:23.480><c> very</c><01:23:23.679><c> very</c><01:23:23.880><c> simple</c>

01:23:24.990 --> 01:23:25.000 align:start position:0%
it's very very simple
 

01:23:25.000 --> 01:23:26.270 align:start position:0%
it's very very simple
so<01:23:25.159><c> I</c><01:23:25.280><c> like</c><01:23:25.400><c> to</c><01:23:25.480><c> spin</c><01:23:25.719><c> them</c><01:23:25.840><c> up</c><01:23:25.960><c> and</c><01:23:26.080><c> then</c>

01:23:26.270 --> 01:23:26.280 align:start position:0%
so I like to spin them up and then
 

01:23:26.280 --> 01:23:28.350 align:start position:0%
so I like to spin them up and then
connect<01:23:26.560><c> vsod</c><01:23:27.000><c> to</c><01:23:27.120><c> it</c><01:23:27.239><c> and</c><01:23:27.400><c> that's</c><01:23:27.560><c> how</c><01:23:27.920><c> I</c>

01:23:28.350 --> 01:23:28.360 align:start position:0%
connect vsod to it and that's how I
 

01:23:28.360 --> 01:23:30.830 align:start position:0%
connect vsod to it and that's how I
develop<01:23:29.360><c> now</c><01:23:29.679><c> when</c><01:23:29.800><c> we</c><01:23:29.920><c> look</c><01:23:30.040><c> at</c><01:23:30.159><c> the</c><01:23:30.280><c> A1</c><01:23:30.560><c> 100s</c>

01:23:30.830 --> 01:23:30.840 align:start position:0%
develop now when we look at the A1 100s
 

01:23:30.840 --> 01:23:34.990 align:start position:0%
develop now when we look at the A1 100s
that<01:23:30.920><c> are</c><01:23:31.080><c> available</c><01:23:32.000><c> here</c><01:23:33.000><c> a100</c><01:23:33.679><c> 80</c><01:23:34.000><c> GB</c><01:23:34.400><c> sxm</c>

01:23:34.990 --> 01:23:35.000 align:start position:0%
that are available here a100 80 GB sxm
 

01:23:35.000 --> 01:23:38.990 align:start position:0%
that are available here a100 80 GB sxm
is<01:23:35.239><c> the</c><01:23:36.000><c> um</c><01:23:37.000><c> GPU</c><01:23:37.440><c> that</c><01:23:37.639><c> I</c><01:23:37.840><c> have</c><01:23:38.120><c> here</c><01:23:38.800><c> and</c><01:23:38.920><c> we</c>

01:23:38.990 --> 01:23:39.000 align:start position:0%
is the um GPU that I have here and we
 

01:23:39.000 --> 01:23:41.910 align:start position:0%
is the um GPU that I have here and we
have<01:23:39.120><c> a</c><01:23:39.239><c> bunch</c><01:23:39.440><c> of</c><01:23:39.920><c> numbers</c><01:23:40.280><c> here</c><01:23:40.560><c> for</c><01:23:41.239><c> um</c><01:23:41.800><c> how</c>

01:23:41.910 --> 01:23:41.920 align:start position:0%
have a bunch of numbers here for um how
 

01:23:41.920 --> 01:23:43.310 align:start position:0%
have a bunch of numbers here for um how
many<01:23:42.159><c> calculations</c><01:23:42.639><c> you</c><01:23:42.719><c> can</c><01:23:42.880><c> expect</c><01:23:43.120><c> out</c><01:23:43.199><c> of</c>

01:23:43.310 --> 01:23:43.320 align:start position:0%
many calculations you can expect out of
 

01:23:43.320 --> 01:23:46.470 align:start position:0%
many calculations you can expect out of
this<01:23:43.600><c> GPU</c><01:23:44.600><c> so</c><01:23:44.719><c> when</c><01:23:44.840><c> I</c><01:23:44.960><c> come</c><01:23:45.120><c> over</c><01:23:45.400><c> here</c>

01:23:46.470 --> 01:23:46.480 align:start position:0%
this GPU so when I come over here
 

01:23:46.480 --> 01:23:50.390 align:start position:0%
this GPU so when I come over here
and<01:23:47.480><c> I</c><01:23:48.239><c> break</c><01:23:48.679><c> in</c><01:23:49.159><c> right</c><01:23:49.360><c> after</c><01:23:49.679><c> here</c><01:23:50.040><c> so</c>

01:23:50.390 --> 01:23:50.400 align:start position:0%
and I break in right after here so
 

01:23:50.400 --> 01:23:51.430 align:start position:0%
and I break in right after here so
python

01:23:51.430 --> 01:23:51.440 align:start position:0%
python
 

01:23:51.440 --> 01:23:53.629 align:start position:0%
python
trity<01:23:52.440><c> so</c><01:23:52.600><c> I'm</c><01:23:52.719><c> breaking</c><01:23:53.000><c> in</c><01:23:53.199><c> right</c><01:23:53.320><c> after</c><01:23:53.520><c> we</c>

01:23:53.629 --> 01:23:53.639 align:start position:0%
trity so I'm breaking in right after we
 

01:23:53.639 --> 01:23:55.669 align:start position:0%
trity so I'm breaking in right after we
calculate<01:23:53.960><c> the</c><01:23:54.040><c> loit</c><01:23:54.440><c> and</c>

01:23:55.669 --> 01:23:55.679 align:start position:0%
calculate the loit and
 

01:23:55.679 --> 01:23:57.790 align:start position:0%
calculate the loit and
laws<01:23:56.679><c> and</c><01:23:56.880><c> the</c><01:23:57.000><c> interesting</c><01:23:57.360><c> thing</c><01:23:57.520><c> I'd</c><01:23:57.679><c> like</c>

01:23:57.790 --> 01:23:57.800 align:start position:0%
laws and the interesting thing I'd like
 

01:23:57.800 --> 01:24:02.709 align:start position:0%
laws and the interesting thing I'd like
you<01:23:57.880><c> to</c><01:23:58.080><c> note</c><01:23:59.080><c> is</c><01:23:59.280><c> when</c><01:23:59.440><c> I</c><01:23:59.639><c> do</c><01:24:00.600><c> lit.</c><01:24:01.480><c> dtype</c><01:24:01.840><c> this</c>

01:24:02.709 --> 01:24:02.719 align:start position:0%
you to note is when I do lit. dtype this
 

01:24:02.719 --> 01:24:06.470 align:start position:0%
you to note is when I do lit. dtype this
prints<01:24:03.280><c> a</c><01:24:03.440><c> torch.</c><01:24:03.920><c> FL</c><01:24:04.239><c> 32</c><01:24:05.239><c> so</c><01:24:05.480><c> by</c><01:24:05.679><c> default</c><01:24:06.080><c> iny</c>

01:24:06.470 --> 01:24:06.480 align:start position:0%
prints a torch. FL 32 so by default iny
 

01:24:06.480 --> 01:24:08.950 align:start position:0%
prints a torch. FL 32 so by default iny
torch<01:24:06.920><c> when</c><01:24:07.040><c> you</c><01:24:07.199><c> create</c><01:24:07.520><c> tensors</c><01:24:08.520><c> um</c><01:24:08.840><c> and</c>

01:24:08.950 --> 01:24:08.960 align:start position:0%
torch when you create tensors um and
 

01:24:08.960 --> 01:24:10.390 align:start position:0%
torch when you create tensors um and
this<01:24:09.040><c> is</c><01:24:09.199><c> the</c><01:24:09.280><c> case</c><01:24:09.440><c> for</c><01:24:09.560><c> all</c><01:24:09.719><c> the</c><01:24:09.840><c> activations</c>

01:24:10.390 --> 01:24:10.400 align:start position:0%
this is the case for all the activations
 

01:24:10.400 --> 01:24:11.709 align:start position:0%
this is the case for all the activations
and<01:24:10.520><c> for</c><01:24:10.639><c> the</c><01:24:10.760><c> parameters</c><01:24:11.159><c> of</c><01:24:11.280><c> the</c><01:24:11.360><c> network</c>

01:24:11.709 --> 01:24:11.719 align:start position:0%
and for the parameters of the network
 

01:24:11.719 --> 01:24:13.709 align:start position:0%
and for the parameters of the network
and<01:24:11.840><c> so</c><01:24:12.000><c> on</c><01:24:12.480><c> by</c><01:24:12.639><c> default</c><01:24:13.080><c> everything</c><01:24:13.400><c> is</c><01:24:13.560><c> in</c>

01:24:13.709 --> 01:24:13.719 align:start position:0%
and so on by default everything is in
 

01:24:13.719 --> 01:24:17.350 align:start position:0%
and so on by default everything is in
float<01:24:14.400><c> 32</c><01:24:15.400><c> that</c><01:24:15.520><c> means</c><01:24:16.000><c> that</c><01:24:16.679><c> every</c><01:24:16.920><c> single</c>

01:24:17.350 --> 01:24:17.360 align:start position:0%
float 32 that means that every single
 

01:24:17.360 --> 01:24:20.470 align:start position:0%
float 32 that means that every single
number<01:24:17.840><c> activation</c><01:24:18.400><c> or</c><01:24:18.560><c> weight</c><01:24:18.840><c> and</c><01:24:19.000><c> so</c><01:24:19.159><c> on</c><01:24:20.040><c> is</c>

01:24:20.470 --> 01:24:20.480 align:start position:0%
number activation or weight and so on is
 

01:24:20.480 --> 01:24:23.270 align:start position:0%
number activation or weight and so on is
using<01:24:20.840><c> a</c><01:24:20.920><c> float</c><01:24:21.280><c> representation</c><01:24:22.280><c> that</c><01:24:22.520><c> has</c><01:24:22.719><c> 32</c>

01:24:23.270 --> 01:24:23.280 align:start position:0%
using a float representation that has 32
 

01:24:23.280 --> 01:24:26.070 align:start position:0%
using a float representation that has 32
bits<01:24:24.760><c> and</c><01:24:25.199><c> uh</c><01:24:25.320><c> that's</c><01:24:25.520><c> actually</c><01:24:25.760><c> quite</c><01:24:25.880><c> a</c><01:24:25.960><c> bit</c>

01:24:26.070 --> 01:24:26.080 align:start position:0%
bits and uh that's actually quite a bit
 

01:24:26.080 --> 01:24:27.629 align:start position:0%
bits and uh that's actually quite a bit
of<01:24:26.199><c> memory</c><01:24:26.520><c> and</c><01:24:26.600><c> it</c><01:24:26.679><c> turns</c><01:24:26.920><c> out</c><01:24:27.120><c> empirically</c>

01:24:27.629 --> 01:24:27.639 align:start position:0%
of memory and it turns out empirically
 

01:24:27.639 --> 01:24:28.709 align:start position:0%
of memory and it turns out empirically
that<01:24:27.760><c> for</c><01:24:27.920><c> deep</c><01:24:28.159><c> learning</c><01:24:28.480><c> as</c><01:24:28.600><c> a</c>

01:24:28.709 --> 01:24:28.719 align:start position:0%
that for deep learning as a
 

01:24:28.719 --> 01:24:30.550 align:start position:0%
that for deep learning as a
computational<01:24:29.199><c> workload</c><01:24:29.880><c> this</c><01:24:30.000><c> is</c><01:24:30.159><c> way</c><01:24:30.320><c> too</c>

01:24:30.550 --> 01:24:30.560 align:start position:0%
computational workload this is way too
 

01:24:30.560 --> 01:24:32.870 align:start position:0%
computational workload this is way too
much<01:24:31.239><c> and</c><01:24:31.440><c> deep</c><01:24:31.679><c> learning</c><01:24:32.199><c> and</c><01:24:32.360><c> the</c><01:24:32.520><c> training</c>

01:24:32.870 --> 01:24:32.880 align:start position:0%
much and deep learning and the training
 

01:24:32.880 --> 01:24:34.590 align:start position:0%
much and deep learning and the training
of<01:24:33.159><c> these</c><01:24:33.320><c> networks</c><01:24:33.960><c> can</c><01:24:34.120><c> tolerate</c>

01:24:34.590 --> 01:24:34.600 align:start position:0%
of these networks can tolerate
 

01:24:34.600 --> 01:24:37.390 align:start position:0%
of these networks can tolerate
significantly<01:24:35.159><c> lower</c><01:24:35.840><c> precisions</c><01:24:36.840><c> um</c><01:24:37.239><c> not</c>

01:24:37.390 --> 01:24:37.400 align:start position:0%
significantly lower precisions um not
 

01:24:37.400 --> 01:24:39.550 align:start position:0%
significantly lower precisions um not
all<01:24:37.600><c> computational</c><01:24:38.080><c> workflows</c><01:24:39.040><c> can</c><01:24:39.199><c> tolerate</c>

01:24:39.550 --> 01:24:39.560 align:start position:0%
all computational workflows can tolerate
 

01:24:39.560 --> 01:24:43.430 align:start position:0%
all computational workflows can tolerate
small<01:24:39.840><c> Precision</c><01:24:40.520><c> so</c><01:24:40.679><c> for</c><01:24:40.880><c> example</c><01:24:42.199><c> um</c><01:24:43.199><c> if</c><01:24:43.280><c> we</c>

01:24:43.430 --> 01:24:43.440 align:start position:0%
small Precision so for example um if we
 

01:24:43.440 --> 01:24:45.910 align:start position:0%
small Precision so for example um if we
go<01:24:43.600><c> back</c><01:24:43.760><c> to</c><01:24:44.239><c> to</c><01:24:44.400><c> the</c><01:24:44.560><c> data</c><01:24:44.800><c> sheet</c><01:24:45.520><c> you'll</c><01:24:45.719><c> see</c>

01:24:45.910 --> 01:24:45.920 align:start position:0%
go back to to the data sheet you'll see
 

01:24:45.920 --> 01:24:48.270 align:start position:0%
go back to to the data sheet you'll see
that<01:24:46.080><c> actually</c><01:24:46.360><c> these</c><01:24:46.520><c> gpus</c><01:24:47.080><c> support</c><01:24:47.440><c> up</c><01:24:47.560><c> to</c>

01:24:48.270 --> 01:24:48.280 align:start position:0%
that actually these gpus support up to
 

01:24:48.280 --> 01:24:50.709 align:start position:0%
that actually these gpus support up to
fp64<01:24:49.280><c> and</c><01:24:49.400><c> this</c><01:24:49.520><c> is</c><01:24:49.880><c> quite</c><01:24:50.080><c> useful</c><01:24:50.400><c> I</c>

01:24:50.709 --> 01:24:50.719 align:start position:0%
fp64 and this is quite useful I
 

01:24:50.719 --> 01:24:52.629 align:start position:0%
fp64 and this is quite useful I
understand<01:24:50.880><c> for</c><01:24:51.080><c> a</c><01:24:51.199><c> lot</c><01:24:51.320><c> of</c><01:24:51.679><c> um</c><01:24:52.159><c> scientific</c>

01:24:52.629 --> 01:24:52.639 align:start position:0%
understand for a lot of um scientific
 

01:24:52.639 --> 01:24:54.709 align:start position:0%
understand for a lot of um scientific
Computing<01:24:53.040><c> applications</c><01:24:53.880><c> and</c><01:24:54.000><c> there</c><01:24:54.520><c> really</c>

01:24:54.709 --> 01:24:54.719 align:start position:0%
Computing applications and there really
 

01:24:54.719 --> 01:24:56.830 align:start position:0%
Computing applications and there really
need<01:24:55.000><c> this</c><01:24:55.760><c> uh</c><01:24:55.880><c> but</c><01:24:56.040><c> we</c><01:24:56.159><c> don't</c><01:24:56.320><c> need</c><01:24:56.520><c> that</c><01:24:56.639><c> much</c>

01:24:56.830 --> 01:24:56.840 align:start position:0%
need this uh but we don't need that much
 

01:24:56.840 --> 01:24:59.189 align:start position:0%
need this uh but we don't need that much
Precision<01:24:57.159><c> for</c><01:24:57.320><c> deep</c><01:24:57.520><c> learning</c><01:24:57.840><c> training</c><01:24:58.760><c> So</c>

01:24:59.189 --> 01:24:59.199 align:start position:0%
Precision for deep learning training So
 

01:24:59.199 --> 01:25:01.149 align:start position:0%
Precision for deep learning training So
currently<01:24:59.600><c> we</c><01:24:59.719><c> are</c><01:24:59.960><c> here</c>

01:25:01.149 --> 01:25:01.159 align:start position:0%
currently we are here
 

01:25:01.159 --> 01:25:04.189 align:start position:0%
currently we are here
fp32<01:25:02.159><c> and</c><01:25:03.000><c> with</c><01:25:03.199><c> this</c><01:25:03.360><c> code</c><01:25:03.639><c> as</c><01:25:03.719><c> it</c><01:25:03.840><c> is</c><01:25:04.080><c> right</c>

01:25:04.189 --> 01:25:04.199 align:start position:0%
fp32 and with this code as it is right
 

01:25:04.199 --> 01:25:07.990 align:start position:0%
fp32 and with this code as it is right
now<01:25:04.679><c> we</c><01:25:04.840><c> expect</c><01:25:05.119><c> to</c><01:25:05.320><c> get</c><01:25:05.679><c> at</c><01:25:06.440><c> at</c><01:25:06.639><c> most</c><01:25:07.119><c> 19.5</c>

01:25:07.990 --> 01:25:08.000 align:start position:0%
now we expect to get at at most 19.5
 

01:25:08.000 --> 01:25:10.669 align:start position:0%
now we expect to get at at most 19.5
Tera<01:25:08.360><c> flops</c><01:25:09.159><c> of</c><01:25:09.400><c> performance</c><01:25:10.400><c> that</c><01:25:10.520><c> means</c>

01:25:10.669 --> 01:25:10.679 align:start position:0%
Tera flops of performance that means
 

01:25:10.679 --> 01:25:13.350 align:start position:0%
Tera flops of performance that means
we're<01:25:10.840><c> doing</c><01:25:11.080><c> 19.5</c><01:25:11.800><c> trillion</c><01:25:12.440><c> operations</c>

01:25:13.350 --> 01:25:13.360 align:start position:0%
we're doing 19.5 trillion operations
 

01:25:13.360 --> 01:25:15.270 align:start position:0%
we're doing 19.5 trillion operations
floating<01:25:13.800><c> Point</c><01:25:14.040><c> operations</c><01:25:14.840><c> so</c><01:25:15.000><c> this</c><01:25:15.119><c> is</c>

01:25:15.270 --> 01:25:15.280 align:start position:0%
floating Point operations so this is
 

01:25:15.280 --> 01:25:20.390 align:start position:0%
floating Point operations so this is
floating<01:25:15.639><c> Point</c><01:25:15.840><c> multiply</c><01:25:16.600><c> add</c><01:25:17.560><c> most</c><01:25:18.560><c> um</c><01:25:19.440><c> most</c>

01:25:20.390 --> 01:25:20.400 align:start position:0%
floating Point multiply add most um most
 

01:25:20.400 --> 01:25:23.070 align:start position:0%
floating Point multiply add most um most
likely<01:25:21.400><c> and</c><01:25:21.560><c> so</c><01:25:22.199><c> these</c><01:25:22.320><c> are</c><01:25:22.520><c> the</c><01:25:22.679><c> floating</c>

01:25:23.070 --> 01:25:23.080 align:start position:0%
likely and so these are the floating
 

01:25:23.080 --> 01:25:25.430 align:start position:0%
likely and so these are the floating
Point<01:25:23.280><c> operations</c>

01:25:25.430 --> 01:25:25.440 align:start position:0%
Point operations
 

01:25:25.440 --> 01:25:27.669 align:start position:0%
Point operations
uh<01:25:25.639><c> now</c><01:25:25.880><c> notice</c><01:25:26.239><c> that</c><01:25:26.760><c> if</c><01:25:26.880><c> we</c><01:25:27.000><c> are</c><01:25:27.159><c> willing</c><01:25:27.440><c> to</c>

01:25:27.669 --> 01:25:27.679 align:start position:0%
uh now notice that if we are willing to
 

01:25:27.679 --> 01:25:31.590 align:start position:0%
uh now notice that if we are willing to
go<01:25:27.920><c> down</c><01:25:28.159><c> in</c><01:25:28.400><c> Precision</c><01:25:29.080><c> so</c><01:25:29.880><c> tf32</c><01:25:30.880><c> is</c><01:25:31.159><c> a</c><01:25:31.280><c> lower</c>

01:25:31.590 --> 01:25:31.600 align:start position:0%
go down in Precision so tf32 is a lower
 

01:25:31.600 --> 01:25:32.910 align:start position:0%
go down in Precision so tf32 is a lower
Precision<01:25:31.920><c> format</c><01:25:32.280><c> we're</c><01:25:32.400><c> going</c><01:25:32.480><c> to</c><01:25:32.560><c> see</c><01:25:32.719><c> in</c><01:25:32.800><c> a</c>

01:25:32.910 --> 01:25:32.920 align:start position:0%
Precision format we're going to see in a
 

01:25:32.920 --> 01:25:34.950 align:start position:0%
Precision format we're going to see in a
second<01:25:33.480><c> you</c><01:25:33.560><c> can</c><01:25:33.760><c> actually</c><01:25:33.960><c> get</c><01:25:34.080><c> an</c><01:25:34.239><c> 8X</c>

01:25:34.950 --> 01:25:34.960 align:start position:0%
second you can actually get an 8X
 

01:25:34.960 --> 01:25:36.629 align:start position:0%
second you can actually get an 8X
Improvement<01:25:35.480><c> here</c><01:25:36.080><c> and</c><01:25:36.199><c> if</c><01:25:36.280><c> you're</c><01:25:36.400><c> willing</c>

01:25:36.629 --> 01:25:36.639 align:start position:0%
Improvement here and if you're willing
 

01:25:36.639 --> 01:25:39.629 align:start position:0%
Improvement here and if you're willing
to<01:25:36.800><c> go</c><01:25:36.960><c> down</c><01:25:37.119><c> to</c><01:25:37.480><c> float</c><01:25:37.880><c> 16</c><01:25:38.119><c> or</c><01:25:38.280><c> B</c><01:25:38.480><c> float</c><01:25:38.760><c> 16</c><01:25:39.560><c> you</c>

01:25:39.629 --> 01:25:39.639 align:start position:0%
to go down to float 16 or B float 16 you
 

01:25:39.639 --> 01:25:42.470 align:start position:0%
to go down to float 16 or B float 16 you
can<01:25:39.800><c> actually</c><01:25:40.000><c> get</c><01:25:40.280><c> time</c><01:25:40.800><c> 16x</c><01:25:41.800><c> performance</c>

01:25:42.470 --> 01:25:42.480 align:start position:0%
can actually get time 16x performance
 

01:25:42.480 --> 01:25:45.950 align:start position:0%
can actually get time 16x performance
all<01:25:42.639><c> the</c><01:25:42.719><c> way</c><01:25:42.880><c> to</c><01:25:43.080><c> 312</c><01:25:44.080><c> Tera</c><01:25:44.639><c> flops</c><01:25:45.639><c> you</c><01:25:45.760><c> see</c>

01:25:45.950 --> 01:25:45.960 align:start position:0%
all the way to 312 Tera flops you see
 

01:25:45.960 --> 01:25:47.870 align:start position:0%
all the way to 312 Tera flops you see
here<01:25:46.080><c> that</c><01:25:46.239><c> Nvidia</c><01:25:46.679><c> likes</c><01:25:46.880><c> to</c><01:25:47.040><c> site</c><01:25:47.520><c> numbers</c>

01:25:47.870 --> 01:25:47.880 align:start position:0%
here that Nvidia likes to site numbers
 

01:25:47.880 --> 01:25:50.430 align:start position:0%
here that Nvidia likes to site numbers
that<01:25:48.000><c> have</c><01:25:48.119><c> an</c><01:25:48.280><c> asterisk</c><01:25:48.760><c> here</c><01:25:49.280><c> this</c><01:25:49.440><c> asterisk</c>

01:25:50.430 --> 01:25:50.440 align:start position:0%
that have an asterisk here this asterisk
 

01:25:50.440 --> 01:25:52.709 align:start position:0%
that have an asterisk here this asterisk
uh<01:25:50.560><c> says</c><01:25:50.920><c> with</c><01:25:51.119><c> sparsity</c><01:25:52.119><c> uh</c><01:25:52.239><c> but</c><01:25:52.360><c> we</c><01:25:52.480><c> are</c><01:25:52.600><c> not</c>

01:25:52.709 --> 01:25:52.719 align:start position:0%
uh says with sparsity uh but we are not
 

01:25:52.719 --> 01:25:55.149 align:start position:0%
uh says with sparsity uh but we are not
going<01:25:52.800><c> to</c><01:25:52.920><c> be</c><01:25:53.040><c> using</c><01:25:53.280><c> sparsity</c><01:25:53.960><c> in</c><01:25:54.320><c> R</c><01:25:54.560><c> code</c><01:25:55.000><c> and</c>

01:25:55.149 --> 01:25:55.159 align:start position:0%
going to be using sparsity in R code and
 

01:25:55.159 --> 01:25:56.950 align:start position:0%
going to be using sparsity in R code and
I<01:25:55.239><c> don't</c><01:25:55.639><c> know</c><01:25:55.880><c> that</c><01:25:56.080><c> this</c><01:25:56.199><c> is</c><01:25:56.520><c> very</c><01:25:56.719><c> widely</c>

01:25:56.950 --> 01:25:56.960 align:start position:0%
I don't know that this is very widely
 

01:25:56.960 --> 01:25:58.910 align:start position:0%
I don't know that this is very widely
used<01:25:57.199><c> in</c><01:25:57.280><c> the</c><01:25:57.400><c> industry</c><01:25:57.840><c> right</c><01:25:58.000><c> now</c><01:25:58.440><c> so</c><01:25:58.679><c> most</c>

01:25:58.910 --> 01:25:58.920 align:start position:0%
used in the industry right now so most
 

01:25:58.920 --> 01:26:01.030 align:start position:0%
used in the industry right now so most
people<01:25:59.159><c> look</c><01:25:59.360><c> at</c><01:25:59.800><c> this</c><01:25:59.960><c> number</c><01:26:00.320><c> here</c><01:26:00.920><c> uh</c>

01:26:01.030 --> 01:26:01.040 align:start position:0%
people look at this number here uh
 

01:26:01.040 --> 01:26:03.430 align:start position:0%
people look at this number here uh
without<01:26:01.800><c> sparcity</c><01:26:02.800><c> and</c><01:26:02.920><c> you'll</c><01:26:03.080><c> notice</c><01:26:03.320><c> that</c>

01:26:03.430 --> 01:26:03.440 align:start position:0%
without sparcity and you'll notice that
 

01:26:03.440 --> 01:26:05.510 align:start position:0%
without sparcity and you'll notice that
we<01:26:03.520><c> could</c><01:26:03.639><c> have</c><01:26:03.760><c> got</c><01:26:04.080><c> even</c><01:26:04.280><c> more</c><01:26:04.639><c> here</c><01:26:05.320><c> but</c>

01:26:05.510 --> 01:26:05.520 align:start position:0%
we could have got even more here but
 

01:26:05.520 --> 01:26:08.750 align:start position:0%
we could have got even more here but
this<01:26:05.639><c> is</c><01:26:05.920><c> int</c><01:26:06.199><c> 8</c><01:26:07.119><c> and</c><01:26:07.320><c> int</c><01:26:07.520><c> 8</c><01:26:07.880><c> is</c><01:26:08.080><c> used</c><01:26:08.480><c> for</c>

01:26:08.750 --> 01:26:08.760 align:start position:0%
this is int 8 and int 8 is used for
 

01:26:08.760 --> 01:26:11.590 align:start position:0%
this is int 8 and int 8 is used for
inference<01:26:09.440><c> not</c><01:26:09.600><c> for</c><01:26:10.040><c> training</c><01:26:11.040><c> uh</c><01:26:11.199><c> because</c>

01:26:11.590 --> 01:26:11.600 align:start position:0%
inference not for training uh because
 

01:26:11.600 --> 01:26:17.070 align:start position:0%
inference not for training uh because
int<01:26:11.960><c> 8</c><01:26:12.520><c> has</c><01:26:13.080><c> a</c><01:26:14.480><c> um</c><01:26:15.480><c> it</c><01:26:15.639><c> basically</c><01:26:16.080><c> has</c><01:26:16.600><c> um</c>

01:26:17.070 --> 01:26:17.080 align:start position:0%
int 8 has a um it basically has um
 

01:26:17.080 --> 01:26:18.390 align:start position:0%
int 8 has a um it basically has um
uniform

01:26:18.390 --> 01:26:18.400 align:start position:0%
uniform
 

01:26:18.400 --> 01:26:21.910 align:start position:0%
uniform
spacing<01:26:19.400><c> um</c><01:26:20.080><c> and</c><01:26:20.840><c> uh</c><01:26:21.000><c> we</c><01:26:21.199><c> actually</c><01:26:21.440><c> require</c><01:26:21.800><c> a</c>

01:26:21.910 --> 01:26:21.920 align:start position:0%
spacing um and uh we actually require a
 

01:26:21.920 --> 01:26:24.629 align:start position:0%
spacing um and uh we actually require a
float<01:26:22.560><c> so</c><01:26:22.760><c> that</c><01:26:22.880><c> we</c><01:26:23.000><c> get</c><01:26:23.119><c> a</c><01:26:23.280><c> better</c><01:26:23.600><c> match</c><01:26:24.360><c> to</c>

01:26:24.629 --> 01:26:24.639 align:start position:0%
float so that we get a better match to
 

01:26:24.639 --> 01:26:28.030 align:start position:0%
float so that we get a better match to
the<01:26:25.320><c> uh</c><01:26:25.520><c> normal</c><01:26:26.119><c> distributions</c><01:26:27.119><c> that</c><01:26:27.320><c> occur</c>

01:26:28.030 --> 01:26:28.040 align:start position:0%
the uh normal distributions that occur
 

01:26:28.040 --> 01:26:29.870 align:start position:0%
the uh normal distributions that occur
during<01:26:28.320><c> training</c><01:26:28.639><c> of</c><01:26:28.760><c> neural</c><01:26:29.040><c> networks</c><01:26:29.639><c> where</c>

01:26:29.870 --> 01:26:29.880 align:start position:0%
during training of neural networks where
 

01:26:29.880 --> 01:26:31.470 align:start position:0%
during training of neural networks where
both<01:26:30.280><c> activations</c><01:26:30.840><c> and</c><01:26:31.000><c> weights</c><01:26:31.320><c> are</c>

01:26:31.470 --> 01:26:31.480 align:start position:0%
both activations and weights are
 

01:26:31.480 --> 01:26:33.870 align:start position:0%
both activations and weights are
distributed<01:26:32.000><c> as</c><01:26:32.080><c> a</c><01:26:32.199><c> normal</c><01:26:32.719><c> distribution</c><01:26:33.719><c> and</c>

01:26:33.870 --> 01:26:33.880 align:start position:0%
distributed as a normal distribution and
 

01:26:33.880 --> 01:26:35.550 align:start position:0%
distributed as a normal distribution and
so<01:26:34.400><c> uh</c><01:26:34.520><c> floating</c><01:26:34.960><c> points</c><01:26:35.199><c> are</c><01:26:35.360><c> really</c>

01:26:35.550 --> 01:26:35.560 align:start position:0%
so uh floating points are really
 

01:26:35.560 --> 01:26:38.390 align:start position:0%
so uh floating points are really
important<01:26:35.920><c> to</c><01:26:36.320><c> to</c><01:26:36.560><c> match</c><01:26:37.000><c> that</c><01:26:37.639><c> uh</c>

01:26:38.390 --> 01:26:38.400 align:start position:0%
important to to match that uh
 

01:26:38.400 --> 01:26:40.390 align:start position:0%
important to to match that uh
representation<01:26:39.400><c> so</c><01:26:39.560><c> we're</c><01:26:39.719><c> not</c><01:26:40.000><c> typically</c>

01:26:40.390 --> 01:26:40.400 align:start position:0%
representation so we're not typically
 

01:26:40.400 --> 01:26:42.750 align:start position:0%
representation so we're not typically
using<01:26:40.679><c> int</c><01:26:40.960><c> 8</c><01:26:41.639><c> uh</c><01:26:41.719><c> for</c><01:26:41.920><c> training</c><01:26:42.360><c> but</c><01:26:42.480><c> we</c><01:26:42.560><c> are</c>

01:26:42.750 --> 01:26:42.760 align:start position:0%
using int 8 uh for training but we are
 

01:26:42.760 --> 01:26:45.550 align:start position:0%
using int 8 uh for training but we are
using<01:26:43.000><c> it</c><01:26:43.119><c> for</c><01:26:43.520><c> inference</c><01:26:44.520><c> and</c><01:26:45.000><c> if</c><01:26:45.119><c> we</c><01:26:45.320><c> bring</c>

01:26:45.550 --> 01:26:45.560 align:start position:0%
using it for inference and if we bring
 

01:26:45.560 --> 01:26:47.750 align:start position:0%
using it for inference and if we bring
down<01:26:45.719><c> the</c><01:26:45.880><c> Precision</c><01:26:46.679><c> we</c><01:26:46.800><c> can</c><01:26:46.960><c> get</c><01:26:47.119><c> a</c><01:26:47.280><c> lot</c><01:26:47.480><c> more</c>

01:26:47.750 --> 01:26:47.760 align:start position:0%
down the Precision we can get a lot more
 

01:26:47.760 --> 01:26:49.669 align:start position:0%
down the Precision we can get a lot more
Terra<01:26:48.119><c> flops</c><01:26:48.600><c> out</c><01:26:48.719><c> of</c><01:26:48.840><c> the</c><01:26:48.960><c> tensor</c><01:26:49.320><c> course</c>

01:26:49.669 --> 01:26:49.679 align:start position:0%
Terra flops out of the tensor course
 

01:26:49.679 --> 01:26:51.430 align:start position:0%
Terra flops out of the tensor course
available<01:26:50.000><c> in</c><01:26:50.119><c> the</c><01:26:50.199><c> gpus</c><01:26:50.880><c> we'll</c><01:26:51.080><c> talk</c><01:26:51.239><c> about</c>

01:26:51.430 --> 01:26:51.440 align:start position:0%
available in the gpus we'll talk about
 

01:26:51.440 --> 01:26:53.590 align:start position:0%
available in the gpus we'll talk about
that<01:26:51.520><c> in</c><01:26:51.639><c> a</c><01:26:51.760><c> second</c><01:26:52.600><c> but</c><01:26:52.800><c> in</c><01:26:52.920><c> addition</c><01:26:53.199><c> to</c><01:26:53.400><c> that</c>

01:26:53.590 --> 01:26:53.600 align:start position:0%
that in a second but in addition to that
 

01:26:53.600 --> 01:26:56.550 align:start position:0%
that in a second but in addition to that
if<01:26:53.719><c> all</c><01:26:53.840><c> of</c><01:26:53.920><c> these</c><01:26:54.239><c> numbers</c><01:26:55.199><c> have</c><01:26:55.480><c> fewer</c><01:26:55.880><c> bits</c>

01:26:56.550 --> 01:26:56.560 align:start position:0%
if all of these numbers have fewer bits
 

01:26:56.560 --> 01:26:58.510 align:start position:0%
if all of these numbers have fewer bits
of<01:26:56.800><c> representation</c><01:26:57.800><c> it's</c><01:26:57.960><c> going</c><01:26:58.040><c> to</c><01:26:58.159><c> be</c><01:26:58.360><c> much</c>

01:26:58.510 --> 01:26:58.520 align:start position:0%
of representation it's going to be much
 

01:26:58.520 --> 01:27:00.590 align:start position:0%
of representation it's going to be much
easier<01:26:58.840><c> to</c><01:26:58.960><c> move</c><01:26:59.199><c> them</c><01:26:59.400><c> around</c><01:27:00.320><c> and</c><01:27:00.440><c> that's</c>

01:27:00.590 --> 01:27:00.600 align:start position:0%
easier to move them around and that's
 

01:27:00.600 --> 01:27:02.149 align:start position:0%
easier to move them around and that's
where<01:27:00.719><c> we</c><01:27:00.840><c> start</c><01:27:01.000><c> to</c><01:27:01.080><c> get</c><01:27:01.239><c> into</c><01:27:01.440><c> the</c><01:27:01.760><c> memory</c>

01:27:02.149 --> 01:27:02.159 align:start position:0%
where we start to get into the memory
 

01:27:02.159 --> 01:27:04.750 align:start position:0%
where we start to get into the memory
bandwidth<01:27:02.719><c> and</c><01:27:02.880><c> the</c><01:27:03.000><c> memory</c><01:27:03.440><c> of</c><01:27:03.560><c> the</c><01:27:03.679><c> model</c><01:27:04.560><c> so</c>

01:27:04.750 --> 01:27:04.760 align:start position:0%
bandwidth and the memory of the model so
 

01:27:04.760 --> 01:27:06.669 align:start position:0%
bandwidth and the memory of the model so
not<01:27:04.880><c> only</c><01:27:05.080><c> do</c><01:27:05.199><c> we</c><01:27:05.320><c> have</c><01:27:05.400><c> a</c><01:27:05.520><c> finite</c><01:27:05.920><c> capacity</c><01:27:06.520><c> of</c>

01:27:06.669 --> 01:27:06.679 align:start position:0%
not only do we have a finite capacity of
 

01:27:06.679 --> 01:27:08.750 align:start position:0%
not only do we have a finite capacity of
the<01:27:06.800><c> number</c><01:27:07.040><c> of</c><01:27:07.239><c> bits</c><01:27:07.639><c> that</c><01:27:07.760><c> our</c><01:27:07.920><c> GPU</c><01:27:08.320><c> can</c>

01:27:08.750 --> 01:27:08.760 align:start position:0%
the number of bits that our GPU can
 

01:27:08.760 --> 01:27:11.270 align:start position:0%
the number of bits that our GPU can
store<01:27:09.760><c> but</c><01:27:09.920><c> in</c><01:27:10.080><c> addition</c><01:27:10.400><c> to</c><01:27:10.560><c> that</c><01:27:10.880><c> there's</c><01:27:11.119><c> a</c>

01:27:11.270 --> 01:27:11.280 align:start position:0%
store but in addition to that there's a
 

01:27:11.280 --> 01:27:13.229 align:start position:0%
store but in addition to that there's a
speed<01:27:11.600><c> with</c><01:27:11.760><c> which</c><01:27:11.880><c> you</c><01:27:12.000><c> can</c><01:27:12.280><c> access</c><01:27:12.920><c> this</c>

01:27:13.229 --> 01:27:13.239 align:start position:0%
speed with which you can access this
 

01:27:13.239 --> 01:27:16.229 align:start position:0%
speed with which you can access this
memory<01:27:14.239><c> um</c><01:27:14.960><c> and</c><01:27:15.280><c> you</c><01:27:15.400><c> have</c><01:27:15.520><c> a</c><01:27:15.639><c> certain</c><01:27:15.880><c> memory</c>

01:27:16.229 --> 01:27:16.239 align:start position:0%
memory um and you have a certain memory
 

01:27:16.239 --> 01:27:19.030 align:start position:0%
memory um and you have a certain memory
bandwidth<01:27:16.960><c> it's</c><01:27:17.080><c> a</c><01:27:17.239><c> very</c><01:27:17.440><c> precious</c><01:27:18.040><c> resource</c>

01:27:19.030 --> 01:27:19.040 align:start position:0%
bandwidth it's a very precious resource
 

01:27:19.040 --> 01:27:21.270 align:start position:0%
bandwidth it's a very precious resource
and<01:27:19.280><c> in</c><01:27:19.400><c> fact</c><01:27:19.639><c> many</c><01:27:19.840><c> of</c><01:27:19.960><c> the</c><01:27:20.119><c> deep</c><01:27:20.360><c> learning</c><01:27:21.000><c> uh</c>

01:27:21.270 --> 01:27:21.280 align:start position:0%
and in fact many of the deep learning uh
 

01:27:21.280 --> 01:27:23.270 align:start position:0%
and in fact many of the deep learning uh
work<01:27:21.520><c> workloads</c><01:27:22.000><c> for</c><01:27:22.159><c> training</c><01:27:22.719><c> are</c><01:27:22.960><c> memory</c>

01:27:23.270 --> 01:27:23.280 align:start position:0%
work workloads for training are memory
 

01:27:23.280 --> 01:27:25.189 align:start position:0%
work workloads for training are memory
bound<01:27:23.960><c> and</c><01:27:24.239><c> what</c><01:27:24.360><c> that</c><01:27:24.440><c> means</c><01:27:24.679><c> is</c><01:27:24.880><c> actually</c>

01:27:25.189 --> 01:27:25.199 align:start position:0%
bound and what that means is actually
 

01:27:25.199 --> 01:27:27.629 align:start position:0%
bound and what that means is actually
that<01:27:25.400><c> the</c><01:27:25.560><c> tensor</c><01:27:25.920><c> cores</c><01:27:26.639><c> that</c><01:27:26.760><c> do</c><01:27:26.960><c> all</c><01:27:27.199><c> these</c>

01:27:27.629 --> 01:27:27.639 align:start position:0%
that the tensor cores that do all these
 

01:27:27.639 --> 01:27:29.709 align:start position:0%
that the tensor cores that do all these
extremely<01:27:28.080><c> fast</c><01:27:28.440><c> multiplications</c><01:27:29.440><c> most</c><01:27:29.600><c> of</c>

01:27:29.709 --> 01:27:29.719 align:start position:0%
extremely fast multiplications most of
 

01:27:29.719 --> 01:27:31.229 align:start position:0%
extremely fast multiplications most of
the<01:27:29.840><c> time</c><01:27:30.000><c> they're</c><01:27:30.159><c> waiting</c><01:27:30.480><c> around</c><01:27:31.000><c> they're</c>

01:27:31.229 --> 01:27:31.239 align:start position:0%
the time they're waiting around they're
 

01:27:31.239 --> 01:27:34.510 align:start position:0%
the time they're waiting around they're
idle<01:27:32.239><c> um</c><01:27:32.760><c> because</c><01:27:33.040><c> we</c><01:27:33.199><c> can't</c><01:27:33.600><c> feed</c><01:27:34.000><c> them</c><01:27:34.320><c> with</c>

01:27:34.510 --> 01:27:34.520 align:start position:0%
idle um because we can't feed them with
 

01:27:34.520 --> 01:27:36.990 align:start position:0%
idle um because we can't feed them with
data<01:27:34.880><c> fast</c><01:27:35.159><c> enough</c><01:27:35.719><c> we</c><01:27:35.840><c> can't</c><01:27:36.080><c> load</c><01:27:36.560><c> the</c><01:27:36.719><c> data</c>

01:27:36.990 --> 01:27:37.000 align:start position:0%
data fast enough we can't load the data
 

01:27:37.000 --> 01:27:38.709 align:start position:0%
data fast enough we can't load the data
fast<01:27:37.199><c> enough</c><01:27:37.360><c> from</c><01:27:37.520><c> memory</c><01:27:38.159><c> so</c><01:27:38.400><c> typical</c>

01:27:38.709 --> 01:27:38.719 align:start position:0%
fast enough from memory so typical
 

01:27:38.719 --> 01:27:40.629 align:start position:0%
fast enough from memory so typical
utilizations<01:27:39.480><c> of</c><01:27:39.600><c> your</c><01:27:39.800><c> Hardware</c><01:27:40.400><c> if</c><01:27:40.520><c> you're</c>

01:27:40.629 --> 01:27:40.639 align:start position:0%
utilizations of your Hardware if you're
 

01:27:40.639 --> 01:27:43.109 align:start position:0%
utilizations of your Hardware if you're
getting<01:27:40.960><c> 60%</c><01:27:41.960><c> uh</c><01:27:42.119><c> utilization</c><01:27:42.920><c> you're</c>

01:27:43.109 --> 01:27:43.119 align:start position:0%
getting 60% uh utilization you're
 

01:27:43.119 --> 01:27:46.149 align:start position:0%
getting 60% uh utilization you're
actually<01:27:43.320><c> doing</c><01:27:43.639><c> extremely</c><01:27:44.080><c> well</c><01:27:44.880><c> um</c><01:27:45.719><c> so</c><01:27:46.040><c> half</c>

01:27:46.149 --> 01:27:46.159 align:start position:0%
actually doing extremely well um so half
 

01:27:46.159 --> 01:27:48.510 align:start position:0%
actually doing extremely well um so half
of<01:27:46.320><c> the</c><01:27:46.520><c> time</c><01:27:46.960><c> in</c><01:27:47.080><c> a</c><01:27:47.239><c> well-tuned</c><01:27:47.600><c> application</c>

01:27:48.510 --> 01:27:48.520 align:start position:0%
of the time in a well-tuned application
 

01:27:48.520 --> 01:27:50.189 align:start position:0%
of the time in a well-tuned application
your<01:27:48.679><c> tensor</c><01:27:49.040><c> cores</c><01:27:49.440><c> are</c><01:27:49.639><c> not</c><01:27:49.800><c> doing</c>

01:27:50.189 --> 01:27:50.199 align:start position:0%
your tensor cores are not doing
 

01:27:50.199 --> 01:27:51.550 align:start position:0%
your tensor cores are not doing
multiplies<01:27:50.800><c> because</c><01:27:50.960><c> the</c><01:27:51.080><c> data</c><01:27:51.280><c> is</c><01:27:51.360><c> not</c>

01:27:51.550 --> 01:27:51.560 align:start position:0%
multiplies because the data is not
 

01:27:51.560 --> 01:27:53.550 align:start position:0%
multiplies because the data is not
available<01:27:52.560><c> so</c><01:27:52.719><c> the</c><01:27:52.800><c> memory</c><01:27:53.080><c> bandwidth</c><01:27:53.480><c> here</c>

01:27:53.550 --> 01:27:53.560 align:start position:0%
available so the memory bandwidth here
 

01:27:53.560 --> 01:27:55.750 align:start position:0%
available so the memory bandwidth here
is<01:27:53.679><c> extremely</c><01:27:54.239><c> important</c><01:27:54.600><c> as</c><01:27:54.719><c> well</c><01:27:55.280><c> and</c><01:27:55.440><c> if</c><01:27:55.560><c> we</c>

01:27:55.750 --> 01:27:55.760 align:start position:0%
is extremely important as well and if we
 

01:27:55.760 --> 01:27:58.109 align:start position:0%
is extremely important as well and if we
come<01:27:56.040><c> down</c><01:27:56.280><c> in</c><01:27:56.400><c> the</c><01:27:56.679><c> Precision</c><01:27:57.679><c> for</c><01:27:57.880><c> all</c><01:27:58.000><c> the</c>

01:27:58.109 --> 01:27:58.119 align:start position:0%
come down in the Precision for all the
 

01:27:58.119 --> 01:28:00.229 align:start position:0%
come down in the Precision for all the
floats<01:27:59.000><c> all</c><01:27:59.239><c> the</c><01:27:59.360><c> numbers</c><01:27:59.840><c> weights</c><01:28:00.080><c> and</c>

01:28:00.229 --> 01:28:00.239 align:start position:0%
floats all the numbers weights and
 

01:28:00.239 --> 01:28:02.950 align:start position:0%
floats all the numbers weights and
activations<01:28:01.080><c> suddenly</c><01:28:01.480><c> require</c><01:28:01.840><c> less</c><01:28:02.040><c> memory</c>

01:28:02.950 --> 01:28:02.960 align:start position:0%
activations suddenly require less memory
 

01:28:02.960 --> 01:28:05.149 align:start position:0%
activations suddenly require less memory
so<01:28:03.199><c> we</c><01:28:03.320><c> can</c><01:28:03.520><c> store</c><01:28:03.880><c> more</c><01:28:04.400><c> and</c><01:28:04.520><c> we</c><01:28:04.639><c> can</c><01:28:04.880><c> access</c>

01:28:05.149 --> 01:28:05.159 align:start position:0%
so we can store more and we can access
 

01:28:05.159 --> 01:28:07.470 align:start position:0%
so we can store more and we can access
it<01:28:05.400><c> faster</c><01:28:06.199><c> so</c><01:28:06.480><c> everything</c><01:28:06.800><c> speeds</c><01:28:07.159><c> up</c><01:28:07.360><c> and</c>

01:28:07.470 --> 01:28:07.480 align:start position:0%
it faster so everything speeds up and
 

01:28:07.480 --> 01:28:09.870 align:start position:0%
it faster so everything speeds up and
it's<01:28:07.679><c> amazing</c><01:28:08.520><c> and</c><01:28:08.719><c> now</c><01:28:09.159><c> let's</c><01:28:09.480><c> reap</c><01:28:09.760><c> the</c>

01:28:09.870 --> 01:28:09.880 align:start position:0%
it's amazing and now let's reap the
 

01:28:09.880 --> 01:28:12.189 align:start position:0%
it's amazing and now let's reap the
benefits<01:28:10.239><c> of</c><01:28:10.400><c> it</c><01:28:10.960><c> um</c><01:28:11.480><c> and</c><01:28:11.600><c> let's</c><01:28:11.800><c> first</c><01:28:12.040><c> look</c>

01:28:12.189 --> 01:28:12.199 align:start position:0%
benefits of it um and let's first look
 

01:28:12.199 --> 01:28:14.390 align:start position:0%
benefits of it um and let's first look
at<01:28:12.360><c> the</c><01:28:12.639><c> tensor</c><01:28:13.000><c> float</c><01:28:13.400><c> 32</c>

01:28:14.390 --> 01:28:14.400 align:start position:0%
at the tensor float 32
 

01:28:14.400 --> 01:28:16.430 align:start position:0%
at the tensor float 32
format<01:28:15.400><c> okay</c><01:28:15.520><c> so</c><01:28:15.679><c> first</c><01:28:15.840><c> of</c><01:28:15.920><c> all</c><01:28:16.119><c> what</c><01:28:16.239><c> are</c>

01:28:16.430 --> 01:28:16.440 align:start position:0%
format okay so first of all what are
 

01:28:16.440 --> 01:28:19.390 align:start position:0%
format okay so first of all what are
tensor<01:28:16.800><c> cores</c><01:28:17.800><c> well</c><01:28:18.080><c> tensor</c><01:28:18.400><c> course</c><01:28:19.080><c> tensor</c>

01:28:19.390 --> 01:28:19.400 align:start position:0%
tensor cores well tensor course tensor
 

01:28:19.400 --> 01:28:22.229 align:start position:0%
tensor cores well tensor course tensor
core<01:28:19.600><c> is</c><01:28:19.719><c> just</c><01:28:19.880><c> an</c><01:28:20.080><c> instruction</c><01:28:20.880><c> in</c><01:28:21.080><c> the</c><01:28:21.239><c> a100</c>

01:28:22.229 --> 01:28:22.239 align:start position:0%
core is just an instruction in the a100
 

01:28:22.239 --> 01:28:25.149 align:start position:0%
core is just an instruction in the a100
architecture<01:28:23.119><c> right</c><01:28:23.880><c> so</c><01:28:24.159><c> so</c><01:28:24.520><c> what</c><01:28:24.639><c> it</c><01:28:24.760><c> does</c><01:28:25.040><c> is</c>

01:28:25.149 --> 01:28:25.159 align:start position:0%
architecture right so so what it does is
 

01:28:25.159 --> 01:28:27.709 align:start position:0%
architecture right so so what it does is
it<01:28:25.320><c> does</c><01:28:25.560><c> basically</c><01:28:25.960><c> a</c><01:28:26.080><c> little</c><01:28:26.280><c> 4x4</c><01:28:27.199><c> Matrix</c>

01:28:27.709 --> 01:28:27.719 align:start position:0%
it does basically a little 4x4 Matrix
 

01:28:27.719 --> 01:28:30.750 align:start position:0%
it does basically a little 4x4 Matrix
multiply<01:28:28.920><c> so</c><01:28:29.920><c> uh</c><01:28:30.040><c> this</c><01:28:30.119><c> is</c><01:28:30.280><c> just</c><01:28:30.440><c> matrix</c>

01:28:30.750 --> 01:28:30.760 align:start position:0%
multiply so uh this is just matrix
 

01:28:30.760 --> 01:28:35.270 align:start position:0%
multiply so uh this is just matrix
multiplication<01:28:31.480><c> here</c><01:28:32.400><c> of</c><01:28:32.600><c> 4x4</c><01:28:33.560><c> matrices</c><01:28:34.560><c> and</c>

01:28:35.270 --> 01:28:35.280 align:start position:0%
multiplication here of 4x4 matrices and
 

01:28:35.280 --> 01:28:37.990 align:start position:0%
multiplication here of 4x4 matrices and
there<01:28:35.400><c> are</c><01:28:35.679><c> multiple</c><01:28:36.360><c> configurations</c><01:28:37.360><c> as</c><01:28:37.480><c> to</c>

01:28:37.990 --> 01:28:38.000 align:start position:0%
there are multiple configurations as to
 

01:28:38.000 --> 01:28:40.790 align:start position:0%
there are multiple configurations as to
what<01:28:38.280><c> Precision</c><01:28:39.159><c> any</c><01:28:39.320><c> of</c><01:28:39.440><c> these</c><01:28:39.600><c> matrices</c><01:28:40.119><c> are</c>

01:28:40.790 --> 01:28:40.800 align:start position:0%
what Precision any of these matrices are
 

01:28:40.800 --> 01:28:42.669 align:start position:0%
what Precision any of these matrices are
it<01:28:41.159><c> in</c><01:28:41.320><c> what</c><01:28:41.480><c> Precision</c><01:28:42.000><c> the</c><01:28:42.199><c> internal</c>

01:28:42.669 --> 01:28:42.679 align:start position:0%
it in what Precision the internal
 

01:28:42.679 --> 01:28:45.109 align:start position:0%
it in what Precision the internal
accumulate<01:28:43.480><c> happens</c><01:28:44.480><c> and</c><01:28:44.639><c> then</c><01:28:44.800><c> what</c><01:28:44.880><c> is</c><01:28:45.000><c> the</c>

01:28:45.109 --> 01:28:45.119 align:start position:0%
accumulate happens and then what is the
 

01:28:45.119 --> 01:28:47.229 align:start position:0%
accumulate happens and then what is the
output<01:28:45.440><c> Precision</c><01:28:45.800><c> input</c><01:28:46.080><c> precisions</c><01:28:46.520><c> Etc</c><01:28:47.080><c> so</c>

01:28:47.229 --> 01:28:47.239 align:start position:0%
output Precision input precisions Etc so
 

01:28:47.239 --> 01:28:48.910 align:start position:0%
output Precision input precisions Etc so
there's<01:28:47.520><c> a</c><01:28:47.639><c> few</c><01:28:47.800><c> switches</c><01:28:48.679><c> but</c><01:28:48.800><c> it's</c>

01:28:48.910 --> 01:28:48.920 align:start position:0%
there's a few switches but it's
 

01:28:48.920 --> 01:28:51.030 align:start position:0%
there's a few switches but it's
basically<01:28:49.159><c> a</c><01:28:49.239><c> 4x4</c><01:28:49.679><c> multiply</c><01:28:50.679><c> and</c><01:28:50.800><c> then</c>

01:28:51.030 --> 01:28:51.040 align:start position:0%
basically a 4x4 multiply and then
 

01:28:51.040 --> 01:28:53.390 align:start position:0%
basically a 4x4 multiply and then
anytime<01:28:51.880><c> we</c><01:28:52.119><c> have</c><01:28:52.560><c> any</c><01:28:52.800><c> operations</c><01:28:53.239><c> that</c>

01:28:53.390 --> 01:28:53.400 align:start position:0%
anytime we have any operations that
 

01:28:53.400 --> 01:28:55.830 align:start position:0%
anytime we have any operations that
require<01:28:53.719><c> Magic</c><01:28:54.360><c> multiplication</c><01:28:55.360><c> uh</c><01:28:55.480><c> they</c><01:28:55.639><c> get</c>

01:28:55.830 --> 01:28:55.840 align:start position:0%
require Magic multiplication uh they get
 

01:28:55.840 --> 01:28:58.390 align:start position:0%
require Magic multiplication uh they get
broken<01:28:56.280><c> up</c><01:28:56.679><c> into</c><01:28:57.119><c> these</c><01:28:57.920><c> into</c><01:28:58.199><c> this</c>

01:28:58.390 --> 01:28:58.400 align:start position:0%
broken up into these into this
 

01:28:58.400 --> 01:29:00.910 align:start position:0%
broken up into these into this
instruction<01:28:58.880><c> of</c><01:28:59.080><c> little</c><01:28:59.280><c> 4x4</c><01:29:00.080><c> multiply</c><01:29:00.840><c> and</c>

01:29:00.910 --> 01:29:00.920 align:start position:0%
instruction of little 4x4 multiply and
 

01:29:00.920 --> 01:29:02.229 align:start position:0%
instruction of little 4x4 multiply and
so<01:29:01.080><c> everything</c><01:29:01.320><c> gets</c><01:29:01.480><c> broken</c><01:29:01.760><c> up</c><01:29:01.840><c> into</c><01:29:02.080><c> this</c>

01:29:02.229 --> 01:29:02.239 align:start position:0%
so everything gets broken up into this
 

01:29:02.239 --> 01:29:04.070 align:start position:0%
so everything gets broken up into this
instruction<01:29:02.760><c> because</c><01:29:02.960><c> it's</c><01:29:03.159><c> the</c><01:29:03.360><c> fastest</c><01:29:03.800><c> way</c>

01:29:04.070 --> 01:29:04.080 align:start position:0%
instruction because it's the fastest way
 

01:29:04.080 --> 01:29:06.390 align:start position:0%
instruction because it's the fastest way
to<01:29:04.239><c> multiply</c><01:29:04.760><c> matrices</c><01:29:05.760><c> and</c><01:29:05.840><c> it</c><01:29:05.960><c> turns</c><01:29:06.199><c> out</c>

01:29:06.390 --> 01:29:06.400 align:start position:0%
to multiply matrices and it turns out
 

01:29:06.400 --> 01:29:08.109 align:start position:0%
to multiply matrices and it turns out
that<01:29:06.679><c> most</c><01:29:06.920><c> of</c><01:29:07.080><c> the</c><01:29:07.239><c> computational</c><01:29:07.800><c> work</c><01:29:08.000><c> that</c>

01:29:08.109 --> 01:29:08.119 align:start position:0%
that most of the computational work that
 

01:29:08.119 --> 01:29:10.430 align:start position:0%
that most of the computational work that
we're<01:29:08.280><c> doing</c><01:29:08.520><c> up</c><01:29:08.719><c> above</c><01:29:09.639><c> uh</c><01:29:09.760><c> all</c><01:29:09.920><c> of</c><01:29:10.040><c> it</c><01:29:10.239><c> really</c>

01:29:10.430 --> 01:29:10.440 align:start position:0%
we're doing up above uh all of it really
 

01:29:10.440 --> 01:29:12.790 align:start position:0%
we're doing up above uh all of it really
is<01:29:10.880><c> matrix</c><01:29:11.400><c> multiplication</c><01:29:12.400><c> most</c><01:29:12.600><c> of</c><01:29:12.719><c> the</c>

01:29:12.790 --> 01:29:12.800 align:start position:0%
is matrix multiplication most of the
 

01:29:12.800 --> 01:29:14.270 align:start position:0%
is matrix multiplication most of the
work<01:29:13.080><c> computationally</c><01:29:13.679><c> happens</c><01:29:14.000><c> in</c><01:29:14.159><c> the</c>

01:29:14.270 --> 01:29:14.280 align:start position:0%
work computationally happens in the
 

01:29:14.280 --> 01:29:20.070 align:start position:0%
work computationally happens in the
linear<01:29:15.239><c> layers</c><01:29:16.560><c> um</c><01:29:17.560><c> linear</c><01:29:18.280><c> linear</c><01:29:19.280><c> Etc</c>

01:29:20.070 --> 01:29:20.080 align:start position:0%
linear layers um linear linear Etc
 

01:29:20.080 --> 01:29:21.669 align:start position:0%
linear layers um linear linear Etc
there's<01:29:20.280><c> a</c><01:29:20.400><c> few</c><01:29:20.560><c> things</c><01:29:20.920><c> sandwiched</c><01:29:21.520><c> in</c>

01:29:21.669 --> 01:29:21.679 align:start position:0%
there's a few things sandwiched in
 

01:29:21.679 --> 01:29:23.310 align:start position:0%
there's a few things sandwiched in
between<01:29:22.159><c> so</c><01:29:22.320><c> there's</c><01:29:22.480><c> some</c><01:29:22.679><c> additions</c><01:29:23.159><c> in</c>

01:29:23.310 --> 01:29:23.320 align:start position:0%
between so there's some additions in
 

01:29:23.320 --> 01:29:25.790 align:start position:0%
between so there's some additions in
residuals<01:29:24.280><c> there's</c><01:29:24.480><c> some</c><01:29:24.760><c> G</c><01:29:25.199><c> nonlinearities</c>

01:29:25.790 --> 01:29:25.800 align:start position:0%
residuals there's some G nonlinearities
 

01:29:25.800 --> 01:29:28.229 align:start position:0%
residuals there's some G nonlinearities
there's<01:29:26.440><c> some</c><01:29:26.560><c> layer</c><01:29:26.800><c> Norms</c><01:29:27.199><c> Etc</c><01:29:27.880><c> but</c><01:29:28.000><c> if</c><01:29:28.119><c> you</c>

01:29:28.229 --> 01:29:28.239 align:start position:0%
there's some layer Norms Etc but if you
 

01:29:28.239 --> 01:29:30.310 align:start position:0%
there's some layer Norms Etc but if you
just<01:29:28.480><c> time</c><01:29:28.840><c> them</c><01:29:29.119><c> you'll</c><01:29:29.320><c> see</c><01:29:29.560><c> that</c><01:29:29.760><c> these</c><01:29:29.880><c> are</c>

01:29:30.310 --> 01:29:30.320 align:start position:0%
just time them you'll see that these are
 

01:29:30.320 --> 01:29:32.310 align:start position:0%
just time them you'll see that these are
nothing<01:29:30.800><c> like</c><01:29:31.000><c> basically</c><01:29:31.800><c> the</c><01:29:31.960><c> in</c>

01:29:32.310 --> 01:29:32.320 align:start position:0%
nothing like basically the in
 

01:29:32.320 --> 01:29:34.709 align:start position:0%
nothing like basically the in
Transformer<01:29:32.840><c> is</c><01:29:33.080><c> just</c><01:29:33.639><c> a</c><01:29:33.800><c> bunch</c><01:29:34.040><c> of</c><01:29:34.320><c> Matrix</c>

01:29:34.709 --> 01:29:34.719 align:start position:0%
Transformer is just a bunch of Matrix
 

01:29:34.719 --> 01:29:37.750 align:start position:0%
Transformer is just a bunch of Matrix
multiplications<01:29:35.920><c> really</c><01:29:36.920><c> um</c><01:29:37.119><c> and</c><01:29:37.320><c> especially</c>

01:29:37.750 --> 01:29:37.760 align:start position:0%
multiplications really um and especially
 

01:29:37.760 --> 01:29:39.629 align:start position:0%
multiplications really um and especially
at<01:29:37.960><c> this</c><01:29:38.080><c> small</c><01:29:38.360><c> scale</c><01:29:38.639><c> 124</c><01:29:39.280><c> million</c>

01:29:39.629 --> 01:29:39.639 align:start position:0%
at this small scale 124 million
 

01:29:39.639 --> 01:29:42.390 align:start position:0%
at this small scale 124 million
parameter<01:29:40.080><c> model</c><01:29:40.960><c> actually</c><01:29:41.360><c> the</c><01:29:41.760><c> biggest</c>

01:29:42.390 --> 01:29:42.400 align:start position:0%
parameter model actually the biggest
 

01:29:42.400 --> 01:29:44.270 align:start position:0%
parameter model actually the biggest
matrix<01:29:42.800><c> multiplication</c><01:29:43.400><c> by</c><01:29:43.560><c> far</c><01:29:44.000><c> is</c><01:29:44.119><c> the</c>

01:29:44.270 --> 01:29:44.280 align:start position:0%
matrix multiplication by far is the
 

01:29:44.280 --> 01:29:46.669 align:start position:0%
matrix multiplication by far is the
classifier<01:29:44.800><c> layer</c><01:29:45.080><c> at</c><01:29:45.199><c> the</c><01:29:45.360><c> top</c><01:29:46.159><c> that</c><01:29:46.280><c> is</c><01:29:46.440><c> a</c>

01:29:46.669 --> 01:29:46.679 align:start position:0%
classifier layer at the top that is a
 

01:29:46.679 --> 01:29:48.990 align:start position:0%
classifier layer at the top that is a
massive<01:29:47.000><c> Matrix</c><01:29:47.480><c> multiply</c><01:29:48.480><c> of</c><01:29:48.679><c> going</c><01:29:48.880><c> from</c>

01:29:48.990 --> 01:29:49.000 align:start position:0%
massive Matrix multiply of going from
 

01:29:49.000 --> 01:29:50.750 align:start position:0%
massive Matrix multiply of going from
768<01:29:49.719><c> to</c>

01:29:50.750 --> 01:29:50.760 align:start position:0%
768 to
 

01:29:50.760 --> 01:29:53.629 align:start position:0%
768 to
50257<01:29:51.760><c> and</c><01:29:51.920><c> that</c><01:29:52.040><c> Matrix</c><01:29:52.400><c> multiply</c><01:29:52.960><c> dominates</c>

01:29:53.629 --> 01:29:53.639 align:start position:0%
50257 and that Matrix multiply dominates
 

01:29:53.639 --> 01:29:55.270 align:start position:0%
50257 and that Matrix multiply dominates
anything<01:29:54.159><c> else</c><01:29:54.320><c> that</c><01:29:54.480><c> happens</c><01:29:55.000><c> in</c><01:29:55.119><c> that</c>

01:29:55.270 --> 01:29:55.280 align:start position:0%
anything else that happens in that
 

01:29:55.280 --> 01:29:58.750 align:start position:0%
anything else that happens in that
Network<01:29:55.679><c> roughly</c><01:29:56.440><c> speaking</c><01:29:57.440><c> so</c><01:29:58.199><c> it's</c><01:29:58.400><c> Matrix</c>

01:29:58.750 --> 01:29:58.760 align:start position:0%
Network roughly speaking so it's Matrix
 

01:29:58.760 --> 01:30:00.830 align:start position:0%
Network roughly speaking so it's Matrix
multiplies<01:29:59.480><c> that</c><01:29:59.639><c> become</c><01:29:59.960><c> a</c><01:30:00.080><c> lot</c><01:30:00.320><c> faster</c>

01:30:00.830 --> 01:30:00.840 align:start position:0%
multiplies that become a lot faster
 

01:30:00.840 --> 01:30:02.669 align:start position:0%
multiplies that become a lot faster
which<01:30:00.960><c> are</c><01:30:01.159><c> hidden</c><01:30:01.679><c> inside</c><01:30:02.040><c> our</c><01:30:02.199><c> linear</c>

01:30:02.669 --> 01:30:02.679 align:start position:0%
which are hidden inside our linear
 

01:30:02.679 --> 01:30:05.070 align:start position:0%
which are hidden inside our linear
layers<01:30:03.679><c> and</c><01:30:03.840><c> they're</c><01:30:04.239><c> accelerated</c><01:30:04.880><c> through</c>

01:30:05.070 --> 01:30:05.080 align:start position:0%
layers and they're accelerated through
 

01:30:05.080 --> 01:30:07.590 align:start position:0%
layers and they're accelerated through
tensor<01:30:05.560><c> course</c><01:30:06.560><c> now</c><01:30:06.800><c> the</c><01:30:06.920><c> best</c><01:30:07.119><c> reference</c><01:30:07.560><c> I</c>

01:30:07.590 --> 01:30:07.600 align:start position:0%
tensor course now the best reference I
 

01:30:07.600 --> 01:30:09.229 align:start position:0%
tensor course now the best reference I
would<01:30:07.760><c> say</c><01:30:07.880><c> for</c><01:30:08.000><c> tensor</c><01:30:08.320><c> course</c><01:30:08.600><c> is</c><01:30:08.880><c> basically</c>

01:30:09.229 --> 01:30:09.239 align:start position:0%
would say for tensor course is basically
 

01:30:09.239 --> 01:30:12.990 align:start position:0%
would say for tensor course is basically
just<01:30:09.400><c> go</c><01:30:09.520><c> to</c><01:30:09.719><c> the</c><01:30:10.719><c> um</c><01:30:11.719><c> a</c><01:30:12.159><c> 100</c><01:30:12.440><c> architecture</c>

01:30:12.990 --> 01:30:13.000 align:start position:0%
just go to the um a 100 architecture
 

01:30:13.000 --> 01:30:15.229 align:start position:0%
just go to the um a 100 architecture
white<01:30:13.199><c> paper</c><01:30:14.040><c> and</c><01:30:14.239><c> then</c><01:30:14.679><c> it's</c><01:30:14.960><c> pretty</c>

01:30:15.229 --> 01:30:15.239 align:start position:0%
white paper and then it's pretty
 

01:30:15.239 --> 01:30:18.070 align:start position:0%
white paper and then it's pretty
detailed<01:30:16.000><c> and</c><01:30:16.719><c> but</c><01:30:17.119><c> I</c><01:30:17.199><c> think</c><01:30:17.520><c> people</c><01:30:17.880><c> it's</c>

01:30:18.070 --> 01:30:18.080 align:start position:0%
detailed and but I think people it's
 

01:30:18.080 --> 01:30:20.310 align:start position:0%
detailed and but I think people it's
like<01:30:18.239><c> relatively</c><01:30:18.760><c> readable</c><01:30:19.280><c> mostly</c><01:30:19.719><c> if</c><01:30:19.840><c> you</c>

01:30:20.310 --> 01:30:20.320 align:start position:0%
like relatively readable mostly if you
 

01:30:20.320 --> 01:30:23.390 align:start position:0%
like relatively readable mostly if you
half<01:30:20.760><c> understand</c><01:30:20.920><c> what's</c><01:30:21.320><c> happening</c><01:30:22.320><c> um</c><01:30:23.199><c> so</c>

01:30:23.390 --> 01:30:23.400 align:start position:0%
half understand what's happening um so
 

01:30:23.400 --> 01:30:26.109 align:start position:0%
half understand what's happening um so
figure<01:30:23.719><c> 9</c><01:30:24.119><c> tensor</c><01:30:24.480><c> float</c>

01:30:26.109 --> 01:30:26.119 align:start position:0%
figure 9 tensor float
 

01:30:26.119 --> 01:30:28.350 align:start position:0%
figure 9 tensor float
32<01:30:27.119><c> so</c><01:30:27.320><c> this</c><01:30:27.400><c> is</c><01:30:27.520><c> the</c><01:30:27.639><c> explanation</c><01:30:28.040><c> basically</c>

01:30:28.350 --> 01:30:28.360 align:start position:0%
32 so this is the explanation basically
 

01:30:28.360 --> 01:30:31.470 align:start position:0%
32 so this is the explanation basically
for<01:30:28.560><c> tf32</c><01:30:29.320><c> and</c><01:30:29.480><c> what</c><01:30:29.600><c> happens</c><01:30:30.280><c> here</c><01:30:31.280><c> and</c><01:30:31.360><c> you</c>

01:30:31.470 --> 01:30:31.480 align:start position:0%
for tf32 and what happens here and you
 

01:30:31.480 --> 01:30:32.629 align:start position:0%
for tf32 and what happens here and you
see<01:30:31.600><c> that</c><01:30:31.719><c> there's</c><01:30:31.880><c> many</c><01:30:32.119><c> configuration</c>

01:30:32.629 --> 01:30:32.639 align:start position:0%
see that there's many configuration
 

01:30:32.639 --> 01:30:35.270 align:start position:0%
see that there's many configuration
options<01:30:33.000><c> here</c><01:30:33.239><c> available</c><01:30:34.159><c> so</c><01:30:34.840><c> the</c><01:30:34.960><c> input</c>

01:30:35.270 --> 01:30:35.280 align:start position:0%
options here available so the input
 

01:30:35.280 --> 01:30:37.790 align:start position:0%
options here available so the input
operands<01:30:35.960><c> and</c><01:30:36.159><c> what</c><01:30:36.360><c> precisions</c><01:30:36.800><c> are</c><01:30:36.960><c> they</c><01:30:37.119><c> in</c>

01:30:37.790 --> 01:30:37.800 align:start position:0%
operands and what precisions are they in
 

01:30:37.800 --> 01:30:41.750 align:start position:0%
operands and what precisions are they in
the<01:30:38.040><c> accumulator</c><01:30:39.040><c> and</c><01:30:39.480><c> um</c><01:30:40.199><c> what</c><01:30:40.840><c> um</c><01:30:41.320><c> basically</c>

01:30:41.750 --> 01:30:41.760 align:start position:0%
the accumulator and um what um basically
 

01:30:41.760 --> 01:30:44.550 align:start position:0%
the accumulator and um what um basically
the<01:30:42.239><c> um</c><01:30:43.239><c> the</c><01:30:43.400><c> internal</c><01:30:43.880><c> representation</c>

01:30:44.550 --> 01:30:44.560 align:start position:0%
the um the internal representation
 

01:30:44.560 --> 01:30:46.590 align:start position:0%
the um the internal representation
within<01:30:44.840><c> the</c><01:30:45.000><c> instruction</c><01:30:45.920><c> when</c><01:30:46.040><c> you</c><01:30:46.199><c> do</c><01:30:46.400><c> the</c>

01:30:46.590 --> 01:30:46.600 align:start position:0%
within the instruction when you do the
 

01:30:46.600 --> 01:30:48.629 align:start position:0%
within the instruction when you do the
accumulate<01:30:47.280><c> of</c><01:30:47.440><c> this</c><01:30:47.560><c> matrix</c>

01:30:48.629 --> 01:30:48.639 align:start position:0%
accumulate of this matrix
 

01:30:48.639 --> 01:30:51.189 align:start position:0%
accumulate of this matrix
multiplication<01:30:49.639><c> so</c><01:30:49.800><c> the</c><01:30:49.920><c> intermediate</c><01:30:50.920><c> plus</c>

01:30:51.189 --> 01:30:51.199 align:start position:0%
multiplication so the intermediate plus
 

01:30:51.199 --> 01:30:53.629 align:start position:0%
multiplication so the intermediate plus
equals<01:30:52.119><c> um</c><01:30:52.480><c> of</c><01:30:52.679><c> the</c><01:30:52.800><c> intermediate</c><01:30:53.360><c> little</c>

01:30:53.629 --> 01:30:53.639 align:start position:0%
equals um of the intermediate little
 

01:30:53.639 --> 01:30:55.790 align:start position:0%
equals um of the intermediate little
vector<01:30:54.040><c> multiplies</c><01:30:54.560><c> here</c><01:30:55.080><c> that</c><01:30:55.239><c> all</c><01:30:55.440><c> happens</c>

01:30:55.790 --> 01:30:55.800 align:start position:0%
vector multiplies here that all happens
 

01:30:55.800 --> 01:30:57.350 align:start position:0%
vector multiplies here that all happens
in

01:30:57.350 --> 01:30:57.360 align:start position:0%
in
 

01:30:57.360 --> 01:31:00.149 align:start position:0%
in
fp32<01:30:58.360><c> and</c><01:30:58.560><c> then</c><01:30:59.239><c> uh</c><01:30:59.400><c> this</c><01:30:59.520><c> is</c><01:30:59.639><c> an</c><01:30:59.760><c> aex</c>

01:31:00.149 --> 01:31:00.159 align:start position:0%
fp32 and then uh this is an aex
 

01:31:00.159 --> 01:31:01.950 align:start position:0%
fp32 and then uh this is an aex
improvement<01:31:00.600><c> as</c><01:31:00.679><c> I</c><01:31:00.800><c> mentioned</c><01:31:01.119><c> to</c><01:31:01.320><c> the</c><01:31:01.600><c> Ops</c>

01:31:01.950 --> 01:31:01.960 align:start position:0%
improvement as I mentioned to the Ops
 

01:31:01.960 --> 01:31:04.470 align:start position:0%
improvement as I mentioned to the Ops
that<01:31:02.080><c> we</c><01:31:02.239><c> get</c><01:31:02.880><c> so</c><01:31:03.080><c> tf32</c><01:31:03.920><c> specifically</c><01:31:04.320><c> we're</c>

01:31:04.470 --> 01:31:04.480 align:start position:0%
that we get so tf32 specifically we're
 

01:31:04.480 --> 01:31:06.350 align:start position:0%
that we get so tf32 specifically we're
looking<01:31:04.679><c> at</c><01:31:04.840><c> this</c><01:31:05.000><c> row</c><01:31:05.280><c> here</c><01:31:05.920><c> and</c><01:31:06.080><c> the</c><01:31:06.199><c> way</c>

01:31:06.350 --> 01:31:06.360 align:start position:0%
looking at this row here and the way
 

01:31:06.360 --> 01:31:07.430 align:start position:0%
looking at this row here and the way
this<01:31:06.520><c> works</c>

01:31:07.430 --> 01:31:07.440 align:start position:0%
this works
 

01:31:07.440 --> 01:31:10.229 align:start position:0%
this works
is

01:31:10.229 --> 01:31:10.239 align:start position:0%
is
 

01:31:10.239 --> 01:31:14.669 align:start position:0%
is
um<01:31:11.239><c> normally</c><01:31:11.679><c> fp32</c><01:31:12.360><c> has</c><01:31:12.480><c> 32</c><01:31:13.040><c> bits</c>

01:31:14.669 --> 01:31:14.679 align:start position:0%
um normally fp32 has 32 bits
 

01:31:14.679 --> 01:31:18.229 align:start position:0%
um normally fp32 has 32 bits
tf32<01:31:15.679><c> is</c><01:31:15.920><c> the</c><01:31:16.119><c> exact</c><01:31:16.600><c> same</c><01:31:17.159><c> bits</c><01:31:17.639><c> we</c><01:31:17.719><c> have</c><01:31:17.960><c> one</c>

01:31:18.229 --> 01:31:18.239 align:start position:0%
tf32 is the exact same bits we have one
 

01:31:18.239 --> 01:31:21.629 align:start position:0%
tf32 is the exact same bits we have one
sign<01:31:18.600><c> bit</c><01:31:19.119><c> we</c><01:31:19.280><c> have</c><01:31:19.520><c> eight</c><01:31:20.080><c> exponent</c><01:31:20.639><c> bits</c>

01:31:21.629 --> 01:31:21.639 align:start position:0%
sign bit we have eight exponent bits
 

01:31:21.639 --> 01:31:24.229 align:start position:0%
sign bit we have eight exponent bits
except<01:31:22.159><c> the</c><01:31:22.320><c> mantisa</c><01:31:22.880><c> bits</c><01:31:23.239><c> get</c><01:31:23.480><c> cropped</c><01:31:24.119><c> in</c>

01:31:24.229 --> 01:31:24.239 align:start position:0%
except the mantisa bits get cropped in
 

01:31:24.239 --> 01:31:27.109 align:start position:0%
except the mantisa bits get cropped in
the<01:31:24.320><c> float</c><01:31:25.280><c> and</c><01:31:25.400><c> so</c><01:31:25.560><c> basically</c><01:31:26.239><c> um</c><01:31:26.639><c> we</c><01:31:26.760><c> end</c><01:31:26.920><c> up</c>

01:31:27.109 --> 01:31:27.119 align:start position:0%
the float and so basically um we end up
 

01:31:27.119 --> 01:31:30.870 align:start position:0%
the float and so basically um we end up
with<01:31:27.320><c> just</c><01:31:27.520><c> 19</c><01:31:28.199><c> bits</c><01:31:29.080><c> instead</c><01:31:29.360><c> of</c><01:31:29.520><c> 32</c><01:31:30.080><c> bits</c>

01:31:30.870 --> 01:31:30.880 align:start position:0%
with just 19 bits instead of 32 bits
 

01:31:30.880 --> 01:31:33.669 align:start position:0%
with just 19 bits instead of 32 bits
because<01:31:31.159><c> the</c><01:31:31.320><c> last</c><01:31:31.679><c> 133</c><01:31:32.199><c> bits</c><01:31:32.800><c> get</c><01:31:33.040><c> truncated</c>

01:31:33.669 --> 01:31:33.679 align:start position:0%
because the last 133 bits get truncated
 

01:31:33.679 --> 01:31:36.430 align:start position:0%
because the last 133 bits get truncated
they<01:31:33.840><c> get</c><01:31:34.159><c> dropped</c><01:31:35.159><c> um</c><01:31:35.639><c> and</c><01:31:35.800><c> all</c><01:31:36.080><c> this</c><01:31:36.239><c> is</c>

01:31:36.430 --> 01:31:36.440 align:start position:0%
they get dropped um and all this is
 

01:31:36.440 --> 01:31:38.910 align:start position:0%
they get dropped um and all this is
internal<01:31:36.960><c> to</c><01:31:37.119><c> the</c><01:31:37.360><c> instruction</c><01:31:38.360><c> so</c><01:31:38.600><c> none</c><01:31:38.800><c> of</c>

01:31:38.910 --> 01:31:38.920 align:start position:0%
internal to the instruction so none of
 

01:31:38.920 --> 01:31:41.430 align:start position:0%
internal to the instruction so none of
it<01:31:39.080><c> is</c><01:31:39.239><c> visible</c><01:31:39.560><c> to</c><01:31:39.880><c> anything</c><01:31:40.159><c> in</c><01:31:40.280><c> our</c><01:31:40.440><c> pytorch</c>

01:31:41.430 --> 01:31:41.440 align:start position:0%
it is visible to anything in our pytorch
 

01:31:41.440 --> 01:31:43.629 align:start position:0%
it is visible to anything in our pytorch
uh<01:31:41.800><c> none</c><01:31:41.960><c> of</c><01:31:42.080><c> our</c><01:31:42.280><c> pytorch</c><01:31:42.719><c> code</c><01:31:42.960><c> will</c><01:31:43.199><c> change</c>

01:31:43.629 --> 01:31:43.639 align:start position:0%
uh none of our pytorch code will change
 

01:31:43.639 --> 01:31:45.629 align:start position:0%
uh none of our pytorch code will change
all<01:31:43.800><c> of</c><01:31:43.920><c> the</c><01:31:44.040><c> numbers</c><01:31:44.320><c> will</c><01:31:44.480><c> look</c><01:31:44.719><c> identical</c>

01:31:45.629 --> 01:31:45.639 align:start position:0%
all of the numbers will look identical
 

01:31:45.639 --> 01:31:47.270 align:start position:0%
all of the numbers will look identical
it's<01:31:45.800><c> just</c><01:31:46.000><c> that</c><01:31:46.199><c> when</c><01:31:46.320><c> you</c><01:31:46.520><c> call</c><01:31:46.800><c> the</c><01:31:46.920><c> tensor</c>

01:31:47.270 --> 01:31:47.280 align:start position:0%
it's just that when you call the tensor
 

01:31:47.280 --> 01:31:50.550 align:start position:0%
it's just that when you call the tensor
core<01:31:48.080><c> um</c><01:31:48.679><c> instruction</c><01:31:49.679><c> internally</c><01:31:50.239><c> in</c><01:31:50.400><c> the</c>

01:31:50.550 --> 01:31:50.560 align:start position:0%
core um instruction internally in the
 

01:31:50.560 --> 01:31:54.270 align:start position:0%
core um instruction internally in the
hardware<01:31:51.400><c> it</c><01:31:51.520><c> will</c><01:31:51.800><c> crop</c><01:31:52.159><c> out</c><01:31:52.440><c> these</c><01:31:52.880><c> 13</c><01:31:53.360><c> bits</c>

01:31:54.270 --> 01:31:54.280 align:start position:0%
hardware it will crop out these 13 bits
 

01:31:54.280 --> 01:31:57.350 align:start position:0%
hardware it will crop out these 13 bits
and<01:31:54.440><c> that</c><01:31:54.560><c> allows</c><01:31:54.920><c> it</c><01:31:55.159><c> to</c><01:31:55.840><c> uh</c><01:31:56.159><c> calculate</c><01:31:57.159><c> this</c>

01:31:57.350 --> 01:31:57.360 align:start position:0%
and that allows it to uh calculate this
 

01:31:57.360 --> 01:31:59.070 align:start position:0%
and that allows it to uh calculate this
little<01:31:57.600><c> Matrix</c><01:31:57.960><c> multiply</c><01:31:58.440><c> significantly</c>

01:31:59.070 --> 01:31:59.080 align:start position:0%
little Matrix multiply significantly
 

01:31:59.080 --> 01:32:02.109 align:start position:0%
little Matrix multiply significantly
faster<01:31:59.679><c> 8X</c><01:32:00.400><c> faster</c><01:32:01.400><c> now</c><01:32:01.520><c> of</c><01:32:01.639><c> course</c><01:32:01.880><c> this</c>

01:32:02.109 --> 01:32:02.119 align:start position:0%
faster 8X faster now of course this
 

01:32:02.119 --> 01:32:04.950 align:start position:0%
faster 8X faster now of course this
speed<01:32:02.400><c> up</c><01:32:02.639><c> comes</c><01:32:02.920><c> at</c><01:32:03.159><c> a</c><01:32:03.480><c> cost</c><01:32:04.159><c> and</c><01:32:04.320><c> the</c><01:32:04.480><c> cost</c><01:32:04.760><c> is</c>

01:32:04.950 --> 01:32:04.960 align:start position:0%
speed up comes at a cost and the cost is
 

01:32:04.960 --> 01:32:07.310 align:start position:0%
speed up comes at a cost and the cost is
that<01:32:05.199><c> we</c><01:32:05.320><c> are</c><01:32:05.760><c> reducing</c><01:32:06.199><c> the</c><01:32:06.360><c> Precision</c><01:32:07.119><c> our</c>

01:32:07.310 --> 01:32:07.320 align:start position:0%
that we are reducing the Precision our
 

01:32:07.320 --> 01:32:09.430 align:start position:0%
that we are reducing the Precision our
accumulate<01:32:07.840><c> is</c><01:32:07.920><c> still</c><01:32:08.080><c> an</c><01:32:08.199><c> fp32</c><01:32:08.960><c> our</c><01:32:09.119><c> output</c>

01:32:09.430 --> 01:32:09.440 align:start position:0%
accumulate is still an fp32 our output
 

01:32:09.440 --> 01:32:12.590 align:start position:0%
accumulate is still an fp32 our output
is<01:32:09.560><c> fp32</c><01:32:10.440><c> our</c><01:32:10.639><c> inputs</c><01:32:10.960><c> are</c><01:32:11.280><c> fp32</c><01:32:12.280><c> but</c>

01:32:12.590 --> 01:32:12.600 align:start position:0%
is fp32 our inputs are fp32 but
 

01:32:12.600 --> 01:32:14.910 align:start position:0%
is fp32 our inputs are fp32 but
internally<01:32:13.600><c> things</c><01:32:13.800><c> get</c><01:32:14.000><c> truncated</c><01:32:14.639><c> in</c><01:32:14.800><c> the</c>

01:32:14.910 --> 01:32:14.920 align:start position:0%
internally things get truncated in the
 

01:32:14.920 --> 01:32:17.590 align:start position:0%
internally things get truncated in the
operand<01:32:15.760><c> to</c><01:32:15.960><c> perform</c><01:32:16.280><c> the</c><01:32:16.400><c> operation</c><01:32:16.880><c> faster</c>

01:32:17.590 --> 01:32:17.600 align:start position:0%
operand to perform the operation faster
 

01:32:17.600 --> 01:32:19.030 align:start position:0%
operand to perform the operation faster
and<01:32:17.679><c> so</c><01:32:17.920><c> our</c><01:32:18.080><c> results</c><01:32:18.320><c> are</c><01:32:18.440><c> starting</c><01:32:18.719><c> to</c><01:32:18.800><c> be</c><01:32:18.920><c> a</c>

01:32:19.030 --> 01:32:19.040 align:start position:0%
and so our results are starting to be a
 

01:32:19.040 --> 01:32:21.030 align:start position:0%
and so our results are starting to be a
bit<01:32:19.199><c> more</c><01:32:19.400><c> approximate</c><01:32:20.360><c> but</c><01:32:20.560><c> empirically</c>

01:32:21.030 --> 01:32:21.040 align:start position:0%
bit more approximate but empirically
 

01:32:21.040 --> 01:32:22.430 align:start position:0%
bit more approximate but empirically
when<01:32:21.159><c> you</c><01:32:21.280><c> actually</c><01:32:21.520><c> train</c><01:32:21.800><c> with</c><01:32:22.000><c> this</c><01:32:22.280><c> you</c>

01:32:22.430 --> 01:32:22.440 align:start position:0%
when you actually train with this you
 

01:32:22.440 --> 01:32:24.350 align:start position:0%
when you actually train with this you
basically<01:32:22.800><c> can't</c><01:32:22.960><c> tell</c><01:32:23.159><c> the</c><01:32:23.280><c> difference</c>

01:32:24.350 --> 01:32:24.360 align:start position:0%
basically can't tell the difference
 

01:32:24.360 --> 01:32:26.950 align:start position:0%
basically can't tell the difference
so<01:32:24.520><c> the</c><01:32:24.639><c> reason</c><01:32:24.840><c> I</c><01:32:24.920><c> like</c><01:32:25.080><c> tf32</c><01:32:25.760><c> is</c><01:32:25.960><c> because</c><01:32:26.840><c> if</c>

01:32:26.950 --> 01:32:26.960 align:start position:0%
so the reason I like tf32 is because if
 

01:32:26.960 --> 01:32:28.430 align:start position:0%
so the reason I like tf32 is because if
you<01:32:27.080><c> can</c><01:32:27.239><c> tolerate</c><01:32:27.679><c> a</c><01:32:27.800><c> little</c><01:32:27.960><c> bit</c><01:32:28.119><c> of</c><01:32:28.199><c> a</c>

01:32:28.430 --> 01:32:28.440 align:start position:0%
you can tolerate a little bit of a
 

01:32:28.440 --> 01:32:32.229 align:start position:0%
you can tolerate a little bit of a
Precision<01:32:29.159><c> fudge</c><01:32:30.159><c> um</c><01:32:30.920><c> then</c><01:32:31.280><c> this</c><01:32:31.400><c> is</c><01:32:31.560><c> free</c>

01:32:32.229 --> 01:32:32.239 align:start position:0%
Precision fudge um then this is free
 

01:32:32.239 --> 01:32:34.550 align:start position:0%
Precision fudge um then this is free
like<01:32:32.400><c> none</c><01:32:32.560><c> of</c><01:32:32.719><c> your</c><01:32:32.880><c> codes</c><01:32:33.199><c> sees</c><01:32:33.600><c> this</c><01:32:34.119><c> it's</c>

01:32:34.550 --> 01:32:34.560 align:start position:0%
like none of your codes sees this it's
 

01:32:34.560 --> 01:32:36.750 align:start position:0%
like none of your codes sees this it's
fully<01:32:34.880><c> internal</c><01:32:35.239><c> to</c><01:32:35.400><c> the</c><01:32:35.560><c> operation</c><01:32:36.480><c> and</c><01:32:36.639><c> the</c>

01:32:36.750 --> 01:32:36.760 align:start position:0%
fully internal to the operation and the
 

01:32:36.760 --> 01:32:39.390 align:start position:0%
fully internal to the operation and the
operation<01:32:37.280><c> to</c><01:32:37.480><c> you</c><01:32:37.760><c> just</c><01:32:37.920><c> go</c><01:32:38.199><c> 8X</c><01:32:38.760><c> faster</c><01:32:39.280><c> and</c>

01:32:39.390 --> 01:32:39.400 align:start position:0%
operation to you just go 8X faster and
 

01:32:39.400 --> 01:32:41.990 align:start position:0%
operation to you just go 8X faster and
it's<01:32:39.520><c> a</c><01:32:39.639><c> bit</c><01:32:39.760><c> more</c><01:32:40.080><c> approximate</c><01:32:41.080><c> and</c><01:32:41.199><c> so</c><01:32:41.679><c> it's</c>

01:32:41.990 --> 01:32:42.000 align:start position:0%
it's a bit more approximate and so it's
 

01:32:42.000 --> 01:32:43.709 align:start position:0%
it's a bit more approximate and so it's
a<01:32:42.159><c> pretty</c><01:32:42.360><c> sweet</c><01:32:42.719><c> spot</c><01:32:43.000><c> I</c><01:32:43.080><c> would</c><01:32:43.199><c> say</c><01:32:43.320><c> in</c>

01:32:43.709 --> 01:32:43.719 align:start position:0%
a pretty sweet spot I would say in
 

01:32:43.719 --> 01:32:46.030 align:start position:0%
a pretty sweet spot I would say in
optimization<01:32:44.719><c> and</c><01:32:45.040><c> uh</c><01:32:45.159><c> let's</c><01:32:45.480><c> see</c><01:32:45.719><c> what</c><01:32:45.880><c> that</c>

01:32:46.030 --> 01:32:46.040 align:start position:0%
optimization and uh let's see what that
 

01:32:46.040 --> 01:32:48.070 align:start position:0%
optimization and uh let's see what that
looks<01:32:46.239><c> like</c><01:32:46.440><c> first</c><01:32:47.040><c> so</c><01:32:47.199><c> I've</c><01:32:47.320><c> set</c><01:32:47.480><c> up</c><01:32:47.600><c> our</c><01:32:47.719><c> Cod</c>

01:32:48.070 --> 01:32:48.080 align:start position:0%
looks like first so I've set up our Cod
 

01:32:48.080 --> 01:32:51.590 align:start position:0%
looks like first so I've set up our Cod
to<01:32:48.400><c> just</c><01:32:48.679><c> time</c><01:32:49.440><c> the</c><01:32:49.719><c> uh</c><01:32:49.840><c> iterations</c><01:32:50.840><c> so</c><01:32:51.119><c> import</c>

01:32:51.590 --> 01:32:51.600 align:start position:0%
to just time the uh iterations so import
 

01:32:51.600 --> 01:32:54.189 align:start position:0%
to just time the uh iterations so import
time<01:32:52.600><c> I</c><01:32:52.719><c> changed</c><01:32:53.000><c> the</c><01:32:53.119><c> hyper</c><01:32:53.360><c> parameters</c><01:32:54.040><c> so</c>

01:32:54.189 --> 01:32:54.199 align:start position:0%
time I changed the hyper parameters so
 

01:32:54.199 --> 01:32:55.510 align:start position:0%
time I changed the hyper parameters so
that<01:32:54.320><c> we</c><01:32:54.440><c> have</c><01:32:54.560><c> something</c><01:32:54.800><c> a</c><01:32:54.920><c> bit</c><01:32:55.080><c> more</c><01:32:55.360><c> that</c>

01:32:55.510 --> 01:32:55.520 align:start position:0%
that we have something a bit more that
 

01:32:55.520 --> 01:32:57.470 align:start position:0%
that we have something a bit more that
reflects<01:32:56.400><c> uh</c><01:32:56.560><c> kind</c><01:32:56.679><c> of</c><01:32:56.800><c> workload</c><01:32:57.280><c> that</c><01:32:57.400><c> we</c>

01:32:57.470 --> 01:32:57.480 align:start position:0%
reflects uh kind of workload that we
 

01:32:57.480 --> 01:32:59.550 align:start position:0%
reflects uh kind of workload that we
want<01:32:57.600><c> to</c><01:32:58.040><c> run</c><01:32:58.760><c> uh</c><01:32:58.880><c> because</c><01:32:59.040><c> we</c><01:32:59.159><c> want</c><01:32:59.239><c> to</c><01:32:59.360><c> do</c><01:32:59.440><c> a</c>

01:32:59.550 --> 01:32:59.560 align:start position:0%
want to run uh because we want to do a
 

01:32:59.560 --> 01:33:01.350 align:start position:0%
want to run uh because we want to do a
fairly<01:32:59.800><c> large</c><01:33:00.040><c> run</c><01:33:00.280><c> at</c><01:33:00.360><c> the</c><01:33:00.440><c> end</c><01:33:00.600><c> of</c><01:33:00.760><c> this</c><01:33:01.199><c> so</c>

01:33:01.350 --> 01:33:01.360 align:start position:0%
fairly large run at the end of this so
 

01:33:01.360 --> 01:33:04.149 align:start position:0%
fairly large run at the end of this so
let's<01:33:01.560><c> use</c><01:33:01.880><c> batch</c><01:33:02.159><c> size</c><01:33:02.560><c> 16</c><01:33:03.520><c> and</c><01:33:03.719><c> let's</c><01:33:04.000><c> now</c>

01:33:04.149 --> 01:33:04.159 align:start position:0%
let's use batch size 16 and let's now
 

01:33:04.159 --> 01:33:07.030 align:start position:0%
let's use batch size 16 and let's now
use<01:33:04.360><c> the</c><01:33:04.480><c> actual</c><01:33:05.119><c> gpt2</c><01:33:06.119><c> um</c><01:33:06.320><c> maximum</c><01:33:06.679><c> sequence</c>

01:33:07.030 --> 01:33:07.040 align:start position:0%
use the actual gpt2 um maximum sequence
 

01:33:07.040 --> 01:33:08.669 align:start position:0%
use the actual gpt2 um maximum sequence
length<01:33:07.239><c> of</c><01:33:07.400><c> 10,24</c>

01:33:08.669 --> 01:33:08.679 align:start position:0%
length of 10,24
 

01:33:08.679 --> 01:33:11.470 align:start position:0%
length of 10,24
tokens<01:33:09.679><c> uh</c><01:33:10.000><c> so</c><01:33:10.560><c> this</c><01:33:10.679><c> is</c><01:33:10.840><c> the</c>

01:33:11.470 --> 01:33:11.480 align:start position:0%
tokens uh so this is the
 

01:33:11.480 --> 01:33:15.510 align:start position:0%
tokens uh so this is the
configuration<01:33:12.480><c> and</c><01:33:12.920><c> then</c><01:33:13.920><c> for</c><01:33:14.159><c> 50</c><01:33:14.520><c> iterations</c>

01:33:15.510 --> 01:33:15.520 align:start position:0%
configuration and then for 50 iterations
 

01:33:15.520 --> 01:33:17.470 align:start position:0%
configuration and then for 50 iterations
I'm<01:33:15.639><c> just</c><01:33:15.760><c> doing</c><01:33:15.960><c> something</c><01:33:16.199><c> very</c><01:33:16.400><c> lazy</c><01:33:16.800><c> here</c>

01:33:17.470 --> 01:33:17.480 align:start position:0%
I'm just doing something very lazy here
 

01:33:17.480 --> 01:33:19.750 align:start position:0%
I'm just doing something very lazy here
I'm<01:33:17.679><c> doing</c><01:33:18.000><c> time.</c><01:33:18.440><c> time</c><01:33:18.679><c> to</c><01:33:18.880><c> get</c><01:33:19.280><c> the</c><01:33:19.400><c> current</c>

01:33:19.750 --> 01:33:19.760 align:start position:0%
I'm doing time. time to get the current
 

01:33:19.760 --> 01:33:22.070 align:start position:0%
I'm doing time. time to get the current
time<01:33:20.639><c> and</c><01:33:20.800><c> then</c><01:33:21.159><c> this</c><01:33:21.280><c> is</c><01:33:21.400><c> the</c><01:33:21.520><c> optimization</c>

01:33:22.070 --> 01:33:22.080 align:start position:0%
time and then this is the optimization
 

01:33:22.080 --> 01:33:24.510 align:start position:0%
time and then this is the optimization
Loop<01:33:23.000><c> and</c><01:33:23.199><c> now</c><01:33:23.360><c> I</c><01:33:23.440><c> want</c><01:33:23.560><c> to</c><01:33:23.880><c> time</c><01:33:24.119><c> how</c><01:33:24.280><c> long</c>

01:33:24.510 --> 01:33:24.520 align:start position:0%
Loop and now I want to time how long
 

01:33:24.520 --> 01:33:28.629 align:start position:0%
Loop and now I want to time how long
this<01:33:24.760><c> takes</c><01:33:25.639><c> now</c><01:33:26.159><c> one</c><01:33:26.520><c> issue</c><01:33:27.520><c> with</c><01:33:27.920><c> working</c>

01:33:28.629 --> 01:33:28.639 align:start position:0%
this takes now one issue with working
 

01:33:28.639 --> 01:33:31.990 align:start position:0%
this takes now one issue with working
with<01:33:29.040><c> gpus</c><01:33:30.040><c> is</c><01:33:30.320><c> that</c><01:33:31.119><c> as</c><01:33:31.280><c> your</c>

01:33:31.990 --> 01:33:32.000 align:start position:0%
with gpus is that as your
 

01:33:32.000 --> 01:33:35.470 align:start position:0%
with gpus is that as your
CPU<01:33:33.000><c> um</c><01:33:33.800><c> when</c><01:33:33.920><c> your</c><01:33:34.080><c> CPU</c><01:33:34.480><c> runs</c><01:33:35.040><c> it's</c><01:33:35.239><c> just</c>

01:33:35.470 --> 01:33:35.480 align:start position:0%
CPU um when your CPU runs it's just
 

01:33:35.480 --> 01:33:38.149 align:start position:0%
CPU um when your CPU runs it's just
scheduling<01:33:36.239><c> work</c><01:33:36.600><c> on</c><01:33:36.800><c> GPU</c><01:33:37.199><c> it's</c><01:33:37.360><c> ordering</c>

01:33:38.149 --> 01:33:38.159 align:start position:0%
scheduling work on GPU it's ordering
 

01:33:38.159 --> 01:33:40.590 align:start position:0%
scheduling work on GPU it's ordering
some<01:33:38.400><c> work</c><01:33:38.800><c> right</c><01:33:39.320><c> and</c><01:33:39.400><c> so</c><01:33:39.560><c> it</c><01:33:39.760><c> send</c><01:33:39.920><c> a</c><01:33:40.119><c> request</c>

01:33:40.590 --> 01:33:40.600 align:start position:0%
some work right and so it send a request
 

01:33:40.600 --> 01:33:43.310 align:start position:0%
some work right and so it send a request
and<01:33:40.719><c> then</c><01:33:40.840><c> it</c><01:33:40.960><c> continues</c><01:33:41.360><c> running</c><01:33:42.280><c> and</c><01:33:42.440><c> so</c><01:33:43.199><c> we</c>

01:33:43.310 --> 01:33:43.320 align:start position:0%
and then it continues running and so we
 

01:33:43.320 --> 01:33:44.510 align:start position:0%
and then it continues running and so we
can<01:33:43.480><c> actually</c><01:33:43.679><c> it</c><01:33:43.760><c> can</c><01:33:43.920><c> happen</c><01:33:44.280><c> sometimes</c>

01:33:44.510 --> 01:33:44.520 align:start position:0%
can actually it can happen sometimes
 

01:33:44.520 --> 01:33:48.189 align:start position:0%
can actually it can happen sometimes
that<01:33:44.679><c> we</c><01:33:44.840><c> sort</c><01:33:45.040><c> of</c><01:33:45.480><c> um</c><01:33:46.400><c> speed</c><01:33:46.880><c> through</c><01:33:47.199><c> this</c>

01:33:48.189 --> 01:33:48.199 align:start position:0%
that we sort of um speed through this
 

01:33:48.199 --> 01:33:50.390 align:start position:0%
that we sort of um speed through this
and<01:33:48.400><c> we</c><01:33:48.800><c> queue</c><01:33:49.080><c> up</c><01:33:49.320><c> a</c><01:33:49.400><c> lot</c><01:33:49.520><c> of</c><01:33:49.679><c> kernels</c><01:33:50.080><c> to</c><01:33:50.239><c> run</c>

01:33:50.390 --> 01:33:50.400 align:start position:0%
and we queue up a lot of kernels to run
 

01:33:50.400 --> 01:33:52.709 align:start position:0%
and we queue up a lot of kernels to run
on<01:33:50.520><c> the</c><01:33:50.639><c> GPU</c><01:33:51.440><c> and</c><01:33:51.560><c> then</c><01:33:51.639><c> the</c><01:33:51.760><c> CPU</c><01:33:52.159><c> sort</c><01:33:52.320><c> of</c><01:33:52.520><c> like</c>

01:33:52.709 --> 01:33:52.719 align:start position:0%
on the GPU and then the CPU sort of like
 

01:33:52.719 --> 01:33:54.590 align:start position:0%
on the GPU and then the CPU sort of like
gets<01:33:52.960><c> here</c><01:33:53.119><c> and</c><01:33:53.280><c> takes</c><01:33:53.480><c> time</c><01:33:53.840><c> at</c><01:33:54.040><c> time</c><01:33:54.440><c> but</c>

01:33:54.590 --> 01:33:54.600 align:start position:0%
gets here and takes time at time but
 

01:33:54.600 --> 01:33:56.270 align:start position:0%
gets here and takes time at time but
actually<01:33:54.840><c> the</c><01:33:54.960><c> GPU</c><01:33:55.280><c> is</c><01:33:55.400><c> still</c><01:33:55.560><c> running</c>

01:33:56.270 --> 01:33:56.280 align:start position:0%
actually the GPU is still running
 

01:33:56.280 --> 01:33:57.830 align:start position:0%
actually the GPU is still running
because<01:33:56.480><c> it</c><01:33:56.639><c> takes</c><01:33:56.880><c> it</c><01:33:57.159><c> time</c><01:33:57.400><c> to</c><01:33:57.560><c> actually</c>

01:33:57.830 --> 01:33:57.840 align:start position:0%
because it takes it time to actually
 

01:33:57.840 --> 01:34:00.189 align:start position:0%
because it takes it time to actually
work<01:33:58.119><c> through</c><01:33:58.760><c> the</c><01:33:58.960><c> work</c><01:33:59.320><c> that</c><01:33:59.440><c> was</c><01:33:59.639><c> scheduled</c>

01:34:00.189 --> 01:34:00.199 align:start position:0%
work through the work that was scheduled
 

01:34:00.199 --> 01:34:03.070 align:start position:0%
work through the work that was scheduled
to<01:34:00.520><c> run</c><01:34:01.520><c> and</c><01:34:01.679><c> so</c><01:34:02.040><c> you're</c><01:34:02.280><c> just</c><01:34:02.440><c> building</c><01:34:02.760><c> up</c><01:34:02.920><c> a</c>

01:34:03.070 --> 01:34:03.080 align:start position:0%
to run and so you're just building up a
 

01:34:03.080 --> 01:34:05.550 align:start position:0%
to run and so you're just building up a
queue<01:34:03.320><c> for</c><01:34:03.480><c> the</c><01:34:03.719><c> GPU</c><01:34:04.719><c> and</c><01:34:04.800><c> so</c><01:34:05.040><c> actually</c><01:34:05.280><c> if</c><01:34:05.400><c> you</c>

01:34:05.550 --> 01:34:05.560 align:start position:0%
queue for the GPU and so actually if you
 

01:34:05.560 --> 01:34:07.950 align:start position:0%
queue for the GPU and so actually if you
need<01:34:05.760><c> to</c><01:34:06.159><c> you</c><01:34:06.239><c> want</c><01:34:06.360><c> to</c><01:34:06.639><c> wait</c><01:34:07.159><c> toat</c><01:34:07.760><c> data</c>

01:34:07.950 --> 01:34:07.960 align:start position:0%
need to you want to wait toat data
 

01:34:07.960 --> 01:34:10.070 align:start position:0%
need to you want to wait toat data
synchronize<01:34:08.840><c> and</c><01:34:09.080><c> this</c><01:34:09.320><c> will</c><01:34:09.520><c> wait</c><01:34:09.840><c> for</c><01:34:10.000><c> the</c>

01:34:10.070 --> 01:34:10.080 align:start position:0%
synchronize and this will wait for the
 

01:34:10.080 --> 01:34:12.270 align:start position:0%
synchronize and this will wait for the
GPU<01:34:10.520><c> to</c><01:34:10.920><c> finish</c><01:34:11.280><c> all</c><01:34:11.440><c> the</c><01:34:11.560><c> work</c><01:34:11.760><c> that</c><01:34:11.920><c> was</c>

01:34:12.270 --> 01:34:12.280 align:start position:0%
GPU to finish all the work that was
 

01:34:12.280 --> 01:34:15.550 align:start position:0%
GPU to finish all the work that was
scheduled<01:34:12.800><c> to</c><01:34:12.960><c> run</c><01:34:13.800><c> up</c><01:34:14.000><c> above</c><01:34:14.320><c> here</c><01:34:15.119><c> and</c><01:34:15.320><c> then</c>

01:34:15.550 --> 01:34:15.560 align:start position:0%
scheduled to run up above here and then
 

01:34:15.560 --> 01:34:17.510 align:start position:0%
scheduled to run up above here and then
we<01:34:15.679><c> can</c><01:34:15.880><c> actually</c><01:34:16.119><c> take</c><01:34:16.280><c> the</c><01:34:16.480><c> time</c><01:34:17.360><c> so</c>

01:34:17.510 --> 01:34:17.520 align:start position:0%
we can actually take the time so
 

01:34:17.520 --> 01:34:19.030 align:start position:0%
we can actually take the time so
basically<01:34:17.880><c> we're</c><01:34:18.080><c> waiting</c><01:34:18.280><c> for</c><01:34:18.440><c> the</c><01:34:18.520><c> GPU</c><01:34:18.880><c> to</c>

01:34:19.030 --> 01:34:19.040 align:start position:0%
basically we're waiting for the GPU to
 

01:34:19.040 --> 01:34:22.229 align:start position:0%
basically we're waiting for the GPU to
stop<01:34:19.480><c> this</c><01:34:19.600><c> iteration</c><01:34:20.480><c> take</c><01:34:20.960><c> time</c><01:34:21.840><c> and</c><01:34:22.040><c> then</c>

01:34:22.229 --> 01:34:22.239 align:start position:0%
stop this iteration take time and then
 

01:34:22.239 --> 01:34:24.470 align:start position:0%
stop this iteration take time and then
we're<01:34:22.400><c> going</c><01:34:22.520><c> to</c><01:34:22.679><c> just</c><01:34:22.800><c> print</c><01:34:23.040><c> it</c><01:34:23.400><c> so</c>

01:34:24.470 --> 01:34:24.480 align:start position:0%
we're going to just print it so
 

01:34:24.480 --> 01:34:26.790 align:start position:0%
we're going to just print it so
so<01:34:25.480><c> here</c><01:34:25.639><c> I'm</c><01:34:25.760><c> going</c><01:34:25.880><c> to</c><01:34:26.040><c> run</c><01:34:26.360><c> the</c><01:34:26.480><c> training</c>

01:34:26.790 --> 01:34:26.800 align:start position:0%
so here I'm going to run the training
 

01:34:26.800 --> 01:34:29.510 align:start position:0%
so here I'm going to run the training
Loop<01:34:27.440><c> and</c><01:34:27.600><c> here</c><01:34:27.719><c> on</c><01:34:27.840><c> the</c><01:34:28.000><c> right</c><01:34:28.320><c> I'm</c><01:34:28.760><c> watching</c>

01:34:29.510 --> 01:34:29.520 align:start position:0%
Loop and here on the right I'm watching
 

01:34:29.520 --> 01:34:33.070 align:start position:0%
Loop and here on the right I'm watching
Nvidia<01:34:30.040><c> SMI</c><01:34:31.040><c> so</c><01:34:31.159><c> we</c><01:34:31.280><c> start</c><01:34:31.480><c> off</c><01:34:31.679><c> at</c><01:34:31.840><c> zero</c><01:34:32.800><c> um</c>

01:34:33.070 --> 01:34:33.080 align:start position:0%
Nvidia SMI so we start off at zero um
 

01:34:33.080 --> 01:34:35.030 align:start position:0%
Nvidia SMI so we start off at zero um
we're<01:34:33.280><c> not</c><01:34:33.400><c> using</c><01:34:33.639><c> the</c><01:34:33.800><c> GPU</c><01:34:34.639><c> and</c><01:34:34.719><c> then</c><01:34:34.880><c> by</c>

01:34:35.030 --> 01:34:35.040 align:start position:0%
we're not using the GPU and then by
 

01:34:35.040 --> 01:34:37.229 align:start position:0%
we're not using the GPU and then by
default<01:34:35.360><c> P</c><01:34:35.719><c> will</c><01:34:35.880><c> use</c><01:34:36.040><c> gpu0</c><01:34:36.719><c> so</c><01:34:36.840><c> we</c><01:34:36.960><c> see</c><01:34:37.159><c> that</c>

01:34:37.229 --> 01:34:37.239 align:start position:0%
default P will use gpu0 so we see that
 

01:34:37.239 --> 01:34:40.270 align:start position:0%
default P will use gpu0 so we see that
it<01:34:37.360><c> gets</c><01:34:37.520><c> filled</c><01:34:37.800><c> up</c><01:34:38.600><c> and</c><01:34:38.719><c> we're</c><01:34:38.920><c> using</c><01:34:39.239><c> 35</c><01:34:39.840><c> GB</c>

01:34:40.270 --> 01:34:40.280 align:start position:0%
it gets filled up and we're using 35 GB
 

01:34:40.280 --> 01:34:42.550 align:start position:0%
it gets filled up and we're using 35 GB
out<01:34:40.440><c> of</c><01:34:40.600><c> 80</c><01:34:41.360><c> gabt</c>

01:34:42.550 --> 01:34:42.560 align:start position:0%
out of 80 gabt
 

01:34:42.560 --> 01:34:44.990 align:start position:0%
out of 80 gabt
available<01:34:43.560><c> and</c><01:34:43.679><c> then</c><01:34:43.880><c> here</c><01:34:44.040><c> on</c><01:34:44.159><c> the</c><01:34:44.560><c> left</c><01:34:44.880><c> we</c>

01:34:44.990 --> 01:34:45.000 align:start position:0%
available and then here on the left we
 

01:34:45.000 --> 01:34:47.790 align:start position:0%
available and then here on the left we
see<01:34:45.400><c> that</c><01:34:46.080><c> because</c><01:34:46.360><c> we've</c><01:34:46.760><c> cranked</c><01:34:47.199><c> up</c><01:34:47.600><c> the</c>

01:34:47.790 --> 01:34:47.800 align:start position:0%
see that because we've cranked up the
 

01:34:47.800 --> 01:34:48.950 align:start position:0%
see that because we've cranked up the
batch

01:34:48.950 --> 01:34:48.960 align:start position:0%
batch
 

01:34:48.960 --> 01:34:51.470 align:start position:0%
batch
size<01:34:49.960><c> now</c><01:34:50.119><c> it's</c><01:34:50.280><c> only</c><01:34:50.520><c> 20</c><01:34:50.840><c> batches</c><01:34:51.159><c> to</c><01:34:51.280><c> do</c><01:34:51.400><c> a</c>

01:34:51.470 --> 01:34:51.480 align:start position:0%
size now it's only 20 batches to do a
 

01:34:51.480 --> 01:34:54.109 align:start position:0%
size now it's only 20 batches to do a
single<01:34:51.760><c> Epoch</c><01:34:52.159><c> on</c><01:34:52.239><c> our</c><01:34:52.360><c> tiny</c><01:34:52.600><c> Shakespeare</c>

01:34:54.109 --> 01:34:54.119 align:start position:0%
single Epoch on our tiny Shakespeare
 

01:34:54.119 --> 01:34:55.950 align:start position:0%
single Epoch on our tiny Shakespeare
and<01:34:54.320><c> we</c><01:34:54.440><c> see</c><01:34:54.719><c> that</c><01:34:54.840><c> we're</c><01:34:55.080><c> seeing</c><01:34:55.480><c> roughly</c><01:34:55.800><c> a</c>

01:34:55.950 --> 01:34:55.960 align:start position:0%
and we see that we're seeing roughly a
 

01:34:55.960 --> 01:34:58.189 align:start position:0%
and we see that we're seeing roughly a
th000<01:34:56.280><c> milliseconds</c><01:34:56.920><c> per</c><01:34:57.119><c> iteration</c><01:34:57.679><c> here</c>

01:34:58.189 --> 01:34:58.199 align:start position:0%
th000 milliseconds per iteration here
 

01:34:58.199 --> 01:35:00.189 align:start position:0%
th000 milliseconds per iteration here
right

01:35:00.189 --> 01:35:00.199 align:start position:0%
right
 

01:35:00.199 --> 01:35:02.870 align:start position:0%
right
so<01:35:01.199><c> the</c><01:35:01.320><c> first</c><01:35:01.480><c> iteration</c><01:35:02.239><c> sometimes</c><01:35:02.600><c> is</c>

01:35:02.870 --> 01:35:02.880 align:start position:0%
so the first iteration sometimes is
 

01:35:02.880 --> 01:35:04.709 align:start position:0%
so the first iteration sometimes is
slower<01:35:03.719><c> and</c><01:35:03.840><c> that's</c><01:35:04.000><c> because</c><01:35:04.239><c> pytorch</c><01:35:04.639><c> might</c>

01:35:04.709 --> 01:35:04.719 align:start position:0%
slower and that's because pytorch might
 

01:35:04.719 --> 01:35:06.070 align:start position:0%
slower and that's because pytorch might
be<01:35:04.840><c> doing</c><01:35:05.000><c> a</c><01:35:05.040><c> lot</c><01:35:05.159><c> of</c><01:35:05.280><c> initializations</c><01:35:05.960><c> here</c>

01:35:06.070 --> 01:35:06.080 align:start position:0%
be doing a lot of initializations here
 

01:35:06.080 --> 01:35:08.310 align:start position:0%
be doing a lot of initializations here
on<01:35:06.239><c> the</c><01:35:06.360><c> very</c><01:35:06.520><c> first</c><01:35:06.840><c> iteration</c><01:35:07.840><c> and</c><01:35:07.960><c> so</c><01:35:08.119><c> it's</c>

01:35:08.310 --> 01:35:08.320 align:start position:0%
on the very first iteration and so it's
 

01:35:08.320 --> 01:35:09.790 align:start position:0%
on the very first iteration and so it's
probably<01:35:08.639><c> initializing</c><01:35:09.159><c> all</c><01:35:09.360><c> these</c><01:35:09.679><c> uh</c>

01:35:09.790 --> 01:35:09.800 align:start position:0%
probably initializing all these uh
 

01:35:09.800 --> 01:35:11.470 align:start position:0%
probably initializing all these uh
tensors<01:35:10.199><c> and</c><01:35:10.360><c> buffers</c><01:35:10.760><c> to</c><01:35:10.920><c> hold</c><01:35:11.199><c> all</c><01:35:11.360><c> the</c>

01:35:11.470 --> 01:35:11.480 align:start position:0%
tensors and buffers to hold all the
 

01:35:11.480 --> 01:35:13.669 align:start position:0%
tensors and buffers to hold all the
gradients<01:35:12.000><c> and</c><01:35:12.560><c> I'm</c><01:35:12.679><c> not</c><01:35:12.840><c> 100%</c><01:35:13.239><c> sure</c><01:35:13.440><c> all</c><01:35:13.600><c> the</c>

01:35:13.669 --> 01:35:13.679 align:start position:0%
gradients and I'm not 100% sure all the
 

01:35:13.679 --> 01:35:16.070 align:start position:0%
gradients and I'm not 100% sure all the
work<01:35:13.840><c> that</c><01:35:14.000><c> happens</c><01:35:14.360><c> here</c><01:35:15.159><c> but</c><01:35:15.679><c> uh</c><01:35:15.840><c> this</c><01:35:15.960><c> could</c>

01:35:16.070 --> 01:35:16.080 align:start position:0%
work that happens here but uh this could
 

01:35:16.080 --> 01:35:18.070 align:start position:0%
work that happens here but uh this could
be<01:35:16.199><c> a</c><01:35:16.320><c> slower</c><01:35:16.679><c> iteration</c><01:35:17.400><c> when</c><01:35:17.560><c> you're</c><01:35:17.800><c> timing</c>

01:35:18.070 --> 01:35:18.080 align:start position:0%
be a slower iteration when you're timing
 

01:35:18.080 --> 01:35:19.510 align:start position:0%
be a slower iteration when you're timing
your<01:35:18.280><c> logic</c><01:35:18.600><c> you</c><01:35:18.719><c> always</c><01:35:18.880><c> want</c><01:35:19.000><c> to</c><01:35:19.119><c> be</c><01:35:19.199><c> careful</c>

01:35:19.510 --> 01:35:19.520 align:start position:0%
your logic you always want to be careful
 

01:35:19.520 --> 01:35:21.310 align:start position:0%
your logic you always want to be careful
with<01:35:19.679><c> that</c><01:35:20.239><c> but</c><01:35:20.360><c> basically</c><01:35:20.679><c> we're</c><01:35:20.800><c> seeing</c><01:35:21.119><c> a</c>

01:35:21.310 --> 01:35:21.320 align:start position:0%
with that but basically we're seeing a
 

01:35:21.320 --> 01:35:24.350 align:start position:0%
with that but basically we're seeing a
th000<01:35:22.000><c> milliseconds</c><01:35:22.639><c> per</c><01:35:22.920><c> iteration</c>

01:35:24.350 --> 01:35:24.360 align:start position:0%
th000 milliseconds per iteration
 

01:35:24.360 --> 01:35:26.750 align:start position:0%
th000 milliseconds per iteration
um<01:35:24.880><c> and</c><01:35:25.040><c> so</c><01:35:25.280><c> this</c><01:35:25.400><c> will</c><01:35:25.560><c> run</c><01:35:25.800><c> for</c><01:35:26.040><c> roughly</c><01:35:26.400><c> 50</c>

01:35:26.750 --> 01:35:26.760 align:start position:0%
um and so this will run for roughly 50
 

01:35:26.760 --> 01:35:29.390 align:start position:0%
um and so this will run for roughly 50
seconds<01:35:27.199><c> as</c><01:35:27.320><c> we</c><01:35:27.440><c> have</c><01:35:27.560><c> it</c><01:35:27.760><c> right</c><01:35:28.199><c> now</c><01:35:29.199><c> so</c>

01:35:29.390 --> 01:35:29.400 align:start position:0%
seconds as we have it right now so
 

01:35:29.400 --> 01:35:32.590 align:start position:0%
seconds as we have it right now so
that's<01:35:29.600><c> our</c><01:35:29.840><c> Baseline</c><01:35:30.360><c> in</c><01:35:30.520><c> flo</c><01:35:31.280><c> 32</c><01:35:32.280><c> one</c><01:35:32.400><c> more</c>

01:35:32.590 --> 01:35:32.600 align:start position:0%
that's our Baseline in flo 32 one more
 

01:35:32.600 --> 01:35:35.070 align:start position:0%
that's our Baseline in flo 32 one more
thing<01:35:32.719><c> I</c><01:35:32.840><c> wanted</c><01:35:33.040><c> to</c><01:35:33.159><c> mention</c><01:35:33.560><c> is</c><01:35:33.800><c> that</c><01:35:34.800><c> if</c>

01:35:35.070 --> 01:35:35.080 align:start position:0%
thing I wanted to mention is that if
 

01:35:35.080 --> 01:35:36.629 align:start position:0%
thing I wanted to mention is that if
this<01:35:35.239><c> doesn't</c><01:35:35.520><c> fit</c><01:35:35.719><c> into</c><01:35:35.920><c> your</c><01:35:36.080><c> GPU</c><01:35:36.520><c> and</c>

01:35:36.629 --> 01:35:36.639 align:start position:0%
this doesn't fit into your GPU and
 

01:35:36.639 --> 01:35:38.390 align:start position:0%
this doesn't fit into your GPU and
you're<01:35:36.760><c> getting</c><01:35:36.960><c> out</c><01:35:37.119><c> of</c><01:35:37.239><c> memory</c><01:35:37.520><c> errors</c><01:35:38.239><c> then</c>

01:35:38.390 --> 01:35:38.400 align:start position:0%
you're getting out of memory errors then
 

01:35:38.400 --> 01:35:40.109 align:start position:0%
you're getting out of memory errors then
start<01:35:38.679><c> decreasing</c><01:35:39.119><c> your</c><01:35:39.280><c> batch</c><01:35:39.560><c> size</c><01:35:39.840><c> until</c>

01:35:40.109 --> 01:35:40.119 align:start position:0%
start decreasing your batch size until
 

01:35:40.119 --> 01:35:42.750 align:start position:0%
start decreasing your batch size until
things<01:35:40.360><c> fit</c><01:35:40.960><c> so</c><01:35:41.159><c> instead</c><01:35:41.440><c> of</c><01:35:41.560><c> 16</c><01:35:41.960><c> try</c><01:35:42.239><c> eight</c><01:35:42.600><c> or</c>

01:35:42.750 --> 01:35:42.760 align:start position:0%
things fit so instead of 16 try eight or
 

01:35:42.760 --> 01:35:45.990 align:start position:0%
things fit so instead of 16 try eight or
four<01:35:43.239><c> or</c><01:35:43.440><c> whatever</c><01:35:43.760><c> you</c><01:35:43.880><c> need</c><01:35:44.159><c> to</c><01:35:44.440><c> fit</c><01:35:45.320><c> um</c><01:35:45.840><c> the</c>

01:35:45.990 --> 01:35:46.000 align:start position:0%
four or whatever you need to fit um the
 

01:35:46.000 --> 01:35:48.189 align:start position:0%
four or whatever you need to fit um the
batch<01:35:46.360><c> into</c><01:35:46.600><c> your</c><01:35:46.760><c> GPU</c><01:35:47.760><c> and</c><01:35:47.880><c> if</c><01:35:47.920><c> you</c><01:35:48.040><c> have</c><01:35:48.119><c> a</c>

01:35:48.189 --> 01:35:48.199 align:start position:0%
batch into your GPU and if you have a
 

01:35:48.199 --> 01:35:49.590 align:start position:0%
batch into your GPU and if you have a
bigger<01:35:48.440><c> GPU</c><01:35:48.800><c> you</c><01:35:48.880><c> can</c><01:35:49.040><c> actually</c><01:35:49.239><c> potentially</c>

01:35:49.590 --> 01:35:49.600 align:start position:0%
bigger GPU you can actually potentially
 

01:35:49.600 --> 01:35:52.590 align:start position:0%
bigger GPU you can actually potentially
get<01:35:49.719><c> away</c><01:35:49.920><c> with</c><01:35:50.040><c> 32</c><01:35:50.679><c> and</c><01:35:50.800><c> so</c><01:35:50.960><c> on</c><01:35:51.920><c> uh</c><01:35:52.080><c> by</c><01:35:52.280><c> default</c>

01:35:52.590 --> 01:35:52.600 align:start position:0%
get away with 32 and so on uh by default
 

01:35:52.600 --> 01:35:54.390 align:start position:0%
get away with 32 and so on uh by default
you<01:35:52.679><c> want</c><01:35:52.800><c> to</c><01:35:52.960><c> basically</c><01:35:53.239><c> max</c><01:35:53.480><c> out</c><01:35:53.639><c> has</c><01:35:54.080><c> Max</c>

01:35:54.390 --> 01:35:54.400 align:start position:0%
you want to basically max out has Max
 

01:35:54.400 --> 01:35:56.550 align:start position:0%
you want to basically max out has Max
Max<01:35:54.639><c> out</c><01:35:54.840><c> the</c><01:35:55.000><c> batch</c><01:35:55.320><c> size</c><01:35:55.639><c> that</c><01:35:55.760><c> fits</c><01:35:56.000><c> on</c><01:35:56.119><c> your</c>

01:35:56.550 --> 01:35:56.560 align:start position:0%
Max out the batch size that fits on your
 

01:35:56.560 --> 01:35:59.510 align:start position:0%
Max out the batch size that fits on your
GPU<01:35:57.560><c> and</c><01:35:57.719><c> you</c><01:35:57.800><c> want</c><01:35:57.960><c> to</c><01:35:58.119><c> keep</c><01:35:58.280><c> it</c><01:35:58.480><c> nice</c><01:35:58.719><c> numbers</c>

01:35:59.510 --> 01:35:59.520 align:start position:0%
GPU and you want to keep it nice numbers
 

01:35:59.520 --> 01:36:01.830 align:start position:0%
GPU and you want to keep it nice numbers
so<01:35:59.920><c> use</c><01:36:00.560><c> numbers</c><01:36:00.920><c> that</c><01:36:01.040><c> have</c><01:36:01.199><c> lots</c><01:36:01.360><c> of</c><01:36:01.520><c> powers</c>

01:36:01.830 --> 01:36:01.840 align:start position:0%
so use numbers that have lots of powers
 

01:36:01.840 --> 01:36:05.310 align:start position:0%
so use numbers that have lots of powers
of<01:36:02.000><c> two</c><01:36:02.280><c> in</c><01:36:02.480><c> them</c><01:36:03.080><c> so</c><01:36:03.360><c> 16</c><01:36:03.760><c> is</c><01:36:03.880><c> a</c><01:36:04.000><c> good</c><01:36:04.159><c> number</c><01:36:04.520><c> 8</c>

01:36:05.310 --> 01:36:05.320 align:start position:0%
of two in them so 16 is a good number 8
 

01:36:05.320 --> 01:36:09.149 align:start position:0%
of two in them so 16 is a good number 8
24<01:36:06.320><c> 32</c><01:36:07.000><c> 48</c><01:36:07.800><c> These</c><01:36:07.920><c> are</c><01:36:08.159><c> nice</c><01:36:08.400><c> numbers</c><01:36:09.000><c> but</c>

01:36:09.149 --> 01:36:09.159 align:start position:0%
24 32 48 These are nice numbers but
 

01:36:09.159 --> 01:36:11.189 align:start position:0%
24 32 48 These are nice numbers but
don't<01:36:09.320><c> use</c><01:36:09.600><c> something</c><01:36:09.800><c> like</c><01:36:09.960><c> 17</c><01:36:10.840><c> uh</c><01:36:10.960><c> because</c>

01:36:11.189 --> 01:36:11.199 align:start position:0%
don't use something like 17 uh because
 

01:36:11.199 --> 01:36:12.590 align:start position:0%
don't use something like 17 uh because
that<01:36:11.280><c> will</c><01:36:11.400><c> run</c><01:36:11.639><c> very</c><01:36:11.800><c> inefficiently</c><01:36:12.280><c> on</c><01:36:12.400><c> a</c>

01:36:12.590 --> 01:36:12.600 align:start position:0%
that will run very inefficiently on a
 

01:36:12.600 --> 01:36:14.709 align:start position:0%
that will run very inefficiently on a
GPU<01:36:13.600><c> uh</c><01:36:13.719><c> and</c><01:36:13.800><c> we're</c><01:36:13.920><c> going</c><01:36:14.000><c> to</c><01:36:14.119><c> see</c><01:36:14.280><c> that</c><01:36:14.440><c> a</c><01:36:14.520><c> bit</c>

01:36:14.709 --> 01:36:14.719 align:start position:0%
GPU uh and we're going to see that a bit
 

01:36:14.719 --> 01:36:17.229 align:start position:0%
GPU uh and we're going to see that a bit
later<01:36:15.199><c> as</c><01:36:15.480><c> well</c><01:36:16.480><c> so</c><01:36:16.639><c> for</c><01:36:16.800><c> now</c><01:36:16.960><c> let's</c><01:36:17.119><c> just</c>

01:36:17.229 --> 01:36:17.239 align:start position:0%
later as well so for now let's just
 

01:36:17.239 --> 01:36:18.910 align:start position:0%
later as well so for now let's just
stick<01:36:17.440><c> with</c>

01:36:18.910 --> 01:36:18.920 align:start position:0%
stick with
 

01:36:18.920 --> 01:36:22.149 align:start position:0%
stick with
16124<01:36:19.920><c> and</c><01:36:20.760><c> uh</c><01:36:21.000><c> the</c><01:36:21.119><c> one</c><01:36:21.280><c> thing</c><01:36:21.480><c> that</c><01:36:21.679><c> I</c><01:36:21.800><c> added</c>

01:36:22.149 --> 01:36:22.159 align:start position:0%
16124 and uh the one thing that I added
 

01:36:22.159 --> 01:36:25.510 align:start position:0%
16124 and uh the one thing that I added
also<01:36:22.440><c> here</c><01:36:22.600><c> and</c><01:36:22.760><c> I</c><01:36:22.920><c> ran</c><01:36:23.199><c> it</c><01:36:23.800><c> again</c><01:36:24.600><c> is</c><01:36:25.320><c> I'm</c>

01:36:25.510 --> 01:36:25.520 align:start position:0%
also here and I ran it again is I'm
 

01:36:25.520 --> 01:36:27.030 align:start position:0%
also here and I ran it again is I'm
calculating<01:36:26.040><c> a</c><01:36:26.199><c> tokens</c><01:36:26.560><c> per</c><01:36:26.719><c> second</c>

01:36:27.030 --> 01:36:27.040 align:start position:0%
calculating a tokens per second
 

01:36:27.040 --> 01:36:29.750 align:start position:0%
calculating a tokens per second
throughput<01:36:27.880><c> during</c><01:36:28.199><c> training</c>

01:36:29.750 --> 01:36:29.760 align:start position:0%
throughput during training
 

01:36:29.760 --> 01:36:31.830 align:start position:0%
throughput during training
because<01:36:30.760><c> we</c><01:36:30.920><c> might</c><01:36:31.119><c> end</c><01:36:31.239><c> up</c><01:36:31.400><c> changing</c><01:36:31.719><c> the</c>

01:36:31.830 --> 01:36:31.840 align:start position:0%
because we might end up changing the
 

01:36:31.840 --> 01:36:34.109 align:start position:0%
because we might end up changing the
backat<01:36:32.119><c> size</c><01:36:32.360><c> around</c><01:36:32.679><c> over</c><01:36:32.920><c> time</c><01:36:33.560><c> but</c><01:36:33.800><c> tokens</c>

01:36:34.109 --> 01:36:34.119 align:start position:0%
backat size around over time but tokens
 

01:36:34.119 --> 01:36:35.550 align:start position:0%
backat size around over time but tokens
per<01:36:34.280><c> second</c><01:36:34.520><c> is</c><01:36:34.679><c> the</c><01:36:34.840><c> objective</c><01:36:35.199><c> measure</c><01:36:35.440><c> that</c>

01:36:35.550 --> 01:36:35.560 align:start position:0%
per second is the objective measure that
 

01:36:35.560 --> 01:36:37.070 align:start position:0%
per second is the objective measure that
we<01:36:35.679><c> actually</c><01:36:35.920><c> really</c><01:36:36.119><c> care</c><01:36:36.320><c> about</c><01:36:36.679><c> how</c><01:36:36.800><c> many</c>

01:36:37.070 --> 01:36:37.080 align:start position:0%
we actually really care about how many
 

01:36:37.080 --> 01:36:39.470 align:start position:0%
we actually really care about how many
tokens<01:36:37.520><c> of</c><01:36:37.719><c> data</c><01:36:38.159><c> are</c><01:36:38.320><c> we</c><01:36:38.600><c> training</c><01:36:39.000><c> on</c><01:36:39.320><c> and</c>

01:36:39.470 --> 01:36:39.480 align:start position:0%
tokens of data are we training on and
 

01:36:39.480 --> 01:36:41.070 align:start position:0%
tokens of data are we training on and
what<01:36:39.600><c> is</c><01:36:39.719><c> the</c><01:36:39.840><c> throughput</c><01:36:40.480><c> of</c><01:36:40.639><c> tokens</c><01:36:40.960><c> that</c>

01:36:41.070 --> 01:36:41.080 align:start position:0%
what is the throughput of tokens that
 

01:36:41.080 --> 01:36:43.070 align:start position:0%
what is the throughput of tokens that
we're<01:36:41.199><c> getting</c><01:36:41.400><c> in</c><01:36:41.520><c> our</c><01:36:41.800><c> optimization</c><01:36:42.800><c> so</c>

01:36:43.070 --> 01:36:43.080 align:start position:0%
we're getting in our optimization so
 

01:36:43.080 --> 01:36:44.750 align:start position:0%
we're getting in our optimization so
right<01:36:43.199><c> now</c><01:36:43.400><c> we're</c><01:36:43.880><c> processing</c><01:36:44.280><c> and</c><01:36:44.440><c> training</c>

01:36:44.750 --> 01:36:44.760 align:start position:0%
right now we're processing and training
 

01:36:44.760 --> 01:36:48.470 align:start position:0%
right now we're processing and training
on<01:36:45.840><c> 163,000</c><01:36:46.840><c> tokens</c><01:36:47.239><c> per</c><01:36:47.360><c> second</c><01:36:47.760><c> roughly</c><01:36:48.320><c> and</c>

01:36:48.470 --> 01:36:48.480 align:start position:0%
on 163,000 tokens per second roughly and
 

01:36:48.480 --> 01:36:50.430 align:start position:0%
on 163,000 tokens per second roughly and
that's<01:36:48.639><c> a</c><01:36:49.159><c> bit</c><01:36:49.280><c> more</c><01:36:49.480><c> objective</c>

01:36:50.430 --> 01:36:50.440 align:start position:0%
that's a bit more objective
 

01:36:50.440 --> 01:36:53.790 align:start position:0%
that's a bit more objective
metric<01:36:51.440><c> okay</c><01:36:51.600><c> so</c><01:36:51.960><c> let's</c><01:36:52.159><c> now</c><01:36:52.320><c> enable</c><01:36:52.600><c> tf32</c><01:36:53.360><c> now</c>

01:36:53.790 --> 01:36:53.800 align:start position:0%
metric okay so let's now enable tf32 now
 

01:36:53.800 --> 01:36:56.149 align:start position:0%
metric okay so let's now enable tf32 now
luckily<01:36:54.520><c> pytorch</c><01:36:55.000><c> makes</c><01:36:55.280><c> this</c><01:36:55.560><c> fairly</c><01:36:55.920><c> easy</c>

01:36:56.149 --> 01:36:56.159 align:start position:0%
luckily pytorch makes this fairly easy
 

01:36:56.159 --> 01:36:59.550 align:start position:0%
luckily pytorch makes this fairly easy
for<01:36:56.360><c> us</c><01:36:57.119><c> and</c><01:36:57.639><c> uh</c><01:36:57.920><c> to</c><01:36:58.119><c> enable</c><01:36:58.440><c> tf32</c><01:36:59.239><c> you</c><01:36:59.400><c> just</c>

01:36:59.550 --> 01:36:59.560 align:start position:0%
for us and uh to enable tf32 you just
 

01:36:59.560 --> 01:37:02.870 align:start position:0%
for us and uh to enable tf32 you just
need<01:36:59.719><c> to</c><01:37:00.000><c> do</c><01:37:00.119><c> a</c><01:37:00.239><c> single</c><01:37:00.560><c> line</c><01:37:01.480><c> and</c><01:37:01.679><c> is</c><01:37:01.960><c> this</c><01:37:02.800><c> and</c>

01:37:02.870 --> 01:37:02.880 align:start position:0%
need to do a single line and is this and
 

01:37:02.880 --> 01:37:04.790 align:start position:0%
need to do a single line and is this and
when<01:37:03.000><c> we</c><01:37:03.119><c> go</c><01:37:03.239><c> to</c><01:37:03.400><c> the</c><01:37:03.760><c> py</c><01:37:04.159><c> documentation</c><01:37:04.679><c> here</c>

01:37:04.790 --> 01:37:04.800 align:start position:0%
when we go to the py documentation here
 

01:37:04.800 --> 01:37:07.270 align:start position:0%
when we go to the py documentation here
for<01:37:05.000><c> this</c><01:37:05.360><c> function</c><01:37:06.360><c> basically</c><01:37:06.800><c> this</c><01:37:06.960><c> tells</c>

01:37:07.270 --> 01:37:07.280 align:start position:0%
for this function basically this tells
 

01:37:07.280 --> 01:37:10.350 align:start position:0%
for this function basically this tells
pych<01:37:07.719><c> what</c><01:37:07.840><c> kind</c><01:37:07.960><c> of</c><01:37:08.080><c> kernels</c><01:37:08.560><c> to</c><01:37:08.760><c> run</c><01:37:09.760><c> and</c><01:37:10.199><c> by</c>

01:37:10.350 --> 01:37:10.360 align:start position:0%
pych what kind of kernels to run and by
 

01:37:10.360 --> 01:37:12.990 align:start position:0%
pych what kind of kernels to run and by
default<01:37:10.679><c> I</c><01:37:10.800><c> believe</c><01:37:11.000><c> it</c><01:37:11.080><c> is</c><01:37:11.639><c> highest</c><01:37:12.639><c> highest</c>

01:37:12.990 --> 01:37:13.000 align:start position:0%
default I believe it is highest highest
 

01:37:13.000 --> 01:37:15.950 align:start position:0%
default I believe it is highest highest
Precision<01:37:13.520><c> for</c><01:37:13.760><c> mat</c><01:37:14.280><c> M</c><01:37:15.280><c> and</c><01:37:15.520><c> that</c><01:37:15.600><c> means</c><01:37:15.840><c> that</c>

01:37:15.950 --> 01:37:15.960 align:start position:0%
Precision for mat M and that means that
 

01:37:15.960 --> 01:37:18.109 align:start position:0%
Precision for mat M and that means that
everything<01:37:16.239><c> happens</c><01:37:16.480><c> in</c><01:37:16.600><c> float</c><01:37:16.840><c> 32</c><01:37:17.679><c> just</c><01:37:17.880><c> like</c>

01:37:18.109 --> 01:37:18.119 align:start position:0%
everything happens in float 32 just like
 

01:37:18.119 --> 01:37:20.629 align:start position:0%
everything happens in float 32 just like
it<01:37:18.280><c> did</c><01:37:18.520><c> before</c><01:37:19.320><c> but</c><01:37:19.440><c> if</c><01:37:19.560><c> we</c><01:37:19.679><c> set</c><01:37:19.840><c> it</c><01:37:20.000><c> to</c><01:37:20.320><c> high</c>

01:37:20.629 --> 01:37:20.639 align:start position:0%
it did before but if we set it to high
 

01:37:20.639 --> 01:37:22.590 align:start position:0%
it did before but if we set it to high
as<01:37:20.719><c> we</c><01:37:20.840><c> do</c><01:37:21.080><c> right</c><01:37:21.280><c> now</c><01:37:22.239><c> Matrix</c>

01:37:22.590 --> 01:37:22.600 align:start position:0%
as we do right now Matrix
 

01:37:22.600 --> 01:37:24.870 align:start position:0%
as we do right now Matrix
multiplications<01:37:23.159><c> will</c><01:37:23.280><c> not</c><01:37:23.560><c> use</c><01:37:23.840><c> tensor</c><01:37:24.199><c> flow</c>

01:37:24.870 --> 01:37:24.880 align:start position:0%
multiplications will not use tensor flow
 

01:37:24.880 --> 01:37:26.950 align:start position:0%
multiplications will not use tensor flow
32<01:37:25.880><c> when</c><01:37:26.000><c> it's</c>

01:37:26.950 --> 01:37:26.960 align:start position:0%
32 when it's
 

01:37:26.960 --> 01:37:30.390 align:start position:0%
32 when it's
available<01:37:27.960><c> my</c><01:37:28.119><c> GPU</c><01:37:28.480><c> is</c><01:37:28.719><c> a100</c><01:37:29.679><c> so</c><01:37:29.880><c> it's</c><01:37:30.000><c> an</c>

01:37:30.390 --> 01:37:30.400 align:start position:0%
available my GPU is a100 so it's an
 

01:37:30.400 --> 01:37:33.109 align:start position:0%
available my GPU is a100 so it's an
ampere<01:37:30.960><c> series</c><01:37:31.600><c> and</c><01:37:31.760><c> therefore</c><01:37:32.119><c> tf32</c><01:37:32.880><c> is</c>

01:37:33.109 --> 01:37:33.119 align:start position:0%
ampere series and therefore tf32 is
 

01:37:33.119 --> 01:37:35.550 align:start position:0%
ampere series and therefore tf32 is
available<01:37:33.960><c> if</c><01:37:34.040><c> you</c><01:37:34.159><c> have</c><01:37:34.280><c> an</c><01:37:34.440><c> older</c><01:37:34.760><c> GPU</c><01:37:35.400><c> this</c>

01:37:35.550 --> 01:37:35.560 align:start position:0%
available if you have an older GPU this
 

01:37:35.560 --> 01:37:38.030 align:start position:0%
available if you have an older GPU this
might<01:37:35.719><c> not</c><01:37:35.880><c> be</c><01:37:36.080><c> available</c><01:37:36.440><c> for</c><01:37:36.719><c> you</c><01:37:37.719><c> but</c><01:37:37.880><c> for</c>

01:37:38.030 --> 01:37:38.040 align:start position:0%
might not be available for you but for
 

01:37:38.040 --> 01:37:39.950 align:start position:0%
might not be available for you but for
my<01:37:38.159><c> GPU</c><01:37:38.520><c> it's</c><01:37:38.679><c> available</c><01:37:39.480><c> and</c><01:37:39.599><c> so</c><01:37:39.760><c> what</c><01:37:39.840><c> I</c>

01:37:39.950 --> 01:37:39.960 align:start position:0%
my GPU it's available and so what I
 

01:37:39.960 --> 01:37:41.910 align:start position:0%
my GPU it's available and so what I
expect<01:37:40.199><c> P</c><01:37:40.599><c> to</c><01:37:40.719><c> do</c><01:37:40.960><c> is</c><01:37:41.119><c> that</c><01:37:41.320><c> every</c><01:37:41.560><c> single</c>

01:37:41.910 --> 01:37:41.920 align:start position:0%
expect P to do is that every single
 

01:37:41.920 --> 01:37:44.750 align:start position:0%
expect P to do is that every single
place<01:37:42.119><c> where</c><01:37:42.239><c> we</c><01:37:42.360><c> see</c><01:37:42.520><c> an</c><01:37:42.679><c> nn.</c><01:37:43.440><c> linear</c><01:37:44.440><c> inside</c>

01:37:44.750 --> 01:37:44.760 align:start position:0%
place where we see an nn. linear inside
 

01:37:44.760 --> 01:37:46.430 align:start position:0%
place where we see an nn. linear inside
there<01:37:44.920><c> there's</c><01:37:45.080><c> a</c><01:37:45.159><c> matrix</c><01:37:45.520><c> multiplication</c>

01:37:46.430 --> 01:37:46.440 align:start position:0%
there there's a matrix multiplication
 

01:37:46.440 --> 01:37:48.030 align:start position:0%
there there's a matrix multiplication
and<01:37:46.560><c> I</c><01:37:46.679><c> expect</c><01:37:46.920><c> that</c><01:37:47.040><c> matrix</c><01:37:47.360><c> multiplication</c>

01:37:48.030 --> 01:37:48.040 align:start position:0%
and I expect that matrix multiplication
 

01:37:48.040 --> 01:37:51.310 align:start position:0%
and I expect that matrix multiplication
now<01:37:48.679><c> to</c><01:37:48.920><c> be</c><01:37:49.599><c> um</c><01:37:49.840><c> running</c><01:37:50.159><c> on</c><01:37:50.360><c> tensor</c><01:37:50.719><c> course</c>

01:37:51.310 --> 01:37:51.320 align:start position:0%
now to be um running on tensor course
 

01:37:51.320 --> 01:37:55.629 align:start position:0%
now to be um running on tensor course
utilizing<01:37:51.880><c> the</c><01:37:52.040><c> TF</c><01:37:52.679><c> 32%</c>

01:37:55.629 --> 01:37:55.639 align:start position:0%
 
 

01:37:55.639 --> 01:37:58.030 align:start position:0%
 
so<01:37:56.639><c> this</c><01:37:56.760><c> is</c><01:37:56.880><c> the</c><01:37:56.960><c> single</c><01:37:57.239><c> line</c><01:37:57.400><c> of</c><01:37:57.560><c> change</c>

01:37:58.030 --> 01:37:58.040 align:start position:0%
so this is the single line of change
 

01:37:58.040 --> 01:37:59.550 align:start position:0%
so this is the single line of change
that<01:37:58.199><c> is</c><01:37:58.360><c> I</c><01:37:58.480><c> believe</c><01:37:58.800><c> necessary</c><01:37:59.239><c> and</c><01:37:59.360><c> let's</c>

01:37:59.550 --> 01:37:59.560 align:start position:0%
that is I believe necessary and let's
 

01:37:59.560 --> 01:38:02.990 align:start position:0%
that is I believe necessary and let's
rerun<01:38:00.000><c> this</c><01:38:00.679><c> now</c><01:38:00.800><c> we</c><01:38:00.920><c> saw</c><01:38:01.239><c> that</c><01:38:02.040><c> um</c><01:38:02.679><c> in</c><01:38:02.800><c> terms</c>

01:38:02.990 --> 01:38:03.000 align:start position:0%
rerun this now we saw that um in terms
 

01:38:03.000 --> 01:38:05.070 align:start position:0%
rerun this now we saw that um in terms
of<01:38:03.119><c> the</c><01:38:03.239><c> throughput</c><01:38:03.880><c> that</c><01:38:03.960><c> is</c><01:38:04.119><c> promised</c><01:38:04.440><c> to</c><01:38:04.599><c> us</c>

01:38:05.070 --> 01:38:05.080 align:start position:0%
of the throughput that is promised to us
 

01:38:05.080 --> 01:38:08.149 align:start position:0%
of the throughput that is promised to us
we're<01:38:05.440><c> supposed</c><01:38:05.760><c> to</c><01:38:06.080><c> be</c><01:38:06.239><c> getting</c><01:38:06.520><c> 8X</c><01:38:07.320><c> roughly</c>

01:38:08.149 --> 01:38:08.159 align:start position:0%
we're supposed to be getting 8X roughly
 

01:38:08.159 --> 01:38:10.790 align:start position:0%
we're supposed to be getting 8X roughly
so<01:38:08.400><c> let's</c><01:38:08.560><c> see</c><01:38:08.719><c> what</c>

01:38:10.790 --> 01:38:10.800 align:start position:0%
so let's see what
 

01:38:10.800 --> 01:38:15.750 align:start position:0%
so let's see what
happens<01:38:11.800><c> and</c><01:38:11.960><c> that</c><01:38:12.080><c> 8X</c><01:38:12.719><c> came</c><01:38:13.320><c> from</c><01:38:14.320><c> here</c><01:38:14.760><c> right</c>

01:38:15.750 --> 01:38:15.760 align:start position:0%
happens and that 8X came from here right
 

01:38:15.760 --> 01:38:20.189 align:start position:0%
happens and that 8X came from here right
um<01:38:16.480><c> 8X</c><01:38:17.480><c> and</c><01:38:17.639><c> it</c><01:38:17.800><c> also</c><01:38:18.080><c> came</c><01:38:18.639><c> from</c><01:38:19.639><c> looking</c><01:38:20.000><c> at</c>

01:38:20.189 --> 01:38:20.199 align:start position:0%
um 8X and it also came from looking at
 

01:38:20.199 --> 01:38:24.589 align:start position:0%
um 8X and it also came from looking at
it<01:38:20.920><c> um</c><01:38:21.520><c> here</c><01:38:21.760><c> 156</c><01:38:22.480><c> T</c><01:38:22.719><c> flops</c><01:38:23.080><c> instead</c><01:38:23.320><c> of</c><01:38:23.599><c> of</c>

01:38:24.589 --> 01:38:24.599 align:start position:0%
it um here 156 T flops instead of of
 

01:38:24.599 --> 01:38:27.589 align:start position:0%
it um here 156 T flops instead of of
19.5<01:38:25.599><c> okay</c><01:38:25.719><c> so</c><01:38:25.880><c> what</c><01:38:26.080><c> actually</c><01:38:26.480><c> happened</c><01:38:27.480><c> uh</c>

01:38:27.589 --> 01:38:27.599 align:start position:0%
19.5 okay so what actually happened uh
 

01:38:27.599 --> 01:38:29.950 align:start position:0%
19.5 okay so what actually happened uh
so<01:38:27.719><c> we're</c><01:38:27.840><c> seeing</c><01:38:28.199><c> that</c><01:38:28.360><c> our</c><01:38:28.960><c> throughput</c>

01:38:29.950 --> 01:38:29.960 align:start position:0%
so we're seeing that our throughput
 

01:38:29.960 --> 01:38:35.070 align:start position:0%
so we're seeing that our throughput
roughly<01:38:30.280><c> 3x</c><01:38:31.199><c> not</c><01:38:31.599><c> aex</c><01:38:32.599><c> so</c><01:38:33.480><c> we</c><01:38:33.679><c> are</c><01:38:33.960><c> going</c><01:38:34.639><c> we're</c>

01:38:35.070 --> 01:38:35.080 align:start position:0%
roughly 3x not aex so we are going we're
 

01:38:35.080 --> 01:38:37.149 align:start position:0%
roughly 3x not aex so we are going we're
from<01:38:35.320><c> 1,000</c><01:38:35.719><c> milliseconds</c><01:38:36.599><c> we're</c><01:38:36.800><c> going</c><01:38:37.040><c> down</c>

01:38:37.149 --> 01:38:37.159 align:start position:0%
from 1,000 milliseconds we're going down
 

01:38:37.159 --> 01:38:39.189 align:start position:0%
from 1,000 milliseconds we're going down
to<01:38:37.440><c> 300</c><01:38:37.880><c> milliseconds</c><01:38:38.560><c> and</c><01:38:38.679><c> our</c><01:38:38.840><c> throughput</c>

01:38:39.189 --> 01:38:39.199 align:start position:0%
to 300 milliseconds and our throughput
 

01:38:39.199 --> 01:38:41.629 align:start position:0%
to 300 milliseconds and our throughput
is<01:38:39.280><c> now</c><01:38:39.480><c> about</c><01:38:39.639><c> 50,000</c><01:38:40.199><c> tokens</c><01:38:40.560><c> per</c><01:38:40.719><c> second</c><01:38:41.480><c> so</c>

01:38:41.629 --> 01:38:41.639 align:start position:0%
is now about 50,000 tokens per second so
 

01:38:41.639 --> 01:38:43.870 align:start position:0%
is now about 50,000 tokens per second so
we<01:38:41.719><c> have</c><01:38:41.840><c> a</c><01:38:41.960><c> roughly</c><01:38:42.239><c> 3x</c><01:38:42.719><c> instead</c><01:38:42.960><c> of</c><01:38:43.040><c> 8X</c><01:38:43.599><c> so</c>

01:38:43.870 --> 01:38:43.880 align:start position:0%
we have a roughly 3x instead of 8X so
 

01:38:43.880 --> 01:38:45.990 align:start position:0%
we have a roughly 3x instead of 8X so
what<01:38:44.159><c> happened</c><01:38:45.159><c> and</c><01:38:45.440><c> basically</c><01:38:45.840><c> What's</c>

01:38:45.990 --> 01:38:46.000 align:start position:0%
what happened and basically What's
 

01:38:46.000 --> 01:38:48.070 align:start position:0%
what happened and basically What's
Happening<01:38:46.400><c> Here</c><01:38:46.639><c> is</c><01:38:47.280><c> again</c><01:38:47.599><c> a</c><01:38:47.679><c> lot</c><01:38:47.800><c> of</c><01:38:47.920><c> these</c>

01:38:48.070 --> 01:38:48.080 align:start position:0%
Happening Here is again a lot of these
 

01:38:48.080 --> 01:38:51.270 align:start position:0%
Happening Here is again a lot of these
workloads<01:38:48.599><c> are</c><01:38:48.840><c> memory</c><01:38:49.199><c> bound</c><01:38:50.119><c> and</c><01:38:50.280><c> so</c><01:38:51.040><c> even</c>

01:38:51.270 --> 01:38:51.280 align:start position:0%
workloads are memory bound and so even
 

01:38:51.280 --> 01:38:52.430 align:start position:0%
workloads are memory bound and so even
though<01:38:51.520><c> the</c>

01:38:52.430 --> 01:38:52.440 align:start position:0%
though the
 

01:38:52.440 --> 01:38:57.109 align:start position:0%
though the
tf32<01:38:53.480><c> offers</c><01:38:54.080><c> in</c><01:38:54.639><c> principle</c><01:38:55.639><c> a</c><01:38:55.800><c> lot</c><01:38:56.080><c> faster</c>

01:38:57.109 --> 01:38:57.119 align:start position:0%
tf32 offers in principle a lot faster
 

01:38:57.119 --> 01:38:59.070 align:start position:0%
tf32 offers in principle a lot faster
throughput<01:38:58.119><c> all</c><01:38:58.280><c> of</c><01:38:58.400><c> these</c><01:38:58.599><c> numbers</c>

01:38:59.070 --> 01:38:59.080 align:start position:0%
throughput all of these numbers
 

01:38:59.080 --> 01:39:01.910 align:start position:0%
throughput all of these numbers
everywhere<01:38:59.560><c> are</c><01:38:59.719><c> still</c><01:38:59.960><c> float</c><01:39:00.360><c> 32s</c><01:39:01.360><c> and</c><01:39:01.760><c> it's</c>

01:39:01.910 --> 01:39:01.920 align:start position:0%
everywhere are still float 32s and it's
 

01:39:01.920 --> 01:39:03.589 align:start position:0%
everywhere are still float 32s and it's
float<01:39:02.199><c> 32</c><01:39:02.560><c> numbers</c><01:39:02.800><c> that</c><01:39:02.920><c> are</c><01:39:03.040><c> being</c><01:39:03.199><c> shipped</c>

01:39:03.589 --> 01:39:03.599 align:start position:0%
float 32 numbers that are being shipped
 

01:39:03.599 --> 01:39:05.070 align:start position:0%
float 32 numbers that are being shipped
all<01:39:03.719><c> over</c><01:39:03.880><c> the</c><01:39:04.080><c> place</c><01:39:04.360><c> through</c><01:39:04.560><c> the</c><01:39:04.679><c> memory</c>

01:39:05.070 --> 01:39:05.080 align:start position:0%
all over the place through the memory
 

01:39:05.080 --> 01:39:07.390 align:start position:0%
all over the place through the memory
system<01:39:06.040><c> and</c><01:39:06.320><c> is</c><01:39:06.480><c> just</c><01:39:06.639><c> costing</c><01:39:06.920><c> us</c><01:39:07.080><c> way</c><01:39:07.239><c> too</c>

01:39:07.390 --> 01:39:07.400 align:start position:0%
system and is just costing us way too
 

01:39:07.400 --> 01:39:08.910 align:start position:0%
system and is just costing us way too
much<01:39:07.560><c> time</c><01:39:07.719><c> to</c><01:39:07.880><c> shuttle</c><01:39:08.320><c> around</c><01:39:08.560><c> all</c><01:39:08.719><c> this</c>

01:39:08.910 --> 01:39:08.920 align:start position:0%
much time to shuttle around all this
 

01:39:08.920 --> 01:39:10.629 align:start position:0%
much time to shuttle around all this
data<01:39:09.679><c> and</c><01:39:09.760><c> so</c><01:39:09.920><c> even</c><01:39:10.119><c> though</c><01:39:10.239><c> we've</c><01:39:10.400><c> made</c><01:39:10.520><c> the</c>

01:39:10.629 --> 01:39:10.639 align:start position:0%
data and so even though we've made the
 

01:39:10.639 --> 01:39:13.189 align:start position:0%
data and so even though we've made the
multiply<01:39:11.119><c> itself</c><01:39:11.520><c> much</c><01:39:11.760><c> faster</c><01:39:12.760><c> uh</c><01:39:12.920><c> we</c><01:39:13.040><c> are</c>

01:39:13.189 --> 01:39:13.199 align:start position:0%
multiply itself much faster uh we are
 

01:39:13.199 --> 01:39:14.310 align:start position:0%
multiply itself much faster uh we are
memory<01:39:13.480><c> bound</c><01:39:13.760><c> and</c><01:39:13.840><c> we're</c><01:39:14.000><c> not</c><01:39:14.119><c> actually</c>

01:39:14.310 --> 01:39:14.320 align:start position:0%
memory bound and we're not actually
 

01:39:14.320 --> 01:39:16.229 align:start position:0%
memory bound and we're not actually
seeing<01:39:14.599><c> the</c><01:39:14.679><c> full</c><01:39:14.960><c> benefit</c><01:39:15.679><c> uh</c><01:39:15.840><c> that</c><01:39:16.000><c> would</c>

01:39:16.229 --> 01:39:16.239 align:start position:0%
seeing the full benefit uh that would
 

01:39:16.239 --> 01:39:19.830 align:start position:0%
seeing the full benefit uh that would
come<01:39:17.000><c> from</c><01:39:17.719><c> uh</c><01:39:17.840><c> this</c><01:39:18.000><c> napkin</c><01:39:18.400><c> math</c><01:39:18.719><c> here</c><01:39:19.679><c> uh</c>

01:39:19.830 --> 01:39:19.840 align:start position:0%
come from uh this napkin math here uh
 

01:39:19.840 --> 01:39:22.070 align:start position:0%
come from uh this napkin math here uh
that<01:39:19.960><c> said</c><01:39:20.159><c> we</c><01:39:20.239><c> are</c><01:39:20.400><c> getting</c><01:39:20.719><c> one</c><01:39:21.119><c> a</c><01:39:21.280><c> 3X</c><01:39:21.719><c> faster</c>

01:39:22.070 --> 01:39:22.080 align:start position:0%
that said we are getting one a 3X faster
 

01:39:22.080 --> 01:39:26.070 align:start position:0%
that said we are getting one a 3X faster
throughput<01:39:22.920><c> and</c><01:39:23.040><c> this</c><01:39:23.119><c> is</c><01:39:23.520><c> free</c><01:39:24.760><c> um</c><01:39:25.760><c> single</c>

01:39:26.070 --> 01:39:26.080 align:start position:0%
throughput and this is free um single
 

01:39:26.080 --> 01:39:28.109 align:start position:0%
throughput and this is free um single
line<01:39:26.239><c> of</c><01:39:26.400><c> code</c><01:39:26.639><c> in</c><01:39:26.840><c> P</c><01:39:27.040><c> torch</c><01:39:27.719><c> all</c><01:39:27.960><c> your</c>

01:39:28.109 --> 01:39:28.119 align:start position:0%
line of code in P torch all your
 

01:39:28.119 --> 01:39:30.470 align:start position:0%
line of code in P torch all your
variables<01:39:28.520><c> are</c><01:39:28.719><c> still</c><01:39:28.880><c> float</c><01:39:29.239><c> 32</c><01:39:29.719><c> everywhere</c>

01:39:30.470 --> 01:39:30.480 align:start position:0%
variables are still float 32 everywhere
 

01:39:30.480 --> 01:39:32.350 align:start position:0%
variables are still float 32 everywhere
it<01:39:30.599><c> just</c><01:39:30.719><c> runs</c><01:39:31.080><c> faster</c><01:39:31.599><c> and</c><01:39:31.719><c> it's</c><01:39:31.960><c> slightly</c>

01:39:32.350 --> 01:39:32.360 align:start position:0%
it just runs faster and it's slightly
 

01:39:32.360 --> 01:39:34.430 align:start position:0%
it just runs faster and it's slightly
more<01:39:32.560><c> approximate</c><01:39:33.560><c> but</c><01:39:33.679><c> we're</c><01:39:33.840><c> not</c><01:39:34.000><c> going</c><01:39:34.119><c> to</c>

01:39:34.430 --> 01:39:34.440 align:start position:0%
more approximate but we're not going to
 

01:39:34.440 --> 01:39:37.390 align:start position:0%
more approximate but we're not going to
notice<01:39:34.719><c> it</c><01:39:35.119><c> basically</c><01:39:36.119><c> uh</c><01:39:36.360><c> so</c><01:39:36.639><c> that's</c>

01:39:37.390 --> 01:39:37.400 align:start position:0%
notice it basically uh so that's
 

01:39:37.400 --> 01:39:41.189 align:start position:0%
notice it basically uh so that's
tf32<01:39:38.400><c> okay</c><01:39:38.520><c> so</c><01:39:38.679><c> let's</c><01:39:38.840><c> now</c><01:39:39.239><c> continue</c><01:39:40.239><c> so</c><01:39:40.880><c> we've</c>

01:39:41.189 --> 01:39:41.199 align:start position:0%
tf32 okay so let's now continue so we've
 

01:39:41.199 --> 01:39:44.790 align:start position:0%
tf32 okay so let's now continue so we've
exercised<01:39:42.040><c> this</c><01:39:42.199><c> row</c><01:39:43.040><c> and</c><01:39:43.679><c> um</c><01:39:44.239><c> we</c><01:39:44.360><c> saw</c><01:39:44.560><c> that</c><01:39:44.679><c> we</c>

01:39:44.790 --> 01:39:44.800 align:start position:0%
exercised this row and um we saw that we
 

01:39:44.800 --> 01:39:46.390 align:start position:0%
exercised this row and um we saw that we
can<01:39:45.000><c> crop</c><01:39:45.280><c> out</c><01:39:45.440><c> some</c><01:39:45.560><c> of</c><01:39:45.639><c> the</c><01:39:45.800><c> Precision</c>

01:39:46.390 --> 01:39:46.400 align:start position:0%
can crop out some of the Precision
 

01:39:46.400 --> 01:39:49.109 align:start position:0%
can crop out some of the Precision
inside<01:39:46.960><c> the</c><01:39:47.119><c> operation</c><01:39:47.719><c> itself</c><01:39:48.719><c> but</c><01:39:48.840><c> we</c><01:39:48.960><c> saw</c>

01:39:49.109 --> 01:39:49.119 align:start position:0%
inside the operation itself but we saw
 

01:39:49.119 --> 01:39:50.270 align:start position:0%
inside the operation itself but we saw
that<01:39:49.199><c> we're</c><01:39:49.360><c> still</c><01:39:49.520><c> memory</c><01:39:49.800><c> bound</c><01:39:50.080><c> we're</c>

01:39:50.270 --> 01:39:50.280 align:start position:0%
that we're still memory bound we're
 

01:39:50.280 --> 01:39:51.990 align:start position:0%
that we're still memory bound we're
still<01:39:50.440><c> moving</c><01:39:50.760><c> around</c><01:39:51.000><c> all</c><01:39:51.159><c> these</c><01:39:51.320><c> floats</c>

01:39:51.990 --> 01:39:52.000 align:start position:0%
still moving around all these floats
 

01:39:52.000 --> 01:39:53.589 align:start position:0%
still moving around all these floats
right<01:39:52.280><c> otherwise</c><01:39:52.679><c> and</c><01:39:52.760><c> we're</c><01:39:52.960><c> paying</c><01:39:53.199><c> that</c>

01:39:53.589 --> 01:39:53.599 align:start position:0%
right otherwise and we're paying that
 

01:39:53.599 --> 01:39:56.030 align:start position:0%
right otherwise and we're paying that
cost<01:39:53.960><c> because</c><01:39:54.239><c> of</c><01:39:54.560><c> this</c><01:39:55.520><c> so</c><01:39:55.679><c> let's</c><01:39:55.840><c> now</c>

01:39:56.030 --> 01:39:56.040 align:start position:0%
cost because of this so let's now
 

01:39:56.040 --> 01:39:57.750 align:start position:0%
cost because of this so let's now
decrease<01:39:56.400><c> the</c><01:39:56.520><c> amount</c><01:39:56.719><c> of</c><01:39:57.159><c> stuff</c><01:39:57.520><c> that</c><01:39:57.599><c> we're</c>

01:39:57.750 --> 01:39:57.760 align:start position:0%
decrease the amount of stuff that we're
 

01:39:57.760 --> 01:39:59.790 align:start position:0%
decrease the amount of stuff that we're
going<01:39:57.840><c> to</c><01:39:57.960><c> be</c><01:39:58.080><c> moving</c><01:39:58.440><c> around</c><01:39:59.440><c> and</c><01:39:59.639><c> we're</c>

01:39:59.790 --> 01:39:59.800 align:start position:0%
going to be moving around and we're
 

01:39:59.800 --> 01:40:01.950 align:start position:0%
going to be moving around and we're
going<01:39:59.880><c> to</c><01:40:00.000><c> do</c><01:40:00.159><c> that</c><01:40:00.360><c> by</c><01:40:00.639><c> dropping</c><01:40:01.080><c> down</c><01:40:01.520><c> to</c><01:40:01.719><c> B</c>

01:40:01.950 --> 01:40:01.960 align:start position:0%
going to do that by dropping down to B
 

01:40:01.960 --> 01:40:04.669 align:start position:0%
going to do that by dropping down to B
float<01:40:02.760><c> 16</c><01:40:03.760><c> so</c><01:40:04.040><c> we're</c><01:40:04.199><c> only</c><01:40:04.400><c> going</c><01:40:04.480><c> to</c><01:40:04.560><c> be</c>

01:40:04.669 --> 01:40:04.679 align:start position:0%
float 16 so we're only going to be
 

01:40:04.679 --> 01:40:07.390 align:start position:0%
float 16 so we're only going to be
maintaining<01:40:05.040><c> 16</c><01:40:05.440><c> bits</c><01:40:05.760><c> per</c><01:40:06.119><c> float</c><01:40:07.119><c> and</c><01:40:07.280><c> we're</c>

01:40:07.390 --> 01:40:07.400 align:start position:0%
maintaining 16 bits per float and we're
 

01:40:07.400 --> 01:40:08.910 align:start position:0%
maintaining 16 bits per float and we're
going<01:40:07.520><c> to</c><01:40:07.639><c> use</c><01:40:07.800><c> the</c><01:40:07.960><c> B</c><01:40:08.159><c> flat</c><01:40:08.400><c> 16</c><01:40:08.639><c> and</c><01:40:08.719><c> I'll</c>

01:40:08.910 --> 01:40:08.920 align:start position:0%
going to use the B flat 16 and I'll
 

01:40:08.920 --> 01:40:12.030 align:start position:0%
going to use the B flat 16 and I'll
explain<01:40:09.239><c> in</c><01:40:09.400><c> a</c><01:40:09.520><c> bit</c><01:40:10.000><c> uh</c><01:40:10.119><c> fp16</c><01:40:10.800><c> difference</c><01:40:11.599><c> and</c>

01:40:12.030 --> 01:40:12.040 align:start position:0%
explain in a bit uh fp16 difference and
 

01:40:12.040 --> 01:40:14.870 align:start position:0%
explain in a bit uh fp16 difference and
uh<01:40:12.239><c> we're</c><01:40:12.360><c> going</c><01:40:12.480><c> to</c><01:40:12.560><c> be</c><01:40:12.679><c> in</c><01:40:12.800><c> this</c><01:40:13.199><c> row</c><01:40:14.199><c> so</c><01:40:14.760><c> when</c>

01:40:14.870 --> 01:40:14.880 align:start position:0%
uh we're going to be in this row so when
 

01:40:14.880 --> 01:40:16.990 align:start position:0%
uh we're going to be in this row so when
we<01:40:15.040><c> go</c><01:40:15.280><c> back</c><01:40:15.440><c> to</c><01:40:15.960><c> the</c><01:40:16.119><c> documentation</c><01:40:16.719><c> here</c><01:40:16.840><c> for</c>

01:40:16.990 --> 01:40:17.000 align:start position:0%
we go back to the documentation here for
 

01:40:17.000 --> 01:40:18.910 align:start position:0%
we go back to the documentation here for
the<01:40:17.119><c> a</c>

01:40:18.910 --> 01:40:18.920 align:start position:0%
the a
 

01:40:18.920 --> 01:40:23.189 align:start position:0%
the a
100<01:40:20.080><c> um</c><01:40:21.080><c> we</c><01:40:21.199><c> see</c><01:40:21.480><c> here</c><01:40:21.920><c> the</c><01:40:22.679><c> precisions</c><01:40:23.119><c> that</c>

01:40:23.189 --> 01:40:23.199 align:start position:0%
100 um we see here the precisions that
 

01:40:23.199 --> 01:40:24.990 align:start position:0%
100 um we see here the precisions that
are<01:40:23.320><c> are</c><01:40:23.440><c> available</c><01:40:24.440><c> and</c><01:40:24.679><c> this</c><01:40:24.760><c> is</c><01:40:24.880><c> the</c>

01:40:24.990 --> 01:40:25.000 align:start position:0%
are are available and this is the
 

01:40:25.000 --> 01:40:28.229 align:start position:0%
are are available and this is the
original<01:40:25.320><c> fp32</c><01:40:26.119><c> the</c><01:40:26.239><c> tf32</c><01:40:27.000><c> crops</c><01:40:27.440><c> out</c><01:40:27.840><c> the</c>

01:40:28.229 --> 01:40:28.239 align:start position:0%
original fp32 the tf32 crops out the
 

01:40:28.239 --> 01:40:30.470 align:start position:0%
original fp32 the tf32 crops out the
Precision<01:40:29.239><c> and</c><01:40:29.400><c> then</c><01:40:29.599><c> here</c><01:40:29.760><c> in</c>

01:40:30.470 --> 01:40:30.480 align:start position:0%
Precision and then here in
 

01:40:30.480 --> 01:40:33.350 align:start position:0%
Precision and then here in
bf16<01:40:31.480><c> you</c><01:40:31.599><c> see</c><01:40:31.920><c> that</c><01:40:32.280><c> it</c><01:40:32.400><c> is</c><01:40:32.560><c> very</c><01:40:32.719><c> similar</c><01:40:33.000><c> to</c>

01:40:33.350 --> 01:40:33.360 align:start position:0%
bf16 you see that it is very similar to
 

01:40:33.360 --> 01:40:36.270 align:start position:0%
bf16 you see that it is very similar to
tf32<01:40:34.360><c> but</c><01:40:34.520><c> it's</c><01:40:34.719><c> even</c><01:40:34.960><c> more</c><01:40:35.280><c> aggressive</c><01:40:36.040><c> in</c>

01:40:36.270 --> 01:40:36.280 align:start position:0%
tf32 but it's even more aggressive in
 

01:40:36.280 --> 01:40:38.390 align:start position:0%
tf32 but it's even more aggressive in
cropping<01:40:36.719><c> off</c><01:40:37.280><c> of</c><01:40:37.440><c> the</c><01:40:37.639><c> Precision</c><01:40:38.239><c> the</c>

01:40:38.390 --> 01:40:38.400 align:start position:0%
cropping off of the Precision the
 

01:40:38.400 --> 01:40:40.910 align:start position:0%
cropping off of the Precision the
mantisa<01:40:39.000><c> of</c><01:40:39.159><c> this</c><01:40:39.360><c> float</c><01:40:40.360><c> so</c><01:40:40.520><c> the</c><01:40:40.639><c> important</c>

01:40:40.910 --> 01:40:40.920 align:start position:0%
mantisa of this float so the important
 

01:40:40.920 --> 01:40:42.550 align:start position:0%
mantisa of this float so the important
thing<01:40:41.040><c> with</c><01:40:41.159><c> B</c><01:40:41.360><c> float</c><01:40:41.639><c> 16</c><01:40:42.040><c> is</c><01:40:42.239><c> that</c><01:40:42.400><c> the</c>

01:40:42.550 --> 01:40:42.560 align:start position:0%
thing with B float 16 is that the
 

01:40:42.560 --> 01:40:45.070 align:start position:0%
thing with B float 16 is that the
exponent<01:40:43.040><c> bits</c><01:40:43.599><c> and</c><01:40:43.760><c> the</c><01:40:43.880><c> sign</c><01:40:44.119><c> bit</c><01:40:44.320><c> of</c><01:40:44.440><c> course</c>

01:40:45.070 --> 01:40:45.080 align:start position:0%
exponent bits and the sign bit of course
 

01:40:45.080 --> 01:40:47.510 align:start position:0%
exponent bits and the sign bit of course
remain<01:40:45.599><c> unchanged</c><01:40:46.599><c> so</c><01:40:46.880><c> if</c><01:40:47.000><c> you're</c><01:40:47.159><c> familiar</c>

01:40:47.510 --> 01:40:47.520 align:start position:0%
remain unchanged so if you're familiar
 

01:40:47.520 --> 01:40:49.830 align:start position:0%
remain unchanged so if you're familiar
with<01:40:47.599><c> your</c><01:40:47.760><c> float</c><01:40:48.080><c> numbers</c><01:40:49.000><c> and</c><01:40:49.159><c> I</c><01:40:49.239><c> think</c><01:40:49.440><c> this</c>

01:40:49.830 --> 01:40:49.840 align:start position:0%
with your float numbers and I think this
 

01:40:49.840 --> 01:40:52.189 align:start position:0%
with your float numbers and I think this
should<01:40:50.440><c> should</c><01:40:50.760><c> probably</c><01:40:51.040><c> be</c><01:40:51.159><c> an</c><01:40:51.320><c> entire</c>

01:40:52.189 --> 01:40:52.199 align:start position:0%
should should probably be an entire
 

01:40:52.199 --> 01:40:53.910 align:start position:0%
should should probably be an entire
video<01:40:52.760><c> by</c><01:40:52.920><c> itself</c>

01:40:53.910 --> 01:40:53.920 align:start position:0%
video by itself
 

01:40:53.920 --> 01:40:56.430 align:start position:0%
video by itself
the<01:40:54.080><c> exponent</c><01:40:54.719><c> sets</c><01:40:55.080><c> the</c><01:40:55.320><c> range</c><01:40:56.040><c> that</c><01:40:56.159><c> you</c><01:40:56.239><c> can</c>

01:40:56.430 --> 01:40:56.440 align:start position:0%
the exponent sets the range that you can
 

01:40:56.440 --> 01:40:58.149 align:start position:0%
the exponent sets the range that you can
represent<01:40:56.840><c> of</c><01:40:56.960><c> your</c><01:40:57.119><c> numbers</c><01:40:57.880><c> and</c><01:40:58.000><c> the</c>

01:40:58.149 --> 01:40:58.159 align:start position:0%
represent of your numbers and the
 

01:40:58.159 --> 01:41:00.870 align:start position:0%
represent of your numbers and the
Precision<01:40:58.760><c> is</c><01:40:59.199><c> how</c><01:40:59.360><c> much</c><01:40:59.599><c> Precision</c><01:41:00.040><c> you</c><01:41:00.239><c> have</c>

01:41:00.870 --> 01:41:00.880 align:start position:0%
Precision is how much Precision you have
 

01:41:00.880 --> 01:41:04.270 align:start position:0%
Precision is how much Precision you have
for<01:41:01.040><c> your</c><01:41:01.440><c> numbers</c><01:41:02.440><c> and</c><01:41:02.599><c> so</c><01:41:03.560><c> the</c><01:41:03.760><c> range</c><01:41:04.080><c> of</c>

01:41:04.270 --> 01:41:04.280 align:start position:0%
for your numbers and so the range of
 

01:41:04.280 --> 01:41:07.430 align:start position:0%
for your numbers and so the range of
numbers<01:41:04.960><c> is</c><01:41:05.400><c> identical</c><01:41:06.280><c> but</c><01:41:06.440><c> we</c><01:41:06.599><c> can</c><01:41:06.840><c> we</c><01:41:07.000><c> have</c>

01:41:07.430 --> 01:41:07.440 align:start position:0%
numbers is identical but we can we have
 

01:41:07.440 --> 01:41:10.910 align:start position:0%
numbers is identical but we can we have
fewer<01:41:08.440><c> possibilities</c><01:41:09.320><c> within</c><01:41:09.719><c> that</c><01:41:09.920><c> range</c>

01:41:10.910 --> 01:41:10.920 align:start position:0%
fewer possibilities within that range
 

01:41:10.920 --> 01:41:12.910 align:start position:0%
fewer possibilities within that range
because<01:41:11.239><c> we</c><01:41:11.360><c> are</c><01:41:11.560><c> truncating</c><01:41:12.080><c> the</c><01:41:12.199><c> Mena</c><01:41:12.719><c> so</c><01:41:12.840><c> we</c>

01:41:12.910 --> 01:41:12.920 align:start position:0%
because we are truncating the Mena so we
 

01:41:12.920 --> 01:41:14.669 align:start position:0%
because we are truncating the Mena so we
have<01:41:13.080><c> less</c><01:41:13.280><c> Precision</c><01:41:13.760><c> in</c><01:41:13.960><c> that</c>

01:41:14.669 --> 01:41:14.679 align:start position:0%
have less Precision in that
 

01:41:14.679 --> 01:41:17.750 align:start position:0%
have less Precision in that
range<01:41:15.679><c> what</c><01:41:15.840><c> that</c><01:41:15.960><c> means</c><01:41:16.320><c> is</c><01:41:16.560><c> that</c><01:41:17.440><c> things</c><01:41:17.560><c> are</c>

01:41:17.750 --> 01:41:17.760 align:start position:0%
range what that means is that things are
 

01:41:17.760 --> 01:41:19.709 align:start position:0%
range what that means is that things are
actually<01:41:18.040><c> fairly</c><01:41:18.400><c> nice</c><01:41:18.960><c> because</c><01:41:19.159><c> we</c><01:41:19.280><c> have</c><01:41:19.440><c> the</c>

01:41:19.709 --> 01:41:19.719 align:start position:0%
actually fairly nice because we have the
 

01:41:19.719 --> 01:41:21.350 align:start position:0%
actually fairly nice because we have the
original<01:41:20.360><c> range</c><01:41:20.679><c> of</c><01:41:20.840><c> numbers</c><01:41:21.119><c> that</c><01:41:21.239><c> are</c>

01:41:21.350 --> 01:41:21.360 align:start position:0%
original range of numbers that are
 

01:41:21.360 --> 01:41:24.109 align:start position:0%
original range of numbers that are
representable<01:41:22.080><c> in</c><01:41:22.199><c> float</c><01:41:23.040><c> but</c><01:41:23.560><c> we</c><01:41:23.760><c> just</c><01:41:23.920><c> have</c>

01:41:24.109 --> 01:41:24.119 align:start position:0%
representable in float but we just have
 

01:41:24.119 --> 01:41:27.030 align:start position:0%
representable in float but we just have
less<01:41:24.360><c> Precision</c><01:41:24.800><c> for</c><01:41:25.119><c> it</c><01:41:26.119><c> and</c><01:41:26.560><c> the</c><01:41:26.719><c> difference</c>

01:41:27.030 --> 01:41:27.040 align:start position:0%
less Precision for it and the difference
 

01:41:27.040 --> 01:41:29.149 align:start position:0%
less Precision for it and the difference
with<01:41:27.199><c> fp16</c><01:41:27.960><c> is</c><01:41:28.119><c> that</c><01:41:28.280><c> they</c><01:41:28.440><c> actually</c><01:41:28.760><c> touch</c>

01:41:29.149 --> 01:41:29.159 align:start position:0%
with fp16 is that they actually touch
 

01:41:29.159 --> 01:41:32.750 align:start position:0%
with fp16 is that they actually touch
and<01:41:29.320><c> change</c><01:41:29.800><c> the</c><01:41:30.000><c> range</c><01:41:30.840><c> so</c><01:41:31.520><c> fp16</c><01:41:32.440><c> cannot</c>

01:41:32.750 --> 01:41:32.760 align:start position:0%
and change the range so fp16 cannot
 

01:41:32.760 --> 01:41:35.350 align:start position:0%
and change the range so fp16 cannot
represent<01:41:33.280><c> the</c><01:41:33.440><c> full</c><01:41:33.679><c> range</c><01:41:33.880><c> of</c><01:41:34.080><c> fp32</c><01:41:35.080><c> it</c><01:41:35.239><c> has</c>

01:41:35.350 --> 01:41:35.360 align:start position:0%
represent the full range of fp32 it has
 

01:41:35.360 --> 01:41:37.510 align:start position:0%
represent the full range of fp32 it has
a<01:41:35.560><c> reduced</c><01:41:36.040><c> range</c><01:41:36.920><c> and</c><01:41:37.040><c> that's</c><01:41:37.199><c> where</c><01:41:37.360><c> you</c>

01:41:37.510 --> 01:41:37.520 align:start position:0%
a reduced range and that's where you
 

01:41:37.520 --> 01:41:39.550 align:start position:0%
a reduced range and that's where you
start<01:41:37.800><c> to</c><01:41:38.400><c> actually</c><01:41:38.679><c> run</c><01:41:38.880><c> into</c><01:41:39.119><c> issues</c>

01:41:39.550 --> 01:41:39.560 align:start position:0%
start to actually run into issues
 

01:41:39.560 --> 01:41:41.669 align:start position:0%
start to actually run into issues
because<01:41:39.800><c> now</c><01:41:39.920><c> you</c><01:41:40.040><c> need</c><01:41:40.880><c> uh</c><01:41:41.040><c> these</c><01:41:41.280><c> gradient</c>

01:41:41.669 --> 01:41:41.679 align:start position:0%
because now you need uh these gradient
 

01:41:41.679 --> 01:41:43.550 align:start position:0%
because now you need uh these gradient
scalers<01:41:42.199><c> and</c><01:41:42.360><c> things</c><01:41:42.639><c> like</c><01:41:42.840><c> that</c><01:41:43.239><c> and</c><01:41:43.360><c> I'm</c><01:41:43.440><c> not</c>

01:41:43.550 --> 01:41:43.560 align:start position:0%
scalers and things like that and I'm not
 

01:41:43.560 --> 01:41:45.750 align:start position:0%
scalers and things like that and I'm not
going<01:41:43.639><c> to</c><01:41:43.760><c> go</c><01:41:43.880><c> into</c><01:41:44.080><c> the</c><01:41:44.239><c> detail</c><01:41:44.719><c> of</c><01:41:45.000><c> that</c><01:41:45.560><c> in</c>

01:41:45.750 --> 01:41:45.760 align:start position:0%
going to go into the detail of that in
 

01:41:45.760 --> 01:41:48.189 align:start position:0%
going to go into the detail of that in
this<01:41:46.280><c> video</c><01:41:47.280><c> because</c><01:41:47.480><c> that's</c><01:41:47.599><c> a</c><01:41:47.719><c> whole</c><01:41:47.880><c> video</c>

01:41:48.189 --> 01:41:48.199 align:start position:0%
this video because that's a whole video
 

01:41:48.199 --> 01:41:50.870 align:start position:0%
this video because that's a whole video
by<01:41:48.360><c> itself</c><01:41:49.199><c> but</c><01:41:49.360><c> fb16</c><01:41:50.119><c> actually</c><01:41:50.400><c> historically</c>

01:41:50.870 --> 01:41:50.880 align:start position:0%
by itself but fb16 actually historically
 

01:41:50.880 --> 01:41:52.790 align:start position:0%
by itself but fb16 actually historically
came<01:41:51.080><c> first</c><01:41:51.679><c> that</c><01:41:51.800><c> was</c><01:41:52.000><c> available</c><01:41:52.400><c> in</c><01:41:52.599><c> the</c>

01:41:52.790 --> 01:41:52.800 align:start position:0%
came first that was available in the
 

01:41:52.800 --> 01:41:56.430 align:start position:0%
came first that was available in the
Volta<01:41:53.560><c> series</c><01:41:54.159><c> before</c><01:41:54.480><c> Amper</c><01:41:55.480><c> and</c><01:41:55.599><c> so</c><01:41:55.800><c> fp16</c>

01:41:56.430 --> 01:41:56.440 align:start position:0%
Volta series before Amper and so fp16
 

01:41:56.440 --> 01:41:57.990 align:start position:0%
Volta series before Amper and so fp16
came<01:41:56.639><c> first</c><01:41:56.920><c> and</c><01:41:57.119><c> everyone</c><01:41:57.400><c> started</c><01:41:57.679><c> to</c><01:41:57.760><c> train</c>

01:41:57.990 --> 01:41:58.000 align:start position:0%
came first and everyone started to train
 

01:41:58.000 --> 01:42:00.149 align:start position:0%
came first and everyone started to train
in<01:41:58.119><c> fp16</c><01:41:59.080><c> but</c><01:41:59.280><c> everyone</c><01:41:59.599><c> had</c><01:41:59.719><c> to</c><01:41:59.840><c> use</c><01:42:00.000><c> all</c>

01:42:00.149 --> 01:42:00.159 align:start position:0%
in fp16 but everyone had to use all
 

01:42:00.159 --> 01:42:02.149 align:start position:0%
in fp16 but everyone had to use all
these<01:42:00.320><c> gradient</c><01:42:00.639><c> scaling</c><01:42:01.360><c> operations</c><01:42:02.000><c> which</c>

01:42:02.149 --> 01:42:02.159 align:start position:0%
these gradient scaling operations which
 

01:42:02.159 --> 01:42:03.750 align:start position:0%
these gradient scaling operations which
are<01:42:02.760><c> kind</c><01:42:02.880><c> of</c><01:42:03.040><c> annoying</c><01:42:03.400><c> and</c><01:42:03.480><c> it's</c><01:42:03.599><c> an</c>

01:42:03.750 --> 01:42:03.760 align:start position:0%
are kind of annoying and it's an
 

01:42:03.760 --> 01:42:05.149 align:start position:0%
are kind of annoying and it's an
additional<01:42:04.080><c> source</c><01:42:04.320><c> of</c><01:42:04.480><c> state</c><01:42:04.760><c> and</c>

01:42:05.149 --> 01:42:05.159 align:start position:0%
additional source of state and
 

01:42:05.159 --> 01:42:07.430 align:start position:0%
additional source of state and
complexity<01:42:06.159><c> and</c><01:42:06.480><c> the</c><01:42:06.599><c> reason</c><01:42:06.880><c> for</c><01:42:07.080><c> that</c><01:42:07.239><c> was</c>

01:42:07.430 --> 01:42:07.440 align:start position:0%
complexity and the reason for that was
 

01:42:07.440 --> 01:42:09.390 align:start position:0%
complexity and the reason for that was
because<01:42:07.719><c> the</c><01:42:08.159><c> exponent</c><01:42:08.560><c> range</c><01:42:08.840><c> was</c><01:42:09.000><c> reduced</c>

01:42:09.390 --> 01:42:09.400 align:start position:0%
because the exponent range was reduced
 

01:42:09.400 --> 01:42:13.830 align:start position:0%
because the exponent range was reduced
in<01:42:09.920><c> fp16</c><01:42:10.920><c> so</c><01:42:11.080><c> that's</c><01:42:11.239><c> the</c><01:42:11.400><c> i</c><01:42:11.800><c> e</c><01:42:11.960><c> fp16</c><01:42:12.960><c> spec</c><01:42:13.719><c> and</c>

01:42:13.830 --> 01:42:13.840 align:start position:0%
in fp16 so that's the i e fp16 spec and
 

01:42:13.840 --> 01:42:15.950 align:start position:0%
in fp16 so that's the i e fp16 spec and
then<01:42:14.000><c> they</c><01:42:14.159><c> came</c><01:42:14.320><c> out</c><01:42:14.520><c> with</c><01:42:14.679><c> bf16</c><01:42:15.360><c> and</c><01:42:15.560><c> the</c>

01:42:15.950 --> 01:42:15.960 align:start position:0%
then they came out with bf16 and the
 

01:42:15.960 --> 01:42:18.350 align:start position:0%
then they came out with bf16 and the
Ampere<01:42:16.960><c> and</c><01:42:17.400><c> they</c><01:42:17.480><c> made</c><01:42:17.639><c> it</c><01:42:17.840><c> much</c><01:42:18.000><c> simpler</c>

01:42:18.350 --> 01:42:18.360 align:start position:0%
Ampere and they made it much simpler
 

01:42:18.360 --> 01:42:20.149 align:start position:0%
Ampere and they made it much simpler
because<01:42:18.560><c> we're</c><01:42:18.719><c> just</c><01:42:18.840><c> truncating</c><01:42:19.320><c> manessa</c><01:42:20.040><c> we</c>

01:42:20.149 --> 01:42:20.159 align:start position:0%
because we're just truncating manessa we
 

01:42:20.159 --> 01:42:21.950 align:start position:0%
because we're just truncating manessa we
have<01:42:20.280><c> the</c><01:42:20.400><c> exact</c><01:42:20.679><c> same</c><01:42:20.880><c> range</c><01:42:21.360><c> and</c><01:42:21.480><c> we</c><01:42:21.639><c> do</c><01:42:21.800><c> not</c>

01:42:21.950 --> 01:42:21.960 align:start position:0%
have the exact same range and we do not
 

01:42:21.960 --> 01:42:24.109 align:start position:0%
have the exact same range and we do not
need<01:42:22.199><c> gradient</c><01:42:22.599><c> scalers</c><01:42:23.280><c> so</c><01:42:23.599><c> everything</c><01:42:23.960><c> is</c>

01:42:24.109 --> 01:42:24.119 align:start position:0%
need gradient scalers so everything is
 

01:42:24.119 --> 01:42:26.550 align:start position:0%
need gradient scalers so everything is
much<01:42:24.320><c> much</c><01:42:24.639><c> simpler</c><01:42:25.639><c> now</c><01:42:25.920><c> when</c><01:42:26.040><c> we</c><01:42:26.199><c> do</c><01:42:26.360><c> use</c>

01:42:26.550 --> 01:42:26.560 align:start position:0%
much much simpler now when we do use
 

01:42:26.560 --> 01:42:30.189 align:start position:0%
much much simpler now when we do use
bf16<01:42:27.320><c> though</c><01:42:27.760><c> we</c><01:42:27.920><c> are</c><01:42:28.280><c> impacting</c><01:42:29.040><c> the</c><01:42:29.199><c> numbers</c>

01:42:30.189 --> 01:42:30.199 align:start position:0%
bf16 though we are impacting the numbers
 

01:42:30.199 --> 01:42:32.109 align:start position:0%
bf16 though we are impacting the numbers
that<01:42:30.360><c> we</c><01:42:30.520><c> might</c><01:42:30.679><c> be</c><01:42:30.800><c> seeing</c><01:42:31.239><c> in</c><01:42:31.360><c> our</c><01:42:31.520><c> pytorch</c>

01:42:32.109 --> 01:42:32.119 align:start position:0%
that we might be seeing in our pytorch
 

01:42:32.119 --> 01:42:35.149 align:start position:0%
that we might be seeing in our pytorch
code<01:42:33.119><c> these</c><01:42:33.440><c> this</c><01:42:33.599><c> change</c><01:42:33.840><c> is</c><01:42:34.000><c> not</c><01:42:34.199><c> just</c><01:42:34.440><c> local</c>

01:42:35.149 --> 01:42:35.159 align:start position:0%
code these this change is not just local
 

01:42:35.159 --> 01:42:37.790 align:start position:0%
code these this change is not just local
to<01:42:35.440><c> the</c><01:42:35.679><c> operation</c><01:42:36.119><c> itself</c><01:42:36.920><c> so</c><01:42:37.080><c> let's</c><01:42:37.280><c> see</c><01:42:37.599><c> how</c>

01:42:37.790 --> 01:42:37.800 align:start position:0%
to the operation itself so let's see how
 

01:42:37.800 --> 01:42:39.910 align:start position:0%
to the operation itself so let's see how
that<01:42:38.119><c> works</c>

01:42:39.910 --> 01:42:39.920 align:start position:0%
that works
 

01:42:39.920 --> 01:42:43.109 align:start position:0%
that works
um<01:42:40.920><c> there's</c><01:42:41.119><c> some</c><01:42:41.320><c> documentation</c><01:42:42.000><c> here</c><01:42:42.480><c> that</c>

01:42:43.109 --> 01:42:43.119 align:start position:0%
um there's some documentation here that
 

01:42:43.119 --> 01:42:44.589 align:start position:0%
um there's some documentation here that
so<01:42:43.280><c> I</c><01:42:43.360><c> think</c><01:42:43.520><c> this</c><01:42:43.599><c> is</c><01:42:43.760><c> probably</c><01:42:44.040><c> the</c><01:42:44.199><c> best</c>

01:42:44.589 --> 01:42:44.599 align:start position:0%
so I think this is probably the best
 

01:42:44.599 --> 01:42:46.070 align:start position:0%
so I think this is probably the best
best<01:42:44.800><c> page</c><01:42:45.040><c> to</c><01:42:45.199><c> explain</c><01:42:45.480><c> how</c><01:42:45.560><c> to</c><01:42:45.679><c> use</c><01:42:45.840><c> mixed</c>

01:42:46.070 --> 01:42:46.080 align:start position:0%
best page to explain how to use mixed
 

01:42:46.080 --> 01:42:49.070 align:start position:0%
best page to explain how to use mixed
Precision<01:42:46.440><c> in</c><01:42:46.960><c> pytorch</c><01:42:47.960><c> um</c><01:42:48.760><c> because</c><01:42:49.000><c> there</c>

01:42:49.070 --> 01:42:49.080 align:start position:0%
Precision in pytorch um because there
 

01:42:49.080 --> 01:42:51.510 align:start position:0%
Precision in pytorch um because there
are<01:42:49.239><c> many</c><01:42:49.480><c> other</c><01:42:49.760><c> tutorials</c><01:42:50.440><c> and</c><01:42:50.599><c> so</c><01:42:50.760><c> on</c><01:42:51.280><c> even</c>

01:42:51.510 --> 01:42:51.520 align:start position:0%
are many other tutorials and so on even
 

01:42:51.520 --> 01:42:53.470 align:start position:0%
are many other tutorials and so on even
within<01:42:51.840><c> pitor</c><01:42:52.239><c> documentation</c><01:42:53.199><c> that</c><01:42:53.239><c> are</c><01:42:53.400><c> a</c>

01:42:53.470 --> 01:42:53.480 align:start position:0%
within pitor documentation that are a
 

01:42:53.480 --> 01:42:55.550 align:start position:0%
within pitor documentation that are a
lot<01:42:53.639><c> more</c><01:42:53.840><c> confusing</c><01:42:54.679><c> and</c><01:42:54.800><c> so</c><01:42:55.000><c> I</c><01:42:55.119><c> recommend</c>

01:42:55.550 --> 01:42:55.560 align:start position:0%
lot more confusing and so I recommend
 

01:42:55.560 --> 01:42:57.790 align:start position:0%
lot more confusing and so I recommend
specifically<01:42:56.119><c> this</c><01:42:56.280><c> one</c><01:42:57.280><c> because</c><01:42:57.520><c> there's</c>

01:42:57.790 --> 01:42:57.800 align:start position:0%
specifically this one because there's
 

01:42:57.800 --> 01:42:59.709 align:start position:0%
specifically this one because there's
five<01:42:58.000><c> other</c><01:42:58.239><c> copies</c><01:42:58.719><c> that</c><01:42:58.880><c> I</c><01:42:58.960><c> would</c><01:42:59.159><c> not</c>

01:42:59.709 --> 01:42:59.719 align:start position:0%
five other copies that I would not
 

01:42:59.719 --> 01:43:02.149 align:start position:0%
five other copies that I would not
recommend<01:43:00.719><c> and</c><01:43:00.840><c> then</c><01:43:00.960><c> when</c><01:43:01.159><c> we</c><01:43:01.320><c> come</c>

01:43:02.149 --> 01:43:02.159 align:start position:0%
recommend and then when we come
 

01:43:02.159 --> 01:43:04.990 align:start position:0%
recommend and then when we come
here<01:43:03.159><c> ignore</c><01:43:03.639><c> everything</c><01:43:04.239><c> about</c><01:43:04.560><c> everything</c>

01:43:04.990 --> 01:43:05.000 align:start position:0%
here ignore everything about everything
 

01:43:05.000 --> 01:43:07.030 align:start position:0%
here ignore everything about everything
ignore<01:43:05.360><c> everything</c><01:43:05.599><c> about</c><01:43:05.800><c> gradient</c>

01:43:07.030 --> 01:43:07.040 align:start position:0%
ignore everything about gradient
 

01:43:07.040 --> 01:43:10.950 align:start position:0%
ignore everything about gradient
scalers<01:43:08.040><c> and</c><01:43:08.320><c> only</c><01:43:08.920><c> look</c><01:43:09.280><c> at</c><01:43:09.800><c> torch.</c>

01:43:10.950 --> 01:43:10.960 align:start position:0%
scalers and only look at torch.
 

01:43:10.960 --> 01:43:13.510 align:start position:0%
scalers and only look at torch.
AutoCast<01:43:11.960><c> and</c><01:43:12.159><c> basically</c><01:43:12.880><c> also</c><01:43:13.199><c> this</c><01:43:13.360><c> comes</c>

01:43:13.510 --> 01:43:13.520 align:start position:0%
AutoCast and basically also this comes
 

01:43:13.520 --> 01:43:15.910 align:start position:0%
AutoCast and basically also this comes
to<01:43:13.679><c> a</c><01:43:13.800><c> single</c><01:43:14.080><c> line</c><01:43:14.239><c> of</c><01:43:14.400><c> code</c><01:43:14.599><c> at</c><01:43:14.719><c> the</c><01:43:14.840><c> end</c><01:43:15.440><c> so</c>

01:43:15.910 --> 01:43:15.920 align:start position:0%
to a single line of code at the end so
 

01:43:15.920 --> 01:43:18.510 align:start position:0%
to a single line of code at the end so
this<01:43:16.159><c> is</c><01:43:16.320><c> the</c><01:43:16.480><c> context</c><01:43:16.840><c> manager</c><01:43:17.360><c> that</c><01:43:17.520><c> we</c>

01:43:18.510 --> 01:43:18.520 align:start position:0%
this is the context manager that we
 

01:43:18.520 --> 01:43:21.669 align:start position:0%
this is the context manager that we
want<01:43:19.520><c> and</c><01:43:19.719><c> we</c><01:43:19.880><c> want</c><01:43:20.159><c> to</c><01:43:21.000><c> use</c><01:43:21.239><c> that</c><01:43:21.400><c> in</c><01:43:21.480><c> our</c>

01:43:21.669 --> 01:43:21.679 align:start position:0%
want and we want to use that in our
 

01:43:21.679 --> 01:43:25.350 align:start position:0%
want and we want to use that in our
Network<01:43:22.440><c> when</c><01:43:22.599><c> you</c><01:43:22.760><c> click</c><01:43:23.159><c> into</c><01:43:23.679><c> the</c><01:43:23.840><c> torch.</c>

01:43:25.350 --> 01:43:25.360 align:start position:0%
Network when you click into the torch.
 

01:43:25.360 --> 01:43:28.830 align:start position:0%
Network when you click into the torch.
AutoCast<01:43:26.360><c> autocasting</c><01:43:27.360><c> it</c><01:43:27.480><c> has</c><01:43:27.639><c> a</c><01:43:27.760><c> few</c><01:43:27.960><c> more</c>

01:43:28.830 --> 01:43:28.840 align:start position:0%
AutoCast autocasting it has a few more
 

01:43:28.840 --> 01:43:30.750 align:start position:0%
AutoCast autocasting it has a few more
uh<01:43:29.000><c> a</c><01:43:29.159><c> bit</c><01:43:29.320><c> more</c><01:43:29.560><c> guideline</c><01:43:29.920><c> for</c><01:43:30.080><c> you</c><01:43:30.440><c> so</c><01:43:30.599><c> it's</c>

01:43:30.750 --> 01:43:30.760 align:start position:0%
uh a bit more guideline for you so it's
 

01:43:30.760 --> 01:43:34.189 align:start position:0%
uh a bit more guideline for you so it's
telling<01:43:31.080><c> you</c><01:43:31.360><c> do</c><01:43:31.520><c> not</c><01:43:32.360><c> call</c><01:43:32.840><c> B</c><01:43:33.119><c> flat</c><01:43:33.400><c> 16</c><01:43:33.840><c> on</c><01:43:34.040><c> any</c>

01:43:34.189 --> 01:43:34.199 align:start position:0%
telling you do not call B flat 16 on any
 

01:43:34.199 --> 01:43:36.910 align:start position:0%
telling you do not call B flat 16 on any
of<01:43:34.320><c> your</c><01:43:34.440><c> tensors</c><01:43:35.280><c> just</c><01:43:35.440><c> use</c><01:43:35.679><c> AutoCast</c><01:43:36.679><c> and</c>

01:43:36.910 --> 01:43:36.920 align:start position:0%
of your tensors just use AutoCast and
 

01:43:36.920 --> 01:43:39.589 align:start position:0%
of your tensors just use AutoCast and
only<01:43:37.320><c> surround</c><01:43:38.320><c> the</c><01:43:38.719><c> uh</c><01:43:38.840><c> forward</c><01:43:39.239><c> pass</c><01:43:39.400><c> of</c><01:43:39.520><c> the</c>

01:43:39.589 --> 01:43:39.599 align:start position:0%
only surround the uh forward pass of the
 

01:43:39.599 --> 01:43:41.870 align:start position:0%
only surround the uh forward pass of the
model<01:43:40.159><c> and</c><01:43:40.320><c> the</c><01:43:40.400><c> loss</c><01:43:40.760><c> calculation</c><01:43:41.719><c> and</c>

01:43:41.870 --> 01:43:41.880 align:start position:0%
model and the loss calculation and
 

01:43:41.880 --> 01:43:43.149 align:start position:0%
model and the loss calculation and
that's<01:43:42.080><c> the</c><01:43:42.239><c> only</c><01:43:42.520><c> two</c><01:43:42.760><c> things</c><01:43:42.960><c> that</c><01:43:43.080><c> you</c>

01:43:43.149 --> 01:43:43.159 align:start position:0%
that's the only two things that you
 

01:43:43.159 --> 01:43:45.109 align:start position:0%
that's the only two things that you
should<01:43:43.320><c> be</c><01:43:43.440><c> surrounding</c><01:43:44.280><c> leave</c><01:43:44.560><c> the</c><01:43:44.719><c> backward</c>

01:43:45.109 --> 01:43:45.119 align:start position:0%
should be surrounding leave the backward
 

01:43:45.119 --> 01:43:47.510 align:start position:0%
should be surrounding leave the backward
and<01:43:45.239><c> the</c><01:43:45.360><c> optimizer</c><01:43:45.840><c> step</c><01:43:46.199><c> alone</c><01:43:47.199><c> so</c><01:43:47.360><c> that's</c>

01:43:47.510 --> 01:43:47.520 align:start position:0%
and the optimizer step alone so that's
 

01:43:47.520 --> 01:43:49.950 align:start position:0%
and the optimizer step alone so that's
the<01:43:47.639><c> guidance</c><01:43:48.080><c> that</c><01:43:48.480><c> comes</c><01:43:48.679><c> from</c><01:43:48.800><c> the</c><01:43:48.920><c> P</c><01:43:49.280><c> team</c>

01:43:49.950 --> 01:43:49.960 align:start position:0%
the guidance that comes from the P team
 

01:43:49.960 --> 01:43:51.470 align:start position:0%
the guidance that comes from the P team
so<01:43:50.080><c> we're</c><01:43:50.239><c> going</c><01:43:50.320><c> to</c><01:43:50.480><c> follow</c><01:43:50.800><c> that</c><01:43:50.960><c> guidance</c>

01:43:51.470 --> 01:43:51.480 align:start position:0%
so we're going to follow that guidance
 

01:43:51.480 --> 01:43:53.910 align:start position:0%
so we're going to follow that guidance
and<01:43:51.639><c> for</c><01:43:51.840><c> us</c><01:43:52.599><c> because</c><01:43:52.840><c> the</c><01:43:53.119><c> L</c><01:43:53.280><c> calculation</c><01:43:53.679><c> is</c>

01:43:53.910 --> 01:43:53.920 align:start position:0%
and for us because the L calculation is
 

01:43:53.920 --> 01:43:56.390 align:start position:0%
and for us because the L calculation is
inside<01:43:54.320><c> of</c><01:43:54.440><c> the</c><01:43:54.560><c> model</c><01:43:54.840><c> forward</c><01:43:55.239><c> pass</c><01:43:55.480><c> for</c><01:43:55.679><c> us</c>

01:43:56.390 --> 01:43:56.400 align:start position:0%
inside of the model forward pass for us
 

01:43:56.400 --> 01:43:58.510 align:start position:0%
inside of the model forward pass for us
we<01:43:56.520><c> are</c><01:43:56.639><c> going</c><01:43:56.760><c> to</c><01:43:56.920><c> be</c><01:43:57.040><c> doing</c>

01:43:58.510 --> 01:43:58.520 align:start position:0%
we are going to be doing
 

01:43:58.520 --> 01:44:00.510 align:start position:0%
we are going to be doing
this<01:43:59.520><c> and</c><01:43:59.679><c> then</c><01:43:59.800><c> we</c><01:43:59.920><c> don't</c><01:44:00.040><c> want</c><01:44:00.119><c> to</c><01:44:00.199><c> be</c><01:44:00.320><c> using</c>

01:44:00.510 --> 01:44:00.520 align:start position:0%
this and then we don't want to be using
 

01:44:00.520 --> 01:44:02.550 align:start position:0%
this and then we don't want to be using
torch<01:44:00.760><c> Flo</c><01:44:01.119><c> 16</c><01:44:01.599><c> because</c><01:44:01.800><c> if</c><01:44:01.920><c> we</c><01:44:02.040><c> do</c><01:44:02.280><c> that</c><01:44:02.440><c> we</c>

01:44:02.550 --> 01:44:02.560 align:start position:0%
torch Flo 16 because if we do that we
 

01:44:02.560 --> 01:44:04.310 align:start position:0%
torch Flo 16 because if we do that we
need<01:44:02.679><c> to</c><01:44:02.840><c> start</c><01:44:03.040><c> using</c><01:44:03.320><c> gradient</c><01:44:03.679><c> scalers</c><01:44:04.199><c> as</c>

01:44:04.310 --> 01:44:04.320 align:start position:0%
need to start using gradient scalers as
 

01:44:04.320 --> 01:44:06.310 align:start position:0%
need to start using gradient scalers as
well<01:44:04.800><c> so</c><01:44:04.960><c> we</c><01:44:05.040><c> are</c><01:44:05.159><c> going</c><01:44:05.239><c> to</c><01:44:05.360><c> be</c><01:44:05.440><c> using</c><01:44:05.719><c> B</c><01:44:05.920><c> float</c>

01:44:06.310 --> 01:44:06.320 align:start position:0%
well so we are going to be using B float
 

01:44:06.320 --> 01:44:09.910 align:start position:0%
well so we are going to be using B float
16<01:44:07.320><c> this</c><01:44:07.440><c> is</c><01:44:07.599><c> only</c><01:44:07.880><c> possible</c><01:44:08.159><c> to</c><01:44:08.280><c> do</c><01:44:08.440><c> an</c><01:44:08.920><c> ampere</c>

01:44:09.910 --> 01:44:09.920 align:start position:0%
16 this is only possible to do an ampere
 

01:44:09.920 --> 01:44:11.950 align:start position:0%
16 this is only possible to do an ampere
uh<01:44:10.080><c> but</c><01:44:10.239><c> this</c><01:44:10.400><c> means</c><01:44:10.679><c> that</c><01:44:10.840><c> the</c><01:44:11.000><c> changes</c><01:44:11.520><c> are</c>

01:44:11.950 --> 01:44:11.960 align:start position:0%
uh but this means that the changes are
 

01:44:11.960 --> 01:44:13.669 align:start position:0%
uh but this means that the changes are
extremely<01:44:12.400><c> minimal</c><01:44:12.920><c> like</c><01:44:13.159><c> basically</c><01:44:13.520><c> just</c>

01:44:13.669 --> 01:44:13.679 align:start position:0%
extremely minimal like basically just
 

01:44:13.679 --> 01:44:14.950 align:start position:0%
extremely minimal like basically just
this<01:44:13.840><c> one</c><01:44:14.000><c> line</c><01:44:14.159><c> of</c>

01:44:14.950 --> 01:44:14.960 align:start position:0%
this one line of
 

01:44:14.960 --> 01:44:19.030 align:start position:0%
this one line of
code<01:44:15.960><c> um</c><01:44:16.880><c> let</c><01:44:17.080><c> me</c><01:44:17.360><c> first</c><01:44:18.119><c> break</c>

01:44:19.030 --> 01:44:19.040 align:start position:0%
code um let me first break
 

01:44:19.040 --> 01:44:22.550 align:start position:0%
code um let me first break
in<01:44:20.040><c> to</c><01:44:20.480><c> here</c><01:44:20.920><c> before</c><01:44:21.159><c> we</c><01:44:21.320><c> actually</c><01:44:21.560><c> run</c><01:44:21.840><c> this</c>

01:44:22.550 --> 01:44:22.560 align:start position:0%
in to here before we actually run this
 

01:44:22.560 --> 01:44:25.229 align:start position:0%
in to here before we actually run this
so<01:44:22.840><c> right</c><01:44:23.239><c> after</c><01:44:23.599><c> logits</c><01:44:24.599><c> I'd</c><01:44:24.760><c> like</c><01:44:24.880><c> to</c><01:44:25.040><c> show</c>

01:44:25.229 --> 01:44:25.239 align:start position:0%
so right after logits I'd like to show
 

01:44:25.239 --> 01:44:28.310 align:start position:0%
so right after logits I'd like to show
you<01:44:25.719><c> that</c><01:44:26.719><c> different</c><01:44:27.080><c> from</c><01:44:27.239><c> the</c><01:44:27.360><c> tf32</c><01:44:28.080><c> that</c><01:44:28.199><c> we</c>

01:44:28.310 --> 01:44:28.320 align:start position:0%
you that different from the tf32 that we
 

01:44:28.320 --> 01:44:31.070 align:start position:0%
you that different from the tf32 that we
saw<01:44:28.880><c> this</c><01:44:29.000><c> is</c><01:44:29.159><c> actually</c><01:44:29.400><c> going</c><01:44:29.520><c> to</c><01:44:29.719><c> impact</c><01:44:30.000><c> our</c>

01:44:31.070 --> 01:44:31.080 align:start position:0%
saw this is actually going to impact our
 

01:44:31.080 --> 01:44:32.910 align:start position:0%
saw this is actually going to impact our
tensors

01:44:32.910 --> 01:44:32.920 align:start position:0%
tensors
 

01:44:32.920 --> 01:44:36.669 align:start position:0%
tensors
so<01:44:33.920><c> this</c><01:44:34.080><c> Lis</c><01:44:34.880><c> tensor</c><01:44:35.880><c> if</c><01:44:36.000><c> we</c><01:44:36.159><c> now</c><01:44:36.360><c> look</c><01:44:36.480><c> at</c>

01:44:36.669 --> 01:44:36.679 align:start position:0%
so this Lis tensor if we now look at
 

01:44:36.679 --> 01:44:38.430 align:start position:0%
so this Lis tensor if we now look at
this<01:44:36.840><c> and</c><01:44:36.960><c> we</c><01:44:37.119><c> look</c><01:44:37.199><c> at</c><01:44:37.320><c> the</c><01:44:37.440><c> dtype</c><01:44:37.840><c> we</c>

01:44:38.430 --> 01:44:38.440 align:start position:0%
this and we look at the dtype we
 

01:44:38.440 --> 01:44:40.830 align:start position:0%
this and we look at the dtype we
suddenly<01:44:38.760><c> see</c><01:44:38.960><c> that</c><01:44:39.159><c> this</c><01:44:39.239><c> is</c><01:44:39.400><c> now</c><01:44:39.599><c> B</c><01:44:39.800><c> float</c>

01:44:40.830 --> 01:44:40.840 align:start position:0%
suddenly see that this is now B float
 

01:44:40.840 --> 01:44:43.870 align:start position:0%
suddenly see that this is now B float
16<01:44:41.840><c> uh</c><01:44:41.960><c> it's</c><01:44:42.119><c> not</c><01:44:42.239><c> float</c><01:44:42.560><c> 32</c><01:44:43.080><c> anymore</c><01:44:43.480><c> so</c><01:44:43.639><c> our</c>

01:44:43.870 --> 01:44:43.880 align:start position:0%
16 uh it's not float 32 anymore so our
 

01:44:43.880 --> 01:44:45.510 align:start position:0%
16 uh it's not float 32 anymore so our
activations<01:44:44.560><c> have</c><01:44:44.679><c> been</c><01:44:44.880><c> changed</c><01:44:45.360><c> the</c>

01:44:45.510 --> 01:44:45.520 align:start position:0%
activations have been changed the
 

01:44:45.520 --> 01:44:48.510 align:start position:0%
activations have been changed the
activations<01:44:46.040><c> tensor</c><01:44:46.679><c> is</c><01:44:46.840><c> now</c><01:44:47.080><c> B</c><01:44:47.199><c> FL</c><01:44:47.480><c> 16</c><01:44:48.360><c> but</c>

01:44:48.510 --> 01:44:48.520 align:start position:0%
activations tensor is now B FL 16 but
 

01:44:48.520 --> 01:44:51.310 align:start position:0%
activations tensor is now B FL 16 but
not<01:44:48.719><c> everything</c><01:44:49.040><c> has</c><01:44:49.199><c> changed</c><01:44:49.639><c> so</c><01:44:50.360><c> model.</c>

01:44:51.310 --> 01:44:51.320 align:start position:0%
not everything has changed so model.
 

01:44:51.320 --> 01:44:55.470 align:start position:0%
not everything has changed so model.
Transformer

01:44:55.470 --> 01:44:55.480 align:start position:0%
 
 

01:44:55.480 --> 01:44:57.830 align:start position:0%
 
wte<01:44:56.480><c> uh</c><01:44:56.639><c> this</c><01:44:56.719><c> is</c><01:44:56.880><c> the</c><01:44:57.040><c> weight</c><01:44:57.480><c> uh</c><01:44:57.599><c> token</c>

01:44:57.830 --> 01:44:57.840 align:start position:0%
wte uh this is the weight uh token
 

01:44:57.840 --> 01:45:00.270 align:start position:0%
wte uh this is the weight uh token
embedding<01:44:58.239><c> table</c><01:44:58.880><c> it</c><01:44:59.000><c> has</c><01:44:59.119><c> a</c><01:44:59.560><c> weight</c><01:44:59.920><c> inside</c>

01:45:00.270 --> 01:45:00.280 align:start position:0%
embedding table it has a weight inside
 

01:45:00.280 --> 01:45:02.950 align:start position:0%
embedding table it has a weight inside
it<01:45:00.840><c> and</c><01:45:01.080><c> the</c><01:45:01.199><c> dtype</c><01:45:01.599><c> of</c><01:45:01.880><c> this</c><01:45:02.280><c> weight</c><01:45:02.760><c> this</c>

01:45:02.950 --> 01:45:02.960 align:start position:0%
it and the dtype of this weight this
 

01:45:02.960 --> 01:45:06.550 align:start position:0%
it and the dtype of this weight this
parameter<01:45:03.800><c> is</c><01:45:04.040><c> still</c><01:45:04.599><c> torch</c><01:45:04.960><c> float</c><01:45:05.280><c> 32</c><01:45:06.280><c> so</c><01:45:06.400><c> our</c>

01:45:06.550 --> 01:45:06.560 align:start position:0%
parameter is still torch float 32 so our
 

01:45:06.560 --> 01:45:09.070 align:start position:0%
parameter is still torch float 32 so our
parameters<01:45:07.040><c> seem</c><01:45:07.239><c> to</c><01:45:07.440><c> still</c><01:45:07.639><c> be</c><01:45:07.800><c> in</c><01:45:08.000><c> float</c><01:45:08.239><c> 32</c>

01:45:09.070 --> 01:45:09.080 align:start position:0%
parameters seem to still be in float 32
 

01:45:09.080 --> 01:45:11.109 align:start position:0%
parameters seem to still be in float 32
but<01:45:09.199><c> our</c><01:45:09.440><c> activations</c><01:45:10.239><c> the</c><01:45:10.360><c> loits</c><01:45:10.760><c> are</c><01:45:10.880><c> now</c><01:45:11.000><c> in</c>

01:45:11.109 --> 01:45:11.119 align:start position:0%
but our activations the loits are now in
 

01:45:11.119 --> 01:45:14.189 align:start position:0%
but our activations the loits are now in
P<01:45:11.520><c> 16</c><01:45:12.520><c> so</c><01:45:12.719><c> clearly</c><01:45:13.280><c> this</c><01:45:13.400><c> is</c><01:45:13.560><c> why</c><01:45:13.719><c> we</c><01:45:13.840><c> get</c><01:45:13.960><c> the</c>

01:45:14.189 --> 01:45:14.199 align:start position:0%
P 16 so clearly this is why we get the
 

01:45:14.199 --> 01:45:16.709 align:start position:0%
P 16 so clearly this is why we get the
mixed<01:45:14.840><c> Precision</c><01:45:15.639><c> some</c><01:45:15.880><c> things</c><01:45:16.239><c> pytorch</c><01:45:16.639><c> is</c>

01:45:16.709 --> 01:45:16.719 align:start position:0%
mixed Precision some things pytorch is
 

01:45:16.719 --> 01:45:19.430 align:start position:0%
mixed Precision some things pytorch is
keeping<01:45:17.119><c> inlow</c><01:45:17.520><c> 32</c><01:45:18.239><c> some</c><01:45:18.480><c> things</c><01:45:18.800><c> pytorch</c><01:45:19.280><c> is</c>

01:45:19.430 --> 01:45:19.440 align:start position:0%
keeping inlow 32 some things pytorch is
 

01:45:19.440 --> 01:45:23.430 align:start position:0%
keeping inlow 32 some things pytorch is
converting<01:45:20.080><c> to</c><01:45:20.280><c> lower</c><01:45:20.920><c> Precision</c><01:45:21.920><c> um</c><01:45:23.239><c> and</c>

01:45:23.430 --> 01:45:23.440 align:start position:0%
converting to lower Precision um and
 

01:45:23.440 --> 01:45:26.109 align:start position:0%
converting to lower Precision um and
what<01:45:23.639><c> gets</c><01:45:23.840><c> converted</c><01:45:24.719><c> at</c><01:45:24.920><c> what</c><01:45:25.119><c> point</c><01:45:25.520><c> is</c><01:45:25.760><c> not</c>

01:45:26.109 --> 01:45:26.119 align:start position:0%
what gets converted at what point is not
 

01:45:26.119 --> 01:45:30.390 align:start position:0%
what gets converted at what point is not
super<01:45:26.520><c> clear</c><01:45:27.520><c> I</c><01:45:27.679><c> remember</c><01:45:28.119><c> scrolling</c>

01:45:30.390 --> 01:45:30.400 align:start position:0%
super clear I remember scrolling
 

01:45:30.400 --> 01:45:34.669 align:start position:0%
super clear I remember scrolling
down<01:45:31.400><c> is</c><01:45:31.520><c> it</c>

01:45:34.669 --> 01:45:34.679 align:start position:0%
 
 

01:45:34.679 --> 01:45:37.350 align:start position:0%
 
here<01:45:35.679><c> okay</c><01:45:35.840><c> I</c><01:45:35.960><c> can't</c><01:45:36.159><c> find</c>

01:45:37.350 --> 01:45:37.360 align:start position:0%
here okay I can't find
 

01:45:37.360 --> 01:45:41.070 align:start position:0%
here okay I can't find
it<01:45:38.360><c> I</c><01:45:38.599><c> I</c><01:45:38.719><c> thought</c><01:45:38.960><c> it</c><01:45:39.040><c> was</c><01:45:39.280><c> here</c><01:45:40.239><c> okay</c><01:45:40.440><c> there</c><01:45:40.520><c> we</c>

01:45:41.070 --> 01:45:41.080 align:start position:0%
it I I thought it was here okay there we
 

01:45:41.080 --> 01:45:44.350 align:start position:0%
it I I thought it was here okay there we
go<01:45:42.080><c> so</c><01:45:42.280><c> there</c><01:45:42.400><c> are</c><01:45:42.719><c> a</c><01:45:42.840><c> few</c><01:45:43.080><c> docks</c><01:45:43.520><c> on</c><01:45:44.239><c> when</c>

01:45:44.350 --> 01:45:44.360 align:start position:0%
go so there are a few docks on when
 

01:45:44.360 --> 01:45:46.709 align:start position:0%
go so there are a few docks on when
you're<01:45:44.520><c> using</c><01:45:44.840><c> this</c><01:45:45.320><c> AutoCast</c><01:45:46.320><c> what</c><01:45:46.520><c> gets</c>

01:45:46.709 --> 01:45:46.719 align:start position:0%
you're using this AutoCast what gets
 

01:45:46.719 --> 01:45:49.470 align:start position:0%
you're using this AutoCast what gets
converted<01:45:47.119><c> to</c><01:45:47.199><c> B</c><01:45:47.360><c> FL</c><01:45:47.599><c> 16</c><01:45:48.000><c> and</c><01:45:48.400><c> and</c><01:45:48.560><c> when</c><01:45:49.119><c> so</c><01:45:49.320><c> for</c>

01:45:49.470 --> 01:45:49.480 align:start position:0%
converted to B FL 16 and and when so for
 

01:45:49.480 --> 01:45:51.750 align:start position:0%
converted to B FL 16 and and when so for
example<01:45:49.840><c> only</c><01:45:50.119><c> these</c><01:45:50.480><c> Matrix</c><01:45:50.840><c> multiply</c><01:45:51.440><c> like</c>

01:45:51.750 --> 01:45:51.760 align:start position:0%
example only these Matrix multiply like
 

01:45:51.760 --> 01:45:54.550 align:start position:0%
example only these Matrix multiply like
operations<01:45:52.239><c> get</c><01:45:52.400><c> converted</c><01:45:52.679><c> to</c><01:45:53.000><c> float</c><01:45:53.360><c> 16</c><01:45:54.360><c> but</c>

01:45:54.550 --> 01:45:54.560 align:start position:0%
operations get converted to float 16 but
 

01:45:54.560 --> 01:45:56.750 align:start position:0%
operations get converted to float 16 but
a<01:45:54.679><c> lot</c><01:45:54.800><c> of</c><01:45:54.960><c> operations</c><01:45:55.520><c> remain</c><01:45:55.719><c> in</c><01:45:55.840><c> float</c><01:45:56.080><c> 32</c>

01:45:56.750 --> 01:45:56.760 align:start position:0%
a lot of operations remain in float 32
 

01:45:56.760 --> 01:45:58.589 align:start position:0%
a lot of operations remain in float 32
so<01:45:56.880><c> in</c><01:45:57.000><c> particular</c><01:45:57.320><c> a</c><01:45:57.440><c> lot</c><01:45:57.520><c> of</c><01:45:57.800><c> normalizations</c>

01:45:58.589 --> 01:45:58.599 align:start position:0%
so in particular a lot of normalizations
 

01:45:58.599 --> 01:46:00.470 align:start position:0%
so in particular a lot of normalizations
like<01:45:58.719><c> layer</c><01:45:59.000><c> norms</c><01:45:59.440><c> and</c><01:45:59.599><c> things</c><01:45:59.840><c> like</c><01:46:00.040><c> that</c>

01:46:00.470 --> 01:46:00.480 align:start position:0%
like layer norms and things like that
 

01:46:00.480 --> 01:46:01.910 align:start position:0%
like layer norms and things like that
not<01:46:00.639><c> all</c><01:46:00.760><c> of</c><01:46:00.880><c> those</c><01:46:01.080><c> layers</c><01:46:01.400><c> might</c><01:46:01.520><c> be</c>

01:46:01.910 --> 01:46:01.920 align:start position:0%
not all of those layers might be
 

01:46:01.920 --> 01:46:04.990 align:start position:0%
not all of those layers might be
converted<01:46:02.920><c> um</c><01:46:03.639><c> so</c><01:46:03.960><c> only</c><01:46:04.320><c> some</c><01:46:04.560><c> layers</c>

01:46:04.990 --> 01:46:05.000 align:start position:0%
converted um so only some layers
 

01:46:05.000 --> 01:46:07.350 align:start position:0%
converted um so only some layers
selectively<01:46:05.840><c> would</c><01:46:06.000><c> be</c><01:46:06.159><c> running</c><01:46:06.440><c> B</c><01:46:06.599><c> flat</c><01:46:06.880><c> 16</c>

01:46:07.350 --> 01:46:07.360 align:start position:0%
selectively would be running B flat 16
 

01:46:07.360 --> 01:46:10.550 align:start position:0%
selectively would be running B flat 16
but<01:46:07.520><c> things</c><01:46:07.719><c> like</c><01:46:07.880><c> softmax</c><01:46:08.880><c> uh</c><01:46:09.080><c> layer</c><01:46:09.560><c> Norms</c>

01:46:10.550 --> 01:46:10.560 align:start position:0%
but things like softmax uh layer Norms
 

01:46:10.560 --> 01:46:14.070 align:start position:0%
but things like softmax uh layer Norms
uh<01:46:10.719><c> log</c><01:46:11.679><c> um</c><01:46:11.960><c> log</c><01:46:12.280><c> soft</c><01:46:12.560><c> Max</c><01:46:13.239><c> so</c><01:46:13.480><c> loss</c><01:46:13.760><c> function</c>

01:46:14.070 --> 01:46:14.080 align:start position:0%
uh log um log soft Max so loss function
 

01:46:14.080 --> 01:46:15.790 align:start position:0%
uh log um log soft Max so loss function
calculations<01:46:14.880><c> a</c><01:46:15.000><c> lot</c><01:46:15.119><c> of</c><01:46:15.199><c> those</c><01:46:15.360><c> things</c><01:46:15.520><c> might</c>

01:46:15.790 --> 01:46:15.800 align:start position:0%
calculations a lot of those things might
 

01:46:15.800 --> 01:46:17.790 align:start position:0%
calculations a lot of those things might
remain<01:46:15.920><c> in</c><01:46:16.040><c> float</c><01:46:16.280><c> 32</c><01:46:17.080><c> because</c><01:46:17.280><c> they</c><01:46:17.360><c> are</c><01:46:17.520><c> more</c>

01:46:17.790 --> 01:46:17.800 align:start position:0%
remain in float 32 because they are more
 

01:46:17.800 --> 01:46:20.310 align:start position:0%
remain in float 32 because they are more
susceptible<01:46:18.320><c> to</c><01:46:18.599><c> Precision</c><01:46:19.040><c> changes</c><01:46:19.840><c> major</c>

01:46:20.310 --> 01:46:20.320 align:start position:0%
susceptible to Precision changes major
 

01:46:20.320 --> 01:46:23.510 align:start position:0%
susceptible to Precision changes major
multiplies<01:46:20.760><c> are</c><01:46:21.119><c> fairly</c><01:46:22.119><c> um</c>

01:46:23.510 --> 01:46:23.520 align:start position:0%
multiplies are fairly um
 

01:46:23.520 --> 01:46:26.790 align:start position:0%
multiplies are fairly um
robust<01:46:24.239><c> to</c><01:46:24.599><c> Precision</c><01:46:25.040><c> changes</c><01:46:26.040><c> uh</c><01:46:26.199><c> so</c><01:46:26.599><c> some</c>

01:46:26.790 --> 01:46:26.800 align:start position:0%
robust to Precision changes uh so some
 

01:46:26.800 --> 01:46:29.030 align:start position:0%
robust to Precision changes uh so some
parts<01:46:26.960><c> of</c><01:46:27.080><c> the</c><01:46:27.159><c> network</c><01:46:27.560><c> are</c><01:46:28.119><c> um</c><01:46:28.599><c> impacted</c>

01:46:29.030 --> 01:46:29.040 align:start position:0%
parts of the network are um impacted
 

01:46:29.040 --> 01:46:31.790 align:start position:0%
parts of the network are um impacted
more<01:46:29.360><c> or</c><01:46:29.639><c> less</c><01:46:30.080><c> by</c><01:46:30.239><c> the</c><01:46:30.360><c> Precision</c>

01:46:31.790 --> 01:46:31.800 align:start position:0%
more or less by the Precision
 

01:46:31.800 --> 01:46:34.510 align:start position:0%
more or less by the Precision
change<01:46:32.800><c> um</c><01:46:33.400><c> so</c><01:46:33.560><c> basically</c><01:46:33.920><c> only</c><01:46:34.119><c> some</c><01:46:34.320><c> parts</c>

01:46:34.510 --> 01:46:34.520 align:start position:0%
change um so basically only some parts
 

01:46:34.520 --> 01:46:35.950 align:start position:0%
change um so basically only some parts
of<01:46:34.760><c> the</c><01:46:35.000><c> of</c><01:46:35.119><c> the</c><01:46:35.199><c> model</c><01:46:35.440><c> are</c><01:46:35.560><c> running</c><01:46:35.760><c> in</c>

01:46:35.950 --> 01:46:35.960 align:start position:0%
of the of the model are running in
 

01:46:35.960 --> 01:46:38.149 align:start position:0%
of the of the model are running in
reduced<01:46:36.320><c> Precision</c><01:46:37.239><c> let's</c><01:46:37.480><c> take</c><01:46:37.639><c> it</c><01:46:37.800><c> for</c><01:46:37.960><c> a</c>

01:46:38.149 --> 01:46:38.159 align:start position:0%
reduced Precision let's take it for a
 

01:46:38.159 --> 01:46:41.669 align:start position:0%
reduced Precision let's take it for a
spin<01:46:39.080><c> and</c><01:46:39.239><c> let's</c><01:46:39.480><c> actually</c><01:46:39.719><c> see</c><01:46:39.960><c> what</c><01:46:40.119><c> kind</c><01:46:40.679><c> of</c>

01:46:41.669 --> 01:46:41.679 align:start position:0%
spin and let's actually see what kind of
 

01:46:41.679 --> 01:46:48.270 align:start position:0%
spin and let's actually see what kind of
improvement<01:46:42.159><c> we</c><01:46:42.320><c> achieve</c>

01:46:48.270 --> 01:46:48.280 align:start position:0%
 
 

01:46:48.280 --> 01:46:51.390 align:start position:0%
 
here<01:46:49.280><c> okay</c><01:46:49.440><c> so</c><01:46:49.679><c> we</c><01:46:49.880><c> used</c><01:46:50.080><c> to</c><01:46:50.199><c> be</c><01:46:50.400><c> 333</c>

01:46:51.390 --> 01:46:51.400 align:start position:0%
here okay so we used to be 333
 

01:46:51.400 --> 01:46:53.790 align:start position:0%
here okay so we used to be 333
milliseconds<01:46:51.960><c> we're</c><01:46:52.159><c> now</c><01:46:52.360><c> 300</c>

01:46:53.790 --> 01:46:53.800 align:start position:0%
milliseconds we're now 300
 

01:46:53.800 --> 01:46:54.790 align:start position:0%
milliseconds we're now 300
and<01:46:53.920><c> we</c><01:46:54.040><c> used</c><01:46:54.199><c> to</c><01:46:54.280><c> be</c><01:46:54.400><c> somewhere</c><01:46:54.639><c> around</c>

01:46:54.790 --> 01:46:54.800 align:start position:0%
and we used to be somewhere around
 

01:46:54.800 --> 01:46:57.629 align:start position:0%
and we used to be somewhere around
50,000<01:46:55.320><c> tokens</c><01:46:55.639><c> per</c><01:46:55.760><c> second</c><01:46:56.000><c> we're</c><01:46:56.119><c> now</c><01:46:56.239><c> at</c><01:46:56.639><c> 55</c>

01:46:57.629 --> 01:46:57.639 align:start position:0%
50,000 tokens per second we're now at 55
 

01:46:57.639 --> 01:46:59.950 align:start position:0%
50,000 tokens per second we're now at 55
so<01:46:57.760><c> we're</c><01:46:57.960><c> definitely</c><01:46:58.320><c> running</c><01:46:58.960><c> faster</c><01:46:59.760><c> but</c>

01:46:59.950 --> 01:46:59.960 align:start position:0%
so we're definitely running faster but
 

01:46:59.960 --> 01:47:02.470 align:start position:0%
so we're definitely running faster but
maybe<01:47:00.400><c> not</c><01:47:00.560><c> a</c><01:47:00.719><c> lot</c><01:47:01.080><c> faster</c><01:47:02.040><c> and</c><01:47:02.239><c> that's</c>

01:47:02.470 --> 01:47:02.480 align:start position:0%
maybe not a lot faster and that's
 

01:47:02.480 --> 01:47:03.669 align:start position:0%
maybe not a lot faster and that's
because<01:47:02.719><c> there</c><01:47:02.840><c> are</c><01:47:03.000><c> still</c><01:47:03.239><c> many</c><01:47:03.480><c> many</c>

01:47:03.669 --> 01:47:03.679 align:start position:0%
because there are still many many
 

01:47:03.679 --> 01:47:05.709 align:start position:0%
because there are still many many
bottlenecks<01:47:04.480><c> in</c><01:47:04.679><c> our</c><01:47:04.880><c> gbt2</c><01:47:05.440><c> we're</c><01:47:05.599><c> just</c>

01:47:05.709 --> 01:47:05.719 align:start position:0%
bottlenecks in our gbt2 we're just
 

01:47:05.719 --> 01:47:07.870 align:start position:0%
bottlenecks in our gbt2 we're just
getting<01:47:05.960><c> started</c><01:47:06.960><c> but</c><01:47:07.119><c> we</c><01:47:07.239><c> have</c><01:47:07.400><c> dropped</c><01:47:07.719><c> down</c>

01:47:07.870 --> 01:47:07.880 align:start position:0%
getting started but we have dropped down
 

01:47:07.880 --> 01:47:09.790 align:start position:0%
getting started but we have dropped down
the<01:47:08.040><c> precision</c><01:47:08.440><c> as</c><01:47:08.560><c> far</c><01:47:08.719><c> as</c><01:47:08.880><c> we</c><01:47:09.000><c> can</c><01:47:09.440><c> with</c><01:47:09.639><c> my</c>

01:47:09.790 --> 01:47:09.800 align:start position:0%
the precision as far as we can with my
 

01:47:09.800 --> 01:47:12.750 align:start position:0%
the precision as far as we can with my
current<01:47:10.199><c> GPU</c><01:47:10.639><c> which</c><01:47:10.719><c> is</c><01:47:11.040><c> a100</c><01:47:12.040><c> we're</c><01:47:12.239><c> using</c>

01:47:12.750 --> 01:47:12.760 align:start position:0%
current GPU which is a100 we're using
 

01:47:12.760 --> 01:47:15.310 align:start position:0%
current GPU which is a100 we're using
pytorch<01:47:13.400><c> AutoCast</c><01:47:14.400><c> unfortunately</c><01:47:15.040><c> I</c><01:47:15.119><c> don't</c>

01:47:15.310 --> 01:47:15.320 align:start position:0%
pytorch AutoCast unfortunately I don't
 

01:47:15.320 --> 01:47:17.270 align:start position:0%
pytorch AutoCast unfortunately I don't
actually<01:47:15.840><c> exactly</c><01:47:16.239><c> know</c><01:47:16.560><c> what</c><01:47:16.760><c> pytorch</c>

01:47:17.270 --> 01:47:17.280 align:start position:0%
actually exactly know what pytorch
 

01:47:17.280 --> 01:47:19.830 align:start position:0%
actually exactly know what pytorch
AutoCast<01:47:17.960><c> do</c><01:47:18.480><c> uh</c><01:47:18.639><c> does</c><01:47:19.320><c> I</c><01:47:19.400><c> don't</c><01:47:19.599><c> actually</c>

01:47:19.830 --> 01:47:19.840 align:start position:0%
AutoCast do uh does I don't actually
 

01:47:19.840 --> 01:47:22.030 align:start position:0%
AutoCast do uh does I don't actually
know<01:47:20.040><c> exactly</c><01:47:20.840><c> what's</c><01:47:21.040><c> in</c><01:47:21.159><c> B</c><01:47:21.360><c> flat</c><01:47:21.599><c> 16</c><01:47:21.880><c> what's</c>

01:47:22.030 --> 01:47:22.040 align:start position:0%
know exactly what's in B flat 16 what's
 

01:47:22.040 --> 01:47:23.350 align:start position:0%
know exactly what's in B flat 16 what's
in<01:47:22.199><c> float</c><01:47:22.480><c> 32</c>

01:47:23.350 --> 01:47:23.360 align:start position:0%
in float 32
 

01:47:23.360 --> 01:47:24.510 align:start position:0%
in float 32
we<01:47:23.440><c> could</c><01:47:23.639><c> go</c><01:47:23.760><c> in</c><01:47:23.880><c> and</c><01:47:24.000><c> we</c><01:47:24.080><c> could</c><01:47:24.199><c> start</c><01:47:24.360><c> to</c>

01:47:24.510 --> 01:47:24.520 align:start position:0%
we could go in and we could start to
 

01:47:24.520 --> 01:47:27.229 align:start position:0%
we could go in and we could start to
scrutinize<01:47:25.159><c> it</c><01:47:26.159><c> um</c><01:47:26.560><c> but</c><01:47:26.719><c> these</c><01:47:26.840><c> are</c><01:47:26.960><c> the</c><01:47:27.080><c> kinds</c>

01:47:27.229 --> 01:47:27.239 align:start position:0%
scrutinize it um but these are the kinds
 

01:47:27.239 --> 01:47:29.350 align:start position:0%
scrutinize it um but these are the kinds
of<01:47:27.360><c> rules</c><01:47:27.679><c> that</c><01:47:27.840><c> pytorch</c><01:47:28.400><c> has</c><01:47:28.599><c> internally</c><01:47:29.239><c> and</c>

01:47:29.350 --> 01:47:29.360 align:start position:0%
of rules that pytorch has internally and
 

01:47:29.360 --> 01:47:31.350 align:start position:0%
of rules that pytorch has internally and
unfortunately<01:47:29.960><c> they</c><01:47:30.080><c> don't</c><01:47:30.520><c> documented</c><01:47:31.159><c> very</c>

01:47:31.350 --> 01:47:31.360 align:start position:0%
unfortunately they don't documented very
 

01:47:31.360 --> 01:47:34.189 align:start position:0%
unfortunately they don't documented very
well<01:47:32.159><c> uh</c><01:47:32.400><c> so</c><01:47:33.400><c> we're</c><01:47:33.560><c> not</c><01:47:33.679><c> going</c><01:47:33.760><c> to</c><01:47:33.880><c> go</c><01:47:34.000><c> into</c>

01:47:34.189 --> 01:47:34.199 align:start position:0%
well uh so we're not going to go into
 

01:47:34.199 --> 01:47:36.589 align:start position:0%
well uh so we're not going to go into
that<01:47:34.360><c> into</c><01:47:34.920><c> in</c><01:47:35.119><c> too</c><01:47:35.320><c> much</c><01:47:35.520><c> detail</c><01:47:36.159><c> but</c><01:47:36.320><c> for</c><01:47:36.440><c> now</c>

01:47:36.589 --> 01:47:36.599 align:start position:0%
that into in too much detail but for now
 

01:47:36.599 --> 01:47:38.990 align:start position:0%
that into in too much detail but for now
we<01:47:36.719><c> are</c><01:47:37.040><c> training</c><01:47:37.320><c> in</c><01:47:37.440><c> B</c><01:47:37.599><c> flow</c><01:47:37.880><c> 16</c><01:47:38.440><c> we</c><01:47:38.560><c> do</c><01:47:38.719><c> not</c>

01:47:38.990 --> 01:47:39.000 align:start position:0%
we are training in B flow 16 we do not
 

01:47:39.000 --> 01:47:40.910 align:start position:0%
we are training in B flow 16 we do not
need<01:47:39.159><c> a</c><01:47:39.280><c> gradient</c><01:47:39.639><c> scaler</c><01:47:40.440><c> and</c><01:47:40.560><c> the</c><01:47:40.679><c> reason</c>

01:47:40.910 --> 01:47:40.920 align:start position:0%
need a gradient scaler and the reason
 

01:47:40.920 --> 01:47:44.629 align:start position:0%
need a gradient scaler and the reason
things<01:47:41.080><c> are</c><01:47:41.199><c> running</c><01:47:41.560><c> faster</c><01:47:42.400><c> is</c><01:47:42.679><c> because</c><01:47:43.639><c> um</c>

01:47:44.629 --> 01:47:44.639 align:start position:0%
things are running faster is because um
 

01:47:44.639 --> 01:47:47.430 align:start position:0%
things are running faster is because um
we<01:47:44.800><c> are</c><01:47:45.000><c> able</c><01:47:45.239><c> to</c><01:47:45.760><c> run</c><01:47:46.000><c> tensor</c><01:47:46.400><c> course</c><01:47:46.880><c> in</c><01:47:47.000><c> B</c><01:47:47.159><c> FL</c>

01:47:47.430 --> 01:47:47.440 align:start position:0%
we are able to run tensor course in B FL
 

01:47:47.440 --> 01:47:51.990 align:start position:0%
we are able to run tensor course in B FL
16<01:47:47.800><c> now</c><01:47:48.639><c> that</c><01:47:48.760><c> means</c><01:47:49.040><c> we</c><01:47:49.159><c> are</c><01:47:49.400><c> in</c><01:47:49.679><c> this</c><01:47:50.159><c> row</c><01:47:51.159><c> but</c>

01:47:51.990 --> 01:47:52.000 align:start position:0%
16 now that means we are in this row but
 

01:47:52.000 --> 01:47:53.870 align:start position:0%
16 now that means we are in this row but
uh<01:47:52.080><c> we</c><01:47:52.159><c> are</c><01:47:52.320><c> also</c><01:47:52.520><c> paying</c><01:47:52.920><c> in</c><01:47:53.119><c> Precision</c><01:47:53.599><c> for</c>

01:47:53.870 --> 01:47:53.880 align:start position:0%
uh we are also paying in Precision for
 

01:47:53.880 --> 01:47:57.550 align:start position:0%
uh we are also paying in Precision for
this<01:47:54.679><c> uh</c><01:47:54.840><c> so</c><01:47:55.639><c> um</c><01:47:56.119><c> we</c><01:47:56.360><c> expect</c><01:47:56.760><c> slightly</c><01:47:57.239><c> less</c>

01:47:57.550 --> 01:47:57.560 align:start position:0%
this uh so um we expect slightly less
 

01:47:57.560 --> 01:47:58.870 align:start position:0%
this uh so um we expect slightly less
accurate<01:47:57.960><c> results</c><01:47:58.320><c> with</c><01:47:58.440><c> respect</c><01:47:58.679><c> to</c><01:47:58.800><c> the</c>

01:47:58.870 --> 01:47:58.880 align:start position:0%
accurate results with respect to the
 

01:47:58.880 --> 01:48:01.870 align:start position:0%
accurate results with respect to the
original<01:47:59.560><c> fp32</c><01:48:00.560><c> but</c><01:48:01.080><c> empirically</c><01:48:01.560><c> in</c><01:48:01.639><c> many</c>

01:48:01.870 --> 01:48:01.880 align:start position:0%
original fp32 but empirically in many
 

01:48:01.880 --> 01:48:04.229 align:start position:0%
original fp32 but empirically in many
cases<01:48:02.199><c> this</c><01:48:02.320><c> is</c><01:48:02.599><c> a</c><01:48:02.760><c> worth</c><01:48:03.040><c> it</c><01:48:03.639><c> uh</c><01:48:03.760><c> kind</c><01:48:03.880><c> of</c>

01:48:04.229 --> 01:48:04.239 align:start position:0%
cases this is a worth it uh kind of
 

01:48:04.239 --> 01:48:06.189 align:start position:0%
cases this is a worth it uh kind of
tradeoff<01:48:05.239><c> because</c><01:48:05.440><c> it</c><01:48:05.520><c> allows</c><01:48:05.760><c> you</c><01:48:05.840><c> to</c><01:48:05.960><c> run</c>

01:48:06.189 --> 01:48:06.199 align:start position:0%
tradeoff because it allows you to run
 

01:48:06.199 --> 01:48:07.870 align:start position:0%
tradeoff because it allows you to run
faster<01:48:06.719><c> and</c><01:48:06.840><c> you</c><01:48:06.920><c> could</c><01:48:07.040><c> for</c><01:48:07.239><c> example</c><01:48:07.520><c> train</c>

01:48:07.870 --> 01:48:07.880 align:start position:0%
faster and you could for example train
 

01:48:07.880 --> 01:48:10.830 align:start position:0%
faster and you could for example train
longer<01:48:08.520><c> and</c><01:48:08.639><c> make</c><01:48:08.920><c> up</c><01:48:09.080><c> for</c><01:48:09.320><c> the</c><01:48:10.239><c> uh</c><01:48:10.360><c> for</c><01:48:10.639><c> that</c>

01:48:10.830 --> 01:48:10.840 align:start position:0%
longer and make up for the uh for that
 

01:48:10.840 --> 01:48:15.030 align:start position:0%
longer and make up for the uh for that
Precision<01:48:11.280><c> decrease</c><01:48:12.280><c> so</c><01:48:13.199><c> um</c><01:48:13.960><c> that's</c><01:48:14.199><c> b46</c><01:48:14.880><c> for</c>

01:48:15.030 --> 01:48:15.040 align:start position:0%
Precision decrease so um that's b46 for
 

01:48:15.040 --> 01:48:17.510 align:start position:0%
Precision decrease so um that's b46 for
now<01:48:15.679><c> okay</c><01:48:15.800><c> so</c><01:48:16.000><c> as</c><01:48:16.119><c> we</c><01:48:16.280><c> can</c><01:48:16.880><c> see</c><01:48:17.239><c> we</c><01:48:17.360><c> are</c>

01:48:17.510 --> 01:48:17.520 align:start position:0%
now okay so as we can see we are
 

01:48:17.520 --> 01:48:19.790 align:start position:0%
now okay so as we can see we are
currently<01:48:17.880><c> at</c><01:48:18.000><c> about</c><01:48:18.159><c> 300</c><01:48:18.639><c> milliseconds</c><01:48:19.639><c> uh</c>

01:48:19.790 --> 01:48:19.800 align:start position:0%
currently at about 300 milliseconds uh
 

01:48:19.800 --> 01:48:21.350 align:start position:0%
currently at about 300 milliseconds uh
per<01:48:20.000><c> iteration</c><01:48:20.599><c> and</c><01:48:20.719><c> we're</c><01:48:20.920><c> now</c><01:48:21.080><c> going</c><01:48:21.159><c> to</c>

01:48:21.350 --> 01:48:21.360 align:start position:0%
per iteration and we're now going to
 

01:48:21.360 --> 01:48:23.070 align:start position:0%
per iteration and we're now going to
reach<01:48:21.520><c> for</c><01:48:21.719><c> some</c><01:48:21.960><c> really</c><01:48:22.199><c> heavy</c><01:48:22.440><c> weapons</c><01:48:22.960><c> in</c>

01:48:23.070 --> 01:48:23.080 align:start position:0%
reach for some really heavy weapons in
 

01:48:23.080 --> 01:48:25.030 align:start position:0%
reach for some really heavy weapons in
the<01:48:23.239><c> pie</c><01:48:23.440><c> torch</c><01:48:23.679><c> Arsenal</c><01:48:24.440><c> and</c><01:48:24.560><c> in</c><01:48:24.679><c> particular</c>

01:48:25.030 --> 01:48:25.040 align:start position:0%
the pie torch Arsenal and in particular
 

01:48:25.040 --> 01:48:27.669 align:start position:0%
the pie torch Arsenal and in particular
we're<01:48:25.199><c> going</c><01:48:25.400><c> to</c><01:48:25.599><c> introduce</c><01:48:26.000><c> torch.</c><01:48:26.679><c> compile</c>

01:48:27.669 --> 01:48:27.679 align:start position:0%
we're going to introduce torch. compile
 

01:48:27.679 --> 01:48:29.589 align:start position:0%
we're going to introduce torch. compile
so<01:48:27.880><c> torch.</c><01:48:28.320><c> compile</c><01:48:28.719><c> is</c><01:48:28.920><c> really</c><01:48:29.199><c> quite</c>

01:48:29.589 --> 01:48:29.599 align:start position:0%
so torch. compile is really quite
 

01:48:29.599 --> 01:48:30.990 align:start position:0%
so torch. compile is really quite
incredible<01:48:30.000><c> infrastructure</c><01:48:30.560><c> from</c><01:48:30.880><c> the</c>

01:48:30.990 --> 01:48:31.000 align:start position:0%
incredible infrastructure from the
 

01:48:31.000 --> 01:48:32.709 align:start position:0%
incredible infrastructure from the
pytorch<01:48:31.400><c> team</c><01:48:32.000><c> and</c><01:48:32.080><c> it's</c><01:48:32.239><c> basically</c><01:48:32.560><c> a</c>

01:48:32.709 --> 01:48:32.719 align:start position:0%
pytorch team and it's basically a
 

01:48:32.719 --> 01:48:35.030 align:start position:0%
pytorch team and it's basically a
compiler<01:48:33.360><c> for</c><01:48:33.560><c> neural</c><01:48:33.880><c> networks</c><01:48:34.719><c> like</c><01:48:34.880><c> it's</c>

01:48:35.030 --> 01:48:35.040 align:start position:0%
compiler for neural networks like it's
 

01:48:35.040 --> 01:48:38.310 align:start position:0%
compiler for neural networks like it's
almost<01:48:35.360><c> like</c><01:48:35.639><c> GCC</c><01:48:36.280><c> for</c><01:48:36.480><c> CN</c><01:48:36.800><c> C++</c><01:48:37.400><c> code</c><01:48:38.080><c> this</c><01:48:38.159><c> is</c>

01:48:38.310 --> 01:48:38.320 align:start position:0%
almost like GCC for CN C++ code this is
 

01:48:38.320 --> 01:48:42.830 align:start position:0%
almost like GCC for CN C++ code this is
just<01:48:38.520><c> this</c><01:48:38.840><c> GCC</c><01:48:39.520><c> of</c><01:48:39.719><c> neural</c><01:48:40.159><c> nuts</c><01:48:41.560><c> so</c><01:48:42.560><c> came</c><01:48:42.719><c> out</c>

01:48:42.830 --> 01:48:42.840 align:start position:0%
just this GCC of neural nuts so came out
 

01:48:42.840 --> 01:48:46.310 align:start position:0%
just this GCC of neural nuts so came out
a<01:48:43.000><c> while</c><01:48:43.199><c> ago</c><01:48:43.639><c> and</c><01:48:44.119><c> extremely</c><01:48:44.599><c> simple</c><01:48:44.840><c> to</c><01:48:45.320><c> use</c>

01:48:46.310 --> 01:48:46.320 align:start position:0%
a while ago and extremely simple to use
 

01:48:46.320 --> 01:48:48.629 align:start position:0%
a while ago and extremely simple to use
um<01:48:46.679><c> the</c><01:48:46.800><c> way</c><01:48:46.920><c> to</c><01:48:47.000><c> use</c><01:48:47.199><c> torch</c><01:48:47.480><c> compile</c><01:48:47.880><c> is</c><01:48:48.000><c> to</c><01:48:48.199><c> do</c>

01:48:48.629 --> 01:48:48.639 align:start position:0%
um the way to use torch compile is to do
 

01:48:48.639 --> 01:48:50.790 align:start position:0%
um the way to use torch compile is to do
this<01:48:49.639><c> it's</c><01:48:49.760><c> a</c><01:48:49.880><c> single</c><01:48:50.119><c> line</c><01:48:50.280><c> of</c><01:48:50.400><c> code</c><01:48:50.639><c> to</c>

01:48:50.790 --> 01:48:50.800 align:start position:0%
this it's a single line of code to
 

01:48:50.800 --> 01:48:54.109 align:start position:0%
this it's a single line of code to
compile<01:48:51.159><c> your</c><01:48:51.360><c> model</c><01:48:52.320><c> and</c><01:48:53.000><c> return</c><01:48:53.159><c> it</c><01:48:53.920><c> now</c>

01:48:54.109 --> 01:48:54.119 align:start position:0%
compile your model and return it now
 

01:48:54.119 --> 01:48:55.430 align:start position:0%
compile your model and return it now
this<01:48:54.239><c> line</c><01:48:54.400><c> of</c><01:48:54.520><c> code</c><01:48:54.719><c> will</c><01:48:54.960><c> cost</c><01:48:55.159><c> you</c>

01:48:55.430 --> 01:48:55.440 align:start position:0%
this line of code will cost you
 

01:48:55.440 --> 01:48:57.589 align:start position:0%
this line of code will cost you
compilation<01:48:56.119><c> time</c><01:48:56.760><c> but</c><01:48:57.000><c> as</c><01:48:57.080><c> you</c><01:48:57.199><c> might</c><01:48:57.400><c> guess</c>

01:48:57.589 --> 01:48:57.599 align:start position:0%
compilation time but as you might guess
 

01:48:57.599 --> 01:48:59.669 align:start position:0%
compilation time but as you might guess
it's<01:48:57.719><c> going</c><01:48:57.840><c> to</c><01:48:57.960><c> make</c><01:48:58.119><c> the</c><01:48:58.199><c> code</c><01:48:58.440><c> a</c><01:48:58.560><c> lot</c><01:48:58.800><c> faster</c>

01:48:59.669 --> 01:48:59.679 align:start position:0%
it's going to make the code a lot faster
 

01:48:59.679 --> 01:49:01.830 align:start position:0%
it's going to make the code a lot faster
so<01:49:00.040><c> let's</c><01:49:00.280><c> actually</c><01:49:00.520><c> run</c><01:49:00.840><c> that</c><01:49:01.560><c> because</c><01:49:01.760><c> this</c>

01:49:01.830 --> 01:49:01.840 align:start position:0%
so let's actually run that because this
 

01:49:01.840 --> 01:49:03.629 align:start position:0%
so let's actually run that because this
will<01:49:02.000><c> take</c><01:49:02.159><c> some</c><01:49:02.320><c> time</c><01:49:02.440><c> to</c><01:49:02.599><c> run</c><01:49:03.119><c> but</c><01:49:03.280><c> currently</c>

01:49:03.629 --> 01:49:03.639 align:start position:0%
will take some time to run but currently
 

01:49:03.639 --> 01:49:05.550 align:start position:0%
will take some time to run but currently
remember<01:49:03.920><c> we're</c><01:49:04.080><c> at</c><01:49:04.199><c> 300</c><01:49:04.560><c> milliseconds</c><01:49:05.480><c> and</c>

01:49:05.550 --> 01:49:05.560 align:start position:0%
remember we're at 300 milliseconds and
 

01:49:05.560 --> 01:49:08.030 align:start position:0%
remember we're at 300 milliseconds and
we'll<01:49:05.760><c> see</c><01:49:05.920><c> what</c><01:49:06.040><c> happens</c><01:49:07.000><c> now</c><01:49:07.199><c> while</c><01:49:07.400><c> this</c><01:49:07.520><c> is</c>

01:49:08.030 --> 01:49:08.040 align:start position:0%
we'll see what happens now while this is
 

01:49:08.040 --> 01:49:10.229 align:start position:0%
we'll see what happens now while this is
running<01:49:09.040><c> I'd</c><01:49:09.199><c> like</c><01:49:09.320><c> to</c><01:49:09.480><c> explain</c><01:49:09.760><c> a</c><01:49:09.880><c> little</c><01:49:10.080><c> bit</c>

01:49:10.229 --> 01:49:10.239 align:start position:0%
running I'd like to explain a little bit
 

01:49:10.239 --> 01:49:11.830 align:start position:0%
running I'd like to explain a little bit
of<01:49:10.440><c> what</c><01:49:10.599><c> torch.</c><01:49:11.040><c> compile</c><01:49:11.320><c> does</c><01:49:11.480><c> under</c><01:49:11.679><c> the</c>

01:49:11.830 --> 01:49:11.840 align:start position:0%
of what torch. compile does under the
 

01:49:11.840 --> 01:49:14.990 align:start position:0%
of what torch. compile does under the
hood<01:49:12.840><c> uh</c><01:49:13.000><c> so</c><01:49:13.639><c> feel</c><01:49:13.880><c> free</c><01:49:14.080><c> to</c><01:49:14.280><c> read</c><01:49:14.639><c> this</c><01:49:14.800><c> page</c>

01:49:14.990 --> 01:49:15.000 align:start position:0%
hood uh so feel free to read this page
 

01:49:15.000 --> 01:49:17.629 align:start position:0%
hood uh so feel free to read this page
of<01:49:15.159><c> P</c><01:49:15.520><c> torch</c><01:49:16.520><c> but</c><01:49:16.679><c> basically</c><01:49:17.040><c> there's</c><01:49:17.199><c> no</c><01:49:17.400><c> real</c>

01:49:17.629 --> 01:49:17.639 align:start position:0%
of P torch but basically there's no real
 

01:49:17.639 --> 01:49:19.510 align:start position:0%
of P torch but basically there's no real
good<01:49:17.840><c> reason</c><01:49:18.119><c> for</c><01:49:18.280><c> you</c><01:49:18.440><c> to</c><01:49:18.760><c> not</c><01:49:19.000><c> use</c><01:49:19.239><c> torch</c>

01:49:19.510 --> 01:49:19.520 align:start position:0%
good reason for you to not use torch
 

01:49:19.520 --> 01:49:21.510 align:start position:0%
good reason for you to not use torch
compile<01:49:19.920><c> in</c><01:49:20.000><c> your</c><01:49:20.320><c> pie</c><01:49:20.560><c> torch</c><01:49:20.960><c> I</c><01:49:21.080><c> kind</c><01:49:21.159><c> of</c><01:49:21.280><c> feel</c>

01:49:21.510 --> 01:49:21.520 align:start position:0%
compile in your pie torch I kind of feel
 

01:49:21.520 --> 01:49:23.229 align:start position:0%
compile in your pie torch I kind of feel
like<01:49:22.119><c> you</c><01:49:22.199><c> should</c><01:49:22.360><c> be</c><01:49:22.440><c> using</c><01:49:22.920><c> almost</c><01:49:23.119><c> by</c>

01:49:23.229 --> 01:49:23.239 align:start position:0%
like you should be using almost by
 

01:49:23.239 --> 01:49:25.030 align:start position:0%
like you should be using almost by
default<01:49:23.639><c> if</c><01:49:23.719><c> you're</c><01:49:23.920><c> not</c><01:49:24.440><c> uh</c><01:49:24.639><c> unless</c><01:49:24.880><c> you're</c>

01:49:25.030 --> 01:49:25.040 align:start position:0%
default if you're not uh unless you're
 

01:49:25.040 --> 01:49:26.550 align:start position:0%
default if you're not uh unless you're
debugging<01:49:25.480><c> and</c><01:49:25.599><c> you</c><01:49:25.679><c> want</c><01:49:25.840><c> your</c><01:49:26.000><c> code</c><01:49:26.199><c> to</c><01:49:26.320><c> run</c>

01:49:26.550 --> 01:49:26.560 align:start position:0%
debugging and you want your code to run
 

01:49:26.560 --> 01:49:29.629 align:start position:0%
debugging and you want your code to run
really<01:49:27.320><c> fast</c><01:49:28.320><c> and</c><01:49:28.719><c> there's</c><01:49:29.040><c> one</c><01:49:29.199><c> line</c><01:49:29.400><c> here</c><01:49:29.520><c> in</c>

01:49:29.629 --> 01:49:29.639 align:start position:0%
really fast and there's one line here in
 

01:49:29.639 --> 01:49:31.030 align:start position:0%
really fast and there's one line here in
torch<01:49:29.880><c> compile</c><01:49:30.199><c> that</c><01:49:30.280><c> I</c><01:49:30.360><c> found</c><01:49:30.599><c> that</c><01:49:30.800><c> actually</c>

01:49:31.030 --> 01:49:31.040 align:start position:0%
torch compile that I found that actually
 

01:49:31.040 --> 01:49:33.830 align:start position:0%
torch compile that I found that actually
kind<01:49:31.159><c> of</c><01:49:31.320><c> like</c><01:49:31.440><c> gets</c><01:49:31.639><c> to</c><01:49:32.080><c> why</c><01:49:32.280><c> this</c><01:49:32.400><c> is</c><01:49:32.840><c> faster</c>

01:49:33.830 --> 01:49:33.840 align:start position:0%
kind of like gets to why this is faster
 

01:49:33.840 --> 01:49:35.589 align:start position:0%
kind of like gets to why this is faster
speed<01:49:34.119><c> up</c><01:49:34.280><c> mainly</c><01:49:34.560><c> comes</c><01:49:34.800><c> from</c><01:49:35.000><c> reducing</c>

01:49:35.589 --> 01:49:35.599 align:start position:0%
speed up mainly comes from reducing
 

01:49:35.599 --> 01:49:38.750 align:start position:0%
speed up mainly comes from reducing
python<01:49:36.000><c> overhead</c><01:49:36.639><c> and</c><01:49:36.960><c> GPU</c><01:49:37.400><c> read</c><01:49:37.719><c> wrs</c><01:49:38.440><c> so</c><01:49:38.679><c> let</c>

01:49:38.750 --> 01:49:38.760 align:start position:0%
python overhead and GPU read wrs so let
 

01:49:38.760 --> 01:49:41.790 align:start position:0%
python overhead and GPU read wrs so let
me<01:49:38.880><c> unpack</c><01:49:39.239><c> that</c><01:49:39.360><c> a</c><01:49:39.480><c> little</c><01:49:39.679><c> bit</c><01:49:40.679><c> um</c><01:49:41.480><c> okay</c><01:49:41.679><c> here</c>

01:49:41.790 --> 01:49:41.800 align:start position:0%
me unpack that a little bit um okay here
 

01:49:41.800 --> 01:49:43.669 align:start position:0%
me unpack that a little bit um okay here
we<01:49:41.920><c> are</c><01:49:42.560><c> okay</c><01:49:42.679><c> so</c><01:49:42.800><c> we</c><01:49:42.880><c> went</c><01:49:43.040><c> from</c><01:49:43.239><c> 300</c>

01:49:43.669 --> 01:49:43.679 align:start position:0%
we are okay so we went from 300
 

01:49:43.679 --> 01:49:46.910 align:start position:0%
we are okay so we went from 300
milliseconds<01:49:44.560><c> we're</c><01:49:44.719><c> now</c><01:49:44.880><c> running</c><01:49:45.119><c> at</c><01:49:45.320><c> 129</c>

01:49:46.910 --> 01:49:46.920 align:start position:0%
milliseconds we're now running at 129
 

01:49:46.920 --> 01:49:51.149 align:start position:0%
milliseconds we're now running at 129
milliseconds<01:49:47.920><c> so</c><01:49:48.119><c> this</c><01:49:48.199><c> is</c><01:49:48.520><c> uh</c><01:49:49.080><c> 300</c><01:49:49.880><c> 129</c><01:49:50.520><c> about</c>

01:49:51.149 --> 01:49:51.159 align:start position:0%
milliseconds so this is uh 300 129 about
 

01:49:51.159 --> 01:49:53.390 align:start position:0%
milliseconds so this is uh 300 129 about
2.3x<01:49:52.159><c> Improvement</c><01:49:52.719><c> from</c><01:49:52.840><c> a</c><01:49:52.920><c> single</c><01:49:53.159><c> line</c><01:49:53.320><c> of</c>

01:49:53.390 --> 01:49:53.400 align:start position:0%
2.3x Improvement from a single line of
 

01:49:53.400 --> 01:49:56.669 align:start position:0%
2.3x Improvement from a single line of
code<01:49:53.599><c> in</c><01:49:53.760><c> py</c><01:49:54.280><c> torch</c><01:49:55.280><c> uh</c><01:49:55.480><c> so</c><01:49:55.760><c> quite</c><01:49:55.920><c> incredible</c>

01:49:56.669 --> 01:49:56.679 align:start position:0%
code in py torch uh so quite incredible
 

01:49:56.679 --> 01:49:57.870 align:start position:0%
code in py torch uh so quite incredible
so<01:49:56.920><c> what</c><01:49:57.040><c> is</c><01:49:57.159><c> happening</c><01:49:57.480><c> what's</c><01:49:57.639><c> happening</c>

01:49:57.870 --> 01:49:57.880 align:start position:0%
so what is happening what's happening
 

01:49:57.880 --> 01:49:59.750 align:start position:0%
so what is happening what's happening
under<01:49:58.040><c> the</c><01:49:58.199><c> hood</c><01:49:59.040><c> well</c><01:49:59.159><c> when</c><01:49:59.280><c> you</c><01:49:59.440><c> pass</c><01:49:59.639><c> the</c>

01:49:59.750 --> 01:49:59.760 align:start position:0%
under the hood well when you pass the
 

01:49:59.760 --> 01:50:01.390 align:start position:0%
under the hood well when you pass the
model<01:49:59.960><c> to</c><01:50:00.119><c> torch</c>

01:50:01.390 --> 01:50:01.400 align:start position:0%
model to torch
 

01:50:01.400 --> 01:50:04.189 align:start position:0%
model to torch
compile<01:50:02.400><c> what</c><01:50:02.560><c> we</c><01:50:02.800><c> have</c><01:50:03.080><c> here</c><01:50:03.560><c> in</c><01:50:03.719><c> this</c><01:50:03.880><c> NN</c>

01:50:04.189 --> 01:50:04.199 align:start position:0%
compile what we have here in this NN
 

01:50:04.199 --> 01:50:05.830 align:start position:0%
compile what we have here in this NN
module<01:50:05.000><c> this</c><01:50:05.080><c> is</c><01:50:05.239><c> really</c><01:50:05.440><c> just</c><01:50:05.599><c> the</c>

01:50:05.830 --> 01:50:05.840 align:start position:0%
module this is really just the
 

01:50:05.840 --> 01:50:08.390 align:start position:0%
module this is really just the
algorithmic<01:50:06.840><c> description</c><01:50:07.800><c> of</c><01:50:08.000><c> what</c><01:50:08.199><c> we'd</c>

01:50:08.390 --> 01:50:08.400 align:start position:0%
algorithmic description of what we'd
 

01:50:08.400 --> 01:50:11.030 align:start position:0%
algorithmic description of what we'd
like<01:50:08.520><c> to</c><01:50:08.800><c> happen</c><01:50:09.159><c> in</c><01:50:09.280><c> our</c><01:50:09.480><c> Network</c><01:50:10.480><c> and</c><01:50:10.679><c> torch</c>

01:50:11.030 --> 01:50:11.040 align:start position:0%
like to happen in our Network and torch
 

01:50:11.040 --> 01:50:14.270 align:start position:0%
like to happen in our Network and torch
compile<01:50:11.440><c> will</c><01:50:11.880><c> analyze</c><01:50:12.719><c> the</c><01:50:12.920><c> entire</c><01:50:13.360><c> thing</c>

01:50:14.270 --> 01:50:14.280 align:start position:0%
compile will analyze the entire thing
 

01:50:14.280 --> 01:50:15.950 align:start position:0%
compile will analyze the entire thing
and<01:50:14.400><c> it</c><01:50:14.520><c> will</c><01:50:14.840><c> look</c><01:50:15.000><c> at</c><01:50:15.199><c> what</c><01:50:15.400><c> operations</c><01:50:15.760><c> You'</c>

01:50:15.950 --> 01:50:15.960 align:start position:0%
and it will look at what operations You'
 

01:50:15.960 --> 01:50:18.030 align:start position:0%
and it will look at what operations You'
like<01:50:16.080><c> to</c><01:50:16.239><c> use</c><01:50:17.000><c> and</c><01:50:17.159><c> with</c><01:50:17.320><c> the</c><01:50:17.480><c> benefit</c><01:50:17.880><c> of</c>

01:50:18.030 --> 01:50:18.040 align:start position:0%
like to use and with the benefit of
 

01:50:18.040 --> 01:50:20.790 align:start position:0%
like to use and with the benefit of
knowing<01:50:18.679><c> exactly</c><01:50:19.480><c> what's</c><01:50:19.679><c> going</c><01:50:19.800><c> to</c><01:50:20.000><c> happen</c>

01:50:20.790 --> 01:50:20.800 align:start position:0%
knowing exactly what's going to happen
 

01:50:20.800 --> 01:50:22.270 align:start position:0%
knowing exactly what's going to happen
it<01:50:20.920><c> doesn't</c><01:50:21.159><c> have</c><01:50:21.280><c> to</c><01:50:21.400><c> run</c><01:50:21.639><c> in</c><01:50:21.880><c> What's</c><01:50:22.119><c> called</c>

01:50:22.270 --> 01:50:22.280 align:start position:0%
it doesn't have to run in What's called
 

01:50:22.280 --> 01:50:24.470 align:start position:0%
it doesn't have to run in What's called
the<01:50:22.400><c> e</c><01:50:22.880><c> mode</c><01:50:23.400><c> it</c><01:50:23.520><c> doesn't</c><01:50:23.760><c> have</c><01:50:23.880><c> to</c><01:50:24.080><c> just</c><01:50:24.360><c> kind</c>

01:50:24.470 --> 01:50:24.480 align:start position:0%
the e mode it doesn't have to just kind
 

01:50:24.480 --> 01:50:26.709 align:start position:0%
the e mode it doesn't have to just kind
of<01:50:24.679><c> like</c><01:50:24.880><c> go</c><01:50:25.239><c> layer</c><01:50:25.599><c> by</c><01:50:25.800><c> layer</c><01:50:26.440><c> like</c><01:50:26.599><c> the</c>

01:50:26.709 --> 01:50:26.719 align:start position:0%
of like go layer by layer like the
 

01:50:26.719 --> 01:50:29.790 align:start position:0%
of like go layer by layer like the
python<01:50:27.119><c> interpreter</c><01:50:27.960><c> normally</c><01:50:28.960><c> would</c><01:50:29.440><c> start</c>

01:50:29.790 --> 01:50:29.800 align:start position:0%
python interpreter normally would start
 

01:50:29.800 --> 01:50:31.189 align:start position:0%
python interpreter normally would start
at<01:50:30.000><c> the</c>

01:50:31.189 --> 01:50:31.199 align:start position:0%
at the
 

01:50:31.199 --> 01:50:33.589 align:start position:0%
at the
forward<01:50:32.199><c> and</c><01:50:32.440><c> the</c><01:50:32.599><c> python</c><01:50:32.920><c> interpreter</c><01:50:33.400><c> will</c>

01:50:33.589 --> 01:50:33.599 align:start position:0%
forward and the python interpreter will
 

01:50:33.599 --> 01:50:36.070 align:start position:0%
forward and the python interpreter will
go<01:50:34.000><c> okay</c><01:50:34.239><c> let's</c><01:50:34.679><c> do</c><01:50:35.000><c> this</c><01:50:35.199><c> operation</c><01:50:35.800><c> and</c><01:50:35.920><c> then</c>

01:50:36.070 --> 01:50:36.080 align:start position:0%
go okay let's do this operation and then
 

01:50:36.080 --> 01:50:38.030 align:start position:0%
go okay let's do this operation and then
let's<01:50:36.239><c> do</c><01:50:36.440><c> that</c><01:50:36.639><c> operation</c><01:50:37.560><c> and</c><01:50:37.679><c> it</c><01:50:37.800><c> kind</c><01:50:37.920><c> of</c>

01:50:38.030 --> 01:50:38.040 align:start position:0%
let's do that operation and it kind of
 

01:50:38.040 --> 01:50:40.189 align:start position:0%
let's do that operation and it kind of
materializes<01:50:38.760><c> all</c><01:50:38.880><c> the</c><01:50:39.040><c> operations</c><01:50:39.840><c> as</c><01:50:40.000><c> it</c>

01:50:40.189 --> 01:50:40.199 align:start position:0%
materializes all the operations as it
 

01:50:40.199 --> 01:50:43.109 align:start position:0%
materializes all the operations as it
goes<01:50:40.440><c> through</c><01:50:41.360><c> uh</c><01:50:41.480><c> so</c><01:50:41.800><c> these</c><01:50:42.320><c> um</c><01:50:42.560><c> calculations</c>

01:50:43.109 --> 01:50:43.119 align:start position:0%
goes through uh so these um calculations
 

01:50:43.119 --> 01:50:45.830 align:start position:0%
goes through uh so these um calculations
are<01:50:43.320><c> dispatched</c><01:50:43.840><c> and</c><01:50:43.960><c> run</c><01:50:44.360><c> in</c><01:50:44.560><c> this</c><01:50:44.679><c> order</c><01:50:45.599><c> and</c>

01:50:45.830 --> 01:50:45.840 align:start position:0%
are dispatched and run in this order and
 

01:50:45.840 --> 01:50:47.790 align:start position:0%
are dispatched and run in this order and
the<01:50:45.960><c> python</c><01:50:46.280><c> interpreter</c><01:50:47.040><c> and</c><01:50:47.239><c> this</c><01:50:47.480><c> code</c>

01:50:47.790 --> 01:50:47.800 align:start position:0%
the python interpreter and this code
 

01:50:47.800 --> 01:50:49.310 align:start position:0%
the python interpreter and this code
doesn't<01:50:48.119><c> know</c><01:50:48.480><c> what</c><01:50:48.639><c> kind</c><01:50:48.760><c> of</c><01:50:48.880><c> operations</c><01:50:49.199><c> are</c>

01:50:49.310 --> 01:50:49.320 align:start position:0%
doesn't know what kind of operations are
 

01:50:49.320 --> 01:50:51.430 align:start position:0%
doesn't know what kind of operations are
going<01:50:49.400><c> to</c><01:50:49.560><c> happen</c><01:50:49.800><c> later</c><01:50:50.639><c> but</c><01:50:50.800><c> torch</c><01:50:51.079><c> compile</c>

01:50:51.430 --> 01:50:51.440 align:start position:0%
going to happen later but torch compile
 

01:50:51.440 --> 01:50:53.709 align:start position:0%
going to happen later but torch compile
sees<01:50:51.679><c> your</c><01:50:51.840><c> entire</c><01:50:52.159><c> code</c><01:50:52.760><c> at</c><01:50:52.880><c> the</c><01:50:53.000><c> same</c><01:50:53.239><c> time</c>

01:50:53.709 --> 01:50:53.719 align:start position:0%
sees your entire code at the same time
 

01:50:53.719 --> 01:50:55.990 align:start position:0%
sees your entire code at the same time
and<01:50:53.800><c> it's</c><01:50:54.000><c> able</c><01:50:54.280><c> to</c><01:50:54.800><c> know</c><01:50:55.119><c> what</c><01:50:55.280><c> operations</c>

01:50:55.990 --> 01:50:56.000 align:start position:0%
and it's able to know what operations
 

01:50:56.000 --> 01:50:58.270 align:start position:0%
and it's able to know what operations
you<01:50:56.159><c> intend</c><01:50:56.440><c> to</c><01:50:56.599><c> run</c><01:50:57.199><c> and</c><01:50:57.320><c> it</c><01:50:57.400><c> will</c><01:50:57.639><c> kind</c><01:50:57.719><c> of</c>

01:50:58.270 --> 01:50:58.280 align:start position:0%
you intend to run and it will kind of
 

01:50:58.280 --> 01:51:00.430 align:start position:0%
you intend to run and it will kind of
optimize<01:50:58.800><c> that</c><01:50:59.040><c> process</c><01:51:00.000><c> the</c><01:51:00.079><c> first</c><01:51:00.239><c> thing</c><01:51:00.360><c> it</c>

01:51:00.430 --> 01:51:00.440 align:start position:0%
optimize that process the first thing it
 

01:51:00.440 --> 01:51:01.830 align:start position:0%
optimize that process the first thing it
will<01:51:00.639><c> do</c><01:51:00.800><c> is</c><01:51:00.960><c> will</c><01:51:01.199><c> it</c><01:51:01.280><c> will</c><01:51:01.400><c> take</c><01:51:01.560><c> out</c><01:51:01.719><c> the</c>

01:51:01.830 --> 01:51:01.840 align:start position:0%
will do is will it will take out the
 

01:51:01.840 --> 01:51:03.790 align:start position:0%
will do is will it will take out the
python<01:51:02.199><c> interpreter</c><01:51:02.719><c> from</c><01:51:02.920><c> the</c><01:51:03.040><c> forward</c><01:51:03.440><c> pass</c>

01:51:03.790 --> 01:51:03.800 align:start position:0%
python interpreter from the forward pass
 

01:51:03.800 --> 01:51:05.830 align:start position:0%
python interpreter from the forward pass
entirely<01:51:04.639><c> and</c><01:51:04.719><c> it</c><01:51:04.800><c> will</c><01:51:04.960><c> kind</c><01:51:05.079><c> of</c><01:51:05.280><c> compile</c>

01:51:05.830 --> 01:51:05.840 align:start position:0%
entirely and it will kind of compile
 

01:51:05.840 --> 01:51:07.430 align:start position:0%
entirely and it will kind of compile
this<01:51:06.000><c> entire</c><01:51:06.239><c> neural</c><01:51:06.639><c> net</c><01:51:06.840><c> as</c><01:51:06.960><c> a</c><01:51:07.079><c> single</c>

01:51:07.430 --> 01:51:07.440 align:start position:0%
this entire neural net as a single
 

01:51:07.440 --> 01:51:09.589 align:start position:0%
this entire neural net as a single
object<01:51:08.000><c> with</c><01:51:08.159><c> no</c><01:51:08.360><c> python</c><01:51:08.800><c> interpreter</c>

01:51:09.589 --> 01:51:09.599 align:start position:0%
object with no python interpreter
 

01:51:09.599 --> 01:51:11.350 align:start position:0%
object with no python interpreter
involved<01:51:10.400><c> so</c><01:51:10.560><c> it</c><01:51:10.679><c> knows</c><01:51:10.920><c> exactly</c><01:51:11.199><c> what's</c>

01:51:11.350 --> 01:51:11.360 align:start position:0%
involved so it knows exactly what's
 

01:51:11.360 --> 01:51:12.950 align:start position:0%
involved so it knows exactly what's
going<01:51:11.440><c> to</c><01:51:11.560><c> run</c><01:51:11.800><c> and</c><01:51:11.920><c> we'll</c><01:51:12.079><c> just</c><01:51:12.199><c> run</c><01:51:12.480><c> that</c><01:51:12.840><c> and</c>

01:51:12.950 --> 01:51:12.960 align:start position:0%
going to run and we'll just run that and
 

01:51:12.960 --> 01:51:14.149 align:start position:0%
going to run and we'll just run that and
it's<01:51:13.119><c> all</c><01:51:13.320><c> going</c><01:51:13.400><c> to</c><01:51:13.520><c> be</c><01:51:13.639><c> running</c><01:51:13.920><c> in</c>

01:51:14.149 --> 01:51:14.159 align:start position:0%
it's all going to be running in
 

01:51:14.159 --> 01:51:15.629 align:start position:0%
it's all going to be running in
efficient

01:51:15.629 --> 01:51:15.639 align:start position:0%
efficient
 

01:51:15.639 --> 01:51:18.950 align:start position:0%
efficient
code<01:51:16.639><c> uh</c><01:51:16.800><c> the</c><01:51:16.920><c> second</c><01:51:17.199><c> thing</c><01:51:17.360><c> that</c><01:51:17.520><c> happens</c><01:51:18.040><c> is</c>

01:51:18.950 --> 01:51:18.960 align:start position:0%
code uh the second thing that happens is
 

01:51:18.960 --> 01:51:21.950 align:start position:0%
code uh the second thing that happens is
uh<01:51:19.159><c> this</c><01:51:19.719><c> read</c><01:51:20.480><c> write</c><01:51:21.360><c> that</c><01:51:21.480><c> they</c><01:51:21.599><c> mentioned</c>

01:51:21.950 --> 01:51:21.960 align:start position:0%
uh this read write that they mentioned
 

01:51:21.960 --> 01:51:23.950 align:start position:0%
uh this read write that they mentioned
very<01:51:22.119><c> briefly</c><01:51:22.760><c> so</c><01:51:22.920><c> a</c><01:51:23.040><c> good</c><01:51:23.199><c> example</c><01:51:23.520><c> of</c><01:51:23.679><c> that</c><01:51:23.880><c> I</c>

01:51:23.950 --> 01:51:23.960 align:start position:0%
very briefly so a good example of that I
 

01:51:23.960 --> 01:51:25.750 align:start position:0%
very briefly so a good example of that I
think<01:51:24.159><c> is</c><01:51:24.360><c> the</c><01:51:24.560><c> G</c><01:51:24.840><c> nonlinearity</c><01:51:25.480><c> that</c><01:51:25.599><c> we've</c>

01:51:25.750 --> 01:51:25.760 align:start position:0%
think is the G nonlinearity that we've
 

01:51:25.760 --> 01:51:28.109 align:start position:0%
think is the G nonlinearity that we've
been<01:51:25.880><c> looking</c><01:51:26.159><c> at</c><01:51:27.000><c> so</c><01:51:27.199><c> here</c><01:51:27.280><c> we</c><01:51:27.440><c> use</c><01:51:27.599><c> the</c><01:51:27.719><c> n</c><01:51:27.840><c> and</c>

01:51:28.109 --> 01:51:28.119 align:start position:0%
been looking at so here we use the n and
 

01:51:28.119 --> 01:51:32.350 align:start position:0%
been looking at so here we use the n and
G<01:51:29.119><c> now</c><01:51:29.599><c> this</c><01:51:29.840><c> here</c><01:51:30.320><c> is</c><01:51:30.599><c> me</c><01:51:31.280><c> uh</c><01:51:31.760><c> basically</c><01:51:32.119><c> just</c>

01:51:32.350 --> 01:51:32.360 align:start position:0%
G now this here is me uh basically just
 

01:51:32.360 --> 01:51:35.470 align:start position:0%
G now this here is me uh basically just
breaking<01:51:32.760><c> up</c><01:51:33.199><c> the</c><01:51:33.360><c> inang</c><01:51:33.920><c> Galu</c><01:51:34.920><c> uh</c><01:51:35.159><c> which</c><01:51:35.280><c> you</c>

01:51:35.470 --> 01:51:35.480 align:start position:0%
breaking up the inang Galu uh which you
 

01:51:35.480 --> 01:51:37.910 align:start position:0%
breaking up the inang Galu uh which you
remember<01:51:35.840><c> has</c><01:51:36.079><c> this</c><01:51:36.400><c> formula</c><01:51:37.320><c> so</c><01:51:37.520><c> this</c><01:51:37.719><c> here</c>

01:51:37.910 --> 01:51:37.920 align:start position:0%
remember has this formula so this here
 

01:51:37.920 --> 01:51:39.709 align:start position:0%
remember has this formula so this here
is<01:51:38.040><c> the</c><01:51:38.199><c> equivalent</c><01:51:38.920><c> implementation</c><01:51:39.520><c> to</c>

01:51:39.709 --> 01:51:39.719 align:start position:0%
is the equivalent implementation to
 

01:51:39.719 --> 01:51:41.669 align:start position:0%
is the equivalent implementation to
what's<01:51:39.880><c> happening</c><01:51:40.159><c> inside</c><01:51:40.520><c> g</c><01:51:40.960><c> algorithmic</c><01:51:41.520><c> l</c>

01:51:41.669 --> 01:51:41.679 align:start position:0%
what's happening inside g algorithmic l
 

01:51:41.679 --> 01:51:42.310 align:start position:0%
what's happening inside g algorithmic l
it's

01:51:42.310 --> 01:51:42.320 align:start position:0%
it's
 

01:51:42.320 --> 01:51:46.030 align:start position:0%
it's
identical<01:51:43.320><c> Now</c><01:51:44.199><c> by</c><01:51:44.400><c> default</c><01:51:44.960><c> if</c><01:51:45.480><c> uh</c><01:51:45.599><c> we</c><01:51:45.800><c> just</c>

01:51:46.030 --> 01:51:46.040 align:start position:0%
identical Now by default if uh we just
 

01:51:46.040 --> 01:51:48.870 align:start position:0%
identical Now by default if uh we just
we<01:51:46.239><c> using</c><01:51:46.679><c> this</c><01:51:46.840><c> instead</c><01:51:47.040><c> of</c><01:51:47.159><c> ending.</c><01:51:47.639><c> G</c><01:51:48.000><c> here</c>

01:51:48.870 --> 01:51:48.880 align:start position:0%
we using this instead of ending. G here
 

01:51:48.880 --> 01:51:51.310 align:start position:0%
we using this instead of ending. G here
what<01:51:49.000><c> would</c><01:51:49.199><c> happen</c><01:51:49.719><c> without</c><01:51:50.040><c> torch</c><01:51:50.360><c> compile</c>

01:51:51.310 --> 01:51:51.320 align:start position:0%
what would happen without torch compile
 

01:51:51.320 --> 01:51:52.830 align:start position:0%
what would happen without torch compile
well<01:51:51.480><c> the</c><01:51:51.599><c> python</c><01:51:51.880><c> interpreter</c><01:51:52.280><c> would</c><01:51:52.719><c> make</c>

01:51:52.830 --> 01:51:52.840 align:start position:0%
well the python interpreter would make
 

01:51:52.840 --> 01:51:54.709 align:start position:0%
well the python interpreter would make
its<01:51:53.000><c> way</c><01:51:53.239><c> here</c><01:51:53.840><c> and</c><01:51:53.960><c> then</c><01:51:54.040><c> it</c><01:51:54.119><c> would</c><01:51:54.280><c> be</c><01:51:54.520><c> okay</c>

01:51:54.709 --> 01:51:54.719 align:start position:0%
its way here and then it would be okay
 

01:51:54.719 --> 01:51:58.109 align:start position:0%
its way here and then it would be okay
well<01:51:54.920><c> there's</c><01:51:55.040><c> an</c><01:51:55.199><c> input</c><01:51:56.119><c> well</c><01:51:56.320><c> let</c><01:51:56.480><c> me</c><01:51:57.119><c> first</c>

01:51:58.109 --> 01:51:58.119 align:start position:0%
well there's an input well let me first
 

01:51:58.119 --> 01:51:59.669 align:start position:0%
well there's an input well let me first
let<01:51:58.280><c> me</c><01:51:58.440><c> raise</c><01:51:58.719><c> this</c><01:51:58.880><c> input</c><01:51:59.119><c> to</c><01:51:59.239><c> the</c><01:51:59.400><c> third</c>

01:51:59.669 --> 01:51:59.679 align:start position:0%
let me raise this input to the third
 

01:51:59.679 --> 01:52:01.229 align:start position:0%
let me raise this input to the third
power<01:52:00.280><c> and</c><01:52:00.360><c> it's</c><01:52:00.560><c> going</c><01:52:00.679><c> to</c><01:52:00.800><c> dispatch</c><01:52:01.159><c> a</c>

01:52:01.229 --> 01:52:01.239 align:start position:0%
power and it's going to dispatch a
 

01:52:01.239 --> 01:52:03.310 align:start position:0%
power and it's going to dispatch a
kernel<01:52:01.800><c> that</c><01:52:01.920><c> takes</c><01:52:02.119><c> your</c><01:52:02.320><c> input</c><01:52:02.760><c> and</c><01:52:02.960><c> raises</c>

01:52:03.310 --> 01:52:03.320 align:start position:0%
kernel that takes your input and raises
 

01:52:03.320 --> 01:52:05.870 align:start position:0%
kernel that takes your input and raises
it<01:52:03.400><c> to</c><01:52:03.520><c> the</c><01:52:03.639><c> third</c><01:52:03.960><c> power</c><01:52:04.960><c> and</c><01:52:05.320><c> that</c><01:52:05.480><c> kernel</c>

01:52:05.870 --> 01:52:05.880 align:start position:0%
it to the third power and that kernel
 

01:52:05.880 --> 01:52:08.910 align:start position:0%
it to the third power and that kernel
will<01:52:06.400><c> run</c><01:52:07.400><c> and</c><01:52:07.760><c> when</c><01:52:07.960><c> this</c><01:52:08.119><c> kernel</c><01:52:08.400><c> runs</c><01:52:08.800><c> what</c>

01:52:08.910 --> 01:52:08.920 align:start position:0%
will run and when this kernel runs what
 

01:52:08.920 --> 01:52:11.430 align:start position:0%
will run and when this kernel runs what
ends<01:52:09.119><c> up</c><01:52:09.280><c> happening</c><01:52:09.760><c> is</c><01:52:10.599><c> this</c><01:52:10.840><c> input</c><01:52:11.280><c> is</c>

01:52:11.430 --> 01:52:11.440 align:start position:0%
ends up happening is this input is
 

01:52:11.440 --> 01:52:13.870 align:start position:0%
ends up happening is this input is
stored<01:52:11.840><c> in</c><01:52:12.000><c> the</c><01:52:12.119><c> memory</c><01:52:12.520><c> of</c><01:52:12.639><c> the</c><01:52:12.760><c> GPU</c><01:52:13.679><c> so</c>

01:52:13.870 --> 01:52:13.880 align:start position:0%
stored in the memory of the GPU so
 

01:52:13.880 --> 01:52:16.669 align:start position:0%
stored in the memory of the GPU so
here's<01:52:14.079><c> a</c><01:52:14.199><c> helpful</c><01:52:15.040><c> example</c><01:52:16.040><c> of</c><01:52:16.199><c> the</c><01:52:16.320><c> layout</c>

01:52:16.669 --> 01:52:16.679 align:start position:0%
here's a helpful example of the layout
 

01:52:16.679 --> 01:52:18.669 align:start position:0%
here's a helpful example of the layout
of<01:52:16.960><c> what's</c><01:52:17.159><c> happening</c><01:52:17.560><c> right</c><01:52:18.320><c> you</c><01:52:18.440><c> have</c><01:52:18.560><c> your</c>

01:52:18.669 --> 01:52:18.679 align:start position:0%
of what's happening right you have your
 

01:52:18.679 --> 01:52:21.030 align:start position:0%
of what's happening right you have your
CPU<01:52:19.440><c> this</c><01:52:19.560><c> is</c><01:52:19.719><c> in</c><01:52:19.880><c> every</c><01:52:20.079><c> single</c><01:52:20.360><c> computer</c>

01:52:21.030 --> 01:52:21.040 align:start position:0%
CPU this is in every single computer
 

01:52:21.040 --> 01:52:22.990 align:start position:0%
CPU this is in every single computer
there's<01:52:21.239><c> a</c><01:52:21.360><c> few</c><01:52:21.599><c> cores</c><01:52:21.960><c> in</c><01:52:22.119><c> there</c><01:52:22.719><c> and</c><01:52:22.840><c> you</c>

01:52:22.990 --> 01:52:23.000 align:start position:0%
there's a few cores in there and you
 

01:52:23.000 --> 01:52:26.470 align:start position:0%
there's a few cores in there and you
have<01:52:23.199><c> your</c><01:52:23.760><c> uh</c><01:52:23.960><c> Ram</c><01:52:24.719><c> uh</c><01:52:24.840><c> your</c><01:52:25.239><c> memory</c><01:52:26.239><c> and</c><01:52:26.360><c> the</c>

01:52:26.470 --> 01:52:26.480 align:start position:0%
have your uh Ram uh your memory and the
 

01:52:26.480 --> 01:52:28.350 align:start position:0%
have your uh Ram uh your memory and the
CPU<01:52:26.880><c> can</c><01:52:27.000><c> talk</c><01:52:27.159><c> to</c><01:52:27.280><c> the</c><01:52:27.360><c> memory</c><01:52:27.800><c> and</c><01:52:28.119><c> this</c><01:52:28.239><c> is</c>

01:52:28.350 --> 01:52:28.360 align:start position:0%
CPU can talk to the memory and this is
 

01:52:28.360 --> 01:52:30.069 align:start position:0%
CPU can talk to the memory and this is
all<01:52:28.560><c> well</c><01:52:28.760><c> known</c><01:52:29.320><c> but</c><01:52:29.440><c> now</c><01:52:29.560><c> we've</c><01:52:29.760><c> added</c><01:52:29.960><c> the</c>

01:52:30.069 --> 01:52:30.079 align:start position:0%
all well known but now we've added the
 

01:52:30.079 --> 01:52:32.189 align:start position:0%
all well known but now we've added the
GPU<01:52:31.000><c> and</c><01:52:31.079><c> the</c><01:52:31.199><c> GPU</c><01:52:31.520><c> is</c><01:52:31.599><c> a</c><01:52:31.679><c> slightly</c><01:52:31.960><c> different</c>

01:52:32.189 --> 01:52:32.199 align:start position:0%
GPU and the GPU is a slightly different
 

01:52:32.199 --> 01:52:33.550 align:start position:0%
GPU and the GPU is a slightly different
architecture<01:52:32.679><c> of</c><01:52:32.840><c> course</c><01:52:33.280><c> they</c><01:52:33.400><c> can</c>

01:52:33.550 --> 01:52:33.560 align:start position:0%
architecture of course they can
 

01:52:33.560 --> 01:52:35.470 align:start position:0%
architecture of course they can
communicate<01:52:34.520><c> and</c><01:52:34.639><c> it's</c><01:52:34.840><c> different</c><01:52:35.159><c> in</c><01:52:35.320><c> that</c>

01:52:35.470 --> 01:52:35.480 align:start position:0%
communicate and it's different in that
 

01:52:35.480 --> 01:52:38.629 align:start position:0%
communicate and it's different in that
it's<01:52:35.679><c> got</c><01:52:36.000><c> a</c><01:52:36.199><c> lot</c><01:52:36.440><c> more</c><01:52:36.760><c> course</c><01:52:37.400><c> than</c><01:52:37.560><c> a</c><01:52:37.679><c> CPU</c>

01:52:38.629 --> 01:52:38.639 align:start position:0%
it's got a lot more course than a CPU
 

01:52:38.639 --> 01:52:40.270 align:start position:0%
it's got a lot more course than a CPU
all<01:52:38.800><c> of</c><01:52:38.920><c> those</c><01:52:39.040><c> cores</c><01:52:39.320><c> are</c><01:52:39.480><c> individually</c><01:52:40.199><c> a</c>

01:52:40.270 --> 01:52:40.280 align:start position:0%
all of those cores are individually a
 

01:52:40.280 --> 01:52:43.430 align:start position:0%
all of those cores are individually a
lot<01:52:40.480><c> simpler</c><01:52:41.040><c> too</c><01:52:42.040><c> but</c><01:52:42.239><c> it</c><01:52:42.440><c> also</c><01:52:42.760><c> has</c><01:52:42.960><c> memory</c>

01:52:43.430 --> 01:52:43.440 align:start position:0%
lot simpler too but it also has memory
 

01:52:43.440 --> 01:52:47.589 align:start position:0%
lot simpler too but it also has memory
right<01:52:43.760><c> this</c><01:52:44.119><c> high</c><01:52:44.760><c> bandwidth</c><01:52:46.000><c> memory</c><01:52:47.000><c> I'm</c>

01:52:47.589 --> 01:52:47.599 align:start position:0%
right this high bandwidth memory I'm
 

01:52:47.599 --> 01:52:49.709 align:start position:0%
right this high bandwidth memory I'm
sorry<01:52:47.840><c> if</c><01:52:47.960><c> I'm</c><01:52:48.079><c> botching</c><01:52:48.360><c> it</c><01:52:48.560><c> hbm</c><01:52:49.199><c> I</c><01:52:49.320><c> don't</c>

01:52:49.709 --> 01:52:49.719 align:start position:0%
sorry if I'm botching it hbm I don't
 

01:52:49.719 --> 01:52:51.910 align:start position:0%
sorry if I'm botching it hbm I don't
even<01:52:49.920><c> know</c><01:52:50.079><c> what</c><01:52:50.199><c> that</c><01:52:50.320><c> stands</c><01:52:50.639><c> for</c><01:52:51.639><c> I'm</c><01:52:51.800><c> just</c>

01:52:51.910 --> 01:52:51.920 align:start position:0%
even know what that stands for I'm just
 

01:52:51.920 --> 01:52:53.229 align:start position:0%
even know what that stands for I'm just
realizing<01:52:52.280><c> that</c>

01:52:53.229 --> 01:52:53.239 align:start position:0%
realizing that
 

01:52:53.239 --> 01:52:54.910 align:start position:0%
realizing that
but<01:52:53.520><c> uh</c><01:52:53.639><c> this</c><01:52:53.760><c> is</c><01:52:53.880><c> the</c><01:52:54.000><c> memory</c><01:52:54.440><c> and</c><01:52:54.560><c> it's</c><01:52:54.719><c> very</c>

01:52:54.910 --> 01:52:54.920 align:start position:0%
but uh this is the memory and it's very
 

01:52:54.920 --> 01:52:58.470 align:start position:0%
but uh this is the memory and it's very
equivalent<01:52:55.400><c> to</c><01:52:56.239><c> uh</c><01:52:56.719><c> RAM</c><01:52:57.239><c> basically</c><01:52:57.760><c> in</c><01:52:57.920><c> the</c>

01:52:58.470 --> 01:52:58.480 align:start position:0%
equivalent to uh RAM basically in the
 

01:52:58.480 --> 01:53:00.229 align:start position:0%
equivalent to uh RAM basically in the
computer<01:52:59.480><c> and</c><01:52:59.599><c> what's</c><01:52:59.760><c> happening</c><01:53:00.000><c> is</c><01:53:00.079><c> that</c>

01:53:00.229 --> 01:53:00.239 align:start position:0%
computer and what's happening is that
 

01:53:00.239 --> 01:53:02.550 align:start position:0%
computer and what's happening is that
input<01:53:00.599><c> is</c><01:53:00.719><c> living</c><01:53:00.960><c> in</c><01:53:01.159><c> the</c><01:53:01.280><c> memory</c><01:53:02.280><c> and</c><01:53:02.440><c> when</c>

01:53:02.550 --> 01:53:02.560 align:start position:0%
input is living in the memory and when
 

01:53:02.560 --> 01:53:05.149 align:start position:0%
input is living in the memory and when
you<01:53:02.719><c> do</c><01:53:03.360><c> input</c>

01:53:05.149 --> 01:53:05.159 align:start position:0%
you do input
 

01:53:05.159 --> 01:53:09.790 align:start position:0%
you do input
cubed<01:53:06.159><c> this</c><01:53:06.480><c> has</c><01:53:06.639><c> to</c><01:53:07.159><c> travel</c><01:53:08.159><c> to</c><01:53:08.480><c> the</c><01:53:08.639><c> GPU</c><01:53:09.560><c> to</c>

01:53:09.790 --> 01:53:09.800 align:start position:0%
cubed this has to travel to the GPU to
 

01:53:09.800 --> 01:53:12.109 align:start position:0%
cubed this has to travel to the GPU to
the<01:53:09.960><c> course</c><01:53:10.880><c> and</c><01:53:11.000><c> to</c><01:53:11.159><c> all</c><01:53:11.320><c> the</c><01:53:11.520><c> caches</c><01:53:11.880><c> and</c>

01:53:12.109 --> 01:53:12.119 align:start position:0%
the course and to all the caches and
 

01:53:12.119 --> 01:53:15.149 align:start position:0%
the course and to all the caches and
registers<01:53:12.960><c> on</c><01:53:13.199><c> the</c><01:53:13.400><c> actual</c><01:53:13.840><c> chip</c><01:53:14.239><c> of</c><01:53:14.400><c> this</c>

01:53:15.149 --> 01:53:15.159 align:start position:0%
registers on the actual chip of this
 

01:53:15.159 --> 01:53:17.910 align:start position:0%
registers on the actual chip of this
GPU<01:53:16.159><c> and</c><01:53:16.400><c> it</c><01:53:16.560><c> has</c><01:53:16.679><c> to</c><01:53:16.840><c> calculate</c><01:53:17.400><c> the</c><01:53:17.639><c> all</c><01:53:17.800><c> the</c>

01:53:17.910 --> 01:53:17.920 align:start position:0%
GPU and it has to calculate the all the
 

01:53:17.920 --> 01:53:19.790 align:start position:0%
GPU and it has to calculate the all the
elements<01:53:18.239><c> to</c><01:53:18.360><c> the</c><01:53:18.480><c> third</c><01:53:19.079><c> and</c><01:53:19.199><c> then</c><01:53:19.320><c> it</c><01:53:19.440><c> saves</c>

01:53:19.790 --> 01:53:19.800 align:start position:0%
elements to the third and then it saves
 

01:53:19.800 --> 01:53:22.669 align:start position:0%
elements to the third and then it saves
the<01:53:19.960><c> result</c><01:53:20.320><c> back</c><01:53:20.440><c> to</c><01:53:20.560><c> the</c><01:53:21.079><c> memory</c><01:53:22.079><c> and</c><01:53:22.280><c> it's</c>

01:53:22.669 --> 01:53:22.679 align:start position:0%
the result back to the memory and it's
 

01:53:22.679 --> 01:53:24.990 align:start position:0%
the result back to the memory and it's
this<01:53:23.199><c> uh</c><01:53:23.520><c> travel</c><01:53:23.960><c> time</c><01:53:24.280><c> that</c><01:53:24.440><c> actually</c><01:53:24.679><c> causes</c>

01:53:24.990 --> 01:53:25.000 align:start position:0%
this uh travel time that actually causes
 

01:53:25.000 --> 01:53:28.229 align:start position:0%
this uh travel time that actually causes
a<01:53:25.119><c> lot</c><01:53:25.239><c> of</c><01:53:25.360><c> issues</c><01:53:26.199><c> so</c><01:53:26.800><c> here</c><01:53:27.800><c> remember</c><01:53:28.119><c> this</c>

01:53:28.229 --> 01:53:28.239 align:start position:0%
a lot of issues so here remember this
 

01:53:28.239 --> 01:53:30.270 align:start position:0%
a lot of issues so here remember this
memory<01:53:28.599><c> bandwidth</c><01:53:29.480><c> we</c><01:53:29.599><c> can</c><01:53:29.880><c> communicate</c>

01:53:30.270 --> 01:53:30.280 align:start position:0%
memory bandwidth we can communicate
 

01:53:30.280 --> 01:53:31.950 align:start position:0%
memory bandwidth we can communicate
about<01:53:30.480><c> 2</c><01:53:30.639><c> terabytes</c><01:53:31.079><c> per</c><01:53:31.199><c> second</c><01:53:31.560><c> which</c><01:53:31.679><c> is</c><01:53:31.800><c> a</c>

01:53:31.950 --> 01:53:31.960 align:start position:0%
about 2 terabytes per second which is a
 

01:53:31.960 --> 01:53:35.629 align:start position:0%
about 2 terabytes per second which is a
lot<01:53:32.760><c> but</c><01:53:33.760><c> also</c><01:53:34.760><c> we</c><01:53:34.920><c> have</c><01:53:35.000><c> to</c><01:53:35.119><c> Traverse</c><01:53:35.520><c> this</c>

01:53:35.629 --> 01:53:35.639 align:start position:0%
lot but also we have to Traverse this
 

01:53:35.639 --> 01:53:37.669 align:start position:0%
lot but also we have to Traverse this
link<01:53:35.880><c> and</c><01:53:36.000><c> it's</c><01:53:36.159><c> very</c><01:53:36.320><c> slow</c><01:53:37.119><c> so</c><01:53:37.320><c> here</c><01:53:37.440><c> on</c><01:53:37.560><c> the</c>

01:53:37.669 --> 01:53:37.679 align:start position:0%
link and it's very slow so here on the
 

01:53:37.679 --> 01:53:39.589 align:start position:0%
link and it's very slow so here on the
GPU<01:53:38.079><c> we're</c><01:53:38.280><c> on</c><01:53:38.599><c> chip</c><01:53:39.000><c> and</c><01:53:39.159><c> everything</c><01:53:39.440><c> is</c>

01:53:39.589 --> 01:53:39.599 align:start position:0%
GPU we're on chip and everything is
 

01:53:39.599 --> 01:53:41.629 align:start position:0%
GPU we're on chip and everything is
super<01:53:39.920><c> fast</c><01:53:40.159><c> within</c><01:53:40.360><c> the</c><01:53:40.520><c> chip</c><01:53:41.159><c> but</c><01:53:41.360><c> going</c><01:53:41.480><c> to</c>

01:53:41.629 --> 01:53:41.639 align:start position:0%
super fast within the chip but going to
 

01:53:41.639 --> 01:53:43.470 align:start position:0%
super fast within the chip but going to
the<01:53:41.719><c> memory</c><01:53:42.040><c> is</c><01:53:42.199><c> extremely</c><01:53:42.639><c> expensive</c><01:53:43.079><c> takes</c>

01:53:43.470 --> 01:53:43.480 align:start position:0%
the memory is extremely expensive takes
 

01:53:43.480 --> 01:53:46.589 align:start position:0%
the memory is extremely expensive takes
extremely<01:53:43.960><c> long</c><01:53:44.159><c> amount</c><01:53:44.360><c> of</c><01:53:44.560><c> time</c><01:53:45.400><c> and</c><01:53:45.520><c> so</c><01:53:46.199><c> we</c>

01:53:46.589 --> 01:53:46.599 align:start position:0%
extremely long amount of time and so we
 

01:53:46.599 --> 01:53:48.790 align:start position:0%
extremely long amount of time and so we
load<01:53:46.920><c> the</c><01:53:47.040><c> input</c><01:53:47.560><c> do</c><01:53:47.719><c> the</c><01:53:47.880><c> calculations</c><01:53:48.520><c> and</c>

01:53:48.790 --> 01:53:48.800 align:start position:0%
load the input do the calculations and
 

01:53:48.800 --> 01:53:51.550 align:start position:0%
load the input do the calculations and
load<01:53:49.159><c> back</c><01:53:49.360><c> the</c><01:53:49.520><c> output</c><01:53:50.520><c> and</c><01:53:50.920><c> this</c><01:53:51.079><c> round</c><01:53:51.360><c> trip</c>

01:53:51.550 --> 01:53:51.560 align:start position:0%
load back the output and this round trip
 

01:53:51.560 --> 01:53:52.990 align:start position:0%
load back the output and this round trip
takes<01:53:51.760><c> a</c><01:53:51.840><c> lot</c><01:53:51.960><c> of</c><01:53:52.119><c> time</c>

01:53:52.990 --> 01:53:53.000 align:start position:0%
takes a lot of time
 

01:53:53.000 --> 01:53:54.870 align:start position:0%
takes a lot of time
and<01:53:53.159><c> now</c><01:53:53.400><c> right</c><01:53:53.560><c> after</c><01:53:53.760><c> we</c><01:53:53.920><c> do</c><01:53:54.159><c> that</c><01:53:54.560><c> we</c>

01:53:54.870 --> 01:53:54.880 align:start position:0%
and now right after we do that we
 

01:53:54.880 --> 01:53:57.270 align:start position:0%
and now right after we do that we
multiply<01:53:55.400><c> by</c><01:53:55.599><c> this</c><01:53:56.000><c> constant</c><01:53:56.920><c> so</c><01:53:57.119><c> what</c>

01:53:57.270 --> 01:53:57.280 align:start position:0%
multiply by this constant so what
 

01:53:57.280 --> 01:53:59.470 align:start position:0%
multiply by this constant so what
happens<01:53:58.000><c> then</c><01:53:58.560><c> is</c><01:53:58.719><c> we</c><01:53:58.880><c> dispatch</c><01:53:59.239><c> another</c>

01:53:59.470 --> 01:53:59.480 align:start position:0%
happens then is we dispatch another
 

01:53:59.480 --> 01:54:02.709 align:start position:0%
happens then is we dispatch another
kernel<01:54:00.400><c> and</c><01:54:00.560><c> then</c><01:54:00.840><c> the</c><01:54:01.040><c> result</c><01:54:01.480><c> travels</c><01:54:01.960><c> back</c>

01:54:02.709 --> 01:54:02.719 align:start position:0%
kernel and then the result travels back
 

01:54:02.719 --> 01:54:03.950 align:start position:0%
kernel and then the result travels back
all<01:54:02.880><c> the</c><01:54:03.000><c> elements</c><01:54:03.280><c> get</c><01:54:03.400><c> multiplied</c><01:54:03.800><c> by</c><01:54:03.880><c> a</c>

01:54:03.950 --> 01:54:03.960 align:start position:0%
all the elements get multiplied by a
 

01:54:03.960 --> 01:54:06.350 align:start position:0%
all the elements get multiplied by a
constant<01:54:04.679><c> and</c><01:54:04.800><c> then</c><01:54:04.960><c> the</c><01:54:05.119><c> results</c><01:54:05.719><c> travel</c>

01:54:06.350 --> 01:54:06.360 align:start position:0%
constant and then the results travel
 

01:54:06.360 --> 01:54:09.109 align:start position:0%
constant and then the results travel
back<01:54:06.560><c> to</c><01:54:06.719><c> the</c><01:54:07.079><c> memory</c><01:54:08.079><c> and</c><01:54:08.239><c> then</c><01:54:08.639><c> we</c><01:54:08.760><c> take</c><01:54:08.920><c> the</c>

01:54:09.109 --> 01:54:09.119 align:start position:0%
back to the memory and then we take the
 

01:54:09.119 --> 01:54:12.430 align:start position:0%
back to the memory and then we take the
result<01:54:09.760><c> and</c><01:54:09.880><c> we</c><01:54:10.079><c> add</c><01:54:10.320><c> back</c><01:54:10.639><c> input</c><01:54:11.639><c> and</c><01:54:11.800><c> so</c><01:54:12.280><c> this</c>

01:54:12.430 --> 01:54:12.440 align:start position:0%
result and we add back input and so this
 

01:54:12.440 --> 01:54:15.310 align:start position:0%
result and we add back input and so this
entire<01:54:12.719><c> thing</c><01:54:13.119><c> again</c><01:54:13.440><c> travels</c><01:54:14.000><c> to</c><01:54:14.159><c> the</c><01:54:14.320><c> GPU</c>

01:54:15.310 --> 01:54:15.320 align:start position:0%
entire thing again travels to the GPU
 

01:54:15.320 --> 01:54:18.189 align:start position:0%
entire thing again travels to the GPU
adds<01:54:15.599><c> the</c><01:54:15.719><c> inputs</c><01:54:16.400><c> and</c><01:54:16.840><c> gets</c><01:54:17.040><c> written</c><01:54:17.440><c> back</c><01:54:18.040><c> so</c>

01:54:18.189 --> 01:54:18.199 align:start position:0%
adds the inputs and gets written back so
 

01:54:18.199 --> 01:54:20.589 align:start position:0%
adds the inputs and gets written back so
we're<01:54:18.400><c> making</c><01:54:18.639><c> all</c><01:54:18.880><c> these</c><01:54:19.480><c> round</c><01:54:19.840><c> trips</c><01:54:20.400><c> from</c>

01:54:20.589 --> 01:54:20.599 align:start position:0%
we're making all these round trips from
 

01:54:20.599 --> 01:54:22.669 align:start position:0%
we're making all these round trips from
the<01:54:20.719><c> memory</c><01:54:21.280><c> to</c><01:54:21.639><c> actually</c><01:54:21.880><c> where</c><01:54:22.000><c> the</c><01:54:22.079><c> comput</c>

01:54:22.669 --> 01:54:22.679 align:start position:0%
the memory to actually where the comput
 

01:54:22.679 --> 01:54:24.870 align:start position:0%
the memory to actually where the comput
happens<01:54:23.440><c> because</c><01:54:23.639><c> all</c><01:54:23.800><c> the</c><01:54:23.920><c> tensor</c><01:54:24.280><c> cores</c><01:54:24.639><c> and</c>

01:54:24.870 --> 01:54:24.880 align:start position:0%
happens because all the tensor cores and
 

01:54:24.880 --> 01:54:26.750 align:start position:0%
happens because all the tensor cores and
alus<01:54:25.400><c> and</c><01:54:25.599><c> everything</c><01:54:25.960><c> like</c><01:54:26.159><c> that</c><01:54:26.480><c> is</c><01:54:26.639><c> all</c>

01:54:26.750 --> 01:54:26.760 align:start position:0%
alus and everything like that is all
 

01:54:26.760 --> 01:54:28.870 align:start position:0%
alus and everything like that is all
stored<01:54:27.119><c> on</c><01:54:27.239><c> the</c><01:54:27.360><c> chip</c><01:54:27.560><c> in</c><01:54:27.639><c> the</c><01:54:27.800><c> GPU</c><01:54:28.639><c> so</c><01:54:28.760><c> we're</c>

01:54:28.870 --> 01:54:28.880 align:start position:0%
stored on the chip in the GPU so we're
 

01:54:28.880 --> 01:54:31.709 align:start position:0%
stored on the chip in the GPU so we're
doing<01:54:29.079><c> a</c><01:54:29.159><c> ton</c><01:54:29.320><c> of</c><01:54:29.440><c> round</c><01:54:29.679><c> trips</c><01:54:30.520><c> and</c><01:54:30.719><c> pytorch</c>

01:54:31.709 --> 01:54:31.719 align:start position:0%
doing a ton of round trips and pytorch
 

01:54:31.719 --> 01:54:33.910 align:start position:0%
doing a ton of round trips and pytorch
uh<01:54:32.079><c> without</c><01:54:32.320><c> using</c><01:54:32.560><c> torch</c><01:54:32.840><c> compile</c><01:54:33.599><c> doesn't</c>

01:54:33.910 --> 01:54:33.920 align:start position:0%
uh without using torch compile doesn't
 

01:54:33.920 --> 01:54:36.310 align:start position:0%
uh without using torch compile doesn't
know<01:54:34.920><c> to</c><01:54:35.159><c> optimize</c><01:54:35.639><c> this</c><01:54:35.800><c> because</c><01:54:35.960><c> it</c><01:54:36.079><c> doesn't</c>

01:54:36.310 --> 01:54:36.320 align:start position:0%
know to optimize this because it doesn't
 

01:54:36.320 --> 01:54:37.470 align:start position:0%
know to optimize this because it doesn't
know<01:54:36.560><c> what</c><01:54:36.679><c> kind</c><01:54:36.800><c> of</c><01:54:36.920><c> operations</c><01:54:37.280><c> you're</c>

01:54:37.470 --> 01:54:37.480 align:start position:0%
know what kind of operations you're
 

01:54:37.480 --> 01:54:39.950 align:start position:0%
know what kind of operations you're
running<01:54:37.760><c> later</c><01:54:38.360><c> you're</c><01:54:38.520><c> just</c><01:54:38.679><c> telling</c><01:54:38.960><c> it</c>

01:54:39.950 --> 01:54:39.960 align:start position:0%
running later you're just telling it
 

01:54:39.960 --> 01:54:41.870 align:start position:0%
running later you're just telling it
raise<01:54:40.239><c> the</c><01:54:40.360><c> power</c><01:54:40.560><c> to</c><01:54:40.679><c> the</c><01:54:40.760><c> third</c><01:54:41.520><c> then</c><01:54:41.679><c> do</c>

01:54:41.870 --> 01:54:41.880 align:start position:0%
raise the power to the third then do
 

01:54:41.880 --> 01:54:43.229 align:start position:0%
raise the power to the third then do
this<01:54:42.119><c> then</c><01:54:42.280><c> do</c><01:54:42.440><c> that</c><01:54:42.599><c> and</c><01:54:42.719><c> it</c><01:54:42.760><c> will</c><01:54:42.920><c> just</c><01:54:43.040><c> do</c>

01:54:43.229 --> 01:54:43.239 align:start position:0%
this then do that and it will just do
 

01:54:43.239 --> 01:54:45.189 align:start position:0%
this then do that and it will just do
that<01:54:43.360><c> in</c><01:54:43.520><c> that</c><01:54:43.679><c> sequence</c><01:54:44.480><c> but</c><01:54:44.639><c> torch</c><01:54:44.880><c> compile</c>

01:54:45.189 --> 01:54:45.199 align:start position:0%
that in that sequence but torch compile
 

01:54:45.199 --> 01:54:47.390 align:start position:0%
that in that sequence but torch compile
sees<01:54:45.440><c> your</c><01:54:45.560><c> entire</c><01:54:45.920><c> code</c><01:54:46.599><c> it</c><01:54:46.679><c> will</c><01:54:46.880><c> come</c><01:54:47.119><c> here</c>

01:54:47.390 --> 01:54:47.400 align:start position:0%
sees your entire code it will come here
 

01:54:47.400 --> 01:54:48.990 align:start position:0%
sees your entire code it will come here
and<01:54:47.480><c> it</c><01:54:47.560><c> will</c><01:54:47.760><c> realize</c><01:54:48.440><c> wait</c><01:54:48.639><c> all</c><01:54:48.719><c> of</c><01:54:48.880><c> these</c>

01:54:48.990 --> 01:54:49.000 align:start position:0%
and it will realize wait all of these
 

01:54:49.000 --> 01:54:52.430 align:start position:0%
and it will realize wait all of these
are<01:54:49.320><c> elementwise</c><01:54:49.920><c> operations</c><01:54:50.920><c> and</c><01:54:51.159><c> actually</c>

01:54:52.430 --> 01:54:52.440 align:start position:0%
are elementwise operations and actually
 

01:54:52.440 --> 01:54:53.709 align:start position:0%
are elementwise operations and actually
what<01:54:52.560><c> I'm</c><01:54:52.679><c> going</c><01:54:52.760><c> to</c><01:54:52.880><c> do</c><01:54:53.199><c> is</c><01:54:53.320><c> I'm</c><01:54:53.400><c> going</c><01:54:53.520><c> to</c><01:54:53.599><c> do</c>

01:54:53.709 --> 01:54:53.719 align:start position:0%
what I'm going to do is I'm going to do
 

01:54:53.719 --> 01:54:56.589 align:start position:0%
what I'm going to do is I'm going to do
a<01:54:53.880><c> single</c><01:54:54.360><c> trip</c><01:54:54.760><c> of</c><01:54:54.960><c> input</c><01:54:55.239><c> to</c><01:54:55.360><c> the</c><01:54:55.480><c> GPU</c><01:54:56.480><c> then</c>

01:54:56.589 --> 01:54:56.599 align:start position:0%
a single trip of input to the GPU then
 

01:54:56.599 --> 01:54:58.589 align:start position:0%
a single trip of input to the GPU then
for<01:54:56.800><c> every</c><01:54:56.960><c> single</c><01:54:57.239><c> element</c><01:54:57.880><c> I'm</c><01:54:58.000><c> going</c><01:54:58.159><c> to</c><01:54:58.280><c> do</c>

01:54:58.589 --> 01:54:58.599 align:start position:0%
for every single element I'm going to do
 

01:54:58.599 --> 01:55:00.750 align:start position:0%
for every single element I'm going to do
all<01:54:58.719><c> of</c><01:54:58.880><c> these</c><01:54:59.079><c> operations</c><01:55:00.079><c> while</c><01:55:00.560><c> that</c>

01:55:00.750 --> 01:55:00.760 align:start position:0%
all of these operations while that
 

01:55:00.760 --> 01:55:04.310 align:start position:0%
all of these operations while that
memory<01:55:01.280><c> is</c><01:55:01.440><c> on</c><01:55:01.639><c> the</c><01:55:02.159><c> GPU</c><01:55:03.159><c> or</c><01:55:03.360><c> chunks</c><01:55:03.639><c> of</c><01:55:03.840><c> it</c>

01:55:04.310 --> 01:55:04.320 align:start position:0%
memory is on the GPU or chunks of it
 

01:55:04.320 --> 01:55:06.069 align:start position:0%
memory is on the GPU or chunks of it
rather<01:55:05.079><c> and</c><01:55:05.199><c> then</c><01:55:05.320><c> I'm</c><01:55:05.440><c> going</c><01:55:05.520><c> to</c><01:55:05.639><c> write</c><01:55:05.920><c> back</c>

01:55:06.069 --> 01:55:06.079 align:start position:0%
rather and then I'm going to write back
 

01:55:06.079 --> 01:55:07.790 align:start position:0%
rather and then I'm going to write back
a<01:55:06.199><c> single</c><01:55:06.480><c> time</c><01:55:07.079><c> so</c><01:55:07.239><c> we're</c><01:55:07.360><c> not</c><01:55:07.480><c> going</c><01:55:07.560><c> to</c><01:55:07.679><c> have</c>

01:55:07.790 --> 01:55:07.800 align:start position:0%
a single time so we're not going to have
 

01:55:07.800 --> 01:55:09.629 align:start position:0%
a single time so we're not going to have
these<01:55:07.920><c> round</c><01:55:08.119><c> trips</c><01:55:08.719><c> and</c><01:55:08.840><c> that's</c><01:55:09.000><c> one</c><01:55:09.239><c> example</c>

01:55:09.629 --> 01:55:09.639 align:start position:0%
these round trips and that's one example
 

01:55:09.639 --> 01:55:11.910 align:start position:0%
these round trips and that's one example
of<01:55:09.800><c> what's</c><01:55:10.000><c> called</c><01:55:10.199><c> kernel</c><01:55:10.560><c> fusion</c><01:55:11.360><c> and</c><01:55:11.480><c> is</c><01:55:11.679><c> a</c>

01:55:11.910 --> 01:55:11.920 align:start position:0%
of what's called kernel fusion and is a
 

01:55:11.920 --> 01:55:14.430 align:start position:0%
of what's called kernel fusion and is a
major<01:55:12.320><c> way</c><01:55:12.639><c> in</c><01:55:12.800><c> which</c><01:55:13.000><c> everything</c><01:55:13.280><c> is</c><01:55:13.400><c> sped</c><01:55:13.679><c> up</c>

01:55:14.430 --> 01:55:14.440 align:start position:0%
major way in which everything is sped up
 

01:55:14.440 --> 01:55:15.830 align:start position:0%
major way in which everything is sped up
so<01:55:14.599><c> basically</c><01:55:14.960><c> if</c><01:55:15.040><c> you</c><01:55:15.119><c> have</c><01:55:15.239><c> your</c><01:55:15.400><c> benefit</c><01:55:15.679><c> of</c>

01:55:15.830 --> 01:55:15.840 align:start position:0%
so basically if you have your benefit of
 

01:55:15.840 --> 01:55:17.189 align:start position:0%
so basically if you have your benefit of
onet<01:55:16.360><c> and</c><01:55:16.440><c> you</c><01:55:16.560><c> know</c><01:55:16.679><c> exactly</c><01:55:17.000><c> what</c><01:55:17.079><c> you're</c>

01:55:17.189 --> 01:55:17.199 align:start position:0%
onet and you know exactly what you're
 

01:55:17.199 --> 01:55:19.310 align:start position:0%
onet and you know exactly what you're
going<01:55:17.280><c> to</c><01:55:17.400><c> compute</c><01:55:18.119><c> you</c><01:55:18.239><c> can</c><01:55:18.520><c> optimize</c><01:55:19.000><c> your</c>

01:55:19.310 --> 01:55:19.320 align:start position:0%
going to compute you can optimize your
 

01:55:19.320 --> 01:55:21.870 align:start position:0%
going to compute you can optimize your
round<01:55:19.599><c> trips</c><01:55:19.880><c> to</c><01:55:20.040><c> the</c><01:55:20.239><c> memory</c><01:55:21.239><c> and</c><01:55:21.639><c> you're</c><01:55:21.760><c> not</c>

01:55:21.870 --> 01:55:21.880 align:start position:0%
round trips to the memory and you're not
 

01:55:21.880 --> 01:55:23.069 align:start position:0%
round trips to the memory and you're not
going<01:55:22.000><c> to</c><01:55:22.119><c> pay</c><01:55:22.239><c> the</c><01:55:22.320><c> the</c><01:55:22.400><c> memory</c><01:55:22.639><c> bandwidth</c>

01:55:23.069 --> 01:55:23.079 align:start position:0%
going to pay the the memory bandwidth
 

01:55:23.079 --> 01:55:25.270 align:start position:0%
going to pay the the memory bandwidth
cost<01:55:23.800><c> and</c><01:55:23.960><c> that's</c><01:55:24.159><c> fundamentally</c><01:55:24.800><c> what</c><01:55:25.040><c> makes</c>

01:55:25.270 --> 01:55:25.280 align:start position:0%
cost and that's fundamentally what makes
 

01:55:25.280 --> 01:55:27.310 align:start position:0%
cost and that's fundamentally what makes
some<01:55:25.400><c> of</c><01:55:25.520><c> these</c><01:55:25.679><c> operations</c><01:55:26.040><c> a</c><01:55:26.159><c> lot</c><01:55:26.360><c> faster</c>

01:55:27.310 --> 01:55:27.320 align:start position:0%
some of these operations a lot faster
 

01:55:27.320 --> 01:55:30.069 align:start position:0%
some of these operations a lot faster
and<01:55:27.480><c> what</c><01:55:27.639><c> they</c><01:55:27.760><c> mean</c><01:55:28.000><c> by</c><01:55:28.280><c> read</c><01:55:28.560><c> writes</c>

01:55:30.069 --> 01:55:30.079 align:start position:0%
and what they mean by read writes
 

01:55:30.079 --> 01:55:32.669 align:start position:0%
and what they mean by read writes
here<01:55:31.079><c> so</c><01:55:31.320><c> let</c><01:55:31.440><c> me</c><01:55:31.599><c> erase</c><01:55:31.960><c> this</c><01:55:32.199><c> because</c><01:55:32.400><c> we</c><01:55:32.520><c> are</c>

01:55:32.669 --> 01:55:32.679 align:start position:0%
here so let me erase this because we are
 

01:55:32.679 --> 01:55:36.589 align:start position:0%
here so let me erase this because we are
not<01:55:32.840><c> using</c><01:55:33.560><c> it</c><01:55:34.719><c> and</c><01:55:35.719><c> yeah</c><01:55:35.920><c> we</c><01:55:36.040><c> should</c><01:55:36.199><c> be</c><01:55:36.280><c> using</c>

01:55:36.589 --> 01:55:36.599 align:start position:0%
not using it and yeah we should be using
 

01:55:36.599 --> 01:55:39.270 align:start position:0%
not using it and yeah we should be using
torch<01:55:36.920><c> compile</c><01:55:37.800><c> and</c><01:55:37.960><c> our</c><01:55:38.280><c> code</c><01:55:38.480><c> is</c><01:55:38.679><c> now</c>

01:55:39.270 --> 01:55:39.280 align:start position:0%
torch compile and our code is now
 

01:55:39.280 --> 01:55:40.709 align:start position:0%
torch compile and our code is now
significantly<01:55:39.920><c> faster</c><01:55:40.239><c> and</c><01:55:40.360><c> we're</c><01:55:40.480><c> doing</c>

01:55:40.709 --> 01:55:40.719 align:start position:0%
significantly faster and we're doing
 

01:55:40.719 --> 01:55:41.990 align:start position:0%
significantly faster and we're doing
about

01:55:41.990 --> 01:55:42.000 align:start position:0%
about
 

01:55:42.000 --> 01:55:44.990 align:start position:0%
about
125,000<01:55:43.000><c> tokens</c><01:55:43.400><c> per</c><01:55:43.560><c> second</c><01:55:44.520><c> but</c><01:55:44.679><c> we</c><01:55:44.800><c> still</c>

01:55:44.990 --> 01:55:45.000 align:start position:0%
125,000 tokens per second but we still
 

01:55:45.000 --> 01:55:47.189 align:start position:0%
125,000 tokens per second but we still
have<01:55:45.079><c> a</c><01:55:45.199><c> long</c><01:55:45.320><c> way</c><01:55:45.440><c> to</c><01:55:45.599><c> go</c><01:55:46.400><c> before</c><01:55:46.599><c> we</c><01:55:46.719><c> move</c><01:55:46.920><c> on</c>

01:55:47.189 --> 01:55:47.199 align:start position:0%
have a long way to go before we move on
 

01:55:47.199 --> 01:55:49.390 align:start position:0%
have a long way to go before we move on
I<01:55:47.280><c> wanted</c><01:55:47.639><c> to</c><01:55:48.199><c> supplement</c><01:55:48.760><c> the</c><01:55:48.920><c> discussion</c><01:55:49.280><c> a</c>

01:55:49.390 --> 01:55:49.400 align:start position:0%
I wanted to supplement the discussion a
 

01:55:49.400 --> 01:55:51.470 align:start position:0%
I wanted to supplement the discussion a
little<01:55:49.599><c> bit</c><01:55:49.760><c> with</c><01:55:49.880><c> a</c><01:55:49.960><c> few</c><01:55:50.119><c> more</c><01:55:50.360><c> figures</c><01:55:51.360><c> uh</c>

01:55:51.470 --> 01:55:51.480 align:start position:0%
little bit with a few more figures uh
 

01:55:51.480 --> 01:55:53.229 align:start position:0%
little bit with a few more figures uh
because<01:55:51.679><c> this</c><01:55:51.760><c> is</c><01:55:51.840><c> a</c><01:55:51.960><c> complic</c><01:55:52.599><c> topic</c><01:55:52.880><c> but</c><01:55:53.000><c> it's</c>

01:55:53.229 --> 01:55:53.239 align:start position:0%
because this is a complic topic but it's
 

01:55:53.239 --> 01:55:55.229 align:start position:0%
because this is a complic topic but it's
worth<01:55:53.719><c> understanding</c><01:55:53.920><c> on</c><01:55:54.040><c> a</c><01:55:54.159><c> high</c><01:55:54.360><c> level</c><01:55:55.119><c> uh</c>

01:55:55.229 --> 01:55:55.239 align:start position:0%
worth understanding on a high level uh
 

01:55:55.239 --> 01:55:56.870 align:start position:0%
worth understanding on a high level uh
what's<01:55:55.440><c> happening</c><01:55:55.800><c> here</c><01:55:56.440><c> and</c><01:55:56.639><c> I</c><01:55:56.719><c> could</c>

01:55:56.870 --> 01:55:56.880 align:start position:0%
what's happening here and I could
 

01:55:56.880 --> 01:55:58.430 align:start position:0%
what's happening here and I could
probably<01:55:57.079><c> spend</c><01:55:57.280><c> an</c><01:55:57.440><c> entire</c><01:55:57.800><c> video</c><01:55:58.119><c> of</c><01:55:58.280><c> like</c>

01:55:58.430 --> 01:55:58.440 align:start position:0%
probably spend an entire video of like
 

01:55:58.440 --> 01:56:00.229 align:start position:0%
probably spend an entire video of like
two<01:55:58.639><c> hours</c><01:55:58.920><c> on</c><01:55:59.079><c> this</c><01:55:59.360><c> but</c><01:55:59.639><c> just</c><01:55:59.760><c> the</c><01:55:59.920><c> preview</c>

01:56:00.229 --> 01:56:00.239 align:start position:0%
two hours on this but just the preview
 

01:56:00.239 --> 01:56:03.629 align:start position:0%
two hours on this but just the preview
of<01:56:00.400><c> that</c><01:56:01.040><c> basically</c><01:56:02.040><c> so</c><01:56:02.320><c> this</c><01:56:02.520><c> chip</c><01:56:02.920><c> here</c><01:56:03.520><c> that</c>

01:56:03.629 --> 01:56:03.639 align:start position:0%
of that basically so this chip here that
 

01:56:03.639 --> 01:56:06.950 align:start position:0%
of that basically so this chip here that
is<01:56:04.119><c> uh</c><01:56:04.239><c> the</c><01:56:04.840><c> GPU</c><01:56:05.840><c> this</c><01:56:06.040><c> chip</c><01:56:06.320><c> is</c><01:56:06.480><c> where</c><01:56:06.639><c> all</c><01:56:06.800><c> the</c>

01:56:06.950 --> 01:56:06.960 align:start position:0%
is uh the GPU this chip is where all the
 

01:56:06.960 --> 01:56:09.950 align:start position:0%
is uh the GPU this chip is where all the
calculations<01:56:07.719><c> happen</c><01:56:08.119><c> mostly</c><01:56:09.119><c> but</c><01:56:09.360><c> this</c><01:56:09.560><c> chip</c>

01:56:09.950 --> 01:56:09.960 align:start position:0%
calculations happen mostly but this chip
 

01:56:09.960 --> 01:56:12.950 align:start position:0%
calculations happen mostly but this chip
also<01:56:10.560><c> does</c><01:56:10.800><c> have</c><01:56:11.000><c> some</c><01:56:11.280><c> memory</c><01:56:11.760><c> in</c><01:56:11.920><c> it</c><01:56:12.719><c> but</c>

01:56:12.950 --> 01:56:12.960 align:start position:0%
also does have some memory in it but
 

01:56:12.960 --> 01:56:15.589 align:start position:0%
also does have some memory in it but
most<01:56:13.199><c> of</c><01:56:13.320><c> the</c><01:56:13.440><c> memory</c><01:56:13.800><c> by</c><01:56:14.000><c> far</c><01:56:14.560><c> is</c><01:56:14.800><c> here</c><01:56:15.040><c> in</c><01:56:15.239><c> the</c>

01:56:15.589 --> 01:56:15.599 align:start position:0%
most of the memory by far is here in the
 

01:56:15.599 --> 01:56:18.149 align:start position:0%
most of the memory by far is here in the
high<01:56:15.760><c> bandwidth</c><01:56:16.199><c> memory</c><01:56:16.760><c> hbm</c><01:56:17.760><c> and</c><01:56:17.920><c> is</c>

01:56:18.149 --> 01:56:18.159 align:start position:0%
high bandwidth memory hbm and is
 

01:56:18.159 --> 01:56:20.669 align:start position:0%
high bandwidth memory hbm and is
connected<01:56:19.000><c> they're</c><01:56:19.239><c> connected</c><01:56:20.079><c> um</c><01:56:20.400><c> but</c><01:56:20.560><c> these</c>

01:56:20.669 --> 01:56:20.679 align:start position:0%
connected they're connected um but these
 

01:56:20.679 --> 01:56:23.109 align:start position:0%
connected they're connected um but these
are<01:56:20.840><c> two</c><01:56:21.040><c> separate</c><01:56:21.360><c> chips</c><01:56:21.760><c> basically</c>

01:56:23.109 --> 01:56:23.119 align:start position:0%
are two separate chips basically
 

01:56:23.119 --> 01:56:26.709 align:start position:0%
are two separate chips basically
now<01:56:23.920><c> here</c><01:56:24.360><c> this</c><01:56:24.719><c> is</c><01:56:24.840><c> a</c><01:56:25.040><c> zoom</c><01:56:25.280><c> in</c><01:56:25.639><c> of</c><01:56:26.000><c> kind</c><01:56:26.159><c> of</c>

01:56:26.709 --> 01:56:26.719 align:start position:0%
now here this is a zoom in of kind of
 

01:56:26.719 --> 01:56:30.470 align:start position:0%
now here this is a zoom in of kind of
this<01:56:26.880><c> cartoon</c><01:56:27.239><c> diagram</c><01:56:27.599><c> of</c><01:56:27.719><c> a</c><01:56:28.199><c> GPU</c><01:56:29.400><c> and</c><01:56:30.400><c> what</c>

01:56:30.470 --> 01:56:30.480 align:start position:0%
this cartoon diagram of a GPU and what
 

01:56:30.480 --> 01:56:31.750 align:start position:0%
this cartoon diagram of a GPU and what
we're<01:56:30.639><c> seeing</c><01:56:30.840><c> here</c><01:56:30.960><c> is</c><01:56:31.079><c> number</c><01:56:31.280><c> one</c><01:56:31.440><c> you</c><01:56:31.560><c> see</c>

01:56:31.750 --> 01:56:31.760 align:start position:0%
we're seeing here is number one you see
 

01:56:31.760 --> 01:56:34.149 align:start position:0%
we're seeing here is number one you see
this<01:56:32.000><c> hbm</c><01:56:32.880><c> I</c><01:56:33.079><c> I</c><01:56:33.320><c> realize</c><01:56:33.639><c> it's</c><01:56:33.800><c> probably</c><01:56:34.040><c> very</c>

01:56:34.149 --> 01:56:34.159 align:start position:0%
this hbm I I realize it's probably very
 

01:56:34.159 --> 01:56:35.870 align:start position:0%
this hbm I I realize it's probably very
small<01:56:34.440><c> for</c><01:56:34.599><c> you</c><01:56:34.920><c> but</c><01:56:35.040><c> on</c><01:56:35.159><c> the</c><01:56:35.320><c> sides</c><01:56:35.639><c> here</c><01:56:35.760><c> it</c>

01:56:35.870 --> 01:56:35.880 align:start position:0%
small for you but on the sides here it
 

01:56:35.880 --> 01:56:38.470 align:start position:0%
small for you but on the sides here it
says<01:56:36.280><c> hbm</c><01:56:37.280><c> and</c><01:56:37.360><c> so</c><01:56:37.639><c> that</c><01:56:37.800><c> that's</c><01:56:38.000><c> the</c><01:56:38.119><c> links</c><01:56:38.360><c> to</c>

01:56:38.470 --> 01:56:38.480 align:start position:0%
says hbm and so that that's the links to
 

01:56:38.480 --> 01:56:42.470 align:start position:0%
says hbm and so that that's the links to
the<01:56:38.560><c> hbm</c><01:56:39.520><c> now</c><01:56:39.639><c> the</c><01:56:39.760><c> hbm</c><01:56:40.159><c> is</c><01:56:40.800><c> again</c><01:56:41.040><c> off</c><01:56:41.320><c> chip</c><01:56:42.239><c> on</c>

01:56:42.470 --> 01:56:42.480 align:start position:0%
the hbm now the hbm is again off chip on
 

01:56:42.480 --> 01:56:44.990 align:start position:0%
the hbm now the hbm is again off chip on
the<01:56:42.679><c> chip</c><01:56:43.560><c> there</c><01:56:43.719><c> are</c><01:56:44.079><c> a</c><01:56:44.239><c> large</c><01:56:44.520><c> number</c><01:56:44.800><c> of</c>

01:56:44.990 --> 01:56:45.000 align:start position:0%
the chip there are a large number of
 

01:56:45.000 --> 01:56:46.470 align:start position:0%
the chip there are a large number of
these<01:56:45.360><c> streaming</c>

01:56:46.470 --> 01:56:46.480 align:start position:0%
these streaming
 

01:56:46.480 --> 01:56:48.270 align:start position:0%
these streaming
multiprocessors<01:56:47.480><c> uh</c><01:56:47.599><c> every</c><01:56:47.760><c> one</c><01:56:47.880><c> of</c><01:56:48.000><c> these</c><01:56:48.159><c> is</c>

01:56:48.270 --> 01:56:48.280 align:start position:0%
multiprocessors uh every one of these is
 

01:56:48.280 --> 01:56:51.629 align:start position:0%
multiprocessors uh every one of these is
an<01:56:48.480><c> SM</c><01:56:49.199><c> there's</c><01:56:49.400><c> 120</c><01:56:49.840><c> of</c><01:56:49.960><c> them</c><01:56:50.079><c> in</c><01:56:50.320><c> total</c><01:56:51.320><c> and</c>

01:56:51.629 --> 01:56:51.639 align:start position:0%
an SM there's 120 of them in total and
 

01:56:51.639 --> 01:56:52.589 align:start position:0%
an SM there's 120 of them in total and
this<01:56:51.760><c> is</c><01:56:51.880><c> where</c><01:56:52.079><c> the</c><01:56:52.239><c> a</c><01:56:52.280><c> lot</c><01:56:52.400><c> of</c><01:56:52.480><c> the</c>

01:56:52.589 --> 01:56:52.599 align:start position:0%
this is where the a lot of the
 

01:56:52.599 --> 01:56:54.709 align:start position:0%
this is where the a lot of the
calculations<01:56:53.159><c> happen</c><01:56:54.000><c> and</c><01:56:54.119><c> this</c><01:56:54.239><c> is</c><01:56:54.320><c> a</c><01:56:54.480><c> zoom</c>

01:56:54.709 --> 01:56:54.719 align:start position:0%
calculations happen and this is a zoom
 

01:56:54.719 --> 01:56:57.390 align:start position:0%
calculations happen and this is a zoom
in<01:56:55.119><c> of</c><01:56:55.520><c> a</c><01:56:55.679><c> single</c><01:56:55.960><c> individual</c><01:56:56.440><c> as</c><01:56:57.119><c> it</c><01:56:57.239><c> has</c>

01:56:57.390 --> 01:56:57.400 align:start position:0%
in of a single individual as it has
 

01:56:57.400 --> 01:56:59.430 align:start position:0%
in of a single individual as it has
these<01:56:57.560><c> four</c><01:56:57.800><c> quadrants</c><01:56:58.679><c> and</c><01:56:58.800><c> see</c><01:56:59.040><c> for</c><01:56:59.159><c> example</c>

01:56:59.430 --> 01:56:59.440 align:start position:0%
these four quadrants and see for example
 

01:56:59.440 --> 01:57:00.870 align:start position:0%
these four quadrants and see for example
tensor<01:56:59.800><c> core</c><01:57:00.199><c> this</c><01:57:00.280><c> is</c><01:57:00.400><c> where</c><01:57:00.520><c> a</c><01:57:00.599><c> lot</c><01:57:00.719><c> of</c><01:57:00.800><c> the</c>

01:57:00.870 --> 01:57:00.880 align:start position:0%
tensor core this is where a lot of the
 

01:57:00.880 --> 01:57:02.910 align:start position:0%
tensor core this is where a lot of the
Matrix<01:57:01.199><c> multiply</c><01:57:01.599><c> stuff</c><01:57:01.800><c> happens</c><01:57:02.599><c> but</c>

01:57:02.910 --> 01:57:02.920 align:start position:0%
Matrix multiply stuff happens but
 

01:57:02.920 --> 01:57:04.790 align:start position:0%
Matrix multiply stuff happens but
there's<01:57:03.119><c> all</c><01:57:03.360><c> these</c><01:57:03.639><c> other</c><01:57:03.880><c> units</c><01:57:04.239><c> to</c><01:57:04.400><c> do</c><01:57:04.599><c> all</c>

01:57:04.790 --> 01:57:04.800 align:start position:0%
there's all these other units to do all
 

01:57:04.800 --> 01:57:07.229 align:start position:0%
there's all these other units to do all
different<01:57:05.079><c> kinds</c><01:57:05.239><c> of</c><01:57:05.400><c> calculations</c><01:57:06.239><c> for</c><01:57:06.440><c> fp64</c>

01:57:07.229 --> 01:57:07.239 align:start position:0%
different kinds of calculations for fp64
 

01:57:07.239 --> 01:57:11.149 align:start position:0%
different kinds of calculations for fp64
fp32<01:57:08.079><c> and</c><01:57:08.320><c> for</c><01:57:08.520><c> integers</c><01:57:09.000><c> and</c><01:57:09.119><c> so</c><01:57:09.280><c> on</c><01:57:10.280><c> now</c><01:57:11.000><c> so</c>

01:57:11.149 --> 01:57:11.159 align:start position:0%
fp32 and for integers and so on now so
 

01:57:11.159 --> 01:57:13.669 align:start position:0%
fp32 and for integers and so on now so
we<01:57:11.320><c> have</c><01:57:11.840><c> all</c><01:57:12.079><c> this</c><01:57:12.480><c> uh</c><01:57:12.639><c> logic</c><01:57:13.040><c> here</c><01:57:13.239><c> to</c><01:57:13.360><c> do</c><01:57:13.520><c> the</c>

01:57:13.669 --> 01:57:13.679 align:start position:0%
we have all this uh logic here to do the
 

01:57:13.679 --> 01:57:15.709 align:start position:0%
we have all this uh logic here to do the
calculations<01:57:14.679><c> but</c><01:57:14.840><c> in</c><01:57:15.000><c> addition</c><01:57:15.280><c> to</c><01:57:15.440><c> that</c><01:57:15.599><c> on</c>

01:57:15.709 --> 01:57:15.719 align:start position:0%
calculations but in addition to that on
 

01:57:15.719 --> 01:57:17.709 align:start position:0%
calculations but in addition to that on
the<01:57:15.880><c> chip</c><01:57:16.199><c> there</c><01:57:16.360><c> is</c><01:57:16.639><c> memory</c><01:57:17.040><c> sprinkled</c>

01:57:17.709 --> 01:57:17.719 align:start position:0%
the chip there is memory sprinkled
 

01:57:17.719 --> 01:57:21.350 align:start position:0%
the chip there is memory sprinkled
throughout<01:57:18.079><c> the</c><01:57:18.239><c> chip</c><01:57:19.079><c> so</c><01:57:19.480><c> L2</c><01:57:20.040><c> cache</c><01:57:20.840><c> is</c><01:57:21.119><c> some</c>

01:57:21.350 --> 01:57:21.360 align:start position:0%
throughout the chip so L2 cache is some
 

01:57:21.360 --> 01:57:23.910 align:start position:0%
throughout the chip so L2 cache is some
amount<01:57:21.560><c> of</c><01:57:21.639><c> memory</c><01:57:22.000><c> that</c><01:57:22.239><c> lives</c><01:57:22.480><c> on</c><01:57:22.599><c> the</c><01:57:22.920><c> chip</c>

01:57:23.910 --> 01:57:23.920 align:start position:0%
amount of memory that lives on the chip
 

01:57:23.920 --> 01:57:25.870 align:start position:0%
amount of memory that lives on the chip
and<01:57:24.079><c> then</c><01:57:24.480><c> on</c><01:57:24.639><c> the</c><01:57:24.800><c> SMS</c><01:57:25.320><c> themselves</c><01:57:25.639><c> there's</c>

01:57:25.870 --> 01:57:25.880 align:start position:0%
and then on the SMS themselves there's
 

01:57:25.880 --> 01:57:28.310 align:start position:0%
and then on the SMS themselves there's
L1<01:57:26.639><c> cache</c><01:57:27.320><c> I</c><01:57:27.440><c> realized</c><01:57:27.760><c> it's</c><01:57:27.920><c> probably</c><01:57:28.159><c> very</c>

01:57:28.310 --> 01:57:28.320 align:start position:0%
L1 cache I realized it's probably very
 

01:57:28.320 --> 01:57:31.109 align:start position:0%
L1 cache I realized it's probably very
small<01:57:28.560><c> for</c><01:57:28.719><c> you</c><01:57:28.920><c> but</c><01:57:29.040><c> this</c><01:57:29.199><c> blue</c><01:57:29.560><c> bar</c><01:57:29.880><c> is</c><01:57:30.119><c> L1</c>

01:57:31.109 --> 01:57:31.119 align:start position:0%
small for you but this blue bar is L1
 

01:57:31.119 --> 01:57:34.510 align:start position:0%
small for you but this blue bar is L1
and<01:57:31.239><c> there's</c><01:57:31.440><c> also</c><01:57:32.000><c> registers</c><01:57:33.040><c> um</c><01:57:34.040><c> and</c><01:57:34.159><c> so</c>

01:57:34.510 --> 01:57:34.520 align:start position:0%
and there's also registers um and so
 

01:57:34.520 --> 01:57:36.870 align:start position:0%
and there's also registers um and so
there<01:57:34.679><c> is</c><01:57:34.920><c> memory</c><01:57:35.239><c> stored</c><01:57:35.679><c> here</c><01:57:36.320><c> but</c><01:57:36.560><c> the</c><01:57:36.679><c> way</c>

01:57:36.870 --> 01:57:36.880 align:start position:0%
there is memory stored here but the way
 

01:57:36.880 --> 01:57:38.589 align:start position:0%
there is memory stored here but the way
this<01:57:37.040><c> memory</c><01:57:37.320><c> is</c><01:57:37.440><c> stored</c><01:57:37.800><c> is</c><01:57:37.920><c> very</c><01:57:38.239><c> different</c>

01:57:38.589 --> 01:57:38.599 align:start position:0%
this memory is stored is very different
 

01:57:38.599 --> 01:57:41.589 align:start position:0%
this memory is stored is very different
from<01:57:38.760><c> the</c><01:57:38.920><c> way</c><01:57:39.360><c> memory</c><01:57:39.679><c> is</c><01:57:39.760><c> stored</c><01:57:40.040><c> in</c><01:57:40.440><c> hbm</c><01:57:41.440><c> uh</c>

01:57:41.589 --> 01:57:41.599 align:start position:0%
from the way memory is stored in hbm uh
 

01:57:41.599 --> 01:57:43.990 align:start position:0%
from the way memory is stored in hbm uh
this<01:57:41.679><c> is</c><01:57:41.920><c> a</c><01:57:42.119><c> very</c><01:57:42.360><c> different</c><01:57:43.000><c> implementation</c>

01:57:43.990 --> 01:57:44.000 align:start position:0%
this is a very different implementation
 

01:57:44.000 --> 01:57:47.550 align:start position:0%
this is a very different implementation
uh<01:57:44.159><c> using</c><01:57:45.239><c> um</c><01:57:46.239><c> just</c><01:57:46.599><c> in</c><01:57:46.719><c> terms</c><01:57:47.000><c> of</c><01:57:47.239><c> like</c><01:57:47.480><c> what</c>

01:57:47.550 --> 01:57:47.560 align:start position:0%
uh using um just in terms of like what
 

01:57:47.560 --> 01:57:48.750 align:start position:0%
uh using um just in terms of like what
the<01:57:47.679><c> Silicon</c><01:57:48.040><c> looks</c><01:57:48.239><c> like</c><01:57:48.400><c> it's</c><01:57:48.480><c> a</c><01:57:48.599><c> very</c>

01:57:48.750 --> 01:57:48.760 align:start position:0%
the Silicon looks like it's a very
 

01:57:48.760 --> 01:57:49.709 align:start position:0%
the Silicon looks like it's a very
different

01:57:49.709 --> 01:57:49.719 align:start position:0%
different
 

01:57:49.719 --> 01:57:52.310 align:start position:0%
different
implementation<01:57:50.719><c> um</c><01:57:51.440><c> so</c><01:57:51.679><c> here</c><01:57:51.800><c> you</c><01:57:51.920><c> would</c>

01:57:52.310 --> 01:57:52.320 align:start position:0%
implementation um so here you would
 

01:57:52.320 --> 01:57:54.189 align:start position:0%
implementation um so here you would
using<01:57:52.560><c> transistors</c><01:57:53.040><c> and</c><01:57:53.239><c> capacitors</c><01:57:54.000><c> and</c>

01:57:54.189 --> 01:57:54.199 align:start position:0%
using transistors and capacitors and
 

01:57:54.199 --> 01:57:55.390 align:start position:0%
using transistors and capacitors and
here<01:57:54.639><c> it's</c><01:57:54.800><c> a</c><01:57:54.920><c> very</c><01:57:55.079><c> different</c>

01:57:55.390 --> 01:57:55.400 align:start position:0%
here it's a very different
 

01:57:55.400 --> 01:57:57.629 align:start position:0%
here it's a very different
implementation<01:57:56.320><c> uh</c><01:57:56.520><c> with</c><01:57:56.880><c> SRAM</c><01:57:57.360><c> and</c><01:57:57.480><c> what</c>

01:57:57.629 --> 01:57:57.639 align:start position:0%
implementation uh with SRAM and what
 

01:57:57.639 --> 01:58:01.430 align:start position:0%
implementation uh with SRAM and what
that<01:57:57.760><c> looks</c><01:57:58.000><c> like</c><01:57:58.880><c> but</c><01:57:59.480><c> long</c><01:57:59.679><c> story</c><01:57:59.920><c> short</c><01:58:00.440><c> is</c>

01:58:01.430 --> 01:58:01.440 align:start position:0%
that looks like but long story short is
 

01:58:01.440 --> 01:58:05.589 align:start position:0%
that looks like but long story short is
um<01:58:02.400><c> there</c><01:58:02.599><c> is</c><01:58:03.280><c> um</c><01:58:03.599><c> memory</c><01:58:04.360><c> inside</c><01:58:04.840><c> the</c><01:58:05.000><c> chip</c>

01:58:05.589 --> 01:58:05.599 align:start position:0%
um there is um memory inside the chip
 

01:58:05.599 --> 01:58:07.229 align:start position:0%
um there is um memory inside the chip
but<01:58:05.800><c> it's</c><01:58:05.960><c> not</c><01:58:06.119><c> a</c><01:58:06.239><c> lot</c><01:58:06.400><c> of</c><01:58:06.520><c> memory</c><01:58:06.920><c> that's</c><01:58:07.079><c> the</c>

01:58:07.229 --> 01:58:07.239 align:start position:0%
but it's not a lot of memory that's the
 

01:58:07.239 --> 01:58:09.790 align:start position:0%
but it's not a lot of memory that's the
critical<01:58:07.639><c> point</c><01:58:08.159><c> so</c><01:58:08.639><c> this</c><01:58:08.760><c> is</c><01:58:08.920><c> some</c><01:58:09.159><c> C</c><01:58:09.599><c> this</c><01:58:09.679><c> is</c>

01:58:09.790 --> 01:58:09.800 align:start position:0%
critical point so this is some C this is
 

01:58:09.800 --> 01:58:11.910 align:start position:0%
critical point so this is some C this is
a<01:58:10.079><c> example</c><01:58:10.440><c> diagram</c><01:58:11.040><c> of</c><01:58:11.440><c> a</c><01:58:11.560><c> slightly</c>

01:58:11.910 --> 01:58:11.920 align:start position:0%
a example diagram of a slightly
 

01:58:11.920 --> 01:58:14.470 align:start position:0%
a example diagram of a slightly
different<01:58:12.159><c> GPU</c><01:58:12.840><c> just</c><01:58:13.040><c> like</c><01:58:13.239><c> here</c><01:58:14.040><c> where</c><01:58:14.360><c> it</c>

01:58:14.470 --> 01:58:14.480 align:start position:0%
different GPU just like here where it
 

01:58:14.480 --> 01:58:16.229 align:start position:0%
different GPU just like here where it
shows<01:58:14.800><c> that</c><01:58:14.920><c> for</c><01:58:15.079><c> example</c><01:58:15.520><c> typical</c><01:58:15.840><c> numbers</c>

01:58:16.229 --> 01:58:16.239 align:start position:0%
shows that for example typical numbers
 

01:58:16.239 --> 01:58:19.390 align:start position:0%
shows that for example typical numbers
for<01:58:16.480><c> CPU</c><01:58:17.239><c> Dam</c><01:58:17.840><c> memory</c><01:58:18.360><c> which</c><01:58:18.480><c> is</c><01:58:18.760><c> this</c><01:58:18.920><c> thing</c>

01:58:19.390 --> 01:58:19.400 align:start position:0%
for CPU Dam memory which is this thing
 

01:58:19.400 --> 01:58:22.430 align:start position:0%
for CPU Dam memory which is this thing
here<01:58:20.400><c> you</c><01:58:20.560><c> might</c><01:58:20.840><c> have</c><01:58:21.040><c> one</c><01:58:21.239><c> tab</c><01:58:21.760><c> of</c><01:58:21.880><c> this</c>

01:58:22.430 --> 01:58:22.440 align:start position:0%
here you might have one tab of this
 

01:58:22.440 --> 01:58:23.629 align:start position:0%
here you might have one tab of this
right<01:58:22.760><c> but</c><01:58:22.880><c> it</c><01:58:22.960><c> would</c><01:58:23.079><c> be</c><01:58:23.199><c> extremely</c>

01:58:23.629 --> 01:58:23.639 align:start position:0%
right but it would be extremely
 

01:58:23.639 --> 01:58:25.550 align:start position:0%
right but it would be extremely
expensive<01:58:24.000><c> to</c><01:58:24.239><c> access</c><01:58:24.599><c> especially</c><01:58:24.920><c> for</c><01:58:25.040><c> a</c><01:58:25.159><c> GPU</c>

01:58:25.550 --> 01:58:25.560 align:start position:0%
expensive to access especially for a GPU
 

01:58:25.560 --> 01:58:28.189 align:start position:0%
expensive to access especially for a GPU
you<01:58:25.679><c> have</c><01:58:25.760><c> to</c><01:58:25.880><c> go</c><01:58:26.000><c> through</c><01:58:26.320><c> the</c><01:58:26.440><c> CPU</c><01:58:26.920><c> here</c><01:58:27.920><c> now</c>

01:58:28.189 --> 01:58:28.199 align:start position:0%
you have to go through the CPU here now
 

01:58:28.199 --> 01:58:30.550 align:start position:0%
you have to go through the CPU here now
next<01:58:28.400><c> we</c><01:58:28.520><c> have</c><01:58:28.639><c> the</c><01:58:28.760><c> hbm</c><01:58:29.679><c> so</c><01:58:29.800><c> we</c><01:58:29.960><c> have</c><01:58:30.119><c> tens</c><01:58:30.360><c> of</c>

01:58:30.550 --> 01:58:30.560 align:start position:0%
next we have the hbm so we have tens of
 

01:58:30.560 --> 01:58:33.109 align:start position:0%
next we have the hbm so we have tens of
gigabytes<01:58:31.040><c> of</c><01:58:31.159><c> hbm</c><01:58:31.599><c> memory</c><01:58:31.880><c> on</c><01:58:32.000><c> a</c><01:58:32.119><c> typical</c><01:58:32.440><c> GPU</c>

01:58:33.109 --> 01:58:33.119 align:start position:0%
gigabytes of hbm memory on a typical GPU
 

01:58:33.119 --> 01:58:35.069 align:start position:0%
gigabytes of hbm memory on a typical GPU
here<01:58:33.679><c> but</c><01:58:33.840><c> it's</c><01:58:34.199><c> as</c><01:58:34.320><c> I</c><01:58:34.440><c> mentioned</c><01:58:34.840><c> very</c>

01:58:35.069 --> 01:58:35.079 align:start position:0%
here but it's as I mentioned very
 

01:58:35.079 --> 01:58:38.589 align:start position:0%
here but it's as I mentioned very
expensive<01:58:35.480><c> to</c><01:58:36.119><c> access</c><01:58:37.119><c> and</c><01:58:37.280><c> then</c><01:58:37.679><c> on</c><01:58:37.920><c> the</c><01:58:38.239><c> chip</c>

01:58:38.589 --> 01:58:38.599 align:start position:0%
expensive to access and then on the chip
 

01:58:38.599 --> 01:58:40.750 align:start position:0%
expensive to access and then on the chip
itself<01:58:39.480><c> everything</c><01:58:39.760><c> is</c><01:58:40.000><c> extremely</c><01:58:40.520><c> fast</c>

01:58:40.750 --> 01:58:40.760 align:start position:0%
itself everything is extremely fast
 

01:58:40.760 --> 01:58:42.830 align:start position:0%
itself everything is extremely fast
within<01:58:41.000><c> the</c><01:58:41.119><c> chip</c><01:58:41.719><c> but</c><01:58:41.920><c> we</c><01:58:42.040><c> only</c><01:58:42.280><c> have</c><01:58:42.599><c> couple</c>

01:58:42.830 --> 01:58:42.840 align:start position:0%
within the chip but we only have couple
 

01:58:42.840 --> 01:58:45.790 align:start position:0%
within the chip but we only have couple
10<01:58:43.079><c> megabytes</c><01:58:43.960><c> of</c><01:58:44.400><c> memory</c><01:58:45.320><c> collectively</c>

01:58:45.790 --> 01:58:45.800 align:start position:0%
10 megabytes of memory collectively
 

01:58:45.800 --> 01:58:48.030 align:start position:0%
10 megabytes of memory collectively
throughout<01:58:46.159><c> the</c><01:58:46.360><c> Chip</c><01:58:47.360><c> And</c><01:58:47.480><c> so</c><01:58:47.639><c> there's</c><01:58:47.840><c> just</c>

01:58:48.030 --> 01:58:48.040 align:start position:0%
throughout the Chip And so there's just
 

01:58:48.040 --> 01:58:50.109 align:start position:0%
throughout the Chip And so there's just
not<01:58:48.280><c> enough</c><01:58:48.599><c> space</c><01:58:49.000><c> because</c><01:58:49.440><c> the</c><01:58:49.560><c> memory</c><01:58:49.880><c> is</c>

01:58:50.109 --> 01:58:50.119 align:start position:0%
not enough space because the memory is
 

01:58:50.119 --> 01:58:52.270 align:start position:0%
not enough space because the memory is
very<01:58:50.400><c> expensive</c><01:58:50.920><c> on</c><01:58:51.040><c> the</c><01:58:51.199><c> chip</c><01:58:52.079><c> and</c><01:58:52.159><c> so</c>

01:58:52.270 --> 01:58:52.280 align:start position:0%
very expensive on the chip and so
 

01:58:52.280 --> 01:58:53.629 align:start position:0%
very expensive on the chip and so
there's<01:58:52.480><c> not</c><01:58:52.599><c> a</c><01:58:52.719><c> lot</c><01:58:52.840><c> of</c><01:58:53.000><c> it</c><01:58:53.199><c> but</c><01:58:53.320><c> it</c><01:58:53.400><c> is</c>

01:58:53.629 --> 01:58:53.639 align:start position:0%
there's not a lot of it but it is
 

01:58:53.639 --> 01:58:55.790 align:start position:0%
there's not a lot of it but it is
lightning<01:58:54.000><c> fast</c><01:58:54.239><c> to</c><01:58:54.440><c> access</c><01:58:55.199><c> in</c><01:58:55.440><c> relative</c>

01:58:55.790 --> 01:58:55.800 align:start position:0%
lightning fast to access in relative
 

01:58:55.800 --> 01:58:58.030 align:start position:0%
lightning fast to access in relative
terms<01:58:56.760><c> and</c><01:58:56.880><c> so</c><01:58:57.040><c> basically</c><01:58:57.400><c> whenever</c><01:58:57.719><c> we</c><01:58:57.880><c> have</c>

01:58:58.030 --> 01:58:58.040 align:start position:0%
terms and so basically whenever we have
 

01:58:58.040 --> 01:59:01.030 align:start position:0%
terms and so basically whenever we have
these<01:58:58.320><c> kernels</c><01:58:59.360><c> um</c><01:59:00.360><c> the</c><01:59:00.520><c> more</c><01:59:00.760><c> accurate</c>

01:59:01.030 --> 01:59:01.040 align:start position:0%
these kernels um the more accurate
 

01:59:01.040 --> 01:59:03.229 align:start position:0%
these kernels um the more accurate
picture<01:59:01.280><c> of</c><01:59:01.400><c> what's</c><01:59:01.599><c> Happening</c><01:59:01.960><c> Here</c><01:59:02.400><c> is</c><01:59:02.639><c> that</c>

01:59:03.229 --> 01:59:03.239 align:start position:0%
picture of what's Happening Here is that
 

01:59:03.239 --> 01:59:05.629 align:start position:0%
picture of what's Happening Here is that
we<01:59:03.480><c> take</c><01:59:03.960><c> these</c><01:59:04.159><c> inputs</c><01:59:04.639><c> which</c><01:59:04.840><c> live</c><01:59:05.480><c> by</c>

01:59:05.629 --> 01:59:05.639 align:start position:0%
we take these inputs which live by
 

01:59:05.639 --> 01:59:08.109 align:start position:0%
we take these inputs which live by
default<01:59:06.040><c> on</c><01:59:06.239><c> the</c><01:59:06.480><c> global</c><01:59:06.800><c> memory</c><01:59:07.760><c> and</c><01:59:07.880><c> now</c><01:59:08.000><c> we</c>

01:59:08.109 --> 01:59:08.119 align:start position:0%
default on the global memory and now we
 

01:59:08.119 --> 01:59:10.109 align:start position:0%
default on the global memory and now we
need<01:59:08.239><c> to</c><01:59:08.320><c> perform</c><01:59:08.599><c> some</c><01:59:08.760><c> calculation</c><01:59:09.760><c> so</c><01:59:09.960><c> we</c>

01:59:10.109 --> 01:59:10.119 align:start position:0%
need to perform some calculation so we
 

01:59:10.119 --> 01:59:12.790 align:start position:0%
need to perform some calculation so we
start<01:59:10.520><c> streaming</c><01:59:11.159><c> the</c><01:59:11.320><c> data</c><01:59:11.639><c> from</c><01:59:11.880><c> the</c><01:59:12.480><c> um</c>

01:59:12.790 --> 01:59:12.800 align:start position:0%
start streaming the data from the um
 

01:59:12.800 --> 01:59:16.350 align:start position:0%
start streaming the data from the um
Global<01:59:13.159><c> memory</c><01:59:13.679><c> to</c><01:59:13.960><c> the</c><01:59:14.719><c> uh</c><01:59:15.040><c> chip</c><01:59:15.840><c> we</c><01:59:16.079><c> perform</c>

01:59:16.350 --> 01:59:16.360 align:start position:0%
Global memory to the uh chip we perform
 

01:59:16.360 --> 01:59:18.149 align:start position:0%
Global memory to the uh chip we perform
the<01:59:16.520><c> calculations</c><01:59:17.159><c> on</c><01:59:17.320><c> the</c><01:59:17.440><c> chip</c><01:59:17.840><c> and</c><01:59:18.000><c> then</c>

01:59:18.149 --> 01:59:18.159 align:start position:0%
the calculations on the chip and then
 

01:59:18.159 --> 01:59:19.950 align:start position:0%
the calculations on the chip and then
stream<01:59:18.560><c> it</c><01:59:18.760><c> back</c><01:59:18.920><c> and</c><01:59:19.040><c> store</c><01:59:19.360><c> it</c><01:59:19.560><c> back</c><01:59:19.719><c> to</c><01:59:19.840><c> the</c>

01:59:19.950 --> 01:59:19.960 align:start position:0%
stream it back and store it back to the
 

01:59:19.960 --> 01:59:23.149 align:start position:0%
stream it back and store it back to the
global<01:59:20.320><c> memory</c><01:59:21.320><c> right</c><01:59:22.119><c> and</c><01:59:22.239><c> so</c><01:59:22.560><c> if</c><01:59:22.679><c> we</c><01:59:22.800><c> are</c><01:59:23.040><c> if</c>

01:59:23.149 --> 01:59:23.159 align:start position:0%
global memory right and so if we are if
 

01:59:23.159 --> 01:59:24.629 align:start position:0%
global memory right and so if we are if
we<01:59:23.280><c> don't</c><01:59:23.400><c> have</c><01:59:23.520><c> torch</c><01:59:23.800><c> compile</c><01:59:24.400><c> we</c><01:59:24.520><c> are</c>

01:59:24.629 --> 01:59:24.639 align:start position:0%
we don't have torch compile we are
 

01:59:24.639 --> 01:59:26.030 align:start position:0%
we don't have torch compile we are
streaming<01:59:25.079><c> the</c><01:59:25.239><c> data</c><01:59:25.480><c> through</c><01:59:25.679><c> the</c><01:59:25.840><c> chip</c>

01:59:26.030 --> 01:59:26.040 align:start position:0%
streaming the data through the chip
 

01:59:26.040 --> 01:59:27.669 align:start position:0%
streaming the data through the chip
doing<01:59:26.280><c> the</c><01:59:26.400><c> calculations</c><01:59:26.960><c> and</c><01:59:27.079><c> saving</c><01:59:27.400><c> to</c><01:59:27.560><c> the</c>

01:59:27.669 --> 01:59:27.679 align:start position:0%
doing the calculations and saving to the
 

01:59:27.679 --> 01:59:29.390 align:start position:0%
doing the calculations and saving to the
memory<01:59:28.119><c> and</c><01:59:28.239><c> we're</c><01:59:28.400><c> doing</c><01:59:28.639><c> those</c><01:59:28.800><c> round</c><01:59:29.079><c> trips</c>

01:59:29.390 --> 01:59:29.400 align:start position:0%
memory and we're doing those round trips
 

01:59:29.400 --> 01:59:30.430 align:start position:0%
memory and we're doing those round trips
many<01:59:29.639><c> many</c>

01:59:30.430 --> 01:59:30.440 align:start position:0%
many many
 

01:59:30.440 --> 01:59:33.390 align:start position:0%
many many
times<01:59:31.440><c> but</c><01:59:31.800><c> uh</c><01:59:31.920><c> if</c><01:59:32.040><c> it's</c><01:59:32.199><c> torch</c><01:59:32.520><c> compiled</c><01:59:33.280><c> then</c>

01:59:33.390 --> 01:59:33.400 align:start position:0%
times but uh if it's torch compiled then
 

01:59:33.400 --> 01:59:35.350 align:start position:0%
times but uh if it's torch compiled then
we<01:59:33.520><c> start</c><01:59:33.719><c> streaming</c><01:59:34.119><c> the</c><01:59:34.199><c> memory</c><01:59:34.520><c> as</c><01:59:34.679><c> before</c>

01:59:35.350 --> 01:59:35.360 align:start position:0%
we start streaming the memory as before
 

01:59:35.360 --> 01:59:37.390 align:start position:0%
we start streaming the memory as before
but<01:59:35.520><c> then</c><01:59:35.719><c> while</c><01:59:35.880><c> we're</c><01:59:36.079><c> on</c><01:59:36.280><c> the</c><01:59:36.440><c> chip</c><01:59:36.880><c> we're</c>

01:59:37.390 --> 01:59:37.400 align:start position:0%
but then while we're on the chip we're
 

01:59:37.400 --> 01:59:40.629 align:start position:0%
but then while we're on the chip we're
we're<01:59:37.760><c> we</c><01:59:37.880><c> have</c><01:59:38.079><c> a</c><01:59:38.239><c> chunk</c><01:59:38.679><c> of</c><01:59:39.480><c> the</c><01:59:40.280><c> uh</c><01:59:40.400><c> data</c>

01:59:40.629 --> 01:59:40.639 align:start position:0%
we're we have a chunk of the uh data
 

01:59:40.639 --> 01:59:42.589 align:start position:0%
we're we have a chunk of the uh data
that<01:59:40.719><c> we're</c><01:59:40.880><c> trying</c><01:59:41.079><c> to</c><01:59:41.239><c> process</c><01:59:42.199><c> so</c><01:59:42.440><c> that</c>

01:59:42.589 --> 01:59:42.599 align:start position:0%
that we're trying to process so that
 

01:59:42.599 --> 01:59:44.550 align:start position:0%
that we're trying to process so that
chunk<01:59:42.960><c> now</c><01:59:43.119><c> lives</c><01:59:43.360><c> on</c><01:59:43.480><c> the</c><01:59:43.599><c> chip</c><01:59:44.239><c> while</c><01:59:44.440><c> it's</c>

01:59:44.550 --> 01:59:44.560 align:start position:0%
chunk now lives on the chip while it's
 

01:59:44.560 --> 01:59:46.030 align:start position:0%
chunk now lives on the chip while it's
on<01:59:44.679><c> the</c><01:59:44.760><c> chip</c><01:59:45.000><c> it's</c><01:59:45.159><c> extremely</c><01:59:45.599><c> fast</c><01:59:45.760><c> to</c>

01:59:46.030 --> 01:59:46.040 align:start position:0%
on the chip it's extremely fast to
 

01:59:46.040 --> 01:59:48.350 align:start position:0%
on the chip it's extremely fast to
operate<01:59:46.400><c> on</c><01:59:46.880><c> so</c><01:59:47.040><c> if</c><01:59:47.159><c> we</c><01:59:47.280><c> have</c><01:59:47.480><c> kernel</c><01:59:47.800><c> Fusion</c>

01:59:48.350 --> 01:59:48.360 align:start position:0%
operate on so if we have kernel Fusion
 

01:59:48.360 --> 01:59:49.910 align:start position:0%
operate on so if we have kernel Fusion
we<01:59:48.440><c> can</c><01:59:48.560><c> do</c><01:59:48.760><c> all</c><01:59:48.880><c> the</c><01:59:49.079><c> operations</c><01:59:49.599><c> right</c><01:59:49.760><c> there</c>

01:59:49.910 --> 01:59:49.920 align:start position:0%
we can do all the operations right there
 

01:59:49.920 --> 01:59:52.709 align:start position:0%
we can do all the operations right there
in<01:59:50.040><c> an</c><01:59:50.159><c> element-wise</c><01:59:50.800><c> fashion</c><01:59:51.679><c> and</c><01:59:52.360><c> those</c><01:59:52.480><c> are</c>

01:59:52.709 --> 01:59:52.719 align:start position:0%
in an element-wise fashion and those are
 

01:59:52.719 --> 01:59:54.950 align:start position:0%
in an element-wise fashion and those are
very<01:59:52.960><c> cheap</c><01:59:53.599><c> and</c><01:59:53.800><c> then</c><01:59:53.960><c> we</c><01:59:54.079><c> do</c><01:59:54.280><c> a</c><01:59:54.440><c> single</c><01:59:54.719><c> round</c>

01:59:54.950 --> 01:59:54.960 align:start position:0%
very cheap and then we do a single round
 

01:59:54.960 --> 01:59:58.270 align:start position:0%
very cheap and then we do a single round
trip<01:59:55.320><c> back</c><01:59:55.920><c> to</c><01:59:56.320><c> the</c><01:59:56.920><c> global</c><01:59:57.239><c> memory</c><01:59:58.040><c> so</c>

01:59:58.270 --> 01:59:58.280 align:start position:0%
trip back to the global memory so
 

01:59:58.280 --> 01:59:59.990 align:start position:0%
trip back to the global memory so
operator<01:59:58.719><c> Fusion</c><01:59:59.079><c> basically</c><01:59:59.400><c> allows</c><01:59:59.639><c> you</c><01:59:59.760><c> to</c>

01:59:59.990 --> 02:00:00.000 align:start position:0%
operator Fusion basically allows you to
 

02:00:00.000 --> 02:00:02.270 align:start position:0%
operator Fusion basically allows you to
keep<02:00:00.320><c> your</c><02:00:00.560><c> chunk</c><02:00:00.840><c> of</c><02:00:01.000><c> data</c><02:00:01.360><c> on</c><02:00:01.520><c> the</c><02:00:01.679><c> Chip</c><02:00:02.159><c> And</c>

02:00:02.270 --> 02:00:02.280 align:start position:0%
keep your chunk of data on the Chip And
 

02:00:02.280 --> 02:00:04.069 align:start position:0%
keep your chunk of data on the Chip And
do<02:00:02.520><c> lots</c><02:00:02.719><c> of</c><02:00:02.880><c> calculations</c><02:00:03.400><c> on</c><02:00:03.520><c> it</c><02:00:03.760><c> before</c><02:00:03.960><c> you</c>

02:00:04.069 --> 02:00:04.079 align:start position:0%
do lots of calculations on it before you
 

02:00:04.079 --> 02:00:06.709 align:start position:0%
do lots of calculations on it before you
write<02:00:04.280><c> it</c><02:00:04.480><c> back</c><02:00:05.199><c> and</c><02:00:05.440><c> that</c><02:00:06.119><c> gives</c><02:00:06.480><c> huge</c>

02:00:06.709 --> 02:00:06.719 align:start position:0%
write it back and that gives huge
 

02:00:06.719 --> 02:00:08.990 align:start position:0%
write it back and that gives huge
savings<02:00:07.639><c> and</c><02:00:07.840><c> that's</c><02:00:08.040><c> why</c><02:00:08.159><c> torch</c><02:00:08.440><c> compile</c>

02:00:08.990 --> 02:00:09.000 align:start position:0%
savings and that's why torch compile
 

02:00:09.000 --> 02:00:11.390 align:start position:0%
savings and that's why torch compile
ends<02:00:09.199><c> up</c><02:00:09.400><c> being</c><02:00:09.920><c> a</c><02:00:10.040><c> lot</c><02:00:10.320><c> faster</c><02:00:10.960><c> or</c><02:00:11.119><c> that's</c><02:00:11.280><c> one</c>

02:00:11.390 --> 02:00:11.400 align:start position:0%
ends up being a lot faster or that's one
 

02:00:11.400 --> 02:00:12.350 align:start position:0%
ends up being a lot faster or that's one
of<02:00:11.480><c> the</c><02:00:11.560><c> major</c>

02:00:12.350 --> 02:00:12.360 align:start position:0%
of the major
 

02:00:12.360 --> 02:00:14.709 align:start position:0%
of the major
reasons<02:00:13.360><c> uh</c><02:00:13.480><c> so</c><02:00:13.840><c> again</c><02:00:14.040><c> just</c><02:00:14.159><c> a</c><02:00:14.280><c> very</c><02:00:14.480><c> brief</c>

02:00:14.709 --> 02:00:14.719 align:start position:0%
reasons uh so again just a very brief
 

02:00:14.719 --> 02:00:16.550 align:start position:0%
reasons uh so again just a very brief
intro<02:00:15.079><c> to</c><02:00:15.199><c> the</c><02:00:15.320><c> memory</c><02:00:15.639><c> hierarchy</c><02:00:16.320><c> and</c>

02:00:16.550 --> 02:00:16.560 align:start position:0%
intro to the memory hierarchy and
 

02:00:16.560 --> 02:00:19.109 align:start position:0%
intro to the memory hierarchy and
roughly<02:00:16.880><c> what</c><02:00:17.040><c> torch</c><02:00:17.320><c> compile</c><02:00:17.679><c> does</c><02:00:17.840><c> for</c><02:00:18.119><c> you</c>

02:00:19.109 --> 02:00:19.119 align:start position:0%
roughly what torch compile does for you
 

02:00:19.119 --> 02:00:21.069 align:start position:0%
roughly what torch compile does for you
now<02:00:19.320><c> torch</c><02:00:19.599><c> compile</c><02:00:19.920><c> is</c><02:00:20.079><c> amazing</c><02:00:20.800><c> but</c><02:00:20.960><c> there</c>

02:00:21.069 --> 02:00:21.079 align:start position:0%
now torch compile is amazing but there
 

02:00:21.079 --> 02:00:23.470 align:start position:0%
now torch compile is amazing but there
are<02:00:21.360><c> operations</c><02:00:22.079><c> torch</c><02:00:22.360><c> compile</c><02:00:22.719><c> will</c><02:00:22.960><c> not</c>

02:00:23.470 --> 02:00:23.480 align:start position:0%
are operations torch compile will not
 

02:00:23.480 --> 02:00:26.189 align:start position:0%
are operations torch compile will not
find<02:00:24.480><c> and</c><02:00:24.719><c> an</c><02:00:24.880><c> amazing</c><02:00:25.280><c> example</c><02:00:25.599><c> of</c><02:00:25.760><c> that</c><02:00:25.960><c> is</c>

02:00:26.189 --> 02:00:26.199 align:start position:0%
find and an amazing example of that is
 

02:00:26.199 --> 02:00:28.990 align:start position:0%
find and an amazing example of that is
Flash<02:00:26.520><c> attention</c><02:00:27.000><c> to</c><02:00:27.159><c> which</c><02:00:27.280><c> we</c><02:00:27.400><c> turn</c><02:00:27.840><c> next</c><02:00:28.840><c> so</c>

02:00:28.990 --> 02:00:29.000 align:start position:0%
Flash attention to which we turn next so
 

02:00:29.000 --> 02:00:30.750 align:start position:0%
Flash attention to which we turn next so
flash<02:00:29.239><c> attention</c><02:00:29.599><c> comes</c><02:00:29.760><c> from</c><02:00:30.000><c> this</c><02:00:30.159><c> paper</c>

02:00:30.750 --> 02:00:30.760 align:start position:0%
flash attention comes from this paper
 

02:00:30.760 --> 02:00:33.430 align:start position:0%
flash attention comes from this paper
from<02:00:31.440><c> uh</c><02:00:31.599><c> Stanford</c><02:00:32.360><c> in</c>

02:00:33.430 --> 02:00:33.440 align:start position:0%
from uh Stanford in
 

02:00:33.440 --> 02:00:36.189 align:start position:0%
from uh Stanford in
2022<02:00:34.440><c> and</c><02:00:34.800><c> it's</c><02:00:35.159><c> this</c><02:00:35.320><c> incredible</c><02:00:35.760><c> algorithm</c>

02:00:36.189 --> 02:00:36.199 align:start position:0%
2022 and it's this incredible algorithm
 

02:00:36.199 --> 02:00:39.189 align:start position:0%
2022 and it's this incredible algorithm
for<02:00:36.360><c> performing</c><02:00:37.000><c> attention</c><02:00:38.000><c> so</c><02:00:38.679><c> um</c><02:00:39.000><c> and</c>

02:00:39.189 --> 02:00:39.199 align:start position:0%
for performing attention so um and
 

02:00:39.199 --> 02:00:41.470 align:start position:0%
for performing attention so um and
running<02:00:39.520><c> it</c><02:00:39.719><c> a</c><02:00:39.880><c> lot</c><02:00:40.159><c> faster</c><02:00:41.000><c> so</c><02:00:41.199><c> flash</c>

02:00:41.470 --> 02:00:41.480 align:start position:0%
running it a lot faster so flash
 

02:00:41.480 --> 02:00:44.709 align:start position:0%
running it a lot faster so flash
attention<02:00:41.960><c> will</c><02:00:42.360><c> come</c><02:00:42.639><c> here</c><02:00:43.000><c> and</c><02:00:43.199><c> we</c><02:00:43.719><c> will</c>

02:00:44.709 --> 02:00:44.719 align:start position:0%
attention will come here and we will
 

02:00:44.719 --> 02:00:46.430 align:start position:0%
attention will come here and we will
take<02:00:44.920><c> out</c><02:00:45.159><c> these</c><02:00:45.320><c> four</c>

02:00:46.430 --> 02:00:46.440 align:start position:0%
take out these four
 

02:00:46.440 --> 02:00:48.790 align:start position:0%
take out these four
lines<02:00:47.440><c> and</c><02:00:47.560><c> Flash</c><02:00:47.840><c> attention</c><02:00:48.239><c> implements</c>

02:00:48.790 --> 02:00:48.800 align:start position:0%
lines and Flash attention implements
 

02:00:48.800 --> 02:00:51.550 align:start position:0%
lines and Flash attention implements
these<02:00:48.960><c> four</c><02:00:49.280><c> lines</c><02:00:49.840><c> really</c><02:00:50.119><c> really</c><02:00:50.560><c> quickly</c>

02:00:51.550 --> 02:00:51.560 align:start position:0%
these four lines really really quickly
 

02:00:51.560 --> 02:00:53.350 align:start position:0%
these four lines really really quickly
and<02:00:52.000><c> how</c><02:00:52.079><c> does</c><02:00:52.239><c> it</c><02:00:52.360><c> do</c><02:00:52.560><c> that</c><02:00:52.960><c> well</c><02:00:53.119><c> flash</c>

02:00:53.350 --> 02:00:53.360 align:start position:0%
and how does it do that well flash
 

02:00:53.360 --> 02:00:57.189 align:start position:0%
and how does it do that well flash
attention<02:00:53.960><c> is</c><02:00:54.400><c> a</c><02:00:54.960><c> kernel</c><02:00:55.360><c> Fusion</c><02:00:56.199><c> operation</c>

02:00:57.189 --> 02:00:57.199 align:start position:0%
attention is a kernel Fusion operation
 

02:00:57.199 --> 02:00:59.709 align:start position:0%
attention is a kernel Fusion operation
so<02:00:57.719><c> you</c><02:00:57.880><c> see</c><02:00:58.159><c> here</c><02:00:58.360><c> we</c><02:00:58.560><c> have</c><02:00:59.239><c> um</c><02:00:59.440><c> in</c><02:00:59.560><c> this</c>

02:00:59.709 --> 02:00:59.719 align:start position:0%
so you see here we have um in this
 

02:00:59.719 --> 02:01:02.430 align:start position:0%
so you see here we have um in this
diagram<02:01:00.719><c> they're</c><02:01:00.880><c> showing</c><02:01:01.199><c> P</c><02:01:01.440><c> torch</c><02:01:02.000><c> and</c><02:01:02.280><c> you</c>

02:01:02.430 --> 02:01:02.440 align:start position:0%
diagram they're showing P torch and you
 

02:01:02.440 --> 02:01:04.870 align:start position:0%
diagram they're showing P torch and you
have<02:01:02.760><c> these</c><02:01:03.000><c> four</c><02:01:03.639><c> operations</c><02:01:04.639><c> uh</c><02:01:04.719><c> they're</c>

02:01:04.870 --> 02:01:04.880 align:start position:0%
have these four operations uh they're
 

02:01:04.880 --> 02:01:06.470 align:start position:0%
have these four operations uh they're
including<02:01:05.280><c> Dropout</c><02:01:05.760><c> but</c><02:01:05.880><c> we</c><02:01:05.960><c> are</c><02:01:06.079><c> not</c><02:01:06.199><c> using</c>

02:01:06.470 --> 02:01:06.480 align:start position:0%
including Dropout but we are not using
 

02:01:06.480 --> 02:01:08.790 align:start position:0%
including Dropout but we are not using
Dropout<02:01:07.040><c> here</c><02:01:07.599><c> so</c><02:01:07.760><c> we</c><02:01:07.960><c> just</c><02:01:08.079><c> have</c><02:01:08.239><c> these</c><02:01:08.400><c> four</c>

02:01:08.790 --> 02:01:08.800 align:start position:0%
Dropout here so we just have these four
 

02:01:08.800 --> 02:01:11.830 align:start position:0%
Dropout here so we just have these four
lines<02:01:09.040><c> of</c><02:01:09.199><c> code</c><02:01:09.920><c> here</c><02:01:10.920><c> and</c><02:01:11.079><c> instead</c><02:01:11.400><c> of</c><02:01:11.599><c> those</c>

02:01:11.830 --> 02:01:11.840 align:start position:0%
lines of code here and instead of those
 

02:01:11.840 --> 02:01:13.950 align:start position:0%
lines of code here and instead of those
we<02:01:11.960><c> are</c><02:01:12.119><c> fusing</c><02:01:12.639><c> them</c><02:01:12.960><c> into</c><02:01:13.199><c> a</c><02:01:13.320><c> single</c><02:01:13.599><c> fused</c>

02:01:13.950 --> 02:01:13.960 align:start position:0%
we are fusing them into a single fused
 

02:01:13.960 --> 02:01:16.629 align:start position:0%
we are fusing them into a single fused
kernel<02:01:14.360><c> of</c><02:01:14.520><c> flash</c><02:01:14.880><c> attention</c><02:01:15.880><c> so</c><02:01:16.040><c> it's</c><02:01:16.159><c> an</c>

02:01:16.629 --> 02:01:16.639 align:start position:0%
kernel of flash attention so it's an
 

02:01:16.639 --> 02:01:19.270 align:start position:0%
kernel of flash attention so it's an
it's<02:01:16.840><c> a</c><02:01:17.320><c> it's</c><02:01:17.400><c> a</c><02:01:17.560><c> kernel</c><02:01:17.960><c> Fusion</c><02:01:18.440><c> algorithm</c>

02:01:19.270 --> 02:01:19.280 align:start position:0%
it's a it's a kernel Fusion algorithm
 

02:01:19.280 --> 02:01:20.589 align:start position:0%
it's a it's a kernel Fusion algorithm
but<02:01:19.400><c> it's</c><02:01:19.480><c> a</c><02:01:19.599><c> kernel</c><02:01:19.840><c> Fusion</c><02:01:20.159><c> that</c><02:01:20.280><c> torch</c>

02:01:20.589 --> 02:01:20.599 align:start position:0%
but it's a kernel Fusion that torch
 

02:01:20.599 --> 02:01:22.589 align:start position:0%
but it's a kernel Fusion that torch
compile<02:01:21.079><c> cannot</c><02:01:21.520><c> find</c>

02:01:22.589 --> 02:01:22.599 align:start position:0%
compile cannot find
 

02:01:22.599 --> 02:01:24.350 align:start position:0%
compile cannot find
and<02:01:22.679><c> the</c><02:01:22.800><c> reason</c><02:01:23.040><c> that</c><02:01:23.159><c> it</c><02:01:23.280><c> cannot</c><02:01:23.599><c> find</c><02:01:23.800><c> it</c><02:01:24.119><c> is</c>

02:01:24.350 --> 02:01:24.360 align:start position:0%
and the reason that it cannot find it is
 

02:01:24.360 --> 02:01:26.750 align:start position:0%
and the reason that it cannot find it is
that<02:01:24.679><c> it</c><02:01:25.159><c> um</c><02:01:25.480><c> requires</c><02:01:25.920><c> an</c><02:01:26.079><c> algorithmic</c>

02:01:26.750 --> 02:01:26.760 align:start position:0%
that it um requires an algorithmic
 

02:01:26.760 --> 02:01:28.870 align:start position:0%
that it um requires an algorithmic
rewrite<02:01:27.480><c> of</c><02:01:27.639><c> how</c><02:01:27.800><c> attention</c><02:01:28.239><c> is</c><02:01:28.440><c> actually</c>

02:01:28.870 --> 02:01:28.880 align:start position:0%
rewrite of how attention is actually
 

02:01:28.880 --> 02:01:31.310 align:start position:0%
rewrite of how attention is actually
implemented<02:01:29.520><c> here</c><02:01:29.639><c> in</c><02:01:29.800><c> this</c><02:01:30.040><c> case</c><02:01:31.000><c> and</c><02:01:31.119><c> what's</c>

02:01:31.310 --> 02:01:31.320 align:start position:0%
implemented here in this case and what's
 

02:01:31.320 --> 02:01:33.510 align:start position:0%
implemented here in this case and what's
remarkable<02:01:31.800><c> about</c><02:01:32.000><c> it</c><02:01:32.159><c> is</c><02:01:32.320><c> that</c><02:01:33.119><c> uh</c><02:01:33.239><c> flash</c>

02:01:33.510 --> 02:01:33.520 align:start position:0%
remarkable about it is that uh flash
 

02:01:33.520 --> 02:01:35.109 align:start position:0%
remarkable about it is that uh flash
attention<02:01:34.000><c> actually</c><02:01:34.320><c> if</c><02:01:34.440><c> you</c><02:01:34.560><c> just</c><02:01:34.760><c> count</c><02:01:35.000><c> the</c>

02:01:35.109 --> 02:01:35.119 align:start position:0%
attention actually if you just count the
 

02:01:35.119 --> 02:01:37.069 align:start position:0%
attention actually if you just count the
number<02:01:35.320><c> of</c><02:01:35.440><c> flops</c><02:01:36.159><c> flash</c><02:01:36.480><c> attention</c><02:01:36.840><c> does</c>

02:01:37.069 --> 02:01:37.079 align:start position:0%
number of flops flash attention does
 

02:01:37.079 --> 02:01:41.189 align:start position:0%
number of flops flash attention does
more<02:01:37.320><c> flops</c><02:01:38.280><c> than</c><02:01:39.159><c> this</c><02:01:39.719><c> attention</c><02:01:40.239><c> here</c><02:01:41.079><c> but</c>

02:01:41.189 --> 02:01:41.199 align:start position:0%
more flops than this attention here but
 

02:01:41.199 --> 02:01:42.310 align:start position:0%
more flops than this attention here but
flash<02:01:41.480><c> attention</c><02:01:41.840><c> is</c><02:01:42.000><c> actually</c>

02:01:42.310 --> 02:01:42.320 align:start position:0%
flash attention is actually
 

02:01:42.320 --> 02:01:45.390 align:start position:0%
flash attention is actually
significantly<02:01:43.560><c> faster</c><02:01:44.560><c> in</c><02:01:44.719><c> fact</c><02:01:44.960><c> they</c><02:01:45.079><c> site</c>

02:01:45.390 --> 02:01:45.400 align:start position:0%
significantly faster in fact they site
 

02:01:45.400 --> 02:01:48.669 align:start position:0%
significantly faster in fact they site
7.<02:01:45.960><c> six</c><02:01:46.520><c> times</c><02:01:46.880><c> faster</c><02:01:47.520><c> potentially</c><02:01:48.520><c> and</c>

02:01:48.669 --> 02:01:48.679 align:start position:0%
7. six times faster potentially and
 

02:01:48.679 --> 02:01:51.470 align:start position:0%
7. six times faster potentially and
that's<02:01:48.920><c> because</c><02:01:49.400><c> it</c><02:01:49.800><c> is</c><02:01:50.079><c> very</c><02:01:50.360><c> mindful</c><02:01:51.119><c> of</c><02:01:51.360><c> the</c>

02:01:51.470 --> 02:01:51.480 align:start position:0%
that's because it is very mindful of the
 

02:01:51.480 --> 02:01:53.790 align:start position:0%
that's because it is very mindful of the
memory<02:01:52.000><c> hierarchy</c><02:01:52.560><c> as</c><02:01:52.639><c> I</c><02:01:52.800><c> described</c><02:01:53.199><c> it</c><02:01:53.639><c> just</c>

02:01:53.790 --> 02:01:53.800 align:start position:0%
memory hierarchy as I described it just
 

02:01:53.800 --> 02:01:55.950 align:start position:0%
memory hierarchy as I described it just
now<02:01:54.679><c> and</c><02:01:54.760><c> so</c><02:01:54.920><c> it's</c><02:01:55.079><c> very</c><02:01:55.239><c> mindful</c><02:01:55.639><c> about</c>

02:01:55.950 --> 02:01:55.960 align:start position:0%
now and so it's very mindful about
 

02:01:55.960 --> 02:01:57.870 align:start position:0%
now and so it's very mindful about
what's<02:01:56.159><c> in</c><02:01:56.440><c> high</c><02:01:56.599><c> bandwidth</c><02:01:56.960><c> memory</c><02:01:57.599><c> what's</c>

02:01:57.870 --> 02:01:57.880 align:start position:0%
what's in high bandwidth memory what's
 

02:01:57.880 --> 02:02:00.589 align:start position:0%
what's in high bandwidth memory what's
in<02:01:58.199><c> the</c><02:01:58.320><c> shared</c><02:01:58.639><c> memory</c><02:01:59.480><c> and</c><02:01:59.880><c> it</c><02:02:00.199><c> is</c><02:02:00.360><c> very</c>

02:02:00.589 --> 02:02:00.599 align:start position:0%
in the shared memory and it is very
 

02:02:00.599 --> 02:02:02.030 align:start position:0%
in the shared memory and it is very
careful<02:02:00.920><c> with</c><02:02:01.040><c> how</c><02:02:01.159><c> it</c><02:02:01.239><c> orchestrates</c><02:02:01.760><c> the</c>

02:02:02.030 --> 02:02:02.040 align:start position:0%
careful with how it orchestrates the
 

02:02:02.040 --> 02:02:04.790 align:start position:0%
careful with how it orchestrates the
computation<02:02:03.040><c> such</c><02:02:03.280><c> that</c><02:02:03.480><c> we</c><02:02:03.639><c> have</c><02:02:04.000><c> fewer</c>

02:02:04.790 --> 02:02:04.800 align:start position:0%
computation such that we have fewer
 

02:02:04.800 --> 02:02:06.910 align:start position:0%
computation such that we have fewer
reads<02:02:05.119><c> and</c><02:02:05.360><c> writes</c><02:02:06.000><c> to</c><02:02:06.199><c> the</c><02:02:06.360><c> high</c><02:02:06.560><c> bandwidth</c>

02:02:06.910 --> 02:02:06.920 align:start position:0%
reads and writes to the high bandwidth
 

02:02:06.920 --> 02:02:08.390 align:start position:0%
reads and writes to the high bandwidth
memory<02:02:07.520><c> and</c><02:02:07.599><c> so</c><02:02:07.760><c> even</c><02:02:07.960><c> though</c><02:02:08.079><c> we're</c><02:02:08.199><c> doing</c>

02:02:08.390 --> 02:02:08.400 align:start position:0%
memory and so even though we're doing
 

02:02:08.400 --> 02:02:10.430 align:start position:0%
memory and so even though we're doing
more<02:02:08.520><c> flops</c><02:02:09.280><c> the</c><02:02:09.440><c> expensive</c><02:02:09.880><c> part</c><02:02:10.040><c> is</c><02:02:10.159><c> they</c>

02:02:10.430 --> 02:02:10.440 align:start position:0%
more flops the expensive part is they
 

02:02:10.440 --> 02:02:12.669 align:start position:0%
more flops the expensive part is they
load<02:02:10.719><c> and</c><02:02:10.880><c> store</c><02:02:11.400><c> into</c><02:02:11.679><c> hbm</c><02:02:12.320><c> and</c><02:02:12.440><c> that's</c><02:02:12.560><c> what</c>

02:02:12.669 --> 02:02:12.679 align:start position:0%
load and store into hbm and that's what
 

02:02:12.679 --> 02:02:15.270 align:start position:0%
load and store into hbm and that's what
they<02:02:12.840><c> avoid</c><02:02:13.719><c> and</c><02:02:13.800><c> so</c><02:02:14.000><c> in</c><02:02:14.159><c> particular</c><02:02:14.960><c> they</c><02:02:15.079><c> do</c>

02:02:15.270 --> 02:02:15.280 align:start position:0%
they avoid and so in particular they do
 

02:02:15.280 --> 02:02:17.870 align:start position:0%
they avoid and so in particular they do
not<02:02:15.480><c> ever</c><02:02:16.079><c> materialize</c><02:02:17.079><c> this</c><02:02:17.280><c> end</c><02:02:17.520><c> byend</c>

02:02:17.870 --> 02:02:17.880 align:start position:0%
not ever materialize this end byend
 

02:02:17.880 --> 02:02:21.510 align:start position:0%
not ever materialize this end byend
attention<02:02:18.280><c> Matrix</c><02:02:19.199><c> this</c><02:02:19.440><c> ATT</c><02:02:20.440><c> here</c><02:02:21.159><c> a</c><02:02:21.280><c> flash</c>

02:02:21.510 --> 02:02:21.520 align:start position:0%
attention Matrix this ATT here a flash
 

02:02:21.520 --> 02:02:23.270 align:start position:0%
attention Matrix this ATT here a flash
attention<02:02:22.040><c> is</c><02:02:22.199><c> designed</c><02:02:22.560><c> such</c><02:02:22.840><c> that</c><02:02:23.119><c> this</c>

02:02:23.270 --> 02:02:23.280 align:start position:0%
attention is designed such that this
 

02:02:23.280 --> 02:02:25.390 align:start position:0%
attention is designed such that this
Matrix<02:02:23.719><c> never</c><02:02:24.000><c> gets</c><02:02:24.280><c> materialized</c><02:02:25.079><c> at</c><02:02:25.239><c> any</c>

02:02:25.390 --> 02:02:25.400 align:start position:0%
Matrix never gets materialized at any
 

02:02:25.400 --> 02:02:28.189 align:start position:0%
Matrix never gets materialized at any
point<02:02:25.920><c> and</c><02:02:26.040><c> it</c><02:02:26.159><c> never</c><02:02:26.440><c> gets</c><02:02:27.159><c> read</c><02:02:27.520><c> or</c><02:02:27.760><c> written</c>

02:02:28.189 --> 02:02:28.199 align:start position:0%
point and it never gets read or written
 

02:02:28.199 --> 02:02:30.350 align:start position:0%
point and it never gets read or written
to<02:02:28.360><c> the</c><02:02:28.520><c> hbm</c><02:02:29.520><c> and</c><02:02:29.639><c> this</c><02:02:29.719><c> is</c><02:02:29.880><c> a</c><02:02:29.960><c> very</c><02:02:30.119><c> large</c>

02:02:30.350 --> 02:02:30.360 align:start position:0%
to the hbm and this is a very large
 

02:02:30.360 --> 02:02:32.910 align:start position:0%
to the hbm and this is a very large
Matrix<02:02:30.880><c> right</c><02:02:31.159><c> so</c><02:02:31.960><c> um</c><02:02:32.280><c> because</c><02:02:32.520><c> this</c><02:02:32.599><c> is</c><02:02:32.760><c> where</c>

02:02:32.910 --> 02:02:32.920 align:start position:0%
Matrix right so um because this is where
 

02:02:32.920 --> 02:02:34.669 align:start position:0%
Matrix right so um because this is where
all<02:02:33.040><c> the</c><02:02:33.159><c> queries</c><02:02:33.480><c> and</c><02:02:33.639><c> keys</c><02:02:33.920><c> interact</c><02:02:34.560><c> and</c>

02:02:34.669 --> 02:02:34.679 align:start position:0%
all the queries and keys interact and
 

02:02:34.679 --> 02:02:36.870 align:start position:0%
all the queries and keys interact and
we're<02:02:34.840><c> sort</c><02:02:35.040><c> of</c><02:02:35.199><c> getting</c>

02:02:36.870 --> 02:02:36.880 align:start position:0%
we're sort of getting
 

02:02:36.880 --> 02:02:40.669 align:start position:0%
we're sort of getting
um<02:02:37.880><c> for</c><02:02:38.119><c> each</c><02:02:38.440><c> head</c><02:02:39.119><c> for</c><02:02:39.400><c> each</c><02:02:39.679><c> batch</c><02:02:39.960><c> element</c>

02:02:40.669 --> 02:02:40.679 align:start position:0%
um for each head for each batch element
 

02:02:40.679 --> 02:02:42.430 align:start position:0%
um for each head for each batch element
we're<02:02:40.880><c> getting</c><02:02:41.079><c> a</c><02:02:41.239><c> t</c><02:02:41.480><c> BYT</c><02:02:41.880><c> Matrix</c><02:02:42.280><c> of</c>

02:02:42.430 --> 02:02:42.440 align:start position:0%
we're getting a t BYT Matrix of
 

02:02:42.440 --> 02:02:45.430 align:start position:0%
we're getting a t BYT Matrix of
attention<02:02:43.360><c> which</c><02:02:43.520><c> is</c><02:02:43.960><c> a</c><02:02:44.560><c> Million</c><02:02:45.040><c> numbers</c>

02:02:45.430 --> 02:02:45.440 align:start position:0%
attention which is a Million numbers
 

02:02:45.440 --> 02:02:47.310 align:start position:0%
attention which is a Million numbers
even<02:02:45.639><c> for</c><02:02:45.800><c> a</c><02:02:45.960><c> single</c><02:02:46.280><c> head</c><02:02:46.520><c> at</c><02:02:46.639><c> a</c><02:02:46.760><c> single</c><02:02:47.040><c> batch</c>

02:02:47.310 --> 02:02:47.320 align:start position:0%
even for a single head at a single batch
 

02:02:47.320 --> 02:02:50.589 align:start position:0%
even for a single head at a single batch
index<02:02:48.159><c> at</c><02:02:48.679><c> like</c><02:02:49.159><c> so</c><02:02:49.800><c> so</c><02:02:49.960><c> basically</c><02:02:50.280><c> this</c><02:02:50.360><c> is</c><02:02:50.480><c> a</c>

02:02:50.589 --> 02:02:50.599 align:start position:0%
index at like so so basically this is a
 

02:02:50.599 --> 02:02:52.669 align:start position:0%
index at like so so basically this is a
ton<02:02:50.800><c> of</c><02:02:51.000><c> memory</c><02:02:51.679><c> and</c><02:02:51.840><c> and</c><02:02:51.920><c> this</c><02:02:52.040><c> is</c><02:02:52.159><c> never</c>

02:02:52.669 --> 02:02:52.679 align:start position:0%
ton of memory and and this is never
 

02:02:52.679 --> 02:02:54.669 align:start position:0%
ton of memory and and this is never
materialized<02:02:53.679><c> and</c><02:02:53.800><c> the</c><02:02:53.920><c> way</c><02:02:54.119><c> that</c><02:02:54.280><c> this</c><02:02:54.360><c> is</c>

02:02:54.669 --> 02:02:54.679 align:start position:0%
materialized and the way that this is
 

02:02:54.679 --> 02:02:57.229 align:start position:0%
materialized and the way that this is
achieved<02:02:55.679><c> is</c><02:02:56.400><c> that</c><02:02:56.800><c> basically</c><02:02:57.119><c> the</c>

02:02:57.229 --> 02:02:57.239 align:start position:0%
achieved is that basically the
 

02:02:57.239 --> 02:02:58.950 align:start position:0%
achieved is that basically the
fundamental<02:02:57.679><c> algorithmic</c><02:02:58.239><c> rewrite</c><02:02:58.719><c> here</c>

02:02:58.950 --> 02:02:58.960 align:start position:0%
fundamental algorithmic rewrite here
 

02:02:58.960 --> 02:03:02.109 align:start position:0%
fundamental algorithmic rewrite here
relies<02:02:59.400><c> on</c><02:02:59.639><c> this</c><02:03:00.360><c> online</c><02:03:00.760><c> softmax</c><02:03:01.400><c> trick</c>

02:03:02.109 --> 02:03:02.119 align:start position:0%
relies on this online softmax trick
 

02:03:02.119 --> 02:03:03.430 align:start position:0%
relies on this online softmax trick
which<02:03:02.280><c> was</c><02:03:02.440><c> proposed</c><02:03:02.880><c> previously</c><02:03:03.239><c> and</c><02:03:03.360><c> I'll</c>

02:03:03.430 --> 02:03:03.440 align:start position:0%
which was proposed previously and I'll
 

02:03:03.440 --> 02:03:05.669 align:start position:0%
which was proposed previously and I'll
show<02:03:03.599><c> you</c><02:03:03.679><c> the</c><02:03:03.800><c> paper</c><02:03:04.000><c> in</c><02:03:04.079><c> a</c><02:03:04.360><c> bit</c><02:03:05.360><c> and</c><02:03:05.560><c> the</c>

02:03:05.669 --> 02:03:05.679 align:start position:0%
show you the paper in a bit and the
 

02:03:05.679 --> 02:03:07.910 align:start position:0%
show you the paper in a bit and the
online<02:03:06.000><c> softmax</c><02:03:06.679><c> trick</c><02:03:07.360><c> coming</c><02:03:07.599><c> from</c><02:03:07.800><c> a</c>

02:03:07.910 --> 02:03:07.920 align:start position:0%
online softmax trick coming from a
 

02:03:07.920 --> 02:03:10.669 align:start position:0%
online softmax trick coming from a
previous<02:03:08.280><c> paper</c><02:03:09.280><c> um</c><02:03:09.719><c> shows</c><02:03:10.159><c> how</c><02:03:10.280><c> you</c><02:03:10.400><c> can</c>

02:03:10.669 --> 02:03:10.679 align:start position:0%
previous paper um shows how you can
 

02:03:10.679 --> 02:03:14.069 align:start position:0%
previous paper um shows how you can
incrementally<02:03:11.520><c> evaluate</c><02:03:12.440><c> a</c><02:03:12.639><c> soft</c><02:03:13.079><c> Max</c>

02:03:14.069 --> 02:03:14.079 align:start position:0%
incrementally evaluate a soft Max
 

02:03:14.079 --> 02:03:16.189 align:start position:0%
incrementally evaluate a soft Max
without<02:03:14.639><c> having</c><02:03:14.880><c> to</c><02:03:15.079><c> sort</c><02:03:15.280><c> of</c><02:03:15.440><c> realize</c><02:03:15.960><c> all</c><02:03:16.079><c> of</c>

02:03:16.189 --> 02:03:16.199 align:start position:0%
without having to sort of realize all of
 

02:03:16.199 --> 02:03:17.990 align:start position:0%
without having to sort of realize all of
the<02:03:16.360><c> inputs</c><02:03:16.800><c> to</c><02:03:16.920><c> the</c><02:03:17.040><c> softmax</c><02:03:17.480><c> to</c><02:03:17.599><c> do</c><02:03:17.719><c> the</c>

02:03:17.990 --> 02:03:18.000 align:start position:0%
the inputs to the softmax to do the
 

02:03:18.000 --> 02:03:19.870 align:start position:0%
the inputs to the softmax to do the
normalization<02:03:19.000><c> and</c><02:03:19.079><c> you</c><02:03:19.239><c> do</c><02:03:19.400><c> that</c><02:03:19.520><c> by</c><02:03:19.679><c> having</c>

02:03:19.870 --> 02:03:19.880 align:start position:0%
normalization and you do that by having
 

02:03:19.880 --> 02:03:22.310 align:start position:0%
normalization and you do that by having
these<02:03:20.040><c> intermediate</c><02:03:20.599><c> variables</c><02:03:21.079><c> M</c><02:03:21.360><c> and</c><02:03:21.520><c> L</c><02:03:22.199><c> and</c>

02:03:22.310 --> 02:03:22.320 align:start position:0%
these intermediate variables M and L and
 

02:03:22.320 --> 02:03:23.990 align:start position:0%
these intermediate variables M and L and
there's<02:03:22.480><c> an</c><02:03:22.679><c> update</c><02:03:23.040><c> to</c><02:03:23.239><c> them</c><02:03:23.639><c> that</c><02:03:23.760><c> allows</c>

02:03:23.990 --> 02:03:24.000 align:start position:0%
there's an update to them that allows
 

02:03:24.000 --> 02:03:26.790 align:start position:0%
there's an update to them that allows
you<02:03:24.119><c> to</c><02:03:24.560><c> evaluate</c><02:03:25.000><c> the</c><02:03:25.079><c> softmax</c><02:03:25.599><c> in</c><02:03:25.719><c> an</c><02:03:25.880><c> online</c>

02:03:26.790 --> 02:03:26.800 align:start position:0%
you to evaluate the softmax in an online
 

02:03:26.800 --> 02:03:30.950 align:start position:0%
you to evaluate the softmax in an online
manner<02:03:28.079><c> um</c><02:03:29.079><c> now</c><02:03:29.239><c> flash</c><02:03:29.639><c> attention</c><02:03:30.639><c> actually</c>

02:03:30.950 --> 02:03:30.960 align:start position:0%
manner um now flash attention actually
 

02:03:30.960 --> 02:03:32.669 align:start position:0%
manner um now flash attention actually
so<02:03:31.159><c> recently</c><02:03:31.480><c> flash</c><02:03:31.760><c> attention</c><02:03:32.040><c> 2</c><02:03:32.320><c> came</c><02:03:32.440><c> out</c>

02:03:32.669 --> 02:03:32.679 align:start position:0%
so recently flash attention 2 came out
 

02:03:32.679 --> 02:03:34.069 align:start position:0%
so recently flash attention 2 came out
as<02:03:32.760><c> well</c><02:03:32.920><c> so</c><02:03:33.040><c> I</c><02:03:33.119><c> have</c><02:03:33.280><c> that</c><02:03:33.400><c> paper</c><02:03:33.639><c> up</c><02:03:33.800><c> here</c><02:03:33.960><c> as</c>

02:03:34.069 --> 02:03:34.079 align:start position:0%
as well so I have that paper up here as
 

02:03:34.079 --> 02:03:36.430 align:start position:0%
as well so I have that paper up here as
well<02:03:34.840><c> uh</c><02:03:35.000><c> that</c><02:03:35.159><c> has</c><02:03:35.320><c> additional</c><02:03:35.719><c> gains</c><02:03:35.960><c> to</c><02:03:36.199><c> how</c>

02:03:36.430 --> 02:03:36.440 align:start position:0%
well uh that has additional gains to how
 

02:03:36.440 --> 02:03:38.910 align:start position:0%
well uh that has additional gains to how
it<02:03:36.760><c> calculates</c><02:03:37.239><c> flash</c><02:03:37.639><c> attention</c><02:03:38.639><c> and</c><02:03:38.760><c> the</c>

02:03:38.910 --> 02:03:38.920 align:start position:0%
it calculates flash attention and the
 

02:03:38.920 --> 02:03:40.470 align:start position:0%
it calculates flash attention and the
original<02:03:39.280><c> paper</c><02:03:39.599><c> that</c><02:03:39.719><c> this</c><02:03:39.840><c> is</c><02:03:40.000><c> based</c><02:03:40.239><c> on</c>

02:03:40.470 --> 02:03:40.480 align:start position:0%
original paper that this is based on
 

02:03:40.480 --> 02:03:42.870 align:start position:0%
original paper that this is based on
basically<02:03:41.440><c> is</c><02:03:41.639><c> this</c><02:03:42.079><c> online</c><02:03:42.400><c> normalizer</c>

02:03:42.870 --> 02:03:42.880 align:start position:0%
basically is this online normalizer
 

02:03:42.880 --> 02:03:45.030 align:start position:0%
basically is this online normalizer
calculation<02:03:43.239><c> for</c><02:03:43.400><c> softmax</c><02:03:44.400><c> and</c><02:03:44.559><c> remarkably</c>

02:03:45.030 --> 02:03:45.040 align:start position:0%
calculation for softmax and remarkably
 

02:03:45.040 --> 02:03:46.870 align:start position:0%
calculation for softmax and remarkably
it<02:03:45.159><c> came</c><02:03:45.280><c> out</c><02:03:45.400><c> of</c><02:03:45.520><c> Nvidia</c><02:03:46.199><c> and</c><02:03:46.320><c> it</c><02:03:46.440><c> came</c><02:03:46.599><c> out</c><02:03:46.719><c> of</c>

02:03:46.870 --> 02:03:46.880 align:start position:0%
it came out of Nvidia and it came out of
 

02:03:46.880 --> 02:03:50.350 align:start position:0%
it came out of Nvidia and it came out of
it<02:03:47.440><c> like</c><02:03:47.639><c> really</c><02:03:47.880><c> early</c><02:03:48.599><c> 2018</c><02:03:49.599><c> so</c><02:03:49.800><c> this</c><02:03:49.880><c> is</c><02:03:50.040><c> 4</c>

02:03:50.350 --> 02:03:50.360 align:start position:0%
it like really early 2018 so this is 4
 

02:03:50.360 --> 02:03:52.830 align:start position:0%
it like really early 2018 so this is 4
years<02:03:50.679><c> before</c><02:03:50.960><c> flash</c><02:03:51.280><c> attention</c>

02:03:52.830 --> 02:03:52.840 align:start position:0%
years before flash attention
 

02:03:52.840 --> 02:03:55.709 align:start position:0%
years before flash attention
and<02:03:53.360><c> this</c><02:03:53.520><c> paper</c><02:03:53.800><c> says</c><02:03:54.159><c> that</c><02:03:55.079><c> we</c><02:03:55.280><c> propose</c><02:03:55.599><c> a</c>

02:03:55.709 --> 02:03:55.719 align:start position:0%
and this paper says that we propose a
 

02:03:55.719 --> 02:03:57.229 align:start position:0%
and this paper says that we propose a
way<02:03:55.840><c> to</c><02:03:55.960><c> compute</c><02:03:56.239><c> the</c><02:03:56.360><c> classical</c><02:03:56.719><c> softmax</c>

02:03:57.229 --> 02:03:57.239 align:start position:0%
way to compute the classical softmax
 

02:03:57.239 --> 02:03:59.030 align:start position:0%
way to compute the classical softmax
with<02:03:57.360><c> fewer</c><02:03:57.639><c> memory</c><02:03:58.000><c> accesses</c><02:03:58.800><c> and</c>

02:03:59.030 --> 02:03:59.040 align:start position:0%
with fewer memory accesses and
 

02:03:59.040 --> 02:04:00.350 align:start position:0%
with fewer memory accesses and
hypothesize<02:03:59.639><c> that</c><02:03:59.760><c> this</c><02:03:59.920><c> reduction</c><02:04:00.239><c> in</c>

02:04:00.350 --> 02:04:00.360 align:start position:0%
hypothesize that this reduction in
 

02:04:00.360 --> 02:04:02.390 align:start position:0%
hypothesize that this reduction in
memory<02:04:00.679><c> accesses</c><02:04:01.079><c> should</c><02:04:01.320><c> improve</c><02:04:01.840><c> softmax</c>

02:04:02.390 --> 02:04:02.400 align:start position:0%
memory accesses should improve softmax
 

02:04:02.400 --> 02:04:05.709 align:start position:0%
memory accesses should improve softmax
performance<02:04:02.800><c> on</c><02:04:03.040><c> actual</c><02:04:03.679><c> hardware</c><02:04:04.679><c> and</c><02:04:05.079><c> so</c>

02:04:05.709 --> 02:04:05.719 align:start position:0%
performance on actual hardware and so
 

02:04:05.719 --> 02:04:08.229 align:start position:0%
performance on actual hardware and so
they<02:04:05.840><c> are</c><02:04:06.159><c> extremely</c><02:04:06.840><c> correct</c><02:04:07.840><c> in</c><02:04:08.040><c> this</c>

02:04:08.229 --> 02:04:08.239 align:start position:0%
they are extremely correct in this
 

02:04:08.239 --> 02:04:10.069 align:start position:0%
they are extremely correct in this
hypothesis<02:04:09.239><c> but</c><02:04:09.360><c> it's</c><02:04:09.480><c> really</c><02:04:09.679><c> fascinating</c>

02:04:10.069 --> 02:04:10.079 align:start position:0%
hypothesis but it's really fascinating
 

02:04:10.079 --> 02:04:11.990 align:start position:0%
hypothesis but it's really fascinating
to<02:04:10.159><c> me</c><02:04:10.280><c> that</c><02:04:10.400><c> they're</c><02:04:10.559><c> from</c><02:04:10.719><c> Nvidia</c><02:04:11.719><c> and</c><02:04:11.880><c> that</c>

02:04:11.990 --> 02:04:12.000 align:start position:0%
to me that they're from Nvidia and that
 

02:04:12.000 --> 02:04:13.709 align:start position:0%
to me that they're from Nvidia and that
they<02:04:12.119><c> had</c><02:04:12.280><c> this</c><02:04:12.440><c> realization</c><02:04:13.440><c> but</c><02:04:13.599><c> they</c>

02:04:13.709 --> 02:04:13.719 align:start position:0%
they had this realization but they
 

02:04:13.719 --> 02:04:15.229 align:start position:0%
they had this realization but they
didn't<02:04:14.040><c> actually</c><02:04:14.320><c> take</c><02:04:14.480><c> it</c><02:04:14.639><c> to</c><02:04:14.840><c> the</c><02:04:15.000><c> actual</c>

02:04:15.229 --> 02:04:15.239 align:start position:0%
didn't actually take it to the actual
 

02:04:15.239 --> 02:04:17.990 align:start position:0%
didn't actually take it to the actual
flash<02:04:15.559><c> attention</c><02:04:16.440><c> that</c><02:04:16.639><c> had</c><02:04:16.760><c> to</c><02:04:16.960><c> come</c><02:04:17.719><c> four</c>

02:04:17.990 --> 02:04:18.000 align:start position:0%
flash attention that had to come four
 

02:04:18.000 --> 02:04:20.030 align:start position:0%
flash attention that had to come four
years<02:04:18.239><c> later</c><02:04:18.599><c> from</c><02:04:18.800><c> Stanford</c><02:04:19.639><c> so</c><02:04:19.840><c> I</c><02:04:19.920><c> don't</c>

02:04:20.030 --> 02:04:20.040 align:start position:0%
years later from Stanford so I don't
 

02:04:20.040 --> 02:04:22.350 align:start position:0%
years later from Stanford so I don't
fully<02:04:20.520><c> understand</c><02:04:20.679><c> the</c><02:04:20.920><c> historical</c><02:04:22.040><c> how</c><02:04:22.199><c> this</c>

02:04:22.350 --> 02:04:22.360 align:start position:0%
fully understand the historical how this
 

02:04:22.360 --> 02:04:24.870 align:start position:0%
fully understand the historical how this
happened<02:04:23.000><c> historically</c><02:04:24.000><c> um</c><02:04:24.400><c> but</c><02:04:24.559><c> they</c><02:04:24.679><c> do</c>

02:04:24.870 --> 02:04:24.880 align:start position:0%
happened historically um but they do
 

02:04:24.880 --> 02:04:26.629 align:start position:0%
happened historically um but they do
basically<02:04:25.239><c> propose</c><02:04:25.599><c> this</c><02:04:25.719><c> online</c><02:04:26.119><c> update</c><02:04:26.440><c> to</c>

02:04:26.629 --> 02:04:26.639 align:start position:0%
basically propose this online update to
 

02:04:26.639 --> 02:04:29.510 align:start position:0%
basically propose this online update to
the<02:04:27.159><c> softmax</c><02:04:28.159><c> uh</c><02:04:28.360><c> right</c><02:04:28.559><c> here</c><02:04:29.159><c> and</c><02:04:29.320><c> this</c><02:04:29.400><c> is</c>

02:04:29.510 --> 02:04:29.520 align:start position:0%
the softmax uh right here and this is
 

02:04:29.520 --> 02:04:31.950 align:start position:0%
the softmax uh right here and this is
fundamentally<02:04:30.239><c> what</c><02:04:30.880><c> they</c><02:04:31.079><c> reuse</c><02:04:31.559><c> here</c><02:04:31.760><c> to</c>

02:04:31.950 --> 02:04:31.960 align:start position:0%
fundamentally what they reuse here to
 

02:04:31.960 --> 02:04:33.470 align:start position:0%
fundamentally what they reuse here to
calculate<02:04:32.320><c> the</c><02:04:32.440><c> softmax</c><02:04:32.880><c> in</c><02:04:32.960><c> a</c><02:04:33.079><c> streaming</c>

02:04:33.470 --> 02:04:33.480 align:start position:0%
calculate the softmax in a streaming
 

02:04:33.480 --> 02:04:35.350 align:start position:0%
calculate the softmax in a streaming
Manner<02:04:34.239><c> and</c><02:04:34.320><c> then</c><02:04:34.440><c> they</c><02:04:34.599><c> realize</c><02:04:35.079><c> they</c><02:04:35.199><c> can</c>

02:04:35.350 --> 02:04:35.360 align:start position:0%
Manner and then they realize they can
 

02:04:35.360 --> 02:04:37.830 align:start position:0%
Manner and then they realize they can
actually<02:04:35.599><c> fuse</c><02:04:35.960><c> all</c><02:04:36.079><c> the</c><02:04:36.199><c> other</c><02:04:36.840><c> operations</c>

02:04:37.830 --> 02:04:37.840 align:start position:0%
actually fuse all the other operations
 

02:04:37.840 --> 02:04:40.149 align:start position:0%
actually fuse all the other operations
with<02:04:38.000><c> the</c><02:04:38.119><c> online</c><02:04:38.400><c> sofx</c><02:04:38.840><c> calculation</c><02:04:39.719><c> into</c><02:04:40.040><c> a</c>

02:04:40.149 --> 02:04:40.159 align:start position:0%
with the online sofx calculation into a
 

02:04:40.159 --> 02:04:42.589 align:start position:0%
with the online sofx calculation into a
single<02:04:40.440><c> fused</c><02:04:40.760><c> kernel</c><02:04:41.199><c> flash</c><02:04:41.480><c> attention</c><02:04:42.400><c> and</c>

02:04:42.589 --> 02:04:42.599 align:start position:0%
single fused kernel flash attention and
 

02:04:42.599 --> 02:04:45.870 align:start position:0%
single fused kernel flash attention and
that's<02:04:43.119><c> what</c><02:04:43.239><c> we</c><02:04:43.360><c> are</c><02:04:43.520><c> about</c><02:04:43.679><c> to</c><02:04:43.960><c> use</c><02:04:44.960><c> so</c><02:04:45.679><c> great</c>

02:04:45.870 --> 02:04:45.880 align:start position:0%
that's what we are about to use so great
 

02:04:45.880 --> 02:04:47.950 align:start position:0%
that's what we are about to use so great
example<02:04:46.199><c> I</c><02:04:46.280><c> think</c><02:04:46.440><c> of</c><02:04:46.719><c> being</c><02:04:46.920><c> aware</c><02:04:47.199><c> of</c><02:04:47.719><c> um</c>

02:04:47.950 --> 02:04:47.960 align:start position:0%
example I think of being aware of um
 

02:04:47.960 --> 02:04:49.910 align:start position:0%
example I think of being aware of um
memory<02:04:48.320><c> hierarchy</c><02:04:49.079><c> the</c><02:04:49.199><c> fact</c><02:04:49.400><c> that</c><02:04:49.520><c> flops</c>

02:04:49.910 --> 02:04:49.920 align:start position:0%
memory hierarchy the fact that flops
 

02:04:49.920 --> 02:04:52.390 align:start position:0%
memory hierarchy the fact that flops
don't<02:04:50.159><c> matter</c><02:04:51.000><c> uh</c><02:04:51.159><c> the</c><02:04:51.280><c> entire</c><02:04:51.760><c> memory</c><02:04:52.079><c> access</c>

02:04:52.390 --> 02:04:52.400 align:start position:0%
don't matter uh the entire memory access
 

02:04:52.400 --> 02:04:54.669 align:start position:0%
don't matter uh the entire memory access
pattern<02:04:52.719><c> matters</c><02:04:53.719><c> and</c><02:04:53.920><c> that</c><02:04:54.119><c> torch</c><02:04:54.360><c> compile</c>

02:04:54.669 --> 02:04:54.679 align:start position:0%
pattern matters and that torch compile
 

02:04:54.679 --> 02:04:55.669 align:start position:0%
pattern matters and that torch compile
is<02:04:54.800><c> amazing</c><02:04:55.159><c> but</c><02:04:55.280><c> there</c><02:04:55.360><c> are</c><02:04:55.480><c> many</c>

02:04:55.669 --> 02:04:55.679 align:start position:0%
is amazing but there are many
 

02:04:55.679 --> 02:04:57.030 align:start position:0%
is amazing but there are many
optimizations<02:04:56.280><c> that</c><02:04:56.400><c> are</c><02:04:56.520><c> still</c><02:04:56.719><c> available</c>

02:04:57.030 --> 02:04:57.040 align:start position:0%
optimizations that are still available
 

02:04:57.040 --> 02:04:59.109 align:start position:0%
optimizations that are still available
to<02:04:57.239><c> us</c><02:04:57.960><c> that</c><02:04:58.119><c> potentially</c><02:04:58.520><c> torch</c><02:04:58.760><c> compile</c>

02:04:59.109 --> 02:04:59.119 align:start position:0%
to us that potentially torch compile
 

02:04:59.119 --> 02:05:01.629 align:start position:0%
to us that potentially torch compile
cannot<02:04:59.400><c> find</c><02:05:00.119><c> maybe</c><02:05:00.520><c> maybe</c><02:05:00.800><c> one</c><02:05:01.000><c> day</c><02:05:01.159><c> it</c><02:05:01.360><c> could</c>

02:05:01.629 --> 02:05:01.639 align:start position:0%
cannot find maybe maybe one day it could
 

02:05:01.639 --> 02:05:04.669 align:start position:0%
cannot find maybe maybe one day it could
but<02:05:02.199><c> right</c><02:05:02.320><c> now</c><02:05:02.480><c> it</c><02:05:02.599><c> seems</c><02:05:02.840><c> like</c><02:05:03.239><c> a</c><02:05:03.360><c> lot</c><02:05:03.520><c> to</c><02:05:03.760><c> ask</c>

02:05:04.669 --> 02:05:04.679 align:start position:0%
but right now it seems like a lot to ask
 

02:05:04.679 --> 02:05:05.790 align:start position:0%
but right now it seems like a lot to ask
so<02:05:04.840><c> here's</c><02:05:05.000><c> what</c><02:05:05.119><c> we're</c><02:05:05.239><c> going</c><02:05:05.400><c> to</c><02:05:05.520><c> do</c><02:05:05.679><c> we're</c>

02:05:05.790 --> 02:05:05.800 align:start position:0%
so here's what we're going to do we're
 

02:05:05.800 --> 02:05:09.350 align:start position:0%
so here's what we're going to do we're
going<02:05:05.960><c> to</c><02:05:06.320><c> use</c><02:05:06.679><c> Flash</c><02:05:07.199><c> attention</c><02:05:08.199><c> and</c><02:05:09.079><c> the</c><02:05:09.199><c> way</c>

02:05:09.350 --> 02:05:09.360 align:start position:0%
going to use Flash attention and the way
 

02:05:09.360 --> 02:05:11.750 align:start position:0%
going to use Flash attention and the way
to<02:05:09.480><c> do</c><02:05:09.679><c> that</c><02:05:10.000><c> basically</c><02:05:10.400><c> in</c><02:05:10.599><c> pytorch</c><02:05:11.520><c> is</c><02:05:11.639><c> we</c>

02:05:11.750 --> 02:05:11.760 align:start position:0%
to do that basically in pytorch is we
 

02:05:11.760 --> 02:05:13.990 align:start position:0%
to do that basically in pytorch is we
are<02:05:11.920><c> going</c><02:05:12.079><c> to</c><02:05:12.360><c> comment</c><02:05:12.719><c> out</c><02:05:13.040><c> these</c><02:05:13.199><c> four</c>

02:05:13.990 --> 02:05:14.000 align:start position:0%
are going to comment out these four
 

02:05:14.000 --> 02:05:15.910 align:start position:0%
are going to comment out these four
lines<02:05:15.000><c> and</c><02:05:15.079><c> we're</c><02:05:15.199><c> going</c><02:05:15.360><c> to</c><02:05:15.480><c> replace</c><02:05:15.840><c> them</c>

02:05:15.910 --> 02:05:15.920 align:start position:0%
lines and we're going to replace them
 

02:05:15.920 --> 02:05:18.350 align:start position:0%
lines and we're going to replace them
with<02:05:16.000><c> a</c><02:05:16.119><c> single</c><02:05:16.760><c> line</c><02:05:17.760><c> and</c><02:05:17.960><c> here</c><02:05:18.079><c> we</c><02:05:18.199><c> are</c>

02:05:18.350 --> 02:05:18.360 align:start position:0%
with a single line and here we are
 

02:05:18.360 --> 02:05:20.310 align:start position:0%
with a single line and here we are
calling<02:05:18.719><c> this</c><02:05:19.040><c> compound</c><02:05:19.719><c> operation</c><02:05:20.119><c> in</c>

02:05:20.310 --> 02:05:20.320 align:start position:0%
calling this compound operation in
 

02:05:20.320 --> 02:05:22.950 align:start position:0%
calling this compound operation in
pytorch<02:05:21.040><c> called</c><02:05:21.280><c> scale</c><02:05:21.840><c> that</c><02:05:22.079><c> product</c>

02:05:22.950 --> 02:05:22.960 align:start position:0%
pytorch called scale that product
 

02:05:22.960 --> 02:05:27.470 align:start position:0%
pytorch called scale that product
attention<02:05:23.960><c> and</c><02:05:24.599><c> uh</c><02:05:24.960><c> pytorch</c><02:05:25.639><c> will</c><02:05:26.280><c> call</c><02:05:27.159><c> flash</c>

02:05:27.470 --> 02:05:27.480 align:start position:0%
attention and uh pytorch will call flash
 

02:05:27.480 --> 02:05:30.990 align:start position:0%
attention and uh pytorch will call flash
attention<02:05:28.360><c> when</c><02:05:28.599><c> you</c><02:05:29.079><c> use</c><02:05:29.320><c> it</c><02:05:29.679><c> in</c><02:05:29.880><c> this</c><02:05:30.079><c> way</c>

02:05:30.990 --> 02:05:31.000 align:start position:0%
attention when you use it in this way
 

02:05:31.000 --> 02:05:32.669 align:start position:0%
attention when you use it in this way
I'm<02:05:31.119><c> not</c><02:05:31.280><c> actually</c><02:05:31.559><c> 100%</c><02:05:31.920><c> sure</c><02:05:32.199><c> why</c><02:05:32.360><c> torch</c>

02:05:32.669 --> 02:05:32.679 align:start position:0%
I'm not actually 100% sure why torch
 

02:05:32.679 --> 02:05:34.189 align:start position:0%
I'm not actually 100% sure why torch
compile<02:05:33.040><c> doesn't</c><02:05:33.280><c> realize</c><02:05:33.639><c> that</c><02:05:33.800><c> these</c><02:05:33.960><c> four</c>

02:05:34.189 --> 02:05:34.199 align:start position:0%
compile doesn't realize that these four
 

02:05:34.199 --> 02:05:36.030 align:start position:0%
compile doesn't realize that these four
lines<02:05:34.599><c> should</c><02:05:34.800><c> just</c><02:05:34.960><c> call</c><02:05:35.199><c> flash</c><02:05:35.480><c> attention</c>

02:05:36.030 --> 02:05:36.040 align:start position:0%
lines should just call flash attention
 

02:05:36.040 --> 02:05:38.310 align:start position:0%
lines should just call flash attention
in<02:05:36.199><c> this</c><02:05:36.440><c> exact</c><02:05:36.800><c> way</c><02:05:37.199><c> we</c><02:05:37.320><c> have</c><02:05:37.440><c> to</c><02:05:37.520><c> do</c><02:05:37.679><c> it</c><02:05:38.119><c> again</c>

02:05:38.310 --> 02:05:38.320 align:start position:0%
in this exact way we have to do it again
 

02:05:38.320 --> 02:05:40.790 align:start position:0%
in this exact way we have to do it again
for<02:05:38.599><c> it</c><02:05:39.280><c> which</c><02:05:39.599><c> in</c><02:05:39.800><c> my</c><02:05:40.000><c> opinion</c><02:05:40.320><c> is</c><02:05:40.440><c> a</c><02:05:40.559><c> little</c>

02:05:40.790 --> 02:05:40.800 align:start position:0%
for it which in my opinion is a little
 

02:05:40.800 --> 02:05:46.310 align:start position:0%
for it which in my opinion is a little
bit<02:05:41.760><c> odd</c><02:05:42.760><c> but</c><02:05:43.599><c> um</c><02:05:44.599><c> here</c><02:05:44.760><c> we</c><02:05:44.880><c> are</c><02:05:45.840><c> so</c><02:05:46.079><c> you</c><02:05:46.199><c> have</c>

02:05:46.310 --> 02:05:46.320 align:start position:0%
bit odd but um here we are so you have
 

02:05:46.320 --> 02:05:48.990 align:start position:0%
bit odd but um here we are so you have
to<02:05:46.440><c> use</c><02:05:46.679><c> this</c><02:05:46.840><c> compound</c><02:05:47.239><c> up</c><02:05:47.679><c> and</c><02:05:48.320><c> uh</c><02:05:48.719><c> let's</c>

02:05:48.990 --> 02:05:49.000 align:start position:0%
to use this compound up and uh let's
 

02:05:49.000 --> 02:05:51.629 align:start position:0%
to use this compound up and uh let's
wait<02:05:49.320><c> for</c><02:05:50.320><c> a</c><02:05:50.440><c> few</c><02:05:50.639><c> moments</c><02:05:50.960><c> before</c><02:05:51.199><c> torch</c><02:05:51.440><c> comp</c>

02:05:51.629 --> 02:05:51.639 align:start position:0%
wait for a few moments before torch comp
 

02:05:51.639 --> 02:05:53.629 align:start position:0%
wait for a few moments before torch comp
compile<02:05:51.880><c> gets</c><02:05:52.040><c> around</c><02:05:52.239><c> to</c><02:05:52.440><c> it</c><02:05:53.040><c> and</c><02:05:53.199><c> then</c><02:05:53.400><c> let's</c>

02:05:53.629 --> 02:05:53.639 align:start position:0%
compile gets around to it and then let's
 

02:05:53.639 --> 02:05:58.669 align:start position:0%
compile gets around to it and then let's
remember<02:05:54.159><c> that</c><02:05:54.800><c> we</c><02:05:55.000><c> achieved</c><02:05:56.159><c> 6.05</c><02:05:57.559><c> 661</c><02:05:58.559><c> I</c>

02:05:58.669 --> 02:05:58.679 align:start position:0%
remember that we achieved 6.05 661 I
 

02:05:58.679 --> 02:06:00.030 align:start position:0%
remember that we achieved 6.05 661 I
have<02:05:58.800><c> it</c><02:05:59.000><c> here</c><02:05:59.199><c> that's</c><02:05:59.360><c> the</c><02:05:59.480><c> loss</c><02:05:59.800><c> we</c><02:05:59.880><c> were</c>

02:06:00.030 --> 02:06:00.040 align:start position:0%
have it here that's the loss we were
 

02:06:00.040 --> 02:06:03.229 align:start position:0%
have it here that's the loss we were
expecting<02:06:00.320><c> to</c><02:06:00.559><c> see</c><02:06:01.559><c> and</c><02:06:01.800><c> we</c><02:06:01.960><c> took</c><02:06:02.280><c> 130</c>

02:06:03.229 --> 02:06:03.239 align:start position:0%
expecting to see and we took 130
 

02:06:03.239 --> 02:06:05.709 align:start position:0%
expecting to see and we took 130
milliseconds<02:06:04.239><c> uh</c><02:06:04.360><c> before</c><02:06:04.599><c> this</c><02:06:04.760><c> change</c><02:06:05.599><c> so</c>

02:06:05.709 --> 02:06:05.719 align:start position:0%
milliseconds uh before this change so
 

02:06:05.719 --> 02:06:07.350 align:start position:0%
milliseconds uh before this change so
we're<02:06:05.960><c> expecting</c><02:06:06.239><c> to</c><02:06:06.360><c> see</c><02:06:06.639><c> the</c><02:06:06.880><c> exact</c><02:06:07.159><c> same</c>

02:06:07.350 --> 02:06:07.360 align:start position:0%
we're expecting to see the exact same
 

02:06:07.360 --> 02:06:10.589 align:start position:0%
we're expecting to see the exact same
result<02:06:07.920><c> by</c><02:06:08.119><c> iteration</c><02:06:08.840><c> 49</c><02:06:09.840><c> but</c><02:06:10.000><c> we</c><02:06:10.159><c> expect</c><02:06:10.440><c> to</c>

02:06:10.589 --> 02:06:10.599 align:start position:0%
result by iteration 49 but we expect to
 

02:06:10.599 --> 02:06:13.270 align:start position:0%
result by iteration 49 but we expect to
see<02:06:11.239><c> faster</c><02:06:11.760><c> runtime</c><02:06:12.760><c> because</c><02:06:13.000><c> Flash</c>

02:06:13.270 --> 02:06:13.280 align:start position:0%
see faster runtime because Flash
 

02:06:13.280 --> 02:06:14.910 align:start position:0%
see faster runtime because Flash
attention<02:06:13.639><c> is</c><02:06:13.800><c> just</c><02:06:14.040><c> a</c><02:06:14.239><c> an</c><02:06:14.400><c> algorithmic</c>

02:06:14.910 --> 02:06:14.920 align:start position:0%
attention is just a an algorithmic
 

02:06:14.920 --> 02:06:16.629 align:start position:0%
attention is just a an algorithmic
rewrite<02:06:15.320><c> and</c><02:06:15.400><c> it's</c><02:06:15.520><c> a</c><02:06:15.679><c> faster</c><02:06:15.960><c> kernel</c><02:06:16.440><c> but</c><02:06:16.559><c> it</c>

02:06:16.629 --> 02:06:16.639 align:start position:0%
rewrite and it's a faster kernel but it
 

02:06:16.639 --> 02:06:17.910 align:start position:0%
rewrite and it's a faster kernel but it
doesn't<02:06:16.880><c> actually</c><02:06:17.159><c> change</c><02:06:17.520><c> any</c><02:06:17.679><c> of</c><02:06:17.760><c> the</c>

02:06:17.910 --> 02:06:17.920 align:start position:0%
doesn't actually change any of the
 

02:06:17.920 --> 02:06:19.350 align:start position:0%
doesn't actually change any of the
computation<02:06:18.440><c> and</c><02:06:18.559><c> we</c><02:06:18.679><c> should</c><02:06:18.880><c> have</c><02:06:19.000><c> the</c><02:06:19.119><c> exact</c>

02:06:19.350 --> 02:06:19.360 align:start position:0%
computation and we should have the exact
 

02:06:19.360 --> 02:06:21.830 align:start position:0%
computation and we should have the exact
same<02:06:19.920><c> optimization</c><02:06:20.920><c> so</c><02:06:21.159><c> okay</c><02:06:21.239><c> so</c><02:06:21.360><c> we're</c><02:06:21.559><c> a</c><02:06:21.639><c> lot</c>

02:06:21.830 --> 02:06:21.840 align:start position:0%
same optimization so okay so we're a lot
 

02:06:21.840 --> 02:06:24.870 align:start position:0%
same optimization so okay so we're a lot
faster<02:06:22.239><c> we're</c><02:06:22.480><c> at</c><02:06:22.639><c> about</c><02:06:22.880><c> 95</c><02:06:23.880><c> milliseconds</c>

02:06:24.870 --> 02:06:24.880 align:start position:0%
faster we're at about 95 milliseconds
 

02:06:24.880 --> 02:06:27.990 align:start position:0%
faster we're at about 95 milliseconds
and<02:06:25.480><c> we</c><02:06:25.719><c> achiev</c>

02:06:27.990 --> 02:06:28.000 align:start position:0%
and we achiev
 

02:06:28.000 --> 02:06:31.270 align:start position:0%
and we achiev
6.58<02:06:29.000><c> okay</c><02:06:29.199><c> so</c><02:06:29.760><c> they're</c><02:06:30.040><c> basically</c><02:06:30.400><c> identical</c>

02:06:31.270 --> 02:06:31.280 align:start position:0%
6.58 okay so they're basically identical
 

02:06:31.280 --> 02:06:34.350 align:start position:0%
6.58 okay so they're basically identical
up<02:06:31.440><c> to</c><02:06:31.760><c> a</c><02:06:31.880><c> floating</c><02:06:32.280><c> Point</c><02:06:32.679><c> fudge</c><02:06:33.159><c> Factor</c><02:06:34.159><c> so</c>

02:06:34.350 --> 02:06:34.360 align:start position:0%
up to a floating Point fudge Factor so
 

02:06:34.360 --> 02:06:36.390 align:start position:0%
up to a floating Point fudge Factor so
it's<02:06:34.480><c> the</c><02:06:34.599><c> identical</c><02:06:35.040><c> computation</c><02:06:36.040><c> but</c><02:06:36.159><c> it's</c>

02:06:36.390 --> 02:06:36.400 align:start position:0%
it's the identical computation but it's
 

02:06:36.400 --> 02:06:39.189 align:start position:0%
it's the identical computation but it's
significantly<02:06:37.000><c> faster</c><02:06:37.800><c> going</c><02:06:38.079><c> from</c><02:06:38.360><c> 130</c><02:06:38.960><c> to</c>

02:06:39.189 --> 02:06:39.199 align:start position:0%
significantly faster going from 130 to
 

02:06:39.199 --> 02:06:40.629 align:start position:0%
significantly faster going from 130 to
roughly<02:06:39.599><c> 90</c>

02:06:40.629 --> 02:06:40.639 align:start position:0%
roughly 90
 

02:06:40.639 --> 02:06:44.790 align:start position:0%
roughly 90
96<02:06:41.639><c> and</c><02:06:41.760><c> so</c><02:06:42.079><c> this</c><02:06:42.239><c> is</c><02:06:43.040><c> um</c><02:06:43.239><c> 96</c><02:06:43.840><c> divide</c>

02:06:44.790 --> 02:06:44.800 align:start position:0%
96 and so this is um 96 divide
 

02:06:44.800 --> 02:06:48.870 align:start position:0%
96 and so this is um 96 divide
130ish<02:06:45.800><c> so</c><02:06:46.280><c> this</c><02:06:46.400><c> is</c><02:06:46.520><c> maybe</c><02:06:46.760><c> 27</c><02:06:47.400><c> is%</c>

02:06:48.870 --> 02:06:48.880 align:start position:0%
130ish so this is maybe 27 is%
 

02:06:48.880 --> 02:06:52.470 align:start position:0%
130ish so this is maybe 27 is%
Improvement<02:06:49.880><c> um</c><02:06:50.400><c> so</c><02:06:51.360><c> uh</c><02:06:51.639><c> really</c><02:06:51.800><c> interesting</c>

02:06:52.470 --> 02:06:52.480 align:start position:0%
Improvement um so uh really interesting
 

02:06:52.480 --> 02:06:54.950 align:start position:0%
Improvement um so uh really interesting
and<02:06:52.639><c> that</c><02:06:52.719><c> is</c><02:06:52.840><c> Flash</c><02:06:53.559><c> retention</c><02:06:54.559><c> okay</c><02:06:54.719><c> we</c><02:06:54.800><c> are</c>

02:06:54.950 --> 02:06:54.960 align:start position:0%
and that is Flash retention okay we are
 

02:06:54.960 --> 02:06:56.990 align:start position:0%
and that is Flash retention okay we are
now<02:06:55.159><c> getting</c><02:06:55.400><c> to</c><02:06:55.679><c> one</c><02:06:55.800><c> of</c><02:06:55.920><c> my</c><02:06:56.119><c> favorite</c>

02:06:56.990 --> 02:06:57.000 align:start position:0%
now getting to one of my favorite
 

02:06:57.000 --> 02:06:59.549 align:start position:0%
now getting to one of my favorite
optimizations<02:06:58.000><c> and</c><02:06:58.199><c> it</c><02:06:58.320><c> is</c><02:06:58.840><c> simultaneously</c>

02:06:59.549 --> 02:06:59.559 align:start position:0%
optimizations and it is simultaneously
 

02:06:59.559 --> 02:07:02.030 align:start position:0%
optimizations and it is simultaneously
the<02:06:59.679><c> dumbest</c><02:07:00.280><c> and</c><02:07:00.520><c> the</c><02:07:00.639><c> most</c><02:07:00.840><c> brilliant</c>

02:07:02.030 --> 02:07:02.040 align:start position:0%
the dumbest and the most brilliant
 

02:07:02.040 --> 02:07:03.950 align:start position:0%
the dumbest and the most brilliant
optimization<02:07:03.040><c> and</c><02:07:03.199><c> it's</c><02:07:03.480><c> always</c><02:07:03.719><c> a</c><02:07:03.840><c> little</c>

02:07:03.950 --> 02:07:03.960 align:start position:0%
optimization and it's always a little
 

02:07:03.960 --> 02:07:06.270 align:start position:0%
optimization and it's always a little
bit<02:07:04.079><c> surprising</c><02:07:04.480><c> to</c><02:07:04.599><c> me</c><02:07:05.559><c> um</c><02:07:05.880><c> anyway</c><02:07:06.159><c> so</c>

02:07:06.270 --> 02:07:06.280 align:start position:0%
bit surprising to me um anyway so
 

02:07:06.280 --> 02:07:08.189 align:start position:0%
bit surprising to me um anyway so
basically<02:07:06.639><c> I</c><02:07:06.719><c> mentioned</c><02:07:07.159><c> a</c><02:07:07.280><c> few</c><02:07:07.559><c> minutes</c><02:07:07.840><c> ago</c>

02:07:08.189 --> 02:07:08.199 align:start position:0%
basically I mentioned a few minutes ago
 

02:07:08.199 --> 02:07:10.629 align:start position:0%
basically I mentioned a few minutes ago
that<02:07:08.800><c> there</c><02:07:08.920><c> are</c><02:07:09.400><c> some</c><02:07:09.920><c> numbers</c><02:07:10.280><c> that</c><02:07:10.400><c> are</c>

02:07:10.629 --> 02:07:10.639 align:start position:0%
that there are some numbers that are
 

02:07:10.639 --> 02:07:13.310 align:start position:0%
that there are some numbers that are
nice<02:07:11.040><c> and</c><02:07:11.159><c> some</c><02:07:11.320><c> numbers</c><02:07:11.639><c> that</c><02:07:11.719><c> are</c><02:07:11.880><c> ugly</c><02:07:12.840><c> so</c>

02:07:13.310 --> 02:07:13.320 align:start position:0%
nice and some numbers that are ugly so
 

02:07:13.320 --> 02:07:17.069 align:start position:0%
nice and some numbers that are ugly so
64<02:07:14.119><c> is</c><02:07:14.239><c> a</c><02:07:14.599><c> beautiful</c><02:07:15.199><c> nice</c><02:07:15.440><c> number</c><02:07:16.000><c> 128</c><02:07:16.880><c> is</c>

02:07:17.069 --> 02:07:17.079 align:start position:0%
64 is a beautiful nice number 128 is
 

02:07:17.079 --> 02:07:20.109 align:start position:0%
64 is a beautiful nice number 128 is
even<02:07:17.360><c> nicer</c><02:07:17.880><c> 256</c><02:07:18.639><c> is</c><02:07:18.880><c> beautiful</c><02:07:19.800><c> what</c><02:07:19.920><c> makes</c>

02:07:20.109 --> 02:07:20.119 align:start position:0%
even nicer 256 is beautiful what makes
 

02:07:20.119 --> 02:07:21.149 align:start position:0%
even nicer 256 is beautiful what makes
these<02:07:20.239><c> numbers</c><02:07:20.520><c> beautiful</c><02:07:20.880><c> is</c><02:07:20.960><c> that</c><02:07:21.079><c> there</c>

02:07:21.149 --> 02:07:21.159 align:start position:0%
these numbers beautiful is that there
 

02:07:21.159 --> 02:07:23.189 align:start position:0%
these numbers beautiful is that there
are<02:07:21.239><c> many</c><02:07:21.599><c> powers</c><02:07:21.920><c> of</c><02:07:22.119><c> two</c><02:07:22.559><c> inside</c><02:07:22.880><c> them</c><02:07:23.079><c> you</c>

02:07:23.189 --> 02:07:23.199 align:start position:0%
are many powers of two inside them you
 

02:07:23.199 --> 02:07:26.310 align:start position:0%
are many powers of two inside them you
can<02:07:23.360><c> divide</c><02:07:23.639><c> by</c><02:07:23.760><c> two</c><02:07:24.000><c> many</c><02:07:24.440><c> times</c><02:07:25.440><c> and</c><02:07:25.960><c> uh</c>

02:07:26.310 --> 02:07:26.320 align:start position:0%
can divide by two many times and uh
 

02:07:26.320 --> 02:07:28.390 align:start position:0%
can divide by two many times and uh
examples<02:07:26.639><c> of</c><02:07:26.800><c> ugly</c><02:07:27.079><c> numbers</c><02:07:27.440><c> are</c><02:07:27.639><c> like</c><02:07:27.800><c> 13</c><02:07:28.239><c> and</c>

02:07:28.390 --> 02:07:28.400 align:start position:0%
examples of ugly numbers are like 13 and
 

02:07:28.400 --> 02:07:30.629 align:start position:0%
examples of ugly numbers are like 13 and
17<02:07:28.960><c> and</c><02:07:29.079><c> something</c><02:07:29.360><c> like</c><02:07:29.559><c> that</c><02:07:29.760><c> prime</c><02:07:30.040><c> numbers</c>

02:07:30.629 --> 02:07:30.639 align:start position:0%
17 and something like that prime numbers
 

02:07:30.639 --> 02:07:32.790 align:start position:0%
17 and something like that prime numbers
numbers<02:07:30.920><c> that</c><02:07:31.000><c> are</c><02:07:31.159><c> not</c><02:07:31.360><c> even</c><02:07:31.719><c> and</c><02:07:31.840><c> so</c><02:07:32.000><c> on</c><02:07:32.719><c> and</c>

02:07:32.790 --> 02:07:32.800 align:start position:0%
numbers that are not even and so on and
 

02:07:32.800 --> 02:07:34.549 align:start position:0%
numbers that are not even and so on and
so<02:07:33.000><c> pretty</c><02:07:33.159><c> much</c><02:07:33.320><c> you</c><02:07:33.480><c> always</c><02:07:33.920><c> want</c><02:07:34.040><c> to</c><02:07:34.239><c> use</c>

02:07:34.549 --> 02:07:34.559 align:start position:0%
so pretty much you always want to use
 

02:07:34.559 --> 02:07:36.350 align:start position:0%
so pretty much you always want to use
nice<02:07:34.880><c> numbers</c><02:07:35.360><c> in</c><02:07:35.520><c> all</c><02:07:35.639><c> of</c><02:07:35.760><c> your</c><02:07:35.960><c> code</c><02:07:36.239><c> that</c>

02:07:36.350 --> 02:07:36.360 align:start position:0%
nice numbers in all of your code that
 

02:07:36.360 --> 02:07:38.310 align:start position:0%
nice numbers in all of your code that
deals<02:07:36.559><c> with</c><02:07:36.679><c> neural</c><02:07:36.960><c> networks</c><02:07:37.280><c> or</c><02:07:37.480><c> Cuda</c>

02:07:38.310 --> 02:07:38.320 align:start position:0%
deals with neural networks or Cuda
 

02:07:38.320 --> 02:07:40.830 align:start position:0%
deals with neural networks or Cuda
because<02:07:39.320><c> everything</c><02:07:39.639><c> in</c><02:07:39.800><c> Cuda</c><02:07:40.280><c> Works</c><02:07:40.520><c> in</c><02:07:40.679><c> sort</c>

02:07:40.830 --> 02:07:40.840 align:start position:0%
because everything in Cuda Works in sort
 

02:07:40.840 --> 02:07:42.870 align:start position:0%
because everything in Cuda Works in sort
of<02:07:41.000><c> like</c><02:07:41.159><c> powers</c><02:07:41.400><c> of</c><02:07:41.559><c> two</c><02:07:42.159><c> and</c><02:07:42.400><c> lots</c><02:07:42.559><c> of</c>

02:07:42.870 --> 02:07:42.880 align:start position:0%
of like powers of two and lots of
 

02:07:42.880 --> 02:07:45.109 align:start position:0%
of like powers of two and lots of
kernels<02:07:43.880><c> are</c><02:07:44.119><c> written</c><02:07:44.440><c> in</c><02:07:44.559><c> terms</c><02:07:44.760><c> of</c><02:07:44.880><c> powers</c>

02:07:45.109 --> 02:07:45.119 align:start position:0%
kernels are written in terms of powers
 

02:07:45.119 --> 02:07:46.990 align:start position:0%
kernels are written in terms of powers
of<02:07:45.280><c> Two</c><02:07:45.760><c> And</c><02:07:45.840><c> there</c><02:07:45.960><c> are</c><02:07:46.119><c> lots</c><02:07:46.280><c> of</c><02:07:46.440><c> blocks</c><02:07:46.800><c> of</c>

02:07:46.990 --> 02:07:47.000 align:start position:0%
of Two And there are lots of blocks of
 

02:07:47.000 --> 02:07:50.549 align:start position:0%
of Two And there are lots of blocks of
sizes<02:07:47.400><c> 16</c><02:07:47.920><c> and</c><02:07:48.840><c> uh</c><02:07:48.960><c> 64</c><02:07:49.520><c> and</c><02:07:49.679><c> so</c><02:07:49.840><c> on</c><02:07:50.360><c> so</c>

02:07:50.549 --> 02:07:50.559 align:start position:0%
sizes 16 and uh 64 and so on so
 

02:07:50.559 --> 02:07:52.549 align:start position:0%
sizes 16 and uh 64 and so on so
everything<02:07:50.800><c> is</c><02:07:50.960><c> written</c><02:07:51.159><c> in</c><02:07:51.280><c> those</c><02:07:51.679><c> terms</c><02:07:52.440><c> and</c>

02:07:52.549 --> 02:07:52.559 align:start position:0%
everything is written in those terms and
 

02:07:52.559 --> 02:07:54.270 align:start position:0%
everything is written in those terms and
you<02:07:52.719><c> always</c><02:07:52.920><c> have</c><02:07:53.079><c> special</c><02:07:53.440><c> case</c><02:07:53.840><c> handling</c>

02:07:54.270 --> 02:07:54.280 align:start position:0%
you always have special case handling
 

02:07:54.280 --> 02:07:57.270 align:start position:0%
you always have special case handling
for<02:07:54.440><c> all</c><02:07:54.599><c> kinds</c><02:07:54.840><c> of</c><02:07:55.559><c> uh</c><02:07:55.760><c> logic</c><02:07:56.280><c> that</c><02:07:56.840><c> U</c><02:07:57.119><c> when</c>

02:07:57.270 --> 02:07:57.280 align:start position:0%
for all kinds of uh logic that U when
 

02:07:57.280 --> 02:08:00.310 align:start position:0%
for all kinds of uh logic that U when
your<02:07:57.480><c> inputs</c><02:07:57.960><c> are</c><02:07:58.199><c> not</c><02:07:58.800><c> made</c><02:07:59.040><c> of</c><02:07:59.239><c> nice</c><02:07:59.520><c> numbers</c>

02:08:00.310 --> 02:08:00.320 align:start position:0%
your inputs are not made of nice numbers
 

02:08:00.320 --> 02:08:01.830 align:start position:0%
your inputs are not made of nice numbers
so<02:08:00.480><c> let's</c><02:08:00.639><c> see</c><02:08:00.760><c> what</c><02:08:00.880><c> that</c><02:08:00.960><c> looks</c><02:08:01.199><c> like</c>

02:08:01.830 --> 02:08:01.840 align:start position:0%
so let's see what that looks like
 

02:08:01.840 --> 02:08:03.510 align:start position:0%
so let's see what that looks like
basically<02:08:02.199><c> scan</c><02:08:02.440><c> your</c><02:08:02.599><c> code</c><02:08:02.960><c> and</c><02:08:03.119><c> look</c><02:08:03.280><c> for</c>

02:08:03.510 --> 02:08:03.520 align:start position:0%
basically scan your code and look for
 

02:08:03.520 --> 02:08:06.830 align:start position:0%
basically scan your code and look for
ugly<02:08:03.840><c> numbers</c><02:08:04.360><c> is</c><02:08:04.559><c> roughly</c><02:08:05.199><c> theistic</c><02:08:06.199><c> so</c>

02:08:06.830 --> 02:08:06.840 align:start position:0%
ugly numbers is roughly theistic so
 

02:08:06.840 --> 02:08:10.750 align:start position:0%
ugly numbers is roughly theistic so
three<02:08:07.159><c> times</c><02:08:08.079><c> is</c><02:08:08.320><c> kind</c><02:08:08.440><c> of</c><02:08:08.599><c> ugly</c><02:08:09.440><c> um</c><02:08:10.400><c> I'm</c><02:08:10.520><c> not</c>

02:08:10.750 --> 02:08:10.760 align:start position:0%
three times is kind of ugly um I'm not
 

02:08:10.760 --> 02:08:12.870 align:start position:0%
three times is kind of ugly um I'm not
100%<02:08:11.159><c> sure</c><02:08:11.320><c> maybe</c><02:08:11.559><c> this</c><02:08:11.679><c> can</c><02:08:11.800><c> be</c><02:08:11.960><c> improved</c><02:08:12.639><c> but</c>

02:08:12.870 --> 02:08:12.880 align:start position:0%
100% sure maybe this can be improved but
 

02:08:12.880 --> 02:08:15.589 align:start position:0%
100% sure maybe this can be improved but
this<02:08:13.000><c> is</c><02:08:13.320><c> uh</c><02:08:13.440><c> this</c><02:08:13.559><c> is</c><02:08:13.719><c> ugly</c><02:08:14.040><c> and</c><02:08:14.199><c> not</c>

02:08:15.589 --> 02:08:15.599 align:start position:0%
this is uh this is ugly and not
 

02:08:15.599 --> 02:08:20.510 align:start position:0%
this is uh this is ugly and not
ideal<02:08:16.840><c> um</c><02:08:17.840><c> four</c><02:08:18.199><c> times</c><02:08:18.480><c> is</c><02:08:18.719><c> nice</c><02:08:19.719><c> so</c><02:08:19.960><c> that's</c><02:08:20.320><c> uh</c>

02:08:20.510 --> 02:08:20.520 align:start position:0%
ideal um four times is nice so that's uh
 

02:08:20.520 --> 02:08:22.589 align:start position:0%
ideal um four times is nice so that's uh
that's<02:08:20.760><c> nice</c>

02:08:22.589 --> 02:08:22.599 align:start position:0%
that's nice
 

02:08:22.599 --> 02:08:25.549 align:start position:0%
that's nice
1024<02:08:23.520><c> is</c><02:08:23.719><c> very</c><02:08:23.960><c> nice</c><02:08:24.199><c> that's</c><02:08:24.320><c> a</c><02:08:24.440><c> power</c><02:08:24.639><c> of</c><02:08:24.800><c> two</c>

02:08:25.549 --> 02:08:25.559 align:start position:0%
1024 is very nice that's a power of two
 

02:08:25.559 --> 02:08:28.589 align:start position:0%
1024 is very nice that's a power of two
12<02:08:26.000><c> is</c><02:08:26.119><c> a</c><02:08:26.239><c> little</c><02:08:26.400><c> bit</c><02:08:26.719><c> suspicious</c><02:08:27.719><c> um</c><02:08:28.239><c> not</c><02:08:28.440><c> too</c>

02:08:28.589 --> 02:08:28.599 align:start position:0%
12 is a little bit suspicious um not too
 

02:08:28.599 --> 02:08:32.229 align:start position:0%
12 is a little bit suspicious um not too
many<02:08:28.800><c> powers</c><02:08:29.000><c> of</c><02:08:29.159><c> two</c><02:08:29.480><c> 768</c><02:08:30.079><c> is</c><02:08:30.280><c> great</c><02:08:30.920><c> 50,</c><02:08:31.480><c> 257</c>

02:08:32.229 --> 02:08:32.239 align:start position:0%
many powers of two 768 is great 50, 257
 

02:08:32.239 --> 02:08:36.030 align:start position:0%
many powers of two 768 is great 50, 257
is<02:08:32.400><c> a</c><02:08:32.639><c> really</c><02:08:32.960><c> really</c><02:08:33.199><c> ugly</c><02:08:33.599><c> number</c><02:08:34.760><c> um</c><02:08:35.760><c> it's</c>

02:08:36.030 --> 02:08:36.040 align:start position:0%
is a really really ugly number um it's
 

02:08:36.040 --> 02:08:38.669 align:start position:0%
is a really really ugly number um it's
first<02:08:36.199><c> of</c><02:08:36.320><c> all</c><02:08:36.440><c> it's</c><02:08:36.639><c> odd</c><02:08:37.239><c> so</c><02:08:38.159><c> uh</c><02:08:38.280><c> and</c><02:08:38.400><c> there's</c>

02:08:38.669 --> 02:08:38.679 align:start position:0%
first of all it's odd so uh and there's
 

02:08:38.679 --> 02:08:40.790 align:start position:0%
first of all it's odd so uh and there's
no<02:08:38.960><c> not</c><02:08:39.079><c> too</c><02:08:39.199><c> many</c><02:08:39.360><c> powers</c><02:08:39.599><c> of</c><02:08:39.719><c> two</c><02:08:39.920><c> in</c><02:08:40.119><c> there</c>

02:08:40.790 --> 02:08:40.800 align:start position:0%
no not too many powers of two in there
 

02:08:40.800 --> 02:08:43.549 align:start position:0%
no not too many powers of two in there
so<02:08:41.719><c> this</c><02:08:41.840><c> is</c><02:08:41.920><c> a</c><02:08:42.079><c> very</c><02:08:42.239><c> ugly</c><02:08:42.559><c> number</c><02:08:43.239><c> and</c><02:08:43.400><c> it's</c>

02:08:43.549 --> 02:08:43.559 align:start position:0%
so this is a very ugly number and it's
 

02:08:43.559 --> 02:08:45.350 align:start position:0%
so this is a very ugly number and it's
highly<02:08:43.920><c> suspicious</c><02:08:44.920><c> and</c><02:08:45.040><c> then</c><02:08:45.159><c> when</c><02:08:45.239><c> we</c>

02:08:45.350 --> 02:08:45.360 align:start position:0%
highly suspicious and then when we
 

02:08:45.360 --> 02:08:48.189 align:start position:0%
highly suspicious and then when we
scroll<02:08:45.719><c> down</c><02:08:46.199><c> all</c><02:08:46.440><c> these</c><02:08:46.599><c> numbers</c><02:08:46.800><c> are</c><02:08:47.199><c> nice</c>

02:08:48.189 --> 02:08:48.199 align:start position:0%
scroll down all these numbers are nice
 

02:08:48.199 --> 02:08:50.350 align:start position:0%
scroll down all these numbers are nice
and<02:08:48.360><c> then</c><02:08:48.559><c> here</c><02:08:48.760><c> we</c><02:08:49.000><c> have</c><02:08:49.719><c> mostly</c><02:08:50.079><c> nice</c>

02:08:50.350 --> 02:08:50.360 align:start position:0%
and then here we have mostly nice
 

02:08:50.360 --> 02:08:53.310 align:start position:0%
and then here we have mostly nice
numbers<02:08:50.840><c> except</c><02:08:51.440><c> for</c><02:08:51.880><c> 25</c><02:08:52.880><c> so</c><02:08:53.040><c> in</c><02:08:53.159><c> this</c>

02:08:53.310 --> 02:08:53.320 align:start position:0%
numbers except for 25 so in this
 

02:08:53.320 --> 02:08:55.229 align:start position:0%
numbers except for 25 so in this
configuration<02:08:53.719><c> of</c><02:08:53.840><c> gpt2</c><02:08:54.320><c> XL</c><02:08:54.800><c> a</c><02:08:54.960><c> number</c><02:08:55.119><c> of</c>

02:08:55.229 --> 02:08:55.239 align:start position:0%
configuration of gpt2 XL a number of
 

02:08:55.239 --> 02:08:57.390 align:start position:0%
configuration of gpt2 XL a number of
heads<02:08:55.440><c> is</c><02:08:55.599><c> 25</c><02:08:56.520><c> uh</c><02:08:56.639><c> that's</c><02:08:56.760><c> a</c><02:08:56.880><c> really</c><02:08:57.079><c> ugly</c>

02:08:57.390 --> 02:08:57.400 align:start position:0%
heads is 25 uh that's a really ugly
 

02:08:57.400 --> 02:09:00.270 align:start position:0%
heads is 25 uh that's a really ugly
number<02:08:57.800><c> that's</c><02:08:57.960><c> an</c><02:08:58.119><c> odd</c><02:08:58.440><c> number</c><02:08:59.199><c> and</c><02:08:59.760><c> um</c>

02:09:00.270 --> 02:09:00.280 align:start position:0%
number that's an odd number and um
 

02:09:00.280 --> 02:09:01.430 align:start position:0%
number that's an odd number and um
actually<02:09:00.599><c> this</c><02:09:00.719><c> did</c><02:09:00.920><c> cause</c><02:09:01.119><c> a</c><02:09:01.239><c> lot</c><02:09:01.320><c> of</c>

02:09:01.430 --> 02:09:01.440 align:start position:0%
actually this did cause a lot of
 

02:09:01.440 --> 02:09:02.750 align:start position:0%
actually this did cause a lot of
headaches<02:09:01.760><c> for</c><02:09:01.920><c> us</c><02:09:02.079><c> recently</c><02:09:02.440><c> when</c><02:09:02.559><c> we're</c>

02:09:02.750 --> 02:09:02.760 align:start position:0%
headaches for us recently when we're
 

02:09:02.760 --> 02:09:04.589 align:start position:0%
headaches for us recently when we're
trying<02:09:02.960><c> to</c><02:09:03.079><c> optimize</c><02:09:03.440><c> some</c><02:09:03.559><c> kernels</c><02:09:04.320><c> uh</c><02:09:04.440><c> to</c>

02:09:04.589 --> 02:09:04.599 align:start position:0%
trying to optimize some kernels uh to
 

02:09:04.599 --> 02:09:07.470 align:start position:0%
trying to optimize some kernels uh to
run<02:09:04.840><c> this</c><02:09:05.239><c> fast</c><02:09:06.239><c> um</c><02:09:06.559><c> and</c><02:09:06.679><c> required</c><02:09:07.040><c> a</c><02:09:07.159><c> bunch</c><02:09:07.320><c> of</c>

02:09:07.470 --> 02:09:07.480 align:start position:0%
run this fast um and required a bunch of
 

02:09:07.480 --> 02:09:10.030 align:start position:0%
run this fast um and required a bunch of
special<02:09:07.760><c> case</c><02:09:08.199><c> handling</c><02:09:09.199><c> so</c><02:09:09.520><c> basically</c><02:09:09.880><c> these</c>

02:09:10.030 --> 02:09:10.040 align:start position:0%
special case handling so basically these
 

02:09:10.040 --> 02:09:12.629 align:start position:0%
special case handling so basically these
numbers<02:09:10.320><c> are</c><02:09:11.159><c> we</c><02:09:11.280><c> have</c><02:09:11.480><c> some</c><02:09:11.960><c> ugly</c><02:09:12.280><c> numbers</c>

02:09:12.629 --> 02:09:12.639 align:start position:0%
numbers are we have some ugly numbers
 

02:09:12.639 --> 02:09:13.950 align:start position:0%
numbers are we have some ugly numbers
and<02:09:12.719><c> some</c><02:09:12.840><c> of</c><02:09:12.960><c> them</c><02:09:13.040><c> are</c><02:09:13.159><c> easier</c><02:09:13.440><c> to</c><02:09:13.559><c> fix</c><02:09:13.800><c> than</c>

02:09:13.950 --> 02:09:13.960 align:start position:0%
and some of them are easier to fix than
 

02:09:13.960 --> 02:09:15.910 align:start position:0%
and some of them are easier to fix than
others<02:09:14.520><c> and</c><02:09:14.639><c> in</c><02:09:14.800><c> particular</c><02:09:15.159><c> the</c><02:09:15.280><c> voap</c><02:09:15.719><c> size</c>

02:09:15.910 --> 02:09:15.920 align:start position:0%
others and in particular the voap size
 

02:09:15.920 --> 02:09:18.830 align:start position:0%
others and in particular the voap size
being<02:09:16.559><c> 50257</c><02:09:17.559><c> that's</c><02:09:17.719><c> a</c><02:09:17.840><c> very</c><02:09:18.000><c> ugly</c><02:09:18.280><c> number</c>

02:09:18.830 --> 02:09:18.840 align:start position:0%
being 50257 that's a very ugly number
 

02:09:18.840 --> 02:09:20.950 align:start position:0%
being 50257 that's a very ugly number
very<02:09:19.040><c> suspicious</c><02:09:19.480><c> and</c><02:09:19.559><c> we</c><02:09:19.679><c> want</c><02:09:19.800><c> to</c><02:09:19.920><c> fix</c><02:09:20.119><c> it</c>

02:09:20.950 --> 02:09:20.960 align:start position:0%
very suspicious and we want to fix it
 

02:09:20.960 --> 02:09:23.030 align:start position:0%
very suspicious and we want to fix it
now<02:09:21.079><c> when</c><02:09:21.159><c> you</c><02:09:21.559><c> when</c><02:09:21.639><c> you</c><02:09:21.840><c> fix</c><02:09:22.119><c> these</c><02:09:22.320><c> things</c>

02:09:23.030 --> 02:09:23.040 align:start position:0%
now when you when you fix these things
 

02:09:23.040 --> 02:09:24.470 align:start position:0%
now when you when you fix these things
uh<02:09:23.159><c> one</c><02:09:23.280><c> of</c><02:09:23.400><c> the</c><02:09:23.520><c> easy</c><02:09:23.719><c> ways</c><02:09:23.920><c> to</c><02:09:24.040><c> do</c><02:09:24.199><c> that</c><02:09:24.400><c> is</c>

02:09:24.470 --> 02:09:24.480 align:start position:0%
uh one of the easy ways to do that is
 

02:09:24.480 --> 02:09:27.629 align:start position:0%
uh one of the easy ways to do that is
you<02:09:25.040><c> basically</c><02:09:26.040><c> um</c><02:09:26.400><c> increase</c><02:09:27.079><c> the</c><02:09:27.239><c> number</c>

02:09:27.629 --> 02:09:27.639 align:start position:0%
you basically um increase the number
 

02:09:27.639 --> 02:09:29.870 align:start position:0%
you basically um increase the number
until<02:09:27.960><c> it's</c><02:09:28.119><c> the</c><02:09:28.280><c> nearest</c><02:09:28.760><c> power</c><02:09:29.000><c> of</c><02:09:29.159><c> two</c><02:09:29.719><c> that</c>

02:09:29.870 --> 02:09:29.880 align:start position:0%
until it's the nearest power of two that
 

02:09:29.880 --> 02:09:32.310 align:start position:0%
until it's the nearest power of two that
you<02:09:30.159><c> like</c><02:09:30.920><c> so</c><02:09:31.119><c> here's</c><02:09:31.320><c> a</c><02:09:31.480><c> much</c><02:09:31.679><c> nicer</c><02:09:31.960><c> number</c>

02:09:32.310 --> 02:09:32.320 align:start position:0%
you like so here's a much nicer number
 

02:09:32.320 --> 02:09:33.549 align:start position:0%
you like so here's a much nicer number
it's

02:09:33.549 --> 02:09:33.559 align:start position:0%
it's
 

02:09:33.559 --> 02:09:37.470 align:start position:0%
it's
50304<02:09:34.559><c> and</c><02:09:34.840><c> why</c><02:09:35.000><c> is</c><02:09:35.199><c> that</c><02:09:36.040><c> because</c><02:09:36.360><c> 50304</c><02:09:37.360><c> can</c>

02:09:37.470 --> 02:09:37.480 align:start position:0%
50304 and why is that because 50304 can
 

02:09:37.480 --> 02:09:43.149 align:start position:0%
50304 and why is that because 50304 can
be<02:09:37.639><c> divided</c><02:09:38.079><c> by</c><02:09:38.480><c> 8</c><02:09:39.199><c> or</c><02:09:39.440><c> by</c><02:09:39.760><c> 16</c><02:09:40.760><c> or</c><02:09:40.960><c> by</c><02:09:41.320><c> 32</c>

02:09:43.149 --> 02:09:43.159 align:start position:0%
be divided by 8 or by 16 or by 32
 

02:09:43.159 --> 02:09:46.310 align:start position:0%
be divided by 8 or by 16 or by 32
64<02:09:44.159><c> it</c><02:09:44.280><c> can</c><02:09:44.440><c> even</c><02:09:44.599><c> be</c><02:09:44.719><c> divided</c><02:09:45.000><c> by</c><02:09:45.079><c> 128</c><02:09:45.679><c> I</c><02:09:45.800><c> think</c>

02:09:46.310 --> 02:09:46.320 align:start position:0%
64 it can even be divided by 128 I think
 

02:09:46.320 --> 02:09:49.830 align:start position:0%
64 it can even be divided by 128 I think
yeah<02:09:46.880><c> so</c><02:09:47.280><c> it's</c><02:09:47.400><c> a</c><02:09:47.679><c> very</c><02:09:47.920><c> nice</c><02:09:48.199><c> number</c><02:09:49.199><c> um</c><02:09:49.679><c> so</c>

02:09:49.830 --> 02:09:49.840 align:start position:0%
yeah so it's a very nice number um so
 

02:09:49.840 --> 02:09:51.950 align:start position:0%
yeah so it's a very nice number um so
what<02:09:49.920><c> we're</c><02:09:50.040><c> going</c><02:09:50.159><c> to</c><02:09:50.280><c> do</c><02:09:50.480><c> here</c><02:09:50.639><c> is</c><02:09:51.520><c> the</c><02:09:51.599><c> GPT</c>

02:09:51.950 --> 02:09:51.960 align:start position:0%
what we're going to do here is the GPT
 

02:09:51.960 --> 02:09:53.669 align:start position:0%
what we're going to do here is the GPT
config<02:09:52.440><c> and</c><02:09:52.520><c> you</c><02:09:52.639><c> see</c><02:09:52.800><c> that</c><02:09:52.920><c> we</c><02:09:53.000><c> initialized</c><02:09:53.440><c> B</c>

02:09:53.669 --> 02:09:53.679 align:start position:0%
config and you see that we initialized B
 

02:09:53.679 --> 02:09:54.870 align:start position:0%
config and you see that we initialized B
cap<02:09:53.800><c> size</c><02:09:54.000><c> to</c>

02:09:54.870 --> 02:09:54.880 align:start position:0%
cap size to
 

02:09:54.880 --> 02:09:58.069 align:start position:0%
cap size to
50257<02:09:55.880><c> Let's</c><02:09:56.199><c> override</c><02:09:57.119><c> just</c>

02:09:58.069 --> 02:09:58.079 align:start position:0%
50257 Let's override just
 

02:09:58.079 --> 02:10:01.870 align:start position:0%
50257 Let's override just
that<02:09:59.079><c> um</c><02:09:59.360><c> element</c><02:09:59.599><c> to</c><02:09:59.719><c> be</c>

02:10:01.870 --> 02:10:01.880 align:start position:0%
 
 

02:10:01.880 --> 02:10:05.229 align:start position:0%
 
50304<02:10:02.920><c> okay</c><02:10:03.920><c> so</c><02:10:04.199><c> everything</c><02:10:04.480><c> else</c><02:10:04.760><c> stays</c><02:10:05.079><c> the</c>

02:10:05.229 --> 02:10:05.239 align:start position:0%
50304 okay so everything else stays the
 

02:10:05.239 --> 02:10:06.750 align:start position:0%
50304 okay so everything else stays the
same<02:10:05.599><c> we're</c><02:10:05.840><c> just</c><02:10:06.040><c> increasing</c><02:10:06.559><c> our</c>

02:10:06.750 --> 02:10:06.760 align:start position:0%
same we're just increasing our
 

02:10:06.760 --> 02:10:09.709 align:start position:0%
same we're just increasing our
vocabulary<02:10:07.440><c> size</c><02:10:08.239><c> so</c><02:10:08.400><c> we're</c><02:10:08.679><c> adding</c><02:10:09.559><c> it's</c>

02:10:09.709 --> 02:10:09.719 align:start position:0%
vocabulary size so we're adding it's
 

02:10:09.719 --> 02:10:12.189 align:start position:0%
vocabulary size so we're adding it's
almost<02:10:09.920><c> like</c><02:10:10.040><c> we're</c><02:10:10.239><c> adding</c><02:10:10.599><c> fake</c><02:10:11.079><c> tokens</c><02:10:12.079><c> uh</c>

02:10:12.189 --> 02:10:12.199 align:start position:0%
almost like we're adding fake tokens uh
 

02:10:12.199 --> 02:10:14.109 align:start position:0%
almost like we're adding fake tokens uh
so<02:10:12.360><c> that</c><02:10:12.520><c> book</c><02:10:12.719><c> up</c><02:10:12.960><c> size</c><02:10:13.239><c> has</c><02:10:13.440><c> powers</c><02:10:13.719><c> of</c><02:10:13.840><c> two</c>

02:10:14.109 --> 02:10:14.119 align:start position:0%
so that book up size has powers of two
 

02:10:14.119 --> 02:10:16.709 align:start position:0%
so that book up size has powers of two
inside<02:10:14.400><c> it</c><02:10:15.280><c> now</c><02:10:16.040><c> actually</c><02:10:16.280><c> what</c><02:10:16.400><c> I'm</c><02:10:16.520><c> doing</c>

02:10:16.709 --> 02:10:16.719 align:start position:0%
inside it now actually what I'm doing
 

02:10:16.719 --> 02:10:18.109 align:start position:0%
inside it now actually what I'm doing
here<02:10:16.840><c> by</c><02:10:16.960><c> the</c><02:10:17.040><c> way</c><02:10:17.199><c> is</c><02:10:17.360><c> I'm</c><02:10:17.559><c> increasing</c><02:10:18.000><c> the</c>

02:10:18.109 --> 02:10:18.119 align:start position:0%
here by the way is I'm increasing the
 

02:10:18.119 --> 02:10:19.910 align:start position:0%
here by the way is I'm increasing the
amount<02:10:18.320><c> of</c><02:10:18.440><c> computation</c><02:10:19.320><c> that</c><02:10:19.440><c> our</c><02:10:19.599><c> network</c>

02:10:19.910 --> 02:10:19.920 align:start position:0%
amount of computation that our network
 

02:10:19.920 --> 02:10:21.470 align:start position:0%
amount of computation that our network
will<02:10:20.040><c> be</c><02:10:20.199><c> doing</c><02:10:20.679><c> if</c><02:10:20.760><c> you</c><02:10:20.880><c> just</c><02:10:21.040><c> count</c><02:10:21.199><c> the</c><02:10:21.360><c> the</c>

02:10:21.470 --> 02:10:21.480 align:start position:0%
will be doing if you just count the the
 

02:10:21.480 --> 02:10:23.629 align:start position:0%
will be doing if you just count the the
flops<02:10:21.920><c> on</c><02:10:22.199><c> like</c><02:10:22.719><c> do</c><02:10:22.920><c> the</c><02:10:23.079><c> math</c><02:10:23.280><c> of</c><02:10:23.400><c> how</c><02:10:23.480><c> many</c>

02:10:23.629 --> 02:10:23.639 align:start position:0%
flops on like do the math of how many
 

02:10:23.639 --> 02:10:25.109 align:start position:0%
flops on like do the math of how many
flops<02:10:23.920><c> we're</c><02:10:24.079><c> doing</c><02:10:24.599><c> we're</c><02:10:24.760><c> going</c><02:10:24.920><c> to</c><02:10:25.000><c> be</c>

02:10:25.109 --> 02:10:25.119 align:start position:0%
flops we're doing we're going to be
 

02:10:25.119 --> 02:10:27.270 align:start position:0%
flops we're doing we're going to be
doing<02:10:25.400><c> more</c><02:10:25.639><c> flops</c><02:10:26.599><c> and</c><02:10:26.719><c> we</c><02:10:26.840><c> still</c><02:10:27.040><c> have</c><02:10:27.119><c> to</c>

02:10:27.270 --> 02:10:27.280 align:start position:0%
doing more flops and we still have to
 

02:10:27.280 --> 02:10:30.350 align:start position:0%
doing more flops and we still have to
think<02:10:27.639><c> through</c><02:10:28.639><c> whether</c><02:10:29.599><c> this</c><02:10:29.760><c> doesn't</c><02:10:30.040><c> break</c>

02:10:30.350 --> 02:10:30.360 align:start position:0%
think through whether this doesn't break
 

02:10:30.360 --> 02:10:33.109 align:start position:0%
think through whether this doesn't break
anything<02:10:31.239><c> but</c><02:10:31.400><c> if</c><02:10:31.520><c> I</c><02:10:31.639><c> just</c><02:10:31.800><c> run</c><02:10:32.119><c> this</c><02:10:32.719><c> uh</c><02:10:32.880><c> let's</c>

02:10:33.109 --> 02:10:33.119 align:start position:0%
anything but if I just run this uh let's
 

02:10:33.119 --> 02:10:35.910 align:start position:0%
anything but if I just run this uh let's
see<02:10:33.360><c> what</c><02:10:33.520><c> we</c><02:10:33.679><c> get</c><02:10:34.480><c> uh</c><02:10:34.639><c> currently</c><02:10:35.199><c> this</c><02:10:35.360><c> ran</c><02:10:35.679><c> in</c>

02:10:35.910 --> 02:10:35.920 align:start position:0%
see what we get uh currently this ran in
 

02:10:35.920 --> 02:10:38.350 align:start position:0%
see what we get uh currently this ran in
maybe

02:10:38.350 --> 02:10:38.360 align:start position:0%
maybe
 

02:10:38.360 --> 02:10:41.709 align:start position:0%
maybe
96.5<02:10:39.360><c> milliseconds</c><02:10:40.119><c> per</c><02:10:40.360><c> step</c><02:10:41.280><c> I'm</c><02:10:41.480><c> just</c><02:10:41.599><c> kind</c>

02:10:41.709 --> 02:10:41.719 align:start position:0%
96.5 milliseconds per step I'm just kind
 

02:10:41.719 --> 02:10:43.669 align:start position:0%
96.5 milliseconds per step I'm just kind
of<02:10:41.840><c> like</c><02:10:41.960><c> eyeballing</c><02:10:42.400><c> it</c><02:10:43.159><c> and</c><02:10:43.280><c> let's</c><02:10:43.440><c> see</c><02:10:43.599><c> what</c>

02:10:43.669 --> 02:10:43.679 align:start position:0%
of like eyeballing it and let's see what
 

02:10:43.679 --> 02:10:46.310 align:start position:0%
of like eyeballing it and let's see what
kind<02:10:43.800><c> of</c><02:10:43.880><c> a</c><02:10:44.000><c> result</c><02:10:44.239><c> we're</c><02:10:44.360><c> going</c><02:10:44.480><c> to</c>

02:10:46.310 --> 02:10:46.320 align:start position:0%
kind of a result we're going to
 

02:10:46.320 --> 02:10:49.390 align:start position:0%
kind of a result we're going to
get<02:10:47.320><c> uh</c><02:10:47.559><c> while</c><02:10:47.800><c> this</c><02:10:47.920><c> is</c><02:10:48.119><c> compiling</c><02:10:49.119><c> let's</c>

02:10:49.390 --> 02:10:49.400 align:start position:0%
get uh while this is compiling let's
 

02:10:49.400 --> 02:10:51.430 align:start position:0%
get uh while this is compiling let's
think<02:10:49.679><c> through</c><02:10:50.239><c> whether</c><02:10:50.520><c> our</c><02:10:50.719><c> code</c><02:10:50.920><c> actually</c>

02:10:51.430 --> 02:10:51.440 align:start position:0%
think through whether our code actually
 

02:10:51.440 --> 02:10:53.229 align:start position:0%
think through whether our code actually
works<02:10:51.880><c> okay</c><02:10:52.199><c> when</c><02:10:52.320><c> we</c><02:10:52.480><c> increase</c><02:10:52.800><c> the</c><02:10:52.920><c> vocap</c>

02:10:53.229 --> 02:10:53.239 align:start position:0%
works okay when we increase the vocap
 

02:10:53.239 --> 02:10:55.270 align:start position:0%
works okay when we increase the vocap
size<02:10:53.520><c> like</c><02:10:53.679><c> this</c><02:10:54.159><c> let's</c><02:10:54.320><c> look</c><02:10:54.480><c> at</c><02:10:54.679><c> where</c><02:10:54.840><c> vocap</c>

02:10:55.270 --> 02:10:55.280 align:start position:0%
size like this let's look at where vocap
 

02:10:55.280 --> 02:10:57.229 align:start position:0%
size like this let's look at where vocap
size<02:10:55.559><c> is</c><02:10:55.800><c> actually</c>

02:10:57.229 --> 02:10:57.239 align:start position:0%
size is actually
 

02:10:57.239 --> 02:11:00.189 align:start position:0%
size is actually
used<02:10:58.239><c> so</c><02:10:58.559><c> we</c><02:10:58.679><c> swing</c><02:10:58.920><c> up</c><02:10:59.040><c> to</c><02:10:59.159><c> the</c><02:10:59.280><c> inet</c><02:11:00.000><c> and</c><02:11:00.119><c> we</c>

02:11:00.189 --> 02:11:00.199 align:start position:0%
used so we swing up to the inet and we
 

02:11:00.199 --> 02:11:01.830 align:start position:0%
used so we swing up to the inet and we
see<02:11:00.400><c> that</c><02:11:00.480><c> it's</c><02:11:00.639><c> used</c><02:11:00.960><c> inside</c><02:11:01.239><c> the</c><02:11:01.400><c> embedding</c>

02:11:01.830 --> 02:11:01.840 align:start position:0%
see that it's used inside the embedding
 

02:11:01.840 --> 02:11:03.270 align:start position:0%
see that it's used inside the embedding
table<02:11:02.199><c> of</c><02:11:02.320><c> course</c><02:11:02.639><c> so</c><02:11:02.800><c> all</c><02:11:02.920><c> the</c><02:11:03.000><c> way</c><02:11:03.079><c> at</c><02:11:03.199><c> the</c>

02:11:03.270 --> 02:11:03.280 align:start position:0%
table of course so all the way at the
 

02:11:03.280 --> 02:11:05.189 align:start position:0%
table of course so all the way at the
bottom<02:11:03.520><c> of</c><02:11:03.599><c> the</c><02:11:03.679><c> Transformer</c><02:11:04.639><c> and</c><02:11:04.800><c> it's</c><02:11:04.960><c> used</c>

02:11:05.189 --> 02:11:05.199 align:start position:0%
bottom of the Transformer and it's used
 

02:11:05.199 --> 02:11:06.750 align:start position:0%
bottom of the Transformer and it's used
at<02:11:05.320><c> the</c><02:11:05.440><c> classifier</c><02:11:05.920><c> layer</c><02:11:06.239><c> all</c><02:11:06.400><c> the</c><02:11:06.480><c> way</c><02:11:06.639><c> at</c>

02:11:06.750 --> 02:11:06.760 align:start position:0%
at the classifier layer all the way at
 

02:11:06.760 --> 02:11:08.870 align:start position:0%
at the classifier layer all the way at
the<02:11:07.000><c> top</c><02:11:07.159><c> of</c><02:11:07.280><c> the</c><02:11:07.400><c> Transformer</c><02:11:07.880><c> so</c><02:11:08.000><c> in</c><02:11:08.119><c> two</c>

02:11:08.870 --> 02:11:08.880 align:start position:0%
the top of the Transformer so in two
 

02:11:08.880 --> 02:11:11.069 align:start position:0%
the top of the Transformer so in two
places<02:11:09.880><c> and</c><02:11:10.000><c> let's</c><02:11:10.159><c> take</c><02:11:10.280><c> a</c><02:11:10.440><c> look</c><02:11:10.760><c> and</c><02:11:10.880><c> we're</c>

02:11:11.069 --> 02:11:11.079 align:start position:0%
places and let's take a look and we're
 

02:11:11.079 --> 02:11:14.430 align:start position:0%
places and let's take a look and we're
running<02:11:11.520><c> at</c><02:11:11.679><c> 93</c><02:11:12.599><c> so</c><02:11:13.040><c> 93</c><02:11:13.639><c> milliseconds</c><02:11:14.239><c> instead</c>

02:11:14.430 --> 02:11:14.440 align:start position:0%
running at 93 so 93 milliseconds instead
 

02:11:14.440 --> 02:11:15.229 align:start position:0%
running at 93 so 93 milliseconds instead
of

02:11:15.229 --> 02:11:15.239 align:start position:0%
of
 

02:11:15.239 --> 02:11:19.750 align:start position:0%
of
96.5<02:11:16.239><c> so</c><02:11:16.520><c> we</c><02:11:16.639><c> are</c><02:11:16.840><c> seeing</c><02:11:17.440><c> a</c><02:11:17.840><c> roughly</c><02:11:18.679><c> yeah</c><02:11:18.840><c> 4%</c>

02:11:19.750 --> 02:11:19.760 align:start position:0%
96.5 so we are seeing a roughly yeah 4%
 

02:11:19.760 --> 02:11:22.910 align:start position:0%
96.5 so we are seeing a roughly yeah 4%
Improvement<02:11:20.320><c> here</c><02:11:21.119><c> uh</c><02:11:21.440><c> by</c><02:11:21.719><c> doing</c><02:11:22.040><c> more</c>

02:11:22.910 --> 02:11:22.920 align:start position:0%
Improvement here uh by doing more
 

02:11:22.920 --> 02:11:25.189 align:start position:0%
Improvement here uh by doing more
calculations<02:11:23.920><c> and</c><02:11:24.239><c> the</c><02:11:24.360><c> reason</c><02:11:24.599><c> for</c><02:11:24.840><c> this</c><02:11:25.000><c> is</c>

02:11:25.189 --> 02:11:25.199 align:start position:0%
calculations and the reason for this is
 

02:11:25.199 --> 02:11:28.189 align:start position:0%
calculations and the reason for this is
we<02:11:25.400><c> fixed</c><02:11:26.199><c> we've</c><02:11:26.559><c> made</c><02:11:27.079><c> an</c><02:11:27.360><c> ugly</c><02:11:27.639><c> number</c><02:11:27.960><c> into</c>

02:11:28.189 --> 02:11:28.199 align:start position:0%
we fixed we've made an ugly number into
 

02:11:28.199 --> 02:11:30.790 align:start position:0%
we fixed we've made an ugly number into
a<02:11:28.320><c> nice</c><02:11:28.800><c> number</c><02:11:29.800><c> let's</c><02:11:30.239><c> I'm</c><02:11:30.360><c> going</c><02:11:30.480><c> to</c><02:11:30.639><c> come</c>

02:11:30.790 --> 02:11:30.800 align:start position:0%
a nice number let's I'm going to come
 

02:11:30.800 --> 02:11:32.430 align:start position:0%
a nice number let's I'm going to come
into<02:11:31.040><c> the</c><02:11:31.360><c> explanation</c><02:11:31.760><c> for</c><02:11:31.960><c> that</c><02:11:32.119><c> a</c><02:11:32.239><c> little</c>

02:11:32.430 --> 02:11:32.440 align:start position:0%
into the explanation for that a little
 

02:11:32.440 --> 02:11:34.189 align:start position:0%
into the explanation for that a little
bit<02:11:32.840><c> again</c><02:11:33.440><c> but</c><02:11:33.559><c> for</c><02:11:33.719><c> now</c><02:11:33.880><c> let's</c><02:11:34.040><c> just</c>

02:11:34.189 --> 02:11:34.199 align:start position:0%
bit again but for now let's just
 

02:11:34.199 --> 02:11:35.189 align:start position:0%
bit again but for now let's just
convince<02:11:34.480><c> ourselves</c><02:11:34.800><c> that</c><02:11:34.920><c> we're</c><02:11:35.040><c> not</c>

02:11:35.189 --> 02:11:35.199 align:start position:0%
convince ourselves that we're not
 

02:11:35.199 --> 02:11:36.950 align:start position:0%
convince ourselves that we're not
breaking<02:11:35.599><c> anything</c><02:11:35.920><c> when</c><02:11:36.040><c> we</c><02:11:36.199><c> do</c><02:11:36.360><c> this</c><02:11:36.760><c> so</c>

02:11:36.950 --> 02:11:36.960 align:start position:0%
breaking anything when we do this so
 

02:11:36.960 --> 02:11:39.950 align:start position:0%
breaking anything when we do this so
first<02:11:37.119><c> of</c><02:11:37.239><c> all</c><02:11:37.520><c> we've</c><02:11:37.719><c> made</c><02:11:37.960><c> the</c><02:11:38.599><c> the</c><02:11:38.800><c> wte</c><02:11:39.800><c> the</c>

02:11:39.950 --> 02:11:39.960 align:start position:0%
first of all we've made the the wte the
 

02:11:39.960 --> 02:11:41.350 align:start position:0%
first of all we've made the the wte the
embedding<02:11:40.320><c> table</c><02:11:40.520><c> for</c><02:11:40.679><c> the</c><02:11:40.800><c> tokens</c><02:11:41.159><c> we've</c>

02:11:41.350 --> 02:11:41.360 align:start position:0%
embedding table for the tokens we've
 

02:11:41.360 --> 02:11:43.149 align:start position:0%
embedding table for the tokens we've
made<02:11:41.480><c> it</c><02:11:41.679><c> larger</c><02:11:42.480><c> it's</c><02:11:42.639><c> almost</c><02:11:42.880><c> like</c><02:11:43.040><c> we</c>

02:11:43.149 --> 02:11:43.159 align:start position:0%
made it larger it's almost like we
 

02:11:43.159 --> 02:11:46.430 align:start position:0%
made it larger it's almost like we
introduced<02:11:43.679><c> more</c><02:11:43.880><c> tokens</c><02:11:44.760><c> at</c><02:11:44.880><c> the</c><02:11:45.159><c> bottom</c><02:11:46.159><c> and</c>

02:11:46.430 --> 02:11:46.440 align:start position:0%
introduced more tokens at the bottom and
 

02:11:46.440 --> 02:11:48.750 align:start position:0%
introduced more tokens at the bottom and
these<02:11:46.639><c> tokens</c><02:11:47.079><c> are</c><02:11:47.320><c> never</c><02:11:47.599><c> used</c><02:11:48.239><c> because</c><02:11:48.639><c> the</c>

02:11:48.750 --> 02:11:48.760 align:start position:0%
these tokens are never used because the
 

02:11:48.760 --> 02:11:50.589 align:start position:0%
these tokens are never used because the
gbt<02:11:49.159><c> tokenizer</c><02:11:49.679><c> only</c><02:11:49.880><c> has</c><02:11:50.040><c> tokens</c><02:11:50.400><c> up</c><02:11:50.520><c> to</c>

02:11:50.589 --> 02:11:50.599 align:start position:0%
gbt tokenizer only has tokens up to
 

02:11:50.599 --> 02:11:51.870 align:start position:0%
gbt tokenizer only has tokens up to
$50,000

02:11:51.870 --> 02:11:51.880 align:start position:0%
$50,000
 

02:11:51.880 --> 02:11:55.069 align:start position:0%
$50,000
256<02:11:52.880><c> and</c><02:11:53.040><c> so</c><02:11:53.679><c> we'll</c><02:11:53.960><c> never</c><02:11:54.280><c> index</c><02:11:54.719><c> into</c><02:11:54.920><c> the</c>

02:11:55.069 --> 02:11:55.079 align:start position:0%
256 and so we'll never index into the
 

02:11:55.079 --> 02:11:57.669 align:start position:0%
256 and so we'll never index into the
rows<02:11:55.679><c> that</c><02:11:55.840><c> we've</c><02:11:56.079><c> added</c><02:11:56.880><c> so</c><02:11:57.040><c> we're</c><02:11:57.239><c> wasting</c><02:11:57.559><c> a</c>

02:11:57.669 --> 02:11:57.679 align:start position:0%
rows that we've added so we're wasting a
 

02:11:57.679 --> 02:11:59.470 align:start position:0%
rows that we've added so we're wasting a
little<02:11:57.880><c> bit</c><02:11:58.000><c> of</c><02:11:58.320><c> space</c><02:11:58.679><c> here</c><02:11:58.960><c> by</c><02:11:59.199><c> creating</c>

02:11:59.470 --> 02:11:59.480 align:start position:0%
little bit of space here by creating
 

02:11:59.480 --> 02:12:01.229 align:start position:0%
little bit of space here by creating
memory<02:11:59.880><c> that's</c><02:12:00.040><c> never</c><02:12:00.239><c> going</c><02:12:00.320><c> to</c><02:12:00.480><c> be</c><02:12:00.639><c> accessed</c>

02:12:01.229 --> 02:12:01.239 align:start position:0%
memory that's never going to be accessed
 

02:12:01.239 --> 02:12:03.830 align:start position:0%
memory that's never going to be accessed
never<02:12:01.440><c> going</c><02:12:01.559><c> to</c><02:12:01.679><c> be</c><02:12:01.760><c> used</c><02:12:02.480><c> Etc</c><02:12:03.480><c> now</c><02:12:03.639><c> that's</c>

02:12:03.830 --> 02:12:03.840 align:start position:0%
never going to be used Etc now that's
 

02:12:03.840 --> 02:12:06.350 align:start position:0%
never going to be used Etc now that's
not<02:12:04.360><c> fully</c><02:12:04.679><c> correct</c><02:12:05.119><c> because</c><02:12:05.400><c> this</c><02:12:05.599><c> wte</c>

02:12:06.350 --> 02:12:06.360 align:start position:0%
not fully correct because this wte
 

02:12:06.360 --> 02:12:08.470 align:start position:0%
not fully correct because this wte
weight<02:12:06.840><c> ends</c><02:12:07.040><c> up</c><02:12:07.280><c> being</c><02:12:07.440><c> shared</c><02:12:08.000><c> and</c><02:12:08.159><c> ends</c><02:12:08.320><c> up</c>

02:12:08.470 --> 02:12:08.480 align:start position:0%
weight ends up being shared and ends up
 

02:12:08.480 --> 02:12:10.430 align:start position:0%
weight ends up being shared and ends up
being<02:12:08.679><c> used</c><02:12:09.000><c> in</c><02:12:09.119><c> the</c><02:12:09.280><c> classifier</c><02:12:10.000><c> here</c><02:12:10.199><c> at</c><02:12:10.320><c> the</c>

02:12:10.430 --> 02:12:10.440 align:start position:0%
being used in the classifier here at the
 

02:12:10.440 --> 02:12:12.990 align:start position:0%
being used in the classifier here at the
end<02:12:11.440><c> so</c><02:12:11.679><c> what</c><02:12:11.800><c> is</c><02:12:11.920><c> that</c><02:12:12.040><c> doing</c><02:12:12.239><c> to</c><02:12:12.360><c> the</c>

02:12:12.990 --> 02:12:13.000 align:start position:0%
end so what is that doing to the
 

02:12:13.000 --> 02:12:15.350 align:start position:0%
end so what is that doing to the
classifier<02:12:14.000><c> right</c><02:12:14.239><c> here</c><02:12:14.840><c> well</c><02:12:15.040><c> what</c><02:12:15.280><c> what</c>

02:12:15.350 --> 02:12:15.360 align:start position:0%
classifier right here well what what
 

02:12:15.360 --> 02:12:16.390 align:start position:0%
classifier right here well what what
that's<02:12:15.559><c> doing</c><02:12:15.760><c> is</c><02:12:15.880><c> we're</c><02:12:16.040><c> predicting</c>

02:12:16.390 --> 02:12:16.400 align:start position:0%
that's doing is we're predicting
 

02:12:16.400 --> 02:12:18.229 align:start position:0%
that's doing is we're predicting
additional<02:12:16.800><c> Dimensions</c><02:12:17.360><c> at</c><02:12:17.520><c> the</c><02:12:17.639><c> classifier</c>

02:12:18.229 --> 02:12:18.239 align:start position:0%
additional Dimensions at the classifier
 

02:12:18.239 --> 02:12:20.390 align:start position:0%
additional Dimensions at the classifier
now<02:12:19.079><c> and</c><02:12:19.360><c> we're</c><02:12:19.559><c> predicting</c><02:12:19.960><c> probabilities</c>

02:12:20.390 --> 02:12:20.400 align:start position:0%
now and we're predicting probabilities
 

02:12:20.400 --> 02:12:21.950 align:start position:0%
now and we're predicting probabilities
for<02:12:20.599><c> tokens</c><02:12:20.880><c> that</c><02:12:21.000><c> will</c><02:12:21.239><c> of</c><02:12:21.360><c> course</c><02:12:21.559><c> never</c><02:12:21.800><c> be</c>

02:12:21.950 --> 02:12:21.960 align:start position:0%
for tokens that will of course never be
 

02:12:21.960 --> 02:12:25.390 align:start position:0%
for tokens that will of course never be
present<02:12:22.199><c> in</c><02:12:22.280><c> the</c><02:12:22.400><c> training</c><02:12:23.000><c> set</c><02:12:24.159><c> um</c><02:12:25.159><c> and</c><02:12:25.239><c> so</c>

02:12:25.390 --> 02:12:25.400 align:start position:0%
present in the training set um and so
 

02:12:25.400 --> 02:12:27.229 align:start position:0%
present in the training set um and so
therefore<02:12:25.679><c> the</c><02:12:25.800><c> network</c><02:12:26.159><c> has</c><02:12:26.280><c> to</c><02:12:26.440><c> learn</c><02:12:27.040><c> that</c>

02:12:27.229 --> 02:12:27.239 align:start position:0%
therefore the network has to learn that
 

02:12:27.239 --> 02:12:29.310 align:start position:0%
therefore the network has to learn that
these<02:12:27.480><c> probabilities</c><02:12:28.440><c> uh</c><02:12:28.679><c> have</c><02:12:28.760><c> to</c><02:12:28.880><c> be</c><02:12:28.960><c> driven</c>

02:12:29.310 --> 02:12:29.320 align:start position:0%
these probabilities uh have to be driven
 

02:12:29.320 --> 02:12:31.870 align:start position:0%
these probabilities uh have to be driven
to<02:12:29.599><c> zero</c><02:12:30.559><c> and</c><02:12:30.679><c> so</c><02:12:30.880><c> the</c><02:12:31.000><c> logits</c><02:12:31.639><c> that</c><02:12:31.800><c> the</c>

02:12:31.870 --> 02:12:31.880 align:start position:0%
to zero and so the logits that the
 

02:12:31.880 --> 02:12:33.669 align:start position:0%
to zero and so the logits that the
network<02:12:32.199><c> produces</c><02:12:32.840><c> have</c><02:12:32.960><c> to</c><02:12:33.119><c> drive</c><02:12:33.480><c> those</c>

02:12:33.669 --> 02:12:33.679 align:start position:0%
network produces have to drive those
 

02:12:33.679 --> 02:12:35.669 align:start position:0%
network produces have to drive those
dimensions<02:12:34.199><c> of</c><02:12:34.360><c> the</c><02:12:34.440><c> output</c><02:12:34.880><c> to</c><02:12:35.040><c> negative</c>

02:12:35.669 --> 02:12:35.679 align:start position:0%
dimensions of the output to negative
 

02:12:35.679 --> 02:12:38.069 align:start position:0%
dimensions of the output to negative
Infinity<02:12:36.679><c> but</c><02:12:36.880><c> it</c><02:12:37.000><c> that's</c><02:12:37.239><c> no</c><02:12:37.480><c> different</c><02:12:37.840><c> from</c>

02:12:38.069 --> 02:12:38.079 align:start position:0%
Infinity but it that's no different from
 

02:12:38.079 --> 02:12:39.430 align:start position:0%
Infinity but it that's no different from
all<02:12:38.239><c> the</c><02:12:38.320><c> other</c><02:12:38.520><c> tokens</c><02:12:38.800><c> that</c><02:12:38.920><c> are</c><02:12:39.040><c> already</c><02:12:39.320><c> in</c>

02:12:39.430 --> 02:12:39.440 align:start position:0%
all the other tokens that are already in
 

02:12:39.440 --> 02:12:42.750 align:start position:0%
all the other tokens that are already in
our<02:12:39.920><c> data</c><02:12:40.159><c> set</c><02:12:41.040><c> um</c><02:12:41.440><c> or</c><02:12:41.920><c> rather</c><02:12:42.239><c> that</c><02:12:42.360><c> are</c><02:12:42.559><c> not</c>

02:12:42.750 --> 02:12:42.760 align:start position:0%
our data set um or rather that are not
 

02:12:42.760 --> 02:12:45.149 align:start position:0%
our data set um or rather that are not
in<02:12:42.880><c> our</c><02:12:43.079><c> data</c><02:12:43.320><c> set</c><02:12:44.000><c> so</c><02:12:44.320><c> Shakespeare</c><02:12:44.840><c> only</c>

02:12:45.149 --> 02:12:45.159 align:start position:0%
in our data set so Shakespeare only
 

02:12:45.159 --> 02:12:46.950 align:start position:0%
in our data set so Shakespeare only
probably<02:12:45.400><c> uses</c><02:12:45.760><c> let's</c><02:12:45.920><c> say</c><02:12:46.079><c> a</c><02:12:46.199><c> th000</c><02:12:46.520><c> tokens</c>

02:12:46.950 --> 02:12:46.960 align:start position:0%
probably uses let's say a th000 tokens
 

02:12:46.960 --> 02:12:49.790 align:start position:0%
probably uses let's say a th000 tokens
out<02:12:47.079><c> of</c><02:12:47.280><c> 50,000</c><02:12:47.840><c> to</c><02:12:48.119><c> 57</c><02:12:48.639><c> tokens</c><02:12:49.320><c> so</c><02:12:49.520><c> most</c><02:12:49.679><c> of</c>

02:12:49.790 --> 02:12:49.800 align:start position:0%
out of 50,000 to 57 tokens so most of
 

02:12:49.800 --> 02:12:51.310 align:start position:0%
out of 50,000 to 57 tokens so most of
the<02:12:49.920><c> tokens</c><02:12:50.199><c> are</c><02:12:50.360><c> already</c><02:12:50.559><c> being</c><02:12:50.760><c> driven</c><02:12:51.159><c> to</c>

02:12:51.310 --> 02:12:51.320 align:start position:0%
the tokens are already being driven to
 

02:12:51.320 --> 02:12:53.430 align:start position:0%
the tokens are already being driven to
zero<02:12:51.599><c> probability</c><02:12:52.159><c> by</c><02:12:52.280><c> the</c><02:12:52.400><c> optimization</c><02:12:53.280><c> we'</c>

02:12:53.430 --> 02:12:53.440 align:start position:0%
zero probability by the optimization we'
 

02:12:53.440 --> 02:12:55.470 align:start position:0%
zero probability by the optimization we'
just<02:12:53.599><c> introduced</c><02:12:54.040><c> a</c><02:12:54.119><c> few</c><02:12:54.280><c> more</c><02:12:54.559><c> tokens</c><02:12:55.000><c> now</c>

02:12:55.470 --> 02:12:55.480 align:start position:0%
just introduced a few more tokens now
 

02:12:55.480 --> 02:12:57.189 align:start position:0%
just introduced a few more tokens now
that<02:12:55.639><c> in</c><02:12:55.719><c> a</c><02:12:55.880><c> similar</c><02:12:56.239><c> manner</c><02:12:56.679><c> will</c><02:12:56.840><c> never</c><02:12:57.079><c> be</c>

02:12:57.189 --> 02:12:57.199 align:start position:0%
that in a similar manner will never be
 

02:12:57.199 --> 02:12:59.830 align:start position:0%
that in a similar manner will never be
used<02:12:57.559><c> and</c><02:12:57.679><c> have</c><02:12:57.760><c> to</c><02:12:57.880><c> be</c><02:12:57.960><c> driven</c><02:12:58.280><c> to</c><02:12:58.520><c> zero</c><02:12:58.880><c> in</c>

02:12:59.830 --> 02:12:59.840 align:start position:0%
used and have to be driven to zero in
 

02:12:59.840 --> 02:13:02.790 align:start position:0%
used and have to be driven to zero in
probability<02:13:00.840><c> um</c><02:13:01.480><c> so</c><02:13:01.960><c> functionally</c><02:13:02.599><c> though</c>

02:13:02.790 --> 02:13:02.800 align:start position:0%
probability um so functionally though
 

02:13:02.800 --> 02:13:05.390 align:start position:0%
probability um so functionally though
nothing<02:13:03.159><c> breaks</c><02:13:03.800><c> we're</c><02:13:04.000><c> using</c><02:13:04.280><c> a</c><02:13:04.440><c> bit</c><02:13:04.679><c> more</c>

02:13:05.390 --> 02:13:05.400 align:start position:0%
nothing breaks we're using a bit more
 

02:13:05.400 --> 02:13:08.709 align:start position:0%
nothing breaks we're using a bit more
extra<02:13:06.400><c> um</c><02:13:06.719><c> memory</c><02:13:07.520><c> but</c><02:13:07.800><c> otherwise</c><02:13:08.239><c> this</c><02:13:08.360><c> is</c><02:13:08.559><c> a</c>

02:13:08.709 --> 02:13:08.719 align:start position:0%
extra um memory but otherwise this is a
 

02:13:08.719 --> 02:13:11.109 align:start position:0%
extra um memory but otherwise this is a
harmless<02:13:09.159><c> operation</c><02:13:09.679><c> as</c><02:13:09.800><c> far</c><02:13:09.960><c> as</c><02:13:10.040><c> I</c><02:13:10.159><c> can</c><02:13:10.280><c> tell</c>

02:13:11.109 --> 02:13:11.119 align:start position:0%
harmless operation as far as I can tell
 

02:13:11.119 --> 02:13:12.910 align:start position:0%
harmless operation as far as I can tell
but<02:13:11.599><c> and</c><02:13:11.719><c> we're</c><02:13:11.920><c> adding</c><02:13:12.280><c> calculation</c><02:13:12.840><c> but</c>

02:13:12.910 --> 02:13:12.920 align:start position:0%
but and we're adding calculation but
 

02:13:12.920 --> 02:13:14.950 align:start position:0%
but and we're adding calculation but
it's<02:13:13.079><c> running</c><02:13:13.400><c> faster</c><02:13:14.400><c> and</c><02:13:14.520><c> it's</c><02:13:14.639><c> running</c>

02:13:14.950 --> 02:13:14.960 align:start position:0%
it's running faster and it's running
 

02:13:14.960 --> 02:13:17.750 align:start position:0%
it's running faster and it's running
faster<02:13:15.440><c> because</c><02:13:15.800><c> as</c><02:13:15.920><c> I</c><02:13:16.040><c> mentioned</c><02:13:16.360><c> in</c><02:13:16.599><c> Cuda</c><02:13:17.599><c> so</c>

02:13:17.750 --> 02:13:17.760 align:start position:0%
faster because as I mentioned in Cuda so
 

02:13:17.760 --> 02:13:21.270 align:start position:0%
faster because as I mentioned in Cuda so
many<02:13:18.199><c> kernels</c><02:13:19.199><c> use</c><02:13:19.840><c> uh</c><02:13:20.000><c> block</c><02:13:20.360><c> tiles</c><02:13:21.159><c> and</c>

02:13:21.270 --> 02:13:21.280 align:start position:0%
many kernels use uh block tiles and
 

02:13:21.280 --> 02:13:22.910 align:start position:0%
many kernels use uh block tiles and
these<02:13:21.400><c> block</c><02:13:21.639><c> towels</c><02:13:21.920><c> are</c><02:13:22.119><c> usually</c><02:13:22.639><c> nice</c>

02:13:22.910 --> 02:13:22.920 align:start position:0%
these block towels are usually nice
 

02:13:22.920 --> 02:13:25.270 align:start position:0%
these block towels are usually nice
numbers<02:13:23.800><c> uh</c><02:13:23.920><c> so</c><02:13:24.079><c> powers</c><02:13:24.360><c> of</c><02:13:24.520><c> two</c><02:13:25.040><c> so</c>

02:13:25.270 --> 02:13:25.280 align:start position:0%
numbers uh so powers of two so
 

02:13:25.280 --> 02:13:26.669 align:start position:0%
numbers uh so powers of two so
calculations<02:13:25.719><c> are</c><02:13:25.840><c> done</c><02:13:26.000><c> in</c><02:13:26.119><c> like</c><02:13:26.239><c> chunks</c><02:13:26.520><c> of</c>

02:13:26.669 --> 02:13:26.679 align:start position:0%
calculations are done in like chunks of
 

02:13:26.679 --> 02:13:31.069 align:start position:0%
calculations are done in like chunks of
64<02:13:27.320><c> or</c><02:13:27.480><c> chunks</c><02:13:27.760><c> of</c><02:13:27.880><c> 32</c><02:13:28.880><c> and</c><02:13:29.079><c> when</c><02:13:29.280><c> your</c><02:13:30.000><c> um</c><02:13:30.920><c> when</c>

02:13:31.069 --> 02:13:31.079 align:start position:0%
64 or chunks of 32 and when your um when
 

02:13:31.079 --> 02:13:32.910 align:start position:0%
64 or chunks of 32 and when your um when
your<02:13:31.239><c> desired</c><02:13:31.679><c> calculation</c><02:13:32.159><c> doesn't</c><02:13:32.440><c> neatly</c>

02:13:32.910 --> 02:13:32.920 align:start position:0%
your desired calculation doesn't neatly
 

02:13:32.920 --> 02:13:36.310 align:start position:0%
your desired calculation doesn't neatly
fit<02:13:33.320><c> into</c><02:13:33.679><c> those</c><02:13:34.079><c> block</c><02:13:34.599><c> tiles</c><02:13:35.599><c> um</c><02:13:36.040><c> there</c><02:13:36.159><c> are</c>

02:13:36.310 --> 02:13:36.320 align:start position:0%
fit into those block tiles um there are
 

02:13:36.320 --> 02:13:38.709 align:start position:0%
fit into those block tiles um there are
all<02:13:36.480><c> kinds</c><02:13:36.639><c> of</c><02:13:36.840><c> boundary</c><02:13:37.840><c> kernels</c><02:13:38.360><c> that</c><02:13:38.480><c> can</c>

02:13:38.709 --> 02:13:38.719 align:start position:0%
all kinds of boundary kernels that can
 

02:13:38.719 --> 02:13:42.189 align:start position:0%
all kinds of boundary kernels that can
kick<02:13:38.960><c> in</c><02:13:39.480><c> to</c><02:13:39.800><c> like</c><02:13:40.639><c> do</c><02:13:40.840><c> the</c><02:13:41.040><c> last</c><02:13:41.320><c> part</c><02:13:42.000><c> so</c>

02:13:42.189 --> 02:13:42.199 align:start position:0%
kick in to like do the last part so
 

02:13:42.199 --> 02:13:44.549 align:start position:0%
kick in to like do the last part so
basically<02:13:42.800><c> in</c><02:13:42.920><c> a</c><02:13:43.000><c> lot</c><02:13:43.119><c> of</c><02:13:43.280><c> kernels</c><02:13:44.280><c> they</c><02:13:44.400><c> will</c>

02:13:44.549 --> 02:13:44.559 align:start position:0%
basically in a lot of kernels they will
 

02:13:44.559 --> 02:13:46.229 align:start position:0%
basically in a lot of kernels they will
chunk<02:13:44.880><c> at</c><02:13:45.079><c> up</c><02:13:45.199><c> your</c><02:13:45.360><c> input</c><02:13:45.760><c> and</c><02:13:45.840><c> they</c><02:13:45.960><c> will</c><02:13:46.079><c> do</c>

02:13:46.229 --> 02:13:46.239 align:start position:0%
chunk at up your input and they will do
 

02:13:46.239 --> 02:13:47.950 align:start position:0%
chunk at up your input and they will do
the<02:13:46.360><c> nice</c><02:13:46.679><c> part</c><02:13:46.960><c> first</c><02:13:47.400><c> and</c><02:13:47.520><c> then</c><02:13:47.639><c> they</c><02:13:47.760><c> have</c><02:13:47.840><c> a</c>

02:13:47.950 --> 02:13:47.960 align:start position:0%
the nice part first and then they have a
 

02:13:47.960 --> 02:13:50.109 align:start position:0%
the nice part first and then they have a
whole<02:13:48.239><c> second</c><02:13:48.679><c> second</c><02:13:49.119><c> phase</c><02:13:49.760><c> where</c><02:13:49.920><c> they</c>

02:13:50.109 --> 02:13:50.119 align:start position:0%
whole second second phase where they
 

02:13:50.119 --> 02:13:53.990 align:start position:0%
whole second second phase where they
come<02:13:50.360><c> back</c><02:13:50.559><c> to</c><02:13:50.840><c> any</c><02:13:51.360><c> that</c><02:13:51.559><c> like</c><02:13:52.119><c> uh</c><02:13:52.559><c> remains</c><02:13:53.559><c> uh</c>

02:13:53.990 --> 02:13:54.000 align:start position:0%
come back to any that like uh remains uh
 

02:13:54.000 --> 02:13:56.069 align:start position:0%
come back to any that like uh remains uh
and<02:13:54.159><c> then</c><02:13:54.400><c> they</c><02:13:54.719><c> process</c><02:13:55.040><c> the</c><02:13:55.280><c> remaining</c><02:13:55.599><c> part</c>

02:13:56.069 --> 02:13:56.079 align:start position:0%
and then they process the remaining part
 

02:13:56.079 --> 02:13:57.270 align:start position:0%
and then they process the remaining part
and<02:13:56.159><c> the</c><02:13:56.280><c> kernels</c><02:13:56.599><c> for</c><02:13:56.760><c> that</c><02:13:56.880><c> could</c><02:13:57.000><c> be</c><02:13:57.119><c> very</c>

02:13:57.270 --> 02:13:57.280 align:start position:0%
and the kernels for that could be very
 

02:13:57.280 --> 02:14:00.030 align:start position:0%
and the kernels for that could be very
inefficient<02:13:58.159><c> and</c><02:13:58.239><c> so</c><02:13:58.440><c> you're</c><02:13:58.639><c> basically</c><02:13:59.440><c> um</c>

02:14:00.030 --> 02:14:00.040 align:start position:0%
inefficient and so you're basically um
 

02:14:00.040 --> 02:14:02.589 align:start position:0%
inefficient and so you're basically um
spinning<02:14:00.440><c> up</c><02:14:00.559><c> all</c><02:14:00.719><c> this</c><02:14:00.920><c> extra</c><02:14:01.760><c> compute</c><02:14:02.440><c> and</c>

02:14:02.589 --> 02:14:02.599 align:start position:0%
spinning up all this extra compute and
 

02:14:02.599 --> 02:14:04.310 align:start position:0%
spinning up all this extra compute and
is<02:14:02.760><c> extremely</c><02:14:03.119><c> inefficient</c><02:14:03.840><c> so</c><02:14:03.960><c> you</c><02:14:04.079><c> might</c><02:14:04.199><c> as</c>

02:14:04.310 --> 02:14:04.320 align:start position:0%
is extremely inefficient so you might as
 

02:14:04.320 --> 02:14:07.870 align:start position:0%
is extremely inefficient so you might as
well<02:14:04.520><c> pad</c><02:14:04.719><c> your</c><02:14:04.920><c> inputs</c><02:14:05.920><c> and</c><02:14:06.360><c> um</c><02:14:07.239><c> make</c><02:14:07.360><c> it</c><02:14:07.599><c> fit</c>

02:14:07.870 --> 02:14:07.880 align:start position:0%
well pad your inputs and um make it fit
 

02:14:07.880 --> 02:14:10.270 align:start position:0%
well pad your inputs and um make it fit
nicely<02:14:08.599><c> and</c><02:14:08.760><c> usually</c><02:14:09.119><c> that</c><02:14:09.280><c> empiric</c><02:14:09.599><c> lens</c><02:14:09.920><c> up</c>

02:14:10.270 --> 02:14:10.280 align:start position:0%
nicely and usually that empiric lens up
 

02:14:10.280 --> 02:14:13.589 align:start position:0%
nicely and usually that empiric lens up
actually<02:14:10.520><c> running</c><02:14:11.079><c> faster</c><02:14:12.199><c> um</c><02:14:13.199><c> so</c><02:14:13.360><c> this</c><02:14:13.440><c> is</c>

02:14:13.589 --> 02:14:13.599 align:start position:0%
actually running faster um so this is
 

02:14:13.599 --> 02:14:16.830 align:start position:0%
actually running faster um so this is
another<02:14:13.920><c> example</c><02:14:14.400><c> of</c><02:14:14.840><c> a</c><02:14:15.079><c> 4%</c><02:14:15.719><c> Improvement</c><02:14:16.679><c> that</c>

02:14:16.830 --> 02:14:16.840 align:start position:0%
another example of a 4% Improvement that
 

02:14:16.840 --> 02:14:18.750 align:start position:0%
another example of a 4% Improvement that
we've<02:14:17.119><c> added</c><02:14:17.960><c> and</c><02:14:18.119><c> this</c><02:14:18.199><c> is</c><02:14:18.320><c> something</c><02:14:18.599><c> that</c>

02:14:18.750 --> 02:14:18.760 align:start position:0%
we've added and this is something that
 

02:14:18.760 --> 02:14:21.430 align:start position:0%
we've added and this is something that
also<02:14:19.000><c> torch</c><02:14:19.320><c> compile</c><02:14:19.719><c> did</c><02:14:19.920><c> not</c><02:14:20.119><c> find</c><02:14:20.400><c> for</c><02:14:20.639><c> us</c>

02:14:21.430 --> 02:14:21.440 align:start position:0%
also torch compile did not find for us
 

02:14:21.440 --> 02:14:22.870 align:start position:0%
also torch compile did not find for us
you<02:14:21.559><c> would</c><02:14:21.840><c> hope</c><02:14:22.000><c> that</c><02:14:22.159><c> torch</c><02:14:22.440><c> compile</c><02:14:22.760><c> at</c>

02:14:22.870 --> 02:14:22.880 align:start position:0%
you would hope that torch compile at
 

02:14:22.880 --> 02:14:24.470 align:start position:0%
you would hope that torch compile at
some<02:14:23.000><c> point</c><02:14:23.199><c> could</c><02:14:23.360><c> figure</c><02:14:23.800><c> an</c><02:14:23.920><c> optimization</c>

02:14:24.470 --> 02:14:24.480 align:start position:0%
some point could figure an optimization
 

02:14:24.480 --> 02:14:27.229 align:start position:0%
some point could figure an optimization
like<02:14:24.679><c> this</c><02:14:24.800><c> out</c><02:14:25.599><c> uh</c><02:14:25.719><c> but</c><02:14:25.880><c> for</c><02:14:26.079><c> now</c><02:14:26.800><c> uh</c><02:14:26.960><c> this</c><02:14:27.079><c> is</c>

02:14:27.229 --> 02:14:27.239 align:start position:0%
like this out uh but for now uh this is
 

02:14:27.239 --> 02:14:28.910 align:start position:0%
like this out uh but for now uh this is
it<02:14:27.960><c> and</c><02:14:28.040><c> I</c><02:14:28.159><c> also</c><02:14:28.320><c> have</c><02:14:28.400><c> to</c><02:14:28.520><c> point</c><02:14:28.679><c> out</c><02:14:28.800><c> that</c>

02:14:28.910 --> 02:14:28.920 align:start position:0%
it and I also have to point out that
 

02:14:28.920 --> 02:14:30.910 align:start position:0%
it and I also have to point out that
we're<02:14:29.119><c> using</c><02:14:29.360><c> pytorch</c><02:14:29.800><c> nightly</c><02:14:30.520><c> so</c><02:14:30.760><c> that's</c>

02:14:30.910 --> 02:14:30.920 align:start position:0%
we're using pytorch nightly so that's
 

02:14:30.920 --> 02:14:32.990 align:start position:0%
we're using pytorch nightly so that's
why<02:14:31.040><c> we're</c><02:14:31.199><c> only</c><02:14:31.360><c> seeing</c><02:14:31.639><c> 4%</c><02:14:32.480><c> if</c><02:14:32.559><c> you're</c><02:14:32.719><c> using</c>

02:14:32.990 --> 02:14:33.000 align:start position:0%
why we're only seeing 4% if you're using
 

02:14:33.000 --> 02:14:36.030 align:start position:0%
why we're only seeing 4% if you're using
pytorch<02:14:33.719><c> 2.3.1</c><02:14:34.719><c> or</c><02:14:34.960><c> earlier</c><02:14:35.719><c> you</c><02:14:35.840><c> would</c>

02:14:36.030 --> 02:14:36.040 align:start position:0%
pytorch 2.3.1 or earlier you would
 

02:14:36.040 --> 02:14:37.470 align:start position:0%
pytorch 2.3.1 or earlier you would
actually<02:14:36.199><c> see</c><02:14:36.440><c> something</c><02:14:36.679><c> like</c><02:14:36.800><c> 30%</c>

02:14:37.470 --> 02:14:37.480 align:start position:0%
actually see something like 30%
 

02:14:37.480 --> 02:14:39.950 align:start position:0%
actually see something like 30%
Improvement<02:14:38.199><c> just</c><02:14:38.360><c> from</c><02:14:38.639><c> this</c><02:14:38.840><c> change</c><02:14:39.800><c> from</c>

02:14:39.950 --> 02:14:39.960 align:start position:0%
Improvement just from this change from
 

02:14:39.960 --> 02:14:43.870 align:start position:0%
Improvement just from this change from
changing<02:14:40.280><c> it</c><02:14:40.440><c> to</c><02:14:40.920><c> from</c><02:14:41.119><c> 50,000</c><02:14:41.639><c> to</c><02:14:41.800><c> 57</c><02:14:42.719><c> to</c>

02:14:43.870 --> 02:14:43.880 align:start position:0%
changing it to from 50,000 to 57 to
 

02:14:43.880 --> 02:14:47.030 align:start position:0%
changing it to from 50,000 to 57 to
50304<02:14:44.880><c> so</c><02:14:45.760><c> again</c><02:14:46.360><c> one</c><02:14:46.480><c> of</c><02:14:46.559><c> my</c><02:14:46.679><c> favorite</c>

02:14:47.030 --> 02:14:47.040 align:start position:0%
50304 so again one of my favorite
 

02:14:47.040 --> 02:14:49.069 align:start position:0%
50304 so again one of my favorite
examples<02:14:47.480><c> also</c><02:14:48.119><c> of</c><02:14:48.320><c> having</c><02:14:48.520><c> to</c><02:14:48.960><c> understand</c>

02:14:49.069 --> 02:14:49.079 align:start position:0%
examples also of having to understand
 

02:14:49.079 --> 02:14:51.229 align:start position:0%
examples also of having to understand
the<02:14:49.199><c> under</c><02:14:49.440><c> the</c><02:14:49.639><c> hood</c><02:14:50.000><c> and</c><02:14:50.159><c> how</c><02:14:50.280><c> it</c><02:14:50.400><c> all</c><02:14:50.559><c> works</c>

02:14:51.229 --> 02:14:51.239 align:start position:0%
the under the hood and how it all works
 

02:14:51.239 --> 02:14:52.390 align:start position:0%
the under the hood and how it all works
and<02:14:51.360><c> to</c><02:14:51.520><c> know</c><02:14:51.719><c> what</c><02:14:51.840><c> kinds</c><02:14:52.000><c> of</c><02:14:52.119><c> things</c><02:14:52.280><c> to</c>

02:14:52.390 --> 02:14:52.400 align:start position:0%
and to know what kinds of things to
 

02:14:52.400 --> 02:14:53.990 align:start position:0%
and to know what kinds of things to
Tinker<02:14:52.800><c> with</c><02:14:53.000><c> to</c><02:14:53.159><c> push</c><02:14:53.360><c> the</c><02:14:53.480><c> performance</c><02:14:53.840><c> of</c>

02:14:53.990 --> 02:14:54.000 align:start position:0%
Tinker with to push the performance of
 

02:14:54.000 --> 02:14:56.669 align:start position:0%
Tinker with to push the performance of
your<02:14:54.559><c> code</c><02:14:55.559><c> okay</c><02:14:55.679><c> so</c><02:14:55.840><c> at</c><02:14:56.000><c> this</c><02:14:56.119><c> point</c><02:14:56.360><c> we</c><02:14:56.480><c> have</c>

02:14:56.669 --> 02:14:56.679 align:start position:0%
your code okay so at this point we have
 

02:14:56.679 --> 02:14:58.910 align:start position:0%
your code okay so at this point we have
improved<02:14:57.040><c> the</c><02:14:57.159><c> performance</c><02:14:57.599><c> by</c><02:14:57.800><c> about</c><02:14:58.000><c> 11x</c>

02:14:58.910 --> 02:14:58.920 align:start position:0%
improved the performance by about 11x
 

02:14:58.920 --> 02:15:00.709 align:start position:0%
improved the performance by about 11x
right<02:14:59.159><c> because</c><02:14:59.320><c> we</c><02:14:59.440><c> started</c><02:14:59.760><c> at</c><02:14:59.920><c> about</c><02:15:00.199><c> 1,000</c>

02:15:00.709 --> 02:15:00.719 align:start position:0%
right because we started at about 1,000
 

02:15:00.719 --> 02:15:02.629 align:start position:0%
right because we started at about 1,000
milliseconds<02:15:01.360><c> per</c><02:15:01.599><c> step</c><02:15:02.000><c> and</c><02:15:02.119><c> we're</c><02:15:02.280><c> now</c><02:15:02.440><c> down</c>

02:15:02.629 --> 02:15:02.639 align:start position:0%
milliseconds per step and we're now down
 

02:15:02.639 --> 02:15:05.910 align:start position:0%
milliseconds per step and we're now down
to<02:15:02.920><c> like</c><02:15:03.079><c> 93</c><02:15:03.880><c> milliseconds</c><02:15:04.880><c> so</c><02:15:05.119><c> that's</c><02:15:05.639><c> uh</c>

02:15:05.910 --> 02:15:05.920 align:start position:0%
to like 93 milliseconds so that's uh
 

02:15:05.920 --> 02:15:08.149 align:start position:0%
to like 93 milliseconds so that's uh
quite<02:15:06.199><c> good</c><02:15:06.639><c> and</c><02:15:06.800><c> we're</c><02:15:07.400><c> uh</c><02:15:07.520><c> doing</c><02:15:07.880><c> a</c><02:15:08.000><c> much</c>

02:15:08.149 --> 02:15:08.159 align:start position:0%
quite good and we're uh doing a much
 

02:15:08.159 --> 02:15:09.750 align:start position:0%
quite good and we're uh doing a much
better<02:15:08.400><c> job</c><02:15:08.559><c> of</c><02:15:08.639><c> utilizing</c><02:15:09.040><c> our</c><02:15:09.159><c> GPU</c>

02:15:09.750 --> 02:15:09.760 align:start position:0%
better job of utilizing our GPU
 

02:15:09.760 --> 02:15:12.549 align:start position:0%
better job of utilizing our GPU
resources<02:15:10.760><c> so</c><02:15:11.000><c> I'm</c><02:15:11.159><c> going</c><02:15:11.280><c> to</c><02:15:11.480><c> now</c><02:15:11.719><c> turn</c><02:15:12.000><c> to</c>

02:15:12.549 --> 02:15:12.559 align:start position:0%
resources so I'm going to now turn to
 

02:15:12.559 --> 02:15:14.790 align:start position:0%
resources so I'm going to now turn to
more<02:15:12.880><c> algorithmic</c><02:15:13.520><c> changes</c><02:15:14.480><c> uh</c><02:15:14.599><c> and</c>

02:15:14.790 --> 02:15:14.800 align:start position:0%
more algorithmic changes uh and
 

02:15:14.800 --> 02:15:16.350 align:start position:0%
more algorithmic changes uh and
improvements<02:15:15.239><c> to</c><02:15:15.360><c> the</c><02:15:15.480><c> actual</c><02:15:15.760><c> optimization</c>

02:15:16.350 --> 02:15:16.360 align:start position:0%
improvements to the actual optimization
 

02:15:16.360 --> 02:15:18.270 align:start position:0%
improvements to the actual optimization
itself<02:15:17.320><c> and</c><02:15:17.440><c> what</c><02:15:17.559><c> we</c><02:15:17.679><c> would</c><02:15:17.800><c> like</c><02:15:17.920><c> to</c><02:15:18.040><c> do</c><02:15:18.159><c> is</c>

02:15:18.270 --> 02:15:18.280 align:start position:0%
itself and what we would like to do is
 

02:15:18.280 --> 02:15:19.470 align:start position:0%
itself and what we would like to do is
we<02:15:18.360><c> would</c><02:15:18.520><c> like</c><02:15:18.639><c> to</c><02:15:18.760><c> follow</c><02:15:19.079><c> the</c><02:15:19.199><c> hyper</c>

02:15:19.470 --> 02:15:19.480 align:start position:0%
we would like to follow the hyper
 

02:15:19.480 --> 02:15:20.950 align:start position:0%
we would like to follow the hyper
parameters<02:15:19.920><c> that</c><02:15:20.040><c> are</c><02:15:20.159><c> mentioned</c><02:15:20.520><c> in</c><02:15:20.599><c> the</c><02:15:20.679><c> GP</c>

02:15:20.950 --> 02:15:20.960 align:start position:0%
parameters that are mentioned in the GP
 

02:15:20.960 --> 02:15:26.350 align:start position:0%
parameters that are mentioned in the GP
G2<02:15:21.400><c> or</c><02:15:21.559><c> gpt2</c><02:15:22.400><c> gpt3</c><02:15:23.079><c> paper</c><02:15:24.079><c> now</c><02:15:24.400><c> sadly</c><02:15:24.719><c> gpt2</c><02:15:25.639><c> is</c>

02:15:26.350 --> 02:15:26.360 align:start position:0%
G2 or gpt2 gpt3 paper now sadly gpt2 is
 

02:15:26.360 --> 02:15:28.870 align:start position:0%
G2 or gpt2 gpt3 paper now sadly gpt2 is
uh<02:15:26.599><c> doesn't</c><02:15:26.920><c> actually</c><02:15:27.119><c> say</c><02:15:27.320><c> too</c><02:15:27.679><c> much</c><02:15:28.679><c> it's</c>

02:15:28.870 --> 02:15:28.880 align:start position:0%
uh doesn't actually say too much it's
 

02:15:28.880 --> 02:15:30.270 align:start position:0%
uh doesn't actually say too much it's
very<02:15:29.040><c> nice</c><02:15:29.239><c> of</c><02:15:29.360><c> them</c><02:15:29.480><c> that</c><02:15:29.559><c> they</c><02:15:29.679><c> released</c><02:15:30.159><c> the</c>

02:15:30.270 --> 02:15:30.280 align:start position:0%
very nice of them that they released the
 

02:15:30.280 --> 02:15:32.390 align:start position:0%
very nice of them that they released the
model<02:15:30.599><c> weights</c><02:15:30.920><c> and</c><02:15:31.079><c> the</c><02:15:31.199><c> code</c><02:15:31.800><c> but</c><02:15:31.960><c> the</c><02:15:32.119><c> paper</c>

02:15:32.390 --> 02:15:32.400 align:start position:0%
model weights and the code but the paper
 

02:15:32.400 --> 02:15:33.790 align:start position:0%
model weights and the code but the paper
itself<02:15:32.679><c> is</c><02:15:32.840><c> extremely</c><02:15:33.199><c> vague</c><02:15:33.480><c> as</c><02:15:33.599><c> to</c><02:15:33.719><c> the</c>

02:15:33.790 --> 02:15:33.800 align:start position:0%
itself is extremely vague as to the
 

02:15:33.800 --> 02:15:36.270 align:start position:0%
itself is extremely vague as to the
optimization<02:15:34.400><c> details</c><02:15:35.400><c> uh</c><02:15:35.520><c> the</c><02:15:35.679><c> code</c><02:15:35.960><c> itself</c>

02:15:36.270 --> 02:15:36.280 align:start position:0%
optimization details uh the code itself
 

02:15:36.280 --> 02:15:38.870 align:start position:0%
optimization details uh the code itself
that<02:15:36.400><c> they</c><02:15:36.520><c> released</c><02:15:36.960><c> as</c><02:15:37.559><c> well</c><02:15:38.559><c> the</c><02:15:38.679><c> code</c>

02:15:38.870 --> 02:15:38.880 align:start position:0%
that they released as well the code
 

02:15:38.880 --> 02:15:40.270 align:start position:0%
that they released as well the code
we've<02:15:39.040><c> been</c><02:15:39.159><c> looking</c><02:15:39.360><c> at</c><02:15:39.760><c> this</c><02:15:39.880><c> is</c><02:15:40.000><c> just</c><02:15:40.119><c> the</c>

02:15:40.270 --> 02:15:40.280 align:start position:0%
we've been looking at this is just the
 

02:15:40.280 --> 02:15:41.910 align:start position:0%
we've been looking at this is just the
inference<02:15:40.719><c> code</c><02:15:41.079><c> so</c><02:15:41.239><c> there's</c><02:15:41.400><c> no</c><02:15:41.559><c> training</c>

02:15:41.910 --> 02:15:41.920 align:start position:0%
inference code so there's no training
 

02:15:41.920 --> 02:15:44.270 align:start position:0%
inference code so there's no training
code<02:15:42.239><c> here</c><02:15:42.559><c> and</c><02:15:42.840><c> very</c><02:15:43.000><c> few</c><02:15:43.199><c> hyp</c><02:15:43.440><c> parameters</c><02:15:44.079><c> so</c>

02:15:44.270 --> 02:15:44.280 align:start position:0%
code here and very few hyp parameters so
 

02:15:44.280 --> 02:15:46.229 align:start position:0%
code here and very few hyp parameters so
this<02:15:44.400><c> doesn't</c><02:15:44.639><c> also</c><02:15:44.880><c> tell</c><02:15:45.079><c> us</c><02:15:45.199><c> too</c><02:15:45.400><c> much</c><02:15:46.079><c> so</c>

02:15:46.229 --> 02:15:46.239 align:start position:0%
this doesn't also tell us too much so
 

02:15:46.239 --> 02:15:48.149 align:start position:0%
this doesn't also tell us too much so
for<02:15:46.440><c> that</c><02:15:46.559><c> we</c><02:15:46.679><c> have</c><02:15:46.760><c> to</c><02:15:46.880><c> turn</c><02:15:47.079><c> to</c><02:15:47.239><c> the</c><02:15:47.360><c> gpt3</c>

02:15:48.149 --> 02:15:48.159 align:start position:0%
for that we have to turn to the gpt3
 

02:15:48.159 --> 02:15:51.430 align:start position:0%
for that we have to turn to the gpt3
paper<02:15:49.159><c> and</c><02:15:49.880><c> um</c><02:15:50.559><c> in</c><02:15:50.679><c> the</c><02:15:50.960><c> depending</c><02:15:51.280><c> of</c><02:15:51.360><c> the</c>

02:15:51.430 --> 02:15:51.440 align:start position:0%
paper and um in the depending of the
 

02:15:51.440 --> 02:15:55.069 align:start position:0%
paper and um in the depending of the
gpt3<02:15:52.000><c> paper</c><02:15:53.000><c> um</c><02:15:53.719><c> they</c><02:15:53.920><c> have</c><02:15:54.199><c> a</c><02:15:54.320><c> lot</c><02:15:54.480><c> more</c><02:15:54.760><c> hyper</c>

02:15:55.069 --> 02:15:55.079 align:start position:0%
gpt3 paper um they have a lot more hyper
 

02:15:55.079 --> 02:15:56.990 align:start position:0%
gpt3 paper um they have a lot more hyper
parameters<02:15:55.599><c> here</c><02:15:55.760><c> for</c><02:15:55.920><c> us</c><02:15:56.079><c> to</c><02:15:56.199><c> use</c><02:15:56.800><c> and</c><02:15:56.880><c> the</c>

02:15:56.990 --> 02:15:57.000 align:start position:0%
parameters here for us to use and the
 

02:15:57.000 --> 02:15:59.629 align:start position:0%
parameters here for us to use and the
gpt3<02:15:57.559><c> paper</c><02:15:57.960><c> in</c><02:15:58.159><c> general</c><02:15:58.840><c> is</c><02:15:59.079><c> a</c><02:15:59.199><c> lot</c><02:15:59.360><c> more</c>

02:15:59.629 --> 02:15:59.639 align:start position:0%
gpt3 paper in general is a lot more
 

02:15:59.639 --> 02:16:02.950 align:start position:0%
gpt3 paper in general is a lot more
detailed<02:16:00.199><c> as</c><02:16:00.320><c> to</c><02:16:00.840><c> uh</c><02:16:00.960><c> all</c><02:16:01.079><c> of</c><02:16:01.400><c> the</c><02:16:02.400><c> you</c><02:16:02.520><c> know</c>

02:16:02.950 --> 02:16:02.960 align:start position:0%
detailed as to uh all of the you know
 

02:16:02.960 --> 02:16:04.270 align:start position:0%
detailed as to uh all of the you know
small<02:16:03.239><c> details</c><02:16:03.559><c> that</c><02:16:03.719><c> go</c><02:16:03.840><c> into</c><02:16:03.960><c> the</c><02:16:04.040><c> model</c>

02:16:04.270 --> 02:16:04.280 align:start position:0%
small details that go into the model
 

02:16:04.280 --> 02:16:07.189 align:start position:0%
small details that go into the model
training<02:16:05.040><c> but</c><02:16:05.280><c> gpt3</c><02:16:06.199><c> U</c><02:16:06.320><c> models</c><02:16:06.679><c> were</c><02:16:06.960><c> never</c>

02:16:07.189 --> 02:16:07.199 align:start position:0%
training but gpt3 U models were never
 

02:16:07.199 --> 02:16:09.990 align:start position:0%
training but gpt3 U models were never
released<02:16:08.119><c> so</c><02:16:08.639><c> gbt2</c><02:16:09.199><c> we</c><02:16:09.280><c> have</c><02:16:09.400><c> the</c><02:16:09.520><c> weights</c><02:16:09.840><c> but</c>

02:16:09.990 --> 02:16:10.000 align:start position:0%
released so gbt2 we have the weights but
 

02:16:10.000 --> 02:16:11.910 align:start position:0%
released so gbt2 we have the weights but
no<02:16:10.159><c> details</c><02:16:10.599><c> and</c><02:16:10.719><c> gpt3</c><02:16:11.360><c> we</c><02:16:11.440><c> have</c><02:16:11.599><c> lots</c><02:16:11.760><c> of</c>

02:16:11.910 --> 02:16:11.920 align:start position:0%
no details and gpt3 we have lots of
 

02:16:11.920 --> 02:16:15.510 align:start position:0%
no details and gpt3 we have lots of
details<02:16:12.320><c> but</c><02:16:12.480><c> no</c><02:16:12.639><c> weights</c><02:16:13.599><c> so</c><02:16:14.159><c> um</c><02:16:14.880><c> but</c><02:16:15.159><c> roughly</c>

02:16:15.510 --> 02:16:15.520 align:start position:0%
details but no weights so um but roughly
 

02:16:15.520 --> 02:16:17.709 align:start position:0%
details but no weights so um but roughly
speaking<02:16:15.880><c> gpt2</c><02:16:16.400><c> and</c><02:16:16.520><c> gpt3</c><02:16:17.000><c> architectures</c><02:16:17.480><c> are</c>

02:16:17.709 --> 02:16:17.719 align:start position:0%
speaking gpt2 and gpt3 architectures are
 

02:16:17.719 --> 02:16:21.470 align:start position:0%
speaking gpt2 and gpt3 architectures are
very<02:16:17.960><c> very</c><02:16:18.480><c> similar</c><02:16:19.480><c> and</c><02:16:20.000><c> um</c><02:16:21.079><c> basically</c><02:16:21.400><c> there</c>

02:16:21.470 --> 02:16:21.480 align:start position:0%
very very similar and um basically there
 

02:16:21.480 --> 02:16:23.030 align:start position:0%
very very similar and um basically there
are<02:16:21.639><c> very</c><02:16:21.760><c> few</c><02:16:21.960><c> changes</c><02:16:22.360><c> the</c><02:16:22.480><c> context</c><02:16:22.800><c> length</c>

02:16:23.030 --> 02:16:23.040 align:start position:0%
are very few changes the context length
 

02:16:23.040 --> 02:16:25.950 align:start position:0%
are very few changes the context length
was<02:16:23.199><c> expanded</c><02:16:23.599><c> from</c><02:16:23.760><c> 1024</c><02:16:24.559><c> to</c><02:16:24.840><c> 2048</c><02:16:25.840><c> and</c>

02:16:25.950 --> 02:16:25.960 align:start position:0%
was expanded from 1024 to 2048 and
 

02:16:25.960 --> 02:16:28.149 align:start position:0%
was expanded from 1024 to 2048 and
that's<02:16:26.119><c> kind</c><02:16:26.239><c> of</c><02:16:26.360><c> like</c><02:16:26.679><c> the</c><02:16:26.880><c> major</c><02:16:27.239><c> change</c><02:16:28.040><c> uh</c>

02:16:28.149 --> 02:16:28.159 align:start position:0%
that's kind of like the major change uh
 

02:16:28.159 --> 02:16:29.470 align:start position:0%
that's kind of like the major change uh
and<02:16:28.280><c> some</c><02:16:28.360><c> of</c><02:16:28.440><c> the</c><02:16:28.559><c> hyper</c><02:16:28.840><c> parameters</c><02:16:29.239><c> around</c>

02:16:29.470 --> 02:16:29.480 align:start position:0%
and some of the hyper parameters around
 

02:16:29.480 --> 02:16:31.109 align:start position:0%
and some of the hyper parameters around
the<02:16:29.559><c> Transformer</c><02:16:30.079><c> have</c><02:16:30.199><c> changed</c><02:16:30.960><c> but</c>

02:16:31.109 --> 02:16:31.119 align:start position:0%
the Transformer have changed but
 

02:16:31.119 --> 02:16:32.309 align:start position:0%
the Transformer have changed but
otherwise<02:16:31.440><c> they're</c><02:16:31.639><c> pretty</c><02:16:31.800><c> much</c><02:16:32.000><c> the</c><02:16:32.080><c> same</c>

02:16:32.309 --> 02:16:32.319 align:start position:0%
otherwise they're pretty much the same
 

02:16:32.319 --> 02:16:34.150 align:start position:0%
otherwise they're pretty much the same
model<02:16:32.840><c> it's</c><02:16:33.000><c> just</c><02:16:33.120><c> that</c><02:16:33.280><c> gpt3</c><02:16:33.800><c> was</c><02:16:33.920><c> trained</c>

02:16:34.150 --> 02:16:34.160 align:start position:0%
model it's just that gpt3 was trained
 

02:16:34.160 --> 02:16:36.509 align:start position:0%
model it's just that gpt3 was trained
for<02:16:34.319><c> a</c><02:16:34.439><c> lot</c><02:16:34.599><c> longer</c><02:16:35.040><c> on</c><02:16:35.160><c> a</c><02:16:35.280><c> bigger</c><02:16:35.559><c> data</c><02:16:35.840><c> set</c>

02:16:36.509 --> 02:16:36.519 align:start position:0%
for a lot longer on a bigger data set
 

02:16:36.519 --> 02:16:38.750 align:start position:0%
for a lot longer on a bigger data set
and<02:16:36.800><c> uh</c><02:16:37.000><c> has</c><02:16:37.120><c> a</c><02:16:37.240><c> lot</c><02:16:37.399><c> more</c><02:16:37.599><c> thorough</c>

02:16:38.750 --> 02:16:38.760 align:start position:0%
and uh has a lot more thorough
 

02:16:38.760 --> 02:16:42.030 align:start position:0%
and uh has a lot more thorough
evaluations<02:16:39.760><c> uh</c><02:16:39.920><c> and</c><02:16:40.040><c> the</c><02:16:40.120><c> gpt3</c><02:16:40.719><c> model</c><02:16:41.040><c> is</c><02:16:41.240><c> 175</c>

02:16:42.030 --> 02:16:42.040 align:start position:0%
evaluations uh and the gpt3 model is 175
 

02:16:42.040 --> 02:16:46.589 align:start position:0%
evaluations uh and the gpt3 model is 175
billion<02:16:42.519><c> instead</c><02:16:42.840><c> of</c><02:16:43.200><c> 1.6</c><02:16:44.439><c> billion</c><02:16:45.439><c> um</c><02:16:46.080><c> in</c><02:16:46.200><c> the</c>

02:16:46.589 --> 02:16:46.599 align:start position:0%
billion instead of 1.6 billion um in the
 

02:16:46.599 --> 02:16:49.150 align:start position:0%
billion instead of 1.6 billion um in the
gpt2<02:16:47.599><c> so</c><02:16:47.840><c> long</c><02:16:48.040><c> story</c><02:16:48.319><c> short</c><02:16:48.840><c> we're</c><02:16:48.960><c> going</c><02:16:49.080><c> to</c>

02:16:49.150 --> 02:16:49.160 align:start position:0%
gpt2 so long story short we're going to
 

02:16:49.160 --> 02:16:51.030 align:start position:0%
gpt2 so long story short we're going to
go<02:16:49.280><c> to</c><02:16:49.399><c> gp3</c><02:16:49.880><c> paper</c><02:16:50.120><c> to</c><02:16:50.240><c> follow</c><02:16:50.479><c> along</c><02:16:50.679><c> some</c><02:16:50.960><c> the</c>

02:16:51.030 --> 02:16:51.040 align:start position:0%
go to gp3 paper to follow along some the
 

02:16:51.040 --> 02:16:54.270 align:start position:0%
go to gp3 paper to follow along some the
hyper<02:16:51.359><c> parameters</c><02:16:52.679><c> so</c><02:16:53.679><c> to</c><02:16:53.800><c> train</c><02:16:54.080><c> all</c><02:16:54.200><c> the</c>

02:16:54.270 --> 02:16:54.280 align:start position:0%
hyper parameters so to train all the
 

02:16:54.280 --> 02:16:56.629 align:start position:0%
hyper parameters so to train all the
versions<02:16:54.519><c> of</c><02:16:54.639><c> gpt3</c><02:16:55.160><c> we</c><02:16:55.240><c> use</c><02:16:55.439><c> atom</c><02:16:55.800><c> with</c><02:16:56.120><c> beta</c><02:16:56.399><c> 1</c>

02:16:56.629 --> 02:16:56.639 align:start position:0%
versions of gpt3 we use atom with beta 1
 

02:16:56.639 --> 02:17:00.389 align:start position:0%
versions of gpt3 we use atom with beta 1
beta<02:16:56.880><c> 2</c><02:16:57.399><c> of9</c><02:16:58.160><c> and</c><02:16:58.519><c> .95</c><02:16:59.519><c> so</c><02:16:59.719><c> let's</c><02:16:59.880><c> swing</c><02:17:00.160><c> over</c>

02:17:00.389 --> 02:17:00.399 align:start position:0%
beta 2 of9 and .95 so let's swing over
 

02:17:00.399 --> 02:17:02.629 align:start position:0%
beta 2 of9 and .95 so let's swing over
here<02:17:01.080><c> and</c><02:17:01.240><c> make</c><02:17:01.399><c> sure</c><02:17:01.719><c> that</c><02:17:01.880><c> the</c><02:17:02.080><c> betas</c>

02:17:02.629 --> 02:17:02.639 align:start position:0%
here and make sure that the betas
 

02:17:02.639 --> 02:17:04.509 align:start position:0%
here and make sure that the betas
parameter<02:17:03.639><c> which</c><02:17:03.880><c> you</c><02:17:04.000><c> can</c><02:17:04.120><c> see</c><02:17:04.319><c> here</c>

02:17:04.509 --> 02:17:04.519 align:start position:0%
parameter which you can see here
 

02:17:04.519 --> 02:17:06.629 align:start position:0%
parameter which you can see here
defaults<02:17:04.960><c> to</c><02:17:05.120><c> 0.9</c><02:17:05.599><c> and</c>

02:17:06.629 --> 02:17:06.639 align:start position:0%
defaults to 0.9 and
 

02:17:06.639 --> 02:17:11.429 align:start position:0%
defaults to 0.9 and
999<02:17:07.639><c> is</c><02:17:07.880><c> actually</c><02:17:08.200><c> set</c><02:17:08.599><c> to</c><02:17:09.000><c> 0.9</c><02:17:09.719><c> and</c>

02:17:11.429 --> 02:17:11.439 align:start position:0%
999 is actually set to 0.9 and
 

02:17:11.439 --> 02:17:14.870 align:start position:0%
999 is actually set to 0.9 and
.95<02:17:12.439><c> and</c><02:17:12.559><c> then</c><02:17:12.719><c> the</c><02:17:12.880><c> Epsilon</c><02:17:13.679><c> parameter</c><02:17:14.679><c> uh</c>

02:17:14.870 --> 02:17:14.880 align:start position:0%
.95 and then the Epsilon parameter uh
 

02:17:14.880 --> 02:17:17.669 align:start position:0%
.95 and then the Epsilon parameter uh
you<02:17:15.000><c> can</c><02:17:15.160><c> see</c><02:17:15.559><c> is</c><02:17:15.840><c> the</c><02:17:16.000><c> default</c><02:17:16.359><c> is</c><02:17:16.479><c> 1</c><02:17:16.639><c> in8</c><02:17:17.559><c> and</c>

02:17:17.669 --> 02:17:17.679 align:start position:0%
you can see is the default is 1 in8 and
 

02:17:17.679 --> 02:17:19.910 align:start position:0%
you can see is the default is 1 in8 and
this<02:17:17.760><c> is</c><02:17:17.920><c> also</c><02:17:18.120><c> one</c><02:17:18.280><c> in8</c><02:17:19.040><c> let's</c><02:17:19.280><c> just</c><02:17:19.599><c> uh</c><02:17:19.800><c> put</c>

02:17:19.910 --> 02:17:19.920 align:start position:0%
this is also one in8 let's just uh put
 

02:17:19.920 --> 02:17:22.070 align:start position:0%
this is also one in8 let's just uh put
it<02:17:20.040><c> in</c><02:17:20.240><c> so</c><02:17:20.399><c> that</c><02:17:20.519><c> works</c>

02:17:22.070 --> 02:17:22.080 align:start position:0%
it in so that works
 

02:17:22.080 --> 02:17:25.230 align:start position:0%
it in so that works
expit<02:17:23.080><c> uh</c><02:17:23.200><c> now</c><02:17:23.399><c> next</c><02:17:23.599><c> up</c><02:17:23.880><c> they</c><02:17:24.080><c> say</c><02:17:24.679><c> we</c><02:17:24.920><c> clip</c>

02:17:25.230 --> 02:17:25.240 align:start position:0%
expit uh now next up they say we clip
 

02:17:25.240 --> 02:17:27.870 align:start position:0%
expit uh now next up they say we clip
the<02:17:25.399><c> gra</c><02:17:25.920><c> Global</c><02:17:26.240><c> Norm</c><02:17:26.519><c> of</c><02:17:26.639><c> the</c><02:17:26.760><c> gradient</c><02:17:27.200><c> at</c>

02:17:27.870 --> 02:17:27.880 align:start position:0%
the gra Global Norm of the gradient at
 

02:17:27.880 --> 02:17:30.629 align:start position:0%
the gra Global Norm of the gradient at
1.0<02:17:28.880><c> so</c><02:17:29.200><c> what</c><02:17:29.319><c> this</c><02:17:29.439><c> is</c><02:17:29.599><c> referring</c><02:17:30.000><c> to</c><02:17:30.280><c> is</c><02:17:30.439><c> that</c>

02:17:30.629 --> 02:17:30.639 align:start position:0%
1.0 so what this is referring to is that
 

02:17:30.639 --> 02:17:32.429 align:start position:0%
1.0 so what this is referring to is that
once<02:17:30.840><c> we</c><02:17:31.040><c> calculate</c><02:17:31.439><c> the</c><02:17:31.559><c> gradients</c><02:17:32.280><c> right</c>

02:17:32.429 --> 02:17:32.439 align:start position:0%
once we calculate the gradients right
 

02:17:32.439 --> 02:17:35.790 align:start position:0%
once we calculate the gradients right
after<02:17:32.679><c> l.</c><02:17:33.519><c> backward</c><02:17:34.519><c> um</c><02:17:35.240><c> we</c><02:17:35.399><c> basically</c><02:17:35.679><c> have</c>

02:17:35.790 --> 02:17:35.800 align:start position:0%
after l. backward um we basically have
 

02:17:35.800 --> 02:17:37.309 align:start position:0%
after l. backward um we basically have
the<02:17:35.880><c> gradients</c><02:17:36.240><c> at</c><02:17:36.399><c> all</c><02:17:36.559><c> the</c><02:17:36.719><c> parameter</c>

02:17:37.309 --> 02:17:37.319 align:start position:0%
the gradients at all the parameter
 

02:17:37.319 --> 02:17:40.950 align:start position:0%
the gradients at all the parameter
tensors<02:17:38.319><c> and</c><02:17:39.000><c> what</c><02:17:39.200><c> people</c><02:17:39.479><c> like</c><02:17:39.679><c> to</c><02:17:39.880><c> do</c><02:17:40.240><c> is</c>

02:17:40.950 --> 02:17:40.960 align:start position:0%
tensors and what people like to do is
 

02:17:40.960 --> 02:17:42.709 align:start position:0%
tensors and what people like to do is
basically<02:17:41.479><c> uh</c><02:17:41.639><c> clip</c><02:17:41.960><c> them</c><02:17:42.160><c> to</c><02:17:42.319><c> have</c><02:17:42.439><c> some</c><02:17:42.599><c> kind</c>

02:17:42.709 --> 02:17:42.719 align:start position:0%
basically uh clip them to have some kind
 

02:17:42.719 --> 02:17:45.790 align:start position:0%
basically uh clip them to have some kind
of<02:17:42.800><c> a</c><02:17:43.000><c> maximum</c><02:17:43.920><c> Norm</c><02:17:44.920><c> so</c><02:17:45.080><c> in</c><02:17:45.200><c> pytor</c><02:17:45.559><c> this</c><02:17:45.679><c> is</c>

02:17:45.790 --> 02:17:45.800 align:start position:0%
of a maximum Norm so in pytor this is
 

02:17:45.800 --> 02:17:48.230 align:start position:0%
of a maximum Norm so in pytor this is
fairly<02:17:46.080><c> easy</c><02:17:46.280><c> to</c><02:17:46.479><c> do</c><02:17:47.479><c> uh</c><02:17:47.599><c> it's</c><02:17:47.800><c> one</c><02:17:47.960><c> line</c><02:17:48.120><c> of</c>

02:17:48.230 --> 02:17:48.240 align:start position:0%
fairly easy to do uh it's one line of
 

02:17:48.240 --> 02:17:50.150 align:start position:0%
fairly easy to do uh it's one line of
code<02:17:48.519><c> here</c><02:17:49.120><c> that</c><02:17:49.240><c> we</c><02:17:49.319><c> have</c><02:17:49.439><c> to</c><02:17:49.599><c> insert</c><02:17:50.000><c> right</c>

02:17:50.150 --> 02:17:50.160 align:start position:0%
code here that we have to insert right
 

02:17:50.160 --> 02:17:52.509 align:start position:0%
code here that we have to insert right
after<02:17:50.359><c> we</c><02:17:50.559><c> calcul</c><02:17:50.840><c> Cal</c><02:17:51.040><c> the</c><02:17:51.319><c> gradients</c><02:17:52.319><c> and</c>

02:17:52.509 --> 02:17:52.519 align:start position:0%
after we calcul Cal the gradients and
 

02:17:52.519 --> 02:17:55.469 align:start position:0%
after we calcul Cal the gradients and
what<02:17:52.719><c> this</c><02:17:52.880><c> utility</c><02:17:53.319><c> function</c><02:17:53.639><c> is</c><02:17:53.920><c> doing</c><02:17:54.920><c> is</c>

02:17:55.469 --> 02:17:55.479 align:start position:0%
what this utility function is doing is
 

02:17:55.479 --> 02:17:58.230 align:start position:0%
what this utility function is doing is
um<02:17:55.920><c> it's</c><02:17:56.120><c> calculating</c><02:17:56.760><c> the</c><02:17:57.200><c> global</c><02:17:57.639><c> Norm</c><02:17:58.120><c> of</c>

02:17:58.230 --> 02:17:58.240 align:start position:0%
um it's calculating the global Norm of
 

02:17:58.240 --> 02:18:01.110 align:start position:0%
um it's calculating the global Norm of
the<02:17:58.359><c> parameters</c><02:17:59.160><c> so</c><02:17:59.519><c> every</c><02:17:59.760><c> single</c><02:18:00.160><c> par</c><02:18:00.639><c> um</c>

02:18:01.110 --> 02:18:01.120 align:start position:0%
the parameters so every single par um
 

02:18:01.120 --> 02:18:03.110 align:start position:0%
the parameters so every single par um
gradient<02:18:01.760><c> on</c><02:18:01.920><c> all</c><02:18:02.120><c> the</c><02:18:02.240><c> parameters</c><02:18:02.920><c> you</c>

02:18:03.110 --> 02:18:03.120 align:start position:0%
gradient on all the parameters you
 

02:18:03.120 --> 02:18:05.030 align:start position:0%
gradient on all the parameters you
square<02:18:03.479><c> it</c><02:18:03.760><c> and</c><02:18:03.880><c> you</c><02:18:04.080><c> add</c><02:18:04.280><c> it</c><02:18:04.399><c> all</c><02:18:04.599><c> up</c><02:18:04.840><c> and</c><02:18:04.920><c> you</c>

02:18:05.030 --> 02:18:05.040 align:start position:0%
square it and you add it all up and you
 

02:18:05.040 --> 02:18:07.190 align:start position:0%
square it and you add it all up and you
take<02:18:05.160><c> a</c><02:18:05.280><c> big</c><02:18:05.439><c> square</c><02:18:05.719><c> root</c><02:18:05.960><c> of</c><02:18:06.160><c> that</c><02:18:07.000><c> and</c>

02:18:07.190 --> 02:18:07.200 align:start position:0%
take a big square root of that and
 

02:18:07.200 --> 02:18:10.190 align:start position:0%
take a big square root of that and
that's<02:18:07.399><c> the</c><02:18:07.559><c> norm</c><02:18:08.240><c> of</c><02:18:08.639><c> the</c><02:18:08.840><c> parameter</c><02:18:09.559><c> V</c>

02:18:10.190 --> 02:18:10.200 align:start position:0%
that's the norm of the parameter V
 

02:18:10.200 --> 02:18:12.950 align:start position:0%
that's the norm of the parameter V
Vector<02:18:10.639><c> basically</c><02:18:11.399><c> it's</c><02:18:11.679><c> the</c><02:18:12.639><c> it's</c><02:18:12.800><c> the</c>

02:18:12.950 --> 02:18:12.960 align:start position:0%
Vector basically it's the it's the
 

02:18:12.960 --> 02:18:14.509 align:start position:0%
Vector basically it's the it's the
length<02:18:13.240><c> of</c><02:18:13.399><c> it</c><02:18:13.679><c> if</c><02:18:13.840><c> you</c><02:18:14.080><c> if</c><02:18:14.160><c> you'd</c><02:18:14.319><c> like</c><02:18:14.439><c> to</c>

02:18:14.509 --> 02:18:14.519 align:start position:0%
length of it if you if you'd like to
 

02:18:14.519 --> 02:18:16.270 align:start position:0%
length of it if you if you'd like to
look<02:18:14.639><c> at</c><02:18:14.719><c> it</c><02:18:14.880><c> that</c><02:18:15.040><c> way</c><02:18:15.599><c> and</c><02:18:15.719><c> we</c><02:18:15.800><c> are</c><02:18:15.960><c> basically</c>

02:18:16.270 --> 02:18:16.280 align:start position:0%
look at it that way and we are basically
 

02:18:16.280 --> 02:18:18.509 align:start position:0%
look at it that way and we are basically
making<02:18:16.559><c> sure</c><02:18:16.880><c> that</c><02:18:17.160><c> its</c><02:18:17.439><c> length</c><02:18:17.880><c> is</c><02:18:18.080><c> no</c><02:18:18.240><c> more</c>

02:18:18.509 --> 02:18:18.519 align:start position:0%
making sure that its length is no more
 

02:18:18.519 --> 02:18:21.309 align:start position:0%
making sure that its length is no more
than<02:18:18.679><c> 1.0</c><02:18:19.679><c> and</c><02:18:19.800><c> we're</c><02:18:19.920><c> going</c><02:18:20.040><c> to</c><02:18:20.200><c> clip</c><02:18:20.399><c> it</c>

02:18:21.309 --> 02:18:21.319 align:start position:0%
than 1.0 and we're going to clip it
 

02:18:21.319 --> 02:18:23.190 align:start position:0%
than 1.0 and we're going to clip it
and<02:18:21.920><c> the</c><02:18:22.040><c> reason</c><02:18:22.280><c> that</c><02:18:22.399><c> people</c><02:18:22.639><c> like</c><02:18:22.800><c> to</c><02:18:22.960><c> use</c>

02:18:23.190 --> 02:18:23.200 align:start position:0%
and the reason that people like to use
 

02:18:23.200 --> 02:18:25.270 align:start position:0%
and the reason that people like to use
this<02:18:23.479><c> is</c><02:18:23.719><c> that</c><02:18:24.439><c> uh</c><02:18:24.719><c> sometimes</c><02:18:24.880><c> you</c><02:18:24.960><c> can</c><02:18:25.120><c> get</c>

02:18:25.270 --> 02:18:25.280 align:start position:0%
this is that uh sometimes you can get
 

02:18:25.280 --> 02:18:27.030 align:start position:0%
this is that uh sometimes you can get
unlucky<02:18:25.639><c> during</c><02:18:25.840><c> your</c><02:18:26.000><c> optimization</c><02:18:26.800><c> maybe</c>

02:18:27.030 --> 02:18:27.040 align:start position:0%
unlucky during your optimization maybe
 

02:18:27.040 --> 02:18:28.669 align:start position:0%
unlucky during your optimization maybe
it's<02:18:27.160><c> a</c><02:18:27.359><c> bad</c><02:18:27.599><c> data</c><02:18:27.880><c> batch</c><02:18:28.160><c> or</c><02:18:28.280><c> something</c><02:18:28.519><c> like</c>

02:18:28.669 --> 02:18:28.679 align:start position:0%
it's a bad data batch or something like
 

02:18:28.679 --> 02:18:31.190 align:start position:0%
it's a bad data batch or something like
that<02:18:29.479><c> and</c><02:18:30.000><c> if</c><02:18:30.080><c> you</c><02:18:30.200><c> get</c><02:18:30.399><c> very</c><02:18:30.559><c> unlucky</c><02:18:30.960><c> in</c><02:18:31.040><c> the</c>

02:18:31.190 --> 02:18:31.200 align:start position:0%
that and if you get very unlucky in the
 

02:18:31.200 --> 02:18:33.549 align:start position:0%
that and if you get very unlucky in the
batch<02:18:31.719><c> you</c><02:18:31.840><c> might</c><02:18:32.040><c> get</c><02:18:32.240><c> really</c><02:18:32.479><c> high</c><02:18:32.679><c> loss</c><02:18:33.359><c> and</c>

02:18:33.549 --> 02:18:33.559 align:start position:0%
batch you might get really high loss and
 

02:18:33.559 --> 02:18:35.190 align:start position:0%
batch you might get really high loss and
really<02:18:33.800><c> high</c><02:18:33.920><c> loss</c><02:18:34.240><c> could</c><02:18:34.519><c> lead</c><02:18:34.760><c> to</c><02:18:34.880><c> a</c><02:18:35.000><c> really</c>

02:18:35.190 --> 02:18:35.200 align:start position:0%
really high loss could lead to a really
 

02:18:35.200 --> 02:18:38.190 align:start position:0%
really high loss could lead to a really
high<02:18:35.399><c> gradient</c><02:18:36.359><c> and</c><02:18:36.679><c> this</c><02:18:36.840><c> could</c><02:18:37.200><c> basically</c>

02:18:38.190 --> 02:18:38.200 align:start position:0%
high gradient and this could basically
 

02:18:38.200 --> 02:18:40.230 align:start position:0%
high gradient and this could basically
uh<02:18:38.319><c> shock</c><02:18:38.679><c> your</c><02:18:38.920><c> model</c><02:18:39.599><c> and</c><02:18:39.760><c> shock</c><02:18:40.080><c> the</c>

02:18:40.230 --> 02:18:40.240 align:start position:0%
uh shock your model and shock the
 

02:18:40.240 --> 02:18:42.429 align:start position:0%
uh shock your model and shock the
optimization<02:18:41.200><c> so</c><02:18:41.399><c> people</c><02:18:41.599><c> like</c><02:18:41.800><c> to</c><02:18:41.920><c> use</c><02:18:42.280><c> a</c>

02:18:42.429 --> 02:18:42.439 align:start position:0%
optimization so people like to use a
 

02:18:42.439 --> 02:18:45.709 align:start position:0%
optimization so people like to use a
gradient<02:18:43.200><c> Norm</c><02:18:43.639><c> clipping</c><02:18:44.639><c> uh</c><02:18:44.920><c> to</c><02:18:45.280><c> prevent</c><02:18:45.599><c> the</c>

02:18:45.709 --> 02:18:45.719 align:start position:0%
gradient Norm clipping uh to prevent the
 

02:18:45.719 --> 02:18:49.030 align:start position:0%
gradient Norm clipping uh to prevent the
model<02:18:46.160><c> from</c><02:18:47.000><c> um</c><02:18:48.000><c> basically</c><02:18:48.399><c> getting</c><02:18:48.639><c> too</c><02:18:48.880><c> big</c>

02:18:49.030 --> 02:18:49.040 align:start position:0%
model from um basically getting too big
 

02:18:49.040 --> 02:18:50.389 align:start position:0%
model from um basically getting too big
of<02:18:49.160><c> shocks</c><02:18:49.559><c> in</c><02:18:49.639><c> terms</c><02:18:49.840><c> of</c><02:18:49.960><c> the</c><02:18:50.080><c> gradient</c>

02:18:50.389 --> 02:18:50.399 align:start position:0%
of shocks in terms of the gradient
 

02:18:50.399 --> 02:18:53.469 align:start position:0%
of shocks in terms of the gradient
magnet<02:18:50.760><c> ude</c><02:18:51.639><c> and</c><02:18:52.200><c> uh</c><02:18:52.519><c> the</c><02:18:52.679><c> upper</c><02:18:52.920><c> bound</c><02:18:53.160><c> it</c><02:18:53.359><c> in</c>

02:18:53.469 --> 02:18:53.479 align:start position:0%
magnet ude and uh the upper bound it in
 

02:18:53.479 --> 02:18:55.469 align:start position:0%
magnet ude and uh the upper bound it in
this<02:18:53.679><c> way</c><02:18:54.160><c> it's</c><02:18:54.280><c> a</c><02:18:54.359><c> bit</c><02:18:54.479><c> of</c><02:18:54.559><c> a</c><02:18:54.760><c> hacky</c><02:18:55.080><c> solution</c>

02:18:55.469 --> 02:18:55.479 align:start position:0%
this way it's a bit of a hacky solution
 

02:18:55.479 --> 02:18:57.910 align:start position:0%
this way it's a bit of a hacky solution
it's<02:18:55.719><c> about</c><02:18:56.040><c> like</c><02:18:56.519><c> a</c><02:18:56.800><c> patch</c><02:18:57.240><c> on</c><02:18:57.439><c> top</c><02:18:57.599><c> of</c><02:18:57.760><c> like</c>

02:18:57.910 --> 02:18:57.920 align:start position:0%
it's about like a patch on top of like
 

02:18:57.920 --> 02:19:00.629 align:start position:0%
it's about like a patch on top of like
deeper<02:18:58.319><c> issues</c><02:18:59.319><c> uh</c><02:18:59.519><c> but</c><02:18:59.840><c> uh</c><02:18:59.960><c> people</c><02:19:00.200><c> still</c><02:19:00.519><c> do</c>

02:19:00.629 --> 02:19:00.639 align:start position:0%
deeper issues uh but uh people still do
 

02:19:00.639 --> 02:19:03.389 align:start position:0%
deeper issues uh but uh people still do
it<02:19:00.760><c> fairly</c><02:19:01.200><c> frequently</c><02:19:02.200><c> now</c><02:19:02.599><c> the</c><02:19:02.800><c> clip</c><02:19:03.120><c> grad</c>

02:19:03.389 --> 02:19:03.399 align:start position:0%
it fairly frequently now the clip grad
 

02:19:03.399 --> 02:19:05.830 align:start position:0%
it fairly frequently now the clip grad
Norm<02:19:03.840><c> Returns</c><02:19:04.439><c> the</c><02:19:04.559><c> norm</c><02:19:04.840><c> of</c><02:19:04.960><c> the</c><02:19:05.080><c> gradient</c>

02:19:05.830 --> 02:19:05.840 align:start position:0%
Norm Returns the norm of the gradient
 

02:19:05.840 --> 02:19:08.910 align:start position:0%
Norm Returns the norm of the gradient
which<02:19:06.120><c> I</c><02:19:06.319><c> like</c><02:19:06.519><c> to</c><02:19:07.000><c> always</c><02:19:07.679><c> visualize</c><02:19:08.679><c> uh</c>

02:19:08.910 --> 02:19:08.920 align:start position:0%
which I like to always visualize uh
 

02:19:08.920 --> 02:19:11.709 align:start position:0%
which I like to always visualize uh
because<02:19:09.719><c> um</c><02:19:10.000><c> it</c><02:19:10.080><c> is</c><02:19:10.240><c> useful</c><02:19:10.599><c> information</c><02:19:11.359><c> and</c>

02:19:11.709 --> 02:19:11.719 align:start position:0%
because um it is useful information and
 

02:19:11.719 --> 02:19:13.309 align:start position:0%
because um it is useful information and
sometimes<02:19:11.880><c> you</c><02:19:12.000><c> can</c><02:19:12.160><c> look</c><02:19:12.559><c> at</c><02:19:12.719><c> the</c><02:19:12.920><c> norm</c><02:19:13.200><c> of</c>

02:19:13.309 --> 02:19:13.319 align:start position:0%
sometimes you can look at the norm of
 

02:19:13.319 --> 02:19:15.509 align:start position:0%
sometimes you can look at the norm of
the<02:19:13.439><c> gradient</c><02:19:14.240><c> and</c><02:19:14.399><c> if</c><02:19:14.519><c> it's</c><02:19:14.880><c> well</c><02:19:15.080><c> behaved</c>

02:19:15.509 --> 02:19:15.519 align:start position:0%
the gradient and if it's well behaved
 

02:19:15.519 --> 02:19:17.389 align:start position:0%
the gradient and if it's well behaved
things<02:19:15.679><c> are</c><02:19:15.920><c> good</c><02:19:16.280><c> if</c><02:19:16.399><c> it's</c><02:19:16.599><c> climbing</c><02:19:17.240><c> things</c>

02:19:17.389 --> 02:19:17.399 align:start position:0%
things are good if it's climbing things
 

02:19:17.399 --> 02:19:18.990 align:start position:0%
things are good if it's climbing things
are<02:19:17.679><c> bad</c><02:19:17.880><c> and</c><02:19:18.000><c> they're</c><02:19:18.160><c> destabilizing</c><02:19:18.760><c> during</c>

02:19:18.990 --> 02:19:19.000 align:start position:0%
are bad and they're destabilizing during
 

02:19:19.000 --> 02:19:21.110 align:start position:0%
are bad and they're destabilizing during
training<02:19:19.800><c> sometimes</c><02:19:19.960><c> you</c><02:19:20.080><c> could</c><02:19:20.240><c> get</c><02:19:20.359><c> a</c><02:19:20.719><c> spike</c>

02:19:21.110 --> 02:19:21.120 align:start position:0%
training sometimes you could get a spike
 

02:19:21.120 --> 02:19:22.709 align:start position:0%
training sometimes you could get a spike
in<02:19:21.240><c> the</c><02:19:21.479><c> norm</c><02:19:22.000><c> and</c><02:19:22.120><c> that</c><02:19:22.200><c> means</c><02:19:22.399><c> there's</c><02:19:22.599><c> some</c>

02:19:22.709 --> 02:19:22.719 align:start position:0%
in the norm and that means there's some
 

02:19:22.719 --> 02:19:25.030 align:start position:0%
in the norm and that means there's some
kind<02:19:22.840><c> of</c><02:19:22.920><c> an</c><02:19:23.040><c> issue</c><02:19:23.280><c> or</c><02:19:23.399><c> an</c><02:19:23.639><c> instability</c><02:19:24.639><c> so</c>

02:19:25.030 --> 02:19:25.040 align:start position:0%
kind of an issue or an instability so
 

02:19:25.040 --> 02:19:28.950 align:start position:0%
kind of an issue or an instability so
the<02:19:25.200><c> norm</c><02:19:25.679><c> here</c><02:19:26.040><c> will</c><02:19:26.399><c> be</c><02:19:27.399><c> a</c>

02:19:28.950 --> 02:19:28.960 align:start position:0%
the norm here will be a
 

02:19:28.960 --> 02:19:33.349 align:start position:0%
the norm here will be a
norm<02:19:29.960><c> uh</c><02:19:30.160><c> and</c><02:19:30.359><c> let's</c><02:19:30.639><c> do</c><02:19:31.200><c> a</c><02:19:32.200><c> uh</c><02:19:32.760><c> 4f</c><02:19:33.240><c> or</c>

02:19:33.349 --> 02:19:33.359 align:start position:0%
norm uh and let's do a uh 4f or
 

02:19:33.359 --> 02:19:34.589 align:start position:0%
norm uh and let's do a uh 4f or
something<02:19:33.639><c> like</c>

02:19:34.589 --> 02:19:34.599 align:start position:0%
something like
 

02:19:34.599 --> 02:19:37.790 align:start position:0%
something like
that<02:19:35.599><c> and</c><02:19:35.719><c> I</c><02:19:35.840><c> believe</c><02:19:36.040><c> this</c><02:19:36.160><c> is</c><02:19:36.240><c> just</c><02:19:36.359><c> a</c><02:19:36.800><c> float</c>

02:19:37.790 --> 02:19:37.800 align:start position:0%
that and I believe this is just a float
 

02:19:37.800 --> 02:19:40.589 align:start position:0%
that and I believe this is just a float
and<02:19:37.920><c> so</c><02:19:38.120><c> we</c><02:19:38.200><c> should</c><02:19:38.399><c> be</c><02:19:38.519><c> able</c><02:19:38.760><c> to</c><02:19:39.319><c> uh</c><02:19:39.479><c> print</c>

02:19:40.589 --> 02:19:40.599 align:start position:0%
and so we should be able to uh print
 

02:19:40.599 --> 02:19:44.429 align:start position:0%
and so we should be able to uh print
that<02:19:41.599><c> uh</c><02:19:41.719><c> so</c><02:19:41.960><c> that's</c><02:19:42.639><c> Global</c><02:19:43.120><c> gradient</c>

02:19:44.429 --> 02:19:44.439 align:start position:0%
that uh so that's Global gradient
 

02:19:44.439 --> 02:19:46.870 align:start position:0%
that uh so that's Global gradient
clipping<02:19:45.439><c> now</c><02:19:45.639><c> they</c><02:19:45.800><c> go</c><02:19:45.920><c> into</c><02:19:46.120><c> the</c><02:19:46.319><c> details</c><02:19:46.719><c> of</c>

02:19:46.870 --> 02:19:46.880 align:start position:0%
clipping now they go into the details of
 

02:19:46.880 --> 02:19:49.630 align:start position:0%
clipping now they go into the details of
the<02:19:47.000><c> learning</c><02:19:47.359><c> rate</c><02:19:47.880><c> uh</c><02:19:48.160><c> scheduler</c><02:19:49.160><c> so</c><02:19:49.479><c> they</c>

02:19:49.630 --> 02:19:49.640 align:start position:0%
the learning rate uh scheduler so they
 

02:19:49.640 --> 02:19:51.230 align:start position:0%
the learning rate uh scheduler so they
don't<02:19:49.840><c> just</c><02:19:50.000><c> use</c><02:19:50.160><c> a</c><02:19:50.280><c> fixed</c><02:19:50.680><c> learning</c><02:19:50.960><c> rate</c>

02:19:51.230 --> 02:19:51.240 align:start position:0%
don't just use a fixed learning rate
 

02:19:51.240 --> 02:19:54.030 align:start position:0%
don't just use a fixed learning rate
like<02:19:51.359><c> we</c><02:19:51.479><c> do</c><02:19:51.680><c> here</c><02:19:51.800><c> for</c><02:19:52.040><c> 3</c><02:19:52.479><c> E4</c><02:19:53.479><c> but</c><02:19:53.760><c> there's</c>

02:19:54.030 --> 02:19:54.040 align:start position:0%
like we do here for 3 E4 but there's
 

02:19:54.040 --> 02:19:56.990 align:start position:0%
like we do here for 3 E4 but there's
actually<02:19:54.479><c> basically</c><02:19:55.359><c> a</c><02:19:55.840><c> cosine</c><02:19:56.200><c> DK</c><02:19:56.680><c> learning</c>

02:19:56.990 --> 02:19:57.000 align:start position:0%
actually basically a cosine DK learning
 

02:19:57.000 --> 02:20:00.870 align:start position:0%
actually basically a cosine DK learning
rate<02:19:57.600><c> schedule</c><02:19:58.600><c> um</c><02:19:59.399><c> it's</c><02:19:59.600><c> got</c><02:19:59.760><c> a</c><02:19:59.920><c> warm-up</c><02:20:00.760><c> and</c>

02:20:00.870 --> 02:20:00.880 align:start position:0%
rate schedule um it's got a warm-up and
 

02:20:00.880 --> 02:20:04.950 align:start position:0%
rate schedule um it's got a warm-up and
it's<02:20:01.080><c> got</c><02:20:01.240><c> a</c><02:20:01.479><c> cosine</c><02:20:01.840><c> DEC</c><02:20:02.520><c> to</c><02:20:02.760><c> 10%</c><02:20:03.760><c> over</c><02:20:04.040><c> some</c>

02:20:04.950 --> 02:20:04.960 align:start position:0%
it's got a cosine DEC to 10% over some
 

02:20:04.960 --> 02:20:06.510 align:start position:0%
it's got a cosine DEC to 10% over some
Horizon

02:20:06.510 --> 02:20:06.520 align:start position:0%
Horizon
 

02:20:06.520 --> 02:20:09.550 align:start position:0%
Horizon
um<02:20:07.520><c> and</c><02:20:07.720><c> so</c><02:20:08.080><c> we're</c><02:20:08.240><c> going</c><02:20:08.359><c> to</c><02:20:08.640><c> implement</c><02:20:09.399><c> uh</c>

02:20:09.550 --> 02:20:09.560 align:start position:0%
um and so we're going to implement uh
 

02:20:09.560 --> 02:20:11.870 align:start position:0%
um and so we're going to implement uh
this<02:20:09.680><c> in</c><02:20:09.800><c> a</c><02:20:09.960><c> second</c><02:20:10.720><c> I</c><02:20:10.880><c> just</c><02:20:11.040><c> like</c><02:20:11.160><c> to</c><02:20:11.280><c> see</c><02:20:11.600><c> Norm</c>

02:20:11.870 --> 02:20:11.880 align:start position:0%
this in a second I just like to see Norm
 

02:20:11.880 --> 02:20:14.670 align:start position:0%
this in a second I just like to see Norm
printed<02:20:12.319><c> here</c><02:20:12.720><c> okay</c><02:20:12.840><c> there</c><02:20:12.960><c> we</c><02:20:13.319><c> go</c><02:20:14.319><c> so</c><02:20:14.479><c> what</c>

02:20:14.670 --> 02:20:14.680 align:start position:0%
printed here okay there we go so what
 

02:20:14.680 --> 02:20:16.710 align:start position:0%
printed here okay there we go so what
happened<02:20:15.000><c> here</c><02:20:15.240><c> is</c><02:20:15.920><c> the</c><02:20:16.080><c> norm</c><02:20:16.319><c> is</c><02:20:16.479><c> actually</c>

02:20:16.710 --> 02:20:16.720 align:start position:0%
happened here is the norm is actually
 

02:20:16.720 --> 02:20:19.270 align:start position:0%
happened here is the norm is actually
really<02:20:16.960><c> high</c><02:20:17.120><c> in</c><02:20:17.200><c> the</c><02:20:17.319><c> beginning</c><02:20:17.800><c> 30</c><02:20:18.160><c> or</c><02:20:18.359><c> so</c>

02:20:19.270 --> 02:20:19.280 align:start position:0%
really high in the beginning 30 or so
 

02:20:19.280 --> 02:20:21.550 align:start position:0%
really high in the beginning 30 or so
and<02:20:19.479><c> you</c><02:20:19.640><c> see</c><02:20:20.040><c> that</c><02:20:20.720><c> as</c><02:20:20.800><c> we</c><02:20:20.920><c> continue</c><02:20:21.200><c> training</c>

02:20:21.550 --> 02:20:21.560 align:start position:0%
and you see that as we continue training
 

02:20:21.560 --> 02:20:22.750 align:start position:0%
and you see that as we continue training
it<02:20:21.720><c> kind</c><02:20:21.840><c> of</c><02:20:21.960><c> like</c>

02:20:22.750 --> 02:20:22.760 align:start position:0%
it kind of like
 

02:20:22.760 --> 02:20:27.550 align:start position:0%
it kind of like
stabilizes<02:20:23.880><c> um</c><02:20:24.880><c> at</c><02:20:25.120><c> values</c><02:20:25.800><c> below</c><02:20:26.200><c> one</c><02:20:27.200><c> um</c><02:20:27.399><c> and</c>

02:20:27.550 --> 02:20:27.560 align:start position:0%
stabilizes um at values below one um and
 

02:20:27.560 --> 02:20:30.070 align:start position:0%
stabilizes um at values below one um and
this<02:20:27.680><c> is</c><02:20:27.880><c> not</c><02:20:28.520><c> that</c><02:20:29.160><c> crazy</c><02:20:29.479><c> uncommon</c><02:20:29.880><c> for</c><02:20:30.000><c> the</c>

02:20:30.070 --> 02:20:30.080 align:start position:0%
this is not that crazy uncommon for the
 

02:20:30.080 --> 02:20:31.830 align:start position:0%
this is not that crazy uncommon for the
norm<02:20:30.319><c> to</c><02:20:30.439><c> be</c><02:20:30.640><c> high</c><02:20:30.840><c> in</c><02:20:30.960><c> the</c><02:20:31.080><c> very</c><02:20:31.280><c> first</c><02:20:31.520><c> few</c>

02:20:31.830 --> 02:20:31.840 align:start position:0%
norm to be high in the very first few
 

02:20:31.840 --> 02:20:33.590 align:start position:0%
norm to be high in the very first few
stages<02:20:32.800><c> basically</c><02:20:33.080><c> What's</c><02:20:33.240><c> Happening</c><02:20:33.479><c> Here</c>

02:20:33.590 --> 02:20:33.600 align:start position:0%
stages basically What's Happening Here
 

02:20:33.600 --> 02:20:35.389 align:start position:0%
stages basically What's Happening Here
is<02:20:33.720><c> the</c><02:20:33.800><c> model</c><02:20:34.000><c> is</c><02:20:34.160><c> completely</c><02:20:34.520><c> random</c><02:20:35.160><c> and</c><02:20:35.240><c> so</c>

02:20:35.389 --> 02:20:35.399 align:start position:0%
is the model is completely random and so
 

02:20:35.399 --> 02:20:37.270 align:start position:0%
is the model is completely random and so
there's<02:20:35.560><c> a</c><02:20:35.680><c> ton</c><02:20:35.880><c> of</c><02:20:36.120><c> learning</c><02:20:36.760><c> happening</c><02:20:37.120><c> very</c>

02:20:37.270 --> 02:20:37.280 align:start position:0%
there's a ton of learning happening very
 

02:20:37.280 --> 02:20:38.990 align:start position:0%
there's a ton of learning happening very
early<02:20:37.560><c> in</c><02:20:37.640><c> the</c><02:20:37.760><c> network</c><02:20:38.399><c> but</c><02:20:38.560><c> that</c><02:20:38.680><c> learning</c>

02:20:38.990 --> 02:20:39.000 align:start position:0%
early in the network but that learning
 

02:20:39.000 --> 02:20:41.790 align:start position:0%
early in the network but that learning
is<02:20:39.200><c> kind</c><02:20:39.319><c> of</c><02:20:39.520><c> like</c><02:20:40.200><c> um</c><02:20:41.160><c> you</c><02:20:41.280><c> know</c><02:20:41.399><c> it's</c><02:20:41.560><c> mostly</c>

02:20:41.790 --> 02:20:41.800 align:start position:0%
is kind of like um you know it's mostly
 

02:20:41.800 --> 02:20:44.309 align:start position:0%
is kind of like um you know it's mostly
learning<02:20:42.160><c> the</c><02:20:42.319><c> biases</c><02:20:42.800><c> of</c><02:20:42.960><c> the</c><02:20:43.080><c> output</c><02:20:43.439><c> tokens</c>

02:20:44.309 --> 02:20:44.319 align:start position:0%
learning the biases of the output tokens
 

02:20:44.319 --> 02:20:46.750 align:start position:0%
learning the biases of the output tokens
and<02:20:44.439><c> so</c><02:20:44.680><c> it's</c><02:20:44.800><c> a</c><02:20:44.880><c> bit</c><02:20:45.000><c> of</c><02:20:45.080><c> an</c><02:20:45.319><c> unstable</c><02:20:46.040><c> time</c><02:20:46.640><c> uh</c>

02:20:46.750 --> 02:20:46.760 align:start position:0%
and so it's a bit of an unstable time uh
 

02:20:46.760 --> 02:20:48.389 align:start position:0%
and so it's a bit of an unstable time uh
but<02:20:46.880><c> the</c><02:20:46.960><c> network</c><02:20:47.280><c> usually</c><02:20:47.560><c> stabilizes</c><02:20:48.200><c> in</c><02:20:48.280><c> a</c>

02:20:48.389 --> 02:20:48.399 align:start position:0%
but the network usually stabilizes in a
 

02:20:48.399 --> 02:20:50.630 align:start position:0%
but the network usually stabilizes in a
very<02:20:48.560><c> few</c><02:20:49.000><c> iterations</c><02:20:50.000><c> so</c><02:20:50.160><c> this</c><02:20:50.240><c> looks</c><02:20:50.479><c> very</c>

02:20:50.630 --> 02:20:50.640 align:start position:0%
very few iterations so this looks very
 

02:20:50.640 --> 02:20:52.349 align:start position:0%
very few iterations so this looks very
relatively<02:20:51.040><c> reasonable</c><02:20:51.439><c> to</c><02:20:51.600><c> me</c><02:20:52.040><c> except</c>

02:20:52.349 --> 02:20:52.359 align:start position:0%
relatively reasonable to me except
 

02:20:52.359 --> 02:20:54.070 align:start position:0%
relatively reasonable to me except
usually<02:20:52.720><c> I</c><02:20:52.800><c> would</c><02:20:53.040><c> expect</c><02:20:53.640><c> this</c><02:20:53.800><c> looks</c><02:20:53.960><c> a</c>

02:20:54.070 --> 02:20:54.080 align:start position:0%
usually I would expect this looks a
 

02:20:54.080 --> 02:20:56.230 align:start position:0%
usually I would expect this looks a
little<02:20:54.240><c> bit</c><02:20:54.399><c> funky</c><02:20:54.920><c> that</c><02:20:55.040><c> we</c><02:20:55.160><c> go</c><02:20:55.280><c> from</c><02:20:55.439><c> 28</c><02:20:55.840><c> to</c><02:20:56.000><c> 6</c>

02:20:56.230 --> 02:20:56.240 align:start position:0%
little bit funky that we go from 28 to 6
 

02:20:56.240 --> 02:20:59.429 align:start position:0%
little bit funky that we go from 28 to 6
to<02:20:56.399><c> 2</c><02:20:56.640><c> and</c><02:20:56.760><c> then</c><02:20:56.880><c> to</c><02:20:57.280><c> 10</c><02:20:58.280><c> um</c><02:20:58.800><c> it's</c><02:20:59.000><c> not</c>

02:20:59.429 --> 02:20:59.439 align:start position:0%
to 2 and then to 10 um it's not
 

02:20:59.439 --> 02:21:01.429 align:start position:0%
to 2 and then to 10 um it's not
completely<02:20:59.920><c> insane</c><02:21:00.359><c> but</c><02:21:00.520><c> it's</c><02:21:00.720><c> just</c><02:21:00.880><c> kind</c><02:21:01.000><c> of</c>

02:21:01.429 --> 02:21:01.439 align:start position:0%
completely insane but it's just kind of
 

02:21:01.439 --> 02:21:02.469 align:start position:0%
completely insane but it's just kind of
a<02:21:01.520><c> little</c><02:21:01.720><c> bit</c>

02:21:02.469 --> 02:21:02.479 align:start position:0%
a little bit
 

02:21:02.479 --> 02:21:05.230 align:start position:0%
a little bit
funky<02:21:03.479><c> um</c><02:21:04.000><c> okay</c><02:21:04.359><c> so</c><02:21:04.520><c> let's</c><02:21:04.680><c> now</c><02:21:04.840><c> get</c><02:21:04.960><c> to</c><02:21:05.120><c> the</c>

02:21:05.230 --> 02:21:05.240 align:start position:0%
funky um okay so let's now get to the
 

02:21:05.240 --> 02:21:07.349 align:start position:0%
funky um okay so let's now get to the
learning<02:21:05.520><c> rate</c><02:21:05.760><c> schuer</c><02:21:06.479><c> so</c><02:21:06.760><c> the</c><02:21:07.040><c> learning</c>

02:21:07.349 --> 02:21:07.359 align:start position:0%
learning rate schuer so the learning
 

02:21:07.359 --> 02:21:09.469 align:start position:0%
learning rate schuer so the learning
rate<02:21:07.600><c> schedule</c><02:21:07.920><c> that's</c><02:21:08.040><c> used</c><02:21:08.319><c> here</c><02:21:08.479><c> in</c><02:21:08.560><c> gpt3</c>

02:21:09.469 --> 02:21:09.479 align:start position:0%
rate schedule that's used here in gpt3
 

02:21:09.479 --> 02:21:12.389 align:start position:0%
rate schedule that's used here in gpt3
is<02:21:09.680><c> what's</c><02:21:09.920><c> called</c><02:21:10.200><c> a</c><02:21:10.439><c> cosine</c><02:21:11.120><c> Decay</c><02:21:12.000><c> learning</c>

02:21:12.389 --> 02:21:12.399 align:start position:0%
is what's called a cosine Decay learning
 

02:21:12.399 --> 02:21:14.950 align:start position:0%
is what's called a cosine Decay learning
schedule<02:21:13.200><c> with</c><02:21:13.439><c> warmup</c><02:21:14.399><c> and</c><02:21:14.520><c> the</c><02:21:14.680><c> way</c><02:21:14.840><c> this</c>

02:21:14.950 --> 02:21:14.960 align:start position:0%
schedule with warmup and the way this
 

02:21:14.960 --> 02:21:17.110 align:start position:0%
schedule with warmup and the way this
looks<02:21:15.280><c> is</c><02:21:15.479><c> that</c><02:21:16.240><c> the</c><02:21:16.359><c> learning</c><02:21:16.720><c> rate</c><02:21:16.960><c> is</c>

02:21:17.110 --> 02:21:17.120 align:start position:0%
looks is that the learning rate is
 

02:21:17.120 --> 02:21:19.870 align:start position:0%
looks is that the learning rate is
basically<02:21:17.640><c> starts</c><02:21:18.520><c> right</c><02:21:18.680><c> at</c><02:21:18.880><c> around</c><02:21:19.200><c> zero</c>

02:21:19.870 --> 02:21:19.880 align:start position:0%
basically starts right at around zero
 

02:21:19.880 --> 02:21:21.870 align:start position:0%
basically starts right at around zero
linearly<02:21:20.359><c> rank</c><02:21:20.720><c> s</c><02:21:20.800><c> up</c><02:21:21.000><c> over</c><02:21:21.200><c> some</c><02:21:21.479><c> amount</c><02:21:21.680><c> of</c>

02:21:21.870 --> 02:21:21.880 align:start position:0%
linearly rank s up over some amount of
 

02:21:21.880 --> 02:21:24.389 align:start position:0%
linearly rank s up over some amount of
time<02:21:22.640><c> and</c><02:21:22.840><c> then</c><02:21:23.040><c> comes</c><02:21:23.399><c> down</c><02:21:23.800><c> with</c><02:21:24.040><c> this</c>

02:21:24.389 --> 02:21:24.399 align:start position:0%
time and then comes down with this
 

02:21:24.399 --> 02:21:27.670 align:start position:0%
time and then comes down with this
cosine<02:21:25.240><c> sort</c><02:21:25.479><c> of</c><02:21:25.920><c> form</c><02:21:26.920><c> and</c><02:21:27.160><c> comes</c><02:21:27.399><c> down</c><02:21:27.520><c> to</c>

02:21:27.670 --> 02:21:27.680 align:start position:0%
cosine sort of form and comes down to
 

02:21:27.680 --> 02:21:28.950 align:start position:0%
cosine sort of form and comes down to
some<02:21:27.840><c> kind</c><02:21:27.960><c> of</c><02:21:28.040><c> a</c><02:21:28.120><c> minimum</c><02:21:28.439><c> learning</c><02:21:28.800><c> rate</c>

02:21:28.950 --> 02:21:28.960 align:start position:0%
some kind of a minimum learning rate
 

02:21:28.960 --> 02:21:30.510 align:start position:0%
some kind of a minimum learning rate
that's<02:21:29.120><c> up</c><02:21:29.240><c> to</c><02:21:29.399><c> you</c><02:21:29.760><c> so</c><02:21:29.920><c> here</c><02:21:30.040><c> the</c><02:21:30.160><c> minimum</c>

02:21:30.510 --> 02:21:30.520 align:start position:0%
that's up to you so here the minimum
 

02:21:30.520 --> 02:21:33.389 align:start position:0%
that's up to you so here the minimum
learning<02:21:30.840><c> rate</c><02:21:31.080><c> is</c><02:21:31.439><c> zero</c><02:21:32.439><c> but</c><02:21:32.880><c> uh</c><02:21:32.960><c> here</c><02:21:33.120><c> in</c><02:21:33.240><c> the</c>

02:21:33.389 --> 02:21:33.399 align:start position:0%
learning rate is zero but uh here in the
 

02:21:33.399 --> 02:21:35.710 align:start position:0%
learning rate is zero but uh here in the
paper<02:21:34.399><c> they</c><02:21:34.520><c> said</c><02:21:34.800><c> that</c><02:21:34.920><c> they</c><02:21:35.080><c> use</c><02:21:35.399><c> cosine</c>

02:21:35.710 --> 02:21:35.720 align:start position:0%
paper they said that they use cosine
 

02:21:35.720 --> 02:21:37.429 align:start position:0%
paper they said that they use cosine
Decay<02:21:36.000><c> for</c><02:21:36.120><c> learning</c><02:21:36.359><c> rate</c><02:21:36.560><c> down</c><02:21:36.680><c> to</c><02:21:36.840><c> 10%</c><02:21:37.319><c> of</c>

02:21:37.429 --> 02:21:37.439 align:start position:0%
Decay for learning rate down to 10% of
 

02:21:37.439 --> 02:21:40.870 align:start position:0%
Decay for learning rate down to 10% of
its<02:21:37.640><c> value</c><02:21:38.600><c> over</c><02:21:38.840><c> the</c><02:21:39.000><c> first</c><02:21:39.600><c> 260</c><02:21:40.240><c> billion</c>

02:21:40.870 --> 02:21:40.880 align:start position:0%
its value over the first 260 billion
 

02:21:40.880 --> 02:21:43.910 align:start position:0%
its value over the first 260 billion
tokens<02:21:41.880><c> and</c><02:21:42.080><c> then</c><02:21:42.399><c> training</c><02:21:42.760><c> continues</c><02:21:43.120><c> 10%</c>

02:21:43.910 --> 02:21:43.920 align:start position:0%
tokens and then training continues 10%
 

02:21:43.920 --> 02:21:46.429 align:start position:0%
tokens and then training continues 10%
after<02:21:44.920><c> and</c><02:21:45.080><c> there's</c><02:21:45.240><c> a</c><02:21:45.359><c> linear</c><02:21:45.760><c> warmup</c><02:21:46.200><c> over</c>

02:21:46.429 --> 02:21:46.439 align:start position:0%
after and there's a linear warmup over
 

02:21:46.439 --> 02:21:50.070 align:start position:0%
after and there's a linear warmup over
the<02:21:46.640><c> first</c><02:21:47.160><c> 375</c><02:21:47.960><c> million</c><02:21:48.760><c> tokens</c><02:21:49.760><c> so</c><02:21:49.920><c> that's</c>

02:21:50.070 --> 02:21:50.080 align:start position:0%
the first 375 million tokens so that's
 

02:21:50.080 --> 02:21:52.030 align:start position:0%
the first 375 million tokens so that's
about<02:21:50.240><c> the</c><02:21:50.319><c> learn</c><02:21:50.720><c> R</c><02:21:50.920><c> so</c><02:21:51.040><c> let's</c><02:21:51.359><c> now</c><02:21:51.560><c> implement</c>

02:21:52.030 --> 02:21:52.040 align:start position:0%
about the learn R so let's now implement
 

02:21:52.040 --> 02:21:55.469 align:start position:0%
about the learn R so let's now implement
this<02:21:53.000><c> uh</c><02:21:53.160><c> so</c><02:21:53.920><c> I</c><02:21:54.040><c> already</c><02:21:54.319><c> implemented</c><02:21:54.760><c> it</c><02:21:54.960><c> here</c>

02:21:55.469 --> 02:21:55.479 align:start position:0%
this uh so I already implemented it here
 

02:21:55.479 --> 02:21:58.190 align:start position:0%
this uh so I already implemented it here
and<02:21:55.600><c> the</c><02:21:55.720><c> way</c><02:21:55.920><c> this</c><02:21:56.080><c> works</c><02:21:56.720><c> is</c><02:21:57.720><c> let</c><02:21:57.840><c> me</c><02:21:57.920><c> scroll</c>

02:21:58.190 --> 02:21:58.200 align:start position:0%
and the way this works is let me scroll
 

02:21:58.200 --> 02:22:00.110 align:start position:0%
and the way this works is let me scroll
down<02:21:58.319><c> first</c><02:21:58.640><c> here</c><02:21:59.160><c> I</c><02:21:59.280><c> changed</c><02:21:59.600><c> our</c><02:21:59.800><c> training</c>

02:22:00.110 --> 02:22:00.120 align:start position:0%
down first here I changed our training
 

02:22:00.120 --> 02:22:02.590 align:start position:0%
down first here I changed our training
Loop<02:22:00.359><c> a</c><02:22:00.479><c> little</c><02:22:00.640><c> bit</c><02:22:00.840><c> so</c><02:22:01.439><c> this</c><02:22:01.560><c> was</c><02:22:01.680><c> a</c><02:22:01.840><c> 4i</c><02:22:02.399><c> in</c>

02:22:02.590 --> 02:22:02.600 align:start position:0%
Loop a little bit so this was a 4i in
 

02:22:02.600 --> 02:22:04.870 align:start position:0%
Loop a little bit so this was a 4i in
Max<02:22:02.920><c> steps</c><02:22:03.399><c> I</c><02:22:03.520><c> just</c><02:22:03.640><c> change</c><02:22:03.880><c> it</c><02:22:04.000><c> to</c><02:22:04.160><c> step</c><02:22:04.520><c> now</c>

02:22:04.870 --> 02:22:04.880 align:start position:0%
Max steps I just change it to step now
 

02:22:04.880 --> 02:22:06.990 align:start position:0%
Max steps I just change it to step now
so<02:22:05.080><c> that</c><02:22:05.280><c> we</c><02:22:05.439><c> have</c><02:22:05.960><c> the</c><02:22:06.080><c> notion</c><02:22:06.319><c> of</c><02:22:06.399><c> a</c><02:22:06.640><c> step</c><02:22:06.920><c> is</c>

02:22:06.990 --> 02:22:07.000 align:start position:0%
so that we have the notion of a step is
 

02:22:07.000 --> 02:22:09.910 align:start position:0%
so that we have the notion of a step is
a<02:22:07.120><c> single</c><02:22:07.439><c> optimization</c><02:22:08.200><c> step</c><02:22:08.640><c> in</c><02:22:08.880><c> the</c><02:22:09.680><c> in</c><02:22:09.800><c> the</c>

02:22:09.910 --> 02:22:09.920 align:start position:0%
a single optimization step in the in the
 

02:22:09.920 --> 02:22:13.469 align:start position:0%
a single optimization step in the in the
for<02:22:10.160><c> Loop</c><02:22:10.920><c> and</c><02:22:11.040><c> then</c><02:22:11.280><c> here</c><02:22:12.240><c> I</c><02:22:12.399><c> get</c><02:22:12.600><c> the</c><02:22:12.720><c> LR</c><02:22:13.160><c> for</c>

02:22:13.469 --> 02:22:13.479 align:start position:0%
for Loop and then here I get the LR for
 

02:22:13.479 --> 02:22:15.389 align:start position:0%
for Loop and then here I get the LR for
this<02:22:13.800><c> step</c><02:22:14.040><c> of</c><02:22:14.120><c> the</c><02:22:14.240><c> optimization</c><02:22:15.000><c> using</c><02:22:15.240><c> a</c>

02:22:15.389 --> 02:22:15.399 align:start position:0%
this step of the optimization using a
 

02:22:15.399 --> 02:22:18.110 align:start position:0%
this step of the optimization using a
new<02:22:15.640><c> function</c><02:22:16.080><c> I</c><02:22:16.200><c> call</c><02:22:16.479><c> get</c><02:22:16.720><c> LR</c><02:22:17.720><c> and</c><02:22:17.800><c> then</c><02:22:17.920><c> in</c>

02:22:18.110 --> 02:22:18.120 align:start position:0%
new function I call get LR and then in
 

02:22:18.120 --> 02:22:20.230 align:start position:0%
new function I call get LR and then in
pytorch<02:22:18.600><c> to</c><02:22:18.760><c> set</c><02:22:19.000><c> the</c><02:22:19.080><c> learning</c><02:22:19.479><c> rate</c><02:22:19.920><c> I</c><02:22:20.040><c> think</c>

02:22:20.230 --> 02:22:20.240 align:start position:0%
pytorch to set the learning rate I think
 

02:22:20.240 --> 02:22:21.630 align:start position:0%
pytorch to set the learning rate I think
this<02:22:20.319><c> is</c><02:22:20.560><c> is</c><02:22:20.720><c> the</c><02:22:20.840><c> way</c><02:22:20.960><c> to</c><02:22:21.080><c> set</c><02:22:21.240><c> the</c><02:22:21.359><c> learning</c>

02:22:21.630 --> 02:22:21.640 align:start position:0%
this is is the way to set the learning
 

02:22:21.640 --> 02:22:23.990 align:start position:0%
this is is the way to set the learning
rate<02:22:22.120><c> it's</c><02:22:22.240><c> a</c><02:22:22.319><c> little</c><02:22:22.439><c> bit</c><02:22:22.560><c> gnarly</c><02:22:23.319><c> um</c><02:22:23.840><c> because</c>

02:22:23.990 --> 02:22:24.000 align:start position:0%
rate it's a little bit gnarly um because
 

02:22:24.000 --> 02:22:25.510 align:start position:0%
rate it's a little bit gnarly um because
you<02:22:24.120><c> have</c><02:22:24.240><c> to</c><02:22:24.720><c> basically</c><02:22:25.000><c> there's</c><02:22:25.160><c> a</c><02:22:25.240><c> notion</c>

02:22:25.510 --> 02:22:25.520 align:start position:0%
you have to basically there's a notion
 

02:22:25.520 --> 02:22:27.190 align:start position:0%
you have to basically there's a notion
of<02:22:25.680><c> different</c><02:22:26.000><c> par</c><02:22:26.399><c> parameter</c><02:22:26.800><c> groups</c><02:22:27.120><c> that</c>

02:22:27.190 --> 02:22:27.200 align:start position:0%
of different par parameter groups that
 

02:22:27.200 --> 02:22:28.950 align:start position:0%
of different par parameter groups that
could<02:22:27.359><c> exist</c><02:22:27.560><c> in</c><02:22:27.680><c> the</c><02:22:27.840><c> optimizer</c><02:22:28.600><c> and</c><02:22:28.720><c> so</c><02:22:28.840><c> you</c>

02:22:28.950 --> 02:22:28.960 align:start position:0%
could exist in the optimizer and so you
 

02:22:28.960 --> 02:22:30.309 align:start position:0%
could exist in the optimizer and so you
actually<02:22:29.160><c> have</c><02:22:29.240><c> to</c><02:22:29.359><c> iterate</c><02:22:29.720><c> over</c><02:22:29.920><c> them</c><02:22:30.120><c> even</c>

02:22:30.309 --> 02:22:30.319 align:start position:0%
actually have to iterate over them even
 

02:22:30.319 --> 02:22:32.389 align:start position:0%
actually have to iterate over them even
though<02:22:30.439><c> we</c><02:22:30.560><c> currently</c><02:22:30.920><c> have</c><02:22:31.040><c> a</c><02:22:31.200><c> single</c><02:22:31.960><c> param</c>

02:22:32.389 --> 02:22:32.399 align:start position:0%
though we currently have a single param
 

02:22:32.399 --> 02:22:34.870 align:start position:0%
though we currently have a single param
group<02:22:32.680><c> only</c><02:22:33.560><c> um</c><02:22:33.880><c> and</c><02:22:33.960><c> you</c><02:22:34.080><c> have</c><02:22:34.160><c> to</c><02:22:34.240><c> set</c><02:22:34.439><c> the</c><02:22:34.520><c> LR</c>

02:22:34.870 --> 02:22:34.880 align:start position:0%
group only um and you have to set the LR
 

02:22:34.880 --> 02:22:37.510 align:start position:0%
group only um and you have to set the LR
in<02:22:35.120><c> this</c><02:22:35.479><c> for</c><02:22:35.760><c> Loop</c><02:22:35.960><c> kind</c><02:22:36.080><c> of</c><02:22:36.200><c> style</c><02:22:36.760><c> is</c><02:22:37.240><c> is</c><02:22:37.359><c> my</c>

02:22:37.510 --> 02:22:37.520 align:start position:0%
in this for Loop kind of style is is my
 

02:22:37.520 --> 02:22:39.790 align:start position:0%
in this for Loop kind of style is is my
impression<02:22:37.960><c> right</c><02:22:38.240><c> now</c><02:22:39.240><c> so</c><02:22:39.479><c> we</c><02:22:39.600><c> have</c><02:22:39.720><c> this</c>

02:22:39.790 --> 02:22:39.800 align:start position:0%
impression right now so we have this
 

02:22:39.800 --> 02:22:42.150 align:start position:0%
impression right now so we have this
look<02:22:40.000><c> of</c><02:22:40.479><c> LR</c><02:22:41.000><c> we</c><02:22:41.120><c> set</c><02:22:41.319><c> the</c><02:22:41.399><c> learning</c><02:22:41.720><c> rate</c><02:22:42.040><c> and</c>

02:22:42.150 --> 02:22:42.160 align:start position:0%
look of LR we set the learning rate and
 

02:22:42.160 --> 02:22:45.389 align:start position:0%
look of LR we set the learning rate and
then<02:22:42.280><c> on</c><02:22:42.399><c> the</c><02:22:42.560><c> bottom</c><02:22:43.080><c> I'm</c><02:22:43.359><c> also</c><02:22:43.640><c> printing</c><02:22:44.399><c> it</c>

02:22:45.389 --> 02:22:45.399 align:start position:0%
then on the bottom I'm also printing it
 

02:22:45.399 --> 02:22:47.030 align:start position:0%
then on the bottom I'm also printing it
uh<02:22:45.520><c> so</c><02:22:45.720><c> that's</c><02:22:46.080><c> all</c><02:22:46.200><c> the</c><02:22:46.319><c> changes</c><02:22:46.600><c> I</c><02:22:46.720><c> made</c><02:22:46.880><c> to</c>

02:22:47.030 --> 02:22:47.040 align:start position:0%
uh so that's all the changes I made to
 

02:22:47.040 --> 02:22:49.150 align:start position:0%
uh so that's all the changes I made to
this<02:22:47.160><c> Loop</c><02:22:47.720><c> and</c><02:22:47.840><c> then</c><02:22:47.960><c> of</c><02:22:48.080><c> course</c><02:22:48.319><c> the</c><02:22:48.560><c> get</c><02:22:48.760><c> LR</c>

02:22:49.150 --> 02:22:49.160 align:start position:0%
this Loop and then of course the get LR
 

02:22:49.160 --> 02:22:51.309 align:start position:0%
this Loop and then of course the get LR
is<02:22:49.280><c> my</c><02:22:49.439><c> scheduler</c><02:22:50.560><c> now</c><02:22:50.720><c> it's</c><02:22:50.840><c> worth</c><02:22:51.040><c> pointing</c>

02:22:51.309 --> 02:22:51.319 align:start position:0%
is my scheduler now it's worth pointing
 

02:22:51.319 --> 02:22:53.349 align:start position:0%
is my scheduler now it's worth pointing
out<02:22:51.439><c> that</c><02:22:51.600><c> pytorch</c><02:22:52.080><c> actually</c><02:22:52.399><c> has</c><02:22:53.040><c> learning</c>

02:22:53.349 --> 02:22:53.359 align:start position:0%
out that pytorch actually has learning
 

02:22:53.359 --> 02:22:55.429 align:start position:0%
out that pytorch actually has learning
rate<02:22:53.600><c> schedulers</c><02:22:54.160><c> and</c><02:22:54.280><c> you</c><02:22:54.359><c> can</c><02:22:54.520><c> use</c><02:22:54.760><c> them</c><02:22:55.280><c> and</c>

02:22:55.429 --> 02:22:55.439 align:start position:0%
rate schedulers and you can use them and
 

02:22:55.439 --> 02:22:56.990 align:start position:0%
rate schedulers and you can use them and
I<02:22:55.520><c> believe</c><02:22:55.760><c> there's</c><02:22:55.920><c> a</c><02:22:56.200><c> cosine</c><02:22:56.520><c> learning</c><02:22:56.800><c> rate</c>

02:22:56.990 --> 02:22:57.000 align:start position:0%
I believe there's a cosine learning rate
 

02:22:57.000 --> 02:22:59.950 align:start position:0%
I believe there's a cosine learning rate
schedule<02:22:57.319><c> in</c><02:22:57.479><c> pytorch</c><02:22:58.240><c> I</c><02:22:58.319><c> just</c><02:22:59.040><c> don't</c><02:22:59.640><c> really</c>

02:22:59.950 --> 02:22:59.960 align:start position:0%
schedule in pytorch I just don't really
 

02:22:59.960 --> 02:23:02.710 align:start position:0%
schedule in pytorch I just don't really
love<02:23:00.399><c> using</c><02:23:00.800><c> that</c><02:23:01.000><c> code</c><02:23:01.399><c> because</c><02:23:02.319><c> honestly</c>

02:23:02.710 --> 02:23:02.720 align:start position:0%
love using that code because honestly
 

02:23:02.720 --> 02:23:06.150 align:start position:0%
love using that code because honestly
it's<02:23:02.880><c> like</c><02:23:03.080><c> five</c><02:23:03.319><c> lines</c><02:23:03.520><c> of</c><02:23:03.720><c> code</c><02:23:04.560><c> and</c><02:23:05.560><c> I</c><02:23:05.680><c> fully</c>

02:23:06.150 --> 02:23:06.160 align:start position:0%
it's like five lines of code and I fully
 

02:23:06.160 --> 02:23:07.270 align:start position:0%
it's like five lines of code and I fully
understand<02:23:06.319><c> what's</c><02:23:06.520><c> happening</c><02:23:06.840><c> inside</c><02:23:07.120><c> these</c>

02:23:07.270 --> 02:23:07.280 align:start position:0%
understand what's happening inside these
 

02:23:07.280 --> 02:23:09.550 align:start position:0%
understand what's happening inside these
lines<02:23:07.720><c> so</c><02:23:07.960><c> I</c><02:23:08.040><c> don't</c><02:23:08.319><c> love</c><02:23:08.520><c> to</c><02:23:08.720><c> use</c>

02:23:09.550 --> 02:23:09.560 align:start position:0%
lines so I don't love to use
 

02:23:09.560 --> 02:23:11.790 align:start position:0%
lines so I don't love to use
abstractions<02:23:10.479><c> where</c><02:23:11.120><c> they're</c><02:23:11.319><c> kind</c><02:23:11.439><c> of</c><02:23:11.600><c> in</c>

02:23:11.790 --> 02:23:11.800 align:start position:0%
abstractions where they're kind of in
 

02:23:11.800 --> 02:23:13.150 align:start position:0%
abstractions where they're kind of in
screwable<02:23:12.319><c> and</c><02:23:12.479><c> then</c><02:23:12.680><c> I</c><02:23:12.800><c> don't</c><02:23:12.920><c> know</c><02:23:13.040><c> what</c>

02:23:13.150 --> 02:23:13.160 align:start position:0%
screwable and then I don't know what
 

02:23:13.160 --> 02:23:16.309 align:start position:0%
screwable and then I don't know what
they're<02:23:13.319><c> doing</c><02:23:13.640><c> so</c><02:23:14.560><c> personal</c><02:23:15.000><c> style</c><02:23:16.000><c> so</c><02:23:16.200><c> the</c>

02:23:16.309 --> 02:23:16.319 align:start position:0%
they're doing so personal style so the
 

02:23:16.319 --> 02:23:19.550 align:start position:0%
they're doing so personal style so the
max<02:23:16.560><c> learning</c><02:23:16.880><c> rate</c><02:23:17.160><c> here</c><02:23:17.479><c> is</c><02:23:17.920><c> let's</c><02:23:18.120><c> say</c><02:23:18.279><c> 3</c><02:23:18.560><c> E4</c>

02:23:19.550 --> 02:23:19.560 align:start position:0%
max learning rate here is let's say 3 E4
 

02:23:19.560 --> 02:23:22.389 align:start position:0%
max learning rate here is let's say 3 E4
but<02:23:19.720><c> we're</c><02:23:19.920><c> going</c><02:23:20.000><c> to</c><02:23:20.120><c> see</c><02:23:20.560><c> that</c><02:23:20.720><c> in</c><02:23:20.840><c> gpt3</c>

02:23:22.389 --> 02:23:22.399 align:start position:0%
but we're going to see that in gpt3
 

02:23:22.399 --> 02:23:25.389 align:start position:0%
but we're going to see that in gpt3
here<02:23:23.399><c> they</c><02:23:23.520><c> have</c><02:23:23.640><c> a</c><02:23:23.880><c> table</c><02:23:24.880><c> of</c><02:23:25.120><c> what</c><02:23:25.240><c> the</c>

02:23:25.389 --> 02:23:25.399 align:start position:0%
here they have a table of what the
 

02:23:25.399 --> 02:23:28.070 align:start position:0%
here they have a table of what the
maximum<02:23:25.760><c> learning</c><02:23:26.120><c> rate</c><02:23:26.560><c> is</c><02:23:26.760><c> for</c><02:23:27.080><c> every</c><02:23:27.520><c> model</c>

02:23:28.070 --> 02:23:28.080 align:start position:0%
maximum learning rate is for every model
 

02:23:28.080 --> 02:23:34.190 align:start position:0%
maximum learning rate is for every model
size<02:23:28.960><c> so</c><02:23:29.960><c> um</c><02:23:30.399><c> for</c><02:23:30.960><c> for</c><02:23:31.279><c> this</c><02:23:31.680><c> one</c><02:23:32.680><c> basically</c><02:23:33.319><c> 12</c>

02:23:34.190 --> 02:23:34.200 align:start position:0%
size so um for for this one basically 12
 

02:23:34.200 --> 02:23:37.910 align:start position:0%
size so um for for this one basically 12
12<02:23:34.600><c> layer</c><02:23:34.920><c> 768</c><02:23:35.680><c> gpt3</c><02:23:36.680><c> so</c><02:23:36.840><c> the</c><02:23:36.960><c> gpt3</c><02:23:37.479><c> small</c><02:23:37.760><c> is</c>

02:23:37.910 --> 02:23:37.920 align:start position:0%
12 layer 768 gpt3 so the gpt3 small is
 

02:23:37.920 --> 02:23:40.230 align:start position:0%
12 layer 768 gpt3 so the gpt3 small is
roughly<02:23:38.319><c> like</c><02:23:38.439><c> a</c><02:23:38.600><c> GPT</c>

02:23:40.230 --> 02:23:40.240 align:start position:0%
roughly like a GPT
 

02:23:40.240 --> 02:23:42.309 align:start position:0%
roughly like a GPT
2124m<02:23:41.240><c> we</c><02:23:41.319><c> see</c><02:23:41.560><c> that</c><02:23:41.720><c> here</c><02:23:41.920><c> they</c><02:23:42.040><c> use</c><02:23:42.240><c> a</c>

02:23:42.309 --> 02:23:42.319 align:start position:0%
2124m we see that here they use a
 

02:23:42.319 --> 02:23:44.269 align:start position:0%
2124m we see that here they use a
learning<02:23:42.640><c> rate</c><02:23:42.840><c> of</c><02:23:42.960><c> 6</c><02:23:43.200><c> E4</c><02:23:43.960><c> so</c><02:23:44.080><c> we</c><02:23:44.160><c> could</c>

02:23:44.269 --> 02:23:44.279 align:start position:0%
learning rate of 6 E4 so we could
 

02:23:44.279 --> 02:23:46.510 align:start position:0%
learning rate of 6 E4 so we could
actually<02:23:44.600><c> go</c><02:23:44.800><c> higher</c><02:23:45.680><c> um</c><02:23:45.920><c> in</c><02:23:46.080><c> fact</c><02:23:46.240><c> we</c><02:23:46.359><c> may</c>

02:23:46.510 --> 02:23:46.520 align:start position:0%
actually go higher um in fact we may
 

02:23:46.520 --> 02:23:48.230 align:start position:0%
actually go higher um in fact we may
want<02:23:46.600><c> to</c><02:23:46.760><c> try</c><02:23:46.920><c> to</c><02:23:47.040><c> follow</c><02:23:47.399><c> that</c><02:23:47.600><c> and</c><02:23:47.800><c> just</c><02:23:48.040><c> set</c>

02:23:48.230 --> 02:23:48.240 align:start position:0%
want to try to follow that and just set
 

02:23:48.240 --> 02:23:51.309 align:start position:0%
want to try to follow that and just set
the<02:23:48.359><c> max</c><02:23:48.600><c> LR</c><02:23:48.960><c> here</c><02:23:49.200><c> at</c><02:23:49.640><c> six</c>

02:23:51.309 --> 02:23:51.319 align:start position:0%
the max LR here at six
 

02:23:51.319 --> 02:23:53.070 align:start position:0%
the max LR here at six
uh<02:23:51.560><c> then</c><02:23:51.960><c> the</c><02:23:52.200><c> that's</c><02:23:52.359><c> the</c><02:23:52.479><c> maximum</c><02:23:52.800><c> learning</c>

02:23:53.070 --> 02:23:53.080 align:start position:0%
uh then the that's the maximum learning
 

02:23:53.080 --> 02:23:55.910 align:start position:0%
uh then the that's the maximum learning
rate<02:23:53.359><c> the</c><02:23:53.479><c> minum</c><02:23:53.760><c> learning</c><02:23:54.040><c> rate</c><02:23:54.359><c> is</c><02:23:54.840><c> uh</c><02:23:55.399><c> 10%</c>

02:23:55.910 --> 02:23:55.920 align:start position:0%
rate the minum learning rate is uh 10%
 

02:23:55.920 --> 02:23:58.870 align:start position:0%
rate the minum learning rate is uh 10%
of<02:23:56.120><c> that</c><02:23:56.680><c> per</c><02:23:57.080><c> description</c><02:23:57.479><c> in</c><02:23:57.560><c> the</c><02:23:57.880><c> paper</c>

02:23:58.870 --> 02:23:58.880 align:start position:0%
of that per description in the paper
 

02:23:58.880 --> 02:24:00.469 align:start position:0%
of that per description in the paper
some<02:23:59.120><c> number</c><02:23:59.319><c> of</c><02:23:59.680><c> steps</c><02:24:00.040><c> that</c><02:24:00.120><c> we're</c><02:24:00.240><c> going</c><02:24:00.319><c> to</c>

02:24:00.469 --> 02:24:00.479 align:start position:0%
some number of steps that we're going to
 

02:24:00.479 --> 02:24:02.830 align:start position:0%
some number of steps that we're going to
warm<02:24:00.760><c> up</c><02:24:01.000><c> over</c><02:24:01.720><c> and</c><02:24:01.880><c> then</c><02:24:02.040><c> the</c><02:24:02.160><c> maximum</c><02:24:02.560><c> steps</c>

02:24:02.830 --> 02:24:02.840 align:start position:0%
warm up over and then the maximum steps
 

02:24:02.840 --> 02:24:05.110 align:start position:0%
warm up over and then the maximum steps
of<02:24:02.920><c> the</c><02:24:03.040><c> optimization</c><02:24:04.000><c> which</c><02:24:04.200><c> I</c><02:24:04.359><c> now</c><02:24:04.640><c> use</c><02:24:04.920><c> also</c>

02:24:05.110 --> 02:24:05.120 align:start position:0%
of the optimization which I now use also
 

02:24:05.120 --> 02:24:07.670 align:start position:0%
of the optimization which I now use also
in<02:24:05.200><c> the</c><02:24:05.279><c> for</c><02:24:05.520><c> Loop</c><02:24:05.760><c> down</c><02:24:06.240><c> here</c><02:24:07.240><c> and</c><02:24:07.399><c> then</c><02:24:07.600><c> you</c>

02:24:07.670 --> 02:24:07.680 align:start position:0%
in the for Loop down here and then you
 

02:24:07.680 --> 02:24:09.269 align:start position:0%
in the for Loop down here and then you
can<02:24:07.840><c> go</c><02:24:07.960><c> over</c><02:24:08.160><c> this</c><02:24:08.319><c> code</c><02:24:08.560><c> if</c><02:24:08.640><c> you</c><02:24:08.800><c> like</c><02:24:09.080><c> it's</c>

02:24:09.269 --> 02:24:09.279 align:start position:0%
can go over this code if you like it's
 

02:24:09.279 --> 02:24:11.469 align:start position:0%
can go over this code if you like it's
not<02:24:09.920><c> U</c><02:24:10.160><c> it's</c><02:24:10.279><c> not</c><02:24:10.479><c> terribly</c><02:24:10.840><c> inside</c><02:24:11.160><c> Flor</c>

02:24:11.469 --> 02:24:11.479 align:start position:0%
not U it's not terribly inside Flor
 

02:24:11.479 --> 02:24:13.910 align:start position:0%
not U it's not terribly inside Flor
interesting<02:24:12.359><c> I'm</c><02:24:12.560><c> just</c><02:24:12.880><c> uh</c><02:24:13.040><c> modulating</c><02:24:13.680><c> based</c>

02:24:13.910 --> 02:24:13.920 align:start position:0%
interesting I'm just uh modulating based
 

02:24:13.920 --> 02:24:16.309 align:start position:0%
interesting I'm just uh modulating based
on<02:24:14.000><c> the</c><02:24:14.120><c> iteration</c><02:24:14.720><c> number</c><02:24:15.720><c> which</c><02:24:15.920><c> learning</c>

02:24:16.309 --> 02:24:16.319 align:start position:0%
on the iteration number which learning
 

02:24:16.319 --> 02:24:18.230 align:start position:0%
on the iteration number which learning
rate<02:24:16.840><c> uh</c><02:24:16.960><c> there</c><02:24:17.080><c> should</c><02:24:17.279><c> be</c><02:24:17.680><c> so</c><02:24:17.880><c> this</c><02:24:18.000><c> is</c><02:24:18.120><c> the</c>

02:24:18.230 --> 02:24:18.240 align:start position:0%
rate uh there should be so this is the
 

02:24:18.240 --> 02:24:21.269 align:start position:0%
rate uh there should be so this is the
warm-up<02:24:18.880><c> region</c><02:24:19.880><c> um</c>

02:24:21.269 --> 02:24:21.279 align:start position:0%
warm-up region um
 

02:24:21.279 --> 02:24:22.750 align:start position:0%
warm-up region um
this<02:24:21.399><c> is</c><02:24:21.600><c> the</c><02:24:21.920><c> region</c><02:24:22.319><c> after</c><02:24:22.520><c> the</c>

02:24:22.750 --> 02:24:22.760 align:start position:0%
this is the region after the
 

02:24:22.760 --> 02:24:24.550 align:start position:0%
this is the region after the
optimization<02:24:23.760><c> and</c><02:24:23.880><c> then</c><02:24:24.000><c> this</c><02:24:24.120><c> is</c><02:24:24.200><c> the</c><02:24:24.319><c> region</c>

02:24:24.550 --> 02:24:24.560 align:start position:0%
optimization and then this is the region
 

02:24:24.560 --> 02:24:26.349 align:start position:0%
optimization and then this is the region
sort<02:24:24.720><c> of</c><02:24:24.880><c> in</c><02:24:25.040><c> between</c><02:24:25.760><c> and</c><02:24:25.880><c> this</c><02:24:26.000><c> is</c><02:24:26.080><c> where</c><02:24:26.200><c> I</c>

02:24:26.349 --> 02:24:26.359 align:start position:0%
sort of in between and this is where I
 

02:24:26.359 --> 02:24:28.389 align:start position:0%
sort of in between and this is where I
calculate<02:24:26.760><c> the</c><02:24:26.960><c> cosine</c><02:24:27.880><c> learning</c><02:24:28.160><c> rate</c>

02:24:28.389 --> 02:24:28.399 align:start position:0%
calculate the cosine learning rate
 

02:24:28.399 --> 02:24:29.830 align:start position:0%
calculate the cosine learning rate
schedule<02:24:29.040><c> and</c><02:24:29.120><c> you</c><02:24:29.200><c> can</c><02:24:29.359><c> step</c><02:24:29.560><c> through</c><02:24:29.720><c> this</c>

02:24:29.830 --> 02:24:29.840 align:start position:0%
schedule and you can step through this
 

02:24:29.840 --> 02:24:31.990 align:start position:0%
schedule and you can step through this
in<02:24:29.960><c> detail</c><02:24:30.279><c> if</c><02:24:30.359><c> you'd</c><02:24:30.560><c> like</c><02:24:31.399><c> uh</c><02:24:31.520><c> but</c><02:24:31.720><c> this</c><02:24:31.800><c> is</c>

02:24:31.990 --> 02:24:32.000 align:start position:0%
in detail if you'd like uh but this is
 

02:24:32.000 --> 02:24:33.830 align:start position:0%
in detail if you'd like uh but this is
basically<02:24:32.399><c> implementing</c><02:24:32.960><c> this</c>

02:24:33.830 --> 02:24:33.840 align:start position:0%
basically implementing this
 

02:24:33.840 --> 02:24:38.309 align:start position:0%
basically implementing this
curve<02:24:34.840><c> and</c><02:24:35.560><c> I</c><02:24:35.720><c> ran</c><02:24:36.000><c> this</c><02:24:36.160><c> already</c><02:24:37.040><c> and</c><02:24:38.040><c> this</c><02:24:38.120><c> is</c>

02:24:38.309 --> 02:24:38.319 align:start position:0%
curve and I ran this already and this is
 

02:24:38.319 --> 02:24:40.590 align:start position:0%
curve and I ran this already and this is
what<02:24:38.479><c> that</c><02:24:38.640><c> looks</c>

02:24:40.590 --> 02:24:40.600 align:start position:0%
what that looks
 

02:24:40.600 --> 02:24:45.269 align:start position:0%
what that looks
like<02:24:41.600><c> um</c><02:24:42.000><c> so</c><02:24:42.240><c> when</c><02:24:42.399><c> we</c><02:24:42.560><c> now</c><02:24:42.800><c> run</c><02:24:43.399><c> we</c><02:24:43.600><c> start</c><02:24:44.279><c> at</c>

02:24:45.269 --> 02:24:45.279 align:start position:0%
like um so when we now run we start at
 

02:24:45.279 --> 02:24:47.790 align:start position:0%
like um so when we now run we start at
um<02:24:45.640><c> some</c><02:24:46.080><c> very</c><02:24:46.359><c> low</c><02:24:46.600><c> number</c><02:24:47.200><c> now</c><02:24:47.399><c> note</c><02:24:47.560><c> that</c><02:24:47.680><c> we</c>

02:24:47.790 --> 02:24:47.800 align:start position:0%
um some very low number now note that we
 

02:24:47.800 --> 02:24:49.469 align:start position:0%
um some very low number now note that we
don't<02:24:47.920><c> start</c><02:24:48.200><c> exactly</c><02:24:48.600><c> at</c><02:24:48.800><c> zero</c><02:24:49.200><c> because</c><02:24:49.359><c> that</c>

02:24:49.469 --> 02:24:49.479 align:start position:0%
don't start exactly at zero because that
 

02:24:49.479 --> 02:24:50.790 align:start position:0%
don't start exactly at zero because that
would<02:24:49.600><c> be</c><02:24:49.680><c> not</c><02:24:49.800><c> useful</c><02:24:50.120><c> to</c><02:24:50.399><c> update</c><02:24:50.640><c> with</c><02:24:50.720><c> a</c>

02:24:50.790 --> 02:24:50.800 align:start position:0%
would be not useful to update with a
 

02:24:50.800 --> 02:24:52.590 align:start position:0%
would be not useful to update with a
learning<02:24:51.040><c> rate</c><02:24:51.200><c> of</c><02:24:51.359><c> zero</c><02:24:52.040><c> that's</c><02:24:52.240><c> why</c><02:24:52.399><c> there's</c>

02:24:52.590 --> 02:24:52.600 align:start position:0%
learning rate of zero that's why there's
 

02:24:52.600 --> 02:24:54.910 align:start position:0%
learning rate of zero that's why there's
an<02:24:52.920><c> it+</c><02:24:53.560><c> one</c><02:24:54.000><c> so</c><02:24:54.200><c> that</c><02:24:54.319><c> on</c><02:24:54.399><c> the</c><02:24:54.560><c> zeroth</c>

02:24:54.910 --> 02:24:54.920 align:start position:0%
an it+ one so that on the zeroth
 

02:24:54.920 --> 02:24:57.349 align:start position:0%
an it+ one so that on the zeroth
iteration<02:24:55.600><c> we</c><02:24:55.720><c> are</c><02:24:56.000><c> not</c><02:24:56.319><c> using</c><02:24:56.680><c> exactly</c><02:24:57.080><c> zero</c>

02:24:57.349 --> 02:24:57.359 align:start position:0%
iteration we are not using exactly zero
 

02:24:57.359 --> 02:24:59.670 align:start position:0%
iteration we are not using exactly zero
we're<02:24:57.479><c> using</c><02:24:57.760><c> something</c><02:24:58.000><c> very</c><02:24:58.200><c> very</c><02:24:58.560><c> low</c><02:24:59.560><c> then</c>

02:24:59.670 --> 02:24:59.680 align:start position:0%
we're using something very very low then
 

02:24:59.680 --> 02:25:02.190 align:start position:0%
we're using something very very low then
we<02:24:59.880><c> linearly</c><02:25:00.560><c> warm</c><02:25:00.880><c> up</c><02:25:01.080><c> to</c><02:25:01.560><c> maximum</c><02:25:01.880><c> learning</c>

02:25:02.190 --> 02:25:02.200 align:start position:0%
we linearly warm up to maximum learning
 

02:25:02.200 --> 02:25:04.150 align:start position:0%
we linearly warm up to maximum learning
rate<02:25:02.439><c> which</c><02:25:02.560><c> in</c><02:25:02.680><c> this</c><02:25:02.800><c> case</c><02:25:02.960><c> was</c><02:25:03.120><c> 34</c><02:25:03.960><c> when</c><02:25:04.040><c> I</c>

02:25:04.150 --> 02:25:04.160 align:start position:0%
rate which in this case was 34 when I
 

02:25:04.160 --> 02:25:07.590 align:start position:0%
rate which in this case was 34 when I
ran<02:25:04.359><c> it</c><02:25:04.840><c> but</c><02:25:05.000><c> now</c><02:25:05.200><c> would</c><02:25:05.319><c> be</c><02:25:05.439><c> 6</c><02:25:06.000><c> E4</c><02:25:07.000><c> and</c><02:25:07.160><c> then</c><02:25:07.399><c> it</c>

02:25:07.590 --> 02:25:07.600 align:start position:0%
ran it but now would be 6 E4 and then it
 

02:25:07.600 --> 02:25:11.830 align:start position:0%
ran it but now would be 6 E4 and then it
starts<02:25:07.920><c> to</c><02:25:08.279><c> decay</c><02:25:09.279><c> all</c><02:25:09.439><c> the</c><02:25:09.560><c> way</c><02:25:09.760><c> down</c><02:25:10.000><c> to</c><02:25:10.920><c> um</c><02:25:11.520><c> 3</c>

02:25:11.830 --> 02:25:11.840 align:start position:0%
starts to decay all the way down to um 3
 

02:25:11.840 --> 02:25:14.349 align:start position:0%
starts to decay all the way down to um 3
E5<02:25:12.840><c> which</c><02:25:12.960><c> was</c><02:25:13.160><c> at</c><02:25:13.279><c> the</c><02:25:13.439><c> time</c><02:25:13.680><c> 10%</c><02:25:14.120><c> of</c><02:25:14.200><c> the</c>

02:25:14.349 --> 02:25:14.359 align:start position:0%
E5 which was at the time 10% of the
 

02:25:14.359 --> 02:25:16.590 align:start position:0%
E5 which was at the time 10% of the
original<02:25:14.640><c> learning</c><02:25:14.960><c> rate</c><02:25:15.960><c> now</c><02:25:16.160><c> one</c><02:25:16.319><c> thing</c><02:25:16.479><c> we</c>

02:25:16.590 --> 02:25:16.600 align:start position:0%
original learning rate now one thing we
 

02:25:16.600 --> 02:25:18.269 align:start position:0%
original learning rate now one thing we
are<02:25:16.760><c> not</c><02:25:16.960><c> following</c><02:25:17.439><c> exactly</c><02:25:17.880><c> is</c><02:25:18.000><c> that</c><02:25:18.120><c> they</c>

02:25:18.269 --> 02:25:18.279 align:start position:0%
are not following exactly is that they
 

02:25:18.279 --> 02:25:21.309 align:start position:0%
are not following exactly is that they
mentioned<02:25:19.040><c> that</c><02:25:20.040><c> um</c>

02:25:21.309 --> 02:25:21.319 align:start position:0%
mentioned that um
 

02:25:21.319 --> 02:25:23.670 align:start position:0%
mentioned that um
let<02:25:21.439><c> me</c><02:25:21.600><c> see</c><02:25:21.760><c> if</c><02:25:21.880><c> I</c><02:25:21.960><c> can</c><02:25:22.120><c> find</c><02:25:22.319><c> it</c>

02:25:23.670 --> 02:25:23.680 align:start position:0%
let me see if I can find it
 

02:25:23.680 --> 02:25:26.030 align:start position:0%
let me see if I can find it
again<02:25:24.680><c> we're</c><02:25:24.920><c> not</c><02:25:25.160><c> exactly</c><02:25:25.520><c> following</c><02:25:25.920><c> what</c>

02:25:26.030 --> 02:25:26.040 align:start position:0%
again we're not exactly following what
 

02:25:26.040 --> 02:25:28.510 align:start position:0%
again we're not exactly following what
they<02:25:26.240><c> did</c>

02:25:28.510 --> 02:25:28.520 align:start position:0%
they did
 

02:25:28.520 --> 02:25:30.910 align:start position:0%
they did
because<02:25:29.520><c> uh</c><02:25:29.600><c> they</c><02:25:29.720><c> mentioned</c><02:25:30.160><c> that</c><02:25:30.560><c> their</c>

02:25:30.910 --> 02:25:30.920 align:start position:0%
because uh they mentioned that their
 

02:25:30.920 --> 02:25:33.230 align:start position:0%
because uh they mentioned that their
training<02:25:31.279><c> Horizon</c><02:25:31.640><c> is</c><02:25:31.760><c> 300</c><02:25:32.160><c> billion</c><02:25:32.479><c> tokens</c>

02:25:33.230 --> 02:25:33.240 align:start position:0%
training Horizon is 300 billion tokens
 

02:25:33.240 --> 02:25:34.990 align:start position:0%
training Horizon is 300 billion tokens
and<02:25:33.399><c> they</c><02:25:33.520><c> come</c><02:25:33.720><c> down</c><02:25:33.880><c> to</c><02:25:34.040><c> 10%</c><02:25:34.479><c> of</c><02:25:34.560><c> the</c><02:25:34.720><c> initial</c>

02:25:34.990 --> 02:25:35.000 align:start position:0%
and they come down to 10% of the initial
 

02:25:35.000 --> 02:25:37.670 align:start position:0%
and they come down to 10% of the initial
learning<02:25:35.359><c> rate</c><02:25:35.720><c> of</c><02:25:35.960><c> at</c><02:25:36.279><c> 260</c><02:25:36.800><c> billion</c><02:25:37.439><c> and</c><02:25:37.560><c> then</c>

02:25:37.670 --> 02:25:37.680 align:start position:0%
learning rate of at 260 billion and then
 

02:25:37.680 --> 02:25:41.110 align:start position:0%
learning rate of at 260 billion and then
they<02:25:37.840><c> train</c><02:25:38.439><c> after</c><02:25:39.040><c> 260</c><02:25:39.640><c> with</c><02:25:39.880><c> 10%</c><02:25:40.880><c> so</c>

02:25:41.110 --> 02:25:41.120 align:start position:0%
they train after 260 with 10% so
 

02:25:41.120 --> 02:25:43.030 align:start position:0%
they train after 260 with 10% so
basically<02:25:41.520><c> their</c><02:25:41.800><c> Decay</c><02:25:42.240><c> time</c><02:25:42.479><c> is</c><02:25:42.640><c> less</c><02:25:42.880><c> than</c>

02:25:43.030 --> 02:25:43.040 align:start position:0%
basically their Decay time is less than
 

02:25:43.040 --> 02:25:45.230 align:start position:0%
basically their Decay time is less than
the<02:25:43.200><c> max</c><02:25:43.560><c> steps</c><02:25:44.000><c> time</c><02:25:44.520><c> whereas</c><02:25:44.880><c> for</c><02:25:45.080><c> us</c>

02:25:45.230 --> 02:25:45.240 align:start position:0%
the max steps time whereas for us
 

02:25:45.240 --> 02:25:47.510 align:start position:0%
the max steps time whereas for us
they're<02:25:45.560><c> exactly</c><02:25:45.960><c> equal</c><02:25:46.640><c> so</c><02:25:46.800><c> it's</c><02:25:46.960><c> not</c>

02:25:47.510 --> 02:25:47.520 align:start position:0%
they're exactly equal so it's not
 

02:25:47.520 --> 02:25:50.990 align:start position:0%
they're exactly equal so it's not
exactly<02:25:47.960><c> faithful</c><02:25:48.960><c> but</c><02:25:49.240><c> it's</c><02:25:49.640><c> um</c><02:25:50.560><c> it's</c><02:25:50.680><c> an</c>

02:25:50.990 --> 02:25:51.000 align:start position:0%
exactly faithful but it's um it's an
 

02:25:51.000 --> 02:25:53.710 align:start position:0%
exactly faithful but it's um it's an
okay<02:25:51.640><c> um</c><02:25:52.439><c> this</c><02:25:52.560><c> is</c><02:25:52.760><c> okay</c><02:25:52.920><c> for</c><02:25:53.120><c> us</c><02:25:53.319><c> and</c><02:25:53.439><c> for</c><02:25:53.560><c> our</c>

02:25:53.710 --> 02:25:53.720 align:start position:0%
okay um this is okay for us and for our
 

02:25:53.720 --> 02:25:57.349 align:start position:0%
okay um this is okay for us and for our
purposes<02:25:54.160><c> right</c><02:25:54.319><c> now</c><02:25:55.240><c> and</c><02:25:56.080><c> um</c><02:25:57.080><c> we're</c><02:25:57.240><c> just</c>

02:25:57.349 --> 02:25:57.359 align:start position:0%
purposes right now and um we're just
 

02:25:57.359 --> 02:25:58.870 align:start position:0%
purposes right now and um we're just
going<02:25:57.439><c> to</c><02:25:57.560><c> use</c><02:25:57.760><c> this</c><02:25:58.279><c> ourselves</c><02:25:58.680><c> I</c><02:25:58.760><c> don't</c>

02:25:58.870 --> 02:25:58.880 align:start position:0%
going to use this ourselves I don't
 

02:25:58.880 --> 02:26:00.110 align:start position:0%
going to use this ourselves I don't
think<02:25:59.000><c> it</c><02:25:59.120><c> makes</c><02:25:59.359><c> too</c><02:25:59.640><c> too</c><02:25:59.800><c> big</c><02:25:59.920><c> of</c><02:26:00.040><c> a</c>

02:26:00.110 --> 02:26:00.120 align:start position:0%
think it makes too too big of a
 

02:26:00.120 --> 02:26:02.110 align:start position:0%
think it makes too too big of a
difference<02:26:00.439><c> honestly</c><02:26:01.359><c> I</c><02:26:01.439><c> should</c><02:26:01.640><c> point</c><02:26:01.840><c> out</c>

02:26:02.110 --> 02:26:02.120 align:start position:0%
difference honestly I should point out
 

02:26:02.120 --> 02:26:04.309 align:start position:0%
difference honestly I should point out
that<02:26:02.800><c> what</c><02:26:02.960><c> learning</c><02:26:03.240><c> rate</c><02:26:03.479><c> schedule</c><02:26:03.800><c> you</c><02:26:03.960><c> use</c>

02:26:04.309 --> 02:26:04.319 align:start position:0%
that what learning rate schedule you use
 

02:26:04.319 --> 02:26:05.910 align:start position:0%
that what learning rate schedule you use
is<02:26:04.720><c> totally</c><02:26:05.000><c> up</c><02:26:05.160><c> to</c><02:26:05.279><c> you</c><02:26:05.520><c> there's</c><02:26:05.720><c> many</c>

02:26:05.910 --> 02:26:05.920 align:start position:0%
is totally up to you there's many
 

02:26:05.920 --> 02:26:08.950 align:start position:0%
is totally up to you there's many
different<02:26:06.279><c> types</c><02:26:07.200><c> um</c><02:26:08.000><c> coign</c><02:26:08.359><c> learning</c><02:26:08.640><c> rate</c>

02:26:08.950 --> 02:26:08.960 align:start position:0%
different types um coign learning rate
 

02:26:08.960 --> 02:26:10.710 align:start position:0%
different types um coign learning rate
has<02:26:09.080><c> been</c><02:26:09.319><c> popularized</c><02:26:09.880><c> a</c><02:26:09.960><c> lot</c><02:26:10.080><c> by</c><02:26:10.200><c> gpt2</c><02:26:10.640><c> and</c>

02:26:10.710 --> 02:26:10.720 align:start position:0%
has been popularized a lot by gpt2 and
 

02:26:10.720 --> 02:26:12.469 align:start position:0%
has been popularized a lot by gpt2 and
gpt3<02:26:11.439><c> but</c><02:26:11.600><c> people</c><02:26:11.800><c> have</c><02:26:11.920><c> come</c><02:26:12.080><c> up</c><02:26:12.200><c> with</c><02:26:12.319><c> all</c>

02:26:12.469 --> 02:26:12.479 align:start position:0%
gpt3 but people have come up with all
 

02:26:12.479 --> 02:26:14.150 align:start position:0%
gpt3 but people have come up with all
kinds<02:26:12.680><c> of</c><02:26:13.160><c> uh</c><02:26:13.279><c> other</c><02:26:13.479><c> learning</c><02:26:13.800><c> rate</c>

02:26:14.150 --> 02:26:14.160 align:start position:0%
kinds of uh other learning rate
 

02:26:14.160 --> 02:26:16.110 align:start position:0%
kinds of uh other learning rate
schedules<02:26:15.160><c> um</c><02:26:15.359><c> and</c><02:26:15.479><c> this</c><02:26:15.560><c> is</c><02:26:15.680><c> kind</c><02:26:15.800><c> of</c><02:26:15.880><c> like</c><02:26:16.000><c> an</c>

02:26:16.110 --> 02:26:16.120 align:start position:0%
schedules um and this is kind of like an
 

02:26:16.120 --> 02:26:18.150 align:start position:0%
schedules um and this is kind of like an
active<02:26:16.399><c> area</c><02:26:16.680><c> of</c><02:26:17.040><c> uh</c><02:26:17.160><c> research</c><02:26:17.680><c> as</c><02:26:17.800><c> to</c><02:26:18.000><c> which</c>

02:26:18.150 --> 02:26:18.160 align:start position:0%
active area of uh research as to which
 

02:26:18.160 --> 02:26:20.710 align:start position:0%
active area of uh research as to which
one<02:26:18.319><c> is</c><02:26:18.760><c> the</c><02:26:18.920><c> most</c><02:26:19.240><c> effective</c><02:26:19.800><c> at</c><02:26:20.000><c> train</c><02:26:20.520><c> these</c>

02:26:20.710 --> 02:26:20.720 align:start position:0%
one is the most effective at train these
 

02:26:20.720 --> 02:26:23.550 align:start position:0%
one is the most effective at train these
networks<02:26:21.720><c> okay</c><02:26:21.920><c> next</c><02:26:22.160><c> up</c><02:26:22.840><c> the</c><02:26:23.000><c> paper</c><02:26:23.279><c> talks</c>

02:26:23.550 --> 02:26:23.560 align:start position:0%
networks okay next up the paper talks
 

02:26:23.560 --> 02:26:26.870 align:start position:0%
networks okay next up the paper talks
about<02:26:24.120><c> the</c><02:26:24.560><c> gradual</c><02:26:25.080><c> batch</c><02:26:25.479><c> size</c><02:26:25.960><c> increase</c><02:26:26.680><c> so</c>

02:26:26.870 --> 02:26:26.880 align:start position:0%
about the gradual batch size increase so
 

02:26:26.880 --> 02:26:29.269 align:start position:0%
about the gradual batch size increase so
there's<02:26:27.040><c> a</c><02:26:27.279><c> ramp</c><02:26:27.840><c> on</c><02:26:28.080><c> the</c><02:26:28.319><c> batch</c><02:26:28.640><c> size</c><02:26:29.000><c> that</c><02:26:29.080><c> is</c>

02:26:29.269 --> 02:26:29.279 align:start position:0%
there's a ramp on the batch size that is
 

02:26:29.279 --> 02:26:31.190 align:start position:0%
there's a ramp on the batch size that is
linear<02:26:30.080><c> and</c><02:26:30.200><c> you</c><02:26:30.279><c> start</c><02:26:30.560><c> with</c><02:26:30.720><c> very</c><02:26:30.920><c> small</c>

02:26:31.190 --> 02:26:31.200 align:start position:0%
linear and you start with very small
 

02:26:31.200 --> 02:26:32.950 align:start position:0%
linear and you start with very small
batch<02:26:31.479><c> size</c><02:26:31.840><c> and</c><02:26:31.920><c> you</c><02:26:32.040><c> ramp</c><02:26:32.359><c> up</c><02:26:32.479><c> to</c><02:26:32.640><c> a</c><02:26:32.760><c> big</c>

02:26:32.950 --> 02:26:32.960 align:start position:0%
batch size and you ramp up to a big
 

02:26:32.960 --> 02:26:35.190 align:start position:0%
batch size and you ramp up to a big
batch<02:26:33.240><c> size</c><02:26:33.479><c> over</c><02:26:33.680><c> time</c><02:26:34.640><c> uh</c><02:26:34.760><c> we're</c><02:26:34.880><c> going</c><02:26:35.040><c> to</c>

02:26:35.190 --> 02:26:35.200 align:start position:0%
batch size over time uh we're going to
 

02:26:35.200 --> 02:26:36.429 align:start position:0%
batch size over time uh we're going to
actually<02:26:35.439><c> skip</c><02:26:35.760><c> this</c><02:26:35.920><c> and</c><02:26:36.040><c> we're</c><02:26:36.160><c> not</c><02:26:36.319><c> going</c>

02:26:36.429 --> 02:26:36.439 align:start position:0%
actually skip this and we're not going
 

02:26:36.439 --> 02:26:38.790 align:start position:0%
actually skip this and we're not going
to<02:26:36.800><c> work</c><02:26:37.040><c> with</c><02:26:37.160><c> it</c><02:26:37.800><c> and</c><02:26:38.040><c> the</c><02:26:38.160><c> reason</c><02:26:38.439><c> I</c><02:26:38.560><c> don't</c>

02:26:38.790 --> 02:26:38.800 align:start position:0%
to work with it and the reason I don't
 

02:26:38.800 --> 02:26:41.030 align:start position:0%
to work with it and the reason I don't
love<02:26:39.000><c> to</c><02:26:39.120><c> use</c><02:26:39.279><c> it</c><02:26:39.560><c> is</c><02:26:39.800><c> that</c><02:26:40.359><c> it</c><02:26:40.520><c> complicates</c><02:26:40.960><c> a</c>

02:26:41.030 --> 02:26:41.040 align:start position:0%
love to use it is that it complicates a
 

02:26:41.040 --> 02:26:42.469 align:start position:0%
love to use it is that it complicates a
lot<02:26:41.160><c> of</c><02:26:41.240><c> the</c><02:26:41.359><c> arithmetic</c><02:26:41.960><c> because</c><02:26:42.160><c> you</c><02:26:42.279><c> are</c>

02:26:42.469 --> 02:26:42.479 align:start position:0%
lot of the arithmetic because you are
 

02:26:42.479 --> 02:26:43.670 align:start position:0%
lot of the arithmetic because you are
changing<02:26:42.840><c> the</c><02:26:42.960><c> number</c><02:26:43.120><c> of</c><02:26:43.240><c> tokens</c><02:26:43.560><c> that</c>

02:26:43.670 --> 02:26:43.680 align:start position:0%
changing the number of tokens that
 

02:26:43.680 --> 02:26:45.230 align:start position:0%
changing the number of tokens that
you're<02:26:43.880><c> processing</c><02:26:44.359><c> at</c><02:26:44.520><c> every</c><02:26:44.680><c> single</c><02:26:45.000><c> step</c>

02:26:45.230 --> 02:26:45.240 align:start position:0%
you're processing at every single step
 

02:26:45.240 --> 02:26:47.590 align:start position:0%
you're processing at every single step
of<02:26:45.319><c> the</c><02:26:45.640><c> optimization</c><02:26:46.640><c> and</c><02:26:46.920><c> I</c><02:26:47.040><c> like</c><02:26:47.200><c> to</c><02:26:47.359><c> keep</c>

02:26:47.590 --> 02:26:47.600 align:start position:0%
of the optimization and I like to keep
 

02:26:47.600 --> 02:26:49.870 align:start position:0%
of the optimization and I like to keep
that<02:26:47.800><c> math</c><02:26:48.120><c> very</c><02:26:48.319><c> very</c><02:26:48.520><c> simple</c><02:26:49.319><c> also</c><02:26:49.560><c> my</c>

02:26:49.870 --> 02:26:49.880 align:start position:0%
that math very very simple also my
 

02:26:49.880 --> 02:26:50.750 align:start position:0%
that math very very simple also my
understanding<02:26:50.040><c> is</c><02:26:50.120><c> that</c><02:26:50.279><c> that</c><02:26:50.359><c> this</c><02:26:50.479><c> is</c><02:26:50.600><c> not</c>

02:26:50.750 --> 02:26:50.760 align:start position:0%
understanding is that that this is not
 

02:26:50.760 --> 02:26:54.269 align:start position:0%
understanding is that that this is not
like<02:26:50.880><c> a</c><02:26:51.080><c> major</c><02:26:52.000><c> um</c><02:26:52.560><c> Improvement</c><02:26:53.560><c> and</c><02:26:53.720><c> also</c><02:26:53.960><c> my</c>

02:26:54.269 --> 02:26:54.279 align:start position:0%
like a major um Improvement and also my
 

02:26:54.279 --> 02:26:55.510 align:start position:0%
like a major um Improvement and also my
understanding<02:26:54.479><c> is</c><02:26:54.600><c> that</c><02:26:54.760><c> this</c><02:26:54.840><c> is</c><02:26:55.000><c> not</c><02:26:55.279><c> like</c>

02:26:55.510 --> 02:26:55.520 align:start position:0%
understanding is that this is not like
 

02:26:55.520 --> 02:26:57.710 align:start position:0%
understanding is that this is not like
an<02:26:55.800><c> algorithmic</c><02:26:56.680><c> optimization</c><02:26:57.279><c> Improvement</c>

02:26:57.710 --> 02:26:57.720 align:start position:0%
an algorithmic optimization Improvement
 

02:26:57.720 --> 02:26:59.550 align:start position:0%
an algorithmic optimization Improvement
it's<02:26:57.800><c> more</c><02:26:57.960><c> of</c><02:26:58.080><c> a</c><02:26:58.279><c> systems</c><02:26:58.760><c> and</c><02:26:59.000><c> speed</c>

02:26:59.550 --> 02:26:59.560 align:start position:0%
it's more of a systems and speed
 

02:26:59.560 --> 02:27:02.309 align:start position:0%
it's more of a systems and speed
Improvement<02:27:00.560><c> and</c><02:27:00.760><c> roughly</c><02:27:01.080><c> speaking</c><02:27:01.520><c> this</c><02:27:01.600><c> is</c>

02:27:02.309 --> 02:27:02.319 align:start position:0%
Improvement and roughly speaking this is
 

02:27:02.319 --> 02:27:05.550 align:start position:0%
Improvement and roughly speaking this is
because<02:27:03.319><c> uh</c><02:27:03.520><c> in</c><02:27:03.640><c> the</c><02:27:03.760><c> early</c><02:27:04.040><c> stages</c><02:27:04.319><c> of</c><02:27:04.439><c> the</c>

02:27:05.550 --> 02:27:05.560 align:start position:0%
because uh in the early stages of the
 

02:27:05.560 --> 02:27:07.630 align:start position:0%
because uh in the early stages of the
optimization<02:27:06.560><c> uh</c><02:27:06.720><c> again</c><02:27:06.920><c> the</c><02:27:07.000><c> model</c><02:27:07.240><c> is</c><02:27:07.359><c> in</c><02:27:07.439><c> a</c>

02:27:07.630 --> 02:27:07.640 align:start position:0%
optimization uh again the model is in a
 

02:27:07.640 --> 02:27:10.670 align:start position:0%
optimization uh again the model is in a
very<02:27:08.359><c> atypical</c><02:27:09.359><c> setting</c><02:27:10.080><c> and</c><02:27:10.240><c> mostly</c><02:27:10.560><c> what</c>

02:27:10.670 --> 02:27:10.680 align:start position:0%
very atypical setting and mostly what
 

02:27:10.680 --> 02:27:13.150 align:start position:0%
very atypical setting and mostly what
you're<02:27:10.840><c> learning</c><02:27:11.439><c> is</c><02:27:11.800><c> that</c><02:27:12.279><c> um</c><02:27:12.720><c> you're</c><02:27:12.920><c> mostly</c>

02:27:13.150 --> 02:27:13.160 align:start position:0%
you're learning is that um you're mostly
 

02:27:13.160 --> 02:27:15.389 align:start position:0%
you're learning is that um you're mostly
learning<02:27:13.439><c> to</c><02:27:13.640><c> ignore</c><02:27:13.960><c> the</c><02:27:14.200><c> tokens</c><02:27:15.120><c> uh</c><02:27:15.240><c> that</c>

02:27:15.389 --> 02:27:15.399 align:start position:0%
learning to ignore the tokens uh that
 

02:27:15.399 --> 02:27:16.790 align:start position:0%
learning to ignore the tokens uh that
don't<02:27:15.600><c> come</c><02:27:15.760><c> up</c><02:27:15.880><c> in</c><02:27:15.960><c> your</c><02:27:16.040><c> training</c><02:27:16.319><c> set</c><02:27:16.640><c> very</c>

02:27:16.790 --> 02:27:16.800 align:start position:0%
don't come up in your training set very
 

02:27:16.800 --> 02:27:19.269 align:start position:0%
don't come up in your training set very
often<02:27:17.200><c> you're</c><02:27:17.359><c> learning</c><02:27:17.760><c> very</c><02:27:18.000><c> simple</c><02:27:18.479><c> biases</c>

02:27:19.269 --> 02:27:19.279 align:start position:0%
often you're learning very simple biases
 

02:27:19.279 --> 02:27:23.269 align:start position:0%
often you're learning very simple biases
and<02:27:19.640><c> and</c><02:27:20.479><c> that</c><02:27:20.600><c> kind</c><02:27:20.720><c> of</c><02:27:20.800><c> a</c><02:27:20.960><c> thing</c><02:27:21.800><c> and</c><02:27:22.279><c> so</c>

02:27:23.269 --> 02:27:23.279 align:start position:0%
and and that kind of a thing and so
 

02:27:23.279 --> 02:27:24.510 align:start position:0%
and and that kind of a thing and so
every<02:27:23.520><c> single</c><02:27:23.840><c> example</c><02:27:24.160><c> that</c><02:27:24.240><c> you</c><02:27:24.359><c> put</c>

02:27:24.510 --> 02:27:24.520 align:start position:0%
every single example that you put
 

02:27:24.520 --> 02:27:26.230 align:start position:0%
every single example that you put
through<02:27:24.720><c> your</c><02:27:24.880><c> network</c><02:27:25.600><c> is</c><02:27:25.800><c> basically</c><02:27:26.120><c> just</c>

02:27:26.230 --> 02:27:26.240 align:start position:0%
through your network is basically just
 

02:27:26.240 --> 02:27:28.349 align:start position:0%
through your network is basically just
telling<02:27:26.560><c> you</c><02:27:27.200><c> use</c><02:27:27.479><c> these</c><02:27:27.680><c> tokens</c><02:27:28.000><c> and</c><02:27:28.160><c> don't</c>

02:27:28.349 --> 02:27:28.359 align:start position:0%
telling you use these tokens and don't
 

02:27:28.359 --> 02:27:30.150 align:start position:0%
telling you use these tokens and don't
use<02:27:28.520><c> these</c><02:27:28.720><c> tokens</c><02:27:29.439><c> and</c><02:27:29.520><c> so</c><02:27:29.640><c> the</c><02:27:29.760><c> gradients</c>

02:27:30.150 --> 02:27:30.160 align:start position:0%
use these tokens and so the gradients
 

02:27:30.160 --> 02:27:31.590 align:start position:0%
use these tokens and so the gradients
from<02:27:30.359><c> every</c><02:27:30.520><c> single</c><02:27:30.800><c> example</c><02:27:31.120><c> are</c><02:27:31.279><c> actually</c>

02:27:31.590 --> 02:27:31.600 align:start position:0%
from every single example are actually
 

02:27:31.600 --> 02:27:33.630 align:start position:0%
from every single example are actually
extremely<02:27:32.160><c> highly</c><02:27:32.560><c> correlated</c><02:27:33.240><c> they</c><02:27:33.359><c> all</c>

02:27:33.630 --> 02:27:33.640 align:start position:0%
extremely highly correlated they all
 

02:27:33.640 --> 02:27:36.349 align:start position:0%
extremely highly correlated they all
look<02:27:33.960><c> roughly</c><02:27:34.399><c> the</c><02:27:34.560><c> same</c><02:27:35.120><c> in</c><02:27:35.240><c> the</c><02:27:35.640><c> in</c><02:27:35.760><c> the</c><02:27:35.960><c> OR</c>

02:27:36.349 --> 02:27:36.359 align:start position:0%
look roughly the same in the in the OR
 

02:27:36.359 --> 02:27:38.030 align:start position:0%
look roughly the same in the in the OR
original<02:27:36.720><c> parts</c><02:27:36.920><c> of</c><02:27:37.000><c> the</c><02:27:37.120><c> optimization</c>

02:27:38.030 --> 02:27:38.040 align:start position:0%
original parts of the optimization
 

02:27:38.040 --> 02:27:38.990 align:start position:0%
original parts of the optimization
because<02:27:38.240><c> they're</c><02:27:38.399><c> all</c><02:27:38.520><c> just</c><02:27:38.640><c> telling</c><02:27:38.880><c> you</c>

02:27:38.990 --> 02:27:39.000 align:start position:0%
because they're all just telling you
 

02:27:39.000 --> 02:27:40.510 align:start position:0%
because they're all just telling you
that<02:27:39.160><c> these</c><02:27:39.319><c> tokens</c><02:27:39.640><c> don't</c><02:27:39.880><c> appear</c><02:27:40.240><c> and</c><02:27:40.359><c> these</c>

02:27:40.510 --> 02:27:40.520 align:start position:0%
that these tokens don't appear and these
 

02:27:40.520 --> 02:27:42.990 align:start position:0%
that these tokens don't appear and these
tokens<02:27:40.840><c> do</c><02:27:41.200><c> appear</c><02:27:42.200><c> and</c><02:27:42.279><c> so</c><02:27:42.560><c> because</c><02:27:42.800><c> the</c>

02:27:42.990 --> 02:27:43.000 align:start position:0%
tokens do appear and so because the
 

02:27:43.000 --> 02:27:45.110 align:start position:0%
tokens do appear and so because the
gradients<02:27:43.439><c> are</c><02:27:43.640><c> all</c><02:27:44.359><c> very</c><02:27:44.560><c> similar</c><02:27:45.040><c> and</c>

02:27:45.110 --> 02:27:45.120 align:start position:0%
gradients are all very similar and
 

02:27:45.120 --> 02:27:46.790 align:start position:0%
gradients are all very similar and
they're<02:27:45.319><c> highly</c><02:27:45.600><c> correlated</c><02:27:46.359><c> then</c><02:27:46.520><c> why</c><02:27:46.680><c> are</c>

02:27:46.790 --> 02:27:46.800 align:start position:0%
they're highly correlated then why are
 

02:27:46.800 --> 02:27:49.389 align:start position:0%
they're highly correlated then why are
you<02:27:46.960><c> doing</c><02:27:47.240><c> batch</c><02:27:47.520><c> sizes</c><02:27:47.920><c> of</c><02:27:48.160><c> like</c><02:27:48.399><c> Millions</c>

02:27:49.389 --> 02:27:49.399 align:start position:0%
you doing batch sizes of like Millions
 

02:27:49.399 --> 02:27:51.910 align:start position:0%
you doing batch sizes of like Millions
when<02:27:50.160><c> if</c><02:27:50.240><c> you</c><02:27:50.319><c> do</c><02:27:50.439><c> a</c><02:27:50.520><c> batch</c><02:27:50.760><c> size</c><02:27:50.920><c> of</c><02:27:51.040><c> 32k</c>

02:27:51.910 --> 02:27:51.920 align:start position:0%
when if you do a batch size of 32k
 

02:27:51.920 --> 02:27:53.349 align:start position:0%
when if you do a batch size of 32k
you're<02:27:52.200><c> basically</c><02:27:52.520><c> getting</c><02:27:52.760><c> the</c><02:27:52.880><c> exact</c><02:27:53.160><c> same</c>

02:27:53.349 --> 02:27:53.359 align:start position:0%
you're basically getting the exact same
 

02:27:53.359 --> 02:27:55.910 align:start position:0%
you're basically getting the exact same
gradient<02:27:53.840><c> early</c><02:27:54.120><c> on</c><02:27:54.399><c> in</c><02:27:54.520><c> the</c><02:27:54.760><c> training</c><02:27:55.760><c> and</c>

02:27:55.910 --> 02:27:55.920 align:start position:0%
gradient early on in the training and
 

02:27:55.920 --> 02:27:57.870 align:start position:0%
gradient early on in the training and
then<02:27:56.600><c> later</c><02:27:56.840><c> in</c><02:27:56.960><c> the</c><02:27:57.080><c> optimization</c><02:27:57.680><c> once</c>

02:27:57.870 --> 02:27:57.880 align:start position:0%
then later in the optimization once
 

02:27:57.880 --> 02:28:00.070 align:start position:0%
then later in the optimization once
you've<02:27:58.160><c> learned</c><02:27:58.439><c> all</c><02:27:58.600><c> the</c><02:27:58.800><c> simple</c><02:27:59.200><c> stuff</c>

02:28:00.070 --> 02:28:00.080 align:start position:0%
you've learned all the simple stuff
 

02:28:00.080 --> 02:28:01.670 align:start position:0%
you've learned all the simple stuff
that's<02:28:00.240><c> where</c><02:28:00.399><c> the</c><02:28:00.600><c> actual</c><02:28:00.880><c> work</c><02:28:01.160><c> starts</c><02:28:01.560><c> and</c>

02:28:01.670 --> 02:28:01.680 align:start position:0%
that's where the actual work starts and
 

02:28:01.680 --> 02:28:02.870 align:start position:0%
that's where the actual work starts and
that's<02:28:01.840><c> where</c><02:28:02.000><c> the</c><02:28:02.120><c> gradients</c><02:28:02.520><c> become</c><02:28:02.720><c> more</c>

02:28:02.870 --> 02:28:02.880 align:start position:0%
that's where the gradients become more
 

02:28:02.880 --> 02:28:04.910 align:start position:0%
that's where the gradients become more
decorrelated<02:28:03.560><c> per</c><02:28:03.760><c> examples</c><02:28:04.600><c> and</c><02:28:04.760><c> that's</c>

02:28:04.910 --> 02:28:04.920 align:start position:0%
decorrelated per examples and that's
 

02:28:04.920 --> 02:28:07.030 align:start position:0%
decorrelated per examples and that's
where<02:28:05.080><c> they</c><02:28:05.240><c> actually</c><02:28:05.880><c> offer</c><02:28:06.279><c> you</c><02:28:06.680><c> sort</c><02:28:06.880><c> of</c>

02:28:07.030 --> 02:28:07.040 align:start position:0%
where they actually offer you sort of
 

02:28:07.040 --> 02:28:10.830 align:start position:0%
where they actually offer you sort of
statistical<02:28:07.600><c> power</c><02:28:08.479><c> in</c><02:28:08.680><c> some</c><02:28:09.240><c> sense</c><02:28:10.240><c> um</c><02:28:10.680><c> so</c>

02:28:10.830 --> 02:28:10.840 align:start position:0%
statistical power in some sense um so
 

02:28:10.840 --> 02:28:12.309 align:start position:0%
statistical power in some sense um so
we're<02:28:11.040><c> going</c><02:28:11.120><c> to</c><02:28:11.399><c> skip</c><02:28:11.720><c> this</c><02:28:11.880><c> just</c><02:28:12.000><c> because</c><02:28:12.200><c> it</c>

02:28:12.309 --> 02:28:12.319 align:start position:0%
we're going to skip this just because it
 

02:28:12.319 --> 02:28:14.550 align:start position:0%
we're going to skip this just because it
kind<02:28:12.399><c> of</c><02:28:12.560><c> complicates</c><02:28:13.359><c> things</c><02:28:14.359><c> and</c><02:28:14.439><c> we're</c>

02:28:14.550 --> 02:28:14.560 align:start position:0%
kind of complicates things and we're
 

02:28:14.560 --> 02:28:15.590 align:start position:0%
kind of complicates things and we're
going<02:28:14.720><c> to</c><02:28:14.880><c> go</c>

02:28:15.590 --> 02:28:15.600 align:start position:0%
going to go
 

02:28:15.600 --> 02:28:18.469 align:start position:0%
going to go
to<02:28:16.600><c> uh</c><02:28:17.359><c> data</c><02:28:17.640><c> are</c><02:28:17.800><c> sampled</c><02:28:18.240><c> without</c>

02:28:18.469 --> 02:28:18.479 align:start position:0%
to uh data are sampled without
 

02:28:18.479 --> 02:28:21.630 align:start position:0%
to uh data are sampled without
replacement<02:28:18.920><c> during</c><02:28:19.160><c> training</c><02:28:20.399><c> um</c><02:28:21.040><c> so</c><02:28:21.399><c> until</c>

02:28:21.630 --> 02:28:21.640 align:start position:0%
replacement during training um so until
 

02:28:21.640 --> 02:28:23.630 align:start position:0%
replacement during training um so until
an<02:28:21.760><c> Epoch</c><02:28:22.080><c> boundary</c><02:28:22.399><c> is</c><02:28:22.520><c> reached</c><02:28:23.160><c> so</c><02:28:23.359><c> without</c>

02:28:23.630 --> 02:28:23.640 align:start position:0%
an Epoch boundary is reached so without
 

02:28:23.640 --> 02:28:24.950 align:start position:0%
an Epoch boundary is reached so without
replacement<02:28:24.120><c> means</c><02:28:24.359><c> that</c><02:28:24.479><c> they're</c><02:28:24.680><c> not</c>

02:28:24.950 --> 02:28:24.960 align:start position:0%
replacement means that they're not
 

02:28:24.960 --> 02:28:27.670 align:start position:0%
replacement means that they're not
sampling<02:28:25.479><c> from</c><02:28:25.680><c> some</c><02:28:25.920><c> fixed</c><02:28:26.279><c> pool</c><02:28:26.960><c> and</c><02:28:27.160><c> then</c>

02:28:27.670 --> 02:28:27.680 align:start position:0%
sampling from some fixed pool and then
 

02:28:27.680 --> 02:28:31.070 align:start position:0%
sampling from some fixed pool and then
uh<02:28:27.880><c> take</c><02:28:28.359><c> a</c><02:28:29.080><c> sequence</c><02:28:30.000><c> train</c><02:28:30.359><c> on</c><02:28:30.479><c> it</c><02:28:30.720><c> but</c><02:28:30.880><c> then</c>

02:28:31.070 --> 02:28:31.080 align:start position:0%
uh take a sequence train on it but then
 

02:28:31.080 --> 02:28:32.550 align:start position:0%
uh take a sequence train on it but then
also<02:28:31.479><c> like</c><02:28:31.720><c> return</c><02:28:31.880><c> the</c><02:28:32.040><c> sequence</c><02:28:32.319><c> to</c><02:28:32.439><c> the</c>

02:28:32.550 --> 02:28:32.560 align:start position:0%
also like return the sequence to the
 

02:28:32.560 --> 02:28:34.790 align:start position:0%
also like return the sequence to the
pool<02:28:33.160><c> they</c><02:28:33.279><c> are</c><02:28:33.520><c> exhausting</c><02:28:34.040><c> a</c><02:28:34.200><c> pool</c><02:28:34.560><c> so</c><02:28:34.680><c> when</c>

02:28:34.790 --> 02:28:34.800 align:start position:0%
pool they are exhausting a pool so when
 

02:28:34.800 --> 02:28:37.389 align:start position:0%
pool they are exhausting a pool so when
they<02:28:34.920><c> draw</c><02:28:35.160><c> a</c><02:28:35.319><c> sequence</c><02:28:36.279><c> it's</c><02:28:36.760><c> it's</c><02:28:37.000><c> gone</c>

02:28:37.389 --> 02:28:37.399 align:start position:0%
they draw a sequence it's it's gone
 

02:28:37.399 --> 02:28:39.630 align:start position:0%
they draw a sequence it's it's gone
until<02:28:37.680><c> the</c><02:28:37.800><c> next</c><02:28:38.000><c> Epoch</c><02:28:38.399><c> of</c><02:28:38.520><c> training</c><02:28:39.399><c> uh</c><02:28:39.479><c> so</c>

02:28:39.630 --> 02:28:39.640 align:start position:0%
until the next Epoch of training uh so
 

02:28:39.640 --> 02:28:41.110 align:start position:0%
until the next Epoch of training uh so
we're<02:28:39.800><c> already</c><02:28:40.120><c> doing</c><02:28:40.439><c> that</c><02:28:40.640><c> because</c><02:28:40.880><c> our</c>

02:28:41.110 --> 02:28:41.120 align:start position:0%
we're already doing that because our
 

02:28:41.120 --> 02:28:44.710 align:start position:0%
we're already doing that because our
data<02:28:41.680><c> loader</c><02:28:42.680><c> um</c><02:28:43.319><c> iterates</c><02:28:43.800><c> over</c><02:28:44.080><c> chunks</c><02:28:44.479><c> of</c>

02:28:44.710 --> 02:28:44.720 align:start position:0%
data loader um iterates over chunks of
 

02:28:44.720 --> 02:28:47.030 align:start position:0%
data loader um iterates over chunks of
data<02:28:45.359><c> so</c><02:28:45.560><c> there's</c><02:28:45.800><c> no</c><02:28:46.040><c> replacement</c><02:28:46.920><c> they</c>

02:28:47.030 --> 02:28:47.040 align:start position:0%
data so there's no replacement they
 

02:28:47.040 --> 02:28:49.269 align:start position:0%
data so there's no replacement they
don't<02:28:47.319><c> become</c><02:28:47.640><c> eligible</c><02:28:48.120><c> to</c><02:28:48.240><c> be</c><02:28:48.399><c> drawn</c><02:28:48.800><c> again</c>

02:28:49.269 --> 02:28:49.279 align:start position:0%
don't become eligible to be drawn again
 

02:28:49.279 --> 02:28:51.630 align:start position:0%
don't become eligible to be drawn again
until<02:28:49.560><c> the</c><02:28:49.680><c> next</c><02:28:50.240><c> P</c><02:28:50.800><c> so</c><02:28:50.960><c> we're</c><02:28:51.279><c> basically</c>

02:28:51.630 --> 02:28:51.640 align:start position:0%
until the next P so we're basically
 

02:28:51.640 --> 02:28:53.070 align:start position:0%
until the next P so we're basically
already<02:28:51.960><c> doing</c>

02:28:53.070 --> 02:28:53.080 align:start position:0%
already doing
 

02:28:53.080 --> 02:28:56.790 align:start position:0%
already doing
that<02:28:54.479><c> um</c><02:28:55.479><c> all</c><02:28:55.720><c> models</c><02:28:56.000><c> use</c><02:28:56.160><c> a</c><02:28:56.279><c> weight</c><02:28:56.439><c> decay</c><02:28:56.720><c> of</c>

02:28:56.790 --> 02:28:56.800 align:start position:0%
that um all models use a weight decay of
 

02:28:56.800 --> 02:28:59.190 align:start position:0%
that um all models use a weight decay of
0.1<02:28:57.279><c> to</c><02:28:57.399><c> provide</c><02:28:57.640><c> a</c><02:28:57.760><c> small</c><02:28:58.120><c> amount</c><02:28:58.359><c> of</c>

02:28:59.190 --> 02:28:59.200 align:start position:0%
0.1 to provide a small amount of
 

02:28:59.200 --> 02:29:01.150 align:start position:0%
0.1 to provide a small amount of
regularization<02:29:00.200><c> so</c><02:29:00.520><c> let's</c><02:29:00.720><c> Implement</c><02:29:01.040><c> a</c>

02:29:01.150 --> 02:29:01.160 align:start position:0%
regularization so let's Implement a
 

02:29:01.160 --> 02:29:02.990 align:start position:0%
regularization so let's Implement a
weight<02:29:01.359><c> Decay</c><02:29:02.160><c> and</c><02:29:02.240><c> you</c><02:29:02.359><c> see</c><02:29:02.560><c> here</c><02:29:02.680><c> that</c><02:29:02.840><c> I've</c>

02:29:02.990 --> 02:29:03.000 align:start position:0%
weight Decay and you see here that I've
 

02:29:03.000 --> 02:29:04.950 align:start position:0%
weight Decay and you see here that I've
already<02:29:03.240><c> kind</c><02:29:03.359><c> of</c><02:29:03.520><c> made</c><02:29:03.720><c> the</c><02:29:03.840><c> changes</c><02:29:04.640><c> and</c><02:29:04.800><c> in</c>

02:29:04.950 --> 02:29:04.960 align:start position:0%
already kind of made the changes and in
 

02:29:04.960 --> 02:29:06.550 align:start position:0%
already kind of made the changes and in
particular<02:29:05.560><c> instead</c><02:29:05.840><c> of</c><02:29:06.080><c> creating</c><02:29:06.399><c> the</c>

02:29:06.550 --> 02:29:06.560 align:start position:0%
particular instead of creating the
 

02:29:06.560 --> 02:29:10.230 align:start position:0%
particular instead of creating the
optimizer<02:29:07.160><c> right</c><02:29:07.399><c> here</c><02:29:08.560><c> um</c><02:29:09.560><c> I</c><02:29:09.760><c> I'm</c><02:29:09.840><c> creating</c><02:29:10.120><c> a</c>

02:29:10.230 --> 02:29:10.240 align:start position:0%
optimizer right here um I I'm creating a
 

02:29:10.240 --> 02:29:12.870 align:start position:0%
optimizer right here um I I'm creating a
new<02:29:10.479><c> configure</c><02:29:11.000><c> optimizers</c><02:29:11.920><c> function</c><02:29:12.560><c> inside</c>

02:29:12.870 --> 02:29:12.880 align:start position:0%
new configure optimizers function inside
 

02:29:12.880 --> 02:29:14.830 align:start position:0%
new configure optimizers function inside
the<02:29:13.040><c> model</c><02:29:13.560><c> and</c><02:29:13.680><c> I'm</c><02:29:13.840><c> passing</c><02:29:14.160><c> in</c><02:29:14.279><c> some</c><02:29:14.399><c> of</c><02:29:14.520><c> the</c>

02:29:14.830 --> 02:29:14.840 align:start position:0%
the model and I'm passing in some of the
 

02:29:14.840 --> 02:29:17.110 align:start position:0%
the model and I'm passing in some of the
hyper<02:29:15.120><c> parameters</c><02:29:15.680><c> instead</c><02:29:16.680><c> so</c><02:29:16.800><c> let's</c><02:29:17.000><c> look</c>

02:29:17.110 --> 02:29:17.120 align:start position:0%
hyper parameters instead so let's look
 

02:29:17.120 --> 02:29:18.550 align:start position:0%
hyper parameters instead so let's look
at<02:29:17.200><c> the</c><02:29:17.319><c> configure</c><02:29:17.720><c> optimizers</c><02:29:18.279><c> which</c><02:29:18.439><c> is</c>

02:29:18.550 --> 02:29:18.560 align:start position:0%
at the configure optimizers which is
 

02:29:18.560 --> 02:29:24.870 align:start position:0%
at the configure optimizers which is
supposed<02:29:18.840><c> to</c><02:29:19.120><c> return</c><02:29:19.319><c> the</c><02:29:19.479><c> optimizer</c>

02:29:24.870 --> 02:29:24.880 align:start position:0%
 
 

02:29:24.880 --> 02:29:27.389 align:start position:0%
 
object<02:29:25.880><c> okay</c><02:29:26.200><c> so</c><02:29:26.439><c> it</c><02:29:26.560><c> looks</c><02:29:26.800><c> complicated</c><02:29:27.279><c> but</c>

02:29:27.389 --> 02:29:27.399 align:start position:0%
object okay so it looks complicated but
 

02:29:27.399 --> 02:29:29.190 align:start position:0%
object okay so it looks complicated but
it's<02:29:27.560><c> actually</c><02:29:27.800><c> really</c><02:29:28.080><c> simple</c><02:29:28.600><c> and</c><02:29:28.920><c> it's</c>

02:29:29.190 --> 02:29:29.200 align:start position:0%
it's actually really simple and it's
 

02:29:29.200 --> 02:29:31.429 align:start position:0%
it's actually really simple and it's
just<02:29:29.640><c> um</c><02:29:30.279><c> we're</c><02:29:30.479><c> just</c><02:29:30.640><c> being</c><02:29:30.880><c> very</c><02:29:31.080><c> careful</c>

02:29:31.429 --> 02:29:31.439 align:start position:0%
just um we're just being very careful
 

02:29:31.439 --> 02:29:32.750 align:start position:0%
just um we're just being very careful
and<02:29:31.560><c> there's</c><02:29:31.720><c> a</c><02:29:31.840><c> few</c><02:29:31.960><c> settings</c><02:29:32.319><c> here</c><02:29:32.439><c> to</c><02:29:32.600><c> go</c>

02:29:32.750 --> 02:29:32.760 align:start position:0%
and there's a few settings here to go
 

02:29:32.760 --> 02:29:34.590 align:start position:0%
and there's a few settings here to go
through<02:29:33.479><c> the</c><02:29:33.600><c> most</c><02:29:33.800><c> important</c><02:29:34.160><c> thing</c><02:29:34.439><c> with</c>

02:29:34.590 --> 02:29:34.600 align:start position:0%
through the most important thing with
 

02:29:34.600 --> 02:29:36.510 align:start position:0%
through the most important thing with
respect<02:29:34.840><c> to</c><02:29:35.000><c> this</c><02:29:35.200><c> line</c><02:29:35.920><c> is</c><02:29:36.120><c> that</c><02:29:36.240><c> you</c><02:29:36.319><c> see</c>

02:29:36.510 --> 02:29:36.520 align:start position:0%
respect to this line is that you see
 

02:29:36.520 --> 02:29:38.950 align:start position:0%
respect to this line is that you see
there's<02:29:36.680><c> a</c><02:29:36.880><c> weight</c><02:29:37.120><c> Decay</c><02:29:37.720><c> parameter</c><02:29:38.240><c> here</c>

02:29:38.950 --> 02:29:38.960 align:start position:0%
there's a weight Decay parameter here
 

02:29:38.960 --> 02:29:41.469 align:start position:0%
there's a weight Decay parameter here
and<02:29:39.439><c> I'm</c><02:29:39.680><c> passing</c><02:29:40.160><c> that</c>

02:29:41.469 --> 02:29:41.479 align:start position:0%
and I'm passing that
 

02:29:41.479 --> 02:29:44.790 align:start position:0%
and I'm passing that
into<02:29:42.920><c> um</c><02:29:43.920><c> well</c><02:29:44.080><c> I'm</c><02:29:44.240><c> passing</c><02:29:44.479><c> that</c><02:29:44.600><c> into</c>

02:29:44.790 --> 02:29:44.800 align:start position:0%
into um well I'm passing that into
 

02:29:44.800 --> 02:29:46.389 align:start position:0%
into um well I'm passing that into
something<02:29:45.080><c> called</c><02:29:45.279><c> optim</c><02:29:45.680><c> groups</c><02:29:46.240><c> that</c>

02:29:46.389 --> 02:29:46.399 align:start position:0%
something called optim groups that
 

02:29:46.399 --> 02:29:47.870 align:start position:0%
something called optim groups that
eventually<02:29:46.800><c> ends</c><02:29:46.960><c> up</c><02:29:47.120><c> going</c><02:29:47.319><c> into</c><02:29:47.479><c> the</c><02:29:47.560><c> addom</c>

02:29:47.870 --> 02:29:47.880 align:start position:0%
eventually ends up going into the addom
 

02:29:47.880 --> 02:29:50.830 align:start position:0%
eventually ends up going into the addom
W<02:29:48.640><c> Optimizer</c><02:29:49.640><c> um</c><02:29:50.080><c> and</c><02:29:50.240><c> the</c><02:29:50.319><c> weight</c><02:29:50.520><c> Decay</c>

02:29:50.830 --> 02:29:50.840 align:start position:0%
W Optimizer um and the weight Decay
 

02:29:50.840 --> 02:29:52.990 align:start position:0%
W Optimizer um and the weight Decay
that's<02:29:51.040><c> by</c><02:29:51.240><c> default</c><02:29:51.600><c> used</c><02:29:51.840><c> in</c><02:29:52.000><c> Addam</c><02:29:52.319><c> W</c><02:29:52.720><c> here</c>

02:29:52.990 --> 02:29:53.000 align:start position:0%
that's by default used in Addam W here
 

02:29:53.000 --> 02:29:57.150 align:start position:0%
that's by default used in Addam W here
is<02:29:53.200><c> 0.01</c><02:29:54.200><c> so</c><02:29:54.399><c> it's</c><02:29:55.000><c> it's</c><02:29:55.399><c> u</c><02:29:55.840><c> 10</c><02:29:56.319><c> times</c><02:29:56.600><c> lower</c>

02:29:57.150 --> 02:29:57.160 align:start position:0%
is 0.01 so it's it's u 10 times lower
 

02:29:57.160 --> 02:30:01.349 align:start position:0%
is 0.01 so it's it's u 10 times lower
than<02:29:57.279><c> what's</c><02:29:57.439><c> used</c><02:29:57.640><c> in</c><02:29:57.760><c> gpt3</c><02:29:58.319><c> paper</c><02:29:59.080><c> here</c><02:30:00.359><c> um</c>

02:30:01.349 --> 02:30:01.359 align:start position:0%
than what's used in gpt3 paper here um
 

02:30:01.359 --> 02:30:02.590 align:start position:0%
than what's used in gpt3 paper here um
so<02:30:01.520><c> the</c><02:30:01.640><c> weight</c><02:30:01.800><c> dek</c><02:30:02.040><c> basically</c><02:30:02.279><c> ends</c><02:30:02.439><c> up</c>

02:30:02.590 --> 02:30:02.600 align:start position:0%
so the weight dek basically ends up
 

02:30:02.600 --> 02:30:03.990 align:start position:0%
so the weight dek basically ends up
making<02:30:02.800><c> its</c><02:30:02.960><c> way</c><02:30:03.080><c> into</c><02:30:03.279><c> the</c><02:30:03.399><c> ADD</c><02:30:03.560><c> and</c><02:30:03.720><c> W</c>

02:30:03.990 --> 02:30:04.000 align:start position:0%
making its way into the ADD and W
 

02:30:04.000 --> 02:30:05.750 align:start position:0%
making its way into the ADD and W
through<02:30:04.160><c> the</c><02:30:04.279><c> optimizer</c><02:30:04.720><c> groups</c><02:30:05.399><c> now</c><02:30:05.600><c> what</c>

02:30:05.750 --> 02:30:05.760 align:start position:0%
through the optimizer groups now what
 

02:30:05.760 --> 02:30:07.469 align:start position:0%
through the optimizer groups now what
else<02:30:06.000><c> is</c><02:30:06.160><c> going</c><02:30:06.359><c> on</c><02:30:06.560><c> here</c><02:30:06.680><c> in</c><02:30:06.880><c> this</c><02:30:07.319><c> uh</c>

02:30:07.469 --> 02:30:07.479 align:start position:0%
else is going on here in this uh
 

02:30:07.479 --> 02:30:09.070 align:start position:0%
else is going on here in this uh
function<02:30:08.240><c> so</c><02:30:08.399><c> the</c><02:30:08.520><c> two</c><02:30:08.680><c> things</c><02:30:08.880><c> that</c><02:30:08.960><c> are</c>

02:30:09.070 --> 02:30:09.080 align:start position:0%
function so the two things that are
 

02:30:09.080 --> 02:30:10.510 align:start position:0%
function so the two things that are
happening<02:30:09.399><c> here</c><02:30:09.560><c> that</c><02:30:09.640><c> are</c><02:30:09.840><c> important</c><02:30:10.319><c> is</c>

02:30:10.510 --> 02:30:10.520 align:start position:0%
happening here that are important is
 

02:30:10.520 --> 02:30:12.670 align:start position:0%
happening here that are important is
that<02:30:11.120><c> I'm</c><02:30:11.319><c> splitting</c><02:30:11.720><c> up</c><02:30:11.840><c> the</c><02:30:12.000><c> parameters</c>

02:30:12.670 --> 02:30:12.680 align:start position:0%
that I'm splitting up the parameters
 

02:30:12.680 --> 02:30:14.550 align:start position:0%
that I'm splitting up the parameters
into<02:30:13.000><c> those</c><02:30:13.279><c> that</c><02:30:13.399><c> should</c><02:30:13.600><c> be</c><02:30:13.840><c> weight</c><02:30:14.120><c> decayed</c>

02:30:14.550 --> 02:30:14.560 align:start position:0%
into those that should be weight decayed
 

02:30:14.560 --> 02:30:15.830 align:start position:0%
into those that should be weight decayed
and<02:30:14.720><c> those</c><02:30:14.920><c> that</c><02:30:15.040><c> should</c><02:30:15.240><c> not</c><02:30:15.439><c> be</c><02:30:15.600><c> weight</c>

02:30:15.830 --> 02:30:15.840 align:start position:0%
and those that should not be weight
 

02:30:15.840 --> 02:30:18.550 align:start position:0%
and those that should not be weight
decayed<02:30:16.760><c> so</c><02:30:17.000><c> in</c><02:30:17.160><c> particular</c><02:30:17.680><c> it</c><02:30:17.760><c> is</c><02:30:18.040><c> common</c><02:30:18.359><c> to</c>

02:30:18.550 --> 02:30:18.560 align:start position:0%
decayed so in particular it is common to
 

02:30:18.560 --> 02:30:22.870 align:start position:0%
decayed so in particular it is common to
not<02:30:19.000><c> weight</c><02:30:19.359><c> decay</c><02:30:20.240><c> uh</c><02:30:20.760><c> biases</c><02:30:21.760><c> and</c><02:30:22.359><c> any</c><02:30:22.600><c> other</c>

02:30:22.870 --> 02:30:22.880 align:start position:0%
not weight decay uh biases and any other
 

02:30:22.880 --> 02:30:25.309 align:start position:0%
not weight decay uh biases and any other
sort<02:30:23.120><c> of</c><02:30:23.279><c> one-dimensional</c><02:30:24.040><c> tensors</c><02:30:25.040><c> so</c><02:30:25.200><c> the</c>

02:30:25.309 --> 02:30:25.319 align:start position:0%
sort of one-dimensional tensors so the
 

02:30:25.319 --> 02:30:27.429 align:start position:0%
sort of one-dimensional tensors so the
one-dimensional<02:30:25.880><c> tensors</c><02:30:26.640><c> are</c><02:30:26.840><c> in</c><02:30:27.040><c> the</c><02:30:27.160><c> no</c>

02:30:27.429 --> 02:30:27.439 align:start position:0%
one-dimensional tensors are in the no
 

02:30:27.439 --> 02:30:30.070 align:start position:0%
one-dimensional tensors are in the no
Decay<02:30:27.920><c> prams</c><02:30:28.920><c> and</c><02:30:29.080><c> these</c><02:30:29.200><c> are</c><02:30:29.439><c> also</c><02:30:29.760><c> things</c>

02:30:30.070 --> 02:30:30.080 align:start position:0%
Decay prams and these are also things
 

02:30:30.080 --> 02:30:33.309 align:start position:0%
Decay prams and these are also things
like<02:30:30.880><c> uh</c><02:30:31.000><c> layer</c><02:30:31.359><c> Norm</c><02:30:31.840><c> scales</c><02:30:32.319><c> and</c><02:30:32.520><c> biases</c><02:30:33.200><c> it</c>

02:30:33.309 --> 02:30:33.319 align:start position:0%
like uh layer Norm scales and biases it
 

02:30:33.319 --> 02:30:34.510 align:start position:0%
like uh layer Norm scales and biases it
doesn't<02:30:33.560><c> really</c><02:30:33.720><c> make</c><02:30:33.880><c> sense</c><02:30:34.080><c> to</c><02:30:34.279><c> weight</c>

02:30:34.510 --> 02:30:34.520 align:start position:0%
doesn't really make sense to weight
 

02:30:34.520 --> 02:30:36.670 align:start position:0%
doesn't really make sense to weight
Decay<02:30:34.880><c> those</c><02:30:35.359><c> you</c><02:30:35.520><c> mostly</c><02:30:35.800><c> want</c><02:30:35.960><c> to</c><02:30:36.120><c> weight</c>

02:30:36.670 --> 02:30:36.680 align:start position:0%
Decay those you mostly want to weight
 

02:30:36.680 --> 02:30:39.190 align:start position:0%
Decay those you mostly want to weight
Decay<02:30:37.680><c> uh</c><02:30:37.920><c> the</c><02:30:38.080><c> weights</c><02:30:38.439><c> that</c><02:30:38.600><c> participate</c><02:30:39.080><c> in</c>

02:30:39.190 --> 02:30:39.200 align:start position:0%
Decay uh the weights that participate in
 

02:30:39.200 --> 02:30:41.590 align:start position:0%
Decay uh the weights that participate in
Matrix<02:30:39.960><c> multiplications</c><02:30:40.960><c> and</c><02:30:41.080><c> you</c><02:30:41.200><c> want</c><02:30:41.359><c> to</c>

02:30:41.590 --> 02:30:41.600 align:start position:0%
Matrix multiplications and you want to
 

02:30:41.600 --> 02:30:43.469 align:start position:0%
Matrix multiplications and you want to
potentially<02:30:42.000><c> weight</c><02:30:42.240><c> Decay</c><02:30:42.640><c> the</c>

02:30:43.469 --> 02:30:43.479 align:start position:0%
potentially weight Decay the
 

02:30:43.479 --> 02:30:45.990 align:start position:0%
potentially weight Decay the
embeddings<02:30:44.479><c> and</c><02:30:45.080><c> uh</c><02:30:45.319><c> We've</c><02:30:45.520><c> covered</c><02:30:45.840><c> in</c>

02:30:45.990 --> 02:30:46.000 align:start position:0%
embeddings and uh We've covered in
 

02:30:46.000 --> 02:30:47.429 align:start position:0%
embeddings and uh We've covered in
previous<02:30:46.319><c> video</c><02:30:46.640><c> why</c><02:30:46.760><c> it</c><02:30:46.880><c> makes</c><02:30:47.040><c> sense</c><02:30:47.240><c> to</c>

02:30:47.429 --> 02:30:47.439 align:start position:0%
previous video why it makes sense to
 

02:30:47.439 --> 02:30:49.429 align:start position:0%
previous video why it makes sense to
Decay<02:30:47.880><c> the</c><02:30:48.080><c> weights</c><02:30:48.880><c> because</c><02:30:49.080><c> you</c><02:30:49.160><c> can</c><02:30:49.279><c> sort</c>

02:30:49.429 --> 02:30:49.439 align:start position:0%
Decay the weights because you can sort
 

02:30:49.439 --> 02:30:51.469 align:start position:0%
Decay the weights because you can sort
of<02:30:49.720><c> the</c><02:30:50.080><c> it</c><02:30:50.160><c> as</c><02:30:50.240><c> a</c><02:30:50.319><c> regularization</c><02:30:51.279><c> because</c>

02:30:51.469 --> 02:30:51.479 align:start position:0%
of the it as a regularization because
 

02:30:51.479 --> 02:30:53.150 align:start position:0%
of the it as a regularization because
when<02:30:51.600><c> you're</c><02:30:51.800><c> pulling</c><02:30:52.160><c> down</c><02:30:52.399><c> all</c><02:30:52.600><c> the</c><02:30:52.720><c> weights</c>

02:30:53.150 --> 02:30:53.160 align:start position:0%
when you're pulling down all the weights
 

02:30:53.160 --> 02:30:55.269 align:start position:0%
when you're pulling down all the weights
you're<02:30:53.279><c> forcing</c><02:30:53.680><c> the</c><02:30:53.840><c> optimization</c><02:30:54.800><c> to</c><02:30:55.000><c> use</c>

02:30:55.269 --> 02:30:55.279 align:start position:0%
you're forcing the optimization to use
 

02:30:55.279 --> 02:30:57.670 align:start position:0%
you're forcing the optimization to use
more<02:30:55.479><c> of</c><02:30:55.640><c> the</c><02:30:55.800><c> weights</c><02:30:56.800><c> um</c><02:30:57.240><c> and</c><02:30:57.319><c> you're</c><02:30:57.520><c> not</c>

02:30:57.670 --> 02:30:57.680 align:start position:0%
more of the weights um and you're not
 

02:30:57.680 --> 02:30:59.230 align:start position:0%
more of the weights um and you're not
allowing<02:30:58.160><c> any</c><02:30:58.319><c> one</c><02:30:58.479><c> of</c><02:30:58.560><c> the</c><02:30:58.720><c> weights</c>

02:30:59.230 --> 02:30:59.240 align:start position:0%
allowing any one of the weights
 

02:30:59.240 --> 02:31:02.510 align:start position:0%
allowing any one of the weights
individually<02:30:59.800><c> to</c><02:30:59.920><c> be</c><02:31:00.160><c> way</c><02:31:00.319><c> too</c><02:31:00.640><c> large</c><02:31:01.640><c> um</c>

02:31:02.510 --> 02:31:02.520 align:start position:0%
individually to be way too large um
 

02:31:02.520 --> 02:31:03.710 align:start position:0%
individually to be way too large um
you're<02:31:02.720><c> forcing</c><02:31:03.160><c> you're</c><02:31:03.319><c> forcing</c><02:31:03.600><c> the</c>

02:31:03.710 --> 02:31:03.720 align:start position:0%
you're forcing you're forcing the
 

02:31:03.720 --> 02:31:05.030 align:start position:0%
you're forcing you're forcing the
network<02:31:04.000><c> to</c><02:31:04.120><c> kind</c><02:31:04.200><c> of</c><02:31:04.319><c> like</c><02:31:04.479><c> distribute</c><02:31:04.880><c> the</c>

02:31:05.030 --> 02:31:05.040 align:start position:0%
network to kind of like distribute the
 

02:31:05.040 --> 02:31:07.269 align:start position:0%
network to kind of like distribute the
work<02:31:05.359><c> across</c><02:31:05.960><c> more</c><02:31:06.160><c> channels</c><02:31:07.040><c> because</c>

02:31:07.269 --> 02:31:07.279 align:start position:0%
work across more channels because
 

02:31:07.279 --> 02:31:09.349 align:start position:0%
work across more channels because
there's<02:31:07.560><c> sort</c><02:31:07.720><c> of</c><02:31:07.880><c> like</c><02:31:08.000><c> a</c><02:31:08.160><c> pull</c><02:31:08.479><c> of</c><02:31:08.680><c> gravity</c>

02:31:09.349 --> 02:31:09.359 align:start position:0%
there's sort of like a pull of gravity
 

02:31:09.359 --> 02:31:11.070 align:start position:0%
there's sort of like a pull of gravity
on<02:31:09.560><c> the</c><02:31:09.720><c> weights</c>

02:31:11.070 --> 02:31:11.080 align:start position:0%
on the weights
 

02:31:11.080 --> 02:31:13.710 align:start position:0%
on the weights
themselves<02:31:12.080><c> um</c><02:31:12.960><c> so</c><02:31:13.160><c> that's</c><02:31:13.359><c> why</c><02:31:13.479><c> we</c><02:31:13.600><c> are</c>

02:31:13.710 --> 02:31:13.720 align:start position:0%
themselves um so that's why we are
 

02:31:13.720 --> 02:31:16.070 align:start position:0%
themselves um so that's why we are
separating<02:31:14.240><c> it</c><02:31:14.479><c> in</c><02:31:14.680><c> those</c><02:31:14.920><c> ways</c><02:31:15.240><c> here</c><02:31:15.880><c> we're</c>

02:31:16.070 --> 02:31:16.080 align:start position:0%
separating it in those ways here we're
 

02:31:16.080 --> 02:31:18.269 align:start position:0%
separating it in those ways here we're
only<02:31:16.319><c> decaying</c><02:31:16.800><c> the</c><02:31:17.160><c> embeddings</c><02:31:17.800><c> and</c><02:31:18.000><c> the</c>

02:31:18.269 --> 02:31:18.279 align:start position:0%
only decaying the embeddings and the
 

02:31:18.279 --> 02:31:20.990 align:start position:0%
only decaying the embeddings and the
mmal<02:31:19.200><c> participating</c><02:31:19.720><c> ways</c>

02:31:20.990 --> 02:31:21.000 align:start position:0%
mmal participating ways
 

02:31:21.000 --> 02:31:22.830 align:start position:0%
mmal participating ways
uh<02:31:21.080><c> we're</c><02:31:21.319><c> printing</c><02:31:21.680><c> the</c><02:31:21.800><c> number</c><02:31:22.120><c> of</c><02:31:22.720><c> uh</c>

02:31:22.830 --> 02:31:22.840 align:start position:0%
uh we're printing the number of uh
 

02:31:22.840 --> 02:31:24.590 align:start position:0%
uh we're printing the number of uh
parameters<02:31:23.240><c> that</c><02:31:23.319><c> we</c><02:31:23.439><c> decaying</c><02:31:23.760><c> and</c><02:31:23.960><c> not</c><02:31:24.399><c> most</c>

02:31:24.590 --> 02:31:24.600 align:start position:0%
parameters that we decaying and not most
 

02:31:24.600 --> 02:31:26.790 align:start position:0%
parameters that we decaying and not most
of<02:31:24.720><c> the</c><02:31:24.840><c> parameters</c><02:31:25.240><c> will</c><02:31:25.359><c> be</c><02:31:25.680><c> decayed</c><02:31:26.680><c> and</c>

02:31:26.790 --> 02:31:26.800 align:start position:0%
of the parameters will be decayed and
 

02:31:26.800 --> 02:31:27.790 align:start position:0%
of the parameters will be decayed and
then<02:31:26.920><c> one</c><02:31:27.040><c> more</c><02:31:27.200><c> thing</c><02:31:27.319><c> that</c><02:31:27.439><c> we're</c><02:31:27.560><c> doing</c>

02:31:27.790 --> 02:31:27.800 align:start position:0%
then one more thing that we're doing
 

02:31:27.800 --> 02:31:31.150 align:start position:0%
then one more thing that we're doing
here<02:31:28.160><c> is</c><02:31:28.479><c> I'm</c><02:31:29.160><c> doing</c><02:31:29.479><c> another</c><02:31:29.800><c> optimization</c>

02:31:31.150 --> 02:31:31.160 align:start position:0%
here is I'm doing another optimization
 

02:31:31.160 --> 02:31:34.550 align:start position:0%
here is I'm doing another optimization
here<02:31:32.160><c> and</c><02:31:32.880><c> previous</c><02:31:33.240><c> add</c><02:31:33.439><c> and</c><02:31:33.640><c> W</c><02:31:34.000><c> did</c><02:31:34.160><c> not</c><02:31:34.399><c> have</c>

02:31:34.550 --> 02:31:34.560 align:start position:0%
here and previous add and W did not have
 

02:31:34.560 --> 02:31:37.070 align:start position:0%
here and previous add and W did not have
this<02:31:34.760><c> option</c><02:31:35.160><c> but</c><02:31:35.319><c> later</c><02:31:36.160><c> parts</c><02:31:36.399><c> of</c><02:31:36.560><c> pytorch</c>

02:31:37.070 --> 02:31:37.080 align:start position:0%
this option but later parts of pytorch
 

02:31:37.080 --> 02:31:38.870 align:start position:0%
this option but later parts of pytorch
introduced<02:31:37.560><c> it</c><02:31:38.040><c> and</c><02:31:38.160><c> that's</c><02:31:38.359><c> why</c><02:31:38.560><c> I'm</c>

02:31:38.870 --> 02:31:38.880 align:start position:0%
introduced it and that's why I'm
 

02:31:38.880 --> 02:31:41.269 align:start position:0%
introduced it and that's why I'm
guarding<02:31:39.240><c> it</c><02:31:39.479><c> with</c><02:31:39.600><c> an</c><02:31:39.800><c> inspect</c><02:31:40.240><c> do</c><02:31:40.439><c> signature</c>

02:31:41.269 --> 02:31:41.279 align:start position:0%
guarding it with an inspect do signature
 

02:31:41.279 --> 02:31:43.070 align:start position:0%
guarding it with an inspect do signature
which<02:31:41.399><c> is</c><02:31:41.560><c> basically</c><02:31:41.960><c> checking</c><02:31:42.439><c> if</c><02:31:42.680><c> this</c>

02:31:43.070 --> 02:31:43.080 align:start position:0%
which is basically checking if this
 

02:31:43.080 --> 02:31:48.309 align:start position:0%
which is basically checking if this
fused<02:31:44.399><c> um</c><02:31:45.399><c> quar</c><02:31:46.120><c> is</c><02:31:46.359><c> present</c><02:31:46.720><c> inside</c><02:31:47.120><c> atom</c><02:31:47.479><c> W</c>

02:31:48.309 --> 02:31:48.319 align:start position:0%
fused um quar is present inside atom W
 

02:31:48.319 --> 02:31:50.030 align:start position:0%
fused um quar is present inside atom W
and<02:31:48.520><c> then</c><02:31:48.720><c> if</c><02:31:48.800><c> it</c><02:31:48.920><c> is</c><02:31:49.120><c> present</c><02:31:49.479><c> I'm</c><02:31:49.600><c> going</c><02:31:49.680><c> to</c>

02:31:50.030 --> 02:31:50.040 align:start position:0%
and then if it is present I'm going to
 

02:31:50.040 --> 02:31:53.510 align:start position:0%
and then if it is present I'm going to
end<02:31:50.160><c> up</c><02:31:50.359><c> using</c><02:31:50.680><c> it</c><02:31:51.359><c> and</c><02:31:51.600><c> passing</c><02:31:51.880><c> it</c><02:31:52.040><c> in</c><02:31:52.520><c> here</c>

02:31:53.510 --> 02:31:53.520 align:start position:0%
end up using it and passing it in here
 

02:31:53.520 --> 02:31:54.990 align:start position:0%
end up using it and passing it in here
because<02:31:53.720><c> some</c><02:31:53.880><c> earlier</c><02:31:54.279><c> versions</c><02:31:54.680><c> do</c><02:31:54.800><c> not</c>

02:31:54.990 --> 02:31:55.000 align:start position:0%
because some earlier versions do not
 

02:31:55.000 --> 02:31:58.790 align:start position:0%
because some earlier versions do not
have<02:31:55.200><c> fused</c><02:31:55.800><c> equals</c><02:31:56.800><c> so</c><02:31:57.399><c> here's</c><02:31:57.640><c> adamw</c><02:31:58.399><c> fused</c>

02:31:58.790 --> 02:31:58.800 align:start position:0%
have fused equals so here's adamw fused
 

02:31:58.800 --> 02:32:00.630 align:start position:0%
have fused equals so here's adamw fused
equals<02:31:59.399><c> it</c><02:31:59.520><c> did</c><02:31:59.640><c> not</c><02:31:59.800><c> used</c><02:31:59.960><c> to</c><02:32:00.160><c> exist</c><02:32:00.399><c> and</c><02:32:00.520><c> it</c>

02:32:00.630 --> 02:32:00.640 align:start position:0%
equals it did not used to exist and it
 

02:32:00.640 --> 02:32:03.030 align:start position:0%
equals it did not used to exist and it
was<02:32:00.800><c> added</c><02:32:01.120><c> later</c><02:32:02.120><c> and</c><02:32:02.240><c> there's</c><02:32:02.479><c> some</c><02:32:02.680><c> docks</c>

02:32:03.030 --> 02:32:03.040 align:start position:0%
was added later and there's some docks
 

02:32:03.040 --> 02:32:05.870 align:start position:0%
was added later and there's some docks
here<02:32:03.240><c> for</c><02:32:03.600><c> what's</c><02:32:04.040><c> happening</c><02:32:05.040><c> and</c><02:32:05.319><c> basically</c>

02:32:05.870 --> 02:32:05.880 align:start position:0%
here for what's happening and basically
 

02:32:05.880 --> 02:32:07.830 align:start position:0%
here for what's happening and basically
they<02:32:06.040><c> say</c><02:32:06.240><c> that</c><02:32:06.399><c> by</c><02:32:06.520><c> default</c><02:32:06.880><c> they</c><02:32:06.960><c> do</c><02:32:07.120><c> not</c><02:32:07.319><c> use</c>

02:32:07.830 --> 02:32:07.840 align:start position:0%
they say that by default they do not use
 

02:32:07.840 --> 02:32:10.389 align:start position:0%
they say that by default they do not use
fused<02:32:08.840><c> because</c><02:32:09.319><c> it</c><02:32:09.399><c> is</c><02:32:09.560><c> relatively</c><02:32:10.000><c> new</c><02:32:10.279><c> and</c>

02:32:10.389 --> 02:32:10.399 align:start position:0%
fused because it is relatively new and
 

02:32:10.399 --> 02:32:12.269 align:start position:0%
fused because it is relatively new and
we<02:32:10.479><c> want</c><02:32:10.560><c> to</c><02:32:10.680><c> give</c><02:32:10.800><c> it</c><02:32:10.880><c> sufficient</c><02:32:11.319><c> big</c><02:32:11.560><c> time</c>

02:32:12.269 --> 02:32:12.279 align:start position:0%
we want to give it sufficient big time
 

02:32:12.279 --> 02:32:13.910 align:start position:0%
we want to give it sufficient big time
so<02:32:12.439><c> by</c><02:32:12.560><c> default</c><02:32:12.880><c> they</c><02:32:13.000><c> don't</c><02:32:13.200><c> use</c><02:32:13.359><c> fused</c><02:32:13.760><c> but</c>

02:32:13.910 --> 02:32:13.920 align:start position:0%
so by default they don't use fused but
 

02:32:13.920 --> 02:32:15.710 align:start position:0%
so by default they don't use fused but
fused<02:32:14.279><c> is</c><02:32:14.399><c> a</c><02:32:14.560><c> lot</c><02:32:14.840><c> faster</c><02:32:15.279><c> when</c><02:32:15.399><c> it</c><02:32:15.520><c> is</c>

02:32:15.710 --> 02:32:15.720 align:start position:0%
fused is a lot faster when it is
 

02:32:15.720 --> 02:32:17.429 align:start position:0%
fused is a lot faster when it is
available<02:32:16.319><c> and</c><02:32:16.520><c> when</c><02:32:16.640><c> you're</c><02:32:16.800><c> running</c><02:32:17.120><c> on</c>

02:32:17.429 --> 02:32:17.439 align:start position:0%
available and when you're running on
 

02:32:17.439 --> 02:32:20.230 align:start position:0%
available and when you're running on
Cuda<02:32:18.439><c> and</c><02:32:18.560><c> what</c><02:32:18.720><c> that</c><02:32:18.880><c> does</c><02:32:19.160><c> is</c><02:32:19.680><c> in</c><02:32:19.880><c> instead</c><02:32:20.120><c> of</c>

02:32:20.230 --> 02:32:20.240 align:start position:0%
Cuda and what that does is in instead of
 

02:32:20.240 --> 02:32:22.750 align:start position:0%
Cuda and what that does is in instead of
iterating<02:32:20.720><c> in</c><02:32:20.800><c> a</c><02:32:20.920><c> for</c><02:32:21.200><c> Loop</c><02:32:21.520><c> over</c><02:32:21.800><c> all</c><02:32:22.000><c> the</c>

02:32:22.750 --> 02:32:22.760 align:start position:0%
iterating in a for Loop over all the
 

02:32:22.760 --> 02:32:25.389 align:start position:0%
iterating in a for Loop over all the
parameter<02:32:23.200><c> tensors</c><02:32:23.720><c> and</c><02:32:23.880><c> updating</c><02:32:24.319><c> them</c><02:32:25.279><c> that</c>

02:32:25.389 --> 02:32:25.399 align:start position:0%
parameter tensors and updating them that
 

02:32:25.399 --> 02:32:27.349 align:start position:0%
parameter tensors and updating them that
would<02:32:25.560><c> launch</c><02:32:25.840><c> a</c><02:32:25.960><c> lot</c><02:32:26.080><c> of</c><02:32:26.240><c> kernels</c><02:32:26.840><c> right</c><02:32:27.279><c> and</c>

02:32:27.349 --> 02:32:27.359 align:start position:0%
would launch a lot of kernels right and
 

02:32:27.359 --> 02:32:29.990 align:start position:0%
would launch a lot of kernels right and
so<02:32:27.479><c> a</c><02:32:27.600><c> fused</c><02:32:28.120><c> just</c><02:32:28.240><c> means</c><02:32:28.520><c> that</c><02:32:28.680><c> it's</c><02:32:28.800><c> a</c><02:32:29.399><c> um</c><02:32:29.800><c> all</c>

02:32:29.990 --> 02:32:30.000 align:start position:0%
so a fused just means that it's a um all
 

02:32:30.000 --> 02:32:31.670 align:start position:0%
so a fused just means that it's a um all
those<02:32:30.200><c> kernels</c><02:32:30.600><c> are</c><02:32:30.720><c> fused</c><02:32:31.120><c> into</c><02:32:31.279><c> a</c><02:32:31.399><c> single</c>

02:32:31.670 --> 02:32:31.680 align:start position:0%
those kernels are fused into a single
 

02:32:31.680 --> 02:32:34.150 align:start position:0%
those kernels are fused into a single
kernel<02:32:32.200><c> you</c><02:32:32.359><c> get</c><02:32:32.479><c> rid</c><02:32:32.640><c> of</c><02:32:32.720><c> a</c><02:32:32.840><c> lot</c><02:32:32.960><c> of</c><02:32:33.160><c> overhead</c>

02:32:34.150 --> 02:32:34.160 align:start position:0%
kernel you get rid of a lot of overhead
 

02:32:34.160 --> 02:32:36.309 align:start position:0%
kernel you get rid of a lot of overhead
and<02:32:34.319><c> you</c><02:32:34.720><c> a</c><02:32:34.880><c> single</c><02:32:35.279><c> time</c><02:32:35.880><c> on</c><02:32:36.040><c> all</c><02:32:36.200><c> the</c>

02:32:36.309 --> 02:32:36.319 align:start position:0%
and you a single time on all the
 

02:32:36.319 --> 02:32:39.750 align:start position:0%
and you a single time on all the
parameters<02:32:37.120><c> call</c><02:32:37.640><c> a</c><02:32:38.240><c> uh</c><02:32:38.399><c> kernel</c><02:32:38.840><c> that</c><02:32:39.160><c> updates</c>

02:32:39.750 --> 02:32:39.760 align:start position:0%
parameters call a uh kernel that updates
 

02:32:39.760 --> 02:32:42.429 align:start position:0%
parameters call a uh kernel that updates
them<02:32:40.760><c> and</c><02:32:40.880><c> so</c><02:32:41.040><c> it's</c><02:32:41.200><c> just</c><02:32:41.359><c> basically</c><02:32:41.720><c> a</c><02:32:42.080><c> kernel</c>

02:32:42.429 --> 02:32:42.439 align:start position:0%
them and so it's just basically a kernel
 

02:32:42.439 --> 02:32:44.950 align:start position:0%
them and so it's just basically a kernel
Fusion<02:32:42.880><c> for</c><02:32:43.399><c> the</c><02:32:43.560><c> atom</c><02:32:43.880><c> W</c><02:32:44.200><c> update</c><02:32:44.600><c> instead</c><02:32:44.840><c> of</c>

02:32:44.950 --> 02:32:44.960 align:start position:0%
Fusion for the atom W update instead of
 

02:32:44.960 --> 02:32:47.150 align:start position:0%
Fusion for the atom W update instead of
iterating<02:32:45.359><c> over</c><02:32:45.520><c> all</c><02:32:45.760><c> the</c>

02:32:47.150 --> 02:32:47.160 align:start position:0%
iterating over all the
 

02:32:47.160 --> 02:32:48.910 align:start position:0%
iterating over all the
tensors<02:32:48.160><c> so</c><02:32:48.319><c> that's</c><02:32:48.479><c> the</c><02:32:48.560><c> configure</c>

02:32:48.910 --> 02:32:48.920 align:start position:0%
tensors so that's the configure
 

02:32:48.920 --> 02:32:51.790 align:start position:0%
tensors so that's the configure
optimizers<02:32:49.880><c> function</c><02:32:50.279><c> that</c><02:32:50.439><c> I</c><02:32:50.600><c> like</c><02:32:50.760><c> to</c><02:32:50.920><c> use</c>

02:32:51.790 --> 02:32:51.800 align:start position:0%
optimizers function that I like to use
 

02:32:51.800 --> 02:32:53.750 align:start position:0%
optimizers function that I like to use
and<02:32:51.960><c> we</c><02:32:52.080><c> can</c><02:32:52.240><c> rerun</c><02:32:53.160><c> and</c><02:32:53.279><c> we're</c><02:32:53.399><c> not</c><02:32:53.560><c> going</c><02:32:53.640><c> to</c>

02:32:53.750 --> 02:32:53.760 align:start position:0%
and we can rerun and we're not going to
 

02:32:53.760 --> 02:32:55.510 align:start position:0%
and we can rerun and we're not going to
see<02:32:53.920><c> any</c><02:32:54.200><c> major</c><02:32:54.560><c> differences</c><02:32:55.080><c> from</c><02:32:55.279><c> what</c><02:32:55.399><c> we</c>

02:32:55.510 --> 02:32:55.520 align:start position:0%
see any major differences from what we
 

02:32:55.520 --> 02:32:57.309 align:start position:0%
see any major differences from what we
saw<02:32:55.800><c> before</c><02:32:56.319><c> but</c><02:32:56.439><c> we</c><02:32:56.520><c> are</c><02:32:56.640><c> going</c><02:32:56.760><c> to</c><02:32:56.880><c> see</c><02:32:57.040><c> some</c>

02:32:57.309 --> 02:32:57.319 align:start position:0%
saw before but we are going to see some
 

02:32:57.319 --> 02:33:00.230 align:start position:0%
saw before but we are going to see some
prints<02:32:58.319><c> uh</c><02:32:58.600><c> coming</c><02:32:58.880><c> from</c><02:32:59.160><c> here</c><02:32:59.840><c> so</c><02:33:00.000><c> let's</c><02:33:00.120><c> just</c>

02:33:00.230 --> 02:33:00.240 align:start position:0%
prints uh coming from here so let's just
 

02:33:00.240 --> 02:33:01.750 align:start position:0%
prints uh coming from here so let's just
take<02:33:00.359><c> a</c><02:33:00.439><c> look</c><02:33:00.560><c> at</c><02:33:00.640><c> what</c><02:33:00.760><c> they</c><02:33:00.880><c> look</c>

02:33:01.750 --> 02:33:01.760 align:start position:0%
take a look at what they look
 

02:33:01.760 --> 02:33:04.510 align:start position:0%
take a look at what they look
like<02:33:02.760><c> so</c><02:33:03.240><c> we</c><02:33:03.359><c> see</c><02:33:03.640><c> that</c><02:33:03.880><c> number</c><02:33:04.040><c> of</c><02:33:04.200><c> Decay</c>

02:33:04.510 --> 02:33:04.520 align:start position:0%
like so we see that number of Decay
 

02:33:04.520 --> 02:33:06.710 align:start position:0%
like so we see that number of Decay
tensors<02:33:04.920><c> is</c><02:33:05.120><c> 50</c><02:33:06.000><c> and</c><02:33:06.080><c> it's</c><02:33:06.319><c> most</c><02:33:06.479><c> of</c><02:33:06.600><c> the</c>

02:33:06.710 --> 02:33:06.720 align:start position:0%
tensors is 50 and it's most of the
 

02:33:06.720 --> 02:33:08.510 align:start position:0%
tensors is 50 and it's most of the
parameters<02:33:07.600><c> and</c><02:33:07.720><c> number</c><02:33:07.920><c> of</c><02:33:08.040><c> non-</c><02:33:08.240><c> deay</c>

02:33:08.510 --> 02:33:08.520 align:start position:0%
parameters and number of non- deay
 

02:33:08.520 --> 02:33:10.590 align:start position:0%
parameters and number of non- deay
tensors<02:33:08.840><c> is</c><02:33:09.000><c> 98</c><02:33:09.720><c> and</c><02:33:09.840><c> these</c><02:33:09.960><c> are</c><02:33:10.080><c> the</c><02:33:10.240><c> biases</c>

02:33:10.590 --> 02:33:10.600 align:start position:0%
tensors is 98 and these are the biases
 

02:33:10.600 --> 02:33:13.230 align:start position:0%
tensors is 98 and these are the biases
and<02:33:10.680><c> the</c><02:33:10.800><c> layer</c><02:33:11.040><c> Norm</c><02:33:11.520><c> parameters</c><02:33:12.040><c> mostly</c><02:33:12.920><c> and</c>

02:33:13.230 --> 02:33:13.240 align:start position:0%
and the layer Norm parameters mostly and
 

02:33:13.240 --> 02:33:15.750 align:start position:0%
and the layer Norm parameters mostly and
that's<02:33:13.479><c> there's</c><02:33:13.640><c> only</c><02:33:13.960><c> 100,000</c><02:33:14.760><c> of</c><02:33:14.920><c> those</c><02:33:15.520><c> so</c>

02:33:15.750 --> 02:33:15.760 align:start position:0%
that's there's only 100,000 of those so
 

02:33:15.760 --> 02:33:18.630 align:start position:0%
that's there's only 100,000 of those so
most<02:33:15.960><c> of</c><02:33:16.080><c> it</c><02:33:16.200><c> is</c><02:33:16.760><c> decayed</c><02:33:17.760><c> and</c><02:33:17.960><c> then</c><02:33:18.319><c> we</c><02:33:18.439><c> are</c>

02:33:18.630 --> 02:33:18.640 align:start position:0%
most of it is decayed and then we are
 

02:33:18.640 --> 02:33:20.590 align:start position:0%
most of it is decayed and then we are
using<02:33:18.920><c> the</c><02:33:19.000><c> fused</c><02:33:19.319><c> implementation</c><02:33:19.840><c> of</c><02:33:19.920><c> ATM</c><02:33:20.200><c> W</c>

02:33:20.590 --> 02:33:20.600 align:start position:0%
using the fused implementation of ATM W
 

02:33:20.600 --> 02:33:22.550 align:start position:0%
using the fused implementation of ATM W
which<02:33:20.680><c> will</c><02:33:20.840><c> be</c><02:33:21.000><c> a</c><02:33:21.160><c> lot</c><02:33:21.399><c> faster</c><02:33:22.240><c> so</c><02:33:22.359><c> if</c><02:33:22.439><c> you</c>

02:33:22.550 --> 02:33:22.560 align:start position:0%
which will be a lot faster so if you
 

02:33:22.560 --> 02:33:24.830 align:start position:0%
which will be a lot faster so if you
have<02:33:22.680><c> it</c><02:33:22.800><c> available</c><02:33:23.319><c> I</c><02:33:23.439><c> would</c><02:33:24.279><c> advise</c><02:33:24.560><c> you</c><02:33:24.680><c> to</c>

02:33:24.830 --> 02:33:24.840 align:start position:0%
have it available I would advise you to
 

02:33:24.840 --> 02:33:26.670 align:start position:0%
have it available I would advise you to
use<02:33:25.000><c> it</c><02:33:25.479><c> I'm</c><02:33:25.600><c> not</c><02:33:25.760><c> actually</c><02:33:26.000><c> 100%</c><02:33:26.359><c> sure</c><02:33:26.560><c> why</c>

02:33:26.670 --> 02:33:26.680 align:start position:0%
use it I'm not actually 100% sure why
 

02:33:26.680 --> 02:33:28.550 align:start position:0%
use it I'm not actually 100% sure why
they<02:33:26.800><c> don't</c><02:33:26.960><c> default</c><02:33:27.319><c> to</c><02:33:27.439><c> it</c><02:33:27.560><c> it</c><02:33:27.640><c> seems</c><02:33:27.880><c> fairly</c>

02:33:28.550 --> 02:33:28.560 align:start position:0%
they don't default to it it seems fairly
 

02:33:28.560 --> 02:33:29.550 align:start position:0%
they don't default to it it seems fairly
benign<02:33:28.880><c> and</c>

02:33:29.550 --> 02:33:29.560 align:start position:0%
benign and
 

02:33:29.560 --> 02:33:31.590 align:start position:0%
benign and
harmless<02:33:30.560><c> and</c><02:33:30.760><c> also</c><02:33:31.000><c> because</c><02:33:31.200><c> we</c><02:33:31.279><c> are</c><02:33:31.399><c> using</c>

02:33:31.590 --> 02:33:31.600 align:start position:0%
harmless and also because we are using
 

02:33:31.600 --> 02:33:33.990 align:start position:0%
harmless and also because we are using
the<02:33:31.680><c> fused</c><02:33:32.000><c> implementation</c><02:33:32.640><c> I</c><02:33:32.760><c> think</c><02:33:33.640><c> this</c><02:33:33.760><c> is</c>

02:33:33.990 --> 02:33:34.000 align:start position:0%
the fused implementation I think this is
 

02:33:34.000 --> 02:33:37.469 align:start position:0%
the fused implementation I think this is
why<02:33:34.200><c> we</c><02:33:34.399><c> have</c><02:33:34.640><c> dropped</c><02:33:35.960><c> um</c><02:33:36.960><c> notice</c><02:33:37.279><c> that</c><02:33:37.399><c> the</c>

02:33:37.469 --> 02:33:37.479 align:start position:0%
why we have dropped um notice that the
 

02:33:37.479 --> 02:33:39.269 align:start position:0%
why we have dropped um notice that the
running<02:33:37.720><c> time</c><02:33:37.840><c> used</c><02:33:38.000><c> to</c><02:33:38.080><c> be</c><02:33:38.200><c> 93</c><02:33:38.680><c> milliseconds</c>

02:33:39.269 --> 02:33:39.279 align:start position:0%
running time used to be 93 milliseconds
 

02:33:39.279 --> 02:33:41.190 align:start position:0%
running time used to be 93 milliseconds
per<02:33:39.520><c> step</c><02:33:40.000><c> and</c><02:33:40.120><c> we're</c><02:33:40.279><c> now</c><02:33:40.520><c> down</c><02:33:40.680><c> to</c><02:33:40.880><c> 90</c>

02:33:41.190 --> 02:33:41.200 align:start position:0%
per step and we're now down to 90
 

02:33:41.200 --> 02:33:43.110 align:start position:0%
per step and we're now down to 90
milliseconds<02:33:41.720><c> per</c><02:33:41.960><c> step</c><02:33:42.520><c> because</c><02:33:42.720><c> of</c><02:33:42.840><c> using</c>

02:33:43.110 --> 02:33:43.120 align:start position:0%
milliseconds per step because of using
 

02:33:43.120 --> 02:33:46.269 align:start position:0%
milliseconds per step because of using
the<02:33:43.279><c> fused</c><02:33:43.840><c> atom</c><02:33:44.120><c> W</c><02:33:44.760><c> Optimizer</c><02:33:45.760><c> so</c><02:33:46.000><c> in</c><02:33:46.120><c> a</c>

02:33:46.269 --> 02:33:46.279 align:start position:0%
the fused atom W Optimizer so in a
 

02:33:46.279 --> 02:33:48.870 align:start position:0%
the fused atom W Optimizer so in a
single<02:33:47.279><c> commit</c><02:33:47.720><c> here</c><02:33:48.120><c> we</c><02:33:48.240><c> are</c><02:33:48.399><c> introducing</c>

02:33:48.870 --> 02:33:48.880 align:start position:0%
single commit here we are introducing
 

02:33:48.880 --> 02:33:51.790 align:start position:0%
single commit here we are introducing
fused<02:33:49.240><c> atom</c><02:33:50.000><c> getting</c><02:33:51.000><c> improvements</c><02:33:51.479><c> on</c><02:33:51.600><c> the</c>

02:33:51.790 --> 02:33:51.800 align:start position:0%
fused atom getting improvements on the
 

02:33:51.800 --> 02:33:54.389 align:start position:0%
fused atom getting improvements on the
time<02:33:52.319><c> and</c><02:33:52.479><c> we're</c><02:33:52.720><c> adding</c><02:33:53.399><c> or</c><02:33:53.640><c> changing</c><02:33:54.240><c> the</c>

02:33:54.389 --> 02:33:54.399 align:start position:0%
time and we're adding or changing the
 

02:33:54.399 --> 02:33:56.190 align:start position:0%
time and we're adding or changing the
weight<02:33:54.640><c> Decay</c><02:33:55.439><c> but</c><02:33:55.560><c> we're</c><02:33:55.720><c> only</c><02:33:55.960><c> weight</c>

02:33:56.190 --> 02:33:56.200 align:start position:0%
weight Decay but we're only weight
 

02:33:56.200 --> 02:33:58.110 align:start position:0%
weight Decay but we're only weight
decaying<02:33:56.720><c> the</c><02:33:56.840><c> two</c><02:33:57.000><c> dimensional</c><02:33:57.399><c> parameters</c>

02:33:58.110 --> 02:33:58.120 align:start position:0%
decaying the two dimensional parameters
 

02:33:58.120 --> 02:33:59.990 align:start position:0%
decaying the two dimensional parameters
the<02:33:58.319><c> embeddings</c><02:33:59.000><c> and</c><02:33:59.160><c> the</c><02:33:59.359><c> matrices</c><02:33:59.840><c> that</c>

02:33:59.990 --> 02:34:00.000 align:start position:0%
the embeddings and the matrices that
 

02:34:00.000 --> 02:34:03.590 align:start position:0%
the embeddings and the matrices that
participate<02:34:00.399><c> in</c><02:34:00.840><c> linear</c><02:34:01.840><c> so</c><02:34:02.160><c> that</c><02:34:02.439><c> is</c><02:34:03.200><c> this</c>

02:34:03.590 --> 02:34:03.600 align:start position:0%
participate in linear so that is this
 

02:34:03.600 --> 02:34:06.910 align:start position:0%
participate in linear so that is this
and<02:34:03.840><c> we</c><02:34:03.960><c> can</c><02:34:04.279><c> take</c><02:34:04.520><c> this</c><02:34:04.920><c> out</c><02:34:05.920><c> and</c><02:34:06.240><c> uh</c><02:34:06.439><c> yeah</c>

02:34:06.910 --> 02:34:06.920 align:start position:0%
and we can take this out and uh yeah
 

02:34:06.920 --> 02:34:10.190 align:start position:0%
and we can take this out and uh yeah
that<02:34:07.240><c> is</c><02:34:07.880><c> it</c><02:34:08.160><c> for</c><02:34:08.479><c> this</c><02:34:08.640><c> line</c><02:34:09.600><c> one</c><02:34:09.720><c> more</c><02:34:09.960><c> quick</c>

02:34:10.190 --> 02:34:10.200 align:start position:0%
that is it for this line one more quick
 

02:34:10.200 --> 02:34:11.950 align:start position:0%
that is it for this line one more quick
note<02:34:10.479><c> before</c><02:34:10.680><c> we</c><02:34:10.800><c> continue</c><02:34:11.240><c> here</c><02:34:11.640><c> I</c><02:34:11.760><c> just</c><02:34:11.840><c> want</c>

02:34:11.950 --> 02:34:11.960 align:start position:0%
note before we continue here I just want
 

02:34:11.960 --> 02:34:13.469 align:start position:0%
note before we continue here I just want
to<02:34:12.120><c> point</c><02:34:12.279><c> out</c><02:34:12.479><c> that</c><02:34:12.640><c> the</c><02:34:12.920><c> relationship</c>

02:34:13.469 --> 02:34:13.479 align:start position:0%
to point out that the relationship
 

02:34:13.479 --> 02:34:15.870 align:start position:0%
to point out that the relationship
between<02:34:14.080><c> weight</c><02:34:14.319><c> Decay</c><02:34:14.760><c> learning</c><02:34:15.120><c> rate</c><02:34:15.520><c> batch</c>

02:34:15.870 --> 02:34:15.880 align:start position:0%
between weight Decay learning rate batch
 

02:34:15.880 --> 02:34:18.510 align:start position:0%
between weight Decay learning rate batch
size<02:34:16.560><c> the</c><02:34:16.720><c> atom</c><02:34:17.080><c> parameters</c><02:34:17.520><c> beta</c><02:34:17.760><c> 1</c><02:34:17.960><c> beta</c><02:34:18.240><c> 2</c>

02:34:18.510 --> 02:34:18.520 align:start position:0%
size the atom parameters beta 1 beta 2
 

02:34:18.520 --> 02:34:20.870 align:start position:0%
size the atom parameters beta 1 beta 2
the<02:34:18.680><c> Epsilon</c><02:34:19.240><c> and</c><02:34:19.359><c> so</c><02:34:19.520><c> on</c><02:34:20.080><c> these</c><02:34:20.200><c> are</c><02:34:20.439><c> very</c>

02:34:20.870 --> 02:34:20.880 align:start position:0%
the Epsilon and so on these are very
 

02:34:20.880 --> 02:34:22.630 align:start position:0%
the Epsilon and so on these are very
complicated<02:34:21.880><c> uh</c><02:34:22.080><c> mathematical</c>

02:34:22.630 --> 02:34:22.640 align:start position:0%
complicated uh mathematical
 

02:34:22.640 --> 02:34:24.309 align:start position:0%
complicated uh mathematical
relationships<02:34:23.319><c> in</c><02:34:23.479><c> the</c><02:34:23.640><c> optimization</c>

02:34:24.309 --> 02:34:24.319 align:start position:0%
relationships in the optimization
 

02:34:24.319 --> 02:34:27.790 align:start position:0%
relationships in the optimization
literature<02:34:25.319><c> and</c><02:34:25.960><c> um</c><02:34:26.920><c> for</c><02:34:27.080><c> the</c><02:34:27.200><c> most</c><02:34:27.359><c> part</c><02:34:27.520><c> I'm</c>

02:34:27.790 --> 02:34:27.800 align:start position:0%
literature and um for the most part I'm
 

02:34:27.800 --> 02:34:29.269 align:start position:0%
literature and um for the most part I'm
in<02:34:27.920><c> this</c><02:34:28.080><c> video</c><02:34:28.279><c> I'm</c><02:34:28.399><c> just</c><02:34:28.479><c> trying</c><02:34:28.720><c> to</c><02:34:28.920><c> copy</c>

02:34:29.269 --> 02:34:29.279 align:start position:0%
in this video I'm just trying to copy
 

02:34:29.279 --> 02:34:31.389 align:start position:0%
in this video I'm just trying to copy
paste<02:34:29.640><c> the</c><02:34:29.760><c> settings</c><02:34:30.120><c> that</c><02:34:30.279><c> open</c><02:34:30.520><c> AI</c><02:34:30.840><c> used</c><02:34:31.279><c> but</c>

02:34:31.389 --> 02:34:31.399 align:start position:0%
paste the settings that open AI used but
 

02:34:31.399 --> 02:34:33.469 align:start position:0%
paste the settings that open AI used but
this<02:34:31.520><c> is</c><02:34:31.600><c> a</c><02:34:31.800><c> complicated</c><02:34:32.319><c> topic</c><02:34:33.000><c> uh</c><02:34:33.160><c> quite</c>

02:34:33.469 --> 02:34:33.479 align:start position:0%
this is a complicated topic uh quite
 

02:34:33.479 --> 02:34:36.230 align:start position:0%
this is a complicated topic uh quite
deep<02:34:34.240><c> and</c><02:34:34.680><c> um</c><02:34:35.479><c> yeah</c><02:34:35.680><c> in</c><02:34:35.800><c> this</c><02:34:35.880><c> video</c><02:34:36.080><c> I</c><02:34:36.160><c> just</c>

02:34:36.230 --> 02:34:36.240 align:start position:0%
deep and um yeah in this video I just
 

02:34:36.240 --> 02:34:38.070 align:start position:0%
deep and um yeah in this video I just
want<02:34:36.359><c> to</c><02:34:36.560><c> copy</c><02:34:36.880><c> the</c><02:34:37.000><c> parameters</c><02:34:37.560><c> because</c><02:34:37.960><c> it's</c>

02:34:38.070 --> 02:34:38.080 align:start position:0%
want to copy the parameters because it's
 

02:34:38.080 --> 02:34:39.550 align:start position:0%
want to copy the parameters because it's
a<02:34:38.240><c> whole</c><02:34:38.399><c> different</c><02:34:38.720><c> video</c><02:34:38.960><c> to</c><02:34:39.160><c> really</c><02:34:39.359><c> talk</c>

02:34:39.550 --> 02:34:39.560 align:start position:0%
a whole different video to really talk
 

02:34:39.560 --> 02:34:41.309 align:start position:0%
a whole different video to really talk
about<02:34:39.840><c> that</c><02:34:40.040><c> in</c><02:34:40.200><c> detail</c><02:34:40.680><c> and</c><02:34:40.880><c> give</c><02:34:41.000><c> it</c><02:34:41.120><c> a</c>

02:34:41.309 --> 02:34:41.319 align:start position:0%
about that in detail and give it a
 

02:34:41.319 --> 02:34:42.630 align:start position:0%
about that in detail and give it a
proper<02:34:41.600><c> Justice</c><02:34:42.000><c> instead</c><02:34:42.240><c> of</c><02:34:42.319><c> just</c><02:34:42.479><c> high</c>

02:34:42.630 --> 02:34:42.640 align:start position:0%
proper Justice instead of just high
 

02:34:42.640 --> 02:34:43.670 align:start position:0%
proper Justice instead of just high
level

02:34:43.670 --> 02:34:43.680 align:start position:0%
level
 

02:34:43.680 --> 02:34:45.590 align:start position:0%
level
intuitions<02:34:44.680><c> uh</c><02:34:44.800><c> now</c><02:34:45.000><c> the</c><02:34:45.120><c> next</c><02:34:45.279><c> thing</c><02:34:45.399><c> that</c><02:34:45.520><c> I</c>

02:34:45.590 --> 02:34:45.600 align:start position:0%
intuitions uh now the next thing that I
 

02:34:45.600 --> 02:34:48.230 align:start position:0%
intuitions uh now the next thing that I
want<02:34:45.680><c> to</c><02:34:45.800><c> move</c><02:34:46.000><c> on</c><02:34:46.120><c> to</c><02:34:46.479><c> is</c><02:34:46.920><c> that</c><02:34:47.920><c> uh</c><02:34:48.080><c> this</c>

02:34:48.230 --> 02:34:48.240 align:start position:0%
want to move on to is that uh this
 

02:34:48.240 --> 02:34:49.710 align:start position:0%
want to move on to is that uh this
paragraph<02:34:48.640><c> here</c><02:34:48.800><c> by</c><02:34:48.920><c> the</c><02:34:49.000><c> way</c><02:34:49.120><c> we're</c><02:34:49.240><c> going</c><02:34:49.319><c> to</c>

02:34:49.710 --> 02:34:49.720 align:start position:0%
paragraph here by the way we're going to
 

02:34:49.720 --> 02:34:51.910 align:start position:0%
paragraph here by the way we're going to
turn<02:34:50.120><c> back</c><02:34:50.279><c> around</c><02:34:50.520><c> to</c><02:34:50.800><c> when</c><02:34:51.000><c> we</c><02:34:51.439><c> improve</c><02:34:51.760><c> our</c>

02:34:51.910 --> 02:34:51.920 align:start position:0%
turn back around to when we improve our
 

02:34:51.920 --> 02:34:54.349 align:start position:0%
turn back around to when we improve our
data<02:34:52.120><c> loader</c><02:34:52.960><c> for</c><02:34:53.120><c> now</c><02:34:53.359><c> I</c><02:34:53.439><c> want</c><02:34:53.560><c> to</c><02:34:53.680><c> swing</c><02:34:54.120><c> back</c>

02:34:54.349 --> 02:34:54.359 align:start position:0%
data loader for now I want to swing back
 

02:34:54.359 --> 02:34:56.269 align:start position:0%
data loader for now I want to swing back
around

02:34:56.269 --> 02:34:56.279 align:start position:0%
around
 

02:34:56.279 --> 02:35:01.110 align:start position:0%
around
to<02:34:57.279><c> this</c>

02:35:01.110 --> 02:35:01.120 align:start position:0%
 
 

02:35:01.120 --> 02:35:04.230 align:start position:0%
 
table<02:35:02.120><c> where</c><02:35:02.279><c> you</c><02:35:02.359><c> will</c><02:35:02.520><c> notice</c><02:35:02.960><c> that</c><02:35:03.439><c> um</c><02:35:04.040><c> for</c>

02:35:04.230 --> 02:35:04.240 align:start position:0%
table where you will notice that um for
 

02:35:04.240 --> 02:35:06.550 align:start position:0%
table where you will notice that um for
different<02:35:04.840><c> models</c><02:35:05.840><c> we</c><02:35:06.000><c> of</c><02:35:06.120><c> course</c><02:35:06.319><c> have</c>

02:35:06.550 --> 02:35:06.560 align:start position:0%
different models we of course have
 

02:35:06.560 --> 02:35:08.070 align:start position:0%
different models we of course have
different<02:35:07.120><c> U</c><02:35:07.240><c> hyper</c><02:35:07.520><c> parameters</c><02:35:07.880><c> for</c><02:35:08.000><c> the</c>

02:35:08.070 --> 02:35:08.080 align:start position:0%
different U hyper parameters for the
 

02:35:08.080 --> 02:35:09.990 align:start position:0%
different U hyper parameters for the
Transformer<02:35:08.680><c> that</c><02:35:08.880><c> dictate</c><02:35:09.359><c> the</c><02:35:09.560><c> size</c><02:35:09.760><c> of</c><02:35:09.880><c> the</c>

02:35:09.990 --> 02:35:10.000 align:start position:0%
Transformer that dictate the size of the
 

02:35:10.000 --> 02:35:11.990 align:start position:0%
Transformer that dictate the size of the
Transformer<02:35:10.439><c> Network</c><02:35:11.399><c> we</c><02:35:11.560><c> also</c><02:35:11.800><c> have</c><02:35:11.920><c> a</c>

02:35:11.990 --> 02:35:12.000 align:start position:0%
Transformer Network we also have a
 

02:35:12.000 --> 02:35:13.349 align:start position:0%
Transformer Network we also have a
different<02:35:12.240><c> learning</c><02:35:12.600><c> rate</c><02:35:12.840><c> so</c><02:35:12.960><c> we're</c><02:35:13.120><c> seeing</c>

02:35:13.349 --> 02:35:13.359 align:start position:0%
different learning rate so we're seeing
 

02:35:13.359 --> 02:35:14.910 align:start position:0%
different learning rate so we're seeing
the<02:35:13.479><c> pattern</c><02:35:13.880><c> that</c><02:35:14.040><c> the</c><02:35:14.160><c> bigger</c><02:35:14.399><c> networks</c><02:35:14.760><c> are</c>

02:35:14.910 --> 02:35:14.920 align:start position:0%
the pattern that the bigger networks are
 

02:35:14.920 --> 02:35:16.550 align:start position:0%
the pattern that the bigger networks are
trained<02:35:15.200><c> with</c><02:35:15.359><c> slightly</c><02:35:15.680><c> lower</c><02:35:15.960><c> learning</c>

02:35:16.550 --> 02:35:16.560 align:start position:0%
trained with slightly lower learning
 

02:35:16.560 --> 02:35:20.309 align:start position:0%
trained with slightly lower learning
rates<02:35:17.560><c> and</c><02:35:17.680><c> we</c><02:35:17.840><c> also</c><02:35:18.000><c> see</c><02:35:18.240><c> this</c><02:35:18.399><c> batch</c><02:35:18.760><c> size</c>

02:35:20.309 --> 02:35:20.319 align:start position:0%
rates and we also see this batch size
 

02:35:20.319 --> 02:35:22.190 align:start position:0%
rates and we also see this batch size
where<02:35:20.720><c> in</c><02:35:21.120><c> in</c><02:35:21.200><c> the</c><02:35:21.319><c> small</c><02:35:21.600><c> networks</c><02:35:21.960><c> they</c><02:35:22.080><c> use</c>

02:35:22.190 --> 02:35:22.200 align:start position:0%
where in in the small networks they use
 

02:35:22.200 --> 02:35:23.830 align:start position:0%
where in in the small networks they use
a<02:35:22.319><c> smaller</c><02:35:22.640><c> batch</c><02:35:22.920><c> size</c><02:35:23.279><c> and</c><02:35:23.399><c> in</c><02:35:23.520><c> the</c><02:35:23.640><c> bigger</c>

02:35:23.830 --> 02:35:23.840 align:start position:0%
a smaller batch size and in the bigger
 

02:35:23.840 --> 02:35:26.389 align:start position:0%
a smaller batch size and in the bigger
networks<02:35:24.200><c> they</c><02:35:24.319><c> use</c><02:35:24.479><c> a</c><02:35:24.720><c> bigger</c><02:35:24.960><c> batch</c><02:35:25.399><c> size</c>

02:35:26.389 --> 02:35:26.399 align:start position:0%
networks they use a bigger batch size
 

02:35:26.399 --> 02:35:28.710 align:start position:0%
networks they use a bigger batch size
now<02:35:26.760><c> the</c><02:35:26.960><c> problem</c><02:35:27.319><c> with</c><02:35:27.520><c> for</c><02:35:27.880><c> us</c><02:35:28.160><c> is</c><02:35:28.399><c> we</c><02:35:28.520><c> can't</c>

02:35:28.710 --> 02:35:28.720 align:start position:0%
now the problem with for us is we can't
 

02:35:28.720 --> 02:35:31.750 align:start position:0%
now the problem with for us is we can't
just<02:35:28.880><c> use</c><02:35:29.120><c> 0.5</c><02:35:29.600><c> million</c><02:35:29.960><c> batch</c><02:35:30.279><c> size</c><02:35:31.120><c> because</c>

02:35:31.750 --> 02:35:31.760 align:start position:0%
just use 0.5 million batch size because
 

02:35:31.760 --> 02:35:33.510 align:start position:0%
just use 0.5 million batch size because
uh<02:35:31.920><c> if</c><02:35:32.120><c> I</c><02:35:32.279><c> just</c><02:35:32.439><c> try</c><02:35:32.680><c> to</c><02:35:32.840><c> come</c><02:35:33.000><c> in</c><02:35:33.120><c> here</c><02:35:33.279><c> and</c><02:35:33.399><c> I</c>

02:35:33.510 --> 02:35:33.520 align:start position:0%
uh if I just try to come in here and I
 

02:35:33.520 --> 02:35:37.990 align:start position:0%
uh if I just try to come in here and I
try<02:35:33.680><c> to</c><02:35:33.880><c> set</c><02:35:34.800><c> uh</c><02:35:34.960><c> this</c><02:35:35.520><c> uh</c><02:35:35.720><c> B</c><02:35:36.279><c> where</c><02:35:36.399><c> is</c><02:35:36.560><c> my</c>

02:35:37.990 --> 02:35:38.000 align:start position:0%
try to set uh this uh B where is my
 

02:35:38.000 --> 02:35:40.309 align:start position:0%
try to set uh this uh B where is my
b

02:35:40.309 --> 02:35:40.319 align:start position:0%
b
 

02:35:40.319 --> 02:35:44.150 align:start position:0%
b
um<02:35:41.319><c> b</c>

02:35:44.150 --> 02:35:44.160 align:start position:0%
 
 

02:35:44.160 --> 02:35:46.750 align:start position:0%
 
equals<02:35:45.160><c> where</c><02:35:45.439><c> where</c><02:35:45.560><c> do</c><02:35:45.640><c> I</c><02:35:45.760><c> call</c><02:35:45.920><c> the</c><02:35:46.040><c> DAT</c>

02:35:46.750 --> 02:35:46.760 align:start position:0%
equals where where do I call the DAT
 

02:35:46.760 --> 02:35:51.110 align:start position:0%
equals where where do I call the DAT
okay<02:35:46.920><c> b</c><02:35:47.080><c> equal</c><02:35:47.359><c> 16</c><02:35:48.040><c> if</c><02:35:48.160><c> I</c><02:35:48.279><c> try</c><02:35:48.479><c> to</c><02:35:48.640><c> set</c><02:35:49.279><c> um</c>

02:35:51.110 --> 02:35:51.120 align:start position:0%
okay b equal 16 if I try to set um
 

02:35:51.120 --> 02:35:52.349 align:start position:0%
okay b equal 16 if I try to set um
well<02:35:51.319><c> well</c><02:35:51.479><c> we</c><02:35:51.560><c> have</c><02:35:51.640><c> to</c><02:35:51.720><c> be</c><02:35:51.840><c> careful</c><02:35:52.080><c> it's</c><02:35:52.200><c> not</c>

02:35:52.349 --> 02:35:52.359 align:start position:0%
well well we have to be careful it's not
 

02:35:52.359 --> 02:35:54.230 align:start position:0%
well well we have to be careful it's not
0.5<02:35:52.880><c> million</c><02:35:53.359><c> because</c><02:35:53.560><c> this</c><02:35:53.680><c> is</c><02:35:53.800><c> the</c><02:35:53.920><c> badge</c>

02:35:54.230 --> 02:35:54.240 align:start position:0%
0.5 million because this is the badge
 

02:35:54.240 --> 02:35:56.950 align:start position:0%
0.5 million because this is the badge
size<02:35:55.080><c> in</c><02:35:55.240><c> the</c><02:35:55.359><c> number</c><02:35:55.560><c> of</c><02:35:55.760><c> tokens</c><02:35:56.720><c> every</c>

02:35:56.950 --> 02:35:56.960 align:start position:0%
size in the number of tokens every
 

02:35:56.960 --> 02:36:00.230 align:start position:0%
size in the number of tokens every
single<02:35:57.200><c> one</c><02:35:57.319><c> of</c><02:35:57.439><c> our</c><02:35:57.640><c> rows</c><02:35:58.319><c> is24</c><02:35:59.279><c> tokens</c><02:36:00.080><c> so</c>

02:36:00.230 --> 02:36:00.240 align:start position:0%
single one of our rows is24 tokens so
 

02:36:00.240 --> 02:36:04.710 align:start position:0%
single one of our rows is24 tokens so
0.5<02:36:01.080><c> E6</c><02:36:01.920><c> 1</c><02:36:02.120><c> million</c><02:36:02.479><c> divide</c><02:36:03.120><c> 1024</c><02:36:04.120><c> this</c><02:36:04.279><c> would</c>

02:36:04.710 --> 02:36:04.720 align:start position:0%
0.5 E6 1 million divide 1024 this would
 

02:36:04.720 --> 02:36:06.349 align:start position:0%
0.5 E6 1 million divide 1024 this would
need<02:36:05.200><c> about</c><02:36:05.600><c> a</c>

02:36:06.349 --> 02:36:06.359 align:start position:0%
need about a
 

02:36:06.359 --> 02:36:09.590 align:start position:0%
need about a
488<02:36:07.359><c> match</c><02:36:07.680><c> size</c><02:36:08.359><c> so</c><02:36:08.800><c> the</c><02:36:08.920><c> problem</c><02:36:09.160><c> is</c><02:36:09.279><c> I</c><02:36:09.399><c> can't</c>

02:36:09.590 --> 02:36:09.600 align:start position:0%
488 match size so the problem is I can't
 

02:36:09.600 --> 02:36:12.469 align:start position:0%
488 match size so the problem is I can't
come<02:36:09.720><c> in</c><02:36:09.920><c> here</c><02:36:10.120><c> and</c><02:36:10.319><c> set</c><02:36:10.600><c> this</c><02:36:10.720><c> to</c><02:36:11.279><c> 488</c><02:36:12.279><c> uh</c>

02:36:12.469 --> 02:36:12.479 align:start position:0%
come in here and set this to 488 uh
 

02:36:12.479 --> 02:36:15.349 align:start position:0%
come in here and set this to 488 uh
because<02:36:12.920><c> my</c><02:36:13.040><c> GPU</c><02:36:13.479><c> would</c><02:36:13.760><c> explode</c><02:36:14.760><c> um</c><02:36:15.240><c> this</c>

02:36:15.349 --> 02:36:15.359 align:start position:0%
because my GPU would explode um this
 

02:36:15.359 --> 02:36:18.030 align:start position:0%
because my GPU would explode um this
would<02:36:15.560><c> not</c><02:36:15.800><c> fit</c><02:36:16.000><c> for</c><02:36:16.240><c> sure</c><02:36:17.240><c> and</c><02:36:17.359><c> so</c><02:36:17.760><c> but</c><02:36:17.880><c> we</c>

02:36:18.030 --> 02:36:18.040 align:start position:0%
would not fit for sure and so but we
 

02:36:18.040 --> 02:36:20.830 align:start position:0%
would not fit for sure and so but we
still<02:36:18.240><c> want</c><02:36:18.399><c> to</c><02:36:18.600><c> use</c><02:36:19.600><c> this</c><02:36:19.760><c> batch</c><02:36:20.080><c> size</c>

02:36:20.830 --> 02:36:20.840 align:start position:0%
still want to use this batch size
 

02:36:20.840 --> 02:36:22.510 align:start position:0%
still want to use this batch size
because<02:36:21.359><c> again</c><02:36:21.560><c> as</c><02:36:21.680><c> I</c><02:36:21.760><c> mentioned</c><02:36:22.120><c> the</c><02:36:22.240><c> batch</c>

02:36:22.510 --> 02:36:22.520 align:start position:0%
because again as I mentioned the batch
 

02:36:22.520 --> 02:36:24.590 align:start position:0%
because again as I mentioned the batch
size<02:36:22.880><c> is</c><02:36:23.160><c> correlated</c><02:36:23.680><c> with</c><02:36:23.840><c> all</c><02:36:23.960><c> the</c><02:36:24.080><c> other</c>

02:36:24.590 --> 02:36:24.600 align:start position:0%
size is correlated with all the other
 

02:36:24.600 --> 02:36:26.309 align:start position:0%
size is correlated with all the other
optimization<02:36:25.160><c> hyper</c><02:36:25.399><c> parameters</c><02:36:26.080><c> and</c><02:36:26.240><c> the</c>

02:36:26.309 --> 02:36:26.319 align:start position:0%
optimization hyper parameters and the
 

02:36:26.319 --> 02:36:28.269 align:start position:0%
optimization hyper parameters and the
learning<02:36:26.640><c> rates</c><02:36:26.840><c> and</c><02:36:27.000><c> so</c><02:36:27.120><c> on</c><02:36:27.720><c> so</c><02:36:27.880><c> we</c><02:36:28.000><c> want</c><02:36:28.120><c> to</c>

02:36:28.269 --> 02:36:28.279 align:start position:0%
learning rates and so on so we want to
 

02:36:28.279 --> 02:36:29.670 align:start position:0%
learning rates and so on so we want to
have<02:36:28.359><c> a</c><02:36:28.520><c> faithful</c><02:36:28.920><c> representation</c><02:36:29.439><c> of</c><02:36:29.560><c> all</c>

02:36:29.670 --> 02:36:29.680 align:start position:0%
have a faithful representation of all
 

02:36:29.680 --> 02:36:31.389 align:start position:0%
have a faithful representation of all
the<02:36:29.800><c> hyper</c><02:36:30.040><c> parameters</c><02:36:30.840><c> and</c><02:36:30.960><c> therefore</c><02:36:31.240><c> we</c>

02:36:31.389 --> 02:36:31.399 align:start position:0%
the hyper parameters and therefore we
 

02:36:31.399 --> 02:36:34.910 align:start position:0%
the hyper parameters and therefore we
need<02:36:31.640><c> to</c><02:36:32.319><c> uh</c><02:36:32.600><c> use</c><02:36:32.840><c> a</c><02:36:33.000><c> bat</c><02:36:33.279><c> size</c><02:36:33.479><c> of</c><02:36:33.680><c> .5</c><02:36:34.160><c> million</c>

02:36:34.910 --> 02:36:34.920 align:start position:0%
need to uh use a bat size of .5 million
 

02:36:34.920 --> 02:36:37.110 align:start position:0%
need to uh use a bat size of .5 million
roughly<02:36:35.920><c> but</c><02:36:36.040><c> the</c><02:36:36.160><c> question</c><02:36:36.359><c> is</c><02:36:36.520><c> how</c><02:36:36.640><c> do</c><02:36:36.760><c> we</c>

02:36:37.110 --> 02:36:37.120 align:start position:0%
roughly but the question is how do we
 

02:36:37.120 --> 02:36:39.389 align:start position:0%
roughly but the question is how do we
use<02:36:38.000><c> .5</c><02:36:38.439><c> million</c><02:36:38.680><c> if</c><02:36:38.800><c> we</c><02:36:38.880><c> only</c><02:36:39.040><c> have</c><02:36:39.120><c> a</c><02:36:39.200><c> small</c>

02:36:39.389 --> 02:36:39.399 align:start position:0%
use .5 million if we only have a small
 

02:36:39.399 --> 02:36:41.710 align:start position:0%
use .5 million if we only have a small
GPU<02:36:40.359><c> well</c><02:36:40.520><c> for</c><02:36:40.720><c> that</c><02:36:40.920><c> we</c><02:36:41.040><c> need</c><02:36:41.160><c> to</c><02:36:41.279><c> use</c><02:36:41.520><c> what's</c>

02:36:41.710 --> 02:36:41.720 align:start position:0%
GPU well for that we need to use what's
 

02:36:41.720 --> 02:36:44.230 align:start position:0%
GPU well for that we need to use what's
called<02:36:42.080><c> gradient</c><02:36:42.840><c> accumulation</c><02:36:43.840><c> uh</c><02:36:43.960><c> so</c><02:36:44.120><c> we're</c>

02:36:44.230 --> 02:36:44.240 align:start position:0%
called gradient accumulation uh so we're
 

02:36:44.240 --> 02:36:46.070 align:start position:0%
called gradient accumulation uh so we're
going<02:36:44.359><c> to</c><02:36:44.520><c> turn</c><02:36:44.680><c> to</c><02:36:44.920><c> that</c><02:36:45.120><c> next</c><02:36:45.600><c> and</c><02:36:45.720><c> it</c><02:36:45.800><c> allows</c>

02:36:46.070 --> 02:36:46.080 align:start position:0%
going to turn to that next and it allows
 

02:36:46.080 --> 02:36:48.750 align:start position:0%
going to turn to that next and it allows
us<02:36:46.200><c> to</c><02:36:46.399><c> simulate</c><02:36:46.880><c> in</c><02:36:47.000><c> a</c><02:36:47.160><c> Serial</c><02:36:47.680><c> way</c><02:36:48.479><c> any</c>

02:36:48.750 --> 02:36:48.760 align:start position:0%
us to simulate in a Serial way any
 

02:36:48.760 --> 02:36:51.630 align:start position:0%
us to simulate in a Serial way any
arbitrary<02:36:49.240><c> batch</c><02:36:49.680><c> size</c><02:36:50.040><c> that</c><02:36:50.160><c> we</c><02:36:50.319><c> set</c><02:36:51.200><c> and</c><02:36:51.319><c> so</c>

02:36:51.630 --> 02:36:51.640 align:start position:0%
arbitrary batch size that we set and so
 

02:36:51.640 --> 02:36:54.230 align:start position:0%
arbitrary batch size that we set and so
we<02:36:51.840><c> can</c><02:36:52.080><c> do</c><02:36:52.560><c> a</c><02:36:52.760><c> batch</c><02:36:52.960><c> size</c><02:36:53.120><c> of</c><02:36:53.200><c> .5</c><02:36:53.600><c> million</c><02:36:54.080><c> we</c>

02:36:54.230 --> 02:36:54.240 align:start position:0%
we can do a batch size of .5 million we
 

02:36:54.240 --> 02:36:56.429 align:start position:0%
we can do a batch size of .5 million we
just<02:36:54.399><c> have</c><02:36:54.479><c> to</c><02:36:54.680><c> run</c><02:36:55.160><c> longer</c><02:36:55.920><c> and</c><02:36:56.080><c> we</c><02:36:56.160><c> have</c><02:36:56.279><c> to</c>

02:36:56.429 --> 02:36:56.439 align:start position:0%
just have to run longer and we have to
 

02:36:56.439 --> 02:36:59.309 align:start position:0%
just have to run longer and we have to
process<02:36:56.800><c> multiple</c><02:36:57.399><c> sequences</c><02:36:58.399><c> and</c><02:36:58.680><c> basically</c>

02:36:59.309 --> 02:36:59.319 align:start position:0%
process multiple sequences and basically
 

02:36:59.319 --> 02:37:01.990 align:start position:0%
process multiple sequences and basically
add<02:36:59.560><c> up</c><02:36:59.920><c> all</c><02:37:00.080><c> the</c><02:37:00.240><c> gradients</c><02:37:00.840><c> from</c><02:37:01.080><c> them</c><02:37:01.800><c> to</c>

02:37:01.990 --> 02:37:02.000 align:start position:0%
add up all the gradients from them to
 

02:37:02.000 --> 02:37:04.190 align:start position:0%
add up all the gradients from them to
simulate<02:37:02.399><c> a</c><02:37:02.560><c> batch</c><02:37:02.760><c> size</c><02:37:02.920><c> of</c><02:37:03.000><c> .5</c><02:37:03.359><c> million</c><02:37:04.040><c> so</c>

02:37:04.190 --> 02:37:04.200 align:start position:0%
simulate a batch size of .5 million so
 

02:37:04.200 --> 02:37:05.950 align:start position:0%
simulate a batch size of .5 million so
let's<02:37:04.399><c> turn</c><02:37:04.560><c> to</c><02:37:04.760><c> that</c><02:37:04.960><c> next</c><02:37:05.640><c> okay</c><02:37:05.760><c> so</c><02:37:05.880><c> I</c>

02:37:05.950 --> 02:37:05.960 align:start position:0%
let's turn to that next okay so I
 

02:37:05.960 --> 02:37:07.429 align:start position:0%
let's turn to that next okay so I
started<02:37:06.200><c> the</c><02:37:06.319><c> implementation</c><02:37:06.960><c> right</c><02:37:07.160><c> here</c>

02:37:07.429 --> 02:37:07.439 align:start position:0%
started the implementation right here
 

02:37:07.439 --> 02:37:09.710 align:start position:0%
started the implementation right here
just<02:37:07.600><c> by</c><02:37:07.760><c> adding</c><02:37:08.080><c> these</c><02:37:08.240><c> lines</c><02:37:08.479><c> of</c><02:37:08.640><c> code</c><02:37:09.600><c> and</c>

02:37:09.710 --> 02:37:09.720 align:start position:0%
just by adding these lines of code and
 

02:37:09.720 --> 02:37:12.269 align:start position:0%
just by adding these lines of code and
basically<02:37:10.080><c> what</c><02:37:10.160><c> I</c><02:37:10.319><c> did</c><02:37:10.520><c> is</c><02:37:10.760><c> first</c><02:37:11.319><c> I</c><02:37:11.840><c> set</c><02:37:12.120><c> the</c>

02:37:12.269 --> 02:37:12.279 align:start position:0%
basically what I did is first I set the
 

02:37:12.279 --> 02:37:14.710 align:start position:0%
basically what I did is first I set the
total<02:37:12.600><c> batch</c><02:37:12.840><c> size</c><02:37:13.120><c> that</c><02:37:13.279><c> we</c><02:37:13.439><c> desire</c><02:37:14.359><c> so</c><02:37:14.600><c> this</c>

02:37:14.710 --> 02:37:14.720 align:start position:0%
total batch size that we desire so this
 

02:37:14.720 --> 02:37:17.469 align:start position:0%
total batch size that we desire so this
is<02:37:15.000><c> exactly</c><02:37:15.399><c> .5</c><02:37:15.880><c> million</c><02:37:16.560><c> and</c><02:37:16.680><c> I</c><02:37:16.760><c> used</c><02:37:17.040><c> a</c><02:37:17.200><c> nice</c>

02:37:17.469 --> 02:37:17.479 align:start position:0%
is exactly .5 million and I used a nice
 

02:37:17.479 --> 02:37:19.710 align:start position:0%
is exactly .5 million and I used a nice
number<02:37:17.880><c> a</c><02:37:18.040><c> power</c><02:37:18.279><c> of</c><02:37:18.399><c> two</c><02:37:19.040><c> uh</c><02:37:19.160><c> because</c><02:37:19.520><c> 2</c><02:37:19.600><c> to</c>

02:37:19.710 --> 02:37:19.720 align:start position:0%
number a power of two uh because 2 to
 

02:37:19.720 --> 02:37:23.510 align:start position:0%
number a power of two uh because 2 to
the<02:37:19.800><c> 19</c><02:37:20.399><c> is</c><02:37:21.000><c> 524</c><02:37:21.680><c> 288</c><02:37:22.680><c> so</c><02:37:22.760><c> it's</c><02:37:22.920><c> roughly</c><02:37:23.160><c> .5</c>

02:37:23.510 --> 02:37:23.520 align:start position:0%
the 19 is 524 288 so it's roughly .5
 

02:37:23.520 --> 02:37:26.349 align:start position:0%
the 19 is 524 288 so it's roughly .5
million<02:37:23.840><c> it's</c><02:37:23.960><c> a</c><02:37:24.120><c> nice</c><02:37:24.479><c> number</c><02:37:25.479><c> now</c><02:37:25.800><c> our</c><02:37:26.000><c> micro</c>

02:37:26.349 --> 02:37:26.359 align:start position:0%
million it's a nice number now our micro
 

02:37:26.359 --> 02:37:29.710 align:start position:0%
million it's a nice number now our micro
batch<02:37:26.640><c> size</c><02:37:27.080><c> as</c><02:37:27.200><c> we</c><02:37:27.319><c> call</c><02:37:27.560><c> it</c><02:37:27.760><c> now</c><02:37:28.120><c> is</c><02:37:28.520><c> 16</c><02:37:29.520><c> so</c>

02:37:29.710 --> 02:37:29.720 align:start position:0%
batch size as we call it now is 16 so
 

02:37:29.720 --> 02:37:32.150 align:start position:0%
batch size as we call it now is 16 so
this<02:37:29.840><c> is</c><02:37:30.080><c> going</c><02:37:30.240><c> to</c><02:37:30.399><c> be</c><02:37:31.000><c> we</c><02:37:31.120><c> still</c><02:37:31.279><c> have</c><02:37:31.439><c> B</c><02:37:31.680><c> BYT</c>

02:37:32.150 --> 02:37:32.160 align:start position:0%
this is going to be we still have B BYT
 

02:37:32.160 --> 02:37:34.790 align:start position:0%
this is going to be we still have B BYT
in<02:37:32.399><c> the</c><02:37:32.520><c> SE</c><02:37:33.000><c> that</c><02:37:33.160><c> go</c><02:37:33.399><c> into</c><02:37:34.040><c> the</c><02:37:34.240><c> Transformer</c>

02:37:34.790 --> 02:37:34.800 align:start position:0%
in the SE that go into the Transformer
 

02:37:34.800 --> 02:37:36.790 align:start position:0%
in the SE that go into the Transformer
and<02:37:34.920><c> do</c><02:37:35.120><c> forward</c><02:37:35.600><c> backward</c><02:37:36.359><c> but</c><02:37:36.479><c> we're</c><02:37:36.640><c> not</c>

02:37:36.790 --> 02:37:36.800 align:start position:0%
and do forward backward but we're not
 

02:37:36.800 --> 02:37:38.309 align:start position:0%
and do forward backward but we're not
going<02:37:36.880><c> to</c><02:37:37.000><c> do</c><02:37:37.120><c> an</c><02:37:37.240><c> update</c><02:37:37.760><c> right</c><02:37:38.080><c> we're</c><02:37:38.200><c> going</c>

02:37:38.309 --> 02:37:38.319 align:start position:0%
going to do an update right we're going
 

02:37:38.319 --> 02:37:40.750 align:start position:0%
going to do an update right we're going
to<02:37:38.399><c> do</c><02:37:38.520><c> many</c><02:37:38.720><c> forward</c><02:37:39.479><c> backwards</c><02:37:40.479><c> we're</c><02:37:40.680><c> going</c>

02:37:40.750 --> 02:37:40.760 align:start position:0%
to do many forward backwards we're going
 

02:37:40.760 --> 02:37:42.469 align:start position:0%
to do many forward backwards we're going
to<02:37:41.160><c> and</c><02:37:41.279><c> those</c><02:37:41.439><c> gradients</c><02:37:41.840><c> are</c><02:37:42.040><c> all</c><02:37:42.200><c> going</c><02:37:42.279><c> to</c>

02:37:42.469 --> 02:37:42.479 align:start position:0%
to and those gradients are all going to
 

02:37:42.479 --> 02:37:44.429 align:start position:0%
to and those gradients are all going to
plus<02:37:42.720><c> equals</c><02:37:43.200><c> on</c><02:37:43.399><c> the</c><02:37:43.640><c> parameter</c><02:37:44.000><c> gradients</c>

02:37:44.429 --> 02:37:44.439 align:start position:0%
plus equals on the parameter gradients
 

02:37:44.439 --> 02:37:46.190 align:start position:0%
plus equals on the parameter gradients
they're<02:37:44.600><c> all</c><02:37:44.720><c> going</c><02:37:44.800><c> to</c><02:37:45.000><c> add</c><02:37:45.200><c> up</c><02:37:45.960><c> so</c><02:37:46.080><c> we're</c>

02:37:46.190 --> 02:37:46.200 align:start position:0%
they're all going to add up so we're
 

02:37:46.200 --> 02:37:48.550 align:start position:0%
they're all going to add up so we're
going<02:37:46.279><c> to</c><02:37:46.359><c> do</c><02:37:46.640><c> forward</c><02:37:47.000><c> backward</c><02:37:47.359><c> grad</c><02:37:47.800><c> akum</c>

02:37:48.550 --> 02:37:48.560 align:start position:0%
going to do forward backward grad akum
 

02:37:48.560 --> 02:37:50.550 align:start position:0%
going to do forward backward grad akum
steps<02:37:49.000><c> number</c><02:37:49.200><c> of</c><02:37:49.560><c> times</c><02:37:50.279><c> and</c><02:37:50.359><c> then</c><02:37:50.479><c> we're</c>

02:37:50.550 --> 02:37:50.560 align:start position:0%
steps number of times and then we're
 

02:37:50.560 --> 02:37:52.389 align:start position:0%
steps number of times and then we're
going<02:37:50.680><c> to</c><02:37:50.760><c> do</c><02:37:50.880><c> a</c><02:37:51.000><c> single</c><02:37:51.319><c> update</c><02:37:51.880><c> once</c><02:37:52.160><c> all</c>

02:37:52.389 --> 02:37:52.399 align:start position:0%
going to do a single update once all
 

02:37:52.399 --> 02:37:53.349 align:start position:0%
going to do a single update once all
that<02:37:52.520><c> is</c>

02:37:53.349 --> 02:37:53.359 align:start position:0%
that is
 

02:37:53.359 --> 02:37:55.710 align:start position:0%
that is
accumulated<02:37:54.359><c> so</c><02:37:54.600><c> in</c><02:37:54.720><c> particular</c><02:37:55.200><c> our</c><02:37:55.399><c> micro</c>

02:37:55.710 --> 02:37:55.720 align:start position:0%
accumulated so in particular our micro
 

02:37:55.720 --> 02:37:58.030 align:start position:0%
accumulated so in particular our micro
batch<02:37:56.000><c> size</c><02:37:56.560><c> is</c><02:37:56.920><c> just</c><02:37:57.120><c> now</c><02:37:57.319><c> controlling</c><02:37:57.920><c> how</c>

02:37:58.030 --> 02:37:58.040 align:start position:0%
batch size is just now controlling how
 

02:37:58.040 --> 02:37:59.790 align:start position:0%
batch size is just now controlling how
many<02:37:58.319><c> tokens</c><02:37:59.080><c> how</c><02:37:59.160><c> many</c><02:37:59.359><c> rows</c><02:37:59.600><c> we're</c>

02:37:59.790 --> 02:37:59.800 align:start position:0%
many tokens how many rows we're
 

02:37:59.800 --> 02:38:02.309 align:start position:0%
many tokens how many rows we're
processing<02:38:00.160><c> in</c><02:38:00.240><c> a</c><02:38:00.399><c> single</c><02:38:00.680><c> go</c><02:38:00.960><c> over</c><02:38:01.120><c> a</c><02:38:01.240><c> forward</c>

02:38:02.309 --> 02:38:02.319 align:start position:0%
processing in a single go over a forward
 

02:38:02.319 --> 02:38:06.790 align:start position:0%
processing in a single go over a forward
backward<02:38:03.319><c> so</c><02:38:03.880><c> um</c><02:38:04.840><c> here</c><02:38:05.319><c> we</c><02:38:05.520><c> are</c><02:38:05.680><c> doing</c><02:38:06.120><c> 16</c><02:38:06.479><c> *</c>

02:38:06.790 --> 02:38:06.800 align:start position:0%
backward so um here we are doing 16 *
 

02:38:06.800 --> 02:38:09.309 align:start position:0%
backward so um here we are doing 16 *
124<02:38:07.720><c> we're</c><02:38:07.920><c> doing</c><02:38:08.200><c> 16</c>

02:38:09.309 --> 02:38:09.319 align:start position:0%
124 we're doing 16
 

02:38:09.319 --> 02:38:14.150 align:start position:0%
124 we're doing 16
384<02:38:10.520><c> um</c><02:38:11.520><c> tokens</c><02:38:12.080><c> per</c><02:38:12.479><c> forward</c><02:38:13.000><c> backward</c><02:38:14.000><c> and</c>

02:38:14.150 --> 02:38:14.160 align:start position:0%
384 um tokens per forward backward and
 

02:38:14.160 --> 02:38:17.750 align:start position:0%
384 um tokens per forward backward and
we<02:38:14.279><c> are</c><02:38:14.439><c> supposed</c><02:38:14.720><c> to</c><02:38:14.800><c> be</c><02:38:15.040><c> doing</c><02:38:16.040><c> 2</c><02:38:16.359><c> to</c><02:38:16.560><c> the</c><02:38:16.760><c> 19</c>

02:38:17.750 --> 02:38:17.760 align:start position:0%
we are supposed to be doing 2 to the 19
 

02:38:17.760 --> 02:38:20.550 align:start position:0%
we are supposed to be doing 2 to the 19
whoops<02:38:18.160><c> what</c><02:38:18.240><c> am</c><02:38:18.359><c> I</c><02:38:18.479><c> doing</c><02:38:19.479><c> 2</c><02:38:19.680><c> to</c><02:38:19.840><c> the</c>

02:38:20.550 --> 02:38:20.560 align:start position:0%
whoops what am I doing 2 to the
 

02:38:20.560 --> 02:38:26.150 align:start position:0%
whoops what am I doing 2 to the
19<02:38:21.560><c> in</c><02:38:21.760><c> total</c><02:38:22.359><c> so</c><02:38:22.560><c> the</c><02:38:22.680><c> grat</c><02:38:22.920><c> Aon</c><02:38:23.279><c> will</c><02:38:23.399><c> be</c>

02:38:26.150 --> 02:38:26.160 align:start position:0%
 
 

02:38:26.160 --> 02:38:28.910 align:start position:0%
 
32<02:38:27.160><c> uh</c><02:38:27.279><c> so</c><02:38:27.520><c> therefore</c><02:38:27.880><c> gr</c><02:38:28.120><c> AUM</c><02:38:28.479><c> here</c><02:38:28.600><c> will</c><02:38:28.760><c> work</c>

02:38:28.910 --> 02:38:28.920 align:start position:0%
32 uh so therefore gr AUM here will work
 

02:38:28.920 --> 02:38:32.429 align:start position:0%
32 uh so therefore gr AUM here will work
out<02:38:29.080><c> to</c><02:38:29.359><c> 32</c><02:38:30.359><c> and</c><02:38:30.760><c> we</c><02:38:30.880><c> have</c><02:38:31.000><c> to</c><02:38:31.120><c> do</c><02:38:31.359><c> 32</c><02:38:31.840><c> forward</c>

02:38:32.429 --> 02:38:32.439 align:start position:0%
out to 32 and we have to do 32 forward
 

02:38:32.439 --> 02:38:35.670 align:start position:0%
out to 32 and we have to do 32 forward
backward<02:38:33.439><c> um</c><02:38:33.800><c> and</c><02:38:33.920><c> then</c><02:38:34.040><c> a</c><02:38:34.160><c> single</c><02:38:34.439><c> update</c><02:38:35.279><c> now</c>

02:38:35.670 --> 02:38:35.680 align:start position:0%
backward um and then a single update now
 

02:38:35.680 --> 02:38:37.429 align:start position:0%
backward um and then a single update now
we<02:38:35.800><c> see</c><02:38:36.080><c> that</c><02:38:36.640><c> we</c><02:38:36.800><c> have</c><02:38:36.960><c> about</c><02:38:37.240><c> 100</c>

02:38:37.429 --> 02:38:37.439 align:start position:0%
we see that we have about 100
 

02:38:37.439 --> 02:38:38.750 align:start position:0%
we see that we have about 100
milliseconds<02:38:37.960><c> for</c><02:38:38.080><c> a</c><02:38:38.160><c> singer</c><02:38:38.439><c> forward</c>

02:38:38.750 --> 02:38:38.760 align:start position:0%
milliseconds for a singer forward
 

02:38:38.760 --> 02:38:41.590 align:start position:0%
milliseconds for a singer forward
backward<02:38:39.479><c> so</c><02:38:39.840><c> doing</c><02:38:40.120><c> 32</c><02:38:40.560><c> of</c><02:38:40.680><c> them</c><02:38:40.840><c> will</c><02:38:41.080><c> be</c>

02:38:41.590 --> 02:38:41.600 align:start position:0%
backward so doing 32 of them will be
 

02:38:41.600 --> 02:38:44.590 align:start position:0%
backward so doing 32 of them will be
will<02:38:41.800><c> make</c><02:38:42.040><c> every</c><02:38:42.319><c> step</c><02:38:42.720><c> roughly</c><02:38:43.080><c> 3</c><02:38:43.600><c> seconds</c>

02:38:44.590 --> 02:38:44.600 align:start position:0%
will make every step roughly 3 seconds
 

02:38:44.600 --> 02:38:46.230 align:start position:0%
will make every step roughly 3 seconds
just<02:38:45.040><c> napkin</c>

02:38:46.230 --> 02:38:46.240 align:start position:0%
just napkin
 

02:38:46.240 --> 02:38:48.870 align:start position:0%
just napkin
math<02:38:47.240><c> so</c><02:38:47.479><c> that's</c><02:38:47.680><c> grum</c><02:38:48.200><c> steps</c><02:38:48.560><c> but</c><02:38:48.680><c> now</c><02:38:48.800><c> we</c>

02:38:48.870 --> 02:38:48.880 align:start position:0%
math so that's grum steps but now we
 

02:38:48.880 --> 02:38:50.830 align:start position:0%
math so that's grum steps but now we
actually<02:38:49.080><c> have</c><02:38:49.200><c> to</c><02:38:49.479><c> Implement</c><02:38:49.920><c> that</c><02:38:50.240><c> so</c><02:38:50.680><c> we're</c>

02:38:50.830 --> 02:38:50.840 align:start position:0%
actually have to Implement that so we're
 

02:38:50.840 --> 02:38:54.750 align:start position:0%
actually have to Implement that so we're
going<02:38:50.960><c> to</c><02:38:51.080><c> swing</c><02:38:51.439><c> over</c><02:38:52.040><c> to</c><02:38:53.040><c> our</c><02:38:53.240><c> training</c><02:38:53.760><c> Loop</c>

02:38:54.750 --> 02:38:54.760 align:start position:0%
going to swing over to our training Loop
 

02:38:54.760 --> 02:38:56.710 align:start position:0%
going to swing over to our training Loop
because<02:38:55.040><c> now</c><02:38:55.279><c> this</c><02:38:55.479><c> part</c>

02:38:56.710 --> 02:38:56.720 align:start position:0%
because now this part
 

02:38:56.720 --> 02:38:59.269 align:start position:0%
because now this part
here<02:38:57.720><c> and</c><02:38:57.920><c> this</c><02:38:58.080><c> part</c><02:38:58.319><c> here</c><02:38:58.720><c> the</c><02:38:58.840><c> forward</c><02:38:59.160><c> and</c>

02:38:59.269 --> 02:38:59.279 align:start position:0%
here and this part here the forward and
 

02:38:59.279 --> 02:39:01.269 align:start position:0%
here and this part here the forward and
the<02:38:59.399><c> backward</c><02:39:00.040><c> we</c><02:39:00.200><c> have</c><02:39:00.279><c> to</c><02:39:00.399><c> now</c><02:39:00.640><c> repeat</c><02:39:01.000><c> this</c>

02:39:01.269 --> 02:39:01.279 align:start position:0%
the backward we have to now repeat this
 

02:39:01.279 --> 02:39:04.349 align:start position:0%
the backward we have to now repeat this
32<02:39:02.080><c> times</c><02:39:03.080><c> before</c><02:39:03.399><c> we</c><02:39:03.520><c> do</c><02:39:03.880><c> everything</c><02:39:04.160><c> else</c>

02:39:04.349 --> 02:39:04.359 align:start position:0%
32 times before we do everything else
 

02:39:04.359 --> 02:39:06.510 align:start position:0%
32 times before we do everything else
that<02:39:04.520><c> follows</c><02:39:05.479><c> so</c><02:39:05.680><c> let's</c><02:39:06.000><c> uh</c><02:39:06.080><c> see</c><02:39:06.240><c> how</c><02:39:06.319><c> we</c><02:39:06.439><c> can</c>

02:39:06.510 --> 02:39:06.520 align:start position:0%
that follows so let's uh see how we can
 

02:39:06.520 --> 02:39:09.110 align:start position:0%
that follows so let's uh see how we can
Implement<02:39:06.960><c> that</c><02:39:07.680><c> so</c><02:39:07.840><c> let's</c><02:39:08.040><c> come</c><02:39:08.200><c> over</c><02:39:08.439><c> here</c>

02:39:09.110 --> 02:39:09.120 align:start position:0%
Implement that so let's come over here
 

02:39:09.120 --> 02:39:10.550 align:start position:0%
Implement that so let's come over here
and<02:39:09.279><c> actually</c><02:39:09.479><c> we</c><02:39:09.600><c> do</c><02:39:09.720><c> have</c><02:39:09.840><c> to</c><02:39:09.960><c> load</c><02:39:10.240><c> a</c><02:39:10.359><c> new</c>

02:39:10.550 --> 02:39:10.560 align:start position:0%
and actually we do have to load a new
 

02:39:10.560 --> 02:39:12.269 align:start position:0%
and actually we do have to load a new
batch<02:39:10.880><c> every</c><02:39:11.080><c> single</c><02:39:11.359><c> time</c><02:39:11.640><c> so</c><02:39:11.800><c> let</c><02:39:11.880><c> me</c><02:39:12.040><c> move</c>

02:39:12.269 --> 02:39:12.279 align:start position:0%
batch every single time so let me move
 

02:39:12.279 --> 02:39:14.230 align:start position:0%
batch every single time so let me move
that<02:39:12.439><c> over</c><02:39:12.720><c> here</c><02:39:13.560><c> and</c><02:39:13.640><c> now</c><02:39:13.840><c> this</c><02:39:13.920><c> is</c><02:39:14.040><c> where</c><02:39:14.160><c> we</c>

02:39:14.230 --> 02:39:14.240 align:start position:0%
that over here and now this is where we
 

02:39:14.240 --> 02:39:18.190 align:start position:0%
that over here and now this is where we
have<02:39:14.319><c> the</c><02:39:14.399><c> inner</c><02:39:14.680><c> loop</c><02:39:15.399><c> so</c><02:39:15.600><c> for</c><02:39:16.200><c> micro</c><02:39:16.720><c> step</c><02:39:17.640><c> in</c>

02:39:18.190 --> 02:39:18.200 align:start position:0%
have the inner loop so for micro step in
 

02:39:18.200 --> 02:39:20.670 align:start position:0%
have the inner loop so for micro step in
range<02:39:19.520><c> graum</c>

02:39:20.670 --> 02:39:20.680 align:start position:0%
range graum
 

02:39:20.680 --> 02:39:24.429 align:start position:0%
range graum
steps<02:39:21.680><c> we</c><02:39:21.800><c> do</c><02:39:22.479><c> this</c><02:39:23.479><c> and</c><02:39:23.600><c> remember</c><02:39:23.880><c> that</c><02:39:24.000><c> l.</c>

02:39:24.429 --> 02:39:24.439 align:start position:0%
steps we do this and remember that l.
 

02:39:24.439 --> 02:39:26.269 align:start position:0%
steps we do this and remember that l.
backward<02:39:24.840><c> always</c><02:39:25.200><c> deposits</c><02:39:25.720><c> gradients</c><02:39:26.160><c> so</c>

02:39:26.269 --> 02:39:26.279 align:start position:0%
backward always deposits gradients so
 

02:39:26.279 --> 02:39:27.870 align:start position:0%
backward always deposits gradients so
we're<02:39:26.439><c> doing</c><02:39:26.800><c> inside</c><02:39:27.160><c> losta</c><02:39:27.600><c> backward</c>

02:39:27.870 --> 02:39:27.880 align:start position:0%
we're doing inside losta backward
 

02:39:27.880 --> 02:39:29.590 align:start position:0%
we're doing inside losta backward
there's<02:39:28.080><c> always</c><02:39:28.240><c> a</c><02:39:28.439><c> plus</c><02:39:28.680><c> equals</c><02:39:29.279><c> on</c><02:39:29.439><c> the</c>

02:39:29.590 --> 02:39:29.600 align:start position:0%
there's always a plus equals on the
 

02:39:29.600 --> 02:39:31.910 align:start position:0%
there's always a plus equals on the
gradients<02:39:30.600><c> so</c><02:39:30.920><c> in</c><02:39:31.080><c> every</c><02:39:31.279><c> single</c><02:39:31.520><c> L</c><02:39:31.800><c> of</c>

02:39:31.910 --> 02:39:31.920 align:start position:0%
gradients so in every single L of
 

02:39:31.920 --> 02:39:33.910 align:start position:0%
gradients so in every single L of
backward<02:39:32.200><c> gradients</c><02:39:32.600><c> will</c><02:39:32.880><c> add</c><02:39:33.080><c> up</c><02:39:33.520><c> on</c><02:39:33.760><c> the</c>

02:39:33.910 --> 02:39:33.920 align:start position:0%
backward gradients will add up on the
 

02:39:33.920 --> 02:39:35.030 align:start position:0%
backward gradients will add up on the
gradient

02:39:35.030 --> 02:39:35.040 align:start position:0%
gradient
 

02:39:35.040 --> 02:39:38.710 align:start position:0%
gradient
tensors<02:39:36.040><c> um</c><02:39:36.960><c> so</c><02:39:37.160><c> we</c><02:39:37.279><c> lost</c><02:39:37.600><c> that</c><02:39:37.800><c> backward</c><02:39:38.560><c> and</c>

02:39:38.710 --> 02:39:38.720 align:start position:0%
tensors um so we lost that backward and
 

02:39:38.720 --> 02:39:41.950 align:start position:0%
tensors um so we lost that backward and
then<02:39:38.880><c> we</c><02:39:39.040><c> get</c><02:39:39.319><c> all</c><02:39:39.520><c> the</c><02:39:39.760><c> gradients</c><02:39:40.760><c> over</c><02:39:41.040><c> there</c>

02:39:41.950 --> 02:39:41.960 align:start position:0%
then we get all the gradients over there
 

02:39:41.960 --> 02:39:43.750 align:start position:0%
then we get all the gradients over there
and<02:39:42.080><c> then</c><02:39:42.200><c> we</c><02:39:42.359><c> normalize</c><02:39:43.200><c> and</c><02:39:43.479><c> everything</c>

02:39:43.750 --> 02:39:43.760 align:start position:0%
and then we normalize and everything
 

02:39:43.760 --> 02:39:47.269 align:start position:0%
and then we normalize and everything
else<02:39:44.000><c> should</c><02:39:44.240><c> just</c><02:39:44.800><c> follow</c><02:39:45.800><c> um</c><02:39:46.359><c> so</c><02:39:46.680><c> we're</c><02:39:47.000><c> very</c>

02:39:47.269 --> 02:39:47.279 align:start position:0%
else should just follow um so we're very
 

02:39:47.279 --> 02:39:50.110 align:start position:0%
else should just follow um so we're very
close<02:39:48.000><c> but</c><02:39:48.200><c> actually</c><02:39:48.479><c> there's</c><02:39:48.760><c> like</c><02:39:49.560><c> subtle</c>

02:39:50.110 --> 02:39:50.120 align:start position:0%
close but actually there's like subtle
 

02:39:50.120 --> 02:39:52.550 align:start position:0%
close but actually there's like subtle
and<02:39:50.720><c> deep</c><02:39:51.160><c> issue</c><02:39:51.520><c> here</c><02:39:51.840><c> and</c><02:39:51.960><c> this</c><02:39:52.040><c> is</c><02:39:52.240><c> actually</c>

02:39:52.550 --> 02:39:52.560 align:start position:0%
and deep issue here and this is actually
 

02:39:52.560 --> 02:39:54.670 align:start position:0%
and deep issue here and this is actually
incorrect<02:39:53.359><c> so</c><02:39:53.600><c> invite</c><02:39:53.960><c> I</c><02:39:54.120><c> invite</c><02:39:54.359><c> you</c><02:39:54.439><c> to</c>

02:39:54.670 --> 02:39:54.680 align:start position:0%
incorrect so invite I invite you to
 

02:39:54.680 --> 02:39:56.150 align:start position:0%
incorrect so invite I invite you to
think<02:39:54.880><c> about</c><02:39:55.240><c> why</c><02:39:55.439><c> this</c><02:39:55.560><c> is</c><02:39:55.720><c> not</c><02:39:55.960><c> yet</c>

02:39:56.150 --> 02:39:56.160 align:start position:0%
think about why this is not yet
 

02:39:56.160 --> 02:39:59.750 align:start position:0%
think about why this is not yet
sufficient<02:39:57.160><c> um</c><02:39:57.760><c> and</c><02:39:58.040><c> uh</c><02:39:58.200><c> let</c><02:39:58.279><c> me</c><02:39:58.479><c> fix</c><02:39:58.680><c> it</c><02:39:58.880><c> then</c>

02:39:59.750 --> 02:39:59.760 align:start position:0%
sufficient um and uh let me fix it then
 

02:39:59.760 --> 02:40:00.990 align:start position:0%
sufficient um and uh let me fix it then
okay<02:39:59.880><c> so</c><02:40:00.000><c> I</c><02:40:00.120><c> brought</c><02:40:00.399><c> back</c><02:40:00.520><c> the</c><02:40:00.640><c> jupyter</c>

02:40:00.990 --> 02:40:01.000 align:start position:0%
okay so I brought back the jupyter
 

02:40:01.000 --> 02:40:02.590 align:start position:0%
okay so I brought back the jupyter
notebook<02:40:01.359><c> so</c><02:40:01.520><c> we</c><02:40:01.640><c> can</c><02:40:02.040><c> think</c><02:40:02.240><c> about</c><02:40:02.439><c> this</c>

02:40:02.590 --> 02:40:02.600 align:start position:0%
notebook so we can think about this
 

02:40:02.600 --> 02:40:05.070 align:start position:0%
notebook so we can think about this
carefully<02:40:03.319><c> in</c><02:40:03.439><c> a</c><02:40:03.720><c> simple</c><02:40:04.120><c> toy</c><02:40:04.479><c> setting</c><02:40:04.960><c> and</c>

02:40:05.070 --> 02:40:05.080 align:start position:0%
carefully in a simple toy setting and
 

02:40:05.080 --> 02:40:07.510 align:start position:0%
carefully in a simple toy setting and
see<02:40:05.240><c> what's</c><02:40:05.800><c> happening</c><02:40:06.800><c> so</c><02:40:07.000><c> let's</c><02:40:07.200><c> create</c><02:40:07.399><c> a</c>

02:40:07.510 --> 02:40:07.520 align:start position:0%
see what's happening so let's create a
 

02:40:07.520 --> 02:40:10.070 align:start position:0%
see what's happening so let's create a
very<02:40:07.680><c> simple</c><02:40:07.920><c> neural</c><02:40:08.240><c> nut</c><02:40:08.520><c> that</c><02:40:08.680><c> takes</c><02:40:08.920><c> a</c><02:40:09.080><c> 16</c>

02:40:10.070 --> 02:40:10.080 align:start position:0%
very simple neural nut that takes a 16
 

02:40:10.080 --> 02:40:11.790 align:start position:0%
very simple neural nut that takes a 16
Vector<02:40:10.359><c> of</c><02:40:10.520><c> 16</c><02:40:10.840><c> numbers</c><02:40:11.160><c> and</c><02:40:11.399><c> returns</c><02:40:11.680><c> a</c>

02:40:11.790 --> 02:40:11.800 align:start position:0%
Vector of 16 numbers and returns a
 

02:40:11.800 --> 02:40:12.750 align:start position:0%
Vector of 16 numbers and returns a
single

02:40:12.750 --> 02:40:12.760 align:start position:0%
single
 

02:40:12.760 --> 02:40:15.429 align:start position:0%
single
number<02:40:13.760><c> and</c><02:40:13.920><c> then</c><02:40:14.399><c> here</c><02:40:14.640><c> I'm</c><02:40:14.800><c> creating</c><02:40:15.160><c> some</c>

02:40:15.429 --> 02:40:15.439 align:start position:0%
number and then here I'm creating some
 

02:40:15.439 --> 02:40:19.110 align:start position:0%
number and then here I'm creating some
random<02:40:16.439><c> uh</c><02:40:16.600><c> examples</c><02:40:17.160><c> X</c><02:40:17.600><c> and</c><02:40:17.760><c> some</c><02:40:18.000><c> targets</c><02:40:18.920><c> uh</c>

02:40:19.110 --> 02:40:19.120 align:start position:0%
random uh examples X and some targets uh
 

02:40:19.120 --> 02:40:21.870 align:start position:0%
random uh examples X and some targets uh
y<02:40:19.399><c> Y</c><02:40:20.319><c> and</c><02:40:20.520><c> then</c><02:40:20.720><c> we</c><02:40:20.840><c> are</c><02:40:21.080><c> using</c><02:40:21.479><c> the</c><02:40:21.600><c> mean</c>

02:40:21.870 --> 02:40:21.880 align:start position:0%
y Y and then we are using the mean
 

02:40:21.880 --> 02:40:25.110 align:start position:0%
y Y and then we are using the mean
squared<02:40:22.479><c> loss</c><02:40:23.479><c> uh</c><02:40:23.680><c> here</c><02:40:24.160><c> to</c><02:40:24.359><c> calculate</c><02:40:24.760><c> the</c>

02:40:25.110 --> 02:40:25.120 align:start position:0%
squared loss uh here to calculate the
 

02:40:25.120 --> 02:40:28.230 align:start position:0%
squared loss uh here to calculate the
loss<02:40:26.120><c> so</c><02:40:26.319><c> basically</c><02:40:26.680><c> what</c><02:40:26.800><c> this</c><02:40:26.960><c> is</c><02:40:27.200><c> is</c><02:40:27.800><c> four</c>

02:40:28.230 --> 02:40:28.240 align:start position:0%
loss so basically what this is is four
 

02:40:28.240 --> 02:40:30.230 align:start position:0%
loss so basically what this is is four
individual<02:40:28.760><c> examples</c><02:40:29.520><c> and</c><02:40:29.640><c> we're</c><02:40:29.840><c> just</c><02:40:30.000><c> doing</c>

02:40:30.230 --> 02:40:30.240 align:start position:0%
individual examples and we're just doing
 

02:40:30.240 --> 02:40:31.950 align:start position:0%
individual examples and we're just doing
Simple<02:40:30.640><c> regression</c><02:40:31.200><c> with</c><02:40:31.359><c> the</c><02:40:31.439><c> mean</c><02:40:31.640><c> squared</c>

02:40:31.950 --> 02:40:31.960 align:start position:0%
Simple regression with the mean squared
 

02:40:31.960 --> 02:40:34.429 align:start position:0%
Simple regression with the mean squared
loss<02:40:32.680><c> over</c><02:40:33.000><c> those</c><02:40:33.240><c> four</c>

02:40:34.429 --> 02:40:34.439 align:start position:0%
loss over those four
 

02:40:34.439 --> 02:40:36.670 align:start position:0%
loss over those four
examples<02:40:35.439><c> now</c><02:40:35.680><c> when</c><02:40:35.760><c> we</c><02:40:35.920><c> calculate</c><02:40:36.279><c> the</c><02:40:36.399><c> loss</c>

02:40:36.670 --> 02:40:36.680 align:start position:0%
examples now when we calculate the loss
 

02:40:36.680 --> 02:40:38.389 align:start position:0%
examples now when we calculate the loss
and<02:40:36.760><c> we</c><02:40:36.880><c> lost</c><02:40:37.120><c> that</c><02:40:37.279><c> backward</c><02:40:38.040><c> and</c><02:40:38.160><c> look</c><02:40:38.279><c> at</c>

02:40:38.389 --> 02:40:38.399 align:start position:0%
and we lost that backward and look at
 

02:40:38.399 --> 02:40:40.309 align:start position:0%
and we lost that backward and look at
the<02:40:38.520><c> gradient</c><02:40:39.520><c> this</c><02:40:39.640><c> is</c><02:40:39.760><c> the</c><02:40:39.880><c> gradient</c><02:40:40.200><c> that</c>

02:40:40.309 --> 02:40:40.319 align:start position:0%
the gradient this is the gradient that
 

02:40:40.319 --> 02:40:41.349 align:start position:0%
the gradient this is the gradient that
we

02:40:41.349 --> 02:40:41.359 align:start position:0%
we
 

02:40:41.359 --> 02:40:44.230 align:start position:0%
we
achieve<02:40:42.359><c> now</c><02:40:42.520><c> the</c><02:40:42.640><c> loss</c><02:40:42.880><c> objective</c><02:40:43.359><c> here</c>

02:40:44.230 --> 02:40:44.240 align:start position:0%
achieve now the loss objective here
 

02:40:44.240 --> 02:40:46.469 align:start position:0%
achieve now the loss objective here
notice<02:40:44.560><c> that</c><02:40:44.680><c> in</c><02:40:44.840><c> MSE</c><02:40:45.279><c> loss</c><02:40:45.760><c> the</c><02:40:45.920><c> default</c><02:40:46.319><c> for</c>

02:40:46.469 --> 02:40:46.479 align:start position:0%
notice that in MSE loss the default for
 

02:40:46.479 --> 02:40:49.830 align:start position:0%
notice that in MSE loss the default for
the<02:40:46.560><c> loss</c><02:40:46.840><c> function</c><02:40:47.600><c> is</c><02:40:48.240><c> reduction</c><02:40:48.800><c> is</c><02:40:48.960><c> mean</c>

02:40:49.830 --> 02:40:49.840 align:start position:0%
the loss function is reduction is mean
 

02:40:49.840 --> 02:40:52.190 align:start position:0%
the loss function is reduction is mean
so<02:40:50.040><c> we're</c><02:40:50.240><c> we're</c><02:40:50.439><c> calculating</c><02:40:51.040><c> the</c><02:40:51.479><c> average</c>

02:40:52.190 --> 02:40:52.200 align:start position:0%
so we're we're calculating the average
 

02:40:52.200 --> 02:40:56.510 align:start position:0%
so we're we're calculating the average
mean<02:40:52.760><c> loss</c><02:40:53.960><c> um</c><02:40:54.960><c> the</c><02:40:55.120><c> the</c><02:40:55.240><c> mean</c><02:40:55.560><c> loss</c><02:40:55.880><c> here</c><02:40:56.279><c> over</c>

02:40:56.510 --> 02:40:56.520 align:start position:0%
mean loss um the the mean loss here over
 

02:40:56.520 --> 02:40:59.349 align:start position:0%
mean loss um the the mean loss here over
the<02:40:56.640><c> four</c><02:40:56.880><c> examples</c><02:40:57.840><c> so</c><02:40:58.560><c> this</c><02:40:58.720><c> is</c><02:40:58.880><c> the</c><02:40:59.080><c> exact</c>

02:40:59.349 --> 02:40:59.359 align:start position:0%
the four examples so this is the exact
 

02:40:59.359 --> 02:41:02.030 align:start position:0%
the four examples so this is the exact
loss<02:40:59.720><c> objective</c><02:41:00.720><c> and</c><02:41:01.120><c> this</c><02:41:01.240><c> is</c><02:41:01.399><c> the</c><02:41:01.600><c> average</c>

02:41:02.030 --> 02:41:02.040 align:start position:0%
loss objective and this is the average
 

02:41:02.040 --> 02:41:03.469 align:start position:0%
loss objective and this is the average
the<02:41:02.160><c> one</c><02:41:02.319><c> over</c><02:41:02.520><c> four</c><02:41:02.880><c> because</c><02:41:03.040><c> there</c><02:41:03.120><c> are</c><02:41:03.279><c> four</c>

02:41:03.469 --> 02:41:03.479 align:start position:0%
the one over four because there are four
 

02:41:03.479 --> 02:41:06.150 align:start position:0%
the one over four because there are four
independent<02:41:04.000><c> examples</c><02:41:04.439><c> here</c><02:41:05.240><c> and</c><02:41:05.479><c> then</c><02:41:06.000><c> we</c>

02:41:06.150 --> 02:41:06.160 align:start position:0%
independent examples here and then we
 

02:41:06.160 --> 02:41:08.670 align:start position:0%
independent examples here and then we
have<02:41:06.439><c> the</c><02:41:07.040><c> four</c><02:41:07.399><c> examples</c><02:41:08.000><c> and</c><02:41:08.160><c> their</c><02:41:08.399><c> mean</c>

02:41:08.670 --> 02:41:08.680 align:start position:0%
have the four examples and their mean
 

02:41:08.680 --> 02:41:11.230 align:start position:0%
have the four examples and their mean
squared<02:41:09.040><c> error</c><02:41:09.920><c> the</c><02:41:10.000><c> squared</c><02:41:10.319><c> error</c><02:41:10.880><c> and</c><02:41:11.040><c> then</c>

02:41:11.230 --> 02:41:11.240 align:start position:0%
squared error the squared error and then
 

02:41:11.240 --> 02:41:14.070 align:start position:0%
squared error the squared error and then
this<02:41:11.399><c> makes</c><02:41:11.560><c> it</c><02:41:11.720><c> the</c><02:41:11.840><c> mean</c><02:41:12.080><c> squared</c><02:41:12.800><c> error</c><02:41:13.800><c> so</c>

02:41:14.070 --> 02:41:14.080 align:start position:0%
this makes it the mean squared error so
 

02:41:14.080 --> 02:41:16.590 align:start position:0%
this makes it the mean squared error so
therefore<02:41:14.920><c> uh</c><02:41:15.279><c> we</c><02:41:15.439><c> are</c><02:41:15.720><c> we</c><02:41:16.120><c> calculate</c><02:41:16.479><c> the</c>

02:41:16.590 --> 02:41:16.600 align:start position:0%
therefore uh we are we calculate the
 

02:41:16.600 --> 02:41:18.230 align:start position:0%
therefore uh we are we calculate the
squared<02:41:16.920><c> error</c><02:41:17.200><c> and</c><02:41:17.319><c> then</c><02:41:17.439><c> we</c><02:41:17.600><c> normalize</c><02:41:18.080><c> it</c>

02:41:18.230 --> 02:41:18.240 align:start position:0%
squared error and then we normalize it
 

02:41:18.240 --> 02:41:20.150 align:start position:0%
squared error and then we normalize it
to<02:41:18.359><c> make</c><02:41:18.479><c> it</c><02:41:18.600><c> the</c><02:41:18.720><c> mean</c><02:41:19.319><c> over</c><02:41:19.479><c> the</c><02:41:19.640><c> examples</c>

02:41:20.150 --> 02:41:20.160 align:start position:0%
to make it the mean over the examples
 

02:41:20.160 --> 02:41:22.349 align:start position:0%
to make it the mean over the examples
and<02:41:20.279><c> there's</c><02:41:20.479><c> four</c><02:41:20.720><c> examples</c><02:41:21.160><c> here</c><02:41:22.000><c> so</c><02:41:22.240><c> now</c>

02:41:22.349 --> 02:41:22.359 align:start position:0%
and there's four examples here so now
 

02:41:22.359 --> 02:41:24.550 align:start position:0%
and there's four examples here so now
when<02:41:22.479><c> we</c><02:41:22.600><c> come</c><02:41:22.720><c> to</c><02:41:22.840><c> the</c><02:41:22.960><c> gradient</c>

02:41:24.550 --> 02:41:24.560 align:start position:0%
when we come to the gradient
 

02:41:24.560 --> 02:41:28.950 align:start position:0%
when we come to the gradient
accumulation<02:41:25.560><c> version</c><02:41:25.840><c> of</c><02:41:26.120><c> it</c><02:41:27.120><c> this</c><02:41:27.720><c> uh</c><02:41:28.720><c> this</c>

02:41:28.950 --> 02:41:28.960 align:start position:0%
accumulation version of it this uh this
 

02:41:28.960 --> 02:41:30.429 align:start position:0%
accumulation version of it this uh this
here<02:41:29.279><c> is</c><02:41:29.399><c> the</c><02:41:29.560><c> gradient</c><02:41:29.960><c> accumulation</c>

02:41:30.429 --> 02:41:30.439 align:start position:0%
here is the gradient accumulation
 

02:41:30.439 --> 02:41:32.750 align:start position:0%
here is the gradient accumulation
version<02:41:30.680><c> of</c><02:41:30.840><c> it</c><02:41:31.359><c> where</c><02:41:31.520><c> we</c><02:41:31.680><c> have</c><02:41:32.000><c> grad</c><02:41:32.319><c> acum</c>

02:41:32.750 --> 02:41:32.760 align:start position:0%
version of it where we have grad acum
 

02:41:32.760 --> 02:41:35.269 align:start position:0%
version of it where we have grad acum
steps<02:41:33.040><c> of</c><02:41:33.200><c> four</c><02:41:33.680><c> and</c><02:41:33.800><c> I</c><02:41:33.920><c> reset</c><02:41:34.240><c> the</c><02:41:34.319><c> gradient</c>

02:41:35.269 --> 02:41:35.279 align:start position:0%
steps of four and I reset the gradient
 

02:41:35.279 --> 02:41:38.030 align:start position:0%
steps of four and I reset the gradient
we've<02:41:35.439><c> grum</c><02:41:36.040><c> steps</c><02:41:36.279><c> of</c><02:41:36.439><c> four</c><02:41:37.439><c> and</c><02:41:37.600><c> now</c><02:41:37.880><c> I'm</c>

02:41:38.030 --> 02:41:38.040 align:start position:0%
we've grum steps of four and now I'm
 

02:41:38.040 --> 02:41:39.710 align:start position:0%
we've grum steps of four and now I'm
evaluating<02:41:38.479><c> all</c><02:41:38.600><c> the</c><02:41:38.720><c> examples</c><02:41:39.120><c> individually</c>

02:41:39.710 --> 02:41:39.720 align:start position:0%
evaluating all the examples individually
 

02:41:39.720 --> 02:41:41.510 align:start position:0%
evaluating all the examples individually
instead<02:41:40.200><c> and</c><02:41:40.319><c> calling</c><02:41:40.600><c> L</c><02:41:40.840><c> that</c><02:41:41.040><c> backward</c><02:41:41.359><c> on</c>

02:41:41.510 --> 02:41:41.520 align:start position:0%
instead and calling L that backward on
 

02:41:41.520 --> 02:41:43.190 align:start position:0%
instead and calling L that backward on
them<02:41:41.720><c> many</c><02:41:41.960><c> times</c><02:41:42.560><c> and</c><02:41:42.680><c> then</c><02:41:42.800><c> we're</c><02:41:42.920><c> looking</c>

02:41:43.190 --> 02:41:43.200 align:start position:0%
them many times and then we're looking
 

02:41:43.200 --> 02:41:44.630 align:start position:0%
them many times and then we're looking
at<02:41:43.439><c> the</c><02:41:43.520><c> gradient</c><02:41:43.880><c> that</c><02:41:44.000><c> we</c><02:41:44.120><c> achieve</c><02:41:44.439><c> from</c>

02:41:44.630 --> 02:41:44.640 align:start position:0%
at the gradient that we achieve from
 

02:41:44.640 --> 02:41:47.230 align:start position:0%
at the gradient that we achieve from
that<02:41:45.399><c> so</c><02:41:45.560><c> basically</c><02:41:45.960><c> now</c><02:41:46.160><c> we</c><02:41:46.279><c> forward</c><02:41:47.040><c> our</c>

02:41:47.230 --> 02:41:47.240 align:start position:0%
that so basically now we forward our
 

02:41:47.240 --> 02:41:49.630 align:start position:0%
that so basically now we forward our
function<02:41:47.920><c> calculate</c><02:41:48.359><c> the</c><02:41:48.479><c> exact</c><02:41:48.760><c> same</c><02:41:48.920><c> loss</c>

02:41:49.630 --> 02:41:49.640 align:start position:0%
function calculate the exact same loss
 

02:41:49.640 --> 02:41:52.269 align:start position:0%
function calculate the exact same loss
do<02:41:49.800><c> a</c><02:41:50.000><c> backward</c><02:41:50.800><c> and</c><02:41:50.920><c> we</c><02:41:51.040><c> do</c><02:41:51.200><c> that</c><02:41:51.359><c> four</c><02:41:51.640><c> times</c>

02:41:52.269 --> 02:41:52.279 align:start position:0%
do a backward and we do that four times
 

02:41:52.279 --> 02:41:54.590 align:start position:0%
do a backward and we do that four times
and<02:41:52.439><c> when</c><02:41:52.560><c> we</c><02:41:52.680><c> look</c><02:41:52.800><c> at</c><02:41:52.880><c> the</c><02:41:53.479><c> gradient</c><02:41:54.479><c> uh</c>

02:41:54.590 --> 02:41:54.600 align:start position:0%
and when we look at the gradient uh
 

02:41:54.600 --> 02:41:57.110 align:start position:0%
and when we look at the gradient uh
you'll<02:41:54.840><c> notice</c><02:41:55.439><c> that</c><02:41:55.560><c> the</c><02:41:55.680><c> gradients</c><02:41:56.120><c> don't</c>

02:41:57.110 --> 02:41:57.120 align:start position:0%
you'll notice that the gradients don't
 

02:41:57.120 --> 02:42:00.309 align:start position:0%
you'll notice that the gradients don't
match<02:41:58.120><c> so</c><02:41:58.359><c> here</c><02:41:58.600><c> we</c><02:41:59.120><c> uh</c><02:41:59.279><c> did</c><02:41:59.479><c> a</c><02:41:59.640><c> single</c><02:42:00.040><c> batch</c>

02:42:00.309 --> 02:42:00.319 align:start position:0%
match so here we uh did a single batch
 

02:42:00.319 --> 02:42:03.190 align:start position:0%
match so here we uh did a single batch
of<02:42:00.479><c> four</c><02:42:01.240><c> and</c><02:42:01.479><c> here</c><02:42:01.680><c> we</c><02:42:01.840><c> did</c><02:42:02.279><c> uh</c><02:42:02.399><c> four</c><02:42:02.800><c> gradient</c>

02:42:03.190 --> 02:42:03.200 align:start position:0%
of four and here we did uh four gradient
 

02:42:03.200 --> 02:42:06.030 align:start position:0%
of four and here we did uh four gradient
accumulation<02:42:03.720><c> steps</c><02:42:04.439><c> of</c><02:42:04.640><c> batch</c><02:42:04.840><c> size</c><02:42:05.040><c> one</c><02:42:05.960><c> and</c>

02:42:06.030 --> 02:42:06.040 align:start position:0%
accumulation steps of batch size one and
 

02:42:06.040 --> 02:42:08.469 align:start position:0%
accumulation steps of batch size one and
the<02:42:06.160><c> gradients</c><02:42:06.600><c> are</c><02:42:06.800><c> not</c><02:42:07.040><c> the</c><02:42:07.359><c> same</c><02:42:08.359><c> and</c>

02:42:08.469 --> 02:42:08.479 align:start position:0%
the gradients are not the same and
 

02:42:08.479 --> 02:42:09.750 align:start position:0%
the gradients are not the same and
basically<02:42:08.920><c> the</c><02:42:09.080><c> the</c><02:42:09.200><c> reason</c><02:42:09.439><c> that</c><02:42:09.600><c> they're</c>

02:42:09.750 --> 02:42:09.760 align:start position:0%
basically the the reason that they're
 

02:42:09.760 --> 02:42:11.590 align:start position:0%
basically the the reason that they're
not<02:42:09.920><c> the</c><02:42:10.000><c> same</c><02:42:10.240><c> is</c><02:42:10.399><c> exactly</c><02:42:10.920><c> because</c><02:42:11.279><c> this</c>

02:42:11.590 --> 02:42:11.600 align:start position:0%
not the same is exactly because this
 

02:42:11.600 --> 02:42:14.230 align:start position:0%
not the same is exactly because this
mean<02:42:12.040><c> squared</c><02:42:12.439><c> error</c><02:42:13.200><c> gets</c><02:42:13.439><c> lost</c><02:42:13.840><c> this</c><02:42:14.000><c> one</c>

02:42:14.230 --> 02:42:14.240 align:start position:0%
mean squared error gets lost this one
 

02:42:14.240 --> 02:42:16.550 align:start position:0%
mean squared error gets lost this one
quarter<02:42:14.640><c> in</c><02:42:14.760><c> this</c><02:42:14.960><c> loss</c><02:42:15.760><c> gets</c><02:42:15.960><c> lost</c><02:42:16.319><c> because</c>

02:42:16.550 --> 02:42:16.560 align:start position:0%
quarter in this loss gets lost because
 

02:42:16.560 --> 02:42:19.190 align:start position:0%
quarter in this loss gets lost because
what<02:42:16.720><c> happens</c><02:42:17.240><c> here</c><02:42:18.240><c> is</c><02:42:18.640><c> the</c><02:42:18.800><c> loss</c><02:42:19.000><c> of</c>

02:42:19.190 --> 02:42:19.200 align:start position:0%
what happens here is the loss of
 

02:42:19.200 --> 02:42:22.030 align:start position:0%
what happens here is the loss of
objective<02:42:19.960><c> for</c><02:42:20.200><c> every</c><02:42:20.399><c> one</c><02:42:20.560><c> of</c><02:42:20.720><c> the</c><02:42:21.000><c> loops</c><02:42:21.880><c> is</c>

02:42:22.030 --> 02:42:22.040 align:start position:0%
objective for every one of the loops is
 

02:42:22.040 --> 02:42:25.070 align:start position:0%
objective for every one of the loops is
just<02:42:22.160><c> a</c><02:42:22.279><c> mean</c><02:42:22.479><c> squ</c><02:42:22.880><c> error</c><02:42:23.880><c> um</c><02:42:24.560><c> which</c><02:42:24.800><c> in</c><02:42:24.920><c> this</c>

02:42:25.070 --> 02:42:25.080 align:start position:0%
just a mean squ error um which in this
 

02:42:25.080 --> 02:42:26.269 align:start position:0%
just a mean squ error um which in this
case<02:42:25.319><c> because</c><02:42:25.479><c> there's</c><02:42:25.680><c> only</c><02:42:25.840><c> a</c><02:42:25.960><c> single</c>

02:42:26.269 --> 02:42:26.279 align:start position:0%
case because there's only a single
 

02:42:26.279 --> 02:42:28.790 align:start position:0%
case because there's only a single
example<02:42:26.840><c> is</c><02:42:27.040><c> just</c><02:42:27.520><c> this</c><02:42:27.680><c> term</c><02:42:28.000><c> here</c><02:42:28.520><c> so</c><02:42:28.680><c> that</c>

02:42:28.790 --> 02:42:28.800 align:start position:0%
example is just this term here so that
 

02:42:28.800 --> 02:42:30.790 align:start position:0%
example is just this term here so that
was<02:42:28.920><c> the</c><02:42:29.000><c> loss</c><02:42:29.200><c> in</c><02:42:29.319><c> the</c><02:42:29.399><c> zeroth</c><02:42:29.760><c> eration</c><02:42:30.600><c> same</c>

02:42:30.790 --> 02:42:30.800 align:start position:0%
was the loss in the zeroth eration same
 

02:42:30.800 --> 02:42:33.950 align:start position:0%
was the loss in the zeroth eration same
in<02:42:30.920><c> the</c><02:42:31.080><c> first</c><02:42:31.600><c> third</c><02:42:31.920><c> and</c><02:42:32.040><c> so</c><02:42:32.200><c> on</c><02:42:33.160><c> and</c><02:42:33.319><c> then</c>

02:42:33.950 --> 02:42:33.960 align:start position:0%
in the first third and so on and then
 

02:42:33.960 --> 02:42:35.429 align:start position:0%
in the first third and so on and then
when<02:42:34.080><c> you</c><02:42:34.160><c> do</c><02:42:34.319><c> the</c><02:42:34.399><c> loss.</c><02:42:34.800><c> backward</c><02:42:35.160><c> we're</c>

02:42:35.429 --> 02:42:35.439 align:start position:0%
when you do the loss. backward we're
 

02:42:35.439 --> 02:42:38.230 align:start position:0%
when you do the loss. backward we're
accumulating<02:42:36.359><c> gradients</c><02:42:37.359><c> and</c><02:42:37.560><c> what</c><02:42:37.800><c> happens</c>

02:42:38.230 --> 02:42:38.240 align:start position:0%
accumulating gradients and what happens
 

02:42:38.240 --> 02:42:40.670 align:start position:0%
accumulating gradients and what happens
is<02:42:38.439><c> that</c><02:42:39.319><c> accumulation</c><02:42:39.800><c> in</c><02:42:39.880><c> the</c><02:42:40.040><c> gradient</c><02:42:40.479><c> is</c>

02:42:40.670 --> 02:42:40.680 align:start position:0%
is that accumulation in the gradient is
 

02:42:40.680 --> 02:42:43.710 align:start position:0%
is that accumulation in the gradient is
basically<02:42:41.319><c> equivalent</c><02:42:42.200><c> to</c><02:42:42.399><c> doing</c><02:42:42.680><c> a</c><02:42:42.920><c> sum</c><02:42:43.560><c> in</c>

02:42:43.710 --> 02:42:43.720 align:start position:0%
basically equivalent to doing a sum in
 

02:42:43.720 --> 02:42:45.110 align:start position:0%
basically equivalent to doing a sum in
the

02:42:45.110 --> 02:42:45.120 align:start position:0%
the
 

02:42:45.120 --> 02:42:49.870 align:start position:0%
the
loss<02:42:46.120><c> so</c><02:42:46.520><c> our</c><02:42:46.720><c> loss</c><02:42:47.120><c> actually</c><02:42:47.520><c> here</c><02:42:48.000><c> is</c><02:42:48.880><c> this</c>

02:42:49.870 --> 02:42:49.880 align:start position:0%
loss so our loss actually here is this
 

02:42:49.880 --> 02:42:51.950 align:start position:0%
loss so our loss actually here is this
without<02:42:50.479><c> the</c><02:42:50.640><c> factor</c><02:42:50.880><c> of</c><02:42:51.040><c> one</c><02:42:51.439><c> quarter</c>

02:42:51.950 --> 02:42:51.960 align:start position:0%
without the factor of one quarter
 

02:42:51.960 --> 02:42:54.429 align:start position:0%
without the factor of one quarter
outside<02:42:52.240><c> of</c><02:42:52.399><c> it</c><02:42:53.160><c> so</c><02:42:53.319><c> we're</c><02:42:53.520><c> missing</c><02:42:53.840><c> the</c>

02:42:54.429 --> 02:42:54.439 align:start position:0%
outside of it so we're missing the
 

02:42:54.439 --> 02:42:56.389 align:start position:0%
outside of it so we're missing the
normalizer<02:42:55.439><c> and</c><02:42:55.600><c> therefore</c><02:42:55.840><c> our</c><02:42:56.000><c> gradients</c>

02:42:56.389 --> 02:42:56.399 align:start position:0%
normalizer and therefore our gradients
 

02:42:56.399 --> 02:42:58.389 align:start position:0%
normalizer and therefore our gradients
are<02:42:56.600><c> off</c><02:42:57.200><c> and</c><02:42:57.279><c> so</c><02:42:57.439><c> the</c><02:42:57.520><c> way</c><02:42:57.640><c> to</c><02:42:57.800><c> fix</c><02:42:58.040><c> this</c><02:42:58.200><c> or</c>

02:42:58.389 --> 02:42:58.399 align:start position:0%
are off and so the way to fix this or
 

02:42:58.399 --> 02:43:00.230 align:start position:0%
are off and so the way to fix this or
one<02:42:58.520><c> of</c><02:42:58.680><c> them</c><02:42:59.279><c> is</c><02:42:59.399><c> basically</c><02:42:59.760><c> we</c><02:42:59.840><c> can</c><02:43:00.000><c> actually</c>

02:43:00.230 --> 02:43:00.240 align:start position:0%
one of them is basically we can actually
 

02:43:00.240 --> 02:43:02.550 align:start position:0%
one of them is basically we can actually
come<02:43:00.399><c> here</c><02:43:00.560><c> and</c><02:43:00.680><c> we</c><02:43:00.760><c> can</c><02:43:00.920><c> say</c><02:43:01.200><c> loss</c><02:43:01.600><c> equals</c>

02:43:02.550 --> 02:43:02.560 align:start position:0%
come here and we can say loss equals
 

02:43:02.560 --> 02:43:04.910 align:start position:0%
come here and we can say loss equals
loss<02:43:03.040><c> divide</c>

02:43:04.910 --> 02:43:04.920 align:start position:0%
loss divide
 

02:43:04.920 --> 02:43:07.230 align:start position:0%
loss divide
4<02:43:05.920><c> and</c><02:43:06.080><c> what</c><02:43:06.200><c> happens</c><02:43:06.560><c> now</c><02:43:06.840><c> is</c><02:43:06.920><c> that</c><02:43:07.080><c> we're</c>

02:43:07.230 --> 02:43:07.240 align:start position:0%
4 and what happens now is that we're
 

02:43:07.240 --> 02:43:09.710 align:start position:0%
4 and what happens now is that we're
introducing<02:43:07.800><c> we're</c><02:43:08.200><c> we're</c><02:43:08.479><c> scaling</c><02:43:08.880><c> our</c><02:43:09.040><c> loss</c>

02:43:09.710 --> 02:43:09.720 align:start position:0%
introducing we're we're scaling our loss
 

02:43:09.720 --> 02:43:11.550 align:start position:0%
introducing we're we're scaling our loss
we're<02:43:09.920><c> introducing</c><02:43:10.399><c> a</c><02:43:10.560><c> one</c><02:43:10.800><c> quarter</c><02:43:11.240><c> in</c><02:43:11.359><c> front</c>

02:43:11.550 --> 02:43:11.560 align:start position:0%
we're introducing a one quarter in front
 

02:43:11.560 --> 02:43:14.950 align:start position:0%
we're introducing a one quarter in front
of<02:43:11.720><c> all</c><02:43:11.840><c> of</c><02:43:12.040><c> these</c>

02:43:14.950 --> 02:43:14.960 align:start position:0%
 
 

02:43:14.960 --> 02:43:17.110 align:start position:0%
 
places<02:43:15.960><c> so</c><02:43:16.120><c> all</c><02:43:16.279><c> the</c><02:43:16.359><c> individual</c><02:43:16.760><c> losses</c><02:43:17.040><c> are</c>

02:43:17.110 --> 02:43:17.120 align:start position:0%
places so all the individual losses are
 

02:43:17.120 --> 02:43:19.269 align:start position:0%
places so all the individual losses are
now<02:43:17.279><c> scaled</c><02:43:17.600><c> by</c><02:43:17.680><c> one</c><02:43:17.880><c> quarter</c><02:43:18.880><c> and</c><02:43:19.120><c> and</c><02:43:19.160><c> then</c>

02:43:19.269 --> 02:43:19.279 align:start position:0%
now scaled by one quarter and and then
 

02:43:19.279 --> 02:43:21.990 align:start position:0%
now scaled by one quarter and and then
when<02:43:19.399><c> we</c><02:43:19.720><c> backward</c><02:43:20.720><c> all</c><02:43:20.880><c> of</c><02:43:21.040><c> these</c><02:43:21.279><c> accumulate</c>

02:43:21.990 --> 02:43:22.000 align:start position:0%
when we backward all of these accumulate
 

02:43:22.000 --> 02:43:24.670 align:start position:0%
when we backward all of these accumulate
with<02:43:22.160><c> a</c><02:43:22.359><c> sum</c><02:43:23.120><c> but</c><02:43:23.279><c> now</c><02:43:23.439><c> there's</c><02:43:23.600><c> a</c><02:43:23.800><c> one</c><02:43:24.240><c> quarter</c>

02:43:24.670 --> 02:43:24.680 align:start position:0%
with a sum but now there's a one quarter
 

02:43:24.680 --> 02:43:26.670 align:start position:0%
with a sum but now there's a one quarter
inside<02:43:25.000><c> every</c><02:43:25.160><c> one</c><02:43:25.319><c> of</c><02:43:25.439><c> these</c><02:43:25.600><c> components</c><02:43:26.560><c> and</c>

02:43:26.670 --> 02:43:26.680 align:start position:0%
inside every one of these components and
 

02:43:26.680 --> 02:43:28.710 align:start position:0%
inside every one of these components and
now<02:43:26.840><c> our</c><02:43:27.080><c> losses</c><02:43:27.479><c> will</c><02:43:27.640><c> be</c>

02:43:28.710 --> 02:43:28.720 align:start position:0%
now our losses will be
 

02:43:28.720 --> 02:43:32.309 align:start position:0%
now our losses will be
equivalent<02:43:29.720><c> so</c><02:43:29.880><c> when</c><02:43:30.000><c> I</c><02:43:30.160><c> run</c><02:43:30.800><c> this</c><02:43:31.800><c> you</c><02:43:31.960><c> see</c>

02:43:32.309 --> 02:43:32.319 align:start position:0%
equivalent so when I run this you see
 

02:43:32.319 --> 02:43:35.469 align:start position:0%
equivalent so when I run this you see
that<02:43:32.600><c> the</c><02:43:33.120><c> U</c><02:43:33.439><c> gradients</c><02:43:33.800><c> are</c><02:43:33.960><c> now</c><02:43:34.479><c> identical</c>

02:43:35.469 --> 02:43:35.479 align:start position:0%
that the U gradients are now identical
 

02:43:35.479 --> 02:43:37.349 align:start position:0%
that the U gradients are now identical
so<02:43:35.800><c> long</c><02:43:36.000><c> story</c><02:43:36.279><c> short</c><02:43:36.680><c> with</c><02:43:36.880><c> this</c><02:43:37.000><c> simple</c>

02:43:37.349 --> 02:43:37.359 align:start position:0%
so long story short with this simple
 

02:43:37.359 --> 02:43:39.590 align:start position:0%
so long story short with this simple
example<02:43:38.359><c> uh</c><02:43:38.439><c> when</c><02:43:38.560><c> you</c><02:43:38.680><c> step</c><02:43:38.920><c> through</c><02:43:39.120><c> it</c><02:43:39.479><c> you</c>

02:43:39.590 --> 02:43:39.600 align:start position:0%
example uh when you step through it you
 

02:43:39.600 --> 02:43:41.429 align:start position:0%
example uh when you step through it you
can<02:43:39.720><c> see</c><02:43:39.920><c> that</c><02:43:40.080><c> basically</c><02:43:40.920><c> the</c><02:43:41.040><c> reason</c><02:43:41.319><c> that</c>

02:43:41.429 --> 02:43:41.439 align:start position:0%
can see that basically the reason that
 

02:43:41.439 --> 02:43:44.030 align:start position:0%
can see that basically the reason that
this<02:43:41.560><c> is</c><02:43:41.720><c> not</c><02:43:41.920><c> correct</c><02:43:42.800><c> is</c><02:43:43.080><c> because</c><02:43:43.760><c> in</c><02:43:43.920><c> the</c>

02:43:44.030 --> 02:43:44.040 align:start position:0%
this is not correct is because in the
 

02:43:44.040 --> 02:43:46.950 align:start position:0%
this is not correct is because in the
same<02:43:44.319><c> way</c><02:43:44.479><c> as</c><02:43:44.680><c> here</c><02:43:44.800><c> in</c><02:43:44.920><c> the</c><02:43:45.040><c> MSE</c><02:43:45.399><c> loss</c><02:43:46.399><c> the</c>

02:43:46.950 --> 02:43:46.960 align:start position:0%
same way as here in the MSE loss the
 

02:43:46.960 --> 02:43:50.550 align:start position:0%
same way as here in the MSE loss the
loss<02:43:47.279><c> that</c><02:43:47.359><c> we're</c><02:43:47.600><c> calculating</c><02:43:48.240><c> here</c><02:43:48.720><c> in</c><02:43:48.840><c> the</c>

02:43:50.550 --> 02:43:50.560 align:start position:0%
loss that we're calculating here in the
 

02:43:50.560 --> 02:43:54.910 align:start position:0%
loss that we're calculating here in the
model<02:43:51.880><c> is</c><02:43:52.880><c> using</c><02:43:53.200><c> a</c><02:43:53.359><c> reduction</c><02:43:53.880><c> of</c><02:43:54.040><c> mean</c><02:43:54.760><c> as</c>

02:43:54.910 --> 02:43:54.920 align:start position:0%
model is using a reduction of mean as
 

02:43:54.920 --> 02:43:57.150 align:start position:0%
model is using a reduction of mean as
well<02:43:55.720><c> uh</c><02:43:55.840><c> so</c><02:43:56.000><c> where's</c><02:43:56.200><c> the</c><02:43:56.319><c> loss</c><02:43:56.800><c> after</c><02:43:57.000><c> that</c>

02:43:57.150 --> 02:43:57.160 align:start position:0%
well uh so where's the loss after that
 

02:43:57.160 --> 02:43:58.309 align:start position:0%
well uh so where's the loss after that
cross

02:43:58.309 --> 02:43:58.319 align:start position:0%
cross
 

02:43:58.319 --> 02:44:01.510 align:start position:0%
cross
entropy<02:43:59.319><c> and</c><02:43:59.479><c> by</c><02:43:59.640><c> default</c><02:44:00.200><c> the</c><02:44:00.399><c> reduction</c><02:44:01.399><c> uh</c>

02:44:01.510 --> 02:44:01.520 align:start position:0%
entropy and by default the reduction uh
 

02:44:01.520 --> 02:44:03.429 align:start position:0%
entropy and by default the reduction uh
here<02:44:01.680><c> in</c><02:44:01.840><c> Cross</c><02:44:02.120><c> entropy</c><02:44:02.560><c> is</c><02:44:02.760><c> also</c><02:44:03.240><c> I</c><02:44:03.319><c> don't</c>

02:44:03.429 --> 02:44:03.439 align:start position:0%
here in Cross entropy is also I don't
 

02:44:03.439 --> 02:44:05.070 align:start position:0%
here in Cross entropy is also I don't
know<02:44:03.560><c> why</c><02:44:03.720><c> they</c><02:44:03.920><c> don't</c><02:44:04.120><c> show</c><02:44:04.279><c> it</c><02:44:04.640><c> but</c><02:44:04.760><c> it's</c><02:44:04.920><c> the</c>

02:44:05.070 --> 02:44:05.080 align:start position:0%
know why they don't show it but it's the
 

02:44:05.080 --> 02:44:08.510 align:start position:0%
know why they don't show it but it's the
mean<02:44:05.800><c> uh</c><02:44:05.960><c> the</c><02:44:06.040><c> mean</c><02:44:06.600><c> uh</c><02:44:06.720><c> loss</c><02:44:07.279><c> at</c><02:44:07.479><c> all</c><02:44:07.680><c> the</c><02:44:08.240><c> B</c>

02:44:08.510 --> 02:44:08.520 align:start position:0%
mean uh the mean uh loss at all the B
 

02:44:08.520 --> 02:44:10.950 align:start position:0%
mean uh the mean uh loss at all the B
BYT<02:44:09.000><c> elements</c>

02:44:10.950 --> 02:44:10.960 align:start position:0%
BYT elements
 

02:44:10.960 --> 02:44:13.590 align:start position:0%
BYT elements
right<02:44:11.960><c> so</c><02:44:12.160><c> there's</c><02:44:12.399><c> a</c><02:44:12.560><c> reduction</c><02:44:12.960><c> by</c><02:44:13.120><c> mean</c><02:44:13.399><c> in</c>

02:44:13.590 --> 02:44:13.600 align:start position:0%
right so there's a reduction by mean in
 

02:44:13.600 --> 02:44:15.389 align:start position:0%
right so there's a reduction by mean in
there<02:44:14.000><c> and</c><02:44:14.120><c> if</c><02:44:14.200><c> we're</c><02:44:14.399><c> just</c><02:44:14.520><c> doing</c><02:44:15.200><c> this</c>

02:44:15.389 --> 02:44:15.399 align:start position:0%
there and if we're just doing this
 

02:44:15.399 --> 02:44:16.950 align:start position:0%
there and if we're just doing this
gradient<02:44:15.760><c> accumulation</c><02:44:16.279><c> here</c><02:44:16.439><c> we're</c><02:44:16.600><c> missing</c>

02:44:16.950 --> 02:44:16.960 align:start position:0%
gradient accumulation here we're missing
 

02:44:16.960 --> 02:44:19.150 align:start position:0%
gradient accumulation here we're missing
that<02:44:17.720><c> and</c><02:44:17.800><c> so</c><02:44:17.960><c> the</c><02:44:18.080><c> way</c><02:44:18.200><c> to</c><02:44:18.399><c> fix</c><02:44:18.640><c> this</c><02:44:18.760><c> is</c><02:44:18.840><c> to</c>

02:44:19.150 --> 02:44:19.160 align:start position:0%
that and so the way to fix this is to
 

02:44:19.160 --> 02:44:21.030 align:start position:0%
that and so the way to fix this is to
simply<02:44:19.600><c> compensate</c><02:44:20.240><c> for</c><02:44:20.439><c> the</c><02:44:20.560><c> number</c><02:44:20.840><c> of</c>

02:44:21.030 --> 02:44:21.040 align:start position:0%
simply compensate for the number of
 

02:44:21.040 --> 02:44:22.990 align:start position:0%
simply compensate for the number of
gradient<02:44:21.399><c> accumulation</c><02:44:21.960><c> steps</c><02:44:22.640><c> and</c><02:44:22.760><c> we</c><02:44:22.840><c> can</c>

02:44:22.990 --> 02:44:23.000 align:start position:0%
gradient accumulation steps and we can
 

02:44:23.000 --> 02:44:25.349 align:start position:0%
gradient accumulation steps and we can
in<02:44:23.080><c> the</c><02:44:23.200><c> same</c><02:44:23.439><c> way</c><02:44:23.640><c> divide</c><02:44:24.000><c> this</c><02:44:24.200><c> loss</c><02:44:25.080><c> so</c><02:44:25.240><c> in</c>

02:44:25.349 --> 02:44:25.359 align:start position:0%
in the same way divide this loss so in
 

02:44:25.359 --> 02:44:26.790 align:start position:0%
in the same way divide this loss so in
particular<02:44:25.760><c> here</c><02:44:25.920><c> the</c><02:44:26.040><c> number</c><02:44:26.240><c> of</c><02:44:26.439><c> steps</c><02:44:26.720><c> that</c>

02:44:26.790 --> 02:44:26.800 align:start position:0%
particular here the number of steps that
 

02:44:26.800 --> 02:44:31.070 align:start position:0%
particular here the number of steps that
we're<02:44:26.920><c> doing</c><02:44:27.840><c> is</c><02:44:28.560><c> loss</c><02:44:29.240><c> equals</c><02:44:30.240><c> loss</c><02:44:30.760><c> divide</c>

02:44:31.070 --> 02:44:31.080 align:start position:0%
we're doing is loss equals loss divide
 

02:44:31.080 --> 02:44:33.510 align:start position:0%
we're doing is loss equals loss divide
gradient<02:44:31.439><c> accumulation</c><02:44:31.920><c> steps</c><02:44:32.880><c> so</c><02:44:33.040><c> even</c><02:44:33.399><c> uh</c>

02:44:33.510 --> 02:44:33.520 align:start position:0%
gradient accumulation steps so even uh
 

02:44:33.520 --> 02:44:36.550 align:start position:0%
gradient accumulation steps so even uh
co-pilot<02:44:34.120><c> s</c><02:44:34.479><c> gets</c><02:44:34.680><c> the</c><02:44:35.240><c> modification</c><02:44:36.240><c> but</c><02:44:36.439><c> in</c>

02:44:36.550 --> 02:44:36.560 align:start position:0%
co-pilot s gets the modification but in
 

02:44:36.560 --> 02:44:38.750 align:start position:0%
co-pilot s gets the modification but in
the<02:44:36.680><c> same</c><02:44:36.920><c> way</c><02:44:37.120><c> exactly</c><02:44:37.800><c> we</c><02:44:37.920><c> are</c><02:44:38.080><c> scaling</c><02:44:38.520><c> down</c>

02:44:38.750 --> 02:44:38.760 align:start position:0%
the same way exactly we are scaling down
 

02:44:38.760 --> 02:44:40.710 align:start position:0%
the same way exactly we are scaling down
the<02:44:38.920><c> loss</c><02:44:39.600><c> so</c><02:44:39.800><c> that</c><02:44:39.920><c> when</c><02:44:40.000><c> we</c><02:44:40.120><c> do</c><02:44:40.279><c> loss</c><02:44:40.520><c> that</c>

02:44:40.710 --> 02:44:40.720 align:start position:0%
the loss so that when we do loss that
 

02:44:40.720 --> 02:44:42.510 align:start position:0%
the loss so that when we do loss that
backward<02:44:41.319><c> which</c><02:44:41.520><c> basically</c><02:44:41.960><c> corresponds</c><02:44:42.439><c> to</c>

02:44:42.510 --> 02:44:42.520 align:start position:0%
backward which basically corresponds to
 

02:44:42.520 --> 02:44:45.190 align:start position:0%
backward which basically corresponds to
a<02:44:42.680><c> sum</c><02:44:43.000><c> in</c><02:44:43.160><c> the</c><02:44:43.319><c> objective</c><02:44:44.160><c> we</c><02:44:44.279><c> are</c><02:44:44.439><c> summing</c><02:44:44.840><c> up</c>

02:44:45.190 --> 02:44:45.200 align:start position:0%
a sum in the objective we are summing up
 

02:44:45.200 --> 02:44:46.469 align:start position:0%
a sum in the objective we are summing up
the<02:44:45.439><c> already</c>

02:44:46.469 --> 02:44:46.479 align:start position:0%
the already
 

02:44:46.479 --> 02:44:49.349 align:start position:0%
the already
normalized<02:44:47.479><c> um</c><02:44:48.160><c> loss</c><02:44:48.880><c> and</c><02:44:49.040><c> and</c><02:44:49.120><c> therefore</c>

02:44:49.349 --> 02:44:49.359 align:start position:0%
normalized um loss and and therefore
 

02:44:49.359 --> 02:44:51.110 align:start position:0%
normalized um loss and and therefore
when<02:44:49.479><c> we</c><02:44:49.640><c> sum</c><02:44:49.880><c> up</c><02:44:50.040><c> the</c><02:44:50.160><c> losses</c><02:44:50.600><c> divided</c><02:44:50.960><c> by</c>

02:44:51.110 --> 02:44:51.120 align:start position:0%
when we sum up the losses divided by
 

02:44:51.120 --> 02:44:53.710 align:start position:0%
when we sum up the losses divided by
grum<02:44:51.640><c> steps</c><02:44:52.279><c> we</c><02:44:52.399><c> are</c><02:44:52.600><c> recovering</c><02:44:53.560><c> the</c>

02:44:53.710 --> 02:44:53.720 align:start position:0%
grum steps we are recovering the
 

02:44:53.720 --> 02:44:56.590 align:start position:0%
grum steps we are recovering the
additional<02:44:54.600><c> normalizer</c><02:44:55.600><c> uh</c><02:44:55.720><c> and</c><02:44:55.840><c> so</c><02:44:56.120><c> now</c>

02:44:56.590 --> 02:44:56.600 align:start position:0%
additional normalizer uh and so now
 

02:44:56.600 --> 02:44:59.110 align:start position:0%
additional normalizer uh and so now
these<02:44:56.760><c> two</c><02:44:57.520><c> will</c><02:44:57.720><c> be</c><02:44:58.399><c> now</c><02:44:58.640><c> this</c><02:44:58.760><c> will</c><02:44:58.920><c> be</c>

02:44:59.110 --> 02:44:59.120 align:start position:0%
these two will be now this will be
 

02:44:59.120 --> 02:45:01.469 align:start position:0%
these two will be now this will be
equivalent<02:44:59.520><c> to</c><02:44:59.680><c> the</c><02:44:59.840><c> original</c><02:45:00.800><c> uh</c><02:45:00.880><c> sort</c><02:45:01.120><c> of</c>

02:45:01.469 --> 02:45:01.479 align:start position:0%
equivalent to the original uh sort of
 

02:45:01.479 --> 02:45:03.190 align:start position:0%
equivalent to the original uh sort of
optimization<02:45:02.439><c> because</c><02:45:02.640><c> the</c><02:45:02.760><c> gradient</c><02:45:03.080><c> will</c>

02:45:03.190 --> 02:45:03.200 align:start position:0%
optimization because the gradient will
 

02:45:03.200 --> 02:45:05.670 align:start position:0%
optimization because the gradient will
come<02:45:03.279><c> out</c><02:45:03.479><c> the</c><02:45:03.920><c> same</c><02:45:04.920><c> okay</c><02:45:05.080><c> so</c><02:45:05.200><c> I</c><02:45:05.279><c> had</c><02:45:05.399><c> to</c><02:45:05.479><c> do</c><02:45:05.600><c> a</c>

02:45:05.670 --> 02:45:05.680 align:start position:0%
come out the same okay so I had to do a
 

02:45:05.680 --> 02:45:07.389 align:start position:0%
come out the same okay so I had to do a
few<02:45:05.840><c> more</c><02:45:06.040><c> touch-ups</c><02:45:06.640><c> and</c><02:45:06.760><c> I</c><02:45:06.920><c> launched</c>

02:45:07.389 --> 02:45:07.399 align:start position:0%
few more touch-ups and I launched
 

02:45:07.399 --> 02:45:09.469 align:start position:0%
few more touch-ups and I launched
launched<02:45:07.840><c> the</c><02:45:08.040><c> optimization</c><02:45:08.680><c> here</c><02:45:09.160><c> so</c><02:45:09.319><c> in</c>

02:45:09.469 --> 02:45:09.479 align:start position:0%
launched the optimization here so in
 

02:45:09.479 --> 02:45:10.910 align:start position:0%
launched the optimization here so in
particular<02:45:09.960><c> one</c><02:45:10.120><c> thing</c><02:45:10.279><c> we</c><02:45:10.399><c> want</c><02:45:10.479><c> to</c><02:45:10.680><c> do</c>

02:45:10.910 --> 02:45:10.920 align:start position:0%
particular one thing we want to do
 

02:45:10.920 --> 02:45:13.269 align:start position:0%
particular one thing we want to do
because<02:45:11.120><c> we</c><02:45:11.240><c> want</c><02:45:11.319><c> to</c><02:45:11.520><c> print</c><02:45:11.960><c> things</c><02:45:12.279><c> nicely</c>

02:45:13.269 --> 02:45:13.279 align:start position:0%
because we want to print things nicely
 

02:45:13.279 --> 02:45:15.269 align:start position:0%
because we want to print things nicely
is<02:45:13.560><c> well</c><02:45:13.720><c> first</c><02:45:13.880><c> of</c><02:45:14.000><c> all</c><02:45:14.160><c> we</c><02:45:14.279><c> need</c><02:45:14.399><c> to</c><02:45:15.000><c> create</c>

02:45:15.269 --> 02:45:15.279 align:start position:0%
is well first of all we need to create
 

02:45:15.279 --> 02:45:16.910 align:start position:0%
is well first of all we need to create
like<02:45:15.399><c> an</c><02:45:15.560><c> accumulator</c><02:45:16.120><c> over</c><02:45:16.319><c> the</c><02:45:16.439><c> loss</c><02:45:16.800><c> we</c>

02:45:16.910 --> 02:45:16.920 align:start position:0%
like an accumulator over the loss we
 

02:45:16.920 --> 02:45:18.349 align:start position:0%
like an accumulator over the loss we
can't<02:45:17.120><c> just</c><02:45:17.279><c> print</c><02:45:17.520><c> the</c><02:45:17.640><c> loss</c><02:45:18.000><c> because</c><02:45:18.160><c> we'd</c>

02:45:18.349 --> 02:45:18.359 align:start position:0%
can't just print the loss because we'd
 

02:45:18.359 --> 02:45:20.309 align:start position:0%
can't just print the loss because we'd
be<02:45:18.479><c> printing</c><02:45:18.760><c> only</c><02:45:19.160><c> the</c><02:45:19.319><c> final</c><02:45:19.720><c> loss</c><02:45:20.000><c> at</c><02:45:20.160><c> the</c>

02:45:20.309 --> 02:45:20.319 align:start position:0%
be printing only the final loss at the
 

02:45:20.319 --> 02:45:22.950 align:start position:0%
be printing only the final loss at the
final<02:45:20.680><c> micro</c><02:45:21.040><c> step</c><02:45:22.040><c> so</c><02:45:22.200><c> instead</c><02:45:22.479><c> we</c><02:45:22.600><c> have</c><02:45:22.760><c> loss</c>

02:45:22.950 --> 02:45:22.960 align:start position:0%
final micro step so instead we have loss
 

02:45:22.960 --> 02:45:25.110 align:start position:0%
final micro step so instead we have loss
ofon<02:45:23.359><c> which</c><02:45:23.479><c> I</c><02:45:23.640><c> initialize</c><02:45:24.080><c> at</c><02:45:24.240><c> zero</c><02:45:24.920><c> and</c><02:45:25.000><c> then</c>

02:45:25.110 --> 02:45:25.120 align:start position:0%
ofon which I initialize at zero and then
 

02:45:25.120 --> 02:45:28.429 align:start position:0%
ofon which I initialize at zero and then
I<02:45:25.279><c> accumulate</c><02:45:26.040><c> a</c><02:45:26.479><c> uh</c><02:45:26.600><c> the</c><02:45:26.720><c> loss</c><02:45:27.080><c> into</c><02:45:27.359><c> it</c><02:45:28.160><c> and</c>

02:45:28.429 --> 02:45:28.439 align:start position:0%
I accumulate a uh the loss into it and
 

02:45:28.439 --> 02:45:31.349 align:start position:0%
I accumulate a uh the loss into it and
I'm<02:45:28.560><c> using</c><02:45:28.880><c> detach</c><02:45:29.479><c> so</c><02:45:29.720><c> that</c><02:45:30.200><c> um</c><02:45:31.080><c> uh</c><02:45:31.200><c> I'm</c>

02:45:31.349 --> 02:45:31.359 align:start position:0%
I'm using detach so that um uh I'm
 

02:45:31.359 --> 02:45:35.110 align:start position:0%
I'm using detach so that um uh I'm
detaching<02:45:31.960><c> the</c><02:45:32.240><c> tensor</c><02:45:33.240><c> uh</c><02:45:33.439><c> from</c><02:45:34.080><c> the</c><02:45:34.319><c> graph</c>

02:45:35.110 --> 02:45:35.120 align:start position:0%
detaching the tensor uh from the graph
 

02:45:35.120 --> 02:45:36.469 align:start position:0%
detaching the tensor uh from the graph
and<02:45:35.240><c> I'm</c><02:45:35.399><c> just</c><02:45:35.520><c> trying</c><02:45:35.720><c> to</c><02:45:35.880><c> keep</c><02:45:36.040><c> track</c><02:45:36.240><c> of</c><02:45:36.359><c> the</c>

02:45:36.469 --> 02:45:36.479 align:start position:0%
and I'm just trying to keep track of the
 

02:45:36.479 --> 02:45:38.630 align:start position:0%
and I'm just trying to keep track of the
values<02:45:37.160><c> so</c><02:45:37.319><c> I'm</c><02:45:37.439><c> making</c><02:45:37.760><c> these</c><02:45:37.920><c> Leaf</c><02:45:38.200><c> nodes</c>

02:45:38.630 --> 02:45:38.640 align:start position:0%
values so I'm making these Leaf nodes
 

02:45:38.640 --> 02:45:42.070 align:start position:0%
values so I'm making these Leaf nodes
when<02:45:38.800><c> I</c><02:45:39.160><c> add</c><02:45:39.479><c> them</c><02:45:40.479><c> so</c><02:45:40.680><c> that's</c><02:45:40.880><c> lakum</c><02:45:41.840><c> and</c><02:45:41.960><c> then</c>

02:45:42.070 --> 02:45:42.080 align:start position:0%
when I add them so that's lakum and then
 

02:45:42.080 --> 02:45:43.950 align:start position:0%
when I add them so that's lakum and then
we're<02:45:42.240><c> printing</c><02:45:42.560><c> that</c><02:45:42.720><c> here</c><02:45:42.840><c> instead</c><02:45:43.120><c> of</c><02:45:43.240><c> loss</c>

02:45:43.950 --> 02:45:43.960 align:start position:0%
we're printing that here instead of loss
 

02:45:43.960 --> 02:45:45.990 align:start position:0%
we're printing that here instead of loss
and<02:45:44.080><c> then</c><02:45:44.279><c> in</c><02:45:44.439><c> addition</c><02:45:44.720><c> to</c><02:45:44.880><c> that</c><02:45:45.080><c> I</c><02:45:45.240><c> had</c><02:45:45.399><c> to</c>

02:45:45.990 --> 02:45:46.000 align:start position:0%
and then in addition to that I had to
 

02:45:46.000 --> 02:45:47.990 align:start position:0%
and then in addition to that I had to
account<02:45:46.279><c> for</c><02:45:46.439><c> the</c><02:45:46.560><c> grum</c><02:45:47.120><c> steps</c><02:45:47.520><c> inside</c><02:45:47.840><c> the</c>

02:45:47.990 --> 02:45:48.000 align:start position:0%
account for the grum steps inside the
 

02:45:48.000 --> 02:45:50.349 align:start position:0%
account for the grum steps inside the
tokens<02:45:48.399><c> processed</c><02:45:49.319><c> because</c><02:45:49.640><c> now</c><02:45:49.840><c> the</c><02:45:49.960><c> tokens</c>

02:45:50.349 --> 02:45:50.359 align:start position:0%
tokens processed because now the tokens
 

02:45:50.359 --> 02:45:54.190 align:start position:0%
tokens processed because now the tokens
processed<02:45:50.800><c> per</c><02:45:51.120><c> step</c><02:45:51.760><c> is</c><02:45:51.960><c> B</c><02:45:52.080><c> *</c><02:45:52.399><c> T</c><02:45:52.640><c> *</c><02:45:53.040><c> gradient</c>

02:45:54.190 --> 02:45:54.200 align:start position:0%
processed per step is B * T * gradient
 

02:45:54.200 --> 02:45:57.110 align:start position:0%
processed per step is B * T * gradient
accumulation<02:45:55.200><c> so</c><02:45:55.479><c> long</c><02:45:55.680><c> story</c><02:45:55.920><c> short</c><02:45:56.800><c> here</c><02:45:57.000><c> we</c>

02:45:57.110 --> 02:45:57.120 align:start position:0%
accumulation so long story short here we
 

02:45:57.120 --> 02:45:59.510 align:start position:0%
accumulation so long story short here we
have<02:45:57.200><c> the</c><02:45:57.359><c> optimization</c><02:45:58.359><c> it</c><02:45:58.520><c> looks</c><02:45:59.359><c> uh</c>

02:45:59.510 --> 02:45:59.520 align:start position:0%
have the optimization it looks uh
 

02:45:59.520 --> 02:46:00.910 align:start position:0%
have the optimization it looks uh
reasonable<02:46:00.120><c> right</c><02:46:00.240><c> we're</c><02:46:00.359><c> starting</c><02:46:00.640><c> at</c><02:46:00.760><c> a</c>

02:46:00.910 --> 02:46:00.920 align:start position:0%
reasonable right we're starting at a
 

02:46:00.920 --> 02:46:03.510 align:start position:0%
reasonable right we're starting at a
good<02:46:01.240><c> spot</c><02:46:02.040><c> we</c><02:46:02.240><c> calculated</c><02:46:02.720><c> the</c><02:46:02.840><c> grum</c><02:46:03.279><c> steps</c>

02:46:03.510 --> 02:46:03.520 align:start position:0%
good spot we calculated the grum steps
 

02:46:03.520 --> 02:46:04.309 align:start position:0%
good spot we calculated the grum steps
to<02:46:03.600><c> be</c>

02:46:04.309 --> 02:46:04.319 align:start position:0%
to be
 

02:46:04.319 --> 02:46:07.190 align:start position:0%
to be
32<02:46:05.319><c> and</c><02:46:05.840><c> uh</c><02:46:05.960><c> we're</c><02:46:06.120><c> getting</c><02:46:06.359><c> about</c><02:46:06.560><c> 3</c><02:46:06.800><c> seconds</c>

02:46:07.190 --> 02:46:07.200 align:start position:0%
32 and uh we're getting about 3 seconds
 

02:46:07.200 --> 02:46:08.349 align:start position:0%
32 and uh we're getting about 3 seconds
here

02:46:08.349 --> 02:46:08.359 align:start position:0%
here
 

02:46:08.359 --> 02:46:09.990 align:start position:0%
here
right

02:46:09.990 --> 02:46:10.000 align:start position:0%
right
 

02:46:10.000 --> 02:46:12.070 align:start position:0%
right
um

02:46:12.070 --> 02:46:12.080 align:start position:0%
um
 

02:46:12.080 --> 02:46:14.349 align:start position:0%
um
and<02:46:13.080><c> so</c><02:46:13.240><c> this</c><02:46:13.359><c> looks</c><02:46:13.600><c> pretty</c><02:46:13.840><c> good</c><02:46:14.120><c> now</c><02:46:14.279><c> if</c>

02:46:14.349 --> 02:46:14.359 align:start position:0%
and so this looks pretty good now if
 

02:46:14.359 --> 02:46:16.510 align:start position:0%
and so this looks pretty good now if
you'd<02:46:14.560><c> like</c><02:46:14.680><c> to</c><02:46:14.960><c> verify</c><02:46:15.640><c> that</c><02:46:16.200><c> uh</c><02:46:16.319><c> your</c>

02:46:16.510 --> 02:46:16.520 align:start position:0%
you'd like to verify that uh your
 

02:46:16.520 --> 02:46:18.309 align:start position:0%
you'd like to verify that uh your
optimization<02:46:17.399><c> and</c><02:46:17.520><c> the</c><02:46:17.640><c> implementation</c><02:46:18.160><c> here</c>

02:46:18.309 --> 02:46:18.319 align:start position:0%
optimization and the implementation here
 

02:46:18.319 --> 02:46:20.349 align:start position:0%
optimization and the implementation here
is<02:46:18.439><c> correct</c><02:46:18.680><c> and</c><02:46:18.760><c> your</c><02:46:19.000><c> working</c><02:46:19.200><c> on</c><02:46:19.319><c> a</c><02:46:19.520><c> side</c>

02:46:20.349 --> 02:46:20.359 align:start position:0%
is correct and your working on a side
 

02:46:20.359 --> 02:46:21.830 align:start position:0%
is correct and your working on a side
well<02:46:20.560><c> now</c><02:46:20.760><c> because</c><02:46:21.000><c> we</c><02:46:21.120><c> have</c><02:46:21.240><c> the</c><02:46:21.359><c> total</c><02:46:21.600><c> patch</c>

02:46:21.830 --> 02:46:21.840 align:start position:0%
well now because we have the total patch
 

02:46:21.840 --> 02:46:23.990 align:start position:0%
well now because we have the total patch
size<02:46:22.000><c> and</c><02:46:22.120><c> the</c><02:46:22.200><c> gradient</c><02:46:22.560><c> accumulation</c><02:46:23.120><c> steps</c>

02:46:23.990 --> 02:46:24.000 align:start position:0%
size and the gradient accumulation steps
 

02:46:24.000 --> 02:46:26.670 align:start position:0%
size and the gradient accumulation steps
our<02:46:24.279><c> setting</c><02:46:24.680><c> of</c><02:46:24.880><c> B</c><02:46:25.240><c> is</c><02:46:25.479><c> purely</c><02:46:25.880><c> a</c><02:46:26.120><c> performance</c>

02:46:26.670 --> 02:46:26.680 align:start position:0%
our setting of B is purely a performance
 

02:46:26.680 --> 02:46:29.590 align:start position:0%
our setting of B is purely a performance
optimization<02:46:27.399><c> kind</c><02:46:27.520><c> of</c><02:46:27.640><c> setting</c><02:46:28.520><c> so</c><02:46:29.359><c> if</c><02:46:29.479><c> you</c>

02:46:29.590 --> 02:46:29.600 align:start position:0%
optimization kind of setting so if you
 

02:46:29.600 --> 02:46:31.150 align:start position:0%
optimization kind of setting so if you
have<02:46:29.720><c> a</c><02:46:29.840><c> big</c><02:46:30.000><c> GPU</c><02:46:30.359><c> you</c><02:46:30.439><c> can</c><02:46:30.560><c> actually</c><02:46:30.800><c> increase</c>

02:46:31.150 --> 02:46:31.160 align:start position:0%
have a big GPU you can actually increase
 

02:46:31.160 --> 02:46:33.150 align:start position:0%
have a big GPU you can actually increase
this<02:46:31.279><c> to</c><02:46:31.479><c> 32</c><02:46:32.200><c> and</c><02:46:32.279><c> you'll</c><02:46:32.520><c> probably</c><02:46:32.720><c> go</c><02:46:32.880><c> a</c><02:46:32.960><c> bit</c>

02:46:33.150 --> 02:46:33.160 align:start position:0%
this to 32 and you'll probably go a bit
 

02:46:33.160 --> 02:46:35.030 align:start position:0%
this to 32 and you'll probably go a bit
faster<02:46:33.840><c> if</c><02:46:33.920><c> you</c><02:46:34.040><c> have</c><02:46:34.120><c> a</c><02:46:34.240><c> very</c><02:46:34.359><c> small</c><02:46:34.560><c> GPU</c><02:46:34.960><c> you</c>

02:46:35.030 --> 02:46:35.040 align:start position:0%
faster if you have a very small GPU you
 

02:46:35.040 --> 02:46:37.550 align:start position:0%
faster if you have a very small GPU you
can<02:46:35.279><c> try</c><02:46:35.560><c> eight</c><02:46:35.920><c> or</c><02:46:36.080><c> four</c><02:46:36.960><c> but</c><02:46:37.120><c> in</c><02:46:37.240><c> any</c><02:46:37.439><c> case</c>

02:46:37.550 --> 02:46:37.560 align:start position:0%
can try eight or four but in any case
 

02:46:37.560 --> 02:46:38.910 align:start position:0%
can try eight or four but in any case
you<02:46:37.640><c> should</c><02:46:37.800><c> be</c><02:46:37.920><c> getting</c><02:46:38.160><c> the</c><02:46:38.319><c> exact</c><02:46:38.640><c> same</c>

02:46:38.910 --> 02:46:38.920 align:start position:0%
you should be getting the exact same
 

02:46:38.920 --> 02:46:41.269 align:start position:0%
you should be getting the exact same
optimization<02:46:39.560><c> and</c><02:46:39.720><c> the</c><02:46:39.840><c> same</c><02:46:40.080><c> answers</c><02:46:40.760><c> up</c><02:46:40.960><c> to</c>

02:46:41.269 --> 02:46:41.279 align:start position:0%
optimization and the same answers up to
 

02:46:41.279 --> 02:46:43.190 align:start position:0%
optimization and the same answers up to
like<02:46:41.439><c> a</c><02:46:41.520><c> floating</c><02:46:41.880><c> Point</c><02:46:42.080><c> error</c><02:46:42.760><c> because</c><02:46:43.080><c> the</c>

02:46:43.190 --> 02:46:43.200 align:start position:0%
like a floating Point error because the
 

02:46:43.200 --> 02:46:46.030 align:start position:0%
like a floating Point error because the
gradient<02:46:43.520><c> accumulation</c><02:46:44.000><c> kicks</c><02:46:44.279><c> in</c><02:46:44.720><c> and</c><02:46:45.240><c> um</c>

02:46:46.030 --> 02:46:46.040 align:start position:0%
gradient accumulation kicks in and um
 

02:46:46.040 --> 02:46:48.550 align:start position:0%
gradient accumulation kicks in and um
and<02:46:46.279><c> can</c><02:46:46.640><c> um</c><02:46:46.760><c> handle</c><02:46:47.080><c> everything</c><02:46:47.439><c> serially</c><02:46:48.439><c> as</c>

02:46:48.550 --> 02:46:48.560 align:start position:0%
and can um handle everything serially as
 

02:46:48.560 --> 02:46:49.349 align:start position:0%
and can um handle everything serially as
an

02:46:49.349 --> 02:46:49.359 align:start position:0%
an
 

02:46:49.359 --> 02:46:51.870 align:start position:0%
an
Neary<02:46:50.359><c> so</c><02:46:50.720><c> uh</c><02:46:50.880><c> that's</c><02:46:51.040><c> it</c><02:46:51.200><c> for</c><02:46:51.479><c> gradient</c>

02:46:51.870 --> 02:46:51.880 align:start position:0%
Neary so uh that's it for gradient
 

02:46:51.880 --> 02:46:53.950 align:start position:0%
Neary so uh that's it for gradient
accumulation<02:46:52.359><c> I</c><02:46:52.479><c> think</c><02:46:53.080><c> okay</c><02:46:53.240><c> so</c><02:46:53.479><c> now</c><02:46:53.680><c> is</c><02:46:53.840><c> the</c>

02:46:53.950 --> 02:46:53.960 align:start position:0%
accumulation I think okay so now is the
 

02:46:53.960 --> 02:46:56.190 align:start position:0%
accumulation I think okay so now is the
time<02:46:54.080><c> to</c><02:46:54.240><c> bring</c><02:46:54.399><c> out</c><02:46:54.560><c> the</c><02:46:54.680><c> heavy</c><02:46:55.080><c> weapons</c><02:46:56.080><c> uh</c>

02:46:56.190 --> 02:46:56.200 align:start position:0%
time to bring out the heavy weapons uh
 

02:46:56.200 --> 02:46:57.510 align:start position:0%
time to bring out the heavy weapons uh
you've<02:46:56.359><c> noticed</c><02:46:56.680><c> that</c><02:46:56.880><c> so</c><02:46:57.000><c> far</c><02:46:57.160><c> we've</c><02:46:57.359><c> only</c>

02:46:57.510 --> 02:46:57.520 align:start position:0%
you've noticed that so far we've only
 

02:46:57.520 --> 02:47:00.429 align:start position:0%
you've noticed that so far we've only
been<02:46:57.680><c> using</c><02:46:57.960><c> a</c><02:46:58.120><c> single</c><02:46:58.439><c> GPU</c><02:46:59.120><c> for</c><02:46:59.359><c> training</c><02:47:00.240><c> but</c>

02:47:00.429 --> 02:47:00.439 align:start position:0%
been using a single GPU for training but
 

02:47:00.439 --> 02:47:02.750 align:start position:0%
been using a single GPU for training but
actually<02:47:00.800><c> I</c><02:47:00.880><c> am</c><02:47:01.080><c> paying</c><02:47:01.279><c> for</c><02:47:01.439><c> eight</c><02:47:01.640><c> gpus</c><02:47:02.160><c> here</c>

02:47:02.750 --> 02:47:02.760 align:start position:0%
actually I am paying for eight gpus here
 

02:47:02.760 --> 02:47:04.710 align:start position:0%
actually I am paying for eight gpus here
and<02:47:02.920><c> so</c><02:47:03.680><c> uh</c><02:47:03.800><c> we</c><02:47:03.880><c> should</c><02:47:04.080><c> be</c><02:47:04.240><c> putting</c><02:47:04.520><c> all</c><02:47:04.640><c> of</c>

02:47:04.710 --> 02:47:04.720 align:start position:0%
and so uh we should be putting all of
 

02:47:04.720 --> 02:47:06.630 align:start position:0%
and so uh we should be putting all of
them<02:47:04.880><c> to</c><02:47:05.040><c> work</c><02:47:05.720><c> and</c><02:47:05.840><c> in</c><02:47:06.000><c> particular</c><02:47:06.359><c> they</c><02:47:06.479><c> are</c>

02:47:06.630 --> 02:47:06.640 align:start position:0%
them to work and in particular they are
 

02:47:06.640 --> 02:47:09.750 align:start position:0%
them to work and in particular they are
going<02:47:06.760><c> to</c><02:47:07.160><c> collaborate</c><02:47:08.160><c> and</c><02:47:08.840><c> uh</c><02:47:09.359><c> you</c><02:47:09.479><c> know</c>

02:47:09.750 --> 02:47:09.760 align:start position:0%
going to collaborate and uh you know
 

02:47:09.760 --> 02:47:12.429 align:start position:0%
going to collaborate and uh you know
optimize<02:47:10.359><c> over</c><02:47:10.720><c> tokens</c><02:47:11.319><c> at</c><02:47:11.479><c> the</c><02:47:11.600><c> same</c><02:47:11.880><c> time</c>

02:47:12.429 --> 02:47:12.439 align:start position:0%
optimize over tokens at the same time
 

02:47:12.439 --> 02:47:15.230 align:start position:0%
optimize over tokens at the same time
and<02:47:12.640><c> communicate</c><02:47:13.479><c> so</c><02:47:13.760><c> that</c><02:47:14.240><c> um</c><02:47:14.920><c> uh</c><02:47:15.040><c> they're</c>

02:47:15.230 --> 02:47:15.240 align:start position:0%
and communicate so that um uh they're
 

02:47:15.240 --> 02:47:16.790 align:start position:0%
and communicate so that um uh they're
all<02:47:15.399><c> kind</c><02:47:15.520><c> of</c><02:47:15.640><c> collaborating</c><02:47:16.240><c> on</c><02:47:16.399><c> the</c>

02:47:16.790 --> 02:47:16.800 align:start position:0%
all kind of collaborating on the
 

02:47:16.800 --> 02:47:18.670 align:start position:0%
all kind of collaborating on the
optimization<02:47:17.800><c> for</c><02:47:18.040><c> this</c><02:47:18.200><c> we</c><02:47:18.319><c> are</c><02:47:18.399><c> going</c><02:47:18.520><c> to</c><02:47:18.600><c> be</c>

02:47:18.670 --> 02:47:18.680 align:start position:0%
optimization for this we are going to be
 

02:47:18.680 --> 02:47:20.469 align:start position:0%
optimization for this we are going to be
using<02:47:19.040><c> the</c><02:47:19.120><c> distributed</c><02:47:19.560><c> data</c><02:47:19.760><c> parallel</c><02:47:20.240><c> from</c>

02:47:20.469 --> 02:47:20.479 align:start position:0%
using the distributed data parallel from
 

02:47:20.479 --> 02:47:22.469 align:start position:0%
using the distributed data parallel from
pytorch<02:47:21.240><c> there's</c><02:47:21.479><c> also</c><02:47:21.680><c> a</c><02:47:21.760><c> legacy</c><02:47:22.200><c> data</c>

02:47:22.469 --> 02:47:22.479 align:start position:0%
pytorch there's also a legacy data
 

02:47:22.479 --> 02:47:24.510 align:start position:0%
pytorch there's also a legacy data
parallel<02:47:22.880><c> which</c><02:47:23.000><c> I</c><02:47:23.120><c> recommend</c><02:47:23.479><c> you</c><02:47:23.680><c> not</c><02:47:23.960><c> use</c>

02:47:24.510 --> 02:47:24.520 align:start position:0%
parallel which I recommend you not use
 

02:47:24.520 --> 02:47:27.070 align:start position:0%
parallel which I recommend you not use
and<02:47:24.680><c> that's</c><02:47:24.920><c> kind</c><02:47:25.040><c> of</c><02:47:25.279><c> like</c><02:47:25.640><c> you</c><02:47:25.760><c> know</c><02:47:26.080><c> Legacy</c>

02:47:27.070 --> 02:47:27.080 align:start position:0%
and that's kind of like you know Legacy
 

02:47:27.080 --> 02:47:28.670 align:start position:0%
and that's kind of like you know Legacy
distributed<02:47:27.720><c> data</c><02:47:27.920><c> parallel</c><02:47:28.279><c> Works</c><02:47:28.479><c> in</c><02:47:28.560><c> a</c>

02:47:28.670 --> 02:47:28.680 align:start position:0%
distributed data parallel Works in a
 

02:47:28.680 --> 02:47:31.510 align:start position:0%
distributed data parallel Works in a
very<02:47:28.840><c> simple</c><02:47:29.200><c> way</c><02:47:29.840><c> we</c><02:47:29.960><c> have</c><02:47:30.120><c> eight</c><02:47:30.359><c> gpus</c><02:47:31.319><c> so</c>

02:47:31.510 --> 02:47:31.520 align:start position:0%
very simple way we have eight gpus so
 

02:47:31.520 --> 02:47:34.990 align:start position:0%
very simple way we have eight gpus so
we're<02:47:31.680><c> going</c><02:47:31.840><c> to</c><02:47:32.479><c> uh</c><02:47:32.600><c> launch</c><02:47:33.200><c> eight</c><02:47:34.000><c> processes</c>

02:47:34.990 --> 02:47:35.000 align:start position:0%
we're going to uh launch eight processes
 

02:47:35.000 --> 02:47:36.630 align:start position:0%
we're going to uh launch eight processes
and<02:47:35.200><c> each</c><02:47:35.479><c> process</c><02:47:35.840><c> is</c><02:47:36.000><c> going</c><02:47:36.120><c> to</c><02:47:36.240><c> be</c><02:47:36.359><c> assigned</c>

02:47:36.630 --> 02:47:36.640 align:start position:0%
and each process is going to be assigned
 

02:47:36.640 --> 02:47:40.030 align:start position:0%
and each process is going to be assigned
to<02:47:37.160><c> GPU</c><02:47:38.160><c> and</c><02:47:38.640><c> for</c><02:47:38.920><c> each</c><02:47:39.240><c> process</c><02:47:39.640><c> the</c><02:47:39.760><c> training</c>

02:47:40.030 --> 02:47:40.040 align:start position:0%
to GPU and for each process the training
 

02:47:40.040 --> 02:47:41.309 align:start position:0%
to GPU and for each process the training
Loop<02:47:40.279><c> and</c><02:47:40.399><c> everything</c><02:47:40.640><c> we've</c><02:47:40.800><c> worked</c><02:47:41.040><c> on</c><02:47:41.160><c> so</c>

02:47:41.309 --> 02:47:41.319 align:start position:0%
Loop and everything we've worked on so
 

02:47:41.319 --> 02:47:42.630 align:start position:0%
Loop and everything we've worked on so
far<02:47:41.520><c> is</c><02:47:41.640><c> going</c><02:47:41.760><c> to</c><02:47:41.880><c> look</c><02:47:42.120><c> pretty</c><02:47:42.319><c> much</c><02:47:42.520><c> the</c>

02:47:42.630 --> 02:47:42.640 align:start position:0%
far is going to look pretty much the
 

02:47:42.640 --> 02:47:45.590 align:start position:0%
far is going to look pretty much the
same<02:47:43.399><c> H</c><02:47:43.640><c> GPU</c><02:47:44.399><c> as</c><02:47:44.520><c> far</c><02:47:44.640><c> as</c><02:47:44.760><c> it's</c><02:47:44.960><c> concerned</c><02:47:45.399><c> is</c>

02:47:45.590 --> 02:47:45.600 align:start position:0%
same H GPU as far as it's concerned is
 

02:47:45.600 --> 02:47:47.190 align:start position:0%
same H GPU as far as it's concerned is
just<02:47:45.760><c> working</c><02:47:46.120><c> on</c><02:47:46.319><c> exactly</c><02:47:46.640><c> what</c><02:47:46.760><c> we've</c><02:47:46.960><c> built</c>

02:47:47.190 --> 02:47:47.200 align:start position:0%
just working on exactly what we've built
 

02:47:47.200 --> 02:47:49.910 align:start position:0%
just working on exactly what we've built
so<02:47:47.399><c> far</c><02:47:48.120><c> but</c><02:47:48.279><c> now</c><02:47:48.439><c> Secret</c><02:47:48.960><c> L</c><02:47:49.279><c> there's</c><02:47:49.560><c> eight</c><02:47:49.760><c> of</c>

02:47:49.910 --> 02:47:49.920 align:start position:0%
so far but now Secret L there's eight of
 

02:47:49.920 --> 02:47:51.349 align:start position:0%
so far but now Secret L there's eight of
them<02:47:50.640><c> and</c><02:47:50.760><c> they're</c><02:47:50.920><c> all</c><02:47:51.040><c> going</c><02:47:51.120><c> to</c><02:47:51.240><c> be</c>

02:47:51.349 --> 02:47:51.359 align:start position:0%
them and they're all going to be
 

02:47:51.359 --> 02:47:52.910 align:start position:0%
them and they're all going to be
processing<02:47:51.840><c> slightly</c><02:47:52.200><c> different</c><02:47:52.479><c> parts</c><02:47:52.800><c> of</c>

02:47:52.910 --> 02:47:52.920 align:start position:0%
processing slightly different parts of
 

02:47:52.920 --> 02:47:56.550 align:start position:0%
processing slightly different parts of
the<02:47:53.479><c> data</c><02:47:54.479><c> and</c><02:47:55.000><c> we're</c><02:47:55.160><c> going</c><02:47:55.279><c> to</c><02:47:55.479><c> add</c><02:47:55.720><c> one</c><02:47:55.920><c> more</c>

02:47:56.550 --> 02:47:56.560 align:start position:0%
the data and we're going to add one more
 

02:47:56.560 --> 02:47:58.469 align:start position:0%
the data and we're going to add one more
part<02:47:57.160><c> where</c><02:47:57.359><c> once</c><02:47:57.560><c> they</c><02:47:57.680><c> all</c><02:47:57.880><c> calculate</c><02:47:58.319><c> their</c>

02:47:58.469 --> 02:47:58.479 align:start position:0%
part where once they all calculate their
 

02:47:58.479 --> 02:48:00.469 align:start position:0%
part where once they all calculate their
gradients<02:47:59.359><c> there's</c><02:47:59.560><c> one</c><02:47:59.720><c> more</c><02:47:59.960><c> part</c><02:48:00.200><c> where</c><02:48:00.359><c> we</c>

02:48:00.469 --> 02:48:00.479 align:start position:0%
gradients there's one more part where we
 

02:48:00.479 --> 02:48:03.309 align:start position:0%
gradients there's one more part where we
do<02:48:00.840><c> a</c><02:48:01.240><c> average</c><02:48:01.960><c> of</c><02:48:02.160><c> those</c>

02:48:03.309 --> 02:48:03.319 align:start position:0%
do a average of those
 

02:48:03.319 --> 02:48:05.150 align:start position:0%
do a average of those
gradients<02:48:04.319><c> and</c><02:48:04.439><c> so</c><02:48:04.680><c> that's</c><02:48:04.880><c> how</c><02:48:05.000><c> they're</c>

02:48:05.150 --> 02:48:05.160 align:start position:0%
gradients and so that's how they're
 

02:48:05.160 --> 02:48:07.710 align:start position:0%
gradients and so that's how they're
going<02:48:05.240><c> to</c><02:48:05.359><c> be</c><02:48:05.520><c> collaborating</c><02:48:06.520><c> on</c><02:48:07.359><c> uh</c><02:48:07.560><c> the</c>

02:48:07.710 --> 02:48:07.720 align:start position:0%
going to be collaborating on uh the
 

02:48:07.720 --> 02:48:10.309 align:start position:0%
going to be collaborating on uh the
computational<02:48:08.200><c> workload</c><02:48:08.680><c> here</c><02:48:09.520><c> so</c><02:48:09.720><c> to</c><02:48:09.880><c> use</c>

02:48:10.309 --> 02:48:10.319 align:start position:0%
computational workload here so to use
 

02:48:10.319 --> 02:48:12.309 align:start position:0%
computational workload here so to use
all<02:48:10.520><c> eight</c><02:48:10.720><c> of</c><02:48:10.880><c> them</c><02:48:11.640><c> we're</c><02:48:11.800><c> not</c><02:48:11.960><c> going</c><02:48:12.080><c> to</c><02:48:12.200><c> be</c>

02:48:12.309 --> 02:48:12.319 align:start position:0%
all eight of them we're not going to be
 

02:48:12.319 --> 02:48:14.389 align:start position:0%
all eight of them we're not going to be
launching<02:48:12.760><c> our</c><02:48:12.960><c> script</c><02:48:13.319><c> anymore</c><02:48:13.760><c> with</c><02:48:14.000><c> just</c>

02:48:14.389 --> 02:48:14.399 align:start position:0%
launching our script anymore with just
 

02:48:14.399 --> 02:48:16.349 align:start position:0%
launching our script anymore with just
um<02:48:14.840><c> pytorch</c><02:48:15.479><c> train</c>

02:48:16.349 --> 02:48:16.359 align:start position:0%
um pytorch train
 

02:48:16.359 --> 02:48:19.070 align:start position:0%
um pytorch train
gbt2<02:48:17.359><c> piy</c><02:48:18.040><c> we're</c><02:48:18.200><c> going</c><02:48:18.279><c> to</c><02:48:18.399><c> be</c><02:48:18.520><c> running</c><02:48:18.960><c> it</c>

02:48:19.070 --> 02:48:19.080 align:start position:0%
gbt2 piy we're going to be running it
 

02:48:19.080 --> 02:48:20.990 align:start position:0%
gbt2 piy we're going to be running it
with<02:48:19.160><c> a</c><02:48:19.319><c> special</c><02:48:19.560><c> command</c><02:48:19.880><c> called</c><02:48:20.120><c> torrun</c><02:48:20.800><c> in</c>

02:48:20.990 --> 02:48:21.000 align:start position:0%
with a special command called torrun in
 

02:48:21.000 --> 02:48:23.910 align:start position:0%
with a special command called torrun in
pytorch<02:48:21.399><c> we'll</c><02:48:21.560><c> see</c><02:48:21.720><c> that</c><02:48:21.800><c> in</c><02:48:21.920><c> a</c><02:48:22.240><c> bit</c><02:48:23.240><c> and</c>

02:48:23.910 --> 02:48:23.920 align:start position:0%
pytorch we'll see that in a bit and
 

02:48:23.920 --> 02:48:26.830 align:start position:0%
pytorch we'll see that in a bit and
torrun<02:48:24.920><c> uh</c><02:48:25.120><c> when</c><02:48:25.240><c> it</c><02:48:25.359><c> runs</c><02:48:25.680><c> our</c><02:48:25.880><c> python</c><02:48:26.200><c> script</c>

02:48:26.830 --> 02:48:26.840 align:start position:0%
torrun uh when it runs our python script
 

02:48:26.840 --> 02:48:28.670 align:start position:0%
torrun uh when it runs our python script
we'll<02:48:27.080><c> actually</c><02:48:27.279><c> make</c><02:48:27.439><c> sure</c><02:48:27.640><c> to</c><02:48:27.800><c> run</c><02:48:28.160><c> eight</c>

02:48:28.670 --> 02:48:28.680 align:start position:0%
we'll actually make sure to run eight
 

02:48:28.680 --> 02:48:32.389 align:start position:0%
we'll actually make sure to run eight
eight<02:48:28.840><c> of</c><02:48:29.000><c> them</c><02:48:29.760><c> in</c><02:48:30.359><c> parallel</c><02:48:31.359><c> and</c><02:48:31.640><c> it</c><02:48:32.000><c> creates</c>

02:48:32.389 --> 02:48:32.399 align:start position:0%
eight of them in parallel and it creates
 

02:48:32.399 --> 02:48:34.469 align:start position:0%
eight of them in parallel and it creates
these<02:48:32.600><c> environmental</c><02:48:33.240><c> variables</c><02:48:34.080><c> where</c><02:48:34.319><c> each</c>

02:48:34.469 --> 02:48:34.479 align:start position:0%
these environmental variables where each
 

02:48:34.479 --> 02:48:37.830 align:start position:0%
these environmental variables where each
of<02:48:34.600><c> these</c><02:48:34.920><c> processes</c><02:48:35.920><c> can</c><02:48:36.240><c> look</c><02:48:36.479><c> up</c><02:48:37.200><c> which</c><02:48:37.640><c> uh</c>

02:48:37.830 --> 02:48:37.840 align:start position:0%
of these processes can look up which uh
 

02:48:37.840 --> 02:48:40.309 align:start position:0%
of these processes can look up which uh
basically<02:48:38.600><c> which</c><02:48:38.920><c> one</c><02:48:39.080><c> of</c><02:48:39.240><c> the</c><02:48:39.560><c> processes</c><02:48:40.160><c> it</c>

02:48:40.309 --> 02:48:40.319 align:start position:0%
basically which one of the processes it
 

02:48:40.319 --> 02:48:43.670 align:start position:0%
basically which one of the processes it
is<02:48:41.240><c> so</c><02:48:41.399><c> for</c><02:48:41.560><c> example</c><02:48:41.840><c> torron</c><02:48:42.359><c> will</c><02:48:42.520><c> set</c><02:48:43.000><c> rank</c>

02:48:43.670 --> 02:48:43.680 align:start position:0%
is so for example torron will set rank
 

02:48:43.680 --> 02:48:46.070 align:start position:0%
is so for example torron will set rank
local<02:48:44.080><c> Rank</c><02:48:44.479><c> and</c><02:48:44.640><c> World</c><02:48:45.000><c> size</c><02:48:45.399><c> environmental</c>

02:48:46.070 --> 02:48:46.080 align:start position:0%
local Rank and World size environmental
 

02:48:46.080 --> 02:48:48.830 align:start position:0%
local Rank and World size environmental
variables<02:48:47.080><c> and</c><02:48:47.160><c> so</c><02:48:47.359><c> this</c><02:48:47.479><c> is</c><02:48:47.600><c> a</c><02:48:48.240><c> bad</c><02:48:48.399><c> way</c><02:48:48.520><c> to</c>

02:48:48.830 --> 02:48:48.840 align:start position:0%
variables and so this is a bad way to
 

02:48:48.840 --> 02:48:51.309 align:start position:0%
variables and so this is a bad way to
detect<02:48:49.240><c> whether</c><02:48:49.880><c> uh</c><02:48:50.000><c> DDP</c><02:48:50.479><c> is</c><02:48:50.640><c> running</c><02:48:51.040><c> so</c><02:48:51.240><c> if</c>

02:48:51.309 --> 02:48:51.319 align:start position:0%
detect whether uh DDP is running so if
 

02:48:51.319 --> 02:48:54.910 align:start position:0%
detect whether uh DDP is running so if
we're<02:48:51.520><c> using</c><02:48:51.760><c> torch</c><02:48:52.120><c> run</c><02:48:53.120><c> if</c><02:48:53.279><c> DDP</c><02:48:53.680><c> is</c>

02:48:54.910 --> 02:48:54.920 align:start position:0%
we're using torch run if DDP is
 

02:48:54.920 --> 02:48:57.070 align:start position:0%
we're using torch run if DDP is
running<02:48:55.920><c> then</c><02:48:56.399><c> uh</c><02:48:56.520><c> we</c><02:48:56.640><c> have</c><02:48:56.760><c> to</c><02:48:56.840><c> make</c><02:48:56.960><c> sure</c>

02:48:57.070 --> 02:48:57.080 align:start position:0%
running then uh we have to make sure
 

02:48:57.080 --> 02:48:58.750 align:start position:0%
running then uh we have to make sure
that<02:48:57.200><c> K</c><02:48:57.439><c> is</c><02:48:57.560><c> available</c><02:48:58.080><c> because</c><02:48:58.279><c> I</c><02:48:58.359><c> don't</c><02:48:58.600><c> know</c>

02:48:58.750 --> 02:48:58.760 align:start position:0%
that K is available because I don't know
 

02:48:58.760 --> 02:49:01.030 align:start position:0%
that K is available because I don't know
that<02:48:58.880><c> you</c><02:48:58.960><c> can</c><02:48:59.080><c> run</c><02:48:59.319><c> this</c><02:48:59.399><c> on</c><02:48:59.600><c> CPU</c><02:49:00.040><c> anymore</c><02:49:00.800><c> or</c>

02:49:01.030 --> 02:49:01.040 align:start position:0%
that you can run this on CPU anymore or
 

02:49:01.040 --> 02:49:04.990 align:start position:0%
that you can run this on CPU anymore or
that<02:49:01.200><c> that</c><02:49:01.399><c> makes</c><02:49:01.760><c> sense</c><02:49:02.040><c> to</c><02:49:02.640><c> do</c><02:49:03.680><c> um</c><02:49:04.680><c> this</c><02:49:04.840><c> is</c>

02:49:04.990 --> 02:49:05.000 align:start position:0%
that that makes sense to do um this is
 

02:49:05.000 --> 02:49:07.550 align:start position:0%
that that makes sense to do um this is
some<02:49:05.399><c> um</c><02:49:05.840><c> setup</c><02:49:06.279><c> code</c><02:49:06.560><c> here</c><02:49:07.080><c> the</c><02:49:07.200><c> important</c>

02:49:07.550 --> 02:49:07.560 align:start position:0%
some um setup code here the important
 

02:49:07.560 --> 02:49:10.349 align:start position:0%
some um setup code here the important
part<02:49:07.840><c> is</c><02:49:08.040><c> that</c><02:49:08.840><c> there's</c><02:49:09.080><c> a</c><02:49:09.240><c> world</c><02:49:09.680><c> size</c><02:49:10.200><c> which</c>

02:49:10.349 --> 02:49:10.359 align:start position:0%
part is that there's a world size which
 

02:49:10.359 --> 02:49:11.910 align:start position:0%
part is that there's a world size which
for<02:49:10.520><c> us</c><02:49:10.680><c> will</c><02:49:10.840><c> be</c><02:49:11.000><c> eight</c><02:49:11.359><c> that's</c><02:49:11.520><c> the</c><02:49:11.680><c> total</c>

02:49:11.910 --> 02:49:11.920 align:start position:0%
for us will be eight that's the total
 

02:49:11.920 --> 02:49:14.230 align:start position:0%
for us will be eight that's the total
number<02:49:12.120><c> of</c><02:49:12.279><c> processes</c><02:49:12.800><c> running</c><02:49:13.800><c> there's</c><02:49:14.040><c> a</c>

02:49:14.230 --> 02:49:14.240 align:start position:0%
number of processes running there's a
 

02:49:14.240 --> 02:49:17.229 align:start position:0%
number of processes running there's a
rank<02:49:14.840><c> which</c><02:49:15.000><c> is</c><02:49:15.640><c> um</c><02:49:16.279><c> each</c><02:49:16.600><c> process</c><02:49:17.040><c> will</c>

02:49:17.229 --> 02:49:17.239 align:start position:0%
rank which is um each process will
 

02:49:17.239 --> 02:49:19.910 align:start position:0%
rank which is um each process will
basically<02:49:18.120><c> run</c><02:49:18.359><c> the</c><02:49:18.479><c> ex</c><02:49:18.720><c> exact</c><02:49:19.000><c> same</c><02:49:19.200><c> code</c><02:49:19.760><c> at</c>

02:49:19.910 --> 02:49:19.920 align:start position:0%
basically run the ex exact same code at
 

02:49:19.920 --> 02:49:22.710 align:start position:0%
basically run the ex exact same code at
the<02:49:20.080><c> exact</c><02:49:20.359><c> same</c><02:49:20.600><c> time</c><02:49:20.880><c> roughly</c><02:49:21.880><c> but</c><02:49:22.319><c> all</c><02:49:22.520><c> the</c>

02:49:22.710 --> 02:49:22.720 align:start position:0%
the exact same time roughly but all the
 

02:49:22.720 --> 02:49:24.229 align:start position:0%
the exact same time roughly but all the
process<02:49:23.279><c> the</c><02:49:23.399><c> only</c><02:49:23.640><c> difference</c><02:49:23.960><c> between</c>

02:49:24.229 --> 02:49:24.239 align:start position:0%
process the only difference between
 

02:49:24.239 --> 02:49:25.990 align:start position:0%
process the only difference between
these<02:49:24.439><c> processes</c><02:49:25.160><c> is</c><02:49:25.279><c> that</c><02:49:25.439><c> they</c><02:49:25.560><c> all</c><02:49:25.760><c> have</c><02:49:25.840><c> a</c>

02:49:25.990 --> 02:49:26.000 align:start position:0%
these processes is that they all have a
 

02:49:26.000 --> 02:49:30.429 align:start position:0%
these processes is that they all have a
different<02:49:26.239><c> dtp</c><02:49:26.800><c> rank</c><02:49:27.800><c> so</c><02:49:28.640><c> the</c><02:49:29.120><c> um</c><02:49:29.319><c> gpu0</c><02:49:30.239><c> will</c>

02:49:30.429 --> 02:49:30.439 align:start position:0%
different dtp rank so the um gpu0 will
 

02:49:30.439 --> 02:49:33.469 align:start position:0%
different dtp rank so the um gpu0 will
have<02:49:30.640><c> DDP</c><02:49:31.000><c> rank</c><02:49:31.239><c> of</c><02:49:31.439><c> zero</c><02:49:32.000><c> GPU</c><02:49:32.439><c> 1</c><02:49:32.600><c> will</c><02:49:32.800><c> have</c><02:49:33.319><c> uh</c>

02:49:33.469 --> 02:49:33.479 align:start position:0%
have DDP rank of zero GPU 1 will have uh
 

02:49:33.479 --> 02:49:36.590 align:start position:0%
have DDP rank of zero GPU 1 will have uh
rank<02:49:33.720><c> of</c><02:49:34.040><c> one</c><02:49:34.760><c> Etc</c><02:49:35.760><c> so</c><02:49:36.040><c> otherwise</c><02:49:36.359><c> they're</c><02:49:36.479><c> all</c>

02:49:36.590 --> 02:49:36.600 align:start position:0%
rank of one Etc so otherwise they're all
 

02:49:36.600 --> 02:49:38.590 align:start position:0%
rank of one Etc so otherwise they're all
running<02:49:36.880><c> the</c><02:49:37.040><c> exact</c><02:49:37.319><c> same</c><02:49:37.560><c> script</c><02:49:38.279><c> it's</c><02:49:38.439><c> just</c>

02:49:38.590 --> 02:49:38.600 align:start position:0%
running the exact same script it's just
 

02:49:38.600 --> 02:49:40.070 align:start position:0%
running the exact same script it's just
that<02:49:38.760><c> DDP</c><02:49:39.160><c> rank</c><02:49:39.439><c> will</c><02:49:39.560><c> be</c><02:49:39.640><c> a</c><02:49:39.760><c> slightly</c>

02:49:40.070 --> 02:49:40.080 align:start position:0%
that DDP rank will be a slightly
 

02:49:40.080 --> 02:49:42.030 align:start position:0%
that DDP rank will be a slightly
different<02:49:40.359><c> integer</c><02:49:41.359><c> and</c><02:49:41.520><c> that</c><02:49:41.600><c> is</c><02:49:41.760><c> the</c><02:49:41.880><c> way</c>

02:49:42.030 --> 02:49:42.040 align:start position:0%
different integer and that is the way
 

02:49:42.040 --> 02:49:44.309 align:start position:0%
different integer and that is the way
for<02:49:42.319><c> us</c><02:49:42.680><c> to</c><02:49:42.840><c> coordinate</c><02:49:43.640><c> that</c><02:49:43.800><c> they</c><02:49:43.920><c> don't</c><02:49:44.160><c> for</c>

02:49:44.309 --> 02:49:44.319 align:start position:0%
for us to coordinate that they don't for
 

02:49:44.319 --> 02:49:46.349 align:start position:0%
for us to coordinate that they don't for
example<02:49:44.600><c> run</c><02:49:44.800><c> on</c><02:49:44.960><c> the</c><02:49:45.080><c> same</c><02:49:45.279><c> data</c><02:49:45.720><c> we</c><02:49:45.840><c> want</c><02:49:46.000><c> to</c>

02:49:46.349 --> 02:49:46.359 align:start position:0%
example run on the same data we want to
 

02:49:46.359 --> 02:49:47.630 align:start position:0%
example run on the same data we want to
we<02:49:46.479><c> want</c><02:49:46.640><c> them</c><02:49:46.760><c> to</c><02:49:46.880><c> run</c><02:49:47.080><c> on</c><02:49:47.239><c> different</c><02:49:47.439><c> parts</c>

02:49:47.630 --> 02:49:47.640 align:start position:0%
we want them to run on different parts
 

02:49:47.640 --> 02:49:49.870 align:start position:0%
we want them to run on different parts
of<02:49:47.760><c> the</c><02:49:47.880><c> data</c><02:49:48.160><c> and</c><02:49:48.279><c> so</c><02:49:48.439><c> on</c>

02:49:49.870 --> 02:49:49.880 align:start position:0%
of the data and so on
 

02:49:49.880 --> 02:49:52.030 align:start position:0%
of the data and so on
now<02:49:50.239><c> local</c><02:49:50.600><c> rank</c><02:49:51.080><c> is</c><02:49:51.319><c> something</c><02:49:51.600><c> that</c><02:49:51.720><c> is</c><02:49:51.840><c> only</c>

02:49:52.030 --> 02:49:52.040 align:start position:0%
now local rank is something that is only
 

02:49:52.040 --> 02:49:54.469 align:start position:0%
now local rank is something that is only
used<02:49:52.319><c> in</c><02:49:52.439><c> a</c><02:49:52.800><c> multi-</c><02:49:53.279><c> node</c><02:49:53.640><c> setting</c><02:49:54.200><c> we</c><02:49:54.319><c> only</c>

02:49:54.469 --> 02:49:54.479 align:start position:0%
used in a multi- node setting we only
 

02:49:54.479 --> 02:49:57.110 align:start position:0%
used in a multi- node setting we only
have<02:49:54.600><c> a</c><02:49:54.720><c> single</c><02:49:55.000><c> node</c><02:49:55.359><c> with</c><02:49:55.479><c> ag</c><02:49:55.800><c> gpus</c><02:49:56.800><c> and</c><02:49:56.920><c> so</c>

02:49:57.110 --> 02:49:57.120 align:start position:0%
have a single node with ag gpus and so
 

02:49:57.120 --> 02:50:00.229 align:start position:0%
have a single node with ag gpus and so
local<02:49:57.479><c> rank</c><02:49:57.920><c> is</c><02:49:58.640><c> the</c><02:49:58.800><c> rank</c><02:49:59.040><c> of</c><02:49:59.160><c> the</c><02:49:59.279><c> GPU</c><02:49:59.920><c> on</c><02:50:00.120><c> a</c>

02:50:00.229 --> 02:50:00.239 align:start position:0%
local rank is the rank of the GPU on a
 

02:50:00.239 --> 02:50:04.229 align:start position:0%
local rank is the rank of the GPU on a
single<02:50:00.760><c> node</c><02:50:01.760><c> so</c><02:50:02.000><c> from</c><02:50:02.160><c> 0</c><02:50:02.560><c> to</c><02:50:02.880><c> seven</c><02:50:03.479><c> as</c><02:50:03.560><c> an</c>

02:50:04.229 --> 02:50:04.239 align:start position:0%
single node so from 0 to seven as an
 

02:50:04.239 --> 02:50:06.269 align:start position:0%
single node so from 0 to seven as an
example<02:50:05.239><c> but</c><02:50:05.359><c> for</c><02:50:05.520><c> us</c><02:50:05.680><c> we're</c><02:50:05.880><c> mostly</c><02:50:06.120><c> going</c><02:50:06.200><c> to</c>

02:50:06.269 --> 02:50:06.279 align:start position:0%
example but for us we're mostly going to
 

02:50:06.279 --> 02:50:08.030 align:start position:0%
example but for us we're mostly going to
be<02:50:06.359><c> running</c><02:50:06.600><c> on</c><02:50:06.680><c> a</c><02:50:06.760><c> single</c><02:50:07.040><c> box</c><02:50:07.520><c> so</c><02:50:07.720><c> the</c><02:50:07.840><c> things</c>

02:50:08.030 --> 02:50:08.040 align:start position:0%
be running on a single box so the things
 

02:50:08.040 --> 02:50:10.550 align:start position:0%
be running on a single box so the things
we<02:50:08.200><c> care</c><02:50:08.359><c> about</c><02:50:08.560><c> are</c><02:50:08.840><c> Rank</c><02:50:09.319><c> and</c><02:50:09.520><c> World</c><02:50:09.880><c> size</c>

02:50:10.550 --> 02:50:10.560 align:start position:0%
we care about are Rank and World size
 

02:50:10.560 --> 02:50:12.790 align:start position:0%
we care about are Rank and World size
this<02:50:10.640><c> is</c><02:50:10.880><c> eight</c><02:50:11.359><c> and</c><02:50:11.479><c> this</c><02:50:11.600><c> will</c><02:50:11.800><c> be</c><02:50:12.439><c> whatever</c>

02:50:12.790 --> 02:50:12.800 align:start position:0%
this is eight and this will be whatever
 

02:50:12.800 --> 02:50:15.190 align:start position:0%
this is eight and this will be whatever
it<02:50:12.920><c> is</c><02:50:13.040><c> depending</c><02:50:13.319><c> on</c><02:50:13.399><c> the</c><02:50:13.479><c> GPU</c><02:50:14.359><c> uh</c><02:50:14.560><c> that</c><02:50:15.000><c> uh</c>

02:50:15.190 --> 02:50:15.200 align:start position:0%
it is depending on the GPU uh that uh
 

02:50:15.200 --> 02:50:17.389 align:start position:0%
it is depending on the GPU uh that uh
that<02:50:15.800><c> this</c><02:50:16.080><c> particular</c><02:50:16.720><c> instantiation</c><02:50:17.279><c> of</c>

02:50:17.389 --> 02:50:17.399 align:start position:0%
that this particular instantiation of
 

02:50:17.399 --> 02:50:19.910 align:start position:0%
that this particular instantiation of
the<02:50:17.520><c> script</c><02:50:17.960><c> runs</c><02:50:18.239><c> on</c>

02:50:19.910 --> 02:50:19.920 align:start position:0%
the script runs on
 

02:50:19.920 --> 02:50:23.349 align:start position:0%
the script runs on
now<02:50:20.200><c> here</c><02:50:20.840><c> we</c><02:50:21.080><c> make</c><02:50:21.279><c> sure</c><02:50:22.239><c> that</c><02:50:22.720><c> according</c><02:50:23.120><c> to</c>

02:50:23.349 --> 02:50:23.359 align:start position:0%
now here we make sure that according to
 

02:50:23.359 --> 02:50:27.229 align:start position:0%
now here we make sure that according to
the<02:50:23.840><c> local</c><02:50:24.279><c> rank</c><02:50:25.080><c> we</c><02:50:25.200><c> are</c><02:50:25.439><c> setting</c><02:50:26.439><c> the</c><02:50:26.680><c> device</c>

02:50:27.229 --> 02:50:27.239 align:start position:0%
the local rank we are setting the device
 

02:50:27.239 --> 02:50:30.349 align:start position:0%
the local rank we are setting the device
to<02:50:27.439><c> be</c><02:50:27.680><c> Cuda</c><02:50:28.160><c> colon</c><02:50:29.160><c> and</c><02:50:29.399><c> colon</c><02:50:29.840><c> indicates</c>

02:50:30.349 --> 02:50:30.359 align:start position:0%
to be Cuda colon and colon indicates
 

02:50:30.359 --> 02:50:32.670 align:start position:0%
to be Cuda colon and colon indicates
which<02:50:30.560><c> GPU</c><02:50:31.000><c> to</c><02:50:31.160><c> use</c><02:50:31.600><c> if</c><02:50:31.720><c> there</c><02:50:31.840><c> are</c><02:50:32.040><c> more</c><02:50:32.319><c> than</c>

02:50:32.670 --> 02:50:32.680 align:start position:0%
which GPU to use if there are more than
 

02:50:32.680 --> 02:50:36.590 align:start position:0%
which GPU to use if there are more than
one<02:50:33.239><c> gpus</c><02:50:34.239><c> so</c><02:50:34.800><c> depending</c><02:50:35.120><c> on</c><02:50:35.239><c> the</c><02:50:35.399><c> local</c><02:50:35.760><c> rank</c>

02:50:36.590 --> 02:50:36.600 align:start position:0%
one gpus so depending on the local rank
 

02:50:36.600 --> 02:50:39.309 align:start position:0%
one gpus so depending on the local rank
of<02:50:36.840><c> this</c><02:50:37.120><c> process</c><02:50:37.920><c> it's</c><02:50:38.080><c> going</c><02:50:38.200><c> to</c><02:50:38.399><c> use</c><02:50:39.160><c> just</c>

02:50:39.309 --> 02:50:39.319 align:start position:0%
of this process it's going to use just
 

02:50:39.319 --> 02:50:40.870 align:start position:0%
of this process it's going to use just
the<02:50:39.479><c> appropriate</c><02:50:39.880><c> GPU</c><02:50:40.399><c> so</c><02:50:40.520><c> there's</c><02:50:40.720><c> no</c>

02:50:40.870 --> 02:50:40.880 align:start position:0%
the appropriate GPU so there's no
 

02:50:40.880 --> 02:50:42.510 align:start position:0%
the appropriate GPU so there's no
collisions<02:50:41.359><c> on</c><02:50:41.520><c> which</c><02:50:41.640><c> GPU</c><02:50:41.960><c> is</c><02:50:42.040><c> being</c><02:50:42.200><c> used</c><02:50:42.399><c> by</c>

02:50:42.510 --> 02:50:42.520 align:start position:0%
collisions on which GPU is being used by
 

02:50:42.520 --> 02:50:43.429 align:start position:0%
collisions on which GPU is being used by
which

02:50:43.429 --> 02:50:43.439 align:start position:0%
which
 

02:50:43.439 --> 02:50:45.670 align:start position:0%
which
process<02:50:44.439><c> and</c><02:50:44.600><c> finally</c><02:50:44.960><c> there's</c><02:50:45.160><c> a</c><02:50:45.279><c> Boolean</c>

02:50:45.670 --> 02:50:45.680 align:start position:0%
process and finally there's a Boolean
 

02:50:45.680 --> 02:50:47.190 align:start position:0%
process and finally there's a Boolean
variable<02:50:46.000><c> that</c><02:50:46.080><c> I</c><02:50:46.239><c> like</c><02:50:46.399><c> to</c><02:50:46.520><c> create</c><02:50:46.880><c> which</c><02:50:47.000><c> is</c>

02:50:47.190 --> 02:50:47.200 align:start position:0%
variable that I like to create which is
 

02:50:47.200 --> 02:50:50.950 align:start position:0%
variable that I like to create which is
the<02:50:47.479><c> DDP</c><02:50:47.880><c> rank</c><02:50:48.640><c> equ</c><02:50:48.760><c> equal</c><02:50:49.040><c> Z</c><02:50:49.800><c> so</c><02:50:50.359><c> the</c><02:50:50.479><c> master</c>

02:50:50.950 --> 02:50:50.960 align:start position:0%
the DDP rank equ equal Z so the master
 

02:50:50.960 --> 02:50:53.269 align:start position:0%
the DDP rank equ equal Z so the master
process<02:50:51.520><c> is</c><02:50:51.920><c> arbitrarily</c><02:50:52.640><c> process</c><02:50:52.960><c> number</c>

02:50:53.269 --> 02:50:53.279 align:start position:0%
process is arbitrarily process number
 

02:50:53.279 --> 02:50:55.229 align:start position:0%
process is arbitrarily process number
zero<02:50:53.880><c> and</c><02:50:54.040><c> it</c><02:50:54.160><c> does</c><02:50:54.359><c> a</c><02:50:54.479><c> lot</c><02:50:54.600><c> of</c><02:50:54.680><c> the</c><02:50:54.840><c> printing</c>

02:50:55.229 --> 02:50:55.239 align:start position:0%
zero and it does a lot of the printing
 

02:50:55.239 --> 02:50:57.590 align:start position:0%
zero and it does a lot of the printing
logging<02:50:55.680><c> checkpointing</c><02:50:56.319><c> Etc</c><02:50:57.120><c> and</c><02:50:57.279><c> the</c><02:50:57.359><c> other</c>

02:50:57.590 --> 02:50:57.600 align:start position:0%
logging checkpointing Etc and the other
 

02:50:57.600 --> 02:50:59.190 align:start position:0%
logging checkpointing Etc and the other
processes<02:50:58.000><c> are</c><02:50:58.160><c> thought</c><02:50:58.359><c> of</c><02:50:58.520><c> mostly</c><02:50:58.880><c> as</c><02:50:58.960><c> a</c>

02:50:59.190 --> 02:50:59.200 align:start position:0%
processes are thought of mostly as a
 

02:50:59.200 --> 02:51:01.550 align:start position:0%
processes are thought of mostly as a
compute<02:50:59.600><c> processes</c><02:51:00.080><c> that</c><02:51:00.200><c> are</c><02:51:00.439><c> assisting</c><02:51:01.439><c> and</c>

02:51:01.550 --> 02:51:01.560 align:start position:0%
compute processes that are assisting and
 

02:51:01.560 --> 02:51:03.510 align:start position:0%
compute processes that are assisting and
so<02:51:01.800><c> Master</c><02:51:02.160><c> process</c><02:51:02.520><c> zero</c><02:51:02.840><c> will</c><02:51:03.000><c> have</c><02:51:03.279><c> some</c>

02:51:03.510 --> 02:51:03.520 align:start position:0%
so Master process zero will have some
 

02:51:03.520 --> 02:51:05.229 align:start position:0%
so Master process zero will have some
additional<02:51:03.920><c> work</c><02:51:04.120><c> to</c><02:51:04.239><c> do</c><02:51:04.760><c> all</c><02:51:04.920><c> the</c><02:51:05.040><c> other</c>

02:51:05.229 --> 02:51:05.239 align:start position:0%
additional work to do all the other
 

02:51:05.239 --> 02:51:06.950 align:start position:0%
additional work to do all the other
processes<02:51:05.800><c> will</c><02:51:06.279><c> uh</c><02:51:06.359><c> will</c><02:51:06.520><c> mostly</c><02:51:06.760><c> just</c><02:51:06.880><c> be</c>

02:51:06.950 --> 02:51:06.960 align:start position:0%
processes will uh will mostly just be
 

02:51:06.960 --> 02:51:07.990 align:start position:0%
processes will uh will mostly just be
doing<02:51:07.160><c> forward</c>

02:51:07.990 --> 02:51:08.000 align:start position:0%
doing forward
 

02:51:08.000 --> 02:51:10.349 align:start position:0%
doing forward
backwards<02:51:09.000><c> and</c><02:51:09.160><c> if</c><02:51:09.279><c> we're</c><02:51:09.439><c> not</c><02:51:09.560><c> using</c><02:51:09.840><c> DDP</c><02:51:10.279><c> and</c>

02:51:10.349 --> 02:51:10.359 align:start position:0%
backwards and if we're not using DDP and
 

02:51:10.359 --> 02:51:11.990 align:start position:0%
backwards and if we're not using DDP and
none<02:51:10.479><c> of</c><02:51:10.600><c> these</c><02:51:10.720><c> variables</c><02:51:11.080><c> are</c><02:51:11.239><c> set</c><02:51:11.800><c> we</c>

02:51:11.990 --> 02:51:12.000 align:start position:0%
none of these variables are set we
 

02:51:12.000 --> 02:51:14.309 align:start position:0%
none of these variables are set we
revert<02:51:12.359><c> back</c><02:51:12.560><c> to</c><02:51:12.680><c> single</c><02:51:12.920><c> GPU</c><02:51:13.319><c> training</c><02:51:14.080><c> so</c>

02:51:14.309 --> 02:51:14.319 align:start position:0%
revert back to single GPU training so
 

02:51:14.319 --> 02:51:16.150 align:start position:0%
revert back to single GPU training so
that<02:51:14.439><c> means</c><02:51:14.680><c> that</c><02:51:14.800><c> we</c><02:51:14.920><c> only</c><02:51:15.080><c> have</c><02:51:15.239><c> rank</c><02:51:15.520><c> zero</c>

02:51:16.150 --> 02:51:16.160 align:start position:0%
that means that we only have rank zero
 

02:51:16.160 --> 02:51:19.030 align:start position:0%
that means that we only have rank zero
the<02:51:16.279><c> world</c><02:51:16.560><c> size</c><02:51:16.800><c> is</c><02:51:16.960><c> just</c><02:51:17.200><c> one</c><02:51:18.200><c> uh</c><02:51:18.359><c> and</c><02:51:18.600><c> and</c><02:51:18.920><c> we</c>

02:51:19.030 --> 02:51:19.040 align:start position:0%
the world size is just one uh and and we
 

02:51:19.040 --> 02:51:21.150 align:start position:0%
the world size is just one uh and and we
are<02:51:19.239><c> the</c><02:51:19.399><c> master</c><02:51:19.800><c> process</c><02:51:20.560><c> and</c><02:51:20.680><c> we</c><02:51:20.800><c> try</c><02:51:20.960><c> to</c>

02:51:21.150 --> 02:51:21.160 align:start position:0%
are the master process and we try to
 

02:51:21.160 --> 02:51:24.190 align:start position:0%
are the master process and we try to
autodetect<02:51:22.160><c> the</c><02:51:22.600><c> device</c><02:51:23.399><c> and</c><02:51:23.560><c> this</c><02:51:23.680><c> is</c><02:51:23.840><c> world</c>

02:51:24.190 --> 02:51:24.200 align:start position:0%
autodetect the device and this is world
 

02:51:24.200 --> 02:51:25.309 align:start position:0%
autodetect the device and this is world
as

02:51:25.309 --> 02:51:25.319 align:start position:0%
as
 

02:51:25.319 --> 02:51:27.670 align:start position:0%
as
normal<02:51:26.319><c> so</c><02:51:26.560><c> so</c><02:51:26.720><c> far</c><02:51:26.840><c> all</c><02:51:27.000><c> we've</c><02:51:27.160><c> done</c><02:51:27.359><c> is</c><02:51:27.479><c> we've</c>

02:51:27.670 --> 02:51:27.680 align:start position:0%
normal so so far all we've done is we've
 

02:51:27.680 --> 02:51:28.790 align:start position:0%
normal so so far all we've done is we've
initialized

02:51:28.790 --> 02:51:28.800 align:start position:0%
initialized
 

02:51:28.800 --> 02:51:31.349 align:start position:0%
initialized
DDP<02:51:29.800><c> and</c><02:51:30.439><c> uh</c><02:51:30.640><c> in</c><02:51:30.760><c> the</c><02:51:30.880><c> case</c><02:51:31.080><c> where</c><02:51:31.200><c> we're</c>

02:51:31.349 --> 02:51:31.359 align:start position:0%
DDP and uh in the case where we're
 

02:51:31.359 --> 02:51:33.150 align:start position:0%
DDP and uh in the case where we're
running<02:51:31.600><c> with</c><02:51:31.720><c> torrun</c><02:51:32.319><c> which</c><02:51:32.399><c> we'll</c><02:51:32.560><c> see</c><02:51:32.720><c> in</c><02:51:32.800><c> a</c>

02:51:33.150 --> 02:51:33.160 align:start position:0%
running with torrun which we'll see in a
 

02:51:33.160 --> 02:51:35.269 align:start position:0%
running with torrun which we'll see in a
bit<02:51:34.160><c> there's</c><02:51:34.319><c> going</c><02:51:34.439><c> to</c><02:51:34.560><c> be</c><02:51:34.720><c> eight</c><02:51:34.960><c> copies</c>

02:51:35.269 --> 02:51:35.279 align:start position:0%
bit there's going to be eight copies
 

02:51:35.279 --> 02:51:37.030 align:start position:0%
bit there's going to be eight copies
running<02:51:35.520><c> in</c><02:51:35.640><c> parallel</c><02:51:36.479><c> each</c><02:51:36.680><c> one</c><02:51:36.800><c> of</c><02:51:36.920><c> them</c>

02:51:37.030 --> 02:51:37.040 align:start position:0%
running in parallel each one of them
 

02:51:37.040 --> 02:51:39.309 align:start position:0%
running in parallel each one of them
will<02:51:37.160><c> have</c><02:51:37.239><c> a</c><02:51:37.359><c> different</c><02:51:37.800><c> Rank</c><02:51:38.800><c> and</c><02:51:39.000><c> now</c><02:51:39.200><c> we</c>

02:51:39.309 --> 02:51:39.319 align:start position:0%
will have a different Rank and now we
 

02:51:39.319 --> 02:51:41.349 align:start position:0%
will have a different Rank and now we
have<02:51:39.439><c> to</c><02:51:39.600><c> make</c><02:51:39.800><c> sure</c><02:51:40.760><c> that</c><02:51:41.000><c> everything</c>

02:51:41.349 --> 02:51:41.359 align:start position:0%
have to make sure that everything
 

02:51:41.359 --> 02:51:44.070 align:start position:0%
have to make sure that everything
happens<02:51:42.000><c> uh</c><02:51:42.120><c> correctly</c><02:51:42.800><c> afterwards</c><02:51:43.800><c> so</c><02:51:43.960><c> the</c>

02:51:44.070 --> 02:51:44.080 align:start position:0%
happens uh correctly afterwards so the
 

02:51:44.080 --> 02:51:45.670 align:start position:0%
happens uh correctly afterwards so the
tricky<02:51:44.399><c> thing</c><02:51:44.560><c> with</c><02:51:44.720><c> running</c><02:51:45.200><c> multiple</c>

02:51:45.670 --> 02:51:45.680 align:start position:0%
tricky thing with running multiple
 

02:51:45.680 --> 02:51:48.030 align:start position:0%
tricky thing with running multiple
processes<02:51:46.600><c> is</c><02:51:46.720><c> you</c><02:51:46.880><c> always</c><02:51:47.080><c> have</c><02:51:47.160><c> to</c><02:51:47.640><c> imagine</c>

02:51:48.030 --> 02:51:48.040 align:start position:0%
processes is you always have to imagine
 

02:51:48.040 --> 02:51:50.550 align:start position:0%
processes is you always have to imagine
that<02:51:48.160><c> there's</c><02:51:48.319><c> going</c><02:51:48.399><c> to</c><02:51:48.720><c> be</c><02:51:49.040><c> eight</c><02:51:50.040><c> processes</c>

02:51:50.550 --> 02:51:50.560 align:start position:0%
that there's going to be eight processes
 

02:51:50.560 --> 02:51:52.950 align:start position:0%
that there's going to be eight processes
running<02:51:50.800><c> in</c><02:51:50.960><c> parallel</c><02:51:51.800><c> so</c><02:51:52.359><c> as</c><02:51:52.479><c> you</c><02:51:52.640><c> read</c><02:51:52.840><c> the</c>

02:51:52.950 --> 02:51:52.960 align:start position:0%
running in parallel so as you read the
 

02:51:52.960 --> 02:51:54.590 align:start position:0%
running in parallel so as you read the
code<02:51:53.239><c> now</c><02:51:53.439><c> you</c><02:51:53.520><c> have</c><02:51:53.640><c> to</c><02:51:53.760><c> imagine</c><02:51:54.080><c> there's</c>

02:51:54.590 --> 02:51:54.600 align:start position:0%
code now you have to imagine there's
 

02:51:54.600 --> 02:51:57.429 align:start position:0%
code now you have to imagine there's
eight<02:51:55.600><c> you</c><02:51:55.760><c> know</c><02:51:56.239><c> eight</c><02:51:56.600><c> python</c><02:51:56.920><c> interpreters</c>

02:51:57.429 --> 02:51:57.439 align:start position:0%
eight you know eight python interpreters
 

02:51:57.439 --> 02:51:59.710 align:start position:0%
eight you know eight python interpreters
running<02:51:57.800><c> down</c><02:51:58.319><c> these</c><02:51:58.520><c> lines</c><02:51:58.720><c> of</c><02:51:58.920><c> code</c><02:51:59.520><c> and</c><02:51:59.640><c> the</c>

02:51:59.710 --> 02:51:59.720 align:start position:0%
running down these lines of code and the
 

02:51:59.720 --> 02:52:01.389 align:start position:0%
running down these lines of code and the
only<02:52:00.000><c> difference</c><02:52:00.319><c> between</c><02:52:00.640><c> them</c><02:52:01.160><c> is</c><02:52:01.279><c> that</c>

02:52:01.389 --> 02:52:01.399 align:start position:0%
only difference between them is that
 

02:52:01.399 --> 02:52:03.550 align:start position:0%
only difference between them is that
they<02:52:01.479><c> have</c><02:52:01.600><c> a</c><02:52:01.680><c> different</c><02:52:01.880><c> DDP</c><02:52:02.319><c> rank</c><02:52:03.160><c> so</c><02:52:03.399><c> they</c>

02:52:03.550 --> 02:52:03.560 align:start position:0%
they have a different DDP rank so they
 

02:52:03.560 --> 02:52:05.550 align:start position:0%
they have a different DDP rank so they
all<02:52:03.840><c> come</c><02:52:04.120><c> here</c><02:52:04.640><c> they</c><02:52:04.760><c> all</c><02:52:04.960><c> pick</c><02:52:05.160><c> the</c><02:52:05.279><c> exact</c>

02:52:05.550 --> 02:52:05.560 align:start position:0%
all come here they all pick the exact
 

02:52:05.560 --> 02:52:08.030 align:start position:0%
all come here they all pick the exact
same<02:52:05.720><c> seed</c><02:52:06.680><c> they</c><02:52:06.800><c> all</c><02:52:07.040><c> make</c><02:52:07.319><c> all</c><02:52:07.439><c> of</c><02:52:07.600><c> these</c>

02:52:08.030 --> 02:52:08.040 align:start position:0%
same seed they all make all of these
 

02:52:08.040 --> 02:52:10.070 align:start position:0%
same seed they all make all of these
calculations<02:52:09.040><c> completely</c><02:52:09.439><c> unaware</c><02:52:09.840><c> of</c><02:52:09.960><c> the</c>

02:52:10.070 --> 02:52:10.080 align:start position:0%
calculations completely unaware of the
 

02:52:10.080 --> 02:52:11.990 align:start position:0%
calculations completely unaware of the
other<02:52:10.319><c> copies</c><02:52:10.760><c> running</c><02:52:11.160><c> roughly</c><02:52:11.520><c> speaking</c>

02:52:11.990 --> 02:52:12.000 align:start position:0%
other copies running roughly speaking
 

02:52:12.000 --> 02:52:14.670 align:start position:0%
other copies running roughly speaking
right<02:52:12.840><c> so</c><02:52:13.520><c> they</c><02:52:13.640><c> all</c><02:52:13.760><c> make</c><02:52:14.000><c> the</c><02:52:14.160><c> exact</c><02:52:14.479><c> same</c>

02:52:14.670 --> 02:52:14.680 align:start position:0%
right so they all make the exact same
 

02:52:14.680 --> 02:52:16.389 align:start position:0%
right so they all make the exact same
calculations<02:52:15.439><c> and</c><02:52:15.560><c> now</c><02:52:15.680><c> we</c><02:52:15.800><c> have</c><02:52:15.880><c> to</c><02:52:16.040><c> adjust</c>

02:52:16.389 --> 02:52:16.399 align:start position:0%
calculations and now we have to adjust
 

02:52:16.399 --> 02:52:19.309 align:start position:0%
calculations and now we have to adjust
these<02:52:16.600><c> calculations</c><02:52:17.439><c> to</c><02:52:17.640><c> take</c><02:52:17.920><c> into</c><02:52:18.200><c> account</c>

02:52:19.309 --> 02:52:19.319 align:start position:0%
these calculations to take into account
 

02:52:19.319 --> 02:52:21.030 align:start position:0%
these calculations to take into account
that<02:52:19.600><c> there's</c><02:52:19.880><c> actually</c><02:52:20.239><c> like</c><02:52:20.479><c> a</c><02:52:20.760><c> certain</c>

02:52:21.030 --> 02:52:21.040 align:start position:0%
that there's actually like a certain
 

02:52:21.040 --> 02:52:24.550 align:start position:0%
that there's actually like a certain
world<02:52:21.439><c> size</c><02:52:21.840><c> and</c><02:52:21.960><c> certain</c><02:52:22.640><c> ranks</c><02:52:23.640><c> so</c><02:52:23.920><c> in</c>

02:52:24.550 --> 02:52:24.560 align:start position:0%
world size and certain ranks so in
 

02:52:24.560 --> 02:52:26.469 align:start position:0%
world size and certain ranks so in
particular<02:52:25.560><c> these</c><02:52:25.760><c> micro</c><02:52:26.080><c> batches</c><02:52:26.319><c> and</c>

02:52:26.469 --> 02:52:26.479 align:start position:0%
particular these micro batches and
 

02:52:26.479 --> 02:52:28.110 align:start position:0%
particular these micro batches and
sequence<02:52:26.760><c> lengths</c><02:52:27.080><c> these</c><02:52:27.200><c> are</c><02:52:27.359><c> all</c><02:52:27.600><c> just</c><02:52:27.840><c> per</c>

02:52:28.110 --> 02:52:28.120 align:start position:0%
sequence lengths these are all just per
 

02:52:28.120 --> 02:52:31.670 align:start position:0%
sequence lengths these are all just per
GPU<02:52:28.800><c> right</c><02:52:29.720><c> so</c><02:52:29.960><c> now</c><02:52:30.439><c> there's</c><02:52:30.640><c> going</c><02:52:30.760><c> to</c><02:52:30.880><c> be</c><02:52:31.279><c> num</c>

02:52:31.670 --> 02:52:31.680 align:start position:0%
GPU right so now there's going to be num
 

02:52:31.680 --> 02:52:34.630 align:start position:0%
GPU right so now there's going to be num
processes<02:52:32.239><c> of</c><02:52:32.439><c> them</c><02:52:32.840><c> running</c><02:52:33.120><c> in</c><02:52:33.319><c> parallel</c><02:52:34.319><c> so</c>

02:52:34.630 --> 02:52:34.640 align:start position:0%
processes of them running in parallel so
 

02:52:34.640 --> 02:52:36.910 align:start position:0%
processes of them running in parallel so
we<02:52:34.760><c> have</c><02:52:34.880><c> to</c><02:52:35.000><c> adjust</c><02:52:35.319><c> this</c><02:52:35.560><c> right</c><02:52:35.800><c> because</c><02:52:36.760><c> the</c>

02:52:36.910 --> 02:52:36.920 align:start position:0%
we have to adjust this right because the
 

02:52:36.920 --> 02:52:39.150 align:start position:0%
we have to adjust this right because the
grum<02:52:37.479><c> steps</c><02:52:37.880><c> now</c><02:52:38.319><c> is</c><02:52:38.439><c> going</c><02:52:38.520><c> to</c><02:52:38.640><c> be</c><02:52:38.760><c> total</c><02:52:38.960><c> B</c>

02:52:39.150 --> 02:52:39.160 align:start position:0%
grum steps now is going to be total B
 

02:52:39.160 --> 02:52:43.510 align:start position:0%
grum steps now is going to be total B
size<02:52:39.319><c> divide</c><02:52:39.560><c> B</c><02:52:39.680><c> *</c><02:52:40.000><c> T</c><02:52:40.880><c> time</c><02:52:41.880><c> U</c><02:52:42.160><c> DDP</c><02:52:42.640><c> R</c>

02:52:43.510 --> 02:52:43.520 align:start position:0%
size divide B * T time U DDP R
 

02:52:43.520 --> 02:52:48.630 align:start position:0%
size divide B * T time U DDP R
size<02:52:44.640><c> because</c><02:52:45.640><c> each</c><02:52:46.560><c> um</c><02:52:47.319><c> process</c><02:52:48.239><c> will</c><02:52:48.520><c> will</c>

02:52:48.630 --> 02:52:48.640 align:start position:0%
size because each um process will will
 

02:52:48.640 --> 02:52:51.590 align:start position:0%
size because each um process will will
do<02:52:48.760><c> B</c><02:52:48.920><c> *</c><02:52:49.200><c> T</c><02:52:49.640><c> and</c><02:52:49.760><c> there's</c><02:52:50.040><c> this</c><02:52:50.200><c> many</c><02:52:50.560><c> of</c>

02:52:51.590 --> 02:52:51.600 align:start position:0%
do B * T and there's this many of
 

02:52:51.600 --> 02:52:54.150 align:start position:0%
do B * T and there's this many of
them<02:52:52.600><c> and</c><02:52:52.760><c> so</c><02:52:52.960><c> in</c><02:52:53.120><c> addition</c><02:52:53.439><c> to</c><02:52:53.600><c> that</c><02:52:53.840><c> we</c><02:52:54.040><c> we</c>

02:52:54.150 --> 02:52:54.160 align:start position:0%
them and so in addition to that we we
 

02:52:54.160 --> 02:52:56.870 align:start position:0%
them and so in addition to that we we
want<02:52:54.239><c> to</c><02:52:54.399><c> make</c><02:52:54.960><c> sure</c><02:52:55.960><c> that</c><02:52:56.120><c> this</c><02:52:56.279><c> fits</c><02:52:56.560><c> nicely</c>

02:52:56.870 --> 02:52:56.880 align:start position:0%
want to make sure that this fits nicely
 

02:52:56.880 --> 02:52:58.750 align:start position:0%
want to make sure that this fits nicely
into<02:52:57.080><c> total</c><02:52:57.359><c> batch</c><02:52:57.640><c> size</c><02:52:58.239><c> which</c><02:52:58.359><c> for</c><02:52:58.520><c> us</c><02:52:58.680><c> it</c>

02:52:58.750 --> 02:52:58.760 align:start position:0%
into total batch size which for us it
 

02:52:58.760 --> 02:53:04.309 align:start position:0%
into total batch size which for us it
will<02:52:59.000><c> because</c><02:52:59.239><c> 16</c><02:52:59.640><c> *</c><02:52:59.960><c> 124</c><02:53:00.800><c> *</c><02:53:01.800><c> 8</c><02:53:02.399><c> 8</c><02:53:02.640><c> gpus</c><02:53:03.600><c> is</c>

02:53:04.309 --> 02:53:04.319 align:start position:0%
will because 16 * 124 * 8 8 gpus is
 

02:53:04.319 --> 02:53:08.070 align:start position:0%
will because 16 * 124 * 8 8 gpus is
131<02:53:05.319><c> uh</c><02:53:05.520><c> K</c><02:53:05.880><c> and</c><02:53:06.000><c> so</c>

02:53:08.070 --> 02:53:08.080 align:start position:0%
131 uh K and so
 

02:53:08.080 --> 02:53:10.469 align:start position:0%
131 uh K and so
524288<02:53:09.080><c> this</c><02:53:09.200><c> means</c><02:53:09.479><c> that</c><02:53:09.640><c> our</c><02:53:09.840><c> gratum</c><02:53:10.359><c> will</c>

02:53:10.469 --> 02:53:10.479 align:start position:0%
524288 this means that our gratum will
 

02:53:10.479 --> 02:53:13.950 align:start position:0%
524288 this means that our gratum will
be<02:53:10.640><c> four</c><02:53:11.200><c> with</c><02:53:11.359><c> the</c><02:53:11.479><c> current</c><02:53:11.840><c> settings</c><02:53:12.840><c> right</c>

02:53:13.950 --> 02:53:13.960 align:start position:0%
be four with the current settings right
 

02:53:13.960 --> 02:53:16.830 align:start position:0%
be four with the current settings right
so<02:53:14.960><c> there's</c><02:53:15.120><c> going</c><02:53:15.200><c> to</c><02:53:15.279><c> be</c><02:53:15.439><c> 16</c><02:53:15.760><c> *</c><02:53:16.040><c> 124</c><02:53:16.560><c> process</c>

02:53:16.830 --> 02:53:16.840 align:start position:0%
so there's going to be 16 * 124 process
 

02:53:16.840 --> 02:53:18.910 align:start position:0%
so there's going to be 16 * 124 process
on<02:53:16.960><c> each</c><02:53:17.120><c> GPU</c><02:53:17.720><c> and</c><02:53:17.800><c> then</c><02:53:17.920><c> there's</c><02:53:18.080><c> a</c><02:53:18.200><c> GP</c><02:53:18.560><c> pus</c><02:53:18.840><c> so</c>

02:53:18.910 --> 02:53:18.920 align:start position:0%
on each GPU and then there's a GP pus so
 

02:53:18.920 --> 02:53:20.510 align:start position:0%
on each GPU and then there's a GP pus so
we're<02:53:19.040><c> going</c><02:53:19.120><c> to</c><02:53:19.239><c> be</c><02:53:19.359><c> doing</c>

02:53:20.510 --> 02:53:20.520 align:start position:0%
we're going to be doing
 

02:53:20.520 --> 02:53:23.190 align:start position:0%
we're going to be doing
131,000<02:53:21.520><c> tokens</c><02:53:22.200><c> in</c><02:53:22.319><c> a</c><02:53:22.479><c> single</c><02:53:22.800><c> forward</c>

02:53:23.190 --> 02:53:23.200 align:start position:0%
131,000 tokens in a single forward
 

02:53:23.200 --> 02:53:26.269 align:start position:0%
131,000 tokens in a single forward
backward<02:53:24.160><c> on</c><02:53:25.000><c> the</c><02:53:25.200><c> 8</c>

02:53:26.269 --> 02:53:26.279 align:start position:0%
backward on the 8
 

02:53:26.279 --> 02:53:28.269 align:start position:0%
backward on the 8
gpus<02:53:27.279><c> so</c><02:53:27.399><c> we</c><02:53:27.479><c> want</c><02:53:27.600><c> to</c><02:53:27.680><c> make</c><02:53:27.800><c> sure</c><02:53:28.000><c> that</c><02:53:28.120><c> this</c>

02:53:28.269 --> 02:53:28.279 align:start position:0%
gpus so we want to make sure that this
 

02:53:28.279 --> 02:53:30.790 align:start position:0%
gpus so we want to make sure that this
fits<02:53:28.520><c> nicely</c><02:53:29.000><c> so</c><02:53:29.200><c> that</c><02:53:29.800><c> we</c><02:53:29.920><c> can</c><02:53:30.200><c> derive</c><02:53:30.520><c> a</c><02:53:30.640><c> nice</c>

02:53:30.790 --> 02:53:30.800 align:start position:0%
fits nicely so that we can derive a nice
 

02:53:30.800 --> 02:53:32.349 align:start position:0%
fits nicely so that we can derive a nice
gradient<02:53:31.120><c> accumulation</c>

02:53:32.349 --> 02:53:32.359 align:start position:0%
gradient accumulation
 

02:53:32.359 --> 02:53:36.190 align:start position:0%
gradient accumulation
steps<02:53:33.359><c> and</c><02:53:34.399><c> uh</c><02:53:35.399><c> yeah</c><02:53:35.560><c> let's</c><02:53:35.720><c> just</c><02:53:35.840><c> adjust</c><02:53:36.120><c> the</c>

02:53:36.190 --> 02:53:36.200 align:start position:0%
steps and uh yeah let's just adjust the
 

02:53:36.200 --> 02:53:41.110 align:start position:0%
steps and uh yeah let's just adjust the
comments<02:53:36.640><c> here</c><02:53:37.359><c> times</c><02:53:38.160><c> uh</c><02:53:38.279><c> DDP</c><02:53:39.279><c> World</c><02:53:39.840><c> size</c>

02:53:41.110 --> 02:53:41.120 align:start position:0%
comments here times uh DDP World size
 

02:53:41.120 --> 02:53:45.229 align:start position:0%
comments here times uh DDP World size
okay<02:53:42.120><c> so</c><02:53:42.560><c> each</c><02:53:43.040><c> GPU</c><02:53:43.720><c> calculates</c><02:53:44.359><c> this</c><02:53:45.040><c> now</c>

02:53:45.229 --> 02:53:45.239 align:start position:0%
okay so each GPU calculates this now
 

02:53:45.239 --> 02:53:46.510 align:start position:0%
okay so each GPU calculates this now
this<02:53:45.319><c> is</c><02:53:45.439><c> where</c><02:53:45.560><c> we</c><02:53:45.640><c> start</c><02:53:45.800><c> to</c><02:53:46.000><c> get</c><02:53:46.120><c> run</c><02:53:46.279><c> into</c>

02:53:46.510 --> 02:53:46.520 align:start position:0%
this is where we start to get run into
 

02:53:46.520 --> 02:53:49.349 align:start position:0%
this is where we start to get run into
issues<02:53:46.920><c> right</c><02:53:47.080><c> so</c><02:53:48.040><c> we</c><02:53:48.200><c> are</c><02:53:48.720><c> each</c><02:53:48.960><c> process</c><02:53:49.239><c> is</c>

02:53:49.349 --> 02:53:49.359 align:start position:0%
issues right so we are each process is
 

02:53:49.359 --> 02:53:51.790 align:start position:0%
issues right so we are each process is
going<02:53:49.520><c> to</c><02:53:49.640><c> come</c><02:53:49.920><c> by</c><02:53:50.520><c> a</c><02:53:50.680><c> print</c><02:53:51.359><c> and</c><02:53:51.479><c> they're</c><02:53:51.640><c> all</c>

02:53:51.790 --> 02:53:51.800 align:start position:0%
going to come by a print and they're all
 

02:53:51.800 --> 02:53:53.229 align:start position:0%
going to come by a print and they're all
going<02:53:51.920><c> to</c><02:53:52.120><c> print</c><02:53:52.560><c> so</c><02:53:52.680><c> we're</c><02:53:52.840><c> going</c><02:53:52.920><c> to</c><02:53:53.040><c> have</c>

02:53:53.229 --> 02:53:53.239 align:start position:0%
going to print so we're going to have
 

02:53:53.239 --> 02:53:56.630 align:start position:0%
going to print so we're going to have
eight<02:53:53.560><c> copies</c><02:53:54.399><c> of</c><02:53:55.000><c> these</c><02:53:55.200><c> prints</c><02:53:56.160><c> so</c><02:53:56.399><c> one</c><02:53:56.520><c> way</c>

02:53:56.630 --> 02:53:56.640 align:start position:0%
eight copies of these prints so one way
 

02:53:56.640 --> 02:53:58.349 align:start position:0%
eight copies of these prints so one way
to<02:53:56.720><c> deal</c><02:53:56.920><c> with</c><02:53:57.040><c> this</c><02:53:57.160><c> is</c><02:53:57.319><c> exactly</c><02:53:57.840><c> this</c><02:53:58.000><c> master</c>

02:53:58.349 --> 02:53:58.359 align:start position:0%
to deal with this is exactly this master
 

02:53:58.359 --> 02:53:59.990 align:start position:0%
to deal with this is exactly this master
process<02:53:58.680><c> variable</c><02:53:59.040><c> that</c><02:53:59.160><c> we</c><02:53:59.279><c> have</c><02:53:59.479><c> so</c><02:53:59.760><c> if</c>

02:53:59.990 --> 02:54:00.000 align:start position:0%
process variable that we have so if
 

02:54:00.000 --> 02:54:03.830 align:start position:0%
process variable that we have so if
Master<02:54:00.840><c> process</c><02:54:01.840><c> then</c><02:54:02.479><c> guard</c><02:54:02.840><c> this</c><02:54:03.680><c> and</c>

02:54:03.830 --> 02:54:03.840 align:start position:0%
Master process then guard this and
 

02:54:03.840 --> 02:54:05.309 align:start position:0%
Master process then guard this and
that's<02:54:04.000><c> just</c><02:54:04.120><c> so</c><02:54:04.359><c> that</c><02:54:04.479><c> we</c><02:54:04.720><c> just</c><02:54:04.840><c> print</c><02:54:05.080><c> this</c><02:54:05.239><c> a</c>

02:54:05.309 --> 02:54:05.319 align:start position:0%
that's just so that we just print this a
 

02:54:05.319 --> 02:54:07.309 align:start position:0%
that's just so that we just print this a
single<02:54:05.640><c> time</c><02:54:05.880><c> because</c><02:54:06.120><c> otherwise</c><02:54:07.000><c> all</c><02:54:07.160><c> the</c>

02:54:07.309 --> 02:54:07.319 align:start position:0%
single time because otherwise all the
 

02:54:07.319 --> 02:54:08.830 align:start position:0%
single time because otherwise all the
processes<02:54:07.720><c> would</c><02:54:07.880><c> have</c><02:54:08.000><c> computed</c><02:54:08.439><c> the</c><02:54:08.560><c> exact</c>

02:54:08.830 --> 02:54:08.840 align:start position:0%
processes would have computed the exact
 

02:54:08.840 --> 02:54:10.110 align:start position:0%
processes would have computed the exact
same<02:54:09.000><c> variables</c><02:54:09.439><c> and</c><02:54:09.520><c> there's</c><02:54:09.680><c> no</c><02:54:09.840><c> need</c><02:54:09.960><c> to</c>

02:54:10.110 --> 02:54:10.120 align:start position:0%
same variables and there's no need to
 

02:54:10.120 --> 02:54:11.830 align:start position:0%
same variables and there's no need to
print<02:54:10.399><c> this</c><02:54:10.600><c> eight</c>

02:54:11.830 --> 02:54:11.840 align:start position:0%
print this eight
 

02:54:11.840 --> 02:54:14.469 align:start position:0%
print this eight
times<02:54:12.840><c> um</c><02:54:13.399><c> before</c><02:54:13.720><c> getting</c><02:54:13.920><c> into</c><02:54:14.120><c> the</c><02:54:14.239><c> data</c>

02:54:14.469 --> 02:54:14.479 align:start position:0%
times um before getting into the data
 

02:54:14.479 --> 02:54:15.630 align:start position:0%
times um before getting into the data
loader<02:54:15.040><c> and</c><02:54:15.120><c> we're</c><02:54:15.239><c> going</c><02:54:15.319><c> to</c><02:54:15.399><c> have</c><02:54:15.520><c> to</c>

02:54:15.630 --> 02:54:15.640 align:start position:0%
loader and we're going to have to
 

02:54:15.640 --> 02:54:18.030 align:start position:0%
loader and we're going to have to
refactor<02:54:16.040><c> it</c><02:54:16.239><c> obviously</c><02:54:17.239><c> maybe</c><02:54:17.720><c> at</c><02:54:17.880><c> this</c>

02:54:18.030 --> 02:54:18.040 align:start position:0%
refactor it obviously maybe at this
 

02:54:18.040 --> 02:54:21.469 align:start position:0%
refactor it obviously maybe at this
point<02:54:18.720><c> is</c><02:54:19.279><c> uh</c><02:54:19.399><c> we</c><02:54:19.479><c> should</c><02:54:19.680><c> do</c><02:54:19.800><c> some</c><02:54:20.080><c> prints</c><02:54:21.080><c> and</c>

02:54:21.469 --> 02:54:21.479 align:start position:0%
point is uh we should do some prints and
 

02:54:21.479 --> 02:54:23.710 align:start position:0%
point is uh we should do some prints and
uh<02:54:21.680><c> just</c><02:54:21.960><c> take</c><02:54:22.160><c> it</c><02:54:22.239><c> out</c><02:54:22.399><c> for</c><02:54:22.520><c> a</c><02:54:22.640><c> spin</c><02:54:23.120><c> and</c><02:54:23.399><c> exit</c>

02:54:23.710 --> 02:54:23.720 align:start position:0%
uh just take it out for a spin and exit
 

02:54:23.720 --> 02:54:26.510 align:start position:0%
uh just take it out for a spin and exit
at<02:54:23.880><c> this</c><02:54:24.040><c> point</c><02:54:24.279><c> so</c><02:54:24.840><c> import</c>

02:54:26.510 --> 02:54:26.520 align:start position:0%
at this point so import
 

02:54:26.520 --> 02:54:33.110 align:start position:0%
at this point so import
sis<02:54:27.520><c> and</c><02:54:27.880><c> S</c><02:54:28.200><c> start</c><02:54:28.359><c> exit</c><02:54:28.920><c> and</c><02:54:29.399><c> print</c><02:54:30.399><c> IM</c>

02:54:33.110 --> 02:54:33.120 align:start position:0%
 
 

02:54:33.120 --> 02:54:38.389 align:start position:0%
 
GPU<02:54:34.560><c> um</c><02:54:35.960><c> DDP</c>

02:54:38.389 --> 02:54:38.399 align:start position:0%
GPU um DDP
 

02:54:38.399 --> 02:54:43.349 align:start position:0%
GPU um DDP
rank<02:54:39.399><c> IM</c><02:54:39.600><c> GPU</c><02:54:40.040><c> DDP</c><02:54:40.439><c> Rank</c><02:54:41.080><c> and</c><02:54:41.359><c> that</c><02:54:41.800><c> um</c>

02:54:43.349 --> 02:54:43.359 align:start position:0%
rank IM GPU DDP Rank and that um
 

02:54:43.359 --> 02:54:46.150 align:start position:0%
rank IM GPU DDP Rank and that um
print

02:54:46.150 --> 02:54:46.160 align:start position:0%
print
 

02:54:46.160 --> 02:54:49.309 align:start position:0%
print
by<02:54:47.160><c> so</c><02:54:47.840><c> uh</c><02:54:47.960><c> so</c><02:54:48.080><c> now</c><02:54:48.439><c> let's</c><02:54:48.560><c> try</c><02:54:48.720><c> to</c><02:54:48.920><c> run</c><02:54:49.160><c> this</c>

02:54:49.309 --> 02:54:49.319 align:start position:0%
by so uh so now let's try to run this
 

02:54:49.319 --> 02:54:51.309 align:start position:0%
by so uh so now let's try to run this
and<02:54:49.439><c> just</c><02:54:49.600><c> see</c><02:54:50.319><c> how</c><02:54:50.439><c> this</c><02:54:50.600><c> works</c><02:54:51.040><c> so</c><02:54:51.160><c> let's</c>

02:54:51.309 --> 02:54:51.319 align:start position:0%
and just see how this works so let's
 

02:54:51.319 --> 02:54:52.750 align:start position:0%
and just see how this works so let's
take<02:54:51.439><c> it</c><02:54:51.520><c> for</c><02:54:51.640><c> a</c><02:54:51.760><c> spin</c><02:54:52.080><c> just</c><02:54:52.160><c> so</c><02:54:52.319><c> we</c><02:54:52.439><c> see</c><02:54:52.680><c> what</c>

02:54:52.750 --> 02:54:52.760 align:start position:0%
take it for a spin just so we see what
 

02:54:52.760 --> 02:54:54.710 align:start position:0%
take it for a spin just so we see what
it<02:54:52.880><c> looks</c><02:54:53.120><c> like</c><02:54:53.760><c> so</c><02:54:53.920><c> normally</c><02:54:54.239><c> we</c><02:54:54.359><c> use</c><02:54:54.560><c> to</c>

02:54:54.710 --> 02:54:54.720 align:start position:0%
it looks like so normally we use to
 

02:54:54.720 --> 02:54:57.670 align:start position:0%
it looks like so normally we use to
launch<02:54:55.279><c> python</c><02:54:55.640><c> train</c><02:54:55.880><c> gpd2</c><02:54:56.560><c> P</c><02:54:56.760><c> like</c><02:54:56.960><c> this</c><02:54:57.560><c> now</c>

02:54:57.670 --> 02:54:57.680 align:start position:0%
launch python train gpd2 P like this now
 

02:54:57.680 --> 02:54:59.349 align:start position:0%
launch python train gpd2 P like this now
we're<02:54:57.840><c> going</c><02:54:57.920><c> to</c><02:54:58.080><c> run</c><02:54:58.279><c> with</c><02:54:58.399><c> torch</c><02:54:58.680><c> run</c><02:54:59.239><c> and</c>

02:54:59.349 --> 02:54:59.359 align:start position:0%
we're going to run with torch run and
 

02:54:59.359 --> 02:55:02.030 align:start position:0%
we're going to run with torch run and
this<02:54:59.479><c> is</c><02:54:59.600><c> what</c><02:54:59.720><c> it</c><02:54:59.880><c> looks</c><02:55:00.120><c> like</c><02:55:00.800><c> so</c><02:55:01.080><c> torch</c><02:55:01.359><c> run</c>

02:55:02.030 --> 02:55:02.040 align:start position:0%
this is what it looks like so torch run
 

02:55:02.040 --> 02:55:03.990 align:start position:0%
this is what it looks like so torch run
Standalone<02:55:03.040><c> number</c><02:55:03.279><c> of</c><02:55:03.399><c> processes</c><02:55:03.840><c> for</c>

02:55:03.990 --> 02:55:04.000 align:start position:0%
Standalone number of processes for
 

02:55:04.000 --> 02:55:05.309 align:start position:0%
Standalone number of processes for
example<02:55:04.239><c> is</c><02:55:04.439><c> eight</c><02:55:04.640><c> for</c><02:55:04.760><c> us</c><02:55:04.960><c> because</c><02:55:05.120><c> we</c><02:55:05.200><c> have</c>

02:55:05.309 --> 02:55:05.319 align:start position:0%
example is eight for us because we have
 

02:55:05.319 --> 02:55:09.349 align:start position:0%
example is eight for us because we have
eight<02:55:05.760><c> gpus</c><02:55:06.760><c> uh</c><02:55:06.880><c> and</c><02:55:07.000><c> then</c><02:55:07.160><c> change</c><02:55:07.399><c> of2</c><02:55:08.120><c> Pi</c><02:55:09.080><c> so</c>

02:55:09.349 --> 02:55:09.359 align:start position:0%
eight gpus uh and then change of2 Pi so
 

02:55:09.359 --> 02:55:11.790 align:start position:0%
eight gpus uh and then change of2 Pi so
this<02:55:09.479><c> is</c><02:55:09.720><c> what</c><02:55:10.319><c> the</c><02:55:10.439><c> command</c><02:55:10.800><c> would</c><02:55:10.960><c> look</c><02:55:11.160><c> like</c>

02:55:11.790 --> 02:55:11.800 align:start position:0%
this is what the command would look like
 

02:55:11.800 --> 02:55:13.870 align:start position:0%
this is what the command would look like
and<02:55:11.960><c> torch</c><02:55:12.200><c> run</c><02:55:12.479><c> again</c><02:55:12.640><c> we'll</c><02:55:12.840><c> run</c><02:55:13.120><c> eight</c><02:55:13.319><c> of</c>

02:55:13.870 --> 02:55:13.880 align:start position:0%
and torch run again we'll run eight of
 

02:55:13.880 --> 02:55:16.469 align:start position:0%
and torch run again we'll run eight of
these<02:55:14.880><c> so</c><02:55:15.040><c> let's</c><02:55:15.160><c> just</c><02:55:15.279><c> see</c><02:55:15.399><c> what</c><02:55:15.520><c> happens</c><02:55:16.239><c> so</c>

02:55:16.469 --> 02:55:16.479 align:start position:0%
these so let's just see what happens so
 

02:55:16.479 --> 02:55:18.590 align:start position:0%
these so let's just see what happens so
first

02:55:18.590 --> 02:55:18.600 align:start position:0%
first
 

02:55:18.600 --> 02:55:20.150 align:start position:0%
first
it<02:55:18.800><c> gets</c><02:55:19.040><c> a</c><02:55:19.120><c> little</c><02:55:19.319><c> busy</c><02:55:19.600><c> so</c><02:55:19.760><c> there's</c><02:55:19.880><c> a</c><02:55:20.000><c> lot</c>

02:55:20.150 --> 02:55:20.160 align:start position:0%
it gets a little busy so there's a lot
 

02:55:20.160 --> 02:55:22.150 align:start position:0%
it gets a little busy so there's a lot
going<02:55:20.319><c> on</c><02:55:20.520><c> here</c><02:55:20.720><c> so</c><02:55:21.640><c> first</c><02:55:21.760><c> of</c><02:55:21.880><c> all</c><02:55:22.000><c> there's</c>

02:55:22.150 --> 02:55:22.160 align:start position:0%
going on here so first of all there's
 

02:55:22.160 --> 02:55:24.070 align:start position:0%
going on here so first of all there's
some<02:55:22.279><c> warnings</c><02:55:22.640><c> from</c><02:55:22.840><c> distributed</c><02:55:23.720><c> and</c><02:55:24.000><c> I</c>

02:55:24.070 --> 02:55:24.080 align:start position:0%
some warnings from distributed and I
 

02:55:24.080 --> 02:55:26.070 align:start position:0%
some warnings from distributed and I
don't<02:55:24.399><c> actually</c><02:55:24.720><c> know</c><02:55:25.040><c> that</c><02:55:25.279><c> these</c><02:55:25.800><c> mean</c>

02:55:26.070 --> 02:55:26.080 align:start position:0%
don't actually know that these mean
 

02:55:26.080 --> 02:55:28.030 align:start position:0%
don't actually know that these mean
anything<02:55:26.560><c> I</c><02:55:26.640><c> think</c><02:55:26.800><c> this</c><02:55:26.880><c> is</c><02:55:27.080><c> just</c><02:55:27.279><c> like</c><02:55:27.880><c> the</c>

02:55:28.030 --> 02:55:28.040 align:start position:0%
anything I think this is just like the
 

02:55:28.040 --> 02:55:29.550 align:start position:0%
anything I think this is just like the
code<02:55:28.239><c> is</c><02:55:28.359><c> setting</c><02:55:28.600><c> up</c><02:55:28.760><c> and</c><02:55:28.880><c> the</c><02:55:29.000><c> processes</c><02:55:29.399><c> are</c>

02:55:29.550 --> 02:55:29.560 align:start position:0%
code is setting up and the processes are
 

02:55:29.560 --> 02:55:31.710 align:start position:0%
code is setting up and the processes are
coming<02:55:29.800><c> online</c><02:55:30.200><c> and</c><02:55:30.319><c> we're</c><02:55:30.479><c> seeing</c><02:55:30.840><c> some</c>

02:55:31.710 --> 02:55:31.720 align:start position:0%
coming online and we're seeing some
 

02:55:31.720 --> 02:55:33.750 align:start position:0%
coming online and we're seeing some
preliminary<02:55:32.359><c> failure</c><02:55:32.760><c> to</c><02:55:32.960><c> collect</c><02:55:33.399><c> while</c><02:55:33.600><c> the</c>

02:55:33.750 --> 02:55:33.760 align:start position:0%
preliminary failure to collect while the
 

02:55:33.760 --> 02:55:36.070 align:start position:0%
preliminary failure to collect while the
processes<02:55:34.279><c> come</c><02:55:34.439><c> up</c><02:55:34.920><c> I'm</c><02:55:35.080><c> not</c><02:55:35.439><c> 100%</c><02:55:35.880><c> sure</c>

02:55:36.070 --> 02:55:36.080 align:start position:0%
processes come up I'm not 100% sure
 

02:55:36.080 --> 02:55:39.309 align:start position:0%
processes come up I'm not 100% sure
about<02:55:36.359><c> that</c><02:55:37.239><c> but</c><02:55:37.359><c> we</c><02:55:37.479><c> start</c><02:55:37.680><c> to</c><02:55:38.040><c> then</c><02:55:38.319><c> get</c><02:55:38.560><c> into</c>

02:55:39.309 --> 02:55:39.319 align:start position:0%
about that but we start to then get into
 

02:55:39.319 --> 02:55:41.389 align:start position:0%
about that but we start to then get into
actual<02:55:39.760><c> prints</c>

02:55:41.389 --> 02:55:41.399 align:start position:0%
actual prints
 

02:55:41.399 --> 02:55:44.150 align:start position:0%
actual prints
so<02:55:42.399><c> all</c><02:55:42.520><c> the</c><02:55:42.640><c> processes</c><02:55:43.080><c> went</c><02:55:43.319><c> down</c><02:55:43.880><c> and</c><02:55:44.040><c> then</c>

02:55:44.150 --> 02:55:44.160 align:start position:0%
so all the processes went down and then
 

02:55:44.160 --> 02:55:46.910 align:start position:0%
so all the processes went down and then
the<02:55:44.319><c> first</c><02:55:44.640><c> print</c><02:55:45.160><c> actually</c><02:55:45.960><c> comes</c><02:55:46.239><c> from</c>

02:55:46.910 --> 02:55:46.920 align:start position:0%
the first print actually comes from
 

02:55:46.920 --> 02:55:50.750 align:start position:0%
the first print actually comes from
process<02:55:47.359><c> 5</c><02:55:48.720><c> uh</c><02:55:48.880><c> just</c><02:55:49.160><c> by</c><02:55:49.399><c> chance</c><02:55:50.279><c> and</c><02:55:50.439><c> then</c><02:55:50.600><c> it</c>

02:55:50.750 --> 02:55:50.760 align:start position:0%
process 5 uh just by chance and then it
 

02:55:50.760 --> 02:55:52.790 align:start position:0%
process 5 uh just by chance and then it
printed<02:55:51.319><c> so</c><02:55:51.560><c> process</c><02:55:51.920><c> 5</c><02:55:52.080><c> basically</c><02:55:52.399><c> got</c><02:55:52.600><c> here</c>

02:55:52.790 --> 02:55:52.800 align:start position:0%
printed so process 5 basically got here
 

02:55:52.800 --> 02:55:56.830 align:start position:0%
printed so process 5 basically got here
first<02:55:53.520><c> it</c><02:55:53.640><c> said</c><02:55:53.920><c> I'm</c><02:55:54.120><c> process</c><02:55:54.520><c> on</c><02:55:54.680><c> GPU</c><02:55:55.080><c> 5</c><02:55:55.840><c> buy</c>

02:55:56.830 --> 02:55:56.840 align:start position:0%
first it said I'm process on GPU 5 buy
 

02:55:56.840 --> 02:56:00.110 align:start position:0%
first it said I'm process on GPU 5 buy
and<02:55:57.279><c> then</c><02:55:58.279><c> this</c><02:55:58.560><c> these</c><02:55:58.800><c> prints</c><02:55:59.200><c> come</c><02:55:59.439><c> from</c><02:56:00.000><c> the</c>

02:56:00.110 --> 02:56:00.120 align:start position:0%
and then this these prints come from the
 

02:56:00.120 --> 02:56:01.429 align:start position:0%
and then this these prints come from the
master

02:56:01.429 --> 02:56:01.439 align:start position:0%
master
 

02:56:01.439 --> 02:56:04.269 align:start position:0%
master
process<02:56:02.439><c> so</c><02:56:02.760><c> process</c><02:56:03.080><c> 5</c><02:56:03.319><c> just</c><02:56:03.520><c> finished</c><02:56:03.920><c> first</c>

02:56:04.269 --> 02:56:04.279 align:start position:0%
process so process 5 just finished first
 

02:56:04.279 --> 02:56:05.750 align:start position:0%
process so process 5 just finished first
for<02:56:04.560><c> whatever</c><02:56:04.840><c> reason</c><02:56:05.080><c> it</c><02:56:05.200><c> just</c><02:56:05.319><c> depends</c><02:56:05.600><c> on</c>

02:56:05.750 --> 02:56:05.760 align:start position:0%
for whatever reason it just depends on
 

02:56:05.760 --> 02:56:07.150 align:start position:0%
for whatever reason it just depends on
how<02:56:05.880><c> the</c><02:56:06.000><c> operating</c><02:56:06.359><c> system</c><02:56:06.640><c> scheduled</c><02:56:07.040><c> the</c>

02:56:07.150 --> 02:56:07.160 align:start position:0%
how the operating system scheduled the
 

02:56:07.160 --> 02:56:10.550 align:start position:0%
how the operating system scheduled the
processes<02:56:07.560><c> to</c><02:56:07.840><c> run</c><02:56:08.840><c> uh</c><02:56:08.960><c> then</c><02:56:09.080><c> gpu0</c><02:56:09.800><c> ended</c><02:56:10.359><c> then</c>

02:56:10.550 --> 02:56:10.560 align:start position:0%
processes to run uh then gpu0 ended then
 

02:56:10.560 --> 02:56:14.309 align:start position:0%
processes to run uh then gpu0 ended then
GPU<02:56:10.920><c> 3</c><02:56:11.200><c> and</c><02:56:11.840><c> two</c><02:56:12.840><c> and</c><02:56:13.040><c> then</c><02:56:13.640><c> uh</c><02:56:13.880><c> probably</c>

02:56:14.309 --> 02:56:14.319 align:start position:0%
GPU 3 and two and then uh probably
 

02:56:14.319 --> 02:56:17.070 align:start position:0%
GPU 3 and two and then uh probably
process<02:56:14.680><c> 5</c><02:56:14.920><c> or</c><02:56:15.040><c> something</c><02:56:15.279><c> like</c><02:56:15.479><c> that</c><02:56:15.960><c> has</c><02:56:16.479><c> uh</c>

02:56:17.070 --> 02:56:17.080 align:start position:0%
process 5 or something like that has uh
 

02:56:17.080 --> 02:56:19.750 align:start position:0%
process 5 or something like that has uh
exited<02:56:18.080><c> and</c><02:56:18.359><c> and</c><02:56:18.560><c> DDP</c><02:56:19.120><c> really</c><02:56:19.279><c> doesn't</c><02:56:19.560><c> like</c>

02:56:19.750 --> 02:56:19.760 align:start position:0%
exited and and DDP really doesn't like
 

02:56:19.760 --> 02:56:21.950 align:start position:0%
exited and and DDP really doesn't like
that<02:56:20.000><c> because</c><02:56:20.200><c> we</c><02:56:20.319><c> didn't</c><02:56:20.960><c> properly</c><02:56:21.479><c> dispose</c>

02:56:21.950 --> 02:56:21.960 align:start position:0%
that because we didn't properly dispose
 

02:56:21.960 --> 02:56:27.389 align:start position:0%
that because we didn't properly dispose
of<02:56:22.960><c> uh</c><02:56:23.439><c> the</c><02:56:23.960><c> multi-gpus</c><02:56:24.960><c> um</c><02:56:25.520><c> setting</c><02:56:26.479><c> and</c><02:56:26.640><c> so</c>

02:56:27.389 --> 02:56:27.399 align:start position:0%
of uh the multi-gpus um setting and so
 

02:56:27.399 --> 02:56:28.750 align:start position:0%
of uh the multi-gpus um setting and so
process<02:56:27.720><c> group</c><02:56:27.920><c> has</c><02:56:28.040><c> not</c><02:56:28.200><c> been</c><02:56:28.359><c> destroyed</c>

02:56:28.750 --> 02:56:28.760 align:start position:0%
process group has not been destroyed
 

02:56:28.760 --> 02:56:31.349 align:start position:0%
process group has not been destroyed
before<02:56:28.960><c> we</c><02:56:29.720><c> destruct</c><02:56:30.720><c> uh</c><02:56:30.840><c> so</c><02:56:31.000><c> it</c><02:56:31.160><c> really</c>

02:56:31.349 --> 02:56:31.359 align:start position:0%
before we destruct uh so it really
 

02:56:31.359 --> 02:56:33.269 align:start position:0%
before we destruct uh so it really
doesn't<02:56:31.640><c> like</c><02:56:31.920><c> that</c><02:56:32.279><c> and</c><02:56:32.720><c> in</c><02:56:32.840><c> an</c><02:56:33.000><c> actual</c>

02:56:33.269 --> 02:56:33.279 align:start position:0%
doesn't like that and in an actual
 

02:56:33.279 --> 02:56:34.830 align:start position:0%
doesn't like that and in an actual
application<02:56:33.680><c> we</c><02:56:33.800><c> would</c><02:56:33.960><c> want</c><02:56:34.040><c> to</c><02:56:34.479><c> call</c>

02:56:34.830 --> 02:56:34.840 align:start position:0%
application we would want to call
 

02:56:34.840 --> 02:56:37.309 align:start position:0%
application we would want to call
destroy<02:56:35.279><c> process</c><02:56:35.640><c> group</c><02:56:36.560><c> uh</c><02:56:36.680><c> so</c><02:56:36.840><c> that</c><02:56:37.000><c> we</c>

02:56:37.309 --> 02:56:37.319 align:start position:0%
destroy process group uh so that we
 

02:56:37.319 --> 02:56:40.190 align:start position:0%
destroy process group uh so that we
clean<02:56:37.640><c> up</c><02:56:37.840><c> DDP</c><02:56:38.560><c> properly</c><02:56:39.560><c> and</c><02:56:39.680><c> so</c><02:56:39.840><c> it</c><02:56:39.960><c> doesn't</c>

02:56:40.190 --> 02:56:40.200 align:start position:0%
clean up DDP properly and so it doesn't
 

02:56:40.200 --> 02:56:41.830 align:start position:0%
clean up DDP properly and so it doesn't
like<02:56:40.399><c> that</c><02:56:40.520><c> too</c><02:56:40.720><c> much</c><02:56:41.160><c> and</c><02:56:41.239><c> then</c><02:56:41.359><c> the</c><02:56:41.479><c> rest</c><02:56:41.680><c> of</c>

02:56:41.830 --> 02:56:41.840 align:start position:0%
like that too much and then the rest of
 

02:56:41.840 --> 02:56:45.309 align:start position:0%
like that too much and then the rest of
the<02:56:42.279><c> gpus</c><02:56:42.880><c> finish</c><02:56:43.880><c> and</c><02:56:44.200><c> that's</c><02:56:44.399><c> it</c><02:56:45.160><c> so</c>

02:56:45.309 --> 02:56:45.319 align:start position:0%
the gpus finish and that's it so
 

02:56:45.319 --> 02:56:46.630 align:start position:0%
the gpus finish and that's it so
basically<02:56:45.640><c> we</c><02:56:45.760><c> can't</c><02:56:45.960><c> guarantee</c><02:56:46.359><c> when</c><02:56:46.479><c> these</c>

02:56:46.630 --> 02:56:46.640 align:start position:0%
basically we can't guarantee when these
 

02:56:46.640 --> 02:56:48.790 align:start position:0%
basically we can't guarantee when these
processes<02:56:47.000><c> are</c><02:56:47.120><c> running</c><02:56:47.640><c> it's</c><02:56:47.760><c> totally</c>

02:56:48.790 --> 02:56:48.800 align:start position:0%
processes are running it's totally
 

02:56:48.800 --> 02:56:50.469 align:start position:0%
processes are running it's totally
but<02:56:48.920><c> they</c><02:56:49.040><c> are</c><02:56:49.160><c> running</c><02:56:49.399><c> in</c><02:56:49.560><c> parallel</c><02:56:50.399><c> we</c>

02:56:50.469 --> 02:56:50.479 align:start position:0%
but they are running in parallel we
 

02:56:50.479 --> 02:56:54.150 align:start position:0%
but they are running in parallel we
don't<02:56:50.640><c> want</c><02:56:50.760><c> them</c><02:56:50.880><c> to</c><02:56:51.000><c> be</c><02:56:51.479><c> printing</c><02:56:52.479><c> um</c><02:56:53.160><c> and</c>

02:56:54.150 --> 02:56:54.160 align:start position:0%
don't want them to be printing um and
 

02:56:54.160 --> 02:56:57.030 align:start position:0%
don't want them to be printing um and
next<02:56:54.439><c> up</c><02:56:55.120><c> let's</c><02:56:55.520><c> erase</c>

02:56:57.030 --> 02:56:57.040 align:start position:0%
next up let's erase
 

02:56:57.040 --> 02:56:59.190 align:start position:0%
next up let's erase
this<02:56:58.040><c> next</c><02:56:58.239><c> up</c><02:56:58.399><c> we</c><02:56:58.520><c> want</c><02:56:58.600><c> to</c><02:56:58.720><c> make</c><02:56:58.840><c> sure</c><02:56:59.080><c> that</c>

02:56:59.190 --> 02:56:59.200 align:start position:0%
this next up we want to make sure that
 

02:56:59.200 --> 02:57:01.030 align:start position:0%
this next up we want to make sure that
when<02:56:59.319><c> we</c><02:56:59.479><c> create</c><02:56:59.760><c> data</c><02:57:00.040><c> loader</c><02:57:00.319><c> light</c><02:57:00.800><c> we</c><02:57:00.920><c> need</c>

02:57:01.030 --> 02:57:01.040 align:start position:0%
when we create data loader light we need
 

02:57:01.040 --> 02:57:03.110 align:start position:0%
when we create data loader light we need
to<02:57:01.200><c> now</c><02:57:01.359><c> make</c><02:57:01.479><c> it</c><02:57:01.680><c> aware</c><02:57:02.279><c> of</c><02:57:02.520><c> this</c>

02:57:03.110 --> 02:57:03.120 align:start position:0%
to now make it aware of this
 

02:57:03.120 --> 02:57:06.110 align:start position:0%
to now make it aware of this
multi-process<02:57:04.120><c> um</c><02:57:04.520><c> setting</c><02:57:05.479><c> because</c><02:57:05.960><c> we</c>

02:57:06.110 --> 02:57:06.120 align:start position:0%
multi-process um setting because we
 

02:57:06.120 --> 02:57:07.710 align:start position:0%
multi-process um setting because we
don't<02:57:06.279><c> want</c><02:57:06.479><c> all</c><02:57:06.640><c> the</c><02:57:06.800><c> processes</c><02:57:07.239><c> to</c><02:57:07.399><c> be</c>

02:57:07.710 --> 02:57:07.720 align:start position:0%
don't want all the processes to be
 

02:57:07.720 --> 02:57:10.070 align:start position:0%
don't want all the processes to be
loading<02:57:08.479><c> the</c><02:57:08.640><c> exact</c><02:57:08.920><c> same</c><02:57:09.160><c> data</c><02:57:09.720><c> we</c><02:57:09.840><c> want</c>

02:57:10.070 --> 02:57:10.080 align:start position:0%
loading the exact same data we want
 

02:57:10.080 --> 02:57:11.750 align:start position:0%
loading the exact same data we want
every<02:57:10.359><c> process</c><02:57:10.640><c> to</c><02:57:10.760><c> get</c><02:57:10.920><c> its</c><02:57:11.080><c> own</c><02:57:11.279><c> chunk</c><02:57:11.600><c> of</c>

02:57:11.750 --> 02:57:11.760 align:start position:0%
every process to get its own chunk of
 

02:57:11.760 --> 02:57:13.429 align:start position:0%
every process to get its own chunk of
data<02:57:12.279><c> so</c><02:57:12.439><c> that</c><02:57:12.560><c> they're</c><02:57:12.760><c> all</c><02:57:12.920><c> working</c><02:57:13.200><c> on</c>

02:57:13.429 --> 02:57:13.439 align:start position:0%
data so that they're all working on
 

02:57:13.439 --> 02:57:14.950 align:start position:0%
data so that they're all working on
different<02:57:13.800><c> parts</c><02:57:14.160><c> of</c><02:57:14.279><c> the</c><02:57:14.399><c> data</c><02:57:14.640><c> set</c><02:57:14.800><c> of</c>

02:57:14.950 --> 02:57:14.960 align:start position:0%
different parts of the data set of
 

02:57:14.960 --> 02:57:17.870 align:start position:0%
different parts of the data set of
course<02:57:15.840><c> so</c><02:57:16.200><c> let's</c><02:57:16.399><c> adjust</c><02:57:16.800><c> that</c><02:57:17.520><c> so</c><02:57:17.680><c> one</c>

02:57:17.870 --> 02:57:17.880 align:start position:0%
course so let's adjust that so one
 

02:57:17.880 --> 02:57:19.309 align:start position:0%
course so let's adjust that so one
particular<02:57:18.160><c> particularly</c><02:57:18.600><c> simple</c><02:57:19.080><c> and</c><02:57:19.200><c> a</c>

02:57:19.309 --> 02:57:19.319 align:start position:0%
particular particularly simple and a
 

02:57:19.319 --> 02:57:21.590 align:start position:0%
particular particularly simple and a
naive<02:57:19.680><c> way</c><02:57:19.800><c> to</c><02:57:19.960><c> do</c><02:57:20.120><c> this</c><02:57:20.960><c> is</c><02:57:21.160><c> we</c><02:57:21.279><c> have</c><02:57:21.359><c> to</c><02:57:21.479><c> make</c>

02:57:21.590 --> 02:57:21.600 align:start position:0%
naive way to do this is we have to make
 

02:57:21.600 --> 02:57:23.590 align:start position:0%
naive way to do this is we have to make
sure<02:57:21.760><c> that</c><02:57:21.880><c> we</c><02:57:22.080><c> pass</c><02:57:22.319><c> in</c><02:57:22.640><c> the</c><02:57:22.880><c> rank</c><02:57:23.239><c> and</c><02:57:23.399><c> the</c>

02:57:23.590 --> 02:57:23.600 align:start position:0%
sure that we pass in the rank and the
 

02:57:23.600 --> 02:57:25.710 align:start position:0%
sure that we pass in the rank and the
size<02:57:24.439><c> to</c><02:57:24.600><c> the</c><02:57:24.760><c> data</c>

02:57:25.710 --> 02:57:25.720 align:start position:0%
size to the data
 

02:57:25.720 --> 02:57:28.030 align:start position:0%
size to the data
loader<02:57:26.720><c> and</c><02:57:26.800><c> then</c><02:57:26.880><c> when</c><02:57:26.960><c> we</c><02:57:27.120><c> come</c><02:57:27.239><c> up</c><02:57:27.439><c> here</c><02:57:27.920><c> we</c>

02:57:28.030 --> 02:57:28.040 align:start position:0%
loader and then when we come up here we
 

02:57:28.040 --> 02:57:29.950 align:start position:0%
loader and then when we come up here we
see<02:57:28.200><c> that</c><02:57:28.319><c> we</c><02:57:28.439><c> now</c><02:57:28.640><c> take</c><02:57:28.880><c> Rank</c><02:57:29.160><c> and</c><02:57:29.520><c> processes</c>

02:57:29.950 --> 02:57:29.960 align:start position:0%
see that we now take Rank and processes
 

02:57:29.960 --> 02:57:32.550 align:start position:0%
see that we now take Rank and processes
and<02:57:30.080><c> we</c><02:57:30.200><c> save</c><02:57:30.600><c> them</c><02:57:31.600><c> now</c><02:57:32.120><c> the</c><02:57:32.239><c> current</c>

02:57:32.550 --> 02:57:32.560 align:start position:0%
and we save them now the current
 

02:57:32.560 --> 02:57:35.070 align:start position:0%
and we save them now the current
position<02:57:32.880><c> will</c><02:57:33.040><c> not</c><02:57:33.239><c> be</c><02:57:33.479><c> zero</c><02:57:34.479><c> uh</c><02:57:34.640><c> because</c>

02:57:35.070 --> 02:57:35.080 align:start position:0%
position will not be zero uh because
 

02:57:35.080 --> 02:57:37.790 align:start position:0%
position will not be zero uh because
what<02:57:35.239><c> we</c><02:57:35.399><c> want</c><02:57:36.120><c> is</c><02:57:36.239><c> we</c><02:57:36.359><c> want</c><02:57:36.520><c> to</c><02:57:36.680><c> stride</c><02:57:37.200><c> out</c>

02:57:37.790 --> 02:57:37.800 align:start position:0%
what we want is we want to stride out
 

02:57:37.800 --> 02:57:40.429 align:start position:0%
what we want is we want to stride out
all<02:57:37.960><c> the</c><02:57:38.399><c> processes</c><02:57:39.399><c> so</c><02:57:39.600><c> one</c><02:57:39.760><c> way</c><02:57:39.920><c> to</c><02:57:40.040><c> do</c><02:57:40.200><c> this</c>

02:57:40.429 --> 02:57:40.439 align:start position:0%
all the processes so one way to do this
 

02:57:40.439 --> 02:57:43.910 align:start position:0%
all the processes so one way to do this
is<02:57:40.600><c> we</c><02:57:40.760><c> basically</c><02:57:41.120><c> take</c><02:57:41.479><c> S.B</c><02:57:42.479><c> times</c><02:57:42.800><c> salt.</c><02:57:43.279><c> T</c>

02:57:43.910 --> 02:57:43.920 align:start position:0%
is we basically take S.B times salt. T
 

02:57:43.920 --> 02:57:46.550 align:start position:0%
is we basically take S.B times salt. T
and<02:57:44.000><c> then</c><02:57:44.160><c> multiply</c><02:57:44.640><c> it</c><02:57:44.840><c> by</c><02:57:45.040><c> the</c><02:57:45.239><c> process</c>

02:57:46.550 --> 02:57:46.560 align:start position:0%
and then multiply it by the process
 

02:57:46.560 --> 02:57:49.389 align:start position:0%
and then multiply it by the process
rank<02:57:47.560><c> so</c><02:57:47.880><c> proc</c><02:57:48.160><c> process</c><02:57:48.399><c> rank</c><02:57:48.560><c> 0</c><02:57:48.960><c> will</c><02:57:49.160><c> start</c>

02:57:49.389 --> 02:57:49.399 align:start position:0%
rank so proc process rank 0 will start
 

02:57:49.399 --> 02:57:52.150 align:start position:0%
rank so proc process rank 0 will start
at<02:57:49.600><c> zero</c><02:57:50.279><c> but</c><02:57:50.439><c> process</c><02:57:50.800><c> rank</c><02:57:51.080><c> one</c><02:57:51.680><c> now</c><02:57:51.840><c> starts</c>

02:57:52.150 --> 02:57:52.160 align:start position:0%
at zero but process rank one now starts
 

02:57:52.160 --> 02:57:55.469 align:start position:0%
at zero but process rank one now starts
at<02:57:52.319><c> B</c><02:57:52.439><c> *</c><02:57:52.760><c> T</c><02:57:53.520><c> process</c><02:57:53.840><c> rank</c><02:57:54.040><c> two</c><02:57:54.680><c> is</c><02:57:54.840><c> starts</c><02:57:55.160><c> at</c><02:57:55.319><c> 2</c>

02:57:55.469 --> 02:57:55.479 align:start position:0%
at B * T process rank two is starts at 2
 

02:57:55.479 --> 02:57:58.990 align:start position:0%
at B * T process rank two is starts at 2
*<02:57:55.800><c> B</c><02:57:55.880><c> *</c><02:57:56.239><c> D</c><02:57:56.720><c> Etc</c><02:57:57.680><c> so</c><02:57:57.880><c> that</c><02:57:57.960><c> is</c><02:57:58.080><c> the</c>

02:57:58.990 --> 02:57:59.000 align:start position:0%
* B * D Etc so that is the
 

02:57:59.000 --> 02:58:01.670 align:start position:0%
* B * D Etc so that is the
initialization<02:58:00.000><c> now</c><02:58:00.359><c> we</c><02:58:00.520><c> still</c><02:58:01.279><c> they</c><02:58:01.399><c> still</c>

02:58:01.670 --> 02:58:01.680 align:start position:0%
initialization now we still they still
 

02:58:01.680 --> 02:58:04.030 align:start position:0%
initialization now we still they still
do<02:58:01.920><c> this</c><02:58:02.399><c> identically</c><02:58:03.399><c> but</c><02:58:03.560><c> now</c><02:58:03.720><c> when</c><02:58:03.840><c> we</c>

02:58:04.030 --> 02:58:04.040 align:start position:0%
do this identically but now when we
 

02:58:04.040 --> 02:58:06.750 align:start position:0%
do this identically but now when we
advance<02:58:05.000><c> we</c><02:58:05.120><c> don't</c><02:58:05.359><c> Advance</c><02:58:05.680><c> by</c><02:58:05.800><c> B</c><02:58:05.920><c> *</c><02:58:06.200><c> T</c><02:58:06.560><c> we</c>

02:58:06.750 --> 02:58:06.760 align:start position:0%
advance we don't Advance by B * T we
 

02:58:06.760 --> 02:58:10.150 align:start position:0%
advance we don't Advance by B * T we
advance<02:58:07.080><c> by</c><02:58:07.200><c> B</c><02:58:07.359><c> *</c><02:58:07.600><c> T</c><02:58:07.880><c> times</c><02:58:08.840><c> number</c><02:58:09.080><c> of</c>

02:58:10.150 --> 02:58:10.160 align:start position:0%
advance by B * T times number of
 

02:58:10.160 --> 02:58:14.110 align:start position:0%
advance by B * T times number of
processes<02:58:11.160><c> right</c><02:58:11.800><c> so</c><02:58:12.399><c> basically</c><02:58:13.399><c> um</c><02:58:13.960><c> the</c>

02:58:14.110 --> 02:58:14.120 align:start position:0%
processes right so basically um the
 

02:58:14.120 --> 02:58:16.469 align:start position:0%
processes right so basically um the
total<02:58:14.359><c> number</c><02:58:14.600><c> of</c><02:58:15.000><c> tokens</c><02:58:15.359><c> that</c><02:58:15.479><c> we're</c><02:58:16.160><c> um</c>

02:58:16.469 --> 02:58:16.479 align:start position:0%
total number of tokens that we're um
 

02:58:16.479 --> 02:58:19.309 align:start position:0%
total number of tokens that we're um
consuming<02:58:17.040><c> is</c><02:58:17.160><c> B</c><02:58:17.279><c> *</c><02:58:17.520><c> T</c><02:58:17.600><c> *</c><02:58:17.880><c> number</c><02:58:18.319><c> processes</c>

02:58:19.309 --> 02:58:19.319 align:start position:0%
consuming is B * T * number processes
 

02:58:19.319 --> 02:58:23.309 align:start position:0%
consuming is B * T * number processes
and<02:58:19.680><c> they</c><02:58:19.840><c> all</c><02:58:20.080><c> go</c><02:58:20.319><c> off</c><02:58:21.000><c> to</c><02:58:21.359><c> a</c><02:58:21.520><c> different</c><02:58:22.319><c> Rank</c>

02:58:23.309 --> 02:58:23.319 align:start position:0%
and they all go off to a different Rank
 

02:58:23.319 --> 02:58:24.830 align:start position:0%
and they all go off to a different Rank
and<02:58:23.520><c> the</c><02:58:23.640><c> position</c><02:58:23.960><c> has</c><02:58:24.080><c> to</c><02:58:24.239><c> advance</c><02:58:24.560><c> by</c><02:58:24.720><c> the</c>

02:58:24.830 --> 02:58:24.840 align:start position:0%
and the position has to advance by the
 

02:58:24.840 --> 02:58:26.389 align:start position:0%
and the position has to advance by the
entire

02:58:26.389 --> 02:58:26.399 align:start position:0%
entire
 

02:58:26.399 --> 02:58:30.590 align:start position:0%
entire
chunk<02:58:27.399><c> and</c><02:58:27.560><c> then</c><02:58:27.800><c> here</c><02:58:28.160><c> B</c><02:58:28.279><c> *</c><02:58:28.600><c> T</c><02:58:28.920><c> time</c><02:58:29.479><c> uh</c><02:58:29.600><c> s.</c><02:58:30.120><c> num</c>

02:58:30.590 --> 02:58:30.600 align:start position:0%
chunk and then here B * T time uh s. num
 

02:58:30.600 --> 02:58:33.630 align:start position:0%
chunk and then here B * T time uh s. num
processes<02:58:31.600><c> +</c><02:58:31.880><c> one</c><02:58:32.760><c> would</c><02:58:32.960><c> be</c><02:58:33.080><c> to</c><02:58:33.279><c> exceed</c>

02:58:33.630 --> 02:58:33.640 align:start position:0%
processes + one would be to exceed
 

02:58:33.640 --> 02:58:35.150 align:start position:0%
processes + one would be to exceed
number<02:58:33.800><c> of</c><02:58:33.920><c> tokens</c><02:58:34.680><c> then</c><02:58:34.800><c> we're</c><02:58:34.960><c> going</c><02:58:35.040><c> to</c>

02:58:35.150 --> 02:58:35.160 align:start position:0%
number of tokens then we're going to
 

02:58:35.160 --> 02:58:37.150 align:start position:0%
number of tokens then we're going to
Loop<02:58:35.840><c> and</c><02:58:35.960><c> when</c><02:58:36.080><c> we</c><02:58:36.200><c> Loop</c><02:58:36.560><c> we</c><02:58:36.680><c> want</c><02:58:36.840><c> to</c><02:58:37.040><c> of</c>

02:58:37.150 --> 02:58:37.160 align:start position:0%
Loop and when we Loop we want to of
 

02:58:37.160 --> 02:58:39.790 align:start position:0%
Loop and when we Loop we want to of
course<02:58:37.359><c> Loop</c><02:58:37.680><c> in</c><02:58:37.840><c> the</c><02:58:38.000><c> exact</c><02:58:38.279><c> same</c><02:58:38.520><c> way</c><02:58:39.479><c> so</c><02:58:39.680><c> we</c>

02:58:39.790 --> 02:58:39.800 align:start position:0%
course Loop in the exact same way so we
 

02:58:39.800 --> 02:58:42.870 align:start position:0%
course Loop in the exact same way so we
sort<02:58:40.000><c> of</c><02:58:40.200><c> like</c><02:58:40.479><c> reset</c><02:58:41.399><c> back</c><02:58:42.399><c> uh</c><02:58:42.479><c> so</c><02:58:42.640><c> this</c><02:58:42.760><c> is</c>

02:58:42.870 --> 02:58:42.880 align:start position:0%
sort of like reset back uh so this is
 

02:58:42.880 --> 02:58:45.510 align:start position:0%
sort of like reset back uh so this is
the<02:58:43.040><c> simplest</c><02:58:43.560><c> change</c><02:58:43.960><c> that</c><02:58:44.080><c> I</c><02:58:44.200><c> can</c><02:58:45.000><c> uh</c><02:58:45.160><c> find</c>

02:58:45.510 --> 02:58:45.520 align:start position:0%
the simplest change that I can uh find
 

02:58:45.520 --> 02:58:47.750 align:start position:0%
the simplest change that I can uh find
for<02:58:46.239><c> kind</c><02:58:46.359><c> of</c><02:58:46.479><c> a</c><02:58:46.600><c> very</c><02:58:46.760><c> simple</c><02:58:47.279><c> distributed</c>

02:58:47.750 --> 02:58:47.760 align:start position:0%
for kind of a very simple distributed
 

02:58:47.760 --> 02:58:50.950 align:start position:0%
for kind of a very simple distributed
data<02:58:48.120><c> Lo</c><02:58:48.399><c> light</c><02:58:49.399><c> and</c><02:58:49.760><c> um</c><02:58:50.239><c> you</c><02:58:50.359><c> can</c><02:58:50.520><c> notice</c><02:58:50.800><c> that</c>

02:58:50.950 --> 02:58:50.960 align:start position:0%
data Lo light and um you can notice that
 

02:58:50.960 --> 02:58:52.510 align:start position:0%
data Lo light and um you can notice that
if<02:58:51.279><c> process</c><02:58:51.560><c> rank</c><02:58:51.800><c> is</c><02:58:51.920><c> zero</c><02:58:52.200><c> and</c><02:58:52.319><c> non</c>

02:58:52.510 --> 02:58:52.520 align:start position:0%
if process rank is zero and non
 

02:58:52.520 --> 02:58:54.750 align:start position:0%
if process rank is zero and non
processes<02:58:53.000><c> is</c><02:58:53.200><c> one</c><02:58:53.880><c> then</c><02:58:54.239><c> uh</c><02:58:54.359><c> the</c><02:58:54.439><c> whole</c><02:58:54.600><c> thing</c>

02:58:54.750 --> 02:58:54.760 align:start position:0%
processes is one then uh the whole thing
 

02:58:54.760 --> 02:58:56.710 align:start position:0%
processes is one then uh the whole thing
will<02:58:54.880><c> be</c><02:58:55.080><c> identical</c><02:58:55.439><c> to</c><02:58:55.600><c> what</c><02:58:55.720><c> we</c><02:58:55.800><c> had</c><02:58:55.960><c> before</c>

02:58:56.710 --> 02:58:56.720 align:start position:0%
will be identical to what we had before
 

02:58:56.720 --> 02:58:58.349 align:start position:0%
will be identical to what we had before
but<02:58:56.880><c> now</c><02:58:57.000><c> we</c><02:58:57.080><c> can</c><02:58:57.239><c> have</c><02:58:57.439><c> actually</c><02:58:57.680><c> multiple</c>

02:58:58.349 --> 02:58:58.359 align:start position:0%
but now we can have actually multiple
 

02:58:58.359 --> 02:59:00.349 align:start position:0%
but now we can have actually multiple
processes<02:58:59.359><c> uh</c><02:58:59.479><c> running</c><02:58:59.920><c> and</c><02:59:00.080><c> this</c><02:59:00.160><c> should</c>

02:59:00.349 --> 02:59:00.359 align:start position:0%
processes uh running and this should
 

02:59:00.359 --> 02:59:01.349 align:start position:0%
processes uh running and this should
work

02:59:01.349 --> 02:59:01.359 align:start position:0%
work
 

02:59:01.359 --> 02:59:05.510 align:start position:0%
work
fine<02:59:02.399><c> um</c><02:59:03.399><c> so</c><02:59:03.600><c> that's</c><02:59:03.760><c> the</c><02:59:03.920><c> data</c><02:59:04.399><c> loader</c><02:59:05.399><c> okay</c>

02:59:05.510 --> 02:59:05.520 align:start position:0%
fine um so that's the data loader okay
 

02:59:05.520 --> 02:59:07.469 align:start position:0%
fine um so that's the data loader okay
so<02:59:05.760><c> next</c><02:59:06.120><c> up</c><02:59:06.479><c> once</c><02:59:06.680><c> they've</c><02:59:06.880><c> all</c><02:59:07.000><c> initialized</c>

02:59:07.469 --> 02:59:07.479 align:start position:0%
so next up once they've all initialized
 

02:59:07.479 --> 02:59:09.630 align:start position:0%
so next up once they've all initialized
the<02:59:07.560><c> data</c><02:59:07.760><c> loader</c><02:59:08.600><c> they</c><02:59:08.720><c> come</c><02:59:08.960><c> here</c><02:59:09.279><c> and</c><02:59:09.479><c> they</c>

02:59:09.630 --> 02:59:09.640 align:start position:0%
the data loader they come here and they
 

02:59:09.640 --> 02:59:13.269 align:start position:0%
the data loader they come here and they
all<02:59:10.120><c> create</c><02:59:10.439><c> a</c><02:59:10.600><c> GPT</c><02:59:11.399><c> model</c><02:59:12.399><c> uh</c><02:59:12.600><c> so</c><02:59:12.800><c> we</c><02:59:12.960><c> create</c>

02:59:13.269 --> 02:59:13.279 align:start position:0%
all create a GPT model uh so we create
 

02:59:13.279 --> 02:59:15.750 align:start position:0%
all create a GPT model uh so we create
eight<02:59:13.520><c> GPT</c><02:59:13.960><c> models</c><02:59:14.279><c> on</c><02:59:14.439><c> eight</c><02:59:14.680><c> processes</c><02:59:15.600><c> but</c>

02:59:15.750 --> 02:59:15.760 align:start position:0%
eight GPT models on eight processes but
 

02:59:15.760 --> 02:59:17.590 align:start position:0%
eight GPT models on eight processes but
because<02:59:16.080><c> the</c><02:59:16.279><c> seeds</c><02:59:16.640><c> are</c><02:59:16.840><c> fixed</c><02:59:17.200><c> here</c><02:59:17.439><c> they</c>

02:59:17.590 --> 02:59:17.600 align:start position:0%
because the seeds are fixed here they
 

02:59:17.600 --> 02:59:20.349 align:start position:0%
because the seeds are fixed here they
all<02:59:17.760><c> create</c><02:59:18.279><c> the</c><02:59:18.439><c> same</c><02:59:18.720><c> identical</c><02:59:19.239><c> model</c><02:59:20.239><c> they</c>

02:59:20.349 --> 02:59:20.359 align:start position:0%
all create the same identical model they
 

02:59:20.359 --> 02:59:22.670 align:start position:0%
all create the same identical model they
all<02:59:20.520><c> move</c><02:59:20.720><c> it</c><02:59:20.880><c> to</c><02:59:21.000><c> the</c><02:59:21.200><c> device</c><02:59:21.600><c> of</c><02:59:21.760><c> their</c><02:59:21.960><c> Rank</c>

02:59:22.670 --> 02:59:22.680 align:start position:0%
all move it to the device of their Rank
 

02:59:22.680 --> 02:59:25.030 align:start position:0%
all move it to the device of their Rank
and<02:59:22.840><c> they</c><02:59:23.000><c> all</c><02:59:23.399><c> compile</c><02:59:23.920><c> the</c><02:59:24.040><c> model</c><02:59:24.880><c> and</c>

02:59:25.030 --> 02:59:25.040 align:start position:0%
and they all compile the model and
 

02:59:25.040 --> 02:59:26.309 align:start position:0%
and they all compile the model and
because<02:59:25.239><c> the</c><02:59:25.319><c> models</c><02:59:25.600><c> are</c><02:59:25.720><c> identical</c><02:59:26.239><c> there</c>

02:59:26.309 --> 02:59:26.319 align:start position:0%
because the models are identical there
 

02:59:26.319 --> 02:59:28.070 align:start position:0%
because the models are identical there
are<02:59:26.520><c> eight</c><02:59:26.840><c> identical</c><02:59:27.359><c> compilations</c>

02:59:28.070 --> 02:59:28.080 align:start position:0%
are eight identical compilations
 

02:59:28.080 --> 02:59:31.150 align:start position:0%
are eight identical compilations
happening<02:59:28.640><c> in</c><02:59:28.840><c> parallel</c><02:59:29.520><c> but</c><02:59:29.680><c> that's</c><02:59:30.160><c> okay</c>

02:59:31.150 --> 02:59:31.160 align:start position:0%
happening in parallel but that's okay
 

02:59:31.160 --> 02:59:32.990 align:start position:0%
happening in parallel but that's okay
now<02:59:31.399><c> none</c><02:59:31.560><c> of</c><02:59:31.760><c> this</c><02:59:32.160><c> uh</c><02:59:32.279><c> changes</c><02:59:32.720><c> because</c><02:59:32.920><c> that</c>

02:59:32.990 --> 02:59:33.000 align:start position:0%
now none of this uh changes because that
 

02:59:33.000 --> 02:59:34.870 align:start position:0%
now none of this uh changes because that
is<02:59:33.120><c> on</c><02:59:33.200><c> a</c><02:59:33.359><c> per</c><02:59:33.600><c> step</c><02:59:33.880><c> basis</c><02:59:34.560><c> and</c><02:59:34.680><c> we're</c>

02:59:34.870 --> 02:59:34.880 align:start position:0%
is on a per step basis and we're
 

02:59:34.880 --> 02:59:36.630 align:start position:0%
is on a per step basis and we're
currently<02:59:35.200><c> working</c><02:59:35.520><c> kind</c><02:59:35.640><c> of</c><02:59:35.800><c> within</c><02:59:36.160><c> step</c>

02:59:36.630 --> 02:59:36.640 align:start position:0%
currently working kind of within step
 

02:59:36.640 --> 02:59:39.870 align:start position:0%
currently working kind of within step
because<02:59:36.840><c> we</c><02:59:36.960><c> need</c><02:59:37.160><c> to</c><02:59:37.600><c> um</c><02:59:38.120><c> just</c><02:59:38.640><c> uh</c><02:59:39.520><c> all</c><02:59:39.680><c> the</c>

02:59:39.870 --> 02:59:39.880 align:start position:0%
because we need to um just uh all the
 

02:59:39.880 --> 02:59:41.150 align:start position:0%
because we need to um just uh all the
all<02:59:40.000><c> the</c><02:59:40.080><c> changes</c><02:59:40.359><c> we're</c><02:59:40.560><c> making</c><02:59:40.800><c> are</c><02:59:40.960><c> kind</c><02:59:41.040><c> of</c>

02:59:41.150 --> 02:59:41.160 align:start position:0%
all the changes we're making are kind of
 

02:59:41.160 --> 02:59:42.710 align:start position:0%
all the changes we're making are kind of
like<02:59:41.239><c> a</c><02:59:41.399><c> within</c><02:59:41.760><c> step</c>

02:59:42.710 --> 02:59:42.720 align:start position:0%
like a within step
 

02:59:42.720 --> 02:59:44.950 align:start position:0%
like a within step
changes<02:59:43.720><c> now</c><02:59:43.880><c> the</c><02:59:44.000><c> important</c><02:59:44.319><c> thing</c><02:59:44.640><c> here</c><02:59:44.840><c> is</c>

02:59:44.950 --> 02:59:44.960 align:start position:0%
changes now the important thing here is
 

02:59:44.960 --> 02:59:47.030 align:start position:0%
changes now the important thing here is
when<02:59:45.080><c> we</c><02:59:45.239><c> construct</c><02:59:45.760><c> the</c><02:59:45.960><c> M</c><02:59:46.239><c> model</c><02:59:46.880><c> we</c>

02:59:47.030 --> 02:59:47.040 align:start position:0%
when we construct the M model we
 

02:59:47.040 --> 02:59:48.309 align:start position:0%
when we construct the M model we
actually<02:59:47.239><c> have</c><02:59:47.319><c> a</c><02:59:47.439><c> bit</c><02:59:47.560><c> of</c><02:59:47.680><c> work</c><02:59:47.800><c> to</c><02:59:48.040><c> to</c><02:59:48.120><c> do</c>

02:59:48.309 --> 02:59:48.319 align:start position:0%
actually have a bit of work to to do
 

02:59:48.319 --> 02:59:50.710 align:start position:0%
actually have a bit of work to to do
here<02:59:49.160><c> get</c><02:59:49.319><c> loits</c><02:59:49.720><c> is</c><02:59:49.840><c> deprecated</c><02:59:50.359><c> so</c><02:59:50.600><c> uh</c>

02:59:50.710 --> 02:59:50.720 align:start position:0%
here get loits is deprecated so uh
 

02:59:50.720 --> 02:59:52.190 align:start position:0%
here get loits is deprecated so uh
create

02:59:52.190 --> 02:59:52.200 align:start position:0%
create
 

02:59:52.200 --> 02:59:55.510 align:start position:0%
create
model<02:59:53.200><c> we</c><02:59:53.279><c> need</c><02:59:53.399><c> to</c><02:59:53.600><c> actually</c><02:59:54.040><c> wrap</c><02:59:54.600><c> the</c><02:59:54.760><c> model</c>

02:59:55.510 --> 02:59:55.520 align:start position:0%
model we need to actually wrap the model
 

02:59:55.520 --> 02:59:58.510 align:start position:0%
model we need to actually wrap the model
into<02:59:56.200><c> the</c><02:59:56.479><c> distributed</c><02:59:57.040><c> data</c><02:59:57.279><c> parallel</c>

02:59:58.510 --> 02:59:58.520 align:start position:0%
into the distributed data parallel
 

02:59:58.520 --> 03:00:01.910 align:start position:0%
into the distributed data parallel
container<02:59:59.520><c> so</c><03:00:00.279><c> um</c><03:00:00.880><c> this</c><03:00:01.000><c> is</c><03:00:01.120><c> how</c><03:00:01.239><c> we</c><03:00:01.399><c> wrap</c><03:00:01.760><c> the</c>

03:00:01.910 --> 03:00:01.920 align:start position:0%
container so um this is how we wrap the
 

03:00:01.920 --> 03:00:04.670 align:start position:0%
container so um this is how we wrap the
model<03:00:02.560><c> into</c><03:00:02.800><c> the</c><03:00:02.960><c> DDP</c><03:00:03.439><c> container</c><03:00:04.439><c> and</c><03:00:04.560><c> these</c>

03:00:04.670 --> 03:00:04.680 align:start position:0%
model into the DDP container and these
 

03:00:04.680 --> 03:00:07.150 align:start position:0%
model into the DDP container and these
are<03:00:04.840><c> the</c><03:00:05.000><c> docs</c><03:00:05.319><c> for</c><03:00:05.520><c> DDP</c><03:00:06.080><c> and</c><03:00:06.160><c> they're</c><03:00:06.479><c> quite</c>

03:00:07.150 --> 03:00:07.160 align:start position:0%
are the docs for DDP and they're quite
 

03:00:07.160 --> 03:00:09.110 align:start position:0%
are the docs for DDP and they're quite
extensive<03:00:08.040><c> and</c><03:00:08.160><c> there's</c><03:00:08.319><c> a</c><03:00:08.439><c> lot</c><03:00:08.560><c> of</c><03:00:08.680><c> caveats</c>

03:00:09.110 --> 03:00:09.120 align:start position:0%
extensive and there's a lot of caveats
 

03:00:09.120 --> 03:00:10.389 align:start position:0%
extensive and there's a lot of caveats
and<03:00:09.239><c> a</c><03:00:09.319><c> lot</c><03:00:09.399><c> of</c><03:00:09.479><c> things</c><03:00:09.640><c> to</c><03:00:09.720><c> be</c><03:00:09.840><c> careful</c><03:00:10.160><c> with</c>

03:00:10.389 --> 03:00:10.399 align:start position:0%
and a lot of things to be careful with
 

03:00:10.399 --> 03:00:12.389 align:start position:0%
and a lot of things to be careful with
because<03:00:10.720><c> everything</c><03:00:11.120><c> complexifies</c><03:00:11.760><c> times</c><03:00:12.080><c> 10</c>

03:00:12.389 --> 03:00:12.399 align:start position:0%
because everything complexifies times 10
 

03:00:12.399 --> 03:00:15.670 align:start position:0%
because everything complexifies times 10
when<03:00:12.840><c> multiple</c><03:00:13.399><c> processes</c><03:00:13.800><c> are</c><03:00:14.000><c> involved</c><03:00:14.960><c> but</c>

03:00:15.670 --> 03:00:15.680 align:start position:0%
when multiple processes are involved but
 

03:00:15.680 --> 03:00:17.389 align:start position:0%
when multiple processes are involved but
roughly<03:00:16.040><c> speaking</c><03:00:16.359><c> this</c><03:00:16.560><c> device</c><03:00:16.880><c> IDs</c><03:00:17.319><c> I</c>

03:00:17.389 --> 03:00:17.399 align:start position:0%
roughly speaking this device IDs I
 

03:00:17.399 --> 03:00:18.870 align:start position:0%
roughly speaking this device IDs I
believe<03:00:17.640><c> has</c><03:00:17.720><c> to</c><03:00:17.800><c> be</c><03:00:18.000><c> passed</c><03:00:18.239><c> in</c><03:00:18.720><c> now</c>

03:00:18.870 --> 03:00:18.880 align:start position:0%
believe has to be passed in now
 

03:00:18.880 --> 03:00:20.750 align:start position:0%
believe has to be passed in now
unfortunately<03:00:19.520><c> the</c><03:00:19.680><c> docs</c><03:00:20.000><c> for</c><03:00:20.239><c> what</c><03:00:20.439><c> device</c>

03:00:20.750 --> 03:00:20.760 align:start position:0%
unfortunately the docs for what device
 

03:00:20.760 --> 03:00:24.469 align:start position:0%
unfortunately the docs for what device
IDs<03:00:21.520><c> is</c><03:00:22.279><c> is</c><03:00:22.640><c> is</c><03:00:22.880><c> extremely</c><03:00:23.359><c> unclear</c><03:00:24.239><c> uh</c><03:00:24.359><c> so</c>

03:00:24.469 --> 03:00:24.479 align:start position:0%
IDs is is is extremely unclear uh so
 

03:00:24.479 --> 03:00:26.830 align:start position:0%
IDs is is is extremely unclear uh so
when<03:00:24.600><c> you</c><03:00:24.720><c> actually</c><03:00:25.040><c> like</c><03:00:25.319><c> come</c><03:00:25.640><c> here</c><03:00:26.640><c> this</c>

03:00:26.830 --> 03:00:26.840 align:start position:0%
when you actually like come here this
 

03:00:26.840 --> 03:00:29.349 align:start position:0%
when you actually like come here this
comment<03:00:27.120><c> for</c><03:00:27.319><c> what</c><03:00:27.479><c> device</c><03:00:27.760><c> IDs</c><03:00:28.239><c> is</c><03:00:28.600><c> is</c>

03:00:29.349 --> 03:00:29.359 align:start position:0%
comment for what device IDs is is
 

03:00:29.359 --> 03:00:30.469 align:start position:0%
comment for what device IDs is is
roughly

03:00:30.469 --> 03:00:30.479 align:start position:0%
roughly
 

03:00:30.479 --> 03:00:33.030 align:start position:0%
roughly
nonsensical<03:00:31.479><c> um</c><03:00:32.000><c> but</c><03:00:32.160><c> I'm</c><03:00:32.399><c> pretty</c><03:00:32.600><c> sure</c><03:00:32.880><c> it's</c>

03:00:33.030 --> 03:00:33.040 align:start position:0%
nonsensical um but I'm pretty sure it's
 

03:00:33.040 --> 03:00:35.510 align:start position:0%
nonsensical um but I'm pretty sure it's
supposed<03:00:33.279><c> to</c><03:00:33.359><c> be</c><03:00:33.520><c> the</c><03:00:33.640><c> DDP</c><03:00:34.120><c> local</c><03:00:34.439><c> rank</c><03:00:34.920><c> so</c><03:00:35.200><c> not</c>

03:00:35.510 --> 03:00:35.520 align:start position:0%
supposed to be the DDP local rank so not
 

03:00:35.520 --> 03:00:39.229 align:start position:0%
supposed to be the DDP local rank so not
the<03:00:35.640><c> DDP</c><03:00:36.040><c> rank</c><03:00:36.520><c> the</c><03:00:36.720><c> local</c><03:00:37.279><c> rank</c><03:00:38.279><c> uh</c><03:00:38.399><c> so</c><03:00:39.120><c> this</c>

03:00:39.229 --> 03:00:39.239 align:start position:0%
the DDP rank the local rank uh so this
 

03:00:39.239 --> 03:00:41.269 align:start position:0%
the DDP rank the local rank uh so this
is<03:00:39.359><c> what</c><03:00:39.479><c> you</c><03:00:39.600><c> pass</c><03:00:39.760><c> in</c><03:00:40.000><c> here</c><03:00:40.640><c> this</c><03:00:40.800><c> wraps</c><03:00:41.160><c> the</c>

03:00:41.269 --> 03:00:41.279 align:start position:0%
is what you pass in here this wraps the
 

03:00:41.279 --> 03:00:43.229 align:start position:0%
is what you pass in here this wraps the
model<03:00:42.000><c> and</c><03:00:42.120><c> in</c><03:00:42.239><c> particular</c><03:00:42.600><c> what</c><03:00:42.680><c> DDP</c><03:00:43.080><c> does</c>

03:00:43.229 --> 03:00:43.239 align:start position:0%
model and in particular what DDP does
 

03:00:43.239 --> 03:00:45.510 align:start position:0%
model and in particular what DDP does
for<03:00:43.399><c> you</c><03:00:43.640><c> is</c><03:00:44.239><c> in</c><03:00:44.359><c> a</c><03:00:44.520><c> forward</c><03:00:44.880><c> pass</c><03:00:45.120><c> it</c><03:00:45.279><c> actually</c>

03:00:45.510 --> 03:00:45.520 align:start position:0%
for you is in a forward pass it actually
 

03:00:45.520 --> 03:00:48.190 align:start position:0%
for you is in a forward pass it actually
behaves<03:00:46.040><c> identically</c><03:00:46.800><c> so</c><03:00:47.439><c> um</c><03:00:47.680><c> my</c>

03:00:48.190 --> 03:00:48.200 align:start position:0%
behaves identically so um my
 

03:00:48.200 --> 03:00:49.630 align:start position:0%
behaves identically so um my
understanding<03:00:48.359><c> of</c><03:00:48.479><c> it</c><03:00:48.640><c> is</c><03:00:49.120><c> nothing</c><03:00:49.359><c> should</c><03:00:49.560><c> be</c>

03:00:49.630 --> 03:00:49.640 align:start position:0%
understanding of it is nothing should be
 

03:00:49.640 --> 03:00:51.630 align:start position:0%
understanding of it is nothing should be
changed<03:00:49.960><c> in</c><03:00:50.040><c> the</c><03:00:50.160><c> forward</c><03:00:50.520><c> pass</c><03:00:51.239><c> but</c><03:00:51.399><c> in</c><03:00:51.479><c> the</c>

03:00:51.630 --> 03:00:51.640 align:start position:0%
changed in the forward pass but in the
 

03:00:51.640 --> 03:00:53.710 align:start position:0%
changed in the forward pass but in the
backward<03:00:52.040><c> pass</c><03:00:52.880><c> as</c><03:00:53.120><c> you</c><03:00:53.239><c> are</c><03:00:53.359><c> doing</c><03:00:53.600><c> the</c>

03:00:53.710 --> 03:00:53.720 align:start position:0%
backward pass as you are doing the
 

03:00:53.720 --> 03:00:56.830 align:start position:0%
backward pass as you are doing the
backward<03:00:54.479><c> pass</c><03:00:55.479><c> um</c><03:00:55.800><c> in</c><03:00:55.960><c> the</c><03:00:56.080><c> simpl</c><03:00:56.399><c> setting</c>

03:00:56.830 --> 03:00:56.840 align:start position:0%
backward pass um in the simpl setting
 

03:00:56.840 --> 03:00:59.110 align:start position:0%
backward pass um in the simpl setting
once<03:00:57.000><c> the</c><03:00:57.120><c> backp</c><03:00:57.560><c> passes</c><03:00:58.040><c> over</c><03:00:58.479><c> on</c><03:00:58.760><c> each</c>

03:00:59.110 --> 03:00:59.120 align:start position:0%
once the backp passes over on each
 

03:00:59.120 --> 03:01:02.110 align:start position:0%
once the backp passes over on each
independent<03:00:59.880><c> GPU</c><03:01:00.880><c> each</c><03:01:01.080><c> independent</c><03:01:01.479><c> GPU</c><03:01:01.920><c> has</c>

03:01:02.110 --> 03:01:02.120 align:start position:0%
independent GPU each independent GPU has
 

03:01:02.120 --> 03:01:05.190 align:start position:0%
independent GPU each independent GPU has
the<03:01:02.359><c> gradient</c><03:01:03.040><c> for</c><03:01:03.239><c> all</c><03:01:03.399><c> the</c><03:01:04.080><c> parameters</c><03:01:05.080><c> and</c>

03:01:05.190 --> 03:01:05.200 align:start position:0%
the gradient for all the parameters and
 

03:01:05.200 --> 03:01:06.790 align:start position:0%
the gradient for all the parameters and
what<03:01:05.319><c> DDP</c><03:01:05.760><c> does</c><03:01:05.920><c> for</c><03:01:06.120><c> you</c><03:01:06.319><c> is</c><03:01:06.479><c> once</c><03:01:06.680><c> the</c>

03:01:06.790 --> 03:01:06.800 align:start position:0%
what DDP does for you is once the
 

03:01:06.800 --> 03:01:09.150 align:start position:0%
what DDP does for you is once the
backward<03:01:07.160><c> pass</c><03:01:07.359><c> is</c><03:01:07.600><c> over</c><03:01:08.359><c> it</c><03:01:08.439><c> will</c><03:01:08.720><c> call</c>

03:01:09.150 --> 03:01:09.160 align:start position:0%
backward pass is over it will call
 

03:01:09.160 --> 03:01:11.070 align:start position:0%
backward pass is over it will call
what's<03:01:09.359><c> called</c><03:01:09.560><c> all</c><03:01:09.880><c> reduce</c><03:01:10.880><c> and</c><03:01:10.960><c> it</c>

03:01:11.070 --> 03:01:11.080 align:start position:0%
what's called all reduce and it
 

03:01:11.080 --> 03:01:14.309 align:start position:0%
what's called all reduce and it
basically<03:01:11.399><c> does</c><03:01:11.520><c> an</c><03:01:11.720><c> average</c><03:01:12.520><c> across</c><03:01:13.120><c> all</c><03:01:13.399><c> the</c>

03:01:14.309 --> 03:01:14.319 align:start position:0%
basically does an average across all the
 

03:01:14.319 --> 03:01:18.150 align:start position:0%
basically does an average across all the
uh<03:01:14.720><c> ranks</c><03:01:15.720><c> of</c><03:01:16.080><c> their</c><03:01:16.720><c> gradients</c><03:01:17.720><c> and</c><03:01:17.920><c> and</c><03:01:18.000><c> then</c>

03:01:18.150 --> 03:01:18.160 align:start position:0%
uh ranks of their gradients and and then
 

03:01:18.160 --> 03:01:20.309 align:start position:0%
uh ranks of their gradients and and then
it<03:01:18.239><c> will</c><03:01:18.439><c> deposit</c><03:01:18.920><c> that</c><03:01:19.120><c> average</c><03:01:19.880><c> on</c><03:01:20.120><c> every</c>

03:01:20.309 --> 03:01:20.319 align:start position:0%
it will deposit that average on every
 

03:01:20.319 --> 03:01:22.630 align:start position:0%
it will deposit that average on every
single<03:01:20.760><c> rank</c><03:01:21.399><c> so</c><03:01:21.640><c> every</c><03:01:21.880><c> sing</c><03:01:22.160><c> Single</c><03:01:22.399><c> rank</c>

03:01:22.630 --> 03:01:22.640 align:start position:0%
single rank so every sing Single rank
 

03:01:22.640 --> 03:01:25.309 align:start position:0%
single rank so every sing Single rank
will<03:01:22.800><c> end</c><03:01:22.960><c> up</c><03:01:23.120><c> with</c><03:01:23.279><c> the</c><03:01:23.439><c> average</c><03:01:24.080><c> on</c><03:01:24.279><c> it</c><03:01:25.239><c> and</c>

03:01:25.309 --> 03:01:25.319 align:start position:0%
will end up with the average on it and
 

03:01:25.319 --> 03:01:26.990 align:start position:0%
will end up with the average on it and
so<03:01:25.479><c> basically</c><03:01:25.800><c> that's</c><03:01:25.960><c> the</c><03:01:26.080><c> communication</c><03:01:26.880><c> it</c>

03:01:26.990 --> 03:01:27.000 align:start position:0%
so basically that's the communication it
 

03:01:27.000 --> 03:01:28.550 align:start position:0%
so basically that's the communication it
just<03:01:27.160><c> synchronizes</c><03:01:27.800><c> and</c><03:01:28.000><c> averages</c><03:01:28.439><c> the</c>

03:01:28.550 --> 03:01:28.560 align:start position:0%
just synchronizes and averages the
 

03:01:28.560 --> 03:01:30.990 align:start position:0%
just synchronizes and averages the
gradients<03:01:29.279><c> and</c><03:01:29.399><c> that's</c><03:01:29.520><c> what</c><03:01:29.640><c> DDP</c><03:01:30.080><c> offers</c><03:01:30.359><c> you</c>

03:01:30.990 --> 03:01:31.000 align:start position:0%
gradients and that's what DDP offers you
 

03:01:31.000 --> 03:01:34.229 align:start position:0%
gradients and that's what DDP offers you
now<03:01:31.120><c> DDP</c><03:01:31.560><c> actually</c><03:01:31.760><c> is</c><03:01:31.880><c> a</c><03:01:31.960><c> little</c><03:01:32.120><c> bit</c><03:01:32.279><c> more</c><03:01:33.239><c> um</c>

03:01:34.229 --> 03:01:34.239 align:start position:0%
now DDP actually is a little bit more um
 

03:01:34.239 --> 03:01:35.630 align:start position:0%
now DDP actually is a little bit more um
it<03:01:34.359><c> is</c><03:01:34.479><c> a</c><03:01:34.560><c> little</c><03:01:34.720><c> bit</c><03:01:34.960><c> more</c><03:01:35.120><c> involved</c><03:01:35.479><c> than</c>

03:01:35.630 --> 03:01:35.640 align:start position:0%
it is a little bit more involved than
 

03:01:35.640 --> 03:01:37.429 align:start position:0%
it is a little bit more involved than
that<03:01:35.920><c> because</c><03:01:36.760><c> as</c><03:01:36.880><c> you</c><03:01:37.000><c> are</c><03:01:37.120><c> doing</c><03:01:37.319><c> the</c>

03:01:37.429 --> 03:01:37.439 align:start position:0%
that because as you are doing the
 

03:01:37.439 --> 03:01:38.830 align:start position:0%
that because as you are doing the
backward<03:01:37.800><c> pass</c><03:01:38.040><c> through</c><03:01:38.200><c> the</c><03:01:38.319><c> layers</c><03:01:38.600><c> of</c><03:01:38.720><c> the</c>

03:01:38.830 --> 03:01:38.840 align:start position:0%
backward pass through the layers of the
 

03:01:38.840 --> 03:01:41.229 align:start position:0%
backward pass through the layers of the
Transformer<03:01:39.560><c> it</c><03:01:39.720><c> actually</c><03:01:40.000><c> can</c><03:01:40.239><c> dispatch</c>

03:01:41.229 --> 03:01:41.239 align:start position:0%
Transformer it actually can dispatch
 

03:01:41.239 --> 03:01:43.469 align:start position:0%
Transformer it actually can dispatch
Communications<03:01:42.239><c> for</c><03:01:42.439><c> the</c><03:01:42.600><c> gradient</c><03:01:43.279><c> while</c>

03:01:43.469 --> 03:01:43.479 align:start position:0%
Communications for the gradient while
 

03:01:43.479 --> 03:01:45.309 align:start position:0%
Communications for the gradient while
the<03:01:43.600><c> backward</c><03:01:43.960><c> pass</c><03:01:44.120><c> is</c><03:01:44.279><c> still</c><03:01:44.479><c> happening</c><03:01:45.120><c> so</c>

03:01:45.309 --> 03:01:45.319 align:start position:0%
the backward pass is still happening so
 

03:01:45.319 --> 03:01:47.429 align:start position:0%
the backward pass is still happening so
there's<03:01:45.720><c> overlap</c><03:01:46.319><c> of</c><03:01:46.520><c> the</c><03:01:46.880><c> uh</c><03:01:47.000><c> communication</c>

03:01:47.429 --> 03:01:47.439 align:start position:0%
there's overlap of the uh communication
 

03:01:47.439 --> 03:01:48.950 align:start position:0%
there's overlap of the uh communication
of<03:01:47.520><c> the</c><03:01:47.600><c> gradient</c><03:01:48.200><c> and</c><03:01:48.279><c> the</c><03:01:48.359><c> synchronization</c>

03:01:48.950 --> 03:01:48.960 align:start position:0%
of the gradient and the synchronization
 

03:01:48.960 --> 03:01:52.030 align:start position:0%
of the gradient and the synchronization
of<03:01:49.120><c> them</c><03:01:49.800><c> and</c><03:01:50.279><c> uh</c><03:01:50.399><c> the</c><03:01:50.479><c> backward</c><03:01:50.880><c> pass</c><03:01:51.600><c> and</c><03:01:51.920><c> uh</c>

03:01:52.030 --> 03:01:52.040 align:start position:0%
of them and uh the backward pass and uh
 

03:01:52.040 --> 03:01:55.229 align:start position:0%
of them and uh the backward pass and uh
this<03:01:52.160><c> is</c><03:01:52.319><c> just</c><03:01:52.520><c> more</c><03:01:52.760><c> efficient</c><03:01:53.399><c> and</c><03:01:53.960><c> um</c><03:01:54.960><c> uh</c><03:01:55.080><c> to</c>

03:01:55.229 --> 03:01:55.239 align:start position:0%
this is just more efficient and um uh to
 

03:01:55.239 --> 03:01:57.630 align:start position:0%
this is just more efficient and um uh to
do<03:01:55.359><c> it</c><03:01:55.520><c> that</c><03:01:55.680><c> way</c><03:01:56.640><c> so</c><03:01:56.840><c> that's</c><03:01:56.960><c> what</c><03:01:57.080><c> DDP</c><03:01:57.479><c> does</c>

03:01:57.630 --> 03:01:57.640 align:start position:0%
do it that way so that's what DDP does
 

03:01:57.640 --> 03:02:00.710 align:start position:0%
do it that way so that's what DDP does
for<03:01:57.800><c> you</c><03:01:58.359><c> um</c><03:01:59.080><c> forward</c><03:01:59.520><c> is</c><03:01:59.640><c> unchanged</c><03:02:00.520><c> and</c>

03:02:00.710 --> 03:02:00.720 align:start position:0%
for you um forward is unchanged and
 

03:02:00.720 --> 03:02:02.469 align:start position:0%
for you um forward is unchanged and
backward<03:02:01.080><c> is</c><03:02:01.200><c> mostly</c><03:02:01.479><c> unchanged</c><03:02:02.160><c> and</c><03:02:02.279><c> we're</c>

03:02:02.469 --> 03:02:02.479 align:start position:0%
backward is mostly unchanged and we're
 

03:02:02.479 --> 03:02:04.950 align:start position:0%
backward is mostly unchanged and we're
tacking<03:02:02.840><c> on</c><03:02:03.439><c> this</c><03:02:04.000><c> average</c><03:02:04.439><c> as</c><03:02:04.560><c> we'll</c><03:02:04.720><c> see</c><03:02:04.880><c> in</c>

03:02:04.950 --> 03:02:04.960 align:start position:0%
tacking on this average as we'll see in
 

03:02:04.960 --> 03:02:08.269 align:start position:0%
tacking on this average as we'll see in
a<03:02:05.200><c> bit</c><03:02:06.200><c> okay</c><03:02:06.319><c> so</c><03:02:06.520><c> now</c><03:02:06.720><c> let's</c><03:02:07.040><c> go</c><03:02:07.319><c> to</c><03:02:07.600><c> the</c><03:02:08.000><c> uh</c>

03:02:08.269 --> 03:02:08.279 align:start position:0%
a bit okay so now let's go to the uh
 

03:02:08.279 --> 03:02:11.030 align:start position:0%
a bit okay so now let's go to the uh
optimization<03:02:09.279><c> nothing</c><03:02:09.600><c> here</c><03:02:09.880><c> changes</c><03:02:10.880><c> let's</c>

03:02:11.030 --> 03:02:11.040 align:start position:0%
optimization nothing here changes let's
 

03:02:11.040 --> 03:02:12.710 align:start position:0%
optimization nothing here changes let's
go<03:02:11.160><c> to</c><03:02:11.239><c> the</c><03:02:11.359><c> optimization</c><03:02:12.000><c> here</c><03:02:12.359><c> the</c><03:02:12.479><c> inner</c>

03:02:12.710 --> 03:02:12.720 align:start position:0%
go to the optimization here the inner
 

03:02:12.720 --> 03:02:13.830 align:start position:0%
go to the optimization here the inner
loop<03:02:13.000><c> and</c><03:02:13.120><c> think</c><03:02:13.399><c> through</c><03:02:13.680><c> the</c>

03:02:13.830 --> 03:02:13.840 align:start position:0%
loop and think through the
 

03:02:13.840 --> 03:02:15.910 align:start position:0%
loop and think through the
synchronization<03:02:14.600><c> of</c><03:02:15.120><c> uh</c><03:02:15.239><c> these</c><03:02:15.399><c> gradients</c><03:02:15.800><c> in</c>

03:02:15.910 --> 03:02:15.920 align:start position:0%
synchronization of uh these gradients in
 

03:02:15.920 --> 03:02:18.429 align:start position:0%
synchronization of uh these gradients in
the<03:02:16.359><c> DP</c><03:02:17.359><c> so</c><03:02:17.479><c> basically</c><03:02:17.920><c> by</c><03:02:18.040><c> default</c><03:02:18.319><c> what</c>

03:02:18.429 --> 03:02:18.439 align:start position:0%
the DP so basically by default what
 

03:02:18.439 --> 03:02:20.349 align:start position:0%
the DP so basically by default what
happens<03:02:18.720><c> as</c><03:02:18.840><c> I</c><03:02:18.920><c> mentioned</c><03:02:19.319><c> is</c><03:02:19.479><c> when</c><03:02:19.600><c> you</c><03:02:19.720><c> do</c><03:02:19.880><c> l.</c>

03:02:20.349 --> 03:02:20.359 align:start position:0%
happens as I mentioned is when you do l.
 

03:02:20.359 --> 03:02:22.710 align:start position:0%
happens as I mentioned is when you do l.
backward<03:02:20.800><c> here</c><03:02:21.640><c> it</c><03:02:21.760><c> will</c><03:02:21.960><c> do</c><03:02:22.160><c> the</c><03:02:22.319><c> backward</c>

03:02:22.710 --> 03:02:22.720 align:start position:0%
backward here it will do the backward
 

03:02:22.720 --> 03:02:24.710 align:start position:0%
backward here it will do the backward
pass<03:02:23.239><c> and</c><03:02:23.399><c> then</c><03:02:23.600><c> it</c><03:02:23.680><c> will</c><03:02:23.880><c> synchronize</c><03:02:24.359><c> the</c>

03:02:24.710 --> 03:02:24.720 align:start position:0%
pass and then it will synchronize the
 

03:02:24.720 --> 03:02:28.150 align:start position:0%
pass and then it will synchronize the
gradients<03:02:25.960><c> um</c><03:02:26.960><c> the</c><03:02:27.160><c> problem</c><03:02:27.439><c> here</c><03:02:27.560><c> is</c><03:02:27.840><c> because</c>

03:02:28.150 --> 03:02:28.160 align:start position:0%
gradients um the problem here is because
 

03:02:28.160 --> 03:02:30.510 align:start position:0%
gradients um the problem here is because
of<03:02:28.319><c> the</c><03:02:28.479><c> gradient</c><03:02:28.920><c> accumulation</c><03:02:29.520><c> steps</c><03:02:30.120><c> Loop</c>

03:02:30.510 --> 03:02:30.520 align:start position:0%
of the gradient accumulation steps Loop
 

03:02:30.520 --> 03:02:33.590 align:start position:0%
of the gradient accumulation steps Loop
here<03:02:31.520><c> we</c><03:02:31.680><c> don't</c><03:02:32.040><c> actually</c><03:02:32.560><c> want</c><03:02:32.880><c> to</c><03:02:33.080><c> do</c><03:02:33.319><c> the</c>

03:02:33.590 --> 03:02:33.600 align:start position:0%
here we don't actually want to do the
 

03:02:33.600 --> 03:02:35.630 align:start position:0%
here we don't actually want to do the
synchronization<03:02:34.560><c> after</c><03:02:34.880><c> every</c><03:02:35.120><c> single</c><03:02:35.399><c> La</c>

03:02:35.630 --> 03:02:35.640 align:start position:0%
synchronization after every single La
 

03:02:35.640 --> 03:02:37.309 align:start position:0%
synchronization after every single La
step<03:02:35.880><c> backward</c><03:02:36.720><c> because</c><03:02:36.920><c> we</c><03:02:37.000><c> are</c><03:02:37.160><c> just</c>

03:02:37.309 --> 03:02:37.319 align:start position:0%
step backward because we are just
 

03:02:37.319 --> 03:02:39.150 align:start position:0%
step backward because we are just
depositing<03:02:37.880><c> gradients</c><03:02:38.680><c> and</c><03:02:38.760><c> we're</c><03:02:38.920><c> doing</c>

03:02:39.150 --> 03:02:39.160 align:start position:0%
depositing gradients and we're doing
 

03:02:39.160 --> 03:02:40.910 align:start position:0%
depositing gradients and we're doing
that<03:02:39.279><c> serially</c><03:02:40.000><c> and</c><03:02:40.239><c> we</c><03:02:40.399><c> just</c><03:02:40.520><c> want</c><03:02:40.720><c> them</c>

03:02:40.910 --> 03:02:40.920 align:start position:0%
that serially and we just want them
 

03:02:40.920 --> 03:02:42.590 align:start position:0%
that serially and we just want them
adding<03:02:41.200><c> up</c><03:02:42.000><c> and</c><03:02:42.080><c> we</c><03:02:42.200><c> don't</c><03:02:42.319><c> want</c><03:02:42.439><c> to</c>

03:02:42.590 --> 03:02:42.600 align:start position:0%
adding up and we don't want to
 

03:02:42.600 --> 03:02:44.070 align:start position:0%
adding up and we don't want to
synchronize<03:02:43.160><c> every</c><03:02:43.359><c> single</c><03:02:43.640><c> time</c><03:02:43.840><c> that</c><03:02:43.960><c> would</c>

03:02:44.070 --> 03:02:44.080 align:start position:0%
synchronize every single time that would
 

03:02:44.080 --> 03:02:46.229 align:start position:0%
synchronize every single time that would
be<03:02:44.200><c> extremely</c><03:02:44.640><c> wasteful</c><03:02:45.640><c> so</c><03:02:45.800><c> basically</c><03:02:46.160><c> we</c>

03:02:46.229 --> 03:02:46.239 align:start position:0%
be extremely wasteful so basically we
 

03:02:46.239 --> 03:02:48.030 align:start position:0%
be extremely wasteful so basically we
want<03:02:46.359><c> to</c><03:02:46.600><c> add</c><03:02:46.760><c> them</c><03:02:46.960><c> up</c><03:02:47.319><c> and</c><03:02:47.439><c> then</c><03:02:47.520><c> on</c><03:02:47.680><c> the</c><03:02:47.880><c> the</c>

03:02:48.030 --> 03:02:48.040 align:start position:0%
want to add them up and then on the the
 

03:02:48.040 --> 03:02:50.429 align:start position:0%
want to add them up and then on the the
very<03:02:48.399><c> last</c><03:02:49.080><c> uh</c><03:02:49.200><c> it's</c><03:02:49.319><c> only</c><03:02:49.479><c> on</c><03:02:49.640><c> the</c><03:02:49.800><c> very</c><03:02:50.080><c> last</c>

03:02:50.429 --> 03:02:50.439 align:start position:0%
very last uh it's only on the very last
 

03:02:50.439 --> 03:02:53.070 align:start position:0%
very last uh it's only on the very last
step<03:02:51.080><c> when</c><03:02:51.279><c> micro</c><03:02:52.160><c> when</c><03:02:52.319><c> micro</c><03:02:52.640><c> step</c><03:02:52.840><c> becomes</c>

03:02:53.070 --> 03:02:53.080 align:start position:0%
step when micro when micro step becomes
 

03:02:53.080 --> 03:02:55.790 align:start position:0%
step when micro when micro step becomes
gratak<03:02:53.560><c> steps</c><03:02:53.840><c> minus</c><03:02:54.120><c> one</c><03:02:54.920><c> only</c><03:02:55.160><c> at</c><03:02:55.359><c> that</c><03:02:55.520><c> last</c>

03:02:55.790 --> 03:02:55.800 align:start position:0%
gratak steps minus one only at that last
 

03:02:55.800 --> 03:02:58.670 align:start position:0%
gratak steps minus one only at that last
step<03:02:56.040><c> do</c><03:02:56.160><c> we</c><03:02:56.319><c> want</c><03:02:57.000><c> to</c><03:02:57.439><c> actually</c><03:02:57.720><c> do</c><03:02:57.960><c> the</c>

03:02:58.670 --> 03:02:58.680 align:start position:0%
step do we want to actually do the
 

03:02:58.680 --> 03:03:02.190 align:start position:0%
step do we want to actually do the
alberu<03:02:59.680><c> uh</c><03:02:59.800><c> to</c><03:03:00.080><c> average</c><03:03:00.399><c> up</c><03:03:00.560><c> the</c><03:03:00.640><c> gradients</c><03:03:01.600><c> so</c>

03:03:02.190 --> 03:03:02.200 align:start position:0%
alberu uh to average up the gradients so
 

03:03:02.200 --> 03:03:05.110 align:start position:0%
alberu uh to average up the gradients so
to<03:03:02.399><c> do</c><03:03:02.640><c> that</c><03:03:02.960><c> we</c><03:03:03.120><c> come</c><03:03:03.399><c> here</c><03:03:04.200><c> and</c><03:03:04.760><c> um</c><03:03:04.960><c> the</c>

03:03:05.110 --> 03:03:05.120 align:start position:0%
to do that we come here and um the
 

03:03:05.120 --> 03:03:06.990 align:start position:0%
to do that we come here and um the
official<03:03:05.479><c> sanctioned</c><03:03:05.960><c> way</c><03:03:06.200><c> by</c><03:03:06.279><c> the</c><03:03:06.399><c> way</c><03:03:06.680><c> is</c><03:03:06.800><c> to</c>

03:03:06.990 --> 03:03:07.000 align:start position:0%
official sanctioned way by the way is to
 

03:03:07.000 --> 03:03:10.469 align:start position:0%
official sanctioned way by the way is to
do<03:03:07.800><c> this</c><03:03:08.040><c> no</c><03:03:08.319><c> sync</c><03:03:08.800><c> context</c><03:03:09.239><c> manager</c><03:03:10.239><c> so</c>

03:03:10.469 --> 03:03:10.479 align:start position:0%
do this no sync context manager so
 

03:03:10.479 --> 03:03:12.990 align:start position:0%
do this no sync context manager so
pytorch<03:03:10.960><c> says</c><03:03:11.920><c> this</c><03:03:12.040><c> is</c><03:03:12.120><c> a</c><03:03:12.359><c> context</c><03:03:12.680><c> manager</c>

03:03:12.990 --> 03:03:13.000 align:start position:0%
pytorch says this is a context manager
 

03:03:13.000 --> 03:03:14.469 align:start position:0%
pytorch says this is a context manager
to<03:03:13.120><c> disable</c><03:03:13.520><c> gradient</c><03:03:13.880><c> synchronization</c>

03:03:14.469 --> 03:03:14.479 align:start position:0%
to disable gradient synchronization
 

03:03:14.479 --> 03:03:16.990 align:start position:0%
to disable gradient synchronization
across<03:03:14.760><c> DDP</c><03:03:15.359><c> processes</c><03:03:16.359><c> So</c><03:03:16.560><c> within</c><03:03:16.840><c> this</c>

03:03:16.990 --> 03:03:17.000 align:start position:0%
across DDP processes So within this
 

03:03:17.000 --> 03:03:19.190 align:start position:0%
across DDP processes So within this
context<03:03:17.399><c> gradient</c><03:03:17.880><c> will</c><03:03:18.040><c> be</c>

03:03:19.190 --> 03:03:19.200 align:start position:0%
context gradient will be
 

03:03:19.200 --> 03:03:21.910 align:start position:0%
context gradient will be
accumulated<03:03:20.200><c> and</c><03:03:20.560><c> basically</c><03:03:21.279><c> when</c><03:03:21.399><c> you</c><03:03:21.520><c> do</c><03:03:21.680><c> no</c>

03:03:21.910 --> 03:03:21.920 align:start position:0%
accumulated and basically when you do no
 

03:03:21.920 --> 03:03:24.070 align:start position:0%
accumulated and basically when you do no
sync<03:03:22.239><c> there</c><03:03:22.359><c> will</c><03:03:22.479><c> be</c><03:03:22.640><c> no</c><03:03:22.920><c> communication</c><03:03:23.840><c> so</c>

03:03:24.070 --> 03:03:24.080 align:start position:0%
sync there will be no communication so
 

03:03:24.080 --> 03:03:26.269 align:start position:0%
sync there will be no communication so
they<03:03:24.200><c> are</c><03:03:24.359><c> telling</c><03:03:24.640><c> us</c><03:03:24.800><c> to</c><03:03:24.960><c> do</c><03:03:25.319><c> with</c><03:03:25.520><c> DDP</c><03:03:25.920><c> no</c>

03:03:26.269 --> 03:03:26.279 align:start position:0%
they are telling us to do with DDP no
 

03:03:26.279 --> 03:03:29.030 align:start position:0%
they are telling us to do with DDP no
sync<03:03:27.279><c> uh</c><03:03:27.399><c> do</c><03:03:27.560><c> the</c><03:03:27.680><c> gradient</c><03:03:28.040><c> accumulation</c>

03:03:29.030 --> 03:03:29.040 align:start position:0%
sync uh do the gradient accumulation
 

03:03:29.040 --> 03:03:30.670 align:start position:0%
sync uh do the gradient accumulation
accumulate<03:03:29.479><c> grats</c><03:03:30.200><c> and</c><03:03:30.319><c> then</c><03:03:30.439><c> they</c><03:03:30.520><c> are</c>

03:03:30.670 --> 03:03:30.680 align:start position:0%
accumulate grats and then they are
 

03:03:30.680 --> 03:03:32.950 align:start position:0%
accumulate grats and then they are
asking<03:03:30.920><c> us</c><03:03:31.040><c> to</c><03:03:31.160><c> do</c><03:03:31.279><c> DDP</c><03:03:31.800><c> again</c><03:03:32.160><c> with</c><03:03:32.640><c> another</c>

03:03:32.950 --> 03:03:32.960 align:start position:0%
asking us to do DDP again with another
 

03:03:32.960 --> 03:03:35.349 align:start position:0%
asking us to do DDP again with another
input<03:03:33.279><c> and</c><03:03:33.439><c> that</c><03:03:33.640><c> backward</c><03:03:34.520><c> and</c><03:03:34.720><c> I</c><03:03:34.880><c> just</c>

03:03:35.349 --> 03:03:35.359 align:start position:0%
input and that backward and I just
 

03:03:35.359 --> 03:03:37.550 align:start position:0%
input and that backward and I just
really<03:03:35.600><c> don't</c><03:03:35.920><c> love</c><03:03:36.200><c> this</c><03:03:36.880><c> I</c><03:03:37.000><c> I</c><03:03:37.160><c> just</c><03:03:37.359><c> really</c>

03:03:37.550 --> 03:03:37.560 align:start position:0%
really don't love this I I just really
 

03:03:37.560 --> 03:03:39.110 align:start position:0%
really don't love this I I just really
don't<03:03:37.800><c> like</c><03:03:37.960><c> it</c><03:03:38.399><c> uh</c><03:03:38.560><c> the</c><03:03:38.680><c> fact</c><03:03:38.840><c> that</c><03:03:38.920><c> you</c><03:03:39.040><c> have</c>

03:03:39.110 --> 03:03:39.120 align:start position:0%
don't like it uh the fact that you have
 

03:03:39.120 --> 03:03:40.910 align:start position:0%
don't like it uh the fact that you have
to<03:03:39.439><c> copy</c><03:03:39.720><c> paste</c><03:03:39.920><c> your</c><03:03:40.080><c> code</c><03:03:40.319><c> here</c><03:03:40.479><c> and</c><03:03:40.600><c> use</c><03:03:40.760><c> a</c>

03:03:40.910 --> 03:03:40.920 align:start position:0%
to copy paste your code here and use a
 

03:03:40.920 --> 03:03:42.670 align:start position:0%
to copy paste your code here and use a
context<03:03:41.279><c> manager</c><03:03:41.600><c> and</c><03:03:42.040><c> this</c><03:03:42.160><c> is</c><03:03:42.279><c> just</c><03:03:42.439><c> super</c>

03:03:42.670 --> 03:03:42.680 align:start position:0%
context manager and this is just super
 

03:03:42.680 --> 03:03:45.269 align:start position:0%
context manager and this is just super
ugly<03:03:43.359><c> so</c><03:03:43.520><c> when</c><03:03:43.640><c> I</c><03:03:43.720><c> went</c><03:03:43.840><c> to</c><03:03:43.960><c> this</c><03:03:44.080><c> source</c><03:03:44.359><c> code</c>

03:03:45.269 --> 03:03:45.279 align:start position:0%
ugly so when I went to this source code
 

03:03:45.279 --> 03:03:48.429 align:start position:0%
ugly so when I went to this source code
here<03:03:46.279><c> you</c><03:03:46.399><c> can</c><03:03:46.560><c> see</c><03:03:46.800><c> that</c><03:03:47.080><c> when</c><03:03:47.200><c> you</c><03:03:47.319><c> enter</c>

03:03:48.429 --> 03:03:48.439 align:start position:0%
here you can see that when you enter
 

03:03:48.439 --> 03:03:51.429 align:start position:0%
here you can see that when you enter
you<03:03:48.800><c> simply</c><03:03:49.279><c> toggle</c><03:03:49.880><c> this</c><03:03:50.080><c> variable</c><03:03:51.000><c> this</c>

03:03:51.429 --> 03:03:51.439 align:start position:0%
you simply toggle this variable this
 

03:03:51.439 --> 03:03:54.710 align:start position:0%
you simply toggle this variable this
require<03:03:52.000><c> backward</c><03:03:52.399><c> grat</c><03:03:52.720><c> sync</c><03:03:53.720><c> and</c><03:03:53.960><c> this</c><03:03:54.080><c> is</c>

03:03:54.710 --> 03:03:54.720 align:start position:0%
require backward grat sync and this is
 

03:03:54.720 --> 03:03:58.030 align:start position:0%
require backward grat sync and this is
uh<03:03:55.239><c> being</c><03:03:55.600><c> toggled</c><03:03:56.200><c> around</c><03:03:56.840><c> and</c><03:03:57.040><c> changed</c><03:03:57.880><c> and</c>

03:03:58.030 --> 03:03:58.040 align:start position:0%
uh being toggled around and changed and
 

03:03:58.040 --> 03:04:01.070 align:start position:0%
uh being toggled around and changed and
this<03:03:58.120><c> is</c><03:03:58.319><c> the</c><03:03:58.680><c> variable</c><03:03:59.560><c> that</c><03:03:59.880><c> basically</c><03:04:00.880><c> uh</c>

03:04:01.070 --> 03:04:01.080 align:start position:0%
this is the variable that basically uh
 

03:04:01.080 --> 03:04:03.229 align:start position:0%
this is the variable that basically uh
if<03:04:01.160><c> you</c><03:04:01.319><c> step</c><03:04:01.600><c> through</c><03:04:01.800><c> it</c><03:04:02.239><c> is</c><03:04:02.439><c> being</c><03:04:02.760><c> toggled</c>

03:04:03.229 --> 03:04:03.239 align:start position:0%
if you step through it is being toggled
 

03:04:03.239 --> 03:04:05.429 align:start position:0%
if you step through it is being toggled
to<03:04:03.399><c> determine</c><03:04:04.239><c> if</c><03:04:04.439><c> the</c><03:04:04.640><c> gradient</c><03:04:05.120><c> is</c><03:04:05.279><c> going</c><03:04:05.359><c> to</c>

03:04:05.429 --> 03:04:05.439 align:start position:0%
to determine if the gradient is going to
 

03:04:05.439 --> 03:04:07.790 align:start position:0%
to determine if the gradient is going to
be<03:04:05.560><c> synchronized</c><03:04:06.520><c> so</c><03:04:07.040><c> I</c><03:04:07.239><c> actually</c><03:04:07.520><c> just</c><03:04:07.680><c> kind</c>

03:04:07.790 --> 03:04:07.800 align:start position:0%
be synchronized so I actually just kind
 

03:04:07.800 --> 03:04:10.469 align:start position:0%
be synchronized so I actually just kind
of<03:04:07.960><c> like</c><03:04:08.120><c> to</c><03:04:08.279><c> use</c><03:04:08.479><c> that</c><03:04:08.880><c> directly</c><03:04:09.880><c> uh</c><03:04:10.080><c> so</c>

03:04:10.469 --> 03:04:10.479 align:start position:0%
of like to use that directly uh so
 

03:04:10.479 --> 03:04:13.429 align:start position:0%
of like to use that directly uh so
instead<03:04:10.840><c> what</c><03:04:10.960><c> I</c><03:04:11.080><c> like</c><03:04:11.239><c> to</c><03:04:11.359><c> do</c><03:04:11.640><c> is</c><03:04:11.880><c> the</c>

03:04:13.429 --> 03:04:13.439 align:start position:0%
instead what I like to do is the
 

03:04:13.439 --> 03:04:15.830 align:start position:0%
instead what I like to do is the
following<03:04:14.439><c> right</c><03:04:14.800><c> here</c><03:04:15.040><c> before</c><03:04:15.239><c> the</c><03:04:15.359><c> L</c><03:04:15.600><c> back</c>

03:04:15.830 --> 03:04:15.840 align:start position:0%
following right here before the L back
 

03:04:15.840 --> 03:04:20.670 align:start position:0%
following right here before the L back
backward<03:04:16.560><c> if</c><03:04:17.080><c> we</c><03:04:17.200><c> are</c><03:04:17.319><c> using</c><03:04:17.560><c> the</c><03:04:18.080><c> DDP</c><03:04:19.080><c> then</c><03:04:19.840><c> um</c>

03:04:20.670 --> 03:04:20.680 align:start position:0%
backward if we are using the DDP then um
 

03:04:20.680 --> 03:04:22.990 align:start position:0%
backward if we are using the DDP then um
then<03:04:20.880><c> basically</c><03:04:21.279><c> we</c><03:04:21.479><c> only</c><03:04:21.800><c> want</c><03:04:22.439><c> to</c>

03:04:22.990 --> 03:04:23.000 align:start position:0%
then basically we only want to
 

03:04:23.000 --> 03:04:25.269 align:start position:0%
then basically we only want to
synchronize<03:04:24.000><c> we</c><03:04:24.239><c> only</c><03:04:24.479><c> want</c><03:04:24.800><c> this</c><03:04:24.960><c> variable</c>

03:04:25.269 --> 03:04:25.279 align:start position:0%
synchronize we only want this variable
 

03:04:25.279 --> 03:04:28.870 align:start position:0%
synchronize we only want this variable
to<03:04:25.399><c> be</c><03:04:25.920><c> true</c><03:04:27.000><c> when</c><03:04:28.000><c> it</c><03:04:28.120><c> is</c><03:04:28.319><c> the</c><03:04:28.560><c> final</c>

03:04:28.870 --> 03:04:28.880 align:start position:0%
to be true when it is the final
 

03:04:28.880 --> 03:04:31.590 align:start position:0%
to be true when it is the final
iteration<03:04:29.680><c> in</c><03:04:29.880><c> all</c><03:04:30.000><c> the</c><03:04:30.120><c> other</c><03:04:30.600><c> iterations</c>

03:04:31.590 --> 03:04:31.600 align:start position:0%
iteration in all the other iterations
 

03:04:31.600 --> 03:04:33.229 align:start position:0%
iteration in all the other iterations
inside<03:04:31.880><c> the</c><03:04:32.040><c> micr</c><03:04:32.359><c> steps</c><03:04:32.680><c> we</c><03:04:32.800><c> want</c><03:04:33.000><c> to</c><03:04:33.080><c> be</c>

03:04:33.229 --> 03:04:33.239 align:start position:0%
inside the micr steps we want to be
 

03:04:33.239 --> 03:04:36.469 align:start position:0%
inside the micr steps we want to be
false<03:04:34.040><c> so</c><03:04:34.239><c> I</c><03:04:34.359><c> just</c><03:04:34.880><c> toggle</c><03:04:35.279><c> it</c><03:04:35.439><c> like</c><03:04:35.640><c> this</c><03:04:36.279><c> so</c>

03:04:36.469 --> 03:04:36.479 align:start position:0%
false so I just toggle it like this so
 

03:04:36.479 --> 03:04:38.510 align:start position:0%
false so I just toggle it like this so
required<03:04:36.840><c> backward</c><03:04:37.160><c> graph</c><03:04:37.439><c> sync</c><03:04:38.040><c> should</c><03:04:38.319><c> only</c>

03:04:38.510 --> 03:04:38.520 align:start position:0%
required backward graph sync should only
 

03:04:38.520 --> 03:04:41.150 align:start position:0%
required backward graph sync should only
turn<03:04:38.760><c> on</c><03:04:39.080><c> when</c><03:04:39.239><c> the</c><03:04:39.359><c> micro</c><03:04:39.720><c> step</c><03:04:39.960><c> is</c><03:04:40.080><c> the</c><03:04:40.239><c> last</c>

03:04:41.150 --> 03:04:41.160 align:start position:0%
turn on when the micro step is the last
 

03:04:41.160 --> 03:04:44.269 align:start position:0%
turn on when the micro step is the last
step<03:04:42.160><c> and</c><03:04:42.359><c> so</c><03:04:43.000><c> I'm</c><03:04:43.160><c> toggling</c><03:04:43.680><c> this</c><03:04:43.840><c> variable</c>

03:04:44.269 --> 03:04:44.279 align:start position:0%
step and so I'm toggling this variable
 

03:04:44.279 --> 03:04:46.990 align:start position:0%
step and so I'm toggling this variable
directly<03:04:45.279><c> and</c><03:04:45.640><c> I</c><03:04:45.800><c> hope</c><03:04:46.200><c> that</c><03:04:46.399><c> that</c><03:04:46.560><c> impacts</c>

03:04:46.990 --> 03:04:47.000 align:start position:0%
directly and I hope that that impacts
 

03:04:47.000 --> 03:04:48.309 align:start position:0%
directly and I hope that that impacts
last<03:04:47.239><c> St</c><03:04:47.359><c> backwards</c>

03:04:48.309 --> 03:04:48.319 align:start position:0%
last St backwards
 

03:04:48.319 --> 03:04:49.910 align:start position:0%
last St backwards
and<03:04:48.520><c> this</c><03:04:48.640><c> is</c><03:04:48.800><c> a</c><03:04:48.960><c> naughty</c><03:04:49.319><c> thing</c><03:04:49.439><c> to</c><03:04:49.640><c> do</c>

03:04:49.910 --> 03:04:49.920 align:start position:0%
and this is a naughty thing to do
 

03:04:49.920 --> 03:04:51.110 align:start position:0%
and this is a naughty thing to do
because<03:04:50.239><c> you</c><03:04:50.319><c> know</c><03:04:50.520><c> they</c><03:04:50.640><c> could</c><03:04:50.880><c> probably</c>

03:04:51.110 --> 03:04:51.120 align:start position:0%
because you know they could probably
 

03:04:51.120 --> 03:04:53.070 align:start position:0%
because you know they could probably
change<03:04:51.359><c> the</c><03:04:51.479><c> DDP</c><03:04:52.040><c> and</c><03:04:52.239><c> this</c><03:04:52.399><c> variable</c><03:04:52.720><c> will</c><03:04:52.920><c> go</c>

03:04:53.070 --> 03:04:53.080 align:start position:0%
change the DDP and this variable will go
 

03:04:53.080 --> 03:04:54.990 align:start position:0%
change the DDP and this variable will go
away<03:04:53.600><c> but</c><03:04:53.720><c> for</c><03:04:53.920><c> now</c><03:04:54.120><c> I</c><03:04:54.239><c> believe</c><03:04:54.560><c> this</c><03:04:54.840><c> this</c>

03:04:54.990 --> 03:04:55.000 align:start position:0%
away but for now I believe this this
 

03:04:55.000 --> 03:04:57.790 align:start position:0%
away but for now I believe this this
works<03:04:55.920><c> and</c><03:04:56.040><c> it</c><03:04:56.520><c> allows</c><03:04:56.800><c> me</c><03:04:56.960><c> to</c><03:04:57.319><c> avoid</c><03:04:57.600><c> the</c><03:04:57.680><c> use</c>

03:04:57.790 --> 03:04:57.800 align:start position:0%
works and it allows me to avoid the use
 

03:04:57.800 --> 03:04:59.990 align:start position:0%
works and it allows me to avoid the use
of<03:04:57.960><c> context</c><03:04:58.239><c> managers</c><03:04:58.600><c> and</c><03:04:58.760><c> code</c><03:04:59.000><c> duplication</c>

03:04:59.990 --> 03:05:00.000 align:start position:0%
of context managers and code duplication
 

03:05:00.000 --> 03:05:01.550 align:start position:0%
of context managers and code duplication
I'm<03:05:00.120><c> just</c><03:05:00.319><c> toggling</c><03:05:00.760><c> the</c><03:05:00.880><c> variable</c><03:05:01.319><c> and</c><03:05:01.439><c> then</c>

03:05:01.550 --> 03:05:01.560 align:start position:0%
I'm just toggling the variable and then
 

03:05:01.560 --> 03:05:03.309 align:start position:0%
I'm just toggling the variable and then
Lop<03:05:01.960><c> backward</c><03:05:02.319><c> will</c><03:05:02.439><c> not</c><03:05:02.640><c> synchronize</c><03:05:03.160><c> most</c>

03:05:03.309 --> 03:05:03.319 align:start position:0%
Lop backward will not synchronize most
 

03:05:03.319 --> 03:05:04.910 align:start position:0%
Lop backward will not synchronize most
of<03:05:03.399><c> the</c><03:05:03.520><c> steps</c><03:05:03.960><c> and</c><03:05:04.080><c> it</c><03:05:04.160><c> will</c><03:05:04.319><c> synchronize</c><03:05:04.800><c> the</c>

03:05:04.910 --> 03:05:04.920 align:start position:0%
of the steps and it will synchronize the
 

03:05:04.920 --> 03:05:08.429 align:start position:0%
of the steps and it will synchronize the
very<03:05:05.120><c> last</c><03:05:05.319><c> step</c><03:05:05.920><c> and</c><03:05:06.000><c> so</c><03:05:06.279><c> once</c><03:05:06.640><c> this</c><03:05:06.800><c> is</c><03:05:07.439><c> over</c>

03:05:08.429 --> 03:05:08.439 align:start position:0%
very last step and so once this is over
 

03:05:08.439 --> 03:05:13.429 align:start position:0%
very last step and so once this is over
uh<03:05:08.600><c> and</c><03:05:08.720><c> we</c><03:05:08.880><c> come</c><03:05:09.080><c> out</c><03:05:10.080><c> every</c><03:05:10.479><c> single</c><03:05:11.720><c> um</c><03:05:12.720><c> rank</c>

03:05:13.429 --> 03:05:13.439 align:start position:0%
uh and we come out every single um rank
 

03:05:13.439 --> 03:05:17.190 align:start position:0%
uh and we come out every single um rank
will<03:05:13.840><c> suddenly</c><03:05:14.399><c> magically</c><03:05:15.319><c> have</c><03:05:15.560><c> the</c><03:05:16.200><c> average</c>

03:05:17.190 --> 03:05:17.200 align:start position:0%
will suddenly magically have the average
 

03:05:17.200 --> 03:05:20.309 align:start position:0%
will suddenly magically have the average
of<03:05:17.399><c> all</c><03:05:17.960><c> the</c><03:05:18.760><c> gradients</c><03:05:19.600><c> that</c><03:05:19.720><c> were</c><03:05:19.920><c> stored</c><03:05:20.200><c> on</c>

03:05:20.309 --> 03:05:20.319 align:start position:0%
of all the gradients that were stored on
 

03:05:20.319 --> 03:05:22.469 align:start position:0%
of all the gradients that were stored on
all<03:05:20.439><c> the</c><03:05:20.640><c> ranks</c><03:05:21.640><c> so</c><03:05:21.800><c> now</c><03:05:21.960><c> we</c><03:05:22.080><c> have</c><03:05:22.160><c> to</c><03:05:22.279><c> think</c>

03:05:22.469 --> 03:05:22.479 align:start position:0%
all the ranks so now we have to think
 

03:05:22.479 --> 03:05:24.309 align:start position:0%
all the ranks so now we have to think
through<03:05:22.720><c> whether</c><03:05:22.960><c> that</c><03:05:23.080><c> is</c><03:05:23.200><c> what</c><03:05:23.319><c> we</c><03:05:23.479><c> want</c><03:05:24.120><c> and</c>

03:05:24.309 --> 03:05:24.319 align:start position:0%
through whether that is what we want and
 

03:05:24.319 --> 03:05:29.110 align:start position:0%
through whether that is what we want and
also<03:05:25.120><c> um</c><03:05:25.880><c> if</c><03:05:26.200><c> this</c><03:05:26.399><c> suffices</c><03:05:27.279><c> and</c><03:05:28.000><c> whether</c><03:05:29.000><c> how</c>

03:05:29.110 --> 03:05:29.120 align:start position:0%
also um if this suffices and whether how
 

03:05:29.120 --> 03:05:31.070 align:start position:0%
also um if this suffices and whether how
it<03:05:29.239><c> works</c><03:05:29.479><c> with</c><03:05:29.600><c> the</c><03:05:29.720><c> loss</c><03:05:30.319><c> and</c><03:05:30.520><c> what</c><03:05:30.640><c> is</c><03:05:30.800><c> loss</c>

03:05:31.070 --> 03:05:31.080 align:start position:0%
it works with the loss and what is loss
 

03:05:31.080 --> 03:05:32.990 align:start position:0%
it works with the loss and what is loss
AUM<03:05:31.640><c> so</c><03:05:31.800><c> let's</c><03:05:31.960><c> think</c><03:05:32.120><c> through</c><03:05:32.640><c> through</c><03:05:32.840><c> that</c>

03:05:32.990 --> 03:05:33.000 align:start position:0%
AUM so let's think through through that
 

03:05:33.000 --> 03:05:35.429 align:start position:0%
AUM so let's think through through that
now<03:05:33.640><c> and</c><03:05:34.040><c> the</c><03:05:34.200><c> problem</c><03:05:34.439><c> I'm</c><03:05:34.600><c> getting</c><03:05:34.840><c> at</c><03:05:35.160><c> is</c>

03:05:35.429 --> 03:05:35.439 align:start position:0%
now and the problem I'm getting at is
 

03:05:35.439 --> 03:05:37.550 align:start position:0%
now and the problem I'm getting at is
that<03:05:36.359><c> we've</c><03:05:36.600><c> averaged</c><03:05:36.920><c> the</c><03:05:37.000><c> gradients</c><03:05:37.479><c> which</c>

03:05:37.550 --> 03:05:37.560 align:start position:0%
that we've averaged the gradients which
 

03:05:37.560 --> 03:05:40.269 align:start position:0%
that we've averaged the gradients which
is<03:05:37.720><c> great</c><03:05:38.359><c> but</c><03:05:38.640><c> the</c><03:05:38.760><c> loss</c><03:05:39.080><c> AUM</c><03:05:39.680><c> has</c><03:05:39.800><c> not</c><03:05:40.000><c> been</c>

03:05:40.269 --> 03:05:40.279 align:start position:0%
is great but the loss AUM has not been
 

03:05:40.279 --> 03:05:43.269 align:start position:0%
is great but the loss AUM has not been
impacted<03:05:40.840><c> yet</c><03:05:41.399><c> and</c><03:05:41.960><c> the</c><03:05:42.520><c> and</c><03:05:42.640><c> this</c><03:05:42.760><c> is</c><03:05:42.960><c> outside</c>

03:05:43.269 --> 03:05:43.279 align:start position:0%
impacted yet and the and this is outside
 

03:05:43.279 --> 03:05:45.229 align:start position:0%
impacted yet and the and this is outside
of<03:05:43.399><c> the</c><03:05:43.520><c> DDP</c><03:05:43.960><c> container</c><03:05:44.640><c> so</c><03:05:44.840><c> that</c><03:05:44.920><c> is</c><03:05:45.080><c> not</c>

03:05:45.229 --> 03:05:45.239 align:start position:0%
of the DDP container so that is not
 

03:05:45.239 --> 03:05:47.710 align:start position:0%
of the DDP container so that is not
being<03:05:45.520><c> averaged</c><03:05:46.319><c> um</c><03:05:46.920><c> and</c><03:05:47.040><c> so</c><03:05:47.279><c> here</c><03:05:47.439><c> when</c><03:05:47.640><c> when</c>

03:05:47.710 --> 03:05:47.720 align:start position:0%
being averaged um and so here when when
 

03:05:47.720 --> 03:05:49.750 align:start position:0%
being averaged um and so here when when
we<03:05:47.800><c> are</c><03:05:47.880><c> printing</c><03:05:48.160><c> Los</c><03:05:48.439><c> AUM</c><03:05:49.200><c> well</c><03:05:49.359><c> presumably</c>

03:05:49.750 --> 03:05:49.760 align:start position:0%
we are printing Los AUM well presumably
 

03:05:49.760 --> 03:05:51.429 align:start position:0%
we are printing Los AUM well presumably
we're<03:05:49.920><c> only</c><03:05:50.080><c> going</c><03:05:50.160><c> to</c><03:05:50.279><c> be</c><03:05:50.399><c> printing</c><03:05:50.800><c> on</c><03:05:51.319><c> the</c>

03:05:51.429 --> 03:05:51.439 align:start position:0%
we're only going to be printing on the
 

03:05:51.439 --> 03:05:53.710 align:start position:0%
we're only going to be printing on the
master<03:05:51.880><c> process</c><03:05:52.399><c> uh</c><03:05:52.520><c> rank</c><03:05:52.800><c> zero</c><03:05:53.439><c> and</c><03:05:53.560><c> it's</c>

03:05:53.710 --> 03:05:53.720 align:start position:0%
master process uh rank zero and it's
 

03:05:53.720 --> 03:05:55.070 align:start position:0%
master process uh rank zero and it's
just<03:05:53.840><c> going</c><03:05:53.920><c> to</c><03:05:54.040><c> be</c><03:05:54.160><c> printing</c><03:05:54.479><c> the</c><03:05:54.640><c> losses</c>

03:05:55.070 --> 03:05:55.080 align:start position:0%
just going to be printing the losses
 

03:05:55.080 --> 03:05:57.790 align:start position:0%
just going to be printing the losses
that<03:05:55.239><c> it</c><03:05:55.439><c> saw</c><03:05:55.800><c> on</c><03:05:56.000><c> its</c><03:05:56.279><c> process</c><03:05:57.279><c> but</c><03:05:57.439><c> instead</c>

03:05:57.790 --> 03:05:57.800 align:start position:0%
that it saw on its process but instead
 

03:05:57.800 --> 03:06:00.110 align:start position:0%
that it saw on its process but instead
we<03:05:57.920><c> want</c><03:05:58.160><c> it</c><03:05:58.319><c> to</c><03:05:58.560><c> print</c><03:05:58.960><c> the</c><03:05:59.160><c> loss</c><03:05:59.640><c> over</c><03:05:59.920><c> all</c>

03:06:00.110 --> 03:06:00.120 align:start position:0%
we want it to print the loss over all
 

03:06:00.120 --> 03:06:02.030 align:start position:0%
we want it to print the loss over all
the<03:06:00.279><c> processes</c><03:06:00.880><c> and</c><03:06:01.040><c> the</c><03:06:01.239><c> average</c><03:06:01.680><c> of</c><03:06:01.880><c> that</c>

03:06:02.030 --> 03:06:02.040 align:start position:0%
the processes and the average of that
 

03:06:02.040 --> 03:06:04.190 align:start position:0%
the processes and the average of that
loss<03:06:02.920><c> because</c><03:06:03.080><c> we</c><03:06:03.200><c> did</c><03:06:03.439><c> average</c><03:06:03.680><c> of</c><03:06:03.800><c> gradients</c>

03:06:04.190 --> 03:06:04.200 align:start position:0%
loss because we did average of gradients
 

03:06:04.200 --> 03:06:06.389 align:start position:0%
loss because we did average of gradients
so<03:06:04.359><c> we</c><03:06:04.439><c> want</c><03:06:04.640><c> the</c><03:06:04.800><c> average</c><03:06:05.040><c> of</c><03:06:05.200><c> loss</c><03:06:05.520><c> as</c><03:06:05.640><c> well</c>

03:06:06.389 --> 03:06:06.399 align:start position:0%
so we want the average of loss as well
 

03:06:06.399 --> 03:06:09.670 align:start position:0%
so we want the average of loss as well
so<03:06:06.600><c> simply</c><03:06:07.040><c> here</c><03:06:07.359><c> after</c><03:06:08.239><c> this</c><03:06:09.160><c> uh</c><03:06:09.279><c> this</c><03:06:09.399><c> is</c><03:06:09.560><c> the</c>

03:06:09.670 --> 03:06:09.680 align:start position:0%
so simply here after this uh this is the
 

03:06:09.680 --> 03:06:13.110 align:start position:0%
so simply here after this uh this is the
code<03:06:10.000><c> that</c><03:06:10.279><c> I've</c><03:06:10.439><c> used</c><03:06:10.680><c> in</c><03:06:10.800><c> the</c><03:06:11.439><c> past</c><03:06:12.439><c> um</c><03:06:12.960><c> and</c>

03:06:13.110 --> 03:06:13.120 align:start position:0%
code that I've used in the past um and
 

03:06:13.120 --> 03:06:15.830 align:start position:0%
code that I've used in the past um and
instead<03:06:13.359><c> of</c><03:06:13.479><c> LF</c><03:06:14.000><c> we</c><03:06:14.120><c> want</c>

03:06:15.830 --> 03:06:15.840 align:start position:0%
instead of LF we want
 

03:06:15.840 --> 03:06:18.190 align:start position:0%
instead of LF we want
Lum<03:06:16.840><c> so</c><03:06:17.239><c> if</c>

03:06:18.190 --> 03:06:18.200 align:start position:0%
Lum so if
 

03:06:18.200 --> 03:06:21.990 align:start position:0%
Lum so if
DDP<03:06:19.200><c> again</c><03:06:20.080><c> then</c><03:06:20.439><c> this</c><03:06:20.880><c> is</c><03:06:21.040><c> a</c><03:06:21.319><c> p</c><03:06:21.520><c> torch</c>

03:06:21.990 --> 03:06:22.000 align:start position:0%
DDP again then this is a p torch
 

03:06:22.000 --> 03:06:24.910 align:start position:0%
DDP again then this is a p torch
distributed<03:06:23.000><c> I</c><03:06:23.160><c> import</c><03:06:23.520><c> it</c><03:06:24.520><c> where</c><03:06:24.680><c> do</c><03:06:24.800><c> I</c>

03:06:24.910 --> 03:06:24.920 align:start position:0%
distributed I import it where do I
 

03:06:24.920 --> 03:06:26.550 align:start position:0%
distributed I import it where do I
import

03:06:26.550 --> 03:06:26.560 align:start position:0%
import
 

03:06:26.560 --> 03:06:30.269 align:start position:0%
import
it<03:06:27.560><c> uh</c><03:06:27.800><c> oh</c><03:06:28.479><c> gosh</c><03:06:29.479><c> so</c><03:06:29.680><c> this</c><03:06:29.800><c> file</c><03:06:29.960><c> is</c><03:06:30.040><c> starting</c>

03:06:30.269 --> 03:06:30.279 align:start position:0%
it uh oh gosh so this file is starting
 

03:06:30.279 --> 03:06:33.550 align:start position:0%
it uh oh gosh so this file is starting
to<03:06:30.399><c> get</c><03:06:30.560><c> out</c><03:06:30.680><c> of</c><03:06:30.840><c> control</c><03:06:31.279><c> huh</c><03:06:32.239><c> so</c><03:06:32.600><c> if</c><03:06:33.120><c> uh</c><03:06:33.279><c> so</c>

03:06:33.550 --> 03:06:33.560 align:start position:0%
to get out of control huh so if uh so
 

03:06:33.560 --> 03:06:36.309 align:start position:0%
to get out of control huh so if uh so
import<03:06:33.800><c> torch.</c><03:06:34.200><c> distributed</c><03:06:34.680><c> as</c><03:06:34.840><c> dist</c>

03:06:36.309 --> 03:06:36.319 align:start position:0%
import torch. distributed as dist
 

03:06:36.319 --> 03:06:38.469 align:start position:0%
import torch. distributed as dist
so<03:06:37.319><c> dist.</c>

03:06:38.469 --> 03:06:38.479 align:start position:0%
so dist.
 

03:06:38.479 --> 03:06:42.070 align:start position:0%
so dist.
ALU<03:06:39.479><c> and</c><03:06:39.600><c> we're</c><03:06:39.760><c> doing</c><03:06:40.000><c> the</c><03:06:40.200><c> average</c><03:06:40.720><c> on</c><03:06:41.080><c> Lum</c>

03:06:42.070 --> 03:06:42.080 align:start position:0%
ALU and we're doing the average on Lum
 

03:06:42.080 --> 03:06:44.429 align:start position:0%
ALU and we're doing the average on Lum
and<03:06:42.160><c> so</c><03:06:42.319><c> this</c><03:06:42.479><c> lakum</c><03:06:43.000><c> tensor</c><03:06:43.840><c> exists</c><03:06:44.160><c> on</c><03:06:44.279><c> all</c>

03:06:44.429 --> 03:06:44.439 align:start position:0%
and so this lakum tensor exists on all
 

03:06:44.439 --> 03:06:46.510 align:start position:0%
and so this lakum tensor exists on all
the<03:06:44.560><c> ranks</c><03:06:45.279><c> when</c><03:06:45.399><c> we</c><03:06:45.560><c> call</c><03:06:45.760><c> all</c><03:06:46.120><c> use</c><03:06:46.319><c> of</c>

03:06:46.510 --> 03:06:46.520 align:start position:0%
the ranks when we call all use of
 

03:06:46.520 --> 03:06:48.750 align:start position:0%
the ranks when we call all use of
average<03:06:47.040><c> it</c><03:06:47.200><c> creates</c><03:06:47.720><c> the</c><03:06:47.960><c> average</c><03:06:48.439><c> of</c><03:06:48.600><c> those</c>

03:06:48.750 --> 03:06:48.760 align:start position:0%
average it creates the average of those
 

03:06:48.760 --> 03:06:50.990 align:start position:0%
average it creates the average of those
numbers<03:06:49.359><c> and</c><03:06:49.439><c> it</c><03:06:49.640><c> deposits</c><03:06:50.200><c> that</c><03:06:50.399><c> average</c><03:06:50.880><c> on</c>

03:06:50.990 --> 03:06:51.000 align:start position:0%
numbers and it deposits that average on
 

03:06:51.000 --> 03:06:53.590 align:start position:0%
numbers and it deposits that average on
all<03:06:51.239><c> the</c><03:06:51.359><c> ranks</c><03:06:52.120><c> so</c><03:06:52.319><c> all</c><03:06:52.520><c> the</c><03:06:52.680><c> ranks</c><03:06:53.239><c> after</c>

03:06:53.590 --> 03:06:53.600 align:start position:0%
all the ranks so all the ranks after
 

03:06:53.600 --> 03:06:57.950 align:start position:0%
all the ranks so all the ranks after
this<03:06:54.279><c> um</c><03:06:54.720><c> call</c><03:06:55.319><c> will</c><03:06:55.560><c> now</c><03:06:55.800><c> contain</c><03:06:56.160><c> L</c><03:06:56.720><c> AUM</c><03:06:57.720><c> uh</c>

03:06:57.950 --> 03:06:57.960 align:start position:0%
this um call will now contain L AUM uh
 

03:06:57.960 --> 03:07:00.070 align:start position:0%
this um call will now contain L AUM uh
averaged<03:06:58.399><c> up</c><03:06:59.040><c> and</c><03:06:59.160><c> so</c><03:06:59.319><c> when</c><03:06:59.399><c> we</c><03:06:59.560><c> print</c><03:06:59.840><c> here</c><03:06:59.960><c> on</c>

03:07:00.070 --> 03:07:00.080 align:start position:0%
averaged up and so when we print here on
 

03:07:00.080 --> 03:07:01.990 align:start position:0%
averaged up and so when we print here on
the<03:07:00.200><c> master</c><03:07:00.600><c> process</c><03:07:01.279><c> the</c><03:07:01.399><c> L</c><03:07:01.600><c> AUM</c><03:07:01.920><c> is</c>

03:07:01.990 --> 03:07:02.000 align:start position:0%
the master process the L AUM is
 

03:07:02.000 --> 03:07:03.990 align:start position:0%
the master process the L AUM is
identical<03:07:02.359><c> in</c><03:07:02.479><c> all</c><03:07:02.600><c> the</c><03:07:02.680><c> other</c><03:07:02.840><c> ranks</c><03:07:03.120><c> as</c><03:07:03.239><c> well</c>

03:07:03.990 --> 03:07:04.000 align:start position:0%
identical in all the other ranks as well
 

03:07:04.000 --> 03:07:07.389 align:start position:0%
identical in all the other ranks as well
so<03:07:04.319><c> here</c><03:07:04.800><c> if</c><03:07:05.120><c> Master</c><03:07:05.800><c> process</c>

03:07:07.389 --> 03:07:07.399 align:start position:0%
so here if Master process
 

03:07:07.399 --> 03:07:10.870 align:start position:0%
so here if Master process
oops<03:07:08.399><c> we</c><03:07:08.520><c> want</c><03:07:08.640><c> to</c><03:07:08.880><c> print</c><03:07:09.160><c> like</c><03:07:09.560><c> this</c><03:07:10.560><c> okay</c><03:07:10.720><c> and</c>

03:07:10.870 --> 03:07:10.880 align:start position:0%
oops we want to print like this okay and
 

03:07:10.880 --> 03:07:12.309 align:start position:0%
oops we want to print like this okay and
finally<03:07:11.239><c> we</c><03:07:11.359><c> have</c><03:07:11.439><c> to</c><03:07:11.600><c> be</c><03:07:11.720><c> careful</c><03:07:12.120><c> because</c>

03:07:12.309 --> 03:07:12.319 align:start position:0%
finally we have to be careful because
 

03:07:12.319 --> 03:07:15.590 align:start position:0%
finally we have to be careful because
we're<03:07:12.479><c> not</c><03:07:12.720><c> processing</c><03:07:13.640><c> even</c><03:07:13.920><c> more</c><03:07:14.160><c> tokens</c><03:07:15.040><c> so</c>

03:07:15.590 --> 03:07:15.600 align:start position:0%
we're not processing even more tokens so
 

03:07:15.600 --> 03:07:18.269 align:start position:0%
we're not processing even more tokens so
times<03:07:16.600><c> DDP</c><03:07:17.000><c> World</c><03:07:17.279><c> size</c>

03:07:18.269 --> 03:07:18.279 align:start position:0%
times DDP World size
 

03:07:18.279 --> 03:07:19.670 align:start position:0%
times DDP World size
that's<03:07:18.520><c> number</c><03:07:18.720><c> of</c><03:07:18.960><c> tokens</c><03:07:19.279><c> that</c><03:07:19.399><c> we've</c>

03:07:19.670 --> 03:07:19.680 align:start position:0%
that's number of tokens that we've
 

03:07:19.680 --> 03:07:21.510 align:start position:0%
that's number of tokens that we've
processed<03:07:20.239><c> up</c>

03:07:21.510 --> 03:07:21.520 align:start position:0%
processed up
 

03:07:21.520 --> 03:07:24.950 align:start position:0%
processed up
above

03:07:24.950 --> 03:07:24.960 align:start position:0%
 
 

03:07:24.960 --> 03:07:27.910 align:start position:0%
 
and<03:07:25.960><c> everything</c><03:07:26.239><c> else</c><03:07:26.399><c> should</c><03:07:26.560><c> be</c><03:07:26.800><c> fine</c><03:07:27.800><c> uh</c>

03:07:27.910 --> 03:07:27.920 align:start position:0%
and everything else should be fine uh
 

03:07:27.920 --> 03:07:29.229 align:start position:0%
and everything else should be fine uh
the<03:07:28.000><c> only</c><03:07:28.239><c> other</c><03:07:28.399><c> thing</c><03:07:28.520><c> to</c><03:07:28.640><c> be</c><03:07:28.760><c> careful</c><03:07:29.080><c> with</c>

03:07:29.229 --> 03:07:29.239 align:start position:0%
the only other thing to be careful with
 

03:07:29.239 --> 03:07:31.229 align:start position:0%
the only other thing to be careful with
is<03:07:29.359><c> as</c><03:07:29.439><c> I</c><03:07:29.600><c> mentioned</c><03:07:30.080><c> you</c><03:07:30.200><c> want</c><03:07:30.399><c> to</c><03:07:30.840><c> destroy</c>

03:07:31.229 --> 03:07:31.239 align:start position:0%
is as I mentioned you want to destroy
 

03:07:31.239 --> 03:07:33.070 align:start position:0%
is as I mentioned you want to destroy
the<03:07:31.399><c> process</c><03:07:31.760><c> group</c><03:07:32.239><c> so</c><03:07:32.399><c> that</c><03:07:32.520><c> we</c><03:07:32.600><c> are</c><03:07:32.760><c> nice</c><03:07:32.920><c> to</c>

03:07:33.070 --> 03:07:33.080 align:start position:0%
the process group so that we are nice to
 

03:07:33.080 --> 03:07:35.750 align:start position:0%
the process group so that we are nice to
nickel<03:07:33.479><c> and</c><03:07:33.600><c> it's</c><03:07:33.760><c> not</c><03:07:33.920><c> going</c><03:07:34.080><c> to</c><03:07:34.960><c> uh</c><03:07:35.080><c> to</c><03:07:35.479><c> uh</c><03:07:35.600><c> to</c>

03:07:35.750 --> 03:07:35.760 align:start position:0%
nickel and it's not going to uh to uh to
 

03:07:35.760 --> 03:07:38.389 align:start position:0%
nickel and it's not going to uh to uh to
DDP<03:07:36.239><c> and</c><03:07:36.359><c> it's</c><03:07:36.479><c> not</c><03:07:36.600><c> going</c><03:07:36.760><c> to</c><03:07:36.880><c> complain</c><03:07:37.359><c> to</c><03:07:37.600><c> us</c>

03:07:38.389 --> 03:07:38.399 align:start position:0%
DDP and it's not going to complain to us
 

03:07:38.399 --> 03:07:40.190 align:start position:0%
DDP and it's not going to complain to us
uh<03:07:38.520><c> when</c><03:07:38.720><c> we</c><03:07:39.040><c> exit</c>

03:07:40.190 --> 03:07:40.200 align:start position:0%
uh when we exit
 

03:07:40.200 --> 03:07:43.030 align:start position:0%
uh when we exit
here<03:07:41.200><c> so</c><03:07:41.960><c> that</c><03:07:42.080><c> should</c><03:07:42.279><c> be</c><03:07:42.439><c> it</c><03:07:42.640><c> let's</c><03:07:42.800><c> try</c><03:07:42.960><c> to</c>

03:07:43.030 --> 03:07:43.040 align:start position:0%
here so that should be it let's try to
 

03:07:43.040 --> 03:07:44.830 align:start position:0%
here so that should be it let's try to
take<03:07:43.160><c> it</c><03:07:43.279><c> for</c><03:07:43.399><c> a</c><03:07:43.520><c> spin</c><03:07:44.040><c> okay</c><03:07:44.160><c> so</c><03:07:44.279><c> I</c><03:07:44.399><c> launched</c>

03:07:44.830 --> 03:07:44.840 align:start position:0%
take it for a spin okay so I launched
 

03:07:44.840 --> 03:07:46.790 align:start position:0%
take it for a spin okay so I launched
the<03:07:45.000><c> script</c><03:07:45.439><c> and</c><03:07:45.600><c> it</c><03:07:45.680><c> should</c><03:07:45.880><c> be</c><03:07:46.319><c> uh</c><03:07:46.439><c> printing</c>

03:07:46.790 --> 03:07:46.800 align:start position:0%
the script and it should be uh printing
 

03:07:46.800 --> 03:07:48.830 align:start position:0%
the script and it should be uh printing
here<03:07:46.960><c> imminently</c><03:07:47.880><c> we're</c><03:07:48.080><c> now</c><03:07:48.239><c> training</c><03:07:48.680><c> with</c>

03:07:48.830 --> 03:07:48.840 align:start position:0%
here imminently we're now training with
 

03:07:48.840 --> 03:07:51.030 align:start position:0%
here imminently we're now training with
8<03:07:49.120><c> gpus</c><03:07:49.600><c> at</c><03:07:49.720><c> the</c><03:07:49.800><c> same</c><03:07:50.040><c> time</c><03:07:50.439><c> so</c><03:07:50.600><c> the</c><03:07:50.680><c> gradient</c>

03:07:51.030 --> 03:07:51.040 align:start position:0%
8 gpus at the same time so the gradient
 

03:07:51.040 --> 03:07:53.269 align:start position:0%
8 gpus at the same time so the gradient
accumulation<03:07:51.520><c> steps</c><03:07:51.800><c> is</c><03:07:51.960><c> not</c><03:07:52.160><c> 32</c><03:07:52.760><c> it</c><03:07:52.840><c> is</c><03:07:53.040><c> now</c>

03:07:53.269 --> 03:07:53.279 align:start position:0%
accumulation steps is not 32 it is now
 

03:07:53.279 --> 03:07:57.990 align:start position:0%
accumulation steps is not 32 it is now
divide<03:07:53.560><c> 8</c><03:07:54.080><c> and</c><03:07:54.200><c> it's</c><03:07:54.439><c> just</c><03:07:55.000><c> four</c><03:07:56.000><c> uh</c><03:07:56.200><c> so</c><03:07:57.000><c> um</c>

03:07:57.990 --> 03:07:58.000 align:start position:0%
divide 8 and it's just four uh so um
 

03:07:58.000 --> 03:07:59.870 align:start position:0%
divide 8 and it's just four uh so um
otherwise<03:07:59.000><c> this</c><03:07:59.120><c> is</c><03:07:59.200><c> what</c><03:07:59.319><c> the</c><03:07:59.399><c> optimization</c>

03:07:59.870 --> 03:07:59.880 align:start position:0%
otherwise this is what the optimization
 

03:07:59.880 --> 03:08:01.950 align:start position:0%
otherwise this is what the optimization
now<03:08:00.080><c> looks</c><03:08:00.319><c> like</c><03:08:01.040><c> and</c><03:08:01.399><c> wow</c><03:08:01.560><c> we're</c><03:08:01.720><c> going</c>

03:08:01.950 --> 03:08:01.960 align:start position:0%
now looks like and wow we're going
 

03:08:01.960 --> 03:08:04.910 align:start position:0%
now looks like and wow we're going
really<03:08:02.200><c> fast</c><03:08:02.439><c> so</c><03:08:02.600><c> we're</c><03:08:03.160><c> processing</c><03:08:04.160><c> 1.5</c>

03:08:04.910 --> 03:08:04.920 align:start position:0%
really fast so we're processing 1.5
 

03:08:04.920 --> 03:08:09.389 align:start position:0%
really fast so we're processing 1.5
million<03:08:05.760><c> tokens</c><03:08:06.760><c> uh</c><03:08:07.479><c> per</c><03:08:07.720><c> second</c><03:08:08.160><c> now</c><03:08:08.840><c> so</c>

03:08:09.389 --> 03:08:09.399 align:start position:0%
million tokens uh per second now so
 

03:08:09.399 --> 03:08:11.070 align:start position:0%
million tokens uh per second now so
these<03:08:09.560><c> are</c><03:08:09.680><c> some</c><03:08:09.840><c> serious</c><03:08:10.200><c> numbers</c><03:08:10.840><c> and</c><03:08:10.960><c> the</c>

03:08:11.070 --> 03:08:11.080 align:start position:0%
these are some serious numbers and the
 

03:08:11.080 --> 03:08:12.830 align:start position:0%
these are some serious numbers and the
tiny<03:08:11.279><c> shakespare</c><03:08:11.720><c> data</c><03:08:11.920><c> set</c><03:08:12.080><c> is</c><03:08:12.200><c> so</c><03:08:12.439><c> tiny</c><03:08:12.720><c> that</c>

03:08:12.830 --> 03:08:12.840 align:start position:0%
tiny shakespare data set is so tiny that
 

03:08:12.840 --> 03:08:15.389 align:start position:0%
tiny shakespare data set is so tiny that
we're<03:08:13.000><c> just</c><03:08:13.120><c> doing</c><03:08:13.520><c> like</c><03:08:14.399><c> so</c><03:08:14.560><c> many</c><03:08:14.800><c> Epoch</c><03:08:15.200><c> over</c>

03:08:15.389 --> 03:08:15.399 align:start position:0%
we're just doing like so many Epoch over
 

03:08:15.399 --> 03:08:17.550 align:start position:0%
we're just doing like so many Epoch over
it<03:08:15.560><c> most</c><03:08:15.760><c> likely</c><03:08:16.680><c> but</c><03:08:16.800><c> this</c><03:08:16.920><c> is</c><03:08:17.040><c> roughly</c><03:08:17.239><c> what</c>

03:08:17.550 --> 03:08:17.560 align:start position:0%
it most likely but this is roughly what
 

03:08:17.560 --> 03:08:20.550 align:start position:0%
it most likely but this is roughly what
looks<03:08:17.800><c> like</c><03:08:18.760><c> um</c><03:08:19.760><c> one</c><03:08:19.920><c> thing</c><03:08:20.120><c> that</c><03:08:20.200><c> I</c><03:08:20.319><c> had</c><03:08:20.439><c> to</c>

03:08:20.550 --> 03:08:20.560 align:start position:0%
looks like um one thing that I had to
 

03:08:20.560 --> 03:08:23.150 align:start position:0%
looks like um one thing that I had to
fix<03:08:20.840><c> by</c><03:08:20.960><c> the</c><03:08:21.040><c> way</c><03:08:21.279><c> is</c><03:08:21.479><c> that</c><03:08:21.920><c> this</c><03:08:22.120><c> was</c><03:08:22.560><c> model.</c>

03:08:23.150 --> 03:08:23.160 align:start position:0%
fix by the way is that this was model.
 

03:08:23.160 --> 03:08:25.190 align:start position:0%
fix by the way is that this was model.
configure<03:08:23.560><c> optimizers</c><03:08:24.560><c> which</c><03:08:24.720><c> Now</c><03:08:24.920><c> doesn't</c>

03:08:25.190 --> 03:08:25.200 align:start position:0%
configure optimizers which Now doesn't
 

03:08:25.200 --> 03:08:27.750 align:start position:0%
configure optimizers which Now doesn't
work<03:08:25.560><c> because</c><03:08:25.760><c> model</c><03:08:26.000><c> now</c><03:08:26.200><c> is</c><03:08:26.279><c> a</c><03:08:26.399><c> DDP</c><03:08:26.880><c> model</c><03:08:27.560><c> so</c>

03:08:27.750 --> 03:08:27.760 align:start position:0%
work because model now is a DDP model so
 

03:08:27.760 --> 03:08:29.950 align:start position:0%
work because model now is a DDP model so
instead<03:08:28.160><c> this</c><03:08:28.319><c> has</c><03:08:28.439><c> to</c><03:08:28.600><c> become</c><03:08:28.880><c> raw</c>

03:08:29.950 --> 03:08:29.960 align:start position:0%
instead this has to become raw
 

03:08:29.960 --> 03:08:32.710 align:start position:0%
instead this has to become raw
model.<03:08:30.960><c> configure</c><03:08:31.319><c> optimizers</c><03:08:32.200><c> where</c><03:08:32.439><c> raw</c>

03:08:32.710 --> 03:08:32.720 align:start position:0%
model. configure optimizers where raw
 

03:08:32.720 --> 03:08:35.429 align:start position:0%
model. configure optimizers where raw
model<03:08:33.560><c> is</c><03:08:33.680><c> something</c><03:08:34.040><c> I</c><03:08:34.239><c> create</c><03:08:34.600><c> here</c><03:08:35.200><c> so</c>

03:08:35.429 --> 03:08:35.439 align:start position:0%
model is something I create here so
 

03:08:35.439 --> 03:08:38.229 align:start position:0%
model is something I create here so
right<03:08:35.600><c> after</c><03:08:35.800><c> I</c><03:08:35.920><c> wrap</c><03:08:36.200><c> the</c><03:08:36.319><c> model</c><03:08:36.560><c> into</c><03:08:37.080><c> DDP</c><03:08:38.080><c> uh</c>

03:08:38.229 --> 03:08:38.239 align:start position:0%
right after I wrap the model into DDP uh
 

03:08:38.239 --> 03:08:40.510 align:start position:0%
right after I wrap the model into DDP uh
I<03:08:38.319><c> have</c><03:08:38.439><c> to</c><03:08:38.600><c> create</c><03:08:38.880><c> the</c><03:08:39.000><c> raw</c><03:08:39.279><c> model</c><03:08:40.000><c> which</c><03:08:40.399><c> in</c>

03:08:40.510 --> 03:08:40.520 align:start position:0%
I have to create the raw model which in
 

03:08:40.520 --> 03:08:43.590 align:start position:0%
I have to create the raw model which in
the<03:08:40.640><c> case</c><03:08:40.760><c> of</c><03:08:40.920><c> DDP</c><03:08:41.880><c> is</c><03:08:42.000><c> a</c><03:08:42.279><c> model.</c><03:08:42.840><c> module</c><03:08:43.439><c> is</c>

03:08:43.590 --> 03:08:43.600 align:start position:0%
the case of DDP is a model. module is
 

03:08:43.600 --> 03:08:46.630 align:start position:0%
the case of DDP is a model. module is
where<03:08:43.720><c> it</c><03:08:43.840><c> stores</c><03:08:44.359><c> the</c><03:08:44.880><c> raw</c><03:08:45.840><c> and</c><03:08:46.040><c> then</c><03:08:46.200><c> module</c>

03:08:46.630 --> 03:08:46.640 align:start position:0%
where it stores the raw and then module
 

03:08:46.640 --> 03:08:49.790 align:start position:0%
where it stores the raw and then module
of<03:08:46.760><c> gpt2</c><03:08:47.279><c> as</c><03:08:47.520><c> we</c><03:08:47.640><c> have</c><03:08:47.760><c> it</c><03:08:48.479><c> which</c><03:08:48.640><c> contains</c><03:08:49.080><c> the</c>

03:08:49.790 --> 03:08:49.800 align:start position:0%
of gpt2 as we have it which contains the
 

03:08:49.800 --> 03:08:51.309 align:start position:0%
of gpt2 as we have it which contains the
uh<03:08:49.920><c> configure</c><03:08:50.319><c> optimizers</c><03:08:50.880><c> function</c><03:08:51.160><c> that</c><03:08:51.239><c> we</c>

03:08:51.309 --> 03:08:51.319 align:start position:0%
uh configure optimizers function that we
 

03:08:51.319 --> 03:08:53.269 align:start position:0%
uh configure optimizers function that we
want<03:08:51.399><c> to</c><03:08:51.560><c> call</c><03:08:52.239><c> so</c><03:08:52.439><c> that's</c><03:08:52.840><c> one</c><03:08:52.960><c> thing</c><03:08:53.120><c> that</c><03:08:53.200><c> I</c>

03:08:53.269 --> 03:08:53.279 align:start position:0%
want to call so that's one thing that I
 

03:08:53.279 --> 03:08:56.070 align:start position:0%
want to call so that's one thing that I
have<03:08:53.399><c> to</c><03:08:53.520><c> fix</c><03:08:54.479><c> otherwise</c><03:08:54.920><c> this</c><03:08:55.040><c> seems</c><03:08:55.239><c> to</c><03:08:55.399><c> run</c>

03:08:56.070 --> 03:08:56.080 align:start position:0%
have to fix otherwise this seems to run
 

03:08:56.080 --> 03:08:57.389 align:start position:0%
have to fix otherwise this seems to run
now<03:08:56.239><c> one</c><03:08:56.359><c> thing</c><03:08:56.479><c> you'll</c><03:08:56.680><c> notice</c><03:08:57.040><c> is</c><03:08:57.160><c> that</c><03:08:57.319><c> when</c>

03:08:57.389 --> 03:08:57.399 align:start position:0%
now one thing you'll notice is that when
 

03:08:57.399 --> 03:08:59.510 align:start position:0%
now one thing you'll notice is that when
you<03:08:57.560><c> actually</c><03:08:57.840><c> compare</c><03:08:58.640><c> this</c><03:08:58.800><c> run</c><03:08:59.279><c> and</c><03:08:59.399><c> the</c>

03:08:59.510 --> 03:08:59.520 align:start position:0%
you actually compare this run and the
 

03:08:59.520 --> 03:09:01.349 align:start position:0%
you actually compare this run and the
numbers<03:08:59.840><c> in</c><03:09:00.000><c> it</c><03:09:00.200><c> to</c><03:09:00.600><c> the</c><03:09:00.840><c> just</c><03:09:00.960><c> running</c><03:09:01.239><c> a</c>

03:09:01.349 --> 03:09:01.359 align:start position:0%
numbers in it to the just running a
 

03:09:01.359 --> 03:09:03.990 align:start position:0%
numbers in it to the just running a
single<03:09:01.760><c> GPU</c><03:09:02.760><c> you'll</c><03:09:03.000><c> notice</c><03:09:03.279><c> that</c><03:09:03.720><c> this</c><03:09:03.840><c> is</c>

03:09:03.990 --> 03:09:04.000 align:start position:0%
single GPU you'll notice that this is
 

03:09:04.000 --> 03:09:06.910 align:start position:0%
single GPU you'll notice that this is
single<03:09:04.239><c> GPU</c><03:09:04.640><c> run</c><03:09:05.000><c> with</c><03:09:05.200><c> 32</c><03:09:05.840><c> gratum</c><03:09:06.800><c> the</c>

03:09:06.910 --> 03:09:06.920 align:start position:0%
single GPU run with 32 gratum the
 

03:09:06.920 --> 03:09:09.150 align:start position:0%
single GPU run with 32 gratum the
numbers<03:09:07.239><c> won't</c><03:09:07.760><c> exactly</c><03:09:08.239><c> match</c>

03:09:09.150 --> 03:09:09.160 align:start position:0%
numbers won't exactly match
 

03:09:09.160 --> 03:09:11.630 align:start position:0%
numbers won't exactly match
up<03:09:10.160><c> and</c><03:09:10.520><c> uh</c><03:09:10.640><c> that's</c><03:09:10.800><c> kind</c><03:09:10.880><c> of</c><03:09:10.960><c> a</c><03:09:11.080><c> boring</c><03:09:11.399><c> reason</c>

03:09:11.630 --> 03:09:11.640 align:start position:0%
up and uh that's kind of a boring reason
 

03:09:11.640 --> 03:09:13.510 align:start position:0%
up and uh that's kind of a boring reason
for<03:09:11.840><c> why</c><03:09:12.000><c> that</c><03:09:12.160><c> happens</c><03:09:12.920><c> uh</c><03:09:13.000><c> the</c><03:09:13.120><c> reason</c><03:09:13.319><c> for</c>

03:09:13.510 --> 03:09:13.520 align:start position:0%
for why that happens uh the reason for
 

03:09:13.520 --> 03:09:15.710 align:start position:0%
for why that happens uh the reason for
that<03:09:13.680><c> is</c><03:09:13.960><c> that</c><03:09:14.120><c> in</c><03:09:14.200><c> the</c><03:09:14.399><c> data</c><03:09:14.640><c> loader</c><03:09:15.479><c> we're</c>

03:09:15.710 --> 03:09:15.720 align:start position:0%
that is that in the data loader we're
 

03:09:15.720 --> 03:09:17.070 align:start position:0%
that is that in the data loader we're
basically<03:09:16.000><c> just</c><03:09:16.160><c> iterating</c><03:09:16.600><c> through</c><03:09:16.800><c> batches</c>

03:09:17.070 --> 03:09:17.080 align:start position:0%
basically just iterating through batches
 

03:09:17.080 --> 03:09:18.830 align:start position:0%
basically just iterating through batches
and<03:09:17.399><c> slightly</c><03:09:17.680><c> different</c><03:09:18.000><c> way</c><03:09:18.479><c> because</c><03:09:18.720><c> now</c>

03:09:18.830 --> 03:09:18.840 align:start position:0%
and slightly different way because now
 

03:09:18.840 --> 03:09:21.309 align:start position:0%
and slightly different way because now
we're<03:09:19.000><c> looking</c><03:09:19.200><c> for</c><03:09:19.359><c> an</c><03:09:19.479><c> entire</c><03:09:20.000><c> page</c><03:09:20.319><c> of</c><03:09:20.520><c> data</c>

03:09:21.309 --> 03:09:21.319 align:start position:0%
we're looking for an entire page of data
 

03:09:21.319 --> 03:09:24.550 align:start position:0%
we're looking for an entire page of data
and<03:09:21.520><c> if</c><03:09:21.800><c> that</c><03:09:22.200><c> page</c><03:09:23.040><c> uh</c><03:09:23.120><c> for</c><03:09:23.479><c> all</c><03:09:23.640><c> the</c><03:09:23.760><c> gpus</c><03:09:24.319><c> if</c>

03:09:24.550 --> 03:09:24.560 align:start position:0%
and if that page uh for all the gpus if
 

03:09:24.560 --> 03:09:26.910 align:start position:0%
and if that page uh for all the gpus if
that<03:09:24.840><c> chunk</c><03:09:25.640><c> exceeds</c><03:09:26.080><c> the</c><03:09:26.200><c> number</c><03:09:26.399><c> of</c><03:09:26.520><c> tokens</c>

03:09:26.910 --> 03:09:26.920 align:start position:0%
that chunk exceeds the number of tokens
 

03:09:26.920 --> 03:09:29.070 align:start position:0%
that chunk exceeds the number of tokens
we<03:09:27.040><c> just</c><03:09:27.160><c> Loop</c><03:09:28.040><c> and</c><03:09:28.160><c> so</c><03:09:28.399><c> actually</c><03:09:28.680><c> the</c><03:09:28.800><c> single</c>

03:09:29.070 --> 03:09:29.080 align:start position:0%
we just Loop and so actually the single
 

03:09:29.080 --> 03:09:33.030 align:start position:0%
we just Loop and so actually the single
GPU<03:09:29.640><c> and</c><03:09:29.840><c> the</c><03:09:30.040><c> H</c><03:09:30.319><c> GPU</c><03:09:30.800><c> process</c><03:09:31.319><c> will</c><03:09:31.520><c> end</c><03:09:31.720><c> up</c><03:09:32.200><c> um</c>

03:09:33.030 --> 03:09:33.040 align:start position:0%
GPU and the H GPU process will end up um
 

03:09:33.040 --> 03:09:35.309 align:start position:0%
GPU and the H GPU process will end up um
resetting<03:09:33.600><c> in</c><03:09:33.720><c> a</c><03:09:33.800><c> slightly</c><03:09:34.160><c> different</c><03:09:34.720><c> Manner</c>

03:09:35.309 --> 03:09:35.319 align:start position:0%
resetting in a slightly different Manner
 

03:09:35.319 --> 03:09:36.550 align:start position:0%
resetting in a slightly different Manner
and<03:09:35.439><c> so</c><03:09:35.560><c> our</c><03:09:35.720><c> batches</c><03:09:36.000><c> are</c><03:09:36.160><c> slightly</c>

03:09:36.550 --> 03:09:36.560 align:start position:0%
and so our batches are slightly
 

03:09:36.560 --> 03:09:38.110 align:start position:0%
and so our batches are slightly
different<03:09:37.279><c> and</c><03:09:37.399><c> so</c><03:09:37.560><c> we</c><03:09:37.680><c> get</c><03:09:37.840><c> slightly</c>

03:09:38.110 --> 03:09:38.120 align:start position:0%
different and so we get slightly
 

03:09:38.120 --> 03:09:39.910 align:start position:0%
different and so we get slightly
different<03:09:38.359><c> numbers</c><03:09:39.359><c> but</c><03:09:39.520><c> one</c><03:09:39.640><c> way</c><03:09:39.760><c> to</c>

03:09:39.910 --> 03:09:39.920 align:start position:0%
different numbers but one way to
 

03:09:39.920 --> 03:09:42.710 align:start position:0%
different numbers but one way to
convince<03:09:40.279><c> yourself</c><03:09:40.960><c> that</c><03:09:41.120><c> this</c><03:09:41.279><c> is</c><03:09:41.960><c> okay</c><03:09:42.560><c> it</c>

03:09:42.710 --> 03:09:42.720 align:start position:0%
convince yourself that this is okay it
 

03:09:42.720 --> 03:09:43.950 align:start position:0%
convince yourself that this is okay it
just<03:09:42.880><c> make</c><03:09:43.040><c> the</c><03:09:43.160><c> total</c><03:09:43.399><c> batch</c><03:09:43.600><c> size</c><03:09:43.840><c> much</c>

03:09:43.950 --> 03:09:43.960 align:start position:0%
just make the total batch size much
 

03:09:43.960 --> 03:09:48.269 align:start position:0%
just make the total batch size much
smaller<03:09:44.720><c> and</c><03:09:44.880><c> the</c><03:09:45.040><c> b</c><03:09:45.239><c> and</c><03:09:45.359><c> a</c><03:09:45.520><c> t</c><03:09:46.359><c> and</c><03:09:46.560><c> then</c><03:09:47.120><c> um</c>

03:09:48.269 --> 03:09:48.279 align:start position:0%
smaller and the b and a t and then um
 

03:09:48.279 --> 03:09:52.309 align:start position:0%
smaller and the b and a t and then um
so<03:09:48.479><c> I</c><03:09:48.560><c> think</c><03:09:48.720><c> I</c><03:09:48.880><c> used</c><03:09:49.640><c> uh</c><03:09:49.840><c> 4</c><03:09:50.160><c> *</c><03:09:50.479><c> 124</c><03:09:51.120><c> *</c><03:09:51.439><c> 8</c><03:09:52.080><c> so</c><03:09:52.200><c> I</c>

03:09:52.309 --> 03:09:52.319 align:start position:0%
so I think I used uh 4 * 124 * 8 so I
 

03:09:52.319 --> 03:09:55.630 align:start position:0%
so I think I used uh 4 * 124 * 8 so I
used<03:09:52.680><c> 32768</c><03:09:53.680><c> as</c><03:09:53.800><c> a</c><03:09:53.960><c> total</c><03:09:54.200><c> patch</c><03:09:54.479><c> size</c><03:09:55.359><c> and</c>

03:09:55.630 --> 03:09:55.640 align:start position:0%
used 32768 as a total patch size and
 

03:09:55.640 --> 03:09:57.870 align:start position:0%
used 32768 as a total patch size and
then<03:09:56.279><c> um</c><03:09:56.720><c> so</c><03:09:56.880><c> I</c><03:09:57.000><c> made</c><03:09:57.160><c> sure</c><03:09:57.359><c> that</c><03:09:57.479><c> the</c><03:09:57.600><c> single</c>

03:09:57.870 --> 03:09:57.880 align:start position:0%
then um so I made sure that the single
 

03:09:57.880 --> 03:09:59.990 align:start position:0%
then um so I made sure that the single
GPU<03:09:58.279><c> will</c><03:09:58.439><c> do</c><03:09:58.680><c> eight</c><03:09:59.040><c> creting</c><03:09:59.560><c> accumulation</c>

03:09:59.990 --> 03:10:00.000 align:start position:0%
GPU will do eight creting accumulation
 

03:10:00.000 --> 03:10:02.630 align:start position:0%
GPU will do eight creting accumulation
steps<03:10:00.479><c> and</c><03:10:00.600><c> then</c><03:10:00.840><c> the</c><03:10:01.319><c> multi-gpu</c><03:10:02.319><c> and</c><03:10:02.479><c> then</c>

03:10:02.630 --> 03:10:02.640 align:start position:0%
steps and then the multi-gpu and then
 

03:10:02.640 --> 03:10:04.389 align:start position:0%
steps and then the multi-gpu and then
you're<03:10:02.840><c> reducing</c><03:10:03.239><c> the</c><03:10:03.399><c> boundary</c><03:10:03.840><c> effects</c><03:10:04.279><c> of</c>

03:10:04.389 --> 03:10:04.399 align:start position:0%
you're reducing the boundary effects of
 

03:10:04.399 --> 03:10:06.150 align:start position:0%
you're reducing the boundary effects of
the<03:10:04.560><c> data</c><03:10:04.760><c> loader</c><03:10:05.239><c> and</c><03:10:05.319><c> you'll</c><03:10:05.520><c> see</c><03:10:05.720><c> that</c><03:10:05.920><c> the</c>

03:10:06.150 --> 03:10:06.160 align:start position:0%
the data loader and you'll see that the
 

03:10:06.160 --> 03:10:08.670 align:start position:0%
the data loader and you'll see that the
numbers<03:10:06.479><c> match</c><03:10:06.720><c> up</c><03:10:07.239><c> so</c><03:10:07.479><c> long</c><03:10:07.640><c> story</c><03:10:07.920><c> short</c>

03:10:08.670 --> 03:10:08.680 align:start position:0%
numbers match up so long story short
 

03:10:08.680 --> 03:10:10.750 align:start position:0%
numbers match up so long story short
we're<03:10:08.880><c> now</c><03:10:09.040><c> going</c><03:10:09.359><c> really</c><03:10:09.640><c> really</c><03:10:09.920><c> fast</c><03:10:10.640><c> the</c>

03:10:10.750 --> 03:10:10.760 align:start position:0%
we're now going really really fast the
 

03:10:10.760 --> 03:10:12.670 align:start position:0%
we're now going really really fast the
optimization<03:10:11.359><c> is</c><03:10:11.560><c> mostly</c><03:10:12.040><c> consistent</c><03:10:12.560><c> with</c>

03:10:12.670 --> 03:10:12.680 align:start position:0%
optimization is mostly consistent with
 

03:10:12.680 --> 03:10:16.309 align:start position:0%
optimization is mostly consistent with
gpt2<03:10:13.279><c> and</c><03:10:13.399><c> three</c><03:10:13.640><c> hyper</c><03:10:14.160><c> parameters</c><03:10:15.160><c> and</c><03:10:15.880><c> uh</c>

03:10:16.309 --> 03:10:16.319 align:start position:0%
gpt2 and three hyper parameters and uh
 

03:10:16.319 --> 03:10:18.229 align:start position:0%
gpt2 and three hyper parameters and uh
we<03:10:16.520><c> have</c><03:10:16.680><c> outgrown</c><03:10:17.319><c> our</c><03:10:17.479><c> tiny</c><03:10:17.720><c> Shakespeare</c>

03:10:18.229 --> 03:10:18.239 align:start position:0%
we have outgrown our tiny Shakespeare
 

03:10:18.239 --> 03:10:20.550 align:start position:0%
we have outgrown our tiny Shakespeare
file<03:10:18.960><c> and</c><03:10:19.080><c> we</c><03:10:19.200><c> want</c><03:10:19.359><c> to</c><03:10:19.600><c> upgrade</c><03:10:19.960><c> it</c><03:10:20.239><c> so</c><03:10:20.399><c> let's</c>

03:10:20.550 --> 03:10:20.560 align:start position:0%
file and we want to upgrade it so let's
 

03:10:20.560 --> 03:10:22.309 align:start position:0%
file and we want to upgrade it so let's
move<03:10:20.720><c> to</c><03:10:20.920><c> next</c><03:10:21.279><c> to</c><03:10:21.479><c> that</c><03:10:21.640><c> next</c><03:10:21.880><c> so</c><03:10:22.000><c> let's</c><03:10:22.160><c> now</c>

03:10:22.309 --> 03:10:22.319 align:start position:0%
move to next to that next so let's now
 

03:10:22.319 --> 03:10:23.750 align:start position:0%
move to next to that next so let's now
take<03:10:22.399><c> a</c><03:10:22.520><c> look</c><03:10:22.680><c> at</c><03:10:22.800><c> what</c><03:10:22.960><c> data</c><03:10:23.160><c> sets</c><03:10:23.359><c> were</c><03:10:23.520><c> used</c>

03:10:23.750 --> 03:10:23.760 align:start position:0%
take a look at what data sets were used
 

03:10:23.760 --> 03:10:27.630 align:start position:0%
take a look at what data sets were used
by<03:10:23.880><c> gpt2</c><03:10:24.399><c> and</c><03:10:24.840><c> gpt3</c><03:10:25.840><c> so</c><03:10:26.000><c> gbt2</c><03:10:26.600><c> used</c><03:10:27.080><c> this</c><03:10:27.359><c> web</c>

03:10:27.630 --> 03:10:27.640 align:start position:0%
by gpt2 and gpt3 so gbt2 used this web
 

03:10:27.640 --> 03:10:30.710 align:start position:0%
by gpt2 and gpt3 so gbt2 used this web
Text<03:10:28.040><c> data</c><03:10:28.359><c> set</c><03:10:28.640><c> that</c><03:10:28.760><c> was</c><03:10:28.880><c> never</c><03:10:29.279><c> released</c><03:10:30.279><c> um</c>

03:10:30.710 --> 03:10:30.720 align:start position:0%
Text data set that was never released um
 

03:10:30.720 --> 03:10:32.389 align:start position:0%
Text data set that was never released um
there's<03:10:31.000><c> an</c><03:10:31.200><c> attempt</c><03:10:31.520><c> at</c><03:10:31.680><c> reproducing</c><03:10:32.239><c> it</c>

03:10:32.389 --> 03:10:32.399 align:start position:0%
there's an attempt at reproducing it
 

03:10:32.399 --> 03:10:34.510 align:start position:0%
there's an attempt at reproducing it
called<03:10:32.600><c> open</c><03:10:32.880><c> web</c><03:10:33.120><c> text</c><03:10:33.880><c> uh</c><03:10:34.000><c> so</c><03:10:34.120><c> basically</c>

03:10:34.510 --> 03:10:34.520 align:start position:0%
called open web text uh so basically
 

03:10:34.520 --> 03:10:35.710 align:start position:0%
called open web text uh so basically
roughly<03:10:34.800><c> speaking</c><03:10:35.120><c> what</c><03:10:35.239><c> they</c><03:10:35.359><c> say</c><03:10:35.520><c> here</c><03:10:35.640><c> in</c>

03:10:35.710 --> 03:10:35.720 align:start position:0%
roughly speaking what they say here in
 

03:10:35.720 --> 03:10:37.750 align:start position:0%
roughly speaking what they say here in
the<03:10:35.880><c> paper</c><03:10:36.200><c> is</c><03:10:36.439><c> that</c><03:10:36.920><c> they</c><03:10:37.120><c> scraped</c><03:10:37.560><c> all</c>

03:10:37.750 --> 03:10:37.760 align:start position:0%
the paper is that they scraped all
 

03:10:37.760 --> 03:10:41.110 align:start position:0%
the paper is that they scraped all
outbound<03:10:38.279><c> links</c><03:10:38.560><c> from</c><03:10:38.880><c> Reddit</c><03:10:39.880><c> and</c><03:10:40.120><c> then</c><03:10:40.960><c> uh</c>

03:10:41.110 --> 03:10:41.120 align:start position:0%
outbound links from Reddit and then uh
 

03:10:41.120 --> 03:10:43.070 align:start position:0%
outbound links from Reddit and then uh
with<03:10:41.359><c> at</c><03:10:41.439><c> least</c><03:10:41.600><c> three</c><03:10:41.840><c> Karma</c><03:10:42.720><c> and</c><03:10:42.840><c> that</c><03:10:42.960><c> was</c>

03:10:43.070 --> 03:10:43.080 align:start position:0%
with at least three Karma and that was
 

03:10:43.080 --> 03:10:44.309 align:start position:0%
with at least three Karma and that was
kind<03:10:43.200><c> of</c><03:10:43.319><c> like</c><03:10:43.439><c> their</c><03:10:43.560><c> starting</c><03:10:43.960><c> point</c><03:10:44.200><c> and</c>

03:10:44.309 --> 03:10:44.319 align:start position:0%
kind of like their starting point and
 

03:10:44.319 --> 03:10:45.870 align:start position:0%
kind of like their starting point and
they<03:10:44.439><c> collected</c><03:10:44.840><c> all</c><03:10:44.960><c> the</c><03:10:45.120><c> web</c><03:10:45.319><c> P</c><03:10:45.520><c> all</c><03:10:45.600><c> the</c><03:10:45.720><c> web</c>

03:10:45.870 --> 03:10:45.880 align:start position:0%
they collected all the web P all the web
 

03:10:45.880 --> 03:10:48.110 align:start position:0%
they collected all the web P all the web
pages<03:10:46.120><c> and</c><03:10:46.279><c> all</c><03:10:46.399><c> the</c><03:10:46.520><c> text</c><03:10:46.760><c> in</c><03:10:46.920><c> them</c><03:10:47.720><c> and</c><03:10:47.840><c> so</c>

03:10:48.110 --> 03:10:48.120 align:start position:0%
pages and all the text in them and so
 

03:10:48.120 --> 03:10:50.309 align:start position:0%
pages and all the text in them and so
this<03:10:48.239><c> was</c><03:10:48.399><c> 45</c><03:10:48.840><c> million</c><03:10:49.120><c> links</c><03:10:49.880><c> and</c><03:10:50.000><c> this</c><03:10:50.120><c> ended</c>

03:10:50.309 --> 03:10:50.319 align:start position:0%
this was 45 million links and this ended
 

03:10:50.319 --> 03:10:54.590 align:start position:0%
this was 45 million links and this ended
up<03:10:50.439><c> being</c><03:10:50.640><c> 40</c><03:10:50.880><c> GB</c><03:10:51.279><c> of</c><03:10:51.399><c> text</c><03:10:52.359><c> so</c><03:10:53.080><c> uh</c><03:10:53.800><c> so</c><03:10:54.279><c> that's</c>

03:10:54.590 --> 03:10:54.600 align:start position:0%
up being 40 GB of text so uh so that's
 

03:10:54.600 --> 03:10:57.110 align:start position:0%
up being 40 GB of text so uh so that's
roughly<03:10:54.960><c> what</c><03:10:55.120><c> gpt2</c><03:10:55.640><c> says</c><03:10:56.000><c> about</c><03:10:56.640><c> its</c><03:10:56.840><c> data</c>

03:10:57.110 --> 03:10:57.120 align:start position:0%
roughly what gpt2 says about its data
 

03:10:57.120 --> 03:10:58.550 align:start position:0%
roughly what gpt2 says about its data
set<03:10:57.279><c> so</c><03:10:57.399><c> it's</c><03:10:57.520><c> basically</c><03:10:57.840><c> outbound</c><03:10:58.279><c> links</c>

03:10:58.550 --> 03:10:58.560 align:start position:0%
set so it's basically outbound links
 

03:10:58.560 --> 03:11:01.590 align:start position:0%
set so it's basically outbound links
from<03:10:58.720><c> Reddit</c><03:10:59.720><c> now</c><03:10:59.880><c> when</c><03:10:59.960><c> we</c><03:11:00.080><c> go</c><03:11:00.200><c> over</c><03:11:00.319><c> to</c><03:11:00.600><c> gpt3</c>

03:11:01.590 --> 03:11:01.600 align:start position:0%
from Reddit now when we go over to gpt3
 

03:11:01.600 --> 03:11:03.550 align:start position:0%
from Reddit now when we go over to gpt3
there's<03:11:01.800><c> a</c><03:11:01.960><c> training</c><03:11:02.319><c> data</c><03:11:02.560><c> set</c><03:11:02.760><c> section</c><03:11:03.479><c> and</c>

03:11:03.550 --> 03:11:03.560 align:start position:0%
there's a training data set section and
 

03:11:03.560 --> 03:11:05.469 align:start position:0%
there's a training data set section and
that's<03:11:03.720><c> where</c><03:11:03.840><c> they</c><03:11:03.960><c> start</c><03:11:04.120><c> to</c><03:11:04.319><c> talk</c><03:11:04.520><c> about</c><03:11:05.200><c> um</c>

03:11:05.469 --> 03:11:05.479 align:start position:0%
that's where they start to talk about um
 

03:11:05.479 --> 03:11:09.710 align:start position:0%
that's where they start to talk about um
common<03:11:05.800><c> coll</c><03:11:06.680><c> which</c><03:11:06.840><c> is</c><03:11:07.080><c> a</c><03:11:07.200><c> lot</c><03:11:07.439><c> more</c><03:11:08.160><c> uh</c><03:11:08.720><c> used</c>

03:11:09.710 --> 03:11:09.720 align:start position:0%
common coll which is a lot more uh used
 

03:11:09.720 --> 03:11:11.830 align:start position:0%
common coll which is a lot more uh used
actually<03:11:09.960><c> I</c><03:11:10.040><c> think</c><03:11:10.200><c> even</c><03:11:10.399><c> gpt2</c><03:11:11.399><c> talked</c><03:11:11.640><c> about</c>

03:11:11.830 --> 03:11:11.840 align:start position:0%
actually I think even gpt2 talked about
 

03:11:11.840 --> 03:11:14.750 align:start position:0%
actually I think even gpt2 talked about
common<03:11:12.200><c> coll</c><03:11:13.200><c> um</c><03:11:13.720><c> but</c><03:11:13.920><c> basically</c><03:11:14.319><c> it's</c><03:11:14.479><c> not</c><03:11:14.600><c> a</c>

03:11:14.750 --> 03:11:14.760 align:start position:0%
common coll um but basically it's not a
 

03:11:14.760 --> 03:11:16.710 align:start position:0%
common coll um but basically it's not a
very<03:11:15.040><c> high</c><03:11:15.319><c> quality</c><03:11:15.680><c> data</c><03:11:15.920><c> set</c><03:11:16.080><c> all</c><03:11:16.239><c> by</c><03:11:16.399><c> itself</c>

03:11:16.710 --> 03:11:16.720 align:start position:0%
very high quality data set all by itself
 

03:11:16.720 --> 03:11:18.389 align:start position:0%
very high quality data set all by itself
because<03:11:16.920><c> it</c><03:11:17.000><c> is</c><03:11:17.279><c> extremely</c><03:11:17.680><c> noisy</c><03:11:18.080><c> this</c><03:11:18.160><c> is</c><03:11:18.279><c> a</c>

03:11:18.389 --> 03:11:18.399 align:start position:0%
because it is extremely noisy this is a
 

03:11:18.399 --> 03:11:20.630 align:start position:0%
because it is extremely noisy this is a
completely<03:11:18.960><c> random</c><03:11:19.319><c> subset</c><03:11:19.640><c> of</c><03:11:19.760><c> the</c><03:11:19.880><c> internet</c>

03:11:20.630 --> 03:11:20.640 align:start position:0%
completely random subset of the internet
 

03:11:20.640 --> 03:11:22.910 align:start position:0%
completely random subset of the internet
and<03:11:20.760><c> it's</c><03:11:20.960><c> much</c><03:11:21.200><c> worse</c><03:11:21.520><c> than</c><03:11:21.640><c> you</c><03:11:21.840><c> think</c><03:11:22.760><c> so</c>

03:11:22.910 --> 03:11:22.920 align:start position:0%
and it's much worse than you think so
 

03:11:22.920 --> 03:11:24.510 align:start position:0%
and it's much worse than you think so
people<03:11:23.120><c> go</c><03:11:23.279><c> into</c><03:11:23.479><c> Great</c><03:11:23.680><c> Lengths</c><03:11:23.960><c> to</c><03:11:24.120><c> filter</c>

03:11:24.510 --> 03:11:24.520 align:start position:0%
people go into Great Lengths to filter
 

03:11:24.520 --> 03:11:26.030 align:start position:0%
people go into Great Lengths to filter
common<03:11:24.840><c> craw</c><03:11:25.120><c> because</c><03:11:25.359><c> there's</c><03:11:25.600><c> good</c><03:11:25.800><c> stuff</c>

03:11:26.030 --> 03:11:26.040 align:start position:0%
common craw because there's good stuff
 

03:11:26.040 --> 03:11:27.910 align:start position:0%
common craw because there's good stuff
in<03:11:26.160><c> it</c><03:11:26.600><c> but</c><03:11:26.760><c> most</c><03:11:26.960><c> of</c><03:11:27.080><c> it</c><03:11:27.200><c> is</c><03:11:27.319><c> just</c><03:11:27.439><c> like</c><03:11:27.640><c> ad</c>

03:11:27.910 --> 03:11:27.920 align:start position:0%
in it but most of it is just like ad
 

03:11:27.920 --> 03:11:30.630 align:start position:0%
in it but most of it is just like ad
spam<03:11:28.840><c> random</c><03:11:29.239><c> tables</c><03:11:29.600><c> and</c><03:11:29.760><c> numbers</c><03:11:30.080><c> and</c><03:11:30.239><c> stock</c>

03:11:30.630 --> 03:11:30.640 align:start position:0%
spam random tables and numbers and stock
 

03:11:30.640 --> 03:11:35.910 align:start position:0%
spam random tables and numbers and stock
tickers<03:11:31.640><c> and</c><03:11:32.239><c> uh</c><03:11:32.560><c> it's</c><03:11:32.760><c> just</c><03:11:33.319><c> total</c><03:11:34.359><c> mess</c>

03:11:35.910 --> 03:11:35.920 align:start position:0%
tickers and uh it's just total mess
 

03:11:35.920 --> 03:11:38.710 align:start position:0%
tickers and uh it's just total mess
so<03:11:36.920><c> that's</c><03:11:37.080><c> why</c><03:11:37.239><c> people</c><03:11:37.960><c> like</c><03:11:38.160><c> to</c><03:11:38.279><c> train</c><03:11:38.560><c> on</c>

03:11:38.710 --> 03:11:38.720 align:start position:0%
so that's why people like to train on
 

03:11:38.720 --> 03:11:41.590 align:start position:0%
so that's why people like to train on
these<03:11:38.920><c> data</c><03:11:39.200><c> mixtures</c><03:11:39.960><c> that</c><03:11:40.120><c> they</c><03:11:40.359><c> curate</c><03:11:41.120><c> and</c>

03:11:41.590 --> 03:11:41.600 align:start position:0%
these data mixtures that they curate and
 

03:11:41.600 --> 03:11:44.429 align:start position:0%
these data mixtures that they curate and
uh<03:11:41.720><c> are</c><03:11:41.920><c> careful</c><03:11:42.359><c> with</c><03:11:43.000><c> so</c><03:11:43.479><c> a</c><03:11:43.720><c> large</c><03:11:44.040><c> chunk</c><03:11:44.319><c> of</c>

03:11:44.429 --> 03:11:44.439 align:start position:0%
uh are careful with so a large chunk of
 

03:11:44.439 --> 03:11:45.830 align:start position:0%
uh are careful with so a large chunk of
these<03:11:44.600><c> data</c><03:11:44.800><c> mixtures</c><03:11:45.200><c> typically</c><03:11:45.520><c> will</c><03:11:45.680><c> be</c>

03:11:45.830 --> 03:11:45.840 align:start position:0%
these data mixtures typically will be
 

03:11:45.840 --> 03:11:47.870 align:start position:0%
these data mixtures typically will be
common<03:11:46.120><c> C</c><03:11:46.560><c> like</c><03:11:46.680><c> for</c><03:11:46.800><c> example</c><03:11:47.239><c> 50%</c><03:11:47.680><c> of</c><03:11:47.800><c> the</c>

03:11:47.870 --> 03:11:47.880 align:start position:0%
common C like for example 50% of the
 

03:11:47.880 --> 03:11:50.429 align:start position:0%
common C like for example 50% of the
tokens<03:11:48.200><c> will</c><03:11:48.319><c> be</c><03:11:48.600><c> comic</c><03:11:49.600><c> but</c><03:11:49.760><c> then</c><03:11:50.000><c> here</c><03:11:50.239><c> in</c>

03:11:50.429 --> 03:11:50.439 align:start position:0%
tokens will be comic but then here in
 

03:11:50.439 --> 03:11:52.630 align:start position:0%
tokens will be comic but then here in
gpt3<03:11:51.000><c> they're</c><03:11:51.160><c> also</c><03:11:51.319><c> using</c><03:11:51.600><c> web</c><03:11:51.840><c> text</c><03:11:52.080><c> to</c><03:11:52.439><c> from</c>

03:11:52.630 --> 03:11:52.640 align:start position:0%
gpt3 they're also using web text to from
 

03:11:52.640 --> 03:11:54.590 align:start position:0%
gpt3 they're also using web text to from
before<03:11:52.960><c> so</c><03:11:53.120><c> that's</c><03:11:53.279><c> Reddit</c><03:11:53.640><c> outbound</c><03:11:54.479><c> but</c>

03:11:54.590 --> 03:11:54.600 align:start position:0%
before so that's Reddit outbound but
 

03:11:54.600 --> 03:11:56.590 align:start position:0%
before so that's Reddit outbound but
they're<03:11:54.800><c> also</c><03:11:55.000><c> adding</c><03:11:55.359><c> for</c><03:11:55.520><c> example</c><03:11:55.880><c> books</c>

03:11:56.590 --> 03:11:56.600 align:start position:0%
they're also adding for example books
 

03:11:56.600 --> 03:11:58.190 align:start position:0%
they're also adding for example books
and<03:11:56.720><c> they're</c><03:11:56.880><c> adding</c><03:11:57.160><c> Wikipedia</c><03:11:58.000><c> there's</c>

03:11:58.190 --> 03:11:58.200 align:start position:0%
and they're adding Wikipedia there's
 

03:11:58.200 --> 03:12:00.670 align:start position:0%
and they're adding Wikipedia there's
many<03:11:58.399><c> other</c><03:11:58.600><c> things</c><03:11:58.800><c> you</c><03:11:58.920><c> can</c><03:11:59.200><c> decide</c><03:11:59.479><c> to</c><03:11:59.720><c> add</c>

03:12:00.670 --> 03:12:00.680 align:start position:0%
many other things you can decide to add
 

03:12:00.680 --> 03:12:02.469 align:start position:0%
many other things you can decide to add
now<03:12:00.880><c> this</c><03:12:01.000><c> data</c><03:12:01.239><c> set</c><03:12:01.359><c> for</c><03:12:01.439><c> gpt3</c><03:12:02.040><c> was</c><03:12:02.200><c> also</c>

03:12:02.469 --> 03:12:02.479 align:start position:0%
now this data set for gpt3 was also
 

03:12:02.479 --> 03:12:05.070 align:start position:0%
now this data set for gpt3 was also
never<03:12:02.760><c> released</c><03:12:03.760><c> so</c><03:12:04.040><c> today</c><03:12:04.560><c> some</c><03:12:04.680><c> of</c><03:12:04.800><c> the</c><03:12:04.880><c> data</c>

03:12:05.070 --> 03:12:05.080 align:start position:0%
never released so today some of the data
 

03:12:05.080 --> 03:12:06.269 align:start position:0%
never released so today some of the data
sets<03:12:05.279><c> that</c><03:12:05.359><c> I'm</c><03:12:05.479><c> familiar</c><03:12:05.800><c> with</c><03:12:05.960><c> that</c><03:12:06.040><c> are</c>

03:12:06.269 --> 03:12:06.279 align:start position:0%
sets that I'm familiar with that are
 

03:12:06.279 --> 03:12:08.030 align:start position:0%
sets that I'm familiar with that are
quite<03:12:06.520><c> good</c><03:12:06.760><c> and</c><03:12:06.880><c> would</c><03:12:07.040><c> be</c><03:12:07.239><c> representative</c>

03:12:08.030 --> 03:12:08.040 align:start position:0%
quite good and would be representative
 

03:12:08.040 --> 03:12:10.070 align:start position:0%
quite good and would be representative
of<03:12:08.200><c> something</c><03:12:08.640><c> along</c><03:12:09.000><c> these</c><03:12:09.200><c> lines</c><03:12:09.880><c> are</c>

03:12:10.070 --> 03:12:10.080 align:start position:0%
of something along these lines are
 

03:12:10.080 --> 03:12:12.790 align:start position:0%
of something along these lines are
number<03:12:10.319><c> one</c><03:12:10.760><c> the</c><03:12:10.920><c> red</c><03:12:11.200><c> pajama</c><03:12:11.560><c> data</c><03:12:11.840><c> set</c><03:12:12.560><c> or</c>

03:12:12.790 --> 03:12:12.800 align:start position:0%
number one the red pajama data set or
 

03:12:12.800 --> 03:12:14.670 align:start position:0%
number one the red pajama data set or
more<03:12:13.080><c> specifically</c><03:12:13.760><c> for</c><03:12:13.920><c> example</c><03:12:14.200><c> the</c><03:12:14.319><c> slim</c>

03:12:14.670 --> 03:12:14.680 align:start position:0%
more specifically for example the slim
 

03:12:14.680 --> 03:12:17.710 align:start position:0%
more specifically for example the slim
pajama<03:12:15.160><c> subset</c><03:12:15.800><c> of</c><03:12:15.920><c> the</c><03:12:16.080><c> red</c><03:12:16.279><c> pajama</c><03:12:16.680><c> data</c><03:12:16.920><c> set</c>

03:12:17.710 --> 03:12:17.720 align:start position:0%
pajama subset of the red pajama data set
 

03:12:17.720 --> 03:12:19.790 align:start position:0%
pajama subset of the red pajama data set
which<03:12:17.840><c> is</c><03:12:18.000><c> a</c><03:12:18.160><c> cleaned</c><03:12:18.479><c> and</c><03:12:18.680><c> D</c><03:12:19.120><c> duplicated</c>

03:12:19.790 --> 03:12:19.800 align:start position:0%
which is a cleaned and D duplicated
 

03:12:19.800 --> 03:12:21.590 align:start position:0%
which is a cleaned and D duplicated
version<03:12:20.040><c> of</c><03:12:20.160><c> it</c><03:12:20.880><c> and</c><03:12:21.040><c> just</c><03:12:21.120><c> to</c><03:12:21.279><c> give</c><03:12:21.359><c> you</c><03:12:21.479><c> a</c>

03:12:21.590 --> 03:12:21.600 align:start position:0%
version of it and just to give you a
 

03:12:21.600 --> 03:12:24.269 align:start position:0%
version of it and just to give you a
sense<03:12:21.920><c> again</c><03:12:22.120><c> it's</c><03:12:22.479><c> a</c><03:12:22.600><c> bunch</c><03:12:22.760><c> of</c><03:12:22.920><c> common</c><03:12:23.279><c> crawl</c>

03:12:24.269 --> 03:12:24.279 align:start position:0%
sense again it's a bunch of common crawl
 

03:12:24.279 --> 03:12:27.110 align:start position:0%
sense again it's a bunch of common crawl
um<03:12:24.600><c> C4</c><03:12:25.399><c> which</c><03:12:25.520><c> is</c><03:12:25.760><c> also</c><03:12:26.479><c> as</c><03:12:26.600><c> far</c><03:12:26.720><c> as</c><03:12:26.800><c> I</c><03:12:26.920><c> know</c>

03:12:27.110 --> 03:12:27.120 align:start position:0%
um C4 which is also as far as I know
 

03:12:27.120 --> 03:12:28.870 align:start position:0%
um C4 which is also as far as I know
more<03:12:27.359><c> common</c><03:12:27.640><c> craw</c><03:12:28.120><c> but</c><03:12:28.359><c> processed</c>

03:12:28.870 --> 03:12:28.880 align:start position:0%
more common craw but processed
 

03:12:28.880 --> 03:12:30.910 align:start position:0%
more common craw but processed
differently<03:12:29.880><c> and</c><03:12:30.000><c> then</c><03:12:30.120><c> we</c><03:12:30.200><c> have</c><03:12:30.399><c> GitHub</c>

03:12:30.910 --> 03:12:30.920 align:start position:0%
differently and then we have GitHub
 

03:12:30.920 --> 03:12:33.710 align:start position:0%
differently and then we have GitHub
books<03:12:31.520><c> archive</c><03:12:32.080><c> Wikipedia</c><03:12:32.640><c> stack</c><03:12:32.880><c> exchange</c>

03:12:33.710 --> 03:12:33.720 align:start position:0%
books archive Wikipedia stack exchange
 

03:12:33.720 --> 03:12:35.030 align:start position:0%
books archive Wikipedia stack exchange
these<03:12:33.840><c> are</c><03:12:34.160><c> the</c><03:12:34.239><c> kinds</c><03:12:34.399><c> of</c><03:12:34.520><c> data</c><03:12:34.720><c> sets</c><03:12:34.960><c> that</c>

03:12:35.030 --> 03:12:35.040 align:start position:0%
these are the kinds of data sets that
 

03:12:35.040 --> 03:12:37.309 align:start position:0%
these are the kinds of data sets that
would<03:12:35.160><c> go</c><03:12:35.279><c> into</c><03:12:35.479><c> these</c><03:12:35.600><c> data</c><03:12:36.080><c> mixtures</c><03:12:37.080><c> now</c>

03:12:37.309 --> 03:12:37.319 align:start position:0%
would go into these data mixtures now
 

03:12:37.319 --> 03:12:38.750 align:start position:0%
would go into these data mixtures now
specifically<03:12:37.760><c> the</c><03:12:37.840><c> one</c><03:12:38.040><c> that</c><03:12:38.200><c> I</c><03:12:38.359><c> like</c><03:12:38.600><c> that</c>

03:12:38.750 --> 03:12:38.760 align:start position:0%
specifically the one that I like that
 

03:12:38.760 --> 03:12:41.190 align:start position:0%
specifically the one that I like that
came<03:12:38.880><c> out</c><03:12:39.080><c> recently</c><03:12:39.880><c> is</c><03:12:40.200><c> called</c><03:12:40.680><c> Fine</c><03:12:40.960><c> web</c>

03:12:41.190 --> 03:12:41.200 align:start position:0%
came out recently is called Fine web
 

03:12:41.200 --> 03:12:43.670 align:start position:0%
came out recently is called Fine web
data<03:12:41.479><c> set</c><03:12:42.239><c> uh</c><03:12:42.319><c> so</c><03:12:42.479><c> this</c><03:12:42.600><c> is</c><03:12:42.720><c> an</c><03:12:43.160><c> attempt</c><03:12:43.520><c> to</c>

03:12:43.670 --> 03:12:43.680 align:start position:0%
data set uh so this is an attempt to
 

03:12:43.680 --> 03:12:45.910 align:start position:0%
data set uh so this is an attempt to
basically<03:12:44.160><c> collect</c><03:12:44.960><c> really</c><03:12:45.279><c> high</c><03:12:45.479><c> quality</c>

03:12:45.910 --> 03:12:45.920 align:start position:0%
basically collect really high quality
 

03:12:45.920 --> 03:12:48.910 align:start position:0%
basically collect really high quality
common<03:12:46.279><c> coll</c><03:12:47.279><c> data</c><03:12:47.920><c> and</c><03:12:48.080><c> filter</c><03:12:48.439><c> it</c><03:12:48.600><c> in</c><03:12:48.760><c> this</c>

03:12:48.910 --> 03:12:48.920 align:start position:0%
common coll data and filter it in this
 

03:12:48.920 --> 03:12:51.510 align:start position:0%
common coll data and filter it in this
case<03:12:49.080><c> to</c><03:12:49.279><c> 15</c><03:12:49.600><c> trillion</c><03:12:50.160><c> tokens</c><03:12:51.160><c> and</c><03:12:51.239><c> then</c><03:12:51.399><c> in</c>

03:12:51.510 --> 03:12:51.520 align:start position:0%
case to 15 trillion tokens and then in
 

03:12:51.520 --> 03:12:52.630 align:start position:0%
case to 15 trillion tokens and then in
addition<03:12:51.800><c> to</c><03:12:51.920><c> that</c><03:12:52.080><c> more</c><03:12:52.239><c> recently</c>

03:12:52.630 --> 03:12:52.640 align:start position:0%
addition to that more recently
 

03:12:52.640 --> 03:12:55.269 align:start position:0%
addition to that more recently
huggingface<03:12:53.200><c> released</c><03:12:53.760><c> this</c><03:12:54.160><c> fine</c><03:12:54.520><c> web</c><03:12:54.720><c> edu</c>

03:12:55.269 --> 03:12:55.279 align:start position:0%
huggingface released this fine web edu
 

03:12:55.279 --> 03:12:58.229 align:start position:0%
huggingface released this fine web edu
subset<03:12:56.160><c> which</c><03:12:56.279><c> is</c><03:12:56.479><c> 1.3</c><03:12:57.040><c> trillion</c><03:12:57.880><c> of</c>

03:12:58.229 --> 03:12:58.239 align:start position:0%
subset which is 1.3 trillion of
 

03:12:58.239 --> 03:13:01.309 align:start position:0%
subset which is 1.3 trillion of
educational<03:12:59.239><c> and</c><03:12:59.840><c> 5.4</c><03:13:00.359><c> trillion</c><03:13:00.760><c> of</c><03:13:01.120><c> high</c>

03:13:01.309 --> 03:13:01.319 align:start position:0%
educational and 5.4 trillion of high
 

03:13:01.319 --> 03:13:03.429 align:start position:0%
educational and 5.4 trillion of high
educational<03:13:01.840><c> content</c><03:13:02.800><c> so</c><03:13:02.960><c> basically</c><03:13:03.279><c> they're</c>

03:13:03.429 --> 03:13:03.439 align:start position:0%
educational content so basically they're
 

03:13:03.439 --> 03:13:06.229 align:start position:0%
educational content so basically they're
trying<03:13:03.640><c> to</c><03:13:03.840><c> filter</c><03:13:04.399><c> common</c><03:13:04.760><c> C</c><03:13:05.319><c> to</c><03:13:05.760><c> very</c><03:13:06.040><c> high</c>

03:13:06.229 --> 03:13:06.239 align:start position:0%
trying to filter common C to very high
 

03:13:06.239 --> 03:13:09.389 align:start position:0%
trying to filter common C to very high
quality<03:13:06.880><c> educational</c><03:13:07.800><c> subsets</c><03:13:08.800><c> and</c><03:13:09.200><c> uh</c><03:13:09.319><c> this</c>

03:13:09.389 --> 03:13:09.399 align:start position:0%
quality educational subsets and uh this
 

03:13:09.399 --> 03:13:11.389 align:start position:0%
quality educational subsets and uh this
is<03:13:09.560><c> the</c><03:13:09.680><c> one</c><03:13:09.840><c> that</c><03:13:09.960><c> we</c><03:13:10.120><c> will</c><03:13:10.319><c> use</c><03:13:11.000><c> there's</c><03:13:11.239><c> a</c>

03:13:11.389 --> 03:13:11.399 align:start position:0%
is the one that we will use there's a
 

03:13:11.399 --> 03:13:14.550 align:start position:0%
is the one that we will use there's a
long<03:13:12.239><c> uh</c><03:13:12.399><c> web</c><03:13:12.600><c> page</c><03:13:12.920><c> here</c><03:13:13.160><c> on</c><03:13:13.520><c> fine</c><03:13:13.840><c> web</c><03:13:14.399><c> and</c>

03:13:14.550 --> 03:13:14.560 align:start position:0%
long uh web page here on fine web and
 

03:13:14.560 --> 03:13:16.070 align:start position:0%
long uh web page here on fine web and
they<03:13:14.680><c> go</c><03:13:14.840><c> into</c><03:13:15.000><c> a</c><03:13:15.120><c> ton</c><03:13:15.279><c> of</c><03:13:15.399><c> detail</c><03:13:15.720><c> about</c><03:13:15.920><c> how</c>

03:13:16.070 --> 03:13:16.080 align:start position:0%
they go into a ton of detail about how
 

03:13:16.080 --> 03:13:17.750 align:start position:0%
they go into a ton of detail about how
they<03:13:16.359><c> process</c><03:13:16.720><c> the</c><03:13:16.840><c> data</c><03:13:17.200><c> which</c><03:13:17.319><c> is</c><03:13:17.520><c> really</c>

03:13:17.750 --> 03:13:17.760 align:start position:0%
they process the data which is really
 

03:13:17.760 --> 03:13:19.429 align:start position:0%
they process the data which is really
fascinating<03:13:18.200><c> reading</c><03:13:18.600><c> by</c><03:13:18.680><c> the</c><03:13:18.800><c> way</c><03:13:19.239><c> and</c><03:13:19.359><c> I</c>

03:13:19.429 --> 03:13:19.439 align:start position:0%
fascinating reading by the way and I
 

03:13:19.439 --> 03:13:20.670 align:start position:0%
fascinating reading by the way and I
would<03:13:19.600><c> definitely</c><03:13:20.000><c> recommend</c><03:13:20.399><c> if</c><03:13:20.520><c> you're</c>

03:13:20.670 --> 03:13:20.680 align:start position:0%
would definitely recommend if you're
 

03:13:20.680 --> 03:13:22.710 align:start position:0%
would definitely recommend if you're
interested<03:13:21.000><c> into</c><03:13:21.279><c> Data</c><03:13:21.479><c> mixtures</c><03:13:21.840><c> and</c><03:13:22.000><c> so</c><03:13:22.120><c> on</c>

03:13:22.710 --> 03:13:22.720 align:start position:0%
interested into Data mixtures and so on
 

03:13:22.720 --> 03:13:24.229 align:start position:0%
interested into Data mixtures and so on
and<03:13:22.880><c> how</c><03:13:23.080><c> data</c><03:13:23.319><c> gets</c><03:13:23.560><c> processed</c><03:13:23.920><c> at</c><03:13:24.040><c> these</c>

03:13:24.229 --> 03:13:24.239 align:start position:0%
and how data gets processed at these
 

03:13:24.239 --> 03:13:27.190 align:start position:0%
and how data gets processed at these
scales<03:13:24.640><c> a</c><03:13:24.800><c> look</c><03:13:24.920><c> at</c><03:13:25.080><c> this</c><03:13:25.520><c> uh</c><03:13:25.840><c> page</c><03:13:26.840><c> and</c><03:13:26.960><c> more</c>

03:13:27.190 --> 03:13:27.200 align:start position:0%
scales a look at this uh page and more
 

03:13:27.200 --> 03:13:28.469 align:start position:0%
scales a look at this uh page and more
specifically<03:13:27.680><c> we'll</c><03:13:27.840><c> be</c><03:13:28.000><c> working</c><03:13:28.239><c> with</c><03:13:28.359><c> the</c>

03:13:28.469 --> 03:13:28.479 align:start position:0%
specifically we'll be working with the
 

03:13:28.479 --> 03:13:32.150 align:start position:0%
specifically we'll be working with the
fine<03:13:28.760><c> web</c><03:13:28.920><c> edu</c><03:13:29.720><c> I</c><03:13:30.000><c> think</c><03:13:31.000><c> and</c><03:13:31.279><c> it's</c><03:13:31.479><c> basically</c>

03:13:32.150 --> 03:13:32.160 align:start position:0%
fine web edu I think and it's basically
 

03:13:32.160 --> 03:13:34.190 align:start position:0%
fine web edu I think and it's basically
educational<03:13:32.680><c> content</c><03:13:32.960><c> from</c><03:13:33.160><c> the</c>

03:13:34.190 --> 03:13:34.200 align:start position:0%
educational content from the
 

03:13:34.200 --> 03:13:36.269 align:start position:0%
educational content from the
internet<03:13:35.200><c> uh</c><03:13:35.319><c> they</c><03:13:35.439><c> show</c><03:13:35.720><c> that</c><03:13:35.840><c> training</c><03:13:36.120><c> on</c>

03:13:36.269 --> 03:13:36.279 align:start position:0%
internet uh they show that training on
 

03:13:36.279 --> 03:13:39.469 align:start position:0%
internet uh they show that training on
educational<03:13:36.800><c> content</c><03:13:37.359><c> in</c><03:13:37.800><c> in</c><03:13:38.040><c> their</c><03:13:38.279><c> metrics</c>

03:13:39.469 --> 03:13:39.479 align:start position:0%
educational content in in their metrics
 

03:13:39.479 --> 03:13:43.590 align:start position:0%
educational content in in their metrics
um<03:13:40.479><c> uh</c><03:13:41.080><c> works</c><03:13:41.359><c> really</c><03:13:41.600><c> really</c><03:13:42.319><c> well</c><03:13:43.319><c> and</c><03:13:43.439><c> we're</c>

03:13:43.590 --> 03:13:43.600 align:start position:0%
um uh works really really well and we're
 

03:13:43.600 --> 03:13:46.389 align:start position:0%
um uh works really really well and we're
going<03:13:43.680><c> to</c><03:13:43.840><c> use</c><03:13:44.080><c> this</c><03:13:44.279><c> sample</c><03:13:44.800><c> 10</c><03:13:45.640><c> billion</c>

03:13:46.389 --> 03:13:46.399 align:start position:0%
going to use this sample 10 billion
 

03:13:46.399 --> 03:13:49.229 align:start position:0%
going to use this sample 10 billion
tokens<03:13:47.319><c> subsample</c><03:13:48.000><c> of</c><03:13:48.239><c> it</c><03:13:48.800><c> because</c><03:13:49.000><c> we're</c><03:13:49.120><c> not</c>

03:13:49.229 --> 03:13:49.239 align:start position:0%
tokens subsample of it because we're not
 

03:13:49.239 --> 03:13:50.309 align:start position:0%
tokens subsample of it because we're not
going<03:13:49.319><c> to</c><03:13:49.399><c> be</c><03:13:49.479><c> training</c><03:13:49.720><c> on</c><03:13:49.840><c> trillions</c><03:13:50.160><c> of</c>

03:13:50.309 --> 03:13:50.319 align:start position:0%
going to be training on trillions of
 

03:13:50.319 --> 03:13:52.870 align:start position:0%
going to be training on trillions of
tokens<03:13:51.080><c> uh</c><03:13:51.160><c> we're</c><03:13:51.319><c> just</c><03:13:51.399><c> going</c><03:13:51.520><c> to</c><03:13:51.640><c> train</c><03:13:52.040><c> on</c>

03:13:52.870 --> 03:13:52.880 align:start position:0%
tokens uh we're just going to train on
 

03:13:52.880 --> 03:13:56.309 align:start position:0%
tokens uh we're just going to train on
uh<03:13:53.120><c> 10</c><03:13:53.399><c> billion</c><03:13:54.040><c> sample</c><03:13:54.640><c> of</c><03:13:54.840><c> the</c><03:13:55.080><c> fine</c><03:13:55.279><c> web</c><03:13:55.439><c> edu</c>

03:13:56.309 --> 03:13:56.319 align:start position:0%
uh 10 billion sample of the fine web edu
 

03:13:56.319 --> 03:13:58.070 align:start position:0%
uh 10 billion sample of the fine web edu
because<03:13:56.560><c> empirically</c><03:13:57.040><c> in</c><03:13:57.120><c> my</c><03:13:57.319><c> previous</c><03:13:57.760><c> few</c>

03:13:58.070 --> 03:13:58.080 align:start position:0%
because empirically in my previous few
 

03:13:58.080 --> 03:14:00.150 align:start position:0%
because empirically in my previous few
experiments<03:13:58.960><c> this</c><03:13:59.160><c> actually</c><03:13:59.439><c> suffices</c><03:13:59.960><c> to</c>

03:14:00.150 --> 03:14:00.160 align:start position:0%
experiments this actually suffices to
 

03:14:00.160 --> 03:14:02.750 align:start position:0%
experiments this actually suffices to
really<03:14:00.359><c> get</c><03:14:00.520><c> close</c><03:14:00.800><c> to</c><03:14:00.920><c> gpt2</c><03:14:01.600><c> Performance</c><03:14:02.600><c> and</c>

03:14:02.750 --> 03:14:02.760 align:start position:0%
really get close to gpt2 Performance and
 

03:14:02.760 --> 03:14:04.710 align:start position:0%
really get close to gpt2 Performance and
it's<03:14:03.200><c> um</c><03:14:03.439><c> simple</c><03:14:03.800><c> enough</c><03:14:03.960><c> to</c><03:14:04.080><c> work</c><03:14:04.319><c> with</c><03:14:04.640><c> and</c>

03:14:04.710 --> 03:14:04.720 align:start position:0%
it's um simple enough to work with and
 

03:14:04.720 --> 03:14:07.710 align:start position:0%
it's um simple enough to work with and
so<03:14:04.920><c> let's</c><03:14:05.120><c> work</c><03:14:05.319><c> with</c><03:14:05.479><c> the</c><03:14:05.680><c> sample</c><03:14:06.080><c> 10</c><03:14:06.760><c> uh</c><03:14:06.920><c> BT</c>

03:14:07.710 --> 03:14:07.720 align:start position:0%
so let's work with the sample 10 uh BT
 

03:14:07.720 --> 03:14:10.670 align:start position:0%
so let's work with the sample 10 uh BT
so<03:14:08.080><c> our</c><03:14:08.359><c> goal</c><03:14:08.600><c> will</c><03:14:08.760><c> be</c><03:14:08.920><c> to</c><03:14:09.479><c> download</c><03:14:09.840><c> it</c>

03:14:10.670 --> 03:14:10.680 align:start position:0%
so our goal will be to download it
 

03:14:10.680 --> 03:14:12.710 align:start position:0%
so our goal will be to download it
process<03:14:11.000><c> it</c><03:14:11.560><c> and</c><03:14:11.720><c> make</c><03:14:11.840><c> sure</c><03:14:12.080><c> that</c><03:14:12.239><c> our</c><03:14:12.479><c> data</c>

03:14:12.710 --> 03:14:12.720 align:start position:0%
process it and make sure that our data
 

03:14:12.720 --> 03:14:15.070 align:start position:0%
process it and make sure that our data
loader<03:14:13.080><c> can</c><03:14:13.200><c> work</c><03:14:13.439><c> with</c><03:14:13.560><c> it</c><03:14:14.040><c> so</c><03:14:14.479><c> let's</c><03:14:14.720><c> get</c><03:14:14.880><c> to</c>

03:14:15.070 --> 03:14:15.080 align:start position:0%
loader can work with it so let's get to
 

03:14:15.080 --> 03:14:18.510 align:start position:0%
loader can work with it so let's get to
that<03:14:15.680><c> okay</c><03:14:15.800><c> so</c><03:14:15.920><c> I</c><03:14:16.040><c> introduced</c><03:14:16.600><c> another</c><03:14:17.520><c> um</c>

03:14:18.510 --> 03:14:18.520 align:start position:0%
that okay so I introduced another um
 

03:14:18.520 --> 03:14:21.349 align:start position:0%
that okay so I introduced another um
file<03:14:18.920><c> here</c><03:14:19.640><c> that</c><03:14:19.760><c> will</c><03:14:19.960><c> basically</c><03:14:20.960><c> download</c>

03:14:21.349 --> 03:14:21.359 align:start position:0%
file here that will basically download
 

03:14:21.359 --> 03:14:23.990 align:start position:0%
file here that will basically download
Fine<03:14:21.640><c> web</c><03:14:21.800><c> edu</c><03:14:22.239><c> from</c><03:14:22.439><c> huging</c><03:14:22.840><c> face</c><03:14:23.080><c> data</c><03:14:23.359><c> sets</c>

03:14:23.990 --> 03:14:24.000 align:start position:0%
Fine web edu from huging face data sets
 

03:14:24.000 --> 03:14:26.389 align:start position:0%
Fine web edu from huging face data sets
it<03:14:24.120><c> will</c><03:14:24.399><c> pre-process</c><03:14:25.120><c> and</c><03:14:25.520><c> pre-</c><03:14:25.840><c> tokenize</c>

03:14:26.389 --> 03:14:26.399 align:start position:0%
it will pre-process and pre- tokenize
 

03:14:26.399 --> 03:14:28.870 align:start position:0%
it will pre-process and pre- tokenize
all<03:14:26.520><c> of</c><03:14:26.640><c> the</c><03:14:26.800><c> data</c><03:14:27.560><c> and</c><03:14:27.680><c> it</c><03:14:27.760><c> will</c><03:14:28.040><c> save</c><03:14:28.600><c> data</c>

03:14:28.870 --> 03:14:28.880 align:start position:0%
all of the data and it will save data
 

03:14:28.880 --> 03:14:34.349 align:start position:0%
all of the data and it will save data
shards<03:14:29.840><c> to</c><03:14:30.239><c> a</c><03:14:30.840><c> uh</c><03:14:30.960><c> folder</c><03:14:31.640><c> on</c><03:14:32.239><c> um</c><03:14:32.680><c> local</c><03:14:33.359><c> disk</c>

03:14:34.349 --> 03:14:34.359 align:start position:0%
shards to a uh folder on um local disk
 

03:14:34.359 --> 03:14:38.110 align:start position:0%
shards to a uh folder on um local disk
and<03:14:34.640><c> so</c><03:14:35.640><c> while</c><03:14:35.960><c> this</c><03:14:36.080><c> is</c><03:14:36.359><c> running</c><03:14:37.359><c> uh</c><03:14:37.600><c> just</c>

03:14:38.110 --> 03:14:38.120 align:start position:0%
and so while this is running uh just
 

03:14:38.120 --> 03:14:40.349 align:start position:0%
and so while this is running uh just
wanted<03:14:38.359><c> to</c><03:14:38.520><c> briefly</c><03:14:38.840><c> mention</c><03:14:39.279><c> that</c><03:14:40.080><c> you</c><03:14:40.160><c> can</c>

03:14:40.349 --> 03:14:40.359 align:start position:0%
wanted to briefly mention that you can
 

03:14:40.359 --> 03:14:41.790 align:start position:0%
wanted to briefly mention that you can
kind<03:14:40.479><c> of</c><03:14:40.640><c> look</c><03:14:40.800><c> through</c><03:14:41.000><c> the</c><03:14:41.160><c> data</c><03:14:41.359><c> set</c><03:14:41.479><c> viewer</c>

03:14:41.790 --> 03:14:41.800 align:start position:0%
kind of look through the data set viewer
 

03:14:41.800 --> 03:14:42.990 align:start position:0%
kind of look through the data set viewer
here<03:14:41.920><c> just</c><03:14:42.000><c> to</c><03:14:42.120><c> get</c><03:14:42.239><c> a</c><03:14:42.319><c> sense</c><03:14:42.479><c> of</c><03:14:42.640><c> what's</c><03:14:42.840><c> in</c>

03:14:42.990 --> 03:14:43.000 align:start position:0%
here just to get a sense of what's in
 

03:14:43.000 --> 03:14:45.110 align:start position:0%
here just to get a sense of what's in
here<03:14:43.600><c> and</c><03:14:43.760><c> it's</c><03:14:43.880><c> kind</c><03:14:44.000><c> of</c><03:14:44.120><c> interesting</c><03:14:44.520><c> I</c><03:14:44.600><c> mean</c>

03:14:45.110 --> 03:14:45.120 align:start position:0%
here and it's kind of interesting I mean
 

03:14:45.120 --> 03:14:47.110 align:start position:0%
here and it's kind of interesting I mean
it's<03:14:45.239><c> a</c><03:14:46.080><c> it</c><03:14:46.239><c> basically</c><03:14:46.520><c> looks</c><03:14:46.720><c> like</c><03:14:46.840><c> it's</c>

03:14:47.110 --> 03:14:47.120 align:start position:0%
it's a it basically looks like it's
 

03:14:47.120 --> 03:14:48.790 align:start position:0%
it's a it basically looks like it's
working<03:14:47.439><c> fairly</c><03:14:47.800><c> well</c><03:14:48.279><c> like</c><03:14:48.399><c> it's</c><03:14:48.560><c> talking</c>

03:14:48.790 --> 03:14:48.800 align:start position:0%
working fairly well like it's talking
 

03:14:48.800 --> 03:14:51.429 align:start position:0%
working fairly well like it's talking
about<03:14:49.000><c> nuclear</c><03:14:49.359><c> energy</c><03:14:49.680><c> in</c><03:14:50.239><c> France</c><03:14:51.239><c> it's</c>

03:14:51.429 --> 03:14:51.439 align:start position:0%
about nuclear energy in France it's
 

03:14:51.439 --> 03:14:52.309 align:start position:0%
about nuclear energy in France it's
talking

03:14:52.309 --> 03:14:52.319 align:start position:0%
talking
 

03:14:52.319 --> 03:14:54.389 align:start position:0%
talking
about<03:14:53.319><c> Mexican</c>

03:14:54.389 --> 03:14:54.399 align:start position:0%
about Mexican
 

03:14:54.399 --> 03:14:58.110 align:start position:0%
about Mexican
America<03:14:55.399><c> some</c><03:14:55.680><c> mac</c><03:14:56.040><c> PJs</c><03:14:56.800><c> Etc</c><03:14:57.359><c> so</c><03:14:57.800><c> actually</c><03:14:58.000><c> it</c>

03:14:58.110 --> 03:14:58.120 align:start position:0%
America some mac PJs Etc so actually it
 

03:14:58.120 --> 03:14:59.590 align:start position:0%
America some mac PJs Etc so actually it
seems<03:14:58.319><c> like</c><03:14:58.439><c> their</c><03:14:58.600><c> filters</c><03:14:59.120><c> are</c><03:14:59.279><c> working</c>

03:14:59.590 --> 03:14:59.600 align:start position:0%
seems like their filters are working
 

03:14:59.600 --> 03:15:01.790 align:start position:0%
seems like their filters are working
pretty<03:14:59.800><c> well</c><03:15:00.640><c> uh</c><03:15:00.760><c> the</c><03:15:00.880><c> filters</c><03:15:01.359><c> here</c><03:15:01.560><c> by</c><03:15:01.680><c> the</c>

03:15:01.790 --> 03:15:01.800 align:start position:0%
pretty well uh the filters here by the
 

03:15:01.800 --> 03:15:04.550 align:start position:0%
pretty well uh the filters here by the
way<03:15:02.239><c> were</c><03:15:02.479><c> applied</c><03:15:02.800><c> automatically</c><03:15:03.439><c> using</c><03:15:04.160><c> um</c>

03:15:04.550 --> 03:15:04.560 align:start position:0%
way were applied automatically using um
 

03:15:04.560 --> 03:15:08.070 align:start position:0%
way were applied automatically using um
llama<03:15:04.920><c> 370b</c><03:15:05.720><c> I</c><03:15:05.800><c> believe</c><03:15:06.600><c> and</c><03:15:06.720><c> so</c><03:15:07.520><c> uh</c><03:15:07.640><c> basically</c>

03:15:08.070 --> 03:15:08.080 align:start position:0%
llama 370b I believe and so uh basically
 

03:15:08.080 --> 03:15:10.269 align:start position:0%
llama 370b I believe and so uh basically
llms<03:15:08.720><c> are</c><03:15:08.960><c> judging</c><03:15:09.520><c> which</c><03:15:09.760><c> content</c><03:15:10.080><c> is</c>

03:15:10.269 --> 03:15:10.279 align:start position:0%
llms are judging which content is
 

03:15:10.279 --> 03:15:11.950 align:start position:0%
llms are judging which content is
educational<03:15:10.920><c> and</c><03:15:11.120><c> that</c><03:15:11.359><c> ends</c><03:15:11.520><c> up</c><03:15:11.680><c> making</c><03:15:11.840><c> it</c>

03:15:11.950 --> 03:15:11.960 align:start position:0%
educational and that ends up making it
 

03:15:11.960 --> 03:15:13.950 align:start position:0%
educational and that ends up making it
through<03:15:12.120><c> the</c><03:15:12.319><c> filter</c><03:15:13.319><c> uh</c><03:15:13.439><c> so</c><03:15:13.560><c> that's</c><03:15:13.720><c> pretty</c>

03:15:13.950 --> 03:15:13.960 align:start position:0%
through the filter uh so that's pretty
 

03:15:13.960 --> 03:15:16.469 align:start position:0%
through the filter uh so that's pretty
cool<03:15:14.479><c> now</c><03:15:14.600><c> in</c><03:15:14.720><c> terms</c><03:15:14.920><c> of</c><03:15:15.040><c> the</c><03:15:15.200><c> script</c><03:15:15.520><c> itself</c>

03:15:16.469 --> 03:15:16.479 align:start position:0%
cool now in terms of the script itself
 

03:15:16.479 --> 03:15:17.590 align:start position:0%
cool now in terms of the script itself
I'm<03:15:16.600><c> not</c><03:15:16.680><c> going</c><03:15:16.800><c> to</c><03:15:17.000><c> go</c><03:15:17.120><c> through</c><03:15:17.279><c> the</c><03:15:17.359><c> full</c>

03:15:17.590 --> 03:15:17.600 align:start position:0%
I'm not going to go through the full
 

03:15:17.600 --> 03:15:19.630 align:start position:0%
I'm not going to go through the full
script<03:15:18.040><c> because</c><03:15:18.359><c> it's</c><03:15:18.600><c> not</c><03:15:19.040><c> as</c><03:15:19.199><c> interesting</c>

03:15:19.630 --> 03:15:19.640 align:start position:0%
script because it's not as interesting
 

03:15:19.640 --> 03:15:22.389 align:start position:0%
script because it's not as interesting
and<03:15:19.880><c> not</c><03:15:20.199><c> as</c><03:15:20.359><c> llm</c><03:15:20.880><c> Centric</c><03:15:21.720><c> but</c><03:15:21.880><c> when</c><03:15:22.000><c> you</c><03:15:22.120><c> run</c>

03:15:22.389 --> 03:15:22.399 align:start position:0%
and not as llm Centric but when you run
 

03:15:22.399 --> 03:15:24.269 align:start position:0%
and not as llm Centric but when you run
this<03:15:22.600><c> basically</c><03:15:23.560><c> number</c><03:15:23.800><c> one</c><03:15:23.960><c> we're</c><03:15:24.080><c> going</c><03:15:24.160><c> to</c>

03:15:24.269 --> 03:15:24.279 align:start position:0%
this basically number one we're going to
 

03:15:24.279 --> 03:15:26.670 align:start position:0%
this basically number one we're going to
load<03:15:24.520><c> the</c><03:15:24.640><c> data</c><03:15:24.880><c> set</c><03:15:25.560><c> uh</c><03:15:25.760><c> which</c><03:15:26.279><c> this</c><03:15:26.359><c> is</c><03:15:26.479><c> all</c>

03:15:26.670 --> 03:15:26.680 align:start position:0%
load the data set uh which this is all
 

03:15:26.680 --> 03:15:28.389 align:start position:0%
load the data set uh which this is all
huging<03:15:27.040><c> face</c><03:15:27.239><c> code</c><03:15:27.479><c> running</c><03:15:27.840><c> this</c><03:15:28.239><c> you're</c>

03:15:28.389 --> 03:15:28.399 align:start position:0%
huging face code running this you're
 

03:15:28.399 --> 03:15:31.150 align:start position:0%
huging face code running this you're
going<03:15:28.520><c> to</c><03:15:28.680><c> need</c><03:15:28.920><c> to</c><03:15:29.640><c> uh</c><03:15:29.760><c> pip</c><03:15:30.000><c> install</c><03:15:30.399><c> data</c>

03:15:31.150 --> 03:15:31.160 align:start position:0%
going to need to uh pip install data
 

03:15:31.160 --> 03:15:35.229 align:start position:0%
going to need to uh pip install data
sets<03:15:32.439><c> um</c><03:15:33.439><c> so</c><03:15:33.600><c> it's</c><03:15:33.760><c> downloading</c><03:15:34.199><c> the</c><03:15:34.319><c> data</c><03:15:34.560><c> set</c>

03:15:35.229 --> 03:15:35.239 align:start position:0%
sets um so it's downloading the data set
 

03:15:35.239 --> 03:15:37.469 align:start position:0%
sets um so it's downloading the data set
then<03:15:35.359><c> it</c><03:15:35.479><c> is</c><03:15:35.880><c> tokenizing</c><03:15:36.880><c> all</c><03:15:37.040><c> of</c><03:15:37.199><c> the</c>

03:15:37.469 --> 03:15:37.479 align:start position:0%
then it is tokenizing all of the
 

03:15:37.479 --> 03:15:39.750 align:start position:0%
then it is tokenizing all of the
documents<03:15:38.160><c> inside</c><03:15:38.520><c> this</c><03:15:38.680><c> data</c><03:15:38.920><c> set</c><03:15:39.479><c> now</c><03:15:39.640><c> when</c>

03:15:39.750 --> 03:15:39.760 align:start position:0%
documents inside this data set now when
 

03:15:39.760 --> 03:15:42.189 align:start position:0%
documents inside this data set now when
we<03:15:39.920><c> tokenize</c><03:15:40.399><c> the</c><03:15:40.560><c> documents</c><03:15:41.520><c> you'll</c><03:15:41.760><c> notice</c>

03:15:42.189 --> 03:15:42.199 align:start position:0%
we tokenize the documents you'll notice
 

03:15:42.199 --> 03:15:46.030 align:start position:0%
we tokenize the documents you'll notice
that<03:15:42.760><c> um</c><03:15:43.640><c> to</c><03:15:43.800><c> tokenize</c><03:15:44.199><c> a</c><03:15:44.279><c> single</c><03:15:44.840><c> document</c><03:15:45.840><c> uh</c>

03:15:46.030 --> 03:15:46.040 align:start position:0%
that um to tokenize a single document uh
 

03:15:46.040 --> 03:15:47.469 align:start position:0%
that um to tokenize a single document uh
we<03:15:46.520><c> first</c>

03:15:47.469 --> 03:15:47.479 align:start position:0%
we first
 

03:15:47.479 --> 03:15:49.710 align:start position:0%
we first
start<03:15:47.760><c> the</c><03:15:47.960><c> tokens</c><03:15:48.560><c> with</c><03:15:48.800><c> the</c><03:15:49.000><c> end</c><03:15:49.199><c> of</c><03:15:49.399><c> text</c>

03:15:49.710 --> 03:15:49.720 align:start position:0%
start the tokens with the end of text
 

03:15:49.720 --> 03:15:51.710 align:start position:0%
start the tokens with the end of text
token<03:15:50.600><c> and</c><03:15:50.720><c> this</c><03:15:50.800><c> is</c><03:15:50.880><c> a</c><03:15:51.040><c> special</c><03:15:51.279><c> token</c><03:15:51.520><c> in</c><03:15:51.600><c> the</c>

03:15:51.710 --> 03:15:51.720 align:start position:0%
token and this is a special token in the
 

03:15:51.720 --> 03:15:54.150 align:start position:0%
token and this is a special token in the
gpt2<03:15:52.199><c> tokenizer</c><03:15:52.720><c> as</c><03:15:52.800><c> you</c><03:15:52.920><c> know</c><03:15:53.279><c> so</c>

03:15:54.150 --> 03:15:54.160 align:start position:0%
gpt2 tokenizer as you know so
 

03:15:54.160 --> 03:15:57.670 align:start position:0%
gpt2 tokenizer as you know so
50256<03:15:55.160><c> is</c><03:15:55.279><c> the</c><03:15:55.479><c> ID</c><03:15:56.040><c> of</c><03:15:56.199><c> the</c><03:15:56.319><c> end</c><03:15:56.479><c> of</c><03:15:56.680><c> text</c><03:15:57.520><c> and</c>

03:15:57.670 --> 03:15:57.680 align:start position:0%
50256 is the ID of the end of text and
 

03:15:57.680 --> 03:15:59.269 align:start position:0%
50256 is the ID of the end of text and
this<03:15:57.800><c> is</c><03:15:57.960><c> what</c><03:15:58.120><c> begins</c><03:15:58.479><c> a</c><03:15:58.680><c> document</c><03:15:59.080><c> even</c>

03:15:59.269 --> 03:15:59.279 align:start position:0%
this is what begins a document even
 

03:15:59.279 --> 03:16:01.189 align:start position:0%
this is what begins a document even
though<03:15:59.399><c> it's</c><03:15:59.560><c> called</c><03:15:59.760><c> end</c><03:15:59.960><c> of</c><03:16:00.120><c> text</c><03:16:00.840><c> but</c><03:16:01.080><c> this</c>

03:16:01.189 --> 03:16:01.199 align:start position:0%
though it's called end of text but this
 

03:16:01.199 --> 03:16:03.229 align:start position:0%
though it's called end of text but this
is<03:16:01.640><c> uh</c><03:16:01.760><c> the</c><03:16:01.880><c> first</c><03:16:02.160><c> token</c><03:16:02.479><c> that</c><03:16:02.600><c> begins</c><03:16:03.000><c> a</c>

03:16:03.229 --> 03:16:03.239 align:start position:0%
is uh the first token that begins a
 

03:16:03.239 --> 03:16:06.070 align:start position:0%
is uh the first token that begins a
document<03:16:04.239><c> then</c><03:16:04.439><c> we</c><03:16:04.640><c> extend</c><03:16:05.040><c> with</c><03:16:05.239><c> all</c><03:16:05.359><c> of</c><03:16:05.560><c> the</c>

03:16:06.070 --> 03:16:06.080 align:start position:0%
document then we extend with all of the
 

03:16:06.080 --> 03:16:08.510 align:start position:0%
document then we extend with all of the
tokens<03:16:06.439><c> of</c><03:16:06.640><c> that</c><03:16:06.880><c> document</c><03:16:07.880><c> then</c><03:16:08.000><c> we</c><03:16:08.120><c> create</c><03:16:08.359><c> a</c>

03:16:08.510 --> 03:16:08.520 align:start position:0%
tokens of that document then we create a
 

03:16:08.520 --> 03:16:11.349 align:start position:0%
tokens of that document then we create a
numpy<03:16:08.960><c> array</c><03:16:09.279><c> out</c><03:16:09.399><c> of</c><03:16:09.600><c> that</c><03:16:10.439><c> we</c><03:16:10.600><c> make</c><03:16:10.720><c> sure</c>

03:16:11.349 --> 03:16:11.359 align:start position:0%
numpy array out of that we make sure
 

03:16:11.359 --> 03:16:14.910 align:start position:0%
numpy array out of that we make sure
that<03:16:11.520><c> all</c><03:16:11.680><c> the</c><03:16:11.840><c> tokens</c><03:16:12.239><c> are</c><03:16:12.920><c> between</c>

03:16:14.910 --> 03:16:14.920 align:start position:0%
that all the tokens are between
 

03:16:14.920 --> 03:16:17.550 align:start position:0%
that all the tokens are between
oh<03:16:15.920><c> okay</c><03:16:16.040><c> let</c><03:16:16.160><c> me</c><03:16:16.279><c> debug</c><03:16:16.680><c> this</c>

03:16:17.550 --> 03:16:17.560 align:start position:0%
oh okay let me debug this
 

03:16:17.560 --> 03:16:19.309 align:start position:0%
oh okay let me debug this
okay<03:16:17.680><c> so</c><03:16:17.880><c> apologies</c><03:16:18.279><c> for</c><03:16:18.520><c> that</c><03:16:18.920><c> uh</c><03:16:19.040><c> it</c><03:16:19.160><c> just</c>

03:16:19.309 --> 03:16:19.319 align:start position:0%
okay so apologies for that uh it just
 

03:16:19.319 --> 03:16:21.189 align:start position:0%
okay so apologies for that uh it just
had<03:16:19.439><c> to</c><03:16:19.560><c> do</c><03:16:19.800><c> with</c><03:16:20.000><c> me</c><03:16:20.160><c> using</c><03:16:20.439><c> a</c><03:16:20.560><c> float</c><03:16:20.880><c> division</c>

03:16:21.189 --> 03:16:21.199 align:start position:0%
had to do with me using a float division
 

03:16:21.199 --> 03:16:23.189 align:start position:0%
had to do with me using a float division
in<03:16:21.359><c> Python</c><03:16:21.720><c> it</c><03:16:21.840><c> must</c><03:16:22.000><c> be</c><03:16:22.160><c> integer</c><03:16:22.560><c> division</c><03:16:23.040><c> so</c>

03:16:23.189 --> 03:16:23.199 align:start position:0%
in Python it must be integer division so
 

03:16:23.199 --> 03:16:25.110 align:start position:0%
in Python it must be integer division so
that<03:16:23.359><c> this</c><03:16:23.439><c> is</c><03:16:23.560><c> an</c><03:16:23.720><c> INT</c><03:16:24.000><c> and</c><03:16:24.160><c> everything</c><03:16:24.399><c> is</c>

03:16:25.110 --> 03:16:25.120 align:start position:0%
that this is an INT and everything is
 

03:16:25.120 --> 03:16:28.550 align:start position:0%
that this is an INT and everything is
nice<03:16:26.359><c> um</c><03:16:27.359><c> okay</c><03:16:27.520><c> but</c><03:16:27.720><c> basically</c><03:16:28.439><c> the</c>

03:16:28.550 --> 03:16:28.560 align:start position:0%
nice um okay but basically the
 

03:16:28.560 --> 03:16:29.870 align:start position:0%
nice um okay but basically the
tokenization<03:16:29.199><c> here</c><03:16:29.319><c> is</c><03:16:29.479><c> relatively</c>

03:16:29.870 --> 03:16:29.880 align:start position:0%
tokenization here is relatively
 

03:16:29.880 --> 03:16:32.870 align:start position:0%
tokenization here is relatively
straightforward<03:16:30.880><c> returns</c><03:16:31.279><c> tokens</c><03:16:31.840><c> in</c><03:16:32.040><c> mp.</c>

03:16:32.870 --> 03:16:32.880 align:start position:0%
straightforward returns tokens in mp.
 

03:16:32.880 --> 03:16:35.830 align:start position:0%
straightforward returns tokens in mp.
un6<03:16:33.880><c> uh</c><03:16:33.960><c> we're</c><03:16:34.120><c> using</c><03:16:34.399><c> .16</c><03:16:35.239><c> to</c><03:16:35.399><c> save</c><03:16:35.640><c> a</c><03:16:35.720><c> little</c>

03:16:35.830 --> 03:16:35.840 align:start position:0%
un6 uh we're using .16 to save a little
 

03:16:35.840 --> 03:16:39.670 align:start position:0%
un6 uh we're using .16 to save a little
bit<03:16:35.960><c> of</c><03:16:36.120><c> space</c><03:16:36.560><c> because</c><03:16:36.960><c> 2</c><03:16:37.600><c> to</c><03:16:37.840><c> the</c><03:16:38.080><c> 16us</c><03:16:38.960><c> 1</c><03:16:39.479><c> is</c>

03:16:39.670 --> 03:16:39.680 align:start position:0%
bit of space because 2 to the 16us 1 is
 

03:16:39.680 --> 03:16:43.030 align:start position:0%
bit of space because 2 to the 16us 1 is
65,000<03:16:40.680><c> so</c><03:16:40.920><c> the</c><03:16:41.000><c> gpt2</c><03:16:41.640><c> max</c><03:16:41.920><c> token</c><03:16:42.199><c> ID</c><03:16:42.479><c> is</c><03:16:42.800><c> well</c>

03:16:43.030 --> 03:16:43.040 align:start position:0%
65,000 so the gpt2 max token ID is well
 

03:16:43.040 --> 03:16:45.389 align:start position:0%
65,000 so the gpt2 max token ID is well
below<03:16:43.520><c> that</c><03:16:44.520><c> and</c><03:16:44.640><c> then</c><03:16:44.800><c> here</c><03:16:44.960><c> there's</c><03:16:45.120><c> a</c><03:16:45.239><c> bunch</c>

03:16:45.389 --> 03:16:45.399 align:start position:0%
below that and then here there's a bunch
 

03:16:45.399 --> 03:16:47.070 align:start position:0%
below that and then here there's a bunch
of<03:16:45.479><c> multiprocessing</c><03:16:46.319><c> code</c><03:16:46.680><c> and</c><03:16:46.960><c> it's</c>

03:16:47.070 --> 03:16:47.080 align:start position:0%
of multiprocessing code and it's
 

03:16:47.080 --> 03:16:48.389 align:start position:0%
of multiprocessing code and it's
honestly<03:16:47.439><c> not</c><03:16:47.600><c> that</c><03:16:47.760><c> exciting</c><03:16:48.080><c> so</c><03:16:48.199><c> I'm</c><03:16:48.279><c> not</c>

03:16:48.389 --> 03:16:48.399 align:start position:0%
honestly not that exciting so I'm not
 

03:16:48.399 --> 03:16:50.670 align:start position:0%
honestly not that exciting so I'm not
going<03:16:48.520><c> to</c><03:16:48.960><c> step</c><03:16:49.279><c> through</c><03:16:49.479><c> it</c><03:16:49.680><c> but</c><03:16:50.319><c> we're</c>

03:16:50.670 --> 03:16:50.680 align:start position:0%
going to step through it but we're
 

03:16:50.680 --> 03:16:52.790 align:start position:0%
going to step through it but we're
loading<03:16:51.040><c> the</c><03:16:51.160><c> data</c><03:16:51.399><c> set</c><03:16:51.640><c> we're</c><03:16:51.800><c> tokenizing</c><03:16:52.359><c> it</c>

03:16:52.790 --> 03:16:52.800 align:start position:0%
loading the data set we're tokenizing it
 

03:16:52.800 --> 03:16:55.150 align:start position:0%
loading the data set we're tokenizing it
and<03:16:52.920><c> we're</c><03:16:53.120><c> saving</c><03:16:53.560><c> everything</c><03:16:53.960><c> to</c><03:16:54.199><c> shards</c>

03:16:55.150 --> 03:16:55.160 align:start position:0%
and we're saving everything to shards
 

03:16:55.160 --> 03:16:58.150 align:start position:0%
and we're saving everything to shards
and<03:16:55.279><c> the</c><03:16:55.359><c> shards</c><03:16:55.760><c> are</c><03:16:55.960><c> numpy</c><03:16:56.800><c> files</c><03:16:57.800><c> uh</c><03:16:57.920><c> so</c>

03:16:58.150 --> 03:16:58.160 align:start position:0%
and the shards are numpy files uh so
 

03:16:58.160 --> 03:17:01.750 align:start position:0%
and the shards are numpy files uh so
just<03:16:58.279><c> storing</c><03:16:58.600><c> a</c><03:16:58.760><c> numpy</c><03:16:59.800><c> array</c><03:17:00.800><c> and</c><03:17:01.439><c> uh</c><03:17:01.640><c> which</c>

03:17:01.750 --> 03:17:01.760 align:start position:0%
just storing a numpy array and uh which
 

03:17:01.760 --> 03:17:03.550 align:start position:0%
just storing a numpy array and uh which
is<03:17:01.880><c> very</c><03:17:02.080><c> very</c><03:17:02.239><c> similar</c><03:17:02.520><c> to</c><03:17:02.640><c> torch</c>

03:17:03.550 --> 03:17:03.560 align:start position:0%
is very very similar to torch
 

03:17:03.560 --> 03:17:07.030 align:start position:0%
is very very similar to torch
tensors<03:17:04.560><c> and</c><03:17:04.920><c> the</c><03:17:05.120><c> first</c><03:17:05.439><c> Shard</c><03:17:05.920><c> 0000</c><03:17:06.760><c> is</c><03:17:06.840><c> a</c>

03:17:07.030 --> 03:17:07.040 align:start position:0%
tensors and the first Shard 0000 is a
 

03:17:07.040 --> 03:17:09.189 align:start position:0%
tensors and the first Shard 0000 is a
Val<03:17:07.520><c> a</c><03:17:07.680><c> validation</c><03:17:08.080><c> Shard</c><03:17:08.640><c> and</c><03:17:08.800><c> all</c><03:17:08.920><c> the</c><03:17:09.040><c> other</c>

03:17:09.189 --> 03:17:09.199 align:start position:0%
Val a validation Shard and all the other
 

03:17:09.199 --> 03:17:12.349 align:start position:0%
Val a validation Shard and all the other
shards<03:17:09.760><c> are</c><03:17:10.319><c> uh</c><03:17:10.439><c> training</c><03:17:10.760><c> shards</c><03:17:11.760><c> and</c><03:17:12.160><c> as</c><03:17:12.279><c> I</c>

03:17:12.349 --> 03:17:12.359 align:start position:0%
shards are uh training shards and as I
 

03:17:12.359 --> 03:17:14.030 align:start position:0%
shards are uh training shards and as I
mentioned<03:17:12.640><c> they</c><03:17:12.800><c> all</c><03:17:12.960><c> have</c><03:17:13.399><c> 100</c><03:17:13.680><c> million</c>

03:17:14.030 --> 03:17:14.040 align:start position:0%
mentioned they all have 100 million
 

03:17:14.040 --> 03:17:17.710 align:start position:0%
mentioned they all have 100 million
tokens<03:17:14.359><c> in</c><03:17:14.479><c> them</c><03:17:14.760><c> exactly</c><03:17:15.760><c> um</c><03:17:16.640><c> and</c><03:17:16.920><c> and</c><03:17:17.600><c> that</c>

03:17:17.710 --> 03:17:17.720 align:start position:0%
tokens in them exactly um and and that
 

03:17:17.720 --> 03:17:20.429 align:start position:0%
tokens in them exactly um and and that
just<03:17:17.920><c> makes</c><03:17:18.120><c> it</c><03:17:18.399><c> easier</c><03:17:18.720><c> to</c><03:17:18.920><c> work</c><03:17:19.160><c> with</c><03:17:19.800><c> as</c><03:17:20.279><c> to</c>

03:17:20.429 --> 03:17:20.439 align:start position:0%
just makes it easier to work with as to
 

03:17:20.439 --> 03:17:22.510 align:start position:0%
just makes it easier to work with as to
Shard<03:17:21.040><c> the</c><03:17:21.199><c> files</c><03:17:21.840><c> because</c><03:17:22.080><c> if</c><03:17:22.160><c> we</c><03:17:22.279><c> just</c><03:17:22.399><c> have</c>

03:17:22.510 --> 03:17:22.520 align:start position:0%
Shard the files because if we just have
 

03:17:22.520 --> 03:17:24.030 align:start position:0%
Shard the files because if we just have
a<03:17:22.640><c> single</c><03:17:22.920><c> massive</c><03:17:23.279><c> file</c><03:17:23.640><c> sometimes</c><03:17:23.800><c> they</c><03:17:23.920><c> can</c>

03:17:24.030 --> 03:17:24.040 align:start position:0%
a single massive file sometimes they can
 

03:17:24.040 --> 03:17:26.750 align:start position:0%
a single massive file sometimes they can
be<03:17:24.319><c> hard</c><03:17:24.479><c> to</c><03:17:24.600><c> work</c><03:17:24.760><c> with</c><03:17:25.000><c> on</c><03:17:25.160><c> the</c><03:17:25.319><c> disk</c><03:17:26.040><c> and</c><03:17:26.239><c> so</c>

03:17:26.750 --> 03:17:26.760 align:start position:0%
be hard to work with on the disk and so
 

03:17:26.760 --> 03:17:28.830 align:start position:0%
be hard to work with on the disk and so
sharting<03:17:27.199><c> it</c><03:17:27.319><c> is</c><03:17:27.479><c> just</c><03:17:27.640><c> kind</c><03:17:27.720><c> of</c><03:17:28.000><c> um</c><03:17:28.439><c> nicer</c>

03:17:28.830 --> 03:17:28.840 align:start position:0%
sharting it is just kind of um nicer
 

03:17:28.840 --> 03:17:30.070 align:start position:0%
sharting it is just kind of um nicer
from<03:17:29.000><c> that</c>

03:17:30.070 --> 03:17:30.080 align:start position:0%
from that
 

03:17:30.080 --> 03:17:32.389 align:start position:0%
from that
perspective<03:17:31.080><c> and</c><03:17:31.520><c> uh</c><03:17:31.840><c> yeah</c><03:17:31.960><c> so</c><03:17:32.120><c> we'll</c><03:17:32.279><c> just</c>

03:17:32.389 --> 03:17:32.399 align:start position:0%
perspective and uh yeah so we'll just
 

03:17:32.399 --> 03:17:36.269 align:start position:0%
perspective and uh yeah so we'll just
let<03:17:32.600><c> this</c><03:17:32.720><c> run</c><03:17:33.080><c> this</c><03:17:33.199><c> will</c><03:17:33.359><c> be</c><03:17:34.000><c> probably</c><03:17:35.279><c> um</c>

03:17:36.269 --> 03:17:36.279 align:start position:0%
let this run this will be probably um
 

03:17:36.279 --> 03:17:38.110 align:start position:0%
let this run this will be probably um
30ish<03:17:36.960><c> minutes</c><03:17:37.239><c> or</c><03:17:37.399><c> so</c><03:17:37.720><c> and</c><03:17:37.840><c> then</c><03:17:37.920><c> we're</c><03:17:38.040><c> going</c>

03:17:38.110 --> 03:17:38.120 align:start position:0%
30ish minutes or so and then we're going
 

03:17:38.120 --> 03:17:39.670 align:start position:0%
30ish minutes or so and then we're going
to<03:17:38.239><c> come</c><03:17:38.439><c> back</c><03:17:38.560><c> to</c><03:17:38.760><c> actually</c><03:17:39.000><c> train</c><03:17:39.319><c> on</c><03:17:39.520><c> this</c>

03:17:39.670 --> 03:17:39.680 align:start position:0%
to come back to actually train on this
 

03:17:39.680 --> 03:17:41.229 align:start position:0%
to come back to actually train on this
data<03:17:40.399><c> and</c><03:17:40.520><c> we're</c><03:17:40.680><c> going</c><03:17:40.760><c> to</c><03:17:40.920><c> be</c><03:17:41.040><c> actually</c>

03:17:41.229 --> 03:17:41.239 align:start position:0%
data and we're going to be actually
 

03:17:41.239 --> 03:17:42.830 align:start position:0%
data and we're going to be actually
doing<03:17:41.479><c> some</c><03:17:41.680><c> legit</c><03:17:42.000><c> pre-training</c><03:17:42.560><c> in</c><03:17:42.680><c> this</c>

03:17:42.830 --> 03:17:42.840 align:start position:0%
doing some legit pre-training in this
 

03:17:42.840 --> 03:17:45.510 align:start position:0%
doing some legit pre-training in this
case<03:17:43.080><c> this</c><03:17:43.199><c> is</c><03:17:43.319><c> a</c><03:17:43.840><c> good</c><03:17:44.040><c> data</c><03:17:44.319><c> set</c><03:17:45.000><c> we're</c><03:17:45.239><c> doing</c>

03:17:45.510 --> 03:17:45.520 align:start position:0%
case this is a good data set we're doing
 

03:17:45.520 --> 03:17:48.309 align:start position:0%
case this is a good data set we're doing
lots<03:17:45.720><c> of</c><03:17:45.840><c> tokens</c><03:17:46.199><c> per</c><03:17:46.399><c> second</c><03:17:47.199><c> we</c><03:17:47.319><c> have</c><03:17:47.479><c> 8</c><03:17:47.680><c> gpus</c>

03:17:48.309 --> 03:17:48.319 align:start position:0%
lots of tokens per second we have 8 gpus
 

03:17:48.319 --> 03:17:50.269 align:start position:0%
lots of tokens per second we have 8 gpus
the<03:17:48.439><c> code</c><03:17:48.640><c> is</c><03:17:48.800><c> ready</c><03:17:49.520><c> and</c><03:17:49.680><c> so</c><03:17:49.880><c> we're</c><03:17:50.080><c> actually</c>

03:17:50.269 --> 03:17:50.279 align:start position:0%
the code is ready and so we're actually
 

03:17:50.279 --> 03:17:51.990 align:start position:0%
the code is ready and so we're actually
going<03:17:50.359><c> to</c><03:17:50.439><c> be</c><03:17:50.560><c> doing</c><03:17:50.800><c> a</c><03:17:50.920><c> serious</c><03:17:51.279><c> training</c><03:17:51.600><c> run</c>

03:17:51.990 --> 03:17:52.000 align:start position:0%
going to be doing a serious training run
 

03:17:52.000 --> 03:17:54.750 align:start position:0%
going to be doing a serious training run
so<03:17:52.199><c> let's</c><03:17:52.439><c> get</c><03:17:52.640><c> P</c><03:17:52.800><c> it</c><03:17:53.000><c> back</c><03:17:53.120><c> in</c><03:17:53.239><c> a</c><03:17:53.439><c> bit</c><03:17:54.439><c> okay</c><03:17:54.560><c> so</c>

03:17:54.750 --> 03:17:54.760 align:start position:0%
so let's get P it back in a bit okay so
 

03:17:54.760 --> 03:17:58.910 align:start position:0%
so let's get P it back in a bit okay so
we're<03:17:55.000><c> back</c><03:17:55.880><c> so</c><03:17:56.560><c> uh</c><03:17:56.720><c> if</c><03:17:56.840><c> we</c><03:17:57.040><c> LS</c><03:17:57.520><c> edu</c><03:17:58.000><c> fine</c><03:17:58.359><c> web</c>

03:17:58.910 --> 03:17:58.920 align:start position:0%
we're back so uh if we LS edu fine web
 

03:17:58.920 --> 03:18:02.349 align:start position:0%
we're back so uh if we LS edu fine web
we<03:17:59.040><c> see</c><03:17:59.279><c> that</c><03:17:59.439><c> there's</c><03:17:59.680><c> now</c><03:18:00.080><c> 100</c><03:18:00.279><c> charts</c><03:18:00.840><c> in</c><03:18:01.359><c> it</c>

03:18:02.349 --> 03:18:02.359 align:start position:0%
we see that there's now 100 charts in it
 

03:18:02.359 --> 03:18:03.790 align:start position:0%
we see that there's now 100 charts in it
um<03:18:02.640><c> and</c><03:18:02.800><c> that</c><03:18:02.960><c> makes</c><03:18:03.160><c> sense</c><03:18:03.399><c> because</c><03:18:03.600><c> each</c>

03:18:03.790 --> 03:18:03.800 align:start position:0%
um and that makes sense because each
 

03:18:03.800 --> 03:18:06.309 align:start position:0%
um and that makes sense because each
chart<03:18:04.199><c> is</c><03:18:04.600><c> 100</c><03:18:04.800><c> million</c><03:18:05.120><c> tokens</c><03:18:05.640><c> so</c><03:18:06.120><c> 100</c>

03:18:06.309 --> 03:18:06.319 align:start position:0%
chart is 100 million tokens so 100
 

03:18:06.319 --> 03:18:08.229 align:start position:0%
chart is 100 million tokens so 100
charts<03:18:06.640><c> of</c><03:18:06.800><c> that</c><03:18:06.960><c> is</c><03:18:07.120><c> 10</c><03:18:07.359><c> billion</c><03:18:07.720><c> tokens</c><03:18:08.080><c> in</c>

03:18:08.229 --> 03:18:08.239 align:start position:0%
charts of that is 10 billion tokens in
 

03:18:08.239 --> 03:18:11.070 align:start position:0%
charts of that is 10 billion tokens in
total<03:18:09.239><c> now</c><03:18:09.399><c> swinging</c><03:18:09.760><c> over</c><03:18:09.920><c> to</c><03:18:10.040><c> the</c><03:18:10.160><c> main</c><03:18:10.399><c> file</c>

03:18:11.070 --> 03:18:11.080 align:start position:0%
total now swinging over to the main file
 

03:18:11.080 --> 03:18:12.630 align:start position:0%
total now swinging over to the main file
I<03:18:11.160><c> made</c><03:18:11.359><c> some</c><03:18:11.560><c> adjustments</c><03:18:12.000><c> to</c><03:18:12.160><c> our</c><03:18:12.399><c> data</c>

03:18:12.630 --> 03:18:12.640 align:start position:0%
I made some adjustments to our data
 

03:18:12.640 --> 03:18:14.670 align:start position:0%
I made some adjustments to our data
loader<03:18:13.120><c> again</c><03:18:13.880><c> and</c><03:18:14.000><c> that's</c><03:18:14.239><c> because</c><03:18:14.520><c> we're</c>

03:18:14.670 --> 03:18:14.680 align:start position:0%
loader again and that's because we're
 

03:18:14.680 --> 03:18:17.189 align:start position:0%
loader again and that's because we're
not<03:18:15.080><c> running</c><03:18:15.520><c> with</c><03:18:15.920><c> uh</c><03:18:16.040><c> Shakespeare</c><03:18:16.520><c> anymore</c>

03:18:17.189 --> 03:18:17.199 align:start position:0%
not running with uh Shakespeare anymore
 

03:18:17.199 --> 03:18:20.309 align:start position:0%
not running with uh Shakespeare anymore
we<03:18:17.319><c> want</c><03:18:17.479><c> to</c><03:18:17.680><c> use</c><03:18:18.040><c> the</c><03:18:18.600><c> fine</c><03:18:18.880><c> web</c><03:18:19.199><c> shards</c><03:18:20.199><c> and</c>

03:18:20.309 --> 03:18:20.319 align:start position:0%
we want to use the fine web shards and
 

03:18:20.319 --> 03:18:21.910 align:start position:0%
we want to use the fine web shards and
so<03:18:20.640><c> you'll</c><03:18:20.800><c> see</c><03:18:21.000><c> some</c><03:18:21.199><c> code</c><03:18:21.520><c> here</c><03:18:21.800><c> that</c>

03:18:21.910 --> 03:18:21.920 align:start position:0%
so you'll see some code here that
 

03:18:21.920 --> 03:18:23.389 align:start position:0%
so you'll see some code here that
additionally<03:18:22.399><c> basically</c><03:18:22.760><c> can</c><03:18:22.920><c> load</c><03:18:23.199><c> these</c>

03:18:23.389 --> 03:18:23.399 align:start position:0%
additionally basically can load these
 

03:18:23.399 --> 03:18:28.030 align:start position:0%
additionally basically can load these
shards<03:18:24.399><c> uh</c><03:18:24.479><c> we</c><03:18:24.640><c> load</c><03:18:25.080><c> the</c><03:18:25.359><c> um</c><03:18:25.960><c> un6</c><03:18:26.960><c> numpy</c><03:18:27.520><c> file</c>

03:18:28.030 --> 03:18:28.040 align:start position:0%
shards uh we load the um un6 numpy file
 

03:18:28.040 --> 03:18:30.830 align:start position:0%
shards uh we load the um un6 numpy file
we<03:18:28.199><c> convert</c><03:18:28.479><c> it</c><03:18:28.600><c> to</c><03:18:28.760><c> a</c><03:18:28.920><c> torch.</c><03:18:29.520><c> long</c><03:18:29.840><c> tensor</c>

03:18:30.830 --> 03:18:30.840 align:start position:0%
we convert it to a torch. long tensor
 

03:18:30.840 --> 03:18:32.590 align:start position:0%
we convert it to a torch. long tensor
which<03:18:30.960><c> is</c><03:18:31.080><c> what</c><03:18:31.199><c> a</c><03:18:31.279><c> lot</c><03:18:31.399><c> of</c><03:18:31.520><c> the</c><03:18:31.600><c> layers</c><03:18:32.040><c> up</c><03:18:32.279><c> top</c>

03:18:32.590 --> 03:18:32.600 align:start position:0%
which is what a lot of the layers up top
 

03:18:32.600 --> 03:18:35.030 align:start position:0%
which is what a lot of the layers up top
expect<03:18:33.319><c> by</c><03:18:33.520><c> default</c><03:18:34.479><c> and</c><03:18:34.560><c> then</c><03:18:34.760><c> here</c><03:18:34.880><c> we're</c>

03:18:35.030 --> 03:18:35.040 align:start position:0%
expect by default and then here we're
 

03:18:35.040 --> 03:18:38.110 align:start position:0%
expect by default and then here we're
just<03:18:35.239><c> enumerating</c><03:18:35.760><c> all</c><03:18:35.880><c> the</c><03:18:36.319><c> shards</c><03:18:37.319><c> I</c><03:18:37.840><c> also</c>

03:18:38.110 --> 03:18:38.120 align:start position:0%
just enumerating all the shards I also
 

03:18:38.120 --> 03:18:40.269 align:start position:0%
just enumerating all the shards I also
added<03:18:38.399><c> a</c><03:18:38.560><c> split</c><03:18:38.960><c> to</c><03:18:39.120><c> data</c><03:18:39.399><c> load</c><03:18:39.560><c> of</c><03:18:39.720><c> light</c><03:18:40.120><c> so</c>

03:18:40.269 --> 03:18:40.279 align:start position:0%
added a split to data load of light so
 

03:18:40.279 --> 03:18:42.429 align:start position:0%
added a split to data load of light so
we<03:18:40.399><c> can</c><03:18:40.840><c> uh</c><03:18:40.920><c> load</c><03:18:41.160><c> the</c><03:18:41.319><c> split</c><03:18:41.640><c> train</c><03:18:42.040><c> but</c><03:18:42.199><c> also</c>

03:18:42.429 --> 03:18:42.439 align:start position:0%
we can uh load the split train but also
 

03:18:42.439 --> 03:18:44.670 align:start position:0%
we can uh load the split train but also
the<03:18:42.600><c> split</c><03:18:42.920><c> Val</c><03:18:43.520><c> uh</c><03:18:43.600><c> the</c><03:18:43.760><c> zero</c>

03:18:44.670 --> 03:18:44.680 align:start position:0%
the split Val uh the zero
 

03:18:44.680 --> 03:18:47.389 align:start position:0%
the split Val uh the zero
split<03:18:45.680><c> and</c><03:18:45.880><c> then</c><03:18:46.160><c> we</c><03:18:46.239><c> can</c><03:18:46.399><c> load</c><03:18:46.560><c> the</c><03:18:46.840><c> shards</c>

03:18:47.389 --> 03:18:47.399 align:start position:0%
split and then we can load the shards
 

03:18:47.399 --> 03:18:49.710 align:start position:0%
split and then we can load the shards
and<03:18:47.600><c> then</c><03:18:48.359><c> here</c><03:18:48.720><c> we</c><03:18:48.880><c> also</c><03:18:49.160><c> have</c><03:18:49.319><c> not</c><03:18:49.479><c> just</c><03:18:49.600><c> the</c>

03:18:49.710 --> 03:18:49.720 align:start position:0%
and then here we also have not just the
 

03:18:49.720 --> 03:18:50.990 align:start position:0%
and then here we also have not just the
current<03:18:50.000><c> position</c><03:18:50.319><c> now</c><03:18:50.520><c> but</c><03:18:50.680><c> also</c><03:18:50.880><c> the</c>

03:18:50.990 --> 03:18:51.000 align:start position:0%
current position now but also the
 

03:18:51.000 --> 03:18:53.429 align:start position:0%
current position now but also the
current<03:18:51.680><c> Shard</c><03:18:52.479><c> so</c><03:18:52.640><c> we</c><03:18:52.720><c> have</c><03:18:52.840><c> a</c><03:18:53.000><c> position</c>

03:18:53.429 --> 03:18:53.439 align:start position:0%
current Shard so we have a position
 

03:18:53.439 --> 03:18:55.750 align:start position:0%
current Shard so we have a position
inside<03:18:53.720><c> A</c><03:18:53.840><c> Shard</c><03:18:54.640><c> and</c><03:18:54.800><c> then</c><03:18:54.960><c> when</c><03:18:55.120><c> we</c><03:18:55.439><c> uh</c><03:18:55.560><c> run</c>

03:18:55.750 --> 03:18:55.760 align:start position:0%
inside A Shard and then when we uh run
 

03:18:55.760 --> 03:18:58.870 align:start position:0%
inside A Shard and then when we uh run
out<03:18:55.960><c> of</c><03:18:56.319><c> tokens</c><03:18:56.760><c> in</c><03:18:56.880><c> A</c><03:18:57.000><c> Single</c><03:18:57.279><c> Shard</c><03:18:58.279><c> we</c><03:18:58.520><c> first</c>

03:18:58.870 --> 03:18:58.880 align:start position:0%
out of tokens in A Single Shard we first
 

03:18:58.880 --> 03:19:01.710 align:start position:0%
out of tokens in A Single Shard we first
Advance<03:18:59.239><c> The</c><03:18:59.359><c> Shard</c><03:19:00.040><c> and</c><03:19:00.239><c> loop</c><03:19:00.600><c> if</c><03:19:00.720><c> we</c><03:19:00.840><c> need</c><03:19:01.000><c> to</c>

03:19:01.710 --> 03:19:01.720 align:start position:0%
Advance The Shard and loop if we need to
 

03:19:01.720 --> 03:19:03.750 align:start position:0%
Advance The Shard and loop if we need to
and<03:19:01.840><c> then</c><03:19:01.960><c> we</c><03:19:02.080><c> get</c><03:19:02.239><c> the</c><03:19:02.399><c> tokens</c><03:19:02.960><c> and</c><03:19:03.279><c> readjust</c>

03:19:03.750 --> 03:19:03.760 align:start position:0%
and then we get the tokens and readjust
 

03:19:03.760 --> 03:19:06.110 align:start position:0%
and then we get the tokens and readjust
the<03:19:03.960><c> position</c><03:19:04.960><c> so</c><03:19:05.199><c> this</c><03:19:05.319><c> data</c><03:19:05.560><c> loader</c><03:19:05.920><c> will</c>

03:19:06.110 --> 03:19:06.120 align:start position:0%
the position so this data loader will
 

03:19:06.120 --> 03:19:09.910 align:start position:0%
the position so this data loader will
now<03:19:06.319><c> iterate</c><03:19:06.960><c> all</c><03:19:07.120><c> the</c><03:19:07.199><c> shards</c><03:19:08.160><c> as</c><03:19:08.600><c> well</c><03:19:09.600><c> so</c><03:19:09.800><c> I</c>

03:19:09.910 --> 03:19:09.920 align:start position:0%
now iterate all the shards as well so I
 

03:19:09.920 --> 03:19:11.510 align:start position:0%
now iterate all the shards as well so I
Chang<03:19:10.359><c> that</c><03:19:10.600><c> and</c><03:19:10.760><c> then</c><03:19:10.880><c> the</c><03:19:11.000><c> other</c><03:19:11.199><c> thing</c><03:19:11.359><c> that</c>

03:19:11.510 --> 03:19:11.520 align:start position:0%
Chang that and then the other thing that
 

03:19:11.520 --> 03:19:14.630 align:start position:0%
Chang that and then the other thing that
I<03:19:11.680><c> did</c><03:19:12.080><c> while</c><03:19:13.000><c> uh</c><03:19:13.120><c> the</c><03:19:13.239><c> data</c><03:19:13.520><c> was</c><03:19:13.720><c> processing</c>

03:19:14.630 --> 03:19:14.640 align:start position:0%
I did while uh the data was processing
 

03:19:14.640 --> 03:19:17.189 align:start position:0%
I did while uh the data was processing
is<03:19:14.800><c> our</c><03:19:14.960><c> train</c><03:19:15.239><c> loader</c><03:19:15.640><c> now</c><03:19:16.120><c> has</c><03:19:16.319><c> split</c><03:19:16.880><c> train</c>

03:19:17.189 --> 03:19:17.199 align:start position:0%
is our train loader now has split train
 

03:19:17.199 --> 03:19:20.349 align:start position:0%
is our train loader now has split train
of<03:19:17.520><c> course</c><03:19:18.520><c> and</c><03:19:18.720><c> down</c><03:19:18.920><c> here</c><03:19:19.120><c> I</c><03:19:19.239><c> set</c><03:19:19.479><c> up</c><03:19:19.880><c> some</c><03:19:20.239><c> I</c>

03:19:20.349 --> 03:19:20.359 align:start position:0%
of course and down here I set up some I
 

03:19:20.359 --> 03:19:21.910 align:start position:0%
of course and down here I set up some I
set<03:19:20.560><c> up</c><03:19:20.680><c> some</c><03:19:20.840><c> numbers</c>

03:19:21.910 --> 03:19:21.920 align:start position:0%
set up some numbers
 

03:19:21.920 --> 03:19:24.790 align:start position:0%
set up some numbers
so<03:19:22.920><c> we</c><03:19:23.040><c> are</c><03:19:23.279><c> doing</c><03:19:23.600><c> 2</c><03:19:23.880><c> to</c><03:19:24.080><c> the</c>

03:19:24.790 --> 03:19:24.800 align:start position:0%
so we are doing 2 to the
 

03:19:24.800 --> 03:19:31.670 align:start position:0%
so we are doing 2 to the
9<03:19:25.800><c> uh</c><03:19:25.960><c> tokens</c><03:19:26.840><c> per</c><03:19:27.840><c> uh</c><03:19:28.040><c> per</c><03:19:28.720><c> um</c><03:19:29.439><c> per</c><03:19:30.120><c> step</c><03:19:31.120><c> and</c>

03:19:31.670 --> 03:19:31.680 align:start position:0%
9 uh tokens per uh per um per step and
 

03:19:31.680 --> 03:19:35.150 align:start position:0%
9 uh tokens per uh per um per step and
we<03:19:31.800><c> want</c><03:19:32.000><c> to</c><03:19:32.120><c> do</c><03:19:32.359><c> roughly</c><03:19:33.279><c> 10</c><03:19:33.600><c> billion</c><03:19:34.160><c> tokens</c>

03:19:35.150 --> 03:19:35.160 align:start position:0%
we want to do roughly 10 billion tokens
 

03:19:35.160 --> 03:19:36.710 align:start position:0%
we want to do roughly 10 billion tokens
um<03:19:35.479><c> because</c><03:19:35.720><c> that's</c><03:19:35.840><c> how</c><03:19:35.960><c> many</c><03:19:36.120><c> unique</c><03:19:36.399><c> tokens</c>

03:19:36.710 --> 03:19:36.720 align:start position:0%
um because that's how many unique tokens
 

03:19:36.720 --> 03:19:39.150 align:start position:0%
um because that's how many unique tokens
we<03:19:36.880><c> have</c><03:19:37.439><c> so</c><03:19:37.600><c> if</c><03:19:37.680><c> we</c><03:19:37.800><c> did</c><03:19:38.000><c> 10</c><03:19:38.319><c> billion</c><03:19:38.680><c> tokens</c>

03:19:39.150 --> 03:19:39.160 align:start position:0%
we have so if we did 10 billion tokens
 

03:19:39.160 --> 03:19:41.750 align:start position:0%
we have so if we did 10 billion tokens
then<03:19:39.359><c> divide</c><03:19:39.640><c> that</c><03:19:39.800><c> by</c><03:19:40.199><c> 29</c><03:19:41.199><c> we</c><03:19:41.319><c> see</c><03:19:41.520><c> that</c><03:19:41.640><c> this</c>

03:19:41.750 --> 03:19:41.760 align:start position:0%
then divide that by 29 we see that this
 

03:19:41.760 --> 03:19:44.590 align:start position:0%
then divide that by 29 we see that this
is<03:19:42.279><c> 1973</c><03:19:43.279><c> steps</c><03:19:43.800><c> so</c><03:19:43.960><c> that's</c><03:19:44.120><c> where</c><03:19:44.279><c> that's</c>

03:19:44.590 --> 03:19:44.600 align:start position:0%
is 1973 steps so that's where that's
 

03:19:44.600 --> 03:19:47.510 align:start position:0%
is 1973 steps so that's where that's
from<03:19:45.600><c> and</c><03:19:45.760><c> then</c><03:19:46.120><c> the</c><03:19:46.239><c> GPT</c><03:19:46.720><c> three</c><03:19:46.920><c> paper</c><03:19:47.199><c> says</c>

03:19:47.510 --> 03:19:47.520 align:start position:0%
from and then the GPT three paper says
 

03:19:47.520 --> 03:19:49.429 align:start position:0%
from and then the GPT three paper says
that<03:19:47.720><c> they</c><03:19:48.120><c> warm</c><03:19:48.439><c> up</c><03:19:48.600><c> the</c><03:19:48.680><c> learning</c><03:19:49.000><c> rate</c><03:19:49.199><c> over</c>

03:19:49.429 --> 03:19:49.439 align:start position:0%
that they warm up the learning rate over
 

03:19:49.439 --> 03:19:53.030 align:start position:0%
that they warm up the learning rate over
375<03:19:50.199><c> million</c><03:19:50.960><c> tokens</c><03:19:51.960><c> so</c><03:19:52.319><c> I</c><03:19:52.439><c> came</c><03:19:52.680><c> here</c><03:19:52.880><c> and</c>

03:19:53.030 --> 03:19:53.040 align:start position:0%
375 million tokens so I came here and
 

03:19:53.040 --> 03:19:57.469 align:start position:0%
375 million tokens so I came here and
375<03:19:53.760><c> E6</c><03:19:54.439><c> tokens</c><03:19:55.439><c> divide</c><03:19:56.080><c> uh</c><03:19:56.199><c> 2</c><03:19:56.439><c> to</c><03:19:56.560><c> the</c>

03:19:57.469 --> 03:19:57.479 align:start position:0%
375 E6 tokens divide uh 2 to the
 

03:19:57.479 --> 03:20:01.469 align:start position:0%
375 E6 tokens divide uh 2 to the
19<03:19:58.479><c> is</c><03:19:58.840><c> 715</c><03:19:59.840><c> steps</c><03:20:00.520><c> so</c><03:20:00.720><c> that's</c><03:20:00.880><c> why</c><03:20:01.080><c> warm-up</c>

03:20:01.469 --> 03:20:01.479 align:start position:0%
19 is 715 steps so that's why warm-up
 

03:20:01.479 --> 03:20:04.389 align:start position:0%
19 is 715 steps so that's why warm-up
steps<03:20:01.800><c> is</c><03:20:01.920><c> set</c><03:20:02.080><c> to</c><03:20:02.279><c> 715</c><03:20:03.239><c> so</c><03:20:03.439><c> this</c><03:20:03.520><c> will</c><03:20:03.800><c> exactly</c>

03:20:04.389 --> 03:20:04.399 align:start position:0%
steps is set to 715 so this will exactly
 

03:20:04.399 --> 03:20:07.630 align:start position:0%
steps is set to 715 so this will exactly
match<03:20:05.319><c> um</c><03:20:05.800><c> the</c><03:20:05.920><c> warm-up</c><03:20:06.319><c> schedule</c><03:20:06.720><c> that</c><03:20:06.840><c> gpt3</c>

03:20:07.630 --> 03:20:07.640 align:start position:0%
match um the warm-up schedule that gpt3
 

03:20:07.640 --> 03:20:10.790 align:start position:0%
match um the warm-up schedule that gpt3
used<03:20:08.640><c> and</c><03:20:08.880><c> I</c><03:20:08.960><c> think</c><03:20:09.160><c> 715</c><03:20:09.760><c> by</c><03:20:09.880><c> the</c><03:20:09.960><c> way</c><03:20:10.080><c> is</c><03:20:10.279><c> very</c>

03:20:10.790 --> 03:20:10.800 align:start position:0%
used and I think 715 by the way is very
 

03:20:10.800 --> 03:20:12.469 align:start position:0%
used and I think 715 by the way is very
uh<03:20:11.120><c> mild</c><03:20:11.800><c> and</c><03:20:11.920><c> this</c><03:20:12.040><c> could</c><03:20:12.160><c> be</c><03:20:12.279><c> made</c>

03:20:12.469 --> 03:20:12.479 align:start position:0%
uh mild and this could be made
 

03:20:12.479 --> 03:20:13.910 align:start position:0%
uh mild and this could be made
significantly<03:20:13.040><c> more</c><03:20:13.199><c> aggressive</c><03:20:13.680><c> probably</c>

03:20:13.910 --> 03:20:13.920 align:start position:0%
significantly more aggressive probably
 

03:20:13.920 --> 03:20:17.150 align:start position:0%
significantly more aggressive probably
even<03:20:14.120><c> like</c><03:20:14.399><c> 100</c><03:20:14.800><c> is</c><03:20:15.000><c> good</c><03:20:15.359><c> enough</c><03:20:16.359><c> um</c>

03:20:17.150 --> 03:20:17.160 align:start position:0%
even like 100 is good enough um
 

03:20:17.160 --> 03:20:18.870 align:start position:0%
even like 100 is good enough um
but<03:20:17.359><c> it's</c><03:20:17.520><c> okay</c><03:20:17.680><c> let's</c><03:20:17.840><c> leave</c><03:20:18.000><c> it</c><03:20:18.120><c> for</c><03:20:18.279><c> now</c><03:20:18.680><c> so</c>

03:20:18.870 --> 03:20:18.880 align:start position:0%
but it's okay let's leave it for now so
 

03:20:18.880 --> 03:20:20.269 align:start position:0%
but it's okay let's leave it for now so
that<03:20:19.040><c> we</c><03:20:19.160><c> have</c><03:20:19.279><c> the</c><03:20:19.399><c> exact</c><03:20:19.680><c> hyper</c><03:20:19.920><c> parameters</c>

03:20:20.269 --> 03:20:20.279 align:start position:0%
that we have the exact hyper parameters
 

03:20:20.279 --> 03:20:25.830 align:start position:0%
that we have the exact hyper parameters
of<03:20:20.840><c> gpt3</c><03:20:21.840><c> so</c><03:20:22.359><c> I</c><03:20:22.479><c> fix</c><03:20:22.880><c> that</c><03:20:23.319><c> and</c><03:20:23.560><c> then</c><03:20:24.600><c> um</c><03:20:25.600><c> that's</c>

03:20:25.830 --> 03:20:25.840 align:start position:0%
of gpt3 so I fix that and then um that's
 

03:20:25.840 --> 03:20:28.349 align:start position:0%
of gpt3 so I fix that and then um that's
pretty<03:20:26.040><c> much</c><03:20:26.199><c> it</c><03:20:26.399><c> we</c><03:20:26.560><c> can</c><03:20:27.399><c> we</c><03:20:27.479><c> can</c><03:20:27.680><c> run</c><03:20:28.040><c> so</c><03:20:28.199><c> we</c>

03:20:28.349 --> 03:20:28.359 align:start position:0%
pretty much it we can we can run so we
 

03:20:28.359 --> 03:20:29.870 align:start position:0%
pretty much it we can we can run so we
have<03:20:28.479><c> our</c><03:20:28.720><c> script</c>

03:20:29.870 --> 03:20:29.880 align:start position:0%
have our script
 

03:20:29.880 --> 03:20:32.429 align:start position:0%
have our script
here<03:20:30.880><c> and</c><03:20:31.120><c> we</c><03:20:31.279><c> can</c>

03:20:32.429 --> 03:20:32.439 align:start position:0%
here and we can
 

03:20:32.439 --> 03:20:34.469 align:start position:0%
here and we can
launch<03:20:33.439><c> and</c><03:20:33.640><c> actually</c><03:20:33.840><c> sorry</c><03:20:34.080><c> let</c><03:20:34.160><c> me</c><03:20:34.239><c> do</c><03:20:34.359><c> one</c>

03:20:34.469 --> 03:20:34.479 align:start position:0%
launch and actually sorry let me do one
 

03:20:34.479 --> 03:20:37.990 align:start position:0%
launch and actually sorry let me do one
more

03:20:37.990 --> 03:20:38.000 align:start position:0%
 
 

03:20:38.000 --> 03:20:40.469 align:start position:0%
 
thing<03:20:39.000><c> excuse</c>

03:20:40.469 --> 03:20:40.479 align:start position:0%
thing excuse
 

03:20:40.479 --> 03:20:43.910 align:start position:0%
thing excuse
me<03:20:41.479><c> for</c><03:20:41.800><c> my</c><03:20:42.160><c> GPU</c><03:20:42.680><c> I</c><03:20:42.760><c> can</c><03:20:42.920><c> actually</c><03:20:43.239><c> fit</c><03:20:43.640><c> more</c>

03:20:43.910 --> 03:20:43.920 align:start position:0%
me for my GPU I can actually fit more
 

03:20:43.920 --> 03:20:45.950 align:start position:0%
me for my GPU I can actually fit more
batch<03:20:44.160><c> size</c><03:20:44.359><c> and</c><03:20:44.479><c> I</c><03:20:44.560><c> believe</c><03:20:44.760><c> I</c><03:20:44.880><c> can</c><03:20:45.160><c> fat</c><03:20:45.560><c> I</c><03:20:45.640><c> can</c>

03:20:45.950 --> 03:20:45.960 align:start position:0%
batch size and I believe I can fat I can
 

03:20:45.960 --> 03:20:49.990 align:start position:0%
batch size and I believe I can fat I can
fit<03:20:46.239><c> 60</c><03:20:46.760><c> 4</c><03:20:47.120><c> on</c><03:20:47.319><c> my</c><03:20:47.960><c> GPU</c><03:20:48.960><c> as</c><03:20:49.040><c> a</c><03:20:49.120><c> micro</c><03:20:49.439><c> bash</c><03:20:49.680><c> size</c>

03:20:49.990 --> 03:20:50.000 align:start position:0%
fit 60 4 on my GPU as a micro bash size
 

03:20:50.000 --> 03:20:54.349 align:start position:0%
fit 60 4 on my GPU as a micro bash size
so<03:20:50.199><c> let</c><03:20:50.319><c> me</c><03:20:50.680><c> try</c>

03:20:54.349 --> 03:20:54.359 align:start position:0%
 
 

03:20:54.359 --> 03:20:57.309 align:start position:0%
 
that<03:20:55.359><c> I</c><03:20:55.479><c> could</c><03:20:55.600><c> be</c><03:20:56.040><c> misremembering</c><03:20:57.040><c> but</c><03:20:57.199><c> that</c>

03:20:57.309 --> 03:20:57.319 align:start position:0%
that I could be misremembering but that
 

03:20:57.319 --> 03:21:00.229 align:start position:0%
that I could be misremembering but that
means<03:20:57.560><c> 64</c><03:20:57.960><c> *</c><03:20:58.239><c> 124</c><03:20:59.000><c> per</c><03:20:59.199><c> GPU</c><03:20:59.760><c> and</c><03:20:59.880><c> then</c><03:21:00.000><c> we</c><03:21:00.120><c> have</c>

03:21:00.229 --> 03:21:00.239 align:start position:0%
means 64 * 124 per GPU and then we have
 

03:21:00.239 --> 03:21:02.630 align:start position:0%
means 64 * 124 per GPU and then we have
a<03:21:00.439><c> gpus</c><03:21:01.439><c> so</c><03:21:01.640><c> that</c><03:21:01.720><c> means</c><03:21:01.960><c> we</c><03:21:02.040><c> would</c><03:21:02.239><c> not</c><03:21:02.399><c> even</c>

03:21:02.630 --> 03:21:02.640 align:start position:0%
a gpus so that means we would not even
 

03:21:02.640 --> 03:21:04.309 align:start position:0%
a gpus so that means we would not even
be<03:21:02.760><c> doing</c><03:21:02.920><c> gradient</c><03:21:03.319><c> accumulation</c><03:21:03.920><c> if</c><03:21:04.120><c> this</c>

03:21:04.309 --> 03:21:04.319 align:start position:0%
be doing gradient accumulation if this
 

03:21:04.319 --> 03:21:06.830 align:start position:0%
be doing gradient accumulation if this
fits<03:21:05.319><c> because</c><03:21:05.960><c> uh</c><03:21:06.120><c> this</c><03:21:06.239><c> just</c><03:21:06.439><c> multi</c>

03:21:06.830 --> 03:21:06.840 align:start position:0%
fits because uh this just multi
 

03:21:06.840 --> 03:21:09.710 align:start position:0%
fits because uh this just multi
multiplies<03:21:07.359><c> out</c><03:21:07.600><c> to</c><03:21:08.560><c> uh</c><03:21:08.680><c> the</c><03:21:08.800><c> full</c><03:21:09.120><c> total</c><03:21:09.399><c> bat</c>

03:21:09.710 --> 03:21:09.720 align:start position:0%
multiplies out to uh the full total bat
 

03:21:09.720 --> 03:21:12.150 align:start position:0%
multiplies out to uh the full total bat
size<03:21:10.600><c> so</c><03:21:10.960><c> no</c><03:21:11.160><c> gradient</c>

03:21:12.150 --> 03:21:12.160 align:start position:0%
size so no gradient
 

03:21:12.160 --> 03:21:14.030 align:start position:0%
size so no gradient
accumulation<03:21:13.160><c> and</c><03:21:13.319><c> that</c><03:21:13.439><c> would</c><03:21:13.600><c> run</c><03:21:13.840><c> pretty</c>

03:21:14.030 --> 03:21:14.040 align:start position:0%
accumulation and that would run pretty
 

03:21:14.040 --> 03:21:26.910 align:start position:0%
accumulation and that would run pretty
quickly<03:21:14.319><c> if</c><03:21:14.479><c> that</c><03:21:14.680><c> fits</c>

03:21:26.910 --> 03:21:26.920 align:start position:0%
 
 

03:21:26.920 --> 03:21:29.790 align:start position:0%
 
let's<03:21:27.160><c> go</c><03:21:27.359><c> let's</c><03:21:28.080><c> go</c><03:21:29.080><c> I</c><03:21:29.160><c> mean</c><03:21:29.279><c> if</c><03:21:29.439><c> this</c><03:21:29.560><c> works</c>

03:21:29.790 --> 03:21:29.800 align:start position:0%
let's go let's go I mean if this works
 

03:21:29.800 --> 03:21:31.150 align:start position:0%
let's go let's go I mean if this works
then<03:21:29.960><c> this</c><03:21:30.040><c> is</c><03:21:30.239><c> basically</c><03:21:30.560><c> a</c><03:21:30.720><c> serious</c>

03:21:31.150 --> 03:21:31.160 align:start position:0%
then this is basically a serious
 

03:21:31.160 --> 03:21:33.990 align:start position:0%
then this is basically a serious
pre-training<03:21:31.640><c> run</c><03:21:32.479><c> um</c><03:21:33.000><c> we're</c><03:21:33.160><c> not</c><03:21:33.319><c> logging</c>

03:21:33.990 --> 03:21:34.000 align:start position:0%
pre-training run um we're not logging
 

03:21:34.000 --> 03:21:35.389 align:start position:0%
pre-training run um we're not logging
we're<03:21:34.160><c> not</c><03:21:34.399><c> evaluating</c><03:21:34.840><c> the</c><03:21:34.960><c> validation</c>

03:21:35.389 --> 03:21:35.399 align:start position:0%
we're not evaluating the validation
 

03:21:35.399 --> 03:21:37.309 align:start position:0%
we're not evaluating the validation
split<03:21:35.800><c> we're</c><03:21:35.920><c> not</c><03:21:36.080><c> running</c><03:21:36.399><c> any</c><03:21:36.600><c> evaluations</c>

03:21:37.309 --> 03:21:37.319 align:start position:0%
split we're not running any evaluations
 

03:21:37.319 --> 03:21:39.349 align:start position:0%
split we're not running any evaluations
yet<03:21:37.760><c> so</c><03:21:37.960><c> it's</c><03:21:38.120><c> not</c><03:21:38.359><c> we</c><03:21:38.479><c> haven't</c><03:21:38.920><c> crossed</c><03:21:39.239><c> our</c>

03:21:39.349 --> 03:21:39.359 align:start position:0%
yet so it's not we haven't crossed our
 

03:21:39.359 --> 03:21:42.150 align:start position:0%
yet so it's not we haven't crossed our
te's<03:21:39.640><c> and</c><03:21:39.800><c> dotted</c><03:21:40.120><c> our</c><03:21:40.279><c> eyes</c><03:21:41.199><c> but</c><03:21:41.680><c> uh</c><03:21:41.840><c> if</c><03:21:41.960><c> we</c>

03:21:42.150 --> 03:21:42.160 align:start position:0%
te's and dotted our eyes but uh if we
 

03:21:42.160 --> 03:21:44.189 align:start position:0%
te's and dotted our eyes but uh if we
let<03:21:42.399><c> this</c><03:21:42.560><c> run</c><03:21:42.840><c> for</c><03:21:43.040><c> a</c><03:21:43.199><c> while</c><03:21:43.600><c> we're</c><03:21:43.880><c> going</c><03:21:43.960><c> to</c>

03:21:44.189 --> 03:21:44.199 align:start position:0%
let this run for a while we're going to
 

03:21:44.199 --> 03:21:46.790 align:start position:0%
let this run for a while we're going to
actually<03:21:44.520><c> get</c><03:21:44.880><c> a</c><03:21:45.319><c> pretty</c><03:21:45.600><c> good</c><03:21:45.800><c> model</c><03:21:46.560><c> and</c><03:21:46.680><c> the</c>

03:21:46.790 --> 03:21:46.800 align:start position:0%
actually get a pretty good model and the
 

03:21:46.800 --> 03:21:49.030 align:start position:0%
actually get a pretty good model and the
model<03:21:47.040><c> that</c><03:21:47.199><c> might</c><03:21:47.359><c> even</c><03:21:47.560><c> be</c><03:21:48.000><c> on</c><03:21:48.279><c> par</c><03:21:48.600><c> with</c><03:21:48.840><c> or</c>

03:21:49.030 --> 03:21:49.040 align:start position:0%
model that might even be on par with or
 

03:21:49.040 --> 03:21:54.349 align:start position:0%
model that might even be on par with or
better<03:21:49.319><c> than</c><03:21:49.479><c> gpt2</c><03:21:50.239><c> 124</c><03:21:50.800><c> M</c><03:21:51.760><c> okay</c><03:21:53.080><c> so</c><03:21:54.080><c> it</c><03:21:54.199><c> looks</c>

03:21:54.349 --> 03:21:54.359 align:start position:0%
better than gpt2 124 M okay so it looks
 

03:21:54.359 --> 03:21:55.790 align:start position:0%
better than gpt2 124 M okay so it looks
like<03:21:54.560><c> everything</c><03:21:54.760><c> is</c><03:21:54.840><c> going</c><03:21:55.120><c> great</c><03:21:55.439><c> we're</c>

03:21:55.790 --> 03:21:55.800 align:start position:0%
like everything is going great we're
 

03:21:55.800 --> 03:21:58.750 align:start position:0%
like everything is going great we're
processing<03:21:56.319><c> 1.5</c><03:21:57.000><c> million</c><03:21:57.359><c> tokens</c><03:21:57.720><c> per</c>

03:21:58.750 --> 03:21:58.760 align:start position:0%
processing 1.5 million tokens per
 

03:21:58.760 --> 03:22:03.389 align:start position:0%
processing 1.5 million tokens per
second<03:21:59.840><c> uh</c><03:22:00.840><c> everything</c><03:22:01.359><c> here</c><03:22:01.600><c> looks</c><03:22:02.399><c> good</c>

03:22:03.389 --> 03:22:03.399 align:start position:0%
second uh everything here looks good
 

03:22:03.399 --> 03:22:06.070 align:start position:0%
second uh everything here looks good
we're<03:22:03.680><c> doing</c><03:22:04.040><c> 330</c><03:22:04.840><c> milliseconds</c><03:22:05.760><c> per</c>

03:22:06.070 --> 03:22:06.080 align:start position:0%
we're doing 330 milliseconds per
 

03:22:06.080 --> 03:22:09.309 align:start position:0%
we're doing 330 milliseconds per
iteration<03:22:07.040><c> and</c><03:22:07.199><c> we</c><03:22:07.359><c> have</c><03:22:07.479><c> to</c><03:22:07.680><c> do</c><03:22:07.960><c> a</c><03:22:08.160><c> total</c>

03:22:09.309 --> 03:22:09.319 align:start position:0%
iteration and we have to do a total
 

03:22:09.319 --> 03:22:13.870 align:start position:0%
iteration and we have to do a total
of<03:22:10.319><c> uh</c><03:22:10.479><c> where</c><03:22:10.640><c> are</c><03:22:10.760><c> we</c><03:22:10.920><c> printing</c><03:22:11.239><c> that</c><03:22:11.880><c> 1973</c><03:22:12.880><c> so</c>

03:22:13.870 --> 03:22:13.880 align:start position:0%
of uh where are we printing that 1973 so
 

03:22:13.880 --> 03:22:17.389 align:start position:0%
of uh where are we printing that 1973 so
19073<03:22:14.880><c> times</c><03:22:15.359><c> 0.33</c>

03:22:17.389 --> 03:22:17.399 align:start position:0%
19073 times 0.33
 

03:22:17.399 --> 03:22:20.710 align:start position:0%
19073 times 0.33
is<03:22:17.840><c> this</c><03:22:18.000><c> many</c><03:22:18.399><c> seconds</c><03:22:19.399><c> this</c><03:22:19.560><c> many</c><03:22:19.800><c> minutes</c>

03:22:20.710 --> 03:22:20.720 align:start position:0%
is this many seconds this many minutes
 

03:22:20.720 --> 03:22:24.429 align:start position:0%
is this many seconds this many minutes
so<03:22:20.920><c> this</c><03:22:21.000><c> will</c><03:22:21.199><c> run</c><03:22:21.560><c> for</c><03:22:22.279><c> 1.7</c>

03:22:24.429 --> 03:22:24.439 align:start position:0%
so this will run for 1.7
 

03:22:24.439 --> 03:22:28.070 align:start position:0%
so this will run for 1.7
hours<03:22:25.439><c> uh</c><03:22:25.560><c> so</c><03:22:25.680><c> one</c><03:22:25.840><c> and</c><03:22:25.920><c> a</c><03:22:26.040><c> half</c><03:22:26.199><c> hour</c><03:22:26.760><c> run</c><03:22:27.760><c> uh</c>

03:22:28.070 --> 03:22:28.080 align:start position:0%
hours uh so one and a half hour run uh
 

03:22:28.080 --> 03:22:30.429 align:start position:0%
hours uh so one and a half hour run uh
like<03:22:28.479><c> this</c><03:22:29.479><c> and</c><03:22:29.760><c> uh</c><03:22:29.880><c> we</c><03:22:30.000><c> don't</c><03:22:30.120><c> even</c><03:22:30.279><c> have</c><03:22:30.359><c> to</c>

03:22:30.429 --> 03:22:30.439 align:start position:0%
like this and uh we don't even have to
 

03:22:30.439 --> 03:22:31.910 align:start position:0%
like this and uh we don't even have to
use<03:22:30.600><c> gradient</c><03:22:30.920><c> accumulation</c><03:22:31.359><c> which</c><03:22:31.479><c> is</c><03:22:31.640><c> nice</c>

03:22:31.910 --> 03:22:31.920 align:start position:0%
use gradient accumulation which is nice
 

03:22:31.920 --> 03:22:33.389 align:start position:0%
use gradient accumulation which is nice
and<03:22:32.160><c> you</c><03:22:32.279><c> might</c><03:22:32.520><c> not</c><03:22:32.680><c> have</c><03:22:32.800><c> that</c><03:22:32.960><c> luxury</c><03:22:33.279><c> in</c>

03:22:33.389 --> 03:22:33.399 align:start position:0%
and you might not have that luxury in
 

03:22:33.399 --> 03:22:35.349 align:start position:0%
and you might not have that luxury in
your<03:22:33.520><c> GPU</c><03:22:34.239><c> in</c><03:22:34.399><c> that</c><03:22:34.600><c> case</c><03:22:34.880><c> just</c><03:22:35.080><c> start</c>

03:22:35.349 --> 03:22:35.359 align:start position:0%
your GPU in that case just start
 

03:22:35.359 --> 03:22:36.990 align:start position:0%
your GPU in that case just start
decreasing<03:22:35.840><c> the</c><03:22:35.920><c> batch</c><03:22:36.199><c> size</c><03:22:36.439><c> until</c><03:22:36.760><c> things</c>

03:22:36.990 --> 03:22:37.000 align:start position:0%
decreasing the batch size until things
 

03:22:37.000 --> 03:22:39.349 align:start position:0%
decreasing the batch size until things
fit<03:22:37.680><c> but</c><03:22:37.840><c> keep</c><03:22:38.000><c> it</c><03:22:38.120><c> to</c><03:22:38.279><c> nice</c>

03:22:39.349 --> 03:22:39.359 align:start position:0%
fit but keep it to nice
 

03:22:39.359 --> 03:22:42.349 align:start position:0%
fit but keep it to nice
numbers<03:22:40.359><c> um</c><03:22:41.160><c> so</c><03:22:41.359><c> that's</c><03:22:41.520><c> pretty</c><03:22:41.720><c> exciting</c>

03:22:42.349 --> 03:22:42.359 align:start position:0%
numbers um so that's pretty exciting
 

03:22:42.359 --> 03:22:43.710 align:start position:0%
numbers um so that's pretty exciting
we're<03:22:42.560><c> currently</c><03:22:42.920><c> warming</c><03:22:43.199><c> up</c><03:22:43.319><c> the</c><03:22:43.399><c> learning</c>

03:22:43.710 --> 03:22:43.720 align:start position:0%
we're currently warming up the learning
 

03:22:43.720 --> 03:22:45.630 align:start position:0%
we're currently warming up the learning
rate<03:22:43.880><c> so</c><03:22:44.040><c> you</c><03:22:44.160><c> see</c><03:22:44.399><c> that</c><03:22:44.720><c> it's</c><03:22:44.880><c> still</c><03:22:45.160><c> very</c><03:22:45.359><c> low</c>

03:22:45.630 --> 03:22:45.640 align:start position:0%
rate so you see that it's still very low
 

03:22:45.640 --> 03:22:48.510 align:start position:0%
rate so you see that it's still very low
one4<03:22:46.800><c> so</c><03:22:47.000><c> this</c><03:22:47.120><c> will</c><03:22:47.279><c> ramp</c><03:22:47.680><c> up</c><03:22:48.000><c> over</c><03:22:48.160><c> the</c><03:22:48.319><c> next</c>

03:22:48.510 --> 03:22:48.520 align:start position:0%
one4 so this will ramp up over the next
 

03:22:48.520 --> 03:22:50.830 align:start position:0%
one4 so this will ramp up over the next
few<03:22:48.720><c> steps</c><03:22:49.040><c> all</c><03:22:49.199><c> the</c><03:22:49.319><c> way</c><03:22:49.439><c> to</c><03:22:49.680><c> 6</c><03:22:50.000><c> e</c>

03:22:50.830 --> 03:22:50.840 align:start position:0%
few steps all the way to 6 e
 

03:22:50.840 --> 03:22:53.670 align:start position:0%
few steps all the way to 6 e
Nega<03:22:51.840><c> uh</c><03:22:52.279><c> 4</c>

03:22:53.670 --> 03:22:53.680 align:start position:0%
Nega uh 4
 

03:22:53.680 --> 03:22:56.269 align:start position:0%
Nega uh 4
here<03:22:54.680><c> very</c><03:22:54.880><c> cool</c><03:22:55.439><c> so</c><03:22:55.640><c> now</c><03:22:55.760><c> what</c><03:22:55.880><c> I'd</c><03:22:56.000><c> like</c><03:22:56.120><c> to</c>

03:22:56.269 --> 03:22:56.279 align:start position:0%
here very cool so now what I'd like to
 

03:22:56.279 --> 03:22:58.309 align:start position:0%
here very cool so now what I'd like to
do<03:22:56.439><c> is</c><03:22:56.760><c> uh</c><03:22:56.880><c> let's</c><03:22:57.279><c> cross</c><03:22:57.520><c> the</c><03:22:57.680><c> T</c><03:22:57.880><c> and</c><03:22:58.000><c> do</c><03:22:58.160><c> our</c>

03:22:58.309 --> 03:22:58.319 align:start position:0%
do is uh let's cross the T and do our
 

03:22:58.319 --> 03:23:00.269 align:start position:0%
do is uh let's cross the T and do our
eyes<03:22:58.760><c> let's</c><03:22:59.000><c> evaluate</c><03:22:59.560><c> on</c><03:22:59.720><c> the</c><03:22:59.840><c> validation</c>

03:23:00.269 --> 03:23:00.279 align:start position:0%
eyes let's evaluate on the validation
 

03:23:00.279 --> 03:23:02.510 align:start position:0%
eyes let's evaluate on the validation
split<03:23:01.080><c> and</c><03:23:01.239><c> let's</c><03:23:01.520><c> try</c><03:23:01.720><c> to</c><03:23:01.920><c> figure</c><03:23:02.120><c> out</c><03:23:02.279><c> how</c><03:23:02.399><c> we</c>

03:23:02.510 --> 03:23:02.520 align:start position:0%
split and let's try to figure out how we
 

03:23:02.520 --> 03:23:04.990 align:start position:0%
split and let's try to figure out how we
can<03:23:02.600><c> run</c><03:23:02.800><c> evals</c><03:23:03.560><c> how</c><03:23:03.680><c> we</c><03:23:03.800><c> can</c><03:23:03.920><c> do</c><03:23:04.080><c> logging</c><03:23:04.840><c> how</c>

03:23:04.990 --> 03:23:05.000 align:start position:0%
can run evals how we can do logging how
 

03:23:05.000 --> 03:23:07.189 align:start position:0%
can run evals how we can do logging how
we<03:23:05.080><c> can</c><03:23:05.239><c> visualize</c><03:23:05.680><c> our</c><03:23:05.840><c> losses</c><03:23:06.720><c> and</c><03:23:06.920><c> all</c><03:23:07.080><c> the</c>

03:23:07.189 --> 03:23:07.199 align:start position:0%
we can visualize our losses and all the
 

03:23:07.199 --> 03:23:09.750 align:start position:0%
we can visualize our losses and all the
good<03:23:07.399><c> stuff</c><03:23:08.040><c> so</c><03:23:08.560><c> let's</c><03:23:08.800><c> get</c><03:23:08.960><c> to</c><03:23:09.199><c> that</c><03:23:09.479><c> before</c>

03:23:09.750 --> 03:23:09.760 align:start position:0%
good stuff so let's get to that before
 

03:23:09.760 --> 03:23:11.630 align:start position:0%
good stuff so let's get to that before
we<03:23:09.960><c> actually</c><03:23:10.160><c> do</c><03:23:10.359><c> the</c><03:23:10.520><c> run</c><03:23:11.199><c> okay</c><03:23:11.319><c> so</c><03:23:11.479><c> I've</c>

03:23:11.630 --> 03:23:11.640 align:start position:0%
we actually do the run okay so I've
 

03:23:11.640 --> 03:23:13.030 align:start position:0%
we actually do the run okay so I've
adjusted<03:23:12.080><c> the</c><03:23:12.199><c> code</c><03:23:12.399><c> so</c><03:23:12.560><c> that</c><03:23:12.680><c> we're</c>

03:23:13.030 --> 03:23:13.040 align:start position:0%
adjusted the code so that we're
 

03:23:13.040 --> 03:23:15.110 align:start position:0%
adjusted the code so that we're
evaluating<03:23:13.520><c> on</c><03:23:13.640><c> the</c><03:23:13.760><c> validation</c><03:23:14.160><c> split</c><03:23:14.880><c> so</c>

03:23:15.110 --> 03:23:15.120 align:start position:0%
evaluating on the validation split so
 

03:23:15.120 --> 03:23:16.990 align:start position:0%
evaluating on the validation split so
creating<03:23:15.479><c> the</c><03:23:15.680><c> Val</c><03:23:15.920><c> loader</c><03:23:16.520><c> just</c><03:23:16.640><c> by</c><03:23:16.760><c> passing</c>

03:23:16.990 --> 03:23:17.000 align:start position:0%
creating the Val loader just by passing
 

03:23:17.000 --> 03:23:19.150 align:start position:0%
creating the Val loader just by passing
in<03:23:17.160><c> Split</c><03:23:17.479><c> equals</c><03:23:17.800><c> Val</c><03:23:18.560><c> that</c><03:23:18.640><c> will</c><03:23:18.840><c> basically</c>

03:23:19.150 --> 03:23:19.160 align:start position:0%
in Split equals Val that will basically
 

03:23:19.160 --> 03:23:21.150 align:start position:0%
in Split equals Val that will basically
create<03:23:19.359><c> a</c><03:23:19.479><c> data</c><03:23:19.720><c> loader</c><03:23:20.080><c> just</c><03:23:20.239><c> for</c><03:23:20.560><c> the</c><03:23:20.960><c> uh</c>

03:23:21.150 --> 03:23:21.160 align:start position:0%
create a data loader just for the uh
 

03:23:21.160 --> 03:23:22.229 align:start position:0%
create a data loader just for the uh
validation

03:23:22.229 --> 03:23:22.239 align:start position:0%
validation
 

03:23:22.239 --> 03:23:25.750 align:start position:0%
validation
Shard<03:23:23.560><c> um</c><03:23:24.560><c> the</c><03:23:24.640><c> other</c><03:23:24.800><c> thing</c><03:23:24.920><c> I</c><03:23:25.080><c> did</c><03:23:25.319><c> is</c><03:23:25.520><c> in</c><03:23:25.600><c> the</c>

03:23:25.750 --> 03:23:25.760 align:start position:0%
Shard um the other thing I did is in the
 

03:23:25.760 --> 03:23:27.429 align:start position:0%
Shard um the other thing I did is in the
data<03:23:26.000><c> loader</c><03:23:26.279><c> I</c><03:23:26.399><c> introduced</c><03:23:26.800><c> a</c><03:23:26.880><c> new</c><03:23:27.040><c> function</c>

03:23:27.429 --> 03:23:27.439 align:start position:0%
data loader I introduced a new function
 

03:23:27.439 --> 03:23:29.870 align:start position:0%
data loader I introduced a new function
reset<03:23:28.160><c> which</c><03:23:28.279><c> is</c><03:23:28.439><c> called</c><03:23:28.640><c> at</c><03:23:28.840><c> init</c><03:23:29.640><c> and</c><03:23:29.760><c> it</c>

03:23:29.870 --> 03:23:29.880 align:start position:0%
reset which is called at init and it
 

03:23:29.880 --> 03:23:31.910 align:start position:0%
reset which is called at init and it
basically<03:23:30.239><c> resets</c><03:23:30.640><c> the</c><03:23:30.760><c> data</c><03:23:30.960><c> loader</c><03:23:31.800><c> and</c>

03:23:31.910 --> 03:23:31.920 align:start position:0%
basically resets the data loader and
 

03:23:31.920 --> 03:23:34.150 align:start position:0%
basically resets the data loader and
that<03:23:32.040><c> is</c><03:23:32.199><c> very</c><03:23:32.479><c> useful</c><03:23:33.040><c> because</c><03:23:33.439><c> when</c><03:23:33.640><c> we</c><03:23:34.000><c> come</c>

03:23:34.150 --> 03:23:34.160 align:start position:0%
that is very useful because when we come
 

03:23:34.160 --> 03:23:37.030 align:start position:0%
that is very useful because when we come
to<03:23:34.319><c> the</c><03:23:34.439><c> main</c><03:23:34.680><c> training</c><03:23:35.000><c> Loop</c><03:23:35.439><c> now</c><03:23:36.439><c> so</c><03:23:36.800><c> this</c><03:23:36.920><c> is</c>

03:23:37.030 --> 03:23:37.040 align:start position:0%
to the main training Loop now so this is
 

03:23:37.040 --> 03:23:39.510 align:start position:0%
to the main training Loop now so this is
the<03:23:37.160><c> code</c><03:23:37.399><c> that</c><03:23:37.520><c> I've</c><03:23:37.960><c> added</c><03:23:38.960><c> and</c><03:23:39.120><c> basically</c>

03:23:39.510 --> 03:23:39.520 align:start position:0%
the code that I've added and basically
 

03:23:39.520 --> 03:23:41.389 align:start position:0%
the code that I've added and basically
every<03:23:39.800><c> 100th</c><03:23:40.199><c> iteration</c><03:23:40.840><c> including</c><03:23:41.239><c> the</c>

03:23:41.389 --> 03:23:41.399 align:start position:0%
every 100th iteration including the
 

03:23:41.399 --> 03:23:44.030 align:start position:0%
every 100th iteration including the
zeroth<03:23:41.880><c> iteration</c><03:23:42.800><c> we</c><03:23:42.960><c> put</c><03:23:43.160><c> the</c><03:23:43.279><c> model</c><03:23:43.600><c> into</c>

03:23:44.030 --> 03:23:44.040 align:start position:0%
zeroth iteration we put the model into
 

03:23:44.040 --> 03:23:47.429 align:start position:0%
zeroth iteration we put the model into
evaluation<03:23:44.640><c> mode</c><03:23:45.279><c> we</c><03:23:45.479><c> reset</c><03:23:45.840><c> the</c><03:23:46.000><c> Val</c><03:23:46.199><c> loader</c>

03:23:47.429 --> 03:23:47.439 align:start position:0%
evaluation mode we reset the Val loader
 

03:23:47.439 --> 03:23:50.790 align:start position:0%
evaluation mode we reset the Val loader
and<03:23:47.600><c> then</c><03:23:48.199><c> um</c><03:23:48.920><c> no</c><03:23:49.160><c> gradients</c><03:23:49.680><c> involved</c><03:23:50.560><c> we're</c>

03:23:50.790 --> 03:23:50.800 align:start position:0%
and then um no gradients involved we're
 

03:23:50.800 --> 03:23:52.630 align:start position:0%
and then um no gradients involved we're
going<03:23:51.080><c> to</c>

03:23:52.630 --> 03:23:52.640 align:start position:0%
going to
 

03:23:52.640 --> 03:23:54.830 align:start position:0%
going to
basically<03:23:53.640><c> accumulate</c><03:23:54.040><c> the</c><03:23:54.120><c> gradients</c><03:23:54.560><c> over</c>

03:23:54.830 --> 03:23:54.840 align:start position:0%
basically accumulate the gradients over
 

03:23:54.840 --> 03:23:58.030 align:start position:0%
basically accumulate the gradients over
say<03:23:55.080><c> 20</c><03:23:55.880><c> steps</c><03:23:56.880><c> and</c><03:23:57.000><c> then</c><03:23:57.199><c> average</c><03:23:57.520><c> it</c><03:23:57.640><c> all</c><03:23:57.840><c> up</c>

03:23:58.030 --> 03:23:58.040 align:start position:0%
say 20 steps and then average it all up
 

03:23:58.040 --> 03:24:01.229 align:start position:0%
say 20 steps and then average it all up
and<03:23:58.160><c> print</c><03:23:58.359><c> out</c><03:23:58.520><c> the</c><03:23:58.640><c> validation</c><03:23:59.319><c> loss</c><03:24:00.319><c> and</c><03:24:00.520><c> so</c>

03:24:01.229 --> 03:24:01.239 align:start position:0%
and print out the validation loss and so
 

03:24:01.239 --> 03:24:03.950 align:start position:0%
and print out the validation loss and so
that<03:24:02.000><c> basically</c><03:24:02.840><c> is</c><03:24:03.000><c> the</c><03:24:03.120><c> exact</c><03:24:03.399><c> same</c><03:24:03.640><c> logic</c>

03:24:03.950 --> 03:24:03.960 align:start position:0%
that basically is the exact same logic
 

03:24:03.960 --> 03:24:06.309 align:start position:0%
that basically is the exact same logic
as<03:24:04.080><c> the</c><03:24:04.239><c> training</c><03:24:04.560><c> Loop</c><03:24:05.000><c> roughly</c><03:24:05.880><c> but</c><03:24:06.120><c> there's</c>

03:24:06.309 --> 03:24:06.319 align:start position:0%
as the training Loop roughly but there's
 

03:24:06.319 --> 03:24:07.870 align:start position:0%
as the training Loop roughly but there's
no<03:24:06.640><c> loss</c><03:24:06.920><c> that</c><03:24:07.160><c> backward</c><03:24:07.520><c> it's</c><03:24:07.640><c> only</c>

03:24:07.870 --> 03:24:07.880 align:start position:0%
no loss that backward it's only
 

03:24:07.880 --> 03:24:09.469 align:start position:0%
no loss that backward it's only
inference<03:24:08.359><c> we're</c><03:24:08.520><c> just</c><03:24:08.680><c> measuring</c><03:24:09.080><c> the</c><03:24:09.199><c> loss</c>

03:24:09.469 --> 03:24:09.479 align:start position:0%
inference we're just measuring the loss
 

03:24:09.479 --> 03:24:11.229 align:start position:0%
inference we're just measuring the loss
we're<03:24:09.680><c> adding</c><03:24:09.920><c> it</c><03:24:10.080><c> up</c><03:24:10.600><c> everything</c><03:24:10.880><c> else</c>

03:24:11.229 --> 03:24:11.239 align:start position:0%
we're adding it up everything else
 

03:24:11.239 --> 03:24:13.150 align:start position:0%
we're adding it up everything else
otherwise<03:24:11.760><c> applies</c><03:24:12.319><c> and</c><03:24:12.479><c> is</c><03:24:12.760><c> exactly</c><03:24:13.040><c> as</c>

03:24:13.150 --> 03:24:13.160 align:start position:0%
otherwise applies and is exactly as
 

03:24:13.160 --> 03:24:15.189 align:start position:0%
otherwise applies and is exactly as
we've<03:24:13.319><c> seen</c><03:24:13.520><c> it</c><03:24:13.720><c> before</c><03:24:14.520><c> and</c><03:24:14.640><c> so</c><03:24:14.880><c> this</c><03:24:15.000><c> will</c>

03:24:15.189 --> 03:24:15.199 align:start position:0%
we've seen it before and so this will
 

03:24:15.199 --> 03:24:16.910 align:start position:0%
we've seen it before and so this will
print<03:24:15.520><c> the</c><03:24:15.640><c> validation</c><03:24:16.080><c> laws</c>

03:24:16.910 --> 03:24:16.920 align:start position:0%
print the validation laws
 

03:24:16.920 --> 03:24:19.150 align:start position:0%
print the validation laws
um<03:24:17.120><c> every</c><03:24:17.439><c> 100th</c><03:24:17.920><c> iteration</c><03:24:18.680><c> including</c><03:24:19.040><c> on</c>

03:24:19.150 --> 03:24:19.160 align:start position:0%
um every 100th iteration including on
 

03:24:19.160 --> 03:24:20.510 align:start position:0%
um every 100th iteration including on
the<03:24:19.279><c> very</c><03:24:19.439><c> first</c>

03:24:20.510 --> 03:24:20.520 align:start position:0%
the very first
 

03:24:20.520 --> 03:24:23.110 align:start position:0%
the very first
iteration<03:24:21.520><c> uh</c><03:24:21.640><c> so</c><03:24:21.840><c> that's</c><03:24:22.040><c> nice</c><03:24:22.880><c> that</c><03:24:22.960><c> will</c>

03:24:23.110 --> 03:24:23.120 align:start position:0%
iteration uh so that's nice that will
 

03:24:23.120 --> 03:24:24.990 align:start position:0%
iteration uh so that's nice that will
tell<03:24:23.279><c> us</c><03:24:23.520><c> some</c><03:24:23.760><c> amount</c><03:24:24.199><c> some</c><03:24:24.560><c> a</c><03:24:24.640><c> little</c><03:24:24.800><c> bit</c>

03:24:24.990 --> 03:24:25.000 align:start position:0%
tell us some amount some a little bit
 

03:24:25.000 --> 03:24:27.189 align:start position:0%
tell us some amount some a little bit
about<03:24:25.279><c> how</c><03:24:25.399><c> much</c><03:24:25.520><c> we're</c><03:24:26.040><c> overfitting</c><03:24:27.040><c> that</c>

03:24:27.189 --> 03:24:27.199 align:start position:0%
about how much we're overfitting that
 

03:24:27.199 --> 03:24:29.349 align:start position:0%
about how much we're overfitting that
said<03:24:27.520><c> like</c><03:24:28.120><c> uh</c><03:24:28.239><c> we</c><03:24:28.359><c> have</c><03:24:28.600><c> roughly</c><03:24:28.920><c> Infinity</c>

03:24:29.349 --> 03:24:29.359 align:start position:0%
said like uh we have roughly Infinity
 

03:24:29.359 --> 03:24:31.349 align:start position:0%
said like uh we have roughly Infinity
data<03:24:29.840><c> so</c><03:24:30.000><c> we're</c><03:24:30.199><c> mostly</c><03:24:30.520><c> expecting</c><03:24:30.880><c> our</c><03:24:31.040><c> train</c>

03:24:31.349 --> 03:24:31.359 align:start position:0%
data so we're mostly expecting our train
 

03:24:31.359 --> 03:24:33.750 align:start position:0%
data so we're mostly expecting our train
and<03:24:31.520><c> Val</c><03:24:31.800><c> loss</c><03:24:32.080><c> to</c><03:24:32.160><c> be</c><03:24:32.359><c> about</c><03:24:32.600><c> the</c><03:24:32.720><c> same</c><03:24:33.600><c> but</c>

03:24:33.750 --> 03:24:33.760 align:start position:0%
and Val loss to be about the same but
 

03:24:33.760 --> 03:24:34.990 align:start position:0%
and Val loss to be about the same but
the<03:24:33.840><c> other</c><03:24:34.040><c> reason</c><03:24:34.319><c> I'm</c><03:24:34.439><c> kind</c><03:24:34.560><c> of</c><03:24:34.680><c> interested</c>

03:24:34.990 --> 03:24:35.000 align:start position:0%
the other reason I'm kind of interested
 

03:24:35.000 --> 03:24:36.790 align:start position:0%
the other reason I'm kind of interested
in<03:24:35.160><c> this</c><03:24:35.319><c> is</c><03:24:35.479><c> because</c><03:24:35.720><c> we</c><03:24:35.880><c> can</c><03:24:36.040><c> take</c><03:24:36.199><c> the</c><03:24:36.319><c> GPT</c>

03:24:36.790 --> 03:24:36.800 align:start position:0%
in this is because we can take the GPT
 

03:24:36.800 --> 03:24:39.670 align:start position:0%
in this is because we can take the GPT
2124m<03:24:37.800><c> as</c><03:24:37.960><c> openi</c><03:24:38.479><c> released</c><03:24:38.840><c> it</c><03:24:39.359><c> we</c><03:24:39.479><c> can</c>

03:24:39.670 --> 03:24:39.680 align:start position:0%
2124m as openi released it we can
 

03:24:39.680 --> 03:24:41.670 align:start position:0%
2124m as openi released it we can
initialize<03:24:40.199><c> from</c><03:24:40.399><c> it</c><03:24:40.920><c> and</c><03:24:41.040><c> we</c><03:24:41.160><c> can</c><03:24:41.319><c> basically</c>

03:24:41.670 --> 03:24:41.680 align:start position:0%
initialize from it and we can basically
 

03:24:41.680 --> 03:24:43.269 align:start position:0%
initialize from it and we can basically
see<03:24:41.920><c> what</c><03:24:42.040><c> kind</c><03:24:42.160><c> of</c><03:24:42.279><c> loss</c><03:24:42.520><c> it</c><03:24:42.680><c> achieves</c><03:24:43.040><c> on</c><03:24:43.160><c> the</c>

03:24:43.269 --> 03:24:43.279 align:start position:0%
see what kind of loss it achieves on the
 

03:24:43.279 --> 03:24:45.110 align:start position:0%
see what kind of loss it achieves on the
validation<03:24:43.680><c> loss</c><03:24:44.000><c> as</c><03:24:44.120><c> well</c><03:24:44.640><c> and</c><03:24:44.760><c> that</c><03:24:44.920><c> gives</c>

03:24:45.110 --> 03:24:45.120 align:start position:0%
validation loss as well and that gives
 

03:24:45.120 --> 03:24:47.870 align:start position:0%
validation loss as well and that gives
us<03:24:45.319><c> kind</c><03:24:45.439><c> of</c><03:24:45.560><c> an</c><03:24:45.840><c> indication</c><03:24:46.600><c> as</c><03:24:46.760><c> to</c><03:24:47.600><c> uh</c><03:24:47.720><c> how</c>

03:24:47.870 --> 03:24:47.880 align:start position:0%
us kind of an indication as to uh how
 

03:24:47.880 --> 03:24:49.550 align:start position:0%
us kind of an indication as to uh how
much<03:24:48.080><c> that</c><03:24:48.239><c> model</c><03:24:48.439><c> would</c><03:24:48.600><c> generalize</c><03:24:48.960><c> to</c><03:24:49.080><c> 124</c>

03:24:49.550 --> 03:24:49.560 align:start position:0%
much that model would generalize to 124
 

03:24:49.560 --> 03:24:52.950 align:start position:0%
much that model would generalize to 124
M<03:24:50.040><c> but</c><03:24:50.120><c> it's</c><03:24:50.279><c> not</c><03:24:50.479><c> an</c><03:24:51.160><c> sorry</c><03:24:51.399><c> to</c><03:24:51.640><c> fine</c><03:24:51.920><c> web</c><03:24:52.199><c> edu</c>

03:24:52.950 --> 03:24:52.960 align:start position:0%
M but it's not an sorry to fine web edu
 

03:24:52.960 --> 03:24:55.030 align:start position:0%
M but it's not an sorry to fine web edu
validation<03:24:53.399><c> split</c><03:24:54.279><c> that</c><03:24:54.439><c> said</c><03:24:54.640><c> it's</c><03:24:54.760><c> not</c><03:24:54.880><c> a</c>

03:24:55.030 --> 03:24:55.040 align:start position:0%
validation split that said it's not a
 

03:24:55.040 --> 03:24:56.990 align:start position:0%
validation split that said it's not a
super<03:24:55.279><c> fair</c><03:24:55.520><c> comparison</c><03:24:55.960><c> to</c><03:24:56.080><c> gpt2</c><03:24:56.760><c> because</c><03:24:56.920><c> it</c>

03:24:56.990 --> 03:24:57.000 align:start position:0%
super fair comparison to gpt2 because it
 

03:24:57.000 --> 03:24:58.229 align:start position:0%
super fair comparison to gpt2 because it
was<03:24:57.120><c> trained</c><03:24:57.359><c> on</c><03:24:57.479><c> a</c><03:24:57.600><c> very</c><03:24:57.760><c> different</c><03:24:58.000><c> data</c>

03:24:58.229 --> 03:24:58.239 align:start position:0%
was trained on a very different data
 

03:24:58.239 --> 03:25:00.030 align:start position:0%
was trained on a very different data
distribution<03:24:59.120><c> but</c><03:24:59.279><c> it's</c><03:24:59.439><c> still</c><03:24:59.680><c> kind</c><03:24:59.800><c> of</c><03:24:59.920><c> like</c>

03:25:00.030 --> 03:25:00.040 align:start position:0%
distribution but it's still kind of like
 

03:25:00.040 --> 03:25:02.389 align:start position:0%
distribution but it's still kind of like
an<03:25:00.160><c> interesting</c><03:25:00.520><c> data</c><03:25:00.800><c> point</c><03:25:01.800><c> and</c><03:25:02.000><c> in</c><03:25:02.160><c> any</c>

03:25:02.389 --> 03:25:02.399 align:start position:0%
an interesting data point and in any
 

03:25:02.399 --> 03:25:03.870 align:start position:0%
an interesting data point and in any
case<03:25:02.560><c> you</c><03:25:02.640><c> would</c><03:25:02.840><c> always</c><03:25:03.080><c> want</c><03:25:03.199><c> to</c><03:25:03.399><c> have</c><03:25:03.720><c> a</c>

03:25:03.870 --> 03:25:03.880 align:start position:0%
case you would always want to have a
 

03:25:03.880 --> 03:25:06.309 align:start position:0%
case you would always want to have a
validation<03:25:04.359><c> split</c><03:25:04.720><c> in</c><03:25:04.840><c> a</c><03:25:05.359><c> training</c><03:25:05.760><c> run</c><03:25:06.080><c> like</c>

03:25:06.309 --> 03:25:06.319 align:start position:0%
validation split in a training run like
 

03:25:06.319 --> 03:25:08.349 align:start position:0%
validation split in a training run like
this<03:25:06.920><c> so</c><03:25:07.120><c> that</c><03:25:07.279><c> you</c><03:25:07.399><c> can</c><03:25:07.640><c> make</c><03:25:07.800><c> sure</c><03:25:08.120><c> that</c><03:25:08.239><c> you</c>

03:25:08.349 --> 03:25:08.359 align:start position:0%
this so that you can make sure that you
 

03:25:08.359 --> 03:25:11.750 align:start position:0%
this so that you can make sure that you
are<03:25:08.560><c> not</c><03:25:09.399><c> um</c><03:25:10.120><c> overfitting</c><03:25:11.120><c> and</c><03:25:11.399><c> this</c><03:25:11.520><c> is</c>

03:25:11.750 --> 03:25:11.760 align:start position:0%
are not um overfitting and this is
 

03:25:11.760 --> 03:25:13.910 align:start position:0%
are not um overfitting and this is
especially<03:25:12.160><c> a</c><03:25:12.279><c> concern</c><03:25:12.760><c> if</c><03:25:12.880><c> we</c><03:25:12.960><c> were</c><03:25:13.199><c> to</c><03:25:13.439><c> make</c>

03:25:13.910 --> 03:25:13.920 align:start position:0%
especially a concern if we were to make
 

03:25:13.920 --> 03:25:16.910 align:start position:0%
especially a concern if we were to make
more<03:25:14.239><c> Epoch</c><03:25:14.720><c> in</c><03:25:14.800><c> our</c><03:25:14.920><c> training</c><03:25:15.279><c> data</c><03:25:16.160><c> um</c><03:25:16.760><c> so</c>

03:25:16.910 --> 03:25:16.920 align:start position:0%
more Epoch in our training data um so
 

03:25:16.920 --> 03:25:18.309 align:start position:0%
more Epoch in our training data um so
for<03:25:17.080><c> example</c><03:25:17.520><c> right</c><03:25:17.680><c> now</c><03:25:17.800><c> we're</c><03:25:17.920><c> just</c><03:25:18.040><c> doing</c><03:25:18.239><c> a</c>

03:25:18.309 --> 03:25:18.319 align:start position:0%
for example right now we're just doing a
 

03:25:18.319 --> 03:25:20.349 align:start position:0%
for example right now we're just doing a
single<03:25:18.600><c> Epoch</c><03:25:19.239><c> but</c><03:25:19.399><c> if</c><03:25:19.520><c> we</c><03:25:19.800><c> get</c><03:25:19.920><c> to</c><03:25:20.040><c> a</c><03:25:20.160><c> point</c>

03:25:20.349 --> 03:25:20.359 align:start position:0%
single Epoch but if we get to a point
 

03:25:20.359 --> 03:25:21.910 align:start position:0%
single Epoch but if we get to a point
where<03:25:20.479><c> we</c><03:25:20.600><c> want</c><03:25:20.680><c> to</c><03:25:20.800><c> train</c><03:25:21.000><c> on</c><03:25:21.160><c> 10</c><03:25:21.359><c> epochs</c><03:25:21.800><c> or</c>

03:25:21.910 --> 03:25:21.920 align:start position:0%
where we want to train on 10 epochs or
 

03:25:21.920 --> 03:25:23.590 align:start position:0%
where we want to train on 10 epochs or
something<03:25:22.199><c> like</c><03:25:22.359><c> that</c><03:25:22.760><c> we</c><03:25:22.880><c> would</c><03:25:23.120><c> be</c><03:25:23.319><c> really</c>

03:25:23.590 --> 03:25:23.600 align:start position:0%
something like that we would be really
 

03:25:23.600 --> 03:25:26.110 align:start position:0%
something like that we would be really
careful<03:25:24.600><c> with</c><03:25:25.040><c> maybe</c><03:25:25.279><c> we</c><03:25:25.399><c> are</c><03:25:25.560><c> memorizing</c>

03:25:26.110 --> 03:25:26.120 align:start position:0%
careful with maybe we are memorizing
 

03:25:26.120 --> 03:25:28.070 align:start position:0%
careful with maybe we are memorizing
that<03:25:26.279><c> data</c><03:25:26.560><c> too</c><03:25:26.760><c> much</c><03:25:27.479><c> if</c><03:25:27.560><c> we</c><03:25:27.720><c> have</c><03:25:27.800><c> a</c><03:25:27.920><c> big</c>

03:25:28.070 --> 03:25:28.080 align:start position:0%
that data too much if we have a big
 

03:25:28.080 --> 03:25:30.590 align:start position:0%
that data too much if we have a big
enough<03:25:28.359><c> model</c><03:25:29.319><c> and</c><03:25:29.640><c> our</c><03:25:29.840><c> validation</c><03:25:30.279><c> split</c>

03:25:30.590 --> 03:25:30.600 align:start position:0%
enough model and our validation split
 

03:25:30.600 --> 03:25:32.150 align:start position:0%
enough model and our validation split
would<03:25:30.760><c> be</c><03:25:30.920><c> one</c><03:25:31.080><c> way</c><03:25:31.239><c> to</c><03:25:31.359><c> tell</c><03:25:31.600><c> whether</c><03:25:31.880><c> that</c><03:25:32.000><c> is</c>

03:25:32.150 --> 03:25:32.160 align:start position:0%
would be one way to tell whether that is
 

03:25:32.160 --> 03:25:34.429 align:start position:0%
would be one way to tell whether that is
happening<03:25:33.000><c> okay</c><03:25:33.080><c> and</c><03:25:33.239><c> in</c><03:25:33.399><c> addition</c><03:25:33.720><c> to</c><03:25:33.960><c> that</c>

03:25:34.429 --> 03:25:34.439 align:start position:0%
happening okay and in addition to that
 

03:25:34.439 --> 03:25:36.110 align:start position:0%
happening okay and in addition to that
if<03:25:34.560><c> you</c><03:25:34.680><c> remember</c><03:25:35.080><c> at</c><03:25:35.319><c> bottom</c><03:25:35.560><c> of</c><03:25:35.640><c> our</c><03:25:35.800><c> script</c>

03:25:36.110 --> 03:25:36.120 align:start position:0%
if you remember at bottom of our script
 

03:25:36.120 --> 03:25:37.670 align:start position:0%
if you remember at bottom of our script
we<03:25:36.239><c> had</c><03:25:36.359><c> all</c><03:25:36.479><c> of</c><03:25:36.600><c> this</c><03:25:36.760><c> orphaned</c><03:25:37.239><c> code</c><03:25:37.479><c> for</c>

03:25:37.670 --> 03:25:37.680 align:start position:0%
we had all of this orphaned code for
 

03:25:37.680 --> 03:25:40.429 align:start position:0%
we had all of this orphaned code for
sampling<03:25:38.199><c> from</c><03:25:38.479><c> way</c><03:25:38.680><c> back</c><03:25:38.920><c> when</c><03:25:39.600><c> so</c><03:25:39.800><c> I</c><03:25:39.920><c> deleted</c>

03:25:40.429 --> 03:25:40.439 align:start position:0%
sampling from way back when so I deleted
 

03:25:40.439 --> 03:25:43.670 align:start position:0%
sampling from way back when so I deleted
that<03:25:40.600><c> code</c><03:25:40.800><c> and</c><03:25:40.920><c> I</c><03:25:41.040><c> moved</c><03:25:41.319><c> it</c><03:25:41.560><c> up</c><03:25:42.560><c> um</c><03:25:42.840><c> to</c><03:25:43.239><c> here</c>

03:25:43.670 --> 03:25:43.680 align:start position:0%
that code and I moved it up um to here
 

03:25:43.680 --> 03:25:45.790 align:start position:0%
that code and I moved it up um to here
so<03:25:44.160><c> once</c><03:25:44.319><c> in</c><03:25:44.439><c> a</c><03:25:44.600><c> while</c><03:25:44.760><c> we</c><03:25:44.880><c> simply</c><03:25:45.319><c> value</c>

03:25:45.790 --> 03:25:45.800 align:start position:0%
so once in a while we simply value
 

03:25:45.800 --> 03:25:46.790 align:start position:0%
so once in a while we simply value
validation

03:25:46.790 --> 03:25:46.800 align:start position:0%
validation
 

03:25:46.800 --> 03:25:49.830 align:start position:0%
validation
once<03:25:47.000><c> in</c><03:25:47.120><c> a</c><03:25:47.239><c> while</c><03:25:47.479><c> we</c><03:25:47.680><c> sample</c><03:25:48.359><c> we</c><03:25:48.560><c> generate</c>

03:25:49.830 --> 03:25:49.840 align:start position:0%
once in a while we sample we generate
 

03:25:49.840 --> 03:25:52.950 align:start position:0%
once in a while we sample we generate
samples<03:25:50.840><c> and</c><03:25:51.040><c> then</c><03:25:51.800><c> uh</c><03:25:52.239><c> we</c><03:25:52.399><c> do</c><03:25:52.560><c> that</c><03:25:52.720><c> only</c>

03:25:52.950 --> 03:25:52.960 align:start position:0%
samples and then uh we do that only
 

03:25:52.960 --> 03:25:55.030 align:start position:0%
samples and then uh we do that only
every<03:25:53.399><c> 100</c><03:25:53.640><c> steps</c><03:25:54.040><c> and</c><03:25:54.160><c> we</c><03:25:54.359><c> train</c><03:25:54.640><c> on</c><03:25:54.840><c> every</c>

03:25:55.030 --> 03:25:55.040 align:start position:0%
every 100 steps and we train on every
 

03:25:55.040 --> 03:25:56.710 align:start position:0%
every 100 steps and we train on every
single<03:25:55.359><c> step</c><03:25:56.040><c> so</c><03:25:56.199><c> that's</c><03:25:56.319><c> how</c><03:25:56.439><c> I</c><03:25:56.520><c> have</c><03:25:56.600><c> a</c>

03:25:56.710 --> 03:25:56.720 align:start position:0%
single step so that's how I have a
 

03:25:56.720 --> 03:25:58.229 align:start position:0%
single step so that's how I have a
structure<03:25:57.120><c> right</c><03:25:57.239><c> now</c><03:25:57.600><c> and</c><03:25:58.000><c> I've</c><03:25:58.120><c> been</c>

03:25:58.229 --> 03:25:58.239 align:start position:0%
structure right now and I've been
 

03:25:58.239 --> 03:26:00.269 align:start position:0%
structure right now and I've been
running<03:25:58.520><c> this</c><03:25:58.680><c> for</c><03:25:58.880><c> 10,000</c><03:25:59.279><c> iterations</c><03:26:00.120><c> so</c>

03:26:00.269 --> 03:26:00.279 align:start position:0%
running this for 10,000 iterations so
 

03:26:00.279 --> 03:26:02.269 align:start position:0%
running this for 10,000 iterations so
here<03:26:00.399><c> are</c><03:26:00.520><c> some</c><03:26:00.640><c> samples</c><03:26:00.960><c> on</c><03:26:01.080><c> neration</c>

03:26:02.269 --> 03:26:02.279 align:start position:0%
here are some samples on neration
 

03:26:02.279 --> 03:26:04.990 align:start position:0%
here are some samples on neration
1,000

03:26:04.990 --> 03:26:05.000 align:start position:0%
1,000
 

03:26:05.000 --> 03:26:07.150 align:start position:0%
1,000
um<03:26:06.000><c> hello</c><03:26:06.239><c> I'm</c><03:26:06.279><c> a</c><03:26:06.399><c> language</c><03:26:06.680><c> model</c><03:26:06.920><c> and</c><03:26:07.040><c> I'm</c>

03:26:07.150 --> 03:26:07.160 align:start position:0%
um hello I'm a language model and I'm
 

03:26:07.160 --> 03:26:09.030 align:start position:0%
um hello I'm a language model and I'm
not<03:26:07.319><c> able</c><03:26:07.520><c> to</c><03:26:07.680><c> get</c><03:26:07.800><c> more</c>

03:26:09.030 --> 03:26:09.040 align:start position:0%
not able to get more
 

03:26:09.040 --> 03:26:10.870 align:start position:0%
not able to get more
creative<03:26:10.040><c> I'm</c><03:26:10.160><c> a</c><03:26:10.319><c> language</c><03:26:10.560><c> model</c><03:26:10.760><c> and</c>

03:26:10.870 --> 03:26:10.880 align:start position:0%
creative I'm a language model and
 

03:26:10.880 --> 03:26:12.429 align:start position:0%
creative I'm a language model and
languages<03:26:11.319><c> file</c><03:26:11.560><c> you're</c><03:26:11.720><c> learning</c><03:26:12.120><c> about</c>

03:26:12.429 --> 03:26:12.439 align:start position:0%
languages file you're learning about
 

03:26:12.439 --> 03:26:14.150 align:start position:0%
languages file you're learning about
here<03:26:12.680><c> is</c><03:26:13.160><c> or</c><03:26:13.359><c> is</c><03:26:13.520><c> the</c><03:26:13.640><c> beginning</c><03:26:13.920><c> of</c><03:26:14.000><c> a</c>

03:26:14.150 --> 03:26:14.160 align:start position:0%
here is or is the beginning of a
 

03:26:14.160 --> 03:26:16.349 align:start position:0%
here is or is the beginning of a
computer

03:26:16.349 --> 03:26:16.359 align:start position:0%
computer
 

03:26:16.359 --> 03:26:19.389 align:start position:0%
computer
okay<03:26:16.520><c> so</c><03:26:17.199><c> this</c><03:26:17.319><c> is</c><03:26:17.439><c> all</c><03:26:17.680><c> like</c><03:26:17.880><c> pretty</c><03:26:18.640><c> uh</c><03:26:19.319><c> this</c>

03:26:19.389 --> 03:26:19.399 align:start position:0%
okay so this is all like pretty uh this
 

03:26:19.399 --> 03:26:21.469 align:start position:0%
okay so this is all like pretty uh this
is<03:26:19.520><c> still</c><03:26:19.680><c> a</c><03:26:19.840><c> garble</c><03:26:20.720><c> uh</c><03:26:20.840><c> but</c><03:26:20.960><c> we're</c><03:26:21.120><c> only</c><03:26:21.319><c> at</c>

03:26:21.469 --> 03:26:21.479 align:start position:0%
is still a garble uh but we're only at
 

03:26:21.479 --> 03:26:24.269 align:start position:0%
is still a garble uh but we're only at
ration<03:26:22.000><c> 1,000</c><03:26:23.000><c> and</c><03:26:23.160><c> we've</c><03:26:23.399><c> only</c><03:26:23.640><c> just</c><03:26:23.840><c> barely</c>

03:26:24.269 --> 03:26:24.279 align:start position:0%
ration 1,000 and we've only just barely
 

03:26:24.279 --> 03:26:26.269 align:start position:0%
ration 1,000 and we've only just barely
reached<03:26:24.640><c> maximum</c><03:26:25.000><c> learning</c><03:26:25.359><c> rate</c><03:26:25.920><c> uh</c><03:26:26.000><c> so</c><03:26:26.160><c> this</c>

03:26:26.269 --> 03:26:26.279 align:start position:0%
reached maximum learning rate uh so this
 

03:26:26.279 --> 03:26:28.710 align:start position:0%
reached maximum learning rate uh so this
is<03:26:26.439><c> still</c><03:26:27.080><c> learning</c><03:26:28.080><c> uh</c><03:26:28.199><c> we're</c><03:26:28.359><c> about</c><03:26:28.479><c> to</c><03:26:28.600><c> get</c>

03:26:28.710 --> 03:26:28.720 align:start position:0%
is still learning uh we're about to get
 

03:26:28.720 --> 03:26:32.269 align:start position:0%
is still learning uh we're about to get
some<03:26:28.880><c> more</c><03:26:29.080><c> samples</c><03:26:29.520><c> coming</c><03:26:29.720><c> up</c><03:26:29.920><c> in</c>

03:26:32.269 --> 03:26:32.279 align:start position:0%
 
 

03:26:32.279 --> 03:26:35.550 align:start position:0%
 
1,00<03:26:33.520><c> okay</c>

03:26:35.550 --> 03:26:35.560 align:start position:0%
1,00 okay
 

03:26:35.560 --> 03:26:38.229 align:start position:0%
1,00 okay
um<03:26:36.560><c> okay</c><03:26:37.040><c> this</c><03:26:37.199><c> is</c><03:26:37.520><c> you</c><03:26:37.600><c> know</c><03:26:37.760><c> the</c><03:26:37.840><c> model</c><03:26:38.080><c> is</c>

03:26:38.229 --> 03:26:38.239 align:start position:0%
um okay this is you know the model is
 

03:26:38.239 --> 03:26:42.070 align:start position:0%
um okay this is you know the model is
still<03:26:38.600><c> is</c><03:26:38.720><c> still</c><03:26:39.080><c> a</c><03:26:39.239><c> young</c><03:26:39.880><c> baby</c><03:26:40.880><c> okay</c><03:26:41.080><c> so</c><03:26:41.640><c> uh</c>

03:26:42.070 --> 03:26:42.080 align:start position:0%
still is still a young baby okay so uh
 

03:26:42.080 --> 03:26:44.510 align:start position:0%
still is still a young baby okay so uh
basically<03:26:42.520><c> all</c><03:26:42.640><c> of</c><03:26:42.840><c> this</c><03:26:43.160><c> sampling</c><03:26:43.680><c> code</c><03:26:44.359><c> that</c>

03:26:44.510 --> 03:26:44.520 align:start position:0%
basically all of this sampling code that
 

03:26:44.520 --> 03:26:45.910 align:start position:0%
basically all of this sampling code that
I've<03:26:44.720><c> put</c><03:26:44.960><c> here</c><03:26:45.439><c> everything</c><03:26:45.680><c> should</c><03:26:45.840><c> be</c>

03:26:45.910 --> 03:26:45.920 align:start position:0%
I've put here everything should be
 

03:26:45.920 --> 03:26:47.710 align:start position:0%
I've put here everything should be
familiar<03:26:46.520><c> with</c><03:26:46.720><c> to</c><03:26:46.920><c> you</c><03:26:47.120><c> and</c><03:26:47.279><c> came</c><03:26:47.479><c> from</c>

03:26:47.710 --> 03:26:47.720 align:start position:0%
familiar with to you and came from
 

03:26:47.720 --> 03:26:49.469 align:start position:0%
familiar with to you and came from
before<03:26:48.239><c> the</c><03:26:48.359><c> only</c><03:26:48.520><c> thing</c><03:26:48.680><c> that</c><03:26:48.800><c> I</c><03:26:48.960><c> did</c><03:26:49.120><c> is</c><03:26:49.359><c> I</c>

03:26:49.469 --> 03:26:49.479 align:start position:0%
before the only thing that I did is I
 

03:26:49.479 --> 03:26:52.189 align:start position:0%
before the only thing that I did is I
created<03:26:49.920><c> a</c><03:26:50.120><c> generator</c><03:26:50.680><c> object</c><03:26:50.960><c> in</c><03:26:51.160><c> pytorch</c><03:26:52.000><c> so</c>

03:26:52.189 --> 03:26:52.199 align:start position:0%
created a generator object in pytorch so
 

03:26:52.199 --> 03:26:54.429 align:start position:0%
created a generator object in pytorch so
that<03:26:52.399><c> I</c><03:26:52.520><c> have</c><03:26:52.680><c> a</c><03:26:52.920><c> direct</c><03:26:53.279><c> control</c><03:26:53.760><c> over</c><03:26:54.120><c> the</c>

03:26:54.429 --> 03:26:54.439 align:start position:0%
that I have a direct control over the
 

03:26:54.439 --> 03:26:56.670 align:start position:0%
that I have a direct control over the
sampling<03:26:55.160><c> of</c><03:26:55.279><c> the</c><03:26:55.399><c> random</c><03:26:55.720><c> numbers</c><03:26:56.520><c> don't</c>

03:26:56.670 --> 03:26:56.680 align:start position:0%
sampling of the random numbers don't
 

03:26:56.680 --> 03:26:58.630 align:start position:0%
sampling of the random numbers don't
because<03:26:56.880><c> I</c><03:26:56.960><c> don't</c><03:26:57.080><c> want</c><03:26:57.239><c> to</c><03:26:57.439><c> impact</c><03:26:57.920><c> the</c><03:26:58.040><c> RNG</c>

03:26:58.630 --> 03:26:58.640 align:start position:0%
because I don't want to impact the RNG
 

03:26:58.640 --> 03:27:00.510 align:start position:0%
because I don't want to impact the RNG
state<03:26:59.319><c> of</c><03:26:59.439><c> the</c><03:26:59.560><c> random</c><03:26:59.800><c> number</c><03:27:00.040><c> generator</c>

03:27:00.510 --> 03:27:00.520 align:start position:0%
state of the random number generator
 

03:27:00.520 --> 03:27:02.950 align:start position:0%
state of the random number generator
that<03:27:00.600><c> is</c><03:27:00.760><c> the</c><03:27:01.000><c> global</c><03:27:01.680><c> one</c><03:27:01.880><c> used</c><03:27:02.199><c> for</c><03:27:02.399><c> training</c>

03:27:02.950 --> 03:27:02.960 align:start position:0%
that is the global one used for training
 

03:27:02.960 --> 03:27:04.389 align:start position:0%
that is the global one used for training
I<03:27:03.040><c> want</c><03:27:03.239><c> this</c><03:27:03.359><c> to</c><03:27:03.479><c> be</c><03:27:03.600><c> completely</c><03:27:04.000><c> outside</c><03:27:04.279><c> of</c>

03:27:04.389 --> 03:27:04.399 align:start position:0%
I want this to be completely outside of
 

03:27:04.399 --> 03:27:07.070 align:start position:0%
I want this to be completely outside of
the<03:27:04.520><c> training</c><03:27:04.880><c> Loop</c><03:27:05.880><c> and</c><03:27:06.040><c> so</c><03:27:06.479><c> I'm</c><03:27:06.600><c> using</c><03:27:06.880><c> a</c>

03:27:07.070 --> 03:27:07.080 align:start position:0%
the training Loop and so I'm using a
 

03:27:07.080 --> 03:27:09.670 align:start position:0%
the training Loop and so I'm using a
special<03:27:07.439><c> sampling</c><03:27:08.000><c> RNG</c><03:27:09.000><c> and</c><03:27:09.160><c> then</c><03:27:09.399><c> I</c><03:27:09.520><c> make</c>

03:27:09.670 --> 03:27:09.680 align:start position:0%
special sampling RNG and then I make
 

03:27:09.680 --> 03:27:12.150 align:start position:0%
special sampling RNG and then I make
sure<03:27:09.960><c> to</c><03:27:10.399><c> seed</c><03:27:10.760><c> it</c><03:27:11.239><c> that</c><03:27:11.439><c> every</c><03:27:11.600><c> single</c><03:27:11.880><c> rank</c>

03:27:12.150 --> 03:27:12.160 align:start position:0%
sure to seed it that every single rank
 

03:27:12.160 --> 03:27:14.870 align:start position:0%
sure to seed it that every single rank
has<03:27:12.279><c> a</c><03:27:12.439><c> different</c><03:27:12.680><c> seed</c><03:27:13.479><c> and</c><03:27:13.640><c> then</c><03:27:13.840><c> I</c><03:27:14.040><c> pass</c><03:27:14.239><c> in</c>

03:27:14.870 --> 03:27:14.880 align:start position:0%
has a different seed and then I pass in
 

03:27:14.880 --> 03:27:16.990 align:start position:0%
has a different seed and then I pass in
here<03:27:15.239><c> where</c><03:27:15.439><c> we</c><03:27:15.840><c> sort</c><03:27:16.000><c> of</c><03:27:16.319><c> consumer</c><03:27:16.720><c> in</c><03:27:16.840><c> the</c>

03:27:16.990 --> 03:27:17.000 align:start position:0%
here where we sort of consumer in the
 

03:27:17.000 --> 03:27:18.670 align:start position:0%
here where we sort of consumer in the
numbers<03:27:17.359><c> in</c><03:27:17.520><c> multinomial</c><03:27:18.399><c> where</c><03:27:18.520><c> the</c>

03:27:18.670 --> 03:27:18.680 align:start position:0%
numbers in multinomial where the
 

03:27:18.680 --> 03:27:20.830 align:start position:0%
numbers in multinomial where the
sampling<03:27:19.080><c> happens</c><03:27:19.880><c> I</c><03:27:20.000><c> make</c><03:27:20.160><c> sure</c><03:27:20.319><c> to</c><03:27:20.520><c> pass</c><03:27:20.680><c> in</c>

03:27:20.830 --> 03:27:20.840 align:start position:0%
sampling happens I make sure to pass in
 

03:27:20.840 --> 03:27:22.750 align:start position:0%
sampling happens I make sure to pass in
the<03:27:20.920><c> generator</c><03:27:21.399><c> object</c><03:27:21.760><c> there</c><03:27:22.399><c> otherwise</c>

03:27:22.750 --> 03:27:22.760 align:start position:0%
the generator object there otherwise
 

03:27:22.760 --> 03:27:25.510 align:start position:0%
the generator object there otherwise
this<03:27:22.880><c> is</c><03:27:23.279><c> identical</c><03:27:24.279><c> uh</c><03:27:24.439><c> now</c><03:27:24.720><c> the</c><03:27:24.840><c> other</c><03:27:25.120><c> thing</c>

03:27:25.510 --> 03:27:25.520 align:start position:0%
this is identical uh now the other thing
 

03:27:25.520 --> 03:27:27.469 align:start position:0%
this is identical uh now the other thing
is<03:27:26.000><c> um</c><03:27:26.319><c> you'll</c><03:27:26.560><c> notice</c><03:27:26.840><c> that</c><03:27:26.960><c> we're</c><03:27:27.120><c> running</c><03:27:27.359><c> a</c>

03:27:27.469 --> 03:27:27.479 align:start position:0%
is um you'll notice that we're running a
 

03:27:27.479 --> 03:27:29.309 align:start position:0%
is um you'll notice that we're running a
bit<03:27:27.600><c> slower</c><03:27:28.359><c> that's</c><03:27:28.560><c> because</c><03:27:28.800><c> I</c><03:27:28.960><c> actually</c><03:27:29.199><c> had</c>

03:27:29.309 --> 03:27:29.319 align:start position:0%
bit slower that's because I actually had
 

03:27:29.319 --> 03:27:31.990 align:start position:0%
bit slower that's because I actually had
to<03:27:29.560><c> disable</c><03:27:30.000><c> torch.</c><03:27:30.600><c> compile</c><03:27:31.120><c> to</c><03:27:31.319><c> get</c><03:27:31.479><c> this</c><03:27:31.640><c> to</c>

03:27:31.990 --> 03:27:32.000 align:start position:0%
to disable torch. compile to get this to
 

03:27:32.000 --> 03:27:34.510 align:start position:0%
to disable torch. compile to get this to
sample<03:27:33.000><c> and</c><03:27:33.560><c> um</c><03:27:33.760><c> so</c><03:27:33.920><c> we're</c><03:27:34.040><c> running</c><03:27:34.279><c> a</c><03:27:34.359><c> bit</c>

03:27:34.510 --> 03:27:34.520 align:start position:0%
sample and um so we're running a bit
 

03:27:34.520 --> 03:27:36.389 align:start position:0%
sample and um so we're running a bit
slower<03:27:35.199><c> so</c><03:27:35.359><c> for</c><03:27:35.479><c> some</c><03:27:35.680><c> reason</c><03:27:35.920><c> it</c><03:27:36.040><c> works</c><03:27:36.279><c> with</c>

03:27:36.389 --> 03:27:36.399 align:start position:0%
slower so for some reason it works with
 

03:27:36.399 --> 03:27:37.710 align:start position:0%
slower so for some reason it works with
no<03:27:36.560><c> torch</c><03:27:36.840><c> compile</c><03:27:37.199><c> but</c><03:27:37.279><c> when</c><03:27:37.359><c> I</c><03:27:37.439><c> torch</c>

03:27:37.710 --> 03:27:37.720 align:start position:0%
no torch compile but when I torch
 

03:27:37.720 --> 03:27:39.830 align:start position:0%
no torch compile but when I torch
compile<03:27:38.040><c> my</c><03:27:38.199><c> model</c><03:27:38.640><c> I</c><03:27:38.720><c> get</c><03:27:38.840><c> a</c><03:27:39.000><c> really</c><03:27:39.239><c> scary</c>

03:27:39.830 --> 03:27:39.840 align:start position:0%
compile my model I get a really scary
 

03:27:39.840 --> 03:27:41.469 align:start position:0%
compile my model I get a really scary
error<03:27:40.199><c> from</c><03:27:40.399><c> pytorch</c><03:27:40.840><c> and</c><03:27:40.960><c> I</c><03:27:41.040><c> have</c><03:27:41.120><c> no</c><03:27:41.239><c> idea</c>

03:27:41.469 --> 03:27:41.479 align:start position:0%
error from pytorch and I have no idea
 

03:27:41.479 --> 03:27:43.469 align:start position:0%
error from pytorch and I have no idea
how<03:27:41.600><c> to</c><03:27:41.720><c> resolve</c><03:27:42.000><c> it</c><03:27:42.160><c> right</c><03:27:42.319><c> now</c><03:27:42.880><c> so</c><03:27:43.160><c> probably</c>

03:27:43.469 --> 03:27:43.479 align:start position:0%
how to resolve it right now so probably
 

03:27:43.479 --> 03:27:45.550 align:start position:0%
how to resolve it right now so probably
by<03:27:43.600><c> the</c><03:27:43.720><c> time</c><03:27:43.880><c> you</c><03:27:44.000><c> see</c><03:27:44.319><c> this</c><03:27:44.960><c> code</c><03:27:45.160><c> released</c>

03:27:45.550 --> 03:27:45.560 align:start position:0%
by the time you see this code released
 

03:27:45.560 --> 03:27:47.269 align:start position:0%
by the time you see this code released
or<03:27:45.680><c> something</c><03:27:45.880><c> like</c><03:27:46.000><c> that</c><03:27:46.279><c> maybe</c><03:27:46.479><c> it's</c><03:27:46.640><c> fixed</c>

03:27:47.269 --> 03:27:47.279 align:start position:0%
or something like that maybe it's fixed
 

03:27:47.279 --> 03:27:49.110 align:start position:0%
or something like that maybe it's fixed
but<03:27:47.439><c> for</c><03:27:47.600><c> now</c><03:27:47.840><c> I'm</c><03:27:48.000><c> just</c><03:27:48.160><c> going</c><03:27:48.279><c> to</c><03:27:48.439><c> do</c><03:27:48.680><c> end</c>

03:27:49.110 --> 03:27:49.120 align:start position:0%
but for now I'm just going to do end
 

03:27:49.120 --> 03:27:51.150 align:start position:0%
but for now I'm just going to do end
false<03:27:50.120><c> um</c><03:27:50.359><c> and</c><03:27:50.479><c> I'm</c><03:27:50.600><c> going</c><03:27:50.680><c> to</c><03:27:50.800><c> bring</c><03:27:51.000><c> back</c>

03:27:51.150 --> 03:27:51.160 align:start position:0%
false um and I'm going to bring back
 

03:27:51.160 --> 03:27:54.269 align:start position:0%
false um and I'm going to bring back
toor<03:27:51.600><c> compile</c><03:27:52.560><c> and</c><03:27:52.680><c> you're</c><03:27:52.880><c> not</c><03:27:53.000><c> going</c><03:27:53.120><c> to</c><03:27:53.239><c> get</c>

03:27:54.269 --> 03:27:54.279 align:start position:0%
toor compile and you're not going to get
 

03:27:54.279 --> 03:27:56.510 align:start position:0%
toor compile and you're not going to get
samples<03:27:55.279><c> and</c><03:27:55.560><c> I</c><03:27:55.720><c> I</c><03:27:55.800><c> think</c><03:27:55.920><c> I'll</c><03:27:56.080><c> fix</c><03:27:56.319><c> this</c>

03:27:56.510 --> 03:27:56.520 align:start position:0%
samples and I I think I'll fix this
 

03:27:56.520 --> 03:27:59.110 align:start position:0%
samples and I I think I'll fix this
later<03:27:57.359><c> uh</c><03:27:57.479><c> by</c><03:27:57.600><c> the</c><03:27:57.720><c> way</c><03:27:58.399><c> um</c><03:27:58.720><c> I</c><03:27:58.800><c> will</c><03:27:58.960><c> be</c>

03:27:59.110 --> 03:27:59.120 align:start position:0%
later uh by the way um I will be
 

03:27:59.120 --> 03:28:01.189 align:start position:0%
later uh by the way um I will be
releasing<03:27:59.640><c> all</c><03:27:59.880><c> this</c><03:28:00.040><c> code</c><03:28:00.640><c> and</c><03:28:00.920><c> actually</c>

03:28:01.189 --> 03:28:01.199 align:start position:0%
releasing all this code and actually
 

03:28:01.199 --> 03:28:02.990 align:start position:0%
releasing all this code and actually
I've<03:28:01.359><c> been</c><03:28:01.600><c> very</c><03:28:01.800><c> careful</c><03:28:02.199><c> about</c><03:28:02.439><c> making</c><03:28:02.720><c> get</c>

03:28:02.990 --> 03:28:03.000 align:start position:0%
I've been very careful about making get
 

03:28:03.000 --> 03:28:05.189 align:start position:0%
I've been very careful about making get
commits<03:28:03.560><c> every</c><03:28:03.800><c> time</c><03:28:04.000><c> we</c><03:28:04.199><c> add</c><03:28:04.520><c> something</c><03:28:05.120><c> and</c>

03:28:05.189 --> 03:28:05.199 align:start position:0%
commits every time we add something and
 

03:28:05.199 --> 03:28:07.150 align:start position:0%
commits every time we add something and
so<03:28:05.319><c> I'm</c><03:28:05.439><c> going</c><03:28:05.520><c> to</c><03:28:05.760><c> release</c><03:28:06.120><c> the</c><03:28:06.239><c> entire</c><03:28:06.520><c> repo</c>

03:28:07.150 --> 03:28:07.160 align:start position:0%
so I'm going to release the entire repo
 

03:28:07.160 --> 03:28:09.229 align:start position:0%
so I'm going to release the entire repo
that<03:28:07.279><c> starts</c><03:28:07.880><c> completely</c><03:28:08.279><c> from</c><03:28:08.479><c> scratch</c><03:28:09.080><c> all</c>

03:28:09.229 --> 03:28:09.239 align:start position:0%
that starts completely from scratch all
 

03:28:09.239 --> 03:28:12.630 align:start position:0%
that starts completely from scratch all
the<03:28:09.319><c> way</c><03:28:09.520><c> to</c><03:28:10.520><c> uh</c><03:28:10.680><c> now</c><03:28:11.120><c> and</c><03:28:11.560><c> after</c><03:28:11.840><c> this</c><03:28:12.000><c> as</c><03:28:12.120><c> well</c>

03:28:12.630 --> 03:28:12.640 align:start position:0%
the way to uh now and after this as well
 

03:28:12.640 --> 03:28:13.910 align:start position:0%
the way to uh now and after this as well
and<03:28:12.760><c> so</c><03:28:12.960><c> everything</c><03:28:13.199><c> should</c><03:28:13.359><c> be</c><03:28:13.520><c> exactly</c>

03:28:13.910 --> 03:28:13.920 align:start position:0%
and so everything should be exactly
 

03:28:13.920 --> 03:28:16.229 align:start position:0%
and so everything should be exactly
documented<03:28:14.399><c> in</c><03:28:14.479><c> the</c><03:28:14.640><c> git</c><03:28:14.800><c> commit</c><03:28:15.120><c> history</c><03:28:16.000><c> um</c>

03:28:16.229 --> 03:28:16.239 align:start position:0%
documented in the git commit history um
 

03:28:16.239 --> 03:28:18.990 align:start position:0%
documented in the git commit history um
um<03:28:17.040><c> and</c><03:28:17.239><c> so</c><03:28:17.840><c> I</c><03:28:17.920><c> think</c><03:28:18.040><c> that</c><03:28:18.120><c> will</c><03:28:18.279><c> be</c><03:28:18.399><c> nice</c><03:28:18.800><c> so</c>

03:28:18.990 --> 03:28:19.000 align:start position:0%
um and so I think that will be nice so
 

03:28:19.000 --> 03:28:20.710 align:start position:0%
um and so I think that will be nice so
hopefully<03:28:19.319><c> by</c><03:28:19.439><c> the</c><03:28:19.520><c> time</c><03:28:19.640><c> you</c><03:28:19.760><c> go</c><03:28:19.880><c> to</c><03:28:20.040><c> GitHub</c>

03:28:20.710 --> 03:28:20.720 align:start position:0%
hopefully by the time you go to GitHub
 

03:28:20.720 --> 03:28:22.469 align:start position:0%
hopefully by the time you go to GitHub
uh<03:28:20.840><c> this</c><03:28:20.920><c> is</c><03:28:21.080><c> removed</c><03:28:21.439><c> and</c><03:28:21.560><c> it's</c><03:28:21.680><c> working</c><03:28:22.319><c> and</c>

03:28:22.469 --> 03:28:22.479 align:start position:0%
uh this is removed and it's working and
 

03:28:22.479 --> 03:28:24.469 align:start position:0%
uh this is removed and it's working and
I<03:28:22.560><c> will</c><03:28:22.720><c> have</c><03:28:22.880><c> fixed</c><03:28:23.120><c> the</c><03:28:23.199><c> bug</c><03:28:24.000><c> okay</c><03:28:24.199><c> so</c><03:28:24.279><c> I</c><03:28:24.399><c> have</c>

03:28:24.469 --> 03:28:24.479 align:start position:0%
I will have fixed the bug okay so I have
 

03:28:24.479 --> 03:28:26.870 align:start position:0%
I will have fixed the bug okay so I have
the<03:28:24.600><c> optimization</c><03:28:25.160><c> running</c><03:28:25.520><c> here</c><03:28:26.399><c> and</c><03:28:26.720><c> it's</c>

03:28:26.870 --> 03:28:26.880 align:start position:0%
the optimization running here and it's
 

03:28:26.880 --> 03:28:28.910 align:start position:0%
the optimization running here and it's
stepping<03:28:27.239><c> and</c><03:28:27.399><c> we're</c><03:28:27.560><c> on</c><03:28:27.800><c> step</c><03:28:28.080><c> 6,000</c><03:28:28.600><c> or</c><03:28:28.760><c> so</c>

03:28:28.910 --> 03:28:28.920 align:start position:0%
stepping and we're on step 6,000 or so
 

03:28:28.920 --> 03:28:31.309 align:start position:0%
stepping and we're on step 6,000 or so
so<03:28:29.040><c> we're</c><03:28:29.239><c> about</c><03:28:29.399><c> 30%</c><03:28:29.960><c> through</c><03:28:30.160><c> training</c><03:28:31.080><c> now</c>

03:28:31.309 --> 03:28:31.319 align:start position:0%
so we're about 30% through training now
 

03:28:31.319 --> 03:28:32.469 align:start position:0%
so we're about 30% through training now
while<03:28:31.479><c> this</c><03:28:31.600><c> is</c><03:28:31.720><c> training</c><03:28:32.080><c> I</c><03:28:32.120><c> would</c><03:28:32.239><c> like</c><03:28:32.359><c> to</c>

03:28:32.469 --> 03:28:32.479 align:start position:0%
while this is training I would like to
 

03:28:32.479 --> 03:28:34.309 align:start position:0%
while this is training I would like to
introduce<03:28:33.239><c> one</c><03:28:33.520><c> evaluation</c><03:28:34.080><c> that</c><03:28:34.160><c> we're</c>

03:28:34.309 --> 03:28:34.319 align:start position:0%
introduce one evaluation that we're
 

03:28:34.319 --> 03:28:35.830 align:start position:0%
introduce one evaluation that we're
going<03:28:34.479><c> to</c><03:28:34.720><c> use</c><03:28:34.960><c> to</c><03:28:35.160><c> supplement</c><03:28:35.680><c> the</c>

03:28:35.830 --> 03:28:35.840 align:start position:0%
going to use to supplement the
 

03:28:35.840 --> 03:28:38.910 align:start position:0%
going to use to supplement the
validation<03:28:36.439><c> set</c><03:28:37.439><c> and</c><03:28:37.600><c> that</c><03:28:37.720><c> is</c><03:28:37.840><c> the</c><03:28:38.000><c> H</c><03:28:38.439><c> swag</c>

03:28:38.910 --> 03:28:38.920 align:start position:0%
validation set and that is the H swag
 

03:28:38.920 --> 03:28:42.510 align:start position:0%
validation set and that is the H swag
eval<03:28:39.920><c> so</c><03:28:40.199><c> hos</c><03:28:40.520><c> swag</c><03:28:40.800><c> comes</c><03:28:41.080><c> from</c><03:28:41.880><c> this</c><03:28:42.080><c> paper</c>

03:28:42.510 --> 03:28:42.520 align:start position:0%
eval so hos swag comes from this paper
 

03:28:42.520 --> 03:28:44.670 align:start position:0%
eval so hos swag comes from this paper
back<03:28:42.680><c> in</c><03:28:42.800><c> 2019</c><03:28:43.479><c> so</c><03:28:43.600><c> it's</c><03:28:43.720><c> a</c><03:28:43.840><c> 5-year-old</c><03:28:44.279><c> eval</c>

03:28:44.670 --> 03:28:44.680 align:start position:0%
back in 2019 so it's a 5-year-old eval
 

03:28:44.680 --> 03:28:47.469 align:start position:0%
back in 2019 so it's a 5-year-old eval
now<03:28:45.680><c> and</c><03:28:46.120><c> the</c><03:28:46.160><c> way</c><03:28:46.279><c> H</c><03:28:46.600><c> swag</c><03:28:46.800><c> works</c><03:28:47.040><c> is</c><03:28:47.160><c> there</c><03:28:47.279><c> is</c>

03:28:47.469 --> 03:28:47.479 align:start position:0%
now and the way H swag works is there is
 

03:28:47.479 --> 03:28:50.349 align:start position:0%
now and the way H swag works is there is
basically<03:28:47.920><c> a</c><03:28:48.080><c> sentence</c><03:28:48.479><c> completion</c><03:28:49.239><c> data</c><03:28:49.560><c> set</c>

03:28:50.349 --> 03:28:50.359 align:start position:0%
basically a sentence completion data set
 

03:28:50.359 --> 03:28:52.750 align:start position:0%
basically a sentence completion data set
so<03:28:50.600><c> it's</c><03:28:50.720><c> a</c><03:28:50.840><c> multiple</c><03:28:51.239><c> choice</c><03:28:52.199><c> for</c><03:28:52.439><c> every</c><03:28:52.600><c> one</c>

03:28:52.750 --> 03:28:52.760 align:start position:0%
so it's a multiple choice for every one
 

03:28:52.760 --> 03:28:54.950 align:start position:0%
so it's a multiple choice for every one
of<03:28:52.920><c> these</c><03:28:53.080><c> questions</c><03:28:53.560><c> we</c><03:28:53.760><c> have</c><03:28:54.319><c> uh</c><03:28:54.479><c> basically</c>

03:28:54.950 --> 03:28:54.960 align:start position:0%
of these questions we have uh basically
 

03:28:54.960 --> 03:28:57.590 align:start position:0%
of these questions we have uh basically
a<03:28:55.080><c> shared</c><03:28:55.600><c> context</c><03:28:56.239><c> like</c><03:28:56.800><c> a</c><03:28:56.920><c> woman</c><03:28:57.120><c> is</c><03:28:57.279><c> outside</c>

03:28:57.590 --> 03:28:57.600 align:start position:0%
a shared context like a woman is outside
 

03:28:57.600 --> 03:28:59.550 align:start position:0%
a shared context like a woman is outside
with<03:28:57.720><c> a</c><03:28:57.840><c> bucket</c><03:28:58.120><c> and</c><03:28:58.239><c> a</c><03:28:58.399><c> dog</c><03:28:59.120><c> the</c><03:28:59.239><c> dog</c><03:28:59.439><c> is</c>

03:28:59.550 --> 03:28:59.560 align:start position:0%
with a bucket and a dog the dog is
 

03:28:59.560 --> 03:29:02.670 align:start position:0%
with a bucket and a dog the dog is
running<03:28:59.840><c> around</c><03:29:00.120><c> trying</c><03:29:00.359><c> to</c><03:29:00.560><c> avoid</c><03:29:00.920><c> bath</c><03:29:01.680><c> she</c>

03:29:02.670 --> 03:29:02.680 align:start position:0%
running around trying to avoid bath she
 

03:29:02.680 --> 03:29:04.950 align:start position:0%
running around trying to avoid bath she
a<03:29:03.160><c> Rises</c><03:29:03.600><c> the</c><03:29:03.720><c> bucket</c><03:29:04.000><c> off</c><03:29:04.199><c> with</c><03:29:04.399><c> soap</c><03:29:04.800><c> and</c>

03:29:04.950 --> 03:29:04.960 align:start position:0%
a Rises the bucket off with soap and
 

03:29:04.960 --> 03:29:08.710 align:start position:0%
a Rises the bucket off with soap and
blow<03:29:05.279><c> dry</c><03:29:05.560><c> the</c><03:29:05.680><c> dog's</c><03:29:06.640><c> head</c><03:29:07.439><c> B</c><03:29:07.760><c> uses</c><03:29:08.080><c> a</c><03:29:08.279><c> hose</c><03:29:08.560><c> to</c>

03:29:08.710 --> 03:29:08.720 align:start position:0%
blow dry the dog's head B uses a hose to
 

03:29:08.720 --> 03:29:11.309 align:start position:0%
blow dry the dog's head B uses a hose to
keep<03:29:08.840><c> it</c><03:29:08.960><c> from</c><03:29:09.120><c> getting</c><03:29:09.479><c> soapy</c><03:29:10.479><c> C</c><03:29:10.920><c> gets</c><03:29:11.160><c> the</c>

03:29:11.309 --> 03:29:11.319 align:start position:0%
keep it from getting soapy C gets the
 

03:29:11.319 --> 03:29:14.229 align:start position:0%
keep it from getting soapy C gets the
dog<03:29:11.600><c> wet</c><03:29:11.920><c> and</c><03:29:12.040><c> it</c><03:29:12.160><c> runs</c><03:29:12.439><c> away</c><03:29:12.720><c> again</c><03:29:13.520><c> or</c><03:29:13.720><c> D</c><03:29:14.000><c> gets</c>

03:29:14.229 --> 03:29:14.239 align:start position:0%
dog wet and it runs away again or D gets
 

03:29:14.239 --> 03:29:16.750 align:start position:0%
dog wet and it runs away again or D gets
into<03:29:14.479><c> a</c><03:29:14.800><c> bathtub</c><03:29:15.439><c> with</c><03:29:15.600><c> the</c><03:29:15.720><c> dog</c>

03:29:16.750 --> 03:29:16.760 align:start position:0%
into a bathtub with the dog
 

03:29:16.760 --> 03:29:19.389 align:start position:0%
into a bathtub with the dog
and<03:29:16.920><c> so</c><03:29:17.319><c> basically</c><03:29:17.760><c> the</c><03:29:17.880><c> idea</c><03:29:18.160><c> is</c><03:29:18.399><c> that</c><03:29:19.239><c> these</c>

03:29:19.389 --> 03:29:19.399 align:start position:0%
and so basically the idea is that these
 

03:29:19.399 --> 03:29:22.070 align:start position:0%
and so basically the idea is that these
multiple<03:29:19.720><c> choice</c><03:29:20.040><c> are</c><03:29:20.199><c> constructed</c><03:29:21.199><c> so</c><03:29:21.520><c> that</c>

03:29:22.070 --> 03:29:22.080 align:start position:0%
multiple choice are constructed so that
 

03:29:22.080 --> 03:29:25.630 align:start position:0%
multiple choice are constructed so that
one<03:29:22.239><c> of</c><03:29:22.399><c> them</c><03:29:22.680><c> is</c><03:29:22.760><c> a</c><03:29:23.000><c> natural</c><03:29:23.800><c> continuation</c><03:29:24.800><c> of</c>

03:29:25.630 --> 03:29:25.640 align:start position:0%
one of them is a natural continuation of
 

03:29:25.640 --> 03:29:30.030 align:start position:0%
one of them is a natural continuation of
the<03:29:26.640><c> um</c><03:29:27.479><c> sentence</c><03:29:28.239><c> and</c><03:29:28.399><c> the</c><03:29:28.520><c> others</c><03:29:28.800><c> are</c>

03:29:30.030 --> 03:29:30.040 align:start position:0%
the um sentence and the others are
 

03:29:30.040 --> 03:29:32.469 align:start position:0%
the um sentence and the others are
not<03:29:31.040><c> and</c><03:29:31.399><c> uh</c><03:29:31.520><c> the</c><03:29:31.600><c> others</c><03:29:31.880><c> might</c><03:29:32.120><c> not</c><03:29:32.319><c> make</c>

03:29:32.469 --> 03:29:32.479 align:start position:0%
not and uh the others might not make
 

03:29:32.479 --> 03:29:34.110 align:start position:0%
not and uh the others might not make
sense<03:29:32.800><c> like</c><03:29:32.960><c> uses</c><03:29:33.279><c> the</c><03:29:33.399><c> host</c><03:29:33.640><c> to</c><03:29:33.760><c> keep</c><03:29:33.920><c> it</c><03:29:34.000><c> from</c>

03:29:34.110 --> 03:29:34.120 align:start position:0%
sense like uses the host to keep it from
 

03:29:34.120 --> 03:29:36.110 align:start position:0%
sense like uses the host to keep it from
getting<03:29:34.319><c> soaped</c><03:29:34.840><c> that</c><03:29:34.960><c> makes</c><03:29:35.160><c> no</c><03:29:35.359><c> sense</c><03:29:36.040><c> and</c>

03:29:36.110 --> 03:29:36.120 align:start position:0%
getting soaped that makes no sense and
 

03:29:36.120 --> 03:29:38.150 align:start position:0%
getting soaped that makes no sense and
so<03:29:36.279><c> what</c><03:29:36.439><c> happens</c><03:29:36.760><c> is</c><03:29:36.960><c> that</c><03:29:37.199><c> models</c><03:29:37.640><c> that</c><03:29:37.800><c> are</c>

03:29:38.150 --> 03:29:38.160 align:start position:0%
so what happens is that models that are
 

03:29:38.160 --> 03:29:40.269 align:start position:0%
so what happens is that models that are
not<03:29:38.399><c> trained</c><03:29:38.840><c> very</c><03:29:39.040><c> well</c><03:29:39.399><c> are</c><03:29:39.560><c> not</c><03:29:39.720><c> able</c><03:29:39.960><c> to</c>

03:29:40.269 --> 03:29:40.279 align:start position:0%
not trained very well are not able to
 

03:29:40.279 --> 03:29:43.030 align:start position:0%
not trained very well are not able to
tell<03:29:40.720><c> these</c><03:29:41.040><c> apart</c><03:29:41.640><c> but</c><03:29:41.800><c> models</c><03:29:42.279><c> that</c><03:29:42.800><c> have</c><03:29:42.960><c> a</c>

03:29:43.030 --> 03:29:43.040 align:start position:0%
tell these apart but models that have a
 

03:29:43.040 --> 03:29:45.750 align:start position:0%
tell these apart but models that have a
lot<03:29:43.160><c> of</c><03:29:43.279><c> World</c><03:29:43.520><c> Knowledge</c><03:29:44.040><c> and</c><03:29:44.279><c> can</c><03:29:44.720><c> tell</c><03:29:45.600><c> uh</c>

03:29:45.750 --> 03:29:45.760 align:start position:0%
lot of World Knowledge and can tell uh
 

03:29:45.760 --> 03:29:48.030 align:start position:0%
lot of World Knowledge and can tell uh
which<03:29:46.359><c> um</c><03:29:46.880><c> and</c><03:29:47.040><c> can</c><03:29:47.199><c> tell</c><03:29:47.439><c> a</c><03:29:47.560><c> lot</c><03:29:47.720><c> about</c><03:29:47.920><c> the</c>

03:29:48.030 --> 03:29:48.040 align:start position:0%
which um and can tell a lot about the
 

03:29:48.040 --> 03:29:50.189 align:start position:0%
which um and can tell a lot about the
world<03:29:48.520><c> will</c><03:29:48.680><c> be</c><03:29:48.800><c> able</c><03:29:49.000><c> to</c><03:29:49.600><c> create</c><03:29:49.880><c> these</c>

03:29:50.189 --> 03:29:50.199 align:start position:0%
world will be able to create these
 

03:29:50.199 --> 03:29:52.750 align:start position:0%
world will be able to create these
completions<03:29:51.199><c> and</c><03:29:51.720><c> these</c><03:29:52.120><c> sentences</c><03:29:52.600><c> are</c>

03:29:52.750 --> 03:29:52.760 align:start position:0%
completions and these sentences are
 

03:29:52.760 --> 03:29:55.670 align:start position:0%
completions and these sentences are
sourced<03:29:53.239><c> from</c><03:29:53.680><c> activity</c><03:29:54.160><c> net</c><03:29:54.720><c> and</c><03:29:54.920><c> from</c><03:29:55.199><c> Wiki</c>

03:29:55.670 --> 03:29:55.680 align:start position:0%
sourced from activity net and from Wiki
 

03:29:55.680 --> 03:30:00.150 align:start position:0%
sourced from activity net and from Wiki
how<03:29:56.680><c> and</c><03:29:57.600><c> at</c><03:29:57.720><c> the</c><03:29:57.880><c> bottom</c><03:29:58.199><c> of</c><03:29:58.439><c> the</c><03:29:59.239><c> uh</c>

03:30:00.150 --> 03:30:00.160 align:start position:0%
how and at the bottom of the uh
 

03:30:00.160 --> 03:30:03.349 align:start position:0%
how and at the bottom of the uh
paper<03:30:01.160><c> there's</c><03:30:01.439><c> kind</c><03:30:01.520><c> of</c><03:30:01.680><c> like</c><03:30:01.840><c> a</c><03:30:02.160><c> cool</c><03:30:02.920><c> chart</c>

03:30:03.349 --> 03:30:03.359 align:start position:0%
paper there's kind of like a cool chart
 

03:30:03.359 --> 03:30:05.790 align:start position:0%
paper there's kind of like a cool chart
of<03:30:03.640><c> the</c><03:30:03.760><c> kinds</c><03:30:03.960><c> of</c><03:30:04.160><c> domains</c><03:30:04.640><c> in</c><03:30:04.800><c> Wiki</c><03:30:05.160><c> house</c><03:30:05.399><c> so</c>

03:30:05.790 --> 03:30:05.800 align:start position:0%
of the kinds of domains in Wiki house so
 

03:30:05.800 --> 03:30:07.590 align:start position:0%
of the kinds of domains in Wiki house so
there's<03:30:05.960><c> a</c><03:30:06.120><c> lot</c><03:30:06.239><c> of</c><03:30:06.640><c> sentences</c><03:30:07.239><c> from</c>

03:30:07.590 --> 03:30:07.600 align:start position:0%
there's a lot of sentences from
 

03:30:07.600 --> 03:30:09.269 align:start position:0%
there's a lot of sentences from
computers<03:30:07.920><c> and</c><03:30:08.080><c> electronics</c><03:30:08.680><c> and</c><03:30:08.880><c> Homes</c><03:30:09.080><c> and</c>

03:30:09.269 --> 03:30:09.279 align:start position:0%
computers and electronics and Homes and
 

03:30:09.279 --> 03:30:11.070 align:start position:0%
computers and electronics and Homes and
Garden<03:30:10.000><c> and</c><03:30:10.080><c> it</c><03:30:10.199><c> has</c><03:30:10.399><c> kind</c><03:30:10.520><c> of</c><03:30:10.600><c> a</c><03:30:10.720><c> broad</c>

03:30:11.070 --> 03:30:11.080 align:start position:0%
Garden and it has kind of a broad
 

03:30:11.080 --> 03:30:13.349 align:start position:0%
Garden and it has kind of a broad
coverage<03:30:11.880><c> of</c><03:30:12.040><c> the</c><03:30:12.160><c> kinds</c><03:30:12.399><c> of</c><03:30:12.840><c> things</c><03:30:13.120><c> you</c><03:30:13.199><c> need</c>

03:30:13.349 --> 03:30:13.359 align:start position:0%
coverage of the kinds of things you need
 

03:30:13.359 --> 03:30:15.550 align:start position:0%
coverage of the kinds of things you need
to<03:30:13.479><c> know</c><03:30:13.640><c> about</c><03:30:13.840><c> the</c><03:30:13.920><c> world</c><03:30:14.160><c> in</c><03:30:14.239><c> order</c><03:30:14.479><c> to</c><03:30:15.000><c> find</c>

03:30:15.550 --> 03:30:15.560 align:start position:0%
to know about the world in order to find
 

03:30:15.560 --> 03:30:19.189 align:start position:0%
to know about the world in order to find
the<03:30:15.680><c> most</c><03:30:16.040><c> likely</c><03:30:16.359><c> completion</c><03:30:17.239><c> and</c><03:30:18.040><c> um</c><03:30:19.040><c> the</c>

03:30:19.189 --> 03:30:19.199 align:start position:0%
the most likely completion and um the
 

03:30:19.199 --> 03:30:22.229 align:start position:0%
the most likely completion and um the
identity<03:30:19.640><c> of</c><03:30:19.840><c> that</c><03:30:20.399><c> of</c><03:30:20.560><c> that</c><03:30:21.080><c> completion</c><03:30:22.080><c> one</c>

03:30:22.229 --> 03:30:22.239 align:start position:0%
identity of that of that completion one
 

03:30:22.239 --> 03:30:23.189 align:start position:0%
identity of that of that completion one
more<03:30:22.399><c> thing</c><03:30:22.560><c> that's</c><03:30:22.680><c> kind</c><03:30:22.800><c> of</c><03:30:22.880><c> interesting</c>

03:30:23.189 --> 03:30:23.199 align:start position:0%
more thing that's kind of interesting
 

03:30:23.199 --> 03:30:25.030 align:start position:0%
more thing that's kind of interesting
about<03:30:23.359><c> H</c><03:30:23.720><c> swag</c><03:30:24.040><c> is</c><03:30:24.479><c> the</c><03:30:24.600><c> way</c><03:30:24.720><c> it</c><03:30:24.800><c> was</c>

03:30:25.030 --> 03:30:25.040 align:start position:0%
about H swag is the way it was
 

03:30:25.040 --> 03:30:28.550 align:start position:0%
about H swag is the way it was
constructed<03:30:26.040><c> is</c><03:30:26.279><c> that</c><03:30:26.680><c> the</c><03:30:27.199><c> incorrect</c><03:30:28.199><c> um</c>

03:30:28.550 --> 03:30:28.560 align:start position:0%
constructed is that the incorrect um
 

03:30:28.560 --> 03:30:32.309 align:start position:0%
constructed is that the incorrect um
options<03:30:29.439><c> are</c><03:30:30.040><c> deliberately</c><03:30:31.199><c> um</c>

03:30:32.309 --> 03:30:32.319 align:start position:0%
options are deliberately um
 

03:30:32.319 --> 03:30:34.870 align:start position:0%
options are deliberately um
adversarially<03:30:33.319><c> sourced</c><03:30:34.319><c> so</c><03:30:34.479><c> they're</c><03:30:34.680><c> not</c>

03:30:34.870 --> 03:30:34.880 align:start position:0%
adversarially sourced so they're not
 

03:30:34.880 --> 03:30:36.990 align:start position:0%
adversarially sourced so they're not
just<03:30:35.279><c> random</c><03:30:35.680><c> sentences</c><03:30:36.520><c> they're</c><03:30:36.760><c> actually</c>

03:30:36.990 --> 03:30:37.000 align:start position:0%
just random sentences they're actually
 

03:30:37.000 --> 03:30:39.309 align:start position:0%
just random sentences they're actually
sentences<03:30:37.479><c> generated</c><03:30:37.920><c> by</c><03:30:38.080><c> language</c><03:30:38.399><c> models</c>

03:30:39.309 --> 03:30:39.319 align:start position:0%
sentences generated by language models
 

03:30:39.319 --> 03:30:41.110 align:start position:0%
sentences generated by language models
and<03:30:39.520><c> they're</c><03:30:39.680><c> generated</c><03:30:40.120><c> in</c><03:30:40.279><c> such</c><03:30:40.439><c> a</c><03:30:40.560><c> way</c><03:30:40.800><c> that</c>

03:30:41.110 --> 03:30:41.120 align:start position:0%
and they're generated in such a way that
 

03:30:41.120 --> 03:30:42.830 align:start position:0%
and they're generated in such a way that
language<03:30:41.439><c> models</c><03:30:41.760><c> basically</c><03:30:42.160><c> find</c><03:30:42.399><c> them</c>

03:30:42.830 --> 03:30:42.840 align:start position:0%
language models basically find them
 

03:30:42.840 --> 03:30:45.229 align:start position:0%
language models basically find them
difficult<03:30:43.239><c> but</c><03:30:43.439><c> humans</c><03:30:43.840><c> find</c><03:30:44.080><c> them</c><03:30:44.279><c> easy</c><03:30:45.160><c> and</c>

03:30:45.229 --> 03:30:45.239 align:start position:0%
difficult but humans find them easy and
 

03:30:45.239 --> 03:30:47.630 align:start position:0%
difficult but humans find them easy and
so<03:30:45.399><c> they</c><03:30:45.520><c> mentioned</c><03:30:45.800><c> that</c><03:30:46.040><c> humans</c><03:30:46.359><c> have</c><03:30:46.520><c> a</c><03:30:46.880><c> 95%</c>

03:30:47.630 --> 03:30:47.640 align:start position:0%
so they mentioned that humans have a 95%
 

03:30:47.640 --> 03:30:49.950 align:start position:0%
so they mentioned that humans have a 95%
accuracy<03:30:48.040><c> on</c><03:30:48.239><c> this</c><03:30:48.399><c> set</c><03:30:49.000><c> but</c><03:30:49.239><c> at</c><03:30:49.359><c> the</c><03:30:49.560><c> time</c><03:30:49.840><c> the</c>

03:30:49.950 --> 03:30:49.960 align:start position:0%
accuracy on this set but at the time the
 

03:30:49.960 --> 03:30:51.389 align:start position:0%
accuracy on this set but at the time the
state-of-the-art<03:30:50.479><c> language</c><03:30:50.760><c> models</c><03:30:51.080><c> had</c>

03:30:51.389 --> 03:30:51.399 align:start position:0%
state-of-the-art language models had
 

03:30:51.399 --> 03:30:54.110 align:start position:0%
state-of-the-art language models had
only<03:30:51.960><c> 48%</c><03:30:52.960><c> and</c><03:30:53.040><c> so</c><03:30:53.239><c> at</c><03:30:53.319><c> the</c><03:30:53.439><c> time</c><03:30:53.640><c> this</c><03:30:53.760><c> was</c><03:30:53.960><c> a</c>

03:30:54.110 --> 03:30:54.120 align:start position:0%
only 48% and so at the time this was a
 

03:30:54.120 --> 03:30:57.469 align:start position:0%
only 48% and so at the time this was a
good<03:30:54.840><c> Benchmark</c><03:30:55.840><c> now</c><03:30:56.680><c> you</c><03:30:56.800><c> can</c><03:30:57.000><c> read</c><03:30:57.359><c> the</c>

03:30:57.469 --> 03:30:57.479 align:start position:0%
good Benchmark now you can read the
 

03:30:57.479 --> 03:30:59.950 align:start position:0%
good Benchmark now you can read the
details<03:30:57.800><c> of</c><03:30:57.960><c> this</c><03:30:58.120><c> paper</c><03:30:58.439><c> to</c><03:30:58.640><c> to</c><03:30:58.800><c> learn</c><03:30:59.080><c> more</c>

03:30:59.950 --> 03:30:59.960 align:start position:0%
details of this paper to to learn more
 

03:30:59.960 --> 03:31:01.870 align:start position:0%
details of this paper to to learn more
um<03:31:00.600><c> the</c><03:31:00.720><c> thing</c><03:31:00.840><c> to</c><03:31:01.000><c> point</c><03:31:01.199><c> out</c><03:31:01.399><c> though</c><03:31:01.560><c> is</c><03:31:01.720><c> that</c>

03:31:01.870 --> 03:31:01.880 align:start position:0%
um the thing to point out though is that
 

03:31:01.880 --> 03:31:03.750 align:start position:0%
um the thing to point out though is that
this<03:31:02.000><c> is</c><03:31:02.160><c> 5</c><03:31:02.319><c> years</c><03:31:02.520><c> ago</c><03:31:03.080><c> and</c><03:31:03.239><c> since</c><03:31:03.479><c> then</c><03:31:03.640><c> what</c>

03:31:03.750 --> 03:31:03.760 align:start position:0%
this is 5 years ago and since then what
 

03:31:03.760 --> 03:31:05.349 align:start position:0%
this is 5 years ago and since then what
happened<03:31:04.040><c> to</c><03:31:04.160><c> H</c><03:31:04.439><c> swag</c><03:31:04.680><c> is</c><03:31:04.760><c> that</c><03:31:04.880><c> it's</c><03:31:05.040><c> been</c>

03:31:05.349 --> 03:31:05.359 align:start position:0%
happened to H swag is that it's been
 

03:31:05.359 --> 03:31:08.349 align:start position:0%
happened to H swag is that it's been
totally<03:31:06.120><c> just</c><03:31:06.720><c> uh</c>

03:31:08.349 --> 03:31:08.359 align:start position:0%
totally just uh
 

03:31:08.359 --> 03:31:11.710 align:start position:0%
totally just uh
um<03:31:09.359><c> solved</c><03:31:10.279><c> and</c><03:31:10.359><c> so</c><03:31:10.600><c> now</c><03:31:10.920><c> the</c><03:31:11.040><c> language</c><03:31:11.359><c> models</c>

03:31:11.710 --> 03:31:11.720 align:start position:0%
um solved and so now the language models
 

03:31:11.720 --> 03:31:14.950 align:start position:0%
um solved and so now the language models
here<03:31:11.840><c> are</c><03:31:12.239><c> 96%</c><03:31:13.239><c> so</c><03:31:13.439><c> basically</c><03:31:14.120><c> the</c><03:31:14.239><c> 4%</c><03:31:14.880><c> the</c>

03:31:14.950 --> 03:31:14.960 align:start position:0%
here are 96% so basically the 4% the
 

03:31:14.960 --> 03:31:16.750 align:start position:0%
here are 96% so basically the 4% the
last<03:31:15.160><c> 4%</c><03:31:15.520><c> is</c><03:31:15.640><c> probably</c><03:31:16.000><c> errors</c><03:31:16.279><c> in</c><03:31:16.399><c> the</c><03:31:16.520><c> data</c>

03:31:16.750 --> 03:31:16.760 align:start position:0%
last 4% is probably errors in the data
 

03:31:16.760 --> 03:31:18.790 align:start position:0%
last 4% is probably errors in the data
set<03:31:17.279><c> or</c><03:31:17.720><c> the</c><03:31:17.840><c> questions</c><03:31:18.120><c> are</c><03:31:18.319><c> really</c><03:31:18.600><c> really</c>

03:31:18.790 --> 03:31:18.800 align:start position:0%
set or the questions are really really
 

03:31:18.800 --> 03:31:20.830 align:start position:0%
set or the questions are really really
hard<03:31:19.560><c> and</c><03:31:19.640><c> so</c><03:31:19.800><c> basically</c><03:31:20.120><c> this</c><03:31:20.239><c> data</c><03:31:20.439><c> set</c><03:31:20.600><c> is</c>

03:31:20.830 --> 03:31:20.840 align:start position:0%
hard and so basically this data set is
 

03:31:20.840 --> 03:31:22.229 align:start position:0%
hard and so basically this data set is
kind<03:31:20.920><c> of</c><03:31:21.040><c> crushed</c><03:31:21.439><c> with</c><03:31:21.600><c> respect</c><03:31:21.840><c> to</c><03:31:21.960><c> language</c>

03:31:22.229 --> 03:31:22.239 align:start position:0%
kind of crushed with respect to language
 

03:31:22.239 --> 03:31:23.950 align:start position:0%
kind of crushed with respect to language
models<03:31:22.720><c> but</c><03:31:22.920><c> back</c><03:31:23.120><c> then</c><03:31:23.319><c> the</c><03:31:23.439><c> best</c><03:31:23.640><c> language</c>

03:31:23.950 --> 03:31:23.960 align:start position:0%
models but back then the best language
 

03:31:23.960 --> 03:31:27.870 align:start position:0%
models but back then the best language
model<03:31:24.199><c> was</c><03:31:24.319><c> only</c><03:31:24.479><c> at</c><03:31:24.640><c> about</c><03:31:25.120><c> 50%</c><03:31:26.120><c> uh</c><03:31:26.800><c> but</c><03:31:27.800><c> this</c>

03:31:27.870 --> 03:31:27.880 align:start position:0%
model was only at about 50% uh but this
 

03:31:27.880 --> 03:31:30.790 align:start position:0%
model was only at about 50% uh but this
is<03:31:28.040><c> how</c><03:31:28.199><c> far</c><03:31:28.439><c> things</c><03:31:28.680><c> got</c><03:31:29.680><c> but</c><03:31:29.840><c> still</c><03:31:30.479><c> the</c><03:31:30.720><c> the</c>

03:31:30.790 --> 03:31:30.800 align:start position:0%
is how far things got but still the the
 

03:31:30.800 --> 03:31:33.389 align:start position:0%
is how far things got but still the the
reason<03:31:31.080><c> people</c><03:31:31.279><c> like</c><03:31:31.479><c> H</c><03:31:31.800><c> swag</c><03:31:32.720><c> and</c><03:31:33.000><c> it's</c><03:31:33.160><c> not</c>

03:31:33.389 --> 03:31:33.399 align:start position:0%
reason people like H swag and it's not
 

03:31:33.399 --> 03:31:37.070 align:start position:0%
reason people like H swag and it's not
used<03:31:33.920><c> by</c><03:31:34.000><c> the</c><03:31:34.120><c> way</c><03:31:34.239><c> in</c><03:31:34.560><c> gpt2</c><03:31:35.560><c> but</c><03:31:35.680><c> in</c><03:31:36.080><c> gpt3</c>

03:31:37.070 --> 03:31:37.080 align:start position:0%
used by the way in gpt2 but in gpt3
 

03:31:37.080 --> 03:31:39.670 align:start position:0%
used by the way in gpt2 but in gpt3
there<03:31:37.239><c> is</c><03:31:37.479><c> H</c><03:31:37.800><c> swag</c><03:31:38.120><c> eval</c><03:31:39.000><c> and</c><03:31:39.199><c> lots</c><03:31:39.399><c> of</c><03:31:39.479><c> people</c>

03:31:39.670 --> 03:31:39.680 align:start position:0%
there is H swag eval and lots of people
 

03:31:39.680 --> 03:31:41.349 align:start position:0%
there is H swag eval and lots of people
use<03:31:40.000><c> H</c>

03:31:41.349 --> 03:31:41.359 align:start position:0%
use H
 

03:31:41.359 --> 03:31:45.389 align:start position:0%
use H
swag<03:31:42.359><c> and</c><03:31:42.479><c> so</c><03:31:42.640><c> for</c><03:31:43.000><c> gpt3</c><03:31:44.000><c> we</c><03:31:44.160><c> have</c><03:31:44.399><c> results</c>

03:31:45.389 --> 03:31:45.399 align:start position:0%
swag and so for gpt3 we have results
 

03:31:45.399 --> 03:31:46.349 align:start position:0%
swag and so for gpt3 we have results
here

03:31:46.349 --> 03:31:46.359 align:start position:0%
here
 

03:31:46.359 --> 03:31:48.630 align:start position:0%
here
that<03:31:46.520><c> are</c><03:31:46.760><c> cited</c><03:31:47.560><c> so</c><03:31:47.760><c> we</c><03:31:47.880><c> know</c><03:31:48.080><c> what</c><03:31:48.279><c> percent</c>

03:31:48.630 --> 03:31:48.640 align:start position:0%
that are cited so we know what percent
 

03:31:48.640 --> 03:31:51.910 align:start position:0%
that are cited so we know what percent
accuracies<03:31:49.279><c> gpt3</c><03:31:50.279><c> um</c><03:31:50.479><c> attains</c><03:31:51.399><c> at</c><03:31:51.560><c> all</c><03:31:51.720><c> these</c>

03:31:51.910 --> 03:31:51.920 align:start position:0%
accuracies gpt3 um attains at all these
 

03:31:51.920 --> 03:31:54.229 align:start position:0%
accuracies gpt3 um attains at all these
different<03:31:52.199><c> model</c><03:31:52.520><c> checkpoints</c><03:31:53.399><c> for</c><03:31:53.560><c> H</c><03:31:53.960><c> swag</c>

03:31:54.229 --> 03:31:54.239 align:start position:0%
different model checkpoints for H swag
 

03:31:54.239 --> 03:31:56.590 align:start position:0%
different model checkpoints for H swag
eval<03:31:55.239><c> and</c><03:31:55.359><c> the</c><03:31:55.479><c> reason</c><03:31:55.720><c> people</c><03:31:56.000><c> like</c><03:31:56.160><c> it</c><03:31:56.399><c> is</c>

03:31:56.590 --> 03:31:56.600 align:start position:0%
eval and the reason people like it is
 

03:31:56.600 --> 03:31:59.710 align:start position:0%
eval and the reason people like it is
because<03:31:56.920><c> H</c><03:31:57.319><c> swag</c><03:31:57.600><c> is</c><03:31:57.720><c> a</c><03:31:57.960><c> smooth</c><03:31:58.520><c> eval</c><03:31:59.520><c> and</c><03:31:59.600><c> it</c>

03:31:59.710 --> 03:31:59.720 align:start position:0%
because H swag is a smooth eval and it
 

03:31:59.720 --> 03:32:01.950 align:start position:0%
because H swag is a smooth eval and it
is<03:31:59.840><c> an</c><03:32:00.040><c> eval</c><03:32:00.479><c> that</c><03:32:00.640><c> offers</c><03:32:01.040><c> quote</c><03:32:01.319><c> unquote</c>

03:32:01.950 --> 03:32:01.960 align:start position:0%
is an eval that offers quote unquote
 

03:32:01.960 --> 03:32:04.630 align:start position:0%
is an eval that offers quote unquote
early<03:32:02.359><c> signal</c><03:32:03.359><c> uh</c><03:32:03.479><c> so</c><03:32:03.680><c> early</c><03:32:03.960><c> signal</c><03:32:04.319><c> means</c>

03:32:04.630 --> 03:32:04.640 align:start position:0%
early signal uh so early signal means
 

03:32:04.640 --> 03:32:06.590 align:start position:0%
early signal uh so early signal means
that<03:32:04.800><c> even</c><03:32:05.040><c> small</c><03:32:05.399><c> language</c><03:32:05.720><c> models</c><03:32:06.399><c> are</c>

03:32:06.590 --> 03:32:06.600 align:start position:0%
that even small language models are
 

03:32:06.600 --> 03:32:08.950 align:start position:0%
that even small language models are
going<03:32:06.760><c> to</c><03:32:07.359><c> start</c><03:32:07.720><c> at</c><03:32:07.880><c> the</c><03:32:08.040><c> random</c><03:32:08.359><c> chance</c><03:32:08.680><c> of</c>

03:32:08.950 --> 03:32:08.960 align:start position:0%
going to start at the random chance of
 

03:32:08.960 --> 03:32:11.189 align:start position:0%
going to start at the random chance of
25%<03:32:09.960><c> but</c><03:32:10.040><c> they're</c><03:32:10.199><c> going</c><03:32:10.359><c> to</c><03:32:10.479><c> slowly</c><03:32:10.880><c> improve</c>

03:32:11.189 --> 03:32:11.199 align:start position:0%
25% but they're going to slowly improve
 

03:32:11.199 --> 03:32:15.150 align:start position:0%
25% but they're going to slowly improve
and<03:32:11.279><c> you're</c><03:32:11.399><c> going</c><03:32:11.479><c> to</c><03:32:11.600><c> see</c><03:32:11.760><c> 25</c><03:32:12.279><c> 26</c><03:32:12.840><c> 27</c><03:32:13.800><c> Etc</c><03:32:14.800><c> and</c>

03:32:15.150 --> 03:32:15.160 align:start position:0%
and you're going to see 25 26 27 Etc and
 

03:32:15.160 --> 03:32:17.550 align:start position:0%
and you're going to see 25 26 27 Etc and
uh<03:32:15.319><c> you</c><03:32:15.439><c> can</c><03:32:15.560><c> see</c><03:32:15.960><c> slow</c><03:32:16.279><c> Improvement</c><03:32:17.239><c> even</c>

03:32:17.550 --> 03:32:17.560 align:start position:0%
uh you can see slow Improvement even
 

03:32:17.560 --> 03:32:19.189 align:start position:0%
uh you can see slow Improvement even
when<03:32:17.720><c> the</c><03:32:17.800><c> models</c><03:32:18.120><c> are</c><03:32:18.359><c> very</c><03:32:18.560><c> small</c><03:32:18.880><c> and</c><03:32:19.000><c> it's</c>

03:32:19.189 --> 03:32:19.199 align:start position:0%
when the models are very small and it's
 

03:32:19.199 --> 03:32:23.349 align:start position:0%
when the models are very small and it's
very<03:32:19.399><c> early</c><03:32:20.319><c> so</c><03:32:20.760><c> it's</c><03:32:20.960><c> smooth</c><03:32:21.920><c> it</c><03:32:22.160><c> has</c><03:32:22.960><c> early</c>

03:32:23.349 --> 03:32:23.359 align:start position:0%
very early so it's smooth it has early
 

03:32:23.359 --> 03:32:26.550 align:start position:0%
very early so it's smooth it has early
signal<03:32:24.359><c> and</c><03:32:25.120><c> um</c><03:32:25.720><c> it's</c><03:32:25.880><c> been</c><03:32:26.080><c> around</c><03:32:26.279><c> for</c><03:32:26.439><c> a</c>

03:32:26.550 --> 03:32:26.560 align:start position:0%
signal and um it's been around for a
 

03:32:26.560 --> 03:32:28.550 align:start position:0%
signal and um it's been around for a
long<03:32:26.760><c> time</c><03:32:26.960><c> so</c><03:32:27.120><c> that's</c><03:32:27.319><c> why</c><03:32:27.680><c> people</c><03:32:28.279><c> kind</c><03:32:28.359><c> of</c>

03:32:28.550 --> 03:32:28.560 align:start position:0%
long time so that's why people kind of
 

03:32:28.560 --> 03:32:29.710 align:start position:0%
long time so that's why people kind of
like<03:32:28.920><c> this</c>

03:32:29.710 --> 03:32:29.720 align:start position:0%
like this
 

03:32:29.720 --> 03:32:32.030 align:start position:0%
like this
eval<03:32:30.720><c> uh</c><03:32:30.880><c> now</c><03:32:31.080><c> the</c><03:32:31.199><c> way</c><03:32:31.359><c> that</c><03:32:31.479><c> we're</c><03:32:31.640><c> going</c><03:32:31.800><c> to</c>

03:32:32.030 --> 03:32:32.040 align:start position:0%
eval uh now the way that we're going to
 

03:32:32.040 --> 03:32:34.710 align:start position:0%
eval uh now the way that we're going to
evaluate<03:32:32.720><c> this</c><03:32:33.600><c> is</c><03:32:33.840><c> as</c>

03:32:34.710 --> 03:32:34.720 align:start position:0%
evaluate this is as
 

03:32:34.720 --> 03:32:37.469 align:start position:0%
evaluate this is as
follows<03:32:35.720><c> as</c><03:32:35.800><c> I</c><03:32:35.920><c> mentioned</c><03:32:36.239><c> we</c><03:32:36.359><c> have</c><03:32:36.479><c> a</c><03:32:36.920><c> shared</c>

03:32:37.469 --> 03:32:37.479 align:start position:0%
follows as I mentioned we have a shared
 

03:32:37.479 --> 03:32:39.150 align:start position:0%
follows as I mentioned we have a shared
context<03:32:38.399><c> and</c><03:32:38.520><c> this</c><03:32:38.640><c> is</c><03:32:38.760><c> kind</c><03:32:38.880><c> of</c><03:32:38.960><c> like</c><03:32:39.040><c> a</c>

03:32:39.150 --> 03:32:39.160 align:start position:0%
context and this is kind of like a
 

03:32:39.160 --> 03:32:41.269 align:start position:0%
context and this is kind of like a
multiple<03:32:39.560><c> choice</c><03:32:40.040><c> task</c><03:32:40.760><c> but</c><03:32:40.880><c> instead</c><03:32:41.120><c> of</c>

03:32:41.269 --> 03:32:41.279 align:start position:0%
multiple choice task but instead of
 

03:32:41.279 --> 03:32:42.950 align:start position:0%
multiple choice task but instead of
giving<03:32:41.479><c> the</c><03:32:41.600><c> model</c><03:32:41.840><c> a</c><03:32:41.960><c> multiple</c><03:32:42.399><c> choice</c>

03:32:42.950 --> 03:32:42.960 align:start position:0%
giving the model a multiple choice
 

03:32:42.960 --> 03:32:46.269 align:start position:0%
giving the model a multiple choice
question<03:32:43.359><c> and</c><03:32:43.600><c> asking</c><03:32:43.880><c> it</c><03:32:44.040><c> for</c><03:32:44.239><c> A</c><03:32:44.439><c> B</c><03:32:44.640><c> C</c><03:32:44.880><c> or</c><03:32:45.040><c> D</c><03:32:46.080><c> uh</c>

03:32:46.269 --> 03:32:46.279 align:start position:0%
question and asking it for A B C or D uh
 

03:32:46.279 --> 03:32:47.910 align:start position:0%
question and asking it for A B C or D uh
we<03:32:46.439><c> can't</c><03:32:46.680><c> do</c><03:32:46.880><c> that</c><03:32:47.080><c> because</c><03:32:47.319><c> these</c><03:32:47.520><c> models</c>

03:32:47.910 --> 03:32:47.920 align:start position:0%
we can't do that because these models
 

03:32:47.920 --> 03:32:49.910 align:start position:0%
we can't do that because these models
when<03:32:48.040><c> they</c><03:32:48.160><c> are</c><03:32:48.399><c> so</c><03:32:48.720><c> small</c><03:32:49.199><c> as</c><03:32:49.319><c> we</c><03:32:49.439><c> are</c><03:32:49.560><c> seeing</c>

03:32:49.910 --> 03:32:49.920 align:start position:0%
when they are so small as we are seeing
 

03:32:49.920 --> 03:32:51.469 align:start position:0%
when they are so small as we are seeing
here<03:32:50.479><c> the</c><03:32:50.600><c> models</c><03:32:50.920><c> can't</c><03:32:51.120><c> actually</c><03:32:51.319><c> do</c>

03:32:51.469 --> 03:32:51.479 align:start position:0%
here the models can't actually do
 

03:32:51.479 --> 03:32:53.469 align:start position:0%
here the models can't actually do
multiple<03:32:51.840><c> choice</c><03:32:52.520><c> they</c><03:32:52.760><c> don't</c><03:32:53.319><c> understand</c>

03:32:53.469 --> 03:32:53.479 align:start position:0%
multiple choice they don't understand
 

03:32:53.479 --> 03:32:55.790 align:start position:0%
multiple choice they don't understand
the<03:32:53.640><c> concept</c><03:32:54.000><c> of</c><03:32:54.199><c> associating</c><03:32:54.760><c> a</c><03:32:54.960><c> label</c><03:32:55.560><c> to</c>

03:32:55.790 --> 03:32:55.800 align:start position:0%
the concept of associating a label to
 

03:32:55.800 --> 03:32:58.070 align:start position:0%
the concept of associating a label to
one<03:32:55.960><c> of</c><03:32:56.080><c> the</c><03:32:56.239><c> options</c><03:32:56.560><c> of</c><03:32:56.720><c> multiple</c><03:32:57.120><c> choice</c><03:32:58.000><c> uh</c>

03:32:58.070 --> 03:32:58.080 align:start position:0%
one of the options of multiple choice uh
 

03:32:58.080 --> 03:32:59.710 align:start position:0%
one of the options of multiple choice uh
they<03:32:58.199><c> don't</c><03:32:58.640><c> understand</c><03:32:58.840><c> that</c><03:32:59.199><c> so</c><03:32:59.359><c> we</c><03:32:59.479><c> have</c><03:32:59.600><c> to</c>

03:32:59.710 --> 03:32:59.720 align:start position:0%
they don't understand that so we have to
 

03:32:59.720 --> 03:33:01.670 align:start position:0%
they don't understand that so we have to
give<03:32:59.840><c> it</c><03:33:00.000><c> to</c><03:33:00.120><c> them</c><03:33:00.319><c> in</c><03:33:00.399><c> a</c><03:33:00.560><c> native</c><03:33:00.960><c> form</c><03:33:01.439><c> and</c><03:33:01.560><c> the</c>

03:33:01.670 --> 03:33:01.680 align:start position:0%
give it to them in a native form and the
 

03:33:01.680 --> 03:33:05.030 align:start position:0%
give it to them in a native form and the
native<03:33:02.080><c> form</c><03:33:02.600><c> is</c><03:33:02.960><c> a</c><03:33:03.160><c> token</c><03:33:03.840><c> completion</c><03:33:04.840><c> so</c>

03:33:05.030 --> 03:33:05.040 align:start position:0%
native form is a token completion so
 

03:33:05.040 --> 03:33:06.910 align:start position:0%
native form is a token completion so
here's<03:33:05.239><c> what</c><03:33:05.319><c> we</c><03:33:05.439><c> do</c><03:33:05.680><c> we</c><03:33:05.800><c> construct</c><03:33:06.199><c> a</c><03:33:06.359><c> batch</c>

03:33:06.910 --> 03:33:06.920 align:start position:0%
here's what we do we construct a batch
 

03:33:06.920 --> 03:33:10.630 align:start position:0%
here's what we do we construct a batch
of<03:33:07.279><c> four</c><03:33:07.920><c> rows</c><03:33:08.920><c> and</c><03:33:09.399><c> uh</c><03:33:09.520><c> T</c><03:33:09.880><c> tokens</c><03:33:10.359><c> whatever</c>

03:33:10.630 --> 03:33:10.640 align:start position:0%
of four rows and uh T tokens whatever
 

03:33:10.640 --> 03:33:13.269 align:start position:0%
of four rows and uh T tokens whatever
that<03:33:10.760><c> t</c><03:33:11.000><c> happens</c><03:33:11.279><c> to</c><03:33:11.439><c> be</c><03:33:12.439><c> then</c><03:33:12.720><c> the</c><03:33:12.840><c> shared</c>

03:33:13.269 --> 03:33:13.279 align:start position:0%
that t happens to be then the shared
 

03:33:13.279 --> 03:33:15.189 align:start position:0%
that t happens to be then the shared
context<03:33:14.080><c> that</c><03:33:14.199><c> is</c><03:33:14.359><c> basically</c><03:33:14.720><c> the</c><03:33:14.840><c> context</c>

03:33:15.189 --> 03:33:15.199 align:start position:0%
context that is basically the context
 

03:33:15.199 --> 03:33:17.870 align:start position:0%
context that is basically the context
for<03:33:15.319><c> the</c><03:33:15.399><c> for</c><03:33:15.800><c> choices</c><03:33:16.520><c> the</c><03:33:16.720><c> tokens</c><03:33:17.160><c> of</c><03:33:17.439><c> that</c>

03:33:17.870 --> 03:33:17.880 align:start position:0%
for the for choices the tokens of that
 

03:33:17.880 --> 03:33:20.830 align:start position:0%
for the for choices the tokens of that
are<03:33:18.520><c> shared</c><03:33:19.040><c> across</c><03:33:19.399><c> all</c><03:33:19.560><c> of</c><03:33:19.680><c> the</c><03:33:19.800><c> rows</c><03:33:20.720><c> and</c>

03:33:20.830 --> 03:33:20.840 align:start position:0%
are shared across all of the rows and
 

03:33:20.840 --> 03:33:22.830 align:start position:0%
are shared across all of the rows and
then<03:33:20.960><c> we</c><03:33:21.040><c> have</c><03:33:21.160><c> the</c><03:33:21.279><c> four</c><03:33:21.600><c> options</c><03:33:22.359><c> so</c><03:33:22.560><c> we</c><03:33:22.720><c> kind</c>

03:33:22.830 --> 03:33:22.840 align:start position:0%
then we have the four options so we kind
 

03:33:22.840 --> 03:33:25.070 align:start position:0%
then we have the four options so we kind
of<03:33:22.960><c> like</c><03:33:23.120><c> lay</c><03:33:23.359><c> them</c><03:33:23.479><c> out</c><03:33:24.479><c> and</c><03:33:24.600><c> then</c><03:33:24.760><c> only</c><03:33:24.960><c> one</c>

03:33:25.070 --> 03:33:25.080 align:start position:0%
of like lay them out and then only one
 

03:33:25.080 --> 03:33:26.670 align:start position:0%
of like lay them out and then only one
of<03:33:25.199><c> the</c><03:33:25.319><c> options</c><03:33:25.600><c> is</c><03:33:25.760><c> correct</c><03:33:26.120><c> in</c><03:33:26.239><c> this</c><03:33:26.399><c> case</c>

03:33:26.670 --> 03:33:26.680 align:start position:0%
of the options is correct in this case
 

03:33:26.680 --> 03:33:30.349 align:start position:0%
of the options is correct in this case
label<03:33:27.080><c> three</c><03:33:27.520><c> option</c><03:33:27.840><c> three</c><03:33:28.800><c> and</c><03:33:28.920><c> so</c><03:33:29.600><c> um</c><03:33:30.279><c> this</c>

03:33:30.349 --> 03:33:30.359 align:start position:0%
label three option three and so um this
 

03:33:30.359 --> 03:33:32.189 align:start position:0%
label three option three and so um this
is<03:33:30.520><c> the</c><03:33:30.680><c> correct</c><03:33:31.040><c> option</c><03:33:31.399><c> and</c><03:33:31.560><c> option</c><03:33:31.840><c> one</c><03:33:32.000><c> two</c>

03:33:32.189 --> 03:33:32.199 align:start position:0%
is the correct option and option one two
 

03:33:32.199 --> 03:33:33.189 align:start position:0%
is the correct option and option one two
and<03:33:32.319><c> for</c><03:33:32.479><c> are</c>

03:33:33.189 --> 03:33:33.199 align:start position:0%
and for are
 

03:33:33.199 --> 03:33:36.030 align:start position:0%
and for are
incorrect<03:33:34.199><c> now</c><03:33:34.880><c> these</c><03:33:35.160><c> options</c><03:33:35.560><c> might</c><03:33:35.720><c> be</c><03:33:35.840><c> of</c>

03:33:36.030 --> 03:33:36.040 align:start position:0%
incorrect now these options might be of
 

03:33:36.040 --> 03:33:38.070 align:start position:0%
incorrect now these options might be of
different<03:33:36.439><c> lengths</c><03:33:37.279><c> so</c><03:33:37.439><c> what</c><03:33:37.560><c> we</c><03:33:37.680><c> do</c><03:33:37.880><c> is</c><03:33:37.960><c> we</c>

03:33:38.070 --> 03:33:38.080 align:start position:0%
different lengths so what we do is we
 

03:33:38.080 --> 03:33:40.030 align:start position:0%
different lengths so what we do is we
sort<03:33:38.239><c> of</c><03:33:38.399><c> like</c><03:33:38.600><c> take</c><03:33:38.800><c> the</c><03:33:39.000><c> longest</c><03:33:39.399><c> length</c><03:33:39.840><c> and</c>

03:33:40.030 --> 03:33:40.040 align:start position:0%
sort of like take the longest length and
 

03:33:40.040 --> 03:33:42.750 align:start position:0%
sort of like take the longest length and
that's<03:33:40.560><c> the</c><03:33:40.720><c> size</c><03:33:40.880><c> of</c><03:33:41.000><c> the</c><03:33:41.160><c> batch</c><03:33:41.479><c> B</c><03:33:41.680><c> BYT</c><03:33:42.600><c> and</c>

03:33:42.750 --> 03:33:42.760 align:start position:0%
that's the size of the batch B BYT and
 

03:33:42.760 --> 03:33:45.389 align:start position:0%
that's the size of the batch B BYT and
then<03:33:43.239><c> some</c><03:33:43.399><c> of</c><03:33:43.560><c> these</c><03:33:44.319><c> uh</c><03:33:44.479><c> here</c><03:33:45.000><c> are</c><03:33:45.160><c> going</c><03:33:45.279><c> to</c>

03:33:45.389 --> 03:33:45.399 align:start position:0%
then some of these uh here are going to
 

03:33:45.399 --> 03:33:47.429 align:start position:0%
then some of these uh here are going to
be<03:33:45.800><c> pded</c><03:33:46.120><c> Dimensions</c><03:33:46.880><c> so</c><03:33:47.080><c> they're</c><03:33:47.199><c> going</c><03:33:47.319><c> to</c>

03:33:47.429 --> 03:33:47.439 align:start position:0%
be pded Dimensions so they're going to
 

03:33:47.439 --> 03:33:51.469 align:start position:0%
be pded Dimensions so they're going to
be<03:33:48.160><c> unused</c><03:33:49.160><c> and</c><03:33:49.319><c> so</c><03:33:49.760><c> we</c><03:33:49.920><c> need</c><03:33:50.239><c> the</c><03:33:50.479><c> tokens</c><03:33:51.359><c> we</c>

03:33:51.469 --> 03:33:51.479 align:start position:0%
be unused and so we need the tokens we
 

03:33:51.479 --> 03:33:53.349 align:start position:0%
be unused and so we need the tokens we
need<03:33:51.640><c> the</c><03:33:51.760><c> correct</c><03:33:52.040><c> label</c><03:33:52.720><c> and</c><03:33:52.840><c> we</c><03:33:52.960><c> need</c><03:33:53.120><c> a</c>

03:33:53.349 --> 03:33:53.359 align:start position:0%
need the correct label and we need a
 

03:33:53.359 --> 03:33:55.790 align:start position:0%
need the correct label and we need a
mask<03:33:54.160><c> that</c><03:33:54.319><c> tells</c><03:33:54.560><c> us</c><03:33:54.840><c> which</c><03:33:55.040><c> tokens</c><03:33:55.439><c> are</c>

03:33:55.790 --> 03:33:55.800 align:start position:0%
mask that tells us which tokens are
 

03:33:55.800 --> 03:33:58.510 align:start position:0%
mask that tells us which tokens are
active<03:33:56.640><c> and</c><03:33:56.760><c> the</c><03:33:56.880><c> mask</c><03:33:57.199><c> is</c><03:33:57.359><c> then</c><03:33:57.600><c> zero</c><03:33:58.160><c> for</c>

03:33:58.510 --> 03:33:58.520 align:start position:0%
active and the mask is then zero for
 

03:33:58.520 --> 03:34:01.830 align:start position:0%
active and the mask is then zero for
these<03:33:58.880><c> uh</c><03:33:59.080><c> padded</c><03:33:59.920><c> areas</c><03:34:00.920><c> so</c><03:34:01.359><c> that's</c><03:34:01.520><c> how</c><03:34:01.640><c> we</c>

03:34:01.830 --> 03:34:01.840 align:start position:0%
these uh padded areas so that's how we
 

03:34:01.840 --> 03:34:04.229 align:start position:0%
these uh padded areas so that's how we
construct<03:34:02.359><c> these</c><03:34:02.680><c> batches</c><03:34:03.680><c> and</c><03:34:03.840><c> then</c><03:34:04.120><c> in</c>

03:34:04.229 --> 03:34:04.239 align:start position:0%
construct these batches and then in
 

03:34:04.239 --> 03:34:05.510 align:start position:0%
construct these batches and then in
order<03:34:04.479><c> to</c><03:34:04.600><c> get</c><03:34:04.720><c> the</c><03:34:04.800><c> language</c><03:34:05.120><c> model</c><03:34:05.359><c> to</c>

03:34:05.510 --> 03:34:05.520 align:start position:0%
order to get the language model to
 

03:34:05.520 --> 03:34:08.910 align:start position:0%
order to get the language model to
predict<03:34:06.279><c> A</c><03:34:06.520><c> B</c><03:34:06.760><c> C</c><03:34:07.040><c> or</c><03:34:07.239><c> D</c><03:34:08.080><c> the</c><03:34:08.199><c> way</c><03:34:08.399><c> this</c><03:34:08.520><c> works</c><03:34:08.760><c> is</c>

03:34:08.910 --> 03:34:08.920 align:start position:0%
predict A B C or D the way this works is
 

03:34:08.920 --> 03:34:10.150 align:start position:0%
predict A B C or D the way this works is
basically<03:34:09.319><c> we're</c><03:34:09.520><c> just</c><03:34:09.640><c> going</c><03:34:09.800><c> to</c><03:34:09.920><c> look</c><03:34:10.040><c> at</c>

03:34:10.150 --> 03:34:10.160 align:start position:0%
basically we're just going to look at
 

03:34:10.160 --> 03:34:12.710 align:start position:0%
basically we're just going to look at
the<03:34:10.319><c> tokens</c><03:34:11.040><c> their</c><03:34:11.479><c> probabilities</c><03:34:12.479><c> and</c><03:34:12.560><c> we're</c>

03:34:12.710 --> 03:34:12.720 align:start position:0%
the tokens their probabilities and we're
 

03:34:12.720 --> 03:34:15.870 align:start position:0%
the tokens their probabilities and we're
going<03:34:12.840><c> to</c><03:34:13.479><c> pick</c><03:34:13.720><c> the</c><03:34:14.000><c> option</c><03:34:15.000><c> that</c><03:34:15.160><c> gets</c><03:34:15.399><c> the</c>

03:34:15.870 --> 03:34:15.880 align:start position:0%
going to pick the option that gets the
 

03:34:15.880 --> 03:34:18.630 align:start position:0%
going to pick the option that gets the
lowest<03:34:16.880><c> or</c><03:34:17.080><c> the</c><03:34:17.279><c> highest</c><03:34:18.120><c> average</c>

03:34:18.630 --> 03:34:18.640 align:start position:0%
lowest or the highest average
 

03:34:18.640 --> 03:34:22.030 align:start position:0%
lowest or the highest average
probability<03:34:19.560><c> for</c><03:34:19.800><c> the</c><03:34:20.279><c> token</c><03:34:21.279><c> so</c><03:34:21.520><c> for</c><03:34:21.680><c> the</c>

03:34:22.030 --> 03:34:22.040 align:start position:0%
probability for the token so for the
 

03:34:22.040 --> 03:34:25.269 align:start position:0%
probability for the token so for the
tokens<03:34:23.040><c> because</c><03:34:23.359><c> that</c><03:34:23.560><c> is</c><03:34:23.760><c> the</c><03:34:23.920><c> most</c><03:34:24.279><c> likely</c>

03:34:25.269 --> 03:34:25.279 align:start position:0%
tokens because that is the most likely
 

03:34:25.279 --> 03:34:26.990 align:start position:0%
tokens because that is the most likely
completion<03:34:26.040><c> according</c><03:34:26.359><c> to</c><03:34:26.520><c> the</c><03:34:26.640><c> language</c>

03:34:26.990 --> 03:34:27.000 align:start position:0%
completion according to the language
 

03:34:27.000 --> 03:34:29.830 align:start position:0%
completion according to the language
model<03:34:28.000><c> so</c><03:34:28.160><c> we're</c><03:34:28.279><c> just</c><03:34:28.399><c> going</c><03:34:28.520><c> to</c><03:34:28.640><c> look</c><03:34:28.800><c> at</c><03:34:29.120><c> the</c>

03:34:29.830 --> 03:34:29.840 align:start position:0%
model so we're just going to look at the
 

03:34:29.840 --> 03:34:33.110 align:start position:0%
model so we're just going to look at the
um<03:34:30.640><c> probabilities</c><03:34:31.359><c> here</c><03:34:32.279><c> and</c><03:34:32.560><c> average</c><03:34:32.920><c> them</c>

03:34:33.110 --> 03:34:33.120 align:start position:0%
um probabilities here and average them
 

03:34:33.120 --> 03:34:35.790 align:start position:0%
um probabilities here and average them
up<03:34:33.880><c> across</c><03:34:34.199><c> the</c><03:34:34.359><c> options</c><03:34:35.160><c> and</c><03:34:35.319><c> pick</c><03:34:35.479><c> the</c><03:34:35.600><c> one</c>

03:34:35.790 --> 03:34:35.800 align:start position:0%
up across the options and pick the one
 

03:34:35.800 --> 03:34:38.030 align:start position:0%
up across the options and pick the one
with<03:34:35.920><c> the</c><03:34:36.040><c> highest</c><03:34:36.399><c> probability</c><03:34:37.359><c> roughly</c>

03:34:38.030 --> 03:34:38.040 align:start position:0%
with the highest probability roughly
 

03:34:38.040 --> 03:34:40.269 align:start position:0%
with the highest probability roughly
speaking<03:34:39.040><c> so</c><03:34:39.600><c> this</c><03:34:39.760><c> is</c><03:34:39.840><c> how</c><03:34:39.960><c> we're</c><03:34:40.080><c> going</c><03:34:40.160><c> to</c>

03:34:40.269 --> 03:34:40.279 align:start position:0%
speaking so this is how we're going to
 

03:34:40.279 --> 03:34:42.150 align:start position:0%
speaking so this is how we're going to
do<03:34:40.439><c> H</c><03:34:40.800><c> swag</c>

03:34:42.150 --> 03:34:42.160 align:start position:0%
do H swag
 

03:34:42.160 --> 03:34:45.990 align:start position:0%
do H swag
um<03:34:43.160><c> and</c><03:34:44.080><c> this</c><03:34:44.199><c> is</c><03:34:44.399><c> I</c><03:34:44.479><c> believe</c><03:34:44.800><c> also</c><03:34:45.120><c> how</c><03:34:45.880><c> uh</c>

03:34:45.990 --> 03:34:46.000 align:start position:0%
um and this is I believe also how uh
 

03:34:46.000 --> 03:34:50.670 align:start position:0%
um and this is I believe also how uh
gpt3<03:34:46.840><c> did</c><03:34:47.160><c> it</c><03:34:48.359><c> um</c><03:34:49.359><c> this</c><03:34:49.479><c> is</c><03:34:49.600><c> how</c><03:34:49.760><c> gpt3</c><03:34:50.359><c> did</c><03:34:50.520><c> it</c>

03:34:50.670 --> 03:34:50.680 align:start position:0%
gpt3 did it um this is how gpt3 did it
 

03:34:50.680 --> 03:34:52.670 align:start position:0%
gpt3 did it um this is how gpt3 did it
as<03:34:50.800><c> far</c><03:34:50.960><c> as</c><03:34:51.040><c> I</c><03:34:51.199><c> know</c><03:34:51.920><c> but</c><03:34:52.040><c> you</c><03:34:52.160><c> should</c><03:34:52.359><c> note</c>

03:34:52.670 --> 03:34:52.680 align:start position:0%
as far as I know but you should note
 

03:34:52.680 --> 03:34:54.349 align:start position:0%
as far as I know but you should note
that<03:34:52.880><c> some</c><03:34:53.040><c> of</c><03:34:53.160><c> the</c><03:34:53.239><c> other</c><03:34:53.399><c> evals</c><03:34:54.120><c> where</c><03:34:54.239><c> you</c>

03:34:54.349 --> 03:34:54.359 align:start position:0%
that some of the other evals where you
 

03:34:54.359 --> 03:34:57.030 align:start position:0%
that some of the other evals where you
might<03:34:54.479><c> see</c><03:34:54.680><c> H</c><03:34:55.000><c> swag</c><03:34:55.520><c> may</c><03:34:55.720><c> not</c><03:34:55.920><c> do</c><03:34:56.080><c> it</c><03:34:56.279><c> this</c><03:34:56.439><c> way</c>

03:34:57.030 --> 03:34:57.040 align:start position:0%
might see H swag may not do it this way
 

03:34:57.040 --> 03:34:58.349 align:start position:0%
might see H swag may not do it this way
they<03:34:57.160><c> may</c><03:34:57.359><c> do</c><03:34:57.479><c> it</c><03:34:57.560><c> in</c><03:34:57.680><c> a</c><03:34:57.760><c> multiple</c><03:34:58.120><c> choice</c>

03:34:58.349 --> 03:34:58.359 align:start position:0%
they may do it in a multiple choice
 

03:34:58.359 --> 03:35:00.870 align:start position:0%
they may do it in a multiple choice
format<03:34:58.720><c> where</c><03:34:58.840><c> you</c><03:34:58.960><c> sort</c><03:34:59.160><c> of</c><03:34:59.720><c> uh</c><03:34:59.840><c> give</c><03:35:00.120><c> the</c><03:35:00.760><c> the</c>

03:35:00.870 --> 03:35:00.880 align:start position:0%
format where you sort of uh give the the
 

03:35:00.880 --> 03:35:02.910 align:start position:0%
format where you sort of uh give the the
context<03:35:01.319><c> a</c><03:35:01.439><c> single</c><03:35:01.840><c> time</c><03:35:02.239><c> and</c><03:35:02.359><c> then</c><03:35:02.479><c> the</c><03:35:02.600><c> four</c>

03:35:02.910 --> 03:35:02.920 align:start position:0%
context a single time and then the four
 

03:35:02.920 --> 03:35:04.990 align:start position:0%
context a single time and then the four
completions<03:35:03.880><c> and</c><03:35:03.960><c> so</c><03:35:04.160><c> the</c><03:35:04.239><c> model</c><03:35:04.560><c> is</c><03:35:04.680><c> able</c><03:35:04.880><c> to</c>

03:35:04.990 --> 03:35:05.000 align:start position:0%
completions and so the model is able to
 

03:35:05.000 --> 03:35:06.990 align:start position:0%
completions and so the model is able to
see<03:35:05.239><c> all</c><03:35:05.439><c> the</c><03:35:05.520><c> four</c><03:35:05.840><c> options</c><03:35:06.319><c> before</c><03:35:06.560><c> it</c><03:35:06.720><c> picks</c>

03:35:06.990 --> 03:35:07.000 align:start position:0%
see all the four options before it picks
 

03:35:07.000 --> 03:35:08.950 align:start position:0%
see all the four options before it picks
the<03:35:07.199><c> best</c><03:35:07.520><c> possible</c><03:35:07.920><c> option</c><03:35:08.680><c> and</c><03:35:08.800><c> that's</c>

03:35:08.950 --> 03:35:08.960 align:start position:0%
the best possible option and that's
 

03:35:08.960 --> 03:35:11.070 align:start position:0%
the best possible option and that's
actually<03:35:09.199><c> an</c><03:35:09.319><c> easier</c><03:35:09.760><c> task</c><03:35:10.040><c> for</c><03:35:10.199><c> a</c><03:35:10.359><c> model</c>

03:35:11.070 --> 03:35:11.080 align:start position:0%
actually an easier task for a model
 

03:35:11.080 --> 03:35:12.870 align:start position:0%
actually an easier task for a model
because<03:35:11.319><c> you</c><03:35:11.560><c> get</c><03:35:11.680><c> to</c><03:35:11.840><c> see</c><03:35:12.120><c> the</c><03:35:12.279><c> other</c><03:35:12.520><c> options</c>

03:35:12.870 --> 03:35:12.880 align:start position:0%
because you get to see the other options
 

03:35:12.880 --> 03:35:15.790 align:start position:0%
because you get to see the other options
when<03:35:13.000><c> you're</c><03:35:13.199><c> picking</c><03:35:13.720><c> your</c><03:35:14.199><c> choice</c><03:35:15.199><c> um</c><03:35:15.680><c> but</c>

03:35:15.790 --> 03:35:15.800 align:start position:0%
when you're picking your choice um but
 

03:35:15.800 --> 03:35:17.510 align:start position:0%
when you're picking your choice um but
unfortunately<03:35:16.239><c> models</c><03:35:16.560><c> at</c><03:35:16.720><c> our</c><03:35:17.040><c> size</c><03:35:17.319><c> can't</c>

03:35:17.510 --> 03:35:17.520 align:start position:0%
unfortunately models at our size can't
 

03:35:17.520 --> 03:35:20.030 align:start position:0%
unfortunately models at our size can't
do<03:35:17.720><c> that</c><03:35:17.920><c> only</c><03:35:18.160><c> models</c><03:35:18.600><c> at</c><03:35:18.720><c> a</c><03:35:18.840><c> bigger</c><03:35:19.199><c> size</c><03:35:19.840><c> are</c>

03:35:20.030 --> 03:35:20.040 align:start position:0%
do that only models at a bigger size are
 

03:35:20.040 --> 03:35:22.229 align:start position:0%
do that only models at a bigger size are
able<03:35:20.239><c> to</c><03:35:20.399><c> do</c><03:35:20.600><c> that</c><03:35:21.359><c> and</c><03:35:21.479><c> so</c><03:35:21.640><c> our</c><03:35:21.800><c> models</c><03:35:22.080><c> are</c>

03:35:22.229 --> 03:35:22.239 align:start position:0%
able to do that and so our models are
 

03:35:22.239 --> 03:35:23.670 align:start position:0%
able to do that and so our models are
actually<03:35:22.439><c> slightly</c><03:35:22.840><c> handicapped</c><03:35:23.359><c> in</c><03:35:23.479><c> this</c>

03:35:23.670 --> 03:35:23.680 align:start position:0%
actually slightly handicapped in this
 

03:35:23.680 --> 03:35:25.590 align:start position:0%
actually slightly handicapped in this
way<03:35:24.399><c> that</c><03:35:24.640><c> they</c><03:35:24.760><c> are</c><03:35:24.920><c> not</c><03:35:25.080><c> going</c><03:35:25.160><c> to</c><03:35:25.279><c> see</c><03:35:25.479><c> the</c>

03:35:25.590 --> 03:35:25.600 align:start position:0%
way that they are not going to see the
 

03:35:25.600 --> 03:35:27.630 align:start position:0%
way that they are not going to see the
other<03:35:25.880><c> options</c><03:35:26.279><c> they're</c><03:35:26.439><c> only</c><03:35:26.680><c> going</c><03:35:26.760><c> to</c><03:35:26.920><c> see</c>

03:35:27.630 --> 03:35:27.640 align:start position:0%
other options they're only going to see
 

03:35:27.640 --> 03:35:29.550 align:start position:0%
other options they're only going to see
one<03:35:27.880><c> option</c><03:35:28.120><c> at</c><03:35:28.239><c> a</c><03:35:28.439><c> time</c><03:35:29.080><c> and</c><03:35:29.199><c> they</c><03:35:29.319><c> just</c><03:35:29.439><c> have</c>

03:35:29.550 --> 03:35:29.560 align:start position:0%
one option at a time and they just have
 

03:35:29.560 --> 03:35:31.469 align:start position:0%
one option at a time and they just have
to<03:35:29.680><c> assign</c><03:35:30.000><c> probabilities</c><03:35:31.000><c> and</c><03:35:31.120><c> the</c><03:35:31.239><c> correct</c>

03:35:31.469 --> 03:35:31.479 align:start position:0%
to assign probabilities and the correct
 

03:35:31.479 --> 03:35:34.150 align:start position:0%
to assign probabilities and the correct
option<03:35:31.800><c> has</c><03:35:31.920><c> to</c><03:35:32.120><c> win</c><03:35:32.319><c> out</c><03:35:32.640><c> in</c><03:35:32.800><c> this</c><03:35:33.040><c> metric</c><03:35:34.040><c> all</c>

03:35:34.150 --> 03:35:34.160 align:start position:0%
option has to win out in this metric all
 

03:35:34.160 --> 03:35:36.269 align:start position:0%
option has to win out in this metric all
right<03:35:34.319><c> so</c><03:35:34.560><c> let's</c><03:35:35.120><c> now</c><03:35:35.479><c> implement</c><03:35:35.920><c> this</c><03:35:36.120><c> very</c>

03:35:36.269 --> 03:35:36.279 align:start position:0%
right so let's now implement this very
 

03:35:36.279 --> 03:35:38.229 align:start position:0%
right so let's now implement this very
briefly<03:35:36.960><c> and</c><03:35:37.199><c> incorporate</c><03:35:37.720><c> it</c><03:35:37.880><c> into</c><03:35:38.080><c> our</c>

03:35:38.229 --> 03:35:38.239 align:start position:0%
briefly and incorporate it into our
 

03:35:38.239 --> 03:35:40.429 align:start position:0%
briefly and incorporate it into our
script<03:35:39.239><c> okay</c><03:35:39.359><c> so</c><03:35:39.520><c> what</c><03:35:39.600><c> I've</c><03:35:39.800><c> done</c><03:35:40.040><c> here</c><03:35:40.319><c> is</c>

03:35:40.429 --> 03:35:40.439 align:start position:0%
script okay so what I've done here is
 

03:35:40.439 --> 03:35:42.269 align:start position:0%
script okay so what I've done here is
I've<03:35:40.600><c> introduced</c><03:35:41.040><c> a</c><03:35:41.160><c> new</c><03:35:41.399><c> file</c><03:35:41.720><c> called</c><03:35:41.920><c> hell</c>

03:35:42.269 --> 03:35:42.279 align:start position:0%
I've introduced a new file called hell
 

03:35:42.279 --> 03:35:45.030 align:start position:0%
I've introduced a new file called hell
swag.<03:35:42.760><c> py</c><03:35:43.479><c> that</c><03:35:43.560><c> you</c><03:35:43.680><c> can</c><03:35:43.800><c> take</c><03:35:43.920><c> a</c><03:35:44.080><c> look</c><03:35:44.239><c> into</c>

03:35:45.030 --> 03:35:45.040 align:start position:0%
swag. py that you can take a look into
 

03:35:45.040 --> 03:35:46.349 align:start position:0%
swag. py that you can take a look into
and<03:35:45.120><c> I'm</c><03:35:45.239><c> not</c><03:35:45.359><c> going</c><03:35:45.479><c> to</c><03:35:45.640><c> to</c><03:35:45.760><c> step</c><03:35:45.960><c> through</c><03:35:46.239><c> all</c>

03:35:46.349 --> 03:35:46.359 align:start position:0%
and I'm not going to to step through all
 

03:35:46.359 --> 03:35:48.910 align:start position:0%
and I'm not going to to step through all
of<03:35:46.520><c> it</c><03:35:46.840><c> because</c><03:35:47.720><c> uh</c><03:35:47.880><c> this</c><03:35:48.000><c> is</c><03:35:48.160><c> not</c><03:35:48.399><c> exactly</c>

03:35:48.910 --> 03:35:48.920 align:start position:0%
of it because uh this is not exactly
 

03:35:48.920 --> 03:35:51.590 align:start position:0%
of it because uh this is not exactly
like<03:35:49.479><c> deep</c><03:35:49.840><c> code</c><03:35:50.399><c> deep</c><03:35:50.720><c> code</c><03:35:51.080><c> it's</c><03:35:51.279><c> kind</c><03:35:51.399><c> of</c>

03:35:51.590 --> 03:35:51.600 align:start position:0%
like deep code deep code it's kind of
 

03:35:51.600 --> 03:35:53.670 align:start position:0%
like deep code deep code it's kind of
like<03:35:51.720><c> a</c><03:35:51.840><c> little</c><03:35:52.000><c> bit</c><03:35:52.160><c> tedious</c><03:35:52.680><c> honestly</c>

03:35:53.670 --> 03:35:53.680 align:start position:0%
like a little bit tedious honestly
 

03:35:53.680 --> 03:35:54.550 align:start position:0%
like a little bit tedious honestly
because<03:35:53.880><c> what's</c><03:35:54.040><c> happening</c><03:35:54.279><c> is</c><03:35:54.439><c> I'm</c>

03:35:54.550 --> 03:35:54.560 align:start position:0%
because what's happening is I'm
 

03:35:54.560 --> 03:35:56.870 align:start position:0%
because what's happening is I'm
downloading<03:35:54.960><c> hsac</c><03:35:55.560><c> from</c><03:35:55.760><c> GitHub</c><03:35:56.560><c> and</c><03:35:56.720><c> I'm</c>

03:35:56.870 --> 03:35:56.880 align:start position:0%
downloading hsac from GitHub and I'm
 

03:35:56.880 --> 03:35:58.429 align:start position:0%
downloading hsac from GitHub and I'm
rendering<03:35:57.359><c> all</c><03:35:57.479><c> of</c><03:35:57.600><c> its</c><03:35:57.840><c> examples</c><03:35:58.279><c> and</c><03:35:58.359><c> there</c>

03:35:58.429 --> 03:35:58.439 align:start position:0%
rendering all of its examples and there
 

03:35:58.439 --> 03:36:00.630 align:start position:0%
rendering all of its examples and there
are<03:35:58.560><c> a</c><03:35:58.640><c> total</c><03:35:58.880><c> of</c><03:35:58.960><c> 10,000</c><03:35:59.439><c> examples</c><03:36:00.399><c> I</c><03:36:00.479><c> am</c>

03:36:00.630 --> 03:36:00.640 align:start position:0%
are a total of 10,000 examples I am
 

03:36:00.640 --> 03:36:04.389 align:start position:0%
are a total of 10,000 examples I am
rendering<03:36:01.120><c> them</c><03:36:01.399><c> into</c><03:36:02.160><c> this</c><03:36:02.720><c> format</c><03:36:03.720><c> um</c><03:36:04.279><c> and</c>

03:36:04.389 --> 03:36:04.399 align:start position:0%
rendering them into this format um and
 

03:36:04.399 --> 03:36:07.189 align:start position:0%
rendering them into this format um and
so<03:36:04.680><c> here</c><03:36:05.359><c> at</c><03:36:05.479><c> the</c><03:36:05.640><c> end</c><03:36:05.840><c> of</c><03:36:06.080><c> this</c><03:36:06.399><c> render</c>

03:36:07.189 --> 03:36:07.199 align:start position:0%
so here at the end of this render
 

03:36:07.199 --> 03:36:09.590 align:start position:0%
so here at the end of this render
example<03:36:08.199><c> function</c><03:36:08.960><c> you</c><03:36:09.080><c> can</c><03:36:09.199><c> see</c><03:36:09.359><c> that</c><03:36:09.479><c> I'm</c>

03:36:09.590 --> 03:36:09.600 align:start position:0%
example function you can see that I'm
 

03:36:09.600 --> 03:36:11.110 align:start position:0%
example function you can see that I'm
returning<03:36:10.199><c> the</c>

03:36:11.110 --> 03:36:11.120 align:start position:0%
returning the
 

03:36:11.120 --> 03:36:16.429 align:start position:0%
returning the
tokens<03:36:12.120><c> uh</c><03:36:12.239><c> the</c><03:36:12.359><c> tokens</c><03:36:12.760><c> of</c><03:36:13.279><c> this</c><03:36:13.680><c> um</c><03:36:14.560><c> 4xt</c>

03:36:16.429 --> 03:36:16.439 align:start position:0%
tokens uh the tokens of this um 4xt
 

03:36:16.439 --> 03:36:19.150 align:start position:0%
tokens uh the tokens of this um 4xt
uh<03:36:16.680><c> array</c><03:36:17.000><c> of</c><03:36:17.160><c> Tokens</c><03:36:18.040><c> The</c><03:36:18.279><c> Mask</c><03:36:18.760><c> which</c><03:36:18.920><c> tells</c>

03:36:19.150 --> 03:36:19.160 align:start position:0%
uh array of Tokens The Mask which tells
 

03:36:19.160 --> 03:36:21.670 align:start position:0%
uh array of Tokens The Mask which tells
us<03:36:19.399><c> which</c><03:36:19.800><c> parts</c><03:36:20.040><c> are</c><03:36:20.279><c> the</c><03:36:20.479><c> options</c><03:36:21.479><c> and</c>

03:36:21.670 --> 03:36:21.680 align:start position:0%
us which parts are the options and
 

03:36:21.680 --> 03:36:24.429 align:start position:0%
us which parts are the options and
everything<03:36:21.920><c> else</c><03:36:22.080><c> is</c><03:36:22.279><c> zero</c><03:36:23.120><c> and</c><03:36:23.239><c> the</c><03:36:23.439><c> label</c>

03:36:24.429 --> 03:36:24.439 align:start position:0%
everything else is zero and the label
 

03:36:24.439 --> 03:36:26.750 align:start position:0%
everything else is zero and the label
that<03:36:24.560><c> is</c><03:36:24.720><c> the</c><03:36:24.840><c> correct</c><03:36:25.319><c> label</c><03:36:26.319><c> and</c><03:36:26.439><c> so</c><03:36:26.640><c> that</c>

03:36:26.750 --> 03:36:26.760 align:start position:0%
that is the correct label and so that
 

03:36:26.760 --> 03:36:28.269 align:start position:0%
that is the correct label and so that
allows<03:36:27.000><c> us</c><03:36:27.120><c> to</c><03:36:27.239><c> then</c><03:36:27.359><c> iterate</c><03:36:27.720><c> the</c><03:36:27.840><c> examples</c>

03:36:28.269 --> 03:36:28.279 align:start position:0%
allows us to then iterate the examples
 

03:36:28.279 --> 03:36:30.150 align:start position:0%
allows us to then iterate the examples
and<03:36:28.399><c> render</c><03:36:28.760><c> them</c><03:36:29.199><c> and</c><03:36:29.319><c> I</c><03:36:29.439><c> have</c><03:36:29.560><c> an</c><03:36:29.720><c> evaluate</c>

03:36:30.150 --> 03:36:30.160 align:start position:0%
and render them and I have an evaluate
 

03:36:30.160 --> 03:36:33.870 align:start position:0%
and render them and I have an evaluate
function<03:36:30.560><c> here</c><03:36:30.880><c> which</c><03:36:31.000><c> can</c><03:36:31.160><c> load</c><03:36:32.040><c> a</c><03:36:32.399><c> um</c><03:36:33.199><c> gpt2</c>

03:36:33.870 --> 03:36:33.880 align:start position:0%
function here which can load a um gpt2
 

03:36:33.880 --> 03:36:36.670 align:start position:0%
function here which can load a um gpt2
from<03:36:34.080><c> huging</c><03:36:34.479><c> face</c><03:36:35.040><c> and</c><03:36:35.160><c> it</c><03:36:35.319><c> runs</c><03:36:35.640><c> the</c><03:36:35.800><c> eval</c>

03:36:36.670 --> 03:36:36.680 align:start position:0%
from huging face and it runs the eval
 

03:36:36.680 --> 03:36:40.590 align:start position:0%
from huging face and it runs the eval
here<03:36:37.880><c> um</c><03:36:38.880><c> and</c><03:36:38.960><c> it</c><03:36:39.080><c> basically</c><03:36:39.399><c> just</c><03:36:39.600><c> calculates</c>

03:36:40.590 --> 03:36:40.600 align:start position:0%
here um and it basically just calculates
 

03:36:40.600 --> 03:36:42.750 align:start position:0%
here um and it basically just calculates
uh<03:36:40.720><c> just</c><03:36:40.880><c> as</c><03:36:41.000><c> I</c><03:36:41.199><c> described</c><03:36:42.000><c> it</c><03:36:42.160><c> predicts</c><03:36:42.600><c> the</c>

03:36:42.750 --> 03:36:42.760 align:start position:0%
uh just as I described it predicts the
 

03:36:42.760 --> 03:36:45.030 align:start position:0%
uh just as I described it predicts the
option<03:36:43.120><c> that</c><03:36:43.279><c> has</c><03:36:43.520><c> the</c><03:36:44.160><c> lowest</c><03:36:44.800><c> or</c><03:36:44.960><c> the</c>

03:36:45.030 --> 03:36:45.040 align:start position:0%
option that has the lowest or the
 

03:36:45.040 --> 03:36:47.750 align:start position:0%
option that has the lowest or the
highest<03:36:45.279><c> prob</c><03:36:45.720><c> ility</c><03:36:46.680><c> and</c><03:36:47.199><c> the</c><03:36:47.319><c> way</c><03:36:47.439><c> to</c><03:36:47.560><c> do</c>

03:36:47.750 --> 03:36:47.760 align:start position:0%
highest prob ility and the way to do
 

03:36:47.760 --> 03:36:48.950 align:start position:0%
highest prob ility and the way to do
that<03:36:47.920><c> actually</c><03:36:48.160><c> is</c><03:36:48.319><c> we</c><03:36:48.439><c> can</c><03:36:48.600><c> basically</c>

03:36:48.950 --> 03:36:48.960 align:start position:0%
that actually is we can basically
 

03:36:48.960 --> 03:36:51.590 align:start position:0%
that actually is we can basically
evaluate<03:36:49.399><c> the</c><03:36:49.560><c> cross</c><03:36:49.800><c> entropy</c><03:36:50.319><c> loss</c><03:36:51.319><c> so</c><03:36:51.479><c> we're</c>

03:36:51.590 --> 03:36:51.600 align:start position:0%
evaluate the cross entropy loss so we're
 

03:36:51.600 --> 03:36:53.349 align:start position:0%
evaluate the cross entropy loss so we're
basically<03:36:51.920><c> evaluating</c><03:36:52.439><c> the</c><03:36:52.920><c> loss</c><03:36:53.199><c> of</c>

03:36:53.349 --> 03:36:53.359 align:start position:0%
basically evaluating the loss of
 

03:36:53.359 --> 03:36:55.389 align:start position:0%
basically evaluating the loss of
predicting<03:36:53.760><c> the</c><03:36:53.880><c> next</c><03:36:54.080><c> token</c><03:36:54.319><c> in</c><03:36:54.439><c> a</c><03:36:54.560><c> sequence</c>

03:36:55.389 --> 03:36:55.399 align:start position:0%
predicting the next token in a sequence
 

03:36:55.399 --> 03:36:57.349 align:start position:0%
predicting the next token in a sequence
and<03:36:55.479><c> then</c><03:36:55.600><c> we're</c><03:36:55.760><c> looking</c><03:36:55.960><c> at</c><03:36:56.160><c> the</c><03:36:56.520><c> row</c><03:36:57.199><c> that</c>

03:36:57.349 --> 03:36:57.359 align:start position:0%
and then we're looking at the row that
 

03:36:57.359 --> 03:37:01.469 align:start position:0%
and then we're looking at the row that
has<03:36:57.520><c> the</c><03:36:57.720><c> lowest</c><03:36:58.520><c> average</c><03:36:59.279><c> loss</c><03:37:00.279><c> and</c><03:37:00.520><c> that's</c>

03:37:01.469 --> 03:37:01.479 align:start position:0%
has the lowest average loss and that's
 

03:37:01.479 --> 03:37:04.389 align:start position:0%
has the lowest average loss and that's
the<03:37:02.479><c> uh</c><03:37:03.040><c> option</c><03:37:03.359><c> that</c><03:37:03.520><c> we</c><03:37:03.800><c> pick</c><03:37:04.080><c> as</c><03:37:04.239><c> the</c>

03:37:04.389 --> 03:37:04.399 align:start position:0%
the uh option that we pick as the
 

03:37:04.399 --> 03:37:06.550 align:start position:0%
the uh option that we pick as the
prediction<03:37:05.120><c> and</c><03:37:05.239><c> then</c><03:37:05.359><c> we</c><03:37:05.479><c> do</c><03:37:05.600><c> some</c><03:37:05.840><c> stats</c><03:37:06.279><c> and</c>

03:37:06.550 --> 03:37:06.560 align:start position:0%
prediction and then we do some stats and
 

03:37:06.560 --> 03:37:08.750 align:start position:0%
prediction and then we do some stats and
prints<03:37:06.920><c> and</c><03:37:07.120><c> stuff</c><03:37:07.319><c> like</c><03:37:07.520><c> that</c><03:37:08.279><c> so</c><03:37:08.439><c> that</c><03:37:08.560><c> is</c><03:37:08.680><c> a</c>

03:37:08.750 --> 03:37:08.760 align:start position:0%
prints and stuff like that so that is a
 

03:37:08.760 --> 03:37:11.150 align:start position:0%
prints and stuff like that so that is a
way<03:37:08.880><c> to</c><03:37:09.040><c> evaluate</c><03:37:09.479><c> L</c><03:37:09.760><c> swag</c><03:37:10.000><c> now</c><03:37:10.520><c> if</c><03:37:10.640><c> you</c><03:37:10.760><c> go</c><03:37:10.960><c> up</c>

03:37:11.150 --> 03:37:11.160 align:start position:0%
way to evaluate L swag now if you go up
 

03:37:11.160 --> 03:37:14.150 align:start position:0%
way to evaluate L swag now if you go up
here<03:37:11.560><c> I'm</c><03:37:11.680><c> showing</c><03:37:12.080><c> that</c><03:37:12.199><c> for</c><03:37:12.359><c> GPT</c><03:37:13.040><c> 2124m</c><03:37:14.040><c> if</c>

03:37:14.150 --> 03:37:14.160 align:start position:0%
here I'm showing that for GPT 2124m if
 

03:37:14.160 --> 03:37:16.389 align:start position:0%
here I'm showing that for GPT 2124m if
you<03:37:14.279><c> run</c><03:37:14.640><c> this</c><03:37:14.840><c> script</c><03:37:15.600><c> you're</c><03:37:15.760><c> going</c><03:37:15.960><c> to</c><03:37:16.080><c> see</c>

03:37:16.389 --> 03:37:16.399 align:start position:0%
you run this script you're going to see
 

03:37:16.399 --> 03:37:19.229 align:start position:0%
you run this script you're going to see
that<03:37:16.640><c> H</c><03:37:17.040><c> swag</c><03:37:17.239><c> gets</c>

03:37:19.229 --> 03:37:19.239 align:start position:0%
that H swag gets
 

03:37:19.239 --> 03:37:22.030 align:start position:0%
that H swag gets
29.5%<03:37:20.239><c> um</c><03:37:21.000><c> so</c><03:37:21.279><c> that's</c><03:37:21.399><c> the</c><03:37:21.560><c> performance</c><03:37:21.960><c> we</c>

03:37:22.030 --> 03:37:22.040 align:start position:0%
29.5% um so that's the performance we
 

03:37:22.040 --> 03:37:23.790 align:start position:0%
29.5% um so that's the performance we
get<03:37:22.279><c> here</c><03:37:22.640><c> now</c><03:37:22.800><c> remember</c><03:37:23.080><c> that</c><03:37:23.239><c> random</c><03:37:23.560><c> Chan</c>

03:37:23.790 --> 03:37:23.800 align:start position:0%
get here now remember that random Chan
 

03:37:23.800 --> 03:37:27.309 align:start position:0%
get here now remember that random Chan
is<03:37:23.960><c> 25%</c><03:37:24.960><c> so</c><03:37:25.439><c> we</c><03:37:25.560><c> haven't</c><03:37:25.840><c> gone</c><03:37:26.080><c> too</c><03:37:26.319><c> far</c><03:37:27.160><c> and</c>

03:37:27.309 --> 03:37:27.319 align:start position:0%
is 25% so we haven't gone too far and
 

03:37:27.319 --> 03:37:31.229 align:start position:0%
is 25% so we haven't gone too far and
gpt2<03:37:28.000><c> XL</c><03:37:28.640><c> which</c><03:37:28.760><c> is</c><03:37:28.880><c> the</c><03:37:29.040><c> biggest</c><03:37:29.760><c> the</c><03:37:30.239><c> gpt2</c>

03:37:31.229 --> 03:37:31.239 align:start position:0%
gpt2 XL which is the biggest the gpt2
 

03:37:31.239 --> 03:37:34.870 align:start position:0%
gpt2 XL which is the biggest the gpt2
gets<03:37:31.560><c> all</c><03:37:31.680><c> the</c><03:37:31.800><c> way</c><03:37:31.920><c> up</c><03:37:32.040><c> to</c><03:37:32.359><c> 49%</c><03:37:33.359><c> roughly</c><03:37:34.279><c> so</c><03:37:34.760><c> uh</c>

03:37:34.870 --> 03:37:34.880 align:start position:0%
gets all the way up to 49% roughly so uh
 

03:37:34.880 --> 03:37:36.429 align:start position:0%
gets all the way up to 49% roughly so uh
these<03:37:34.960><c> are</c><03:37:35.160><c> pretty</c><03:37:35.359><c> low</c><03:37:35.600><c> values</c><03:37:35.960><c> considering</c>

03:37:36.429 --> 03:37:36.439 align:start position:0%
these are pretty low values considering
 

03:37:36.439 --> 03:37:37.830 align:start position:0%
these are pretty low values considering
that<03:37:36.680><c> today's</c><03:37:37.000><c> state-ofthe-art</c><03:37:37.319><c> is</c><03:37:37.680><c> more</c>

03:37:37.830 --> 03:37:37.840 align:start position:0%
that today's state-ofthe-art is more
 

03:37:37.840 --> 03:37:40.030 align:start position:0%
that today's state-ofthe-art is more
like<03:37:38.120><c> 95%</c><03:37:39.120><c> uh</c><03:37:39.199><c> so</c><03:37:39.319><c> these</c><03:37:39.479><c> are</c><03:37:39.680><c> definitely</c>

03:37:40.030 --> 03:37:40.040 align:start position:0%
like 95% uh so these are definitely
 

03:37:40.040 --> 03:37:42.710 align:start position:0%
like 95% uh so these are definitely
older<03:37:40.359><c> models</c><03:37:40.720><c> by</c><03:37:41.040><c> now</c><03:37:42.040><c> and</c><03:37:42.199><c> then</c><03:37:42.359><c> there's</c><03:37:42.600><c> one</c>

03:37:42.710 --> 03:37:42.720 align:start position:0%
older models by now and then there's one
 

03:37:42.720 --> 03:37:44.950 align:start position:0%
older models by now and then there's one
more<03:37:42.880><c> thing</c><03:37:43.040><c> called</c><03:37:43.239><c> Uther</c><03:37:43.760><c> harness</c><03:37:44.760><c> which</c><03:37:44.880><c> is</c>

03:37:44.950 --> 03:37:44.960 align:start position:0%
more thing called Uther harness which is
 

03:37:44.960 --> 03:37:46.469 align:start position:0%
more thing called Uther harness which is
a<03:37:45.080><c> very</c><03:37:45.680><c> piece</c><03:37:45.800><c> of</c><03:37:45.920><c> infrastructure</c><03:37:46.399><c> for</c>

03:37:46.469 --> 03:37:46.479 align:start position:0%
a very piece of infrastructure for
 

03:37:46.479 --> 03:37:48.550 align:start position:0%
a very piece of infrastructure for
running<03:37:46.720><c> evals</c><03:37:47.080><c> for</c><03:37:47.239><c> language</c><03:37:47.520><c> models</c><03:37:48.319><c> and</c>

03:37:48.550 --> 03:37:48.560 align:start position:0%
running evals for language models and
 

03:37:48.560 --> 03:37:50.429 align:start position:0%
running evals for language models and
they<03:37:48.720><c> get</c><03:37:48.920><c> slightly</c><03:37:49.319><c> different</c><03:37:49.600><c> numbers</c><03:37:50.359><c> and</c>

03:37:50.429 --> 03:37:50.439 align:start position:0%
they get slightly different numbers and
 

03:37:50.439 --> 03:37:52.309 align:start position:0%
they get slightly different numbers and
I'm<03:37:50.560><c> not</c><03:37:50.840><c> 100%</c><03:37:51.239><c> sure</c><03:37:51.479><c> what</c><03:37:51.600><c> the</c><03:37:51.760><c> discrepancy</c>

03:37:52.309 --> 03:37:52.319 align:start position:0%
I'm not 100% sure what the discrepancy
 

03:37:52.319 --> 03:37:54.630 align:start position:0%
I'm not 100% sure what the discrepancy
is<03:37:52.439><c> for</c><03:37:52.680><c> these</c><03:37:53.520><c> um</c><03:37:53.800><c> it</c><03:37:53.960><c> could</c><03:37:54.120><c> be</c><03:37:54.319><c> that</c><03:37:54.479><c> they</c>

03:37:54.630 --> 03:37:54.640 align:start position:0%
is for these um it could be that they
 

03:37:54.640 --> 03:37:57.229 align:start position:0%
is for these um it could be that they
actually<03:37:55.319><c> do</c><03:37:55.560><c> the</c><03:37:55.680><c> multiple</c><03:37:56.080><c> choice</c><03:37:57.080><c> uh</c>

03:37:57.229 --> 03:37:57.239 align:start position:0%
actually do the multiple choice uh
 

03:37:57.239 --> 03:37:59.389 align:start position:0%
actually do the multiple choice uh
instead<03:37:57.560><c> of</c><03:37:57.760><c> just</c><03:37:57.880><c> the</c><03:37:58.040><c> completions</c><03:37:58.920><c> and</c><03:37:59.239><c> that</c>

03:37:59.389 --> 03:37:59.399 align:start position:0%
instead of just the completions and that
 

03:37:59.399 --> 03:38:02.429 align:start position:0%
instead of just the completions and that
could<03:37:59.560><c> be</c><03:37:59.840><c> the</c><03:38:00.120><c> um</c><03:38:01.000><c> uh</c><03:38:01.080><c> the</c><03:38:01.279><c> discrepancy</c><03:38:02.279><c> but</c>

03:38:02.429 --> 03:38:02.439 align:start position:0%
could be the um uh the discrepancy but
 

03:38:02.439 --> 03:38:04.269 align:start position:0%
could be the um uh the discrepancy but
I'm<03:38:02.560><c> not</c><03:38:02.840><c> 100%</c><03:38:03.199><c> sure</c><03:38:03.439><c> about</c><03:38:03.640><c> that</c><03:38:03.880><c> i'</c><03:38:04.040><c> have</c><03:38:04.160><c> to</c>

03:38:04.269 --> 03:38:04.279 align:start position:0%
I'm not 100% sure about that i' have to
 

03:38:04.279 --> 03:38:06.189 align:start position:0%
I'm not 100% sure about that i' have to
take<03:38:04.399><c> a</c><03:38:04.520><c> look</c><03:38:05.040><c> but</c><03:38:05.199><c> for</c><03:38:05.359><c> now</c><03:38:05.560><c> our</c><03:38:05.760><c> script</c>

03:38:06.189 --> 03:38:06.199 align:start position:0%
take a look but for now our script
 

03:38:06.199 --> 03:38:08.910 align:start position:0%
take a look but for now our script
reports<03:38:07.080><c> 2955</c><03:38:08.080><c> and</c><03:38:08.160><c> so</c><03:38:08.319><c> that</c><03:38:08.439><c> is</c><03:38:08.520><c> the</c><03:38:08.640><c> number</c>

03:38:08.910 --> 03:38:08.920 align:start position:0%
reports 2955 and so that is the number
 

03:38:08.920 --> 03:38:10.429 align:start position:0%
reports 2955 and so that is the number
that<03:38:09.040><c> we'd</c><03:38:09.199><c> like</c><03:38:09.359><c> to</c><03:38:09.560><c> beat</c><03:38:10.080><c> if</c><03:38:10.199><c> we</c><03:38:10.319><c> are</c>

03:38:10.429 --> 03:38:10.439 align:start position:0%
that we'd like to beat if we are
 

03:38:10.439 --> 03:38:13.630 align:start position:0%
that we'd like to beat if we are
training<03:38:10.880><c> a</c><03:38:11.040><c> GPD</c><03:38:11.399><c> 2124m</c><03:38:12.399><c> from</c><03:38:12.640><c> scratch</c><03:38:13.000><c> and</c>

03:38:13.630 --> 03:38:13.640 align:start position:0%
training a GPD 2124m from scratch and
 

03:38:13.640 --> 03:38:16.389 align:start position:0%
training a GPD 2124m from scratch and
ourselves<03:38:14.640><c> um</c>

03:38:16.389 --> 03:38:16.399 align:start position:0%
ourselves um
 

03:38:16.399 --> 03:38:19.590 align:start position:0%
ourselves um
so<03:38:17.239><c> now</c><03:38:17.479><c> I'm</c><03:38:17.600><c> going</c><03:38:17.760><c> to</c><03:38:17.880><c> go</c><03:38:18.080><c> into</c><03:38:19.080><c> actually</c>

03:38:19.590 --> 03:38:19.600 align:start position:0%
so now I'm going to go into actually
 

03:38:19.600 --> 03:38:22.910 align:start position:0%
so now I'm going to go into actually
incorporating<03:38:20.600><c> this</c><03:38:21.040><c> eval</c><03:38:22.040><c> into</c><03:38:22.439><c> our</c><03:38:22.680><c> main</c>

03:38:22.910 --> 03:38:22.920 align:start position:0%
incorporating this eval into our main
 

03:38:22.920 --> 03:38:26.309 align:start position:0%
incorporating this eval into our main
training<03:38:23.359><c> script</c><03:38:24.359><c> and</c><03:38:25.000><c> um</c><03:38:25.680><c> and</c><03:38:25.920><c> basically</c>

03:38:26.309 --> 03:38:26.319 align:start position:0%
training script and um and basically
 

03:38:26.319 --> 03:38:27.990 align:start position:0%
training script and um and basically
because<03:38:26.600><c> we</c><03:38:26.720><c> want</c><03:38:26.840><c> to</c><03:38:27.080><c> evaluate</c><03:38:27.520><c> it</c><03:38:27.720><c> in</c><03:38:27.800><c> a</c>

03:38:27.990 --> 03:38:28.000 align:start position:0%
because we want to evaluate it in a
 

03:38:28.000 --> 03:38:30.309 align:start position:0%
because we want to evaluate it in a
periodic<03:38:28.479><c> manner</c><03:38:29.000><c> so</c><03:38:29.160><c> that</c><03:38:29.319><c> we</c><03:38:29.439><c> can</c><03:38:29.640><c> track</c><03:38:29.960><c> H</c>

03:38:30.309 --> 03:38:30.319 align:start position:0%
periodic manner so that we can track H
 

03:38:30.319 --> 03:38:32.510 align:start position:0%
periodic manner so that we can track H
swag<03:38:30.479><c> and</c><03:38:30.600><c> how</c><03:38:30.720><c> it</c><03:38:30.840><c> evolves</c><03:38:31.120><c> over</c><03:38:31.319><c> time</c><03:38:32.199><c> and</c>

03:38:32.510 --> 03:38:32.520 align:start position:0%
swag and how it evolves over time and
 

03:38:32.520 --> 03:38:36.630 align:start position:0%
swag and how it evolves over time and
see<03:38:32.920><c> when</c><03:38:33.399><c> when</c><03:38:33.760><c> and</c><03:38:34.000><c> if</c><03:38:34.439><c> we</c><03:38:34.640><c> cross</c><03:38:35.600><c> uh</c><03:38:35.800><c> this</c>

03:38:36.630 --> 03:38:36.640 align:start position:0%
see when when and if we cross uh this
 

03:38:36.640 --> 03:38:41.229 align:start position:0%
see when when and if we cross uh this
2955<03:38:37.960><c> um</c><03:38:38.960><c> sort</c><03:38:39.199><c> of</c><03:38:39.600><c> region</c><03:38:40.560><c> so</c><03:38:40.720><c> let's</c><03:38:40.880><c> now</c><03:38:41.080><c> walk</c>

03:38:41.229 --> 03:38:41.239 align:start position:0%
2955 um sort of region so let's now walk
 

03:38:41.239 --> 03:38:42.429 align:start position:0%
2955 um sort of region so let's now walk
through<03:38:41.399><c> some</c><03:38:41.520><c> of</c><03:38:41.600><c> the</c><03:38:41.720><c> changes</c><03:38:42.040><c> to</c><03:38:42.199><c> train</c>

03:38:42.429 --> 03:38:42.439 align:start position:0%
through some of the changes to train
 

03:38:42.439 --> 03:38:45.110 align:start position:0%
through some of the changes to train
gpt2<03:38:43.080><c> thatp</c><03:38:44.080><c> the</c><03:38:44.199><c> first</c><03:38:44.359><c> thing</c><03:38:44.520><c> I</c><03:38:44.640><c> did</c><03:38:44.840><c> here</c><03:38:45.000><c> is</c>

03:38:45.110 --> 03:38:45.120 align:start position:0%
gpt2 thatp the first thing I did here is
 

03:38:45.120 --> 03:38:47.630 align:start position:0%
gpt2 thatp the first thing I did here is
I<03:38:45.239><c> actually</c><03:38:45.600><c> made</c><03:38:45.760><c> use</c><03:38:46.120><c> compile</c><03:38:47.120><c> optional</c>

03:38:47.630 --> 03:38:47.640 align:start position:0%
I actually made use compile optional
 

03:38:47.640 --> 03:38:51.110 align:start position:0%
I actually made use compile optional
kind<03:38:47.800><c> of</c><03:38:48.120><c> and</c><03:38:48.279><c> I</c><03:38:48.760><c> disabled</c><03:38:49.279><c> it</c><03:38:49.439><c> by</c><03:38:50.000><c> default</c><03:38:51.000><c> and</c>

03:38:51.110 --> 03:38:51.120 align:start position:0%
kind of and I disabled it by default and
 

03:38:51.120 --> 03:38:52.990 align:start position:0%
kind of and I disabled it by default and
the<03:38:51.319><c> problem</c><03:38:51.600><c> with</c><03:38:51.800><c> that</c><03:38:52.120><c> is</c><03:38:52.520><c> the</c><03:38:52.680><c> problem</c>

03:38:52.990 --> 03:38:53.000 align:start position:0%
the problem with that is the problem
 

03:38:53.000 --> 03:38:55.229 align:start position:0%
the problem with that is the problem
with<03:38:53.279><c> compile</c><03:38:54.239><c> is</c><03:38:54.319><c> that</c><03:38:54.520><c> unfortunately</c><03:38:55.120><c> it</c>

03:38:55.229 --> 03:38:55.239 align:start position:0%
with compile is that unfortunately it
 

03:38:55.239 --> 03:38:56.830 align:start position:0%
with compile is that unfortunately it
does<03:38:55.399><c> make</c><03:38:55.520><c> our</c><03:38:55.680><c> code</c><03:38:55.960><c> faster</c><03:38:56.560><c> but</c><03:38:56.680><c> it</c>

03:38:56.830 --> 03:38:56.840 align:start position:0%
does make our code faster but it
 

03:38:56.840 --> 03:38:58.469 align:start position:0%
does make our code faster but it
actually<03:38:57.120><c> breaks</c><03:38:57.520><c> the</c><03:38:57.680><c> evaluation</c><03:38:58.199><c> code</c><03:38:58.399><c> and</c>

03:38:58.469 --> 03:38:58.479 align:start position:0%
actually breaks the evaluation code and
 

03:38:58.479 --> 03:39:00.110 align:start position:0%
actually breaks the evaluation code and
the<03:38:58.600><c> sampling</c><03:38:59.040><c> code</c><03:38:59.439><c> it</c><03:38:59.560><c> gives</c><03:38:59.760><c> me</c><03:38:59.880><c> a</c><03:38:59.960><c> very</c>

03:39:00.110 --> 03:39:00.120 align:start position:0%
the sampling code it gives me a very
 

03:39:00.120 --> 03:39:02.150 align:start position:0%
the sampling code it gives me a very
gnarly<03:39:00.520><c> message</c><03:39:00.800><c> and</c><03:39:00.920><c> I</c><03:39:01.000><c> don't</c><03:39:01.160><c> know</c><03:39:01.319><c> why</c><03:39:01.960><c> so</c>

03:39:02.150 --> 03:39:02.160 align:start position:0%
gnarly message and I don't know why so
 

03:39:02.160 --> 03:39:04.229 align:start position:0%
gnarly message and I don't know why so
hopefully<03:39:02.560><c> by</c><03:39:02.680><c> the</c><03:39:02.800><c> time</c><03:39:02.960><c> you</c><03:39:03.160><c> get</c><03:39:03.279><c> to</c><03:39:03.520><c> the</c>

03:39:04.229 --> 03:39:04.239 align:start position:0%
hopefully by the time you get to the
 

03:39:04.239 --> 03:39:06.269 align:start position:0%
hopefully by the time you get to the
codebase<03:39:04.680><c> when</c><03:39:04.800><c> I</c><03:39:04.880><c> put</c><03:39:05.000><c> it</c><03:39:05.120><c> up</c><03:39:05.199><c> on</c><03:39:05.359><c> GitHub</c><03:39:06.160><c> uh</c>

03:39:06.269 --> 03:39:06.279 align:start position:0%
codebase when I put it up on GitHub uh
 

03:39:06.279 --> 03:39:07.870 align:start position:0%
codebase when I put it up on GitHub uh
we're<03:39:06.439><c> going</c><03:39:06.520><c> to</c><03:39:06.680><c> fix</c><03:39:06.920><c> that</c><03:39:07.080><c> by</c><03:39:07.239><c> then</c><03:39:07.560><c> but</c><03:39:07.680><c> for</c>

03:39:07.870 --> 03:39:07.880 align:start position:0%
we're going to fix that by then but for
 

03:39:07.880 --> 03:39:09.469 align:start position:0%
we're going to fix that by then but for
now<03:39:08.080><c> I'm</c><03:39:08.199><c> running</c><03:39:08.520><c> without</c><03:39:08.800><c> torch</c><03:39:09.080><c> compile</c>

03:39:09.469 --> 03:39:09.479 align:start position:0%
now I'm running without torch compile
 

03:39:09.479 --> 03:39:11.309 align:start position:0%
now I'm running without torch compile
which<03:39:09.640><c> is</c><03:39:09.840><c> why</c><03:39:09.960><c> you</c><03:39:10.080><c> see</c><03:39:10.359><c> this</c><03:39:10.600><c> be</c><03:39:10.800><c> a</c><03:39:10.880><c> bit</c>

03:39:11.309 --> 03:39:11.319 align:start position:0%
which is why you see this be a bit
 

03:39:11.319 --> 03:39:13.790 align:start position:0%
which is why you see this be a bit
slower<03:39:12.319><c> so</c><03:39:12.560><c> we're</c><03:39:12.720><c> running</c><03:39:13.000><c> without</c><03:39:13.199><c> torch</c>

03:39:13.790 --> 03:39:13.800 align:start position:0%
slower so we're running without torch
 

03:39:13.800 --> 03:39:15.950 align:start position:0%
slower so we're running without torch
compile<03:39:14.800><c> I</c><03:39:14.920><c> also</c><03:39:15.120><c> create</c><03:39:15.359><c> cre</c><03:39:15.600><c> a</c><03:39:15.720><c> log</c>

03:39:15.950 --> 03:39:15.960 align:start position:0%
compile I also create cre a log
 

03:39:15.960 --> 03:39:18.349 align:start position:0%
compile I also create cre a log
directory<03:39:16.479><c> log</c><03:39:16.920><c> where</c><03:39:17.080><c> we</c><03:39:17.160><c> can</c><03:39:17.399><c> place</c><03:39:18.160><c> our</c>

03:39:18.349 --> 03:39:18.359 align:start position:0%
directory log where we can place our
 

03:39:18.359 --> 03:39:21.990 align:start position:0%
directory log where we can place our
log.txt<03:39:19.000><c> which</c><03:39:19.840><c> will</c><03:39:20.120><c> record</c><03:39:20.840><c> the</c><03:39:20.960><c> train</c><03:39:21.279><c> loss</c>

03:39:21.990 --> 03:39:22.000 align:start position:0%
log.txt which will record the train loss
 

03:39:22.000 --> 03:39:23.550 align:start position:0%
log.txt which will record the train loss
validation<03:39:22.479><c> loss</c><03:39:22.800><c> and</c><03:39:22.880><c> the</c><03:39:22.960><c> H</c><03:39:23.239><c> swag</c>

03:39:23.550 --> 03:39:23.560 align:start position:0%
validation loss and the H swag
 

03:39:23.560 --> 03:39:25.870 align:start position:0%
validation loss and the H swag
accuracies<03:39:24.560><c> so</c><03:39:24.720><c> a</c><03:39:24.880><c> very</c><03:39:25.040><c> simple</c><03:39:25.359><c> text</c><03:39:25.640><c> file</c>

03:39:25.870 --> 03:39:25.880 align:start position:0%
accuracies so a very simple text file
 

03:39:25.880 --> 03:39:28.309 align:start position:0%
accuracies so a very simple text file
and<03:39:26.000><c> we're</c><03:39:26.120><c> going</c><03:39:26.199><c> to</c><03:39:26.760><c> uh</c><03:39:26.920><c> open</c><03:39:27.279><c> for</c><03:39:27.520><c> writing</c>

03:39:28.309 --> 03:39:28.319 align:start position:0%
and we're going to uh open for writing
 

03:39:28.319 --> 03:39:30.590 align:start position:0%
and we're going to uh open for writing
so<03:39:28.600><c> that</c><03:39:28.840><c> it</c><03:39:29.000><c> sort</c><03:39:29.239><c> of</c><03:39:29.399><c> starts</c><03:39:29.760><c> empty</c><03:39:30.399><c> and</c><03:39:30.479><c> then</c>

03:39:30.590 --> 03:39:30.600 align:start position:0%
so that it sort of starts empty and then
 

03:39:30.600 --> 03:39:32.550 align:start position:0%
so that it sort of starts empty and then
we're<03:39:30.720><c> going</c><03:39:30.800><c> to</c><03:39:30.960><c> append</c><03:39:31.319><c> to</c>

03:39:32.550 --> 03:39:32.560 align:start position:0%
we're going to append to
 

03:39:32.560 --> 03:39:36.110 align:start position:0%
we're going to append to
it<03:39:33.560><c> I</c><03:39:33.720><c> created</c><03:39:34.000><c> a</c><03:39:34.120><c> simple</c><03:39:34.399><c> variable</c><03:39:34.840><c> that</c><03:39:35.479><c> um</c>

03:39:36.110 --> 03:39:36.120 align:start position:0%
it I created a simple variable that um
 

03:39:36.120 --> 03:39:38.990 align:start position:0%
it I created a simple variable that um
helps<03:39:36.439><c> tell</c><03:39:36.600><c> us</c><03:39:36.800><c> when</c><03:39:37.080><c> we</c><03:39:37.239><c> have</c><03:39:37.359><c> a</c><03:39:37.520><c> last</c><03:39:38.000><c> step</c>

03:39:38.990 --> 03:39:39.000 align:start position:0%
helps tell us when we have a last step
 

03:39:39.000 --> 03:39:40.910 align:start position:0%
helps tell us when we have a last step
and<03:39:39.080><c> then</c><03:39:39.239><c> basically</c><03:39:39.640><c> periodically</c><03:39:40.479><c> inside</c>

03:39:40.910 --> 03:39:40.920 align:start position:0%
and then basically periodically inside
 

03:39:40.920 --> 03:39:44.510 align:start position:0%
and then basically periodically inside
this<03:39:41.120><c> Loop</c><03:39:42.120><c> every</c><03:39:42.439><c> 250th</c><03:39:43.399><c> iteration</c><03:39:44.120><c> or</c><03:39:44.359><c> at</c>

03:39:44.510 --> 03:39:44.520 align:start position:0%
this Loop every 250th iteration or at
 

03:39:44.520 --> 03:39:46.189 align:start position:0%
this Loop every 250th iteration or at
the<03:39:44.640><c> last</c><03:39:44.880><c> step</c><03:39:45.399><c> we're</c><03:39:45.560><c> going</c><03:39:45.640><c> to</c><03:39:45.800><c> evaluate</c>

03:39:46.189 --> 03:39:46.199 align:start position:0%
the last step we're going to evaluate
 

03:39:46.199 --> 03:39:50.309 align:start position:0%
the last step we're going to evaluate
the<03:39:46.359><c> validation</c><03:39:47.239><c> loss</c><03:39:48.239><c> and</c><03:39:48.359><c> then</c><03:39:48.560><c> every</c><03:39:49.160><c> 250th</c>

03:39:50.309 --> 03:39:50.319 align:start position:0%
the validation loss and then every 250th
 

03:39:50.319 --> 03:39:53.950 align:start position:0%
the validation loss and then every 250th
iteration<03:39:51.359><c> um</c><03:39:52.359><c> we</c><03:39:52.479><c> are</c><03:39:52.640><c> going</c><03:39:52.760><c> to</c><03:39:53.000><c> evaluate</c><03:39:53.600><c> H</c>

03:39:53.950 --> 03:39:53.960 align:start position:0%
iteration um we are going to evaluate H
 

03:39:53.960 --> 03:39:56.750 align:start position:0%
iteration um we are going to evaluate H
swag<03:39:54.680><c> but</c><03:39:54.880><c> only</c><03:39:55.279><c> if</c><03:39:55.600><c> we</c><03:39:55.720><c> are</c><03:39:55.960><c> not</c><03:39:56.359><c> using</c>

03:39:56.750 --> 03:39:56.760 align:start position:0%
swag but only if we are not using
 

03:39:56.760 --> 03:39:59.750 align:start position:0%
swag but only if we are not using
compile<03:39:57.560><c> because</c><03:39:57.880><c> compile</c><03:39:58.239><c> breaks</c><03:39:58.520><c> it</c><03:39:59.520><c> so</c><03:39:59.640><c> I'm</c>

03:39:59.750 --> 03:39:59.760 align:start position:0%
compile because compile breaks it so I'm
 

03:39:59.760 --> 03:40:01.349 align:start position:0%
compile because compile breaks it so I'm
going<03:39:59.840><c> to</c><03:40:00.000><c> come</c><03:40:00.160><c> back</c><03:40:00.279><c> to</c><03:40:00.520><c> this</c><03:40:00.880><c> code</c><03:40:01.080><c> for</c>

03:40:01.349 --> 03:40:01.359 align:start position:0%
going to come back to this code for
 

03:40:01.359 --> 03:40:04.189 align:start position:0%
going to come back to this code for
evaluating<03:40:01.760><c> H</c><03:40:02.080><c> swag</c><03:40:02.279><c> in</c><03:40:02.359><c> a</c><03:40:02.880><c> second</c><03:40:03.880><c> and</c><03:40:04.000><c> then</c>

03:40:04.189 --> 03:40:04.199 align:start position:0%
evaluating H swag in a second and then
 

03:40:04.199 --> 03:40:06.469 align:start position:0%
evaluating H swag in a second and then
every<03:40:04.439><c> 250th</c><03:40:05.239><c> iteration</c><03:40:05.720><c> as</c><03:40:05.840><c> well</c><03:40:06.160><c> we're</c><03:40:06.319><c> also</c>

03:40:06.469 --> 03:40:06.479 align:start position:0%
every 250th iteration as well we're also
 

03:40:06.479 --> 03:40:08.309 align:start position:0%
every 250th iteration as well we're also
going<03:40:06.560><c> to</c><03:40:06.800><c> sample</c><03:40:07.160><c> from</c><03:40:07.319><c> the</c><03:40:07.479><c> model</c><03:40:08.120><c> and</c><03:40:08.199><c> so</c>

03:40:08.309 --> 03:40:08.319 align:start position:0%
going to sample from the model and so
 

03:40:08.319 --> 03:40:10.349 align:start position:0%
going to sample from the model and so
you<03:40:08.399><c> should</c><03:40:08.600><c> recognize</c><03:40:09.120><c> this</c><03:40:09.520><c> as</c><03:40:09.720><c> our</c><03:40:09.960><c> ancient</c>

03:40:10.349 --> 03:40:10.359 align:start position:0%
you should recognize this as our ancient
 

03:40:10.359 --> 03:40:12.150 align:start position:0%
you should recognize this as our ancient
code<03:40:10.640><c> from</c><03:40:11.160><c> way</c><03:40:11.359><c> back</c><03:40:11.520><c> when</c><03:40:11.640><c> we</c><03:40:11.760><c> started</c><03:40:12.040><c> the</c>

03:40:12.150 --> 03:40:12.160 align:start position:0%
code from way back when we started the
 

03:40:12.160 --> 03:40:13.950 align:start position:0%
code from way back when we started the
video<03:40:12.920><c> and</c><03:40:13.000><c> we're</c><03:40:13.160><c> just</c><03:40:13.319><c> sampling</c><03:40:13.720><c> from</c><03:40:13.840><c> the</c>

03:40:13.950 --> 03:40:13.960 align:start position:0%
video and we're just sampling from the
 

03:40:13.960 --> 03:40:15.469 align:start position:0%
video and we're just sampling from the
model

03:40:15.469 --> 03:40:15.479 align:start position:0%
model
 

03:40:15.479 --> 03:40:18.349 align:start position:0%
model
and<03:40:15.600><c> then</c><03:40:15.920><c> finally</c><03:40:16.319><c> here</c><03:40:16.960><c> um</c><03:40:17.479><c> these</c><03:40:17.600><c> are</c><03:40:18.239><c> if</c>

03:40:18.349 --> 03:40:18.359 align:start position:0%
and then finally here um these are if
 

03:40:18.359 --> 03:40:21.590 align:start position:0%
and then finally here um these are if
we're<03:40:18.600><c> not</c><03:40:19.479><c> after</c><03:40:19.760><c> we</c><03:40:20.000><c> validate</c><03:40:20.760><c> sample</c><03:40:21.399><c> and</c>

03:40:21.590 --> 03:40:21.600 align:start position:0%
we're not after we validate sample and
 

03:40:21.600 --> 03:40:23.590 align:start position:0%
we're not after we validate sample and
evaluate<03:40:21.960><c> hell</c><03:40:22.279><c> swag</c><03:40:22.840><c> we</c><03:40:23.000><c> actually</c><03:40:23.319><c> do</c><03:40:23.439><c> a</c>

03:40:23.590 --> 03:40:23.600 align:start position:0%
evaluate hell swag we actually do a
 

03:40:23.600 --> 03:40:26.269 align:start position:0%
evaluate hell swag we actually do a
training<03:40:24.040><c> step</c><03:40:24.439><c> here</c><03:40:25.199><c> and</c><03:40:25.319><c> so</c><03:40:25.520><c> this</c><03:40:25.600><c> is</c><03:40:25.800><c> one</c>

03:40:26.269 --> 03:40:26.279 align:start position:0%
training step here and so this is one
 

03:40:26.279 --> 03:40:28.429 align:start position:0%
training step here and so this is one
step<03:40:26.560><c> of</c><03:40:27.120><c> uh</c><03:40:27.399><c> training</c><03:40:27.840><c> and</c><03:40:27.960><c> you</c><03:40:28.040><c> should</c><03:40:28.199><c> be</c>

03:40:28.429 --> 03:40:28.439 align:start position:0%
step of uh training and you should be
 

03:40:28.439 --> 03:40:30.189 align:start position:0%
step of uh training and you should be
pretty<03:40:28.680><c> familiar</c><03:40:29.080><c> with</c><03:40:29.479><c> all</c><03:40:29.640><c> of</c><03:40:29.840><c> what</c><03:40:30.040><c> this</c>

03:40:30.189 --> 03:40:30.199 align:start position:0%
pretty familiar with all of what this
 

03:40:30.199 --> 03:40:32.750 align:start position:0%
pretty familiar with all of what this
does<03:40:31.199><c> and</c><03:40:31.359><c> at</c><03:40:31.439><c> the</c><03:40:31.520><c> end</c><03:40:31.760><c> here</c><03:40:31.960><c> once</c><03:40:32.120><c> we</c><03:40:32.279><c> get</c><03:40:32.439><c> our</c>

03:40:32.750 --> 03:40:32.760 align:start position:0%
does and at the end here once we get our
 

03:40:32.760 --> 03:40:35.750 align:start position:0%
does and at the end here once we get our
training<03:40:33.120><c> laws</c><03:40:33.560><c> we</c><03:40:33.720><c> write</c><03:40:33.920><c> it</c><03:40:34.040><c> to</c><03:40:34.160><c> the</c><03:40:34.600><c> file</c><03:40:35.600><c> so</c>

03:40:35.750 --> 03:40:35.760 align:start position:0%
training laws we write it to the file so
 

03:40:35.760 --> 03:40:36.990 align:start position:0%
training laws we write it to the file so
the<03:40:35.880><c> only</c><03:40:36.040><c> thing</c><03:40:36.160><c> that</c><03:40:36.319><c> changed</c><03:40:36.760><c> that</c><03:40:36.840><c> I</c>

03:40:36.990 --> 03:40:37.000 align:start position:0%
the only thing that changed that I
 

03:40:37.000 --> 03:40:38.590 align:start position:0%
the only thing that changed that I
really<03:40:37.199><c> added</c><03:40:37.560><c> is</c><03:40:37.720><c> this</c><03:40:37.880><c> entire</c><03:40:38.160><c> section</c><03:40:38.399><c> for</c>

03:40:38.590 --> 03:40:38.600 align:start position:0%
really added is this entire section for
 

03:40:38.600 --> 03:40:41.429 align:start position:0%
really added is this entire section for
H<03:40:38.920><c> swag</c><03:40:39.239><c> eval</c><03:40:40.239><c> and</c><03:40:40.479><c> the</c><03:40:40.600><c> way</c><03:40:40.800><c> this</c><03:40:40.960><c> works</c><03:40:41.319><c> is</c>

03:40:41.429 --> 03:40:41.439 align:start position:0%
H swag eval and the way this works is
 

03:40:41.439 --> 03:40:43.110 align:start position:0%
H swag eval and the way this works is
I'm<03:40:41.760><c> trying</c><03:40:42.000><c> to</c><03:40:42.160><c> get</c><03:40:42.319><c> all</c><03:40:42.439><c> the</c><03:40:42.560><c> gpus</c><03:40:43.000><c> to</c>

03:40:43.110 --> 03:40:43.120 align:start position:0%
I'm trying to get all the gpus to
 

03:40:43.120 --> 03:40:45.590 align:start position:0%
I'm trying to get all the gpus to
collaborate<03:40:43.600><c> on</c><03:40:43.760><c> the</c><03:40:43.840><c> H</c><03:40:44.239><c> swag</c><03:40:45.040><c> and</c><03:40:45.319><c> so</c><03:40:45.439><c> we're</c>

03:40:45.590 --> 03:40:45.600 align:start position:0%
collaborate on the H swag and so we're
 

03:40:45.600 --> 03:40:48.750 align:start position:0%
collaborate on the H swag and so we're
iterating<03:40:46.000><c> all</c><03:40:46.120><c> the</c><03:40:46.439><c> examples</c><03:40:47.439><c> and</c><03:40:47.640><c> then</c><03:40:48.399><c> each</c>

03:40:48.750 --> 03:40:48.760 align:start position:0%
iterating all the examples and then each
 

03:40:48.760 --> 03:40:52.150 align:start position:0%
iterating all the examples and then each
process<03:40:49.399><c> only</c><03:40:49.960><c> picks</c><03:40:50.399><c> the</c><03:40:50.600><c> examples</c><03:40:51.359><c> that</c>

03:40:52.150 --> 03:40:52.160 align:start position:0%
process only picks the examples that
 

03:40:52.160 --> 03:40:54.550 align:start position:0%
process only picks the examples that
assigned<03:40:52.560><c> to</c><03:40:52.760><c> it</c><03:40:53.399><c> so</c><03:40:53.520><c> we</c><03:40:53.640><c> sort</c><03:40:53.800><c> of</c><03:40:53.960><c> take</c><03:40:54.199><c> I</c><03:40:54.439><c> and</c>

03:40:54.550 --> 03:40:54.560 align:start position:0%
assigned to it so we sort of take I and
 

03:40:54.560 --> 03:40:56.469 align:start position:0%
assigned to it so we sort of take I and
moded<03:40:54.960><c> by</c><03:40:55.080><c> the</c><03:40:55.199><c> world</c><03:40:55.520><c> size</c><03:40:55.800><c> and</c><03:40:55.920><c> we</c><03:40:56.040><c> have</c><03:40:56.160><c> to</c>

03:40:56.469 --> 03:40:56.479 align:start position:0%
moded by the world size and we have to
 

03:40:56.479 --> 03:40:58.630 align:start position:0%
moded by the world size and we have to
make<03:40:56.600><c> it</c><03:40:56.760><c> equal</c><03:40:57.000><c> to</c><03:40:57.239><c> rank</c><03:40:57.680><c> otherwise</c><03:40:58.080><c> we</c>

03:40:58.630 --> 03:40:58.640 align:start position:0%
make it equal to rank otherwise we
 

03:40:58.640 --> 03:41:01.150 align:start position:0%
make it equal to rank otherwise we
continue<03:40:59.640><c> and</c><03:40:59.800><c> then</c><03:41:00.040><c> we</c><03:41:00.199><c> render</c><03:41:00.520><c> an</c><03:41:00.720><c> example</c>

03:41:01.150 --> 03:41:01.160 align:start position:0%
continue and then we render an example
 

03:41:01.160 --> 03:41:04.110 align:start position:0%
continue and then we render an example
put<03:41:01.319><c> it</c><03:41:01.399><c> on</c><03:41:01.520><c> the</c><03:41:01.640><c> GPU</c><03:41:02.640><c> we</c><03:41:02.800><c> get</c><03:41:02.960><c> the</c><03:41:03.080><c> low</c><03:41:03.319><c> jits</c>

03:41:04.110 --> 03:41:04.120 align:start position:0%
put it on the GPU we get the low jits
 

03:41:04.120 --> 03:41:05.710 align:start position:0%
put it on the GPU we get the low jits
then<03:41:04.239><c> I</c><03:41:04.359><c> create</c><03:41:04.640><c> a</c><03:41:04.760><c> helper</c><03:41:05.080><c> function</c><03:41:05.600><c> that</c>

03:41:05.710 --> 03:41:05.720 align:start position:0%
then I create a helper function that
 

03:41:05.720 --> 03:41:07.990 align:start position:0%
then I create a helper function that
helps<03:41:06.000><c> us</c><03:41:06.239><c> basically</c><03:41:06.760><c> predict</c><03:41:07.439><c> the</c><03:41:07.640><c> option</c>

03:41:07.990 --> 03:41:08.000 align:start position:0%
helps us basically predict the option
 

03:41:08.000 --> 03:41:10.670 align:start position:0%
helps us basically predict the option
with<03:41:08.120><c> the</c><03:41:08.239><c> lowest</c><03:41:08.840><c> loss</c><03:41:09.840><c> so</c><03:41:10.040><c> this</c><03:41:10.199><c> comes</c><03:41:10.479><c> here</c>

03:41:10.670 --> 03:41:10.680 align:start position:0%
with the lowest loss so this comes here
 

03:41:10.680 --> 03:41:12.910 align:start position:0%
with the lowest loss so this comes here
the<03:41:10.880><c> prediction</c><03:41:11.880><c> and</c><03:41:12.040><c> then</c><03:41:12.279><c> if</c><03:41:12.399><c> it's</c><03:41:12.560><c> correct</c>

03:41:12.910 --> 03:41:12.920 align:start position:0%
the prediction and then if it's correct
 

03:41:12.920 --> 03:41:15.389 align:start position:0%
the prediction and then if it's correct
we<03:41:13.080><c> sort</c><03:41:13.279><c> of</c><03:41:13.399><c> keep</c><03:41:13.800><c> count</c><03:41:14.800><c> and</c><03:41:14.920><c> then</c><03:41:15.040><c> if</c>

03:41:15.389 --> 03:41:15.399 align:start position:0%
we sort of keep count and then if
 

03:41:15.399 --> 03:41:17.309 align:start position:0%
we sort of keep count and then if
multiple<03:41:15.960><c> processes</c><03:41:16.399><c> were</c><03:41:16.640><c> collaborating</c><03:41:17.160><c> on</c>

03:41:17.309 --> 03:41:17.319 align:start position:0%
multiple processes were collaborating on
 

03:41:17.319 --> 03:41:18.950 align:start position:0%
multiple processes were collaborating on
all<03:41:17.560><c> this</c><03:41:17.960><c> then</c><03:41:18.080><c> we</c><03:41:18.160><c> need</c><03:41:18.279><c> to</c><03:41:18.439><c> synchronize</c>

03:41:18.950 --> 03:41:18.960 align:start position:0%
all this then we need to synchronize
 

03:41:18.960 --> 03:41:21.510 align:start position:0%
all this then we need to synchronize
their<03:41:19.199><c> stats</c><03:41:20.120><c> and</c><03:41:20.239><c> so</c><03:41:20.479><c> the</c><03:41:20.640><c> way</c><03:41:20.960><c> one</c><03:41:21.120><c> way</c><03:41:21.239><c> to</c><03:41:21.359><c> do</c>

03:41:21.510 --> 03:41:21.520 align:start position:0%
their stats and so the way one way to do
 

03:41:21.520 --> 03:41:23.550 align:start position:0%
their stats and so the way one way to do
that<03:41:21.640><c> is</c><03:41:21.760><c> to</c><03:41:21.960><c> package</c><03:41:22.319><c> up</c><03:41:22.560><c> our</c><03:41:22.840><c> statistics</c>

03:41:23.550 --> 03:41:23.560 align:start position:0%
that is to package up our statistics
 

03:41:23.560 --> 03:41:26.710 align:start position:0%
that is to package up our statistics
here<03:41:24.120><c> into</c><03:41:24.840><c> tensors</c><03:41:25.840><c> which</c><03:41:25.960><c> we</c><03:41:26.080><c> can</c><03:41:26.279><c> then</c><03:41:26.439><c> call</c>

03:41:26.710 --> 03:41:26.720 align:start position:0%
here into tensors which we can then call
 

03:41:26.720 --> 03:41:29.070 align:start position:0%
here into tensors which we can then call
this.<03:41:27.159><c> alberon</c><03:41:28.159><c> and</c>

03:41:29.070 --> 03:41:29.080 align:start position:0%
this. alberon and
 

03:41:29.080 --> 03:41:33.110 align:start position:0%
this. alberon and
sum<03:41:30.080><c> and</c><03:41:30.239><c> then</c><03:41:30.520><c> here</c><03:41:30.680><c> we</c><03:41:30.800><c> sort</c><03:41:31.000><c> of</c><03:41:31.680><c> um</c><03:41:32.600><c> unwrap</c>

03:41:33.110 --> 03:41:33.120 align:start position:0%
sum and then here we sort of um unwrap
 

03:41:33.120 --> 03:41:35.070 align:start position:0%
sum and then here we sort of um unwrap
them<03:41:33.239><c> from</c><03:41:33.439><c> tensors</c><03:41:34.040><c> so</c><03:41:34.199><c> that</c><03:41:34.319><c> we</c><03:41:34.479><c> just</c><03:41:34.600><c> have</c>

03:41:35.070 --> 03:41:35.080 align:start position:0%
them from tensors so that we just have
 

03:41:35.080 --> 03:41:37.429 align:start position:0%
them from tensors so that we just have
ins<03:41:36.080><c> and</c><03:41:36.199><c> then</c><03:41:36.399><c> here</c><03:41:36.680><c> the</c><03:41:36.800><c> master</c><03:41:37.159><c> process</c>

03:41:37.429 --> 03:41:37.439 align:start position:0%
ins and then here the master process
 

03:41:37.439 --> 03:41:39.990 align:start position:0%
ins and then here the master process
will<03:41:37.680><c> print</c><03:41:37.960><c> and</c><03:41:38.120><c> log</c><03:41:38.439><c> the</c><03:41:38.560><c> hellis</c><03:41:38.920><c> swag</c>

03:41:39.990 --> 03:41:40.000 align:start position:0%
will print and log the hellis swag
 

03:41:40.000 --> 03:41:41.750 align:start position:0%
will print and log the hellis swag
accuracy

03:41:41.750 --> 03:41:41.760 align:start position:0%
accuracy
 

03:41:41.760 --> 03:41:45.590 align:start position:0%
accuracy
so<03:41:42.760><c> that's</c><03:41:43.600><c> kind</c><03:41:43.720><c> of</c><03:41:43.960><c> the</c><03:41:44.319><c> that's</c><03:41:44.520><c> kind</c><03:41:44.640><c> of</c><03:41:44.800><c> it</c>

03:41:45.590 --> 03:41:45.600 align:start position:0%
so that's kind of the that's kind of it
 

03:41:45.600 --> 03:41:47.269 align:start position:0%
so that's kind of the that's kind of it
and<03:41:45.880><c> that's</c><03:41:46.040><c> what</c><03:41:46.159><c> I'm</c><03:41:46.279><c> running</c><03:41:46.640><c> right</c><03:41:46.840><c> here</c>

03:41:47.269 --> 03:41:47.279 align:start position:0%
and that's what I'm running right here
 

03:41:47.279 --> 03:41:50.590 align:start position:0%
and that's what I'm running right here
so<03:41:47.439><c> you</c><03:41:47.520><c> see</c><03:41:47.760><c> this</c><03:41:47.920><c> optimization</c><03:41:48.760><c> here</c><03:41:49.760><c> and</c><03:41:50.199><c> uh</c>

03:41:50.590 --> 03:41:50.600 align:start position:0%
so you see this optimization here and uh
 

03:41:50.600 --> 03:41:52.750 align:start position:0%
so you see this optimization here and uh
we<03:41:50.800><c> just</c><03:41:51.000><c> had</c><03:41:51.159><c> a</c><03:41:51.399><c> generation</c><03:41:52.399><c> and</c><03:41:52.520><c> this</c><03:41:52.600><c> is</c>

03:41:52.750 --> 03:41:52.760 align:start position:0%
we just had a generation and this is
 

03:41:52.760 --> 03:41:55.550 align:start position:0%
we just had a generation and this is
Step<03:41:52.960><c> 10,000</c><03:41:53.640><c> out</c><03:41:53.760><c> of</c><03:41:54.279><c> about</c><03:41:54.479><c> 20,000</c><03:41:55.159><c> right</c><03:41:55.319><c> so</c>

03:41:55.550 --> 03:41:55.560 align:start position:0%
Step 10,000 out of about 20,000 right so
 

03:41:55.560 --> 03:41:58.070 align:start position:0%
Step 10,000 out of about 20,000 right so
we<03:41:55.680><c> are</c><03:41:56.239><c> halfway</c><03:41:56.680><c> done</c><03:41:57.560><c> and</c><03:41:57.680><c> these</c><03:41:57.800><c> are</c><03:41:57.960><c> the</c>

03:41:58.070 --> 03:41:58.080 align:start position:0%
we are halfway done and these are the
 

03:41:58.080 --> 03:41:59.790 align:start position:0%
we are halfway done and these are the
kinds<03:41:58.239><c> of</c><03:41:58.399><c> samples</c><03:41:58.880><c> that</c><03:41:59.199><c> uh</c><03:41:59.319><c> we</c><03:41:59.399><c> are</c><03:41:59.560><c> getting</c>

03:41:59.790 --> 03:41:59.800 align:start position:0%
kinds of samples that uh we are getting
 

03:41:59.800 --> 03:42:02.630 align:start position:0%
kinds of samples that uh we are getting
at<03:41:59.960><c> this</c><03:42:00.080><c> stage</c><03:42:00.399><c> so</c><03:42:00.560><c> let's</c><03:42:00.720><c> take</c><03:42:00.840><c> a</c><03:42:01.399><c> look</c><03:42:02.399><c> hello</c>

03:42:02.630 --> 03:42:02.640 align:start position:0%
at this stage so let's take a look hello
 

03:42:02.640 --> 03:42:04.710 align:start position:0%
at this stage so let's take a look hello
I'm<03:42:02.720><c> a</c><03:42:02.840><c> language</c><03:42:03.159><c> model</c><03:42:03.960><c> so</c><03:42:04.120><c> I'd</c><03:42:04.279><c> like</c><03:42:04.439><c> to</c><03:42:04.560><c> use</c>

03:42:04.710 --> 03:42:04.720 align:start position:0%
I'm a language model so I'd like to use
 

03:42:04.720 --> 03:42:07.309 align:start position:0%
I'm a language model so I'd like to use
it<03:42:04.920><c> to</c><03:42:05.040><c> generate</c><03:42:05.399><c> some</c><03:42:05.560><c> kinds</c><03:42:05.760><c> of</c><03:42:06.319><c> output</c>

03:42:07.309 --> 03:42:07.319 align:start position:0%
it to generate some kinds of output
 

03:42:07.319 --> 03:42:08.590 align:start position:0%
it to generate some kinds of output
hello<03:42:07.520><c> I'm</c><03:42:07.600><c> a</c><03:42:07.720><c> language</c><03:42:08.000><c> model</c><03:42:08.279><c> and</c><03:42:08.399><c> I'm</c><03:42:08.479><c> a</c>

03:42:08.590 --> 03:42:08.600 align:start position:0%
hello I'm a language model and I'm a
 

03:42:08.600 --> 03:42:10.149 align:start position:0%
hello I'm a language model and I'm a
developer<03:42:09.000><c> for</c><03:42:09.199><c> a</c><03:42:09.279><c> lot</c><03:42:09.439><c> of</c>

03:42:10.149 --> 03:42:10.159 align:start position:0%
developer for a lot of
 

03:42:10.159 --> 03:42:12.950 align:start position:0%
developer for a lot of
companies<03:42:11.159><c> Al</c><03:42:11.560><c> language</c>

03:42:12.950 --> 03:42:12.960 align:start position:0%
companies Al language
 

03:42:12.960 --> 03:42:17.269 align:start position:0%
companies Al language
model<03:42:13.960><c> uh</c><03:42:14.319><c> let's</c><03:42:14.479><c> see</c><03:42:14.600><c> if</c><03:42:14.680><c> I</c><03:42:14.760><c> can</c><03:42:14.880><c> find</c><03:42:15.319><c> fun</c>

03:42:17.269 --> 03:42:17.279 align:start position:0%
model uh let's see if I can find fun
 

03:42:17.279 --> 03:42:28.110 align:start position:0%
model uh let's see if I can find fun
one

03:42:28.110 --> 03:42:28.120 align:start position:0%
 
 

03:42:28.120 --> 03:42:30.389 align:start position:0%
 
um<03:42:29.120><c> I</c><03:42:29.199><c> don't</c><03:42:29.399><c> know</c><03:42:29.600><c> you</c><03:42:29.680><c> can</c><03:42:29.880><c> go</c><03:42:30.040><c> through</c><03:42:30.239><c> this</c>

03:42:30.389 --> 03:42:30.399 align:start position:0%
um I don't know you can go through this
 

03:42:30.399 --> 03:42:32.030 align:start position:0%
um I don't know you can go through this
yourself<03:42:30.880><c> but</c><03:42:31.199><c> certainly</c><03:42:31.560><c> the</c><03:42:31.680><c> predictions</c>

03:42:32.030 --> 03:42:32.040 align:start position:0%
yourself but certainly the predictions
 

03:42:32.040 --> 03:42:34.429 align:start position:0%
yourself but certainly the predictions
are<03:42:32.199><c> getting</c><03:42:32.520><c> less</c><03:42:32.760><c> and</c><03:42:33.000><c> less</c><03:42:33.239><c> random</c><03:42:34.239><c> uh</c><03:42:34.359><c> it</c>

03:42:34.429 --> 03:42:34.439 align:start position:0%
are getting less and less random uh it
 

03:42:34.439 --> 03:42:35.750 align:start position:0%
are getting less and less random uh it
seems<03:42:34.720><c> like</c><03:42:34.880><c> the</c><03:42:34.960><c> model</c><03:42:35.199><c> is</c><03:42:35.319><c> a</c><03:42:35.439><c> little</c><03:42:35.600><c> bit</c>

03:42:35.750 --> 03:42:35.760 align:start position:0%
seems like the model is a little bit
 

03:42:35.760 --> 03:42:38.510 align:start position:0%
seems like the model is a little bit
more<03:42:36.040><c> self-aware</c><03:42:36.600><c> and</c><03:42:36.760><c> using</c><03:42:37.479><c> language</c><03:42:38.359><c> uh</c>

03:42:38.510 --> 03:42:38.520 align:start position:0%
more self-aware and using language uh
 

03:42:38.520 --> 03:42:39.750 align:start position:0%
more self-aware and using language uh
that<03:42:38.640><c> is</c><03:42:38.760><c> a</c><03:42:38.880><c> bit</c>

03:42:39.750 --> 03:42:39.760 align:start position:0%
that is a bit
 

03:42:39.760 --> 03:42:43.229 align:start position:0%
that is a bit
more<03:42:40.760><c> uh</c><03:42:41.040><c> specific</c><03:42:41.439><c> to</c><03:42:41.760><c> it</c><03:42:41.960><c> being</c><03:42:42.279><c> language</c>

03:42:43.229 --> 03:42:43.239 align:start position:0%
more uh specific to it being language
 

03:42:43.239 --> 03:42:45.469 align:start position:0%
more uh specific to it being language
model<03:42:44.239><c> hello</c><03:42:44.479><c> I'm</c><03:42:44.560><c> a</c><03:42:44.640><c> language</c><03:42:44.880><c> model</c><03:42:45.319><c> and</c>

03:42:45.469 --> 03:42:45.479 align:start position:0%
model hello I'm a language model and
 

03:42:45.479 --> 03:42:46.830 align:start position:0%
model hello I'm a language model and
like<03:42:45.680><c> how</c><03:42:45.840><c> the</c><03:42:45.960><c> language</c><03:42:46.319><c> is</c><03:42:46.439><c> used</c><03:42:46.680><c> to</c>

03:42:46.830 --> 03:42:46.840 align:start position:0%
like how the language is used to
 

03:42:46.840 --> 03:42:48.950 align:start position:0%
like how the language is used to
communicate<03:42:47.760><c> I'm</c><03:42:47.840><c> a</c><03:42:48.000><c> language</c><03:42:48.319><c> model</c><03:42:48.680><c> and</c><03:42:48.800><c> I'm</c>

03:42:48.950 --> 03:42:48.960 align:start position:0%
communicate I'm a language model and I'm
 

03:42:48.960 --> 03:42:52.269 align:start position:0%
communicate I'm a language model and I'm
going<03:42:49.120><c> to</c><03:42:49.279><c> be</c><03:42:49.600><c> speaking</c><03:42:50.120><c> English</c><03:42:51.000><c> and</c><03:42:51.279><c> German</c>

03:42:52.269 --> 03:42:52.279 align:start position:0%
going to be speaking English and German
 

03:42:52.279 --> 03:42:53.830 align:start position:0%
going to be speaking English and German
okay<03:42:52.399><c> I</c><03:42:52.479><c> don't</c><03:42:52.640><c> know</c><03:42:53.159><c> so</c><03:42:53.319><c> let's</c><03:42:53.479><c> just</c><03:42:53.640><c> wait</c>

03:42:53.830 --> 03:42:53.840 align:start position:0%
okay I don't know so let's just wait
 

03:42:53.840 --> 03:42:56.229 align:start position:0%
okay I don't know so let's just wait
until<03:42:54.199><c> this</c><03:42:54.520><c> optimization</c><03:42:55.120><c> finishes</c><03:42:55.840><c> and</c><03:42:56.159><c> uh</c>

03:42:56.229 --> 03:42:56.239 align:start position:0%
until this optimization finishes and uh
 

03:42:56.239 --> 03:42:57.910 align:start position:0%
until this optimization finishes and uh
we'll<03:42:56.399><c> see</c><03:42:56.560><c> what</c><03:42:56.680><c> kind</c><03:42:56.800><c> of</c><03:42:56.880><c> samples</c><03:42:57.239><c> we</c><03:42:57.399><c> get</c>

03:42:57.910 --> 03:42:57.920 align:start position:0%
we'll see what kind of samples we get
 

03:42:57.920 --> 03:42:59.830 align:start position:0%
we'll see what kind of samples we get
and<03:42:58.040><c> we're</c><03:42:58.239><c> also</c><03:42:58.439><c> going</c><03:42:58.600><c> to</c><03:42:58.800><c> look</c><03:42:58.960><c> at</c><03:42:59.640><c> the</c>

03:42:59.830 --> 03:42:59.840 align:start position:0%
and we're also going to look at the
 

03:42:59.840 --> 03:43:03.590 align:start position:0%
and we're also going to look at the
train<03:43:00.600><c> Val</c><03:43:01.479><c> and</c><03:43:01.680><c> the</c><03:43:01.840><c> hway</c><03:43:02.399><c> accuracy</c><03:43:03.239><c> and</c><03:43:03.359><c> see</c>

03:43:03.590 --> 03:43:03.600 align:start position:0%
train Val and the hway accuracy and see
 

03:43:03.600 --> 03:43:06.309 align:start position:0%
train Val and the hway accuracy and see
how<03:43:03.720><c> we're</c><03:43:03.880><c> doing</c><03:43:04.080><c> with</c><03:43:04.239><c> respect</c><03:43:04.439><c> to</c>

03:43:06.309 --> 03:43:06.319 align:start position:0%
how we're doing with respect to
 

03:43:06.319 --> 03:43:09.790 align:start position:0%
how we're doing with respect to
gpt2<03:43:07.319><c> okay</c><03:43:07.520><c> good</c><03:43:07.800><c> morning</c><03:43:08.800><c> so</c><03:43:09.239><c> focusing</c><03:43:09.560><c> For</c><03:43:09.680><c> a</c>

03:43:09.790 --> 03:43:09.800 align:start position:0%
gpt2 okay good morning so focusing For a
 

03:43:09.800 --> 03:43:11.229 align:start position:0%
gpt2 okay good morning so focusing For a
Moment<03:43:10.120><c> On</c><03:43:10.239><c> The</c><03:43:10.319><c> jupyter</c><03:43:10.680><c> Notebook</c><03:43:11.040><c> here</c><03:43:11.120><c> on</c>

03:43:11.229 --> 03:43:11.239 align:start position:0%
Moment On The jupyter Notebook here on
 

03:43:11.239 --> 03:43:13.910 align:start position:0%
Moment On The jupyter Notebook here on
the<03:43:11.399><c> right</c><03:43:12.159><c> I</c><03:43:12.279><c> created</c><03:43:12.640><c> a</c><03:43:12.760><c> new</c><03:43:12.960><c> cell</c><03:43:13.800><c> that</c>

03:43:13.910 --> 03:43:13.920 align:start position:0%
the right I created a new cell that
 

03:43:13.920 --> 03:43:15.229 align:start position:0%
the right I created a new cell that
basically<03:43:14.239><c> allows</c><03:43:14.479><c> us</c><03:43:14.560><c> to</c><03:43:14.680><c> visualize</c><03:43:15.000><c> the</c><03:43:15.120><c> the</c>

03:43:15.229 --> 03:43:15.239 align:start position:0%
basically allows us to visualize the the
 

03:43:15.239 --> 03:43:19.469 align:start position:0%
basically allows us to visualize the the
train<03:43:15.560><c> Val</c><03:43:15.880><c> and</c><03:43:16.279><c> Hela</c><03:43:17.279><c> and</c><03:43:17.800><c> um</c><03:43:18.239><c> the</c><03:43:18.359><c> hel</c><03:43:18.680><c> score</c>

03:43:19.469 --> 03:43:19.479 align:start position:0%
train Val and Hela and um the hel score
 

03:43:19.479 --> 03:43:21.189 align:start position:0%
train Val and Hela and um the hel score
and<03:43:19.840><c> you</c><03:43:19.960><c> can</c><03:43:20.120><c> step</c><03:43:20.439><c> through</c><03:43:20.720><c> this</c><03:43:21.040><c> it</c>

03:43:21.189 --> 03:43:21.199 align:start position:0%
and you can step through this it
 

03:43:21.199 --> 03:43:22.950 align:start position:0%
and you can step through this it
basically<03:43:21.520><c> like</c><03:43:21.720><c> parses</c><03:43:22.120><c> the</c><03:43:22.239><c> log</c><03:43:22.560><c> file</c><03:43:22.840><c> that</c>

03:43:22.950 --> 03:43:22.960 align:start position:0%
basically like parses the log file that
 

03:43:22.960 --> 03:43:25.950 align:start position:0%
basically like parses the log file that
we<03:43:23.120><c> are</c><03:43:23.399><c> writing</c><03:43:24.399><c> and</c><03:43:24.800><c> um</c><03:43:25.359><c> a</c><03:43:25.479><c> lot</c><03:43:25.600><c> of</c><03:43:25.720><c> this</c><03:43:25.800><c> is</c>

03:43:25.950 --> 03:43:25.960 align:start position:0%
we are writing and um a lot of this is
 

03:43:25.960 --> 03:43:28.189 align:start position:0%
we are writing and um a lot of this is
just<03:43:26.080><c> like</c><03:43:26.239><c> boring</c><03:43:26.560><c> ma</c><03:43:26.840><c> plot</c><03:43:27.080><c> lip</c><03:43:27.319><c> code</c><03:43:28.000><c> but</c>

03:43:28.189 --> 03:43:28.199 align:start position:0%
just like boring ma plot lip code but
 

03:43:28.199 --> 03:43:30.149 align:start position:0%
just like boring ma plot lip code but
basically<03:43:28.920><c> this</c><03:43:29.040><c> is</c><03:43:29.239><c> what</c><03:43:29.399><c> our</c><03:43:29.600><c> optimization</c>

03:43:30.149 --> 03:43:30.159 align:start position:0%
basically this is what our optimization
 

03:43:30.159 --> 03:43:32.710 align:start position:0%
basically this is what our optimization
looks<03:43:30.680><c> like</c>

03:43:32.710 --> 03:43:32.720 align:start position:0%
looks like
 

03:43:32.720 --> 03:43:38.189 align:start position:0%
looks like
so<03:43:33.720><c> we</c><03:43:33.880><c> ran</c><03:43:34.159><c> for</c>

03:43:38.189 --> 03:43:38.199 align:start position:0%
 
 

03:43:38.199 --> 03:43:41.429 align:start position:0%
 
19,731<03:43:39.199><c> billion</c><03:43:39.520><c> tokens</c><03:43:40.359><c> which</c><03:43:40.520><c> is</c><03:43:40.920><c> whoops</c><03:43:41.319><c> oh</c>

03:43:41.429 --> 03:43:41.439 align:start position:0%
19,731 billion tokens which is whoops oh
 

03:43:41.439 --> 03:43:44.389 align:start position:0%
19,731 billion tokens which is whoops oh
my<03:43:41.640><c> gosh</c><03:43:42.359><c> which</c><03:43:42.479><c> is</c><03:43:42.640><c> one</c><03:43:42.920><c> Epoch</c><03:43:43.520><c> of</c><03:43:43.840><c> the</c><03:43:44.040><c> sample</c>

03:43:44.389 --> 03:43:44.399 align:start position:0%
my gosh which is one Epoch of the sample
 

03:43:44.399 --> 03:43:48.670 align:start position:0%
my gosh which is one Epoch of the sample
10B<03:43:44.760><c> of</c><03:43:45.399><c> webd</c><03:43:46.399><c> on</c><03:43:46.560><c> the</c><03:43:46.720><c> left</c><03:43:47.000><c> we</c><03:43:47.120><c> have</c><03:43:47.279><c> the</c><03:43:47.680><c> loss</c>

03:43:48.670 --> 03:43:48.680 align:start position:0%
10B of webd on the left we have the loss
 

03:43:48.680 --> 03:43:50.630 align:start position:0%
10B of webd on the left we have the loss
and<03:43:49.279><c> the</c><03:43:49.439><c> in</c><03:43:49.640><c> blue</c><03:43:49.920><c> we</c><03:43:50.040><c> have</c><03:43:50.199><c> the</c><03:43:50.279><c> training</c>

03:43:50.630 --> 03:43:50.640 align:start position:0%
and the in blue we have the training
 

03:43:50.640 --> 03:43:52.550 align:start position:0%
and the in blue we have the training
loss<03:43:51.159><c> in</c><03:43:51.359><c> Orange</c><03:43:51.720><c> we</c><03:43:51.840><c> have</c><03:43:51.960><c> the</c><03:43:52.080><c> validation</c>

03:43:52.550 --> 03:43:52.560 align:start position:0%
loss in Orange we have the validation
 

03:43:52.560 --> 03:43:55.710 align:start position:0%
loss in Orange we have the validation
loss<03:43:53.279><c> and</c><03:43:53.560><c> red</c><03:43:54.040><c> as</c><03:43:54.159><c> a</c><03:43:54.560><c> horizontal</c><03:43:55.080><c> line</c><03:43:55.600><c> we</c>

03:43:55.710 --> 03:43:55.720 align:start position:0%
loss and red as a horizontal line we
 

03:43:55.720 --> 03:43:58.750 align:start position:0%
loss and red as a horizontal line we
have<03:43:55.840><c> the</c><03:43:56.000><c> opening</c><03:43:56.319><c> IG</c><03:43:56.479><c> gpt2</c><03:43:57.120><c> 124</c><03:43:57.800><c> M</c><03:43:58.399><c> model</c>

03:43:58.750 --> 03:43:58.760 align:start position:0%
have the opening IG gpt2 124 M model
 

03:43:58.760 --> 03:44:00.750 align:start position:0%
have the opening IG gpt2 124 M model
checkpoint<03:43:59.439><c> when</c><03:43:59.640><c> it's</c><03:43:59.800><c> just</c><03:44:00.040><c> evaluated</c><03:44:00.600><c> on</c>

03:44:00.750 --> 03:44:00.760 align:start position:0%
checkpoint when it's just evaluated on
 

03:44:00.760 --> 03:44:04.149 align:start position:0%
checkpoint when it's just evaluated on
the<03:44:00.880><c> validation</c><03:44:01.399><c> set</c><03:44:01.880><c> of</c><03:44:02.880><c> um</c><03:44:03.439><c> of</c><03:44:03.680><c> this</c><03:44:03.880><c> fine</c>

03:44:04.149 --> 03:44:04.159 align:start position:0%
the validation set of um of this fine
 

03:44:04.159 --> 03:44:06.910 align:start position:0%
the validation set of um of this fine
web<03:44:04.680><c> edu</c><03:44:05.680><c> uh</c><03:44:05.760><c> so</c><03:44:05.880><c> you</c><03:44:05.960><c> can</c><03:44:06.080><c> see</c><03:44:06.279><c> that</c><03:44:06.399><c> we</c><03:44:06.479><c> are</c>

03:44:06.910 --> 03:44:06.920 align:start position:0%
web edu uh so you can see that we are
 

03:44:06.920 --> 03:44:09.309 align:start position:0%
web edu uh so you can see that we are
surpassing<03:44:07.920><c> this</c><03:44:08.120><c> orange</c><03:44:08.479><c> is</c><03:44:08.640><c> below</c><03:44:08.920><c> the</c><03:44:09.080><c> red</c>

03:44:09.309 --> 03:44:09.319 align:start position:0%
surpassing this orange is below the red
 

03:44:09.319 --> 03:44:11.389 align:start position:0%
surpassing this orange is below the red
so<03:44:09.479><c> we're</c><03:44:09.640><c> surpassing</c><03:44:10.120><c> the</c><03:44:10.279><c> validation</c><03:44:10.760><c> set</c>

03:44:11.389 --> 03:44:11.399 align:start position:0%
so we're surpassing the validation set
 

03:44:11.399 --> 03:44:13.590 align:start position:0%
so we're surpassing the validation set
of<03:44:11.560><c> this</c><03:44:11.760><c> data</c><03:44:12.000><c> set</c><03:44:12.720><c> and</c><03:44:12.880><c> like</c><03:44:13.000><c> I</c><03:44:13.120><c> mentioned</c>

03:44:13.590 --> 03:44:13.600 align:start position:0%
of this data set and like I mentioned
 

03:44:13.600 --> 03:44:15.110 align:start position:0%
of this data set and like I mentioned
the<03:44:13.920><c> data</c><03:44:14.159><c> set</c><03:44:14.319><c> distribution</c><03:44:14.720><c> is</c><03:44:14.800><c> very</c>

03:44:15.110 --> 03:44:15.120 align:start position:0%
the data set distribution is very
 

03:44:15.120 --> 03:44:16.950 align:start position:0%
the data set distribution is very
different<03:44:15.359><c> from</c><03:44:15.479><c> what</c><03:44:15.600><c> gpt2</c><03:44:16.080><c> trained</c><03:44:16.359><c> on</c><03:44:16.800><c> so</c>

03:44:16.950 --> 03:44:16.960 align:start position:0%
different from what gpt2 trained on so
 

03:44:16.960 --> 03:44:19.070 align:start position:0%
different from what gpt2 trained on so
this<03:44:17.040><c> is</c><03:44:17.199><c> not</c><03:44:17.359><c> an</c><03:44:17.640><c> exactly</c><03:44:18.000><c> fair</c><03:44:18.279><c> comparison</c>

03:44:19.070 --> 03:44:19.080 align:start position:0%
this is not an exactly fair comparison
 

03:44:19.080 --> 03:44:22.429 align:start position:0%
this is not an exactly fair comparison
but<03:44:19.199><c> it's</c><03:44:19.279><c> a</c><03:44:19.399><c> good</c><03:44:19.680><c> cross</c><03:44:20.040><c> check</c><03:44:20.920><c> uh</c><03:44:21.199><c> to</c><03:44:22.199><c> uh</c><03:44:22.279><c> to</c>

03:44:22.429 --> 03:44:22.439 align:start position:0%
but it's a good cross check uh to uh to
 

03:44:22.439 --> 03:44:24.990 align:start position:0%
but it's a good cross check uh to uh to
look<03:44:22.640><c> at</c><03:44:23.520><c> now</c><03:44:23.800><c> we</c><03:44:23.920><c> would</c><03:44:24.239><c> ideally</c><03:44:24.680><c> like</c>

03:44:24.990 --> 03:44:25.000 align:start position:0%
look at now we would ideally like
 

03:44:25.000 --> 03:44:27.630 align:start position:0%
look at now we would ideally like
something<03:44:25.439><c> that</c><03:44:25.640><c> is</c><03:44:26.199><c> withheld</c><03:44:27.199><c> and</c>

03:44:27.630 --> 03:44:27.640 align:start position:0%
something that is withheld and
 

03:44:27.640 --> 03:44:30.429 align:start position:0%
something that is withheld and
comparable<03:44:28.199><c> and</c><03:44:28.359><c> somewhat</c><03:44:29.040><c> standard</c><03:44:30.040><c> um</c><03:44:30.319><c> and</c>

03:44:30.429 --> 03:44:30.439 align:start position:0%
comparable and somewhat standard um and
 

03:44:30.439 --> 03:44:33.309 align:start position:0%
comparable and somewhat standard um and
so<03:44:30.680><c> for</c><03:44:30.840><c> us</c><03:44:31.120><c> that</c><03:44:31.279><c> is</c><03:44:31.399><c> helis</c><03:44:31.800><c> swag</c><03:44:32.479><c> and</c><03:44:32.600><c> so</c><03:44:32.880><c> on</c>

03:44:33.309 --> 03:44:33.319 align:start position:0%
so for us that is helis swag and so on
 

03:44:33.319 --> 03:44:35.229 align:start position:0%
so for us that is helis swag and so on
here<03:44:33.640><c> we</c><03:44:33.720><c> see</c><03:44:33.960><c> the</c><03:44:34.080><c> H</c><03:44:34.399><c> swag</c><03:44:34.640><c> progress</c><03:44:34.920><c> we</c><03:44:35.080><c> made</c>

03:44:35.229 --> 03:44:35.239 align:start position:0%
here we see the H swag progress we made
 

03:44:35.239 --> 03:44:39.070 align:start position:0%
here we see the H swag progress we made
from<03:44:35.760><c> 25%</c><03:44:36.760><c> all</c><03:44:36.920><c> the</c><03:44:37.040><c> way</c><03:44:37.279><c> here</c><03:44:38.239><c> in</c><03:44:38.479><c> red</c><03:44:38.720><c> we</c><03:44:38.840><c> see</c>

03:44:39.070 --> 03:44:39.080 align:start position:0%
from 25% all the way here in red we see
 

03:44:39.080 --> 03:44:44.149 align:start position:0%
from 25% all the way here in red we see
the<03:44:39.159><c> open</c><03:44:39.560><c> gpt2</c><03:44:40.359><c> 124</c><03:44:41.199><c> M</c><03:44:41.680><c> model</c><03:44:42.560><c> in</c><03:44:43.040><c> red</c><03:44:43.880><c> so</c><03:44:44.040><c> it</c>

03:44:44.149 --> 03:44:44.159 align:start position:0%
the open gpt2 124 M model in red so it
 

03:44:44.159 --> 03:44:47.030 align:start position:0%
the open gpt2 124 M model in red so it
achieves<03:44:44.520><c> this</c><03:44:44.680><c> h</c><03:44:45.080><c> bag</c><03:44:45.319><c> here</c><03:44:46.120><c> and</c><03:44:46.640><c> the</c><03:44:46.920><c> the</c>

03:44:47.030 --> 03:44:47.040 align:start position:0%
achieves this h bag here and the the
 

03:44:47.040 --> 03:44:50.229 align:start position:0%
achieves this h bag here and the the
gpt3<03:44:47.720><c> model</c><03:44:48.439><c> 124</c><03:44:49.080><c> M</c><03:44:49.520><c> which</c><03:44:49.640><c> was</c><03:44:49.760><c> trained</c><03:44:50.080><c> on</c>

03:44:50.229 --> 03:44:50.239 align:start position:0%
gpt3 model 124 M which was trained on
 

03:44:50.239 --> 03:44:54.510 align:start position:0%
gpt3 model 124 M which was trained on
300<03:44:50.800><c> billion</c><03:44:51.199><c> tokens</c><03:44:52.080><c> achieves</c><03:44:53.040><c> green</c><03:44:54.040><c> so</c>

03:44:54.510 --> 03:44:54.520 align:start position:0%
300 billion tokens achieves green so
 

03:44:54.520 --> 03:44:56.429 align:start position:0%
300 billion tokens achieves green so
that's<03:44:54.720><c> over</c><03:44:54.960><c> here</c><03:44:55.640><c> so</c><03:44:55.760><c> you</c><03:44:55.880><c> see</c><03:44:56.080><c> that</c><03:44:56.199><c> we</c>

03:44:56.429 --> 03:44:56.439 align:start position:0%
that's over here so you see that we
 

03:44:56.439 --> 03:45:00.149 align:start position:0%
that's over here so you see that we
basically<03:44:56.760><c> surpassed</c><03:44:57.439><c> the</c><03:44:57.720><c> gbt2</c><03:44:58.600><c> 24m</c><03:44:59.600><c> uh</c>

03:45:00.149 --> 03:45:00.159 align:start position:0%
basically surpassed the gbt2 24m uh
 

03:45:00.159 --> 03:45:03.750 align:start position:0%
basically surpassed the gbt2 24m uh
model<03:45:01.159><c> right</c><03:45:01.359><c> here</c><03:45:02.359><c> uh</c><03:45:02.520><c> which</c><03:45:02.680><c> is</c><03:45:03.120><c> uh</c><03:45:03.279><c> really</c>

03:45:03.750 --> 03:45:03.760 align:start position:0%
model right here uh which is uh really
 

03:45:03.760 --> 03:45:07.030 align:start position:0%
model right here uh which is uh really
nice<03:45:04.840><c> now</c><03:45:05.840><c> interestingly</c><03:45:06.439><c> we</c><03:45:06.520><c> were</c><03:45:06.680><c> able</c><03:45:06.880><c> to</c>

03:45:07.030 --> 03:45:07.040 align:start position:0%
nice now interestingly we were able to
 

03:45:07.040 --> 03:45:08.750 align:start position:0%
nice now interestingly we were able to
do<03:45:07.199><c> so</c><03:45:07.439><c> with</c><03:45:07.600><c> only</c><03:45:07.800><c> training</c><03:45:08.120><c> on</c><03:45:08.279><c> 10</c><03:45:08.479><c> billion</c>

03:45:08.750 --> 03:45:08.760 align:start position:0%
do so with only training on 10 billion
 

03:45:08.760 --> 03:45:11.590 align:start position:0%
do so with only training on 10 billion
tokens<03:45:09.479><c> while</c><03:45:09.680><c> gpt2</c><03:45:10.439><c> was</c><03:45:10.640><c> trained</c><03:45:11.040><c> on</c><03:45:11.319><c> 100</c>

03:45:11.590 --> 03:45:11.600 align:start position:0%
tokens while gpt2 was trained on 100
 

03:45:11.600 --> 03:45:14.590 align:start position:0%
tokens while gpt2 was trained on 100
billion<03:45:12.199><c> tokens</c><03:45:13.199><c> so</c><03:45:13.800><c> uh</c><03:45:13.880><c> for</c><03:45:14.080><c> some</c><03:45:14.279><c> reason</c><03:45:14.520><c> we</c>

03:45:14.590 --> 03:45:14.600 align:start position:0%
billion tokens so uh for some reason we
 

03:45:14.600 --> 03:45:16.309 align:start position:0%
billion tokens so uh for some reason we
were<03:45:14.760><c> able</c><03:45:15.080><c> to</c><03:45:15.159><c> get</c><03:45:15.279><c> away</c><03:45:15.520><c> with</c><03:45:15.720><c> significantly</c>

03:45:16.309 --> 03:45:16.319 align:start position:0%
were able to get away with significantly
 

03:45:16.319 --> 03:45:18.469 align:start position:0%
were able to get away with significantly
fewer<03:45:16.640><c> tokens</c><03:45:16.920><c> for</c><03:45:17.080><c> training</c><03:45:17.920><c> there</c><03:45:18.000><c> are</c><03:45:18.159><c> many</c>

03:45:18.469 --> 03:45:18.479 align:start position:0%
fewer tokens for training there are many
 

03:45:18.479 --> 03:45:21.269 align:start position:0%
fewer tokens for training there are many
possibilities<03:45:19.199><c> to</c><03:45:19.439><c> as</c><03:45:19.600><c> to</c><03:45:20.000><c> why</c><03:45:20.359><c> we</c><03:45:20.520><c> could</c>

03:45:21.269 --> 03:45:21.279 align:start position:0%
possibilities to as to why we could
 

03:45:21.279 --> 03:45:24.510 align:start position:0%
possibilities to as to why we could
match<03:45:21.520><c> or</c><03:45:21.720><c> surpass</c><03:45:22.319><c> this</c><03:45:22.800><c> accuracy</c><03:45:23.800><c> um</c><03:45:24.359><c> with</c>

03:45:24.510 --> 03:45:24.520 align:start position:0%
match or surpass this accuracy um with
 

03:45:24.520 --> 03:45:27.630 align:start position:0%
match or surpass this accuracy um with
only<03:45:24.720><c> 10</c><03:45:24.920><c> million</c><03:45:25.199><c> training</c><03:45:25.840><c> so</c><03:45:26.080><c> number</c><03:45:26.640><c> one</c>

03:45:27.630 --> 03:45:27.640 align:start position:0%
only 10 million training so number one
 

03:45:27.640 --> 03:45:30.189 align:start position:0%
only 10 million training so number one
um<03:45:27.960><c> it</c><03:45:28.080><c> could</c><03:45:28.199><c> be</c><03:45:28.359><c> that</c><03:45:28.479><c> opening</c><03:45:28.960><c> gbt2</c><03:45:29.960><c> was</c>

03:45:30.189 --> 03:45:30.199 align:start position:0%
um it could be that opening gbt2 was
 

03:45:30.199 --> 03:45:32.149 align:start position:0%
um it could be that opening gbt2 was
trained<03:45:30.680><c> on</c><03:45:31.080><c> a</c><03:45:31.239><c> much</c><03:45:31.520><c> wider</c><03:45:31.880><c> data</c>

03:45:32.149 --> 03:45:32.159 align:start position:0%
trained on a much wider data
 

03:45:32.159 --> 03:45:34.149 align:start position:0%
trained on a much wider data
distribution<03:45:32.920><c> so</c><03:45:33.080><c> in</c><03:45:33.239><c> particular</c><03:45:33.680><c> fine</c><03:45:34.000><c> web</c>

03:45:34.149 --> 03:45:34.159 align:start position:0%
distribution so in particular fine web
 

03:45:34.159 --> 03:45:38.229 align:start position:0%
distribution so in particular fine web
edu<03:45:35.080><c> is</c><03:45:35.279><c> all</c><03:45:35.720><c> English</c><03:45:36.520><c> it's</c><03:45:36.680><c> not</c><03:45:37.239><c> multilingual</c>

03:45:38.229 --> 03:45:38.239 align:start position:0%
edu is all English it's not multilingual
 

03:45:38.239 --> 03:45:40.830 align:start position:0%
edu is all English it's not multilingual
and<03:45:38.479><c> there's</c><03:45:38.680><c> not</c><03:45:38.880><c> that</c><03:45:39.080><c> much</c><03:45:39.319><c> math</c><03:45:39.520><c> and</c><03:45:39.840><c> code</c>

03:45:40.830 --> 03:45:40.840 align:start position:0%
and there's not that much math and code
 

03:45:40.840 --> 03:45:43.830 align:start position:0%
and there's not that much math and code
um<03:45:41.439><c> and</c><03:45:41.560><c> so</c><03:45:41.880><c> math</c><03:45:42.199><c> and</c><03:45:42.439><c> code</c><03:45:42.720><c> and</c><03:45:42.920><c> multilingual</c>

03:45:43.830 --> 03:45:43.840 align:start position:0%
um and so math and code and multilingual
 

03:45:43.840 --> 03:45:45.790 align:start position:0%
um and so math and code and multilingual
could<03:45:43.960><c> have</c><03:45:44.120><c> been</c><03:45:44.239><c> stealing</c><03:45:45.000><c> capacity</c><03:45:45.600><c> from</c>

03:45:45.790 --> 03:45:45.800 align:start position:0%
could have been stealing capacity from
 

03:45:45.800 --> 03:45:50.030 align:start position:0%
could have been stealing capacity from
the<03:45:45.960><c> original</c><03:45:46.720><c> gpt2</c><03:45:47.439><c> model</c><03:45:48.279><c> and</c><03:45:48.920><c> um</c><03:45:49.479><c> basically</c>

03:45:50.030 --> 03:45:50.040 align:start position:0%
the original gpt2 model and um basically
 

03:45:50.040 --> 03:45:52.790 align:start position:0%
the original gpt2 model and um basically
that<03:45:50.199><c> could</c><03:45:50.359><c> be</c><03:45:50.800><c> partially</c><03:45:51.600><c> the</c><03:45:51.760><c> reason</c><03:45:52.239><c> why</c>

03:45:52.790 --> 03:45:52.800 align:start position:0%
that could be partially the reason why
 

03:45:52.800 --> 03:45:54.670 align:start position:0%
that could be partially the reason why
uh<03:45:52.960><c> this</c><03:45:53.040><c> is</c><03:45:53.159><c> not</c><03:45:53.319><c> working</c><03:45:53.600><c> out</c><03:45:54.239><c> there's</c><03:45:54.439><c> many</c>

03:45:54.670 --> 03:45:54.680 align:start position:0%
uh this is not working out there's many
 

03:45:54.680 --> 03:45:57.030 align:start position:0%
uh this is not working out there's many
other<03:45:54.880><c> reasons</c><03:45:55.600><c> um</c><03:45:56.080><c> so</c><03:45:56.239><c> for</c><03:45:56.359><c> example</c><03:45:56.640><c> the</c><03:45:56.720><c> H</c>

03:45:57.030 --> 03:45:57.040 align:start position:0%
other reasons um so for example the H
 

03:45:57.040 --> 03:45:59.309 align:start position:0%
other reasons um so for example the H
swag<03:45:57.239><c> eval</c><03:45:57.560><c> is</c><03:45:57.720><c> fairly</c><03:45:58.040><c> old</c><03:45:58.560><c> uh</c><03:45:58.720><c> maybe</c><03:45:58.960><c> 5</c><03:45:59.159><c> years</c>

03:45:59.309 --> 03:45:59.319 align:start position:0%
swag eval is fairly old uh maybe 5 years
 

03:45:59.319 --> 03:46:02.429 align:start position:0%
swag eval is fairly old uh maybe 5 years
or<03:45:59.479><c> so</c><03:46:00.040><c> it</c><03:46:00.159><c> is</c><03:46:00.399><c> possible</c><03:46:00.800><c> that</c><03:46:01.560><c> aspects</c><03:46:01.920><c> of</c><03:46:02.080><c> H</c>

03:46:02.429 --> 03:46:02.439 align:start position:0%
or so it is possible that aspects of H
 

03:46:02.439 --> 03:46:04.590 align:start position:0%
or so it is possible that aspects of H
swag<03:46:02.680><c> in</c><03:46:02.840><c> some</c><03:46:03.080><c> way</c><03:46:03.279><c> or</c><03:46:03.479><c> even</c><03:46:03.720><c> identically</c>

03:46:04.590 --> 03:46:04.600 align:start position:0%
swag in some way or even identically
 

03:46:04.600 --> 03:46:07.309 align:start position:0%
swag in some way or even identically
have<03:46:04.800><c> made</c><03:46:04.960><c> it</c><03:46:05.120><c> into</c><03:46:05.319><c> the</c><03:46:05.479><c> training</c><03:46:05.840><c> Set</c><03:46:06.720><c> uh</c><03:46:07.159><c> of</c>

03:46:07.309 --> 03:46:07.319 align:start position:0%
have made it into the training Set uh of
 

03:46:07.319 --> 03:46:10.110 align:start position:0%
have made it into the training Set uh of
fine<03:46:07.640><c> web</c><03:46:08.239><c> we</c><03:46:08.359><c> don't</c><03:46:08.560><c> know</c><03:46:08.960><c> for</c><03:46:09.120><c> sure</c><03:46:09.840><c> but</c><03:46:10.000><c> if</c>

03:46:10.110 --> 03:46:10.120 align:start position:0%
fine web we don't know for sure but if
 

03:46:10.120 --> 03:46:11.429 align:start position:0%
fine web we don't know for sure but if
that<03:46:10.239><c> was</c><03:46:10.439><c> the</c><03:46:10.560><c> case</c><03:46:10.800><c> then</c><03:46:10.920><c> we</c><03:46:11.040><c> are</c><03:46:11.159><c> basically</c>

03:46:11.429 --> 03:46:11.439 align:start position:0%
that was the case then we are basically
 

03:46:11.439 --> 03:46:12.670 align:start position:0%
that was the case then we are basically
looking<03:46:11.600><c> at</c><03:46:11.720><c> the</c><03:46:11.840><c> training</c><03:46:12.159><c> curve</c><03:46:12.359><c> instead</c><03:46:12.600><c> of</c>

03:46:12.670 --> 03:46:12.680 align:start position:0%
looking at the training curve instead of
 

03:46:12.680 --> 03:46:15.030 align:start position:0%
looking at the training curve instead of
the<03:46:12.800><c> validation</c><03:46:13.239><c> curve</c><03:46:14.159><c> so</c><03:46:14.359><c> long</c><03:46:14.479><c> story</c><03:46:14.680><c> short</c>

03:46:15.030 --> 03:46:15.040 align:start position:0%
the validation curve so long story short
 

03:46:15.040 --> 03:46:16.630 align:start position:0%
the validation curve so long story short
this<03:46:15.120><c> is</c><03:46:15.239><c> not</c><03:46:15.359><c> a</c><03:46:15.640><c> perfect</c><03:46:15.960><c> eval</c><03:46:16.359><c> and</c><03:46:16.479><c> there's</c>

03:46:16.630 --> 03:46:16.640 align:start position:0%
this is not a perfect eval and there's
 

03:46:16.640 --> 03:46:18.990 align:start position:0%
this is not a perfect eval and there's
some<03:46:16.800><c> caveats</c><03:46:17.359><c> here</c><03:46:18.080><c> uh</c><03:46:18.239><c> but</c><03:46:18.399><c> at</c><03:46:18.560><c> least</c><03:46:18.880><c> we</c>

03:46:18.990 --> 03:46:19.000 align:start position:0%
some caveats here uh but at least we
 

03:46:19.000 --> 03:46:20.750 align:start position:0%
some caveats here uh but at least we
have<03:46:19.199><c> some</c><03:46:19.560><c> confidence</c><03:46:20.080><c> that</c><03:46:20.399><c> that</c><03:46:20.520><c> we're</c><03:46:20.640><c> not</c>

03:46:20.750 --> 03:46:20.760 align:start position:0%
have some confidence that that we're not
 

03:46:20.760 --> 03:46:23.590 align:start position:0%
have some confidence that that we're not
doing<03:46:21.000><c> something</c><03:46:21.239><c> completely</c><03:46:21.720><c> wrong</c><03:46:22.560><c> and</c>

03:46:23.590 --> 03:46:23.600 align:start position:0%
doing something completely wrong and
 

03:46:23.600 --> 03:46:26.510 align:start position:0%
doing something completely wrong and
um<03:46:24.600><c> and</c><03:46:24.960><c> uh</c><03:46:25.120><c> it's</c><03:46:25.359><c> probably</c><03:46:25.720><c> the</c><03:46:25.840><c> case</c><03:46:26.159><c> that</c>

03:46:26.510 --> 03:46:26.520 align:start position:0%
um and uh it's probably the case that
 

03:46:26.520 --> 03:46:27.710 align:start position:0%
um and uh it's probably the case that
when<03:46:26.680><c> people</c><03:46:26.880><c> try</c><03:46:27.040><c> to</c><03:46:27.159><c> create</c><03:46:27.399><c> these</c><03:46:27.520><c> data</c>

03:46:27.710 --> 03:46:27.720 align:start position:0%
when people try to create these data
 

03:46:27.720 --> 03:46:29.349 align:start position:0%
when people try to create these data
sets<03:46:27.960><c> they</c><03:46:28.080><c> try</c><03:46:28.199><c> to</c><03:46:28.359><c> make</c><03:46:28.479><c> sure</c><03:46:28.760><c> that</c><03:46:29.040><c> test</c>

03:46:29.349 --> 03:46:29.359 align:start position:0%
sets they try to make sure that test
 

03:46:29.359 --> 03:46:31.590 align:start position:0%
sets they try to make sure that test
sets<03:46:29.880><c> that</c><03:46:30.000><c> are</c><03:46:30.159><c> very</c><03:46:30.399><c> common</c><03:46:31.000><c> are</c><03:46:31.199><c> not</c><03:46:31.479><c> part</c>

03:46:31.590 --> 03:46:31.600 align:start position:0%
sets that are very common are not part
 

03:46:31.600 --> 03:46:33.710 align:start position:0%
sets that are very common are not part
of<03:46:31.720><c> the</c><03:46:31.840><c> training</c><03:46:32.159><c> set</c><03:46:32.800><c> for</c><03:46:33.000><c> example</c><03:46:33.479><c> uh</c><03:46:33.600><c> when</c>

03:46:33.710 --> 03:46:33.720 align:start position:0%
of the training set for example uh when
 

03:46:33.720 --> 03:46:35.630 align:start position:0%
of the training set for example uh when
hugging<03:46:34.040><c> face</c><03:46:34.279><c> created</c><03:46:34.560><c> the</c><03:46:34.680><c> fine</c><03:46:34.880><c> web</c><03:46:35.040><c> BDU</c>

03:46:35.630 --> 03:46:35.640 align:start position:0%
hugging face created the fine web BDU
 

03:46:35.640 --> 03:46:37.710 align:start position:0%
hugging face created the fine web BDU
they<03:46:35.760><c> use</c><03:46:35.960><c> H</c><03:46:36.319><c> swag</c><03:46:36.479><c> as</c><03:46:36.560><c> an</c><03:46:36.720><c> eval</c><03:46:37.319><c> so</c><03:46:37.479><c> I</c><03:46:37.560><c> would</c>

03:46:37.710 --> 03:46:37.720 align:start position:0%
they use H swag as an eval so I would
 

03:46:37.720 --> 03:46:39.750 align:start position:0%
they use H swag as an eval so I would
hope<03:46:38.000><c> that</c><03:46:38.359><c> they</c><03:46:38.479><c> make</c><03:46:38.640><c> sure</c><03:46:39.120><c> that</c><03:46:39.359><c> they</c><03:46:39.520><c> D</c>

03:46:39.750 --> 03:46:39.760 align:start position:0%
hope that they make sure that they D
 

03:46:39.760 --> 03:46:41.550 align:start position:0%
hope that they make sure that they D
duplicate<03:46:40.199><c> and</c><03:46:40.319><c> that</c><03:46:40.439><c> there's</c><03:46:40.600><c> no</c><03:46:40.920><c> hella</c><03:46:41.239><c> swag</c>

03:46:41.550 --> 03:46:41.560 align:start position:0%
duplicate and that there's no hella swag
 

03:46:41.560 --> 03:46:44.990 align:start position:0%
duplicate and that there's no hella swag
in<03:46:41.640><c> the</c><03:46:41.760><c> training</c><03:46:42.040><c> set</c><03:46:42.840><c> but</c><03:46:43.080><c> we</c><03:46:43.199><c> can't</c><03:46:43.399><c> be</c><03:46:43.560><c> sure</c>

03:46:44.990 --> 03:46:45.000 align:start position:0%
in the training set but we can't be sure
 

03:46:45.000 --> 03:46:46.269 align:start position:0%
in the training set but we can't be sure
uh<03:46:45.159><c> the</c><03:46:45.239><c> other</c><03:46:45.399><c> thing</c><03:46:45.520><c> I</c><03:46:45.640><c> wanted</c><03:46:45.840><c> to</c><03:46:45.960><c> address</c>

03:46:46.269 --> 03:46:46.279 align:start position:0%
uh the other thing I wanted to address
 

03:46:46.279 --> 03:46:48.429 align:start position:0%
uh the other thing I wanted to address
briefly<03:46:46.640><c> is</c><03:46:47.199><c> look</c><03:46:47.319><c> at</c><03:46:47.479><c> this</c><03:46:47.600><c> loss</c><03:46:47.920><c> curve</c><03:46:48.319><c> this</c>

03:46:48.429 --> 03:46:48.439 align:start position:0%
briefly is look at this loss curve this
 

03:46:48.439 --> 03:46:50.389 align:start position:0%
briefly is look at this loss curve this
looks<03:46:48.680><c> really</c><03:46:49.239><c> this</c><03:46:49.359><c> looks</c><03:46:49.840><c> really</c><03:46:50.040><c> wrong</c>

03:46:50.389 --> 03:46:50.399 align:start position:0%
looks really this looks really wrong
 

03:46:50.399 --> 03:46:52.429 align:start position:0%
looks really this looks really wrong
here<03:46:51.040><c> I</c><03:46:51.159><c> don't</c><03:46:51.359><c> actually</c><03:46:51.520><c> know</c><03:46:51.840><c> 100%</c><03:46:52.319><c> what</c>

03:46:52.429 --> 03:46:52.439 align:start position:0%
here I don't actually know 100% what
 

03:46:52.439 --> 03:46:55.269 align:start position:0%
here I don't actually know 100% what
this<03:46:52.600><c> is</c><03:46:53.120><c> and</c><03:46:53.279><c> I</c><03:46:53.439><c> suspect</c><03:46:53.840><c> it's</c><03:46:54.120><c> because</c><03:46:54.560><c> the</c>

03:46:55.269 --> 03:46:55.279 align:start position:0%
this is and I suspect it's because the
 

03:46:55.279 --> 03:46:58.309 align:start position:0%
this is and I suspect it's because the
uh<03:46:55.439><c> 10</c><03:46:55.720><c> billion</c><03:46:56.080><c> sample</c><03:46:56.439><c> of</c><03:46:56.560><c> fine</c><03:46:56.840><c> web</c><03:46:57.120><c> edu</c><03:46:58.120><c> was</c>

03:46:58.309 --> 03:46:58.319 align:start position:0%
uh 10 billion sample of fine web edu was
 

03:46:58.319 --> 03:47:01.950 align:start position:0%
uh 10 billion sample of fine web edu was
not<03:46:58.600><c> properly</c><03:46:59.600><c> shuffled</c><03:47:00.600><c> um</c><03:47:01.359><c> and</c><03:47:01.720><c> there's</c>

03:47:01.950 --> 03:47:01.960 align:start position:0%
not properly shuffled um and there's
 

03:47:01.960 --> 03:47:04.630 align:start position:0%
not properly shuffled um and there's
some<03:47:02.279><c> issue</c><03:47:02.720><c> here</c><03:47:03.479><c> uh</c><03:47:03.640><c> with</c><03:47:03.800><c> the</c><03:47:03.960><c> data</c><03:47:04.439><c> that</c><03:47:04.560><c> I</c>

03:47:04.630 --> 03:47:04.640 align:start position:0%
some issue here uh with the data that I
 

03:47:04.640 --> 03:47:06.070 align:start position:0%
some issue here uh with the data that I
don't<03:47:04.800><c> fully</c><03:47:05.319><c> understand</c><03:47:05.520><c> yet</c><03:47:05.840><c> and</c><03:47:05.960><c> there's</c>

03:47:06.070 --> 03:47:06.080 align:start position:0%
don't fully understand yet and there's
 

03:47:06.080 --> 03:47:08.670 align:start position:0%
don't fully understand yet and there's
some<03:47:06.239><c> weird</c><03:47:06.560><c> periodicity</c><03:47:07.279><c> to</c><03:47:07.439><c> it</c><03:47:08.319><c> um</c><03:47:08.560><c> and</c>

03:47:08.670 --> 03:47:08.680 align:start position:0%
some weird periodicity to it um and
 

03:47:08.680 --> 03:47:10.630 align:start position:0%
some weird periodicity to it um and
because<03:47:09.040><c> we</c><03:47:09.120><c> are</c><03:47:09.399><c> in</c><03:47:09.479><c> a</c><03:47:09.680><c> very</c><03:47:09.920><c> lazy</c><03:47:10.279><c> way</c><03:47:10.439><c> sort</c>

03:47:10.630 --> 03:47:10.640 align:start position:0%
because we are in a very lazy way sort
 

03:47:10.640 --> 03:47:12.229 align:start position:0%
because we are in a very lazy way sort
of<03:47:10.800><c> serializing</c><03:47:11.399><c> all</c><03:47:11.520><c> the</c><03:47:11.640><c> tokens</c><03:47:11.960><c> and</c><03:47:12.080><c> just</c>

03:47:12.229 --> 03:47:12.239 align:start position:0%
of serializing all the tokens and just
 

03:47:12.239 --> 03:47:13.990 align:start position:0%
of serializing all the tokens and just
iterating<03:47:12.680><c> all</c><03:47:12.840><c> them</c><03:47:13.040><c> from</c><03:47:13.239><c> scratch</c><03:47:13.800><c> without</c>

03:47:13.990 --> 03:47:14.000 align:start position:0%
iterating all them from scratch without
 

03:47:14.000 --> 03:47:16.189 align:start position:0%
iterating all them from scratch without
doing<03:47:14.239><c> any</c><03:47:14.399><c> permutation</c><03:47:15.279><c> or</c><03:47:15.479><c> any</c><03:47:15.760><c> random</c>

03:47:16.189 --> 03:47:16.199 align:start position:0%
doing any permutation or any random
 

03:47:16.199 --> 03:47:18.429 align:start position:0%
doing any permutation or any random
sampling<03:47:17.000><c> ourselves</c><03:47:18.000><c> I</c><03:47:18.080><c> think</c><03:47:18.239><c> we're</c>

03:47:18.429 --> 03:47:18.439 align:start position:0%
sampling ourselves I think we're
 

03:47:18.439 --> 03:47:21.189 align:start position:0%
sampling ourselves I think we're
inheriting<03:47:18.920><c> some</c><03:47:19.040><c> of</c><03:47:19.239><c> the</c><03:47:19.840><c> ordering</c><03:47:20.840><c> that</c>

03:47:21.189 --> 03:47:21.199 align:start position:0%
inheriting some of the ordering that
 

03:47:21.199 --> 03:47:24.349 align:start position:0%
inheriting some of the ordering that
they<03:47:21.319><c> have</c><03:47:21.439><c> in</c><03:47:21.520><c> the</c><03:47:21.640><c> data</c><03:47:21.960><c> set</c><03:47:23.000><c> so</c><03:47:24.000><c> uh</c><03:47:24.120><c> this</c><03:47:24.239><c> is</c>

03:47:24.349 --> 03:47:24.359 align:start position:0%
they have in the data set so uh this is
 

03:47:24.359 --> 03:47:26.790 align:start position:0%
they have in the data set so uh this is
not<03:47:24.600><c> ideal</c><03:47:25.600><c> but</c><03:47:25.760><c> hopefully</c><03:47:26.159><c> by</c><03:47:26.279><c> the</c><03:47:26.399><c> time</c><03:47:26.640><c> you</c>

03:47:26.790 --> 03:47:26.800 align:start position:0%
not ideal but hopefully by the time you
 

03:47:26.800 --> 03:47:28.630 align:start position:0%
not ideal but hopefully by the time you
get<03:47:26.920><c> to</c><03:47:27.080><c> this</c><03:47:27.239><c> repo</c><03:47:27.880><c> uh</c><03:47:27.960><c> some</c><03:47:28.080><c> of</c><03:47:28.239><c> these</c><03:47:28.399><c> things</c>

03:47:28.630 --> 03:47:28.640 align:start position:0%
get to this repo uh some of these things
 

03:47:28.640 --> 03:47:32.110 align:start position:0%
get to this repo uh some of these things
by<03:47:28.720><c> the</c><03:47:28.840><c> way</c><03:47:29.399><c> will</c><03:47:29.600><c> hopefully</c><03:47:29.920><c> be</c><03:47:30.319><c> fixed</c><03:47:31.319><c> and</c><03:47:31.960><c> I</c>

03:47:32.110 --> 03:47:32.120 align:start position:0%
by the way will hopefully be fixed and I
 

03:47:32.120 --> 03:47:35.790 align:start position:0%
by the way will hopefully be fixed and I
will<03:47:32.399><c> release</c><03:47:33.319><c> this</c><03:47:33.479><c> build</c><03:47:33.760><c> n</c><03:47:34.040><c> GPT</c><03:47:34.600><c> repo</c><03:47:35.600><c> and</c>

03:47:35.790 --> 03:47:35.800 align:start position:0%
will release this build n GPT repo and
 

03:47:35.800 --> 03:47:37.349 align:start position:0%
will release this build n GPT repo and
right<03:47:35.960><c> now</c><03:47:36.080><c> it</c><03:47:36.199><c> looks</c><03:47:36.399><c> a</c><03:47:36.520><c> little</c><03:47:36.800><c> ugly</c><03:47:37.159><c> and</c>

03:47:37.349 --> 03:47:37.359 align:start position:0%
right now it looks a little ugly and
 

03:47:37.359 --> 03:47:39.349 align:start position:0%
right now it looks a little ugly and
preliminary<03:47:38.279><c> uh</c><03:47:38.479><c> so</c><03:47:38.680><c> hopefully</c><03:47:39.040><c> by</c><03:47:39.120><c> the</c><03:47:39.239><c> time</c>

03:47:39.349 --> 03:47:39.359 align:start position:0%
preliminary uh so hopefully by the time
 

03:47:39.359 --> 03:47:41.750 align:start position:0%
preliminary uh so hopefully by the time
you<03:47:39.520><c> get</c><03:47:39.680><c> here</c><03:47:39.800><c> it's</c><03:47:40.000><c> nicer</c><03:47:40.880><c> but</c><03:47:41.199><c> down</c><03:47:41.479><c> here</c>

03:47:41.750 --> 03:47:41.760 align:start position:0%
you get here it's nicer but down here
 

03:47:41.760 --> 03:47:44.429 align:start position:0%
you get here it's nicer but down here
I'm<03:47:41.880><c> going</c><03:47:42.040><c> to</c><03:47:42.120><c> show</c><03:47:42.760><c> aada</c><03:47:43.760><c> and</c><03:47:44.040><c> I'm</c><03:47:44.159><c> going</c><03:47:44.319><c> to</c>

03:47:44.429 --> 03:47:44.439 align:start position:0%
I'm going to show aada and I'm going to
 

03:47:44.439 --> 03:47:45.830 align:start position:0%
I'm going to show aada and I'm going to
talk<03:47:44.600><c> about</c><03:47:44.880><c> about</c><03:47:45.120><c> some</c><03:47:45.239><c> of</c><03:47:45.359><c> the</c><03:47:45.479><c> things</c><03:47:45.720><c> that</c>

03:47:45.830 --> 03:47:45.840 align:start position:0%
talk about about some of the things that
 

03:47:45.840 --> 03:47:48.070 align:start position:0%
talk about about some of the things that
happened<03:47:46.199><c> after</c><03:47:46.439><c> the</c><03:47:46.600><c> video</c><03:47:47.359><c> and</c><03:47:47.560><c> I</c><03:47:47.720><c> expect</c>

03:47:48.070 --> 03:47:48.080 align:start position:0%
happened after the video and I expect
 

03:47:48.080 --> 03:47:50.229 align:start position:0%
happened after the video and I expect
that<03:47:48.239><c> we</c><03:47:48.399><c> will</c><03:47:48.600><c> have</c><03:47:48.840><c> fixed</c><03:47:49.399><c> uh</c><03:47:49.560><c> the</c><03:47:49.680><c> small</c>

03:47:50.229 --> 03:47:50.239 align:start position:0%
that we will have fixed uh the small
 

03:47:50.239 --> 03:47:52.429 align:start position:0%
that we will have fixed uh the small
issue<03:47:51.239><c> uh</c><03:47:51.359><c> but</c><03:47:51.479><c> for</c><03:47:51.640><c> now</c><03:47:51.840><c> basically</c><03:47:52.319><c> this</c>

03:47:52.429 --> 03:47:52.439 align:start position:0%
issue uh but for now basically this
 

03:47:52.439 --> 03:47:55.229 align:start position:0%
issue uh but for now basically this
shows<03:47:52.880><c> that</c><03:47:53.279><c> uh</c><03:47:53.359><c> our</c><03:47:53.560><c> training</c><03:47:54.040><c> is</c><03:47:54.239><c> not</c><03:47:55.120><c> uh</c>

03:47:55.229 --> 03:47:55.239 align:start position:0%
shows that uh our training is not uh
 

03:47:55.239 --> 03:47:57.990 align:start position:0%
shows that uh our training is not uh
completely<03:47:55.680><c> wrong</c><03:47:56.680><c> and</c><03:47:56.800><c> it</c><03:47:56.920><c> shows</c><03:47:57.439><c> that</c><03:47:57.880><c> uh</c>

03:47:57.990 --> 03:47:58.000 align:start position:0%
completely wrong and it shows that uh
 

03:47:58.000 --> 03:48:00.149 align:start position:0%
completely wrong and it shows that uh
we're<03:47:58.199><c> able</c><03:47:58.399><c> to</c><03:47:58.560><c> surpass</c><03:47:59.080><c> the</c><03:47:59.279><c> accuracy</c><03:47:59.960><c> with</c>

03:48:00.149 --> 03:48:00.159 align:start position:0%
we're able to surpass the accuracy with
 

03:48:00.159 --> 03:48:03.910 align:start position:0%
we're able to surpass the accuracy with
only<03:48:00.359><c> 10x</c><03:48:00.800><c> the</c><03:48:00.920><c> token</c><03:48:01.359><c> budget</c><03:48:02.720><c> um</c><03:48:03.720><c> and</c>

03:48:03.910 --> 03:48:03.920 align:start position:0%
only 10x the token budget um and
 

03:48:03.920 --> 03:48:05.550 align:start position:0%
only 10x the token budget um and
possibly<03:48:04.239><c> it</c><03:48:04.359><c> could</c><03:48:04.520><c> be</c><03:48:04.640><c> also</c><03:48:04.960><c> that</c><03:48:05.120><c> the</c><03:48:05.279><c> data</c>

03:48:05.550 --> 03:48:05.560 align:start position:0%
possibly it could be also that the data
 

03:48:05.560 --> 03:48:08.950 align:start position:0%
possibly it could be also that the data
set<03:48:05.960><c> may</c><03:48:06.159><c> have</c><03:48:06.359><c> improved</c><03:48:07.319><c> so</c><03:48:07.840><c> uh</c><03:48:07.960><c> the</c><03:48:08.080><c> original</c>

03:48:08.950 --> 03:48:08.960 align:start position:0%
set may have improved so uh the original
 

03:48:08.960 --> 03:48:11.229 align:start position:0%
set may have improved so uh the original
uh<03:48:09.040><c> gpt2</c><03:48:09.600><c> data</c><03:48:09.840><c> set</c><03:48:10.000><c> was</c><03:48:10.159><c> web</c><03:48:10.359><c> text</c><03:48:11.000><c> it's</c>

03:48:11.229 --> 03:48:11.239 align:start position:0%
uh gpt2 data set was web text it's
 

03:48:11.239 --> 03:48:12.830 align:start position:0%
uh gpt2 data set was web text it's
possible<03:48:11.640><c> that</c><03:48:11.800><c> not</c><03:48:12.000><c> a</c><03:48:12.120><c> lot</c><03:48:12.239><c> of</c><03:48:12.479><c> care</c><03:48:12.680><c> and</c>

03:48:12.830 --> 03:48:12.840 align:start position:0%
possible that not a lot of care and
 

03:48:12.840 --> 03:48:14.510 align:start position:0%
possible that not a lot of care and
attention<03:48:13.199><c> went</c><03:48:13.439><c> into</c><03:48:13.640><c> the</c><03:48:13.760><c> data</c><03:48:14.040><c> set</c><03:48:14.399><c> this</c>

03:48:14.510 --> 03:48:14.520 align:start position:0%
attention went into the data set this
 

03:48:14.520 --> 03:48:16.990 align:start position:0%
attention went into the data set this
was<03:48:14.840><c> very</c><03:48:15.000><c> early</c><03:48:15.439><c> in</c><03:48:15.600><c> llms</c><03:48:16.560><c> whereas</c><03:48:16.840><c> now</c>

03:48:16.990 --> 03:48:17.000 align:start position:0%
was very early in llms whereas now
 

03:48:17.000 --> 03:48:18.870 align:start position:0%
was very early in llms whereas now
there's<03:48:17.199><c> a</c><03:48:17.319><c> lot</c><03:48:17.439><c> more</c><03:48:17.640><c> scrutiny</c><03:48:18.159><c> on</c><03:48:18.680><c> good</c>

03:48:18.870 --> 03:48:18.880 align:start position:0%
there's a lot more scrutiny on good
 

03:48:18.880 --> 03:48:20.910 align:start position:0%
there's a lot more scrutiny on good
practices<03:48:19.359><c> around</c><03:48:19.840><c> uh</c><03:48:19.960><c> D</c><03:48:20.199><c> duplication</c>

03:48:20.910 --> 03:48:20.920 align:start position:0%
practices around uh D duplication
 

03:48:20.920 --> 03:48:23.469 align:start position:0%
practices around uh D duplication
filtering<03:48:21.880><c> uh</c><03:48:22.000><c> quality</c><03:48:22.319><c> filtering</c><03:48:22.800><c> and</c><03:48:22.920><c> so</c><03:48:23.080><c> on</c>

03:48:23.469 --> 03:48:23.479 align:start position:0%
filtering uh quality filtering and so on
 

03:48:23.479 --> 03:48:24.630 align:start position:0%
filtering uh quality filtering and so on
and<03:48:23.560><c> it's</c><03:48:23.760><c> possible</c><03:48:24.080><c> that</c><03:48:24.159><c> the</c><03:48:24.279><c> data</c><03:48:24.520><c> that</c>

03:48:24.630 --> 03:48:24.640 align:start position:0%
and it's possible that the data that
 

03:48:24.640 --> 03:48:25.910 align:start position:0%
and it's possible that the data that
we're<03:48:24.760><c> training</c><03:48:25.000><c> on</c><03:48:25.120><c> is</c><03:48:25.239><c> just</c><03:48:25.399><c> of</c><03:48:25.600><c> higher</c>

03:48:25.910 --> 03:48:25.920 align:start position:0%
we're training on is just of higher
 

03:48:25.920 --> 03:48:27.910 align:start position:0%
we're training on is just of higher
quality<03:48:26.319><c> per</c><03:48:26.520><c> token</c><03:48:27.239><c> and</c><03:48:27.399><c> that</c><03:48:27.520><c> could</c><03:48:27.680><c> be</c>

03:48:27.910 --> 03:48:27.920 align:start position:0%
quality per token and that could be
 

03:48:27.920 --> 03:48:30.349 align:start position:0%
quality per token and that could be
giving<03:48:28.159><c> us</c><03:48:28.279><c> a</c><03:48:28.399><c> boost</c><03:48:28.680><c> as</c><03:48:28.800><c> well</c><03:48:29.720><c> so</c><03:48:29.960><c> a</c><03:48:30.080><c> number</c><03:48:30.239><c> of</c>

03:48:30.349 --> 03:48:30.359 align:start position:0%
giving us a boost as well so a number of
 

03:48:30.359 --> 03:48:32.189 align:start position:0%
giving us a boost as well so a number of
cave<03:48:30.640><c> has</c><03:48:30.760><c> to</c><03:48:30.880><c> think</c><03:48:31.040><c> about</c><03:48:31.359><c> but</c><03:48:31.479><c> for</c><03:48:31.680><c> now</c><03:48:32.080><c> uh</c>

03:48:32.189 --> 03:48:32.199 align:start position:0%
cave has to think about but for now uh
 

03:48:32.199 --> 03:48:36.030 align:start position:0%
cave has to think about but for now uh
we're<03:48:32.520><c> pretty</c><03:48:32.800><c> happy</c><03:48:33.040><c> with</c><03:48:33.199><c> this</c><03:48:34.159><c> um</c><03:48:34.880><c> and</c><03:48:35.359><c> yeah</c>

03:48:36.030 --> 03:48:36.040 align:start position:0%
we're pretty happy with this um and yeah
 

03:48:36.040 --> 03:48:37.429 align:start position:0%
we're pretty happy with this um and yeah
now<03:48:36.239><c> the</c><03:48:36.319><c> next</c><03:48:36.520><c> thing</c><03:48:36.640><c> I</c><03:48:36.720><c> was</c><03:48:36.880><c> interested</c><03:48:37.199><c> in</c>

03:48:37.429 --> 03:48:37.439 align:start position:0%
now the next thing I was interested in
 

03:48:37.439 --> 03:48:39.469 align:start position:0%
now the next thing I was interested in
is<03:48:37.720><c> as</c><03:48:37.800><c> you</c><03:48:37.920><c> see</c><03:48:38.120><c> it's</c><03:48:38.239><c> a</c><03:48:38.399><c> morning</c><03:48:38.800><c> now</c><03:48:39.239><c> so</c>

03:48:39.469 --> 03:48:39.479 align:start position:0%
is as you see it's a morning now so
 

03:48:39.479 --> 03:48:41.389 align:start position:0%
is as you see it's a morning now so
there<03:48:39.600><c> was</c><03:48:39.760><c> an</c><03:48:39.960><c> overnight</c><03:48:40.840><c> and</c><03:48:40.960><c> I</c><03:48:41.040><c> wanted</c><03:48:41.279><c> to</c>

03:48:41.389 --> 03:48:41.399 align:start position:0%
there was an overnight and I wanted to
 

03:48:41.399 --> 03:48:43.229 align:start position:0%
there was an overnight and I wanted to
basically<03:48:41.760><c> see</c><03:48:42.080><c> how</c><03:48:42.319><c> far</c><03:48:42.600><c> I</c><03:48:42.680><c> could</c><03:48:42.840><c> push</c><03:48:43.040><c> the</c>

03:48:43.229 --> 03:48:43.239 align:start position:0%
basically see how far I could push the
 

03:48:43.239 --> 03:48:46.429 align:start position:0%
basically see how far I could push the
result<03:48:43.960><c> so</c><03:48:44.560><c> uh</c><03:48:44.840><c> to</c><03:48:44.960><c> do</c><03:48:45.120><c> an</c><03:48:45.279><c> overnight</c><03:48:45.760><c> run</c><03:48:46.279><c> I</c>

03:48:46.429 --> 03:48:46.439 align:start position:0%
result so uh to do an overnight run I
 

03:48:46.439 --> 03:48:48.630 align:start position:0%
result so uh to do an overnight run I
basically<03:48:46.960><c> did</c><03:48:47.439><c> instead</c><03:48:47.680><c> of</c><03:48:47.800><c> one</c><03:48:48.000><c> Epoch</c><03:48:48.479><c> which</c>

03:48:48.630 --> 03:48:48.640 align:start position:0%
basically did instead of one Epoch which
 

03:48:48.640 --> 03:48:50.590 align:start position:0%
basically did instead of one Epoch which
took<03:48:48.880><c> roughly</c><03:48:49.199><c> two</c><03:48:49.439><c> hours</c><03:48:50.120><c> I</c><03:48:50.239><c> just</c><03:48:50.359><c> did</c><03:48:50.479><c> a</c>

03:48:50.590 --> 03:48:50.600 align:start position:0%
took roughly two hours I just did a
 

03:48:50.600 --> 03:48:52.389 align:start position:0%
took roughly two hours I just did a
times<03:48:50.880><c> four</c><03:48:51.399><c> so</c><03:48:51.600><c> that</c><03:48:51.760><c> that</c><03:48:51.880><c> would</c><03:48:52.040><c> take</c><03:48:52.199><c> eight</c>

03:48:52.389 --> 03:48:52.399 align:start position:0%
times four so that that would take eight
 

03:48:52.399 --> 03:48:54.349 align:start position:0%
times four so that that would take eight
hours<03:48:52.600><c> while</c><03:48:52.800><c> I</c><03:48:52.880><c> was</c><03:48:53.000><c> sleeping</c><03:48:53.840><c> and</c><03:48:53.920><c> so</c><03:48:54.080><c> we</c><03:48:54.199><c> did</c>

03:48:54.349 --> 03:48:54.359 align:start position:0%
hours while I was sleeping and so we did
 

03:48:54.359 --> 03:48:56.910 align:start position:0%
hours while I was sleeping and so we did
four<03:48:54.640><c> Epoch</c><03:48:55.159><c> or</c><03:48:55.399><c> roughly</c><03:48:55.720><c> 40</c><03:48:56.159><c> billion</c><03:48:56.800><c> uh</c>

03:48:56.910 --> 03:48:56.920 align:start position:0%
four Epoch or roughly 40 billion uh
 

03:48:56.920 --> 03:48:59.389 align:start position:0%
four Epoch or roughly 40 billion uh
tokens<03:48:57.239><c> of</c><03:48:57.479><c> training</c><03:48:58.479><c> and</c><03:48:58.840><c> I</c><03:48:58.920><c> was</c><03:48:59.080><c> trying</c><03:48:59.279><c> to</c>

03:48:59.389 --> 03:48:59.399 align:start position:0%
tokens of training and I was trying to
 

03:48:59.399 --> 03:49:01.910 align:start position:0%
tokens of training and I was trying to
see<03:48:59.560><c> how</c><03:48:59.720><c> far</c><03:48:59.880><c> we</c><03:49:00.000><c> could</c><03:49:00.239><c> get</c><03:49:01.239><c> um</c><03:49:01.560><c> and</c><03:49:01.640><c> so</c><03:49:01.840><c> this</c>

03:49:01.910 --> 03:49:01.920 align:start position:0%
see how far we could get um and so this
 

03:49:01.920 --> 03:49:03.349 align:start position:0%
see how far we could get um and so this
was<03:49:02.080><c> the</c><03:49:02.159><c> only</c><03:49:02.399><c> change</c><03:49:02.600><c> and</c><03:49:02.760><c> I</c><03:49:02.840><c> reran</c><03:49:03.239><c> the</c>

03:49:03.349 --> 03:49:03.359 align:start position:0%
was the only change and I reran the
 

03:49:03.359 --> 03:49:05.750 align:start position:0%
was the only change and I reran the
script<03:49:04.080><c> and</c><03:49:04.239><c> when</c><03:49:04.359><c> I</c><03:49:04.560><c> point</c><03:49:05.199><c> uh</c><03:49:05.319><c> and</c><03:49:05.399><c> read</c><03:49:05.640><c> the</c>

03:49:05.750 --> 03:49:05.760 align:start position:0%
script and when I point uh and read the
 

03:49:05.760 --> 03:49:08.750 align:start position:0%
script and when I point uh and read the
log<03:49:06.000><c> file</c><03:49:06.399><c> at</c><03:49:06.840><c> uh</c><03:49:06.960><c> at</c><03:49:07.080><c> the</c><03:49:07.359><c> 40b</c><03:49:08.359><c> uh</c><03:49:08.479><c> this</c><03:49:08.560><c> is</c>

03:49:08.750 --> 03:49:08.760 align:start position:0%
log file at uh at the 40b uh this is
 

03:49:08.760 --> 03:49:10.510 align:start position:0%
log file at uh at the 40b uh this is
what<03:49:08.880><c> the</c><03:49:09.000><c> curve</c><03:49:09.239><c> look</c>

03:49:10.510 --> 03:49:10.520 align:start position:0%
what the curve look
 

03:49:10.520 --> 03:49:13.630 align:start position:0%
what the curve look
like<03:49:11.520><c> okay</c><03:49:12.040><c> so</c><03:49:12.199><c> to</c><03:49:12.359><c> narrate</c><03:49:12.760><c> this</c><03:49:12.960><c> number</c><03:49:13.199><c> one</c>

03:49:13.630 --> 03:49:13.640 align:start position:0%
like okay so to narrate this number one
 

03:49:13.640 --> 03:49:15.269 align:start position:0%
like okay so to narrate this number one
we<03:49:13.720><c> are</c><03:49:13.840><c> seeing</c><03:49:14.159><c> this</c><03:49:14.279><c> issue</c><03:49:14.560><c> here</c><03:49:14.760><c> here</c><03:49:15.040><c> with</c>

03:49:15.269 --> 03:49:15.279 align:start position:0%
we are seeing this issue here here with
 

03:49:15.279 --> 03:49:17.309 align:start position:0%
we are seeing this issue here here with
the<03:49:15.600><c> periodicity</c><03:49:16.600><c> through</c><03:49:16.920><c> the</c><03:49:17.040><c> different</c>

03:49:17.309 --> 03:49:17.319 align:start position:0%
the periodicity through the different
 

03:49:17.319 --> 03:49:19.110 align:start position:0%
the periodicity through the different
Epoch<03:49:17.800><c> and</c><03:49:17.960><c> something</c><03:49:18.279><c> really</c><03:49:18.479><c> weird</c><03:49:18.920><c> with</c>

03:49:19.110 --> 03:49:19.120 align:start position:0%
Epoch and something really weird with
 

03:49:19.120 --> 03:49:22.110 align:start position:0%
Epoch and something really weird with
the<03:49:19.600><c> fine</c><03:49:19.880><c> web</c><03:49:20.040><c> edu</c><03:49:20.479><c> data</c><03:49:20.760><c> set</c><03:49:21.239><c> and</c><03:49:21.439><c> that</c><03:49:21.520><c> is</c><03:49:21.960><c> to</c>

03:49:22.110 --> 03:49:22.120 align:start position:0%
the fine web edu data set and that is to
 

03:49:22.120 --> 03:49:25.110 align:start position:0%
the fine web edu data set and that is to
be<03:49:22.640><c> determined</c><03:49:23.640><c> uh</c><03:49:23.840><c> but</c><03:49:24.560><c> otherwise</c><03:49:24.960><c> we</c><03:49:25.040><c> are</c>

03:49:25.110 --> 03:49:25.120 align:start position:0%
be determined uh but otherwise we are
 

03:49:25.120 --> 03:49:27.790 align:start position:0%
be determined uh but otherwise we are
seeing<03:49:25.359><c> that</c><03:49:25.479><c> the</c><03:49:25.600><c> H</c><03:49:25.920><c> swag</c><03:49:26.680><c> actually</c><03:49:27.159><c> went</c><03:49:27.479><c> up</c>

03:49:27.790 --> 03:49:27.800 align:start position:0%
seeing that the H swag actually went up
 

03:49:27.800 --> 03:49:31.269 align:start position:0%
seeing that the H swag actually went up
by<03:49:27.960><c> a</c><03:49:28.120><c> lot</c><03:49:28.760><c> and</c><03:49:28.920><c> we</c><03:49:29.239><c> almost</c><03:49:30.120><c> we</c><03:49:30.319><c> almost</c><03:49:30.680><c> made</c><03:49:30.880><c> it</c>

03:49:31.269 --> 03:49:31.279 align:start position:0%
by a lot and we almost we almost made it
 

03:49:31.279 --> 03:49:35.590 align:start position:0%
by a lot and we almost we almost made it
uh<03:49:31.359><c> to</c><03:49:31.560><c> the</c><03:49:31.680><c> GPT</c><03:49:32.319><c> 324m</c><03:49:33.359><c> accuracy</c><03:49:34.359><c> uh</c><03:49:34.520><c> up</c><03:49:34.760><c> here</c>

03:49:35.590 --> 03:49:35.600 align:start position:0%
uh to the GPT 324m accuracy uh up here
 

03:49:35.600 --> 03:49:37.870 align:start position:0%
uh to the GPT 324m accuracy uh up here
uh<03:49:35.720><c> but</c><03:49:35.840><c> not</c><03:49:36.040><c> quite</c><03:49:36.439><c> so</c><03:49:37.199><c> uh</c><03:49:37.319><c> it's</c><03:49:37.479><c> too</c><03:49:37.640><c> bad</c><03:49:37.800><c> that</c>

03:49:37.870 --> 03:49:37.880 align:start position:0%
uh but not quite so uh it's too bad that
 

03:49:37.880 --> 03:49:41.550 align:start position:0%
uh but not quite so uh it's too bad that
I<03:49:38.000><c> didn't</c><03:49:38.159><c> sleep</c><03:49:38.439><c> slightly</c><03:49:38.880><c> longer</c><03:49:39.880><c> um</c><03:49:40.720><c> and</c><03:49:41.239><c> uh</c>

03:49:41.550 --> 03:49:41.560 align:start position:0%
I didn't sleep slightly longer um and uh
 

03:49:41.560 --> 03:49:44.349 align:start position:0%
I didn't sleep slightly longer um and uh
I<03:49:41.640><c> think</c><03:49:41.800><c> if</c><03:49:41.960><c> this</c><03:49:42.080><c> was</c><03:49:42.239><c> an</c><03:49:42.840><c> uh</c><03:49:43.359><c> five</c><03:49:43.720><c> Epoch</c><03:49:44.080><c> run</c>

03:49:44.349 --> 03:49:44.359 align:start position:0%
I think if this was an uh five Epoch run
 

03:49:44.359 --> 03:49:47.030 align:start position:0%
I think if this was an uh five Epoch run
we<03:49:44.760><c> may</c><03:49:44.960><c> have</c><03:49:45.120><c> gotten</c><03:49:45.520><c> here</c><03:49:46.479><c> now</c><03:49:46.640><c> one</c><03:49:46.800><c> thing</c><03:49:46.920><c> to</c>

03:49:47.030 --> 03:49:47.040 align:start position:0%
we may have gotten here now one thing to
 

03:49:47.040 --> 03:49:49.070 align:start position:0%
we may have gotten here now one thing to
point<03:49:47.239><c> out</c><03:49:47.479><c> is</c><03:49:47.640><c> that</c><03:49:47.960><c> if</c><03:49:48.080><c> you're</c><03:49:48.239><c> doing</c><03:49:48.600><c> multi</c>

03:49:49.070 --> 03:49:49.080 align:start position:0%
point out is that if you're doing multi
 

03:49:49.080 --> 03:49:51.429 align:start position:0%
point out is that if you're doing multi
Epoch<03:49:49.520><c> runs</c><03:49:50.520><c> uh</c><03:49:50.600><c> we're</c><03:49:50.800><c> not</c><03:49:51.000><c> actually</c><03:49:51.199><c> being</c>

03:49:51.429 --> 03:49:51.439 align:start position:0%
Epoch runs uh we're not actually being
 

03:49:51.439 --> 03:49:53.030 align:start position:0%
Epoch runs uh we're not actually being
very<03:49:51.640><c> careful</c><03:49:51.920><c> in</c><03:49:52.040><c> our</c><03:49:52.199><c> data</c><03:49:52.439><c> loader</c><03:49:52.920><c> and</c>

03:49:53.030 --> 03:49:53.040 align:start position:0%
very careful in our data loader and
 

03:49:53.040 --> 03:49:56.710 align:start position:0%
very careful in our data loader and
we're<03:49:53.239><c> not</c><03:49:54.239><c> um</c><03:49:55.239><c> I</c><03:49:55.439><c> this</c><03:49:55.600><c> data</c><03:49:55.840><c> loader</c><03:49:56.479><c> goes</c>

03:49:56.710 --> 03:49:56.720 align:start position:0%
we're not um I this data loader goes
 

03:49:56.720 --> 03:49:59.070 align:start position:0%
we're not um I this data loader goes
through<03:49:56.960><c> the</c><03:49:57.120><c> data</c><03:49:57.439><c> in</c><03:49:57.720><c> exactly</c><03:49:58.279><c> the</c><03:49:58.439><c> same</c>

03:49:59.070 --> 03:49:59.080 align:start position:0%
through the data in exactly the same
 

03:49:59.080 --> 03:50:01.870 align:start position:0%
through the data in exactly the same
format<03:50:00.080><c> and</c><03:50:00.399><c> exactly</c><03:50:00.920><c> the</c><03:50:01.040><c> same</c><03:50:01.199><c> order</c><03:50:01.760><c> and</c>

03:50:01.870 --> 03:50:01.880 align:start position:0%
format and exactly the same order and
 

03:50:01.880 --> 03:50:03.670 align:start position:0%
format and exactly the same order and
this<03:50:01.960><c> is</c><03:50:02.120><c> kind</c><03:50:02.199><c> of</c><03:50:02.359><c> suboptimal</c><03:50:03.319><c> and</c><03:50:03.439><c> you</c><03:50:03.520><c> would</c>

03:50:03.670 --> 03:50:03.680 align:start position:0%
this is kind of suboptimal and you would
 

03:50:03.680 --> 03:50:05.349 align:start position:0%
this is kind of suboptimal and you would
want<03:50:03.840><c> to</c><03:50:03.960><c> look</c><03:50:04.120><c> into</c><03:50:04.399><c> extensions</c><03:50:05.000><c> where</c><03:50:05.159><c> you</c>

03:50:05.349 --> 03:50:05.359 align:start position:0%
want to look into extensions where you
 

03:50:05.359 --> 03:50:08.030 align:start position:0%
want to look into extensions where you
actually<03:50:05.680><c> permute</c><03:50:06.199><c> the</c><03:50:06.359><c> data</c><03:50:07.000><c> uh</c><03:50:07.159><c> randomly</c>

03:50:08.030 --> 03:50:08.040 align:start position:0%
actually permute the data uh randomly
 

03:50:08.040 --> 03:50:10.269 align:start position:0%
actually permute the data uh randomly
you<03:50:08.199><c> permute</c><03:50:08.560><c> the</c><03:50:08.760><c> documents</c><03:50:09.199><c> around</c><03:50:10.120><c> in</c>

03:50:10.269 --> 03:50:10.279 align:start position:0%
you permute the documents around in
 

03:50:10.279 --> 03:50:12.110 align:start position:0%
you permute the documents around in
Every<03:50:10.439><c> Single</c><03:50:10.680><c> Shard</c><03:50:11.120><c> on</c><03:50:11.279><c> every</c><03:50:11.439><c> single</c><03:50:11.680><c> new</c>

03:50:12.110 --> 03:50:12.120 align:start position:0%
Every Single Shard on every single new
 

03:50:12.120 --> 03:50:16.149 align:start position:0%
Every Single Shard on every single new
Epoch<03:50:13.279><c> um</c><03:50:14.279><c> and</c><03:50:14.399><c> po</c><03:50:14.960><c> even</c><03:50:15.120><c> permute</c><03:50:15.439><c> the</c>

03:50:16.149 --> 03:50:16.159 align:start position:0%
Epoch um and po even permute the
 

03:50:16.159 --> 03:50:18.189 align:start position:0%
Epoch um and po even permute the
shards<03:50:17.159><c> and</c><03:50:17.239><c> that</c><03:50:17.359><c> would</c><03:50:17.479><c> go</c><03:50:17.600><c> a</c><03:50:17.720><c> long</c><03:50:17.880><c> way</c><03:50:18.000><c> into</c>

03:50:18.189 --> 03:50:18.199 align:start position:0%
shards and that would go a long way into
 

03:50:18.199 --> 03:50:20.149 align:start position:0%
shards and that would go a long way into
decreasing<03:50:18.640><c> the</c><03:50:18.760><c> pricity</c><03:50:19.680><c> and</c><03:50:19.800><c> it's</c><03:50:19.960><c> also</c>

03:50:20.149 --> 03:50:20.159 align:start position:0%
decreasing the pricity and it's also
 

03:50:20.159 --> 03:50:22.030 align:start position:0%
decreasing the pricity and it's also
better<03:50:20.319><c> for</c><03:50:20.479><c> the</c><03:50:20.800><c> optimization</c><03:50:21.800><c> so</c><03:50:21.920><c> that</c>

03:50:22.030 --> 03:50:22.040 align:start position:0%
better for the optimization so that
 

03:50:22.040 --> 03:50:23.750 align:start position:0%
better for the optimization so that
you're<03:50:22.159><c> not</c><03:50:22.319><c> seeing</c><03:50:22.680><c> things</c><03:50:23.040><c> ident</c><03:50:23.399><c> in</c><03:50:23.560><c> the</c>

03:50:23.750 --> 03:50:23.760 align:start position:0%
you're not seeing things ident in the
 

03:50:23.760 --> 03:50:25.870 align:start position:0%
you're not seeing things ident in the
identical<03:50:24.279><c> format</c><03:50:25.040><c> and</c><03:50:25.159><c> you're</c><03:50:25.399><c> introducing</c>

03:50:25.870 --> 03:50:25.880 align:start position:0%
identical format and you're introducing
 

03:50:25.880 --> 03:50:27.990 align:start position:0%
identical format and you're introducing
some<03:50:26.040><c> of</c><03:50:26.159><c> the</c><03:50:26.359><c> some</c><03:50:26.640><c> uh</c><03:50:26.960><c> Randomness</c><03:50:27.720><c> in</c><03:50:27.880><c> how</c>

03:50:27.990 --> 03:50:28.000 align:start position:0%
some of the some uh Randomness in how
 

03:50:28.000 --> 03:50:29.870 align:start position:0%
some of the some uh Randomness in how
the<03:50:28.159><c> documents</c><03:50:28.520><c> follow</c><03:50:28.880><c> each</c><03:50:29.000><c> other</c><03:50:29.720><c> because</c>

03:50:29.870 --> 03:50:29.880 align:start position:0%
the documents follow each other because
 

03:50:29.880 --> 03:50:31.030 align:start position:0%
the documents follow each other because
you<03:50:30.000><c> have</c><03:50:30.080><c> to</c><03:50:30.199><c> remember</c><03:50:30.479><c> that</c><03:50:30.680><c> in</c><03:50:30.840><c> every</c>

03:50:31.030 --> 03:50:31.040 align:start position:0%
you have to remember that in every
 

03:50:31.040 --> 03:50:33.229 align:start position:0%
you have to remember that in every
single<03:50:31.399><c> row</c><03:50:32.120><c> these</c><03:50:32.319><c> documents</c><03:50:32.760><c> follow</c><03:50:33.080><c> each</c>

03:50:33.229 --> 03:50:33.239 align:start position:0%
single row these documents follow each
 

03:50:33.239 --> 03:50:34.510 align:start position:0%
single row these documents follow each
other<03:50:33.520><c> and</c><03:50:33.600><c> then</c><03:50:33.720><c> there's</c><03:50:33.920><c> the</c><03:50:34.000><c> end</c><03:50:34.159><c> of</c><03:50:34.279><c> text</c>

03:50:34.510 --> 03:50:34.520 align:start position:0%
other and then there's the end of text
 

03:50:34.520 --> 03:50:36.630 align:start position:0%
other and then there's the end of text
token<03:50:34.960><c> and</c><03:50:35.080><c> then</c><03:50:35.199><c> the</c><03:50:35.359><c> next</c><03:50:35.600><c> document</c><03:50:36.319><c> so</c><03:50:36.479><c> the</c>

03:50:36.630 --> 03:50:36.640 align:start position:0%
token and then the next document so the
 

03:50:36.640 --> 03:50:39.070 align:start position:0%
token and then the next document so the
documents<03:50:36.960><c> are</c><03:50:37.120><c> currently</c><03:50:37.560><c> glued</c><03:50:38.399><c> together</c>

03:50:39.070 --> 03:50:39.080 align:start position:0%
documents are currently glued together
 

03:50:39.080 --> 03:50:41.550 align:start position:0%
documents are currently glued together
in<03:50:39.239><c> the</c><03:50:39.439><c> exact</c><03:50:39.800><c> same</c><03:50:40.159><c> identical</c><03:50:40.720><c> manner</c><03:50:41.399><c> but</c>

03:50:41.550 --> 03:50:41.560 align:start position:0%
in the exact same identical manner but
 

03:50:41.560 --> 03:50:43.349 align:start position:0%
in the exact same identical manner but
we<03:50:41.680><c> actually</c><03:50:41.880><c> want</c><03:50:42.000><c> to</c><03:50:42.199><c> break</c><03:50:42.800><c> break</c><03:50:43.040><c> up</c><03:50:43.199><c> the</c>

03:50:43.349 --> 03:50:43.359 align:start position:0%
we actually want to break break up the
 

03:50:43.359 --> 03:50:45.229 align:start position:0%
we actually want to break break up the
documents<03:50:43.720><c> and</c><03:50:43.840><c> shuffle</c><03:50:44.159><c> them</c><03:50:44.319><c> around</c>

03:50:45.229 --> 03:50:45.239 align:start position:0%
documents and shuffle them around
 

03:50:45.239 --> 03:50:46.429 align:start position:0%
documents and shuffle them around
because<03:50:45.479><c> the</c><03:50:45.600><c> order</c><03:50:45.840><c> of</c><03:50:45.960><c> the</c><03:50:46.080><c> documents</c>

03:50:46.429 --> 03:50:46.439 align:start position:0%
because the order of the documents
 

03:50:46.439 --> 03:50:49.149 align:start position:0%
because the order of the documents
shouldn't<03:50:46.760><c> matter</c><03:50:47.399><c> and</c><03:50:47.560><c> they</c><03:50:47.640><c> shouldn't</c><03:50:48.319><c> um</c>

03:50:49.149 --> 03:50:49.159 align:start position:0%
shouldn't matter and they shouldn't um
 

03:50:49.159 --> 03:50:50.389 align:start position:0%
shouldn't matter and they shouldn't um
basically<03:50:49.399><c> we</c><03:50:49.479><c> want</c><03:50:49.560><c> to</c><03:50:49.760><c> break</c><03:50:49.960><c> up</c><03:50:50.199><c> that</c>

03:50:50.389 --> 03:50:50.399 align:start position:0%
basically we want to break up that
 

03:50:50.399 --> 03:50:51.830 align:start position:0%
basically we want to break up that
dependence<03:50:50.920><c> because</c><03:50:51.080><c> it's</c><03:50:51.239><c> a</c><03:50:51.479><c> kind</c><03:50:51.600><c> of</c><03:50:51.680><c> a</c>

03:50:51.830 --> 03:50:51.840 align:start position:0%
dependence because it's a kind of a
 

03:50:51.840 --> 03:50:54.670 align:start position:0%
dependence because it's a kind of a
spous<03:50:52.520><c> correlation</c><03:50:53.520><c> and</c><03:50:53.640><c> so</c><03:50:53.880><c> our</c><03:50:54.080><c> data</c><03:50:54.319><c> lad</c><03:50:54.600><c> is</c>

03:50:54.670 --> 03:50:54.680 align:start position:0%
spous correlation and so our data lad is
 

03:50:54.680 --> 03:50:56.149 align:start position:0%
spous correlation and so our data lad is
not<03:50:54.840><c> currently</c><03:50:55.159><c> doing</c><03:50:55.399><c> that</c><03:50:55.560><c> and</c><03:50:55.680><c> that's</c><03:50:55.880><c> one</c>

03:50:56.149 --> 03:50:56.159 align:start position:0%
not currently doing that and that's one
 

03:50:56.159 --> 03:50:58.349 align:start position:0%
not currently doing that and that's one
Improvement<03:50:57.040><c> uh</c><03:50:57.120><c> you</c><03:50:57.239><c> could</c><03:50:57.359><c> think</c><03:50:57.520><c> of</c>

03:50:58.349 --> 03:50:58.359 align:start position:0%
Improvement uh you could think of
 

03:50:58.359 --> 03:51:01.309 align:start position:0%
Improvement uh you could think of
making<03:50:59.359><c> um</c><03:51:00.359><c> the</c><03:51:00.520><c> other</c><03:51:00.760><c> thing</c><03:51:00.840><c> to</c><03:51:00.960><c> point</c><03:51:01.159><c> out</c>

03:51:01.309 --> 03:51:01.319 align:start position:0%
making um the other thing to point out
 

03:51:01.319 --> 03:51:03.229 align:start position:0%
making um the other thing to point out
is<03:51:01.439><c> we're</c><03:51:01.640><c> almost</c><03:51:01.880><c> matching</c><03:51:02.199><c> gpt3</c><03:51:02.800><c> accuracy</c>

03:51:03.229 --> 03:51:03.239 align:start position:0%
is we're almost matching gpt3 accuracy
 

03:51:03.239 --> 03:51:06.189 align:start position:0%
is we're almost matching gpt3 accuracy
with<03:51:03.399><c> only</c><03:51:03.600><c> 40</c><03:51:03.920><c> billion</c><03:51:04.199><c> tokens</c><03:51:04.960><c> gpt3</c><03:51:05.840><c> trained</c>

03:51:06.189 --> 03:51:06.199 align:start position:0%
with only 40 billion tokens gpt3 trained
 

03:51:06.199 --> 03:51:08.469 align:start position:0%
with only 40 billion tokens gpt3 trained
on<03:51:06.399><c> 300</c><03:51:06.920><c> billion</c><03:51:07.279><c> tokens</c><03:51:07.960><c> so</c><03:51:08.159><c> again</c><03:51:08.319><c> we're</c>

03:51:08.469 --> 03:51:08.479 align:start position:0%
on 300 billion tokens so again we're
 

03:51:08.479 --> 03:51:11.510 align:start position:0%
on 300 billion tokens so again we're
seeing<03:51:08.800><c> about</c><03:51:08.960><c> a</c><03:51:09.199><c> 10x</c><03:51:10.199><c> um</c><03:51:10.800><c> Improvement</c><03:51:11.319><c> here</c>

03:51:11.510 --> 03:51:11.520 align:start position:0%
seeing about a 10x um Improvement here
 

03:51:11.520 --> 03:51:14.349 align:start position:0%
seeing about a 10x um Improvement here
with<03:51:11.680><c> respect</c><03:51:11.960><c> to</c><03:51:12.520><c> learning</c><03:51:13.239><c> efficiency</c><03:51:14.239><c> uh</c>

03:51:14.349 --> 03:51:14.359 align:start position:0%
with respect to learning efficiency uh
 

03:51:14.359 --> 03:51:16.790 align:start position:0%
with respect to learning efficiency uh
the<03:51:14.640><c> other</c><03:51:14.840><c> thing</c><03:51:15.080><c> I</c><03:51:15.159><c> wanted</c><03:51:15.399><c> to</c><03:51:16.120><c> and</c><03:51:16.520><c> I</c><03:51:16.600><c> don't</c>

03:51:16.790 --> 03:51:16.800 align:start position:0%
the other thing I wanted to and I don't
 

03:51:16.800 --> 03:51:18.189 align:start position:0%
the other thing I wanted to and I don't
actually<03:51:17.000><c> know</c><03:51:17.159><c> exactly</c><03:51:17.479><c> what</c><03:51:17.560><c> to</c><03:51:17.720><c> attribute</c>

03:51:18.189 --> 03:51:18.199 align:start position:0%
actually know exactly what to attribute
 

03:51:18.199 --> 03:51:19.550 align:start position:0%
actually know exactly what to attribute
this<03:51:18.319><c> to</c><03:51:18.760><c> other</c><03:51:18.920><c> than</c><03:51:19.080><c> some</c><03:51:19.199><c> of</c><03:51:19.279><c> the</c><03:51:19.399><c> things</c>

03:51:19.550 --> 03:51:19.560 align:start position:0%
this to other than some of the things
 

03:51:19.560 --> 03:51:21.309 align:start position:0%
this to other than some of the things
that<03:51:19.680><c> I</c><03:51:19.800><c> already</c><03:51:20.040><c> mentioned</c><03:51:20.520><c> previously</c><03:51:20.920><c> for</c>

03:51:21.309 --> 03:51:21.319 align:start position:0%
that I already mentioned previously for
 

03:51:21.319 --> 03:51:23.510 align:start position:0%
that I already mentioned previously for
the<03:51:21.479><c> previous</c><03:51:21.960><c> run</c><03:51:22.960><c> uh</c><03:51:23.080><c> the</c><03:51:23.199><c> other</c><03:51:23.319><c> thing</c><03:51:23.439><c> I</c>

03:51:23.510 --> 03:51:23.520 align:start position:0%
the previous run uh the other thing I
 

03:51:23.520 --> 03:51:26.670 align:start position:0%
the previous run uh the other thing I
wanted<03:51:23.720><c> to</c><03:51:23.840><c> briefly</c><03:51:24.159><c> mention</c><03:51:25.120><c> is</c><03:51:26.120><c> uh</c><03:51:26.239><c> the</c><03:51:26.359><c> max</c>

03:51:26.670 --> 03:51:26.680 align:start position:0%
wanted to briefly mention is uh the max
 

03:51:26.680 --> 03:51:29.389 align:start position:0%
wanted to briefly mention is uh the max
LR<03:51:27.199><c> here</c><03:51:27.760><c> I</c><03:51:27.880><c> saw</c><03:51:28.159><c> some</c><03:51:28.399><c> people</c><03:51:28.760><c> already</c><03:51:29.159><c> play</c>

03:51:29.389 --> 03:51:29.399 align:start position:0%
LR here I saw some people already play
 

03:51:29.399 --> 03:51:30.990 align:start position:0%
LR here I saw some people already play
with<03:51:29.560><c> this</c><03:51:29.720><c> a</c><03:51:29.840><c> little</c><03:51:30.040><c> bit</c><03:51:30.239><c> in</c><03:51:30.359><c> a</c><03:51:30.640><c> previous</c>

03:51:30.990 --> 03:51:31.000 align:start position:0%
with this a little bit in a previous
 

03:51:31.000 --> 03:51:33.950 align:start position:0%
with this a little bit in a previous
related<03:51:31.680><c> repository</c><03:51:32.680><c> um</c><03:51:33.279><c> and</c><03:51:33.479><c> it</c><03:51:33.600><c> turns</c><03:51:33.800><c> out</c>

03:51:33.950 --> 03:51:33.960 align:start position:0%
related repository um and it turns out
 

03:51:33.960 --> 03:51:35.149 align:start position:0%
related repository um and it turns out
that<03:51:34.040><c> you</c><03:51:34.120><c> can</c><03:51:34.239><c> actually</c><03:51:34.479><c> almost</c><03:51:34.680><c> like</c><03:51:34.880><c> three</c>

03:51:35.149 --> 03:51:35.159 align:start position:0%
that you can actually almost like three
 

03:51:35.159 --> 03:51:37.229 align:start position:0%
that you can actually almost like three
xas<03:51:36.159><c> so</c><03:51:36.319><c> it's</c><03:51:36.439><c> possible</c><03:51:36.720><c> that</c><03:51:36.840><c> the</c><03:51:36.920><c> maximum</c>

03:51:37.229 --> 03:51:37.239 align:start position:0%
xas so it's possible that the maximum
 

03:51:37.239 --> 03:51:39.070 align:start position:0%
xas so it's possible that the maximum
learning<03:51:37.520><c> rate</c><03:51:37.680><c> can</c><03:51:37.800><c> be</c><03:51:37.960><c> a</c><03:51:38.040><c> lot</c><03:51:38.239><c> higher</c><03:51:38.920><c> and</c>

03:51:39.070 --> 03:51:39.080 align:start position:0%
learning rate can be a lot higher and
 

03:51:39.080 --> 03:51:40.550 align:start position:0%
learning rate can be a lot higher and
for<03:51:39.199><c> some</c><03:51:39.399><c> reason</c><03:51:39.640><c> the</c><03:51:39.760><c> gpt3</c><03:51:40.319><c> hyper</c>

03:51:40.550 --> 03:51:40.560 align:start position:0%
for some reason the gpt3 hyper
 

03:51:40.560 --> 03:51:42.389 align:start position:0%
for some reason the gpt3 hyper
parameters<03:51:41.040><c> that</c><03:51:41.159><c> we</c><03:51:41.239><c> are</c><03:51:41.439><c> inheriting</c><03:51:42.199><c> are</c>

03:51:42.389 --> 03:51:42.399 align:start position:0%
parameters that we are inheriting are
 

03:51:42.399 --> 03:51:44.070 align:start position:0%
parameters that we are inheriting are
actually<03:51:42.640><c> extremely</c><03:51:43.120><c> conservative</c><03:51:43.920><c> and</c><03:51:44.000><c> you</c>

03:51:44.070 --> 03:51:44.080 align:start position:0%
actually extremely conservative and you
 

03:51:44.080 --> 03:51:45.229 align:start position:0%
actually extremely conservative and you
can<03:51:44.199><c> actually</c><03:51:44.600><c> get</c><03:51:44.720><c> away</c><03:51:44.840><c> with</c><03:51:44.920><c> a</c><03:51:45.000><c> Higher</c>

03:51:45.229 --> 03:51:45.239 align:start position:0%
can actually get away with a Higher
 

03:51:45.239 --> 03:51:47.550 align:start position:0%
can actually get away with a Higher
Learning<03:51:45.600><c> rate</c><03:51:45.800><c> and</c><03:51:45.920><c> it</c><03:51:46.000><c> would</c><03:51:46.159><c> train</c><03:51:46.560><c> faster</c>

03:51:47.550 --> 03:51:47.560 align:start position:0%
Learning rate and it would train faster
 

03:51:47.560 --> 03:51:50.229 align:start position:0%
Learning rate and it would train faster
so<03:51:48.080><c> a</c><03:51:48.159><c> lot</c><03:51:48.279><c> of</c><03:51:48.399><c> these</c><03:51:48.600><c> hyper</c><03:51:48.840><c> parameters</c><03:51:49.760><c> um</c>

03:51:50.229 --> 03:51:50.239 align:start position:0%
so a lot of these hyper parameters um
 

03:51:50.239 --> 03:51:52.389 align:start position:0%
so a lot of these hyper parameters um
are<03:51:50.520><c> quite</c><03:51:50.760><c> tunable</c><03:51:51.479><c> and</c><03:51:51.680><c> feel</c><03:51:51.880><c> free</c><03:51:52.080><c> to</c><03:51:52.239><c> play</c>

03:51:52.389 --> 03:51:52.399 align:start position:0%
are quite tunable and feel free to play
 

03:51:52.399 --> 03:51:54.790 align:start position:0%
are quite tunable and feel free to play
with<03:51:52.600><c> them</c><03:51:52.960><c> and</c><03:51:53.080><c> they're</c><03:51:53.319><c> probably</c><03:51:53.680><c> not</c><03:51:54.279><c> set</c>

03:51:54.790 --> 03:51:54.800 align:start position:0%
with them and they're probably not set
 

03:51:54.800 --> 03:51:59.070 align:start position:0%
with them and they're probably not set
precisely<03:51:55.760><c> correctly</c><03:51:56.760><c> and</c><03:51:57.600><c> um</c><03:51:58.600><c> it's</c><03:51:58.800><c> possible</c>

03:51:59.070 --> 03:51:59.080 align:start position:0%
precisely correctly and um it's possible
 

03:51:59.080 --> 03:52:01.510 align:start position:0%
precisely correctly and um it's possible
that<03:51:59.199><c> you</c><03:51:59.279><c> can</c><03:51:59.399><c> get</c><03:51:59.520><c> away</c><03:51:59.720><c> with</c><03:51:59.880><c> doing</c><03:52:00.159><c> this</c>

03:52:01.510 --> 03:52:01.520 align:start position:0%
that you can get away with doing this
 

03:52:01.520 --> 03:52:03.790 align:start position:0%
that you can get away with doing this
basically<03:52:02.520><c> and</c><03:52:02.640><c> if</c><03:52:02.720><c> you</c><03:52:02.840><c> wanted</c><03:52:03.040><c> to</c><03:52:03.319><c> exactly</c>

03:52:03.790 --> 03:52:03.800 align:start position:0%
basically and if you wanted to exactly
 

03:52:03.800 --> 03:52:07.790 align:start position:0%
basically and if you wanted to exactly
be<03:52:04.040><c> faithful</c><03:52:04.439><c> to</c><03:52:04.880><c> gpt3</c><03:52:05.880><c> you</c><03:52:06.000><c> would</c><03:52:06.560><c> also</c><03:52:07.560><c> want</c>

03:52:07.790 --> 03:52:07.800 align:start position:0%
be faithful to gpt3 you would also want
 

03:52:07.800 --> 03:52:10.070 align:start position:0%
be faithful to gpt3 you would also want
to<03:52:08.359><c> make</c><03:52:08.640><c> the</c><03:52:08.760><c> following</c><03:52:09.120><c> difference</c><03:52:09.880><c> you'd</c>

03:52:10.070 --> 03:52:10.080 align:start position:0%
to make the following difference you'd
 

03:52:10.080 --> 03:52:11.790 align:start position:0%
to make the following difference you'd
want<03:52:10.199><c> to</c><03:52:10.520><c> come</c><03:52:10.760><c> here</c><03:52:11.239><c> and</c><03:52:11.359><c> the</c><03:52:11.439><c> sequence</c>

03:52:11.790 --> 03:52:11.800 align:start position:0%
want to come here and the sequence
 

03:52:11.800 --> 03:52:15.110 align:start position:0%
want to come here and the sequence
length<03:52:12.000><c> of</c><03:52:12.120><c> gpt3</c><03:52:12.760><c> is</c><03:52:13.120><c> 2x</c><03:52:13.840><c> it's</c><03:52:14.040><c> 20</c><03:52:14.600><c> 48</c><03:52:14.880><c> instead</c>

03:52:15.110 --> 03:52:15.120 align:start position:0%
length of gpt3 is 2x it's 20 48 instead
 

03:52:15.120 --> 03:52:17.389 align:start position:0%
length of gpt3 is 2x it's 20 48 instead
of<03:52:15.399><c> 1,24</c><03:52:16.399><c> so</c><03:52:16.560><c> you</c><03:52:16.680><c> would</c><03:52:16.840><c> come</c><03:52:17.000><c> here</c><03:52:17.199><c> change</c>

03:52:17.389 --> 03:52:17.399 align:start position:0%
of 1,24 so you would come here change
 

03:52:17.399 --> 03:52:20.269 align:start position:0%
of 1,24 so you would come here change
this<03:52:17.560><c> to</c><03:52:17.760><c> 248</c><03:52:18.760><c> for</c><03:52:19.000><c> T</c><03:52:19.720><c> and</c><03:52:19.800><c> then</c><03:52:19.920><c> if</c><03:52:20.000><c> you</c><03:52:20.080><c> want</c>

03:52:20.269 --> 03:52:20.279 align:start position:0%
this to 248 for T and then if you want
 

03:52:20.279 --> 03:52:22.750 align:start position:0%
this to 248 for T and then if you want
the<03:52:20.399><c> exact</c><03:52:20.680><c> same</c><03:52:20.840><c> number</c><03:52:21.040><c> of</c><03:52:21.199><c> tokens</c><03:52:22.080><c> uh</c><03:52:22.600><c> half</c>

03:52:22.750 --> 03:52:22.760 align:start position:0%
the exact same number of tokens uh half
 

03:52:22.760 --> 03:52:25.630 align:start position:0%
the exact same number of tokens uh half
a<03:52:22.880><c> million</c><03:52:23.439><c> per</c><03:52:24.000><c> iteration</c><03:52:24.479><c> or</c><03:52:24.680><c> per</c><03:52:24.920><c> step</c><03:52:25.520><c> you</c>

03:52:25.630 --> 03:52:25.640 align:start position:0%
a million per iteration or per step you
 

03:52:25.640 --> 03:52:28.229 align:start position:0%
a million per iteration or per step you
want<03:52:25.800><c> to</c><03:52:26.000><c> then</c><03:52:26.159><c> decrease</c><03:52:26.520><c> this</c><03:52:26.640><c> to</c><03:52:26.960><c> 32</c><03:52:27.960><c> so</c><03:52:28.120><c> they</c>

03:52:28.229 --> 03:52:28.239 align:start position:0%
want to then decrease this to 32 so they
 

03:52:28.239 --> 03:52:31.309 align:start position:0%
want to then decrease this to 32 so they
still<03:52:28.439><c> multiply</c><03:52:28.880><c> to</c><03:52:29.040><c> half</c><03:52:29.159><c> a</c><03:52:29.720><c> mil</c><03:52:30.720><c> so</c><03:52:31.199><c> that</c>

03:52:31.309 --> 03:52:31.319 align:start position:0%
still multiply to half a mil so that
 

03:52:31.319 --> 03:52:33.750 align:start position:0%
still multiply to half a mil so that
would<03:52:31.520><c> give</c><03:52:31.640><c> your</c><03:52:31.840><c> model</c><03:52:32.520><c> sequence</c><03:52:32.960><c> length</c>

03:52:33.750 --> 03:52:33.760 align:start position:0%
would give your model sequence length
 

03:52:33.760 --> 03:52:36.110 align:start position:0%
would give your model sequence length
equal<03:52:34.040><c> to</c><03:52:34.239><c> that</c><03:52:34.359><c> of</c><03:52:34.479><c> gpt3</c><03:52:35.439><c> and</c><03:52:35.560><c> in</c><03:52:35.720><c> that</c><03:52:35.880><c> case</c>

03:52:36.110 --> 03:52:36.120 align:start position:0%
equal to that of gpt3 and in that case
 

03:52:36.120 --> 03:52:37.469 align:start position:0%
equal to that of gpt3 and in that case
basically<03:52:36.640><c> the</c>

03:52:37.469 --> 03:52:37.479 align:start position:0%
basically the
 

03:52:37.479 --> 03:52:40.870 align:start position:0%
basically the
um<03:52:38.479><c> the</c><03:52:38.600><c> models</c><03:52:38.920><c> would</c><03:52:39.120><c> be</c><03:52:40.080><c> roughly</c><03:52:40.399><c> identical</c>

03:52:40.870 --> 03:52:40.880 align:start position:0%
um the models would be roughly identical
 

03:52:40.880 --> 03:52:42.710 align:start position:0%
um the models would be roughly identical
as<03:52:41.000><c> far</c><03:52:41.159><c> as</c><03:52:41.319><c> I'm</c><03:52:41.720><c> as</c><03:52:41.840><c> far</c><03:52:41.960><c> as</c><03:52:42.040><c> I'm</c><03:52:42.199><c> aware</c>

03:52:42.710 --> 03:52:42.720 align:start position:0%
as far as I'm as far as I'm aware
 

03:52:42.720 --> 03:52:44.630 align:start position:0%
as far as I'm as far as I'm aware
because<03:52:43.000><c> again</c><03:52:43.159><c> gpt2</c><03:52:43.680><c> and</c><03:52:43.760><c> gpt3</c><03:52:44.199><c> are</c><03:52:44.279><c> very</c>

03:52:44.630 --> 03:52:44.640 align:start position:0%
because again gpt2 and gpt3 are very
 

03:52:44.640 --> 03:52:47.070 align:start position:0%
because again gpt2 and gpt3 are very
very<03:52:44.760><c> similar</c><03:52:45.439><c> models</c><03:52:46.439><c> now</c><03:52:46.560><c> we</c><03:52:46.640><c> can</c><03:52:46.760><c> also</c><03:52:46.960><c> look</c>

03:52:47.070 --> 03:52:47.080 align:start position:0%
very similar models now we can also look
 

03:52:47.080 --> 03:52:48.469 align:start position:0%
very similar models now we can also look
at<03:52:47.199><c> some</c><03:52:47.319><c> of</c><03:52:47.439><c> the</c><03:52:47.600><c> samples</c><03:52:48.000><c> here</c><03:52:48.159><c> from</c><03:52:48.319><c> the</c>

03:52:48.469 --> 03:52:48.479 align:start position:0%
at some of the samples here from the
 

03:52:48.479 --> 03:52:51.550 align:start position:0%
at some of the samples here from the
model<03:52:49.239><c> that</c><03:52:49.359><c> was</c><03:52:49.479><c> trained</c><03:52:49.920><c> overnight</c><03:52:50.880><c> so</c><03:52:51.439><c> this</c>

03:52:51.550 --> 03:52:51.560 align:start position:0%
model that was trained overnight so this
 

03:52:51.560 --> 03:52:52.750 align:start position:0%
model that was trained overnight so this
is

03:52:52.750 --> 03:52:52.760 align:start position:0%
is
 

03:52:52.760 --> 03:52:55.469 align:start position:0%
is
the<03:52:53.760><c> optimization</c><03:52:54.760><c> and</c><03:52:54.840><c> you</c><03:52:54.960><c> see</c><03:52:55.159><c> that</c><03:52:55.319><c> here</c>

03:52:55.469 --> 03:52:55.479 align:start position:0%
the optimization and you see that here
 

03:52:55.479 --> 03:52:57.830 align:start position:0%
the optimization and you see that here
we<03:52:55.640><c> stepped</c><03:52:56.040><c> all</c><03:52:56.199><c> the</c><03:52:56.279><c> way</c><03:52:56.439><c> to</c>

03:52:57.830 --> 03:52:57.840 align:start position:0%
we stepped all the way to
 

03:52:57.840 --> 03:53:02.349 align:start position:0%
we stepped all the way to
76290<03:52:58.840><c> also</c><03:52:59.199><c> or</c><03:52:59.399><c> so</c><03:53:00.399><c> and</c><03:53:01.080><c> these</c><03:53:01.199><c> are</c><03:53:01.920><c> the</c><03:53:02.080><c> hos</c>

03:53:02.349 --> 03:53:02.359 align:start position:0%
76290 also or so and these are the hos
 

03:53:02.359 --> 03:53:06.189 align:start position:0%
76290 also or so and these are the hos
mag<03:53:02.560><c> we</c><03:53:02.680><c> achieved</c><03:53:03.000><c> was</c><03:53:03.239><c> 33.2</c><03:53:04.560><c> 4</c><03:53:05.560><c> and</c><03:53:05.880><c> these</c><03:53:06.040><c> are</c>

03:53:06.189 --> 03:53:06.199 align:start position:0%
mag we achieved was 33.2 4 and these are
 

03:53:06.199 --> 03:53:08.710 align:start position:0%
mag we achieved was 33.2 4 and these are
some<03:53:06.319><c> of</c><03:53:06.479><c> the</c><03:53:06.840><c> samples</c><03:53:07.239><c> from</c><03:53:07.359><c> the</c><03:53:07.600><c> model</c><03:53:08.600><c> and</c>

03:53:08.710 --> 03:53:08.720 align:start position:0%
some of the samples from the model and
 

03:53:08.720 --> 03:53:10.229 align:start position:0%
some of the samples from the model and
you<03:53:08.800><c> can</c><03:53:08.920><c> see</c><03:53:09.159><c> that</c><03:53:09.600><c> if</c><03:53:09.720><c> you</c><03:53:09.840><c> read</c><03:53:10.040><c> through</c>

03:53:10.229 --> 03:53:10.239 align:start position:0%
you can see that if you read through
 

03:53:10.239 --> 03:53:11.830 align:start position:0%
you can see that if you read through
this<03:53:10.359><c> and</c><03:53:10.520><c> pause</c><03:53:10.720><c> the</c><03:53:10.840><c> video</c><03:53:11.080><c> briefly</c><03:53:11.600><c> you</c><03:53:11.720><c> can</c>

03:53:11.830 --> 03:53:11.840 align:start position:0%
this and pause the video briefly you can
 

03:53:11.840 --> 03:53:14.189 align:start position:0%
this and pause the video briefly you can
see<03:53:12.000><c> that</c><03:53:12.120><c> they</c><03:53:12.239><c> are</c><03:53:12.479><c> a</c><03:53:12.640><c> lot</c><03:53:12.840><c> more</c><03:53:13.120><c> coherent</c><03:53:14.120><c> uh</c>

03:53:14.189 --> 03:53:14.199 align:start position:0%
see that they are a lot more coherent uh
 

03:53:14.199 --> 03:53:15.590 align:start position:0%
see that they are a lot more coherent uh
so

03:53:15.590 --> 03:53:15.600 align:start position:0%
so
 

03:53:15.600 --> 03:53:17.229 align:start position:0%
so
um<03:53:16.040><c> and</c><03:53:16.159><c> they're</c><03:53:16.399><c> actually</c><03:53:16.640><c> addressing</c><03:53:17.080><c> the</c>

03:53:17.229 --> 03:53:17.239 align:start position:0%
um and they're actually addressing the
 

03:53:17.239 --> 03:53:21.269 align:start position:0%
um and they're actually addressing the
fact<03:53:17.640><c> that</c><03:53:18.159><c> it's</c><03:53:18.279><c> a</c><03:53:18.439><c> language</c><03:53:18.800><c> model</c><03:53:19.199><c> almost</c>

03:53:21.269 --> 03:53:21.279 align:start position:0%
fact that it's a language model almost
 

03:53:21.279 --> 03:53:24.670 align:start position:0%
fact that it's a language model almost
so<03:53:22.560><c> uh</c><03:53:23.560><c> hello</c><03:53:23.800><c> I'm</c><03:53:23.880><c> a</c><03:53:24.000><c> language</c><03:53:24.319><c> model</c><03:53:24.520><c> and</c><03:53:24.600><c> I</c>

03:53:24.670 --> 03:53:24.680 align:start position:0%
so uh hello I'm a language model and I
 

03:53:24.680 --> 03:53:27.030 align:start position:0%
so uh hello I'm a language model and I
try<03:53:24.840><c> to</c><03:53:24.920><c> be</c><03:53:25.040><c> as</c><03:53:25.159><c> accurate</c><03:53:25.479><c> as</c>

03:53:27.030 --> 03:53:27.040 align:start position:0%
try to be as accurate as
 

03:53:27.040 --> 03:53:29.710 align:start position:0%
try to be as accurate as
possible<03:53:28.040><c> um</c><03:53:28.680><c> I'm</c><03:53:28.800><c> a</c><03:53:28.920><c> language</c><03:53:29.199><c> model</c><03:53:29.479><c> not</c><03:53:29.600><c> a</c>

03:53:29.710 --> 03:53:29.720 align:start position:0%
possible um I'm a language model not a
 

03:53:29.720 --> 03:53:31.670 align:start position:0%
possible um I'm a language model not a
programming

03:53:31.670 --> 03:53:31.680 align:start position:0%
programming
 

03:53:31.680 --> 03:53:34.630 align:start position:0%
programming
language<03:53:32.680><c> I</c><03:53:32.760><c> know</c><03:53:32.920><c> how</c><03:53:33.040><c> to</c><03:53:33.399><c> communicate</c><03:53:34.399><c> uh</c><03:53:34.520><c> I</c>

03:53:34.630 --> 03:53:34.640 align:start position:0%
language I know how to communicate uh I
 

03:53:34.640 --> 03:53:35.910 align:start position:0%
language I know how to communicate uh I
use

03:53:35.910 --> 03:53:35.920 align:start position:0%
use
 

03:53:35.920 --> 03:53:37.910 align:start position:0%
use
Python

03:53:37.910 --> 03:53:37.920 align:start position:0%
Python
 

03:53:37.920 --> 03:53:40.189 align:start position:0%
Python
um<03:53:38.920><c> I</c><03:53:39.000><c> don't</c><03:53:39.120><c> know</c><03:53:39.319><c> if</c><03:53:39.399><c> you</c><03:53:39.600><c> pause</c><03:53:39.880><c> this</c><03:53:40.040><c> and</c>

03:53:40.189 --> 03:53:40.199 align:start position:0%
um I don't know if you pause this and
 

03:53:40.199 --> 03:53:41.710 align:start position:0%
um I don't know if you pause this and
look<03:53:40.359><c> at</c><03:53:40.479><c> it</c><03:53:40.640><c> and</c><03:53:40.760><c> then</c><03:53:40.880><c> compare</c><03:53:41.199><c> it</c><03:53:41.399><c> to</c><03:53:41.600><c> the</c>

03:53:41.710 --> 03:53:41.720 align:start position:0%
look at it and then compare it to the
 

03:53:41.720 --> 03:53:43.510 align:start position:0%
look at it and then compare it to the
one<03:53:42.319><c> to</c><03:53:42.439><c> the</c><03:53:42.560><c> model</c><03:53:42.840><c> that</c><03:53:42.960><c> was</c><03:53:43.080><c> only</c><03:53:43.239><c> trained</c>

03:53:43.510 --> 03:53:43.520 align:start position:0%
one to the model that was only trained
 

03:53:43.520 --> 03:53:45.469 align:start position:0%
one to the model that was only trained
for<03:53:43.680><c> 10</c><03:53:43.880><c> billion</c><03:53:44.720><c> uh</c><03:53:44.800><c> you</c><03:53:44.920><c> will</c><03:53:45.080><c> see</c><03:53:45.319><c> that</c>

03:53:45.469 --> 03:53:45.479 align:start position:0%
for 10 billion uh you will see that
 

03:53:45.479 --> 03:53:47.030 align:start position:0%
for 10 billion uh you will see that
these<03:53:45.600><c> are</c><03:53:45.760><c> a</c><03:53:45.840><c> lot</c><03:53:46.000><c> more</c><03:53:46.159><c> coherent</c><03:53:46.880><c> and</c><03:53:46.960><c> you</c>

03:53:47.030 --> 03:53:47.040 align:start position:0%
these are a lot more coherent and you
 

03:53:47.040 --> 03:53:48.469 align:start position:0%
these are a lot more coherent and you
can<03:53:47.199><c> play</c><03:53:47.359><c> with</c><03:53:47.520><c> this</c><03:53:47.800><c> uh</c>

03:53:48.469 --> 03:53:48.479 align:start position:0%
can play with this uh
 

03:53:48.479 --> 03:53:50.429 align:start position:0%
can play with this uh
yourself<03:53:49.479><c> one</c><03:53:49.640><c> more</c><03:53:49.800><c> thing</c><03:53:49.920><c> I</c><03:53:50.000><c> added</c><03:53:50.239><c> to</c><03:53:50.359><c> The</c>

03:53:50.429 --> 03:53:50.439 align:start position:0%
yourself one more thing I added to The
 

03:53:50.439 --> 03:53:52.630 align:start position:0%
yourself one more thing I added to The
Code<03:53:50.680><c> by</c><03:53:50.800><c> the</c><03:53:50.880><c> way</c><03:53:51.159><c> is</c><03:53:51.359><c> this</c><03:53:51.479><c> chunk</c><03:53:51.800><c> of</c><03:53:52.199><c> code</c>

03:53:52.630 --> 03:53:52.640 align:start position:0%
Code by the way is this chunk of code
 

03:53:52.640 --> 03:53:54.710 align:start position:0%
Code by the way is this chunk of code
here<03:53:53.359><c> so</c><03:53:53.560><c> basically</c><03:53:54.040><c> right</c><03:53:54.239><c> after</c><03:53:54.520><c> we</c>

03:53:54.710 --> 03:53:54.720 align:start position:0%
here so basically right after we
 

03:53:54.720 --> 03:53:56.750 align:start position:0%
here so basically right after we
evaluate<03:53:55.120><c> the</c><03:53:55.239><c> validation</c><03:53:55.720><c> loss</c><03:53:56.359><c> if</c><03:53:56.479><c> we</c><03:53:56.600><c> are</c>

03:53:56.750 --> 03:53:56.760 align:start position:0%
evaluate the validation loss if we are
 

03:53:56.760 --> 03:53:58.870 align:start position:0%
evaluate the validation loss if we are
the<03:53:56.880><c> master</c><03:53:57.279><c> process</c><03:53:58.199><c> in</c><03:53:58.359><c> addition</c><03:53:58.680><c> to</c>

03:53:58.870 --> 03:53:58.880 align:start position:0%
the master process in addition to
 

03:53:58.880 --> 03:54:01.349 align:start position:0%
the master process in addition to
logging<03:53:59.279><c> the</c><03:53:59.439><c> validation</c><03:53:59.880><c> loss</c><03:54:00.640><c> every</c><03:54:00.920><c> 5,000</c>

03:54:01.349 --> 03:54:01.359 align:start position:0%
logging the validation loss every 5,000
 

03:54:01.359 --> 03:54:02.630 align:start position:0%
logging the validation loss every 5,000
steps<03:54:01.600><c> we're</c><03:54:01.760><c> also</c><03:54:01.920><c> going</c><03:54:02.000><c> to</c><03:54:02.120><c> save</c><03:54:02.399><c> the</c>

03:54:02.630 --> 03:54:02.640 align:start position:0%
steps we're also going to save the
 

03:54:02.640 --> 03:54:04.510 align:start position:0%
steps we're also going to save the
checkpoint<03:54:03.640><c> which</c><03:54:03.760><c> is</c><03:54:03.880><c> really</c><03:54:04.120><c> just</c><03:54:04.279><c> the</c>

03:54:04.510 --> 03:54:04.520 align:start position:0%
checkpoint which is really just the
 

03:54:04.520 --> 03:54:07.070 align:start position:0%
checkpoint which is really just the
state<03:54:04.960><c> dictionary</c><03:54:05.600><c> of</c><03:54:05.760><c> the</c><03:54:05.920><c> model</c><03:54:06.800><c> and</c><03:54:06.920><c> so</c>

03:54:07.070 --> 03:54:07.080 align:start position:0%
state dictionary of the model and so
 

03:54:07.080 --> 03:54:09.189 align:start position:0%
state dictionary of the model and so
checkpointing<03:54:07.760><c> is</c><03:54:07.920><c> nice</c><03:54:08.159><c> just</c><03:54:08.439><c> because</c><03:54:09.080><c> uh</c>

03:54:09.189 --> 03:54:09.199 align:start position:0%
checkpointing is nice just because uh
 

03:54:09.199 --> 03:54:11.389 align:start position:0%
checkpointing is nice just because uh
you<03:54:09.279><c> can</c><03:54:09.399><c> save</c><03:54:09.640><c> the</c><03:54:09.760><c> model</c><03:54:10.080><c> and</c><03:54:10.239><c> later</c><03:54:10.520><c> you</c><03:54:10.680><c> can</c>

03:54:11.389 --> 03:54:11.399 align:start position:0%
you can save the model and later you can
 

03:54:11.399 --> 03:54:13.590 align:start position:0%
you can save the model and later you can
uh<03:54:11.479><c> use</c><03:54:11.680><c> it</c><03:54:11.840><c> in</c><03:54:12.000><c> some</c><03:54:12.239><c> way</c><03:54:13.040><c> if</c><03:54:13.120><c> you</c><03:54:13.239><c> wanted</c><03:54:13.439><c> to</c>

03:54:13.590 --> 03:54:13.600 align:start position:0%
uh use it in some way if you wanted to
 

03:54:13.600 --> 03:54:15.349 align:start position:0%
uh use it in some way if you wanted to
resume<03:54:13.880><c> the</c><03:54:14.040><c> optimiz</c><03:54:14.560><c> ation</c><03:54:15.080><c> then</c><03:54:15.239><c> in</c>

03:54:15.349 --> 03:54:15.359 align:start position:0%
resume the optimiz ation then in
 

03:54:15.359 --> 03:54:17.870 align:start position:0%
resume the optimiz ation then in
addition<03:54:15.680><c> to</c><03:54:15.840><c> saving</c><03:54:16.159><c> the</c><03:54:16.359><c> model</c><03:54:17.000><c> we</c><03:54:17.120><c> have</c><03:54:17.199><c> to</c>

03:54:17.870 --> 03:54:17.880 align:start position:0%
addition to saving the model we have to
 

03:54:17.880 --> 03:54:20.429 align:start position:0%
addition to saving the model we have to
also<03:54:18.199><c> save</c><03:54:18.520><c> the</c><03:54:18.760><c> optimizer</c><03:54:19.399><c> State</c><03:54:19.680><c> dict</c>

03:54:20.429 --> 03:54:20.439 align:start position:0%
also save the optimizer State dict
 

03:54:20.439 --> 03:54:21.870 align:start position:0%
also save the optimizer State dict
because<03:54:20.680><c> remember</c><03:54:20.960><c> that</c><03:54:21.080><c> the</c><03:54:21.239><c> optimizer</c><03:54:21.760><c> has</c>

03:54:21.870 --> 03:54:21.880 align:start position:0%
because remember that the optimizer has
 

03:54:21.880 --> 03:54:24.510 align:start position:0%
because remember that the optimizer has
a<03:54:22.040><c> few</c><03:54:22.359><c> additional</c><03:54:22.720><c> buffers</c><03:54:23.199><c> because</c><03:54:23.359><c> of</c><03:54:23.560><c> adom</c>

03:54:24.510 --> 03:54:24.520 align:start position:0%
a few additional buffers because of adom
 

03:54:24.520 --> 03:54:28.389 align:start position:0%
a few additional buffers because of adom
so<03:54:24.760><c> it's</c><03:54:24.960><c> got</c><03:54:25.239><c> the</c><03:54:25.760><c> m</c><03:54:26.040><c> and</c><03:54:26.319><c> V</c><03:54:27.319><c> and</c><03:54:27.920><c> uh</c><03:54:28.120><c> you</c><03:54:28.239><c> need</c>

03:54:28.389 --> 03:54:28.399 align:start position:0%
so it's got the m and V and uh you need
 

03:54:28.399 --> 03:54:30.349 align:start position:0%
so it's got the m and V and uh you need
to<03:54:28.560><c> also</c><03:54:28.800><c> resume</c><03:54:29.159><c> the</c><03:54:29.279><c> optimizer</c><03:54:29.840><c> properly</c>

03:54:30.349 --> 03:54:30.359 align:start position:0%
to also resume the optimizer properly
 

03:54:30.359 --> 03:54:31.590 align:start position:0%
to also resume the optimizer properly
you<03:54:30.439><c> have</c><03:54:30.520><c> to</c><03:54:30.600><c> be</c><03:54:30.720><c> careful</c><03:54:30.960><c> with</c><03:54:31.080><c> your</c><03:54:31.199><c> RNG</c>

03:54:31.590 --> 03:54:31.600 align:start position:0%
you have to be careful with your RNG
 

03:54:31.600 --> 03:54:33.670 align:start position:0%
you have to be careful with your RNG
seeds<03:54:32.239><c> uh</c><03:54:32.359><c> random</c><03:54:32.680><c> number</c><03:54:32.880><c> generators</c><03:54:33.399><c> and</c><03:54:33.520><c> so</c>

03:54:33.670 --> 03:54:33.680 align:start position:0%
seeds uh random number generators and so
 

03:54:33.680 --> 03:54:35.550 align:start position:0%
seeds uh random number generators and so
on<03:54:34.159><c> so</c><03:54:34.319><c> if</c><03:54:34.399><c> you</c><03:54:34.479><c> wanted</c><03:54:34.680><c> to</c><03:54:34.840><c> exactly</c><03:54:35.279><c> be</c><03:54:35.399><c> able</c>

03:54:35.550 --> 03:54:35.560 align:start position:0%
on so if you wanted to exactly be able
 

03:54:35.560 --> 03:54:37.790 align:start position:0%
on so if you wanted to exactly be able
to<03:54:35.760><c> resume</c><03:54:36.159><c> optimization</c><03:54:37.120><c> you</c><03:54:37.279><c> have</c><03:54:37.359><c> to</c><03:54:37.560><c> think</c>

03:54:37.790 --> 03:54:37.800 align:start position:0%
to resume optimization you have to think
 

03:54:37.800 --> 03:54:40.229 align:start position:0%
to resume optimization you have to think
through<03:54:38.479><c> the</c><03:54:38.640><c> state</c><03:54:39.000><c> of</c><03:54:39.199><c> the</c><03:54:39.560><c> of</c><03:54:39.680><c> the</c><03:54:39.800><c> training</c>

03:54:40.229 --> 03:54:40.239 align:start position:0%
through the state of the of the training
 

03:54:40.239 --> 03:54:41.830 align:start position:0%
through the state of the of the training
process<03:54:40.880><c> but</c><03:54:41.040><c> if</c><03:54:41.120><c> you</c><03:54:41.199><c> just</c><03:54:41.319><c> want</c><03:54:41.399><c> to</c><03:54:41.520><c> save</c><03:54:41.760><c> the</c>

03:54:41.830 --> 03:54:41.840 align:start position:0%
process but if you just want to save the
 

03:54:41.840 --> 03:54:43.870 align:start position:0%
process but if you just want to save the
model<03:54:42.199><c> this</c><03:54:42.279><c> is</c><03:54:42.399><c> how</c><03:54:42.520><c> you</c><03:54:42.640><c> would</c><03:54:42.800><c> do</c><03:54:42.920><c> it</c><03:54:43.560><c> and</c>

03:54:43.870 --> 03:54:43.880 align:start position:0%
model this is how you would do it and
 

03:54:43.880 --> 03:54:45.630 align:start position:0%
model this is how you would do it and
one<03:54:44.439><c> one</c><03:54:44.640><c> nice</c><03:54:44.880><c> reason</c><03:54:45.199><c> why</c><03:54:45.279><c> you</c><03:54:45.399><c> might</c><03:54:45.560><c> want</c>

03:54:45.630 --> 03:54:45.640 align:start position:0%
one one nice reason why you might want
 

03:54:45.640 --> 03:54:47.630 align:start position:0%
one one nice reason why you might want
to<03:54:45.760><c> do</c><03:54:45.960><c> this</c><03:54:46.279><c> is</c><03:54:46.520><c> because</c><03:54:47.040><c> you</c><03:54:47.159><c> may</c><03:54:47.319><c> want</c><03:54:47.439><c> to</c>

03:54:47.630 --> 03:54:47.640 align:start position:0%
to do this is because you may want to
 

03:54:47.640 --> 03:54:50.110 align:start position:0%
to do this is because you may want to
evaluate<03:54:48.159><c> the</c><03:54:48.279><c> model</c><03:54:48.600><c> a</c><03:54:48.680><c> lot</c><03:54:48.840><c> more</c><03:54:49.120><c> carefully</c>

03:54:50.110 --> 03:54:50.120 align:start position:0%
evaluate the model a lot more carefully
 

03:54:50.120 --> 03:54:52.790 align:start position:0%
evaluate the model a lot more carefully
so<03:54:50.560><c> here</c><03:54:50.720><c> we</c><03:54:50.800><c> are</c><03:54:51.000><c> only</c><03:54:51.439><c> kind</c><03:54:51.560><c> of</c><03:54:51.760><c> like</c><03:54:51.920><c> winging</c>

03:54:52.790 --> 03:54:52.800 align:start position:0%
so here we are only kind of like winging
 

03:54:52.800 --> 03:54:54.830 align:start position:0%
so here we are only kind of like winging
the<03:54:53.120><c> hell</c><03:54:53.479><c> swag</c><03:54:53.680><c> eval</c><03:54:54.239><c> but</c><03:54:54.359><c> you</c><03:54:54.439><c> may</c><03:54:54.600><c> want</c><03:54:54.680><c> to</c>

03:54:54.830 --> 03:54:54.840 align:start position:0%
the hell swag eval but you may want to
 

03:54:54.840 --> 03:54:57.870 align:start position:0%
the hell swag eval but you may want to
use<03:54:55.040><c> something</c><03:54:55.800><c> um</c><03:54:56.720><c> nicer</c><03:54:57.199><c> like</c><03:54:57.399><c> for</c><03:54:57.520><c> example</c>

03:54:57.870 --> 03:54:57.880 align:start position:0%
use something um nicer like for example
 

03:54:57.880 --> 03:55:01.950 align:start position:0%
use something um nicer like for example
the<03:54:58.359><c> Luther</c><03:54:59.359><c> uh</c><03:54:59.520><c> Luther</c><03:55:00.359><c> evaluation</c><03:55:00.960><c> hardness</c>

03:55:01.950 --> 03:55:01.960 align:start position:0%
the Luther uh Luther evaluation hardness
 

03:55:01.960 --> 03:55:06.030 align:start position:0%
the Luther uh Luther evaluation hardness
evaluation<03:55:03.040><c> hardness</c><03:55:04.279><c> hardness</c><03:55:05.279><c> um</c><03:55:05.680><c> so</c><03:55:05.920><c> this</c>

03:55:06.030 --> 03:55:06.040 align:start position:0%
evaluation hardness hardness um so this
 

03:55:06.040 --> 03:55:08.670 align:start position:0%
evaluation hardness hardness um so this
is<03:55:06.880><c> a</c><03:55:07.080><c> way</c><03:55:07.279><c> to</c><03:55:07.560><c> also</c><03:55:07.880><c> evaluate</c><03:55:08.359><c> language</c>

03:55:08.670 --> 03:55:08.680 align:start position:0%
is a way to also evaluate language
 

03:55:08.680 --> 03:55:13.670 align:start position:0%
is a way to also evaluate language
models<03:55:09.600><c> and</c><03:55:10.000><c> um</c><03:55:10.960><c> so</c><03:55:11.120><c> it's</c><03:55:11.319><c> possible</c><03:55:11.680><c> that</c><03:55:12.680><c> um</c>

03:55:13.670 --> 03:55:13.680 align:start position:0%
models and um so it's possible that um
 

03:55:13.680 --> 03:55:15.189 align:start position:0%
models and um so it's possible that um
you<03:55:13.800><c> may</c><03:55:13.960><c> want</c><03:55:14.040><c> to</c><03:55:14.120><c> use</c><03:55:14.520><c> basically</c><03:55:14.880><c> different</c>

03:55:15.189 --> 03:55:15.199 align:start position:0%
you may want to use basically different
 

03:55:15.199 --> 03:55:17.349 align:start position:0%
you may want to use basically different
infrastructure<03:55:15.920><c> to</c><03:55:16.520><c> more</c><03:55:16.800><c> thoroughly</c>

03:55:17.349 --> 03:55:17.359 align:start position:0%
infrastructure to more thoroughly
 

03:55:17.359 --> 03:55:20.030 align:start position:0%
infrastructure to more thoroughly
evaluate<03:55:17.880><c> the</c><03:55:18.000><c> models</c><03:55:18.399><c> on</c><03:55:18.760><c> different</c><03:55:19.760><c> um</c>

03:55:20.030 --> 03:55:20.040 align:start position:0%
evaluate the models on different um
 

03:55:20.040 --> 03:55:21.429 align:start position:0%
evaluate the models on different um
evaluations<03:55:20.720><c> and</c><03:55:20.880><c> compare</c><03:55:21.159><c> it</c><03:55:21.239><c> to</c><03:55:21.359><c> the</c>

03:55:21.429 --> 03:55:21.439 align:start position:0%
evaluations and compare it to the
 

03:55:21.439 --> 03:55:25.030 align:start position:0%
evaluations and compare it to the
opening<03:55:21.840><c> gbt2</c><03:55:22.319><c> model</c><03:55:22.880><c> on</c><03:55:23.120><c> many</c><03:55:23.399><c> other</c><03:55:24.159><c> um</c>

03:55:25.030 --> 03:55:25.040 align:start position:0%
opening gbt2 model on many other um
 

03:55:25.040 --> 03:55:26.830 align:start position:0%
opening gbt2 model on many other um
tasks<03:55:25.439><c> like</c><03:55:25.560><c> for</c><03:55:25.680><c> example</c><03:55:25.960><c> that</c><03:55:26.120><c> involve</c><03:55:26.479><c> math</c>

03:55:26.830 --> 03:55:26.840 align:start position:0%
tasks like for example that involve math
 

03:55:26.840 --> 03:55:29.189 align:start position:0%
tasks like for example that involve math
code<03:55:27.159><c> or</c><03:55:27.319><c> different</c><03:55:27.560><c> languages</c><03:55:28.000><c> and</c><03:55:28.120><c> so</c><03:55:28.239><c> on</c><03:55:29.000><c> so</c>

03:55:29.189 --> 03:55:29.199 align:start position:0%
code or different languages and so on so
 

03:55:29.199 --> 03:55:30.670 align:start position:0%
code or different languages and so on so
this<03:55:29.279><c> is</c><03:55:29.399><c> a</c><03:55:29.520><c> nice</c><03:55:29.720><c> functionality</c><03:55:30.120><c> to</c><03:55:30.279><c> have</c><03:55:30.439><c> as</c>

03:55:30.670 --> 03:55:30.680 align:start position:0%
this is a nice functionality to have as
 

03:55:30.680 --> 03:55:32.229 align:start position:0%
this is a nice functionality to have as
well

03:55:32.229 --> 03:55:32.239 align:start position:0%
well
 

03:55:32.239 --> 03:55:34.830 align:start position:0%
well
um<03:55:33.239><c> and</c><03:55:33.439><c> then</c><03:55:33.880><c> the</c><03:55:34.040><c> other</c><03:55:34.239><c> thing</c><03:55:34.399><c> I</c><03:55:34.520><c> wanted</c><03:55:34.720><c> to</c>

03:55:34.830 --> 03:55:34.840 align:start position:0%
um and then the other thing I wanted to
 

03:55:34.840 --> 03:55:36.830 align:start position:0%
um and then the other thing I wanted to
mention<03:55:35.199><c> is</c><03:55:35.439><c> that</c><03:55:36.000><c> everything</c><03:55:36.359><c> we've</c><03:55:36.520><c> built</c>

03:55:36.830 --> 03:55:36.840 align:start position:0%
mention is that everything we've built
 

03:55:36.840 --> 03:55:39.469 align:start position:0%
mention is that everything we've built
here<03:55:37.120><c> this</c><03:55:37.199><c> is</c><03:55:37.359><c> only</c><03:55:37.760><c> the</c><03:55:37.880><c> pre-training</c><03:55:38.640><c> step</c>

03:55:39.469 --> 03:55:39.479 align:start position:0%
here this is only the pre-training step
 

03:55:39.479 --> 03:55:42.830 align:start position:0%
here this is only the pre-training step
so<03:55:40.279><c> um</c><03:55:40.560><c> the</c><03:55:40.680><c> GPT</c><03:55:41.199><c> here</c><03:55:41.439><c> is</c><03:55:41.640><c> a</c><03:55:42.199><c> it</c><03:55:42.359><c> dreams</c>

03:55:42.830 --> 03:55:42.840 align:start position:0%
so um the GPT here is a it dreams
 

03:55:42.840 --> 03:55:44.830 align:start position:0%
so um the GPT here is a it dreams
documents<03:55:43.319><c> it</c><03:55:43.399><c> just</c><03:55:43.560><c> predicts</c><03:55:43.880><c> the</c><03:55:43.920><c> next</c><03:55:44.319><c> to</c>

03:55:44.830 --> 03:55:44.840 align:start position:0%
documents it just predicts the next to
 

03:55:44.840 --> 03:55:46.349 align:start position:0%
documents it just predicts the next to
you<03:55:45.000><c> can't</c><03:55:45.319><c> talk</c><03:55:45.520><c> to</c><03:55:45.680><c> it</c><03:55:45.880><c> like</c><03:55:46.000><c> you</c><03:55:46.080><c> can</c><03:55:46.199><c> talk</c>

03:55:46.349 --> 03:55:46.359 align:start position:0%
you can't talk to it like you can talk
 

03:55:46.359 --> 03:55:49.630 align:start position:0%
you can't talk to it like you can talk
to<03:55:46.479><c> chat</c><03:55:46.720><c> GPT</c><03:55:47.479><c> uh</c><03:55:47.560><c> chat</c><03:55:47.800><c> GPT</c><03:55:48.800><c> if</c><03:55:48.920><c> you</c><03:55:49.040><c> wanted</c><03:55:49.319><c> to</c>

03:55:49.630 --> 03:55:49.640 align:start position:0%
to chat GPT uh chat GPT if you wanted to
 

03:55:49.640 --> 03:55:51.590 align:start position:0%
to chat GPT uh chat GPT if you wanted to
talk<03:55:49.800><c> to</c><03:55:49.960><c> the</c><03:55:50.120><c> model</c><03:55:50.640><c> we</c><03:55:50.760><c> have</c><03:55:50.880><c> to</c><03:55:51.080><c> fine-tune</c>

03:55:51.590 --> 03:55:51.600 align:start position:0%
talk to the model we have to fine-tune
 

03:55:51.600 --> 03:55:54.070 align:start position:0%
talk to the model we have to fine-tune
it<03:55:51.800><c> into</c><03:55:52.080><c> the</c><03:55:52.279><c> chat</c><03:55:52.680><c> format</c><03:55:53.600><c> and</c><03:55:53.720><c> it's</c><03:55:53.880><c> not</c>

03:55:54.070 --> 03:55:54.080 align:start position:0%
it into the chat format and it's not
 

03:55:54.080 --> 03:55:55.429 align:start position:0%
it into the chat format and it's not
actually<03:55:54.319><c> like</c><03:55:54.560><c> that</c><03:55:54.720><c> complicated</c><03:55:55.239><c> if</c><03:55:55.319><c> you're</c>

03:55:55.429 --> 03:55:55.439 align:start position:0%
actually like that complicated if you're
 

03:55:55.439 --> 03:55:58.149 align:start position:0%
actually like that complicated if you're
looking<03:55:55.640><c> at</c><03:55:55.760><c> supervised</c><03:55:56.239><c> fine-tuning</c><03:55:57.000><c> or</c><03:55:57.199><c> sft</c>

03:55:58.149 --> 03:55:58.159 align:start position:0%
looking at supervised fine-tuning or sft
 

03:55:58.159 --> 03:55:59.349 align:start position:0%
looking at supervised fine-tuning or sft
really<03:55:58.439><c> what</c><03:55:58.560><c> that</c><03:55:58.680><c> means</c><03:55:58.920><c> is</c><03:55:59.040><c> we're</c><03:55:59.199><c> just</c>

03:55:59.349 --> 03:55:59.359 align:start position:0%
really what that means is we're just
 

03:55:59.359 --> 03:56:01.550 align:start position:0%
really what that means is we're just
swapping<03:55:59.720><c> out</c><03:55:59.880><c> a</c><03:56:00.000><c> data</c><03:56:00.319><c> set</c><03:56:00.800><c> into</c><03:56:01.080><c> a</c><03:56:01.199><c> data</c><03:56:01.439><c> set</c>

03:56:01.550 --> 03:56:01.560 align:start position:0%
swapping out a data set into a data set
 

03:56:01.560 --> 03:56:03.149 align:start position:0%
swapping out a data set into a data set
that<03:56:01.640><c> is</c><03:56:01.760><c> a</c><03:56:01.840><c> lot</c><03:56:02.000><c> more</c><03:56:02.199><c> conversational</c><03:56:03.040><c> and</c>

03:56:03.149 --> 03:56:03.159 align:start position:0%
that is a lot more conversational and
 

03:56:03.159 --> 03:56:04.910 align:start position:0%
that is a lot more conversational and
there's<03:56:03.319><c> a</c><03:56:03.479><c> user</c><03:56:03.800><c> assistant</c><03:56:04.199><c> user</c><03:56:04.520><c> assistant</c>

03:56:04.910 --> 03:56:04.920 align:start position:0%
there's a user assistant user assistant
 

03:56:04.920 --> 03:56:06.830 align:start position:0%
there's a user assistant user assistant
kind<03:56:05.040><c> of</c><03:56:05.199><c> structure</c><03:56:06.000><c> and</c><03:56:06.120><c> we</c><03:56:06.239><c> just</c><03:56:06.359><c> fine-tune</c>

03:56:06.830 --> 03:56:06.840 align:start position:0%
kind of structure and we just fine-tune
 

03:56:06.840 --> 03:56:09.590 align:start position:0%
kind of structure and we just fine-tune
on<03:56:07.000><c> it</c><03:56:07.319><c> and</c><03:56:07.479><c> then</c><03:56:07.680><c> we</c><03:56:08.520><c> um</c><03:56:08.840><c> we</c><03:56:09.040><c> basically</c><03:56:09.399><c> fill</c>

03:56:09.590 --> 03:56:09.600 align:start position:0%
on it and then we um we basically fill
 

03:56:09.600 --> 03:56:11.830 align:start position:0%
on it and then we um we basically fill
in<03:56:09.760><c> the</c><03:56:09.920><c> user</c><03:56:10.239><c> tokens</c><03:56:10.680><c> and</c><03:56:10.880><c> we</c><03:56:11.319><c> sample</c><03:56:11.720><c> the</c>

03:56:11.830 --> 03:56:11.840 align:start position:0%
in the user tokens and we sample the
 

03:56:11.840 --> 03:56:13.750 align:start position:0%
in the user tokens and we sample the
assistant<03:56:12.279><c> tokens</c><03:56:12.960><c> it's</c><03:56:13.120><c> not</c><03:56:13.239><c> a</c><03:56:13.359><c> lot</c><03:56:13.520><c> more</c>

03:56:13.750 --> 03:56:13.760 align:start position:0%
assistant tokens it's not a lot more
 

03:56:13.760 --> 03:56:15.790 align:start position:0%
assistant tokens it's not a lot more
deeper<03:56:14.080><c> than</c><03:56:14.479><c> that</c><03:56:15.159><c> uh</c><03:56:15.279><c> but</c><03:56:15.399><c> basically</c><03:56:15.720><c> we</c>

03:56:15.790 --> 03:56:15.800 align:start position:0%
deeper than that uh but basically we
 

03:56:15.800 --> 03:56:17.429 align:start position:0%
deeper than that uh but basically we
swap<03:56:16.080><c> out</c><03:56:16.199><c> the</c><03:56:16.279><c> data</c><03:56:16.520><c> set</c><03:56:16.640><c> and</c><03:56:16.760><c> continue</c>

03:56:17.429 --> 03:56:17.439 align:start position:0%
swap out the data set and continue
 

03:56:17.439 --> 03:56:19.670 align:start position:0%
swap out the data set and continue
training<03:56:18.439><c> uh</c><03:56:18.560><c> but</c><03:56:18.680><c> for</c><03:56:18.840><c> now</c><03:56:19.239><c> we're</c><03:56:19.399><c> going</c><03:56:19.520><c> to</c>

03:56:19.670 --> 03:56:19.680 align:start position:0%
training uh but for now we're going to
 

03:56:19.680 --> 03:56:21.870 align:start position:0%
training uh but for now we're going to
stop<03:56:19.880><c> at</c><03:56:20.159><c> uh</c><03:56:20.479><c> pre-training</c><03:56:21.479><c> one</c><03:56:21.600><c> more</c><03:56:21.760><c> thing</c>

03:56:21.870 --> 03:56:21.880 align:start position:0%
stop at uh pre-training one more thing
 

03:56:21.880 --> 03:56:23.349 align:start position:0%
stop at uh pre-training one more thing
that<03:56:22.000><c> I</c><03:56:22.040><c> wanted</c><03:56:22.279><c> to</c><03:56:22.399><c> briefly</c><03:56:22.720><c> show</c><03:56:22.920><c> you</c><03:56:23.159><c> is</c>

03:56:23.349 --> 03:56:23.359 align:start position:0%
that I wanted to briefly show you is
 

03:56:23.359 --> 03:56:25.870 align:start position:0%
that I wanted to briefly show you is
that<03:56:23.680><c> of</c><03:56:23.840><c> course</c><03:56:24.520><c> what</c><03:56:24.640><c> we've</c><03:56:24.880><c> built</c><03:56:25.159><c> up</c><03:56:25.560><c> today</c>

03:56:25.870 --> 03:56:25.880 align:start position:0%
that of course what we've built up today
 

03:56:25.880 --> 03:56:27.910 align:start position:0%
that of course what we've built up today
was<03:56:26.040><c> building</c><03:56:26.319><c> towards</c><03:56:26.880><c> nanog</c><03:56:27.159><c> GPT</c><03:56:27.680><c> which</c><03:56:27.800><c> is</c>

03:56:27.910 --> 03:56:27.920 align:start position:0%
was building towards nanog GPT which is
 

03:56:27.920 --> 03:56:30.790 align:start position:0%
was building towards nanog GPT which is
this<03:56:28.159><c> repository</c><03:56:28.680><c> from</c><03:56:29.120><c> earlier</c><03:56:30.120><c> uh</c><03:56:30.279><c> but</c><03:56:30.520><c> also</c>

03:56:30.790 --> 03:56:30.800 align:start position:0%
this repository from earlier uh but also
 

03:56:30.800 --> 03:56:32.389 align:start position:0%
this repository from earlier uh but also
there's<03:56:31.040><c> actually</c><03:56:31.319><c> another</c><03:56:31.720><c> nanog</c><03:56:32.040><c> GPT</c>

03:56:32.389 --> 03:56:32.399 align:start position:0%
there's actually another nanog GPT
 

03:56:32.399 --> 03:56:34.630 align:start position:0%
there's actually another nanog GPT
implementation<03:56:33.000><c> and</c><03:56:33.080><c> it's</c><03:56:33.279><c> hiding</c><03:56:33.680><c> in</c><03:56:33.840><c> a</c><03:56:34.399><c> more</c>

03:56:34.630 --> 03:56:34.640 align:start position:0%
implementation and it's hiding in a more
 

03:56:34.640 --> 03:56:36.389 align:start position:0%
implementation and it's hiding in a more
recent<03:56:35.000><c> project</c><03:56:35.279><c> that</c><03:56:35.399><c> I've</c><03:56:35.520><c> been</c><03:56:35.640><c> working</c><03:56:35.920><c> on</c>

03:56:36.389 --> 03:56:36.399 align:start position:0%
recent project that I've been working on
 

03:56:36.399 --> 03:56:41.590 align:start position:0%
recent project that I've been working on
called<03:56:36.640><c> llm</c><03:56:37.520><c> Doc</c><03:56:38.520><c> and</c><03:56:38.880><c> lm.</c><03:56:39.520><c> C</c><03:56:39.800><c> is</c><03:56:39.920><c> a</c><03:56:40.560><c> pure</c><03:56:40.920><c> Cuda</c>

03:56:41.590 --> 03:56:41.600 align:start position:0%
called llm Doc and lm. C is a pure Cuda
 

03:56:41.600 --> 03:56:44.870 align:start position:0%
called llm Doc and lm. C is a pure Cuda
implementation<03:56:42.319><c> of</c><03:56:42.439><c> gpt2</c><03:56:43.040><c> or</c><03:56:43.199><c> gpt3</c><03:56:43.800><c> training</c>

03:56:44.870 --> 03:56:44.880 align:start position:0%
implementation of gpt2 or gpt3 training
 

03:56:44.880 --> 03:56:47.630 align:start position:0%
implementation of gpt2 or gpt3 training
and<03:56:45.120><c> it</c><03:56:45.279><c> just</c><03:56:45.479><c> directly</c><03:56:45.960><c> uses</c><03:56:46.760><c> uh</c><03:56:46.960><c> Cuda</c><03:56:47.399><c> and</c><03:56:47.479><c> is</c>

03:56:47.630 --> 03:56:47.640 align:start position:0%
and it just directly uses uh Cuda and is
 

03:56:47.640 --> 03:56:51.189 align:start position:0%
and it just directly uses uh Cuda and is
written<03:56:47.880><c> as</c><03:56:48.720><c> Cuda</c><03:56:49.720><c> now</c><03:56:49.840><c> the</c><03:56:49.960><c> nanog</c><03:56:50.199><c> gbt</c><03:56:50.720><c> here</c>

03:56:51.189 --> 03:56:51.199 align:start position:0%
written as Cuda now the nanog gbt here
 

03:56:51.199 --> 03:56:53.710 align:start position:0%
written as Cuda now the nanog gbt here
acts<03:56:51.479><c> as</c><03:56:51.720><c> reference</c><03:56:52.120><c> code</c><03:56:52.359><c> in</c><03:56:52.560><c> pytorch</c><03:56:53.279><c> to</c><03:56:53.600><c> the</c>

03:56:53.710 --> 03:56:53.720 align:start position:0%
acts as reference code in pytorch to the
 

03:56:53.720 --> 03:56:55.349 align:start position:0%
acts as reference code in pytorch to the
C<03:56:53.960><c> implementation</c><03:56:54.720><c> so</c><03:56:54.840><c> we're</c><03:56:54.960><c> trying</c><03:56:55.159><c> to</c>

03:56:55.349 --> 03:56:55.359 align:start position:0%
C implementation so we're trying to
 

03:56:55.359 --> 03:56:57.269 align:start position:0%
C implementation so we're trying to
exactly<03:56:55.800><c> match</c><03:56:56.040><c> up</c><03:56:56.279><c> the</c><03:56:56.399><c> two</c><03:56:56.960><c> but</c><03:56:57.080><c> we're</c>

03:56:57.269 --> 03:56:57.279 align:start position:0%
exactly match up the two but we're
 

03:56:57.279 --> 03:56:59.790 align:start position:0%
exactly match up the two but we're
hoping<03:56:57.520><c> that</c><03:56:57.640><c> the</c><03:56:57.720><c> C</c><03:56:58.000><c> Cuda</c><03:56:58.479><c> is</c><03:56:59.000><c> faster</c><03:56:59.560><c> and</c><03:56:59.720><c> of</c>

03:56:59.790 --> 03:56:59.800 align:start position:0%
hoping that the C Cuda is faster and of
 

03:56:59.800 --> 03:57:01.189 align:start position:0%
hoping that the C Cuda is faster and of
course<03:56:59.960><c> currently</c><03:57:00.439><c> that</c><03:57:00.560><c> seems</c><03:57:00.800><c> to</c><03:57:00.880><c> be</c><03:57:01.000><c> the</c>

03:57:01.189 --> 03:57:01.199 align:start position:0%
course currently that seems to be the
 

03:57:01.199 --> 03:57:04.030 align:start position:0%
course currently that seems to be the
case<03:57:02.199><c> um</c><03:57:02.399><c> because</c><03:57:02.600><c> it</c><03:57:02.720><c> is</c><03:57:02.840><c> a</c><03:57:03.040><c> direct</c><03:57:03.399><c> optimized</c>

03:57:04.030 --> 03:57:04.040 align:start position:0%
case um because it is a direct optimized
 

03:57:04.040 --> 03:57:06.910 align:start position:0%
case um because it is a direct optimized
implementation<03:57:05.040><c> so</c><03:57:05.199><c> train</c><03:57:05.479><c> gpt2</c><03:57:06.199><c> Pi</c><03:57:06.479><c> in</c><03:57:06.640><c> LL</c>

03:57:06.910 --> 03:57:06.920 align:start position:0%
implementation so train gpt2 Pi in LL
 

03:57:06.920 --> 03:57:10.030 align:start position:0%
implementation so train gpt2 Pi in LL
M.C<03:57:07.920><c> is</c><03:57:08.120><c> basically</c><03:57:08.479><c> the</c><03:57:08.560><c> nanog</c><03:57:08.840><c> GPT</c><03:57:09.800><c> and</c><03:57:09.920><c> when</c>

03:57:10.030 --> 03:57:10.040 align:start position:0%
M.C is basically the nanog GPT and when
 

03:57:10.040 --> 03:57:12.870 align:start position:0%
M.C is basically the nanog GPT and when
you<03:57:10.159><c> scroll</c><03:57:10.520><c> through</c><03:57:10.880><c> this</c><03:57:11.319><c> file</c><03:57:12.080><c> you'll</c><03:57:12.520><c> find</c>

03:57:12.870 --> 03:57:12.880 align:start position:0%
you scroll through this file you'll find
 

03:57:12.880 --> 03:57:16.229 align:start position:0%
you scroll through this file you'll find
a<03:57:13.040><c> lot</c><03:57:13.159><c> of</c><03:57:13.439><c> things</c><03:57:13.960><c> that</c><03:57:14.439><c> very</c><03:57:14.640><c> much</c><03:57:14.840><c> look</c><03:57:15.120><c> like</c>

03:57:16.229 --> 03:57:16.239 align:start position:0%
a lot of things that very much look like
 

03:57:16.239 --> 03:57:19.070 align:start position:0%
a lot of things that very much look like
um<03:57:17.239><c> things</c><03:57:17.479><c> that</c><03:57:17.640><c> we've</c><03:57:17.840><c> built</c><03:57:18.080><c> up</c><03:57:18.479><c> in</c><03:57:18.880><c> this</c>

03:57:19.070 --> 03:57:19.080 align:start position:0%
um things that we've built up in this
 

03:57:19.080 --> 03:57:21.389 align:start position:0%
um things that we've built up in this
lecture<03:57:20.000><c> and</c><03:57:20.120><c> then</c><03:57:20.239><c> when</c><03:57:20.319><c> you</c><03:57:20.479><c> look</c><03:57:20.640><c> at</c><03:57:21.040><c> train</c>

03:57:21.389 --> 03:57:21.399 align:start position:0%
lecture and then when you look at train
 

03:57:21.399 --> 03:57:25.149 align:start position:0%
lecture and then when you look at train
gpt2<03:57:22.399><c> docu</c><03:57:23.399><c> uh</c><03:57:23.560><c> this</c><03:57:23.640><c> is</c><03:57:23.840><c> the</c><03:57:24.199><c> C</c><03:57:24.520><c> Cuda</c>

03:57:25.149 --> 03:57:25.159 align:start position:0%
gpt2 docu uh this is the C Cuda
 

03:57:25.159 --> 03:57:27.550 align:start position:0%
gpt2 docu uh this is the C Cuda
implementation<03:57:26.159><c> so</c><03:57:26.359><c> there's</c><03:57:26.520><c> a</c><03:57:26.640><c> lot</c><03:57:26.800><c> of</c><03:57:27.040><c> MPI</c>

03:57:27.550 --> 03:57:27.560 align:start position:0%
implementation so there's a lot of MPI
 

03:57:27.560 --> 03:57:30.189 align:start position:0%
implementation so there's a lot of MPI
nickel<03:57:28.199><c> GPU</c><03:57:28.800><c> Cuda</c>

03:57:30.189 --> 03:57:30.199 align:start position:0%
nickel GPU Cuda
 

03:57:30.199 --> 03:57:32.510 align:start position:0%
nickel GPU Cuda
cc++<03:57:31.199><c> and</c><03:57:31.520><c> you</c><03:57:31.600><c> have</c><03:57:31.680><c> to</c><03:57:31.760><c> be</c><03:57:31.920><c> familiar</c><03:57:32.279><c> with</c>

03:57:32.510 --> 03:57:32.520 align:start position:0%
cc++ and you have to be familiar with
 

03:57:32.520 --> 03:57:37.389 align:start position:0%
cc++ and you have to be familiar with
that<03:57:33.279><c> but</c><03:57:33.800><c> uh</c><03:57:35.080><c> um</c><03:57:36.080><c> when</c><03:57:36.279><c> this</c><03:57:36.399><c> is</c><03:57:36.520><c> built</c><03:57:36.840><c> up</c><03:57:37.279><c> we</c>

03:57:37.389 --> 03:57:37.399 align:start position:0%
that but uh um when this is built up we
 

03:57:37.399 --> 03:57:39.510 align:start position:0%
that but uh um when this is built up we
can<03:57:37.560><c> actually</c><03:57:37.800><c> run</c><03:57:38.159><c> the</c><03:57:38.279><c> two</c><03:57:38.479><c> side</c><03:57:38.680><c> by</c><03:57:38.920><c> side</c>

03:57:39.510 --> 03:57:39.520 align:start position:0%
can actually run the two side by side
 

03:57:39.520 --> 03:57:40.790 align:start position:0%
can actually run the two side by side
and<03:57:39.640><c> they're</c><03:57:39.800><c> going</c><03:57:39.920><c> to</c><03:57:40.040><c> produce</c><03:57:40.359><c> the</c><03:57:40.479><c> exact</c>

03:57:40.790 --> 03:57:40.800 align:start position:0%
and they're going to produce the exact
 

03:57:40.800 --> 03:57:43.510 align:start position:0%
and they're going to produce the exact
same<03:57:41.080><c> results</c><03:57:41.800><c> but</c><03:57:42.080><c> lm.</c><03:57:42.600><c> C</c><03:57:42.800><c> actually</c><03:57:43.199><c> runs</c>

03:57:43.510 --> 03:57:43.520 align:start position:0%
same results but lm. C actually runs
 

03:57:43.520 --> 03:57:45.910 align:start position:0%
same results but lm. C actually runs
faster<03:57:43.800><c> so</c><03:57:43.960><c> let's</c><03:57:44.239><c> see</c><03:57:44.479><c> that</c><03:57:45.159><c> so</c><03:57:45.319><c> on</c><03:57:45.399><c> the</c><03:57:45.560><c> left</c>

03:57:45.910 --> 03:57:45.920 align:start position:0%
faster so let's see that so on the left
 

03:57:45.920 --> 03:57:49.790 align:start position:0%
faster so let's see that so on the left
I<03:57:46.120><c> have</c><03:57:46.720><c> pytorch</c><03:57:47.720><c> a</c><03:57:47.920><c> nanog</c><03:57:48.239><c> GPT</c><03:57:49.000><c> looking</c><03:57:49.319><c> thing</c>

03:57:49.790 --> 03:57:49.800 align:start position:0%
I have pytorch a nanog GPT looking thing
 

03:57:49.800 --> 03:57:52.309 align:start position:0%
I have pytorch a nanog GPT looking thing
on<03:57:49.920><c> the</c><03:57:50.080><c> right</c><03:57:50.239><c> I</c><03:57:50.359><c> have</c><03:57:50.479><c> the</c><03:57:50.560><c> llmc</c><03:57:51.239><c> call</c><03:57:52.000><c> and</c>

03:57:52.309 --> 03:57:52.319 align:start position:0%
on the right I have the llmc call and
 

03:57:52.319 --> 03:57:54.229 align:start position:0%
on the right I have the llmc call and
here<03:57:52.439><c> I'm</c><03:57:52.560><c> going</c><03:57:52.640><c> to</c><03:57:53.000><c> launch</c><03:57:53.319><c> the</c>

03:57:54.229 --> 03:57:54.239 align:start position:0%
here I'm going to launch the
 

03:57:54.239 --> 03:57:55.950 align:start position:0%
here I'm going to launch the
two<03:57:55.239><c> both</c><03:57:55.359><c> of</c><03:57:55.479><c> these</c><03:57:55.600><c> are</c><03:57:55.720><c> going</c><03:57:55.800><c> to</c><03:57:55.880><c> be</c>

03:57:55.950 --> 03:57:55.960 align:start position:0%
two both of these are going to be
 

03:57:55.960 --> 03:57:57.830 align:start position:0%
two both of these are going to be
running<03:57:56.159><c> on</c><03:57:56.239><c> a</c><03:57:56.319><c> single</c><03:57:56.560><c> GPU</c><03:57:57.279><c> and</c><03:57:57.479><c> here</c><03:57:57.680><c> I'm</c>

03:57:57.830 --> 03:57:57.840 align:start position:0%
running on a single GPU and here I'm
 

03:57:57.840 --> 03:58:00.309 align:start position:0%
running on a single GPU and here I'm
putting<03:57:58.080><c> the</c><03:57:58.199><c> lm.</c><03:57:58.720><c> C</c><03:57:58.880><c> on</c><03:57:59.000><c> GPU</c><03:57:59.399><c> 1</c><03:57:59.840><c> and</c><03:57:59.960><c> this</c><03:58:00.159><c> one</c>

03:58:00.309 --> 03:58:00.319 align:start position:0%
putting the lm. C on GPU 1 and this one
 

03:58:00.319 --> 03:58:05.229 align:start position:0%
putting the lm. C on GPU 1 and this one
will<03:58:00.520><c> grab</c><03:58:01.159><c> uh</c><03:58:01.640><c> gpu0</c><03:58:02.359><c> by</c><03:58:02.680><c> default</c><03:58:03.680><c> and</c>

03:58:05.229 --> 03:58:05.239 align:start position:0%
will grab uh gpu0 by default and
 

03:58:05.239 --> 03:58:08.670 align:start position:0%
will grab uh gpu0 by default and
then<03:58:06.239><c> we</c><03:58:06.319><c> can</c><03:58:06.439><c> see</c><03:58:06.640><c> here</c><03:58:06.760><c> that</c><03:58:06.920><c> lm.</c><03:58:07.520><c> c</c>

03:58:08.670 --> 03:58:08.680 align:start position:0%
then we can see here that lm. c
 

03:58:08.680 --> 03:58:11.710 align:start position:0%
then we can see here that lm. c
compiled<03:58:09.680><c> and</c><03:58:09.920><c> then</c><03:58:10.800><c> allocate</c><03:58:11.239><c> space</c><03:58:11.560><c> and</c>

03:58:11.710 --> 03:58:11.720 align:start position:0%
compiled and then allocate space and
 

03:58:11.720 --> 03:58:12.630 align:start position:0%
compiled and then allocate space and
it's

03:58:12.630 --> 03:58:12.640 align:start position:0%
it's
 

03:58:12.640 --> 03:58:15.389 align:start position:0%
it's
stepping<03:58:13.640><c> so</c>

03:58:15.389 --> 03:58:15.399 align:start position:0%
stepping so
 

03:58:15.399 --> 03:58:17.710 align:start position:0%
stepping so
basically<03:58:16.080><c> uh</c><03:58:16.520><c> meanwhile</c><03:58:17.000><c> P</c><03:58:17.159><c> torch</c><03:58:17.399><c> is</c><03:58:17.479><c> still</c>

03:58:17.710 --> 03:58:17.720 align:start position:0%
basically uh meanwhile P torch is still
 

03:58:17.720 --> 03:58:19.870 align:start position:0%
basically uh meanwhile P torch is still
compiling<03:58:18.479><c> because</c><03:58:18.720><c> torch</c><03:58:19.040><c> compile</c><03:58:19.479><c> is</c><03:58:19.600><c> a</c><03:58:19.720><c> bit</c>

03:58:19.870 --> 03:58:19.880 align:start position:0%
compiling because torch compile is a bit
 

03:58:19.880 --> 03:58:24.389 align:start position:0%
compiling because torch compile is a bit
slower<03:58:20.600><c> here</c><03:58:21.279><c> than</c><03:58:21.560><c> the</c><03:58:21.840><c> lm.</c><03:58:22.520><c> C</c><03:58:22.880><c> nbcc</c><03:58:23.640><c> Cuda</c>

03:58:24.389 --> 03:58:24.399 align:start position:0%
slower here than the lm. C nbcc Cuda
 

03:58:24.399 --> 03:58:26.510 align:start position:0%
slower here than the lm. C nbcc Cuda
compile<03:58:25.399><c> and</c><03:58:25.520><c> so</c><03:58:25.680><c> this</c><03:58:25.840><c> program</c><03:58:26.120><c> has</c><03:58:26.279><c> already</c>

03:58:26.510 --> 03:58:26.520 align:start position:0%
compile and so this program has already
 

03:58:26.520 --> 03:58:28.630 align:start position:0%
compile and so this program has already
started<03:58:26.840><c> running</c><03:58:27.720><c> and</c><03:58:28.159><c> uh</c><03:58:28.279><c> we're</c><03:58:28.439><c> still</c>

03:58:28.630 --> 03:58:28.640 align:start position:0%
started running and uh we're still
 

03:58:28.640 --> 03:58:30.790 align:start position:0%
started running and uh we're still
waiting<03:58:29.000><c> here</c><03:58:29.120><c> for</c><03:58:29.359><c> torch</c><03:58:29.640><c> compile</c><03:58:30.520><c> now</c><03:58:30.680><c> of</c>

03:58:30.790 --> 03:58:30.800 align:start position:0%
waiting here for torch compile now of
 

03:58:30.800 --> 03:58:33.030 align:start position:0%
waiting here for torch compile now of
course<03:58:31.760><c> uh</c><03:58:32.040><c> this</c><03:58:32.239><c> is</c><03:58:32.359><c> a</c><03:58:32.479><c> very</c><03:58:32.680><c> specific</c>

03:58:33.030 --> 03:58:33.040 align:start position:0%
course uh this is a very specific
 

03:58:33.040 --> 03:58:35.590 align:start position:0%
course uh this is a very specific
implementation<03:58:33.479><c> to</c><03:58:33.640><c> gpt2</c><03:58:34.199><c> and</c><03:58:34.359><c> 3</c><03:58:35.000><c> a</c><03:58:35.159><c> pytorch</c>

03:58:35.590 --> 03:58:35.600 align:start position:0%
implementation to gpt2 and 3 a pytorch
 

03:58:35.600 --> 03:58:37.110 align:start position:0%
implementation to gpt2 and 3 a pytorch
is<03:58:35.680><c> a</c><03:58:35.800><c> very</c><03:58:36.000><c> general</c><03:58:36.439><c> neural</c><03:58:36.800><c> network</c>

03:58:37.110 --> 03:58:37.120 align:start position:0%
is a very general neural network
 

03:58:37.120 --> 03:58:38.389 align:start position:0%
is a very general neural network
framework<03:58:37.520><c> so</c><03:58:37.680><c> they're</c><03:58:37.800><c> not</c><03:58:38.000><c> exactly</c>

03:58:38.389 --> 03:58:38.399 align:start position:0%
framework so they're not exactly
 

03:58:38.399 --> 03:58:39.910 align:start position:0%
framework so they're not exactly
comparable<03:58:39.080><c> but</c><03:58:39.199><c> if</c><03:58:39.279><c> you're</c><03:58:39.399><c> only</c><03:58:39.600><c> interested</c>

03:58:39.910 --> 03:58:39.920 align:start position:0%
comparable but if you're only interested
 

03:58:39.920 --> 03:58:43.110 align:start position:0%
comparable but if you're only interested
in<03:58:40.000><c> training</c><03:58:40.279><c> gpt2</c><03:58:40.720><c> and</c><03:58:40.840><c> 3</c><03:58:41.359><c> lm.</c><03:58:41.920><c> C</c><03:58:42.239><c> is</c><03:58:42.840><c> very</c>

03:58:43.110 --> 03:58:43.120 align:start position:0%
in training gpt2 and 3 lm. C is very
 

03:58:43.120 --> 03:58:46.510 align:start position:0%
in training gpt2 and 3 lm. C is very
fast<03:58:43.840><c> it</c><03:58:44.159><c> takes</c><03:58:44.680><c> less</c><03:58:45.000><c> space</c><03:58:45.680><c> it's</c><03:58:45.960><c> faster</c><03:58:46.319><c> to</c>

03:58:46.510 --> 03:58:46.520 align:start position:0%
fast it takes less space it's faster to
 

03:58:46.520 --> 03:58:49.950 align:start position:0%
fast it takes less space it's faster to
start<03:58:47.439><c> and</c><03:58:47.840><c> it's</c><03:58:48.399><c> faster</c><03:58:48.840><c> per</c>

03:58:49.950 --> 03:58:49.960 align:start position:0%
start and it's faster per
 

03:58:49.960 --> 03:58:53.269 align:start position:0%
start and it's faster per
step<03:58:50.960><c> and</c><03:58:51.040><c> so</c><03:58:51.279><c> P</c><03:58:51.640><c> started</c><03:58:51.920><c> to</c><03:58:52.080><c> Stepping</c><03:58:52.479><c> here</c>

03:58:53.269 --> 03:58:53.279 align:start position:0%
step and so P started to Stepping here
 

03:58:53.279 --> 03:58:54.790 align:start position:0%
step and so P started to Stepping here
and<03:58:53.479><c> as</c><03:58:53.600><c> you</c><03:58:53.680><c> can</c><03:58:53.800><c> see</c><03:58:54.000><c> we're</c><03:58:54.319><c> running</c><03:58:54.600><c> at</c>

03:58:54.790 --> 03:58:54.800 align:start position:0%
and as you can see we're running at
 

03:58:54.800 --> 03:58:57.870 align:start position:0%
and as you can see we're running at
about<03:58:55.319><c> 223,000</c><03:58:56.319><c> tokens</c><03:58:56.680><c> per</c><03:58:56.840><c> second</c><03:58:57.159><c> here</c><03:58:57.680><c> and</c>

03:58:57.870 --> 03:58:57.880 align:start position:0%
about 223,000 tokens per second here and
 

03:58:57.880 --> 03:59:02.990 align:start position:0%
about 223,000 tokens per second here and
about<03:58:58.520><c> 185,000</c><03:58:59.520><c> tokens</c><03:58:59.880><c> per</c><03:59:00.080><c> second</c><03:59:00.880><c> here</c><03:59:02.000><c> um</c>

03:59:02.990 --> 03:59:03.000 align:start position:0%
about 185,000 tokens per second here um
 

03:59:03.000 --> 03:59:05.149 align:start position:0%
about 185,000 tokens per second here um
so<03:59:03.319><c> quite</c><03:59:03.479><c> a</c><03:59:03.560><c> bit</c><03:59:03.680><c> slower</c><03:59:04.640><c> but</c><03:59:04.760><c> I</c><03:59:04.880><c> don't</c><03:59:05.040><c> have</c>

03:59:05.149 --> 03:59:05.159 align:start position:0%
so quite a bit slower but I don't have
 

03:59:05.159 --> 03:59:08.229 align:start position:0%
so quite a bit slower but I don't have
full<03:59:05.399><c> confidence</c><03:59:05.880><c> that</c><03:59:06.080><c> I</c><03:59:06.800><c> exactly</c><03:59:07.720><c> squeezed</c>

03:59:08.229 --> 03:59:08.239 align:start position:0%
full confidence that I exactly squeezed
 

03:59:08.239 --> 03:59:09.429 align:start position:0%
full confidence that I exactly squeezed
out<03:59:08.359><c> all</c><03:59:08.479><c> the</c><03:59:08.560><c> juice</c><03:59:08.800><c> from</c><03:59:08.920><c> the</c><03:59:09.040><c> pytorch</c>

03:59:09.429 --> 03:59:09.439 align:start position:0%
out all the juice from the pytorch
 

03:59:09.439 --> 03:59:11.630 align:start position:0%
out all the juice from the pytorch
implementation<03:59:10.439><c> but</c><03:59:10.600><c> the</c><03:59:10.720><c> important</c><03:59:11.080><c> thing</c>

03:59:11.630 --> 03:59:11.640 align:start position:0%
implementation but the important thing
 

03:59:11.640 --> 03:59:14.229 align:start position:0%
implementation but the important thing
here<03:59:11.920><c> is</c><03:59:12.120><c> notice</c><03:59:12.520><c> that</c><03:59:12.720><c> if</c><03:59:12.880><c> I</c><03:59:13.120><c> Aline</c><03:59:13.439><c> up</c><03:59:14.120><c> the</c>

03:59:14.229 --> 03:59:14.239 align:start position:0%
here is notice that if I Aline up the
 

03:59:14.239 --> 03:59:16.429 align:start position:0%
here is notice that if I Aline up the
steps<03:59:14.960><c> you</c><03:59:15.040><c> will</c><03:59:15.239><c> see</c><03:59:15.399><c> that</c><03:59:15.560><c> the</c><03:59:15.680><c> losses</c><03:59:16.159><c> and</c>

03:59:16.429 --> 03:59:16.439 align:start position:0%
steps you will see that the losses and
 

03:59:16.439 --> 03:59:18.510 align:start position:0%
steps you will see that the losses and
Norms<03:59:17.000><c> that</c><03:59:17.120><c> are</c><03:59:17.279><c> printed</c><03:59:17.640><c> between</c><03:59:17.960><c> these</c><03:59:18.120><c> two</c>

03:59:18.510 --> 03:59:18.520 align:start position:0%
Norms that are printed between these two
 

03:59:18.520 --> 03:59:19.349 align:start position:0%
Norms that are printed between these two
are

03:59:19.349 --> 03:59:19.359 align:start position:0%
are
 

03:59:19.359 --> 03:59:21.590 align:start position:0%
are
identical<03:59:20.359><c> so</c><03:59:20.640><c> on</c><03:59:20.760><c> the</c><03:59:20.880><c> left</c><03:59:21.080><c> we</c><03:59:21.159><c> have</c><03:59:21.279><c> the</c><03:59:21.399><c> pie</c>

03:59:21.590 --> 03:59:21.600 align:start position:0%
identical so on the left we have the pie
 

03:59:21.600 --> 03:59:23.990 align:start position:0%
identical so on the left we have the pie
torch<03:59:22.080><c> and</c><03:59:22.199><c> on</c><03:59:22.359><c> the</c><03:59:22.560><c> right</c><03:59:23.279><c> this</c><03:59:23.520><c> C</c>

03:59:23.990 --> 03:59:24.000 align:start position:0%
torch and on the right this C
 

03:59:24.000 --> 03:59:25.910 align:start position:0%
torch and on the right this C
implementation<03:59:24.720><c> and</c><03:59:24.880><c> they're</c><03:59:25.159><c> the</c><03:59:25.319><c> same</c>

03:59:25.910 --> 03:59:25.920 align:start position:0%
implementation and they're the same
 

03:59:25.920 --> 03:59:28.750 align:start position:0%
implementation and they're the same
except<03:59:26.239><c> this</c><03:59:26.319><c> one</c><03:59:26.920><c> runs</c><03:59:27.319><c> faster</c><03:59:28.319><c> uh</c><03:59:28.439><c> so</c><03:59:28.600><c> that's</c>

03:59:28.750 --> 03:59:28.760 align:start position:0%
except this one runs faster uh so that's
 

03:59:28.760 --> 03:59:30.590 align:start position:0%
except this one runs faster uh so that's
kind<03:59:28.880><c> of</c><03:59:29.680><c> I</c><03:59:29.760><c> wanted</c><03:59:30.000><c> to</c><03:59:30.120><c> show</c><03:59:30.279><c> you</c><03:59:30.399><c> also</c>

03:59:30.590 --> 03:59:30.600 align:start position:0%
kind of I wanted to show you also
 

03:59:30.600 --> 03:59:33.389 align:start position:0%
kind of I wanted to show you also
briefly<03:59:30.880><c> lm.</c><03:59:31.399><c> C</c><03:59:32.199><c> and</c><03:59:32.640><c> this</c><03:59:32.760><c> is</c><03:59:32.880><c> a</c><03:59:33.000><c> parallel</c>

03:59:33.389 --> 03:59:33.399 align:start position:0%
briefly lm. C and this is a parallel
 

03:59:33.399 --> 03:59:35.070 align:start position:0%
briefly lm. C and this is a parallel
implementation<03:59:34.080><c> and</c><03:59:34.199><c> it's</c><03:59:34.399><c> also</c><03:59:34.600><c> something</c>

03:59:35.070 --> 03:59:35.080 align:start position:0%
implementation and it's also something
 

03:59:35.080 --> 03:59:36.990 align:start position:0%
implementation and it's also something
that<03:59:35.159><c> you</c><03:59:35.319><c> may</c><03:59:35.479><c> want</c><03:59:35.600><c> to</c><03:59:36.319><c> uh</c><03:59:36.439><c> play</c><03:59:36.680><c> with</c><03:59:36.840><c> or</c>

03:59:36.990 --> 03:59:37.000 align:start position:0%
that you may want to uh play with or
 

03:59:37.000 --> 03:59:39.670 align:start position:0%
that you may want to uh play with or
look<03:59:37.199><c> at</c><03:59:37.760><c> and</c><03:59:38.120><c> um</c><03:59:38.359><c> it's</c><03:59:38.560><c> kind</c><03:59:38.640><c> of</c><03:59:38.800><c> interesting</c>

03:59:39.670 --> 03:59:39.680 align:start position:0%
look at and um it's kind of interesting
 

03:59:39.680 --> 03:59:40.950 align:start position:0%
look at and um it's kind of interesting
okay<03:59:39.800><c> so</c><03:59:39.960><c> at</c><03:59:40.080><c> this</c><03:59:40.199><c> point</c><03:59:40.359><c> I</c><03:59:40.439><c> should</c><03:59:40.640><c> probably</c>

03:59:40.950 --> 03:59:40.960 align:start position:0%
okay so at this point I should probably
 

03:59:40.960 --> 03:59:42.710 align:start position:0%
okay so at this point I should probably
start<03:59:41.319><c> wrapping</c><03:59:41.640><c> up</c><03:59:41.800><c> the</c><03:59:41.920><c> video</c><03:59:42.359><c> because</c><03:59:42.640><c> I</c>

03:59:42.710 --> 03:59:42.720 align:start position:0%
start wrapping up the video because I
 

03:59:42.720 --> 03:59:44.349 align:start position:0%
start wrapping up the video because I
think<03:59:42.880><c> it's</c><03:59:43.040><c> getting</c><03:59:43.439><c> way</c><03:59:43.600><c> longer</c><03:59:44.120><c> than</c><03:59:44.239><c> I</c>

03:59:44.349 --> 03:59:44.359 align:start position:0%
think it's getting way longer than I
 

03:59:44.359 --> 03:59:46.750 align:start position:0%
think it's getting way longer than I
anticipated<03:59:45.319><c> uh</c><03:59:45.479><c> but</c><03:59:45.600><c> we</c><03:59:45.760><c> did</c><03:59:45.960><c> Cover</c><03:59:46.279><c> a</c><03:59:46.439><c> lot</c><03:59:46.560><c> of</c>

03:59:46.750 --> 03:59:46.760 align:start position:0%
anticipated uh but we did Cover a lot of
 

03:59:46.760 --> 03:59:48.030 align:start position:0%
anticipated uh but we did Cover a lot of
ground<03:59:47.120><c> and</c><03:59:47.199><c> we</c><03:59:47.319><c> built</c><03:59:47.600><c> everything</c><03:59:47.880><c> from</c>

03:59:48.030 --> 03:59:48.040 align:start position:0%
ground and we built everything from
 

03:59:48.040 --> 03:59:50.950 align:start position:0%
ground and we built everything from
scratch<03:59:48.880><c> so</c><03:59:49.040><c> as</c><03:59:49.120><c> a</c><03:59:49.239><c> brief</c><03:59:49.640><c> summary</c><03:59:50.640><c> we</c><03:59:50.720><c> were</c>

03:59:50.950 --> 03:59:50.960 align:start position:0%
scratch so as a brief summary we were
 

03:59:50.960 --> 03:59:54.990 align:start position:0%
scratch so as a brief summary we were
looking<03:59:51.359><c> at</c><03:59:51.600><c> the</c><03:59:52.159><c> gpt2</c><03:59:53.159><c> and</c><03:59:53.359><c> GPT</c><03:59:53.920><c> 3</c>

03:59:54.990 --> 03:59:55.000 align:start position:0%
looking at the gpt2 and GPT 3
 

03:59:55.000 --> 03:59:57.429 align:start position:0%
looking at the gpt2 and GPT 3
papers<03:59:56.000><c> we</c><03:59:56.159><c> were</c><03:59:56.359><c> looking</c><03:59:56.640><c> at</c><03:59:56.800><c> how</c><03:59:56.920><c> you</c><03:59:57.080><c> set</c><03:59:57.239><c> up</c>

03:59:57.429 --> 03:59:57.439 align:start position:0%
papers we were looking at how you set up
 

03:59:57.439 --> 03:59:59.469 align:start position:0%
papers we were looking at how you set up
these<03:59:57.600><c> training</c><03:59:57.960><c> runs</c><03:59:58.960><c> uh</c><03:59:59.080><c> and</c><03:59:59.199><c> all</c><03:59:59.359><c> the</c>

03:59:59.469 --> 03:59:59.479 align:start position:0%
these training runs uh and all the
 

03:59:59.479 --> 04:00:01.229 align:start position:0%
these training runs uh and all the
considerations<04:00:00.080><c> involved</c><04:00:00.720><c> we</c><04:00:00.880><c> wrote</c>

04:00:01.229 --> 04:00:01.239 align:start position:0%
considerations involved we wrote
 

04:00:01.239 --> 04:00:03.389 align:start position:0%
considerations involved we wrote
everything<04:00:01.520><c> from</c><04:00:01.720><c> scratch</c><04:00:02.720><c> and</c><04:00:02.880><c> then</c><04:00:03.040><c> we</c><04:00:03.120><c> saw</c>

04:00:03.389 --> 04:00:03.399 align:start position:0%
everything from scratch and then we saw
 

04:00:03.399 --> 04:00:04.790 align:start position:0%
everything from scratch and then we saw
that<04:00:03.520><c> over</c><04:00:03.720><c> the</c><04:00:03.840><c> duration</c><04:00:04.239><c> of</c><04:00:04.439><c> either</c><04:00:04.640><c> a</c>

04:00:04.790 --> 04:00:04.800 align:start position:0%
that over the duration of either a
 

04:00:04.800 --> 04:00:07.389 align:start position:0%
that over the duration of either a
2-hour<04:00:05.239><c> training</c><04:00:05.560><c> run</c><04:00:05.880><c> or</c><04:00:06.279><c> an</c><04:00:06.479><c> overnight</c><04:00:06.920><c> run</c>

04:00:07.389 --> 04:00:07.399 align:start position:0%
2-hour training run or an overnight run
 

04:00:07.399 --> 04:00:09.830 align:start position:0%
2-hour training run or an overnight run
we<04:00:07.520><c> can</c><04:00:07.680><c> actually</c><04:00:08.000><c> match</c><04:00:08.560><c> the</c><04:00:08.720><c> 124</c><04:00:09.399><c> million</c>

04:00:09.830 --> 04:00:09.840 align:start position:0%
we can actually match the 124 million
 

04:00:09.840 --> 04:00:12.670 align:start position:0%
we can actually match the 124 million
parameter<04:00:10.199><c> checkpoints</c><04:00:10.880><c> of</c><04:00:11.040><c> gbt2</c><04:00:11.520><c> and</c><04:00:11.680><c> gpt3</c>

04:00:12.670 --> 04:00:12.680 align:start position:0%
parameter checkpoints of gbt2 and gpt3
 

04:00:12.680 --> 04:00:14.670 align:start position:0%
parameter checkpoints of gbt2 and gpt3
uh<04:00:12.800><c> to</c><04:00:12.920><c> a</c><04:00:13.040><c> very</c><04:00:13.199><c> large</c><04:00:13.479><c> extent</c>

04:00:14.670 --> 04:00:14.680 align:start position:0%
uh to a very large extent
 

04:00:14.680 --> 04:00:16.630 align:start position:0%
uh to a very large extent
um<04:00:15.000><c> in</c><04:00:15.199><c> principle</c><04:00:15.600><c> the</c><04:00:15.720><c> code</c><04:00:15.920><c> that</c><04:00:16.040><c> we</c><04:00:16.199><c> wrote</c>

04:00:16.630 --> 04:00:16.640 align:start position:0%
um in principle the code that we wrote
 

04:00:16.640 --> 04:00:18.070 align:start position:0%
um in principle the code that we wrote
would<04:00:16.840><c> be</c><04:00:16.920><c> able</c><04:00:17.080><c> to</c><04:00:17.199><c> train</c><04:00:17.560><c> even</c><04:00:17.800><c> bigger</c>

04:00:18.070 --> 04:00:18.080 align:start position:0%
would be able to train even bigger
 

04:00:18.080 --> 04:00:19.550 align:start position:0%
would be able to train even bigger
models<04:00:18.520><c> if</c><04:00:18.600><c> you</c><04:00:18.720><c> have</c><04:00:18.840><c> the</c><04:00:18.960><c> patients</c><04:00:19.319><c> or</c><04:00:19.479><c> the</c>

04:00:19.550 --> 04:00:19.560 align:start position:0%
models if you have the patients or the
 

04:00:19.560 --> 04:00:21.830 align:start position:0%
models if you have the patients or the
Computing<04:00:20.120><c> resources</c><04:00:21.120><c> uh</c><04:00:21.239><c> and</c><04:00:21.359><c> so</c><04:00:21.520><c> you</c><04:00:21.640><c> could</c>

04:00:21.830 --> 04:00:21.840 align:start position:0%
Computing resources uh and so you could
 

04:00:21.840 --> 04:00:23.469 align:start position:0%
Computing resources uh and so you could
potentially<04:00:22.319><c> think</c><04:00:22.520><c> about</c><04:00:22.720><c> training</c><04:00:23.279><c> some</c><04:00:23.399><c> of</c>

04:00:23.469 --> 04:00:23.479 align:start position:0%
potentially think about training some of
 

04:00:23.479 --> 04:00:26.189 align:start position:0%
potentially think about training some of
the<04:00:23.560><c> bigger</c><04:00:23.840><c> checkpoints</c><04:00:24.279><c> as</c><04:00:24.720><c> well</c><04:00:25.720><c> um</c><04:00:26.080><c> there</c>

04:00:26.189 --> 04:00:26.199 align:start position:0%
the bigger checkpoints as well um there
 

04:00:26.199 --> 04:00:28.630 align:start position:0%
the bigger checkpoints as well um there
are<04:00:26.359><c> a</c><04:00:26.479><c> few</c><04:00:26.880><c> remaining</c><04:00:27.239><c> issues</c><04:00:27.640><c> to</c><04:00:27.840><c> address</c>

04:00:28.630 --> 04:00:28.640 align:start position:0%
are a few remaining issues to address
 

04:00:28.640 --> 04:00:30.269 align:start position:0%
are a few remaining issues to address
what's<04:00:28.840><c> happening</c><04:00:29.159><c> with</c><04:00:29.279><c> the</c><04:00:29.359><c> loss</c><04:00:29.680><c> here</c>

04:00:30.269 --> 04:00:30.279 align:start position:0%
what's happening with the loss here
 

04:00:30.279 --> 04:00:31.830 align:start position:0%
what's happening with the loss here
which<04:00:30.520><c> I</c><04:00:30.640><c> suspect</c><04:00:31.000><c> has</c><04:00:31.120><c> to</c><04:00:31.239><c> do</c><04:00:31.359><c> with</c><04:00:31.479><c> the</c><04:00:31.600><c> fine</c>

04:00:31.830 --> 04:00:31.840 align:start position:0%
which I suspect has to do with the fine
 

04:00:31.840 --> 04:00:34.910 align:start position:0%
which I suspect has to do with the fine
web<04:00:32.040><c> edu</c><04:00:32.840><c> data</c><04:00:33.279><c> sampling</c><04:00:34.279><c> uh</c><04:00:34.439><c> why</c><04:00:34.640><c> can't</c><04:00:34.800><c> we</c>

04:00:34.910 --> 04:00:34.920 align:start position:0%
web edu data sampling uh why can't we
 

04:00:34.920 --> 04:00:36.910 align:start position:0%
web edu data sampling uh why can't we
turn<04:00:35.080><c> on</c><04:00:35.239><c> Torch</c><04:00:35.560><c> compile</c><04:00:36.359><c> uh</c><04:00:36.479><c> it</c><04:00:36.600><c> currently</c>

04:00:36.910 --> 04:00:36.920 align:start position:0%
turn on Torch compile uh it currently
 

04:00:36.920 --> 04:00:39.469 align:start position:0%
turn on Torch compile uh it currently
breaks<04:00:37.279><c> generation</c><04:00:37.960><c> and</c><04:00:38.159><c> H</c><04:00:38.560><c> swag</c><04:00:39.159><c> what's</c><04:00:39.319><c> up</c>

04:00:39.469 --> 04:00:39.479 align:start position:0%
breaks generation and H swag what's up
 

04:00:39.479 --> 04:00:41.429 align:start position:0%
breaks generation and H swag what's up
with<04:00:39.680><c> that</c><04:00:40.319><c> in</c><04:00:40.439><c> the</c><04:00:40.560><c> data</c><04:00:40.800><c> loader</c><04:00:41.159><c> we</c><04:00:41.239><c> should</c>

04:00:41.429 --> 04:00:41.439 align:start position:0%
with that in the data loader we should
 

04:00:41.439 --> 04:00:43.189 align:start position:0%
with that in the data loader we should
probably<04:00:41.640><c> be</c><04:00:41.800><c> permuting</c><04:00:42.239><c> our</c><04:00:42.439><c> data</c><04:00:42.800><c> when</c><04:00:42.960><c> we</c>

04:00:43.189 --> 04:00:43.199 align:start position:0%
probably be permuting our data when we
 

04:00:43.199 --> 04:00:45.550 align:start position:0%
probably be permuting our data when we
reach<04:00:44.159><c> boundaries</c><04:00:44.840><c> so</c><04:00:45.000><c> there's</c><04:00:45.159><c> a</c><04:00:45.239><c> few</c><04:00:45.399><c> more</c>

04:00:45.550 --> 04:00:45.560 align:start position:0%
reach boundaries so there's a few more
 

04:00:45.560 --> 04:00:47.189 align:start position:0%
reach boundaries so there's a few more
issues<04:00:45.920><c> like</c><04:00:46.120><c> that</c><04:00:46.520><c> and</c><04:00:46.640><c> I</c><04:00:46.720><c> expect</c><04:00:46.960><c> to</c><04:00:47.040><c> be</c>

04:00:47.189 --> 04:00:47.199 align:start position:0%
issues like that and I expect to be
 

04:00:47.199 --> 04:00:49.429 align:start position:0%
issues like that and I expect to be
documenting<04:00:47.680><c> some</c><04:00:47.800><c> of</c><04:00:47.960><c> those</c><04:00:48.239><c> over</c><04:00:48.479><c> time</c><04:00:49.159><c> in</c>

04:00:49.429 --> 04:00:49.439 align:start position:0%
documenting some of those over time in
 

04:00:49.439 --> 04:00:53.269 align:start position:0%
documenting some of those over time in
the<04:00:50.040><c> uh</c><04:00:50.199><c> build</c><04:00:50.479><c> n</c><04:00:50.720><c> GPT</c><04:00:51.120><c> repository</c><04:00:52.159><c> here</c><04:00:53.159><c> which</c>

04:00:53.269 --> 04:00:53.279 align:start position:0%
the uh build n GPT repository here which
 

04:00:53.279 --> 04:00:55.030 align:start position:0%
the uh build n GPT repository here which
I'm<04:00:53.399><c> going</c><04:00:53.520><c> to</c><04:00:53.640><c> be</c><04:00:53.800><c> releasing</c><04:00:54.319><c> with</c><04:00:54.680><c> this</c>

04:00:55.030 --> 04:00:55.040 align:start position:0%
I'm going to be releasing with this
 

04:00:55.040 --> 04:00:57.670 align:start position:0%
I'm going to be releasing with this
video<04:00:56.040><c> if</c><04:00:56.159><c> you</c><04:00:56.319><c> have</c><04:00:56.560><c> any</c><04:00:56.840><c> questions</c><04:00:57.239><c> or</c><04:00:57.520><c> like</c>

04:00:57.670 --> 04:00:57.680 align:start position:0%
video if you have any questions or like
 

04:00:57.680 --> 04:00:59.670 align:start position:0%
video if you have any questions or like
to<04:00:57.840><c> talk</c><04:00:58.040><c> about</c><04:00:58.520><c> anything</c><04:00:58.840><c> that</c><04:00:58.960><c> we</c><04:00:59.120><c> covered</c>

04:00:59.670 --> 04:00:59.680 align:start position:0%
to talk about anything that we covered
 

04:00:59.680 --> 04:01:02.070 align:start position:0%
to talk about anything that we covered
please<04:00:59.960><c> go</c><04:01:00.120><c> to</c><04:01:00.359><c> discussions</c><04:01:00.880><c> tab</c><04:01:01.720><c> uh</c><04:01:01.840><c> so</c><04:01:01.960><c> we</c>

04:01:02.070 --> 04:01:02.080 align:start position:0%
please go to discussions tab uh so we
 

04:01:02.080 --> 04:01:04.670 align:start position:0%
please go to discussions tab uh so we
can<04:01:02.239><c> talk</c><04:01:02.520><c> here</c><04:01:03.319><c> uh</c><04:01:03.439><c> or</c><04:01:03.720><c> please</c><04:01:04.080><c> go</c><04:01:04.199><c> to</c><04:01:04.319><c> issues</c>

04:01:04.670 --> 04:01:04.680 align:start position:0%
can talk here uh or please go to issues
 

04:01:04.680 --> 04:01:07.110 align:start position:0%
can talk here uh or please go to issues
or<04:01:04.880><c> pull</c><04:01:05.120><c> request</c><04:01:05.720><c> pull</c><04:01:06.040><c> requests</c><04:01:06.880><c> um</c>

04:01:07.110 --> 04:01:07.120 align:start position:0%
or pull request pull requests um
 

04:01:07.120 --> 04:01:08.670 align:start position:0%
or pull request pull requests um
depending<04:01:07.399><c> on</c><04:01:07.600><c> what</c><04:01:07.720><c> you'd</c><04:01:07.960><c> like</c><04:01:08.120><c> to</c>

04:01:08.670 --> 04:01:08.680 align:start position:0%
depending on what you'd like to
 

04:01:08.680 --> 04:01:11.510 align:start position:0%
depending on what you'd like to
contribute<04:01:09.680><c> or</c><04:01:10.040><c> also</c><04:01:10.399><c> have</c><04:01:10.520><c> a</c><04:01:10.640><c> look</c><04:01:10.800><c> at</c><04:01:11.000><c> the</c><04:01:11.399><c> uh</c>

04:01:11.510 --> 04:01:11.520 align:start position:0%
contribute or also have a look at the uh
 

04:01:11.520 --> 04:01:14.189 align:start position:0%
contribute or also have a look at the uh
Zero<04:01:11.840><c> to</c><04:01:12.040><c> Hero</c><04:01:12.359><c> Discord</c><04:01:13.239><c> and</c><04:01:13.760><c> uh</c><04:01:13.920><c> I'm</c><04:01:14.040><c> going</c><04:01:14.120><c> to</c>

04:01:14.189 --> 04:01:14.199 align:start position:0%
Zero to Hero Discord and uh I'm going to
 

04:01:14.199 --> 04:01:17.149 align:start position:0%
Zero to Hero Discord and uh I'm going to
be<04:01:14.279><c> hanging</c><04:01:14.520><c> out</c><04:01:14.720><c> here</c><04:01:14.840><c> on</c><04:01:14.960><c> N</c><04:01:15.319><c> GPT</c>

04:01:17.149 --> 04:01:17.159 align:start position:0%
be hanging out here on N GPT
 

04:01:17.159 --> 04:01:20.149 align:start position:0%
be hanging out here on N GPT
um<04:01:18.159><c> otherwise</c><04:01:18.600><c> for</c><04:01:18.800><c> now</c><04:01:19.399><c> I'm</c><04:01:19.560><c> pretty</c><04:01:19.800><c> happy</c>

04:01:20.149 --> 04:01:20.159 align:start position:0%
um otherwise for now I'm pretty happy
 

04:01:20.159 --> 04:01:23.229 align:start position:0%
um otherwise for now I'm pretty happy
about<04:01:20.439><c> where</c><04:01:20.600><c> we</c><04:01:20.840><c> got</c><04:01:21.600><c> um</c><04:01:22.560><c> and</c><04:01:22.880><c> I</c><04:01:22.960><c> hope</c><04:01:23.120><c> you</c>

04:01:23.229 --> 04:01:23.239 align:start position:0%
about where we got um and I hope you
 

04:01:23.239 --> 04:01:24.990 align:start position:0%
about where we got um and I hope you
enjoyed<04:01:23.520><c> the</c><04:01:23.640><c> video</c><04:01:24.279><c> and</c><04:01:24.520><c> I</c><04:01:24.600><c> will</c><04:01:24.720><c> see</c><04:01:24.880><c> you</c>

04:01:24.990 --> 04:01:25.000 align:start position:0%
enjoyed the video and I will see you
 

04:01:25.000 --> 04:01:27.800 align:start position:0%
enjoyed the video and I will see you
later

