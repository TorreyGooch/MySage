WEBVTT
Kind: captions
Language: en

00:00:00.080 --> 00:00:01.829 align:start position:0%
 
hello<00:00:00.399><c> my</c><00:00:00.560><c> name</c><00:00:00.719><c> is</c><00:00:00.880><c> andre</c>

00:00:01.829 --> 00:00:01.839 align:start position:0%
hello my name is andre
 

00:00:01.839 --> 00:00:02.950 align:start position:0%
hello my name is andre
and<00:00:02.080><c> i've</c><00:00:02.240><c> been</c><00:00:02.399><c> training</c><00:00:02.639><c> deep</c><00:00:02.800><c> neural</c>

00:00:02.950 --> 00:00:02.960 align:start position:0%
and i've been training deep neural
 

00:00:02.960 --> 00:00:04.870 align:start position:0%
and i've been training deep neural
networks<00:00:03.360><c> for</c><00:00:03.520><c> a</c><00:00:03.520><c> bit</c><00:00:03.679><c> more</c><00:00:03.840><c> than</c><00:00:04.000><c> a</c><00:00:04.080><c> decade</c>

00:00:04.870 --> 00:00:04.880 align:start position:0%
networks for a bit more than a decade
 

00:00:04.880 --> 00:00:06.789 align:start position:0%
networks for a bit more than a decade
and<00:00:05.200><c> in</c><00:00:05.279><c> this</c><00:00:05.440><c> lecture</c><00:00:05.759><c> i'd</c><00:00:05.839><c> like</c><00:00:06.000><c> to</c><00:00:06.160><c> show</c><00:00:06.319><c> you</c>

00:00:06.789 --> 00:00:06.799 align:start position:0%
and in this lecture i'd like to show you
 

00:00:06.799 --> 00:00:08.629 align:start position:0%
and in this lecture i'd like to show you
what<00:00:07.120><c> neural</c><00:00:07.359><c> network</c><00:00:07.839><c> training</c><00:00:08.160><c> looks</c><00:00:08.400><c> like</c>

00:00:08.629 --> 00:00:08.639 align:start position:0%
what neural network training looks like
 

00:00:08.639 --> 00:00:10.870 align:start position:0%
what neural network training looks like
under<00:00:08.800><c> the</c><00:00:08.960><c> hood</c><00:00:09.679><c> so</c><00:00:09.840><c> in</c><00:00:10.000><c> particular</c><00:00:10.559><c> we</c><00:00:10.719><c> are</c>

00:00:10.870 --> 00:00:10.880 align:start position:0%
under the hood so in particular we are
 

00:00:10.880 --> 00:00:12.230 align:start position:0%
under the hood so in particular we are
going<00:00:11.040><c> to</c><00:00:11.120><c> start</c><00:00:11.360><c> with</c><00:00:11.519><c> a</c><00:00:11.679><c> blank</c><00:00:11.920><c> jupiter</c>

00:00:12.230 --> 00:00:12.240 align:start position:0%
going to start with a blank jupiter
 

00:00:12.240 --> 00:00:14.310 align:start position:0%
going to start with a blank jupiter
notebook<00:00:13.120><c> and</c><00:00:13.440><c> by</c><00:00:13.599><c> the</c><00:00:13.679><c> end</c><00:00:13.840><c> of</c><00:00:13.920><c> this</c><00:00:14.080><c> lecture</c>

00:00:14.310 --> 00:00:14.320 align:start position:0%
notebook and by the end of this lecture
 

00:00:14.320 --> 00:00:16.630 align:start position:0%
notebook and by the end of this lecture
we<00:00:14.480><c> will</c><00:00:14.799><c> define</c><00:00:15.280><c> and</c><00:00:15.440><c> train</c><00:00:15.839><c> in</c><00:00:16.000><c> neural</c><00:00:16.320><c> net</c>

00:00:16.630 --> 00:00:16.640 align:start position:0%
we will define and train in neural net
 

00:00:16.640 --> 00:00:18.150 align:start position:0%
we will define and train in neural net
and<00:00:16.720><c> you'll</c><00:00:16.880><c> get</c><00:00:17.039><c> to</c><00:00:17.119><c> see</c><00:00:17.680><c> everything</c><00:00:18.080><c> that</c>

00:00:18.150 --> 00:00:18.160 align:start position:0%
and you'll get to see everything that
 

00:00:18.160 --> 00:00:20.230 align:start position:0%
and you'll get to see everything that
goes<00:00:18.400><c> on</c><00:00:18.560><c> under</c><00:00:18.720><c> the</c><00:00:18.880><c> hood</c><00:00:19.119><c> and</c><00:00:19.199><c> exactly</c>

00:00:20.230 --> 00:00:20.240 align:start position:0%
goes on under the hood and exactly
 

00:00:20.240 --> 00:00:21.670 align:start position:0%
goes on under the hood and exactly
sort<00:00:20.400><c> of</c><00:00:20.480><c> how</c><00:00:20.640><c> that</c><00:00:20.800><c> works</c><00:00:21.039><c> on</c><00:00:21.119><c> an</c><00:00:21.279><c> intuitive</c>

00:00:21.670 --> 00:00:21.680 align:start position:0%
sort of how that works on an intuitive
 

00:00:21.680 --> 00:00:22.630 align:start position:0%
sort of how that works on an intuitive
level

00:00:22.630 --> 00:00:22.640 align:start position:0%
level
 

00:00:22.640 --> 00:00:24.150 align:start position:0%
level
now<00:00:22.880><c> specifically</c><00:00:23.359><c> what</c><00:00:23.439><c> i</c><00:00:23.519><c> would</c><00:00:23.680><c> like</c><00:00:23.840><c> to</c><00:00:23.920><c> do</c>

00:00:24.150 --> 00:00:24.160 align:start position:0%
now specifically what i would like to do
 

00:00:24.160 --> 00:00:26.550 align:start position:0%
now specifically what i would like to do
is<00:00:24.320><c> i</c><00:00:24.480><c> would</c><00:00:24.640><c> like</c><00:00:24.800><c> to</c><00:00:24.960><c> take</c><00:00:25.199><c> you</c><00:00:25.359><c> through</c>

00:00:26.550 --> 00:00:26.560 align:start position:0%
is i would like to take you through
 

00:00:26.560 --> 00:00:29.349 align:start position:0%
is i would like to take you through
building<00:00:27.039><c> of</c><00:00:27.359><c> micrograd</c><00:00:28.480><c> now</c><00:00:28.640><c> micrograd</c><00:00:29.199><c> is</c>

00:00:29.349 --> 00:00:29.359 align:start position:0%
building of micrograd now micrograd is
 

00:00:29.359 --> 00:00:30.870 align:start position:0%
building of micrograd now micrograd is
this<00:00:29.439><c> library</c><00:00:29.840><c> that</c><00:00:30.000><c> i</c><00:00:30.080><c> released</c><00:00:30.400><c> on</c><00:00:30.480><c> github</c>

00:00:30.870 --> 00:00:30.880 align:start position:0%
this library that i released on github
 

00:00:30.880 --> 00:00:32.870 align:start position:0%
this library that i released on github
about<00:00:31.119><c> two</c><00:00:31.279><c> years</c><00:00:31.519><c> ago</c><00:00:32.000><c> but</c><00:00:32.239><c> at</c><00:00:32.320><c> the</c><00:00:32.480><c> time</c><00:00:32.719><c> i</c>

00:00:32.870 --> 00:00:32.880 align:start position:0%
about two years ago but at the time i
 

00:00:32.880 --> 00:00:34.870 align:start position:0%
about two years ago but at the time i
only<00:00:33.440><c> uploaded</c><00:00:33.840><c> the</c><00:00:33.920><c> source</c><00:00:34.239><c> code</c><00:00:34.559><c> and</c><00:00:34.719><c> you'd</c>

00:00:34.870 --> 00:00:34.880 align:start position:0%
only uploaded the source code and you'd
 

00:00:34.880 --> 00:00:37.270 align:start position:0%
only uploaded the source code and you'd
have<00:00:35.040><c> to</c><00:00:35.120><c> go</c><00:00:35.280><c> in</c><00:00:35.360><c> by</c><00:00:35.600><c> yourself</c><00:00:36.000><c> and</c><00:00:36.079><c> really</c>

00:00:37.270 --> 00:00:37.280 align:start position:0%
have to go in by yourself and really
 

00:00:37.280 --> 00:00:39.270 align:start position:0%
have to go in by yourself and really
figure<00:00:37.600><c> out</c><00:00:37.840><c> how</c><00:00:38.079><c> it</c><00:00:38.160><c> works</c>

00:00:39.270 --> 00:00:39.280 align:start position:0%
figure out how it works
 

00:00:39.280 --> 00:00:40.630 align:start position:0%
figure out how it works
so<00:00:39.520><c> in</c><00:00:39.600><c> this</c><00:00:39.840><c> lecture</c><00:00:40.160><c> i</c><00:00:40.239><c> will</c><00:00:40.399><c> take</c><00:00:40.559><c> you</c>

00:00:40.630 --> 00:00:40.640 align:start position:0%
so in this lecture i will take you
 

00:00:40.640 --> 00:00:42.389 align:start position:0%
so in this lecture i will take you
through<00:00:40.800><c> it</c><00:00:40.960><c> step</c><00:00:41.200><c> by</c><00:00:41.360><c> step</c><00:00:41.840><c> and</c><00:00:42.079><c> kind</c><00:00:42.239><c> of</c>

00:00:42.389 --> 00:00:42.399 align:start position:0%
through it step by step and kind of
 

00:00:42.399 --> 00:00:44.389 align:start position:0%
through it step by step and kind of
comment<00:00:42.640><c> on</c><00:00:42.800><c> all</c><00:00:42.879><c> the</c><00:00:42.960><c> pieces</c><00:00:43.360><c> of</c><00:00:43.520><c> it</c><00:00:44.000><c> so</c><00:00:44.239><c> what</c>

00:00:44.389 --> 00:00:44.399 align:start position:0%
comment on all the pieces of it so what
 

00:00:44.399 --> 00:00:47.430 align:start position:0%
comment on all the pieces of it so what
is<00:00:44.480><c> micrograd</c><00:00:45.200><c> and</c><00:00:45.360><c> why</c><00:00:45.520><c> is</c><00:00:45.600><c> it</c><00:00:45.760><c> interesting</c>

00:00:47.430 --> 00:00:47.440 align:start position:0%
is micrograd and why is it interesting
 

00:00:47.440 --> 00:00:48.950 align:start position:0%
is micrograd and why is it interesting
good

00:00:48.950 --> 00:00:48.960 align:start position:0%
good
 

00:00:48.960 --> 00:00:49.830 align:start position:0%
good
um

00:00:49.830 --> 00:00:49.840 align:start position:0%
um
 

00:00:49.840 --> 00:00:51.510 align:start position:0%
um
micrograd<00:00:50.399><c> is</c><00:00:50.480><c> basically</c><00:00:50.800><c> an</c><00:00:50.960><c> autograd</c>

00:00:51.510 --> 00:00:51.520 align:start position:0%
micrograd is basically an autograd
 

00:00:51.520 --> 00:00:53.830 align:start position:0%
micrograd is basically an autograd
engine<00:00:51.920><c> autograd</c><00:00:52.480><c> is</c><00:00:52.559><c> short</c><00:00:52.800><c> for</c><00:00:53.039><c> automatic</c>

00:00:53.830 --> 00:00:53.840 align:start position:0%
engine autograd is short for automatic
 

00:00:53.840 --> 00:00:55.670 align:start position:0%
engine autograd is short for automatic
gradient<00:00:54.559><c> and</c><00:00:54.719><c> really</c><00:00:54.960><c> what</c><00:00:55.039><c> it</c><00:00:55.120><c> does</c><00:00:55.360><c> is</c><00:00:55.520><c> it</c>

00:00:55.670 --> 00:00:55.680 align:start position:0%
gradient and really what it does is it
 

00:00:55.680 --> 00:00:57.670 align:start position:0%
gradient and really what it does is it
implements<00:00:56.239><c> backpropagation</c><00:00:57.520><c> now</c>

00:00:57.670 --> 00:00:57.680 align:start position:0%
implements backpropagation now
 

00:00:57.680 --> 00:00:59.349 align:start position:0%
implements backpropagation now
backpropagation<00:00:58.320><c> is</c><00:00:58.399><c> this</c><00:00:58.640><c> algorithm</c><00:00:59.120><c> that</c>

00:00:59.349 --> 00:00:59.359 align:start position:0%
backpropagation is this algorithm that
 

00:00:59.359 --> 00:01:01.270 align:start position:0%
backpropagation is this algorithm that
allows<00:00:59.600><c> you</c><00:00:59.680><c> to</c><00:00:59.920><c> efficiently</c><00:01:00.559><c> evaluate</c><00:01:01.120><c> the</c>

00:01:01.270 --> 00:01:01.280 align:start position:0%
allows you to efficiently evaluate the
 

00:01:01.280 --> 00:01:03.510 align:start position:0%
allows you to efficiently evaluate the
gradient<00:01:02.239><c> of</c>

00:01:03.510 --> 00:01:03.520 align:start position:0%
gradient of
 

00:01:03.520 --> 00:01:05.189 align:start position:0%
gradient of
some<00:01:03.680><c> kind</c><00:01:03.840><c> of</c><00:01:04.000><c> a</c><00:01:04.080><c> loss</c><00:01:04.320><c> function</c><00:01:04.960><c> with</c>

00:01:05.189 --> 00:01:05.199 align:start position:0%
some kind of a loss function with
 

00:01:05.199 --> 00:01:07.190 align:start position:0%
some kind of a loss function with
respect<00:01:05.680><c> to</c><00:01:06.000><c> the</c><00:01:06.159><c> weights</c><00:01:06.640><c> of</c><00:01:06.799><c> a</c><00:01:06.960><c> neural</c>

00:01:07.190 --> 00:01:07.200 align:start position:0%
respect to the weights of a neural
 

00:01:07.200 --> 00:01:09.109 align:start position:0%
respect to the weights of a neural
network<00:01:07.920><c> and</c><00:01:08.080><c> what</c><00:01:08.159><c> that</c><00:01:08.320><c> allows</c><00:01:08.640><c> us</c><00:01:08.720><c> to</c><00:01:08.799><c> do</c>

00:01:09.109 --> 00:01:09.119 align:start position:0%
network and what that allows us to do
 

00:01:09.119 --> 00:01:11.030 align:start position:0%
network and what that allows us to do
then<00:01:09.600><c> is</c><00:01:09.760><c> we</c><00:01:09.840><c> can</c><00:01:10.080><c> iteratively</c><00:01:10.640><c> tune</c><00:01:10.880><c> the</c>

00:01:11.030 --> 00:01:11.040 align:start position:0%
then is we can iteratively tune the
 

00:01:11.040 --> 00:01:12.550 align:start position:0%
then is we can iteratively tune the
weights<00:01:11.280><c> of</c><00:01:11.360><c> that</c><00:01:11.520><c> neural</c><00:01:11.760><c> network</c><00:01:12.400><c> to</c>

00:01:12.550 --> 00:01:12.560 align:start position:0%
weights of that neural network to
 

00:01:12.560 --> 00:01:14.310 align:start position:0%
weights of that neural network to
minimize<00:01:13.040><c> the</c><00:01:13.119><c> loss</c><00:01:13.360><c> function</c><00:01:13.840><c> and</c><00:01:13.920><c> therefore</c>

00:01:14.310 --> 00:01:14.320 align:start position:0%
minimize the loss function and therefore
 

00:01:14.320 --> 00:01:16.469 align:start position:0%
minimize the loss function and therefore
improve<00:01:14.560><c> the</c><00:01:14.720><c> accuracy</c><00:01:15.280><c> of</c><00:01:15.360><c> the</c><00:01:15.520><c> network</c><00:01:16.320><c> so</c>

00:01:16.469 --> 00:01:16.479 align:start position:0%
improve the accuracy of the network so
 

00:01:16.479 --> 00:01:18.310 align:start position:0%
improve the accuracy of the network so
back<00:01:16.720><c> propagation</c><00:01:17.439><c> would</c><00:01:17.600><c> be</c><00:01:18.000><c> at</c><00:01:18.159><c> the</c>

00:01:18.310 --> 00:01:18.320 align:start position:0%
back propagation would be at the
 

00:01:18.320 --> 00:01:20.469 align:start position:0%
back propagation would be at the
mathematical<00:01:18.960><c> core</c><00:01:19.439><c> of</c><00:01:19.680><c> any</c><00:01:20.000><c> modern</c><00:01:20.320><c> deep</c>

00:01:20.469 --> 00:01:20.479 align:start position:0%
mathematical core of any modern deep
 

00:01:20.479 --> 00:01:22.550 align:start position:0%
mathematical core of any modern deep
neural<00:01:20.720><c> network</c><00:01:21.040><c> library</c><00:01:21.600><c> like</c><00:01:21.759><c> say</c><00:01:22.000><c> pytorch</c>

00:01:22.550 --> 00:01:22.560 align:start position:0%
neural network library like say pytorch
 

00:01:22.560 --> 00:01:23.990 align:start position:0%
neural network library like say pytorch
or<00:01:22.720><c> jaxx</c>

00:01:23.990 --> 00:01:24.000 align:start position:0%
or jaxx
 

00:01:24.000 --> 00:01:25.590 align:start position:0%
or jaxx
so<00:01:24.159><c> the</c><00:01:24.240><c> functionality</c><00:01:24.799><c> of</c><00:01:24.880><c> microgrant</c><00:01:25.439><c> is</c><00:01:25.520><c> i</c>

00:01:25.590 --> 00:01:25.600 align:start position:0%
so the functionality of microgrant is i
 

00:01:25.600 --> 00:01:27.590 align:start position:0%
so the functionality of microgrant is i
think<00:01:25.840><c> best</c><00:01:26.080><c> illustrated</c><00:01:26.479><c> by</c><00:01:26.640><c> an</c><00:01:26.799><c> example</c><00:01:27.439><c> so</c>

00:01:27.590 --> 00:01:27.600 align:start position:0%
think best illustrated by an example so
 

00:01:27.600 --> 00:01:29.830 align:start position:0%
think best illustrated by an example so
if<00:01:27.759><c> we</c><00:01:27.840><c> just</c><00:01:28.000><c> scroll</c><00:01:28.240><c> down</c><00:01:28.479><c> here</c>

00:01:29.830 --> 00:01:29.840 align:start position:0%
if we just scroll down here
 

00:01:29.840 --> 00:01:31.190 align:start position:0%
if we just scroll down here
you'll<00:01:30.000><c> see</c><00:01:30.159><c> that</c><00:01:30.320><c> micrograph</c><00:01:30.799><c> basically</c>

00:01:31.190 --> 00:01:31.200 align:start position:0%
you'll see that micrograph basically
 

00:01:31.200 --> 00:01:32.950 align:start position:0%
you'll see that micrograph basically
allows<00:01:31.439><c> you</c><00:01:31.600><c> to</c><00:01:31.840><c> build</c><00:01:32.079><c> out</c><00:01:32.320><c> mathematical</c>

00:01:32.950 --> 00:01:32.960 align:start position:0%
allows you to build out mathematical
 

00:01:32.960 --> 00:01:34.230 align:start position:0%
allows you to build out mathematical
expressions

00:01:34.230 --> 00:01:34.240 align:start position:0%
expressions
 

00:01:34.240 --> 00:01:36.550 align:start position:0%
expressions
and<00:01:34.720><c> um</c><00:01:35.280><c> here</c><00:01:35.439><c> what</c><00:01:35.600><c> we</c><00:01:35.680><c> are</c><00:01:35.840><c> doing</c><00:01:36.079><c> is</c><00:01:36.240><c> we</c><00:01:36.400><c> have</c>

00:01:36.550 --> 00:01:36.560 align:start position:0%
and um here what we are doing is we have
 

00:01:36.560 --> 00:01:37.830 align:start position:0%
and um here what we are doing is we have
an<00:01:36.720><c> expression</c><00:01:37.119><c> that</c><00:01:37.200><c> we're</c><00:01:37.360><c> building</c><00:01:37.680><c> out</c>

00:01:37.830 --> 00:01:37.840 align:start position:0%
an expression that we're building out
 

00:01:37.840 --> 00:01:40.870 align:start position:0%
an expression that we're building out
where<00:01:38.000><c> you</c><00:01:38.079><c> have</c><00:01:38.240><c> two</c><00:01:38.560><c> inputs</c><00:01:39.280><c> a</c><00:01:39.600><c> and</c><00:01:39.759><c> b</c>

00:01:40.870 --> 00:01:40.880 align:start position:0%
where you have two inputs a and b
 

00:01:40.880 --> 00:01:43.270 align:start position:0%
where you have two inputs a and b
and<00:01:41.520><c> you'll</c><00:01:41.759><c> see</c><00:01:42.000><c> that</c><00:01:42.320><c> a</c><00:01:42.560><c> and</c><00:01:42.640><c> b</c><00:01:42.880><c> are</c><00:01:42.960><c> negative</c>

00:01:43.270 --> 00:01:43.280 align:start position:0%
and you'll see that a and b are negative
 

00:01:43.280 --> 00:01:46.149 align:start position:0%
and you'll see that a and b are negative
four<00:01:43.520><c> and</c><00:01:43.680><c> two</c><00:01:44.399><c> but</c><00:01:44.560><c> we</c><00:01:44.720><c> are</c><00:01:44.880><c> wrapping</c><00:01:45.280><c> those</c>

00:01:46.149 --> 00:01:46.159 align:start position:0%
four and two but we are wrapping those
 

00:01:46.159 --> 00:01:48.630 align:start position:0%
four and two but we are wrapping those
values<00:01:46.720><c> into</c><00:01:47.040><c> this</c><00:01:47.520><c> value</c><00:01:48.000><c> object</c><00:01:48.399><c> that</c><00:01:48.560><c> we</c>

00:01:48.630 --> 00:01:48.640 align:start position:0%
values into this value object that we
 

00:01:48.640 --> 00:01:49.910 align:start position:0%
values into this value object that we
are<00:01:48.799><c> going</c><00:01:48.960><c> to</c><00:01:49.040><c> build</c><00:01:49.280><c> out</c><00:01:49.520><c> as</c><00:01:49.600><c> part</c><00:01:49.840><c> of</c>

00:01:49.910 --> 00:01:49.920 align:start position:0%
are going to build out as part of
 

00:01:49.920 --> 00:01:51.030 align:start position:0%
are going to build out as part of
micrograd

00:01:51.030 --> 00:01:51.040 align:start position:0%
micrograd
 

00:01:51.040 --> 00:01:53.510 align:start position:0%
micrograd
so<00:01:51.200><c> this</c><00:01:51.439><c> value</c><00:01:51.840><c> object</c><00:01:52.479><c> will</c><00:01:52.720><c> wrap</c><00:01:53.360><c> the</c>

00:01:53.510 --> 00:01:53.520 align:start position:0%
so this value object will wrap the
 

00:01:53.520 --> 00:01:54.950 align:start position:0%
so this value object will wrap the
numbers<00:01:53.840><c> themselves</c>

00:01:54.950 --> 00:01:54.960 align:start position:0%
numbers themselves
 

00:01:54.960 --> 00:01:56.230 align:start position:0%
numbers themselves
and<00:01:55.040><c> then</c><00:01:55.360><c> we</c><00:01:55.520><c> are</c><00:01:55.600><c> going</c><00:01:55.759><c> to</c><00:01:55.840><c> build</c><00:01:56.079><c> out</c><00:01:56.159><c> a</c>

00:01:56.230 --> 00:01:56.240 align:start position:0%
and then we are going to build out a
 

00:01:56.240 --> 00:01:58.469 align:start position:0%
and then we are going to build out a
mathematical<00:01:56.799><c> expression</c><00:01:57.200><c> here</c><00:01:57.360><c> where</c><00:01:58.079><c> a</c><00:01:58.320><c> and</c>

00:01:58.469 --> 00:01:58.479 align:start position:0%
mathematical expression here where a and
 

00:01:58.479 --> 00:02:01.910 align:start position:0%
mathematical expression here where a and
b<00:01:58.960><c> are</c><00:01:59.600><c> transformed</c><00:02:00.479><c> into</c><00:02:00.880><c> c</c><00:02:01.280><c> d</c><00:02:01.759><c> and</c>

00:02:01.910 --> 00:02:01.920 align:start position:0%
b are transformed into c d and
 

00:02:01.920 --> 00:02:03.910 align:start position:0%
b are transformed into c d and
eventually<00:02:02.320><c> e</c><00:02:02.640><c> f</c><00:02:02.799><c> and</c><00:02:02.960><c> g</c>

00:02:03.910 --> 00:02:03.920 align:start position:0%
eventually e f and g
 

00:02:03.920 --> 00:02:05.590 align:start position:0%
eventually e f and g
and<00:02:04.159><c> i'm</c><00:02:04.320><c> showing</c><00:02:04.560><c> some</c><00:02:04.719><c> of</c><00:02:04.799><c> the</c><00:02:05.200><c> functions</c>

00:02:05.590 --> 00:02:05.600 align:start position:0%
and i'm showing some of the functions
 

00:02:05.600 --> 00:02:07.030 align:start position:0%
and i'm showing some of the functions
some<00:02:05.759><c> of</c><00:02:05.840><c> the</c><00:02:05.920><c> functionality</c><00:02:06.399><c> of</c><00:02:06.479><c> micrograph</c>

00:02:07.030 --> 00:02:07.040 align:start position:0%
some of the functionality of micrograph
 

00:02:07.040 --> 00:02:08.949 align:start position:0%
some of the functionality of micrograph
and<00:02:07.119><c> the</c><00:02:07.280><c> operations</c><00:02:07.759><c> that</c><00:02:07.920><c> it</c><00:02:08.000><c> supports</c><00:02:08.800><c> so</c>

00:02:08.949 --> 00:02:08.959 align:start position:0%
and the operations that it supports so
 

00:02:08.959 --> 00:02:11.029 align:start position:0%
and the operations that it supports so
you<00:02:09.039><c> can</c><00:02:09.200><c> add</c><00:02:09.679><c> two</c><00:02:09.920><c> value</c><00:02:10.239><c> objects</c><00:02:10.800><c> you</c><00:02:10.879><c> can</c>

00:02:11.029 --> 00:02:11.039 align:start position:0%
you can add two value objects you can
 

00:02:11.039 --> 00:02:13.350 align:start position:0%
you can add two value objects you can
multiply<00:02:11.520><c> them</c><00:02:12.000><c> you</c><00:02:12.160><c> can</c><00:02:12.400><c> raise</c><00:02:12.640><c> them</c><00:02:12.720><c> to</c><00:02:12.959><c> a</c>

00:02:13.350 --> 00:02:13.360 align:start position:0%
multiply them you can raise them to a
 

00:02:13.360 --> 00:02:15.750 align:start position:0%
multiply them you can raise them to a
constant<00:02:13.840><c> power</c><00:02:14.480><c> you</c><00:02:14.560><c> can</c><00:02:14.720><c> offset</c><00:02:15.120><c> by</c><00:02:15.280><c> one</c>

00:02:15.750 --> 00:02:15.760 align:start position:0%
constant power you can offset by one
 

00:02:15.760 --> 00:02:18.630 align:start position:0%
constant power you can offset by one
negate<00:02:16.480><c> squash</c><00:02:16.959><c> at</c><00:02:17.120><c> zero</c>

00:02:18.630 --> 00:02:18.640 align:start position:0%
negate squash at zero
 

00:02:18.640 --> 00:02:21.510 align:start position:0%
negate squash at zero
square<00:02:19.280><c> divide</c><00:02:19.599><c> by</c><00:02:19.840><c> constant</c><00:02:20.480><c> divide</c><00:02:20.879><c> by</c><00:02:21.200><c> it</c>

00:02:21.510 --> 00:02:21.520 align:start position:0%
square divide by constant divide by it
 

00:02:21.520 --> 00:02:22.630 align:start position:0%
square divide by constant divide by it
etc

00:02:22.630 --> 00:02:22.640 align:start position:0%
etc
 

00:02:22.640 --> 00:02:24.309 align:start position:0%
etc
and<00:02:22.800><c> so</c><00:02:22.959><c> we're</c><00:02:23.040><c> building</c><00:02:23.360><c> out</c><00:02:23.760><c> an</c><00:02:23.920><c> expression</c>

00:02:24.309 --> 00:02:24.319 align:start position:0%
and so we're building out an expression
 

00:02:24.319 --> 00:02:27.350 align:start position:0%
and so we're building out an expression
graph<00:02:24.959><c> with</c><00:02:25.360><c> with</c><00:02:25.599><c> these</c><00:02:25.840><c> two</c><00:02:26.080><c> inputs</c><00:02:26.400><c> a</c><00:02:26.640><c> and</c><00:02:26.720><c> b</c>

00:02:27.350 --> 00:02:27.360 align:start position:0%
graph with with these two inputs a and b
 

00:02:27.360 --> 00:02:30.309 align:start position:0%
graph with with these two inputs a and b
and<00:02:27.520><c> we're</c><00:02:27.760><c> creating</c><00:02:28.080><c> an</c><00:02:28.239><c> output</c><00:02:28.560><c> value</c><00:02:29.040><c> of</c><00:02:29.200><c> g</c>

00:02:30.309 --> 00:02:30.319 align:start position:0%
and we're creating an output value of g
 

00:02:30.319 --> 00:02:32.630 align:start position:0%
and we're creating an output value of g
and<00:02:30.720><c> micrograd</c><00:02:31.280><c> will</c><00:02:31.599><c> in</c><00:02:31.760><c> the</c><00:02:31.840><c> background</c>

00:02:32.630 --> 00:02:32.640 align:start position:0%
and micrograd will in the background
 

00:02:32.640 --> 00:02:34.150 align:start position:0%
and micrograd will in the background
build<00:02:32.959><c> out</c><00:02:33.120><c> this</c><00:02:33.360><c> entire</c><00:02:33.599><c> mathematical</c>

00:02:34.150 --> 00:02:34.160 align:start position:0%
build out this entire mathematical
 

00:02:34.160 --> 00:02:36.390 align:start position:0%
build out this entire mathematical
expression<00:02:34.959><c> so</c><00:02:35.200><c> it</c><00:02:35.360><c> will</c><00:02:35.519><c> for</c><00:02:35.680><c> example</c><00:02:36.080><c> know</c>

00:02:36.390 --> 00:02:36.400 align:start position:0%
expression so it will for example know
 

00:02:36.400 --> 00:02:38.710 align:start position:0%
expression so it will for example know
that<00:02:36.640><c> c</c><00:02:36.959><c> is</c><00:02:37.200><c> also</c><00:02:37.440><c> a</c><00:02:37.599><c> value</c>

00:02:38.710 --> 00:02:38.720 align:start position:0%
that c is also a value
 

00:02:38.720 --> 00:02:41.350 align:start position:0%
that c is also a value
c<00:02:38.959><c> was</c><00:02:39.120><c> a</c><00:02:39.200><c> result</c><00:02:39.599><c> of</c><00:02:39.680><c> an</c><00:02:39.840><c> addition</c><00:02:40.319><c> operation</c>

00:02:41.350 --> 00:02:41.360 align:start position:0%
c was a result of an addition operation
 

00:02:41.360 --> 00:02:42.790 align:start position:0%
c was a result of an addition operation
and<00:02:41.920><c> the</c>

00:02:42.790 --> 00:02:42.800 align:start position:0%
and the
 

00:02:42.800 --> 00:02:46.630 align:start position:0%
and the
child<00:02:43.280><c> nodes</c><00:02:43.920><c> of</c><00:02:44.480><c> c</c><00:02:44.959><c> are</c><00:02:45.200><c> a</c><00:02:45.440><c> and</c><00:02:45.599><c> b</c><00:02:46.000><c> because</c><00:02:46.239><c> the</c>

00:02:46.630 --> 00:02:46.640 align:start position:0%
child nodes of c are a and b because the
 

00:02:46.640 --> 00:02:48.869 align:start position:0%
child nodes of c are a and b because the
and<00:02:46.800><c> will</c><00:02:47.040><c> maintain</c><00:02:47.360><c> pointers</c><00:02:47.840><c> to</c><00:02:48.080><c> a</c><00:02:48.400><c> and</c><00:02:48.480><c> b</c>

00:02:48.869 --> 00:02:48.879 align:start position:0%
and will maintain pointers to a and b
 

00:02:48.879 --> 00:02:50.790 align:start position:0%
and will maintain pointers to a and b
value<00:02:49.200><c> objects</c><00:02:49.840><c> so</c><00:02:50.000><c> we'll</c><00:02:50.160><c> basically</c><00:02:50.560><c> know</c>

00:02:50.790 --> 00:02:50.800 align:start position:0%
value objects so we'll basically know
 

00:02:50.800 --> 00:02:53.350 align:start position:0%
value objects so we'll basically know
exactly<00:02:51.200><c> how</c><00:02:51.360><c> all</c><00:02:51.519><c> of</c><00:02:51.599><c> this</c><00:02:51.840><c> is</c><00:02:52.000><c> laid</c><00:02:52.319><c> out</c>

00:02:53.350 --> 00:02:53.360 align:start position:0%
exactly how all of this is laid out
 

00:02:53.360 --> 00:02:55.430 align:start position:0%
exactly how all of this is laid out
and<00:02:53.519><c> then</c><00:02:54.239><c> not</c><00:02:54.400><c> only</c><00:02:54.640><c> can</c><00:02:54.800><c> we</c><00:02:54.879><c> do</c><00:02:55.040><c> what</c><00:02:55.200><c> we</c><00:02:55.280><c> call</c>

00:02:55.430 --> 00:02:55.440 align:start position:0%
and then not only can we do what we call
 

00:02:55.440 --> 00:02:57.030 align:start position:0%
and then not only can we do what we call
the<00:02:55.599><c> forward</c><00:02:55.920><c> pass</c><00:02:56.319><c> where</c><00:02:56.480><c> we</c><00:02:56.640><c> actually</c><00:02:56.879><c> look</c>

00:02:57.030 --> 00:02:57.040 align:start position:0%
the forward pass where we actually look
 

00:02:57.040 --> 00:02:58.630 align:start position:0%
the forward pass where we actually look
at<00:02:57.120><c> the</c><00:02:57.280><c> value</c><00:02:57.519><c> of</c><00:02:57.680><c> g</c><00:02:57.920><c> of</c><00:02:58.000><c> course</c><00:02:58.319><c> that's</c>

00:02:58.630 --> 00:02:58.640 align:start position:0%
at the value of g of course that's
 

00:02:58.640 --> 00:03:00.550 align:start position:0%
at the value of g of course that's
pretty<00:02:58.959><c> straightforward</c><00:02:59.920><c> we</c><00:03:00.080><c> will</c><00:03:00.239><c> access</c>

00:03:00.550 --> 00:03:00.560 align:start position:0%
pretty straightforward we will access
 

00:03:00.560 --> 00:03:03.589 align:start position:0%
pretty straightforward we will access
that<00:03:00.800><c> using</c><00:03:01.040><c> the</c><00:03:01.200><c> dot</c><00:03:01.519><c> data</c><00:03:02.239><c> attribute</c><00:03:03.200><c> and</c><00:03:03.360><c> so</c>

00:03:03.589 --> 00:03:03.599 align:start position:0%
that using the dot data attribute and so
 

00:03:03.599 --> 00:03:06.070 align:start position:0%
that using the dot data attribute and so
the<00:03:03.840><c> output</c><00:03:04.319><c> of</c><00:03:04.480><c> the</c><00:03:04.640><c> forward</c><00:03:04.959><c> pass</c><00:03:05.599><c> the</c><00:03:05.760><c> value</c>

00:03:06.070 --> 00:03:06.080 align:start position:0%
the output of the forward pass the value
 

00:03:06.080 --> 00:03:09.350 align:start position:0%
the output of the forward pass the value
of<00:03:06.239><c> g</c><00:03:06.640><c> is</c><00:03:06.879><c> 24.7</c><00:03:07.920><c> it</c><00:03:08.000><c> turns</c><00:03:08.319><c> out</c><00:03:08.959><c> but</c><00:03:09.120><c> the</c><00:03:09.200><c> big</c>

00:03:09.350 --> 00:03:09.360 align:start position:0%
of g is 24.7 it turns out but the big
 

00:03:09.360 --> 00:03:11.910 align:start position:0%
of g is 24.7 it turns out but the big
deal<00:03:09.920><c> is</c><00:03:10.159><c> that</c><00:03:10.400><c> we</c><00:03:10.480><c> can</c><00:03:10.640><c> also</c><00:03:10.959><c> take</c><00:03:11.200><c> this</c><00:03:11.680><c> g</c>

00:03:11.910 --> 00:03:11.920 align:start position:0%
deal is that we can also take this g
 

00:03:11.920 --> 00:03:13.830 align:start position:0%
deal is that we can also take this g
value<00:03:12.239><c> object</c><00:03:12.720><c> and</c><00:03:12.800><c> we</c><00:03:12.959><c> can</c><00:03:13.120><c> call</c><00:03:13.599><c> that</c>

00:03:13.830 --> 00:03:13.840 align:start position:0%
value object and we can call that
 

00:03:13.840 --> 00:03:14.869 align:start position:0%
value object and we can call that
backward

00:03:14.869 --> 00:03:14.879 align:start position:0%
backward
 

00:03:14.879 --> 00:03:16.710 align:start position:0%
backward
and<00:03:15.040><c> this</c><00:03:15.200><c> will</c><00:03:15.360><c> basically</c><00:03:15.920><c> uh</c><00:03:16.319><c> initialize</c>

00:03:16.710 --> 00:03:16.720 align:start position:0%
and this will basically uh initialize
 

00:03:16.720 --> 00:03:19.830 align:start position:0%
and this will basically uh initialize
back<00:03:16.959><c> propagation</c><00:03:17.599><c> at</c><00:03:17.840><c> the</c><00:03:18.000><c> node</c><00:03:18.319><c> g</c>

00:03:19.830 --> 00:03:19.840 align:start position:0%
back propagation at the node g
 

00:03:19.840 --> 00:03:21.350 align:start position:0%
back propagation at the node g
and<00:03:19.920><c> what</c><00:03:20.080><c> backpropagation</c><00:03:20.720><c> is</c><00:03:20.800><c> going</c><00:03:21.040><c> to</c><00:03:21.120><c> do</c>

00:03:21.350 --> 00:03:21.360 align:start position:0%
and what backpropagation is going to do
 

00:03:21.360 --> 00:03:23.190 align:start position:0%
and what backpropagation is going to do
is<00:03:21.599><c> it's</c><00:03:21.680><c> going</c><00:03:21.840><c> to</c><00:03:21.920><c> start</c><00:03:22.159><c> at</c><00:03:22.319><c> g</c><00:03:22.879><c> and</c><00:03:23.040><c> it's</c>

00:03:23.190 --> 00:03:23.200 align:start position:0%
is it's going to start at g and it's
 

00:03:23.200 --> 00:03:25.190 align:start position:0%
is it's going to start at g and it's
going<00:03:23.360><c> to</c><00:03:23.599><c> go</c><00:03:24.159><c> backwards</c><00:03:24.720><c> through</c><00:03:25.040><c> that</c>

00:03:25.190 --> 00:03:25.200 align:start position:0%
going to go backwards through that
 

00:03:25.200 --> 00:03:26.710 align:start position:0%
going to go backwards through that
expression<00:03:25.680><c> graph</c><00:03:26.159><c> and</c><00:03:26.319><c> it's</c><00:03:26.480><c> going</c><00:03:26.640><c> to</c>

00:03:26.710 --> 00:03:26.720 align:start position:0%
expression graph and it's going to
 

00:03:26.720 --> 00:03:28.789 align:start position:0%
expression graph and it's going to
recursively<00:03:27.440><c> apply</c><00:03:28.000><c> the</c><00:03:28.159><c> chain</c><00:03:28.400><c> rule</c><00:03:28.640><c> from</c>

00:03:28.789 --> 00:03:28.799 align:start position:0%
recursively apply the chain rule from
 

00:03:28.799 --> 00:03:30.070 align:start position:0%
recursively apply the chain rule from
calculus

00:03:30.070 --> 00:03:30.080 align:start position:0%
calculus
 

00:03:30.080 --> 00:03:32.229 align:start position:0%
calculus
and<00:03:30.480><c> what</c><00:03:30.720><c> that</c><00:03:30.879><c> allows</c><00:03:31.200><c> us</c><00:03:31.280><c> to</c><00:03:31.360><c> do</c><00:03:31.519><c> then</c><00:03:32.080><c> is</c>

00:03:32.229 --> 00:03:32.239 align:start position:0%
and what that allows us to do then is
 

00:03:32.239 --> 00:03:34.229 align:start position:0%
and what that allows us to do then is
we're<00:03:32.400><c> going</c><00:03:32.560><c> to</c><00:03:32.959><c> evaluate</c><00:03:33.440><c> basically</c><00:03:33.840><c> the</c>

00:03:34.229 --> 00:03:34.239 align:start position:0%
we're going to evaluate basically the
 

00:03:34.239 --> 00:03:36.550 align:start position:0%
we're going to evaluate basically the
derivative<00:03:34.799><c> of</c><00:03:34.959><c> g</c><00:03:35.440><c> with</c><00:03:35.599><c> respect</c><00:03:35.920><c> to</c><00:03:36.159><c> all</c><00:03:36.319><c> the</c>

00:03:36.550 --> 00:03:36.560 align:start position:0%
derivative of g with respect to all the
 

00:03:36.560 --> 00:03:38.149 align:start position:0%
derivative of g with respect to all the
internal<00:03:37.200><c> nodes</c>

00:03:38.149 --> 00:03:38.159 align:start position:0%
internal nodes
 

00:03:38.159 --> 00:03:40.949 align:start position:0%
internal nodes
like<00:03:38.560><c> e</c><00:03:38.879><c> d</c><00:03:39.200><c> and</c><00:03:39.360><c> c</c><00:03:40.000><c> but</c><00:03:40.239><c> also</c><00:03:40.400><c> with</c><00:03:40.560><c> respect</c><00:03:40.879><c> to</c>

00:03:40.949 --> 00:03:40.959 align:start position:0%
like e d and c but also with respect to
 

00:03:40.959 --> 00:03:43.190 align:start position:0%
like e d and c but also with respect to
the<00:03:41.200><c> inputs</c><00:03:41.840><c> a</c><00:03:42.159><c> and</c><00:03:42.319><c> b</c>

00:03:43.190 --> 00:03:43.200 align:start position:0%
the inputs a and b
 

00:03:43.200 --> 00:03:45.350 align:start position:0%
the inputs a and b
and<00:03:43.360><c> then</c><00:03:43.840><c> we</c><00:03:44.000><c> can</c><00:03:44.159><c> actually</c><00:03:44.480><c> query</c><00:03:45.120><c> this</c>

00:03:45.350 --> 00:03:45.360 align:start position:0%
and then we can actually query this
 

00:03:45.360 --> 00:03:47.910 align:start position:0%
and then we can actually query this
derivative<00:03:46.239><c> of</c><00:03:46.480><c> g</c><00:03:46.720><c> with</c><00:03:46.879><c> respect</c><00:03:47.200><c> to</c><00:03:47.440><c> a</c><00:03:47.760><c> for</c>

00:03:47.910 --> 00:03:47.920 align:start position:0%
derivative of g with respect to a for
 

00:03:47.920 --> 00:03:50.149 align:start position:0%
derivative of g with respect to a for
example<00:03:48.400><c> that's</c><00:03:48.720><c> a</c><00:03:48.879><c> dot</c><00:03:49.120><c> grad</c><00:03:49.680><c> in</c><00:03:49.840><c> this</c><00:03:50.000><c> case</c>

00:03:50.149 --> 00:03:50.159 align:start position:0%
example that's a dot grad in this case
 

00:03:50.159 --> 00:03:52.470 align:start position:0%
example that's a dot grad in this case
it<00:03:50.239><c> happens</c><00:03:50.480><c> to</c><00:03:50.560><c> be</c><00:03:50.799><c> 138</c><00:03:51.760><c> and</c><00:03:51.920><c> the</c><00:03:52.000><c> derivative</c>

00:03:52.470 --> 00:03:52.480 align:start position:0%
it happens to be 138 and the derivative
 

00:03:52.480 --> 00:03:54.229 align:start position:0%
it happens to be 138 and the derivative
of<00:03:52.560><c> g</c><00:03:52.799><c> with</c><00:03:52.959><c> respect</c><00:03:53.280><c> to</c><00:03:53.519><c> b</c>

00:03:54.229 --> 00:03:54.239 align:start position:0%
of g with respect to b
 

00:03:54.239 --> 00:03:57.429 align:start position:0%
of g with respect to b
which<00:03:54.560><c> also</c><00:03:54.799><c> happens</c><00:03:55.120><c> to</c><00:03:55.200><c> be</c><00:03:55.360><c> here</c><00:03:55.680><c> 645</c>

00:03:57.429 --> 00:03:57.439 align:start position:0%
which also happens to be here 645
 

00:03:57.439 --> 00:03:59.429 align:start position:0%
which also happens to be here 645
and<00:03:57.519><c> this</c><00:03:57.680><c> derivative</c><00:03:58.400><c> we'll</c><00:03:58.640><c> see</c><00:03:58.879><c> soon</c><00:03:59.280><c> is</c>

00:03:59.429 --> 00:03:59.439 align:start position:0%
and this derivative we'll see soon is
 

00:03:59.439 --> 00:04:01.350 align:start position:0%
and this derivative we'll see soon is
very<00:03:59.599><c> important</c><00:04:00.000><c> information</c><00:04:00.879><c> because</c><00:04:01.120><c> it's</c>

00:04:01.350 --> 00:04:01.360 align:start position:0%
very important information because it's
 

00:04:01.360 --> 00:04:04.869 align:start position:0%
very important information because it's
telling<00:04:01.680><c> us</c><00:04:02.080><c> how</c><00:04:02.480><c> a</c><00:04:02.720><c> and</c><00:04:02.879><c> b</c><00:04:03.360><c> are</c><00:04:03.599><c> affecting</c><00:04:04.319><c> g</c>

00:04:04.869 --> 00:04:04.879 align:start position:0%
telling us how a and b are affecting g
 

00:04:04.879 --> 00:04:06.869 align:start position:0%
telling us how a and b are affecting g
through<00:04:05.120><c> this</c><00:04:05.280><c> mathematical</c><00:04:05.760><c> expression</c><00:04:06.720><c> so</c>

00:04:06.869 --> 00:04:06.879 align:start position:0%
through this mathematical expression so
 

00:04:06.879 --> 00:04:08.070 align:start position:0%
through this mathematical expression so
in<00:04:07.040><c> particular</c>

00:04:08.070 --> 00:04:08.080 align:start position:0%
in particular
 

00:04:08.080 --> 00:04:11.830 align:start position:0%
in particular
a<00:04:08.400><c> dot</c><00:04:08.640><c> grad</c><00:04:09.040><c> is</c><00:04:09.200><c> 138</c><00:04:10.239><c> so</c><00:04:10.480><c> if</c><00:04:10.560><c> we</c><00:04:10.720><c> slightly</c>

00:04:11.830 --> 00:04:11.840 align:start position:0%
a dot grad is 138 so if we slightly
 

00:04:11.840 --> 00:04:14.789 align:start position:0%
a dot grad is 138 so if we slightly
nudge<00:04:12.239><c> a</c><00:04:12.560><c> and</c><00:04:12.640><c> make</c><00:04:12.799><c> it</c><00:04:12.959><c> slightly</c><00:04:13.519><c> larger</c>

00:04:14.789 --> 00:04:14.799 align:start position:0%
nudge a and make it slightly larger
 

00:04:14.799 --> 00:04:17.990 align:start position:0%
nudge a and make it slightly larger
138<00:04:15.439><c> is</c><00:04:15.519><c> telling</c><00:04:15.840><c> us</c><00:04:16.000><c> that</c><00:04:16.320><c> g</c><00:04:16.799><c> will</c><00:04:17.040><c> grow</c><00:04:17.840><c> and</c>

00:04:17.990 --> 00:04:18.000 align:start position:0%
138 is telling us that g will grow and
 

00:04:18.000 --> 00:04:19.430 align:start position:0%
138 is telling us that g will grow and
the<00:04:18.160><c> slope</c><00:04:18.479><c> of</c><00:04:18.560><c> that</c><00:04:18.720><c> growth</c><00:04:19.040><c> is</c><00:04:19.120><c> going</c><00:04:19.280><c> to</c><00:04:19.359><c> be</c>

00:04:19.430 --> 00:04:19.440 align:start position:0%
the slope of that growth is going to be
 

00:04:19.440 --> 00:04:20.710 align:start position:0%
the slope of that growth is going to be
138

00:04:20.710 --> 00:04:20.720 align:start position:0%
138
 

00:04:20.720 --> 00:04:22.950 align:start position:0%
138
and<00:04:20.880><c> the</c><00:04:21.040><c> slope</c><00:04:21.359><c> of</c><00:04:21.440><c> growth</c><00:04:21.840><c> of</c><00:04:22.160><c> b</c><00:04:22.560><c> is</c><00:04:22.720><c> going</c><00:04:22.800><c> to</c>

00:04:22.950 --> 00:04:22.960 align:start position:0%
and the slope of growth of b is going to
 

00:04:22.960 --> 00:04:25.590 align:start position:0%
and the slope of growth of b is going to
be<00:04:23.040><c> 645.</c><00:04:24.400><c> so</c><00:04:24.560><c> that's</c><00:04:24.720><c> going</c><00:04:24.800><c> to</c><00:04:24.880><c> tell</c><00:04:25.040><c> us</c><00:04:25.199><c> about</c>

00:04:25.590 --> 00:04:25.600 align:start position:0%
be 645. so that's going to tell us about
 

00:04:25.600 --> 00:04:27.830 align:start position:0%
be 645. so that's going to tell us about
how<00:04:25.840><c> g</c><00:04:26.080><c> will</c><00:04:26.240><c> respond</c><00:04:26.800><c> if</c><00:04:27.040><c> a</c><00:04:27.199><c> and</c><00:04:27.360><c> b</c><00:04:27.520><c> get</c>

00:04:27.830 --> 00:04:27.840 align:start position:0%
how g will respond if a and b get
 

00:04:27.840 --> 00:04:29.749 align:start position:0%
how g will respond if a and b get
tweaked<00:04:28.320><c> a</c><00:04:28.400><c> tiny</c><00:04:28.720><c> amount</c><00:04:29.199><c> in</c><00:04:29.280><c> a</c><00:04:29.360><c> positive</c>

00:04:29.749 --> 00:04:29.759 align:start position:0%
tweaked a tiny amount in a positive
 

00:04:29.759 --> 00:04:31.110 align:start position:0%
tweaked a tiny amount in a positive
direction

00:04:31.110 --> 00:04:31.120 align:start position:0%
direction
 

00:04:31.120 --> 00:04:33.430 align:start position:0%
direction
okay

00:04:33.430 --> 00:04:33.440 align:start position:0%
 
 

00:04:33.440 --> 00:04:34.870 align:start position:0%
 
now<00:04:33.759><c> you</c><00:04:33.919><c> might</c><00:04:34.080><c> be</c><00:04:34.240><c> confused</c><00:04:34.560><c> about</c><00:04:34.720><c> what</c>

00:04:34.870 --> 00:04:34.880 align:start position:0%
now you might be confused about what
 

00:04:34.880 --> 00:04:36.790 align:start position:0%
now you might be confused about what
this<00:04:35.440><c> expression</c><00:04:35.919><c> is</c><00:04:36.080><c> that</c><00:04:36.240><c> we</c><00:04:36.400><c> built</c><00:04:36.639><c> out</c>

00:04:36.790 --> 00:04:36.800 align:start position:0%
this expression is that we built out
 

00:04:36.800 --> 00:04:38.550 align:start position:0%
this expression is that we built out
here<00:04:37.199><c> and</c><00:04:37.280><c> this</c><00:04:37.520><c> expression</c><00:04:38.000><c> by</c><00:04:38.160><c> the</c><00:04:38.240><c> way</c><00:04:38.400><c> is</c>

00:04:38.550 --> 00:04:38.560 align:start position:0%
here and this expression by the way is
 

00:04:38.560 --> 00:04:40.710 align:start position:0%
here and this expression by the way is
completely<00:04:38.880><c> meaningless</c><00:04:39.680><c> i</c><00:04:39.840><c> just</c><00:04:40.080><c> made</c><00:04:40.320><c> it</c><00:04:40.479><c> up</c>

00:04:40.710 --> 00:04:40.720 align:start position:0%
completely meaningless i just made it up
 

00:04:40.720 --> 00:04:42.230 align:start position:0%
completely meaningless i just made it up
i'm<00:04:40.880><c> just</c><00:04:41.120><c> flexing</c><00:04:41.520><c> about</c><00:04:41.759><c> the</c><00:04:41.840><c> kinds</c><00:04:42.080><c> of</c>

00:04:42.230 --> 00:04:42.240 align:start position:0%
i'm just flexing about the kinds of
 

00:04:42.240 --> 00:04:43.749 align:start position:0%
i'm just flexing about the kinds of
operations<00:04:42.960><c> that</c><00:04:43.120><c> are</c><00:04:43.199><c> supported</c><00:04:43.600><c> by</c>

00:04:43.749 --> 00:04:43.759 align:start position:0%
operations that are supported by
 

00:04:43.759 --> 00:04:44.870 align:start position:0%
operations that are supported by
micrograd

00:04:44.870 --> 00:04:44.880 align:start position:0%
micrograd
 

00:04:44.880 --> 00:04:46.310 align:start position:0%
micrograd
what<00:04:45.040><c> we</c><00:04:45.199><c> actually</c><00:04:45.520><c> really</c><00:04:45.680><c> care</c><00:04:45.919><c> about</c><00:04:46.160><c> are</c>

00:04:46.310 --> 00:04:46.320 align:start position:0%
what we actually really care about are
 

00:04:46.320 --> 00:04:48.070 align:start position:0%
what we actually really care about are
neural<00:04:46.560><c> networks</c><00:04:47.440><c> but</c><00:04:47.600><c> it</c><00:04:47.680><c> turns</c><00:04:47.919><c> out</c><00:04:48.000><c> that</c>

00:04:48.070 --> 00:04:48.080 align:start position:0%
neural networks but it turns out that
 

00:04:48.080 --> 00:04:49.830 align:start position:0%
neural networks but it turns out that
neural<00:04:48.320><c> networks</c><00:04:48.800><c> are</c><00:04:48.880><c> just</c><00:04:49.199><c> mathematical</c>

00:04:49.830 --> 00:04:49.840 align:start position:0%
neural networks are just mathematical
 

00:04:49.840 --> 00:04:51.909 align:start position:0%
neural networks are just mathematical
expressions<00:04:50.560><c> just</c><00:04:50.800><c> like</c><00:04:51.040><c> this</c><00:04:51.199><c> one</c><00:04:51.680><c> but</c>

00:04:51.909 --> 00:04:51.919 align:start position:0%
expressions just like this one but
 

00:04:51.919 --> 00:04:54.870 align:start position:0%
expressions just like this one but
actually<00:04:52.240><c> slightly</c><00:04:52.639><c> bit</c><00:04:52.800><c> less</c><00:04:53.120><c> crazy</c><00:04:53.440><c> even</c>

00:04:54.870 --> 00:04:54.880 align:start position:0%
actually slightly bit less crazy even
 

00:04:54.880 --> 00:04:56.310 align:start position:0%
actually slightly bit less crazy even
neural<00:04:55.120><c> networks</c><00:04:55.440><c> are</c><00:04:55.520><c> just</c><00:04:55.680><c> a</c><00:04:55.759><c> mathematical</c>

00:04:56.310 --> 00:04:56.320 align:start position:0%
neural networks are just a mathematical
 

00:04:56.320 --> 00:04:59.030 align:start position:0%
neural networks are just a mathematical
expression<00:04:57.040><c> they</c><00:04:57.280><c> take</c><00:04:57.520><c> the</c><00:04:57.919><c> input</c><00:04:58.240><c> data</c><00:04:58.880><c> as</c>

00:04:59.030 --> 00:04:59.040 align:start position:0%
expression they take the input data as
 

00:04:59.040 --> 00:05:00.710 align:start position:0%
expression they take the input data as
an<00:04:59.199><c> input</c><00:04:59.680><c> and</c><00:04:59.759><c> they</c><00:04:59.919><c> take</c><00:05:00.080><c> the</c><00:05:00.240><c> weights</c><00:05:00.560><c> of</c><00:05:00.639><c> a</c>

00:05:00.710 --> 00:05:00.720 align:start position:0%
an input and they take the weights of a
 

00:05:00.720 --> 00:05:02.469 align:start position:0%
an input and they take the weights of a
neural<00:05:00.960><c> network</c><00:05:01.440><c> as</c><00:05:01.520><c> an</c><00:05:01.680><c> input</c><00:05:02.160><c> and</c><00:05:02.320><c> it's</c><00:05:02.479><c> a</c>

00:05:02.469 --> 00:05:02.479 align:start position:0%
neural network as an input and it's a
 

00:05:02.479 --> 00:05:04.550 align:start position:0%
neural network as an input and it's a
mathematical<00:05:03.039><c> expression</c><00:05:03.759><c> and</c><00:05:03.919><c> the</c><00:05:04.080><c> output</c>

00:05:04.550 --> 00:05:04.560 align:start position:0%
mathematical expression and the output
 

00:05:04.560 --> 00:05:06.310 align:start position:0%
mathematical expression and the output
are<00:05:04.720><c> your</c><00:05:04.960><c> predictions</c><00:05:05.520><c> of</c><00:05:05.600><c> your</c><00:05:05.759><c> neural</c><00:05:06.000><c> net</c>

00:05:06.310 --> 00:05:06.320 align:start position:0%
are your predictions of your neural net
 

00:05:06.320 --> 00:05:08.150 align:start position:0%
are your predictions of your neural net
or<00:05:06.720><c> the</c><00:05:06.880><c> loss</c><00:05:07.120><c> function</c><00:05:07.440><c> we'll</c><00:05:07.680><c> see</c><00:05:07.840><c> this</c><00:05:08.000><c> in</c><00:05:08.080><c> a</c>

00:05:08.150 --> 00:05:08.160 align:start position:0%
or the loss function we'll see this in a
 

00:05:08.160 --> 00:05:10.550 align:start position:0%
or the loss function we'll see this in a
bit<00:05:08.880><c> but</c><00:05:09.120><c> basically</c><00:05:09.600><c> neural</c><00:05:09.840><c> networks</c><00:05:10.320><c> just</c>

00:05:10.550 --> 00:05:10.560 align:start position:0%
bit but basically neural networks just
 

00:05:10.560 --> 00:05:12.070 align:start position:0%
bit but basically neural networks just
happen<00:05:10.800><c> to</c><00:05:10.960><c> be</c><00:05:11.199><c> a</c><00:05:11.360><c> certain</c><00:05:11.759><c> class</c><00:05:12.000><c> of</c>

00:05:12.070 --> 00:05:12.080 align:start position:0%
happen to be a certain class of
 

00:05:12.080 --> 00:05:13.749 align:start position:0%
happen to be a certain class of
mathematical<00:05:12.639><c> expressions</c>

00:05:13.749 --> 00:05:13.759 align:start position:0%
mathematical expressions
 

00:05:13.759 --> 00:05:15.189 align:start position:0%
mathematical expressions
but<00:05:14.000><c> back</c><00:05:14.240><c> propagation</c><00:05:14.800><c> is</c><00:05:14.880><c> actually</c>

00:05:15.189 --> 00:05:15.199 align:start position:0%
but back propagation is actually
 

00:05:15.199 --> 00:05:17.110 align:start position:0%
but back propagation is actually
significantly<00:05:15.840><c> more</c><00:05:16.160><c> general</c><00:05:16.720><c> it</c><00:05:16.880><c> doesn't</c>

00:05:17.110 --> 00:05:17.120 align:start position:0%
significantly more general it doesn't
 

00:05:17.120 --> 00:05:18.790 align:start position:0%
significantly more general it doesn't
actually<00:05:17.440><c> care</c><00:05:17.680><c> about</c><00:05:17.840><c> neural</c><00:05:18.160><c> networks</c><00:05:18.639><c> at</c>

00:05:18.790 --> 00:05:18.800 align:start position:0%
actually care about neural networks at
 

00:05:18.800 --> 00:05:20.629 align:start position:0%
actually care about neural networks at
all<00:05:19.039><c> it</c><00:05:19.280><c> only</c><00:05:19.440><c> tells</c><00:05:19.680><c> us</c><00:05:19.759><c> about</c><00:05:20.240><c> arbitrary</c>

00:05:20.629 --> 00:05:20.639 align:start position:0%
all it only tells us about arbitrary
 

00:05:20.639 --> 00:05:22.390 align:start position:0%
all it only tells us about arbitrary
mathematical<00:05:21.199><c> expressions</c><00:05:21.919><c> and</c><00:05:22.000><c> then</c><00:05:22.160><c> we</c>

00:05:22.390 --> 00:05:22.400 align:start position:0%
mathematical expressions and then we
 

00:05:22.400 --> 00:05:24.469 align:start position:0%
mathematical expressions and then we
happen<00:05:22.720><c> to</c><00:05:22.960><c> use</c><00:05:23.440><c> that</c><00:05:23.600><c> machinery</c><00:05:24.240><c> for</c>

00:05:24.469 --> 00:05:24.479 align:start position:0%
happen to use that machinery for
 

00:05:24.479 --> 00:05:26.790 align:start position:0%
happen to use that machinery for
training<00:05:24.880><c> of</c><00:05:25.280><c> neural</c><00:05:25.600><c> networks</c><00:05:26.320><c> now</c><00:05:26.479><c> one</c><00:05:26.639><c> more</c>

00:05:26.790 --> 00:05:26.800 align:start position:0%
training of neural networks now one more
 

00:05:26.800 --> 00:05:28.390 align:start position:0%
training of neural networks now one more
note<00:05:27.039><c> i</c><00:05:27.120><c> would</c><00:05:27.199><c> like</c><00:05:27.360><c> to</c><00:05:27.440><c> make</c><00:05:27.600><c> at</c><00:05:27.680><c> this</c><00:05:27.840><c> stage</c>

00:05:28.390 --> 00:05:28.400 align:start position:0%
note i would like to make at this stage
 

00:05:28.400 --> 00:05:30.230 align:start position:0%
note i would like to make at this stage
is<00:05:28.479><c> that</c><00:05:28.639><c> as</c><00:05:28.800><c> you</c><00:05:28.880><c> see</c><00:05:29.120><c> here</c><00:05:29.360><c> micrograd</c><00:05:30.000><c> is</c><00:05:30.160><c> a</c>

00:05:30.230 --> 00:05:30.240 align:start position:0%
is that as you see here micrograd is a
 

00:05:30.240 --> 00:05:32.629 align:start position:0%
is that as you see here micrograd is a
scalar<00:05:30.720><c> valued</c><00:05:31.120><c> auto</c><00:05:31.360><c> grant</c><00:05:31.600><c> engine</c><00:05:32.240><c> so</c><00:05:32.479><c> it's</c>

00:05:32.629 --> 00:05:32.639 align:start position:0%
scalar valued auto grant engine so it's
 

00:05:32.639 --> 00:05:34.230 align:start position:0%
scalar valued auto grant engine so it's
working<00:05:32.960><c> on</c><00:05:33.199><c> the</c><00:05:33.600><c> you</c><00:05:33.680><c> know</c><00:05:33.840><c> level</c><00:05:34.160><c> of</c>

00:05:34.230 --> 00:05:34.240 align:start position:0%
working on the you know level of
 

00:05:34.240 --> 00:05:35.990 align:start position:0%
working on the you know level of
individual<00:05:34.720><c> scalars</c><00:05:35.120><c> like</c><00:05:35.360><c> negative</c><00:05:35.680><c> four</c>

00:05:35.990 --> 00:05:36.000 align:start position:0%
individual scalars like negative four
 

00:05:36.000 --> 00:05:37.749 align:start position:0%
individual scalars like negative four
and<00:05:36.160><c> two</c><00:05:36.639><c> and</c><00:05:36.800><c> we're</c><00:05:36.960><c> taking</c><00:05:37.199><c> neural</c><00:05:37.440><c> nets</c><00:05:37.680><c> and</c>

00:05:37.749 --> 00:05:37.759 align:start position:0%
and two and we're taking neural nets and
 

00:05:37.759 --> 00:05:39.270 align:start position:0%
and two and we're taking neural nets and
we're<00:05:37.919><c> breaking</c><00:05:38.160><c> them</c><00:05:38.320><c> down</c><00:05:38.720><c> all</c><00:05:38.800><c> the</c><00:05:38.960><c> way</c><00:05:39.120><c> to</c>

00:05:39.270 --> 00:05:39.280 align:start position:0%
we're breaking them down all the way to
 

00:05:39.280 --> 00:05:41.350 align:start position:0%
we're breaking them down all the way to
these<00:05:39.600><c> atoms</c><00:05:40.080><c> of</c><00:05:40.320><c> individual</c><00:05:40.720><c> scalars</c><00:05:41.199><c> and</c>

00:05:41.350 --> 00:05:41.360 align:start position:0%
these atoms of individual scalars and
 

00:05:41.360 --> 00:05:43.110 align:start position:0%
these atoms of individual scalars and
all<00:05:41.440><c> the</c><00:05:41.600><c> little</c><00:05:41.840><c> pluses</c><00:05:42.240><c> and</c><00:05:42.400><c> times</c><00:05:42.800><c> and</c><00:05:42.960><c> it's</c>

00:05:43.110 --> 00:05:43.120 align:start position:0%
all the little pluses and times and it's
 

00:05:43.120 --> 00:05:45.590 align:start position:0%
all the little pluses and times and it's
just<00:05:43.759><c> excessive</c><00:05:44.720><c> and</c><00:05:44.800><c> so</c><00:05:45.120><c> obviously</c><00:05:45.440><c> you</c>

00:05:45.590 --> 00:05:45.600 align:start position:0%
just excessive and so obviously you
 

00:05:45.600 --> 00:05:47.110 align:start position:0%
just excessive and so obviously you
would<00:05:45.759><c> never</c><00:05:46.000><c> be</c><00:05:46.160><c> doing</c><00:05:46.479><c> any</c><00:05:46.720><c> of</c><00:05:46.800><c> this</c><00:05:47.039><c> in</c>

00:05:47.110 --> 00:05:47.120 align:start position:0%
would never be doing any of this in
 

00:05:47.120 --> 00:05:48.790 align:start position:0%
would never be doing any of this in
production<00:05:47.759><c> it's</c><00:05:48.000><c> really</c><00:05:48.160><c> just</c><00:05:48.320><c> put</c><00:05:48.479><c> down</c><00:05:48.639><c> for</c>

00:05:48.790 --> 00:05:48.800 align:start position:0%
production it's really just put down for
 

00:05:48.800 --> 00:05:50.790 align:start position:0%
production it's really just put down for
pedagogical<00:05:49.440><c> reasons</c><00:05:49.840><c> because</c><00:05:50.160><c> it</c><00:05:50.320><c> allows</c><00:05:50.639><c> us</c>

00:05:50.790 --> 00:05:50.800 align:start position:0%
pedagogical reasons because it allows us
 

00:05:50.800 --> 00:05:52.310 align:start position:0%
pedagogical reasons because it allows us
to<00:05:50.960><c> not</c><00:05:51.120><c> have</c><00:05:51.280><c> to</c><00:05:51.440><c> deal</c><00:05:51.680><c> with</c><00:05:52.000><c> these</c>

00:05:52.310 --> 00:05:52.320 align:start position:0%
to not have to deal with these
 

00:05:52.320 --> 00:05:54.550 align:start position:0%
to not have to deal with these
n-dimensional<00:05:53.120><c> tensors</c><00:05:53.759><c> that</c><00:05:53.919><c> you</c><00:05:54.080><c> would</c><00:05:54.240><c> use</c>

00:05:54.550 --> 00:05:54.560 align:start position:0%
n-dimensional tensors that you would use
 

00:05:54.560 --> 00:05:56.950 align:start position:0%
n-dimensional tensors that you would use
in<00:05:54.720><c> modern</c><00:05:55.199><c> deep</c><00:05:55.440><c> neural</c><00:05:55.680><c> network</c><00:05:56.000><c> library</c><00:05:56.800><c> so</c>

00:05:56.950 --> 00:05:56.960 align:start position:0%
in modern deep neural network library so
 

00:05:56.960 --> 00:05:58.950 align:start position:0%
in modern deep neural network library so
this<00:05:57.199><c> is</c><00:05:57.280><c> really</c><00:05:58.080><c> done</c><00:05:58.479><c> so</c><00:05:58.639><c> that</c><00:05:58.720><c> you</c>

00:05:58.950 --> 00:05:58.960 align:start position:0%
this is really done so that you
 

00:05:58.960 --> 00:06:00.710 align:start position:0%
this is really done so that you
understand<00:05:59.759><c> and</c><00:05:59.919><c> refactor</c><00:06:00.400><c> out</c><00:06:00.560><c> back</c>

00:06:00.710 --> 00:06:00.720 align:start position:0%
understand and refactor out back
 

00:06:00.720 --> 00:06:02.710 align:start position:0%
understand and refactor out back
propagation<00:06:01.440><c> and</c><00:06:01.919><c> chain</c><00:06:02.160><c> rule</c><00:06:02.479><c> and</c>

00:06:02.710 --> 00:06:02.720 align:start position:0%
propagation and chain rule and
 

00:06:02.720 --> 00:06:04.950 align:start position:0%
propagation and chain rule and
understanding<00:06:03.280><c> of</c><00:06:03.520><c> neurologic</c><00:06:04.000><c> training</c>

00:06:04.950 --> 00:06:04.960 align:start position:0%
understanding of neurologic training
 

00:06:04.960 --> 00:06:06.710 align:start position:0%
understanding of neurologic training
and<00:06:05.039><c> then</c><00:06:05.840><c> if</c><00:06:05.919><c> you</c><00:06:06.080><c> actually</c><00:06:06.240><c> want</c><00:06:06.400><c> to</c><00:06:06.479><c> train</c>

00:06:06.710 --> 00:06:06.720 align:start position:0%
and then if you actually want to train
 

00:06:06.720 --> 00:06:08.070 align:start position:0%
and then if you actually want to train
bigger<00:06:06.960><c> networks</c><00:06:07.440><c> you</c><00:06:07.600><c> have</c><00:06:07.680><c> to</c><00:06:07.759><c> be</c><00:06:07.840><c> using</c>

00:06:08.070 --> 00:06:08.080 align:start position:0%
bigger networks you have to be using
 

00:06:08.080 --> 00:06:09.830 align:start position:0%
bigger networks you have to be using
these<00:06:08.319><c> tensors</c><00:06:08.960><c> but</c><00:06:09.199><c> none</c><00:06:09.440><c> of</c><00:06:09.520><c> the</c><00:06:09.600><c> math</c>

00:06:09.830 --> 00:06:09.840 align:start position:0%
these tensors but none of the math
 

00:06:09.840 --> 00:06:11.270 align:start position:0%
these tensors but none of the math
changes<00:06:10.240><c> this</c><00:06:10.400><c> is</c><00:06:10.479><c> done</c><00:06:10.720><c> purely</c><00:06:11.039><c> for</c>

00:06:11.270 --> 00:06:11.280 align:start position:0%
changes this is done purely for
 

00:06:11.280 --> 00:06:13.430 align:start position:0%
changes this is done purely for
efficiency<00:06:12.319><c> we</c><00:06:12.479><c> are</c><00:06:12.560><c> basically</c><00:06:12.880><c> taking</c><00:06:13.120><c> scale</c>

00:06:13.430 --> 00:06:13.440 align:start position:0%
efficiency we are basically taking scale
 

00:06:13.440 --> 00:06:14.230 align:start position:0%
efficiency we are basically taking scale
value

00:06:14.230 --> 00:06:14.240 align:start position:0%
value
 

00:06:14.240 --> 00:06:15.990 align:start position:0%
value
all<00:06:14.400><c> the</c><00:06:14.560><c> scale</c><00:06:14.800><c> values</c><00:06:15.440><c> we're</c><00:06:15.600><c> packaging</c>

00:06:15.990 --> 00:06:16.000 align:start position:0%
all the scale values we're packaging
 

00:06:16.000 --> 00:06:17.749 align:start position:0%
all the scale values we're packaging
them<00:06:16.160><c> up</c><00:06:16.240><c> into</c><00:06:16.479><c> tensors</c><00:06:17.120><c> which</c><00:06:17.360><c> are</c><00:06:17.520><c> just</c>

00:06:17.749 --> 00:06:17.759 align:start position:0%
them up into tensors which are just
 

00:06:17.759 --> 00:06:20.070 align:start position:0%
them up into tensors which are just
arrays<00:06:18.160><c> of</c><00:06:18.240><c> these</c><00:06:18.479><c> scalars</c><00:06:19.360><c> and</c><00:06:19.520><c> then</c><00:06:19.759><c> because</c>

00:06:20.070 --> 00:06:20.080 align:start position:0%
arrays of these scalars and then because
 

00:06:20.080 --> 00:06:22.390 align:start position:0%
arrays of these scalars and then because
we<00:06:20.319><c> have</c><00:06:20.479><c> these</c><00:06:20.880><c> large</c><00:06:21.199><c> arrays</c><00:06:21.840><c> we're</c><00:06:22.080><c> making</c>

00:06:22.390 --> 00:06:22.400 align:start position:0%
we have these large arrays we're making
 

00:06:22.400 --> 00:06:24.390 align:start position:0%
we have these large arrays we're making
operations<00:06:22.880><c> on</c><00:06:23.039><c> those</c><00:06:23.199><c> large</c><00:06:23.440><c> arrays</c><00:06:24.160><c> that</c>

00:06:24.390 --> 00:06:24.400 align:start position:0%
operations on those large arrays that
 

00:06:24.400 --> 00:06:26.070 align:start position:0%
operations on those large arrays that
allows<00:06:24.720><c> us</c><00:06:24.880><c> to</c><00:06:25.280><c> take</c><00:06:25.440><c> advantage</c><00:06:25.840><c> of</c><00:06:25.919><c> the</c>

00:06:26.070 --> 00:06:26.080 align:start position:0%
allows us to take advantage of the
 

00:06:26.080 --> 00:06:28.629 align:start position:0%
allows us to take advantage of the
parallelism<00:06:26.639><c> in</c><00:06:26.720><c> a</c><00:06:26.800><c> computer</c><00:06:27.680><c> and</c><00:06:28.240><c> all</c><00:06:28.400><c> those</c>

00:06:28.629 --> 00:06:28.639 align:start position:0%
parallelism in a computer and all those
 

00:06:28.639 --> 00:06:30.469 align:start position:0%
parallelism in a computer and all those
operations<00:06:29.039><c> can</c><00:06:29.199><c> be</c><00:06:29.280><c> done</c><00:06:29.520><c> in</c><00:06:29.600><c> parallel</c><00:06:30.319><c> and</c>

00:06:30.469 --> 00:06:30.479 align:start position:0%
operations can be done in parallel and
 

00:06:30.479 --> 00:06:32.390 align:start position:0%
operations can be done in parallel and
then<00:06:30.639><c> the</c><00:06:30.720><c> whole</c><00:06:30.880><c> thing</c><00:06:31.120><c> runs</c><00:06:31.440><c> faster</c><00:06:32.240><c> but</c>

00:06:32.390 --> 00:06:32.400 align:start position:0%
then the whole thing runs faster but
 

00:06:32.400 --> 00:06:33.670 align:start position:0%
then the whole thing runs faster but
really<00:06:32.639><c> none</c><00:06:32.800><c> of</c><00:06:32.880><c> the</c><00:06:32.960><c> math</c><00:06:33.199><c> changes</c><00:06:33.600><c> and</c>

00:06:33.670 --> 00:06:33.680 align:start position:0%
really none of the math changes and
 

00:06:33.680 --> 00:06:35.670 align:start position:0%
really none of the math changes and
that's<00:06:33.840><c> done</c><00:06:34.000><c> purely</c><00:06:34.319><c> for</c><00:06:34.479><c> efficiency</c><00:06:35.360><c> so</c><00:06:35.600><c> i</c>

00:06:35.670 --> 00:06:35.680 align:start position:0%
that's done purely for efficiency so i
 

00:06:35.680 --> 00:06:36.870 align:start position:0%
that's done purely for efficiency so i
don't<00:06:35.840><c> think</c><00:06:36.000><c> that</c><00:06:36.160><c> it's</c><00:06:36.240><c> pedagogically</c>

00:06:36.870 --> 00:06:36.880 align:start position:0%
don't think that it's pedagogically
 

00:06:36.880 --> 00:06:38.629 align:start position:0%
don't think that it's pedagogically
useful<00:06:37.199><c> to</c><00:06:37.360><c> be</c><00:06:37.520><c> dealing</c><00:06:37.759><c> with</c><00:06:37.919><c> tensors</c><00:06:38.400><c> from</c>

00:06:38.629 --> 00:06:38.639 align:start position:0%
useful to be dealing with tensors from
 

00:06:38.639 --> 00:06:40.710 align:start position:0%
useful to be dealing with tensors from
scratch<00:06:39.280><c> uh</c><00:06:39.520><c> and</c><00:06:39.600><c> i</c><00:06:39.680><c> think</c><00:06:40.080><c> and</c><00:06:40.240><c> that's</c><00:06:40.400><c> why</c><00:06:40.560><c> i</c>

00:06:40.710 --> 00:06:40.720 align:start position:0%
scratch uh and i think and that's why i
 

00:06:40.720 --> 00:06:42.550 align:start position:0%
scratch uh and i think and that's why i
fundamentally<00:06:41.280><c> wrote</c><00:06:41.440><c> micrograd</c><00:06:42.319><c> because</c>

00:06:42.550 --> 00:06:42.560 align:start position:0%
fundamentally wrote micrograd because
 

00:06:42.560 --> 00:06:44.469 align:start position:0%
fundamentally wrote micrograd because
you<00:06:42.639><c> can</c><00:06:42.800><c> understand</c><00:06:43.120><c> how</c><00:06:43.280><c> things</c><00:06:43.520><c> work</c><00:06:44.080><c> uh</c><00:06:44.400><c> at</c>

00:06:44.469 --> 00:06:44.479 align:start position:0%
you can understand how things work uh at
 

00:06:44.479 --> 00:06:46.390 align:start position:0%
you can understand how things work uh at
the<00:06:44.639><c> fundamental</c><00:06:45.039><c> level</c><00:06:45.759><c> and</c><00:06:45.919><c> then</c><00:06:46.160><c> you</c><00:06:46.240><c> can</c>

00:06:46.390 --> 00:06:46.400 align:start position:0%
the fundamental level and then you can
 

00:06:46.400 --> 00:06:48.870 align:start position:0%
the fundamental level and then you can
speed<00:06:46.639><c> it</c><00:06:46.800><c> up</c><00:06:46.960><c> later</c><00:06:48.000><c> okay</c><00:06:48.160><c> so</c><00:06:48.319><c> here's</c><00:06:48.560><c> the</c><00:06:48.639><c> fun</c>

00:06:48.870 --> 00:06:48.880 align:start position:0%
speed it up later okay so here's the fun
 

00:06:48.880 --> 00:06:51.189 align:start position:0%
speed it up later okay so here's the fun
part<00:06:49.440><c> my</c><00:06:49.680><c> claim</c><00:06:50.000><c> is</c><00:06:50.080><c> that</c><00:06:50.319><c> micrograd</c><00:06:50.960><c> is</c><00:06:51.039><c> what</c>

00:06:51.189 --> 00:06:51.199 align:start position:0%
part my claim is that micrograd is what
 

00:06:51.199 --> 00:06:52.790 align:start position:0%
part my claim is that micrograd is what
you<00:06:51.280><c> need</c><00:06:51.520><c> to</c><00:06:51.759><c> train</c><00:06:51.919><c> your</c><00:06:52.160><c> networks</c><00:06:52.639><c> and</c>

00:06:52.790 --> 00:06:52.800 align:start position:0%
you need to train your networks and
 

00:06:52.800 --> 00:06:54.950 align:start position:0%
you need to train your networks and
everything<00:06:53.199><c> else</c><00:06:53.520><c> is</c><00:06:53.599><c> just</c><00:06:53.759><c> efficiency</c><00:06:54.720><c> so</c>

00:06:54.950 --> 00:06:54.960 align:start position:0%
everything else is just efficiency so
 

00:06:54.960 --> 00:06:56.309 align:start position:0%
everything else is just efficiency so
you'd<00:06:55.120><c> think</c><00:06:55.280><c> that</c><00:06:55.440><c> micrograd</c><00:06:56.000><c> would</c><00:06:56.080><c> be</c><00:06:56.240><c> a</c>

00:06:56.309 --> 00:06:56.319 align:start position:0%
you'd think that micrograd would be a
 

00:06:56.319 --> 00:06:58.550 align:start position:0%
you'd think that micrograd would be a
very<00:06:56.560><c> complex</c><00:06:56.960><c> piece</c><00:06:57.199><c> of</c><00:06:57.360><c> code</c><00:06:58.080><c> and</c><00:06:58.240><c> that</c>

00:06:58.550 --> 00:06:58.560 align:start position:0%
very complex piece of code and that
 

00:06:58.560 --> 00:07:01.029 align:start position:0%
very complex piece of code and that
turns<00:06:58.800><c> out</c><00:06:59.120><c> to</c><00:06:59.440><c> not</c><00:06:59.759><c> be</c><00:06:59.919><c> the</c><00:07:00.080><c> case</c>

00:07:01.029 --> 00:07:01.039 align:start position:0%
turns out to not be the case
 

00:07:01.039 --> 00:07:03.189 align:start position:0%
turns out to not be the case
so<00:07:01.360><c> if</c><00:07:01.440><c> we</c><00:07:01.599><c> just</c><00:07:01.759><c> go</c><00:07:01.919><c> to</c><00:07:02.000><c> micrograd</c>

00:07:03.189 --> 00:07:03.199 align:start position:0%
so if we just go to micrograd
 

00:07:03.199 --> 00:07:05.029 align:start position:0%
so if we just go to micrograd
and<00:07:03.840><c> you'll</c><00:07:04.080><c> see</c><00:07:04.240><c> that</c><00:07:04.319><c> there's</c><00:07:04.560><c> only</c><00:07:04.800><c> two</c>

00:07:05.029 --> 00:07:05.039 align:start position:0%
and you'll see that there's only two
 

00:07:05.039 --> 00:07:07.350 align:start position:0%
and you'll see that there's only two
files<00:07:05.680><c> here</c><00:07:05.919><c> in</c><00:07:06.000><c> micrograd</c><00:07:06.880><c> this</c><00:07:07.120><c> is</c><00:07:07.199><c> the</c>

00:07:07.350 --> 00:07:07.360 align:start position:0%
files here in micrograd this is the
 

00:07:07.360 --> 00:07:09.110 align:start position:0%
files here in micrograd this is the
actual<00:07:07.759><c> engine</c><00:07:08.319><c> it</c><00:07:08.400><c> doesn't</c><00:07:08.639><c> know</c><00:07:08.880><c> anything</c>

00:07:09.110 --> 00:07:09.120 align:start position:0%
actual engine it doesn't know anything
 

00:07:09.120 --> 00:07:10.870 align:start position:0%
actual engine it doesn't know anything
about<00:07:09.280><c> neural</c><00:07:09.599><c> nuts</c><00:07:10.080><c> and</c><00:07:10.240><c> this</c><00:07:10.400><c> is</c><00:07:10.479><c> the</c><00:07:10.560><c> entire</c>

00:07:10.870 --> 00:07:10.880 align:start position:0%
about neural nuts and this is the entire
 

00:07:10.880 --> 00:07:12.710 align:start position:0%
about neural nuts and this is the entire
neural<00:07:11.120><c> nets</c><00:07:11.520><c> library</c>

00:07:12.710 --> 00:07:12.720 align:start position:0%
neural nets library
 

00:07:12.720 --> 00:07:17.189 align:start position:0%
neural nets library
on<00:07:12.800><c> top</c><00:07:12.960><c> of</c><00:07:13.039><c> micrograd</c><00:07:13.919><c> so</c><00:07:14.319><c> engine</c><00:07:15.120><c> and</c><00:07:15.759><c> nn.pi</c>

00:07:17.189 --> 00:07:17.199 align:start position:0%
on top of micrograd so engine and nn.pi
 

00:07:17.199 --> 00:07:19.830 align:start position:0%
on top of micrograd so engine and nn.pi
so<00:07:17.360><c> the</c><00:07:17.520><c> actual</c><00:07:18.080><c> backpropagation</c><00:07:19.199><c> autograd</c>

00:07:19.830 --> 00:07:19.840 align:start position:0%
so the actual backpropagation autograd
 

00:07:19.840 --> 00:07:21.189 align:start position:0%
so the actual backpropagation autograd
engine

00:07:21.189 --> 00:07:21.199 align:start position:0%
engine
 

00:07:21.199 --> 00:07:22.390 align:start position:0%
engine
that<00:07:21.360><c> gives</c><00:07:21.599><c> you</c><00:07:21.680><c> the</c><00:07:21.759><c> power</c><00:07:22.000><c> of</c><00:07:22.160><c> neural</c>

00:07:22.390 --> 00:07:22.400 align:start position:0%
that gives you the power of neural
 

00:07:22.400 --> 00:07:26.070 align:start position:0%
that gives you the power of neural
networks<00:07:23.360><c> is</c><00:07:23.599><c> literally</c>

00:07:26.070 --> 00:07:26.080 align:start position:0%
networks is literally
 

00:07:26.080 --> 00:07:28.390 align:start position:0%
networks is literally
100<00:07:26.400><c> lines</c><00:07:26.639><c> of</c><00:07:26.720><c> code</c><00:07:27.360><c> of</c><00:07:27.599><c> like</c><00:07:27.759><c> very</c><00:07:28.000><c> simple</c>

00:07:28.390 --> 00:07:28.400 align:start position:0%
100 lines of code of like very simple
 

00:07:28.400 --> 00:07:29.990 align:start position:0%
100 lines of code of like very simple
python

00:07:29.990 --> 00:07:30.000 align:start position:0%
python
 

00:07:30.000 --> 00:07:31.110 align:start position:0%
python
which<00:07:30.160><c> we'll</c><00:07:30.319><c> understand</c><00:07:30.639><c> by</c><00:07:30.800><c> the</c><00:07:30.880><c> end</c><00:07:30.960><c> of</c>

00:07:31.110 --> 00:07:31.120 align:start position:0%
which we'll understand by the end of
 

00:07:31.120 --> 00:07:32.070 align:start position:0%
which we'll understand by the end of
this<00:07:31.199><c> lecture</c>

00:07:32.070 --> 00:07:32.080 align:start position:0%
this lecture
 

00:07:32.080 --> 00:07:33.830 align:start position:0%
this lecture
and<00:07:32.240><c> then</c><00:07:32.479><c> nn.pi</c>

00:07:33.830 --> 00:07:33.840 align:start position:0%
and then nn.pi
 

00:07:33.840 --> 00:07:35.670 align:start position:0%
and then nn.pi
this<00:07:34.160><c> neural</c><00:07:34.400><c> network</c><00:07:34.720><c> library</c><00:07:35.120><c> built</c><00:07:35.360><c> on</c><00:07:35.440><c> top</c>

00:07:35.670 --> 00:07:35.680 align:start position:0%
this neural network library built on top
 

00:07:35.680 --> 00:07:37.749 align:start position:0%
this neural network library built on top
of<00:07:36.000><c> the</c><00:07:36.160><c> autograd</c><00:07:36.720><c> engine</c>

00:07:37.749 --> 00:07:37.759 align:start position:0%
of the autograd engine
 

00:07:37.759 --> 00:07:40.550 align:start position:0%
of the autograd engine
um<00:07:38.479><c> is</c><00:07:38.639><c> like</c><00:07:38.880><c> a</c><00:07:38.960><c> joke</c><00:07:39.440><c> it's</c><00:07:39.680><c> like</c>

00:07:40.550 --> 00:07:40.560 align:start position:0%
um is like a joke it's like
 

00:07:40.560 --> 00:07:42.710 align:start position:0%
um is like a joke it's like
we<00:07:40.720><c> have</c><00:07:40.880><c> to</c><00:07:40.960><c> define</c><00:07:41.280><c> what</c><00:07:41.520><c> is</c><00:07:41.680><c> a</c><00:07:41.759><c> neuron</c><00:07:42.639><c> and</c>

00:07:42.710 --> 00:07:42.720 align:start position:0%
we have to define what is a neuron and
 

00:07:42.720 --> 00:07:43.990 align:start position:0%
we have to define what is a neuron and
then<00:07:42.880><c> we</c><00:07:42.960><c> have</c><00:07:43.120><c> to</c><00:07:43.199><c> define</c><00:07:43.440><c> what</c><00:07:43.520><c> is</c><00:07:43.680><c> the</c><00:07:43.759><c> layer</c>

00:07:43.990 --> 00:07:44.000 align:start position:0%
then we have to define what is the layer
 

00:07:44.000 --> 00:07:46.070 align:start position:0%
then we have to define what is the layer
of<00:07:44.080><c> neurons</c><00:07:44.800><c> and</c><00:07:44.879><c> then</c><00:07:45.039><c> we</c><00:07:45.120><c> define</c><00:07:45.520><c> what</c><00:07:45.759><c> is</c><00:07:45.919><c> a</c>

00:07:46.070 --> 00:07:46.080 align:start position:0%
of neurons and then we define what is a
 

00:07:46.080 --> 00:07:47.830 align:start position:0%
of neurons and then we define what is a
multi-layer<00:07:46.639><c> perceptron</c><00:07:47.199><c> which</c><00:07:47.440><c> is</c><00:07:47.520><c> just</c><00:07:47.759><c> a</c>

00:07:47.830 --> 00:07:47.840 align:start position:0%
multi-layer perceptron which is just a
 

00:07:47.840 --> 00:07:50.390 align:start position:0%
multi-layer perceptron which is just a
sequence<00:07:48.240><c> of</c><00:07:48.319><c> layers</c><00:07:48.720><c> of</c><00:07:48.800><c> neurons</c><00:07:49.759><c> and</c><00:07:50.000><c> so</c>

00:07:50.390 --> 00:07:50.400 align:start position:0%
sequence of layers of neurons and so
 

00:07:50.400 --> 00:07:51.990 align:start position:0%
sequence of layers of neurons and so
it's<00:07:50.560><c> just</c><00:07:50.800><c> a</c><00:07:50.879><c> total</c><00:07:51.199><c> joke</c>

00:07:51.990 --> 00:07:52.000 align:start position:0%
it's just a total joke
 

00:07:52.000 --> 00:07:53.430 align:start position:0%
it's just a total joke
so<00:07:52.240><c> basically</c>

00:07:53.430 --> 00:07:53.440 align:start position:0%
so basically
 

00:07:53.440 --> 00:07:55.670 align:start position:0%
so basically
there's<00:07:53.759><c> a</c><00:07:53.759><c> lot</c><00:07:53.919><c> of</c><00:07:54.080><c> power</c><00:07:54.960><c> that</c><00:07:55.199><c> comes</c><00:07:55.440><c> from</c>

00:07:55.670 --> 00:07:55.680 align:start position:0%
there's a lot of power that comes from
 

00:07:55.680 --> 00:07:57.589 align:start position:0%
there's a lot of power that comes from
only<00:07:55.840><c> 150</c><00:07:56.400><c> lines</c><00:07:56.639><c> of</c><00:07:56.720><c> code</c>

00:07:57.589 --> 00:07:57.599 align:start position:0%
only 150 lines of code
 

00:07:57.599 --> 00:07:59.110 align:start position:0%
only 150 lines of code
and<00:07:57.840><c> that's</c><00:07:58.080><c> all</c><00:07:58.160><c> you</c><00:07:58.319><c> need</c><00:07:58.400><c> to</c><00:07:58.560><c> understand</c><00:07:58.960><c> to</c>

00:07:59.110 --> 00:07:59.120 align:start position:0%
and that's all you need to understand to
 

00:07:59.120 --> 00:08:00.869 align:start position:0%
and that's all you need to understand to
understand<00:07:59.759><c> neural</c><00:08:00.000><c> network</c><00:08:00.319><c> training</c><00:08:00.720><c> and</c>

00:08:00.869 --> 00:08:00.879 align:start position:0%
understand neural network training and
 

00:08:00.879 --> 00:08:02.710 align:start position:0%
understand neural network training and
everything<00:08:01.199><c> else</c><00:08:01.440><c> is</c><00:08:01.520><c> just</c><00:08:01.680><c> efficiency</c><00:08:02.560><c> and</c>

00:08:02.710 --> 00:08:02.720 align:start position:0%
everything else is just efficiency and
 

00:08:02.720 --> 00:08:05.670 align:start position:0%
everything else is just efficiency and
of<00:08:02.800><c> course</c><00:08:03.520><c> there's</c><00:08:03.759><c> a</c><00:08:03.840><c> lot</c><00:08:04.319><c> to</c><00:08:04.560><c> efficiency</c>

00:08:05.670 --> 00:08:05.680 align:start position:0%
of course there's a lot to efficiency
 

00:08:05.680 --> 00:08:07.110 align:start position:0%
of course there's a lot to efficiency
but<00:08:06.160><c> fundamentally</c><00:08:06.639><c> that's</c><00:08:06.800><c> all</c><00:08:06.960><c> that's</c>

00:08:07.110 --> 00:08:07.120 align:start position:0%
but fundamentally that's all that's
 

00:08:07.120 --> 00:08:09.110 align:start position:0%
but fundamentally that's all that's
happening<00:08:07.759><c> okay</c><00:08:08.000><c> so</c><00:08:08.160><c> now</c><00:08:08.400><c> let's</c><00:08:08.639><c> dive</c><00:08:08.879><c> right</c>

00:08:09.110 --> 00:08:09.120 align:start position:0%
happening okay so now let's dive right
 

00:08:09.120 --> 00:08:11.270 align:start position:0%
happening okay so now let's dive right
in<00:08:09.199><c> and</c><00:08:09.360><c> implement</c><00:08:09.680><c> micrograph</c><00:08:10.319><c> step</c><00:08:10.560><c> by</c><00:08:10.720><c> step</c>

00:08:11.270 --> 00:08:11.280 align:start position:0%
in and implement micrograph step by step
 

00:08:11.280 --> 00:08:12.390 align:start position:0%
in and implement micrograph step by step
the<00:08:11.440><c> first</c><00:08:11.599><c> thing</c><00:08:11.759><c> i'd</c><00:08:11.840><c> like</c><00:08:12.000><c> to</c><00:08:12.080><c> do</c><00:08:12.160><c> is</c><00:08:12.319><c> i'd</c>

00:08:12.390 --> 00:08:12.400 align:start position:0%
the first thing i'd like to do is i'd
 

00:08:12.400 --> 00:08:13.749 align:start position:0%
the first thing i'd like to do is i'd
like<00:08:12.560><c> to</c><00:08:12.639><c> make</c><00:08:12.800><c> sure</c><00:08:13.120><c> that</c><00:08:13.280><c> you</c><00:08:13.440><c> have</c><00:08:13.520><c> a</c><00:08:13.599><c> very</c>

00:08:13.749 --> 00:08:13.759 align:start position:0%
like to make sure that you have a very
 

00:08:13.759 --> 00:08:16.230 align:start position:0%
like to make sure that you have a very
good<00:08:14.000><c> understanding</c><00:08:14.800><c> intuitively</c><00:08:15.440><c> of</c><00:08:15.599><c> what</c><00:08:15.840><c> a</c>

00:08:16.230 --> 00:08:16.240 align:start position:0%
good understanding intuitively of what a
 

00:08:16.240 --> 00:08:18.230 align:start position:0%
good understanding intuitively of what a
derivative<00:08:16.879><c> is</c><00:08:17.360><c> and</c><00:08:17.680><c> exactly</c><00:08:18.000><c> what</c>

00:08:18.230 --> 00:08:18.240 align:start position:0%
derivative is and exactly what
 

00:08:18.240 --> 00:08:20.550 align:start position:0%
derivative is and exactly what
information<00:08:18.639><c> it</c><00:08:18.720><c> gives</c><00:08:18.960><c> you</c><00:08:19.599><c> so</c><00:08:19.840><c> let's</c><00:08:20.319><c> start</c>

00:08:20.550 --> 00:08:20.560 align:start position:0%
information it gives you so let's start
 

00:08:20.560 --> 00:08:22.309 align:start position:0%
information it gives you so let's start
with<00:08:20.720><c> some</c><00:08:20.960><c> basic</c><00:08:21.280><c> imports</c><00:08:21.759><c> that</c><00:08:21.919><c> i</c><00:08:22.000><c> copy</c>

00:08:22.309 --> 00:08:22.319 align:start position:0%
with some basic imports that i copy
 

00:08:22.319 --> 00:08:25.270 align:start position:0%
with some basic imports that i copy
paste<00:08:22.720><c> in</c><00:08:22.879><c> every</c><00:08:23.120><c> jupiter</c><00:08:23.440><c> notebook</c><00:08:23.919><c> always</c>

00:08:25.270 --> 00:08:25.280 align:start position:0%
paste in every jupiter notebook always
 

00:08:25.280 --> 00:08:27.350 align:start position:0%
paste in every jupiter notebook always
and<00:08:25.520><c> let's</c><00:08:25.759><c> define</c><00:08:26.160><c> a</c><00:08:26.240><c> function</c><00:08:26.879><c> a</c><00:08:27.039><c> scalar</c>

00:08:27.350 --> 00:08:27.360 align:start position:0%
and let's define a function a scalar
 

00:08:27.360 --> 00:08:28.950 align:start position:0%
and let's define a function a scalar
valued<00:08:27.680><c> function</c>

00:08:28.950 --> 00:08:28.960 align:start position:0%
valued function
 

00:08:28.960 --> 00:08:30.230 align:start position:0%
valued function
f<00:08:29.199><c> of</c><00:08:29.360><c> x</c>

00:08:30.230 --> 00:08:30.240 align:start position:0%
f of x
 

00:08:30.240 --> 00:08:31.350 align:start position:0%
f of x
as<00:08:30.400><c> follows</c>

00:08:31.350 --> 00:08:31.360 align:start position:0%
as follows
 

00:08:31.360 --> 00:08:33.190 align:start position:0%
as follows
so<00:08:31.599><c> i</c><00:08:31.759><c> just</c><00:08:31.919><c> make</c><00:08:32.080><c> this</c><00:08:32.320><c> up</c><00:08:32.479><c> randomly</c><00:08:33.039><c> i</c><00:08:33.120><c> just</c>

00:08:33.190 --> 00:08:33.200 align:start position:0%
so i just make this up randomly i just
 

00:08:33.200 --> 00:08:34.550 align:start position:0%
so i just make this up randomly i just
want<00:08:33.360><c> to</c><00:08:33.519><c> scale</c><00:08:33.760><c> a</c><00:08:33.839><c> valid</c><00:08:34.159><c> function</c><00:08:34.399><c> that</c>

00:08:34.550 --> 00:08:34.560 align:start position:0%
want to scale a valid function that
 

00:08:34.560 --> 00:08:36.709 align:start position:0%
want to scale a valid function that
takes<00:08:34.800><c> a</c><00:08:34.880><c> single</c><00:08:35.279><c> scalar</c><00:08:35.839><c> x</c><00:08:36.159><c> and</c><00:08:36.240><c> returns</c><00:08:36.640><c> a</c>

00:08:36.709 --> 00:08:36.719 align:start position:0%
takes a single scalar x and returns a
 

00:08:36.719 --> 00:08:38.550 align:start position:0%
takes a single scalar x and returns a
single<00:08:36.959><c> scalar</c><00:08:37.519><c> y</c>

00:08:38.550 --> 00:08:38.560 align:start position:0%
single scalar y
 

00:08:38.560 --> 00:08:40.070 align:start position:0%
single scalar y
and<00:08:38.719><c> we</c><00:08:38.880><c> can</c><00:08:39.039><c> call</c><00:08:39.200><c> this</c><00:08:39.360><c> function</c><00:08:39.680><c> of</c><00:08:39.839><c> course</c>

00:08:40.070 --> 00:08:40.080 align:start position:0%
and we can call this function of course
 

00:08:40.080 --> 00:08:42.790 align:start position:0%
and we can call this function of course
so<00:08:40.240><c> we</c><00:08:40.320><c> can</c><00:08:40.479><c> pass</c><00:08:40.719><c> in</c><00:08:40.880><c> say</c><00:08:41.120><c> 3.0</c><00:08:41.919><c> and</c><00:08:42.000><c> get</c><00:08:42.320><c> 20</c>

00:08:42.790 --> 00:08:42.800 align:start position:0%
so we can pass in say 3.0 and get 20
 

00:08:42.800 --> 00:08:43.909 align:start position:0%
so we can pass in say 3.0 and get 20
back

00:08:43.909 --> 00:08:43.919 align:start position:0%
back
 

00:08:43.919 --> 00:08:45.590 align:start position:0%
back
now<00:08:44.320><c> we</c><00:08:44.480><c> can</c><00:08:44.560><c> also</c><00:08:44.800><c> plot</c><00:08:45.040><c> this</c><00:08:45.200><c> function</c><00:08:45.519><c> to</c>

00:08:45.590 --> 00:08:45.600 align:start position:0%
now we can also plot this function to
 

00:08:45.600 --> 00:08:47.430 align:start position:0%
now we can also plot this function to
get<00:08:45.760><c> a</c><00:08:45.839><c> sense</c><00:08:46.080><c> of</c><00:08:46.160><c> its</c><00:08:46.320><c> shape</c><00:08:46.880><c> you</c><00:08:47.040><c> can</c><00:08:47.200><c> tell</c>

00:08:47.430 --> 00:08:47.440 align:start position:0%
get a sense of its shape you can tell
 

00:08:47.440 --> 00:08:48.870 align:start position:0%
get a sense of its shape you can tell
from<00:08:47.680><c> the</c><00:08:47.839><c> mathematical</c><00:08:48.399><c> expression</c><00:08:48.800><c> that</c>

00:08:48.870 --> 00:08:48.880 align:start position:0%
from the mathematical expression that
 

00:08:48.880 --> 00:08:50.710 align:start position:0%
from the mathematical expression that
this<00:08:49.120><c> is</c><00:08:49.360><c> probably</c><00:08:49.760><c> a</c><00:08:50.000><c> parabola</c><00:08:50.560><c> it's</c><00:08:50.640><c> a</c>

00:08:50.710 --> 00:08:50.720 align:start position:0%
this is probably a parabola it's a
 

00:08:50.720 --> 00:08:51.829 align:start position:0%
this is probably a parabola it's a
quadratic

00:08:51.829 --> 00:08:51.839 align:start position:0%
quadratic
 

00:08:51.839 --> 00:08:56.389 align:start position:0%
quadratic
and<00:08:52.080><c> so</c><00:08:52.560><c> if</c><00:08:52.720><c> we</c><00:08:52.880><c> just</c><00:08:53.440><c> uh</c><00:08:53.680><c> create</c><00:08:54.160><c> a</c><00:08:54.320><c> set</c><00:08:54.560><c> of</c><00:08:54.959><c> um</c>

00:08:56.389 --> 00:08:56.399 align:start position:0%
and so if we just uh create a set of um
 

00:08:56.399 --> 00:08:57.670 align:start position:0%
and so if we just uh create a set of um
um

00:08:57.670 --> 00:08:57.680 align:start position:0%
um
 

00:08:57.680 --> 00:08:59.509 align:start position:0%
um
scale<00:08:58.080><c> values</c><00:08:58.320><c> that</c><00:08:58.399><c> we</c><00:08:58.560><c> can</c><00:08:58.720><c> feed</c><00:08:58.959><c> in</c><00:08:59.279><c> using</c>

00:08:59.509 --> 00:08:59.519 align:start position:0%
scale values that we can feed in using
 

00:08:59.519 --> 00:09:01.110 align:start position:0%
scale values that we can feed in using
for<00:08:59.680><c> example</c><00:09:00.000><c> a</c><00:09:00.080><c> range</c><00:09:00.399><c> from</c><00:09:00.560><c> negative</c><00:09:00.880><c> five</c>

00:09:01.110 --> 00:09:01.120 align:start position:0%
for example a range from negative five
 

00:09:01.120 --> 00:09:03.910 align:start position:0%
for example a range from negative five
to<00:09:01.360><c> five</c><00:09:01.680><c> in</c><00:09:01.760><c> steps</c><00:09:02.160><c> of</c><00:09:02.399><c> 0.25</c>

00:09:03.910 --> 00:09:03.920 align:start position:0%
to five in steps of 0.25
 

00:09:03.920 --> 00:09:06.630 align:start position:0%
to five in steps of 0.25
so<00:09:04.080><c> this</c><00:09:04.240><c> is</c><00:09:04.560><c> so</c><00:09:04.800><c> axis</c><00:09:05.200><c> is</c><00:09:05.360><c> just</c><00:09:06.160><c> from</c><00:09:06.320><c> negative</c>

00:09:06.630 --> 00:09:06.640 align:start position:0%
so this is so axis is just from negative
 

00:09:06.640 --> 00:09:11.350 align:start position:0%
so this is so axis is just from negative
5<00:09:06.959><c> to</c><00:09:07.200><c> 5</c><00:09:08.000><c> not</c><00:09:08.240><c> including</c><00:09:08.640><c> 5</c><00:09:09.279><c> in</c><00:09:09.440><c> steps</c><00:09:09.760><c> of</c><00:09:09.920><c> 0.25</c>

00:09:11.350 --> 00:09:11.360 align:start position:0%
5 to 5 not including 5 in steps of 0.25
 

00:09:11.360 --> 00:09:12.710 align:start position:0%
5 to 5 not including 5 in steps of 0.25
and<00:09:11.519><c> we</c><00:09:11.600><c> can</c><00:09:11.760><c> actually</c><00:09:12.000><c> call</c><00:09:12.160><c> this</c><00:09:12.320><c> function</c>

00:09:12.710 --> 00:09:12.720 align:start position:0%
and we can actually call this function
 

00:09:12.720 --> 00:09:14.630 align:start position:0%
and we can actually call this function
on<00:09:12.880><c> this</c><00:09:13.120><c> numpy</c><00:09:13.440><c> array</c><00:09:13.760><c> as</c><00:09:13.839><c> well</c><00:09:14.160><c> so</c><00:09:14.320><c> we</c><00:09:14.399><c> get</c><00:09:14.560><c> a</c>

00:09:14.630 --> 00:09:14.640 align:start position:0%
on this numpy array as well so we get a
 

00:09:14.640 --> 00:09:17.670 align:start position:0%
on this numpy array as well so we get a
set<00:09:14.800><c> of</c><00:09:14.959><c> y's</c><00:09:15.440><c> if</c><00:09:15.519><c> we</c><00:09:15.680><c> call</c><00:09:15.920><c> f</c><00:09:16.240><c> on</c><00:09:16.480><c> axis</c>

00:09:17.670 --> 00:09:17.680 align:start position:0%
set of y's if we call f on axis
 

00:09:17.680 --> 00:09:20.389 align:start position:0%
set of y's if we call f on axis
and<00:09:18.000><c> these</c><00:09:18.320><c> y's</c><00:09:18.959><c> are</c><00:09:19.120><c> basically</c>

00:09:20.389 --> 00:09:20.399 align:start position:0%
and these y's are basically
 

00:09:20.399 --> 00:09:23.509 align:start position:0%
and these y's are basically
also<00:09:20.839><c> applying</c><00:09:21.839><c> a</c><00:09:22.240><c> function</c><00:09:22.959><c> on</c><00:09:23.120><c> every</c><00:09:23.279><c> one</c><00:09:23.440><c> of</c>

00:09:23.509 --> 00:09:23.519 align:start position:0%
also applying a function on every one of
 

00:09:23.519 --> 00:09:25.350 align:start position:0%
also applying a function on every one of
these<00:09:23.680><c> elements</c><00:09:24.080><c> independently</c>

00:09:25.350 --> 00:09:25.360 align:start position:0%
these elements independently
 

00:09:25.360 --> 00:09:27.990 align:start position:0%
these elements independently
and<00:09:25.519><c> we</c><00:09:25.680><c> can</c><00:09:25.839><c> plot</c><00:09:26.160><c> this</c><00:09:26.399><c> using</c><00:09:26.959><c> matplotlib</c><00:09:27.839><c> so</c>

00:09:27.990 --> 00:09:28.000 align:start position:0%
and we can plot this using matplotlib so
 

00:09:28.000 --> 00:09:31.190 align:start position:0%
and we can plot this using matplotlib so
plt.plot<00:09:29.040><c> x's</c><00:09:29.360><c> and</c><00:09:29.519><c> y's</c><00:09:30.320><c> and</c><00:09:30.480><c> we</c><00:09:30.560><c> get</c><00:09:30.800><c> a</c><00:09:30.880><c> nice</c>

00:09:31.190 --> 00:09:31.200 align:start position:0%
plt.plot x's and y's and we get a nice
 

00:09:31.200 --> 00:09:33.750 align:start position:0%
plt.plot x's and y's and we get a nice
parabola<00:09:32.240><c> so</c><00:09:32.399><c> previously</c><00:09:32.880><c> here</c><00:09:33.120><c> we</c><00:09:33.360><c> fed</c><00:09:33.600><c> in</c>

00:09:33.750 --> 00:09:33.760 align:start position:0%
parabola so previously here we fed in
 

00:09:33.760 --> 00:09:36.550 align:start position:0%
parabola so previously here we fed in
3.0<00:09:34.480><c> somewhere</c><00:09:34.880><c> here</c><00:09:35.360><c> and</c><00:09:35.519><c> we</c><00:09:35.760><c> received</c><00:09:36.240><c> 20</c>

00:09:36.550 --> 00:09:36.560 align:start position:0%
3.0 somewhere here and we received 20
 

00:09:36.560 --> 00:09:39.030 align:start position:0%
3.0 somewhere here and we received 20
back<00:09:36.880><c> which</c><00:09:37.200><c> is</c><00:09:37.519><c> here</c><00:09:37.839><c> the</c><00:09:38.000><c> y</c><00:09:38.160><c> coordinate</c><00:09:38.880><c> so</c>

00:09:39.030 --> 00:09:39.040 align:start position:0%
back which is here the y coordinate so
 

00:09:39.040 --> 00:09:40.630 align:start position:0%
back which is here the y coordinate so
now<00:09:39.200><c> i'd</c><00:09:39.360><c> like</c><00:09:39.519><c> to</c><00:09:39.600><c> think</c><00:09:39.839><c> through</c>

00:09:40.630 --> 00:09:40.640 align:start position:0%
now i'd like to think through
 

00:09:40.640 --> 00:09:42.389 align:start position:0%
now i'd like to think through
what<00:09:40.800><c> is</c><00:09:40.959><c> the</c><00:09:41.200><c> derivative</c>

00:09:42.389 --> 00:09:42.399 align:start position:0%
what is the derivative
 

00:09:42.399 --> 00:09:44.310 align:start position:0%
what is the derivative
of<00:09:42.560><c> this</c><00:09:42.720><c> function</c><00:09:43.440><c> at</c><00:09:43.600><c> any</c><00:09:43.760><c> single</c><00:09:44.080><c> input</c>

00:09:44.310 --> 00:09:44.320 align:start position:0%
of this function at any single input
 

00:09:44.320 --> 00:09:45.509 align:start position:0%
of this function at any single input
point<00:09:44.640><c> x</c>

00:09:45.509 --> 00:09:45.519 align:start position:0%
point x
 

00:09:45.519 --> 00:09:47.030 align:start position:0%
point x
right<00:09:45.680><c> so</c><00:09:45.839><c> what</c><00:09:46.000><c> is</c><00:09:46.080><c> the</c><00:09:46.160><c> derivative</c><00:09:46.880><c> at</c>

00:09:47.030 --> 00:09:47.040 align:start position:0%
right so what is the derivative at
 

00:09:47.040 --> 00:09:49.829 align:start position:0%
right so what is the derivative at
different<00:09:47.360><c> points</c><00:09:47.760><c> x</c><00:09:48.480><c> of</c><00:09:48.640><c> this</c><00:09:48.800><c> function</c><00:09:49.680><c> now</c>

00:09:49.829 --> 00:09:49.839 align:start position:0%
different points x of this function now
 

00:09:49.839 --> 00:09:51.190 align:start position:0%
different points x of this function now
if<00:09:49.920><c> you</c><00:09:50.000><c> remember</c><00:09:50.320><c> back</c><00:09:50.480><c> to</c><00:09:50.560><c> your</c><00:09:50.720><c> calculus</c>

00:09:51.190 --> 00:09:51.200 align:start position:0%
if you remember back to your calculus
 

00:09:51.200 --> 00:09:52.230 align:start position:0%
if you remember back to your calculus
class<00:09:51.440><c> you've</c><00:09:51.600><c> probably</c><00:09:51.839><c> derived</c>

00:09:52.230 --> 00:09:52.240 align:start position:0%
class you've probably derived
 

00:09:52.240 --> 00:09:54.630 align:start position:0%
class you've probably derived
derivatives<00:09:53.200><c> so</c><00:09:53.600><c> we</c><00:09:53.760><c> take</c><00:09:53.920><c> this</c><00:09:54.080><c> mathematical</c>

00:09:54.630 --> 00:09:54.640 align:start position:0%
derivatives so we take this mathematical
 

00:09:54.640 --> 00:09:57.190 align:start position:0%
derivatives so we take this mathematical
expression<00:09:55.120><c> 3x</c><00:09:55.519><c> squared</c><00:09:55.760><c> minus</c><00:09:56.080><c> 4x</c><00:09:56.480><c> plus</c><00:09:56.720><c> 5</c>

00:09:57.190 --> 00:09:57.200 align:start position:0%
expression 3x squared minus 4x plus 5
 

00:09:57.200 --> 00:09:58.389 align:start position:0%
expression 3x squared minus 4x plus 5
and<00:09:57.440><c> you</c><00:09:57.519><c> would</c><00:09:57.680><c> write</c><00:09:57.839><c> out</c><00:09:58.000><c> on</c><00:09:58.080><c> a</c><00:09:58.160><c> piece</c><00:09:58.320><c> of</c>

00:09:58.389 --> 00:09:58.399 align:start position:0%
and you would write out on a piece of
 

00:09:58.399 --> 00:09:59.910 align:start position:0%
and you would write out on a piece of
paper<00:09:58.640><c> and</c><00:09:58.800><c> you</c><00:09:58.880><c> would</c><00:09:59.279><c> you</c><00:09:59.360><c> know</c><00:09:59.519><c> apply</c><00:09:59.760><c> the</c>

00:09:59.910 --> 00:09:59.920 align:start position:0%
paper and you would you know apply the
 

00:09:59.920 --> 00:10:01.350 align:start position:0%
paper and you would you know apply the
product<00:10:00.240><c> rule</c><00:10:00.399><c> and</c><00:10:00.560><c> all</c><00:10:00.640><c> the</c><00:10:00.800><c> other</c><00:10:00.959><c> rules</c><00:10:01.279><c> and</c>

00:10:01.350 --> 00:10:01.360 align:start position:0%
product rule and all the other rules and
 

00:10:01.360 --> 00:10:03.430 align:start position:0%
product rule and all the other rules and
derive<00:10:01.600><c> the</c><00:10:01.760><c> mathematical</c><00:10:02.240><c> expression</c><00:10:03.040><c> of</c>

00:10:03.430 --> 00:10:03.440 align:start position:0%
derive the mathematical expression of
 

00:10:03.440 --> 00:10:05.430 align:start position:0%
derive the mathematical expression of
the<00:10:03.600><c> great</c><00:10:03.920><c> derivative</c><00:10:04.560><c> of</c><00:10:04.880><c> the</c><00:10:05.040><c> original</c>

00:10:05.430 --> 00:10:05.440 align:start position:0%
the great derivative of the original
 

00:10:05.440 --> 00:10:06.710 align:start position:0%
the great derivative of the original
function<00:10:06.000><c> and</c><00:10:06.079><c> then</c><00:10:06.240><c> you</c><00:10:06.320><c> could</c><00:10:06.399><c> plug</c><00:10:06.640><c> in</c>

00:10:06.710 --> 00:10:06.720 align:start position:0%
function and then you could plug in
 

00:10:06.720 --> 00:10:07.990 align:start position:0%
function and then you could plug in
different<00:10:07.040><c> texts</c><00:10:07.519><c> and</c><00:10:07.600><c> see</c><00:10:07.760><c> what</c><00:10:07.920><c> the</c>

00:10:07.990 --> 00:10:08.000 align:start position:0%
different texts and see what the
 

00:10:08.000 --> 00:10:09.750 align:start position:0%
different texts and see what the
derivative<00:10:08.560><c> is</c>

00:10:09.750 --> 00:10:09.760 align:start position:0%
derivative is
 

00:10:09.760 --> 00:10:11.509 align:start position:0%
derivative is
we're<00:10:10.000><c> not</c><00:10:10.160><c> going</c><00:10:10.320><c> to</c><00:10:10.399><c> actually</c><00:10:10.640><c> do</c><00:10:10.880><c> that</c>

00:10:11.509 --> 00:10:11.519 align:start position:0%
we're not going to actually do that
 

00:10:11.519 --> 00:10:13.670 align:start position:0%
we're not going to actually do that
because<00:10:12.160><c> no</c><00:10:12.399><c> one</c><00:10:12.720><c> in</c><00:10:12.880><c> neural</c><00:10:13.120><c> networks</c>

00:10:13.670 --> 00:10:13.680 align:start position:0%
because no one in neural networks
 

00:10:13.680 --> 00:10:15.350 align:start position:0%
because no one in neural networks
actually<00:10:14.000><c> writes</c><00:10:14.399><c> out</c><00:10:14.640><c> the</c><00:10:14.800><c> expression</c><00:10:15.200><c> for</c>

00:10:15.350 --> 00:10:15.360 align:start position:0%
actually writes out the expression for
 

00:10:15.360 --> 00:10:16.630 align:start position:0%
actually writes out the expression for
the<00:10:15.440><c> neural</c><00:10:15.600><c> net</c><00:10:15.839><c> it</c><00:10:15.920><c> would</c><00:10:16.079><c> be</c><00:10:16.160><c> a</c><00:10:16.240><c> massive</c>

00:10:16.630 --> 00:10:16.640 align:start position:0%
the neural net it would be a massive
 

00:10:16.640 --> 00:10:18.870 align:start position:0%
the neural net it would be a massive
expression<00:10:17.200><c> um</c><00:10:18.079><c> it</c><00:10:18.160><c> would</c><00:10:18.320><c> be</c><00:10:18.560><c> you</c><00:10:18.720><c> know</c>

00:10:18.870 --> 00:10:18.880 align:start position:0%
expression um it would be you know
 

00:10:18.880 --> 00:10:20.470 align:start position:0%
expression um it would be you know
thousands<00:10:19.360><c> tens</c><00:10:19.600><c> of</c><00:10:19.680><c> thousands</c><00:10:20.000><c> of</c><00:10:20.079><c> terms</c><00:10:20.320><c> no</c>

00:10:20.470 --> 00:10:20.480 align:start position:0%
thousands tens of thousands of terms no
 

00:10:20.480 --> 00:10:22.630 align:start position:0%
thousands tens of thousands of terms no
one<00:10:20.640><c> actually</c><00:10:21.279><c> derives</c><00:10:21.760><c> the</c><00:10:21.920><c> derivative</c><00:10:22.560><c> of</c>

00:10:22.630 --> 00:10:22.640 align:start position:0%
one actually derives the derivative of
 

00:10:22.640 --> 00:10:24.389 align:start position:0%
one actually derives the derivative of
course<00:10:23.360><c> and</c><00:10:23.519><c> so</c><00:10:23.760><c> we're</c><00:10:23.920><c> not</c><00:10:24.079><c> going</c><00:10:24.160><c> to</c><00:10:24.240><c> take</c>

00:10:24.389 --> 00:10:24.399 align:start position:0%
course and so we're not going to take
 

00:10:24.399 --> 00:10:26.150 align:start position:0%
course and so we're not going to take
this<00:10:24.560><c> kind</c><00:10:24.720><c> of</c><00:10:24.800><c> like</c><00:10:25.040><c> a</c><00:10:25.120><c> symbolic</c><00:10:25.600><c> approach</c>

00:10:26.150 --> 00:10:26.160 align:start position:0%
this kind of like a symbolic approach
 

00:10:26.160 --> 00:10:27.350 align:start position:0%
this kind of like a symbolic approach
instead<00:10:26.480><c> what</c><00:10:26.560><c> i'd</c><00:10:26.720><c> like</c><00:10:26.800><c> to</c><00:10:26.880><c> do</c><00:10:27.040><c> is</c><00:10:27.120><c> i'd</c><00:10:27.200><c> like</c>

00:10:27.350 --> 00:10:27.360 align:start position:0%
instead what i'd like to do is i'd like
 

00:10:27.360 --> 00:10:29.269 align:start position:0%
instead what i'd like to do is i'd like
to<00:10:27.440><c> look</c><00:10:27.600><c> at</c><00:10:27.680><c> the</c><00:10:28.240><c> definition</c><00:10:28.720><c> of</c><00:10:28.800><c> derivative</c>

00:10:29.269 --> 00:10:29.279 align:start position:0%
to look at the definition of derivative
 

00:10:29.279 --> 00:10:30.389 align:start position:0%
to look at the definition of derivative
and<00:10:29.440><c> just</c><00:10:29.600><c> make</c><00:10:29.760><c> sure</c><00:10:29.920><c> that</c><00:10:30.079><c> we</c><00:10:30.160><c> really</c>

00:10:30.389 --> 00:10:30.399 align:start position:0%
and just make sure that we really
 

00:10:30.399 --> 00:10:32.310 align:start position:0%
and just make sure that we really
understand<00:10:31.120><c> what</c><00:10:31.360><c> derivative</c><00:10:31.760><c> is</c><00:10:31.920><c> measuring</c>

00:10:32.310 --> 00:10:32.320 align:start position:0%
understand what derivative is measuring
 

00:10:32.320 --> 00:10:34.790 align:start position:0%
understand what derivative is measuring
what<00:10:32.480><c> it's</c><00:10:32.640><c> telling</c><00:10:32.959><c> you</c><00:10:33.279><c> about</c><00:10:33.519><c> the</c><00:10:33.680><c> function</c>

00:10:34.790 --> 00:10:34.800 align:start position:0%
what it's telling you about the function
 

00:10:34.800 --> 00:10:42.310 align:start position:0%
what it's telling you about the function
and<00:10:34.959><c> so</c><00:10:35.279><c> if</c><00:10:35.440><c> we</c><00:10:35.600><c> just</c><00:10:35.760><c> look</c><00:10:36.000><c> up</c><00:10:36.160><c> derivative</c>

00:10:42.310 --> 00:10:42.320 align:start position:0%
 
 

00:10:42.320 --> 00:10:43.509 align:start position:0%
 
we<00:10:42.480><c> see</c><00:10:42.640><c> that</c>

00:10:43.509 --> 00:10:43.519 align:start position:0%
we see that
 

00:10:43.519 --> 00:10:44.630 align:start position:0%
we see that
okay<00:10:43.760><c> so</c><00:10:43.839><c> this</c><00:10:44.000><c> is</c><00:10:44.079><c> not</c><00:10:44.240><c> a</c><00:10:44.320><c> very</c><00:10:44.480><c> good</c>

00:10:44.630 --> 00:10:44.640 align:start position:0%
okay so this is not a very good
 

00:10:44.640 --> 00:10:46.069 align:start position:0%
okay so this is not a very good
definition<00:10:44.959><c> of</c><00:10:45.120><c> derivative</c><00:10:45.600><c> this</c><00:10:45.839><c> is</c><00:10:45.920><c> a</c>

00:10:46.069 --> 00:10:46.079 align:start position:0%
definition of derivative this is a
 

00:10:46.079 --> 00:10:47.269 align:start position:0%
definition of derivative this is a
definition<00:10:46.560><c> of</c><00:10:46.640><c> what</c><00:10:46.800><c> it</c><00:10:46.880><c> means</c><00:10:47.040><c> to</c><00:10:47.120><c> be</c>

00:10:47.269 --> 00:10:47.279 align:start position:0%
definition of what it means to be
 

00:10:47.279 --> 00:10:48.470 align:start position:0%
definition of what it means to be
differentiable

00:10:48.470 --> 00:10:48.480 align:start position:0%
differentiable
 

00:10:48.480 --> 00:10:50.150 align:start position:0%
differentiable
but<00:10:48.640><c> if</c><00:10:48.800><c> you</c><00:10:48.880><c> remember</c><00:10:49.200><c> from</c><00:10:49.360><c> your</c><00:10:49.519><c> calculus</c>

00:10:50.150 --> 00:10:50.160 align:start position:0%
but if you remember from your calculus
 

00:10:50.160 --> 00:10:52.550 align:start position:0%
but if you remember from your calculus
it<00:10:50.320><c> is</c><00:10:50.399><c> the</c><00:10:50.560><c> limit</c><00:10:50.800><c> as</c><00:10:50.959><c> h</c><00:10:51.120><c> goes</c><00:10:51.279><c> to</c><00:10:51.440><c> zero</c><00:10:52.160><c> of</c><00:10:52.399><c> f</c>

00:10:52.550 --> 00:10:52.560 align:start position:0%
it is the limit as h goes to zero of f
 

00:10:52.560 --> 00:10:55.910 align:start position:0%
it is the limit as h goes to zero of f
of<00:10:53.040><c> x</c><00:10:53.200><c> plus</c><00:10:53.519><c> h</c><00:10:53.760><c> minus</c><00:10:54.079><c> f</c><00:10:54.240><c> of</c><00:10:54.399><c> x</c><00:10:54.800><c> over</c><00:10:55.120><c> h</c><00:10:55.760><c> so</c>

00:10:55.910 --> 00:10:55.920 align:start position:0%
of x plus h minus f of x over h so
 

00:10:55.920 --> 00:10:58.389 align:start position:0%
of x plus h minus f of x over h so
basically<00:10:56.320><c> what</c><00:10:56.480><c> it's</c><00:10:56.720><c> saying</c><00:10:57.120><c> is</c><00:10:57.680><c> if</c><00:10:57.839><c> you</c>

00:10:58.389 --> 00:10:58.399 align:start position:0%
basically what it's saying is if you
 

00:10:58.399 --> 00:11:00.949 align:start position:0%
basically what it's saying is if you
slightly<00:10:58.959><c> bump</c><00:10:59.279><c> up</c><00:11:00.079><c> you're</c><00:11:00.320><c> at</c><00:11:00.399><c> some</c><00:11:00.560><c> point</c><00:11:00.800><c> x</c>

00:11:00.949 --> 00:11:00.959 align:start position:0%
slightly bump up you're at some point x
 

00:11:00.959 --> 00:11:02.870 align:start position:0%
slightly bump up you're at some point x
that<00:11:01.040><c> you're</c><00:11:01.200><c> interested</c><00:11:01.600><c> in</c><00:11:01.760><c> or</c><00:11:02.000><c> a</c><00:11:02.640><c> and</c><00:11:02.800><c> if</c>

00:11:02.870 --> 00:11:02.880 align:start position:0%
that you're interested in or a and if
 

00:11:02.880 --> 00:11:04.550 align:start position:0%
that you're interested in or a and if
you<00:11:03.040><c> slightly</c><00:11:03.440><c> bump</c><00:11:03.839><c> up</c>

00:11:04.550 --> 00:11:04.560 align:start position:0%
you slightly bump up
 

00:11:04.560 --> 00:11:06.069 align:start position:0%
you slightly bump up
you<00:11:04.720><c> know</c><00:11:04.800><c> you</c><00:11:04.959><c> slightly</c><00:11:05.360><c> increase</c><00:11:05.680><c> it</c><00:11:05.760><c> by</c>

00:11:06.069 --> 00:11:06.079 align:start position:0%
you know you slightly increase it by
 

00:11:06.079 --> 00:11:08.069 align:start position:0%
you know you slightly increase it by
small<00:11:06.399><c> number</c><00:11:06.800><c> h</c>

00:11:08.069 --> 00:11:08.079 align:start position:0%
small number h
 

00:11:08.079 --> 00:11:09.750 align:start position:0%
small number h
how<00:11:08.240><c> does</c><00:11:08.399><c> the</c><00:11:08.560><c> function</c><00:11:08.880><c> respond</c><00:11:09.440><c> with</c><00:11:09.600><c> what</c>

00:11:09.750 --> 00:11:09.760 align:start position:0%
how does the function respond with what
 

00:11:09.760 --> 00:11:11.430 align:start position:0%
how does the function respond with what
sensitivity<00:11:10.480><c> does</c><00:11:10.640><c> it</c><00:11:10.720><c> respond</c><00:11:11.040><c> what</c><00:11:11.200><c> is</c><00:11:11.279><c> the</c>

00:11:11.430 --> 00:11:11.440 align:start position:0%
sensitivity does it respond what is the
 

00:11:11.440 --> 00:11:13.590 align:start position:0%
sensitivity does it respond what is the
slope<00:11:11.760><c> at</c><00:11:11.839><c> that</c><00:11:12.079><c> point</c><00:11:12.640><c> does</c><00:11:12.880><c> the</c><00:11:12.959><c> function</c><00:11:13.360><c> go</c>

00:11:13.590 --> 00:11:13.600 align:start position:0%
slope at that point does the function go
 

00:11:13.600 --> 00:11:16.310 align:start position:0%
slope at that point does the function go
up<00:11:13.839><c> or</c><00:11:14.000><c> does</c><00:11:14.240><c> it</c><00:11:14.320><c> go</c><00:11:14.480><c> down</c><00:11:14.959><c> and</c><00:11:15.120><c> by</c><00:11:15.360><c> how</c><00:11:15.519><c> much</c>

00:11:16.310 --> 00:11:16.320 align:start position:0%
up or does it go down and by how much
 

00:11:16.320 --> 00:11:17.990 align:start position:0%
up or does it go down and by how much
and<00:11:16.399><c> that's</c><00:11:16.880><c> the</c><00:11:17.040><c> slope</c><00:11:17.440><c> of</c><00:11:17.519><c> that</c><00:11:17.680><c> function</c>

00:11:17.990 --> 00:11:18.000 align:start position:0%
and that's the slope of that function
 

00:11:18.000 --> 00:11:18.710 align:start position:0%
and that's the slope of that function
the

00:11:18.710 --> 00:11:18.720 align:start position:0%
the
 

00:11:18.720 --> 00:11:21.750 align:start position:0%
the
the<00:11:18.880><c> slope</c><00:11:19.200><c> of</c><00:11:19.279><c> that</c><00:11:19.519><c> response</c><00:11:20.560><c> at</c><00:11:20.720><c> that</c><00:11:20.959><c> point</c>

00:11:21.750 --> 00:11:21.760 align:start position:0%
the slope of that response at that point
 

00:11:21.760 --> 00:11:23.910 align:start position:0%
the slope of that response at that point
and<00:11:21.920><c> so</c><00:11:22.160><c> we</c><00:11:22.320><c> can</c><00:11:22.399><c> basically</c><00:11:22.720><c> evaluate</c>

00:11:23.910 --> 00:11:23.920 align:start position:0%
and so we can basically evaluate
 

00:11:23.920 --> 00:11:26.310 align:start position:0%
and so we can basically evaluate
the<00:11:24.000><c> derivative</c><00:11:24.560><c> here</c><00:11:25.120><c> numerically</c><00:11:26.079><c> by</c>

00:11:26.310 --> 00:11:26.320 align:start position:0%
the derivative here numerically by
 

00:11:26.320 --> 00:11:27.990 align:start position:0%
the derivative here numerically by
taking<00:11:26.640><c> a</c><00:11:26.720><c> very</c><00:11:26.880><c> small</c><00:11:27.279><c> h</c><00:11:27.600><c> of</c><00:11:27.680><c> course</c><00:11:27.839><c> the</c>

00:11:27.990 --> 00:11:28.000 align:start position:0%
taking a very small h of course the
 

00:11:28.000 --> 00:11:30.150 align:start position:0%
taking a very small h of course the
definition<00:11:28.560><c> would</c><00:11:28.880><c> ask</c><00:11:29.120><c> us</c><00:11:29.279><c> to</c><00:11:29.600><c> take</c><00:11:29.839><c> h</c><00:11:30.000><c> to</c>

00:11:30.150 --> 00:11:30.160 align:start position:0%
definition would ask us to take h to
 

00:11:30.160 --> 00:11:31.750 align:start position:0%
definition would ask us to take h to
zero<00:11:30.720><c> we're</c><00:11:30.880><c> just</c><00:11:31.120><c> going</c><00:11:31.279><c> to</c><00:11:31.360><c> pick</c><00:11:31.519><c> a</c><00:11:31.600><c> very</c>

00:11:31.750 --> 00:11:31.760 align:start position:0%
zero we're just going to pick a very
 

00:11:31.760 --> 00:11:33.990 align:start position:0%
zero we're just going to pick a very
small<00:11:32.079><c> h</c><00:11:32.320><c> 0.001</c>

00:11:33.990 --> 00:11:34.000 align:start position:0%
small h 0.001
 

00:11:34.000 --> 00:11:35.110 align:start position:0%
small h 0.001
and<00:11:34.079><c> let's</c><00:11:34.240><c> say</c><00:11:34.399><c> we're</c><00:11:34.480><c> interested</c><00:11:34.720><c> in</c><00:11:34.880><c> point</c>

00:11:35.110 --> 00:11:35.120 align:start position:0%
and let's say we're interested in point
 

00:11:35.120 --> 00:11:37.750 align:start position:0%
and let's say we're interested in point
3.0<00:11:36.079><c> so</c><00:11:36.240><c> we</c><00:11:36.399><c> can</c><00:11:36.480><c> look</c><00:11:36.640><c> at</c><00:11:36.800><c> f</c><00:11:36.959><c> of</c><00:11:37.120><c> x</c><00:11:37.360><c> of</c><00:11:37.440><c> course</c>

00:11:37.750 --> 00:11:37.760 align:start position:0%
3.0 so we can look at f of x of course
 

00:11:37.760 --> 00:11:38.949 align:start position:0%
3.0 so we can look at f of x of course
as<00:11:37.920><c> 20</c>

00:11:38.949 --> 00:11:38.959 align:start position:0%
as 20
 

00:11:38.959 --> 00:11:40.949 align:start position:0%
as 20
and<00:11:39.120><c> now</c><00:11:39.360><c> f</c><00:11:39.519><c> of</c><00:11:39.680><c> x</c><00:11:39.839><c> plus</c><00:11:40.160><c> h</c>

00:11:40.949 --> 00:11:40.959 align:start position:0%
and now f of x plus h
 

00:11:40.959 --> 00:11:42.790 align:start position:0%
and now f of x plus h
so<00:11:41.120><c> if</c><00:11:41.279><c> we</c><00:11:41.440><c> slightly</c><00:11:41.760><c> nudge</c><00:11:42.160><c> x</c><00:11:42.320><c> in</c><00:11:42.399><c> a</c><00:11:42.480><c> positive</c>

00:11:42.790 --> 00:11:42.800 align:start position:0%
so if we slightly nudge x in a positive
 

00:11:42.800 --> 00:11:44.550 align:start position:0%
so if we slightly nudge x in a positive
direction<00:11:43.519><c> how</c><00:11:43.760><c> is</c><00:11:43.839><c> the</c><00:11:44.000><c> function</c><00:11:44.240><c> going</c><00:11:44.480><c> to</c>

00:11:44.550 --> 00:11:44.560 align:start position:0%
direction how is the function going to
 

00:11:44.560 --> 00:11:45.590 align:start position:0%
direction how is the function going to
respond

00:11:45.590 --> 00:11:45.600 align:start position:0%
respond
 

00:11:45.600 --> 00:11:47.670 align:start position:0%
respond
and<00:11:45.839><c> just</c><00:11:46.079><c> looking</c><00:11:46.399><c> at</c><00:11:46.480><c> this</c><00:11:46.959><c> do</c><00:11:47.040><c> you</c><00:11:47.200><c> expect</c>

00:11:47.670 --> 00:11:47.680 align:start position:0%
and just looking at this do you expect
 

00:11:47.680 --> 00:11:49.190 align:start position:0%
and just looking at this do you expect
do<00:11:47.839><c> you</c><00:11:47.920><c> expect</c><00:11:48.240><c> f</c><00:11:48.320><c> of</c><00:11:48.480><c> x</c><00:11:48.560><c> plus</c><00:11:48.800><c> h</c><00:11:48.959><c> to</c><00:11:49.040><c> be</c>

00:11:49.190 --> 00:11:49.200 align:start position:0%
do you expect f of x plus h to be
 

00:11:49.200 --> 00:11:51.910 align:start position:0%
do you expect f of x plus h to be
slightly<00:11:49.600><c> greater</c><00:11:50.320><c> than</c><00:11:50.560><c> 20</c><00:11:51.279><c> or</c><00:11:51.519><c> do</c><00:11:51.680><c> you</c>

00:11:51.910 --> 00:11:51.920 align:start position:0%
slightly greater than 20 or do you
 

00:11:51.920 --> 00:11:54.629 align:start position:0%
slightly greater than 20 or do you
expect<00:11:52.240><c> to</c><00:11:52.320><c> be</c><00:11:52.480><c> slightly</c><00:11:53.040><c> lower</c><00:11:53.360><c> than</c><00:11:53.600><c> 20</c>

00:11:54.629 --> 00:11:54.639 align:start position:0%
expect to be slightly lower than 20
 

00:11:54.639 --> 00:11:57.030 align:start position:0%
expect to be slightly lower than 20
and<00:11:54.800><c> since</c><00:11:55.040><c> this</c><00:11:55.200><c> 3</c><00:11:55.440><c> is</c><00:11:55.600><c> here</c><00:11:56.000><c> and</c><00:11:56.079><c> this</c><00:11:56.240><c> is</c><00:11:56.399><c> 20</c>

00:11:57.030 --> 00:11:57.040 align:start position:0%
and since this 3 is here and this is 20
 

00:11:57.040 --> 00:11:59.030 align:start position:0%
and since this 3 is here and this is 20
if<00:11:57.200><c> we</c><00:11:57.360><c> slightly</c><00:11:57.839><c> go</c><00:11:58.000><c> positively</c><00:11:58.880><c> the</c>

00:11:59.030 --> 00:11:59.040 align:start position:0%
if we slightly go positively the
 

00:11:59.040 --> 00:12:01.350 align:start position:0%
if we slightly go positively the
function<00:11:59.360><c> will</c><00:11:59.600><c> respond</c><00:12:00.079><c> positively</c><00:12:01.120><c> so</c>

00:12:01.350 --> 00:12:01.360 align:start position:0%
function will respond positively so
 

00:12:01.360 --> 00:12:03.030 align:start position:0%
function will respond positively so
you'd<00:12:01.600><c> expect</c><00:12:01.839><c> this</c><00:12:02.000><c> to</c><00:12:02.079><c> be</c><00:12:02.240><c> slightly</c><00:12:02.639><c> greater</c>

00:12:03.030 --> 00:12:03.040 align:start position:0%
you'd expect this to be slightly greater
 

00:12:03.040 --> 00:12:05.350 align:start position:0%
you'd expect this to be slightly greater
than<00:12:03.200><c> 20.</c><00:12:04.079><c> and</c><00:12:04.160><c> now</c><00:12:04.399><c> by</c><00:12:04.639><c> how</c><00:12:04.880><c> much</c><00:12:05.200><c> it's</c>

00:12:05.350 --> 00:12:05.360 align:start position:0%
than 20. and now by how much it's
 

00:12:05.360 --> 00:12:06.470 align:start position:0%
than 20. and now by how much it's
telling<00:12:05.600><c> you</c><00:12:05.760><c> the</c>

00:12:06.470 --> 00:12:06.480 align:start position:0%
telling you the
 

00:12:06.480 --> 00:12:07.829 align:start position:0%
telling you the
sort<00:12:06.639><c> of</c><00:12:06.800><c> the</c>

00:12:07.829 --> 00:12:07.839 align:start position:0%
sort of the
 

00:12:07.839 --> 00:12:09.910 align:start position:0%
sort of the
the<00:12:08.000><c> strength</c><00:12:08.320><c> of</c><00:12:08.399><c> that</c><00:12:08.639><c> slope</c><00:12:08.959><c> right</c><00:12:09.279><c> the</c><00:12:09.519><c> the</c>

00:12:09.910 --> 00:12:09.920 align:start position:0%
the strength of that slope right the the
 

00:12:09.920 --> 00:12:12.790 align:start position:0%
the strength of that slope right the the
size<00:12:10.240><c> of</c><00:12:10.320><c> the</c><00:12:10.560><c> slope</c><00:12:11.120><c> so</c><00:12:11.360><c> f</c><00:12:11.519><c> of</c><00:12:11.600><c> x</c><00:12:11.680><c> plus</c><00:12:11.920><c> h</c><00:12:12.079><c> minus</c>

00:12:12.790 --> 00:12:12.800 align:start position:0%
size of the slope so f of x plus h minus
 

00:12:12.800 --> 00:12:14.790 align:start position:0%
size of the slope so f of x plus h minus
f<00:12:13.040><c> of</c><00:12:13.200><c> x</c><00:12:13.519><c> this</c><00:12:13.760><c> is</c><00:12:13.839><c> how</c><00:12:14.000><c> much</c><00:12:14.320><c> the</c><00:12:14.480><c> function</c>

00:12:14.790 --> 00:12:14.800 align:start position:0%
f of x this is how much the function
 

00:12:14.800 --> 00:12:15.990 align:start position:0%
f of x this is how much the function
responded

00:12:15.990 --> 00:12:16.000 align:start position:0%
responded
 

00:12:16.000 --> 00:12:17.910 align:start position:0%
responded
in<00:12:16.079><c> the</c><00:12:16.240><c> positive</c><00:12:16.639><c> direction</c><00:12:17.440><c> and</c><00:12:17.600><c> we</c><00:12:17.760><c> have</c><00:12:17.839><c> to</c>

00:12:17.910 --> 00:12:17.920 align:start position:0%
in the positive direction and we have to
 

00:12:17.920 --> 00:12:19.910 align:start position:0%
in the positive direction and we have to
normalize<00:12:18.480><c> by</c><00:12:18.880><c> the</c>

00:12:19.910 --> 00:12:19.920 align:start position:0%
normalize by the
 

00:12:19.920 --> 00:12:22.310 align:start position:0%
normalize by the
run<00:12:20.320><c> so</c><00:12:20.480><c> we</c><00:12:20.639><c> have</c><00:12:20.720><c> the</c><00:12:20.880><c> rise</c><00:12:21.120><c> over</c><00:12:21.360><c> run</c><00:12:22.000><c> to</c><00:12:22.160><c> get</c>

00:12:22.310 --> 00:12:22.320 align:start position:0%
run so we have the rise over run to get
 

00:12:22.320 --> 00:12:24.790 align:start position:0%
run so we have the rise over run to get
the<00:12:22.839><c> slope</c><00:12:23.839><c> so</c><00:12:24.079><c> this</c><00:12:24.240><c> of</c><00:12:24.320><c> course</c><00:12:24.560><c> is</c><00:12:24.639><c> just</c><00:12:24.800><c> a</c>

00:12:24.790 --> 00:12:24.800 align:start position:0%
the slope so this of course is just a
 

00:12:24.800 --> 00:12:26.790 align:start position:0%
the slope so this of course is just a
numerical<00:12:25.279><c> approximation</c><00:12:25.920><c> of</c><00:12:26.000><c> the</c><00:12:26.160><c> slope</c>

00:12:26.790 --> 00:12:26.800 align:start position:0%
numerical approximation of the slope
 

00:12:26.800 --> 00:12:28.870 align:start position:0%
numerical approximation of the slope
because<00:12:27.279><c> we</c><00:12:27.519><c> have</c><00:12:27.600><c> to</c><00:12:27.920><c> make</c><00:12:28.160><c> age</c><00:12:28.480><c> very</c><00:12:28.720><c> very</c>

00:12:28.870 --> 00:12:28.880 align:start position:0%
because we have to make age very very
 

00:12:28.880 --> 00:12:32.790 align:start position:0%
because we have to make age very very
small<00:12:29.519><c> to</c><00:12:29.680><c> converge</c><00:12:30.399><c> to</c><00:12:30.560><c> the</c><00:12:30.720><c> exact</c><00:12:31.360><c> amount</c>

00:12:32.790 --> 00:12:32.800 align:start position:0%
small to converge to the exact amount
 

00:12:32.800 --> 00:12:35.509 align:start position:0%
small to converge to the exact amount
now<00:12:33.040><c> if</c><00:12:33.200><c> i'm</c><00:12:33.519><c> doing</c><00:12:33.760><c> too</c><00:12:33.920><c> many</c><00:12:34.160><c> zeros</c>

00:12:35.509 --> 00:12:35.519 align:start position:0%
now if i'm doing too many zeros
 

00:12:35.519 --> 00:12:36.790 align:start position:0%
now if i'm doing too many zeros
at<00:12:35.600><c> some</c><00:12:35.839><c> point</c>

00:12:36.790 --> 00:12:36.800 align:start position:0%
at some point
 

00:12:36.800 --> 00:12:38.310 align:start position:0%
at some point
i'm<00:12:36.959><c> gonna</c><00:12:37.120><c> get</c><00:12:37.200><c> an</c><00:12:37.360><c> incorrect</c><00:12:37.680><c> answer</c>

00:12:38.310 --> 00:12:38.320 align:start position:0%
i'm gonna get an incorrect answer
 

00:12:38.320 --> 00:12:39.590 align:start position:0%
i'm gonna get an incorrect answer
because<00:12:38.560><c> we're</c><00:12:38.800><c> using</c><00:12:39.040><c> floating</c><00:12:39.360><c> point</c>

00:12:39.590 --> 00:12:39.600 align:start position:0%
because we're using floating point
 

00:12:39.600 --> 00:12:41.829 align:start position:0%
because we're using floating point
arithmetic<00:12:40.480><c> and</c><00:12:40.800><c> the</c><00:12:41.040><c> representations</c><00:12:41.680><c> of</c>

00:12:41.829 --> 00:12:41.839 align:start position:0%
arithmetic and the representations of
 

00:12:41.839 --> 00:12:43.750 align:start position:0%
arithmetic and the representations of
all<00:12:41.920><c> these</c><00:12:42.079><c> numbers</c><00:12:42.639><c> in</c><00:12:42.880><c> computer</c><00:12:43.279><c> memory</c><00:12:43.600><c> is</c>

00:12:43.750 --> 00:12:43.760 align:start position:0%
all these numbers in computer memory is
 

00:12:43.760 --> 00:12:45.590 align:start position:0%
all these numbers in computer memory is
finite<00:12:44.480><c> and</c><00:12:44.720><c> at</c><00:12:44.880><c> some</c><00:12:45.040><c> point</c><00:12:45.200><c> we</c><00:12:45.279><c> get</c><00:12:45.440><c> into</c>

00:12:45.590 --> 00:12:45.600 align:start position:0%
finite and at some point we get into
 

00:12:45.600 --> 00:12:46.389 align:start position:0%
finite and at some point we get into
trouble

00:12:46.389 --> 00:12:46.399 align:start position:0%
trouble
 

00:12:46.399 --> 00:12:47.750 align:start position:0%
trouble
so<00:12:46.560><c> we</c><00:12:46.720><c> can</c><00:12:46.800><c> converse</c><00:12:47.200><c> towards</c><00:12:47.440><c> the</c><00:12:47.519><c> right</c>

00:12:47.750 --> 00:12:47.760 align:start position:0%
so we can converse towards the right
 

00:12:47.760 --> 00:12:50.389 align:start position:0%
so we can converse towards the right
answer<00:12:48.160><c> with</c><00:12:48.320><c> this</c><00:12:48.480><c> approach</c>

00:12:50.389 --> 00:12:50.399 align:start position:0%
answer with this approach
 

00:12:50.399 --> 00:12:54.550 align:start position:0%
answer with this approach
but<00:12:50.560><c> basically</c><00:12:51.200><c> um</c><00:12:51.839><c> at</c><00:12:52.160><c> 3</c><00:12:52.560><c> the</c><00:12:52.720><c> slope</c><00:12:53.200><c> is</c><00:12:53.519><c> 14.</c>

00:12:54.550 --> 00:12:54.560 align:start position:0%
but basically um at 3 the slope is 14.
 

00:12:54.560 --> 00:12:56.069 align:start position:0%
but basically um at 3 the slope is 14.
and<00:12:54.720><c> you</c><00:12:54.880><c> can</c><00:12:54.959><c> see</c><00:12:55.120><c> that</c><00:12:55.279><c> by</c><00:12:55.440><c> taking</c><00:12:55.760><c> 3x</c>

00:12:56.069 --> 00:12:56.079 align:start position:0%
and you can see that by taking 3x
 

00:12:56.079 --> 00:12:58.310 align:start position:0%
and you can see that by taking 3x
squared<00:12:56.320><c> minus</c><00:12:56.639><c> 4x</c><00:12:56.959><c> plus</c><00:12:57.200><c> 5</c><00:12:57.760><c> and</c>

00:12:58.310 --> 00:12:58.320 align:start position:0%
squared minus 4x plus 5 and
 

00:12:58.320 --> 00:13:00.470 align:start position:0%
squared minus 4x plus 5 and
differentiating<00:12:59.040><c> it</c><00:12:59.279><c> in</c><00:12:59.440><c> our</c><00:12:59.519><c> head</c>

00:13:00.470 --> 00:13:00.480 align:start position:0%
differentiating it in our head
 

00:13:00.480 --> 00:13:02.629 align:start position:0%
differentiating it in our head
so<00:13:00.720><c> 3x</c><00:13:01.200><c> squared</c><00:13:01.519><c> would</c><00:13:01.680><c> be</c>

00:13:02.629 --> 00:13:02.639 align:start position:0%
so 3x squared would be
 

00:13:02.639 --> 00:13:04.870 align:start position:0%
so 3x squared would be
6<00:13:03.200><c> x</c><00:13:03.519><c> minus</c><00:13:03.839><c> 4</c>

00:13:04.870 --> 00:13:04.880 align:start position:0%
6 x minus 4
 

00:13:04.880 --> 00:13:07.269 align:start position:0%
6 x minus 4
and<00:13:04.959><c> then</c><00:13:05.120><c> we</c><00:13:05.279><c> plug</c><00:13:05.519><c> in</c><00:13:05.680><c> x</c><00:13:05.920><c> equals</c><00:13:06.240><c> 3</c><00:13:06.880><c> so</c><00:13:07.040><c> that's</c>

00:13:07.269 --> 00:13:07.279 align:start position:0%
and then we plug in x equals 3 so that's
 

00:13:07.279 --> 00:13:10.870 align:start position:0%
and then we plug in x equals 3 so that's
18<00:13:07.600><c> minus</c><00:13:07.839><c> 4</c><00:13:08.000><c> is</c><00:13:08.079><c> 14.</c><00:13:08.560><c> so</c><00:13:08.800><c> this</c><00:13:08.880><c> is</c><00:13:09.040><c> correct</c>

00:13:10.870 --> 00:13:10.880 align:start position:0%
18 minus 4 is 14. so this is correct
 

00:13:10.880 --> 00:13:12.069 align:start position:0%
18 minus 4 is 14. so this is correct
so<00:13:11.040><c> that's</c>

00:13:12.069 --> 00:13:12.079 align:start position:0%
so that's
 

00:13:12.079 --> 00:13:15.750 align:start position:0%
so that's
at<00:13:12.240><c> 3.</c><00:13:12.959><c> now</c><00:13:13.120><c> how</c><00:13:13.360><c> about</c><00:13:13.839><c> the</c><00:13:14.079><c> slope</c><00:13:14.560><c> at</c><00:13:14.959><c> say</c>

00:13:15.750 --> 00:13:15.760 align:start position:0%
at 3. now how about the slope at say
 

00:13:15.760 --> 00:13:17.350 align:start position:0%
at 3. now how about the slope at say
negative<00:13:16.160><c> 3</c>

00:13:17.350 --> 00:13:17.360 align:start position:0%
negative 3
 

00:13:17.360 --> 00:13:19.509 align:start position:0%
negative 3
would<00:13:17.519><c> you</c><00:13:17.839><c> expect</c><00:13:18.480><c> would</c><00:13:18.720><c> you</c><00:13:18.880><c> expect</c><00:13:19.360><c> for</c>

00:13:19.509 --> 00:13:19.519 align:start position:0%
would you expect would you expect for
 

00:13:19.519 --> 00:13:20.470 align:start position:0%
would you expect would you expect for
the<00:13:19.600><c> slope</c>

00:13:20.470 --> 00:13:20.480 align:start position:0%
the slope
 

00:13:20.480 --> 00:13:22.310 align:start position:0%
the slope
now<00:13:20.880><c> telling</c><00:13:21.120><c> the</c><00:13:21.279><c> exact</c><00:13:21.680><c> value</c><00:13:22.000><c> is</c><00:13:22.079><c> really</c>

00:13:22.310 --> 00:13:22.320 align:start position:0%
now telling the exact value is really
 

00:13:22.320 --> 00:13:24.949 align:start position:0%
now telling the exact value is really
hard<00:13:22.639><c> but</c><00:13:22.800><c> what</c><00:13:22.959><c> is</c><00:13:23.040><c> the</c><00:13:23.200><c> sign</c><00:13:23.440><c> of</c><00:13:23.519><c> that</c><00:13:23.680><c> slope</c>

00:13:24.949 --> 00:13:24.959 align:start position:0%
hard but what is the sign of that slope
 

00:13:24.959 --> 00:13:26.790 align:start position:0%
hard but what is the sign of that slope
so<00:13:25.120><c> at</c><00:13:25.279><c> negative</c><00:13:25.600><c> three</c>

00:13:26.790 --> 00:13:26.800 align:start position:0%
so at negative three
 

00:13:26.800 --> 00:13:28.389 align:start position:0%
so at negative three
if<00:13:26.959><c> we</c><00:13:27.120><c> slightly</c><00:13:27.519><c> go</c><00:13:27.760><c> in</c><00:13:27.920><c> the</c><00:13:28.000><c> positive</c>

00:13:28.389 --> 00:13:28.399 align:start position:0%
if we slightly go in the positive
 

00:13:28.399 --> 00:13:30.710 align:start position:0%
if we slightly go in the positive
direction<00:13:29.120><c> at</c><00:13:29.360><c> x</c><00:13:29.920><c> the</c><00:13:30.079><c> function</c><00:13:30.399><c> would</c>

00:13:30.710 --> 00:13:30.720 align:start position:0%
direction at x the function would
 

00:13:30.720 --> 00:13:32.550 align:start position:0%
direction at x the function would
actually<00:13:31.040><c> go</c><00:13:31.279><c> down</c><00:13:31.839><c> and</c><00:13:31.920><c> so</c><00:13:32.079><c> that</c><00:13:32.240><c> tells</c><00:13:32.480><c> you</c>

00:13:32.550 --> 00:13:32.560 align:start position:0%
actually go down and so that tells you
 

00:13:32.560 --> 00:13:33.910 align:start position:0%
actually go down and so that tells you
that<00:13:32.639><c> the</c><00:13:32.800><c> slope</c><00:13:32.959><c> would</c><00:13:33.040><c> be</c><00:13:33.200><c> negative</c><00:13:33.760><c> so</c>

00:13:33.910 --> 00:13:33.920 align:start position:0%
that the slope would be negative so
 

00:13:33.920 --> 00:13:36.710 align:start position:0%
that the slope would be negative so
we'll<00:13:34.079><c> get</c><00:13:34.240><c> a</c><00:13:34.320><c> slight</c><00:13:34.639><c> number</c><00:13:35.040><c> below</c>

00:13:36.710 --> 00:13:36.720 align:start position:0%
we'll get a slight number below
 

00:13:36.720 --> 00:13:39.110 align:start position:0%
we'll get a slight number below
below<00:13:37.040><c> 20.</c><00:13:37.839><c> and</c><00:13:37.920><c> so</c><00:13:38.079><c> if</c><00:13:38.240><c> we</c><00:13:38.320><c> take</c><00:13:38.480><c> the</c><00:13:38.720><c> slope</c><00:13:39.040><c> we</c>

00:13:39.110 --> 00:13:39.120 align:start position:0%
below 20. and so if we take the slope we
 

00:13:39.120 --> 00:13:40.870 align:start position:0%
below 20. and so if we take the slope we
expect<00:13:39.440><c> something</c><00:13:39.839><c> negative</c>

00:13:40.870 --> 00:13:40.880 align:start position:0%
expect something negative
 

00:13:40.880 --> 00:13:43.829 align:start position:0%
expect something negative
negative<00:13:41.199><c> 22.</c><00:13:41.920><c> okay</c>

00:13:43.829 --> 00:13:43.839 align:start position:0%
negative 22. okay
 

00:13:43.839 --> 00:13:45.509 align:start position:0%
negative 22. okay
and<00:13:44.399><c> at</c><00:13:44.560><c> some</c><00:13:44.800><c> point</c><00:13:44.959><c> here</c><00:13:45.120><c> of</c><00:13:45.199><c> course</c><00:13:45.440><c> the</c>

00:13:45.509 --> 00:13:45.519 align:start position:0%
and at some point here of course the
 

00:13:45.519 --> 00:13:47.590 align:start position:0%
and at some point here of course the
slope<00:13:45.839><c> would</c><00:13:45.920><c> be</c><00:13:46.320><c> zero</c><00:13:47.120><c> now</c><00:13:47.279><c> for</c><00:13:47.440><c> this</c>

00:13:47.590 --> 00:13:47.600 align:start position:0%
slope would be zero now for this
 

00:13:47.600 --> 00:13:48.870 align:start position:0%
slope would be zero now for this
specific<00:13:48.000><c> function</c><00:13:48.320><c> i</c><00:13:48.399><c> looked</c><00:13:48.639><c> it</c><00:13:48.800><c> up</c>

00:13:48.870 --> 00:13:48.880 align:start position:0%
specific function i looked it up
 

00:13:48.880 --> 00:13:51.269 align:start position:0%
specific function i looked it up
previously<00:13:49.680><c> and</c><00:13:49.920><c> it's</c><00:13:50.079><c> at</c><00:13:50.240><c> point</c><00:13:50.880><c> two</c><00:13:51.040><c> over</c>

00:13:51.269 --> 00:13:51.279 align:start position:0%
previously and it's at point two over
 

00:13:51.279 --> 00:13:52.150 align:start position:0%
previously and it's at point two over
three

00:13:52.150 --> 00:13:52.160 align:start position:0%
three
 

00:13:52.160 --> 00:13:54.310 align:start position:0%
three
so<00:13:52.399><c> at</c><00:13:52.800><c> roughly</c><00:13:53.199><c> two</c><00:13:53.360><c> over</c><00:13:53.600><c> three</c>

00:13:54.310 --> 00:13:54.320 align:start position:0%
so at roughly two over three
 

00:13:54.320 --> 00:13:55.910 align:start position:0%
so at roughly two over three
uh<00:13:54.639><c> that's</c><00:13:54.800><c> somewhere</c><00:13:55.120><c> here</c>

00:13:55.910 --> 00:13:55.920 align:start position:0%
uh that's somewhere here
 

00:13:55.920 --> 00:13:57.110 align:start position:0%
uh that's somewhere here
um

00:13:57.110 --> 00:13:57.120 align:start position:0%
um
 

00:13:57.120 --> 00:13:59.189 align:start position:0%
um
this<00:13:57.600><c> derivative</c><00:13:58.079><c> be</c><00:13:58.320><c> zero</c>

00:13:59.189 --> 00:13:59.199 align:start position:0%
this derivative be zero
 

00:13:59.199 --> 00:14:03.430 align:start position:0%
this derivative be zero
so<00:13:59.360><c> basically</c><00:13:59.920><c> at</c><00:14:00.160><c> that</c><00:14:00.399><c> precise</c><00:14:00.880><c> point</c>

00:14:03.430 --> 00:14:03.440 align:start position:0%
so basically at that precise point
 

00:14:03.440 --> 00:14:04.230 align:start position:0%
so basically at that precise point
yeah

00:14:04.230 --> 00:14:04.240 align:start position:0%
yeah
 

00:14:04.240 --> 00:14:06.310 align:start position:0%
yeah
at<00:14:04.399><c> that</c><00:14:04.560><c> precise</c><00:14:04.959><c> point</c><00:14:05.360><c> if</c><00:14:05.519><c> we</c><00:14:05.760><c> nudge</c><00:14:06.160><c> in</c><00:14:06.240><c> a</c>

00:14:06.310 --> 00:14:06.320 align:start position:0%
at that precise point if we nudge in a
 

00:14:06.320 --> 00:14:07.750 align:start position:0%
at that precise point if we nudge in a
positive<00:14:06.639><c> direction</c><00:14:07.040><c> the</c><00:14:07.199><c> function</c><00:14:07.519><c> doesn't</c>

00:14:07.750 --> 00:14:07.760 align:start position:0%
positive direction the function doesn't
 

00:14:07.760 --> 00:14:09.829 align:start position:0%
positive direction the function doesn't
respond<00:14:08.160><c> this</c><00:14:08.320><c> stays</c><00:14:08.560><c> the</c><00:14:08.720><c> same</c><00:14:09.120><c> almost</c><00:14:09.680><c> and</c>

00:14:09.829 --> 00:14:09.839 align:start position:0%
respond this stays the same almost and
 

00:14:09.839 --> 00:14:11.829 align:start position:0%
respond this stays the same almost and
so<00:14:10.000><c> that's</c><00:14:10.079><c> why</c><00:14:10.240><c> the</c><00:14:10.399><c> slope</c><00:14:10.639><c> is</c><00:14:10.800><c> zero</c><00:14:11.440><c> okay</c><00:14:11.680><c> now</c>

00:14:11.829 --> 00:14:11.839 align:start position:0%
so that's why the slope is zero okay now
 

00:14:11.839 --> 00:14:14.310 align:start position:0%
so that's why the slope is zero okay now
let's<00:14:12.000><c> look</c><00:14:12.079><c> at</c><00:14:12.160><c> a</c><00:14:12.240><c> bit</c><00:14:12.399><c> more</c><00:14:12.560><c> complex</c><00:14:13.120><c> case</c>

00:14:14.310 --> 00:14:14.320 align:start position:0%
let's look at a bit more complex case
 

00:14:14.320 --> 00:14:15.829 align:start position:0%
let's look at a bit more complex case
so<00:14:14.480><c> we're</c><00:14:14.639><c> going</c><00:14:14.800><c> to</c><00:14:14.959><c> start</c><00:14:15.600><c> you</c><00:14:15.760><c> know</c>

00:14:15.829 --> 00:14:15.839 align:start position:0%
so we're going to start you know
 

00:14:15.839 --> 00:14:17.990 align:start position:0%
so we're going to start you know
complexifying<00:14:16.480><c> a</c><00:14:16.560><c> bit</c><00:14:17.199><c> so</c><00:14:17.360><c> now</c><00:14:17.600><c> we</c><00:14:17.680><c> have</c><00:14:17.839><c> a</c>

00:14:17.990 --> 00:14:18.000 align:start position:0%
complexifying a bit so now we have a
 

00:14:18.000 --> 00:14:19.670 align:start position:0%
complexifying a bit so now we have a
function

00:14:19.670 --> 00:14:19.680 align:start position:0%
function
 

00:14:19.680 --> 00:14:20.949 align:start position:0%
function
here

00:14:20.949 --> 00:14:20.959 align:start position:0%
here
 

00:14:20.959 --> 00:14:22.629 align:start position:0%
here
with<00:14:21.199><c> output</c><00:14:21.519><c> variable</c><00:14:21.839><c> d</c>

00:14:22.629 --> 00:14:22.639 align:start position:0%
with output variable d
 

00:14:22.639 --> 00:14:24.150 align:start position:0%
with output variable d
that<00:14:22.800><c> is</c><00:14:22.959><c> a</c><00:14:23.040><c> function</c><00:14:23.279><c> of</c><00:14:23.440><c> three</c><00:14:23.680><c> scalar</c>

00:14:24.150 --> 00:14:24.160 align:start position:0%
that is a function of three scalar
 

00:14:24.160 --> 00:14:26.150 align:start position:0%
that is a function of three scalar
inputs<00:14:24.639><c> a</c><00:14:24.800><c> b</c><00:14:25.040><c> and</c><00:14:25.120><c> c</c>

00:14:26.150 --> 00:14:26.160 align:start position:0%
inputs a b and c
 

00:14:26.160 --> 00:14:28.470 align:start position:0%
inputs a b and c
so<00:14:26.560><c> a</c><00:14:26.720><c> b</c><00:14:26.880><c> and</c><00:14:26.959><c> c</c><00:14:27.199><c> are</c><00:14:27.279><c> some</c><00:14:27.440><c> specific</c><00:14:27.839><c> values</c>

00:14:28.470 --> 00:14:28.480 align:start position:0%
so a b and c are some specific values
 

00:14:28.480 --> 00:14:30.629 align:start position:0%
so a b and c are some specific values
three<00:14:28.720><c> inputs</c><00:14:29.120><c> into</c><00:14:29.360><c> our</c><00:14:29.600><c> expression</c><00:14:30.079><c> graph</c>

00:14:30.629 --> 00:14:30.639 align:start position:0%
three inputs into our expression graph
 

00:14:30.639 --> 00:14:32.790 align:start position:0%
three inputs into our expression graph
and<00:14:30.800><c> a</c><00:14:30.880><c> single</c><00:14:31.199><c> output</c><00:14:31.760><c> d</c>

00:14:32.790 --> 00:14:32.800 align:start position:0%
and a single output d
 

00:14:32.800 --> 00:14:36.310 align:start position:0%
and a single output d
and<00:14:33.120><c> so</c><00:14:33.519><c> if</c><00:14:33.600><c> we</c><00:14:33.760><c> just</c><00:14:33.920><c> print</c><00:14:34.240><c> d</c><00:14:34.639><c> we</c><00:14:34.800><c> get</c><00:14:35.120><c> four</c>

00:14:36.310 --> 00:14:36.320 align:start position:0%
and so if we just print d we get four
 

00:14:36.320 --> 00:14:38.150 align:start position:0%
and so if we just print d we get four
and<00:14:36.399><c> now</c><00:14:36.560><c> what</c><00:14:36.720><c> i</c><00:14:36.800><c> have</c><00:14:36.959><c> to</c><00:14:37.040><c> do</c><00:14:37.360><c> is</c><00:14:37.680><c> i'd</c><00:14:37.839><c> like</c><00:14:38.000><c> to</c>

00:14:38.150 --> 00:14:38.160 align:start position:0%
and now what i have to do is i'd like to
 

00:14:38.160 --> 00:14:40.230 align:start position:0%
and now what i have to do is i'd like to
again<00:14:38.399><c> look</c><00:14:38.639><c> at</c><00:14:38.720><c> the</c><00:14:38.800><c> derivatives</c><00:14:39.519><c> of</c><00:14:39.760><c> d</c><00:14:40.079><c> with</c>

00:14:40.230 --> 00:14:40.240 align:start position:0%
again look at the derivatives of d with
 

00:14:40.240 --> 00:14:42.470 align:start position:0%
again look at the derivatives of d with
respect<00:14:40.560><c> to</c><00:14:40.720><c> a</c><00:14:40.959><c> b</c><00:14:41.279><c> and</c><00:14:41.440><c> c</c>

00:14:42.470 --> 00:14:42.480 align:start position:0%
respect to a b and c
 

00:14:42.480 --> 00:14:44.870 align:start position:0%
respect to a b and c
and<00:14:42.800><c> uh</c><00:14:43.040><c> think</c><00:14:43.279><c> through</c><00:14:43.920><c> uh</c><00:14:44.399><c> again</c><00:14:44.639><c> just</c><00:14:44.800><c> the</c>

00:14:44.870 --> 00:14:44.880 align:start position:0%
and uh think through uh again just the
 

00:14:44.880 --> 00:14:46.230 align:start position:0%
and uh think through uh again just the
intuition<00:14:45.360><c> of</c><00:14:45.440><c> what</c><00:14:45.600><c> this</c><00:14:45.760><c> derivative</c><00:14:46.160><c> is</c>

00:14:46.230 --> 00:14:46.240 align:start position:0%
intuition of what this derivative is
 

00:14:46.240 --> 00:14:47.509 align:start position:0%
intuition of what this derivative is
telling<00:14:46.560><c> us</c>

00:14:47.509 --> 00:14:47.519 align:start position:0%
telling us
 

00:14:47.519 --> 00:14:49.829 align:start position:0%
telling us
so<00:14:47.920><c> in</c><00:14:48.079><c> order</c><00:14:48.240><c> to</c><00:14:48.720><c> evaluate</c><00:14:49.199><c> this</c><00:14:49.279><c> derivative</c>

00:14:49.829 --> 00:14:49.839 align:start position:0%
so in order to evaluate this derivative
 

00:14:49.839 --> 00:14:52.069 align:start position:0%
so in order to evaluate this derivative
we're<00:14:50.079><c> going</c><00:14:50.320><c> to</c><00:14:50.800><c> get</c><00:14:50.959><c> a</c><00:14:51.040><c> bit</c><00:14:51.199><c> hacky</c><00:14:51.519><c> here</c>

00:14:52.069 --> 00:14:52.079 align:start position:0%
we're going to get a bit hacky here
 

00:14:52.079 --> 00:14:53.910 align:start position:0%
we're going to get a bit hacky here
we're<00:14:52.240><c> going</c><00:14:52.399><c> to</c><00:14:52.560><c> again</c><00:14:52.800><c> have</c><00:14:52.959><c> a</c><00:14:53.040><c> very</c><00:14:53.279><c> small</c>

00:14:53.910 --> 00:14:53.920 align:start position:0%
we're going to again have a very small
 

00:14:53.920 --> 00:14:55.350 align:start position:0%
we're going to again have a very small
value<00:14:54.160><c> of</c><00:14:54.320><c> h</c>

00:14:55.350 --> 00:14:55.360 align:start position:0%
value of h
 

00:14:55.360 --> 00:14:57.350 align:start position:0%
value of h
and<00:14:55.519><c> then</c><00:14:55.760><c> we're</c><00:14:55.920><c> going</c><00:14:56.000><c> to</c><00:14:56.240><c> fix</c><00:14:56.720><c> the</c><00:14:56.959><c> inputs</c>

00:14:57.350 --> 00:14:57.360 align:start position:0%
and then we're going to fix the inputs
 

00:14:57.360 --> 00:14:58.550 align:start position:0%
and then we're going to fix the inputs
at<00:14:57.519><c> some</c>

00:14:58.550 --> 00:14:58.560 align:start position:0%
at some
 

00:14:58.560 --> 00:15:00.310 align:start position:0%
at some
values<00:14:58.880><c> that</c><00:14:58.959><c> we're</c><00:14:59.120><c> interested</c><00:14:59.600><c> in</c>

00:15:00.310 --> 00:15:00.320 align:start position:0%
values that we're interested in
 

00:15:00.320 --> 00:15:02.949 align:start position:0%
values that we're interested in
so<00:15:00.480><c> these</c><00:15:00.720><c> are</c><00:15:00.880><c> the</c><00:15:01.360><c> this</c><00:15:01.519><c> is</c><00:15:01.600><c> the</c><00:15:01.760><c> point</c><00:15:02.160><c> abc</c>

00:15:02.949 --> 00:15:02.959 align:start position:0%
so these are the this is the point abc
 

00:15:02.959 --> 00:15:04.230 align:start position:0%
so these are the this is the point abc
at<00:15:03.120><c> which</c><00:15:03.279><c> we're</c><00:15:03.440><c> going</c><00:15:03.600><c> to</c><00:15:03.680><c> be</c><00:15:03.760><c> evaluating</c>

00:15:04.230 --> 00:15:04.240 align:start position:0%
at which we're going to be evaluating
 

00:15:04.240 --> 00:15:05.430 align:start position:0%
at which we're going to be evaluating
the<00:15:04.639><c> the</c>

00:15:05.430 --> 00:15:05.440 align:start position:0%
the the
 

00:15:05.440 --> 00:15:07.750 align:start position:0%
the the
derivative<00:15:05.920><c> of</c><00:15:06.079><c> d</c><00:15:06.560><c> with</c><00:15:06.720><c> respect</c><00:15:07.040><c> to</c><00:15:07.279><c> all</c><00:15:07.440><c> a</c><00:15:07.600><c> b</c>

00:15:07.750 --> 00:15:07.760 align:start position:0%
derivative of d with respect to all a b
 

00:15:07.760 --> 00:15:09.750 align:start position:0%
derivative of d with respect to all a b
and<00:15:07.839><c> c</c><00:15:08.240><c> at</c><00:15:08.320><c> that</c><00:15:08.560><c> point</c>

00:15:09.750 --> 00:15:09.760 align:start position:0%
and c at that point
 

00:15:09.760 --> 00:15:11.350 align:start position:0%
and c at that point
so<00:15:09.920><c> there</c><00:15:10.000><c> are</c><00:15:10.160><c> the</c><00:15:10.240><c> inputs</c><00:15:10.720><c> and</c><00:15:10.800><c> now</c><00:15:10.959><c> we</c><00:15:11.120><c> have</c>

00:15:11.350 --> 00:15:11.360 align:start position:0%
so there are the inputs and now we have
 

00:15:11.360 --> 00:15:13.750 align:start position:0%
so there are the inputs and now we have
d1<00:15:12.079><c> is</c><00:15:12.320><c> that</c><00:15:12.560><c> expression</c>

00:15:13.750 --> 00:15:13.760 align:start position:0%
d1 is that expression
 

00:15:13.760 --> 00:15:15.030 align:start position:0%
d1 is that expression
and<00:15:13.839><c> then</c><00:15:14.000><c> we're</c><00:15:14.079><c> going</c><00:15:14.240><c> to</c><00:15:14.399><c> for</c><00:15:14.560><c> example</c><00:15:14.800><c> look</c>

00:15:15.030 --> 00:15:15.040 align:start position:0%
and then we're going to for example look
 

00:15:15.040 --> 00:15:17.110 align:start position:0%
and then we're going to for example look
at<00:15:15.120><c> the</c><00:15:15.199><c> derivative</c><00:15:15.600><c> of</c><00:15:15.680><c> d</c><00:15:15.839><c> with</c><00:15:16.000><c> respect</c><00:15:16.320><c> to</c><00:15:16.560><c> a</c>

00:15:17.110 --> 00:15:17.120 align:start position:0%
at the derivative of d with respect to a
 

00:15:17.120 --> 00:15:19.910 align:start position:0%
at the derivative of d with respect to a
so<00:15:17.279><c> we'll</c><00:15:17.440><c> take</c><00:15:17.680><c> a</c><00:15:18.160><c> and</c><00:15:18.240><c> we'll</c><00:15:18.480><c> bump</c><00:15:18.720><c> it</c><00:15:18.880><c> by</c><00:15:19.199><c> h</c>

00:15:19.910 --> 00:15:19.920 align:start position:0%
so we'll take a and we'll bump it by h
 

00:15:19.920 --> 00:15:21.990 align:start position:0%
so we'll take a and we'll bump it by h
and<00:15:20.079><c> then</c><00:15:20.240><c> we'll</c><00:15:20.399><c> get</c><00:15:20.639><c> d2</c><00:15:21.279><c> to</c><00:15:21.360><c> be</c><00:15:21.519><c> the</c><00:15:21.680><c> exact</c>

00:15:21.990 --> 00:15:22.000 align:start position:0%
and then we'll get d2 to be the exact
 

00:15:22.000 --> 00:15:23.829 align:start position:0%
and then we'll get d2 to be the exact
same<00:15:22.160><c> function</c>

00:15:23.829 --> 00:15:23.839 align:start position:0%
same function
 

00:15:23.839 --> 00:15:26.790 align:start position:0%
same function
and<00:15:24.000><c> now</c><00:15:24.160><c> we're</c><00:15:24.399><c> going</c><00:15:24.560><c> to</c><00:15:24.720><c> print</c><00:15:25.440><c> um</c>

00:15:26.790 --> 00:15:26.800 align:start position:0%
and now we're going to print um
 

00:15:26.800 --> 00:15:28.710 align:start position:0%
and now we're going to print um
you<00:15:26.959><c> know</c><00:15:27.600><c> f1</c>

00:15:28.710 --> 00:15:28.720 align:start position:0%
you know f1
 

00:15:28.720 --> 00:15:31.110 align:start position:0%
you know f1
d1<00:15:29.279><c> is</c><00:15:29.600><c> d1</c>

00:15:31.110 --> 00:15:31.120 align:start position:0%
d1 is d1
 

00:15:31.120 --> 00:15:32.870 align:start position:0%
d1 is d1
d2<00:15:31.680><c> is</c><00:15:31.839><c> d2</c>

00:15:32.870 --> 00:15:32.880 align:start position:0%
d2 is d2
 

00:15:32.880 --> 00:15:35.189 align:start position:0%
d2 is d2
and<00:15:33.120><c> print</c><00:15:33.600><c> slope</c>

00:15:35.189 --> 00:15:35.199 align:start position:0%
and print slope
 

00:15:35.199 --> 00:15:37.670 align:start position:0%
and print slope
so<00:15:35.360><c> the</c><00:15:35.519><c> derivative</c><00:15:36.240><c> or</c><00:15:36.399><c> slope</c>

00:15:37.670 --> 00:15:37.680 align:start position:0%
so the derivative or slope
 

00:15:37.680 --> 00:15:39.670 align:start position:0%
so the derivative or slope
here<00:15:38.000><c> will</c><00:15:38.240><c> be</c><00:15:38.720><c> um</c>

00:15:39.670 --> 00:15:39.680 align:start position:0%
here will be um
 

00:15:39.680 --> 00:15:41.189 align:start position:0%
here will be um
of<00:15:39.759><c> course</c>

00:15:41.189 --> 00:15:41.199 align:start position:0%
of course
 

00:15:41.199 --> 00:15:42.069 align:start position:0%
of course
d2

00:15:42.069 --> 00:15:42.079 align:start position:0%
d2
 

00:15:42.079 --> 00:15:44.389 align:start position:0%
d2
minus<00:15:42.320><c> d1</c><00:15:42.800><c> divide</c><00:15:43.279><c> h</c>

00:15:44.389 --> 00:15:44.399 align:start position:0%
minus d1 divide h
 

00:15:44.399 --> 00:15:47.430 align:start position:0%
minus d1 divide h
so<00:15:44.720><c> d2</c><00:15:45.040><c> minus</c><00:15:45.279><c> d1</c><00:15:45.680><c> is</c><00:15:45.839><c> how</c><00:15:46.320><c> much</c><00:15:46.720><c> the</c><00:15:46.880><c> function</c>

00:15:47.430 --> 00:15:47.440 align:start position:0%
so d2 minus d1 is how much the function
 

00:15:47.440 --> 00:15:48.710 align:start position:0%
so d2 minus d1 is how much the function
increased

00:15:48.710 --> 00:15:48.720 align:start position:0%
increased
 

00:15:48.720 --> 00:15:50.710 align:start position:0%
increased
uh<00:15:49.040><c> when</c><00:15:49.279><c> we</c><00:15:49.519><c> bumped</c>

00:15:50.710 --> 00:15:50.720 align:start position:0%
uh when we bumped
 

00:15:50.720 --> 00:15:51.910 align:start position:0%
uh when we bumped
the<00:15:51.040><c> uh</c>

00:15:51.910 --> 00:15:51.920 align:start position:0%
the uh
 

00:15:51.920 --> 00:15:53.430 align:start position:0%
the uh
the<00:15:52.079><c> specific</c><00:15:52.560><c> input</c><00:15:52.800><c> that</c><00:15:52.959><c> we're</c><00:15:53.120><c> interested</c>

00:15:53.430 --> 00:15:53.440 align:start position:0%
the specific input that we're interested
 

00:15:53.440 --> 00:15:55.829 align:start position:0%
the specific input that we're interested
in<00:15:54.160><c> by</c><00:15:54.399><c> a</c><00:15:54.480><c> tiny</c><00:15:54.800><c> amount</c>

00:15:55.829 --> 00:15:55.839 align:start position:0%
in by a tiny amount
 

00:15:55.839 --> 00:15:56.710 align:start position:0%
in by a tiny amount
and

00:15:56.710 --> 00:15:56.720 align:start position:0%
and
 

00:15:56.720 --> 00:15:59.189 align:start position:0%
and
this<00:15:56.959><c> is</c><00:15:57.040><c> then</c><00:15:57.279><c> normalized</c><00:15:57.839><c> by</c><00:15:58.480><c> h</c>

00:15:59.189 --> 00:15:59.199 align:start position:0%
this is then normalized by h
 

00:15:59.199 --> 00:16:02.790 align:start position:0%
this is then normalized by h
to<00:15:59.360><c> get</c><00:15:59.519><c> the</c><00:15:59.680><c> slope</c>

00:16:02.790 --> 00:16:02.800 align:start position:0%
 
 

00:16:02.800 --> 00:16:03.590 align:start position:0%
 
so

00:16:03.590 --> 00:16:03.600 align:start position:0%
so
 

00:16:03.600 --> 00:16:05.110 align:start position:0%
so
um

00:16:05.110 --> 00:16:05.120 align:start position:0%
um
 

00:16:05.120 --> 00:16:06.310 align:start position:0%
um
yeah

00:16:06.310 --> 00:16:06.320 align:start position:0%
yeah
 

00:16:06.320 --> 00:16:08.870 align:start position:0%
yeah
so<00:16:06.480><c> this</c><00:16:07.199><c> so</c><00:16:07.360><c> if</c><00:16:07.519><c> i</c><00:16:07.600><c> just</c><00:16:07.759><c> run</c><00:16:08.000><c> this</c><00:16:08.560><c> we're</c>

00:16:08.870 --> 00:16:08.880 align:start position:0%
so this so if i just run this we're
 

00:16:08.880 --> 00:16:10.389 align:start position:0%
so this so if i just run this we're
going<00:16:09.040><c> to</c><00:16:09.279><c> print</c>

00:16:10.389 --> 00:16:10.399 align:start position:0%
going to print
 

00:16:10.399 --> 00:16:12.230 align:start position:0%
going to print
d1

00:16:12.230 --> 00:16:12.240 align:start position:0%
d1
 

00:16:12.240 --> 00:16:15.430 align:start position:0%
d1
which<00:16:12.880><c> we</c><00:16:13.120><c> know</c><00:16:13.600><c> is</c><00:16:14.000><c> four</c>

00:16:15.430 --> 00:16:15.440 align:start position:0%
which we know is four
 

00:16:15.440 --> 00:16:18.470 align:start position:0%
which we know is four
now<00:16:15.759><c> d2</c><00:16:16.480><c> will</c><00:16:16.639><c> be</c><00:16:16.880><c> bumped</c><00:16:17.519><c> a</c><00:16:17.759><c> will</c><00:16:17.920><c> be</c><00:16:18.079><c> bumped</c>

00:16:18.470 --> 00:16:18.480 align:start position:0%
now d2 will be bumped a will be bumped
 

00:16:18.480 --> 00:16:20.310 align:start position:0%
now d2 will be bumped a will be bumped
by<00:16:18.959><c> h</c>

00:16:20.310 --> 00:16:20.320 align:start position:0%
by h
 

00:16:20.320 --> 00:16:22.470 align:start position:0%
by h
so<00:16:20.720><c> let's</c><00:16:20.959><c> just</c><00:16:21.199><c> think</c><00:16:21.440><c> through</c>

00:16:22.470 --> 00:16:22.480 align:start position:0%
so let's just think through
 

00:16:22.480 --> 00:16:26.150 align:start position:0%
so let's just think through
a<00:16:22.560><c> little</c><00:16:22.800><c> bit</c><00:16:23.440><c> uh</c><00:16:23.839><c> what</c><00:16:24.320><c> d2</c><00:16:24.800><c> will</c><00:16:25.040><c> be</c><00:16:25.440><c> uh</c>

00:16:26.150 --> 00:16:26.160 align:start position:0%
a little bit uh what d2 will be uh
 

00:16:26.160 --> 00:16:27.590 align:start position:0%
a little bit uh what d2 will be uh
printed<00:16:26.560><c> out</c><00:16:26.720><c> here</c>

00:16:27.590 --> 00:16:27.600 align:start position:0%
printed out here
 

00:16:27.600 --> 00:16:29.269 align:start position:0%
printed out here
in<00:16:27.759><c> particular</c>

00:16:29.269 --> 00:16:29.279 align:start position:0%
in particular
 

00:16:29.279 --> 00:16:31.110 align:start position:0%
in particular
d1<00:16:29.759><c> will</c><00:16:29.920><c> be</c><00:16:30.079><c> four</c>

00:16:31.110 --> 00:16:31.120 align:start position:0%
d1 will be four
 

00:16:31.120 --> 00:16:33.509 align:start position:0%
d1 will be four
will<00:16:31.360><c> d2</c><00:16:31.839><c> be</c><00:16:32.480><c> a</c><00:16:32.560><c> number</c><00:16:32.880><c> slightly</c><00:16:33.199><c> greater</c>

00:16:33.509 --> 00:16:33.519 align:start position:0%
will d2 be a number slightly greater
 

00:16:33.519 --> 00:16:35.670 align:start position:0%
will d2 be a number slightly greater
than<00:16:33.759><c> four</c><00:16:34.079><c> or</c><00:16:34.240><c> slightly</c><00:16:34.720><c> lower</c><00:16:35.040><c> than</c><00:16:35.279><c> four</c>

00:16:35.670 --> 00:16:35.680 align:start position:0%
than four or slightly lower than four
 

00:16:35.680 --> 00:16:37.590 align:start position:0%
than four or slightly lower than four
and<00:16:35.839><c> that's</c><00:16:36.000><c> going</c><00:16:36.160><c> to</c><00:16:36.240><c> tell</c><00:16:36.399><c> us</c><00:16:36.560><c> the</c><00:16:36.720><c> sl</c><00:16:37.040><c> the</c>

00:16:37.590 --> 00:16:37.600 align:start position:0%
and that's going to tell us the sl the
 

00:16:37.600 --> 00:16:40.150 align:start position:0%
and that's going to tell us the sl the
the<00:16:37.759><c> sign</c><00:16:38.320><c> of</c><00:16:38.480><c> the</c><00:16:38.639><c> derivative</c>

00:16:40.150 --> 00:16:40.160 align:start position:0%
the sign of the derivative
 

00:16:40.160 --> 00:16:42.550 align:start position:0%
the sign of the derivative
so

00:16:42.550 --> 00:16:42.560 align:start position:0%
 
 

00:16:42.560 --> 00:16:45.430 align:start position:0%
 
we're<00:16:42.800><c> bumping</c><00:16:43.199><c> a</c><00:16:43.440><c> by</c><00:16:43.759><c> h</c>

00:16:45.430 --> 00:16:45.440 align:start position:0%
we're bumping a by h
 

00:16:45.440 --> 00:16:48.550 align:start position:0%
we're bumping a by h
b<00:16:45.680><c> as</c><00:16:45.920><c> minus</c><00:16:46.240><c> three</c><00:16:46.720><c> c</c><00:16:46.959><c> is</c><00:16:47.279><c> ten</c>

00:16:48.550 --> 00:16:48.560 align:start position:0%
b as minus three c is ten
 

00:16:48.560 --> 00:16:49.910 align:start position:0%
b as minus three c is ten
so<00:16:48.800><c> you</c><00:16:48.959><c> can</c><00:16:49.120><c> just</c><00:16:49.279><c> intuitively</c><00:16:49.759><c> think</c>

00:16:49.910 --> 00:16:49.920 align:start position:0%
so you can just intuitively think
 

00:16:49.920 --> 00:16:51.110 align:start position:0%
so you can just intuitively think
through<00:16:50.160><c> this</c><00:16:50.320><c> derivative</c><00:16:50.720><c> and</c><00:16:50.800><c> what</c><00:16:50.959><c> it's</c>

00:16:51.110 --> 00:16:51.120 align:start position:0%
through this derivative and what it's
 

00:16:51.120 --> 00:16:54.790 align:start position:0%
through this derivative and what it's
doing<00:16:51.600><c> a</c><00:16:51.839><c> will</c><00:16:52.000><c> be</c><00:16:52.240><c> slightly</c><00:16:52.720><c> more</c><00:16:52.880><c> positive</c>

00:16:54.790 --> 00:16:54.800 align:start position:0%
doing a will be slightly more positive
 

00:16:54.800 --> 00:16:57.509 align:start position:0%
doing a will be slightly more positive
and<00:16:55.199><c> but</c><00:16:55.360><c> b</c><00:16:55.600><c> is</c><00:16:55.759><c> a</c><00:16:55.839><c> negative</c><00:16:56.240><c> number</c>

00:16:57.509 --> 00:16:57.519 align:start position:0%
and but b is a negative number
 

00:16:57.519 --> 00:17:00.389 align:start position:0%
and but b is a negative number
so<00:16:57.680><c> if</c><00:16:57.839><c> a</c><00:16:58.079><c> is</c><00:16:58.240><c> slightly</c><00:16:58.560><c> more</c><00:16:58.800><c> positive</c>

00:17:00.389 --> 00:17:00.399 align:start position:0%
so if a is slightly more positive
 

00:17:00.399 --> 00:17:03.189 align:start position:0%
so if a is slightly more positive
because<00:17:00.880><c> b</c><00:17:01.120><c> is</c><00:17:01.360><c> negative</c><00:17:01.839><c> three</c>

00:17:03.189 --> 00:17:03.199 align:start position:0%
because b is negative three
 

00:17:03.199 --> 00:17:06.069 align:start position:0%
because b is negative three
we're<00:17:03.440><c> actually</c><00:17:03.680><c> going</c><00:17:03.839><c> to</c><00:17:03.920><c> be</c><00:17:04.400><c> adding</c><00:17:05.199><c> less</c>

00:17:06.069 --> 00:17:06.079 align:start position:0%
we're actually going to be adding less
 

00:17:06.079 --> 00:17:08.150 align:start position:0%
we're actually going to be adding less
to<00:17:06.240><c> d</c>

00:17:08.150 --> 00:17:08.160 align:start position:0%
to d
 

00:17:08.160 --> 00:17:10.630 align:start position:0%
to d
so<00:17:08.319><c> you'd</c><00:17:08.559><c> actually</c><00:17:08.880><c> expect</c><00:17:09.520><c> that</c><00:17:10.079><c> the</c><00:17:10.319><c> value</c>

00:17:10.630 --> 00:17:10.640 align:start position:0%
so you'd actually expect that the value
 

00:17:10.640 --> 00:17:13.750 align:start position:0%
so you'd actually expect that the value
of<00:17:10.720><c> the</c><00:17:10.880><c> function</c><00:17:11.520><c> will</c><00:17:11.760><c> go</c><00:17:12.400><c> down</c>

00:17:13.750 --> 00:17:13.760 align:start position:0%
of the function will go down
 

00:17:13.760 --> 00:17:16.470 align:start position:0%
of the function will go down
so<00:17:14.000><c> let's</c><00:17:14.160><c> just</c><00:17:14.319><c> see</c><00:17:14.480><c> this</c>

00:17:16.470 --> 00:17:16.480 align:start position:0%
so let's just see this
 

00:17:16.480 --> 00:17:18.390 align:start position:0%
so let's just see this
yeah<00:17:16.799><c> and</c><00:17:16.959><c> so</c><00:17:17.199><c> we</c><00:17:17.360><c> went</c><00:17:17.520><c> from</c><00:17:17.679><c> 4</c>

00:17:18.390 --> 00:17:18.400 align:start position:0%
yeah and so we went from 4
 

00:17:18.400 --> 00:17:20.789 align:start position:0%
yeah and so we went from 4
to<00:17:18.640><c> 3.9996</c>

00:17:20.789 --> 00:17:20.799 align:start position:0%
to 3.9996
 

00:17:20.799 --> 00:17:22.150 align:start position:0%
to 3.9996
and<00:17:20.959><c> that</c><00:17:21.120><c> tells</c><00:17:21.360><c> you</c><00:17:21.520><c> that</c><00:17:21.600><c> the</c><00:17:21.760><c> slope</c><00:17:22.079><c> will</c>

00:17:22.150 --> 00:17:22.160 align:start position:0%
and that tells you that the slope will
 

00:17:22.160 --> 00:17:23.270 align:start position:0%
and that tells you that the slope will
be<00:17:22.319><c> negative</c>

00:17:23.270 --> 00:17:23.280 align:start position:0%
be negative
 

00:17:23.280 --> 00:17:24.470 align:start position:0%
be negative
and<00:17:23.360><c> then</c>

00:17:24.470 --> 00:17:24.480 align:start position:0%
and then
 

00:17:24.480 --> 00:17:26.390 align:start position:0%
and then
uh<00:17:24.880><c> will</c><00:17:25.039><c> be</c><00:17:25.120><c> a</c><00:17:25.199><c> negative</c><00:17:25.520><c> number</c>

00:17:26.390 --> 00:17:26.400 align:start position:0%
uh will be a negative number
 

00:17:26.400 --> 00:17:27.909 align:start position:0%
uh will be a negative number
because<00:17:26.640><c> we</c><00:17:26.799><c> went</c><00:17:27.039><c> down</c>

00:17:27.909 --> 00:17:27.919 align:start position:0%
because we went down
 

00:17:27.919 --> 00:17:29.029 align:start position:0%
because we went down
and<00:17:28.079><c> then</c>

00:17:29.029 --> 00:17:29.039 align:start position:0%
and then
 

00:17:29.039 --> 00:17:31.029 align:start position:0%
and then
the<00:17:29.120><c> exact</c><00:17:29.440><c> number</c><00:17:29.679><c> of</c><00:17:29.760><c> slope</c><00:17:30.160><c> will</c><00:17:30.320><c> be</c>

00:17:31.029 --> 00:17:31.039 align:start position:0%
the exact number of slope will be
 

00:17:31.039 --> 00:17:33.750 align:start position:0%
the exact number of slope will be
exact<00:17:31.360><c> amount</c><00:17:31.679><c> of</c><00:17:31.760><c> slope</c><00:17:32.080><c> is</c><00:17:32.160><c> negative</c><00:17:32.480><c> 3.</c>

00:17:33.750 --> 00:17:33.760 align:start position:0%
exact amount of slope is negative 3.
 

00:17:33.760 --> 00:17:35.110 align:start position:0%
exact amount of slope is negative 3.
and<00:17:33.919><c> you</c><00:17:34.000><c> can</c><00:17:34.080><c> also</c><00:17:34.240><c> convince</c><00:17:34.640><c> yourself</c><00:17:34.880><c> that</c>

00:17:35.110 --> 00:17:35.120 align:start position:0%
and you can also convince yourself that
 

00:17:35.120 --> 00:17:36.950 align:start position:0%
and you can also convince yourself that
negative<00:17:35.440><c> 3</c><00:17:35.679><c> is</c><00:17:35.760><c> the</c><00:17:35.840><c> right</c><00:17:36.080><c> answer</c>

00:17:36.950 --> 00:17:36.960 align:start position:0%
negative 3 is the right answer
 

00:17:36.960 --> 00:17:39.029 align:start position:0%
negative 3 is the right answer
mathematically<00:17:37.520><c> and</c><00:17:37.679><c> analytically</c><00:17:38.720><c> because</c>

00:17:39.029 --> 00:17:39.039 align:start position:0%
mathematically and analytically because
 

00:17:39.039 --> 00:17:41.590 align:start position:0%
mathematically and analytically because
if<00:17:39.200><c> you</c><00:17:39.280><c> have</c><00:17:39.440><c> a</c><00:17:39.520><c> times</c><00:17:39.760><c> b</c><00:17:39.919><c> plus</c><00:17:40.160><c> c</c><00:17:40.799><c> and</c><00:17:40.960><c> you</c><00:17:41.120><c> are</c>

00:17:41.590 --> 00:17:41.600 align:start position:0%
if you have a times b plus c and you are
 

00:17:41.600 --> 00:17:43.830 align:start position:0%
if you have a times b plus c and you are
you<00:17:41.760><c> know</c><00:17:41.919><c> you</c><00:17:42.000><c> have</c><00:17:42.080><c> calculus</c><00:17:43.120><c> then</c>

00:17:43.830 --> 00:17:43.840 align:start position:0%
you know you have calculus then
 

00:17:43.840 --> 00:17:45.990 align:start position:0%
you know you have calculus then
differentiating<00:17:44.960><c> a</c><00:17:45.039><c> times</c><00:17:45.280><c> b</c><00:17:45.440><c> plus</c><00:17:45.679><c> c</c><00:17:45.840><c> with</c>

00:17:45.990 --> 00:17:46.000 align:start position:0%
differentiating a times b plus c with
 

00:17:46.000 --> 00:17:48.470 align:start position:0%
differentiating a times b plus c with
respect<00:17:46.320><c> to</c><00:17:46.480><c> a</c><00:17:46.720><c> gives</c><00:17:47.039><c> you</c><00:17:47.200><c> just</c><00:17:47.520><c> b</c>

00:17:48.470 --> 00:17:48.480 align:start position:0%
respect to a gives you just b
 

00:17:48.480 --> 00:17:50.789 align:start position:0%
respect to a gives you just b
and<00:17:48.720><c> indeed</c><00:17:49.120><c> the</c><00:17:49.280><c> value</c><00:17:49.600><c> of</c><00:17:49.760><c> b</c><00:17:50.000><c> is</c><00:17:50.160><c> negative</c><00:17:50.480><c> 3</c>

00:17:50.789 --> 00:17:50.799 align:start position:0%
and indeed the value of b is negative 3
 

00:17:50.799 --> 00:17:52.789 align:start position:0%
and indeed the value of b is negative 3
which<00:17:51.039><c> is</c><00:17:51.120><c> the</c><00:17:51.280><c> derivative</c><00:17:51.760><c> that</c><00:17:51.919><c> we</c><00:17:52.000><c> have</c><00:17:52.559><c> so</c>

00:17:52.789 --> 00:17:52.799 align:start position:0%
which is the derivative that we have so
 

00:17:52.799 --> 00:17:54.950 align:start position:0%
which is the derivative that we have so
you<00:17:52.960><c> can</c><00:17:53.039><c> tell</c><00:17:53.200><c> that</c><00:17:53.360><c> that's</c><00:17:53.520><c> correct</c>

00:17:54.950 --> 00:17:54.960 align:start position:0%
you can tell that that's correct
 

00:17:54.960 --> 00:17:57.750 align:start position:0%
you can tell that that's correct
so<00:17:55.120><c> now</c><00:17:55.280><c> if</c><00:17:55.440><c> we</c><00:17:55.600><c> do</c><00:17:55.760><c> this</c><00:17:56.000><c> with</c><00:17:56.240><c> b</c>

00:17:57.750 --> 00:17:57.760 align:start position:0%
so now if we do this with b
 

00:17:57.760 --> 00:17:59.830 align:start position:0%
so now if we do this with b
so<00:17:57.919><c> if</c><00:17:58.000><c> we</c><00:17:58.160><c> bump</c><00:17:58.480><c> b</c><00:17:58.640><c> by</c><00:17:58.880><c> a</c><00:17:58.880><c> little</c><00:17:59.039><c> bit</c><00:17:59.600><c> in</c><00:17:59.760><c> a</c>

00:17:59.830 --> 00:17:59.840 align:start position:0%
so if we bump b by a little bit in a
 

00:17:59.840 --> 00:18:02.230 align:start position:0%
so if we bump b by a little bit in a
positive<00:18:00.160><c> direction</c><00:18:01.039><c> we'd</c><00:18:01.200><c> get</c><00:18:01.520><c> different</c>

00:18:02.230 --> 00:18:02.240 align:start position:0%
positive direction we'd get different
 

00:18:02.240 --> 00:18:04.549 align:start position:0%
positive direction we'd get different
slopes<00:18:02.559><c> so</c><00:18:02.720><c> what</c><00:18:02.880><c> is</c><00:18:03.039><c> the</c><00:18:03.360><c> influence</c><00:18:03.760><c> of</c><00:18:03.919><c> b</c><00:18:04.400><c> on</c>

00:18:04.549 --> 00:18:04.559 align:start position:0%
slopes so what is the influence of b on
 

00:18:04.559 --> 00:18:06.310 align:start position:0%
slopes so what is the influence of b on
the<00:18:04.720><c> output</c><00:18:05.200><c> d</c>

00:18:06.310 --> 00:18:06.320 align:start position:0%
the output d
 

00:18:06.320 --> 00:18:08.230 align:start position:0%
the output d
so<00:18:06.480><c> if</c><00:18:06.640><c> we</c><00:18:06.720><c> bump</c><00:18:07.039><c> b</c><00:18:07.280><c> by</c><00:18:07.440><c> a</c><00:18:07.600><c> tiny</c><00:18:07.840><c> amount</c><00:18:08.080><c> in</c><00:18:08.160><c> a</c>

00:18:08.230 --> 00:18:08.240 align:start position:0%
so if we bump b by a tiny amount in a
 

00:18:08.240 --> 00:18:10.150 align:start position:0%
so if we bump b by a tiny amount in a
positive<00:18:08.559><c> direction</c><00:18:09.360><c> then</c><00:18:09.520><c> because</c><00:18:09.840><c> a</c><00:18:10.080><c> is</c>

00:18:10.150 --> 00:18:10.160 align:start position:0%
positive direction then because a is
 

00:18:10.160 --> 00:18:11.590 align:start position:0%
positive direction then because a is
positive

00:18:11.590 --> 00:18:11.600 align:start position:0%
positive
 

00:18:11.600 --> 00:18:13.750 align:start position:0%
positive
we'll<00:18:11.840><c> be</c><00:18:12.000><c> adding</c><00:18:12.320><c> more</c><00:18:12.720><c> to</c><00:18:12.880><c> d</c>

00:18:13.750 --> 00:18:13.760 align:start position:0%
we'll be adding more to d
 

00:18:13.760 --> 00:18:14.710 align:start position:0%
we'll be adding more to d
right

00:18:14.710 --> 00:18:14.720 align:start position:0%
right
 

00:18:14.720 --> 00:18:17.029 align:start position:0%
right
so<00:18:15.280><c> um</c><00:18:15.840><c> and</c><00:18:15.919><c> now</c><00:18:16.080><c> what</c><00:18:16.240><c> is</c><00:18:16.400><c> the</c><00:18:16.640><c> what</c><00:18:16.799><c> is</c><00:18:16.880><c> the</c>

00:18:17.029 --> 00:18:17.039 align:start position:0%
so um and now what is the what is the
 

00:18:17.039 --> 00:18:18.789 align:start position:0%
so um and now what is the what is the
sensitivity<00:18:17.520><c> what</c><00:18:17.679><c> is</c><00:18:17.760><c> the</c><00:18:17.919><c> slope</c><00:18:18.240><c> of</c><00:18:18.320><c> that</c>

00:18:18.789 --> 00:18:18.799 align:start position:0%
sensitivity what is the slope of that
 

00:18:18.799 --> 00:18:19.830 align:start position:0%
sensitivity what is the slope of that
addition

00:18:19.830 --> 00:18:19.840 align:start position:0%
addition
 

00:18:19.840 --> 00:18:21.510 align:start position:0%
addition
and<00:18:20.080><c> it</c><00:18:20.160><c> might</c><00:18:20.320><c> not</c><00:18:20.480><c> surprise</c><00:18:20.880><c> you</c><00:18:21.039><c> that</c><00:18:21.200><c> this</c>

00:18:21.510 --> 00:18:21.520 align:start position:0%
and it might not surprise you that this
 

00:18:21.520 --> 00:18:22.950 align:start position:0%
and it might not surprise you that this
should<00:18:21.679><c> be</c>

00:18:22.950 --> 00:18:22.960 align:start position:0%
should be
 

00:18:22.960 --> 00:18:24.230 align:start position:0%
should be
2

00:18:24.230 --> 00:18:24.240 align:start position:0%
2
 

00:18:24.240 --> 00:18:27.669 align:start position:0%
2
and<00:18:24.480><c> y</c><00:18:24.720><c> is</c><00:18:24.880><c> a</c><00:18:24.960><c> 2</c><00:18:25.280><c> because</c><00:18:26.000><c> d</c><00:18:26.400><c> of</c><00:18:26.799><c> d</c>

00:18:27.669 --> 00:18:27.679 align:start position:0%
and y is a 2 because d of d
 

00:18:27.679 --> 00:18:30.150 align:start position:0%
and y is a 2 because d of d
by<00:18:27.919><c> db</c><00:18:28.559><c> differentiating</c><00:18:29.120><c> with</c><00:18:29.200><c> respect</c><00:18:29.440><c> to</c><00:18:29.520><c> b</c>

00:18:30.150 --> 00:18:30.160 align:start position:0%
by db differentiating with respect to b
 

00:18:30.160 --> 00:18:31.909 align:start position:0%
by db differentiating with respect to b
would<00:18:30.320><c> be</c><00:18:30.559><c> would</c><00:18:30.720><c> give</c><00:18:30.880><c> us</c><00:18:31.120><c> a</c>

00:18:31.909 --> 00:18:31.919 align:start position:0%
would be would give us a
 

00:18:31.919 --> 00:18:34.070 align:start position:0%
would be would give us a
and<00:18:32.080><c> the</c><00:18:32.160><c> value</c><00:18:32.400><c> of</c><00:18:32.559><c> a</c><00:18:32.720><c> is</c><00:18:32.880><c> two</c><00:18:33.440><c> so</c><00:18:33.600><c> that's</c><00:18:33.840><c> also</c>

00:18:34.070 --> 00:18:34.080 align:start position:0%
and the value of a is two so that's also
 

00:18:34.080 --> 00:18:35.430 align:start position:0%
and the value of a is two so that's also
working<00:18:34.400><c> well</c>

00:18:35.430 --> 00:18:35.440 align:start position:0%
working well
 

00:18:35.440 --> 00:18:37.430 align:start position:0%
working well
and<00:18:35.520><c> then</c><00:18:35.760><c> if</c><00:18:35.919><c> c</c><00:18:36.080><c> gets</c><00:18:36.320><c> bumped</c><00:18:36.640><c> a</c><00:18:36.799><c> tiny</c><00:18:37.039><c> amount</c>

00:18:37.430 --> 00:18:37.440 align:start position:0%
and then if c gets bumped a tiny amount
 

00:18:37.440 --> 00:18:38.549 align:start position:0%
and then if c gets bumped a tiny amount
in<00:18:37.679><c> h</c>

00:18:38.549 --> 00:18:38.559 align:start position:0%
in h
 

00:18:38.559 --> 00:18:39.909 align:start position:0%
in h
by<00:18:38.799><c> h</c>

00:18:39.909 --> 00:18:39.919 align:start position:0%
by h
 

00:18:39.919 --> 00:18:41.830 align:start position:0%
by h
then<00:18:40.160><c> of</c><00:18:40.240><c> course</c><00:18:40.480><c> a</c><00:18:40.640><c> times</c><00:18:40.880><c> b</c><00:18:41.039><c> is</c><00:18:41.120><c> unaffected</c>

00:18:41.830 --> 00:18:41.840 align:start position:0%
then of course a times b is unaffected
 

00:18:41.840 --> 00:18:44.230 align:start position:0%
then of course a times b is unaffected
and<00:18:42.000><c> now</c><00:18:42.240><c> c</c><00:18:42.480><c> becomes</c><00:18:42.880><c> slightly</c><00:18:43.360><c> bit</c><00:18:43.520><c> higher</c>

00:18:44.230 --> 00:18:44.240 align:start position:0%
and now c becomes slightly bit higher
 

00:18:44.240 --> 00:18:45.909 align:start position:0%
and now c becomes slightly bit higher
what<00:18:44.400><c> does</c><00:18:44.559><c> that</c><00:18:44.720><c> do</c><00:18:44.880><c> to</c><00:18:45.039><c> the</c><00:18:45.120><c> function</c><00:18:45.760><c> it</c>

00:18:45.909 --> 00:18:45.919 align:start position:0%
what does that do to the function it
 

00:18:45.919 --> 00:18:47.270 align:start position:0%
what does that do to the function it
makes<00:18:46.160><c> it</c><00:18:46.320><c> slightly</c><00:18:46.640><c> bit</c><00:18:46.799><c> higher</c><00:18:47.120><c> because</c>

00:18:47.270 --> 00:18:47.280 align:start position:0%
makes it slightly bit higher because
 

00:18:47.280 --> 00:18:48.789 align:start position:0%
makes it slightly bit higher because
we're<00:18:47.440><c> simply</c><00:18:47.760><c> adding</c><00:18:48.080><c> c</c>

00:18:48.789 --> 00:18:48.799 align:start position:0%
we're simply adding c
 

00:18:48.799 --> 00:18:50.470 align:start position:0%
we're simply adding c
and<00:18:49.120><c> it</c><00:18:49.280><c> makes</c><00:18:49.440><c> it</c><00:18:49.520><c> slightly</c><00:18:49.840><c> bit</c><00:18:50.000><c> higher</c><00:18:50.320><c> by</c>

00:18:50.470 --> 00:18:50.480 align:start position:0%
and it makes it slightly bit higher by
 

00:18:50.480 --> 00:18:53.110 align:start position:0%
and it makes it slightly bit higher by
the<00:18:50.640><c> exact</c><00:18:50.960><c> same</c><00:18:51.200><c> amount</c><00:18:51.600><c> that</c><00:18:51.760><c> we</c><00:18:52.000><c> added</c><00:18:52.400><c> to</c><00:18:52.559><c> c</c>

00:18:53.110 --> 00:18:53.120 align:start position:0%
the exact same amount that we added to c
 

00:18:53.120 --> 00:18:55.190 align:start position:0%
the exact same amount that we added to c
and<00:18:53.280><c> so</c><00:18:53.440><c> that</c><00:18:53.600><c> tells</c><00:18:53.840><c> you</c><00:18:54.000><c> that</c><00:18:54.160><c> the</c><00:18:54.240><c> slope</c><00:18:54.720><c> is</c>

00:18:55.190 --> 00:18:55.200 align:start position:0%
and so that tells you that the slope is
 

00:18:55.200 --> 00:18:56.549 align:start position:0%
and so that tells you that the slope is
one

00:18:56.549 --> 00:18:56.559 align:start position:0%
one
 

00:18:56.559 --> 00:18:59.190 align:start position:0%
one
that<00:18:56.799><c> will</c><00:18:56.880><c> be</c><00:18:57.039><c> the</c>

00:18:59.190 --> 00:18:59.200 align:start position:0%
that will be the
 

00:18:59.200 --> 00:19:01.029 align:start position:0%
that will be the
the<00:18:59.360><c> rate</c><00:18:59.600><c> at</c><00:18:59.760><c> which</c>

00:19:01.029 --> 00:19:01.039 align:start position:0%
the rate at which
 

00:19:01.039 --> 00:19:04.150 align:start position:0%
the rate at which
d<00:19:01.280><c> will</c><00:19:01.520><c> increase</c><00:19:02.320><c> as</c><00:19:02.480><c> we</c><00:19:02.720><c> scale</c>

00:19:04.150 --> 00:19:04.160 align:start position:0%
d will increase as we scale
 

00:19:04.160 --> 00:19:05.110 align:start position:0%
d will increase as we scale
c

00:19:05.110 --> 00:19:05.120 align:start position:0%
c
 

00:19:05.120 --> 00:19:06.789 align:start position:0%
c
okay<00:19:05.360><c> so</c><00:19:05.520><c> we</c><00:19:05.600><c> now</c><00:19:05.760><c> have</c><00:19:05.919><c> some</c><00:19:06.080><c> intuitive</c><00:19:06.480><c> sense</c>

00:19:06.789 --> 00:19:06.799 align:start position:0%
okay so we now have some intuitive sense
 

00:19:06.799 --> 00:19:08.230 align:start position:0%
okay so we now have some intuitive sense
of<00:19:06.880><c> what</c><00:19:07.039><c> this</c><00:19:07.200><c> derivative</c><00:19:07.679><c> is</c><00:19:07.760><c> telling</c><00:19:08.000><c> you</c>

00:19:08.230 --> 00:19:08.240 align:start position:0%
of what this derivative is telling you
 

00:19:08.240 --> 00:19:09.990 align:start position:0%
of what this derivative is telling you
about<00:19:08.480><c> the</c><00:19:08.640><c> function</c><00:19:09.360><c> and</c><00:19:09.440><c> we'd</c><00:19:09.600><c> like</c><00:19:09.760><c> to</c><00:19:09.840><c> move</c>

00:19:09.990 --> 00:19:10.000 align:start position:0%
about the function and we'd like to move
 

00:19:10.000 --> 00:19:11.590 align:start position:0%
about the function and we'd like to move
to<00:19:10.080><c> neural</c><00:19:10.320><c> networks</c><00:19:10.960><c> now</c><00:19:11.200><c> as</c><00:19:11.280><c> i</c><00:19:11.360><c> mentioned</c>

00:19:11.590 --> 00:19:11.600 align:start position:0%
to neural networks now as i mentioned
 

00:19:11.600 --> 00:19:13.110 align:start position:0%
to neural networks now as i mentioned
neural<00:19:11.840><c> networks</c><00:19:12.080><c> will</c><00:19:12.240><c> be</c><00:19:12.400><c> pretty</c><00:19:12.640><c> massive</c>

00:19:13.110 --> 00:19:13.120 align:start position:0%
neural networks will be pretty massive
 

00:19:13.120 --> 00:19:15.190 align:start position:0%
neural networks will be pretty massive
expressions<00:19:13.679><c> mathematical</c><00:19:14.240><c> expressions</c><00:19:15.039><c> so</c>

00:19:15.190 --> 00:19:15.200 align:start position:0%
expressions mathematical expressions so
 

00:19:15.200 --> 00:19:16.470 align:start position:0%
expressions mathematical expressions so
we<00:19:15.360><c> need</c><00:19:15.520><c> some</c><00:19:15.679><c> data</c><00:19:15.919><c> structures</c><00:19:16.320><c> that</c>

00:19:16.470 --> 00:19:16.480 align:start position:0%
we need some data structures that
 

00:19:16.480 --> 00:19:17.909 align:start position:0%
we need some data structures that
maintain<00:19:16.880><c> these</c><00:19:17.120><c> expressions</c><00:19:17.679><c> and</c><00:19:17.760><c> that's</c>

00:19:17.909 --> 00:19:17.919 align:start position:0%
maintain these expressions and that's
 

00:19:17.919 --> 00:19:19.350 align:start position:0%
maintain these expressions and that's
what<00:19:18.080><c> we're</c><00:19:18.160><c> going</c><00:19:18.320><c> to</c><00:19:18.400><c> start</c><00:19:18.640><c> to</c><00:19:18.720><c> build</c><00:19:18.960><c> out</c>

00:19:19.350 --> 00:19:19.360 align:start position:0%
what we're going to start to build out
 

00:19:19.360 --> 00:19:20.470 align:start position:0%
what we're going to start to build out
now

00:19:20.470 --> 00:19:20.480 align:start position:0%
now
 

00:19:20.480 --> 00:19:22.230 align:start position:0%
now
so<00:19:20.880><c> we're</c><00:19:21.120><c> going</c><00:19:21.280><c> to</c>

00:19:22.230 --> 00:19:22.240 align:start position:0%
so we're going to
 

00:19:22.240 --> 00:19:24.070 align:start position:0%
so we're going to
build<00:19:22.480><c> out</c><00:19:22.559><c> this</c><00:19:22.880><c> value</c><00:19:23.280><c> object</c><00:19:23.760><c> that</c><00:19:24.000><c> i</c>

00:19:24.070 --> 00:19:24.080 align:start position:0%
build out this value object that i
 

00:19:24.080 --> 00:19:26.230 align:start position:0%
build out this value object that i
showed<00:19:24.320><c> you</c><00:19:24.799><c> in</c><00:19:25.039><c> the</c><00:19:25.600><c> readme</c><00:19:25.919><c> page</c><00:19:26.160><c> of</c>

00:19:26.230 --> 00:19:26.240 align:start position:0%
showed you in the readme page of
 

00:19:26.240 --> 00:19:27.510 align:start position:0%
showed you in the readme page of
micrograd

00:19:27.510 --> 00:19:27.520 align:start position:0%
micrograd
 

00:19:27.520 --> 00:19:30.710 align:start position:0%
micrograd
so<00:19:27.760><c> let</c><00:19:27.919><c> me</c><00:19:28.240><c> copy</c><00:19:28.559><c> paste</c><00:19:29.360><c> a</c><00:19:29.520><c> skeleton</c><00:19:30.400><c> of</c><00:19:30.559><c> the</c>

00:19:30.710 --> 00:19:30.720 align:start position:0%
so let me copy paste a skeleton of the
 

00:19:30.720 --> 00:19:33.510 align:start position:0%
so let me copy paste a skeleton of the
first<00:19:31.280><c> very</c><00:19:31.520><c> simple</c><00:19:31.760><c> value</c><00:19:32.080><c> object</c>

00:19:33.510 --> 00:19:33.520 align:start position:0%
first very simple value object
 

00:19:33.520 --> 00:19:36.390 align:start position:0%
first very simple value object
so<00:19:33.760><c> class</c><00:19:34.080><c> value</c><00:19:34.880><c> takes</c><00:19:35.120><c> a</c><00:19:35.200><c> single</c>

00:19:36.390 --> 00:19:36.400 align:start position:0%
so class value takes a single
 

00:19:36.400 --> 00:19:38.310 align:start position:0%
so class value takes a single
scalar<00:19:36.880><c> value</c><00:19:37.120><c> that</c><00:19:37.280><c> it</c><00:19:37.440><c> wraps</c><00:19:37.919><c> and</c><00:19:38.000><c> keeps</c>

00:19:38.310 --> 00:19:38.320 align:start position:0%
scalar value that it wraps and keeps
 

00:19:38.320 --> 00:19:39.270 align:start position:0%
scalar value that it wraps and keeps
track<00:19:38.559><c> of</c>

00:19:39.270 --> 00:19:39.280 align:start position:0%
track of
 

00:19:39.280 --> 00:19:41.430 align:start position:0%
track of
and<00:19:39.840><c> that's</c><00:19:40.160><c> it</c><00:19:40.559><c> so</c>

00:19:41.430 --> 00:19:41.440 align:start position:0%
and that's it so
 

00:19:41.440 --> 00:19:43.590 align:start position:0%
and that's it so
we<00:19:41.600><c> can</c><00:19:41.760><c> for</c><00:19:41.919><c> example</c><00:19:42.320><c> do</c><00:19:42.559><c> value</c><00:19:42.960><c> of</c><00:19:43.039><c> 2.0</c><00:19:43.520><c> and</c>

00:19:43.590 --> 00:19:43.600 align:start position:0%
we can for example do value of 2.0 and
 

00:19:43.600 --> 00:19:45.430 align:start position:0%
we can for example do value of 2.0 and
then<00:19:43.760><c> we</c><00:19:43.840><c> can</c>

00:19:45.430 --> 00:19:45.440 align:start position:0%
then we can
 

00:19:45.440 --> 00:19:48.549 align:start position:0%
then we can
get<00:19:46.080><c> we</c><00:19:46.240><c> can</c><00:19:46.320><c> look</c><00:19:46.480><c> at</c><00:19:46.720><c> its</c><00:19:46.960><c> content</c><00:19:47.840><c> and</c>

00:19:48.549 --> 00:19:48.559 align:start position:0%
get we can look at its content and
 

00:19:48.559 --> 00:19:50.390 align:start position:0%
get we can look at its content and
python<00:19:48.960><c> will</c><00:19:49.200><c> internally</c>

00:19:50.390 --> 00:19:50.400 align:start position:0%
python will internally
 

00:19:50.400 --> 00:19:52.470 align:start position:0%
python will internally
use<00:19:50.640><c> the</c><00:19:50.799><c> wrapper</c><00:19:51.440><c> function</c>

00:19:52.470 --> 00:19:52.480 align:start position:0%
use the wrapper function
 

00:19:52.480 --> 00:19:54.310 align:start position:0%
use the wrapper function
to<00:19:52.960><c> uh</c><00:19:53.280><c> return</c>

00:19:54.310 --> 00:19:54.320 align:start position:0%
to uh return
 

00:19:54.320 --> 00:19:56.870 align:start position:0%
to uh return
uh<00:19:54.559><c> this</c><00:19:54.880><c> string</c><00:19:55.440><c> oops</c>

00:19:56.870 --> 00:19:56.880 align:start position:0%
uh this string oops
 

00:19:56.880 --> 00:19:58.630 align:start position:0%
uh this string oops
like<00:19:57.120><c> that</c>

00:19:58.630 --> 00:19:58.640 align:start position:0%
like that
 

00:19:58.640 --> 00:20:00.789 align:start position:0%
like that
so<00:19:58.799><c> this</c><00:19:59.039><c> is</c><00:19:59.120><c> a</c><00:19:59.280><c> value</c><00:19:59.679><c> object</c><00:20:00.000><c> with</c><00:20:00.240><c> data</c>

00:20:00.789 --> 00:20:00.799 align:start position:0%
so this is a value object with data
 

00:20:00.799 --> 00:20:03.190 align:start position:0%
so this is a value object with data
equals<00:20:01.200><c> two</c><00:20:01.520><c> that</c><00:20:01.679><c> we're</c><00:20:01.840><c> creating</c><00:20:02.159><c> here</c>

00:20:03.190 --> 00:20:03.200 align:start position:0%
equals two that we're creating here
 

00:20:03.200 --> 00:20:04.950 align:start position:0%
equals two that we're creating here
now<00:20:03.440><c> we'd</c><00:20:03.600><c> like</c><00:20:03.760><c> to</c><00:20:03.840><c> do</c><00:20:04.000><c> is</c><00:20:04.159><c> like</c><00:20:04.480><c> we'd</c><00:20:04.640><c> like</c><00:20:04.799><c> to</c>

00:20:04.950 --> 00:20:04.960 align:start position:0%
now we'd like to do is like we'd like to
 

00:20:04.960 --> 00:20:07.430 align:start position:0%
now we'd like to do is like we'd like to
be<00:20:05.120><c> able</c><00:20:05.280><c> to</c>

00:20:07.430 --> 00:20:07.440 align:start position:0%
be able to
 

00:20:07.440 --> 00:20:10.070 align:start position:0%
be able to
have<00:20:07.760><c> not</c><00:20:07.919><c> just</c><00:20:08.080><c> like</c><00:20:08.240><c> two</c><00:20:08.480><c> values</c>

00:20:10.070 --> 00:20:10.080 align:start position:0%
have not just like two values
 

00:20:10.080 --> 00:20:11.990 align:start position:0%
have not just like two values
but<00:20:10.240><c> we'd</c><00:20:10.400><c> like</c><00:20:10.559><c> to</c><00:20:10.640><c> do</c><00:20:10.880><c> a</c><00:20:11.039><c> bluffy</c><00:20:11.679><c> right</c><00:20:11.840><c> we'd</c>

00:20:11.990 --> 00:20:12.000 align:start position:0%
but we'd like to do a bluffy right we'd
 

00:20:12.000 --> 00:20:13.669 align:start position:0%
but we'd like to do a bluffy right we'd
like<00:20:12.159><c> to</c><00:20:12.320><c> add</c><00:20:12.559><c> them</c>

00:20:13.669 --> 00:20:13.679 align:start position:0%
like to add them
 

00:20:13.679 --> 00:20:15.430 align:start position:0%
like to add them
so<00:20:13.919><c> currently</c><00:20:14.640><c> you</c><00:20:14.799><c> would</c><00:20:14.880><c> get</c><00:20:15.039><c> an</c><00:20:15.200><c> error</c>

00:20:15.430 --> 00:20:15.440 align:start position:0%
so currently you would get an error
 

00:20:15.440 --> 00:20:17.750 align:start position:0%
so currently you would get an error
because<00:20:15.760><c> python</c><00:20:16.159><c> doesn't</c><00:20:16.400><c> know</c><00:20:16.559><c> how</c><00:20:16.720><c> to</c><00:20:16.960><c> add</c>

00:20:17.750 --> 00:20:17.760 align:start position:0%
because python doesn't know how to add
 

00:20:17.760 --> 00:20:21.430 align:start position:0%
because python doesn't know how to add
two<00:20:18.080><c> value</c><00:20:18.400><c> objects</c><00:20:19.120><c> so</c><00:20:19.280><c> we</c><00:20:19.440><c> have</c><00:20:19.520><c> to</c><00:20:19.600><c> tell</c><00:20:19.840><c> it</c>

00:20:21.430 --> 00:20:21.440 align:start position:0%
two value objects so we have to tell it
 

00:20:21.440 --> 00:20:22.470 align:start position:0%
two value objects so we have to tell it
so<00:20:21.679><c> here's</c>

00:20:22.470 --> 00:20:22.480 align:start position:0%
so here's
 

00:20:22.480 --> 00:20:26.310 align:start position:0%
so here's
addition

00:20:26.310 --> 00:20:26.320 align:start position:0%
 
 

00:20:26.320 --> 00:20:27.590 align:start position:0%
 
so<00:20:26.480><c> you</c><00:20:26.640><c> have</c><00:20:26.720><c> to</c><00:20:26.880><c> basically</c><00:20:27.200><c> use</c><00:20:27.360><c> these</c>

00:20:27.590 --> 00:20:27.600 align:start position:0%
so you have to basically use these
 

00:20:27.600 --> 00:20:29.510 align:start position:0%
so you have to basically use these
special<00:20:28.240><c> double</c><00:20:28.559><c> underscore</c><00:20:29.039><c> methods</c><00:20:29.440><c> in</c>

00:20:29.510 --> 00:20:29.520 align:start position:0%
special double underscore methods in
 

00:20:29.520 --> 00:20:31.830 align:start position:0%
special double underscore methods in
python<00:20:30.000><c> to</c><00:20:30.159><c> define</c><00:20:30.559><c> these</c><00:20:30.880><c> operators</c><00:20:31.600><c> for</c>

00:20:31.830 --> 00:20:31.840 align:start position:0%
python to define these operators for
 

00:20:31.840 --> 00:20:35.430 align:start position:0%
python to define these operators for
these<00:20:32.080><c> objects</c><00:20:32.960><c> so</c><00:20:33.280><c> if</c><00:20:33.440><c> we</c><00:20:33.679><c> call</c><00:20:34.320><c> um</c>

00:20:35.430 --> 00:20:35.440 align:start position:0%
these objects so if we call um
 

00:20:35.440 --> 00:20:39.110 align:start position:0%
these objects so if we call um
the<00:20:36.080><c> uh</c><00:20:36.799><c> if</c><00:20:36.880><c> we</c><00:20:37.039><c> use</c><00:20:37.280><c> this</c><00:20:37.840><c> plus</c><00:20:38.240><c> operator</c>

00:20:39.110 --> 00:20:39.120 align:start position:0%
the uh if we use this plus operator
 

00:20:39.120 --> 00:20:43.029 align:start position:0%
the uh if we use this plus operator
python<00:20:39.600><c> will</c><00:20:39.840><c> internally</c><00:20:40.480><c> call</c><00:20:41.039><c> a</c><00:20:41.280><c> dot</c><00:20:42.080><c> add</c><00:20:42.799><c> of</c>

00:20:43.029 --> 00:20:43.039 align:start position:0%
python will internally call a dot add of
 

00:20:43.039 --> 00:20:43.750 align:start position:0%
python will internally call a dot add of
b

00:20:43.750 --> 00:20:43.760 align:start position:0%
b
 

00:20:43.760 --> 00:20:45.909 align:start position:0%
b
that's<00:20:44.000><c> what</c><00:20:44.159><c> will</c><00:20:44.320><c> happen</c><00:20:44.720><c> internally</c><00:20:45.760><c> and</c>

00:20:45.909 --> 00:20:45.919 align:start position:0%
that's what will happen internally and
 

00:20:45.919 --> 00:20:48.950 align:start position:0%
that's what will happen internally and
so<00:20:46.159><c> b</c><00:20:46.400><c> will</c><00:20:46.559><c> be</c><00:20:46.720><c> the</c><00:20:46.960><c> other</c><00:20:48.159><c> and</c>

00:20:48.950 --> 00:20:48.960 align:start position:0%
so b will be the other and
 

00:20:48.960 --> 00:20:50.950 align:start position:0%
so b will be the other and
self<00:20:49.440><c> will</c><00:20:49.600><c> be</c><00:20:50.080><c> a</c>

00:20:50.950 --> 00:20:50.960 align:start position:0%
self will be a
 

00:20:50.960 --> 00:20:52.149 align:start position:0%
self will be a
and<00:20:51.120><c> so</c><00:20:51.280><c> we</c><00:20:51.360><c> see</c><00:20:51.520><c> that</c><00:20:51.600><c> what</c><00:20:51.760><c> we're</c><00:20:51.919><c> going</c><00:20:52.000><c> to</c>

00:20:52.149 --> 00:20:52.159 align:start position:0%
and so we see that what we're going to
 

00:20:52.159 --> 00:20:54.470 align:start position:0%
and so we see that what we're going to
return<00:20:52.480><c> is</c><00:20:52.559><c> a</c><00:20:52.640><c> new</c><00:20:52.960><c> value</c><00:20:53.280><c> object</c><00:20:54.000><c> and</c><00:20:54.240><c> it's</c>

00:20:54.470 --> 00:20:54.480 align:start position:0%
return is a new value object and it's
 

00:20:54.480 --> 00:20:56.710 align:start position:0%
return is a new value object and it's
just<00:20:55.039><c> it's</c><00:20:55.280><c> going</c><00:20:55.440><c> to</c><00:20:55.520><c> be</c><00:20:55.679><c> wrapping</c>

00:20:56.710 --> 00:20:56.720 align:start position:0%
just it's going to be wrapping
 

00:20:56.720 --> 00:20:58.549 align:start position:0%
just it's going to be wrapping
the<00:20:57.039><c> plus</c><00:20:57.760><c> of</c>

00:20:58.549 --> 00:20:58.559 align:start position:0%
the plus of
 

00:20:58.559 --> 00:20:59.750 align:start position:0%
the plus of
their<00:20:58.799><c> data</c>

00:20:59.750 --> 00:20:59.760 align:start position:0%
their data
 

00:20:59.760 --> 00:21:01.990 align:start position:0%
their data
but<00:21:00.000><c> remember</c><00:21:00.320><c> now</c><00:21:00.559><c> because</c><00:21:01.360><c> data</c><00:21:01.679><c> is</c><00:21:01.760><c> the</c>

00:21:01.990 --> 00:21:02.000 align:start position:0%
but remember now because data is the
 

00:21:02.000 --> 00:21:04.310 align:start position:0%
but remember now because data is the
actual<00:21:02.400><c> like</c><00:21:02.640><c> numbered</c><00:21:03.039><c> python</c><00:21:03.520><c> number</c><00:21:04.159><c> so</c>

00:21:04.310 --> 00:21:04.320 align:start position:0%
actual like numbered python number so
 

00:21:04.320 --> 00:21:06.870 align:start position:0%
actual like numbered python number so
this<00:21:04.720><c> operator</c><00:21:05.200><c> here</c><00:21:05.760><c> is</c><00:21:06.000><c> just</c><00:21:06.159><c> the</c><00:21:06.320><c> typical</c>

00:21:06.870 --> 00:21:06.880 align:start position:0%
this operator here is just the typical
 

00:21:06.880 --> 00:21:09.110 align:start position:0%
this operator here is just the typical
floating<00:21:07.360><c> point</c><00:21:07.840><c> plus</c><00:21:08.320><c> addition</c><00:21:08.720><c> now</c><00:21:08.960><c> it's</c>

00:21:09.110 --> 00:21:09.120 align:start position:0%
floating point plus addition now it's
 

00:21:09.120 --> 00:21:11.590 align:start position:0%
floating point plus addition now it's
not<00:21:09.280><c> an</c><00:21:09.440><c> addition</c><00:21:09.840><c> of</c><00:21:10.000><c> value</c><00:21:10.400><c> objects</c>

00:21:11.590 --> 00:21:11.600 align:start position:0%
not an addition of value objects
 

00:21:11.600 --> 00:21:14.230 align:start position:0%
not an addition of value objects
and<00:21:11.840><c> will</c><00:21:12.000><c> return</c><00:21:12.400><c> a</c><00:21:12.559><c> new</c><00:21:12.880><c> value</c><00:21:13.679><c> so</c><00:21:13.840><c> now</c><00:21:14.080><c> a</c>

00:21:14.230 --> 00:21:14.240 align:start position:0%
and will return a new value so now a
 

00:21:14.240 --> 00:21:15.990 align:start position:0%
and will return a new value so now a
plus<00:21:14.480><c> b</c><00:21:14.640><c> should</c><00:21:14.880><c> work</c><00:21:15.360><c> and</c><00:21:15.520><c> it</c><00:21:15.600><c> should</c><00:21:15.760><c> print</c>

00:21:15.990 --> 00:21:16.000 align:start position:0%
plus b should work and it should print
 

00:21:16.000 --> 00:21:17.190 align:start position:0%
plus b should work and it should print
value<00:21:16.480><c> of</c>

00:21:17.190 --> 00:21:17.200 align:start position:0%
value of
 

00:21:17.200 --> 00:21:18.390 align:start position:0%
value of
negative<00:21:17.520><c> one</c>

00:21:18.390 --> 00:21:18.400 align:start position:0%
negative one
 

00:21:18.400 --> 00:21:20.230 align:start position:0%
negative one
because<00:21:18.640><c> that's</c><00:21:18.799><c> two</c><00:21:18.960><c> plus</c><00:21:19.200><c> minus</c><00:21:19.440><c> three</c>

00:21:20.230 --> 00:21:20.240 align:start position:0%
because that's two plus minus three
 

00:21:20.240 --> 00:21:21.669 align:start position:0%
because that's two plus minus three
there<00:21:20.480><c> we</c><00:21:20.559><c> go</c>

00:21:21.669 --> 00:21:21.679 align:start position:0%
there we go
 

00:21:21.679 --> 00:21:24.230 align:start position:0%
there we go
okay<00:21:21.919><c> let's</c><00:21:22.159><c> now</c><00:21:22.480><c> implement</c><00:21:22.960><c> multiply</c>

00:21:24.230 --> 00:21:24.240 align:start position:0%
okay let's now implement multiply
 

00:21:24.240 --> 00:21:25.909 align:start position:0%
okay let's now implement multiply
just<00:21:24.400><c> so</c><00:21:24.559><c> we</c><00:21:24.720><c> can</c><00:21:24.880><c> recreate</c><00:21:25.280><c> this</c><00:21:25.520><c> expression</c>

00:21:25.909 --> 00:21:25.919 align:start position:0%
just so we can recreate this expression
 

00:21:25.919 --> 00:21:26.789 align:start position:0%
just so we can recreate this expression
here

00:21:26.789 --> 00:21:26.799 align:start position:0%
here
 

00:21:26.799 --> 00:21:28.549 align:start position:0%
here
so<00:21:26.960><c> multiply</c><00:21:27.520><c> i</c><00:21:27.600><c> think</c><00:21:27.840><c> it</c><00:21:27.919><c> won't</c><00:21:28.159><c> surprise</c>

00:21:28.549 --> 00:21:28.559 align:start position:0%
so multiply i think it won't surprise
 

00:21:28.559 --> 00:21:31.590 align:start position:0%
so multiply i think it won't surprise
you<00:21:29.039><c> will</c><00:21:29.280><c> be</c><00:21:29.440><c> fairly</c><00:21:29.760><c> similar</c>

00:21:31.590 --> 00:21:31.600 align:start position:0%
you will be fairly similar
 

00:21:31.600 --> 00:21:33.190 align:start position:0%
you will be fairly similar
so<00:21:32.000><c> instead</c><00:21:32.240><c> of</c><00:21:32.400><c> add</c><00:21:32.720><c> we're</c><00:21:32.880><c> going</c><00:21:32.960><c> to</c><00:21:33.039><c> be</c>

00:21:33.190 --> 00:21:33.200 align:start position:0%
so instead of add we're going to be
 

00:21:33.200 --> 00:21:34.310 align:start position:0%
so instead of add we're going to be
using<00:21:33.440><c> mul</c>

00:21:34.310 --> 00:21:34.320 align:start position:0%
using mul
 

00:21:34.320 --> 00:21:35.990 align:start position:0%
using mul
and<00:21:34.400><c> then</c><00:21:34.640><c> here</c><00:21:34.960><c> of</c><00:21:35.039><c> course</c><00:21:35.280><c> we</c><00:21:35.440><c> want</c><00:21:35.600><c> to</c><00:21:35.760><c> do</c>

00:21:35.990 --> 00:21:36.000 align:start position:0%
and then here of course we want to do
 

00:21:36.000 --> 00:21:36.870 align:start position:0%
and then here of course we want to do
times

00:21:36.870 --> 00:21:36.880 align:start position:0%
times
 

00:21:36.880 --> 00:21:38.630 align:start position:0%
times
and<00:21:37.039><c> so</c><00:21:37.200><c> now</c><00:21:37.360><c> we</c><00:21:37.520><c> can</c><00:21:37.679><c> create</c><00:21:37.919><c> a</c><00:21:38.080><c> c</c><00:21:38.320><c> value</c>

00:21:38.630 --> 00:21:38.640 align:start position:0%
and so now we can create a c value
 

00:21:38.640 --> 00:21:41.029 align:start position:0%
and so now we can create a c value
object<00:21:38.960><c> which</c><00:21:39.200><c> will</c><00:21:39.360><c> be</c><00:21:39.600><c> 10.0</c><00:21:40.640><c> and</c><00:21:40.799><c> now</c><00:21:40.960><c> we</c>

00:21:41.029 --> 00:21:41.039 align:start position:0%
object which will be 10.0 and now we
 

00:21:41.039 --> 00:21:44.149 align:start position:0%
object which will be 10.0 and now we
should<00:21:41.200><c> be</c><00:21:41.360><c> able</c><00:21:41.520><c> to</c><00:21:41.600><c> do</c><00:21:42.000><c> a</c><00:21:42.240><c> times</c><00:21:42.840><c> b</c><00:21:43.919><c> well</c>

00:21:44.149 --> 00:21:44.159 align:start position:0%
should be able to do a times b well
 

00:21:44.159 --> 00:21:46.710 align:start position:0%
should be able to do a times b well
let's<00:21:44.400><c> just</c><00:21:44.559><c> do</c><00:21:44.720><c> a</c><00:21:44.799><c> times</c><00:21:45.120><c> b</c><00:21:45.280><c> first</c>

00:21:46.710 --> 00:21:46.720 align:start position:0%
let's just do a times b first
 

00:21:46.720 --> 00:21:47.050 align:start position:0%
let's just do a times b first
um

00:21:47.050 --> 00:21:47.060 align:start position:0%
um
 

00:21:47.060 --> 00:21:48.470 align:start position:0%
um
[Music]

00:21:48.470 --> 00:21:48.480 align:start position:0%
[Music]
 

00:21:48.480 --> 00:21:50.710 align:start position:0%
[Music]
that's<00:21:48.720><c> value</c><00:21:48.960><c> of</c><00:21:49.120><c> negative</c><00:21:49.440><c> six</c><00:21:49.760><c> now</c>

00:21:50.710 --> 00:21:50.720 align:start position:0%
that's value of negative six now
 

00:21:50.720 --> 00:21:51.990 align:start position:0%
that's value of negative six now
and<00:21:50.799><c> by</c><00:21:50.960><c> the</c><00:21:51.039><c> way</c><00:21:51.120><c> i</c><00:21:51.280><c> skipped</c><00:21:51.520><c> over</c><00:21:51.679><c> this</c><00:21:51.919><c> a</c>

00:21:51.990 --> 00:21:52.000 align:start position:0%
and by the way i skipped over this a
 

00:21:52.000 --> 00:21:53.510 align:start position:0%
and by the way i skipped over this a
little<00:21:52.240><c> bit</c><00:21:52.640><c> suppose</c><00:21:52.960><c> that</c><00:21:53.120><c> i</c><00:21:53.200><c> didn't</c><00:21:53.440><c> have</c>

00:21:53.510 --> 00:21:53.520 align:start position:0%
little bit suppose that i didn't have
 

00:21:53.520 --> 00:21:55.510 align:start position:0%
little bit suppose that i didn't have
the<00:21:53.679><c> wrapper</c><00:21:54.159><c> function</c><00:21:54.640><c> here</c>

00:21:55.510 --> 00:21:55.520 align:start position:0%
the wrapper function here
 

00:21:55.520 --> 00:21:57.430 align:start position:0%
the wrapper function here
then<00:21:56.159><c> it's</c><00:21:56.320><c> just</c><00:21:56.559><c> that</c><00:21:56.720><c> you'll</c><00:21:56.960><c> get</c><00:21:57.120><c> some</c><00:21:57.280><c> kind</c>

00:21:57.430 --> 00:21:57.440 align:start position:0%
then it's just that you'll get some kind
 

00:21:57.440 --> 00:21:59.669 align:start position:0%
then it's just that you'll get some kind
of<00:21:57.520><c> an</c><00:21:57.679><c> ugly</c><00:21:58.000><c> expression</c><00:21:58.880><c> so</c><00:21:59.039><c> what</c><00:21:59.200><c> wrapper</c><00:21:59.600><c> is</c>

00:21:59.669 --> 00:21:59.679 align:start position:0%
of an ugly expression so what wrapper is
 

00:21:59.679 --> 00:22:02.070 align:start position:0%
of an ugly expression so what wrapper is
doing<00:22:00.080><c> is</c><00:22:00.720><c> it's</c><00:22:01.120><c> providing</c><00:22:01.520><c> us</c><00:22:01.679><c> a</c><00:22:01.760><c> way</c><00:22:01.919><c> to</c>

00:22:02.070 --> 00:22:02.080 align:start position:0%
doing is it's providing us a way to
 

00:22:02.080 --> 00:22:03.430 align:start position:0%
doing is it's providing us a way to
print<00:22:02.320><c> out</c><00:22:02.480><c> like</c><00:22:02.640><c> a</c><00:22:02.720><c> nicer</c><00:22:03.120><c> looking</c>

00:22:03.430 --> 00:22:03.440 align:start position:0%
print out like a nicer looking
 

00:22:03.440 --> 00:22:05.110 align:start position:0%
print out like a nicer looking
expression<00:22:04.000><c> in</c><00:22:04.080><c> python</c>

00:22:05.110 --> 00:22:05.120 align:start position:0%
expression in python
 

00:22:05.120 --> 00:22:07.190 align:start position:0%
expression in python
uh<00:22:05.440><c> so</c><00:22:05.840><c> we</c><00:22:06.000><c> don't</c><00:22:06.240><c> just</c><00:22:06.400><c> have</c><00:22:06.559><c> something</c>

00:22:07.190 --> 00:22:07.200 align:start position:0%
uh so we don't just have something
 

00:22:07.200 --> 00:22:09.270 align:start position:0%
uh so we don't just have something
cryptic<00:22:07.840><c> we</c><00:22:08.000><c> actually</c><00:22:08.400><c> are</c><00:22:08.799><c> you</c><00:22:08.880><c> know</c><00:22:09.039><c> it's</c>

00:22:09.270 --> 00:22:09.280 align:start position:0%
cryptic we actually are you know it's
 

00:22:09.280 --> 00:22:10.470 align:start position:0%
cryptic we actually are you know it's
value<00:22:09.679><c> of</c>

00:22:10.470 --> 00:22:10.480 align:start position:0%
value of
 

00:22:10.480 --> 00:22:13.990 align:start position:0%
value of
negative<00:22:10.880><c> six</c><00:22:12.159><c> so</c><00:22:12.320><c> this</c><00:22:12.480><c> gives</c><00:22:12.720><c> us</c><00:22:12.880><c> a</c><00:22:13.039><c> times</c>

00:22:13.990 --> 00:22:14.000 align:start position:0%
negative six so this gives us a times
 

00:22:14.000 --> 00:22:16.310 align:start position:0%
negative six so this gives us a times
and<00:22:14.159><c> then</c><00:22:14.880><c> this</c><00:22:15.280><c> we</c><00:22:15.440><c> should</c><00:22:15.679><c> now</c><00:22:15.840><c> be</c><00:22:16.000><c> able</c><00:22:16.159><c> to</c>

00:22:16.310 --> 00:22:16.320 align:start position:0%
and then this we should now be able to
 

00:22:16.320 --> 00:22:18.070 align:start position:0%
and then this we should now be able to
add<00:22:16.559><c> c</c><00:22:16.799><c> to</c><00:22:16.960><c> it</c><00:22:17.120><c> because</c><00:22:17.360><c> we've</c><00:22:17.520><c> defined</c><00:22:17.919><c> and</c>

00:22:18.070 --> 00:22:18.080 align:start position:0%
add c to it because we've defined and
 

00:22:18.080 --> 00:22:20.549 align:start position:0%
add c to it because we've defined and
told<00:22:18.240><c> the</c><00:22:18.400><c> python</c><00:22:18.880><c> how</c><00:22:19.039><c> to</c><00:22:19.120><c> do</c><00:22:19.360><c> mul</c><00:22:19.760><c> and</c><00:22:19.919><c> add</c>

00:22:20.549 --> 00:22:20.559 align:start position:0%
told the python how to do mul and add
 

00:22:20.559 --> 00:22:22.390 align:start position:0%
told the python how to do mul and add
and<00:22:20.720><c> so</c><00:22:20.880><c> this</c><00:22:21.120><c> will</c><00:22:21.360><c> call</c><00:22:22.080><c> this</c><00:22:22.240><c> will</c>

00:22:22.390 --> 00:22:22.400 align:start position:0%
and so this will call this will
 

00:22:22.400 --> 00:22:24.870 align:start position:0%
and so this will call this will
basically<00:22:22.720><c> be</c><00:22:22.799><c> equivalent</c><00:22:23.280><c> to</c><00:22:23.520><c> a</c><00:22:24.000><c> dot</c>

00:22:24.870 --> 00:22:24.880 align:start position:0%
basically be equivalent to a dot
 

00:22:24.880 --> 00:22:26.870 align:start position:0%
basically be equivalent to a dot
small

00:22:26.870 --> 00:22:26.880 align:start position:0%
small
 

00:22:26.880 --> 00:22:27.909 align:start position:0%
small
of<00:22:27.039><c> b</c>

00:22:27.909 --> 00:22:27.919 align:start position:0%
of b
 

00:22:27.919 --> 00:22:29.669 align:start position:0%
of b
and<00:22:28.000><c> then</c><00:22:28.240><c> this</c><00:22:28.480><c> new</c><00:22:28.640><c> value</c><00:22:28.960><c> object</c><00:22:29.360><c> will</c><00:22:29.520><c> be</c>

00:22:29.669 --> 00:22:29.679 align:start position:0%
and then this new value object will be
 

00:22:29.679 --> 00:22:31.270 align:start position:0%
and then this new value object will be
dot<00:22:30.320><c> add</c>

00:22:31.270 --> 00:22:31.280 align:start position:0%
dot add
 

00:22:31.280 --> 00:22:32.549 align:start position:0%
dot add
of<00:22:31.600><c> c</c>

00:22:32.549 --> 00:22:32.559 align:start position:0%
of c
 

00:22:32.559 --> 00:22:34.789 align:start position:0%
of c
and<00:22:32.720><c> so</c><00:22:32.880><c> let's</c><00:22:33.039><c> see</c><00:22:33.200><c> if</c><00:22:33.280><c> that</c><00:22:33.440><c> worked</c>

00:22:34.789 --> 00:22:34.799 align:start position:0%
and so let's see if that worked
 

00:22:34.799 --> 00:22:36.390 align:start position:0%
and so let's see if that worked
yep<00:22:35.039><c> so</c><00:22:35.200><c> that</c><00:22:35.360><c> worked</c><00:22:35.600><c> well</c><00:22:35.840><c> that</c><00:22:36.000><c> gave</c><00:22:36.240><c> us</c>

00:22:36.390 --> 00:22:36.400 align:start position:0%
yep so that worked well that gave us
 

00:22:36.400 --> 00:22:39.190 align:start position:0%
yep so that worked well that gave us
four<00:22:36.720><c> which</c><00:22:36.960><c> is</c><00:22:37.039><c> what</c><00:22:37.200><c> we</c><00:22:37.360><c> expect</c><00:22:37.760><c> from</c><00:22:38.000><c> before</c>

00:22:39.190 --> 00:22:39.200 align:start position:0%
four which is what we expect from before
 

00:22:39.200 --> 00:22:40.950 align:start position:0%
four which is what we expect from before
and<00:22:40.000><c> i</c><00:22:40.080><c> believe</c><00:22:40.320><c> we</c><00:22:40.480><c> can</c><00:22:40.559><c> just</c><00:22:40.720><c> call</c><00:22:40.880><c> them</c>

00:22:40.950 --> 00:22:40.960 align:start position:0%
and i believe we can just call them
 

00:22:40.960 --> 00:22:44.310 align:start position:0%
and i believe we can just call them
manually<00:22:41.440><c> as</c><00:22:41.520><c> well</c><00:22:42.000><c> there</c><00:22:42.240><c> we</c><00:22:42.320><c> go</c><00:22:42.640><c> so</c>

00:22:44.310 --> 00:22:44.320 align:start position:0%
manually as well there we go so
 

00:22:44.320 --> 00:22:45.110 align:start position:0%
manually as well there we go so
yeah

00:22:45.110 --> 00:22:45.120 align:start position:0%
yeah
 

00:22:45.120 --> 00:22:46.870 align:start position:0%
yeah
okay<00:22:45.360><c> so</c><00:22:45.520><c> now</c><00:22:45.679><c> what</c><00:22:45.840><c> we</c><00:22:45.919><c> are</c><00:22:46.080><c> missing</c><00:22:46.480><c> is</c><00:22:46.720><c> the</c>

00:22:46.870 --> 00:22:46.880 align:start position:0%
okay so now what we are missing is the
 

00:22:46.880 --> 00:22:49.029 align:start position:0%
okay so now what we are missing is the
connective<00:22:47.360><c> tissue</c><00:22:47.840><c> of</c><00:22:47.919><c> this</c><00:22:48.159><c> expression</c><00:22:48.880><c> as</c>

00:22:49.029 --> 00:22:49.039 align:start position:0%
connective tissue of this expression as
 

00:22:49.039 --> 00:22:50.230 align:start position:0%
connective tissue of this expression as
i<00:22:49.120><c> mentioned</c><00:22:49.440><c> we</c><00:22:49.520><c> want</c><00:22:49.679><c> to</c><00:22:49.840><c> keep</c><00:22:50.080><c> these</c>

00:22:50.230 --> 00:22:50.240 align:start position:0%
i mentioned we want to keep these
 

00:22:50.240 --> 00:22:52.549 align:start position:0%
i mentioned we want to keep these
expression<00:22:50.720><c> graphs</c><00:22:51.520><c> so</c><00:22:51.679><c> we</c><00:22:51.840><c> need</c><00:22:52.000><c> to</c><00:22:52.080><c> know</c><00:22:52.400><c> and</c>

00:22:52.549 --> 00:22:52.559 align:start position:0%
expression graphs so we need to know and
 

00:22:52.559 --> 00:22:54.950 align:start position:0%
expression graphs so we need to know and
keep<00:22:52.880><c> pointers</c><00:22:53.520><c> about</c><00:22:54.000><c> what</c><00:22:54.240><c> values</c><00:22:54.640><c> produce</c>

00:22:54.950 --> 00:22:54.960 align:start position:0%
keep pointers about what values produce
 

00:22:54.960 --> 00:22:56.870 align:start position:0%
keep pointers about what values produce
what<00:22:55.200><c> other</c><00:22:55.440><c> values</c>

00:22:56.870 --> 00:22:56.880 align:start position:0%
what other values
 

00:22:56.880 --> 00:22:58.630 align:start position:0%
what other values
so<00:22:57.039><c> here</c><00:22:57.200><c> for</c><00:22:57.360><c> example</c><00:22:57.760><c> we</c><00:22:57.919><c> are</c><00:22:58.080><c> going</c><00:22:58.320><c> to</c>

00:22:58.630 --> 00:22:58.640 align:start position:0%
so here for example we are going to
 

00:22:58.640 --> 00:23:00.070 align:start position:0%
so here for example we are going to
introduce<00:22:59.120><c> a</c><00:22:59.200><c> new</c><00:22:59.360><c> variable</c><00:22:59.760><c> which</c><00:22:59.919><c> we'll</c>

00:23:00.070 --> 00:23:00.080 align:start position:0%
introduce a new variable which we'll
 

00:23:00.080 --> 00:23:02.070 align:start position:0%
introduce a new variable which we'll
call<00:23:00.320><c> children</c><00:23:01.200><c> and</c><00:23:01.280><c> by</c><00:23:01.440><c> default</c><00:23:01.840><c> it</c><00:23:01.919><c> will</c><00:23:02.000><c> be</c>

00:23:02.070 --> 00:23:02.080 align:start position:0%
call children and by default it will be
 

00:23:02.080 --> 00:23:03.510 align:start position:0%
call children and by default it will be
an<00:23:02.240><c> empty</c><00:23:02.480><c> tuple</c>

00:23:03.510 --> 00:23:03.520 align:start position:0%
an empty tuple
 

00:23:03.520 --> 00:23:04.789 align:start position:0%
an empty tuple
and<00:23:03.600><c> then</c><00:23:03.760><c> we're</c><00:23:04.000><c> actually</c><00:23:04.240><c> going</c><00:23:04.400><c> to</c><00:23:04.559><c> keep</c><00:23:04.720><c> a</c>

00:23:04.789 --> 00:23:04.799 align:start position:0%
and then we're actually going to keep a
 

00:23:04.799 --> 00:23:06.390 align:start position:0%
and then we're actually going to keep a
slightly<00:23:05.120><c> different</c><00:23:05.440><c> variable</c><00:23:05.840><c> in</c><00:23:05.919><c> the</c><00:23:06.080><c> class</c>

00:23:06.390 --> 00:23:06.400 align:start position:0%
slightly different variable in the class
 

00:23:06.400 --> 00:23:08.549 align:start position:0%
slightly different variable in the class
which<00:23:06.559><c> we'll</c><00:23:06.720><c> call</c><00:23:07.039><c> underscore</c><00:23:07.520><c> prev</c><00:23:08.400><c> which</c>

00:23:08.549 --> 00:23:08.559 align:start position:0%
which we'll call underscore prev which
 

00:23:08.559 --> 00:23:11.510 align:start position:0%
which we'll call underscore prev which
will<00:23:08.720><c> be</c><00:23:08.880><c> the</c><00:23:09.120><c> set</c><00:23:09.600><c> of</c><00:23:09.919><c> children</c>

00:23:11.510 --> 00:23:11.520 align:start position:0%
will be the set of children
 

00:23:11.520 --> 00:23:13.270 align:start position:0%
will be the set of children
this<00:23:11.679><c> is</c><00:23:11.840><c> how</c><00:23:12.000><c> i</c><00:23:12.080><c> done</c><00:23:12.400><c> i</c><00:23:12.559><c> did</c><00:23:12.720><c> it</c><00:23:12.960><c> in</c><00:23:13.039><c> the</c>

00:23:13.270 --> 00:23:13.280 align:start position:0%
this is how i done i did it in the
 

00:23:13.280 --> 00:23:15.110 align:start position:0%
this is how i done i did it in the
original<00:23:13.600><c> micrograd</c><00:23:14.320><c> looking</c><00:23:14.640><c> at</c><00:23:14.720><c> my</c><00:23:14.880><c> code</c>

00:23:15.110 --> 00:23:15.120 align:start position:0%
original micrograd looking at my code
 

00:23:15.120 --> 00:23:17.110 align:start position:0%
original micrograd looking at my code
here<00:23:15.679><c> i</c><00:23:15.840><c> can't</c><00:23:16.080><c> remember</c><00:23:16.320><c> exactly</c><00:23:16.720><c> the</c><00:23:16.799><c> reason</c>

00:23:17.110 --> 00:23:17.120 align:start position:0%
here i can't remember exactly the reason
 

00:23:17.120 --> 00:23:19.110 align:start position:0%
here i can't remember exactly the reason
i<00:23:17.200><c> believe</c><00:23:17.520><c> it</c><00:23:17.600><c> was</c><00:23:17.760><c> efficiency</c><00:23:18.640><c> but</c><00:23:18.880><c> this</c>

00:23:19.110 --> 00:23:19.120 align:start position:0%
i believe it was efficiency but this
 

00:23:19.120 --> 00:23:20.950 align:start position:0%
i believe it was efficiency but this
underscore<00:23:19.600><c> children</c><00:23:19.919><c> will</c><00:23:20.080><c> be</c><00:23:20.320><c> a</c><00:23:20.400><c> tuple</c><00:23:20.799><c> for</c>

00:23:20.950 --> 00:23:20.960 align:start position:0%
underscore children will be a tuple for
 

00:23:20.960 --> 00:23:22.390 align:start position:0%
underscore children will be a tuple for
convenience<00:23:21.679><c> but</c><00:23:21.840><c> then</c><00:23:21.919><c> when</c><00:23:22.080><c> we</c><00:23:22.159><c> actually</c>

00:23:22.390 --> 00:23:22.400 align:start position:0%
convenience but then when we actually
 

00:23:22.400 --> 00:23:23.909 align:start position:0%
convenience but then when we actually
maintain<00:23:22.799><c> it</c><00:23:22.880><c> in</c><00:23:22.960><c> the</c><00:23:23.120><c> class</c><00:23:23.360><c> it</c><00:23:23.520><c> will</c><00:23:23.600><c> be</c><00:23:23.760><c> just</c>

00:23:23.909 --> 00:23:23.919 align:start position:0%
maintain it in the class it will be just
 

00:23:23.919 --> 00:23:27.590 align:start position:0%
maintain it in the class it will be just
this<00:23:24.159><c> set</c><00:23:24.880><c> yeah</c><00:23:25.600><c> i</c><00:23:25.679><c> believe</c><00:23:25.919><c> for</c><00:23:26.080><c> efficiency</c>

00:23:27.590 --> 00:23:27.600 align:start position:0%
this set yeah i believe for efficiency
 

00:23:27.600 --> 00:23:28.870 align:start position:0%
this set yeah i believe for efficiency
um

00:23:28.870 --> 00:23:28.880 align:start position:0%
um
 

00:23:28.880 --> 00:23:29.909 align:start position:0%
um
so<00:23:29.120><c> now</c>

00:23:29.909 --> 00:23:29.919 align:start position:0%
so now
 

00:23:29.919 --> 00:23:31.750 align:start position:0%
so now
when<00:23:30.480><c> we</c><00:23:30.640><c> are</c><00:23:30.720><c> creating</c><00:23:31.039><c> a</c><00:23:31.120><c> value</c><00:23:31.440><c> like</c><00:23:31.600><c> this</c>

00:23:31.750 --> 00:23:31.760 align:start position:0%
when we are creating a value like this
 

00:23:31.760 --> 00:23:33.430 align:start position:0%
when we are creating a value like this
with<00:23:31.919><c> a</c><00:23:32.000><c> constructor</c><00:23:32.799><c> children</c><00:23:33.120><c> will</c><00:23:33.280><c> be</c>

00:23:33.430 --> 00:23:33.440 align:start position:0%
with a constructor children will be
 

00:23:33.440 --> 00:23:36.070 align:start position:0%
with a constructor children will be
empty<00:23:33.919><c> and</c><00:23:34.080><c> prep</c><00:23:34.400><c> will</c><00:23:34.559><c> be</c><00:23:34.720><c> the</c><00:23:34.880><c> empty</c><00:23:35.200><c> set</c><00:23:35.919><c> but</c>

00:23:36.070 --> 00:23:36.080 align:start position:0%
empty and prep will be the empty set but
 

00:23:36.080 --> 00:23:37.350 align:start position:0%
empty and prep will be the empty set but
when<00:23:36.240><c> we're</c><00:23:36.480><c> creating</c><00:23:36.720><c> a</c><00:23:36.880><c> value</c><00:23:37.120><c> through</c>

00:23:37.350 --> 00:23:37.360 align:start position:0%
when we're creating a value through
 

00:23:37.360 --> 00:23:39.350 align:start position:0%
when we're creating a value through
addition<00:23:37.760><c> or</c><00:23:37.840><c> multiplication</c><00:23:38.960><c> we're</c><00:23:39.200><c> going</c>

00:23:39.350 --> 00:23:39.360 align:start position:0%
addition or multiplication we're going
 

00:23:39.360 --> 00:23:42.630 align:start position:0%
addition or multiplication we're going
to<00:23:39.520><c> feed</c><00:23:39.840><c> in</c><00:23:40.240><c> the</c><00:23:40.400><c> children</c><00:23:41.039><c> of</c><00:23:41.279><c> this</c><00:23:42.000><c> value</c>

00:23:42.630 --> 00:23:42.640 align:start position:0%
to feed in the children of this value
 

00:23:42.640 --> 00:23:46.390 align:start position:0%
to feed in the children of this value
which<00:23:42.880><c> in</c><00:23:42.960><c> this</c><00:23:43.200><c> case</c><00:23:43.520><c> is</c><00:23:43.760><c> self</c><00:23:44.240><c> and</c><00:23:44.400><c> other</c>

00:23:46.390 --> 00:23:46.400 align:start position:0%
which in this case is self and other
 

00:23:46.400 --> 00:23:48.070 align:start position:0%
which in this case is self and other
so<00:23:46.559><c> those</c><00:23:46.799><c> are</c><00:23:46.880><c> the</c><00:23:47.039><c> children</c>

00:23:48.070 --> 00:23:48.080 align:start position:0%
so those are the children
 

00:23:48.080 --> 00:23:50.630 align:start position:0%
so those are the children
here

00:23:50.630 --> 00:23:50.640 align:start position:0%
here
 

00:23:50.640 --> 00:23:52.950 align:start position:0%
here
so<00:23:50.799><c> now</c><00:23:50.960><c> we</c><00:23:51.120><c> can</c><00:23:51.200><c> do</c><00:23:51.360><c> d</c><00:23:51.600><c> dot</c><00:23:52.000><c> prev</c>

00:23:52.950 --> 00:23:52.960 align:start position:0%
so now we can do d dot prev
 

00:23:52.960 --> 00:23:55.909 align:start position:0%
so now we can do d dot prev
and<00:23:53.120><c> we'll</c><00:23:53.360><c> see</c><00:23:53.600><c> that</c><00:23:54.159><c> the</c><00:23:54.400><c> children</c><00:23:54.880><c> of</c><00:23:55.039><c> the</c>

00:23:55.909 --> 00:23:55.919 align:start position:0%
and we'll see that the children of the
 

00:23:55.919 --> 00:23:58.870 align:start position:0%
and we'll see that the children of the
we<00:23:56.080><c> now</c><00:23:56.320><c> know</c><00:23:56.880><c> are</c><00:23:57.120><c> this</c><00:23:57.600><c> value</c><00:23:58.000><c> of</c><00:23:58.159><c> negative</c><00:23:58.480><c> 6</c>

00:23:58.870 --> 00:23:58.880 align:start position:0%
we now know are this value of negative 6
 

00:23:58.880 --> 00:24:00.950 align:start position:0%
we now know are this value of negative 6
and<00:23:59.039><c> value</c><00:23:59.440><c> of</c><00:23:59.520><c> 10</c><00:24:00.159><c> and</c><00:24:00.320><c> this</c><00:24:00.559><c> of</c><00:24:00.640><c> course</c><00:24:00.880><c> is</c>

00:24:00.950 --> 00:24:00.960 align:start position:0%
and value of 10 and this of course is
 

00:24:00.960 --> 00:24:03.750 align:start position:0%
and value of 10 and this of course is
the<00:24:01.520><c> value</c><00:24:01.840><c> resulting</c><00:24:02.240><c> from</c><00:24:02.400><c> a</c><00:24:02.559><c> times</c><00:24:02.799><c> b</c><00:24:03.360><c> and</c>

00:24:03.750 --> 00:24:03.760 align:start position:0%
the value resulting from a times b and
 

00:24:03.760 --> 00:24:06.549 align:start position:0%
the value resulting from a times b and
the<00:24:04.080><c> c</c><00:24:04.400><c> value</c><00:24:04.799><c> which</c><00:24:04.960><c> is</c><00:24:05.200><c> 10.</c>

00:24:06.549 --> 00:24:06.559 align:start position:0%
the c value which is 10.
 

00:24:06.559 --> 00:24:08.549 align:start position:0%
the c value which is 10.
now<00:24:07.120><c> the</c><00:24:07.440><c> last</c><00:24:07.679><c> piece</c><00:24:07.919><c> of</c><00:24:08.000><c> information</c><00:24:08.400><c> we</c>

00:24:08.549 --> 00:24:08.559 align:start position:0%
now the last piece of information we
 

00:24:08.559 --> 00:24:10.630 align:start position:0%
now the last piece of information we
don't<00:24:08.799><c> know</c><00:24:09.440><c> so</c><00:24:09.600><c> we</c><00:24:09.679><c> know</c><00:24:09.840><c> that</c><00:24:10.000><c> the</c><00:24:10.240><c> children</c>

00:24:10.630 --> 00:24:10.640 align:start position:0%
don't know so we know that the children
 

00:24:10.640 --> 00:24:12.149 align:start position:0%
don't know so we know that the children
of<00:24:10.880><c> every</c><00:24:11.039><c> single</c><00:24:11.360><c> value</c><00:24:11.679><c> but</c><00:24:11.840><c> we</c><00:24:11.919><c> don't</c><00:24:12.080><c> know</c>

00:24:12.149 --> 00:24:12.159 align:start position:0%
of every single value but we don't know
 

00:24:12.159 --> 00:24:14.710 align:start position:0%
of every single value but we don't know
what<00:24:12.400><c> operation</c><00:24:12.960><c> created</c><00:24:13.600><c> this</c><00:24:13.840><c> value</c>

00:24:14.710 --> 00:24:14.720 align:start position:0%
what operation created this value
 

00:24:14.720 --> 00:24:16.549 align:start position:0%
what operation created this value
so<00:24:14.880><c> we</c><00:24:15.039><c> need</c><00:24:15.200><c> one</c><00:24:15.440><c> more</c><00:24:15.760><c> element</c><00:24:16.159><c> here</c><00:24:16.400><c> let's</c>

00:24:16.549 --> 00:24:16.559 align:start position:0%
so we need one more element here let's
 

00:24:16.559 --> 00:24:19.110 align:start position:0%
so we need one more element here let's
call<00:24:16.799><c> it</c><00:24:16.960><c> underscore</c><00:24:17.440><c> pop</c>

00:24:19.110 --> 00:24:19.120 align:start position:0%
call it underscore pop
 

00:24:19.120 --> 00:24:21.190 align:start position:0%
call it underscore pop
and<00:24:19.360><c> by</c><00:24:19.600><c> default</c><00:24:20.000><c> this</c><00:24:20.159><c> is</c><00:24:20.240><c> the</c><00:24:20.320><c> empty</c><00:24:20.720><c> set</c><00:24:21.039><c> for</c>

00:24:21.190 --> 00:24:21.200 align:start position:0%
and by default this is the empty set for
 

00:24:21.200 --> 00:24:22.310 align:start position:0%
and by default this is the empty set for
leaves

00:24:22.310 --> 00:24:22.320 align:start position:0%
leaves
 

00:24:22.320 --> 00:24:25.590 align:start position:0%
leaves
and<00:24:22.480><c> then</c><00:24:22.640><c> we'll</c><00:24:22.799><c> just</c><00:24:22.960><c> maintain</c><00:24:23.360><c> it</c><00:24:23.440><c> here</c>

00:24:25.590 --> 00:24:25.600 align:start position:0%
and then we'll just maintain it here
 

00:24:25.600 --> 00:24:27.350 align:start position:0%
and then we'll just maintain it here
and<00:24:25.760><c> now</c><00:24:25.919><c> the</c><00:24:26.080><c> operation</c><00:24:26.720><c> will</c><00:24:26.880><c> be</c><00:24:27.120><c> just</c><00:24:27.279><c> a</c>

00:24:27.350 --> 00:24:27.360 align:start position:0%
and now the operation will be just a
 

00:24:27.360 --> 00:24:29.510 align:start position:0%
and now the operation will be just a
simple<00:24:27.600><c> string</c><00:24:28.400><c> and</c><00:24:28.720><c> in</c><00:24:28.799><c> the</c><00:24:28.960><c> case</c><00:24:29.200><c> of</c>

00:24:29.510 --> 00:24:29.520 align:start position:0%
simple string and in the case of
 

00:24:29.520 --> 00:24:31.269 align:start position:0%
simple string and in the case of
addition<00:24:29.919><c> it's</c><00:24:30.159><c> plus</c><00:24:30.799><c> in</c><00:24:30.880><c> the</c><00:24:30.960><c> case</c><00:24:31.200><c> of</c>

00:24:31.269 --> 00:24:31.279 align:start position:0%
addition it's plus in the case of
 

00:24:31.279 --> 00:24:33.830 align:start position:0%
addition it's plus in the case of
multiplication<00:24:32.080><c> is</c><00:24:32.240><c> times</c>

00:24:33.830 --> 00:24:33.840 align:start position:0%
multiplication is times
 

00:24:33.840 --> 00:24:35.190 align:start position:0%
multiplication is times
so<00:24:34.080><c> now</c><00:24:34.400><c> we</c>

00:24:35.190 --> 00:24:35.200 align:start position:0%
so now we
 

00:24:35.200 --> 00:24:37.029 align:start position:0%
so now we
not<00:24:35.360><c> just</c><00:24:35.600><c> have</c><00:24:35.679><c> d</c><00:24:35.840><c> dot</c><00:24:36.080><c> pref</c><00:24:36.400><c> we</c><00:24:36.559><c> also</c><00:24:36.799><c> have</c><00:24:36.960><c> a</c>

00:24:37.029 --> 00:24:37.039 align:start position:0%
not just have d dot pref we also have a
 

00:24:37.039 --> 00:24:38.630 align:start position:0%
not just have d dot pref we also have a
d<00:24:37.279><c> dot</c><00:24:37.919><c> up</c>

00:24:38.630 --> 00:24:38.640 align:start position:0%
d dot up
 

00:24:38.640 --> 00:24:40.230 align:start position:0%
d dot up
and<00:24:38.799><c> we</c><00:24:38.960><c> know</c><00:24:39.120><c> that</c><00:24:39.200><c> d</c><00:24:39.440><c> was</c><00:24:39.600><c> produced</c><00:24:39.919><c> by</c><00:24:40.080><c> an</c>

00:24:40.230 --> 00:24:40.240 align:start position:0%
and we know that d was produced by an
 

00:24:40.240 --> 00:24:42.789 align:start position:0%
and we know that d was produced by an
addition<00:24:40.960><c> of</c><00:24:41.039><c> those</c><00:24:41.279><c> two</c><00:24:41.520><c> values</c><00:24:42.400><c> and</c><00:24:42.480><c> so</c><00:24:42.640><c> now</c>

00:24:42.789 --> 00:24:42.799 align:start position:0%
addition of those two values and so now
 

00:24:42.799 --> 00:24:43.990 align:start position:0%
addition of those two values and so now
we<00:24:42.880><c> have</c><00:24:43.039><c> the</c><00:24:43.120><c> full</c>

00:24:43.990 --> 00:24:44.000 align:start position:0%
we have the full
 

00:24:44.000 --> 00:24:46.070 align:start position:0%
we have the full
mathematical<00:24:44.559><c> expression</c><00:24:45.440><c> uh</c><00:24:45.760><c> and</c><00:24:45.840><c> we're</c>

00:24:46.070 --> 00:24:46.080 align:start position:0%
mathematical expression uh and we're
 

00:24:46.080 --> 00:24:47.510 align:start position:0%
mathematical expression uh and we're
building<00:24:46.320><c> out</c><00:24:46.400><c> this</c><00:24:46.559><c> data</c><00:24:46.799><c> structure</c><00:24:47.279><c> and</c><00:24:47.360><c> we</c>

00:24:47.510 --> 00:24:47.520 align:start position:0%
building out this data structure and we
 

00:24:47.520 --> 00:24:49.909 align:start position:0%
building out this data structure and we
know<00:24:47.679><c> exactly</c><00:24:48.000><c> how</c><00:24:48.240><c> each</c><00:24:48.480><c> value</c><00:24:49.039><c> came</c><00:24:49.200><c> to</c><00:24:49.360><c> be</c>

00:24:49.909 --> 00:24:49.919 align:start position:0%
know exactly how each value came to be
 

00:24:49.919 --> 00:24:51.590 align:start position:0%
know exactly how each value came to be
by<00:24:50.080><c> word</c><00:24:50.320><c> expression</c><00:24:50.799><c> and</c><00:24:50.880><c> from</c><00:24:51.120><c> what</c><00:24:51.360><c> other</c>

00:24:51.590 --> 00:24:51.600 align:start position:0%
by word expression and from what other
 

00:24:51.600 --> 00:24:54.710 align:start position:0%
by word expression and from what other
values

00:24:54.710 --> 00:24:54.720 align:start position:0%
 
 

00:24:54.720 --> 00:24:56.149 align:start position:0%
 
now<00:24:54.960><c> because</c><00:24:55.200><c> these</c><00:24:55.360><c> expressions</c><00:24:55.840><c> are</c><00:24:55.919><c> about</c>

00:24:56.149 --> 00:24:56.159 align:start position:0%
now because these expressions are about
 

00:24:56.159 --> 00:24:58.070 align:start position:0%
now because these expressions are about
to<00:24:56.240><c> get</c><00:24:56.400><c> quite</c><00:24:56.559><c> a</c><00:24:56.640><c> bit</c><00:24:56.880><c> larger</c><00:24:57.679><c> we'd</c><00:24:57.840><c> like</c><00:24:58.000><c> a</c>

00:24:58.070 --> 00:24:58.080 align:start position:0%
to get quite a bit larger we'd like a
 

00:24:58.080 --> 00:25:00.390 align:start position:0%
to get quite a bit larger we'd like a
way<00:24:58.320><c> to</c><00:24:58.720><c> nicely</c><00:24:59.120><c> visualize</c><00:25:00.159><c> these</c>

00:25:00.390 --> 00:25:00.400 align:start position:0%
way to nicely visualize these
 

00:25:00.400 --> 00:25:02.230 align:start position:0%
way to nicely visualize these
expressions<00:25:00.880><c> that</c><00:25:00.960><c> we're</c><00:25:01.120><c> building</c><00:25:01.520><c> out</c><00:25:02.080><c> so</c>

00:25:02.230 --> 00:25:02.240 align:start position:0%
expressions that we're building out so
 

00:25:02.240 --> 00:25:03.830 align:start position:0%
expressions that we're building out so
for<00:25:02.320><c> that</c><00:25:02.559><c> i'm</c><00:25:02.640><c> going</c><00:25:02.799><c> to</c><00:25:02.880><c> copy</c><00:25:03.200><c> paste</c><00:25:03.440><c> a</c><00:25:03.520><c> bunch</c>

00:25:03.830 --> 00:25:03.840 align:start position:0%
for that i'm going to copy paste a bunch
 

00:25:03.840 --> 00:25:06.470 align:start position:0%
for that i'm going to copy paste a bunch
of<00:25:04.320><c> slightly</c><00:25:04.720><c> scary</c><00:25:05.120><c> code</c><00:25:05.919><c> that's</c><00:25:06.159><c> going</c><00:25:06.320><c> to</c>

00:25:06.470 --> 00:25:06.480 align:start position:0%
of slightly scary code that's going to
 

00:25:06.480 --> 00:25:08.630 align:start position:0%
of slightly scary code that's going to
visualize<00:25:07.279><c> this</c><00:25:07.840><c> these</c><00:25:08.000><c> expression</c><00:25:08.400><c> graphs</c>

00:25:08.630 --> 00:25:08.640 align:start position:0%
visualize this these expression graphs
 

00:25:08.640 --> 00:25:09.590 align:start position:0%
visualize this these expression graphs
for<00:25:08.880><c> us</c>

00:25:09.590 --> 00:25:09.600 align:start position:0%
for us
 

00:25:09.600 --> 00:25:11.029 align:start position:0%
for us
so<00:25:09.760><c> here's</c><00:25:10.000><c> the</c><00:25:10.080><c> code</c><00:25:10.320><c> and</c><00:25:10.480><c> i'll</c><00:25:10.559><c> explain</c><00:25:10.960><c> it</c>

00:25:11.029 --> 00:25:11.039 align:start position:0%
so here's the code and i'll explain it
 

00:25:11.039 --> 00:25:13.350 align:start position:0%
so here's the code and i'll explain it
in<00:25:11.200><c> a</c><00:25:11.279><c> bit</c><00:25:12.000><c> but</c><00:25:12.159><c> first</c><00:25:12.400><c> let</c><00:25:12.559><c> me</c><00:25:12.640><c> just</c><00:25:13.039><c> show</c><00:25:13.200><c> you</c>

00:25:13.350 --> 00:25:13.360 align:start position:0%
in a bit but first let me just show you
 

00:25:13.360 --> 00:25:14.870 align:start position:0%
in a bit but first let me just show you
what<00:25:13.520><c> this</c><00:25:13.679><c> code</c><00:25:14.000><c> does</c>

00:25:14.870 --> 00:25:14.880 align:start position:0%
what this code does
 

00:25:14.880 --> 00:25:16.710 align:start position:0%
what this code does
basically<00:25:15.200><c> what</c><00:25:15.360><c> it</c><00:25:15.440><c> does</c><00:25:15.679><c> is</c><00:25:15.840><c> it</c><00:25:15.919><c> creates</c><00:25:16.559><c> a</c>

00:25:16.710 --> 00:25:16.720 align:start position:0%
basically what it does is it creates a
 

00:25:16.720 --> 00:25:19.110 align:start position:0%
basically what it does is it creates a
new<00:25:16.960><c> function</c><00:25:17.360><c> drawdot</c><00:25:18.240><c> that</c><00:25:18.400><c> we</c><00:25:18.480><c> can</c><00:25:18.640><c> call</c><00:25:18.960><c> on</c>

00:25:19.110 --> 00:25:19.120 align:start position:0%
new function drawdot that we can call on
 

00:25:19.120 --> 00:25:20.710 align:start position:0%
new function drawdot that we can call on
some<00:25:19.360><c> root</c><00:25:19.600><c> node</c>

00:25:20.710 --> 00:25:20.720 align:start position:0%
some root node
 

00:25:20.720 --> 00:25:22.710 align:start position:0%
some root node
and<00:25:20.880><c> then</c><00:25:21.120><c> it's</c><00:25:21.200><c> going</c><00:25:21.360><c> to</c><00:25:21.440><c> visualize</c><00:25:21.919><c> it</c><00:25:22.480><c> so</c>

00:25:22.710 --> 00:25:22.720 align:start position:0%
and then it's going to visualize it so
 

00:25:22.720 --> 00:25:24.710 align:start position:0%
and then it's going to visualize it so
if<00:25:22.799><c> we</c><00:25:23.120><c> call</c><00:25:23.279><c> drawdot</c><00:25:23.840><c> on</c><00:25:24.000><c> d</c>

00:25:24.710 --> 00:25:24.720 align:start position:0%
if we call drawdot on d
 

00:25:24.720 --> 00:25:27.029 align:start position:0%
if we call drawdot on d
which<00:25:25.039><c> is</c><00:25:25.120><c> this</c><00:25:25.360><c> final</c><00:25:25.679><c> value</c><00:25:26.080><c> here</c><00:25:26.400><c> that</c><00:25:26.640><c> is</c><00:25:26.880><c> a</c>

00:25:27.029 --> 00:25:27.039 align:start position:0%
which is this final value here that is a
 

00:25:27.039 --> 00:25:29.750 align:start position:0%
which is this final value here that is a
times<00:25:27.279><c> b</c><00:25:27.440><c> plus</c><00:25:27.600><c> c</c>

00:25:29.750 --> 00:25:29.760 align:start position:0%
times b plus c
 

00:25:29.760 --> 00:25:31.430 align:start position:0%
times b plus c
it<00:25:29.919><c> creates</c><00:25:30.159><c> something</c><00:25:30.400><c> like</c><00:25:30.559><c> this</c><00:25:31.039><c> so</c><00:25:31.200><c> this</c>

00:25:31.430 --> 00:25:31.440 align:start position:0%
it creates something like this so this
 

00:25:31.440 --> 00:25:32.230 align:start position:0%
it creates something like this so this
is<00:25:31.600><c> d</c>

00:25:32.230 --> 00:25:32.240 align:start position:0%
is d
 

00:25:32.240 --> 00:25:34.630 align:start position:0%
is d
and<00:25:32.400><c> you</c><00:25:32.480><c> see</c><00:25:32.640><c> that</c><00:25:32.799><c> this</c><00:25:33.039><c> is</c><00:25:33.200><c> a</c><00:25:33.520><c> times</c><00:25:33.840><c> b</c>

00:25:34.630 --> 00:25:34.640 align:start position:0%
and you see that this is a times b
 

00:25:34.640 --> 00:25:36.950 align:start position:0%
and you see that this is a times b
creating<00:25:34.880><c> an</c><00:25:34.960><c> integrated</c><00:25:35.440><c> value</c><00:25:36.000><c> plus</c><00:25:36.320><c> c</c>

00:25:36.950 --> 00:25:36.960 align:start position:0%
creating an integrated value plus c
 

00:25:36.960 --> 00:25:40.390 align:start position:0%
creating an integrated value plus c
gives<00:25:37.279><c> us</c><00:25:37.760><c> this</c><00:25:38.000><c> output</c><00:25:38.320><c> node</c><00:25:38.720><c> d</c>

00:25:40.390 --> 00:25:40.400 align:start position:0%
gives us this output node d
 

00:25:40.400 --> 00:25:42.390 align:start position:0%
gives us this output node d
so<00:25:40.799><c> that's</c><00:25:41.039><c> dried</c><00:25:41.279><c> out</c><00:25:41.440><c> of</c><00:25:41.600><c> d</c>

00:25:42.390 --> 00:25:42.400 align:start position:0%
so that's dried out of d
 

00:25:42.400 --> 00:25:44.310 align:start position:0%
so that's dried out of d
and<00:25:42.720><c> i'm</c><00:25:42.880><c> not</c><00:25:43.039><c> going</c><00:25:43.200><c> to</c><00:25:43.279><c> go</c><00:25:43.520><c> through</c><00:25:43.840><c> this</c><00:25:44.080><c> in</c>

00:25:44.310 --> 00:25:44.320 align:start position:0%
and i'm not going to go through this in
 

00:25:44.320 --> 00:25:46.149 align:start position:0%
and i'm not going to go through this in
complete<00:25:44.640><c> detail</c><00:25:45.360><c> you</c><00:25:45.520><c> can</c><00:25:45.600><c> take</c><00:25:45.760><c> a</c><00:25:45.840><c> look</c><00:25:46.000><c> at</c>

00:25:46.149 --> 00:25:46.159 align:start position:0%
complete detail you can take a look at
 

00:25:46.159 --> 00:25:48.950 align:start position:0%
complete detail you can take a look at
graphless<00:25:46.720><c> and</c><00:25:46.799><c> its</c><00:25:46.960><c> api</c><00:25:47.840><c> uh</c><00:25:48.000><c> graphis</c><00:25:48.559><c> is</c><00:25:48.720><c> a</c>

00:25:48.950 --> 00:25:48.960 align:start position:0%
graphless and its api uh graphis is a
 

00:25:48.960 --> 00:25:51.350 align:start position:0%
graphless and its api uh graphis is a
open<00:25:49.200><c> source</c><00:25:49.440><c> graph</c><00:25:49.679><c> visualization</c><00:25:50.320><c> software</c>

00:25:51.350 --> 00:25:51.360 align:start position:0%
open source graph visualization software
 

00:25:51.360 --> 00:25:52.470 align:start position:0%
open source graph visualization software
and<00:25:51.520><c> what</c><00:25:51.679><c> we're</c><00:25:51.840><c> doing</c><00:25:52.000><c> here</c><00:25:52.159><c> is</c><00:25:52.240><c> we're</c>

00:25:52.470 --> 00:25:52.480 align:start position:0%
and what we're doing here is we're
 

00:25:52.480 --> 00:25:54.830 align:start position:0%
and what we're doing here is we're
building<00:25:52.799><c> out</c><00:25:52.880><c> this</c><00:25:53.120><c> graph</c><00:25:53.520><c> and</c><00:25:53.679><c> graphis</c>

00:25:54.830 --> 00:25:54.840 align:start position:0%
building out this graph and graphis
 

00:25:54.840 --> 00:25:56.950 align:start position:0%
building out this graph and graphis
api<00:25:55.760><c> and</c>

00:25:56.950 --> 00:25:56.960 align:start position:0%
api and
 

00:25:56.960 --> 00:25:58.870 align:start position:0%
api and
you<00:25:57.039><c> can</c><00:25:57.200><c> basically</c><00:25:57.600><c> see</c><00:25:57.760><c> that</c><00:25:58.080><c> trace</c><00:25:58.559><c> is</c><00:25:58.720><c> this</c>

00:25:58.870 --> 00:25:58.880 align:start position:0%
you can basically see that trace is this
 

00:25:58.880 --> 00:26:00.789 align:start position:0%
you can basically see that trace is this
helper<00:25:59.200><c> function</c><00:25:59.679><c> that</c><00:26:00.000><c> enumerates</c><00:26:00.559><c> all</c><00:26:00.720><c> of</c>

00:26:00.789 --> 00:26:00.799 align:start position:0%
helper function that enumerates all of
 

00:26:00.799 --> 00:26:02.789 align:start position:0%
helper function that enumerates all of
the<00:26:00.880><c> nodes</c><00:26:01.200><c> and</c><00:26:01.360><c> edges</c><00:26:01.679><c> in</c><00:26:01.760><c> the</c><00:26:01.919><c> graph</c>

00:26:02.789 --> 00:26:02.799 align:start position:0%
the nodes and edges in the graph
 

00:26:02.799 --> 00:26:04.230 align:start position:0%
the nodes and edges in the graph
so<00:26:03.039><c> that</c><00:26:03.200><c> just</c><00:26:03.360><c> builds</c><00:26:03.600><c> a</c><00:26:03.679><c> set</c><00:26:03.919><c> of</c><00:26:04.000><c> all</c><00:26:04.080><c> the</c>

00:26:04.230 --> 00:26:04.240 align:start position:0%
so that just builds a set of all the
 

00:26:04.240 --> 00:26:06.070 align:start position:0%
so that just builds a set of all the
nodes<00:26:04.480><c> and</c><00:26:04.640><c> edges</c><00:26:05.279><c> and</c><00:26:05.360><c> then</c><00:26:05.520><c> we</c><00:26:05.600><c> iterate</c><00:26:05.919><c> for</c>

00:26:06.070 --> 00:26:06.080 align:start position:0%
nodes and edges and then we iterate for
 

00:26:06.080 --> 00:26:07.990 align:start position:0%
nodes and edges and then we iterate for
all<00:26:06.240><c> the</c><00:26:06.400><c> nodes</c><00:26:06.720><c> and</c><00:26:06.799><c> we</c><00:26:06.960><c> create</c><00:26:07.200><c> special</c><00:26:07.679><c> node</c>

00:26:07.990 --> 00:26:08.000 align:start position:0%
all the nodes and we create special node
 

00:26:08.000 --> 00:26:08.870 align:start position:0%
all the nodes and we create special node
objects

00:26:08.870 --> 00:26:08.880 align:start position:0%
objects
 

00:26:08.880 --> 00:26:11.350 align:start position:0%
objects
for<00:26:09.120><c> them</c><00:26:09.520><c> in</c>

00:26:11.350 --> 00:26:11.360 align:start position:0%
for them in
 

00:26:11.360 --> 00:26:13.110 align:start position:0%
for them in
using<00:26:11.760><c> dot</c><00:26:12.159><c> node</c>

00:26:13.110 --> 00:26:13.120 align:start position:0%
using dot node
 

00:26:13.120 --> 00:26:15.669 align:start position:0%
using dot node
and<00:26:13.600><c> then</c><00:26:13.840><c> we</c><00:26:14.000><c> also</c><00:26:14.480><c> create</c><00:26:14.720><c> edges</c><00:26:15.120><c> using</c><00:26:15.440><c> dot</c>

00:26:15.669 --> 00:26:15.679 align:start position:0%
and then we also create edges using dot
 

00:26:15.679 --> 00:26:16.789 align:start position:0%
and then we also create edges using dot
dot<00:26:15.919><c> edge</c>

00:26:16.789 --> 00:26:16.799 align:start position:0%
dot edge
 

00:26:16.799 --> 00:26:18.070 align:start position:0%
dot edge
and<00:26:16.960><c> the</c><00:26:17.120><c> only</c><00:26:17.279><c> thing</c><00:26:17.440><c> that's</c><00:26:17.600><c> like</c><00:26:17.760><c> slightly</c>

00:26:18.070 --> 00:26:18.080 align:start position:0%
and the only thing that's like slightly
 

00:26:18.080 --> 00:26:20.390 align:start position:0%
and the only thing that's like slightly
tricky<00:26:18.480><c> here</c><00:26:18.799><c> is</c><00:26:19.360><c> you'll</c><00:26:19.600><c> notice</c><00:26:19.840><c> that</c><00:26:20.000><c> i</c>

00:26:20.390 --> 00:26:20.400 align:start position:0%
tricky here is you'll notice that i
 

00:26:20.400 --> 00:26:22.390 align:start position:0%
tricky here is you'll notice that i
basically<00:26:20.880><c> add</c><00:26:21.039><c> these</c><00:26:21.360><c> fake</c><00:26:21.679><c> nodes</c><00:26:22.080><c> which</c><00:26:22.320><c> are</c>

00:26:22.390 --> 00:26:22.400 align:start position:0%
basically add these fake nodes which are
 

00:26:22.400 --> 00:26:24.710 align:start position:0%
basically add these fake nodes which are
these<00:26:22.720><c> operation</c><00:26:23.200><c> nodes</c><00:26:23.840><c> so</c><00:26:24.000><c> for</c><00:26:24.159><c> example</c>

00:26:24.710 --> 00:26:24.720 align:start position:0%
these operation nodes so for example
 

00:26:24.720 --> 00:26:27.669 align:start position:0%
these operation nodes so for example
this<00:26:24.960><c> node</c><00:26:25.279><c> here</c><00:26:25.679><c> is</c><00:26:25.840><c> just</c><00:26:26.080><c> like</c><00:26:26.320><c> a</c><00:26:26.400><c> plus</c><00:26:26.720><c> node</c>

00:26:27.669 --> 00:26:27.679 align:start position:0%
this node here is just like a plus node
 

00:26:27.679 --> 00:26:28.789 align:start position:0%
this node here is just like a plus node
and

00:26:28.789 --> 00:26:28.799 align:start position:0%
and
 

00:26:28.799 --> 00:26:31.750 align:start position:0%
and
i<00:26:28.960><c> create</c><00:26:29.600><c> these</c>

00:26:31.750 --> 00:26:31.760 align:start position:0%
i create these
 

00:26:31.760 --> 00:26:34.390 align:start position:0%
i create these
special<00:26:32.240><c> op</c><00:26:32.559><c> nodes</c><00:26:33.440><c> here</c>

00:26:34.390 --> 00:26:34.400 align:start position:0%
special op nodes here
 

00:26:34.400 --> 00:26:37.669 align:start position:0%
special op nodes here
and<00:26:34.720><c> i</c><00:26:34.880><c> connect</c><00:26:35.279><c> them</c><00:26:35.679><c> accordingly</c><00:26:36.799><c> so</c><00:26:37.360><c> these</c>

00:26:37.669 --> 00:26:37.679 align:start position:0%
and i connect them accordingly so these
 

00:26:37.679 --> 00:26:39.510 align:start position:0%
and i connect them accordingly so these
nodes<00:26:37.919><c> of</c><00:26:38.000><c> course</c><00:26:38.320><c> are</c><00:26:38.400><c> not</c><00:26:38.640><c> actual</c>

00:26:39.510 --> 00:26:39.520 align:start position:0%
nodes of course are not actual
 

00:26:39.520 --> 00:26:41.669 align:start position:0%
nodes of course are not actual
nodes<00:26:40.080><c> in</c><00:26:40.159><c> the</c><00:26:40.320><c> original</c><00:26:40.720><c> graph</c>

00:26:41.669 --> 00:26:41.679 align:start position:0%
nodes in the original graph
 

00:26:41.679 --> 00:26:43.909 align:start position:0%
nodes in the original graph
they're<00:26:41.840><c> not</c><00:26:42.159><c> actually</c><00:26:42.480><c> a</c><00:26:42.559><c> value</c><00:26:42.960><c> object</c><00:26:43.760><c> the</c>

00:26:43.909 --> 00:26:43.919 align:start position:0%
they're not actually a value object the
 

00:26:43.919 --> 00:26:46.149 align:start position:0%
they're not actually a value object the
only<00:26:44.159><c> value</c><00:26:44.559><c> objects</c><00:26:45.039><c> here</c><00:26:45.360><c> are</c><00:26:45.600><c> the</c><00:26:45.840><c> things</c>

00:26:46.149 --> 00:26:46.159 align:start position:0%
only value objects here are the things
 

00:26:46.159 --> 00:26:48.149 align:start position:0%
only value objects here are the things
in<00:26:46.400><c> squares</c><00:26:47.039><c> those</c><00:26:47.279><c> are</c><00:26:47.440><c> actual</c><00:26:47.760><c> value</c>

00:26:48.149 --> 00:26:48.159 align:start position:0%
in squares those are actual value
 

00:26:48.159 --> 00:26:50.549 align:start position:0%
in squares those are actual value
objects<00:26:48.799><c> or</c><00:26:48.960><c> representations</c><00:26:49.600><c> thereof</c><00:26:50.400><c> and</c>

00:26:50.549 --> 00:26:50.559 align:start position:0%
objects or representations thereof and
 

00:26:50.559 --> 00:26:52.390 align:start position:0%
objects or representations thereof and
these<00:26:50.799><c> op</c><00:26:50.960><c> nodes</c><00:26:51.279><c> are</c><00:26:51.360><c> just</c><00:26:51.520><c> created</c><00:26:51.919><c> in</c><00:26:52.080><c> this</c>

00:26:52.390 --> 00:26:52.400 align:start position:0%
these op nodes are just created in this
 

00:26:52.400 --> 00:26:55.510 align:start position:0%
these op nodes are just created in this
drawdot<00:26:53.120><c> routine</c><00:26:53.760><c> so</c><00:26:53.919><c> that</c><00:26:54.080><c> it</c><00:26:54.159><c> looks</c><00:26:54.480><c> nice</c>

00:26:55.510 --> 00:26:55.520 align:start position:0%
drawdot routine so that it looks nice
 

00:26:55.520 --> 00:26:57.430 align:start position:0%
drawdot routine so that it looks nice
let's<00:26:55.760><c> also</c><00:26:56.159><c> add</c><00:26:56.480><c> labels</c><00:26:56.799><c> to</c><00:26:56.960><c> these</c><00:26:57.200><c> graphs</c>

00:26:57.430 --> 00:26:57.440 align:start position:0%
let's also add labels to these graphs
 

00:26:57.440 --> 00:26:59.909 align:start position:0%
let's also add labels to these graphs
just<00:26:57.600><c> so</c><00:26:57.760><c> we</c><00:26:57.840><c> know</c><00:26:58.000><c> what</c><00:26:58.240><c> variables</c><00:26:58.880><c> are</c><00:26:59.120><c> where</c>

00:26:59.909 --> 00:26:59.919 align:start position:0%
just so we know what variables are where
 

00:26:59.919 --> 00:27:01.750 align:start position:0%
just so we know what variables are where
so<00:27:00.080><c> let's</c><00:27:00.320><c> create</c><00:27:00.559><c> a</c><00:27:00.720><c> special</c><00:27:01.279><c> underscore</c>

00:27:01.750 --> 00:27:01.760 align:start position:0%
so let's create a special underscore
 

00:27:01.760 --> 00:27:02.870 align:start position:0%
so let's create a special underscore
label

00:27:02.870 --> 00:27:02.880 align:start position:0%
label
 

00:27:02.880 --> 00:27:03.909 align:start position:0%
label
um

00:27:03.909 --> 00:27:03.919 align:start position:0%
um
 

00:27:03.919 --> 00:27:05.430 align:start position:0%
um
or<00:27:04.080><c> let's</c><00:27:04.240><c> just</c><00:27:04.400><c> do</c><00:27:04.559><c> label</c>

00:27:05.430 --> 00:27:05.440 align:start position:0%
or let's just do label
 

00:27:05.440 --> 00:27:08.390 align:start position:0%
or let's just do label
equals<00:27:06.159><c> empty</c><00:27:06.480><c> by</c><00:27:06.640><c> default</c><00:27:07.600><c> and</c><00:27:07.760><c> save</c><00:27:08.000><c> it</c><00:27:08.240><c> in</c>

00:27:08.390 --> 00:27:08.400 align:start position:0%
equals empty by default and save it in
 

00:27:08.400 --> 00:27:11.269 align:start position:0%
equals empty by default and save it in
each<00:27:08.640><c> node</c>

00:27:11.269 --> 00:27:11.279 align:start position:0%
 
 

00:27:11.279 --> 00:27:13.269 align:start position:0%
 
and<00:27:11.440><c> then</c><00:27:11.679><c> here</c><00:27:12.080><c> we're</c><00:27:12.320><c> going</c><00:27:12.400><c> to</c><00:27:12.480><c> do</c><00:27:12.720><c> label</c><00:27:13.039><c> as</c>

00:27:13.269 --> 00:27:13.279 align:start position:0%
and then here we're going to do label as
 

00:27:13.279 --> 00:27:15.350 align:start position:0%
and then here we're going to do label as
a

00:27:15.350 --> 00:27:15.360 align:start position:0%
a
 

00:27:15.360 --> 00:27:17.830 align:start position:0%
a
label<00:27:15.840><c> is</c><00:27:16.000><c> the</c>

00:27:17.830 --> 00:27:17.840 align:start position:0%
label is the
 

00:27:17.840 --> 00:27:22.789 align:start position:0%
label is the
label<00:27:18.240><c> a</c><00:27:18.399><c> c</c>

00:27:22.789 --> 00:27:22.799 align:start position:0%
 
 

00:27:22.799 --> 00:27:24.789 align:start position:0%
 
and<00:27:23.039><c> then</c>

00:27:24.789 --> 00:27:24.799 align:start position:0%
and then
 

00:27:24.799 --> 00:27:27.669 align:start position:0%
and then
let's<00:27:25.279><c> create</c><00:27:25.520><c> a</c><00:27:25.679><c> special</c><00:27:26.480><c> um</c>

00:27:27.669 --> 00:27:27.679 align:start position:0%
let's create a special um
 

00:27:27.679 --> 00:27:30.789 align:start position:0%
let's create a special um
e<00:27:27.840><c> equals</c><00:27:28.159><c> a</c><00:27:28.320><c> times</c><00:27:28.640><c> b</c>

00:27:30.789 --> 00:27:30.799 align:start position:0%
 
 

00:27:30.799 --> 00:27:34.070 align:start position:0%
 
and<00:27:31.039><c> e</c><00:27:31.200><c> dot</c><00:27:31.520><c> label</c><00:27:32.000><c> will</c><00:27:32.159><c> be</c><00:27:32.399><c> e</c>

00:27:34.070 --> 00:27:34.080 align:start position:0%
and e dot label will be e
 

00:27:34.080 --> 00:27:35.669 align:start position:0%
and e dot label will be e
it's<00:27:34.240><c> kind</c><00:27:34.399><c> of</c><00:27:34.480><c> naughty</c>

00:27:35.669 --> 00:27:35.679 align:start position:0%
it's kind of naughty
 

00:27:35.679 --> 00:27:38.149 align:start position:0%
it's kind of naughty
and<00:27:35.919><c> e</c><00:27:36.159><c> will</c><00:27:36.320><c> be</c><00:27:36.559><c> e</c><00:27:36.720><c> plus</c><00:27:37.039><c> c</c>

00:27:38.149 --> 00:27:38.159 align:start position:0%
and e will be e plus c
 

00:27:38.159 --> 00:27:40.789 align:start position:0%
and e will be e plus c
and<00:27:38.559><c> a</c><00:27:38.720><c> d</c><00:27:38.880><c> dot</c><00:27:39.120><c> label</c><00:27:39.600><c> will</c><00:27:39.760><c> be</c>

00:27:40.789 --> 00:27:40.799 align:start position:0%
and a d dot label will be
 

00:27:40.799 --> 00:27:42.549 align:start position:0%
and a d dot label will be
d

00:27:42.549 --> 00:27:42.559 align:start position:0%
d
 

00:27:42.559 --> 00:27:44.230 align:start position:0%
d
okay<00:27:42.799><c> so</c><00:27:42.960><c> nothing</c><00:27:43.279><c> really</c><00:27:43.520><c> changes</c><00:27:43.919><c> i</c><00:27:44.000><c> just</c>

00:27:44.230 --> 00:27:44.240 align:start position:0%
okay so nothing really changes i just
 

00:27:44.240 --> 00:27:46.389 align:start position:0%
okay so nothing really changes i just
added<00:27:44.480><c> this</c><00:27:44.640><c> new</c><00:27:44.960><c> e</c><00:27:45.440><c> function</c>

00:27:46.389 --> 00:27:46.399 align:start position:0%
added this new e function
 

00:27:46.399 --> 00:27:48.470 align:start position:0%
added this new e function
a<00:27:46.640><c> new</c><00:27:46.960><c> e</c><00:27:47.120><c> variable</c>

00:27:48.470 --> 00:27:48.480 align:start position:0%
a new e variable
 

00:27:48.480 --> 00:27:50.549 align:start position:0%
a new e variable
and<00:27:48.640><c> then</c><00:27:48.880><c> here</c><00:27:49.440><c> when</c><00:27:49.679><c> we</c><00:27:49.840><c> are</c>

00:27:50.549 --> 00:27:50.559 align:start position:0%
and then here when we are
 

00:27:50.559 --> 00:27:51.830 align:start position:0%
and then here when we are
printing<00:27:51.039><c> this</c>

00:27:51.830 --> 00:27:51.840 align:start position:0%
printing this
 

00:27:51.840 --> 00:27:54.230 align:start position:0%
printing this
i'm<00:27:52.000><c> going</c><00:27:52.159><c> to</c><00:27:52.320><c> print</c><00:27:52.559><c> the</c><00:27:52.720><c> label</c><00:27:53.279><c> here</c><00:27:54.080><c> so</c>

00:27:54.230 --> 00:27:54.240 align:start position:0%
i'm going to print the label here so
 

00:27:54.240 --> 00:27:56.070 align:start position:0%
i'm going to print the label here so
this<00:27:54.399><c> will</c><00:27:54.559><c> be</c><00:27:54.640><c> a</c><00:27:54.720><c> percent</c><00:27:55.200><c> s</c>

00:27:56.070 --> 00:27:56.080 align:start position:0%
this will be a percent s
 

00:27:56.080 --> 00:27:56.870 align:start position:0%
this will be a percent s
bar

00:27:56.870 --> 00:27:56.880 align:start position:0%
bar
 

00:27:56.880 --> 00:28:01.269 align:start position:0%
bar
and<00:27:56.960><c> this</c><00:27:57.120><c> will</c><00:27:57.279><c> be</c><00:27:57.520><c> end.label</c>

00:28:01.269 --> 00:28:01.279 align:start position:0%
 
 

00:28:01.279 --> 00:28:03.430 align:start position:0%
 
and<00:28:01.440><c> so</c><00:28:01.679><c> now</c>

00:28:03.430 --> 00:28:03.440 align:start position:0%
and so now
 

00:28:03.440 --> 00:28:05.190 align:start position:0%
and so now
we<00:28:03.520><c> have</c><00:28:03.679><c> the</c><00:28:03.840><c> label</c><00:28:04.320><c> on</c><00:28:04.399><c> the</c><00:28:04.559><c> left</c><00:28:04.720><c> here</c><00:28:04.960><c> so</c><00:28:05.120><c> it</c>

00:28:05.190 --> 00:28:05.200 align:start position:0%
we have the label on the left here so it
 

00:28:05.200 --> 00:28:07.669 align:start position:0%
we have the label on the left here so it
says<00:28:05.360><c> a</c><00:28:05.600><c> b</c><00:28:05.840><c> creating</c><00:28:06.240><c> e</c><00:28:06.720><c> and</c><00:28:06.799><c> then</c><00:28:06.960><c> e</c><00:28:07.200><c> plus</c><00:28:07.360><c> c</c>

00:28:07.669 --> 00:28:07.679 align:start position:0%
says a b creating e and then e plus c
 

00:28:07.679 --> 00:28:08.710 align:start position:0%
says a b creating e and then e plus c
creates<00:28:08.080><c> d</c>

00:28:08.710 --> 00:28:08.720 align:start position:0%
creates d
 

00:28:08.720 --> 00:28:10.789 align:start position:0%
creates d
just<00:28:08.960><c> like</c><00:28:09.520><c> we</c><00:28:09.679><c> have</c><00:28:09.840><c> it</c><00:28:10.000><c> here</c>

00:28:10.789 --> 00:28:10.799 align:start position:0%
just like we have it here
 

00:28:10.799 --> 00:28:12.310 align:start position:0%
just like we have it here
and<00:28:10.960><c> finally</c><00:28:11.360><c> let's</c><00:28:11.520><c> make</c><00:28:11.679><c> this</c><00:28:11.919><c> expression</c>

00:28:12.310 --> 00:28:12.320 align:start position:0%
and finally let's make this expression
 

00:28:12.320 --> 00:28:14.310 align:start position:0%
and finally let's make this expression
just<00:28:12.640><c> one</c><00:28:12.799><c> layer</c><00:28:13.120><c> deeper</c>

00:28:14.310 --> 00:28:14.320 align:start position:0%
just one layer deeper
 

00:28:14.320 --> 00:28:17.190 align:start position:0%
just one layer deeper
so<00:28:14.559><c> d</c><00:28:14.799><c> will</c><00:28:14.960><c> not</c><00:28:15.120><c> be</c><00:28:15.279><c> the</c><00:28:15.360><c> final</c><00:28:15.840><c> output</c><00:28:16.159><c> node</c>

00:28:17.190 --> 00:28:17.200 align:start position:0%
so d will not be the final output node
 

00:28:17.200 --> 00:28:19.990 align:start position:0%
so d will not be the final output node
instead<00:28:18.000><c> after</c><00:28:18.399><c> d</c><00:28:18.960><c> we</c><00:28:19.120><c> are</c><00:28:19.200><c> going</c><00:28:19.440><c> to</c><00:28:19.600><c> create</c><00:28:19.919><c> a</c>

00:28:19.990 --> 00:28:20.000 align:start position:0%
instead after d we are going to create a
 

00:28:20.000 --> 00:28:21.750 align:start position:0%
instead after d we are going to create a
new<00:28:20.240><c> value</c><00:28:20.559><c> object</c>

00:28:21.750 --> 00:28:21.760 align:start position:0%
new value object
 

00:28:21.760 --> 00:28:23.669 align:start position:0%
new value object
called<00:28:22.159><c> f</c><00:28:22.799><c> we're</c><00:28:22.960><c> going</c><00:28:23.039><c> to</c><00:28:23.120><c> start</c><00:28:23.360><c> running</c>

00:28:23.669 --> 00:28:23.679 align:start position:0%
called f we're going to start running
 

00:28:23.679 --> 00:28:25.909 align:start position:0%
called f we're going to start running
out<00:28:23.760><c> of</c><00:28:24.080><c> variables</c><00:28:24.480><c> soon</c><00:28:25.200><c> f</c><00:28:25.360><c> will</c><00:28:25.440><c> be</c><00:28:25.600><c> negative</c>

00:28:25.909 --> 00:28:25.919 align:start position:0%
out of variables soon f will be negative
 

00:28:25.919 --> 00:28:27.350 align:start position:0%
out of variables soon f will be negative
2.0

00:28:27.350 --> 00:28:27.360 align:start position:0%
2.0
 

00:28:27.360 --> 00:28:30.549 align:start position:0%
2.0
and<00:28:27.679><c> its</c><00:28:27.919><c> label</c><00:28:28.240><c> will</c><00:28:28.399><c> of</c><00:28:28.480><c> course</c><00:28:28.799><c> just</c><00:28:28.960><c> be</c><00:28:29.120><c> f</c>

00:28:30.549 --> 00:28:30.559 align:start position:0%
and its label will of course just be f
 

00:28:30.559 --> 00:28:34.149 align:start position:0%
and its label will of course just be f
and<00:28:30.799><c> then</c><00:28:31.520><c> l</c><00:28:32.159><c> capital</c><00:28:32.640><c> l</c><00:28:32.960><c> will</c><00:28:33.120><c> be</c><00:28:33.279><c> the</c><00:28:33.520><c> output</c>

00:28:34.149 --> 00:28:34.159 align:start position:0%
and then l capital l will be the output
 

00:28:34.159 --> 00:28:35.430 align:start position:0%
and then l capital l will be the output
of<00:28:34.320><c> our</c><00:28:34.480><c> graph</c>

00:28:35.430 --> 00:28:35.440 align:start position:0%
of our graph
 

00:28:35.440 --> 00:28:37.990 align:start position:0%
of our graph
and<00:28:35.679><c> l</c><00:28:35.840><c> will</c><00:28:36.000><c> be</c><00:28:36.159><c> p</c><00:28:36.320><c> times</c><00:28:36.640><c> f</c>

00:28:37.990 --> 00:28:38.000 align:start position:0%
and l will be p times f
 

00:28:38.000 --> 00:28:38.789 align:start position:0%
and l will be p times f
okay

00:28:38.789 --> 00:28:38.799 align:start position:0%
okay
 

00:28:38.799 --> 00:28:40.310 align:start position:0%
okay
so<00:28:38.960><c> l</c><00:28:39.200><c> will</c><00:28:39.279><c> be</c><00:28:39.440><c> negative</c><00:28:39.760><c> eight</c><00:28:40.080><c> is</c><00:28:40.159><c> the</c>

00:28:40.310 --> 00:28:40.320 align:start position:0%
so l will be negative eight is the
 

00:28:40.320 --> 00:28:42.830 align:start position:0%
so l will be negative eight is the
output

00:28:42.830 --> 00:28:42.840 align:start position:0%
 
 

00:28:42.840 --> 00:28:44.710 align:start position:0%
 
so

00:28:44.710 --> 00:28:44.720 align:start position:0%
so
 

00:28:44.720 --> 00:28:49.990 align:start position:0%
so
now<00:28:44.960><c> we</c><00:28:45.120><c> don't</c><00:28:45.360><c> just</c><00:28:45.520><c> draw</c><00:28:45.919><c> a</c><00:28:46.080><c> d</c><00:28:46.640><c> we</c><00:28:46.880><c> draw</c><00:28:47.360><c> l</c>

00:28:49.990 --> 00:28:50.000 align:start position:0%
 
 

00:28:50.000 --> 00:28:51.990 align:start position:0%
 
okay

00:28:51.990 --> 00:28:52.000 align:start position:0%
okay
 

00:28:52.000 --> 00:28:53.990 align:start position:0%
okay
and<00:28:52.159><c> somehow</c><00:28:52.799><c> the</c><00:28:52.960><c> label</c><00:28:53.279><c> of</c>

00:28:53.990 --> 00:28:54.000 align:start position:0%
and somehow the label of
 

00:28:54.000 --> 00:28:56.389 align:start position:0%
and somehow the label of
l<00:28:54.159><c> was</c><00:28:54.399><c> undefined</c><00:28:54.960><c> oops</c><00:28:55.600><c> all</c><00:28:55.760><c> that</c><00:28:56.000><c> label</c><00:28:56.320><c> has</c>

00:28:56.389 --> 00:28:56.399 align:start position:0%
l was undefined oops all that label has
 

00:28:56.399 --> 00:28:59.669 align:start position:0%
l was undefined oops all that label has
to<00:28:56.480><c> be</c><00:28:56.840><c> explicitly</c><00:28:57.600><c> sort</c><00:28:57.840><c> of</c><00:28:57.919><c> given</c><00:28:58.159><c> to</c><00:28:58.399><c> it</c>

00:28:59.669 --> 00:28:59.679 align:start position:0%
to be explicitly sort of given to it
 

00:28:59.679 --> 00:29:01.669 align:start position:0%
to be explicitly sort of given to it
there<00:28:59.840><c> we</c><00:28:59.919><c> go</c><00:29:00.080><c> so</c><00:29:00.320><c> l</c><00:29:00.480><c> is</c><00:29:00.559><c> the</c><00:29:00.720><c> output</c>

00:29:01.669 --> 00:29:01.679 align:start position:0%
there we go so l is the output
 

00:29:01.679 --> 00:29:03.190 align:start position:0%
there we go so l is the output
so<00:29:01.840><c> let's</c><00:29:02.080><c> quickly</c><00:29:02.320><c> recap</c><00:29:02.720><c> what</c><00:29:02.799><c> we've</c><00:29:02.960><c> done</c>

00:29:03.190 --> 00:29:03.200 align:start position:0%
so let's quickly recap what we've done
 

00:29:03.200 --> 00:29:04.070 align:start position:0%
so let's quickly recap what we've done
so<00:29:03.360><c> far</c>

00:29:04.070 --> 00:29:04.080 align:start position:0%
so far
 

00:29:04.080 --> 00:29:05.669 align:start position:0%
so far
we<00:29:04.240><c> are</c><00:29:04.399><c> able</c><00:29:04.559><c> to</c><00:29:04.720><c> build</c><00:29:04.960><c> out</c><00:29:05.120><c> mathematical</c>

00:29:05.669 --> 00:29:05.679 align:start position:0%
we are able to build out mathematical
 

00:29:05.679 --> 00:29:07.990 align:start position:0%
we are able to build out mathematical
expressions<00:29:06.399><c> using</c><00:29:06.720><c> only</c><00:29:06.960><c> plus</c><00:29:07.279><c> and</c><00:29:07.360><c> times</c><00:29:07.760><c> so</c>

00:29:07.990 --> 00:29:08.000 align:start position:0%
expressions using only plus and times so
 

00:29:08.000 --> 00:29:09.190 align:start position:0%
expressions using only plus and times so
far

00:29:09.190 --> 00:29:09.200 align:start position:0%
far
 

00:29:09.200 --> 00:29:11.510 align:start position:0%
far
they<00:29:09.360><c> are</c><00:29:09.440><c> scalar</c><00:29:09.919><c> valued</c><00:29:10.399><c> along</c><00:29:10.640><c> the</c><00:29:10.799><c> way</c>

00:29:11.510 --> 00:29:11.520 align:start position:0%
they are scalar valued along the way
 

00:29:11.520 --> 00:29:14.230 align:start position:0%
they are scalar valued along the way
and<00:29:11.679><c> we</c><00:29:11.760><c> can</c><00:29:12.000><c> do</c><00:29:12.480><c> this</c><00:29:12.720><c> forward</c><00:29:13.120><c> pass</c>

00:29:14.230 --> 00:29:14.240 align:start position:0%
and we can do this forward pass
 

00:29:14.240 --> 00:29:16.389 align:start position:0%
and we can do this forward pass
and<00:29:14.399><c> build</c><00:29:14.640><c> out</c><00:29:14.799><c> a</c><00:29:14.880><c> mathematical</c><00:29:15.440><c> expression</c>

00:29:16.389 --> 00:29:16.399 align:start position:0%
and build out a mathematical expression
 

00:29:16.399 --> 00:29:18.630 align:start position:0%
and build out a mathematical expression
so<00:29:16.559><c> we</c><00:29:16.640><c> have</c><00:29:16.799><c> multiple</c><00:29:17.200><c> inputs</c><00:29:17.520><c> here</c><00:29:17.919><c> a</c><00:29:18.159><c> b</c><00:29:18.399><c> c</c>

00:29:18.630 --> 00:29:18.640 align:start position:0%
so we have multiple inputs here a b c
 

00:29:18.640 --> 00:29:19.510 align:start position:0%
so we have multiple inputs here a b c
and<00:29:18.880><c> f</c>

00:29:19.510 --> 00:29:19.520 align:start position:0%
and f
 

00:29:19.520 --> 00:29:21.510 align:start position:0%
and f
going<00:29:19.760><c> into</c><00:29:20.080><c> a</c><00:29:20.320><c> mathematical</c><00:29:20.960><c> expression</c>

00:29:21.510 --> 00:29:21.520 align:start position:0%
going into a mathematical expression
 

00:29:21.520 --> 00:29:23.990 align:start position:0%
going into a mathematical expression
that<00:29:21.679><c> produces</c><00:29:22.080><c> a</c><00:29:22.159><c> single</c><00:29:22.480><c> output</c><00:29:23.120><c> l</c>

00:29:23.990 --> 00:29:24.000 align:start position:0%
that produces a single output l
 

00:29:24.000 --> 00:29:26.389 align:start position:0%
that produces a single output l
and<00:29:24.159><c> this</c><00:29:24.559><c> here</c><00:29:25.200><c> is</c><00:29:25.360><c> visualizing</c><00:29:25.919><c> the</c><00:29:26.000><c> forward</c>

00:29:26.389 --> 00:29:26.399 align:start position:0%
and this here is visualizing the forward
 

00:29:26.399 --> 00:29:28.710 align:start position:0%
and this here is visualizing the forward
pass<00:29:27.200><c> so</c><00:29:27.360><c> the</c><00:29:27.520><c> output</c><00:29:27.840><c> of</c><00:29:27.919><c> the</c><00:29:28.000><c> forward</c><00:29:28.320><c> pass</c>

00:29:28.710 --> 00:29:28.720 align:start position:0%
pass so the output of the forward pass
 

00:29:28.720 --> 00:29:31.590 align:start position:0%
pass so the output of the forward pass
is<00:29:29.039><c> negative</c><00:29:29.440><c> eight</c><00:29:29.840><c> that's</c><00:29:30.080><c> the</c><00:29:30.240><c> value</c>

00:29:31.590 --> 00:29:31.600 align:start position:0%
is negative eight that's the value
 

00:29:31.600 --> 00:29:33.269 align:start position:0%
is negative eight that's the value
now<00:29:31.919><c> what</c><00:29:32.159><c> we'd</c><00:29:32.320><c> like</c><00:29:32.480><c> to</c><00:29:32.559><c> do</c><00:29:32.720><c> next</c><00:29:33.039><c> is</c><00:29:33.200><c> we'd</c>

00:29:33.269 --> 00:29:33.279 align:start position:0%
now what we'd like to do next is we'd
 

00:29:33.279 --> 00:29:35.350 align:start position:0%
now what we'd like to do next is we'd
like<00:29:33.440><c> to</c><00:29:33.679><c> run</c><00:29:33.919><c> back</c><00:29:34.159><c> propagation</c>

00:29:35.350 --> 00:29:35.360 align:start position:0%
like to run back propagation
 

00:29:35.360 --> 00:29:37.190 align:start position:0%
like to run back propagation
and<00:29:35.600><c> in</c><00:29:35.760><c> back</c><00:29:35.919><c> propagation</c><00:29:36.559><c> we</c><00:29:36.720><c> are</c><00:29:36.880><c> going</c><00:29:37.039><c> to</c>

00:29:37.190 --> 00:29:37.200 align:start position:0%
and in back propagation we are going to
 

00:29:37.200 --> 00:29:39.590 align:start position:0%
and in back propagation we are going to
start<00:29:37.440><c> here</c><00:29:37.679><c> at</c><00:29:37.760><c> the</c><00:29:38.000><c> end</c><00:29:38.559><c> and</c><00:29:38.720><c> we're</c><00:29:38.880><c> going</c><00:29:39.039><c> to</c>

00:29:39.590 --> 00:29:39.600 align:start position:0%
start here at the end and we're going to
 

00:29:39.600 --> 00:29:40.870 align:start position:0%
start here at the end and we're going to
reverse

00:29:40.870 --> 00:29:40.880 align:start position:0%
reverse
 

00:29:40.880 --> 00:29:43.510 align:start position:0%
reverse
and<00:29:41.039><c> calculate</c><00:29:41.520><c> the</c><00:29:41.600><c> gradient</c><00:29:42.480><c> along</c><00:29:43.200><c> along</c>

00:29:43.510 --> 00:29:43.520 align:start position:0%
and calculate the gradient along along
 

00:29:43.520 --> 00:29:45.430 align:start position:0%
and calculate the gradient along along
all<00:29:43.679><c> these</c><00:29:43.919><c> intermediate</c><00:29:44.480><c> values</c>

00:29:45.430 --> 00:29:45.440 align:start position:0%
all these intermediate values
 

00:29:45.440 --> 00:29:46.789 align:start position:0%
all these intermediate values
and<00:29:45.600><c> really</c><00:29:45.840><c> what</c><00:29:45.919><c> we're</c><00:29:46.080><c> computing</c><00:29:46.640><c> for</c>

00:29:46.789 --> 00:29:46.799 align:start position:0%
and really what we're computing for
 

00:29:46.799 --> 00:29:48.870 align:start position:0%
and really what we're computing for
every<00:29:47.039><c> single</c><00:29:47.600><c> value</c><00:29:47.919><c> here</c>

00:29:48.870 --> 00:29:48.880 align:start position:0%
every single value here
 

00:29:48.880 --> 00:29:50.950 align:start position:0%
every single value here
um<00:29:49.360><c> we're</c><00:29:49.520><c> going</c><00:29:49.679><c> to</c><00:29:49.760><c> compute</c><00:29:50.159><c> the</c><00:29:50.240><c> derivative</c>

00:29:50.950 --> 00:29:50.960 align:start position:0%
um we're going to compute the derivative
 

00:29:50.960 --> 00:29:55.350 align:start position:0%
um we're going to compute the derivative
of<00:29:51.120><c> that</c><00:29:51.840><c> node</c><00:29:52.559><c> with</c><00:29:52.799><c> respect</c><00:29:53.200><c> to</c><00:29:54.080><c> l</c>

00:29:55.350 --> 00:29:55.360 align:start position:0%
of that node with respect to l
 

00:29:55.360 --> 00:29:56.149 align:start position:0%
of that node with respect to l
so

00:29:56.149 --> 00:29:56.159 align:start position:0%
so
 

00:29:56.159 --> 00:29:58.710 align:start position:0%
so
the<00:29:56.320><c> derivative</c><00:29:56.799><c> of</c><00:29:57.200><c> l</c><00:29:57.440><c> with</c><00:29:57.520><c> respect</c><00:29:57.840><c> to</c><00:29:58.080><c> l</c><00:29:58.559><c> is</c>

00:29:58.710 --> 00:29:58.720 align:start position:0%
the derivative of l with respect to l is
 

00:29:58.720 --> 00:30:00.470 align:start position:0%
the derivative of l with respect to l is
just<00:29:59.039><c> uh</c><00:29:59.440><c> one</c>

00:30:00.470 --> 00:30:00.480 align:start position:0%
just uh one
 

00:30:00.480 --> 00:30:01.750 align:start position:0%
just uh one
and<00:30:00.559><c> then</c><00:30:00.720><c> we're</c><00:30:00.880><c> going</c><00:30:01.039><c> to</c><00:30:01.120><c> derive</c><00:30:01.520><c> what</c><00:30:01.679><c> is</c>

00:30:01.750 --> 00:30:01.760 align:start position:0%
and then we're going to derive what is
 

00:30:01.760 --> 00:30:03.830 align:start position:0%
and then we're going to derive what is
the<00:30:02.000><c> derivative</c><00:30:02.480><c> of</c><00:30:02.640><c> l</c><00:30:02.799><c> with</c><00:30:02.960><c> respect</c><00:30:03.279><c> to</c><00:30:03.520><c> f</c>

00:30:03.830 --> 00:30:03.840 align:start position:0%
the derivative of l with respect to f
 

00:30:03.840 --> 00:30:06.310 align:start position:0%
the derivative of l with respect to f
with<00:30:04.000><c> respect</c><00:30:04.320><c> to</c><00:30:04.480><c> d</c><00:30:04.960><c> with</c><00:30:05.200><c> respect</c><00:30:05.520><c> to</c><00:30:05.679><c> c</c><00:30:06.159><c> with</c>

00:30:06.310 --> 00:30:06.320 align:start position:0%
with respect to d with respect to c with
 

00:30:06.320 --> 00:30:07.590 align:start position:0%
with respect to d with respect to c with
respect<00:30:06.640><c> to</c><00:30:06.799><c> e</c>

00:30:07.590 --> 00:30:07.600 align:start position:0%
respect to e
 

00:30:07.600 --> 00:30:10.310 align:start position:0%
respect to e
with<00:30:07.760><c> respect</c><00:30:08.080><c> to</c><00:30:08.240><c> b</c><00:30:08.559><c> and</c><00:30:08.720><c> with</c><00:30:08.880><c> respect</c><00:30:09.200><c> to</c><00:30:09.440><c> a</c>

00:30:10.310 --> 00:30:10.320 align:start position:0%
with respect to b and with respect to a
 

00:30:10.320 --> 00:30:12.070 align:start position:0%
with respect to b and with respect to a
and<00:30:10.559><c> in</c><00:30:10.640><c> the</c><00:30:10.720><c> neural</c><00:30:10.960><c> network</c><00:30:11.279><c> setting</c><00:30:11.919><c> you'd</c>

00:30:12.070 --> 00:30:12.080 align:start position:0%
and in the neural network setting you'd
 

00:30:12.080 --> 00:30:13.830 align:start position:0%
and in the neural network setting you'd
be<00:30:12.240><c> very</c><00:30:12.480><c> interested</c><00:30:13.039><c> in</c><00:30:13.120><c> the</c><00:30:13.279><c> derivative</c><00:30:13.760><c> of</c>

00:30:13.830 --> 00:30:13.840 align:start position:0%
be very interested in the derivative of
 

00:30:13.840 --> 00:30:16.710 align:start position:0%
be very interested in the derivative of
basically<00:30:14.240><c> this</c><00:30:14.720><c> loss</c><00:30:14.960><c> function</c><00:30:15.679><c> l</c>

00:30:16.710 --> 00:30:16.720 align:start position:0%
basically this loss function l
 

00:30:16.720 --> 00:30:18.389 align:start position:0%
basically this loss function l
with<00:30:16.880><c> respect</c><00:30:17.279><c> to</c><00:30:17.600><c> the</c><00:30:17.760><c> weights</c><00:30:18.000><c> of</c><00:30:18.080><c> a</c><00:30:18.159><c> neural</c>

00:30:18.389 --> 00:30:18.399 align:start position:0%
with respect to the weights of a neural
 

00:30:18.399 --> 00:30:19.350 align:start position:0%
with respect to the weights of a neural
network

00:30:19.350 --> 00:30:19.360 align:start position:0%
network
 

00:30:19.360 --> 00:30:20.710 align:start position:0%
network
and<00:30:19.600><c> here</c><00:30:19.840><c> of</c><00:30:19.919><c> course</c><00:30:20.080><c> we</c><00:30:20.240><c> have</c><00:30:20.320><c> just</c><00:30:20.480><c> these</c>

00:30:20.710 --> 00:30:20.720 align:start position:0%
and here of course we have just these
 

00:30:20.720 --> 00:30:22.389 align:start position:0%
and here of course we have just these
variables<00:30:21.200><c> a</c><00:30:21.279><c> b</c><00:30:21.440><c> c</c><00:30:21.679><c> and</c><00:30:21.760><c> f</c>

00:30:22.389 --> 00:30:22.399 align:start position:0%
variables a b c and f
 

00:30:22.399 --> 00:30:23.830 align:start position:0%
variables a b c and f
but<00:30:22.720><c> some</c><00:30:22.880><c> of</c><00:30:23.039><c> these</c><00:30:23.200><c> will</c><00:30:23.360><c> eventually</c>

00:30:23.830 --> 00:30:23.840 align:start position:0%
but some of these will eventually
 

00:30:23.840 --> 00:30:25.750 align:start position:0%
but some of these will eventually
represent<00:30:24.320><c> the</c><00:30:24.480><c> weights</c><00:30:24.720><c> of</c><00:30:24.880><c> a</c><00:30:24.960><c> neural</c><00:30:25.200><c> net</c>

00:30:25.750 --> 00:30:25.760 align:start position:0%
represent the weights of a neural net
 

00:30:25.760 --> 00:30:27.269 align:start position:0%
represent the weights of a neural net
and<00:30:25.919><c> so</c><00:30:26.080><c> we'll</c><00:30:26.240><c> need</c><00:30:26.399><c> to</c><00:30:26.559><c> know</c><00:30:26.880><c> how</c><00:30:27.039><c> those</c>

00:30:27.269 --> 00:30:27.279 align:start position:0%
and so we'll need to know how those
 

00:30:27.279 --> 00:30:29.110 align:start position:0%
and so we'll need to know how those
weights<00:30:27.760><c> are</c><00:30:28.000><c> impacting</c>

00:30:29.110 --> 00:30:29.120 align:start position:0%
weights are impacting
 

00:30:29.120 --> 00:30:31.029 align:start position:0%
weights are impacting
the<00:30:29.200><c> loss</c><00:30:29.520><c> function</c><00:30:30.240><c> so</c><00:30:30.399><c> we'll</c><00:30:30.559><c> be</c><00:30:30.640><c> interested</c>

00:30:31.029 --> 00:30:31.039 align:start position:0%
the loss function so we'll be interested
 

00:30:31.039 --> 00:30:32.230 align:start position:0%
the loss function so we'll be interested
basically<00:30:31.360><c> in</c><00:30:31.440><c> the</c><00:30:31.600><c> derivative</c><00:30:32.000><c> of</c><00:30:32.080><c> the</c>

00:30:32.230 --> 00:30:32.240 align:start position:0%
basically in the derivative of the
 

00:30:32.240 --> 00:30:34.630 align:start position:0%
basically in the derivative of the
output<00:30:32.960><c> with</c><00:30:33.120><c> respect</c><00:30:33.440><c> to</c><00:30:33.600><c> some</c><00:30:33.760><c> of</c><00:30:33.919><c> its</c><00:30:34.399><c> leaf</c>

00:30:34.630 --> 00:30:34.640 align:start position:0%
output with respect to some of its leaf
 

00:30:34.640 --> 00:30:36.549 align:start position:0%
output with respect to some of its leaf
nodes<00:30:35.279><c> and</c><00:30:35.360><c> those</c><00:30:35.600><c> leaf</c><00:30:35.760><c> nodes</c><00:30:36.080><c> will</c><00:30:36.159><c> be</c><00:30:36.320><c> the</c>

00:30:36.549 --> 00:30:36.559 align:start position:0%
nodes and those leaf nodes will be the
 

00:30:36.559 --> 00:30:38.070 align:start position:0%
nodes and those leaf nodes will be the
weights<00:30:36.799><c> of</c><00:30:36.960><c> the</c><00:30:37.039><c> neural</c><00:30:37.279><c> net</c>

00:30:38.070 --> 00:30:38.080 align:start position:0%
weights of the neural net
 

00:30:38.080 --> 00:30:39.510 align:start position:0%
weights of the neural net
and<00:30:38.240><c> the</c><00:30:38.399><c> other</c><00:30:38.559><c> leaf</c><00:30:38.799><c> nodes</c><00:30:39.039><c> of</c><00:30:39.120><c> course</c><00:30:39.360><c> will</c>

00:30:39.510 --> 00:30:39.520 align:start position:0%
and the other leaf nodes of course will
 

00:30:39.520 --> 00:30:41.669 align:start position:0%
and the other leaf nodes of course will
be<00:30:39.679><c> the</c><00:30:39.760><c> data</c><00:30:40.080><c> itself</c><00:30:40.799><c> but</c><00:30:41.039><c> usually</c><00:30:41.360><c> we</c><00:30:41.520><c> will</c>

00:30:41.669 --> 00:30:41.679 align:start position:0%
be the data itself but usually we will
 

00:30:41.679 --> 00:30:43.990 align:start position:0%
be the data itself but usually we will
not<00:30:42.000><c> want</c><00:30:42.320><c> or</c><00:30:42.559><c> use</c><00:30:43.200><c> the</c><00:30:43.360><c> derivative</c><00:30:43.840><c> of</c><00:30:43.919><c> the</c>

00:30:43.990 --> 00:30:44.000 align:start position:0%
not want or use the derivative of the
 

00:30:44.000 --> 00:30:45.750 align:start position:0%
not want or use the derivative of the
loss<00:30:44.240><c> function</c><00:30:44.559><c> with</c><00:30:44.720><c> respect</c><00:30:45.039><c> to</c><00:30:45.200><c> data</c>

00:30:45.750 --> 00:30:45.760 align:start position:0%
loss function with respect to data
 

00:30:45.760 --> 00:30:47.750 align:start position:0%
loss function with respect to data
because<00:30:46.000><c> the</c><00:30:46.159><c> data</c><00:30:46.399><c> is</c><00:30:46.559><c> fixed</c><00:30:47.360><c> but</c><00:30:47.600><c> the</c>

00:30:47.750 --> 00:30:47.760 align:start position:0%
because the data is fixed but the
 

00:30:47.760 --> 00:30:50.630 align:start position:0%
because the data is fixed but the
weights<00:30:48.080><c> will</c><00:30:48.240><c> be</c><00:30:48.880><c> iterated</c><00:30:49.440><c> on</c>

00:30:50.630 --> 00:30:50.640 align:start position:0%
weights will be iterated on
 

00:30:50.640 --> 00:30:52.549 align:start position:0%
weights will be iterated on
using<00:30:50.880><c> the</c><00:30:51.039><c> gradient</c><00:30:51.440><c> information</c><00:30:52.159><c> so</c><00:30:52.320><c> next</c>

00:30:52.549 --> 00:30:52.559 align:start position:0%
using the gradient information so next
 

00:30:52.559 --> 00:30:54.230 align:start position:0%
using the gradient information so next
we<00:30:52.720><c> are</c><00:30:52.799><c> going</c><00:30:52.960><c> to</c><00:30:53.039><c> create</c><00:30:53.279><c> a</c><00:30:53.360><c> variable</c><00:30:53.919><c> inside</c>

00:30:54.230 --> 00:30:54.240 align:start position:0%
we are going to create a variable inside
 

00:30:54.240 --> 00:30:57.029 align:start position:0%
we are going to create a variable inside
the<00:30:54.399><c> value</c><00:30:54.640><c> class</c><00:30:55.360><c> that</c><00:30:55.600><c> maintains</c><00:30:56.080><c> the</c>

00:30:57.029 --> 00:30:57.039 align:start position:0%
the value class that maintains the
 

00:30:57.039 --> 00:30:59.909 align:start position:0%
the value class that maintains the
derivative<00:30:58.000><c> of</c><00:30:58.240><c> l</c><00:30:58.559><c> with</c><00:30:58.720><c> respect</c><00:30:59.039><c> to</c><00:30:59.200><c> that</c>

00:30:59.909 --> 00:30:59.919 align:start position:0%
derivative of l with respect to that
 

00:30:59.919 --> 00:31:00.950 align:start position:0%
derivative of l with respect to that
value

00:31:00.950 --> 00:31:00.960 align:start position:0%
value
 

00:31:00.960 --> 00:31:03.750 align:start position:0%
value
and<00:31:01.200><c> we</c><00:31:01.360><c> will</c><00:31:01.600><c> call</c><00:31:01.760><c> this</c><00:31:01.919><c> variable</c><00:31:02.640><c> grad</c>

00:31:03.750 --> 00:31:03.760 align:start position:0%
and we will call this variable grad
 

00:31:03.760 --> 00:31:05.830 align:start position:0%
and we will call this variable grad
so<00:31:04.000><c> there's</c><00:31:04.320><c> a</c><00:31:04.640><c> data</c><00:31:05.279><c> and</c><00:31:05.360><c> there's</c><00:31:05.679><c> a</c>

00:31:05.830 --> 00:31:05.840 align:start position:0%
so there's a data and there's a
 

00:31:05.840 --> 00:31:07.190 align:start position:0%
so there's a data and there's a
self.grad

00:31:07.190 --> 00:31:07.200 align:start position:0%
self.grad
 

00:31:07.200 --> 00:31:09.590 align:start position:0%
self.grad
and<00:31:07.440><c> initially</c><00:31:08.240><c> it</c><00:31:08.320><c> will</c><00:31:08.480><c> be</c><00:31:08.640><c> zero</c><00:31:09.440><c> and</c>

00:31:09.590 --> 00:31:09.600 align:start position:0%
and initially it will be zero and
 

00:31:09.600 --> 00:31:12.230 align:start position:0%
and initially it will be zero and
remember<00:31:09.919><c> that</c><00:31:10.320><c> zero</c><00:31:10.720><c> is</c><00:31:10.799><c> basically</c><00:31:11.679><c> means</c><00:31:12.000><c> no</c>

00:31:12.230 --> 00:31:12.240 align:start position:0%
remember that zero is basically means no
 

00:31:12.240 --> 00:31:14.310 align:start position:0%
remember that zero is basically means no
effect<00:31:12.960><c> so</c><00:31:13.200><c> at</c><00:31:13.440><c> initialization</c><00:31:14.159><c> we're</c>

00:31:14.310 --> 00:31:14.320 align:start position:0%
effect so at initialization we're
 

00:31:14.320 --> 00:31:16.070 align:start position:0%
effect so at initialization we're
assuming<00:31:14.720><c> that</c><00:31:14.880><c> every</c><00:31:15.039><c> value</c><00:31:15.519><c> does</c><00:31:15.760><c> not</c>

00:31:16.070 --> 00:31:16.080 align:start position:0%
assuming that every value does not
 

00:31:16.080 --> 00:31:18.549 align:start position:0%
assuming that every value does not
impact<00:31:16.480><c> does</c><00:31:16.720><c> not</c><00:31:16.960><c> affect</c><00:31:17.840><c> the</c><00:31:18.000><c> out</c><00:31:18.399><c> the</c>

00:31:18.549 --> 00:31:18.559 align:start position:0%
impact does not affect the out the
 

00:31:18.559 --> 00:31:19.590 align:start position:0%
impact does not affect the out the
output

00:31:19.590 --> 00:31:19.600 align:start position:0%
output
 

00:31:19.600 --> 00:31:21.350 align:start position:0%
output
right<00:31:19.760><c> because</c><00:31:20.159><c> if</c><00:31:20.320><c> the</c><00:31:20.640><c> gradient</c><00:31:20.960><c> is</c><00:31:21.039><c> zero</c>

00:31:21.350 --> 00:31:21.360 align:start position:0%
right because if the gradient is zero
 

00:31:21.360 --> 00:31:23.190 align:start position:0%
right because if the gradient is zero
that<00:31:21.519><c> means</c><00:31:21.760><c> that</c><00:31:21.919><c> changing</c><00:31:22.399><c> this</c><00:31:22.559><c> variable</c>

00:31:23.190 --> 00:31:23.200 align:start position:0%
that means that changing this variable
 

00:31:23.200 --> 00:31:25.669 align:start position:0%
that means that changing this variable
is<00:31:23.360><c> not</c><00:31:23.600><c> changing</c><00:31:24.080><c> the</c><00:31:24.159><c> loss</c><00:31:24.399><c> function</c>

00:31:25.669 --> 00:31:25.679 align:start position:0%
is not changing the loss function
 

00:31:25.679 --> 00:31:27.269 align:start position:0%
is not changing the loss function
so<00:31:25.919><c> by</c><00:31:26.080><c> default</c><00:31:26.480><c> we</c><00:31:26.640><c> assume</c><00:31:26.880><c> that</c><00:31:27.039><c> the</c>

00:31:27.269 --> 00:31:27.279 align:start position:0%
so by default we assume that the
 

00:31:27.279 --> 00:31:28.870 align:start position:0%
so by default we assume that the
gradient<00:31:27.679><c> is</c><00:31:27.840><c> zero</c>

00:31:28.870 --> 00:31:28.880 align:start position:0%
gradient is zero
 

00:31:28.880 --> 00:31:31.190 align:start position:0%
gradient is zero
and<00:31:29.039><c> then</c>

00:31:31.190 --> 00:31:31.200 align:start position:0%
and then
 

00:31:31.200 --> 00:31:36.549 align:start position:0%
and then
now<00:31:31.360><c> that</c><00:31:31.519><c> we</c><00:31:31.679><c> have</c><00:31:31.919><c> grad</c><00:31:32.559><c> and</c><00:31:32.799><c> it's</c><00:31:33.440><c> 0.0</c>

00:31:36.549 --> 00:31:36.559 align:start position:0%
 
 

00:31:36.559 --> 00:31:38.230 align:start position:0%
 
we<00:31:36.799><c> are</c><00:31:36.880><c> going</c><00:31:37.039><c> to</c><00:31:37.200><c> be</c><00:31:37.279><c> able</c><00:31:37.440><c> to</c><00:31:37.600><c> visualize</c><00:31:38.080><c> it</c>

00:31:38.230 --> 00:31:38.240 align:start position:0%
we are going to be able to visualize it
 

00:31:38.240 --> 00:31:42.789 align:start position:0%
we are going to be able to visualize it
here<00:31:38.640><c> after</c><00:31:38.960><c> data</c><00:31:39.679><c> so</c><00:31:39.840><c> here</c><00:31:40.080><c> grad</c><00:31:40.559><c> is</c><00:31:40.720><c> 0.4</c><00:31:41.200><c> f</c>

00:31:42.789 --> 00:31:42.799 align:start position:0%
here after data so here grad is 0.4 f
 

00:31:42.799 --> 00:31:45.669 align:start position:0%
here after data so here grad is 0.4 f
and<00:31:42.960><c> this</c><00:31:43.120><c> will</c><00:31:43.279><c> be</c><00:31:43.440><c> in</c><00:31:43.519><c> that</c><00:31:43.760><c> graph</c>

00:31:45.669 --> 00:31:45.679 align:start position:0%
and this will be in that graph
 

00:31:45.679 --> 00:31:47.590 align:start position:0%
and this will be in that graph
and<00:31:45.919><c> now</c><00:31:46.080><c> we</c><00:31:46.320><c> are</c><00:31:46.480><c> going</c><00:31:46.640><c> to</c><00:31:46.799><c> be</c><00:31:47.039><c> showing</c><00:31:47.360><c> both</c>

00:31:47.590 --> 00:31:47.600 align:start position:0%
and now we are going to be showing both
 

00:31:47.600 --> 00:31:50.950 align:start position:0%
and now we are going to be showing both
the<00:31:47.760><c> data</c><00:31:48.640><c> and</c><00:31:48.880><c> the</c><00:31:49.039><c> grad</c>

00:31:50.950 --> 00:31:50.960 align:start position:0%
the data and the grad
 

00:31:50.960 --> 00:31:53.669 align:start position:0%
the data and the grad
initialized<00:31:51.519><c> at</c><00:31:51.600><c> zero</c>

00:31:53.669 --> 00:31:53.679 align:start position:0%
initialized at zero
 

00:31:53.679 --> 00:31:55.669 align:start position:0%
initialized at zero
and<00:31:53.840><c> we</c><00:31:54.000><c> are</c><00:31:54.159><c> just</c><00:31:54.320><c> about</c><00:31:54.640><c> getting</c><00:31:54.960><c> ready</c><00:31:55.200><c> to</c>

00:31:55.669 --> 00:31:55.679 align:start position:0%
and we are just about getting ready to
 

00:31:55.679 --> 00:31:57.350 align:start position:0%
and we are just about getting ready to
calculate<00:31:56.000><c> the</c><00:31:56.080><c> back</c><00:31:56.240><c> propagation</c>

00:31:57.350 --> 00:31:57.360 align:start position:0%
calculate the back propagation
 

00:31:57.360 --> 00:31:58.789 align:start position:0%
calculate the back propagation
and<00:31:57.600><c> of</c><00:31:57.679><c> course</c><00:31:57.919><c> this</c><00:31:58.080><c> grad</c><00:31:58.320><c> again</c><00:31:58.559><c> as</c><00:31:58.720><c> i</c>

00:31:58.789 --> 00:31:58.799 align:start position:0%
and of course this grad again as i
 

00:31:58.799 --> 00:32:00.389 align:start position:0%
and of course this grad again as i
mentioned<00:31:59.200><c> is</c><00:31:59.360><c> representing</c>

00:32:00.389 --> 00:32:00.399 align:start position:0%
mentioned is representing
 

00:32:00.399 --> 00:32:02.230 align:start position:0%
mentioned is representing
the<00:32:00.559><c> derivative</c><00:32:01.039><c> of</c><00:32:01.120><c> the</c><00:32:01.279><c> output</c><00:32:02.000><c> in</c><00:32:02.080><c> this</c>

00:32:02.230 --> 00:32:02.240 align:start position:0%
the derivative of the output in this
 

00:32:02.240 --> 00:32:05.029 align:start position:0%
the derivative of the output in this
case<00:32:02.559><c> l</c><00:32:03.200><c> with</c><00:32:03.360><c> respect</c><00:32:03.679><c> to</c><00:32:03.840><c> this</c><00:32:04.080><c> value</c><00:32:04.880><c> so</c>

00:32:05.029 --> 00:32:05.039 align:start position:0%
case l with respect to this value so
 

00:32:05.039 --> 00:32:06.470 align:start position:0%
case l with respect to this value so
with<00:32:05.279><c> respect</c><00:32:05.600><c> to</c><00:32:06.000><c> so</c><00:32:06.159><c> this</c><00:32:06.320><c> is</c><00:32:06.399><c> the</c>

00:32:06.470 --> 00:32:06.480 align:start position:0%
with respect to so this is the
 

00:32:06.480 --> 00:32:08.549 align:start position:0%
with respect to so this is the
derivative<00:32:07.120><c> of</c><00:32:07.279><c> l</c><00:32:07.440><c> with</c><00:32:07.600><c> respect</c><00:32:07.919><c> to</c><00:32:08.080><c> f</c><00:32:08.399><c> with</c>

00:32:08.549 --> 00:32:08.559 align:start position:0%
derivative of l with respect to f with
 

00:32:08.559 --> 00:32:11.350 align:start position:0%
derivative of l with respect to f with
respect<00:32:08.880><c> to</c><00:32:09.039><c> d</c><00:32:09.360><c> and</c><00:32:09.519><c> so</c><00:32:09.679><c> on</c><00:32:10.399><c> so</c><00:32:10.640><c> let's</c><00:32:10.880><c> now</c><00:32:11.120><c> fill</c>

00:32:11.350 --> 00:32:11.360 align:start position:0%
respect to d and so on so let's now fill
 

00:32:11.360 --> 00:32:12.950 align:start position:0%
respect to d and so on so let's now fill
in<00:32:11.519><c> those</c><00:32:11.679><c> gradients</c><00:32:12.159><c> and</c><00:32:12.320><c> actually</c><00:32:12.559><c> do</c><00:32:12.720><c> back</c>

00:32:12.950 --> 00:32:12.960 align:start position:0%
in those gradients and actually do back
 

00:32:12.960 --> 00:32:14.710 align:start position:0%
in those gradients and actually do back
propagation<00:32:13.440><c> manually</c><00:32:14.240><c> so</c><00:32:14.399><c> let's</c><00:32:14.559><c> start</c>

00:32:14.710 --> 00:32:14.720 align:start position:0%
propagation manually so let's start
 

00:32:14.720 --> 00:32:16.389 align:start position:0%
propagation manually so let's start
filling<00:32:15.039><c> in</c><00:32:15.120><c> these</c><00:32:15.279><c> gradients</c><00:32:15.840><c> and</c><00:32:16.000><c> start</c><00:32:16.320><c> all</c>

00:32:16.389 --> 00:32:16.399 align:start position:0%
filling in these gradients and start all
 

00:32:16.399 --> 00:32:18.470 align:start position:0%
filling in these gradients and start all
the<00:32:16.480><c> way</c><00:32:16.640><c> at</c><00:32:16.720><c> the</c><00:32:16.880><c> end</c><00:32:17.120><c> as</c><00:32:17.279><c> i</c><00:32:17.360><c> mentioned</c><00:32:17.679><c> here</c>

00:32:18.470 --> 00:32:18.480 align:start position:0%
the way at the end as i mentioned here
 

00:32:18.480 --> 00:32:20.389 align:start position:0%
the way at the end as i mentioned here
first<00:32:18.720><c> we</c><00:32:18.880><c> are</c><00:32:18.960><c> interested</c><00:32:19.279><c> to</c><00:32:19.440><c> fill</c><00:32:19.600><c> in</c><00:32:19.760><c> this</c>

00:32:20.389 --> 00:32:20.399 align:start position:0%
first we are interested to fill in this
 

00:32:20.399 --> 00:32:22.870 align:start position:0%
first we are interested to fill in this
gradient<00:32:21.039><c> here</c><00:32:21.760><c> so</c><00:32:21.919><c> what</c><00:32:22.080><c> is</c><00:32:22.240><c> the</c><00:32:22.320><c> derivative</c>

00:32:22.870 --> 00:32:22.880 align:start position:0%
gradient here so what is the derivative
 

00:32:22.880 --> 00:32:25.190 align:start position:0%
gradient here so what is the derivative
of<00:32:23.039><c> l</c><00:32:23.360><c> with</c><00:32:23.600><c> respect</c><00:32:23.919><c> to</c><00:32:24.399><c> l</c>

00:32:25.190 --> 00:32:25.200 align:start position:0%
of l with respect to l
 

00:32:25.200 --> 00:32:27.350 align:start position:0%
of l with respect to l
in<00:32:25.360><c> other</c><00:32:25.519><c> words</c><00:32:25.760><c> if</c><00:32:25.919><c> i</c><00:32:26.000><c> change</c><00:32:26.399><c> l</c><00:32:26.799><c> by</c><00:32:26.960><c> a</c><00:32:27.039><c> tiny</c>

00:32:27.350 --> 00:32:27.360 align:start position:0%
in other words if i change l by a tiny
 

00:32:27.360 --> 00:32:29.029 align:start position:0%
in other words if i change l by a tiny
amount<00:32:27.519><c> of</c><00:32:27.679><c> h</c>

00:32:29.029 --> 00:32:29.039 align:start position:0%
amount of h
 

00:32:29.039 --> 00:32:30.549 align:start position:0%
amount of h
how<00:32:29.200><c> much</c><00:32:29.600><c> does</c>

00:32:30.549 --> 00:32:30.559 align:start position:0%
how much does
 

00:32:30.559 --> 00:32:32.310 align:start position:0%
how much does
l<00:32:30.960><c> change</c>

00:32:32.310 --> 00:32:32.320 align:start position:0%
l change
 

00:32:32.320 --> 00:32:35.190 align:start position:0%
l change
it<00:32:32.480><c> changes</c><00:32:32.880><c> by</c><00:32:33.120><c> h</c><00:32:33.760><c> so</c><00:32:34.399><c> it's</c><00:32:34.559><c> proportional</c><00:32:35.120><c> and</c>

00:32:35.190 --> 00:32:35.200 align:start position:0%
it changes by h so it's proportional and
 

00:32:35.200 --> 00:32:37.269 align:start position:0%
it changes by h so it's proportional and
therefore<00:32:35.440><c> derivative</c><00:32:36.000><c> will</c><00:32:36.080><c> be</c><00:32:36.240><c> one</c>

00:32:37.269 --> 00:32:37.279 align:start position:0%
therefore derivative will be one
 

00:32:37.279 --> 00:32:39.190 align:start position:0%
therefore derivative will be one
we<00:32:37.440><c> can</c><00:32:37.600><c> of</c><00:32:37.679><c> course</c><00:32:38.159><c> measure</c><00:32:38.559><c> these</c><00:32:38.880><c> or</c>

00:32:39.190 --> 00:32:39.200 align:start position:0%
we can of course measure these or
 

00:32:39.200 --> 00:32:40.950 align:start position:0%
we can of course measure these or
estimate<00:32:39.679><c> these</c><00:32:39.840><c> numerical</c><00:32:40.320><c> gradients</c>

00:32:40.950 --> 00:32:40.960 align:start position:0%
estimate these numerical gradients
 

00:32:40.960 --> 00:32:43.190 align:start position:0%
estimate these numerical gradients
numerically<00:32:41.760><c> just</c><00:32:41.919><c> like</c><00:32:42.159><c> we've</c><00:32:42.320><c> seen</c><00:32:42.559><c> before</c>

00:32:43.190 --> 00:32:43.200 align:start position:0%
numerically just like we've seen before
 

00:32:43.200 --> 00:32:45.269 align:start position:0%
numerically just like we've seen before
so<00:32:43.360><c> if</c><00:32:43.519><c> i</c><00:32:43.840><c> take</c><00:32:44.000><c> this</c><00:32:44.240><c> expression</c>

00:32:45.269 --> 00:32:45.279 align:start position:0%
so if i take this expression
 

00:32:45.279 --> 00:32:49.269 align:start position:0%
so if i take this expression
and<00:32:45.440><c> i</c><00:32:45.600><c> create</c><00:32:46.000><c> a</c><00:32:46.240><c> def</c><00:32:46.799><c> lol</c><00:32:47.519><c> function</c><00:32:48.000><c> here</c>

00:32:49.269 --> 00:32:49.279 align:start position:0%
and i create a def lol function here
 

00:32:49.279 --> 00:32:51.190 align:start position:0%
and i create a def lol function here
and<00:32:49.440><c> put</c><00:32:49.679><c> this</c><00:32:49.919><c> here</c><00:32:50.559><c> now</c><00:32:50.720><c> the</c><00:32:50.799><c> reason</c><00:32:51.039><c> i'm</c>

00:32:51.190 --> 00:32:51.200 align:start position:0%
and put this here now the reason i'm
 

00:32:51.200 --> 00:32:53.590 align:start position:0%
and put this here now the reason i'm
creating<00:32:51.440><c> a</c><00:32:51.600><c> gating</c><00:32:51.919><c> function</c><00:32:52.399><c> hello</c><00:32:52.960><c> here</c><00:32:53.440><c> is</c>

00:32:53.590 --> 00:32:53.600 align:start position:0%
creating a gating function hello here is
 

00:32:53.600 --> 00:32:55.190 align:start position:0%
creating a gating function hello here is
because<00:32:53.840><c> i</c><00:32:53.919><c> don't</c><00:32:54.000><c> want</c><00:32:54.159><c> to</c><00:32:54.320><c> pollute</c><00:32:54.720><c> or</c><00:32:54.960><c> mess</c>

00:32:55.190 --> 00:32:55.200 align:start position:0%
because i don't want to pollute or mess
 

00:32:55.200 --> 00:32:57.190 align:start position:0%
because i don't want to pollute or mess
up<00:32:55.360><c> the</c><00:32:55.519><c> global</c><00:32:55.840><c> scope</c><00:32:56.159><c> here</c><00:32:56.799><c> this</c><00:32:56.960><c> is</c><00:32:57.039><c> just</c>

00:32:57.190 --> 00:32:57.200 align:start position:0%
up the global scope here this is just
 

00:32:57.200 --> 00:32:58.870 align:start position:0%
up the global scope here this is just
kind<00:32:57.360><c> of</c><00:32:57.440><c> like</c><00:32:57.600><c> a</c><00:32:57.679><c> little</c><00:32:57.840><c> staging</c><00:32:58.240><c> area</c><00:32:58.720><c> and</c>

00:32:58.870 --> 00:32:58.880 align:start position:0%
kind of like a little staging area and
 

00:32:58.880 --> 00:33:00.389 align:start position:0%
kind of like a little staging area and
as<00:32:59.039><c> you</c><00:32:59.120><c> know</c><00:32:59.279><c> in</c><00:32:59.360><c> python</c><00:32:59.840><c> all</c><00:32:59.919><c> of</c><00:33:00.000><c> these</c><00:33:00.240><c> will</c>

00:33:00.389 --> 00:33:00.399 align:start position:0%
as you know in python all of these will
 

00:33:00.399 --> 00:33:02.710 align:start position:0%
as you know in python all of these will
be<00:33:00.559><c> local</c><00:33:00.880><c> variables</c><00:33:01.360><c> to</c><00:33:01.519><c> this</c><00:33:01.760><c> function</c><00:33:02.559><c> so</c>

00:33:02.710 --> 00:33:02.720 align:start position:0%
be local variables to this function so
 

00:33:02.720 --> 00:33:04.710 align:start position:0%
be local variables to this function so
i'm<00:33:02.799><c> not</c><00:33:03.039><c> changing</c><00:33:03.360><c> any</c><00:33:03.519><c> of</c><00:33:03.679><c> the</c><00:33:04.080><c> global</c><00:33:04.399><c> scope</c>

00:33:04.710 --> 00:33:04.720 align:start position:0%
i'm not changing any of the global scope
 

00:33:04.720 --> 00:33:05.750 align:start position:0%
i'm not changing any of the global scope
here

00:33:05.750 --> 00:33:05.760 align:start position:0%
here
 

00:33:05.760 --> 00:33:09.990 align:start position:0%
here
so<00:33:06.000><c> here</c><00:33:06.320><c> l1</c><00:33:06.720><c> will</c><00:33:06.880><c> be</c><00:33:07.360><c> l</c>

00:33:09.990 --> 00:33:10.000 align:start position:0%
so here l1 will be l
 

00:33:10.000 --> 00:33:13.029 align:start position:0%
so here l1 will be l
and<00:33:10.159><c> then</c><00:33:10.960><c> copy</c><00:33:11.279><c> pasting</c><00:33:11.519><c> this</c><00:33:11.679><c> expression</c>

00:33:13.029 --> 00:33:13.039 align:start position:0%
and then copy pasting this expression
 

00:33:13.039 --> 00:33:17.350 align:start position:0%
and then copy pasting this expression
we're<00:33:13.200><c> going</c><00:33:13.360><c> to</c><00:33:13.519><c> add</c><00:33:13.679><c> a</c><00:33:13.760><c> small</c><00:33:14.080><c> amount</c><00:33:14.640><c> h</c>

00:33:17.350 --> 00:33:17.360 align:start position:0%
 
 

00:33:17.360 --> 00:33:20.549 align:start position:0%
 
in<00:33:18.000><c> for</c><00:33:18.159><c> example</c><00:33:18.640><c> a</c>

00:33:20.549 --> 00:33:20.559 align:start position:0%
in for example a
 

00:33:20.559 --> 00:33:22.630 align:start position:0%
in for example a
right<00:33:21.200><c> and</c><00:33:21.360><c> this</c><00:33:21.519><c> would</c><00:33:21.679><c> be</c><00:33:21.840><c> measuring</c><00:33:22.480><c> the</c>

00:33:22.630 --> 00:33:22.640 align:start position:0%
right and this would be measuring the
 

00:33:22.640 --> 00:33:25.430 align:start position:0%
right and this would be measuring the
derivative<00:33:23.200><c> of</c><00:33:23.600><c> l</c><00:33:23.760><c> with</c><00:33:23.919><c> respect</c><00:33:24.240><c> to</c><00:33:24.399><c> a</c>

00:33:25.430 --> 00:33:25.440 align:start position:0%
derivative of l with respect to a
 

00:33:25.440 --> 00:33:28.149 align:start position:0%
derivative of l with respect to a
so<00:33:25.679><c> here</c><00:33:26.000><c> this</c><00:33:26.240><c> will</c><00:33:26.399><c> be</c><00:33:26.559><c> l2</c>

00:33:28.149 --> 00:33:28.159 align:start position:0%
so here this will be l2
 

00:33:28.159 --> 00:33:29.509 align:start position:0%
so here this will be l2
and<00:33:28.320><c> then</c><00:33:28.480><c> we</c><00:33:28.640><c> want</c><00:33:28.880><c> to</c><00:33:29.039><c> print</c><00:33:29.279><c> this</c>

00:33:29.509 --> 00:33:29.519 align:start position:0%
and then we want to print this
 

00:33:29.519 --> 00:33:31.590 align:start position:0%
and then we want to print this
derivative<00:33:30.080><c> so</c><00:33:30.320><c> print</c>

00:33:31.590 --> 00:33:31.600 align:start position:0%
derivative so print
 

00:33:31.600 --> 00:33:35.190 align:start position:0%
derivative so print
l2<00:33:31.919><c> minus</c><00:33:32.240><c> l1</c><00:33:32.720><c> which</c><00:33:32.960><c> is</c><00:33:33.120><c> how</c><00:33:33.279><c> much</c><00:33:33.919><c> l</c><00:33:34.240><c> changed</c>

00:33:35.190 --> 00:33:35.200 align:start position:0%
l2 minus l1 which is how much l changed
 

00:33:35.200 --> 00:33:37.669 align:start position:0%
l2 minus l1 which is how much l changed
and<00:33:35.279><c> then</c><00:33:35.440><c> normalize</c><00:33:36.000><c> it</c><00:33:36.159><c> by</c><00:33:36.640><c> h</c><00:33:37.360><c> so</c><00:33:37.519><c> this</c><00:33:37.600><c> is</c>

00:33:37.669 --> 00:33:37.679 align:start position:0%
and then normalize it by h so this is
 

00:33:37.679 --> 00:33:39.509 align:start position:0%
and then normalize it by h so this is
the<00:33:37.919><c> rise</c><00:33:38.320><c> over</c><00:33:38.640><c> run</c>

00:33:39.509 --> 00:33:39.519 align:start position:0%
the rise over run
 

00:33:39.519 --> 00:33:41.350 align:start position:0%
the rise over run
and<00:33:39.679><c> we</c><00:33:39.840><c> have</c><00:33:39.919><c> to</c><00:33:40.000><c> be</c><00:33:40.080><c> careful</c><00:33:40.399><c> because</c><00:33:40.720><c> l</c><00:33:41.039><c> is</c><00:33:41.200><c> a</c>

00:33:41.350 --> 00:33:41.360 align:start position:0%
and we have to be careful because l is a
 

00:33:41.360 --> 00:33:45.110 align:start position:0%
and we have to be careful because l is a
value<00:33:41.840><c> node</c><00:33:42.159><c> so</c><00:33:42.320><c> we</c><00:33:42.480><c> actually</c><00:33:42.720><c> want</c><00:33:42.960><c> its</c><00:33:43.279><c> data</c>

00:33:45.110 --> 00:33:45.120 align:start position:0%
value node so we actually want its data
 

00:33:45.120 --> 00:33:46.230 align:start position:0%
value node so we actually want its data
um

00:33:46.230 --> 00:33:46.240 align:start position:0%
um
 

00:33:46.240 --> 00:33:48.870 align:start position:0%
um
so<00:33:46.399><c> that</c><00:33:46.559><c> these</c><00:33:46.799><c> are</c><00:33:46.960><c> floats</c><00:33:47.600><c> dividing</c><00:33:48.080><c> by</c><00:33:48.320><c> h</c>

00:33:48.870 --> 00:33:48.880 align:start position:0%
so that these are floats dividing by h
 

00:33:48.880 --> 00:33:50.710 align:start position:0%
so that these are floats dividing by h
and<00:33:49.120><c> this</c><00:33:49.279><c> should</c><00:33:49.519><c> print</c><00:33:50.000><c> the</c><00:33:50.159><c> derivative</c><00:33:50.559><c> of</c>

00:33:50.710 --> 00:33:50.720 align:start position:0%
and this should print the derivative of
 

00:33:50.720 --> 00:33:53.029 align:start position:0%
and this should print the derivative of
l<00:33:50.960><c> with</c><00:33:51.120><c> respect</c><00:33:51.519><c> to</c><00:33:51.760><c> a</c><00:33:52.159><c> because</c><00:33:52.480><c> a</c><00:33:52.640><c> is</c><00:33:52.799><c> the</c><00:33:52.880><c> one</c>

00:33:53.029 --> 00:33:53.039 align:start position:0%
l with respect to a because a is the one
 

00:33:53.039 --> 00:33:55.590 align:start position:0%
l with respect to a because a is the one
that<00:33:53.200><c> we</c><00:33:53.360><c> bumped</c><00:33:53.919><c> a</c><00:33:54.080><c> little</c><00:33:54.240><c> bit</c><00:33:54.399><c> by</c><00:33:54.640><c> h</c>

00:33:55.590 --> 00:33:55.600 align:start position:0%
that we bumped a little bit by h
 

00:33:55.600 --> 00:33:57.269 align:start position:0%
that we bumped a little bit by h
so<00:33:55.760><c> what</c><00:33:56.000><c> is</c><00:33:56.159><c> the</c>

00:33:57.269 --> 00:33:57.279 align:start position:0%
so what is the
 

00:33:57.279 --> 00:33:59.269 align:start position:0%
so what is the
derivative<00:33:57.600><c> of</c><00:33:57.760><c> l</c><00:33:57.919><c> with</c><00:33:58.000><c> respect</c><00:33:58.320><c> to</c><00:33:58.559><c> a</c>

00:33:59.269 --> 00:33:59.279 align:start position:0%
derivative of l with respect to a
 

00:33:59.279 --> 00:34:01.029 align:start position:0%
derivative of l with respect to a
it's<00:33:59.600><c> six</c>

00:34:01.029 --> 00:34:01.039 align:start position:0%
it's six
 

00:34:01.039 --> 00:34:03.590 align:start position:0%
it's six
okay<00:34:01.760><c> and</c><00:34:01.919><c> obviously</c>

00:34:03.590 --> 00:34:03.600 align:start position:0%
okay and obviously
 

00:34:03.600 --> 00:34:06.950 align:start position:0%
okay and obviously
if<00:34:03.679><c> we</c><00:34:03.840><c> change</c><00:34:04.320><c> l</c><00:34:04.960><c> by</c><00:34:05.519><c> h</c>

00:34:06.950 --> 00:34:06.960 align:start position:0%
if we change l by h
 

00:34:06.960 --> 00:34:09.829 align:start position:0%
if we change l by h
then<00:34:07.679><c> that</c><00:34:07.919><c> would</c><00:34:08.079><c> be</c>

00:34:09.829 --> 00:34:09.839 align:start position:0%
then that would be
 

00:34:09.839 --> 00:34:12.389 align:start position:0%
then that would be
here<00:34:10.159><c> effectively</c>

00:34:12.389 --> 00:34:12.399 align:start position:0%
here effectively
 

00:34:12.399 --> 00:34:14.629 align:start position:0%
here effectively
this<00:34:12.560><c> looks</c><00:34:12.800><c> really</c><00:34:13.040><c> awkward</c><00:34:13.359><c> but</c><00:34:14.000><c> changing</c><00:34:14.399><c> l</c>

00:34:14.629 --> 00:34:14.639 align:start position:0%
this looks really awkward but changing l
 

00:34:14.639 --> 00:34:16.069 align:start position:0%
this looks really awkward but changing l
by<00:34:14.879><c> h</c>

00:34:16.069 --> 00:34:16.079 align:start position:0%
by h
 

00:34:16.079 --> 00:34:20.790 align:start position:0%
by h
you<00:34:16.240><c> see</c><00:34:16.399><c> the</c><00:34:16.560><c> derivative</c><00:34:16.960><c> here</c><00:34:17.280><c> is</c><00:34:17.639><c> 1.</c><00:34:18.720><c> um</c>

00:34:20.790 --> 00:34:20.800 align:start position:0%
you see the derivative here is 1. um
 

00:34:20.800 --> 00:34:23.190 align:start position:0%
you see the derivative here is 1. um
that's<00:34:21.040><c> kind</c><00:34:21.119><c> of</c><00:34:21.200><c> like</c><00:34:21.359><c> the</c><00:34:21.520><c> base</c><00:34:21.760><c> case</c><00:34:22.320><c> of</c>

00:34:23.190 --> 00:34:23.200 align:start position:0%
that's kind of like the base case of
 

00:34:23.200 --> 00:34:24.710 align:start position:0%
that's kind of like the base case of
what<00:34:23.440><c> we</c><00:34:23.520><c> are</c><00:34:23.679><c> doing</c><00:34:23.919><c> here</c>

00:34:24.710 --> 00:34:24.720 align:start position:0%
what we are doing here
 

00:34:24.720 --> 00:34:26.629 align:start position:0%
what we are doing here
so<00:34:24.960><c> basically</c><00:34:25.280><c> we</c><00:34:25.440><c> cannot</c><00:34:25.679><c> come</c><00:34:25.839><c> up</c><00:34:26.000><c> here</c><00:34:26.480><c> and</c>

00:34:26.629 --> 00:34:26.639 align:start position:0%
so basically we cannot come up here and
 

00:34:26.639 --> 00:34:29.829 align:start position:0%
so basically we cannot come up here and
we<00:34:26.800><c> can</c><00:34:27.280><c> manually</c><00:34:27.760><c> set</c><00:34:28.159><c> l.grad</c><00:34:29.119><c> to</c><00:34:29.280><c> one</c><00:34:29.599><c> this</c>

00:34:29.829 --> 00:34:29.839 align:start position:0%
we can manually set l.grad to one this
 

00:34:29.839 --> 00:34:31.909 align:start position:0%
we can manually set l.grad to one this
is<00:34:29.919><c> our</c><00:34:30.000><c> manual</c><00:34:30.320><c> back</c><00:34:30.560><c> propagation</c>

00:34:31.909 --> 00:34:31.919 align:start position:0%
is our manual back propagation
 

00:34:31.919 --> 00:34:35.589 align:start position:0%
is our manual back propagation
l<00:34:32.159><c> dot</c><00:34:32.320><c> grad</c><00:34:32.560><c> is</c><00:34:32.720><c> one</c><00:34:33.280><c> and</c><00:34:33.440><c> let's</c><00:34:33.679><c> redraw</c>

00:34:35.589 --> 00:34:35.599 align:start position:0%
l dot grad is one and let's redraw
 

00:34:35.599 --> 00:34:37.669 align:start position:0%
l dot grad is one and let's redraw
and<00:34:35.760><c> we'll</c><00:34:35.919><c> see</c><00:34:36.159><c> that</c><00:34:36.480><c> we</c><00:34:36.720><c> filled</c><00:34:36.960><c> in</c><00:34:37.200><c> grad</c><00:34:37.520><c> as</c>

00:34:37.669 --> 00:34:37.679 align:start position:0%
and we'll see that we filled in grad as
 

00:34:37.679 --> 00:34:39.030 align:start position:0%
and we'll see that we filled in grad as
1<00:34:38.000><c> for</c><00:34:38.320><c> l</c>

00:34:39.030 --> 00:34:39.040 align:start position:0%
1 for l
 

00:34:39.040 --> 00:34:40.310 align:start position:0%
1 for l
we're<00:34:39.200><c> now</c><00:34:39.359><c> going</c><00:34:39.520><c> to</c><00:34:39.679><c> continue</c><00:34:40.000><c> the</c><00:34:40.079><c> back</c>

00:34:40.310 --> 00:34:40.320 align:start position:0%
we're now going to continue the back
 

00:34:40.320 --> 00:34:42.149 align:start position:0%
we're now going to continue the back
propagation<00:34:41.200><c> so</c><00:34:41.359><c> let's</c><00:34:41.520><c> here</c><00:34:41.760><c> look</c><00:34:41.919><c> at</c><00:34:42.000><c> the</c>

00:34:42.149 --> 00:34:42.159 align:start position:0%
propagation so let's here look at the
 

00:34:42.159 --> 00:34:45.510 align:start position:0%
propagation so let's here look at the
derivatives<00:34:42.800><c> of</c><00:34:43.280><c> l</c><00:34:43.440><c> with</c><00:34:43.599><c> respect</c><00:34:43.919><c> to</c><00:34:44.079><c> d</c><00:34:44.320><c> and</c><00:34:44.480><c> f</c>

00:34:45.510 --> 00:34:45.520 align:start position:0%
derivatives of l with respect to d and f
 

00:34:45.520 --> 00:34:47.669 align:start position:0%
derivatives of l with respect to d and f
let's<00:34:45.760><c> do</c><00:34:46.240><c> a</c><00:34:46.399><c> d</c><00:34:46.639><c> first</c>

00:34:47.669 --> 00:34:47.679 align:start position:0%
let's do a d first
 

00:34:47.679 --> 00:34:49.430 align:start position:0%
let's do a d first
so<00:34:47.839><c> what</c><00:34:48.000><c> we</c><00:34:48.159><c> are</c><00:34:48.240><c> interested</c><00:34:48.639><c> in</c><00:34:48.879><c> if</c><00:34:48.960><c> i</c><00:34:49.119><c> create</c>

00:34:49.430 --> 00:34:49.440 align:start position:0%
so what we are interested in if i create
 

00:34:49.440 --> 00:34:51.829 align:start position:0%
so what we are interested in if i create
a<00:34:49.520><c> markdown</c><00:34:49.919><c> on</c><00:34:50.079><c> here</c><00:34:50.480><c> is</c><00:34:50.639><c> we'd</c><00:34:50.800><c> like</c><00:34:50.960><c> to</c><00:34:51.119><c> know</c>

00:34:51.829 --> 00:34:51.839 align:start position:0%
a markdown on here is we'd like to know
 

00:34:51.839 --> 00:34:54.230 align:start position:0%
a markdown on here is we'd like to know
basically<00:34:52.240><c> we</c><00:34:52.320><c> have</c><00:34:52.480><c> that</c><00:34:52.800><c> l</c><00:34:52.960><c> is</c><00:34:53.119><c> d</c><00:34:53.280><c> times</c><00:34:53.599><c> f</c>

00:34:54.230 --> 00:34:54.240 align:start position:0%
basically we have that l is d times f
 

00:34:54.240 --> 00:34:57.270 align:start position:0%
basically we have that l is d times f
and<00:34:54.399><c> we'd</c><00:34:54.560><c> like</c><00:34:54.720><c> to</c><00:34:54.879><c> know</c><00:34:55.359><c> what</c><00:34:55.599><c> is</c><00:34:56.159><c> uh</c><00:34:56.560><c> d</c>

00:34:57.270 --> 00:34:57.280 align:start position:0%
and we'd like to know what is uh d
 

00:34:57.280 --> 00:35:00.230 align:start position:0%
and we'd like to know what is uh d
l<00:34:57.839><c> by</c><00:34:58.480><c> d</c><00:34:58.720><c> d</c>

00:35:00.230 --> 00:35:00.240 align:start position:0%
l by d d
 

00:35:00.240 --> 00:35:01.670 align:start position:0%
l by d d
what<00:35:00.400><c> is</c><00:35:00.560><c> that</c>

00:35:01.670 --> 00:35:01.680 align:start position:0%
what is that
 

00:35:01.680 --> 00:35:03.670 align:start position:0%
what is that
and<00:35:01.760><c> if</c><00:35:01.839><c> you</c><00:35:01.920><c> know</c><00:35:02.079><c> your</c><00:35:02.240><c> calculus</c><00:35:02.880><c> uh</c><00:35:03.200><c> l</c><00:35:03.440><c> is</c><00:35:03.520><c> d</c>

00:35:03.670 --> 00:35:03.680 align:start position:0%
and if you know your calculus uh l is d
 

00:35:03.680 --> 00:35:06.230 align:start position:0%
and if you know your calculus uh l is d
times<00:35:03.920><c> f</c><00:35:04.079><c> so</c><00:35:04.240><c> what</c><00:35:04.400><c> is</c><00:35:04.560><c> d</c><00:35:04.800><c> l</c><00:35:05.040><c> by</c><00:35:05.280><c> d</c><00:35:05.599><c> d</c><00:35:06.000><c> it</c><00:35:06.079><c> would</c>

00:35:06.230 --> 00:35:06.240 align:start position:0%
times f so what is d l by d d it would
 

00:35:06.240 --> 00:35:08.069 align:start position:0%
times f so what is d l by d d it would
be<00:35:06.880><c> f</c>

00:35:08.069 --> 00:35:08.079 align:start position:0%
be f
 

00:35:08.079 --> 00:35:10.230 align:start position:0%
be f
and<00:35:08.560><c> if</c><00:35:08.720><c> you</c><00:35:08.880><c> don't</c><00:35:09.119><c> believe</c><00:35:09.440><c> me</c><00:35:09.599><c> we</c><00:35:09.760><c> can</c><00:35:09.920><c> also</c>

00:35:10.230 --> 00:35:10.240 align:start position:0%
and if you don't believe me we can also
 

00:35:10.240 --> 00:35:11.750 align:start position:0%
and if you don't believe me we can also
just<00:35:10.480><c> derive</c><00:35:10.880><c> it</c><00:35:10.960><c> because</c><00:35:11.200><c> the</c><00:35:11.359><c> proof</c><00:35:11.599><c> would</c>

00:35:11.750 --> 00:35:11.760 align:start position:0%
just derive it because the proof would
 

00:35:11.760 --> 00:35:14.790 align:start position:0%
just derive it because the proof would
be<00:35:11.920><c> fairly</c><00:35:12.160><c> straightforward</c><00:35:13.280><c> uh</c><00:35:13.520><c> we</c><00:35:13.760><c> go</c><00:35:14.079><c> to</c>

00:35:14.790 --> 00:35:14.800 align:start position:0%
be fairly straightforward uh we go to
 

00:35:14.800 --> 00:35:15.670 align:start position:0%
be fairly straightforward uh we go to
the

00:35:15.670 --> 00:35:15.680 align:start position:0%
the
 

00:35:15.680 --> 00:35:18.150 align:start position:0%
the
definition<00:35:16.160><c> of</c><00:35:16.240><c> the</c><00:35:16.800><c> derivative</c><00:35:17.599><c> which</c><00:35:17.839><c> is</c><00:35:18.000><c> f</c>

00:35:18.150 --> 00:35:18.160 align:start position:0%
definition of the derivative which is f
 

00:35:18.160 --> 00:35:22.069 align:start position:0%
definition of the derivative which is f
of<00:35:18.400><c> x</c><00:35:18.560><c> plus</c><00:35:18.800><c> h</c><00:35:19.119><c> minus</c><00:35:19.440><c> f</c><00:35:19.599><c> of</c><00:35:19.760><c> x</c><00:35:20.079><c> divide</c><00:35:20.560><c> h</c>

00:35:22.069 --> 00:35:22.079 align:start position:0%
of x plus h minus f of x divide h
 

00:35:22.079 --> 00:35:24.470 align:start position:0%
of x plus h minus f of x divide h
as<00:35:22.320><c> a</c><00:35:22.400><c> limit</c><00:35:22.960><c> limit</c><00:35:23.280><c> of</c><00:35:23.440><c> h</c><00:35:23.599><c> goes</c><00:35:23.760><c> to</c><00:35:23.920><c> zero</c><00:35:24.320><c> of</c>

00:35:24.470 --> 00:35:24.480 align:start position:0%
as a limit limit of h goes to zero of
 

00:35:24.480 --> 00:35:26.470 align:start position:0%
as a limit limit of h goes to zero of
this<00:35:24.640><c> kind</c><00:35:24.720><c> of</c><00:35:24.880><c> expression</c><00:35:25.839><c> so</c><00:35:26.000><c> when</c><00:35:26.160><c> we</c><00:35:26.240><c> have</c>

00:35:26.470 --> 00:35:26.480 align:start position:0%
this kind of expression so when we have
 

00:35:26.480 --> 00:35:28.230 align:start position:0%
this kind of expression so when we have
l<00:35:26.640><c> is</c><00:35:26.720><c> d</c><00:35:26.960><c> times</c><00:35:27.200><c> f</c>

00:35:28.230 --> 00:35:28.240 align:start position:0%
l is d times f
 

00:35:28.240 --> 00:35:31.589 align:start position:0%
l is d times f
then<00:35:28.960><c> increasing</c><00:35:30.079><c> d</c><00:35:30.400><c> by</c><00:35:30.640><c> h</c>

00:35:31.589 --> 00:35:31.599 align:start position:0%
then increasing d by h
 

00:35:31.599 --> 00:35:33.910 align:start position:0%
then increasing d by h
would<00:35:31.760><c> give</c><00:35:32.000><c> us</c><00:35:32.160><c> the</c><00:35:32.320><c> output</c><00:35:32.720><c> of</c><00:35:32.960><c> b</c><00:35:33.200><c> plus</c><00:35:33.520><c> h</c>

00:35:33.910 --> 00:35:33.920 align:start position:0%
would give us the output of b plus h
 

00:35:33.920 --> 00:35:35.750 align:start position:0%
would give us the output of b plus h
times<00:35:34.320><c> f</c>

00:35:35.750 --> 00:35:35.760 align:start position:0%
times f
 

00:35:35.760 --> 00:35:38.950 align:start position:0%
times f
that's<00:35:36.000><c> basically</c><00:35:36.320><c> f</c><00:35:36.480><c> of</c><00:35:36.640><c> x</c><00:35:36.720><c> plus</c><00:35:36.960><c> h</c><00:35:37.280><c> right</c>

00:35:38.950 --> 00:35:38.960 align:start position:0%
that's basically f of x plus h right
 

00:35:38.960 --> 00:35:42.310 align:start position:0%
that's basically f of x plus h right
minus<00:35:39.760><c> d</c><00:35:39.920><c> times</c><00:35:40.240><c> f</c>

00:35:42.310 --> 00:35:42.320 align:start position:0%
minus d times f
 

00:35:42.320 --> 00:35:44.870 align:start position:0%
minus d times f
and<00:35:42.400><c> then</c><00:35:42.560><c> divide</c><00:35:43.040><c> h</c><00:35:43.839><c> and</c><00:35:44.000><c> symbolically</c>

00:35:44.870 --> 00:35:44.880 align:start position:0%
and then divide h and symbolically
 

00:35:44.880 --> 00:35:46.550 align:start position:0%
and then divide h and symbolically
expanding<00:35:45.359><c> out</c><00:35:45.680><c> here</c><00:35:45.920><c> we</c><00:35:46.079><c> would</c><00:35:46.320><c> have</c>

00:35:46.550 --> 00:35:46.560 align:start position:0%
expanding out here we would have
 

00:35:46.560 --> 00:35:49.990 align:start position:0%
expanding out here we would have
basically<00:35:46.960><c> d</c><00:35:47.200><c> times</c><00:35:47.520><c> f</c><00:35:48.079><c> plus</c><00:35:48.480><c> h</c><00:35:48.800><c> times</c><00:35:49.119><c> f</c><00:35:49.599><c> minus</c>

00:35:49.990 --> 00:35:50.000 align:start position:0%
basically d times f plus h times f minus
 

00:35:50.000 --> 00:35:52.230 align:start position:0%
basically d times f plus h times f minus
t<00:35:50.240><c> times</c><00:35:50.480><c> f</c><00:35:51.040><c> divide</c><00:35:51.440><c> h</c>

00:35:52.230 --> 00:35:52.240 align:start position:0%
t times f divide h
 

00:35:52.240 --> 00:35:54.390 align:start position:0%
t times f divide h
and<00:35:52.400><c> then</c><00:35:52.560><c> you</c><00:35:52.640><c> see</c><00:35:52.800><c> how</c><00:35:52.960><c> the</c><00:35:53.119><c> df</c><00:35:53.760><c> minus</c><00:35:54.079><c> df</c>

00:35:54.390 --> 00:35:54.400 align:start position:0%
and then you see how the df minus df
 

00:35:54.400 --> 00:35:57.349 align:start position:0%
and then you see how the df minus df
cancels<00:35:54.800><c> so</c><00:35:54.960><c> you're</c><00:35:55.119><c> left</c><00:35:55.359><c> with</c><00:35:55.599><c> h</c><00:35:55.760><c> times</c><00:35:56.079><c> f</c>

00:35:57.349 --> 00:35:57.359 align:start position:0%
cancels so you're left with h times f
 

00:35:57.359 --> 00:35:58.550 align:start position:0%
cancels so you're left with h times f
divide<00:35:57.760><c> h</c>

00:35:58.550 --> 00:35:58.560 align:start position:0%
divide h
 

00:35:58.560 --> 00:35:59.910 align:start position:0%
divide h
which<00:35:58.800><c> is</c><00:35:58.960><c> f</c>

00:35:59.910 --> 00:35:59.920 align:start position:0%
which is f
 

00:35:59.920 --> 00:36:03.190 align:start position:0%
which is f
so<00:36:00.160><c> in</c><00:36:00.320><c> the</c><00:36:00.400><c> limit</c><00:36:00.720><c> as</c><00:36:01.040><c> h</c><00:36:01.280><c> goes</c><00:36:01.440><c> to</c><00:36:01.599><c> zero</c><00:36:02.160><c> of</c>

00:36:03.190 --> 00:36:03.200 align:start position:0%
so in the limit as h goes to zero of
 

00:36:03.200 --> 00:36:04.470 align:start position:0%
so in the limit as h goes to zero of
you<00:36:03.359><c> know</c>

00:36:04.470 --> 00:36:04.480 align:start position:0%
you know
 

00:36:04.480 --> 00:36:06.710 align:start position:0%
you know
derivative

00:36:06.710 --> 00:36:06.720 align:start position:0%
derivative
 

00:36:06.720 --> 00:36:09.910 align:start position:0%
derivative
definition<00:36:07.680><c> we</c><00:36:07.839><c> just</c><00:36:08.000><c> get</c><00:36:08.320><c> f</c><00:36:08.720><c> in</c><00:36:08.800><c> the</c><00:36:08.880><c> case</c><00:36:09.200><c> of</c>

00:36:09.910 --> 00:36:09.920 align:start position:0%
definition we just get f in the case of
 

00:36:09.920 --> 00:36:12.310 align:start position:0%
definition we just get f in the case of
d<00:36:10.079><c> times</c><00:36:10.400><c> f</c>

00:36:12.310 --> 00:36:12.320 align:start position:0%
d times f
 

00:36:12.320 --> 00:36:13.030 align:start position:0%
d times f
so

00:36:13.030 --> 00:36:13.040 align:start position:0%
so
 

00:36:13.040 --> 00:36:14.310 align:start position:0%
so
symmetrically

00:36:14.310 --> 00:36:14.320 align:start position:0%
symmetrically
 

00:36:14.320 --> 00:36:15.910 align:start position:0%
symmetrically
dl<00:36:14.720><c> by</c><00:36:14.960><c> d</c>

00:36:15.910 --> 00:36:15.920 align:start position:0%
dl by d
 

00:36:15.920 --> 00:36:18.470 align:start position:0%
dl by d
f<00:36:16.400><c> will</c><00:36:16.640><c> just</c><00:36:16.800><c> be</c><00:36:17.040><c> d</c>

00:36:18.470 --> 00:36:18.480 align:start position:0%
f will just be d
 

00:36:18.480 --> 00:36:21.349 align:start position:0%
f will just be d
so<00:36:18.640><c> what</c><00:36:18.800><c> we</c><00:36:18.960><c> have</c><00:36:19.520><c> is</c><00:36:19.680><c> that</c><00:36:20.079><c> f</c><00:36:20.240><c> dot</c><00:36:20.480><c> grad</c>

00:36:21.349 --> 00:36:21.359 align:start position:0%
so what we have is that f dot grad
 

00:36:21.359 --> 00:36:24.470 align:start position:0%
so what we have is that f dot grad
we<00:36:21.520><c> see</c><00:36:21.680><c> now</c><00:36:22.400><c> is</c><00:36:22.560><c> just</c><00:36:22.720><c> the</c><00:36:22.880><c> value</c><00:36:23.440><c> of</c><00:36:23.760><c> d</c>

00:36:24.470 --> 00:36:24.480 align:start position:0%
we see now is just the value of d
 

00:36:24.480 --> 00:36:28.790 align:start position:0%
we see now is just the value of d
which<00:36:24.720><c> is</c><00:36:24.880><c> 4.</c>

00:36:28.790 --> 00:36:28.800 align:start position:0%
 
 

00:36:28.800 --> 00:36:30.150 align:start position:0%
 
and<00:36:28.960><c> we</c><00:36:29.119><c> see</c><00:36:29.359><c> that</c>

00:36:30.150 --> 00:36:30.160 align:start position:0%
and we see that
 

00:36:30.160 --> 00:36:31.670 align:start position:0%
and we see that
d<00:36:30.320><c> dot</c><00:36:30.640><c> grad</c>

00:36:31.670 --> 00:36:31.680 align:start position:0%
d dot grad
 

00:36:31.680 --> 00:36:36.870 align:start position:0%
d dot grad
is<00:36:31.920><c> just</c><00:36:32.480><c> uh</c><00:36:32.880><c> the</c><00:36:32.960><c> value</c><00:36:33.280><c> of</c><00:36:33.440><c> f</c>

00:36:36.870 --> 00:36:36.880 align:start position:0%
 
 

00:36:36.880 --> 00:36:41.190 align:start position:0%
 
and<00:36:37.280><c> so</c><00:36:37.599><c> the</c><00:36:37.760><c> value</c><00:36:38.000><c> of</c><00:36:38.160><c> f</c><00:36:38.640><c> is</c><00:36:39.440><c> negative</c><00:36:39.680><c> two</c>

00:36:41.190 --> 00:36:41.200 align:start position:0%
and so the value of f is negative two
 

00:36:41.200 --> 00:36:45.109 align:start position:0%
and so the value of f is negative two
so<00:36:41.359><c> we'll</c><00:36:41.599><c> set</c><00:36:41.839><c> those</c><00:36:42.480><c> manually</c>

00:36:45.109 --> 00:36:45.119 align:start position:0%
 
 

00:36:45.119 --> 00:36:47.030 align:start position:0%
 
let<00:36:45.280><c> me</c><00:36:45.440><c> erase</c><00:36:45.760><c> this</c><00:36:45.839><c> markdown</c><00:36:46.320><c> node</c><00:36:46.720><c> and</c><00:36:46.800><c> then</c>

00:36:47.030 --> 00:36:47.040 align:start position:0%
let me erase this markdown node and then
 

00:36:47.040 --> 00:36:50.870 align:start position:0%
let me erase this markdown node and then
let's<00:36:47.359><c> redraw</c><00:36:47.839><c> what</c><00:36:48.000><c> we</c><00:36:48.160><c> have</c>

00:36:50.870 --> 00:36:50.880 align:start position:0%
 
 

00:36:50.880 --> 00:36:51.829 align:start position:0%
 
okay

00:36:51.829 --> 00:36:51.839 align:start position:0%
okay
 

00:36:51.839 --> 00:36:53.190 align:start position:0%
okay
and<00:36:52.000><c> let's</c><00:36:52.160><c> just</c><00:36:52.320><c> make</c><00:36:52.480><c> sure</c><00:36:52.720><c> that</c><00:36:52.880><c> these</c><00:36:53.040><c> were</c>

00:36:53.190 --> 00:36:53.200 align:start position:0%
and let's just make sure that these were
 

00:36:53.200 --> 00:36:56.390 align:start position:0%
and let's just make sure that these were
correct<00:36:53.920><c> so</c><00:36:54.160><c> we</c><00:36:54.640><c> seem</c><00:36:54.880><c> to</c><00:36:55.280><c> think</c><00:36:55.599><c> that</c><00:36:55.920><c> dl</c><00:36:56.240><c> by</c>

00:36:56.390 --> 00:36:56.400 align:start position:0%
correct so we seem to think that dl by
 

00:36:56.400 --> 00:36:59.510 align:start position:0%
correct so we seem to think that dl by
dd<00:36:56.720><c> is</c><00:36:56.800><c> negative</c><00:36:57.119><c> two</c><00:36:57.359><c> so</c><00:36:57.520><c> let's</c><00:36:57.680><c> double</c><00:36:58.000><c> check</c>

00:36:59.510 --> 00:36:59.520 align:start position:0%
dd is negative two so let's double check
 

00:36:59.520 --> 00:37:02.310 align:start position:0%
dd is negative two so let's double check
um<00:37:00.160><c> let</c><00:37:00.400><c> me</c><00:37:00.480><c> erase</c><00:37:00.720><c> this</c><00:37:00.880><c> plus</c><00:37:01.119><c> h</c><00:37:01.280><c> from</c><00:37:01.440><c> before</c>

00:37:02.310 --> 00:37:02.320 align:start position:0%
um let me erase this plus h from before
 

00:37:02.320 --> 00:37:03.349 align:start position:0%
um let me erase this plus h from before
and<00:37:02.480><c> now</c><00:37:02.640><c> we</c><00:37:02.720><c> want</c><00:37:02.880><c> the</c><00:37:02.960><c> derivative</c><00:37:03.280><c> with</c>

00:37:03.349 --> 00:37:03.359 align:start position:0%
and now we want the derivative with
 

00:37:03.359 --> 00:37:05.109 align:start position:0%
and now we want the derivative with
respect<00:37:03.680><c> to</c><00:37:04.000><c> f</c>

00:37:05.109 --> 00:37:05.119 align:start position:0%
respect to f
 

00:37:05.119 --> 00:37:06.870 align:start position:0%
respect to f
so<00:37:05.280><c> let's</c><00:37:05.440><c> just</c><00:37:05.599><c> come</c><00:37:05.760><c> here</c><00:37:05.920><c> when</c><00:37:06.079><c> i</c><00:37:06.240><c> create</c><00:37:06.560><c> f</c>

00:37:06.870 --> 00:37:06.880 align:start position:0%
so let's just come here when i create f
 

00:37:06.880 --> 00:37:08.950 align:start position:0%
so let's just come here when i create f
and<00:37:06.960><c> let's</c><00:37:07.200><c> do</c><00:37:07.359><c> a</c><00:37:07.440><c> plus</c><00:37:07.680><c> h</c><00:37:08.000><c> here</c><00:37:08.720><c> and</c><00:37:08.800><c> this</c>

00:37:08.950 --> 00:37:08.960 align:start position:0%
and let's do a plus h here and this
 

00:37:08.960 --> 00:37:10.790 align:start position:0%
and let's do a plus h here and this
should<00:37:09.200><c> print</c><00:37:09.440><c> the</c><00:37:09.520><c> derivative</c><00:37:10.000><c> of</c><00:37:10.400><c> l</c><00:37:10.640><c> with</c>

00:37:10.790 --> 00:37:10.800 align:start position:0%
should print the derivative of l with
 

00:37:10.800 --> 00:37:14.150 align:start position:0%
should print the derivative of l with
respect<00:37:11.040><c> to</c><00:37:11.280><c> f</c><00:37:11.520><c> so</c><00:37:11.680><c> we</c><00:37:11.760><c> expect</c><00:37:12.079><c> to</c><00:37:12.160><c> see</c><00:37:12.480><c> four</c>

00:37:14.150 --> 00:37:14.160 align:start position:0%
respect to f so we expect to see four
 

00:37:14.160 --> 00:37:16.310 align:start position:0%
respect to f so we expect to see four
yeah<00:37:14.320><c> and</c><00:37:14.480><c> this</c><00:37:14.640><c> is</c><00:37:14.880><c> four</c><00:37:15.359><c> up</c><00:37:15.520><c> to</c><00:37:15.920><c> floating</c>

00:37:16.310 --> 00:37:16.320 align:start position:0%
yeah and this is four up to floating
 

00:37:16.320 --> 00:37:17.109 align:start position:0%
yeah and this is four up to floating
point

00:37:17.109 --> 00:37:17.119 align:start position:0%
point
 

00:37:17.119 --> 00:37:18.950 align:start position:0%
point
funkiness

00:37:18.950 --> 00:37:18.960 align:start position:0%
funkiness
 

00:37:18.960 --> 00:37:21.349 align:start position:0%
funkiness
and<00:37:19.119><c> then</c><00:37:19.680><c> dl</c><00:37:20.079><c> by</c><00:37:20.320><c> dd</c>

00:37:21.349 --> 00:37:21.359 align:start position:0%
and then dl by dd
 

00:37:21.359 --> 00:37:25.030 align:start position:0%
and then dl by dd
should<00:37:21.520><c> be</c><00:37:22.160><c> f</c><00:37:22.800><c> which</c><00:37:23.040><c> is</c><00:37:23.119><c> negative</c><00:37:23.760><c> two</c>

00:37:25.030 --> 00:37:25.040 align:start position:0%
should be f which is negative two
 

00:37:25.040 --> 00:37:26.630 align:start position:0%
should be f which is negative two
grad<00:37:25.280><c> is</c><00:37:25.440><c> negative</c><00:37:25.760><c> two</c>

00:37:26.630 --> 00:37:26.640 align:start position:0%
grad is negative two
 

00:37:26.640 --> 00:37:31.829 align:start position:0%
grad is negative two
so<00:37:26.960><c> if</c><00:37:27.119><c> we</c><00:37:27.520><c> again</c><00:37:28.000><c> come</c><00:37:28.240><c> here</c><00:37:28.560><c> and</c><00:37:28.720><c> we</c><00:37:28.960><c> change</c><00:37:29.280><c> d</c>

00:37:31.829 --> 00:37:31.839 align:start position:0%
 
 

00:37:31.839 --> 00:37:35.109 align:start position:0%
 
d<00:37:32.000><c> dot</c><00:37:32.240><c> data</c><00:37:32.640><c> plus</c><00:37:32.880><c> equals</c><00:37:33.280><c> h</c><00:37:33.839><c> right</c><00:37:34.079><c> here</c>

00:37:35.109 --> 00:37:35.119 align:start position:0%
d dot data plus equals h right here
 

00:37:35.119 --> 00:37:37.510 align:start position:0%
d dot data plus equals h right here
so<00:37:35.280><c> we</c><00:37:35.440><c> expect</c><00:37:36.320><c> so</c><00:37:36.480><c> we've</c><00:37:36.640><c> added</c><00:37:36.880><c> a</c><00:37:36.880><c> little</c><00:37:37.119><c> h</c>

00:37:37.510 --> 00:37:37.520 align:start position:0%
so we expect so we've added a little h
 

00:37:37.520 --> 00:37:40.069 align:start position:0%
so we expect so we've added a little h
and<00:37:37.680><c> then</c><00:37:37.839><c> we</c><00:37:38.000><c> see</c><00:37:38.240><c> how</c><00:37:38.560><c> l</c><00:37:38.800><c> changed</c><00:37:39.680><c> and</c><00:37:39.920><c> we</c>

00:37:40.069 --> 00:37:40.079 align:start position:0%
and then we see how l changed and we
 

00:37:40.079 --> 00:37:42.310 align:start position:0%
and then we see how l changed and we
expect<00:37:40.640><c> to</c><00:37:40.960><c> print</c>

00:37:42.310 --> 00:37:42.320 align:start position:0%
expect to print
 

00:37:42.320 --> 00:37:44.630 align:start position:0%
expect to print
uh<00:37:42.640><c> negative</c><00:37:42.960><c> two</c>

00:37:44.630 --> 00:37:44.640 align:start position:0%
uh negative two
 

00:37:44.640 --> 00:37:47.349 align:start position:0%
uh negative two
there<00:37:44.800><c> we</c><00:37:44.960><c> go</c>

00:37:47.349 --> 00:37:47.359 align:start position:0%
 
 

00:37:47.359 --> 00:37:49.510 align:start position:0%
 
so<00:37:47.599><c> we've</c><00:37:47.839><c> numerically</c><00:37:48.400><c> verified</c><00:37:49.119><c> what</c><00:37:49.119><c> we're</c>

00:37:49.510 --> 00:37:49.520 align:start position:0%
so we've numerically verified what we're
 

00:37:49.520 --> 00:37:50.870 align:start position:0%
so we've numerically verified what we're
doing<00:37:49.760><c> here</c><00:37:50.000><c> is</c><00:37:50.079><c> what</c><00:37:50.320><c> kind</c><00:37:50.480><c> of</c><00:37:50.560><c> like</c><00:37:50.720><c> an</c>

00:37:50.870 --> 00:37:50.880 align:start position:0%
doing here is what kind of like an
 

00:37:50.880 --> 00:37:53.430 align:start position:0%
doing here is what kind of like an
inline<00:37:51.280><c> gradient</c><00:37:51.760><c> check</c><00:37:52.480><c> gradient</c><00:37:52.960><c> check</c><00:37:53.280><c> is</c>

00:37:53.430 --> 00:37:53.440 align:start position:0%
inline gradient check gradient check is
 

00:37:53.440 --> 00:37:54.390 align:start position:0%
inline gradient check gradient check is
when<00:37:53.680><c> we</c>

00:37:54.390 --> 00:37:54.400 align:start position:0%
when we
 

00:37:54.400 --> 00:37:56.390 align:start position:0%
when we
are<00:37:54.560><c> deriving</c><00:37:55.119><c> this</c><00:37:55.280><c> like</c><00:37:55.520><c> back</c><00:37:55.680><c> propagation</c>

00:37:56.390 --> 00:37:56.400 align:start position:0%
are deriving this like back propagation
 

00:37:56.400 --> 00:37:57.589 align:start position:0%
are deriving this like back propagation
and<00:37:56.480><c> getting</c><00:37:56.720><c> the</c><00:37:56.800><c> derivative</c><00:37:57.200><c> with</c><00:37:57.359><c> respect</c>

00:37:57.589 --> 00:37:57.599 align:start position:0%
and getting the derivative with respect
 

00:37:57.599 --> 00:38:00.310 align:start position:0%
and getting the derivative with respect
to<00:37:57.839><c> all</c><00:37:58.000><c> the</c><00:37:58.079><c> intermediate</c><00:37:59.040><c> results</c><00:38:00.000><c> and</c><00:38:00.160><c> then</c>

00:38:00.310 --> 00:38:00.320 align:start position:0%
to all the intermediate results and then
 

00:38:00.320 --> 00:38:03.190 align:start position:0%
to all the intermediate results and then
numerical<00:38:00.880><c> gradient</c><00:38:01.359><c> is</c><00:38:01.440><c> just</c><00:38:01.680><c> you</c><00:38:01.839><c> know</c>

00:38:03.190 --> 00:38:03.200 align:start position:0%
numerical gradient is just you know
 

00:38:03.200 --> 00:38:06.069 align:start position:0%
numerical gradient is just you know
estimating<00:38:03.680><c> it</c><00:38:03.920><c> using</c><00:38:04.640><c> small</c><00:38:04.880><c> step</c><00:38:05.200><c> size</c>

00:38:06.069 --> 00:38:06.079 align:start position:0%
estimating it using small step size
 

00:38:06.079 --> 00:38:07.990 align:start position:0%
estimating it using small step size
now<00:38:06.240><c> we're</c><00:38:06.400><c> getting</c><00:38:06.720><c> to</c><00:38:06.880><c> the</c><00:38:07.359><c> crux</c><00:38:07.839><c> of</c>

00:38:07.990 --> 00:38:08.000 align:start position:0%
now we're getting to the crux of
 

00:38:08.000 --> 00:38:10.390 align:start position:0%
now we're getting to the crux of
backpropagation<00:38:09.040><c> so</c><00:38:09.280><c> this</c><00:38:09.440><c> will</c><00:38:09.599><c> be</c><00:38:09.839><c> the</c><00:38:10.079><c> most</c>

00:38:10.390 --> 00:38:10.400 align:start position:0%
backpropagation so this will be the most
 

00:38:10.400 --> 00:38:12.870 align:start position:0%
backpropagation so this will be the most
important<00:38:10.960><c> node</c><00:38:11.680><c> to</c><00:38:11.839><c> understand</c><00:38:12.480><c> because</c><00:38:12.720><c> if</c>

00:38:12.870 --> 00:38:12.880 align:start position:0%
important node to understand because if
 

00:38:12.880 --> 00:38:14.310 align:start position:0%
important node to understand because if
you<00:38:12.960><c> understand</c><00:38:13.359><c> the</c><00:38:13.520><c> gradient</c><00:38:13.920><c> for</c><00:38:14.079><c> this</c>

00:38:14.310 --> 00:38:14.320 align:start position:0%
you understand the gradient for this
 

00:38:14.320 --> 00:38:16.069 align:start position:0%
you understand the gradient for this
node<00:38:15.040><c> you</c><00:38:15.280><c> understand</c><00:38:15.680><c> all</c><00:38:15.839><c> of</c><00:38:15.920><c> back</c>

00:38:16.069 --> 00:38:16.079 align:start position:0%
node you understand all of back
 

00:38:16.079 --> 00:38:17.430 align:start position:0%
node you understand all of back
propagation<00:38:16.720><c> and</c><00:38:16.880><c> all</c><00:38:17.040><c> of</c><00:38:17.119><c> training</c><00:38:17.359><c> of</c>

00:38:17.430 --> 00:38:17.440 align:start position:0%
propagation and all of training of
 

00:38:17.440 --> 00:38:19.589 align:start position:0%
propagation and all of training of
neural<00:38:17.680><c> nets</c><00:38:18.320><c> basically</c>

00:38:19.589 --> 00:38:19.599 align:start position:0%
neural nets basically
 

00:38:19.599 --> 00:38:23.109 align:start position:0%
neural nets basically
so<00:38:19.760><c> we</c><00:38:19.920><c> need</c><00:38:20.079><c> to</c><00:38:20.160><c> derive</c><00:38:20.960><c> dl</c><00:38:21.680><c> by</c><00:38:22.160><c> bc</c>

00:38:23.109 --> 00:38:23.119 align:start position:0%
so we need to derive dl by bc
 

00:38:23.119 --> 00:38:24.710 align:start position:0%
so we need to derive dl by bc
in<00:38:23.280><c> other</c><00:38:23.359><c> words</c><00:38:23.599><c> the</c><00:38:23.680><c> derivative</c><00:38:24.079><c> of</c><00:38:24.240><c> l</c><00:38:24.560><c> with</c>

00:38:24.710 --> 00:38:24.720 align:start position:0%
in other words the derivative of l with
 

00:38:24.720 --> 00:38:26.550 align:start position:0%
in other words the derivative of l with
respect<00:38:25.119><c> to</c><00:38:25.599><c> c</c>

00:38:26.550 --> 00:38:26.560 align:start position:0%
respect to c
 

00:38:26.560 --> 00:38:27.910 align:start position:0%
respect to c
because<00:38:26.800><c> we've</c><00:38:26.960><c> computed</c><00:38:27.440><c> all</c><00:38:27.520><c> these</c><00:38:27.760><c> other</c>

00:38:27.910 --> 00:38:27.920 align:start position:0%
because we've computed all these other
 

00:38:27.920 --> 00:38:29.430 align:start position:0%
because we've computed all these other
gradients<00:38:28.400><c> already</c>

00:38:29.430 --> 00:38:29.440 align:start position:0%
gradients already
 

00:38:29.440 --> 00:38:30.630 align:start position:0%
gradients already
now<00:38:29.599><c> we're</c><00:38:29.760><c> coming</c><00:38:30.079><c> here</c><00:38:30.400><c> and</c><00:38:30.480><c> we're</c>

00:38:30.630 --> 00:38:30.640 align:start position:0%
now we're coming here and we're
 

00:38:30.640 --> 00:38:33.589 align:start position:0%
now we're coming here and we're
continuing<00:38:31.040><c> the</c><00:38:31.119><c> back</c><00:38:31.280><c> propagation</c><00:38:32.320><c> manually</c>

00:38:33.589 --> 00:38:33.599 align:start position:0%
continuing the back propagation manually
 

00:38:33.599 --> 00:38:36.150 align:start position:0%
continuing the back propagation manually
so<00:38:33.839><c> we</c><00:38:33.920><c> want</c><00:38:34.079><c> dl</c><00:38:34.480><c> by</c><00:38:34.720><c> dc</c><00:38:35.440><c> and</c><00:38:35.599><c> then</c><00:38:35.760><c> we'll</c><00:38:35.920><c> also</c>

00:38:36.150 --> 00:38:36.160 align:start position:0%
so we want dl by dc and then we'll also
 

00:38:36.160 --> 00:38:38.390 align:start position:0%
so we want dl by dc and then we'll also
derive<00:38:36.400><c> dl</c><00:38:36.800><c> by</c><00:38:37.040><c> de</c>

00:38:38.390 --> 00:38:38.400 align:start position:0%
derive dl by de
 

00:38:38.400 --> 00:38:39.990 align:start position:0%
derive dl by de
now<00:38:38.560><c> here's</c><00:38:38.800><c> the</c><00:38:38.880><c> problem</c>

00:38:39.990 --> 00:38:40.000 align:start position:0%
now here's the problem
 

00:38:40.000 --> 00:38:41.910 align:start position:0%
now here's the problem
how<00:38:40.160><c> do</c><00:38:40.320><c> we</c><00:38:40.400><c> derive</c><00:38:40.880><c> dl</c>

00:38:41.910 --> 00:38:41.920 align:start position:0%
how do we derive dl
 

00:38:41.920 --> 00:38:43.990 align:start position:0%
how do we derive dl
by<00:38:42.160><c> dc</c>

00:38:43.990 --> 00:38:44.000 align:start position:0%
by dc
 

00:38:44.000 --> 00:38:46.150 align:start position:0%
by dc
we<00:38:44.240><c> actually</c><00:38:44.560><c> know</c><00:38:44.880><c> the</c><00:38:45.040><c> derivative</c><00:38:45.599><c> l</c><00:38:45.920><c> with</c>

00:38:46.150 --> 00:38:46.160 align:start position:0%
we actually know the derivative l with
 

00:38:46.160 --> 00:38:48.790 align:start position:0%
we actually know the derivative l with
respect<00:38:46.480><c> to</c><00:38:46.640><c> d</c><00:38:47.200><c> so</c><00:38:47.359><c> we</c><00:38:47.520><c> know</c><00:38:47.760><c> how</c><00:38:48.079><c> l</c><00:38:48.400><c> assessed</c>

00:38:48.790 --> 00:38:48.800 align:start position:0%
respect to d so we know how l assessed
 

00:38:48.800 --> 00:38:50.069 align:start position:0%
respect to d so we know how l assessed
it<00:38:48.960><c> to</c><00:38:49.119><c> d</c>

00:38:50.069 --> 00:38:50.079 align:start position:0%
it to d
 

00:38:50.079 --> 00:38:53.109 align:start position:0%
it to d
but<00:38:50.320><c> how</c><00:38:50.560><c> is</c><00:38:50.800><c> l</c><00:38:51.119><c> sensitive</c><00:38:51.760><c> to</c><00:38:52.240><c> c</c><00:38:52.640><c> so</c><00:38:52.880><c> if</c><00:38:52.960><c> we</c>

00:38:53.109 --> 00:38:53.119 align:start position:0%
but how is l sensitive to c so if we
 

00:38:53.119 --> 00:38:55.670 align:start position:0%
but how is l sensitive to c so if we
wiggle<00:38:53.520><c> c</c><00:38:53.760><c> how</c><00:38:53.920><c> does</c><00:38:54.160><c> that</c><00:38:54.400><c> impact</c><00:38:54.960><c> l</c>

00:38:55.670 --> 00:38:55.680 align:start position:0%
wiggle c how does that impact l
 

00:38:55.680 --> 00:38:57.990 align:start position:0%
wiggle c how does that impact l
through<00:38:56.000><c> d</c>

00:38:57.990 --> 00:38:58.000 align:start position:0%
through d
 

00:38:58.000 --> 00:39:01.910 align:start position:0%
through d
so<00:38:58.640><c> we</c><00:38:58.800><c> know</c><00:38:58.960><c> dl</c><00:38:59.280><c> by</c><00:38:59.440><c> dc</c>

00:39:01.910 --> 00:39:01.920 align:start position:0%
 
 

00:39:01.920 --> 00:39:04.630 align:start position:0%
 
and<00:39:02.079><c> we</c><00:39:02.320><c> also</c><00:39:02.640><c> here</c><00:39:02.960><c> know</c><00:39:03.200><c> how</c><00:39:03.440><c> c</c><00:39:03.680><c> impacts</c><00:39:04.079><c> d</c>

00:39:04.630 --> 00:39:04.640 align:start position:0%
and we also here know how c impacts d
 

00:39:04.640 --> 00:39:06.310 align:start position:0%
and we also here know how c impacts d
and<00:39:04.800><c> so</c><00:39:04.960><c> just</c><00:39:05.200><c> very</c><00:39:05.359><c> intuitively</c><00:39:05.920><c> if</c><00:39:06.000><c> you</c><00:39:06.160><c> know</c>

00:39:06.310 --> 00:39:06.320 align:start position:0%
and so just very intuitively if you know
 

00:39:06.320 --> 00:39:09.190 align:start position:0%
and so just very intuitively if you know
the<00:39:06.800><c> impact</c><00:39:07.280><c> that</c><00:39:07.520><c> c</c><00:39:07.760><c> is</c><00:39:07.839><c> having</c><00:39:08.079><c> on</c><00:39:08.320><c> d</c><00:39:08.880><c> and</c><00:39:09.040><c> the</c>

00:39:09.190 --> 00:39:09.200 align:start position:0%
the impact that c is having on d and the
 

00:39:09.200 --> 00:39:11.349 align:start position:0%
the impact that c is having on d and the
impact<00:39:09.440><c> that</c><00:39:09.599><c> d</c><00:39:09.839><c> is</c><00:39:09.920><c> having</c><00:39:10.160><c> on</c><00:39:10.400><c> l</c>

00:39:11.349 --> 00:39:11.359 align:start position:0%
impact that d is having on l
 

00:39:11.359 --> 00:39:12.870 align:start position:0%
impact that d is having on l
then<00:39:11.520><c> you</c><00:39:11.680><c> should</c><00:39:11.839><c> be</c><00:39:11.920><c> able</c><00:39:12.079><c> to</c><00:39:12.160><c> somehow</c><00:39:12.720><c> put</c>

00:39:12.870 --> 00:39:12.880 align:start position:0%
then you should be able to somehow put
 

00:39:12.880 --> 00:39:14.390 align:start position:0%
then you should be able to somehow put
that<00:39:13.200><c> information</c><00:39:13.599><c> together</c><00:39:14.000><c> to</c><00:39:14.079><c> figure</c><00:39:14.320><c> out</c>

00:39:14.390 --> 00:39:14.400 align:start position:0%
that information together to figure out
 

00:39:14.400 --> 00:39:16.470 align:start position:0%
that information together to figure out
how<00:39:14.640><c> c</c><00:39:14.960><c> impacts</c><00:39:15.440><c> l</c>

00:39:16.470 --> 00:39:16.480 align:start position:0%
how c impacts l
 

00:39:16.480 --> 00:39:18.470 align:start position:0%
how c impacts l
and<00:39:16.720><c> indeed</c><00:39:16.960><c> this</c><00:39:17.200><c> is</c><00:39:17.280><c> what</c><00:39:17.440><c> we</c><00:39:17.520><c> can</c><00:39:17.680><c> actually</c>

00:39:18.470 --> 00:39:18.480 align:start position:0%
and indeed this is what we can actually
 

00:39:18.480 --> 00:39:20.870 align:start position:0%
and indeed this is what we can actually
do<00:39:19.119><c> so</c><00:39:19.280><c> in</c><00:39:19.440><c> particular</c><00:39:19.920><c> we</c><00:39:20.160><c> know</c><00:39:20.720><c> just</c>

00:39:20.870 --> 00:39:20.880 align:start position:0%
do so in particular we know just
 

00:39:20.880 --> 00:39:22.950 align:start position:0%
do so in particular we know just
concentrating<00:39:21.440><c> on</c><00:39:21.599><c> d</c><00:39:21.839><c> first</c><00:39:22.480><c> let's</c><00:39:22.720><c> look</c><00:39:22.880><c> at</c>

00:39:22.950 --> 00:39:22.960 align:start position:0%
concentrating on d first let's look at
 

00:39:22.960 --> 00:39:24.870 align:start position:0%
concentrating on d first let's look at
how<00:39:23.599><c> what</c><00:39:23.839><c> is</c><00:39:23.920><c> the</c><00:39:24.000><c> derivative</c><00:39:24.400><c> basically</c><00:39:24.800><c> of</c>

00:39:24.870 --> 00:39:24.880 align:start position:0%
how what is the derivative basically of
 

00:39:24.880 --> 00:39:27.030 align:start position:0%
how what is the derivative basically of
d<00:39:25.200><c> with</c><00:39:25.359><c> respect</c><00:39:25.680><c> to</c><00:39:25.839><c> c</c><00:39:26.480><c> so</c><00:39:26.640><c> in</c><00:39:26.720><c> other</c><00:39:26.880><c> words</c>

00:39:27.030 --> 00:39:27.040 align:start position:0%
d with respect to c so in other words
 

00:39:27.040 --> 00:39:31.589 align:start position:0%
d with respect to c so in other words
what<00:39:27.200><c> is</c><00:39:27.359><c> dd</c><00:39:27.680><c> by</c><00:39:27.920><c> dc</c>

00:39:31.589 --> 00:39:31.599 align:start position:0%
 
 

00:39:31.599 --> 00:39:34.710 align:start position:0%
 
so<00:39:31.920><c> here</c><00:39:32.160><c> we</c><00:39:32.320><c> know</c><00:39:32.480><c> that</c><00:39:32.720><c> d</c><00:39:33.040><c> is</c><00:39:33.359><c> c</c><00:39:33.599><c> times</c><00:39:34.000><c> c</c><00:39:34.320><c> plus</c>

00:39:34.710 --> 00:39:34.720 align:start position:0%
so here we know that d is c times c plus
 

00:39:34.720 --> 00:39:35.589 align:start position:0%
so here we know that d is c times c plus
e

00:39:35.589 --> 00:39:35.599 align:start position:0%
e
 

00:39:35.599 --> 00:39:37.349 align:start position:0%
e
that's<00:39:35.839><c> what</c><00:39:35.920><c> we</c><00:39:36.079><c> know</c><00:39:36.640><c> and</c><00:39:36.720><c> now</c><00:39:36.960><c> we're</c>

00:39:37.349 --> 00:39:37.359 align:start position:0%
that's what we know and now we're
 

00:39:37.359 --> 00:39:39.589 align:start position:0%
that's what we know and now we're
interested<00:39:37.760><c> in</c><00:39:37.920><c> dd</c><00:39:38.240><c> by</c><00:39:38.480><c> dc</c>

00:39:39.589 --> 00:39:39.599 align:start position:0%
interested in dd by dc
 

00:39:39.599 --> 00:39:41.349 align:start position:0%
interested in dd by dc
if<00:39:39.760><c> you</c><00:39:40.000><c> just</c><00:39:40.240><c> know</c><00:39:40.400><c> your</c><00:39:40.560><c> calculus</c><00:39:41.040><c> again</c><00:39:41.280><c> and</c>

00:39:41.349 --> 00:39:41.359 align:start position:0%
if you just know your calculus again and
 

00:39:41.359 --> 00:39:43.589 align:start position:0%
if you just know your calculus again and
you<00:39:41.520><c> remember</c><00:39:41.920><c> that</c><00:39:42.320><c> differentiating</c><00:39:43.119><c> c</c><00:39:43.359><c> plus</c>

00:39:43.589 --> 00:39:43.599 align:start position:0%
you remember that differentiating c plus
 

00:39:43.599 --> 00:39:45.510 align:start position:0%
you remember that differentiating c plus
e<00:39:43.839><c> with</c><00:39:43.920><c> respect</c><00:39:44.240><c> to</c><00:39:44.480><c> c</c><00:39:44.880><c> you</c><00:39:45.040><c> know</c><00:39:45.200><c> that</c><00:39:45.359><c> that</c>

00:39:45.510 --> 00:39:45.520 align:start position:0%
e with respect to c you know that that
 

00:39:45.520 --> 00:39:46.470 align:start position:0%
e with respect to c you know that that
gives<00:39:45.760><c> you</c>

00:39:46.470 --> 00:39:46.480 align:start position:0%
gives you
 

00:39:46.480 --> 00:39:47.829 align:start position:0%
gives you
1.0

00:39:47.829 --> 00:39:47.839 align:start position:0%
1.0
 

00:39:47.839 --> 00:39:49.750 align:start position:0%
1.0
and<00:39:48.079><c> we</c><00:39:48.240><c> can</c><00:39:48.400><c> also</c><00:39:48.640><c> go</c><00:39:48.800><c> back</c><00:39:48.960><c> to</c><00:39:49.119><c> the</c><00:39:49.200><c> basics</c>

00:39:49.750 --> 00:39:49.760 align:start position:0%
and we can also go back to the basics
 

00:39:49.760 --> 00:39:51.750 align:start position:0%
and we can also go back to the basics
and<00:39:49.920><c> derive</c><00:39:50.320><c> this</c><00:39:50.880><c> because</c><00:39:51.119><c> again</c><00:39:51.359><c> we</c><00:39:51.520><c> can</c><00:39:51.599><c> go</c>

00:39:51.750 --> 00:39:51.760 align:start position:0%
and derive this because again we can go
 

00:39:51.760 --> 00:39:54.630 align:start position:0%
and derive this because again we can go
to<00:39:51.920><c> our</c><00:39:52.240><c> f</c><00:39:52.400><c> of</c><00:39:52.560><c> x</c><00:39:52.640><c> plus</c><00:39:52.960><c> h</c><00:39:53.200><c> minus</c><00:39:53.520><c> f</c><00:39:53.680><c> of</c><00:39:53.839><c> x</c>

00:39:54.630 --> 00:39:54.640 align:start position:0%
to our f of x plus h minus f of x
 

00:39:54.640 --> 00:39:56.390 align:start position:0%
to our f of x plus h minus f of x
divide<00:39:54.960><c> by</c><00:39:55.200><c> h</c>

00:39:56.390 --> 00:39:56.400 align:start position:0%
divide by h
 

00:39:56.400 --> 00:39:58.470 align:start position:0%
divide by h
that's<00:39:56.640><c> the</c><00:39:56.800><c> definition</c><00:39:57.280><c> of</c><00:39:57.359><c> a</c><00:39:57.440><c> derivative</c><00:39:58.320><c> as</c>

00:39:58.470 --> 00:39:58.480 align:start position:0%
that's the definition of a derivative as
 

00:39:58.480 --> 00:39:59.990 align:start position:0%
that's the definition of a derivative as
h<00:39:58.720><c> goes</c><00:39:58.880><c> to</c><00:39:58.960><c> zero</c>

00:39:59.990 --> 00:40:00.000 align:start position:0%
h goes to zero
 

00:40:00.000 --> 00:40:01.430 align:start position:0%
h goes to zero
and<00:40:00.160><c> so</c><00:40:00.400><c> here</c>

00:40:01.430 --> 00:40:01.440 align:start position:0%
and so here
 

00:40:01.440 --> 00:40:04.390 align:start position:0%
and so here
focusing<00:40:01.920><c> on</c><00:40:02.079><c> c</c><00:40:02.560><c> and</c><00:40:02.800><c> its</c><00:40:02.960><c> effect</c><00:40:03.280><c> on</c><00:40:03.440><c> d</c>

00:40:04.390 --> 00:40:04.400 align:start position:0%
focusing on c and its effect on d
 

00:40:04.400 --> 00:40:06.309 align:start position:0%
focusing on c and its effect on d
we<00:40:04.560><c> can</c><00:40:04.720><c> basically</c><00:40:05.119><c> do</c><00:40:05.359><c> the</c><00:40:05.520><c> f</c><00:40:05.599><c> of</c><00:40:05.760><c> x</c><00:40:05.920><c> plus</c><00:40:06.160><c> h</c>

00:40:06.309 --> 00:40:06.319 align:start position:0%
we can basically do the f of x plus h
 

00:40:06.319 --> 00:40:07.190 align:start position:0%
we can basically do the f of x plus h
will<00:40:06.480><c> be</c>

00:40:07.190 --> 00:40:07.200 align:start position:0%
will be
 

00:40:07.200 --> 00:40:10.870 align:start position:0%
will be
c<00:40:07.680><c> is</c><00:40:08.000><c> incremented</c><00:40:08.560><c> by</c><00:40:08.800><c> h</c><00:40:09.520><c> plus</c><00:40:09.839><c> e</c>

00:40:10.870 --> 00:40:10.880 align:start position:0%
c is incremented by h plus e
 

00:40:10.880 --> 00:40:12.150 align:start position:0%
c is incremented by h plus e
that's<00:40:11.119><c> the</c><00:40:11.200><c> first</c><00:40:11.440><c> evaluation</c><00:40:11.920><c> of</c><00:40:12.079><c> our</c>

00:40:12.150 --> 00:40:12.160 align:start position:0%
that's the first evaluation of our
 

00:40:12.160 --> 00:40:14.309 align:start position:0%
that's the first evaluation of our
function<00:40:12.640><c> minus</c>

00:40:14.309 --> 00:40:14.319 align:start position:0%
function minus
 

00:40:14.319 --> 00:40:16.470 align:start position:0%
function minus
c<00:40:14.480><c> plus</c><00:40:14.720><c> e</c>

00:40:16.470 --> 00:40:16.480 align:start position:0%
c plus e
 

00:40:16.480 --> 00:40:18.309 align:start position:0%
c plus e
and<00:40:16.640><c> then</c><00:40:17.119><c> divide</c><00:40:17.520><c> h</c>

00:40:18.309 --> 00:40:18.319 align:start position:0%
and then divide h
 

00:40:18.319 --> 00:40:19.829 align:start position:0%
and then divide h
and<00:40:18.480><c> so</c><00:40:18.720><c> what</c><00:40:18.880><c> is</c><00:40:19.040><c> this</c>

00:40:19.829 --> 00:40:19.839 align:start position:0%
and so what is this
 

00:40:19.839 --> 00:40:21.829 align:start position:0%
and so what is this
uh<00:40:20.160><c> just</c><00:40:20.319><c> expanding</c><00:40:20.800><c> this</c><00:40:21.040><c> out</c><00:40:21.359><c> this</c><00:40:21.520><c> will</c><00:40:21.680><c> be</c>

00:40:21.829 --> 00:40:21.839 align:start position:0%
uh just expanding this out this will be
 

00:40:21.839 --> 00:40:25.430 align:start position:0%
uh just expanding this out this will be
c<00:40:22.079><c> plus</c><00:40:22.319><c> h</c><00:40:22.640><c> plus</c><00:40:22.960><c> e</c><00:40:23.200><c> minus</c><00:40:23.599><c> c</c><00:40:23.920><c> minus</c><00:40:24.319><c> e</c>

00:40:25.430 --> 00:40:25.440 align:start position:0%
c plus h plus e minus c minus e
 

00:40:25.440 --> 00:40:27.670 align:start position:0%
c plus h plus e minus c minus e
divide<00:40:25.839><c> h</c><00:40:26.400><c> and</c><00:40:26.480><c> then</c><00:40:26.640><c> you</c><00:40:26.720><c> see</c><00:40:26.880><c> here</c><00:40:27.200><c> how</c><00:40:27.440><c> c</c>

00:40:27.670 --> 00:40:27.680 align:start position:0%
divide h and then you see here how c
 

00:40:27.680 --> 00:40:30.309 align:start position:0%
divide h and then you see here how c
minus<00:40:28.000><c> c</c><00:40:28.240><c> cancels</c><00:40:28.960><c> e</c><00:40:29.119><c> minus</c><00:40:29.520><c> e</c><00:40:29.680><c> cancels</c><00:40:30.160><c> we're</c>

00:40:30.309 --> 00:40:30.319 align:start position:0%
minus c cancels e minus e cancels we're
 

00:40:30.319 --> 00:40:33.589 align:start position:0%
minus c cancels e minus e cancels we're
left<00:40:30.480><c> with</c><00:40:30.640><c> h</c><00:40:30.880><c> over</c><00:40:31.119><c> h</c><00:40:31.359><c> which</c><00:40:31.599><c> is</c><00:40:31.680><c> 1.0</c>

00:40:33.589 --> 00:40:33.599 align:start position:0%
left with h over h which is 1.0
 

00:40:33.599 --> 00:40:35.270 align:start position:0%
left with h over h which is 1.0
and<00:40:33.760><c> so</c>

00:40:35.270 --> 00:40:35.280 align:start position:0%
and so
 

00:40:35.280 --> 00:40:38.870 align:start position:0%
and so
by<00:40:35.520><c> symmetry</c><00:40:36.000><c> also</c><00:40:36.640><c> d</c><00:40:37.040><c> d</c><00:40:37.359><c> by</c><00:40:37.680><c> d</c>

00:40:38.870 --> 00:40:38.880 align:start position:0%
by symmetry also d d by d
 

00:40:38.880 --> 00:40:39.750 align:start position:0%
by symmetry also d d by d
e

00:40:39.750 --> 00:40:39.760 align:start position:0%
e
 

00:40:39.760 --> 00:40:42.950 align:start position:0%
e
will<00:40:40.000><c> be</c><00:40:40.160><c> 1.0</c><00:40:41.280><c> as</c><00:40:41.440><c> well</c>

00:40:42.950 --> 00:40:42.960 align:start position:0%
will be 1.0 as well
 

00:40:42.960 --> 00:40:44.790 align:start position:0%
will be 1.0 as well
so<00:40:43.119><c> basically</c><00:40:43.440><c> the</c><00:40:43.599><c> derivative</c><00:40:44.079><c> of</c><00:40:44.240><c> a</c><00:40:44.480><c> sum</c>

00:40:44.790 --> 00:40:44.800 align:start position:0%
so basically the derivative of a sum
 

00:40:44.800 --> 00:40:46.630 align:start position:0%
so basically the derivative of a sum
expression<00:40:45.280><c> is</c><00:40:45.440><c> very</c><00:40:45.599><c> simple</c><00:40:46.079><c> and</c><00:40:46.319><c> and</c><00:40:46.400><c> this</c>

00:40:46.630 --> 00:40:46.640 align:start position:0%
expression is very simple and and this
 

00:40:46.640 --> 00:40:49.030 align:start position:0%
expression is very simple and and this
is<00:40:46.800><c> the</c><00:40:46.960><c> local</c><00:40:47.280><c> derivative</c><00:40:48.240><c> so</c><00:40:48.480><c> i</c><00:40:48.640><c> call</c><00:40:48.800><c> this</c>

00:40:49.030 --> 00:40:49.040 align:start position:0%
is the local derivative so i call this
 

00:40:49.040 --> 00:40:51.030 align:start position:0%
is the local derivative so i call this
the<00:40:49.119><c> local</c><00:40:49.359><c> derivative</c><00:40:49.839><c> because</c><00:40:50.640><c> we</c><00:40:50.800><c> have</c><00:40:50.960><c> the</c>

00:40:51.030 --> 00:40:51.040 align:start position:0%
the local derivative because we have the
 

00:40:51.040 --> 00:40:52.470 align:start position:0%
the local derivative because we have the
final<00:40:51.359><c> output</c><00:40:51.599><c> value</c><00:40:51.920><c> all</c><00:40:52.000><c> the</c><00:40:52.160><c> way</c><00:40:52.240><c> at</c><00:40:52.400><c> the</c>

00:40:52.470 --> 00:40:52.480 align:start position:0%
final output value all the way at the
 

00:40:52.480 --> 00:40:54.390 align:start position:0%
final output value all the way at the
end<00:40:52.640><c> of</c><00:40:52.720><c> this</c><00:40:52.880><c> graph</c><00:40:53.520><c> and</c><00:40:53.680><c> we're</c><00:40:53.920><c> now</c><00:40:54.160><c> like</c><00:40:54.319><c> a</c>

00:40:54.390 --> 00:40:54.400 align:start position:0%
end of this graph and we're now like a
 

00:40:54.400 --> 00:40:55.829 align:start position:0%
end of this graph and we're now like a
small<00:40:54.640><c> node</c><00:40:54.960><c> here</c>

00:40:55.829 --> 00:40:55.839 align:start position:0%
small node here
 

00:40:55.839 --> 00:40:57.990 align:start position:0%
small node here
and<00:40:56.079><c> this</c><00:40:56.319><c> is</c><00:40:56.480><c> a</c><00:40:56.560><c> little</c><00:40:56.880><c> plus</c><00:40:57.200><c> node</c>

00:40:57.990 --> 00:40:58.000 align:start position:0%
and this is a little plus node
 

00:40:58.000 --> 00:41:00.069 align:start position:0%
and this is a little plus node
and<00:40:58.319><c> it</c><00:40:58.560><c> the</c><00:40:58.640><c> little</c><00:40:58.960><c> plus</c><00:40:59.280><c> node</c><00:40:59.680><c> doesn't</c><00:40:59.920><c> know</c>

00:41:00.069 --> 00:41:00.079 align:start position:0%
and it the little plus node doesn't know
 

00:41:00.079 --> 00:41:02.069 align:start position:0%
and it the little plus node doesn't know
anything<00:41:00.400><c> about</c><00:41:00.800><c> the</c><00:41:01.200><c> rest</c><00:41:01.440><c> of</c><00:41:01.520><c> the</c><00:41:01.680><c> graph</c>

00:41:02.069 --> 00:41:02.079 align:start position:0%
anything about the rest of the graph
 

00:41:02.079 --> 00:41:04.150 align:start position:0%
anything about the rest of the graph
that<00:41:02.240><c> it's</c><00:41:02.480><c> embedded</c><00:41:02.960><c> in</c><00:41:03.440><c> all</c><00:41:03.680><c> it</c><00:41:03.839><c> knows</c><00:41:04.079><c> is</c>

00:41:04.150 --> 00:41:04.160 align:start position:0%
that it's embedded in all it knows is
 

00:41:04.160 --> 00:41:07.109 align:start position:0%
that it's embedded in all it knows is
that<00:41:04.319><c> it</c><00:41:04.400><c> did</c><00:41:04.560><c> a</c><00:41:04.720><c> plus</c><00:41:05.440><c> it</c><00:41:05.599><c> took</c><00:41:05.839><c> a</c><00:41:05.920><c> c</c><00:41:06.160><c> and</c><00:41:06.319><c> an</c><00:41:06.480><c> e</c>

00:41:07.109 --> 00:41:07.119 align:start position:0%
that it did a plus it took a c and an e
 

00:41:07.119 --> 00:41:09.109 align:start position:0%
that it did a plus it took a c and an e
added<00:41:07.440><c> them</c><00:41:07.680><c> and</c><00:41:07.839><c> created</c><00:41:08.319><c> d</c>

00:41:09.109 --> 00:41:09.119 align:start position:0%
added them and created d
 

00:41:09.119 --> 00:41:11.190 align:start position:0%
added them and created d
and<00:41:09.359><c> this</c><00:41:09.599><c> plus</c><00:41:09.839><c> note</c><00:41:10.079><c> also</c><00:41:10.400><c> knows</c><00:41:10.640><c> the</c><00:41:10.800><c> local</c>

00:41:11.190 --> 00:41:11.200 align:start position:0%
and this plus note also knows the local
 

00:41:11.200 --> 00:41:14.390 align:start position:0%
and this plus note also knows the local
influence<00:41:11.760><c> of</c><00:41:12.079><c> c</c><00:41:12.319><c> on</c><00:41:12.480><c> d</c><00:41:13.119><c> or</c><00:41:13.359><c> rather</c><00:41:13.920><c> rather</c><00:41:14.240><c> the</c>

00:41:14.390 --> 00:41:14.400 align:start position:0%
influence of c on d or rather rather the
 

00:41:14.400 --> 00:41:16.309 align:start position:0%
influence of c on d or rather rather the
derivative<00:41:14.720><c> of</c><00:41:14.800><c> d</c><00:41:14.960><c> with</c><00:41:15.040><c> respect</c><00:41:15.359><c> to</c><00:41:15.520><c> c</c><00:41:16.079><c> and</c><00:41:16.240><c> it</c>

00:41:16.309 --> 00:41:16.319 align:start position:0%
derivative of d with respect to c and it
 

00:41:16.319 --> 00:41:17.030 align:start position:0%
derivative of d with respect to c and it
also

00:41:17.030 --> 00:41:17.040 align:start position:0%
also
 

00:41:17.040 --> 00:41:18.710 align:start position:0%
also
knows<00:41:17.280><c> the</c><00:41:17.440><c> derivative</c><00:41:17.760><c> of</c><00:41:17.920><c> d</c><00:41:18.160><c> with</c><00:41:18.400><c> respect</c>

00:41:18.710 --> 00:41:18.720 align:start position:0%
knows the derivative of d with respect
 

00:41:18.720 --> 00:41:21.270 align:start position:0%
knows the derivative of d with respect
to<00:41:18.960><c> e</c><00:41:19.839><c> but</c><00:41:20.079><c> that's</c><00:41:20.319><c> not</c><00:41:20.480><c> what</c><00:41:20.640><c> we</c><00:41:20.800><c> want</c><00:41:21.119><c> that's</c>

00:41:21.270 --> 00:41:21.280 align:start position:0%
to e but that's not what we want that's
 

00:41:21.280 --> 00:41:23.349 align:start position:0%
to e but that's not what we want that's
just<00:41:21.520><c> a</c><00:41:21.599><c> local</c><00:41:21.920><c> derivative</c><00:41:22.720><c> what</c><00:41:22.880><c> we</c><00:41:23.040><c> actually</c>

00:41:23.349 --> 00:41:23.359 align:start position:0%
just a local derivative what we actually
 

00:41:23.359 --> 00:41:27.670 align:start position:0%
just a local derivative what we actually
want<00:41:23.760><c> is</c><00:41:23.920><c> d</c><00:41:24.319><c> l</c><00:41:24.800><c> by</c><00:41:24.960><c> d</c><00:41:25.200><c> c</c><00:41:25.839><c> and</c><00:41:26.079><c> l</c><00:41:26.319><c> could</c><00:41:26.880><c> l</c><00:41:27.200><c> is</c><00:41:27.359><c> here</c>

00:41:27.670 --> 00:41:27.680 align:start position:0%
want is d l by d c and l could l is here
 

00:41:27.680 --> 00:41:30.710 align:start position:0%
want is d l by d c and l could l is here
just<00:41:27.920><c> one</c><00:41:28.160><c> step</c><00:41:28.400><c> away</c><00:41:29.200><c> but</c><00:41:29.440><c> in</c><00:41:29.520><c> a</c><00:41:29.680><c> general</c><00:41:30.000><c> case</c>

00:41:30.710 --> 00:41:30.720 align:start position:0%
just one step away but in a general case
 

00:41:30.720 --> 00:41:32.230 align:start position:0%
just one step away but in a general case
this<00:41:30.960><c> little</c><00:41:31.119><c> plus</c><00:41:31.440><c> note</c><00:41:31.760><c> is</c><00:41:31.920><c> could</c><00:41:32.079><c> be</c>

00:41:32.230 --> 00:41:32.240 align:start position:0%
this little plus note is could be
 

00:41:32.240 --> 00:41:34.630 align:start position:0%
this little plus note is could be
embedded<00:41:32.640><c> in</c><00:41:32.720><c> like</c><00:41:32.960><c> a</c><00:41:33.040><c> massive</c><00:41:33.440><c> graph</c>

00:41:34.630 --> 00:41:34.640 align:start position:0%
embedded in like a massive graph
 

00:41:34.640 --> 00:41:35.750 align:start position:0%
embedded in like a massive graph
so

00:41:35.750 --> 00:41:35.760 align:start position:0%
so
 

00:41:35.760 --> 00:41:38.390 align:start position:0%
so
again<00:41:36.079><c> we</c><00:41:36.240><c> know</c><00:41:36.480><c> how</c><00:41:36.880><c> l</c><00:41:37.200><c> impacts</c><00:41:37.599><c> d</c><00:41:37.920><c> and</c><00:41:38.079><c> now</c><00:41:38.240><c> we</c>

00:41:38.390 --> 00:41:38.400 align:start position:0%
again we know how l impacts d and now we
 

00:41:38.400 --> 00:41:41.270 align:start position:0%
again we know how l impacts d and now we
know<00:41:38.560><c> how</c><00:41:39.040><c> c</c><00:41:39.280><c> and</c><00:41:39.440><c> e</c><00:41:39.760><c> impact</c><00:41:40.160><c> d</c><00:41:40.720><c> how</c><00:41:40.880><c> do</c><00:41:41.040><c> we</c><00:41:41.119><c> put</c>

00:41:41.270 --> 00:41:41.280 align:start position:0%
know how c and e impact d how do we put
 

00:41:41.280 --> 00:41:43.349 align:start position:0%
know how c and e impact d how do we put
that<00:41:41.440><c> information</c><00:41:41.839><c> together</c><00:41:42.240><c> to</c><00:41:42.400><c> write</c><00:41:42.720><c> dl</c><00:41:43.200><c> by</c>

00:41:43.349 --> 00:41:43.359 align:start position:0%
that information together to write dl by
 

00:41:43.359 --> 00:41:45.990 align:start position:0%
that information together to write dl by
dc<00:41:44.240><c> and</c><00:41:44.400><c> the</c><00:41:44.480><c> answer</c><00:41:44.800><c> of</c><00:41:44.880><c> course</c><00:41:45.200><c> is</c><00:41:45.520><c> the</c><00:41:45.680><c> chain</c>

00:41:45.990 --> 00:41:46.000 align:start position:0%
dc and the answer of course is the chain
 

00:41:46.000 --> 00:41:47.750 align:start position:0%
dc and the answer of course is the chain
rule<00:41:46.240><c> in</c><00:41:46.400><c> calculus</c>

00:41:47.750 --> 00:41:47.760 align:start position:0%
rule in calculus
 

00:41:47.760 --> 00:41:50.069 align:start position:0%
rule in calculus
and<00:41:48.000><c> so</c><00:41:48.560><c> um</c>

00:41:50.069 --> 00:41:50.079 align:start position:0%
and so um
 

00:41:50.079 --> 00:41:51.510 align:start position:0%
and so um
i<00:41:50.240><c> pulled</c><00:41:50.480><c> up</c><00:41:50.560><c> a</c><00:41:50.640><c> chain</c><00:41:50.800><c> rule</c><00:41:51.040><c> here</c><00:41:51.359><c> from</c>

00:41:51.510 --> 00:41:51.520 align:start position:0%
i pulled up a chain rule here from
 

00:41:51.520 --> 00:41:52.950 align:start position:0%
i pulled up a chain rule here from
kapedia

00:41:52.950 --> 00:41:52.960 align:start position:0%
kapedia
 

00:41:52.960 --> 00:41:53.910 align:start position:0%
kapedia
and

00:41:53.910 --> 00:41:53.920 align:start position:0%
and
 

00:41:53.920 --> 00:41:54.870 align:start position:0%
and
i'm<00:41:54.000><c> going</c><00:41:54.079><c> to</c><00:41:54.160><c> go</c><00:41:54.319><c> through</c><00:41:54.480><c> this</c><00:41:54.720><c> very</c>

00:41:54.870 --> 00:41:54.880 align:start position:0%
i'm going to go through this very
 

00:41:54.880 --> 00:41:57.190 align:start position:0%
i'm going to go through this very
briefly<00:41:55.599><c> so</c><00:41:55.839><c> chain</c><00:41:56.079><c> rule</c>

00:41:57.190 --> 00:41:57.200 align:start position:0%
briefly so chain rule
 

00:41:57.200 --> 00:41:58.550 align:start position:0%
briefly so chain rule
wikipedia<00:41:57.760><c> sometimes</c><00:41:58.160><c> can</c><00:41:58.240><c> be</c><00:41:58.400><c> very</c>

00:41:58.550 --> 00:41:58.560 align:start position:0%
wikipedia sometimes can be very
 

00:41:58.560 --> 00:42:00.309 align:start position:0%
wikipedia sometimes can be very
confusing<00:41:59.040><c> and</c><00:41:59.200><c> calculus</c><00:41:59.599><c> can</c>

00:42:00.309 --> 00:42:00.319 align:start position:0%
confusing and calculus can
 

00:42:00.319 --> 00:42:02.550 align:start position:0%
confusing and calculus can
can<00:42:00.480><c> be</c><00:42:00.640><c> very</c><00:42:00.800><c> confusing</c><00:42:01.359><c> like</c><00:42:02.000><c> this</c><00:42:02.319><c> is</c><00:42:02.480><c> the</c>

00:42:02.550 --> 00:42:02.560 align:start position:0%
can be very confusing like this is the
 

00:42:02.560 --> 00:42:03.589 align:start position:0%
can be very confusing like this is the
way<00:42:02.800><c> i</c>

00:42:03.589 --> 00:42:03.599 align:start position:0%
way i
 

00:42:03.599 --> 00:42:05.030 align:start position:0%
way i
learned

00:42:05.030 --> 00:42:05.040 align:start position:0%
learned
 

00:42:05.040 --> 00:42:06.390 align:start position:0%
learned
chain<00:42:05.280><c> rule</c><00:42:05.520><c> and</c><00:42:05.599><c> it</c><00:42:05.599><c> was</c><00:42:05.760><c> very</c><00:42:05.920><c> confusing</c>

00:42:06.390 --> 00:42:06.400 align:start position:0%
chain rule and it was very confusing
 

00:42:06.400 --> 00:42:08.550 align:start position:0%
chain rule and it was very confusing
like<00:42:06.640><c> what</c><00:42:06.960><c> is</c><00:42:07.200><c> happening</c><00:42:08.000><c> it's</c><00:42:08.160><c> just</c>

00:42:08.550 --> 00:42:08.560 align:start position:0%
like what is happening it's just
 

00:42:08.560 --> 00:42:10.710 align:start position:0%
like what is happening it's just
complicated<00:42:09.440><c> so</c><00:42:09.599><c> i</c><00:42:09.760><c> like</c><00:42:09.920><c> this</c><00:42:10.319><c> expression</c>

00:42:10.710 --> 00:42:10.720 align:start position:0%
complicated so i like this expression
 

00:42:10.720 --> 00:42:12.950 align:start position:0%
complicated so i like this expression
much<00:42:10.960><c> better</c>

00:42:12.950 --> 00:42:12.960 align:start position:0%
much better
 

00:42:12.960 --> 00:42:15.109 align:start position:0%
much better
if<00:42:13.119><c> a</c><00:42:13.200><c> variable</c><00:42:13.599><c> z</c><00:42:13.839><c> depends</c><00:42:14.160><c> on</c><00:42:14.240><c> a</c><00:42:14.319><c> variable</c><00:42:14.720><c> y</c>

00:42:15.109 --> 00:42:15.119 align:start position:0%
if a variable z depends on a variable y
 

00:42:15.119 --> 00:42:18.069 align:start position:0%
if a variable z depends on a variable y
which<00:42:15.359><c> itself</c><00:42:15.760><c> depends</c><00:42:16.079><c> on</c><00:42:16.240><c> the</c><00:42:16.319><c> variable</c><00:42:16.720><c> x</c>

00:42:18.069 --> 00:42:18.079 align:start position:0%
which itself depends on the variable x
 

00:42:18.079 --> 00:42:20.309 align:start position:0%
which itself depends on the variable x
then<00:42:18.319><c> z</c><00:42:18.480><c> depends</c><00:42:18.800><c> on</c><00:42:19.040><c> x</c><00:42:19.200><c> as</c><00:42:19.359><c> well</c><00:42:19.839><c> obviously</c>

00:42:20.309 --> 00:42:20.319 align:start position:0%
then z depends on x as well obviously
 

00:42:20.319 --> 00:42:22.390 align:start position:0%
then z depends on x as well obviously
through<00:42:20.480><c> the</c><00:42:20.640><c> intermediate</c><00:42:21.119><c> variable</c><00:42:21.440><c> y</c>

00:42:22.390 --> 00:42:22.400 align:start position:0%
through the intermediate variable y
 

00:42:22.400 --> 00:42:24.309 align:start position:0%
through the intermediate variable y
in<00:42:22.640><c> this</c><00:42:22.800><c> case</c><00:42:23.040><c> the</c><00:42:23.200><c> chain</c><00:42:23.440><c> rule</c><00:42:23.680><c> is</c><00:42:23.839><c> expressed</c>

00:42:24.309 --> 00:42:24.319 align:start position:0%
in this case the chain rule is expressed
 

00:42:24.319 --> 00:42:25.190 align:start position:0%
in this case the chain rule is expressed
as

00:42:25.190 --> 00:42:25.200 align:start position:0%
as
 

00:42:25.200 --> 00:42:28.069 align:start position:0%
as
if<00:42:25.359><c> you</c><00:42:25.440><c> want</c><00:42:26.079><c> dz</c><00:42:26.480><c> by</c><00:42:26.640><c> dx</c>

00:42:28.069 --> 00:42:28.079 align:start position:0%
if you want dz by dx
 

00:42:28.079 --> 00:42:30.710 align:start position:0%
if you want dz by dx
then<00:42:28.800><c> you</c><00:42:28.960><c> take</c><00:42:29.200><c> the</c><00:42:29.280><c> dz</c><00:42:29.599><c> by</c><00:42:29.760><c> dy</c><00:42:30.400><c> and</c><00:42:30.560><c> you</c>

00:42:30.710 --> 00:42:30.720 align:start position:0%
then you take the dz by dy and you
 

00:42:30.720 --> 00:42:33.670 align:start position:0%
then you take the dz by dy and you
multiply<00:42:31.280><c> it</c><00:42:31.680><c> by</c><00:42:31.839><c> d</c><00:42:32.079><c> y</c><00:42:32.240><c> by</c><00:42:32.400><c> dx</c>

00:42:33.670 --> 00:42:33.680 align:start position:0%
multiply it by d y by dx
 

00:42:33.680 --> 00:42:34.950 align:start position:0%
multiply it by d y by dx
so<00:42:33.920><c> the</c><00:42:34.000><c> chain</c><00:42:34.160><c> rule</c><00:42:34.400><c> fundamentally</c><00:42:34.880><c> is</c>

00:42:34.950 --> 00:42:34.960 align:start position:0%
so the chain rule fundamentally is
 

00:42:34.960 --> 00:42:36.150 align:start position:0%
so the chain rule fundamentally is
telling<00:42:35.280><c> you</c>

00:42:36.150 --> 00:42:36.160 align:start position:0%
telling you
 

00:42:36.160 --> 00:42:37.270 align:start position:0%
telling you
how

00:42:37.270 --> 00:42:37.280 align:start position:0%
how
 

00:42:37.280 --> 00:42:39.270 align:start position:0%
how
we<00:42:37.920><c> chain</c><00:42:38.319><c> these</c>

00:42:39.270 --> 00:42:39.280 align:start position:0%
we chain these
 

00:42:39.280 --> 00:42:41.510 align:start position:0%
we chain these
uh<00:42:39.599><c> derivatives</c><00:42:40.160><c> together</c>

00:42:41.510 --> 00:42:41.520 align:start position:0%
uh derivatives together
 

00:42:41.520 --> 00:42:44.309 align:start position:0%
uh derivatives together
correctly<00:42:42.400><c> so</c><00:42:43.040><c> to</c><00:42:43.280><c> differentiate</c><00:42:44.000><c> through</c><00:42:44.240><c> a</c>

00:42:44.309 --> 00:42:44.319 align:start position:0%
correctly so to differentiate through a
 

00:42:44.319 --> 00:42:46.069 align:start position:0%
correctly so to differentiate through a
function<00:42:44.720><c> composition</c>

00:42:46.069 --> 00:42:46.079 align:start position:0%
function composition
 

00:42:46.079 --> 00:42:48.710 align:start position:0%
function composition
we<00:42:46.319><c> have</c><00:42:46.560><c> to</c><00:42:46.800><c> apply</c><00:42:47.200><c> a</c><00:42:47.280><c> multiplication</c>

00:42:48.710 --> 00:42:48.720 align:start position:0%
we have to apply a multiplication
 

00:42:48.720 --> 00:42:49.589 align:start position:0%
we have to apply a multiplication
of

00:42:49.589 --> 00:42:49.599 align:start position:0%
of
 

00:42:49.599 --> 00:42:51.670 align:start position:0%
of
those<00:42:49.839><c> derivatives</c>

00:42:51.670 --> 00:42:51.680 align:start position:0%
those derivatives
 

00:42:51.680 --> 00:42:53.510 align:start position:0%
those derivatives
so<00:42:51.920><c> that's</c><00:42:52.400><c> really</c><00:42:52.640><c> what</c><00:42:52.960><c> chain</c><00:42:53.200><c> rule</c><00:42:53.359><c> is</c>

00:42:53.510 --> 00:42:53.520 align:start position:0%
so that's really what chain rule is
 

00:42:53.520 --> 00:42:54.630 align:start position:0%
so that's really what chain rule is
telling<00:42:53.839><c> us</c>

00:42:54.630 --> 00:42:54.640 align:start position:0%
telling us
 

00:42:54.640 --> 00:42:56.470 align:start position:0%
telling us
and<00:42:55.040><c> there's</c><00:42:55.280><c> a</c><00:42:55.359><c> nice</c><00:42:55.680><c> little</c><00:42:56.000><c> intuitive</c>

00:42:56.470 --> 00:42:56.480 align:start position:0%
and there's a nice little intuitive
 

00:42:56.480 --> 00:42:58.069 align:start position:0%
and there's a nice little intuitive
explanation<00:42:56.960><c> here</c><00:42:57.119><c> which</c><00:42:57.359><c> i</c><00:42:57.520><c> also</c><00:42:57.760><c> think</c><00:42:58.000><c> is</c>

00:42:58.069 --> 00:42:58.079 align:start position:0%
explanation here which i also think is
 

00:42:58.079 --> 00:42:59.910 align:start position:0%
explanation here which i also think is
kind<00:42:58.240><c> of</c><00:42:58.319><c> cute</c><00:42:59.119><c> the</c><00:42:59.280><c> chain</c><00:42:59.440><c> rule</c><00:42:59.599><c> says</c><00:42:59.839><c> that</c>

00:42:59.910 --> 00:42:59.920 align:start position:0%
kind of cute the chain rule says that
 

00:42:59.920 --> 00:43:01.270 align:start position:0%
kind of cute the chain rule says that
knowing<00:43:00.160><c> the</c><00:43:00.240><c> instantaneous</c><00:43:00.720><c> rate</c><00:43:00.960><c> of</c><00:43:01.040><c> change</c>

00:43:01.270 --> 00:43:01.280 align:start position:0%
knowing the instantaneous rate of change
 

00:43:01.280 --> 00:43:03.750 align:start position:0%
knowing the instantaneous rate of change
of<00:43:01.359><c> z</c><00:43:01.680><c> with</c><00:43:01.839><c> respect</c><00:43:02.160><c> to</c><00:43:02.319><c> y</c><00:43:02.880><c> and</c><00:43:03.040><c> y</c><00:43:03.280><c> relative</c><00:43:03.599><c> to</c>

00:43:03.750 --> 00:43:03.760 align:start position:0%
of z with respect to y and y relative to
 

00:43:03.760 --> 00:43:04.790 align:start position:0%
of z with respect to y and y relative to
x<00:43:03.920><c> allows</c><00:43:04.240><c> one</c><00:43:04.319><c> to</c><00:43:04.400><c> calculate</c><00:43:04.720><c> the</c>

00:43:04.790 --> 00:43:04.800 align:start position:0%
x allows one to calculate the
 

00:43:04.800 --> 00:43:06.390 align:start position:0%
x allows one to calculate the
instantaneous<00:43:05.280><c> rate</c><00:43:05.440><c> of</c><00:43:05.599><c> change</c><00:43:05.839><c> of</c><00:43:05.920><c> z</c>

00:43:06.390 --> 00:43:06.400 align:start position:0%
instantaneous rate of change of z
 

00:43:06.400 --> 00:43:07.829 align:start position:0%
instantaneous rate of change of z
relative<00:43:06.720><c> to</c><00:43:06.880><c> x</c>

00:43:07.829 --> 00:43:07.839 align:start position:0%
relative to x
 

00:43:07.839 --> 00:43:09.510 align:start position:0%
relative to x
as<00:43:08.079><c> a</c><00:43:08.240><c> product</c><00:43:08.640><c> of</c><00:43:08.720><c> those</c><00:43:08.880><c> two</c><00:43:09.119><c> rates</c><00:43:09.440><c> of</c>

00:43:09.510 --> 00:43:09.520 align:start position:0%
as a product of those two rates of
 

00:43:09.520 --> 00:43:10.390 align:start position:0%
as a product of those two rates of
change

00:43:10.390 --> 00:43:10.400 align:start position:0%
change
 

00:43:10.400 --> 00:43:12.550 align:start position:0%
change
simply<00:43:10.880><c> the</c><00:43:10.960><c> product</c><00:43:11.280><c> of</c><00:43:11.440><c> those</c><00:43:11.599><c> two</c>

00:43:12.550 --> 00:43:12.560 align:start position:0%
simply the product of those two
 

00:43:12.560 --> 00:43:14.309 align:start position:0%
simply the product of those two
so<00:43:13.040><c> here's</c><00:43:13.280><c> a</c><00:43:13.359><c> good</c><00:43:13.520><c> one</c>

00:43:14.309 --> 00:43:14.319 align:start position:0%
so here's a good one
 

00:43:14.319 --> 00:43:15.990 align:start position:0%
so here's a good one
if<00:43:14.480><c> a</c><00:43:14.560><c> car</c><00:43:14.720><c> travels</c><00:43:15.119><c> twice</c><00:43:15.359><c> as</c><00:43:15.520><c> fast</c><00:43:15.760><c> as</c>

00:43:15.990 --> 00:43:16.000 align:start position:0%
if a car travels twice as fast as
 

00:43:16.000 --> 00:43:18.150 align:start position:0%
if a car travels twice as fast as
bicycle<00:43:16.720><c> and</c><00:43:16.880><c> the</c><00:43:16.960><c> bicycle</c><00:43:17.359><c> is</c><00:43:17.520><c> four</c><00:43:17.760><c> times</c><00:43:18.000><c> as</c>

00:43:18.150 --> 00:43:18.160 align:start position:0%
bicycle and the bicycle is four times as
 

00:43:18.160 --> 00:43:19.910 align:start position:0%
bicycle and the bicycle is four times as
fast<00:43:18.400><c> as</c><00:43:18.560><c> walking</c><00:43:18.960><c> man</c>

00:43:19.910 --> 00:43:19.920 align:start position:0%
fast as walking man
 

00:43:19.920 --> 00:43:22.309 align:start position:0%
fast as walking man
then<00:43:20.079><c> the</c><00:43:20.240><c> car</c><00:43:20.480><c> travels</c><00:43:21.119><c> two</c><00:43:21.359><c> times</c><00:43:21.680><c> four</c>

00:43:22.309 --> 00:43:22.319 align:start position:0%
then the car travels two times four
 

00:43:22.319 --> 00:43:25.109 align:start position:0%
then the car travels two times four
eight<00:43:22.640><c> times</c><00:43:23.359><c> as</c><00:43:23.520><c> fast</c><00:43:23.760><c> as</c><00:43:23.920><c> demand</c>

00:43:25.109 --> 00:43:25.119 align:start position:0%
eight times as fast as demand
 

00:43:25.119 --> 00:43:27.190 align:start position:0%
eight times as fast as demand
and<00:43:25.280><c> so</c><00:43:25.520><c> this</c><00:43:25.760><c> makes</c><00:43:26.079><c> it</c><00:43:26.240><c> very</c><00:43:26.480><c> clear</c><00:43:26.800><c> that</c><00:43:27.040><c> the</c>

00:43:27.190 --> 00:43:27.200 align:start position:0%
and so this makes it very clear that the
 

00:43:27.200 --> 00:43:29.190 align:start position:0%
and so this makes it very clear that the
correct<00:43:27.599><c> thing</c><00:43:27.839><c> to</c><00:43:28.000><c> do</c><00:43:28.240><c> sort</c><00:43:28.480><c> of</c>

00:43:29.190 --> 00:43:29.200 align:start position:0%
correct thing to do sort of
 

00:43:29.200 --> 00:43:30.950 align:start position:0%
correct thing to do sort of
is<00:43:29.359><c> to</c><00:43:29.599><c> multiply</c>

00:43:30.950 --> 00:43:30.960 align:start position:0%
is to multiply
 

00:43:30.960 --> 00:43:31.910 align:start position:0%
is to multiply
so

00:43:31.910 --> 00:43:31.920 align:start position:0%
so
 

00:43:31.920 --> 00:43:33.829 align:start position:0%
so
cars<00:43:32.240><c> twice</c><00:43:32.560><c> as</c><00:43:32.640><c> fast</c><00:43:32.800><c> as</c><00:43:32.960><c> bicycle</c><00:43:33.680><c> and</c>

00:43:33.829 --> 00:43:33.839 align:start position:0%
cars twice as fast as bicycle and
 

00:43:33.839 --> 00:43:36.550 align:start position:0%
cars twice as fast as bicycle and
bicycle<00:43:34.400><c> is</c><00:43:34.800><c> four</c><00:43:34.960><c> times</c><00:43:35.200><c> as</c><00:43:35.359><c> fast</c><00:43:35.599><c> as</c><00:43:35.760><c> man</c>

00:43:36.550 --> 00:43:36.560 align:start position:0%
bicycle is four times as fast as man
 

00:43:36.560 --> 00:43:38.870 align:start position:0%
bicycle is four times as fast as man
so<00:43:37.040><c> the</c><00:43:37.200><c> car</c><00:43:37.440><c> will</c><00:43:37.599><c> be</c><00:43:37.920><c> eight</c><00:43:38.160><c> times</c><00:43:38.400><c> as</c><00:43:38.560><c> fast</c>

00:43:38.870 --> 00:43:38.880 align:start position:0%
so the car will be eight times as fast
 

00:43:38.880 --> 00:43:42.150 align:start position:0%
so the car will be eight times as fast
as<00:43:39.040><c> the</c><00:43:39.200><c> man</c><00:43:40.319><c> and</c><00:43:40.480><c> so</c><00:43:40.720><c> we</c><00:43:40.880><c> can</c><00:43:41.040><c> take</c><00:43:41.280><c> these</c>

00:43:42.150 --> 00:43:42.160 align:start position:0%
as the man and so we can take these
 

00:43:42.160 --> 00:43:44.390 align:start position:0%
as the man and so we can take these
intermediate<00:43:42.720><c> rates</c><00:43:42.960><c> of</c><00:43:43.040><c> change</c><00:43:43.359><c> if</c><00:43:43.440><c> you</c><00:43:43.599><c> will</c>

00:43:44.390 --> 00:43:44.400 align:start position:0%
intermediate rates of change if you will
 

00:43:44.400 --> 00:43:46.309 align:start position:0%
intermediate rates of change if you will
and<00:43:44.800><c> multiply</c><00:43:45.200><c> them</c><00:43:45.359><c> together</c>

00:43:46.309 --> 00:43:46.319 align:start position:0%
and multiply them together
 

00:43:46.319 --> 00:43:48.550 align:start position:0%
and multiply them together
and<00:43:46.480><c> that</c><00:43:46.720><c> justifies</c><00:43:47.760><c> the</c>

00:43:48.550 --> 00:43:48.560 align:start position:0%
and that justifies the
 

00:43:48.560 --> 00:43:50.710 align:start position:0%
and that justifies the
chain<00:43:48.800><c> rule</c><00:43:49.119><c> intuitively</c><00:43:50.079><c> so</c><00:43:50.319><c> have</c><00:43:50.480><c> a</c><00:43:50.480><c> look</c><00:43:50.640><c> at</c>

00:43:50.710 --> 00:43:50.720 align:start position:0%
chain rule intuitively so have a look at
 

00:43:50.720 --> 00:43:52.630 align:start position:0%
chain rule intuitively so have a look at
chain<00:43:50.960><c> rule</c><00:43:51.280><c> about</c><00:43:51.599><c> here</c><00:43:52.160><c> really</c><00:43:52.400><c> what</c><00:43:52.560><c> it</c>

00:43:52.630 --> 00:43:52.640 align:start position:0%
chain rule about here really what it
 

00:43:52.640 --> 00:43:54.630 align:start position:0%
chain rule about here really what it
means<00:43:52.880><c> for</c><00:43:53.119><c> us</c><00:43:53.359><c> is</c><00:43:53.920><c> there's</c><00:43:54.160><c> a</c><00:43:54.240><c> very</c><00:43:54.319><c> simple</c>

00:43:54.630 --> 00:43:54.640 align:start position:0%
means for us is there's a very simple
 

00:43:54.640 --> 00:43:56.630 align:start position:0%
means for us is there's a very simple
recipe<00:43:55.040><c> for</c><00:43:55.280><c> deriving</c><00:43:55.839><c> what</c><00:43:56.000><c> we</c><00:43:56.079><c> want</c><00:43:56.400><c> which</c>

00:43:56.630 --> 00:43:56.640 align:start position:0%
recipe for deriving what we want which
 

00:43:56.640 --> 00:43:59.589 align:start position:0%
recipe for deriving what we want which
is<00:43:56.800><c> dl</c><00:43:57.440><c> by</c><00:43:57.680><c> dc</c>

00:43:59.589 --> 00:43:59.599 align:start position:0%
is dl by dc
 

00:43:59.599 --> 00:44:01.510 align:start position:0%
is dl by dc
and<00:43:59.760><c> what</c><00:43:59.920><c> we</c><00:44:00.079><c> have</c><00:44:00.319><c> so</c><00:44:00.560><c> far</c>

00:44:01.510 --> 00:44:01.520 align:start position:0%
and what we have so far
 

00:44:01.520 --> 00:44:03.589 align:start position:0%
and what we have so far
is<00:44:01.760><c> we</c><00:44:02.000><c> know</c>

00:44:03.589 --> 00:44:03.599 align:start position:0%
is we know
 

00:44:03.599 --> 00:44:05.190 align:start position:0%
is we know
want

00:44:05.190 --> 00:44:05.200 align:start position:0%
want
 

00:44:05.200 --> 00:44:07.430 align:start position:0%
want
and<00:44:05.359><c> we</c><00:44:05.520><c> know</c>

00:44:07.430 --> 00:44:07.440 align:start position:0%
and we know
 

00:44:07.440 --> 00:44:08.870 align:start position:0%
and we know
what<00:44:07.680><c> is</c><00:44:07.760><c> the</c>

00:44:08.870 --> 00:44:08.880 align:start position:0%
what is the
 

00:44:08.880 --> 00:44:12.630 align:start position:0%
what is the
impact<00:44:09.280><c> of</c><00:44:09.520><c> d</c><00:44:09.839><c> on</c><00:44:10.079><c> l</c><00:44:10.480><c> so</c><00:44:10.640><c> we</c><00:44:10.720><c> know</c><00:44:10.960><c> d</c><00:44:11.359><c> l</c><00:44:11.760><c> by</c>

00:44:12.630 --> 00:44:12.640 align:start position:0%
impact of d on l so we know d l by
 

00:44:12.640 --> 00:44:14.790 align:start position:0%
impact of d on l so we know d l by
d<00:44:12.880><c> d</c><00:44:13.520><c> the</c><00:44:13.680><c> derivative</c><00:44:14.079><c> of</c><00:44:14.160><c> l</c><00:44:14.319><c> with</c><00:44:14.480><c> respect</c><00:44:14.720><c> to</c>

00:44:14.790 --> 00:44:14.800 align:start position:0%
d d the derivative of l with respect to
 

00:44:14.800 --> 00:44:17.430 align:start position:0%
d d the derivative of l with respect to
d<00:44:14.960><c> d</c><00:44:15.440><c> we</c><00:44:15.599><c> know</c><00:44:15.839><c> that</c><00:44:15.920><c> that's</c><00:44:16.240><c> negative</c><00:44:16.560><c> two</c>

00:44:17.430 --> 00:44:17.440 align:start position:0%
d d we know that that's negative two
 

00:44:17.440 --> 00:44:19.349 align:start position:0%
d d we know that that's negative two
and<00:44:17.599><c> now</c><00:44:17.839><c> because</c><00:44:18.160><c> of</c><00:44:18.240><c> this</c><00:44:18.480><c> local</c>

00:44:19.349 --> 00:44:19.359 align:start position:0%
and now because of this local
 

00:44:19.359 --> 00:44:21.430 align:start position:0%
and now because of this local
reasoning<00:44:19.760><c> that</c><00:44:19.920><c> we've</c><00:44:20.000><c> done</c><00:44:20.240><c> here</c><00:44:20.960><c> we</c><00:44:21.119><c> know</c>

00:44:21.430 --> 00:44:21.440 align:start position:0%
reasoning that we've done here we know
 

00:44:21.440 --> 00:44:23.030 align:start position:0%
reasoning that we've done here we know
dd<00:44:21.920><c> by</c><00:44:22.160><c> d</c>

00:44:23.030 --> 00:44:23.040 align:start position:0%
dd by d
 

00:44:23.040 --> 00:44:24.550 align:start position:0%
dd by d
c

00:44:24.550 --> 00:44:24.560 align:start position:0%
c
 

00:44:24.560 --> 00:44:27.510 align:start position:0%
c
so<00:44:24.720><c> how</c><00:44:24.880><c> does</c><00:44:25.119><c> c</c><00:44:25.359><c> impact</c><00:44:25.760><c> d</c><00:44:26.319><c> and</c><00:44:26.560><c> in</c>

00:44:27.510 --> 00:44:27.520 align:start position:0%
so how does c impact d and in
 

00:44:27.520 --> 00:44:29.589 align:start position:0%
so how does c impact d and in
particular<00:44:28.000><c> this</c><00:44:28.160><c> is</c><00:44:28.319><c> a</c><00:44:28.400><c> plus</c><00:44:28.640><c> node</c><00:44:29.200><c> so</c><00:44:29.359><c> the</c>

00:44:29.589 --> 00:44:29.599 align:start position:0%
particular this is a plus node so the
 

00:44:29.599 --> 00:44:31.990 align:start position:0%
particular this is a plus node so the
local<00:44:29.839><c> derivative</c><00:44:30.319><c> is</c><00:44:30.400><c> simply</c><00:44:30.960><c> 1.0</c><00:44:31.599><c> it's</c><00:44:31.760><c> very</c>

00:44:31.990 --> 00:44:32.000 align:start position:0%
local derivative is simply 1.0 it's very
 

00:44:32.000 --> 00:44:33.270 align:start position:0%
local derivative is simply 1.0 it's very
simple

00:44:33.270 --> 00:44:33.280 align:start position:0%
simple
 

00:44:33.280 --> 00:44:34.309 align:start position:0%
simple
and<00:44:33.440><c> so</c>

00:44:34.309 --> 00:44:34.319 align:start position:0%
and so
 

00:44:34.319 --> 00:44:37.349 align:start position:0%
and so
the<00:44:34.480><c> chain</c><00:44:34.720><c> rule</c><00:44:34.960><c> tells</c><00:44:35.200><c> us</c><00:44:35.359><c> that</c><00:44:35.520><c> dl</c><00:44:35.920><c> by</c><00:44:36.079><c> dc</c>

00:44:37.349 --> 00:44:37.359 align:start position:0%
the chain rule tells us that dl by dc
 

00:44:37.359 --> 00:44:40.150 align:start position:0%
the chain rule tells us that dl by dc
going<00:44:37.599><c> through</c><00:44:37.760><c> this</c><00:44:37.920><c> intermediate</c><00:44:38.480><c> variable</c>

00:44:40.150 --> 00:44:40.160 align:start position:0%
going through this intermediate variable
 

00:44:40.160 --> 00:44:43.990 align:start position:0%
going through this intermediate variable
will<00:44:40.319><c> just</c><00:44:40.560><c> be</c><00:44:40.720><c> simply</c><00:44:41.280><c> d</c><00:44:41.839><c> l</c><00:44:42.160><c> by</c>

00:44:43.990 --> 00:44:44.000 align:start position:0%
will just be simply d l by
 

00:44:44.000 --> 00:44:44.790 align:start position:0%
will just be simply d l by
d

00:44:44.790 --> 00:44:44.800 align:start position:0%
d
 

00:44:44.800 --> 00:44:49.190 align:start position:0%
d
times

00:44:49.190 --> 00:44:49.200 align:start position:0%
 
 

00:44:49.200 --> 00:44:51.670 align:start position:0%
 
dd<00:44:50.240><c> by</c><00:44:50.400><c> dc</c>

00:44:51.670 --> 00:44:51.680 align:start position:0%
dd by dc
 

00:44:51.680 --> 00:44:53.270 align:start position:0%
dd by dc
that's<00:44:52.000><c> chain</c><00:44:52.240><c> rule</c>

00:44:53.270 --> 00:44:53.280 align:start position:0%
that's chain rule
 

00:44:53.280 --> 00:44:55.829 align:start position:0%
that's chain rule
so<00:44:53.440><c> this</c><00:44:53.760><c> is</c><00:44:54.000><c> identical</c><00:44:55.119><c> to</c><00:44:55.280><c> what's</c><00:44:55.520><c> happening</c>

00:44:55.829 --> 00:44:55.839 align:start position:0%
so this is identical to what's happening
 

00:44:55.839 --> 00:44:56.710 align:start position:0%
so this is identical to what's happening
here

00:44:56.710 --> 00:44:56.720 align:start position:0%
here
 

00:44:56.720 --> 00:44:58.470 align:start position:0%
here
except

00:44:58.470 --> 00:44:58.480 align:start position:0%
except
 

00:44:58.480 --> 00:44:59.910 align:start position:0%
except
z<00:44:58.800><c> is</c><00:44:58.960><c> rl</c>

00:44:59.910 --> 00:44:59.920 align:start position:0%
z is rl
 

00:44:59.920 --> 00:45:03.750 align:start position:0%
z is rl
y<00:45:00.240><c> is</c><00:45:00.400><c> our</c><00:45:00.640><c> d</c><00:45:01.280><c> and</c><00:45:01.599><c> x</c><00:45:01.920><c> is</c><00:45:02.079><c> rc</c>

00:45:03.750 --> 00:45:03.760 align:start position:0%
y is our d and x is rc
 

00:45:03.760 --> 00:45:05.190 align:start position:0%
y is our d and x is rc
so<00:45:03.920><c> we</c><00:45:04.160><c> literally</c><00:45:04.480><c> just</c><00:45:04.640><c> have</c><00:45:04.720><c> to</c><00:45:04.800><c> multiply</c>

00:45:05.190 --> 00:45:05.200 align:start position:0%
so we literally just have to multiply
 

00:45:05.200 --> 00:45:06.630 align:start position:0%
so we literally just have to multiply
these

00:45:06.630 --> 00:45:06.640 align:start position:0%
these
 

00:45:06.640 --> 00:45:10.309 align:start position:0%
these
and<00:45:06.960><c> because</c>

00:45:10.309 --> 00:45:10.319 align:start position:0%
 
 

00:45:10.319 --> 00:45:12.470 align:start position:0%
 
these<00:45:10.720><c> local</c><00:45:11.040><c> derivatives</c><00:45:11.520><c> like</c><00:45:11.599><c> dd</c><00:45:11.839><c> by</c><00:45:12.000><c> dc</c>

00:45:12.470 --> 00:45:12.480 align:start position:0%
these local derivatives like dd by dc
 

00:45:12.480 --> 00:45:14.710 align:start position:0%
these local derivatives like dd by dc
are<00:45:12.640><c> just</c><00:45:12.880><c> one</c>

00:45:14.710 --> 00:45:14.720 align:start position:0%
are just one
 

00:45:14.720 --> 00:45:17.430 align:start position:0%
are just one
we<00:45:15.040><c> basically</c><00:45:15.440><c> just</c><00:45:15.760><c> copy</c><00:45:16.079><c> over</c><00:45:16.480><c> dl</c><00:45:16.800><c> by</c><00:45:16.960><c> dd</c>

00:45:17.430 --> 00:45:17.440 align:start position:0%
we basically just copy over dl by dd
 

00:45:17.440 --> 00:45:19.430 align:start position:0%
we basically just copy over dl by dd
because<00:45:17.680><c> this</c><00:45:17.839><c> is</c><00:45:17.920><c> just</c><00:45:18.079><c> times</c><00:45:18.400><c> one</c>

00:45:19.430 --> 00:45:19.440 align:start position:0%
because this is just times one
 

00:45:19.440 --> 00:45:22.150 align:start position:0%
because this is just times one
so<00:45:19.599><c> what</c><00:45:19.760><c> does</c><00:45:19.839><c> it</c><00:45:19.920><c> do</c><00:45:20.400><c> so</c><00:45:20.640><c> because</c><00:45:21.280><c> dl</c><00:45:21.599><c> by</c><00:45:21.760><c> dd</c>

00:45:22.150 --> 00:45:22.160 align:start position:0%
so what does it do so because dl by dd
 

00:45:22.160 --> 00:45:25.910 align:start position:0%
so what does it do so because dl by dd
is<00:45:22.240><c> negative</c><00:45:22.640><c> two</c><00:45:23.359><c> what</c><00:45:23.599><c> is</c><00:45:23.760><c> dl</c><00:45:24.079><c> by</c><00:45:24.240><c> dc</c>

00:45:25.910 --> 00:45:25.920 align:start position:0%
is negative two what is dl by dc
 

00:45:25.920 --> 00:45:29.030 align:start position:0%
is negative two what is dl by dc
well<00:45:26.160><c> it's</c><00:45:26.400><c> the</c><00:45:26.560><c> local</c><00:45:26.960><c> gradient</c><00:45:27.680><c> 1.0</c><00:45:28.400><c> times</c>

00:45:29.030 --> 00:45:29.040 align:start position:0%
well it's the local gradient 1.0 times
 

00:45:29.040 --> 00:45:31.430 align:start position:0%
well it's the local gradient 1.0 times
dl<00:45:29.280><c> by</c><00:45:29.440><c> dd</c><00:45:29.839><c> which</c><00:45:30.000><c> is</c><00:45:30.079><c> negative</c><00:45:30.400><c> two</c>

00:45:31.430 --> 00:45:31.440 align:start position:0%
dl by dd which is negative two
 

00:45:31.440 --> 00:45:33.750 align:start position:0%
dl by dd which is negative two
so<00:45:31.680><c> literally</c><00:45:32.240><c> what</c><00:45:32.480><c> a</c><00:45:32.560><c> plus</c><00:45:32.880><c> node</c><00:45:33.119><c> does</c><00:45:33.599><c> you</c>

00:45:33.750 --> 00:45:33.760 align:start position:0%
so literally what a plus node does you
 

00:45:33.760 --> 00:45:35.510 align:start position:0%
so literally what a plus node does you
can<00:45:33.839><c> look</c><00:45:34.000><c> at</c><00:45:34.160><c> it</c><00:45:34.240><c> that</c><00:45:34.400><c> way</c><00:45:34.880><c> is</c><00:45:35.040><c> it</c><00:45:35.200><c> literally</c>

00:45:35.510 --> 00:45:35.520 align:start position:0%
can look at it that way is it literally
 

00:45:35.520 --> 00:45:37.510 align:start position:0%
can look at it that way is it literally
just<00:45:35.760><c> routes</c><00:45:36.319><c> the</c><00:45:36.480><c> gradient</c>

00:45:37.510 --> 00:45:37.520 align:start position:0%
just routes the gradient
 

00:45:37.520 --> 00:45:39.670 align:start position:0%
just routes the gradient
because<00:45:37.760><c> the</c><00:45:38.000><c> plus</c><00:45:38.319><c> nodes</c><00:45:38.720><c> local</c><00:45:39.040><c> derivatives</c>

00:45:39.670 --> 00:45:39.680 align:start position:0%
because the plus nodes local derivatives
 

00:45:39.680 --> 00:45:41.910 align:start position:0%
because the plus nodes local derivatives
are<00:45:39.760><c> just</c><00:45:40.000><c> one</c><00:45:40.720><c> and</c><00:45:40.880><c> so</c><00:45:41.040><c> in</c><00:45:41.119><c> the</c><00:45:41.280><c> chain</c><00:45:41.520><c> rule</c>

00:45:41.910 --> 00:45:41.920 align:start position:0%
are just one and so in the chain rule
 

00:45:41.920 --> 00:45:43.510 align:start position:0%
are just one and so in the chain rule
one<00:45:42.319><c> times</c>

00:45:43.510 --> 00:45:43.520 align:start position:0%
one times
 

00:45:43.520 --> 00:45:45.670 align:start position:0%
one times
dl<00:45:43.920><c> by</c><00:45:44.079><c> dd</c>

00:45:45.670 --> 00:45:45.680 align:start position:0%
dl by dd
 

00:45:45.680 --> 00:45:47.510 align:start position:0%
dl by dd
is<00:45:46.079><c> um</c>

00:45:47.510 --> 00:45:47.520 align:start position:0%
is um
 

00:45:47.520 --> 00:45:50.390 align:start position:0%
is um
is<00:45:47.839><c> uh</c><00:45:48.400><c> is</c><00:45:48.560><c> just</c><00:45:48.720><c> dl</c><00:45:48.960><c> by</c><00:45:49.119><c> dd</c><00:45:49.839><c> and</c><00:45:50.000><c> so</c><00:45:50.160><c> that</c>

00:45:50.390 --> 00:45:50.400 align:start position:0%
is uh is just dl by dd and so that
 

00:45:50.400 --> 00:45:53.270 align:start position:0%
is uh is just dl by dd and so that
derivative<00:45:50.960><c> just</c><00:45:51.119><c> gets</c><00:45:51.359><c> routed</c><00:45:52.240><c> to</c><00:45:52.400><c> both</c><00:45:52.720><c> c</c>

00:45:53.270 --> 00:45:53.280 align:start position:0%
derivative just gets routed to both c
 

00:45:53.280 --> 00:45:55.430 align:start position:0%
derivative just gets routed to both c
and<00:45:53.440><c> to</c><00:45:53.680><c> e</c><00:45:53.920><c> in</c><00:45:54.000><c> this</c><00:45:54.240><c> case</c>

00:45:55.430 --> 00:45:55.440 align:start position:0%
and to e in this case
 

00:45:55.440 --> 00:45:59.349 align:start position:0%
and to e in this case
so<00:45:55.680><c> basically</c><00:45:56.640><c> um</c><00:45:57.200><c> we</c><00:45:57.359><c> have</c><00:45:57.520><c> that</c><00:45:57.920><c> that</c><00:45:58.160><c> grad</c>

00:45:59.349 --> 00:45:59.359 align:start position:0%
so basically um we have that that grad
 

00:45:59.359 --> 00:46:01.030 align:start position:0%
so basically um we have that that grad
or<00:45:59.599><c> let's</c><00:45:59.839><c> start</c><00:46:00.000><c> with</c><00:46:00.240><c> c</c><00:46:00.560><c> since</c><00:46:00.800><c> that's</c><00:46:00.960><c> the</c>

00:46:01.030 --> 00:46:01.040 align:start position:0%
or let's start with c since that's the
 

00:46:01.040 --> 00:46:02.470 align:start position:0%
or let's start with c since that's the
one<00:46:01.200><c> we</c><00:46:01.359><c> looked</c><00:46:01.599><c> at</c>

00:46:02.470 --> 00:46:02.480 align:start position:0%
one we looked at
 

00:46:02.480 --> 00:46:03.910 align:start position:0%
one we looked at
is

00:46:03.910 --> 00:46:03.920 align:start position:0%
is
 

00:46:03.920 --> 00:46:06.790 align:start position:0%
is
negative<00:46:04.400><c> two</c><00:46:04.880><c> times</c><00:46:05.599><c> one</c>

00:46:06.790 --> 00:46:06.800 align:start position:0%
negative two times one
 

00:46:06.800 --> 00:46:08.470 align:start position:0%
negative two times one
negative<00:46:07.200><c> two</c>

00:46:08.470 --> 00:46:08.480 align:start position:0%
negative two
 

00:46:08.480 --> 00:46:11.109 align:start position:0%
negative two
and<00:46:08.960><c> in</c><00:46:09.119><c> the</c><00:46:09.200><c> same</c><00:46:09.440><c> way</c><00:46:09.839><c> by</c><00:46:10.079><c> symmetry</c><00:46:10.720><c> e</c><00:46:10.880><c> that</c>

00:46:11.109 --> 00:46:11.119 align:start position:0%
and in the same way by symmetry e that
 

00:46:11.119 --> 00:46:13.030 align:start position:0%
and in the same way by symmetry e that
grad<00:46:11.440><c> will</c><00:46:11.599><c> be</c><00:46:11.760><c> negative</c><00:46:12.079><c> two</c><00:46:12.720><c> that's</c><00:46:12.880><c> the</c>

00:46:13.030 --> 00:46:13.040 align:start position:0%
grad will be negative two that's the
 

00:46:13.040 --> 00:46:16.950 align:start position:0%
grad will be negative two that's the
claim<00:46:14.240><c> so</c><00:46:14.480><c> we</c><00:46:14.560><c> can</c><00:46:14.720><c> set</c><00:46:14.960><c> those</c>

00:46:16.950 --> 00:46:16.960 align:start position:0%
claim so we can set those
 

00:46:16.960 --> 00:46:19.349 align:start position:0%
claim so we can set those
we<00:46:17.119><c> can</c><00:46:17.280><c> redraw</c>

00:46:19.349 --> 00:46:19.359 align:start position:0%
we can redraw
 

00:46:19.359 --> 00:46:20.870 align:start position:0%
we can redraw
and<00:46:19.520><c> you</c><00:46:19.599><c> see</c><00:46:19.760><c> how</c><00:46:20.000><c> we</c><00:46:20.160><c> just</c><00:46:20.319><c> assign</c><00:46:20.640><c> negative</c>

00:46:20.870 --> 00:46:20.880 align:start position:0%
and you see how we just assign negative
 

00:46:20.880 --> 00:46:23.190 align:start position:0%
and you see how we just assign negative
to<00:46:21.040><c> negative</c><00:46:21.280><c> two</c><00:46:22.000><c> so</c><00:46:22.240><c> this</c><00:46:22.480><c> backpropagating</c>

00:46:23.190 --> 00:46:23.200 align:start position:0%
to negative two so this backpropagating
 

00:46:23.200 --> 00:46:25.030 align:start position:0%
to negative two so this backpropagating
signal<00:46:23.680><c> which</c><00:46:23.920><c> is</c><00:46:24.079><c> carrying</c><00:46:24.400><c> the</c><00:46:24.560><c> information</c>

00:46:25.030 --> 00:46:25.040 align:start position:0%
signal which is carrying the information
 

00:46:25.040 --> 00:46:26.710 align:start position:0%
signal which is carrying the information
of<00:46:25.200><c> like</c><00:46:25.359><c> what</c><00:46:25.520><c> is</c><00:46:25.680><c> the</c><00:46:25.760><c> derivative</c><00:46:26.240><c> of</c><00:46:26.400><c> l</c><00:46:26.560><c> with</c>

00:46:26.710 --> 00:46:26.720 align:start position:0%
of like what is the derivative of l with
 

00:46:26.720 --> 00:46:28.870 align:start position:0%
of like what is the derivative of l with
respect<00:46:27.040><c> to</c><00:46:27.119><c> all</c><00:46:27.280><c> the</c><00:46:27.359><c> intermediate</c><00:46:27.839><c> nodes</c>

00:46:28.870 --> 00:46:28.880 align:start position:0%
respect to all the intermediate nodes
 

00:46:28.880 --> 00:46:30.630 align:start position:0%
respect to all the intermediate nodes
we<00:46:29.040><c> can</c><00:46:29.359><c> imagine</c><00:46:29.760><c> it</c><00:46:29.839><c> almost</c><00:46:30.079><c> like</c><00:46:30.240><c> flowing</c>

00:46:30.630 --> 00:46:30.640 align:start position:0%
we can imagine it almost like flowing
 

00:46:30.640 --> 00:46:32.390 align:start position:0%
we can imagine it almost like flowing
backwards<00:46:31.040><c> through</c><00:46:31.200><c> the</c><00:46:31.359><c> graph</c><00:46:31.920><c> and</c><00:46:32.079><c> a</c><00:46:32.160><c> plus</c>

00:46:32.390 --> 00:46:32.400 align:start position:0%
backwards through the graph and a plus
 

00:46:32.400 --> 00:46:34.309 align:start position:0%
backwards through the graph and a plus
node<00:46:32.720><c> will</c><00:46:32.880><c> simply</c><00:46:33.280><c> distribute</c><00:46:34.079><c> the</c>

00:46:34.309 --> 00:46:34.319 align:start position:0%
node will simply distribute the
 

00:46:34.319 --> 00:46:36.390 align:start position:0%
node will simply distribute the
derivative<00:46:34.800><c> to</c><00:46:34.960><c> all</c><00:46:35.040><c> the</c><00:46:35.200><c> leaf</c><00:46:35.520><c> nodes</c><00:46:36.079><c> sorry</c>

00:46:36.390 --> 00:46:36.400 align:start position:0%
derivative to all the leaf nodes sorry
 

00:46:36.400 --> 00:46:39.109 align:start position:0%
derivative to all the leaf nodes sorry
to<00:46:36.640><c> all</c><00:46:36.720><c> the</c><00:46:36.880><c> children</c><00:46:37.280><c> nodes</c><00:46:37.599><c> of</c><00:46:37.839><c> it</c>

00:46:39.109 --> 00:46:39.119 align:start position:0%
to all the children nodes of it
 

00:46:39.119 --> 00:46:40.470 align:start position:0%
to all the children nodes of it
so<00:46:39.280><c> this</c><00:46:39.440><c> is</c><00:46:39.520><c> the</c><00:46:39.680><c> claim</c><00:46:40.079><c> and</c><00:46:40.160><c> now</c><00:46:40.319><c> let's</c>

00:46:40.470 --> 00:46:40.480 align:start position:0%
so this is the claim and now let's
 

00:46:40.480 --> 00:46:43.349 align:start position:0%
so this is the claim and now let's
verify<00:46:40.880><c> it</c><00:46:41.920><c> so</c><00:46:42.079><c> let</c><00:46:42.240><c> me</c><00:46:42.400><c> remove</c><00:46:42.640><c> the</c><00:46:42.800><c> plus</c><00:46:43.119><c> h</c>

00:46:43.349 --> 00:46:43.359 align:start position:0%
verify it so let me remove the plus h
 

00:46:43.359 --> 00:46:45.109 align:start position:0%
verify it so let me remove the plus h
here<00:46:43.520><c> from</c><00:46:43.839><c> before</c>

00:46:45.109 --> 00:46:45.119 align:start position:0%
here from before
 

00:46:45.119 --> 00:46:46.309 align:start position:0%
here from before
and<00:46:45.280><c> now</c><00:46:45.520><c> instead</c><00:46:45.760><c> what</c><00:46:45.920><c> we're</c><00:46:46.000><c> going</c><00:46:46.079><c> to</c><00:46:46.160><c> do</c>

00:46:46.309 --> 00:46:46.319 align:start position:0%
and now instead what we're going to do
 

00:46:46.319 --> 00:46:48.470 align:start position:0%
and now instead what we're going to do
is<00:46:46.400><c> we're</c><00:46:46.560><c> going</c><00:46:46.720><c> to</c><00:46:46.800><c> increment</c><00:46:47.200><c> c</c><00:46:47.680><c> so</c><00:46:48.079><c> c</c><00:46:48.319><c> dot</c>

00:46:48.470 --> 00:46:48.480 align:start position:0%
is we're going to increment c so c dot
 

00:46:48.480 --> 00:46:50.630 align:start position:0%
is we're going to increment c so c dot
data<00:46:48.880><c> will</c><00:46:49.119><c> be</c><00:46:49.280><c> credited</c><00:46:49.599><c> by</c><00:46:49.760><c> h</c>

00:46:50.630 --> 00:46:50.640 align:start position:0%
data will be credited by h
 

00:46:50.640 --> 00:46:52.390 align:start position:0%
data will be credited by h
and<00:46:50.800><c> when</c><00:46:50.960><c> i</c><00:46:51.119><c> run</c><00:46:51.359><c> this</c><00:46:51.599><c> we</c><00:46:51.839><c> expect</c><00:46:52.079><c> to</c><00:46:52.160><c> see</c>

00:46:52.390 --> 00:46:52.400 align:start position:0%
and when i run this we expect to see
 

00:46:52.400 --> 00:46:54.309 align:start position:0%
and when i run this we expect to see
negative<00:46:52.720><c> 2</c>

00:46:54.309 --> 00:46:54.319 align:start position:0%
negative 2
 

00:46:54.319 --> 00:46:58.870 align:start position:0%
negative 2
negative<00:46:54.839><c> 2.</c><00:46:56.079><c> and</c><00:46:56.160><c> then</c><00:46:56.400><c> of</c><00:46:56.480><c> course</c><00:46:56.720><c> for</c><00:46:56.960><c> e</c>

00:46:58.870 --> 00:46:58.880 align:start position:0%
negative 2. and then of course for e
 

00:46:58.880 --> 00:47:01.109 align:start position:0%
negative 2. and then of course for e
so<00:46:59.119><c> e</c><00:46:59.200><c> dot</c><00:46:59.440><c> data</c><00:46:59.760><c> plus</c><00:47:00.000><c> equals</c><00:47:00.319><c> h</c><00:47:00.800><c> and</c><00:47:00.960><c> we</c>

00:47:01.109 --> 00:47:01.119 align:start position:0%
so e dot data plus equals h and we
 

00:47:01.119 --> 00:47:03.109 align:start position:0%
so e dot data plus equals h and we
expect<00:47:01.359><c> to</c><00:47:01.440><c> see</c><00:47:01.680><c> negative</c><00:47:01.920><c> 2.</c>

00:47:03.109 --> 00:47:03.119 align:start position:0%
expect to see negative 2.
 

00:47:03.119 --> 00:47:07.270 align:start position:0%
expect to see negative 2.
simple

00:47:07.270 --> 00:47:07.280 align:start position:0%
 
 

00:47:07.280 --> 00:47:09.430 align:start position:0%
 
so<00:47:07.520><c> those</c><00:47:07.760><c> are</c><00:47:07.920><c> the</c><00:47:08.079><c> derivatives</c><00:47:08.640><c> of</c><00:47:09.280><c> these</c>

00:47:09.430 --> 00:47:09.440 align:start position:0%
so those are the derivatives of these
 

00:47:09.440 --> 00:47:11.349 align:start position:0%
so those are the derivatives of these
internal<00:47:09.839><c> nodes</c>

00:47:11.349 --> 00:47:11.359 align:start position:0%
internal nodes
 

00:47:11.359 --> 00:47:13.750 align:start position:0%
internal nodes
and<00:47:11.520><c> now</c><00:47:11.680><c> we're</c><00:47:11.839><c> going</c><00:47:12.000><c> to</c><00:47:12.319><c> recurse</c><00:47:13.040><c> our</c><00:47:13.200><c> way</c>

00:47:13.750 --> 00:47:13.760 align:start position:0%
and now we're going to recurse our way
 

00:47:13.760 --> 00:47:15.510 align:start position:0%
and now we're going to recurse our way
backwards<00:47:14.240><c> again</c>

00:47:15.510 --> 00:47:15.520 align:start position:0%
backwards again
 

00:47:15.520 --> 00:47:17.190 align:start position:0%
backwards again
and<00:47:15.680><c> we're</c><00:47:15.920><c> again</c><00:47:16.240><c> going</c><00:47:16.400><c> to</c><00:47:16.560><c> apply</c><00:47:16.800><c> the</c><00:47:16.960><c> chain</c>

00:47:17.190 --> 00:47:17.200 align:start position:0%
and we're again going to apply the chain
 

00:47:17.200 --> 00:47:19.190 align:start position:0%
and we're again going to apply the chain
rule<00:47:17.920><c> so</c><00:47:18.079><c> here</c><00:47:18.240><c> we</c><00:47:18.400><c> go</c><00:47:18.640><c> our</c><00:47:18.880><c> second</c>

00:47:19.190 --> 00:47:19.200 align:start position:0%
rule so here we go our second
 

00:47:19.200 --> 00:47:20.950 align:start position:0%
rule so here we go our second
application<00:47:19.680><c> of</c><00:47:19.760><c> chain</c><00:47:20.000><c> rule</c><00:47:20.400><c> and</c><00:47:20.559><c> we</c><00:47:20.800><c> will</c>

00:47:20.950 --> 00:47:20.960 align:start position:0%
application of chain rule and we will
 

00:47:20.960 --> 00:47:22.549 align:start position:0%
application of chain rule and we will
apply<00:47:21.280><c> it</c><00:47:21.520><c> all</c><00:47:21.680><c> the</c><00:47:21.760><c> way</c><00:47:21.920><c> through</c><00:47:22.079><c> the</c><00:47:22.160><c> graph</c>

00:47:22.549 --> 00:47:22.559 align:start position:0%
apply it all the way through the graph
 

00:47:22.559 --> 00:47:23.990 align:start position:0%
apply it all the way through the graph
we<00:47:22.720><c> just</c><00:47:22.880><c> happen</c><00:47:23.119><c> to</c><00:47:23.359><c> only</c><00:47:23.520><c> have</c><00:47:23.680><c> one</c><00:47:23.839><c> more</c>

00:47:23.990 --> 00:47:24.000 align:start position:0%
we just happen to only have one more
 

00:47:24.000 --> 00:47:25.349 align:start position:0%
we just happen to only have one more
node<00:47:24.240><c> remaining</c>

00:47:25.349 --> 00:47:25.359 align:start position:0%
node remaining
 

00:47:25.359 --> 00:47:27.190 align:start position:0%
node remaining
we<00:47:25.520><c> have</c><00:47:25.680><c> that</c><00:47:25.920><c> d</c><00:47:26.319><c> l</c>

00:47:27.190 --> 00:47:27.200 align:start position:0%
we have that d l
 

00:47:27.200 --> 00:47:28.470 align:start position:0%
we have that d l
by<00:47:27.440><c> d</c><00:47:27.680><c> e</c>

00:47:28.470 --> 00:47:28.480 align:start position:0%
by d e
 

00:47:28.480 --> 00:47:30.230 align:start position:0%
by d e
as<00:47:28.720><c> we</c><00:47:28.800><c> have</c><00:47:28.880><c> just</c><00:47:29.119><c> calculated</c><00:47:29.760><c> is</c><00:47:29.920><c> negative</c>

00:47:30.230 --> 00:47:30.240 align:start position:0%
as we have just calculated is negative
 

00:47:30.240 --> 00:47:32.549 align:start position:0%
as we have just calculated is negative
two<00:47:30.720><c> so</c><00:47:30.880><c> we</c><00:47:31.040><c> know</c><00:47:31.200><c> that</c>

00:47:32.549 --> 00:47:32.559 align:start position:0%
two so we know that
 

00:47:32.559 --> 00:47:33.910 align:start position:0%
two so we know that
so<00:47:32.800><c> we</c><00:47:32.880><c> know</c><00:47:33.040><c> the</c><00:47:33.119><c> derivative</c><00:47:33.520><c> of</c><00:47:33.599><c> l</c><00:47:33.760><c> with</c>

00:47:33.910 --> 00:47:33.920 align:start position:0%
so we know the derivative of l with
 

00:47:33.920 --> 00:47:36.710 align:start position:0%
so we know the derivative of l with
respect<00:47:34.240><c> to</c><00:47:34.400><c> e</c>

00:47:36.710 --> 00:47:36.720 align:start position:0%
 
 

00:47:36.720 --> 00:47:39.430 align:start position:0%
 
and<00:47:36.880><c> now</c><00:47:37.119><c> we</c><00:47:37.280><c> want</c><00:47:38.319><c> dl</c>

00:47:39.430 --> 00:47:39.440 align:start position:0%
and now we want dl
 

00:47:39.440 --> 00:47:40.549 align:start position:0%
and now we want dl
by

00:47:40.549 --> 00:47:40.559 align:start position:0%
by
 

00:47:40.559 --> 00:47:41.750 align:start position:0%
by
da

00:47:41.750 --> 00:47:41.760 align:start position:0%
da
 

00:47:41.760 --> 00:47:42.790 align:start position:0%
da
right

00:47:42.790 --> 00:47:42.800 align:start position:0%
right
 

00:47:42.800 --> 00:47:44.309 align:start position:0%
right
and<00:47:42.960><c> the</c><00:47:43.119><c> chain</c><00:47:43.280><c> rule</c><00:47:43.520><c> is</c><00:47:43.599><c> telling</c><00:47:43.920><c> us</c><00:47:44.160><c> that</c>

00:47:44.309 --> 00:47:44.319 align:start position:0%
and the chain rule is telling us that
 

00:47:44.319 --> 00:47:48.950 align:start position:0%
and the chain rule is telling us that
that's<00:47:44.640><c> just</c><00:47:45.119><c> dl</c><00:47:45.599><c> by</c><00:47:45.760><c> de</c>

00:47:48.950 --> 00:47:48.960 align:start position:0%
 
 

00:47:48.960 --> 00:47:50.230 align:start position:0%
 
negative<00:47:49.359><c> 2</c>

00:47:50.230 --> 00:47:50.240 align:start position:0%
negative 2
 

00:47:50.240 --> 00:47:52.710 align:start position:0%
negative 2
times<00:47:50.800><c> the</c><00:47:50.960><c> local</c><00:47:51.280><c> gradient</c><00:47:52.240><c> so</c><00:47:52.400><c> what</c><00:47:52.559><c> is</c><00:47:52.640><c> the</c>

00:47:52.710 --> 00:47:52.720 align:start position:0%
times the local gradient so what is the
 

00:47:52.720 --> 00:47:55.510 align:start position:0%
times the local gradient so what is the
local<00:47:53.040><c> gradient</c><00:47:53.839><c> basically</c><00:47:54.319><c> d</c><00:47:54.559><c> e</c>

00:47:55.510 --> 00:47:55.520 align:start position:0%
local gradient basically d e
 

00:47:55.520 --> 00:47:56.950 align:start position:0%
local gradient basically d e
by<00:47:55.760><c> d</c><00:47:56.000><c> a</c>

00:47:56.950 --> 00:47:56.960 align:start position:0%
by d a
 

00:47:56.960 --> 00:47:59.990 align:start position:0%
by d a
we<00:47:57.119><c> have</c><00:47:57.280><c> to</c><00:47:57.760><c> look</c><00:47:57.920><c> at</c><00:47:58.000><c> that</c>

00:47:59.990 --> 00:48:00.000 align:start position:0%
we have to look at that
 

00:48:00.000 --> 00:48:02.309 align:start position:0%
we have to look at that
so<00:48:00.240><c> i'm</c><00:48:00.480><c> a</c><00:48:00.559><c> little</c><00:48:00.960><c> times</c><00:48:01.359><c> node</c>

00:48:02.309 --> 00:48:02.319 align:start position:0%
so i'm a little times node
 

00:48:02.319 --> 00:48:04.309 align:start position:0%
so i'm a little times node
inside<00:48:02.720><c> a</c><00:48:02.800><c> massive</c><00:48:03.200><c> graph</c>

00:48:04.309 --> 00:48:04.319 align:start position:0%
inside a massive graph
 

00:48:04.319 --> 00:48:06.870 align:start position:0%
inside a massive graph
and<00:48:04.720><c> i</c><00:48:04.960><c> only</c><00:48:05.119><c> know</c><00:48:05.359><c> that</c><00:48:05.520><c> i</c><00:48:05.599><c> did</c><00:48:05.920><c> a</c><00:48:06.160><c> times</c><00:48:06.400><c> b</c><00:48:06.720><c> and</c>

00:48:06.870 --> 00:48:06.880 align:start position:0%
and i only know that i did a times b and
 

00:48:06.880 --> 00:48:09.030 align:start position:0%
and i only know that i did a times b and
i<00:48:06.960><c> produced</c><00:48:07.359><c> an</c><00:48:07.520><c> e</c>

00:48:09.030 --> 00:48:09.040 align:start position:0%
i produced an e
 

00:48:09.040 --> 00:48:12.630 align:start position:0%
i produced an e
so<00:48:09.280><c> now</c><00:48:09.520><c> what</c><00:48:09.680><c> is</c><00:48:09.839><c> d</c><00:48:10.079><c> e</c><00:48:10.240><c> by</c><00:48:10.400><c> d</c><00:48:10.640><c> a</c><00:48:11.200><c> and</c><00:48:11.359><c> d</c><00:48:11.599><c> e</c><00:48:11.839><c> by</c><00:48:12.000><c> d</c><00:48:12.160><c> b</c>

00:48:12.630 --> 00:48:12.640 align:start position:0%
so now what is d e by d a and d e by d b
 

00:48:12.640 --> 00:48:14.069 align:start position:0%
so now what is d e by d a and d e by d b
that's<00:48:12.880><c> the</c><00:48:12.960><c> only</c><00:48:13.119><c> thing</c><00:48:13.280><c> that</c><00:48:13.520><c> i</c><00:48:13.760><c> sort</c><00:48:13.920><c> of</c>

00:48:14.069 --> 00:48:14.079 align:start position:0%
that's the only thing that i sort of
 

00:48:14.079 --> 00:48:17.109 align:start position:0%
that's the only thing that i sort of
know<00:48:14.240><c> about</c><00:48:14.400><c> that's</c><00:48:14.640><c> my</c><00:48:14.720><c> local</c><00:48:15.119><c> gradient</c>

00:48:17.109 --> 00:48:17.119 align:start position:0%
know about that's my local gradient
 

00:48:17.119 --> 00:48:17.829 align:start position:0%
know about that's my local gradient
so

00:48:17.829 --> 00:48:17.839 align:start position:0%
so
 

00:48:17.839 --> 00:48:20.549 align:start position:0%
so
because<00:48:18.079><c> we</c><00:48:18.240><c> have</c><00:48:18.400><c> that</c><00:48:18.640><c> e's</c><00:48:18.880><c> a</c><00:48:19.040><c> times</c><00:48:19.359><c> b</c><00:48:20.319><c> we're</c>

00:48:20.549 --> 00:48:20.559 align:start position:0%
because we have that e's a times b we're
 

00:48:20.559 --> 00:48:24.069 align:start position:0%
because we have that e's a times b we're
asking<00:48:20.880><c> what</c><00:48:21.040><c> is</c><00:48:21.200><c> d</c><00:48:21.440><c> e</c><00:48:21.760><c> by</c><00:48:22.000><c> d</c><00:48:22.319><c> a</c>

00:48:24.069 --> 00:48:24.079 align:start position:0%
asking what is d e by d a
 

00:48:24.079 --> 00:48:26.630 align:start position:0%
asking what is d e by d a
and<00:48:24.480><c> of</c><00:48:24.559><c> course</c><00:48:24.800><c> we</c><00:48:24.960><c> just</c><00:48:25.520><c> did</c><00:48:25.760><c> that</c><00:48:26.079><c> here</c><00:48:26.480><c> we</c>

00:48:26.630 --> 00:48:26.640 align:start position:0%
and of course we just did that here we
 

00:48:26.640 --> 00:48:27.589 align:start position:0%
and of course we just did that here we
had<00:48:26.880><c> a</c>

00:48:27.589 --> 00:48:27.599 align:start position:0%
had a
 

00:48:27.599 --> 00:48:30.069 align:start position:0%
had a
times<00:48:28.079><c> so</c><00:48:28.240><c> i'm</c><00:48:28.319><c> not</c><00:48:28.480><c> going</c><00:48:28.640><c> to</c><00:48:28.800><c> rederive</c><00:48:29.359><c> it</c>

00:48:30.069 --> 00:48:30.079 align:start position:0%
times so i'm not going to rederive it
 

00:48:30.079 --> 00:48:31.990 align:start position:0%
times so i'm not going to rederive it
but<00:48:30.640><c> if</c><00:48:30.800><c> you</c><00:48:30.880><c> want</c><00:48:31.040><c> to</c><00:48:31.200><c> differentiate</c><00:48:31.760><c> this</c>

00:48:31.990 --> 00:48:32.000 align:start position:0%
but if you want to differentiate this
 

00:48:32.000 --> 00:48:34.549 align:start position:0%
but if you want to differentiate this
with<00:48:32.240><c> respect</c><00:48:32.559><c> to</c><00:48:32.880><c> a</c><00:48:33.359><c> you'll</c><00:48:33.520><c> just</c><00:48:33.680><c> get</c><00:48:34.000><c> b</c>

00:48:34.549 --> 00:48:34.559 align:start position:0%
with respect to a you'll just get b
 

00:48:34.559 --> 00:48:36.630 align:start position:0%
with respect to a you'll just get b
right<00:48:34.880><c> the</c><00:48:35.040><c> value</c><00:48:35.440><c> of</c><00:48:35.599><c> b</c>

00:48:36.630 --> 00:48:36.640 align:start position:0%
right the value of b
 

00:48:36.640 --> 00:48:41.030 align:start position:0%
right the value of b
which<00:48:36.880><c> in</c><00:48:36.960><c> this</c><00:48:37.200><c> case</c><00:48:37.680><c> is</c><00:48:37.920><c> negative</c><00:48:38.240><c> 3.0</c>

00:48:41.030 --> 00:48:41.040 align:start position:0%
 
 

00:48:41.040 --> 00:48:41.910 align:start position:0%
 
so

00:48:41.910 --> 00:48:41.920 align:start position:0%
so
 

00:48:41.920 --> 00:48:45.109 align:start position:0%
so
basically<00:48:42.240><c> we</c><00:48:42.400><c> have</c><00:48:42.559><c> that</c><00:48:42.800><c> dl</c><00:48:43.599><c> by</c><00:48:43.839><c> da</c>

00:48:45.109 --> 00:48:45.119 align:start position:0%
basically we have that dl by da
 

00:48:45.119 --> 00:48:47.190 align:start position:0%
basically we have that dl by da
well<00:48:45.520><c> let</c><00:48:45.680><c> me</c><00:48:45.839><c> just</c><00:48:46.000><c> do</c><00:48:46.160><c> it</c><00:48:46.240><c> right</c><00:48:46.400><c> here</c><00:48:47.040><c> we</c>

00:48:47.190 --> 00:48:47.200 align:start position:0%
well let me just do it right here we
 

00:48:47.200 --> 00:48:49.430 align:start position:0%
well let me just do it right here we
have<00:48:47.359><c> that</c><00:48:47.599><c> a</c><00:48:47.680><c> dot</c><00:48:47.920><c> grad</c><00:48:48.720><c> and</c><00:48:48.880><c> we</c><00:48:49.040><c> are</c><00:48:49.119><c> applying</c>

00:48:49.430 --> 00:48:49.440 align:start position:0%
have that a dot grad and we are applying
 

00:48:49.440 --> 00:48:50.790 align:start position:0%
have that a dot grad and we are applying
chain<00:48:49.680><c> rule</c><00:48:49.920><c> here</c>

00:48:50.790 --> 00:48:50.800 align:start position:0%
chain rule here
 

00:48:50.800 --> 00:48:54.230 align:start position:0%
chain rule here
is<00:48:51.200><c> d</c><00:48:51.440><c> l</c><00:48:51.599><c> by</c><00:48:51.760><c> d</c><00:48:51.920><c> e</c><00:48:52.240><c> which</c><00:48:52.480><c> we</c><00:48:52.640><c> see</c><00:48:52.960><c> here</c><00:48:53.440><c> is</c>

00:48:54.230 --> 00:48:54.240 align:start position:0%
is d l by d e which we see here is
 

00:48:54.240 --> 00:48:56.309 align:start position:0%
is d l by d e which we see here is
negative<00:48:54.559><c> two</c>

00:48:56.309 --> 00:48:56.319 align:start position:0%
negative two
 

00:48:56.319 --> 00:48:57.510 align:start position:0%
negative two
times

00:48:57.510 --> 00:48:57.520 align:start position:0%
times
 

00:48:57.520 --> 00:48:59.750 align:start position:0%
times
what<00:48:57.680><c> is</c><00:48:57.839><c> d</c><00:48:58.000><c> e</c><00:48:58.160><c> by</c><00:48:58.400><c> d</c><00:48:58.640><c> a</c>

00:48:59.750 --> 00:48:59.760 align:start position:0%
what is d e by d a
 

00:48:59.760 --> 00:49:04.870 align:start position:0%
what is d e by d a
it's<00:49:00.079><c> the</c><00:49:00.240><c> value</c><00:49:00.559><c> of</c><00:49:00.640><c> b</c><00:49:01.200><c> which</c><00:49:01.440><c> is</c><00:49:02.079><c> negative</c><00:49:02.400><c> 3.</c>

00:49:04.870 --> 00:49:04.880 align:start position:0%
 
 

00:49:04.880 --> 00:49:07.829 align:start position:0%
 
that's<00:49:05.119><c> it</c>

00:49:07.829 --> 00:49:07.839 align:start position:0%
 
 

00:49:07.839 --> 00:49:10.549 align:start position:0%
 
and<00:49:07.920><c> then</c><00:49:08.079><c> we</c><00:49:08.240><c> have</c><00:49:08.400><c> b</c><00:49:08.800><c> grad</c><00:49:09.520><c> is</c><00:49:09.680><c> again</c><00:49:10.000><c> dl</c><00:49:10.400><c> by</c>

00:49:10.549 --> 00:49:10.559 align:start position:0%
and then we have b grad is again dl by
 

00:49:10.559 --> 00:49:11.430 align:start position:0%
and then we have b grad is again dl by
de

00:49:11.430 --> 00:49:11.440 align:start position:0%
de
 

00:49:11.440 --> 00:49:13.109 align:start position:0%
de
which<00:49:11.680><c> is</c><00:49:11.760><c> negative</c><00:49:12.160><c> 2</c>

00:49:13.109 --> 00:49:13.119 align:start position:0%
which is negative 2
 

00:49:13.119 --> 00:49:14.390 align:start position:0%
which is negative 2
just<00:49:13.359><c> the</c><00:49:13.440><c> same</c><00:49:13.599><c> way</c>

00:49:14.390 --> 00:49:14.400 align:start position:0%
just the same way
 

00:49:14.400 --> 00:49:15.510 align:start position:0%
just the same way
times

00:49:15.510 --> 00:49:15.520 align:start position:0%
times
 

00:49:15.520 --> 00:49:17.990 align:start position:0%
times
what<00:49:15.760><c> is</c><00:49:16.240><c> d</c><00:49:16.480><c> e</c><00:49:16.720><c> by</c><00:49:17.040><c> d</c>

00:49:17.990 --> 00:49:18.000 align:start position:0%
what is d e by d
 

00:49:18.000 --> 00:49:19.589 align:start position:0%
what is d e by d
um<00:49:18.640><c> db</c>

00:49:19.589 --> 00:49:19.599 align:start position:0%
um db
 

00:49:19.599 --> 00:49:23.510 align:start position:0%
um db
is<00:49:19.760><c> the</c><00:49:19.920><c> value</c><00:49:20.319><c> of</c><00:49:20.559><c> a</c><00:49:21.200><c> which</c><00:49:21.440><c> is</c><00:49:21.599><c> 2.2.0</c>

00:49:23.510 --> 00:49:23.520 align:start position:0%
is the value of a which is 2.2.0
 

00:49:23.520 --> 00:49:25.670 align:start position:0%
is the value of a which is 2.2.0
as<00:49:23.760><c> the</c><00:49:23.920><c> value</c><00:49:24.160><c> of</c><00:49:24.319><c> a</c>

00:49:25.670 --> 00:49:25.680 align:start position:0%
as the value of a
 

00:49:25.680 --> 00:49:28.790 align:start position:0%
as the value of a
so<00:49:25.920><c> these</c><00:49:26.240><c> are</c><00:49:26.640><c> our</c><00:49:26.800><c> claimed</c><00:49:27.280><c> derivatives</c>

00:49:28.790 --> 00:49:28.800 align:start position:0%
so these are our claimed derivatives
 

00:49:28.800 --> 00:49:30.630 align:start position:0%
so these are our claimed derivatives
let's

00:49:30.630 --> 00:49:30.640 align:start position:0%
let's
 

00:49:30.640 --> 00:49:32.069 align:start position:0%
let's
redraw

00:49:32.069 --> 00:49:32.079 align:start position:0%
redraw
 

00:49:32.079 --> 00:49:33.750 align:start position:0%
redraw
and<00:49:32.240><c> we</c><00:49:32.400><c> see</c><00:49:32.559><c> here</c><00:49:32.800><c> that</c>

00:49:33.750 --> 00:49:33.760 align:start position:0%
and we see here that
 

00:49:33.760 --> 00:49:35.990 align:start position:0%
and we see here that
a<00:49:34.000><c> dot</c><00:49:34.240><c> grad</c><00:49:34.640><c> turns</c><00:49:34.880><c> out</c><00:49:35.040><c> to</c><00:49:35.119><c> be</c><00:49:35.280><c> 6</c><00:49:35.680><c> because</c>

00:49:35.990 --> 00:49:36.000 align:start position:0%
a dot grad turns out to be 6 because
 

00:49:36.000 --> 00:49:38.390 align:start position:0%
a dot grad turns out to be 6 because
that<00:49:36.240><c> is</c><00:49:36.480><c> negative</c><00:49:36.800><c> 2</c><00:49:37.040><c> times</c><00:49:37.280><c> negative</c><00:49:37.520><c> 3</c>

00:49:38.390 --> 00:49:38.400 align:start position:0%
that is negative 2 times negative 3
 

00:49:38.400 --> 00:49:41.109 align:start position:0%
that is negative 2 times negative 3
and<00:49:38.880><c> b</c><00:49:39.040><c> dot</c><00:49:39.280><c> grad</c><00:49:39.520><c> is</c><00:49:39.680><c> negative</c><00:49:40.000><c> 4</c>

00:49:41.109 --> 00:49:41.119 align:start position:0%
and b dot grad is negative 4
 

00:49:41.119 --> 00:49:43.670 align:start position:0%
and b dot grad is negative 4
times<00:49:41.920><c> sorry</c><00:49:42.240><c> is</c><00:49:42.400><c> negative</c><00:49:42.720><c> 2</c><00:49:42.880><c> times</c><00:49:43.200><c> 2</c><00:49:43.440><c> which</c>

00:49:43.670 --> 00:49:43.680 align:start position:0%
times sorry is negative 2 times 2 which
 

00:49:43.680 --> 00:49:45.430 align:start position:0%
times sorry is negative 2 times 2 which
is<00:49:43.760><c> negative</c><00:49:44.079><c> 4.</c>

00:49:45.430 --> 00:49:45.440 align:start position:0%
is negative 4.
 

00:49:45.440 --> 00:49:47.430 align:start position:0%
is negative 4.
so<00:49:45.599><c> those</c><00:49:45.839><c> are</c><00:49:45.920><c> our</c><00:49:46.079><c> claims</c><00:49:46.880><c> let's</c><00:49:47.119><c> delete</c>

00:49:47.430 --> 00:49:47.440 align:start position:0%
so those are our claims let's delete
 

00:49:47.440 --> 00:49:50.470 align:start position:0%
so those are our claims let's delete
this<00:49:47.599><c> and</c><00:49:47.680><c> let's</c><00:49:47.920><c> verify</c><00:49:48.240><c> them</c>

00:49:50.470 --> 00:49:50.480 align:start position:0%
this and let's verify them
 

00:49:50.480 --> 00:49:52.549 align:start position:0%
this and let's verify them
we<00:49:50.720><c> have</c>

00:49:52.549 --> 00:49:52.559 align:start position:0%
we have
 

00:49:52.559 --> 00:49:57.510 align:start position:0%
we have
a<00:49:52.880><c> here</c><00:49:53.520><c> a</c><00:49:53.839><c> dot</c><00:49:54.079><c> data</c><00:49:54.400><c> plus</c><00:49:54.720><c> equals</c><00:49:55.040><c> h</c>

00:49:57.510 --> 00:49:57.520 align:start position:0%
 
 

00:49:57.520 --> 00:49:59.589 align:start position:0%
 
so<00:49:58.160><c> the</c><00:49:58.319><c> claim</c><00:49:58.640><c> is</c><00:49:58.800><c> that</c>

00:49:59.589 --> 00:49:59.599 align:start position:0%
so the claim is that
 

00:49:59.599 --> 00:50:01.750 align:start position:0%
so the claim is that
a<00:49:59.839><c> dot</c><00:50:00.079><c> grad</c><00:50:00.720><c> is</c><00:50:00.960><c> six</c>

00:50:01.750 --> 00:50:01.760 align:start position:0%
a dot grad is six
 

00:50:01.760 --> 00:50:03.430 align:start position:0%
a dot grad is six
let's<00:50:02.000><c> verify</c>

00:50:03.430 --> 00:50:03.440 align:start position:0%
let's verify
 

00:50:03.440 --> 00:50:04.870 align:start position:0%
let's verify
six

00:50:04.870 --> 00:50:04.880 align:start position:0%
six
 

00:50:04.880 --> 00:50:07.270 align:start position:0%
six
and<00:50:05.040><c> we</c><00:50:05.200><c> have</c><00:50:05.599><c> beta</c><00:50:06.000><c> data</c>

00:50:07.270 --> 00:50:07.280 align:start position:0%
and we have beta data
 

00:50:07.280 --> 00:50:08.790 align:start position:0%
and we have beta data
plus<00:50:07.520><c> equals</c><00:50:07.920><c> h</c>

00:50:08.790 --> 00:50:08.800 align:start position:0%
plus equals h
 

00:50:08.800 --> 00:50:11.109 align:start position:0%
plus equals h
so<00:50:09.280><c> nudging</c><00:50:09.760><c> b</c><00:50:10.000><c> by</c><00:50:10.319><c> h</c>

00:50:11.109 --> 00:50:11.119 align:start position:0%
so nudging b by h
 

00:50:11.119 --> 00:50:13.030 align:start position:0%
so nudging b by h
and<00:50:11.359><c> looking</c><00:50:11.599><c> at</c><00:50:11.760><c> what</c><00:50:12.000><c> happens</c>

00:50:13.030 --> 00:50:13.040 align:start position:0%
and looking at what happens
 

00:50:13.040 --> 00:50:15.109 align:start position:0%
and looking at what happens
we<00:50:13.200><c> claim</c><00:50:13.520><c> it's</c><00:50:13.680><c> negative</c><00:50:14.079><c> four</c>

00:50:15.109 --> 00:50:15.119 align:start position:0%
we claim it's negative four
 

00:50:15.119 --> 00:50:17.910 align:start position:0%
we claim it's negative four
and<00:50:15.359><c> indeed</c><00:50:15.920><c> it's</c><00:50:16.079><c> negative</c><00:50:16.480><c> four</c><00:50:17.119><c> plus</c><00:50:17.440><c> minus</c>

00:50:17.910 --> 00:50:17.920 align:start position:0%
and indeed it's negative four plus minus
 

00:50:17.920 --> 00:50:20.470 align:start position:0%
and indeed it's negative four plus minus
again<00:50:18.319><c> float</c><00:50:19.040><c> oddness</c>

00:50:20.470 --> 00:50:20.480 align:start position:0%
again float oddness
 

00:50:20.480 --> 00:50:21.829 align:start position:0%
again float oddness
um

00:50:21.829 --> 00:50:21.839 align:start position:0%
um
 

00:50:21.839 --> 00:50:23.270 align:start position:0%
um
and<00:50:22.160><c> uh</c>

00:50:23.270 --> 00:50:23.280 align:start position:0%
and uh
 

00:50:23.280 --> 00:50:24.549 align:start position:0%
and uh
that's<00:50:23.520><c> it</c><00:50:23.760><c> this</c>

00:50:24.549 --> 00:50:24.559 align:start position:0%
that's it this
 

00:50:24.559 --> 00:50:26.710 align:start position:0%
that's it this
that<00:50:24.800><c> was</c><00:50:25.040><c> the</c><00:50:25.359><c> manual</c>

00:50:26.710 --> 00:50:26.720 align:start position:0%
that was the manual
 

00:50:26.720 --> 00:50:28.309 align:start position:0%
that was the manual
back<00:50:26.960><c> propagation</c>

00:50:28.309 --> 00:50:28.319 align:start position:0%
back propagation
 

00:50:28.319 --> 00:50:30.549 align:start position:0%
back propagation
uh<00:50:28.559><c> all</c><00:50:28.640><c> the</c><00:50:28.800><c> way</c><00:50:28.960><c> from</c><00:50:29.119><c> here</c><00:50:29.839><c> to</c><00:50:30.079><c> all</c><00:50:30.160><c> the</c><00:50:30.319><c> leaf</c>

00:50:30.549 --> 00:50:30.559 align:start position:0%
uh all the way from here to all the leaf
 

00:50:30.559 --> 00:50:33.270 align:start position:0%
uh all the way from here to all the leaf
nodes<00:50:31.280><c> and</c><00:50:31.440><c> we've</c><00:50:31.520><c> done</c><00:50:31.760><c> it</c><00:50:32.160><c> piece</c><00:50:32.400><c> by</c><00:50:32.559><c> piece</c>

00:50:33.270 --> 00:50:33.280 align:start position:0%
nodes and we've done it piece by piece
 

00:50:33.280 --> 00:50:35.270 align:start position:0%
nodes and we've done it piece by piece
and<00:50:33.440><c> really</c><00:50:33.680><c> all</c><00:50:33.839><c> we've</c><00:50:34.000><c> done</c><00:50:34.240><c> is</c><00:50:34.559><c> as</c><00:50:34.800><c> you</c><00:50:34.960><c> saw</c>

00:50:35.270 --> 00:50:35.280 align:start position:0%
and really all we've done is as you saw
 

00:50:35.280 --> 00:50:37.270 align:start position:0%
and really all we've done is as you saw
we<00:50:35.440><c> iterated</c><00:50:35.920><c> through</c><00:50:36.079><c> all</c><00:50:36.240><c> the</c><00:50:36.319><c> nodes</c><00:50:36.880><c> one</c><00:50:37.040><c> by</c>

00:50:37.270 --> 00:50:37.280 align:start position:0%
we iterated through all the nodes one by
 

00:50:37.280 --> 00:50:39.829 align:start position:0%
we iterated through all the nodes one by
one<00:50:37.839><c> and</c><00:50:38.079><c> locally</c><00:50:38.480><c> applied</c><00:50:38.800><c> the</c><00:50:38.880><c> chain</c><00:50:39.119><c> rule</c>

00:50:39.829 --> 00:50:39.839 align:start position:0%
one and locally applied the chain rule
 

00:50:39.839 --> 00:50:41.750 align:start position:0%
one and locally applied the chain rule
we<00:50:40.079><c> always</c><00:50:40.480><c> know</c><00:50:40.720><c> what</c><00:50:40.880><c> is</c><00:50:41.040><c> the</c><00:50:41.119><c> derivative</c><00:50:41.520><c> of</c>

00:50:41.750 --> 00:50:41.760 align:start position:0%
we always know what is the derivative of
 

00:50:41.760 --> 00:50:44.230 align:start position:0%
we always know what is the derivative of
l<00:50:42.000><c> with</c><00:50:42.240><c> respect</c><00:50:42.559><c> to</c><00:50:42.880><c> this</c><00:50:43.119><c> little</c><00:50:43.359><c> output</c><00:50:44.160><c> and</c>

00:50:44.230 --> 00:50:44.240 align:start position:0%
l with respect to this little output and
 

00:50:44.240 --> 00:50:45.589 align:start position:0%
l with respect to this little output and
then<00:50:44.400><c> we</c><00:50:44.559><c> look</c><00:50:44.720><c> at</c><00:50:44.880><c> how</c><00:50:44.960><c> this</c><00:50:45.200><c> output</c><00:50:45.440><c> was</c>

00:50:45.589 --> 00:50:45.599 align:start position:0%
then we look at how this output was
 

00:50:45.599 --> 00:50:47.589 align:start position:0%
then we look at how this output was
produced<00:50:46.480><c> this</c><00:50:46.720><c> output</c><00:50:46.960><c> was</c><00:50:47.119><c> produced</c>

00:50:47.589 --> 00:50:47.599 align:start position:0%
produced this output was produced
 

00:50:47.599 --> 00:50:49.510 align:start position:0%
produced this output was produced
through<00:50:47.839><c> some</c><00:50:48.079><c> operation</c><00:50:48.960><c> and</c><00:50:49.119><c> we</c><00:50:49.280><c> have</c><00:50:49.359><c> the</c>

00:50:49.510 --> 00:50:49.520 align:start position:0%
through some operation and we have the
 

00:50:49.520 --> 00:50:51.510 align:start position:0%
through some operation and we have the
pointers<00:50:50.000><c> to</c><00:50:50.160><c> the</c><00:50:50.400><c> children</c><00:50:50.800><c> nodes</c><00:50:51.200><c> of</c><00:50:51.280><c> this</c>

00:50:51.510 --> 00:50:51.520 align:start position:0%
pointers to the children nodes of this
 

00:50:51.520 --> 00:50:52.630 align:start position:0%
pointers to the children nodes of this
operation

00:50:52.630 --> 00:50:52.640 align:start position:0%
operation
 

00:50:52.640 --> 00:50:54.710 align:start position:0%
operation
and<00:50:52.880><c> so</c><00:50:53.200><c> in</c><00:50:53.359><c> this</c><00:50:53.520><c> little</c><00:50:53.760><c> operation</c><00:50:54.400><c> we</c><00:50:54.559><c> know</c>

00:50:54.710 --> 00:50:54.720 align:start position:0%
and so in this little operation we know
 

00:50:54.720 --> 00:50:56.630 align:start position:0%
and so in this little operation we know
what<00:50:54.800><c> the</c><00:50:54.880><c> local</c><00:50:55.200><c> derivatives</c><00:50:55.760><c> are</c><00:50:56.400><c> and</c><00:50:56.480><c> we</c>

00:50:56.630 --> 00:50:56.640 align:start position:0%
what the local derivatives are and we
 

00:50:56.640 --> 00:50:58.549 align:start position:0%
what the local derivatives are and we
just<00:50:56.800><c> multiply</c><00:50:57.359><c> them</c><00:50:57.599><c> onto</c><00:50:57.920><c> the</c><00:50:58.000><c> derivative</c>

00:50:58.549 --> 00:50:58.559 align:start position:0%
just multiply them onto the derivative
 

00:50:58.559 --> 00:50:59.589 align:start position:0%
just multiply them onto the derivative
always

00:50:59.589 --> 00:50:59.599 align:start position:0%
always
 

00:50:59.599 --> 00:51:01.670 align:start position:0%
always
so<00:50:59.920><c> we</c><00:51:00.079><c> just</c><00:51:00.319><c> go</c><00:51:00.480><c> through</c><00:51:00.800><c> and</c><00:51:00.880><c> recursively</c>

00:51:01.670 --> 00:51:01.680 align:start position:0%
so we just go through and recursively
 

00:51:01.680 --> 00:51:04.150 align:start position:0%
so we just go through and recursively
multiply<00:51:02.319><c> on</c><00:51:02.720><c> the</c><00:51:02.880><c> local</c><00:51:03.200><c> derivatives</c><00:51:04.079><c> and</c>

00:51:04.150 --> 00:51:04.160 align:start position:0%
multiply on the local derivatives and
 

00:51:04.160 --> 00:51:05.910 align:start position:0%
multiply on the local derivatives and
that's<00:51:04.319><c> what</c><00:51:04.480><c> back</c><00:51:04.640><c> propagation</c><00:51:05.200><c> is</c><00:51:05.599><c> is</c><00:51:05.760><c> just</c>

00:51:05.910 --> 00:51:05.920 align:start position:0%
that's what back propagation is is just
 

00:51:05.920 --> 00:51:08.150 align:start position:0%
that's what back propagation is is just
a<00:51:06.160><c> recursive</c><00:51:06.720><c> application</c><00:51:07.200><c> of</c><00:51:07.280><c> chain</c><00:51:07.520><c> rule</c>

00:51:08.150 --> 00:51:08.160 align:start position:0%
a recursive application of chain rule
 

00:51:08.160 --> 00:51:10.549 align:start position:0%
a recursive application of chain rule
backwards<00:51:08.640><c> through</c><00:51:08.800><c> the</c><00:51:08.960><c> computation</c><00:51:09.440><c> graph</c>

00:51:10.549 --> 00:51:10.559 align:start position:0%
backwards through the computation graph
 

00:51:10.559 --> 00:51:12.710 align:start position:0%
backwards through the computation graph
let's<00:51:10.800><c> see</c><00:51:10.960><c> this</c><00:51:11.200><c> power</c><00:51:11.599><c> in</c><00:51:11.760><c> action</c><00:51:12.240><c> just</c><00:51:12.480><c> very</c>

00:51:12.710 --> 00:51:12.720 align:start position:0%
let's see this power in action just very
 

00:51:12.720 --> 00:51:14.630 align:start position:0%
let's see this power in action just very
briefly<00:51:13.520><c> what</c><00:51:13.680><c> we're</c><00:51:13.839><c> going</c><00:51:14.000><c> to</c><00:51:14.079><c> do</c><00:51:14.319><c> is</c><00:51:14.400><c> we're</c>

00:51:14.630 --> 00:51:14.640 align:start position:0%
briefly what we're going to do is we're
 

00:51:14.640 --> 00:51:15.670 align:start position:0%
briefly what we're going to do is we're
going<00:51:14.800><c> to</c>

00:51:15.670 --> 00:51:15.680 align:start position:0%
going to
 

00:51:15.680 --> 00:51:19.670 align:start position:0%
going to
nudge<00:51:16.079><c> our</c><00:51:16.240><c> inputs</c><00:51:17.040><c> to</c><00:51:17.200><c> try</c><00:51:17.440><c> to</c><00:51:17.599><c> make</c><00:51:18.000><c> l</c><00:51:18.480><c> go</c><00:51:18.720><c> up</c>

00:51:19.670 --> 00:51:19.680 align:start position:0%
nudge our inputs to try to make l go up
 

00:51:19.680 --> 00:51:21.589 align:start position:0%
nudge our inputs to try to make l go up
so<00:51:20.000><c> in</c><00:51:20.160><c> particular</c><00:51:20.559><c> what</c><00:51:20.720><c> we're</c><00:51:20.880><c> doing</c><00:51:21.119><c> is</c><00:51:21.440><c> we</c>

00:51:21.589 --> 00:51:21.599 align:start position:0%
so in particular what we're doing is we
 

00:51:21.599 --> 00:51:24.150 align:start position:0%
so in particular what we're doing is we
want<00:51:21.839><c> a.data</c><00:51:22.559><c> we're</c><00:51:22.720><c> going</c><00:51:22.880><c> to</c><00:51:23.040><c> change</c><00:51:23.359><c> it</c>

00:51:24.150 --> 00:51:24.160 align:start position:0%
want a.data we're going to change it
 

00:51:24.160 --> 00:51:26.549 align:start position:0%
want a.data we're going to change it
and<00:51:24.400><c> if</c><00:51:24.559><c> we</c><00:51:24.720><c> want</c><00:51:24.960><c> l</c><00:51:25.119><c> to</c><00:51:25.280><c> go</c><00:51:25.520><c> up</c><00:51:26.000><c> that</c><00:51:26.160><c> means</c><00:51:26.400><c> we</c>

00:51:26.549 --> 00:51:26.559 align:start position:0%
and if we want l to go up that means we
 

00:51:26.559 --> 00:51:27.829 align:start position:0%
and if we want l to go up that means we
just<00:51:26.720><c> have</c><00:51:26.800><c> to</c><00:51:26.880><c> go</c><00:51:27.119><c> in</c><00:51:27.200><c> the</c><00:51:27.280><c> direction</c><00:51:27.680><c> of</c><00:51:27.760><c> the</c>

00:51:27.829 --> 00:51:27.839 align:start position:0%
just have to go in the direction of the
 

00:51:27.839 --> 00:51:29.829 align:start position:0%
just have to go in the direction of the
gradient<00:51:28.800><c> so</c>

00:51:29.829 --> 00:51:29.839 align:start position:0%
gradient so
 

00:51:29.839 --> 00:51:30.950 align:start position:0%
gradient so
a

00:51:30.950 --> 00:51:30.960 align:start position:0%
a
 

00:51:30.960 --> 00:51:32.230 align:start position:0%
a
should<00:51:31.280><c> increase</c><00:51:31.680><c> in</c><00:51:31.760><c> the</c><00:51:31.839><c> direction</c><00:51:32.160><c> of</c>

00:51:32.230 --> 00:51:32.240 align:start position:0%
should increase in the direction of
 

00:51:32.240 --> 00:51:34.790 align:start position:0%
should increase in the direction of
gradient<00:51:32.880><c> by</c><00:51:33.119><c> like</c><00:51:33.359><c> some</c><00:51:33.520><c> small</c><00:51:33.920><c> step</c><00:51:34.240><c> amount</c>

00:51:34.790 --> 00:51:34.800 align:start position:0%
gradient by like some small step amount
 

00:51:34.800 --> 00:51:36.470 align:start position:0%
gradient by like some small step amount
this<00:51:34.960><c> is</c><00:51:35.040><c> the</c><00:51:35.200><c> step</c><00:51:35.520><c> size</c>

00:51:36.470 --> 00:51:36.480 align:start position:0%
this is the step size
 

00:51:36.480 --> 00:51:38.150 align:start position:0%
this is the step size
and<00:51:36.640><c> we</c><00:51:36.800><c> don't</c><00:51:36.880><c> just</c><00:51:37.040><c> want</c><00:51:37.200><c> this</c><00:51:37.359><c> for</c><00:51:37.520><c> ba</c><00:51:37.839><c> but</c>

00:51:38.150 --> 00:51:38.160 align:start position:0%
and we don't just want this for ba but
 

00:51:38.160 --> 00:51:41.430 align:start position:0%
and we don't just want this for ba but
also<00:51:38.400><c> for</c><00:51:38.640><c> b</c>

00:51:41.430 --> 00:51:41.440 align:start position:0%
 
 

00:51:41.440 --> 00:51:44.470 align:start position:0%
 
also<00:51:41.920><c> for</c><00:51:42.640><c> c</c>

00:51:44.470 --> 00:51:44.480 align:start position:0%
also for c
 

00:51:44.480 --> 00:51:46.069 align:start position:0%
also for c
also<00:51:44.880><c> for</c><00:51:45.200><c> f</c>

00:51:46.069 --> 00:51:46.079 align:start position:0%
also for f
 

00:51:46.079 --> 00:51:47.190 align:start position:0%
also for f
those<00:51:46.400><c> are</c>

00:51:47.190 --> 00:51:47.200 align:start position:0%
those are
 

00:51:47.200 --> 00:51:49.670 align:start position:0%
those are
leaf<00:51:47.520><c> nodes</c><00:51:47.920><c> which</c><00:51:48.240><c> we</c><00:51:48.800><c> usually</c><00:51:49.200><c> have</c><00:51:49.280><c> control</c>

00:51:49.670 --> 00:51:49.680 align:start position:0%
leaf nodes which we usually have control
 

00:51:49.680 --> 00:51:50.630 align:start position:0%
leaf nodes which we usually have control
over

00:51:50.630 --> 00:51:50.640 align:start position:0%
over
 

00:51:50.640 --> 00:51:52.549 align:start position:0%
over
and<00:51:50.880><c> if</c><00:51:50.960><c> we</c><00:51:51.200><c> nudge</c><00:51:51.520><c> in</c><00:51:52.000><c> direction</c><00:51:52.400><c> of</c><00:51:52.480><c> the</c>

00:51:52.549 --> 00:51:52.559 align:start position:0%
and if we nudge in direction of the
 

00:51:52.559 --> 00:51:54.790 align:start position:0%
and if we nudge in direction of the
gradient<00:51:53.040><c> we</c><00:51:53.200><c> expect</c><00:51:53.839><c> a</c><00:51:54.000><c> positive</c><00:51:54.400><c> influence</c>

00:51:54.790 --> 00:51:54.800 align:start position:0%
gradient we expect a positive influence
 

00:51:54.800 --> 00:51:55.670 align:start position:0%
gradient we expect a positive influence
on<00:51:55.040><c> l</c>

00:51:55.670 --> 00:51:55.680 align:start position:0%
on l
 

00:51:55.680 --> 00:51:58.470 align:start position:0%
on l
so<00:51:55.839><c> we</c><00:51:56.000><c> expect</c><00:51:56.480><c> l</c><00:51:56.880><c> to</c><00:51:57.200><c> go</c><00:51:57.760><c> up</c>

00:51:58.470 --> 00:51:58.480 align:start position:0%
so we expect l to go up
 

00:51:58.480 --> 00:51:59.829 align:start position:0%
so we expect l to go up
positively

00:51:59.829 --> 00:51:59.839 align:start position:0%
positively
 

00:51:59.839 --> 00:52:01.750 align:start position:0%
positively
so<00:52:00.400><c> it</c><00:52:00.480><c> should</c><00:52:00.640><c> become</c><00:52:00.960><c> less</c><00:52:01.200><c> negative</c><00:52:01.680><c> it</c>

00:52:01.750 --> 00:52:01.760 align:start position:0%
so it should become less negative it
 

00:52:01.760 --> 00:52:03.670 align:start position:0%
so it should become less negative it
should<00:52:01.920><c> go</c><00:52:02.160><c> up</c><00:52:02.319><c> to</c><00:52:02.480><c> say</c><00:52:02.640><c> negative</c><00:52:03.359><c> you</c><00:52:03.440><c> know</c>

00:52:03.670 --> 00:52:03.680 align:start position:0%
should go up to say negative you know
 

00:52:03.680 --> 00:52:05.910 align:start position:0%
should go up to say negative you know
six<00:52:04.000><c> or</c><00:52:04.079><c> something</c><00:52:04.400><c> like</c><00:52:04.559><c> that</c>

00:52:05.910 --> 00:52:05.920 align:start position:0%
six or something like that
 

00:52:05.920 --> 00:52:08.069 align:start position:0%
six or something like that
uh<00:52:06.319><c> it's</c><00:52:06.400><c> hard</c><00:52:06.559><c> to</c><00:52:06.640><c> tell</c><00:52:06.880><c> exactly</c><00:52:07.680><c> and</c><00:52:07.839><c> we'd</c>

00:52:08.069 --> 00:52:08.079 align:start position:0%
uh it's hard to tell exactly and we'd
 

00:52:08.079 --> 00:52:09.589 align:start position:0%
uh it's hard to tell exactly and we'd
have<00:52:08.160><c> to</c><00:52:08.240><c> rewrite</c><00:52:08.640><c> the</c><00:52:08.720><c> forward</c><00:52:09.040><c> pass</c><00:52:09.359><c> so</c><00:52:09.520><c> let</c>

00:52:09.589 --> 00:52:09.599 align:start position:0%
have to rewrite the forward pass so let
 

00:52:09.599 --> 00:52:12.309 align:start position:0%
have to rewrite the forward pass so let
me<00:52:09.760><c> just</c><00:52:10.240><c> um</c>

00:52:12.309 --> 00:52:12.319 align:start position:0%
me just um
 

00:52:12.319 --> 00:52:13.910 align:start position:0%
me just um
do<00:52:12.480><c> that</c><00:52:12.720><c> here</c>

00:52:13.910 --> 00:52:13.920 align:start position:0%
do that here
 

00:52:13.920 --> 00:52:16.549 align:start position:0%
do that here
um

00:52:16.549 --> 00:52:16.559 align:start position:0%
 
 

00:52:16.559 --> 00:52:18.630 align:start position:0%
 
this<00:52:16.720><c> would</c><00:52:16.880><c> be</c><00:52:16.960><c> the</c><00:52:17.119><c> forward</c><00:52:17.440><c> pass</c><00:52:18.319><c> f</c><00:52:18.480><c> would</c>

00:52:18.630 --> 00:52:18.640 align:start position:0%
this would be the forward pass f would
 

00:52:18.640 --> 00:52:20.790 align:start position:0%
this would be the forward pass f would
be<00:52:18.960><c> unchanged</c><00:52:19.920><c> this</c><00:52:20.160><c> is</c><00:52:20.240><c> effectively</c><00:52:20.720><c> the</c>

00:52:20.790 --> 00:52:20.800 align:start position:0%
be unchanged this is effectively the
 

00:52:20.800 --> 00:52:24.710 align:start position:0%
be unchanged this is effectively the
forward<00:52:21.119><c> pass</c><00:52:21.839><c> and</c><00:52:22.160><c> now</c><00:52:22.400><c> if</c><00:52:22.480><c> we</c><00:52:22.720><c> print</c><00:52:23.040><c> l.data</c>

00:52:24.710 --> 00:52:24.720 align:start position:0%
forward pass and now if we print l.data
 

00:52:24.720 --> 00:52:27.190 align:start position:0%
forward pass and now if we print l.data
we<00:52:24.960><c> expect</c><00:52:25.760><c> because</c><00:52:26.079><c> we</c><00:52:26.559><c> nudged</c><00:52:26.960><c> all</c><00:52:27.040><c> the</c>

00:52:27.190 --> 00:52:27.200 align:start position:0%
we expect because we nudged all the
 

00:52:27.200 --> 00:52:28.790 align:start position:0%
we expect because we nudged all the
values<00:52:27.680><c> all</c><00:52:27.839><c> the</c><00:52:27.920><c> inputs</c><00:52:28.240><c> in</c><00:52:28.400><c> the</c><00:52:28.480><c> rational</c>

00:52:28.790 --> 00:52:28.800 align:start position:0%
values all the inputs in the rational
 

00:52:28.800 --> 00:52:30.950 align:start position:0%
values all the inputs in the rational
gradient<00:52:29.119><c> we</c><00:52:29.280><c> expected</c><00:52:29.680><c> a</c><00:52:29.760><c> less</c><00:52:30.160><c> negative</c><00:52:30.640><c> l</c>

00:52:30.950 --> 00:52:30.960 align:start position:0%
gradient we expected a less negative l
 

00:52:30.960 --> 00:52:32.870 align:start position:0%
gradient we expected a less negative l
we<00:52:31.119><c> expect</c><00:52:31.359><c> it</c><00:52:31.520><c> to</c><00:52:31.599><c> go</c><00:52:31.920><c> up</c>

00:52:32.870 --> 00:52:32.880 align:start position:0%
we expect it to go up
 

00:52:32.880 --> 00:52:34.870 align:start position:0%
we expect it to go up
so<00:52:33.440><c> maybe</c><00:52:33.680><c> it's</c><00:52:33.839><c> negative</c><00:52:34.160><c> six</c><00:52:34.400><c> or</c><00:52:34.559><c> so</c><00:52:34.720><c> let's</c>

00:52:34.870 --> 00:52:34.880 align:start position:0%
so maybe it's negative six or so let's
 

00:52:34.880 --> 00:52:36.630 align:start position:0%
so maybe it's negative six or so let's
see<00:52:35.040><c> what</c><00:52:35.200><c> happens</c>

00:52:36.630 --> 00:52:36.640 align:start position:0%
see what happens
 

00:52:36.640 --> 00:52:38.309 align:start position:0%
see what happens
okay<00:52:36.880><c> negative</c><00:52:37.200><c> seven</c>

00:52:38.309 --> 00:52:38.319 align:start position:0%
okay negative seven
 

00:52:38.319 --> 00:52:41.829 align:start position:0%
okay negative seven
and<00:52:38.559><c> uh</c><00:52:39.359><c> this</c><00:52:39.599><c> is</c><00:52:39.680><c> basically</c><00:52:40.480><c> one</c><00:52:41.200><c> step</c><00:52:41.599><c> of</c><00:52:41.760><c> an</c>

00:52:41.829 --> 00:52:41.839 align:start position:0%
and uh this is basically one step of an
 

00:52:41.839 --> 00:52:43.829 align:start position:0%
and uh this is basically one step of an
optimization<00:52:42.559><c> that</c><00:52:42.720><c> we'll</c><00:52:42.880><c> end</c><00:52:43.040><c> up</c><00:52:43.119><c> running</c>

00:52:43.829 --> 00:52:43.839 align:start position:0%
optimization that we'll end up running
 

00:52:43.839 --> 00:52:46.150 align:start position:0%
optimization that we'll end up running
and<00:52:44.079><c> really</c><00:52:44.319><c> does</c><00:52:44.559><c> gradient</c><00:52:45.119><c> just</c><00:52:45.280><c> give</c><00:52:45.520><c> us</c>

00:52:46.150 --> 00:52:46.160 align:start position:0%
and really does gradient just give us
 

00:52:46.160 --> 00:52:47.670 align:start position:0%
and really does gradient just give us
some<00:52:46.400><c> power</c><00:52:46.800><c> because</c><00:52:47.040><c> we</c><00:52:47.200><c> know</c><00:52:47.280><c> how</c><00:52:47.440><c> to</c>

00:52:47.670 --> 00:52:47.680 align:start position:0%
some power because we know how to
 

00:52:47.680 --> 00:52:49.510 align:start position:0%
some power because we know how to
influence<00:52:48.079><c> the</c><00:52:48.240><c> final</c><00:52:48.480><c> outcome</c><00:52:49.280><c> and</c><00:52:49.359><c> this</c>

00:52:49.510 --> 00:52:49.520 align:start position:0%
influence the final outcome and this
 

00:52:49.520 --> 00:52:50.790 align:start position:0%
influence the final outcome and this
will<00:52:49.680><c> be</c><00:52:49.760><c> extremely</c><00:52:50.079><c> useful</c><00:52:50.400><c> for</c><00:52:50.559><c> training</c>

00:52:50.790 --> 00:52:50.800 align:start position:0%
will be extremely useful for training
 

00:52:50.800 --> 00:52:52.870 align:start position:0%
will be extremely useful for training
knowledge<00:52:51.280><c> as</c><00:52:51.359><c> well</c><00:52:51.520><c> as</c><00:52:51.599><c> you'll</c><00:52:51.839><c> see</c>

00:52:52.870 --> 00:52:52.880 align:start position:0%
knowledge as well as you'll see
 

00:52:52.880 --> 00:52:55.430 align:start position:0%
knowledge as well as you'll see
so<00:52:53.119><c> now</c><00:52:53.359><c> i</c><00:52:53.440><c> would</c><00:52:53.599><c> like</c><00:52:53.760><c> to</c><00:52:53.839><c> do</c><00:52:54.079><c> one</c><00:52:54.319><c> more</c><00:52:54.880><c> uh</c>

00:52:55.430 --> 00:52:55.440 align:start position:0%
so now i would like to do one more uh
 

00:52:55.440 --> 00:52:58.069 align:start position:0%
so now i would like to do one more uh
example<00:52:56.000><c> of</c><00:52:56.319><c> manual</c><00:52:56.720><c> backpropagation</c><00:52:57.760><c> using</c>

00:52:58.069 --> 00:52:58.079 align:start position:0%
example of manual backpropagation using
 

00:52:58.079 --> 00:53:02.309 align:start position:0%
example of manual backpropagation using
a<00:52:58.160><c> bit</c><00:52:58.319><c> more</c><00:52:59.040><c> complex</c><00:52:59.920><c> and</c><00:53:00.400><c> uh</c><00:53:00.720><c> useful</c><00:53:01.280><c> example</c>

00:53:02.309 --> 00:53:02.319 align:start position:0%
a bit more complex and uh useful example
 

00:53:02.319 --> 00:53:04.069 align:start position:0%
a bit more complex and uh useful example
we<00:53:02.480><c> are</c><00:53:02.559><c> going</c><00:53:02.800><c> to</c><00:53:02.960><c> back</c><00:53:03.119><c> propagate</c><00:53:03.599><c> through</c><00:53:03.839><c> a</c>

00:53:04.069 --> 00:53:04.079 align:start position:0%
we are going to back propagate through a
 

00:53:04.079 --> 00:53:05.349 align:start position:0%
we are going to back propagate through a
neuron

00:53:05.349 --> 00:53:05.359 align:start position:0%
neuron
 

00:53:05.359 --> 00:53:07.430 align:start position:0%
neuron
so

00:53:07.430 --> 00:53:07.440 align:start position:0%
so
 

00:53:07.440 --> 00:53:08.870 align:start position:0%
so
we<00:53:07.599><c> want</c><00:53:07.760><c> to</c><00:53:08.000><c> eventually</c><00:53:08.319><c> build</c><00:53:08.559><c> up</c><00:53:08.640><c> neural</c>

00:53:08.870 --> 00:53:08.880 align:start position:0%
we want to eventually build up neural
 

00:53:08.880 --> 00:53:10.870 align:start position:0%
we want to eventually build up neural
networks<00:53:09.760><c> and</c><00:53:09.920><c> in</c><00:53:10.000><c> the</c><00:53:10.160><c> simplest</c><00:53:10.480><c> case</c><00:53:10.640><c> these</c>

00:53:10.870 --> 00:53:10.880 align:start position:0%
networks and in the simplest case these
 

00:53:10.880 --> 00:53:12.549 align:start position:0%
networks and in the simplest case these
are<00:53:10.960><c> multilateral</c><00:53:11.520><c> perceptrons</c><00:53:12.240><c> as</c><00:53:12.400><c> they're</c>

00:53:12.549 --> 00:53:12.559 align:start position:0%
are multilateral perceptrons as they're
 

00:53:12.559 --> 00:53:15.589 align:start position:0%
are multilateral perceptrons as they're
called<00:53:12.960><c> so</c><00:53:13.119><c> this</c><00:53:13.280><c> is</c><00:53:13.359><c> a</c><00:53:13.520><c> two</c><00:53:13.760><c> layer</c><00:53:14.480><c> neural</c><00:53:14.800><c> net</c>

00:53:15.589 --> 00:53:15.599 align:start position:0%
called so this is a two layer neural net
 

00:53:15.599 --> 00:53:17.030 align:start position:0%
called so this is a two layer neural net
and<00:53:15.760><c> it's</c><00:53:15.839><c> got</c><00:53:16.000><c> these</c><00:53:16.160><c> hidden</c><00:53:16.400><c> layers</c><00:53:16.720><c> made</c><00:53:16.960><c> up</c>

00:53:17.030 --> 00:53:17.040 align:start position:0%
and it's got these hidden layers made up
 

00:53:17.040 --> 00:53:18.630 align:start position:0%
and it's got these hidden layers made up
of<00:53:17.119><c> neurons</c><00:53:17.680><c> and</c><00:53:17.760><c> these</c><00:53:17.920><c> neurons</c><00:53:18.319><c> are</c><00:53:18.400><c> fully</c>

00:53:18.630 --> 00:53:18.640 align:start position:0%
of neurons and these neurons are fully
 

00:53:18.640 --> 00:53:19.990 align:start position:0%
of neurons and these neurons are fully
connected<00:53:18.880><c> to</c><00:53:19.040><c> each</c><00:53:19.200><c> other</c>

00:53:19.990 --> 00:53:20.000 align:start position:0%
connected to each other
 

00:53:20.000 --> 00:53:21.589 align:start position:0%
connected to each other
now<00:53:20.160><c> biologically</c><00:53:20.800><c> neurons</c><00:53:21.280><c> are</c><00:53:21.440><c> very</c>

00:53:21.589 --> 00:53:21.599 align:start position:0%
now biologically neurons are very
 

00:53:21.599 --> 00:53:23.589 align:start position:0%
now biologically neurons are very
complicated<00:53:22.079><c> devices</c><00:53:22.880><c> but</c><00:53:23.040><c> we</c><00:53:23.200><c> have</c><00:53:23.359><c> very</c>

00:53:23.589 --> 00:53:23.599 align:start position:0%
complicated devices but we have very
 

00:53:23.599 --> 00:53:26.069 align:start position:0%
complicated devices but we have very
simple<00:53:23.920><c> mathematical</c><00:53:24.559><c> models</c><00:53:25.040><c> of</c><00:53:25.280><c> them</c>

00:53:26.069 --> 00:53:26.079 align:start position:0%
simple mathematical models of them
 

00:53:26.079 --> 00:53:27.510 align:start position:0%
simple mathematical models of them
and<00:53:26.160><c> so</c><00:53:26.319><c> this</c><00:53:26.559><c> is</c><00:53:26.640><c> a</c><00:53:26.720><c> very</c><00:53:26.960><c> simple</c>

00:53:27.510 --> 00:53:27.520 align:start position:0%
and so this is a very simple
 

00:53:27.520 --> 00:53:29.670 align:start position:0%
and so this is a very simple
mathematical<00:53:28.079><c> model</c><00:53:28.319><c> of</c><00:53:28.480><c> a</c><00:53:28.559><c> neuron</c><00:53:29.359><c> you</c><00:53:29.520><c> have</c>

00:53:29.670 --> 00:53:29.680 align:start position:0%
mathematical model of a neuron you have
 

00:53:29.680 --> 00:53:31.750 align:start position:0%
mathematical model of a neuron you have
some<00:53:29.920><c> inputs</c><00:53:30.400><c> axis</c>

00:53:31.750 --> 00:53:31.760 align:start position:0%
some inputs axis
 

00:53:31.760 --> 00:53:33.670 align:start position:0%
some inputs axis
and<00:53:31.839><c> then</c><00:53:32.079><c> you</c><00:53:32.160><c> have</c><00:53:32.319><c> these</c><00:53:32.640><c> synapses</c><00:53:33.520><c> that</c>

00:53:33.670 --> 00:53:33.680 align:start position:0%
and then you have these synapses that
 

00:53:33.680 --> 00:53:36.630 align:start position:0%
and then you have these synapses that
have<00:53:34.079><c> weights</c><00:53:34.559><c> on</c><00:53:34.720><c> them</c><00:53:35.440><c> so</c>

00:53:36.630 --> 00:53:36.640 align:start position:0%
have weights on them so
 

00:53:36.640 --> 00:53:39.589 align:start position:0%
have weights on them so
the<00:53:36.800><c> w's</c><00:53:37.599><c> are</c><00:53:37.760><c> weights</c>

00:53:39.589 --> 00:53:39.599 align:start position:0%
the w's are weights
 

00:53:39.599 --> 00:53:40.790 align:start position:0%
the w's are weights
and<00:53:39.760><c> then</c>

00:53:40.790 --> 00:53:40.800 align:start position:0%
and then
 

00:53:40.800 --> 00:53:42.630 align:start position:0%
and then
the<00:53:40.960><c> synapse</c><00:53:41.520><c> interacts</c><00:53:41.920><c> with</c><00:53:42.079><c> the</c><00:53:42.240><c> input</c><00:53:42.480><c> to</c>

00:53:42.630 --> 00:53:42.640 align:start position:0%
the synapse interacts with the input to
 

00:53:42.640 --> 00:53:44.870 align:start position:0%
the synapse interacts with the input to
this<00:53:42.800><c> neuron</c><00:53:43.359><c> multiplicatively</c><00:53:44.480><c> so</c><00:53:44.640><c> what</c>

00:53:44.870 --> 00:53:44.880 align:start position:0%
this neuron multiplicatively so what
 

00:53:44.880 --> 00:53:47.190 align:start position:0%
this neuron multiplicatively so what
flows<00:53:45.359><c> to</c><00:53:45.599><c> the</c><00:53:45.760><c> cell</c><00:53:46.000><c> body</c>

00:53:47.190 --> 00:53:47.200 align:start position:0%
flows to the cell body
 

00:53:47.200 --> 00:53:49.910 align:start position:0%
flows to the cell body
of<00:53:47.440><c> this</c><00:53:47.599><c> neuron</c><00:53:48.079><c> is</c><00:53:48.319><c> w</c><00:53:48.720><c> times</c><00:53:49.119><c> x</c>

00:53:49.910 --> 00:53:49.920 align:start position:0%
of this neuron is w times x
 

00:53:49.920 --> 00:53:51.349 align:start position:0%
of this neuron is w times x
but<00:53:50.079><c> there's</c><00:53:50.319><c> multiple</c><00:53:50.720><c> inputs</c><00:53:51.040><c> so</c><00:53:51.200><c> there's</c>

00:53:51.349 --> 00:53:51.359 align:start position:0%
but there's multiple inputs so there's
 

00:53:51.359 --> 00:53:53.910 align:start position:0%
but there's multiple inputs so there's
many<00:53:51.599><c> w</c><00:53:52.160><c> times</c><00:53:52.640><c> x's</c><00:53:53.040><c> flowing</c><00:53:53.359><c> into</c><00:53:53.599><c> the</c><00:53:53.680><c> cell</c>

00:53:53.910 --> 00:53:53.920 align:start position:0%
many w times x's flowing into the cell
 

00:53:53.920 --> 00:53:54.950 align:start position:0%
many w times x's flowing into the cell
body

00:53:54.950 --> 00:53:54.960 align:start position:0%
body
 

00:53:54.960 --> 00:53:56.950 align:start position:0%
body
the<00:53:55.119><c> cell</c><00:53:55.359><c> body</c><00:53:55.680><c> then</c><00:53:55.920><c> has</c><00:53:56.160><c> also</c><00:53:56.480><c> like</c><00:53:56.640><c> some</c>

00:53:56.950 --> 00:53:56.960 align:start position:0%
the cell body then has also like some
 

00:53:56.960 --> 00:53:57.910 align:start position:0%
the cell body then has also like some
bias

00:53:57.910 --> 00:53:57.920 align:start position:0%
bias
 

00:53:57.920 --> 00:53:59.670 align:start position:0%
bias
so<00:53:58.160><c> this</c><00:53:58.319><c> is</c><00:53:58.480><c> kind</c><00:53:58.559><c> of</c><00:53:58.640><c> like</c><00:53:58.800><c> the</c>

00:53:59.670 --> 00:53:59.680 align:start position:0%
so this is kind of like the
 

00:53:59.680 --> 00:54:02.390 align:start position:0%
so this is kind of like the
inert<00:54:00.559><c> innate</c><00:54:01.040><c> sort</c><00:54:01.200><c> of</c><00:54:01.440><c> trigger</c><00:54:01.760><c> happiness</c>

00:54:02.390 --> 00:54:02.400 align:start position:0%
inert innate sort of trigger happiness
 

00:54:02.400 --> 00:54:04.630 align:start position:0%
inert innate sort of trigger happiness
of<00:54:02.480><c> this</c><00:54:02.720><c> neuron</c><00:54:03.599><c> so</c><00:54:03.760><c> this</c><00:54:03.920><c> bias</c><00:54:04.240><c> can</c><00:54:04.319><c> make</c><00:54:04.480><c> it</c>

00:54:04.630 --> 00:54:04.640 align:start position:0%
of this neuron so this bias can make it
 

00:54:04.640 --> 00:54:06.069 align:start position:0%
of this neuron so this bias can make it
a<00:54:04.720><c> bit</c><00:54:04.880><c> more</c><00:54:05.040><c> trigger</c><00:54:05.280><c> happy</c><00:54:05.520><c> or</c><00:54:05.680><c> a</c><00:54:05.680><c> bit</c><00:54:05.920><c> less</c>

00:54:06.069 --> 00:54:06.079 align:start position:0%
a bit more trigger happy or a bit less
 

00:54:06.079 --> 00:54:08.390 align:start position:0%
a bit more trigger happy or a bit less
trigger<00:54:06.400><c> happy</c><00:54:06.880><c> regardless</c><00:54:07.359><c> of</c><00:54:07.440><c> the</c><00:54:07.520><c> input</c>

00:54:08.390 --> 00:54:08.400 align:start position:0%
trigger happy regardless of the input
 

00:54:08.400 --> 00:54:10.230 align:start position:0%
trigger happy regardless of the input
but<00:54:08.559><c> basically</c><00:54:08.960><c> we're</c><00:54:09.280><c> taking</c><00:54:09.599><c> all</c><00:54:09.760><c> the</c><00:54:09.839><c> w</c>

00:54:10.230 --> 00:54:10.240 align:start position:0%
but basically we're taking all the w
 

00:54:10.240 --> 00:54:11.349 align:start position:0%
but basically we're taking all the w
times<00:54:10.480><c> x</c>

00:54:11.349 --> 00:54:11.359 align:start position:0%
times x
 

00:54:11.359 --> 00:54:13.829 align:start position:0%
times x
of<00:54:11.599><c> all</c><00:54:11.760><c> the</c><00:54:11.839><c> inputs</c><00:54:12.480><c> adding</c><00:54:12.720><c> the</c><00:54:12.880><c> bias</c><00:54:13.760><c> and</c>

00:54:13.829 --> 00:54:13.839 align:start position:0%
of all the inputs adding the bias and
 

00:54:13.839 --> 00:54:15.589 align:start position:0%
of all the inputs adding the bias and
then<00:54:14.079><c> we</c><00:54:14.319><c> take</c><00:54:14.559><c> it</c><00:54:14.640><c> through</c><00:54:14.880><c> an</c><00:54:15.040><c> activation</c>

00:54:15.589 --> 00:54:15.599 align:start position:0%
then we take it through an activation
 

00:54:15.599 --> 00:54:16.950 align:start position:0%
then we take it through an activation
function

00:54:16.950 --> 00:54:16.960 align:start position:0%
function
 

00:54:16.960 --> 00:54:18.390 align:start position:0%
function
and<00:54:17.119><c> this</c><00:54:17.280><c> activation</c><00:54:17.760><c> function</c><00:54:18.000><c> is</c><00:54:18.160><c> usually</c>

00:54:18.390 --> 00:54:18.400 align:start position:0%
and this activation function is usually
 

00:54:18.400 --> 00:54:20.309 align:start position:0%
and this activation function is usually
some<00:54:18.559><c> kind</c><00:54:18.720><c> of</c><00:54:18.800><c> a</c><00:54:18.880><c> squashing</c><00:54:19.359><c> function</c>

00:54:20.309 --> 00:54:20.319 align:start position:0%
some kind of a squashing function
 

00:54:20.319 --> 00:54:22.470 align:start position:0%
some kind of a squashing function
like<00:54:20.559><c> a</c><00:54:20.720><c> sigmoid</c><00:54:21.280><c> or</c><00:54:21.440><c> 10h</c><00:54:21.920><c> or</c><00:54:22.079><c> something</c><00:54:22.319><c> like</c>

00:54:22.470 --> 00:54:22.480 align:start position:0%
like a sigmoid or 10h or something like
 

00:54:22.480 --> 00:54:24.710 align:start position:0%
like a sigmoid or 10h or something like
that<00:54:23.119><c> so</c><00:54:23.359><c> as</c><00:54:23.440><c> an</c><00:54:23.599><c> example</c>

00:54:24.710 --> 00:54:24.720 align:start position:0%
that so as an example
 

00:54:24.720 --> 00:54:26.309 align:start position:0%
that so as an example
we're<00:54:24.880><c> going</c><00:54:25.040><c> to</c><00:54:25.119><c> use</c><00:54:25.359><c> the</c><00:54:25.520><c> 10h</c><00:54:26.000><c> in</c><00:54:26.160><c> this</c>

00:54:26.309 --> 00:54:26.319 align:start position:0%
we're going to use the 10h in this
 

00:54:26.319 --> 00:54:28.150 align:start position:0%
we're going to use the 10h in this
example

00:54:28.150 --> 00:54:28.160 align:start position:0%
example
 

00:54:28.160 --> 00:54:29.670 align:start position:0%
example
numpy<00:54:28.720><c> has</c><00:54:28.960><c> a</c>

00:54:29.670 --> 00:54:29.680 align:start position:0%
numpy has a
 

00:54:29.680 --> 00:54:31.270 align:start position:0%
numpy has a
np.10h

00:54:31.270 --> 00:54:31.280 align:start position:0%
np.10h
 

00:54:31.280 --> 00:54:32.470 align:start position:0%
np.10h
so

00:54:32.470 --> 00:54:32.480 align:start position:0%
so
 

00:54:32.480 --> 00:54:34.950 align:start position:0%
so
we<00:54:32.640><c> can</c><00:54:32.800><c> call</c><00:54:33.040><c> it</c><00:54:33.359><c> on</c><00:54:33.839><c> a</c><00:54:34.000><c> range</c>

00:54:34.950 --> 00:54:34.960 align:start position:0%
we can call it on a range
 

00:54:34.960 --> 00:54:36.549 align:start position:0%
we can call it on a range
and<00:54:35.040><c> we</c><00:54:35.200><c> can</c><00:54:35.359><c> plot</c><00:54:35.680><c> it</c>

00:54:36.549 --> 00:54:36.559 align:start position:0%
and we can plot it
 

00:54:36.559 --> 00:54:38.470 align:start position:0%
and we can plot it
this<00:54:36.720><c> is</c><00:54:36.799><c> the</c><00:54:36.880><c> 10h</c><00:54:37.280><c> function</c><00:54:38.079><c> and</c><00:54:38.160><c> you</c><00:54:38.319><c> see</c>

00:54:38.470 --> 00:54:38.480 align:start position:0%
this is the 10h function and you see
 

00:54:38.480 --> 00:54:41.109 align:start position:0%
this is the 10h function and you see
that<00:54:38.960><c> the</c><00:54:39.119><c> inputs</c><00:54:39.680><c> as</c><00:54:39.839><c> they</c><00:54:40.000><c> come</c><00:54:40.240><c> in</c>

00:54:41.109 --> 00:54:41.119 align:start position:0%
that the inputs as they come in
 

00:54:41.119 --> 00:54:44.309 align:start position:0%
that the inputs as they come in
get<00:54:41.359><c> squashed</c><00:54:42.319><c> on</c><00:54:42.400><c> the</c><00:54:42.559><c> y</c><00:54:42.799><c> coordinate</c><00:54:43.280><c> here</c><00:54:43.760><c> so</c>

00:54:44.309 --> 00:54:44.319 align:start position:0%
get squashed on the y coordinate here so
 

00:54:44.319 --> 00:54:45.270 align:start position:0%
get squashed on the y coordinate here so
um

00:54:45.270 --> 00:54:45.280 align:start position:0%
um
 

00:54:45.280 --> 00:54:47.349 align:start position:0%
um
right<00:54:45.520><c> at</c><00:54:45.680><c> zero</c><00:54:46.240><c> we're</c><00:54:46.400><c> going</c><00:54:46.559><c> to</c><00:54:46.640><c> get</c><00:54:46.880><c> exactly</c>

00:54:47.349 --> 00:54:47.359 align:start position:0%
right at zero we're going to get exactly
 

00:54:47.359 --> 00:54:49.589 align:start position:0%
right at zero we're going to get exactly
zero<00:54:48.079><c> and</c><00:54:48.160><c> then</c><00:54:48.400><c> as</c><00:54:48.559><c> you</c><00:54:48.640><c> go</c><00:54:48.799><c> more</c><00:54:49.040><c> positive</c><00:54:49.520><c> in</c>

00:54:49.589 --> 00:54:49.599 align:start position:0%
zero and then as you go more positive in
 

00:54:49.599 --> 00:54:50.789 align:start position:0%
zero and then as you go more positive in
the<00:54:49.760><c> input</c>

00:54:50.789 --> 00:54:50.799 align:start position:0%
the input
 

00:54:50.799 --> 00:54:52.390 align:start position:0%
the input
then<00:54:51.040><c> you'll</c><00:54:51.280><c> see</c><00:54:51.440><c> that</c><00:54:51.599><c> the</c><00:54:51.839><c> function</c><00:54:52.240><c> will</c>

00:54:52.390 --> 00:54:52.400 align:start position:0%
then you'll see that the function will
 

00:54:52.400 --> 00:54:55.750 align:start position:0%
then you'll see that the function will
only<00:54:52.640><c> go</c><00:54:52.880><c> up</c><00:54:52.960><c> to</c><00:54:53.280><c> one</c><00:54:53.760><c> and</c><00:54:53.839><c> then</c><00:54:54.000><c> plateau</c><00:54:54.559><c> out</c>

00:54:55.750 --> 00:54:55.760 align:start position:0%
only go up to one and then plateau out
 

00:54:55.760 --> 00:54:57.829 align:start position:0%
only go up to one and then plateau out
and<00:54:55.920><c> so</c><00:54:56.559><c> if</c><00:54:56.640><c> you</c><00:54:56.799><c> pass</c><00:54:57.040><c> in</c><00:54:57.200><c> very</c><00:54:57.440><c> positive</c>

00:54:57.829 --> 00:54:57.839 align:start position:0%
and so if you pass in very positive
 

00:54:57.839 --> 00:55:00.150 align:start position:0%
and so if you pass in very positive
inputs<00:54:58.240><c> we're</c><00:54:58.480><c> gonna</c><00:54:58.880><c> cap</c><00:54:59.119><c> it</c><00:54:59.280><c> smoothly</c><00:55:00.000><c> at</c>

00:55:00.150 --> 00:55:00.160 align:start position:0%
inputs we're gonna cap it smoothly at
 

00:55:00.160 --> 00:55:02.150 align:start position:0%
inputs we're gonna cap it smoothly at
one<00:55:00.880><c> and</c><00:55:01.119><c> on</c><00:55:01.280><c> the</c><00:55:01.359><c> negative</c><00:55:01.599><c> side</c><00:55:01.839><c> we're</c><00:55:02.000><c> gonna</c>

00:55:02.150 --> 00:55:02.160 align:start position:0%
one and on the negative side we're gonna
 

00:55:02.160 --> 00:55:04.470 align:start position:0%
one and on the negative side we're gonna
cap<00:55:02.319><c> it</c><00:55:02.400><c> smoothly</c><00:55:02.880><c> to</c><00:55:03.040><c> negative</c><00:55:03.359><c> one</c>

00:55:04.470 --> 00:55:04.480 align:start position:0%
cap it smoothly to negative one
 

00:55:04.480 --> 00:55:06.390 align:start position:0%
cap it smoothly to negative one
so<00:55:04.640><c> that's</c><00:55:05.200><c> 10h</c>

00:55:06.390 --> 00:55:06.400 align:start position:0%
so that's 10h
 

00:55:06.400 --> 00:55:08.549 align:start position:0%
so that's 10h
and<00:55:06.960><c> that's</c><00:55:07.200><c> the</c><00:55:07.359><c> squashing</c><00:55:07.839><c> function</c><00:55:08.319><c> or</c><00:55:08.480><c> an</c>

00:55:08.549 --> 00:55:08.559 align:start position:0%
and that's the squashing function or an
 

00:55:08.559 --> 00:55:10.710 align:start position:0%
and that's the squashing function or an
activation<00:55:09.040><c> function</c><00:55:09.760><c> and</c><00:55:09.920><c> what</c><00:55:10.240><c> comes</c><00:55:10.559><c> out</c>

00:55:10.710 --> 00:55:10.720 align:start position:0%
activation function and what comes out
 

00:55:10.720 --> 00:55:12.630 align:start position:0%
activation function and what comes out
of<00:55:10.799><c> this</c><00:55:11.040><c> neuron</c><00:55:11.599><c> is</c><00:55:11.760><c> just</c><00:55:12.000><c> the</c><00:55:12.160><c> activation</c>

00:55:12.630 --> 00:55:12.640 align:start position:0%
of this neuron is just the activation
 

00:55:12.640 --> 00:55:14.950 align:start position:0%
of this neuron is just the activation
function<00:55:12.960><c> applied</c><00:55:13.359><c> to</c><00:55:13.520><c> the</c><00:55:14.000><c> dot</c><00:55:14.240><c> product</c><00:55:14.799><c> of</c>

00:55:14.950 --> 00:55:14.960 align:start position:0%
function applied to the dot product of
 

00:55:14.960 --> 00:55:16.710 align:start position:0%
function applied to the dot product of
the<00:55:15.119><c> weights</c><00:55:15.599><c> and</c><00:55:15.839><c> the</c>

00:55:16.710 --> 00:55:16.720 align:start position:0%
the weights and the
 

00:55:16.720 --> 00:55:18.069 align:start position:0%
the weights and the
inputs

00:55:18.069 --> 00:55:18.079 align:start position:0%
inputs
 

00:55:18.079 --> 00:55:19.349 align:start position:0%
inputs
so<00:55:18.319><c> let's</c>

00:55:19.349 --> 00:55:19.359 align:start position:0%
so let's
 

00:55:19.359 --> 00:55:21.030 align:start position:0%
so let's
write<00:55:19.680><c> one</c><00:55:19.920><c> out</c>

00:55:21.030 --> 00:55:21.040 align:start position:0%
write one out
 

00:55:21.040 --> 00:55:22.549 align:start position:0%
write one out
um

00:55:22.549 --> 00:55:22.559 align:start position:0%
um
 

00:55:22.559 --> 00:55:27.349 align:start position:0%
um
i'm<00:55:22.720><c> going</c><00:55:22.880><c> to</c><00:55:23.040><c> copy</c><00:55:23.359><c> paste</c><00:55:24.000><c> because</c>

00:55:27.349 --> 00:55:27.359 align:start position:0%
 
 

00:55:27.359 --> 00:55:28.950 align:start position:0%
 
i<00:55:27.440><c> don't</c><00:55:27.599><c> want</c><00:55:27.680><c> to</c><00:55:27.760><c> type</c><00:55:28.000><c> too</c><00:55:28.160><c> much</c>

00:55:28.950 --> 00:55:28.960 align:start position:0%
i don't want to type too much
 

00:55:28.960 --> 00:55:31.510 align:start position:0%
i don't want to type too much
but<00:55:29.119><c> okay</c><00:55:29.359><c> so</c><00:55:29.520><c> here</c><00:55:29.680><c> we</c><00:55:29.839><c> have</c><00:55:29.920><c> the</c><00:55:30.160><c> inputs</c>

00:55:31.510 --> 00:55:31.520 align:start position:0%
but okay so here we have the inputs
 

00:55:31.520 --> 00:55:33.349 align:start position:0%
but okay so here we have the inputs
x1<00:55:31.920><c> x2</c><00:55:32.400><c> so</c><00:55:32.559><c> this</c><00:55:32.640><c> is</c><00:55:32.720><c> a</c><00:55:32.799><c> two-dimensional</c>

00:55:33.349 --> 00:55:33.359 align:start position:0%
x1 x2 so this is a two-dimensional
 

00:55:33.359 --> 00:55:34.789 align:start position:0%
x1 x2 so this is a two-dimensional
neuron<00:55:33.680><c> so</c><00:55:33.839><c> two</c><00:55:34.079><c> inputs</c><00:55:34.319><c> are</c><00:55:34.480><c> going</c><00:55:34.559><c> to</c><00:55:34.640><c> come</c>

00:55:34.789 --> 00:55:34.799 align:start position:0%
neuron so two inputs are going to come
 

00:55:34.799 --> 00:55:35.910 align:start position:0%
neuron so two inputs are going to come
in

00:55:35.910 --> 00:55:35.920 align:start position:0%
in
 

00:55:35.920 --> 00:55:37.430 align:start position:0%
in
these<00:55:36.160><c> are</c><00:55:36.319><c> thought</c><00:55:36.559><c> out</c><00:55:36.720><c> as</c><00:55:36.880><c> the</c><00:55:37.040><c> weights</c><00:55:37.359><c> of</c>

00:55:37.430 --> 00:55:37.440 align:start position:0%
these are thought out as the weights of
 

00:55:37.440 --> 00:55:38.789 align:start position:0%
these are thought out as the weights of
this<00:55:37.680><c> neuron</c>

00:55:38.789 --> 00:55:38.799 align:start position:0%
this neuron
 

00:55:38.799 --> 00:55:41.589 align:start position:0%
this neuron
weights<00:55:39.119><c> w1</c><00:55:39.599><c> w2</c><00:55:40.640><c> and</c><00:55:40.720><c> these</c><00:55:40.960><c> weights</c><00:55:41.280><c> again</c>

00:55:41.589 --> 00:55:41.599 align:start position:0%
weights w1 w2 and these weights again
 

00:55:41.599 --> 00:55:43.910 align:start position:0%
weights w1 w2 and these weights again
are<00:55:41.760><c> the</c><00:55:42.319><c> synaptic</c><00:55:42.880><c> strengths</c><00:55:43.440><c> for</c><00:55:43.680><c> each</c>

00:55:43.910 --> 00:55:43.920 align:start position:0%
are the synaptic strengths for each
 

00:55:43.920 --> 00:55:45.109 align:start position:0%
are the synaptic strengths for each
input

00:55:45.109 --> 00:55:45.119 align:start position:0%
input
 

00:55:45.119 --> 00:55:47.430 align:start position:0%
input
and<00:55:45.280><c> this</c><00:55:45.520><c> is</c><00:55:45.599><c> the</c><00:55:45.760><c> bias</c><00:55:46.160><c> of</c><00:55:46.240><c> the</c><00:55:46.319><c> neuron</c>

00:55:47.430 --> 00:55:47.440 align:start position:0%
and this is the bias of the neuron
 

00:55:47.440 --> 00:55:49.109 align:start position:0%
and this is the bias of the neuron
b

00:55:49.109 --> 00:55:49.119 align:start position:0%
b
 

00:55:49.119 --> 00:55:51.270 align:start position:0%
b
and<00:55:49.280><c> now</c><00:55:49.520><c> we</c><00:55:49.680><c> want</c><00:55:49.760><c> to</c><00:55:49.920><c> do</c><00:55:50.240><c> is</c><00:55:50.799><c> according</c><00:55:51.200><c> to</c>

00:55:51.270 --> 00:55:51.280 align:start position:0%
and now we want to do is according to
 

00:55:51.280 --> 00:55:54.150 align:start position:0%
and now we want to do is according to
this<00:55:51.440><c> model</c><00:55:52.079><c> we</c><00:55:52.240><c> need</c><00:55:52.400><c> to</c><00:55:52.480><c> multiply</c><00:55:53.440><c> x1</c><00:55:53.839><c> times</c>

00:55:54.150 --> 00:55:54.160 align:start position:0%
this model we need to multiply x1 times
 

00:55:54.160 --> 00:55:55.510 align:start position:0%
this model we need to multiply x1 times
w1

00:55:55.510 --> 00:55:55.520 align:start position:0%
w1
 

00:55:55.520 --> 00:55:57.750 align:start position:0%
w1
and<00:55:55.760><c> x2</c><00:55:56.079><c> times</c><00:55:56.319><c> w2</c>

00:55:57.750 --> 00:55:57.760 align:start position:0%
and x2 times w2
 

00:55:57.760 --> 00:56:00.390 align:start position:0%
and x2 times w2
and<00:55:57.920><c> then</c><00:55:58.079><c> we</c><00:55:58.240><c> need</c><00:55:58.480><c> to</c><00:55:59.119><c> add</c><00:55:59.520><c> bias</c><00:55:59.920><c> on</c><00:56:00.000><c> top</c><00:56:00.240><c> of</c>

00:56:00.390 --> 00:56:00.400 align:start position:0%
and then we need to add bias on top of
 

00:56:00.400 --> 00:56:01.430 align:start position:0%
and then we need to add bias on top of
it

00:56:01.430 --> 00:56:01.440 align:start position:0%
it
 

00:56:01.440 --> 00:56:03.270 align:start position:0%
it
and<00:56:01.839><c> it</c><00:56:01.920><c> gets</c><00:56:02.160><c> a</c><00:56:02.240><c> little</c><00:56:02.400><c> messy</c><00:56:02.720><c> here</c><00:56:02.880><c> but</c><00:56:03.119><c> all</c>

00:56:03.270 --> 00:56:03.280 align:start position:0%
and it gets a little messy here but all
 

00:56:03.280 --> 00:56:06.950 align:start position:0%
and it gets a little messy here but all
we<00:56:03.440><c> are</c><00:56:03.520><c> trying</c><00:56:03.680><c> to</c><00:56:03.920><c> do</c><00:56:04.160><c> is</c><00:56:04.319><c> x1</c><00:56:04.640><c> w1</c><00:56:05.280><c> plus</c><00:56:05.520><c> x2</c><00:56:05.839><c> w2</c>

00:56:06.950 --> 00:56:06.960 align:start position:0%
we are trying to do is x1 w1 plus x2 w2
 

00:56:06.960 --> 00:56:07.910 align:start position:0%
we are trying to do is x1 w1 plus x2 w2
plus<00:56:07.200><c> b</c>

00:56:07.910 --> 00:56:07.920 align:start position:0%
plus b
 

00:56:07.920 --> 00:56:09.829 align:start position:0%
plus b
and<00:56:08.000><c> these</c><00:56:08.240><c> are</c><00:56:08.319><c> multiply</c><00:56:08.799><c> here</c>

00:56:09.829 --> 00:56:09.839 align:start position:0%
and these are multiply here
 

00:56:09.839 --> 00:56:12.150 align:start position:0%
and these are multiply here
except<00:56:10.319><c> i'm</c><00:56:10.480><c> doing</c><00:56:10.720><c> it</c><00:56:10.880><c> in</c><00:56:11.119><c> small</c><00:56:11.359><c> steps</c><00:56:12.000><c> so</c>

00:56:12.150 --> 00:56:12.160 align:start position:0%
except i'm doing it in small steps so
 

00:56:12.160 --> 00:56:13.670 align:start position:0%
except i'm doing it in small steps so
that<00:56:12.319><c> we</c><00:56:12.480><c> actually</c><00:56:12.720><c> have</c><00:56:12.960><c> pointers</c><00:56:13.359><c> to</c><00:56:13.599><c> all</c>

00:56:13.670 --> 00:56:13.680 align:start position:0%
that we actually have pointers to all
 

00:56:13.680 --> 00:56:15.750 align:start position:0%
that we actually have pointers to all
these<00:56:13.920><c> intermediate</c><00:56:14.480><c> nodes</c><00:56:15.040><c> so</c><00:56:15.200><c> we</c><00:56:15.359><c> have</c><00:56:15.520><c> x1</c>

00:56:15.750 --> 00:56:15.760 align:start position:0%
these intermediate nodes so we have x1
 

00:56:15.760 --> 00:56:19.430 align:start position:0%
these intermediate nodes so we have x1
w1<00:56:16.240><c> variable</c><00:56:16.880><c> x</c><00:56:17.040><c> times</c><00:56:17.520><c> x2</c><00:56:18.000><c> w2</c><00:56:18.799><c> variable</c><00:56:19.359><c> and</c>

00:56:19.430 --> 00:56:19.440 align:start position:0%
w1 variable x times x2 w2 variable and
 

00:56:19.440 --> 00:56:21.670 align:start position:0%
w1 variable x times x2 w2 variable and
i'm<00:56:19.599><c> also</c><00:56:19.839><c> labeling</c><00:56:20.160><c> them</c>

00:56:21.670 --> 00:56:21.680 align:start position:0%
i'm also labeling them
 

00:56:21.680 --> 00:56:23.750 align:start position:0%
i'm also labeling them
so<00:56:22.079><c> n</c><00:56:22.640><c> is</c><00:56:22.799><c> now</c>

00:56:23.750 --> 00:56:23.760 align:start position:0%
so n is now
 

00:56:23.760 --> 00:56:25.430 align:start position:0%
so n is now
the<00:56:24.000><c> cell</c><00:56:24.240><c> body</c><00:56:24.640><c> raw</c>

00:56:25.430 --> 00:56:25.440 align:start position:0%
the cell body raw
 

00:56:25.440 --> 00:56:26.630 align:start position:0%
the cell body raw
raw

00:56:26.630 --> 00:56:26.640 align:start position:0%
raw
 

00:56:26.640 --> 00:56:28.390 align:start position:0%
raw
activation<00:56:27.440><c> without</c>

00:56:28.390 --> 00:56:28.400 align:start position:0%
activation without
 

00:56:28.400 --> 00:56:30.470 align:start position:0%
activation without
the<00:56:28.559><c> activation</c><00:56:28.960><c> function</c><00:56:29.280><c> for</c><00:56:29.440><c> now</c>

00:56:30.470 --> 00:56:30.480 align:start position:0%
the activation function for now
 

00:56:30.480 --> 00:56:32.870 align:start position:0%
the activation function for now
and<00:56:30.880><c> this</c><00:56:31.040><c> should</c><00:56:31.200><c> be</c><00:56:31.440><c> enough</c><00:56:31.839><c> to</c><00:56:32.400><c> basically</c>

00:56:32.870 --> 00:56:32.880 align:start position:0%
and this should be enough to basically
 

00:56:32.880 --> 00:56:37.829 align:start position:0%
and this should be enough to basically
plot<00:56:33.200><c> it</c><00:56:33.359><c> so</c><00:56:33.599><c> draw</c><00:56:33.920><c> dot</c><00:56:34.160><c> of</c><00:56:34.400><c> n</c>

00:56:37.829 --> 00:56:37.839 align:start position:0%
 
 

00:56:37.839 --> 00:56:41.910 align:start position:0%
 
gives<00:56:38.160><c> us</c><00:56:38.640><c> x1</c><00:56:38.960><c> times</c><00:56:39.119><c> w1</c><00:56:39.760><c> x2</c><00:56:40.160><c> times</c><00:56:40.400><c> w2</c>

00:56:41.910 --> 00:56:41.920 align:start position:0%
gives us x1 times w1 x2 times w2
 

00:56:41.920 --> 00:56:43.190 align:start position:0%
gives us x1 times w1 x2 times w2
being<00:56:42.160><c> added</c>

00:56:43.190 --> 00:56:43.200 align:start position:0%
being added
 

00:56:43.200 --> 00:56:45.589 align:start position:0%
being added
then<00:56:43.359><c> the</c><00:56:43.520><c> bias</c><00:56:43.920><c> gets</c><00:56:44.160><c> added</c><00:56:44.400><c> on</c><00:56:44.480><c> top</c><00:56:44.720><c> of</c><00:56:44.799><c> this</c>

00:56:45.589 --> 00:56:45.599 align:start position:0%
then the bias gets added on top of this
 

00:56:45.599 --> 00:56:47.270 align:start position:0%
then the bias gets added on top of this
and<00:56:45.760><c> this</c><00:56:46.480><c> n</c>

00:56:47.270 --> 00:56:47.280 align:start position:0%
and this n
 

00:56:47.280 --> 00:56:49.349 align:start position:0%
and this n
is<00:56:47.599><c> this</c><00:56:48.160><c> sum</c>

00:56:49.349 --> 00:56:49.359 align:start position:0%
is this sum
 

00:56:49.359 --> 00:56:50.870 align:start position:0%
is this sum
so<00:56:49.520><c> we're</c><00:56:49.599><c> now</c><00:56:49.760><c> going</c><00:56:49.920><c> to</c><00:56:50.000><c> take</c><00:56:50.240><c> it</c><00:56:50.319><c> through</c><00:56:50.720><c> an</c>

00:56:50.870 --> 00:56:50.880 align:start position:0%
so we're now going to take it through an
 

00:56:50.880 --> 00:56:52.549 align:start position:0%
so we're now going to take it through an
activation<00:56:51.359><c> function</c>

00:56:52.549 --> 00:56:52.559 align:start position:0%
activation function
 

00:56:52.559 --> 00:56:54.710 align:start position:0%
activation function
and<00:56:52.720><c> let's</c><00:56:52.880><c> say</c><00:56:53.040><c> we</c><00:56:53.119><c> use</c><00:56:53.280><c> the</c><00:56:53.440><c> 10h</c>

00:56:54.710 --> 00:56:54.720 align:start position:0%
and let's say we use the 10h
 

00:56:54.720 --> 00:56:56.470 align:start position:0%
and let's say we use the 10h
so<00:56:54.880><c> that</c><00:56:55.040><c> we</c><00:56:55.119><c> produce</c><00:56:55.440><c> the</c><00:56:55.520><c> output</c>

00:56:56.470 --> 00:56:56.480 align:start position:0%
so that we produce the output
 

00:56:56.480 --> 00:56:57.990 align:start position:0%
so that we produce the output
so<00:56:56.640><c> what</c><00:56:56.799><c> we'd</c><00:56:56.960><c> like</c><00:56:57.119><c> to</c><00:56:57.200><c> do</c><00:56:57.359><c> here</c><00:56:57.680><c> is</c><00:56:57.839><c> we'd</c>

00:56:57.990 --> 00:56:58.000 align:start position:0%
so what we'd like to do here is we'd
 

00:56:58.000 --> 00:57:01.430 align:start position:0%
so what we'd like to do here is we'd
like<00:56:58.160><c> to</c><00:56:58.319><c> do</c><00:56:58.559><c> the</c><00:56:58.799><c> output</c><00:56:59.599><c> and</c><00:56:59.760><c> i'll</c><00:56:59.920><c> call</c><00:57:00.160><c> it</c><00:57:00.480><c> o</c>

00:57:01.430 --> 00:57:01.440 align:start position:0%
like to do the output and i'll call it o
 

00:57:01.440 --> 00:57:03.109 align:start position:0%
like to do the output and i'll call it o
is<00:57:02.079><c> um</c>

00:57:03.109 --> 00:57:03.119 align:start position:0%
is um
 

00:57:03.119 --> 00:57:05.190 align:start position:0%
is um
n<00:57:03.599><c> dot</c><00:57:03.920><c> 10h</c>

00:57:05.190 --> 00:57:05.200 align:start position:0%
n dot 10h
 

00:57:05.200 --> 00:57:08.309 align:start position:0%
n dot 10h
okay<00:57:05.520><c> but</c><00:57:05.680><c> we</c><00:57:05.760><c> haven't</c><00:57:06.079><c> yet</c><00:57:06.319><c> written</c><00:57:06.880><c> the</c><00:57:07.040><c> 10h</c>

00:57:08.309 --> 00:57:08.319 align:start position:0%
okay but we haven't yet written the 10h
 

00:57:08.319 --> 00:57:09.829 align:start position:0%
okay but we haven't yet written the 10h
now<00:57:08.480><c> the</c><00:57:08.640><c> reason</c><00:57:08.880><c> that</c><00:57:09.040><c> we</c><00:57:09.119><c> need</c><00:57:09.280><c> to</c><00:57:09.440><c> implement</c>

00:57:09.829 --> 00:57:09.839 align:start position:0%
now the reason that we need to implement
 

00:57:09.839 --> 00:57:12.870 align:start position:0%
now the reason that we need to implement
another<00:57:10.319><c> 10h</c><00:57:10.799><c> function</c><00:57:11.200><c> here</c><00:57:11.760><c> is</c><00:57:12.000><c> that</c>

00:57:12.870 --> 00:57:12.880 align:start position:0%
another 10h function here is that
 

00:57:12.880 --> 00:57:14.630 align:start position:0%
another 10h function here is that
tanh<00:57:13.520><c> is</c><00:57:13.680><c> a</c>

00:57:14.630 --> 00:57:14.640 align:start position:0%
tanh is a
 

00:57:14.640 --> 00:57:16.710 align:start position:0%
tanh is a
hyperbolic<00:57:15.200><c> function</c><00:57:15.839><c> and</c><00:57:16.000><c> we've</c><00:57:16.319><c> only</c><00:57:16.480><c> so</c>

00:57:16.710 --> 00:57:16.720 align:start position:0%
hyperbolic function and we've only so
 

00:57:16.720 --> 00:57:18.470 align:start position:0%
hyperbolic function and we've only so
far<00:57:16.880><c> implemented</c><00:57:17.280><c> a</c><00:57:17.440><c> plus</c><00:57:17.680><c> and</c><00:57:17.839><c> the</c><00:57:17.920><c> times</c><00:57:18.400><c> and</c>

00:57:18.470 --> 00:57:18.480 align:start position:0%
far implemented a plus and the times and
 

00:57:18.480 --> 00:57:20.789 align:start position:0%
far implemented a plus and the times and
you<00:57:18.640><c> can't</c><00:57:19.200><c> make</c><00:57:19.440><c> a</c><00:57:19.520><c> 10h</c><00:57:20.000><c> out</c><00:57:20.160><c> of</c><00:57:20.240><c> just</c><00:57:20.400><c> pluses</c>

00:57:20.789 --> 00:57:20.799 align:start position:0%
you can't make a 10h out of just pluses
 

00:57:20.799 --> 00:57:21.990 align:start position:0%
you can't make a 10h out of just pluses
and<00:57:20.960><c> times</c>

00:57:21.990 --> 00:57:22.000 align:start position:0%
and times
 

00:57:22.000 --> 00:57:25.109 align:start position:0%
and times
you<00:57:22.160><c> also</c><00:57:22.400><c> need</c><00:57:22.720><c> exponentiation</c><00:57:23.760><c> so</c><00:57:24.000><c> 10h</c><00:57:24.559><c> is</c>

00:57:25.109 --> 00:57:25.119 align:start position:0%
you also need exponentiation so 10h is
 

00:57:25.119 --> 00:57:27.190 align:start position:0%
you also need exponentiation so 10h is
this<00:57:25.280><c> kind</c><00:57:25.359><c> of</c><00:57:25.440><c> a</c><00:57:25.520><c> formula</c><00:57:26.000><c> here</c>

00:57:27.190 --> 00:57:27.200 align:start position:0%
this kind of a formula here
 

00:57:27.200 --> 00:57:28.710 align:start position:0%
this kind of a formula here
you<00:57:27.280><c> can</c><00:57:27.440><c> use</c><00:57:27.599><c> either</c><00:57:27.839><c> one</c><00:57:28.000><c> of</c><00:57:28.079><c> these</c><00:57:28.480><c> and</c><00:57:28.640><c> you</c>

00:57:28.710 --> 00:57:28.720 align:start position:0%
you can use either one of these and you
 

00:57:28.720 --> 00:57:30.390 align:start position:0%
you can use either one of these and you
see<00:57:28.880><c> that</c><00:57:28.960><c> there's</c><00:57:29.280><c> exponentiation</c><00:57:30.000><c> involved</c>

00:57:30.390 --> 00:57:30.400 align:start position:0%
see that there's exponentiation involved
 

00:57:30.400 --> 00:57:32.630 align:start position:0%
see that there's exponentiation involved
which<00:57:30.640><c> we</c><00:57:30.720><c> have</c><00:57:30.880><c> not</c><00:57:31.119><c> implemented</c><00:57:31.599><c> yet</c><00:57:31.920><c> for</c>

00:57:32.630 --> 00:57:32.640 align:start position:0%
which we have not implemented yet for
 

00:57:32.640 --> 00:57:34.710 align:start position:0%
which we have not implemented yet for
our<00:57:32.799><c> low</c><00:57:33.040><c> value</c><00:57:33.599><c> node</c><00:57:33.839><c> here</c><00:57:34.319><c> so</c><00:57:34.480><c> we're</c><00:57:34.640><c> not</c>

00:57:34.710 --> 00:57:34.720 align:start position:0%
our low value node here so we're not
 

00:57:34.720 --> 00:57:36.150 align:start position:0%
our low value node here so we're not
going<00:57:34.799><c> to</c><00:57:34.880><c> be</c><00:57:34.960><c> able</c><00:57:35.040><c> to</c><00:57:35.200><c> produce</c><00:57:35.520><c> 10h</c><00:57:35.920><c> yet</c><00:57:36.079><c> and</c>

00:57:36.150 --> 00:57:36.160 align:start position:0%
going to be able to produce 10h yet and
 

00:57:36.160 --> 00:57:37.510 align:start position:0%
going to be able to produce 10h yet and
we<00:57:36.240><c> have</c><00:57:36.319><c> to</c><00:57:36.400><c> go</c><00:57:36.559><c> back</c><00:57:36.799><c> up</c><00:57:36.960><c> and</c><00:57:37.119><c> implement</c>

00:57:37.510 --> 00:57:37.520 align:start position:0%
we have to go back up and implement
 

00:57:37.520 --> 00:57:39.030 align:start position:0%
we have to go back up and implement
something<00:57:37.839><c> like</c><00:57:38.079><c> it</c>

00:57:39.030 --> 00:57:39.040 align:start position:0%
something like it
 

00:57:39.040 --> 00:57:42.630 align:start position:0%
something like it
now<00:57:39.520><c> one</c><00:57:39.839><c> option</c><00:57:40.640><c> here</c>

00:57:42.630 --> 00:57:42.640 align:start position:0%
now one option here
 

00:57:42.640 --> 00:57:44.870 align:start position:0%
now one option here
is<00:57:42.799><c> we</c><00:57:42.960><c> could</c><00:57:43.119><c> actually</c><00:57:43.839><c> implement</c><00:57:44.400><c> um</c>

00:57:44.870 --> 00:57:44.880 align:start position:0%
is we could actually implement um
 

00:57:44.880 --> 00:57:46.549 align:start position:0%
is we could actually implement um
exponentiation

00:57:46.549 --> 00:57:46.559 align:start position:0%
exponentiation
 

00:57:46.559 --> 00:57:49.750 align:start position:0%
exponentiation
right<00:57:47.200><c> and</c><00:57:47.359><c> we</c><00:57:47.520><c> could</c><00:57:47.680><c> return</c><00:57:48.160><c> the</c><00:57:48.720><c> x</c><00:57:49.119><c> of</c><00:57:49.599><c> a</c>

00:57:49.750 --> 00:57:49.760 align:start position:0%
right and we could return the x of a
 

00:57:49.760 --> 00:57:52.390 align:start position:0%
right and we could return the x of a
value<00:57:50.400><c> instead</c><00:57:50.720><c> of</c><00:57:50.799><c> a</c><00:57:50.880><c> 10h</c><00:57:51.280><c> of</c><00:57:51.359><c> a</c><00:57:51.440><c> value</c>

00:57:52.390 --> 00:57:52.400 align:start position:0%
value instead of a 10h of a value
 

00:57:52.400 --> 00:57:54.309 align:start position:0%
value instead of a 10h of a value
because<00:57:52.640><c> if</c><00:57:52.720><c> we</c><00:57:52.880><c> had</c><00:57:53.200><c> x</c><00:57:53.839><c> then</c><00:57:54.000><c> we</c><00:57:54.160><c> have</c>

00:57:54.309 --> 00:57:54.319 align:start position:0%
because if we had x then we have
 

00:57:54.319 --> 00:57:56.950 align:start position:0%
because if we had x then we have
everything<00:57:54.640><c> else</c><00:57:54.799><c> that</c><00:57:54.960><c> we</c><00:57:55.200><c> need</c><00:57:55.920><c> so</c><00:57:56.319><c> um</c>

00:57:56.950 --> 00:57:56.960 align:start position:0%
everything else that we need so um
 

00:57:56.960 --> 00:57:58.950 align:start position:0%
everything else that we need so um
because<00:57:57.200><c> we</c><00:57:57.359><c> know</c><00:57:57.520><c> how</c><00:57:57.760><c> to</c><00:57:58.160><c> add</c><00:57:58.559><c> and</c><00:57:58.720><c> we</c><00:57:58.799><c> know</c>

00:57:58.950 --> 00:57:58.960 align:start position:0%
because we know how to add and we know
 

00:57:58.960 --> 00:57:59.990 align:start position:0%
because we know how to add and we know
how<00:57:59.119><c> to</c>

00:57:59.990 --> 00:58:00.000 align:start position:0%
how to
 

00:58:00.000 --> 00:58:01.270 align:start position:0%
how to
um

00:58:01.270 --> 00:58:01.280 align:start position:0%
um
 

00:58:01.280 --> 00:58:02.630 align:start position:0%
um
we<00:58:01.440><c> know</c><00:58:01.599><c> how</c><00:58:01.760><c> to</c><00:58:01.839><c> add</c><00:58:02.079><c> and</c><00:58:02.160><c> we</c><00:58:02.319><c> know</c><00:58:02.400><c> how</c><00:58:02.559><c> to</c>

00:58:02.630 --> 00:58:02.640 align:start position:0%
we know how to add and we know how to
 

00:58:02.640 --> 00:58:04.950 align:start position:0%
we know how to add and we know how to
multiply<00:58:03.280><c> so</c><00:58:03.440><c> we'd</c><00:58:03.520><c> be</c><00:58:03.680><c> able</c><00:58:03.839><c> to</c><00:58:03.920><c> create</c><00:58:04.319><c> 10h</c>

00:58:04.950 --> 00:58:04.960 align:start position:0%
multiply so we'd be able to create 10h
 

00:58:04.960 --> 00:58:06.870 align:start position:0%
multiply so we'd be able to create 10h
if<00:58:05.119><c> we</c><00:58:05.280><c> knew</c><00:58:05.599><c> how</c><00:58:05.760><c> to</c><00:58:06.000><c> x</c>

00:58:06.870 --> 00:58:06.880 align:start position:0%
if we knew how to x
 

00:58:06.880 --> 00:58:08.309 align:start position:0%
if we knew how to x
but<00:58:07.040><c> for</c><00:58:07.200><c> the</c><00:58:07.280><c> purposes</c><00:58:07.599><c> of</c><00:58:07.680><c> this</c><00:58:07.839><c> example</c><00:58:08.160><c> i</c>

00:58:08.309 --> 00:58:08.319 align:start position:0%
but for the purposes of this example i
 

00:58:08.319 --> 00:58:09.990 align:start position:0%
but for the purposes of this example i
specifically<00:58:08.799><c> wanted</c><00:58:09.119><c> to</c>

00:58:09.990 --> 00:58:10.000 align:start position:0%
specifically wanted to
 

00:58:10.000 --> 00:58:11.030 align:start position:0%
specifically wanted to
show<00:58:10.240><c> you</c>

00:58:11.030 --> 00:58:11.040 align:start position:0%
show you
 

00:58:11.040 --> 00:58:13.030 align:start position:0%
show you
that<00:58:11.520><c> we</c><00:58:11.680><c> don't</c><00:58:12.000><c> necessarily</c><00:58:12.559><c> need</c><00:58:12.720><c> to</c><00:58:12.880><c> have</c>

00:58:13.030 --> 00:58:13.040 align:start position:0%
that we don't necessarily need to have
 

00:58:13.040 --> 00:58:15.190 align:start position:0%
that we don't necessarily need to have
the<00:58:13.119><c> most</c><00:58:13.440><c> atomic</c><00:58:14.160><c> pieces</c>

00:58:15.190 --> 00:58:15.200 align:start position:0%
the most atomic pieces
 

00:58:15.200 --> 00:58:15.990 align:start position:0%
the most atomic pieces
in

00:58:15.990 --> 00:58:16.000 align:start position:0%
in
 

00:58:16.000 --> 00:58:16.870 align:start position:0%
in
um

00:58:16.870 --> 00:58:16.880 align:start position:0%
um
 

00:58:16.880 --> 00:58:19.270 align:start position:0%
um
in<00:58:16.960><c> this</c><00:58:17.200><c> value</c><00:58:17.520><c> object</c><00:58:18.160><c> we</c><00:58:18.319><c> can</c><00:58:18.880><c> actually</c>

00:58:19.270 --> 00:58:19.280 align:start position:0%
in this value object we can actually
 

00:58:19.280 --> 00:58:23.109 align:start position:0%
in this value object we can actually
like<00:58:19.680><c> create</c><00:58:19.920><c> functions</c><00:58:20.480><c> at</c><00:58:20.720><c> arbitrary</c>

00:58:23.109 --> 00:58:23.119 align:start position:0%
like create functions at arbitrary
 

00:58:23.119 --> 00:58:24.710 align:start position:0%
like create functions at arbitrary
points<00:58:23.359><c> of</c><00:58:23.520><c> abstraction</c><00:58:24.319><c> they</c><00:58:24.480><c> can</c><00:58:24.559><c> be</c>

00:58:24.710 --> 00:58:24.720 align:start position:0%
points of abstraction they can be
 

00:58:24.720 --> 00:58:26.390 align:start position:0%
points of abstraction they can be
complicated<00:58:25.200><c> functions</c><00:58:25.839><c> but</c><00:58:26.000><c> they</c><00:58:26.160><c> can</c><00:58:26.240><c> be</c>

00:58:26.390 --> 00:58:26.400 align:start position:0%
complicated functions but they can be
 

00:58:26.400 --> 00:58:27.910 align:start position:0%
complicated functions but they can be
also<00:58:26.640><c> very</c><00:58:26.880><c> very</c><00:58:27.040><c> simple</c><00:58:27.359><c> functions</c><00:58:27.680><c> like</c><00:58:27.839><c> a</c>

00:58:27.910 --> 00:58:27.920 align:start position:0%
also very very simple functions like a
 

00:58:27.920 --> 00:58:30.309 align:start position:0%
also very very simple functions like a
plus<00:58:28.640><c> and</c><00:58:28.799><c> it's</c><00:58:28.880><c> totally</c><00:58:29.200><c> up</c><00:58:29.280><c> to</c><00:58:29.520><c> us</c><00:58:30.000><c> the</c><00:58:30.160><c> only</c>

00:58:30.309 --> 00:58:30.319 align:start position:0%
plus and it's totally up to us the only
 

00:58:30.319 --> 00:58:31.910 align:start position:0%
plus and it's totally up to us the only
thing<00:58:30.480><c> that</c><00:58:30.559><c> matters</c><00:58:31.119><c> is</c><00:58:31.280><c> that</c><00:58:31.440><c> we</c><00:58:31.599><c> know</c><00:58:31.760><c> how</c>

00:58:31.910 --> 00:58:31.920 align:start position:0%
thing that matters is that we know how
 

00:58:31.920 --> 00:58:33.430 align:start position:0%
thing that matters is that we know how
to<00:58:32.000><c> differentiate</c><00:58:32.799><c> through</c><00:58:32.960><c> any</c><00:58:33.200><c> one</c>

00:58:33.430 --> 00:58:33.440 align:start position:0%
to differentiate through any one
 

00:58:33.440 --> 00:58:35.750 align:start position:0%
to differentiate through any one
function<00:58:34.160><c> so</c><00:58:34.720><c> we</c><00:58:34.880><c> take</c><00:58:35.040><c> some</c><00:58:35.280><c> inputs</c><00:58:35.599><c> and</c><00:58:35.680><c> we</c>

00:58:35.750 --> 00:58:35.760 align:start position:0%
function so we take some inputs and we
 

00:58:35.760 --> 00:58:37.190 align:start position:0%
function so we take some inputs and we
make<00:58:35.920><c> an</c><00:58:36.079><c> output</c><00:58:36.640><c> the</c><00:58:36.799><c> only</c><00:58:36.880><c> thing</c><00:58:37.040><c> that</c>

00:58:37.190 --> 00:58:37.200 align:start position:0%
make an output the only thing that
 

00:58:37.200 --> 00:58:38.870 align:start position:0%
make an output the only thing that
matters<00:58:37.599><c> it</c><00:58:37.680><c> can</c><00:58:37.839><c> be</c><00:58:38.079><c> arbitrarily</c><00:58:38.559><c> complex</c>

00:58:38.870 --> 00:58:38.880 align:start position:0%
matters it can be arbitrarily complex
 

00:58:38.880 --> 00:58:41.349 align:start position:0%
matters it can be arbitrarily complex
function<00:58:39.760><c> as</c><00:58:40.000><c> long</c><00:58:40.240><c> as</c><00:58:40.400><c> you</c><00:58:40.480><c> know</c><00:58:40.640><c> how</c><00:58:40.880><c> to</c>

00:58:41.349 --> 00:58:41.359 align:start position:0%
function as long as you know how to
 

00:58:41.359 --> 00:58:43.270 align:start position:0%
function as long as you know how to
create<00:58:41.599><c> the</c><00:58:41.760><c> local</c><00:58:42.079><c> derivative</c><00:58:42.880><c> if</c><00:58:43.040><c> you</c><00:58:43.119><c> know</c>

00:58:43.270 --> 00:58:43.280 align:start position:0%
create the local derivative if you know
 

00:58:43.280 --> 00:58:44.870 align:start position:0%
create the local derivative if you know
the<00:58:43.359><c> local</c><00:58:43.680><c> derivative</c><00:58:44.079><c> of</c><00:58:44.160><c> how</c><00:58:44.319><c> the</c><00:58:44.480><c> inputs</c>

00:58:44.870 --> 00:58:44.880 align:start position:0%
the local derivative of how the inputs
 

00:58:44.880 --> 00:58:46.549 align:start position:0%
the local derivative of how the inputs
impact<00:58:45.119><c> the</c><00:58:45.280><c> output</c><00:58:45.839><c> then</c><00:58:46.000><c> that's</c><00:58:46.240><c> all</c><00:58:46.400><c> you</c>

00:58:46.549 --> 00:58:46.559 align:start position:0%
impact the output then that's all you
 

00:58:46.559 --> 00:58:49.510 align:start position:0%
impact the output then that's all you
need<00:58:47.280><c> so</c><00:58:47.440><c> we're</c><00:58:47.599><c> going</c><00:58:47.760><c> to</c><00:58:47.920><c> cluster</c><00:58:48.480><c> up</c>

00:58:49.510 --> 00:58:49.520 align:start position:0%
need so we're going to cluster up
 

00:58:49.520 --> 00:58:51.430 align:start position:0%
need so we're going to cluster up
all<00:58:49.680><c> of</c><00:58:49.839><c> this</c><00:58:50.319><c> expression</c><00:58:51.040><c> and</c><00:58:51.200><c> we're</c><00:58:51.359><c> not</c>

00:58:51.430 --> 00:58:51.440 align:start position:0%
all of this expression and we're not
 

00:58:51.440 --> 00:58:52.630 align:start position:0%
all of this expression and we're not
going<00:58:51.520><c> to</c><00:58:51.599><c> break</c><00:58:51.839><c> it</c><00:58:51.920><c> down</c><00:58:52.000><c> to</c><00:58:52.079><c> its</c><00:58:52.240><c> atomic</c>

00:58:52.630 --> 00:58:52.640 align:start position:0%
going to break it down to its atomic
 

00:58:52.640 --> 00:58:54.150 align:start position:0%
going to break it down to its atomic
pieces<00:58:53.200><c> we're</c><00:58:53.359><c> just</c><00:58:53.520><c> going</c><00:58:53.680><c> to</c><00:58:53.760><c> directly</c>

00:58:54.150 --> 00:58:54.160 align:start position:0%
pieces we're just going to directly
 

00:58:54.160 --> 00:58:55.510 align:start position:0%
pieces we're just going to directly
implement<00:58:54.559><c> tanh</c>

00:58:55.510 --> 00:58:55.520 align:start position:0%
implement tanh
 

00:58:55.520 --> 00:58:57.270 align:start position:0%
implement tanh
so<00:58:55.680><c> let's</c><00:58:55.839><c> do</c><00:58:56.000><c> that</c>

00:58:57.270 --> 00:58:57.280 align:start position:0%
so let's do that
 

00:58:57.280 --> 00:58:59.190 align:start position:0%
so let's do that
depth<00:58:57.599><c> nh</c>

00:58:59.190 --> 00:58:59.200 align:start position:0%
depth nh
 

00:58:59.200 --> 00:59:02.390 align:start position:0%
depth nh
and<00:58:59.280><c> then</c><00:58:59.599><c> out</c><00:58:59.920><c> will</c><00:59:00.079><c> be</c><00:59:00.240><c> a</c><00:59:00.400><c> value</c>

00:59:02.390 --> 00:59:02.400 align:start position:0%
and then out will be a value
 

00:59:02.400 --> 00:59:03.589 align:start position:0%
and then out will be a value
of

00:59:03.589 --> 00:59:03.599 align:start position:0%
of
 

00:59:03.599 --> 00:59:05.910 align:start position:0%
of
and<00:59:03.760><c> we</c><00:59:03.839><c> need</c><00:59:04.160><c> this</c><00:59:04.400><c> expression</c><00:59:04.799><c> here</c><00:59:05.040><c> so</c>

00:59:05.910 --> 00:59:05.920 align:start position:0%
and we need this expression here so
 

00:59:05.920 --> 00:59:08.470 align:start position:0%
and we need this expression here so
um

00:59:08.470 --> 00:59:08.480 align:start position:0%
 
 

00:59:08.480 --> 00:59:10.309 align:start position:0%
 
let<00:59:08.640><c> me</c><00:59:08.960><c> actually</c>

00:59:10.309 --> 00:59:10.319 align:start position:0%
let me actually
 

00:59:10.319 --> 00:59:14.150 align:start position:0%
let me actually
copy<00:59:10.720><c> paste</c>

00:59:14.150 --> 00:59:14.160 align:start position:0%
 
 

00:59:14.160 --> 00:59:17.190 align:start position:0%
 
let's<00:59:14.400><c> grab</c><00:59:14.799><c> n</c><00:59:15.119><c> which</c><00:59:15.440><c> is</c><00:59:15.599><c> a</c><00:59:15.760><c> cell.theta</c>

00:59:17.190 --> 00:59:17.200 align:start position:0%
let's grab n which is a cell.theta
 

00:59:17.200 --> 00:59:18.710 align:start position:0%
let's grab n which is a cell.theta
and<00:59:17.359><c> then</c><00:59:17.680><c> this</c>

00:59:18.710 --> 00:59:18.720 align:start position:0%
and then this
 

00:59:18.720 --> 00:59:21.430 align:start position:0%
and then this
i<00:59:18.799><c> believe</c><00:59:19.200><c> is</c><00:59:19.359><c> the</c><00:59:19.599><c> tan</c><00:59:19.839><c> h</c>

00:59:21.430 --> 00:59:21.440 align:start position:0%
i believe is the tan h
 

00:59:21.440 --> 00:59:24.549 align:start position:0%
i believe is the tan h
math.x<00:59:22.319><c> of</c>

00:59:24.549 --> 00:59:24.559 align:start position:0%
math.x of
 

00:59:24.559 --> 00:59:25.910 align:start position:0%
math.x of
two

00:59:25.910 --> 00:59:25.920 align:start position:0%
two
 

00:59:25.920 --> 00:59:27.190 align:start position:0%
two
no<00:59:26.160><c> n</c>

00:59:27.190 --> 00:59:27.200 align:start position:0%
no n
 

00:59:27.200 --> 00:59:28.870 align:start position:0%
no n
n<00:59:27.359><c> minus</c><00:59:27.599><c> one</c><00:59:27.839><c> over</c>

00:59:28.870 --> 00:59:28.880 align:start position:0%
n minus one over
 

00:59:28.880 --> 00:59:30.549 align:start position:0%
n minus one over
two<00:59:29.119><c> n</c><00:59:29.280><c> plus</c><00:59:29.520><c> one</c>

00:59:30.549 --> 00:59:30.559 align:start position:0%
two n plus one
 

00:59:30.559 --> 00:59:33.030 align:start position:0%
two n plus one
maybe<00:59:30.880><c> i</c><00:59:30.960><c> can</c><00:59:31.119><c> call</c><00:59:31.280><c> this</c><00:59:31.520><c> x</c>

00:59:33.030 --> 00:59:33.040 align:start position:0%
maybe i can call this x
 

00:59:33.040 --> 00:59:35.670 align:start position:0%
maybe i can call this x
just<00:59:33.200><c> so</c><00:59:33.359><c> that</c><00:59:33.520><c> it</c><00:59:33.599><c> matches</c><00:59:33.920><c> exactly</c>

00:59:35.670 --> 00:59:35.680 align:start position:0%
just so that it matches exactly
 

00:59:35.680 --> 00:59:37.510 align:start position:0%
just so that it matches exactly
okay<00:59:36.319><c> and</c><00:59:36.640><c> now</c>

00:59:37.510 --> 00:59:37.520 align:start position:0%
okay and now
 

00:59:37.520 --> 00:59:40.309 align:start position:0%
okay and now
this<00:59:37.839><c> will</c><00:59:38.079><c> be</c><00:59:38.400><c> t</c>

00:59:40.309 --> 00:59:40.319 align:start position:0%
this will be t
 

00:59:40.319 --> 00:59:42.549 align:start position:0%
this will be t
and<00:59:40.799><c> uh</c><00:59:41.200><c> children</c><00:59:41.599><c> of</c><00:59:41.680><c> this</c><00:59:41.920><c> node</c><00:59:42.319><c> there's</c>

00:59:42.549 --> 00:59:42.559 align:start position:0%
and uh children of this node there's
 

00:59:42.559 --> 00:59:43.990 align:start position:0%
and uh children of this node there's
just<00:59:42.720><c> one</c><00:59:42.960><c> child</c>

00:59:43.990 --> 00:59:44.000 align:start position:0%
just one child
 

00:59:44.000 --> 00:59:45.990 align:start position:0%
just one child
and<00:59:44.640><c> i'm</c><00:59:44.799><c> wrapping</c><00:59:45.119><c> it</c><00:59:45.200><c> in</c><00:59:45.359><c> a</c><00:59:45.440><c> tuple</c><00:59:45.760><c> so</c><00:59:45.920><c> this</c>

00:59:45.990 --> 00:59:46.000 align:start position:0%
and i'm wrapping it in a tuple so this
 

00:59:46.000 --> 00:59:48.549 align:start position:0%
and i'm wrapping it in a tuple so this
is<00:59:46.160><c> a</c><00:59:46.240><c> tuple</c><00:59:46.480><c> of</c><00:59:46.559><c> one</c><00:59:46.799><c> object</c><00:59:47.119><c> just</c><00:59:47.359><c> self</c>

00:59:48.549 --> 00:59:48.559 align:start position:0%
is a tuple of one object just self
 

00:59:48.559 --> 00:59:50.789 align:start position:0%
is a tuple of one object just self
and<00:59:48.799><c> here</c><00:59:49.200><c> the</c><00:59:49.760><c> name</c><00:59:50.000><c> of</c><00:59:50.079><c> this</c><00:59:50.240><c> operation</c><00:59:50.640><c> will</c>

00:59:50.789 --> 00:59:50.799 align:start position:0%
and here the name of this operation will
 

00:59:50.799 --> 00:59:52.230 align:start position:0%
and here the name of this operation will
be<00:59:50.880><c> 10h</c>

00:59:52.230 --> 00:59:52.240 align:start position:0%
be 10h
 

00:59:52.240 --> 00:59:56.309 align:start position:0%
be 10h
and<00:59:52.400><c> we're</c><00:59:52.640><c> going</c><00:59:52.799><c> to</c><00:59:52.880><c> return</c><00:59:53.280><c> that</c>

00:59:56.309 --> 00:59:56.319 align:start position:0%
 
 

00:59:56.319 --> 00:59:58.549 align:start position:0%
 
okay

00:59:58.549 --> 00:59:58.559 align:start position:0%
okay
 

00:59:58.559 --> 01:00:01.990 align:start position:0%
okay
so<00:59:59.200><c> now</c><00:59:59.520><c> valley</c><00:59:59.839><c> should</c><01:00:00.000><c> be</c><01:00:00.640><c> implementing</c><01:00:01.119><c> 10h</c>

01:00:01.990 --> 01:00:02.000 align:start position:0%
so now valley should be implementing 10h
 

01:00:02.000 --> 01:00:03.270 align:start position:0%
so now valley should be implementing 10h
and<01:00:02.079><c> now</c><01:00:02.319><c> we</c><01:00:02.400><c> can</c><01:00:02.480><c> scroll</c><01:00:02.720><c> all</c><01:00:02.799><c> the</c><01:00:02.880><c> way</c><01:00:03.040><c> down</c>

01:00:03.270 --> 01:00:03.280 align:start position:0%
and now we can scroll all the way down
 

01:00:03.280 --> 01:00:04.549 align:start position:0%
and now we can scroll all the way down
here

01:00:04.549 --> 01:00:04.559 align:start position:0%
here
 

01:00:04.559 --> 01:00:06.870 align:start position:0%
here
and<01:00:04.720><c> we</c><01:00:04.799><c> can</c><01:00:05.040><c> actually</c><01:00:05.359><c> do</c><01:00:05.680><c> n.10</c><01:00:06.319><c> h</c><01:00:06.559><c> and</c><01:00:06.640><c> that's</c>

01:00:06.870 --> 01:00:06.880 align:start position:0%
and we can actually do n.10 h and that's
 

01:00:06.880 --> 01:00:09.190 align:start position:0%
and we can actually do n.10 h and that's
going<01:00:07.040><c> to</c><01:00:07.119><c> return</c><01:00:07.760><c> the</c><01:00:07.920><c> tanhd</c>

01:00:09.190 --> 01:00:09.200 align:start position:0%
going to return the tanhd
 

01:00:09.200 --> 01:00:11.270 align:start position:0%
going to return the tanhd
output<01:00:09.760><c> of</c><01:00:10.079><c> n</c>

01:00:11.270 --> 01:00:11.280 align:start position:0%
output of n
 

01:00:11.280 --> 01:00:12.630 align:start position:0%
output of n
and<01:00:11.440><c> now</c><01:00:11.599><c> we</c><01:00:11.680><c> should</c><01:00:11.839><c> be</c><01:00:11.920><c> able</c><01:00:12.000><c> to</c><01:00:12.160><c> draw</c><01:00:12.319><c> it</c><01:00:12.480><c> out</c>

01:00:12.630 --> 01:00:12.640 align:start position:0%
and now we should be able to draw it out
 

01:00:12.640 --> 01:00:14.710 align:start position:0%
and now we should be able to draw it out
of<01:00:12.880><c> o</c><01:00:13.359><c> not</c><01:00:13.599><c> of</c><01:00:13.920><c> n</c>

01:00:14.710 --> 01:00:14.720 align:start position:0%
of o not of n
 

01:00:14.720 --> 01:00:18.630 align:start position:0%
of o not of n
so<01:00:14.880><c> let's</c><01:00:15.040><c> see</c><01:00:15.200><c> how</c><01:00:15.359><c> that</c><01:00:15.520><c> worked</c>

01:00:18.630 --> 01:00:18.640 align:start position:0%
 
 

01:00:18.640 --> 01:00:19.670 align:start position:0%
 
there<01:00:18.799><c> we</c><01:00:18.960><c> go</c>

01:00:19.670 --> 01:00:19.680 align:start position:0%
there we go
 

01:00:19.680 --> 01:00:21.750 align:start position:0%
there we go
n<01:00:19.839><c> went</c><01:00:20.160><c> through</c><01:00:20.480><c> 10</c><01:00:20.720><c> h</c>

01:00:21.750 --> 01:00:21.760 align:start position:0%
n went through 10 h
 

01:00:21.760 --> 01:00:24.230 align:start position:0%
n went through 10 h
to<01:00:21.920><c> produce</c><01:00:22.640><c> this</c><01:00:22.880><c> output</c>

01:00:24.230 --> 01:00:24.240 align:start position:0%
to produce this output
 

01:00:24.240 --> 01:00:26.150 align:start position:0%
to produce this output
so<01:00:24.400><c> now</c><01:00:24.559><c> tan</c><01:00:24.880><c> h</c><01:00:25.040><c> is</c><01:00:25.200><c> a</c>

01:00:26.150 --> 01:00:26.160 align:start position:0%
so now tan h is a
 

01:00:26.160 --> 01:00:27.750 align:start position:0%
so now tan h is a
sort<01:00:26.319><c> of</c>

01:00:27.750 --> 01:00:27.760 align:start position:0%
sort of
 

01:00:27.760 --> 01:00:29.990 align:start position:0%
sort of
our<01:00:28.000><c> little</c><01:00:28.319><c> micro</c><01:00:28.640><c> grad</c><01:00:28.799><c> supported</c><01:00:29.760><c> node</c>

01:00:29.990 --> 01:00:30.000 align:start position:0%
our little micro grad supported node
 

01:00:30.000 --> 01:00:33.109 align:start position:0%
our little micro grad supported node
here<01:00:30.319><c> as</c><01:00:30.480><c> an</c><01:00:30.640><c> operation</c>

01:00:33.109 --> 01:00:33.119 align:start position:0%
here as an operation
 

01:00:33.119 --> 01:00:35.190 align:start position:0%
here as an operation
and<01:00:33.359><c> as</c><01:00:33.520><c> long</c><01:00:33.680><c> as</c><01:00:33.760><c> we</c><01:00:33.839><c> know</c><01:00:34.000><c> the</c><01:00:34.079><c> derivative</c><01:00:35.040><c> of</c>

01:00:35.190 --> 01:00:35.200 align:start position:0%
and as long as we know the derivative of
 

01:00:35.200 --> 01:00:36.150 align:start position:0%
and as long as we know the derivative of
10h

01:00:36.150 --> 01:00:36.160 align:start position:0%
10h
 

01:00:36.160 --> 01:00:37.510 align:start position:0%
10h
then<01:00:36.400><c> we'll</c><01:00:36.559><c> be</c><01:00:36.720><c> able</c><01:00:36.799><c> to</c><01:00:36.880><c> back</c><01:00:37.040><c> propagate</c>

01:00:37.510 --> 01:00:37.520 align:start position:0%
then we'll be able to back propagate
 

01:00:37.520 --> 01:00:39.510 align:start position:0%
then we'll be able to back propagate
through<01:00:37.680><c> it</c><01:00:38.240><c> now</c><01:00:38.400><c> let's</c><01:00:38.559><c> see</c><01:00:38.720><c> this</c><01:00:38.880><c> 10h</c><01:00:39.280><c> in</c>

01:00:39.510 --> 01:00:39.520 align:start position:0%
through it now let's see this 10h in
 

01:00:39.520 --> 01:00:41.589 align:start position:0%
through it now let's see this 10h in
action<01:00:40.240><c> currently</c><01:00:40.640><c> it's</c><01:00:40.799><c> not</c><01:00:40.880><c> squashing</c><01:00:41.440><c> too</c>

01:00:41.589 --> 01:00:41.599 align:start position:0%
action currently it's not squashing too
 

01:00:41.599 --> 01:00:43.910 align:start position:0%
action currently it's not squashing too
much<01:00:41.920><c> because</c><01:00:42.319><c> the</c><01:00:42.559><c> input</c><01:00:42.799><c> to</c><01:00:42.960><c> it</c><01:00:43.200><c> is</c><01:00:43.599><c> pretty</c>

01:00:43.910 --> 01:00:43.920 align:start position:0%
much because the input to it is pretty
 

01:00:43.920 --> 01:00:46.950 align:start position:0%
much because the input to it is pretty
low<01:00:44.640><c> so</c><01:00:44.799><c> if</c><01:00:44.880><c> the</c><01:00:45.040><c> bias</c><01:00:45.359><c> was</c><01:00:45.599><c> increased</c><01:00:46.400><c> to</c><01:00:46.720><c> say</c>

01:00:46.950 --> 01:00:46.960 align:start position:0%
low so if the bias was increased to say
 

01:00:46.960 --> 01:00:49.109 align:start position:0%
low so if the bias was increased to say
eight

01:00:49.109 --> 01:00:49.119 align:start position:0%
eight
 

01:00:49.119 --> 01:00:51.190 align:start position:0%
eight
then<01:00:49.680><c> we'll</c><01:00:49.920><c> see</c><01:00:50.079><c> that</c><01:00:50.240><c> what's</c><01:00:50.559><c> flowing</c><01:00:50.960><c> into</c>

01:00:51.190 --> 01:00:51.200 align:start position:0%
then we'll see that what's flowing into
 

01:00:51.200 --> 01:00:53.030 align:start position:0%
then we'll see that what's flowing into
the<01:00:51.280><c> 10h</c><01:00:51.680><c> now</c><01:00:52.000><c> is</c>

01:00:53.030 --> 01:00:53.040 align:start position:0%
the 10h now is
 

01:00:53.040 --> 01:00:54.309 align:start position:0%
the 10h now is
two

01:00:54.309 --> 01:00:54.319 align:start position:0%
two
 

01:00:54.319 --> 01:00:57.270 align:start position:0%
two
and<01:00:54.559><c> 10h</c><01:00:54.960><c> is</c><01:00:55.119><c> squashing</c><01:00:55.520><c> it</c><01:00:55.599><c> to</c><01:00:55.760><c> 0.96</c><01:00:56.960><c> so</c><01:00:57.119><c> we're</c>

01:00:57.270 --> 01:00:57.280 align:start position:0%
and 10h is squashing it to 0.96 so we're
 

01:00:57.280 --> 01:00:59.910 align:start position:0%
and 10h is squashing it to 0.96 so we're
already<01:00:57.599><c> hitting</c><01:00:57.920><c> the</c><01:00:58.079><c> tail</c><01:00:58.640><c> of</c><01:00:58.720><c> this</c><01:00:58.960><c> 10h</c><01:00:59.760><c> and</c>

01:00:59.910 --> 01:00:59.920 align:start position:0%
already hitting the tail of this 10h and
 

01:00:59.920 --> 01:01:01.589 align:start position:0%
already hitting the tail of this 10h and
it<01:01:00.000><c> will</c><01:01:00.160><c> sort</c><01:01:00.319><c> of</c><01:01:00.400><c> smoothly</c><01:01:00.799><c> go</c><01:01:00.960><c> up</c><01:01:01.040><c> to</c><01:01:01.200><c> 1</c><01:01:01.520><c> and</c>

01:01:01.589 --> 01:01:01.599 align:start position:0%
it will sort of smoothly go up to 1 and
 

01:01:01.599 --> 01:01:03.349 align:start position:0%
it will sort of smoothly go up to 1 and
then<01:01:01.760><c> plateau</c><01:01:02.240><c> out</c><01:01:02.400><c> over</c><01:01:02.559><c> there</c>

01:01:03.349 --> 01:01:03.359 align:start position:0%
then plateau out over there
 

01:01:03.359 --> 01:01:04.630 align:start position:0%
then plateau out over there
okay<01:01:03.599><c> so</c><01:01:03.760><c> now</c><01:01:03.839><c> i'm</c><01:01:04.000><c> going</c><01:01:04.160><c> to</c><01:01:04.240><c> do</c><01:01:04.400><c> something</c>

01:01:04.630 --> 01:01:04.640 align:start position:0%
okay so now i'm going to do something
 

01:01:04.640 --> 01:01:06.549 align:start position:0%
okay so now i'm going to do something
slightly<01:01:05.040><c> strange</c><01:01:05.839><c> i'm</c><01:01:06.000><c> going</c><01:01:06.160><c> to</c><01:01:06.319><c> change</c>

01:01:06.549 --> 01:01:06.559 align:start position:0%
slightly strange i'm going to change
 

01:01:06.559 --> 01:01:09.750 align:start position:0%
slightly strange i'm going to change
this<01:01:06.799><c> bias</c><01:01:07.119><c> from</c><01:01:07.359><c> 8</c><01:01:08.000><c> to</c><01:01:08.559><c> this</c><01:01:08.799><c> number</c>

01:01:09.750 --> 01:01:09.760 align:start position:0%
this bias from 8 to this number
 

01:01:09.760 --> 01:01:11.829 align:start position:0%
this bias from 8 to this number
6.88<01:01:10.559><c> etc</c>

01:01:11.829 --> 01:01:11.839 align:start position:0%
6.88 etc
 

01:01:11.839 --> 01:01:13.349 align:start position:0%
6.88 etc
and<01:01:12.000><c> i'm</c><01:01:12.160><c> going</c><01:01:12.319><c> to</c><01:01:12.400><c> do</c><01:01:12.559><c> this</c><01:01:12.799><c> for</c><01:01:12.960><c> specific</c>

01:01:13.349 --> 01:01:13.359 align:start position:0%
and i'm going to do this for specific
 

01:01:13.359 --> 01:01:15.510 align:start position:0%
and i'm going to do this for specific
reasons<01:01:13.839><c> because</c><01:01:14.559><c> we're</c><01:01:14.799><c> about</c><01:01:14.960><c> to</c><01:01:15.119><c> start</c>

01:01:15.510 --> 01:01:15.520 align:start position:0%
reasons because we're about to start
 

01:01:15.520 --> 01:01:16.950 align:start position:0%
reasons because we're about to start
back<01:01:15.760><c> propagation</c>

01:01:16.950 --> 01:01:16.960 align:start position:0%
back propagation
 

01:01:16.960 --> 01:01:19.030 align:start position:0%
back propagation
and<01:01:17.280><c> i</c><01:01:17.440><c> want</c><01:01:17.599><c> to</c><01:01:17.680><c> make</c><01:01:17.920><c> sure</c><01:01:18.240><c> that</c><01:01:18.480><c> our</c><01:01:18.640><c> numbers</c>

01:01:19.030 --> 01:01:19.040 align:start position:0%
and i want to make sure that our numbers
 

01:01:19.040 --> 01:01:21.030 align:start position:0%
and i want to make sure that our numbers
come<01:01:19.280><c> out</c><01:01:19.520><c> nice</c><01:01:20.160><c> they're</c><01:01:20.319><c> not</c><01:01:20.559><c> like</c><01:01:20.799><c> very</c>

01:01:21.030 --> 01:01:21.040 align:start position:0%
come out nice they're not like very
 

01:01:21.040 --> 01:01:22.549 align:start position:0%
come out nice they're not like very
crazy<01:01:21.280><c> numbers</c><01:01:21.599><c> they're</c><01:01:21.839><c> nice</c><01:01:22.079><c> numbers</c><01:01:22.400><c> that</c>

01:01:22.549 --> 01:01:22.559 align:start position:0%
crazy numbers they're nice numbers that
 

01:01:22.559 --> 01:01:24.710 align:start position:0%
crazy numbers they're nice numbers that
we<01:01:22.640><c> can</c><01:01:22.799><c> sort</c><01:01:22.960><c> of</c><01:01:23.440><c> understand</c><01:01:23.839><c> in</c><01:01:23.920><c> our</c><01:01:24.000><c> head</c>

01:01:24.710 --> 01:01:24.720 align:start position:0%
we can sort of understand in our head
 

01:01:24.720 --> 01:01:26.950 align:start position:0%
we can sort of understand in our head
let<01:01:24.880><c> me</c><01:01:24.960><c> also</c><01:01:25.280><c> add</c><01:01:25.440><c> a</c><01:01:25.520><c> pose</c><01:01:25.839><c> label</c>

01:01:26.950 --> 01:01:26.960 align:start position:0%
let me also add a pose label
 

01:01:26.960 --> 01:01:29.990 align:start position:0%
let me also add a pose label
o<01:01:27.280><c> is</c><01:01:27.359><c> short</c><01:01:27.599><c> for</c><01:01:27.839><c> output</c><01:01:28.319><c> here</c>

01:01:29.990 --> 01:01:30.000 align:start position:0%
o is short for output here
 

01:01:30.000 --> 01:01:31.510 align:start position:0%
o is short for output here
so<01:01:30.160><c> that's</c><01:01:30.400><c> zero</c>

01:01:31.510 --> 01:01:31.520 align:start position:0%
so that's zero
 

01:01:31.520 --> 01:01:32.630 align:start position:0%
so that's zero
okay<01:01:31.839><c> so</c>

01:01:32.630 --> 01:01:32.640 align:start position:0%
okay so
 

01:01:32.640 --> 01:01:36.069 align:start position:0%
okay so
0.88<01:01:33.200><c> flows</c><01:01:33.520><c> into</c><01:01:33.680><c> 10</c><01:01:33.920><c> h</c><01:01:34.079><c> comes</c><01:01:34.319><c> out</c><01:01:34.400><c> 0.7</c><01:01:35.119><c> so</c><01:01:35.280><c> on</c>

01:01:36.069 --> 01:01:36.079 align:start position:0%
0.88 flows into 10 h comes out 0.7 so on
 

01:01:36.079 --> 01:01:37.109 align:start position:0%
0.88 flows into 10 h comes out 0.7 so on
so<01:01:36.240><c> now</c><01:01:36.400><c> we're</c><01:01:36.559><c> going</c><01:01:36.720><c> to</c><01:01:36.799><c> do</c><01:01:36.880><c> back</c>

01:01:37.109 --> 01:01:37.119 align:start position:0%
so now we're going to do back
 

01:01:37.119 --> 01:01:38.710 align:start position:0%
so now we're going to do back
propagation<01:01:37.599><c> and</c><01:01:37.680><c> we're</c><01:01:38.000><c> going</c><01:01:38.160><c> to</c><01:01:38.319><c> fill</c><01:01:38.480><c> in</c>

01:01:38.710 --> 01:01:38.720 align:start position:0%
propagation and we're going to fill in
 

01:01:38.720 --> 01:01:40.230 align:start position:0%
propagation and we're going to fill in
all<01:01:38.799><c> the</c><01:01:38.960><c> gradients</c>

01:01:40.230 --> 01:01:40.240 align:start position:0%
all the gradients
 

01:01:40.240 --> 01:01:43.190 align:start position:0%
all the gradients
so<01:01:40.480><c> what</c><01:01:40.720><c> is</c><01:01:40.880><c> the</c><01:01:41.599><c> derivative</c><01:01:42.240><c> o</c><01:01:42.640><c> with</c><01:01:42.799><c> respect</c>

01:01:43.190 --> 01:01:43.200 align:start position:0%
so what is the derivative o with respect
 

01:01:43.200 --> 01:01:43.990 align:start position:0%
so what is the derivative o with respect
to

01:01:43.990 --> 01:01:44.000 align:start position:0%
to
 

01:01:44.000 --> 01:01:45.030 align:start position:0%
to
all<01:01:44.160><c> the</c>

01:01:45.030 --> 01:01:45.040 align:start position:0%
all the
 

01:01:45.040 --> 01:01:47.109 align:start position:0%
all the
inputs<01:01:45.440><c> here</c><01:01:46.160><c> and</c><01:01:46.319><c> of</c><01:01:46.400><c> course</c><01:01:46.640><c> in</c><01:01:46.720><c> the</c><01:01:46.799><c> typical</c>

01:01:47.109 --> 01:01:47.119 align:start position:0%
inputs here and of course in the typical
 

01:01:47.119 --> 01:01:48.549 align:start position:0%
inputs here and of course in the typical
neural<01:01:47.280><c> network</c><01:01:47.599><c> setting</c><01:01:48.000><c> what</c><01:01:48.240><c> we</c><01:01:48.319><c> really</c>

01:01:48.549 --> 01:01:48.559 align:start position:0%
neural network setting what we really
 

01:01:48.559 --> 01:01:51.349 align:start position:0%
neural network setting what we really
care<01:01:48.720><c> about</c><01:01:48.880><c> the</c><01:01:48.960><c> most</c><01:01:49.520><c> is</c><01:01:49.760><c> the</c><01:01:49.920><c> derivative</c><01:01:50.480><c> of</c>

01:01:51.349 --> 01:01:51.359 align:start position:0%
care about the most is the derivative of
 

01:01:51.359 --> 01:01:53.270 align:start position:0%
care about the most is the derivative of
these<01:01:51.680><c> neurons</c><01:01:52.240><c> on</c><01:01:52.480><c> the</c><01:01:52.720><c> weights</c>

01:01:53.270 --> 01:01:53.280 align:start position:0%
these neurons on the weights
 

01:01:53.280 --> 01:01:56.309 align:start position:0%
these neurons on the weights
specifically<01:01:54.240><c> the</c><01:01:54.480><c> w2</c><01:01:55.039><c> and</c><01:01:55.119><c> w1</c><01:01:55.920><c> because</c><01:01:56.079><c> those</c>

01:01:56.309 --> 01:01:56.319 align:start position:0%
specifically the w2 and w1 because those
 

01:01:56.319 --> 01:01:57.349 align:start position:0%
specifically the w2 and w1 because those
are<01:01:56.400><c> the</c><01:01:56.559><c> weights</c><01:01:56.799><c> that</c><01:01:56.880><c> we're</c><01:01:57.039><c> going</c><01:01:57.200><c> to</c><01:01:57.280><c> be</c>

01:01:57.349 --> 01:01:57.359 align:start position:0%
are the weights that we're going to be
 

01:01:57.359 --> 01:01:59.670 align:start position:0%
are the weights that we're going to be
changing<01:01:57.839><c> part</c><01:01:58.000><c> of</c><01:01:58.079><c> the</c><01:01:58.240><c> optimization</c>

01:01:59.670 --> 01:01:59.680 align:start position:0%
changing part of the optimization
 

01:01:59.680 --> 01:02:00.630 align:start position:0%
changing part of the optimization
and<01:01:59.760><c> the</c><01:01:59.920><c> other</c><01:02:00.000><c> thing</c><01:02:00.160><c> that</c><01:02:00.319><c> we</c><01:02:00.400><c> have</c><01:02:00.559><c> to</c>

01:02:00.630 --> 01:02:00.640 align:start position:0%
and the other thing that we have to
 

01:02:00.640 --> 01:02:02.230 align:start position:0%
and the other thing that we have to
remember<01:02:00.960><c> is</c><01:02:01.119><c> here</c><01:02:01.280><c> we</c><01:02:01.440><c> have</c><01:02:01.760><c> only</c><01:02:01.839><c> a</c><01:02:01.920><c> single</c>

01:02:02.230 --> 01:02:02.240 align:start position:0%
remember is here we have only a single
 

01:02:02.240 --> 01:02:03.750 align:start position:0%
remember is here we have only a single
neuron<01:02:02.720><c> but</c><01:02:02.960><c> in</c><01:02:03.039><c> the</c><01:02:03.119><c> neural</c><01:02:03.359><c> natives</c>

01:02:03.750 --> 01:02:03.760 align:start position:0%
neuron but in the neural natives
 

01:02:03.760 --> 01:02:04.950 align:start position:0%
neuron but in the neural natives
typically<01:02:04.079><c> have</c><01:02:04.160><c> many</c><01:02:04.400><c> neurons</c><01:02:04.799><c> and</c><01:02:04.880><c> they're</c>

01:02:04.950 --> 01:02:04.960 align:start position:0%
typically have many neurons and they're
 

01:02:04.960 --> 01:02:07.109 align:start position:0%
typically have many neurons and they're
connected

01:02:07.109 --> 01:02:07.119 align:start position:0%
connected
 

01:02:07.119 --> 01:02:09.109 align:start position:0%
connected
so<01:02:07.280><c> this</c><01:02:07.520><c> is</c><01:02:07.680><c> only</c><01:02:07.839><c> like</c><01:02:08.000><c> a</c><01:02:08.160><c> one</c><01:02:08.400><c> small</c><01:02:08.640><c> neuron</c>

01:02:09.109 --> 01:02:09.119 align:start position:0%
so this is only like a one small neuron
 

01:02:09.119 --> 01:02:10.630 align:start position:0%
so this is only like a one small neuron
a<01:02:09.200><c> piece</c><01:02:09.440><c> of</c><01:02:09.520><c> a</c><01:02:09.599><c> much</c><01:02:09.760><c> bigger</c><01:02:10.079><c> puzzle</c><01:02:10.480><c> and</c>

01:02:10.630 --> 01:02:10.640 align:start position:0%
a piece of a much bigger puzzle and
 

01:02:10.640 --> 01:02:12.470 align:start position:0%
a piece of a much bigger puzzle and
eventually<01:02:10.960><c> there's</c><01:02:11.200><c> a</c><01:02:11.280><c> loss</c><01:02:11.520><c> function</c><01:02:12.319><c> that</c>

01:02:12.470 --> 01:02:12.480 align:start position:0%
eventually there's a loss function that
 

01:02:12.480 --> 01:02:13.829 align:start position:0%
eventually there's a loss function that
sort<01:02:12.640><c> of</c><01:02:12.799><c> measures</c><01:02:13.119><c> the</c><01:02:13.200><c> accuracy</c><01:02:13.680><c> of</c><01:02:13.760><c> the</c>

01:02:13.829 --> 01:02:13.839 align:start position:0%
sort of measures the accuracy of the
 

01:02:13.839 --> 01:02:15.270 align:start position:0%
sort of measures the accuracy of the
neural<01:02:14.079><c> net</c><01:02:14.400><c> and</c><01:02:14.480><c> we're</c><01:02:14.640><c> back</c><01:02:14.799><c> propagating</c>

01:02:15.270 --> 01:02:15.280 align:start position:0%
neural net and we're back propagating
 

01:02:15.280 --> 01:02:16.870 align:start position:0%
neural net and we're back propagating
with<01:02:15.440><c> respect</c><01:02:15.760><c> to</c><01:02:15.839><c> that</c><01:02:16.079><c> accuracy</c><01:02:16.559><c> and</c><01:02:16.640><c> trying</c>

01:02:16.870 --> 01:02:16.880 align:start position:0%
with respect to that accuracy and trying
 

01:02:16.880 --> 01:02:19.190 align:start position:0%
with respect to that accuracy and trying
to<01:02:17.200><c> increase</c><01:02:17.599><c> it</c>

01:02:19.190 --> 01:02:19.200 align:start position:0%
to increase it
 

01:02:19.200 --> 01:02:21.109 align:start position:0%
to increase it
so<01:02:19.680><c> let's</c><01:02:19.920><c> start</c><01:02:20.160><c> off</c><01:02:20.319><c> by</c><01:02:20.480><c> propagation</c><01:02:20.960><c> here</c>

01:02:21.109 --> 01:02:21.119 align:start position:0%
so let's start off by propagation here
 

01:02:21.119 --> 01:02:22.470 align:start position:0%
so let's start off by propagation here
in<01:02:21.200><c> the</c><01:02:21.440><c> end</c>

01:02:22.470 --> 01:02:22.480 align:start position:0%
in the end
 

01:02:22.480 --> 01:02:24.309 align:start position:0%
in the end
what<01:02:22.640><c> is</c><01:02:22.720><c> the</c><01:02:22.799><c> derivative</c><01:02:23.280><c> of</c><01:02:23.520><c> o</c><01:02:23.760><c> with</c><01:02:24.000><c> respect</c>

01:02:24.309 --> 01:02:24.319 align:start position:0%
what is the derivative of o with respect
 

01:02:24.319 --> 01:02:26.950 align:start position:0%
what is the derivative of o with respect
to<01:02:24.720><c> o</c><01:02:25.359><c> the</c><01:02:25.520><c> base</c><01:02:25.760><c> case</c><01:02:26.079><c> sort</c><01:02:26.319><c> of</c><01:02:26.480><c> we</c><01:02:26.640><c> know</c>

01:02:26.950 --> 01:02:26.960 align:start position:0%
to o the base case sort of we know
 

01:02:26.960 --> 01:02:30.470 align:start position:0%
to o the base case sort of we know
always<01:02:27.440><c> is</c><01:02:27.680><c> that</c><01:02:27.920><c> the</c><01:02:28.079><c> gradient</c><01:02:28.559><c> is</c><01:02:28.720><c> just</c><01:02:28.960><c> 1.0</c>

01:02:30.470 --> 01:02:30.480 align:start position:0%
always is that the gradient is just 1.0
 

01:02:30.480 --> 01:02:32.390 align:start position:0%
always is that the gradient is just 1.0
so<01:02:30.640><c> let</c><01:02:30.799><c> me</c><01:02:30.880><c> fill</c><01:02:31.039><c> it</c><01:02:31.200><c> in</c>

01:02:32.390 --> 01:02:32.400 align:start position:0%
so let me fill it in
 

01:02:32.400 --> 01:02:35.109 align:start position:0%
so let me fill it in
and<01:02:32.640><c> then</c><01:02:33.680><c> let</c><01:02:34.000><c> me</c>

01:02:35.109 --> 01:02:35.119 align:start position:0%
and then let me
 

01:02:35.119 --> 01:02:37.109 align:start position:0%
and then let me
split<01:02:35.520><c> out</c>

01:02:37.109 --> 01:02:37.119 align:start position:0%
split out
 

01:02:37.119 --> 01:02:40.069 align:start position:0%
split out
the<01:02:37.280><c> drawing</c><01:02:37.760><c> function</c>

01:02:40.069 --> 01:02:40.079 align:start position:0%
the drawing function
 

01:02:40.079 --> 01:02:43.670 align:start position:0%
the drawing function
here

01:02:43.670 --> 01:02:43.680 align:start position:0%
 
 

01:02:43.680 --> 01:02:47.270 align:start position:0%
 
and<01:02:43.839><c> then</c><01:02:44.079><c> here</c><01:02:44.720><c> cell</c>

01:02:47.270 --> 01:02:47.280 align:start position:0%
 
 

01:02:47.280 --> 01:02:50.069 align:start position:0%
 
clear<01:02:47.520><c> this</c><01:02:47.760><c> output</c><01:02:48.079><c> here</c><01:02:48.720><c> okay</c>

01:02:50.069 --> 01:02:50.079 align:start position:0%
clear this output here okay
 

01:02:50.079 --> 01:02:52.470 align:start position:0%
clear this output here okay
so<01:02:50.240><c> now</c><01:02:50.400><c> when</c><01:02:50.559><c> we</c><01:02:50.720><c> draw</c><01:02:51.119><c> o</c><01:02:51.520><c> we'll</c><01:02:51.760><c> see</c><01:02:51.920><c> that</c><01:02:52.319><c> oh</c>

01:02:52.470 --> 01:02:52.480 align:start position:0%
so now when we draw o we'll see that oh
 

01:02:52.480 --> 01:02:53.910 align:start position:0%
so now when we draw o we'll see that oh
that<01:02:52.720><c> grad</c><01:02:52.960><c> is</c><01:02:53.039><c> one</c>

01:02:53.910 --> 01:02:53.920 align:start position:0%
that grad is one
 

01:02:53.920 --> 01:02:55.109 align:start position:0%
that grad is one
so<01:02:54.079><c> now</c><01:02:54.240><c> we're</c><01:02:54.319><c> going</c><01:02:54.480><c> to</c><01:02:54.559><c> back</c><01:02:54.720><c> propagate</c>

01:02:55.109 --> 01:02:55.119 align:start position:0%
so now we're going to back propagate
 

01:02:55.119 --> 01:02:56.630 align:start position:0%
so now we're going to back propagate
through<01:02:55.359><c> the</c><01:02:55.520><c> tan</c><01:02:55.760><c> h</c>

01:02:56.630 --> 01:02:56.640 align:start position:0%
through the tan h
 

01:02:56.640 --> 01:02:58.630 align:start position:0%
through the tan h
so<01:02:56.880><c> to</c><01:02:57.200><c> back</c><01:02:57.359><c> propagate</c><01:02:57.839><c> through</c><01:02:58.000><c> 10h</c><01:02:58.400><c> we</c><01:02:58.559><c> need</c>

01:02:58.630 --> 01:02:58.640 align:start position:0%
so to back propagate through 10h we need
 

01:02:58.640 --> 01:03:01.190 align:start position:0%
so to back propagate through 10h we need
to<01:02:58.720><c> know</c><01:02:58.880><c> the</c><01:02:59.039><c> local</c><01:02:59.359><c> derivative</c><01:03:00.000><c> of</c><01:03:00.160><c> 10h</c>

01:03:01.190 --> 01:03:01.200 align:start position:0%
to know the local derivative of 10h
 

01:03:01.200 --> 01:03:03.670 align:start position:0%
to know the local derivative of 10h
so<01:03:01.920><c> if</c><01:03:02.400><c> we</c><01:03:02.559><c> have</c><01:03:02.799><c> that</c>

01:03:03.670 --> 01:03:03.680 align:start position:0%
so if we have that
 

01:03:03.680 --> 01:03:07.029 align:start position:0%
so if we have that
o<01:03:04.319><c> is</c><01:03:05.039><c> 10</c><01:03:05.359><c> h</c><01:03:06.000><c> of</c>

01:03:07.029 --> 01:03:07.039 align:start position:0%
o is 10 h of
 

01:03:07.039 --> 01:03:08.390 align:start position:0%
o is 10 h of
n

01:03:08.390 --> 01:03:08.400 align:start position:0%
n
 

01:03:08.400 --> 01:03:11.990 align:start position:0%
n
then<01:03:08.640><c> what</c><01:03:08.880><c> is</c><01:03:09.280><c> d</c><01:03:09.680><c> o</c><01:03:10.240><c> by</c><01:03:10.480><c> d</c><01:03:10.880><c> n</c>

01:03:11.990 --> 01:03:12.000 align:start position:0%
then what is d o by d n
 

01:03:12.000 --> 01:03:13.589 align:start position:0%
then what is d o by d n
now<01:03:12.160><c> what</c><01:03:12.319><c> you</c><01:03:12.480><c> could</c><01:03:12.720><c> do</c><01:03:12.960><c> is</c><01:03:13.119><c> you</c><01:03:13.200><c> could</c><01:03:13.359><c> come</c>

01:03:13.589 --> 01:03:13.599 align:start position:0%
now what you could do is you could come
 

01:03:13.599 --> 01:03:15.270 align:start position:0%
now what you could do is you could come
here<01:03:13.920><c> and</c><01:03:14.000><c> you</c><01:03:14.079><c> could</c><01:03:14.240><c> take</c><01:03:14.400><c> this</c><01:03:14.640><c> expression</c>

01:03:15.270 --> 01:03:15.280 align:start position:0%
here and you could take this expression
 

01:03:15.280 --> 01:03:16.390 align:start position:0%
here and you could take this expression
and<01:03:15.440><c> you</c><01:03:15.599><c> could</c>

01:03:16.390 --> 01:03:16.400 align:start position:0%
and you could
 

01:03:16.400 --> 01:03:19.109 align:start position:0%
and you could
do<01:03:16.559><c> your</c><01:03:16.799><c> calculus</c><01:03:17.440><c> derivative</c><01:03:18.000><c> taking</c>

01:03:19.109 --> 01:03:19.119 align:start position:0%
do your calculus derivative taking
 

01:03:19.119 --> 01:03:21.349 align:start position:0%
do your calculus derivative taking
um<01:03:19.680><c> and</c><01:03:19.760><c> that</c><01:03:19.920><c> would</c><01:03:20.079><c> work</c><01:03:20.720><c> but</c><01:03:20.880><c> we</c><01:03:21.039><c> can</c><01:03:21.119><c> also</c>

01:03:21.349 --> 01:03:21.359 align:start position:0%
um and that would work but we can also
 

01:03:21.359 --> 01:03:23.750 align:start position:0%
um and that would work but we can also
just<01:03:21.520><c> scroll</c><01:03:21.760><c> down</c><01:03:22.160><c> wikipedia</c><01:03:22.880><c> here</c>

01:03:23.750 --> 01:03:23.760 align:start position:0%
just scroll down wikipedia here
 

01:03:23.760 --> 01:03:26.789 align:start position:0%
just scroll down wikipedia here
into<01:03:24.319><c> a</c><01:03:24.480><c> section</c><01:03:24.880><c> that</c><01:03:25.359><c> hopefully</c><01:03:25.760><c> tells</c><01:03:26.079><c> us</c>

01:03:26.789 --> 01:03:26.799 align:start position:0%
into a section that hopefully tells us
 

01:03:26.799 --> 01:03:28.950 align:start position:0%
into a section that hopefully tells us
that<01:03:27.119><c> derivative</c><01:03:27.760><c> uh</c>

01:03:28.950 --> 01:03:28.960 align:start position:0%
that derivative uh
 

01:03:28.960 --> 01:03:31.670 align:start position:0%
that derivative uh
d<01:03:29.119><c> by</c><01:03:29.280><c> dx</c><01:03:29.599><c> of</c><01:03:29.680><c> 10</c><01:03:29.839><c> h</c><01:03:30.000><c> of</c><01:03:30.160><c> x</c><01:03:30.480><c> is</c>

01:03:31.670 --> 01:03:31.680 align:start position:0%
d by dx of 10 h of x is
 

01:03:31.680 --> 01:03:33.750 align:start position:0%
d by dx of 10 h of x is
any<01:03:31.920><c> of</c><01:03:32.000><c> these</c><01:03:32.559><c> i</c><01:03:32.640><c> like</c><01:03:32.880><c> this</c><01:03:32.960><c> one</c><01:03:33.119><c> 1</c><01:03:33.359><c> minus</c><01:03:33.599><c> 10</c>

01:03:33.750 --> 01:03:33.760 align:start position:0%
any of these i like this one 1 minus 10
 

01:03:33.760 --> 01:03:35.190 align:start position:0%
any of these i like this one 1 minus 10
h<01:03:33.920><c> square</c><01:03:34.160><c> of</c><01:03:34.319><c> x</c>

01:03:35.190 --> 01:03:35.200 align:start position:0%
h square of x
 

01:03:35.200 --> 01:03:37.430 align:start position:0%
h square of x
so<01:03:35.440><c> this</c><01:03:35.680><c> is</c><01:03:35.839><c> 1</c><01:03:36.000><c> minus</c><01:03:36.480><c> 10</c><01:03:36.720><c> h</c>

01:03:37.430 --> 01:03:37.440 align:start position:0%
so this is 1 minus 10 h
 

01:03:37.440 --> 01:03:39.349 align:start position:0%
so this is 1 minus 10 h
of<01:03:37.760><c> x</c><01:03:38.400><c> squared</c>

01:03:39.349 --> 01:03:39.359 align:start position:0%
of x squared
 

01:03:39.359 --> 01:03:41.750 align:start position:0%
of x squared
so<01:03:39.520><c> basically</c><01:03:39.839><c> what</c><01:03:40.000><c> this</c><01:03:40.160><c> is</c><01:03:40.319><c> saying</c><01:03:40.720><c> is</c><01:03:40.880><c> that</c>

01:03:41.750 --> 01:03:41.760 align:start position:0%
so basically what this is saying is that
 

01:03:41.760 --> 01:03:43.670 align:start position:0%
so basically what this is saying is that
d<01:03:42.000><c> o</c><01:03:42.240><c> by</c><01:03:42.400><c> d</c><01:03:42.640><c> n</c>

01:03:43.670 --> 01:03:43.680 align:start position:0%
d o by d n
 

01:03:43.680 --> 01:03:44.549 align:start position:0%
d o by d n
is

01:03:44.549 --> 01:03:44.559 align:start position:0%
is
 

01:03:44.559 --> 01:03:47.430 align:start position:0%
is
1<01:03:44.799><c> minus</c><01:03:45.680><c> 10</c><01:03:45.920><c> h</c>

01:03:47.430 --> 01:03:47.440 align:start position:0%
1 minus 10 h
 

01:03:47.440 --> 01:03:48.870 align:start position:0%
1 minus 10 h
of<01:03:47.760><c> n</c>

01:03:48.870 --> 01:03:48.880 align:start position:0%
of n
 

01:03:48.880 --> 01:03:51.029 align:start position:0%
of n
squared

01:03:51.029 --> 01:03:51.039 align:start position:0%
squared
 

01:03:51.039 --> 01:03:52.870 align:start position:0%
squared
and<01:03:51.200><c> we</c><01:03:51.359><c> already</c><01:03:51.680><c> have</c><01:03:51.839><c> 10</c><01:03:52.000><c> h</c><01:03:52.160><c> of</c><01:03:52.319><c> n</c><01:03:52.640><c> that's</c>

01:03:52.870 --> 01:03:52.880 align:start position:0%
and we already have 10 h of n that's
 

01:03:52.880 --> 01:03:54.470 align:start position:0%
and we already have 10 h of n that's
just<01:03:53.359><c> o</c>

01:03:54.470 --> 01:03:54.480 align:start position:0%
just o
 

01:03:54.480 --> 01:03:56.470 align:start position:0%
just o
so<01:03:54.720><c> it's</c><01:03:54.799><c> one</c><01:03:54.960><c> minus</c><01:03:55.280><c> o</c><01:03:55.440><c> squared</c>

01:03:56.470 --> 01:03:56.480 align:start position:0%
so it's one minus o squared
 

01:03:56.480 --> 01:03:59.829 align:start position:0%
so it's one minus o squared
so<01:03:56.720><c> o</c><01:03:56.880><c> is</c><01:03:56.960><c> the</c><01:03:57.119><c> output</c><01:03:57.440><c> here</c><01:03:58.160><c> so</c><01:03:58.319><c> the</c><01:03:58.559><c> output</c><01:03:59.039><c> is</c>

01:03:59.829 --> 01:03:59.839 align:start position:0%
so o is the output here so the output is
 

01:03:59.839 --> 01:04:02.150 align:start position:0%
so o is the output here so the output is
this<01:04:00.079><c> number</c>

01:04:02.150 --> 01:04:02.160 align:start position:0%
this number
 

01:04:02.160 --> 01:04:04.230 align:start position:0%
this number
data

01:04:04.230 --> 01:04:04.240 align:start position:0%
data
 

01:04:04.240 --> 01:04:06.470 align:start position:0%
data
is<01:04:04.880><c> this</c><01:04:05.119><c> number</c>

01:04:06.470 --> 01:04:06.480 align:start position:0%
is this number
 

01:04:06.480 --> 01:04:08.069 align:start position:0%
is this number
and<01:04:06.640><c> then</c>

01:04:08.069 --> 01:04:08.079 align:start position:0%
and then
 

01:04:08.079 --> 01:04:10.390 align:start position:0%
and then
what<01:04:08.240><c> this</c><01:04:08.480><c> is</c><01:04:08.559><c> saying</c><01:04:08.799><c> is</c><01:04:08.880><c> that</c><01:04:09.039><c> do</c><01:04:09.440><c> by</c><01:04:09.599><c> dn</c><01:04:10.240><c> is</c>

01:04:10.390 --> 01:04:10.400 align:start position:0%
what this is saying is that do by dn is
 

01:04:10.400 --> 01:04:11.670 align:start position:0%
what this is saying is that do by dn is
1<01:04:10.640><c> minus</c>

01:04:11.670 --> 01:04:11.680 align:start position:0%
1 minus
 

01:04:11.680 --> 01:04:13.270 align:start position:0%
1 minus
this<01:04:11.920><c> squared</c><01:04:12.480><c> so</c>

01:04:13.270 --> 01:04:13.280 align:start position:0%
this squared so
 

01:04:13.280 --> 01:04:16.470 align:start position:0%
this squared so
one<01:04:13.520><c> minus</c><01:04:13.839><c> of</c><01:04:14.000><c> that</c><01:04:14.160><c> data</c><01:04:14.559><c> squared</c>

01:04:16.470 --> 01:04:16.480 align:start position:0%
one minus of that data squared
 

01:04:16.480 --> 01:04:18.950 align:start position:0%
one minus of that data squared
is<01:04:16.640><c> 0.5</c><01:04:17.359><c> conveniently</c>

01:04:18.950 --> 01:04:18.960 align:start position:0%
is 0.5 conveniently
 

01:04:18.960 --> 01:04:21.589 align:start position:0%
is 0.5 conveniently
so<01:04:19.119><c> the</c><01:04:19.280><c> local</c><01:04:19.599><c> derivative</c><01:04:20.480><c> of</c><01:04:20.640><c> this</c><01:04:21.119><c> 10</c><01:04:21.359><c> h</c>

01:04:21.589 --> 01:04:21.599 align:start position:0%
so the local derivative of this 10 h
 

01:04:21.599 --> 01:04:24.230 align:start position:0%
so the local derivative of this 10 h
operation<01:04:22.000><c> here</c><01:04:22.400><c> is</c><01:04:22.559><c> 0.5</c>

01:04:24.230 --> 01:04:24.240 align:start position:0%
operation here is 0.5
 

01:04:24.240 --> 01:04:25.190 align:start position:0%
operation here is 0.5
and

01:04:25.190 --> 01:04:25.200 align:start position:0%
and
 

01:04:25.200 --> 01:04:27.430 align:start position:0%
and
so<01:04:25.359><c> that</c><01:04:25.520><c> would</c><01:04:25.599><c> be</c><01:04:25.839><c> d</c><01:04:26.079><c> o</c><01:04:26.240><c> by</c><01:04:26.400><c> d</c><01:04:26.720><c> n</c>

01:04:27.430 --> 01:04:27.440 align:start position:0%
so that would be d o by d n
 

01:04:27.440 --> 01:04:28.549 align:start position:0%
so that would be d o by d n
so

01:04:28.549 --> 01:04:28.559 align:start position:0%
so
 

01:04:28.559 --> 01:04:33.270 align:start position:0%
so
we<01:04:28.720><c> can</c><01:04:28.960><c> fill</c><01:04:29.200><c> in</c><01:04:29.359><c> that</c><01:04:30.000><c> in</c><01:04:30.160><c> that</c><01:04:30.400><c> grad</c>

01:04:33.270 --> 01:04:33.280 align:start position:0%
 
 

01:04:33.280 --> 01:04:42.470 align:start position:0%
 
is<01:04:34.000><c> 0.5</c><01:04:34.480><c> we'll</c><01:04:34.640><c> just</c><01:04:34.799><c> fill</c><01:04:34.960><c> in</c>

01:04:42.470 --> 01:04:42.480 align:start position:0%
 
 

01:04:42.480 --> 01:04:45.190 align:start position:0%
 
so<01:04:42.720><c> this</c><01:04:42.880><c> is</c><01:04:43.039><c> exactly</c><01:04:43.440><c> 0.5</c><01:04:44.000><c> one</c><01:04:44.240><c> half</c>

01:04:45.190 --> 01:04:45.200 align:start position:0%
so this is exactly 0.5 one half
 

01:04:45.200 --> 01:04:47.109 align:start position:0%
so this is exactly 0.5 one half
so<01:04:45.359><c> now</c><01:04:45.520><c> we're</c><01:04:45.599><c> going</c><01:04:45.760><c> to</c><01:04:45.839><c> continue</c><01:04:46.720><c> the</c><01:04:46.880><c> back</c>

01:04:47.109 --> 01:04:47.119 align:start position:0%
so now we're going to continue the back
 

01:04:47.119 --> 01:04:49.270 align:start position:0%
so now we're going to continue the back
propagation

01:04:49.270 --> 01:04:49.280 align:start position:0%
propagation
 

01:04:49.280 --> 01:04:52.150 align:start position:0%
propagation
this<01:04:49.520><c> is</c><01:04:49.599><c> 0.5</c><01:04:50.160><c> and</c><01:04:50.240><c> this</c><01:04:50.400><c> is</c><01:04:50.480><c> a</c><01:04:50.640><c> plus</c><01:04:50.880><c> node</c>

01:04:52.150 --> 01:04:52.160 align:start position:0%
this is 0.5 and this is a plus node
 

01:04:52.160 --> 01:04:55.270 align:start position:0%
this is 0.5 and this is a plus node
so<01:04:52.559><c> how</c><01:04:52.799><c> is</c><01:04:52.960><c> backprop</c><01:04:53.839><c> going</c><01:04:54.160><c> to</c><01:04:54.640><c> what</c><01:04:54.799><c> is</c><01:04:54.880><c> that</c>

01:04:55.270 --> 01:04:55.280 align:start position:0%
so how is backprop going to what is that
 

01:04:55.280 --> 01:04:56.630 align:start position:0%
so how is backprop going to what is that
going<01:04:55.440><c> to</c><01:04:55.520><c> do</c><01:04:55.680><c> here</c>

01:04:56.630 --> 01:04:56.640 align:start position:0%
going to do here
 

01:04:56.640 --> 01:04:58.390 align:start position:0%
going to do here
and<01:04:56.799><c> if</c><01:04:56.880><c> you</c><01:04:56.960><c> remember</c><01:04:57.280><c> our</c><01:04:57.359><c> previous</c><01:04:57.760><c> example</c>

01:04:58.390 --> 01:04:58.400 align:start position:0%
and if you remember our previous example
 

01:04:58.400 --> 01:05:01.670 align:start position:0%
and if you remember our previous example
a<01:04:58.559><c> plus</c><01:04:58.880><c> is</c><01:04:59.039><c> just</c><01:04:59.760><c> a</c><01:04:59.839><c> distributor</c><01:05:00.559><c> of</c><01:05:00.720><c> gradient</c>

01:05:01.670 --> 01:05:01.680 align:start position:0%
a plus is just a distributor of gradient
 

01:05:01.680 --> 01:05:03.589 align:start position:0%
a plus is just a distributor of gradient
so<01:05:02.000><c> this</c><01:05:02.160><c> gradient</c><01:05:02.640><c> will</c><01:05:02.799><c> simply</c><01:05:03.119><c> flow</c><01:05:03.440><c> to</c>

01:05:03.589 --> 01:05:03.599 align:start position:0%
so this gradient will simply flow to
 

01:05:03.599 --> 01:05:05.750 align:start position:0%
so this gradient will simply flow to
both<01:05:03.839><c> of</c><01:05:04.000><c> these</c><01:05:04.319><c> equally</c><01:05:05.200><c> and</c><01:05:05.359><c> that's</c><01:05:05.599><c> because</c>

01:05:05.750 --> 01:05:05.760 align:start position:0%
both of these equally and that's because
 

01:05:05.760 --> 01:05:07.430 align:start position:0%
both of these equally and that's because
the<01:05:05.920><c> local</c><01:05:06.160><c> derivative</c><01:05:06.640><c> of</c><01:05:06.720><c> this</c><01:05:06.960><c> operation</c>

01:05:07.430 --> 01:05:07.440 align:start position:0%
the local derivative of this operation
 

01:05:07.440 --> 01:05:10.710 align:start position:0%
the local derivative of this operation
is<01:05:07.680><c> one</c><01:05:08.319><c> for</c><01:05:08.559><c> every</c><01:05:08.880><c> one</c><01:05:09.039><c> of</c><01:05:09.200><c> its</c><01:05:09.680><c> nodes</c><01:05:10.240><c> so</c><01:05:10.480><c> 1</c>

01:05:10.710 --> 01:05:10.720 align:start position:0%
is one for every one of its nodes so 1
 

01:05:10.720 --> 01:05:12.870 align:start position:0%
is one for every one of its nodes so 1
times<01:05:11.039><c> 0.5</c><01:05:11.520><c> is</c><01:05:11.599><c> 0.5</c>

01:05:12.870 --> 01:05:12.880 align:start position:0%
times 0.5 is 0.5
 

01:05:12.880 --> 01:05:14.950 align:start position:0%
times 0.5 is 0.5
so<01:05:13.119><c> therefore</c><01:05:13.760><c> we</c><01:05:13.920><c> know</c><01:05:14.160><c> that</c>

01:05:14.950 --> 01:05:14.960 align:start position:0%
so therefore we know that
 

01:05:14.960 --> 01:05:18.630 align:start position:0%
so therefore we know that
this<01:05:15.200><c> node</c><01:05:15.440><c> here</c><01:05:15.839><c> which</c><01:05:16.079><c> we</c><01:05:16.319><c> called</c><01:05:17.200><c> this</c>

01:05:18.630 --> 01:05:18.640 align:start position:0%
this node here which we called this
 

01:05:18.640 --> 01:05:21.029 align:start position:0%
this node here which we called this
its<01:05:18.799><c> grad</c><01:05:19.200><c> is</c><01:05:19.359><c> just</c><01:05:19.520><c> 0.5</c>

01:05:21.029 --> 01:05:21.039 align:start position:0%
its grad is just 0.5
 

01:05:21.039 --> 01:05:24.789 align:start position:0%
its grad is just 0.5
and<01:05:21.200><c> we</c><01:05:21.359><c> know</c><01:05:21.520><c> that</c><01:05:21.760><c> b</c><01:05:22.000><c> dot</c><01:05:22.319><c> grad</c><01:05:22.799><c> is</c><01:05:22.880><c> also</c><01:05:23.119><c> 0.5</c>

01:05:24.789 --> 01:05:24.799 align:start position:0%
and we know that b dot grad is also 0.5
 

01:05:24.799 --> 01:05:28.870 align:start position:0%
and we know that b dot grad is also 0.5
so<01:05:25.039><c> let's</c><01:05:25.280><c> set</c><01:05:25.520><c> those</c><01:05:25.760><c> and</c><01:05:25.920><c> let's</c><01:05:26.160><c> draw</c>

01:05:28.870 --> 01:05:28.880 align:start position:0%
 
 

01:05:28.880 --> 01:05:30.470 align:start position:0%
 
so<01:05:29.119><c> 0.5</c>

01:05:30.470 --> 01:05:30.480 align:start position:0%
so 0.5
 

01:05:30.480 --> 01:05:32.630 align:start position:0%
so 0.5
continuing<01:05:31.200><c> we</c><01:05:31.280><c> have</c><01:05:31.440><c> another</c><01:05:31.760><c> plus</c>

01:05:32.630 --> 01:05:32.640 align:start position:0%
continuing we have another plus
 

01:05:32.640 --> 01:05:34.950 align:start position:0%
continuing we have another plus
0.5<01:05:33.119><c> again</c><01:05:33.359><c> we'll</c><01:05:33.520><c> just</c><01:05:33.680><c> distribute</c><01:05:34.160><c> it</c><01:05:34.720><c> so</c>

01:05:34.950 --> 01:05:34.960 align:start position:0%
0.5 again we'll just distribute it so
 

01:05:34.960 --> 01:05:37.270 align:start position:0%
0.5 again we'll just distribute it so
0.5<01:05:35.359><c> will</c><01:05:35.599><c> flow</c><01:05:35.760><c> to</c><01:05:36.000><c> both</c><01:05:36.240><c> of</c><01:05:36.400><c> these</c>

01:05:37.270 --> 01:05:37.280 align:start position:0%
0.5 will flow to both of these
 

01:05:37.280 --> 01:05:39.190 align:start position:0%
0.5 will flow to both of these
so<01:05:37.440><c> we</c><01:05:37.599><c> can</c><01:05:37.839><c> set</c>

01:05:39.190 --> 01:05:39.200 align:start position:0%
so we can set
 

01:05:39.200 --> 01:05:43.789 align:start position:0%
so we can set
theirs

01:05:43.789 --> 01:05:43.799 align:start position:0%
 
 

01:05:43.799 --> 01:05:47.910 align:start position:0%
 
x2w2<01:05:45.119><c> as</c><01:05:45.280><c> well</c><01:05:45.599><c> that</c><01:05:45.839><c> grad</c><01:05:46.160><c> is</c><01:05:46.240><c> 0.5</c>

01:05:47.910 --> 01:05:47.920 align:start position:0%
x2w2 as well that grad is 0.5
 

01:05:47.920 --> 01:05:50.230 align:start position:0%
x2w2 as well that grad is 0.5
and<01:05:48.079><c> let's</c><01:05:48.319><c> redraw</c><01:05:49.039><c> pluses</c><01:05:49.440><c> are</c><01:05:49.520><c> my</c><01:05:49.680><c> favorite</c>

01:05:50.230 --> 01:05:50.240 align:start position:0%
and let's redraw pluses are my favorite
 

01:05:50.240 --> 01:05:51.910 align:start position:0%
and let's redraw pluses are my favorite
uh<01:05:50.640><c> operations</c><01:05:51.039><c> to</c><01:05:51.119><c> back</c><01:05:51.280><c> propagate</c><01:05:51.680><c> through</c>

01:05:51.910 --> 01:05:51.920 align:start position:0%
uh operations to back propagate through
 

01:05:51.920 --> 01:05:53.190 align:start position:0%
uh operations to back propagate through
because

01:05:53.190 --> 01:05:53.200 align:start position:0%
because
 

01:05:53.200 --> 01:05:55.029 align:start position:0%
because
it's<01:05:53.359><c> very</c><01:05:53.520><c> simple</c>

01:05:55.029 --> 01:05:55.039 align:start position:0%
it's very simple
 

01:05:55.039 --> 01:05:56.309 align:start position:0%
it's very simple
so<01:05:55.200><c> now</c><01:05:55.359><c> it's</c><01:05:55.520><c> flowing</c><01:05:55.839><c> into</c><01:05:56.079><c> these</c>

01:05:56.309 --> 01:05:56.319 align:start position:0%
so now it's flowing into these
 

01:05:56.319 --> 01:05:58.470 align:start position:0%
so now it's flowing into these
expressions<01:05:56.799><c> is</c><01:05:56.880><c> 0.5</c><01:05:57.760><c> and</c><01:05:57.839><c> so</c><01:05:58.000><c> really</c><01:05:58.240><c> again</c>

01:05:58.470 --> 01:05:58.480 align:start position:0%
expressions is 0.5 and so really again
 

01:05:58.480 --> 01:05:59.589 align:start position:0%
expressions is 0.5 and so really again
keep<01:05:58.640><c> in</c><01:05:58.720><c> mind</c><01:05:58.880><c> what</c><01:05:59.039><c> the</c><01:05:59.119><c> derivative</c><01:05:59.520><c> is</c>

01:05:59.589 --> 01:05:59.599 align:start position:0%
keep in mind what the derivative is
 

01:05:59.599 --> 01:06:01.670 align:start position:0%
keep in mind what the derivative is
telling<01:05:59.920><c> us</c><01:06:00.079><c> at</c><01:06:00.240><c> every</c><01:06:00.559><c> point</c><01:06:00.880><c> in</c><01:06:00.960><c> time</c><01:06:01.440><c> along</c>

01:06:01.670 --> 01:06:01.680 align:start position:0%
telling us at every point in time along
 

01:06:01.680 --> 01:06:04.470 align:start position:0%
telling us at every point in time along
here<01:06:02.319><c> this</c><01:06:02.559><c> is</c><01:06:02.720><c> saying</c><01:06:03.039><c> that</c>

01:06:04.470 --> 01:06:04.480 align:start position:0%
here this is saying that
 

01:06:04.480 --> 01:06:06.069 align:start position:0%
here this is saying that
if<01:06:04.640><c> we</c><01:06:04.720><c> want</c><01:06:04.880><c> the</c><01:06:05.039><c> output</c><01:06:05.280><c> of</c><01:06:05.359><c> this</c><01:06:05.520><c> neuron</c><01:06:05.839><c> to</c>

01:06:06.069 --> 01:06:06.079 align:start position:0%
if we want the output of this neuron to
 

01:06:06.079 --> 01:06:08.069 align:start position:0%
if we want the output of this neuron to
increase

01:06:08.069 --> 01:06:08.079 align:start position:0%
increase
 

01:06:08.079 --> 01:06:08.870 align:start position:0%
increase
then

01:06:08.870 --> 01:06:08.880 align:start position:0%
then
 

01:06:08.880 --> 01:06:10.870 align:start position:0%
then
the<01:06:09.039><c> influence</c><01:06:09.520><c> on</c><01:06:09.599><c> these</c><01:06:09.839><c> expressions</c><01:06:10.559><c> is</c>

01:06:10.870 --> 01:06:10.880 align:start position:0%
the influence on these expressions is
 

01:06:10.880 --> 01:06:13.349 align:start position:0%
the influence on these expressions is
positive<01:06:11.599><c> on</c><01:06:11.760><c> the</c><01:06:11.839><c> output</c><01:06:12.319><c> both</c><01:06:12.480><c> of</c><01:06:12.640><c> them</c><01:06:13.200><c> are</c>

01:06:13.349 --> 01:06:13.359 align:start position:0%
positive on the output both of them are
 

01:06:13.359 --> 01:06:16.950 align:start position:0%
positive on the output both of them are
positive

01:06:16.950 --> 01:06:16.960 align:start position:0%
 
 

01:06:16.960 --> 01:06:20.470 align:start position:0%
 
contribution<01:06:17.520><c> to</c><01:06:17.599><c> the</c><01:06:17.760><c> output</c>

01:06:20.470 --> 01:06:20.480 align:start position:0%
 
 

01:06:20.480 --> 01:06:23.190 align:start position:0%
 
so<01:06:20.720><c> now</c><01:06:21.440><c> back</c><01:06:21.680><c> propagating</c><01:06:22.160><c> to</c><01:06:22.319><c> x2</c><01:06:22.640><c> and</c><01:06:22.720><c> w2</c>

01:06:23.190 --> 01:06:23.200 align:start position:0%
so now back propagating to x2 and w2
 

01:06:23.200 --> 01:06:24.150 align:start position:0%
so now back propagating to x2 and w2
first

01:06:24.150 --> 01:06:24.160 align:start position:0%
first
 

01:06:24.160 --> 01:06:26.309 align:start position:0%
first
this<01:06:24.400><c> is</c><01:06:24.480><c> a</c><01:06:24.640><c> times</c><01:06:24.960><c> node</c><01:06:25.680><c> so</c><01:06:25.839><c> we</c><01:06:26.000><c> know</c><01:06:26.160><c> that</c><01:06:26.240><c> the</c>

01:06:26.309 --> 01:06:26.319 align:start position:0%
this is a times node so we know that the
 

01:06:26.319 --> 01:06:28.069 align:start position:0%
this is a times node so we know that the
local<01:06:26.640><c> derivative</c><01:06:27.119><c> is</c><01:06:27.280><c> you</c><01:06:27.359><c> know</c><01:06:27.520><c> the</c><01:06:27.760><c> other</c>

01:06:28.069 --> 01:06:28.079 align:start position:0%
local derivative is you know the other
 

01:06:28.079 --> 01:06:28.950 align:start position:0%
local derivative is you know the other
term

01:06:28.950 --> 01:06:28.960 align:start position:0%
term
 

01:06:28.960 --> 01:06:32.789 align:start position:0%
term
so<01:06:29.119><c> if</c><01:06:29.280><c> we</c><01:06:29.440><c> want</c><01:06:29.760><c> to</c><01:06:29.920><c> calculate</c><01:06:30.559><c> x2.grad</c>

01:06:32.789 --> 01:06:32.799 align:start position:0%
so if we want to calculate x2.grad
 

01:06:32.799 --> 01:06:33.589 align:start position:0%
so if we want to calculate x2.grad
then

01:06:33.589 --> 01:06:33.599 align:start position:0%
then
 

01:06:33.599 --> 01:06:34.950 align:start position:0%
then
can<01:06:33.760><c> you</c><01:06:33.839><c> think</c><01:06:34.079><c> through</c><01:06:34.319><c> what</c><01:06:34.559><c> it's</c><01:06:34.720><c> going</c><01:06:34.880><c> to</c>

01:06:34.950 --> 01:06:34.960 align:start position:0%
can you think through what it's going to
 

01:06:34.960 --> 01:06:40.870 align:start position:0%
can you think through what it's going to
be

01:06:40.870 --> 01:06:40.880 align:start position:0%
 
 

01:06:40.880 --> 01:06:42.789 align:start position:0%
 
so<01:06:41.119><c> x2.grad</c><01:06:41.920><c> will</c><01:06:42.079><c> be</c>

01:06:42.789 --> 01:06:42.799 align:start position:0%
so x2.grad will be
 

01:06:42.799 --> 01:06:44.829 align:start position:0%
so x2.grad will be
w2.data

01:06:44.829 --> 01:06:44.839 align:start position:0%
w2.data
 

01:06:44.839 --> 01:06:48.230 align:start position:0%
w2.data
times<01:06:46.319><c> this</c><01:06:46.720><c> x2w2</c>

01:06:48.230 --> 01:06:48.240 align:start position:0%
times this x2w2
 

01:06:48.240 --> 01:06:51.109 align:start position:0%
times this x2w2
by<01:06:48.400><c> grad</c><01:06:48.960><c> right</c>

01:06:51.109 --> 01:06:51.119 align:start position:0%
by grad right
 

01:06:51.119 --> 01:06:52.109 align:start position:0%
by grad right
and

01:06:52.109 --> 01:06:52.119 align:start position:0%
and
 

01:06:52.119 --> 01:06:55.670 align:start position:0%
and
w2.grad<01:06:53.359><c> will</c><01:06:53.520><c> be</c>

01:06:55.670 --> 01:06:55.680 align:start position:0%
w2.grad will be
 

01:06:55.680 --> 01:07:01.349 align:start position:0%
w2.grad will be
x2<01:06:56.079><c> that</c><01:06:56.240><c> data</c><01:06:57.039><c> times</c><01:06:57.599><c> x2w2.grad</c>

01:07:01.349 --> 01:07:01.359 align:start position:0%
 
 

01:07:01.359 --> 01:07:03.910 align:start position:0%
 
right<01:07:01.920><c> so</c><01:07:02.079><c> that's</c><01:07:02.559><c> the</c><01:07:02.880><c> local</c><01:07:03.280><c> piece</c><01:07:03.520><c> of</c><01:07:03.680><c> chain</c>

01:07:03.910 --> 01:07:03.920 align:start position:0%
right so that's the local piece of chain
 

01:07:03.920 --> 01:07:07.029 align:start position:0%
right so that's the local piece of chain
rule

01:07:07.029 --> 01:07:07.039 align:start position:0%
 
 

01:07:07.039 --> 01:07:09.750 align:start position:0%
 
let's<01:07:07.280><c> set</c><01:07:07.440><c> them</c><01:07:07.680><c> and</c><01:07:07.760><c> let's</c><01:07:07.920><c> redraw</c>

01:07:09.750 --> 01:07:09.760 align:start position:0%
let's set them and let's redraw
 

01:07:09.760 --> 01:07:11.270 align:start position:0%
let's set them and let's redraw
so<01:07:09.920><c> here</c><01:07:10.079><c> we</c><01:07:10.160><c> see</c><01:07:10.319><c> that</c><01:07:10.480><c> the</c><01:07:10.559><c> gradient</c><01:07:10.960><c> on</c><01:07:11.119><c> our</c>

01:07:11.270 --> 01:07:11.280 align:start position:0%
so here we see that the gradient on our
 

01:07:11.280 --> 01:07:15.670 align:start position:0%
so here we see that the gradient on our
weight<01:07:11.839><c> 2</c><01:07:12.240><c> is</c><01:07:12.400><c> 0</c><01:07:13.039><c> because</c><01:07:13.440><c> x2</c><01:07:14.079><c> data</c><01:07:14.480><c> was</c><01:07:14.640><c> 0</c>

01:07:15.670 --> 01:07:15.680 align:start position:0%
weight 2 is 0 because x2 data was 0
 

01:07:15.680 --> 01:07:18.630 align:start position:0%
weight 2 is 0 because x2 data was 0
right<01:07:16.319><c> but</c><01:07:16.720><c> x2</c><01:07:17.359><c> will</c><01:07:17.520><c> have</c><01:07:17.680><c> the</c><01:07:17.760><c> gradient</c><01:07:18.160><c> 0.5</c>

01:07:18.630 --> 01:07:18.640 align:start position:0%
right but x2 will have the gradient 0.5
 

01:07:18.640 --> 01:07:20.549 align:start position:0%
right but x2 will have the gradient 0.5
because<01:07:18.960><c> data</c><01:07:19.280><c> here</c><01:07:19.440><c> was</c><01:07:19.680><c> 1.</c>

01:07:20.549 --> 01:07:20.559 align:start position:0%
because data here was 1.
 

01:07:20.559 --> 01:07:22.549 align:start position:0%
because data here was 1.
and<01:07:20.640><c> so</c><01:07:20.799><c> what's</c><01:07:20.960><c> interesting</c><01:07:21.359><c> here</c><01:07:21.599><c> right</c><01:07:21.920><c> is</c>

01:07:22.549 --> 01:07:22.559 align:start position:0%
and so what's interesting here right is
 

01:07:22.559 --> 01:07:25.829 align:start position:0%
and so what's interesting here right is
because<01:07:22.880><c> the</c><01:07:23.119><c> input</c><01:07:23.599><c> x2</c><01:07:24.079><c> was</c><01:07:24.559><c> 0</c><01:07:25.200><c> then</c><01:07:25.440><c> because</c>

01:07:25.829 --> 01:07:25.839 align:start position:0%
because the input x2 was 0 then because
 

01:07:25.839 --> 01:07:28.470 align:start position:0%
because the input x2 was 0 then because
of<01:07:25.920><c> the</c><01:07:26.319><c> way</c><01:07:26.559><c> the</c><01:07:26.720><c> times</c><01:07:27.039><c> works</c>

01:07:28.470 --> 01:07:28.480 align:start position:0%
of the way the times works
 

01:07:28.480 --> 01:07:30.309 align:start position:0%
of the way the times works
of<01:07:28.559><c> course</c><01:07:28.720><c> this</c><01:07:28.880><c> gradient</c><01:07:29.200><c> will</c><01:07:29.359><c> be</c><01:07:29.520><c> zero</c><01:07:30.079><c> and</c>

01:07:30.309 --> 01:07:30.319 align:start position:0%
of course this gradient will be zero and
 

01:07:30.319 --> 01:07:33.190 align:start position:0%
of course this gradient will be zero and
think<01:07:30.559><c> about</c><01:07:30.799><c> intuitively</c><01:07:31.280><c> why</c><01:07:31.520><c> that</c><01:07:31.760><c> is</c>

01:07:33.190 --> 01:07:33.200 align:start position:0%
think about intuitively why that is
 

01:07:33.200 --> 01:07:35.270 align:start position:0%
think about intuitively why that is
derivative<01:07:33.760><c> always</c><01:07:34.000><c> tells</c><01:07:34.240><c> us</c><01:07:34.400><c> the</c><01:07:34.640><c> influence</c>

01:07:35.270 --> 01:07:35.280 align:start position:0%
derivative always tells us the influence
 

01:07:35.280 --> 01:07:36.069 align:start position:0%
derivative always tells us the influence
of

01:07:36.069 --> 01:07:36.079 align:start position:0%
of
 

01:07:36.079 --> 01:07:39.750 align:start position:0%
of
this<01:07:36.480><c> on</c><01:07:36.559><c> the</c><01:07:36.720><c> final</c><01:07:37.039><c> output</c><01:07:37.920><c> if</c><01:07:38.160><c> i</c><01:07:38.319><c> wiggle</c><01:07:38.640><c> w2</c>

01:07:39.750 --> 01:07:39.760 align:start position:0%
this on the final output if i wiggle w2
 

01:07:39.760 --> 01:07:41.510 align:start position:0%
this on the final output if i wiggle w2
how<01:07:40.000><c> is</c><01:07:40.079><c> the</c><01:07:40.240><c> output</c><01:07:40.559><c> changing</c>

01:07:41.510 --> 01:07:41.520 align:start position:0%
how is the output changing
 

01:07:41.520 --> 01:07:42.710 align:start position:0%
how is the output changing
it's<01:07:41.680><c> not</c><01:07:41.839><c> changing</c><01:07:42.319><c> because</c><01:07:42.559><c> we're</c>

01:07:42.710 --> 01:07:42.720 align:start position:0%
it's not changing because we're
 

01:07:42.720 --> 01:07:44.309 align:start position:0%
it's not changing because we're
multiplying<01:07:43.200><c> by</c><01:07:43.440><c> zero</c>

01:07:44.309 --> 01:07:44.319 align:start position:0%
multiplying by zero
 

01:07:44.319 --> 01:07:45.990 align:start position:0%
multiplying by zero
so<01:07:44.559><c> because</c><01:07:44.880><c> it's</c><01:07:45.039><c> not</c><01:07:45.200><c> changing</c><01:07:45.599><c> there's</c><01:07:45.839><c> no</c>

01:07:45.990 --> 01:07:46.000 align:start position:0%
so because it's not changing there's no
 

01:07:46.000 --> 01:07:47.589 align:start position:0%
so because it's not changing there's no
derivative<01:07:46.640><c> and</c><01:07:46.799><c> zero</c><01:07:47.119><c> is</c><01:07:47.200><c> the</c><01:07:47.280><c> correct</c>

01:07:47.589 --> 01:07:47.599 align:start position:0%
derivative and zero is the correct
 

01:07:47.599 --> 01:07:48.789 align:start position:0%
derivative and zero is the correct
answer

01:07:48.789 --> 01:07:48.799 align:start position:0%
answer
 

01:07:48.799 --> 01:07:49.750 align:start position:0%
answer
because<01:07:49.039><c> we're</c>

01:07:49.750 --> 01:07:49.760 align:start position:0%
because we're
 

01:07:49.760 --> 01:07:52.150 align:start position:0%
because we're
squashing<01:07:50.240><c> it</c><01:07:50.400><c> at</c><01:07:50.559><c> zero</c>

01:07:52.150 --> 01:07:52.160 align:start position:0%
squashing it at zero
 

01:07:52.160 --> 01:07:54.549 align:start position:0%
squashing it at zero
and<01:07:52.400><c> let's</c><01:07:52.559><c> do</c><01:07:52.720><c> it</c><01:07:52.880><c> here</c><01:07:53.359><c> point</c><01:07:53.680><c> five</c><01:07:54.319><c> should</c>

01:07:54.549 --> 01:07:54.559 align:start position:0%
and let's do it here point five should
 

01:07:54.559 --> 01:07:57.670 align:start position:0%
and let's do it here point five should
come<01:07:54.799><c> here</c><01:07:55.119><c> and</c><01:07:55.280><c> flow</c><01:07:55.599><c> through</c><01:07:55.920><c> this</c><01:07:56.559><c> times</c>

01:07:57.670 --> 01:07:57.680 align:start position:0%
come here and flow through this times
 

01:07:57.680 --> 01:08:01.910 align:start position:0%
come here and flow through this times
and<01:07:57.920><c> so</c><01:07:58.079><c> we'll</c><01:07:58.400><c> have</c><01:07:59.039><c> that</c><01:07:59.280><c> x1.grad</c><01:08:00.319><c> is</c>

01:08:01.910 --> 01:08:01.920 align:start position:0%
and so we'll have that x1.grad is
 

01:08:01.920 --> 01:08:03.670 align:start position:0%
and so we'll have that x1.grad is
can<01:08:02.079><c> you</c><01:08:02.240><c> think</c><01:08:02.400><c> through</c><01:08:02.640><c> a</c><01:08:02.640><c> little</c><01:08:02.799><c> bit</c><01:08:03.119><c> what</c>

01:08:03.670 --> 01:08:03.680 align:start position:0%
can you think through a little bit what
 

01:08:03.680 --> 01:08:04.549 align:start position:0%
can you think through a little bit what
what

01:08:04.549 --> 01:08:04.559 align:start position:0%
what
 

01:08:04.559 --> 01:08:07.270 align:start position:0%
what
this<01:08:04.720><c> should</c><01:08:04.880><c> be</c>

01:08:07.270 --> 01:08:07.280 align:start position:0%
 
 

01:08:07.280 --> 01:08:09.430 align:start position:0%
 
the<01:08:07.359><c> local</c><01:08:07.599><c> derivative</c><01:08:08.079><c> of</c><01:08:08.160><c> times</c>

01:08:09.430 --> 01:08:09.440 align:start position:0%
the local derivative of times
 

01:08:09.440 --> 01:08:12.549 align:start position:0%
the local derivative of times
with<01:08:09.599><c> respect</c><01:08:09.920><c> to</c><01:08:10.079><c> x1</c><01:08:10.720><c> is</c><01:08:10.880><c> going</c><01:08:11.039><c> to</c><01:08:11.119><c> be</c><01:08:11.200><c> w1</c>

01:08:12.549 --> 01:08:12.559 align:start position:0%
with respect to x1 is going to be w1
 

01:08:12.559 --> 01:08:15.349 align:start position:0%
with respect to x1 is going to be w1
so<01:08:12.799><c> w1</c><01:08:13.280><c> is</c><01:08:13.359><c> data</c><01:08:13.839><c> times</c>

01:08:15.349 --> 01:08:15.359 align:start position:0%
so w1 is data times
 

01:08:15.359 --> 01:08:18.789 align:start position:0%
so w1 is data times
x1<01:08:15.839><c> w1</c><01:08:16.960><c> dot</c><01:08:17.199><c> grad</c>

01:08:18.789 --> 01:08:18.799 align:start position:0%
x1 w1 dot grad
 

01:08:18.799 --> 01:08:23.590 align:start position:0%
x1 w1 dot grad
and<01:08:19.279><c> w1.grad</c><01:08:20.319><c> will</c><01:08:20.480><c> be</c><01:08:21.040><c> x1.data</c><01:08:22.080><c> times</c>

01:08:23.590 --> 01:08:23.600 align:start position:0%
and w1.grad will be x1.data times
 

01:08:23.600 --> 01:08:27.189 align:start position:0%
and w1.grad will be x1.data times
x1<01:08:23.920><c> w2</c><01:08:24.799><c> w1</c><01:08:25.279><c> with</c><01:08:25.520><c> graph</c>

01:08:27.189 --> 01:08:27.199 align:start position:0%
x1 w2 w1 with graph
 

01:08:27.199 --> 01:08:29.269 align:start position:0%
x1 w2 w1 with graph
let's<01:08:27.359><c> see</c><01:08:27.520><c> what</c><01:08:27.679><c> those</c><01:08:27.839><c> came</c><01:08:28.080><c> out</c><01:08:28.159><c> to</c><01:08:28.319><c> be</c>

01:08:29.269 --> 01:08:29.279 align:start position:0%
let's see what those came out to be
 

01:08:29.279 --> 01:08:31.669 align:start position:0%
let's see what those came out to be
so<01:08:29.440><c> this</c><01:08:29.600><c> is</c><01:08:29.759><c> 0.5</c><01:08:30.319><c> so</c><01:08:30.560><c> this</c><01:08:30.719><c> would</c><01:08:30.880><c> be</c><01:08:31.199><c> negative</c>

01:08:31.669 --> 01:08:31.679 align:start position:0%
so this is 0.5 so this would be negative
 

01:08:31.679 --> 01:08:34.630 align:start position:0%
so this is 0.5 so this would be negative
1.5<01:08:32.400><c> and</c><01:08:32.480><c> this</c><01:08:32.640><c> would</c><01:08:32.880><c> be</c><01:08:33.359><c> 1.</c>

01:08:34.630 --> 01:08:34.640 align:start position:0%
1.5 and this would be 1.
 

01:08:34.640 --> 01:08:36.470 align:start position:0%
1.5 and this would be 1.
and<01:08:35.199><c> we've</c><01:08:35.440><c> back</c><01:08:35.600><c> propagated</c><01:08:36.159><c> through</c><01:08:36.319><c> this</c>

01:08:36.470 --> 01:08:36.480 align:start position:0%
and we've back propagated through this
 

01:08:36.480 --> 01:08:38.149 align:start position:0%
and we've back propagated through this
expression<01:08:36.880><c> these</c><01:08:37.120><c> are</c><01:08:37.199><c> the</c><01:08:37.359><c> actual</c><01:08:37.839><c> final</c>

01:08:38.149 --> 01:08:38.159 align:start position:0%
expression these are the actual final
 

01:08:38.159 --> 01:08:40.870 align:start position:0%
expression these are the actual final
derivatives<01:08:39.040><c> so</c><01:08:39.199><c> if</c><01:08:39.279><c> we</c><01:08:39.440><c> want</c><01:08:39.759><c> this</c><01:08:40.319><c> neuron's</c>

01:08:40.870 --> 01:08:40.880 align:start position:0%
derivatives so if we want this neuron's
 

01:08:40.880 --> 01:08:43.829 align:start position:0%
derivatives so if we want this neuron's
output<01:08:41.759><c> to</c><01:08:42.000><c> increase</c>

01:08:43.829 --> 01:08:43.839 align:start position:0%
output to increase
 

01:08:43.839 --> 01:08:47.110 align:start position:0%
output to increase
we<01:08:44.000><c> know</c><01:08:44.159><c> that</c><01:08:44.239><c> what's</c><01:08:44.480><c> necessary</c><01:08:45.040><c> is</c><01:08:45.199><c> that</c>

01:08:47.110 --> 01:08:47.120 align:start position:0%
we know that what's necessary is that
 

01:08:47.120 --> 01:08:49.590 align:start position:0%
we know that what's necessary is that
w2<01:08:47.679><c> we</c><01:08:47.759><c> have</c><01:08:47.839><c> no</c><01:08:48.000><c> gradient</c><01:08:48.640><c> w2</c><01:08:49.120><c> doesn't</c>

01:08:49.590 --> 01:08:49.600 align:start position:0%
w2 we have no gradient w2 doesn't
 

01:08:49.600 --> 01:08:51.430 align:start position:0%
w2 we have no gradient w2 doesn't
actually<01:08:49.920><c> matter</c><01:08:50.159><c> to</c><01:08:50.239><c> this</c><01:08:50.400><c> neuron</c><01:08:50.719><c> right</c><01:08:50.880><c> now</c>

01:08:51.430 --> 01:08:51.440 align:start position:0%
actually matter to this neuron right now
 

01:08:51.440 --> 01:08:54.309 align:start position:0%
actually matter to this neuron right now
but<01:08:51.679><c> this</c><01:08:51.839><c> neuron</c><01:08:52.480><c> this</c><01:08:52.719><c> weight</c><01:08:53.359><c> should</c><01:08:53.759><c> uh</c><01:08:54.080><c> go</c>

01:08:54.309 --> 01:08:54.319 align:start position:0%
but this neuron this weight should uh go
 

01:08:54.319 --> 01:08:55.110 align:start position:0%
but this neuron this weight should uh go
up

01:08:55.110 --> 01:08:55.120 align:start position:0%
up
 

01:08:55.120 --> 01:08:57.269 align:start position:0%
up
so<01:08:55.279><c> if</c><01:08:55.359><c> this</c><01:08:55.759><c> weight</c><01:08:56.000><c> goes</c><01:08:56.400><c> up</c><01:08:56.880><c> then</c><01:08:57.040><c> this</c>

01:08:57.269 --> 01:08:57.279 align:start position:0%
so if this weight goes up then this
 

01:08:57.279 --> 01:08:59.669 align:start position:0%
so if this weight goes up then this
neuron's<01:08:57.679><c> output</c><01:08:58.000><c> would</c><01:08:58.239><c> have</c><01:08:58.319><c> gone</c><01:08:58.719><c> up</c><01:08:59.359><c> and</c>

01:08:59.669 --> 01:08:59.679 align:start position:0%
neuron's output would have gone up and
 

01:08:59.679 --> 01:09:01.189 align:start position:0%
neuron's output would have gone up and
proportionally<01:09:00.319><c> because</c><01:09:00.560><c> the</c><01:09:00.719><c> gradient</c><01:09:01.120><c> is</c>

01:09:01.189 --> 01:09:01.199 align:start position:0%
proportionally because the gradient is
 

01:09:01.199 --> 01:09:03.430 align:start position:0%
proportionally because the gradient is
one<01:09:01.839><c> okay</c><01:09:02.080><c> so</c><01:09:02.480><c> doing</c><01:09:02.719><c> the</c><01:09:02.799><c> back</c><01:09:02.960><c> propagation</c>

01:09:03.430 --> 01:09:03.440 align:start position:0%
one okay so doing the back propagation
 

01:09:03.440 --> 01:09:05.349 align:start position:0%
one okay so doing the back propagation
manually<01:09:03.920><c> is</c><01:09:04.080><c> obviously</c><01:09:04.480><c> ridiculous</c><01:09:05.040><c> so</c><01:09:05.199><c> we</c>

01:09:05.349 --> 01:09:05.359 align:start position:0%
manually is obviously ridiculous so we
 

01:09:05.359 --> 01:09:06.870 align:start position:0%
manually is obviously ridiculous so we
are<01:09:05.440><c> now</c><01:09:05.600><c> going</c><01:09:05.839><c> to</c><01:09:06.000><c> put</c><01:09:06.239><c> an</c><01:09:06.400><c> end</c><01:09:06.560><c> to</c><01:09:06.719><c> this</c>

01:09:06.870 --> 01:09:06.880 align:start position:0%
are now going to put an end to this
 

01:09:06.880 --> 01:09:08.870 align:start position:0%
are now going to put an end to this
suffering<01:09:07.679><c> and</c><01:09:07.839><c> we're</c><01:09:08.000><c> going</c><01:09:08.159><c> to</c><01:09:08.319><c> see</c><01:09:08.560><c> how</c><01:09:08.719><c> we</c>

01:09:08.870 --> 01:09:08.880 align:start position:0%
suffering and we're going to see how we
 

01:09:08.880 --> 01:09:11.030 align:start position:0%
suffering and we're going to see how we
can<01:09:09.199><c> implement</c><01:09:09.920><c> uh</c><01:09:10.159><c> the</c><01:09:10.239><c> backward</c><01:09:10.640><c> pass</c><01:09:10.880><c> a</c><01:09:10.960><c> bit</c>

01:09:11.030 --> 01:09:11.040 align:start position:0%
can implement uh the backward pass a bit
 

01:09:11.040 --> 01:09:12.709 align:start position:0%
can implement uh the backward pass a bit
more<01:09:11.199><c> automatically</c><01:09:11.920><c> we're</c><01:09:12.080><c> not</c><01:09:12.239><c> going</c><01:09:12.400><c> to</c><01:09:12.560><c> be</c>

01:09:12.709 --> 01:09:12.719 align:start position:0%
more automatically we're not going to be
 

01:09:12.719 --> 01:09:14.870 align:start position:0%
more automatically we're not going to be
doing<01:09:13.040><c> all</c><01:09:13.199><c> of</c><01:09:13.279><c> it</c><01:09:13.440><c> manually</c><01:09:13.920><c> out</c><01:09:14.080><c> here</c>

01:09:14.870 --> 01:09:14.880 align:start position:0%
doing all of it manually out here
 

01:09:14.880 --> 01:09:17.030 align:start position:0%
doing all of it manually out here
it's<01:09:15.120><c> now</c><01:09:15.279><c> pretty</c><01:09:15.520><c> obvious</c><01:09:15.839><c> to</c><01:09:16.000><c> us</c><01:09:16.159><c> by</c><01:09:16.400><c> example</c>

01:09:17.030 --> 01:09:17.040 align:start position:0%
it's now pretty obvious to us by example
 

01:09:17.040 --> 01:09:18.550 align:start position:0%
it's now pretty obvious to us by example
how<01:09:17.279><c> these</c><01:09:17.520><c> pluses</c><01:09:17.920><c> and</c><01:09:18.000><c> times</c><01:09:18.319><c> are</c><01:09:18.400><c> back</c>

01:09:18.550 --> 01:09:18.560 align:start position:0%
how these pluses and times are back
 

01:09:18.560 --> 01:09:20.950 align:start position:0%
how these pluses and times are back
property<01:09:18.960><c> ingredients</c><01:09:19.920><c> so</c><01:09:20.080><c> let's</c><01:09:20.480><c> go</c><01:09:20.719><c> up</c><01:09:20.799><c> to</c>

01:09:20.950 --> 01:09:20.960 align:start position:0%
property ingredients so let's go up to
 

01:09:20.960 --> 01:09:22.149 align:start position:0%
property ingredients so let's go up to
the<01:09:21.040><c> value</c>

01:09:22.149 --> 01:09:22.159 align:start position:0%
the value
 

01:09:22.159 --> 01:09:24.470 align:start position:0%
the value
object<01:09:22.560><c> and</c><01:09:22.640><c> we're</c><01:09:22.799><c> going</c><01:09:22.960><c> to</c><01:09:23.120><c> start</c>

01:09:24.470 --> 01:09:24.480 align:start position:0%
object and we're going to start
 

01:09:24.480 --> 01:09:27.110 align:start position:0%
object and we're going to start
codifying<01:09:25.359><c> what</c><01:09:25.520><c> we've</c><01:09:25.839><c> seen</c>

01:09:27.110 --> 01:09:27.120 align:start position:0%
codifying what we've seen
 

01:09:27.120 --> 01:09:29.510 align:start position:0%
codifying what we've seen
in<01:09:27.279><c> the</c><01:09:27.359><c> examples</c><01:09:27.759><c> below</c>

01:09:29.510 --> 01:09:29.520 align:start position:0%
in the examples below
 

01:09:29.520 --> 01:09:31.269 align:start position:0%
in the examples below
so<01:09:29.679><c> we're</c><01:09:29.839><c> going</c><01:09:30.000><c> to</c><01:09:30.239><c> do</c><01:09:30.400><c> this</c><01:09:30.560><c> by</c><01:09:30.799><c> storing</c><01:09:31.120><c> a</c>

01:09:31.269 --> 01:09:31.279 align:start position:0%
so we're going to do this by storing a
 

01:09:31.279 --> 01:09:34.789 align:start position:0%
so we're going to do this by storing a
special<01:09:31.759><c> cell</c><01:09:32.000><c> dot</c><01:09:32.319><c> backward</c>

01:09:34.789 --> 01:09:34.799 align:start position:0%
special cell dot backward
 

01:09:34.799 --> 01:09:37.110 align:start position:0%
special cell dot backward
and<01:09:35.520><c> underscore</c><01:09:35.920><c> backward</c><01:09:36.560><c> and</c><01:09:36.640><c> this</c><01:09:36.799><c> will</c><01:09:36.960><c> be</c>

01:09:37.110 --> 01:09:37.120 align:start position:0%
and underscore backward and this will be
 

01:09:37.120 --> 01:09:39.510 align:start position:0%
and underscore backward and this will be
a<01:09:37.199><c> function</c><01:09:38.080><c> which</c><01:09:38.719><c> is</c><01:09:38.880><c> going</c><01:09:39.040><c> to</c><01:09:39.199><c> do</c><01:09:39.359><c> that</c>

01:09:39.510 --> 01:09:39.520 align:start position:0%
a function which is going to do that
 

01:09:39.520 --> 01:09:41.430 align:start position:0%
a function which is going to do that
little<01:09:39.759><c> piece</c><01:09:40.000><c> of</c><01:09:40.080><c> chain</c><01:09:40.319><c> rule</c><01:09:40.799><c> at</c><01:09:41.040><c> each</c>

01:09:41.430 --> 01:09:41.440 align:start position:0%
little piece of chain rule at each
 

01:09:41.440 --> 01:09:43.189 align:start position:0%
little piece of chain rule at each
little<01:09:41.759><c> node</c><01:09:42.319><c> that</c><01:09:42.480><c> compute</c><01:09:42.880><c> that</c><01:09:43.040><c> took</c>

01:09:43.189 --> 01:09:43.199 align:start position:0%
little node that compute that took
 

01:09:43.199 --> 01:09:45.430 align:start position:0%
little node that compute that took
inputs<01:09:43.520><c> and</c><01:09:43.600><c> produced</c><01:09:44.000><c> output</c><01:09:44.880><c> uh</c><01:09:45.199><c> we're</c>

01:09:45.430 --> 01:09:45.440 align:start position:0%
inputs and produced output uh we're
 

01:09:45.440 --> 01:09:46.709 align:start position:0%
inputs and produced output uh we're
going<01:09:45.600><c> to</c><01:09:45.759><c> store</c>

01:09:46.709 --> 01:09:46.719 align:start position:0%
going to store
 

01:09:46.719 --> 01:09:49.030 align:start position:0%
going to store
how<01:09:47.120><c> we</c><01:09:47.279><c> are</c><01:09:47.359><c> going</c><01:09:47.520><c> to</c><01:09:47.920><c> chain</c><01:09:48.400><c> the</c><01:09:48.880><c> the</c>

01:09:49.030 --> 01:09:49.040 align:start position:0%
how we are going to chain the the
 

01:09:49.040 --> 01:09:51.030 align:start position:0%
how we are going to chain the the
outputs<01:09:49.440><c> gradient</c><01:09:50.239><c> into</c><01:09:50.560><c> the</c><01:09:50.719><c> inputs</c>

01:09:51.030 --> 01:09:51.040 align:start position:0%
outputs gradient into the inputs
 

01:09:51.040 --> 01:09:52.229 align:start position:0%
outputs gradient into the inputs
gradients

01:09:52.229 --> 01:09:52.239 align:start position:0%
gradients
 

01:09:52.239 --> 01:09:53.990 align:start position:0%
gradients
so<01:09:52.400><c> by</c><01:09:52.640><c> default</c>

01:09:53.990 --> 01:09:54.000 align:start position:0%
so by default
 

01:09:54.000 --> 01:09:55.590 align:start position:0%
so by default
this<01:09:54.159><c> will</c><01:09:54.320><c> be</c><01:09:54.480><c> a</c><01:09:54.560><c> function</c>

01:09:55.590 --> 01:09:55.600 align:start position:0%
this will be a function
 

01:09:55.600 --> 01:09:58.149 align:start position:0%
this will be a function
that<01:09:56.080><c> uh</c><01:09:56.480><c> doesn't</c><01:09:56.719><c> do</c><01:09:56.960><c> anything</c>

01:09:58.149 --> 01:09:58.159 align:start position:0%
that uh doesn't do anything
 

01:09:58.159 --> 01:09:59.910 align:start position:0%
that uh doesn't do anything
so<01:09:58.800><c> um</c>

01:09:59.910 --> 01:09:59.920 align:start position:0%
so um
 

01:09:59.920 --> 01:10:01.189 align:start position:0%
so um
and<01:10:00.080><c> you</c><01:10:00.159><c> can</c><01:10:00.239><c> also</c><01:10:00.480><c> see</c><01:10:00.640><c> that</c><01:10:00.880><c> here</c><01:10:01.040><c> in</c><01:10:01.120><c> the</c>

01:10:01.189 --> 01:10:01.199 align:start position:0%
and you can also see that here in the
 

01:10:01.199 --> 01:10:03.189 align:start position:0%
and you can also see that here in the
value<01:10:01.440><c> in</c><01:10:01.600><c> micrograb</c>

01:10:03.189 --> 01:10:03.199 align:start position:0%
value in micrograb
 

01:10:03.199 --> 01:10:03.990 align:start position:0%
value in micrograb
so

01:10:03.990 --> 01:10:04.000 align:start position:0%
so
 

01:10:04.000 --> 01:10:06.550 align:start position:0%
so
with<01:10:04.159><c> this</c><01:10:04.640><c> backward</c><01:10:05.040><c> function</c><01:10:05.840><c> by</c><01:10:06.080><c> default</c>

01:10:06.550 --> 01:10:06.560 align:start position:0%
with this backward function by default
 

01:10:06.560 --> 01:10:08.390 align:start position:0%
with this backward function by default
doesn't<01:10:06.880><c> do</c><01:10:07.040><c> anything</c>

01:10:08.390 --> 01:10:08.400 align:start position:0%
doesn't do anything
 

01:10:08.400 --> 01:10:10.149 align:start position:0%
doesn't do anything
this<01:10:08.560><c> is</c><01:10:08.640><c> an</c><01:10:08.800><c> empty</c><01:10:09.040><c> function</c>

01:10:10.149 --> 01:10:10.159 align:start position:0%
this is an empty function
 

01:10:10.159 --> 01:10:11.350 align:start position:0%
this is an empty function
and<01:10:10.239><c> that</c><01:10:10.400><c> would</c><01:10:10.560><c> be</c><01:10:10.719><c> sort</c><01:10:10.880><c> of</c><01:10:10.960><c> the</c><01:10:11.040><c> case</c><01:10:11.199><c> for</c>

01:10:11.350 --> 01:10:11.360 align:start position:0%
and that would be sort of the case for
 

01:10:11.360 --> 01:10:13.189 align:start position:0%
and that would be sort of the case for
example<01:10:11.600><c> for</c><01:10:11.760><c> a</c><01:10:11.840><c> leaf</c><01:10:12.080><c> node</c><01:10:12.560><c> for</c><01:10:12.719><c> leaf</c><01:10:12.960><c> node</c>

01:10:13.189 --> 01:10:13.199 align:start position:0%
example for a leaf node for leaf node
 

01:10:13.199 --> 01:10:15.750 align:start position:0%
example for a leaf node for leaf node
there's<01:10:13.360><c> nothing</c><01:10:13.679><c> to</c><01:10:13.760><c> do</c>

01:10:15.750 --> 01:10:15.760 align:start position:0%
there's nothing to do
 

01:10:15.760 --> 01:10:18.310 align:start position:0%
there's nothing to do
but<01:10:16.000><c> now</c><01:10:16.400><c> if</c><01:10:17.040><c> when</c><01:10:17.199><c> we're</c><01:10:17.360><c> creating</c><01:10:17.679><c> these</c><01:10:18.080><c> out</c>

01:10:18.310 --> 01:10:18.320 align:start position:0%
but now if when we're creating these out
 

01:10:18.320 --> 01:10:21.669 align:start position:0%
but now if when we're creating these out
values<01:10:19.120><c> these</c><01:10:19.440><c> out</c><01:10:19.679><c> values</c><01:10:20.239><c> are</c><01:10:20.560><c> an</c><01:10:20.719><c> addition</c>

01:10:21.669 --> 01:10:21.679 align:start position:0%
values these out values are an addition
 

01:10:21.679 --> 01:10:24.149 align:start position:0%
values these out values are an addition
of<01:10:22.159><c> self</c><01:10:22.640><c> and</c><01:10:22.800><c> other</c>

01:10:24.149 --> 01:10:24.159 align:start position:0%
of self and other
 

01:10:24.159 --> 01:10:27.110 align:start position:0%
of self and other
and<01:10:24.400><c> so</c><01:10:24.719><c> we</c><01:10:25.199><c> will</c><01:10:25.360><c> want</c><01:10:25.520><c> to</c><01:10:25.760><c> sell</c><01:10:26.320><c> set</c>

01:10:27.110 --> 01:10:27.120 align:start position:0%
and so we will want to sell set
 

01:10:27.120 --> 01:10:29.350 align:start position:0%
and so we will want to sell set
outs<01:10:27.520><c> backward</c><01:10:28.400><c> to</c><01:10:28.640><c> be</c>

01:10:29.350 --> 01:10:29.360 align:start position:0%
outs backward to be
 

01:10:29.360 --> 01:10:31.270 align:start position:0%
outs backward to be
the<01:10:29.520><c> function</c><01:10:30.239><c> that</c><01:10:30.560><c> propagates</c><01:10:31.120><c> the</c>

01:10:31.270 --> 01:10:31.280 align:start position:0%
the function that propagates the
 

01:10:31.280 --> 01:10:34.149 align:start position:0%
the function that propagates the
gradient

01:10:34.149 --> 01:10:34.159 align:start position:0%
 
 

01:10:34.159 --> 01:10:35.350 align:start position:0%
 
so

01:10:35.350 --> 01:10:35.360 align:start position:0%
so
 

01:10:35.360 --> 01:10:40.470 align:start position:0%
so
let's<01:10:35.920><c> define</c><01:10:36.560><c> what</c><01:10:36.719><c> should</c><01:10:36.880><c> happen</c>

01:10:40.470 --> 01:10:40.480 align:start position:0%
 
 

01:10:40.480 --> 01:10:42.149 align:start position:0%
 
and<01:10:40.560><c> we're</c><01:10:40.719><c> going</c><01:10:40.800><c> to</c><01:10:40.880><c> store</c><01:10:41.040><c> it</c><01:10:41.199><c> in</c><01:10:41.280><c> a</c><01:10:41.360><c> closure</c>

01:10:42.149 --> 01:10:42.159 align:start position:0%
and we're going to store it in a closure
 

01:10:42.159 --> 01:10:44.070 align:start position:0%
and we're going to store it in a closure
let's<01:10:42.400><c> define</c><01:10:42.719><c> what</c><01:10:42.880><c> should</c><01:10:43.040><c> happen</c><01:10:43.679><c> when</c><01:10:43.840><c> we</c>

01:10:44.070 --> 01:10:44.080 align:start position:0%
let's define what should happen when we
 

01:10:44.080 --> 01:10:45.030 align:start position:0%
let's define what should happen when we
call

01:10:45.030 --> 01:10:45.040 align:start position:0%
call
 

01:10:45.040 --> 01:10:47.750 align:start position:0%
call
outs<01:10:45.360><c> grad</c>

01:10:47.750 --> 01:10:47.760 align:start position:0%
 
 

01:10:47.760 --> 01:10:49.990 align:start position:0%
 
for<01:10:47.920><c> in</c><01:10:48.080><c> addition</c>

01:10:49.990 --> 01:10:50.000 align:start position:0%
for in addition
 

01:10:50.000 --> 01:10:51.990 align:start position:0%
for in addition
our<01:10:50.159><c> job</c><01:10:50.400><c> is</c><01:10:50.560><c> to</c><01:10:50.719><c> take</c>

01:10:51.990 --> 01:10:52.000 align:start position:0%
our job is to take
 

01:10:52.000 --> 01:10:55.030 align:start position:0%
our job is to take
outs<01:10:52.320><c> grad</c><01:10:52.880><c> and</c><01:10:53.040><c> propagate</c><01:10:53.520><c> it</c><01:10:53.840><c> into</c><01:10:54.640><c> self's</c>

01:10:55.030 --> 01:10:55.040 align:start position:0%
outs grad and propagate it into self's
 

01:10:55.040 --> 01:10:57.669 align:start position:0%
outs grad and propagate it into self's
grad<01:10:55.520><c> and</c><01:10:55.679><c> other</c><01:10:56.239><c> grad</c><01:10:56.960><c> so</c><01:10:57.120><c> basically</c><01:10:57.440><c> we</c><01:10:57.520><c> want</c>

01:10:57.669 --> 01:10:57.679 align:start position:0%
grad and other grad so basically we want
 

01:10:57.679 --> 01:11:00.550 align:start position:0%
grad and other grad so basically we want
to<01:10:57.840><c> sell</c><01:10:58.080><c> self.grad</c><01:10:58.719><c> to</c><01:10:58.880><c> something</c>

01:11:00.550 --> 01:11:00.560 align:start position:0%
to sell self.grad to something
 

01:11:00.560 --> 01:11:02.950 align:start position:0%
to sell self.grad to something
and<01:11:00.719><c> we</c><01:11:00.880><c> want</c><01:11:01.120><c> to</c><01:11:01.280><c> set</c><01:11:01.600><c> others.grad</c><01:11:02.800><c> to</c>

01:11:02.950 --> 01:11:02.960 align:start position:0%
and we want to set others.grad to
 

01:11:02.960 --> 01:11:04.390 align:start position:0%
and we want to set others.grad to
something

01:11:04.390 --> 01:11:04.400 align:start position:0%
something
 

01:11:04.400 --> 01:11:05.750 align:start position:0%
something
okay

01:11:05.750 --> 01:11:05.760 align:start position:0%
okay
 

01:11:05.760 --> 01:11:08.310 align:start position:0%
okay
and<01:11:06.400><c> the</c><01:11:06.560><c> way</c><01:11:06.719><c> we</c><01:11:06.880><c> saw</c><01:11:07.199><c> below</c><01:11:07.600><c> how</c><01:11:07.920><c> chain</c><01:11:08.080><c> rule</c>

01:11:08.310 --> 01:11:08.320 align:start position:0%
and the way we saw below how chain rule
 

01:11:08.320 --> 01:11:09.990 align:start position:0%
and the way we saw below how chain rule
works<01:11:08.960><c> we</c><01:11:09.120><c> want</c><01:11:09.280><c> to</c><01:11:09.360><c> take</c><01:11:09.520><c> the</c><01:11:09.679><c> local</c>

01:11:09.990 --> 01:11:10.000 align:start position:0%
works we want to take the local
 

01:11:10.000 --> 01:11:11.669 align:start position:0%
works we want to take the local
derivative<01:11:10.719><c> times</c>

01:11:11.669 --> 01:11:11.679 align:start position:0%
derivative times
 

01:11:11.679 --> 01:11:12.709 align:start position:0%
derivative times
the

01:11:12.709 --> 01:11:12.719 align:start position:0%
the
 

01:11:12.719 --> 01:11:14.390 align:start position:0%
the
sort<01:11:12.880><c> of</c><01:11:13.120><c> global</c><01:11:13.440><c> derivative</c><01:11:13.920><c> i</c><01:11:14.000><c> should</c><01:11:14.159><c> call</c>

01:11:14.390 --> 01:11:14.400 align:start position:0%
sort of global derivative i should call
 

01:11:14.400 --> 01:11:16.149 align:start position:0%
sort of global derivative i should call
it<01:11:14.640><c> which</c><01:11:14.880><c> is</c><01:11:15.040><c> the</c><01:11:15.199><c> derivative</c><01:11:15.679><c> of</c><01:11:15.760><c> the</c><01:11:15.920><c> final</c>

01:11:16.149 --> 01:11:16.159 align:start position:0%
it which is the derivative of the final
 

01:11:16.159 --> 01:11:18.790 align:start position:0%
it which is the derivative of the final
output<01:11:16.480><c> of</c><01:11:16.560><c> the</c><01:11:16.719><c> expression</c><01:11:17.600><c> with</c><01:11:17.760><c> respect</c><01:11:18.159><c> to</c>

01:11:18.790 --> 01:11:18.800 align:start position:0%
output of the expression with respect to
 

01:11:18.800 --> 01:11:21.030 align:start position:0%
output of the expression with respect to
out's<01:11:19.360><c> data</c>

01:11:21.030 --> 01:11:21.040 align:start position:0%
out's data
 

01:11:21.040 --> 01:11:22.950 align:start position:0%
out's data
with<01:11:21.280><c> respect</c><01:11:21.520><c> to</c><01:11:21.760><c> out</c>

01:11:22.950 --> 01:11:22.960 align:start position:0%
with respect to out
 

01:11:22.960 --> 01:11:24.709 align:start position:0%
with respect to out
so

01:11:24.709 --> 01:11:24.719 align:start position:0%
so
 

01:11:24.719 --> 01:11:27.270 align:start position:0%
so
the<01:11:24.880><c> local</c><01:11:25.120><c> derivative</c><01:11:25.679><c> of</c><01:11:26.159><c> self</c><01:11:26.960><c> in</c><01:11:27.120><c> an</c>

01:11:27.270 --> 01:11:27.280 align:start position:0%
the local derivative of self in an
 

01:11:27.280 --> 01:11:29.590 align:start position:0%
the local derivative of self in an
addition<01:11:27.840><c> is</c><01:11:28.000><c> 1.0</c>

01:11:29.590 --> 01:11:29.600 align:start position:0%
addition is 1.0
 

01:11:29.600 --> 01:11:31.750 align:start position:0%
addition is 1.0
so<01:11:29.760><c> it's</c><01:11:29.840><c> just</c><01:11:30.000><c> 1.0</c><01:11:30.719><c> times</c>

01:11:31.750 --> 01:11:31.760 align:start position:0%
so it's just 1.0 times
 

01:11:31.760 --> 01:11:34.390 align:start position:0%
so it's just 1.0 times
outs<01:11:32.640><c> grad</c>

01:11:34.390 --> 01:11:34.400 align:start position:0%
outs grad
 

01:11:34.400 --> 01:11:35.910 align:start position:0%
outs grad
that's<01:11:34.640><c> the</c><01:11:34.719><c> chain</c><01:11:34.880><c> rule</c>

01:11:35.910 --> 01:11:35.920 align:start position:0%
that's the chain rule
 

01:11:35.920 --> 01:11:38.070 align:start position:0%
that's the chain rule
and<01:11:36.159><c> others.grad</c><01:11:36.960><c> will</c><01:11:37.040><c> be</c><01:11:37.199><c> 1.0</c><01:11:37.760><c> times</c>

01:11:38.070 --> 01:11:38.080 align:start position:0%
and others.grad will be 1.0 times
 

01:11:38.080 --> 01:11:39.189 align:start position:0%
and others.grad will be 1.0 times
outgrad

01:11:39.189 --> 01:11:39.199 align:start position:0%
outgrad
 

01:11:39.199 --> 01:11:40.470 align:start position:0%
outgrad
and<01:11:39.280><c> what</c><01:11:39.440><c> you</c><01:11:39.920><c> basically</c><01:11:40.159><c> what</c><01:11:40.320><c> you're</c>

01:11:40.470 --> 01:11:40.480 align:start position:0%
and what you basically what you're
 

01:11:40.480 --> 01:11:42.709 align:start position:0%
and what you basically what you're
seeing<01:11:40.719><c> here</c><01:11:40.960><c> is</c><01:11:41.120><c> that</c><01:11:41.360><c> outscrad</c>

01:11:42.709 --> 01:11:42.719 align:start position:0%
seeing here is that outscrad
 

01:11:42.719 --> 01:11:45.510 align:start position:0%
seeing here is that outscrad
will<01:11:42.960><c> simply</c><01:11:43.280><c> be</c><01:11:43.840><c> copied</c><01:11:44.480><c> onto</c><01:11:44.880><c> selfs</c><01:11:45.199><c> grad</c>

01:11:45.510 --> 01:11:45.520 align:start position:0%
will simply be copied onto selfs grad
 

01:11:45.520 --> 01:11:48.149 align:start position:0%
will simply be copied onto selfs grad
and<01:11:45.679><c> others</c><01:11:46.000><c> grad</c><01:11:46.640><c> as</c><01:11:46.800><c> we</c><01:11:47.040><c> saw</c><01:11:47.440><c> happens</c><01:11:47.760><c> for</c><01:11:48.000><c> an</c>

01:11:48.149 --> 01:11:48.159 align:start position:0%
and others grad as we saw happens for an
 

01:11:48.159 --> 01:11:49.910 align:start position:0%
and others grad as we saw happens for an
addition<01:11:48.480><c> operation</c>

01:11:49.910 --> 01:11:49.920 align:start position:0%
addition operation
 

01:11:49.920 --> 01:11:51.510 align:start position:0%
addition operation
so<01:11:50.400><c> we're</c><01:11:50.640><c> going</c><01:11:50.800><c> to</c><01:11:50.880><c> later</c><01:11:51.120><c> call</c><01:11:51.360><c> this</c>

01:11:51.510 --> 01:11:51.520 align:start position:0%
so we're going to later call this
 

01:11:51.520 --> 01:11:53.430 align:start position:0%
so we're going to later call this
function<01:11:52.000><c> to</c><01:11:52.159><c> propagate</c><01:11:52.560><c> the</c><01:11:52.719><c> gradient</c>

01:11:53.430 --> 01:11:53.440 align:start position:0%
function to propagate the gradient
 

01:11:53.440 --> 01:11:55.750 align:start position:0%
function to propagate the gradient
having<01:11:53.760><c> done</c><01:11:54.000><c> an</c><01:11:54.159><c> addition</c>

01:11:55.750 --> 01:11:55.760 align:start position:0%
having done an addition
 

01:11:55.760 --> 01:11:57.750 align:start position:0%
having done an addition
let's<01:11:56.000><c> now</c><01:11:56.159><c> do</c><01:11:56.320><c> multiplication</c><01:11:57.360><c> we're</c><01:11:57.600><c> going</c>

01:11:57.750 --> 01:11:57.760 align:start position:0%
let's now do multiplication we're going
 

01:11:57.760 --> 01:12:02.310 align:start position:0%
let's now do multiplication we're going
to<01:11:57.920><c> also</c><01:11:58.080><c> define</c><01:11:58.800><c> that</c><01:11:58.880><c> backward</c>

01:12:02.310 --> 01:12:02.320 align:start position:0%
 
 

01:12:02.320 --> 01:12:04.630 align:start position:0%
 
and<01:12:02.560><c> we're</c><01:12:02.719><c> going</c><01:12:02.880><c> to</c><01:12:03.040><c> set</c><01:12:03.600><c> its</c><01:12:03.840><c> backward</c><01:12:04.480><c> to</c>

01:12:04.630 --> 01:12:04.640 align:start position:0%
and we're going to set its backward to
 

01:12:04.640 --> 01:12:07.669 align:start position:0%
and we're going to set its backward to
be<01:12:04.880><c> backward</c>

01:12:07.669 --> 01:12:07.679 align:start position:0%
 
 

01:12:07.679 --> 01:12:11.110 align:start position:0%
 
and<01:12:08.159><c> we</c><01:12:08.320><c> want</c><01:12:08.480><c> to</c><01:12:08.719><c> chain</c><01:12:09.199><c> outgrad</c><01:12:10.080><c> into</c>

01:12:11.110 --> 01:12:11.120 align:start position:0%
and we want to chain outgrad into
 

01:12:11.120 --> 01:12:14.310 align:start position:0%
and we want to chain outgrad into
self.grad

01:12:14.310 --> 01:12:14.320 align:start position:0%
 
 

01:12:14.320 --> 01:12:17.110 align:start position:0%
 
and<01:12:14.719><c> others.grad</c>

01:12:17.110 --> 01:12:17.120 align:start position:0%
and others.grad
 

01:12:17.120 --> 01:12:18.470 align:start position:0%
and others.grad
and<01:12:17.280><c> this</c><01:12:17.440><c> will</c><01:12:17.600><c> be</c><01:12:17.679><c> a</c><01:12:17.760><c> little</c><01:12:18.000><c> piece</c><01:12:18.159><c> of</c><01:12:18.239><c> chain</c>

01:12:18.470 --> 01:12:18.480 align:start position:0%
and this will be a little piece of chain
 

01:12:18.480 --> 01:12:20.310 align:start position:0%
and this will be a little piece of chain
rule<01:12:18.719><c> for</c><01:12:18.880><c> multiplication</c>

01:12:20.310 --> 01:12:20.320 align:start position:0%
rule for multiplication
 

01:12:20.320 --> 01:12:21.669 align:start position:0%
rule for multiplication
so<01:12:20.480><c> we'll</c><01:12:20.719><c> have</c>

01:12:21.669 --> 01:12:21.679 align:start position:0%
so we'll have
 

01:12:21.679 --> 01:12:23.270 align:start position:0%
so we'll have
so<01:12:21.840><c> what</c><01:12:21.920><c> should</c><01:12:22.080><c> this</c><01:12:22.239><c> be</c>

01:12:23.270 --> 01:12:23.280 align:start position:0%
so what should this be
 

01:12:23.280 --> 01:12:28.630 align:start position:0%
so what should this be
can<01:12:23.440><c> you</c><01:12:23.520><c> think</c><01:12:23.760><c> through</c>

01:12:28.630 --> 01:12:28.640 align:start position:0%
 
 

01:12:28.640 --> 01:12:30.790 align:start position:0%
 
so<01:12:28.960><c> what</c><01:12:29.199><c> is</c><01:12:29.280><c> the</c><01:12:29.360><c> local</c><01:12:29.679><c> derivative</c>

01:12:30.790 --> 01:12:30.800 align:start position:0%
so what is the local derivative
 

01:12:30.800 --> 01:12:32.310 align:start position:0%
so what is the local derivative
here<01:12:31.120><c> the</c><01:12:31.280><c> local</c><01:12:31.600><c> derivative</c><01:12:32.080><c> was</c>

01:12:32.310 --> 01:12:32.320 align:start position:0%
here the local derivative was
 

01:12:32.320 --> 01:12:35.430 align:start position:0%
here the local derivative was
others.data

01:12:35.430 --> 01:12:35.440 align:start position:0%
 
 

01:12:35.440 --> 01:12:36.550 align:start position:0%
 
and<01:12:35.600><c> then</c>

01:12:36.550 --> 01:12:36.560 align:start position:0%
and then
 

01:12:36.560 --> 01:12:39.590 align:start position:0%
and then
oops<01:12:36.880><c> others.data</c><01:12:38.159><c> and</c><01:12:38.320><c> the</c><01:12:38.560><c> times</c><01:12:39.199><c> of</c><01:12:39.440><c> that</c>

01:12:39.590 --> 01:12:39.600 align:start position:0%
oops others.data and the times of that
 

01:12:39.600 --> 01:12:42.550 align:start position:0%
oops others.data and the times of that
grad<01:12:40.320><c> that's</c><01:12:40.640><c> channel</c>

01:12:42.550 --> 01:12:42.560 align:start position:0%
grad that's channel
 

01:12:42.560 --> 01:12:44.790 align:start position:0%
grad that's channel
and<01:12:42.800><c> here</c><01:12:43.040><c> we</c><01:12:43.120><c> have</c><01:12:43.280><c> self.data</c><01:12:44.080><c> times</c><01:12:44.480><c> of</c><01:12:44.640><c> that</c>

01:12:44.790 --> 01:12:44.800 align:start position:0%
and here we have self.data times of that
 

01:12:44.800 --> 01:12:45.590 align:start position:0%
and here we have self.data times of that
grad

01:12:45.590 --> 01:12:45.600 align:start position:0%
grad
 

01:12:45.600 --> 01:12:49.590 align:start position:0%
grad
that's<01:12:45.840><c> what</c><01:12:45.920><c> we've</c><01:12:46.080><c> been</c><01:12:46.159><c> doing</c>

01:12:49.590 --> 01:12:49.600 align:start position:0%
 
 

01:12:49.600 --> 01:12:51.669 align:start position:0%
 
and<01:12:49.679><c> finally</c><01:12:50.080><c> here</c><01:12:50.239><c> for</c><01:12:50.400><c> 10</c><01:12:50.640><c> h</c>

01:12:51.669 --> 01:12:51.679 align:start position:0%
and finally here for 10 h
 

01:12:51.679 --> 01:12:54.790 align:start position:0%
and finally here for 10 h
left<01:12:51.920><c> backward</c>

01:12:54.790 --> 01:12:54.800 align:start position:0%
 
 

01:12:54.800 --> 01:12:57.350 align:start position:0%
 
and<01:12:54.960><c> then</c><01:12:55.120><c> we</c><01:12:55.280><c> want</c><01:12:55.440><c> to</c><01:12:55.600><c> set</c><01:12:56.320><c> out</c><01:12:56.640><c> backwards</c><01:12:57.199><c> to</c>

01:12:57.350 --> 01:12:57.360 align:start position:0%
and then we want to set out backwards to
 

01:12:57.360 --> 01:13:00.470 align:start position:0%
and then we want to set out backwards to
be<01:12:57.600><c> just</c><01:12:57.760><c> backward</c>

01:13:00.470 --> 01:13:00.480 align:start position:0%
 
 

01:13:00.480 --> 01:13:02.550 align:start position:0%
 
and<01:13:00.719><c> here</c><01:13:00.960><c> we</c><01:13:01.360><c> need</c><01:13:01.679><c> to</c>

01:13:02.550 --> 01:13:02.560 align:start position:0%
and here we need to
 

01:13:02.560 --> 01:13:04.950 align:start position:0%
and here we need to
back<01:13:02.800><c> propagate</c><01:13:03.520><c> we</c><01:13:03.679><c> have</c><01:13:03.920><c> out</c><01:13:04.080><c> that</c><01:13:04.320><c> grad</c><01:13:04.800><c> and</c>

01:13:04.950 --> 01:13:04.960 align:start position:0%
back propagate we have out that grad and
 

01:13:04.960 --> 01:13:09.669 align:start position:0%
back propagate we have out that grad and
we<01:13:05.120><c> want</c><01:13:05.360><c> to</c><01:13:05.520><c> chain</c><01:13:05.840><c> it</c><01:13:06.080><c> into</c><01:13:06.719><c> self.grad</c>

01:13:09.669 --> 01:13:09.679 align:start position:0%
 
 

01:13:09.679 --> 01:13:11.750 align:start position:0%
 
and<01:13:09.840><c> salt.grad</c><01:13:10.560><c> will</c><01:13:10.719><c> be</c>

01:13:11.750 --> 01:13:11.760 align:start position:0%
and salt.grad will be
 

01:13:11.760 --> 01:13:13.750 align:start position:0%
and salt.grad will be
the<01:13:11.920><c> local</c><01:13:12.239><c> derivative</c><01:13:12.960><c> of</c><01:13:13.120><c> this</c><01:13:13.280><c> operation</c>

01:13:13.750 --> 01:13:13.760 align:start position:0%
the local derivative of this operation
 

01:13:13.760 --> 01:13:16.149 align:start position:0%
the local derivative of this operation
that<01:13:13.840><c> we've</c><01:13:14.000><c> done</c><01:13:14.159><c> here</c><01:13:14.480><c> which</c><01:13:14.719><c> is</c><01:13:14.880><c> 10h</c>

01:13:16.149 --> 01:13:16.159 align:start position:0%
that we've done here which is 10h
 

01:13:16.159 --> 01:13:17.510 align:start position:0%
that we've done here which is 10h
and<01:13:16.239><c> so</c><01:13:16.400><c> we</c><01:13:16.560><c> saw</c><01:13:16.719><c> that</c><01:13:16.880><c> the</c><01:13:17.040><c> local</c><01:13:17.360><c> the</c>

01:13:17.510 --> 01:13:17.520 align:start position:0%
and so we saw that the local the
 

01:13:17.520 --> 01:13:20.550 align:start position:0%
and so we saw that the local the
gradient<01:13:18.000><c> is</c><01:13:18.159><c> 1</c><01:13:18.400><c> minus</c><01:13:19.280><c> the</c><01:13:19.440><c> tan</c><01:13:19.679><c> h</c><01:13:19.840><c> of</c><01:13:20.000><c> x</c>

01:13:20.550 --> 01:13:20.560 align:start position:0%
gradient is 1 minus the tan h of x
 

01:13:20.560 --> 01:13:23.590 align:start position:0%
gradient is 1 minus the tan h of x
squared<01:13:21.199><c> which</c><01:13:21.440><c> here</c><01:13:21.679><c> is</c><01:13:21.920><c> t</c>

01:13:23.590 --> 01:13:23.600 align:start position:0%
squared which here is t
 

01:13:23.600 --> 01:13:25.430 align:start position:0%
squared which here is t
that's<01:13:23.840><c> the</c><01:13:23.920><c> local</c><01:13:24.239><c> derivative</c><01:13:25.199><c> because</c>

01:13:25.430 --> 01:13:25.440 align:start position:0%
that's the local derivative because
 

01:13:25.440 --> 01:13:27.669 align:start position:0%
that's the local derivative because
that's<01:13:25.760><c> t</c><01:13:25.920><c> is</c><01:13:26.000><c> the</c><01:13:26.159><c> output</c><01:13:26.400><c> of</c><01:13:26.480><c> this</c><01:13:26.640><c> 10</c><01:13:26.880><c> h</c><01:13:27.360><c> so</c><01:13:27.520><c> 1</c>

01:13:27.669 --> 01:13:27.679 align:start position:0%
that's t is the output of this 10 h so 1
 

01:13:27.679 --> 01:13:29.990 align:start position:0%
that's t is the output of this 10 h so 1
minus<01:13:28.000><c> t</c><01:13:28.159><c> squared</c><01:13:28.480><c> is</c><01:13:28.640><c> the</c><01:13:28.719><c> local</c><01:13:29.040><c> derivative</c>

01:13:29.990 --> 01:13:30.000 align:start position:0%
minus t squared is the local derivative
 

01:13:30.000 --> 01:13:32.470 align:start position:0%
minus t squared is the local derivative
and<01:13:30.080><c> then</c><01:13:30.640><c> gradient</c><01:13:31.600><c> um</c>

01:13:32.470 --> 01:13:32.480 align:start position:0%
and then gradient um
 

01:13:32.480 --> 01:13:33.830 align:start position:0%
and then gradient um
has<01:13:32.640><c> to</c><01:13:32.719><c> be</c><01:13:32.800><c> multiplied</c><01:13:33.440><c> because</c><01:13:33.600><c> of</c><01:13:33.760><c> the</c>

01:13:33.830 --> 01:13:33.840 align:start position:0%
has to be multiplied because of the
 

01:13:33.840 --> 01:13:34.870 align:start position:0%
has to be multiplied because of the
chain<01:13:34.080><c> rule</c>

01:13:34.870 --> 01:13:34.880 align:start position:0%
chain rule
 

01:13:34.880 --> 01:13:36.630 align:start position:0%
chain rule
so<01:13:35.040><c> outgrad</c><01:13:35.600><c> is</c><01:13:35.760><c> chained</c><01:13:36.080><c> through</c><01:13:36.239><c> the</c><01:13:36.320><c> local</c>

01:13:36.630 --> 01:13:36.640 align:start position:0%
so outgrad is chained through the local
 

01:13:36.640 --> 01:13:39.350 align:start position:0%
so outgrad is chained through the local
gradient<01:13:37.040><c> into</c><01:13:37.280><c> salt.grad</c>

01:13:39.350 --> 01:13:39.360 align:start position:0%
gradient into salt.grad
 

01:13:39.360 --> 01:13:41.830 align:start position:0%
gradient into salt.grad
and<01:13:39.600><c> that</c><01:13:39.840><c> should</c><01:13:40.000><c> be</c><01:13:40.239><c> basically</c><01:13:40.800><c> it</c><01:13:41.199><c> so</c><01:13:41.600><c> we're</c>

01:13:41.830 --> 01:13:41.840 align:start position:0%
and that should be basically it so we're
 

01:13:41.840 --> 01:13:44.870 align:start position:0%
and that should be basically it so we're
going<01:13:42.080><c> to</c><01:13:42.719><c> redefine</c><01:13:43.280><c> our</c><01:13:43.360><c> value</c><01:13:43.679><c> node</c>

01:13:44.870 --> 01:13:44.880 align:start position:0%
going to redefine our value node
 

01:13:44.880 --> 01:13:46.229 align:start position:0%
going to redefine our value node
we're<01:13:45.040><c> going</c><01:13:45.199><c> to</c><01:13:45.360><c> swing</c><01:13:45.600><c> all</c><01:13:45.760><c> the</c><01:13:45.840><c> way</c><01:13:46.000><c> down</c>

01:13:46.229 --> 01:13:46.239 align:start position:0%
we're going to swing all the way down
 

01:13:46.239 --> 01:13:48.070 align:start position:0%
we're going to swing all the way down
here

01:13:48.070 --> 01:13:48.080 align:start position:0%
here
 

01:13:48.080 --> 01:13:49.910 align:start position:0%
here
and<01:13:48.239><c> we're</c><01:13:48.400><c> going</c><01:13:48.640><c> to</c>

01:13:49.910 --> 01:13:49.920 align:start position:0%
and we're going to
 

01:13:49.920 --> 01:13:51.189 align:start position:0%
and we're going to
redefine

01:13:51.189 --> 01:13:51.199 align:start position:0%
redefine
 

01:13:51.199 --> 01:13:52.550 align:start position:0%
redefine
our<01:13:51.360><c> expression</c>

01:13:52.550 --> 01:13:52.560 align:start position:0%
our expression
 

01:13:52.560 --> 01:13:55.270 align:start position:0%
our expression
make<01:13:52.800><c> sure</c><01:13:52.960><c> that</c><01:13:53.199><c> all</c><01:13:53.280><c> the</c><01:13:53.440><c> grads</c><01:13:53.760><c> are</c><01:13:53.920><c> zero</c>

01:13:55.270 --> 01:13:55.280 align:start position:0%
make sure that all the grads are zero
 

01:13:55.280 --> 01:13:56.229 align:start position:0%
make sure that all the grads are zero
okay

01:13:56.229 --> 01:13:56.239 align:start position:0%
okay
 

01:13:56.239 --> 01:13:57.590 align:start position:0%
okay
but<01:13:56.480><c> now</c><01:13:56.640><c> we</c><01:13:56.800><c> don't</c><01:13:56.960><c> have</c><01:13:57.040><c> to</c><01:13:57.120><c> do</c><01:13:57.280><c> this</c>

01:13:57.590 --> 01:13:57.600 align:start position:0%
but now we don't have to do this
 

01:13:57.600 --> 01:13:59.750 align:start position:0%
but now we don't have to do this
manually<01:13:58.080><c> anymore</c>

01:13:59.750 --> 01:13:59.760 align:start position:0%
manually anymore
 

01:13:59.760 --> 01:14:01.270 align:start position:0%
manually anymore
we<01:13:59.920><c> are</c><01:14:00.000><c> going</c><01:14:00.159><c> to</c><01:14:00.239><c> basically</c><01:14:00.560><c> be</c><01:14:00.719><c> calling</c><01:14:01.120><c> the</c>

01:14:01.270 --> 01:14:01.280 align:start position:0%
we are going to basically be calling the
 

01:14:01.280 --> 01:14:03.990 align:start position:0%
we are going to basically be calling the
dot<01:14:01.520><c> backward</c><01:14:02.239><c> in</c><01:14:02.320><c> the</c><01:14:02.480><c> right</c><01:14:02.719><c> order</c>

01:14:03.990 --> 01:14:04.000 align:start position:0%
dot backward in the right order
 

01:14:04.000 --> 01:14:05.030 align:start position:0%
dot backward in the right order
so

01:14:05.030 --> 01:14:05.040 align:start position:0%
so
 

01:14:05.040 --> 01:14:07.830 align:start position:0%
so
first<01:14:05.600><c> we</c><01:14:05.760><c> want</c><01:14:05.920><c> to</c><01:14:06.080><c> call</c><01:14:06.719><c> os</c>

01:14:07.830 --> 01:14:07.840 align:start position:0%
first we want to call os
 

01:14:07.840 --> 01:14:13.990 align:start position:0%
first we want to call os
dot<01:14:08.640><c> backwards</c>

01:14:13.990 --> 01:14:14.000 align:start position:0%
 
 

01:14:14.000 --> 01:14:17.910 align:start position:0%
 
so<01:14:14.320><c> o</c><01:14:14.640><c> was</c><01:14:14.880><c> the</c><01:14:15.040><c> outcome</c><01:14:15.600><c> of</c><01:14:16.080><c> 10h</c>

01:14:17.910 --> 01:14:17.920 align:start position:0%
so o was the outcome of 10h
 

01:14:17.920 --> 01:14:20.470 align:start position:0%
so o was the outcome of 10h
right<01:14:18.480><c> so</c><01:14:18.640><c> calling</c><01:14:19.040><c> all</c><01:14:19.280><c> that</c><01:14:19.920><c> those</c><01:14:20.239><c> who's</c>

01:14:20.470 --> 01:14:20.480 align:start position:0%
right so calling all that those who's
 

01:14:20.480 --> 01:14:22.149 align:start position:0%
right so calling all that those who's
backward

01:14:22.149 --> 01:14:22.159 align:start position:0%
backward
 

01:14:22.159 --> 01:14:23.110 align:start position:0%
backward
will<01:14:22.400><c> be</c>

01:14:23.110 --> 01:14:23.120 align:start position:0%
will be
 

01:14:23.120 --> 01:14:25.990 align:start position:0%
will be
this<01:14:23.360><c> function</c><01:14:24.000><c> this</c><01:14:24.159><c> is</c><01:14:24.320><c> what</c><01:14:24.480><c> it</c><01:14:24.560><c> will</c><01:14:24.719><c> do</c>

01:14:25.990 --> 01:14:26.000 align:start position:0%
this function this is what it will do
 

01:14:26.000 --> 01:14:29.110 align:start position:0%
this function this is what it will do
now<01:14:26.159><c> we</c><01:14:26.239><c> have</c><01:14:26.320><c> to</c><01:14:26.400><c> be</c><01:14:26.840><c> careful</c><01:14:28.000><c> because</c>

01:14:29.110 --> 01:14:29.120 align:start position:0%
now we have to be careful because
 

01:14:29.120 --> 01:14:31.750 align:start position:0%
now we have to be careful because
there's<01:14:29.360><c> a</c><01:14:29.840><c> times</c><01:14:30.400><c> out.grad</c>

01:14:31.750 --> 01:14:31.760 align:start position:0%
there's a times out.grad
 

01:14:31.760 --> 01:14:34.229 align:start position:0%
there's a times out.grad
and<01:14:31.920><c> out.grad</c><01:14:32.560><c> remember</c><01:14:33.199><c> is</c><01:14:33.360><c> initialized</c><01:14:34.080><c> to</c>

01:14:34.229 --> 01:14:34.239 align:start position:0%
and out.grad remember is initialized to
 

01:14:34.239 --> 01:14:38.870 align:start position:0%
and out.grad remember is initialized to
zero

01:14:38.870 --> 01:14:38.880 align:start position:0%
 
 

01:14:38.880 --> 01:14:41.350 align:start position:0%
 
so<01:14:39.040><c> here</c><01:14:39.280><c> we</c><01:14:39.440><c> see</c><01:14:39.600><c> grad</c><01:14:40.000><c> zero</c><01:14:40.480><c> so</c><01:14:40.719><c> as</c><01:14:40.880><c> a</c><01:14:40.960><c> base</c>

01:14:41.350 --> 01:14:41.360 align:start position:0%
so here we see grad zero so as a base
 

01:14:41.360 --> 01:14:46.630 align:start position:0%
so here we see grad zero so as a base
case<01:14:42.239><c> we</c><01:14:42.400><c> need</c><01:14:42.560><c> to</c><01:14:42.880><c> set</c><01:14:43.280><c> both.grad</c><01:14:44.400><c> to</c><01:14:44.560><c> 1.0</c>

01:14:46.630 --> 01:14:46.640 align:start position:0%
case we need to set both.grad to 1.0
 

01:14:46.640 --> 01:14:53.510 align:start position:0%
case we need to set both.grad to 1.0
to<01:14:46.800><c> initialize</c><01:14:47.360><c> this</c><01:14:47.520><c> with</c><01:14:47.760><c> 1</c>

01:14:53.510 --> 01:14:53.520 align:start position:0%
 
 

01:14:53.520 --> 01:14:56.070 align:start position:0%
 
and<01:14:53.679><c> then</c><01:14:53.840><c> once</c><01:14:54.080><c> this</c><01:14:54.320><c> is</c><01:14:54.400><c> 1</c><01:14:55.120><c> we</c><01:14:55.280><c> can</c><01:14:55.440><c> call</c><01:14:55.679><c> oda</c>

01:14:56.070 --> 01:14:56.080 align:start position:0%
and then once this is 1 we can call oda
 

01:14:56.080 --> 01:14:57.189 align:start position:0%
and then once this is 1 we can call oda
backward

01:14:57.189 --> 01:14:57.199 align:start position:0%
backward
 

01:14:57.199 --> 01:14:58.950 align:start position:0%
backward
and<01:14:57.360><c> what</c><01:14:57.520><c> that</c><01:14:57.760><c> should</c><01:14:58.000><c> do</c><01:14:58.400><c> is</c><01:14:58.560><c> it</c><01:14:58.719><c> should</c>

01:14:58.950 --> 01:14:58.960 align:start position:0%
and what that should do is it should
 

01:14:58.960 --> 01:15:02.149 align:start position:0%
and what that should do is it should
propagate<01:14:59.840><c> this</c><01:15:00.080><c> grad</c><01:15:00.719><c> through</c><01:15:01.120><c> 10h</c>

01:15:02.149 --> 01:15:02.159 align:start position:0%
propagate this grad through 10h
 

01:15:02.159 --> 01:15:04.229 align:start position:0%
propagate this grad through 10h
so<01:15:02.320><c> the</c><01:15:02.480><c> local</c><01:15:02.719><c> derivative</c><01:15:03.360><c> times</c>

01:15:04.229 --> 01:15:04.239 align:start position:0%
so the local derivative times
 

01:15:04.239 --> 01:15:05.910 align:start position:0%
so the local derivative times
the<01:15:04.400><c> global</c><01:15:04.640><c> derivative</c><01:15:05.440><c> which</c><01:15:05.760><c> is</c>

01:15:05.910 --> 01:15:05.920 align:start position:0%
the global derivative which is
 

01:15:05.920 --> 01:15:08.229 align:start position:0%
the global derivative which is
initialized<01:15:06.400><c> at</c><01:15:06.480><c> one</c><01:15:07.120><c> so</c>

01:15:08.229 --> 01:15:08.239 align:start position:0%
initialized at one so
 

01:15:08.239 --> 01:15:11.110 align:start position:0%
initialized at one so
this<01:15:08.480><c> should</c>

01:15:11.110 --> 01:15:11.120 align:start position:0%
this should
 

01:15:11.120 --> 01:15:15.669 align:start position:0%
this should
um

01:15:15.669 --> 01:15:15.679 align:start position:0%
 
 

01:15:15.679 --> 01:15:17.030 align:start position:0%
 
a<01:15:16.000><c> dope</c>

01:15:17.030 --> 01:15:17.040 align:start position:0%
a dope
 

01:15:17.040 --> 01:15:19.110 align:start position:0%
a dope
so<01:15:17.199><c> i</c><01:15:17.280><c> thought</c><01:15:17.440><c> about</c><01:15:17.679><c> redoing</c><01:15:18.400><c> it</c><01:15:18.640><c> but</c><01:15:18.960><c> i</c>

01:15:19.110 --> 01:15:19.120 align:start position:0%
so i thought about redoing it but i
 

01:15:19.120 --> 01:15:20.550 align:start position:0%
so i thought about redoing it but i
figured<01:15:19.440><c> i</c><01:15:19.520><c> should</c><01:15:19.679><c> just</c><01:15:19.920><c> leave</c><01:15:20.080><c> the</c><01:15:20.239><c> error</c><01:15:20.400><c> in</c>

01:15:20.550 --> 01:15:20.560 align:start position:0%
figured i should just leave the error in
 

01:15:20.560 --> 01:15:22.470 align:start position:0%
figured i should just leave the error in
here<01:15:20.800><c> because</c><01:15:21.040><c> it's</c><01:15:21.120><c> pretty</c><01:15:21.360><c> funny</c><01:15:22.080><c> why</c><01:15:22.320><c> is</c>

01:15:22.470 --> 01:15:22.480 align:start position:0%
here because it's pretty funny why is
 

01:15:22.480 --> 01:15:24.390 align:start position:0%
here because it's pretty funny why is
anti-object<01:15:23.280><c> not</c><01:15:23.520><c> callable</c>

01:15:24.390 --> 01:15:24.400 align:start position:0%
anti-object not callable
 

01:15:24.400 --> 01:15:27.030 align:start position:0%
anti-object not callable
uh<01:15:24.800><c> it's</c><01:15:25.040><c> because</c>

01:15:27.030 --> 01:15:27.040 align:start position:0%
uh it's because
 

01:15:27.040 --> 01:15:29.270 align:start position:0%
uh it's because
i<01:15:27.199><c> screwed</c><01:15:27.600><c> up</c><01:15:28.000><c> we're</c><01:15:28.159><c> trying</c><01:15:28.400><c> to</c><01:15:28.640><c> save</c><01:15:28.880><c> these</c>

01:15:29.270 --> 01:15:29.280 align:start position:0%
i screwed up we're trying to save these
 

01:15:29.280 --> 01:15:31.910 align:start position:0%
i screwed up we're trying to save these
functions<01:15:30.159><c> so</c><01:15:30.320><c> this</c><01:15:30.640><c> is</c><01:15:30.880><c> correct</c>

01:15:31.910 --> 01:15:31.920 align:start position:0%
functions so this is correct
 

01:15:31.920 --> 01:15:33.270 align:start position:0%
functions so this is correct
this<01:15:32.159><c> here</c>

01:15:33.270 --> 01:15:33.280 align:start position:0%
this here
 

01:15:33.280 --> 01:15:34.630 align:start position:0%
this here
we<01:15:33.440><c> don't</c><01:15:33.600><c> want</c><01:15:33.760><c> to</c><01:15:33.840><c> call</c><01:15:34.000><c> the</c><01:15:34.159><c> function</c>

01:15:34.630 --> 01:15:34.640 align:start position:0%
we don't want to call the function
 

01:15:34.640 --> 01:15:36.070 align:start position:0%
we don't want to call the function
because<01:15:34.880><c> that</c><01:15:35.040><c> returns</c><01:15:35.520><c> none</c><01:15:35.920><c> these</c>

01:15:36.070 --> 01:15:36.080 align:start position:0%
because that returns none these
 

01:15:36.080 --> 01:15:38.070 align:start position:0%
because that returns none these
functions<01:15:36.480><c> return</c><01:15:36.960><c> none</c><01:15:37.520><c> we</c><01:15:37.679><c> just</c><01:15:37.840><c> want</c><01:15:38.000><c> to</c>

01:15:38.070 --> 01:15:38.080 align:start position:0%
functions return none we just want to
 

01:15:38.080 --> 01:15:39.590 align:start position:0%
functions return none we just want to
store<01:15:38.400><c> the</c><01:15:38.560><c> function</c>

01:15:39.590 --> 01:15:39.600 align:start position:0%
store the function
 

01:15:39.600 --> 01:15:42.149 align:start position:0%
store the function
so<01:15:39.840><c> let</c><01:15:40.000><c> me</c><01:15:40.159><c> redefine</c><01:15:40.560><c> the</c><01:15:40.640><c> value</c><01:15:40.960><c> object</c>

01:15:42.149 --> 01:15:42.159 align:start position:0%
so let me redefine the value object
 

01:15:42.159 --> 01:15:43.750 align:start position:0%
so let me redefine the value object
and<01:15:42.320><c> then</c><01:15:42.560><c> we're</c><01:15:42.719><c> going</c><01:15:42.800><c> to</c><01:15:42.880><c> come</c><01:15:43.040><c> back</c><01:15:43.360><c> in</c>

01:15:43.750 --> 01:15:43.760 align:start position:0%
and then we're going to come back in
 

01:15:43.760 --> 01:15:46.630 align:start position:0%
and then we're going to come back in
redefine<01:15:44.239><c> the</c><01:15:44.400><c> expression</c><01:15:45.120><c> draw</c><01:15:45.360><c> a</c><01:15:45.440><c> dot</c>

01:15:46.630 --> 01:15:46.640 align:start position:0%
redefine the expression draw a dot
 

01:15:46.640 --> 01:15:50.070 align:start position:0%
redefine the expression draw a dot
everything<01:15:47.040><c> is</c><01:15:47.199><c> great</c><01:15:47.840><c> o</c><01:15:48.000><c> dot</c><01:15:48.239><c> grad</c><01:15:48.560><c> is</c><01:15:48.719><c> one</c>

01:15:50.070 --> 01:15:50.080 align:start position:0%
everything is great o dot grad is one
 

01:15:50.080 --> 01:15:53.110 align:start position:0%
everything is great o dot grad is one
o<01:15:50.239><c> dot</c><01:15:50.480><c> grad</c><01:15:50.800><c> is</c><01:15:50.880><c> one</c><01:15:51.600><c> and</c><01:15:51.920><c> now</c>

01:15:53.110 --> 01:15:53.120 align:start position:0%
o dot grad is one and now
 

01:15:53.120 --> 01:15:55.669 align:start position:0%
o dot grad is one and now
now<01:15:53.360><c> this</c><01:15:53.520><c> should</c><01:15:53.840><c> work</c><01:15:54.159><c> of</c><01:15:54.239><c> course</c>

01:15:55.669 --> 01:15:55.679 align:start position:0%
now this should work of course
 

01:15:55.679 --> 01:15:58.550 align:start position:0%
now this should work of course
okay<01:15:56.480><c> so</c><01:15:56.719><c> all</c><01:15:56.880><c> that</c><01:15:57.040><c> backward</c><01:15:57.360><c> should</c>

01:15:58.550 --> 01:15:58.560 align:start position:0%
okay so all that backward should
 

01:15:58.560 --> 01:16:00.550 align:start position:0%
okay so all that backward should
this<01:15:58.800><c> grant</c><01:15:59.199><c> should</c><01:15:59.360><c> now</c><01:15:59.600><c> be</c><01:15:59.760><c> 0.5</c><01:16:00.320><c> if</c><01:16:00.400><c> we</c>

01:16:00.550 --> 01:16:00.560 align:start position:0%
this grant should now be 0.5 if we
 

01:16:00.560 --> 01:16:03.189 align:start position:0%
this grant should now be 0.5 if we
redraw<01:16:01.360><c> and</c><01:16:01.520><c> if</c><01:16:01.679><c> everything</c><01:16:01.920><c> went</c><01:16:02.080><c> correctly</c>

01:16:03.189 --> 01:16:03.199 align:start position:0%
redraw and if everything went correctly
 

01:16:03.199 --> 01:16:05.270 align:start position:0%
redraw and if everything went correctly
0.5<01:16:03.920><c> yay</c>

01:16:05.270 --> 01:16:05.280 align:start position:0%
0.5 yay
 

01:16:05.280 --> 01:16:10.149 align:start position:0%
0.5 yay
okay<01:16:05.679><c> so</c><01:16:06.239><c> now</c><01:16:06.400><c> we</c><01:16:06.560><c> need</c><01:16:06.640><c> to</c><01:16:06.800><c> call</c><01:16:07.120><c> ns.grad</c>

01:16:10.149 --> 01:16:10.159 align:start position:0%
 
 

01:16:10.159 --> 01:16:13.030 align:start position:0%
 
and<01:16:10.400><c> it's</c><01:16:10.480><c> not</c><01:16:10.719><c> awkward</c><01:16:11.040><c> sorry</c>

01:16:13.030 --> 01:16:13.040 align:start position:0%
and it's not awkward sorry
 

01:16:13.040 --> 01:16:14.550 align:start position:0%
and it's not awkward sorry
ends<01:16:13.280><c> backward</c>

01:16:14.550 --> 01:16:14.560 align:start position:0%
ends backward
 

01:16:14.560 --> 01:16:17.830 align:start position:0%
ends backward
so<01:16:14.719><c> that</c><01:16:14.800><c> seems</c><01:16:15.040><c> to</c><01:16:15.199><c> have</c><01:16:15.280><c> worked</c>

01:16:17.830 --> 01:16:17.840 align:start position:0%
 
 

01:16:17.840 --> 01:16:21.110 align:start position:0%
 
so<01:16:18.080><c> instead</c><01:16:18.560><c> backward</c><01:16:19.440><c> routed</c><01:16:20.080><c> the</c><01:16:20.239><c> gradient</c>

01:16:21.110 --> 01:16:21.120 align:start position:0%
so instead backward routed the gradient
 

01:16:21.120 --> 01:16:22.790 align:start position:0%
so instead backward routed the gradient
to<01:16:21.280><c> both</c><01:16:21.520><c> of</c><01:16:21.600><c> these</c><01:16:22.159><c> so</c><01:16:22.320><c> this</c><01:16:22.480><c> is</c><01:16:22.560><c> looking</c>

01:16:22.790 --> 01:16:22.800 align:start position:0%
to both of these so this is looking
 

01:16:22.800 --> 01:16:24.550 align:start position:0%
to both of these so this is looking
great

01:16:24.550 --> 01:16:24.560 align:start position:0%
great
 

01:16:24.560 --> 01:16:26.229 align:start position:0%
great
now<01:16:24.719><c> we</c><01:16:24.880><c> could</c><01:16:25.040><c> of</c><01:16:25.199><c> course</c><01:16:25.440><c> called</c><01:16:25.760><c> uh</c><01:16:26.000><c> called</c>

01:16:26.229 --> 01:16:26.239 align:start position:0%
now we could of course called uh called
 

01:16:26.239 --> 01:16:27.510 align:start position:0%
now we could of course called uh called
b<01:16:26.640><c> grad</c>

01:16:27.510 --> 01:16:27.520 align:start position:0%
b grad
 

01:16:27.520 --> 01:16:30.149 align:start position:0%
b grad
beat<01:16:27.760><c> up</c><01:16:27.840><c> backwards</c><01:16:28.239><c> sorry</c>

01:16:30.149 --> 01:16:30.159 align:start position:0%
beat up backwards sorry
 

01:16:30.159 --> 01:16:31.990 align:start position:0%
beat up backwards sorry
what's<01:16:30.400><c> gonna</c><01:16:30.640><c> happen</c>

01:16:31.990 --> 01:16:32.000 align:start position:0%
what's gonna happen
 

01:16:32.000 --> 01:16:34.470 align:start position:0%
what's gonna happen
well<01:16:32.239><c> b</c><01:16:32.640><c> doesn't</c><01:16:32.880><c> have</c><01:16:33.040><c> it</c><01:16:33.120><c> backward</c><01:16:34.159><c> b</c><01:16:34.320><c> is</c>

01:16:34.470 --> 01:16:34.480 align:start position:0%
well b doesn't have it backward b is
 

01:16:34.480 --> 01:16:35.590 align:start position:0%
well b doesn't have it backward b is
backward

01:16:35.590 --> 01:16:35.600 align:start position:0%
backward
 

01:16:35.600 --> 01:16:37.590 align:start position:0%
backward
because<01:16:35.920><c> b</c><01:16:36.080><c> is</c><01:16:36.159><c> a</c><01:16:36.239><c> leaf</c><01:16:36.480><c> node</c>

01:16:37.590 --> 01:16:37.600 align:start position:0%
because b is a leaf node
 

01:16:37.600 --> 01:16:40.149 align:start position:0%
because b is a leaf node
b's<01:16:37.840><c> backward</c><01:16:38.640><c> is</c><01:16:38.800><c> by</c><01:16:38.960><c> initialization</c><01:16:40.000><c> the</c>

01:16:40.149 --> 01:16:40.159 align:start position:0%
b's backward is by initialization the
 

01:16:40.159 --> 01:16:41.590 align:start position:0%
b's backward is by initialization the
empty<01:16:40.400><c> function</c>

01:16:41.590 --> 01:16:41.600 align:start position:0%
empty function
 

01:16:41.600 --> 01:16:44.229 align:start position:0%
empty function
so<01:16:42.239><c> nothing</c><01:16:42.640><c> would</c><01:16:42.800><c> happen</c><01:16:43.120><c> but</c><01:16:43.280><c> we</c><01:16:43.440><c> can</c><01:16:43.600><c> call</c>

01:16:44.229 --> 01:16:44.239 align:start position:0%
so nothing would happen but we can call
 

01:16:44.239 --> 01:16:45.830 align:start position:0%
so nothing would happen but we can call
call<01:16:44.480><c> it</c><01:16:44.640><c> on</c><01:16:44.880><c> it</c>

01:16:45.830 --> 01:16:45.840 align:start position:0%
call it on it
 

01:16:45.840 --> 01:16:48.390 align:start position:0%
call it on it
but<01:16:46.080><c> when</c><01:16:46.239><c> we</c><01:16:46.840><c> call</c>

01:16:48.390 --> 01:16:48.400 align:start position:0%
but when we call
 

01:16:48.400 --> 01:16:50.070 align:start position:0%
but when we call
this<01:16:48.640><c> one</c>

01:16:50.070 --> 01:16:50.080 align:start position:0%
this one
 

01:16:50.080 --> 01:16:53.430 align:start position:0%
this one
it's<01:16:50.320><c> backward</c>

01:16:53.430 --> 01:16:53.440 align:start position:0%
 
 

01:16:53.440 --> 01:16:56.229 align:start position:0%
 
then<01:16:53.760><c> we</c><01:16:54.080><c> expect</c><01:16:54.640><c> this</c><01:16:54.880><c> 0.5</c><01:16:55.280><c> to</c><01:16:55.360><c> get</c><01:16:55.840><c> further</c>

01:16:56.229 --> 01:16:56.239 align:start position:0%
then we expect this 0.5 to get further
 

01:16:56.239 --> 01:16:57.510 align:start position:0%
then we expect this 0.5 to get further
routed

01:16:57.510 --> 01:16:57.520 align:start position:0%
routed
 

01:16:57.520 --> 01:17:00.950 align:start position:0%
routed
right<01:16:58.080><c> so</c><01:16:58.560><c> there</c><01:16:58.800><c> we</c><01:16:58.880><c> go</c><01:16:59.040><c> 0.5.5</c>

01:17:00.950 --> 01:17:00.960 align:start position:0%
right so there we go 0.5.5
 

01:17:00.960 --> 01:17:02.709 align:start position:0%
right so there we go 0.5.5
and<01:17:01.040><c> then</c><01:17:01.280><c> finally</c>

01:17:02.709 --> 01:17:02.719 align:start position:0%
and then finally
 

01:17:02.719 --> 01:17:05.189 align:start position:0%
and then finally
we<01:17:02.960><c> want</c><01:17:03.840><c> to</c><01:17:04.000><c> call</c>

01:17:05.189 --> 01:17:05.199 align:start position:0%
we want to call
 

01:17:05.199 --> 01:17:10.310 align:start position:0%
we want to call
it<01:17:05.440><c> here</c><01:17:05.920><c> on</c><01:17:06.159><c> x2</c><01:17:06.480><c> w2</c>

01:17:10.310 --> 01:17:10.320 align:start position:0%
 
 

01:17:10.320 --> 01:17:15.990 align:start position:0%
 
and<01:17:10.719><c> on</c><01:17:10.960><c> x1</c><01:17:11.280><c> w1</c>

01:17:15.990 --> 01:17:16.000 align:start position:0%
 
 

01:17:16.000 --> 01:17:17.750 align:start position:0%
 
do<01:17:16.159><c> both</c><01:17:16.400><c> of</c><01:17:16.480><c> those</c>

01:17:17.750 --> 01:17:17.760 align:start position:0%
do both of those
 

01:17:17.760 --> 01:17:19.669 align:start position:0%
do both of those
and<01:17:18.080><c> there</c><01:17:18.239><c> we</c><01:17:18.400><c> go</c>

01:17:19.669 --> 01:17:19.679 align:start position:0%
and there we go
 

01:17:19.679 --> 01:17:23.750 align:start position:0%
and there we go
so<01:17:20.320><c> we</c><01:17:20.480><c> get</c><01:17:21.120><c> 0</c><01:17:21.600><c> 0.5</c><01:17:22.159><c> negative</c><01:17:22.480><c> 1.5</c><01:17:23.040><c> and</c><01:17:23.199><c> 1</c>

01:17:23.750 --> 01:17:23.760 align:start position:0%
so we get 0 0.5 negative 1.5 and 1
 

01:17:23.760 --> 01:17:26.470 align:start position:0%
so we get 0 0.5 negative 1.5 and 1
exactly<01:17:24.159><c> as</c><01:17:24.239><c> we</c><01:17:24.400><c> did</c><01:17:24.560><c> before</c><01:17:25.360><c> but</c><01:17:25.600><c> now</c>

01:17:26.470 --> 01:17:26.480 align:start position:0%
exactly as we did before but now
 

01:17:26.480 --> 01:17:28.390 align:start position:0%
exactly as we did before but now
we've<01:17:26.719><c> done</c><01:17:26.880><c> it</c><01:17:27.040><c> through</c>

01:17:28.390 --> 01:17:28.400 align:start position:0%
we've done it through
 

01:17:28.400 --> 01:17:30.950 align:start position:0%
we've done it through
calling<01:17:28.800><c> that</c><01:17:28.960><c> backward</c><01:17:29.920><c> um</c>

01:17:30.950 --> 01:17:30.960 align:start position:0%
calling that backward um
 

01:17:30.960 --> 01:17:32.390 align:start position:0%
calling that backward um
sort<01:17:31.199><c> of</c><01:17:31.360><c> manually</c>

01:17:32.390 --> 01:17:32.400 align:start position:0%
sort of manually
 

01:17:32.400 --> 01:17:34.310 align:start position:0%
sort of manually
so<01:17:32.640><c> we</c><01:17:32.719><c> have</c><01:17:32.800><c> the</c><01:17:32.960><c> lamp</c><01:17:33.280><c> one</c><01:17:33.520><c> last</c><01:17:33.760><c> piece</c><01:17:34.159><c> to</c>

01:17:34.310 --> 01:17:34.320 align:start position:0%
so we have the lamp one last piece to
 

01:17:34.320 --> 01:17:36.390 align:start position:0%
so we have the lamp one last piece to
get<01:17:34.480><c> rid</c><01:17:34.640><c> of</c><01:17:35.040><c> which</c><01:17:35.280><c> is</c><01:17:35.520><c> us</c><01:17:35.760><c> calling</c>

01:17:36.390 --> 01:17:36.400 align:start position:0%
get rid of which is us calling
 

01:17:36.400 --> 01:17:38.390 align:start position:0%
get rid of which is us calling
underscore<01:17:36.800><c> backward</c><01:17:37.280><c> manually</c><01:17:38.000><c> so</c><01:17:38.159><c> let's</c>

01:17:38.390 --> 01:17:38.400 align:start position:0%
underscore backward manually so let's
 

01:17:38.400 --> 01:17:40.390 align:start position:0%
underscore backward manually so let's
think<01:17:38.640><c> through</c><01:17:38.880><c> what</c><01:17:39.199><c> we</c><01:17:39.360><c> are</c><01:17:39.520><c> actually</c><01:17:39.840><c> doing</c>

01:17:40.390 --> 01:17:40.400 align:start position:0%
think through what we are actually doing
 

01:17:40.400 --> 01:17:41.430 align:start position:0%
think through what we are actually doing
um

01:17:41.430 --> 01:17:41.440 align:start position:0%
um
 

01:17:41.440 --> 01:17:43.189 align:start position:0%
um
we've<01:17:41.840><c> laid</c><01:17:42.000><c> out</c><01:17:42.159><c> a</c><01:17:42.239><c> mathematical</c><01:17:42.719><c> expression</c>

01:17:43.189 --> 01:17:43.199 align:start position:0%
we've laid out a mathematical expression
 

01:17:43.199 --> 01:17:44.870 align:start position:0%
we've laid out a mathematical expression
and<01:17:43.280><c> now</c><01:17:43.440><c> we're</c><01:17:43.600><c> trying</c><01:17:43.760><c> to</c><01:17:43.840><c> go</c><01:17:44.080><c> backwards</c>

01:17:44.870 --> 01:17:44.880 align:start position:0%
and now we're trying to go backwards
 

01:17:44.880 --> 01:17:46.470 align:start position:0%
and now we're trying to go backwards
through<01:17:45.120><c> that</c><01:17:45.360><c> expression</c>

01:17:46.470 --> 01:17:46.480 align:start position:0%
through that expression
 

01:17:46.480 --> 01:17:48.790 align:start position:0%
through that expression
um<01:17:47.199><c> so</c><01:17:47.760><c> going</c><01:17:48.080><c> backwards</c><01:17:48.480><c> through</c><01:17:48.719><c> the</c>

01:17:48.790 --> 01:17:48.800 align:start position:0%
um so going backwards through the
 

01:17:48.800 --> 01:17:50.470 align:start position:0%
um so going backwards through the
expression<01:17:49.280><c> just</c><01:17:49.440><c> means</c><01:17:49.679><c> that</c><01:17:49.840><c> we</c><01:17:50.000><c> never</c><01:17:50.239><c> want</c>

01:17:50.470 --> 01:17:50.480 align:start position:0%
expression just means that we never want
 

01:17:50.480 --> 01:17:54.070 align:start position:0%
expression just means that we never want
to<01:17:50.640><c> call</c><01:17:50.960><c> a</c><01:17:51.120><c> dot</c><01:17:51.440><c> backward</c><01:17:52.320><c> for</c><01:17:52.560><c> any</c><01:17:52.800><c> node</c>

01:17:54.070 --> 01:17:54.080 align:start position:0%
to call a dot backward for any node
 

01:17:54.080 --> 01:17:55.270 align:start position:0%
to call a dot backward for any node
before

01:17:55.270 --> 01:17:55.280 align:start position:0%
before
 

01:17:55.280 --> 01:17:58.709 align:start position:0%
before
we've<01:17:55.600><c> done</c><01:17:56.159><c> a</c><01:17:56.320><c> sort</c><01:17:56.480><c> of</c><01:17:56.880><c> um</c><01:17:57.840><c> everything</c><01:17:58.320><c> after</c>

01:17:58.709 --> 01:17:58.719 align:start position:0%
we've done a sort of um everything after
 

01:17:58.719 --> 01:17:59.669 align:start position:0%
we've done a sort of um everything after
it

01:17:59.669 --> 01:17:59.679 align:start position:0%
it
 

01:17:59.679 --> 01:18:01.270 align:start position:0%
it
so<01:17:59.840><c> we</c><01:17:59.920><c> have</c><01:18:00.000><c> to</c><01:18:00.080><c> do</c><01:18:00.239><c> everything</c><01:18:00.719><c> after</c><01:18:01.040><c> it</c>

01:18:01.270 --> 01:18:01.280 align:start position:0%
so we have to do everything after it
 

01:18:01.280 --> 01:18:02.790 align:start position:0%
so we have to do everything after it
before<01:18:01.600><c> we're</c><01:18:01.679><c> ever</c><01:18:01.920><c> going</c><01:18:02.000><c> to</c><01:18:02.159><c> call</c><01:18:02.560><c> that</c>

01:18:02.790 --> 01:18:02.800 align:start position:0%
before we're ever going to call that
 

01:18:02.800 --> 01:18:04.310 align:start position:0%
before we're ever going to call that
backward<01:18:03.199><c> on</c><01:18:03.280><c> any</c><01:18:03.440><c> one</c><01:18:03.679><c> node</c><01:18:03.920><c> we</c><01:18:04.000><c> have</c><01:18:04.080><c> to</c><01:18:04.159><c> get</c>

01:18:04.310 --> 01:18:04.320 align:start position:0%
backward on any one node we have to get
 

01:18:04.320 --> 01:18:05.990 align:start position:0%
backward on any one node we have to get
all<01:18:04.480><c> of</c><01:18:04.560><c> its</c><01:18:04.719><c> full</c><01:18:04.960><c> dependencies</c><01:18:05.679><c> everything</c>

01:18:05.990 --> 01:18:06.000 align:start position:0%
all of its full dependencies everything
 

01:18:06.000 --> 01:18:08.550 align:start position:0%
all of its full dependencies everything
that<01:18:06.159><c> it</c><01:18:06.480><c> depends</c><01:18:06.960><c> on</c><01:18:07.360><c> has</c><01:18:07.600><c> to</c>

01:18:08.550 --> 01:18:08.560 align:start position:0%
that it depends on has to
 

01:18:08.560 --> 01:18:10.470 align:start position:0%
that it depends on has to
propagate<01:18:08.960><c> to</c><01:18:09.199><c> it</c><01:18:09.440><c> before</c><01:18:09.679><c> we</c><01:18:09.840><c> can</c><01:18:10.000><c> continue</c>

01:18:10.470 --> 01:18:10.480 align:start position:0%
propagate to it before we can continue
 

01:18:10.480 --> 01:18:14.149 align:start position:0%
propagate to it before we can continue
back<01:18:10.840><c> propagation</c><01:18:12.320><c> so</c><01:18:12.719><c> this</c><01:18:13.280><c> ordering</c><01:18:14.000><c> of</c>

01:18:14.149 --> 01:18:14.159 align:start position:0%
back propagation so this ordering of
 

01:18:14.159 --> 01:18:15.990 align:start position:0%
back propagation so this ordering of
graphs<01:18:14.719><c> can</c><01:18:14.880><c> be</c><01:18:15.040><c> achieved</c><01:18:15.440><c> using</c><01:18:15.679><c> something</c>

01:18:15.990 --> 01:18:16.000 align:start position:0%
graphs can be achieved using something
 

01:18:16.000 --> 01:18:17.750 align:start position:0%
graphs can be achieved using something
called<01:18:16.159><c> topological</c><01:18:16.880><c> sort</c>

01:18:17.750 --> 01:18:17.760 align:start position:0%
called topological sort
 

01:18:17.760 --> 01:18:20.070 align:start position:0%
called topological sort
so<01:18:18.000><c> topological</c><01:18:18.640><c> sort</c>

01:18:20.070 --> 01:18:20.080 align:start position:0%
so topological sort
 

01:18:20.080 --> 01:18:23.110 align:start position:0%
so topological sort
is<01:18:20.400><c> basically</c><01:18:20.960><c> a</c><01:18:21.199><c> laying</c><01:18:21.600><c> out</c><01:18:21.920><c> of</c><01:18:22.080><c> a</c><01:18:22.239><c> graph</c>

01:18:23.110 --> 01:18:23.120 align:start position:0%
is basically a laying out of a graph
 

01:18:23.120 --> 01:18:24.870 align:start position:0%
is basically a laying out of a graph
such<01:18:23.360><c> that</c><01:18:23.600><c> all</c><01:18:23.760><c> the</c><01:18:23.840><c> edges</c><01:18:24.239><c> go</c><01:18:24.480><c> only</c><01:18:24.640><c> from</c>

01:18:24.870 --> 01:18:24.880 align:start position:0%
such that all the edges go only from
 

01:18:24.880 --> 01:18:26.630 align:start position:0%
such that all the edges go only from
left<01:18:25.040><c> to</c><01:18:25.199><c> right</c><01:18:25.600><c> basically</c>

01:18:26.630 --> 01:18:26.640 align:start position:0%
left to right basically
 

01:18:26.640 --> 01:18:29.350 align:start position:0%
left to right basically
so<01:18:26.880><c> here</c><01:18:27.120><c> we</c><01:18:27.280><c> have</c><01:18:27.520><c> a</c><01:18:27.679><c> graph</c><01:18:28.400><c> it's</c><01:18:28.640><c> a</c><01:18:28.719><c> directory</c>

01:18:29.350 --> 01:18:29.360 align:start position:0%
so here we have a graph it's a directory
 

01:18:29.360 --> 01:18:31.510 align:start position:0%
so here we have a graph it's a directory
a<01:18:29.440><c> cyclic</c><01:18:30.159><c> graph</c><01:18:30.480><c> a</c><01:18:30.640><c> dag</c>

01:18:31.510 --> 01:18:31.520 align:start position:0%
a cyclic graph a dag
 

01:18:31.520 --> 01:18:33.990 align:start position:0%
a cyclic graph a dag
and<01:18:31.840><c> this</c><01:18:32.080><c> is</c><01:18:32.640><c> two</c><01:18:32.880><c> different</c><01:18:33.360><c> topological</c>

01:18:33.990 --> 01:18:34.000 align:start position:0%
and this is two different topological
 

01:18:34.000 --> 01:18:36.229 align:start position:0%
and this is two different topological
orders<01:18:34.400><c> of</c><01:18:34.560><c> it</c><01:18:34.719><c> i</c><01:18:34.800><c> believe</c><01:18:35.600><c> where</c><01:18:35.840><c> basically</c>

01:18:36.229 --> 01:18:36.239 align:start position:0%
orders of it i believe where basically
 

01:18:36.239 --> 01:18:37.510 align:start position:0%
orders of it i believe where basically
you'll<01:18:36.400><c> see</c><01:18:36.560><c> that</c><01:18:36.640><c> it's</c><01:18:36.880><c> laying</c><01:18:37.120><c> out</c><01:18:37.280><c> of</c><01:18:37.360><c> the</c>

01:18:37.510 --> 01:18:37.520 align:start position:0%
you'll see that it's laying out of the
 

01:18:37.520 --> 01:18:39.350 align:start position:0%
you'll see that it's laying out of the
notes<01:18:37.760><c> such</c><01:18:38.000><c> that</c><01:18:38.239><c> all</c><01:18:38.320><c> the</c><01:18:38.480><c> edges</c><01:18:38.800><c> go</c><01:18:39.040><c> only</c>

01:18:39.350 --> 01:18:39.360 align:start position:0%
notes such that all the edges go only
 

01:18:39.360 --> 01:18:41.910 align:start position:0%
notes such that all the edges go only
one<01:18:39.600><c> way</c><01:18:40.239><c> from</c><01:18:40.400><c> left</c><01:18:40.640><c> to</c><01:18:40.800><c> right</c>

01:18:41.910 --> 01:18:41.920 align:start position:0%
one way from left to right
 

01:18:41.920 --> 01:18:44.229 align:start position:0%
one way from left to right
and<01:18:42.320><c> implementing</c><01:18:42.800><c> topological</c><01:18:43.440><c> sort</c><01:18:44.000><c> you</c>

01:18:44.229 --> 01:18:44.239 align:start position:0%
and implementing topological sort you
 

01:18:44.239 --> 01:18:46.229 align:start position:0%
and implementing topological sort you
can<01:18:44.480><c> look</c><01:18:44.880><c> in</c><01:18:44.960><c> wikipedia</c><01:18:45.600><c> and</c><01:18:45.679><c> so</c><01:18:45.840><c> on</c><01:18:46.000><c> i'm</c><01:18:46.080><c> not</c>

01:18:46.229 --> 01:18:46.239 align:start position:0%
can look in wikipedia and so on i'm not
 

01:18:46.239 --> 01:18:48.790 align:start position:0%
can look in wikipedia and so on i'm not
going<01:18:46.400><c> to</c><01:18:46.480><c> go</c><01:18:46.640><c> through</c><01:18:46.800><c> it</c><01:18:46.960><c> in</c><01:18:47.040><c> detail</c>

01:18:48.790 --> 01:18:48.800 align:start position:0%
going to go through it in detail
 

01:18:48.800 --> 01:18:51.510 align:start position:0%
going to go through it in detail
but<01:18:49.040><c> basically</c><01:18:49.920><c> this</c><01:18:50.400><c> is</c><01:18:50.719><c> what</c><01:18:50.960><c> builds</c><01:18:51.360><c> a</c>

01:18:51.510 --> 01:18:51.520 align:start position:0%
but basically this is what builds a
 

01:18:51.520 --> 01:18:54.149 align:start position:0%
but basically this is what builds a
topological<01:18:52.239><c> graph</c>

01:18:54.149 --> 01:18:54.159 align:start position:0%
topological graph
 

01:18:54.159 --> 01:18:56.950 align:start position:0%
topological graph
we<01:18:54.320><c> maintain</c><01:18:54.800><c> a</c><01:18:54.960><c> set</c><01:18:55.199><c> of</c><01:18:55.360><c> visited</c><01:18:55.840><c> nodes</c><01:18:56.719><c> and</c>

01:18:56.950 --> 01:18:56.960 align:start position:0%
we maintain a set of visited nodes and
 

01:18:56.960 --> 01:18:59.510 align:start position:0%
we maintain a set of visited nodes and
then<01:18:57.199><c> we</c><01:18:57.440><c> are</c>

01:18:59.510 --> 01:18:59.520 align:start position:0%
then we are
 

01:18:59.520 --> 01:19:01.990 align:start position:0%
then we are
going<01:18:59.840><c> through</c><01:19:00.480><c> starting</c><01:19:00.800><c> at</c><01:19:00.960><c> some</c><01:19:01.120><c> root</c><01:19:01.440><c> node</c>

01:19:01.990 --> 01:19:02.000 align:start position:0%
going through starting at some root node
 

01:19:02.000 --> 01:19:03.669 align:start position:0%
going through starting at some root node
which<01:19:02.239><c> for</c><01:19:02.480><c> us</c><01:19:02.640><c> is</c><01:19:02.800><c> o</c><01:19:03.120><c> that's</c><01:19:03.280><c> where</c><01:19:03.440><c> we</c><01:19:03.520><c> want</c>

01:19:03.669 --> 01:19:03.679 align:start position:0%
which for us is o that's where we want
 

01:19:03.679 --> 01:19:05.669 align:start position:0%
which for us is o that's where we want
to<01:19:03.760><c> start</c><01:19:04.000><c> the</c><01:19:04.080><c> topological</c><01:19:04.800><c> sort</c>

01:19:05.669 --> 01:19:05.679 align:start position:0%
to start the topological sort
 

01:19:05.679 --> 01:19:07.990 align:start position:0%
to start the topological sort
and<01:19:06.000><c> starting</c><01:19:06.400><c> at</c><01:19:06.640><c> o</c><01:19:07.120><c> we</c><01:19:07.280><c> go</c><01:19:07.440><c> through</c><01:19:07.679><c> all</c><01:19:07.840><c> of</c>

01:19:07.990 --> 01:19:08.000 align:start position:0%
and starting at o we go through all of
 

01:19:08.000 --> 01:19:10.470 align:start position:0%
and starting at o we go through all of
its<01:19:08.159><c> children</c><01:19:08.800><c> and</c><01:19:08.880><c> we</c><01:19:09.040><c> need</c><01:19:09.120><c> to</c><01:19:09.280><c> lay</c><01:19:09.520><c> them</c><01:19:09.679><c> out</c>

01:19:10.470 --> 01:19:10.480 align:start position:0%
its children and we need to lay them out
 

01:19:10.480 --> 01:19:12.630 align:start position:0%
its children and we need to lay them out
from<01:19:10.640><c> left</c><01:19:10.880><c> to</c><01:19:10.960><c> right</c>

01:19:12.630 --> 01:19:12.640 align:start position:0%
from left to right
 

01:19:12.640 --> 01:19:14.950 align:start position:0%
from left to right
and<01:19:12.800><c> basically</c><01:19:13.280><c> this</c><01:19:13.600><c> starts</c><01:19:14.000><c> at</c><01:19:14.159><c> o</c>

01:19:14.950 --> 01:19:14.960 align:start position:0%
and basically this starts at o
 

01:19:14.960 --> 01:19:17.189 align:start position:0%
and basically this starts at o
if<01:19:15.120><c> it's</c><01:19:15.360><c> not</c><01:19:15.520><c> visited</c><01:19:16.080><c> then</c><01:19:16.320><c> it</c><01:19:16.640><c> marks</c><01:19:16.960><c> it</c><01:19:17.040><c> as</c>

01:19:17.189 --> 01:19:17.199 align:start position:0%
if it's not visited then it marks it as
 

01:19:17.199 --> 01:19:19.110 align:start position:0%
if it's not visited then it marks it as
visited<01:19:17.920><c> and</c><01:19:18.000><c> then</c><01:19:18.239><c> it</c><01:19:18.400><c> iterates</c><01:19:18.800><c> through</c><01:19:18.960><c> all</c>

01:19:19.110 --> 01:19:19.120 align:start position:0%
visited and then it iterates through all
 

01:19:19.120 --> 01:19:20.709 align:start position:0%
visited and then it iterates through all
of<01:19:19.280><c> its</c><01:19:19.440><c> children</c>

01:19:20.709 --> 01:19:20.719 align:start position:0%
of its children
 

01:19:20.719 --> 01:19:24.229 align:start position:0%
of its children
and<01:19:21.199><c> calls</c><01:19:21.600><c> build</c><01:19:22.080><c> topological</c><01:19:22.800><c> on</c><01:19:22.960><c> them</c>

01:19:24.229 --> 01:19:24.239 align:start position:0%
and calls build topological on them
 

01:19:24.239 --> 01:19:26.149 align:start position:0%
and calls build topological on them
and<01:19:24.480><c> then</c><01:19:24.960><c> uh</c><01:19:25.280><c> after</c><01:19:25.600><c> it's</c><01:19:25.760><c> gone</c><01:19:25.920><c> through</c><01:19:26.080><c> all</c>

01:19:26.149 --> 01:19:26.159 align:start position:0%
and then uh after it's gone through all
 

01:19:26.159 --> 01:19:28.390 align:start position:0%
and then uh after it's gone through all
the<01:19:26.320><c> children</c><01:19:26.719><c> it</c><01:19:26.880><c> adds</c><01:19:27.199><c> itself</c>

01:19:28.390 --> 01:19:28.400 align:start position:0%
the children it adds itself
 

01:19:28.400 --> 01:19:29.910 align:start position:0%
the children it adds itself
so<01:19:28.560><c> basically</c>

01:19:29.910 --> 01:19:29.920 align:start position:0%
so basically
 

01:19:29.920 --> 01:19:31.910 align:start position:0%
so basically
this<01:19:30.480><c> node</c><01:19:30.800><c> that</c><01:19:30.960><c> we're</c><01:19:31.199><c> going</c><01:19:31.280><c> to</c><01:19:31.360><c> call</c><01:19:31.520><c> it</c><01:19:31.679><c> on</c>

01:19:31.910 --> 01:19:31.920 align:start position:0%
this node that we're going to call it on
 

01:19:31.920 --> 01:19:34.550 align:start position:0%
this node that we're going to call it on
like<01:19:32.159><c> say</c><01:19:32.400><c> o</c><01:19:33.040><c> is</c><01:19:33.199><c> only</c><01:19:33.360><c> going</c><01:19:33.440><c> to</c><01:19:33.679><c> add</c><01:19:34.000><c> itself</c>

01:19:34.550 --> 01:19:34.560 align:start position:0%
like say o is only going to add itself
 

01:19:34.560 --> 01:19:37.590 align:start position:0%
like say o is only going to add itself
to<01:19:35.199><c> the</c><01:19:35.360><c> topo</c><01:19:35.760><c> list</c><01:19:36.560><c> after</c><01:19:37.040><c> all</c><01:19:37.280><c> of</c><01:19:37.360><c> the</c>

01:19:37.590 --> 01:19:37.600 align:start position:0%
to the topo list after all of the
 

01:19:37.600 --> 01:19:39.350 align:start position:0%
to the topo list after all of the
children<01:19:38.000><c> have</c><01:19:38.159><c> been</c><01:19:38.320><c> processed</c><01:19:39.040><c> and</c><01:19:39.199><c> that's</c>

01:19:39.350 --> 01:19:39.360 align:start position:0%
children have been processed and that's
 

01:19:39.360 --> 01:19:41.750 align:start position:0%
children have been processed and that's
how<01:19:40.000><c> this</c><01:19:40.239><c> function</c><01:19:40.560><c> is</c><01:19:40.640><c> guaranteeing</c>

01:19:41.750 --> 01:19:41.760 align:start position:0%
how this function is guaranteeing
 

01:19:41.760 --> 01:19:43.510 align:start position:0%
how this function is guaranteeing
that<01:19:42.159><c> you're</c><01:19:42.400><c> only</c><01:19:42.800><c> going</c><01:19:42.880><c> to</c><01:19:42.960><c> be</c><01:19:43.040><c> in</c><01:19:43.120><c> the</c><01:19:43.280><c> list</c>

01:19:43.510 --> 01:19:43.520 align:start position:0%
that you're only going to be in the list
 

01:19:43.520 --> 01:19:45.669 align:start position:0%
that you're only going to be in the list
once<01:19:43.840><c> all</c><01:19:44.000><c> your</c><01:19:44.239><c> children</c><01:19:44.800><c> are</c><01:19:45.040><c> in</c><01:19:45.120><c> the</c><01:19:45.199><c> list</c>

01:19:45.669 --> 01:19:45.679 align:start position:0%
once all your children are in the list
 

01:19:45.679 --> 01:19:46.950 align:start position:0%
once all your children are in the list
and<01:19:45.760><c> that's</c><01:19:45.920><c> the</c><01:19:46.080><c> invariant</c><01:19:46.480><c> that</c><01:19:46.640><c> is</c><01:19:46.800><c> being</c>

01:19:46.950 --> 01:19:46.960 align:start position:0%
and that's the invariant that is being
 

01:19:46.960 --> 01:19:49.430 align:start position:0%
and that's the invariant that is being
maintained<01:19:47.840><c> so</c><01:19:48.000><c> if</c><01:19:48.159><c> we</c><01:19:48.239><c> built</c><01:19:48.560><c> upon</c><01:19:48.960><c> o</c><01:19:49.280><c> and</c>

01:19:49.430 --> 01:19:49.440 align:start position:0%
maintained so if we built upon o and
 

01:19:49.440 --> 01:19:52.149 align:start position:0%
maintained so if we built upon o and
then<01:19:50.159><c> inspect</c><01:19:50.640><c> this</c><01:19:50.960><c> list</c>

01:19:52.149 --> 01:19:52.159 align:start position:0%
then inspect this list
 

01:19:52.159 --> 01:19:54.870 align:start position:0%
then inspect this list
we're<01:19:52.320><c> going</c><01:19:52.400><c> to</c><01:19:52.480><c> see</c><01:19:52.719><c> that</c><01:19:53.120><c> it</c><01:19:53.679><c> ordered</c><01:19:54.480><c> our</c>

01:19:54.870 --> 01:19:54.880 align:start position:0%
we're going to see that it ordered our
 

01:19:54.880 --> 01:19:56.470 align:start position:0%
we're going to see that it ordered our
value<01:19:55.280><c> objects</c>

01:19:56.470 --> 01:19:56.480 align:start position:0%
value objects
 

01:19:56.480 --> 01:19:58.390 align:start position:0%
value objects
and<01:19:56.960><c> the</c><01:19:57.120><c> last</c><01:19:57.520><c> one</c>

01:19:58.390 --> 01:19:58.400 align:start position:0%
and the last one
 

01:19:58.400 --> 01:20:00.470 align:start position:0%
and the last one
is<01:19:58.560><c> the</c><01:19:58.719><c> value</c><01:19:59.120><c> of</c><01:19:59.199><c> 0.707</c><01:20:00.080><c> which</c><01:20:00.239><c> is</c><01:20:00.320><c> the</c>

01:20:00.470 --> 01:20:00.480 align:start position:0%
is the value of 0.707 which is the
 

01:20:00.480 --> 01:20:01.750 align:start position:0%
is the value of 0.707 which is the
output

01:20:01.750 --> 01:20:01.760 align:start position:0%
output
 

01:20:01.760 --> 01:20:04.870 align:start position:0%
output
so<01:20:02.000><c> this</c><01:20:02.239><c> is</c><01:20:02.400><c> o</c><01:20:03.040><c> and</c><01:20:03.120><c> then</c><01:20:03.280><c> this</c><01:20:03.520><c> is</c><01:20:03.760><c> n</c>

01:20:04.870 --> 01:20:04.880 align:start position:0%
so this is o and then this is n
 

01:20:04.880 --> 01:20:07.110 align:start position:0%
so this is o and then this is n
and<01:20:05.040><c> then</c><01:20:05.600><c> all</c><01:20:05.760><c> the</c><01:20:05.920><c> other</c><01:20:06.159><c> nodes</c><01:20:06.639><c> get</c><01:20:06.880><c> laid</c>

01:20:07.110 --> 01:20:07.120 align:start position:0%
and then all the other nodes get laid
 

01:20:07.120 --> 01:20:09.750 align:start position:0%
and then all the other nodes get laid
out<01:20:07.520><c> before</c><01:20:07.840><c> it</c>

01:20:09.750 --> 01:20:09.760 align:start position:0%
out before it
 

01:20:09.760 --> 01:20:11.990 align:start position:0%
out before it
so<01:20:09.920><c> that</c><01:20:10.159><c> builds</c><01:20:10.400><c> the</c><01:20:10.560><c> topological</c><01:20:11.199><c> graph</c><01:20:11.840><c> and</c>

01:20:11.990 --> 01:20:12.000 align:start position:0%
so that builds the topological graph and
 

01:20:12.000 --> 01:20:13.910 align:start position:0%
so that builds the topological graph and
really<01:20:12.239><c> what</c><01:20:12.400><c> we're</c><01:20:12.560><c> doing</c><01:20:13.120><c> now</c><01:20:13.600><c> is</c><01:20:13.760><c> we're</c>

01:20:13.910 --> 01:20:13.920 align:start position:0%
really what we're doing now is we're
 

01:20:13.920 --> 01:20:16.629 align:start position:0%
really what we're doing now is we're
just<01:20:14.159><c> calling</c><01:20:14.719><c> dot</c><01:20:15.120><c> underscore</c><01:20:15.520><c> backward</c><01:20:16.320><c> on</c>

01:20:16.629 --> 01:20:16.639 align:start position:0%
just calling dot underscore backward on
 

01:20:16.639 --> 01:20:19.830 align:start position:0%
just calling dot underscore backward on
all<01:20:16.800><c> of</c><01:20:17.120><c> the</c><01:20:17.280><c> nodes</c><01:20:17.760><c> in</c><01:20:17.920><c> a</c><01:20:18.000><c> topological</c><01:20:18.719><c> order</c>

01:20:19.830 --> 01:20:19.840 align:start position:0%
all of the nodes in a topological order
 

01:20:19.840 --> 01:20:21.990 align:start position:0%
all of the nodes in a topological order
so<01:20:20.400><c> if</c><01:20:20.560><c> we</c><01:20:20.719><c> just</c><01:20:20.880><c> reset</c><01:20:21.199><c> the</c><01:20:21.360><c> gradients</c>

01:20:21.990 --> 01:20:22.000 align:start position:0%
so if we just reset the gradients
 

01:20:22.000 --> 01:20:23.430 align:start position:0%
so if we just reset the gradients
they're<01:20:22.239><c> all</c><01:20:22.400><c> zero</c>

01:20:23.430 --> 01:20:23.440 align:start position:0%
they're all zero
 

01:20:23.440 --> 01:20:24.709 align:start position:0%
they're all zero
what<01:20:23.600><c> did</c><01:20:23.760><c> we</c><01:20:23.920><c> do</c>

01:20:24.709 --> 01:20:24.719 align:start position:0%
what did we do
 

01:20:24.719 --> 01:20:27.669 align:start position:0%
what did we do
we<01:20:24.960><c> started</c><01:20:25.760><c> by</c>

01:20:27.669 --> 01:20:27.679 align:start position:0%
we started by
 

01:20:27.679 --> 01:20:29.830 align:start position:0%
we started by
setting<01:20:28.080><c> o</c><01:20:28.320><c> dot</c><01:20:28.480><c> grad</c>

01:20:29.830 --> 01:20:29.840 align:start position:0%
setting o dot grad
 

01:20:29.840 --> 01:20:31.430 align:start position:0%
setting o dot grad
to<01:20:30.000><c> b1</c>

01:20:31.430 --> 01:20:31.440 align:start position:0%
to b1
 

01:20:31.440 --> 01:20:33.590 align:start position:0%
to b1
that's<01:20:31.679><c> the</c><01:20:31.920><c> base</c><01:20:32.159><c> case</c>

01:20:33.590 --> 01:20:33.600 align:start position:0%
that's the base case
 

01:20:33.600 --> 01:20:38.470 align:start position:0%
that's the base case
then<01:20:33.840><c> we</c><01:20:34.080><c> built</c><01:20:34.800><c> the</c><01:20:34.960><c> topological</c><01:20:35.600><c> order</c>

01:20:38.470 --> 01:20:38.480 align:start position:0%
 
 

01:20:38.480 --> 01:20:41.830 align:start position:0%
 
and<01:20:38.639><c> then</c><01:20:38.800><c> we</c><01:20:39.040><c> went</c><01:20:39.360><c> for</c><01:20:39.679><c> node</c>

01:20:41.830 --> 01:20:41.840 align:start position:0%
and then we went for node
 

01:20:41.840 --> 01:20:42.629 align:start position:0%
and then we went for node
in

01:20:42.629 --> 01:20:42.639 align:start position:0%
in
 

01:20:42.639 --> 01:20:43.990 align:start position:0%
in
reversed

01:20:43.990 --> 01:20:44.000 align:start position:0%
reversed
 

01:20:44.000 --> 01:20:46.390 align:start position:0%
reversed
of<01:20:44.159><c> topo</c>

01:20:46.390 --> 01:20:46.400 align:start position:0%
of topo
 

01:20:46.400 --> 01:20:47.590 align:start position:0%
of topo
now

01:20:47.590 --> 01:20:47.600 align:start position:0%
now
 

01:20:47.600 --> 01:20:49.350 align:start position:0%
now
in<01:20:47.840><c> in</c><01:20:47.920><c> the</c><01:20:48.080><c> reverse</c><01:20:48.480><c> order</c><01:20:48.880><c> because</c><01:20:49.120><c> this</c>

01:20:49.350 --> 01:20:49.360 align:start position:0%
in in the reverse order because this
 

01:20:49.360 --> 01:20:50.790 align:start position:0%
in in the reverse order because this
list<01:20:49.679><c> goes</c><01:20:49.920><c> from</c>

01:20:50.790 --> 01:20:50.800 align:start position:0%
list goes from
 

01:20:50.800 --> 01:20:52.390 align:start position:0%
list goes from
you<01:20:50.960><c> know</c><01:20:51.520><c> we</c><01:20:51.679><c> need</c><01:20:51.840><c> to</c><01:20:51.920><c> go</c><01:20:52.000><c> through</c><01:20:52.159><c> it</c><01:20:52.320><c> in</c>

01:20:52.390 --> 01:20:52.400 align:start position:0%
you know we need to go through it in
 

01:20:52.400 --> 01:20:53.910 align:start position:0%
you know we need to go through it in
reversed<01:20:52.800><c> order</c>

01:20:53.910 --> 01:20:53.920 align:start position:0%
reversed order
 

01:20:53.920 --> 01:20:56.070 align:start position:0%
reversed order
so<01:20:54.159><c> starting</c><01:20:54.480><c> at</c><01:20:54.719><c> o</c>

01:20:56.070 --> 01:20:56.080 align:start position:0%
so starting at o
 

01:20:56.080 --> 01:20:58.629 align:start position:0%
so starting at o
note<01:20:56.480><c> that</c><01:20:56.800><c> backward</c>

01:20:58.629 --> 01:20:58.639 align:start position:0%
note that backward
 

01:20:58.639 --> 01:21:01.350 align:start position:0%
note that backward
and<01:20:58.800><c> this</c><01:20:59.040><c> should</c><01:20:59.280><c> be</c>

01:21:01.350 --> 01:21:01.360 align:start position:0%
and this should be
 

01:21:01.360 --> 01:21:03.350 align:start position:0%
and this should be
it

01:21:03.350 --> 01:21:03.360 align:start position:0%
it
 

01:21:03.360 --> 01:21:05.510 align:start position:0%
it
there<01:21:03.520><c> we</c><01:21:03.679><c> go</c>

01:21:05.510 --> 01:21:05.520 align:start position:0%
there we go
 

01:21:05.520 --> 01:21:07.110 align:start position:0%
there we go
those<01:21:05.760><c> are</c><01:21:05.840><c> the</c><01:21:05.920><c> correct</c><01:21:06.159><c> derivatives</c>

01:21:07.110 --> 01:21:07.120 align:start position:0%
those are the correct derivatives
 

01:21:07.120 --> 01:21:08.870 align:start position:0%
those are the correct derivatives
finally<01:21:07.520><c> we</c><01:21:07.760><c> are</c><01:21:07.840><c> going</c><01:21:08.000><c> to</c><01:21:08.320><c> hide</c><01:21:08.719><c> this</c>

01:21:08.870 --> 01:21:08.880 align:start position:0%
finally we are going to hide this
 

01:21:08.880 --> 01:21:10.149 align:start position:0%
finally we are going to hide this
functionality

01:21:10.149 --> 01:21:10.159 align:start position:0%
functionality
 

01:21:10.159 --> 01:21:11.669 align:start position:0%
functionality
so<01:21:10.400><c> i'm</c><01:21:10.560><c> going</c><01:21:10.719><c> to</c>

01:21:11.669 --> 01:21:11.679 align:start position:0%
so i'm going to
 

01:21:11.679 --> 01:21:13.750 align:start position:0%
so i'm going to
copy<01:21:12.080><c> this</c><01:21:12.800><c> and</c><01:21:12.960><c> we're</c><01:21:13.120><c> going</c><01:21:13.280><c> to</c><01:21:13.360><c> hide</c><01:21:13.600><c> it</c>

01:21:13.750 --> 01:21:13.760 align:start position:0%
copy this and we're going to hide it
 

01:21:13.760 --> 01:21:15.430 align:start position:0%
copy this and we're going to hide it
inside<01:21:14.000><c> the</c><01:21:14.159><c> valley</c><01:21:14.480><c> class</c><01:21:14.880><c> because</c><01:21:15.199><c> we</c><01:21:15.280><c> don't</c>

01:21:15.430 --> 01:21:15.440 align:start position:0%
inside the valley class because we don't
 

01:21:15.440 --> 01:21:18.229 align:start position:0%
inside the valley class because we don't
want<01:21:15.600><c> to</c><01:21:16.159><c> have</c><01:21:16.320><c> all</c><01:21:16.400><c> that</c><01:21:16.560><c> code</c><01:21:16.800><c> lying</c><01:21:17.040><c> around</c>

01:21:18.229 --> 01:21:18.239 align:start position:0%
want to have all that code lying around
 

01:21:18.239 --> 01:21:19.830 align:start position:0%
want to have all that code lying around
so<01:21:18.400><c> instead</c><01:21:18.639><c> of</c><01:21:18.800><c> an</c><01:21:18.960><c> underscore</c><01:21:19.360><c> backward</c>

01:21:19.830 --> 01:21:19.840 align:start position:0%
so instead of an underscore backward
 

01:21:19.840 --> 01:21:21.430 align:start position:0%
so instead of an underscore backward
we're<01:21:20.000><c> now</c><01:21:20.159><c> going</c><01:21:20.320><c> to</c><01:21:20.480><c> define</c><01:21:20.880><c> an</c><01:21:21.040><c> actual</c>

01:21:21.430 --> 01:21:21.440 align:start position:0%
we're now going to define an actual
 

01:21:21.440 --> 01:21:23.830 align:start position:0%
we're now going to define an actual
backward<01:21:22.159><c> so</c><01:21:22.320><c> that's</c><01:21:22.560><c> backward</c><01:21:23.360><c> without</c><01:21:23.679><c> the</c>

01:21:23.830 --> 01:21:23.840 align:start position:0%
backward so that's backward without the
 

01:21:23.840 --> 01:21:26.229 align:start position:0%
backward so that's backward without the
underscore

01:21:26.229 --> 01:21:26.239 align:start position:0%
underscore
 

01:21:26.239 --> 01:21:27.510 align:start position:0%
underscore
and<01:21:26.400><c> that's</c><01:21:26.639><c> going</c><01:21:26.800><c> to</c><01:21:26.880><c> do</c><01:21:27.040><c> all</c><01:21:27.199><c> the</c><01:21:27.360><c> stuff</c>

01:21:27.510 --> 01:21:27.520 align:start position:0%
and that's going to do all the stuff
 

01:21:27.520 --> 01:21:29.030 align:start position:0%
and that's going to do all the stuff
that<01:21:27.679><c> we</c><01:21:27.760><c> just</c><01:21:28.000><c> arrived</c>

01:21:29.030 --> 01:21:29.040 align:start position:0%
that we just arrived
 

01:21:29.040 --> 01:21:30.390 align:start position:0%
that we just arrived
so<01:21:29.199><c> let</c><01:21:29.360><c> me</c><01:21:29.440><c> just</c><01:21:29.600><c> clean</c><01:21:29.840><c> this</c><01:21:30.000><c> up</c><01:21:30.080><c> a</c><01:21:30.159><c> little</c>

01:21:30.390 --> 01:21:30.400 align:start position:0%
so let me just clean this up a little
 

01:21:30.400 --> 01:21:32.470 align:start position:0%
so let me just clean this up a little
bit<01:21:30.960><c> so</c>

01:21:32.470 --> 01:21:32.480 align:start position:0%
bit so
 

01:21:32.480 --> 01:21:37.030 align:start position:0%
bit so
we're<01:21:32.639><c> first</c><01:21:32.960><c> going</c><01:21:33.120><c> to</c>

01:21:37.030 --> 01:21:37.040 align:start position:0%
 
 

01:21:37.040 --> 01:21:38.950 align:start position:0%
 
build<01:21:37.280><c> a</c><01:21:37.360><c> topological</c><01:21:37.920><c> graph</c>

01:21:38.950 --> 01:21:38.960 align:start position:0%
build a topological graph
 

01:21:38.960 --> 01:21:41.270 align:start position:0%
build a topological graph
starting<01:21:39.440><c> at</c><01:21:39.920><c> self</c>

01:21:41.270 --> 01:21:41.280 align:start position:0%
starting at self
 

01:21:41.280 --> 01:21:44.149 align:start position:0%
starting at self
so<01:21:42.000><c> build</c><01:21:42.239><c> topo</c><01:21:42.719><c> of</c><01:21:42.960><c> self</c>

01:21:44.149 --> 01:21:44.159 align:start position:0%
so build topo of self
 

01:21:44.159 --> 01:21:46.550 align:start position:0%
so build topo of self
will<01:21:44.400><c> populate</c><01:21:45.199><c> the</c><01:21:45.360><c> topological</c><01:21:46.000><c> order</c><01:21:46.320><c> into</c>

01:21:46.550 --> 01:21:46.560 align:start position:0%
will populate the topological order into
 

01:21:46.560 --> 01:21:49.270 align:start position:0%
will populate the topological order into
the<01:21:46.639><c> topo</c><01:21:47.040><c> list</c><01:21:47.440><c> which</c><01:21:47.600><c> is</c><01:21:47.679><c> a</c><01:21:47.760><c> local</c><01:21:48.080><c> variable</c>

01:21:49.270 --> 01:21:49.280 align:start position:0%
the topo list which is a local variable
 

01:21:49.280 --> 01:21:52.950 align:start position:0%
the topo list which is a local variable
then<01:21:49.520><c> we</c><01:21:49.760><c> set</c><01:21:50.159><c> self.grad</c><01:21:50.880><c> to</c><01:21:51.040><c> be</c><01:21:51.199><c> one</c>

01:21:52.950 --> 01:21:52.960 align:start position:0%
then we set self.grad to be one
 

01:21:52.960 --> 01:21:55.350 align:start position:0%
then we set self.grad to be one
and<01:21:53.199><c> then</c><01:21:53.440><c> for</c><01:21:53.679><c> each</c><01:21:53.920><c> node</c><01:21:54.239><c> in</c><01:21:54.320><c> the</c><01:21:54.480><c> reversed</c>

01:21:55.350 --> 01:21:55.360 align:start position:0%
and then for each node in the reversed
 

01:21:55.360 --> 01:21:57.669 align:start position:0%
and then for each node in the reversed
list<01:21:55.920><c> so</c><01:21:56.159><c> starting</c><01:21:56.480><c> at</c><01:21:56.719><c> us</c><01:21:56.960><c> and</c><01:21:57.120><c> going</c><01:21:57.280><c> to</c><01:21:57.520><c> all</c>

01:21:57.669 --> 01:21:57.679 align:start position:0%
list so starting at us and going to all
 

01:21:57.679 --> 01:21:59.990 align:start position:0%
list so starting at us and going to all
the<01:21:57.840><c> children</c>

01:21:59.990 --> 01:22:00.000 align:start position:0%
the children
 

01:22:00.000 --> 01:22:02.390 align:start position:0%
the children
underscore<01:22:00.400><c> backward</c>

01:22:02.390 --> 01:22:02.400 align:start position:0%
underscore backward
 

01:22:02.400 --> 01:22:03.270 align:start position:0%
underscore backward
and

01:22:03.270 --> 01:22:03.280 align:start position:0%
and
 

01:22:03.280 --> 01:22:06.070 align:start position:0%
and
that<01:22:03.600><c> should</c><01:22:03.840><c> be</c><01:22:04.159><c> it</c><01:22:04.639><c> so</c>

01:22:06.070 --> 01:22:06.080 align:start position:0%
that should be it so
 

01:22:06.080 --> 01:22:07.990 align:start position:0%
that should be it so
save

01:22:07.990 --> 01:22:08.000 align:start position:0%
save
 

01:22:08.000 --> 01:22:09.189 align:start position:0%
save
come<01:22:08.159><c> down</c><01:22:08.400><c> here</c>

01:22:09.189 --> 01:22:09.199 align:start position:0%
come down here
 

01:22:09.199 --> 01:22:09.900 align:start position:0%
come down here
redefine

01:22:09.900 --> 01:22:09.910 align:start position:0%
redefine
 

01:22:09.910 --> 01:22:11.110 align:start position:0%
redefine
[Music]

01:22:11.110 --> 01:22:11.120 align:start position:0%
[Music]
 

01:22:11.120 --> 01:22:13.590 align:start position:0%
[Music]
okay<01:22:11.360><c> all</c><01:22:11.520><c> the</c><01:22:11.600><c> grands</c><01:22:11.840><c> are</c><01:22:12.000><c> zero</c>

01:22:13.590 --> 01:22:13.600 align:start position:0%
okay all the grands are zero
 

01:22:13.600 --> 01:22:15.189 align:start position:0%
okay all the grands are zero
and<01:22:13.760><c> now</c><01:22:13.920><c> what</c><01:22:14.080><c> we</c><01:22:14.159><c> can</c><01:22:14.239><c> do</c><01:22:14.560><c> is</c><01:22:14.719><c> oh</c><01:22:14.960><c> that</c>

01:22:15.189 --> 01:22:15.199 align:start position:0%
and now what we can do is oh that
 

01:22:15.199 --> 01:22:17.110 align:start position:0%
and now what we can do is oh that
backward<01:22:15.679><c> without</c><01:22:16.000><c> the</c><01:22:16.080><c> underscore</c>

01:22:17.110 --> 01:22:17.120 align:start position:0%
backward without the underscore
 

01:22:17.120 --> 01:22:21.430 align:start position:0%
backward without the underscore
and

01:22:21.430 --> 01:22:21.440 align:start position:0%
 
 

01:22:21.440 --> 01:22:22.870 align:start position:0%
 
there<01:22:21.600><c> we</c><01:22:21.760><c> go</c>

01:22:22.870 --> 01:22:22.880 align:start position:0%
there we go
 

01:22:22.880 --> 01:22:26.629 align:start position:0%
there we go
and<01:22:23.040><c> that's</c><01:22:23.440><c> uh</c><01:22:23.679><c> that's</c><01:22:24.159><c> back</c><01:22:24.400><c> propagation</c>

01:22:26.629 --> 01:22:26.639 align:start position:0%
and that's uh that's back propagation
 

01:22:26.639 --> 01:22:28.390 align:start position:0%
and that's uh that's back propagation
place<01:22:26.880><c> for</c><01:22:27.040><c> one</c><01:22:27.199><c> neuron</c>

01:22:28.390 --> 01:22:28.400 align:start position:0%
place for one neuron
 

01:22:28.400 --> 01:22:29.910 align:start position:0%
place for one neuron
now<01:22:28.560><c> we</c><01:22:28.719><c> shouldn't</c><01:22:29.040><c> be</c><01:22:29.280><c> too</c><01:22:29.440><c> happy</c><01:22:29.760><c> with</c>

01:22:29.910 --> 01:22:29.920 align:start position:0%
now we shouldn't be too happy with
 

01:22:29.920 --> 01:22:32.310 align:start position:0%
now we shouldn't be too happy with
ourselves<01:22:30.320><c> actually</c><01:22:30.719><c> because</c><01:22:31.120><c> we</c><01:22:31.360><c> have</c><01:22:31.679><c> a</c><01:22:32.000><c> bad</c>

01:22:32.310 --> 01:22:32.320 align:start position:0%
ourselves actually because we have a bad
 

01:22:32.320 --> 01:22:35.030 align:start position:0%
ourselves actually because we have a bad
bug<01:22:33.040><c> um</c><01:22:33.520><c> and</c><01:22:33.679><c> we</c><01:22:33.840><c> have</c><01:22:33.920><c> not</c><01:22:34.159><c> surfaced</c><01:22:34.560><c> the</c><01:22:34.719><c> bug</c>

01:22:35.030 --> 01:22:35.040 align:start position:0%
bug um and we have not surfaced the bug
 

01:22:35.040 --> 01:22:36.790 align:start position:0%
bug um and we have not surfaced the bug
because<01:22:35.360><c> of</c><01:22:35.520><c> some</c><01:22:35.760><c> specific</c><01:22:36.159><c> conditions</c><01:22:36.639><c> that</c>

01:22:36.790 --> 01:22:36.800 align:start position:0%
because of some specific conditions that
 

01:22:36.800 --> 01:22:39.910 align:start position:0%
because of some specific conditions that
we<01:22:37.040><c> are</c><01:22:37.600><c> we</c><01:22:37.760><c> have</c><01:22:37.840><c> to</c><01:22:37.920><c> think</c><01:22:38.080><c> about</c><01:22:38.320><c> right</c><01:22:38.480><c> now</c>

01:22:39.910 --> 01:22:39.920 align:start position:0%
we are we have to think about right now
 

01:22:39.920 --> 01:22:41.990 align:start position:0%
we are we have to think about right now
so<01:22:40.080><c> here's</c><01:22:40.320><c> the</c><01:22:40.480><c> simplest</c><01:22:40.800><c> case</c><01:22:41.040><c> that</c><01:22:41.760><c> shows</c>

01:22:41.990 --> 01:22:42.000 align:start position:0%
so here's the simplest case that shows
 

01:22:42.000 --> 01:22:43.910 align:start position:0%
so here's the simplest case that shows
the<01:22:42.159><c> bug</c>

01:22:43.910 --> 01:22:43.920 align:start position:0%
the bug
 

01:22:43.920 --> 01:22:47.990 align:start position:0%
the bug
say<01:22:44.239><c> i</c><01:22:44.400><c> create</c><01:22:44.719><c> a</c><01:22:44.880><c> single</c><01:22:45.199><c> node</c><01:22:45.520><c> a</c>

01:22:47.990 --> 01:22:48.000 align:start position:0%
 
 

01:22:48.000 --> 01:22:51.590 align:start position:0%
 
and<01:22:48.159><c> then</c><01:22:48.400><c> i</c><01:22:48.480><c> create</c><01:22:48.719><c> a</c><01:22:48.800><c> b</c><01:22:49.040><c> that</c><01:22:49.120><c> is</c><01:22:49.280><c> a</c><01:22:49.440><c> plus</c><01:22:49.760><c> a</c>

01:22:51.590 --> 01:22:51.600 align:start position:0%
and then i create a b that is a plus a
 

01:22:51.600 --> 01:22:54.790 align:start position:0%
and then i create a b that is a plus a
and<01:22:51.679><c> then</c><01:22:51.840><c> i</c><01:22:51.920><c> called</c><01:22:52.080><c> backward</c>

01:22:54.790 --> 01:22:54.800 align:start position:0%
 
 

01:22:54.800 --> 01:22:57.270 align:start position:0%
 
so<01:22:54.960><c> what's</c><01:22:55.199><c> going</c><01:22:55.280><c> to</c><01:22:55.600><c> happen</c><01:22:55.920><c> is</c><01:22:56.159><c> a</c><01:22:56.320><c> is</c><01:22:56.480><c> 3</c>

01:22:57.270 --> 01:22:57.280 align:start position:0%
so what's going to happen is a is 3
 

01:22:57.280 --> 01:22:59.990 align:start position:0%
so what's going to happen is a is 3
and<01:22:57.440><c> then</c><01:22:57.679><c> a</c><01:22:58.239><c> b</c><01:22:58.400><c> is</c><01:22:58.560><c> a</c><01:22:58.639><c> plus</c><01:22:58.960><c> a</c><01:22:59.280><c> so</c><01:22:59.440><c> there's</c><01:22:59.679><c> two</c>

01:22:59.990 --> 01:23:00.000 align:start position:0%
and then a b is a plus a so there's two
 

01:23:00.000 --> 01:23:03.750 align:start position:0%
and then a b is a plus a so there's two
arrows<01:23:00.480><c> on</c><01:23:00.560><c> top</c><01:23:00.800><c> of</c><01:23:00.960><c> each</c><01:23:01.120><c> other</c><01:23:01.360><c> here</c>

01:23:03.750 --> 01:23:03.760 align:start position:0%
 
 

01:23:03.760 --> 01:23:05.430 align:start position:0%
 
then<01:23:03.920><c> we</c><01:23:04.080><c> can</c><01:23:04.159><c> see</c><01:23:04.320><c> that</c><01:23:04.480><c> b</c><01:23:04.800><c> is</c><01:23:04.880><c> of</c><01:23:05.040><c> course</c><01:23:05.280><c> the</c>

01:23:05.430 --> 01:23:05.440 align:start position:0%
then we can see that b is of course the
 

01:23:05.440 --> 01:23:06.870 align:start position:0%
then we can see that b is of course the
forward<01:23:05.679><c> pass</c><01:23:06.000><c> works</c>

01:23:06.870 --> 01:23:06.880 align:start position:0%
forward pass works
 

01:23:06.880 --> 01:23:08.070 align:start position:0%
forward pass works
b<01:23:07.120><c> is</c><01:23:07.199><c> just</c>

01:23:08.070 --> 01:23:08.080 align:start position:0%
b is just
 

01:23:08.080 --> 01:23:09.990 align:start position:0%
b is just
a<01:23:08.239><c> plus</c><01:23:08.480><c> a</c><01:23:08.639><c> which</c><01:23:08.800><c> is</c><01:23:08.960><c> six</c>

01:23:09.990 --> 01:23:10.000 align:start position:0%
a plus a which is six
 

01:23:10.000 --> 01:23:11.669 align:start position:0%
a plus a which is six
but<01:23:10.159><c> the</c><01:23:10.320><c> gradient</c><01:23:10.800><c> here</c><01:23:11.040><c> is</c><01:23:11.199><c> not</c><01:23:11.360><c> actually</c>

01:23:11.669 --> 01:23:11.679 align:start position:0%
but the gradient here is not actually
 

01:23:11.679 --> 01:23:12.629 align:start position:0%
but the gradient here is not actually
correct

01:23:12.629 --> 01:23:12.639 align:start position:0%
correct
 

01:23:12.639 --> 01:23:15.910 align:start position:0%
correct
that<01:23:12.800><c> we</c><01:23:12.960><c> calculate</c><01:23:13.440><c> it</c><01:23:13.600><c> automatically</c>

01:23:15.910 --> 01:23:15.920 align:start position:0%
that we calculate it automatically
 

01:23:15.920 --> 01:23:17.430 align:start position:0%
that we calculate it automatically
and<01:23:16.080><c> that's</c><01:23:16.400><c> because</c>

01:23:17.430 --> 01:23:17.440 align:start position:0%
and that's because
 

01:23:17.440 --> 01:23:19.189 align:start position:0%
and that's because
um

01:23:19.189 --> 01:23:19.199 align:start position:0%
um
 

01:23:19.199 --> 01:23:20.470 align:start position:0%
um
of<01:23:19.360><c> course</c><01:23:19.679><c> uh</c>

01:23:20.470 --> 01:23:20.480 align:start position:0%
of course uh
 

01:23:20.480 --> 01:23:22.470 align:start position:0%
of course uh
just<01:23:20.880><c> doing</c><01:23:21.120><c> calculus</c><01:23:21.600><c> in</c><01:23:21.679><c> your</c><01:23:21.840><c> head</c><01:23:22.320><c> the</c>

01:23:22.470 --> 01:23:22.480 align:start position:0%
just doing calculus in your head the
 

01:23:22.480 --> 01:23:24.550 align:start position:0%
just doing calculus in your head the
derivative<01:23:22.880><c> of</c><01:23:22.880><c> b</c><01:23:23.120><c> with</c><01:23:23.199><c> respect</c><01:23:23.520><c> to</c><01:23:23.679><c> a</c>

01:23:24.550 --> 01:23:24.560 align:start position:0%
derivative of b with respect to a
 

01:23:24.560 --> 01:23:27.590 align:start position:0%
derivative of b with respect to a
should<01:23:24.800><c> be</c><01:23:25.199><c> uh</c><01:23:25.679><c> two</c>

01:23:27.590 --> 01:23:27.600 align:start position:0%
should be uh two
 

01:23:27.600 --> 01:23:28.790 align:start position:0%
should be uh two
one<01:23:27.760><c> plus</c><01:23:28.000><c> one</c>

01:23:28.790 --> 01:23:28.800 align:start position:0%
one plus one
 

01:23:28.800 --> 01:23:30.709 align:start position:0%
one plus one
it's<01:23:29.040><c> not</c><01:23:29.280><c> one</c>

01:23:30.709 --> 01:23:30.719 align:start position:0%
it's not one
 

01:23:30.719 --> 01:23:32.229 align:start position:0%
it's not one
intuitively<01:23:31.280><c> what's</c><01:23:31.520><c> happening</c><01:23:31.840><c> here</c><01:23:32.080><c> right</c>

01:23:32.229 --> 01:23:32.239 align:start position:0%
intuitively what's happening here right
 

01:23:32.239 --> 01:23:34.629 align:start position:0%
intuitively what's happening here right
so<01:23:32.560><c> b</c><01:23:32.800><c> is</c><01:23:32.880><c> the</c><01:23:33.040><c> result</c><01:23:33.360><c> of</c><01:23:33.440><c> a</c><01:23:33.600><c> plus</c><01:23:33.920><c> a</c><01:23:34.400><c> and</c><01:23:34.480><c> then</c>

01:23:34.629 --> 01:23:34.639 align:start position:0%
so b is the result of a plus a and then
 

01:23:34.639 --> 01:23:36.629 align:start position:0%
so b is the result of a plus a and then
we<01:23:34.719><c> call</c><01:23:34.960><c> backward</c><01:23:35.440><c> on</c><01:23:35.600><c> it</c>

01:23:36.629 --> 01:23:36.639 align:start position:0%
we call backward on it
 

01:23:36.639 --> 01:23:42.070 align:start position:0%
we call backward on it
so<01:23:36.880><c> let's</c><01:23:37.120><c> go</c><01:23:37.520><c> up</c><01:23:38.159><c> and</c><01:23:38.320><c> see</c><01:23:38.480><c> what</c><01:23:38.639><c> that</c><01:23:38.800><c> does</c>

01:23:42.070 --> 01:23:42.080 align:start position:0%
 
 

01:23:42.080 --> 01:23:43.590 align:start position:0%
 
um

01:23:43.590 --> 01:23:43.600 align:start position:0%
um
 

01:23:43.600 --> 01:23:45.510 align:start position:0%
um
b<01:23:43.760><c> is</c><01:23:43.920><c> a</c><01:23:44.000><c> result</c><01:23:44.239><c> of</c><01:23:44.400><c> addition</c>

01:23:45.510 --> 01:23:45.520 align:start position:0%
b is a result of addition
 

01:23:45.520 --> 01:23:46.830 align:start position:0%
b is a result of addition
so<01:23:45.760><c> out</c><01:23:46.080><c> as</c>

01:23:46.830 --> 01:23:46.840 align:start position:0%
so out as
 

01:23:46.840 --> 01:23:49.510 align:start position:0%
so out as
b<01:23:47.840><c> and</c><01:23:47.920><c> then</c><01:23:48.080><c> when</c><01:23:48.239><c> we</c><01:23:48.320><c> called</c><01:23:48.560><c> backward</c><01:23:49.360><c> what</c>

01:23:49.510 --> 01:23:49.520 align:start position:0%
b and then when we called backward what
 

01:23:49.520 --> 01:23:50.790 align:start position:0%
b and then when we called backward what
happened<01:23:50.000><c> is</c>

01:23:50.790 --> 01:23:50.800 align:start position:0%
happened is
 

01:23:50.800 --> 01:23:53.189 align:start position:0%
happened is
self.grad<01:23:51.920><c> was</c><01:23:52.320><c> set</c>

01:23:53.189 --> 01:23:53.199 align:start position:0%
self.grad was set
 

01:23:53.199 --> 01:23:54.390 align:start position:0%
self.grad was set
to<01:23:53.520><c> one</c>

01:23:54.390 --> 01:23:54.400 align:start position:0%
to one
 

01:23:54.400 --> 01:23:57.189 align:start position:0%
to one
and<01:23:54.480><c> then</c><01:23:54.719><c> other</c><01:23:54.960><c> that</c><01:23:55.199><c> grad</c><01:23:55.440><c> was</c><01:23:55.600><c> set</c><01:23:55.840><c> to</c><01:23:56.080><c> one</c>

01:23:57.189 --> 01:23:57.199 align:start position:0%
and then other that grad was set to one
 

01:23:57.199 --> 01:23:59.830 align:start position:0%
and then other that grad was set to one
but<01:23:57.920><c> because</c><01:23:58.239><c> we're</c><01:23:58.400><c> doing</c><01:23:58.639><c> a</c><01:23:58.800><c> plus</c><01:23:59.120><c> a</c>

01:23:59.830 --> 01:23:59.840 align:start position:0%
but because we're doing a plus a
 

01:23:59.840 --> 01:24:01.990 align:start position:0%
but because we're doing a plus a
self<01:24:00.320><c> and</c><01:24:00.560><c> other</c><01:24:01.199><c> are</c><01:24:01.360><c> actually</c><01:24:01.600><c> the</c><01:24:01.679><c> exact</c>

01:24:01.990 --> 01:24:02.000 align:start position:0%
self and other are actually the exact
 

01:24:02.000 --> 01:24:03.350 align:start position:0%
self and other are actually the exact
same<01:24:02.239><c> object</c>

01:24:03.350 --> 01:24:03.360 align:start position:0%
same object
 

01:24:03.360 --> 01:24:05.990 align:start position:0%
same object
so<01:24:03.679><c> we</c><01:24:03.840><c> are</c><01:24:04.159><c> overriding</c><01:24:04.880><c> the</c><01:24:05.040><c> gradient</c><01:24:05.679><c> we</c><01:24:05.840><c> are</c>

01:24:05.990 --> 01:24:06.000 align:start position:0%
so we are overriding the gradient we are
 

01:24:06.000 --> 01:24:07.590 align:start position:0%
so we are overriding the gradient we are
setting<01:24:06.320><c> it</c><01:24:06.400><c> to</c><01:24:06.560><c> one</c><01:24:07.120><c> and</c><01:24:07.199><c> then</c><01:24:07.360><c> we</c><01:24:07.440><c> are</c>

01:24:07.590 --> 01:24:07.600 align:start position:0%
setting it to one and then we are
 

01:24:07.600 --> 01:24:09.990 align:start position:0%
setting it to one and then we are
setting<01:24:08.000><c> it</c><01:24:08.159><c> again</c><01:24:08.480><c> to</c><01:24:08.719><c> one</c><01:24:09.360><c> and</c><01:24:09.440><c> that's</c><01:24:09.760><c> why</c>

01:24:09.990 --> 01:24:10.000 align:start position:0%
setting it again to one and that's why
 

01:24:10.000 --> 01:24:11.189 align:start position:0%
setting it again to one and that's why
it<01:24:10.159><c> stays</c>

01:24:11.189 --> 01:24:11.199 align:start position:0%
it stays
 

01:24:11.199 --> 01:24:13.030 align:start position:0%
it stays
at<01:24:11.920><c> one</c>

01:24:13.030 --> 01:24:13.040 align:start position:0%
at one
 

01:24:13.040 --> 01:24:14.629 align:start position:0%
at one
so<01:24:13.199><c> that's</c><01:24:13.440><c> a</c><01:24:13.520><c> problem</c>

01:24:14.629 --> 01:24:14.639 align:start position:0%
so that's a problem
 

01:24:14.639 --> 01:24:16.390 align:start position:0%
so that's a problem
there's<01:24:14.880><c> another</c><01:24:15.120><c> way</c><01:24:15.360><c> to</c><01:24:15.679><c> see</c><01:24:15.920><c> this</c><01:24:16.159><c> in</c><01:24:16.320><c> a</c>

01:24:16.390 --> 01:24:16.400 align:start position:0%
there's another way to see this in a
 

01:24:16.400 --> 01:24:21.510 align:start position:0%
there's another way to see this in a
little<01:24:16.480><c> bit</c><01:24:16.639><c> more</c><01:24:16.880><c> complicated</c><01:24:17.520><c> expression</c>

01:24:21.510 --> 01:24:21.520 align:start position:0%
 
 

01:24:21.520 --> 01:24:23.510 align:start position:0%
 
so<01:24:21.679><c> here</c><01:24:21.920><c> we</c><01:24:22.080><c> have</c>

01:24:23.510 --> 01:24:23.520 align:start position:0%
so here we have
 

01:24:23.520 --> 01:24:25.910 align:start position:0%
so here we have
a<01:24:24.159><c> and</c><01:24:24.320><c> b</c>

01:24:25.910 --> 01:24:25.920 align:start position:0%
a and b
 

01:24:25.920 --> 01:24:28.870 align:start position:0%
a and b
and<01:24:26.080><c> then</c><01:24:26.560><c> uh</c><01:24:27.280><c> d</c><01:24:27.679><c> will</c><01:24:27.840><c> be</c><01:24:28.080><c> the</c><01:24:28.239><c> multiplication</c>

01:24:28.870 --> 01:24:28.880 align:start position:0%
and then uh d will be the multiplication
 

01:24:28.880 --> 01:24:30.790 align:start position:0%
and then uh d will be the multiplication
of<01:24:28.960><c> the</c><01:24:29.120><c> two</c><01:24:29.520><c> and</c><01:24:29.679><c> e</c><01:24:29.840><c> will</c><01:24:30.000><c> be</c><01:24:30.159><c> the</c><01:24:30.320><c> addition</c><01:24:30.719><c> of</c>

01:24:30.790 --> 01:24:30.800 align:start position:0%
of the two and e will be the addition of
 

01:24:30.800 --> 01:24:31.990 align:start position:0%
of the two and e will be the addition of
the<01:24:30.960><c> two</c>

01:24:31.990 --> 01:24:32.000 align:start position:0%
the two
 

01:24:32.000 --> 01:24:33.030 align:start position:0%
the two
and

01:24:33.030 --> 01:24:33.040 align:start position:0%
and
 

01:24:33.040 --> 01:24:35.270 align:start position:0%
and
then<01:24:33.199><c> we</c><01:24:33.280><c> multiply</c><01:24:33.679><c> e</c><01:24:33.760><c> times</c><01:24:34.000><c> d</c><01:24:34.159><c> to</c><01:24:34.320><c> get</c><01:24:34.560><c> f</c><01:24:35.199><c> and</c>

01:24:35.270 --> 01:24:35.280 align:start position:0%
then we multiply e times d to get f and
 

01:24:35.280 --> 01:24:37.669 align:start position:0%
then we multiply e times d to get f and
then<01:24:35.440><c> we</c><01:24:35.600><c> called</c><01:24:35.840><c> fda</c><01:24:36.159><c> backward</c>

01:24:37.669 --> 01:24:37.679 align:start position:0%
then we called fda backward
 

01:24:37.679 --> 01:24:39.590 align:start position:0%
then we called fda backward
and<01:24:38.080><c> these</c><01:24:38.239><c> gradients</c><01:24:38.719><c> if</c><01:24:38.800><c> you</c><01:24:39.040><c> check</c><01:24:39.360><c> will</c><01:24:39.520><c> be</c>

01:24:39.590 --> 01:24:39.600 align:start position:0%
and these gradients if you check will be
 

01:24:39.600 --> 01:24:40.790 align:start position:0%
and these gradients if you check will be
incorrect

01:24:40.790 --> 01:24:40.800 align:start position:0%
incorrect
 

01:24:40.800 --> 01:24:42.470 align:start position:0%
incorrect
so<01:24:40.960><c> fundamentally</c><01:24:41.440><c> what's</c><01:24:41.600><c> happening</c><01:24:41.920><c> here</c>

01:24:42.470 --> 01:24:42.480 align:start position:0%
so fundamentally what's happening here
 

01:24:42.480 --> 01:24:45.030 align:start position:0%
so fundamentally what's happening here
again<01:24:42.960><c> is</c>

01:24:45.030 --> 01:24:45.040 align:start position:0%
again is
 

01:24:45.040 --> 01:24:46.390 align:start position:0%
again is
basically<01:24:45.440><c> we're</c><01:24:45.520><c> going</c><01:24:45.679><c> to</c><01:24:45.760><c> see</c><01:24:45.920><c> an</c><01:24:46.080><c> issue</c>

01:24:46.390 --> 01:24:46.400 align:start position:0%
basically we're going to see an issue
 

01:24:46.400 --> 01:24:49.189 align:start position:0%
basically we're going to see an issue
anytime<01:24:46.800><c> we</c><01:24:46.960><c> use</c><01:24:47.199><c> a</c><01:24:47.280><c> variable</c><01:24:47.760><c> more</c><01:24:47.920><c> than</c><01:24:48.159><c> once</c>

01:24:49.189 --> 01:24:49.199 align:start position:0%
anytime we use a variable more than once
 

01:24:49.199 --> 01:24:51.030 align:start position:0%
anytime we use a variable more than once
until<01:24:49.520><c> now</c><01:24:49.920><c> in</c><01:24:50.000><c> these</c><01:24:50.159><c> expressions</c><01:24:50.639><c> above</c>

01:24:51.030 --> 01:24:51.040 align:start position:0%
until now in these expressions above
 

01:24:51.040 --> 01:24:53.189 align:start position:0%
until now in these expressions above
every<01:24:51.360><c> variable</c><01:24:51.760><c> is</c><01:24:51.920><c> used</c><01:24:52.239><c> exactly</c><01:24:52.639><c> once</c><01:24:53.040><c> so</c>

01:24:53.189 --> 01:24:53.199 align:start position:0%
every variable is used exactly once so
 

01:24:53.199 --> 01:24:54.950 align:start position:0%
every variable is used exactly once so
we<01:24:53.360><c> didn't</c><01:24:53.520><c> see</c><01:24:53.679><c> the</c><01:24:53.840><c> issue</c>

01:24:54.950 --> 01:24:54.960 align:start position:0%
we didn't see the issue
 

01:24:54.960 --> 01:24:56.629 align:start position:0%
we didn't see the issue
but<01:24:55.199><c> here</c><01:24:55.360><c> if</c><01:24:55.520><c> a</c><01:24:55.600><c> variable</c><01:24:56.000><c> is</c><01:24:56.080><c> used</c><01:24:56.320><c> more</c><01:24:56.480><c> than</c>

01:24:56.629 --> 01:24:56.639 align:start position:0%
but here if a variable is used more than
 

01:24:56.639 --> 01:24:57.910 align:start position:0%
but here if a variable is used more than
once<01:24:56.960><c> what's</c><01:24:57.199><c> going</c><01:24:57.360><c> to</c><01:24:57.440><c> happen</c><01:24:57.679><c> during</c>

01:24:57.910 --> 01:24:57.920 align:start position:0%
once what's going to happen during
 

01:24:57.920 --> 01:25:00.229 align:start position:0%
once what's going to happen during
backward<01:24:58.239><c> pass</c><01:24:59.040><c> we're</c><01:24:59.280><c> backpropagating</c><01:25:00.000><c> from</c>

01:25:00.229 --> 01:25:00.239 align:start position:0%
backward pass we're backpropagating from
 

01:25:00.239 --> 01:25:03.270 align:start position:0%
backward pass we're backpropagating from
f<01:25:00.800><c> to</c><01:25:01.040><c> e</c><01:25:01.199><c> to</c><01:25:01.360><c> d</c><01:25:01.679><c> so</c><01:25:01.840><c> far</c><01:25:02.000><c> so</c><01:25:02.239><c> good</c><01:25:02.800><c> but</c><01:25:03.040><c> now</c>

01:25:03.270 --> 01:25:03.280 align:start position:0%
f to e to d so far so good but now
 

01:25:03.280 --> 01:25:05.830 align:start position:0%
f to e to d so far so good but now
equals<01:25:03.760><c> it</c><01:25:03.840><c> backward</c><01:25:04.639><c> and</c><01:25:04.960><c> it</c><01:25:05.120><c> deposits</c><01:25:05.679><c> its</c>

01:25:05.830 --> 01:25:05.840 align:start position:0%
equals it backward and it deposits its
 

01:25:05.840 --> 01:25:07.990 align:start position:0%
equals it backward and it deposits its
gradients<01:25:06.400><c> to</c><01:25:06.560><c> a</c><01:25:06.719><c> and</c><01:25:06.800><c> b</c><01:25:07.440><c> but</c><01:25:07.600><c> then</c><01:25:07.679><c> we</c><01:25:07.840><c> come</c>

01:25:07.990 --> 01:25:08.000 align:start position:0%
gradients to a and b but then we come
 

01:25:08.000 --> 01:25:09.110 align:start position:0%
gradients to a and b but then we come
back<01:25:08.159><c> to</c><01:25:08.320><c> d</c>

01:25:09.110 --> 01:25:09.120 align:start position:0%
back to d
 

01:25:09.120 --> 01:25:11.430 align:start position:0%
back to d
and<01:25:09.360><c> call</c><01:25:09.600><c> backward</c><01:25:10.320><c> and</c><01:25:10.480><c> it</c><01:25:10.800><c> overwrites</c>

01:25:11.430 --> 01:25:11.440 align:start position:0%
and call backward and it overwrites
 

01:25:11.440 --> 01:25:14.470 align:start position:0%
and call backward and it overwrites
those<01:25:11.760><c> gradients</c><01:25:12.239><c> at</c><01:25:12.400><c> a</c><01:25:12.639><c> and</c><01:25:12.719><c> b</c>

01:25:14.470 --> 01:25:14.480 align:start position:0%
those gradients at a and b
 

01:25:14.480 --> 01:25:17.110 align:start position:0%
those gradients at a and b
so<01:25:14.960><c> that's</c><01:25:15.280><c> obviously</c><01:25:15.679><c> a</c><01:25:15.760><c> problem</c>

01:25:17.110 --> 01:25:17.120 align:start position:0%
so that's obviously a problem
 

01:25:17.120 --> 01:25:19.910 align:start position:0%
so that's obviously a problem
and<01:25:17.360><c> the</c><01:25:17.520><c> solution</c><01:25:18.000><c> here</c><01:25:18.400><c> if</c><01:25:18.560><c> you</c><01:25:18.880><c> look</c><01:25:19.120><c> at</c>

01:25:19.910 --> 01:25:19.920 align:start position:0%
and the solution here if you look at
 

01:25:19.920 --> 01:25:22.229 align:start position:0%
and the solution here if you look at
the<01:25:20.080><c> multivariate</c><01:25:21.199><c> case</c><01:25:21.520><c> of</c><01:25:21.600><c> the</c><01:25:21.760><c> chain</c><01:25:22.000><c> rule</c>

01:25:22.229 --> 01:25:22.239 align:start position:0%
the multivariate case of the chain rule
 

01:25:22.239 --> 01:25:23.910 align:start position:0%
the multivariate case of the chain rule
and<01:25:22.400><c> its</c><01:25:22.480><c> generalization</c><01:25:23.120><c> there</c>

01:25:23.910 --> 01:25:23.920 align:start position:0%
and its generalization there
 

01:25:23.920 --> 01:25:26.310 align:start position:0%
and its generalization there
the<01:25:24.080><c> solution</c><01:25:24.560><c> there</c><01:25:24.800><c> is</c><01:25:25.040><c> basically</c><01:25:25.679><c> that</c><01:25:25.920><c> we</c>

01:25:26.310 --> 01:25:26.320 align:start position:0%
the solution there is basically that we
 

01:25:26.320 --> 01:25:28.070 align:start position:0%
the solution there is basically that we
have<01:25:26.480><c> to</c><01:25:26.639><c> accumulate</c><01:25:27.199><c> these</c><01:25:27.360><c> gradients</c><01:25:27.840><c> these</c>

01:25:28.070 --> 01:25:28.080 align:start position:0%
have to accumulate these gradients these
 

01:25:28.080 --> 01:25:30.070 align:start position:0%
have to accumulate these gradients these
gradients<01:25:28.639><c> add</c>

01:25:30.070 --> 01:25:30.080 align:start position:0%
gradients add
 

01:25:30.080 --> 01:25:32.229 align:start position:0%
gradients add
and<01:25:30.320><c> so</c><01:25:30.960><c> instead</c><01:25:31.360><c> of</c><01:25:31.600><c> setting</c><01:25:32.000><c> those</c>

01:25:32.229 --> 01:25:32.239 align:start position:0%
and so instead of setting those
 

01:25:32.239 --> 01:25:34.629 align:start position:0%
and so instead of setting those
gradients

01:25:34.629 --> 01:25:34.639 align:start position:0%
gradients
 

01:25:34.639 --> 01:25:37.110 align:start position:0%
gradients
we<01:25:34.800><c> can</c><01:25:34.960><c> simply</c><01:25:35.280><c> do</c><01:25:35.679><c> plus</c><01:25:35.920><c> equals</c><01:25:36.719><c> we</c><01:25:36.880><c> need</c><01:25:37.040><c> to</c>

01:25:37.110 --> 01:25:37.120 align:start position:0%
we can simply do plus equals we need to
 

01:25:37.120 --> 01:25:39.110 align:start position:0%
we can simply do plus equals we need to
accumulate<01:25:37.679><c> those</c><01:25:37.840><c> gradients</c>

01:25:39.110 --> 01:25:39.120 align:start position:0%
accumulate those gradients
 

01:25:39.120 --> 01:25:41.910 align:start position:0%
accumulate those gradients
plus<01:25:39.440><c> equals</c><01:25:40.000><c> plus</c><01:25:40.239><c> equals</c>

01:25:41.910 --> 01:25:41.920 align:start position:0%
plus equals plus equals
 

01:25:41.920 --> 01:25:44.629 align:start position:0%
plus equals plus equals
plus<01:25:42.239><c> equals</c>

01:25:44.629 --> 01:25:44.639 align:start position:0%
 
 

01:25:44.639 --> 01:25:46.470 align:start position:0%
 
plus<01:25:44.960><c> equals</c>

01:25:46.470 --> 01:25:46.480 align:start position:0%
plus equals
 

01:25:46.480 --> 01:25:48.149 align:start position:0%
plus equals
and<01:25:46.800><c> this</c><01:25:46.960><c> will</c><01:25:47.120><c> be</c><01:25:47.280><c> okay</c><01:25:47.600><c> remember</c><01:25:47.920><c> because</c>

01:25:48.149 --> 01:25:48.159 align:start position:0%
and this will be okay remember because
 

01:25:48.159 --> 01:25:50.229 align:start position:0%
and this will be okay remember because
we<01:25:48.320><c> are</c><01:25:48.400><c> initializing</c><01:25:49.040><c> them</c><01:25:49.280><c> at</c><01:25:49.520><c> zero</c><01:25:49.920><c> so</c><01:25:50.080><c> they</c>

01:25:50.229 --> 01:25:50.239 align:start position:0%
we are initializing them at zero so they
 

01:25:50.239 --> 01:25:51.430 align:start position:0%
we are initializing them at zero so they
start<01:25:50.480><c> at</c><01:25:50.560><c> zero</c>

01:25:51.430 --> 01:25:51.440 align:start position:0%
start at zero
 

01:25:51.440 --> 01:25:53.350 align:start position:0%
start at zero
and<01:25:51.600><c> then</c><01:25:52.080><c> any</c>

01:25:53.350 --> 01:25:53.360 align:start position:0%
and then any
 

01:25:53.360 --> 01:25:54.870 align:start position:0%
and then any
contribution

01:25:54.870 --> 01:25:54.880 align:start position:0%
contribution
 

01:25:54.880 --> 01:25:57.189 align:start position:0%
contribution
that<01:25:55.040><c> flows</c><01:25:55.440><c> backwards</c>

01:25:57.189 --> 01:25:57.199 align:start position:0%
that flows backwards
 

01:25:57.199 --> 01:25:58.790 align:start position:0%
that flows backwards
will<01:25:57.440><c> simply</c><01:25:57.760><c> add</c>

01:25:58.790 --> 01:25:58.800 align:start position:0%
will simply add
 

01:25:58.800 --> 01:26:01.270 align:start position:0%
will simply add
so<01:25:58.960><c> now</c><01:25:59.280><c> if</c><01:25:59.440><c> we</c><01:25:59.600><c> redefine</c>

01:26:01.270 --> 01:26:01.280 align:start position:0%
so now if we redefine
 

01:26:01.280 --> 01:26:03.750 align:start position:0%
so now if we redefine
this<01:26:01.520><c> one</c>

01:26:03.750 --> 01:26:03.760 align:start position:0%
this one
 

01:26:03.760 --> 01:26:05.990 align:start position:0%
this one
because<01:26:04.000><c> the</c><01:26:04.159><c> plus</c><01:26:04.400><c> equals</c><01:26:04.719><c> this</c><01:26:04.880><c> now</c><01:26:05.120><c> works</c>

01:26:05.990 --> 01:26:06.000 align:start position:0%
because the plus equals this now works
 

01:26:06.000 --> 01:26:08.229 align:start position:0%
because the plus equals this now works
because<01:26:06.239><c> a.grad</c><01:26:06.880><c> started</c><01:26:07.280><c> at</c><01:26:07.360><c> zero</c><01:26:07.920><c> and</c><01:26:08.159><c> we</c>

01:26:08.229 --> 01:26:08.239 align:start position:0%
because a.grad started at zero and we
 

01:26:08.239 --> 01:26:11.110 align:start position:0%
because a.grad started at zero and we
called<01:26:08.480><c> beta</c><01:26:08.880><c> backward</c><01:26:09.600><c> we</c><01:26:09.760><c> deposit</c><01:26:10.800><c> one</c><01:26:11.040><c> and</c>

01:26:11.110 --> 01:26:11.120 align:start position:0%
called beta backward we deposit one and
 

01:26:11.120 --> 01:26:13.110 align:start position:0%
called beta backward we deposit one and
then<01:26:11.280><c> we</c><01:26:11.360><c> deposit</c><01:26:11.840><c> one</c><01:26:12.080><c> again</c><01:26:12.560><c> and</c><01:26:12.719><c> now</c><01:26:12.880><c> this</c>

01:26:13.110 --> 01:26:13.120 align:start position:0%
then we deposit one again and now this
 

01:26:13.120 --> 01:26:14.950 align:start position:0%
then we deposit one again and now this
is<01:26:13.280><c> two</c><01:26:13.600><c> which</c><01:26:13.840><c> is</c><01:26:13.920><c> correct</c>

01:26:14.950 --> 01:26:14.960 align:start position:0%
is two which is correct
 

01:26:14.960 --> 01:26:16.950 align:start position:0%
is two which is correct
and<01:26:15.120><c> here</c><01:26:15.360><c> this</c><01:26:15.520><c> will</c><01:26:15.760><c> also</c><01:26:16.000><c> work</c><01:26:16.639><c> and</c><01:26:16.800><c> we'll</c>

01:26:16.950 --> 01:26:16.960 align:start position:0%
and here this will also work and we'll
 

01:26:16.960 --> 01:26:18.390 align:start position:0%
and here this will also work and we'll
get<01:26:17.120><c> correct</c><01:26:17.440><c> gradients</c>

01:26:18.390 --> 01:26:18.400 align:start position:0%
get correct gradients
 

01:26:18.400 --> 01:26:20.149 align:start position:0%
get correct gradients
because<01:26:18.639><c> when</c><01:26:18.880><c> we</c><01:26:18.960><c> call</c><01:26:19.120><c> eta</c><01:26:19.440><c> backward</c><01:26:20.000><c> we</c>

01:26:20.149 --> 01:26:20.159 align:start position:0%
because when we call eta backward we
 

01:26:20.159 --> 01:26:21.590 align:start position:0%
because when we call eta backward we
will<01:26:20.320><c> deposit</c><01:26:20.800><c> the</c><01:26:20.960><c> gradients</c><01:26:21.280><c> from</c><01:26:21.440><c> this</c>

01:26:21.590 --> 01:26:21.600 align:start position:0%
will deposit the gradients from this
 

01:26:21.600 --> 01:26:23.750 align:start position:0%
will deposit the gradients from this
branch<01:26:22.320><c> and</c><01:26:22.400><c> then</c><01:26:22.560><c> we</c><01:26:22.719><c> get</c><01:26:22.880><c> to</c><01:26:23.040><c> back</c><01:26:23.440><c> into</c>

01:26:23.750 --> 01:26:23.760 align:start position:0%
branch and then we get to back into
 

01:26:23.760 --> 01:26:25.990 align:start position:0%
branch and then we get to back into
detail<01:26:24.159><c> backward</c><01:26:24.880><c> it</c><01:26:25.040><c> will</c><01:26:25.199><c> deposit</c><01:26:25.679><c> its</c><01:26:25.840><c> own</c>

01:26:25.990 --> 01:26:26.000 align:start position:0%
detail backward it will deposit its own
 

01:26:26.000 --> 01:26:28.149 align:start position:0%
detail backward it will deposit its own
gradients<01:26:26.960><c> and</c><01:26:27.040><c> then</c><01:26:27.280><c> those</c><01:26:27.440><c> gradients</c>

01:26:28.149 --> 01:26:28.159 align:start position:0%
gradients and then those gradients
 

01:26:28.159 --> 01:26:30.550 align:start position:0%
gradients and then those gradients
simply<01:26:28.480><c> add</c><01:26:28.719><c> on</c><01:26:28.800><c> top</c><01:26:29.040><c> of</c><01:26:29.199><c> each</c><01:26:29.360><c> other</c><01:26:30.000><c> and</c><01:26:30.239><c> so</c>

01:26:30.550 --> 01:26:30.560 align:start position:0%
simply add on top of each other and so
 

01:26:30.560 --> 01:26:31.910 align:start position:0%
simply add on top of each other and so
we<01:26:30.719><c> just</c><01:26:30.880><c> accumulate</c><01:26:31.360><c> those</c><01:26:31.520><c> gradients</c><01:26:31.840><c> and</c>

01:26:31.910 --> 01:26:31.920 align:start position:0%
we just accumulate those gradients and
 

01:26:31.920 --> 01:26:34.070 align:start position:0%
we just accumulate those gradients and
that<01:26:32.080><c> fixes</c><01:26:32.400><c> the</c><01:26:32.560><c> issue</c><01:26:33.280><c> okay</c><01:26:33.520><c> now</c><01:26:33.679><c> before</c><01:26:34.000><c> we</c>

01:26:34.070 --> 01:26:34.080 align:start position:0%
that fixes the issue okay now before we
 

01:26:34.080 --> 01:26:35.669 align:start position:0%
that fixes the issue okay now before we
move<01:26:34.320><c> on</c><01:26:34.560><c> let</c><01:26:34.719><c> me</c><01:26:34.880><c> actually</c><01:26:35.199><c> do</c><01:26:35.360><c> a</c><01:26:35.440><c> bit</c><01:26:35.600><c> of</c>

01:26:35.669 --> 01:26:35.679 align:start position:0%
move on let me actually do a bit of
 

01:26:35.679 --> 01:26:38.790 align:start position:0%
move on let me actually do a bit of
cleanup<01:26:36.080><c> here</c><01:26:36.400><c> and</c><01:26:36.880><c> delete</c><01:26:37.679><c> some</c><01:26:37.840><c> of</c><01:26:38.000><c> these</c>

01:26:38.790 --> 01:26:38.800 align:start position:0%
cleanup here and delete some of these
 

01:26:38.800 --> 01:26:41.189 align:start position:0%
cleanup here and delete some of these
some<01:26:39.040><c> of</c><01:26:39.040><c> this</c><01:26:39.199><c> intermediate</c><01:26:39.679><c> work</c><01:26:40.159><c> so</c>

01:26:41.189 --> 01:26:41.199 align:start position:0%
some of this intermediate work so
 

01:26:41.199 --> 01:26:42.709 align:start position:0%
some of this intermediate work so
we're<01:26:41.360><c> not</c><01:26:41.520><c> gonna</c><01:26:41.760><c> need</c><01:26:42.000><c> any</c><01:26:42.159><c> of</c><01:26:42.239><c> this</c><01:26:42.560><c> now</c>

01:26:42.709 --> 01:26:42.719 align:start position:0%
we're not gonna need any of this now
 

01:26:42.719 --> 01:26:44.790 align:start position:0%
we're not gonna need any of this now
that<01:26:42.880><c> we've</c><01:26:43.040><c> derived</c><01:26:43.520><c> all</c><01:26:43.600><c> of</c><01:26:43.760><c> it</c>

01:26:44.790 --> 01:26:44.800 align:start position:0%
that we've derived all of it
 

01:26:44.800 --> 01:26:45.669 align:start position:0%
that we've derived all of it
um

01:26:45.669 --> 01:26:45.679 align:start position:0%
um
 

01:26:45.679 --> 01:26:47.990 align:start position:0%
um
we<01:26:45.840><c> are</c><01:26:46.000><c> going</c><01:26:46.159><c> to</c><01:26:46.400><c> keep</c><01:26:47.040><c> this</c><01:26:47.600><c> because</c><01:26:47.840><c> i</c><01:26:47.920><c> want</c>

01:26:47.990 --> 01:26:48.000 align:start position:0%
we are going to keep this because i want
 

01:26:48.000 --> 01:26:49.669 align:start position:0%
we are going to keep this because i want
to<01:26:48.080><c> come</c><01:26:48.239><c> back</c><01:26:48.400><c> to</c><01:26:48.560><c> it</c>

01:26:49.669 --> 01:26:49.679 align:start position:0%
to come back to it
 

01:26:49.679 --> 01:26:51.270 align:start position:0%
to come back to it
delete<01:26:50.080><c> the</c><01:26:50.159><c> 10h</c>

01:26:51.270 --> 01:26:51.280 align:start position:0%
delete the 10h
 

01:26:51.280 --> 01:26:53.830 align:start position:0%
delete the 10h
delete<01:26:51.679><c> our</c><01:26:51.840><c> morning</c><01:26:52.400><c> example</c>

01:26:53.830 --> 01:26:53.840 align:start position:0%
delete our morning example
 

01:26:53.840 --> 01:26:55.830 align:start position:0%
delete our morning example
delete<01:26:54.239><c> the</c><01:26:54.400><c> step</c>

01:26:55.830 --> 01:26:55.840 align:start position:0%
delete the step
 

01:26:55.840 --> 01:26:59.669 align:start position:0%
delete the step
delete<01:26:56.239><c> this</c><01:26:56.880><c> keep</c><01:26:57.120><c> the</c><01:26:57.840><c> code</c><01:26:58.080><c> that</c><01:26:58.239><c> draws</c>

01:26:59.669 --> 01:26:59.679 align:start position:0%
delete this keep the code that draws
 

01:26:59.679 --> 01:27:02.070 align:start position:0%
delete this keep the code that draws
and<01:26:59.840><c> then</c><01:27:00.080><c> delete</c><01:27:00.560><c> this</c><01:27:00.719><c> example</c>

01:27:02.070 --> 01:27:02.080 align:start position:0%
and then delete this example
 

01:27:02.080 --> 01:27:03.830 align:start position:0%
and then delete this example
and<01:27:02.320><c> leave</c><01:27:02.560><c> behind</c><01:27:02.960><c> only</c><01:27:03.199><c> the</c><01:27:03.280><c> definition</c><01:27:03.679><c> of</c>

01:27:03.830 --> 01:27:03.840 align:start position:0%
and leave behind only the definition of
 

01:27:03.840 --> 01:27:05.270 align:start position:0%
and leave behind only the definition of
value

01:27:05.270 --> 01:27:05.280 align:start position:0%
value
 

01:27:05.280 --> 01:27:06.550 align:start position:0%
value
and<01:27:05.360><c> now</c><01:27:05.520><c> let's</c><01:27:05.760><c> come</c><01:27:05.920><c> back</c><01:27:06.080><c> to</c><01:27:06.320><c> this</c>

01:27:06.550 --> 01:27:06.560 align:start position:0%
and now let's come back to this
 

01:27:06.560 --> 01:27:08.149 align:start position:0%
and now let's come back to this
non-linearity<01:27:07.360><c> here</c><01:27:07.520><c> that</c><01:27:07.600><c> we</c><01:27:07.760><c> implemented</c>

01:27:08.149 --> 01:27:08.159 align:start position:0%
non-linearity here that we implemented
 

01:27:08.159 --> 01:27:10.709 align:start position:0%
non-linearity here that we implemented
the<01:27:08.320><c> tanh</c><01:27:09.280><c> now</c><01:27:09.520><c> i</c><01:27:09.600><c> told</c><01:27:09.760><c> you</c><01:27:09.920><c> that</c><01:27:10.320><c> we</c><01:27:10.480><c> could</c>

01:27:10.709 --> 01:27:10.719 align:start position:0%
the tanh now i told you that we could
 

01:27:10.719 --> 01:27:13.750 align:start position:0%
the tanh now i told you that we could
have<01:27:10.880><c> broken</c><01:27:11.280><c> down</c><01:27:11.600><c> 10h</c><01:27:12.080><c> into</c><01:27:12.480><c> its</c><01:27:13.120><c> explicit</c>

01:27:13.750 --> 01:27:13.760 align:start position:0%
have broken down 10h into its explicit
 

01:27:13.760 --> 01:27:15.990 align:start position:0%
have broken down 10h into its explicit
atoms<01:27:14.639><c> in</c><01:27:14.719><c> terms</c><01:27:14.960><c> of</c><01:27:15.120><c> other</c><01:27:15.360><c> expressions</c><01:27:15.840><c> if</c>

01:27:15.990 --> 01:27:16.000 align:start position:0%
atoms in terms of other expressions if
 

01:27:16.000 --> 01:27:18.310 align:start position:0%
atoms in terms of other expressions if
we<01:27:16.080><c> had</c><01:27:16.239><c> the</c><01:27:16.480><c> x</c><01:27:16.800><c> function</c><01:27:17.679><c> so</c><01:27:17.840><c> if</c><01:27:17.920><c> you</c><01:27:18.000><c> remember</c>

01:27:18.310 --> 01:27:18.320 align:start position:0%
we had the x function so if you remember
 

01:27:18.320 --> 01:27:20.550 align:start position:0%
we had the x function so if you remember
tan<01:27:18.560><c> h</c><01:27:18.719><c> is</c><01:27:18.800><c> defined</c><01:27:19.199><c> like</c><01:27:19.360><c> this</c><01:27:20.000><c> and</c><01:27:20.159><c> we</c><01:27:20.320><c> chose</c>

01:27:20.550 --> 01:27:20.560 align:start position:0%
tan h is defined like this and we chose
 

01:27:20.560 --> 01:27:22.870 align:start position:0%
tan h is defined like this and we chose
to<01:27:21.040><c> develop</c><01:27:21.360><c> tan</c><01:27:21.600><c> h</c><01:27:21.760><c> as</c><01:27:21.840><c> a</c><01:27:21.920><c> single</c><01:27:22.239><c> function</c>

01:27:22.870 --> 01:27:22.880 align:start position:0%
to develop tan h as a single function
 

01:27:22.880 --> 01:27:24.629 align:start position:0%
to develop tan h as a single function
and<01:27:23.360><c> we</c><01:27:23.520><c> can</c><01:27:23.679><c> do</c><01:27:23.760><c> that</c><01:27:23.920><c> because</c><01:27:24.159><c> we</c><01:27:24.320><c> know</c><01:27:24.480><c> its</c>

01:27:24.629 --> 01:27:24.639 align:start position:0%
and we can do that because we know its
 

01:27:24.639 --> 01:27:25.990 align:start position:0%
and we can do that because we know its
derivative<01:27:25.120><c> and</c><01:27:25.199><c> we</c><01:27:25.280><c> can</c><01:27:25.440><c> back</c><01:27:25.600><c> propagate</c>

01:27:25.990 --> 01:27:26.000 align:start position:0%
derivative and we can back propagate
 

01:27:26.000 --> 01:27:26.950 align:start position:0%
derivative and we can back propagate
through<01:27:26.239><c> it</c>

01:27:26.950 --> 01:27:26.960 align:start position:0%
through it
 

01:27:26.960 --> 01:27:29.189 align:start position:0%
through it
but<01:27:27.120><c> we</c><01:27:27.280><c> can</c><01:27:27.360><c> also</c><01:27:27.600><c> break</c><01:27:27.840><c> down</c><01:27:28.000><c> tan</c><01:27:28.239><c> h</c><01:27:28.480><c> into</c>

01:27:29.189 --> 01:27:29.199 align:start position:0%
but we can also break down tan h into
 

01:27:29.199 --> 01:27:31.430 align:start position:0%
but we can also break down tan h into
and<01:27:29.360><c> express</c><01:27:29.679><c> it</c><01:27:29.840><c> as</c><01:27:30.000><c> a</c><01:27:30.080><c> function</c><01:27:30.320><c> of</c><01:27:30.480><c> x</c><01:27:31.199><c> and</c><01:27:31.360><c> i</c>

01:27:31.430 --> 01:27:31.440 align:start position:0%
and express it as a function of x and i
 

01:27:31.440 --> 01:27:33.110 align:start position:0%
and express it as a function of x and i
would<01:27:31.600><c> like</c><01:27:31.679><c> to</c><01:27:31.760><c> do</c><01:27:31.920><c> that</c><01:27:32.159><c> now</c><01:27:32.480><c> because</c><01:27:32.880><c> i</c><01:27:32.960><c> want</c>

01:27:33.110 --> 01:27:33.120 align:start position:0%
would like to do that now because i want
 

01:27:33.120 --> 01:27:34.310 align:start position:0%
would like to do that now because i want
to<01:27:33.199><c> prove</c><01:27:33.440><c> to</c><01:27:33.520><c> you</c><01:27:33.679><c> that</c><01:27:33.760><c> you</c><01:27:33.920><c> get</c><01:27:34.080><c> all</c><01:27:34.159><c> the</c>

01:27:34.310 --> 01:27:34.320 align:start position:0%
to prove to you that you get all the
 

01:27:34.320 --> 01:27:36.790 align:start position:0%
to prove to you that you get all the
same<01:27:34.480><c> results</c><01:27:34.800><c> and</c><01:27:34.880><c> all</c><01:27:35.040><c> those</c><01:27:35.199><c> ingredients</c>

01:27:36.790 --> 01:27:36.800 align:start position:0%
same results and all those ingredients
 

01:27:36.800 --> 01:27:38.229 align:start position:0%
same results and all those ingredients
but<01:27:36.960><c> also</c><01:27:37.199><c> because</c><01:27:37.520><c> it</c><01:27:37.679><c> forces</c><01:27:38.000><c> us</c><01:27:38.159><c> to</c>

01:27:38.229 --> 01:27:38.239 align:start position:0%
but also because it forces us to
 

01:27:38.239 --> 01:27:39.990 align:start position:0%
but also because it forces us to
implement<01:27:38.560><c> a</c><01:27:38.639><c> few</c><01:27:38.800><c> more</c><01:27:39.120><c> expressions</c><01:27:39.840><c> it</c>

01:27:39.990 --> 01:27:40.000 align:start position:0%
implement a few more expressions it
 

01:27:40.000 --> 01:27:42.950 align:start position:0%
implement a few more expressions it
forces<01:27:40.480><c> us</c><01:27:40.639><c> to</c><01:27:40.880><c> do</c><01:27:41.120><c> exponentiation</c><01:27:42.480><c> addition</c>

01:27:42.950 --> 01:27:42.960 align:start position:0%
forces us to do exponentiation addition
 

01:27:42.960 --> 01:27:44.790 align:start position:0%
forces us to do exponentiation addition
subtraction<01:27:43.760><c> division</c><01:27:44.320><c> and</c><01:27:44.400><c> things</c><01:27:44.639><c> like</c>

01:27:44.790 --> 01:27:44.800 align:start position:0%
subtraction division and things like
 

01:27:44.800 --> 01:27:46.229 align:start position:0%
subtraction division and things like
that<01:27:45.120><c> and</c><01:27:45.199><c> i</c><01:27:45.280><c> think</c><01:27:45.440><c> it's</c><01:27:45.520><c> a</c><01:27:45.600><c> good</c><01:27:45.679><c> exercise</c><01:27:46.159><c> to</c>

01:27:46.229 --> 01:27:46.239 align:start position:0%
that and i think it's a good exercise to
 

01:27:46.239 --> 01:27:48.070 align:start position:0%
that and i think it's a good exercise to
go<01:27:46.400><c> through</c><01:27:46.560><c> a</c><01:27:46.639><c> few</c><01:27:46.880><c> more</c><01:27:47.040><c> of</c><01:27:47.120><c> these</c>

01:27:48.070 --> 01:27:48.080 align:start position:0%
go through a few more of these
 

01:27:48.080 --> 01:27:50.070 align:start position:0%
go through a few more of these
okay<01:27:48.239><c> so</c><01:27:48.400><c> let's</c><01:27:48.639><c> scroll</c><01:27:48.960><c> up</c>

01:27:50.070 --> 01:27:50.080 align:start position:0%
okay so let's scroll up
 

01:27:50.080 --> 01:27:52.149 align:start position:0%
okay so let's scroll up
to<01:27:50.239><c> the</c><01:27:50.320><c> definition</c><01:27:50.800><c> of</c><01:27:50.880><c> value</c>

01:27:52.149 --> 01:27:52.159 align:start position:0%
to the definition of value
 

01:27:52.159 --> 01:27:53.830 align:start position:0%
to the definition of value
and<01:27:52.320><c> here</c><01:27:52.639><c> one</c><01:27:52.800><c> thing</c><01:27:52.960><c> that</c><01:27:53.360><c> we</c><01:27:53.520><c> currently</c>

01:27:53.830 --> 01:27:53.840 align:start position:0%
and here one thing that we currently
 

01:27:53.840 --> 01:27:56.629 align:start position:0%
and here one thing that we currently
can't<01:27:54.080><c> do</c><01:27:54.320><c> is</c><01:27:54.400><c> we</c><01:27:54.560><c> can</c><01:27:54.639><c> do</c><01:27:54.800><c> like</c><01:27:55.040><c> a</c><01:27:55.120><c> value</c><01:27:55.679><c> of</c>

01:27:56.629 --> 01:27:56.639 align:start position:0%
can't do is we can do like a value of
 

01:27:56.639 --> 01:27:58.390 align:start position:0%
can't do is we can do like a value of
say<01:27:56.880><c> 2.0</c>

01:27:58.390 --> 01:27:58.400 align:start position:0%
say 2.0
 

01:27:58.400 --> 01:28:00.390 align:start position:0%
say 2.0
but<01:27:58.560><c> we</c><01:27:58.719><c> can't</c><01:27:59.040><c> do</c><01:27:59.840><c> you</c><01:28:00.000><c> know</c><01:28:00.080><c> here</c><01:28:00.320><c> for</c>

01:28:00.390 --> 01:28:00.400 align:start position:0%
but we can't do you know here for
 

01:28:00.400 --> 01:28:02.550 align:start position:0%
but we can't do you know here for
example<01:28:00.639><c> we</c><01:28:00.719><c> want</c><01:28:00.880><c> to</c><01:28:01.040><c> add</c><01:28:01.360><c> constant</c><01:28:01.920><c> one</c><01:28:02.400><c> and</c>

01:28:02.550 --> 01:28:02.560 align:start position:0%
example we want to add constant one and
 

01:28:02.560 --> 01:28:05.110 align:start position:0%
example we want to add constant one and
we<01:28:02.719><c> can't</c><01:28:02.960><c> do</c><01:28:03.199><c> something</c><01:28:03.520><c> like</c><01:28:03.679><c> this</c>

01:28:05.110 --> 01:28:05.120 align:start position:0%
we can't do something like this
 

01:28:05.120 --> 01:28:06.950 align:start position:0%
we can't do something like this
and<01:28:05.280><c> we</c><01:28:05.440><c> can't</c><01:28:05.679><c> do</c><01:28:05.840><c> it</c><01:28:06.000><c> because</c><01:28:06.320><c> it</c><01:28:06.480><c> says</c>

01:28:06.950 --> 01:28:06.960 align:start position:0%
and we can't do it because it says
 

01:28:06.960 --> 01:28:08.709 align:start position:0%
and we can't do it because it says
object<01:28:07.280><c> has</c><01:28:07.360><c> no</c><01:28:07.520><c> attribute</c><01:28:07.920><c> data</c><01:28:08.480><c> that's</c>

01:28:08.709 --> 01:28:08.719 align:start position:0%
object has no attribute data that's
 

01:28:08.719 --> 01:28:11.110 align:start position:0%
object has no attribute data that's
because<01:28:08.960><c> a</c><01:28:09.199><c> plus</c><01:28:09.440><c> one</c><01:28:10.159><c> comes</c><01:28:10.480><c> right</c><01:28:10.639><c> here</c><01:28:10.880><c> to</c>

01:28:11.110 --> 01:28:11.120 align:start position:0%
because a plus one comes right here to
 

01:28:11.120 --> 01:28:12.070 align:start position:0%
because a plus one comes right here to
add

01:28:12.070 --> 01:28:12.080 align:start position:0%
add
 

01:28:12.080 --> 01:28:14.870 align:start position:0%
add
and<01:28:12.159><c> then</c><01:28:12.719><c> other</c><01:28:13.120><c> is</c><01:28:13.280><c> the</c><01:28:13.600><c> integer</c><01:28:14.000><c> one</c><01:28:14.800><c> and</c>

01:28:14.870 --> 01:28:14.880 align:start position:0%
and then other is the integer one and
 

01:28:14.880 --> 01:28:16.550 align:start position:0%
and then other is the integer one and
then<01:28:15.120><c> here</c><01:28:15.360><c> python</c><01:28:15.760><c> is</c><01:28:15.840><c> trying</c><01:28:16.000><c> to</c><01:28:16.159><c> access</c>

01:28:16.550 --> 01:28:16.560 align:start position:0%
then here python is trying to access
 

01:28:16.560 --> 01:28:18.709 align:start position:0%
then here python is trying to access
one.data<01:28:17.360><c> and</c><01:28:17.440><c> that's</c><01:28:17.600><c> not</c><01:28:17.840><c> a</c><01:28:17.920><c> thing</c><01:28:18.560><c> and</c>

01:28:18.709 --> 01:28:18.719 align:start position:0%
one.data and that's not a thing and
 

01:28:18.719 --> 01:28:20.470 align:start position:0%
one.data and that's not a thing and
that's<01:28:18.880><c> because</c><01:28:19.120><c> basically</c><01:28:19.679><c> one</c><01:28:19.920><c> is</c><01:28:20.080><c> not</c><01:28:20.320><c> a</c>

01:28:20.470 --> 01:28:20.480 align:start position:0%
that's because basically one is not a
 

01:28:20.480 --> 01:28:22.229 align:start position:0%
that's because basically one is not a
value<01:28:20.800><c> object</c><01:28:21.280><c> and</c><01:28:21.440><c> we</c><01:28:21.520><c> only</c><01:28:21.760><c> have</c><01:28:21.840><c> addition</c>

01:28:22.229 --> 01:28:22.239 align:start position:0%
value object and we only have addition
 

01:28:22.239 --> 01:28:24.790 align:start position:0%
value object and we only have addition
for<01:28:22.400><c> value</c><01:28:22.880><c> objects</c><01:28:23.840><c> so</c><01:28:24.000><c> as</c><01:28:24.239><c> a</c><01:28:24.480><c> matter</c><01:28:24.719><c> of</c>

01:28:24.790 --> 01:28:24.800 align:start position:0%
for value objects so as a matter of
 

01:28:24.800 --> 01:28:26.790 align:start position:0%
for value objects so as a matter of
convenience<01:28:25.280><c> so</c><01:28:25.440><c> that</c><01:28:25.600><c> we</c><01:28:25.679><c> can</c><01:28:26.080><c> create</c>

01:28:26.790 --> 01:28:26.800 align:start position:0%
convenience so that we can create
 

01:28:26.800 --> 01:28:28.229 align:start position:0%
convenience so that we can create
expressions<01:28:27.280><c> like</c><01:28:27.440><c> this</c><01:28:27.679><c> and</c><01:28:27.760><c> make</c><01:28:27.920><c> them</c><01:28:28.080><c> make</c>

01:28:28.229 --> 01:28:28.239 align:start position:0%
expressions like this and make them make
 

01:28:28.239 --> 01:28:29.110 align:start position:0%
expressions like this and make them make
sense

01:28:29.110 --> 01:28:29.120 align:start position:0%
sense
 

01:28:29.120 --> 01:28:32.310 align:start position:0%
sense
we<01:28:29.280><c> can</c><01:28:29.440><c> simply</c><01:28:29.760><c> do</c><01:28:29.920><c> something</c><01:28:30.239><c> like</c><01:28:30.400><c> this</c>

01:28:32.310 --> 01:28:32.320 align:start position:0%
we can simply do something like this
 

01:28:32.320 --> 01:28:33.669 align:start position:0%
we can simply do something like this
basically

01:28:33.669 --> 01:28:33.679 align:start position:0%
basically
 

01:28:33.679 --> 01:28:35.910 align:start position:0%
basically
we<01:28:33.840><c> let</c><01:28:34.159><c> other</c><01:28:34.560><c> alone</c><01:28:35.199><c> if</c><01:28:35.360><c> other</c><01:28:35.679><c> is</c><01:28:35.760><c> an</c>

01:28:35.910 --> 01:28:35.920 align:start position:0%
we let other alone if other is an
 

01:28:35.920 --> 01:28:37.750 align:start position:0%
we let other alone if other is an
instance<01:28:36.320><c> of</c><01:28:36.480><c> value</c><01:28:37.040><c> but</c><01:28:37.199><c> if</c><01:28:37.360><c> it's</c><01:28:37.440><c> not</c><01:28:37.600><c> an</c>

01:28:37.750 --> 01:28:37.760 align:start position:0%
instance of value but if it's not an
 

01:28:37.760 --> 01:28:39.030 align:start position:0%
instance of value but if it's not an
instance<01:28:38.080><c> of</c><01:28:38.159><c> value</c><01:28:38.400><c> we're</c><01:28:38.560><c> going</c><01:28:38.719><c> to</c><01:28:38.800><c> assume</c>

01:28:39.030 --> 01:28:39.040 align:start position:0%
instance of value we're going to assume
 

01:28:39.040 --> 01:28:40.870 align:start position:0%
instance of value we're going to assume
that<01:28:39.199><c> it's</c><01:28:39.360><c> a</c><01:28:39.440><c> number</c><01:28:39.679><c> like</c><01:28:39.840><c> an</c><01:28:39.920><c> integer</c><01:28:40.400><c> float</c>

01:28:40.870 --> 01:28:40.880 align:start position:0%
that it's a number like an integer float
 

01:28:40.880 --> 01:28:43.350 align:start position:0%
that it's a number like an integer float
and<01:28:40.960><c> we're</c><01:28:41.120><c> going</c><01:28:41.280><c> to</c><01:28:41.440><c> simply</c><01:28:41.840><c> wrap</c><01:28:42.159><c> it</c><01:28:42.480><c> in</c><01:28:43.040><c> in</c>

01:28:43.350 --> 01:28:43.360 align:start position:0%
and we're going to simply wrap it in in
 

01:28:43.360 --> 01:28:45.189 align:start position:0%
and we're going to simply wrap it in in
value<01:28:44.080><c> and</c><01:28:44.159><c> then</c><01:28:44.400><c> other</c><01:28:44.560><c> will</c><01:28:44.719><c> just</c><01:28:44.880><c> become</c>

01:28:45.189 --> 01:28:45.199 align:start position:0%
value and then other will just become
 

01:28:45.199 --> 01:28:46.870 align:start position:0%
value and then other will just become
value<01:28:45.520><c> of</c><01:28:45.679><c> other</c><01:28:45.920><c> and</c><01:28:46.080><c> then</c><01:28:46.239><c> other</c><01:28:46.480><c> will</c><01:28:46.719><c> have</c>

01:28:46.870 --> 01:28:46.880 align:start position:0%
value of other and then other will have
 

01:28:46.880 --> 01:28:49.270 align:start position:0%
value of other and then other will have
a<01:28:46.960><c> data</c><01:28:47.280><c> attribute</c><01:28:48.000><c> and</c><01:28:48.159><c> this</c><01:28:48.320><c> should</c><01:28:48.560><c> work</c><01:28:49.120><c> so</c>

01:28:49.270 --> 01:28:49.280 align:start position:0%
a data attribute and this should work so
 

01:28:49.280 --> 01:28:51.830 align:start position:0%
a data attribute and this should work so
if<01:28:49.440><c> i</c><01:28:49.520><c> just</c><01:28:49.679><c> say</c><01:28:49.840><c> this</c><01:28:50.320><c> predefined</c><01:28:50.960><c> value</c><01:28:51.600><c> then</c>

01:28:51.830 --> 01:28:51.840 align:start position:0%
if i just say this predefined value then
 

01:28:51.840 --> 01:28:53.189 align:start position:0%
if i just say this predefined value then
this<01:28:52.080><c> should</c><01:28:52.320><c> work</c>

01:28:53.189 --> 01:28:53.199 align:start position:0%
this should work
 

01:28:53.199 --> 01:28:55.270 align:start position:0%
this should work
there<01:28:53.360><c> we</c><01:28:53.520><c> go</c><01:28:54.159><c> okay</c><01:28:54.480><c> now</c><01:28:54.639><c> let's</c><01:28:54.800><c> do</c><01:28:54.960><c> the</c><01:28:55.040><c> exact</c>

01:28:55.270 --> 01:28:55.280 align:start position:0%
there we go okay now let's do the exact
 

01:28:55.280 --> 01:28:57.189 align:start position:0%
there we go okay now let's do the exact
same<01:28:55.520><c> thing</c><01:28:55.679><c> for</c><01:28:55.840><c> multiply</c><01:28:56.560><c> because</c><01:28:56.880><c> we</c><01:28:56.960><c> can't</c>

01:28:57.189 --> 01:28:57.199 align:start position:0%
same thing for multiply because we can't
 

01:28:57.199 --> 01:28:58.870 align:start position:0%
same thing for multiply because we can't
do<01:28:57.360><c> something</c><01:28:57.679><c> like</c><01:28:57.840><c> this</c>

01:28:58.870 --> 01:28:58.880 align:start position:0%
do something like this
 

01:28:58.880 --> 01:28:59.750 align:start position:0%
do something like this
again

01:28:59.750 --> 01:28:59.760 align:start position:0%
again
 

01:28:59.760 --> 01:29:01.669 align:start position:0%
again
for<01:28:59.920><c> the</c><01:29:00.080><c> exact</c><01:29:00.320><c> same</c><01:29:00.560><c> reason</c><01:29:01.199><c> so</c><01:29:01.360><c> we</c><01:29:01.520><c> just</c>

01:29:01.669 --> 01:29:01.679 align:start position:0%
for the exact same reason so we just
 

01:29:01.679 --> 01:29:04.950 align:start position:0%
for the exact same reason so we just
have<01:29:01.760><c> to</c><01:29:01.840><c> go</c><01:29:02.000><c> to</c><01:29:02.159><c> mole</c><01:29:02.800><c> and</c><01:29:03.520><c> if</c><01:29:03.760><c> other</c><01:29:04.080><c> is</c>

01:29:04.950 --> 01:29:04.960 align:start position:0%
have to go to mole and if other is
 

01:29:04.960 --> 01:29:07.510 align:start position:0%
have to go to mole and if other is
not<01:29:05.199><c> a</c><01:29:05.280><c> value</c><01:29:05.600><c> then</c><01:29:05.840><c> let's</c><01:29:06.080><c> wrap</c><01:29:06.320><c> it</c><01:29:06.480><c> in</c><01:29:06.639><c> value</c>

01:29:07.510 --> 01:29:07.520 align:start position:0%
not a value then let's wrap it in value
 

01:29:07.520 --> 01:29:10.470 align:start position:0%
not a value then let's wrap it in value
let's<01:29:07.760><c> redefine</c><01:29:08.320><c> value</c><01:29:08.800><c> and</c><01:29:08.960><c> now</c><01:29:09.199><c> this</c><01:29:09.360><c> works</c>

01:29:10.470 --> 01:29:10.480 align:start position:0%
let's redefine value and now this works
 

01:29:10.480 --> 01:29:12.790 align:start position:0%
let's redefine value and now this works
now<01:29:10.639><c> here's</c><01:29:10.960><c> a</c><01:29:11.040><c> kind</c><01:29:11.199><c> of</c><01:29:11.360><c> unfortunate</c><01:29:12.080><c> and</c><01:29:12.560><c> not</c>

01:29:12.790 --> 01:29:12.800 align:start position:0%
now here's a kind of unfortunate and not
 

01:29:12.800 --> 01:29:15.270 align:start position:0%
now here's a kind of unfortunate and not
obvious<01:29:13.199><c> part</c><01:29:13.840><c> a</c><01:29:14.000><c> times</c><01:29:14.320><c> two</c><01:29:14.480><c> works</c><01:29:14.880><c> we</c><01:29:15.040><c> saw</c>

01:29:15.270 --> 01:29:15.280 align:start position:0%
obvious part a times two works we saw
 

01:29:15.280 --> 01:29:19.590 align:start position:0%
obvious part a times two works we saw
that<01:29:15.920><c> but</c><01:29:16.320><c> two</c><01:29:16.560><c> times</c><01:29:16.880><c> a</c><01:29:17.520><c> is</c><01:29:17.679><c> that</c><01:29:17.920><c> gonna</c><01:29:18.080><c> work</c>

01:29:19.590 --> 01:29:19.600 align:start position:0%
that but two times a is that gonna work
 

01:29:19.600 --> 01:29:21.910 align:start position:0%
that but two times a is that gonna work
you'd<01:29:19.920><c> expect</c><01:29:20.239><c> it</c><01:29:20.320><c> to</c><01:29:20.480><c> right</c><01:29:21.199><c> but</c><01:29:21.440><c> actually</c><01:29:21.760><c> it</c>

01:29:21.910 --> 01:29:21.920 align:start position:0%
you'd expect it to right but actually it
 

01:29:21.920 --> 01:29:22.950 align:start position:0%
you'd expect it to right but actually it
will<01:29:22.159><c> not</c>

01:29:22.950 --> 01:29:22.960 align:start position:0%
will not
 

01:29:22.960 --> 01:29:24.229 align:start position:0%
will not
and<01:29:23.120><c> the</c><01:29:23.199><c> reason</c><01:29:23.520><c> it</c><01:29:23.600><c> won't</c><01:29:23.840><c> is</c><01:29:23.920><c> because</c>

01:29:24.229 --> 01:29:24.239 align:start position:0%
and the reason it won't is because
 

01:29:24.239 --> 01:29:26.070 align:start position:0%
and the reason it won't is because
python<01:29:24.800><c> doesn't</c><01:29:25.120><c> know</c>

01:29:26.070 --> 01:29:26.080 align:start position:0%
python doesn't know
 

01:29:26.080 --> 01:29:28.470 align:start position:0%
python doesn't know
like<01:29:26.239><c> when</c><01:29:26.480><c> when</c><01:29:26.639><c> you</c><01:29:26.719><c> do</c><01:29:26.880><c> a</c><01:29:27.040><c> times</c><01:29:27.360><c> two</c>

01:29:28.470 --> 01:29:28.480 align:start position:0%
like when when you do a times two
 

01:29:28.480 --> 01:29:31.430 align:start position:0%
like when when you do a times two
basically<01:29:29.040><c> um</c><01:29:29.600><c> so</c><01:29:29.840><c> a</c><01:29:30.080><c> times</c><01:29:30.320><c> two</c><01:29:30.800><c> python</c><01:29:31.280><c> will</c>

01:29:31.430 --> 01:29:31.440 align:start position:0%
basically um so a times two python will
 

01:29:31.440 --> 01:29:32.870 align:start position:0%
basically um so a times two python will
go<01:29:31.679><c> and</c><01:29:31.760><c> it</c><01:29:31.840><c> will</c><01:29:32.080><c> basically</c><01:29:32.400><c> do</c><01:29:32.560><c> something</c>

01:29:32.870 --> 01:29:32.880 align:start position:0%
go and it will basically do something
 

01:29:32.880 --> 01:29:34.709 align:start position:0%
go and it will basically do something
like<01:29:33.199><c> a</c><01:29:33.600><c> dot</c><01:29:33.920><c> mul</c>

01:29:34.709 --> 01:29:34.719 align:start position:0%
like a dot mul
 

01:29:34.719 --> 01:29:36.550 align:start position:0%
like a dot mul
of<01:29:35.280><c> two</c><01:29:35.679><c> that's</c><01:29:35.840><c> basically</c><01:29:36.159><c> what</c><01:29:36.320><c> it</c><01:29:36.400><c> will</c>

01:29:36.550 --> 01:29:36.560 align:start position:0%
of two that's basically what it will
 

01:29:36.560 --> 01:29:39.669 align:start position:0%
of two that's basically what it will
call<01:29:37.120><c> but</c><01:29:37.360><c> to</c><01:29:37.600><c> it</c><01:29:38.000><c> 2</c><01:29:38.239><c> times</c><01:29:38.560><c> a</c><01:29:38.880><c> is</c><01:29:39.040><c> the</c><01:29:39.199><c> same</c><01:29:39.440><c> as</c>

01:29:39.669 --> 01:29:39.679 align:start position:0%
call but to it 2 times a is the same as
 

01:29:39.679 --> 01:29:41.830 align:start position:0%
call but to it 2 times a is the same as
2<01:29:39.920><c> dot</c><01:29:40.239><c> mol</c><01:29:40.800><c> of</c><01:29:41.040><c> a</c>

01:29:41.830 --> 01:29:41.840 align:start position:0%
2 dot mol of a
 

01:29:41.840 --> 01:29:44.950 align:start position:0%
2 dot mol of a
and<01:29:42.159><c> it</c><01:29:42.239><c> doesn't</c><01:29:42.880><c> 2</c><01:29:43.199><c> can't</c><01:29:43.440><c> multiply</c>

01:29:44.950 --> 01:29:44.960 align:start position:0%
and it doesn't 2 can't multiply
 

01:29:44.960 --> 01:29:46.629 align:start position:0%
and it doesn't 2 can't multiply
value<01:29:45.440><c> and</c><01:29:45.600><c> so</c><01:29:45.760><c> it's</c><01:29:45.840><c> really</c><01:29:46.080><c> confused</c><01:29:46.400><c> about</c>

01:29:46.629 --> 01:29:46.639 align:start position:0%
value and so it's really confused about
 

01:29:46.639 --> 01:29:47.350 align:start position:0%
value and so it's really confused about
that

01:29:47.350 --> 01:29:47.360 align:start position:0%
that
 

01:29:47.360 --> 01:29:49.189 align:start position:0%
that
so<01:29:47.600><c> instead</c><01:29:48.000><c> what</c><01:29:48.239><c> happens</c><01:29:48.560><c> is</c><01:29:48.719><c> in</c><01:29:48.800><c> python</c><01:29:49.120><c> the</c>

01:29:49.189 --> 01:29:49.199 align:start position:0%
so instead what happens is in python the
 

01:29:49.199 --> 01:29:51.750 align:start position:0%
so instead what happens is in python the
way<01:29:49.360><c> this</c><01:29:49.520><c> works</c><01:29:49.840><c> is</c><01:29:50.000><c> you</c><01:29:50.239><c> are</c><01:29:50.400><c> free</c><01:29:50.639><c> to</c><01:29:50.800><c> define</c>

01:29:51.750 --> 01:29:51.760 align:start position:0%
way this works is you are free to define
 

01:29:51.760 --> 01:29:54.310 align:start position:0%
way this works is you are free to define
something<01:29:52.159><c> called</c><01:29:52.560><c> the</c><01:29:52.800><c> r</c><01:29:52.960><c> mold</c>

01:29:54.310 --> 01:29:54.320 align:start position:0%
something called the r mold
 

01:29:54.320 --> 01:29:55.830 align:start position:0%
something called the r mold
and<01:29:54.719><c> our</c><01:29:54.880><c> mole</c>

01:29:55.830 --> 01:29:55.840 align:start position:0%
and our mole
 

01:29:55.840 --> 01:29:58.310 align:start position:0%
and our mole
is<01:29:56.000><c> kind</c><01:29:56.159><c> of</c><01:29:56.239><c> like</c><01:29:56.480><c> a</c><01:29:56.560><c> fallback</c><01:29:57.199><c> so</c><01:29:57.360><c> if</c><01:29:57.920><c> python</c>

01:29:58.310 --> 01:29:58.320 align:start position:0%
is kind of like a fallback so if python
 

01:29:58.320 --> 01:30:02.390 align:start position:0%
is kind of like a fallback so if python
can't<01:29:58.639><c> do</c><01:29:58.800><c> 2</c><01:29:59.040><c> times</c><01:29:59.360><c> a</c><01:29:59.920><c> it</c><01:30:00.080><c> will</c><01:30:00.320><c> check</c><01:30:00.800><c> if</c><01:30:01.440><c> um</c>

01:30:02.390 --> 01:30:02.400 align:start position:0%
can't do 2 times a it will check if um
 

01:30:02.400 --> 01:30:05.030 align:start position:0%
can't do 2 times a it will check if um
if<01:30:02.639><c> by</c><01:30:02.880><c> any</c><01:30:03.040><c> chance</c><01:30:03.679><c> a</c><01:30:03.920><c> knows</c><01:30:04.159><c> how</c><01:30:04.320><c> to</c><01:30:04.400><c> multiply</c>

01:30:05.030 --> 01:30:05.040 align:start position:0%
if by any chance a knows how to multiply
 

01:30:05.040 --> 01:30:07.189 align:start position:0%
if by any chance a knows how to multiply
two<01:30:05.679><c> and</c><01:30:05.920><c> that</c><01:30:06.080><c> will</c><01:30:06.239><c> be</c><01:30:06.400><c> called</c><01:30:06.719><c> into</c><01:30:07.040><c> our</c>

01:30:07.189 --> 01:30:07.199 align:start position:0%
two and that will be called into our
 

01:30:07.199 --> 01:30:08.790 align:start position:0%
two and that will be called into our
mole

01:30:08.790 --> 01:30:08.800 align:start position:0%
mole
 

01:30:08.800 --> 01:30:11.189 align:start position:0%
mole
so<01:30:09.360><c> because</c><01:30:09.760><c> python</c><01:30:10.239><c> can't</c><01:30:10.480><c> do</c><01:30:10.639><c> two</c><01:30:10.800><c> times</c><01:30:11.040><c> a</c>

01:30:11.189 --> 01:30:11.199 align:start position:0%
so because python can't do two times a
 

01:30:11.199 --> 01:30:12.790 align:start position:0%
so because python can't do two times a
it<01:30:11.280><c> will</c><01:30:11.440><c> check</c><01:30:11.760><c> is</c><01:30:11.840><c> there</c><01:30:12.000><c> an</c><01:30:12.159><c> our</c><01:30:12.320><c> mole</c><01:30:12.719><c> in</c>

01:30:12.790 --> 01:30:12.800 align:start position:0%
it will check is there an our mole in
 

01:30:12.800 --> 01:30:15.350 align:start position:0%
it will check is there an our mole in
value<01:30:13.520><c> and</c><01:30:13.679><c> because</c><01:30:14.000><c> there</c><01:30:14.239><c> is</c><01:30:14.800><c> it</c><01:30:14.960><c> will</c><01:30:15.120><c> now</c>

01:30:15.350 --> 01:30:15.360 align:start position:0%
value and because there is it will now
 

01:30:15.360 --> 01:30:16.790 align:start position:0%
value and because there is it will now
call<01:30:15.679><c> that</c>

01:30:16.790 --> 01:30:16.800 align:start position:0%
call that
 

01:30:16.800 --> 01:30:18.950 align:start position:0%
call that
and<01:30:16.960><c> what</c><01:30:17.120><c> we'll</c><01:30:17.280><c> do</c><01:30:17.520><c> here</c><01:30:18.080><c> is</c><01:30:18.239><c> we</c><01:30:18.400><c> will</c><01:30:18.639><c> swap</c>

01:30:18.950 --> 01:30:18.960 align:start position:0%
and what we'll do here is we will swap
 

01:30:18.960 --> 01:30:21.350 align:start position:0%
and what we'll do here is we will swap
the<01:30:19.040><c> order</c><01:30:19.280><c> of</c><01:30:19.440><c> the</c><01:30:19.520><c> operands</c><01:30:20.400><c> so</c><01:30:20.560><c> basically</c>

01:30:21.350 --> 01:30:21.360 align:start position:0%
the order of the operands so basically
 

01:30:21.360 --> 01:30:23.510 align:start position:0%
the order of the operands so basically
two<01:30:21.520><c> times</c><01:30:21.840><c> a</c><01:30:22.000><c> will</c><01:30:22.159><c> redirect</c><01:30:22.560><c> to</c><01:30:22.719><c> armel</c><01:30:23.280><c> and</c>

01:30:23.510 --> 01:30:23.520 align:start position:0%
two times a will redirect to armel and
 

01:30:23.520 --> 01:30:26.070 align:start position:0%
two times a will redirect to armel and
our<01:30:23.679><c> mole</c><01:30:23.840><c> will</c><01:30:24.159><c> basically</c><01:30:24.639><c> call</c><01:30:24.880><c> a</c><01:30:25.040><c> times</c><01:30:25.280><c> two</c>

01:30:26.070 --> 01:30:26.080 align:start position:0%
our mole will basically call a times two
 

01:30:26.080 --> 01:30:28.310 align:start position:0%
our mole will basically call a times two
and<01:30:26.239><c> that's</c><01:30:26.480><c> how</c><01:30:26.639><c> that</c><01:30:26.800><c> will</c><01:30:26.960><c> work</c>

01:30:28.310 --> 01:30:28.320 align:start position:0%
and that's how that will work
 

01:30:28.320 --> 01:30:29.030 align:start position:0%
and that's how that will work
so

01:30:29.030 --> 01:30:29.040 align:start position:0%
so
 

01:30:29.040 --> 01:30:31.189 align:start position:0%
so
redefining<01:30:29.600><c> now</c><01:30:29.760><c> with</c><01:30:29.920><c> armor</c><01:30:30.560><c> two</c><01:30:30.719><c> times</c><01:30:31.040><c> a</c>

01:30:31.189 --> 01:30:31.199 align:start position:0%
redefining now with armor two times a
 

01:30:31.199 --> 01:30:33.510 align:start position:0%
redefining now with armor two times a
becomes<01:30:31.840><c> four</c><01:30:32.480><c> okay</c><01:30:32.719><c> now</c><01:30:32.880><c> looking</c><01:30:33.199><c> at</c><01:30:33.360><c> the</c>

01:30:33.510 --> 01:30:33.520 align:start position:0%
becomes four okay now looking at the
 

01:30:33.520 --> 01:30:34.870 align:start position:0%
becomes four okay now looking at the
other<01:30:33.760><c> elements</c><01:30:34.080><c> that</c><01:30:34.159><c> we</c><01:30:34.320><c> still</c><01:30:34.480><c> need</c><01:30:34.800><c> we</c>

01:30:34.870 --> 01:30:34.880 align:start position:0%
other elements that we still need we
 

01:30:34.880 --> 01:30:36.229 align:start position:0%
other elements that we still need we
need<01:30:35.040><c> to</c><01:30:35.120><c> know</c><01:30:35.199><c> how</c><01:30:35.360><c> to</c><01:30:35.440><c> exponentiate</c><01:30:36.000><c> and</c><01:30:36.080><c> how</c>

01:30:36.229 --> 01:30:36.239 align:start position:0%
need to know how to exponentiate and how
 

01:30:36.239 --> 01:30:38.390 align:start position:0%
need to know how to exponentiate and how
to<01:30:36.320><c> divide</c><01:30:37.040><c> so</c><01:30:37.199><c> let's</c><01:30:37.440><c> first</c><01:30:37.679><c> the</c><01:30:37.760><c> explanation</c>

01:30:38.390 --> 01:30:38.400 align:start position:0%
to divide so let's first the explanation
 

01:30:38.400 --> 01:30:40.470 align:start position:0%
to divide so let's first the explanation
to<01:30:38.639><c> the</c><01:30:38.800><c> exponentiation</c><01:30:39.600><c> part</c><01:30:40.159><c> we're</c><01:30:40.320><c> going</c>

01:30:40.470 --> 01:30:40.480 align:start position:0%
to the exponentiation part we're going
 

01:30:40.480 --> 01:30:41.750 align:start position:0%
to the exponentiation part we're going
to<01:30:40.639><c> introduce</c>

01:30:41.750 --> 01:30:41.760 align:start position:0%
to introduce
 

01:30:41.760 --> 01:30:42.950 align:start position:0%
to introduce
a<01:30:41.920><c> single</c>

01:30:42.950 --> 01:30:42.960 align:start position:0%
a single
 

01:30:42.960 --> 01:30:45.030 align:start position:0%
a single
function<01:30:43.440><c> x</c><01:30:43.840><c> here</c>

01:30:45.030 --> 01:30:45.040 align:start position:0%
function x here
 

01:30:45.040 --> 01:30:47.910 align:start position:0%
function x here
and<01:30:45.440><c> x</c><01:30:45.840><c> is</c><01:30:45.920><c> going</c><01:30:46.159><c> to</c><01:30:46.400><c> mirror</c><01:30:46.960><c> 10h</c><01:30:47.679><c> in</c><01:30:47.840><c> the</c>

01:30:47.910 --> 01:30:47.920 align:start position:0%
and x is going to mirror 10h in the
 

01:30:47.920 --> 01:30:49.669 align:start position:0%
and x is going to mirror 10h in the
sense<01:30:48.159><c> that</c><01:30:48.320><c> it's</c><01:30:48.400><c> a</c><01:30:48.480><c> simple</c><01:30:48.880><c> single</c><01:30:49.360><c> function</c>

01:30:49.669 --> 01:30:49.679 align:start position:0%
sense that it's a simple single function
 

01:30:49.679 --> 01:30:51.189 align:start position:0%
sense that it's a simple single function
that<01:30:49.840><c> transforms</c><01:30:50.239><c> a</c><01:30:50.320><c> single</c><01:30:50.560><c> scalar</c><01:30:50.880><c> value</c>

01:30:51.189 --> 01:30:51.199 align:start position:0%
that transforms a single scalar value
 

01:30:51.199 --> 01:30:53.110 align:start position:0%
that transforms a single scalar value
and<01:30:51.360><c> outputs</c><01:30:51.600><c> a</c><01:30:51.679><c> single</c><01:30:51.920><c> scalar</c><01:30:52.239><c> value</c>

01:30:53.110 --> 01:30:53.120 align:start position:0%
and outputs a single scalar value
 

01:30:53.120 --> 01:30:55.990 align:start position:0%
and outputs a single scalar value
so<01:30:53.440><c> we</c><01:30:53.760><c> pop</c><01:30:54.000><c> out</c><01:30:54.239><c> the</c><01:30:54.320><c> python</c><01:30:54.800><c> number</c><01:30:55.600><c> we</c><01:30:55.760><c> use</c>

01:30:55.990 --> 01:30:56.000 align:start position:0%
so we pop out the python number we use
 

01:30:56.000 --> 01:30:57.990 align:start position:0%
so we pop out the python number we use
math.x<01:30:56.560><c> to</c><01:30:56.639><c> exponentiate</c><01:30:57.280><c> it</c><01:30:57.520><c> create</c><01:30:57.760><c> a</c><01:30:57.840><c> new</c>

01:30:57.990 --> 01:30:58.000 align:start position:0%
math.x to exponentiate it create a new
 

01:30:58.000 --> 01:30:59.189 align:start position:0%
math.x to exponentiate it create a new
value<01:30:58.320><c> object</c>

01:30:59.189 --> 01:30:59.199 align:start position:0%
value object
 

01:30:59.199 --> 01:31:00.870 align:start position:0%
value object
everything<01:30:59.520><c> that</c><01:30:59.600><c> we've</c><01:30:59.760><c> seen</c><01:31:00.000><c> before</c><01:31:00.719><c> the</c>

01:31:00.870 --> 01:31:00.880 align:start position:0%
everything that we've seen before the
 

01:31:00.880 --> 01:31:02.229 align:start position:0%
everything that we've seen before the
tricky<01:31:01.199><c> part</c><01:31:01.360><c> of</c><01:31:01.440><c> course</c><01:31:01.679><c> is</c><01:31:01.760><c> how</c><01:31:01.920><c> do</c><01:31:02.000><c> you</c>

01:31:02.229 --> 01:31:02.239 align:start position:0%
tricky part of course is how do you
 

01:31:02.239 --> 01:31:04.790 align:start position:0%
tricky part of course is how do you
propagate<01:31:02.800><c> through</c><01:31:03.199><c> e</c><01:31:03.360><c> to</c><01:31:03.520><c> the</c><01:31:03.679><c> x</c>

01:31:04.790 --> 01:31:04.800 align:start position:0%
propagate through e to the x
 

01:31:04.800 --> 01:31:05.910 align:start position:0%
propagate through e to the x
and

01:31:05.910 --> 01:31:05.920 align:start position:0%
and
 

01:31:05.920 --> 01:31:07.669 align:start position:0%
and
so<01:31:06.159><c> here</c><01:31:06.480><c> you</c><01:31:06.639><c> can</c><01:31:06.800><c> potentially</c><01:31:07.280><c> pause</c><01:31:07.600><c> the</c>

01:31:07.669 --> 01:31:07.679 align:start position:0%
so here you can potentially pause the
 

01:31:07.679 --> 01:31:09.669 align:start position:0%
so here you can potentially pause the
video<01:31:08.320><c> and</c><01:31:08.480><c> think</c><01:31:08.639><c> about</c><01:31:08.960><c> what</c><01:31:09.199><c> should</c><01:31:09.440><c> go</c>

01:31:09.669 --> 01:31:09.679 align:start position:0%
video and think about what should go
 

01:31:09.679 --> 01:31:13.270 align:start position:0%
video and think about what should go
here

01:31:13.270 --> 01:31:13.280 align:start position:0%
 
 

01:31:13.280 --> 01:31:15.830 align:start position:0%
 
okay<01:31:14.000><c> so</c><01:31:14.480><c> basically</c><01:31:15.280><c> we</c><01:31:15.360><c> need</c><01:31:15.520><c> to</c><01:31:15.600><c> know</c><01:31:15.679><c> what</c>

01:31:15.830 --> 01:31:15.840 align:start position:0%
okay so basically we need to know what
 

01:31:15.840 --> 01:31:18.629 align:start position:0%
okay so basically we need to know what
is<01:31:15.920><c> the</c><01:31:16.000><c> local</c><01:31:16.320><c> derivative</c><01:31:16.960><c> of</c><01:31:17.440><c> e</c><01:31:17.600><c> to</c><01:31:17.760><c> the</c><01:31:17.920><c> x</c><01:31:18.400><c> so</c>

01:31:18.629 --> 01:31:18.639 align:start position:0%
is the local derivative of e to the x so
 

01:31:18.639 --> 01:31:21.270 align:start position:0%
is the local derivative of e to the x so
d<01:31:18.800><c> by</c><01:31:18.960><c> d</c><01:31:19.120><c> x</c><01:31:19.280><c> of</c><01:31:19.440><c> e</c><01:31:19.520><c> to</c><01:31:19.679><c> the</c><01:31:19.760><c> x</c><01:31:20.080><c> is</c><01:31:20.480><c> famously</c><01:31:21.040><c> just</c>

01:31:21.270 --> 01:31:21.280 align:start position:0%
d by d x of e to the x is famously just
 

01:31:21.280 --> 01:31:23.110 align:start position:0%
d by d x of e to the x is famously just
e<01:31:21.360><c> to</c><01:31:21.520><c> the</c><01:31:21.600><c> x</c><01:31:22.159><c> and</c><01:31:22.320><c> we've</c><01:31:22.560><c> already</c><01:31:22.880><c> just</c>

01:31:23.110 --> 01:31:23.120 align:start position:0%
e to the x and we've already just
 

01:31:23.120 --> 01:31:25.510 align:start position:0%
e to the x and we've already just
calculated<01:31:23.679><c> e</c><01:31:23.840><c> to</c><01:31:23.920><c> the</c><01:31:24.080><c> x</c><01:31:24.719><c> and</c><01:31:24.880><c> it's</c><01:31:25.120><c> inside</c>

01:31:25.510 --> 01:31:25.520 align:start position:0%
calculated e to the x and it's inside
 

01:31:25.520 --> 01:31:27.750 align:start position:0%
calculated e to the x and it's inside
out<01:31:25.679><c> that</c><01:31:25.920><c> data</c><01:31:26.560><c> so</c><01:31:26.719><c> we</c><01:31:26.800><c> can</c><01:31:26.880><c> do</c><01:31:27.040><c> up</c><01:31:27.199><c> that</c><01:31:27.360><c> data</c>

01:31:27.750 --> 01:31:27.760 align:start position:0%
out that data so we can do up that data
 

01:31:27.760 --> 01:31:28.950 align:start position:0%
out that data so we can do up that data
times

01:31:28.950 --> 01:31:28.960 align:start position:0%
times
 

01:31:28.960 --> 01:31:29.750 align:start position:0%
times
and

01:31:29.750 --> 01:31:29.760 align:start position:0%
and
 

01:31:29.760 --> 01:31:31.990 align:start position:0%
and
out<01:31:29.840><c> that</c><01:31:30.080><c> grad</c><01:31:30.400><c> that's</c><01:31:30.639><c> the</c><01:31:30.719><c> chain</c><01:31:30.960><c> rule</c>

01:31:31.990 --> 01:31:32.000 align:start position:0%
out that grad that's the chain rule
 

01:31:32.000 --> 01:31:33.830 align:start position:0%
out that grad that's the chain rule
so<01:31:32.320><c> we're</c><01:31:32.480><c> just</c><01:31:32.639><c> chaining</c><01:31:32.960><c> on</c><01:31:33.120><c> to</c><01:31:33.280><c> the</c><01:31:33.600><c> current</c>

01:31:33.830 --> 01:31:33.840 align:start position:0%
so we're just chaining on to the current
 

01:31:33.840 --> 01:31:35.270 align:start position:0%
so we're just chaining on to the current
running<01:31:34.080><c> grad</c>

01:31:35.270 --> 01:31:35.280 align:start position:0%
running grad
 

01:31:35.280 --> 01:31:36.709 align:start position:0%
running grad
and<01:31:35.600><c> this</c><01:31:35.840><c> is</c><01:31:35.920><c> what</c><01:31:36.080><c> the</c><01:31:36.159><c> expression</c><01:31:36.480><c> looks</c>

01:31:36.709 --> 01:31:36.719 align:start position:0%
and this is what the expression looks
 

01:31:36.719 --> 01:31:38.629 align:start position:0%
and this is what the expression looks
like<01:31:37.199><c> it</c><01:31:37.280><c> looks</c><01:31:37.520><c> a</c><01:31:37.520><c> little</c><01:31:37.679><c> confusing</c><01:31:38.239><c> but</c>

01:31:38.629 --> 01:31:38.639 align:start position:0%
like it looks a little confusing but
 

01:31:38.639 --> 01:31:39.990 align:start position:0%
like it looks a little confusing but
this<01:31:38.880><c> is</c><01:31:39.199><c> what</c><01:31:39.360><c> it</c><01:31:39.520><c> is</c><01:31:39.600><c> and</c><01:31:39.760><c> that's</c><01:31:39.920><c> the</c>

01:31:39.990 --> 01:31:40.000 align:start position:0%
this is what it is and that's the
 

01:31:40.000 --> 01:31:41.750 align:start position:0%
this is what it is and that's the
exponentiation

01:31:41.750 --> 01:31:41.760 align:start position:0%
exponentiation
 

01:31:41.760 --> 01:31:43.669 align:start position:0%
exponentiation
so<01:31:42.239><c> redefining</c><01:31:42.880><c> we</c><01:31:43.040><c> should</c><01:31:43.120><c> now</c><01:31:43.280><c> be</c><01:31:43.440><c> able</c><01:31:43.520><c> to</c>

01:31:43.669 --> 01:31:43.679 align:start position:0%
so redefining we should now be able to
 

01:31:43.679 --> 01:31:45.350 align:start position:0%
so redefining we should now be able to
call<01:31:44.080><c> a.x</c>

01:31:45.350 --> 01:31:45.360 align:start position:0%
call a.x
 

01:31:45.360 --> 01:31:46.149 align:start position:0%
call a.x
and

01:31:46.149 --> 01:31:46.159 align:start position:0%
and
 

01:31:46.159 --> 01:31:47.830 align:start position:0%
and
hopefully<01:31:46.560><c> the</c><01:31:46.639><c> backward</c><01:31:46.960><c> pass</c><01:31:47.280><c> works</c><01:31:47.679><c> as</c>

01:31:47.830 --> 01:31:47.840 align:start position:0%
hopefully the backward pass works as
 

01:31:47.840 --> 01:31:49.590 align:start position:0%
hopefully the backward pass works as
well<01:31:48.159><c> okay</c><01:31:48.639><c> and</c><01:31:48.800><c> the</c><01:31:48.960><c> last</c><01:31:49.199><c> thing</c><01:31:49.360><c> we'd</c><01:31:49.440><c> like</c>

01:31:49.590 --> 01:31:49.600 align:start position:0%
well okay and the last thing we'd like
 

01:31:49.600 --> 01:31:50.950 align:start position:0%
well okay and the last thing we'd like
to<01:31:49.679><c> do</c><01:31:49.840><c> of</c><01:31:49.920><c> course</c><01:31:50.159><c> is</c><01:31:50.320><c> we'd</c><01:31:50.480><c> like</c><01:31:50.639><c> to</c><01:31:50.719><c> be</c><01:31:50.800><c> able</c>

01:31:50.950 --> 01:31:50.960 align:start position:0%
to do of course is we'd like to be able
 

01:31:50.960 --> 01:31:52.229 align:start position:0%
to do of course is we'd like to be able
to<01:31:51.040><c> divide</c>

01:31:52.229 --> 01:31:52.239 align:start position:0%
to divide
 

01:31:52.239 --> 01:31:53.110 align:start position:0%
to divide
now

01:31:53.110 --> 01:31:53.120 align:start position:0%
now
 

01:31:53.120 --> 01:31:54.470 align:start position:0%
now
i<01:31:53.360><c> actually</c><01:31:53.600><c> will</c><01:31:53.760><c> implement</c><01:31:54.159><c> something</c>

01:31:54.470 --> 01:31:54.480 align:start position:0%
i actually will implement something
 

01:31:54.480 --> 01:31:55.990 align:start position:0%
i actually will implement something
slightly<01:31:54.880><c> more</c><01:31:55.040><c> powerful</c><01:31:55.360><c> than</c><01:31:55.520><c> division</c>

01:31:55.990 --> 01:31:56.000 align:start position:0%
slightly more powerful than division
 

01:31:56.000 --> 01:31:57.830 align:start position:0%
slightly more powerful than division
because<01:31:56.159><c> division</c><01:31:56.639><c> is</c><01:31:56.719><c> just</c><01:31:56.960><c> a</c><01:31:57.040><c> special</c><01:31:57.360><c> case</c>

01:31:57.830 --> 01:31:57.840 align:start position:0%
because division is just a special case
 

01:31:57.840 --> 01:31:59.910 align:start position:0%
because division is just a special case
of<01:31:58.320><c> something</c><01:31:58.639><c> a</c><01:31:58.719><c> bit</c><01:31:58.800><c> more</c><01:31:58.960><c> powerful</c>

01:31:59.910 --> 01:31:59.920 align:start position:0%
of something a bit more powerful
 

01:31:59.920 --> 01:32:02.629 align:start position:0%
of something a bit more powerful
so<01:32:00.159><c> in</c><01:32:00.239><c> particular</c><01:32:01.120><c> just</c><01:32:01.280><c> by</c><01:32:01.440><c> rearranging</c>

01:32:02.629 --> 01:32:02.639 align:start position:0%
so in particular just by rearranging
 

01:32:02.639 --> 01:32:04.870 align:start position:0%
so in particular just by rearranging
if<01:32:02.800><c> we</c><01:32:03.040><c> have</c><01:32:03.120><c> some</c><01:32:03.280><c> kind</c><01:32:03.360><c> of</c><01:32:03.520><c> a</c><01:32:03.600><c> b</c><01:32:03.840><c> equals</c>

01:32:04.870 --> 01:32:04.880 align:start position:0%
if we have some kind of a b equals
 

01:32:04.880 --> 01:32:07.590 align:start position:0%
if we have some kind of a b equals
value<01:32:05.440><c> of</c><01:32:06.000><c> 4.0</c><01:32:06.560><c> here</c><01:32:06.880><c> we'd</c><01:32:07.040><c> like</c><01:32:07.199><c> to</c><01:32:07.280><c> basically</c>

01:32:07.590 --> 01:32:07.600 align:start position:0%
value of 4.0 here we'd like to basically
 

01:32:07.600 --> 01:32:09.189 align:start position:0%
value of 4.0 here we'd like to basically
be<01:32:07.760><c> able</c><01:32:07.920><c> to</c><01:32:08.000><c> do</c><01:32:08.159><c> a</c><01:32:08.320><c> divide</c><01:32:08.639><c> b</c><01:32:08.880><c> and</c><01:32:08.960><c> we'd</c><01:32:09.040><c> like</c>

01:32:09.189 --> 01:32:09.199 align:start position:0%
be able to do a divide b and we'd like
 

01:32:09.199 --> 01:32:11.590 align:start position:0%
be able to do a divide b and we'd like
this<01:32:09.360><c> to</c><01:32:09.520><c> be</c><01:32:09.679><c> able</c><01:32:09.760><c> to</c><01:32:09.840><c> give</c><01:32:10.080><c> us</c><01:32:10.239><c> 0.5</c>

01:32:11.590 --> 01:32:11.600 align:start position:0%
this to be able to give us 0.5
 

01:32:11.600 --> 01:32:14.229 align:start position:0%
this to be able to give us 0.5
now<01:32:12.159><c> division</c><01:32:12.719><c> actually</c><01:32:13.040><c> can</c><01:32:13.199><c> be</c><01:32:13.440><c> reshuffled</c>

01:32:14.229 --> 01:32:14.239 align:start position:0%
now division actually can be reshuffled
 

01:32:14.239 --> 01:32:17.030 align:start position:0%
now division actually can be reshuffled
as<01:32:14.400><c> follows</c><01:32:15.280><c> if</c><01:32:15.440><c> we</c><01:32:15.520><c> have</c><01:32:15.679><c> a</c><01:32:15.760><c> divide</c><01:32:16.080><c> b</c><01:32:16.719><c> that's</c>

01:32:17.030 --> 01:32:17.040 align:start position:0%
as follows if we have a divide b that's
 

01:32:17.040 --> 01:32:18.709 align:start position:0%
as follows if we have a divide b that's
actually<01:32:17.280><c> the</c><01:32:17.360><c> same</c><01:32:17.600><c> as</c><01:32:17.760><c> a</c><01:32:17.920><c> multiplying</c><01:32:18.480><c> one</c>

01:32:18.709 --> 01:32:18.719 align:start position:0%
actually the same as a multiplying one
 

01:32:18.719 --> 01:32:19.830 align:start position:0%
actually the same as a multiplying one
over<01:32:18.880><c> b</c>

01:32:19.830 --> 01:32:19.840 align:start position:0%
over b
 

01:32:19.840 --> 01:32:21.590 align:start position:0%
over b
and<01:32:19.920><c> that's</c><01:32:20.159><c> the</c><01:32:20.239><c> same</c><01:32:20.400><c> as</c><01:32:20.560><c> a</c><01:32:20.639><c> multiplying</c><01:32:21.360><c> b</c>

01:32:21.590 --> 01:32:21.600 align:start position:0%
and that's the same as a multiplying b
 

01:32:21.600 --> 01:32:24.229 align:start position:0%
and that's the same as a multiplying b
to<01:32:21.760><c> the</c><01:32:22.000><c> power</c><01:32:22.480><c> of</c><01:32:22.639><c> negative</c><01:32:23.040><c> one</c>

01:32:24.229 --> 01:32:24.239 align:start position:0%
to the power of negative one
 

01:32:24.239 --> 01:32:25.750 align:start position:0%
to the power of negative one
and<01:32:24.400><c> so</c><01:32:24.560><c> what</c><01:32:24.719><c> i'd</c><01:32:24.800><c> like</c><01:32:24.960><c> to</c><01:32:24.960><c> do</c><01:32:25.120><c> instead</c><01:32:25.520><c> is</c><01:32:25.679><c> i</c>

01:32:25.750 --> 01:32:25.760 align:start position:0%
and so what i'd like to do instead is i
 

01:32:25.760 --> 01:32:27.510 align:start position:0%
and so what i'd like to do instead is i
basically<01:32:26.159><c> like</c><01:32:26.320><c> to</c><01:32:26.400><c> implement</c><01:32:27.280><c> the</c>

01:32:27.510 --> 01:32:27.520 align:start position:0%
basically like to implement the
 

01:32:27.520 --> 01:32:29.750 align:start position:0%
basically like to implement the
operation<01:32:28.000><c> of</c><01:32:28.159><c> x</c><01:32:28.400><c> to</c><01:32:28.560><c> the</c><01:32:28.800><c> k</c><01:32:29.199><c> for</c><01:32:29.440><c> some</c>

01:32:29.750 --> 01:32:29.760 align:start position:0%
operation of x to the k for some
 

01:32:29.760 --> 01:32:32.550 align:start position:0%
operation of x to the k for some
constant<01:32:30.639><c> uh</c><01:32:30.960><c> k</c><01:32:31.520><c> so</c><01:32:31.679><c> it's</c><01:32:31.840><c> an</c><01:32:32.000><c> integer</c><01:32:32.320><c> or</c><01:32:32.480><c> a</c>

01:32:32.550 --> 01:32:32.560 align:start position:0%
constant uh k so it's an integer or a
 

01:32:32.560 --> 01:32:35.270 align:start position:0%
constant uh k so it's an integer or a
float<01:32:33.440><c> um</c><01:32:34.000><c> and</c><01:32:34.480><c> we</c><01:32:34.639><c> would</c><01:32:34.719><c> like</c><01:32:34.880><c> to</c><01:32:34.960><c> be</c><01:32:35.040><c> able</c><01:32:35.199><c> to</c>

01:32:35.270 --> 01:32:35.280 align:start position:0%
float um and we would like to be able to
 

01:32:35.280 --> 01:32:36.950 align:start position:0%
float um and we would like to be able to
differentiate<01:32:35.760><c> this</c><01:32:36.080><c> and</c><01:32:36.159><c> then</c><01:32:36.400><c> as</c><01:32:36.480><c> a</c><01:32:36.639><c> special</c>

01:32:36.950 --> 01:32:36.960 align:start position:0%
differentiate this and then as a special
 

01:32:36.960 --> 01:32:40.790 align:start position:0%
differentiate this and then as a special
case<01:32:37.679><c> uh</c><01:32:38.400><c> negative</c><01:32:38.800><c> one</c><01:32:39.199><c> will</c><01:32:39.360><c> be</c><01:32:39.520><c> division</c>

01:32:40.790 --> 01:32:40.800 align:start position:0%
case uh negative one will be division
 

01:32:40.800 --> 01:32:42.470 align:start position:0%
case uh negative one will be division
and<01:32:40.960><c> so</c><01:32:41.120><c> i'm</c><01:32:41.199><c> doing</c><01:32:41.360><c> that</c><01:32:41.520><c> just</c><01:32:41.679><c> because</c><01:32:42.239><c> uh</c>

01:32:42.470 --> 01:32:42.480 align:start position:0%
and so i'm doing that just because uh
 

01:32:42.480 --> 01:32:45.189 align:start position:0%
and so i'm doing that just because uh
it's<01:32:42.719><c> more</c><01:32:42.960><c> general</c><01:32:43.520><c> and</c><01:32:44.239><c> um</c><01:32:44.800><c> yeah</c><01:32:44.960><c> you</c><01:32:45.040><c> might</c>

01:32:45.189 --> 01:32:45.199 align:start position:0%
it's more general and um yeah you might
 

01:32:45.199 --> 01:32:46.950 align:start position:0%
it's more general and um yeah you might
as<01:32:45.280><c> well</c><01:32:45.440><c> do</c><01:32:45.520><c> it</c><01:32:45.600><c> that</c><01:32:45.760><c> way</c><01:32:46.320><c> so</c><01:32:46.480><c> basically</c><01:32:46.800><c> what</c>

01:32:46.950 --> 01:32:46.960 align:start position:0%
as well do it that way so basically what
 

01:32:46.960 --> 01:32:49.430 align:start position:0%
as well do it that way so basically what
i'm<01:32:47.040><c> saying</c><01:32:47.360><c> is</c><01:32:47.520><c> we</c><01:32:47.679><c> can</c><01:32:47.840><c> redefine</c>

01:32:49.430 --> 01:32:49.440 align:start position:0%
i'm saying is we can redefine
 

01:32:49.440 --> 01:32:51.270 align:start position:0%
i'm saying is we can redefine
uh<01:32:49.760><c> division</c>

01:32:51.270 --> 01:32:51.280 align:start position:0%
uh division
 

01:32:51.280 --> 01:32:54.470 align:start position:0%
uh division
which<01:32:51.520><c> we</c><01:32:51.679><c> will</c><01:32:51.920><c> put</c><01:32:52.560><c> here</c><01:32:52.880><c> somewhere</c>

01:32:54.470 --> 01:32:54.480 align:start position:0%
which we will put here somewhere
 

01:32:54.480 --> 01:32:56.310 align:start position:0%
which we will put here somewhere
yeah<01:32:54.719><c> we</c><01:32:54.800><c> can</c><01:32:54.960><c> put</c><01:32:55.120><c> it</c><01:32:55.199><c> here</c><01:32:55.440><c> somewhere</c><01:32:56.159><c> what</c>

01:32:56.310 --> 01:32:56.320 align:start position:0%
yeah we can put it here somewhere what
 

01:32:56.320 --> 01:32:58.070 align:start position:0%
yeah we can put it here somewhere what
i'm<01:32:56.400><c> saying</c><01:32:56.639><c> is</c><01:32:56.719><c> that</c><01:32:56.880><c> we</c><01:32:56.960><c> can</c><01:32:57.120><c> redefine</c>

01:32:58.070 --> 01:32:58.080 align:start position:0%
i'm saying is that we can redefine
 

01:32:58.080 --> 01:33:00.790 align:start position:0%
i'm saying is that we can redefine
division<01:32:59.040><c> so</c><01:32:59.360><c> self-divide</c><01:33:00.000><c> other</c>

01:33:00.790 --> 01:33:00.800 align:start position:0%
division so self-divide other
 

01:33:00.800 --> 01:33:03.110 align:start position:0%
division so self-divide other
can<01:33:00.960><c> actually</c><01:33:01.199><c> be</c><01:33:01.280><c> rewritten</c><01:33:01.840><c> as</c><01:33:01.920><c> self</c><01:33:02.400><c> times</c>

01:33:03.110 --> 01:33:03.120 align:start position:0%
can actually be rewritten as self times
 

01:33:03.120 --> 01:33:05.669 align:start position:0%
can actually be rewritten as self times
other<01:33:03.440><c> to</c><01:33:03.600><c> the</c><01:33:03.760><c> power</c><01:33:04.080><c> of</c><01:33:04.159><c> negative</c><01:33:04.560><c> one</c>

01:33:05.669 --> 01:33:05.679 align:start position:0%
other to the power of negative one
 

01:33:05.679 --> 01:33:07.350 align:start position:0%
other to the power of negative one
and<01:33:05.920><c> now</c>

01:33:07.350 --> 01:33:07.360 align:start position:0%
and now
 

01:33:07.360 --> 01:33:09.189 align:start position:0%
and now
a<01:33:07.600><c> value</c><01:33:08.080><c> raised</c><01:33:08.320><c> to</c><01:33:08.400><c> the</c><01:33:08.480><c> power</c><01:33:08.800><c> of</c><01:33:08.880><c> negative</c>

01:33:09.189 --> 01:33:09.199 align:start position:0%
a value raised to the power of negative
 

01:33:09.199 --> 01:33:11.590 align:start position:0%
a value raised to the power of negative
one<01:33:09.520><c> we</c><01:33:09.679><c> have</c><01:33:09.840><c> now</c><01:33:10.000><c> defined</c><01:33:10.400><c> that</c>

01:33:11.590 --> 01:33:11.600 align:start position:0%
one we have now defined that
 

01:33:11.600 --> 01:33:12.310 align:start position:0%
one we have now defined that
so

01:33:12.310 --> 01:33:12.320 align:start position:0%
so
 

01:33:12.320 --> 01:33:13.590 align:start position:0%
so
here's

01:33:13.590 --> 01:33:13.600 align:start position:0%
here's
 

01:33:13.600 --> 01:33:15.910 align:start position:0%
here's
so<01:33:13.760><c> we</c><01:33:13.840><c> need</c><01:33:13.920><c> to</c><01:33:14.000><c> implement</c><01:33:14.320><c> the</c><01:33:14.560><c> pow</c><01:33:14.880><c> function</c>

01:33:15.910 --> 01:33:15.920 align:start position:0%
so we need to implement the pow function
 

01:33:15.920 --> 01:33:17.270 align:start position:0%
so we need to implement the pow function
where<01:33:16.080><c> am</c><01:33:16.239><c> i</c><01:33:16.320><c> going</c><01:33:16.400><c> to</c><01:33:16.560><c> put</c><01:33:16.800><c> the</c><01:33:16.960><c> power</c>

01:33:17.270 --> 01:33:17.280 align:start position:0%
where am i going to put the power
 

01:33:17.280 --> 01:33:19.990 align:start position:0%
where am i going to put the power
function<01:33:17.679><c> maybe</c><01:33:17.920><c> here</c><01:33:18.159><c> somewhere</c>

01:33:19.990 --> 01:33:20.000 align:start position:0%
function maybe here somewhere
 

01:33:20.000 --> 01:33:22.470 align:start position:0%
function maybe here somewhere
this<01:33:20.159><c> is</c><01:33:20.239><c> the</c><01:33:20.320><c> skeleton</c><01:33:20.800><c> for</c><01:33:20.960><c> it</c>

01:33:22.470 --> 01:33:22.480 align:start position:0%
this is the skeleton for it
 

01:33:22.480 --> 01:33:24.310 align:start position:0%
this is the skeleton for it
so<01:33:22.639><c> this</c><01:33:22.880><c> function</c><01:33:23.280><c> will</c><01:33:23.440><c> be</c><01:33:23.520><c> called</c><01:33:23.840><c> when</c><01:33:24.080><c> we</c>

01:33:24.310 --> 01:33:24.320 align:start position:0%
so this function will be called when we
 

01:33:24.320 --> 01:33:26.709 align:start position:0%
so this function will be called when we
try<01:33:24.560><c> to</c><01:33:24.719><c> raise</c><01:33:24.960><c> a</c><01:33:25.120><c> value</c><01:33:25.440><c> to</c><01:33:25.600><c> some</c><01:33:25.840><c> power</c><01:33:26.480><c> and</c>

01:33:26.709 --> 01:33:26.719 align:start position:0%
try to raise a value to some power and
 

01:33:26.719 --> 01:33:28.629 align:start position:0%
try to raise a value to some power and
other<01:33:27.040><c> will</c><01:33:27.199><c> be</c><01:33:27.360><c> that</c><01:33:27.600><c> power</c>

01:33:28.629 --> 01:33:28.639 align:start position:0%
other will be that power
 

01:33:28.639 --> 01:33:30.550 align:start position:0%
other will be that power
now<01:33:28.960><c> i'd</c><01:33:29.120><c> like</c><01:33:29.280><c> to</c><01:33:29.360><c> make</c><01:33:29.520><c> sure</c><01:33:29.679><c> that</c><01:33:30.000><c> other</c><01:33:30.320><c> is</c>

01:33:30.550 --> 01:33:30.560 align:start position:0%
now i'd like to make sure that other is
 

01:33:30.560 --> 01:33:33.030 align:start position:0%
now i'd like to make sure that other is
only<01:33:30.800><c> an</c><01:33:31.040><c> int</c><01:33:31.280><c> or</c><01:33:31.440><c> a</c><01:33:31.520><c> float</c><01:33:32.080><c> usually</c><01:33:32.639><c> other</c><01:33:32.960><c> is</c>

01:33:33.030 --> 01:33:33.040 align:start position:0%
only an int or a float usually other is
 

01:33:33.040 --> 01:33:35.350 align:start position:0%
only an int or a float usually other is
some<01:33:33.199><c> kind</c><01:33:33.360><c> of</c><01:33:33.520><c> a</c><01:33:34.080><c> different</c><01:33:34.400><c> value</c><01:33:34.800><c> object</c>

01:33:35.350 --> 01:33:35.360 align:start position:0%
some kind of a different value object
 

01:33:35.360 --> 01:33:37.350 align:start position:0%
some kind of a different value object
but<01:33:35.600><c> here</c><01:33:35.840><c> other</c><01:33:36.080><c> will</c><01:33:36.239><c> be</c><01:33:36.480><c> forced</c><01:33:36.880><c> to</c><01:33:37.040><c> be</c><01:33:37.199><c> an</c>

01:33:37.350 --> 01:33:37.360 align:start position:0%
but here other will be forced to be an
 

01:33:37.360 --> 01:33:40.629 align:start position:0%
but here other will be forced to be an
end<01:33:37.600><c> or</c><01:33:37.760><c> a</c><01:33:37.840><c> float</c><01:33:38.560><c> otherwise</c><01:33:39.360><c> the</c><01:33:39.520><c> math</c>

01:33:40.629 --> 01:33:40.639 align:start position:0%
end or a float otherwise the math
 

01:33:40.639 --> 01:33:42.149 align:start position:0%
end or a float otherwise the math
won't<01:33:40.960><c> work</c><01:33:41.440><c> for</c>

01:33:42.149 --> 01:33:42.159 align:start position:0%
won't work for
 

01:33:42.159 --> 01:33:43.830 align:start position:0%
won't work for
for<01:33:42.320><c> or</c><01:33:42.639><c> try</c><01:33:42.800><c> to</c><01:33:42.880><c> achieve</c><01:33:43.199><c> in</c><01:33:43.280><c> the</c><01:33:43.440><c> specific</c>

01:33:43.830 --> 01:33:43.840 align:start position:0%
for or try to achieve in the specific
 

01:33:43.840 --> 01:33:45.350 align:start position:0%
for or try to achieve in the specific
case<01:33:44.560><c> that</c><01:33:44.719><c> would</c><01:33:44.800><c> be</c><01:33:44.880><c> a</c><01:33:44.960><c> different</c>

01:33:45.350 --> 01:33:45.360 align:start position:0%
case that would be a different
 

01:33:45.360 --> 01:33:47.830 align:start position:0%
case that would be a different
derivative<01:33:45.920><c> expression</c><01:33:46.560><c> if</c><01:33:46.719><c> we</c><01:33:46.880><c> wanted</c><01:33:47.600><c> other</c>

01:33:47.830 --> 01:33:47.840 align:start position:0%
derivative expression if we wanted other
 

01:33:47.840 --> 01:33:49.590 align:start position:0%
derivative expression if we wanted other
to<01:33:47.920><c> be</c><01:33:48.080><c> a</c><01:33:48.159><c> value</c>

01:33:49.590 --> 01:33:49.600 align:start position:0%
to be a value
 

01:33:49.600 --> 01:33:51.510 align:start position:0%
to be a value
so<01:33:49.760><c> here</c><01:33:50.080><c> we</c><01:33:50.239><c> create</c><01:33:50.560><c> the</c><01:33:50.719><c> output</c><01:33:50.960><c> value</c><01:33:51.360><c> which</c>

01:33:51.510 --> 01:33:51.520 align:start position:0%
so here we create the output value which
 

01:33:51.520 --> 01:33:53.669 align:start position:0%
so here we create the output value which
is<01:33:51.679><c> just</c><01:33:52.080><c> uh</c><01:33:52.400><c> you</c><01:33:52.480><c> know</c><01:33:52.719><c> this</c><01:33:52.880><c> data</c><01:33:53.280><c> raised</c><01:33:53.520><c> to</c>

01:33:53.669 --> 01:33:53.679 align:start position:0%
is just uh you know this data raised to
 

01:33:53.679 --> 01:33:55.430 align:start position:0%
is just uh you know this data raised to
the<01:33:53.760><c> power</c><01:33:54.000><c> of</c><01:33:54.159><c> other</c><01:33:54.639><c> and</c><01:33:54.880><c> other</c><01:33:55.120><c> here</c><01:33:55.280><c> could</c>

01:33:55.430 --> 01:33:55.440 align:start position:0%
the power of other and other here could
 

01:33:55.440 --> 01:33:56.870 align:start position:0%
the power of other and other here could
be<01:33:55.520><c> for</c><01:33:55.679><c> example</c><01:33:55.920><c> negative</c><01:33:56.239><c> one</c><01:33:56.560><c> that's</c><01:33:56.800><c> what</c>

01:33:56.870 --> 01:33:56.880 align:start position:0%
be for example negative one that's what
 

01:33:56.880 --> 01:33:59.350 align:start position:0%
be for example negative one that's what
we<01:33:57.280><c> are</c><01:33:57.440><c> hoping</c><01:33:57.760><c> to</c><01:33:57.920><c> achieve</c>

01:33:59.350 --> 01:33:59.360 align:start position:0%
we are hoping to achieve
 

01:33:59.360 --> 01:34:01.830 align:start position:0%
we are hoping to achieve
and<01:33:59.520><c> then</c><01:34:00.159><c> uh</c><01:34:00.320><c> this</c><01:34:00.560><c> is</c><01:34:00.639><c> the</c><01:34:00.719><c> backwards</c><01:34:01.120><c> stub</c>

01:34:01.830 --> 01:34:01.840 align:start position:0%
and then uh this is the backwards stub
 

01:34:01.840 --> 01:34:03.830 align:start position:0%
and then uh this is the backwards stub
and<01:34:02.080><c> this</c><01:34:02.400><c> is</c><01:34:02.480><c> the</c><01:34:02.639><c> fun</c><01:34:02.880><c> part</c><01:34:03.199><c> which</c><01:34:03.440><c> is</c><01:34:03.600><c> what</c>

01:34:03.830 --> 01:34:03.840 align:start position:0%
and this is the fun part which is what
 

01:34:03.840 --> 01:34:07.270 align:start position:0%
and this is the fun part which is what
is<01:34:04.000><c> the</c><01:34:04.400><c> uh</c><01:34:04.960><c> chain</c><01:34:05.199><c> rule</c><01:34:05.840><c> expression</c><01:34:06.239><c> here</c><01:34:06.560><c> for</c>

01:34:07.270 --> 01:34:07.280 align:start position:0%
is the uh chain rule expression here for
 

01:34:07.280 --> 01:34:09.590 align:start position:0%
is the uh chain rule expression here for
back<01:34:07.920><c> for</c><01:34:08.159><c> um</c>

01:34:09.590 --> 01:34:09.600 align:start position:0%
back for um
 

01:34:09.600 --> 01:34:11.590 align:start position:0%
back for um
back<01:34:09.760><c> propagating</c><01:34:10.320><c> through</c><01:34:10.960><c> the</c><01:34:11.199><c> power</c>

01:34:11.590 --> 01:34:11.600 align:start position:0%
back propagating through the power
 

01:34:11.600 --> 01:34:13.910 align:start position:0%
back propagating through the power
function<01:34:12.320><c> where</c><01:34:12.560><c> the</c><01:34:12.719><c> power</c><01:34:13.120><c> is</c><01:34:13.280><c> to</c><01:34:13.440><c> the</c><01:34:13.600><c> power</c>

01:34:13.910 --> 01:34:13.920 align:start position:0%
function where the power is to the power
 

01:34:13.920 --> 01:34:15.669 align:start position:0%
function where the power is to the power
of<01:34:14.000><c> some</c><01:34:14.159><c> kind</c><01:34:14.320><c> of</c><01:34:14.400><c> a</c><01:34:14.480><c> constant</c>

01:34:15.669 --> 01:34:15.679 align:start position:0%
of some kind of a constant
 

01:34:15.679 --> 01:34:17.270 align:start position:0%
of some kind of a constant
so<01:34:15.920><c> this</c><01:34:16.000><c> is</c><01:34:16.080><c> the</c><01:34:16.239><c> exercise</c><01:34:16.719><c> and</c><01:34:16.800><c> maybe</c><01:34:17.040><c> pause</c>

01:34:17.270 --> 01:34:17.280 align:start position:0%
so this is the exercise and maybe pause
 

01:34:17.280 --> 01:34:18.629 align:start position:0%
so this is the exercise and maybe pause
the<01:34:17.440><c> video</c><01:34:17.679><c> here</c><01:34:17.840><c> and</c><01:34:18.000><c> see</c><01:34:18.080><c> if</c><01:34:18.239><c> you</c><01:34:18.320><c> can</c><01:34:18.400><c> figure</c>

01:34:18.629 --> 01:34:18.639 align:start position:0%
the video here and see if you can figure
 

01:34:18.639 --> 01:34:20.470 align:start position:0%
the video here and see if you can figure
it<01:34:18.719><c> out</c><01:34:18.880><c> yourself</c><01:34:19.440><c> as</c><01:34:19.600><c> to</c><01:34:19.840><c> what</c><01:34:20.000><c> we</c><01:34:20.159><c> should</c><01:34:20.320><c> put</c>

01:34:20.470 --> 01:34:20.480 align:start position:0%
it out yourself as to what we should put
 

01:34:20.480 --> 01:34:26.950 align:start position:0%
it out yourself as to what we should put
here

01:34:26.950 --> 01:34:26.960 align:start position:0%
 
 

01:34:26.960 --> 01:34:29.030 align:start position:0%
 
okay<01:34:27.280><c> so</c>

01:34:29.030 --> 01:34:29.040 align:start position:0%
okay so
 

01:34:29.040 --> 01:34:30.790 align:start position:0%
okay so
you<01:34:29.199><c> can</c><01:34:29.360><c> actually</c><01:34:29.600><c> go</c><01:34:30.000><c> here</c><01:34:30.320><c> and</c><01:34:30.480><c> look</c><01:34:30.639><c> at</c>

01:34:30.790 --> 01:34:30.800 align:start position:0%
you can actually go here and look at
 

01:34:30.800 --> 01:34:32.790 align:start position:0%
you can actually go here and look at
derivative<01:34:31.280><c> rules</c><01:34:31.520><c> as</c><01:34:31.679><c> an</c><01:34:31.840><c> example</c><01:34:32.560><c> and</c><01:34:32.639><c> we</c>

01:34:32.790 --> 01:34:32.800 align:start position:0%
derivative rules as an example and we
 

01:34:32.800 --> 01:34:34.310 align:start position:0%
derivative rules as an example and we
see<01:34:33.040><c> lots</c><01:34:33.280><c> of</c><01:34:33.360><c> derivatives</c><01:34:34.000><c> that</c><01:34:34.080><c> you</c><01:34:34.159><c> can</c>

01:34:34.310 --> 01:34:34.320 align:start position:0%
see lots of derivatives that you can
 

01:34:34.320 --> 01:34:35.990 align:start position:0%
see lots of derivatives that you can
hopefully<01:34:34.639><c> know</c><01:34:34.880><c> from</c><01:34:35.040><c> calculus</c><01:34:35.840><c> in</c>

01:34:35.990 --> 01:34:36.000 align:start position:0%
hopefully know from calculus in
 

01:34:36.000 --> 01:34:37.750 align:start position:0%
hopefully know from calculus in
particular<01:34:36.400><c> what</c><01:34:36.560><c> we're</c><01:34:36.800><c> looking</c><01:34:37.120><c> for</c><01:34:37.440><c> is</c><01:34:37.600><c> the</c>

01:34:37.750 --> 01:34:37.760 align:start position:0%
particular what we're looking for is the
 

01:34:37.760 --> 01:34:39.110 align:start position:0%
particular what we're looking for is the
power<01:34:38.080><c> rule</c>

01:34:39.110 --> 01:34:39.120 align:start position:0%
power rule
 

01:34:39.120 --> 01:34:40.310 align:start position:0%
power rule
because<01:34:39.440><c> that's</c><01:34:39.600><c> telling</c><01:34:39.920><c> us</c><01:34:40.000><c> that</c><01:34:40.080><c> if</c><01:34:40.159><c> we're</c>

01:34:40.310 --> 01:34:40.320 align:start position:0%
because that's telling us that if we're
 

01:34:40.320 --> 01:34:42.709 align:start position:0%
because that's telling us that if we're
trying<01:34:40.480><c> to</c><01:34:40.560><c> take</c><01:34:40.719><c> d</c><01:34:40.880><c> by</c><01:34:41.040><c> dx</c><01:34:41.440><c> of</c><01:34:41.600><c> x</c><01:34:41.760><c> to</c><01:34:41.920><c> the</c><01:34:42.080><c> n</c>

01:34:42.709 --> 01:34:42.719 align:start position:0%
trying to take d by dx of x to the n
 

01:34:42.719 --> 01:34:44.550 align:start position:0%
trying to take d by dx of x to the n
which<01:34:42.880><c> is</c><01:34:42.960><c> what</c><01:34:43.119><c> we're</c><01:34:43.280><c> doing</c><01:34:43.520><c> here</c>

01:34:44.550 --> 01:34:44.560 align:start position:0%
which is what we're doing here
 

01:34:44.560 --> 01:34:46.950 align:start position:0%
which is what we're doing here
then<01:34:45.199><c> that</c><01:34:45.520><c> is</c><01:34:45.600><c> just</c><01:34:45.920><c> n</c><01:34:46.080><c> times</c><01:34:46.400><c> x</c><01:34:46.560><c> to</c><01:34:46.639><c> the</c><01:34:46.800><c> n</c>

01:34:46.950 --> 01:34:46.960 align:start position:0%
then that is just n times x to the n
 

01:34:46.960 --> 01:34:48.390 align:start position:0%
then that is just n times x to the n
minus<01:34:47.440><c> 1</c>

01:34:48.390 --> 01:34:48.400 align:start position:0%
minus 1
 

01:34:48.400 --> 01:34:49.510 align:start position:0%
minus 1
right

01:34:49.510 --> 01:34:49.520 align:start position:0%
right
 

01:34:49.520 --> 01:34:50.870 align:start position:0%
right
okay

01:34:50.870 --> 01:34:50.880 align:start position:0%
okay
 

01:34:50.880 --> 01:34:51.590 align:start position:0%
okay
so

01:34:51.590 --> 01:34:51.600 align:start position:0%
so
 

01:34:51.600 --> 01:34:53.270 align:start position:0%
so
that's<01:34:51.840><c> telling</c><01:34:52.159><c> us</c><01:34:52.560><c> about</c><01:34:52.800><c> the</c><01:34:52.960><c> local</c>

01:34:53.270 --> 01:34:53.280 align:start position:0%
that's telling us about the local
 

01:34:53.280 --> 01:34:55.910 align:start position:0%
that's telling us about the local
derivative<01:34:54.000><c> of</c><01:34:54.080><c> this</c><01:34:54.239><c> power</c><01:34:54.560><c> operation</c>

01:34:55.910 --> 01:34:55.920 align:start position:0%
derivative of this power operation
 

01:34:55.920 --> 01:34:58.310 align:start position:0%
derivative of this power operation
so<01:34:56.400><c> all</c><01:34:56.560><c> we</c><01:34:56.719><c> want</c><01:34:57.040><c> here</c>

01:34:58.310 --> 01:34:58.320 align:start position:0%
so all we want here
 

01:34:58.320 --> 01:35:00.709 align:start position:0%
so all we want here
basically<01:34:58.960><c> n</c><01:34:59.280><c> is</c><01:34:59.440><c> now</c><01:34:59.760><c> other</c>

01:35:00.709 --> 01:35:00.719 align:start position:0%
basically n is now other
 

01:35:00.719 --> 01:35:03.430 align:start position:0%
basically n is now other
and<01:35:01.199><c> self.data</c><01:35:02.239><c> is</c><01:35:02.480><c> x</c>

01:35:03.430 --> 01:35:03.440 align:start position:0%
and self.data is x
 

01:35:03.440 --> 01:35:06.070 align:start position:0%
and self.data is x
and<01:35:03.600><c> so</c><01:35:04.080><c> this</c><01:35:04.400><c> now</c><01:35:04.639><c> becomes</c>

01:35:06.070 --> 01:35:06.080 align:start position:0%
and so this now becomes
 

01:35:06.080 --> 01:35:08.550 align:start position:0%
and so this now becomes
other<01:35:06.480><c> which</c><01:35:06.639><c> is</c><01:35:06.880><c> n</c><01:35:07.280><c> times</c>

01:35:08.550 --> 01:35:08.560 align:start position:0%
other which is n times
 

01:35:08.560 --> 01:35:10.229 align:start position:0%
other which is n times
self.data

01:35:10.229 --> 01:35:10.239 align:start position:0%
self.data
 

01:35:10.239 --> 01:35:13.030 align:start position:0%
self.data
which<01:35:10.480><c> is</c><01:35:10.560><c> now</c><01:35:10.719><c> a</c><01:35:10.800><c> python</c><01:35:11.360><c> in</c><01:35:11.600><c> torah</c><01:35:11.920><c> float</c>

01:35:13.030 --> 01:35:13.040 align:start position:0%
which is now a python in torah float
 

01:35:13.040 --> 01:35:14.709 align:start position:0%
which is now a python in torah float
it's<01:35:13.199><c> not</c><01:35:13.360><c> a</c><01:35:13.440><c> valley</c><01:35:13.760><c> object</c><01:35:14.159><c> we're</c><01:35:14.320><c> accessing</c>

01:35:14.709 --> 01:35:14.719 align:start position:0%
it's not a valley object we're accessing
 

01:35:14.719 --> 01:35:16.149 align:start position:0%
it's not a valley object we're accessing
the<01:35:14.800><c> data</c><01:35:15.040><c> attribute</c>

01:35:16.149 --> 01:35:16.159 align:start position:0%
the data attribute
 

01:35:16.159 --> 01:35:17.270 align:start position:0%
the data attribute
raised

01:35:17.270 --> 01:35:17.280 align:start position:0%
raised
 

01:35:17.280 --> 01:35:19.750 align:start position:0%
raised
to<01:35:17.440><c> the</c><01:35:17.600><c> power</c><01:35:18.239><c> of</c><01:35:18.480><c> other</c><01:35:18.719><c> minus</c><01:35:19.040><c> one</c><01:35:19.360><c> or</c><01:35:19.600><c> n</c>

01:35:19.750 --> 01:35:19.760 align:start position:0%
to the power of other minus one or n
 

01:35:19.760 --> 01:35:21.109 align:start position:0%
to the power of other minus one or n
minus<01:35:20.000><c> one</c>

01:35:21.109 --> 01:35:21.119 align:start position:0%
minus one
 

01:35:21.119 --> 01:35:22.629 align:start position:0%
minus one
i<01:35:21.199><c> can</c><01:35:21.360><c> put</c><01:35:21.520><c> brackets</c><01:35:21.920><c> around</c><01:35:22.080><c> this</c><01:35:22.320><c> but</c><01:35:22.480><c> this</c>

01:35:22.629 --> 01:35:22.639 align:start position:0%
i can put brackets around this but this
 

01:35:22.639 --> 01:35:25.270 align:start position:0%
i can put brackets around this but this
doesn't<01:35:23.040><c> matter</c><01:35:23.440><c> because</c>

01:35:25.270 --> 01:35:25.280 align:start position:0%
doesn't matter because
 

01:35:25.280 --> 01:35:27.350 align:start position:0%
doesn't matter because
power<01:35:25.920><c> takes</c><01:35:26.159><c> precedence</c><01:35:26.639><c> over</c><01:35:26.800><c> multiply</c><01:35:27.280><c> and</c>

01:35:27.350 --> 01:35:27.360 align:start position:0%
power takes precedence over multiply and
 

01:35:27.360 --> 01:35:29.430 align:start position:0%
power takes precedence over multiply and
python<01:35:27.760><c> so</c><01:35:27.920><c> that</c><01:35:28.080><c> would</c><01:35:28.239><c> have</c><01:35:28.320><c> been</c><01:35:28.560><c> okay</c>

01:35:29.430 --> 01:35:29.440 align:start position:0%
python so that would have been okay
 

01:35:29.440 --> 01:35:31.350 align:start position:0%
python so that would have been okay
and<01:35:29.600><c> that's</c><01:35:29.840><c> the</c><01:35:29.920><c> local</c><01:35:30.239><c> derivative</c><01:35:30.800><c> only</c><01:35:31.199><c> but</c>

01:35:31.350 --> 01:35:31.360 align:start position:0%
and that's the local derivative only but
 

01:35:31.360 --> 01:35:33.350 align:start position:0%
and that's the local derivative only but
now<01:35:31.520><c> we</c><01:35:31.679><c> have</c><01:35:31.760><c> to</c><01:35:31.920><c> chain</c><01:35:32.239><c> it</c><01:35:32.719><c> and</c><01:35:32.800><c> we</c><01:35:33.040><c> change</c>

01:35:33.350 --> 01:35:33.360 align:start position:0%
now we have to chain it and we change
 

01:35:33.360 --> 01:35:34.870 align:start position:0%
now we have to chain it and we change
just<01:35:33.520><c> simply</c><01:35:33.760><c> by</c><01:35:33.920><c> multiplying</c><01:35:34.400><c> by</c><01:35:34.560><c> output</c>

01:35:34.870 --> 01:35:34.880 align:start position:0%
just simply by multiplying by output
 

01:35:34.880 --> 01:35:36.709 align:start position:0%
just simply by multiplying by output
grad<01:35:35.360><c> that's</c><01:35:35.600><c> chain</c><01:35:35.840><c> rule</c>

01:35:36.709 --> 01:35:36.719 align:start position:0%
grad that's chain rule
 

01:35:36.719 --> 01:35:40.709 align:start position:0%
grad that's chain rule
and<01:35:37.280><c> this</c><01:35:37.600><c> should</c><01:35:38.400><c> technically</c><01:35:38.880><c> work</c>

01:35:40.709 --> 01:35:40.719 align:start position:0%
and this should technically work
 

01:35:40.719 --> 01:35:42.950 align:start position:0%
and this should technically work
and<01:35:40.960><c> we're</c><01:35:41.119><c> going</c><01:35:41.199><c> to</c><01:35:41.280><c> find</c><01:35:41.440><c> out</c><01:35:41.600><c> soon</c><01:35:42.239><c> but</c><01:35:42.480><c> now</c>

01:35:42.950 --> 01:35:42.960 align:start position:0%
and we're going to find out soon but now
 

01:35:42.960 --> 01:35:43.830 align:start position:0%
and we're going to find out soon but now
if<01:35:43.119><c> we</c>

01:35:43.830 --> 01:35:43.840 align:start position:0%
if we
 

01:35:43.840 --> 01:35:46.709 align:start position:0%
if we
do<01:35:44.000><c> this</c><01:35:44.639><c> this</c><01:35:44.880><c> should</c><01:35:45.119><c> now</c><01:35:45.360><c> work</c>

01:35:46.709 --> 01:35:46.719 align:start position:0%
do this this should now work
 

01:35:46.719 --> 01:35:49.189 align:start position:0%
do this this should now work
and<01:35:46.880><c> we</c><01:35:46.960><c> get</c><01:35:47.119><c> 0.5</c><01:35:47.760><c> so</c><01:35:47.920><c> the</c><01:35:48.080><c> forward</c><01:35:48.400><c> pass</c><01:35:48.719><c> works</c>

01:35:49.189 --> 01:35:49.199 align:start position:0%
and we get 0.5 so the forward pass works
 

01:35:49.199 --> 01:35:51.430 align:start position:0%
and we get 0.5 so the forward pass works
but<01:35:49.360><c> does</c><01:35:49.600><c> the</c><01:35:49.760><c> backward</c><01:35:50.080><c> pass</c><01:35:50.320><c> work</c><01:35:51.040><c> and</c><01:35:51.280><c> i</c>

01:35:51.430 --> 01:35:51.440 align:start position:0%
but does the backward pass work and i
 

01:35:51.440 --> 01:35:52.709 align:start position:0%
but does the backward pass work and i
realize<01:35:51.760><c> that</c><01:35:51.840><c> we</c><01:35:52.000><c> actually</c><01:35:52.239><c> also</c><01:35:52.480><c> have</c><01:35:52.639><c> to</c>

01:35:52.709 --> 01:35:52.719 align:start position:0%
realize that we actually also have to
 

01:35:52.719 --> 01:35:54.709 align:start position:0%
realize that we actually also have to
know<01:35:52.880><c> how</c><01:35:53.040><c> to</c><01:35:53.199><c> subtract</c><01:35:54.000><c> so</c>

01:35:54.709 --> 01:35:54.719 align:start position:0%
know how to subtract so
 

01:35:54.719 --> 01:35:57.350 align:start position:0%
know how to subtract so
right<01:35:54.960><c> now</c><01:35:55.360><c> a</c><01:35:55.440><c> minus</c><01:35:55.760><c> b</c><01:35:56.159><c> will</c><01:35:56.320><c> not</c><01:35:56.560><c> work</c>

01:35:57.350 --> 01:35:57.360 align:start position:0%
right now a minus b will not work
 

01:35:57.360 --> 01:36:00.070 align:start position:0%
right now a minus b will not work
to<01:35:57.520><c> make</c><01:35:57.679><c> it</c><01:35:57.840><c> work</c><01:35:58.480><c> we</c><01:35:58.639><c> need</c><01:35:58.880><c> one</c><01:35:59.119><c> more</c>

01:36:00.070 --> 01:36:00.080 align:start position:0%
to make it work we need one more
 

01:36:00.080 --> 01:36:01.750 align:start position:0%
to make it work we need one more
piece<01:36:00.320><c> of</c><01:36:00.480><c> code</c><01:36:00.719><c> here</c>

01:36:01.750 --> 01:36:01.760 align:start position:0%
piece of code here
 

01:36:01.760 --> 01:36:02.950 align:start position:0%
piece of code here
and

01:36:02.950 --> 01:36:02.960 align:start position:0%
and
 

01:36:02.960 --> 01:36:05.350 align:start position:0%
and
basically<01:36:03.520><c> this</c><01:36:03.760><c> is</c><01:36:03.920><c> the</c>

01:36:05.350 --> 01:36:05.360 align:start position:0%
basically this is the
 

01:36:05.360 --> 01:36:06.790 align:start position:0%
basically this is the
subtraction<01:36:06.159><c> and</c><01:36:06.320><c> the</c><01:36:06.400><c> way</c><01:36:06.480><c> we're</c><01:36:06.639><c> going</c><01:36:06.719><c> to</c>

01:36:06.790 --> 01:36:06.800 align:start position:0%
subtraction and the way we're going to
 

01:36:06.800 --> 01:36:08.790 align:start position:0%
subtraction and the way we're going to
implement<01:36:07.119><c> subtraction</c><01:36:08.080><c> is</c><01:36:08.239><c> we're</c><01:36:08.400><c> going</c><01:36:08.560><c> to</c>

01:36:08.790 --> 01:36:08.800 align:start position:0%
implement subtraction is we're going to
 

01:36:08.800 --> 01:36:10.709 align:start position:0%
implement subtraction is we're going to
implement<01:36:09.119><c> it</c><01:36:09.199><c> by</c><01:36:09.440><c> addition</c><01:36:09.760><c> of</c><01:36:09.920><c> a</c><01:36:10.000><c> negation</c>

01:36:10.709 --> 01:36:10.719 align:start position:0%
implement it by addition of a negation
 

01:36:10.719 --> 01:36:12.149 align:start position:0%
implement it by addition of a negation
and<01:36:10.880><c> then</c><01:36:11.040><c> to</c><01:36:11.119><c> implement</c><01:36:11.520><c> negation</c><01:36:12.000><c> we're</c>

01:36:12.149 --> 01:36:12.159 align:start position:0%
and then to implement negation we're
 

01:36:12.159 --> 01:36:14.149 align:start position:0%
and then to implement negation we're
gonna<01:36:12.320><c> multiply</c><01:36:12.719><c> by</c><01:36:12.800><c> negative</c><01:36:13.119><c> one</c><01:36:13.760><c> so</c><01:36:14.000><c> just</c>

01:36:14.149 --> 01:36:14.159 align:start position:0%
gonna multiply by negative one so just
 

01:36:14.159 --> 01:36:15.510 align:start position:0%
gonna multiply by negative one so just
again<01:36:14.480><c> using</c><01:36:14.719><c> the</c><01:36:14.800><c> stuff</c><01:36:14.960><c> we've</c><01:36:15.199><c> already</c>

01:36:15.510 --> 01:36:15.520 align:start position:0%
again using the stuff we've already
 

01:36:15.520 --> 01:36:17.830 align:start position:0%
again using the stuff we've already
built<01:36:15.920><c> and</c><01:36:16.080><c> just</c><01:36:16.400><c> um</c><01:36:16.880><c> expressing</c><01:36:17.440><c> it</c><01:36:17.520><c> in</c><01:36:17.600><c> terms</c>

01:36:17.830 --> 01:36:17.840 align:start position:0%
built and just um expressing it in terms
 

01:36:17.840 --> 01:36:20.149 align:start position:0%
built and just um expressing it in terms
of<01:36:17.920><c> what</c><01:36:18.080><c> we</c><01:36:18.239><c> have</c><01:36:18.880><c> and</c><01:36:19.040><c> a</c><01:36:19.199><c> minus</c><01:36:19.520><c> b</c><01:36:19.920><c> is</c><01:36:20.000><c> now</c>

01:36:20.149 --> 01:36:20.159 align:start position:0%
of what we have and a minus b is now
 

01:36:20.159 --> 01:36:22.310 align:start position:0%
of what we have and a minus b is now
working<01:36:21.040><c> okay</c><01:36:21.199><c> so</c><01:36:21.360><c> now</c><01:36:21.520><c> let's</c><01:36:21.760><c> scroll</c><01:36:22.080><c> again</c>

01:36:22.310 --> 01:36:22.320 align:start position:0%
working okay so now let's scroll again
 

01:36:22.320 --> 01:36:25.189 align:start position:0%
working okay so now let's scroll again
to<01:36:22.480><c> this</c><01:36:22.719><c> expression</c><01:36:23.119><c> here</c><01:36:23.360><c> for</c><01:36:23.600><c> this</c><01:36:23.840><c> neuron</c>

01:36:25.189 --> 01:36:25.199 align:start position:0%
to this expression here for this neuron
 

01:36:25.199 --> 01:36:26.870 align:start position:0%
to this expression here for this neuron
and<01:36:25.600><c> let's</c><01:36:26.000><c> just</c>

01:36:26.870 --> 01:36:26.880 align:start position:0%
and let's just
 

01:36:26.880 --> 01:36:28.470 align:start position:0%
and let's just
compute<01:36:27.199><c> the</c><01:36:27.440><c> backward</c><01:36:27.840><c> pass</c><01:36:28.080><c> here</c><01:36:28.239><c> once</c>

01:36:28.470 --> 01:36:28.480 align:start position:0%
compute the backward pass here once
 

01:36:28.480 --> 01:36:29.990 align:start position:0%
compute the backward pass here once
we've<01:36:28.639><c> defined</c><01:36:29.119><c> o</c>

01:36:29.990 --> 01:36:30.000 align:start position:0%
we've defined o
 

01:36:30.000 --> 01:36:31.990 align:start position:0%
we've defined o
and<01:36:30.480><c> let's</c><01:36:30.719><c> draw</c><01:36:30.880><c> it</c>

01:36:31.990 --> 01:36:32.000 align:start position:0%
and let's draw it
 

01:36:32.000 --> 01:36:33.669 align:start position:0%
and let's draw it
so<01:36:32.159><c> here's</c><01:36:32.400><c> the</c><01:36:32.719><c> gradients</c><01:36:33.199><c> for</c><01:36:33.360><c> all</c><01:36:33.520><c> these</c>

01:36:33.669 --> 01:36:33.679 align:start position:0%
so here's the gradients for all these
 

01:36:33.679 --> 01:36:35.109 align:start position:0%
so here's the gradients for all these
leaf<01:36:33.920><c> nodes</c><01:36:34.239><c> for</c><01:36:34.400><c> this</c><01:36:34.560><c> two-dimensional</c>

01:36:35.109 --> 01:36:35.119 align:start position:0%
leaf nodes for this two-dimensional
 

01:36:35.119 --> 01:36:37.270 align:start position:0%
leaf nodes for this two-dimensional
neuron<01:36:35.600><c> that</c><01:36:35.760><c> has</c><01:36:35.920><c> a</c><01:36:36.000><c> 10h</c><01:36:36.719><c> that</c><01:36:36.880><c> we've</c><01:36:37.040><c> seen</c>

01:36:37.270 --> 01:36:37.280 align:start position:0%
neuron that has a 10h that we've seen
 

01:36:37.280 --> 01:36:39.430 align:start position:0%
neuron that has a 10h that we've seen
before<01:36:38.320><c> so</c><01:36:38.480><c> now</c><01:36:38.639><c> what</c><01:36:38.800><c> i'd</c><01:36:38.880><c> like</c><01:36:38.960><c> to</c><01:36:39.040><c> do</c><01:36:39.199><c> is</c><01:36:39.360><c> i'd</c>

01:36:39.430 --> 01:36:39.440 align:start position:0%
before so now what i'd like to do is i'd
 

01:36:39.440 --> 01:36:41.910 align:start position:0%
before so now what i'd like to do is i'd
like<01:36:39.600><c> to</c><01:36:40.239><c> break</c><01:36:40.560><c> up</c><01:36:40.639><c> this</c><01:36:40.880><c> 10h</c>

01:36:41.910 --> 01:36:41.920 align:start position:0%
like to break up this 10h
 

01:36:41.920 --> 01:36:44.310 align:start position:0%
like to break up this 10h
into<01:36:42.800><c> this</c><01:36:43.040><c> expression</c><01:36:43.520><c> here</c>

01:36:44.310 --> 01:36:44.320 align:start position:0%
into this expression here
 

01:36:44.320 --> 01:36:46.229 align:start position:0%
into this expression here
so<01:36:44.480><c> let</c><01:36:44.639><c> me</c><01:36:44.719><c> copy</c><01:36:45.040><c> paste</c><01:36:45.360><c> this</c>

01:36:46.229 --> 01:36:46.239 align:start position:0%
so let me copy paste this
 

01:36:46.239 --> 01:36:47.350 align:start position:0%
so let me copy paste this
here

01:36:47.350 --> 01:36:47.360 align:start position:0%
here
 

01:36:47.360 --> 01:36:49.270 align:start position:0%
here
and<01:36:47.520><c> now</c><01:36:47.760><c> instead</c><01:36:48.080><c> of</c><01:36:48.639><c> we'll</c><01:36:48.800><c> preserve</c><01:36:49.119><c> the</c>

01:36:49.270 --> 01:36:49.280 align:start position:0%
and now instead of we'll preserve the
 

01:36:49.280 --> 01:36:50.229 align:start position:0%
and now instead of we'll preserve the
label

01:36:50.229 --> 01:36:50.239 align:start position:0%
label
 

01:36:50.239 --> 01:36:53.669 align:start position:0%
label
and<01:36:50.400><c> we</c><01:36:50.639><c> will</c><01:36:51.280><c> change</c><01:36:51.920><c> how</c><01:36:52.080><c> we</c><01:36:52.159><c> define</c><01:36:52.560><c> o</c>

01:36:53.669 --> 01:36:53.679 align:start position:0%
and we will change how we define o
 

01:36:53.679 --> 01:36:55.030 align:start position:0%
and we will change how we define o
so<01:36:53.840><c> in</c><01:36:53.920><c> particular</c><01:36:54.560><c> we're</c><01:36:54.719><c> going</c><01:36:54.880><c> to</c>

01:36:55.030 --> 01:36:55.040 align:start position:0%
so in particular we're going to
 

01:36:55.040 --> 01:36:56.709 align:start position:0%
so in particular we're going to
implement<01:36:55.360><c> this</c><01:36:55.520><c> formula</c><01:36:55.920><c> here</c>

01:36:56.709 --> 01:36:56.719 align:start position:0%
implement this formula here
 

01:36:56.719 --> 01:36:58.550 align:start position:0%
implement this formula here
so<01:36:56.880><c> we</c><01:36:56.960><c> need</c><01:36:57.119><c> e</c><01:36:57.280><c> to</c><01:36:57.440><c> the</c><01:36:57.520><c> 2x</c>

01:36:58.550 --> 01:36:58.560 align:start position:0%
so we need e to the 2x
 

01:36:58.560 --> 01:37:01.430 align:start position:0%
so we need e to the 2x
minus<01:36:58.800><c> 1</c><01:36:59.040><c> over</c><01:36:59.199><c> e</c><01:36:59.280><c> to</c><01:36:59.360><c> the</c><01:36:59.600><c> x</c><01:36:59.920><c> plus</c><01:37:00.159><c> 1.</c><01:37:00.800><c> so</c><01:37:01.040><c> e</c><01:37:01.280><c> to</c>

01:37:01.430 --> 01:37:01.440 align:start position:0%
minus 1 over e to the x plus 1. so e to
 

01:37:01.440 --> 01:37:04.709 align:start position:0%
minus 1 over e to the x plus 1. so e to
the<01:37:01.679><c> 2x</c><01:37:02.719><c> we</c><01:37:02.800><c> need</c><01:37:02.960><c> to</c><01:37:03.040><c> take</c><01:37:03.280><c> 2</c><01:37:03.600><c> times</c><01:37:04.000><c> n</c><01:37:04.400><c> and</c><01:37:04.560><c> we</c>

01:37:04.709 --> 01:37:04.719 align:start position:0%
the 2x we need to take 2 times n and we
 

01:37:04.719 --> 01:37:07.109 align:start position:0%
the 2x we need to take 2 times n and we
need<01:37:04.800><c> to</c><01:37:04.880><c> exponentiate</c><01:37:05.600><c> it</c><01:37:06.320><c> that's</c><01:37:06.719><c> e</c><01:37:06.880><c> to</c><01:37:07.040><c> the</c>

01:37:07.109 --> 01:37:07.119 align:start position:0%
need to exponentiate it that's e to the
 

01:37:07.119 --> 01:37:08.950 align:start position:0%
need to exponentiate it that's e to the
two<01:37:07.360><c> x</c><01:37:07.920><c> and</c><01:37:08.000><c> then</c><01:37:08.159><c> because</c><01:37:08.400><c> we're</c><01:37:08.560><c> using</c><01:37:08.800><c> it</c>

01:37:08.950 --> 01:37:08.960 align:start position:0%
two x and then because we're using it
 

01:37:08.960 --> 01:37:10.790 align:start position:0%
two x and then because we're using it
twice<01:37:09.679><c> let's</c><01:37:09.920><c> create</c><01:37:10.159><c> an</c><01:37:10.239><c> intermediate</c>

01:37:10.790 --> 01:37:10.800 align:start position:0%
twice let's create an intermediate
 

01:37:10.800 --> 01:37:12.550 align:start position:0%
twice let's create an intermediate
variable<01:37:11.440><c> e</c>

01:37:12.550 --> 01:37:12.560 align:start position:0%
variable e
 

01:37:12.560 --> 01:37:14.950 align:start position:0%
variable e
and<01:37:12.719><c> then</c><01:37:12.880><c> define</c><01:37:13.440><c> o</c><01:37:14.080><c> as</c>

01:37:14.950 --> 01:37:14.960 align:start position:0%
and then define o as
 

01:37:14.960 --> 01:37:16.790 align:start position:0%
and then define o as
e<01:37:15.199><c> plus</c><01:37:15.440><c> one</c><01:37:15.760><c> over</c>

01:37:16.790 --> 01:37:16.800 align:start position:0%
e plus one over
 

01:37:16.800 --> 01:37:19.189 align:start position:0%
e plus one over
e<01:37:16.960><c> minus</c><01:37:17.199><c> one</c><01:37:17.440><c> over</c><01:37:17.600><c> e</c><01:37:17.760><c> plus</c><01:37:18.000><c> one</c>

01:37:19.189 --> 01:37:19.199 align:start position:0%
e minus one over e plus one
 

01:37:19.199 --> 01:37:22.790 align:start position:0%
e minus one over e plus one
e<01:37:19.360><c> minus</c><01:37:19.679><c> one</c><01:37:20.320><c> over</c><01:37:21.119><c> e</c><01:37:21.360><c> plus</c><01:37:21.600><c> one</c>

01:37:22.790 --> 01:37:22.800 align:start position:0%
e minus one over e plus one
 

01:37:22.800 --> 01:37:24.709 align:start position:0%
e minus one over e plus one
and<01:37:23.040><c> that</c><01:37:23.280><c> should</c><01:37:23.440><c> be</c><01:37:23.760><c> it</c><01:37:24.159><c> and</c><01:37:24.320><c> then</c><01:37:24.480><c> we</c><01:37:24.560><c> should</c>

01:37:24.709 --> 01:37:24.719 align:start position:0%
and that should be it and then we should
 

01:37:24.719 --> 01:37:26.950 align:start position:0%
and that should be it and then we should
be<01:37:24.800><c> able</c><01:37:24.960><c> to</c><01:37:25.119><c> draw</c><01:37:25.600><c> that</c><01:37:25.920><c> of</c><01:37:26.080><c> o</c>

01:37:26.950 --> 01:37:26.960 align:start position:0%
be able to draw that of o
 

01:37:26.960 --> 01:37:29.270 align:start position:0%
be able to draw that of o
so<01:37:27.119><c> now</c><01:37:27.360><c> before</c><01:37:27.840><c> i</c><01:37:28.000><c> run</c><01:37:28.159><c> this</c><01:37:28.719><c> what</c><01:37:28.960><c> do</c><01:37:29.119><c> we</c>

01:37:29.270 --> 01:37:29.280 align:start position:0%
so now before i run this what do we
 

01:37:29.280 --> 01:37:30.870 align:start position:0%
so now before i run this what do we
expect<01:37:29.679><c> to</c><01:37:29.920><c> see</c>

01:37:30.870 --> 01:37:30.880 align:start position:0%
expect to see
 

01:37:30.880 --> 01:37:32.629 align:start position:0%
expect to see
number<01:37:31.199><c> one</c><01:37:31.440><c> we're</c><01:37:31.679><c> expecting</c><01:37:32.080><c> to</c><01:37:32.159><c> see</c><01:37:32.320><c> a</c><01:37:32.400><c> much</c>

01:37:32.629 --> 01:37:32.639 align:start position:0%
number one we're expecting to see a much
 

01:37:32.639 --> 01:37:33.669 align:start position:0%
number one we're expecting to see a much
longer

01:37:33.669 --> 01:37:33.679 align:start position:0%
longer
 

01:37:33.679 --> 01:37:35.669 align:start position:0%
longer
graph<01:37:34.080><c> here</c><01:37:34.400><c> because</c><01:37:34.639><c> we've</c><01:37:34.800><c> broken</c><01:37:35.119><c> up</c><01:37:35.280><c> 10h</c>

01:37:35.669 --> 01:37:35.679 align:start position:0%
graph here because we've broken up 10h
 

01:37:35.679 --> 01:37:37.590 align:start position:0%
graph here because we've broken up 10h
into<01:37:35.840><c> a</c><01:37:35.920><c> bunch</c><01:37:36.080><c> of</c><01:37:36.239><c> other</c><01:37:36.400><c> operations</c>

01:37:37.590 --> 01:37:37.600 align:start position:0%
into a bunch of other operations
 

01:37:37.600 --> 01:37:39.350 align:start position:0%
into a bunch of other operations
but<01:37:37.840><c> those</c><01:37:38.080><c> operations</c><01:37:38.639><c> are</c><01:37:38.719><c> mathematically</c>

01:37:39.350 --> 01:37:39.360 align:start position:0%
but those operations are mathematically
 

01:37:39.360 --> 01:37:41.030 align:start position:0%
but those operations are mathematically
equivalent<01:37:40.159><c> and</c><01:37:40.239><c> so</c><01:37:40.480><c> what</c><01:37:40.560><c> we're</c><01:37:40.719><c> expecting</c>

01:37:41.030 --> 01:37:41.040 align:start position:0%
equivalent and so what we're expecting
 

01:37:41.040 --> 01:37:43.750 align:start position:0%
equivalent and so what we're expecting
to<01:37:41.119><c> see</c><01:37:41.360><c> is</c><01:37:41.520><c> number</c><01:37:41.760><c> one</c><01:37:42.480><c> the</c><01:37:42.880><c> same</c>

01:37:43.750 --> 01:37:43.760 align:start position:0%
to see is number one the same
 

01:37:43.760 --> 01:37:45.910 align:start position:0%
to see is number one the same
result<01:37:44.159><c> here</c><01:37:44.560><c> so</c><01:37:44.719><c> the</c><01:37:44.880><c> forward</c><01:37:45.199><c> pass</c><01:37:45.440><c> works</c>

01:37:45.910 --> 01:37:45.920 align:start position:0%
result here so the forward pass works
 

01:37:45.920 --> 01:37:47.189 align:start position:0%
result here so the forward pass works
and<01:37:46.000><c> number</c><01:37:46.320><c> two</c><01:37:46.719><c> because</c><01:37:46.960><c> of</c><01:37:47.040><c> that</c>

01:37:47.189 --> 01:37:47.199 align:start position:0%
and number two because of that
 

01:37:47.199 --> 01:37:49.109 align:start position:0%
and number two because of that
mathematical<01:37:47.760><c> equivalence</c><01:37:48.560><c> we</c><01:37:48.719><c> expect</c><01:37:49.040><c> to</c>

01:37:49.109 --> 01:37:49.119 align:start position:0%
mathematical equivalence we expect to
 

01:37:49.119 --> 01:37:51.030 align:start position:0%
mathematical equivalence we expect to
see<01:37:49.280><c> the</c><01:37:49.360><c> same</c><01:37:49.600><c> backward</c><01:37:50.000><c> pass</c><01:37:50.560><c> and</c><01:37:50.719><c> the</c><01:37:50.800><c> same</c>

01:37:51.030 --> 01:37:51.040 align:start position:0%
see the same backward pass and the same
 

01:37:51.040 --> 01:37:53.189 align:start position:0%
see the same backward pass and the same
gradients<01:37:51.600><c> on</c><01:37:51.760><c> these</c><01:37:51.920><c> leaf</c><01:37:52.159><c> nodes</c><01:37:52.800><c> so</c><01:37:52.960><c> these</c>

01:37:53.189 --> 01:37:53.199 align:start position:0%
gradients on these leaf nodes so these
 

01:37:53.199 --> 01:37:55.189 align:start position:0%
gradients on these leaf nodes so these
gradients<01:37:53.520><c> should</c><01:37:53.679><c> be</c><01:37:53.920><c> identical</c>

01:37:55.189 --> 01:37:55.199 align:start position:0%
gradients should be identical
 

01:37:55.199 --> 01:37:57.990 align:start position:0%
gradients should be identical
so<01:37:55.520><c> let's</c><01:37:56.000><c> run</c><01:37:56.159><c> this</c>

01:37:57.990 --> 01:37:58.000 align:start position:0%
so let's run this
 

01:37:58.000 --> 01:38:00.310 align:start position:0%
so let's run this
so<01:37:58.239><c> number</c><01:37:58.560><c> one</c><01:37:58.719><c> let's</c><01:37:58.960><c> verify</c><01:37:59.440><c> that</c><01:38:00.080><c> instead</c>

01:38:00.310 --> 01:38:00.320 align:start position:0%
so number one let's verify that instead
 

01:38:00.320 --> 01:38:03.270 align:start position:0%
so number one let's verify that instead
of<01:38:00.400><c> a</c><01:38:00.480><c> single</c><01:38:00.719><c> 10h</c><01:38:01.119><c> node</c><01:38:01.360><c> we</c><01:38:01.520><c> have</c><01:38:01.760><c> now</c><01:38:02.239><c> x</c><01:38:03.040><c> and</c>

01:38:03.270 --> 01:38:03.280 align:start position:0%
of a single 10h node we have now x and
 

01:38:03.280 --> 01:38:06.870 align:start position:0%
of a single 10h node we have now x and
we<01:38:03.440><c> have</c><01:38:04.239><c> plus</c><01:38:04.880><c> we</c><01:38:05.040><c> have</c><01:38:05.280><c> times</c><01:38:05.920><c> negative</c><01:38:06.239><c> one</c>

01:38:06.870 --> 01:38:06.880 align:start position:0%
we have plus we have times negative one
 

01:38:06.880 --> 01:38:08.709 align:start position:0%
we have plus we have times negative one
uh<01:38:07.040><c> this</c><01:38:07.280><c> is</c><01:38:07.360><c> the</c><01:38:07.520><c> division</c>

01:38:08.709 --> 01:38:08.719 align:start position:0%
uh this is the division
 

01:38:08.719 --> 01:38:10.870 align:start position:0%
uh this is the division
and<01:38:08.960><c> we</c><01:38:09.199><c> end</c><01:38:09.360><c> up</c><01:38:09.440><c> with</c><01:38:09.679><c> the</c><01:38:09.760><c> same</c><01:38:10.320><c> forward</c><01:38:10.639><c> pass</c>

01:38:10.870 --> 01:38:10.880 align:start position:0%
and we end up with the same forward pass
 

01:38:10.880 --> 01:38:11.750 align:start position:0%
and we end up with the same forward pass
here

01:38:11.750 --> 01:38:11.760 align:start position:0%
here
 

01:38:11.760 --> 01:38:13.109 align:start position:0%
here
and<01:38:11.920><c> then</c><01:38:12.080><c> the</c><01:38:12.239><c> gradients</c><01:38:12.719><c> we</c><01:38:12.880><c> have</c><01:38:12.960><c> to</c><01:38:13.040><c> be</c>

01:38:13.109 --> 01:38:13.119 align:start position:0%
and then the gradients we have to be
 

01:38:13.119 --> 01:38:14.229 align:start position:0%
and then the gradients we have to be
careful<01:38:13.440><c> because</c><01:38:13.600><c> they're</c><01:38:13.760><c> in</c><01:38:13.920><c> slightly</c>

01:38:14.229 --> 01:38:14.239 align:start position:0%
careful because they're in slightly
 

01:38:14.239 --> 01:38:16.310 align:start position:0%
careful because they're in slightly
different<01:38:14.480><c> order</c><01:38:14.800><c> potentially</c><01:38:16.159><c> the</c>

01:38:16.310 --> 01:38:16.320 align:start position:0%
different order potentially the
 

01:38:16.320 --> 01:38:19.430 align:start position:0%
different order potentially the
gradients<01:38:16.639><c> for</c><01:38:16.800><c> w2x2</c><01:38:17.600><c> should</c><01:38:17.760><c> be</c><01:38:17.920><c> 0</c><01:38:18.239><c> and</c><01:38:18.320><c> 0.5</c>

01:38:19.430 --> 01:38:19.440 align:start position:0%
gradients for w2x2 should be 0 and 0.5
 

01:38:19.440 --> 01:38:21.990 align:start position:0%
gradients for w2x2 should be 0 and 0.5
w2<01:38:19.840><c> and</c><01:38:20.000><c> x2</c><01:38:20.320><c> are</c><01:38:20.480><c> 0</c><01:38:20.800><c> and</c><01:38:20.960><c> 0.5</c>

01:38:21.990 --> 01:38:22.000 align:start position:0%
w2 and x2 are 0 and 0.5
 

01:38:22.000 --> 01:38:25.189 align:start position:0%
w2 and x2 are 0 and 0.5
and<01:38:22.080><c> w1</c><01:38:22.639><c> x1</c><01:38:23.040><c> are</c><01:38:23.199><c> 1</c><01:38:23.440><c> and</c><01:38:23.520><c> negative</c><01:38:23.840><c> 1.5</c>

01:38:25.189 --> 01:38:25.199 align:start position:0%
and w1 x1 are 1 and negative 1.5
 

01:38:25.199 --> 01:38:27.189 align:start position:0%
and w1 x1 are 1 and negative 1.5
1<01:38:25.600><c> and</c><01:38:25.760><c> negative</c><01:38:26.000><c> 1.5</c>

01:38:27.189 --> 01:38:27.199 align:start position:0%
1 and negative 1.5
 

01:38:27.199 --> 01:38:28.870 align:start position:0%
1 and negative 1.5
so<01:38:27.440><c> that</c><01:38:27.600><c> means</c><01:38:27.840><c> that</c><01:38:28.239><c> both</c><01:38:28.480><c> our</c><01:38:28.639><c> forward</c>

01:38:28.870 --> 01:38:28.880 align:start position:0%
so that means that both our forward
 

01:38:28.880 --> 01:38:31.030 align:start position:0%
so that means that both our forward
passes<01:38:29.360><c> and</c><01:38:29.440><c> backward</c><01:38:29.760><c> passes</c><01:38:30.159><c> were</c><01:38:30.400><c> correct</c>

01:38:31.030 --> 01:38:31.040 align:start position:0%
passes and backward passes were correct
 

01:38:31.040 --> 01:38:33.109 align:start position:0%
passes and backward passes were correct
because<01:38:31.360><c> this</c><01:38:31.840><c> turned</c><01:38:32.159><c> out</c><01:38:32.239><c> to</c><01:38:32.320><c> be</c><01:38:32.400><c> equivalent</c>

01:38:33.109 --> 01:38:33.119 align:start position:0%
because this turned out to be equivalent
 

01:38:33.119 --> 01:38:33.990 align:start position:0%
because this turned out to be equivalent
to

01:38:33.990 --> 01:38:34.000 align:start position:0%
to
 

01:38:34.000 --> 01:38:35.750 align:start position:0%
to
10h<01:38:34.480><c> before</c>

01:38:35.750 --> 01:38:35.760 align:start position:0%
10h before
 

01:38:35.760 --> 01:38:37.270 align:start position:0%
10h before
and<01:38:35.920><c> so</c><01:38:36.320><c> the</c><01:38:36.400><c> reason</c><01:38:36.639><c> i</c><01:38:36.800><c> wanted</c><01:38:36.960><c> to</c><01:38:37.040><c> go</c><01:38:37.119><c> through</c>

01:38:37.270 --> 01:38:37.280 align:start position:0%
and so the reason i wanted to go through
 

01:38:37.280 --> 01:38:39.189 align:start position:0%
and so the reason i wanted to go through
this<01:38:37.440><c> exercise</c><01:38:37.840><c> is</c><01:38:37.920><c> number</c><01:38:38.159><c> one</c><01:38:38.800><c> we</c><01:38:38.960><c> got</c><01:38:39.119><c> to</c>

01:38:39.189 --> 01:38:39.199 align:start position:0%
this exercise is number one we got to
 

01:38:39.199 --> 01:38:41.590 align:start position:0%
this exercise is number one we got to
practice<01:38:39.600><c> a</c><01:38:39.679><c> few</c><01:38:39.840><c> more</c><01:38:40.080><c> operations</c><01:38:41.040><c> and</c><01:38:41.280><c> uh</c>

01:38:41.590 --> 01:38:41.600 align:start position:0%
practice a few more operations and uh
 

01:38:41.600 --> 01:38:43.430 align:start position:0%
practice a few more operations and uh
writing<01:38:41.840><c> more</c><01:38:42.080><c> backwards</c><01:38:42.400><c> passes</c><01:38:43.040><c> and</c><01:38:43.119><c> number</c>

01:38:43.430 --> 01:38:43.440 align:start position:0%
writing more backwards passes and number
 

01:38:43.440 --> 01:38:45.270 align:start position:0%
writing more backwards passes and number
two<01:38:44.000><c> i</c><01:38:44.080><c> wanted</c><01:38:44.320><c> to</c><01:38:44.480><c> illustrate</c><01:38:44.880><c> the</c><01:38:44.960><c> point</c>

01:38:45.270 --> 01:38:45.280 align:start position:0%
two i wanted to illustrate the point
 

01:38:45.280 --> 01:38:46.149 align:start position:0%
two i wanted to illustrate the point
that

01:38:46.149 --> 01:38:46.159 align:start position:0%
that
 

01:38:46.159 --> 01:38:47.750 align:start position:0%
that
the<01:38:46.480><c> um</c>

01:38:47.750 --> 01:38:47.760 align:start position:0%
the um
 

01:38:47.760 --> 01:38:49.510 align:start position:0%
the um
the<01:38:47.920><c> level</c><01:38:48.239><c> at</c><01:38:48.400><c> which</c><01:38:48.639><c> you</c><01:38:48.800><c> implement</c><01:38:49.360><c> your</c>

01:38:49.510 --> 01:38:49.520 align:start position:0%
the level at which you implement your
 

01:38:49.520 --> 01:38:51.669 align:start position:0%
the level at which you implement your
operations<01:38:50.080><c> is</c><01:38:50.239><c> totally</c><01:38:50.639><c> up</c><01:38:50.719><c> to</c><01:38:50.880><c> you</c><01:38:51.280><c> you</c><01:38:51.440><c> can</c>

01:38:51.669 --> 01:38:51.679 align:start position:0%
operations is totally up to you you can
 

01:38:51.679 --> 01:38:53.430 align:start position:0%
operations is totally up to you you can
implement<01:38:52.080><c> backward</c><01:38:52.400><c> passes</c><01:38:52.719><c> for</c><01:38:52.960><c> tiny</c>

01:38:53.430 --> 01:38:53.440 align:start position:0%
implement backward passes for tiny
 

01:38:53.440 --> 01:38:54.870 align:start position:0%
implement backward passes for tiny
expressions<01:38:53.920><c> like</c><01:38:54.080><c> a</c><01:38:54.159><c> single</c><01:38:54.400><c> individual</c>

01:38:54.870 --> 01:38:54.880 align:start position:0%
expressions like a single individual
 

01:38:54.880 --> 01:38:56.629 align:start position:0%
expressions like a single individual
plus<01:38:55.199><c> or</c><01:38:55.280><c> a</c><01:38:55.360><c> single</c><01:38:55.760><c> times</c>

01:38:56.629 --> 01:38:56.639 align:start position:0%
plus or a single times
 

01:38:56.639 --> 01:38:58.950 align:start position:0%
plus or a single times
or<01:38:56.800><c> you</c><01:38:56.960><c> can</c><01:38:57.040><c> implement</c><01:38:57.360><c> them</c><01:38:57.520><c> for</c><01:38:57.840><c> say</c>

01:38:58.950 --> 01:38:58.960 align:start position:0%
or you can implement them for say
 

01:38:58.960 --> 01:38:59.990 align:start position:0%
or you can implement them for say
10h

01:38:59.990 --> 01:39:00.000 align:start position:0%
10h
 

01:39:00.000 --> 01:39:01.669 align:start position:0%
10h
which<01:39:00.159><c> is</c><01:39:00.320><c> a</c><01:39:00.400><c> kind</c><01:39:00.560><c> of</c><01:39:00.719><c> a</c><01:39:01.119><c> potentially</c><01:39:01.520><c> you</c><01:39:01.600><c> can</c>

01:39:01.669 --> 01:39:01.679 align:start position:0%
which is a kind of a potentially you can
 

01:39:01.679 --> 01:39:03.189 align:start position:0%
which is a kind of a potentially you can
see<01:39:01.760><c> it</c><01:39:01.840><c> as</c><01:39:01.920><c> a</c><01:39:02.000><c> composite</c><01:39:02.480><c> operation</c><01:39:02.960><c> because</c>

01:39:03.189 --> 01:39:03.199 align:start position:0%
see it as a composite operation because
 

01:39:03.199 --> 01:39:05.270 align:start position:0%
see it as a composite operation because
it's<01:39:03.360><c> made</c><01:39:03.520><c> up</c><01:39:03.679><c> of</c><01:39:03.840><c> all</c><01:39:03.920><c> these</c><01:39:04.159><c> more</c><01:39:04.800><c> atomic</c>

01:39:05.270 --> 01:39:05.280 align:start position:0%
it's made up of all these more atomic
 

01:39:05.280 --> 01:39:07.109 align:start position:0%
it's made up of all these more atomic
operations<01:39:06.239><c> but</c><01:39:06.400><c> really</c><01:39:06.639><c> all</c><01:39:06.800><c> of</c><01:39:06.880><c> this</c><01:39:07.040><c> is</c>

01:39:07.109 --> 01:39:07.119 align:start position:0%
operations but really all of this is
 

01:39:07.119 --> 01:39:08.790 align:start position:0%
operations but really all of this is
kind<01:39:07.199><c> of</c><01:39:07.280><c> like</c><01:39:07.440><c> a</c><01:39:07.520><c> fake</c><01:39:07.840><c> concept</c><01:39:08.480><c> all</c><01:39:08.639><c> that</c>

01:39:08.790 --> 01:39:08.800 align:start position:0%
kind of like a fake concept all that
 

01:39:08.800 --> 01:39:10.390 align:start position:0%
kind of like a fake concept all that
matters<01:39:09.119><c> is</c><01:39:09.280><c> we</c><01:39:09.360><c> have</c><01:39:09.520><c> some</c><01:39:09.679><c> kind</c><01:39:09.840><c> of</c><01:39:10.000><c> inputs</c>

01:39:10.390 --> 01:39:10.400 align:start position:0%
matters is we have some kind of inputs
 

01:39:10.400 --> 01:39:11.669 align:start position:0%
matters is we have some kind of inputs
and<01:39:10.480><c> some</c><01:39:10.639><c> kind</c><01:39:10.800><c> of</c><01:39:10.880><c> an</c><01:39:11.040><c> output</c><01:39:11.440><c> and</c><01:39:11.520><c> this</c>

01:39:11.669 --> 01:39:11.679 align:start position:0%
and some kind of an output and this
 

01:39:11.679 --> 01:39:13.030 align:start position:0%
and some kind of an output and this
output<01:39:12.000><c> is</c><01:39:12.080><c> a</c><01:39:12.159><c> function</c><01:39:12.400><c> of</c><01:39:12.480><c> the</c><01:39:12.560><c> inputs</c><01:39:12.960><c> in</c>

01:39:13.030 --> 01:39:13.040 align:start position:0%
output is a function of the inputs in
 

01:39:13.040 --> 01:39:14.790 align:start position:0%
output is a function of the inputs in
some<01:39:13.280><c> way</c><01:39:13.840><c> and</c><01:39:14.000><c> as</c><01:39:14.159><c> long</c><01:39:14.320><c> as</c><01:39:14.480><c> you</c><01:39:14.560><c> can</c><01:39:14.639><c> do</c>

01:39:14.790 --> 01:39:14.800 align:start position:0%
some way and as long as you can do
 

01:39:14.800 --> 01:39:16.629 align:start position:0%
some way and as long as you can do
forward<01:39:15.119><c> pass</c><01:39:15.440><c> and</c><01:39:15.520><c> the</c><01:39:15.679><c> backward</c><01:39:16.080><c> pass</c><01:39:16.480><c> of</c>

01:39:16.629 --> 01:39:16.639 align:start position:0%
forward pass and the backward pass of
 

01:39:16.639 --> 01:39:19.030 align:start position:0%
forward pass and the backward pass of
that<01:39:17.040><c> little</c><01:39:17.360><c> operation</c><01:39:18.320><c> it</c><01:39:18.480><c> doesn't</c><01:39:18.719><c> matter</c>

01:39:19.030 --> 01:39:19.040 align:start position:0%
that little operation it doesn't matter
 

01:39:19.040 --> 01:39:21.189 align:start position:0%
that little operation it doesn't matter
what<01:39:19.280><c> that</c><01:39:19.840><c> operation</c><01:39:20.320><c> is</c>

01:39:21.189 --> 01:39:21.199 align:start position:0%
what that operation is
 

01:39:21.199 --> 01:39:23.030 align:start position:0%
what that operation is
and<01:39:21.360><c> how</c><01:39:21.520><c> composite</c><01:39:22.080><c> it</c><01:39:22.239><c> is</c>

01:39:23.030 --> 01:39:23.040 align:start position:0%
and how composite it is
 

01:39:23.040 --> 01:39:24.629 align:start position:0%
and how composite it is
if<01:39:23.199><c> you</c><01:39:23.280><c> can</c><01:39:23.360><c> write</c><01:39:23.520><c> the</c><01:39:23.600><c> local</c><01:39:23.920><c> gradients</c><01:39:24.480><c> you</c>

01:39:24.629 --> 01:39:24.639 align:start position:0%
if you can write the local gradients you
 

01:39:24.639 --> 01:39:25.990 align:start position:0%
if you can write the local gradients you
can<01:39:24.800><c> chain</c><01:39:25.040><c> the</c><01:39:25.199><c> gradient</c><01:39:25.679><c> and</c><01:39:25.760><c> you</c><01:39:25.840><c> can</c>

01:39:25.990 --> 01:39:26.000 align:start position:0%
can chain the gradient and you can
 

01:39:26.000 --> 01:39:28.149 align:start position:0%
can chain the gradient and you can
continue<01:39:26.320><c> back</c><01:39:26.480><c> propagation</c><01:39:27.360><c> so</c><01:39:27.520><c> the</c><01:39:27.679><c> design</c>

01:39:28.149 --> 01:39:28.159 align:start position:0%
continue back propagation so the design
 

01:39:28.159 --> 01:39:30.070 align:start position:0%
continue back propagation so the design
of<01:39:28.320><c> what</c><01:39:28.560><c> those</c><01:39:29.119><c> functions</c><01:39:29.600><c> are</c><01:39:29.920><c> is</c>

01:39:30.070 --> 01:39:30.080 align:start position:0%
of what those functions are is
 

01:39:30.080 --> 01:39:31.910 align:start position:0%
of what those functions are is
completely<01:39:30.480><c> up</c><01:39:30.560><c> to</c><01:39:30.639><c> you</c>

01:39:31.910 --> 01:39:31.920 align:start position:0%
completely up to you
 

01:39:31.920 --> 01:39:33.270 align:start position:0%
completely up to you
so<01:39:32.080><c> now</c><01:39:32.320><c> i</c><01:39:32.400><c> would</c><01:39:32.560><c> like</c><01:39:32.719><c> to</c><01:39:32.800><c> show</c><01:39:32.960><c> you</c><01:39:33.040><c> how</c><01:39:33.199><c> you</c>

01:39:33.270 --> 01:39:33.280 align:start position:0%
so now i would like to show you how you
 

01:39:33.280 --> 01:39:35.270 align:start position:0%
so now i would like to show you how you
can<01:39:33.440><c> do</c><01:39:33.600><c> the</c><01:39:33.679><c> exact</c><01:39:34.000><c> same</c><01:39:34.239><c> thing</c><01:39:34.639><c> by</c><01:39:34.880><c> using</c><01:39:35.199><c> a</c>

01:39:35.270 --> 01:39:35.280 align:start position:0%
can do the exact same thing by using a
 

01:39:35.280 --> 01:39:37.189 align:start position:0%
can do the exact same thing by using a
modern<01:39:35.600><c> deep</c><01:39:35.840><c> neural</c><01:39:36.080><c> network</c><01:39:36.400><c> library</c><01:39:36.960><c> like</c>

01:39:37.189 --> 01:39:37.199 align:start position:0%
modern deep neural network library like
 

01:39:37.199 --> 01:39:39.990 align:start position:0%
modern deep neural network library like
for<01:39:37.360><c> example</c><01:39:37.760><c> pytorch</c><01:39:38.719><c> which</c><01:39:39.040><c> i've</c><01:39:39.520><c> roughly</c>

01:39:39.990 --> 01:39:40.000 align:start position:0%
for example pytorch which i've roughly
 

01:39:40.000 --> 01:39:41.750 align:start position:0%
for example pytorch which i've roughly
modeled<01:39:40.320><c> micrograd</c>

01:39:41.750 --> 01:39:41.760 align:start position:0%
modeled micrograd
 

01:39:41.760 --> 01:39:42.790 align:start position:0%
modeled micrograd
by

01:39:42.790 --> 01:39:42.800 align:start position:0%
by
 

01:39:42.800 --> 01:39:43.669 align:start position:0%
by
and<01:39:42.960><c> so</c>

01:39:43.669 --> 01:39:43.679 align:start position:0%
and so
 

01:39:43.679 --> 01:39:44.950 align:start position:0%
and so
pytorch<01:39:44.080><c> is</c><01:39:44.159><c> something</c><01:39:44.400><c> you</c><01:39:44.480><c> would</c><01:39:44.639><c> use</c><01:39:44.880><c> in</c>

01:39:44.950 --> 01:39:44.960 align:start position:0%
pytorch is something you would use in
 

01:39:44.960 --> 01:39:46.629 align:start position:0%
pytorch is something you would use in
production<01:39:45.840><c> and</c><01:39:46.000><c> i'll</c><01:39:46.159><c> show</c><01:39:46.239><c> you</c><01:39:46.320><c> how</c><01:39:46.480><c> you</c><01:39:46.560><c> can</c>

01:39:46.629 --> 01:39:46.639 align:start position:0%
production and i'll show you how you can
 

01:39:46.639 --> 01:39:48.629 align:start position:0%
production and i'll show you how you can
do<01:39:46.880><c> the</c><01:39:47.119><c> exact</c><01:39:47.440><c> same</c><01:39:47.679><c> thing</c><01:39:47.840><c> but</c><01:39:48.080><c> in</c><01:39:48.159><c> pytorch</c>

01:39:48.629 --> 01:39:48.639 align:start position:0%
do the exact same thing but in pytorch
 

01:39:48.639 --> 01:39:50.870 align:start position:0%
do the exact same thing but in pytorch
api<01:39:49.520><c> so</c><01:39:49.679><c> i'm</c><01:39:49.760><c> just</c><01:39:49.920><c> going</c><01:39:50.080><c> to</c><01:39:50.159><c> copy</c><01:39:50.480><c> paste</c><01:39:50.719><c> it</c>

01:39:50.870 --> 01:39:50.880 align:start position:0%
api so i'm just going to copy paste it
 

01:39:50.880 --> 01:39:52.550 align:start position:0%
api so i'm just going to copy paste it
in<01:39:51.119><c> and</c><01:39:51.360><c> walk</c><01:39:51.520><c> you</c><01:39:51.679><c> through</c><01:39:51.840><c> it</c><01:39:52.000><c> a</c><01:39:52.000><c> little</c><01:39:52.159><c> bit</c>

01:39:52.550 --> 01:39:52.560 align:start position:0%
in and walk you through it a little bit
 

01:39:52.560 --> 01:39:54.709 align:start position:0%
in and walk you through it a little bit
this<01:39:52.719><c> is</c><01:39:52.800><c> what</c><01:39:52.960><c> it</c><01:39:53.040><c> looks</c><01:39:53.199><c> like</c>

01:39:54.709 --> 01:39:54.719 align:start position:0%
this is what it looks like
 

01:39:54.719 --> 01:39:56.870 align:start position:0%
this is what it looks like
so<01:39:54.960><c> we're</c><01:39:55.119><c> going</c><01:39:55.280><c> to</c><01:39:55.440><c> import</c><01:39:55.760><c> pi</c><01:39:55.920><c> torch</c><01:39:56.800><c> and</c>

01:39:56.870 --> 01:39:56.880 align:start position:0%
so we're going to import pi torch and
 

01:39:56.880 --> 01:39:59.590 align:start position:0%
so we're going to import pi torch and
then<01:39:57.040><c> we</c><01:39:57.119><c> need</c><01:39:57.280><c> to</c><01:39:57.360><c> define</c><01:39:58.080><c> these</c>

01:39:59.590 --> 01:39:59.600 align:start position:0%
then we need to define these
 

01:39:59.600 --> 01:40:01.669 align:start position:0%
then we need to define these
value<01:40:00.000><c> objects</c><01:40:00.480><c> like</c><01:40:00.639><c> we</c><01:40:00.800><c> have</c><01:40:00.880><c> here</c>

01:40:01.669 --> 01:40:01.679 align:start position:0%
value objects like we have here
 

01:40:01.679 --> 01:40:04.790 align:start position:0%
value objects like we have here
now<01:40:02.239><c> micrograd</c><01:40:02.880><c> is</c><01:40:02.960><c> a</c><01:40:03.040><c> scalar</c><01:40:03.440><c> valued</c>

01:40:04.790 --> 01:40:04.800 align:start position:0%
now micrograd is a scalar valued
 

01:40:04.800 --> 01:40:07.430 align:start position:0%
now micrograd is a scalar valued
engine<01:40:05.280><c> so</c><01:40:05.520><c> we</c><01:40:05.679><c> only</c><01:40:05.920><c> have</c><01:40:06.320><c> scalar</c><01:40:06.719><c> values</c>

01:40:07.430 --> 01:40:07.440 align:start position:0%
engine so we only have scalar values
 

01:40:07.440 --> 01:40:09.990 align:start position:0%
engine so we only have scalar values
like<01:40:07.679><c> 2.0</c><01:40:08.800><c> but</c><01:40:09.040><c> in</c><01:40:09.119><c> pi</c><01:40:09.360><c> torch</c><01:40:09.600><c> everything</c><01:40:09.920><c> is</c>

01:40:09.990 --> 01:40:10.000 align:start position:0%
like 2.0 but in pi torch everything is
 

01:40:10.000 --> 01:40:11.750 align:start position:0%
like 2.0 but in pi torch everything is
based<01:40:10.239><c> around</c><01:40:10.560><c> tensors</c><01:40:11.280><c> and</c><01:40:11.440><c> like</c><01:40:11.600><c> i</c>

01:40:11.750 --> 01:40:11.760 align:start position:0%
based around tensors and like i
 

01:40:11.760 --> 01:40:13.830 align:start position:0%
based around tensors and like i
mentioned<01:40:12.159><c> tensors</c><01:40:12.639><c> are</c><01:40:12.800><c> just</c><01:40:13.119><c> n-dimensional</c>

01:40:13.830 --> 01:40:13.840 align:start position:0%
mentioned tensors are just n-dimensional
 

01:40:13.840 --> 01:40:15.750 align:start position:0%
mentioned tensors are just n-dimensional
arrays<01:40:14.320><c> of</c><01:40:14.480><c> scalars</c>

01:40:15.750 --> 01:40:15.760 align:start position:0%
arrays of scalars
 

01:40:15.760 --> 01:40:17.590 align:start position:0%
arrays of scalars
so<01:40:16.159><c> that's</c><01:40:16.400><c> why</c><01:40:16.639><c> things</c><01:40:16.880><c> get</c><01:40:17.119><c> a</c><01:40:17.199><c> little</c><01:40:17.440><c> bit</c>

01:40:17.590 --> 01:40:17.600 align:start position:0%
so that's why things get a little bit
 

01:40:17.600 --> 01:40:19.830 align:start position:0%
so that's why things get a little bit
more<01:40:17.760><c> complicated</c><01:40:18.320><c> here</c><01:40:18.639><c> i</c><01:40:18.800><c> just</c><01:40:18.960><c> need</c><01:40:19.600><c> a</c>

01:40:19.830 --> 01:40:19.840 align:start position:0%
more complicated here i just need a
 

01:40:19.840 --> 01:40:21.750 align:start position:0%
more complicated here i just need a
scalar<01:40:20.239><c> value</c><01:40:20.560><c> to</c><01:40:20.719><c> tensor</c><01:40:21.119><c> a</c><01:40:21.280><c> tensor</c><01:40:21.600><c> with</c>

01:40:21.750 --> 01:40:21.760 align:start position:0%
scalar value to tensor a tensor with
 

01:40:21.760 --> 01:40:23.350 align:start position:0%
scalar value to tensor a tensor with
just<01:40:22.000><c> a</c><01:40:22.080><c> single</c><01:40:22.320><c> element</c>

01:40:23.350 --> 01:40:23.360 align:start position:0%
just a single element
 

01:40:23.360 --> 01:40:25.270 align:start position:0%
just a single element
but<01:40:23.679><c> by</c><01:40:23.840><c> default</c><01:40:24.239><c> when</c><01:40:24.400><c> you</c><01:40:24.480><c> work</c><01:40:24.639><c> with</c>

01:40:25.270 --> 01:40:25.280 align:start position:0%
but by default when you work with
 

01:40:25.280 --> 01:40:28.470 align:start position:0%
but by default when you work with
pytorch<01:40:25.760><c> you</c><01:40:25.840><c> would</c><01:40:26.000><c> use</c><01:40:26.400><c> um</c>

01:40:28.470 --> 01:40:28.480 align:start position:0%
pytorch you would use um
 

01:40:28.480 --> 01:40:30.629 align:start position:0%
pytorch you would use um
more<01:40:28.639><c> complicated</c><01:40:29.119><c> tensors</c><01:40:29.520><c> like</c><01:40:29.760><c> this</c><01:40:30.320><c> so</c><01:40:30.480><c> if</c>

01:40:30.629 --> 01:40:30.639 align:start position:0%
more complicated tensors like this so if
 

01:40:30.639 --> 01:40:33.910 align:start position:0%
more complicated tensors like this so if
i<01:40:30.719><c> import</c><01:40:31.040><c> pytorch</c>

01:40:33.910 --> 01:40:33.920 align:start position:0%
 
 

01:40:33.920 --> 01:40:36.229 align:start position:0%
 
then<01:40:34.239><c> i</c><01:40:34.320><c> can</c><01:40:34.480><c> create</c><01:40:34.719><c> tensors</c><01:40:35.119><c> like</c><01:40:35.360><c> this</c><01:40:36.159><c> and</c>

01:40:36.229 --> 01:40:36.239 align:start position:0%
then i can create tensors like this and
 

01:40:36.239 --> 01:40:38.310 align:start position:0%
then i can create tensors like this and
this<01:40:36.400><c> tensor</c><01:40:36.719><c> for</c><01:40:36.880><c> example</c><01:40:37.360><c> is</c><01:40:37.520><c> a</c><01:40:37.840><c> two</c><01:40:38.080><c> by</c>

01:40:38.310 --> 01:40:38.320 align:start position:0%
this tensor for example is a two by
 

01:40:38.320 --> 01:40:39.750 align:start position:0%
this tensor for example is a two by
three<01:40:38.800><c> array</c>

01:40:39.750 --> 01:40:39.760 align:start position:0%
three array
 

01:40:39.760 --> 01:40:41.109 align:start position:0%
three array
of<01:40:40.080><c> scalar</c>

01:40:41.109 --> 01:40:41.119 align:start position:0%
of scalar
 

01:40:41.119 --> 01:40:42.470 align:start position:0%
of scalar
scalars

01:40:42.470 --> 01:40:42.480 align:start position:0%
scalars
 

01:40:42.480 --> 01:40:45.189 align:start position:0%
scalars
in<01:40:42.560><c> a</c><01:40:42.639><c> single</c><01:40:43.040><c> compact</c><01:40:43.760><c> representation</c><01:40:44.880><c> so</c><01:40:45.040><c> we</c>

01:40:45.189 --> 01:40:45.199 align:start position:0%
in a single compact representation so we
 

01:40:45.199 --> 01:40:46.550 align:start position:0%
in a single compact representation so we
can<01:40:45.280><c> check</c><01:40:45.520><c> its</c><01:40:45.679><c> shape</c><01:40:46.000><c> we</c><01:40:46.080><c> see</c><01:40:46.239><c> that</c><01:40:46.400><c> it's</c><01:40:46.480><c> a</c>

01:40:46.550 --> 01:40:46.560 align:start position:0%
can check its shape we see that it's a
 

01:40:46.560 --> 01:40:47.990 align:start position:0%
can check its shape we see that it's a
two<01:40:46.719><c> by</c><01:40:46.880><c> three</c><01:40:47.119><c> array</c>

01:40:47.990 --> 01:40:48.000 align:start position:0%
two by three array
 

01:40:48.000 --> 01:40:49.430 align:start position:0%
two by three array
and<01:40:48.400><c> so</c><01:40:48.560><c> on</c>

01:40:49.430 --> 01:40:49.440 align:start position:0%
and so on
 

01:40:49.440 --> 01:40:50.790 align:start position:0%
and so on
so<01:40:49.600><c> this</c><01:40:49.840><c> is</c><01:40:49.920><c> usually</c><01:40:50.239><c> what</c><01:40:50.320><c> you</c><01:40:50.480><c> would</c><01:40:50.560><c> work</c>

01:40:50.790 --> 01:40:50.800 align:start position:0%
so this is usually what you would work
 

01:40:50.800 --> 01:40:53.990 align:start position:0%
so this is usually what you would work
with<01:40:51.280><c> um</c><01:40:51.760><c> in</c><01:40:52.080><c> the</c><01:40:52.239><c> actual</c><01:40:52.560><c> libraries</c><01:40:53.520><c> so</c><01:40:53.760><c> here</c>

01:40:53.990 --> 01:40:54.000 align:start position:0%
with um in the actual libraries so here
 

01:40:54.000 --> 01:40:55.270 align:start position:0%
with um in the actual libraries so here
i'm<01:40:54.159><c> creating</c>

01:40:55.270 --> 01:40:55.280 align:start position:0%
i'm creating
 

01:40:55.280 --> 01:40:58.070 align:start position:0%
i'm creating
a<01:40:55.440><c> tensor</c><01:40:56.320><c> that</c><01:40:56.480><c> has</c><01:40:56.719><c> only</c><01:40:56.880><c> a</c><01:40:56.960><c> single</c><01:40:57.280><c> element</c>

01:40:58.070 --> 01:40:58.080 align:start position:0%
a tensor that has only a single element
 

01:40:58.080 --> 01:41:00.470 align:start position:0%
a tensor that has only a single element
2.0

01:41:00.470 --> 01:41:00.480 align:start position:0%
2.0
 

01:41:00.480 --> 01:41:03.510 align:start position:0%
2.0
and<01:41:00.639><c> then</c><01:41:01.199><c> i'm</c><01:41:01.360><c> casting</c><01:41:01.840><c> it</c><01:41:02.000><c> to</c><01:41:02.159><c> be</c><01:41:02.639><c> double</c>

01:41:03.510 --> 01:41:03.520 align:start position:0%
and then i'm casting it to be double
 

01:41:03.520 --> 01:41:05.750 align:start position:0%
and then i'm casting it to be double
because<01:41:03.920><c> python</c><01:41:04.480><c> is</c><01:41:04.560><c> by</c><01:41:04.719><c> default</c><01:41:05.199><c> using</c>

01:41:05.750 --> 01:41:05.760 align:start position:0%
because python is by default using
 

01:41:05.760 --> 01:41:07.350 align:start position:0%
because python is by default using
double<01:41:06.000><c> precision</c><01:41:06.480><c> for</c><01:41:06.639><c> its</c><01:41:06.719><c> floating</c><01:41:07.119><c> point</c>

01:41:07.350 --> 01:41:07.360 align:start position:0%
double precision for its floating point
 

01:41:07.360 --> 01:41:08.950 align:start position:0%
double precision for its floating point
numbers<01:41:07.840><c> so</c><01:41:08.000><c> i'd</c><01:41:08.080><c> like</c><01:41:08.320><c> everything</c><01:41:08.639><c> to</c><01:41:08.719><c> be</c>

01:41:08.950 --> 01:41:08.960 align:start position:0%
numbers so i'd like everything to be
 

01:41:08.960 --> 01:41:12.390 align:start position:0%
numbers so i'd like everything to be
identical<01:41:09.920><c> by</c><01:41:10.080><c> default</c><01:41:10.960><c> the</c><01:41:11.280><c> data</c><01:41:11.600><c> type</c><01:41:12.239><c> of</c>

01:41:12.390 --> 01:41:12.400 align:start position:0%
identical by default the data type of
 

01:41:12.400 --> 01:41:14.790 align:start position:0%
identical by default the data type of
these<01:41:12.639><c> tensors</c><01:41:13.040><c> will</c><01:41:13.199><c> be</c><01:41:13.360><c> float32</c><01:41:14.480><c> so</c><01:41:14.639><c> it's</c>

01:41:14.790 --> 01:41:14.800 align:start position:0%
these tensors will be float32 so it's
 

01:41:14.800 --> 01:41:16.709 align:start position:0%
these tensors will be float32 so it's
only<01:41:14.960><c> using</c><01:41:15.199><c> a</c><01:41:15.280><c> single</c><01:41:15.520><c> precision</c><01:41:15.920><c> float</c><01:41:16.560><c> so</c>

01:41:16.709 --> 01:41:16.719 align:start position:0%
only using a single precision float so
 

01:41:16.719 --> 01:41:18.950 align:start position:0%
only using a single precision float so
i'm<01:41:16.880><c> casting</c><01:41:17.280><c> it</c><01:41:17.520><c> to</c><01:41:17.679><c> double</c>

01:41:18.950 --> 01:41:18.960 align:start position:0%
i'm casting it to double
 

01:41:18.960 --> 01:41:21.189 align:start position:0%
i'm casting it to double
so<01:41:19.199><c> that</c><01:41:19.760><c> we</c><01:41:19.920><c> have</c><01:41:20.000><c> float64</c><01:41:20.719><c> just</c><01:41:20.880><c> like</c><01:41:21.119><c> in</c>

01:41:21.189 --> 01:41:21.199 align:start position:0%
so that we have float64 just like in
 

01:41:21.199 --> 01:41:22.629 align:start position:0%
so that we have float64 just like in
python

01:41:22.629 --> 01:41:22.639 align:start position:0%
python
 

01:41:22.639 --> 01:41:24.709 align:start position:0%
python
so<01:41:22.800><c> i'm</c><01:41:22.880><c> casting</c><01:41:23.199><c> to</c><01:41:23.280><c> double</c><01:41:24.000><c> and</c><01:41:24.159><c> then</c><01:41:24.320><c> we</c><01:41:24.480><c> get</c>

01:41:24.709 --> 01:41:24.719 align:start position:0%
so i'm casting to double and then we get
 

01:41:24.719 --> 01:41:28.070 align:start position:0%
so i'm casting to double and then we get
something<01:41:25.600><c> similar</c><01:41:26.080><c> to</c><01:41:26.560><c> value</c><01:41:26.960><c> of</c><01:41:27.119><c> two</c><01:41:27.920><c> the</c>

01:41:28.070 --> 01:41:28.080 align:start position:0%
something similar to value of two the
 

01:41:28.080 --> 01:41:29.590 align:start position:0%
something similar to value of two the
next<01:41:28.239><c> thing</c><01:41:28.400><c> i</c><01:41:28.480><c> have</c><01:41:28.639><c> to</c><01:41:28.719><c> do</c><01:41:28.880><c> is</c><01:41:29.040><c> because</c><01:41:29.360><c> these</c>

01:41:29.590 --> 01:41:29.600 align:start position:0%
next thing i have to do is because these
 

01:41:29.600 --> 01:41:31.510 align:start position:0%
next thing i have to do is because these
are<01:41:29.679><c> leaf</c><01:41:29.920><c> nodes</c><01:41:30.480><c> by</c><01:41:30.639><c> default</c><01:41:31.040><c> pytorch</c>

01:41:31.510 --> 01:41:31.520 align:start position:0%
are leaf nodes by default pytorch
 

01:41:31.520 --> 01:41:32.950 align:start position:0%
are leaf nodes by default pytorch
assumes<01:41:31.840><c> that</c><01:41:32.000><c> they</c><01:41:32.080><c> do</c><01:41:32.239><c> not</c><01:41:32.480><c> require</c>

01:41:32.950 --> 01:41:32.960 align:start position:0%
assumes that they do not require
 

01:41:32.960 --> 01:41:35.189 align:start position:0%
assumes that they do not require
gradients<01:41:33.760><c> so</c><01:41:33.920><c> i</c><01:41:34.000><c> need</c><01:41:34.159><c> to</c><01:41:34.320><c> explicitly</c><01:41:34.960><c> say</c>

01:41:35.189 --> 01:41:35.199 align:start position:0%
gradients so i need to explicitly say
 

01:41:35.199 --> 01:41:36.790 align:start position:0%
gradients so i need to explicitly say
that<01:41:35.440><c> all</c><01:41:35.679><c> of</c><01:41:35.760><c> these</c><01:41:36.000><c> nodes</c><01:41:36.320><c> require</c>

01:41:36.790 --> 01:41:36.800 align:start position:0%
that all of these nodes require
 

01:41:36.800 --> 01:41:37.910 align:start position:0%
that all of these nodes require
gradients

01:41:37.910 --> 01:41:37.920 align:start position:0%
gradients
 

01:41:37.920 --> 01:41:39.830 align:start position:0%
gradients
okay<01:41:38.480><c> so</c><01:41:38.639><c> this</c><01:41:38.719><c> is</c><01:41:38.800><c> going</c><01:41:38.960><c> to</c><01:41:39.040><c> construct</c>

01:41:39.830 --> 01:41:39.840 align:start position:0%
okay so this is going to construct
 

01:41:39.840 --> 01:41:43.189 align:start position:0%
okay so this is going to construct
scalar<01:41:40.560><c> valued</c><01:41:41.280><c> one</c><01:41:41.600><c> element</c><01:41:42.159><c> tensors</c>

01:41:43.189 --> 01:41:43.199 align:start position:0%
scalar valued one element tensors
 

01:41:43.199 --> 01:41:44.470 align:start position:0%
scalar valued one element tensors
make<01:41:43.360><c> sure</c><01:41:43.520><c> that</c><01:41:43.679><c> fighters</c><01:41:44.080><c> knows</c><01:41:44.239><c> that</c><01:41:44.320><c> they</c>

01:41:44.470 --> 01:41:44.480 align:start position:0%
make sure that fighters knows that they
 

01:41:44.480 --> 01:41:47.109 align:start position:0%
make sure that fighters knows that they
require<01:41:44.960><c> gradients</c><01:41:46.080><c> now</c><01:41:46.320><c> by</c><01:41:46.480><c> default</c><01:41:46.880><c> these</c>

01:41:47.109 --> 01:41:47.119 align:start position:0%
require gradients now by default these
 

01:41:47.119 --> 01:41:48.870 align:start position:0%
require gradients now by default these
are<01:41:47.199><c> set</c><01:41:47.360><c> to</c><01:41:47.520><c> false</c><01:41:47.760><c> by</c><01:41:47.920><c> the</c><01:41:48.000><c> way</c><01:41:48.480><c> because</c><01:41:48.719><c> of</c>

01:41:48.870 --> 01:41:48.880 align:start position:0%
are set to false by the way because of
 

01:41:48.880 --> 01:41:50.790 align:start position:0%
are set to false by the way because of
efficiency<01:41:49.360><c> reasons</c><01:41:50.000><c> because</c><01:41:50.320><c> usually</c><01:41:50.639><c> you</c>

01:41:50.790 --> 01:41:50.800 align:start position:0%
efficiency reasons because usually you
 

01:41:50.800 --> 01:41:53.590 align:start position:0%
efficiency reasons because usually you
would<01:41:50.960><c> not</c><01:41:51.119><c> want</c><01:41:51.360><c> gradients</c><01:41:51.840><c> for</c><01:41:52.159><c> leaf</c><01:41:52.400><c> nodes</c>

01:41:53.590 --> 01:41:53.600 align:start position:0%
would not want gradients for leaf nodes
 

01:41:53.600 --> 01:41:55.750 align:start position:0%
would not want gradients for leaf nodes
like<01:41:53.760><c> the</c><01:41:53.920><c> inputs</c><01:41:54.639><c> to</c><01:41:54.800><c> the</c><01:41:54.960><c> network</c><01:41:55.440><c> and</c><01:41:55.600><c> this</c>

01:41:55.750 --> 01:41:55.760 align:start position:0%
like the inputs to the network and this
 

01:41:55.760 --> 01:41:57.189 align:start position:0%
like the inputs to the network and this
is<01:41:55.840><c> just</c><01:41:56.000><c> trying</c><01:41:56.239><c> to</c><01:41:56.320><c> be</c><01:41:56.480><c> efficient</c><01:41:56.960><c> in</c><01:41:57.040><c> the</c>

01:41:57.189 --> 01:41:57.199 align:start position:0%
is just trying to be efficient in the
 

01:41:57.199 --> 01:41:59.189 align:start position:0%
is just trying to be efficient in the
most<01:41:57.520><c> common</c><01:41:57.840><c> cases</c>

01:41:59.189 --> 01:41:59.199 align:start position:0%
most common cases
 

01:41:59.199 --> 01:42:01.430 align:start position:0%
most common cases
so<01:41:59.360><c> once</c><01:41:59.520><c> we've</c><01:41:59.679><c> defined</c><01:42:00.080><c> all</c><01:42:00.239><c> of</c><01:42:00.400><c> our</c><01:42:00.560><c> values</c>

01:42:01.430 --> 01:42:01.440 align:start position:0%
so once we've defined all of our values
 

01:42:01.440 --> 01:42:03.910 align:start position:0%
so once we've defined all of our values
in<01:42:01.600><c> python</c><01:42:02.560><c> we</c><01:42:02.719><c> can</c><01:42:02.880><c> perform</c><01:42:03.199><c> arithmetic</c><01:42:03.760><c> just</c>

01:42:03.910 --> 01:42:03.920 align:start position:0%
in python we can perform arithmetic just
 

01:42:03.920 --> 01:42:05.990 align:start position:0%
in python we can perform arithmetic just
like<01:42:04.080><c> we</c><01:42:04.239><c> can</c><01:42:04.400><c> here</c><01:42:04.560><c> in</c><01:42:04.719><c> microgradlend</c><01:42:05.840><c> so</c>

01:42:05.990 --> 01:42:06.000 align:start position:0%
like we can here in microgradlend so
 

01:42:06.000 --> 01:42:07.590 align:start position:0%
like we can here in microgradlend so
this<01:42:06.159><c> will</c><01:42:06.239><c> just</c><01:42:06.480><c> work</c><01:42:07.119><c> and</c><01:42:07.199><c> then</c><01:42:07.360><c> there's</c><01:42:07.520><c> a</c>

01:42:07.590 --> 01:42:07.600 align:start position:0%
this will just work and then there's a
 

01:42:07.600 --> 01:42:09.669 align:start position:0%
this will just work and then there's a
torch.10h<01:42:08.560><c> also</c>

01:42:09.669 --> 01:42:09.679 align:start position:0%
torch.10h also
 

01:42:09.679 --> 01:42:12.470 align:start position:0%
torch.10h also
and<01:42:09.760><c> when</c><01:42:09.920><c> we</c><01:42:10.080><c> get</c><01:42:10.239><c> back</c><01:42:10.560><c> is</c><01:42:10.719><c> a</c><01:42:10.800><c> tensor</c><01:42:11.440><c> again</c>

01:42:12.470 --> 01:42:12.480 align:start position:0%
and when we get back is a tensor again
 

01:42:12.480 --> 01:42:13.510 align:start position:0%
and when we get back is a tensor again
and<01:42:12.639><c> we</c><01:42:12.800><c> can</c>

01:42:13.510 --> 01:42:13.520 align:start position:0%
and we can
 

01:42:13.520 --> 01:42:15.590 align:start position:0%
and we can
just<01:42:13.760><c> like</c><01:42:14.000><c> in</c><01:42:14.159><c> micrograd</c><01:42:14.880><c> it's</c><01:42:15.040><c> got</c><01:42:15.199><c> a</c><01:42:15.280><c> data</c>

01:42:15.590 --> 01:42:15.600 align:start position:0%
just like in micrograd it's got a data
 

01:42:15.600 --> 01:42:18.229 align:start position:0%
just like in micrograd it's got a data
attribute<01:42:16.320><c> and</c><01:42:16.400><c> it's</c><01:42:16.560><c> got</c><01:42:16.719><c> grant</c><01:42:17.040><c> attributes</c>

01:42:18.229 --> 01:42:18.239 align:start position:0%
attribute and it's got grant attributes
 

01:42:18.239 --> 01:42:19.910 align:start position:0%
attribute and it's got grant attributes
so<01:42:18.400><c> these</c><01:42:18.800><c> tensor</c><01:42:19.199><c> objects</c><01:42:19.520><c> just</c><01:42:19.679><c> like</c><01:42:19.840><c> in</c>

01:42:19.910 --> 01:42:19.920 align:start position:0%
so these tensor objects just like in
 

01:42:19.920 --> 01:42:22.709 align:start position:0%
so these tensor objects just like in
micrograd<01:42:20.480><c> have</c><01:42:20.639><c> a</c><01:42:20.719><c> dot</c><01:42:20.960><c> data</c><01:42:21.280><c> and</c><01:42:21.440><c> a</c><01:42:21.520><c> dot</c><01:42:21.760><c> grad</c>

01:42:22.709 --> 01:42:22.719 align:start position:0%
micrograd have a dot data and a dot grad
 

01:42:22.719 --> 01:42:23.430 align:start position:0%
micrograd have a dot data and a dot grad
and

01:42:23.430 --> 01:42:23.440 align:start position:0%
and
 

01:42:23.440 --> 01:42:25.109 align:start position:0%
and
the<01:42:23.600><c> only</c><01:42:23.760><c> difference</c><01:42:24.080><c> here</c><01:42:24.239><c> is</c><01:42:24.400><c> that</c><01:42:24.800><c> we</c><01:42:24.960><c> need</c>

01:42:25.109 --> 01:42:25.119 align:start position:0%
the only difference here is that we need
 

01:42:25.119 --> 01:42:28.070 align:start position:0%
the only difference here is that we need
to<01:42:25.199><c> call</c><01:42:25.360><c> it</c><01:42:25.440><c> that</c><01:42:25.679><c> item</c><01:42:26.560><c> because</c><01:42:27.199><c> otherwise</c>

01:42:28.070 --> 01:42:28.080 align:start position:0%
to call it that item because otherwise
 

01:42:28.080 --> 01:42:30.390 align:start position:0%
to call it that item because otherwise
um<01:42:28.639><c> pi</c><01:42:28.880><c> torch</c>

01:42:30.390 --> 01:42:30.400 align:start position:0%
um pi torch
 

01:42:30.400 --> 01:42:32.149 align:start position:0%
um pi torch
that<01:42:30.639><c> item</c><01:42:30.880><c> basically</c><01:42:31.280><c> takes</c>

01:42:32.149 --> 01:42:32.159 align:start position:0%
that item basically takes
 

01:42:32.159 --> 01:42:34.070 align:start position:0%
that item basically takes
a<01:42:32.320><c> single</c><01:42:32.719><c> tensor</c><01:42:33.119><c> of</c><01:42:33.199><c> one</c><01:42:33.440><c> element</c><01:42:33.840><c> and</c><01:42:34.000><c> it</c>

01:42:34.070 --> 01:42:34.080 align:start position:0%
a single tensor of one element and it
 

01:42:34.080 --> 01:42:36.229 align:start position:0%
a single tensor of one element and it
just<01:42:34.239><c> returns</c><01:42:34.719><c> that</c><01:42:34.880><c> element</c><01:42:35.679><c> stripping</c><01:42:36.080><c> out</c>

01:42:36.229 --> 01:42:36.239 align:start position:0%
just returns that element stripping out
 

01:42:36.239 --> 01:42:37.750 align:start position:0%
just returns that element stripping out
the<01:42:36.320><c> tensor</c>

01:42:37.750 --> 01:42:37.760 align:start position:0%
the tensor
 

01:42:37.760 --> 01:42:39.510 align:start position:0%
the tensor
so<01:42:37.920><c> let</c><01:42:38.080><c> me</c><01:42:38.159><c> just</c><01:42:38.320><c> run</c><01:42:38.480><c> this</c><01:42:38.800><c> and</c><01:42:38.960><c> hopefully</c><01:42:39.360><c> we</c>

01:42:39.510 --> 01:42:39.520 align:start position:0%
so let me just run this and hopefully we
 

01:42:39.520 --> 01:42:41.270 align:start position:0%
so let me just run this and hopefully we
are<01:42:39.679><c> going</c><01:42:39.840><c> to</c><01:42:39.920><c> get</c><01:42:40.320><c> this</c><01:42:40.560><c> is</c><01:42:40.719><c> going</c><01:42:40.880><c> to</c><01:42:41.040><c> print</c>

01:42:41.270 --> 01:42:41.280 align:start position:0%
are going to get this is going to print
 

01:42:41.280 --> 01:42:42.470 align:start position:0%
are going to get this is going to print
the<01:42:41.440><c> forward</c><01:42:41.679><c> pass</c>

01:42:42.470 --> 01:42:42.480 align:start position:0%
the forward pass
 

01:42:42.480 --> 01:42:44.870 align:start position:0%
the forward pass
which<01:42:42.800><c> is</c><01:42:43.280><c> 0.707</c>

01:42:44.870 --> 01:42:44.880 align:start position:0%
which is 0.707
 

01:42:44.880 --> 01:42:46.790 align:start position:0%
which is 0.707
and<01:42:45.040><c> this</c><01:42:45.360><c> will</c><01:42:45.520><c> be</c><01:42:45.679><c> the</c><01:42:45.760><c> gradients</c><01:42:46.560><c> which</c>

01:42:46.790 --> 01:42:46.800 align:start position:0%
and this will be the gradients which
 

01:42:46.800 --> 01:42:48.310 align:start position:0%
and this will be the gradients which
hopefully<01:42:47.280><c> are</c>

01:42:48.310 --> 01:42:48.320 align:start position:0%
hopefully are
 

01:42:48.320 --> 01:42:51.109 align:start position:0%
hopefully are
0.5<01:42:48.960><c> 0</c><01:42:49.280><c> negative</c><01:42:49.600><c> 1.5</c><01:42:50.159><c> and</c><01:42:50.320><c> 1.</c>

01:42:51.109 --> 01:42:51.119 align:start position:0%
0.5 0 negative 1.5 and 1.
 

01:42:51.119 --> 01:42:53.750 align:start position:0%
0.5 0 negative 1.5 and 1.
so<01:42:51.360><c> if</c><01:42:51.440><c> we</c><01:42:51.600><c> just</c><01:42:51.840><c> run</c><01:42:52.000><c> this</c>

01:42:53.750 --> 01:42:53.760 align:start position:0%
so if we just run this
 

01:42:53.760 --> 01:42:54.950 align:start position:0%
so if we just run this
there<01:42:54.000><c> we</c><01:42:54.080><c> go</c>

01:42:54.950 --> 01:42:54.960 align:start position:0%
there we go
 

01:42:54.960 --> 01:42:57.430 align:start position:0%
there we go
0.7<01:42:55.440><c> so</c><01:42:55.600><c> the</c><01:42:55.679><c> forward</c><01:42:56.000><c> pass</c><01:42:56.320><c> agrees</c><01:42:57.119><c> and</c><01:42:57.199><c> then</c>

01:42:57.430 --> 01:42:57.440 align:start position:0%
0.7 so the forward pass agrees and then
 

01:42:57.440 --> 01:42:59.350 align:start position:0%
0.7 so the forward pass agrees and then
point<01:42:57.679><c> five</c><01:42:57.920><c> zero</c><01:42:58.480><c> negative</c><01:42:58.800><c> one</c><01:42:58.960><c> point</c><01:42:59.119><c> five</c>

01:42:59.350 --> 01:42:59.360 align:start position:0%
point five zero negative one point five
 

01:42:59.360 --> 01:43:00.629 align:start position:0%
point five zero negative one point five
and<01:42:59.440><c> one</c>

01:43:00.629 --> 01:43:00.639 align:start position:0%
and one
 

01:43:00.639 --> 01:43:02.629 align:start position:0%
and one
so<01:43:00.800><c> pi</c><01:43:01.040><c> torch</c><01:43:01.360><c> agrees</c><01:43:01.679><c> with</c><01:43:01.920><c> us</c>

01:43:02.629 --> 01:43:02.639 align:start position:0%
so pi torch agrees with us
 

01:43:02.639 --> 01:43:05.030 align:start position:0%
so pi torch agrees with us
and<01:43:02.800><c> just</c><01:43:02.960><c> to</c><01:43:03.119><c> show</c><01:43:03.280><c> you</c><01:43:03.360><c> here</c><01:43:03.520><c> basically</c><01:43:03.920><c> o</c>

01:43:05.030 --> 01:43:05.040 align:start position:0%
and just to show you here basically o
 

01:43:05.040 --> 01:43:08.229 align:start position:0%
and just to show you here basically o
here's<01:43:05.360><c> a</c><01:43:05.440><c> tensor</c><01:43:05.840><c> with</c><01:43:06.000><c> a</c><01:43:06.080><c> single</c><01:43:06.400><c> element</c>

01:43:08.229 --> 01:43:08.239 align:start position:0%
here's a tensor with a single element
 

01:43:08.239 --> 01:43:09.510 align:start position:0%
here's a tensor with a single element
and<01:43:08.400><c> it's</c><01:43:08.560><c> a</c><01:43:08.639><c> double</c>

01:43:09.510 --> 01:43:09.520 align:start position:0%
and it's a double
 

01:43:09.520 --> 01:43:11.990 align:start position:0%
and it's a double
and<01:43:09.679><c> we</c><01:43:09.920><c> can</c><01:43:10.080><c> call</c><01:43:10.400><c> that</c><01:43:10.639><c> item</c><01:43:10.960><c> on</c><01:43:11.119><c> it</c><01:43:11.360><c> to</c><01:43:11.760><c> just</c>

01:43:11.990 --> 01:43:12.000 align:start position:0%
and we can call that item on it to just
 

01:43:12.000 --> 01:43:14.310 align:start position:0%
and we can call that item on it to just
get<01:43:12.159><c> the</c><01:43:12.320><c> single</c><01:43:12.960><c> number</c><01:43:13.280><c> out</c>

01:43:14.310 --> 01:43:14.320 align:start position:0%
get the single number out
 

01:43:14.320 --> 01:43:16.870 align:start position:0%
get the single number out
so<01:43:14.480><c> that's</c><01:43:14.719><c> what</c><01:43:14.880><c> item</c><01:43:15.199><c> does</c><01:43:15.920><c> and</c><01:43:16.159><c> o</c><01:43:16.560><c> is</c><01:43:16.719><c> a</c>

01:43:16.870 --> 01:43:16.880 align:start position:0%
so that's what item does and o is a
 

01:43:16.880 --> 01:43:18.950 align:start position:0%
so that's what item does and o is a
tensor<01:43:17.280><c> object</c><01:43:17.520><c> like</c><01:43:17.760><c> i</c><01:43:17.840><c> mentioned</c><01:43:18.560><c> and</c><01:43:18.719><c> it's</c>

01:43:18.950 --> 01:43:18.960 align:start position:0%
tensor object like i mentioned and it's
 

01:43:18.960 --> 01:43:20.470 align:start position:0%
tensor object like i mentioned and it's
got<01:43:19.199><c> a</c><01:43:19.280><c> backward</c><01:43:19.600><c> function</c><01:43:19.920><c> just</c><01:43:20.080><c> like</c><01:43:20.239><c> we've</c>

01:43:20.470 --> 01:43:20.480 align:start position:0%
got a backward function just like we've
 

01:43:20.480 --> 01:43:22.070 align:start position:0%
got a backward function just like we've
implemented

01:43:22.070 --> 01:43:22.080 align:start position:0%
implemented
 

01:43:22.080 --> 01:43:23.830 align:start position:0%
implemented
and<01:43:22.239><c> then</c><01:43:22.639><c> all</c><01:43:22.800><c> of</c><01:43:22.880><c> these</c><01:43:23.119><c> also</c><01:43:23.360><c> have</c><01:43:23.440><c> a</c><01:43:23.520><c> dot</c>

01:43:23.830 --> 01:43:23.840 align:start position:0%
and then all of these also have a dot
 

01:43:23.840 --> 01:43:26.070 align:start position:0%
and then all of these also have a dot
graph<01:43:24.159><c> so</c><01:43:24.320><c> like</c><01:43:24.560><c> x2</c><01:43:24.960><c> for</c><01:43:25.040><c> example</c><01:43:25.360><c> in</c><01:43:25.520><c> the</c><01:43:25.600><c> grad</c>

01:43:26.070 --> 01:43:26.080 align:start position:0%
graph so like x2 for example in the grad
 

01:43:26.080 --> 01:43:28.070 align:start position:0%
graph so like x2 for example in the grad
and<01:43:26.239><c> it's</c><01:43:26.400><c> a</c><01:43:26.480><c> tensor</c><01:43:27.199><c> and</c><01:43:27.360><c> we</c><01:43:27.440><c> can</c><01:43:27.600><c> pop</c><01:43:27.840><c> out</c><01:43:28.000><c> the</c>

01:43:28.070 --> 01:43:28.080 align:start position:0%
and it's a tensor and we can pop out the
 

01:43:28.080 --> 01:43:31.430 align:start position:0%
and it's a tensor and we can pop out the
individual<01:43:28.480><c> number</c><01:43:28.800><c> with</c><01:43:29.280><c> that</c><01:43:29.520><c> actin</c>

01:43:31.430 --> 01:43:31.440 align:start position:0%
individual number with that actin
 

01:43:31.440 --> 01:43:32.950 align:start position:0%
individual number with that actin
so<01:43:31.600><c> basically</c>

01:43:32.950 --> 01:43:32.960 align:start position:0%
so basically
 

01:43:32.960 --> 01:43:35.030 align:start position:0%
so basically
torches<01:43:33.920><c> torch</c><01:43:34.159><c> can</c><01:43:34.320><c> do</c><01:43:34.480><c> what</c><01:43:34.639><c> we</c><01:43:34.800><c> did</c><01:43:34.960><c> in</c>

01:43:35.030 --> 01:43:35.040 align:start position:0%
torches torch can do what we did in
 

01:43:35.040 --> 01:43:37.189 align:start position:0%
torches torch can do what we did in
micrograph<01:43:35.679><c> is</c><01:43:35.840><c> a</c><01:43:35.920><c> special</c><01:43:36.320><c> case</c><01:43:36.880><c> when</c><01:43:37.040><c> your</c>

01:43:37.189 --> 01:43:37.199 align:start position:0%
micrograph is a special case when your
 

01:43:37.199 --> 01:43:40.390 align:start position:0%
micrograph is a special case when your
tensors<01:43:37.679><c> are</c><01:43:37.920><c> all</c><01:43:38.560><c> single</c><01:43:38.960><c> element</c><01:43:39.440><c> tensors</c>

01:43:40.390 --> 01:43:40.400 align:start position:0%
tensors are all single element tensors
 

01:43:40.400 --> 01:43:42.149 align:start position:0%
tensors are all single element tensors
but<01:43:40.560><c> the</c><01:43:40.719><c> big</c><01:43:40.960><c> deal</c><01:43:41.199><c> with</c><01:43:41.360><c> pytorch</c><01:43:41.920><c> is</c><01:43:42.000><c> that</c>

01:43:42.149 --> 01:43:42.159 align:start position:0%
but the big deal with pytorch is that
 

01:43:42.159 --> 01:43:43.270 align:start position:0%
but the big deal with pytorch is that
everything<01:43:42.480><c> is</c><01:43:42.639><c> significantly</c><01:43:43.119><c> more</c>

01:43:43.270 --> 01:43:43.280 align:start position:0%
everything is significantly more
 

01:43:43.280 --> 01:43:45.109 align:start position:0%
everything is significantly more
efficient<01:43:44.080><c> because</c><01:43:44.400><c> we</c><01:43:44.560><c> are</c><01:43:44.719><c> working</c><01:43:45.040><c> with</c>

01:43:45.109 --> 01:43:45.119 align:start position:0%
efficient because we are working with
 

01:43:45.119 --> 01:43:47.270 align:start position:0%
efficient because we are working with
these<01:43:45.360><c> tensor</c><01:43:46.000><c> objects</c><01:43:46.560><c> and</c><01:43:46.639><c> we</c><01:43:46.800><c> can</c><01:43:46.880><c> do</c><01:43:47.040><c> lots</c>

01:43:47.270 --> 01:43:47.280 align:start position:0%
these tensor objects and we can do lots
 

01:43:47.280 --> 01:43:49.189 align:start position:0%
these tensor objects and we can do lots
of<01:43:47.440><c> operations</c><01:43:48.080><c> in</c><01:43:48.239><c> parallel</c><01:43:48.800><c> on</c><01:43:48.960><c> all</c><01:43:49.119><c> of</c>

01:43:49.189 --> 01:43:49.199 align:start position:0%
of operations in parallel on all of
 

01:43:49.199 --> 01:43:51.430 align:start position:0%
of operations in parallel on all of
these<01:43:49.440><c> tensors</c>

01:43:51.430 --> 01:43:51.440 align:start position:0%
these tensors
 

01:43:51.440 --> 01:43:53.510 align:start position:0%
these tensors
but<01:43:51.679><c> otherwise</c><01:43:52.480><c> what</c><01:43:52.639><c> we've</c><01:43:52.880><c> built</c><01:43:53.199><c> very</c><01:43:53.360><c> much</c>

01:43:53.510 --> 01:43:53.520 align:start position:0%
but otherwise what we've built very much
 

01:43:53.520 --> 01:43:55.590 align:start position:0%
but otherwise what we've built very much
agrees<01:43:53.840><c> with</c><01:43:54.000><c> the</c><01:43:54.080><c> api</c><01:43:54.480><c> of</c><01:43:54.560><c> pytorch</c>

01:43:55.590 --> 01:43:55.600 align:start position:0%
agrees with the api of pytorch
 

01:43:55.600 --> 01:43:57.189 align:start position:0%
agrees with the api of pytorch
okay<01:43:55.840><c> so</c><01:43:55.920><c> now</c><01:43:56.080><c> that</c><01:43:56.239><c> we</c><01:43:56.400><c> have</c><01:43:56.480><c> some</c><01:43:56.719><c> machinery</c>

01:43:57.189 --> 01:43:57.199 align:start position:0%
okay so now that we have some machinery
 

01:43:57.199 --> 01:43:58.310 align:start position:0%
okay so now that we have some machinery
to<01:43:57.280><c> build</c><01:43:57.520><c> out</c><01:43:57.679><c> pretty</c><01:43:57.840><c> complicated</c>

01:43:58.310 --> 01:43:58.320 align:start position:0%
to build out pretty complicated
 

01:43:58.320 --> 01:44:00.470 align:start position:0%
to build out pretty complicated
mathematical<01:43:58.880><c> expressions</c><01:43:59.760><c> we</c><01:43:59.920><c> can</c><01:44:00.159><c> also</c>

01:44:00.470 --> 01:44:00.480 align:start position:0%
mathematical expressions we can also
 

01:44:00.480 --> 01:44:02.229 align:start position:0%
mathematical expressions we can also
start<01:44:00.719><c> building</c><01:44:00.960><c> out</c><01:44:01.119><c> neural</c><01:44:01.440><c> nets</c><01:44:01.840><c> and</c><01:44:02.000><c> as</c><01:44:02.159><c> i</c>

01:44:02.229 --> 01:44:02.239 align:start position:0%
start building out neural nets and as i
 

01:44:02.239 --> 01:44:03.430 align:start position:0%
start building out neural nets and as i
mentioned<01:44:02.480><c> neural</c><01:44:02.800><c> nets</c><01:44:03.040><c> are</c><01:44:03.119><c> just</c><01:44:03.360><c> a</c>

01:44:03.430 --> 01:44:03.440 align:start position:0%
mentioned neural nets are just a
 

01:44:03.440 --> 01:44:05.510 align:start position:0%
mentioned neural nets are just a
specific<01:44:03.920><c> class</c><01:44:04.560><c> of</c><01:44:04.960><c> mathematical</c>

01:44:05.510 --> 01:44:05.520 align:start position:0%
specific class of mathematical
 

01:44:05.520 --> 01:44:07.030 align:start position:0%
specific class of mathematical
expressions

01:44:07.030 --> 01:44:07.040 align:start position:0%
expressions
 

01:44:07.040 --> 01:44:08.149 align:start position:0%
expressions
so<01:44:07.199><c> we're</c><01:44:07.280><c> going</c><01:44:07.440><c> to</c><01:44:07.520><c> start</c><01:44:07.679><c> building</c><01:44:08.000><c> out</c><01:44:08.080><c> a</c>

01:44:08.149 --> 01:44:08.159 align:start position:0%
so we're going to start building out a
 

01:44:08.159 --> 01:44:09.830 align:start position:0%
so we're going to start building out a
neural<01:44:08.400><c> net</c><01:44:08.639><c> piece</c><01:44:08.880><c> by</c><01:44:09.040><c> piece</c><01:44:09.360><c> and</c><01:44:09.440><c> eventually</c>

01:44:09.830 --> 01:44:09.840 align:start position:0%
neural net piece by piece and eventually
 

01:44:09.840 --> 01:44:12.149 align:start position:0%
neural net piece by piece and eventually
we'll<01:44:10.080><c> build</c><01:44:10.320><c> out</c><01:44:10.560><c> a</c><01:44:10.880><c> two-layer</c><01:44:11.280><c> multi-layer</c>

01:44:12.149 --> 01:44:12.159 align:start position:0%
we'll build out a two-layer multi-layer
 

01:44:12.159 --> 01:44:14.229 align:start position:0%
we'll build out a two-layer multi-layer
layer<01:44:12.400><c> perceptron</c><01:44:13.040><c> as</c><01:44:13.199><c> it's</c><01:44:13.360><c> called</c><01:44:14.000><c> and</c><01:44:14.159><c> i'll</c>

01:44:14.229 --> 01:44:14.239 align:start position:0%
layer perceptron as it's called and i'll
 

01:44:14.239 --> 01:44:15.910 align:start position:0%
layer perceptron as it's called and i'll
show<01:44:14.400><c> you</c><01:44:14.480><c> exactly</c><01:44:14.800><c> what</c><01:44:14.960><c> that</c><01:44:15.119><c> means</c>

01:44:15.910 --> 01:44:15.920 align:start position:0%
show you exactly what that means
 

01:44:15.920 --> 01:44:17.109 align:start position:0%
show you exactly what that means
let's<01:44:16.080><c> start</c><01:44:16.239><c> with</c><01:44:16.400><c> a</c><01:44:16.480><c> single</c><01:44:16.719><c> individual</c>

01:44:17.109 --> 01:44:17.119 align:start position:0%
let's start with a single individual
 

01:44:17.119 --> 01:44:19.669 align:start position:0%
let's start with a single individual
neuron<01:44:17.840><c> we've</c><01:44:18.080><c> implemented</c><01:44:18.560><c> one</c><01:44:18.719><c> here</c><01:44:19.440><c> but</c>

01:44:19.669 --> 01:44:19.679 align:start position:0%
neuron we've implemented one here but
 

01:44:19.679 --> 01:44:21.350 align:start position:0%
neuron we've implemented one here but
here<01:44:19.840><c> i'm</c><01:44:19.920><c> going</c><01:44:20.080><c> to</c><01:44:20.239><c> implement</c><01:44:20.639><c> one</c><01:44:21.119><c> that</c>

01:44:21.350 --> 01:44:21.360 align:start position:0%
here i'm going to implement one that
 

01:44:21.360 --> 01:44:24.149 align:start position:0%
here i'm going to implement one that
also<01:44:21.600><c> subscribes</c><01:44:22.239><c> to</c><01:44:22.400><c> the</c><01:44:22.800><c> pytorch</c><01:44:23.440><c> api</c><01:44:24.000><c> in</c>

01:44:24.149 --> 01:44:24.159 align:start position:0%
also subscribes to the pytorch api in
 

01:44:24.159 --> 01:44:26.229 align:start position:0%
also subscribes to the pytorch api in
how<01:44:24.400><c> it</c><01:44:24.719><c> designs</c><01:44:25.360><c> its</c><01:44:25.679><c> neural</c><01:44:25.920><c> network</c>

01:44:26.229 --> 01:44:26.239 align:start position:0%
how it designs its neural network
 

01:44:26.239 --> 01:44:27.270 align:start position:0%
how it designs its neural network
modules

01:44:27.270 --> 01:44:27.280 align:start position:0%
modules
 

01:44:27.280 --> 01:44:28.870 align:start position:0%
modules
so<01:44:27.440><c> just</c><01:44:27.600><c> like</c><01:44:27.760><c> we</c><01:44:27.920><c> saw</c><01:44:28.159><c> that</c><01:44:28.239><c> we</c><01:44:28.400><c> can</c><01:44:28.560><c> like</c>

01:44:28.870 --> 01:44:28.880 align:start position:0%
so just like we saw that we can like
 

01:44:28.880 --> 01:44:31.189 align:start position:0%
so just like we saw that we can like
match<01:44:29.119><c> the</c><01:44:29.280><c> api</c><01:44:29.920><c> of</c><01:44:30.080><c> pytorch</c>

01:44:31.189 --> 01:44:31.199 align:start position:0%
match the api of pytorch
 

01:44:31.199 --> 01:44:33.590 align:start position:0%
match the api of pytorch
on<01:44:31.360><c> the</c><01:44:31.440><c> auto</c><01:44:31.760><c> grad</c><01:44:32.159><c> side</c><01:44:32.960><c> we're</c><01:44:33.119><c> going</c><01:44:33.280><c> to</c><01:44:33.440><c> try</c>

01:44:33.590 --> 01:44:33.600 align:start position:0%
on the auto grad side we're going to try
 

01:44:33.600 --> 01:44:35.830 align:start position:0%
on the auto grad side we're going to try
to<01:44:33.679><c> do</c><01:44:33.840><c> that</c><01:44:34.080><c> on</c><01:44:34.159><c> the</c><01:44:34.239><c> neural</c><01:44:34.480><c> network</c><01:44:34.719><c> modules</c>

01:44:35.830 --> 01:44:35.840 align:start position:0%
to do that on the neural network modules
 

01:44:35.840 --> 01:44:38.390 align:start position:0%
to do that on the neural network modules
so<01:44:36.000><c> here's</c><01:44:36.320><c> class</c><01:44:36.480><c> neuron</c>

01:44:38.390 --> 01:44:38.400 align:start position:0%
so here's class neuron
 

01:44:38.400 --> 01:44:40.950 align:start position:0%
so here's class neuron
and<01:44:38.800><c> just</c><01:44:39.119><c> for</c><01:44:39.360><c> the</c><01:44:39.520><c> sake</c><01:44:39.760><c> of</c><01:44:39.840><c> efficiency</c><01:44:40.800><c> i'm</c>

01:44:40.950 --> 01:44:40.960 align:start position:0%
and just for the sake of efficiency i'm
 

01:44:40.960 --> 01:44:42.550 align:start position:0%
and just for the sake of efficiency i'm
going<01:44:41.119><c> to</c><01:44:41.280><c> copy</c><01:44:41.520><c> paste</c><01:44:41.760><c> some</c><01:44:41.920><c> sections</c><01:44:42.320><c> that</c>

01:44:42.550 --> 01:44:42.560 align:start position:0%
going to copy paste some sections that
 

01:44:42.560 --> 01:44:45.510 align:start position:0%
going to copy paste some sections that
are<01:44:43.119><c> relatively</c><01:44:43.600><c> straightforward</c>

01:44:45.510 --> 01:44:45.520 align:start position:0%
are relatively straightforward
 

01:44:45.520 --> 01:44:47.510 align:start position:0%
are relatively straightforward
so<01:44:45.760><c> the</c><01:44:45.920><c> constructor</c><01:44:46.480><c> will</c><01:44:46.639><c> take</c>

01:44:47.510 --> 01:44:47.520 align:start position:0%
so the constructor will take
 

01:44:47.520 --> 01:44:49.750 align:start position:0%
so the constructor will take
number<01:44:47.840><c> of</c><01:44:48.080><c> inputs</c><01:44:48.480><c> to</c><01:44:48.639><c> this</c><01:44:48.800><c> neuron</c><01:44:49.360><c> which</c><01:44:49.600><c> is</c>

01:44:49.750 --> 01:44:49.760 align:start position:0%
number of inputs to this neuron which is
 

01:44:49.760 --> 01:44:52.709 align:start position:0%
number of inputs to this neuron which is
how<01:44:49.920><c> many</c><01:44:50.560><c> inputs</c><01:44:51.119><c> come</c><01:44:51.280><c> to</c><01:44:51.520><c> a</c><01:44:51.600><c> neuron</c><01:44:52.400><c> so</c><01:44:52.560><c> this</c>

01:44:52.709 --> 01:44:52.719 align:start position:0%
how many inputs come to a neuron so this
 

01:44:52.719 --> 01:44:55.109 align:start position:0%
how many inputs come to a neuron so this
one<01:44:52.880><c> for</c><01:44:52.960><c> example</c><01:44:53.280><c> has</c><01:44:53.440><c> three</c><01:44:53.679><c> inputs</c>

01:44:55.109 --> 01:44:55.119 align:start position:0%
one for example has three inputs
 

01:44:55.119 --> 01:44:57.189 align:start position:0%
one for example has three inputs
and<01:44:55.199><c> then</c><01:44:55.440><c> it's</c><01:44:55.520><c> going</c><01:44:55.679><c> to</c><01:44:55.760><c> create</c><01:44:56.080><c> a</c><01:44:56.320><c> weight</c>

01:44:57.189 --> 01:44:57.199 align:start position:0%
and then it's going to create a weight
 

01:44:57.199 --> 01:44:58.390 align:start position:0%
and then it's going to create a weight
there<01:44:57.440><c> is</c><01:44:57.520><c> some</c><01:44:57.679><c> random</c><01:44:57.920><c> number</c><01:44:58.159><c> between</c>

01:44:58.390 --> 01:44:58.400 align:start position:0%
there is some random number between
 

01:44:58.400 --> 01:45:00.070 align:start position:0%
there is some random number between
negative<01:44:58.719><c> one</c><01:44:58.880><c> and</c><01:44:59.040><c> one</c><01:44:59.440><c> for</c><01:44:59.679><c> every</c><01:44:59.840><c> one</c><01:45:00.000><c> of</c>

01:45:00.070 --> 01:45:00.080 align:start position:0%
negative one and one for every one of
 

01:45:00.080 --> 01:45:01.189 align:start position:0%
negative one and one for every one of
those<01:45:00.239><c> inputs</c>

01:45:01.189 --> 01:45:01.199 align:start position:0%
those inputs
 

01:45:01.199 --> 01:45:03.669 align:start position:0%
those inputs
and<01:45:01.440><c> a</c><01:45:01.600><c> bias</c><01:45:02.239><c> that</c><01:45:02.560><c> controls</c><01:45:03.040><c> the</c><01:45:03.280><c> overall</c>

01:45:03.669 --> 01:45:03.679 align:start position:0%
and a bias that controls the overall
 

01:45:03.679 --> 01:45:06.470 align:start position:0%
and a bias that controls the overall
trigger<01:45:03.920><c> happiness</c><01:45:04.400><c> of</c><01:45:04.480><c> this</c><01:45:04.639><c> neuron</c>

01:45:06.470 --> 01:45:06.480 align:start position:0%
trigger happiness of this neuron
 

01:45:06.480 --> 01:45:08.629 align:start position:0%
trigger happiness of this neuron
and<01:45:06.639><c> then</c><01:45:06.880><c> we're</c><01:45:07.040><c> going</c><01:45:07.199><c> to</c><01:45:07.360><c> implement</c><01:45:07.840><c> a</c><01:45:08.000><c> def</c>

01:45:08.629 --> 01:45:08.639 align:start position:0%
and then we're going to implement a def
 

01:45:08.639 --> 01:45:11.270 align:start position:0%
and then we're going to implement a def
underscore<01:45:09.040><c> underscore</c><01:45:09.520><c> call</c>

01:45:11.270 --> 01:45:11.280 align:start position:0%
underscore underscore call
 

01:45:11.280 --> 01:45:13.990 align:start position:0%
underscore underscore call
of<01:45:11.520><c> self</c><01:45:12.000><c> and</c><01:45:12.239><c> x</c><01:45:12.719><c> some</c><01:45:12.960><c> input</c><01:45:13.280><c> x</c>

01:45:13.990 --> 01:45:14.000 align:start position:0%
of self and x some input x
 

01:45:14.000 --> 01:45:15.830 align:start position:0%
of self and x some input x
and<01:45:14.080><c> really</c><01:45:14.320><c> what</c><01:45:14.400><c> we</c><01:45:14.480><c> don't</c><01:45:14.800><c> do</c><01:45:15.040><c> here</c><01:45:15.280><c> is</c><01:45:15.440><c> w</c>

01:45:15.830 --> 01:45:15.840 align:start position:0%
and really what we don't do here is w
 

01:45:15.840 --> 01:45:17.350 align:start position:0%
and really what we don't do here is w
times<01:45:16.159><c> x</c><01:45:16.320><c> plus</c><01:45:16.560><c> b</c>

01:45:17.350 --> 01:45:17.360 align:start position:0%
times x plus b
 

01:45:17.360 --> 01:45:19.510 align:start position:0%
times x plus b
where<01:45:17.600><c> w</c><01:45:18.000><c> times</c><01:45:18.239><c> x</c><01:45:18.400><c> here</c><01:45:18.639><c> is</c><01:45:18.800><c> a</c><01:45:18.880><c> dot</c><01:45:19.119><c> product</c>

01:45:19.510 --> 01:45:19.520 align:start position:0%
where w times x here is a dot product
 

01:45:19.520 --> 01:45:21.270 align:start position:0%
where w times x here is a dot product
specifically

01:45:21.270 --> 01:45:21.280 align:start position:0%
specifically
 

01:45:21.280 --> 01:45:22.790 align:start position:0%
specifically
now<01:45:21.520><c> if</c><01:45:21.600><c> you</c><01:45:21.760><c> haven't</c><01:45:21.920><c> seen</c>

01:45:22.790 --> 01:45:22.800 align:start position:0%
now if you haven't seen
 

01:45:22.800 --> 01:45:23.990 align:start position:0%
now if you haven't seen
call

01:45:23.990 --> 01:45:24.000 align:start position:0%
call
 

01:45:24.000 --> 01:45:26.709 align:start position:0%
call
let<01:45:24.159><c> me</c><01:45:24.239><c> just</c><01:45:24.400><c> return</c><01:45:24.719><c> 0.0</c><01:45:25.280><c> here</c><01:45:25.600><c> for</c><01:45:25.760><c> now</c><01:45:26.560><c> the</c>

01:45:26.709 --> 01:45:26.719 align:start position:0%
let me just return 0.0 here for now the
 

01:45:26.719 --> 01:45:28.310 align:start position:0%
let me just return 0.0 here for now the
way<01:45:26.880><c> this</c><01:45:27.040><c> works</c><01:45:27.280><c> now</c><01:45:27.440><c> is</c><01:45:27.600><c> we</c><01:45:27.679><c> can</c><01:45:27.760><c> have</c><01:45:27.920><c> an</c><01:45:28.159><c> x</c>

01:45:28.310 --> 01:45:28.320 align:start position:0%
way this works now is we can have an x
 

01:45:28.320 --> 01:45:31.109 align:start position:0%
way this works now is we can have an x
which<01:45:28.560><c> is</c><01:45:28.639><c> say</c><01:45:28.880><c> like</c><01:45:29.040><c> 2.0</c><01:45:29.679><c> 3.0</c><01:45:30.719><c> then</c><01:45:30.880><c> we</c><01:45:30.960><c> can</c>

01:45:31.109 --> 01:45:31.119 align:start position:0%
which is say like 2.0 3.0 then we can
 

01:45:31.119 --> 01:45:32.470 align:start position:0%
which is say like 2.0 3.0 then we can
initialize<01:45:31.679><c> a</c><01:45:31.760><c> neuron</c><01:45:32.159><c> that</c><01:45:32.400><c> is</c>

01:45:32.470 --> 01:45:32.480 align:start position:0%
initialize a neuron that is
 

01:45:32.480 --> 01:45:33.910 align:start position:0%
initialize a neuron that is
two-dimensional

01:45:33.910 --> 01:45:33.920 align:start position:0%
two-dimensional
 

01:45:33.920 --> 01:45:35.669 align:start position:0%
two-dimensional
because<01:45:34.159><c> these</c><01:45:34.320><c> are</c><01:45:34.480><c> two</c><01:45:34.639><c> numbers</c><01:45:35.440><c> and</c><01:45:35.520><c> then</c>

01:45:35.669 --> 01:45:35.679 align:start position:0%
because these are two numbers and then
 

01:45:35.679 --> 01:45:37.030 align:start position:0%
because these are two numbers and then
we<01:45:35.760><c> can</c><01:45:35.920><c> feed</c><01:45:36.080><c> those</c><01:45:36.239><c> two</c><01:45:36.400><c> numbers</c><01:45:36.719><c> into</c><01:45:36.880><c> that</c>

01:45:37.030 --> 01:45:37.040 align:start position:0%
we can feed those two numbers into that
 

01:45:37.040 --> 01:45:39.750 align:start position:0%
we can feed those two numbers into that
neuron<01:45:37.600><c> to</c><01:45:37.840><c> get</c><01:45:38.080><c> an</c><01:45:38.239><c> output</c>

01:45:39.750 --> 01:45:39.760 align:start position:0%
neuron to get an output
 

01:45:39.760 --> 01:45:42.629 align:start position:0%
neuron to get an output
and<01:45:39.920><c> so</c><01:45:40.080><c> when</c><01:45:40.239><c> you</c><01:45:40.400><c> use</c><01:45:40.560><c> this</c><01:45:40.800><c> notation</c><01:45:41.679><c> n</c><01:45:41.920><c> of</c><01:45:42.159><c> x</c>

01:45:42.629 --> 01:45:42.639 align:start position:0%
and so when you use this notation n of x
 

01:45:42.639 --> 01:45:45.030 align:start position:0%
and so when you use this notation n of x
python<01:45:43.040><c> will</c><01:45:43.119><c> use</c><01:45:43.679><c> call</c>

01:45:45.030 --> 01:45:45.040 align:start position:0%
python will use call
 

01:45:45.040 --> 01:45:50.070 align:start position:0%
python will use call
so<01:45:45.199><c> currently</c><01:45:45.679><c> call</c><01:45:45.840><c> just</c><01:45:46.000><c> return</c><01:45:46.400><c> 0.0</c>

01:45:50.070 --> 01:45:50.080 align:start position:0%
 
 

01:45:50.080 --> 01:45:52.070 align:start position:0%
 
now<01:45:50.639><c> we'd</c><01:45:50.800><c> like</c><01:45:50.960><c> to</c><01:45:51.119><c> actually</c><01:45:51.520><c> do</c><01:45:51.679><c> the</c><01:45:51.760><c> forward</c>

01:45:52.070 --> 01:45:52.080 align:start position:0%
now we'd like to actually do the forward
 

01:45:52.080 --> 01:45:54.870 align:start position:0%
now we'd like to actually do the forward
pass<01:45:52.320><c> of</c><01:45:52.400><c> this</c><01:45:52.560><c> neuron</c><01:45:53.520><c> instead</c>

01:45:54.870 --> 01:45:54.880 align:start position:0%
pass of this neuron instead
 

01:45:54.880 --> 01:45:57.270 align:start position:0%
pass of this neuron instead
so<01:45:55.040><c> we're</c><01:45:55.199><c> going</c><01:45:55.360><c> to</c><01:45:55.440><c> do</c><01:45:55.600><c> here</c><01:45:55.920><c> first</c><01:45:56.719><c> is</c><01:45:57.040><c> we</c>

01:45:57.270 --> 01:45:57.280 align:start position:0%
so we're going to do here first is we
 

01:45:57.280 --> 01:45:58.950 align:start position:0%
so we're going to do here first is we
need<01:45:57.440><c> to</c><01:45:57.760><c> basically</c><01:45:58.080><c> multiply</c><01:45:58.639><c> all</c><01:45:58.800><c> of</c><01:45:58.880><c> the</c>

01:45:58.950 --> 01:45:58.960 align:start position:0%
need to basically multiply all of the
 

01:45:58.960 --> 01:46:01.350 align:start position:0%
need to basically multiply all of the
elements<01:45:59.520><c> of</c><01:45:59.920><c> w</c><01:46:00.400><c> with</c><01:46:00.639><c> all</c><01:46:00.800><c> of</c><01:46:00.880><c> the</c><01:46:00.960><c> elements</c>

01:46:01.350 --> 01:46:01.360 align:start position:0%
elements of w with all of the elements
 

01:46:01.360 --> 01:46:04.229 align:start position:0%
elements of w with all of the elements
of<01:46:01.520><c> x</c><01:46:02.000><c> pairwise</c><01:46:02.560><c> we</c><01:46:02.639><c> need</c><01:46:02.719><c> to</c><01:46:02.880><c> multiply</c><01:46:03.280><c> them</c>

01:46:04.229 --> 01:46:04.239 align:start position:0%
of x pairwise we need to multiply them
 

01:46:04.239 --> 01:46:05.590 align:start position:0%
of x pairwise we need to multiply them
so<01:46:04.560><c> the</c><01:46:04.719><c> first</c><01:46:04.880><c> thing</c><01:46:05.040><c> we're</c><01:46:05.119><c> going</c><01:46:05.199><c> to</c><01:46:05.280><c> do</c><01:46:05.520><c> is</c>

01:46:05.590 --> 01:46:05.600 align:start position:0%
so the first thing we're going to do is
 

01:46:05.600 --> 01:46:07.109 align:start position:0%
so the first thing we're going to do is
we're<01:46:05.760><c> going</c><01:46:05.920><c> to</c><01:46:06.080><c> zip</c><01:46:06.400><c> up</c>

01:46:07.109 --> 01:46:07.119 align:start position:0%
we're going to zip up
 

01:46:07.119 --> 01:46:09.030 align:start position:0%
we're going to zip up
celta<01:46:07.520><c> w</c><01:46:07.840><c> and</c><01:46:08.080><c> x</c>

01:46:09.030 --> 01:46:09.040 align:start position:0%
celta w and x
 

01:46:09.040 --> 01:46:12.550 align:start position:0%
celta w and x
and<01:46:09.440><c> in</c><01:46:09.600><c> python</c><01:46:10.159><c> zip</c><01:46:10.880><c> takes</c><01:46:11.199><c> two</c><01:46:11.440><c> iterators</c>

01:46:12.550 --> 01:46:12.560 align:start position:0%
and in python zip takes two iterators
 

01:46:12.560 --> 01:46:14.470 align:start position:0%
and in python zip takes two iterators
and<01:46:12.800><c> it</c><01:46:13.040><c> creates</c><01:46:13.280><c> a</c><01:46:13.360><c> new</c><01:46:13.600><c> iterator</c><01:46:14.239><c> that</c>

01:46:14.470 --> 01:46:14.480 align:start position:0%
and it creates a new iterator that
 

01:46:14.480 --> 01:46:16.149 align:start position:0%
and it creates a new iterator that
iterates<01:46:14.880><c> over</c><01:46:15.119><c> the</c><01:46:15.280><c> tuples</c><01:46:15.920><c> of</c><01:46:16.000><c> the</c>

01:46:16.149 --> 01:46:16.159 align:start position:0%
iterates over the tuples of the
 

01:46:16.159 --> 01:46:17.910 align:start position:0%
iterates over the tuples of the
corresponding<01:46:16.719><c> entries</c>

01:46:17.910 --> 01:46:17.920 align:start position:0%
corresponding entries
 

01:46:17.920 --> 01:46:19.990 align:start position:0%
corresponding entries
so<01:46:18.159><c> for</c><01:46:18.320><c> example</c><01:46:18.800><c> just</c><01:46:18.960><c> to</c><01:46:19.119><c> show</c><01:46:19.360><c> you</c><01:46:19.600><c> we</c><01:46:19.679><c> can</c>

01:46:19.990 --> 01:46:20.000 align:start position:0%
so for example just to show you we can
 

01:46:20.000 --> 01:46:21.990 align:start position:0%
so for example just to show you we can
print<01:46:20.719><c> this</c><01:46:21.040><c> list</c>

01:46:21.990 --> 01:46:22.000 align:start position:0%
print this list
 

01:46:22.000 --> 01:46:30.790 align:start position:0%
print this list
and<01:46:22.320><c> still</c><01:46:22.560><c> return</c><01:46:22.880><c> 0.0</c><01:46:23.600><c> here</c>

01:46:30.790 --> 01:46:30.800 align:start position:0%
 
 

01:46:30.800 --> 01:46:34.070 align:start position:0%
 
sorry

01:46:34.070 --> 01:46:34.080 align:start position:0%
 
 

01:46:34.080 --> 01:46:36.229 align:start position:0%
 
so<01:46:34.320><c> we</c><01:46:34.480><c> see</c><01:46:34.639><c> that</c><01:46:34.880><c> these</c><01:46:35.199><c> w's</c><01:46:35.760><c> are</c><01:46:35.840><c> paired</c><01:46:36.159><c> up</c>

01:46:36.229 --> 01:46:36.239 align:start position:0%
so we see that these w's are paired up
 

01:46:36.239 --> 01:46:41.430 align:start position:0%
so we see that these w's are paired up
with<01:46:36.400><c> the</c><01:46:36.639><c> x's</c><01:46:37.280><c> w</c><01:46:37.840><c> with</c><01:46:38.080><c> x</c>

01:46:41.430 --> 01:46:41.440 align:start position:0%
 
 

01:46:41.440 --> 01:46:47.350 align:start position:0%
 
and<01:46:41.520><c> now</c><01:46:41.679><c> what</c><01:46:41.840><c> we</c><01:46:41.920><c> want</c><01:46:42.080><c> to</c><01:46:42.159><c> do</c><01:46:42.400><c> is</c>

01:46:47.350 --> 01:46:47.360 align:start position:0%
 
 

01:46:47.360 --> 01:46:50.629 align:start position:0%
 
for<01:46:47.920><c> w</c><01:46:48.320><c> i</c><01:46:48.719><c> x</c><01:46:48.960><c> i</c><01:46:49.280><c> in</c>

01:46:50.629 --> 01:46:50.639 align:start position:0%
for w i x i in
 

01:46:50.639 --> 01:46:52.709 align:start position:0%
for w i x i in
we<01:46:50.800><c> want</c><01:46:50.960><c> to</c><01:46:51.040><c> multiply</c><01:46:51.520><c> w</c><01:46:51.840><c> times</c>

01:46:52.709 --> 01:46:52.719 align:start position:0%
we want to multiply w times
 

01:46:52.719 --> 01:46:54.870 align:start position:0%
we want to multiply w times
w wi<01:46:53.280><c> times</c><01:46:53.600><c> x</c><01:46:53.760><c> i</c>

01:46:54.870 --> 01:46:54.880 align:start position:0%
w wi times x i
 

01:46:54.880 --> 01:46:56.550 align:start position:0%
w wi times x i
and<01:46:54.960><c> then</c><01:46:55.119><c> we</c><01:46:55.199><c> want</c><01:46:55.360><c> to</c><01:46:55.679><c> sum</c><01:46:56.000><c> all</c><01:46:56.159><c> of</c><01:46:56.239><c> that</c>

01:46:56.550 --> 01:46:56.560 align:start position:0%
and then we want to sum all of that
 

01:46:56.560 --> 01:46:57.510 align:start position:0%
and then we want to sum all of that
together

01:46:57.510 --> 01:46:57.520 align:start position:0%
together
 

01:46:57.520 --> 01:46:59.590 align:start position:0%
together
to<01:46:57.679><c> come</c><01:46:57.920><c> up</c><01:46:58.000><c> with</c><01:46:58.080><c> an</c><01:46:58.239><c> activation</c>

01:46:59.590 --> 01:46:59.600 align:start position:0%
to come up with an activation
 

01:46:59.600 --> 01:47:02.149 align:start position:0%
to come up with an activation
and<01:46:59.840><c> add</c><01:47:00.159><c> also</c><01:47:00.480><c> subnet</c><01:47:00.800><c> b</c><01:47:01.040><c> on</c><01:47:01.119><c> top</c>

01:47:02.149 --> 01:47:02.159 align:start position:0%
and add also subnet b on top
 

01:47:02.159 --> 01:47:04.229 align:start position:0%
and add also subnet b on top
so<01:47:02.320><c> that's</c><01:47:02.480><c> the</c><01:47:02.639><c> raw</c><01:47:02.880><c> activation</c><01:47:03.840><c> and</c><01:47:03.920><c> then</c><01:47:04.159><c> of</c>

01:47:04.229 --> 01:47:04.239 align:start position:0%
so that's the raw activation and then of
 

01:47:04.239 --> 01:47:05.430 align:start position:0%
so that's the raw activation and then of
course<01:47:04.480><c> we</c><01:47:04.560><c> need</c><01:47:04.719><c> to</c><01:47:04.880><c> pass</c><01:47:05.040><c> that</c><01:47:05.199><c> through</c><01:47:05.360><c> a</c>

01:47:05.430 --> 01:47:05.440 align:start position:0%
course we need to pass that through a
 

01:47:05.440 --> 01:47:07.270 align:start position:0%
course we need to pass that through a
non-linearity<01:47:06.560><c> so</c><01:47:06.719><c> what</c><01:47:06.800><c> we're</c><01:47:06.960><c> going</c><01:47:07.040><c> to</c><01:47:07.119><c> be</c>

01:47:07.270 --> 01:47:07.280 align:start position:0%
non-linearity so what we're going to be
 

01:47:07.280 --> 01:47:09.830 align:start position:0%
non-linearity so what we're going to be
returning<01:47:07.760><c> is</c><01:47:08.040><c> act.10h</c>

01:47:09.830 --> 01:47:09.840 align:start position:0%
returning is act.10h
 

01:47:09.840 --> 01:47:12.229 align:start position:0%
returning is act.10h
and<01:47:10.000><c> here's</c><01:47:10.719><c> out</c>

01:47:12.229 --> 01:47:12.239 align:start position:0%
and here's out
 

01:47:12.239 --> 01:47:13.109 align:start position:0%
and here's out
so

01:47:13.109 --> 01:47:13.119 align:start position:0%
so
 

01:47:13.119 --> 01:47:14.550 align:start position:0%
so
now<01:47:13.280><c> we</c><01:47:13.440><c> see</c><01:47:13.600><c> that</c><01:47:13.760><c> we</c><01:47:13.920><c> are</c><01:47:14.000><c> getting</c><01:47:14.320><c> some</c>

01:47:14.550 --> 01:47:14.560 align:start position:0%
now we see that we are getting some
 

01:47:14.560 --> 01:47:16.310 align:start position:0%
now we see that we are getting some
outputs<01:47:15.360><c> and</c><01:47:15.520><c> we</c><01:47:15.600><c> get</c><01:47:15.760><c> a</c><01:47:15.840><c> different</c><01:47:16.080><c> output</c>

01:47:16.310 --> 01:47:16.320 align:start position:0%
outputs and we get a different output
 

01:47:16.320 --> 01:47:17.669 align:start position:0%
outputs and we get a different output
from<01:47:16.480><c> a</c><01:47:16.560><c> neuron</c><01:47:16.880><c> each</c><01:47:17.040><c> time</c><01:47:17.280><c> because</c><01:47:17.440><c> we</c><01:47:17.520><c> are</c>

01:47:17.669 --> 01:47:17.679 align:start position:0%
from a neuron each time because we are
 

01:47:17.679 --> 01:47:19.430 align:start position:0%
from a neuron each time because we are
initializing<01:47:18.239><c> different</c><01:47:18.560><c> weights</c><01:47:18.960><c> and</c><01:47:19.119><c> by</c>

01:47:19.430 --> 01:47:19.440 align:start position:0%
initializing different weights and by
 

01:47:19.440 --> 01:47:21.189 align:start position:0%
initializing different weights and by
and<01:47:19.840><c> biases</c>

01:47:21.189 --> 01:47:21.199 align:start position:0%
and biases
 

01:47:21.199 --> 01:47:22.629 align:start position:0%
and biases
and<01:47:21.280><c> then</c><01:47:21.440><c> to</c><01:47:21.520><c> be</c><01:47:21.679><c> a</c><01:47:21.679><c> bit</c><01:47:21.840><c> more</c><01:47:22.000><c> efficient</c><01:47:22.400><c> here</c>

01:47:22.629 --> 01:47:22.639 align:start position:0%
and then to be a bit more efficient here
 

01:47:22.639 --> 01:47:25.430 align:start position:0%
and then to be a bit more efficient here
actually<01:47:23.440><c> sum</c><01:47:23.840><c> by</c><01:47:24.000><c> the</c><01:47:24.080><c> way</c><01:47:24.320><c> takes</c><01:47:24.719><c> a</c><01:47:24.960><c> second</c>

01:47:25.430 --> 01:47:25.440 align:start position:0%
actually sum by the way takes a second
 

01:47:25.440 --> 01:47:28.870 align:start position:0%
actually sum by the way takes a second
optional<01:47:26.239><c> parameter</c><01:47:27.199><c> which</c><01:47:27.440><c> is</c><01:47:27.679><c> the</c><01:47:27.840><c> start</c>

01:47:28.870 --> 01:47:28.880 align:start position:0%
optional parameter which is the start
 

01:47:28.880 --> 01:47:31.669 align:start position:0%
optional parameter which is the start
and<01:47:29.440><c> by</c><01:47:29.679><c> default</c><01:47:30.159><c> the</c><01:47:30.320><c> start</c><01:47:30.639><c> is</c><01:47:30.800><c> zero</c><01:47:31.440><c> so</c>

01:47:31.669 --> 01:47:31.679 align:start position:0%
and by default the start is zero so
 

01:47:31.679 --> 01:47:34.070 align:start position:0%
and by default the start is zero so
these<01:47:32.239><c> elements</c><01:47:32.639><c> of</c><01:47:32.719><c> this</c><01:47:32.960><c> sum</c><01:47:33.440><c> will</c><01:47:33.600><c> be</c><01:47:33.760><c> added</c>

01:47:34.070 --> 01:47:34.080 align:start position:0%
these elements of this sum will be added
 

01:47:34.080 --> 01:47:35.750 align:start position:0%
these elements of this sum will be added
on<01:47:34.159><c> top</c><01:47:34.320><c> of</c><01:47:34.400><c> zero</c><01:47:34.719><c> to</c><01:47:34.800><c> begin</c><01:47:35.119><c> with</c><01:47:35.600><c> but</c>

01:47:35.750 --> 01:47:35.760 align:start position:0%
on top of zero to begin with but
 

01:47:35.760 --> 01:47:37.189 align:start position:0%
on top of zero to begin with but
actually<01:47:36.000><c> we</c><01:47:36.159><c> can</c><01:47:36.239><c> just</c><01:47:36.400><c> start</c><01:47:36.639><c> with</c><01:47:36.800><c> cell</c><01:47:36.960><c> dot</c>

01:47:37.189 --> 01:47:37.199 align:start position:0%
actually we can just start with cell dot
 

01:47:37.199 --> 01:47:38.390 align:start position:0%
actually we can just start with cell dot
b

01:47:38.390 --> 01:47:38.400 align:start position:0%
b
 

01:47:38.400 --> 01:47:39.750 align:start position:0%
b
and<01:47:38.560><c> then</c><01:47:38.800><c> we</c><01:47:38.880><c> just</c><01:47:39.119><c> have</c><01:47:39.199><c> an</c><01:47:39.280><c> expression</c><01:47:39.600><c> like</c>

01:47:39.750 --> 01:47:39.760 align:start position:0%
and then we just have an expression like
 

01:47:39.760 --> 01:47:45.430 align:start position:0%
and then we just have an expression like
this

01:47:45.430 --> 01:47:45.440 align:start position:0%
 
 

01:47:45.440 --> 01:47:47.030 align:start position:0%
 
and<01:47:45.600><c> then</c><01:47:45.840><c> the</c><01:47:46.000><c> generator</c><01:47:46.560><c> expression</c><01:47:46.880><c> here</c>

01:47:47.030 --> 01:47:47.040 align:start position:0%
and then the generator expression here
 

01:47:47.040 --> 01:47:49.350 align:start position:0%
and then the generator expression here
must<01:47:47.199><c> be</c><01:47:47.360><c> parenthesized</c><01:47:48.000><c> in</c><01:47:48.080><c> python</c>

01:47:49.350 --> 01:47:49.360 align:start position:0%
must be parenthesized in python
 

01:47:49.360 --> 01:47:53.750 align:start position:0%
must be parenthesized in python
there<01:47:49.520><c> we</c><01:47:49.679><c> go</c>

01:47:53.750 --> 01:47:53.760 align:start position:0%
 
 

01:47:53.760 --> 01:47:55.669 align:start position:0%
 
yep<01:47:54.080><c> so</c><01:47:54.239><c> now</c><01:47:54.560><c> we</c><01:47:54.639><c> can</c><01:47:54.800><c> forward</c><01:47:55.199><c> a</c><01:47:55.360><c> single</c>

01:47:55.669 --> 01:47:55.679 align:start position:0%
yep so now we can forward a single
 

01:47:55.679 --> 01:47:57.910 align:start position:0%
yep so now we can forward a single
neuron<01:47:56.480><c> next</c><01:47:56.800><c> up</c><01:47:56.880><c> we're</c><01:47:57.040><c> going</c><01:47:57.199><c> to</c><01:47:57.280><c> define</c><01:47:57.679><c> a</c>

01:47:57.910 --> 01:47:57.920 align:start position:0%
neuron next up we're going to define a
 

01:47:57.920 --> 01:47:59.910 align:start position:0%
neuron next up we're going to define a
layer<01:47:58.239><c> of</c><01:47:58.400><c> neurons</c><01:47:59.280><c> so</c><01:47:59.440><c> here</c><01:47:59.600><c> we</c><01:47:59.760><c> have</c><01:47:59.840><c> a</c>

01:47:59.910 --> 01:47:59.920 align:start position:0%
layer of neurons so here we have a
 

01:47:59.920 --> 01:48:02.470 align:start position:0%
layer of neurons so here we have a
schematic<01:48:00.480><c> for</c><01:48:00.719><c> a</c><01:48:01.360><c> mlb</c>

01:48:02.470 --> 01:48:02.480 align:start position:0%
schematic for a mlb
 

01:48:02.480 --> 01:48:05.109 align:start position:0%
schematic for a mlb
so<01:48:02.639><c> we</c><01:48:02.800><c> see</c><01:48:03.040><c> that</c><01:48:03.520><c> these</c><01:48:03.760><c> mlps</c><01:48:04.400><c> each</c><01:48:04.719><c> layer</c>

01:48:05.109 --> 01:48:05.119 align:start position:0%
so we see that these mlps each layer
 

01:48:05.119 --> 01:48:07.030 align:start position:0%
so we see that these mlps each layer
this<01:48:05.360><c> is</c><01:48:05.440><c> one</c><01:48:05.679><c> layer</c><01:48:06.320><c> has</c><01:48:06.480><c> actually</c><01:48:06.719><c> a</c><01:48:06.800><c> number</c>

01:48:07.030 --> 01:48:07.040 align:start position:0%
this is one layer has actually a number
 

01:48:07.040 --> 01:48:08.629 align:start position:0%
this is one layer has actually a number
of<01:48:07.119><c> neurons</c><01:48:07.760><c> and</c><01:48:07.840><c> they're</c><01:48:08.000><c> not</c><01:48:08.159><c> connected</c><01:48:08.480><c> to</c>

01:48:08.629 --> 01:48:08.639 align:start position:0%
of neurons and they're not connected to
 

01:48:08.639 --> 01:48:09.750 align:start position:0%
of neurons and they're not connected to
each<01:48:08.800><c> other</c><01:48:08.960><c> but</c><01:48:09.119><c> all</c><01:48:09.199><c> of</c><01:48:09.280><c> them</c><01:48:09.440><c> are</c><01:48:09.520><c> fully</c>

01:48:09.750 --> 01:48:09.760 align:start position:0%
each other but all of them are fully
 

01:48:09.760 --> 01:48:11.270 align:start position:0%
each other but all of them are fully
connected<01:48:10.080><c> to</c><01:48:10.159><c> the</c><01:48:10.320><c> input</c>

01:48:11.270 --> 01:48:11.280 align:start position:0%
connected to the input
 

01:48:11.280 --> 01:48:13.430 align:start position:0%
connected to the input
so<01:48:11.440><c> what</c><01:48:11.600><c> is</c><01:48:11.760><c> a</c><01:48:11.920><c> layer</c><01:48:12.159><c> of</c><01:48:12.560><c> neurons</c><01:48:13.040><c> it's</c><01:48:13.199><c> just</c>

01:48:13.430 --> 01:48:13.440 align:start position:0%
so what is a layer of neurons it's just
 

01:48:13.440 --> 01:48:15.109 align:start position:0%
so what is a layer of neurons it's just
it's<01:48:13.600><c> just</c><01:48:13.840><c> a</c><01:48:13.920><c> set</c><01:48:14.080><c> of</c><01:48:14.159><c> neurons</c><01:48:14.560><c> evaluated</c>

01:48:15.109 --> 01:48:15.119 align:start position:0%
it's just a set of neurons evaluated
 

01:48:15.119 --> 01:48:16.709 align:start position:0%
it's just a set of neurons evaluated
independently

01:48:16.709 --> 01:48:16.719 align:start position:0%
independently
 

01:48:16.719 --> 01:48:17.750 align:start position:0%
independently
so

01:48:17.750 --> 01:48:17.760 align:start position:0%
so
 

01:48:17.760 --> 01:48:19.990 align:start position:0%
so
in<01:48:17.840><c> the</c><01:48:18.000><c> interest</c><01:48:18.320><c> of</c><01:48:18.480><c> time</c><01:48:18.960><c> i'm</c><01:48:19.199><c> going</c><01:48:19.440><c> to</c><01:48:19.760><c> do</c>

01:48:19.990 --> 01:48:20.000 align:start position:0%
in the interest of time i'm going to do
 

01:48:20.000 --> 01:48:23.030 align:start position:0%
in the interest of time i'm going to do
something<01:48:20.560><c> fairly</c><01:48:20.880><c> straightforward</c><01:48:21.440><c> here</c>

01:48:23.030 --> 01:48:23.040 align:start position:0%
something fairly straightforward here
 

01:48:23.040 --> 01:48:25.030 align:start position:0%
something fairly straightforward here
it's<01:48:23.440><c> um</c>

01:48:25.030 --> 01:48:25.040 align:start position:0%
it's um
 

01:48:25.040 --> 01:48:27.669 align:start position:0%
it's um
literally<01:48:25.440><c> a</c><01:48:25.679><c> layer</c><01:48:26.320><c> is</c><01:48:26.480><c> just</c><01:48:26.719><c> a</c><01:48:26.960><c> list</c><01:48:27.440><c> of</c>

01:48:27.669 --> 01:48:27.679 align:start position:0%
literally a layer is just a list of
 

01:48:27.679 --> 01:48:28.950 align:start position:0%
literally a layer is just a list of
neurons

01:48:28.950 --> 01:48:28.960 align:start position:0%
neurons
 

01:48:28.960 --> 01:48:30.790 align:start position:0%
neurons
and<01:48:29.119><c> then</c><01:48:29.280><c> how</c><01:48:29.440><c> many</c><01:48:29.679><c> neurons</c><01:48:30.080><c> do</c><01:48:30.159><c> we</c><01:48:30.320><c> have</c><01:48:30.639><c> we</c>

01:48:30.790 --> 01:48:30.800 align:start position:0%
and then how many neurons do we have we
 

01:48:30.800 --> 01:48:32.709 align:start position:0%
and then how many neurons do we have we
take<01:48:30.960><c> that</c><01:48:31.199><c> as</c><01:48:31.440><c> an</c><01:48:31.600><c> input</c><01:48:31.840><c> argument</c><01:48:32.239><c> here</c><01:48:32.560><c> how</c>

01:48:32.709 --> 01:48:32.719 align:start position:0%
take that as an input argument here how
 

01:48:32.719 --> 01:48:34.070 align:start position:0%
take that as an input argument here how
many<01:48:32.880><c> neurons</c><01:48:33.199><c> do</c><01:48:33.280><c> you</c><01:48:33.360><c> want</c><01:48:33.520><c> in</c><01:48:33.600><c> your</c><01:48:33.760><c> layer</c>

01:48:34.070 --> 01:48:34.080 align:start position:0%
many neurons do you want in your layer
 

01:48:34.080 --> 01:48:36.550 align:start position:0%
many neurons do you want in your layer
number<01:48:34.400><c> of</c><01:48:34.560><c> outputs</c><01:48:35.119><c> in</c><01:48:35.199><c> this</c><01:48:35.440><c> layer</c>

01:48:36.550 --> 01:48:36.560 align:start position:0%
number of outputs in this layer
 

01:48:36.560 --> 01:48:38.390 align:start position:0%
number of outputs in this layer
and<01:48:36.719><c> so</c><01:48:36.960><c> we</c><01:48:37.119><c> just</c><01:48:37.280><c> initialize</c><01:48:38.000><c> completely</c>

01:48:38.390 --> 01:48:38.400 align:start position:0%
and so we just initialize completely
 

01:48:38.400 --> 01:48:40.229 align:start position:0%
and so we just initialize completely
independent<01:48:38.800><c> neurons</c><01:48:39.360><c> with</c><01:48:39.600><c> this</c><01:48:39.920><c> given</c>

01:48:40.229 --> 01:48:40.239 align:start position:0%
independent neurons with this given
 

01:48:40.239 --> 01:48:43.109 align:start position:0%
independent neurons with this given
dimensionality<01:48:41.280><c> and</c><01:48:41.440><c> when</c><01:48:41.520><c> we</c><01:48:41.679><c> call</c><01:48:42.239><c> on</c><01:48:42.480><c> it</c><01:48:42.880><c> we</c>

01:48:43.109 --> 01:48:43.119 align:start position:0%
dimensionality and when we call on it we
 

01:48:43.119 --> 01:48:44.950 align:start position:0%
dimensionality and when we call on it we
just<01:48:43.679><c> independently</c>

01:48:44.950 --> 01:48:44.960 align:start position:0%
just independently
 

01:48:44.960 --> 01:48:47.750 align:start position:0%
just independently
evaluate<01:48:45.520><c> them</c><01:48:46.320><c> so</c><01:48:46.480><c> now</c><01:48:46.719><c> instead</c><01:48:47.040><c> of</c><01:48:47.119><c> a</c><01:48:47.199><c> neuron</c>

01:48:47.750 --> 01:48:47.760 align:start position:0%
evaluate them so now instead of a neuron
 

01:48:47.760 --> 01:48:49.830 align:start position:0%
evaluate them so now instead of a neuron
we<01:48:47.840><c> can</c><01:48:48.000><c> make</c><01:48:48.239><c> a</c><01:48:48.400><c> layer</c><01:48:48.800><c> of</c><01:48:48.960><c> neurons</c><01:48:49.520><c> they</c><01:48:49.679><c> are</c>

01:48:49.830 --> 01:48:49.840 align:start position:0%
we can make a layer of neurons they are
 

01:48:49.840 --> 01:48:51.189 align:start position:0%
we can make a layer of neurons they are
two-dimensional<01:48:50.320><c> neurons</c><01:48:50.719><c> and</c><01:48:50.800><c> let's</c><01:48:51.040><c> have</c>

01:48:51.189 --> 01:48:51.199 align:start position:0%
two-dimensional neurons and let's have
 

01:48:51.199 --> 01:48:52.310 align:start position:0%
two-dimensional neurons and let's have
three<01:48:51.360><c> of</c><01:48:51.440><c> them</c>

01:48:52.310 --> 01:48:52.320 align:start position:0%
three of them
 

01:48:52.320 --> 01:48:53.830 align:start position:0%
three of them
and<01:48:52.400><c> now</c><01:48:52.639><c> we</c><01:48:52.719><c> see</c><01:48:53.040><c> that</c><01:48:53.119><c> we</c><01:48:53.280><c> have</c><01:48:53.440><c> three</c>

01:48:53.830 --> 01:48:53.840 align:start position:0%
and now we see that we have three
 

01:48:53.840 --> 01:48:55.750 align:start position:0%
and now we see that we have three
independent<01:48:54.239><c> evaluations</c><01:48:55.040><c> of</c><01:48:55.199><c> three</c>

01:48:55.750 --> 01:48:55.760 align:start position:0%
independent evaluations of three
 

01:48:55.760 --> 01:48:57.189 align:start position:0%
independent evaluations of three
different<01:48:56.159><c> neurons</c>

01:48:57.189 --> 01:48:57.199 align:start position:0%
different neurons
 

01:48:57.199 --> 01:48:58.790 align:start position:0%
different neurons
right

01:48:58.790 --> 01:48:58.800 align:start position:0%
right
 

01:48:58.800 --> 01:49:00.870 align:start position:0%
right
okay<01:48:59.199><c> finally</c><01:48:59.679><c> let's</c><01:48:59.920><c> complete</c><01:49:00.239><c> this</c><01:49:00.400><c> picture</c>

01:49:00.870 --> 01:49:00.880 align:start position:0%
okay finally let's complete this picture
 

01:49:00.880 --> 01:49:02.629 align:start position:0%
okay finally let's complete this picture
and<01:49:01.040><c> define</c><01:49:01.520><c> an</c><01:49:01.679><c> entire</c><01:49:02.080><c> multi-layer</c>

01:49:02.629 --> 01:49:02.639 align:start position:0%
and define an entire multi-layer
 

01:49:02.639 --> 01:49:04.550 align:start position:0%
and define an entire multi-layer
perceptron<01:49:03.280><c> or</c><01:49:03.440><c> mlp</c>

01:49:04.550 --> 01:49:04.560 align:start position:0%
perceptron or mlp
 

01:49:04.560 --> 01:49:06.629 align:start position:0%
perceptron or mlp
and<01:49:04.719><c> as</c><01:49:04.800><c> we</c><01:49:04.960><c> can</c><01:49:05.040><c> see</c><01:49:05.199><c> here</c><01:49:05.440><c> in</c><01:49:05.600><c> an</c><01:49:05.760><c> mlp</c><01:49:06.400><c> these</c>

01:49:06.629 --> 01:49:06.639 align:start position:0%
and as we can see here in an mlp these
 

01:49:06.639 --> 01:49:07.830 align:start position:0%
and as we can see here in an mlp these
layers<01:49:06.960><c> just</c><01:49:07.119><c> feed</c><01:49:07.360><c> into</c><01:49:07.520><c> each</c><01:49:07.679><c> other</c>

01:49:07.830 --> 01:49:07.840 align:start position:0%
layers just feed into each other
 

01:49:07.840 --> 01:49:09.189 align:start position:0%
layers just feed into each other
sequentially

01:49:09.189 --> 01:49:09.199 align:start position:0%
sequentially
 

01:49:09.199 --> 01:49:11.590 align:start position:0%
sequentially
so<01:49:09.600><c> let's</c><01:49:09.840><c> come</c><01:49:10.000><c> here</c><01:49:10.239><c> and</c><01:49:10.400><c> i'm</c><01:49:10.480><c> just</c><01:49:10.639><c> going</c><01:49:10.800><c> to</c>

01:49:11.590 --> 01:49:11.600 align:start position:0%
so let's come here and i'm just going to
 

01:49:11.600 --> 01:49:14.310 align:start position:0%
so let's come here and i'm just going to
copy<01:49:11.920><c> the</c><01:49:12.000><c> code</c><01:49:12.320><c> here</c><01:49:12.560><c> in</c><01:49:12.719><c> interest</c><01:49:13.040><c> of</c><01:49:13.199><c> time</c>

01:49:14.310 --> 01:49:14.320 align:start position:0%
copy the code here in interest of time
 

01:49:14.320 --> 01:49:16.629 align:start position:0%
copy the code here in interest of time
so<01:49:14.480><c> an</c><01:49:14.639><c> mlp</c><01:49:15.280><c> is</c><01:49:15.440><c> very</c><01:49:15.679><c> similar</c>

01:49:16.629 --> 01:49:16.639 align:start position:0%
so an mlp is very similar
 

01:49:16.639 --> 01:49:18.709 align:start position:0%
so an mlp is very similar
we're<01:49:16.880><c> taking</c><01:49:17.119><c> the</c><01:49:17.199><c> number</c><01:49:17.440><c> of</c><01:49:17.599><c> inputs</c>

01:49:18.709 --> 01:49:18.719 align:start position:0%
we're taking the number of inputs
 

01:49:18.719 --> 01:49:20.790 align:start position:0%
we're taking the number of inputs
as<01:49:18.880><c> before</c><01:49:19.520><c> but</c><01:49:19.679><c> now</c><01:49:19.840><c> instead</c><01:49:20.080><c> of</c><01:49:20.480><c> taking</c><01:49:20.719><c> a</c>

01:49:20.790 --> 01:49:20.800 align:start position:0%
as before but now instead of taking a
 

01:49:20.800 --> 01:49:22.629 align:start position:0%
as before but now instead of taking a
single<01:49:21.199><c> n</c><01:49:21.360><c> out</c><01:49:21.599><c> which</c><01:49:21.760><c> is</c><01:49:21.840><c> number</c><01:49:22.080><c> of</c><01:49:22.239><c> neurons</c>

01:49:22.629 --> 01:49:22.639 align:start position:0%
single n out which is number of neurons
 

01:49:22.639 --> 01:49:24.709 align:start position:0%
single n out which is number of neurons
in<01:49:22.719><c> a</c><01:49:22.800><c> single</c><01:49:23.119><c> layer</c><01:49:23.840><c> we're</c><01:49:24.000><c> going</c><01:49:24.159><c> to</c><01:49:24.320><c> take</c><01:49:24.560><c> a</c>

01:49:24.709 --> 01:49:24.719 align:start position:0%
in a single layer we're going to take a
 

01:49:24.719 --> 01:49:26.950 align:start position:0%
in a single layer we're going to take a
list<01:49:25.040><c> of</c><01:49:25.199><c> an</c><01:49:25.360><c> outs</c><01:49:25.920><c> and</c><01:49:26.080><c> this</c><01:49:26.320><c> list</c><01:49:26.480><c> defines</c>

01:49:26.950 --> 01:49:26.960 align:start position:0%
list of an outs and this list defines
 

01:49:26.960 --> 01:49:28.870 align:start position:0%
list of an outs and this list defines
the<01:49:27.119><c> sizes</c><01:49:27.520><c> of</c><01:49:27.599><c> all</c><01:49:27.760><c> the</c><01:49:27.920><c> layers</c><01:49:28.239><c> that</c><01:49:28.320><c> we</c><01:49:28.480><c> want</c>

01:49:28.870 --> 01:49:28.880 align:start position:0%
the sizes of all the layers that we want
 

01:49:28.880 --> 01:49:30.310 align:start position:0%
the sizes of all the layers that we want
in<01:49:29.040><c> our</c><01:49:29.199><c> mlp</c>

01:49:30.310 --> 01:49:30.320 align:start position:0%
in our mlp
 

01:49:30.320 --> 01:49:31.910 align:start position:0%
in our mlp
so<01:49:30.480><c> here</c><01:49:30.719><c> we</c><01:49:30.800><c> just</c><01:49:30.960><c> put</c><01:49:31.119><c> them</c><01:49:31.280><c> all</c><01:49:31.360><c> together</c>

01:49:31.910 --> 01:49:31.920 align:start position:0%
so here we just put them all together
 

01:49:31.920 --> 01:49:34.390 align:start position:0%
so here we just put them all together
and<01:49:32.000><c> then</c><01:49:32.239><c> iterate</c><01:49:32.719><c> over</c><01:49:32.960><c> consecutive</c><01:49:33.520><c> pairs</c>

01:49:34.390 --> 01:49:34.400 align:start position:0%
and then iterate over consecutive pairs
 

01:49:34.400 --> 01:49:36.790 align:start position:0%
and then iterate over consecutive pairs
of<01:49:34.639><c> these</c><01:49:35.040><c> sizes</c><01:49:35.760><c> and</c><01:49:35.840><c> create</c><01:49:36.159><c> layer</c><01:49:36.400><c> objects</c>

01:49:36.790 --> 01:49:36.800 align:start position:0%
of these sizes and create layer objects
 

01:49:36.800 --> 01:49:37.830 align:start position:0%
of these sizes and create layer objects
for<01:49:36.960><c> them</c>

01:49:37.830 --> 01:49:37.840 align:start position:0%
for them
 

01:49:37.840 --> 01:49:39.189 align:start position:0%
for them
and<01:49:37.920><c> then</c><01:49:38.080><c> in</c><01:49:38.159><c> the</c><01:49:38.320><c> call</c><01:49:38.560><c> function</c><01:49:38.960><c> we</c><01:49:39.119><c> are</c>

01:49:39.189 --> 01:49:39.199 align:start position:0%
and then in the call function we are
 

01:49:39.199 --> 01:49:41.109 align:start position:0%
and then in the call function we are
just<01:49:39.280><c> calling</c><01:49:39.520><c> them</c><01:49:39.679><c> sequentially</c><01:49:40.560><c> so</c><01:49:40.719><c> that's</c>

01:49:41.109 --> 01:49:41.119 align:start position:0%
just calling them sequentially so that's
 

01:49:41.119 --> 01:49:42.790 align:start position:0%
just calling them sequentially so that's
an<01:49:41.280><c> mlp</c><01:49:41.679><c> really</c>

01:49:42.790 --> 01:49:42.800 align:start position:0%
an mlp really
 

01:49:42.800 --> 01:49:44.149 align:start position:0%
an mlp really
and<01:49:42.960><c> let's</c><01:49:43.199><c> actually</c><01:49:43.520><c> re-implement</c><01:49:44.000><c> this</c>

01:49:44.149 --> 01:49:44.159 align:start position:0%
and let's actually re-implement this
 

01:49:44.159 --> 01:49:46.550 align:start position:0%
and let's actually re-implement this
picture<01:49:44.560><c> so</c><01:49:44.719><c> we</c><01:49:44.800><c> want</c><01:49:45.280><c> three</c><01:49:45.599><c> input</c><01:49:45.840><c> neurons</c>

01:49:46.550 --> 01:49:46.560 align:start position:0%
picture so we want three input neurons
 

01:49:46.560 --> 01:49:47.990 align:start position:0%
picture so we want three input neurons
and<01:49:46.639><c> then</c><01:49:46.800><c> two</c><01:49:46.960><c> layers</c><01:49:47.280><c> of</c><01:49:47.440><c> four</c><01:49:47.760><c> and</c><01:49:47.840><c> an</c>

01:49:47.990 --> 01:49:48.000 align:start position:0%
and then two layers of four and an
 

01:49:48.000 --> 01:49:49.669 align:start position:0%
and then two layers of four and an
output<01:49:48.320><c> unit</c>

01:49:49.669 --> 01:49:49.679 align:start position:0%
output unit
 

01:49:49.679 --> 01:49:50.550 align:start position:0%
output unit
so

01:49:50.550 --> 01:49:50.560 align:start position:0%
so
 

01:49:50.560 --> 01:49:52.390 align:start position:0%
so
we<01:49:50.800><c> want</c>

01:49:52.390 --> 01:49:52.400 align:start position:0%
we want
 

01:49:52.400 --> 01:49:54.310 align:start position:0%
we want
a<01:49:52.560><c> three-dimensional</c><01:49:53.119><c> input</c><01:49:53.599><c> say</c><01:49:53.760><c> this</c><01:49:53.920><c> is</c><01:49:54.159><c> an</c>

01:49:54.310 --> 01:49:54.320 align:start position:0%
a three-dimensional input say this is an
 

01:49:54.320 --> 01:49:57.510 align:start position:0%
a three-dimensional input say this is an
example<01:49:54.639><c> input</c><01:49:55.280><c> we</c><01:49:55.440><c> want</c><01:49:55.920><c> three</c><01:49:56.239><c> inputs</c><01:49:56.800><c> into</c>

01:49:57.510 --> 01:49:57.520 align:start position:0%
example input we want three inputs into
 

01:49:57.520 --> 01:50:00.550 align:start position:0%
example input we want three inputs into
two<01:49:57.679><c> layers</c><01:49:58.000><c> of</c><01:49:58.159><c> four</c><01:49:58.880><c> and</c><01:49:59.119><c> one</c><01:49:59.599><c> output</c>

01:50:00.550 --> 01:50:00.560 align:start position:0%
two layers of four and one output
 

01:50:00.560 --> 01:50:03.589 align:start position:0%
two layers of four and one output
and<01:50:00.719><c> this</c><01:50:01.040><c> of</c><01:50:01.119><c> course</c><01:50:01.360><c> is</c><01:50:01.520><c> an</c><01:50:01.599><c> mlp</c>

01:50:03.589 --> 01:50:03.599 align:start position:0%
and this of course is an mlp
 

01:50:03.599 --> 01:50:05.430 align:start position:0%
and this of course is an mlp
and<01:50:03.760><c> there</c><01:50:03.920><c> we</c><01:50:04.000><c> go</c><01:50:04.400><c> that's</c><01:50:04.639><c> a</c><01:50:04.800><c> forward</c><01:50:05.119><c> pass</c><01:50:05.360><c> of</c>

01:50:05.430 --> 01:50:05.440 align:start position:0%
and there we go that's a forward pass of
 

01:50:05.440 --> 01:50:06.709 align:start position:0%
and there we go that's a forward pass of
an<01:50:05.520><c> mlp</c>

01:50:06.709 --> 01:50:06.719 align:start position:0%
an mlp
 

01:50:06.719 --> 01:50:08.390 align:start position:0%
an mlp
to<01:50:06.880><c> make</c><01:50:07.040><c> this</c><01:50:07.280><c> a</c><01:50:07.360><c> little</c><01:50:07.520><c> bit</c><01:50:07.679><c> nicer</c><01:50:08.159><c> you</c><01:50:08.239><c> see</c>

01:50:08.390 --> 01:50:08.400 align:start position:0%
to make this a little bit nicer you see
 

01:50:08.400 --> 01:50:09.910 align:start position:0%
to make this a little bit nicer you see
how<01:50:08.560><c> we</c><01:50:08.639><c> have</c><01:50:08.800><c> just</c><01:50:08.960><c> a</c><01:50:09.040><c> single</c><01:50:09.360><c> element</c><01:50:09.760><c> but</c>

01:50:09.910 --> 01:50:09.920 align:start position:0%
how we have just a single element but
 

01:50:09.920 --> 01:50:11.589 align:start position:0%
how we have just a single element but
it's<01:50:10.080><c> wrapped</c><01:50:10.320><c> in</c><01:50:10.480><c> a</c><01:50:10.560><c> list</c><01:50:10.960><c> because</c><01:50:11.280><c> layer</c>

01:50:11.589 --> 01:50:11.599 align:start position:0%
it's wrapped in a list because layer
 

01:50:11.599 --> 01:50:13.589 align:start position:0%
it's wrapped in a list because layer
always<01:50:12.080><c> returns</c><01:50:12.560><c> lists</c>

01:50:13.589 --> 01:50:13.599 align:start position:0%
always returns lists
 

01:50:13.599 --> 01:50:15.589 align:start position:0%
always returns lists
circle<01:50:14.159><c> for</c><01:50:14.320><c> convenience</c>

01:50:15.589 --> 01:50:15.599 align:start position:0%
circle for convenience
 

01:50:15.599 --> 01:50:18.629 align:start position:0%
circle for convenience
return<01:50:16.159><c> outs</c><01:50:16.400><c> at</c><01:50:16.560><c> zero</c><01:50:17.040><c> if</c><01:50:17.520><c> len</c><01:50:17.920><c> out</c><01:50:18.320><c> is</c>

01:50:18.629 --> 01:50:18.639 align:start position:0%
return outs at zero if len out is
 

01:50:18.639 --> 01:50:20.550 align:start position:0%
return outs at zero if len out is
exactly<01:50:19.119><c> a</c><01:50:19.280><c> single</c><01:50:19.599><c> element</c>

01:50:20.550 --> 01:50:20.560 align:start position:0%
exactly a single element
 

01:50:20.560 --> 01:50:22.390 align:start position:0%
exactly a single element
else<01:50:20.880><c> return</c><01:50:21.360><c> fullest</c>

01:50:22.390 --> 01:50:22.400 align:start position:0%
else return fullest
 

01:50:22.400 --> 01:50:23.589 align:start position:0%
else return fullest
and<01:50:22.480><c> this</c><01:50:22.639><c> will</c><01:50:22.800><c> allow</c><01:50:23.040><c> us</c><01:50:23.119><c> to</c><01:50:23.199><c> just</c><01:50:23.360><c> get</c><01:50:23.520><c> a</c>

01:50:23.589 --> 01:50:23.599 align:start position:0%
and this will allow us to just get a
 

01:50:23.599 --> 01:50:25.910 align:start position:0%
and this will allow us to just get a
single<01:50:24.159><c> value</c><01:50:24.560><c> out</c><01:50:24.880><c> at</c><01:50:24.960><c> the</c><01:50:25.119><c> last</c><01:50:25.360><c> layer</c><01:50:25.679><c> that</c>

01:50:25.910 --> 01:50:25.920 align:start position:0%
single value out at the last layer that
 

01:50:25.920 --> 01:50:28.070 align:start position:0%
single value out at the last layer that
only<01:50:26.080><c> has</c><01:50:26.239><c> a</c><01:50:26.320><c> single</c><01:50:26.560><c> neuron</c>

01:50:28.070 --> 01:50:28.080 align:start position:0%
only has a single neuron
 

01:50:28.080 --> 01:50:29.589 align:start position:0%
only has a single neuron
and<01:50:28.239><c> finally</c><01:50:28.560><c> we</c><01:50:28.719><c> should</c><01:50:28.880><c> be</c><01:50:28.960><c> able</c><01:50:29.119><c> to</c><01:50:29.280><c> draw</c>

01:50:29.589 --> 01:50:29.599 align:start position:0%
and finally we should be able to draw
 

01:50:29.599 --> 01:50:31.350 align:start position:0%
and finally we should be able to draw
dot<01:50:30.000><c> of</c><01:50:30.159><c> n</c><01:50:30.320><c> of</c><01:50:30.480><c> x</c>

01:50:31.350 --> 01:50:31.360 align:start position:0%
dot of n of x
 

01:50:31.360 --> 01:50:32.390 align:start position:0%
dot of n of x
and

01:50:32.390 --> 01:50:32.400 align:start position:0%
and
 

01:50:32.400 --> 01:50:34.070 align:start position:0%
and
as<01:50:32.560><c> you</c><01:50:32.639><c> might</c><01:50:32.880><c> imagine</c>

01:50:34.070 --> 01:50:34.080 align:start position:0%
as you might imagine
 

01:50:34.080 --> 01:50:36.709 align:start position:0%
as you might imagine
these<01:50:34.320><c> expressions</c><01:50:34.880><c> are</c><01:50:34.960><c> now</c><01:50:35.119><c> getting</c>

01:50:36.709 --> 01:50:36.719 align:start position:0%
these expressions are now getting
 

01:50:36.719 --> 01:50:38.470 align:start position:0%
these expressions are now getting
relatively<01:50:37.280><c> involved</c>

01:50:38.470 --> 01:50:38.480 align:start position:0%
relatively involved
 

01:50:38.480 --> 01:50:40.229 align:start position:0%
relatively involved
so<01:50:38.719><c> this</c><01:50:38.880><c> is</c><01:50:38.960><c> an</c><01:50:39.119><c> entire</c><01:50:39.520><c> mlp</c><01:50:39.920><c> that</c><01:50:40.080><c> we're</c>

01:50:40.229 --> 01:50:40.239 align:start position:0%
so this is an entire mlp that we're
 

01:50:40.239 --> 01:50:45.270 align:start position:0%
so this is an entire mlp that we're
defining<01:50:40.639><c> now</c>

01:50:45.270 --> 01:50:45.280 align:start position:0%
 
 

01:50:45.280 --> 01:50:48.229 align:start position:0%
 
all<01:50:45.440><c> the</c><01:50:45.599><c> way</c><01:50:45.840><c> until</c><01:50:46.239><c> a</c><01:50:46.400><c> single</c><01:50:46.719><c> output</c>

01:50:48.229 --> 01:50:48.239 align:start position:0%
all the way until a single output
 

01:50:48.239 --> 01:50:49.270 align:start position:0%
all the way until a single output
okay

01:50:49.270 --> 01:50:49.280 align:start position:0%
okay
 

01:50:49.280 --> 01:50:50.790 align:start position:0%
okay
and<01:50:49.440><c> so</c><01:50:49.679><c> obviously</c><01:50:50.000><c> you</c><01:50:50.080><c> would</c><01:50:50.239><c> never</c>

01:50:50.790 --> 01:50:50.800 align:start position:0%
and so obviously you would never
 

01:50:50.800 --> 01:50:52.709 align:start position:0%
and so obviously you would never
differentiate<01:50:51.599><c> on</c><01:50:51.760><c> pen</c><01:50:51.920><c> and</c><01:50:52.000><c> paper</c><01:50:52.480><c> these</c>

01:50:52.709 --> 01:50:52.719 align:start position:0%
differentiate on pen and paper these
 

01:50:52.719 --> 01:50:55.189 align:start position:0%
differentiate on pen and paper these
expressions<01:50:53.520><c> but</c><01:50:53.679><c> with</c><01:50:53.840><c> micrograd</c><01:50:54.800><c> we</c><01:50:55.040><c> will</c>

01:50:55.189 --> 01:50:55.199 align:start position:0%
expressions but with micrograd we will
 

01:50:55.199 --> 01:50:56.790 align:start position:0%
expressions but with micrograd we will
be<01:50:55.360><c> able</c><01:50:55.440><c> to</c><01:50:55.599><c> back</c><01:50:55.760><c> propagate</c><01:50:56.320><c> all</c><01:50:56.480><c> the</c><01:50:56.560><c> way</c>

01:50:56.790 --> 01:50:56.800 align:start position:0%
be able to back propagate all the way
 

01:50:56.800 --> 01:50:58.070 align:start position:0%
be able to back propagate all the way
through<01:50:56.960><c> this</c>

01:50:58.070 --> 01:50:58.080 align:start position:0%
through this
 

01:50:58.080 --> 01:50:59.750 align:start position:0%
through this
and<01:50:58.320><c> back</c><01:50:58.560><c> propagate</c>

01:50:59.750 --> 01:50:59.760 align:start position:0%
and back propagate
 

01:50:59.760 --> 01:51:00.790 align:start position:0%
and back propagate
into

01:51:00.790 --> 01:51:00.800 align:start position:0%
into
 

01:51:00.800 --> 01:51:02.950 align:start position:0%
into
these<01:51:01.119><c> weights</c><01:51:01.520><c> of</c><01:51:01.679><c> all</c><01:51:01.760><c> these</c><01:51:01.920><c> neurons</c><01:51:02.800><c> so</c>

01:51:02.950 --> 01:51:02.960 align:start position:0%
these weights of all these neurons so
 

01:51:02.960 --> 01:51:04.629 align:start position:0%
these weights of all these neurons so
let's<01:51:03.040><c> see</c><01:51:03.199><c> how</c><01:51:03.360><c> that</c><01:51:03.520><c> works</c><01:51:04.080><c> okay</c><01:51:04.320><c> so</c><01:51:04.400><c> let's</c>

01:51:04.629 --> 01:51:04.639 align:start position:0%
let's see how that works okay so let's
 

01:51:04.639 --> 01:51:06.790 align:start position:0%
let's see how that works okay so let's
create<01:51:04.880><c> ourselves</c><01:51:05.280><c> a</c><01:51:05.360><c> very</c><01:51:05.520><c> simple</c>

01:51:06.790 --> 01:51:06.800 align:start position:0%
create ourselves a very simple
 

01:51:06.800 --> 01:51:08.629 align:start position:0%
create ourselves a very simple
example<01:51:07.280><c> data</c><01:51:07.520><c> set</c><01:51:07.760><c> here</c>

01:51:08.629 --> 01:51:08.639 align:start position:0%
example data set here
 

01:51:08.639 --> 01:51:11.030 align:start position:0%
example data set here
so<01:51:08.800><c> this</c><01:51:08.960><c> data</c><01:51:09.199><c> set</c><01:51:09.440><c> has</c><01:51:09.599><c> four</c><01:51:09.920><c> examples</c>

01:51:11.030 --> 01:51:11.040 align:start position:0%
so this data set has four examples
 

01:51:11.040 --> 01:51:13.510 align:start position:0%
so this data set has four examples
and<01:51:11.280><c> so</c><01:51:11.520><c> we</c><01:51:11.679><c> have</c><01:51:12.159><c> four</c><01:51:12.400><c> possible</c>

01:51:13.510 --> 01:51:13.520 align:start position:0%
and so we have four possible
 

01:51:13.520 --> 01:51:15.350 align:start position:0%
and so we have four possible
inputs<01:51:13.920><c> into</c><01:51:14.080><c> the</c><01:51:14.239><c> neural</c><01:51:14.480><c> net</c>

01:51:15.350 --> 01:51:15.360 align:start position:0%
inputs into the neural net
 

01:51:15.360 --> 01:51:17.669 align:start position:0%
inputs into the neural net
and<01:51:15.520><c> we</c><01:51:15.679><c> have</c><01:51:15.840><c> four</c><01:51:16.239><c> desired</c><01:51:16.800><c> targets</c><01:51:17.440><c> so</c><01:51:17.599><c> we'd</c>

01:51:17.669 --> 01:51:17.679 align:start position:0%
and we have four desired targets so we'd
 

01:51:17.679 --> 01:51:21.270 align:start position:0%
and we have four desired targets so we'd
like<01:51:17.840><c> the</c><01:51:18.000><c> neural</c><01:51:18.239><c> net</c><01:51:18.840><c> to</c><01:51:19.920><c> assign</c>

01:51:21.270 --> 01:51:21.280 align:start position:0%
like the neural net to assign
 

01:51:21.280 --> 01:51:24.149 align:start position:0%
like the neural net to assign
or<01:51:21.440><c> output</c><01:51:21.840><c> 1.0</c><01:51:22.719><c> when</c><01:51:22.880><c> it's</c><01:51:23.040><c> fed</c><01:51:23.280><c> this</c><01:51:23.440><c> example</c>

01:51:24.149 --> 01:51:24.159 align:start position:0%
or output 1.0 when it's fed this example
 

01:51:24.159 --> 01:51:25.430 align:start position:0%
or output 1.0 when it's fed this example
negative<01:51:24.560><c> one</c><01:51:24.719><c> when</c><01:51:24.880><c> it's</c><01:51:25.040><c> fed</c><01:51:25.199><c> these</c>

01:51:25.430 --> 01:51:25.440 align:start position:0%
negative one when it's fed these
 

01:51:25.440 --> 01:51:26.950 align:start position:0%
negative one when it's fed these
examples<01:51:26.000><c> and</c><01:51:26.159><c> one</c><01:51:26.320><c> when</c><01:51:26.480><c> it's</c><01:51:26.639><c> fed</c><01:51:26.800><c> this</c>

01:51:26.950 --> 01:51:26.960 align:start position:0%
examples and one when it's fed this
 

01:51:26.960 --> 01:51:28.950 align:start position:0%
examples and one when it's fed this
example<01:51:27.679><c> so</c><01:51:27.840><c> it's</c><01:51:28.000><c> a</c><01:51:28.080><c> very</c><01:51:28.239><c> simple</c><01:51:28.560><c> binary</c>

01:51:28.950 --> 01:51:28.960 align:start position:0%
example so it's a very simple binary
 

01:51:28.960 --> 01:51:30.790 align:start position:0%
example so it's a very simple binary
classifier<01:51:29.599><c> neural</c><01:51:29.840><c> net</c><01:51:30.080><c> basically</c><01:51:30.480><c> that</c><01:51:30.639><c> we</c>

01:51:30.790 --> 01:51:30.800 align:start position:0%
classifier neural net basically that we
 

01:51:30.800 --> 01:51:32.310 align:start position:0%
classifier neural net basically that we
would<01:51:31.040><c> like</c><01:51:31.280><c> here</c>

01:51:32.310 --> 01:51:32.320 align:start position:0%
would like here
 

01:51:32.320 --> 01:51:33.669 align:start position:0%
would like here
now<01:51:32.480><c> let's</c><01:51:32.719><c> think</c><01:51:32.880><c> what</c><01:51:33.040><c> the</c><01:51:33.199><c> neural</c><01:51:33.440><c> net</c>

01:51:33.669 --> 01:51:33.679 align:start position:0%
now let's think what the neural net
 

01:51:33.679 --> 01:51:34.950 align:start position:0%
now let's think what the neural net
currently<01:51:34.080><c> thinks</c><01:51:34.320><c> about</c><01:51:34.560><c> these</c><01:51:34.719><c> four</c>

01:51:34.950 --> 01:51:34.960 align:start position:0%
currently thinks about these four
 

01:51:34.960 --> 01:51:36.550 align:start position:0%
currently thinks about these four
examples<01:51:35.840><c> we</c><01:51:36.000><c> can</c><01:51:36.080><c> just</c><01:51:36.320><c> get</c><01:51:36.480><c> their</c>

01:51:36.550 --> 01:51:36.560 align:start position:0%
examples we can just get their
 

01:51:36.560 --> 01:51:37.830 align:start position:0%
examples we can just get their
predictions

01:51:37.830 --> 01:51:37.840 align:start position:0%
predictions
 

01:51:37.840 --> 01:51:40.310 align:start position:0%
predictions
um<01:51:38.159><c> basically</c><01:51:38.480><c> we</c><01:51:38.639><c> can</c><01:51:38.800><c> just</c><01:51:39.040><c> call</c><01:51:39.520><c> n</c><01:51:39.679><c> of</c><01:51:39.840><c> x</c><01:51:40.159><c> for</c>

01:51:40.310 --> 01:51:40.320 align:start position:0%
um basically we can just call n of x for
 

01:51:40.320 --> 01:51:41.990 align:start position:0%
um basically we can just call n of x for
x<01:51:40.560><c> in</c><01:51:40.800><c> axis</c>

01:51:41.990 --> 01:51:42.000 align:start position:0%
x in axis
 

01:51:42.000 --> 01:51:43.430 align:start position:0%
x in axis
and<01:51:42.159><c> then</c><01:51:42.400><c> we</c><01:51:42.639><c> can</c>

01:51:43.430 --> 01:51:43.440 align:start position:0%
and then we can
 

01:51:43.440 --> 01:51:45.030 align:start position:0%
and then we can
print

01:51:45.030 --> 01:51:45.040 align:start position:0%
print
 

01:51:45.040 --> 01:51:46.629 align:start position:0%
print
so<01:51:45.199><c> these</c><01:51:45.360><c> are</c><01:51:45.520><c> the</c><01:51:45.760><c> outputs</c><01:51:46.239><c> of</c><01:51:46.320><c> the</c><01:51:46.400><c> neural</c>

01:51:46.629 --> 01:51:46.639 align:start position:0%
so these are the outputs of the neural
 

01:51:46.639 --> 01:51:48.790 align:start position:0%
so these are the outputs of the neural
net<01:51:47.040><c> on</c><01:51:47.199><c> those</c><01:51:47.440><c> four</c><01:51:47.679><c> examples</c>

01:51:48.790 --> 01:51:48.800 align:start position:0%
net on those four examples
 

01:51:48.800 --> 01:51:50.229 align:start position:0%
net on those four examples
so

01:51:50.229 --> 01:51:50.239 align:start position:0%
so
 

01:51:50.239 --> 01:51:52.709 align:start position:0%
so
the<01:51:50.400><c> first</c><01:51:50.639><c> one</c><01:51:50.880><c> is</c><01:51:51.040><c> 0.91</c><01:51:52.080><c> but</c><01:51:52.239><c> we'd</c><01:51:52.400><c> like</c><01:51:52.560><c> it</c>

01:51:52.709 --> 01:51:52.719 align:start position:0%
the first one is 0.91 but we'd like it
 

01:51:52.719 --> 01:51:55.270 align:start position:0%
the first one is 0.91 but we'd like it
to<01:51:52.800><c> be</c><01:51:53.040><c> one</c><01:51:53.760><c> so</c><01:51:54.239><c> we</c><01:51:54.400><c> should</c><01:51:54.639><c> push</c><01:51:54.880><c> this</c><01:51:55.119><c> one</c>

01:51:55.270 --> 01:51:55.280 align:start position:0%
to be one so we should push this one
 

01:51:55.280 --> 01:51:57.990 align:start position:0%
to be one so we should push this one
higher<01:51:55.679><c> this</c><01:51:55.920><c> one</c><01:51:56.239><c> we</c><01:51:56.400><c> want</c><01:51:56.719><c> to</c><01:51:56.880><c> be</c><01:51:57.040><c> higher</c>

01:51:57.990 --> 01:51:58.000 align:start position:0%
higher this one we want to be higher
 

01:51:58.000 --> 01:52:00.950 align:start position:0%
higher this one we want to be higher
this<01:51:58.239><c> one</c><01:51:58.400><c> says</c><01:51:58.920><c> 0.88</c><01:52:00.239><c> and</c><01:52:00.400><c> we</c><01:52:00.480><c> want</c><01:52:00.719><c> this</c><01:52:00.880><c> to</c>

01:52:00.950 --> 01:52:00.960 align:start position:0%
this one says 0.88 and we want this to
 

01:52:00.960 --> 01:52:02.629 align:start position:0%
this one says 0.88 and we want this to
be<01:52:01.119><c> negative</c><01:52:01.440><c> one</c>

01:52:02.629 --> 01:52:02.639 align:start position:0%
be negative one
 

01:52:02.639 --> 01:52:04.310 align:start position:0%
be negative one
this<01:52:02.880><c> is</c><01:52:03.040><c> 0.8</c><01:52:03.520><c> we</c><01:52:03.679><c> want</c><01:52:03.760><c> it</c><01:52:03.840><c> to</c><01:52:03.920><c> be</c><01:52:04.080><c> negative</c>

01:52:04.310 --> 01:52:04.320 align:start position:0%
this is 0.8 we want it to be negative
 

01:52:04.320 --> 01:52:05.109 align:start position:0%
this is 0.8 we want it to be negative
one

01:52:05.109 --> 01:52:05.119 align:start position:0%
one
 

01:52:05.119 --> 01:52:08.149 align:start position:0%
one
and<01:52:05.199><c> this</c><01:52:05.360><c> one</c><01:52:05.520><c> is</c><01:52:05.679><c> 0.8</c><01:52:06.159><c> we</c><01:52:06.239><c> want</c><01:52:06.320><c> it</c><01:52:06.400><c> to</c><01:52:06.560><c> be</c><01:52:06.719><c> one</c>

01:52:08.149 --> 01:52:08.159 align:start position:0%
and this one is 0.8 we want it to be one
 

01:52:08.159 --> 01:52:10.229 align:start position:0%
and this one is 0.8 we want it to be one
so<01:52:08.320><c> how</c><01:52:08.480><c> do</c><01:52:08.639><c> we</c><01:52:08.800><c> make</c><01:52:09.280><c> the</c><01:52:09.520><c> neural</c><01:52:09.760><c> net</c><01:52:10.000><c> and</c><01:52:10.080><c> how</c>

01:52:10.229 --> 01:52:10.239 align:start position:0%
so how do we make the neural net and how
 

01:52:10.239 --> 01:52:12.149 align:start position:0%
so how do we make the neural net and how
do<01:52:10.320><c> we</c><01:52:10.560><c> tune</c><01:52:10.800><c> the</c><01:52:11.280><c> weights</c>

01:52:12.149 --> 01:52:12.159 align:start position:0%
do we tune the weights
 

01:52:12.159 --> 01:52:12.950 align:start position:0%
do we tune the weights
to

01:52:12.950 --> 01:52:12.960 align:start position:0%
to
 

01:52:12.960 --> 01:52:16.709 align:start position:0%
to
better<01:52:13.599><c> predict</c><01:52:14.239><c> the</c><01:52:14.400><c> desired</c><01:52:15.119><c> targets</c>

01:52:16.709 --> 01:52:16.719 align:start position:0%
better predict the desired targets
 

01:52:16.719 --> 01:52:18.470 align:start position:0%
better predict the desired targets
and<01:52:17.040><c> the</c><01:52:17.199><c> trick</c><01:52:17.520><c> used</c><01:52:17.760><c> in</c><01:52:17.840><c> deep</c><01:52:18.000><c> learning</c><01:52:18.320><c> to</c>

01:52:18.470 --> 01:52:18.480 align:start position:0%
and the trick used in deep learning to
 

01:52:18.480 --> 01:52:20.470 align:start position:0%
and the trick used in deep learning to
achieve<01:52:18.800><c> this</c><01:52:19.440><c> is</c><01:52:19.599><c> to</c>

01:52:20.470 --> 01:52:20.480 align:start position:0%
achieve this is to
 

01:52:20.480 --> 01:52:22.229 align:start position:0%
achieve this is to
calculate<01:52:20.960><c> a</c><01:52:21.040><c> single</c><01:52:21.360><c> number</c><01:52:21.760><c> that</c><01:52:21.920><c> somehow</c>

01:52:22.229 --> 01:52:22.239 align:start position:0%
calculate a single number that somehow
 

01:52:22.239 --> 01:52:24.390 align:start position:0%
calculate a single number that somehow
measures<01:52:22.800><c> the</c><01:52:23.040><c> total</c><01:52:23.360><c> performance</c><01:52:24.000><c> of</c><01:52:24.239><c> your</c>

01:52:24.390 --> 01:52:24.400 align:start position:0%
measures the total performance of your
 

01:52:24.400 --> 01:52:25.910 align:start position:0%
measures the total performance of your
neural<01:52:24.639><c> net</c><01:52:25.040><c> and</c><01:52:25.199><c> we</c><01:52:25.280><c> call</c><01:52:25.440><c> this</c><01:52:25.599><c> single</c>

01:52:25.910 --> 01:52:25.920 align:start position:0%
neural net and we call this single
 

01:52:25.920 --> 01:52:27.990 align:start position:0%
neural net and we call this single
number<01:52:26.400><c> the</c><01:52:26.560><c> loss</c>

01:52:27.990 --> 01:52:28.000 align:start position:0%
number the loss
 

01:52:28.000 --> 01:52:29.750 align:start position:0%
number the loss
so<01:52:28.159><c> the</c><01:52:28.400><c> loss</c>

01:52:29.750 --> 01:52:29.760 align:start position:0%
so the loss
 

01:52:29.760 --> 01:52:31.030 align:start position:0%
so the loss
first

01:52:31.030 --> 01:52:31.040 align:start position:0%
first
 

01:52:31.040 --> 01:52:32.550 align:start position:0%
first
is<01:52:31.360><c> is</c><01:52:31.599><c> a</c><01:52:31.679><c> single</c><01:52:31.920><c> number</c><01:52:32.159><c> that</c><01:52:32.320><c> we're</c><01:52:32.400><c> going</c>

01:52:32.550 --> 01:52:32.560 align:start position:0%
is is a single number that we're going
 

01:52:32.560 --> 01:52:34.390 align:start position:0%
is is a single number that we're going
to<01:52:32.639><c> define</c><01:52:33.119><c> that</c><01:52:33.360><c> basically</c><01:52:33.760><c> measures</c><01:52:34.239><c> how</c>

01:52:34.390 --> 01:52:34.400 align:start position:0%
to define that basically measures how
 

01:52:34.400 --> 01:52:36.229 align:start position:0%
to define that basically measures how
well<01:52:34.560><c> the</c><01:52:34.719><c> neural</c><01:52:34.960><c> net</c><01:52:35.199><c> is</c><01:52:35.280><c> performing</c><01:52:36.080><c> right</c>

01:52:36.229 --> 01:52:36.239 align:start position:0%
well the neural net is performing right
 

01:52:36.239 --> 01:52:37.350 align:start position:0%
well the neural net is performing right
now<01:52:36.400><c> we</c><01:52:36.480><c> have</c><01:52:36.560><c> the</c><01:52:36.639><c> intuitive</c><01:52:37.040><c> sense</c><01:52:37.199><c> that</c>

01:52:37.350 --> 01:52:37.360 align:start position:0%
now we have the intuitive sense that
 

01:52:37.360 --> 01:52:38.790 align:start position:0%
now we have the intuitive sense that
it's<01:52:37.440><c> not</c><01:52:37.599><c> performing</c><01:52:38.000><c> very</c><01:52:38.239><c> well</c><01:52:38.480><c> because</c>

01:52:38.790 --> 01:52:38.800 align:start position:0%
it's not performing very well because
 

01:52:38.800 --> 01:52:40.870 align:start position:0%
it's not performing very well because
we're<01:52:39.040><c> not</c><01:52:39.199><c> very</c><01:52:39.360><c> much</c><01:52:39.679><c> close</c><01:52:39.920><c> to</c><01:52:40.080><c> this</c>

01:52:40.870 --> 01:52:40.880 align:start position:0%
we're not very much close to this
 

01:52:40.880 --> 01:52:43.030 align:start position:0%
we're not very much close to this
so<01:52:41.040><c> the</c><01:52:41.199><c> loss</c><01:52:41.520><c> will</c><01:52:41.679><c> be</c><01:52:41.840><c> high</c><01:52:42.480><c> and</c><01:52:42.719><c> we'll</c><01:52:42.880><c> want</c>

01:52:43.030 --> 01:52:43.040 align:start position:0%
so the loss will be high and we'll want
 

01:52:43.040 --> 01:52:44.629 align:start position:0%
so the loss will be high and we'll want
to<01:52:43.199><c> minimize</c><01:52:43.679><c> the</c><01:52:43.760><c> loss</c>

01:52:44.629 --> 01:52:44.639 align:start position:0%
to minimize the loss
 

01:52:44.639 --> 01:52:46.070 align:start position:0%
to minimize the loss
so<01:52:44.800><c> in</c><01:52:44.960><c> particular</c><01:52:45.360><c> in</c><01:52:45.440><c> this</c><01:52:45.599><c> case</c><01:52:45.760><c> what</c><01:52:45.920><c> we're</c>

01:52:46.070 --> 01:52:46.080 align:start position:0%
so in particular in this case what we're
 

01:52:46.080 --> 01:52:47.750 align:start position:0%
so in particular in this case what we're
going<01:52:46.239><c> to</c><01:52:46.320><c> do</c><01:52:46.960><c> is</c><01:52:47.040><c> we're</c><01:52:47.199><c> going</c><01:52:47.360><c> to</c><01:52:47.440><c> implement</c>

01:52:47.750 --> 01:52:47.760 align:start position:0%
going to do is we're going to implement
 

01:52:47.760 --> 01:52:49.669 align:start position:0%
going to do is we're going to implement
the<01:52:47.840><c> mean</c><01:52:48.080><c> squared</c><01:52:48.320><c> error</c><01:52:48.560><c> loss</c>

01:52:49.669 --> 01:52:49.679 align:start position:0%
the mean squared error loss
 

01:52:49.679 --> 01:52:51.350 align:start position:0%
the mean squared error loss
so<01:52:49.920><c> this</c><01:52:50.080><c> is</c><01:52:50.159><c> doing</c><01:52:50.480><c> is</c><01:52:50.800><c> we're</c><01:52:51.040><c> going</c><01:52:51.199><c> to</c>

01:52:51.350 --> 01:52:51.360 align:start position:0%
so this is doing is we're going to
 

01:52:51.360 --> 01:52:54.070 align:start position:0%
so this is doing is we're going to
basically<01:52:51.760><c> iterate</c><01:52:52.639><c> um</c>

01:52:54.070 --> 01:52:54.080 align:start position:0%
basically iterate um
 

01:52:54.080 --> 01:52:56.390 align:start position:0%
basically iterate um
for<01:52:54.719><c> y</c><01:52:55.040><c> ground</c><01:52:55.360><c> truth</c>

01:52:56.390 --> 01:52:56.400 align:start position:0%
for y ground truth
 

01:52:56.400 --> 01:52:59.910 align:start position:0%
for y ground truth
and<01:52:56.719><c> y</c><01:52:56.960><c> output</c><01:52:57.440><c> in</c><01:52:57.679><c> zip</c><01:52:58.400><c> of</c><01:52:59.040><c> um</c>

01:52:59.910 --> 01:52:59.920 align:start position:0%
and y output in zip of um
 

01:52:59.920 --> 01:53:01.669 align:start position:0%
and y output in zip of um
wise<01:53:00.239><c> and</c><01:53:00.320><c> white</c><01:53:00.560><c> red</c><01:53:01.119><c> so</c><01:53:01.280><c> we're</c><01:53:01.360><c> going</c><01:53:01.520><c> to</c>

01:53:01.669 --> 01:53:01.679 align:start position:0%
wise and white red so we're going to
 

01:53:01.679 --> 01:53:03.109 align:start position:0%
wise and white red so we're going to
pair<01:53:01.920><c> up</c><01:53:02.320><c> the</c>

01:53:03.109 --> 01:53:03.119 align:start position:0%
pair up the
 

01:53:03.119 --> 01:53:06.070 align:start position:0%
pair up the
ground<01:53:03.360><c> truths</c><01:53:04.080><c> with</c><01:53:04.639><c> the</c><01:53:04.800><c> predictions</c>

01:53:06.070 --> 01:53:06.080 align:start position:0%
ground truths with the predictions
 

01:53:06.080 --> 01:53:07.830 align:start position:0%
ground truths with the predictions
and<01:53:06.239><c> this</c><01:53:06.480><c> zip</c><01:53:06.719><c> iterates</c><01:53:07.119><c> over</c><01:53:07.360><c> tuples</c><01:53:07.760><c> of</c>

01:53:07.830 --> 01:53:07.840 align:start position:0%
and this zip iterates over tuples of
 

01:53:07.840 --> 01:53:08.870 align:start position:0%
and this zip iterates over tuples of
them

01:53:08.870 --> 01:53:08.880 align:start position:0%
them
 

01:53:08.880 --> 01:53:11.510 align:start position:0%
them
and<01:53:09.040><c> for</c><01:53:09.280><c> each</c>

01:53:11.510 --> 01:53:11.520 align:start position:0%
and for each
 

01:53:11.520 --> 01:53:13.510 align:start position:0%
and for each
y<01:53:11.840><c> ground</c><01:53:12.080><c> truth</c><01:53:12.480><c> and</c><01:53:12.639><c> y</c><01:53:12.880><c> output</c><01:53:13.199><c> we're</c><01:53:13.360><c> going</c>

01:53:13.510 --> 01:53:13.520 align:start position:0%
y ground truth and y output we're going
 

01:53:13.520 --> 01:53:16.950 align:start position:0%
y ground truth and y output we're going
to<01:53:13.599><c> subtract</c><01:53:14.080><c> them</c>

01:53:16.950 --> 01:53:16.960 align:start position:0%
 
 

01:53:16.960 --> 01:53:18.550 align:start position:0%
 
and<01:53:17.119><c> square</c><01:53:17.440><c> them</c>

01:53:18.550 --> 01:53:18.560 align:start position:0%
and square them
 

01:53:18.560 --> 01:53:20.229 align:start position:0%
and square them
so<01:53:18.719><c> let's</c><01:53:18.880><c> first</c><01:53:19.119><c> see</c><01:53:19.280><c> what</c><01:53:19.360><c> these</c><01:53:19.599><c> losses</c><01:53:20.000><c> are</c>

01:53:20.229 --> 01:53:20.239 align:start position:0%
so let's first see what these losses are
 

01:53:20.239 --> 01:53:22.950 align:start position:0%
so let's first see what these losses are
these<01:53:20.480><c> are</c><01:53:20.560><c> individual</c><01:53:20.960><c> loss</c><01:53:21.199><c> components</c>

01:53:22.950 --> 01:53:22.960 align:start position:0%
these are individual loss components
 

01:53:22.960 --> 01:53:25.189 align:start position:0%
these are individual loss components
and<01:53:23.119><c> so</c><01:53:23.360><c> basically</c><01:53:23.760><c> for</c><01:53:23.920><c> each</c>

01:53:25.189 --> 01:53:25.199 align:start position:0%
and so basically for each
 

01:53:25.199 --> 01:53:26.390 align:start position:0%
and so basically for each
one<01:53:25.440><c> of</c><01:53:25.520><c> the</c><01:53:25.599><c> four</c>

01:53:26.390 --> 01:53:26.400 align:start position:0%
one of the four
 

01:53:26.400 --> 01:53:28.470 align:start position:0%
one of the four
we<01:53:26.560><c> are</c><01:53:26.719><c> taking</c><01:53:27.040><c> the</c><01:53:27.440><c> prediction</c><01:53:28.239><c> and</c><01:53:28.400><c> the</c>

01:53:28.470 --> 01:53:28.480 align:start position:0%
we are taking the prediction and the
 

01:53:28.480 --> 01:53:30.790 align:start position:0%
we are taking the prediction and the
ground<01:53:28.800><c> truth</c><01:53:29.440><c> we</c><01:53:29.599><c> are</c><01:53:29.679><c> subtracting</c><01:53:30.320><c> them</c><01:53:30.560><c> and</c>

01:53:30.790 --> 01:53:30.800 align:start position:0%
ground truth we are subtracting them and
 

01:53:30.800 --> 01:53:32.629 align:start position:0%
ground truth we are subtracting them and
squaring<01:53:31.199><c> them</c>

01:53:32.629 --> 01:53:32.639 align:start position:0%
squaring them
 

01:53:32.639 --> 01:53:33.830 align:start position:0%
squaring them
so<01:53:32.960><c> because</c>

01:53:33.830 --> 01:53:33.840 align:start position:0%
so because
 

01:53:33.840 --> 01:53:36.870 align:start position:0%
so because
this<01:53:34.080><c> one</c><01:53:34.400><c> is</c><01:53:34.560><c> so</c><01:53:34.800><c> close</c><01:53:35.040><c> to</c><01:53:35.199><c> its</c><01:53:35.360><c> target</c><01:53:36.239><c> 0.91</c>

01:53:36.870 --> 01:53:36.880 align:start position:0%
this one is so close to its target 0.91
 

01:53:36.880 --> 01:53:38.709 align:start position:0%
this one is so close to its target 0.91
is<01:53:37.040><c> almost</c><01:53:37.440><c> one</c>

01:53:38.709 --> 01:53:38.719 align:start position:0%
is almost one
 

01:53:38.719 --> 01:53:40.390 align:start position:0%
is almost one
subtracting<01:53:39.280><c> them</c><01:53:39.440><c> gives</c><01:53:39.679><c> a</c><01:53:39.760><c> very</c><01:53:40.080><c> small</c>

01:53:40.390 --> 01:53:40.400 align:start position:0%
subtracting them gives a very small
 

01:53:40.400 --> 01:53:41.910 align:start position:0%
subtracting them gives a very small
number

01:53:41.910 --> 01:53:41.920 align:start position:0%
number
 

01:53:41.920 --> 01:53:43.350 align:start position:0%
number
so<01:53:42.159><c> here</c><01:53:42.320><c> we</c><01:53:42.480><c> would</c><01:53:42.639><c> get</c><01:53:42.800><c> like</c><01:53:42.960><c> a</c><01:53:43.040><c> negative</c>

01:53:43.350 --> 01:53:43.360 align:start position:0%
so here we would get like a negative
 

01:53:43.360 --> 01:53:45.750 align:start position:0%
so here we would get like a negative
point<01:53:43.599><c> one</c><01:53:44.159><c> and</c><01:53:44.320><c> then</c><01:53:44.480><c> squaring</c><01:53:44.960><c> it</c>

01:53:45.750 --> 01:53:45.760 align:start position:0%
point one and then squaring it
 

01:53:45.760 --> 01:53:47.589 align:start position:0%
point one and then squaring it
just<01:53:46.000><c> makes</c><01:53:46.480><c> sure</c>

01:53:47.589 --> 01:53:47.599 align:start position:0%
just makes sure
 

01:53:47.599 --> 01:53:49.589 align:start position:0%
just makes sure
that<01:53:48.159><c> regardless</c><01:53:48.719><c> of</c><01:53:48.800><c> whether</c><01:53:49.119><c> we</c><01:53:49.280><c> are</c><01:53:49.440><c> more</c>

01:53:49.589 --> 01:53:49.599 align:start position:0%
that regardless of whether we are more
 

01:53:49.599 --> 01:53:51.510 align:start position:0%
that regardless of whether we are more
negative<01:53:50.000><c> or</c><01:53:50.159><c> more</c><01:53:50.400><c> positive</c><01:53:50.880><c> we</c><01:53:51.040><c> always</c><01:53:51.280><c> get</c>

01:53:51.510 --> 01:53:51.520 align:start position:0%
negative or more positive we always get
 

01:53:51.520 --> 01:53:52.830 align:start position:0%
negative or more positive we always get
a<01:53:51.760><c> positive</c>

01:53:52.830 --> 01:53:52.840 align:start position:0%
a positive
 

01:53:52.840 --> 01:53:55.510 align:start position:0%
a positive
number<01:53:54.239><c> instead</c><01:53:54.480><c> of</c><01:53:54.639><c> squaring</c><01:53:54.880><c> we</c><01:53:55.040><c> should</c><01:53:55.360><c> we</c>

01:53:55.510 --> 01:53:55.520 align:start position:0%
number instead of squaring we should we
 

01:53:55.520 --> 01:53:56.870 align:start position:0%
number instead of squaring we should we
could<01:53:55.599><c> also</c><01:53:55.840><c> take</c><01:53:56.000><c> for</c><01:53:56.159><c> example</c><01:53:56.400><c> the</c><01:53:56.480><c> absolute</c>

01:53:56.870 --> 01:53:56.880 align:start position:0%
could also take for example the absolute
 

01:53:56.880 --> 01:53:59.430 align:start position:0%
could also take for example the absolute
value<01:53:57.280><c> we</c><01:53:57.440><c> need</c><01:53:57.599><c> to</c><01:53:57.679><c> discard</c><01:53:58.080><c> the</c><01:53:58.239><c> sign</c>

01:53:59.430 --> 01:53:59.440 align:start position:0%
value we need to discard the sign
 

01:53:59.440 --> 01:54:00.870 align:start position:0%
value we need to discard the sign
and<01:53:59.520><c> so</c><01:53:59.679><c> you</c><01:53:59.840><c> see</c><01:54:00.000><c> that</c><01:54:00.159><c> the</c><01:54:00.320><c> expression</c><01:54:00.719><c> is</c>

01:54:00.870 --> 01:54:00.880 align:start position:0%
and so you see that the expression is
 

01:54:00.880 --> 01:54:03.510 align:start position:0%
and so you see that the expression is
ranged<01:54:01.119><c> so</c><01:54:01.280><c> that</c><01:54:01.920><c> you</c><01:54:02.080><c> only</c><01:54:02.320><c> get</c><01:54:02.480><c> zero</c><01:54:02.960><c> exactly</c>

01:54:03.510 --> 01:54:03.520 align:start position:0%
ranged so that you only get zero exactly
 

01:54:03.520 --> 01:54:06.390 align:start position:0%
ranged so that you only get zero exactly
when<01:54:04.080><c> y</c><01:54:04.320><c> out</c><01:54:04.639><c> is</c><01:54:04.800><c> equal</c><01:54:05.119><c> to</c><01:54:05.360><c> y</c><01:54:05.599><c> ground</c><01:54:05.840><c> truth</c>

01:54:06.390 --> 01:54:06.400 align:start position:0%
when y out is equal to y ground truth
 

01:54:06.400 --> 01:54:07.750 align:start position:0%
when y out is equal to y ground truth
when<01:54:06.560><c> those</c><01:54:06.800><c> two</c><01:54:07.040><c> are</c><01:54:07.199><c> equal</c><01:54:07.440><c> so</c><01:54:07.599><c> your</c>

01:54:07.750 --> 01:54:07.760 align:start position:0%
when those two are equal so your
 

01:54:07.760 --> 01:54:09.589 align:start position:0%
when those two are equal so your
prediction<01:54:08.159><c> is</c><01:54:08.239><c> exactly</c><01:54:08.639><c> the</c><01:54:08.800><c> target</c><01:54:09.360><c> you</c><01:54:09.520><c> are</c>

01:54:09.589 --> 01:54:09.599 align:start position:0%
prediction is exactly the target you are
 

01:54:09.599 --> 01:54:10.950 align:start position:0%
prediction is exactly the target you are
going<01:54:09.760><c> to</c><01:54:09.840><c> get</c><01:54:10.080><c> zero</c>

01:54:10.950 --> 01:54:10.960 align:start position:0%
going to get zero
 

01:54:10.960 --> 01:54:12.870 align:start position:0%
going to get zero
and<01:54:11.199><c> if</c><01:54:11.280><c> your</c><01:54:11.440><c> prediction</c><01:54:11.840><c> is</c><01:54:11.920><c> not</c><01:54:12.080><c> the</c><01:54:12.239><c> target</c>

01:54:12.870 --> 01:54:12.880 align:start position:0%
and if your prediction is not the target
 

01:54:12.880 --> 01:54:15.030 align:start position:0%
and if your prediction is not the target
you<01:54:13.040><c> are</c><01:54:13.199><c> going</c><01:54:13.360><c> to</c><01:54:13.440><c> get</c><01:54:13.599><c> some</c><01:54:13.920><c> other</c><01:54:14.239><c> number</c>

01:54:15.030 --> 01:54:15.040 align:start position:0%
you are going to get some other number
 

01:54:15.040 --> 01:54:17.109 align:start position:0%
you are going to get some other number
so<01:54:15.199><c> here</c><01:54:15.440><c> for</c><01:54:15.599><c> example</c><01:54:15.920><c> we</c><01:54:16.080><c> are</c><01:54:16.320><c> way</c><01:54:16.560><c> off</c><01:54:16.960><c> and</c>

01:54:17.109 --> 01:54:17.119 align:start position:0%
so here for example we are way off and
 

01:54:17.119 --> 01:54:19.830 align:start position:0%
so here for example we are way off and
so<01:54:17.280><c> that's</c><01:54:17.440><c> why</c><01:54:17.599><c> the</c><01:54:17.760><c> loss</c><01:54:18.080><c> is</c><01:54:18.239><c> quite</c><01:54:18.560><c> high</c>

01:54:19.830 --> 01:54:19.840 align:start position:0%
so that's why the loss is quite high
 

01:54:19.840 --> 01:54:22.550 align:start position:0%
so that's why the loss is quite high
and<01:54:20.239><c> the</c><01:54:20.400><c> more</c><01:54:20.719><c> off</c><01:54:20.960><c> we</c><01:54:21.199><c> are</c><01:54:21.840><c> the</c><01:54:22.000><c> greater</c><01:54:22.400><c> the</c>

01:54:22.550 --> 01:54:22.560 align:start position:0%
and the more off we are the greater the
 

01:54:22.560 --> 01:54:24.070 align:start position:0%
and the more off we are the greater the
loss<01:54:22.880><c> will</c><01:54:23.040><c> be</c>

01:54:24.070 --> 01:54:24.080 align:start position:0%
loss will be
 

01:54:24.080 --> 01:54:26.790 align:start position:0%
loss will be
so<01:54:24.639><c> we</c><01:54:24.880><c> don't</c><01:54:25.119><c> want</c><01:54:25.520><c> high</c><01:54:25.760><c> loss</c><01:54:26.080><c> we</c><01:54:26.239><c> want</c><01:54:26.560><c> low</c>

01:54:26.790 --> 01:54:26.800 align:start position:0%
so we don't want high loss we want low
 

01:54:26.800 --> 01:54:27.750 align:start position:0%
so we don't want high loss we want low
loss

01:54:27.750 --> 01:54:27.760 align:start position:0%
loss
 

01:54:27.760 --> 01:54:30.550 align:start position:0%
loss
and<01:54:27.920><c> so</c><01:54:28.080><c> the</c><01:54:28.320><c> final</c><01:54:28.960><c> loss</c><01:54:29.360><c> here</c><01:54:29.920><c> will</c><01:54:30.159><c> be</c><01:54:30.320><c> just</c>

01:54:30.550 --> 01:54:30.560 align:start position:0%
and so the final loss here will be just
 

01:54:30.560 --> 01:54:31.990 align:start position:0%
and so the final loss here will be just
the<01:54:30.800><c> sum</c>

01:54:31.990 --> 01:54:32.000 align:start position:0%
the sum
 

01:54:32.000 --> 01:54:33.270 align:start position:0%
the sum
of<01:54:32.239><c> all</c><01:54:32.400><c> of</c><01:54:32.480><c> these</c>

01:54:33.270 --> 01:54:33.280 align:start position:0%
of all of these
 

01:54:33.280 --> 01:54:34.229 align:start position:0%
of all of these
numbers

01:54:34.229 --> 01:54:34.239 align:start position:0%
numbers
 

01:54:34.239 --> 01:54:36.310 align:start position:0%
numbers
so<01:54:34.400><c> you</c><01:54:34.560><c> see</c><01:54:34.719><c> that</c><01:54:34.800><c> this</c><01:54:35.040><c> should</c><01:54:35.199><c> be</c><01:54:35.520><c> zero</c>

01:54:36.310 --> 01:54:36.320 align:start position:0%
so you see that this should be zero
 

01:54:36.320 --> 01:54:38.390 align:start position:0%
so you see that this should be zero
roughly<01:54:36.719><c> plus</c><01:54:37.119><c> zero</c><01:54:37.440><c> roughly</c>

01:54:38.390 --> 01:54:38.400 align:start position:0%
roughly plus zero roughly
 

01:54:38.400 --> 01:54:39.669 align:start position:0%
roughly plus zero roughly
but<01:54:38.639><c> plus</c>

01:54:39.669 --> 01:54:39.679 align:start position:0%
but plus
 

01:54:39.679 --> 01:54:40.790 align:start position:0%
but plus
seven

01:54:40.790 --> 01:54:40.800 align:start position:0%
seven
 

01:54:40.800 --> 01:54:43.589 align:start position:0%
seven
so<01:54:41.199><c> loss</c><01:54:41.520><c> should</c><01:54:41.760><c> be</c><01:54:41.920><c> about</c><01:54:42.719><c> seven</c>

01:54:43.589 --> 01:54:43.599 align:start position:0%
so loss should be about seven
 

01:54:43.599 --> 01:54:44.790 align:start position:0%
so loss should be about seven
here

01:54:44.790 --> 01:54:44.800 align:start position:0%
here
 

01:54:44.800 --> 01:54:47.270 align:start position:0%
here
and<01:54:45.040><c> now</c><01:54:45.440><c> we</c><01:54:45.599><c> want</c><01:54:45.760><c> to</c><01:54:45.920><c> minimize</c><01:54:46.400><c> the</c><01:54:46.480><c> loss</c><01:54:47.119><c> we</c>

01:54:47.270 --> 01:54:47.280 align:start position:0%
and now we want to minimize the loss we
 

01:54:47.280 --> 01:54:49.270 align:start position:0%
and now we want to minimize the loss we
want<01:54:47.520><c> the</c><01:54:47.599><c> loss</c><01:54:48.080><c> to</c><01:54:48.239><c> be</c><01:54:48.400><c> low</c>

01:54:49.270 --> 01:54:49.280 align:start position:0%
want the loss to be low
 

01:54:49.280 --> 01:54:51.510 align:start position:0%
want the loss to be low
because<01:54:49.520><c> if</c><01:54:49.679><c> loss</c><01:54:50.000><c> is</c><01:54:50.159><c> low</c>

01:54:51.510 --> 01:54:51.520 align:start position:0%
because if loss is low
 

01:54:51.520 --> 01:54:53.990 align:start position:0%
because if loss is low
then<01:54:52.239><c> every</c><01:54:52.480><c> one</c><01:54:52.719><c> of</c><01:54:52.800><c> the</c><01:54:52.960><c> predictions</c><01:54:53.840><c> is</c>

01:54:53.990 --> 01:54:54.000 align:start position:0%
then every one of the predictions is
 

01:54:54.000 --> 01:54:56.310 align:start position:0%
then every one of the predictions is
equal<01:54:54.560><c> to</c><01:54:54.800><c> its</c><01:54:54.960><c> target</c>

01:54:56.310 --> 01:54:56.320 align:start position:0%
equal to its target
 

01:54:56.320 --> 01:54:58.870 align:start position:0%
equal to its target
so<01:54:56.480><c> the</c><01:54:56.719><c> loss</c><01:54:57.119><c> the</c><01:54:57.280><c> lowest</c><01:54:57.599><c> it</c><01:54:57.679><c> can</c><01:54:57.760><c> be</c><01:54:57.920><c> is</c><01:54:58.080><c> zero</c>

01:54:58.870 --> 01:54:58.880 align:start position:0%
so the loss the lowest it can be is zero
 

01:54:58.880 --> 01:55:01.510 align:start position:0%
so the loss the lowest it can be is zero
and<01:54:59.040><c> the</c><01:54:59.360><c> greater</c><01:54:59.760><c> it</c><01:54:59.920><c> is</c><01:55:00.320><c> the</c><01:55:00.480><c> worse</c><01:55:00.880><c> off</c><01:55:01.360><c> the</c>

01:55:01.510 --> 01:55:01.520 align:start position:0%
and the greater it is the worse off the
 

01:55:01.520 --> 01:55:04.070 align:start position:0%
and the greater it is the worse off the
neural<01:55:01.760><c> net</c><01:55:02.000><c> is</c><01:55:02.080><c> predicting</c>

01:55:04.070 --> 01:55:04.080 align:start position:0%
neural net is predicting
 

01:55:04.080 --> 01:55:05.589 align:start position:0%
neural net is predicting
so<01:55:04.239><c> now</c><01:55:04.480><c> of</c><01:55:04.560><c> course</c><01:55:04.800><c> if</c><01:55:04.960><c> we</c><01:55:05.040><c> do</c><01:55:05.199><c> lost</c><01:55:05.440><c> that</c>

01:55:05.589 --> 01:55:05.599 align:start position:0%
so now of course if we do lost that
 

01:55:05.599 --> 01:55:07.910 align:start position:0%
so now of course if we do lost that
backward

01:55:07.910 --> 01:55:07.920 align:start position:0%
backward
 

01:55:07.920 --> 01:55:09.430 align:start position:0%
backward
something<01:55:08.239><c> magical</c><01:55:08.639><c> happened</c><01:55:08.960><c> when</c><01:55:09.119><c> i</c><01:55:09.199><c> hit</c>

01:55:09.430 --> 01:55:09.440 align:start position:0%
something magical happened when i hit
 

01:55:09.440 --> 01:55:10.550 align:start position:0%
something magical happened when i hit
enter

01:55:10.550 --> 01:55:10.560 align:start position:0%
enter
 

01:55:10.560 --> 01:55:12.149 align:start position:0%
enter
and<01:55:10.960><c> the</c><01:55:11.119><c> magical</c><01:55:11.520><c> thing</c><01:55:11.760><c> of</c><01:55:11.840><c> course</c><01:55:12.000><c> that</c>

01:55:12.149 --> 01:55:12.159 align:start position:0%
and the magical thing of course that
 

01:55:12.159 --> 01:55:14.109 align:start position:0%
and the magical thing of course that
happened<01:55:12.560><c> is</c><01:55:12.639><c> that</c><01:55:12.880><c> we</c><01:55:12.960><c> can</c><01:55:13.119><c> look</c><01:55:13.360><c> at</c>

01:55:14.109 --> 01:55:14.119 align:start position:0%
happened is that we can look at
 

01:55:14.119 --> 01:55:16.550 align:start position:0%
happened is that we can look at
end.layers.neuron<01:55:15.199><c> and</c><01:55:15.360><c> that</c><01:55:15.599><c> layers</c><01:55:16.080><c> at</c><01:55:16.320><c> say</c>

01:55:16.550 --> 01:55:16.560 align:start position:0%
end.layers.neuron and that layers at say
 

01:55:16.560 --> 01:55:18.790 align:start position:0%
end.layers.neuron and that layers at say
like<01:55:16.800><c> the</c><01:55:17.199><c> the</c><01:55:17.360><c> first</c><01:55:17.599><c> layer</c>

01:55:18.790 --> 01:55:18.800 align:start position:0%
like the the first layer
 

01:55:18.800 --> 01:55:22.390 align:start position:0%
like the the first layer
that<01:55:19.040><c> neurons</c><01:55:19.520><c> at</c><01:55:19.679><c> zero</c>

01:55:22.390 --> 01:55:22.400 align:start position:0%
 
 

01:55:22.400 --> 01:55:24.870 align:start position:0%
 
because<01:55:22.880><c> remember</c><01:55:23.360><c> that</c><01:55:23.599><c> mlp</c><01:55:24.080><c> has</c><01:55:24.239><c> the</c><01:55:24.560><c> layers</c>

01:55:24.870 --> 01:55:24.880 align:start position:0%
because remember that mlp has the layers
 

01:55:24.880 --> 01:55:26.470 align:start position:0%
because remember that mlp has the layers
which<01:55:25.119><c> is</c><01:55:25.280><c> a</c><01:55:25.360><c> list</c>

01:55:26.470 --> 01:55:26.480 align:start position:0%
which is a list
 

01:55:26.480 --> 01:55:28.070 align:start position:0%
which is a list
and<01:55:26.639><c> each</c><01:55:26.800><c> layer</c><01:55:27.119><c> has</c><01:55:27.280><c> a</c><01:55:27.360><c> neurons</c><01:55:27.760><c> which</c><01:55:27.920><c> is</c><01:55:28.000><c> a</c>

01:55:28.070 --> 01:55:28.080 align:start position:0%
and each layer has a neurons which is a
 

01:55:28.080 --> 01:55:29.750 align:start position:0%
and each layer has a neurons which is a
list<01:55:28.719><c> and</c><01:55:28.800><c> that</c><01:55:28.960><c> gives</c><01:55:29.199><c> us</c><01:55:29.280><c> an</c><01:55:29.360><c> individual</c>

01:55:29.750 --> 01:55:29.760 align:start position:0%
list and that gives us an individual
 

01:55:29.760 --> 01:55:30.709 align:start position:0%
list and that gives us an individual
neuron

01:55:30.709 --> 01:55:30.719 align:start position:0%
neuron
 

01:55:30.719 --> 01:55:32.790 align:start position:0%
neuron
and<01:55:30.800><c> then</c><01:55:31.040><c> it's</c><01:55:31.280><c> got</c><01:55:31.440><c> some</c><01:55:31.679><c> weights</c>

01:55:32.790 --> 01:55:32.800 align:start position:0%
and then it's got some weights
 

01:55:32.800 --> 01:55:34.470 align:start position:0%
and then it's got some weights
and<01:55:32.960><c> so</c><01:55:33.119><c> we</c><01:55:33.280><c> can</c><01:55:33.520><c> for</c><01:55:33.679><c> example</c><01:55:34.000><c> look</c><01:55:34.239><c> at</c><01:55:34.320><c> the</c>

01:55:34.470 --> 01:55:34.480 align:start position:0%
and so we can for example look at the
 

01:55:34.480 --> 01:55:38.229 align:start position:0%
and so we can for example look at the
weights<01:55:34.960><c> at</c><01:55:35.119><c> zero</c>

01:55:38.229 --> 01:55:38.239 align:start position:0%
 
 

01:55:38.239 --> 01:55:40.149 align:start position:0%
 
um

01:55:40.149 --> 01:55:40.159 align:start position:0%
um
 

01:55:40.159 --> 01:55:42.070 align:start position:0%
um
oops<01:55:40.480><c> it's</c><01:55:40.639><c> not</c><01:55:40.800><c> called</c><01:55:41.040><c> weights</c><01:55:41.440><c> it's</c><01:55:41.679><c> called</c>

01:55:42.070 --> 01:55:42.080 align:start position:0%
oops it's not called weights it's called
 

01:55:42.080 --> 01:55:44.229 align:start position:0%
oops it's not called weights it's called
w

01:55:44.229 --> 01:55:44.239 align:start position:0%
w
 

01:55:44.239 --> 01:55:46.390 align:start position:0%
w
and<01:55:44.400><c> that's</c><01:55:44.639><c> a</c><01:55:44.719><c> value</c><01:55:45.440><c> but</c><01:55:45.679><c> now</c><01:55:45.920><c> this</c><01:55:46.080><c> value</c>

01:55:46.390 --> 01:55:46.400 align:start position:0%
and that's a value but now this value
 

01:55:46.400 --> 01:55:48.790 align:start position:0%
and that's a value but now this value
also<01:55:46.719><c> has</c><01:55:46.960><c> a</c><01:55:47.119><c> groud</c><01:55:48.000><c> because</c><01:55:48.239><c> of</c><01:55:48.400><c> the</c><01:55:48.480><c> backward</c>

01:55:48.790 --> 01:55:48.800 align:start position:0%
also has a groud because of the backward
 

01:55:48.800 --> 01:55:50.070 align:start position:0%
also has a groud because of the backward
pass

01:55:50.070 --> 01:55:50.080 align:start position:0%
pass
 

01:55:50.080 --> 01:55:52.870 align:start position:0%
pass
and<01:55:50.239><c> so</c><01:55:50.400><c> we</c><01:55:50.480><c> see</c><01:55:50.719><c> that</c><01:55:51.280><c> because</c><01:55:51.599><c> this</c><01:55:52.320><c> gradient</c>

01:55:52.870 --> 01:55:52.880 align:start position:0%
and so we see that because this gradient
 

01:55:52.880 --> 01:55:54.790 align:start position:0%
and so we see that because this gradient
here<01:55:53.199><c> on</c><01:55:53.360><c> this</c><01:55:53.599><c> particular</c><01:55:54.239><c> weight</c><01:55:54.480><c> of</c><01:55:54.560><c> this</c>

01:55:54.790 --> 01:55:54.800 align:start position:0%
here on this particular weight of this
 

01:55:54.800 --> 01:55:56.229 align:start position:0%
here on this particular weight of this
particular<01:55:55.199><c> neuron</c><01:55:55.520><c> of</c><01:55:55.599><c> this</c><01:55:55.760><c> particular</c>

01:55:56.229 --> 01:55:56.239 align:start position:0%
particular neuron of this particular
 

01:55:56.239 --> 01:55:57.830 align:start position:0%
particular neuron of this particular
layer<01:55:56.560><c> is</c><01:55:56.719><c> negative</c>

01:55:57.830 --> 01:55:57.840 align:start position:0%
layer is negative
 

01:55:57.840 --> 01:56:00.070 align:start position:0%
layer is negative
we<01:55:58.080><c> see</c><01:55:58.239><c> that</c><01:55:58.480><c> its</c><01:55:58.719><c> influence</c><01:55:59.119><c> on</c><01:55:59.199><c> the</c><01:55:59.360><c> loss</c><01:55:59.920><c> is</c>

01:56:00.070 --> 01:56:00.080 align:start position:0%
we see that its influence on the loss is
 

01:56:00.080 --> 01:56:02.470 align:start position:0%
we see that its influence on the loss is
also<01:56:00.320><c> negative</c><01:56:01.199><c> so</c><01:56:01.440><c> slightly</c><01:56:01.920><c> increasing</c>

01:56:02.470 --> 01:56:02.480 align:start position:0%
also negative so slightly increasing
 

01:56:02.480 --> 01:56:04.629 align:start position:0%
also negative so slightly increasing
this<01:56:02.639><c> particular</c><01:56:03.280><c> weight</c><01:56:03.760><c> of</c><01:56:03.840><c> this</c><01:56:04.159><c> neuron</c><01:56:04.560><c> of</c>

01:56:04.629 --> 01:56:04.639 align:start position:0%
this particular weight of this neuron of
 

01:56:04.639 --> 01:56:08.790 align:start position:0%
this particular weight of this neuron of
this<01:56:04.880><c> layer</c><01:56:05.599><c> would</c><01:56:05.840><c> make</c><01:56:06.080><c> the</c><01:56:06.239><c> loss</c><01:56:06.880><c> go</c><01:56:07.119><c> down</c>

01:56:08.790 --> 01:56:08.800 align:start position:0%
this layer would make the loss go down
 

01:56:08.800 --> 01:56:10.149 align:start position:0%
this layer would make the loss go down
and<01:56:09.040><c> we</c><01:56:09.199><c> actually</c><01:56:09.440><c> have</c><01:56:09.599><c> this</c><01:56:09.760><c> information</c>

01:56:10.149 --> 01:56:10.159 align:start position:0%
and we actually have this information
 

01:56:10.159 --> 01:56:12.390 align:start position:0%
and we actually have this information
for<01:56:10.400><c> every</c><01:56:10.719><c> single</c><01:56:11.040><c> one</c><01:56:11.199><c> of</c><01:56:11.440><c> our</c><01:56:11.840><c> neurons</c><01:56:12.239><c> and</c>

01:56:12.390 --> 01:56:12.400 align:start position:0%
for every single one of our neurons and
 

01:56:12.400 --> 01:56:13.750 align:start position:0%
for every single one of our neurons and
all<01:56:12.560><c> their</c><01:56:12.719><c> parameters</c><01:56:13.199><c> actually</c><01:56:13.440><c> it's</c><01:56:13.520><c> worth</c>

01:56:13.750 --> 01:56:13.760 align:start position:0%
all their parameters actually it's worth
 

01:56:13.760 --> 01:56:16.870 align:start position:0%
all their parameters actually it's worth
looking<01:56:14.080><c> at</c><01:56:14.639><c> also</c><01:56:14.880><c> the</c><01:56:15.119><c> draw</c><01:56:15.679><c> dot</c><01:56:16.239><c> loss</c><01:56:16.639><c> by</c><01:56:16.800><c> the</c>

01:56:16.870 --> 01:56:16.880 align:start position:0%
looking at also the draw dot loss by the
 

01:56:16.880 --> 01:56:17.910 align:start position:0%
looking at also the draw dot loss by the
way

01:56:17.910 --> 01:56:17.920 align:start position:0%
way
 

01:56:17.920 --> 01:56:19.669 align:start position:0%
way
so<01:56:18.080><c> previously</c><01:56:18.560><c> we</c><01:56:18.719><c> looked</c><01:56:18.880><c> at</c><01:56:18.960><c> the</c><01:56:19.119><c> draw</c><01:56:19.360><c> dot</c>

01:56:19.669 --> 01:56:19.679 align:start position:0%
so previously we looked at the draw dot
 

01:56:19.679 --> 01:56:21.750 align:start position:0%
so previously we looked at the draw dot
of<01:56:19.840><c> a</c><01:56:19.920><c> single</c><01:56:20.159><c> neural</c><01:56:20.719><c> neuron</c><01:56:21.199><c> forward</c><01:56:21.520><c> pass</c>

01:56:21.750 --> 01:56:21.760 align:start position:0%
of a single neural neuron forward pass
 

01:56:21.760 --> 01:56:23.750 align:start position:0%
of a single neural neuron forward pass
and<01:56:21.840><c> that</c><01:56:22.000><c> was</c><01:56:22.159><c> already</c><01:56:22.480><c> a</c><01:56:22.560><c> large</c><01:56:22.800><c> expression</c>

01:56:23.750 --> 01:56:23.760 align:start position:0%
and that was already a large expression
 

01:56:23.760 --> 01:56:25.910 align:start position:0%
and that was already a large expression
but<01:56:23.920><c> what</c><01:56:24.080><c> is</c><01:56:24.239><c> this</c><01:56:24.400><c> expression</c><01:56:25.280><c> we</c><01:56:25.520><c> actually</c>

01:56:25.910 --> 01:56:25.920 align:start position:0%
but what is this expression we actually
 

01:56:25.920 --> 01:56:27.350 align:start position:0%
but what is this expression we actually
forwarded

01:56:27.350 --> 01:56:27.360 align:start position:0%
forwarded
 

01:56:27.360 --> 01:56:29.109 align:start position:0%
forwarded
every<01:56:27.599><c> one</c><01:56:27.840><c> of</c><01:56:27.920><c> those</c><01:56:28.159><c> four</c><01:56:28.400><c> examples</c><01:56:28.960><c> and</c>

01:56:29.109 --> 01:56:29.119 align:start position:0%
every one of those four examples and
 

01:56:29.119 --> 01:56:30.870 align:start position:0%
every one of those four examples and
then<01:56:29.360><c> we</c><01:56:29.840><c> have</c><01:56:30.000><c> the</c><01:56:30.159><c> loss</c><01:56:30.400><c> on</c><01:56:30.480><c> top</c><01:56:30.719><c> of</c><01:56:30.800><c> them</c>

01:56:30.870 --> 01:56:30.880 align:start position:0%
then we have the loss on top of them
 

01:56:30.880 --> 01:56:32.790 align:start position:0%
then we have the loss on top of them
with<01:56:31.040><c> the</c><01:56:31.280><c> mean</c><01:56:31.599><c> squared</c><01:56:31.920><c> error</c>

01:56:32.790 --> 01:56:32.800 align:start position:0%
with the mean squared error
 

01:56:32.800 --> 01:56:36.149 align:start position:0%
with the mean squared error
and<01:56:32.960><c> so</c><01:56:33.119><c> this</c><01:56:33.360><c> is</c><01:56:33.520><c> a</c><01:56:33.679><c> really</c><01:56:34.000><c> massive</c><01:56:34.480><c> graph</c>

01:56:36.149 --> 01:56:36.159 align:start position:0%
and so this is a really massive graph
 

01:56:36.159 --> 01:56:38.229 align:start position:0%
and so this is a really massive graph
because<01:56:36.560><c> this</c><01:56:36.880><c> graph</c><01:56:37.360><c> that</c><01:56:37.520><c> we've</c><01:56:37.760><c> built</c><01:56:38.080><c> up</c>

01:56:38.229 --> 01:56:38.239 align:start position:0%
because this graph that we've built up
 

01:56:38.239 --> 01:56:39.669 align:start position:0%
because this graph that we've built up
now

01:56:39.669 --> 01:56:39.679 align:start position:0%
now
 

01:56:39.679 --> 01:56:41.669 align:start position:0%
now
oh<01:56:39.840><c> my</c><01:56:40.000><c> gosh</c><01:56:40.639><c> this</c><01:56:40.960><c> graph</c><01:56:41.199><c> that</c><01:56:41.280><c> we've</c><01:56:41.440><c> built</c>

01:56:41.669 --> 01:56:41.679 align:start position:0%
oh my gosh this graph that we've built
 

01:56:41.679 --> 01:56:42.950 align:start position:0%
oh my gosh this graph that we've built
up<01:56:41.840><c> now</c>

01:56:42.950 --> 01:56:42.960 align:start position:0%
up now
 

01:56:42.960 --> 01:56:44.709 align:start position:0%
up now
which<01:56:43.199><c> is</c><01:56:43.280><c> kind</c><01:56:43.440><c> of</c><01:56:43.520><c> excessive</c><01:56:44.480><c> it's</c>

01:56:44.709 --> 01:56:44.719 align:start position:0%
which is kind of excessive it's
 

01:56:44.719 --> 01:56:46.390 align:start position:0%
which is kind of excessive it's
excessive<01:56:45.199><c> because</c><01:56:45.440><c> it</c><01:56:45.520><c> has</c><01:56:45.760><c> four</c><01:56:46.080><c> forward</c>

01:56:46.390 --> 01:56:46.400 align:start position:0%
excessive because it has four forward
 

01:56:46.400 --> 01:56:48.229 align:start position:0%
excessive because it has four forward
passes<01:56:46.719><c> of</c><01:56:46.880><c> a</c><01:56:46.960><c> neural</c><01:56:47.199><c> net</c><01:56:47.679><c> for</c><01:56:47.840><c> every</c><01:56:48.000><c> one</c><01:56:48.159><c> of</c>

01:56:48.229 --> 01:56:48.239 align:start position:0%
passes of a neural net for every one of
 

01:56:48.239 --> 01:56:50.629 align:start position:0%
passes of a neural net for every one of
the<01:56:48.400><c> examples</c><01:56:49.280><c> and</c><01:56:49.360><c> then</c><01:56:49.599><c> it</c><01:56:49.679><c> has</c><01:56:49.840><c> the</c><01:56:50.080><c> loss</c><01:56:50.480><c> on</c>

01:56:50.629 --> 01:56:50.639 align:start position:0%
the examples and then it has the loss on
 

01:56:50.639 --> 01:56:51.430 align:start position:0%
the examples and then it has the loss on
top

01:56:51.430 --> 01:56:51.440 align:start position:0%
top
 

01:56:51.440 --> 01:56:53.030 align:start position:0%
top
and<01:56:51.599><c> it</c><01:56:51.760><c> ends</c><01:56:51.920><c> with</c><01:56:52.080><c> the</c><01:56:52.320><c> value</c><01:56:52.639><c> of</c><01:56:52.719><c> the</c><01:56:52.800><c> loss</c>

01:56:53.030 --> 01:56:53.040 align:start position:0%
and it ends with the value of the loss
 

01:56:53.040 --> 01:56:55.189 align:start position:0%
and it ends with the value of the loss
which<01:56:53.280><c> was</c><01:56:53.440><c> 7.12</c>

01:56:55.189 --> 01:56:55.199 align:start position:0%
which was 7.12
 

01:56:55.199 --> 01:56:56.629 align:start position:0%
which was 7.12
and<01:56:55.280><c> this</c><01:56:55.520><c> loss</c><01:56:55.760><c> will</c><01:56:55.920><c> now</c><01:56:56.080><c> back</c><01:56:56.239><c> propagate</c>

01:56:56.629 --> 01:56:56.639 align:start position:0%
and this loss will now back propagate
 

01:56:56.639 --> 01:56:58.950 align:start position:0%
and this loss will now back propagate
through<01:56:56.880><c> all</c><01:56:56.960><c> the</c><01:56:57.199><c> four</c><01:56:57.520><c> forward</c><01:56:57.840><c> passes</c><01:56:58.800><c> all</c>

01:56:58.950 --> 01:56:58.960 align:start position:0%
through all the four forward passes all
 

01:56:58.960 --> 01:57:00.950 align:start position:0%
through all the four forward passes all
the<01:56:59.119><c> way</c><01:56:59.599><c> through</c><01:57:00.080><c> just</c><01:57:00.400><c> every</c><01:57:00.639><c> single</c>

01:57:00.950 --> 01:57:00.960 align:start position:0%
the way through just every single
 

01:57:00.960 --> 01:57:03.109 align:start position:0%
the way through just every single
intermediate<01:57:01.520><c> value</c><01:57:01.760><c> of</c><01:57:01.840><c> the</c><01:57:01.920><c> neural</c><01:57:02.239><c> net</c>

01:57:03.109 --> 01:57:03.119 align:start position:0%
intermediate value of the neural net
 

01:57:03.119 --> 01:57:05.189 align:start position:0%
intermediate value of the neural net
all<01:57:03.280><c> the</c><01:57:03.440><c> way</c><01:57:03.760><c> back</c><01:57:04.400><c> to</c><01:57:04.800><c> of</c><01:57:04.880><c> course</c><01:57:05.119><c> the</c>

01:57:05.189 --> 01:57:05.199 align:start position:0%
all the way back to of course the
 

01:57:05.199 --> 01:57:06.790 align:start position:0%
all the way back to of course the
parameters<01:57:05.760><c> of</c><01:57:05.840><c> the</c><01:57:05.920><c> weights</c><01:57:06.239><c> which</c><01:57:06.480><c> are</c><01:57:06.639><c> the</c>

01:57:06.790 --> 01:57:06.800 align:start position:0%
parameters of the weights which are the
 

01:57:06.800 --> 01:57:07.910 align:start position:0%
parameters of the weights which are the
input

01:57:07.910 --> 01:57:07.920 align:start position:0%
input
 

01:57:07.920 --> 01:57:10.310 align:start position:0%
input
so<01:57:08.159><c> these</c><01:57:08.719><c> weight</c><01:57:08.960><c> parameters</c><01:57:09.679><c> here</c><01:57:10.159><c> are</c>

01:57:10.310 --> 01:57:10.320 align:start position:0%
so these weight parameters here are
 

01:57:10.320 --> 01:57:12.310 align:start position:0%
so these weight parameters here are
inputs<01:57:10.880><c> to</c><01:57:11.040><c> this</c><01:57:11.199><c> neural</c><01:57:11.520><c> net</c>

01:57:12.310 --> 01:57:12.320 align:start position:0%
inputs to this neural net
 

01:57:12.320 --> 01:57:13.270 align:start position:0%
inputs to this neural net
and

01:57:13.270 --> 01:57:13.280 align:start position:0%
and
 

01:57:13.280 --> 01:57:15.109 align:start position:0%
and
these<01:57:13.440><c> numbers</c><01:57:13.840><c> here</c><01:57:14.320><c> these</c><01:57:14.480><c> scalars</c><01:57:14.960><c> are</c>

01:57:15.109 --> 01:57:15.119 align:start position:0%
these numbers here these scalars are
 

01:57:15.119 --> 01:57:16.870 align:start position:0%
these numbers here these scalars are
inputs<01:57:15.360><c> to</c><01:57:15.520><c> the</c><01:57:15.599><c> neural</c><01:57:15.840><c> net</c>

01:57:16.870 --> 01:57:16.880 align:start position:0%
inputs to the neural net
 

01:57:16.880 --> 01:57:18.870 align:start position:0%
inputs to the neural net
so<01:57:17.040><c> if</c><01:57:17.199><c> we</c><01:57:17.280><c> went</c><01:57:17.520><c> around</c><01:57:17.840><c> here</c>

01:57:18.870 --> 01:57:18.880 align:start position:0%
so if we went around here
 

01:57:18.880 --> 01:57:20.629 align:start position:0%
so if we went around here
we'll<01:57:19.280><c> probably</c><01:57:19.679><c> find</c>

01:57:20.629 --> 01:57:20.639 align:start position:0%
we'll probably find
 

01:57:20.639 --> 01:57:22.870 align:start position:0%
we'll probably find
some<01:57:20.800><c> of</c><01:57:20.880><c> these</c><01:57:21.040><c> examples</c><01:57:21.760><c> this</c><01:57:21.920><c> 1.0</c>

01:57:22.870 --> 01:57:22.880 align:start position:0%
some of these examples this 1.0
 

01:57:22.880 --> 01:57:25.270 align:start position:0%
some of these examples this 1.0
potentially<01:57:23.440><c> maybe</c><01:57:23.760><c> this</c><01:57:23.920><c> 1.0</c><01:57:24.880><c> or</c><01:57:25.119><c> you</c><01:57:25.199><c> know</c>

01:57:25.270 --> 01:57:25.280 align:start position:0%
potentially maybe this 1.0 or you know
 

01:57:25.280 --> 01:57:26.950 align:start position:0%
potentially maybe this 1.0 or you know
some<01:57:25.440><c> of</c><01:57:25.440><c> the</c><01:57:25.599><c> others</c><01:57:26.239><c> and</c><01:57:26.320><c> you'll</c><01:57:26.480><c> see</c><01:57:26.639><c> that</c>

01:57:26.950 --> 01:57:26.960 align:start position:0%
some of the others and you'll see that
 

01:57:26.960 --> 01:57:28.790 align:start position:0%
some of the others and you'll see that
they<01:57:27.119><c> all</c><01:57:27.280><c> have</c><01:57:27.440><c> gradients</c><01:57:27.840><c> as</c><01:57:27.920><c> well</c>

01:57:28.790 --> 01:57:28.800 align:start position:0%
they all have gradients as well
 

01:57:28.800 --> 01:57:30.790 align:start position:0%
they all have gradients as well
the<01:57:28.960><c> thing</c><01:57:29.119><c> is</c><01:57:29.280><c> these</c><01:57:29.520><c> gradients</c><01:57:30.000><c> on</c><01:57:30.239><c> the</c>

01:57:30.790 --> 01:57:30.800 align:start position:0%
the thing is these gradients on the
 

01:57:30.800 --> 01:57:33.430 align:start position:0%
the thing is these gradients on the
input<01:57:31.119><c> data</c><01:57:31.679><c> are</c><01:57:31.760><c> not</c><01:57:31.920><c> that</c><01:57:32.159><c> useful</c><01:57:32.480><c> to</c><01:57:32.719><c> us</c>

01:57:33.430 --> 01:57:33.440 align:start position:0%
input data are not that useful to us
 

01:57:33.440 --> 01:57:36.070 align:start position:0%
input data are not that useful to us
and<01:57:33.840><c> that's</c><01:57:34.080><c> because</c><01:57:34.880><c> the</c><01:57:35.040><c> input</c><01:57:35.280><c> data</c><01:57:35.760><c> seems</c>

01:57:36.070 --> 01:57:36.080 align:start position:0%
and that's because the input data seems
 

01:57:36.080 --> 01:57:38.870 align:start position:0%
and that's because the input data seems
to<01:57:36.239><c> be</c><01:57:36.800><c> not</c><01:57:37.280><c> changeable</c><01:57:37.920><c> it's</c><01:57:38.320><c> it's</c><01:57:38.480><c> a</c><01:57:38.639><c> given</c>

01:57:38.870 --> 01:57:38.880 align:start position:0%
to be not changeable it's it's a given
 

01:57:38.880 --> 01:57:40.870 align:start position:0%
to be not changeable it's it's a given
to<01:57:39.040><c> the</c><01:57:39.199><c> problem</c><01:57:39.760><c> and</c><01:57:39.920><c> so</c><01:57:40.080><c> it's</c><01:57:40.239><c> a</c><01:57:40.320><c> fixed</c><01:57:40.639><c> input</c>

01:57:40.870 --> 01:57:40.880 align:start position:0%
to the problem and so it's a fixed input
 

01:57:40.880 --> 01:57:42.149 align:start position:0%
to the problem and so it's a fixed input
we're<01:57:41.040><c> not</c><01:57:41.199><c> going</c><01:57:41.360><c> to</c><01:57:41.440><c> be</c><01:57:41.599><c> changing</c><01:57:41.920><c> it</c><01:57:42.000><c> or</c>

01:57:42.149 --> 01:57:42.159 align:start position:0%
we're not going to be changing it or
 

01:57:42.159 --> 01:57:43.669 align:start position:0%
we're not going to be changing it or
messing<01:57:42.400><c> with</c><01:57:42.639><c> it</c><01:57:42.960><c> even</c><01:57:43.119><c> though</c><01:57:43.280><c> we</c><01:57:43.440><c> do</c><01:57:43.520><c> have</c>

01:57:43.669 --> 01:57:43.679 align:start position:0%
messing with it even though we do have
 

01:57:43.679 --> 01:57:45.990 align:start position:0%
messing with it even though we do have
gradients<01:57:44.080><c> for</c><01:57:44.320><c> it</c>

01:57:45.990 --> 01:57:46.000 align:start position:0%
gradients for it
 

01:57:46.000 --> 01:57:49.030 align:start position:0%
gradients for it
but<01:57:46.560><c> some</c><01:57:46.719><c> of</c><01:57:46.800><c> these</c><01:57:47.040><c> gradients</c><01:57:47.440><c> here</c>

01:57:49.030 --> 01:57:49.040 align:start position:0%
but some of these gradients here
 

01:57:49.040 --> 01:57:50.310 align:start position:0%
but some of these gradients here
will<01:57:49.199><c> be</c><01:57:49.360><c> for</c><01:57:49.599><c> the</c><01:57:49.760><c> neural</c><01:57:50.000><c> network</c>

01:57:50.310 --> 01:57:50.320 align:start position:0%
will be for the neural network
 

01:57:50.320 --> 01:57:53.270 align:start position:0%
will be for the neural network
parameters<01:57:51.199><c> the</c><01:57:51.360><c> ws</c><01:57:51.920><c> and</c><01:57:52.000><c> the</c><01:57:52.159><c> bs</c><01:57:52.719><c> and</c><01:57:52.880><c> those</c>

01:57:53.270 --> 01:57:53.280 align:start position:0%
parameters the ws and the bs and those
 

01:57:53.280 --> 01:57:55.750 align:start position:0%
parameters the ws and the bs and those
we<01:57:53.520><c> of</c><01:57:53.679><c> course</c><01:57:53.920><c> we</c><01:57:54.080><c> want</c><01:57:54.239><c> to</c><01:57:54.400><c> change</c>

01:57:55.750 --> 01:57:55.760 align:start position:0%
we of course we want to change
 

01:57:55.760 --> 01:57:58.070 align:start position:0%
we of course we want to change
okay<01:57:56.000><c> so</c><01:57:56.159><c> now</c><01:57:56.320><c> we're</c><01:57:56.480><c> going</c><01:57:56.639><c> to</c><01:57:57.199><c> want</c><01:57:57.840><c> some</c>

01:57:58.070 --> 01:57:58.080 align:start position:0%
okay so now we're going to want some
 

01:57:58.080 --> 01:57:59.910 align:start position:0%
okay so now we're going to want some
convenience<01:57:58.639><c> code</c><01:57:58.960><c> to</c><01:57:59.119><c> gather</c><01:57:59.440><c> up</c><01:57:59.599><c> all</c><01:57:59.679><c> of</c><01:57:59.760><c> the</c>

01:57:59.910 --> 01:57:59.920 align:start position:0%
convenience code to gather up all of the
 

01:57:59.920 --> 01:58:01.669 align:start position:0%
convenience code to gather up all of the
parameters<01:58:00.480><c> of</c><01:58:00.560><c> the</c><01:58:00.719><c> neural</c><01:58:00.960><c> net</c><01:58:01.199><c> so</c><01:58:01.360><c> that</c><01:58:01.520><c> we</c>

01:58:01.669 --> 01:58:01.679 align:start position:0%
parameters of the neural net so that we
 

01:58:01.679 --> 01:58:03.350 align:start position:0%
parameters of the neural net so that we
can<01:58:01.920><c> operate</c><01:58:02.320><c> on</c><01:58:02.639><c> all</c><01:58:02.800><c> of</c><01:58:02.880><c> them</c>

01:58:03.350 --> 01:58:03.360 align:start position:0%
can operate on all of them
 

01:58:03.360 --> 01:58:05.750 align:start position:0%
can operate on all of them
simultaneously<01:58:04.480><c> and</c><01:58:04.719><c> every</c><01:58:04.880><c> one</c><01:58:05.040><c> of</c><01:58:05.199><c> them</c><01:58:05.599><c> we</c>

01:58:05.750 --> 01:58:05.760 align:start position:0%
simultaneously and every one of them we
 

01:58:05.760 --> 01:58:08.709 align:start position:0%
simultaneously and every one of them we
will<01:58:06.320><c> nudge</c><01:58:06.800><c> a</c><01:58:06.960><c> tiny</c><01:58:07.360><c> amount</c>

01:58:08.709 --> 01:58:08.719 align:start position:0%
will nudge a tiny amount
 

01:58:08.719 --> 01:58:10.629 align:start position:0%
will nudge a tiny amount
based<01:58:08.960><c> on</c><01:58:09.040><c> the</c><01:58:09.119><c> gradient</c><01:58:09.520><c> information</c>

01:58:10.629 --> 01:58:10.639 align:start position:0%
based on the gradient information
 

01:58:10.639 --> 01:58:11.910 align:start position:0%
based on the gradient information
so<01:58:10.800><c> let's</c><01:58:10.960><c> collect</c><01:58:11.280><c> the</c><01:58:11.360><c> parameters</c><01:58:11.760><c> of</c><01:58:11.840><c> the</c>

01:58:11.910 --> 01:58:11.920 align:start position:0%
so let's collect the parameters of the
 

01:58:11.920 --> 01:58:14.790 align:start position:0%
so let's collect the parameters of the
neural<01:58:12.159><c> net</c><01:58:12.400><c> all</c><01:58:12.639><c> in</c><01:58:13.199><c> one</c><01:58:13.760><c> array</c>

01:58:14.790 --> 01:58:14.800 align:start position:0%
neural net all in one array
 

01:58:14.800 --> 01:58:17.830 align:start position:0%
neural net all in one array
so<01:58:15.119><c> let's</c><01:58:15.599><c> create</c><01:58:15.840><c> a</c><01:58:15.920><c> parameters</c><01:58:16.560><c> of</c><01:58:16.719><c> self</c>

01:58:17.830 --> 01:58:17.840 align:start position:0%
so let's create a parameters of self
 

01:58:17.840 --> 01:58:18.830 align:start position:0%
so let's create a parameters of self
that<01:58:18.080><c> just</c>

01:58:18.830 --> 01:58:18.840 align:start position:0%
that just
 

01:58:18.840 --> 01:58:22.229 align:start position:0%
that just
returns<01:58:20.000><c> celta</c><01:58:20.400><c> w</c><01:58:20.800><c> which</c><01:58:20.880><c> is</c><01:58:21.040><c> a</c><01:58:21.119><c> list</c>

01:58:22.229 --> 01:58:22.239 align:start position:0%
returns celta w which is a list
 

01:58:22.239 --> 01:58:23.990 align:start position:0%
returns celta w which is a list
concatenated<01:58:23.040><c> with</c>

01:58:23.990 --> 01:58:24.000 align:start position:0%
concatenated with
 

01:58:24.000 --> 01:58:27.109 align:start position:0%
concatenated with
a<01:58:24.159><c> list</c><01:58:24.480><c> of</c><01:58:24.960><c> self.b</c>

01:58:27.109 --> 01:58:27.119 align:start position:0%
a list of self.b
 

01:58:27.119 --> 01:58:29.430 align:start position:0%
a list of self.b
so<01:58:27.280><c> this</c><01:58:27.440><c> will</c><01:58:27.679><c> just</c><01:58:27.840><c> return</c><01:58:28.159><c> a</c><01:58:28.320><c> list</c>

01:58:29.430 --> 01:58:29.440 align:start position:0%
so this will just return a list
 

01:58:29.440 --> 01:58:31.350 align:start position:0%
so this will just return a list
list<01:58:29.679><c> plus</c><01:58:29.920><c> list</c><01:58:30.159><c> just</c><01:58:30.639><c> you</c><01:58:30.800><c> know</c><01:58:30.880><c> gives</c><01:58:31.119><c> you</c><01:58:31.280><c> a</c>

01:58:31.350 --> 01:58:31.360 align:start position:0%
list plus list just you know gives you a
 

01:58:31.360 --> 01:58:32.149 align:start position:0%
list plus list just you know gives you a
list

01:58:32.149 --> 01:58:32.159 align:start position:0%
list
 

01:58:32.159 --> 01:58:35.030 align:start position:0%
list
so<01:58:32.320><c> that's</c><01:58:32.560><c> parameters</c><01:58:33.199><c> of</c><01:58:33.599><c> neuron</c><01:58:34.480><c> and</c><01:58:34.880><c> i'm</c>

01:58:35.030 --> 01:58:35.040 align:start position:0%
so that's parameters of neuron and i'm
 

01:58:35.040 --> 01:58:36.709 align:start position:0%
so that's parameters of neuron and i'm
calling<01:58:35.360><c> it</c><01:58:35.440><c> this</c><01:58:35.599><c> way</c><01:58:35.760><c> because</c><01:58:36.080><c> also</c><01:58:36.480><c> pi</c>

01:58:36.709 --> 01:58:36.719 align:start position:0%
calling it this way because also pi
 

01:58:36.719 --> 01:58:38.790 align:start position:0%
calling it this way because also pi
torch<01:58:37.040><c> has</c><01:58:37.199><c> a</c><01:58:37.440><c> parameters</c><01:58:38.080><c> on</c><01:58:38.239><c> every</c><01:58:38.480><c> single</c>

01:58:38.790 --> 01:58:38.800 align:start position:0%
torch has a parameters on every single
 

01:58:38.800 --> 01:58:40.070 align:start position:0%
torch has a parameters on every single
and<01:58:38.960><c> in</c><01:58:39.119><c> module</c>

01:58:40.070 --> 01:58:40.080 align:start position:0%
and in module
 

01:58:40.080 --> 01:58:41.990 align:start position:0%
and in module
and<01:58:40.400><c> uh</c><01:58:40.800><c> it</c><01:58:40.960><c> does</c><01:58:41.280><c> exactly</c><01:58:41.599><c> what</c><01:58:41.760><c> we're</c><01:58:41.840><c> doing</c>

01:58:41.990 --> 01:58:42.000 align:start position:0%
and uh it does exactly what we're doing
 

01:58:42.000 --> 01:58:43.990 align:start position:0%
and uh it does exactly what we're doing
here<01:58:42.239><c> it</c><01:58:42.320><c> just</c><01:58:42.480><c> returns</c><01:58:43.040><c> the</c>

01:58:43.990 --> 01:58:44.000 align:start position:0%
here it just returns the
 

01:58:44.000 --> 01:58:45.990 align:start position:0%
here it just returns the
parameter<01:58:44.719><c> tensors</c><01:58:45.360><c> for</c><01:58:45.599><c> us</c><01:58:45.760><c> as</c><01:58:45.920><c> the</c>

01:58:45.990 --> 01:58:46.000 align:start position:0%
parameter tensors for us as the
 

01:58:46.000 --> 01:58:48.390 align:start position:0%
parameter tensors for us as the
parameter<01:58:46.560><c> scalars</c>

01:58:48.390 --> 01:58:48.400 align:start position:0%
parameter scalars
 

01:58:48.400 --> 01:58:50.870 align:start position:0%
parameter scalars
now<01:58:48.639><c> layer</c><01:58:49.040><c> is</c><01:58:49.199><c> also</c><01:58:49.440><c> a</c><01:58:49.599><c> module</c><01:58:50.320><c> so</c><01:58:50.560><c> it</c><01:58:50.719><c> will</c>

01:58:50.870 --> 01:58:50.880 align:start position:0%
now layer is also a module so it will
 

01:58:50.880 --> 01:58:52.470 align:start position:0%
now layer is also a module so it will
have<01:58:51.040><c> parameters</c>

01:58:52.470 --> 01:58:52.480 align:start position:0%
have parameters
 

01:58:52.480 --> 01:58:54.070 align:start position:0%
have parameters
itself

01:58:54.070 --> 01:58:54.080 align:start position:0%
itself
 

01:58:54.080 --> 01:58:56.709 align:start position:0%
itself
and<01:58:54.320><c> basically</c><01:58:54.639><c> what</c><01:58:54.800><c> we</c><01:58:54.880><c> want</c><01:58:55.040><c> to</c><01:58:55.119><c> do</c><01:58:55.360><c> here</c><01:58:55.679><c> is</c>

01:58:56.709 --> 01:58:56.719 align:start position:0%
and basically what we want to do here is
 

01:58:56.719 --> 01:59:00.229 align:start position:0%
and basically what we want to do here is
something<01:58:56.960><c> like</c><01:58:57.119><c> this</c><01:58:57.440><c> like</c>

01:59:00.229 --> 01:59:00.239 align:start position:0%
 
 

01:59:00.239 --> 01:59:03.510 align:start position:0%
 
params<01:59:00.880><c> is</c><01:59:01.199><c> here</c><01:59:01.520><c> and</c><01:59:01.599><c> then</c><01:59:02.000><c> for</c>

01:59:03.510 --> 01:59:03.520 align:start position:0%
params is here and then for
 

01:59:03.520 --> 01:59:07.350 align:start position:0%
params is here and then for
neuron<01:59:04.159><c> in</c><01:59:04.560><c> salt</c><01:59:04.880><c> out</c><01:59:05.040><c> neurons</c>

01:59:07.350 --> 01:59:07.360 align:start position:0%
neuron in salt out neurons
 

01:59:07.360 --> 01:59:10.550 align:start position:0%
neuron in salt out neurons
we<01:59:07.520><c> want</c><01:59:07.679><c> to</c><01:59:07.760><c> get</c><01:59:08.000><c> neuron.parameters</c>

01:59:10.550 --> 01:59:10.560 align:start position:0%
we want to get neuron.parameters
 

01:59:10.560 --> 01:59:13.990 align:start position:0%
we want to get neuron.parameters
and<01:59:10.800><c> we</c><01:59:10.960><c> want</c><01:59:11.280><c> to</c><01:59:11.679><c> params.extend</c>

01:59:13.990 --> 01:59:14.000 align:start position:0%
and we want to params.extend
 

01:59:14.000 --> 01:59:15.990 align:start position:0%
and we want to params.extend
right<01:59:14.239><c> so</c><01:59:14.400><c> these</c><01:59:14.560><c> are</c><01:59:14.719><c> the</c><01:59:15.440><c> parameters</c><01:59:15.920><c> of</c>

01:59:15.990 --> 01:59:16.000 align:start position:0%
right so these are the parameters of
 

01:59:16.000 --> 01:59:17.910 align:start position:0%
right so these are the parameters of
this<01:59:16.159><c> neuron</c><01:59:16.800><c> and</c><01:59:16.880><c> then</c><01:59:17.040><c> we</c><01:59:17.119><c> want</c><01:59:17.280><c> to</c><01:59:17.599><c> put</c><01:59:17.760><c> them</c>

01:59:17.910 --> 01:59:17.920 align:start position:0%
this neuron and then we want to put them
 

01:59:17.920 --> 01:59:21.430 align:start position:0%
this neuron and then we want to put them
on<01:59:18.080><c> top</c><01:59:18.320><c> of</c><01:59:18.480><c> params</c><01:59:19.040><c> so</c><01:59:19.199><c> params</c><01:59:20.159><c> dot</c><01:59:20.480><c> extend</c>

01:59:21.430 --> 01:59:21.440 align:start position:0%
on top of params so params dot extend
 

01:59:21.440 --> 01:59:22.550 align:start position:0%
on top of params so params dot extend
of<01:59:21.599><c> peace</c>

01:59:22.550 --> 01:59:22.560 align:start position:0%
of peace
 

01:59:22.560 --> 01:59:25.350 align:start position:0%
of peace
and<01:59:22.639><c> then</c><01:59:22.800><c> we</c><01:59:22.960><c> want</c><01:59:23.119><c> to</c><01:59:23.199><c> return</c><01:59:23.520><c> brands</c>

01:59:25.350 --> 01:59:25.360 align:start position:0%
and then we want to return brands
 

01:59:25.360 --> 01:59:28.070 align:start position:0%
and then we want to return brands
so<01:59:26.080><c> this</c><01:59:26.639><c> is</c><01:59:26.800><c> way</c><01:59:26.960><c> too</c><01:59:27.119><c> much</c><01:59:27.360><c> code</c><01:59:27.679><c> so</c><01:59:27.840><c> actually</c>

01:59:28.070 --> 01:59:28.080 align:start position:0%
so this is way too much code so actually
 

01:59:28.080 --> 01:59:31.589 align:start position:0%
so this is way too much code so actually
there's<01:59:28.239><c> a</c><01:59:28.320><c> way</c><01:59:28.480><c> to</c><01:59:28.639><c> simplify</c><01:59:29.199><c> this</c><01:59:30.000><c> which</c><01:59:30.320><c> is</c>

01:59:31.589 --> 01:59:31.599 align:start position:0%
there's a way to simplify this which is
 

01:59:31.599 --> 01:59:33.910 align:start position:0%
there's a way to simplify this which is
return

01:59:33.910 --> 01:59:33.920 align:start position:0%
return
 

01:59:33.920 --> 01:59:35.510 align:start position:0%
return
p

01:59:35.510 --> 01:59:35.520 align:start position:0%
p
 

01:59:35.520 --> 01:59:37.990 align:start position:0%
p
for<01:59:35.760><c> neuron</c><01:59:36.239><c> in</c><01:59:36.480><c> self</c>

01:59:37.990 --> 01:59:38.000 align:start position:0%
for neuron in self
 

01:59:38.000 --> 01:59:39.830 align:start position:0%
for neuron in self
neurons

01:59:39.830 --> 01:59:39.840 align:start position:0%
neurons
 

01:59:39.840 --> 01:59:41.350 align:start position:0%
neurons
for

01:59:41.350 --> 01:59:41.360 align:start position:0%
for
 

01:59:41.360 --> 01:59:45.669 align:start position:0%
for
p<01:59:41.920><c> in</c><01:59:42.480><c> neuron</c><01:59:42.960><c> dot</c><01:59:43.440><c> parameters</c>

01:59:45.669 --> 01:59:45.679 align:start position:0%
p in neuron dot parameters
 

01:59:45.679 --> 01:59:47.350 align:start position:0%
p in neuron dot parameters
so<01:59:45.840><c> it's</c><01:59:46.000><c> a</c><01:59:46.080><c> single</c><01:59:46.320><c> list</c><01:59:46.480><c> comprehension</c><01:59:47.199><c> in</c>

01:59:47.350 --> 01:59:47.360 align:start position:0%
so it's a single list comprehension in
 

01:59:47.360 --> 01:59:49.270 align:start position:0%
so it's a single list comprehension in
python<01:59:47.760><c> you</c><01:59:47.840><c> can</c><01:59:48.239><c> sort</c><01:59:48.480><c> of</c><01:59:48.560><c> nest</c><01:59:48.880><c> them</c><01:59:49.040><c> like</c>

01:59:49.270 --> 01:59:49.280 align:start position:0%
python you can sort of nest them like
 

01:59:49.280 --> 01:59:51.589 align:start position:0%
python you can sort of nest them like
this<01:59:49.840><c> and</c><01:59:50.000><c> you</c><01:59:50.159><c> can</c><01:59:50.560><c> um</c>

01:59:51.589 --> 01:59:51.599 align:start position:0%
this and you can um
 

01:59:51.599 --> 01:59:52.790 align:start position:0%
this and you can um
then<01:59:51.840><c> create</c>

01:59:52.790 --> 01:59:52.800 align:start position:0%
then create
 

01:59:52.800 --> 01:59:54.790 align:start position:0%
then create
uh<01:59:53.440><c> the</c><01:59:53.599><c> desired</c>

01:59:54.790 --> 01:59:54.800 align:start position:0%
uh the desired
 

01:59:54.800 --> 01:59:57.430 align:start position:0%
uh the desired
array<01:59:55.199><c> so</c><01:59:55.520><c> this</c><01:59:55.679><c> is</c><01:59:55.840><c> these</c><01:59:56.080><c> are</c><01:59:56.239><c> identical</c>

01:59:57.430 --> 01:59:57.440 align:start position:0%
array so this is these are identical
 

01:59:57.440 --> 01:59:59.990 align:start position:0%
array so this is these are identical
we<01:59:57.599><c> can</c><01:59:57.760><c> take</c><01:59:57.920><c> this</c><01:59:58.159><c> out</c>

01:59:59.990 --> 02:00:00.000 align:start position:0%
we can take this out
 

02:00:00.000 --> 02:00:04.629 align:start position:0%
we can take this out
and<02:00:00.159><c> then</c><02:00:00.400><c> let's</c><02:00:00.560><c> do</c><02:00:00.719><c> the</c><02:00:00.880><c> same</c><02:00:01.119><c> here</c>

02:00:04.629 --> 02:00:04.639 align:start position:0%
 
 

02:00:04.639 --> 02:00:06.629 align:start position:0%
 
def<02:00:04.960><c> parameters</c>

02:00:06.629 --> 02:00:06.639 align:start position:0%
def parameters
 

02:00:06.639 --> 02:00:07.910 align:start position:0%
def parameters
self

02:00:07.910 --> 02:00:07.920 align:start position:0%
self
 

02:00:07.920 --> 02:00:09.430 align:start position:0%
self
and<02:00:08.159><c> return</c>

02:00:09.430 --> 02:00:09.440 align:start position:0%
and return
 

02:00:09.440 --> 02:00:13.589 align:start position:0%
and return
a<02:00:09.599><c> parameter</c><02:00:10.239><c> for</c><02:00:10.639><c> layer</c><02:00:11.119><c> in</c><02:00:11.599><c> self</c><02:00:12.080><c> dot</c><02:00:12.320><c> layers</c>

02:00:13.589 --> 02:00:13.599 align:start position:0%
a parameter for layer in self dot layers
 

02:00:13.599 --> 02:00:15.109 align:start position:0%
a parameter for layer in self dot layers
for

02:00:15.109 --> 02:00:15.119 align:start position:0%
for
 

02:00:15.119 --> 02:00:20.950 align:start position:0%
for
p<02:00:15.520><c> in</c><02:00:16.000><c> layer</c><02:00:16.400><c> dot</c><02:00:16.880><c> parameters</c>

02:00:20.950 --> 02:00:20.960 align:start position:0%
 
 

02:00:20.960 --> 02:00:23.669 align:start position:0%
 
and<02:00:21.119><c> that</c><02:00:21.360><c> should</c><02:00:21.520><c> be</c><02:00:21.679><c> good</c>

02:00:23.669 --> 02:00:23.679 align:start position:0%
and that should be good
 

02:00:23.679 --> 02:00:26.390 align:start position:0%
and that should be good
now<02:00:23.840><c> let</c><02:00:24.000><c> me</c><02:00:24.239><c> pop</c><02:00:24.480><c> out</c><02:00:24.800><c> this</c><02:00:25.440><c> so</c>

02:00:26.390 --> 02:00:26.400 align:start position:0%
now let me pop out this so
 

02:00:26.400 --> 02:00:28.950 align:start position:0%
now let me pop out this so
we<02:00:26.560><c> don't</c><02:00:26.960><c> re-initialize</c><02:00:28.000><c> our</c><02:00:28.159><c> network</c>

02:00:28.950 --> 02:00:28.960 align:start position:0%
we don't re-initialize our network
 

02:00:28.960 --> 02:00:31.350 align:start position:0%
we don't re-initialize our network
because<02:00:29.199><c> we</c><02:00:29.360><c> need</c><02:00:29.520><c> to</c><02:00:29.599><c> re-initialize</c>

02:00:31.350 --> 02:00:31.360 align:start position:0%
because we need to re-initialize
 

02:00:31.360 --> 02:00:35.589 align:start position:0%
because we need to re-initialize
our

02:00:35.589 --> 02:00:35.599 align:start position:0%
 
 

02:00:35.599 --> 02:00:37.270 align:start position:0%
 
okay<02:00:35.840><c> so</c><02:00:35.920><c> unfortunately</c><02:00:36.480><c> we</c><02:00:36.880><c> will</c><02:00:37.040><c> have</c><02:00:37.199><c> to</c>

02:00:37.270 --> 02:00:37.280 align:start position:0%
okay so unfortunately we will have to
 

02:00:37.280 --> 02:00:38.550 align:start position:0%
okay so unfortunately we will have to
probably<02:00:37.520><c> re-initialize</c><02:00:38.080><c> the</c><02:00:38.159><c> network</c>

02:00:38.550 --> 02:00:38.560 align:start position:0%
probably re-initialize the network
 

02:00:38.560 --> 02:00:41.510 align:start position:0%
probably re-initialize the network
because<02:00:39.119><c> we</c><02:00:39.360><c> just</c><02:00:39.920><c> add</c><02:00:40.159><c> functionality</c>

02:00:41.510 --> 02:00:41.520 align:start position:0%
because we just add functionality
 

02:00:41.520 --> 02:00:43.109 align:start position:0%
because we just add functionality
because<02:00:41.840><c> this</c><02:00:42.000><c> class</c><02:00:42.400><c> of</c><02:00:42.480><c> course</c><02:00:42.719><c> we</c><02:00:42.960><c> i</c><02:00:43.040><c> want</c>

02:00:43.109 --> 02:00:43.119 align:start position:0%
because this class of course we i want
 

02:00:43.119 --> 02:00:45.750 align:start position:0%
because this class of course we i want
to<02:00:43.199><c> get</c><02:00:43.840><c> all</c><02:00:44.080><c> the</c><02:00:44.320><c> and</c><02:00:44.400><c> that</c><02:00:44.639><c> parameters</c><02:00:45.599><c> but</c>

02:00:45.750 --> 02:00:45.760 align:start position:0%
to get all the and that parameters but
 

02:00:45.760 --> 02:00:47.270 align:start position:0%
to get all the and that parameters but
that's<02:00:46.000><c> not</c><02:00:46.159><c> going</c><02:00:46.320><c> to</c><02:00:46.400><c> work</c><02:00:46.639><c> because</c><02:00:46.960><c> this</c><02:00:47.199><c> is</c>

02:00:47.270 --> 02:00:47.280 align:start position:0%
that's not going to work because this is
 

02:00:47.280 --> 02:00:49.830 align:start position:0%
that's not going to work because this is
the<02:00:47.599><c> old</c><02:00:47.920><c> class</c>

02:00:49.830 --> 02:00:49.840 align:start position:0%
the old class
 

02:00:49.840 --> 02:00:50.870 align:start position:0%
the old class
okay

02:00:50.870 --> 02:00:50.880 align:start position:0%
okay
 

02:00:50.880 --> 02:00:51.990 align:start position:0%
okay
so<02:00:51.040><c> unfortunately</c><02:00:51.599><c> we</c><02:00:51.679><c> do</c><02:00:51.840><c> have</c><02:00:51.920><c> to</c>

02:00:51.990 --> 02:00:52.000 align:start position:0%
so unfortunately we do have to
 

02:00:52.000 --> 02:00:53.510 align:start position:0%
so unfortunately we do have to
reinitialize<02:00:52.560><c> the</c><02:00:52.639><c> network</c><02:00:53.040><c> which</c><02:00:53.280><c> will</c>

02:00:53.510 --> 02:00:53.520 align:start position:0%
reinitialize the network which will
 

02:00:53.520 --> 02:00:55.669 align:start position:0%
reinitialize the network which will
change<02:00:53.840><c> some</c><02:00:54.000><c> of</c><02:00:54.080><c> the</c><02:00:54.159><c> numbers</c>

02:00:55.669 --> 02:00:55.679 align:start position:0%
change some of the numbers
 

02:00:55.679 --> 02:00:57.189 align:start position:0%
change some of the numbers
but<02:00:55.840><c> let</c><02:00:56.000><c> me</c><02:00:56.159><c> do</c><02:00:56.320><c> that</c><02:00:56.480><c> so</c><02:00:56.639><c> that</c><02:00:56.719><c> we</c><02:00:56.880><c> pick</c><02:00:57.119><c> up</c>

02:00:57.189 --> 02:00:57.199 align:start position:0%
but let me do that so that we pick up
 

02:00:57.199 --> 02:00:58.790 align:start position:0%
but let me do that so that we pick up
the<02:00:57.280><c> new</c><02:00:57.520><c> api</c><02:00:58.000><c> we</c><02:00:58.159><c> can</c><02:00:58.239><c> now</c><02:00:58.400><c> do</c><02:00:58.560><c> in</c><02:00:58.639><c> the</c>

02:00:58.790 --> 02:00:58.800 align:start position:0%
the new api we can now do in the
 

02:00:58.800 --> 02:01:00.149 align:start position:0%
the new api we can now do in the
parameters

02:01:00.149 --> 02:01:00.159 align:start position:0%
parameters
 

02:01:00.159 --> 02:01:02.950 align:start position:0%
parameters
and<02:01:00.320><c> these</c><02:01:00.560><c> are</c><02:01:00.719><c> all</c><02:01:00.880><c> the</c><02:01:01.440><c> weights</c><02:01:01.760><c> and</c><02:01:01.920><c> biases</c>

02:01:02.950 --> 02:01:02.960 align:start position:0%
and these are all the weights and biases
 

02:01:02.960 --> 02:01:05.750 align:start position:0%
and these are all the weights and biases
inside<02:01:03.520><c> the</c><02:01:03.679><c> entire</c><02:01:04.400><c> neural</c><02:01:04.719><c> net</c>

02:01:05.750 --> 02:01:05.760 align:start position:0%
inside the entire neural net
 

02:01:05.760 --> 02:01:11.510 align:start position:0%
inside the entire neural net
so<02:01:06.000><c> in</c><02:01:06.480><c> total</c><02:01:06.960><c> this</c><02:01:07.199><c> mlp</c><02:01:07.679><c> has</c><02:01:07.920><c> 41</c><02:01:08.719><c> parameters</c>

02:01:11.510 --> 02:01:11.520 align:start position:0%
 
 

02:01:11.520 --> 02:01:12.870 align:start position:0%
 
and

02:01:12.870 --> 02:01:12.880 align:start position:0%
and
 

02:01:12.880 --> 02:01:15.589 align:start position:0%
and
now<02:01:13.040><c> we'll</c><02:01:13.199><c> be</c><02:01:13.280><c> able</c><02:01:13.440><c> to</c><02:01:13.520><c> change</c><02:01:13.760><c> them</c>

02:01:15.589 --> 02:01:15.599 align:start position:0%
now we'll be able to change them
 

02:01:15.599 --> 02:01:18.390 align:start position:0%
now we'll be able to change them
if<02:01:15.760><c> we</c><02:01:16.000><c> recalculate</c><02:01:16.880><c> the</c><02:01:17.040><c> loss</c><02:01:17.360><c> here</c><02:01:18.080><c> we</c><02:01:18.239><c> see</c>

02:01:18.390 --> 02:01:18.400 align:start position:0%
if we recalculate the loss here we see
 

02:01:18.400 --> 02:01:19.830 align:start position:0%
if we recalculate the loss here we see
that<02:01:18.560><c> unfortunately</c><02:01:19.199><c> we</c><02:01:19.360><c> have</c><02:01:19.520><c> slightly</c>

02:01:19.830 --> 02:01:19.840 align:start position:0%
that unfortunately we have slightly
 

02:01:19.840 --> 02:01:22.390 align:start position:0%
that unfortunately we have slightly
different

02:01:22.390 --> 02:01:22.400 align:start position:0%
different
 

02:01:22.400 --> 02:01:26.550 align:start position:0%
different
predictions<02:01:22.960><c> and</c><02:01:23.119><c> slightly</c><02:01:23.440><c> different</c><02:01:23.760><c> laws</c>

02:01:26.550 --> 02:01:26.560 align:start position:0%
 
 

02:01:26.560 --> 02:01:28.550 align:start position:0%
 
but<02:01:26.719><c> that's</c><02:01:26.960><c> okay</c>

02:01:28.550 --> 02:01:28.560 align:start position:0%
but that's okay
 

02:01:28.560 --> 02:01:31.030 align:start position:0%
but that's okay
okay<02:01:28.719><c> so</c><02:01:28.880><c> we</c><02:01:29.040><c> see</c><02:01:29.280><c> that</c><02:01:29.760><c> this</c><02:01:30.480><c> neurons</c>

02:01:31.030 --> 02:01:31.040 align:start position:0%
okay so we see that this neurons
 

02:01:31.040 --> 02:01:33.189 align:start position:0%
okay so we see that this neurons
gradient<02:01:31.599><c> is</c><02:01:31.840><c> slightly</c><02:01:32.159><c> negative</c><02:01:32.960><c> we</c><02:01:33.119><c> can</c>

02:01:33.189 --> 02:01:33.199 align:start position:0%
gradient is slightly negative we can
 

02:01:33.199 --> 02:01:36.470 align:start position:0%
gradient is slightly negative we can
also<02:01:33.440><c> look</c><02:01:33.679><c> at</c><02:01:33.840><c> its</c><02:01:34.320><c> data</c><02:01:34.719><c> right</c><02:01:34.880><c> now</c>

02:01:36.470 --> 02:01:36.480 align:start position:0%
also look at its data right now
 

02:01:36.480 --> 02:01:38.470 align:start position:0%
also look at its data right now
which<02:01:36.800><c> is</c><02:01:37.119><c> 0.85</c><02:01:37.840><c> so</c><02:01:38.000><c> this</c><02:01:38.080><c> is</c><02:01:38.159><c> the</c><02:01:38.239><c> current</c>

02:01:38.470 --> 02:01:38.480 align:start position:0%
which is 0.85 so this is the current
 

02:01:38.480 --> 02:01:40.629 align:start position:0%
which is 0.85 so this is the current
value<02:01:38.800><c> of</c><02:01:38.880><c> this</c><02:01:38.960><c> neuron</c><02:01:39.520><c> and</c><02:01:39.599><c> this</c><02:01:39.920><c> is</c><02:01:40.080><c> its</c>

02:01:40.629 --> 02:01:40.639 align:start position:0%
value of this neuron and this is its
 

02:01:40.639 --> 02:01:43.109 align:start position:0%
value of this neuron and this is its
gradient<02:01:41.360><c> on</c><02:01:41.520><c> the</c><02:01:41.679><c> loss</c>

02:01:43.109 --> 02:01:43.119 align:start position:0%
gradient on the loss
 

02:01:43.119 --> 02:01:45.030 align:start position:0%
gradient on the loss
so<02:01:43.520><c> what</c><02:01:43.679><c> we</c><02:01:43.840><c> want</c><02:01:43.920><c> to</c><02:01:44.000><c> do</c><02:01:44.159><c> now</c><02:01:44.480><c> is</c><02:01:44.719><c> we</c><02:01:44.800><c> want</c><02:01:44.960><c> to</c>

02:01:45.030 --> 02:01:45.040 align:start position:0%
so what we want to do now is we want to
 

02:01:45.040 --> 02:01:47.750 align:start position:0%
so what we want to do now is we want to
iterate<02:01:45.440><c> for</c><02:01:45.840><c> every</c><02:01:46.400><c> p</c><02:01:46.880><c> in</c>

02:01:47.750 --> 02:01:47.760 align:start position:0%
iterate for every p in
 

02:01:47.760 --> 02:01:49.910 align:start position:0%
iterate for every p in
n<02:01:47.920><c> dot</c><02:01:48.159><c> parameters</c><02:01:48.960><c> so</c><02:01:49.119><c> for</c><02:01:49.280><c> all</c><02:01:49.440><c> the</c><02:01:49.520><c> 41</c>

02:01:49.910 --> 02:01:49.920 align:start position:0%
n dot parameters so for all the 41
 

02:01:49.920 --> 02:01:51.830 align:start position:0%
n dot parameters so for all the 41
parameters<02:01:50.320><c> in</c><02:01:50.400><c> this</c><02:01:50.560><c> neural</c><02:01:50.800><c> net</c>

02:01:51.830 --> 02:01:51.840 align:start position:0%
parameters in this neural net
 

02:01:51.840 --> 02:01:55.030 align:start position:0%
parameters in this neural net
we<02:01:52.000><c> actually</c><02:01:52.239><c> want</c><02:01:52.400><c> to</c><02:01:52.560><c> change</c><02:01:53.360><c> p</c><02:01:53.760><c> data</c>

02:01:55.030 --> 02:01:55.040 align:start position:0%
we actually want to change p data
 

02:01:55.040 --> 02:01:56.149 align:start position:0%
we actually want to change p data
slightly

02:01:56.149 --> 02:01:56.159 align:start position:0%
slightly
 

02:01:56.159 --> 02:01:59.109 align:start position:0%
slightly
according<02:01:56.560><c> to</c><02:01:56.719><c> the</c><02:01:56.880><c> gradient</c><02:01:57.280><c> information</c>

02:01:59.109 --> 02:01:59.119 align:start position:0%
according to the gradient information
 

02:01:59.119 --> 02:02:00.310 align:start position:0%
according to the gradient information
okay<02:01:59.360><c> so</c>

02:02:00.310 --> 02:02:00.320 align:start position:0%
okay so
 

02:02:00.320 --> 02:02:02.390 align:start position:0%
okay so
dot<02:02:00.639><c> dot</c><02:02:00.880><c> to</c><02:02:00.960><c> do</c><02:02:01.119><c> here</c>

02:02:02.390 --> 02:02:02.400 align:start position:0%
dot dot to do here
 

02:02:02.400 --> 02:02:05.189 align:start position:0%
dot dot to do here
but<02:02:02.560><c> this</c><02:02:02.719><c> will</c><02:02:02.880><c> be</c><02:02:02.960><c> basically</c><02:02:03.280><c> a</c><02:02:03.440><c> tiny</c><02:02:03.920><c> update</c>

02:02:05.189 --> 02:02:05.199 align:start position:0%
but this will be basically a tiny update
 

02:02:05.199 --> 02:02:08.310 align:start position:0%
but this will be basically a tiny update
in<02:02:05.520><c> this</c><02:02:06.080><c> gradient</c><02:02:06.560><c> descent</c><02:02:07.199><c> scheme</c><02:02:08.080><c> in</c>

02:02:08.310 --> 02:02:08.320 align:start position:0%
in this gradient descent scheme in
 

02:02:08.320 --> 02:02:10.550 align:start position:0%
in this gradient descent scheme in
gradient<02:02:08.639><c> descent</c><02:02:09.520><c> we</c><02:02:09.760><c> are</c><02:02:09.840><c> thinking</c><02:02:10.239><c> of</c><02:02:10.320><c> the</c>

02:02:10.550 --> 02:02:10.560 align:start position:0%
gradient descent we are thinking of the
 

02:02:10.560 --> 02:02:13.189 align:start position:0%
gradient descent we are thinking of the
gradient<02:02:11.360><c> as</c><02:02:11.679><c> a</c><02:02:11.840><c> vector</c><02:02:12.480><c> pointing</c><02:02:13.040><c> in</c><02:02:13.119><c> the</c>

02:02:13.189 --> 02:02:13.199 align:start position:0%
gradient as a vector pointing in the
 

02:02:13.199 --> 02:02:14.310 align:start position:0%
gradient as a vector pointing in the
direction

02:02:14.310 --> 02:02:14.320 align:start position:0%
direction
 

02:02:14.320 --> 02:02:15.350 align:start position:0%
direction
of

02:02:15.350 --> 02:02:15.360 align:start position:0%
of
 

02:02:15.360 --> 02:02:16.790 align:start position:0%
of
increased

02:02:16.790 --> 02:02:16.800 align:start position:0%
increased
 

02:02:16.800 --> 02:02:19.109 align:start position:0%
increased
loss

02:02:19.109 --> 02:02:19.119 align:start position:0%
loss
 

02:02:19.119 --> 02:02:20.070 align:start position:0%
loss
and<02:02:19.360><c> so</c>

02:02:20.070 --> 02:02:20.080 align:start position:0%
and so
 

02:02:20.080 --> 02:02:22.709 align:start position:0%
and so
in<02:02:20.159><c> gradient</c><02:02:20.560><c> descent</c><02:02:20.960><c> we</c><02:02:21.199><c> are</c><02:02:21.360><c> modifying</c>

02:02:22.709 --> 02:02:22.719 align:start position:0%
in gradient descent we are modifying
 

02:02:22.719 --> 02:02:24.310 align:start position:0%
in gradient descent we are modifying
p<02:02:23.119><c> data</c>

02:02:24.310 --> 02:02:24.320 align:start position:0%
p data
 

02:02:24.320 --> 02:02:26.550 align:start position:0%
p data
by<02:02:24.639><c> a</c><02:02:24.719><c> small</c><02:02:25.040><c> step</c><02:02:25.360><c> size</c><02:02:25.840><c> in</c><02:02:25.920><c> the</c><02:02:26.080><c> direction</c><02:02:26.480><c> of</c>

02:02:26.550 --> 02:02:26.560 align:start position:0%
by a small step size in the direction of
 

02:02:26.560 --> 02:02:28.390 align:start position:0%
by a small step size in the direction of
the<02:02:26.639><c> gradient</c><02:02:27.360><c> so</c><02:02:27.520><c> the</c><02:02:27.679><c> step</c><02:02:27.920><c> size</c><02:02:28.159><c> as</c><02:02:28.320><c> an</c>

02:02:28.390 --> 02:02:28.400 align:start position:0%
the gradient so the step size as an
 

02:02:28.400 --> 02:02:29.750 align:start position:0%
the gradient so the step size as an
example<02:02:28.800><c> could</c><02:02:28.960><c> be</c><02:02:29.040><c> like</c><02:02:29.280><c> a</c><02:02:29.360><c> very</c><02:02:29.599><c> small</c>

02:02:29.750 --> 02:02:29.760 align:start position:0%
example could be like a very small
 

02:02:29.760 --> 02:02:32.790 align:start position:0%
example could be like a very small
number<02:02:30.000><c> like</c><02:02:30.159><c> 0.01</c><02:02:30.880><c> is</c><02:02:30.960><c> the</c><02:02:31.040><c> step</c><02:02:31.280><c> size</c><02:02:32.159><c> times</c>

02:02:32.790 --> 02:02:32.800 align:start position:0%
number like 0.01 is the step size times
 

02:02:32.800 --> 02:02:35.030 align:start position:0%
number like 0.01 is the step size times
p<02:02:32.960><c> dot</c><02:02:33.199><c> grad</c>

02:02:35.030 --> 02:02:35.040 align:start position:0%
p dot grad
 

02:02:35.040 --> 02:02:36.390 align:start position:0%
p dot grad
right

02:02:36.390 --> 02:02:36.400 align:start position:0%
right
 

02:02:36.400 --> 02:02:37.750 align:start position:0%
right
but<02:02:36.560><c> we</c><02:02:36.719><c> have</c><02:02:36.800><c> to</c><02:02:36.880><c> think</c><02:02:37.119><c> through</c><02:02:37.440><c> some</c><02:02:37.599><c> of</c><02:02:37.599><c> the</c>

02:02:37.750 --> 02:02:37.760 align:start position:0%
but we have to think through some of the
 

02:02:37.760 --> 02:02:38.870 align:start position:0%
but we have to think through some of the
signs<02:02:38.080><c> here</c>

02:02:38.870 --> 02:02:38.880 align:start position:0%
signs here
 

02:02:38.880 --> 02:02:40.310 align:start position:0%
signs here
so<02:02:39.520><c> uh</c>

02:02:40.310 --> 02:02:40.320 align:start position:0%
so uh
 

02:02:40.320 --> 02:02:43.030 align:start position:0%
so uh
in<02:02:40.480><c> particular</c><02:02:41.440><c> working</c><02:02:42.000><c> with</c><02:02:42.400><c> this</c><02:02:42.639><c> specific</c>

02:02:43.030 --> 02:02:43.040 align:start position:0%
in particular working with this specific
 

02:02:43.040 --> 02:02:44.550 align:start position:0%
in particular working with this specific
example<02:02:43.440><c> here</c>

02:02:44.550 --> 02:02:44.560 align:start position:0%
example here
 

02:02:44.560 --> 02:02:47.030 align:start position:0%
example here
we<02:02:44.800><c> see</c><02:02:44.960><c> that</c><02:02:45.119><c> if</c><02:02:45.199><c> we</c><02:02:45.360><c> just</c><02:02:45.520><c> left</c><02:02:45.679><c> it</c><02:02:45.920><c> like</c><02:02:46.080><c> this</c>

02:02:47.030 --> 02:02:47.040 align:start position:0%
we see that if we just left it like this
 

02:02:47.040 --> 02:02:49.270 align:start position:0%
we see that if we just left it like this
then<02:02:47.199><c> this</c><02:02:47.760><c> neuron's</c><02:02:48.159><c> value</c>

02:02:49.270 --> 02:02:49.280 align:start position:0%
then this neuron's value
 

02:02:49.280 --> 02:02:51.109 align:start position:0%
then this neuron's value
would<02:02:49.440><c> be</c><02:02:49.599><c> currently</c><02:02:50.159><c> increased</c><02:02:50.560><c> by</c><02:02:50.719><c> a</c><02:02:50.800><c> tiny</c>

02:02:51.109 --> 02:02:51.119 align:start position:0%
would be currently increased by a tiny
 

02:02:51.119 --> 02:02:53.430 align:start position:0%
would be currently increased by a tiny
amount<02:02:51.520><c> of</c><02:02:51.920><c> the</c><02:02:52.080><c> gradient</c>

02:02:53.430 --> 02:02:53.440 align:start position:0%
amount of the gradient
 

02:02:53.440 --> 02:02:56.310 align:start position:0%
amount of the gradient
the<02:02:53.599><c> grain</c><02:02:54.000><c> is</c><02:02:54.159><c> negative</c><02:02:55.040><c> so</c><02:02:55.280><c> this</c><02:02:56.000><c> value</c><02:02:56.239><c> of</c>

02:02:56.310 --> 02:02:56.320 align:start position:0%
the grain is negative so this value of
 

02:02:56.320 --> 02:02:58.070 align:start position:0%
the grain is negative so this value of
this<02:02:56.480><c> neuron</c><02:02:56.800><c> would</c><02:02:56.960><c> go</c><02:02:57.119><c> slightly</c><02:02:57.599><c> down</c><02:02:58.000><c> it</c>

02:02:58.070 --> 02:02:58.080 align:start position:0%
this neuron would go slightly down it
 

02:02:58.080 --> 02:03:00.550 align:start position:0%
this neuron would go slightly down it
would<02:02:58.239><c> become</c><02:02:58.480><c> like</c><02:02:58.719><c> 0.8</c><02:02:59.760><c> you</c><02:02:59.840><c> know</c><02:03:00.080><c> four</c><02:03:00.400><c> or</c>

02:03:00.550 --> 02:03:00.560 align:start position:0%
would become like 0.8 you know four or
 

02:03:00.560 --> 02:03:02.870 align:start position:0%
would become like 0.8 you know four or
something<02:03:00.800><c> like</c><02:03:00.960><c> that</c>

02:03:02.870 --> 02:03:02.880 align:start position:0%
something like that
 

02:03:02.880 --> 02:03:06.470 align:start position:0%
something like that
but<02:03:03.119><c> if</c><02:03:03.360><c> this</c><02:03:03.520><c> neuron's</c><02:03:03.920><c> value</c><02:03:04.239><c> goes</c><02:03:04.719><c> lower</c>

02:03:06.470 --> 02:03:06.480 align:start position:0%
but if this neuron's value goes lower
 

02:03:06.480 --> 02:03:08.870 align:start position:0%
but if this neuron's value goes lower
that<02:03:06.639><c> would</c><02:03:06.880><c> actually</c>

02:03:08.870 --> 02:03:08.880 align:start position:0%
that would actually
 

02:03:08.880 --> 02:03:10.629 align:start position:0%
that would actually
increase<02:03:09.280><c> the</c><02:03:09.360><c> loss</c>

02:03:10.629 --> 02:03:10.639 align:start position:0%
increase the loss
 

02:03:10.639 --> 02:03:12.470 align:start position:0%
increase the loss
that's<02:03:10.880><c> because</c>

02:03:12.470 --> 02:03:12.480 align:start position:0%
that's because
 

02:03:12.480 --> 02:03:14.229 align:start position:0%
that's because
the<02:03:12.639><c> derivative</c><02:03:13.199><c> of</c><02:03:13.280><c> this</c><02:03:13.440><c> neuron</c><02:03:14.000><c> is</c>

02:03:14.229 --> 02:03:14.239 align:start position:0%
the derivative of this neuron is
 

02:03:14.239 --> 02:03:16.550 align:start position:0%
the derivative of this neuron is
negative<02:03:15.040><c> so</c><02:03:15.440><c> increasing</c>

02:03:16.550 --> 02:03:16.560 align:start position:0%
negative so increasing
 

02:03:16.560 --> 02:03:19.189 align:start position:0%
negative so increasing
this<02:03:17.199><c> makes</c><02:03:17.440><c> the</c><02:03:17.520><c> loss</c><02:03:17.920><c> go</c><02:03:18.239><c> down</c><02:03:18.880><c> so</c>

02:03:19.189 --> 02:03:19.199 align:start position:0%
this makes the loss go down so
 

02:03:19.199 --> 02:03:21.430 align:start position:0%
this makes the loss go down so
increasing<02:03:19.679><c> it</c><02:03:19.840><c> is</c><02:03:19.920><c> what</c><02:03:20.080><c> we</c><02:03:20.239><c> want</c><02:03:20.400><c> to</c><02:03:20.560><c> do</c>

02:03:21.430 --> 02:03:21.440 align:start position:0%
increasing it is what we want to do
 

02:03:21.440 --> 02:03:23.270 align:start position:0%
increasing it is what we want to do
instead<02:03:21.679><c> of</c><02:03:21.760><c> decreasing</c><02:03:22.320><c> it</c><02:03:22.880><c> so</c><02:03:23.040><c> basically</c>

02:03:23.270 --> 02:03:23.280 align:start position:0%
instead of decreasing it so basically
 

02:03:23.280 --> 02:03:24.229 align:start position:0%
instead of decreasing it so basically
what<02:03:23.440><c> we're</c><02:03:23.599><c> missing</c><02:03:23.840><c> here</c><02:03:24.000><c> is</c><02:03:24.080><c> we're</c>

02:03:24.229 --> 02:03:24.239 align:start position:0%
what we're missing here is we're
 

02:03:24.239 --> 02:03:26.470 align:start position:0%
what we're missing here is we're
actually<02:03:24.480><c> missing</c><02:03:24.719><c> a</c><02:03:24.800><c> negative</c><02:03:25.199><c> sign</c>

02:03:26.470 --> 02:03:26.480 align:start position:0%
actually missing a negative sign
 

02:03:26.480 --> 02:03:29.030 align:start position:0%
actually missing a negative sign
and<02:03:26.880><c> again</c><02:03:27.119><c> this</c><02:03:27.440><c> other</c><02:03:27.679><c> interpretation</c>

02:03:29.030 --> 02:03:29.040 align:start position:0%
and again this other interpretation
 

02:03:29.040 --> 02:03:30.310 align:start position:0%
and again this other interpretation
and<02:03:29.119><c> that's</c><02:03:29.280><c> because</c><02:03:29.520><c> we</c><02:03:29.599><c> want</c><02:03:29.760><c> to</c><02:03:29.920><c> minimize</c>

02:03:30.310 --> 02:03:30.320 align:start position:0%
and that's because we want to minimize
 

02:03:30.320 --> 02:03:31.830 align:start position:0%
and that's because we want to minimize
the<02:03:30.400><c> loss</c><02:03:30.639><c> we</c><02:03:30.719><c> don't</c><02:03:30.880><c> want</c><02:03:30.960><c> to</c><02:03:31.280><c> maximize</c><02:03:31.760><c> the</c>

02:03:31.830 --> 02:03:31.840 align:start position:0%
the loss we don't want to maximize the
 

02:03:31.840 --> 02:03:33.750 align:start position:0%
the loss we don't want to maximize the
loss<02:03:32.159><c> we</c><02:03:32.239><c> want</c><02:03:32.400><c> to</c><02:03:32.560><c> decrease</c><02:03:33.119><c> it</c>

02:03:33.750 --> 02:03:33.760 align:start position:0%
loss we want to decrease it
 

02:03:33.760 --> 02:03:34.950 align:start position:0%
loss we want to decrease it
and<02:03:33.920><c> the</c><02:03:34.080><c> other</c><02:03:34.239><c> interpretation</c><02:03:34.719><c> as</c><02:03:34.880><c> i</c>

02:03:34.950 --> 02:03:34.960 align:start position:0%
and the other interpretation as i
 

02:03:34.960 --> 02:03:36.310 align:start position:0%
and the other interpretation as i
mentioned<02:03:35.599><c> is</c><02:03:35.760><c> you</c><02:03:35.840><c> can</c><02:03:35.920><c> think</c><02:03:36.080><c> of</c><02:03:36.159><c> the</c>

02:03:36.310 --> 02:03:36.320 align:start position:0%
mentioned is you can think of the
 

02:03:36.320 --> 02:03:37.750 align:start position:0%
mentioned is you can think of the
gradient<02:03:36.719><c> vector</c>

02:03:37.750 --> 02:03:37.760 align:start position:0%
gradient vector
 

02:03:37.760 --> 02:03:39.189 align:start position:0%
gradient vector
so<02:03:38.000><c> basically</c><02:03:38.320><c> just</c><02:03:38.560><c> the</c><02:03:38.639><c> vector</c><02:03:38.880><c> of</c><02:03:39.040><c> all</c><02:03:39.119><c> the</c>

02:03:39.189 --> 02:03:39.199 align:start position:0%
so basically just the vector of all the
 

02:03:39.199 --> 02:03:40.390 align:start position:0%
so basically just the vector of all the
gradients

02:03:40.390 --> 02:03:40.400 align:start position:0%
gradients
 

02:03:40.400 --> 02:03:42.709 align:start position:0%
gradients
as<02:03:40.880><c> pointing</c><02:03:41.199><c> in</c><02:03:41.280><c> the</c><02:03:41.440><c> direction</c><02:03:42.239><c> of</c>

02:03:42.709 --> 02:03:42.719 align:start position:0%
as pointing in the direction of
 

02:03:42.719 --> 02:03:44.229 align:start position:0%
as pointing in the direction of
increasing

02:03:44.229 --> 02:03:44.239 align:start position:0%
increasing
 

02:03:44.239 --> 02:03:46.390 align:start position:0%
increasing
the<02:03:44.400><c> loss</c><02:03:45.199><c> but</c><02:03:45.360><c> then</c><02:03:45.440><c> we</c><02:03:45.599><c> want</c><02:03:45.760><c> to</c><02:03:45.840><c> decrease</c><02:03:46.239><c> it</c>

02:03:46.390 --> 02:03:46.400 align:start position:0%
the loss but then we want to decrease it
 

02:03:46.400 --> 02:03:47.430 align:start position:0%
the loss but then we want to decrease it
so<02:03:46.480><c> we</c><02:03:46.639><c> actually</c><02:03:46.800><c> want</c><02:03:46.960><c> to</c><02:03:47.040><c> go</c><02:03:47.199><c> in</c><02:03:47.280><c> the</c>

02:03:47.430 --> 02:03:47.440 align:start position:0%
so we actually want to go in the
 

02:03:47.440 --> 02:03:49.109 align:start position:0%
so we actually want to go in the
opposite<02:03:47.840><c> direction</c>

02:03:49.109 --> 02:03:49.119 align:start position:0%
opposite direction
 

02:03:49.119 --> 02:03:50.310 align:start position:0%
opposite direction
and<02:03:49.199><c> so</c><02:03:49.360><c> you</c><02:03:49.440><c> can</c><02:03:49.520><c> convince</c><02:03:49.920><c> yourself</c><02:03:50.159><c> that</c>

02:03:50.310 --> 02:03:50.320 align:start position:0%
and so you can convince yourself that
 

02:03:50.320 --> 02:03:51.910 align:start position:0%
and so you can convince yourself that
this<02:03:50.480><c> sort</c><02:03:50.639><c> of</c><02:03:50.719><c> plug</c><02:03:51.040><c> does</c><02:03:51.360><c> the</c><02:03:51.520><c> right</c><02:03:51.679><c> thing</c>

02:03:51.910 --> 02:03:51.920 align:start position:0%
this sort of plug does the right thing
 

02:03:51.920 --> 02:03:53.189 align:start position:0%
this sort of plug does the right thing
here<02:03:52.079><c> with</c><02:03:52.239><c> the</c><02:03:52.320><c> negative</c><02:03:52.719><c> because</c><02:03:52.880><c> we</c><02:03:53.040><c> want</c>

02:03:53.189 --> 02:03:53.199 align:start position:0%
here with the negative because we want
 

02:03:53.199 --> 02:03:55.350 align:start position:0%
here with the negative because we want
to<02:03:53.360><c> minimize</c><02:03:53.760><c> the</c><02:03:53.840><c> loss</c>

02:03:55.350 --> 02:03:55.360 align:start position:0%
to minimize the loss
 

02:03:55.360 --> 02:03:57.109 align:start position:0%
to minimize the loss
so<02:03:55.599><c> if</c><02:03:55.679><c> we</c><02:03:55.920><c> nudge</c><02:03:56.239><c> all</c><02:03:56.320><c> the</c><02:03:56.480><c> parameters</c><02:03:56.960><c> by</c>

02:03:57.109 --> 02:03:57.119 align:start position:0%
so if we nudge all the parameters by
 

02:03:57.119 --> 02:04:00.629 align:start position:0%
so if we nudge all the parameters by
tiny<02:03:57.440><c> amount</c>

02:04:00.629 --> 02:04:00.639 align:start position:0%
 
 

02:04:00.639 --> 02:04:02.069 align:start position:0%
 
then<02:04:00.880><c> we'll</c><02:04:01.040><c> see</c><02:04:01.280><c> that</c>

02:04:02.069 --> 02:04:02.079 align:start position:0%
then we'll see that
 

02:04:02.079 --> 02:04:04.069 align:start position:0%
then we'll see that
this<02:04:02.400><c> data</c><02:04:02.719><c> will</c><02:04:02.880><c> have</c><02:04:03.040><c> changed</c><02:04:03.360><c> a</c><02:04:03.440><c> little</c><02:04:03.599><c> bit</c>

02:04:04.069 --> 02:04:04.079 align:start position:0%
this data will have changed a little bit
 

02:04:04.079 --> 02:04:06.069 align:start position:0%
this data will have changed a little bit
so<02:04:04.320><c> now</c><02:04:04.639><c> this</c><02:04:04.880><c> neuron</c>

02:04:06.069 --> 02:04:06.079 align:start position:0%
so now this neuron
 

02:04:06.079 --> 02:04:08.870 align:start position:0%
so now this neuron
is<02:04:06.480><c> a</c><02:04:06.639><c> tiny</c><02:04:06.960><c> amount</c><02:04:07.760><c> greater</c>

02:04:08.870 --> 02:04:08.880 align:start position:0%
is a tiny amount greater
 

02:04:08.880 --> 02:04:13.830 align:start position:0%
is a tiny amount greater
value<02:04:09.599><c> so</c><02:04:09.840><c> 0.854</c><02:04:11.119><c> went</c><02:04:11.360><c> to</c><02:04:11.520><c> 0.857</c>

02:04:13.830 --> 02:04:13.840 align:start position:0%
value so 0.854 went to 0.857
 

02:04:13.840 --> 02:04:16.069 align:start position:0%
value so 0.854 went to 0.857
and<02:04:14.239><c> that's</c><02:04:14.639><c> a</c><02:04:14.719><c> good</c><02:04:14.880><c> thing</c><02:04:15.119><c> because</c><02:04:15.599><c> slightly</c>

02:04:16.069 --> 02:04:16.079 align:start position:0%
and that's a good thing because slightly
 

02:04:16.079 --> 02:04:18.069 align:start position:0%
and that's a good thing because slightly
increasing<02:04:16.480><c> this</c><02:04:16.639><c> neuron</c>

02:04:18.069 --> 02:04:18.079 align:start position:0%
increasing this neuron
 

02:04:18.079 --> 02:04:18.870 align:start position:0%
increasing this neuron
uh

02:04:18.870 --> 02:04:18.880 align:start position:0%
uh
 

02:04:18.880 --> 02:04:21.910 align:start position:0%
uh
data<02:04:19.280><c> makes</c><02:04:19.920><c> the</c><02:04:20.320><c> loss</c><02:04:20.639><c> go</c><02:04:20.880><c> down</c><02:04:21.440><c> according</c><02:04:21.840><c> to</c>

02:04:21.910 --> 02:04:21.920 align:start position:0%
data makes the loss go down according to
 

02:04:21.920 --> 02:04:23.669 align:start position:0%
data makes the loss go down according to
the<02:04:22.000><c> gradient</c><02:04:22.800><c> and</c><02:04:22.960><c> so</c><02:04:23.119><c> the</c><02:04:23.199><c> correct</c><02:04:23.520><c> thing</c>

02:04:23.669 --> 02:04:23.679 align:start position:0%
the gradient and so the correct thing
 

02:04:23.679 --> 02:04:26.149 align:start position:0%
the gradient and so the correct thing
has<02:04:23.840><c> happened</c><02:04:24.400><c> sign</c><02:04:24.719><c> wise</c>

02:04:26.149 --> 02:04:26.159 align:start position:0%
has happened sign wise
 

02:04:26.159 --> 02:04:27.910 align:start position:0%
has happened sign wise
and<02:04:26.320><c> so</c><02:04:26.560><c> now</c><02:04:27.040><c> what</c><02:04:27.199><c> we</c><02:04:27.360><c> would</c><02:04:27.520><c> expect</c><02:04:27.840><c> of</c>

02:04:27.910 --> 02:04:27.920 align:start position:0%
and so now what we would expect of
 

02:04:27.920 --> 02:04:29.109 align:start position:0%
and so now what we would expect of
course<02:04:28.239><c> is</c><02:04:28.400><c> that</c>

02:04:29.109 --> 02:04:29.119 align:start position:0%
course is that
 

02:04:29.119 --> 02:04:30.229 align:start position:0%
course is that
because<02:04:29.360><c> we've</c><02:04:29.599><c> changed</c><02:04:29.920><c> all</c><02:04:30.079><c> these</c>

02:04:30.229 --> 02:04:30.239 align:start position:0%
because we've changed all these
 

02:04:30.239 --> 02:04:32.629 align:start position:0%
because we've changed all these
parameters<02:04:31.280><c> we</c><02:04:31.520><c> expect</c><02:04:31.920><c> that</c><02:04:32.000><c> the</c><02:04:32.239><c> loss</c>

02:04:32.629 --> 02:04:32.639 align:start position:0%
parameters we expect that the loss
 

02:04:32.639 --> 02:04:35.109 align:start position:0%
parameters we expect that the loss
should<02:04:32.800><c> have</c><02:04:32.960><c> gone</c><02:04:33.280><c> down</c><02:04:33.599><c> a</c><02:04:33.679><c> bit</c>

02:04:35.109 --> 02:04:35.119 align:start position:0%
should have gone down a bit
 

02:04:35.119 --> 02:04:37.030 align:start position:0%
should have gone down a bit
so<02:04:35.360><c> we</c><02:04:35.440><c> want</c><02:04:35.599><c> to</c><02:04:35.679><c> re-evaluate</c><02:04:36.239><c> the</c><02:04:36.320><c> loss</c><02:04:36.880><c> let</c>

02:04:37.030 --> 02:04:37.040 align:start position:0%
so we want to re-evaluate the loss let
 

02:04:37.040 --> 02:04:39.910 align:start position:0%
so we want to re-evaluate the loss let
me<02:04:37.280><c> basically</c>

02:04:39.910 --> 02:04:39.920 align:start position:0%
 
 

02:04:39.920 --> 02:04:41.510 align:start position:0%
 
this<02:04:40.079><c> is</c><02:04:40.159><c> just</c><02:04:40.400><c> a</c><02:04:40.480><c> data</c><02:04:40.719><c> definition</c><02:04:41.360><c> that</c>

02:04:41.510 --> 02:04:41.520 align:start position:0%
this is just a data definition that
 

02:04:41.520 --> 02:04:44.870 align:start position:0%
this is just a data definition that
hasn't<02:04:41.840><c> changed</c><02:04:42.560><c> but</c><02:04:42.800><c> the</c><02:04:42.880><c> forward</c><02:04:43.280><c> pass</c><02:04:43.520><c> here</c>

02:04:44.870 --> 02:04:44.880 align:start position:0%
hasn't changed but the forward pass here
 

02:04:44.880 --> 02:04:49.669 align:start position:0%
hasn't changed but the forward pass here
of<02:04:44.960><c> the</c><02:04:45.119><c> network</c><02:04:45.599><c> we</c><02:04:45.760><c> can</c><02:04:45.920><c> recalculate</c>

02:04:49.669 --> 02:04:49.679 align:start position:0%
 
 

02:04:49.679 --> 02:04:51.510 align:start position:0%
 
and<02:04:49.840><c> actually</c><02:04:50.079><c> let</c><02:04:50.239><c> me</c><02:04:50.320><c> do</c><02:04:50.480><c> it</c><02:04:50.719><c> outside</c><02:04:51.199><c> here</c>

02:04:51.510 --> 02:04:51.520 align:start position:0%
and actually let me do it outside here
 

02:04:51.520 --> 02:04:52.870 align:start position:0%
and actually let me do it outside here
so<02:04:51.679><c> that</c><02:04:51.840><c> we</c><02:04:51.920><c> can</c><02:04:52.079><c> compare</c><02:04:52.400><c> the</c><02:04:52.480><c> two</c><02:04:52.639><c> loss</c>

02:04:52.870 --> 02:04:52.880 align:start position:0%
so that we can compare the two loss
 

02:04:52.880 --> 02:04:54.390 align:start position:0%
so that we can compare the two loss
values

02:04:54.390 --> 02:04:54.400 align:start position:0%
values
 

02:04:54.400 --> 02:04:57.910 align:start position:0%
values
so<02:04:54.639><c> here</c><02:04:54.960><c> if</c><02:04:55.119><c> i</c><02:04:55.280><c> recalculate</c><02:04:56.320><c> the</c><02:04:56.480><c> loss</c>

02:04:57.910 --> 02:04:57.920 align:start position:0%
so here if i recalculate the loss
 

02:04:57.920 --> 02:04:59.510 align:start position:0%
so here if i recalculate the loss
we'd<02:04:58.159><c> expect</c><02:04:58.480><c> the</c><02:04:58.560><c> new</c><02:04:58.800><c> loss</c><02:04:59.119><c> now</c><02:04:59.280><c> to</c><02:04:59.360><c> be</c>

02:04:59.510 --> 02:04:59.520 align:start position:0%
we'd expect the new loss now to be
 

02:04:59.520 --> 02:05:01.430 align:start position:0%
we'd expect the new loss now to be
slightly<02:05:00.000><c> lower</c><02:05:00.400><c> than</c><02:05:00.639><c> this</c><02:05:00.800><c> number</c><02:05:01.280><c> so</c>

02:05:01.430 --> 02:05:01.440 align:start position:0%
slightly lower than this number so
 

02:05:01.440 --> 02:05:03.430 align:start position:0%
slightly lower than this number so
hopefully<02:05:02.000><c> what</c><02:05:02.159><c> we're</c><02:05:02.320><c> getting</c><02:05:02.560><c> now</c><02:05:02.800><c> is</c><02:05:03.280><c> a</c>

02:05:03.430 --> 02:05:03.440 align:start position:0%
hopefully what we're getting now is a
 

02:05:03.440 --> 02:05:06.550 align:start position:0%
hopefully what we're getting now is a
tiny<02:05:03.679><c> bit</c><02:05:03.840><c> lower</c><02:05:04.079><c> than</c><02:05:04.239><c> 4.84</c>

02:05:06.550 --> 02:05:06.560 align:start position:0%
tiny bit lower than 4.84
 

02:05:06.560 --> 02:05:08.149 align:start position:0%
tiny bit lower than 4.84
4.36

02:05:08.149 --> 02:05:08.159 align:start position:0%
4.36
 

02:05:08.159 --> 02:05:10.310 align:start position:0%
4.36
okay<02:05:08.719><c> and</c><02:05:08.880><c> remember</c><02:05:09.280><c> the</c><02:05:09.440><c> way</c><02:05:09.679><c> we've</c><02:05:09.920><c> arranged</c>

02:05:10.310 --> 02:05:10.320 align:start position:0%
okay and remember the way we've arranged
 

02:05:10.320 --> 02:05:12.950 align:start position:0%
okay and remember the way we've arranged
this<02:05:10.639><c> is</c><02:05:10.800><c> that</c><02:05:11.199><c> low</c><02:05:11.520><c> loss</c><02:05:12.239><c> means</c><02:05:12.480><c> that</c><02:05:12.719><c> our</c>

02:05:12.950 --> 02:05:12.960 align:start position:0%
this is that low loss means that our
 

02:05:12.960 --> 02:05:15.109 align:start position:0%
this is that low loss means that our
predictions<02:05:13.520><c> are</c><02:05:13.599><c> matching</c><02:05:14.000><c> the</c><02:05:14.079><c> targets</c><02:05:14.880><c> so</c>

02:05:15.109 --> 02:05:15.119 align:start position:0%
predictions are matching the targets so
 

02:05:15.119 --> 02:05:16.950 align:start position:0%
predictions are matching the targets so
our<02:05:15.280><c> predictions</c><02:05:15.760><c> now</c><02:05:16.159><c> are</c><02:05:16.320><c> probably</c>

02:05:16.950 --> 02:05:16.960 align:start position:0%
our predictions now are probably
 

02:05:16.960 --> 02:05:18.830 align:start position:0%
our predictions now are probably
slightly<02:05:17.440><c> closer</c><02:05:18.079><c> to</c><02:05:18.239><c> the</c>

02:05:18.830 --> 02:05:18.840 align:start position:0%
slightly closer to the
 

02:05:18.840 --> 02:05:22.229 align:start position:0%
slightly closer to the
targets<02:05:20.239><c> and</c><02:05:20.880><c> now</c><02:05:21.119><c> all</c><02:05:21.360><c> we</c><02:05:21.599><c> have</c><02:05:21.760><c> to</c><02:05:21.840><c> do</c><02:05:22.000><c> is</c><02:05:22.159><c> we</c>

02:05:22.229 --> 02:05:22.239 align:start position:0%
targets and now all we have to do is we
 

02:05:22.239 --> 02:05:24.069 align:start position:0%
targets and now all we have to do is we
have<02:05:22.400><c> to</c><02:05:22.560><c> iterate</c><02:05:22.880><c> this</c><02:05:23.040><c> process</c>

02:05:24.069 --> 02:05:24.079 align:start position:0%
have to iterate this process
 

02:05:24.079 --> 02:05:26.390 align:start position:0%
have to iterate this process
so<02:05:24.320><c> again</c><02:05:24.719><c> um</c><02:05:25.119><c> we've</c><02:05:25.360><c> done</c><02:05:25.520><c> the</c><02:05:25.599><c> forward</c><02:05:25.920><c> pass</c>

02:05:26.390 --> 02:05:26.400 align:start position:0%
so again um we've done the forward pass
 

02:05:26.400 --> 02:05:27.990 align:start position:0%
so again um we've done the forward pass
and<02:05:26.480><c> this</c><02:05:26.639><c> is</c><02:05:26.719><c> the</c><02:05:26.880><c> loss</c>

02:05:27.990 --> 02:05:28.000 align:start position:0%
and this is the loss
 

02:05:28.000 --> 02:05:30.229 align:start position:0%
and this is the loss
now<02:05:28.159><c> we</c><02:05:28.320><c> can</c><02:05:28.560><c> lost</c><02:05:28.719><c> that</c><02:05:28.880><c> backward</c>

02:05:30.229 --> 02:05:30.239 align:start position:0%
now we can lost that backward
 

02:05:30.239 --> 02:05:32.229 align:start position:0%
now we can lost that backward
let<02:05:30.400><c> me</c><02:05:30.560><c> take</c><02:05:30.719><c> these</c><02:05:30.960><c> out</c><02:05:31.520><c> and</c><02:05:31.679><c> we</c><02:05:31.840><c> can</c><02:05:32.000><c> do</c><02:05:32.159><c> a</c>

02:05:32.229 --> 02:05:32.239 align:start position:0%
let me take these out and we can do a
 

02:05:32.239 --> 02:05:34.390 align:start position:0%
let me take these out and we can do a
step<02:05:32.840><c> size</c>

02:05:34.390 --> 02:05:34.400 align:start position:0%
step size
 

02:05:34.400 --> 02:05:35.910 align:start position:0%
step size
and<02:05:34.639><c> now</c><02:05:34.880><c> we</c><02:05:34.960><c> should</c><02:05:35.119><c> have</c><02:05:35.280><c> a</c><02:05:35.360><c> slightly</c><02:05:35.599><c> lower</c>

02:05:35.910 --> 02:05:35.920 align:start position:0%
and now we should have a slightly lower
 

02:05:35.920 --> 02:05:39.750 align:start position:0%
and now we should have a slightly lower
loss<02:05:36.320><c> 4.36</c><02:05:37.199><c> goes</c><02:05:37.440><c> to</c><02:05:38.159><c> 3.9</c>

02:05:39.750 --> 02:05:39.760 align:start position:0%
loss 4.36 goes to 3.9
 

02:05:39.760 --> 02:05:41.669 align:start position:0%
loss 4.36 goes to 3.9
and<02:05:39.920><c> okay</c><02:05:40.239><c> so</c>

02:05:41.669 --> 02:05:41.679 align:start position:0%
and okay so
 

02:05:41.679 --> 02:05:43.030 align:start position:0%
and okay so
we've<02:05:41.840><c> done</c><02:05:42.000><c> the</c><02:05:42.079><c> forward</c><02:05:42.400><c> pass</c><02:05:42.719><c> here's</c><02:05:42.960><c> the</c>

02:05:43.030 --> 02:05:43.040 align:start position:0%
we've done the forward pass here's the
 

02:05:43.040 --> 02:05:44.310 align:start position:0%
we've done the forward pass here's the
backward<02:05:43.360><c> pass</c>

02:05:44.310 --> 02:05:44.320 align:start position:0%
backward pass
 

02:05:44.320 --> 02:05:45.669 align:start position:0%
backward pass
nudge

02:05:45.669 --> 02:05:45.679 align:start position:0%
nudge
 

02:05:45.679 --> 02:05:50.149 align:start position:0%
nudge
and<02:05:45.760><c> now</c><02:05:46.000><c> the</c><02:05:46.159><c> loss</c><02:05:46.480><c> is</c><02:05:46.719><c> 3.66</c>

02:05:50.149 --> 02:05:50.159 align:start position:0%
 
 

02:05:50.159 --> 02:05:52.390 align:start position:0%
 
3.47

02:05:52.390 --> 02:05:52.400 align:start position:0%
3.47
 

02:05:52.400 --> 02:05:54.229 align:start position:0%
3.47
and<02:05:52.560><c> you</c><02:05:52.719><c> get</c><02:05:52.880><c> the</c><02:05:53.119><c> idea</c><02:05:53.440><c> we</c><02:05:53.599><c> just</c><02:05:53.840><c> continue</c>

02:05:54.229 --> 02:05:54.239 align:start position:0%
and you get the idea we just continue
 

02:05:54.239 --> 02:05:56.310 align:start position:0%
and you get the idea we just continue
doing<02:05:54.480><c> this</c><02:05:55.119><c> and</c><02:05:55.199><c> this</c><02:05:55.440><c> is</c><02:05:55.679><c> uh</c><02:05:55.920><c> gradient</c>

02:05:56.310 --> 02:05:56.320 align:start position:0%
doing this and this is uh gradient
 

02:05:56.320 --> 02:05:58.229 align:start position:0%
doing this and this is uh gradient
descent<02:05:57.199><c> we're</c><02:05:57.360><c> just</c><02:05:57.599><c> iteratively</c><02:05:58.079><c> doing</c>

02:05:58.229 --> 02:05:58.239 align:start position:0%
descent we're just iteratively doing
 

02:05:58.239 --> 02:06:01.189 align:start position:0%
descent we're just iteratively doing
forward<02:05:58.560><c> pass</c><02:05:59.040><c> backward</c><02:05:59.440><c> pass</c><02:06:00.079><c> update</c>

02:06:01.189 --> 02:06:01.199 align:start position:0%
forward pass backward pass update
 

02:06:01.199 --> 02:06:02.870 align:start position:0%
forward pass backward pass update
forward<02:06:01.520><c> pass</c><02:06:01.760><c> backward</c><02:06:02.079><c> pass</c><02:06:02.400><c> update</c><02:06:02.800><c> and</c>

02:06:02.870 --> 02:06:02.880 align:start position:0%
forward pass backward pass update and
 

02:06:02.880 --> 02:06:04.310 align:start position:0%
forward pass backward pass update and
the<02:06:02.960><c> neural</c><02:06:03.199><c> net</c><02:06:03.440><c> is</c><02:06:03.599><c> improving</c><02:06:04.159><c> its</c>

02:06:04.310 --> 02:06:04.320 align:start position:0%
the neural net is improving its
 

02:06:04.320 --> 02:06:05.669 align:start position:0%
the neural net is improving its
predictions

02:06:05.669 --> 02:06:05.679 align:start position:0%
predictions
 

02:06:05.679 --> 02:06:09.589 align:start position:0%
predictions
so<02:06:05.920><c> here</c><02:06:06.159><c> if</c><02:06:06.239><c> we</c><02:06:06.400><c> look</c><02:06:06.639><c> at</c><02:06:07.119><c> why</c><02:06:07.360><c> pred</c><02:06:07.920><c> now</c>

02:06:09.589 --> 02:06:09.599 align:start position:0%
so here if we look at why pred now
 

02:06:09.599 --> 02:06:12.709 align:start position:0%
so here if we look at why pred now
like<02:06:09.920><c> red</c>

02:06:12.709 --> 02:06:12.719 align:start position:0%
 
 

02:06:12.719 --> 02:06:14.550 align:start position:0%
 
we<02:06:12.880><c> see</c><02:06:13.119><c> that</c><02:06:13.520><c> um</c>

02:06:14.550 --> 02:06:14.560 align:start position:0%
we see that um
 

02:06:14.560 --> 02:06:15.990 align:start position:0%
we see that um
this<02:06:14.800><c> value</c><02:06:15.119><c> should</c><02:06:15.280><c> be</c><02:06:15.360><c> getting</c><02:06:15.520><c> closer</c><02:06:15.840><c> to</c>

02:06:15.990 --> 02:06:16.000 align:start position:0%
this value should be getting closer to
 

02:06:16.000 --> 02:06:16.790 align:start position:0%
this value should be getting closer to
one

02:06:16.790 --> 02:06:16.800 align:start position:0%
one
 

02:06:16.800 --> 02:06:17.910 align:start position:0%
one
so<02:06:16.960><c> this</c><02:06:17.119><c> value</c><02:06:17.360><c> should</c><02:06:17.440><c> be</c><02:06:17.520><c> getting</c><02:06:17.760><c> more</c>

02:06:17.910 --> 02:06:17.920 align:start position:0%
so this value should be getting more
 

02:06:17.920 --> 02:06:19.189 align:start position:0%
so this value should be getting more
positive<02:06:18.400><c> these</c><02:06:18.560><c> should</c><02:06:18.719><c> be</c><02:06:18.800><c> getting</c><02:06:19.040><c> more</c>

02:06:19.189 --> 02:06:19.199 align:start position:0%
positive these should be getting more
 

02:06:19.199 --> 02:06:20.550 align:start position:0%
positive these should be getting more
negative<02:06:19.760><c> and</c><02:06:19.920><c> this</c><02:06:20.000><c> one</c><02:06:20.159><c> should</c><02:06:20.320><c> be</c><02:06:20.400><c> also</c>

02:06:20.550 --> 02:06:20.560 align:start position:0%
negative and this one should be also
 

02:06:20.560 --> 02:06:22.390 align:start position:0%
negative and this one should be also
getting<02:06:20.800><c> more</c><02:06:20.960><c> positive</c><02:06:21.840><c> so</c><02:06:22.000><c> if</c><02:06:22.079><c> we</c><02:06:22.239><c> just</c>

02:06:22.390 --> 02:06:22.400 align:start position:0%
getting more positive so if we just
 

02:06:22.400 --> 02:06:23.910 align:start position:0%
getting more positive so if we just
iterate<02:06:22.800><c> this</c>

02:06:23.910 --> 02:06:23.920 align:start position:0%
iterate this
 

02:06:23.920 --> 02:06:26.709 align:start position:0%
iterate this
a<02:06:24.000><c> few</c><02:06:24.159><c> more</c><02:06:24.320><c> times</c>

02:06:26.709 --> 02:06:26.719 align:start position:0%
 
 

02:06:26.719 --> 02:06:28.229 align:start position:0%
 
actually<02:06:26.960><c> we</c><02:06:27.119><c> may</c><02:06:27.280><c> be</c><02:06:27.360><c> able</c><02:06:27.520><c> to</c><02:06:27.599><c> afford</c><02:06:27.840><c> go</c><02:06:28.159><c> to</c>

02:06:28.229 --> 02:06:28.239 align:start position:0%
actually we may be able to afford go to
 

02:06:28.239 --> 02:06:30.229 align:start position:0%
actually we may be able to afford go to
go<02:06:28.480><c> a</c><02:06:28.639><c> bit</c><02:06:28.880><c> faster</c><02:06:29.360><c> let's</c><02:06:29.520><c> try</c><02:06:29.840><c> a</c><02:06:29.920><c> slightly</c>

02:06:30.229 --> 02:06:30.239 align:start position:0%
go a bit faster let's try a slightly
 

02:06:30.239 --> 02:06:34.229 align:start position:0%
go a bit faster let's try a slightly
higher<02:06:30.480><c> learning</c><02:06:30.800><c> rate</c>

02:06:34.229 --> 02:06:34.239 align:start position:0%
 
 

02:06:34.239 --> 02:06:35.910 align:start position:0%
 
oops<02:06:34.639><c> okay</c><02:06:34.880><c> there</c><02:06:35.119><c> we</c><02:06:35.199><c> go</c><02:06:35.280><c> so</c><02:06:35.440><c> now</c><02:06:35.599><c> we're</c><02:06:35.760><c> at</c>

02:06:35.910 --> 02:06:35.920 align:start position:0%
oops okay there we go so now we're at
 

02:06:35.920 --> 02:06:39.189 align:start position:0%
oops okay there we go so now we're at
0.31

02:06:39.189 --> 02:06:39.199 align:start position:0%
 
 

02:06:39.199 --> 02:06:41.270 align:start position:0%
 
if<02:06:39.360><c> you</c><02:06:39.440><c> go</c><02:06:39.599><c> too</c><02:06:39.840><c> fast</c><02:06:40.159><c> by</c><02:06:40.320><c> the</c><02:06:40.400><c> way</c><02:06:40.880><c> if</c><02:06:41.040><c> you</c><02:06:41.119><c> try</c>

02:06:41.270 --> 02:06:41.280 align:start position:0%
if you go too fast by the way if you try
 

02:06:41.280 --> 02:06:43.270 align:start position:0%
if you go too fast by the way if you try
to<02:06:41.440><c> make</c><02:06:41.599><c> it</c><02:06:41.679><c> too</c><02:06:41.840><c> big</c><02:06:42.000><c> of</c><02:06:42.159><c> a</c><02:06:42.239><c> step</c><02:06:42.880><c> you</c><02:06:43.040><c> may</c>

02:06:43.270 --> 02:06:43.280 align:start position:0%
to make it too big of a step you may
 

02:06:43.280 --> 02:06:47.030 align:start position:0%
to make it too big of a step you may
actually<02:06:43.760><c> overstep</c>

02:06:47.030 --> 02:06:47.040 align:start position:0%
 
 

02:06:47.040 --> 02:06:48.629 align:start position:0%
 
it's<02:06:47.199><c> overconfidence</c><02:06:48.079><c> because</c><02:06:48.400><c> again</c>

02:06:48.629 --> 02:06:48.639 align:start position:0%
it's overconfidence because again
 

02:06:48.639 --> 02:06:50.069 align:start position:0%
it's overconfidence because again
remember<02:06:48.960><c> we</c><02:06:49.119><c> don't</c><02:06:49.280><c> actually</c><02:06:49.520><c> know</c><02:06:49.679><c> exactly</c>

02:06:50.069 --> 02:06:50.079 align:start position:0%
remember we don't actually know exactly
 

02:06:50.079 --> 02:06:51.589 align:start position:0%
remember we don't actually know exactly
about<02:06:50.239><c> the</c><02:06:50.400><c> loss</c><02:06:50.639><c> function</c><02:06:51.280><c> the</c><02:06:51.440><c> loss</c>

02:06:51.589 --> 02:06:51.599 align:start position:0%
about the loss function the loss
 

02:06:51.599 --> 02:06:53.669 align:start position:0%
about the loss function the loss
function<02:06:51.920><c> has</c><02:06:52.079><c> all</c><02:06:52.239><c> kinds</c><02:06:52.480><c> of</c><02:06:52.800><c> structure</c><02:06:53.520><c> and</c>

02:06:53.669 --> 02:06:53.679 align:start position:0%
function has all kinds of structure and
 

02:06:53.679 --> 02:06:55.669 align:start position:0%
function has all kinds of structure and
we<02:06:53.840><c> only</c><02:06:54.079><c> know</c><02:06:54.239><c> about</c><02:06:54.400><c> the</c><02:06:54.560><c> very</c><02:06:54.880><c> local</c>

02:06:55.669 --> 02:06:55.679 align:start position:0%
we only know about the very local
 

02:06:55.679 --> 02:06:57.189 align:start position:0%
we only know about the very local
dependence<02:06:56.159><c> of</c><02:06:56.320><c> all</c><02:06:56.400><c> these</c><02:06:56.560><c> parameters</c><02:06:57.040><c> on</c>

02:06:57.189 --> 02:06:57.199 align:start position:0%
dependence of all these parameters on
 

02:06:57.199 --> 02:06:59.350 align:start position:0%
dependence of all these parameters on
the<02:06:57.280><c> loss</c><02:06:57.679><c> but</c><02:06:57.840><c> if</c><02:06:57.920><c> we</c><02:06:58.079><c> step</c><02:06:58.320><c> too</c><02:06:58.560><c> far</c>

02:06:59.350 --> 02:06:59.360 align:start position:0%
the loss but if we step too far
 

02:06:59.360 --> 02:07:01.510 align:start position:0%
the loss but if we step too far
we<02:06:59.520><c> may</c><02:06:59.760><c> step</c><02:07:00.000><c> into</c><02:07:00.719><c> you</c><02:07:00.800><c> know</c><02:07:01.040><c> a</c><02:07:01.119><c> part</c><02:07:01.280><c> of</c><02:07:01.440><c> the</c>

02:07:01.510 --> 02:07:01.520 align:start position:0%
we may step into you know a part of the
 

02:07:01.520 --> 02:07:03.430 align:start position:0%
we may step into you know a part of the
loss<02:07:01.760><c> that</c><02:07:02.000><c> is</c><02:07:02.159><c> completely</c><02:07:02.480><c> different</c>

02:07:03.430 --> 02:07:03.440 align:start position:0%
loss that is completely different
 

02:07:03.440 --> 02:07:04.790 align:start position:0%
loss that is completely different
and<02:07:03.520><c> that</c><02:07:03.679><c> can</c><02:07:03.840><c> destabilize</c><02:07:04.480><c> training</c><02:07:04.719><c> and</c>

02:07:04.790 --> 02:07:04.800 align:start position:0%
and that can destabilize training and
 

02:07:04.800 --> 02:07:08.149 align:start position:0%
and that can destabilize training and
make<02:07:04.960><c> your</c><02:07:05.360><c> loss</c><02:07:05.599><c> actually</c><02:07:05.840><c> blow</c><02:07:06.159><c> up</c><02:07:06.320><c> even</c>

02:07:08.149 --> 02:07:08.159 align:start position:0%
make your loss actually blow up even
 

02:07:08.159 --> 02:07:11.030 align:start position:0%
make your loss actually blow up even
so<02:07:08.320><c> the</c><02:07:08.400><c> loss</c><02:07:08.639><c> is</c><02:07:08.719><c> now</c><02:07:08.880><c> 0.04</c><02:07:10.079><c> so</c><02:07:10.239><c> actually</c><02:07:10.880><c> the</c>

02:07:11.030 --> 02:07:11.040 align:start position:0%
so the loss is now 0.04 so actually the
 

02:07:11.040 --> 02:07:13.430 align:start position:0%
so the loss is now 0.04 so actually the
predictions<02:07:11.599><c> should</c><02:07:11.760><c> be</c><02:07:12.079><c> really</c><02:07:12.480><c> quite</c><02:07:12.719><c> close</c>

02:07:13.430 --> 02:07:13.440 align:start position:0%
predictions should be really quite close
 

02:07:13.440 --> 02:07:15.109 align:start position:0%
predictions should be really quite close
let's<02:07:13.599><c> take</c><02:07:13.840><c> a</c><02:07:13.840><c> look</c>

02:07:15.109 --> 02:07:15.119 align:start position:0%
let's take a look
 

02:07:15.119 --> 02:07:17.109 align:start position:0%
let's take a look
so<02:07:15.280><c> you</c><02:07:15.360><c> see</c><02:07:15.520><c> how</c><02:07:15.679><c> this</c><02:07:15.840><c> is</c><02:07:15.920><c> almost</c><02:07:16.239><c> one</c>

02:07:17.109 --> 02:07:17.119 align:start position:0%
so you see how this is almost one
 

02:07:17.119 --> 02:07:19.750 align:start position:0%
so you see how this is almost one
almost<02:07:17.440><c> negative</c><02:07:17.760><c> one</c><02:07:18.320><c> almost</c><02:07:18.719><c> one</c><02:07:19.440><c> we</c><02:07:19.599><c> can</c>

02:07:19.750 --> 02:07:19.760 align:start position:0%
almost negative one almost one we can
 

02:07:19.760 --> 02:07:21.270 align:start position:0%
almost negative one almost one we can
continue<02:07:20.159><c> going</c>

02:07:21.270 --> 02:07:21.280 align:start position:0%
continue going
 

02:07:21.280 --> 02:07:22.390 align:start position:0%
continue going
uh<02:07:21.599><c> so</c>

02:07:22.390 --> 02:07:22.400 align:start position:0%
uh so
 

02:07:22.400 --> 02:07:24.069 align:start position:0%
uh so
yep<02:07:22.800><c> backward</c>

02:07:24.069 --> 02:07:24.079 align:start position:0%
yep backward
 

02:07:24.079 --> 02:07:25.669 align:start position:0%
yep backward
update

02:07:25.669 --> 02:07:25.679 align:start position:0%
update
 

02:07:25.679 --> 02:07:28.149 align:start position:0%
update
oops<02:07:26.239><c> there</c><02:07:26.400><c> we</c><02:07:26.480><c> go</c><02:07:26.719><c> so</c><02:07:26.880><c> we</c><02:07:26.960><c> went</c><02:07:27.199><c> way</c><02:07:27.360><c> too</c><02:07:27.520><c> fast</c>

02:07:28.149 --> 02:07:28.159 align:start position:0%
oops there we go so we went way too fast
 

02:07:28.159 --> 02:07:29.750 align:start position:0%
oops there we go so we went way too fast
and<02:07:28.560><c> um</c>

02:07:29.750 --> 02:07:29.760 align:start position:0%
and um
 

02:07:29.760 --> 02:07:31.430 align:start position:0%
and um
we<02:07:30.000><c> actually</c><02:07:30.239><c> overstepped</c>

02:07:31.430 --> 02:07:31.440 align:start position:0%
we actually overstepped
 

02:07:31.440 --> 02:07:34.709 align:start position:0%
we actually overstepped
so<02:07:31.679><c> we</c><02:07:31.840><c> got</c><02:07:32.159><c> two</c><02:07:32.639><c> uh</c><02:07:33.280><c> too</c><02:07:33.440><c> eager</c><02:07:34.239><c> where</c><02:07:34.480><c> are</c><02:07:34.560><c> we</c>

02:07:34.709 --> 02:07:34.719 align:start position:0%
so we got two uh too eager where are we
 

02:07:34.719 --> 02:07:36.310 align:start position:0%
so we got two uh too eager where are we
now<02:07:34.960><c> oops</c>

02:07:36.310 --> 02:07:36.320 align:start position:0%
now oops
 

02:07:36.320 --> 02:07:37.189 align:start position:0%
now oops
okay

02:07:37.189 --> 02:07:37.199 align:start position:0%
okay
 

02:07:37.199 --> 02:07:39.189 align:start position:0%
okay
seven<02:07:37.520><c> e</c><02:07:37.760><c> negative</c><02:07:38.159><c> nine</c><02:07:38.560><c> so</c><02:07:38.719><c> this</c><02:07:38.880><c> is</c><02:07:39.040><c> very</c>

02:07:39.189 --> 02:07:39.199 align:start position:0%
seven e negative nine so this is very
 

02:07:39.199 --> 02:07:41.510 align:start position:0%
seven e negative nine so this is very
very<02:07:39.520><c> low</c><02:07:39.760><c> loss</c>

02:07:41.510 --> 02:07:41.520 align:start position:0%
very low loss
 

02:07:41.520 --> 02:07:43.109 align:start position:0%
very low loss
and<02:07:41.679><c> the</c><02:07:41.760><c> predictions</c>

02:07:43.109 --> 02:07:43.119 align:start position:0%
and the predictions
 

02:07:43.119 --> 02:07:45.510 align:start position:0%
and the predictions
are<02:07:43.280><c> basically</c><02:07:43.679><c> perfect</c>

02:07:45.510 --> 02:07:45.520 align:start position:0%
are basically perfect
 

02:07:45.520 --> 02:07:47.430 align:start position:0%
are basically perfect
so<02:07:45.679><c> somehow</c><02:07:46.159><c> we</c>

02:07:47.430 --> 02:07:47.440 align:start position:0%
so somehow we
 

02:07:47.440 --> 02:07:48.870 align:start position:0%
so somehow we
basically<02:07:47.760><c> we</c><02:07:47.920><c> were</c><02:07:48.159><c> doing</c><02:07:48.400><c> way</c><02:07:48.560><c> too</c><02:07:48.719><c> big</c>

02:07:48.870 --> 02:07:48.880 align:start position:0%
basically we were doing way too big
 

02:07:48.880 --> 02:07:50.550 align:start position:0%
basically we were doing way too big
updates<02:07:49.199><c> and</c><02:07:49.280><c> we</c><02:07:49.440><c> briefly</c><02:07:49.760><c> exploded</c><02:07:50.159><c> but</c><02:07:50.320><c> then</c>

02:07:50.550 --> 02:07:50.560 align:start position:0%
updates and we briefly exploded but then
 

02:07:50.560 --> 02:07:51.910 align:start position:0%
updates and we briefly exploded but then
somehow<02:07:50.880><c> we</c><02:07:51.040><c> ended</c><02:07:51.280><c> up</c><02:07:51.360><c> getting</c><02:07:51.599><c> into</c><02:07:51.840><c> a</c>

02:07:51.910 --> 02:07:51.920 align:start position:0%
somehow we ended up getting into a
 

02:07:51.920 --> 02:07:54.790 align:start position:0%
somehow we ended up getting into a
really<02:07:52.079><c> good</c><02:07:52.239><c> spot</c><02:07:52.880><c> so</c><02:07:54.000><c> usually</c><02:07:54.560><c> this</c>

02:07:54.790 --> 02:07:54.800 align:start position:0%
really good spot so usually this
 

02:07:54.800 --> 02:07:56.870 align:start position:0%
really good spot so usually this
learning<02:07:55.119><c> rate</c><02:07:55.360><c> and</c><02:07:55.440><c> the</c><02:07:55.520><c> tuning</c><02:07:55.920><c> of</c><02:07:56.079><c> it</c><02:07:56.320><c> is</c><02:07:56.800><c> a</c>

02:07:56.870 --> 02:07:56.880 align:start position:0%
learning rate and the tuning of it is a
 

02:07:56.880 --> 02:07:58.629 align:start position:0%
learning rate and the tuning of it is a
subtle<02:07:57.199><c> art</c><02:07:57.599><c> you</c><02:07:57.679><c> want</c><02:07:57.840><c> to</c><02:07:57.920><c> set</c><02:07:58.159><c> your</c><02:07:58.320><c> learning</c>

02:07:58.629 --> 02:07:58.639 align:start position:0%
subtle art you want to set your learning
 

02:07:58.639 --> 02:08:00.550 align:start position:0%
subtle art you want to set your learning
rate<02:07:59.199><c> if</c><02:07:59.280><c> it's</c><02:07:59.440><c> too</c><02:07:59.679><c> low</c><02:08:00.159><c> you're</c><02:08:00.320><c> going</c><02:08:00.480><c> to</c>

02:08:00.550 --> 02:08:00.560 align:start position:0%
rate if it's too low you're going to
 

02:08:00.560 --> 02:08:02.390 align:start position:0%
rate if it's too low you're going to
take<02:08:00.719><c> way</c><02:08:00.960><c> too</c><02:08:01.119><c> long</c><02:08:01.280><c> to</c><02:08:01.440><c> converge</c><02:08:02.159><c> but</c><02:08:02.320><c> if</c>

02:08:02.390 --> 02:08:02.400 align:start position:0%
take way too long to converge but if
 

02:08:02.400 --> 02:08:03.830 align:start position:0%
take way too long to converge but if
it's<02:08:02.560><c> too</c><02:08:02.800><c> high</c><02:08:03.199><c> the</c><02:08:03.280><c> whole</c><02:08:03.440><c> thing</c><02:08:03.599><c> gets</c>

02:08:03.830 --> 02:08:03.840 align:start position:0%
it's too high the whole thing gets
 

02:08:03.840 --> 02:08:05.589 align:start position:0%
it's too high the whole thing gets
unstable<02:08:04.480><c> and</c><02:08:04.560><c> you</c><02:08:04.719><c> might</c><02:08:04.880><c> actually</c><02:08:05.119><c> even</c>

02:08:05.589 --> 02:08:05.599 align:start position:0%
unstable and you might actually even
 

02:08:05.599 --> 02:08:07.030 align:start position:0%
unstable and you might actually even
explode<02:08:05.920><c> the</c><02:08:06.079><c> loss</c>

02:08:07.030 --> 02:08:07.040 align:start position:0%
explode the loss
 

02:08:07.040 --> 02:08:08.470 align:start position:0%
explode the loss
depending<02:08:07.360><c> on</c><02:08:07.440><c> your</c><02:08:07.520><c> loss</c><02:08:07.679><c> function</c>

02:08:08.470 --> 02:08:08.480 align:start position:0%
depending on your loss function
 

02:08:08.480 --> 02:08:10.790 align:start position:0%
depending on your loss function
so<02:08:08.960><c> finding</c><02:08:09.599><c> the</c><02:08:09.840><c> step</c><02:08:10.079><c> size</c><02:08:10.320><c> to</c><02:08:10.400><c> be</c><02:08:10.560><c> just</c>

02:08:10.790 --> 02:08:10.800 align:start position:0%
so finding the step size to be just
 

02:08:10.800 --> 02:08:12.629 align:start position:0%
so finding the step size to be just
right<02:08:11.440><c> it's</c><02:08:11.760><c> it's</c><02:08:11.920><c> a</c><02:08:12.000><c> pretty</c><02:08:12.159><c> subtle</c><02:08:12.480><c> art</c>

02:08:12.629 --> 02:08:12.639 align:start position:0%
right it's it's a pretty subtle art
 

02:08:12.639 --> 02:08:14.069 align:start position:0%
right it's it's a pretty subtle art
sometimes<02:08:13.040><c> when</c><02:08:13.199><c> you're</c><02:08:13.360><c> using</c><02:08:13.840><c> sort</c><02:08:14.000><c> of</c>

02:08:14.069 --> 02:08:14.079 align:start position:0%
sometimes when you're using sort of
 

02:08:14.079 --> 02:08:15.910 align:start position:0%
sometimes when you're using sort of
vanilla<02:08:14.480><c> gradient</c><02:08:14.800><c> descent</c>

02:08:15.910 --> 02:08:15.920 align:start position:0%
vanilla gradient descent
 

02:08:15.920 --> 02:08:17.830 align:start position:0%
vanilla gradient descent
but<02:08:16.079><c> we</c><02:08:16.159><c> happen</c><02:08:16.400><c> to</c><02:08:16.480><c> get</c><02:08:16.639><c> into</c><02:08:16.800><c> a</c><02:08:16.880><c> good</c><02:08:17.040><c> spot</c><02:08:17.679><c> we</c>

02:08:17.830 --> 02:08:17.840 align:start position:0%
but we happen to get into a good spot we
 

02:08:17.840 --> 02:08:19.510 align:start position:0%
but we happen to get into a good spot we
can<02:08:18.000><c> look</c><02:08:18.159><c> at</c>

02:08:19.510 --> 02:08:19.520 align:start position:0%
can look at
 

02:08:19.520 --> 02:08:22.629 align:start position:0%
can look at
n-dot<02:08:19.920><c> parameters</c>

02:08:22.629 --> 02:08:22.639 align:start position:0%
n-dot parameters
 

02:08:22.639 --> 02:08:25.430 align:start position:0%
n-dot parameters
so<02:08:22.800><c> this</c><02:08:23.119><c> is</c><02:08:23.360><c> the</c><02:08:23.920><c> setting</c><02:08:24.400><c> of</c><02:08:24.800><c> weights</c><02:08:25.280><c> and</c>

02:08:25.430 --> 02:08:25.440 align:start position:0%
so this is the setting of weights and
 

02:08:25.440 --> 02:08:26.550 align:start position:0%
so this is the setting of weights and
biases

02:08:26.550 --> 02:08:26.560 align:start position:0%
biases
 

02:08:26.560 --> 02:08:29.109 align:start position:0%
biases
that<02:08:26.800><c> makes</c><02:08:27.280><c> our</c><02:08:27.520><c> network</c>

02:08:29.109 --> 02:08:29.119 align:start position:0%
that makes our network
 

02:08:29.119 --> 02:08:30.149 align:start position:0%
that makes our network
predict

02:08:30.149 --> 02:08:30.159 align:start position:0%
predict
 

02:08:30.159 --> 02:08:31.830 align:start position:0%
predict
the<02:08:30.320><c> desired</c><02:08:30.800><c> targets</c>

02:08:31.830 --> 02:08:31.840 align:start position:0%
the desired targets
 

02:08:31.840 --> 02:08:33.750 align:start position:0%
the desired targets
very<02:08:32.079><c> very</c><02:08:32.320><c> close</c>

02:08:33.750 --> 02:08:33.760 align:start position:0%
very very close
 

02:08:33.760 --> 02:08:35.589 align:start position:0%
very very close
and

02:08:35.589 --> 02:08:35.599 align:start position:0%
and
 

02:08:35.599 --> 02:08:37.109 align:start position:0%
and
basically<02:08:36.000><c> we've</c><02:08:36.320><c> successfully</c><02:08:36.880><c> trained</c>

02:08:37.109 --> 02:08:37.119 align:start position:0%
basically we've successfully trained
 

02:08:37.119 --> 02:08:38.790 align:start position:0%
basically we've successfully trained
neural<02:08:37.440><c> net</c>

02:08:38.790 --> 02:08:38.800 align:start position:0%
neural net
 

02:08:38.800 --> 02:08:40.149 align:start position:0%
neural net
okay<02:08:39.040><c> let's</c><02:08:39.199><c> make</c><02:08:39.360><c> this</c><02:08:39.520><c> a</c><02:08:39.599><c> tiny</c><02:08:39.840><c> bit</c><02:08:40.000><c> more</c>

02:08:40.149 --> 02:08:40.159 align:start position:0%
okay let's make this a tiny bit more
 

02:08:40.159 --> 02:08:41.589 align:start position:0%
okay let's make this a tiny bit more
respectable<02:08:40.719><c> and</c><02:08:40.800><c> implement</c><02:08:41.119><c> an</c><02:08:41.280><c> actual</c>

02:08:41.589 --> 02:08:41.599 align:start position:0%
respectable and implement an actual
 

02:08:41.599 --> 02:08:43.750 align:start position:0%
respectable and implement an actual
training<02:08:41.920><c> loop</c><02:08:42.239><c> and</c><02:08:42.400><c> what</c><02:08:42.560><c> that</c><02:08:42.800><c> looks</c><02:08:42.960><c> like</c>

02:08:43.750 --> 02:08:43.760 align:start position:0%
training loop and what that looks like
 

02:08:43.760 --> 02:08:45.189 align:start position:0%
training loop and what that looks like
so<02:08:43.920><c> this</c><02:08:44.159><c> is</c><02:08:44.239><c> the</c><02:08:44.320><c> data</c><02:08:44.560><c> definition</c><02:08:45.040><c> that</c>

02:08:45.189 --> 02:08:45.199 align:start position:0%
so this is the data definition that
 

02:08:45.199 --> 02:08:47.910 align:start position:0%
so this is the data definition that
stays<02:08:46.079><c> this</c><02:08:46.320><c> is</c><02:08:46.400><c> the</c><02:08:46.480><c> forward</c><02:08:46.800><c> pass</c>

02:08:47.910 --> 02:08:47.920 align:start position:0%
stays this is the forward pass
 

02:08:47.920 --> 02:08:49.430 align:start position:0%
stays this is the forward pass
um<02:08:48.320><c> so</c>

02:08:49.430 --> 02:08:49.440 align:start position:0%
um so
 

02:08:49.440 --> 02:08:52.470 align:start position:0%
um so
for<02:08:50.159><c> uh</c><02:08:50.480><c> k</c><02:08:50.960><c> in</c><02:08:51.199><c> range</c><02:08:51.920><c> you</c><02:08:52.000><c> know</c><02:08:52.159><c> we're</c><02:08:52.239><c> going</c>

02:08:52.470 --> 02:08:52.480 align:start position:0%
for uh k in range you know we're going
 

02:08:52.480 --> 02:08:53.910 align:start position:0%
for uh k in range you know we're going
to

02:08:53.910 --> 02:08:53.920 align:start position:0%
to
 

02:08:53.920 --> 02:08:57.589 align:start position:0%
to
take<02:08:54.159><c> a</c><02:08:54.239><c> bunch</c><02:08:54.560><c> of</c><02:08:54.639><c> steps</c>

02:08:57.589 --> 02:08:57.599 align:start position:0%
 
 

02:08:57.599 --> 02:09:00.069 align:start position:0%
 
first<02:08:58.000><c> you</c><02:08:58.320><c> do</c><02:08:58.480><c> the</c><02:08:58.560><c> forward</c><02:08:58.880><c> pass</c>

02:09:00.069 --> 02:09:00.079 align:start position:0%
first you do the forward pass
 

02:09:00.079 --> 02:09:03.669 align:start position:0%
first you do the forward pass
we<02:09:00.239><c> validate</c><02:09:00.560><c> the</c><02:09:00.719><c> loss</c>

02:09:03.669 --> 02:09:03.679 align:start position:0%
 
 

02:09:03.679 --> 02:09:05.030 align:start position:0%
 
let's<02:09:03.920><c> re-initialize</c><02:09:04.400><c> the</c><02:09:04.480><c> neural</c><02:09:04.719><c> net</c><02:09:04.880><c> from</c>

02:09:05.030 --> 02:09:05.040 align:start position:0%
let's re-initialize the neural net from
 

02:09:05.040 --> 02:09:06.229 align:start position:0%
let's re-initialize the neural net from
scratch

02:09:06.229 --> 02:09:06.239 align:start position:0%
scratch
 

02:09:06.239 --> 02:09:08.550 align:start position:0%
scratch
and<02:09:06.320><c> here's</c><02:09:06.560><c> the</c><02:09:06.639><c> data</c>

02:09:08.550 --> 02:09:08.560 align:start position:0%
and here's the data
 

02:09:08.560 --> 02:09:11.270 align:start position:0%
and here's the data
and<02:09:09.040><c> we</c><02:09:09.199><c> first</c><02:09:09.520><c> do</c><02:09:09.679><c> before</c><02:09:10.159><c> pass</c><02:09:10.800><c> then</c><02:09:11.040><c> we</c><02:09:11.119><c> do</c>

02:09:11.270 --> 02:09:11.280 align:start position:0%
and we first do before pass then we do
 

02:09:11.280 --> 02:09:19.589 align:start position:0%
and we first do before pass then we do
the<02:09:11.360><c> backward</c><02:09:11.760><c> pass</c>

02:09:19.589 --> 02:09:19.599 align:start position:0%
 
 

02:09:19.599 --> 02:09:21.350 align:start position:0%
 
and<02:09:19.679><c> then</c><02:09:19.840><c> we</c><02:09:20.000><c> do</c><02:09:20.079><c> an</c><02:09:20.239><c> update</c><02:09:20.719><c> that's</c><02:09:20.960><c> gradient</c>

02:09:21.350 --> 02:09:21.360 align:start position:0%
and then we do an update that's gradient
 

02:09:21.360 --> 02:09:26.310 align:start position:0%
and then we do an update that's gradient
descent

02:09:26.310 --> 02:09:26.320 align:start position:0%
 
 

02:09:26.320 --> 02:09:27.510 align:start position:0%
 
and<02:09:26.400><c> then</c><02:09:26.560><c> we</c><02:09:26.719><c> should</c><02:09:26.800><c> be</c><02:09:26.960><c> able</c><02:09:27.040><c> to</c><02:09:27.119><c> iterate</c>

02:09:27.510 --> 02:09:27.520 align:start position:0%
and then we should be able to iterate
 

02:09:27.520 --> 02:09:29.030 align:start position:0%
and then we should be able to iterate
this<02:09:27.679><c> and</c><02:09:27.840><c> we</c><02:09:27.920><c> should</c><02:09:28.079><c> be</c><02:09:28.159><c> able</c><02:09:28.320><c> to</c><02:09:28.480><c> print</c><02:09:28.880><c> the</c>

02:09:29.030 --> 02:09:29.040 align:start position:0%
this and we should be able to print the
 

02:09:29.040 --> 02:09:30.229 align:start position:0%
this and we should be able to print the
current<02:09:29.360><c> step</c>

02:09:30.229 --> 02:09:30.239 align:start position:0%
current step
 

02:09:30.239 --> 02:09:33.830 align:start position:0%
current step
the<02:09:30.400><c> current</c><02:09:30.840><c> loss</c><02:09:31.760><c> um</c><02:09:32.560><c> let's</c><02:09:32.719><c> just</c><02:09:32.880><c> print</c><02:09:33.199><c> the</c>

02:09:33.830 --> 02:09:33.840 align:start position:0%
the current loss um let's just print the
 

02:09:33.840 --> 02:09:34.950 align:start position:0%
the current loss um let's just print the
sort<02:09:34.000><c> of</c>

02:09:34.950 --> 02:09:34.960 align:start position:0%
sort of
 

02:09:34.960 --> 02:09:36.870 align:start position:0%
sort of
number<02:09:35.440><c> of</c><02:09:35.520><c> the</c><02:09:35.679><c> loss</c>

02:09:36.870 --> 02:09:36.880 align:start position:0%
number of the loss
 

02:09:36.880 --> 02:09:38.229 align:start position:0%
number of the loss
and

02:09:38.229 --> 02:09:38.239 align:start position:0%
and
 

02:09:38.239 --> 02:09:40.550 align:start position:0%
and
that<02:09:38.480><c> should</c><02:09:38.639><c> be</c><02:09:38.880><c> it</c>

02:09:40.550 --> 02:09:40.560 align:start position:0%
that should be it
 

02:09:40.560 --> 02:09:42.470 align:start position:0%
that should be it
and<02:09:40.639><c> then</c><02:09:40.800><c> the</c><02:09:40.960><c> learning</c><02:09:41.280><c> rate</c><02:09:41.679><c> 0.01</c><02:09:42.400><c> is</c><02:09:42.480><c> a</c>

02:09:42.470 --> 02:09:42.480 align:start position:0%
and then the learning rate 0.01 is a
 

02:09:42.480 --> 02:09:44.390 align:start position:0%
and then the learning rate 0.01 is a
little<02:09:42.719><c> too</c><02:09:42.880><c> small</c><02:09:43.199><c> 0.1</c><02:09:43.760><c> we</c><02:09:43.840><c> saw</c><02:09:44.079><c> is</c><02:09:44.159><c> like</c><02:09:44.320><c> a</c>

02:09:44.390 --> 02:09:44.400 align:start position:0%
little too small 0.1 we saw is like a
 

02:09:44.400 --> 02:09:46.229 align:start position:0%
little too small 0.1 we saw is like a
little<02:09:44.560><c> bit</c><02:09:44.639><c> dangerously</c><02:09:45.119><c> too</c><02:09:45.280><c> high</c><02:09:45.920><c> let's</c><02:09:46.079><c> go</c>

02:09:46.229 --> 02:09:46.239 align:start position:0%
little bit dangerously too high let's go
 

02:09:46.239 --> 02:09:47.910 align:start position:0%
little bit dangerously too high let's go
somewhere<02:09:46.560><c> in</c><02:09:46.639><c> between</c>

02:09:47.910 --> 02:09:47.920 align:start position:0%
somewhere in between
 

02:09:47.920 --> 02:09:50.069 align:start position:0%
somewhere in between
and<02:09:48.239><c> we'll</c><02:09:48.639><c> optimize</c><02:09:49.040><c> this</c><02:09:49.199><c> for</c>

02:09:50.069 --> 02:09:50.079 align:start position:0%
and we'll optimize this for
 

02:09:50.079 --> 02:09:52.229 align:start position:0%
and we'll optimize this for
not<02:09:50.320><c> 10</c><02:09:50.560><c> steps</c><02:09:50.880><c> but</c><02:09:51.040><c> let's</c><02:09:51.280><c> go</c><02:09:51.440><c> for</c><02:09:51.679><c> say</c><02:09:51.920><c> 20</c>

02:09:52.229 --> 02:09:52.239 align:start position:0%
not 10 steps but let's go for say 20
 

02:09:52.239 --> 02:09:54.550 align:start position:0%
not 10 steps but let's go for say 20
steps

02:09:54.550 --> 02:09:54.560 align:start position:0%
steps
 

02:09:54.560 --> 02:09:59.109 align:start position:0%
steps
let<02:09:54.719><c> me</c><02:09:54.960><c> erase</c><02:09:55.440><c> all</c><02:09:55.599><c> of</c><02:09:55.679><c> this</c><02:09:56.320><c> junk</c>

02:09:59.109 --> 02:09:59.119 align:start position:0%
 
 

02:09:59.119 --> 02:10:03.109 align:start position:0%
 
and<02:09:59.440><c> uh</c><02:09:59.679><c> let's</c><02:09:59.920><c> run</c><02:10:00.079><c> the</c><02:10:00.239><c> optimization</c>

02:10:03.109 --> 02:10:03.119 align:start position:0%
 
 

02:10:03.119 --> 02:10:05.270 align:start position:0%
 
and<02:10:03.280><c> you</c><02:10:03.440><c> see</c><02:10:03.679><c> how</c><02:10:03.920><c> we've</c><02:10:04.159><c> actually</c><02:10:04.560><c> converged</c>

02:10:05.270 --> 02:10:05.280 align:start position:0%
and you see how we've actually converged
 

02:10:05.280 --> 02:10:08.390 align:start position:0%
and you see how we've actually converged
slower<02:10:06.159><c> in</c><02:10:06.320><c> a</c><02:10:06.480><c> more</c><02:10:06.800><c> controlled</c><02:10:07.280><c> manner</c><02:10:08.079><c> and</c>

02:10:08.390 --> 02:10:08.400 align:start position:0%
slower in a more controlled manner and
 

02:10:08.400 --> 02:10:11.430 align:start position:0%
slower in a more controlled manner and
got<02:10:08.560><c> to</c><02:10:08.719><c> a</c><02:10:08.880><c> loss</c><02:10:09.119><c> that</c><02:10:09.280><c> is</c><02:10:09.440><c> very</c><02:10:09.679><c> low</c>

02:10:11.430 --> 02:10:11.440 align:start position:0%
got to a loss that is very low
 

02:10:11.440 --> 02:10:12.470 align:start position:0%
got to a loss that is very low
so

02:10:12.470 --> 02:10:12.480 align:start position:0%
so
 

02:10:12.480 --> 02:10:15.750 align:start position:0%
so
i<02:10:12.719><c> expect</c><02:10:12.960><c> white</c><02:10:13.199><c> bread</c><02:10:13.520><c> to</c><02:10:13.679><c> be</c><02:10:13.840><c> quite</c><02:10:14.079><c> good</c>

02:10:15.750 --> 02:10:15.760 align:start position:0%
i expect white bread to be quite good
 

02:10:15.760 --> 02:10:19.669 align:start position:0%
i expect white bread to be quite good
there<02:10:15.920><c> we</c><02:10:16.079><c> go</c>

02:10:19.669 --> 02:10:19.679 align:start position:0%
 
 

02:10:19.679 --> 02:10:21.990 align:start position:0%
 
um

02:10:21.990 --> 02:10:22.000 align:start position:0%
um
 

02:10:22.000 --> 02:10:23.109 align:start position:0%
um
and

02:10:23.109 --> 02:10:23.119 align:start position:0%
and
 

02:10:23.119 --> 02:10:24.310 align:start position:0%
and
that's<02:10:23.440><c> it</c>

02:10:24.310 --> 02:10:24.320 align:start position:0%
that's it
 

02:10:24.320 --> 02:10:25.830 align:start position:0%
that's it
okay<02:10:24.560><c> so</c><02:10:24.719><c> this</c><02:10:24.880><c> is</c><02:10:24.960><c> kind</c><02:10:25.040><c> of</c><02:10:25.199><c> embarrassing</c><02:10:25.679><c> but</c>

02:10:25.830 --> 02:10:25.840 align:start position:0%
okay so this is kind of embarrassing but
 

02:10:25.840 --> 02:10:28.229 align:start position:0%
okay so this is kind of embarrassing but
we<02:10:26.000><c> actually</c><02:10:26.239><c> have</c><02:10:26.400><c> a</c><02:10:26.560><c> really</c><02:10:26.880><c> terrible</c><02:10:27.280><c> bug</c>

02:10:28.229 --> 02:10:28.239 align:start position:0%
we actually have a really terrible bug
 

02:10:28.239 --> 02:10:31.030 align:start position:0%
we actually have a really terrible bug
in<02:10:28.400><c> here</c><02:10:29.119><c> and</c><02:10:29.360><c> it's</c><02:10:29.520><c> a</c><02:10:29.679><c> subtle</c><02:10:30.000><c> bug</c><02:10:30.639><c> and</c><02:10:30.800><c> it's</c><02:10:30.960><c> a</c>

02:10:31.030 --> 02:10:31.040 align:start position:0%
in here and it's a subtle bug and it's a
 

02:10:31.040 --> 02:10:33.189 align:start position:0%
in here and it's a subtle bug and it's a
very<02:10:31.280><c> common</c><02:10:31.679><c> bug</c><02:10:32.320><c> and</c><02:10:32.480><c> i</c><02:10:32.560><c> can't</c><02:10:32.719><c> believe</c><02:10:33.040><c> i've</c>

02:10:33.189 --> 02:10:33.199 align:start position:0%
very common bug and i can't believe i've
 

02:10:33.199 --> 02:10:36.310 align:start position:0%
very common bug and i can't believe i've
done<02:10:33.440><c> it</c><02:10:33.599><c> for</c><02:10:33.840><c> the</c><02:10:34.079><c> 20th</c><02:10:34.480><c> time</c><02:10:34.719><c> in</c><02:10:34.800><c> my</c><02:10:34.960><c> life</c>

02:10:36.310 --> 02:10:36.320 align:start position:0%
done it for the 20th time in my life
 

02:10:36.320 --> 02:10:38.149 align:start position:0%
done it for the 20th time in my life
especially<02:10:36.719><c> on</c><02:10:36.800><c> camera</c><02:10:37.520><c> and</c><02:10:37.679><c> i</c><02:10:37.760><c> could</c><02:10:37.920><c> have</c>

02:10:38.149 --> 02:10:38.159 align:start position:0%
especially on camera and i could have
 

02:10:38.159 --> 02:10:39.750 align:start position:0%
especially on camera and i could have
reshot<02:10:38.639><c> the</c><02:10:38.719><c> whole</c><02:10:38.960><c> thing</c><02:10:39.119><c> but</c><02:10:39.280><c> i</c><02:10:39.360><c> think</c><02:10:39.599><c> it's</c>

02:10:39.750 --> 02:10:39.760 align:start position:0%
reshot the whole thing but i think it's
 

02:10:39.760 --> 02:10:41.830 align:start position:0%
reshot the whole thing but i think it's
pretty<02:10:39.920><c> funny</c><02:10:40.639><c> and</c><02:10:40.960><c> you</c><02:10:41.119><c> know</c><02:10:41.280><c> you</c><02:10:41.360><c> get</c><02:10:41.520><c> to</c>

02:10:41.830 --> 02:10:41.840 align:start position:0%
pretty funny and you know you get to
 

02:10:41.840 --> 02:10:44.470 align:start position:0%
pretty funny and you know you get to
appreciate<02:10:42.320><c> a</c><02:10:42.400><c> bit</c><02:10:43.119><c> what</c><02:10:43.440><c> um</c><02:10:44.000><c> working</c><02:10:44.320><c> with</c>

02:10:44.470 --> 02:10:44.480 align:start position:0%
appreciate a bit what um working with
 

02:10:44.480 --> 02:10:45.750 align:start position:0%
appreciate a bit what um working with
neural<02:10:44.719><c> nets</c><02:10:44.880><c> maybe</c>

02:10:45.750 --> 02:10:45.760 align:start position:0%
neural nets maybe
 

02:10:45.760 --> 02:10:47.589 align:start position:0%
neural nets maybe
is<02:10:45.920><c> like</c><02:10:46.079><c> sometimes</c>

02:10:47.589 --> 02:10:47.599 align:start position:0%
is like sometimes
 

02:10:47.599 --> 02:10:50.229 align:start position:0%
is like sometimes
we<02:10:47.840><c> are</c><02:10:48.000><c> guilty</c><02:10:48.639><c> of</c>

02:10:50.229 --> 02:10:50.239 align:start position:0%
we are guilty of
 

02:10:50.239 --> 02:10:52.790 align:start position:0%
we are guilty of
come<02:10:50.560><c> bug</c><02:10:51.199><c> i've</c><02:10:51.360><c> actually</c><02:10:51.679><c> tweeted</c>

02:10:52.790 --> 02:10:52.800 align:start position:0%
come bug i've actually tweeted
 

02:10:52.800 --> 02:10:54.629 align:start position:0%
come bug i've actually tweeted
the<02:10:52.880><c> most</c><02:10:53.199><c> common</c><02:10:53.520><c> neural</c><02:10:53.760><c> net</c><02:10:54.000><c> mistakes</c><02:10:54.560><c> a</c>

02:10:54.629 --> 02:10:54.639 align:start position:0%
the most common neural net mistakes a
 

02:10:54.639 --> 02:10:56.629 align:start position:0%
the most common neural net mistakes a
long<02:10:54.880><c> time</c><02:10:55.040><c> ago</c><02:10:55.280><c> now</c>

02:10:56.629 --> 02:10:56.639 align:start position:0%
long time ago now
 

02:10:56.639 --> 02:10:57.910 align:start position:0%
long time ago now
uh<02:10:57.119><c> and</c>

02:10:57.910 --> 02:10:57.920 align:start position:0%
uh and
 

02:10:57.920 --> 02:10:59.510 align:start position:0%
uh and
i'm<02:10:58.079><c> not</c><02:10:58.320><c> really</c>

02:10:59.510 --> 02:10:59.520 align:start position:0%
i'm not really
 

02:10:59.520 --> 02:11:01.669 align:start position:0%
i'm not really
gonna<02:10:59.760><c> explain</c><02:11:00.159><c> any</c><02:11:00.320><c> of</c><02:11:00.400><c> these</c><02:11:00.800><c> except</c><02:11:01.119><c> for</c><02:11:01.440><c> we</c>

02:11:01.669 --> 02:11:01.679 align:start position:0%
gonna explain any of these except for we
 

02:11:01.679 --> 02:11:03.750 align:start position:0%
gonna explain any of these except for we
are<02:11:01.760><c> guilty</c><02:11:02.159><c> of</c><02:11:02.239><c> number</c><02:11:02.480><c> three</c><02:11:03.119><c> you</c><02:11:03.280><c> forgot</c><02:11:03.599><c> to</c>

02:11:03.750 --> 02:11:03.760 align:start position:0%
are guilty of number three you forgot to
 

02:11:03.760 --> 02:11:04.870 align:start position:0%
are guilty of number three you forgot to
zero<02:11:04.079><c> grad</c>

02:11:04.870 --> 02:11:04.880 align:start position:0%
zero grad
 

02:11:04.880 --> 02:11:09.430 align:start position:0%
zero grad
before<02:11:05.199><c> that</c><02:11:05.440><c> backward</c><02:11:06.320><c> what</c><02:11:06.480><c> is</c><02:11:06.639><c> that</c>

02:11:09.430 --> 02:11:09.440 align:start position:0%
 
 

02:11:09.440 --> 02:11:10.709 align:start position:0%
 
basically<02:11:09.840><c> what's</c><02:11:10.000><c> happening</c><02:11:10.400><c> and</c><02:11:10.560><c> it's</c><02:11:10.639><c> a</c>

02:11:10.709 --> 02:11:10.719 align:start position:0%
basically what's happening and it's a
 

02:11:10.719 --> 02:11:11.990 align:start position:0%
basically what's happening and it's a
subtle<02:11:10.960><c> bug</c><02:11:11.199><c> and</c><02:11:11.280><c> i'm</c><02:11:11.360><c> not</c><02:11:11.520><c> sure</c><02:11:11.599><c> if</c><02:11:11.760><c> you</c><02:11:11.840><c> saw</c>

02:11:11.990 --> 02:11:12.000 align:start position:0%
subtle bug and i'm not sure if you saw
 

02:11:12.000 --> 02:11:12.790 align:start position:0%
subtle bug and i'm not sure if you saw
it

02:11:12.790 --> 02:11:12.800 align:start position:0%
it
 

02:11:12.800 --> 02:11:14.390 align:start position:0%
it
is<02:11:13.040><c> that</c>

02:11:14.390 --> 02:11:14.400 align:start position:0%
is that
 

02:11:14.400 --> 02:11:15.669 align:start position:0%
is that
all<02:11:14.560><c> of</c><02:11:14.639><c> these</c>

02:11:15.669 --> 02:11:15.679 align:start position:0%
all of these
 

02:11:15.679 --> 02:11:17.750 align:start position:0%
all of these
weights<02:11:16.000><c> here</c><02:11:16.480><c> have</c><02:11:16.639><c> a</c><02:11:16.719><c> dot</c><02:11:16.960><c> data</c><02:11:17.280><c> and</c><02:11:17.440><c> a</c><02:11:17.520><c> dot</c>

02:11:17.750 --> 02:11:17.760 align:start position:0%
weights here have a dot data and a dot
 

02:11:17.760 --> 02:11:19.270 align:start position:0%
weights here have a dot data and a dot
grad

02:11:19.270 --> 02:11:19.280 align:start position:0%
grad
 

02:11:19.280 --> 02:11:22.709 align:start position:0%
grad
and<02:11:19.920><c> that</c><02:11:20.159><c> grad</c><02:11:20.400><c> starts</c><02:11:20.719><c> at</c><02:11:20.800><c> zero</c>

02:11:22.709 --> 02:11:22.719 align:start position:0%
and that grad starts at zero
 

02:11:22.719 --> 02:11:24.310 align:start position:0%
and that grad starts at zero
and<02:11:22.800><c> then</c><02:11:22.960><c> we</c><02:11:23.119><c> do</c><02:11:23.280><c> backward</c><02:11:23.760><c> and</c><02:11:23.840><c> we</c><02:11:24.000><c> fill</c><02:11:24.239><c> in</c>

02:11:24.310 --> 02:11:24.320 align:start position:0%
and then we do backward and we fill in
 

02:11:24.320 --> 02:11:25.910 align:start position:0%
and then we do backward and we fill in
the<02:11:24.480><c> gradients</c>

02:11:25.910 --> 02:11:25.920 align:start position:0%
the gradients
 

02:11:25.920 --> 02:11:27.750 align:start position:0%
the gradients
and<02:11:26.079><c> then</c><02:11:26.239><c> we</c><02:11:26.400><c> do</c><02:11:26.480><c> an</c><02:11:26.639><c> update</c><02:11:26.960><c> on</c><02:11:27.040><c> the</c><02:11:27.119><c> data</c><02:11:27.520><c> but</c>

02:11:27.750 --> 02:11:27.760 align:start position:0%
and then we do an update on the data but
 

02:11:27.760 --> 02:11:29.750 align:start position:0%
and then we do an update on the data but
we<02:11:27.920><c> don't</c><02:11:28.159><c> flush</c><02:11:28.719><c> the</c><02:11:28.880><c> grad</c>

02:11:29.750 --> 02:11:29.760 align:start position:0%
we don't flush the grad
 

02:11:29.760 --> 02:11:31.589 align:start position:0%
we don't flush the grad
it<02:11:29.920><c> stays</c><02:11:30.320><c> there</c>

02:11:31.589 --> 02:11:31.599 align:start position:0%
it stays there
 

02:11:31.599 --> 02:11:33.430 align:start position:0%
it stays there
so<02:11:31.840><c> when</c><02:11:32.000><c> we</c><02:11:32.079><c> do</c><02:11:32.239><c> the</c><02:11:32.400><c> second</c>

02:11:33.430 --> 02:11:33.440 align:start position:0%
so when we do the second
 

02:11:33.440 --> 02:11:35.430 align:start position:0%
so when we do the second
forward<02:11:33.760><c> pass</c><02:11:34.079><c> and</c><02:11:34.159><c> we</c><02:11:34.320><c> do</c><02:11:34.480><c> backward</c><02:11:34.880><c> again</c>

02:11:35.430 --> 02:11:35.440 align:start position:0%
forward pass and we do backward again
 

02:11:35.440 --> 02:11:36.870 align:start position:0%
forward pass and we do backward again
remember<02:11:35.760><c> that</c><02:11:36.000><c> all</c><02:11:36.159><c> the</c><02:11:36.400><c> backward</c>

02:11:36.870 --> 02:11:36.880 align:start position:0%
remember that all the backward
 

02:11:36.880 --> 02:11:39.430 align:start position:0%
remember that all the backward
operations<02:11:37.440><c> do</c><02:11:37.599><c> a</c><02:11:37.679><c> plus</c><02:11:38.000><c> equals</c><02:11:38.320><c> on</c><02:11:38.400><c> the</c><02:11:38.480><c> grad</c>

02:11:39.430 --> 02:11:39.440 align:start position:0%
operations do a plus equals on the grad
 

02:11:39.440 --> 02:11:41.270 align:start position:0%
operations do a plus equals on the grad
and<02:11:39.599><c> so</c><02:11:39.840><c> these</c><02:11:40.000><c> gradients</c><02:11:40.560><c> just</c>

02:11:41.270 --> 02:11:41.280 align:start position:0%
and so these gradients just
 

02:11:41.280 --> 02:11:44.870 align:start position:0%
and so these gradients just
add<02:11:41.599><c> up</c><02:11:42.000><c> and</c><02:11:42.079><c> they</c><02:11:42.320><c> never</c><02:11:42.560><c> get</c><02:11:42.719><c> reset</c><02:11:43.440><c> to</c><02:11:43.679><c> zero</c>

02:11:44.870 --> 02:11:44.880 align:start position:0%
add up and they never get reset to zero
 

02:11:44.880 --> 02:11:47.510 align:start position:0%
add up and they never get reset to zero
so<02:11:45.119><c> basically</c><02:11:45.440><c> we</c><02:11:45.599><c> didn't</c><02:11:46.159><c> zero</c><02:11:46.480><c> grad</c><02:11:47.280><c> so</c>

02:11:47.510 --> 02:11:47.520 align:start position:0%
so basically we didn't zero grad so
 

02:11:47.520 --> 02:11:50.069 align:start position:0%
so basically we didn't zero grad so
here's<02:11:47.760><c> how</c><02:11:47.920><c> we</c><02:11:48.159><c> zero</c><02:11:48.400><c> grad</c><02:11:48.880><c> before</c>

02:11:50.069 --> 02:11:50.079 align:start position:0%
here's how we zero grad before
 

02:11:50.079 --> 02:11:51.109 align:start position:0%
here's how we zero grad before
backward

02:11:51.109 --> 02:11:51.119 align:start position:0%
backward
 

02:11:51.119 --> 02:11:52.149 align:start position:0%
backward
we<02:11:51.280><c> need</c><02:11:51.360><c> to</c><02:11:51.520><c> iterate</c><02:11:51.840><c> over</c><02:11:52.000><c> all</c><02:11:52.079><c> the</c>

02:11:52.149 --> 02:11:52.159 align:start position:0%
we need to iterate over all the
 

02:11:52.159 --> 02:11:54.149 align:start position:0%
we need to iterate over all the
parameters

02:11:54.149 --> 02:11:54.159 align:start position:0%
parameters
 

02:11:54.159 --> 02:11:56.390 align:start position:0%
parameters
and<02:11:54.320><c> we</c><02:11:54.480><c> need</c><02:11:54.560><c> to</c><02:11:54.719><c> make</c><02:11:54.880><c> sure</c><02:11:55.199><c> that</c><02:11:55.520><c> p</c><02:11:55.679><c> dot</c><02:11:55.920><c> grad</c>

02:11:56.390 --> 02:11:56.400 align:start position:0%
and we need to make sure that p dot grad
 

02:11:56.400 --> 02:11:58.629 align:start position:0%
and we need to make sure that p dot grad
is<02:11:56.639><c> set</c><02:11:56.800><c> to</c><02:11:56.960><c> zero</c>

02:11:58.629 --> 02:11:58.639 align:start position:0%
is set to zero
 

02:11:58.639 --> 02:12:00.870 align:start position:0%
is set to zero
we<02:11:58.800><c> need</c><02:11:58.960><c> to</c><02:11:59.040><c> reset</c><02:11:59.440><c> it</c><02:11:59.520><c> to</c><02:11:59.679><c> zero</c><02:12:00.400><c> just</c><02:12:00.639><c> like</c><02:12:00.800><c> it</c>

02:12:00.870 --> 02:12:00.880 align:start position:0%
we need to reset it to zero just like it
 

02:12:00.880 --> 02:12:02.709 align:start position:0%
we need to reset it to zero just like it
is<02:12:01.040><c> in</c><02:12:01.119><c> the</c><02:12:01.199><c> constructor</c>

02:12:02.709 --> 02:12:02.719 align:start position:0%
is in the constructor
 

02:12:02.719 --> 02:12:04.390 align:start position:0%
is in the constructor
so<02:12:02.960><c> remember</c><02:12:03.440><c> all</c><02:12:03.599><c> the</c><02:12:03.679><c> way</c><02:12:03.920><c> here</c><02:12:04.079><c> for</c><02:12:04.320><c> all</c>

02:12:04.390 --> 02:12:04.400 align:start position:0%
so remember all the way here for all
 

02:12:04.400 --> 02:12:07.350 align:start position:0%
so remember all the way here for all
these<02:12:04.560><c> value</c><02:12:04.880><c> nodes</c><02:12:05.599><c> grad</c><02:12:05.920><c> is</c><02:12:06.079><c> reset</c><02:12:06.400><c> to</c><02:12:06.560><c> zero</c>

02:12:07.350 --> 02:12:07.360 align:start position:0%
these value nodes grad is reset to zero
 

02:12:07.360 --> 02:12:09.270 align:start position:0%
these value nodes grad is reset to zero
and<02:12:07.520><c> then</c><02:12:07.760><c> all</c><02:12:07.840><c> these</c><02:12:08.320><c> backward</c><02:12:08.719><c> passes</c><02:12:09.040><c> do</c><02:12:09.199><c> a</c>

02:12:09.270 --> 02:12:09.280 align:start position:0%
and then all these backward passes do a
 

02:12:09.280 --> 02:12:11.270 align:start position:0%
and then all these backward passes do a
plus<02:12:09.520><c> equals</c><02:12:09.840><c> from</c><02:12:09.920><c> that</c><02:12:10.079><c> grad</c>

02:12:11.270 --> 02:12:11.280 align:start position:0%
plus equals from that grad
 

02:12:11.280 --> 02:12:13.350 align:start position:0%
plus equals from that grad
but<02:12:11.440><c> we</c><02:12:11.520><c> need</c><02:12:11.679><c> to</c><02:12:11.840><c> make</c><02:12:12.000><c> sure</c><02:12:12.239><c> that</c>

02:12:13.350 --> 02:12:13.360 align:start position:0%
but we need to make sure that
 

02:12:13.360 --> 02:12:15.910 align:start position:0%
but we need to make sure that
we<02:12:13.599><c> reset</c><02:12:14.480><c> these</c><02:12:14.719><c> graphs</c><02:12:14.960><c> to</c><02:12:15.119><c> zero</c><02:12:15.599><c> so</c><02:12:15.760><c> that</c>

02:12:15.910 --> 02:12:15.920 align:start position:0%
we reset these graphs to zero so that
 

02:12:15.920 --> 02:12:17.350 align:start position:0%
we reset these graphs to zero so that
when<02:12:16.079><c> we</c><02:12:16.159><c> do</c><02:12:16.320><c> backward</c>

02:12:17.350 --> 02:12:17.360 align:start position:0%
when we do backward
 

02:12:17.360 --> 02:12:18.870 align:start position:0%
when we do backward
all<02:12:17.520><c> of</c><02:12:17.599><c> them</c><02:12:17.760><c> start</c><02:12:18.000><c> at</c><02:12:18.079><c> zero</c><02:12:18.400><c> and</c><02:12:18.480><c> the</c><02:12:18.639><c> actual</c>

02:12:18.870 --> 02:12:18.880 align:start position:0%
all of them start at zero and the actual
 

02:12:18.880 --> 02:12:21.910 align:start position:0%
all of them start at zero and the actual
backward<02:12:19.280><c> pass</c><02:12:19.920><c> accumulates</c><02:12:21.040><c> um</c>

02:12:21.910 --> 02:12:21.920 align:start position:0%
backward pass accumulates um
 

02:12:21.920 --> 02:12:25.589 align:start position:0%
backward pass accumulates um
the<02:12:22.159><c> loss</c><02:12:22.719><c> derivatives</c><02:12:23.440><c> into</c><02:12:24.159><c> the</c><02:12:24.320><c> grads</c>

02:12:25.589 --> 02:12:25.599 align:start position:0%
the loss derivatives into the grads
 

02:12:25.599 --> 02:12:28.870 align:start position:0%
the loss derivatives into the grads
so<02:12:25.840><c> this</c><02:12:26.079><c> is</c><02:12:26.400><c> zero</c><02:12:26.719><c> grad</c><02:12:26.960><c> in</c><02:12:27.040><c> pytorch</c>

02:12:28.870 --> 02:12:28.880 align:start position:0%
so this is zero grad in pytorch
 

02:12:28.880 --> 02:12:30.149 align:start position:0%
so this is zero grad in pytorch
and<02:12:29.199><c> uh</c>

02:12:30.149 --> 02:12:30.159 align:start position:0%
and uh
 

02:12:30.159 --> 02:12:31.589 align:start position:0%
and uh
we<02:12:30.320><c> will</c><02:12:30.480><c> slightly</c><02:12:31.040><c> get</c><02:12:31.280><c> we'll</c><02:12:31.440><c> get</c><02:12:31.520><c> a</c>

02:12:31.589 --> 02:12:31.599 align:start position:0%
we will slightly get we'll get a
 

02:12:31.599 --> 02:12:33.270 align:start position:0%
we will slightly get we'll get a
slightly<02:12:31.920><c> different</c><02:12:32.159><c> optimization</c><02:12:33.119><c> let's</c>

02:12:33.270 --> 02:12:33.280 align:start position:0%
slightly different optimization let's
 

02:12:33.280 --> 02:12:34.870 align:start position:0%
slightly different optimization let's
reset<02:12:33.599><c> the</c><02:12:33.760><c> neural</c><02:12:34.079><c> net</c>

02:12:34.870 --> 02:12:34.880 align:start position:0%
reset the neural net
 

02:12:34.880 --> 02:12:37.270 align:start position:0%
reset the neural net
the<02:12:35.040><c> data</c><02:12:35.280><c> is</c><02:12:35.360><c> the</c><02:12:35.520><c> same</c><02:12:36.159><c> this</c><02:12:36.400><c> is</c><02:12:36.480><c> now</c><02:12:36.719><c> i</c><02:12:36.960><c> think</c>

02:12:37.270 --> 02:12:37.280 align:start position:0%
the data is the same this is now i think
 

02:12:37.280 --> 02:12:38.470 align:start position:0%
the data is the same this is now i think
correct

02:12:38.470 --> 02:12:38.480 align:start position:0%
correct
 

02:12:38.480 --> 02:12:39.990 align:start position:0%
correct
and<02:12:38.639><c> we</c><02:12:38.719><c> get</c><02:12:38.880><c> a</c><02:12:39.040><c> much</c><02:12:39.199><c> more</c>

02:12:39.990 --> 02:12:40.000 align:start position:0%
and we get a much more
 

02:12:40.000 --> 02:12:42.390 align:start position:0%
and we get a much more
you<02:12:40.079><c> know</c><02:12:40.239><c> we</c><02:12:40.320><c> get</c><02:12:40.480><c> a</c><02:12:40.560><c> much</c><02:12:40.719><c> more</c>

02:12:42.390 --> 02:12:42.400 align:start position:0%
you know we get a much more
 

02:12:42.400 --> 02:12:44.069 align:start position:0%
you know we get a much more
slower<02:12:42.880><c> descent</c>

02:12:44.069 --> 02:12:44.079 align:start position:0%
slower descent
 

02:12:44.079 --> 02:12:46.229 align:start position:0%
slower descent
we<02:12:44.239><c> still</c><02:12:44.480><c> end</c><02:12:44.639><c> up</c><02:12:44.719><c> with</c><02:12:45.040><c> pretty</c><02:12:45.199><c> good</c><02:12:45.520><c> results</c>

02:12:46.229 --> 02:12:46.239 align:start position:0%
we still end up with pretty good results
 

02:12:46.239 --> 02:12:48.550 align:start position:0%
we still end up with pretty good results
and<02:12:46.320><c> we</c><02:12:46.480><c> can</c><02:12:46.639><c> continue</c><02:12:47.040><c> this</c><02:12:47.280><c> a</c><02:12:47.360><c> bit</c><02:12:47.520><c> more</c>

02:12:48.550 --> 02:12:48.560 align:start position:0%
and we can continue this a bit more
 

02:12:48.560 --> 02:12:50.229 align:start position:0%
and we can continue this a bit more
to<02:12:48.719><c> get</c><02:12:48.880><c> down</c><02:12:49.199><c> lower</c>

02:12:50.229 --> 02:12:50.239 align:start position:0%
to get down lower
 

02:12:50.239 --> 02:12:51.350 align:start position:0%
to get down lower
and<02:12:50.400><c> lower</c>

02:12:51.350 --> 02:12:51.360 align:start position:0%
and lower
 

02:12:51.360 --> 02:12:54.149 align:start position:0%
and lower
and<02:12:51.520><c> lower</c>

02:12:54.149 --> 02:12:54.159 align:start position:0%
 
 

02:12:54.159 --> 02:12:56.229 align:start position:0%
 
yeah

02:12:56.229 --> 02:12:56.239 align:start position:0%
yeah
 

02:12:56.239 --> 02:12:57.430 align:start position:0%
yeah
so<02:12:56.400><c> the</c><02:12:56.480><c> only</c><02:12:56.719><c> reason</c><02:12:56.960><c> that</c><02:12:57.040><c> the</c><02:12:57.119><c> previous</c>

02:12:57.430 --> 02:12:57.440 align:start position:0%
so the only reason that the previous
 

02:12:57.440 --> 02:12:59.750 align:start position:0%
so the only reason that the previous
thing<02:12:57.679><c> worked</c><02:12:57.920><c> it's</c><02:12:58.320><c> extremely</c><02:12:58.719><c> buggy</c><02:12:59.280><c> um</c><02:12:59.599><c> the</c>

02:12:59.750 --> 02:12:59.760 align:start position:0%
thing worked it's extremely buggy um the
 

02:12:59.760 --> 02:13:03.189 align:start position:0%
thing worked it's extremely buggy um the
only<02:12:59.920><c> reason</c><02:13:00.159><c> that</c><02:13:00.320><c> worked</c><02:13:01.040><c> is</c><02:13:01.280><c> that</c>

02:13:03.189 --> 02:13:03.199 align:start position:0%
only reason that worked is that
 

02:13:03.199 --> 02:13:05.750 align:start position:0%
only reason that worked is that
this<02:13:03.440><c> is</c><02:13:03.520><c> a</c><02:13:03.599><c> very</c><02:13:03.840><c> very</c><02:13:04.159><c> simple</c><02:13:04.560><c> problem</c>

02:13:05.750 --> 02:13:05.760 align:start position:0%
this is a very very simple problem
 

02:13:05.760 --> 02:13:07.750 align:start position:0%
this is a very very simple problem
and<02:13:06.159><c> it's</c><02:13:06.400><c> very</c><02:13:06.639><c> easy</c><02:13:06.960><c> for</c><02:13:07.119><c> this</c><02:13:07.280><c> neural</c><02:13:07.520><c> net</c>

02:13:07.750 --> 02:13:07.760 align:start position:0%
and it's very easy for this neural net
 

02:13:07.760 --> 02:13:09.350 align:start position:0%
and it's very easy for this neural net
to<02:13:07.920><c> fit</c><02:13:08.159><c> this</c><02:13:08.320><c> data</c>

02:13:09.350 --> 02:13:09.360 align:start position:0%
to fit this data
 

02:13:09.360 --> 02:13:12.069 align:start position:0%
to fit this data
and<02:13:09.520><c> so</c><02:13:10.079><c> the</c><02:13:10.239><c> grads</c><02:13:10.639><c> ended</c><02:13:10.960><c> up</c><02:13:11.119><c> accumulating</c>

02:13:12.069 --> 02:13:12.079 align:start position:0%
and so the grads ended up accumulating
 

02:13:12.079 --> 02:13:13.750 align:start position:0%
and so the grads ended up accumulating
and<02:13:12.239><c> it</c><02:13:12.400><c> effectively</c><02:13:12.960><c> gave</c><02:13:13.199><c> us</c><02:13:13.360><c> a</c><02:13:13.440><c> massive</c>

02:13:13.750 --> 02:13:13.760 align:start position:0%
and it effectively gave us a massive
 

02:13:13.760 --> 02:13:16.069 align:start position:0%
and it effectively gave us a massive
step<02:13:14.079><c> size</c><02:13:14.719><c> and</c><02:13:15.040><c> it</c><02:13:15.280><c> made</c><02:13:15.520><c> us</c><02:13:15.599><c> converge</c>

02:13:16.069 --> 02:13:16.079 align:start position:0%
step size and it made us converge
 

02:13:16.079 --> 02:13:19.350 align:start position:0%
step size and it made us converge
extremely<02:13:16.560><c> fast</c>

02:13:19.350 --> 02:13:19.360 align:start position:0%
 
 

02:13:19.360 --> 02:13:20.870 align:start position:0%
 
but<02:13:19.520><c> basically</c><02:13:20.000><c> now</c><02:13:20.159><c> we</c><02:13:20.239><c> have</c><02:13:20.320><c> to</c><02:13:20.400><c> do</c><02:13:20.560><c> more</c>

02:13:20.870 --> 02:13:20.880 align:start position:0%
but basically now we have to do more
 

02:13:20.880 --> 02:13:24.310 align:start position:0%
but basically now we have to do more
steps<02:13:21.599><c> to</c><02:13:21.760><c> get</c><02:13:22.079><c> to</c><02:13:22.320><c> very</c><02:13:22.639><c> low</c><02:13:22.800><c> values</c><02:13:23.199><c> of</c><02:13:23.280><c> loss</c>

02:13:24.310 --> 02:13:24.320 align:start position:0%
steps to get to very low values of loss
 

02:13:24.320 --> 02:13:26.709 align:start position:0%
steps to get to very low values of loss
and<02:13:24.880><c> get</c><02:13:25.119><c> wipe</c><02:13:25.360><c> red</c><02:13:25.520><c> to</c><02:13:25.679><c> be</c><02:13:25.760><c> really</c><02:13:26.000><c> good</c><02:13:26.560><c> we</c>

02:13:26.709 --> 02:13:26.719 align:start position:0%
and get wipe red to be really good we
 

02:13:26.719 --> 02:13:27.910 align:start position:0%
and get wipe red to be really good we
can<02:13:26.880><c> try</c><02:13:27.199><c> to</c>

02:13:27.910 --> 02:13:27.920 align:start position:0%
can try to
 

02:13:27.920 --> 02:13:34.310 align:start position:0%
can try to
step<02:13:28.239><c> a</c><02:13:28.320><c> bit</c><02:13:28.719><c> greater</c>

02:13:34.310 --> 02:13:34.320 align:start position:0%
 
 

02:13:34.320 --> 02:13:36.069 align:start position:0%
 
yeah<02:13:34.960><c> we're</c><02:13:35.119><c> gonna</c><02:13:35.280><c> get</c><02:13:35.440><c> closer</c><02:13:35.679><c> and</c><02:13:35.760><c> closer</c>

02:13:36.069 --> 02:13:36.079 align:start position:0%
yeah we're gonna get closer and closer
 

02:13:36.079 --> 02:13:38.470 align:start position:0%
yeah we're gonna get closer and closer
to<02:13:36.239><c> one</c><02:13:36.480><c> minus</c><02:13:36.880><c> one</c><02:13:37.119><c> and</c><02:13:37.199><c> one</c>

02:13:38.470 --> 02:13:38.480 align:start position:0%
to one minus one and one
 

02:13:38.480 --> 02:13:39.830 align:start position:0%
to one minus one and one
so

02:13:39.830 --> 02:13:39.840 align:start position:0%
so
 

02:13:39.840 --> 02:13:41.589 align:start position:0%
so
working<02:13:40.159><c> with</c><02:13:40.239><c> neural</c><02:13:40.480><c> nets</c><02:13:40.639><c> is</c><02:13:40.719><c> sometimes</c>

02:13:41.589 --> 02:13:41.599 align:start position:0%
working with neural nets is sometimes
 

02:13:41.599 --> 02:13:43.270 align:start position:0%
working with neural nets is sometimes
tricky<02:13:42.000><c> because</c>

02:13:43.270 --> 02:13:43.280 align:start position:0%
tricky because
 

02:13:43.280 --> 02:13:44.950 align:start position:0%
tricky because
uh

02:13:44.950 --> 02:13:44.960 align:start position:0%
uh
 

02:13:44.960 --> 02:13:47.030 align:start position:0%
uh
you<02:13:45.119><c> may</c><02:13:45.280><c> have</c><02:13:45.520><c> lots</c><02:13:45.760><c> of</c><02:13:45.840><c> bugs</c><02:13:46.079><c> in</c><02:13:46.159><c> the</c><02:13:46.320><c> code</c>

02:13:47.030 --> 02:13:47.040 align:start position:0%
you may have lots of bugs in the code
 

02:13:47.040 --> 02:13:49.830 align:start position:0%
you may have lots of bugs in the code
and<02:13:47.520><c> uh</c><02:13:48.320><c> your</c><02:13:48.480><c> network</c><02:13:48.800><c> might</c><02:13:48.960><c> actually</c><02:13:49.280><c> work</c>

02:13:49.830 --> 02:13:49.840 align:start position:0%
and uh your network might actually work
 

02:13:49.840 --> 02:13:51.270 align:start position:0%
and uh your network might actually work
just<02:13:50.000><c> like</c><02:13:50.159><c> ours</c><02:13:50.400><c> worked</c>

02:13:51.270 --> 02:13:51.280 align:start position:0%
just like ours worked
 

02:13:51.280 --> 02:13:53.270 align:start position:0%
just like ours worked
but<02:13:51.520><c> chances</c><02:13:51.920><c> are</c><02:13:52.079><c> is</c><02:13:52.239><c> that</c><02:13:52.560><c> if</c><02:13:52.719><c> we</c><02:13:52.800><c> had</c><02:13:52.960><c> a</c><02:13:53.040><c> more</c>

02:13:53.270 --> 02:13:53.280 align:start position:0%
but chances are is that if we had a more
 

02:13:53.280 --> 02:13:55.669 align:start position:0%
but chances are is that if we had a more
complex<02:13:53.760><c> problem</c><02:13:54.639><c> then</c><02:13:54.880><c> actually</c><02:13:55.199><c> this</c><02:13:55.440><c> bug</c>

02:13:55.669 --> 02:13:55.679 align:start position:0%
complex problem then actually this bug
 

02:13:55.679 --> 02:13:57.510 align:start position:0%
complex problem then actually this bug
would<02:13:55.840><c> have</c><02:13:56.239><c> made</c><02:13:56.480><c> us</c><02:13:56.639><c> not</c><02:13:56.800><c> optimize</c><02:13:57.199><c> the</c><02:13:57.280><c> loss</c>

02:13:57.510 --> 02:13:57.520 align:start position:0%
would have made us not optimize the loss
 

02:13:57.520 --> 02:13:59.109 align:start position:0%
would have made us not optimize the loss
very<02:13:57.679><c> well</c><02:13:58.079><c> and</c><02:13:58.239><c> we</c><02:13:58.320><c> were</c><02:13:58.560><c> only</c><02:13:58.800><c> able</c><02:13:58.960><c> to</c><02:13:59.040><c> get</c>

02:13:59.109 --> 02:13:59.119 align:start position:0%
very well and we were only able to get
 

02:13:59.119 --> 02:14:01.589 align:start position:0%
very well and we were only able to get
away<02:13:59.360><c> with</c><02:13:59.520><c> it</c><02:13:59.599><c> because</c>

02:14:01.589 --> 02:14:01.599 align:start position:0%
away with it because
 

02:14:01.599 --> 02:14:03.350 align:start position:0%
away with it because
the<02:14:01.760><c> problem</c><02:14:02.079><c> is</c><02:14:02.159><c> very</c><02:14:02.320><c> simple</c>

02:14:03.350 --> 02:14:03.360 align:start position:0%
the problem is very simple
 

02:14:03.360 --> 02:14:04.950 align:start position:0%
the problem is very simple
so<02:14:03.520><c> let's</c><02:14:03.679><c> now</c><02:14:03.840><c> bring</c><02:14:04.079><c> everything</c><02:14:04.400><c> together</c>

02:14:04.950 --> 02:14:04.960 align:start position:0%
so let's now bring everything together
 

02:14:04.960 --> 02:14:06.870 align:start position:0%
so let's now bring everything together
and<02:14:05.199><c> summarize</c><02:14:05.599><c> what</c><02:14:05.679><c> we</c><02:14:05.840><c> learned</c>

02:14:06.870 --> 02:14:06.880 align:start position:0%
and summarize what we learned
 

02:14:06.880 --> 02:14:09.109 align:start position:0%
and summarize what we learned
what<02:14:07.119><c> are</c><02:14:07.280><c> neural</c><02:14:07.599><c> nets</c><02:14:08.239><c> neural</c><02:14:08.480><c> nets</c><02:14:08.960><c> are</c>

02:14:09.109 --> 02:14:09.119 align:start position:0%
what are neural nets neural nets are
 

02:14:09.119 --> 02:14:11.430 align:start position:0%
what are neural nets neural nets are
these<02:14:09.360><c> mathematical</c><02:14:09.920><c> expressions</c>

02:14:11.430 --> 02:14:11.440 align:start position:0%
these mathematical expressions
 

02:14:11.440 --> 02:14:13.030 align:start position:0%
these mathematical expressions
fairly<02:14:11.760><c> simple</c><02:14:12.000><c> mathematical</c><02:14:12.560><c> expressions</c>

02:14:13.030 --> 02:14:13.040 align:start position:0%
fairly simple mathematical expressions
 

02:14:13.040 --> 02:14:15.510 align:start position:0%
fairly simple mathematical expressions
in<02:14:13.119><c> the</c><02:14:13.199><c> case</c><02:14:13.440><c> of</c><02:14:13.599><c> multi-layer</c><02:14:14.079><c> perceptron</c>

02:14:15.510 --> 02:14:15.520 align:start position:0%
in the case of multi-layer perceptron
 

02:14:15.520 --> 02:14:16.550 align:start position:0%
in the case of multi-layer perceptron
that<02:14:15.760><c> take</c>

02:14:16.550 --> 02:14:16.560 align:start position:0%
that take
 

02:14:16.560 --> 02:14:19.270 align:start position:0%
that take
input<02:14:17.040><c> as</c><02:14:17.199><c> the</c><02:14:17.360><c> data</c><02:14:18.000><c> and</c><02:14:18.079><c> they</c><02:14:18.239><c> take</c><02:14:18.560><c> input</c>

02:14:19.270 --> 02:14:19.280 align:start position:0%
input as the data and they take input
 

02:14:19.280 --> 02:14:20.709 align:start position:0%
input as the data and they take input
the<02:14:19.440><c> weights</c><02:14:19.920><c> and</c><02:14:20.079><c> the</c><02:14:20.159><c> parameters</c><02:14:20.560><c> of</c><02:14:20.639><c> the</c>

02:14:20.709 --> 02:14:20.719 align:start position:0%
the weights and the parameters of the
 

02:14:20.719 --> 02:14:22.790 align:start position:0%
the weights and the parameters of the
neural<02:14:20.960><c> net</c><02:14:21.599><c> mathematical</c><02:14:22.239><c> expression</c><02:14:22.639><c> for</c>

02:14:22.790 --> 02:14:22.800 align:start position:0%
neural net mathematical expression for
 

02:14:22.800 --> 02:14:24.830 align:start position:0%
neural net mathematical expression for
the<02:14:22.960><c> forward</c><02:14:23.360><c> pass</c><02:14:24.079><c> followed</c><02:14:24.320><c> by</c><02:14:24.480><c> a</c><02:14:24.560><c> loss</c>

02:14:24.830 --> 02:14:24.840 align:start position:0%
the forward pass followed by a loss
 

02:14:24.840 --> 02:14:26.950 align:start position:0%
the forward pass followed by a loss
function<02:14:25.760><c> and</c><02:14:25.920><c> the</c><02:14:26.000><c> loss</c><02:14:26.239><c> function</c><02:14:26.639><c> tries</c><02:14:26.880><c> to</c>

02:14:26.950 --> 02:14:26.960 align:start position:0%
function and the loss function tries to
 

02:14:26.960 --> 02:14:29.350 align:start position:0%
function and the loss function tries to
measure<02:14:27.280><c> the</c><02:14:27.520><c> accuracy</c><02:14:28.079><c> of</c><02:14:28.159><c> the</c><02:14:28.320><c> predictions</c>

02:14:29.350 --> 02:14:29.360 align:start position:0%
measure the accuracy of the predictions
 

02:14:29.360 --> 02:14:31.669 align:start position:0%
measure the accuracy of the predictions
and<02:14:29.520><c> usually</c><02:14:29.920><c> the</c><02:14:30.079><c> loss</c><02:14:30.320><c> will</c><02:14:30.480><c> be</c><02:14:30.719><c> low</c><02:14:31.360><c> when</c>

02:14:31.669 --> 02:14:31.679 align:start position:0%
and usually the loss will be low when
 

02:14:31.679 --> 02:14:32.950 align:start position:0%
and usually the loss will be low when
your<02:14:31.840><c> predictions</c><02:14:32.400><c> are</c><02:14:32.480><c> matching</c><02:14:32.800><c> your</c>

02:14:32.950 --> 02:14:32.960 align:start position:0%
your predictions are matching your
 

02:14:32.960 --> 02:14:34.470 align:start position:0%
your predictions are matching your
targets<02:14:33.360><c> or</c><02:14:33.440><c> where</c><02:14:33.599><c> the</c><02:14:34.000><c> network</c><02:14:34.400><c> is</c>

02:14:34.470 --> 02:14:34.480 align:start position:0%
targets or where the network is
 

02:14:34.480 --> 02:14:37.270 align:start position:0%
targets or where the network is
basically<02:14:35.280><c> behaving</c><02:14:35.760><c> well</c><02:14:36.480><c> so</c><02:14:36.639><c> we</c><02:14:37.119><c> we</c>

02:14:37.270 --> 02:14:37.280 align:start position:0%
basically behaving well so we we
 

02:14:37.280 --> 02:14:38.790 align:start position:0%
basically behaving well so we we
manipulate<02:14:37.840><c> the</c><02:14:37.920><c> loss</c><02:14:38.159><c> function</c><02:14:38.480><c> so</c><02:14:38.639><c> that</c>

02:14:38.790 --> 02:14:38.800 align:start position:0%
manipulate the loss function so that
 

02:14:38.800 --> 02:14:40.709 align:start position:0%
manipulate the loss function so that
when<02:14:38.960><c> the</c><02:14:39.119><c> loss</c><02:14:39.440><c> is</c><02:14:39.520><c> low</c><02:14:40.079><c> the</c><02:14:40.239><c> network</c><02:14:40.639><c> is</c>

02:14:40.709 --> 02:14:40.719 align:start position:0%
when the loss is low the network is
 

02:14:40.719 --> 02:14:42.390 align:start position:0%
when the loss is low the network is
doing<02:14:40.880><c> what</c><02:14:41.040><c> you</c><02:14:41.199><c> want</c><02:14:41.440><c> it</c><02:14:41.520><c> to</c><02:14:41.679><c> do</c><02:14:42.000><c> on</c><02:14:42.159><c> your</c>

02:14:42.390 --> 02:14:42.400 align:start position:0%
doing what you want it to do on your
 

02:14:42.400 --> 02:14:43.990 align:start position:0%
doing what you want it to do on your
problem

02:14:43.990 --> 02:14:44.000 align:start position:0%
problem
 

02:14:44.000 --> 02:14:46.470 align:start position:0%
problem
and<02:14:44.159><c> then</c><02:14:44.400><c> we</c><02:14:44.639><c> backward</c><02:14:45.360><c> the</c><02:14:45.520><c> loss</c>

02:14:46.470 --> 02:14:46.480 align:start position:0%
and then we backward the loss
 

02:14:46.480 --> 02:14:48.790 align:start position:0%
and then we backward the loss
use<02:14:46.639><c> backpropagation</c><02:14:47.360><c> to</c><02:14:47.440><c> get</c><02:14:47.599><c> the</c><02:14:47.679><c> gradient</c>

02:14:48.790 --> 02:14:48.800 align:start position:0%
use backpropagation to get the gradient
 

02:14:48.800 --> 02:14:49.990 align:start position:0%
use backpropagation to get the gradient
and<02:14:48.880><c> then</c><02:14:49.040><c> we</c><02:14:49.119><c> know</c><02:14:49.280><c> how</c><02:14:49.440><c> to</c><02:14:49.520><c> tune</c><02:14:49.760><c> all</c><02:14:49.840><c> the</c>

02:14:49.990 --> 02:14:50.000 align:start position:0%
and then we know how to tune all the
 

02:14:50.000 --> 02:14:52.790 align:start position:0%
and then we know how to tune all the
parameters<02:14:50.480><c> to</c><02:14:50.800><c> decrease</c><02:14:51.199><c> the</c><02:14:51.360><c> loss</c><02:14:51.599><c> locally</c>

02:14:52.790 --> 02:14:52.800 align:start position:0%
parameters to decrease the loss locally
 

02:14:52.800 --> 02:14:54.229 align:start position:0%
parameters to decrease the loss locally
but<02:14:52.960><c> then</c><02:14:53.119><c> we</c><02:14:53.199><c> have</c><02:14:53.280><c> to</c><02:14:53.440><c> iterate</c><02:14:53.760><c> that</c><02:14:53.920><c> process</c>

02:14:54.229 --> 02:14:54.239 align:start position:0%
but then we have to iterate that process
 

02:14:54.239 --> 02:14:55.669 align:start position:0%
but then we have to iterate that process
many<02:14:54.480><c> times</c><02:14:54.800><c> in</c><02:14:54.880><c> what's</c><02:14:55.040><c> called</c><02:14:55.280><c> the</c><02:14:55.360><c> gradient</c>

02:14:55.669 --> 02:14:55.679 align:start position:0%
many times in what's called the gradient
 

02:14:55.679 --> 02:14:56.709 align:start position:0%
many times in what's called the gradient
descent

02:14:56.709 --> 02:14:56.719 align:start position:0%
descent
 

02:14:56.719 --> 02:14:58.310 align:start position:0%
descent
so<02:14:56.880><c> we</c><02:14:57.040><c> simply</c><02:14:57.520><c> follow</c><02:14:57.760><c> the</c><02:14:57.920><c> gradient</c>

02:14:58.310 --> 02:14:58.320 align:start position:0%
so we simply follow the gradient
 

02:14:58.320 --> 02:15:01.030 align:start position:0%
so we simply follow the gradient
information<02:14:59.199><c> and</c><02:14:59.520><c> that</c><02:14:59.760><c> minimizes</c><02:15:00.320><c> the</c><02:15:00.400><c> loss</c>

02:15:01.030 --> 02:15:01.040 align:start position:0%
information and that minimizes the loss
 

02:15:01.040 --> 02:15:02.310 align:start position:0%
information and that minimizes the loss
and<02:15:01.119><c> the</c><02:15:01.280><c> loss</c><02:15:01.520><c> is</c><02:15:01.599><c> arranged</c><02:15:01.920><c> so</c><02:15:02.079><c> that</c><02:15:02.159><c> when</c>

02:15:02.310 --> 02:15:02.320 align:start position:0%
and the loss is arranged so that when
 

02:15:02.320 --> 02:15:04.310 align:start position:0%
and the loss is arranged so that when
the<02:15:02.480><c> loss</c><02:15:02.719><c> is</c><02:15:02.880><c> minimized</c><02:15:03.679><c> the</c><02:15:03.760><c> network</c><02:15:04.159><c> is</c>

02:15:04.310 --> 02:15:04.320 align:start position:0%
the loss is minimized the network is
 

02:15:04.320 --> 02:15:06.830 align:start position:0%
the loss is minimized the network is
doing<02:15:04.480><c> what</c><02:15:04.639><c> you</c><02:15:04.719><c> want</c><02:15:04.960><c> it</c><02:15:05.040><c> to</c><02:15:05.119><c> do</c>

02:15:06.830 --> 02:15:06.840 align:start position:0%
doing what you want it to do
 

02:15:06.840 --> 02:15:09.189 align:start position:0%
doing what you want it to do
and<02:15:07.920><c> yeah</c><02:15:08.159><c> so</c><02:15:08.320><c> we</c><02:15:08.480><c> just</c><02:15:08.639><c> have</c><02:15:08.800><c> a</c><02:15:08.880><c> blob</c><02:15:09.119><c> of</c>

02:15:09.189 --> 02:15:09.199 align:start position:0%
and yeah so we just have a blob of
 

02:15:09.199 --> 02:15:11.350 align:start position:0%
and yeah so we just have a blob of
neural<02:15:09.520><c> stuff</c><02:15:10.000><c> and</c><02:15:10.400><c> we</c><02:15:10.719><c> can</c><02:15:10.880><c> make</c><02:15:11.119><c> it</c><02:15:11.199><c> do</c>

02:15:11.350 --> 02:15:11.360 align:start position:0%
neural stuff and we can make it do
 

02:15:11.360 --> 02:15:13.270 align:start position:0%
neural stuff and we can make it do
arbitrary<02:15:11.920><c> things</c><02:15:12.639><c> and</c><02:15:12.719><c> that's</c><02:15:12.960><c> what</c><02:15:13.119><c> gives</c>

02:15:13.270 --> 02:15:13.280 align:start position:0%
arbitrary things and that's what gives
 

02:15:13.280 --> 02:15:15.189 align:start position:0%
arbitrary things and that's what gives
neural<02:15:13.520><c> nets</c><02:15:13.679><c> their</c><02:15:13.840><c> power</c><02:15:14.320><c> um</c>

02:15:15.189 --> 02:15:15.199 align:start position:0%
neural nets their power um
 

02:15:15.199 --> 02:15:16.709 align:start position:0%
neural nets their power um
it's<02:15:15.679><c> you</c><02:15:15.840><c> know</c><02:15:15.920><c> this</c><02:15:16.079><c> is</c><02:15:16.159><c> a</c><02:15:16.239><c> very</c><02:15:16.480><c> tiny</c>

02:15:16.709 --> 02:15:16.719 align:start position:0%
it's you know this is a very tiny
 

02:15:16.719 --> 02:15:19.109 align:start position:0%
it's you know this is a very tiny
network<02:15:16.960><c> with</c><02:15:17.119><c> 41</c><02:15:17.520><c> parameters</c>

02:15:19.109 --> 02:15:19.119 align:start position:0%
network with 41 parameters
 

02:15:19.119 --> 02:15:20.790 align:start position:0%
network with 41 parameters
but<02:15:19.360><c> you</c><02:15:19.440><c> can</c><02:15:19.599><c> build</c><02:15:20.000><c> significantly</c><02:15:20.560><c> more</c>

02:15:20.790 --> 02:15:20.800 align:start position:0%
but you can build significantly more
 

02:15:20.800 --> 02:15:24.069 align:start position:0%
but you can build significantly more
complicated<02:15:21.280><c> neural</c><02:15:21.599><c> nets</c><02:15:22.159><c> with</c><02:15:22.800><c> billions</c>

02:15:24.069 --> 02:15:24.079 align:start position:0%
complicated neural nets with billions
 

02:15:24.079 --> 02:15:25.350 align:start position:0%
complicated neural nets with billions
at<02:15:24.159><c> this</c><02:15:24.320><c> point</c><02:15:24.560><c> almost</c><02:15:24.800><c> trillions</c><02:15:25.280><c> of</c>

02:15:25.350 --> 02:15:25.360 align:start position:0%
at this point almost trillions of
 

02:15:25.360 --> 02:15:28.069 align:start position:0%
at this point almost trillions of
parameters<02:15:26.239><c> and</c><02:15:26.400><c> it's</c><02:15:26.560><c> a</c><02:15:26.719><c> massive</c><02:15:27.199><c> blob</c><02:15:27.520><c> of</c>

02:15:28.069 --> 02:15:28.079 align:start position:0%
parameters and it's a massive blob of
 

02:15:28.079 --> 02:15:31.109 align:start position:0%
parameters and it's a massive blob of
neural<02:15:28.480><c> tissue</c><02:15:29.119><c> simulated</c><02:15:29.599><c> neural</c><02:15:29.840><c> tissue</c>

02:15:31.109 --> 02:15:31.119 align:start position:0%
neural tissue simulated neural tissue
 

02:15:31.119 --> 02:15:32.550 align:start position:0%
neural tissue simulated neural tissue
roughly<02:15:31.520><c> speaking</c>

02:15:32.550 --> 02:15:32.560 align:start position:0%
roughly speaking
 

02:15:32.560 --> 02:15:34.950 align:start position:0%
roughly speaking
and<02:15:33.040><c> you</c><02:15:33.199><c> can</c><02:15:33.440><c> make</c><02:15:33.679><c> it</c><02:15:33.760><c> do</c><02:15:34.000><c> extremely</c><02:15:34.480><c> complex</c>

02:15:34.950 --> 02:15:34.960 align:start position:0%
and you can make it do extremely complex
 

02:15:34.960 --> 02:15:37.350 align:start position:0%
and you can make it do extremely complex
problems<02:15:35.679><c> and</c><02:15:35.840><c> these</c><02:15:36.079><c> neurons</c><02:15:36.560><c> then</c><02:15:36.960><c> have</c><02:15:37.199><c> all</c>

02:15:37.350 --> 02:15:37.360 align:start position:0%
problems and these neurons then have all
 

02:15:37.360 --> 02:15:39.030 align:start position:0%
problems and these neurons then have all
kinds<02:15:37.599><c> of</c><02:15:37.760><c> very</c><02:15:38.000><c> fascinating</c><02:15:38.639><c> emergent</c>

02:15:39.030 --> 02:15:39.040 align:start position:0%
kinds of very fascinating emergent
 

02:15:39.040 --> 02:15:40.149 align:start position:0%
kinds of very fascinating emergent
properties

02:15:40.149 --> 02:15:40.159 align:start position:0%
properties
 

02:15:40.159 --> 02:15:41.510 align:start position:0%
properties
in

02:15:41.510 --> 02:15:41.520 align:start position:0%
in
 

02:15:41.520 --> 02:15:43.430 align:start position:0%
in
when<02:15:41.679><c> you</c><02:15:41.920><c> try</c><02:15:42.079><c> to</c><02:15:42.239><c> make</c><02:15:42.400><c> them</c><02:15:42.639><c> do</c>

02:15:43.430 --> 02:15:43.440 align:start position:0%
when you try to make them do
 

02:15:43.440 --> 02:15:45.669 align:start position:0%
when you try to make them do
significantly<02:15:44.079><c> hard</c><02:15:44.320><c> problems</c><02:15:45.199><c> as</c><02:15:45.360><c> in</c><02:15:45.599><c> the</c>

02:15:45.669 --> 02:15:45.679 align:start position:0%
significantly hard problems as in the
 

02:15:45.679 --> 02:15:47.669 align:start position:0%
significantly hard problems as in the
case<02:15:45.840><c> of</c><02:15:45.920><c> gpt</c><02:15:46.400><c> for</c><02:15:46.560><c> example</c>

02:15:47.669 --> 02:15:47.679 align:start position:0%
case of gpt for example
 

02:15:47.679 --> 02:15:49.830 align:start position:0%
case of gpt for example
we<02:15:47.920><c> have</c><02:15:48.400><c> massive</c><02:15:48.880><c> amounts</c><02:15:49.199><c> of</c><02:15:49.360><c> text</c><02:15:49.599><c> from</c><02:15:49.679><c> the</c>

02:15:49.830 --> 02:15:49.840 align:start position:0%
we have massive amounts of text from the
 

02:15:49.840 --> 02:15:51.270 align:start position:0%
we have massive amounts of text from the
internet<02:15:50.400><c> and</c><02:15:50.560><c> we're</c><02:15:50.719><c> trying</c><02:15:50.880><c> to</c><02:15:50.960><c> get</c><02:15:51.119><c> a</c>

02:15:51.270 --> 02:15:51.280 align:start position:0%
internet and we're trying to get a
 

02:15:51.280 --> 02:15:53.430 align:start position:0%
internet and we're trying to get a
neural<02:15:51.520><c> net</c><02:15:51.760><c> to</c><02:15:51.840><c> predict</c><02:15:52.480><c> to</c><02:15:52.639><c> take</c><02:15:52.960><c> like</c><02:15:53.119><c> a</c><02:15:53.199><c> few</c>

02:15:53.430 --> 02:15:53.440 align:start position:0%
neural net to predict to take like a few
 

02:15:53.440 --> 02:15:55.189 align:start position:0%
neural net to predict to take like a few
words<02:15:54.079><c> and</c><02:15:54.159><c> try</c><02:15:54.400><c> to</c><02:15:54.480><c> predict</c><02:15:54.719><c> the</c><02:15:54.800><c> next</c><02:15:54.960><c> word</c>

02:15:55.189 --> 02:15:55.199 align:start position:0%
words and try to predict the next word
 

02:15:55.199 --> 02:15:56.629 align:start position:0%
words and try to predict the next word
in<02:15:55.280><c> a</c><02:15:55.360><c> sequence</c><02:15:56.000><c> that's</c><02:15:56.239><c> the</c><02:15:56.320><c> learning</c>

02:15:56.629 --> 02:15:56.639 align:start position:0%
in a sequence that's the learning
 

02:15:56.639 --> 02:15:57.589 align:start position:0%
in a sequence that's the learning
problem

02:15:57.589 --> 02:15:57.599 align:start position:0%
problem
 

02:15:57.599 --> 02:15:58.709 align:start position:0%
problem
and<02:15:57.760><c> it</c><02:15:57.840><c> turns</c><02:15:58.079><c> out</c><02:15:58.159><c> that</c><02:15:58.239><c> when</c><02:15:58.400><c> you</c><02:15:58.480><c> train</c>

02:15:58.709 --> 02:15:58.719 align:start position:0%
and it turns out that when you train
 

02:15:58.719 --> 02:16:00.790 align:start position:0%
and it turns out that when you train
this<02:15:58.880><c> on</c><02:15:59.040><c> all</c><02:15:59.199><c> of</c><02:15:59.280><c> internet</c><02:16:00.159><c> the</c><02:16:00.320><c> neural</c><02:16:00.560><c> net</c>

02:16:00.790 --> 02:16:00.800 align:start position:0%
this on all of internet the neural net
 

02:16:00.800 --> 02:16:02.470 align:start position:0%
this on all of internet the neural net
actually<02:16:01.040><c> has</c><02:16:01.199><c> like</c><02:16:01.360><c> really</c><02:16:01.679><c> remarkable</c>

02:16:02.470 --> 02:16:02.480 align:start position:0%
actually has like really remarkable
 

02:16:02.480 --> 02:16:04.470 align:start position:0%
actually has like really remarkable
emergent<02:16:02.880><c> properties</c><02:16:03.599><c> but</c><02:16:03.760><c> that</c><02:16:03.920><c> neural</c><02:16:04.239><c> net</c>

02:16:04.470 --> 02:16:04.480 align:start position:0%
emergent properties but that neural net
 

02:16:04.480 --> 02:16:05.750 align:start position:0%
emergent properties but that neural net
would<02:16:04.639><c> have</c><02:16:04.880><c> hundreds</c><02:16:05.280><c> of</c><02:16:05.360><c> billions</c><02:16:05.679><c> of</c>

02:16:05.750 --> 02:16:05.760 align:start position:0%
would have hundreds of billions of
 

02:16:05.760 --> 02:16:07.430 align:start position:0%
would have hundreds of billions of
parameters

02:16:07.430 --> 02:16:07.440 align:start position:0%
parameters
 

02:16:07.440 --> 02:16:09.350 align:start position:0%
parameters
but<02:16:07.920><c> it</c><02:16:08.079><c> works</c><02:16:08.320><c> on</c><02:16:08.400><c> fundamentally</c><02:16:08.960><c> the</c><02:16:09.040><c> exact</c>

02:16:09.350 --> 02:16:09.360 align:start position:0%
but it works on fundamentally the exact
 

02:16:09.360 --> 02:16:10.550 align:start position:0%
but it works on fundamentally the exact
same<02:16:09.520><c> principles</c>

02:16:10.550 --> 02:16:10.560 align:start position:0%
same principles
 

02:16:10.560 --> 02:16:12.149 align:start position:0%
same principles
the<02:16:10.800><c> neural</c><02:16:11.119><c> net</c><02:16:11.440><c> of</c><02:16:11.520><c> course</c><02:16:11.679><c> will</c><02:16:11.840><c> be</c><02:16:11.920><c> a</c><02:16:12.000><c> bit</c>

02:16:12.149 --> 02:16:12.159 align:start position:0%
the neural net of course will be a bit
 

02:16:12.159 --> 02:16:15.109 align:start position:0%
the neural net of course will be a bit
more<02:16:12.320><c> complex</c><02:16:13.199><c> but</c><02:16:13.440><c> otherwise</c><02:16:13.920><c> the</c>

02:16:15.109 --> 02:16:15.119 align:start position:0%
more complex but otherwise the
 

02:16:15.119 --> 02:16:17.510 align:start position:0%
more complex but otherwise the
value<02:16:15.360><c> in</c><02:16:15.520><c> the</c><02:16:15.599><c> gradient</c><02:16:16.320><c> is</c><02:16:16.480><c> there</c>

02:16:17.510 --> 02:16:17.520 align:start position:0%
value in the gradient is there
 

02:16:17.520 --> 02:16:19.430 align:start position:0%
value in the gradient is there
and<02:16:17.679><c> would</c><02:16:17.760><c> be</c><02:16:17.920><c> identical</c><02:16:18.800><c> and</c><02:16:18.960><c> the</c><02:16:19.040><c> gradient</c>

02:16:19.430 --> 02:16:19.440 align:start position:0%
and would be identical and the gradient
 

02:16:19.440 --> 02:16:21.030 align:start position:0%
and would be identical and the gradient
descent<02:16:20.000><c> would</c><02:16:20.159><c> be</c><02:16:20.320><c> there</c><02:16:20.719><c> and</c><02:16:20.800><c> would</c><02:16:20.960><c> be</c>

02:16:21.030 --> 02:16:21.040 align:start position:0%
descent would be there and would be
 

02:16:21.040 --> 02:16:23.109 align:start position:0%
descent would be there and would be
basically<02:16:21.440><c> identical</c><02:16:22.320><c> but</c><02:16:22.480><c> people</c><02:16:22.800><c> usually</c>

02:16:23.109 --> 02:16:23.119 align:start position:0%
basically identical but people usually
 

02:16:23.119 --> 02:16:25.109 align:start position:0%
basically identical but people usually
use<02:16:23.440><c> slightly</c><02:16:23.840><c> different</c><02:16:24.159><c> updates</c><02:16:24.719><c> this</c><02:16:24.960><c> is</c><02:16:25.040><c> a</c>

02:16:25.109 --> 02:16:25.119 align:start position:0%
use slightly different updates this is a
 

02:16:25.119 --> 02:16:27.189 align:start position:0%
use slightly different updates this is a
very<02:16:25.360><c> simple</c><02:16:26.159><c> stochastic</c><02:16:26.639><c> gradient</c><02:16:26.880><c> descent</c>

02:16:27.189 --> 02:16:27.199 align:start position:0%
very simple stochastic gradient descent
 

02:16:27.199 --> 02:16:28.470 align:start position:0%
very simple stochastic gradient descent
update

02:16:28.470 --> 02:16:28.480 align:start position:0%
update
 

02:16:28.480 --> 02:16:29.430 align:start position:0%
update
um

02:16:29.430 --> 02:16:29.440 align:start position:0%
um
 

02:16:29.440 --> 02:16:30.629 align:start position:0%
um
and<02:16:29.520><c> the</c><02:16:29.599><c> loss</c><02:16:29.760><c> function</c><02:16:30.079><c> would</c><02:16:30.159><c> not</c><02:16:30.320><c> be</c><02:16:30.480><c> mean</c>

02:16:30.629 --> 02:16:30.639 align:start position:0%
and the loss function would not be mean
 

02:16:30.639 --> 02:16:31.990 align:start position:0%
and the loss function would not be mean
squared<02:16:30.960><c> error</c><02:16:31.360><c> they</c><02:16:31.520><c> would</c><02:16:31.679><c> be</c><02:16:31.760><c> using</c>

02:16:31.990 --> 02:16:32.000 align:start position:0%
squared error they would be using
 

02:16:32.000 --> 02:16:33.990 align:start position:0%
squared error they would be using
something<02:16:32.319><c> called</c><02:16:32.479><c> the</c><02:16:32.639><c> cross-entropy</c><02:16:33.359><c> loss</c>

02:16:33.990 --> 02:16:34.000 align:start position:0%
something called the cross-entropy loss
 

02:16:34.000 --> 02:16:35.990 align:start position:0%
something called the cross-entropy loss
for<02:16:34.160><c> predicting</c><02:16:34.639><c> the</c><02:16:34.719><c> next</c><02:16:34.960><c> token</c><02:16:35.679><c> so</c><02:16:35.840><c> there's</c>

02:16:35.990 --> 02:16:36.000 align:start position:0%
for predicting the next token so there's
 

02:16:36.000 --> 02:16:37.669 align:start position:0%
for predicting the next token so there's
a<02:16:36.080><c> few</c><02:16:36.240><c> more</c><02:16:36.399><c> details</c><02:16:36.719><c> but</c><02:16:36.880><c> fundamentally</c><02:16:37.519><c> the</c>

02:16:37.669 --> 02:16:37.679 align:start position:0%
a few more details but fundamentally the
 

02:16:37.679 --> 02:16:39.030 align:start position:0%
a few more details but fundamentally the
neural<02:16:37.920><c> network</c><02:16:38.160><c> setup</c><02:16:38.479><c> and</c><02:16:38.559><c> neural</c><02:16:38.800><c> network</c>

02:16:39.030 --> 02:16:39.040 align:start position:0%
neural network setup and neural network
 

02:16:39.040 --> 02:16:42.150 align:start position:0%
neural network setup and neural network
training<02:16:39.679><c> is</c><02:16:39.840><c> identical</c><02:16:40.399><c> and</c><02:16:40.559><c> pervasive</c><02:16:41.519><c> and</c>

02:16:42.150 --> 02:16:42.160 align:start position:0%
training is identical and pervasive and
 

02:16:42.160 --> 02:16:44.230 align:start position:0%
training is identical and pervasive and
now<02:16:42.319><c> you</c><02:16:42.479><c> understand</c><02:16:42.880><c> intuitively</c>

02:16:44.230 --> 02:16:44.240 align:start position:0%
now you understand intuitively
 

02:16:44.240 --> 02:16:45.990 align:start position:0%
now you understand intuitively
how<02:16:44.399><c> that</c><02:16:44.559><c> works</c><02:16:44.800><c> under</c><02:16:44.960><c> the</c><02:16:45.120><c> hood</c><02:16:45.760><c> in</c><02:16:45.920><c> the</c>

02:16:45.990 --> 02:16:46.000 align:start position:0%
how that works under the hood in the
 

02:16:46.000 --> 02:16:47.429 align:start position:0%
how that works under the hood in the
beginning<02:16:46.319><c> of</c><02:16:46.399><c> this</c><02:16:46.559><c> video</c><02:16:46.880><c> i</c><02:16:46.960><c> told</c><02:16:47.120><c> you</c><02:16:47.280><c> that</c>

02:16:47.429 --> 02:16:47.439 align:start position:0%
beginning of this video i told you that
 

02:16:47.439 --> 02:16:48.790 align:start position:0%
beginning of this video i told you that
by<02:16:47.599><c> the</c><02:16:47.679><c> end</c><02:16:47.760><c> of</c><02:16:47.920><c> it</c><02:16:48.080><c> you</c><02:16:48.160><c> would</c><02:16:48.319><c> understand</c>

02:16:48.790 --> 02:16:48.800 align:start position:0%
by the end of it you would understand
 

02:16:48.800 --> 02:16:50.709 align:start position:0%
by the end of it you would understand
everything<02:16:49.439><c> in</c><02:16:49.599><c> micrograd</c><02:16:50.240><c> and</c><02:16:50.399><c> then</c><02:16:50.559><c> we'd</c>

02:16:50.709 --> 02:16:50.719 align:start position:0%
everything in micrograd and then we'd
 

02:16:50.719 --> 02:16:52.629 align:start position:0%
everything in micrograd and then we'd
slowly<02:16:51.040><c> build</c><02:16:51.280><c> it</c><02:16:51.439><c> up</c><02:16:51.840><c> let</c><02:16:52.000><c> me</c><02:16:52.160><c> briefly</c><02:16:52.479><c> prove</c>

02:16:52.629 --> 02:16:52.639 align:start position:0%
slowly build it up let me briefly prove
 

02:16:52.639 --> 02:16:53.990 align:start position:0%
slowly build it up let me briefly prove
that<02:16:52.800><c> to</c><02:16:52.880><c> you</c>

02:16:53.990 --> 02:16:54.000 align:start position:0%
that to you
 

02:16:54.000 --> 02:16:55.110 align:start position:0%
that to you
so<02:16:54.160><c> i'm</c><02:16:54.319><c> going</c><02:16:54.479><c> to</c><02:16:54.559><c> step</c><02:16:54.719><c> through</c><02:16:54.880><c> all</c><02:16:55.040><c> the</c>

02:16:55.110 --> 02:16:55.120 align:start position:0%
so i'm going to step through all the
 

02:16:55.120 --> 02:16:57.509 align:start position:0%
so i'm going to step through all the
code<02:16:55.280><c> that</c><02:16:55.439><c> is</c><02:16:55.599><c> in</c><02:16:55.679><c> micrograd</c><02:16:56.240><c> as</c><02:16:56.399><c> of</c><02:16:56.559><c> today</c>

02:16:57.509 --> 02:16:57.519 align:start position:0%
code that is in micrograd as of today
 

02:16:57.519 --> 02:16:59.030 align:start position:0%
code that is in micrograd as of today
actually<02:16:58.080><c> potentially</c><02:16:58.479><c> some</c><02:16:58.639><c> of</c><02:16:58.719><c> the</c><02:16:58.800><c> code</c>

02:16:59.030 --> 02:16:59.040 align:start position:0%
actually potentially some of the code
 

02:16:59.040 --> 02:17:00.309 align:start position:0%
actually potentially some of the code
will<02:16:59.200><c> change</c><02:16:59.439><c> by</c><02:16:59.599><c> the</c><02:16:59.679><c> time</c><02:16:59.840><c> you</c><02:17:00.000><c> watch</c><02:17:00.240><c> this</c>

02:17:00.309 --> 02:17:00.319 align:start position:0%
will change by the time you watch this
 

02:17:00.319 --> 02:17:01.750 align:start position:0%
will change by the time you watch this
video<02:17:00.639><c> because</c><02:17:00.880><c> i</c><02:17:00.960><c> intend</c><02:17:01.200><c> to</c><02:17:01.359><c> continue</c>

02:17:01.750 --> 02:17:01.760 align:start position:0%
video because i intend to continue
 

02:17:01.760 --> 02:17:03.429 align:start position:0%
video because i intend to continue
developing<02:17:02.160><c> micrograd</c>

02:17:03.429 --> 02:17:03.439 align:start position:0%
developing micrograd
 

02:17:03.439 --> 02:17:05.030 align:start position:0%
developing micrograd
but<02:17:03.760><c> let's</c><02:17:03.920><c> look</c><02:17:04.080><c> at</c><02:17:04.160><c> what</c><02:17:04.319><c> we</c><02:17:04.479><c> have</c><02:17:04.559><c> so</c><02:17:04.719><c> far</c><02:17:04.960><c> at</c>

02:17:05.030 --> 02:17:05.040 align:start position:0%
but let's look at what we have so far at
 

02:17:05.040 --> 02:17:07.750 align:start position:0%
but let's look at what we have so far at
least<02:17:05.679><c> init.pi</c><02:17:06.319><c> is</c><02:17:06.479><c> empty</c><02:17:07.200><c> when</c><02:17:07.439><c> you</c><02:17:07.519><c> go</c><02:17:07.599><c> to</c>

02:17:07.750 --> 02:17:07.760 align:start position:0%
least init.pi is empty when you go to
 

02:17:07.760 --> 02:17:10.070 align:start position:0%
least init.pi is empty when you go to
engine.pi<02:17:08.559><c> that</c><02:17:08.719><c> has</c><02:17:08.960><c> the</c><02:17:09.120><c> value</c>

02:17:10.070 --> 02:17:10.080 align:start position:0%
engine.pi that has the value
 

02:17:10.080 --> 02:17:11.190 align:start position:0%
engine.pi that has the value
everything<02:17:10.399><c> here</c><02:17:10.639><c> you</c><02:17:10.719><c> should</c><02:17:10.880><c> mostly</c>

02:17:11.190 --> 02:17:11.200 align:start position:0%
everything here you should mostly
 

02:17:11.200 --> 02:17:13.589 align:start position:0%
everything here you should mostly
recognize<02:17:11.920><c> so</c><02:17:12.080><c> we</c><02:17:12.160><c> have</c><02:17:12.240><c> the</c><02:17:12.800><c> data.grad</c>

02:17:13.589 --> 02:17:13.599 align:start position:0%
recognize so we have the data.grad
 

02:17:13.599 --> 02:17:15.910 align:start position:0%
recognize so we have the data.grad
attributes<02:17:14.240><c> we</c><02:17:14.399><c> have</c><02:17:14.479><c> the</c><02:17:14.559><c> backward</c><02:17:14.960><c> function</c>

02:17:15.910 --> 02:17:15.920 align:start position:0%
attributes we have the backward function
 

02:17:15.920 --> 02:17:17.429 align:start position:0%
attributes we have the backward function
uh<02:17:16.080><c> we</c><02:17:16.240><c> have</c><02:17:16.319><c> the</c><02:17:16.399><c> previous</c><02:17:16.719><c> set</c><02:17:16.960><c> of</c><02:17:17.040><c> children</c>

02:17:17.429 --> 02:17:17.439 align:start position:0%
uh we have the previous set of children
 

02:17:17.439 --> 02:17:19.589 align:start position:0%
uh we have the previous set of children
and<02:17:17.519><c> the</c><02:17:17.679><c> operation</c><02:17:18.319><c> that</c><02:17:18.479><c> produced</c><02:17:19.359><c> this</c>

02:17:19.589 --> 02:17:19.599 align:start position:0%
and the operation that produced this
 

02:17:19.599 --> 02:17:20.790 align:start position:0%
and the operation that produced this
value

02:17:20.790 --> 02:17:20.800 align:start position:0%
value
 

02:17:20.800 --> 02:17:22.469 align:start position:0%
value
we<02:17:20.960><c> have</c><02:17:21.120><c> addition</c><02:17:21.519><c> multiplication</c><02:17:22.319><c> and</c>

02:17:22.469 --> 02:17:22.479 align:start position:0%
we have addition multiplication and
 

02:17:22.479 --> 02:17:25.190 align:start position:0%
we have addition multiplication and
raising<02:17:22.880><c> to</c><02:17:23.120><c> a</c><02:17:23.599><c> scalar</c><02:17:24.000><c> power</c>

02:17:25.190 --> 02:17:25.200 align:start position:0%
raising to a scalar power
 

02:17:25.200 --> 02:17:27.030 align:start position:0%
raising to a scalar power
we<02:17:25.359><c> have</c><02:17:25.519><c> the</c><02:17:25.679><c> relu</c><02:17:25.920><c> non-linearity</c><02:17:26.719><c> which</c><02:17:26.880><c> is</c>

02:17:27.030 --> 02:17:27.040 align:start position:0%
we have the relu non-linearity which is
 

02:17:27.040 --> 02:17:28.469 align:start position:0%
we have the relu non-linearity which is
slightly<02:17:27.359><c> different</c><02:17:27.599><c> type</c><02:17:27.760><c> of</c><02:17:27.840><c> nonlinearity</c>

02:17:28.469 --> 02:17:28.479 align:start position:0%
slightly different type of nonlinearity
 

02:17:28.479 --> 02:17:30.870 align:start position:0%
slightly different type of nonlinearity
than<02:17:28.719><c> 10h</c><02:17:29.120><c> that</c><02:17:29.280><c> we</c><02:17:29.359><c> used</c><02:17:29.599><c> in</c><02:17:29.679><c> this</c><02:17:29.920><c> video</c>

02:17:30.870 --> 02:17:30.880 align:start position:0%
than 10h that we used in this video
 

02:17:30.880 --> 02:17:32.709 align:start position:0%
than 10h that we used in this video
both<02:17:31.120><c> of</c><02:17:31.200><c> them</c><02:17:31.359><c> are</c><02:17:31.439><c> non-linearities</c><02:17:32.559><c> and</c>

02:17:32.709 --> 02:17:32.719 align:start position:0%
both of them are non-linearities and
 

02:17:32.719 --> 02:17:34.629 align:start position:0%
both of them are non-linearities and
notably<02:17:33.120><c> 10h</c><02:17:33.599><c> is</c><02:17:33.679><c> not</c><02:17:33.920><c> actually</c><02:17:34.160><c> present</c><02:17:34.559><c> in</c>

02:17:34.629 --> 02:17:34.639 align:start position:0%
notably 10h is not actually present in
 

02:17:34.639 --> 02:17:37.030 align:start position:0%
notably 10h is not actually present in
micrograd<02:17:35.359><c> as</c><02:17:35.599><c> of</c><02:17:35.840><c> right</c><02:17:36.000><c> now</c><02:17:36.479><c> but</c><02:17:36.719><c> i</c><02:17:36.800><c> intend</c>

02:17:37.030 --> 02:17:37.040 align:start position:0%
micrograd as of right now but i intend
 

02:17:37.040 --> 02:17:38.629 align:start position:0%
micrograd as of right now but i intend
to<02:17:37.200><c> add</c><02:17:37.439><c> it</c><02:17:37.519><c> later</c>

02:17:38.629 --> 02:17:38.639 align:start position:0%
to add it later
 

02:17:38.639 --> 02:17:40.709 align:start position:0%
to add it later
with<02:17:38.880><c> the</c><02:17:39.040><c> backward</c><02:17:39.359><c> which</c><02:17:39.599><c> is</c><02:17:39.679><c> identical</c><02:17:40.559><c> and</c>

02:17:40.709 --> 02:17:40.719 align:start position:0%
with the backward which is identical and
 

02:17:40.719 --> 02:17:42.870 align:start position:0%
with the backward which is identical and
then<02:17:41.040><c> all</c><02:17:41.200><c> of</c><02:17:41.280><c> these</c><02:17:41.679><c> other</c><02:17:41.920><c> operations</c><02:17:42.639><c> which</c>

02:17:42.870 --> 02:17:42.880 align:start position:0%
then all of these other operations which
 

02:17:42.880 --> 02:17:45.429 align:start position:0%
then all of these other operations which
are<02:17:42.960><c> built</c><02:17:43.280><c> up</c><02:17:43.519><c> on</c><02:17:43.679><c> top</c><02:17:43.840><c> of</c><02:17:44.000><c> operations</c><02:17:44.719><c> here</c>

02:17:45.429 --> 02:17:45.439 align:start position:0%
are built up on top of operations here
 

02:17:45.439 --> 02:17:47.190 align:start position:0%
are built up on top of operations here
so<02:17:45.679><c> values</c><02:17:46.000><c> should</c><02:17:46.160><c> be</c><02:17:46.319><c> very</c><02:17:46.479><c> recognizable</c>

02:17:47.190 --> 02:17:47.200 align:start position:0%
so values should be very recognizable
 

02:17:47.200 --> 02:17:48.549 align:start position:0%
so values should be very recognizable
except<02:17:47.439><c> for</c><02:17:47.519><c> the</c><02:17:47.679><c> non-linearity</c><02:17:48.240><c> used</c><02:17:48.479><c> in</c>

02:17:48.549 --> 02:17:48.559 align:start position:0%
except for the non-linearity used in
 

02:17:48.559 --> 02:17:50.070 align:start position:0%
except for the non-linearity used in
this<02:17:48.719><c> video</c>

02:17:50.070 --> 02:17:50.080 align:start position:0%
this video
 

02:17:50.080 --> 02:17:52.150 align:start position:0%
this video
um<02:17:50.800><c> there's</c><02:17:51.040><c> no</c><02:17:51.200><c> massive</c><02:17:51.519><c> difference</c><02:17:51.840><c> between</c>

02:17:52.150 --> 02:17:52.160 align:start position:0%
um there's no massive difference between
 

02:17:52.160 --> 02:17:54.150 align:start position:0%
um there's no massive difference between
relu<02:17:52.559><c> and</c><02:17:52.639><c> 10h</c><02:17:53.040><c> and</c><02:17:53.200><c> sigmoid</c><02:17:53.679><c> and</c><02:17:53.840><c> these</c><02:17:54.000><c> other</c>

02:17:54.150 --> 02:17:54.160 align:start position:0%
relu and 10h and sigmoid and these other
 

02:17:54.160 --> 02:17:55.910 align:start position:0%
relu and 10h and sigmoid and these other
non-linearities<02:17:55.200><c> they're</c><02:17:55.359><c> all</c><02:17:55.519><c> roughly</c>

02:17:55.910 --> 02:17:55.920 align:start position:0%
non-linearities they're all roughly
 

02:17:55.920 --> 02:17:58.309 align:start position:0%
non-linearities they're all roughly
equivalent<02:17:56.479><c> and</c><02:17:56.559><c> can</c><02:17:56.639><c> be</c><02:17:56.719><c> used</c><02:17:56.880><c> in</c><02:17:57.040><c> mlps</c><02:17:57.760><c> so</c><02:17:58.160><c> i</c>

02:17:58.309 --> 02:17:58.319 align:start position:0%
equivalent and can be used in mlps so i
 

02:17:58.319 --> 02:18:00.389 align:start position:0%
equivalent and can be used in mlps so i
use<02:17:58.559><c> 10h</c><02:17:58.960><c> because</c><02:17:59.120><c> it's</c><02:17:59.280><c> a</c><02:17:59.359><c> bit</c><02:17:59.519><c> smoother</c><02:18:00.240><c> and</c>

02:18:00.389 --> 02:18:00.399 align:start position:0%
use 10h because it's a bit smoother and
 

02:18:00.399 --> 02:18:01.270 align:start position:0%
use 10h because it's a bit smoother and
because<02:18:00.639><c> it's</c><02:18:00.800><c> a</c><02:18:00.880><c> little</c><02:18:01.040><c> bit</c><02:18:01.120><c> more</c>

02:18:01.270 --> 02:18:01.280 align:start position:0%
because it's a little bit more
 

02:18:01.280 --> 02:18:03.270 align:start position:0%
because it's a little bit more
complicated<02:18:01.760><c> than</c><02:18:01.920><c> relu</c><02:18:02.479><c> and</c><02:18:02.639><c> therefore</c><02:18:03.040><c> it's</c>

02:18:03.270 --> 02:18:03.280 align:start position:0%
complicated than relu and therefore it's
 

02:18:03.280 --> 02:18:05.910 align:start position:0%
complicated than relu and therefore it's
stressed<02:18:04.000><c> a</c><02:18:04.319><c> little</c><02:18:04.479><c> bit</c><02:18:04.639><c> more</c><02:18:04.880><c> the</c>

02:18:05.910 --> 02:18:05.920 align:start position:0%
stressed a little bit more the
 

02:18:05.920 --> 02:18:07.669 align:start position:0%
stressed a little bit more the
local<02:18:06.240><c> gradients</c><02:18:06.719><c> and</c><02:18:07.040><c> working</c><02:18:07.359><c> with</c><02:18:07.519><c> those</c>

02:18:07.669 --> 02:18:07.679 align:start position:0%
local gradients and working with those
 

02:18:07.679 --> 02:18:09.030 align:start position:0%
local gradients and working with those
derivatives<02:18:08.240><c> which</c><02:18:08.479><c> i</c><02:18:08.559><c> thought</c><02:18:08.719><c> would</c><02:18:08.880><c> be</c>

02:18:09.030 --> 02:18:09.040 align:start position:0%
derivatives which i thought would be
 

02:18:09.040 --> 02:18:10.709 align:start position:0%
derivatives which i thought would be
useful

02:18:10.709 --> 02:18:10.719 align:start position:0%
useful
 

02:18:10.719 --> 02:18:12.309 align:start position:0%
useful
and<02:18:10.800><c> then</c><02:18:10.960><c> that</c><02:18:11.120><c> pi</c><02:18:11.439><c> is</c><02:18:11.599><c> the</c><02:18:11.760><c> neural</c><02:18:12.000><c> networks</c>

02:18:12.309 --> 02:18:12.319 align:start position:0%
and then that pi is the neural networks
 

02:18:12.319 --> 02:18:14.230 align:start position:0%
and then that pi is the neural networks
library<02:18:12.719><c> as</c><02:18:12.880><c> i</c><02:18:12.960><c> mentioned</c><02:18:13.679><c> so</c><02:18:13.920><c> you</c><02:18:14.080><c> should</c>

02:18:14.230 --> 02:18:14.240 align:start position:0%
library as i mentioned so you should
 

02:18:14.240 --> 02:18:16.150 align:start position:0%
library as i mentioned so you should
recognize<02:18:15.120><c> identical</c><02:18:15.519><c> implementation</c><02:18:16.080><c> of</c>

02:18:16.150 --> 02:18:16.160 align:start position:0%
recognize identical implementation of
 

02:18:16.160 --> 02:18:18.230 align:start position:0%
recognize identical implementation of
neuron<02:18:16.639><c> layer</c><02:18:17.040><c> and</c><02:18:17.200><c> mlp</c>

02:18:18.230 --> 02:18:18.240 align:start position:0%
neuron layer and mlp
 

02:18:18.240 --> 02:18:20.629 align:start position:0%
neuron layer and mlp
notably<02:18:19.280><c> or</c><02:18:19.439><c> not</c><02:18:19.679><c> so</c><02:18:19.840><c> much</c>

02:18:20.629 --> 02:18:20.639 align:start position:0%
notably or not so much
 

02:18:20.639 --> 02:18:22.150 align:start position:0%
notably or not so much
we<02:18:20.800><c> have</c><02:18:20.960><c> a</c><02:18:21.040><c> class</c><02:18:21.280><c> module</c><02:18:21.679><c> here</c><02:18:21.840><c> there</c><02:18:22.000><c> is</c><02:18:22.080><c> a</c>

02:18:22.150 --> 02:18:22.160 align:start position:0%
we have a class module here there is a
 

02:18:22.160 --> 02:18:24.469 align:start position:0%
we have a class module here there is a
parent<02:18:22.479><c> class</c><02:18:22.719><c> of</c><02:18:22.880><c> all</c><02:18:22.960><c> these</c><02:18:23.200><c> modules</c><02:18:24.160><c> i</c><02:18:24.319><c> did</c>

02:18:24.469 --> 02:18:24.479 align:start position:0%
parent class of all these modules i did
 

02:18:24.479 --> 02:18:27.110 align:start position:0%
parent class of all these modules i did
that<02:18:24.719><c> because</c><02:18:25.280><c> there's</c><02:18:25.599><c> an</c><02:18:25.760><c> nn.module</c><02:18:26.639><c> class</c>

02:18:27.110 --> 02:18:27.120 align:start position:0%
that because there's an nn.module class
 

02:18:27.120 --> 02:18:29.110 align:start position:0%
that because there's an nn.module class
in<02:18:27.280><c> pytorch</c><02:18:27.920><c> and</c><02:18:28.000><c> so</c><02:18:28.160><c> this</c><02:18:28.399><c> exactly</c><02:18:28.800><c> matches</c>

02:18:29.110 --> 02:18:29.120 align:start position:0%
in pytorch and so this exactly matches
 

02:18:29.120 --> 02:18:31.669 align:start position:0%
in pytorch and so this exactly matches
that<02:18:29.359><c> api</c><02:18:30.080><c> and</c><02:18:30.319><c> end.module</c><02:18:30.960><c> and</c><02:18:31.040><c> pytorch</c><02:18:31.519><c> has</c>

02:18:31.669 --> 02:18:31.679 align:start position:0%
that api and end.module and pytorch has
 

02:18:31.679 --> 02:18:33.669 align:start position:0%
that api and end.module and pytorch has
also<02:18:31.920><c> a</c><02:18:32.080><c> zero</c><02:18:32.399><c> grad</c><02:18:32.719><c> which</c><02:18:32.960><c> i've</c><02:18:33.120><c> refactored</c>

02:18:33.669 --> 02:18:33.679 align:start position:0%
also a zero grad which i've refactored
 

02:18:33.679 --> 02:18:36.309 align:start position:0%
also a zero grad which i've refactored
out<02:18:34.000><c> here</c>

02:18:36.309 --> 02:18:36.319 align:start position:0%
 
 

02:18:36.319 --> 02:18:38.469 align:start position:0%
 
so<02:18:36.479><c> that's</c><02:18:36.719><c> the</c><02:18:36.880><c> end</c><02:18:37.040><c> of</c><02:18:37.439><c> micrograd</c><02:18:38.080><c> really</c>

02:18:38.469 --> 02:18:38.479 align:start position:0%
so that's the end of micrograd really
 

02:18:38.479 --> 02:18:39.990 align:start position:0%
so that's the end of micrograd really
then<02:18:38.639><c> there's</c><02:18:38.960><c> a</c><02:18:39.040><c> test</c>

02:18:39.990 --> 02:18:40.000 align:start position:0%
then there's a test
 

02:18:40.000 --> 02:18:41.429 align:start position:0%
then there's a test
which<02:18:40.399><c> you'll</c><02:18:40.719><c> see</c>

02:18:41.429 --> 02:18:41.439 align:start position:0%
which you'll see
 

02:18:41.439 --> 02:18:42.950 align:start position:0%
which you'll see
basically<02:18:41.920><c> creates</c>

02:18:42.950 --> 02:18:42.960 align:start position:0%
basically creates
 

02:18:42.960 --> 02:18:45.589 align:start position:0%
basically creates
two<02:18:43.120><c> chunks</c><02:18:43.439><c> of</c><02:18:43.599><c> code</c><02:18:44.160><c> one</c><02:18:44.479><c> in</c><02:18:44.719><c> micrograd</c><02:18:45.439><c> and</c>

02:18:45.589 --> 02:18:45.599 align:start position:0%
two chunks of code one in micrograd and
 

02:18:45.599 --> 02:18:47.589 align:start position:0%
two chunks of code one in micrograd and
one<02:18:45.920><c> in</c><02:18:46.160><c> pi</c><02:18:46.319><c> torch</c><02:18:46.880><c> and</c><02:18:47.040><c> we'll</c><02:18:47.200><c> make</c><02:18:47.359><c> sure</c><02:18:47.519><c> that</c>

02:18:47.589 --> 02:18:47.599 align:start position:0%
one in pi torch and we'll make sure that
 

02:18:47.599 --> 02:18:49.270 align:start position:0%
one in pi torch and we'll make sure that
the<02:18:47.760><c> forward</c><02:18:48.080><c> and</c><02:18:48.160><c> the</c><02:18:48.240><c> backward</c><02:18:48.559><c> pass</c><02:18:48.960><c> agree</c>

02:18:49.270 --> 02:18:49.280 align:start position:0%
the forward and the backward pass agree
 

02:18:49.280 --> 02:18:50.389 align:start position:0%
the forward and the backward pass agree
identically

02:18:50.389 --> 02:18:50.399 align:start position:0%
identically
 

02:18:50.399 --> 02:18:51.910 align:start position:0%
identically
for<02:18:50.800><c> a</c><02:18:50.880><c> slightly</c><02:18:51.280><c> less</c><02:18:51.439><c> complicated</c>

02:18:51.910 --> 02:18:51.920 align:start position:0%
for a slightly less complicated
 

02:18:51.920 --> 02:18:53.349 align:start position:0%
for a slightly less complicated
expression<02:18:52.319><c> a</c><02:18:52.399><c> slightly</c><02:18:52.719><c> more</c><02:18:52.880><c> complicated</c>

02:18:53.349 --> 02:18:53.359 align:start position:0%
expression a slightly more complicated
 

02:18:53.359 --> 02:18:55.349 align:start position:0%
expression a slightly more complicated
expression<02:18:54.240><c> everything</c>

02:18:55.349 --> 02:18:55.359 align:start position:0%
expression everything
 

02:18:55.359 --> 02:18:57.349 align:start position:0%
expression everything
agrees<02:18:56.080><c> so</c><02:18:56.240><c> we</c><02:18:56.399><c> agree</c><02:18:56.639><c> with</c><02:18:56.800><c> pytorch</c><02:18:57.200><c> on</c><02:18:57.280><c> all</c>

02:18:57.349 --> 02:18:57.359 align:start position:0%
agrees so we agree with pytorch on all
 

02:18:57.359 --> 02:18:58.950 align:start position:0%
agrees so we agree with pytorch on all
of<02:18:57.519><c> these</c><02:18:57.679><c> operations</c>

02:18:58.950 --> 02:18:58.960 align:start position:0%
of these operations
 

02:18:58.960 --> 02:19:01.669 align:start position:0%
of these operations
and<02:18:59.120><c> finally</c><02:18:59.439><c> there's</c><02:18:59.679><c> a</c><02:18:59.960><c> demo.ipymb</c><02:19:01.040><c> here</c>

02:19:01.669 --> 02:19:01.679 align:start position:0%
and finally there's a demo.ipymb here
 

02:19:01.679 --> 02:19:03.190 align:start position:0%
and finally there's a demo.ipymb here
and<02:19:01.840><c> it's</c><02:19:01.920><c> a</c><02:19:02.000><c> bit</c><02:19:02.160><c> more</c><02:19:02.319><c> complicated</c><02:19:02.880><c> binary</c>

02:19:03.190 --> 02:19:03.200 align:start position:0%
and it's a bit more complicated binary
 

02:19:03.200 --> 02:19:04.549 align:start position:0%
and it's a bit more complicated binary
classification<02:19:03.760><c> demo</c><02:19:04.000><c> than</c><02:19:04.160><c> the</c><02:19:04.240><c> one</c><02:19:04.479><c> i</c>

02:19:04.549 --> 02:19:04.559 align:start position:0%
classification demo than the one i
 

02:19:04.559 --> 02:19:07.030 align:start position:0%
classification demo than the one i
covered<02:19:05.120><c> in</c><02:19:05.280><c> this</c><02:19:05.599><c> lecture</c><02:19:06.319><c> so</c><02:19:06.479><c> we</c><02:19:06.639><c> only</c><02:19:06.800><c> had</c><02:19:06.960><c> a</c>

02:19:07.030 --> 02:19:07.040 align:start position:0%
covered in this lecture so we only had a
 

02:19:07.040 --> 02:19:09.910 align:start position:0%
covered in this lecture so we only had a
tiny<02:19:07.280><c> data</c><02:19:07.519><c> set</c><02:19:07.679><c> of</c><02:19:07.760><c> four</c><02:19:08.000><c> examples</c><02:19:08.960><c> um</c><02:19:09.599><c> here</c>

02:19:09.910 --> 02:19:09.920 align:start position:0%
tiny data set of four examples um here
 

02:19:09.920 --> 02:19:11.669 align:start position:0%
tiny data set of four examples um here
we<02:19:10.080><c> have</c><02:19:10.160><c> a</c><02:19:10.240><c> bit</c><02:19:10.399><c> more</c><02:19:10.559><c> complicated</c><02:19:11.040><c> example</c>

02:19:11.669 --> 02:19:11.679 align:start position:0%
we have a bit more complicated example
 

02:19:11.679 --> 02:19:13.669 align:start position:0%
we have a bit more complicated example
with<02:19:12.000><c> lots</c><02:19:12.240><c> of</c><02:19:12.319><c> blue</c><02:19:12.559><c> points</c><02:19:12.800><c> and</c><02:19:12.880><c> lots</c><02:19:13.120><c> of</c><02:19:13.439><c> red</c>

02:19:13.669 --> 02:19:13.679 align:start position:0%
with lots of blue points and lots of red
 

02:19:13.679 --> 02:19:15.589 align:start position:0%
with lots of blue points and lots of red
points<02:19:14.240><c> and</c><02:19:14.399><c> we're</c><02:19:14.639><c> trying</c><02:19:14.800><c> to</c><02:19:15.120><c> again</c><02:19:15.359><c> build</c><02:19:15.519><c> a</c>

02:19:15.589 --> 02:19:15.599 align:start position:0%
points and we're trying to again build a
 

02:19:15.599 --> 02:19:17.990 align:start position:0%
points and we're trying to again build a
binary<02:19:16.000><c> classifier</c><02:19:16.719><c> to</c><02:19:16.800><c> distinguish</c><02:19:17.599><c> uh</c><02:19:17.840><c> two</c>

02:19:17.990 --> 02:19:18.000 align:start position:0%
binary classifier to distinguish uh two
 

02:19:18.000 --> 02:19:20.469 align:start position:0%
binary classifier to distinguish uh two
dimensional<02:19:18.399><c> points</c><02:19:18.800><c> as</c><02:19:19.040><c> red</c><02:19:19.359><c> or</c><02:19:19.519><c> blue</c>

02:19:20.469 --> 02:19:20.479 align:start position:0%
dimensional points as red or blue
 

02:19:20.479 --> 02:19:22.309 align:start position:0%
dimensional points as red or blue
it's<02:19:20.639><c> a</c><02:19:20.719><c> bit</c><02:19:20.880><c> more</c><02:19:21.040><c> complicated</c><02:19:21.599><c> mlp</c><02:19:22.000><c> here</c>

02:19:22.309 --> 02:19:22.319 align:start position:0%
it's a bit more complicated mlp here
 

02:19:22.319 --> 02:19:24.709 align:start position:0%
it's a bit more complicated mlp here
with<02:19:22.719><c> it's</c><02:19:22.880><c> a</c><02:19:22.960><c> bigger</c><02:19:23.519><c> mlp</c>

02:19:24.709 --> 02:19:24.719 align:start position:0%
with it's a bigger mlp
 

02:19:24.719 --> 02:19:26.150 align:start position:0%
with it's a bigger mlp
the<02:19:24.880><c> loss</c><02:19:25.200><c> is</c><02:19:25.280><c> a</c><02:19:25.359><c> bit</c><02:19:25.439><c> more</c><02:19:25.599><c> complicated</c>

02:19:26.150 --> 02:19:26.160 align:start position:0%
the loss is a bit more complicated
 

02:19:26.160 --> 02:19:27.110 align:start position:0%
the loss is a bit more complicated
because

02:19:27.110 --> 02:19:27.120 align:start position:0%
because
 

02:19:27.120 --> 02:19:29.190 align:start position:0%
because
it<02:19:27.280><c> supports</c><02:19:28.160><c> batches</c>

02:19:29.190 --> 02:19:29.200 align:start position:0%
it supports batches
 

02:19:29.200 --> 02:19:31.190 align:start position:0%
it supports batches
so<02:19:29.439><c> because</c><02:19:29.760><c> our</c><02:19:29.840><c> dataset</c><02:19:30.240><c> was</c><02:19:30.399><c> so</c><02:19:30.559><c> tiny</c><02:19:30.960><c> we</c>

02:19:31.190 --> 02:19:31.200 align:start position:0%
so because our dataset was so tiny we
 

02:19:31.200 --> 02:19:32.790 align:start position:0%
so because our dataset was so tiny we
always<02:19:31.359><c> did</c><02:19:31.599><c> a</c><02:19:31.679><c> forward</c><02:19:31.920><c> pass</c><02:19:32.240><c> on</c><02:19:32.319><c> the</c><02:19:32.479><c> entire</c>

02:19:32.790 --> 02:19:32.800 align:start position:0%
always did a forward pass on the entire
 

02:19:32.800 --> 02:19:35.190 align:start position:0%
always did a forward pass on the entire
data<02:19:33.040><c> set</c><02:19:33.359><c> of</c><02:19:33.760><c> four</c><02:19:34.000><c> examples</c><02:19:34.800><c> but</c><02:19:34.960><c> when</c><02:19:35.120><c> your</c>

02:19:35.190 --> 02:19:35.200 align:start position:0%
data set of four examples but when your
 

02:19:35.200 --> 02:19:37.349 align:start position:0%
data set of four examples but when your
data<02:19:35.439><c> set</c><02:19:35.599><c> is</c><02:19:35.679><c> like</c><02:19:35.920><c> a</c><02:19:36.000><c> million</c><02:19:36.399><c> examples</c><02:19:37.200><c> what</c>

02:19:37.349 --> 02:19:37.359 align:start position:0%
data set is like a million examples what
 

02:19:37.359 --> 02:19:39.830 align:start position:0%
data set is like a million examples what
we<02:19:37.519><c> usually</c><02:19:37.840><c> do</c><02:19:38.000><c> in</c><02:19:38.160><c> practice</c><02:19:38.559><c> is</c><02:19:38.719><c> we</c><02:19:39.359><c> chair</c><02:19:39.679><c> we</c>

02:19:39.830 --> 02:19:39.840 align:start position:0%
we usually do in practice is we chair we
 

02:19:39.840 --> 02:19:41.830 align:start position:0%
we usually do in practice is we chair we
basically<02:19:40.240><c> pick</c><02:19:40.479><c> out</c><02:19:40.639><c> some</c><02:19:40.880><c> random</c><02:19:41.280><c> subset</c><02:19:41.679><c> we</c>

02:19:41.830 --> 02:19:41.840 align:start position:0%
basically pick out some random subset we
 

02:19:41.840 --> 02:19:43.750 align:start position:0%
basically pick out some random subset we
call<02:19:42.000><c> that</c><02:19:42.160><c> a</c><02:19:42.240><c> batch</c><02:19:43.040><c> and</c><02:19:43.120><c> then</c><02:19:43.280><c> we</c><02:19:43.439><c> only</c>

02:19:43.750 --> 02:19:43.760 align:start position:0%
call that a batch and then we only
 

02:19:43.760 --> 02:19:45.910 align:start position:0%
call that a batch and then we only
process<02:19:44.080><c> the</c><02:19:44.240><c> batch</c><02:19:44.880><c> forward</c><02:19:45.280><c> backward</c><02:19:45.760><c> and</c>

02:19:45.910 --> 02:19:45.920 align:start position:0%
process the batch forward backward and
 

02:19:45.920 --> 02:19:47.589 align:start position:0%
process the batch forward backward and
update<02:19:46.559><c> so</c><02:19:46.719><c> we</c><02:19:46.800><c> don't</c><02:19:46.960><c> have</c><02:19:47.040><c> to</c><02:19:47.200><c> forward</c><02:19:47.439><c> the</c>

02:19:47.589 --> 02:19:47.599 align:start position:0%
update so we don't have to forward the
 

02:19:47.599 --> 02:19:49.830 align:start position:0%
update so we don't have to forward the
entire<02:19:48.080><c> training</c><02:19:48.399><c> set</c>

02:19:49.830 --> 02:19:49.840 align:start position:0%
entire training set
 

02:19:49.840 --> 02:19:51.190 align:start position:0%
entire training set
so<02:19:50.000><c> this</c><02:19:50.160><c> supports</c><02:19:50.640><c> batching</c><02:19:51.040><c> because</c>

02:19:51.190 --> 02:19:51.200 align:start position:0%
so this supports batching because
 

02:19:51.200 --> 02:19:53.510 align:start position:0%
so this supports batching because
there's<02:19:51.439><c> a</c><02:19:51.520><c> lot</c><02:19:51.680><c> more</c><02:19:51.920><c> examples</c><02:19:52.399><c> here</c>

02:19:53.510 --> 02:19:53.520 align:start position:0%
there's a lot more examples here
 

02:19:53.520 --> 02:19:55.670 align:start position:0%
there's a lot more examples here
we<02:19:53.680><c> do</c><02:19:53.840><c> a</c><02:19:53.920><c> forward</c><02:19:54.240><c> pass</c><02:19:55.040><c> the</c><02:19:55.280><c> loss</c><02:19:55.600><c> is</c>

02:19:55.670 --> 02:19:55.680 align:start position:0%
we do a forward pass the loss is
 

02:19:55.680 --> 02:19:57.590 align:start position:0%
we do a forward pass the loss is
slightly<02:19:56.000><c> more</c><02:19:56.160><c> different</c><02:19:56.640><c> this</c><02:19:56.880><c> is</c><02:19:57.040><c> a</c><02:19:57.359><c> max</c>

02:19:57.590 --> 02:19:57.600 align:start position:0%
slightly more different this is a max
 

02:19:57.600 --> 02:19:59.990 align:start position:0%
slightly more different this is a max
margin<02:19:58.080><c> loss</c><02:19:58.399><c> that</c><02:19:58.640><c> i</c><02:19:58.720><c> implement</c><02:19:59.120><c> here</c>

02:19:59.990 --> 02:20:00.000 align:start position:0%
margin loss that i implement here
 

02:20:00.000 --> 02:20:01.750 align:start position:0%
margin loss that i implement here
the<02:20:00.080><c> one</c><02:20:00.319><c> that</c><02:20:00.479><c> we</c><02:20:00.800><c> used</c><02:20:01.120><c> was</c><02:20:01.439><c> the</c><02:20:01.600><c> mean</c>

02:20:01.750 --> 02:20:01.760 align:start position:0%
the one that we used was the mean
 

02:20:01.760 --> 02:20:03.190 align:start position:0%
the one that we used was the mean
squared<02:20:02.080><c> error</c><02:20:02.319><c> loss</c><02:20:02.720><c> because</c><02:20:02.960><c> it's</c><02:20:03.120><c> the</c>

02:20:03.190 --> 02:20:03.200 align:start position:0%
squared error loss because it's the
 

02:20:03.200 --> 02:20:04.630 align:start position:0%
squared error loss because it's the
simplest<02:20:03.600><c> one</c>

02:20:04.630 --> 02:20:04.640 align:start position:0%
simplest one
 

02:20:04.640 --> 02:20:06.309 align:start position:0%
simplest one
there's<02:20:04.800><c> also</c><02:20:05.120><c> the</c><02:20:05.280><c> binary</c><02:20:05.680><c> cross</c><02:20:05.920><c> entropy</c>

02:20:06.309 --> 02:20:06.319 align:start position:0%
there's also the binary cross entropy
 

02:20:06.319 --> 02:20:08.070 align:start position:0%
there's also the binary cross entropy
loss<02:20:06.880><c> all</c><02:20:07.040><c> of</c><02:20:07.120><c> them</c><02:20:07.280><c> can</c><02:20:07.439><c> be</c><02:20:07.520><c> used</c><02:20:07.680><c> for</c><02:20:07.760><c> binary</c>

02:20:08.070 --> 02:20:08.080 align:start position:0%
loss all of them can be used for binary
 

02:20:08.080 --> 02:20:10.150 align:start position:0%
loss all of them can be used for binary
classification<02:20:09.040><c> and</c><02:20:09.280><c> don't</c><02:20:09.520><c> make</c><02:20:09.840><c> too</c><02:20:10.000><c> much</c>

02:20:10.150 --> 02:20:10.160 align:start position:0%
classification and don't make too much
 

02:20:10.160 --> 02:20:11.590 align:start position:0%
classification and don't make too much
of<02:20:10.240><c> a</c><02:20:10.319><c> difference</c><02:20:10.720><c> in</c><02:20:10.800><c> the</c><02:20:10.880><c> simple</c><02:20:11.200><c> examples</c>

02:20:11.590 --> 02:20:11.600 align:start position:0%
of a difference in the simple examples
 

02:20:11.600 --> 02:20:13.510 align:start position:0%
of a difference in the simple examples
that<02:20:11.680><c> we</c><02:20:11.760><c> looked</c><02:20:12.000><c> at</c><02:20:12.319><c> so</c><02:20:12.479><c> far</c>

02:20:13.510 --> 02:20:13.520 align:start position:0%
that we looked at so far
 

02:20:13.520 --> 02:20:14.790 align:start position:0%
that we looked at so far
there's<02:20:13.680><c> something</c><02:20:14.000><c> called</c><02:20:14.479><c> l2</c>

02:20:14.790 --> 02:20:14.800 align:start position:0%
there's something called l2
 

02:20:14.800 --> 02:20:17.429 align:start position:0%
there's something called l2
regularization<02:20:15.840><c> used</c><02:20:16.080><c> here</c><02:20:16.720><c> this</c><02:20:16.960><c> has</c><02:20:17.120><c> to</c><02:20:17.200><c> do</c>

02:20:17.429 --> 02:20:17.439 align:start position:0%
regularization used here this has to do
 

02:20:17.439 --> 02:20:19.349 align:start position:0%
regularization used here this has to do
with<02:20:17.840><c> generalization</c><02:20:18.479><c> of</c><02:20:18.560><c> the</c><02:20:18.640><c> neural</c><02:20:18.960><c> net</c>

02:20:19.349 --> 02:20:19.359 align:start position:0%
with generalization of the neural net
 

02:20:19.359 --> 02:20:21.830 align:start position:0%
with generalization of the neural net
and<02:20:20.000><c> controls</c><02:20:20.479><c> the</c><02:20:20.640><c> overfitting</c><02:20:21.439><c> in</c><02:20:21.520><c> machine</c>

02:20:21.830 --> 02:20:21.840 align:start position:0%
and controls the overfitting in machine
 

02:20:21.840 --> 02:20:23.349 align:start position:0%
and controls the overfitting in machine
learning<02:20:22.160><c> setting</c><02:20:22.560><c> but</c><02:20:22.720><c> i</c><02:20:22.800><c> did</c><02:20:22.960><c> not</c><02:20:23.120><c> cover</c>

02:20:23.349 --> 02:20:23.359 align:start position:0%
learning setting but i did not cover
 

02:20:23.359 --> 02:20:24.870 align:start position:0%
learning setting but i did not cover
these<02:20:23.520><c> concepts</c><02:20:23.920><c> and</c><02:20:24.240><c> concepts</c><02:20:24.640><c> in</c><02:20:24.720><c> this</c>

02:20:24.870 --> 02:20:24.880 align:start position:0%
these concepts and concepts in this
 

02:20:24.880 --> 02:20:26.870 align:start position:0%
these concepts and concepts in this
video<02:20:25.520><c> potentially</c><02:20:26.000><c> later</c>

02:20:26.870 --> 02:20:26.880 align:start position:0%
video potentially later
 

02:20:26.880 --> 02:20:27.910 align:start position:0%
video potentially later
and<02:20:27.040><c> the</c><02:20:27.120><c> training</c><02:20:27.439><c> loop</c><02:20:27.680><c> you</c><02:20:27.760><c> should</c>

02:20:27.910 --> 02:20:27.920 align:start position:0%
and the training loop you should
 

02:20:27.920 --> 02:20:31.030 align:start position:0%
and the training loop you should
recognize<02:20:28.640><c> so</c><02:20:28.880><c> forward</c><02:20:29.520><c> backward</c><02:20:30.319><c> with</c><02:20:30.800><c> zero</c>

02:20:31.030 --> 02:20:31.040 align:start position:0%
recognize so forward backward with zero
 

02:20:31.040 --> 02:20:32.309 align:start position:0%
recognize so forward backward with zero
grad

02:20:32.309 --> 02:20:32.319 align:start position:0%
grad
 

02:20:32.319 --> 02:20:35.190 align:start position:0%
grad
and<02:20:32.640><c> update</c><02:20:33.439><c> and</c><02:20:33.760><c> so</c><02:20:33.920><c> on</c><02:20:34.560><c> you'll</c><02:20:34.800><c> notice</c><02:20:35.040><c> that</c>

02:20:35.190 --> 02:20:35.200 align:start position:0%
and update and so on you'll notice that
 

02:20:35.200 --> 02:20:36.870 align:start position:0%
and update and so on you'll notice that
in<02:20:35.280><c> the</c><02:20:35.439><c> update</c><02:20:35.680><c> here</c><02:20:35.920><c> the</c><02:20:36.080><c> learning</c><02:20:36.319><c> rate</c><02:20:36.720><c> is</c>

02:20:36.870 --> 02:20:36.880 align:start position:0%
in the update here the learning rate is
 

02:20:36.880 --> 02:20:38.630 align:start position:0%
in the update here the learning rate is
scaled<02:20:37.280><c> as</c><02:20:37.439><c> a</c><02:20:37.520><c> function</c><02:20:37.920><c> of</c><02:20:38.240><c> number</c><02:20:38.479><c> of</c>

02:20:38.630 --> 02:20:38.640 align:start position:0%
scaled as a function of number of
 

02:20:38.640 --> 02:20:40.550 align:start position:0%
scaled as a function of number of
iterations<02:20:39.520><c> and</c><02:20:39.760><c> it</c>

02:20:40.550 --> 02:20:40.560 align:start position:0%
iterations and it
 

02:20:40.560 --> 02:20:41.750 align:start position:0%
iterations and it
shrinks

02:20:41.750 --> 02:20:41.760 align:start position:0%
shrinks
 

02:20:41.760 --> 02:20:43.030 align:start position:0%
shrinks
and<02:20:41.920><c> this</c><02:20:42.160><c> is</c><02:20:42.240><c> something</c><02:20:42.479><c> called</c><02:20:42.720><c> learning</c>

02:20:43.030 --> 02:20:43.040 align:start position:0%
and this is something called learning
 

02:20:43.040 --> 02:20:44.790 align:start position:0%
and this is something called learning
rate<02:20:43.200><c> decay</c><02:20:43.840><c> so</c><02:20:44.080><c> in</c><02:20:44.160><c> the</c><02:20:44.240><c> beginning</c><02:20:44.560><c> you</c><02:20:44.720><c> have</c>

02:20:44.790 --> 02:20:44.800 align:start position:0%
rate decay so in the beginning you have
 

02:20:44.800 --> 02:20:47.030 align:start position:0%
rate decay so in the beginning you have
a<02:20:44.880><c> high</c><02:20:45.040><c> learning</c><02:20:45.359><c> rate</c><02:20:45.760><c> and</c><02:20:45.920><c> as</c><02:20:46.000><c> the</c><02:20:46.240><c> network</c>

02:20:47.030 --> 02:20:47.040 align:start position:0%
a high learning rate and as the network
 

02:20:47.040 --> 02:20:49.349 align:start position:0%
a high learning rate and as the network
sort<02:20:47.200><c> of</c><02:20:47.359><c> stabilizes</c><02:20:48.000><c> near</c><02:20:48.240><c> the</c><02:20:48.399><c> end</c><02:20:48.960><c> you</c>

02:20:49.349 --> 02:20:49.359 align:start position:0%
sort of stabilizes near the end you
 

02:20:49.359 --> 02:20:50.710 align:start position:0%
sort of stabilizes near the end you
bring<02:20:49.600><c> down</c><02:20:49.760><c> the</c><02:20:49.840><c> learning</c><02:20:50.080><c> rate</c><02:20:50.319><c> to</c><02:20:50.399><c> get</c><02:20:50.560><c> some</c>

02:20:50.710 --> 02:20:50.720 align:start position:0%
bring down the learning rate to get some
 

02:20:50.720 --> 02:20:53.110 align:start position:0%
bring down the learning rate to get some
of<02:20:50.800><c> the</c><02:20:50.960><c> fine</c><02:20:51.200><c> details</c><02:20:51.680><c> in</c><02:20:52.000><c> the</c><02:20:52.160><c> end</c>

02:20:53.110 --> 02:20:53.120 align:start position:0%
of the fine details in the end
 

02:20:53.120 --> 02:20:54.870 align:start position:0%
of the fine details in the end
and<02:20:53.520><c> in</c><02:20:53.680><c> the</c><02:20:53.840><c> end</c><02:20:54.000><c> we</c><02:20:54.160><c> see</c><02:20:54.319><c> the</c><02:20:54.399><c> decision</c>

02:20:54.870 --> 02:20:54.880 align:start position:0%
and in the end we see the decision
 

02:20:54.880 --> 02:20:56.630 align:start position:0%
and in the end we see the decision
surface<02:20:55.280><c> of</c><02:20:55.359><c> the</c><02:20:55.439><c> neural</c><02:20:55.760><c> net</c><02:20:56.240><c> and</c><02:20:56.319><c> we</c><02:20:56.479><c> see</c>

02:20:56.630 --> 02:20:56.640 align:start position:0%
surface of the neural net and we see
 

02:20:56.640 --> 02:20:58.550 align:start position:0%
surface of the neural net and we see
that<02:20:56.800><c> it</c><02:20:56.960><c> learns</c><02:20:57.200><c> to</c><02:20:57.439><c> separate</c><02:20:57.840><c> out</c><02:20:58.080><c> the</c><02:20:58.240><c> red</c>

02:20:58.550 --> 02:20:58.560 align:start position:0%
that it learns to separate out the red
 

02:20:58.560 --> 02:21:00.550 align:start position:0%
that it learns to separate out the red
and<02:20:58.640><c> the</c><02:20:58.720><c> blue</c><02:20:59.040><c> area</c><02:20:59.600><c> based</c><02:20:59.920><c> on</c><02:21:00.160><c> the</c><02:21:00.319><c> data</c>

02:21:00.550 --> 02:21:00.560 align:start position:0%
and the blue area based on the data
 

02:21:00.560 --> 02:21:01.910 align:start position:0%
and the blue area based on the data
points

02:21:01.910 --> 02:21:01.920 align:start position:0%
points
 

02:21:01.920 --> 02:21:03.349 align:start position:0%
points
so<02:21:02.080><c> that's</c><02:21:02.240><c> the</c><02:21:02.399><c> slightly</c><02:21:02.720><c> more</c><02:21:02.960><c> complicated</c>

02:21:03.349 --> 02:21:03.359 align:start position:0%
so that's the slightly more complicated
 

02:21:03.359 --> 02:21:05.349 align:start position:0%
so that's the slightly more complicated
example<02:21:03.760><c> and</c><02:21:03.840><c> then</c><02:21:04.080><c> we'll</c><02:21:04.560><c> demo</c><02:21:04.880><c> that</c><02:21:05.040><c> hyper</c>

02:21:05.349 --> 02:21:05.359 align:start position:0%
example and then we'll demo that hyper
 

02:21:05.359 --> 02:21:07.510 align:start position:0%
example and then we'll demo that hyper
ymb<02:21:05.760><c> that</c><02:21:05.920><c> you're</c><02:21:06.080><c> free</c><02:21:06.319><c> to</c><02:21:06.399><c> go</c><02:21:06.560><c> over</c>

02:21:07.510 --> 02:21:07.520 align:start position:0%
ymb that you're free to go over
 

02:21:07.520 --> 02:21:10.230 align:start position:0%
ymb that you're free to go over
but<02:21:07.680><c> yeah</c><02:21:08.000><c> as</c><02:21:08.240><c> of</c><02:21:08.399><c> today</c><02:21:08.800><c> that</c><02:21:08.960><c> is</c><02:21:09.040><c> micrograd</c><02:21:10.000><c> i</c>

02:21:10.230 --> 02:21:10.240 align:start position:0%
but yeah as of today that is micrograd i
 

02:21:10.240 --> 02:21:11.429 align:start position:0%
but yeah as of today that is micrograd i
also<02:21:10.479><c> wanted</c><02:21:10.720><c> to</c><02:21:10.800><c> show</c><02:21:10.960><c> you</c><02:21:11.040><c> a</c><02:21:11.040><c> little</c><02:21:11.200><c> bit</c><02:21:11.359><c> of</c>

02:21:11.429 --> 02:21:11.439 align:start position:0%
also wanted to show you a little bit of
 

02:21:11.439 --> 02:21:13.190 align:start position:0%
also wanted to show you a little bit of
real<02:21:11.840><c> stuff</c><02:21:12.160><c> so</c><02:21:12.319><c> that</c><02:21:12.479><c> you</c><02:21:12.560><c> get</c><02:21:12.720><c> to</c><02:21:12.800><c> see</c><02:21:13.040><c> how</c>

02:21:13.190 --> 02:21:13.200 align:start position:0%
real stuff so that you get to see how
 

02:21:13.200 --> 02:21:14.389 align:start position:0%
real stuff so that you get to see how
this<02:21:13.439><c> is</c><02:21:13.520><c> actually</c><02:21:13.760><c> implemented</c><02:21:14.240><c> in</c>

02:21:14.389 --> 02:21:14.399 align:start position:0%
this is actually implemented in
 

02:21:14.399 --> 02:21:16.630 align:start position:0%
this is actually implemented in
production<02:21:14.800><c> grade</c><02:21:15.040><c> library</c><02:21:15.359><c> like</c><02:21:15.520><c> by</c><02:21:15.760><c> torch</c>

02:21:16.630 --> 02:21:16.640 align:start position:0%
production grade library like by torch
 

02:21:16.640 --> 02:21:18.469 align:start position:0%
production grade library like by torch
uh<02:21:16.880><c> so</c><02:21:17.120><c> in</c><02:21:17.280><c> particular</c><02:21:17.680><c> i</c><02:21:17.760><c> wanted</c><02:21:18.000><c> to</c><02:21:18.080><c> show</c><02:21:18.399><c> i</c>

02:21:18.469 --> 02:21:18.479 align:start position:0%
uh so in particular i wanted to show i
 

02:21:18.479 --> 02:21:20.630 align:start position:0%
uh so in particular i wanted to show i
wanted<02:21:18.720><c> to</c><02:21:18.880><c> find</c><02:21:19.200><c> and</c><02:21:19.359><c> show</c><02:21:19.520><c> you</c><02:21:20.160><c> the</c><02:21:20.319><c> backward</c>

02:21:20.630 --> 02:21:20.640 align:start position:0%
wanted to find and show you the backward
 

02:21:20.640 --> 02:21:23.590 align:start position:0%
wanted to find and show you the backward
pass<02:21:20.880><c> for</c><02:21:21.120><c> 10h</c><02:21:21.760><c> in</c><02:21:22.000><c> pytorch</c><02:21:22.960><c> so</c><02:21:23.200><c> here</c><02:21:23.439><c> in</c>

02:21:23.590 --> 02:21:23.600 align:start position:0%
pass for 10h in pytorch so here in
 

02:21:23.600 --> 02:21:25.190 align:start position:0%
pass for 10h in pytorch so here in
micrograd<02:21:24.160><c> we</c><02:21:24.319><c> see</c><02:21:24.479><c> that</c><02:21:24.720><c> the</c><02:21:24.880><c> backward</c>

02:21:25.190 --> 02:21:25.200 align:start position:0%
micrograd we see that the backward
 

02:21:25.200 --> 02:21:28.469 align:start position:0%
micrograd we see that the backward
password<02:21:25.600><c> 10h</c><02:21:26.160><c> is</c><02:21:26.880><c> one</c><02:21:27.120><c> minus</c><02:21:27.439><c> t</c><02:21:27.680><c> square</c>

02:21:28.469 --> 02:21:28.479 align:start position:0%
password 10h is one minus t square
 

02:21:28.479 --> 02:21:33.190 align:start position:0%
password 10h is one minus t square
where<02:21:28.800><c> t</c><02:21:28.960><c> is</c><02:21:29.120><c> the</c><02:21:29.280><c> output</c><02:21:29.600><c> of</c><02:21:29.680><c> the</c><02:21:29.760><c> tanh</c><02:21:30.640><c> of</c><02:21:30.800><c> x</c>

02:21:33.190 --> 02:21:33.200 align:start position:0%
 
 

02:21:33.200 --> 02:21:34.870 align:start position:0%
 
times<02:21:33.760><c> of</c><02:21:33.840><c> that</c><02:21:34.080><c> grad</c><02:21:34.319><c> which</c><02:21:34.479><c> is</c><02:21:34.560><c> the</c><02:21:34.640><c> chain</c>

02:21:34.870 --> 02:21:34.880 align:start position:0%
times of that grad which is the chain
 

02:21:34.880 --> 02:21:36.469 align:start position:0%
times of that grad which is the chain
rule<02:21:35.359><c> so</c><02:21:35.520><c> we're</c><02:21:35.600><c> looking</c><02:21:35.840><c> for</c><02:21:36.000><c> something</c><02:21:36.240><c> that</c>

02:21:36.469 --> 02:21:36.479 align:start position:0%
rule so we're looking for something that
 

02:21:36.479 --> 02:21:38.070 align:start position:0%
rule so we're looking for something that
looks<02:21:36.880><c> like</c><02:21:37.120><c> this</c>

02:21:38.070 --> 02:21:38.080 align:start position:0%
looks like this
 

02:21:38.080 --> 02:21:39.110 align:start position:0%
looks like this
now

02:21:39.110 --> 02:21:39.120 align:start position:0%
now
 

02:21:39.120 --> 02:21:42.550 align:start position:0%
now
i<02:21:39.280><c> went</c><02:21:39.600><c> to</c><02:21:39.920><c> pytorch</c><02:21:40.720><c> um</c><02:21:41.280><c> which</c><02:21:41.520><c> has</c><02:21:42.160><c> an</c><02:21:42.319><c> open</c>

02:21:42.550 --> 02:21:42.560 align:start position:0%
i went to pytorch um which has an open
 

02:21:42.560 --> 02:21:45.110 align:start position:0%
i went to pytorch um which has an open
source<02:21:42.800><c> github</c><02:21:43.120><c> codebase</c><02:21:44.080><c> and</c><02:21:44.399><c> uh</c><02:21:44.800><c> i</c><02:21:44.960><c> looked</c>

02:21:45.110 --> 02:21:45.120 align:start position:0%
source github codebase and uh i looked
 

02:21:45.120 --> 02:21:47.030 align:start position:0%
source github codebase and uh i looked
through<02:21:45.439><c> a</c><02:21:45.520><c> lot</c><02:21:45.680><c> of</c><02:21:45.840><c> its</c><02:21:46.000><c> code</c>

02:21:47.030 --> 02:21:47.040 align:start position:0%
through a lot of its code
 

02:21:47.040 --> 02:21:49.510 align:start position:0%
through a lot of its code
and<02:21:47.200><c> honestly</c><02:21:48.000><c> i</c><02:21:48.240><c> i</c><02:21:48.640><c> i</c><02:21:48.800><c> spent</c><02:21:49.040><c> about</c><02:21:49.200><c> 15</c>

02:21:49.510 --> 02:21:49.520 align:start position:0%
and honestly i i i spent about 15
 

02:21:49.520 --> 02:21:51.910 align:start position:0%
and honestly i i i spent about 15
minutes<02:21:49.760><c> and</c><02:21:49.840><c> i</c><02:21:49.920><c> couldn't</c><02:21:50.160><c> find</c><02:21:50.399><c> 10h</c>

02:21:51.910 --> 02:21:51.920 align:start position:0%
minutes and i couldn't find 10h
 

02:21:51.920 --> 02:21:53.270 align:start position:0%
minutes and i couldn't find 10h
and<02:21:52.000><c> that's</c><02:21:52.240><c> because</c><02:21:52.479><c> these</c><02:21:52.880><c> libraries</c>

02:21:53.270 --> 02:21:53.280 align:start position:0%
and that's because these libraries
 

02:21:53.280 --> 02:21:55.110 align:start position:0%
and that's because these libraries
unfortunately<02:21:53.920><c> they</c><02:21:54.160><c> grow</c><02:21:54.479><c> in</c><02:21:54.640><c> size</c><02:21:54.960><c> and</c>

02:21:55.110 --> 02:21:55.120 align:start position:0%
unfortunately they grow in size and
 

02:21:55.120 --> 02:21:57.910 align:start position:0%
unfortunately they grow in size and
entropy<02:21:55.760><c> and</c><02:21:55.920><c> if</c><02:21:56.080><c> you</c><02:21:56.160><c> just</c><02:21:56.319><c> search</c><02:21:56.560><c> for</c><02:21:56.800><c> 10h</c>

02:21:57.910 --> 02:21:57.920 align:start position:0%
entropy and if you just search for 10h
 

02:21:57.920 --> 02:22:01.030 align:start position:0%
entropy and if you just search for 10h
you<02:21:58.080><c> get</c><02:21:58.319><c> apparently</c><02:21:58.800><c> 2</c><02:21:59.200><c> 800</c><02:21:59.600><c> results</c><02:22:00.319><c> and</c><02:22:00.479><c> 400</c>

02:22:01.030 --> 02:22:01.040 align:start position:0%
you get apparently 2 800 results and 400
 

02:22:01.040 --> 02:22:03.990 align:start position:0%
you get apparently 2 800 results and 400
and<02:22:01.120><c> 406</c><02:22:01.920><c> files</c><02:22:02.720><c> so</c><02:22:02.960><c> i</c><02:22:03.040><c> don't</c><02:22:03.200><c> know</c><02:22:03.359><c> what</c><02:22:03.760><c> these</c>

02:22:03.990 --> 02:22:04.000 align:start position:0%
and 406 files so i don't know what these
 

02:22:04.000 --> 02:22:07.750 align:start position:0%
and 406 files so i don't know what these
files<02:22:04.560><c> are</c><02:22:04.720><c> doing</c><02:22:05.280><c> honestly</c>

02:22:07.750 --> 02:22:07.760 align:start position:0%
files are doing honestly
 

02:22:07.760 --> 02:22:09.030 align:start position:0%
files are doing honestly
and<02:22:07.840><c> why</c><02:22:08.000><c> there</c><02:22:08.160><c> are</c><02:22:08.240><c> so</c><02:22:08.399><c> many</c><02:22:08.560><c> mentions</c><02:22:08.880><c> of</c>

02:22:09.030 --> 02:22:09.040 align:start position:0%
and why there are so many mentions of
 

02:22:09.040 --> 02:22:11.190 align:start position:0%
and why there are so many mentions of
10h<02:22:09.840><c> but</c><02:22:10.080><c> unfortunately</c><02:22:10.640><c> these</c><02:22:10.800><c> libraries</c>

02:22:11.190 --> 02:22:11.200 align:start position:0%
10h but unfortunately these libraries
 

02:22:11.200 --> 02:22:12.550 align:start position:0%
10h but unfortunately these libraries
are<02:22:11.359><c> quite</c><02:22:11.520><c> complex</c><02:22:12.000><c> they're</c><02:22:12.160><c> meant</c><02:22:12.319><c> to</c><02:22:12.399><c> be</c>

02:22:12.550 --> 02:22:12.560 align:start position:0%
are quite complex they're meant to be
 

02:22:12.560 --> 02:22:15.590 align:start position:0%
are quite complex they're meant to be
used<02:22:12.960><c> not</c><02:22:13.600><c> really</c><02:22:14.000><c> inspected</c><02:22:14.800><c> um</c>

02:22:15.590 --> 02:22:15.600 align:start position:0%
used not really inspected um
 

02:22:15.600 --> 02:22:18.389 align:start position:0%
used not really inspected um
eventually<02:22:16.080><c> i</c><02:22:16.160><c> did</c><02:22:16.399><c> stumble</c><02:22:16.880><c> on</c><02:22:17.280><c> someone</c>

02:22:18.389 --> 02:22:18.399 align:start position:0%
eventually i did stumble on someone
 

02:22:18.399 --> 02:22:21.110 align:start position:0%
eventually i did stumble on someone
who<02:22:18.720><c> tries</c><02:22:19.280><c> to</c><02:22:19.840><c> change</c><02:22:20.160><c> the</c><02:22:20.319><c> 10</c><02:22:20.560><c> h</c><02:22:20.720><c> backward</c>

02:22:21.110 --> 02:22:21.120 align:start position:0%
who tries to change the 10 h backward
 

02:22:21.120 --> 02:22:22.630 align:start position:0%
who tries to change the 10 h backward
code<02:22:21.280><c> for</c><02:22:21.439><c> some</c><02:22:21.680><c> reason</c>

02:22:22.630 --> 02:22:22.640 align:start position:0%
code for some reason
 

02:22:22.640 --> 02:22:24.309 align:start position:0%
code for some reason
and<02:22:22.800><c> someone</c><02:22:23.040><c> here</c><02:22:23.280><c> pointed</c><02:22:23.600><c> to</c><02:22:23.760><c> the</c><02:22:23.920><c> cpu</c>

02:22:24.309 --> 02:22:24.319 align:start position:0%
and someone here pointed to the cpu
 

02:22:24.319 --> 02:22:26.309 align:start position:0%
and someone here pointed to the cpu
kernel<02:22:24.640><c> and</c><02:22:24.720><c> the</c><02:22:24.880><c> kuda</c><02:22:25.200><c> kernel</c><02:22:25.600><c> for</c><02:22:26.000><c> 10</c><02:22:26.160><c> inch</c>

02:22:26.309 --> 02:22:26.319 align:start position:0%
kernel and the kuda kernel for 10 inch
 

02:22:26.319 --> 02:22:27.750 align:start position:0%
kernel and the kuda kernel for 10 inch
backward

02:22:27.750 --> 02:22:27.760 align:start position:0%
backward
 

02:22:27.760 --> 02:22:29.510 align:start position:0%
backward
so<02:22:28.080><c> this</c><02:22:28.479><c> so</c><02:22:28.640><c> basically</c><02:22:28.960><c> depends</c><02:22:29.280><c> on</c><02:22:29.359><c> if</c>

02:22:29.510 --> 02:22:29.520 align:start position:0%
so this so basically depends on if
 

02:22:29.520 --> 02:22:31.590 align:start position:0%
so this so basically depends on if
you're<02:22:29.680><c> using</c><02:22:30.000><c> pi</c><02:22:30.160><c> torch</c><02:22:30.479><c> on</c><02:22:30.560><c> a</c><02:22:30.640><c> cpu</c><02:22:31.040><c> device</c><02:22:31.439><c> or</c>

02:22:31.590 --> 02:22:31.600 align:start position:0%
you're using pi torch on a cpu device or
 

02:22:31.600 --> 02:22:33.270 align:start position:0%
you're using pi torch on a cpu device or
on<02:22:31.760><c> a</c><02:22:31.840><c> gpu</c><02:22:32.319><c> which</c><02:22:32.720><c> these</c><02:22:32.960><c> are</c><02:22:33.120><c> different</c>

02:22:33.270 --> 02:22:33.280 align:start position:0%
on a gpu which these are different
 

02:22:33.280 --> 02:22:35.190 align:start position:0%
on a gpu which these are different
devices<02:22:33.680><c> and</c><02:22:33.840><c> i</c><02:22:33.920><c> haven't</c><02:22:34.080><c> covered</c><02:22:34.399><c> this</c><02:22:35.040><c> but</c>

02:22:35.190 --> 02:22:35.200 align:start position:0%
devices and i haven't covered this but
 

02:22:35.200 --> 02:22:37.750 align:start position:0%
devices and i haven't covered this but
this<02:22:35.359><c> is</c><02:22:35.439><c> the</c><02:22:35.680><c> 10</c><02:22:35.920><c> h</c><02:22:36.080><c> backwards</c><02:22:36.399><c> kernel</c>

02:22:37.750 --> 02:22:37.760 align:start position:0%
this is the 10 h backwards kernel
 

02:22:37.760 --> 02:22:39.990 align:start position:0%
this is the 10 h backwards kernel
for<02:22:38.479><c> uh</c><02:22:38.880><c> cpu</c>

02:22:39.990 --> 02:22:40.000 align:start position:0%
for uh cpu
 

02:22:40.000 --> 02:22:43.910 align:start position:0%
for uh cpu
and<02:22:40.319><c> the</c><02:22:40.399><c> reason</c><02:22:40.640><c> it's</c><02:22:40.800><c> so</c><02:22:41.280><c> large</c><02:22:42.160><c> is</c><02:22:42.800><c> that</c>

02:22:43.910 --> 02:22:43.920 align:start position:0%
and the reason it's so large is that
 

02:22:43.920 --> 02:22:45.429 align:start position:0%
and the reason it's so large is that
number<02:22:44.160><c> one</c><02:22:44.399><c> this</c><02:22:44.560><c> is</c><02:22:44.720><c> like</c><02:22:44.960><c> if</c><02:22:45.040><c> you're</c><02:22:45.200><c> using</c>

02:22:45.429 --> 02:22:45.439 align:start position:0%
number one this is like if you're using
 

02:22:45.439 --> 02:22:46.950 align:start position:0%
number one this is like if you're using
a<02:22:45.520><c> complex</c><02:22:45.920><c> type</c><02:22:46.160><c> which</c><02:22:46.319><c> we</c><02:22:46.479><c> haven't</c><02:22:46.720><c> even</c>

02:22:46.950 --> 02:22:46.960 align:start position:0%
a complex type which we haven't even
 

02:22:46.960 --> 02:22:48.710 align:start position:0%
a complex type which we haven't even
talked<02:22:47.200><c> about</c><02:22:47.760><c> if</c><02:22:47.920><c> you're</c><02:22:48.000><c> using</c><02:22:48.240><c> a</c><02:22:48.319><c> specific</c>

02:22:48.710 --> 02:22:48.720 align:start position:0%
talked about if you're using a specific
 

02:22:48.720 --> 02:22:50.710 align:start position:0%
talked about if you're using a specific
data<02:22:48.960><c> type</c><02:22:49.120><c> of</c><02:22:49.280><c> b-float</c><02:22:49.680><c> 16</c><02:22:50.160><c> which</c><02:22:50.399><c> we</c><02:22:50.479><c> haven't</c>

02:22:50.710 --> 02:22:50.720 align:start position:0%
data type of b-float 16 which we haven't
 

02:22:50.720 --> 02:22:52.550 align:start position:0%
data type of b-float 16 which we haven't
talked<02:22:50.960><c> about</c>

02:22:52.550 --> 02:22:52.560 align:start position:0%
talked about
 

02:22:52.560 --> 02:22:54.950 align:start position:0%
talked about
and<02:22:52.640><c> then</c><02:22:52.880><c> if</c><02:22:52.960><c> you're</c><02:22:53.200><c> not</c><02:22:53.600><c> then</c><02:22:54.399><c> this</c><02:22:54.640><c> is</c><02:22:54.720><c> the</c>

02:22:54.950 --> 02:22:54.960 align:start position:0%
and then if you're not then this is the
 

02:22:54.960 --> 02:22:57.349 align:start position:0%
and then if you're not then this is the
kernel<02:22:55.520><c> and</c><02:22:55.920><c> deep</c><02:22:56.160><c> here</c><02:22:56.560><c> we</c><02:22:56.720><c> see</c><02:22:57.040><c> something</c>

02:22:57.349 --> 02:22:57.359 align:start position:0%
kernel and deep here we see something
 

02:22:57.359 --> 02:23:00.070 align:start position:0%
kernel and deep here we see something
that<02:22:57.760><c> resembles</c><02:22:58.399><c> our</c><02:22:58.800><c> backward</c><02:22:59.120><c> pass</c><02:22:59.840><c> so</c><02:23:00.000><c> they</c>

02:23:00.070 --> 02:23:00.080 align:start position:0%
that resembles our backward pass so they
 

02:23:00.080 --> 02:23:02.230 align:start position:0%
that resembles our backward pass so they
have<02:23:00.319><c> a</c><02:23:00.479><c> times</c><02:23:00.880><c> one</c><02:23:01.120><c> minus</c>

02:23:02.230 --> 02:23:02.240 align:start position:0%
have a times one minus
 

02:23:02.240 --> 02:23:05.349 align:start position:0%
have a times one minus
b<02:23:02.479><c> square</c><02:23:03.280><c> uh</c><02:23:03.680><c> so</c><02:23:03.920><c> this</c><02:23:04.560><c> b</c>

02:23:05.349 --> 02:23:05.359 align:start position:0%
b square uh so this b
 

02:23:05.359 --> 02:23:07.590 align:start position:0%
b square uh so this b
b<02:23:05.600><c> here</c><02:23:06.080><c> must</c><02:23:06.319><c> be</c><02:23:06.560><c> the</c><02:23:06.720><c> output</c><02:23:06.960><c> of</c><02:23:07.040><c> the</c><02:23:07.120><c> 10h</c><02:23:07.520><c> and</c>

02:23:07.590 --> 02:23:07.600 align:start position:0%
b here must be the output of the 10h and
 

02:23:07.600 --> 02:23:10.230 align:start position:0%
b here must be the output of the 10h and
this<02:23:07.840><c> is</c><02:23:08.000><c> the</c><02:23:08.160><c> health.grad</c><02:23:09.359><c> so</c><02:23:09.680><c> here</c><02:23:09.840><c> we</c><02:23:10.000><c> found</c>

02:23:10.230 --> 02:23:10.240 align:start position:0%
this is the health.grad so here we found
 

02:23:10.240 --> 02:23:11.030 align:start position:0%
this is the health.grad so here we found
it

02:23:11.030 --> 02:23:11.040 align:start position:0%
it
 

02:23:11.040 --> 02:23:14.070 align:start position:0%
it
uh<02:23:11.520><c> deep</c><02:23:11.920><c> inside</c>

02:23:14.070 --> 02:23:14.080 align:start position:0%
uh deep inside
 

02:23:14.080 --> 02:23:15.670 align:start position:0%
uh deep inside
pi<02:23:14.240><c> torch</c><02:23:14.479><c> from</c><02:23:14.640><c> this</c><02:23:14.800><c> location</c><02:23:15.280><c> for</c><02:23:15.520><c> some</c>

02:23:15.670 --> 02:23:15.680 align:start position:0%
pi torch from this location for some
 

02:23:15.680 --> 02:23:18.550 align:start position:0%
pi torch from this location for some
reason<02:23:16.000><c> inside</c><02:23:16.240><c> binaryops</c><02:23:16.960><c> kernel</c><02:23:17.680><c> when</c><02:23:18.080><c> 10h</c>

02:23:18.550 --> 02:23:18.560 align:start position:0%
reason inside binaryops kernel when 10h
 

02:23:18.560 --> 02:23:21.190 align:start position:0%
reason inside binaryops kernel when 10h
is<02:23:18.640><c> not</c><02:23:18.880><c> actually</c><02:23:19.120><c> a</c><02:23:19.200><c> binary</c><02:23:19.600><c> op</c>

02:23:21.190 --> 02:23:21.200 align:start position:0%
is not actually a binary op
 

02:23:21.200 --> 02:23:25.030 align:start position:0%
is not actually a binary op
and<02:23:21.359><c> then</c><02:23:21.600><c> this</c><02:23:21.760><c> is</c><02:23:21.840><c> the</c><02:23:22.160><c> gpu</c><02:23:22.560><c> kernel</c>

02:23:25.030 --> 02:23:25.040 align:start position:0%
 
 

02:23:25.040 --> 02:23:26.630 align:start position:0%
 
we're<02:23:25.200><c> not</c><02:23:25.439><c> complex</c>

02:23:26.630 --> 02:23:26.640 align:start position:0%
we're not complex
 

02:23:26.640 --> 02:23:27.510 align:start position:0%
we're not complex
we're

02:23:27.510 --> 02:23:27.520 align:start position:0%
we're
 

02:23:27.520 --> 02:23:29.510 align:start position:0%
we're
here<02:23:28.080><c> and</c><02:23:28.240><c> here</c><02:23:28.479><c> we</c><02:23:28.640><c> go</c><02:23:28.880><c> with</c><02:23:29.120><c> one</c><02:23:29.280><c> line</c><02:23:29.439><c> of</c>

02:23:29.510 --> 02:23:29.520 align:start position:0%
here and here we go with one line of
 

02:23:29.520 --> 02:23:30.630 align:start position:0%
here and here we go with one line of
code

02:23:30.630 --> 02:23:30.640 align:start position:0%
code
 

02:23:30.640 --> 02:23:33.429 align:start position:0%
code
so<02:23:31.280><c> we</c><02:23:31.439><c> did</c><02:23:31.600><c> find</c><02:23:31.840><c> it</c><02:23:32.000><c> but</c><02:23:32.560><c> basically</c>

02:23:33.429 --> 02:23:33.439 align:start position:0%
so we did find it but basically
 

02:23:33.439 --> 02:23:34.790 align:start position:0%
so we did find it but basically
unfortunately<02:23:33.920><c> these</c><02:23:34.000><c> codepieces</c><02:23:34.479><c> are</c><02:23:34.560><c> very</c>

02:23:34.790 --> 02:23:34.800 align:start position:0%
unfortunately these codepieces are very
 

02:23:34.800 --> 02:23:36.230 align:start position:0%
unfortunately these codepieces are very
large<02:23:35.280><c> and</c>

02:23:36.230 --> 02:23:36.240 align:start position:0%
large and
 

02:23:36.240 --> 02:23:38.550 align:start position:0%
large and
micrograd<02:23:37.120><c> is</c><02:23:37.359><c> very</c><02:23:37.600><c> very</c><02:23:37.760><c> simple</c><02:23:38.080><c> but</c><02:23:38.240><c> if</c><02:23:38.399><c> you</c>

02:23:38.550 --> 02:23:38.560 align:start position:0%
micrograd is very very simple but if you
 

02:23:38.560 --> 02:23:40.389 align:start position:0%
micrograd is very very simple but if you
actually<02:23:38.800><c> want</c><02:23:38.960><c> to</c><02:23:39.040><c> use</c><02:23:39.280><c> real</c><02:23:39.520><c> stuff</c><02:23:40.080><c> uh</c>

02:23:40.389 --> 02:23:40.399 align:start position:0%
actually want to use real stuff uh
 

02:23:40.399 --> 02:23:41.910 align:start position:0%
actually want to use real stuff uh
finding<02:23:40.720><c> the</c><02:23:40.800><c> code</c><02:23:41.040><c> for</c><02:23:41.200><c> it</c><02:23:41.359><c> you'll</c><02:23:41.600><c> actually</c>

02:23:41.910 --> 02:23:41.920 align:start position:0%
finding the code for it you'll actually
 

02:23:41.920 --> 02:23:43.910 align:start position:0%
finding the code for it you'll actually
find<02:23:42.080><c> that</c><02:23:42.240><c> difficult</c>

02:23:43.910 --> 02:23:43.920 align:start position:0%
find that difficult
 

02:23:43.920 --> 02:23:45.830 align:start position:0%
find that difficult
i<02:23:44.080><c> also</c><02:23:44.319><c> wanted</c><02:23:44.560><c> to</c><02:23:44.720><c> show</c><02:23:44.880><c> you</c><02:23:45.439><c> a</c><02:23:45.520><c> little</c>

02:23:45.830 --> 02:23:45.840 align:start position:0%
i also wanted to show you a little
 

02:23:45.840 --> 02:23:47.750 align:start position:0%
i also wanted to show you a little
example<02:23:46.319><c> here</c><02:23:46.720><c> where</c><02:23:46.960><c> pytorch</c><02:23:47.439><c> is</c><02:23:47.520><c> showing</c>

02:23:47.750 --> 02:23:47.760 align:start position:0%
example here where pytorch is showing
 

02:23:47.760 --> 02:23:49.670 align:start position:0%
example here where pytorch is showing
you<02:23:47.920><c> how</c><02:23:48.080><c> can</c><02:23:48.240><c> you</c><02:23:48.399><c> can</c><02:23:48.479><c> register</c><02:23:49.120><c> a</c><02:23:49.280><c> new</c><02:23:49.439><c> type</c>

02:23:49.670 --> 02:23:49.680 align:start position:0%
you how can you can register a new type
 

02:23:49.680 --> 02:23:51.110 align:start position:0%
you how can you can register a new type
of<02:23:49.840><c> function</c><02:23:50.160><c> that</c><02:23:50.319><c> you</c><02:23:50.399><c> want</c><02:23:50.560><c> to</c><02:23:50.720><c> add</c><02:23:50.960><c> to</c>

02:23:51.110 --> 02:23:51.120 align:start position:0%
of function that you want to add to
 

02:23:51.120 --> 02:23:53.590 align:start position:0%
of function that you want to add to
pytorch<02:23:51.840><c> as</c><02:23:52.000><c> a</c><02:23:52.080><c> lego</c><02:23:52.399><c> building</c><02:23:52.720><c> block</c>

02:23:53.590 --> 02:23:53.600 align:start position:0%
pytorch as a lego building block
 

02:23:53.600 --> 02:23:55.830 align:start position:0%
pytorch as a lego building block
so<02:23:53.920><c> here</c><02:23:54.160><c> if</c><02:23:54.240><c> you</c><02:23:54.319><c> want</c><02:23:54.479><c> to</c><02:23:54.640><c> for</c><02:23:54.800><c> example</c><02:23:55.120><c> add</c><02:23:55.439><c> a</c>

02:23:55.830 --> 02:23:55.840 align:start position:0%
so here if you want to for example add a
 

02:23:55.840 --> 02:23:59.349 align:start position:0%
so here if you want to for example add a
gender<02:23:56.319><c> polynomial</c><02:23:57.280><c> 3</c>

02:23:59.349 --> 02:23:59.359 align:start position:0%
gender polynomial 3
 

02:23:59.359 --> 02:24:00.630 align:start position:0%
gender polynomial 3
here's<02:23:59.600><c> how</c><02:23:59.760><c> you</c><02:23:59.840><c> could</c><02:24:00.000><c> do</c><02:24:00.160><c> it</c><02:24:00.319><c> you</c><02:24:00.479><c> will</c>

02:24:00.630 --> 02:24:00.640 align:start position:0%
here's how you could do it you will
 

02:24:00.640 --> 02:24:03.590 align:start position:0%
here's how you could do it you will
register<02:24:01.200><c> it</c><02:24:01.840><c> as</c><02:24:02.080><c> a</c><02:24:02.319><c> class</c><02:24:02.720><c> that</c>

02:24:03.590 --> 02:24:03.600 align:start position:0%
register it as a class that
 

02:24:03.600 --> 02:24:06.309 align:start position:0%
register it as a class that
subclasses<02:24:04.240><c> storage.org</c><02:24:05.040><c> that</c><02:24:05.280><c> function</c>

02:24:06.309 --> 02:24:06.319 align:start position:0%
subclasses storage.org that function
 

02:24:06.319 --> 02:24:07.830 align:start position:0%
subclasses storage.org that function
and<02:24:06.399><c> then</c><02:24:06.560><c> you</c><02:24:06.720><c> have</c><02:24:06.800><c> to</c><02:24:06.880><c> tell</c><02:24:07.040><c> pytorch</c><02:24:07.520><c> how</c><02:24:07.680><c> to</c>

02:24:07.830 --> 02:24:07.840 align:start position:0%
and then you have to tell pytorch how to
 

02:24:07.840 --> 02:24:10.790 align:start position:0%
and then you have to tell pytorch how to
forward<02:24:08.640><c> your</c><02:24:09.040><c> new</c><02:24:09.359><c> function</c>

02:24:10.790 --> 02:24:10.800 align:start position:0%
forward your new function
 

02:24:10.800 --> 02:24:12.630 align:start position:0%
forward your new function
and<02:24:11.040><c> how</c><02:24:11.200><c> to</c><02:24:11.359><c> backward</c><02:24:11.760><c> through</c><02:24:11.920><c> it</c>

02:24:12.630 --> 02:24:12.640 align:start position:0%
and how to backward through it
 

02:24:12.640 --> 02:24:14.070 align:start position:0%
and how to backward through it
so<02:24:12.880><c> as</c><02:24:12.960><c> long</c><02:24:13.200><c> as</c><02:24:13.280><c> you</c><02:24:13.359><c> can</c><02:24:13.520><c> do</c><02:24:13.600><c> the</c><02:24:13.680><c> forward</c>

02:24:14.070 --> 02:24:14.080 align:start position:0%
so as long as you can do the forward
 

02:24:14.080 --> 02:24:15.510 align:start position:0%
so as long as you can do the forward
pass<02:24:14.319><c> of</c><02:24:14.479><c> this</c><02:24:14.640><c> little</c><02:24:14.880><c> function</c><02:24:15.200><c> piece</c><02:24:15.439><c> that</c>

02:24:15.510 --> 02:24:15.520 align:start position:0%
pass of this little function piece that
 

02:24:15.520 --> 02:24:17.110 align:start position:0%
pass of this little function piece that
you<02:24:15.600><c> want</c><02:24:15.760><c> to</c><02:24:15.840><c> add</c><02:24:16.160><c> and</c><02:24:16.399><c> as</c><02:24:16.560><c> long</c><02:24:16.800><c> as</c><02:24:16.880><c> you</c><02:24:16.960><c> know</c>

02:24:17.110 --> 02:24:17.120 align:start position:0%
you want to add and as long as you know
 

02:24:17.120 --> 02:24:19.030 align:start position:0%
you want to add and as long as you know
the<02:24:17.520><c> the</c><02:24:17.840><c> local</c><02:24:18.160><c> derivative</c><02:24:18.640><c> the</c><02:24:18.720><c> local</c>

02:24:19.030 --> 02:24:19.040 align:start position:0%
the the local derivative the local
 

02:24:19.040 --> 02:24:20.550 align:start position:0%
the the local derivative the local
gradients<02:24:19.680><c> which</c><02:24:19.920><c> are</c><02:24:20.000><c> implemented</c><02:24:20.399><c> in</c><02:24:20.479><c> the</c>

02:24:20.550 --> 02:24:20.560 align:start position:0%
gradients which are implemented in the
 

02:24:20.560 --> 02:24:22.710 align:start position:0%
gradients which are implemented in the
backward<02:24:21.359><c> pi</c><02:24:21.600><c> torch</c><02:24:21.920><c> will</c><02:24:22.080><c> be</c><02:24:22.160><c> able</c><02:24:22.319><c> to</c><02:24:22.479><c> back</c>

02:24:22.710 --> 02:24:22.720 align:start position:0%
backward pi torch will be able to back
 

02:24:22.720 --> 02:24:24.389 align:start position:0%
backward pi torch will be able to back
propagate<02:24:23.120><c> through</c><02:24:23.280><c> your</c><02:24:23.520><c> function</c><02:24:24.160><c> and</c><02:24:24.240><c> then</c>

02:24:24.389 --> 02:24:24.399 align:start position:0%
propagate through your function and then
 

02:24:24.399 --> 02:24:26.389 align:start position:0%
propagate through your function and then
you<02:24:24.479><c> can</c><02:24:24.640><c> use</c><02:24:24.800><c> this</c><02:24:24.960><c> as</c><02:24:25.120><c> a</c><02:24:25.200><c> lego</c><02:24:25.520><c> block</c><02:24:25.920><c> in</c><02:24:26.240><c> a</c>

02:24:26.389 --> 02:24:26.399 align:start position:0%
you can use this as a lego block in a
 

02:24:26.399 --> 02:24:28.389 align:start position:0%
you can use this as a lego block in a
larger<02:24:26.800><c> lego</c><02:24:27.120><c> castle</c><02:24:27.760><c> of</c><02:24:27.920><c> all</c><02:24:28.000><c> the</c><02:24:28.160><c> different</c>

02:24:28.389 --> 02:24:28.399 align:start position:0%
larger lego castle of all the different
 

02:24:28.399 --> 02:24:31.030 align:start position:0%
larger lego castle of all the different
lego<02:24:28.720><c> blocks</c><02:24:28.960><c> that</c><02:24:29.120><c> pytorch</c><02:24:29.600><c> already</c><02:24:30.000><c> has</c>

02:24:31.030 --> 02:24:31.040 align:start position:0%
lego blocks that pytorch already has
 

02:24:31.040 --> 02:24:32.309 align:start position:0%
lego blocks that pytorch already has
and<02:24:31.280><c> so</c><02:24:31.520><c> that's</c><02:24:31.680><c> the</c><02:24:31.840><c> only</c><02:24:31.920><c> thing</c><02:24:32.080><c> you</c><02:24:32.160><c> have</c><02:24:32.240><c> to</c>

02:24:32.309 --> 02:24:32.319 align:start position:0%
and so that's the only thing you have to
 

02:24:32.319 --> 02:24:33.670 align:start position:0%
and so that's the only thing you have to
tell<02:24:32.479><c> pytorch</c><02:24:32.960><c> and</c><02:24:33.120><c> everything</c><02:24:33.359><c> would</c><02:24:33.520><c> just</c>

02:24:33.670 --> 02:24:33.680 align:start position:0%
tell pytorch and everything would just
 

02:24:33.680 --> 02:24:35.750 align:start position:0%
tell pytorch and everything would just
work<02:24:34.240><c> and</c><02:24:34.399><c> you</c><02:24:34.479><c> can</c><02:24:34.640><c> register</c><02:24:35.280><c> new</c><02:24:35.439><c> types</c><02:24:35.680><c> of</c>

02:24:35.750 --> 02:24:35.760 align:start position:0%
work and you can register new types of
 

02:24:35.760 --> 02:24:36.790 align:start position:0%
work and you can register new types of
functions

02:24:36.790 --> 02:24:36.800 align:start position:0%
functions
 

02:24:36.800 --> 02:24:38.950 align:start position:0%
functions
in<02:24:36.880><c> this</c><02:24:37.120><c> way</c><02:24:37.359><c> following</c><02:24:37.760><c> this</c><02:24:38.000><c> example</c>

02:24:38.950 --> 02:24:38.960 align:start position:0%
in this way following this example
 

02:24:38.960 --> 02:24:40.070 align:start position:0%
in this way following this example
and<02:24:39.040><c> that</c><02:24:39.200><c> is</c><02:24:39.359><c> everything</c><02:24:39.600><c> that</c><02:24:39.680><c> i</c><02:24:39.760><c> wanted</c><02:24:40.000><c> to</c>

02:24:40.070 --> 02:24:40.080 align:start position:0%
and that is everything that i wanted to
 

02:24:40.080 --> 02:24:41.670 align:start position:0%
and that is everything that i wanted to
cover<02:24:40.479><c> in</c><02:24:40.560><c> this</c><02:24:40.720><c> lecture</c>

02:24:41.670 --> 02:24:41.680 align:start position:0%
cover in this lecture
 

02:24:41.680 --> 02:24:42.790 align:start position:0%
cover in this lecture
so<02:24:41.760><c> i</c><02:24:41.920><c> hope</c><02:24:42.080><c> you</c><02:24:42.160><c> enjoyed</c><02:24:42.399><c> building</c><02:24:42.640><c> out</c>

02:24:42.790 --> 02:24:42.800 align:start position:0%
so i hope you enjoyed building out
 

02:24:42.800 --> 02:24:44.389 align:start position:0%
so i hope you enjoyed building out
micrograd<02:24:43.280><c> with</c><02:24:43.439><c> me</c><02:24:43.680><c> i</c><02:24:43.840><c> hope</c><02:24:44.000><c> you</c><02:24:44.080><c> find</c><02:24:44.319><c> it</c>

02:24:44.389 --> 02:24:44.399 align:start position:0%
micrograd with me i hope you find it
 

02:24:44.399 --> 02:24:46.389 align:start position:0%
micrograd with me i hope you find it
interesting<02:24:45.120><c> insightful</c>

02:24:46.389 --> 02:24:46.399 align:start position:0%
interesting insightful
 

02:24:46.399 --> 02:24:47.910 align:start position:0%
interesting insightful
and

02:24:47.910 --> 02:24:47.920 align:start position:0%
and
 

02:24:47.920 --> 02:24:50.070 align:start position:0%
and
yeah<02:24:48.160><c> i</c><02:24:48.240><c> will</c><02:24:48.399><c> post</c><02:24:48.720><c> a</c><02:24:48.720><c> lot</c><02:24:48.880><c> of</c><02:24:48.960><c> the</c><02:24:49.120><c> links</c>

02:24:50.070 --> 02:24:50.080 align:start position:0%
yeah i will post a lot of the links
 

02:24:50.080 --> 02:24:51.670 align:start position:0%
yeah i will post a lot of the links
that<02:24:50.479><c> are</c><02:24:50.560><c> related</c><02:24:50.960><c> to</c><02:24:51.040><c> this</c><02:24:51.200><c> video</c><02:24:51.520><c> in</c><02:24:51.600><c> the</c>

02:24:51.670 --> 02:24:51.680 align:start position:0%
that are related to this video in the
 

02:24:51.680 --> 02:24:53.910 align:start position:0%
that are related to this video in the
video<02:24:51.920><c> description</c><02:24:52.399><c> below</c><02:24:53.120><c> i</c><02:24:53.200><c> will</c><02:24:53.520><c> also</c>

02:24:53.910 --> 02:24:53.920 align:start position:0%
video description below i will also
 

02:24:53.920 --> 02:24:55.670 align:start position:0%
video description below i will also
probably<02:24:54.399><c> post</c><02:24:54.640><c> a</c><02:24:54.800><c> link</c><02:24:55.040><c> to</c><02:24:55.200><c> a</c><02:24:55.280><c> discussion</c>

02:24:55.670 --> 02:24:55.680 align:start position:0%
probably post a link to a discussion
 

02:24:55.680 --> 02:24:56.469 align:start position:0%
probably post a link to a discussion
forum

02:24:56.469 --> 02:24:56.479 align:start position:0%
forum
 

02:24:56.479 --> 02:24:58.150 align:start position:0%
forum
or<02:24:56.560><c> discussion</c><02:24:57.040><c> group</c><02:24:57.280><c> where</c><02:24:57.439><c> you</c><02:24:57.520><c> can</c><02:24:57.680><c> ask</c>

02:24:58.150 --> 02:24:58.160 align:start position:0%
or discussion group where you can ask
 

02:24:58.160 --> 02:25:00.389 align:start position:0%
or discussion group where you can ask
questions<02:24:58.560><c> related</c><02:24:58.960><c> to</c><02:24:59.040><c> this</c><02:24:59.280><c> video</c><02:24:59.920><c> and</c><02:25:00.080><c> then</c>

02:25:00.389 --> 02:25:00.399 align:start position:0%
questions related to this video and then
 

02:25:00.399 --> 02:25:02.230 align:start position:0%
questions related to this video and then
i<02:25:00.560><c> can</c><02:25:00.800><c> answer</c><02:25:01.120><c> or</c><02:25:01.200><c> someone</c><02:25:01.520><c> else</c><02:25:01.600><c> can</c><02:25:01.760><c> answer</c>

02:25:02.230 --> 02:25:02.240 align:start position:0%
i can answer or someone else can answer
 

02:25:02.240 --> 02:25:04.389 align:start position:0%
i can answer or someone else can answer
your<02:25:02.479><c> questions</c><02:25:03.359><c> and</c><02:25:03.600><c> i</c><02:25:03.680><c> may</c><02:25:03.920><c> also</c><02:25:04.080><c> do</c><02:25:04.240><c> a</c>

02:25:04.389 --> 02:25:04.399 align:start position:0%
your questions and i may also do a
 

02:25:04.399 --> 02:25:06.070 align:start position:0%
your questions and i may also do a
follow-up<02:25:04.800><c> video</c><02:25:05.280><c> that</c><02:25:05.520><c> answers</c><02:25:05.760><c> some</c><02:25:05.920><c> of</c><02:25:06.000><c> the</c>

02:25:06.070 --> 02:25:06.080 align:start position:0%
follow-up video that answers some of the
 

02:25:06.080 --> 02:25:08.469 align:start position:0%
follow-up video that answers some of the
most<02:25:06.319><c> common</c><02:25:06.640><c> questions</c>

02:25:08.469 --> 02:25:08.479 align:start position:0%
most common questions
 

02:25:08.479 --> 02:25:10.389 align:start position:0%
most common questions
but<02:25:08.640><c> for</c><02:25:08.720><c> now</c><02:25:08.880><c> that's</c><02:25:09.120><c> it</c><02:25:09.680><c> i</c><02:25:09.840><c> hope</c><02:25:10.000><c> you</c><02:25:10.080><c> enjoyed</c>

02:25:10.389 --> 02:25:10.399 align:start position:0%
but for now that's it i hope you enjoyed
 

02:25:10.399 --> 02:25:11.910 align:start position:0%
but for now that's it i hope you enjoyed
it<02:25:10.560><c> if</c><02:25:10.720><c> you</c><02:25:10.800><c> did</c><02:25:11.120><c> then</c><02:25:11.359><c> please</c><02:25:11.600><c> like</c><02:25:11.840><c> and</c>

02:25:11.910 --> 02:25:11.920 align:start position:0%
it if you did then please like and
 

02:25:11.920 --> 02:25:13.590 align:start position:0%
it if you did then please like and
subscribe<02:25:12.479><c> so</c><02:25:12.640><c> that</c><02:25:12.880><c> youtube</c><02:25:13.200><c> knows</c><02:25:13.439><c> to</c>

02:25:13.590 --> 02:25:13.600 align:start position:0%
subscribe so that youtube knows to
 

02:25:13.600 --> 02:25:15.510 align:start position:0%
subscribe so that youtube knows to
feature<02:25:13.840><c> this</c><02:25:14.080><c> video</c><02:25:14.319><c> to</c><02:25:14.399><c> more</c><02:25:14.560><c> people</c>

02:25:15.510 --> 02:25:15.520 align:start position:0%
feature this video to more people
 

02:25:15.520 --> 02:25:22.389 align:start position:0%
feature this video to more people
and<02:25:16.000><c> that's</c><02:25:16.240><c> it</c><02:25:16.319><c> for</c><02:25:16.479><c> now</c><02:25:16.720><c> i'll</c><02:25:16.880><c> see</c><02:25:16.960><c> you</c><02:25:17.120><c> later</c>

02:25:22.389 --> 02:25:22.399 align:start position:0%
 
 

02:25:22.399 --> 02:25:24.630 align:start position:0%
 
now<02:25:22.640><c> here's</c><02:25:22.880><c> the</c><02:25:22.960><c> problem</c>

02:25:24.630 --> 02:25:24.640 align:start position:0%
now here's the problem
 

02:25:24.640 --> 02:25:25.670 align:start position:0%
now here's the problem
we<02:25:24.800><c> know</c>

02:25:25.670 --> 02:25:25.680 align:start position:0%
we know
 

02:25:25.680 --> 02:25:28.550 align:start position:0%
we know
dl<02:25:26.479><c> by</c>

02:25:28.550 --> 02:25:28.560 align:start position:0%
dl by
 

02:25:28.560 --> 02:25:31.910 align:start position:0%
dl by
wait<02:25:28.800><c> what</c><02:25:29.040><c> is</c><02:25:29.120><c> the</c><02:25:29.200><c> problem</c>

02:25:31.910 --> 02:25:31.920 align:start position:0%
 
 

02:25:31.920 --> 02:25:33.110 align:start position:0%
 
and<02:25:32.000><c> that's</c><02:25:32.240><c> everything</c><02:25:32.560><c> i</c><02:25:32.640><c> wanted</c><02:25:32.800><c> to</c><02:25:32.880><c> cover</c>

02:25:33.110 --> 02:25:33.120 align:start position:0%
and that's everything i wanted to cover
 

02:25:33.120 --> 02:25:34.230 align:start position:0%
and that's everything i wanted to cover
in<02:25:33.200><c> this</c><02:25:33.359><c> lecture</c>

02:25:34.230 --> 02:25:34.240 align:start position:0%
in this lecture
 

02:25:34.240 --> 02:25:35.830 align:start position:0%
in this lecture
so<02:25:34.560><c> i</c><02:25:34.720><c> hope</c>

02:25:35.830 --> 02:25:35.840 align:start position:0%
so i hope
 

02:25:35.840 --> 02:25:38.469 align:start position:0%
so i hope
you<02:25:36.080><c> enjoyed</c><02:25:36.560><c> us</c><02:25:36.800><c> building</c><02:25:37.040><c> up</c><02:25:37.120><c> microcraft</c>

02:25:38.469 --> 02:25:38.479 align:start position:0%
you enjoyed us building up microcraft
 

02:25:38.479 --> 02:25:41.990 align:start position:0%
you enjoyed us building up microcraft
micro<02:25:38.800><c> crab</c>

02:25:41.990 --> 02:25:42.000 align:start position:0%
 
 

02:25:42.000 --> 02:25:43.349 align:start position:0%
 
okay<02:25:42.160><c> now</c><02:25:42.319><c> let's</c><02:25:42.479><c> do</c><02:25:42.640><c> the</c><02:25:42.720><c> exact</c><02:25:43.040><c> same</c><02:25:43.200><c> thing</c>

02:25:43.349 --> 02:25:43.359 align:start position:0%
okay now let's do the exact same thing
 

02:25:43.359 --> 02:25:44.790 align:start position:0%
okay now let's do the exact same thing
for<02:25:43.520><c> multiply</c><02:25:44.080><c> because</c><02:25:44.319><c> we</c><02:25:44.479><c> can't</c><02:25:44.640><c> do</c>

02:25:44.790 --> 02:25:44.800 align:start position:0%
for multiply because we can't do
 

02:25:44.800 --> 02:25:47.830 align:start position:0%
for multiply because we can't do
something<02:25:45.200><c> like</c><02:25:45.520><c> a</c><02:25:45.680><c> times</c><02:25:46.000><c> two</c>

02:25:47.830 --> 02:25:47.840 align:start position:0%
something like a times two
 

02:25:47.840 --> 02:25:50.790 align:start position:0%
something like a times two
oops

02:25:50.790 --> 02:25:50.800 align:start position:0%
 
 

02:25:50.800 --> 02:25:53.680 align:start position:0%
 
i<02:25:50.960><c> know</c><02:25:51.120><c> what</c><02:25:51.280><c> happened</c><02:25:51.520><c> there</c>

