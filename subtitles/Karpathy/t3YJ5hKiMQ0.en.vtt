WEBVTT
Kind: captions
Language: en

00:00:00.000 --> 00:00:02.570 align:start position:0%
 
hi<00:00:00.420><c> everyone</c><00:00:00.680><c> today</c><00:00:01.680><c> we</c><00:00:01.920><c> are</c><00:00:02.040><c> continuing</c><00:00:02.340><c> our</c>

00:00:02.570 --> 00:00:02.580 align:start position:0%
hi everyone today we are continuing our
 

00:00:02.580 --> 00:00:04.490 align:start position:0%
hi everyone today we are continuing our
implementation<00:00:03.060><c> of</c><00:00:03.240><c> make</c><00:00:03.419><c> more</c><00:00:03.659><c> our</c><00:00:04.319><c> favorite</c>

00:00:04.490 --> 00:00:04.500 align:start position:0%
implementation of make more our favorite
 

00:00:04.500 --> 00:00:06.410 align:start position:0%
implementation of make more our favorite
character<00:00:04.860><c> level</c><00:00:05.160><c> language</c><00:00:05.460><c> model</c>

00:00:06.410 --> 00:00:06.420 align:start position:0%
character level language model
 

00:00:06.420 --> 00:00:07.970 align:start position:0%
character level language model
now<00:00:07.020><c> you'll</c><00:00:07.379><c> notice</c><00:00:07.560><c> that</c><00:00:07.680><c> the</c><00:00:07.799><c> background</c>

00:00:07.970 --> 00:00:07.980 align:start position:0%
now you'll notice that the background
 

00:00:07.980 --> 00:00:09.710 align:start position:0%
now you'll notice that the background
behind<00:00:08.280><c> me</c><00:00:08.400><c> is</c><00:00:08.580><c> different</c><00:00:08.700><c> that's</c><00:00:09.120><c> because</c><00:00:09.360><c> I</c>

00:00:09.710 --> 00:00:09.720 align:start position:0%
behind me is different that's because I
 

00:00:09.720 --> 00:00:11.990 align:start position:0%
behind me is different that's because I
am<00:00:09.840><c> in</c><00:00:09.960><c> Kyoto</c><00:00:10.500><c> and</c><00:00:10.740><c> it</c><00:00:10.920><c> is</c><00:00:11.040><c> awesome</c><00:00:11.219><c> so</c><00:00:11.760><c> I'm</c><00:00:11.940><c> in</c>

00:00:11.990 --> 00:00:12.000 align:start position:0%
am in Kyoto and it is awesome so I'm in
 

00:00:12.000 --> 00:00:13.430 align:start position:0%
am in Kyoto and it is awesome so I'm in
a<00:00:12.120><c> hotel</c><00:00:12.179><c> room</c><00:00:12.480><c> here</c>

00:00:13.430 --> 00:00:13.440 align:start position:0%
a hotel room here
 

00:00:13.440 --> 00:00:15.049 align:start position:0%
a hotel room here
now<00:00:13.860><c> over</c><00:00:14.040><c> the</c><00:00:14.219><c> last</c><00:00:14.340><c> few</c><00:00:14.460><c> lectures</c><00:00:14.820><c> we've</c>

00:00:15.049 --> 00:00:15.059 align:start position:0%
now over the last few lectures we've
 

00:00:15.059 --> 00:00:17.750 align:start position:0%
now over the last few lectures we've
built<00:00:15.360><c> up</c><00:00:15.420><c> to</c><00:00:15.599><c> this</c><00:00:15.839><c> architecture</c><00:00:16.440><c> that</c><00:00:17.220><c> is</c><00:00:17.400><c> a</c>

00:00:17.750 --> 00:00:17.760 align:start position:0%
built up to this architecture that is a
 

00:00:17.760 --> 00:00:19.730 align:start position:0%
built up to this architecture that is a
multi-layer<00:00:18.420><c> perceptron</c><00:00:18.900><c> character</c><00:00:19.560><c> level</c>

00:00:19.730 --> 00:00:19.740 align:start position:0%
multi-layer perceptron character level
 

00:00:19.740 --> 00:00:21.470 align:start position:0%
multi-layer perceptron character level
language<00:00:19.980><c> model</c><00:00:20.340><c> so</c><00:00:20.939><c> we</c><00:00:21.060><c> see</c><00:00:21.180><c> that</c><00:00:21.359><c> it</c>

00:00:21.470 --> 00:00:21.480 align:start position:0%
language model so we see that it
 

00:00:21.480 --> 00:00:23.029 align:start position:0%
language model so we see that it
receives<00:00:21.779><c> three</c><00:00:22.020><c> previous</c><00:00:22.260><c> characters</c><00:00:22.619><c> and</c>

00:00:23.029 --> 00:00:23.039 align:start position:0%
receives three previous characters and
 

00:00:23.039 --> 00:00:24.590 align:start position:0%
receives three previous characters and
tries<00:00:23.279><c> to</c><00:00:23.400><c> predict</c><00:00:23.640><c> the</c><00:00:23.820><c> fourth</c><00:00:24.180><c> character</c><00:00:24.420><c> in</c>

00:00:24.590 --> 00:00:24.600 align:start position:0%
tries to predict the fourth character in
 

00:00:24.600 --> 00:00:26.750 align:start position:0%
tries to predict the fourth character in
a<00:00:24.720><c> sequence</c><00:00:25.019><c> using</c><00:00:25.740><c> a</c><00:00:25.980><c> very</c><00:00:26.100><c> simple</c><00:00:26.220><c> multi</c>

00:00:26.750 --> 00:00:26.760 align:start position:0%
a sequence using a very simple multi
 

00:00:26.760 --> 00:00:28.910 align:start position:0%
a sequence using a very simple multi
perceptron<00:00:27.420><c> using</c><00:00:28.080><c> one</c><00:00:28.260><c> hidden</c><00:00:28.619><c> layer</c><00:00:28.859><c> of</c>

00:00:28.910 --> 00:00:28.920 align:start position:0%
perceptron using one hidden layer of
 

00:00:28.920 --> 00:00:31.429 align:start position:0%
perceptron using one hidden layer of
neurons<00:00:29.279><c> with</c><00:00:29.760><c> 10ational</c><00:00:30.240><c> neuralities</c>

00:00:31.429 --> 00:00:31.439 align:start position:0%
neurons with 10ational neuralities
 

00:00:31.439 --> 00:00:33.290 align:start position:0%
neurons with 10ational neuralities
so<00:00:31.859><c> we'd</c><00:00:32.040><c> like</c><00:00:32.220><c> to</c><00:00:32.340><c> do</c><00:00:32.460><c> now</c><00:00:32.640><c> in</c><00:00:32.880><c> this</c><00:00:33.000><c> lecture</c>

00:00:33.290 --> 00:00:33.300 align:start position:0%
so we'd like to do now in this lecture
 

00:00:33.300 --> 00:00:34.610 align:start position:0%
so we'd like to do now in this lecture
is<00:00:33.480><c> I'd</c><00:00:33.600><c> like</c><00:00:33.780><c> to</c><00:00:33.899><c> complexify</c><00:00:34.440><c> this</c>

00:00:34.610 --> 00:00:34.620 align:start position:0%
is I'd like to complexify this
 

00:00:34.620 --> 00:00:36.709 align:start position:0%
is I'd like to complexify this
architecture<00:00:35.100><c> in</c><00:00:35.940><c> particular</c><00:00:36.239><c> we</c><00:00:36.480><c> would</c><00:00:36.600><c> like</c>

00:00:36.709 --> 00:00:36.719 align:start position:0%
architecture in particular we would like
 

00:00:36.719 --> 00:00:38.810 align:start position:0%
architecture in particular we would like
to<00:00:36.840><c> take</c><00:00:36.960><c> more</c><00:00:37.200><c> characters</c><00:00:37.440><c> in</c><00:00:38.219><c> a</c><00:00:38.399><c> sequence</c><00:00:38.640><c> as</c>

00:00:38.810 --> 00:00:38.820 align:start position:0%
to take more characters in a sequence as
 

00:00:38.820 --> 00:00:41.090 align:start position:0%
to take more characters in a sequence as
an<00:00:38.940><c> input</c><00:00:39.180><c> not</c><00:00:39.420><c> just</c><00:00:39.600><c> three</c><00:00:39.840><c> and</c><00:00:40.620><c> in</c><00:00:40.920><c> addition</c>

00:00:41.090 --> 00:00:41.100 align:start position:0%
an input not just three and in addition
 

00:00:41.100 --> 00:00:42.950 align:start position:0%
an input not just three and in addition
to<00:00:41.280><c> that</c><00:00:41.399><c> we</c><00:00:41.640><c> don't</c><00:00:41.760><c> just</c><00:00:42.000><c> want</c><00:00:42.239><c> to</c><00:00:42.360><c> feed</c><00:00:42.780><c> them</c>

00:00:42.950 --> 00:00:42.960 align:start position:0%
to that we don't just want to feed them
 

00:00:42.960 --> 00:00:44.990 align:start position:0%
to that we don't just want to feed them
all<00:00:43.079><c> into</c><00:00:43.320><c> a</c><00:00:43.620><c> single</c><00:00:43.920><c> hidden</c><00:00:44.399><c> layer</c><00:00:44.700><c> because</c>

00:00:44.990 --> 00:00:45.000 align:start position:0%
all into a single hidden layer because
 

00:00:45.000 --> 00:00:46.790 align:start position:0%
all into a single hidden layer because
that<00:00:45.239><c> squashes</c><00:00:45.719><c> too</c><00:00:45.899><c> much</c><00:00:46.020><c> information</c><00:00:46.200><c> too</c>

00:00:46.790 --> 00:00:46.800 align:start position:0%
that squashes too much information too
 

00:00:46.800 --> 00:00:49.069 align:start position:0%
that squashes too much information too
quickly<00:00:47.180><c> instead</c><00:00:48.180><c> we</c><00:00:48.300><c> would</c><00:00:48.420><c> like</c><00:00:48.539><c> to</c><00:00:48.719><c> make</c><00:00:48.780><c> a</c>

00:00:49.069 --> 00:00:49.079 align:start position:0%
quickly instead we would like to make a
 

00:00:49.079 --> 00:00:51.529 align:start position:0%
quickly instead we would like to make a
deeper<00:00:49.379><c> model</c><00:00:49.559><c> that</c><00:00:50.460><c> progressively</c><00:00:51.180><c> fuses</c>

00:00:51.529 --> 00:00:51.539 align:start position:0%
deeper model that progressively fuses
 

00:00:51.539 --> 00:00:53.569 align:start position:0%
deeper model that progressively fuses
this<00:00:51.780><c> information</c><00:00:51.960><c> to</c><00:00:52.739><c> make</c><00:00:52.800><c> its</c><00:00:53.160><c> guess</c><00:00:53.280><c> about</c>

00:00:53.569 --> 00:00:53.579 align:start position:0%
this information to make its guess about
 

00:00:53.579 --> 00:00:55.549 align:start position:0%
this information to make its guess about
the<00:00:53.760><c> next</c><00:00:53.879><c> character</c><00:00:54.059><c> in</c><00:00:54.420><c> a</c><00:00:54.539><c> sequence</c>

00:00:55.549 --> 00:00:55.559 align:start position:0%
the next character in a sequence
 

00:00:55.559 --> 00:00:57.529 align:start position:0%
the next character in a sequence
and<00:00:55.860><c> so</c><00:00:56.039><c> we'll</c><00:00:56.160><c> see</c><00:00:56.280><c> that</c><00:00:56.399><c> as</c><00:00:56.640><c> we</c><00:00:56.820><c> make</c><00:00:57.059><c> this</c>

00:00:57.529 --> 00:00:57.539 align:start position:0%
and so we'll see that as we make this
 

00:00:57.539 --> 00:00:59.869 align:start position:0%
and so we'll see that as we make this
architecture<00:00:58.140><c> more</c><00:00:58.620><c> complex</c><00:00:58.980><c> we're</c><00:00:59.640><c> actually</c>

00:00:59.869 --> 00:00:59.879 align:start position:0%
architecture more complex we're actually
 

00:00:59.879 --> 00:01:01.610 align:start position:0%
architecture more complex we're actually
going<00:01:00.059><c> to</c><00:01:00.180><c> arrive</c><00:01:00.539><c> at</c><00:01:00.780><c> something</c><00:01:01.020><c> that</c><00:01:01.320><c> looks</c>

00:01:01.610 --> 00:01:01.620 align:start position:0%
going to arrive at something that looks
 

00:01:01.620 --> 00:01:03.709 align:start position:0%
going to arrive at something that looks
very<00:01:01.920><c> much</c><00:01:02.100><c> like</c><00:01:02.280><c> a</c><00:01:02.460><c> wavenet</c>

00:01:03.709 --> 00:01:03.719 align:start position:0%
very much like a wavenet
 

00:01:03.719 --> 00:01:05.509 align:start position:0%
very much like a wavenet
the<00:01:04.140><c> witness</c><00:01:04.379><c> is</c><00:01:04.739><c> this</c><00:01:04.860><c> paper</c><00:01:05.040><c> published</c><00:01:05.400><c> by</c>

00:01:05.509 --> 00:01:05.519 align:start position:0%
the witness is this paper published by
 

00:01:05.519 --> 00:01:09.590 align:start position:0%
the witness is this paper published by
the<00:01:05.760><c> point</c><00:01:05.939><c> in</c><00:01:06.180><c> 2016</c><00:01:07.040><c> and</c><00:01:08.040><c> it</c><00:01:08.460><c> is</c><00:01:08.700><c> also</c><00:01:09.060><c> a</c>

00:01:09.590 --> 00:01:09.600 align:start position:0%
the point in 2016 and it is also a
 

00:01:09.600 --> 00:01:11.929 align:start position:0%
the point in 2016 and it is also a
language<00:01:10.020><c> model</c><00:01:10.320><c> basically</c><00:01:10.920><c> but</c><00:01:11.400><c> it</c><00:01:11.580><c> tries</c><00:01:11.820><c> to</c>

00:01:11.929 --> 00:01:11.939 align:start position:0%
language model basically but it tries to
 

00:01:11.939 --> 00:01:13.609 align:start position:0%
language model basically but it tries to
predict<00:01:12.180><c> audio</c><00:01:12.420><c> sequences</c><00:01:12.960><c> instead</c><00:01:13.500><c> of</c>

00:01:13.609 --> 00:01:13.619 align:start position:0%
predict audio sequences instead of
 

00:01:13.619 --> 00:01:15.830 align:start position:0%
predict audio sequences instead of
character<00:01:14.400><c> level</c><00:01:14.700><c> sequences</c><00:01:15.180><c> or</c><00:01:15.420><c> Word</c><00:01:15.659><c> level</c>

00:01:15.830 --> 00:01:15.840 align:start position:0%
character level sequences or Word level
 

00:01:15.840 --> 00:01:18.950 align:start position:0%
character level sequences or Word level
sequences<00:01:16.380><c> but</c><00:01:17.280><c> fundamentally</c><00:01:17.760><c> the</c><00:01:18.119><c> modeling</c>

00:01:18.950 --> 00:01:18.960 align:start position:0%
sequences but fundamentally the modeling
 

00:01:18.960 --> 00:01:20.810 align:start position:0%
sequences but fundamentally the modeling
setup<00:01:19.260><c> is</c><00:01:19.380><c> identical</c><00:01:19.920><c> it</c><00:01:20.460><c> is</c><00:01:20.580><c> an</c><00:01:20.700><c> auto</c>

00:01:20.810 --> 00:01:20.820 align:start position:0%
setup is identical it is an auto
 

00:01:20.820 --> 00:01:23.390 align:start position:0%
setup is identical it is an auto
aggressive<00:01:21.420><c> model</c><00:01:21.900><c> and</c><00:01:22.740><c> it</c><00:01:22.860><c> tries</c><00:01:23.040><c> to</c><00:01:23.159><c> predict</c>

00:01:23.390 --> 00:01:23.400 align:start position:0%
aggressive model and it tries to predict
 

00:01:23.400 --> 00:01:25.429 align:start position:0%
aggressive model and it tries to predict
next<00:01:23.580><c> character</c><00:01:23.820><c> in</c><00:01:24.060><c> a</c><00:01:24.180><c> sequence</c><00:01:24.479><c> and</c><00:01:25.320><c> the</c>

00:01:25.429 --> 00:01:25.439 align:start position:0%
next character in a sequence and the
 

00:01:25.439 --> 00:01:26.810 align:start position:0%
next character in a sequence and the
architecture<00:01:25.979><c> actually</c><00:01:26.159><c> takes</c><00:01:26.460><c> this</c>

00:01:26.810 --> 00:01:26.820 align:start position:0%
architecture actually takes this
 

00:01:26.820 --> 00:01:29.570 align:start position:0%
architecture actually takes this
interesting<00:01:27.320><c> hierarchical</c><00:01:28.520><c> sort</c><00:01:29.520><c> of</c>

00:01:29.570 --> 00:01:29.580 align:start position:0%
interesting hierarchical sort of
 

00:01:29.580 --> 00:01:31.190 align:start position:0%
interesting hierarchical sort of
approach<00:01:30.119><c> to</c><00:01:30.540><c> predicting</c><00:01:30.900><c> the</c><00:01:31.080><c> next</c>

00:01:31.190 --> 00:01:31.200 align:start position:0%
approach to predicting the next
 

00:01:31.200 --> 00:01:33.230 align:start position:0%
approach to predicting the next
character<00:01:31.500><c> in</c><00:01:31.680><c> a</c><00:01:31.799><c> sequence</c><00:01:32.100><c> uh</c><00:01:32.880><c> with</c><00:01:33.180><c> the</c>

00:01:33.230 --> 00:01:33.240 align:start position:0%
character in a sequence uh with the
 

00:01:33.240 --> 00:01:35.810 align:start position:0%
character in a sequence uh with the
street-like<00:01:33.720><c> structure</c><00:01:34.220><c> and</c><00:01:35.220><c> this</c><00:01:35.640><c> is</c><00:01:35.700><c> the</c>

00:01:35.810 --> 00:01:35.820 align:start position:0%
street-like structure and this is the
 

00:01:35.820 --> 00:01:36.890 align:start position:0%
street-like structure and this is the
architecture<00:01:36.299><c> and</c><00:01:36.600><c> we're</c><00:01:36.659><c> going</c><00:01:36.840><c> to</c>

00:01:36.890 --> 00:01:36.900 align:start position:0%
architecture and we're going to
 

00:01:36.900 --> 00:01:38.810 align:start position:0%
architecture and we're going to
implement<00:01:37.259><c> it</c><00:01:37.500><c> in</c><00:01:38.159><c> the</c><00:01:38.280><c> course</c><00:01:38.400><c> of</c><00:01:38.579><c> this</c><00:01:38.700><c> video</c>

00:01:38.810 --> 00:01:38.820 align:start position:0%
implement it in the course of this video
 

00:01:38.820 --> 00:01:41.630 align:start position:0%
implement it in the course of this video
so<00:01:39.420><c> let's</c><00:01:39.600><c> get</c><00:01:39.840><c> started</c><00:01:40.500><c> so</c><00:01:40.979><c> the</c><00:01:41.220><c> starter</c><00:01:41.579><c> code</c>

00:01:41.630 --> 00:01:41.640 align:start position:0%
so let's get started so the starter code
 

00:01:41.640 --> 00:01:43.789 align:start position:0%
so let's get started so the starter code
for<00:01:41.939><c> part</c><00:01:42.240><c> five</c><00:01:42.479><c> is</c><00:01:42.960><c> very</c><00:01:43.140><c> similar</c><00:01:43.500><c> to</c><00:01:43.619><c> where</c>

00:01:43.789 --> 00:01:43.799 align:start position:0%
for part five is very similar to where
 

00:01:43.799 --> 00:01:46.429 align:start position:0%
for part five is very similar to where
we<00:01:43.979><c> ended</c><00:01:44.220><c> up</c><00:01:44.280><c> in</c><00:01:44.520><c> in</c><00:01:44.759><c> part</c><00:01:45.000><c> three</c><00:01:45.360><c> recall</c><00:01:46.320><c> that</c>

00:01:46.429 --> 00:01:46.439 align:start position:0%
we ended up in in part three recall that
 

00:01:46.439 --> 00:01:47.929 align:start position:0%
we ended up in in part three recall that
part<00:01:46.619><c> four</c><00:01:46.920><c> was</c><00:01:47.220><c> the</c><00:01:47.460><c> manual</c><00:01:47.759><c> black</c>

00:01:47.929 --> 00:01:47.939 align:start position:0%
part four was the manual black
 

00:01:47.939 --> 00:01:49.550 align:start position:0%
part four was the manual black
replication<00:01:48.420><c> exercise</c><00:01:48.659><c> that</c><00:01:49.140><c> is</c><00:01:49.259><c> kind</c><00:01:49.380><c> of</c><00:01:49.439><c> an</c>

00:01:49.550 --> 00:01:49.560 align:start position:0%
replication exercise that is kind of an
 

00:01:49.560 --> 00:01:51.590 align:start position:0%
replication exercise that is kind of an
aside<00:01:49.920><c> so</c><00:01:50.640><c> we</c><00:01:50.820><c> are</c><00:01:50.939><c> coming</c><00:01:51.060><c> back</c><00:01:51.299><c> to</c><00:01:51.420><c> part</c>

00:01:51.590 --> 00:01:51.600 align:start position:0%
aside so we are coming back to part
 

00:01:51.600 --> 00:01:53.749 align:start position:0%
aside so we are coming back to part
three<00:01:51.780><c> copy</c><00:01:52.320><c> pasting</c><00:01:52.619><c> chunks</c><00:01:52.920><c> out</c><00:01:52.979><c> of</c><00:01:53.100><c> it</c><00:01:53.220><c> and</c>

00:01:53.749 --> 00:01:53.759 align:start position:0%
three copy pasting chunks out of it and
 

00:01:53.759 --> 00:01:55.190 align:start position:0%
three copy pasting chunks out of it and
that<00:01:54.000><c> is</c><00:01:54.060><c> our</c><00:01:54.180><c> starter</c><00:01:54.540><c> code</c><00:01:54.600><c> for</c><00:01:54.780><c> part</c><00:01:54.960><c> five</c>

00:01:55.190 --> 00:01:55.200 align:start position:0%
that is our starter code for part five
 

00:01:55.200 --> 00:01:57.050 align:start position:0%
that is our starter code for part five
I've<00:01:55.560><c> changed</c><00:01:55.860><c> very</c><00:01:56.040><c> few</c><00:01:56.280><c> things</c><00:01:56.520><c> otherwise</c>

00:01:57.050 --> 00:01:57.060 align:start position:0%
I've changed very few things otherwise
 

00:01:57.060 --> 00:01:59.030 align:start position:0%
I've changed very few things otherwise
so<00:01:57.780><c> a</c><00:01:57.960><c> lot</c><00:01:58.079><c> of</c><00:01:58.200><c> this</c><00:01:58.259><c> should</c><00:01:58.439><c> look</c><00:01:58.560><c> familiar</c><00:01:58.920><c> to</c>

00:01:59.030 --> 00:01:59.040 align:start position:0%
so a lot of this should look familiar to
 

00:01:59.040 --> 00:02:01.190 align:start position:0%
so a lot of this should look familiar to
if<00:01:59.399><c> you've</c><00:01:59.579><c> gone</c><00:01:59.640><c> through</c><00:01:59.820><c> part</c><00:02:00.060><c> three</c><00:02:00.299><c> so</c><00:02:01.079><c> in</c>

00:02:01.190 --> 00:02:01.200 align:start position:0%
if you've gone through part three so in
 

00:02:01.200 --> 00:02:03.109 align:start position:0%
if you've gone through part three so in
particular<00:02:01.560><c> very</c><00:02:01.920><c> briefly</c><00:02:02.340><c> we</c><00:02:02.880><c> are</c><00:02:03.000><c> doing</c>

00:02:03.109 --> 00:02:03.119 align:start position:0%
particular very briefly we are doing
 

00:02:03.119 --> 00:02:05.389 align:start position:0%
particular very briefly we are doing
Imports<00:02:03.600><c> we</c><00:02:04.140><c> are</c><00:02:04.259><c> reading</c><00:02:04.560><c> our</c><00:02:04.680><c> our</c><00:02:04.920><c> data</c><00:02:05.280><c> set</c>

00:02:05.389 --> 00:02:05.399 align:start position:0%
Imports we are reading our our data set
 

00:02:05.399 --> 00:02:09.050 align:start position:0%
Imports we are reading our our data set
of<00:02:05.759><c> words</c><00:02:06.380><c> and</c><00:02:07.380><c> we</c><00:02:07.560><c> are</c><00:02:07.740><c> processing</c><00:02:08.340><c> their</c><00:02:08.759><c> set</c>

00:02:09.050 --> 00:02:09.060 align:start position:0%
of words and we are processing their set
 

00:02:09.060 --> 00:02:11.510 align:start position:0%
of words and we are processing their set
of<00:02:09.179><c> words</c><00:02:09.300><c> into</c><00:02:10.080><c> individual</c><00:02:10.679><c> examples</c><00:02:11.039><c> and</c>

00:02:11.510 --> 00:02:11.520 align:start position:0%
of words into individual examples and
 

00:02:11.520 --> 00:02:13.309 align:start position:0%
of words into individual examples and
none<00:02:11.700><c> of</c><00:02:11.819><c> this</c><00:02:11.940><c> data</c><00:02:12.420><c> generation</c><00:02:12.900><c> code</c><00:02:13.080><c> has</c>

00:02:13.309 --> 00:02:13.319 align:start position:0%
none of this data generation code has
 

00:02:13.319 --> 00:02:15.229 align:start position:0%
none of this data generation code has
changed<00:02:13.620><c> and</c><00:02:14.220><c> basically</c><00:02:14.459><c> we</c><00:02:14.700><c> have</c><00:02:14.879><c> lots</c><00:02:15.180><c> and</c>

00:02:15.229 --> 00:02:15.239 align:start position:0%
changed and basically we have lots and
 

00:02:15.239 --> 00:02:17.690 align:start position:0%
changed and basically we have lots and
lots<00:02:15.480><c> of</c><00:02:15.540><c> examples</c><00:02:16.040><c> in</c><00:02:17.040><c> particular</c><00:02:17.340><c> we</c><00:02:17.580><c> have</c>

00:02:17.690 --> 00:02:17.700 align:start position:0%
lots of examples in particular we have
 

00:02:17.700 --> 00:02:21.530 align:start position:0%
lots of examples in particular we have
182<00:02:18.840><c> 000</c><00:02:18.959><c> examples</c><00:02:19.680><c> of</c><00:02:20.520><c> three</c><00:02:20.879><c> characters</c><00:02:21.120><c> try</c>

00:02:21.530 --> 00:02:21.540 align:start position:0%
182 000 examples of three characters try
 

00:02:21.540 --> 00:02:24.050 align:start position:0%
182 000 examples of three characters try
to<00:02:21.720><c> predict</c><00:02:22.020><c> the</c><00:02:22.440><c> fourth</c><00:02:22.739><c> one</c><00:02:23.400><c> and</c><00:02:23.879><c> we've</c>

00:02:24.050 --> 00:02:24.060 align:start position:0%
to predict the fourth one and we've
 

00:02:24.060 --> 00:02:25.790 align:start position:0%
to predict the fourth one and we've
broken<00:02:24.239><c> up</c><00:02:24.480><c> every</c><00:02:24.720><c> one</c><00:02:24.900><c> of</c><00:02:25.020><c> these</c><00:02:25.140><c> words</c><00:02:25.260><c> into</c>

00:02:25.790 --> 00:02:25.800 align:start position:0%
broken up every one of these words into
 

00:02:25.800 --> 00:02:27.770 align:start position:0%
broken up every one of these words into
little<00:02:26.400><c> problems</c><00:02:26.940><c> of</c><00:02:27.239><c> given</c><00:02:27.660><c> three</c>

00:02:27.770 --> 00:02:27.780 align:start position:0%
little problems of given three
 

00:02:27.780 --> 00:02:29.630 align:start position:0%
little problems of given three
characters<00:02:27.959><c> predict</c><00:02:28.440><c> the</c><00:02:28.560><c> fourth</c><00:02:28.800><c> one</c><00:02:29.340><c> so</c>

00:02:29.630 --> 00:02:29.640 align:start position:0%
characters predict the fourth one so
 

00:02:29.640 --> 00:02:30.830 align:start position:0%
characters predict the fourth one so
this<00:02:29.760><c> is</c><00:02:29.879><c> our</c><00:02:30.000><c> data</c><00:02:30.239><c> set</c><00:02:30.360><c> and</c><00:02:30.540><c> this</c><00:02:30.660><c> is</c><00:02:30.720><c> what</c>

00:02:30.830 --> 00:02:30.840 align:start position:0%
this is our data set and this is what
 

00:02:30.840 --> 00:02:32.930 align:start position:0%
this is our data set and this is what
we're<00:02:30.959><c> trying</c><00:02:31.080><c> to</c><00:02:31.200><c> get</c><00:02:31.319><c> the</c><00:02:31.379><c> neural</c><00:02:31.680><c> lot</c><00:02:31.860><c> to</c><00:02:32.040><c> do</c>

00:02:32.930 --> 00:02:32.940 align:start position:0%
we're trying to get the neural lot to do
 

00:02:32.940 --> 00:02:35.150 align:start position:0%
we're trying to get the neural lot to do
now<00:02:33.480><c> in</c><00:02:33.900><c> part</c><00:02:34.020><c> three</c><00:02:34.260><c> we</c><00:02:34.440><c> started</c><00:02:34.739><c> to</c><00:02:34.860><c> develop</c>

00:02:35.150 --> 00:02:35.160 align:start position:0%
now in part three we started to develop
 

00:02:35.160 --> 00:02:39.530 align:start position:0%
now in part three we started to develop
our<00:02:35.580><c> code</c><00:02:35.760><c> around</c><00:02:36.540><c> these</c><00:02:37.080><c> layer</c><00:02:37.800><c> modules</c>

00:02:39.530 --> 00:02:39.540 align:start position:0%
our code around these layer modules
 

00:02:39.540 --> 00:02:40.970 align:start position:0%
our code around these layer modules
um<00:02:39.599><c> that</c><00:02:39.959><c> are</c><00:02:40.140><c> for</c><00:02:40.260><c> example</c><00:02:40.440><c> like</c><00:02:40.680><c> class</c>

00:02:40.970 --> 00:02:40.980 align:start position:0%
um that are for example like class
 

00:02:40.980 --> 00:02:42.890 align:start position:0%
um that are for example like class
linear<00:02:41.519><c> and</c><00:02:42.120><c> we're</c><00:02:42.239><c> doing</c><00:02:42.420><c> this</c><00:02:42.540><c> because</c><00:02:42.720><c> we</c>

00:02:42.890 --> 00:02:42.900 align:start position:0%
linear and we're doing this because we
 

00:02:42.900 --> 00:02:44.690 align:start position:0%
linear and we're doing this because we
want<00:02:43.080><c> to</c><00:02:43.200><c> think</c><00:02:43.319><c> of</c><00:02:43.440><c> these</c><00:02:43.680><c> modules</c><00:02:44.099><c> as</c>

00:02:44.690 --> 00:02:44.700 align:start position:0%
want to think of these modules as
 

00:02:44.700 --> 00:02:47.449 align:start position:0%
want to think of these modules as
building<00:02:45.000><c> blocks</c><00:02:45.599><c> and</c><00:02:46.319><c> like</c><00:02:46.800><c> a</c><00:02:47.040><c> Lego</c><00:02:47.160><c> building</c>

00:02:47.449 --> 00:02:47.459 align:start position:0%
building blocks and like a Lego building
 

00:02:47.459 --> 00:02:49.130 align:start position:0%
building blocks and like a Lego building
block<00:02:47.760><c> bricks</c><00:02:48.300><c> that</c><00:02:48.480><c> we</c><00:02:48.599><c> can</c><00:02:48.720><c> sort</c><00:02:48.840><c> of</c><00:02:48.959><c> like</c>

00:02:49.130 --> 00:02:49.140 align:start position:0%
block bricks that we can sort of like
 

00:02:49.140 --> 00:02:51.890 align:start position:0%
block bricks that we can sort of like
stack<00:02:49.440><c> up</c><00:02:49.620><c> into</c><00:02:49.800><c> neural</c><00:02:50.160><c> networks</c><00:02:50.580><c> and</c><00:02:51.360><c> we</c><00:02:51.780><c> can</c>

00:02:51.890 --> 00:02:51.900 align:start position:0%
stack up into neural networks and we can
 

00:02:51.900 --> 00:02:53.449 align:start position:0%
stack up into neural networks and we can
feed<00:02:52.019><c> data</c><00:02:52.379><c> between</c><00:02:52.500><c> these</c><00:02:52.860><c> layers</c><00:02:53.040><c> and</c><00:02:53.280><c> stack</c>

00:02:53.449 --> 00:02:53.459 align:start position:0%
feed data between these layers and stack
 

00:02:53.459 --> 00:02:56.630 align:start position:0%
feed data between these layers and stack
them<00:02:53.640><c> up</c><00:02:53.760><c> into</c><00:02:54.000><c> a</c><00:02:54.540><c> sort</c><00:02:54.720><c> of</c><00:02:54.900><c> graphs</c>

00:02:56.630 --> 00:02:56.640 align:start position:0%
them up into a sort of graphs
 

00:02:56.640 --> 00:02:59.030 align:start position:0%
them up into a sort of graphs
now<00:02:57.300><c> we</c><00:02:57.660><c> also</c><00:02:57.900><c> developed</c><00:02:58.260><c> these</c><00:02:58.560><c> layers</c><00:02:58.800><c> to</c>

00:02:59.030 --> 00:02:59.040 align:start position:0%
now we also developed these layers to
 

00:02:59.040 --> 00:03:01.670 align:start position:0%
now we also developed these layers to
have<00:02:59.220><c> apis</c><00:02:59.940><c> and</c><00:03:00.360><c> signatures</c><00:03:00.900><c> very</c><00:03:01.260><c> similar</c><00:03:01.560><c> to</c>

00:03:01.670 --> 00:03:01.680 align:start position:0%
have apis and signatures very similar to
 

00:03:01.680 --> 00:03:04.130 align:start position:0%
have apis and signatures very similar to
those<00:03:01.860><c> that</c><00:03:02.160><c> are</c><00:03:02.280><c> found</c><00:03:02.400><c> in</c><00:03:02.519><c> pytorch</c><00:03:03.420><c> so</c><00:03:03.959><c> we</c>

00:03:04.130 --> 00:03:04.140 align:start position:0%
those that are found in pytorch so we
 

00:03:04.140 --> 00:03:05.930 align:start position:0%
those that are found in pytorch so we
have<00:03:04.200><c> torch.nn</c><00:03:05.040><c> and</c><00:03:05.280><c> it's</c><00:03:05.400><c> got</c><00:03:05.580><c> all</c><00:03:05.760><c> these</c>

00:03:05.930 --> 00:03:05.940 align:start position:0%
have torch.nn and it's got all these
 

00:03:05.940 --> 00:03:07.309 align:start position:0%
have torch.nn and it's got all these
layer<00:03:06.180><c> building</c><00:03:06.300><c> blocks</c><00:03:06.720><c> that</c><00:03:06.959><c> you</c><00:03:07.019><c> would</c><00:03:07.140><c> use</c>

00:03:07.309 --> 00:03:07.319 align:start position:0%
layer building blocks that you would use
 

00:03:07.319 --> 00:03:09.290 align:start position:0%
layer building blocks that you would use
in<00:03:07.500><c> practice</c><00:03:07.680><c> and</c><00:03:08.519><c> we</c><00:03:08.700><c> were</c><00:03:08.819><c> developing</c><00:03:09.180><c> all</c>

00:03:09.290 --> 00:03:09.300 align:start position:0%
in practice and we were developing all
 

00:03:09.300 --> 00:03:11.750 align:start position:0%
in practice and we were developing all
of<00:03:09.420><c> these</c><00:03:09.599><c> to</c><00:03:09.720><c> mimic</c><00:03:10.080><c> the</c><00:03:10.260><c> apis</c><00:03:10.680><c> of</c><00:03:10.920><c> these</c><00:03:11.220><c> so</c>

00:03:11.750 --> 00:03:11.760 align:start position:0%
of these to mimic the apis of these so
 

00:03:11.760 --> 00:03:13.790 align:start position:0%
of these to mimic the apis of these so
for<00:03:11.879><c> example</c><00:03:12.120><c> we</c><00:03:12.300><c> have</c><00:03:12.420><c> linear</c><00:03:12.780><c> so</c><00:03:13.440><c> there</c><00:03:13.620><c> will</c>

00:03:13.790 --> 00:03:13.800 align:start position:0%
for example we have linear so there will
 

00:03:13.800 --> 00:03:17.270 align:start position:0%
for example we have linear so there will
also<00:03:14.099><c> be</c><00:03:14.400><c> a</c><00:03:15.080><c> torch.nn.linear</c><00:03:16.080><c> and</c><00:03:16.920><c> its</c>

00:03:17.270 --> 00:03:17.280 align:start position:0%
also be a torch.nn.linear and its
 

00:03:17.280 --> 00:03:18.710 align:start position:0%
also be a torch.nn.linear and its
signature<00:03:17.640><c> will</c><00:03:17.760><c> be</c><00:03:17.940><c> very</c><00:03:18.060><c> similar</c><00:03:18.360><c> to</c><00:03:18.480><c> our</c>

00:03:18.710 --> 00:03:18.720 align:start position:0%
signature will be very similar to our
 

00:03:18.720 --> 00:03:20.570 align:start position:0%
signature will be very similar to our
signature<00:03:19.200><c> and</c><00:03:19.680><c> the</c><00:03:19.860><c> functionality</c><00:03:20.220><c> will</c><00:03:20.459><c> be</c>

00:03:20.570 --> 00:03:20.580 align:start position:0%
signature and the functionality will be
 

00:03:20.580 --> 00:03:22.430 align:start position:0%
signature and the functionality will be
also<00:03:20.879><c> quite</c><00:03:21.060><c> identical</c><00:03:21.599><c> as</c><00:03:21.780><c> far</c><00:03:21.959><c> as</c><00:03:22.080><c> I'm</c><00:03:22.200><c> aware</c>

00:03:22.430 --> 00:03:22.440 align:start position:0%
also quite identical as far as I'm aware
 

00:03:22.440 --> 00:03:24.589 align:start position:0%
also quite identical as far as I'm aware
so<00:03:22.980><c> we</c><00:03:23.159><c> have</c><00:03:23.280><c> the</c><00:03:23.400><c> linear</c><00:03:23.640><c> layer</c><00:03:23.940><c> with</c><00:03:24.480><c> the</c>

00:03:24.589 --> 00:03:24.599 align:start position:0%
so we have the linear layer with the
 

00:03:24.599 --> 00:03:27.170 align:start position:0%
so we have the linear layer with the
Bass<00:03:24.840><c> from</c><00:03:24.959><c> 1D</c><00:03:25.260><c> layer</c><00:03:25.620><c> and</c><00:03:26.400><c> the</c><00:03:26.519><c> 10h</c><00:03:26.940><c> layer</c>

00:03:27.170 --> 00:03:27.180 align:start position:0%
Bass from 1D layer and the 10h layer
 

00:03:27.180 --> 00:03:29.089 align:start position:0%
Bass from 1D layer and the 10h layer
that<00:03:27.360><c> we</c><00:03:27.540><c> developed</c><00:03:27.840><c> previously</c>

00:03:29.089 --> 00:03:29.099 align:start position:0%
that we developed previously
 

00:03:29.099 --> 00:03:32.030 align:start position:0%
that we developed previously
and<00:03:29.940><c> linear</c><00:03:30.540><c> just</c><00:03:30.720><c> as</c><00:03:30.900><c> a</c><00:03:31.080><c> matrix</c><00:03:31.379><c> multiply</c><00:03:31.739><c> in</c>

00:03:32.030 --> 00:03:32.040 align:start position:0%
and linear just as a matrix multiply in
 

00:03:32.040 --> 00:03:35.089 align:start position:0%
and linear just as a matrix multiply in
the<00:03:32.220><c> forward</c><00:03:32.280><c> pass</c><00:03:32.760><c> of</c><00:03:33.120><c> this</c><00:03:33.360><c> module</c><00:03:34.379><c> batch</c>

00:03:35.089 --> 00:03:35.099 align:start position:0%
the forward pass of this module batch
 

00:03:35.099 --> 00:03:36.530 align:start position:0%
the forward pass of this module batch
number<00:03:35.400><c> of</c><00:03:35.580><c> course</c><00:03:35.700><c> is</c><00:03:35.819><c> this</c><00:03:36.000><c> crazy</c><00:03:36.180><c> layer</c>

00:03:36.530 --> 00:03:36.540 align:start position:0%
number of course is this crazy layer
 

00:03:36.540 --> 00:03:37.430 align:start position:0%
number of course is this crazy layer
that<00:03:36.659><c> we</c><00:03:36.780><c> developed</c><00:03:37.080><c> in</c><00:03:37.200><c> the</c><00:03:37.319><c> previous</c>

00:03:37.430 --> 00:03:37.440 align:start position:0%
that we developed in the previous
 

00:03:37.440 --> 00:03:40.309 align:start position:0%
that we developed in the previous
lecture<00:03:38.340><c> and</c><00:03:39.000><c> what's</c><00:03:39.120><c> crazy</c><00:03:39.360><c> about</c><00:03:39.599><c> it</c><00:03:39.900><c> is</c>

00:03:40.309 --> 00:03:40.319 align:start position:0%
lecture and what's crazy about it is
 

00:03:40.319 --> 00:03:42.949 align:start position:0%
lecture and what's crazy about it is
well<00:03:40.860><c> there's</c><00:03:41.099><c> many</c><00:03:41.280><c> things</c><00:03:41.480><c> number</c><00:03:42.480><c> one</c><00:03:42.659><c> it</c>

00:03:42.949 --> 00:03:42.959 align:start position:0%
well there's many things number one it
 

00:03:42.959 --> 00:03:44.750 align:start position:0%
well there's many things number one it
has<00:03:43.080><c> these</c><00:03:43.440><c> running</c><00:03:43.799><c> mean</c><00:03:44.040><c> and</c><00:03:44.280><c> variances</c>

00:03:44.750 --> 00:03:44.760 align:start position:0%
has these running mean and variances
 

00:03:44.760 --> 00:03:46.490 align:start position:0%
has these running mean and variances
that<00:03:45.120><c> are</c><00:03:45.239><c> trained</c><00:03:45.599><c> outside</c><00:03:45.840><c> of</c><00:03:46.319><c> back</c>

00:03:46.490 --> 00:03:46.500 align:start position:0%
that are trained outside of back
 

00:03:46.500 --> 00:03:49.149 align:start position:0%
that are trained outside of back
propagation<00:03:47.040><c> they</c><00:03:47.459><c> are</c><00:03:47.580><c> trained</c><00:03:47.879><c> using</c>

00:03:49.149 --> 00:03:49.159 align:start position:0%
propagation they are trained using
 

00:03:49.159 --> 00:03:52.309 align:start position:0%
propagation they are trained using
exponential<00:03:50.159><c> moving</c><00:03:50.400><c> average</c><00:03:50.580><c> inside</c><00:03:51.360><c> this</c>

00:03:52.309 --> 00:03:52.319 align:start position:0%
exponential moving average inside this
 

00:03:52.319 --> 00:03:54.410 align:start position:0%
exponential moving average inside this
layer<00:03:52.560><c> when</c><00:03:52.799><c> we</c><00:03:52.920><c> call</c><00:03:53.099><c> the</c><00:03:53.220><c> forward</c><00:03:53.340><c> pass</c>

00:03:54.410 --> 00:03:54.420 align:start position:0%
layer when we call the forward pass
 

00:03:54.420 --> 00:03:56.690 align:start position:0%
layer when we call the forward pass
in<00:03:55.200><c> addition</c><00:03:55.500><c> to</c><00:03:55.620><c> that</c>

00:03:56.690 --> 00:03:56.700 align:start position:0%
in addition to that
 

00:03:56.700 --> 00:03:58.610 align:start position:0%
in addition to that
there's<00:03:57.180><c> this</c><00:03:57.420><c> training</c><00:03:57.780><c> plug</c><00:03:57.900><c> because</c><00:03:58.379><c> the</c>

00:03:58.610 --> 00:03:58.620 align:start position:0%
there's this training plug because the
 

00:03:58.620 --> 00:03:59.869 align:start position:0%
there's this training plug because the
behavior<00:03:58.920><c> of</c><00:03:59.040><c> bathroom</c><00:03:59.159><c> is</c><00:03:59.519><c> different</c><00:03:59.640><c> during</c>

00:03:59.869 --> 00:03:59.879 align:start position:0%
behavior of bathroom is different during
 

00:03:59.879 --> 00:04:02.330 align:start position:0%
behavior of bathroom is different during
train<00:04:00.120><c> time</c><00:04:00.360><c> and</c><00:04:00.900><c> evaluation</c><00:04:01.440><c> time</c><00:04:01.739><c> and</c><00:04:02.220><c> so</c>

00:04:02.330 --> 00:04:02.340 align:start position:0%
train time and evaluation time and so
 

00:04:02.340 --> 00:04:03.530 align:start position:0%
train time and evaluation time and so
suddenly<00:04:02.640><c> we</c><00:04:02.760><c> have</c><00:04:02.879><c> to</c><00:04:02.940><c> be</c><00:04:03.060><c> very</c><00:04:03.180><c> careful</c><00:04:03.360><c> that</c>

00:04:03.530 --> 00:04:03.540 align:start position:0%
suddenly we have to be very careful that
 

00:04:03.540 --> 00:04:05.570 align:start position:0%
suddenly we have to be very careful that
bash<00:04:03.780><c> form</c><00:04:04.019><c> is</c><00:04:04.200><c> in</c><00:04:04.379><c> its</c><00:04:04.620><c> correct</c><00:04:04.799><c> state</c><00:04:05.099><c> that</c>

00:04:05.570 --> 00:04:05.580 align:start position:0%
bash form is in its correct state that
 

00:04:05.580 --> 00:04:07.309 align:start position:0%
bash form is in its correct state that
it's<00:04:05.700><c> in</c><00:04:05.879><c> the</c><00:04:06.000><c> evaluation</c><00:04:06.360><c> state</c><00:04:06.659><c> or</c><00:04:06.959><c> training</c>

00:04:07.309 --> 00:04:07.319 align:start position:0%
it's in the evaluation state or training
 

00:04:07.319 --> 00:04:08.809 align:start position:0%
it's in the evaluation state or training
state<00:04:07.500><c> so</c><00:04:07.920><c> that's</c><00:04:08.099><c> something</c><00:04:08.280><c> to</c><00:04:08.459><c> now</c><00:04:08.640><c> keep</c>

00:04:08.809 --> 00:04:08.819 align:start position:0%
state so that's something to now keep
 

00:04:08.819 --> 00:04:10.190 align:start position:0%
state so that's something to now keep
track<00:04:09.000><c> of</c><00:04:09.180><c> something</c><00:04:09.599><c> that</c><00:04:09.840><c> sometimes</c>

00:04:10.190 --> 00:04:10.200 align:start position:0%
track of something that sometimes
 

00:04:10.200 --> 00:04:11.570 align:start position:0%
track of something that sometimes
introduces<00:04:10.680><c> bugs</c>

00:04:11.570 --> 00:04:11.580 align:start position:0%
introduces bugs
 

00:04:11.580 --> 00:04:13.670 align:start position:0%
introduces bugs
uh<00:04:12.180><c> because</c><00:04:12.360><c> you</c><00:04:12.540><c> forget</c><00:04:12.720><c> to</c><00:04:13.019><c> put</c><00:04:13.260><c> it</c><00:04:13.379><c> into</c><00:04:13.500><c> the</c>

00:04:13.670 --> 00:04:13.680 align:start position:0%
uh because you forget to put it into the
 

00:04:13.680 --> 00:04:15.649 align:start position:0%
uh because you forget to put it into the
right<00:04:13.799><c> mode</c><00:04:14.099><c> and</c><00:04:15.000><c> finally</c><00:04:15.180><c> we</c><00:04:15.360><c> saw</c><00:04:15.540><c> that</c>

00:04:15.649 --> 00:04:15.659 align:start position:0%
right mode and finally we saw that
 

00:04:15.659 --> 00:04:18.050 align:start position:0%
right mode and finally we saw that
Bachelor<00:04:15.959><c> couples</c><00:04:16.500><c> the</c><00:04:16.739><c> statistics</c><00:04:17.220><c> or</c><00:04:17.760><c> the</c>

00:04:18.050 --> 00:04:18.060 align:start position:0%
Bachelor couples the statistics or the
 

00:04:18.060 --> 00:04:20.629 align:start position:0%
Bachelor couples the statistics or the
the<00:04:18.239><c> activations</c><00:04:18.799><c> across</c><00:04:19.799><c> the</c><00:04:20.040><c> examples</c><00:04:20.400><c> in</c>

00:04:20.629 --> 00:04:20.639 align:start position:0%
the activations across the examples in
 

00:04:20.639 --> 00:04:22.909 align:start position:0%
the activations across the examples in
the<00:04:20.760><c> batch</c><00:04:21.299><c> so</c><00:04:21.840><c> normally</c><00:04:22.260><c> we</c><00:04:22.440><c> thought</c><00:04:22.620><c> of</c><00:04:22.800><c> the</c>

00:04:22.909 --> 00:04:22.919 align:start position:0%
the batch so normally we thought of the
 

00:04:22.919 --> 00:04:25.570 align:start position:0%
the batch so normally we thought of the
bat<00:04:23.040><c> as</c><00:04:23.280><c> just</c><00:04:23.460><c> an</c><00:04:23.520><c> efficiency</c><00:04:23.940><c> thing</c><00:04:24.320><c> but</c><00:04:25.320><c> now</c>

00:04:25.570 --> 00:04:25.580 align:start position:0%
bat as just an efficiency thing but now
 

00:04:25.580 --> 00:04:28.550 align:start position:0%
bat as just an efficiency thing but now
we<00:04:26.580><c> are</c><00:04:26.759><c> coupling</c><00:04:27.479><c> the</c><00:04:27.660><c> computation</c><00:04:28.020><c> across</c>

00:04:28.550 --> 00:04:28.560 align:start position:0%
we are coupling the computation across
 

00:04:28.560 --> 00:04:30.650 align:start position:0%
we are coupling the computation across
batch<00:04:28.740><c> elements</c><00:04:29.220><c> and</c><00:04:29.940><c> it's</c><00:04:30.120><c> done</c><00:04:30.300><c> for</c><00:04:30.479><c> the</c>

00:04:30.650 --> 00:04:30.660 align:start position:0%
batch elements and it's done for the
 

00:04:30.660 --> 00:04:32.030 align:start position:0%
batch elements and it's done for the
purposes<00:04:30.960><c> of</c><00:04:31.139><c> controlling</c><00:04:31.560><c> the</c><00:04:31.680><c> automation</c>

00:04:32.030 --> 00:04:32.040 align:start position:0%
purposes of controlling the automation
 

00:04:32.040 --> 00:04:33.890 align:start position:0%
purposes of controlling the automation
statistics<00:04:32.580><c> as</c><00:04:32.820><c> we</c><00:04:33.060><c> saw</c><00:04:33.479><c> in</c><00:04:33.600><c> the</c><00:04:33.780><c> previous</c>

00:04:33.890 --> 00:04:33.900 align:start position:0%
statistics as we saw in the previous
 

00:04:33.900 --> 00:04:34.969 align:start position:0%
statistics as we saw in the previous
video

00:04:34.969 --> 00:04:34.979 align:start position:0%
video
 

00:04:34.979 --> 00:04:36.950 align:start position:0%
video
so<00:04:35.460><c> it's</c><00:04:35.580><c> a</c><00:04:35.759><c> very</c><00:04:35.880><c> weird</c><00:04:36.060><c> layer</c><00:04:36.360><c> at</c><00:04:36.720><c> least</c><00:04:36.840><c> a</c>

00:04:36.950 --> 00:04:36.960 align:start position:0%
so it's a very weird layer at least a
 

00:04:36.960 --> 00:04:38.350 align:start position:0%
so it's a very weird layer at least a
lot<00:04:37.139><c> of</c><00:04:37.320><c> bugs</c>

00:04:38.350 --> 00:04:38.360 align:start position:0%
lot of bugs
 

00:04:38.360 --> 00:04:40.430 align:start position:0%
lot of bugs
partly<00:04:39.360><c> for</c><00:04:39.540><c> example</c><00:04:39.780><c> because</c><00:04:40.080><c> you</c><00:04:40.259><c> have</c><00:04:40.380><c> to</c>

00:04:40.430 --> 00:04:40.440 align:start position:0%
partly for example because you have to
 

00:04:40.440 --> 00:04:42.290 align:start position:0%
partly for example because you have to
modulate<00:04:40.800><c> the</c><00:04:40.979><c> training</c><00:04:41.280><c> in</c><00:04:41.460><c> eval</c><00:04:41.940><c> phase</c><00:04:42.120><c> and</c>

00:04:42.290 --> 00:04:42.300 align:start position:0%
modulate the training in eval phase and
 

00:04:42.300 --> 00:04:44.570 align:start position:0%
modulate the training in eval phase and
so<00:04:42.479><c> on</c>

00:04:44.570 --> 00:04:44.580 align:start position:0%
so on
 

00:04:44.580 --> 00:04:46.430 align:start position:0%
so on
um<00:04:44.639><c> in</c><00:04:45.240><c> addition</c><00:04:45.540><c> for</c><00:04:45.780><c> example</c><00:04:45.960><c> you</c><00:04:46.199><c> have</c><00:04:46.320><c> to</c>

00:04:46.430 --> 00:04:46.440 align:start position:0%
um in addition for example you have to
 

00:04:46.440 --> 00:04:49.189 align:start position:0%
um in addition for example you have to
wait<00:04:46.680><c> for</c><00:04:47.220><c> uh</c><00:04:47.820><c> the</c><00:04:48.120><c> mean</c><00:04:48.360><c> and</c><00:04:48.600><c> the</c><00:04:48.720><c> variance</c><00:04:49.020><c> to</c>

00:04:49.189 --> 00:04:49.199 align:start position:0%
wait for uh the mean and the variance to
 

00:04:49.199 --> 00:04:51.230 align:start position:0%
wait for uh the mean and the variance to
settle<00:04:49.620><c> and</c><00:04:49.860><c> to</c><00:04:50.040><c> actually</c><00:04:50.160><c> reach</c><00:04:50.639><c> a</c><00:04:51.000><c> steady</c>

00:04:51.230 --> 00:04:51.240 align:start position:0%
settle and to actually reach a steady
 

00:04:51.240 --> 00:04:53.810 align:start position:0%
settle and to actually reach a steady
state<00:04:51.479><c> and</c><00:04:52.320><c> so</c><00:04:52.919><c> um</c><00:04:52.919><c> you</c><00:04:53.340><c> have</c><00:04:53.460><c> to</c><00:04:53.580><c> make</c><00:04:53.699><c> sure</c>

00:04:53.810 --> 00:04:53.820 align:start position:0%
state and so um you have to make sure
 

00:04:53.820 --> 00:04:55.670 align:start position:0%
state and so um you have to make sure
that<00:04:54.060><c> you</c><00:04:54.240><c> basically</c><00:04:54.720><c> there's</c><00:04:54.960><c> state</c><00:04:55.259><c> in</c><00:04:55.500><c> this</c>

00:04:55.670 --> 00:04:55.680 align:start position:0%
that you basically there's state in this
 

00:04:55.680 --> 00:04:59.810 align:start position:0%
that you basically there's state in this
layer<00:04:55.919><c> and</c><00:04:56.280><c> state</c><00:04:56.580><c> is</c><00:04:56.759><c> harmful</c><00:04:57.199><c> uh</c><00:04:58.199><c> usually</c>

00:04:59.810 --> 00:04:59.820 align:start position:0%
layer and state is harmful uh usually
 

00:04:59.820 --> 00:05:02.689 align:start position:0%
layer and state is harmful uh usually
now<00:05:00.360><c> I</c><00:05:00.840><c> brought</c><00:05:01.080><c> out</c><00:05:01.440><c> the</c><00:05:01.919><c> generator</c><00:05:02.280><c> object</c>

00:05:02.689 --> 00:05:02.699 align:start position:0%
now I brought out the generator object
 

00:05:02.699 --> 00:05:04.790 align:start position:0%
now I brought out the generator object
previously<00:05:03.360><c> we</c><00:05:03.540><c> had</c><00:05:03.660><c> a</c><00:05:03.840><c> generator</c><00:05:04.199><c> equals</c><00:05:04.620><c> g</c>

00:05:04.790 --> 00:05:04.800 align:start position:0%
previously we had a generator equals g
 

00:05:04.800 --> 00:05:07.010 align:start position:0%
previously we had a generator equals g
and<00:05:05.160><c> so</c><00:05:05.340><c> on</c><00:05:05.460><c> inside</c><00:05:05.699><c> these</c><00:05:06.000><c> layers</c><00:05:06.300><c> I've</c>

00:05:07.010 --> 00:05:07.020 align:start position:0%
and so on inside these layers I've
 

00:05:07.020 --> 00:05:08.510 align:start position:0%
and so on inside these layers I've
discarded<00:05:07.620><c> that</c><00:05:07.740><c> in</c><00:05:07.919><c> favor</c><00:05:08.040><c> of</c><00:05:08.280><c> just</c>

00:05:08.510 --> 00:05:08.520 align:start position:0%
discarded that in favor of just
 

00:05:08.520 --> 00:05:12.950 align:start position:0%
discarded that in favor of just
initializing<00:05:09.300><c> the</c><00:05:10.040><c> torch</c><00:05:11.120><c> RNG</c><00:05:12.120><c> outside</c><00:05:12.600><c> here</c>

00:05:12.950 --> 00:05:12.960 align:start position:0%
initializing the torch RNG outside here
 

00:05:12.960 --> 00:05:15.530 align:start position:0%
initializing the torch RNG outside here
use<00:05:13.199><c> it</c><00:05:13.440><c> just</c><00:05:13.680><c> once</c><00:05:13.979><c> globally</c><00:05:14.460><c> just</c><00:05:15.360><c> for</c>

00:05:15.530 --> 00:05:15.540 align:start position:0%
use it just once globally just for
 

00:05:15.540 --> 00:05:16.730 align:start position:0%
use it just once globally just for
Simplicity

00:05:16.730 --> 00:05:16.740 align:start position:0%
Simplicity
 

00:05:16.740 --> 00:05:18.230 align:start position:0%
Simplicity
and<00:05:17.220><c> then</c><00:05:17.340><c> here</c><00:05:17.520><c> we</c><00:05:17.639><c> are</c><00:05:17.759><c> starting</c><00:05:17.940><c> to</c><00:05:18.060><c> build</c>

00:05:18.230 --> 00:05:18.240 align:start position:0%
and then here we are starting to build
 

00:05:18.240 --> 00:05:19.909 align:start position:0%
and then here we are starting to build
out<00:05:18.360><c> some</c><00:05:18.600><c> of</c><00:05:18.720><c> the</c><00:05:18.840><c> neural</c><00:05:19.320><c> network</c><00:05:19.380><c> elements</c>

00:05:19.909 --> 00:05:19.919 align:start position:0%
out some of the neural network elements
 

00:05:19.919 --> 00:05:22.730 align:start position:0%
out some of the neural network elements
this<00:05:20.460><c> should</c><00:05:20.639><c> look</c><00:05:20.820><c> very</c><00:05:20.940><c> familiar</c><00:05:21.419><c> we</c><00:05:22.259><c> are</c><00:05:22.380><c> we</c>

00:05:22.730 --> 00:05:22.740 align:start position:0%
this should look very familiar we are we
 

00:05:22.740 --> 00:05:24.650 align:start position:0%
this should look very familiar we are we
have<00:05:22.860><c> our</c><00:05:22.979><c> embedding</c><00:05:23.340><c> table</c><00:05:23.520><c> C</c><00:05:23.820><c> and</c><00:05:24.479><c> then</c><00:05:24.539><c> we</c>

00:05:24.650 --> 00:05:24.660 align:start position:0%
have our embedding table C and then we
 

00:05:24.660 --> 00:05:27.050 align:start position:0%
have our embedding table C and then we
have<00:05:24.780><c> a</c><00:05:24.900><c> list</c><00:05:25.020><c> of</c><00:05:25.199><c> players</c><00:05:25.560><c> and</c><00:05:26.460><c> uh</c><00:05:26.759><c> it's</c><00:05:26.940><c> a</c>

00:05:27.050 --> 00:05:27.060 align:start position:0%
have a list of players and uh it's a
 

00:05:27.060 --> 00:05:29.170 align:start position:0%
have a list of players and uh it's a
linear<00:05:27.300><c> feeds</c><00:05:27.720><c> to</c><00:05:27.840><c> Bachelor</c><00:05:28.199><c> feeds</c><00:05:28.560><c> to</c><00:05:28.680><c> 10h</c>

00:05:29.170 --> 00:05:29.180 align:start position:0%
linear feeds to Bachelor feeds to 10h
 

00:05:29.180 --> 00:05:32.390 align:start position:0%
linear feeds to Bachelor feeds to 10h
and<00:05:30.180><c> then</c><00:05:30.300><c> a</c><00:05:30.539><c> linear</c><00:05:30.840><c> output</c><00:05:31.139><c> layer</c><00:05:31.500><c> and</c><00:05:32.039><c> its</c>

00:05:32.390 --> 00:05:32.400 align:start position:0%
and then a linear output layer and its
 

00:05:32.400 --> 00:05:33.830 align:start position:0%
and then a linear output layer and its
weights<00:05:32.639><c> are</c><00:05:32.759><c> scaled</c><00:05:33.120><c> down</c><00:05:33.180><c> so</c><00:05:33.419><c> we</c><00:05:33.539><c> are</c><00:05:33.720><c> not</c>

00:05:33.830 --> 00:05:33.840 align:start position:0%
weights are scaled down so we are not
 

00:05:33.840 --> 00:05:36.529 align:start position:0%
weights are scaled down so we are not
confidently<00:05:34.380><c> wrong</c><00:05:34.620><c> at</c><00:05:35.220><c> the</c><00:05:35.400><c> initialization</c>

00:05:36.529 --> 00:05:36.539 align:start position:0%
confidently wrong at the initialization
 

00:05:36.539 --> 00:05:38.090 align:start position:0%
confidently wrong at the initialization
we<00:05:36.960><c> see</c><00:05:37.080><c> that</c><00:05:37.259><c> this</c><00:05:37.380><c> is</c><00:05:37.500><c> about</c><00:05:37.620><c> 12</c><00:05:38.039><c> 000</c>

00:05:38.090 --> 00:05:38.100 align:start position:0%
we see that this is about 12 000
 

00:05:38.100 --> 00:05:40.490 align:start position:0%
we see that this is about 12 000
parameters<00:05:38.580><c> we're</c><00:05:39.539><c> telling</c><00:05:39.840><c> pytorch</c><00:05:40.320><c> that</c>

00:05:40.490 --> 00:05:40.500 align:start position:0%
parameters we're telling pytorch that
 

00:05:40.500 --> 00:05:42.650 align:start position:0%
parameters we're telling pytorch that
the<00:05:40.860><c> parameters</c><00:05:41.100><c> require</c><00:05:41.340><c> gradients</c>

00:05:42.650 --> 00:05:42.660 align:start position:0%
the parameters require gradients
 

00:05:42.660 --> 00:05:44.930 align:start position:0%
the parameters require gradients
the<00:05:43.139><c> optimization</c><00:05:43.680><c> is</c><00:05:44.039><c> as</c><00:05:44.220><c> far</c><00:05:44.400><c> as</c><00:05:44.580><c> I'm</c><00:05:44.699><c> aware</c>

00:05:44.930 --> 00:05:44.940 align:start position:0%
the optimization is as far as I'm aware
 

00:05:44.940 --> 00:05:46.610 align:start position:0%
the optimization is as far as I'm aware
identical<00:05:45.600><c> and</c><00:05:45.900><c> should</c><00:05:46.139><c> look</c><00:05:46.320><c> very</c><00:05:46.500><c> very</c>

00:05:46.610 --> 00:05:46.620 align:start position:0%
identical and should look very very
 

00:05:46.620 --> 00:05:47.749 align:start position:0%
identical and should look very very
familiar

00:05:47.749 --> 00:05:47.759 align:start position:0%
familiar
 

00:05:47.759 --> 00:05:49.430 align:start position:0%
familiar
nothing<00:05:48.300><c> changed</c><00:05:48.720><c> here</c>

00:05:49.430 --> 00:05:49.440 align:start position:0%
nothing changed here
 

00:05:49.440 --> 00:05:52.909 align:start position:0%
nothing changed here
uh<00:05:50.160><c> loss</c><00:05:50.520><c> function</c><00:05:50.759><c> looks</c><00:05:51.120><c> very</c><00:05:51.780><c> crazy</c><00:05:52.320><c> we</c>

00:05:52.909 --> 00:05:52.919 align:start position:0%
uh loss function looks very crazy we
 

00:05:52.919 --> 00:05:54.409 align:start position:0%
uh loss function looks very crazy we
should<00:05:53.100><c> probably</c><00:05:53.220><c> fix</c><00:05:53.460><c> this</c><00:05:53.699><c> and</c><00:05:54.300><c> that's</c>

00:05:54.409 --> 00:05:54.419 align:start position:0%
should probably fix this and that's
 

00:05:54.419 --> 00:05:56.810 align:start position:0%
should probably fix this and that's
because<00:05:54.600><c> 32</c><00:05:55.080><c> batch</c><00:05:55.259><c> elements</c><00:05:55.800><c> are</c><00:05:56.400><c> too</c><00:05:56.580><c> few</c>

00:05:56.810 --> 00:05:56.820 align:start position:0%
because 32 batch elements are too few
 

00:05:56.820 --> 00:05:59.330 align:start position:0%
because 32 batch elements are too few
and<00:05:57.539><c> so</c><00:05:57.720><c> you</c><00:05:57.840><c> can</c><00:05:57.960><c> get</c><00:05:58.080><c> very</c><00:05:58.259><c> lucky</c><00:05:58.500><c> lucky</c><00:05:58.979><c> or</c>

00:05:59.330 --> 00:05:59.340 align:start position:0%
and so you can get very lucky lucky or
 

00:05:59.340 --> 00:06:01.370 align:start position:0%
and so you can get very lucky lucky or
unlucky<00:05:59.699><c> in</c><00:06:00.120><c> any</c><00:06:00.300><c> one</c><00:06:00.419><c> of</c><00:06:00.539><c> these</c><00:06:00.660><c> batches</c><00:06:01.020><c> and</c>

00:06:01.370 --> 00:06:01.380 align:start position:0%
unlucky in any one of these batches and
 

00:06:01.380 --> 00:06:04.249 align:start position:0%
unlucky in any one of these batches and
it<00:06:01.500><c> creates</c><00:06:01.620><c> a</c><00:06:01.800><c> very</c><00:06:01.979><c> thick</c><00:06:02.280><c> loss</c><00:06:03.060><c> function</c>

00:06:04.249 --> 00:06:04.259 align:start position:0%
it creates a very thick loss function
 

00:06:04.259 --> 00:06:06.290 align:start position:0%
it creates a very thick loss function
um<00:06:04.320><c> so</c><00:06:04.500><c> we're</c><00:06:04.620><c> going</c><00:06:04.740><c> to</c><00:06:04.860><c> fix</c><00:06:04.979><c> that</c><00:06:05.100><c> soon</c>

00:06:06.290 --> 00:06:06.300 align:start position:0%
um so we're going to fix that soon
 

00:06:06.300 --> 00:06:08.510 align:start position:0%
um so we're going to fix that soon
now<00:06:06.780><c> once</c><00:06:07.139><c> we</c><00:06:07.259><c> want</c><00:06:07.380><c> to</c><00:06:07.500><c> evaluate</c><00:06:07.919><c> the</c><00:06:08.280><c> trained</c>

00:06:08.510 --> 00:06:08.520 align:start position:0%
now once we want to evaluate the trained
 

00:06:08.520 --> 00:06:09.890 align:start position:0%
now once we want to evaluate the trained
neural<00:06:08.880><c> network</c><00:06:09.000><c> we</c><00:06:09.479><c> need</c><00:06:09.600><c> to</c><00:06:09.780><c> remember</c>

00:06:09.890 --> 00:06:09.900 align:start position:0%
neural network we need to remember
 

00:06:09.900 --> 00:06:11.870 align:start position:0%
neural network we need to remember
because<00:06:10.440><c> of</c><00:06:10.620><c> the</c><00:06:10.680><c> bathroom</c><00:06:10.860><c> layers</c><00:06:11.400><c> to</c><00:06:11.699><c> set</c>

00:06:11.870 --> 00:06:11.880 align:start position:0%
because of the bathroom layers to set
 

00:06:11.880 --> 00:06:13.670 align:start position:0%
because of the bathroom layers to set
all<00:06:12.120><c> the</c><00:06:12.240><c> layers</c><00:06:12.539><c> to</c><00:06:12.780><c> be</c><00:06:12.960><c> training</c><00:06:13.259><c> equals</c>

00:06:13.670 --> 00:06:13.680 align:start position:0%
all the layers to be training equals
 

00:06:13.680 --> 00:06:15.350 align:start position:0%
all the layers to be training equals
false<00:06:13.979><c> so</c><00:06:14.520><c> this</c><00:06:14.639><c> only</c><00:06:14.880><c> matters</c><00:06:15.120><c> for</c><00:06:15.240><c> the</c>

00:06:15.350 --> 00:06:15.360 align:start position:0%
false so this only matters for the
 

00:06:15.360 --> 00:06:17.090 align:start position:0%
false so this only matters for the
bathroom<00:06:15.479><c> layer</c><00:06:15.900><c> so</c><00:06:16.139><c> far</c>

00:06:17.090 --> 00:06:17.100 align:start position:0%
bathroom layer so far
 

00:06:17.100 --> 00:06:19.689 align:start position:0%
bathroom layer so far
and<00:06:17.699><c> then</c><00:06:17.880><c> we</c><00:06:18.300><c> evaluate</c>

00:06:19.689 --> 00:06:19.699 align:start position:0%
and then we evaluate
 

00:06:19.699 --> 00:06:22.129 align:start position:0%
and then we evaluate
we<00:06:20.699><c> see</c><00:06:20.880><c> that</c><00:06:21.000><c> currently</c><00:06:21.300><c> we</c><00:06:21.600><c> have</c><00:06:21.720><c> validation</c>

00:06:22.129 --> 00:06:22.139 align:start position:0%
we see that currently we have validation
 

00:06:22.139 --> 00:06:25.370 align:start position:0%
we see that currently we have validation
loss<00:06:22.560><c> of</c><00:06:22.620><c> 2.10</c><00:06:23.240><c> which</c><00:06:24.240><c> is</c><00:06:24.419><c> fairly</c><00:06:24.720><c> good</c><00:06:24.900><c> but</c>

00:06:25.370 --> 00:06:25.380 align:start position:0%
loss of 2.10 which is fairly good but
 

00:06:25.380 --> 00:06:28.129 align:start position:0%
loss of 2.10 which is fairly good but
there's<00:06:25.860><c> still</c><00:06:26.039><c> ways</c><00:06:26.340><c> to</c><00:06:26.400><c> go</c><00:06:27.000><c> but</c><00:06:27.660><c> even</c><00:06:27.840><c> at</c>

00:06:28.129 --> 00:06:28.139 align:start position:0%
there's still ways to go but even at
 

00:06:28.139 --> 00:06:30.409 align:start position:0%
there's still ways to go but even at
2.10<00:06:28.740><c> we</c><00:06:29.400><c> see</c><00:06:29.520><c> that</c><00:06:29.639><c> when</c><00:06:29.759><c> we</c><00:06:29.880><c> sample</c><00:06:30.180><c> from</c><00:06:30.300><c> the</c>

00:06:30.409 --> 00:06:30.419 align:start position:0%
2.10 we see that when we sample from the
 

00:06:30.419 --> 00:06:31.670 align:start position:0%
2.10 we see that when we sample from the
model<00:06:30.539><c> we</c><00:06:30.780><c> actually</c><00:06:30.900><c> get</c><00:06:31.139><c> relatively</c>

00:06:31.670 --> 00:06:31.680 align:start position:0%
model we actually get relatively
 

00:06:31.680 --> 00:06:34.430 align:start position:0%
model we actually get relatively
name-like<00:06:32.280><c> results</c><00:06:32.639><c> that</c><00:06:33.600><c> do</c><00:06:33.780><c> not</c><00:06:33.900><c> exist</c><00:06:34.139><c> in</c><00:06:34.319><c> a</c>

00:06:34.430 --> 00:06:34.440 align:start position:0%
name-like results that do not exist in a
 

00:06:34.440 --> 00:06:37.670 align:start position:0%
name-like results that do not exist in a
training<00:06:34.740><c> set</c><00:06:34.800><c> so</c><00:06:35.340><c> for</c><00:06:35.520><c> example</c><00:06:35.840><c> Yvonne</c><00:06:36.840><c> kilo</c>

00:06:37.670 --> 00:06:37.680 align:start position:0%
training set so for example Yvonne kilo
 

00:06:37.680 --> 00:06:40.010 align:start position:0%
training set so for example Yvonne kilo
Pros

00:06:40.010 --> 00:06:40.020 align:start position:0%
Pros
 

00:06:40.020 --> 00:06:43.450 align:start position:0%
Pros
Alaia<00:06:41.039><c> Etc</c><00:06:41.160><c> so</c><00:06:41.819><c> certainly</c><00:06:42.180><c> not</c>

00:06:43.450 --> 00:06:43.460 align:start position:0%
Alaia Etc so certainly not
 

00:06:43.460 --> 00:06:46.309 align:start position:0%
Alaia Etc so certainly not
reasonable<00:06:44.460><c> not</c><00:06:45.419><c> unreasonable</c><00:06:45.960><c> I</c><00:06:46.080><c> would</c><00:06:46.199><c> say</c>

00:06:46.309 --> 00:06:46.319 align:start position:0%
reasonable not unreasonable I would say
 

00:06:46.319 --> 00:06:48.529 align:start position:0%
reasonable not unreasonable I would say
but<00:06:46.440><c> not</c><00:06:46.560><c> amazing</c><00:06:46.979><c> and</c><00:06:47.759><c> we</c><00:06:48.180><c> can</c><00:06:48.300><c> still</c><00:06:48.419><c> push</c>

00:06:48.529 --> 00:06:48.539 align:start position:0%
but not amazing and we can still push
 

00:06:48.539 --> 00:06:50.090 align:start position:0%
but not amazing and we can still push
this<00:06:48.720><c> validation</c><00:06:49.139><c> loss</c><00:06:49.500><c> even</c><00:06:49.560><c> lower</c><00:06:49.740><c> and</c><00:06:49.919><c> get</c>

00:06:50.090 --> 00:06:50.100 align:start position:0%
this validation loss even lower and get
 

00:06:50.100 --> 00:06:52.189 align:start position:0%
this validation loss even lower and get
much<00:06:50.280><c> better</c><00:06:50.400><c> samples</c><00:06:50.819><c> that</c><00:06:51.120><c> are</c><00:06:51.419><c> even</c><00:06:51.960><c> more</c>

00:06:52.189 --> 00:06:52.199 align:start position:0%
much better samples that are even more
 

00:06:52.199 --> 00:06:53.330 align:start position:0%
much better samples that are even more
name-like

00:06:53.330 --> 00:06:53.340 align:start position:0%
name-like
 

00:06:53.340 --> 00:06:56.450 align:start position:0%
name-like
so<00:06:53.819><c> let's</c><00:06:54.000><c> improve</c><00:06:55.020><c> this</c><00:06:55.560><c> model</c>

00:06:56.450 --> 00:06:56.460 align:start position:0%
so let's improve this model
 

00:06:56.460 --> 00:06:58.490 align:start position:0%
so let's improve this model
okay<00:06:56.880><c> first</c><00:06:57.180><c> let's</c><00:06:57.539><c> fix</c><00:06:57.780><c> this</c><00:06:57.960><c> graph</c><00:06:58.199><c> because</c>

00:06:58.490 --> 00:06:58.500 align:start position:0%
okay first let's fix this graph because
 

00:06:58.500 --> 00:07:00.170 align:start position:0%
okay first let's fix this graph because
it<00:06:58.740><c> is</c><00:06:58.860><c> daggers</c><00:06:59.220><c> in</c><00:06:59.460><c> my</c><00:06:59.520><c> eyes</c><00:06:59.699><c> and</c><00:06:59.940><c> I</c><00:07:00.060><c> just</c>

00:07:00.170 --> 00:07:00.180 align:start position:0%
it is daggers in my eyes and I just
 

00:07:00.180 --> 00:07:01.969 align:start position:0%
it is daggers in my eyes and I just
can't<00:07:00.240><c> take</c><00:07:00.479><c> it</c><00:07:00.600><c> anymore</c>

00:07:01.969 --> 00:07:01.979 align:start position:0%
can't take it anymore
 

00:07:01.979 --> 00:07:05.450 align:start position:0%
can't take it anymore
um<00:07:02.100><c> so</c><00:07:02.400><c> last</c><00:07:02.580><c> I</c><00:07:02.880><c> if</c><00:07:03.060><c> you</c><00:07:03.240><c> recall</c><00:07:03.479><c> is</c><00:07:03.900><c> a</c><00:07:04.460><c> python</c>

00:07:05.450 --> 00:07:05.460 align:start position:0%
um so last I if you recall is a python
 

00:07:05.460 --> 00:07:07.909 align:start position:0%
um so last I if you recall is a python
list<00:07:05.880><c> of</c><00:07:06.180><c> floats</c><00:07:06.660><c> so</c><00:07:07.080><c> for</c><00:07:07.319><c> example</c><00:07:07.560><c> the</c><00:07:07.800><c> first</c>

00:07:07.909 --> 00:07:07.919 align:start position:0%
list of floats so for example the first
 

00:07:07.919 --> 00:07:10.850 align:start position:0%
list of floats so for example the first
10<00:07:08.160><c> elements</c>

00:07:10.850 --> 00:07:10.860 align:start position:0%
 
 

00:07:10.860 --> 00:07:12.590 align:start position:0%
 
now<00:07:11.340><c> what</c><00:07:11.580><c> we'd</c><00:07:11.759><c> like</c><00:07:11.880><c> to</c><00:07:12.000><c> do</c><00:07:12.060><c> basically</c><00:07:12.300><c> is</c><00:07:12.419><c> we</c>

00:07:12.590 --> 00:07:12.600 align:start position:0%
now what we'd like to do basically is we
 

00:07:12.600 --> 00:07:14.210 align:start position:0%
now what we'd like to do basically is we
need<00:07:12.720><c> to</c><00:07:12.840><c> average</c><00:07:13.080><c> up</c>

00:07:14.210 --> 00:07:14.220 align:start position:0%
need to average up
 

00:07:14.220 --> 00:07:16.189 align:start position:0%
need to average up
um some<00:07:14.639><c> of</c><00:07:14.759><c> these</c><00:07:14.880><c> values</c><00:07:15.180><c> to</c><00:07:15.360><c> get</c><00:07:15.539><c> a</c><00:07:15.840><c> more</c>

00:07:16.189 --> 00:07:16.199 align:start position:0%
um some of these values to get a more
 

00:07:16.199 --> 00:07:19.010 align:start position:0%
um some of these values to get a more
sort<00:07:16.620><c> of</c><00:07:16.800><c> Representative</c><00:07:17.280><c> uh</c><00:07:18.300><c> value</c><00:07:18.720><c> along</c>

00:07:19.010 --> 00:07:19.020 align:start position:0%
sort of Representative uh value along
 

00:07:19.020 --> 00:07:20.809 align:start position:0%
sort of Representative uh value along
the<00:07:19.199><c> way</c><00:07:19.259><c> so</c><00:07:19.919><c> one</c><00:07:20.039><c> way</c><00:07:20.220><c> to</c><00:07:20.340><c> do</c><00:07:20.460><c> this</c><00:07:20.520><c> is</c><00:07:20.639><c> the</c>

00:07:20.809 --> 00:07:20.819 align:start position:0%
the way so one way to do this is the
 

00:07:20.819 --> 00:07:21.830 align:start position:0%
the way so one way to do this is the
following

00:07:21.830 --> 00:07:21.840 align:start position:0%
following
 

00:07:21.840 --> 00:07:24.890 align:start position:0%
following
in<00:07:22.139><c> part</c><00:07:22.319><c> torch</c><00:07:22.680><c> if</c><00:07:22.860><c> I</c><00:07:23.039><c> create</c><00:07:23.220><c> for</c><00:07:23.880><c> example</c>

00:07:24.890 --> 00:07:24.900 align:start position:0%
in part torch if I create for example
 

00:07:24.900 --> 00:07:27.350 align:start position:0%
in part torch if I create for example
a<00:07:25.500><c> tensor</c><00:07:25.860><c> of</c><00:07:26.039><c> the</c><00:07:26.160><c> first</c><00:07:26.280><c> 10</c><00:07:26.460><c> numbers</c>

00:07:27.350 --> 00:07:27.360 align:start position:0%
a tensor of the first 10 numbers
 

00:07:27.360 --> 00:07:29.029 align:start position:0%
a tensor of the first 10 numbers
then<00:07:27.780><c> this</c><00:07:27.960><c> is</c><00:07:28.139><c> currently</c><00:07:28.319><c> a</c><00:07:28.500><c> one-dimensional</c>

00:07:29.029 --> 00:07:29.039 align:start position:0%
then this is currently a one-dimensional
 

00:07:29.039 --> 00:07:31.370 align:start position:0%
then this is currently a one-dimensional
array<00:07:29.580><c> but</c><00:07:30.240><c> recall</c><00:07:30.599><c> that</c><00:07:30.780><c> I</c><00:07:30.900><c> can</c><00:07:31.020><c> view</c><00:07:31.139><c> this</c>

00:07:31.370 --> 00:07:31.380 align:start position:0%
array but recall that I can view this
 

00:07:31.380 --> 00:07:33.469 align:start position:0%
array but recall that I can view this
array<00:07:31.740><c> as</c><00:07:32.039><c> two-dimensional</c><00:07:32.759><c> so</c><00:07:33.120><c> for</c><00:07:33.300><c> example</c>

00:07:33.469 --> 00:07:33.479 align:start position:0%
array as two-dimensional so for example
 

00:07:33.479 --> 00:07:36.050 align:start position:0%
array as two-dimensional so for example
I<00:07:33.660><c> can</c><00:07:33.780><c> use</c><00:07:33.900><c> it</c><00:07:34.020><c> as</c><00:07:34.199><c> a</c><00:07:34.319><c> two</c><00:07:34.500><c> by</c><00:07:34.620><c> five</c><00:07:34.860><c> array</c><00:07:35.280><c> and</c>

00:07:36.050 --> 00:07:36.060 align:start position:0%
I can use it as a two by five array and
 

00:07:36.060 --> 00:07:39.230 align:start position:0%
I can use it as a two by five array and
this<00:07:36.240><c> is</c><00:07:36.300><c> a</c><00:07:36.479><c> 2d</c><00:07:36.780><c> tensor</c><00:07:37.199><c> now</c><00:07:37.380><c> two</c><00:07:38.039><c> by</c><00:07:38.280><c> five</c><00:07:38.460><c> and</c>

00:07:39.230 --> 00:07:39.240 align:start position:0%
this is a 2d tensor now two by five and
 

00:07:39.240 --> 00:07:40.730 align:start position:0%
this is a 2d tensor now two by five and
you<00:07:39.419><c> see</c><00:07:39.479><c> what</c><00:07:39.599><c> petroch</c><00:07:40.020><c> has</c><00:07:40.139><c> done</c><00:07:40.319><c> is</c><00:07:40.560><c> that</c>

00:07:40.730 --> 00:07:40.740 align:start position:0%
you see what petroch has done is that
 

00:07:40.740 --> 00:07:42.830 align:start position:0%
you see what petroch has done is that
the<00:07:41.039><c> first</c><00:07:41.160><c> row</c><00:07:41.520><c> of</c><00:07:41.699><c> this</c><00:07:41.819><c> tensor</c><00:07:42.300><c> is</c><00:07:42.660><c> the</c>

00:07:42.830 --> 00:07:42.840 align:start position:0%
the first row of this tensor is the
 

00:07:42.840 --> 00:07:44.689 align:start position:0%
the first row of this tensor is the
first<00:07:42.960><c> five</c><00:07:43.139><c> elements</c><00:07:43.620><c> and</c><00:07:44.039><c> the</c><00:07:44.220><c> second</c><00:07:44.340><c> row</c>

00:07:44.689 --> 00:07:44.699 align:start position:0%
first five elements and the second row
 

00:07:44.699 --> 00:07:46.730 align:start position:0%
first five elements and the second row
is<00:07:44.880><c> the</c><00:07:45.180><c> second</c><00:07:45.419><c> five</c><00:07:45.720><c> elements</c>

00:07:46.730 --> 00:07:46.740 align:start position:0%
is the second five elements
 

00:07:46.740 --> 00:07:48.950 align:start position:0%
is the second five elements
I<00:07:47.099><c> can</c><00:07:47.160><c> also</c><00:07:47.400><c> view</c><00:07:47.520><c> it</c><00:07:47.699><c> as</c><00:07:47.880><c> a</c><00:07:48.000><c> five</c><00:07:48.180><c> by</c><00:07:48.419><c> two</c><00:07:48.599><c> as</c>

00:07:48.950 --> 00:07:48.960 align:start position:0%
I can also view it as a five by two as
 

00:07:48.960 --> 00:07:50.029 align:start position:0%
I can also view it as a five by two as
an<00:07:49.139><c> example</c>

00:07:50.029 --> 00:07:50.039 align:start position:0%
an example
 

00:07:50.039 --> 00:07:52.210 align:start position:0%
an example
and<00:07:50.520><c> then</c><00:07:50.580><c> recall</c><00:07:50.940><c> that</c><00:07:51.060><c> I</c><00:07:51.240><c> can</c><00:07:51.360><c> also</c>

00:07:52.210 --> 00:07:52.220 align:start position:0%
and then recall that I can also
 

00:07:52.220 --> 00:07:55.070 align:start position:0%
and then recall that I can also
use<00:07:53.220><c> negative</c><00:07:53.639><c> one</c><00:07:53.819><c> in</c><00:07:54.300><c> place</c><00:07:54.479><c> of</c><00:07:54.660><c> one</c><00:07:54.960><c> of</c>

00:07:55.070 --> 00:07:55.080 align:start position:0%
use negative one in place of one of
 

00:07:55.080 --> 00:07:55.969 align:start position:0%
use negative one in place of one of
these<00:07:55.259><c> numbers</c>

00:07:55.969 --> 00:07:55.979 align:start position:0%
these numbers
 

00:07:55.979 --> 00:07:58.129 align:start position:0%
these numbers
and<00:07:56.460><c> pytorch</c><00:07:57.060><c> will</c><00:07:57.240><c> calculate</c><00:07:57.660><c> what</c><00:07:57.960><c> that</c>

00:07:58.129 --> 00:07:58.139 align:start position:0%
and pytorch will calculate what that
 

00:07:58.139 --> 00:07:59.629 align:start position:0%
and pytorch will calculate what that
number<00:07:58.319><c> must</c><00:07:58.680><c> be</c><00:07:58.800><c> in</c><00:07:59.160><c> order</c><00:07:59.280><c> to</c><00:07:59.400><c> make</c><00:07:59.520><c> the</c>

00:07:59.629 --> 00:07:59.639 align:start position:0%
number must be in order to make the
 

00:07:59.639 --> 00:08:01.969 align:start position:0%
number must be in order to make the
number<00:07:59.759><c> of</c><00:07:59.880><c> elements</c><00:08:00.240><c> work</c><00:08:00.599><c> out</c><00:08:00.780><c> so</c><00:08:01.620><c> this</c><00:08:01.860><c> can</c>

00:08:01.969 --> 00:08:01.979 align:start position:0%
number of elements work out so this can
 

00:08:01.979 --> 00:08:03.110 align:start position:0%
number of elements work out so this can
be

00:08:03.110 --> 00:08:03.120 align:start position:0%
be
 

00:08:03.120 --> 00:08:05.990 align:start position:0%
be
this<00:08:03.660><c> or</c><00:08:04.020><c> like</c><00:08:04.259><c> that</c><00:08:04.440><c> but</c><00:08:05.220><c> it</c><00:08:05.340><c> will</c><00:08:05.520><c> work</c><00:08:05.699><c> of</c>

00:08:05.990 --> 00:08:06.000 align:start position:0%
this or like that but it will work of
 

00:08:06.000 --> 00:08:09.230 align:start position:0%
this or like that but it will work of
course<00:08:06.120><c> this</c><00:08:06.360><c> would</c><00:08:06.539><c> not</c><00:08:06.720><c> work</c>

00:08:09.230 --> 00:08:09.240 align:start position:0%
 
 

00:08:09.240 --> 00:08:11.510 align:start position:0%
 
okay<00:08:09.720><c> so</c><00:08:10.380><c> this</c><00:08:10.500><c> allows</c><00:08:10.800><c> it</c><00:08:10.919><c> to</c><00:08:11.039><c> spread</c><00:08:11.400><c> out</c>

00:08:11.510 --> 00:08:11.520 align:start position:0%
okay so this allows it to spread out
 

00:08:11.520 --> 00:08:13.550 align:start position:0%
okay so this allows it to spread out
some<00:08:11.819><c> of</c><00:08:11.940><c> the</c><00:08:12.000><c> consecutive</c><00:08:12.479><c> values</c><00:08:12.840><c> into</c><00:08:13.139><c> rows</c>

00:08:13.550 --> 00:08:13.560 align:start position:0%
some of the consecutive values into rows
 

00:08:13.560 --> 00:08:15.469 align:start position:0%
some of the consecutive values into rows
so<00:08:14.099><c> that's</c><00:08:14.280><c> very</c><00:08:14.520><c> helpful</c><00:08:14.759><c> because</c><00:08:15.000><c> what</c><00:08:15.300><c> we</c>

00:08:15.469 --> 00:08:15.479 align:start position:0%
so that's very helpful because what we
 

00:08:15.479 --> 00:08:17.570 align:start position:0%
so that's very helpful because what we
can<00:08:15.599><c> do</c><00:08:15.720><c> now</c><00:08:15.900><c> is</c><00:08:16.199><c> first</c><00:08:16.440><c> of</c><00:08:16.620><c> all</c><00:08:16.740><c> we're</c><00:08:17.340><c> going</c>

00:08:17.570 --> 00:08:17.580 align:start position:0%
can do now is first of all we're going
 

00:08:17.580 --> 00:08:21.170 align:start position:0%
can do now is first of all we're going
to<00:08:17.699><c> create</c><00:08:17.940><c> a</c><00:08:18.180><c> torshot</c><00:08:18.660><c> tensor</c><00:08:19.080><c> out</c><00:08:19.979><c> of</c><00:08:20.160><c> the</c><00:08:20.280><c> a</c>

00:08:21.170 --> 00:08:21.180 align:start position:0%
to create a torshot tensor out of the a
 

00:08:21.180 --> 00:08:22.670 align:start position:0%
to create a torshot tensor out of the a
list<00:08:21.419><c> of</c><00:08:21.660><c> floats</c>

00:08:22.670 --> 00:08:22.680 align:start position:0%
list of floats
 

00:08:22.680 --> 00:08:24.290 align:start position:0%
list of floats
and<00:08:23.039><c> then</c><00:08:23.099><c> we're</c><00:08:23.280><c> going</c><00:08:23.400><c> to</c><00:08:23.460><c> view</c><00:08:23.639><c> it</c><00:08:23.940><c> as</c>

00:08:24.290 --> 00:08:24.300 align:start position:0%
and then we're going to view it as
 

00:08:24.300 --> 00:08:26.869 align:start position:0%
and then we're going to view it as
whatever<00:08:24.780><c> it</c><00:08:25.560><c> is</c><00:08:25.680><c> but</c><00:08:26.460><c> we're</c><00:08:26.580><c> going</c><00:08:26.759><c> to</c>

00:08:26.869 --> 00:08:26.879 align:start position:0%
whatever it is but we're going to
 

00:08:26.879 --> 00:08:29.150 align:start position:0%
whatever it is but we're going to
stretch<00:08:27.240><c> it</c><00:08:27.360><c> out</c><00:08:27.479><c> into</c><00:08:27.900><c> rows</c><00:08:28.379><c> of</c><00:08:28.680><c> 1000</c>

00:08:29.150 --> 00:08:29.160 align:start position:0%
stretch it out into rows of 1000
 

00:08:29.160 --> 00:08:31.369 align:start position:0%
stretch it out into rows of 1000
consecutive<00:08:29.639><c> elements</c><00:08:30.479><c> so</c><00:08:30.900><c> the</c><00:08:31.080><c> shape</c><00:08:31.199><c> of</c>

00:08:31.369 --> 00:08:31.379 align:start position:0%
consecutive elements so the shape of
 

00:08:31.379 --> 00:08:35.209 align:start position:0%
consecutive elements so the shape of
this<00:08:31.500><c> now</c><00:08:31.740><c> becomes</c><00:08:32.339><c> 200</c><00:08:33.240><c> by</c><00:08:33.419><c> 1000.</c><00:08:34.380><c> and</c><00:08:34.979><c> each</c>

00:08:35.209 --> 00:08:35.219 align:start position:0%
this now becomes 200 by 1000. and each
 

00:08:35.219 --> 00:08:37.969 align:start position:0%
this now becomes 200 by 1000. and each
row<00:08:35.459><c> is</c><00:08:35.820><c> one</c><00:08:36.120><c> thousand</c><00:08:37.020><c> um</c><00:08:37.020><c> consecutive</c>

00:08:37.969 --> 00:08:37.979 align:start position:0%
row is one thousand um consecutive
 

00:08:37.979 --> 00:08:39.649 align:start position:0%
row is one thousand um consecutive
elements<00:08:38.700><c> in</c><00:08:38.820><c> this</c><00:08:38.940><c> list</c>

00:08:39.649 --> 00:08:39.659 align:start position:0%
elements in this list
 

00:08:39.659 --> 00:08:41.029 align:start position:0%
elements in this list
so<00:08:39.959><c> that's</c><00:08:40.080><c> very</c><00:08:40.320><c> helpful</c><00:08:40.560><c> because</c><00:08:40.680><c> now</c><00:08:40.919><c> we</c>

00:08:41.029 --> 00:08:41.039 align:start position:0%
so that's very helpful because now we
 

00:08:41.039 --> 00:08:43.850 align:start position:0%
so that's very helpful because now we
can<00:08:41.159><c> do</c><00:08:41.339><c> a</c><00:08:41.520><c> mean</c><00:08:41.700><c> along</c><00:08:42.180><c> the</c><00:08:42.419><c> rows</c>

00:08:43.850 --> 00:08:43.860 align:start position:0%
can do a mean along the rows
 

00:08:43.860 --> 00:08:47.090 align:start position:0%
can do a mean along the rows
and<00:08:44.399><c> the</c><00:08:44.700><c> shape</c><00:08:44.820><c> of</c><00:08:45.000><c> this</c><00:08:45.120><c> will</c><00:08:45.300><c> just</c><00:08:45.480><c> be</c><00:08:45.600><c> 200.</c>

00:08:47.090 --> 00:08:47.100 align:start position:0%
and the shape of this will just be 200.
 

00:08:47.100 --> 00:08:48.889 align:start position:0%
and the shape of this will just be 200.
and<00:08:47.399><c> so</c><00:08:47.519><c> we've</c><00:08:47.700><c> taken</c><00:08:47.940><c> basically</c><00:08:48.120><c> the</c><00:08:48.360><c> mean</c><00:08:48.480><c> on</c>

00:08:48.889 --> 00:08:48.899 align:start position:0%
and so we've taken basically the mean on
 

00:08:48.899 --> 00:08:51.889 align:start position:0%
and so we've taken basically the mean on
every<00:08:49.019><c> row</c><00:08:49.320><c> so</c><00:08:50.040><c> plt.plot</c><00:08:50.940><c> of</c><00:08:51.120><c> that</c><00:08:51.300><c> should</c><00:08:51.720><c> be</c>

00:08:51.889 --> 00:08:51.899 align:start position:0%
every row so plt.plot of that should be
 

00:08:51.899 --> 00:08:53.570 align:start position:0%
every row so plt.plot of that should be
something<00:08:52.140><c> nicer</c>

00:08:53.570 --> 00:08:53.580 align:start position:0%
something nicer
 

00:08:53.580 --> 00:08:55.009 align:start position:0%
something nicer
much<00:08:53.820><c> better</c>

00:08:55.009 --> 00:08:55.019 align:start position:0%
much better
 

00:08:55.019 --> 00:08:56.810 align:start position:0%
much better
so<00:08:55.380><c> we</c><00:08:55.500><c> see</c><00:08:55.620><c> that</c><00:08:55.800><c> we</c><00:08:55.980><c> basically</c><00:08:56.279><c> made</c><00:08:56.459><c> a</c><00:08:56.700><c> lot</c>

00:08:56.810 --> 00:08:56.820 align:start position:0%
so we see that we basically made a lot
 

00:08:56.820 --> 00:08:59.030 align:start position:0%
so we see that we basically made a lot
of<00:08:56.940><c> progress</c><00:08:57.240><c> and</c><00:08:57.899><c> then</c><00:08:58.080><c> here</c><00:08:58.320><c> this</c><00:08:58.740><c> is</c><00:08:58.860><c> the</c>

00:08:59.030 --> 00:08:59.040 align:start position:0%
of progress and then here this is the
 

00:08:59.040 --> 00:09:01.730 align:start position:0%
of progress and then here this is the
learning<00:08:59.339><c> rate</c><00:08:59.459><c> Decay</c><00:09:00.080><c> so</c><00:09:01.080><c> here</c><00:09:01.260><c> we</c><00:09:01.440><c> see</c><00:09:01.560><c> that</c>

00:09:01.730 --> 00:09:01.740 align:start position:0%
learning rate Decay so here we see that
 

00:09:01.740 --> 00:09:03.530 align:start position:0%
learning rate Decay so here we see that
the<00:09:01.980><c> learning</c><00:09:02.220><c> rate</c><00:09:02.339><c> Decay</c><00:09:02.700><c> subtracted</c><00:09:03.120><c> a</c><00:09:03.300><c> ton</c>

00:09:03.530 --> 00:09:03.540 align:start position:0%
the learning rate Decay subtracted a ton
 

00:09:03.540 --> 00:09:05.570 align:start position:0%
the learning rate Decay subtracted a ton
of<00:09:03.660><c> energy</c><00:09:03.779><c> out</c><00:09:04.080><c> of</c><00:09:04.200><c> the</c><00:09:04.320><c> system</c><00:09:04.500><c> and</c><00:09:05.160><c> allowed</c>

00:09:05.570 --> 00:09:05.580 align:start position:0%
of energy out of the system and allowed
 

00:09:05.580 --> 00:09:07.250 align:start position:0%
of energy out of the system and allowed
us<00:09:05.760><c> to</c><00:09:06.000><c> settle</c><00:09:06.300><c> into</c><00:09:06.600><c> sort</c><00:09:06.959><c> of</c><00:09:07.080><c> the</c><00:09:07.140><c> local</c>

00:09:07.250 --> 00:09:07.260 align:start position:0%
us to settle into sort of the local
 

00:09:07.260 --> 00:09:09.350 align:start position:0%
us to settle into sort of the local
minimum<00:09:07.680><c> in</c><00:09:07.980><c> this</c><00:09:08.100><c> optimization</c>

00:09:09.350 --> 00:09:09.360 align:start position:0%
minimum in this optimization
 

00:09:09.360 --> 00:09:12.230 align:start position:0%
minimum in this optimization
so<00:09:09.839><c> this</c><00:09:09.959><c> is</c><00:09:10.140><c> a</c><00:09:10.260><c> much</c><00:09:10.380><c> nicer</c><00:09:10.800><c> plot</c><00:09:11.040><c> let</c><00:09:11.820><c> me</c><00:09:12.000><c> come</c>

00:09:12.230 --> 00:09:12.240 align:start position:0%
so this is a much nicer plot let me come
 

00:09:12.240 --> 00:09:15.110 align:start position:0%
so this is a much nicer plot let me come
up<00:09:12.420><c> and</c><00:09:13.080><c> delete</c><00:09:13.440><c> the</c><00:09:13.800><c> monster</c><00:09:14.040><c> and</c><00:09:15.000><c> we're</c>

00:09:15.110 --> 00:09:15.120 align:start position:0%
up and delete the monster and we're
 

00:09:15.120 --> 00:09:16.970 align:start position:0%
up and delete the monster and we're
going<00:09:15.240><c> to</c><00:09:15.300><c> be</c><00:09:15.360><c> using</c><00:09:15.600><c> this</c><00:09:15.660><c> going</c><00:09:15.899><c> forward</c><00:09:16.080><c> now</c>

00:09:16.970 --> 00:09:16.980 align:start position:0%
going to be using this going forward now
 

00:09:16.980 --> 00:09:19.670 align:start position:0%
going to be using this going forward now
next<00:09:17.160><c> up</c><00:09:17.339><c> what</c><00:09:17.580><c> I'm</c><00:09:17.760><c> bothered</c><00:09:18.120><c> by</c><00:09:18.240><c> is</c><00:09:18.660><c> that</c><00:09:18.959><c> you</c>

00:09:19.670 --> 00:09:19.680 align:start position:0%
next up what I'm bothered by is that you
 

00:09:19.680 --> 00:09:22.190 align:start position:0%
next up what I'm bothered by is that you
see<00:09:19.800><c> our</c><00:09:19.980><c> forward</c><00:09:20.160><c> pass</c><00:09:20.459><c> is</c><00:09:21.060><c> a</c><00:09:21.899><c> little</c><00:09:22.080><c> bit</c>

00:09:22.190 --> 00:09:22.200 align:start position:0%
see our forward pass is a little bit
 

00:09:22.200 --> 00:09:23.990 align:start position:0%
see our forward pass is a little bit
gnarly<00:09:22.560><c> and</c><00:09:22.980><c> takes</c><00:09:23.160><c> way</c><00:09:23.399><c> too</c><00:09:23.519><c> many</c><00:09:23.580><c> lines</c><00:09:23.880><c> of</c>

00:09:23.990 --> 00:09:24.000 align:start position:0%
gnarly and takes way too many lines of
 

00:09:24.000 --> 00:09:24.710 align:start position:0%
gnarly and takes way too many lines of
code

00:09:24.710 --> 00:09:24.720 align:start position:0%
code
 

00:09:24.720 --> 00:09:26.090 align:start position:0%
code
so<00:09:24.839><c> in</c><00:09:24.959><c> particular</c><00:09:25.320><c> we</c><00:09:25.620><c> see</c><00:09:25.800><c> that</c><00:09:25.920><c> we've</c>

00:09:26.090 --> 00:09:26.100 align:start position:0%
so in particular we see that we've
 

00:09:26.100 --> 00:09:28.250 align:start position:0%
so in particular we see that we've
organized<00:09:26.519><c> some</c><00:09:26.760><c> of</c><00:09:26.880><c> the</c><00:09:26.940><c> layers</c><00:09:27.240><c> inside</c><00:09:27.720><c> the</c>

00:09:28.250 --> 00:09:28.260 align:start position:0%
organized some of the layers inside the
 

00:09:28.260 --> 00:09:30.889 align:start position:0%
organized some of the layers inside the
layers<00:09:28.620><c> list</c><00:09:28.860><c> but</c><00:09:29.279><c> not</c><00:09:29.459><c> all</c><00:09:29.640><c> of</c><00:09:29.820><c> them</c><00:09:29.940><c> uh</c><00:09:30.660><c> for</c>

00:09:30.889 --> 00:09:30.899 align:start position:0%
layers list but not all of them uh for
 

00:09:30.899 --> 00:09:32.930 align:start position:0%
layers list but not all of them uh for
no<00:09:31.080><c> reason</c><00:09:31.260><c> so</c><00:09:31.980><c> in</c><00:09:32.160><c> particular</c><00:09:32.399><c> we</c><00:09:32.700><c> see</c><00:09:32.820><c> that</c>

00:09:32.930 --> 00:09:32.940 align:start position:0%
no reason so in particular we see that
 

00:09:32.940 --> 00:09:34.490 align:start position:0%
no reason so in particular we see that
we<00:09:33.180><c> still</c><00:09:33.360><c> have</c><00:09:33.480><c> the</c><00:09:33.660><c> embedding</c><00:09:34.080><c> table</c><00:09:34.200><c> a</c>

00:09:34.490 --> 00:09:34.500 align:start position:0%
we still have the embedding table a
 

00:09:34.500 --> 00:09:37.250 align:start position:0%
we still have the embedding table a
special<00:09:34.740><c> case</c><00:09:35.040><c> outside</c><00:09:35.640><c> of</c><00:09:35.940><c> the</c><00:09:36.060><c> layers</c><00:09:36.420><c> and</c>

00:09:37.250 --> 00:09:37.260 align:start position:0%
special case outside of the layers and
 

00:09:37.260 --> 00:09:39.170 align:start position:0%
special case outside of the layers and
in<00:09:37.380><c> addition</c><00:09:37.620><c> to</c><00:09:37.800><c> that</c><00:09:37.920><c> the</c><00:09:38.459><c> viewing</c>

00:09:39.170 --> 00:09:39.180 align:start position:0%
in addition to that the viewing
 

00:09:39.180 --> 00:09:40.790 align:start position:0%
in addition to that the viewing
operation<00:09:39.480><c> here</c><00:09:39.779><c> is</c><00:09:39.959><c> also</c><00:09:40.200><c> outside</c><00:09:40.380><c> of</c><00:09:40.620><c> our</c>

00:09:40.790 --> 00:09:40.800 align:start position:0%
operation here is also outside of our
 

00:09:40.800 --> 00:09:43.190 align:start position:0%
operation here is also outside of our
layers<00:09:41.100><c> so</c><00:09:41.820><c> let's</c><00:09:41.940><c> create</c><00:09:42.240><c> layers</c><00:09:42.720><c> for</c><00:09:42.959><c> these</c>

00:09:43.190 --> 00:09:43.200 align:start position:0%
layers so let's create layers for these
 

00:09:43.200 --> 00:09:45.050 align:start position:0%
layers so let's create layers for these
and<00:09:43.500><c> then</c><00:09:43.560><c> we</c><00:09:43.740><c> can</c><00:09:43.860><c> add</c><00:09:44.040><c> those</c><00:09:44.220><c> layers</c><00:09:44.519><c> to</c><00:09:44.880><c> just</c>

00:09:45.050 --> 00:09:45.060 align:start position:0%
and then we can add those layers to just
 

00:09:45.060 --> 00:09:46.250 align:start position:0%
and then we can add those layers to just
our<00:09:45.300><c> list</c>

00:09:46.250 --> 00:09:46.260 align:start position:0%
our list
 

00:09:46.260 --> 00:09:48.350 align:start position:0%
our list
so<00:09:46.860><c> in</c><00:09:46.980><c> particular</c><00:09:47.339><c> the</c><00:09:47.820><c> two</c><00:09:47.940><c> things</c><00:09:48.060><c> that</c><00:09:48.240><c> we</c>

00:09:48.350 --> 00:09:48.360 align:start position:0%
so in particular the two things that we
 

00:09:48.360 --> 00:09:50.690 align:start position:0%
so in particular the two things that we
need<00:09:48.480><c> is</c><00:09:48.720><c> here</c><00:09:49.019><c> we</c><00:09:49.800><c> have</c><00:09:49.980><c> this</c><00:09:50.220><c> embedding</c>

00:09:50.690 --> 00:09:50.700 align:start position:0%
need is here we have this embedding
 

00:09:50.700 --> 00:09:53.030 align:start position:0%
need is here we have this embedding
table<00:09:50.880><c> and</c><00:09:51.660><c> we</c><00:09:51.779><c> are</c><00:09:51.959><c> indexing</c><00:09:52.440><c> at</c><00:09:52.920><c> the</c>

00:09:53.030 --> 00:09:53.040 align:start position:0%
table and we are indexing at the
 

00:09:53.040 --> 00:09:56.750 align:start position:0%
table and we are indexing at the
integers<00:09:53.459><c> inside</c><00:09:53.880><c> uh</c><00:09:54.720><c> the</c><00:09:54.959><c> batch</c><00:09:55.200><c> XB</c><00:09:55.920><c> uh</c>

00:09:56.750 --> 00:09:56.760 align:start position:0%
integers inside uh the batch XB uh
 

00:09:56.760 --> 00:09:58.310 align:start position:0%
integers inside uh the batch XB uh
inside<00:09:56.940><c> the</c><00:09:57.120><c> tensor</c><00:09:57.420><c> xB</c>

00:09:58.310 --> 00:09:58.320 align:start position:0%
inside the tensor xB
 

00:09:58.320 --> 00:10:00.889 align:start position:0%
inside the tensor xB
so<00:09:58.980><c> that's</c><00:09:59.100><c> an</c><00:09:59.459><c> embedding</c><00:09:59.820><c> table</c><00:09:59.940><c> lookup</c><00:10:00.360><c> just</c>

00:10:00.889 --> 00:10:00.899 align:start position:0%
so that's an embedding table lookup just
 

00:10:00.899 --> 00:10:03.410 align:start position:0%
so that's an embedding table lookup just
done<00:10:01.140><c> with</c><00:10:01.440><c> indexing</c><00:10:02.100><c> and</c><00:10:02.880><c> then</c><00:10:02.940><c> here</c><00:10:03.120><c> we</c><00:10:03.300><c> see</c>

00:10:03.410 --> 00:10:03.420 align:start position:0%
done with indexing and then here we see
 

00:10:03.420 --> 00:10:04.910 align:start position:0%
done with indexing and then here we see
that<00:10:03.600><c> we</c><00:10:03.720><c> have</c><00:10:03.779><c> this</c><00:10:03.899><c> view</c><00:10:04.140><c> operation</c><00:10:04.560><c> which</c>

00:10:04.910 --> 00:10:04.920 align:start position:0%
that we have this view operation which
 

00:10:04.920 --> 00:10:06.230 align:start position:0%
that we have this view operation which
if<00:10:05.040><c> you</c><00:10:05.220><c> recall</c><00:10:05.519><c> from</c><00:10:05.640><c> the</c><00:10:05.820><c> previous</c><00:10:05.940><c> video</c>

00:10:06.230 --> 00:10:06.240 align:start position:0%
if you recall from the previous video
 

00:10:06.240 --> 00:10:09.769 align:start position:0%
if you recall from the previous video
Simply<00:10:07.160><c> rearranges</c><00:10:08.160><c> the</c><00:10:08.779><c> character</c>

00:10:09.769 --> 00:10:09.779 align:start position:0%
Simply rearranges the character
 

00:10:09.779 --> 00:10:12.530 align:start position:0%
Simply rearranges the character
embeddings<00:10:10.440><c> and</c><00:10:11.399><c> stretches</c><00:10:11.820><c> them</c><00:10:12.000><c> out</c><00:10:12.120><c> into</c><00:10:12.240><c> a</c>

00:10:12.530 --> 00:10:12.540 align:start position:0%
embeddings and stretches them out into a
 

00:10:12.540 --> 00:10:14.810 align:start position:0%
embeddings and stretches them out into a
row<00:10:12.779><c> and</c><00:10:13.560><c> effectively</c><00:10:14.040><c> what</c><00:10:14.220><c> print</c><00:10:14.399><c> that</c><00:10:14.640><c> does</c>

00:10:14.810 --> 00:10:14.820 align:start position:0%
row and effectively what print that does
 

00:10:14.820 --> 00:10:16.970 align:start position:0%
row and effectively what print that does
is<00:10:15.060><c> the</c><00:10:15.300><c> concatenation</c><00:10:15.899><c> operation</c><00:10:16.380><c> basically</c>

00:10:16.970 --> 00:10:16.980 align:start position:0%
is the concatenation operation basically
 

00:10:16.980 --> 00:10:19.550 align:start position:0%
is the concatenation operation basically
except<00:10:17.640><c> it's</c><00:10:17.820><c> free</c><00:10:18.120><c> because</c><00:10:18.540><c> viewing</c><00:10:19.080><c> is</c><00:10:19.380><c> very</c>

00:10:19.550 --> 00:10:19.560 align:start position:0%
except it's free because viewing is very
 

00:10:19.560 --> 00:10:22.730 align:start position:0%
except it's free because viewing is very
cheap<00:10:19.800><c> in</c><00:10:20.160><c> pytorch</c><00:10:20.959><c> no</c><00:10:21.959><c> no</c><00:10:22.080><c> memory</c><00:10:22.500><c> is</c><00:10:22.560><c> being</c>

00:10:22.730 --> 00:10:22.740 align:start position:0%
cheap in pytorch no no memory is being
 

00:10:22.740 --> 00:10:24.769 align:start position:0%
cheap in pytorch no no memory is being
copied<00:10:23.100><c> we're</c><00:10:23.700><c> just</c><00:10:23.880><c> re-representing</c><00:10:24.480><c> how</c><00:10:24.660><c> we</c>

00:10:24.769 --> 00:10:24.779 align:start position:0%
copied we're just re-representing how we
 

00:10:24.779 --> 00:10:27.530 align:start position:0%
copied we're just re-representing how we
view<00:10:24.959><c> that</c><00:10:25.140><c> tensor</c><00:10:25.920><c> so</c><00:10:26.459><c> let's</c><00:10:26.640><c> create</c>

00:10:27.530 --> 00:10:27.540 align:start position:0%
view that tensor so let's create
 

00:10:27.540 --> 00:10:28.310 align:start position:0%
view that tensor so let's create
um

00:10:28.310 --> 00:10:28.320 align:start position:0%
um
 

00:10:28.320 --> 00:10:31.130 align:start position:0%
um
modules<00:10:29.279><c> for</c><00:10:29.519><c> both</c><00:10:29.700><c> of</c><00:10:29.880><c> these</c><00:10:30.060><c> operations</c><00:10:30.420><c> the</c>

00:10:31.130 --> 00:10:31.140 align:start position:0%
modules for both of these operations the
 

00:10:31.140 --> 00:10:32.570 align:start position:0%
modules for both of these operations the
embedding<00:10:31.560><c> operation</c><00:10:31.860><c> and</c><00:10:32.160><c> flattening</c>

00:10:32.570 --> 00:10:32.580 align:start position:0%
embedding operation and flattening
 

00:10:32.580 --> 00:10:33.889 align:start position:0%
embedding operation and flattening
operation

00:10:33.889 --> 00:10:33.899 align:start position:0%
operation
 

00:10:33.899 --> 00:10:37.070 align:start position:0%
operation
so<00:10:34.320><c> I</c><00:10:34.440><c> actually</c><00:10:34.560><c> wrote</c><00:10:34.860><c> the</c><00:10:35.040><c> code</c><00:10:35.160><c> in</c><00:10:35.899><c> just</c><00:10:36.899><c> to</c>

00:10:37.070 --> 00:10:37.080 align:start position:0%
so I actually wrote the code in just to
 

00:10:37.080 --> 00:10:38.630 align:start position:0%
so I actually wrote the code in just to
save<00:10:37.200><c> some</c><00:10:37.440><c> time</c>

00:10:38.630 --> 00:10:38.640 align:start position:0%
save some time
 

00:10:38.640 --> 00:10:40.670 align:start position:0%
save some time
so<00:10:39.000><c> we</c><00:10:39.120><c> have</c><00:10:39.240><c> a</c><00:10:39.480><c> module</c><00:10:39.779><c> embedding</c><00:10:40.260><c> and</c><00:10:40.500><c> a</c>

00:10:40.670 --> 00:10:40.680 align:start position:0%
so we have a module embedding and a
 

00:10:40.680 --> 00:10:43.490 align:start position:0%
so we have a module embedding and a
module<00:10:40.980><c> pattern</c><00:10:41.459><c> and</c><00:10:42.060><c> both</c><00:10:42.240><c> of</c><00:10:42.480><c> them</c><00:10:42.600><c> simply</c>

00:10:43.490 --> 00:10:43.500 align:start position:0%
module pattern and both of them simply
 

00:10:43.500 --> 00:10:45.290 align:start position:0%
module pattern and both of them simply
do<00:10:43.740><c> the</c><00:10:44.040><c> indexing</c><00:10:44.459><c> operation</c><00:10:44.760><c> in</c><00:10:45.060><c> the</c><00:10:45.180><c> forward</c>

00:10:45.290 --> 00:10:45.300 align:start position:0%
do the indexing operation in the forward
 

00:10:45.300 --> 00:10:49.490 align:start position:0%
do the indexing operation in the forward
pass<00:10:45.660><c> and</c><00:10:46.440><c> the</c><00:10:46.860><c> flattening</c><00:10:47.700><c> operation</c><00:10:48.180><c> here</c>

00:10:49.490 --> 00:10:49.500 align:start position:0%
pass and the flattening operation here
 

00:10:49.500 --> 00:10:53.870 align:start position:0%
pass and the flattening operation here
and<00:10:50.100><c> this</c><00:10:51.380><c> C</c><00:10:52.380><c> now</c><00:10:52.740><c> will</c><00:10:53.040><c> just</c><00:10:53.220><c> become</c><00:10:53.459><c> a</c><00:10:53.700><c> salt</c>

00:10:53.870 --> 00:10:53.880 align:start position:0%
and this C now will just become a salt
 

00:10:53.880 --> 00:10:56.449 align:start position:0%
and this C now will just become a salt
dot<00:10:54.240><c> weight</c><00:10:54.360><c> inside</c><00:10:54.779><c> an</c><00:10:55.019><c> embedding</c><00:10:55.560><c> module</c>

00:10:56.449 --> 00:10:56.459 align:start position:0%
dot weight inside an embedding module
 

00:10:56.459 --> 00:10:58.430 align:start position:0%
dot weight inside an embedding module
and<00:10:57.180><c> I'm</c><00:10:57.480><c> calling</c><00:10:57.839><c> these</c><00:10:58.079><c> layers</c>

00:10:58.430 --> 00:10:58.440 align:start position:0%
and I'm calling these layers
 

00:10:58.440 --> 00:10:59.870 align:start position:0%
and I'm calling these layers
specifically<00:10:58.920><c> embedding</c><00:10:59.399><c> a</c><00:10:59.519><c> platinum</c>

00:10:59.870 --> 00:10:59.880 align:start position:0%
specifically embedding a platinum
 

00:10:59.880 --> 00:11:01.130 align:start position:0%
specifically embedding a platinum
because<00:11:00.120><c> it</c><00:11:00.240><c> turns</c><00:11:00.480><c> out</c><00:11:00.540><c> that</c><00:11:00.720><c> both</c><00:11:00.899><c> of</c><00:11:01.019><c> them</c>

00:11:01.130 --> 00:11:01.140 align:start position:0%
because it turns out that both of them
 

00:11:01.140 --> 00:11:03.590 align:start position:0%
because it turns out that both of them
actually<00:11:01.320><c> exist</c><00:11:01.680><c> in</c><00:11:01.800><c> pi</c><00:11:02.040><c> torch</c><00:11:02.880><c> so</c><00:11:03.420><c> in</c>

00:11:03.590 --> 00:11:03.600 align:start position:0%
actually exist in pi torch so in
 

00:11:03.600 --> 00:11:05.990 align:start position:0%
actually exist in pi torch so in
phytorch<00:11:04.140><c> we</c><00:11:04.260><c> have</c><00:11:04.380><c> n</c><00:11:04.500><c> and</c><00:11:04.680><c> Dot</c><00:11:04.920><c> embedding</c><00:11:05.339><c> and</c>

00:11:05.990 --> 00:11:06.000 align:start position:0%
phytorch we have n and Dot embedding and
 

00:11:06.000 --> 00:11:07.430 align:start position:0%
phytorch we have n and Dot embedding and
it<00:11:06.180><c> also</c><00:11:06.420><c> takes</c><00:11:06.600><c> the</c><00:11:06.720><c> number</c><00:11:06.839><c> of</c><00:11:06.959><c> embeddings</c>

00:11:07.430 --> 00:11:07.440 align:start position:0%
it also takes the number of embeddings
 

00:11:07.440 --> 00:11:09.230 align:start position:0%
it also takes the number of embeddings
and<00:11:07.740><c> the</c><00:11:07.980><c> dimensionality</c><00:11:08.640><c> of</c><00:11:08.820><c> the</c><00:11:08.880><c> bedding</c>

00:11:09.230 --> 00:11:09.240 align:start position:0%
and the dimensionality of the bedding
 

00:11:09.240 --> 00:11:11.269 align:start position:0%
and the dimensionality of the bedding
just<00:11:09.480><c> like</c><00:11:09.600><c> we</c><00:11:09.839><c> have</c><00:11:09.959><c> here</c><00:11:10.200><c> but</c><00:11:10.980><c> in</c><00:11:11.100><c> addition</c>

00:11:11.269 --> 00:11:11.279 align:start position:0%
just like we have here but in addition
 

00:11:11.279 --> 00:11:13.009 align:start position:0%
just like we have here but in addition
python<00:11:11.760><c> takes</c><00:11:12.120><c> in</c><00:11:12.240><c> a</c><00:11:12.360><c> lot</c><00:11:12.420><c> of</c><00:11:12.540><c> other</c><00:11:12.660><c> keyword</c>

00:11:13.009 --> 00:11:13.019 align:start position:0%
python takes in a lot of other keyword
 

00:11:13.019 --> 00:11:15.710 align:start position:0%
python takes in a lot of other keyword
arguments<00:11:13.440><c> that</c><00:11:13.740><c> we</c><00:11:13.920><c> are</c><00:11:14.040><c> not</c><00:11:14.279><c> using</c><00:11:14.820><c> for</c><00:11:15.600><c> our</c>

00:11:15.710 --> 00:11:15.720 align:start position:0%
arguments that we are not using for our
 

00:11:15.720 --> 00:11:17.750 align:start position:0%
arguments that we are not using for our
purposes<00:11:16.079><c> yet</c>

00:11:17.750 --> 00:11:17.760 align:start position:0%
purposes yet
 

00:11:17.760 --> 00:11:19.670 align:start position:0%
purposes yet
and<00:11:18.180><c> for</c><00:11:18.360><c> flatten</c><00:11:18.779><c> that</c><00:11:19.079><c> also</c><00:11:19.320><c> exists</c><00:11:19.560><c> in</c>

00:11:19.670 --> 00:11:19.680 align:start position:0%
and for flatten that also exists in
 

00:11:19.680 --> 00:11:21.949 align:start position:0%
and for flatten that also exists in
pytorch<00:11:20.220><c> and</c><00:11:20.880><c> it</c><00:11:21.120><c> also</c><00:11:21.300><c> takes</c><00:11:21.540><c> additional</c>

00:11:21.949 --> 00:11:21.959 align:start position:0%
pytorch and it also takes additional
 

00:11:21.959 --> 00:11:23.690 align:start position:0%
pytorch and it also takes additional
keyword<00:11:22.260><c> arguments</c><00:11:22.620><c> that</c><00:11:22.740><c> we</c><00:11:22.920><c> are</c><00:11:23.040><c> not</c><00:11:23.220><c> using</c>

00:11:23.690 --> 00:11:23.700 align:start position:0%
keyword arguments that we are not using
 

00:11:23.700 --> 00:11:26.329 align:start position:0%
keyword arguments that we are not using
so<00:11:23.940><c> we</c><00:11:24.120><c> have</c><00:11:24.240><c> a</c><00:11:24.360><c> very</c><00:11:24.480><c> simple</c><00:11:24.660><c> platform</c>

00:11:26.329 --> 00:11:26.339 align:start position:0%
so we have a very simple platform
 

00:11:26.339 --> 00:11:28.190 align:start position:0%
so we have a very simple platform
but<00:11:27.060><c> both</c><00:11:27.180><c> of</c><00:11:27.300><c> them</c><00:11:27.420><c> exist</c><00:11:27.720><c> in</c><00:11:27.779><c> pytorch</c>

00:11:28.190 --> 00:11:28.200 align:start position:0%
but both of them exist in pytorch
 

00:11:28.200 --> 00:11:30.710 align:start position:0%
but both of them exist in pytorch
they're<00:11:28.380><c> just</c><00:11:28.560><c> a</c><00:11:28.740><c> bit</c><00:11:28.860><c> more</c><00:11:28.980><c> simpler</c><00:11:29.420><c> and</c><00:11:30.420><c> now</c>

00:11:30.710 --> 00:11:30.720 align:start position:0%
they're just a bit more simpler and now
 

00:11:30.720 --> 00:11:33.710 align:start position:0%
they're just a bit more simpler and now
that<00:11:30.959><c> we</c><00:11:31.140><c> have</c><00:11:31.320><c> these</c><00:11:31.680><c> we</c><00:11:32.579><c> can</c><00:11:32.700><c> simply</c><00:11:33.060><c> take</c>

00:11:33.710 --> 00:11:33.720 align:start position:0%
that we have these we can simply take
 

00:11:33.720 --> 00:11:36.829 align:start position:0%
that we have these we can simply take
out<00:11:33.959><c> some</c><00:11:34.680><c> of</c><00:11:34.800><c> these</c><00:11:35.040><c> special</c><00:11:35.579><c> cased</c>

00:11:36.829 --> 00:11:36.839 align:start position:0%
out some of these special cased
 

00:11:36.839 --> 00:11:40.009 align:start position:0%
out some of these special cased
um<00:11:36.980><c> things</c><00:11:37.980><c> so</c><00:11:38.820><c> instead</c><00:11:39.300><c> of</c><00:11:39.360><c> C</c><00:11:39.540><c> we're</c><00:11:39.899><c> just</c>

00:11:40.009 --> 00:11:40.019 align:start position:0%
um things so instead of C we're just
 

00:11:40.019 --> 00:11:41.569 align:start position:0%
um things so instead of C we're just
going<00:11:40.140><c> to</c><00:11:40.260><c> have</c><00:11:40.320><c> an</c><00:11:40.500><c> embedding</c>

00:11:41.569 --> 00:11:41.579 align:start position:0%
going to have an embedding
 

00:11:41.579 --> 00:11:45.590 align:start position:0%
going to have an embedding
and<00:11:42.360><c> of</c><00:11:42.660><c> a</c><00:11:42.899><c> cup</c><00:11:43.019><c> size</c><00:11:43.320><c> and</c><00:11:43.860><c> N</c><00:11:44.220><c> embed</c>

00:11:45.590 --> 00:11:45.600 align:start position:0%
and of a cup size and N embed
 

00:11:45.600 --> 00:11:47.150 align:start position:0%
and of a cup size and N embed
and<00:11:46.019><c> then</c><00:11:46.140><c> after</c><00:11:46.320><c> the</c><00:11:46.500><c> embedding</c><00:11:46.920><c> we</c><00:11:47.040><c> are</c>

00:11:47.150 --> 00:11:47.160 align:start position:0%
and then after the embedding we are
 

00:11:47.160 --> 00:11:48.769 align:start position:0%
and then after the embedding we are
going<00:11:47.220><c> to</c><00:11:47.339><c> flatten</c>

00:11:48.769 --> 00:11:48.779 align:start position:0%
going to flatten
 

00:11:48.779 --> 00:11:50.990 align:start position:0%
going to flatten
so<00:11:49.260><c> let's</c><00:11:49.380><c> construct</c><00:11:49.740><c> those</c><00:11:49.920><c> modules</c><00:11:50.339><c> and</c><00:11:50.880><c> now</c>

00:11:50.990 --> 00:11:51.000 align:start position:0%
so let's construct those modules and now
 

00:11:51.000 --> 00:11:53.150 align:start position:0%
so let's construct those modules and now
I<00:11:51.120><c> can</c><00:11:51.240><c> take</c><00:11:51.420><c> out</c><00:11:51.660><c> this</c><00:11:52.140><c> the</c>

00:11:53.150 --> 00:11:53.160 align:start position:0%
I can take out this the
 

00:11:53.160 --> 00:11:54.769 align:start position:0%
I can take out this the
and<00:11:53.579><c> here</c><00:11:53.820><c> I</c><00:11:54.060><c> don't</c><00:11:54.120><c> have</c><00:11:54.240><c> to</c><00:11:54.420><c> special</c><00:11:54.540><c> case</c>

00:11:54.769 --> 00:11:54.779 align:start position:0%
and here I don't have to special case
 

00:11:54.779 --> 00:11:57.829 align:start position:0%
and here I don't have to special case
anymore<00:11:55.079><c> because</c><00:11:55.680><c> now</c><00:11:56.040><c> C</c><00:11:56.640><c> is</c><00:11:57.000><c> the</c><00:11:57.240><c> embeddings</c>

00:11:57.829 --> 00:11:57.839 align:start position:0%
anymore because now C is the embeddings
 

00:11:57.839 --> 00:12:01.910 align:start position:0%
anymore because now C is the embeddings
weight<00:11:58.440><c> and</c><00:11:59.279><c> it's</c><00:11:59.459><c> inside</c><00:11:59.700><c> layers</c>

00:12:01.910 --> 00:12:01.920 align:start position:0%
weight and it's inside layers
 

00:12:01.920 --> 00:12:03.949 align:start position:0%
weight and it's inside layers
so<00:12:02.220><c> this</c><00:12:02.399><c> should</c><00:12:02.579><c> just</c><00:12:02.820><c> work</c>

00:12:03.949 --> 00:12:03.959 align:start position:0%
so this should just work
 

00:12:03.959 --> 00:12:06.290 align:start position:0%
so this should just work
and<00:12:04.440><c> then</c><00:12:04.620><c> here</c><00:12:04.920><c> our</c><00:12:05.820><c> forward</c><00:12:06.000><c> pass</c>

00:12:06.290 --> 00:12:06.300 align:start position:0%
and then here our forward pass
 

00:12:06.300 --> 00:12:08.210 align:start position:0%
and then here our forward pass
simplifies<00:12:06.899><c> substantially</c><00:12:07.380><c> because</c><00:12:07.980><c> we</c>

00:12:08.210 --> 00:12:08.220 align:start position:0%
simplifies substantially because we
 

00:12:08.220 --> 00:12:10.009 align:start position:0%
simplifies substantially because we
don't<00:12:08.339><c> need</c><00:12:08.519><c> to</c><00:12:08.700><c> do</c><00:12:09.000><c> these</c><00:12:09.240><c> now</c><00:12:09.420><c> outside</c><00:12:09.660><c> of</c>

00:12:10.009 --> 00:12:10.019 align:start position:0%
don't need to do these now outside of
 

00:12:10.019 --> 00:12:13.009 align:start position:0%
don't need to do these now outside of
these<00:12:10.740><c> layer</c><00:12:11.180><c> outside</c><00:12:12.180><c> and</c><00:12:12.480><c> explicitly</c>

00:12:13.009 --> 00:12:13.019 align:start position:0%
these layer outside and explicitly
 

00:12:13.019 --> 00:12:15.110 align:start position:0%
these layer outside and explicitly
they're<00:12:13.560><c> now</c><00:12:13.740><c> inside</c><00:12:13.920><c> layers</c>

00:12:15.110 --> 00:12:15.120 align:start position:0%
they're now inside layers
 

00:12:15.120 --> 00:12:17.090 align:start position:0%
they're now inside layers
so<00:12:15.660><c> we</c><00:12:15.959><c> can</c><00:12:16.019><c> delete</c><00:12:16.140><c> those</c>

00:12:17.090 --> 00:12:17.100 align:start position:0%
so we can delete those
 

00:12:17.100 --> 00:12:19.790 align:start position:0%
so we can delete those
but<00:12:17.579><c> now</c><00:12:17.760><c> to</c><00:12:18.060><c> to</c><00:12:18.420><c> kick</c><00:12:18.720><c> things</c><00:12:18.959><c> off</c><00:12:19.200><c> we</c><00:12:19.560><c> want</c>

00:12:19.790 --> 00:12:19.800 align:start position:0%
but now to to kick things off we want
 

00:12:19.800 --> 00:12:21.769 align:start position:0%
but now to to kick things off we want
this<00:12:19.980><c> little</c><00:12:20.160><c> X</c><00:12:20.399><c> which</c><00:12:20.940><c> in</c><00:12:21.360><c> the</c><00:12:21.480><c> beginning</c><00:12:21.600><c> is</c>

00:12:21.769 --> 00:12:21.779 align:start position:0%
this little X which in the beginning is
 

00:12:21.779 --> 00:12:24.170 align:start position:0%
this little X which in the beginning is
just<00:12:21.959><c> XB</c><00:12:22.380><c> uh</c><00:12:23.160><c> the</c><00:12:23.279><c> tensor</c><00:12:23.579><c> of</c><00:12:23.760><c> integers</c>

00:12:24.170 --> 00:12:24.180 align:start position:0%
just XB uh the tensor of integers
 

00:12:24.180 --> 00:12:26.030 align:start position:0%
just XB uh the tensor of integers
specifying<00:12:25.079><c> the</c><00:12:25.200><c> identities</c><00:12:25.560><c> of</c><00:12:25.800><c> these</c>

00:12:26.030 --> 00:12:26.040 align:start position:0%
specifying the identities of these
 

00:12:26.040 --> 00:12:27.590 align:start position:0%
specifying the identities of these
characters<00:12:26.220><c> at</c><00:12:26.640><c> the</c><00:12:26.760><c> input</c>

00:12:27.590 --> 00:12:27.600 align:start position:0%
characters at the input
 

00:12:27.600 --> 00:12:29.569 align:start position:0%
characters at the input
and<00:12:28.140><c> so</c><00:12:28.260><c> these</c><00:12:28.620><c> characters</c><00:12:28.740><c> can</c><00:12:29.100><c> now</c><00:12:29.279><c> directly</c>

00:12:29.569 --> 00:12:29.579 align:start position:0%
and so these characters can now directly
 

00:12:29.579 --> 00:12:31.310 align:start position:0%
and so these characters can now directly
feed<00:12:29.760><c> into</c><00:12:29.940><c> the</c><00:12:30.180><c> first</c><00:12:30.240><c> layer</c><00:12:30.600><c> and</c><00:12:31.140><c> this</c>

00:12:31.310 --> 00:12:31.320 align:start position:0%
feed into the first layer and this
 

00:12:31.320 --> 00:12:32.569 align:start position:0%
feed into the first layer and this
should<00:12:31.500><c> just</c><00:12:31.620><c> work</c>

00:12:32.569 --> 00:12:32.579 align:start position:0%
should just work
 

00:12:32.579 --> 00:12:35.030 align:start position:0%
should just work
so<00:12:32.940><c> let</c><00:12:33.120><c> me</c><00:12:33.300><c> come</c><00:12:33.600><c> here</c><00:12:33.899><c> and</c><00:12:34.320><c> insert</c><00:12:34.620><c> a</c><00:12:34.860><c> break</c>

00:12:35.030 --> 00:12:35.040 align:start position:0%
so let me come here and insert a break
 

00:12:35.040 --> 00:12:36.710 align:start position:0%
so let me come here and insert a break
because<00:12:35.579><c> I</c><00:12:35.820><c> just</c><00:12:35.880><c> want</c><00:12:36.060><c> to</c><00:12:36.180><c> make</c><00:12:36.300><c> sure</c><00:12:36.420><c> that</c>

00:12:36.710 --> 00:12:36.720 align:start position:0%
because I just want to make sure that
 

00:12:36.720 --> 00:12:38.090 align:start position:0%
because I just want to make sure that
the<00:12:36.899><c> first</c><00:12:37.019><c> iteration</c><00:12:37.440><c> of</c><00:12:37.560><c> this</c><00:12:37.680><c> runs</c><00:12:37.980><c> and</c>

00:12:38.090 --> 00:12:38.100 align:start position:0%
the first iteration of this runs and
 

00:12:38.100 --> 00:12:40.430 align:start position:0%
the first iteration of this runs and
then<00:12:38.279><c> there's</c><00:12:38.399><c> no</c><00:12:38.579><c> mistake</c><00:12:39.420><c> so</c><00:12:39.959><c> that</c><00:12:40.140><c> ran</c>

00:12:40.430 --> 00:12:40.440 align:start position:0%
then there's no mistake so that ran
 

00:12:40.440 --> 00:12:42.829 align:start position:0%
then there's no mistake so that ran
properly<00:12:40.860><c> and</c><00:12:41.820><c> basically</c><00:12:42.120><c> we</c><00:12:42.300><c> substantially</c>

00:12:42.829 --> 00:12:42.839 align:start position:0%
properly and basically we substantially
 

00:12:42.839 --> 00:12:45.410 align:start position:0%
properly and basically we substantially
simplified<00:12:43.320><c> the</c><00:12:43.800><c> forward</c><00:12:44.160><c> pass</c><00:12:44.519><c> here</c><00:12:44.700><c> okay</c>

00:12:45.410 --> 00:12:45.420 align:start position:0%
simplified the forward pass here okay
 

00:12:45.420 --> 00:12:46.910 align:start position:0%
simplified the forward pass here okay
I'm<00:12:45.540><c> sorry</c><00:12:45.720><c> I</c><00:12:45.899><c> changed</c><00:12:46.200><c> my</c><00:12:46.320><c> microphone</c><00:12:46.680><c> so</c>

00:12:46.910 --> 00:12:46.920 align:start position:0%
I'm sorry I changed my microphone so
 

00:12:46.920 --> 00:12:48.410 align:start position:0%
I'm sorry I changed my microphone so
hopefully<00:12:47.339><c> the</c><00:12:47.760><c> audio</c><00:12:47.880><c> is</c><00:12:48.060><c> a</c><00:12:48.240><c> little</c><00:12:48.300><c> bit</c>

00:12:48.410 --> 00:12:48.420 align:start position:0%
hopefully the audio is a little bit
 

00:12:48.420 --> 00:12:49.490 align:start position:0%
hopefully the audio is a little bit
better

00:12:49.490 --> 00:12:49.500 align:start position:0%
better
 

00:12:49.500 --> 00:12:51.650 align:start position:0%
better
now<00:12:50.339><c> one</c><00:12:50.880><c> more</c><00:12:51.000><c> thing</c><00:12:51.120><c> that</c><00:12:51.300><c> I</c><00:12:51.420><c> would</c><00:12:51.480><c> like</c><00:12:51.600><c> to</c>

00:12:51.650 --> 00:12:51.660 align:start position:0%
now one more thing that I would like to
 

00:12:51.660 --> 00:12:53.449 align:start position:0%
now one more thing that I would like to
do<00:12:51.779><c> in</c><00:12:51.959><c> order</c><00:12:52.079><c> to</c><00:12:52.139><c> pytortify</c><00:12:52.860><c> our</c><00:12:53.040><c> code</c><00:12:53.220><c> even</c>

00:12:53.449 --> 00:12:53.459 align:start position:0%
do in order to pytortify our code even
 

00:12:53.459 --> 00:12:54.949 align:start position:0%
do in order to pytortify our code even
further<00:12:53.760><c> is</c><00:12:54.240><c> that</c><00:12:54.420><c> right</c><00:12:54.540><c> now</c><00:12:54.660><c> we</c><00:12:54.839><c> are</c>

00:12:54.949 --> 00:12:54.959 align:start position:0%
further is that right now we are
 

00:12:54.959 --> 00:12:56.810 align:start position:0%
further is that right now we are
maintaining<00:12:55.260><c> all</c><00:12:55.500><c> of</c><00:12:55.620><c> our</c><00:12:55.740><c> modules</c><00:12:56.279><c> in</c><00:12:56.639><c> a</c>

00:12:56.810 --> 00:12:56.820 align:start position:0%
maintaining all of our modules in a
 

00:12:56.820 --> 00:12:59.150 align:start position:0%
maintaining all of our modules in a
naked<00:12:57.060><c> list</c><00:12:57.240><c> of</c><00:12:57.420><c> layers</c><00:12:57.779><c> and</c><00:12:58.620><c> we</c><00:12:58.800><c> can</c><00:12:58.920><c> also</c>

00:12:59.150 --> 00:12:59.160 align:start position:0%
naked list of layers and we can also
 

00:12:59.160 --> 00:13:01.009 align:start position:0%
naked list of layers and we can also
simplify<00:12:59.579><c> this</c><00:12:59.880><c> uh</c><00:13:00.360><c> because</c><00:13:00.540><c> we</c><00:13:00.839><c> can</c>

00:13:01.009 --> 00:13:01.019 align:start position:0%
simplify this uh because we can
 

00:13:01.019 --> 00:13:03.050 align:start position:0%
simplify this uh because we can
introduce<00:13:01.860><c> the</c><00:13:02.040><c> concept</c><00:13:02.279><c> of</c><00:13:02.519><c> Pi</c><00:13:02.760><c> torch</c>

00:13:03.050 --> 00:13:03.060 align:start position:0%
introduce the concept of Pi torch
 

00:13:03.060 --> 00:13:05.750 align:start position:0%
introduce the concept of Pi torch
containers<00:13:03.600><c> so</c><00:13:04.200><c> in</c><00:13:04.440><c> tors.nn</c><00:13:05.279><c> which</c><00:13:05.519><c> we</c><00:13:05.639><c> are</c>

00:13:05.750 --> 00:13:05.760 align:start position:0%
containers so in tors.nn which we are
 

00:13:05.760 --> 00:13:07.009 align:start position:0%
containers so in tors.nn which we are
basically<00:13:05.940><c> rebuilding</c><00:13:06.420><c> from</c><00:13:06.600><c> scratch</c><00:13:06.839><c> here</c>

00:13:07.009 --> 00:13:07.019 align:start position:0%
basically rebuilding from scratch here
 

00:13:07.019 --> 00:13:09.110 align:start position:0%
basically rebuilding from scratch here
there's<00:13:07.560><c> a</c><00:13:07.680><c> concept</c><00:13:07.980><c> of</c><00:13:08.100><c> containers</c>

00:13:09.110 --> 00:13:09.120 align:start position:0%
there's a concept of containers
 

00:13:09.120 --> 00:13:10.730 align:start position:0%
there's a concept of containers
and<00:13:09.480><c> these</c><00:13:09.600><c> containers</c><00:13:09.959><c> are</c><00:13:10.139><c> basically</c><00:13:10.440><c> a</c><00:13:10.620><c> way</c>

00:13:10.730 --> 00:13:10.740 align:start position:0%
and these containers are basically a way
 

00:13:10.740 --> 00:13:13.190 align:start position:0%
and these containers are basically a way
of<00:13:10.920><c> organizing</c><00:13:11.459><c> layers</c><00:13:12.000><c> into</c>

00:13:13.190 --> 00:13:13.200 align:start position:0%
of organizing layers into
 

00:13:13.200 --> 00:13:16.069 align:start position:0%
of organizing layers into
lists<00:13:13.920><c> or</c><00:13:14.220><c> dicts</c><00:13:14.760><c> and</c><00:13:15.060><c> so</c><00:13:15.240><c> on</c><00:13:15.360><c> so</c><00:13:15.959><c> in</c>

00:13:16.069 --> 00:13:16.079 align:start position:0%
lists or dicts and so on so in
 

00:13:16.079 --> 00:13:18.230 align:start position:0%
lists or dicts and so on so in
particular<00:13:16.380><c> there's</c><00:13:16.680><c> a</c><00:13:17.040><c> sequential</c><00:13:17.579><c> which</c>

00:13:18.230 --> 00:13:18.240 align:start position:0%
particular there's a sequential which
 

00:13:18.240 --> 00:13:20.629 align:start position:0%
particular there's a sequential which
maintains<00:13:18.660><c> a</c><00:13:18.839><c> list</c><00:13:19.019><c> of</c><00:13:19.200><c> layers</c><00:13:19.560><c> and</c><00:13:20.160><c> is</c><00:13:20.339><c> a</c>

00:13:20.629 --> 00:13:20.639 align:start position:0%
maintains a list of layers and is a
 

00:13:20.639 --> 00:13:23.690 align:start position:0%
maintains a list of layers and is a
module<00:13:21.060><c> class</c><00:13:21.420><c> in</c><00:13:21.600><c> pytorch</c><00:13:22.200><c> and</c><00:13:22.920><c> it</c><00:13:23.459><c> basically</c>

00:13:23.690 --> 00:13:23.700 align:start position:0%
module class in pytorch and it basically
 

00:13:23.700 --> 00:13:25.370 align:start position:0%
module class in pytorch and it basically
just<00:13:23.880><c> passes</c><00:13:24.300><c> a</c><00:13:24.540><c> given</c><00:13:24.839><c> input</c><00:13:25.079><c> through</c><00:13:25.260><c> all</c>

00:13:25.370 --> 00:13:25.380 align:start position:0%
just passes a given input through all
 

00:13:25.380 --> 00:13:27.350 align:start position:0%
just passes a given input through all
the<00:13:25.500><c> layers</c><00:13:25.740><c> sequentially</c><00:13:26.279><c> exactly</c><00:13:27.000><c> as</c><00:13:27.180><c> we</c>

00:13:27.350 --> 00:13:27.360 align:start position:0%
the layers sequentially exactly as we
 

00:13:27.360 --> 00:13:28.730 align:start position:0%
the layers sequentially exactly as we
are<00:13:27.600><c> doing</c><00:13:27.779><c> here</c>

00:13:28.730 --> 00:13:28.740 align:start position:0%
are doing here
 

00:13:28.740 --> 00:13:31.069 align:start position:0%
are doing here
so<00:13:29.220><c> let's</c><00:13:29.339><c> write</c><00:13:29.579><c> our</c><00:13:29.760><c> own</c><00:13:29.940><c> sequential</c>

00:13:31.069 --> 00:13:31.079 align:start position:0%
so let's write our own sequential
 

00:13:31.079 --> 00:13:33.949 align:start position:0%
so let's write our own sequential
I've<00:13:31.500><c> written</c><00:13:31.680><c> a</c><00:13:31.860><c> code</c><00:13:31.980><c> here</c><00:13:32.220><c> and</c><00:13:33.120><c> basically</c>

00:13:33.949 --> 00:13:33.959 align:start position:0%
I've written a code here and basically
 

00:13:33.959 --> 00:13:35.090 align:start position:0%
I've written a code here and basically
the<00:13:34.079><c> code</c><00:13:34.200><c> for</c><00:13:34.380><c> sequential</c><00:13:34.800><c> is</c><00:13:34.920><c> quite</c>

00:13:35.090 --> 00:13:35.100 align:start position:0%
the code for sequential is quite
 

00:13:35.100 --> 00:13:37.069 align:start position:0%
the code for sequential is quite
straightforward<00:13:35.519><c> we</c><00:13:36.240><c> pass</c><00:13:36.420><c> in</c><00:13:36.600><c> a</c><00:13:36.720><c> list</c><00:13:36.899><c> of</c>

00:13:37.069 --> 00:13:37.079 align:start position:0%
straightforward we pass in a list of
 

00:13:37.079 --> 00:13:39.530 align:start position:0%
straightforward we pass in a list of
layers<00:13:37.380><c> which</c><00:13:38.040><c> we</c><00:13:38.339><c> keep</c><00:13:38.459><c> here</c><00:13:38.700><c> and</c><00:13:39.240><c> then</c><00:13:39.360><c> given</c>

00:13:39.530 --> 00:13:39.540 align:start position:0%
layers which we keep here and then given
 

00:13:39.540 --> 00:13:41.690 align:start position:0%
layers which we keep here and then given
any<00:13:39.720><c> input</c><00:13:40.079><c> in</c><00:13:40.440><c> a</c><00:13:40.620><c> forward</c><00:13:40.740><c> pass</c><00:13:41.040><c> we</c><00:13:41.459><c> just</c><00:13:41.579><c> call</c>

00:13:41.690 --> 00:13:41.700 align:start position:0%
any input in a forward pass we just call
 

00:13:41.700 --> 00:13:43.370 align:start position:0%
any input in a forward pass we just call
all<00:13:41.880><c> the</c><00:13:42.000><c> layers</c><00:13:42.240><c> sequentially</c><00:13:42.779><c> and</c><00:13:43.200><c> return</c>

00:13:43.370 --> 00:13:43.380 align:start position:0%
all the layers sequentially and return
 

00:13:43.380 --> 00:13:45.410 align:start position:0%
all the layers sequentially and return
the<00:13:43.620><c> result</c><00:13:43.800><c> in</c><00:13:44.639><c> terms</c><00:13:44.880><c> of</c><00:13:44.940><c> the</c><00:13:45.060><c> parameters</c>

00:13:45.410 --> 00:13:45.420 align:start position:0%
the result in terms of the parameters
 

00:13:45.420 --> 00:13:46.670 align:start position:0%
the result in terms of the parameters
it's<00:13:45.660><c> just</c><00:13:45.779><c> all</c><00:13:45.959><c> the</c><00:13:46.079><c> parameters</c><00:13:46.380><c> of</c><00:13:46.620><c> the</c>

00:13:46.670 --> 00:13:46.680 align:start position:0%
it's just all the parameters of the
 

00:13:46.680 --> 00:13:48.110 align:start position:0%
it's just all the parameters of the
child<00:13:46.860><c> modules</c>

00:13:48.110 --> 00:13:48.120 align:start position:0%
child modules
 

00:13:48.120 --> 00:13:50.690 align:start position:0%
child modules
so<00:13:48.660><c> we</c><00:13:48.959><c> can</c><00:13:49.079><c> run</c><00:13:49.380><c> this</c><00:13:49.620><c> and</c><00:13:50.279><c> we</c><00:13:50.459><c> can</c><00:13:50.579><c> again</c>

00:13:50.690 --> 00:13:50.700 align:start position:0%
so we can run this and we can again
 

00:13:50.700 --> 00:13:52.850 align:start position:0%
so we can run this and we can again
simplify<00:13:51.300><c> this</c><00:13:51.480><c> substantially</c><00:13:51.959><c> because</c><00:13:52.620><c> we</c>

00:13:52.850 --> 00:13:52.860 align:start position:0%
simplify this substantially because we
 

00:13:52.860 --> 00:13:54.350 align:start position:0%
simplify this substantially because we
don't<00:13:52.980><c> maintain</c><00:13:53.279><c> this</c><00:13:53.459><c> naked</c><00:13:53.760><c> list</c><00:13:53.940><c> of</c><00:13:54.120><c> layers</c>

00:13:54.350 --> 00:13:54.360 align:start position:0%
don't maintain this naked list of layers
 

00:13:54.360 --> 00:13:56.990 align:start position:0%
don't maintain this naked list of layers
we<00:13:54.660><c> now</c><00:13:54.839><c> have</c><00:13:54.959><c> a</c><00:13:55.200><c> notion</c><00:13:55.500><c> of</c><00:13:55.620><c> a</c><00:13:55.740><c> model</c><00:13:55.920><c> which</c><00:13:56.820><c> is</c>

00:13:56.990 --> 00:13:57.000 align:start position:0%
we now have a notion of a model which is
 

00:13:57.000 --> 00:14:00.350 align:start position:0%
we now have a notion of a model which is
a<00:13:57.420><c> module</c><00:13:58.200><c> and</c><00:13:59.160><c> in</c><00:13:59.519><c> particular</c><00:13:59.820><c> is</c><00:14:00.120><c> a</c>

00:14:00.350 --> 00:14:00.360 align:start position:0%
a module and in particular is a
 

00:14:00.360 --> 00:14:04.730 align:start position:0%
a module and in particular is a
sequential<00:14:00.839><c> of</c><00:14:01.500><c> all</c><00:14:02.100><c> these</c><00:14:02.339><c> layers</c>

00:14:04.730 --> 00:14:04.740 align:start position:0%
 
 

00:14:04.740 --> 00:14:07.730 align:start position:0%
 
and<00:14:05.339><c> now</c><00:14:05.579><c> parameters</c><00:14:06.360><c> are</c><00:14:06.720><c> simply</c><00:14:07.019><c> just</c><00:14:07.500><c> a</c>

00:14:07.730 --> 00:14:07.740 align:start position:0%
and now parameters are simply just a
 

00:14:07.740 --> 00:14:09.470 align:start position:0%
and now parameters are simply just a
model<00:14:07.980><c> about</c><00:14:08.339><c> parameters</c>

00:14:09.470 --> 00:14:09.480 align:start position:0%
model about parameters
 

00:14:09.480 --> 00:14:11.810 align:start position:0%
model about parameters
and<00:14:09.899><c> so</c><00:14:09.959><c> that</c><00:14:10.139><c> list</c><00:14:10.320><c> comprehension</c><00:14:10.920><c> now</c><00:14:11.339><c> lives</c>

00:14:11.810 --> 00:14:11.820 align:start position:0%
and so that list comprehension now lives
 

00:14:11.820 --> 00:14:13.790 align:start position:0%
and so that list comprehension now lives
here

00:14:13.790 --> 00:14:13.800 align:start position:0%
here
 

00:14:13.800 --> 00:14:15.889 align:start position:0%
here
and<00:14:14.279><c> then</c><00:14:14.339><c> here</c><00:14:14.579><c> we</c><00:14:14.760><c> are</c><00:14:14.880><c> press</c><00:14:15.060><c> here</c><00:14:15.660><c> we</c><00:14:15.779><c> are</c>

00:14:15.889 --> 00:14:15.899 align:start position:0%
and then here we are press here we are
 

00:14:15.899 --> 00:14:17.870 align:start position:0%
and then here we are press here we are
doing<00:14:16.079><c> all</c><00:14:16.320><c> the</c><00:14:16.440><c> things</c><00:14:16.560><c> we</c><00:14:16.740><c> used</c><00:14:16.920><c> to</c><00:14:17.040><c> do</c>

00:14:17.870 --> 00:14:17.880 align:start position:0%
doing all the things we used to do
 

00:14:17.880 --> 00:14:19.970 align:start position:0%
doing all the things we used to do
now<00:14:18.180><c> here</c><00:14:18.600><c> the</c><00:14:19.019><c> code</c><00:14:19.200><c> again</c><00:14:19.440><c> simplifies</c>

00:14:19.970 --> 00:14:19.980 align:start position:0%
now here the code again simplifies
 

00:14:19.980 --> 00:14:22.009 align:start position:0%
now here the code again simplifies
substantially<00:14:20.459><c> because</c><00:14:21.240><c> we</c><00:14:21.540><c> don't</c><00:14:21.660><c> have</c><00:14:21.839><c> to</c>

00:14:22.009 --> 00:14:22.019 align:start position:0%
substantially because we don't have to
 

00:14:22.019 --> 00:14:24.410 align:start position:0%
substantially because we don't have to
do<00:14:22.200><c> this</c><00:14:22.500><c> forwarding</c><00:14:23.279><c> here</c><00:14:23.459><c> instead</c><00:14:24.180><c> of</c><00:14:24.240><c> just</c>

00:14:24.410 --> 00:14:24.420 align:start position:0%
do this forwarding here instead of just
 

00:14:24.420 --> 00:14:26.389 align:start position:0%
do this forwarding here instead of just
call<00:14:24.600><c> the</c><00:14:24.779><c> model</c><00:14:24.959><c> on</c><00:14:25.320><c> the</c><00:14:25.380><c> input</c><00:14:25.680><c> data</c><00:14:25.980><c> and</c><00:14:26.279><c> the</c>

00:14:26.389 --> 00:14:26.399 align:start position:0%
call the model on the input data and the
 

00:14:26.399 --> 00:14:28.069 align:start position:0%
call the model on the input data and the
input<00:14:26.639><c> data</c><00:14:26.880><c> here</c><00:14:27.000><c> are</c><00:14:27.300><c> the</c><00:14:27.420><c> integers</c><00:14:27.779><c> inside</c>

00:14:28.069 --> 00:14:28.079 align:start position:0%
input data here are the integers inside
 

00:14:28.079 --> 00:14:31.610 align:start position:0%
input data here are the integers inside
xB<00:14:29.399><c> so</c><00:14:29.579><c> we</c><00:14:29.760><c> can</c><00:14:29.940><c> simply</c><00:14:30.120><c> do</c><00:14:30.300><c> logits</c><00:14:31.139><c> which</c><00:14:31.500><c> are</c>

00:14:31.610 --> 00:14:31.620 align:start position:0%
xB so we can simply do logits which are
 

00:14:31.620 --> 00:14:33.769 align:start position:0%
xB so we can simply do logits which are
the<00:14:31.800><c> outputs</c><00:14:32.160><c> of</c><00:14:32.279><c> our</c><00:14:32.399><c> model</c><00:14:32.639><c> are</c><00:14:33.360><c> simply</c><00:14:33.660><c> the</c>

00:14:33.769 --> 00:14:33.779 align:start position:0%
the outputs of our model are simply the
 

00:14:33.779 --> 00:14:36.650 align:start position:0%
the outputs of our model are simply the
model<00:14:33.959><c> called</c><00:14:34.260><c> on</c><00:14:34.680><c> xB</c>

00:14:36.650 --> 00:14:36.660 align:start position:0%
model called on xB
 

00:14:36.660 --> 00:14:38.870 align:start position:0%
model called on xB
and<00:14:37.320><c> then</c><00:14:37.500><c> the</c><00:14:37.800><c> cross</c><00:14:37.920><c> entropy</c><00:14:38.459><c> here</c><00:14:38.639><c> takes</c>

00:14:38.870 --> 00:14:38.880 align:start position:0%
and then the cross entropy here takes
 

00:14:38.880 --> 00:14:41.269 align:start position:0%
and then the cross entropy here takes
the<00:14:39.060><c> logits</c><00:14:39.600><c> and</c><00:14:39.959><c> the</c><00:14:40.139><c> targets</c>

00:14:41.269 --> 00:14:41.279 align:start position:0%
the logits and the targets
 

00:14:41.279 --> 00:14:43.730 align:start position:0%
the logits and the targets
so<00:14:41.760><c> this</c><00:14:42.000><c> simplifies</c><00:14:42.540><c> substantially</c>

00:14:43.730 --> 00:14:43.740 align:start position:0%
so this simplifies substantially
 

00:14:43.740 --> 00:14:46.250 align:start position:0%
so this simplifies substantially
and<00:14:44.399><c> then</c><00:14:44.639><c> this</c><00:14:45.300><c> looks</c><00:14:45.540><c> good</c><00:14:45.720><c> so</c><00:14:46.019><c> let's</c><00:14:46.079><c> just</c>

00:14:46.250 --> 00:14:46.260 align:start position:0%
and then this looks good so let's just
 

00:14:46.260 --> 00:14:49.250 align:start position:0%
and then this looks good so let's just
make<00:14:46.380><c> sure</c><00:14:46.560><c> this</c><00:14:46.740><c> runs</c><00:14:47.040><c> that</c><00:14:47.579><c> looks</c><00:14:47.880><c> good</c>

00:14:49.250 --> 00:14:49.260 align:start position:0%
make sure this runs that looks good
 

00:14:49.260 --> 00:14:51.410 align:start position:0%
make sure this runs that looks good
now<00:14:49.800><c> here</c><00:14:50.040><c> we</c><00:14:50.639><c> actually</c><00:14:50.760><c> have</c><00:14:50.940><c> some</c><00:14:51.120><c> work</c><00:14:51.240><c> to</c>

00:14:51.410 --> 00:14:51.420 align:start position:0%
now here we actually have some work to
 

00:14:51.420 --> 00:14:52.790 align:start position:0%
now here we actually have some work to
do<00:14:51.540><c> still</c><00:14:51.779><c> here</c><00:14:52.019><c> but</c><00:14:52.199><c> I'm</c><00:14:52.320><c> going</c><00:14:52.440><c> to</c><00:14:52.560><c> come</c><00:14:52.680><c> back</c>

00:14:52.790 --> 00:14:52.800 align:start position:0%
do still here but I'm going to come back
 

00:14:52.800 --> 00:14:54.949 align:start position:0%
do still here but I'm going to come back
later<00:14:53.220><c> for</c><00:14:53.880><c> now</c><00:14:54.060><c> there's</c><00:14:54.240><c> no</c><00:14:54.420><c> more</c><00:14:54.600><c> layers</c>

00:14:54.949 --> 00:14:54.959 align:start position:0%
later for now there's no more layers
 

00:14:54.959 --> 00:14:57.530 align:start position:0%
later for now there's no more layers
there's<00:14:55.260><c> a</c><00:14:55.500><c> model</c><00:14:55.620><c> that</c><00:14:55.980><c> layers</c><00:14:56.399><c> but</c><00:14:57.180><c> it's</c><00:14:57.360><c> not</c>

00:14:57.530 --> 00:14:57.540 align:start position:0%
there's a model that layers but it's not
 

00:14:57.540 --> 00:15:00.230 align:start position:0%
there's a model that layers but it's not
a<00:14:57.839><c> to</c><00:14:58.079><c> access</c><00:14:58.339><c> attributes</c><00:14:59.339><c> of</c><00:14:59.699><c> these</c><00:14:59.940><c> classes</c>

00:15:00.230 --> 00:15:00.240 align:start position:0%
a to access attributes of these classes
 

00:15:00.240 --> 00:15:01.910 align:start position:0%
a to access attributes of these classes
directly<00:15:00.660><c> so</c><00:15:01.019><c> we'll</c><00:15:01.199><c> come</c><00:15:01.320><c> back</c><00:15:01.440><c> and</c><00:15:01.560><c> fix</c><00:15:01.740><c> this</c>

00:15:01.910 --> 00:15:01.920 align:start position:0%
directly so we'll come back and fix this
 

00:15:01.920 --> 00:15:03.110 align:start position:0%
directly so we'll come back and fix this
later

00:15:03.110 --> 00:15:03.120 align:start position:0%
later
 

00:15:03.120 --> 00:15:05.090 align:start position:0%
later
and<00:15:03.540><c> then</c><00:15:03.660><c> here</c><00:15:03.839><c> of</c><00:15:04.079><c> course</c><00:15:04.199><c> this</c><00:15:04.560><c> simplifies</c>

00:15:05.090 --> 00:15:05.100 align:start position:0%
and then here of course this simplifies
 

00:15:05.100 --> 00:15:07.610 align:start position:0%
and then here of course this simplifies
substantially<00:15:05.579><c> as</c><00:15:05.760><c> well</c><00:15:05.880><c> because</c><00:15:06.240><c> logits</c><00:15:07.139><c> are</c>

00:15:07.610 --> 00:15:07.620 align:start position:0%
substantially as well because logits are
 

00:15:07.620 --> 00:15:10.490 align:start position:0%
substantially as well because logits are
the<00:15:07.980><c> model</c><00:15:08.100><c> called</c><00:15:08.399><c> on</c><00:15:08.639><c> x</c>

00:15:10.490 --> 00:15:10.500 align:start position:0%
the model called on x
 

00:15:10.500 --> 00:15:14.090 align:start position:0%
the model called on x
and<00:15:11.040><c> then</c><00:15:11.160><c> these</c><00:15:11.339><c> low</c><00:15:11.459><c> Jets</c><00:15:11.760><c> come</c><00:15:11.940><c> here</c>

00:15:14.090 --> 00:15:14.100 align:start position:0%
and then these low Jets come here
 

00:15:14.100 --> 00:15:15.889 align:start position:0%
and then these low Jets come here
so<00:15:14.459><c> we</c><00:15:14.579><c> can</c><00:15:14.699><c> evaluate</c><00:15:15.180><c> the</c><00:15:15.540><c> train</c><00:15:15.720><c> and</c>

00:15:15.889 --> 00:15:15.899 align:start position:0%
so we can evaluate the train and
 

00:15:15.899 --> 00:15:17.389 align:start position:0%
so we can evaluate the train and
validation<00:15:16.260><c> loss</c><00:15:16.620><c> which</c><00:15:16.980><c> currently</c><00:15:17.279><c> is</c>

00:15:17.389 --> 00:15:17.399 align:start position:0%
validation loss which currently is
 

00:15:17.399 --> 00:15:19.189 align:start position:0%
validation loss which currently is
terrible<00:15:17.699><c> because</c><00:15:18.000><c> we</c><00:15:18.480><c> just</c><00:15:18.660><c> initialized</c><00:15:19.139><c> the</c>

00:15:19.189 --> 00:15:19.199 align:start position:0%
terrible because we just initialized the
 

00:15:19.199 --> 00:15:21.170 align:start position:0%
terrible because we just initialized the
neural<00:15:19.500><c> net</c><00:15:20.160><c> and</c><00:15:20.459><c> then</c><00:15:20.519><c> we</c><00:15:20.639><c> can</c><00:15:20.699><c> also</c><00:15:20.880><c> sample</c>

00:15:21.170 --> 00:15:21.180 align:start position:0%
neural net and then we can also sample
 

00:15:21.180 --> 00:15:22.670 align:start position:0%
neural net and then we can also sample
from<00:15:21.300><c> the</c><00:15:21.480><c> model</c><00:15:21.600><c> and</c><00:15:21.959><c> this</c><00:15:22.139><c> simplifies</c>

00:15:22.670 --> 00:15:22.680 align:start position:0%
from the model and this simplifies
 

00:15:22.680 --> 00:15:24.110 align:start position:0%
from the model and this simplifies
dramatically<00:15:23.220><c> as</c><00:15:23.399><c> well</c>

00:15:24.110 --> 00:15:24.120 align:start position:0%
dramatically as well
 

00:15:24.120 --> 00:15:25.610 align:start position:0%
dramatically as well
because<00:15:24.420><c> we</c><00:15:24.720><c> just</c><00:15:24.779><c> want</c><00:15:24.959><c> to</c><00:15:25.079><c> call</c><00:15:25.260><c> the</c><00:15:25.500><c> model</c>

00:15:25.610 --> 00:15:25.620 align:start position:0%
because we just want to call the model
 

00:15:25.620 --> 00:15:30.230 align:start position:0%
because we just want to call the model
onto<00:15:26.579><c> the</c><00:15:27.240><c> context</c><00:15:27.600><c> and</c><00:15:28.260><c> outcome</c><00:15:28.740><c> logits</c>

00:15:30.230 --> 00:15:30.240 align:start position:0%
onto the context and outcome logits
 

00:15:30.240 --> 00:15:32.930 align:start position:0%
onto the context and outcome logits
and<00:15:30.540><c> these</c><00:15:30.779><c> logits</c><00:15:31.260><c> go</c><00:15:31.560><c> into</c><00:15:31.740><c> softmax</c><00:15:32.279><c> and</c><00:15:32.760><c> get</c>

00:15:32.930 --> 00:15:32.940 align:start position:0%
and these logits go into softmax and get
 

00:15:32.940 --> 00:15:35.210 align:start position:0%
and these logits go into softmax and get
the<00:15:33.120><c> probabilities</c><00:15:33.839><c> Etc</c><00:15:34.019><c> so</c><00:15:34.680><c> we</c><00:15:34.800><c> can</c><00:15:34.920><c> sample</c>

00:15:35.210 --> 00:15:35.220 align:start position:0%
the probabilities Etc so we can sample
 

00:15:35.220 --> 00:15:37.610 align:start position:0%
the probabilities Etc so we can sample
from<00:15:35.399><c> this</c><00:15:35.519><c> model</c>

00:15:37.610 --> 00:15:37.620 align:start position:0%
from this model
 

00:15:37.620 --> 00:15:42.290 align:start position:0%
from this model
what<00:15:38.459><c> did</c><00:15:38.639><c> I</c><00:15:38.760><c> screw</c><00:15:39.000><c> up</c>

00:15:42.290 --> 00:15:42.300 align:start position:0%
 
 

00:15:42.300 --> 00:15:44.210 align:start position:0%
 
okay<00:15:42.660><c> so</c><00:15:42.959><c> I</c><00:15:43.079><c> fixed</c><00:15:43.320><c> the</c><00:15:43.380><c> issue</c><00:15:43.620><c> and</c><00:15:43.740><c> we</c><00:15:43.920><c> now</c><00:15:44.040><c> get</c>

00:15:44.210 --> 00:15:44.220 align:start position:0%
okay so I fixed the issue and we now get
 

00:15:44.220 --> 00:15:46.129 align:start position:0%
okay so I fixed the issue and we now get
the<00:15:44.399><c> result</c><00:15:44.639><c> that</c><00:15:44.880><c> we</c><00:15:45.060><c> expect</c><00:15:45.240><c> which</c><00:15:46.019><c> is</c>

00:15:46.129 --> 00:15:46.139 align:start position:0%
the result that we expect which is
 

00:15:46.139 --> 00:15:48.110 align:start position:0%
the result that we expect which is
gibberish<00:15:46.620><c> because</c><00:15:47.040><c> the</c><00:15:47.399><c> model</c><00:15:47.579><c> is</c><00:15:47.940><c> not</c>

00:15:48.110 --> 00:15:48.120 align:start position:0%
gibberish because the model is not
 

00:15:48.120 --> 00:15:49.850 align:start position:0%
gibberish because the model is not
trained<00:15:48.540><c> because</c><00:15:48.720><c> we</c><00:15:48.959><c> re-initialize</c><00:15:49.560><c> it</c><00:15:49.680><c> from</c>

00:15:49.850 --> 00:15:49.860 align:start position:0%
trained because we re-initialize it from
 

00:15:49.860 --> 00:15:50.629 align:start position:0%
trained because we re-initialize it from
scratch

00:15:50.629 --> 00:15:50.639 align:start position:0%
scratch
 

00:15:50.639 --> 00:15:52.670 align:start position:0%
scratch
the<00:15:51.060><c> problem</c><00:15:51.180><c> was</c><00:15:51.420><c> that</c><00:15:51.660><c> when</c><00:15:51.899><c> I</c><00:15:52.019><c> fixed</c><00:15:52.380><c> this</c>

00:15:52.670 --> 00:15:52.680 align:start position:0%
the problem was that when I fixed this
 

00:15:52.680 --> 00:15:54.470 align:start position:0%
the problem was that when I fixed this
cell<00:15:52.920><c> to</c><00:15:53.279><c> be</c><00:15:53.399><c> modeled</c><00:15:53.699><c> out</c><00:15:53.880><c> layers</c><00:15:54.180><c> instead</c><00:15:54.420><c> of</c>

00:15:54.470 --> 00:15:54.480 align:start position:0%
cell to be modeled out layers instead of
 

00:15:54.480 --> 00:15:56.629 align:start position:0%
cell to be modeled out layers instead of
just<00:15:54.660><c> layers</c><00:15:54.959><c> I</c><00:15:55.380><c> did</c><00:15:55.500><c> not</c><00:15:55.620><c> actually</c><00:15:55.860><c> run</c><00:15:56.339><c> the</c>

00:15:56.629 --> 00:15:56.639 align:start position:0%
just layers I did not actually run the
 

00:15:56.639 --> 00:15:58.910 align:start position:0%
just layers I did not actually run the
cell<00:15:56.880><c> and</c><00:15:57.480><c> so</c><00:15:57.600><c> our</c><00:15:57.779><c> neural</c><00:15:58.079><c> net</c><00:15:58.199><c> was</c><00:15:58.500><c> in</c><00:15:58.740><c> a</c>

00:15:58.910 --> 00:15:58.920 align:start position:0%
cell and so our neural net was in a
 

00:15:58.920 --> 00:16:01.430 align:start position:0%
cell and so our neural net was in a
training<00:15:59.279><c> mode</c><00:15:59.600><c> and</c><00:16:00.600><c> what</c><00:16:00.839><c> caused</c><00:16:01.139><c> the</c><00:16:01.199><c> issue</c>

00:16:01.430 --> 00:16:01.440 align:start position:0%
training mode and what caused the issue
 

00:16:01.440 --> 00:16:02.990 align:start position:0%
training mode and what caused the issue
here<00:16:01.620><c> is</c><00:16:01.800><c> the</c><00:16:01.860><c> bathroom</c><00:16:02.040><c> layer</c><00:16:02.519><c> as</c><00:16:02.699><c> bathroom</c>

00:16:02.990 --> 00:16:03.000 align:start position:0%
here is the bathroom layer as bathroom
 

00:16:03.000 --> 00:16:05.269 align:start position:0%
here is the bathroom layer as bathroom
layer<00:16:03.540><c> of</c><00:16:03.779><c> the</c><00:16:03.899><c> likes</c><00:16:04.260><c> to</c><00:16:04.320><c> do</c><00:16:04.500><c> because</c>

00:16:05.269 --> 00:16:05.279 align:start position:0%
layer of the likes to do because
 

00:16:05.279 --> 00:16:07.550 align:start position:0%
layer of the likes to do because
Bachelor<00:16:05.699><c> was</c><00:16:05.940><c> in</c><00:16:06.120><c> a</c><00:16:06.240><c> training</c><00:16:06.540><c> mode</c><00:16:06.660><c> and</c><00:16:07.440><c> here</c>

00:16:07.550 --> 00:16:07.560 align:start position:0%
Bachelor was in a training mode and here
 

00:16:07.560 --> 00:16:09.829 align:start position:0%
Bachelor was in a training mode and here
we<00:16:07.740><c> are</c><00:16:07.860><c> passing</c><00:16:08.160><c> in</c><00:16:08.279><c> an</c><00:16:08.519><c> input</c><00:16:08.820><c> which</c><00:16:09.360><c> is</c><00:16:09.600><c> a</c>

00:16:09.829 --> 00:16:09.839 align:start position:0%
we are passing in an input which is a
 

00:16:09.839 --> 00:16:11.629 align:start position:0%
we are passing in an input which is a
batch<00:16:09.959><c> of</c><00:16:10.199><c> just</c><00:16:10.380><c> a</c><00:16:10.500><c> single</c><00:16:10.800><c> example</c><00:16:11.160><c> made</c><00:16:11.519><c> up</c>

00:16:11.629 --> 00:16:11.639 align:start position:0%
batch of just a single example made up
 

00:16:11.639 --> 00:16:12.889 align:start position:0%
batch of just a single example made up
of<00:16:11.820><c> the</c><00:16:11.940><c> context</c>

00:16:12.889 --> 00:16:12.899 align:start position:0%
of the context
 

00:16:12.899 --> 00:16:14.990 align:start position:0%
of the context
and<00:16:13.500><c> so</c><00:16:13.680><c> if</c><00:16:13.920><c> you</c><00:16:13.980><c> are</c><00:16:14.100><c> trying</c><00:16:14.279><c> to</c><00:16:14.459><c> pass</c><00:16:14.639><c> in</c><00:16:14.820><c> a</c>

00:16:14.990 --> 00:16:15.000 align:start position:0%
and so if you are trying to pass in a
 

00:16:15.000 --> 00:16:16.610 align:start position:0%
and so if you are trying to pass in a
single<00:16:15.180><c> example</c><00:16:15.480><c> into</c><00:16:15.660><c> a</c><00:16:15.899><c> bash</c><00:16:16.019><c> Norm</c><00:16:16.260><c> that</c><00:16:16.560><c> is</c>

00:16:16.610 --> 00:16:16.620 align:start position:0%
single example into a bash Norm that is
 

00:16:16.620 --> 00:16:18.050 align:start position:0%
single example into a bash Norm that is
in<00:16:16.740><c> the</c><00:16:16.860><c> training</c><00:16:17.100><c> mode</c><00:16:17.220><c> you're</c><00:16:17.760><c> going</c><00:16:17.880><c> to</c><00:16:17.940><c> end</c>

00:16:18.050 --> 00:16:18.060 align:start position:0%
in the training mode you're going to end
 

00:16:18.060 --> 00:16:20.150 align:start position:0%
in the training mode you're going to end
up<00:16:18.120><c> estimating</c><00:16:18.540><c> the</c><00:16:18.779><c> variance</c><00:16:19.139><c> using</c><00:16:19.920><c> the</c>

00:16:20.150 --> 00:16:20.160 align:start position:0%
up estimating the variance using the
 

00:16:20.160 --> 00:16:21.889 align:start position:0%
up estimating the variance using the
input<00:16:20.459><c> and</c><00:16:20.940><c> the</c><00:16:21.120><c> variance</c><00:16:21.420><c> of</c><00:16:21.540><c> a</c><00:16:21.660><c> single</c>

00:16:21.889 --> 00:16:21.899 align:start position:0%
input and the variance of a single
 

00:16:21.899 --> 00:16:24.530 align:start position:0%
input and the variance of a single
number<00:16:22.019><c> is</c><00:16:22.560><c> is</c><00:16:22.860><c> not</c><00:16:23.100><c> a</c><00:16:23.279><c> number</c><00:16:23.399><c> because</c><00:16:24.180><c> it</c><00:16:24.360><c> is</c>

00:16:24.530 --> 00:16:24.540 align:start position:0%
number is is not a number because it is
 

00:16:24.540 --> 00:16:26.870 align:start position:0%
number is is not a number because it is
a<00:16:24.660><c> measure</c><00:16:24.839><c> of</c><00:16:24.959><c> a</c><00:16:25.079><c> spread</c><00:16:25.440><c> so</c><00:16:25.980><c> for</c><00:16:26.220><c> example</c><00:16:26.459><c> the</c>

00:16:26.870 --> 00:16:26.880 align:start position:0%
a measure of a spread so for example the
 

00:16:26.880 --> 00:16:28.610 align:start position:0%
a measure of a spread so for example the
variance<00:16:27.300><c> of</c><00:16:27.480><c> just</c><00:16:27.600><c> the</c><00:16:27.839><c> single</c><00:16:28.079><c> number</c><00:16:28.260><c> five</c>

00:16:28.610 --> 00:16:28.620 align:start position:0%
variance of just the single number five
 

00:16:28.620 --> 00:16:31.129 align:start position:0%
variance of just the single number five
you<00:16:29.220><c> can</c><00:16:29.339><c> see</c><00:16:29.459><c> is</c><00:16:29.579><c> not</c><00:16:29.760><c> a</c><00:16:29.940><c> number</c><00:16:30.120><c> and</c><00:16:30.899><c> so</c>

00:16:31.129 --> 00:16:31.139 align:start position:0%
you can see is not a number and so
 

00:16:31.139 --> 00:16:33.410 align:start position:0%
you can see is not a number and so
that's<00:16:31.320><c> what</c><00:16:31.560><c> happened</c><00:16:32.060><c> in</c><00:16:33.060><c> the</c><00:16:33.240><c> master</c>

00:16:33.410 --> 00:16:33.420 align:start position:0%
that's what happened in the master
 

00:16:33.420 --> 00:16:35.509 align:start position:0%
that's what happened in the master
basically<00:16:33.899><c> caused</c><00:16:34.260><c> an</c><00:16:34.440><c> issue</c><00:16:34.740><c> and</c><00:16:35.220><c> then</c><00:16:35.339><c> that</c>

00:16:35.509 --> 00:16:35.519 align:start position:0%
basically caused an issue and then that
 

00:16:35.519 --> 00:16:37.790 align:start position:0%
basically caused an issue and then that
polluted<00:16:36.000><c> all</c><00:16:36.180><c> of</c><00:16:36.300><c> the</c><00:16:36.360><c> further</c><00:16:36.660><c> processing</c>

00:16:37.790 --> 00:16:37.800 align:start position:0%
polluted all of the further processing
 

00:16:37.800 --> 00:16:39.829 align:start position:0%
polluted all of the further processing
so<00:16:38.519><c> all</c><00:16:38.880><c> that</c><00:16:39.060><c> we</c><00:16:39.180><c> have</c><00:16:39.240><c> to</c><00:16:39.360><c> do</c><00:16:39.420><c> was</c><00:16:39.600><c> make</c><00:16:39.720><c> sure</c>

00:16:39.829 --> 00:16:39.839 align:start position:0%
so all that we have to do was make sure
 

00:16:39.839 --> 00:16:43.249 align:start position:0%
so all that we have to do was make sure
that<00:16:40.139><c> this</c><00:16:40.380><c> runs</c><00:16:40.860><c> and</c><00:16:41.699><c> we</c><00:16:42.420><c> basically</c><00:16:42.720><c> made</c><00:16:43.019><c> the</c>

00:16:43.249 --> 00:16:43.259 align:start position:0%
that this runs and we basically made the
 

00:16:43.259 --> 00:16:45.110 align:start position:0%
that this runs and we basically made the
issue<00:16:43.620><c> of</c>

00:16:45.110 --> 00:16:45.120 align:start position:0%
issue of
 

00:16:45.120 --> 00:16:46.670 align:start position:0%
issue of
again<00:16:45.600><c> we</c><00:16:45.839><c> didn't</c><00:16:45.959><c> actually</c><00:16:46.139><c> see</c><00:16:46.320><c> the</c><00:16:46.500><c> issue</c>

00:16:46.670 --> 00:16:46.680 align:start position:0%
again we didn't actually see the issue
 

00:16:46.680 --> 00:16:48.410 align:start position:0%
again we didn't actually see the issue
with<00:16:46.860><c> the</c><00:16:47.040><c> loss</c><00:16:47.339><c> we</c><00:16:47.820><c> could</c><00:16:47.940><c> have</c><00:16:48.060><c> evaluated</c>

00:16:48.410 --> 00:16:48.420 align:start position:0%
with the loss we could have evaluated
 

00:16:48.420 --> 00:16:49.790 align:start position:0%
with the loss we could have evaluated
the<00:16:48.540><c> loss</c><00:16:48.839><c> but</c><00:16:48.959><c> we</c><00:16:49.139><c> got</c><00:16:49.259><c> the</c><00:16:49.440><c> wrong</c><00:16:49.560><c> result</c>

00:16:49.790 --> 00:16:49.800 align:start position:0%
the loss but we got the wrong result
 

00:16:49.800 --> 00:16:52.069 align:start position:0%
the loss but we got the wrong result
because<00:16:50.100><c> basharm</c><00:16:50.759><c> was</c><00:16:50.880><c> in</c><00:16:51.000><c> the</c><00:16:51.120><c> training</c><00:16:51.360><c> mode</c>

00:16:52.069 --> 00:16:52.079 align:start position:0%
because basharm was in the training mode
 

00:16:52.079 --> 00:16:54.590 align:start position:0%
because basharm was in the training mode
and<00:16:52.680><c> uh</c><00:16:53.100><c> and</c><00:16:53.579><c> so</c><00:16:53.699><c> we</c><00:16:53.880><c> still</c><00:16:54.000><c> get</c><00:16:54.120><c> a</c><00:16:54.240><c> result</c><00:16:54.360><c> it's</c>

00:16:54.590 --> 00:16:54.600 align:start position:0%
and uh and so we still get a result it's
 

00:16:54.600 --> 00:16:56.210 align:start position:0%
and uh and so we still get a result it's
just<00:16:54.779><c> the</c><00:16:54.899><c> wrong</c><00:16:55.019><c> result</c><00:16:55.199><c> because</c><00:16:55.560><c> it's</c><00:16:55.800><c> using</c>

00:16:56.210 --> 00:16:56.220 align:start position:0%
just the wrong result because it's using
 

00:16:56.220 --> 00:16:59.210 align:start position:0%
just the wrong result because it's using
the<00:16:56.519><c> uh</c><00:16:57.060><c> sample</c><00:16:57.600><c> statistics</c><00:16:57.959><c> of</c><00:16:58.139><c> the</c><00:16:58.320><c> batch</c>

00:16:59.210 --> 00:16:59.220 align:start position:0%
the uh sample statistics of the batch
 

00:16:59.220 --> 00:17:00.650 align:start position:0%
the uh sample statistics of the batch
whereas<00:16:59.639><c> we</c><00:16:59.820><c> want</c><00:16:59.880><c> to</c><00:17:00.000><c> use</c><00:17:00.120><c> the</c><00:17:00.300><c> running</c><00:17:00.420><c> mean</c>

00:17:00.650 --> 00:17:00.660 align:start position:0%
whereas we want to use the running mean
 

00:17:00.660 --> 00:17:02.930 align:start position:0%
whereas we want to use the running mean
and<00:17:00.839><c> running</c><00:17:01.019><c> variants</c><00:17:01.440><c> inside</c><00:17:01.680><c> the</c><00:17:01.920><c> bachelor</c>

00:17:02.930 --> 00:17:02.940 align:start position:0%
and running variants inside the bachelor
 

00:17:02.940 --> 00:17:04.490 align:start position:0%
and running variants inside the bachelor
and<00:17:03.420><c> so</c>

00:17:04.490 --> 00:17:04.500 align:start position:0%
and so
 

00:17:04.500 --> 00:17:06.189 align:start position:0%
and so
again<00:17:04.860><c> an</c><00:17:05.040><c> example</c><00:17:05.280><c> of</c><00:17:05.459><c> introducing</c><00:17:05.880><c> a</c><00:17:06.000><c> bug</c>

00:17:06.189 --> 00:17:06.199 align:start position:0%
again an example of introducing a bug
 

00:17:06.199 --> 00:17:09.350 align:start position:0%
again an example of introducing a bug
inline<00:17:07.220><c> because</c><00:17:08.220><c> we</c><00:17:08.459><c> did</c><00:17:08.640><c> not</c><00:17:08.819><c> properly</c>

00:17:09.350 --> 00:17:09.360 align:start position:0%
inline because we did not properly
 

00:17:09.360 --> 00:17:10.909 align:start position:0%
inline because we did not properly
maintain<00:17:09.720><c> the</c><00:17:09.900><c> state</c><00:17:10.140><c> of</c><00:17:10.319><c> what</c><00:17:10.500><c> is</c><00:17:10.620><c> training</c>

00:17:10.909 --> 00:17:10.919 align:start position:0%
maintain the state of what is training
 

00:17:10.919 --> 00:17:12.949 align:start position:0%
maintain the state of what is training
or<00:17:11.100><c> not</c><00:17:11.640><c> okay</c><00:17:12.059><c> so</c><00:17:12.240><c> I</c><00:17:12.360><c> Rewritten</c><00:17:12.839><c> everything</c>

00:17:12.949 --> 00:17:12.959 align:start position:0%
or not okay so I Rewritten everything
 

00:17:12.959 --> 00:17:15.409 align:start position:0%
or not okay so I Rewritten everything
and<00:17:13.679><c> here's</c><00:17:13.919><c> where</c><00:17:14.040><c> we</c><00:17:14.160><c> are</c><00:17:14.339><c> as</c><00:17:14.699><c> a</c><00:17:14.880><c> reminder</c><00:17:15.000><c> we</c>

00:17:15.409 --> 00:17:15.419 align:start position:0%
and here's where we are as a reminder we
 

00:17:15.419 --> 00:17:17.030 align:start position:0%
and here's where we are as a reminder we
have<00:17:15.540><c> the</c><00:17:15.660><c> training</c><00:17:15.900><c> loss</c><00:17:16.140><c> of</c><00:17:16.260><c> 2.05</c><00:17:16.799><c> and</c>

00:17:17.030 --> 00:17:17.040 align:start position:0%
have the training loss of 2.05 and
 

00:17:17.040 --> 00:17:18.710 align:start position:0%
have the training loss of 2.05 and
validation<00:17:17.400><c> 2.10</c>

00:17:18.710 --> 00:17:18.720 align:start position:0%
validation 2.10
 

00:17:18.720 --> 00:17:21.049 align:start position:0%
validation 2.10
now<00:17:19.319><c> because</c><00:17:19.620><c> these</c><00:17:20.339><c> losses</c><00:17:20.760><c> are</c><00:17:20.939><c> very</c>

00:17:21.049 --> 00:17:21.059 align:start position:0%
now because these losses are very
 

00:17:21.059 --> 00:17:22.549 align:start position:0%
now because these losses are very
similar<00:17:21.360><c> to</c><00:17:21.480><c> each</c><00:17:21.660><c> other</c><00:17:21.780><c> we</c><00:17:22.199><c> have</c><00:17:22.380><c> a</c><00:17:22.439><c> sense</c>

00:17:22.549 --> 00:17:22.559 align:start position:0%
similar to each other we have a sense
 

00:17:22.559 --> 00:17:24.409 align:start position:0%
similar to each other we have a sense
that<00:17:22.740><c> we</c><00:17:22.860><c> are</c><00:17:23.040><c> not</c><00:17:23.160><c> overfitting</c><00:17:23.819><c> too</c><00:17:24.059><c> much</c><00:17:24.179><c> on</c>

00:17:24.409 --> 00:17:24.419 align:start position:0%
that we are not overfitting too much on
 

00:17:24.419 --> 00:17:26.030 align:start position:0%
that we are not overfitting too much on
this<00:17:24.600><c> task</c><00:17:24.839><c> and</c><00:17:25.319><c> we</c><00:17:25.500><c> can</c><00:17:25.559><c> make</c><00:17:25.679><c> additional</c>

00:17:26.030 --> 00:17:26.040 align:start position:0%
this task and we can make additional
 

00:17:26.040 --> 00:17:28.370 align:start position:0%
this task and we can make additional
progress<00:17:26.400><c> in</c><00:17:26.760><c> our</c><00:17:27.000><c> performance</c><00:17:27.540><c> by</c><00:17:28.020><c> scaling</c>

00:17:28.370 --> 00:17:28.380 align:start position:0%
progress in our performance by scaling
 

00:17:28.380 --> 00:17:29.750 align:start position:0%
progress in our performance by scaling
up<00:17:28.500><c> the</c><00:17:28.679><c> size</c><00:17:28.799><c> of</c><00:17:28.980><c> the</c><00:17:29.040><c> neural</c><00:17:29.340><c> network</c><00:17:29.460><c> and</c>

00:17:29.750 --> 00:17:29.760 align:start position:0%
up the size of the neural network and
 

00:17:29.760 --> 00:17:32.330 align:start position:0%
up the size of the neural network and
making<00:17:29.880><c> everything</c><00:17:30.179><c> bigger</c><00:17:30.900><c> and</c><00:17:31.020><c> deeper</c>

00:17:32.330 --> 00:17:32.340 align:start position:0%
making everything bigger and deeper
 

00:17:32.340 --> 00:17:33.950 align:start position:0%
making everything bigger and deeper
now<00:17:32.880><c> currently</c><00:17:33.360><c> we</c><00:17:33.480><c> are</c><00:17:33.660><c> using</c><00:17:33.840><c> this</c>

00:17:33.950 --> 00:17:33.960 align:start position:0%
now currently we are using this
 

00:17:33.960 --> 00:17:35.930 align:start position:0%
now currently we are using this
architecture<00:17:34.380><c> here</c><00:17:34.679><c> where</c><00:17:35.280><c> we</c><00:17:35.460><c> are</c><00:17:35.580><c> taking</c><00:17:35.700><c> in</c>

00:17:35.930 --> 00:17:35.940 align:start position:0%
architecture here where we are taking in
 

00:17:35.940 --> 00:17:37.610 align:start position:0%
architecture here where we are taking in
some<00:17:36.059><c> number</c><00:17:36.179><c> of</c><00:17:36.360><c> characters</c><00:17:36.600><c> going</c><00:17:37.140><c> into</c><00:17:37.320><c> a</c>

00:17:37.610 --> 00:17:37.620 align:start position:0%
some number of characters going into a
 

00:17:37.620 --> 00:17:39.350 align:start position:0%
some number of characters going into a
single<00:17:37.860><c> hidden</c><00:17:38.160><c> layer</c><00:17:38.400><c> and</c><00:17:38.760><c> then</c><00:17:38.880><c> going</c><00:17:39.179><c> to</c>

00:17:39.350 --> 00:17:39.360 align:start position:0%
single hidden layer and then going to
 

00:17:39.360 --> 00:17:41.270 align:start position:0%
single hidden layer and then going to
the<00:17:39.480><c> prediction</c><00:17:39.720><c> of</c><00:17:39.900><c> the</c><00:17:40.020><c> next</c><00:17:40.080><c> character</c>

00:17:41.270 --> 00:17:41.280 align:start position:0%
the prediction of the next character
 

00:17:41.280 --> 00:17:43.130 align:start position:0%
the prediction of the next character
the<00:17:41.640><c> problem</c><00:17:41.760><c> here</c><00:17:42.059><c> is</c><00:17:42.240><c> we</c><00:17:42.600><c> don't</c><00:17:42.720><c> have</c><00:17:42.900><c> a</c>

00:17:43.130 --> 00:17:43.140 align:start position:0%
the problem here is we don't have a
 

00:17:43.140 --> 00:17:46.190 align:start position:0%
the problem here is we don't have a
naive<00:17:43.500><c> way</c><00:17:43.740><c> of</c><00:17:44.100><c> making</c><00:17:44.400><c> this</c><00:17:44.820><c> bigger</c><00:17:45.660><c> in</c><00:17:46.080><c> a</c>

00:17:46.190 --> 00:17:46.200 align:start position:0%
naive way of making this bigger in a
 

00:17:46.200 --> 00:17:48.770 align:start position:0%
naive way of making this bigger in a
productive<00:17:46.500><c> way</c><00:17:46.740><c> we</c><00:17:47.460><c> could</c><00:17:47.580><c> of</c><00:17:47.760><c> course</c><00:17:47.880><c> use</c>

00:17:48.770 --> 00:17:48.780 align:start position:0%
productive way we could of course use
 

00:17:48.780 --> 00:17:51.049 align:start position:0%
productive way we could of course use
our<00:17:49.200><c> layers</c><00:17:49.799><c> sort</c><00:17:50.280><c> of</c><00:17:50.400><c> building</c><00:17:50.520><c> blocks</c><00:17:50.940><c> and</c>

00:17:51.049 --> 00:17:51.059 align:start position:0%
our layers sort of building blocks and
 

00:17:51.059 --> 00:17:53.270 align:start position:0%
our layers sort of building blocks and
materials<00:17:51.600><c> to</c><00:17:52.200><c> introduce</c><00:17:52.500><c> additional</c><00:17:52.919><c> layers</c>

00:17:53.270 --> 00:17:53.280 align:start position:0%
materials to introduce additional layers
 

00:17:53.280 --> 00:17:55.490 align:start position:0%
materials to introduce additional layers
here<00:17:53.460><c> and</c><00:17:53.820><c> make</c><00:17:53.940><c> the</c><00:17:54.120><c> network</c><00:17:54.240><c> deeper</c><00:17:54.840><c> but</c><00:17:55.380><c> it</c>

00:17:55.490 --> 00:17:55.500 align:start position:0%
here and make the network deeper but it
 

00:17:55.500 --> 00:17:56.870 align:start position:0%
here and make the network deeper but it
is<00:17:55.620><c> still</c><00:17:55.740><c> the</c><00:17:55.860><c> case</c><00:17:55.980><c> that</c><00:17:56.160><c> we</c><00:17:56.280><c> are</c><00:17:56.460><c> crushing</c>

00:17:56.870 --> 00:17:56.880 align:start position:0%
is still the case that we are crushing
 

00:17:56.880 --> 00:17:58.490 align:start position:0%
is still the case that we are crushing
all<00:17:57.059><c> of</c><00:17:57.179><c> the</c><00:17:57.299><c> characters</c><00:17:57.480><c> into</c><00:17:57.840><c> a</c><00:17:58.200><c> single</c>

00:17:58.490 --> 00:17:58.500 align:start position:0%
all of the characters into a single
 

00:17:58.500 --> 00:18:00.890 align:start position:0%
all of the characters into a single
layer<00:17:59.160><c> all</c><00:17:59.700><c> the</c><00:17:59.820><c> way</c><00:17:59.880><c> at</c><00:18:00.000><c> the</c><00:18:00.120><c> beginning</c>

00:18:00.890 --> 00:18:00.900 align:start position:0%
layer all the way at the beginning
 

00:18:00.900 --> 00:18:02.870 align:start position:0%
layer all the way at the beginning
and<00:18:01.500><c> even</c><00:18:01.620><c> if</c><00:18:01.799><c> we</c><00:18:01.919><c> make</c><00:18:02.100><c> this</c><00:18:02.280><c> a</c><00:18:02.400><c> bigger</c><00:18:02.640><c> layer</c>

00:18:02.870 --> 00:18:02.880 align:start position:0%
and even if we make this a bigger layer
 

00:18:02.880 --> 00:18:04.850 align:start position:0%
and even if we make this a bigger layer
and<00:18:03.000><c> add</c><00:18:03.240><c> neurons</c><00:18:03.660><c> it's</c><00:18:04.320><c> still</c><00:18:04.500><c> kind</c><00:18:04.679><c> of</c><00:18:04.740><c> like</c>

00:18:04.850 --> 00:18:04.860 align:start position:0%
and add neurons it's still kind of like
 

00:18:04.860 --> 00:18:07.370 align:start position:0%
and add neurons it's still kind of like
silly<00:18:05.340><c> to</c><00:18:05.520><c> squash</c><00:18:06.120><c> all</c><00:18:06.299><c> that</c><00:18:06.480><c> information</c><00:18:06.660><c> so</c>

00:18:07.370 --> 00:18:07.380 align:start position:0%
silly to squash all that information so
 

00:18:07.380 --> 00:18:09.830 align:start position:0%
silly to squash all that information so
fast<00:18:07.559><c> in</c><00:18:08.280><c> a</c><00:18:08.640><c> single</c><00:18:08.880><c> step</c>

00:18:09.830 --> 00:18:09.840 align:start position:0%
fast in a single step
 

00:18:09.840 --> 00:18:11.630 align:start position:0%
fast in a single step
so<00:18:10.200><c> we'd</c><00:18:10.380><c> like</c><00:18:10.500><c> to</c><00:18:10.620><c> do</c><00:18:10.740><c> instead</c><00:18:11.039><c> is</c><00:18:11.160><c> we'd</c><00:18:11.520><c> like</c>

00:18:11.630 --> 00:18:11.640 align:start position:0%
so we'd like to do instead is we'd like
 

00:18:11.640 --> 00:18:13.430 align:start position:0%
so we'd like to do instead is we'd like
our<00:18:12.000><c> Network</c><00:18:12.179><c> to</c><00:18:12.480><c> look</c><00:18:12.660><c> a</c><00:18:12.840><c> lot</c><00:18:12.960><c> more</c><00:18:13.080><c> like</c><00:18:13.260><c> this</c>

00:18:13.430 --> 00:18:13.440 align:start position:0%
our Network to look a lot more like this
 

00:18:13.440 --> 00:18:15.650 align:start position:0%
our Network to look a lot more like this
in<00:18:13.679><c> the</c><00:18:13.860><c> wavenet</c><00:18:14.280><c> case</c><00:18:14.460><c> so</c><00:18:15.120><c> you</c><00:18:15.240><c> see</c><00:18:15.360><c> in</c><00:18:15.480><c> the</c>

00:18:15.650 --> 00:18:15.660 align:start position:0%
in the wavenet case so you see in the
 

00:18:15.660 --> 00:18:17.330 align:start position:0%
in the wavenet case so you see in the
wavenet<00:18:16.080><c> when</c><00:18:16.200><c> we</c><00:18:16.320><c> are</c><00:18:16.440><c> trying</c><00:18:16.620><c> to</c><00:18:16.919><c> make</c><00:18:17.160><c> the</c>

00:18:17.330 --> 00:18:17.340 align:start position:0%
wavenet when we are trying to make the
 

00:18:17.340 --> 00:18:18.650 align:start position:0%
wavenet when we are trying to make the
prediction<00:18:17.580><c> for</c><00:18:17.820><c> the</c><00:18:17.940><c> next</c><00:18:18.059><c> character</c><00:18:18.240><c> in</c><00:18:18.480><c> the</c>

00:18:18.650 --> 00:18:18.660 align:start position:0%
prediction for the next character in the
 

00:18:18.660 --> 00:18:20.810 align:start position:0%
prediction for the next character in the
sequence<00:18:18.960><c> it</c><00:18:19.799><c> is</c><00:18:19.919><c> a</c><00:18:20.100><c> function</c><00:18:20.400><c> of</c><00:18:20.700><c> the</c>

00:18:20.810 --> 00:18:20.820 align:start position:0%
sequence it is a function of the
 

00:18:20.820 --> 00:18:22.310 align:start position:0%
sequence it is a function of the
previous<00:18:21.000><c> characters</c><00:18:21.360><c> that</c><00:18:21.840><c> are</c><00:18:22.020><c> feeding</c>

00:18:22.310 --> 00:18:22.320 align:start position:0%
previous characters that are feeding
 

00:18:22.320 --> 00:18:25.130 align:start position:0%
previous characters that are feeding
that<00:18:22.620><c> feed</c><00:18:22.740><c> in</c><00:18:22.980><c> but</c><00:18:23.880><c> not</c><00:18:24.240><c> all</c><00:18:24.780><c> of</c><00:18:24.960><c> these</c>

00:18:25.130 --> 00:18:25.140 align:start position:0%
that feed in but not all of these
 

00:18:25.140 --> 00:18:26.450 align:start position:0%
that feed in but not all of these
different<00:18:25.320><c> characters</c><00:18:25.559><c> are</c><00:18:26.039><c> not</c><00:18:26.220><c> just</c>

00:18:26.450 --> 00:18:26.460 align:start position:0%
different characters are not just
 

00:18:26.460 --> 00:18:28.310 align:start position:0%
different characters are not just
crushed<00:18:27.000><c> to</c><00:18:27.240><c> a</c><00:18:27.360><c> single</c><00:18:27.600><c> layer</c><00:18:27.840><c> and</c><00:18:28.020><c> then</c><00:18:28.200><c> you</c>

00:18:28.310 --> 00:18:28.320 align:start position:0%
crushed to a single layer and then you
 

00:18:28.320 --> 00:18:31.630 align:start position:0%
crushed to a single layer and then you
have<00:18:28.440><c> a</c><00:18:28.740><c> sandwich</c><00:18:29.240><c> they</c><00:18:30.240><c> are</c><00:18:30.419><c> crushed</c><00:18:30.840><c> slowly</c>

00:18:31.630 --> 00:18:31.640 align:start position:0%
have a sandwich they are crushed slowly
 

00:18:31.640 --> 00:18:34.070 align:start position:0%
have a sandwich they are crushed slowly
so<00:18:32.640><c> in</c><00:18:33.120><c> particular</c><00:18:33.360><c> we</c><00:18:33.600><c> take</c><00:18:33.720><c> two</c><00:18:33.900><c> characters</c>

00:18:34.070 --> 00:18:34.080 align:start position:0%
so in particular we take two characters
 

00:18:34.080 --> 00:18:36.110 align:start position:0%
so in particular we take two characters
and<00:18:34.440><c> we</c><00:18:34.559><c> fuse</c><00:18:34.860><c> them</c><00:18:35.039><c> into</c><00:18:35.460><c> sort</c><00:18:35.760><c> of</c><00:18:35.880><c> like</c><00:18:35.940><c> a</c>

00:18:36.110 --> 00:18:36.120 align:start position:0%
and we fuse them into sort of like a
 

00:18:36.120 --> 00:18:38.330 align:start position:0%
and we fuse them into sort of like a
diagram<00:18:36.360><c> representation</c><00:18:37.080><c> and</c><00:18:37.919><c> we</c><00:18:38.039><c> do</c><00:18:38.220><c> that</c>

00:18:38.330 --> 00:18:38.340 align:start position:0%
diagram representation and we do that
 

00:18:38.340 --> 00:18:40.070 align:start position:0%
diagram representation and we do that
for<00:18:38.520><c> all</c><00:18:38.700><c> these</c><00:18:38.880><c> characters</c><00:18:39.080><c> consecutively</c>

00:18:40.070 --> 00:18:40.080 align:start position:0%
for all these characters consecutively
 

00:18:40.080 --> 00:18:42.830 align:start position:0%
for all these characters consecutively
and<00:18:40.620><c> then</c><00:18:40.679><c> we</c><00:18:40.860><c> take</c><00:18:41.039><c> the</c><00:18:41.340><c> bigrams</c><00:18:42.240><c> and</c><00:18:42.480><c> we</c><00:18:42.600><c> fuse</c>

00:18:42.830 --> 00:18:42.840 align:start position:0%
and then we take the bigrams and we fuse
 

00:18:42.840 --> 00:18:46.669 align:start position:0%
and then we take the bigrams and we fuse
those<00:18:43.200><c> into</c><00:18:44.100><c> four</c><00:18:44.640><c> character</c><00:18:44.940><c> level</c><00:18:45.419><c> chunks</c>

00:18:46.669 --> 00:18:46.679 align:start position:0%
those into four character level chunks
 

00:18:46.679 --> 00:18:49.130 align:start position:0%
those into four character level chunks
and<00:18:47.220><c> then</c><00:18:47.280><c> we</c><00:18:47.460><c> fuse</c><00:18:47.640><c> that</c><00:18:47.940><c> again</c><00:18:48.179><c> and</c><00:18:48.780><c> so</c><00:18:48.900><c> we</c><00:18:49.020><c> do</c>

00:18:49.130 --> 00:18:49.140 align:start position:0%
and then we fuse that again and so we do
 

00:18:49.140 --> 00:18:50.990 align:start position:0%
and then we fuse that again and so we do
that<00:18:49.320><c> in</c><00:18:49.500><c> this</c><00:18:49.679><c> like</c><00:18:49.860><c> tree-like</c><00:18:50.460><c> hierarchical</c>

00:18:50.990 --> 00:18:51.000 align:start position:0%
that in this like tree-like hierarchical
 

00:18:51.000 --> 00:18:53.510 align:start position:0%
that in this like tree-like hierarchical
manner<00:18:51.419><c> so</c><00:18:52.380><c> we</c><00:18:52.559><c> fuse</c><00:18:52.860><c> the</c><00:18:53.039><c> information</c><00:18:53.160><c> from</c>

00:18:53.510 --> 00:18:53.520 align:start position:0%
manner so we fuse the information from
 

00:18:53.520 --> 00:18:56.390 align:start position:0%
manner so we fuse the information from
the<00:18:53.640><c> previous</c><00:18:53.820><c> context</c><00:18:54.299><c> slowly</c><00:18:55.080><c> into</c><00:18:56.039><c> the</c>

00:18:56.390 --> 00:18:56.400 align:start position:0%
the previous context slowly into the
 

00:18:56.400 --> 00:18:58.730 align:start position:0%
the previous context slowly into the
network<00:18:56.640><c> as</c><00:18:56.940><c> it</c><00:18:57.120><c> gets</c><00:18:57.360><c> deeper</c><00:18:57.660><c> and</c><00:18:58.320><c> so</c><00:18:58.500><c> this</c><00:18:58.620><c> is</c>

00:18:58.730 --> 00:18:58.740 align:start position:0%
network as it gets deeper and so this is
 

00:18:58.740 --> 00:18:59.930 align:start position:0%
network as it gets deeper and so this is
the<00:18:58.799><c> kind</c><00:18:58.919><c> of</c><00:18:58.980><c> architecture</c><00:18:59.400><c> that</c><00:18:59.580><c> we</c><00:18:59.700><c> want</c><00:18:59.820><c> to</c>

00:18:59.930 --> 00:18:59.940 align:start position:0%
the kind of architecture that we want to
 

00:18:59.940 --> 00:19:00.770 align:start position:0%
the kind of architecture that we want to
implement

00:19:00.770 --> 00:19:00.780 align:start position:0%
implement
 

00:19:00.780 --> 00:19:02.870 align:start position:0%
implement
now<00:19:01.140><c> in</c><00:19:01.260><c> the</c><00:19:01.440><c> wave</c><00:19:01.559><c> Nets</c><00:19:01.980><c> case</c><00:19:02.100><c> this</c><00:19:02.640><c> is</c><00:19:02.760><c> a</c>

00:19:02.870 --> 00:19:02.880 align:start position:0%
now in the wave Nets case this is a
 

00:19:02.880 --> 00:19:04.430 align:start position:0%
now in the wave Nets case this is a
visualization<00:19:03.299><c> of</c><00:19:03.539><c> a</c><00:19:03.660><c> stack</c><00:19:03.900><c> of</c><00:19:04.020><c> dilated</c>

00:19:04.430 --> 00:19:04.440 align:start position:0%
visualization of a stack of dilated
 

00:19:04.440 --> 00:19:07.190 align:start position:0%
visualization of a stack of dilated
causal<00:19:04.919><c> convolution</c><00:19:05.340><c> layers</c><00:19:05.840><c> and</c><00:19:06.840><c> this</c><00:19:07.020><c> makes</c>

00:19:07.190 --> 00:19:07.200 align:start position:0%
causal convolution layers and this makes
 

00:19:07.200 --> 00:19:08.810 align:start position:0%
causal convolution layers and this makes
it<00:19:07.320><c> sound</c><00:19:07.500><c> very</c><00:19:07.679><c> scary</c><00:19:07.919><c> but</c><00:19:08.400><c> actually</c><00:19:08.580><c> the</c>

00:19:08.810 --> 00:19:08.820 align:start position:0%
it sound very scary but actually the
 

00:19:08.820 --> 00:19:10.909 align:start position:0%
it sound very scary but actually the
idea<00:19:09.000><c> is</c><00:19:09.120><c> very</c><00:19:09.360><c> simple</c><00:19:09.539><c> and</c><00:19:10.320><c> the</c><00:19:10.679><c> fact</c><00:19:10.740><c> that</c>

00:19:10.909 --> 00:19:10.919 align:start position:0%
idea is very simple and the fact that
 

00:19:10.919 --> 00:19:12.770 align:start position:0%
idea is very simple and the fact that
it's<00:19:11.039><c> a</c><00:19:11.160><c> dilated</c><00:19:11.460><c> causal</c><00:19:11.940><c> convolution</c><00:19:12.299><c> layer</c>

00:19:12.770 --> 00:19:12.780 align:start position:0%
it's a dilated causal convolution layer
 

00:19:12.780 --> 00:19:14.390 align:start position:0%
it's a dilated causal convolution layer
is<00:19:13.200><c> really</c><00:19:13.380><c> just</c><00:19:13.559><c> an</c><00:19:13.679><c> implementation</c><00:19:14.160><c> detail</c>

00:19:14.390 --> 00:19:14.400 align:start position:0%
is really just an implementation detail
 

00:19:14.400 --> 00:19:16.010 align:start position:0%
is really just an implementation detail
to<00:19:14.640><c> make</c><00:19:14.760><c> everything</c><00:19:15.000><c> fast</c><00:19:15.360><c> we're</c><00:19:15.780><c> going</c><00:19:15.960><c> to</c>

00:19:16.010 --> 00:19:16.020 align:start position:0%
to make everything fast we're going to
 

00:19:16.020 --> 00:19:18.230 align:start position:0%
to make everything fast we're going to
see<00:19:16.140><c> that</c><00:19:16.320><c> later</c><00:19:16.559><c> but</c><00:19:17.340><c> for</c><00:19:17.580><c> now</c><00:19:17.760><c> let's</c><00:19:18.059><c> just</c>

00:19:18.230 --> 00:19:18.240 align:start position:0%
see that later but for now let's just
 

00:19:18.240 --> 00:19:20.390 align:start position:0%
see that later but for now let's just
keep<00:19:18.419><c> the</c><00:19:18.600><c> basic</c><00:19:18.960><c> idea</c><00:19:19.260><c> of</c><00:19:19.500><c> it</c><00:19:19.620><c> which</c><00:19:19.980><c> is</c><00:19:20.100><c> this</c>

00:19:20.390 --> 00:19:20.400 align:start position:0%
keep the basic idea of it which is this
 

00:19:20.400 --> 00:19:22.370 align:start position:0%
keep the basic idea of it which is this
Progressive<00:19:20.820><c> Fusion</c><00:19:21.240><c> so</c><00:19:21.900><c> we</c><00:19:22.020><c> want</c><00:19:22.140><c> to</c><00:19:22.260><c> make</c>

00:19:22.370 --> 00:19:22.380 align:start position:0%
Progressive Fusion so we want to make
 

00:19:22.380 --> 00:19:24.529 align:start position:0%
Progressive Fusion so we want to make
the<00:19:22.559><c> network</c><00:19:22.679><c> deeper</c><00:19:23.220><c> and</c><00:19:23.580><c> at</c><00:19:23.760><c> each</c><00:19:24.000><c> level</c><00:19:24.179><c> we</c>

00:19:24.529 --> 00:19:24.539 align:start position:0%
the network deeper and at each level we
 

00:19:24.539 --> 00:19:26.330 align:start position:0%
the network deeper and at each level we
want<00:19:24.660><c> to</c><00:19:24.780><c> fuse</c><00:19:25.020><c> only</c><00:19:25.380><c> two</c><00:19:25.799><c> consecutive</c>

00:19:26.330 --> 00:19:26.340 align:start position:0%
want to fuse only two consecutive
 

00:19:26.340 --> 00:19:29.210 align:start position:0%
want to fuse only two consecutive
elements<00:19:26.820><c> two</c><00:19:27.480><c> characters</c><00:19:27.780><c> then</c><00:19:28.380><c> two</c><00:19:28.620><c> bigrams</c>

00:19:29.210 --> 00:19:29.220 align:start position:0%
elements two characters then two bigrams
 

00:19:29.220 --> 00:19:32.090 align:start position:0%
elements two characters then two bigrams
then<00:19:29.820><c> two</c><00:19:30.179><c> four</c><00:19:30.480><c> grams</c><00:19:30.900><c> and</c><00:19:31.140><c> so</c><00:19:31.320><c> on</c><00:19:31.440><c> so</c><00:19:31.980><c> let's</c>

00:19:32.090 --> 00:19:32.100 align:start position:0%
then two four grams and so on so let's
 

00:19:32.100 --> 00:19:34.070 align:start position:0%
then two four grams and so on so let's
unplant<00:19:32.580><c> this</c><00:19:32.760><c> okay</c><00:19:33.179><c> so</c><00:19:33.360><c> first</c><00:19:33.539><c> up</c><00:19:33.720><c> let</c><00:19:33.960><c> me</c>

00:19:34.070 --> 00:19:34.080 align:start position:0%
unplant this okay so first up let me
 

00:19:34.080 --> 00:19:35.510 align:start position:0%
unplant this okay so first up let me
scroll<00:19:34.260><c> to</c><00:19:34.440><c> where</c><00:19:34.620><c> we</c><00:19:34.799><c> built</c><00:19:35.039><c> the</c><00:19:35.160><c> data</c><00:19:35.400><c> set</c>

00:19:35.510 --> 00:19:35.520 align:start position:0%
scroll to where we built the data set
 

00:19:35.520 --> 00:19:37.190 align:start position:0%
scroll to where we built the data set
and<00:19:35.880><c> let's</c><00:19:35.940><c> change</c><00:19:36.120><c> the</c><00:19:36.360><c> block</c><00:19:36.480><c> size</c><00:19:36.660><c> from</c><00:19:36.900><c> 3</c>

00:19:37.190 --> 00:19:37.200 align:start position:0%
and let's change the block size from 3
 

00:19:37.200 --> 00:19:39.830 align:start position:0%
and let's change the block size from 3
to<00:19:37.679><c> 8.</c><00:19:38.160><c> so</c><00:19:38.700><c> we're</c><00:19:38.760><c> going</c><00:19:38.940><c> to</c><00:19:39.059><c> be</c><00:19:39.120><c> taking</c><00:19:39.299><c> eight</c>

00:19:39.830 --> 00:19:39.840 align:start position:0%
to 8. so we're going to be taking eight
 

00:19:39.840 --> 00:19:42.110 align:start position:0%
to 8. so we're going to be taking eight
characters<00:19:40.080><c> of</c><00:19:40.500><c> context</c><00:19:40.860><c> to</c><00:19:41.520><c> predict</c><00:19:41.820><c> the</c>

00:19:42.110 --> 00:19:42.120 align:start position:0%
characters of context to predict the
 

00:19:42.120 --> 00:19:44.090 align:start position:0%
characters of context to predict the
ninth<00:19:42.419><c> character</c><00:19:42.840><c> so</c><00:19:43.440><c> the</c><00:19:43.559><c> data</c><00:19:43.860><c> set</c><00:19:43.919><c> now</c>

00:19:44.090 --> 00:19:44.100 align:start position:0%
ninth character so the data set now
 

00:19:44.100 --> 00:19:45.830 align:start position:0%
ninth character so the data set now
looks<00:19:44.460><c> like</c><00:19:44.580><c> this</c><00:19:45.000><c> we</c><00:19:45.360><c> have</c><00:19:45.539><c> a</c><00:19:45.660><c> lot</c><00:19:45.720><c> more</c>

00:19:45.830 --> 00:19:45.840 align:start position:0%
looks like this we have a lot more
 

00:19:45.840 --> 00:19:47.810 align:start position:0%
looks like this we have a lot more
context<00:19:46.200><c> feeding</c><00:19:46.559><c> in</c><00:19:46.679><c> to</c><00:19:46.980><c> predict</c><00:19:47.220><c> any</c><00:19:47.520><c> next</c>

00:19:47.810 --> 00:19:47.820 align:start position:0%
context feeding in to predict any next
 

00:19:47.820 --> 00:19:49.970 align:start position:0%
context feeding in to predict any next
character<00:19:48.240><c> in</c><00:19:48.360><c> a</c><00:19:48.539><c> sequence</c><00:19:48.780><c> and</c><00:19:49.559><c> these</c><00:19:49.860><c> eight</c>

00:19:49.970 --> 00:19:49.980 align:start position:0%
character in a sequence and these eight
 

00:19:49.980 --> 00:19:51.470 align:start position:0%
character in a sequence and these eight
characters<00:19:50.280><c> are</c><00:19:50.640><c> going</c><00:19:50.760><c> to</c><00:19:50.820><c> be</c><00:19:50.940><c> processed</c><00:19:51.360><c> in</c>

00:19:51.470 --> 00:19:51.480 align:start position:0%
characters are going to be processed in
 

00:19:51.480 --> 00:19:53.450 align:start position:0%
characters are going to be processed in
this<00:19:51.660><c> tree</c><00:19:51.840><c> like</c><00:19:52.080><c> structure</c>

00:19:53.450 --> 00:19:53.460 align:start position:0%
this tree like structure
 

00:19:53.460 --> 00:19:56.029 align:start position:0%
this tree like structure
now<00:19:54.000><c> if</c><00:19:54.240><c> we</c><00:19:54.360><c> scroll</c><00:19:54.600><c> here</c><00:19:55.260><c> everything</c><00:19:55.799><c> here</c>

00:19:56.029 --> 00:19:56.039 align:start position:0%
now if we scroll here everything here
 

00:19:56.039 --> 00:19:58.130 align:start position:0%
now if we scroll here everything here
should<00:19:56.280><c> just</c><00:19:56.400><c> be</c><00:19:56.520><c> able</c><00:19:56.700><c> to</c><00:19:56.820><c> work</c><00:19:57.299><c> so</c><00:19:57.840><c> we</c><00:19:58.020><c> should</c>

00:19:58.130 --> 00:19:58.140 align:start position:0%
should just be able to work so we should
 

00:19:58.140 --> 00:19:59.630 align:start position:0%
should just be able to work so we should
be<00:19:58.200><c> able</c><00:19:58.320><c> to</c><00:19:58.380><c> redefine</c><00:19:58.740><c> the</c><00:19:58.860><c> network</c>

00:19:59.630 --> 00:19:59.640 align:start position:0%
be able to redefine the network
 

00:19:59.640 --> 00:20:01.250 align:start position:0%
be able to redefine the network
you<00:20:00.120><c> see</c><00:20:00.240><c> the</c><00:20:00.419><c> number</c><00:20:00.600><c> of</c><00:20:00.720><c> parameters</c><00:20:01.080><c> has</c>

00:20:01.250 --> 00:20:01.260 align:start position:0%
you see the number of parameters has
 

00:20:01.260 --> 00:20:03.610 align:start position:0%
you see the number of parameters has
increased<00:20:01.620><c> by</c><00:20:01.799><c> 10</c><00:20:02.220><c> 000</c><00:20:02.340><c> and</c><00:20:03.059><c> that's</c><00:20:03.179><c> because</c>

00:20:03.610 --> 00:20:03.620 align:start position:0%
increased by 10 000 and that's because
 

00:20:03.620 --> 00:20:06.110 align:start position:0%
increased by 10 000 and that's because
the<00:20:04.620><c> block</c><00:20:04.740><c> size</c><00:20:04.980><c> has</c><00:20:05.160><c> grown</c><00:20:05.460><c> so</c><00:20:05.820><c> this</c><00:20:06.000><c> first</c>

00:20:06.110 --> 00:20:06.120 align:start position:0%
the block size has grown so this first
 

00:20:06.120 --> 00:20:08.210 align:start position:0%
the block size has grown so this first
linear<00:20:06.480><c> layer</c><00:20:06.780><c> is</c><00:20:06.900><c> much</c><00:20:07.020><c> much</c><00:20:07.200><c> bigger</c><00:20:07.980><c> our</c>

00:20:08.210 --> 00:20:08.220 align:start position:0%
linear layer is much much bigger our
 

00:20:08.220 --> 00:20:10.490 align:start position:0%
linear layer is much much bigger our
linear<00:20:08.520><c> layer</c><00:20:08.880><c> now</c><00:20:09.059><c> takes</c><00:20:09.900><c> eight</c><00:20:10.200><c> characters</c>

00:20:10.490 --> 00:20:10.500 align:start position:0%
linear layer now takes eight characters
 

00:20:10.500 --> 00:20:13.190 align:start position:0%
linear layer now takes eight characters
into<00:20:11.220><c> this</c><00:20:11.520><c> middle</c><00:20:11.880><c> layer</c><00:20:12.299><c> so</c><00:20:12.780><c> there's</c><00:20:12.960><c> a</c><00:20:13.140><c> lot</c>

00:20:13.190 --> 00:20:13.200 align:start position:0%
into this middle layer so there's a lot
 

00:20:13.200 --> 00:20:15.470 align:start position:0%
into this middle layer so there's a lot
more<00:20:13.320><c> parameters</c><00:20:13.740><c> there</c><00:20:13.980><c> but</c><00:20:14.760><c> this</c><00:20:15.299><c> should</c>

00:20:15.470 --> 00:20:15.480 align:start position:0%
more parameters there but this should
 

00:20:15.480 --> 00:20:18.230 align:start position:0%
more parameters there but this should
just<00:20:15.720><c> run</c><00:20:16.280><c> let</c><00:20:17.280><c> me</c><00:20:17.460><c> just</c><00:20:17.580><c> break</c><00:20:17.820><c> right</c><00:20:18.059><c> after</c>

00:20:18.230 --> 00:20:18.240 align:start position:0%
just run let me just break right after
 

00:20:18.240 --> 00:20:20.450 align:start position:0%
just run let me just break right after
the<00:20:18.480><c> very</c><00:20:18.660><c> first</c><00:20:18.900><c> iteration</c><00:20:19.380><c> so</c><00:20:20.100><c> you</c><00:20:20.220><c> see</c><00:20:20.340><c> that</c>

00:20:20.450 --> 00:20:20.460 align:start position:0%
the very first iteration so you see that
 

00:20:20.460 --> 00:20:22.430 align:start position:0%
the very first iteration so you see that
this<00:20:20.640><c> runs</c><00:20:21.000><c> just</c><00:20:21.240><c> fine</c><00:20:21.480><c> it's</c><00:20:21.960><c> just</c><00:20:22.140><c> that</c><00:20:22.320><c> this</c>

00:20:22.430 --> 00:20:22.440 align:start position:0%
this runs just fine it's just that this
 

00:20:22.440 --> 00:20:23.510 align:start position:0%
this runs just fine it's just that this
network<00:20:22.620><c> doesn't</c><00:20:22.919><c> make</c><00:20:23.039><c> too</c><00:20:23.220><c> much</c><00:20:23.340><c> sense</c>

00:20:23.510 --> 00:20:23.520 align:start position:0%
network doesn't make too much sense
 

00:20:23.520 --> 00:20:25.070 align:start position:0%
network doesn't make too much sense
we're<00:20:23.760><c> crushing</c><00:20:24.299><c> way</c><00:20:24.660><c> too</c><00:20:24.780><c> much</c><00:20:24.900><c> information</c>

00:20:25.070 --> 00:20:25.080 align:start position:0%
we're crushing way too much information
 

00:20:25.080 --> 00:20:26.930 align:start position:0%
we're crushing way too much information
way<00:20:25.740><c> too</c><00:20:25.919><c> fast</c>

00:20:26.930 --> 00:20:26.940 align:start position:0%
way too fast
 

00:20:26.940 --> 00:20:29.029 align:start position:0%
way too fast
so<00:20:27.419><c> let's</c><00:20:27.539><c> now</c><00:20:27.720><c> come</c><00:20:27.900><c> in</c><00:20:28.020><c> and</c><00:20:28.260><c> see</c><00:20:28.500><c> how</c><00:20:28.860><c> we</c>

00:20:29.029 --> 00:20:29.039 align:start position:0%
so let's now come in and see how we
 

00:20:29.039 --> 00:20:30.950 align:start position:0%
so let's now come in and see how we
could<00:20:29.160><c> try</c><00:20:29.400><c> to</c><00:20:29.760><c> implement</c><00:20:30.299><c> the</c><00:20:30.539><c> hierarchical</c>

00:20:30.950 --> 00:20:30.960 align:start position:0%
could try to implement the hierarchical
 

00:20:30.960 --> 00:20:33.230 align:start position:0%
could try to implement the hierarchical
scheme<00:20:31.919><c> now</c><00:20:32.340><c> before</c><00:20:32.460><c> we</c><00:20:32.700><c> dive</c><00:20:32.820><c> into</c><00:20:33.000><c> the</c>

00:20:33.230 --> 00:20:33.240 align:start position:0%
scheme now before we dive into the
 

00:20:33.240 --> 00:20:35.330 align:start position:0%
scheme now before we dive into the
detail<00:20:33.480><c> of</c><00:20:33.600><c> the</c><00:20:33.720><c> re-implementation</c><00:20:34.500><c> here</c><00:20:34.799><c> I</c>

00:20:35.330 --> 00:20:35.340 align:start position:0%
detail of the re-implementation here I
 

00:20:35.340 --> 00:20:37.549 align:start position:0%
detail of the re-implementation here I
was<00:20:35.520><c> just</c><00:20:35.640><c> curious</c><00:20:35.940><c> to</c><00:20:36.120><c> actually</c><00:20:36.299><c> run</c><00:20:36.780><c> it</c><00:20:37.200><c> and</c>

00:20:37.549 --> 00:20:37.559 align:start position:0%
was just curious to actually run it and
 

00:20:37.559 --> 00:20:38.510 align:start position:0%
was just curious to actually run it and
see<00:20:37.679><c> where</c><00:20:37.860><c> we</c><00:20:37.980><c> are</c><00:20:38.100><c> in</c><00:20:38.220><c> terms</c><00:20:38.340><c> of</c><00:20:38.460><c> the</c>

00:20:38.510 --> 00:20:38.520 align:start position:0%
see where we are in terms of the
 

00:20:38.520 --> 00:20:40.250 align:start position:0%
see where we are in terms of the
Baseline<00:20:38.940><c> performance</c><00:20:39.240><c> of</c><00:20:39.539><c> just</c><00:20:39.660><c> lazily</c>

00:20:40.250 --> 00:20:40.260 align:start position:0%
Baseline performance of just lazily
 

00:20:40.260 --> 00:20:42.830 align:start position:0%
Baseline performance of just lazily
scaling<00:20:40.620><c> up</c><00:20:40.740><c> the</c><00:20:41.280><c> context</c><00:20:41.520><c> length</c><00:20:41.940><c> so</c><00:20:42.660><c> I'll</c>

00:20:42.830 --> 00:20:42.840 align:start position:0%
scaling up the context length so I'll
 

00:20:42.840 --> 00:20:45.110 align:start position:0%
scaling up the context length so I'll
let<00:20:43.020><c> it</c><00:20:43.200><c> run</c><00:20:43.320><c> we</c><00:20:43.620><c> get</c><00:20:43.799><c> a</c><00:20:43.919><c> nice</c><00:20:44.039><c> loss</c><00:20:44.340><c> curve</c><00:20:44.640><c> and</c>

00:20:45.110 --> 00:20:45.120 align:start position:0%
let it run we get a nice loss curve and
 

00:20:45.120 --> 00:20:46.789 align:start position:0%
let it run we get a nice loss curve and
then<00:20:45.240><c> evaluating</c><00:20:45.720><c> the</c><00:20:45.900><c> loss</c><00:20:46.200><c> we</c><00:20:46.500><c> actually</c><00:20:46.620><c> see</c>

00:20:46.789 --> 00:20:46.799 align:start position:0%
then evaluating the loss we actually see
 

00:20:46.799 --> 00:20:48.470 align:start position:0%
then evaluating the loss we actually see
quite<00:20:46.980><c> a</c><00:20:47.100><c> bit</c><00:20:47.160><c> of</c><00:20:47.280><c> improvement</c><00:20:47.700><c> just</c><00:20:48.179><c> from</c>

00:20:48.470 --> 00:20:48.480 align:start position:0%
quite a bit of improvement just from
 

00:20:48.480 --> 00:20:51.230 align:start position:0%
quite a bit of improvement just from
increasing<00:20:49.320><c> the</c><00:20:49.500><c> context</c><00:20:49.799><c> line</c><00:20:50.100><c> length</c><00:20:50.640><c> so</c><00:20:51.179><c> I</c>

00:20:51.230 --> 00:20:51.240 align:start position:0%
increasing the context line length so I
 

00:20:51.240 --> 00:20:52.310 align:start position:0%
increasing the context line length so I
started<00:20:51.539><c> a</c><00:20:51.600><c> little</c><00:20:51.660><c> bit</c><00:20:51.780><c> of</c><00:20:51.900><c> a</c><00:20:52.020><c> performance</c>

00:20:52.310 --> 00:20:52.320 align:start position:0%
started a little bit of a performance
 

00:20:52.320 --> 00:20:54.770 align:start position:0%
started a little bit of a performance
log<00:20:52.500><c> here</c><00:20:52.799><c> and</c><00:20:53.460><c> previously</c><00:20:53.880><c> where</c><00:20:54.059><c> we</c><00:20:54.240><c> were</c><00:20:54.360><c> is</c>

00:20:54.770 --> 00:20:54.780 align:start position:0%
log here and previously where we were is
 

00:20:54.780 --> 00:20:57.830 align:start position:0%
log here and previously where we were is
we<00:20:54.960><c> were</c><00:20:55.140><c> getting</c><00:20:55.380><c> a</c><00:20:55.919><c> performance</c><00:20:56.340><c> of</c><00:20:56.520><c> 2.10</c><00:20:57.120><c> on</c>

00:20:57.830 --> 00:20:57.840 align:start position:0%
we were getting a performance of 2.10 on
 

00:20:57.840 --> 00:20:59.750 align:start position:0%
we were getting a performance of 2.10 on
the<00:20:57.960><c> validation</c><00:20:58.320><c> loss</c><00:20:58.740><c> and</c><00:20:59.340><c> now</c><00:20:59.460><c> simply</c>

00:20:59.750 --> 00:20:59.760 align:start position:0%
the validation loss and now simply
 

00:20:59.760 --> 00:21:01.370 align:start position:0%
the validation loss and now simply
scaling<00:21:00.120><c> up</c><00:21:00.240><c> the</c><00:21:00.299><c> contact</c><00:21:00.419><c> length</c><00:21:00.840><c> from</c><00:21:00.960><c> 3</c><00:21:01.140><c> to</c>

00:21:01.370 --> 00:21:01.380 align:start position:0%
scaling up the contact length from 3 to
 

00:21:01.380 --> 00:21:05.390 align:start position:0%
scaling up the contact length from 3 to
8<00:21:01.640><c> gives</c><00:21:02.640><c> us</c><00:21:02.820><c> a</c><00:21:03.120><c> performance</c><00:21:03.480><c> of</c><00:21:03.600><c> 2.02</c><00:21:04.799><c> so</c>

00:21:05.390 --> 00:21:05.400 align:start position:0%
8 gives us a performance of 2.02 so
 

00:21:05.400 --> 00:21:07.250 align:start position:0%
8 gives us a performance of 2.02 so
quite<00:21:05.640><c> a</c><00:21:05.760><c> bit</c><00:21:05.820><c> of</c><00:21:05.940><c> an</c><00:21:06.000><c> improvement</c><00:21:06.360><c> here</c><00:21:06.600><c> and</c>

00:21:07.250 --> 00:21:07.260 align:start position:0%
quite a bit of an improvement here and
 

00:21:07.260 --> 00:21:08.810 align:start position:0%
quite a bit of an improvement here and
also<00:21:07.500><c> when</c><00:21:07.620><c> you</c><00:21:07.740><c> sample</c><00:21:08.100><c> from</c><00:21:08.280><c> the</c><00:21:08.340><c> model</c><00:21:08.520><c> you</c>

00:21:08.810 --> 00:21:08.820 align:start position:0%
also when you sample from the model you
 

00:21:08.820 --> 00:21:10.190 align:start position:0%
also when you sample from the model you
see<00:21:08.940><c> that</c><00:21:09.120><c> the</c><00:21:09.240><c> names</c><00:21:09.360><c> are</c><00:21:09.780><c> definitely</c>

00:21:10.190 --> 00:21:10.200 align:start position:0%
see that the names are definitely
 

00:21:10.200 --> 00:21:13.010 align:start position:0%
see that the names are definitely
improving<00:21:10.740><c> qualitatively</c><00:21:11.700><c> as</c><00:21:12.059><c> well</c>

00:21:13.010 --> 00:21:13.020 align:start position:0%
improving qualitatively as well
 

00:21:13.020 --> 00:21:14.570 align:start position:0%
improving qualitatively as well
so<00:21:13.500><c> we</c><00:21:13.740><c> could</c><00:21:13.860><c> of</c><00:21:13.980><c> course</c><00:21:14.100><c> spend</c><00:21:14.280><c> a</c><00:21:14.460><c> lot</c><00:21:14.520><c> of</c>

00:21:14.570 --> 00:21:14.580 align:start position:0%
so we could of course spend a lot of
 

00:21:14.580 --> 00:21:16.070 align:start position:0%
so we could of course spend a lot of
time<00:21:14.700><c> here</c><00:21:14.940><c> tuning</c>

00:21:16.070 --> 00:21:16.080 align:start position:0%
time here tuning
 

00:21:16.080 --> 00:21:17.990 align:start position:0%
time here tuning
um<00:21:16.140><c> uh</c><00:21:16.799><c> tuning</c><00:21:17.100><c> things</c><00:21:17.220><c> and</c><00:21:17.460><c> making</c><00:21:17.580><c> it</c><00:21:17.820><c> even</c>

00:21:17.990 --> 00:21:18.000 align:start position:0%
um uh tuning things and making it even
 

00:21:18.000 --> 00:21:19.250 align:start position:0%
um uh tuning things and making it even
bigger<00:21:18.299><c> and</c><00:21:18.600><c> scaling</c><00:21:18.900><c> up</c><00:21:19.020><c> the</c><00:21:19.080><c> network</c>

00:21:19.250 --> 00:21:19.260 align:start position:0%
bigger and scaling up the network
 

00:21:19.260 --> 00:21:21.590 align:start position:0%
bigger and scaling up the network
further<00:21:19.679><c> even</c><00:21:20.160><c> with</c><00:21:20.400><c> the</c><00:21:20.640><c> simple</c>

00:21:21.590 --> 00:21:21.600 align:start position:0%
further even with the simple
 

00:21:21.600 --> 00:21:24.350 align:start position:0%
further even with the simple
um<00:21:21.660><c> sort</c><00:21:22.200><c> of</c><00:21:22.260><c> setup</c><00:21:22.860><c> here</c><00:21:23.100><c> but</c><00:21:24.000><c> let's</c><00:21:24.179><c> continue</c>

00:21:24.350 --> 00:21:24.360 align:start position:0%
um sort of setup here but let's continue
 

00:21:24.360 --> 00:21:27.169 align:start position:0%
um sort of setup here but let's continue
and<00:21:24.900><c> let's</c><00:21:25.020><c> Implement</c><00:21:25.440><c> here</c><00:21:25.679><c> model</c><00:21:26.160><c> and</c><00:21:26.880><c> treat</c>

00:21:27.169 --> 00:21:27.179 align:start position:0%
and let's Implement here model and treat
 

00:21:27.179 --> 00:21:28.669 align:start position:0%
and let's Implement here model and treat
this<00:21:27.419><c> as</c><00:21:27.539><c> just</c><00:21:27.780><c> a</c><00:21:27.960><c> rough</c><00:21:28.140><c> Baseline</c>

00:21:28.669 --> 00:21:28.679 align:start position:0%
this as just a rough Baseline
 

00:21:28.679 --> 00:21:30.710 align:start position:0%
this as just a rough Baseline
performance<00:21:29.120><c> but</c><00:21:30.120><c> there's</c><00:21:30.240><c> a</c><00:21:30.419><c> lot</c><00:21:30.539><c> of</c>

00:21:30.710 --> 00:21:30.720 align:start position:0%
performance but there's a lot of
 

00:21:30.720 --> 00:21:32.930 align:start position:0%
performance but there's a lot of
optimization<00:21:31.320><c> like</c><00:21:31.799><c> left</c><00:21:32.039><c> on</c><00:21:32.280><c> the</c><00:21:32.400><c> table</c><00:21:32.520><c> in</c>

00:21:32.930 --> 00:21:32.940 align:start position:0%
optimization like left on the table in
 

00:21:32.940 --> 00:21:34.250 align:start position:0%
optimization like left on the table in
terms<00:21:33.179><c> of</c><00:21:33.179><c> some</c><00:21:33.360><c> of</c><00:21:33.480><c> the</c><00:21:33.539><c> hyper</c><00:21:33.780><c> parameters</c>

00:21:34.250 --> 00:21:34.260 align:start position:0%
terms of some of the hyper parameters
 

00:21:34.260 --> 00:21:35.810 align:start position:0%
terms of some of the hyper parameters
that<00:21:34.740><c> you're</c><00:21:34.860><c> hopefully</c><00:21:35.220><c> getting</c><00:21:35.400><c> a</c><00:21:35.580><c> sense</c><00:21:35.700><c> of</c>

00:21:35.810 --> 00:21:35.820 align:start position:0%
that you're hopefully getting a sense of
 

00:21:35.820 --> 00:21:38.390 align:start position:0%
that you're hopefully getting a sense of
now<00:21:36.059><c> okay</c><00:21:36.600><c> so</c><00:21:36.840><c> let's</c><00:21:37.140><c> scroll</c><00:21:37.440><c> up</c><00:21:37.620><c> now</c>

00:21:38.390 --> 00:21:38.400 align:start position:0%
now okay so let's scroll up now
 

00:21:38.400 --> 00:21:41.090 align:start position:0%
now okay so let's scroll up now
and<00:21:39.120><c> come</c><00:21:39.419><c> back</c><00:21:39.600><c> up</c><00:21:39.840><c> and</c><00:21:40.559><c> what</c><00:21:40.679><c> I've</c><00:21:40.799><c> done</c><00:21:40.919><c> here</c>

00:21:41.090 --> 00:21:41.100 align:start position:0%
and come back up and what I've done here
 

00:21:41.100 --> 00:21:42.770 align:start position:0%
and come back up and what I've done here
is<00:21:41.159><c> I've</c><00:21:41.340><c> created</c><00:21:41.580><c> a</c><00:21:41.700><c> bit</c><00:21:41.820><c> of</c><00:21:41.940><c> a</c><00:21:42.120><c> scratch</c><00:21:42.480><c> space</c>

00:21:42.770 --> 00:21:42.780 align:start position:0%
is I've created a bit of a scratch space
 

00:21:42.780 --> 00:21:45.529 align:start position:0%
is I've created a bit of a scratch space
for<00:21:43.440><c> us</c><00:21:43.559><c> to</c><00:21:43.740><c> just</c><00:21:43.919><c> like</c><00:21:44.100><c> look</c><00:21:44.580><c> at</c><00:21:44.760><c> the</c><00:21:45.179><c> forward</c>

00:21:45.529 --> 00:21:45.539 align:start position:0%
for us to just like look at the forward
 

00:21:45.539 --> 00:21:47.870 align:start position:0%
for us to just like look at the forward
pass<00:21:45.780><c> of</c><00:21:45.960><c> the</c><00:21:46.020><c> neural</c><00:21:46.260><c> net</c><00:21:46.380><c> and</c><00:21:46.860><c> inspect</c><00:21:47.280><c> the</c>

00:21:47.870 --> 00:21:47.880 align:start position:0%
pass of the neural net and inspect the
 

00:21:47.880 --> 00:21:49.789 align:start position:0%
pass of the neural net and inspect the
shape<00:21:48.120><c> of</c><00:21:48.299><c> the</c><00:21:48.419><c> tensor</c><00:21:48.720><c> along</c><00:21:49.020><c> the</c><00:21:49.200><c> way</c><00:21:49.320><c> as</c><00:21:49.620><c> the</c>

00:21:49.789 --> 00:21:49.799 align:start position:0%
shape of the tensor along the way as the
 

00:21:49.799 --> 00:21:53.270 align:start position:0%
shape of the tensor along the way as the
neural<00:21:50.100><c> net</c><00:21:50.220><c> uh</c><00:21:50.760><c> forwards</c><00:21:51.500><c> so</c><00:21:52.500><c> here</c><00:21:52.740><c> I'm</c><00:21:53.159><c> just</c>

00:21:53.270 --> 00:21:53.280 align:start position:0%
neural net uh forwards so here I'm just
 

00:21:53.280 --> 00:21:55.789 align:start position:0%
neural net uh forwards so here I'm just
temporarily<00:21:53.760><c> for</c><00:21:54.240><c> debugging</c><00:21:55.020><c> creating</c><00:21:55.500><c> a</c>

00:21:55.789 --> 00:21:55.799 align:start position:0%
temporarily for debugging creating a
 

00:21:55.799 --> 00:21:58.010 align:start position:0%
temporarily for debugging creating a
batch<00:21:55.919><c> of</c><00:21:56.159><c> just</c><00:21:56.280><c> say</c><00:21:56.460><c> four</c><00:21:56.700><c> examples</c><00:21:57.059><c> so</c><00:21:57.780><c> four</c>

00:21:58.010 --> 00:21:58.020 align:start position:0%
batch of just say four examples so four
 

00:21:58.020 --> 00:22:00.110 align:start position:0%
batch of just say four examples so four
random<00:21:58.440><c> integers</c><00:21:58.799><c> then</c><00:21:59.460><c> I'm</c><00:21:59.580><c> plucking</c><00:22:00.000><c> out</c>

00:22:00.110 --> 00:22:00.120 align:start position:0%
random integers then I'm plucking out
 

00:22:00.120 --> 00:22:02.210 align:start position:0%
random integers then I'm plucking out
those<00:22:00.539><c> rows</c><00:22:00.900><c> from</c><00:22:01.080><c> our</c><00:22:01.200><c> training</c><00:22:01.559><c> set</c>

00:22:02.210 --> 00:22:02.220 align:start position:0%
those rows from our training set
 

00:22:02.220 --> 00:22:04.669 align:start position:0%
those rows from our training set
and<00:22:02.580><c> then</c><00:22:02.700><c> I'm</c><00:22:02.880><c> passing</c><00:22:03.299><c> into</c><00:22:03.720><c> the</c><00:22:03.900><c> model</c><00:22:04.080><c> the</c>

00:22:04.669 --> 00:22:04.679 align:start position:0%
and then I'm passing into the model the
 

00:22:04.679 --> 00:22:06.470 align:start position:0%
and then I'm passing into the model the
input<00:22:05.039><c> xB</c>

00:22:06.470 --> 00:22:06.480 align:start position:0%
input xB
 

00:22:06.480 --> 00:22:08.630 align:start position:0%
input xB
now<00:22:06.960><c> the</c><00:22:07.140><c> shape</c><00:22:07.260><c> of</c><00:22:07.440><c> XB</c><00:22:07.799><c> here</c><00:22:08.039><c> because</c><00:22:08.220><c> we</c><00:22:08.460><c> have</c>

00:22:08.630 --> 00:22:08.640 align:start position:0%
now the shape of XB here because we have
 

00:22:08.640 --> 00:22:11.270 align:start position:0%
now the shape of XB here because we have
only<00:22:08.880><c> four</c><00:22:09.059><c> examples</c><00:22:09.419><c> is</c><00:22:09.780><c> four</c><00:22:10.140><c> by</c><00:22:10.320><c> eight</c><00:22:10.620><c> and</c>

00:22:11.270 --> 00:22:11.280 align:start position:0%
only four examples is four by eight and
 

00:22:11.280 --> 00:22:14.270 align:start position:0%
only four examples is four by eight and
this<00:22:11.400><c> eight</c><00:22:11.640><c> is</c><00:22:12.240><c> now</c><00:22:12.539><c> the</c><00:22:12.780><c> current</c><00:22:12.900><c> block</c><00:22:13.140><c> size</c>

00:22:14.270 --> 00:22:14.280 align:start position:0%
this eight is now the current block size
 

00:22:14.280 --> 00:22:17.990 align:start position:0%
this eight is now the current block size
so<00:22:15.059><c> uh</c><00:22:15.780><c> inspecting</c><00:22:16.679><c> XP</c><00:22:17.100><c> we</c><00:22:17.460><c> just</c><00:22:17.520><c> see</c><00:22:17.700><c> that</c><00:22:17.820><c> we</c>

00:22:17.990 --> 00:22:18.000 align:start position:0%
so uh inspecting XP we just see that we
 

00:22:18.000 --> 00:22:19.850 align:start position:0%
so uh inspecting XP we just see that we
have<00:22:18.120><c> four</c><00:22:18.240><c> examples</c><00:22:18.659><c> each</c><00:22:19.260><c> one</c><00:22:19.380><c> of</c><00:22:19.500><c> them</c><00:22:19.620><c> is</c><00:22:19.740><c> a</c>

00:22:19.850 --> 00:22:19.860 align:start position:0%
have four examples each one of them is a
 

00:22:19.860 --> 00:22:21.289 align:start position:0%
have four examples each one of them is a
row<00:22:20.100><c> of</c><00:22:20.280><c> xB</c>

00:22:21.289 --> 00:22:21.299 align:start position:0%
row of xB
 

00:22:21.299 --> 00:22:24.710 align:start position:0%
row of xB
and<00:22:21.900><c> we</c><00:22:22.260><c> have</c><00:22:22.380><c> eight</c><00:22:23.039><c> characters</c><00:22:23.880><c> here</c><00:22:24.299><c> and</c>

00:22:24.710 --> 00:22:24.720 align:start position:0%
and we have eight characters here and
 

00:22:24.720 --> 00:22:26.330 align:start position:0%
and we have eight characters here and
this<00:22:24.900><c> integer</c><00:22:25.260><c> tensor</c><00:22:25.620><c> just</c><00:22:25.860><c> contains</c><00:22:26.220><c> the</c>

00:22:26.330 --> 00:22:26.340 align:start position:0%
this integer tensor just contains the
 

00:22:26.340 --> 00:22:29.450 align:start position:0%
this integer tensor just contains the
identities<00:22:26.700><c> of</c><00:22:26.940><c> those</c><00:22:27.120><c> characters</c>

00:22:29.450 --> 00:22:29.460 align:start position:0%
 
 

00:22:29.460 --> 00:22:31.190 align:start position:0%
 
so<00:22:29.820><c> the</c><00:22:30.000><c> first</c><00:22:30.120><c> layer</c><00:22:30.419><c> of</c><00:22:30.539><c> our</c><00:22:30.600><c> neural</c><00:22:30.900><c> net</c><00:22:31.020><c> is</c>

00:22:31.190 --> 00:22:31.200 align:start position:0%
so the first layer of our neural net is
 

00:22:31.200 --> 00:22:33.950 align:start position:0%
so the first layer of our neural net is
the<00:22:31.320><c> embedding</c><00:22:31.679><c> layer</c><00:22:31.919><c> so</c><00:22:32.520><c> passing</c><00:22:32.940><c> XB</c><00:22:33.539><c> this</c>

00:22:33.950 --> 00:22:33.960 align:start position:0%
the embedding layer so passing XB this
 

00:22:33.960 --> 00:22:35.630 align:start position:0%
the embedding layer so passing XB this
integer<00:22:34.380><c> tensor</c><00:22:34.799><c> through</c><00:22:35.039><c> the</c><00:22:35.220><c> embedding</c>

00:22:35.630 --> 00:22:35.640 align:start position:0%
integer tensor through the embedding
 

00:22:35.640 --> 00:22:37.669 align:start position:0%
integer tensor through the embedding
layer<00:22:35.880><c> creates</c><00:22:36.539><c> an</c><00:22:36.720><c> output</c><00:22:36.960><c> that</c><00:22:37.200><c> is</c><00:22:37.320><c> four</c><00:22:37.440><c> by</c>

00:22:37.669 --> 00:22:37.679 align:start position:0%
layer creates an output that is four by
 

00:22:37.679 --> 00:22:39.049 align:start position:0%
layer creates an output that is four by
eight<00:22:37.919><c> by</c><00:22:38.159><c> ten</c>

00:22:39.049 --> 00:22:39.059 align:start position:0%
eight by ten
 

00:22:39.059 --> 00:22:42.710 align:start position:0%
eight by ten
so<00:22:39.539><c> our</c><00:22:39.720><c> embedding</c><00:22:40.200><c> table</c><00:22:40.520><c> has</c><00:22:41.539><c> for</c><00:22:42.539><c> each</c>

00:22:42.710 --> 00:22:42.720 align:start position:0%
so our embedding table has for each
 

00:22:42.720 --> 00:22:44.750 align:start position:0%
so our embedding table has for each
character<00:22:43.080><c> a</c><00:22:43.559><c> 10-dimensional</c><00:22:44.159><c> vector</c><00:22:44.520><c> that</c>

00:22:44.750 --> 00:22:44.760 align:start position:0%
character a 10-dimensional vector that
 

00:22:44.760 --> 00:22:46.010 align:start position:0%
character a 10-dimensional vector that
we<00:22:44.820><c> are</c><00:22:44.940><c> trying</c><00:22:45.120><c> to</c><00:22:45.299><c> learn</c>

00:22:46.010 --> 00:22:46.020 align:start position:0%
we are trying to learn
 

00:22:46.020 --> 00:22:48.049 align:start position:0%
we are trying to learn
and<00:22:46.500><c> so</c><00:22:46.679><c> what</c><00:22:46.799><c> the</c><00:22:46.980><c> embedding</c><00:22:47.340><c> layer</c><00:22:47.880><c> does</c>

00:22:48.049 --> 00:22:48.059 align:start position:0%
and so what the embedding layer does
 

00:22:48.059 --> 00:22:50.870 align:start position:0%
and so what the embedding layer does
here<00:22:48.299><c> is</c><00:22:48.780><c> it</c><00:22:49.020><c> plucks</c><00:22:49.320><c> out</c><00:22:49.559><c> the</c><00:22:50.460><c> embedding</c>

00:22:50.870 --> 00:22:50.880 align:start position:0%
here is it plucks out the embedding
 

00:22:50.880 --> 00:22:53.510 align:start position:0%
here is it plucks out the embedding
Vector<00:22:51.240><c> for</c><00:22:52.020><c> each</c><00:22:52.200><c> one</c><00:22:52.320><c> of</c><00:22:52.440><c> these</c><00:22:52.620><c> integers</c>

00:22:53.510 --> 00:22:53.520 align:start position:0%
Vector for each one of these integers
 

00:22:53.520 --> 00:22:56.029 align:start position:0%
Vector for each one of these integers
and<00:22:54.059><c> organizes</c><00:22:54.720><c> it</c><00:22:54.900><c> all</c><00:22:55.080><c> in</c><00:22:55.380><c> a</c><00:22:55.500><c> four</c><00:22:55.620><c> by</c><00:22:55.799><c> eight</c>

00:22:56.029 --> 00:22:56.039 align:start position:0%
and organizes it all in a four by eight
 

00:22:56.039 --> 00:22:58.250 align:start position:0%
and organizes it all in a four by eight
by<00:22:56.220><c> ten</c><00:22:56.640><c> tensor</c><00:22:57.299><c> now</c>

00:22:58.250 --> 00:22:58.260 align:start position:0%
by ten tensor now
 

00:22:58.260 --> 00:23:00.289 align:start position:0%
by ten tensor now
so<00:22:58.919><c> all</c><00:22:59.100><c> of</c><00:22:59.220><c> these</c><00:22:59.340><c> integers</c><00:22:59.700><c> are</c><00:22:59.880><c> translated</c>

00:23:00.289 --> 00:23:00.299 align:start position:0%
so all of these integers are translated
 

00:23:00.299 --> 00:23:02.450 align:start position:0%
so all of these integers are translated
into<00:23:00.539><c> 10</c><00:23:00.840><c> dimensional</c><00:23:01.260><c> vectors</c><00:23:01.620><c> inside</c><00:23:02.100><c> this</c>

00:23:02.450 --> 00:23:02.460 align:start position:0%
into 10 dimensional vectors inside this
 

00:23:02.460 --> 00:23:04.730 align:start position:0%
into 10 dimensional vectors inside this
three-dimensional<00:23:03.299><c> tensor</c><00:23:03.659><c> now</c>

00:23:04.730 --> 00:23:04.740 align:start position:0%
three-dimensional tensor now
 

00:23:04.740 --> 00:23:06.529 align:start position:0%
three-dimensional tensor now
passing<00:23:05.520><c> that</c><00:23:05.580><c> through</c><00:23:05.760><c> the</c><00:23:05.880><c> flattened</c><00:23:06.299><c> layer</c>

00:23:06.529 --> 00:23:06.539 align:start position:0%
passing that through the flattened layer
 

00:23:06.539 --> 00:23:09.409 align:start position:0%
passing that through the flattened layer
as<00:23:06.720><c> you</c><00:23:06.900><c> recall</c><00:23:07.200><c> what</c><00:23:07.860><c> this</c><00:23:08.039><c> does</c><00:23:08.220><c> is</c><00:23:08.580><c> it</c><00:23:09.000><c> views</c>

00:23:09.409 --> 00:23:09.419 align:start position:0%
as you recall what this does is it views
 

00:23:09.419 --> 00:23:12.710 align:start position:0%
as you recall what this does is it views
this<00:23:09.720><c> tensor</c><00:23:10.140><c> as</c><00:23:10.440><c> just</c><00:23:10.679><c> a</c><00:23:10.799><c> 4</c><00:23:10.980><c> by</c><00:23:11.159><c> 80</c><00:23:11.340><c> tensor</c><00:23:12.299><c> and</c>

00:23:12.710 --> 00:23:12.720 align:start position:0%
this tensor as just a 4 by 80 tensor and
 

00:23:12.720 --> 00:23:15.110 align:start position:0%
this tensor as just a 4 by 80 tensor and
what<00:23:12.900><c> that</c><00:23:13.020><c> effectively</c><00:23:13.500><c> does</c><00:23:13.860><c> is</c><00:23:14.580><c> that</c><00:23:14.820><c> all</c>

00:23:15.110 --> 00:23:15.120 align:start position:0%
what that effectively does is that all
 

00:23:15.120 --> 00:23:16.850 align:start position:0%
what that effectively does is that all
these<00:23:15.360><c> 10</c><00:23:15.600><c> dimensional</c><00:23:16.020><c> embeddings</c><00:23:16.440><c> for</c><00:23:16.679><c> all</c>

00:23:16.850 --> 00:23:16.860 align:start position:0%
these 10 dimensional embeddings for all
 

00:23:16.860 --> 00:23:18.770 align:start position:0%
these 10 dimensional embeddings for all
these<00:23:17.039><c> eight</c><00:23:17.220><c> characters</c><00:23:17.460><c> just</c><00:23:18.179><c> end</c><00:23:18.360><c> up</c><00:23:18.539><c> being</c>

00:23:18.770 --> 00:23:18.780 align:start position:0%
these eight characters just end up being
 

00:23:18.780 --> 00:23:21.529 align:start position:0%
these eight characters just end up being
stretched<00:23:19.380><c> out</c><00:23:19.500><c> into</c><00:23:19.919><c> a</c><00:23:20.280><c> long</c><00:23:20.460><c> row</c>

00:23:21.529 --> 00:23:21.539 align:start position:0%
stretched out into a long row
 

00:23:21.539 --> 00:23:22.850 align:start position:0%
stretched out into a long row
and<00:23:22.020><c> that</c><00:23:22.140><c> looks</c><00:23:22.380><c> kind</c><00:23:22.500><c> of</c><00:23:22.620><c> like</c><00:23:22.679><c> a</c>

00:23:22.850 --> 00:23:22.860 align:start position:0%
and that looks kind of like a
 

00:23:22.860 --> 00:23:25.610 align:start position:0%
and that looks kind of like a
concatenation<00:23:23.400><c> operation</c><00:23:23.820><c> basically</c><00:23:24.299><c> so</c><00:23:25.260><c> by</c>

00:23:25.610 --> 00:23:25.620 align:start position:0%
concatenation operation basically so by
 

00:23:25.620 --> 00:23:27.590 align:start position:0%
concatenation operation basically so by
viewing<00:23:25.919><c> the</c><00:23:26.039><c> tensor</c><00:23:26.400><c> differently</c><00:23:26.760><c> we</c><00:23:27.480><c> now</c>

00:23:27.590 --> 00:23:27.600 align:start position:0%
viewing the tensor differently we now
 

00:23:27.600 --> 00:23:29.930 align:start position:0%
viewing the tensor differently we now
have<00:23:27.780><c> a</c><00:23:27.960><c> four</c><00:23:28.080><c> by</c><00:23:28.260><c> eighty</c><00:23:28.679><c> and</c><00:23:29.280><c> inside</c><00:23:29.460><c> this</c><00:23:29.700><c> 80</c>

00:23:29.930 --> 00:23:29.940 align:start position:0%
have a four by eighty and inside this 80
 

00:23:29.940 --> 00:23:32.570 align:start position:0%
have a four by eighty and inside this 80
it's<00:23:30.419><c> all</c><00:23:30.659><c> the</c><00:23:30.780><c> 10</c><00:23:30.960><c> dimensional</c><00:23:31.440><c> uh</c>

00:23:32.570 --> 00:23:32.580 align:start position:0%
it's all the 10 dimensional uh
 

00:23:32.580 --> 00:23:35.330 align:start position:0%
it's all the 10 dimensional uh
vectors<00:23:33.419><c> just</c><00:23:33.840><c> uh</c><00:23:34.260><c> concatenate</c><00:23:34.919><c> next</c><00:23:35.100><c> to</c><00:23:35.220><c> each</c>

00:23:35.330 --> 00:23:35.340 align:start position:0%
vectors just uh concatenate next to each
 

00:23:35.340 --> 00:23:36.110 align:start position:0%
vectors just uh concatenate next to each
other

00:23:36.110 --> 00:23:36.120 align:start position:0%
other
 

00:23:36.120 --> 00:23:37.490 align:start position:0%
other
and<00:23:36.419><c> then</c><00:23:36.539><c> the</c><00:23:36.659><c> linear</c><00:23:36.900><c> layer</c><00:23:37.200><c> of</c><00:23:37.380><c> course</c>

00:23:37.490 --> 00:23:37.500 align:start position:0%
and then the linear layer of course
 

00:23:37.500 --> 00:23:40.610 align:start position:0%
and then the linear layer of course
takes<00:23:37.919><c> uh</c><00:23:38.400><c> 80</c><00:23:38.640><c> and</c><00:23:39.179><c> creates</c><00:23:39.659><c> 200</c><00:23:40.140><c> channels</c>

00:23:40.610 --> 00:23:40.620 align:start position:0%
takes uh 80 and creates 200 channels
 

00:23:40.620 --> 00:23:43.250 align:start position:0%
takes uh 80 and creates 200 channels
just<00:23:41.100><c> via</c><00:23:41.400><c> matrix</c><00:23:41.760><c> multiplication</c>

00:23:43.250 --> 00:23:43.260 align:start position:0%
just via matrix multiplication
 

00:23:43.260 --> 00:23:45.409 align:start position:0%
just via matrix multiplication
so<00:23:43.679><c> so</c><00:23:43.860><c> far</c><00:23:44.039><c> so</c><00:23:44.220><c> good</c><00:23:44.460><c> now</c><00:23:44.880><c> I'd</c><00:23:45.000><c> like</c><00:23:45.179><c> to</c><00:23:45.299><c> show</c>

00:23:45.409 --> 00:23:45.419 align:start position:0%
so so far so good now I'd like to show
 

00:23:45.419 --> 00:23:47.270 align:start position:0%
so so far so good now I'd like to show
you<00:23:45.480><c> something</c><00:23:45.659><c> surprising</c>

00:23:47.270 --> 00:23:47.280 align:start position:0%
you something surprising
 

00:23:47.280 --> 00:23:50.330 align:start position:0%
you something surprising
let's<00:23:48.000><c> look</c><00:23:48.240><c> at</c><00:23:48.480><c> the</c><00:23:48.900><c> insides</c><00:23:49.860><c> of</c><00:23:49.980><c> the</c><00:23:50.039><c> linear</c>

00:23:50.330 --> 00:23:50.340 align:start position:0%
let's look at the insides of the linear
 

00:23:50.340 --> 00:23:52.490 align:start position:0%
let's look at the insides of the linear
layer<00:23:50.640><c> and</c><00:23:50.760><c> remind</c><00:23:50.880><c> ourselves</c><00:23:51.299><c> how</c><00:23:51.539><c> it</c><00:23:51.659><c> works</c>

00:23:52.490 --> 00:23:52.500 align:start position:0%
layer and remind ourselves how it works
 

00:23:52.500 --> 00:23:54.110 align:start position:0%
layer and remind ourselves how it works
the<00:23:52.980><c> linear</c><00:23:53.280><c> layer</c><00:23:53.580><c> here</c><00:23:53.760><c> in</c><00:23:53.880><c> the</c><00:23:54.000><c> forward</c>

00:23:54.110 --> 00:23:54.120 align:start position:0%
the linear layer here in the forward
 

00:23:54.120 --> 00:23:56.810 align:start position:0%
the linear layer here in the forward
pass<00:23:54.419><c> takes</c><00:23:54.960><c> the</c><00:23:55.080><c> input</c><00:23:55.380><c> X</c><00:23:55.640><c> multiplies</c><00:23:56.640><c> it</c>

00:23:56.810 --> 00:23:56.820 align:start position:0%
pass takes the input X multiplies it
 

00:23:56.820 --> 00:23:58.730 align:start position:0%
pass takes the input X multiplies it
with<00:23:57.000><c> a</c><00:23:57.240><c> weight</c><00:23:57.419><c> and</c><00:23:57.840><c> then</c><00:23:57.960><c> optionally</c><00:23:58.380><c> adds</c>

00:23:58.730 --> 00:23:58.740 align:start position:0%
with a weight and then optionally adds
 

00:23:58.740 --> 00:24:00.470 align:start position:0%
with a weight and then optionally adds
bias<00:23:59.520><c> and</c><00:23:59.880><c> the</c><00:24:00.000><c> weight</c><00:24:00.120><c> here</c><00:24:00.299><c> is</c>

00:24:00.470 --> 00:24:00.480 align:start position:0%
bias and the weight here is
 

00:24:00.480 --> 00:24:02.149 align:start position:0%
bias and the weight here is
two-dimensional<00:24:01.020><c> as</c><00:24:01.260><c> defined</c><00:24:01.620><c> here</c><00:24:01.740><c> and</c><00:24:02.039><c> the</c>

00:24:02.149 --> 00:24:02.159 align:start position:0%
two-dimensional as defined here and the
 

00:24:02.159 --> 00:24:04.310 align:start position:0%
two-dimensional as defined here and the
bias<00:24:02.460><c> is</c><00:24:02.580><c> one</c><00:24:02.760><c> dimensional</c><00:24:03.240><c> here</c>

00:24:04.310 --> 00:24:04.320 align:start position:0%
bias is one dimensional here
 

00:24:04.320 --> 00:24:06.350 align:start position:0%
bias is one dimensional here
so<00:24:04.679><c> effectively</c><00:24:05.280><c> in</c><00:24:05.460><c> terms</c><00:24:05.640><c> of</c><00:24:05.700><c> the</c><00:24:06.000><c> shapes</c>

00:24:06.350 --> 00:24:06.360 align:start position:0%
so effectively in terms of the shapes
 

00:24:06.360 --> 00:24:08.210 align:start position:0%
so effectively in terms of the shapes
involved<00:24:06.900><c> what's</c><00:24:07.380><c> happening</c><00:24:07.740><c> inside</c><00:24:07.919><c> this</c>

00:24:08.210 --> 00:24:08.220 align:start position:0%
involved what's happening inside this
 

00:24:08.220 --> 00:24:10.970 align:start position:0%
involved what's happening inside this
linear<00:24:08.580><c> layer</c><00:24:08.820><c> looks</c><00:24:09.120><c> like</c><00:24:09.240><c> this</c><00:24:09.720><c> right</c><00:24:10.080><c> now</c>

00:24:10.970 --> 00:24:10.980 align:start position:0%
linear layer looks like this right now
 

00:24:10.980 --> 00:24:12.890 align:start position:0%
linear layer looks like this right now
and<00:24:11.340><c> I'm</c><00:24:11.400><c> using</c><00:24:11.640><c> random</c><00:24:11.940><c> numbers</c><00:24:12.059><c> here</c><00:24:12.419><c> but</c>

00:24:12.890 --> 00:24:12.900 align:start position:0%
and I'm using random numbers here but
 

00:24:12.900 --> 00:24:14.990 align:start position:0%
and I'm using random numbers here but
I'm<00:24:13.320><c> just</c><00:24:13.559><c> illustrating</c><00:24:13.980><c> the</c><00:24:14.580><c> shapes</c><00:24:14.880><c> and</c>

00:24:14.990 --> 00:24:15.000 align:start position:0%
I'm just illustrating the shapes and
 

00:24:15.000 --> 00:24:16.130 align:start position:0%
I'm just illustrating the shapes and
what<00:24:15.179><c> happens</c>

00:24:16.130 --> 00:24:16.140 align:start position:0%
what happens
 

00:24:16.140 --> 00:24:18.950 align:start position:0%
what happens
basically<00:24:16.559><c> a</c><00:24:16.860><c> 4</c><00:24:17.039><c> by</c><00:24:17.220><c> 80</c><00:24:17.520><c> input</c><00:24:18.419><c> comes</c><00:24:18.720><c> into</c><00:24:18.840><c> the</c>

00:24:18.950 --> 00:24:18.960 align:start position:0%
basically a 4 by 80 input comes into the
 

00:24:18.960 --> 00:24:20.810 align:start position:0%
basically a 4 by 80 input comes into the
linear<00:24:19.260><c> layer</c><00:24:19.559><c> that's</c><00:24:19.980><c> multiplied</c><00:24:20.400><c> by</c><00:24:20.580><c> this</c>

00:24:20.810 --> 00:24:20.820 align:start position:0%
linear layer that's multiplied by this
 

00:24:20.820 --> 00:24:23.149 align:start position:0%
linear layer that's multiplied by this
80<00:24:21.000><c> by</c><00:24:21.240><c> 200</c><00:24:21.480><c> weight</c><00:24:21.780><c> Matrix</c><00:24:22.200><c> inside</c><00:24:22.440><c> and</c>

00:24:23.149 --> 00:24:23.159 align:start position:0%
80 by 200 weight Matrix inside and
 

00:24:23.159 --> 00:24:25.430 align:start position:0%
80 by 200 weight Matrix inside and
there's<00:24:23.340><c> a</c><00:24:23.520><c> plus</c><00:24:23.580><c> 200</c><00:24:24.000><c> bias</c><00:24:24.419><c> and</c><00:24:25.020><c> the</c><00:24:25.140><c> shape</c><00:24:25.260><c> of</c>

00:24:25.430 --> 00:24:25.440 align:start position:0%
there's a plus 200 bias and the shape of
 

00:24:25.440 --> 00:24:26.630 align:start position:0%
there's a plus 200 bias and the shape of
the<00:24:25.559><c> whole</c><00:24:25.679><c> thing</c><00:24:25.799><c> that</c><00:24:25.980><c> comes</c><00:24:26.220><c> out</c><00:24:26.400><c> of</c><00:24:26.520><c> the</c>

00:24:26.630 --> 00:24:26.640 align:start position:0%
the whole thing that comes out of the
 

00:24:26.640 --> 00:24:28.970 align:start position:0%
the whole thing that comes out of the
linear<00:24:26.940><c> layer</c><00:24:27.240><c> is</c><00:24:27.600><c> four</c><00:24:27.960><c> by</c><00:24:28.140><c> two</c><00:24:28.380><c> hundred</c><00:24:28.559><c> as</c>

00:24:28.970 --> 00:24:28.980 align:start position:0%
linear layer is four by two hundred as
 

00:24:28.980 --> 00:24:30.529 align:start position:0%
linear layer is four by two hundred as
we<00:24:29.100><c> see</c><00:24:29.280><c> here</c>

00:24:30.529 --> 00:24:30.539 align:start position:0%
we see here
 

00:24:30.539 --> 00:24:32.810 align:start position:0%
we see here
now<00:24:31.260><c> notice</c><00:24:31.679><c> here</c><00:24:31.860><c> by</c><00:24:32.039><c> the</c><00:24:32.159><c> way</c><00:24:32.220><c> that</c><00:24:32.520><c> this</c>

00:24:32.810 --> 00:24:32.820 align:start position:0%
now notice here by the way that this
 

00:24:32.820 --> 00:24:36.350 align:start position:0%
now notice here by the way that this
here<00:24:33.240><c> will</c><00:24:33.780><c> create</c><00:24:34.020><c> a</c><00:24:34.260><c> 4x200</c><00:24:35.039><c> tensor</c><00:24:35.940><c> and</c><00:24:36.299><c> then</c>

00:24:36.350 --> 00:24:36.360 align:start position:0%
here will create a 4x200 tensor and then
 

00:24:36.360 --> 00:24:38.149 align:start position:0%
here will create a 4x200 tensor and then
plus<00:24:36.539><c> 200</c><00:24:37.020><c> there's</c><00:24:37.500><c> a</c><00:24:37.679><c> broadcasting</c>

00:24:38.149 --> 00:24:38.159 align:start position:0%
plus 200 there's a broadcasting
 

00:24:38.159 --> 00:24:41.029 align:start position:0%
plus 200 there's a broadcasting
happening<00:24:38.460><c> here</c><00:24:38.700><c> about</c><00:24:39.360><c> 4</c><00:24:39.659><c> by</c><00:24:39.900><c> 200</c><00:24:40.260><c> broadcasts</c>

00:24:41.029 --> 00:24:41.039 align:start position:0%
happening here about 4 by 200 broadcasts
 

00:24:41.039 --> 00:24:44.570 align:start position:0%
happening here about 4 by 200 broadcasts
with<00:24:41.340><c> 200</c><00:24:41.820><c> uh</c><00:24:42.480><c> so</c><00:24:42.659><c> everything</c><00:24:43.020><c> works</c><00:24:43.380><c> here</c>

00:24:44.570 --> 00:24:44.580 align:start position:0%
with 200 uh so everything works here
 

00:24:44.580 --> 00:24:46.010 align:start position:0%
with 200 uh so everything works here
so<00:24:44.940><c> now</c><00:24:45.059><c> the</c><00:24:45.299><c> surprising</c><00:24:45.600><c> thing</c><00:24:45.780><c> that</c><00:24:45.900><c> I'd</c>

00:24:46.010 --> 00:24:46.020 align:start position:0%
so now the surprising thing that I'd
 

00:24:46.020 --> 00:24:47.510 align:start position:0%
so now the surprising thing that I'd
like<00:24:46.140><c> to</c><00:24:46.260><c> show</c><00:24:46.380><c> you</c><00:24:46.559><c> that</c><00:24:46.980><c> you</c><00:24:47.100><c> may</c><00:24:47.220><c> not</c><00:24:47.340><c> expect</c>

00:24:47.510 --> 00:24:47.520 align:start position:0%
like to show you that you may not expect
 

00:24:47.520 --> 00:24:49.970 align:start position:0%
like to show you that you may not expect
is<00:24:48.299><c> that</c><00:24:48.539><c> this</c><00:24:48.840><c> input</c><00:24:49.140><c> here</c><00:24:49.320><c> that</c><00:24:49.740><c> is</c><00:24:49.860><c> being</c>

00:24:49.970 --> 00:24:49.980 align:start position:0%
is that this input here that is being
 

00:24:49.980 --> 00:24:52.010 align:start position:0%
is that this input here that is being
multiplied<00:24:50.460><c> uh</c><00:24:51.240><c> doesn't</c><00:24:51.480><c> actually</c><00:24:51.720><c> have</c><00:24:51.900><c> to</c>

00:24:52.010 --> 00:24:52.020 align:start position:0%
multiplied uh doesn't actually have to
 

00:24:52.020 --> 00:24:55.130 align:start position:0%
multiplied uh doesn't actually have to
be<00:24:52.140><c> two-dimensional</c><00:24:53.220><c> this</c><00:24:54.000><c> Matrix</c><00:24:54.780><c> multiply</c>

00:24:55.130 --> 00:24:55.140 align:start position:0%
be two-dimensional this Matrix multiply
 

00:24:55.140 --> 00:24:56.870 align:start position:0%
be two-dimensional this Matrix multiply
operator<00:24:55.440><c> in</c><00:24:55.620><c> pytorch</c><00:24:56.100><c> is</c><00:24:56.220><c> quite</c><00:24:56.460><c> powerful</c>

00:24:56.870 --> 00:24:56.880 align:start position:0%
operator in pytorch is quite powerful
 

00:24:56.880 --> 00:24:58.669 align:start position:0%
operator in pytorch is quite powerful
and<00:24:57.299><c> in</c><00:24:57.419><c> fact</c><00:24:57.539><c> you</c><00:24:57.659><c> can</c><00:24:57.840><c> actually</c><00:24:57.960><c> pass</c><00:24:58.440><c> in</c>

00:24:58.669 --> 00:24:58.679 align:start position:0%
and in fact you can actually pass in
 

00:24:58.679 --> 00:25:00.830 align:start position:0%
and in fact you can actually pass in
higher<00:24:59.039><c> dimensional</c><00:24:59.400><c> arrays</c><00:24:59.820><c> or</c><00:25:00.120><c> tensors</c><00:25:00.659><c> and</c>

00:25:00.830 --> 00:25:00.840 align:start position:0%
higher dimensional arrays or tensors and
 

00:25:00.840 --> 00:25:02.450 align:start position:0%
higher dimensional arrays or tensors and
everything<00:25:01.020><c> works</c><00:25:01.380><c> fine</c><00:25:01.500><c> so</c><00:25:02.100><c> for</c><00:25:02.220><c> example</c>

00:25:02.450 --> 00:25:02.460 align:start position:0%
everything works fine so for example
 

00:25:02.460 --> 00:25:04.370 align:start position:0%
everything works fine so for example
this<00:25:02.640><c> could</c><00:25:02.760><c> be</c><00:25:02.880><c> four</c><00:25:03.000><c> by</c><00:25:03.179><c> five</c><00:25:03.360><c> by</c><00:25:03.600><c> eighty</c><00:25:03.960><c> and</c>

00:25:04.370 --> 00:25:04.380 align:start position:0%
this could be four by five by eighty and
 

00:25:04.380 --> 00:25:06.230 align:start position:0%
this could be four by five by eighty and
the<00:25:04.500><c> result</c><00:25:04.620><c> in</c><00:25:04.860><c> that</c><00:25:04.980><c> case</c><00:25:05.159><c> will</c><00:25:05.340><c> become</c><00:25:05.640><c> four</c>

00:25:06.230 --> 00:25:06.240 align:start position:0%
the result in that case will become four
 

00:25:06.240 --> 00:25:08.149 align:start position:0%
the result in that case will become four
by<00:25:06.480><c> five</c><00:25:06.720><c> by</c><00:25:07.080><c> two</c><00:25:07.320><c> hundred</c>

00:25:08.149 --> 00:25:08.159 align:start position:0%
by five by two hundred
 

00:25:08.159 --> 00:25:09.890 align:start position:0%
by five by two hundred
you<00:25:08.640><c> can</c><00:25:08.760><c> add</c><00:25:08.880><c> as</c><00:25:09.059><c> many</c><00:25:09.179><c> dimensions</c><00:25:09.600><c> as</c><00:25:09.780><c> you</c>

00:25:09.890 --> 00:25:09.900 align:start position:0%
you can add as many dimensions as you
 

00:25:09.900 --> 00:25:11.510 align:start position:0%
you can add as many dimensions as you
like<00:25:10.020><c> on</c><00:25:10.260><c> the</c><00:25:10.380><c> left</c><00:25:10.500><c> here</c>

00:25:11.510 --> 00:25:11.520 align:start position:0%
like on the left here
 

00:25:11.520 --> 00:25:13.669 align:start position:0%
like on the left here
and<00:25:11.940><c> so</c><00:25:12.059><c> effectively</c><00:25:12.659><c> what's</c><00:25:12.840><c> happening</c><00:25:13.200><c> is</c>

00:25:13.669 --> 00:25:13.679 align:start position:0%
and so effectively what's happening is
 

00:25:13.679 --> 00:25:15.230 align:start position:0%
and so effectively what's happening is
that<00:25:13.860><c> the</c><00:25:14.039><c> matrix</c><00:25:14.340><c> multiplication</c><00:25:14.880><c> only</c>

00:25:15.230 --> 00:25:15.240 align:start position:0%
that the matrix multiplication only
 

00:25:15.240 --> 00:25:17.750 align:start position:0%
that the matrix multiplication only
works<00:25:15.659><c> on</c><00:25:15.960><c> the</c><00:25:16.140><c> last</c><00:25:16.320><c> Dimension</c><00:25:17.039><c> and</c><00:25:17.640><c> the</c>

00:25:17.750 --> 00:25:17.760 align:start position:0%
works on the last Dimension and the
 

00:25:17.760 --> 00:25:19.730 align:start position:0%
works on the last Dimension and the
dimensions<00:25:18.120><c> before</c><00:25:18.419><c> it</c><00:25:18.720><c> in</c><00:25:19.020><c> the</c><00:25:19.140><c> input</c><00:25:19.380><c> tensor</c>

00:25:19.730 --> 00:25:19.740 align:start position:0%
dimensions before it in the input tensor
 

00:25:19.740 --> 00:25:24.529 align:start position:0%
dimensions before it in the input tensor
are<00:25:20.159><c> left</c><00:25:20.340><c> unchanged</c>

00:25:24.529 --> 00:25:24.539 align:start position:0%
 
 

00:25:24.539 --> 00:25:27.710 align:start position:0%
 
so<00:25:25.020><c> that</c><00:25:25.320><c> is</c><00:25:25.500><c> basically</c><00:25:26.159><c> these</c><00:25:27.000><c> um</c><00:25:27.059><c> these</c>

00:25:27.710 --> 00:25:27.720 align:start position:0%
so that is basically these um these
 

00:25:27.720 --> 00:25:29.210 align:start position:0%
so that is basically these um these
dimensions<00:25:28.020><c> on</c><00:25:28.260><c> the</c><00:25:28.380><c> left</c><00:25:28.440><c> are</c><00:25:28.740><c> all</c><00:25:28.919><c> treated</c>

00:25:29.210 --> 00:25:29.220 align:start position:0%
dimensions on the left are all treated
 

00:25:29.220 --> 00:25:32.450 align:start position:0%
dimensions on the left are all treated
as<00:25:29.400><c> just</c><00:25:29.580><c> a</c><00:25:29.760><c> batch</c><00:25:29.940><c> Dimension</c><00:25:30.980><c> so</c><00:25:31.980><c> we</c><00:25:32.220><c> can</c><00:25:32.340><c> have</c>

00:25:32.450 --> 00:25:32.460 align:start position:0%
as just a batch Dimension so we can have
 

00:25:32.460 --> 00:25:34.730 align:start position:0%
as just a batch Dimension so we can have
multiple<00:25:32.700><c> batch</c><00:25:32.940><c> dimensions</c><00:25:33.539><c> and</c><00:25:34.260><c> then</c><00:25:34.440><c> in</c>

00:25:34.730 --> 00:25:34.740 align:start position:0%
multiple batch dimensions and then in
 

00:25:34.740 --> 00:25:36.649 align:start position:0%
multiple batch dimensions and then in
parallel<00:25:35.159><c> over</c><00:25:35.400><c> all</c><00:25:35.580><c> those</c><00:25:35.760><c> Dimensions</c><00:25:36.240><c> we</c>

00:25:36.649 --> 00:25:36.659 align:start position:0%
parallel over all those Dimensions we
 

00:25:36.659 --> 00:25:38.029 align:start position:0%
parallel over all those Dimensions we
are<00:25:36.779><c> doing</c><00:25:36.900><c> the</c><00:25:37.080><c> matrix</c><00:25:37.320><c> multiplication</c><00:25:37.799><c> on</c>

00:25:38.029 --> 00:25:38.039 align:start position:0%
are doing the matrix multiplication on
 

00:25:38.039 --> 00:25:39.350 align:start position:0%
are doing the matrix multiplication on
the<00:25:38.159><c> last</c><00:25:38.279><c> dimension</c>

00:25:39.350 --> 00:25:39.360 align:start position:0%
the last dimension
 

00:25:39.360 --> 00:25:41.870 align:start position:0%
the last dimension
so<00:25:40.020><c> this</c><00:25:40.320><c> is</c><00:25:40.440><c> quite</c><00:25:40.559><c> convenient</c><00:25:41.039><c> because</c><00:25:41.400><c> we</c>

00:25:41.870 --> 00:25:41.880 align:start position:0%
so this is quite convenient because we
 

00:25:41.880 --> 00:25:44.210 align:start position:0%
so this is quite convenient because we
can<00:25:42.059><c> use</c><00:25:42.480><c> that</c><00:25:42.720><c> in</c><00:25:43.080><c> our</c><00:25:43.200><c> Network</c><00:25:43.380><c> now</c>

00:25:44.210 --> 00:25:44.220 align:start position:0%
can use that in our Network now
 

00:25:44.220 --> 00:25:46.250 align:start position:0%
can use that in our Network now
because<00:25:44.640><c> remember</c><00:25:44.880><c> that</c><00:25:45.360><c> we</c><00:25:45.900><c> have</c><00:25:46.020><c> these</c>

00:25:46.250 --> 00:25:46.260 align:start position:0%
because remember that we have these
 

00:25:46.260 --> 00:25:49.070 align:start position:0%
because remember that we have these
eight<00:25:46.380><c> characters</c><00:25:46.620><c> coming</c><00:25:46.980><c> in</c>

00:25:49.070 --> 00:25:49.080 align:start position:0%
eight characters coming in
 

00:25:49.080 --> 00:25:51.830 align:start position:0%
eight characters coming in
and<00:25:49.440><c> we</c><00:25:49.679><c> don't</c><00:25:49.799><c> want</c><00:25:49.980><c> to</c><00:25:50.100><c> now</c><00:25:50.340><c> uh</c><00:25:51.000><c> flatten</c><00:25:51.659><c> all</c>

00:25:51.830 --> 00:25:51.840 align:start position:0%
and we don't want to now uh flatten all
 

00:25:51.840 --> 00:25:53.750 align:start position:0%
and we don't want to now uh flatten all
of<00:25:51.960><c> it</c><00:25:52.080><c> out</c><00:25:52.200><c> into</c><00:25:52.500><c> a</c><00:25:52.740><c> large</c><00:25:52.919><c> eight-dimensional</c>

00:25:53.750 --> 00:25:53.760 align:start position:0%
of it out into a large eight-dimensional
 

00:25:53.760 --> 00:25:54.950 align:start position:0%
of it out into a large eight-dimensional
vector

00:25:54.950 --> 00:25:54.960 align:start position:0%
vector
 

00:25:54.960 --> 00:25:57.230 align:start position:0%
vector
because<00:25:55.320><c> we</c><00:25:55.620><c> don't</c><00:25:55.740><c> want</c><00:25:55.919><c> to</c><00:25:56.100><c> Matrix</c><00:25:56.760><c> multiply</c>

00:25:57.230 --> 00:25:57.240 align:start position:0%
because we don't want to Matrix multiply
 

00:25:57.240 --> 00:25:59.450 align:start position:0%
because we don't want to Matrix multiply
80.

00:25:59.450 --> 00:25:59.460 align:start position:0%
80.
 

00:25:59.460 --> 00:26:01.250 align:start position:0%
80.
into<00:26:00.000><c> a</c><00:26:00.299><c> weight</c><00:26:00.419><c> Matrix</c><00:26:00.779><c> multiply</c>

00:26:01.250 --> 00:26:01.260 align:start position:0%
into a weight Matrix multiply
 

00:26:01.260 --> 00:26:03.710 align:start position:0%
into a weight Matrix multiply
immediately<00:26:01.799><c> instead</c><00:26:02.760><c> we</c><00:26:02.940><c> want</c><00:26:03.120><c> to</c><00:26:03.240><c> group</c>

00:26:03.710 --> 00:26:03.720 align:start position:0%
immediately instead we want to group
 

00:26:03.720 --> 00:26:04.730 align:start position:0%
immediately instead we want to group
these

00:26:04.730 --> 00:26:04.740 align:start position:0%
these
 

00:26:04.740 --> 00:26:06.890 align:start position:0%
these
like<00:26:05.100><c> this</c>

00:26:06.890 --> 00:26:06.900 align:start position:0%
like this
 

00:26:06.900 --> 00:26:09.649 align:start position:0%
like this
so<00:26:07.440><c> every</c><00:26:07.679><c> consecutive</c><00:26:08.220><c> two</c><00:26:08.460><c> elements</c>

00:26:09.649 --> 00:26:09.659 align:start position:0%
so every consecutive two elements
 

00:26:09.659 --> 00:26:11.330 align:start position:0%
so every consecutive two elements
one<00:26:10.260><c> two</c><00:26:10.440><c> and</c><00:26:10.620><c> three</c><00:26:10.740><c> and</c><00:26:10.860><c> four</c><00:26:10.980><c> and</c><00:26:11.100><c> five</c><00:26:11.220><c> and</c>

00:26:11.330 --> 00:26:11.340 align:start position:0%
one two and three and four and five and
 

00:26:11.340 --> 00:26:12.830 align:start position:0%
one two and three and four and five and
six<00:26:11.460><c> and</c><00:26:11.640><c> seven</c><00:26:11.820><c> and</c><00:26:11.940><c> eight</c><00:26:12.120><c> all</c><00:26:12.539><c> of</c><00:26:12.659><c> these</c>

00:26:12.830 --> 00:26:12.840 align:start position:0%
six and seven and eight all of these
 

00:26:12.840 --> 00:26:14.570 align:start position:0%
six and seven and eight all of these
should<00:26:12.960><c> be</c><00:26:13.140><c> now</c>

00:26:14.570 --> 00:26:14.580 align:start position:0%
should be now
 

00:26:14.580 --> 00:26:17.149 align:start position:0%
should be now
basically<00:26:15.299><c> flattened</c><00:26:15.779><c> out</c><00:26:15.900><c> and</c><00:26:16.740><c> multiplied</c>

00:26:17.149 --> 00:26:17.159 align:start position:0%
basically flattened out and multiplied
 

00:26:17.159 --> 00:26:19.310 align:start position:0%
basically flattened out and multiplied
by<00:26:17.340><c> weight</c><00:26:17.580><c> Matrix</c><00:26:18.000><c> but</c><00:26:18.539><c> all</c><00:26:18.779><c> of</c><00:26:18.900><c> these</c><00:26:19.140><c> four</c>

00:26:19.310 --> 00:26:19.320 align:start position:0%
by weight Matrix but all of these four
 

00:26:19.320 --> 00:26:21.470 align:start position:0%
by weight Matrix but all of these four
groups<00:26:19.799><c> here</c><00:26:20.039><c> we'd</c><00:26:20.820><c> like</c><00:26:20.940><c> to</c><00:26:21.059><c> process</c><00:26:21.240><c> in</c>

00:26:21.470 --> 00:26:21.480 align:start position:0%
groups here we'd like to process in
 

00:26:21.480 --> 00:26:23.630 align:start position:0%
groups here we'd like to process in
parallel<00:26:21.900><c> so</c><00:26:22.380><c> it's</c><00:26:22.440><c> kind</c><00:26:22.620><c> of</c><00:26:22.740><c> like</c><00:26:22.860><c> a</c><00:26:23.220><c> batch</c>

00:26:23.630 --> 00:26:23.640 align:start position:0%
parallel so it's kind of like a batch
 

00:26:23.640 --> 00:26:25.850 align:start position:0%
parallel so it's kind of like a batch
Dimension<00:26:24.299><c> that</c><00:26:24.600><c> we</c><00:26:24.779><c> can</c><00:26:24.840><c> introduce</c>

00:26:25.850 --> 00:26:25.860 align:start position:0%
Dimension that we can introduce
 

00:26:25.860 --> 00:26:28.789 align:start position:0%
Dimension that we can introduce
and<00:26:26.220><c> then</c><00:26:26.340><c> we</c><00:26:26.520><c> can</c><00:26:26.640><c> in</c><00:26:26.960><c> parallel</c><00:26:27.960><c> basically</c>

00:26:28.789 --> 00:26:28.799 align:start position:0%
and then we can in parallel basically
 

00:26:28.799 --> 00:26:32.990 align:start position:0%
and then we can in parallel basically
process<00:26:29.159><c> all</c><00:26:30.059><c> of</c><00:26:30.240><c> these</c><00:26:30.539><c> uh</c><00:26:31.020><c> bigram</c><00:26:31.679><c> groups</c><00:26:32.159><c> in</c>

00:26:32.990 --> 00:26:33.000 align:start position:0%
process all of these uh bigram groups in
 

00:26:33.000 --> 00:26:34.909 align:start position:0%
process all of these uh bigram groups in
the<00:26:33.419><c> four</c><00:26:33.600><c> batch</c><00:26:34.020><c> dimensions</c><00:26:34.500><c> of</c><00:26:34.740><c> an</c>

00:26:34.909 --> 00:26:34.919 align:start position:0%
the four batch dimensions of an
 

00:26:34.919 --> 00:26:37.190 align:start position:0%
the four batch dimensions of an
individual<00:26:35.279><c> example</c><00:26:35.760><c> and</c><00:26:36.419><c> also</c><00:26:36.659><c> over</c><00:26:36.840><c> the</c>

00:26:37.190 --> 00:26:37.200 align:start position:0%
individual example and also over the
 

00:26:37.200 --> 00:26:39.529 align:start position:0%
individual example and also over the
actual<00:26:37.440><c> batch</c><00:26:37.620><c> dimension</c><00:26:38.159><c> of</c><00:26:38.580><c> the</c><00:26:38.880><c> you</c><00:26:39.419><c> know</c>

00:26:39.529 --> 00:26:39.539 align:start position:0%
actual batch dimension of the you know
 

00:26:39.539 --> 00:26:42.049 align:start position:0%
actual batch dimension of the you know
four<00:26:39.720><c> examples</c><00:26:40.140><c> in</c><00:26:40.500><c> our</c><00:26:40.620><c> example</c><00:26:40.980><c> here</c><00:26:41.640><c> so</c>

00:26:42.049 --> 00:26:42.059 align:start position:0%
four examples in our example here so
 

00:26:42.059 --> 00:26:43.970 align:start position:0%
four examples in our example here so
let's<00:26:42.179><c> see</c><00:26:42.360><c> how</c><00:26:42.539><c> that</c><00:26:42.659><c> works</c><00:26:43.020><c> effectively</c>

00:26:43.970 --> 00:26:43.980 align:start position:0%
let's see how that works effectively
 

00:26:43.980 --> 00:26:46.850 align:start position:0%
let's see how that works effectively
what<00:26:44.159><c> we</c><00:26:44.340><c> want</c><00:26:44.460><c> is</c><00:26:44.940><c> right</c><00:26:45.419><c> now</c><00:26:45.600><c> we</c><00:26:46.200><c> take</c><00:26:46.320><c> a</c><00:26:46.559><c> 4</c><00:26:46.679><c> by</c>

00:26:46.850 --> 00:26:46.860 align:start position:0%
what we want is right now we take a 4 by
 

00:26:46.860 --> 00:26:47.630 align:start position:0%
what we want is right now we take a 4 by
80

00:26:47.630 --> 00:26:47.640 align:start position:0%
80
 

00:26:47.640 --> 00:26:50.690 align:start position:0%
80
and<00:26:48.120><c> multiply</c><00:26:48.480><c> it</c><00:26:48.600><c> by</c><00:26:48.720><c> 80</c><00:26:48.840><c> by</c><00:26:49.080><c> 200</c>

00:26:50.690 --> 00:26:50.700 align:start position:0%
and multiply it by 80 by 200
 

00:26:50.700 --> 00:26:52.250 align:start position:0%
and multiply it by 80 by 200
to<00:26:51.000><c> in</c><00:26:51.299><c> the</c><00:26:51.419><c> linear</c><00:26:51.659><c> layer</c><00:26:51.900><c> this</c><00:26:52.080><c> is</c><00:26:52.140><c> what</c>

00:26:52.250 --> 00:26:52.260 align:start position:0%
to in the linear layer this is what
 

00:26:52.260 --> 00:26:53.750 align:start position:0%
to in the linear layer this is what
happens

00:26:53.750 --> 00:26:53.760 align:start position:0%
happens
 

00:26:53.760 --> 00:26:56.149 align:start position:0%
happens
but<00:26:54.120><c> instead</c><00:26:54.419><c> what</c><00:26:54.539><c> we</c><00:26:54.720><c> want</c><00:26:54.900><c> is</c><00:26:55.320><c> we</c><00:26:56.100><c> don't</c>

00:26:56.149 --> 00:26:56.159 align:start position:0%
but instead what we want is we don't
 

00:26:56.159 --> 00:26:58.610 align:start position:0%
but instead what we want is we don't
want<00:26:56.340><c> 80</c><00:26:56.580><c> characters</c><00:26:56.940><c> or</c><00:26:57.480><c> 80</c><00:26:57.720><c> numbers</c><00:26:58.020><c> to</c><00:26:58.440><c> come</c>

00:26:58.610 --> 00:26:58.620 align:start position:0%
want 80 characters or 80 numbers to come
 

00:26:58.620 --> 00:27:00.890 align:start position:0%
want 80 characters or 80 numbers to come
in<00:26:58.740><c> we</c><00:26:59.460><c> only</c><00:26:59.520><c> want</c><00:26:59.760><c> two</c><00:27:00.179><c> characters</c><00:27:00.360><c> to</c><00:27:00.720><c> come</c>

00:27:00.890 --> 00:27:00.900 align:start position:0%
in we only want two characters to come
 

00:27:00.900 --> 00:27:02.630 align:start position:0%
in we only want two characters to come
in<00:27:01.020><c> on</c><00:27:01.320><c> the</c><00:27:01.440><c> very</c><00:27:01.500><c> first</c><00:27:01.679><c> layer</c><00:27:01.980><c> and</c><00:27:02.279><c> those</c><00:27:02.460><c> two</c>

00:27:02.630 --> 00:27:02.640 align:start position:0%
in on the very first layer and those two
 

00:27:02.640 --> 00:27:04.789 align:start position:0%
in on the very first layer and those two
characters<00:27:02.880><c> should</c><00:27:03.360><c> be</c><00:27:03.480><c> fused</c>

00:27:04.789 --> 00:27:04.799 align:start position:0%
characters should be fused
 

00:27:04.799 --> 00:27:07.490 align:start position:0%
characters should be fused
so<00:27:05.400><c> in</c><00:27:05.760><c> other</c><00:27:05.880><c> words</c><00:27:06.000><c> we</c><00:27:06.240><c> just</c><00:27:06.360><c> want</c><00:27:06.600><c> 20</c><00:27:07.020><c> to</c>

00:27:07.490 --> 00:27:07.500 align:start position:0%
so in other words we just want 20 to
 

00:27:07.500 --> 00:27:11.029 align:start position:0%
so in other words we just want 20 to
come<00:27:07.679><c> in</c><00:27:07.860><c> right</c><00:27:08.419><c> 20</c><00:27:09.419><c> numbers</c><00:27:09.779><c> would</c><00:27:10.080><c> come</c><00:27:10.260><c> in</c>

00:27:11.029 --> 00:27:11.039 align:start position:0%
come in right 20 numbers would come in
 

00:27:11.039 --> 00:27:13.430 align:start position:0%
come in right 20 numbers would come in
and<00:27:11.640><c> here</c><00:27:11.820><c> we</c><00:27:12.059><c> don't</c><00:27:12.120><c> want</c><00:27:12.240><c> a</c><00:27:12.419><c> 4</c><00:27:12.539><c> by</c><00:27:12.720><c> 80</c><00:27:12.960><c> to</c><00:27:13.320><c> feed</c>

00:27:13.430 --> 00:27:13.440 align:start position:0%
and here we don't want a 4 by 80 to feed
 

00:27:13.440 --> 00:27:15.409 align:start position:0%
and here we don't want a 4 by 80 to feed
into<00:27:13.679><c> the</c><00:27:13.860><c> linear</c><00:27:14.159><c> layer</c><00:27:14.460><c> we</c><00:27:14.880><c> actually</c><00:27:15.000><c> want</c>

00:27:15.409 --> 00:27:15.419 align:start position:0%
into the linear layer we actually want
 

00:27:15.419 --> 00:27:17.750 align:start position:0%
into the linear layer we actually want
these<00:27:15.900><c> groups</c><00:27:16.260><c> of</c><00:27:16.440><c> two</c><00:27:16.679><c> to</c><00:27:16.980><c> feed</c><00:27:17.159><c> in</c><00:27:17.400><c> so</c>

00:27:17.750 --> 00:27:17.760 align:start position:0%
these groups of two to feed in so
 

00:27:17.760 --> 00:27:19.250 align:start position:0%
these groups of two to feed in so
instead<00:27:18.059><c> of</c><00:27:18.179><c> four</c><00:27:18.240><c> by</c><00:27:18.419><c> eighty</c><00:27:18.779><c> we</c><00:27:19.020><c> want</c><00:27:19.140><c> this</c>

00:27:19.250 --> 00:27:19.260 align:start position:0%
instead of four by eighty we want this
 

00:27:19.260 --> 00:27:23.390 align:start position:0%
instead of four by eighty we want this
to<00:27:19.380><c> be</c><00:27:19.500><c> a</c><00:27:19.740><c> 4</c><00:27:20.039><c> by</c><00:27:20.520><c> 4</c><00:27:20.880><c> by</c><00:27:21.480><c> 20.</c>

00:27:23.390 --> 00:27:23.400 align:start position:0%
to be a 4 by 4 by 20.
 

00:27:23.400 --> 00:27:26.990 align:start position:0%
to be a 4 by 4 by 20.
so<00:27:23.940><c> these</c><00:27:24.299><c> are</c><00:27:24.360><c> the</c><00:27:24.480><c> four</c><00:27:24.720><c> groups</c><00:27:25.200><c> of</c><00:27:25.980><c> two</c><00:27:26.580><c> and</c>

00:27:26.990 --> 00:27:27.000 align:start position:0%
so these are the four groups of two and
 

00:27:27.000 --> 00:27:28.490 align:start position:0%
so these are the four groups of two and
each<00:27:27.299><c> one</c><00:27:27.419><c> of</c><00:27:27.539><c> them</c><00:27:27.659><c> is</c><00:27:27.840><c> ten</c><00:27:28.020><c> dimensional</c>

00:27:28.490 --> 00:27:28.500 align:start position:0%
each one of them is ten dimensional
 

00:27:28.500 --> 00:27:29.570 align:start position:0%
each one of them is ten dimensional
vector

00:27:29.570 --> 00:27:29.580 align:start position:0%
vector
 

00:27:29.580 --> 00:27:31.549 align:start position:0%
vector
so<00:27:30.059><c> what</c><00:27:30.240><c> we</c><00:27:30.419><c> want</c><00:27:30.539><c> is</c><00:27:30.779><c> now</c><00:27:30.960><c> is</c><00:27:31.140><c> we</c><00:27:31.320><c> need</c><00:27:31.440><c> to</c>

00:27:31.549 --> 00:27:31.559 align:start position:0%
so what we want is now is we need to
 

00:27:31.559 --> 00:27:33.169 align:start position:0%
so what we want is now is we need to
change<00:27:31.679><c> the</c><00:27:31.919><c> flattened</c><00:27:32.340><c> layer</c><00:27:32.640><c> so</c><00:27:32.940><c> it</c><00:27:33.059><c> doesn't</c>

00:27:33.169 --> 00:27:33.179 align:start position:0%
change the flattened layer so it doesn't
 

00:27:33.179 --> 00:27:35.390 align:start position:0%
change the flattened layer so it doesn't
output<00:27:33.539><c> a</c><00:27:33.720><c> four</c><00:27:33.779><c> by</c><00:27:33.960><c> eighty</c><00:27:34.380><c> but</c><00:27:34.799><c> it</c><00:27:34.919><c> outputs</c><00:27:35.279><c> a</c>

00:27:35.390 --> 00:27:35.400 align:start position:0%
output a four by eighty but it outputs a
 

00:27:35.400 --> 00:27:38.090 align:start position:0%
output a four by eighty but it outputs a
four<00:27:35.520><c> by</c><00:27:35.700><c> four</c><00:27:35.940><c> by</c><00:27:36.120><c> Twenty</c><00:27:36.600><c> where</c><00:27:37.500><c> basically</c>

00:27:38.090 --> 00:27:38.100 align:start position:0%
four by four by Twenty where basically
 

00:27:38.100 --> 00:27:39.830 align:start position:0%
four by four by Twenty where basically
these<00:27:39.120><c> um</c>

00:27:39.830 --> 00:27:39.840 align:start position:0%
these um
 

00:27:39.840 --> 00:27:43.549 align:start position:0%
these um
every<00:27:40.500><c> two</c><00:27:40.740><c> consecutive</c><00:27:41.340><c> characters</c><00:27:42.140><c> are</c><00:27:43.140><c> uh</c>

00:27:43.549 --> 00:27:43.559 align:start position:0%
every two consecutive characters are uh
 

00:27:43.559 --> 00:27:46.490 align:start position:0%
every two consecutive characters are uh
packed<00:27:44.039><c> in</c><00:27:44.220><c> on</c><00:27:44.760><c> the</c><00:27:44.880><c> very</c><00:27:45.000><c> last</c><00:27:45.120><c> Dimension</c><00:27:45.659><c> and</c>

00:27:46.490 --> 00:27:46.500 align:start position:0%
packed in on the very last Dimension and
 

00:27:46.500 --> 00:27:48.110 align:start position:0%
packed in on the very last Dimension and
then<00:27:46.620><c> these</c><00:27:47.039><c> four</c><00:27:47.340><c> is</c><00:27:47.700><c> the</c><00:27:47.820><c> first</c><00:27:47.940><c> batch</c>

00:27:48.110 --> 00:27:48.120 align:start position:0%
then these four is the first batch
 

00:27:48.120 --> 00:27:50.390 align:start position:0%
then these four is the first batch
Dimension<00:27:48.659><c> and</c><00:27:49.260><c> this</c><00:27:49.440><c> four</c><00:27:49.620><c> is</c><00:27:49.919><c> the</c><00:27:50.220><c> second</c>

00:27:50.390 --> 00:27:50.400 align:start position:0%
Dimension and this four is the second
 

00:27:50.400 --> 00:27:52.610 align:start position:0%
Dimension and this four is the second
batch<00:27:50.700><c> Dimension</c><00:27:51.179><c> referring</c><00:27:51.960><c> to</c><00:27:52.140><c> the</c><00:27:52.380><c> four</c>

00:27:52.610 --> 00:27:52.620 align:start position:0%
batch Dimension referring to the four
 

00:27:52.620 --> 00:27:54.230 align:start position:0%
batch Dimension referring to the four
groups<00:27:53.100><c> inside</c><00:27:53.460><c> every</c><00:27:53.760><c> one</c><00:27:53.940><c> of</c><00:27:54.000><c> these</c>

00:27:54.230 --> 00:27:54.240 align:start position:0%
groups inside every one of these
 

00:27:54.240 --> 00:27:55.310 align:start position:0%
groups inside every one of these
examples

00:27:55.310 --> 00:27:55.320 align:start position:0%
examples
 

00:27:55.320 --> 00:27:57.590 align:start position:0%
examples
and<00:27:56.039><c> then</c><00:27:56.220><c> this</c><00:27:56.820><c> will</c><00:27:56.940><c> just</c><00:27:57.120><c> multiply</c><00:27:57.360><c> like</c>

00:27:57.590 --> 00:27:57.600 align:start position:0%
and then this will just multiply like
 

00:27:57.600 --> 00:27:59.510 align:start position:0%
and then this will just multiply like
this<00:27:57.779><c> so</c><00:27:58.080><c> this</c><00:27:58.380><c> is</c><00:27:58.500><c> what</c><00:27:58.679><c> we</c><00:27:58.860><c> want</c><00:27:59.039><c> to</c><00:27:59.159><c> get</c><00:27:59.279><c> to</c>

00:27:59.510 --> 00:27:59.520 align:start position:0%
this so this is what we want to get to
 

00:27:59.520 --> 00:28:01.070 align:start position:0%
this so this is what we want to get to
so<00:28:00.240><c> we're</c><00:28:00.419><c> going</c><00:28:00.539><c> to</c><00:28:00.600><c> have</c><00:28:00.659><c> to</c><00:28:00.779><c> change</c><00:28:00.900><c> the</c>

00:28:01.070 --> 00:28:01.080 align:start position:0%
so we're going to have to change the
 

00:28:01.080 --> 00:28:02.930 align:start position:0%
so we're going to have to change the
linear<00:28:01.380><c> layer</c><00:28:01.620><c> in</c><00:28:01.799><c> terms</c><00:28:01.980><c> of</c><00:28:02.100><c> how</c><00:28:02.340><c> many</c><00:28:02.460><c> inputs</c>

00:28:02.930 --> 00:28:02.940 align:start position:0%
linear layer in terms of how many inputs
 

00:28:02.940 --> 00:28:05.750 align:start position:0%
linear layer in terms of how many inputs
it<00:28:03.059><c> expects</c><00:28:03.480><c> it</c><00:28:03.720><c> shouldn't</c><00:28:04.020><c> expect</c><00:28:04.460><c> 80</c><00:28:05.460><c> it</c>

00:28:05.750 --> 00:28:05.760 align:start position:0%
it expects it shouldn't expect 80 it
 

00:28:05.760 --> 00:28:07.730 align:start position:0%
it expects it shouldn't expect 80 it
should<00:28:05.880><c> just</c><00:28:06.059><c> expect</c><00:28:06.179><c> 20</c><00:28:06.480><c> numbers</c><00:28:06.779><c> and</c><00:28:07.559><c> we</c>

00:28:07.730 --> 00:28:07.740 align:start position:0%
should just expect 20 numbers and we
 

00:28:07.740 --> 00:28:09.470 align:start position:0%
should just expect 20 numbers and we
have<00:28:07.860><c> to</c><00:28:07.980><c> change</c><00:28:08.100><c> our</c><00:28:08.279><c> flattened</c><00:28:08.700><c> layer</c><00:28:08.940><c> so</c><00:28:09.360><c> it</c>

00:28:09.470 --> 00:28:09.480 align:start position:0%
have to change our flattened layer so it
 

00:28:09.480 --> 00:28:11.390 align:start position:0%
have to change our flattened layer so it
doesn't<00:28:09.600><c> just</c><00:28:09.900><c> fully</c><00:28:10.500><c> flatten</c><00:28:10.860><c> out</c><00:28:11.039><c> this</c>

00:28:11.390 --> 00:28:11.400 align:start position:0%
doesn't just fully flatten out this
 

00:28:11.400 --> 00:28:14.330 align:start position:0%
doesn't just fully flatten out this
entire<00:28:11.640><c> example</c><00:28:12.120><c> it</c><00:28:12.960><c> needs</c><00:28:13.140><c> to</c><00:28:13.260><c> create</c><00:28:13.380><c> a</c><00:28:13.740><c> 4x4</c>

00:28:14.330 --> 00:28:14.340 align:start position:0%
entire example it needs to create a 4x4
 

00:28:14.340 --> 00:28:17.630 align:start position:0%
entire example it needs to create a 4x4
by<00:28:15.000><c> 20</c><00:28:15.480><c> instead</c><00:28:15.960><c> of</c><00:28:16.020><c> four</c><00:28:16.260><c> by</c><00:28:16.440><c> eighty</c><00:28:16.919><c> so</c><00:28:17.460><c> let's</c>

00:28:17.630 --> 00:28:17.640 align:start position:0%
by 20 instead of four by eighty so let's
 

00:28:17.640 --> 00:28:19.370 align:start position:0%
by 20 instead of four by eighty so let's
see<00:28:17.760><c> how</c><00:28:17.880><c> this</c><00:28:18.000><c> could</c><00:28:18.120><c> be</c><00:28:18.240><c> implemented</c>

00:28:19.370 --> 00:28:19.380 align:start position:0%
see how this could be implemented
 

00:28:19.380 --> 00:28:21.289 align:start position:0%
see how this could be implemented
basically<00:28:19.860><c> right</c><00:28:20.100><c> now</c><00:28:20.279><c> we</c><00:28:20.520><c> have</c><00:28:20.700><c> an</c><00:28:21.059><c> input</c>

00:28:21.289 --> 00:28:21.299 align:start position:0%
basically right now we have an input
 

00:28:21.299 --> 00:28:23.630 align:start position:0%
basically right now we have an input
that<00:28:21.539><c> is</c><00:28:21.659><c> a</c><00:28:21.779><c> four</c><00:28:21.900><c> by</c><00:28:22.140><c> eight</c><00:28:22.380><c> by</c><00:28:22.559><c> ten</c><00:28:22.919><c> that</c>

00:28:23.630 --> 00:28:23.640 align:start position:0%
that is a four by eight by ten that
 

00:28:23.640 --> 00:28:25.669 align:start position:0%
that is a four by eight by ten that
feeds<00:28:23.940><c> into</c><00:28:24.120><c> the</c><00:28:24.299><c> flattened</c><00:28:24.720><c> layer</c><00:28:24.960><c> and</c>

00:28:25.669 --> 00:28:25.679 align:start position:0%
feeds into the flattened layer and
 

00:28:25.679 --> 00:28:27.169 align:start position:0%
feeds into the flattened layer and
currently<00:28:26.039><c> the</c><00:28:26.400><c> flattened</c><00:28:26.820><c> layer</c><00:28:27.059><c> just</c>

00:28:27.169 --> 00:28:27.179 align:start position:0%
currently the flattened layer just
 

00:28:27.179 --> 00:28:29.630 align:start position:0%
currently the flattened layer just
stretches<00:28:27.900><c> it</c><00:28:28.140><c> out</c><00:28:28.260><c> so</c><00:28:28.980><c> if</c><00:28:29.039><c> you</c><00:28:29.220><c> remember</c><00:28:29.340><c> the</c>

00:28:29.630 --> 00:28:29.640 align:start position:0%
stretches it out so if you remember the
 

00:28:29.640 --> 00:28:31.490 align:start position:0%
stretches it out so if you remember the
implementation<00:28:30.059><c> of</c><00:28:30.240><c> flatten</c>

00:28:31.490 --> 00:28:31.500 align:start position:0%
implementation of flatten
 

00:28:31.500 --> 00:28:34.130 align:start position:0%
implementation of flatten
it<00:28:32.220><c> takes</c><00:28:32.460><c> RX</c><00:28:32.880><c> and</c><00:28:33.240><c> it</c><00:28:33.419><c> just</c><00:28:33.539><c> views</c><00:28:33.840><c> it</c><00:28:33.960><c> as</c>

00:28:34.130 --> 00:28:34.140 align:start position:0%
it takes RX and it just views it as
 

00:28:34.140 --> 00:28:35.810 align:start position:0%
it takes RX and it just views it as
whatever<00:28:34.380><c> the</c><00:28:34.620><c> batch</c><00:28:34.740><c> Dimension</c><00:28:35.220><c> is</c><00:28:35.400><c> and</c><00:28:35.700><c> then</c>

00:28:35.810 --> 00:28:35.820 align:start position:0%
whatever the batch Dimension is and then
 

00:28:35.820 --> 00:28:37.130 align:start position:0%
whatever the batch Dimension is and then
negative<00:28:36.179><c> one</c>

00:28:37.130 --> 00:28:37.140 align:start position:0%
negative one
 

00:28:37.140 --> 00:28:39.529 align:start position:0%
negative one
so<00:28:37.620><c> effectively</c><00:28:38.100><c> what</c><00:28:38.279><c> it</c><00:28:38.400><c> does</c><00:28:38.520><c> right</c><00:28:38.760><c> now</c><00:28:38.940><c> is</c>

00:28:39.529 --> 00:28:39.539 align:start position:0%
so effectively what it does right now is
 

00:28:39.539 --> 00:28:42.529 align:start position:0%
so effectively what it does right now is
it<00:28:39.720><c> does</c><00:28:39.900><c> e</c><00:28:40.080><c> dot</c><00:28:40.440><c> view</c><00:28:40.559><c> of</c><00:28:41.039><c> 4</c><00:28:41.460><c> negative</c><00:28:41.940><c> one</c><00:28:42.120><c> and</c>

00:28:42.529 --> 00:28:42.539 align:start position:0%
it does e dot view of 4 negative one and
 

00:28:42.539 --> 00:28:45.769 align:start position:0%
it does e dot view of 4 negative one and
the<00:28:42.720><c> shape</c><00:28:42.900><c> of</c><00:28:43.020><c> this</c><00:28:43.140><c> of</c><00:28:43.320><c> course</c><00:28:43.440><c> is</c><00:28:43.620><c> 4</c><00:28:43.919><c> by</c><00:28:44.100><c> 80.</c>

00:28:45.769 --> 00:28:45.779 align:start position:0%
the shape of this of course is 4 by 80.
 

00:28:45.779 --> 00:28:47.990 align:start position:0%
the shape of this of course is 4 by 80.
so<00:28:46.140><c> that's</c><00:28:46.320><c> what</c><00:28:46.559><c> currently</c><00:28:47.159><c> happens</c><00:28:47.460><c> and</c><00:28:47.820><c> we</c>

00:28:47.990 --> 00:28:48.000 align:start position:0%
so that's what currently happens and we
 

00:28:48.000 --> 00:28:49.850 align:start position:0%
so that's what currently happens and we
instead<00:28:48.480><c> want</c><00:28:48.840><c> this</c><00:28:48.960><c> to</c><00:28:49.140><c> be</c><00:28:49.200><c> a</c><00:28:49.380><c> four</c><00:28:49.500><c> by</c><00:28:49.679><c> four</c>

00:28:49.850 --> 00:28:49.860 align:start position:0%
instead want this to be a four by four
 

00:28:49.860 --> 00:28:51.710 align:start position:0%
instead want this to be a four by four
by<00:28:50.039><c> Twenty</c><00:28:50.520><c> where</c><00:28:51.000><c> these</c><00:28:51.299><c> consecutive</c>

00:28:51.710 --> 00:28:51.720 align:start position:0%
by Twenty where these consecutive
 

00:28:51.720 --> 00:28:54.169 align:start position:0%
by Twenty where these consecutive
ten-dimensional<00:28:52.320><c> vectors</c><00:28:52.620><c> get</c><00:28:52.860><c> concatenated</c>

00:28:54.169 --> 00:28:54.179 align:start position:0%
ten-dimensional vectors get concatenated
 

00:28:54.179 --> 00:28:57.590 align:start position:0%
ten-dimensional vectors get concatenated
so<00:28:54.779><c> you</c><00:28:55.500><c> know</c><00:28:55.620><c> how</c><00:28:55.799><c> in</c><00:28:56.039><c> Python</c><00:28:56.520><c> you</c><00:28:56.940><c> can</c><00:28:57.059><c> take</c><00:28:57.240><c> a</c>

00:28:57.590 --> 00:28:57.600 align:start position:0%
so you know how in Python you can take a
 

00:28:57.600 --> 00:29:00.049 align:start position:0%
so you know how in Python you can take a
list<00:28:57.779><c> of</c><00:28:57.960><c> range</c><00:28:58.260><c> of</c><00:28:58.380><c> 10</c>

00:29:00.049 --> 00:29:00.059 align:start position:0%
list of range of 10
 

00:29:00.059 --> 00:29:03.350 align:start position:0%
list of range of 10
so<00:29:00.419><c> we</c><00:29:00.600><c> have</c><00:29:00.720><c> numbers</c><00:29:01.020><c> from</c><00:29:01.440><c> zero</c><00:29:02.279><c> to</c><00:29:02.340><c> nine</c><00:29:02.580><c> and</c>

00:29:03.350 --> 00:29:03.360 align:start position:0%
so we have numbers from zero to nine and
 

00:29:03.360 --> 00:29:05.149 align:start position:0%
so we have numbers from zero to nine and
we<00:29:03.720><c> can</c><00:29:03.840><c> index</c><00:29:04.080><c> like</c><00:29:04.320><c> this</c><00:29:04.500><c> to</c><00:29:04.620><c> get</c><00:29:04.799><c> all</c><00:29:05.039><c> the</c>

00:29:05.149 --> 00:29:05.159 align:start position:0%
we can index like this to get all the
 

00:29:05.159 --> 00:29:06.470 align:start position:0%
we can index like this to get all the
even<00:29:05.400><c> parts</c>

00:29:06.470 --> 00:29:06.480 align:start position:0%
even parts
 

00:29:06.480 --> 00:29:08.750 align:start position:0%
even parts
and<00:29:06.960><c> we</c><00:29:07.140><c> can</c><00:29:07.200><c> also</c><00:29:07.440><c> index</c><00:29:07.740><c> like</c><00:29:08.100><c> starting</c><00:29:08.460><c> at</c>

00:29:08.750 --> 00:29:08.760 align:start position:0%
and we can also index like starting at
 

00:29:08.760 --> 00:29:11.090 align:start position:0%
and we can also index like starting at
one<00:29:08.940><c> and</c><00:29:09.419><c> going</c><00:29:09.659><c> in</c><00:29:09.840><c> steps</c><00:29:10.140><c> up</c><00:29:10.260><c> two</c><00:29:10.380><c> to</c><00:29:10.740><c> get</c><00:29:10.919><c> all</c>

00:29:11.090 --> 00:29:11.100 align:start position:0%
one and going in steps up two to get all
 

00:29:11.100 --> 00:29:13.250 align:start position:0%
one and going in steps up two to get all
the<00:29:11.279><c> odd</c><00:29:11.580><c> parts</c>

00:29:13.250 --> 00:29:13.260 align:start position:0%
the odd parts
 

00:29:13.260 --> 00:29:15.470 align:start position:0%
the odd parts
so<00:29:13.679><c> one</c><00:29:13.919><c> way</c><00:29:14.039><c> to</c><00:29:14.220><c> implement</c><00:29:14.520><c> this</c><00:29:14.760><c> it</c><00:29:15.240><c> would</c><00:29:15.360><c> be</c>

00:29:15.470 --> 00:29:15.480 align:start position:0%
so one way to implement this it would be
 

00:29:15.480 --> 00:29:18.769 align:start position:0%
so one way to implement this it would be
as<00:29:15.720><c> follows</c><00:29:16.140><c> we</c><00:29:16.799><c> can</c><00:29:16.919><c> take</c><00:29:17.159><c> e</c><00:29:17.520><c> and</c><00:29:18.360><c> we</c><00:29:18.600><c> can</c>

00:29:18.769 --> 00:29:18.779 align:start position:0%
as follows we can take e and we can
 

00:29:18.779 --> 00:29:21.350 align:start position:0%
as follows we can take e and we can
index<00:29:19.380><c> into</c><00:29:19.679><c> it</c><00:29:19.919><c> for</c><00:29:20.399><c> all</c><00:29:20.580><c> the</c><00:29:20.700><c> batch</c><00:29:20.820><c> elements</c>

00:29:21.350 --> 00:29:21.360 align:start position:0%
index into it for all the batch elements
 

00:29:21.360 --> 00:29:24.169 align:start position:0%
index into it for all the batch elements
and<00:29:22.140><c> then</c><00:29:22.260><c> just</c><00:29:22.620><c> even</c><00:29:22.919><c> elements</c><00:29:23.880><c> in</c><00:29:24.059><c> this</c>

00:29:24.169 --> 00:29:24.179 align:start position:0%
and then just even elements in this
 

00:29:24.179 --> 00:29:29.090 align:start position:0%
and then just even elements in this
Dimension<00:29:24.659><c> so</c><00:29:25.380><c> at</c><00:29:25.980><c> indexes</c><00:29:26.520><c> 0</c><00:29:26.760><c> 2</c><00:29:27.240><c> 4</c><00:29:27.659><c> and</c><00:29:27.960><c> 8.</c>

00:29:29.090 --> 00:29:29.100 align:start position:0%
Dimension so at indexes 0 2 4 and 8.
 

00:29:29.100 --> 00:29:31.730 align:start position:0%
Dimension so at indexes 0 2 4 and 8.
and<00:29:29.580><c> then</c><00:29:29.700><c> all</c><00:29:30.059><c> the</c><00:29:30.240><c> parts</c><00:29:30.840><c> here</c><00:29:31.380><c> from</c><00:29:31.620><c> this</c>

00:29:31.730 --> 00:29:31.740 align:start position:0%
and then all the parts here from this
 

00:29:31.740 --> 00:29:33.409 align:start position:0%
and then all the parts here from this
last<00:29:31.919><c> dimension</c>

00:29:33.409 --> 00:29:33.419 align:start position:0%
last dimension
 

00:29:33.419 --> 00:29:37.490 align:start position:0%
last dimension
and<00:29:34.200><c> this</c><00:29:35.039><c> gives</c><00:29:35.279><c> us</c><00:29:35.399><c> the</c><00:29:35.820><c> even</c><00:29:36.120><c> characters</c>

00:29:37.490 --> 00:29:37.500 align:start position:0%
and this gives us the even characters
 

00:29:37.500 --> 00:29:39.169 align:start position:0%
and this gives us the even characters
and<00:29:38.039><c> then</c><00:29:38.220><c> here</c>

00:29:39.169 --> 00:29:39.179 align:start position:0%
and then here
 

00:29:39.179 --> 00:29:42.110 align:start position:0%
and then here
this<00:29:39.779><c> gives</c><00:29:39.960><c> us</c><00:29:40.200><c> all</c><00:29:40.559><c> the</c><00:29:40.679><c> odd</c><00:29:41.039><c> characters</c><00:29:41.279><c> and</c>

00:29:42.110 --> 00:29:42.120 align:start position:0%
this gives us all the odd characters and
 

00:29:42.120 --> 00:29:43.190 align:start position:0%
this gives us all the odd characters and
basically<00:29:42.360><c> what</c><00:29:42.480><c> we</c><00:29:42.600><c> want</c><00:29:42.659><c> to</c><00:29:42.779><c> do</c><00:29:42.840><c> is</c><00:29:42.899><c> we</c><00:29:43.080><c> make</c>

00:29:43.190 --> 00:29:43.200 align:start position:0%
basically what we want to do is we make
 

00:29:43.200 --> 00:29:44.450 align:start position:0%
basically what we want to do is we make
sure<00:29:43.320><c> we</c><00:29:43.440><c> want</c><00:29:43.559><c> to</c><00:29:43.679><c> make</c><00:29:43.799><c> sure</c><00:29:43.919><c> that</c><00:29:44.159><c> these</c><00:29:44.340><c> get</c>

00:29:44.450 --> 00:29:44.460 align:start position:0%
sure we want to make sure that these get
 

00:29:44.460 --> 00:29:47.330 align:start position:0%
sure we want to make sure that these get
concatenated<00:29:45.240><c> in</c><00:29:45.779><c> pi</c><00:29:46.020><c> torch</c><00:29:46.380><c> and</c><00:29:46.980><c> then</c><00:29:47.100><c> we</c>

00:29:47.330 --> 00:29:47.340 align:start position:0%
concatenated in pi torch and then we
 

00:29:47.340 --> 00:29:49.490 align:start position:0%
concatenated in pi torch and then we
want<00:29:47.520><c> to</c><00:29:47.580><c> concatenate</c><00:29:48.240><c> these</c><00:29:48.960><c> two</c><00:29:49.080><c> tensors</c>

00:29:49.490 --> 00:29:49.500 align:start position:0%
want to concatenate these two tensors
 

00:29:49.500 --> 00:29:53.149 align:start position:0%
want to concatenate these two tensors
along<00:29:50.279><c> the</c><00:29:50.700><c> second</c><00:29:50.880><c> dimension</c>

00:29:53.149 --> 00:29:53.159 align:start position:0%
along the second dimension
 

00:29:53.159 --> 00:29:55.490 align:start position:0%
along the second dimension
so<00:29:53.640><c> this</c><00:29:54.240><c> and</c><00:29:54.539><c> the</c><00:29:54.659><c> shape</c><00:29:54.840><c> of</c><00:29:55.020><c> it</c><00:29:55.140><c> would</c><00:29:55.380><c> be</c>

00:29:55.490 --> 00:29:55.500 align:start position:0%
so this and the shape of it would be
 

00:29:55.500 --> 00:29:56.990 align:start position:0%
so this and the shape of it would be
four<00:29:55.620><c> by</c><00:29:55.799><c> four</c><00:29:55.980><c> by</c><00:29:56.100><c> Twenty</c><00:29:56.520><c> this</c><00:29:56.880><c> is</c>

00:29:56.990 --> 00:29:57.000 align:start position:0%
four by four by Twenty this is
 

00:29:57.000 --> 00:29:58.850 align:start position:0%
four by four by Twenty this is
definitely<00:29:57.299><c> the</c><00:29:57.539><c> result</c><00:29:57.720><c> we</c><00:29:58.020><c> want</c><00:29:58.200><c> we</c><00:29:58.679><c> are</c>

00:29:58.850 --> 00:29:58.860 align:start position:0%
definitely the result we want we are
 

00:29:58.860 --> 00:30:01.549 align:start position:0%
definitely the result we want we are
explicitly<00:29:59.279><c> grabbing</c><00:29:59.640><c> the</c><00:30:00.000><c> even</c><00:30:00.600><c> parts</c><00:30:00.960><c> and</c>

00:30:01.549 --> 00:30:01.559 align:start position:0%
explicitly grabbing the even parts and
 

00:30:01.559 --> 00:30:03.649 align:start position:0%
explicitly grabbing the even parts and
the<00:30:01.740><c> odd</c><00:30:01.919><c> parts</c><00:30:02.100><c> and</c><00:30:02.640><c> we're</c><00:30:02.820><c> arranging</c><00:30:03.299><c> those</c>

00:30:03.649 --> 00:30:03.659 align:start position:0%
the odd parts and we're arranging those
 

00:30:03.659 --> 00:30:06.470 align:start position:0%
the odd parts and we're arranging those
four<00:30:04.500><c> by</c><00:30:04.679><c> four</c><00:30:04.860><c> by</c><00:30:05.039><c> ten</c><00:30:05.399><c> right</c><00:30:06.120><c> next</c><00:30:06.240><c> to</c><00:30:06.360><c> each</c>

00:30:06.470 --> 00:30:06.480 align:start position:0%
four by four by ten right next to each
 

00:30:06.480 --> 00:30:08.389 align:start position:0%
four by four by ten right next to each
other<00:30:06.600><c> and</c><00:30:06.840><c> concatenate</c>

00:30:08.389 --> 00:30:08.399 align:start position:0%
other and concatenate
 

00:30:08.399 --> 00:30:10.669 align:start position:0%
other and concatenate
so<00:30:08.940><c> this</c><00:30:09.179><c> works</c><00:30:09.480><c> but</c><00:30:09.779><c> it</c><00:30:09.960><c> turns</c><00:30:10.200><c> out</c><00:30:10.260><c> that</c><00:30:10.440><c> what</c>

00:30:10.669 --> 00:30:10.679 align:start position:0%
so this works but it turns out that what
 

00:30:10.679 --> 00:30:13.370 align:start position:0%
so this works but it turns out that what
also<00:30:11.039><c> works</c><00:30:11.399><c> is</c><00:30:11.940><c> you</c><00:30:12.120><c> can</c><00:30:12.299><c> simply</c><00:30:12.600><c> use</c><00:30:13.080><c> a</c><00:30:13.260><c> view</c>

00:30:13.370 --> 00:30:13.380 align:start position:0%
also works is you can simply use a view
 

00:30:13.380 --> 00:30:16.250 align:start position:0%
also works is you can simply use a view
again<00:30:13.740><c> and</c><00:30:14.100><c> just</c><00:30:14.279><c> request</c><00:30:14.779><c> the</c><00:30:15.779><c> right</c><00:30:15.899><c> shape</c>

00:30:16.250 --> 00:30:16.260 align:start position:0%
again and just request the right shape
 

00:30:16.260 --> 00:30:18.049 align:start position:0%
again and just request the right shape
and<00:30:16.860><c> it</c><00:30:16.980><c> just</c><00:30:17.100><c> so</c><00:30:17.220><c> happens</c><00:30:17.340><c> that</c><00:30:17.640><c> in</c><00:30:17.760><c> this</c><00:30:17.940><c> case</c>

00:30:18.049 --> 00:30:18.059 align:start position:0%
and it just so happens that in this case
 

00:30:18.059 --> 00:30:21.230 align:start position:0%
and it just so happens that in this case
those<00:30:19.279><c> vectors</c><00:30:20.279><c> will</c><00:30:20.520><c> again</c><00:30:20.700><c> end</c><00:30:20.940><c> up</c><00:30:21.059><c> being</c>

00:30:21.230 --> 00:30:21.240 align:start position:0%
those vectors will again end up being
 

00:30:21.240 --> 00:30:23.450 align:start position:0%
those vectors will again end up being
arranged<00:30:21.659><c> in</c><00:30:21.779><c> exactly</c><00:30:22.080><c> the</c><00:30:22.200><c> way</c><00:30:22.320><c> we</c><00:30:22.500><c> want</c><00:30:22.740><c> so</c>

00:30:23.450 --> 00:30:23.460 align:start position:0%
arranged in exactly the way we want so
 

00:30:23.460 --> 00:30:25.310 align:start position:0%
arranged in exactly the way we want so
in<00:30:23.700><c> particular</c><00:30:24.059><c> if</c><00:30:24.240><c> we</c><00:30:24.360><c> take</c><00:30:24.480><c> e</c><00:30:24.720><c> and</c><00:30:25.080><c> we</c><00:30:25.200><c> just</c>

00:30:25.310 --> 00:30:25.320 align:start position:0%
in particular if we take e and we just
 

00:30:25.320 --> 00:30:27.110 align:start position:0%
in particular if we take e and we just
view<00:30:25.500><c> it</c><00:30:25.679><c> as</c><00:30:25.919><c> a</c><00:30:26.100><c> four</c><00:30:26.220><c> by</c><00:30:26.399><c> four</c><00:30:26.580><c> by</c><00:30:26.760><c> Twenty</c>

00:30:27.110 --> 00:30:27.120 align:start position:0%
view it as a four by four by Twenty
 

00:30:27.120 --> 00:30:28.669 align:start position:0%
view it as a four by four by Twenty
which<00:30:27.360><c> is</c><00:30:27.480><c> what</c><00:30:27.600><c> we</c><00:30:27.779><c> want</c>

00:30:28.669 --> 00:30:28.679 align:start position:0%
which is what we want
 

00:30:28.679 --> 00:30:30.649 align:start position:0%
which is what we want
we<00:30:29.159><c> can</c><00:30:29.279><c> check</c><00:30:29.460><c> that</c><00:30:29.760><c> this</c><00:30:29.880><c> is</c><00:30:30.059><c> exactly</c><00:30:30.419><c> equal</c>

00:30:30.649 --> 00:30:30.659 align:start position:0%
we can check that this is exactly equal
 

00:30:30.659 --> 00:30:33.169 align:start position:0%
we can check that this is exactly equal
to<00:30:31.020><c> but</c><00:30:31.980><c> let</c><00:30:32.220><c> me</c><00:30:32.340><c> call</c><00:30:32.460><c> this</c><00:30:32.640><c> this</c><00:30:32.880><c> is</c><00:30:33.000><c> the</c>

00:30:33.169 --> 00:30:33.179 align:start position:0%
to but let me call this this is the
 

00:30:33.179 --> 00:30:36.289 align:start position:0%
to but let me call this this is the
explicit<00:30:33.720><c> concatenation</c><00:30:34.620><c> I</c><00:30:34.919><c> suppose</c>

00:30:36.289 --> 00:30:36.299 align:start position:0%
explicit concatenation I suppose
 

00:30:36.299 --> 00:30:36.889 align:start position:0%
explicit concatenation I suppose
um

00:30:36.889 --> 00:30:36.899 align:start position:0%
um
 

00:30:36.899 --> 00:30:40.669 align:start position:0%
um
so<00:30:37.320><c> explosives</c><00:30:37.919><c> dot</c><00:30:38.340><c> shape</c><00:30:38.520><c> is</c><00:30:39.000><c> 4x4</c><00:30:39.419><c> by</c><00:30:39.600><c> 20.</c><00:30:40.200><c> if</c>

00:30:40.669 --> 00:30:40.679 align:start position:0%
so explosives dot shape is 4x4 by 20. if
 

00:30:40.679 --> 00:30:42.769 align:start position:0%
so explosives dot shape is 4x4 by 20. if
you<00:30:40.799><c> just</c><00:30:40.919><c> view</c><00:30:41.039><c> it</c><00:30:41.220><c> as</c><00:30:41.279><c> 4x4</c><00:30:41.700><c> by</c><00:30:41.880><c> 20</c><00:30:42.059><c> you</c><00:30:42.659><c> can</c>

00:30:42.769 --> 00:30:42.779 align:start position:0%
you just view it as 4x4 by 20 you can
 

00:30:42.779 --> 00:30:46.010 align:start position:0%
you just view it as 4x4 by 20 you can
check<00:30:42.960><c> that</c><00:30:43.320><c> when</c><00:30:44.039><c> you</c><00:30:44.220><c> compare</c><00:30:44.640><c> to</c><00:30:44.820><c> explicit</c>

00:30:46.010 --> 00:30:46.020 align:start position:0%
check that when you compare to explicit
 

00:30:46.020 --> 00:30:48.289 align:start position:0%
check that when you compare to explicit
uh<00:30:46.500><c> you</c><00:30:46.620><c> got</c><00:30:46.740><c> a</c><00:30:46.919><c> big</c><00:30:47.039><c> this</c><00:30:47.640><c> is</c><00:30:47.760><c> element</c><00:30:47.940><c> wise</c>

00:30:48.289 --> 00:30:48.299 align:start position:0%
uh you got a big this is element wise
 

00:30:48.299 --> 00:30:49.909 align:start position:0%
uh you got a big this is element wise
operation<00:30:48.720><c> so</c><00:30:49.080><c> making</c><00:30:49.260><c> sure</c><00:30:49.440><c> that</c><00:30:49.620><c> all</c><00:30:49.799><c> of</c>

00:30:49.909 --> 00:30:49.919 align:start position:0%
operation so making sure that all of
 

00:30:49.919 --> 00:30:53.029 align:start position:0%
operation so making sure that all of
them<00:30:50.039><c> are</c><00:30:50.220><c> true</c><00:30:50.460><c> that</c><00:30:51.419><c> is</c><00:30:51.600><c> the</c><00:30:51.779><c> truth</c><00:30:52.500><c> so</c>

00:30:53.029 --> 00:30:53.039 align:start position:0%
them are true that is the truth so
 

00:30:53.039 --> 00:30:54.769 align:start position:0%
them are true that is the truth so
basically<00:30:53.399><c> long</c><00:30:53.700><c> story</c><00:30:53.880><c> short</c><00:30:54.179><c> we</c><00:30:54.480><c> don't</c><00:30:54.600><c> need</c>

00:30:54.769 --> 00:30:54.779 align:start position:0%
basically long story short we don't need
 

00:30:54.779 --> 00:30:56.870 align:start position:0%
basically long story short we don't need
to<00:30:54.899><c> make</c><00:30:55.080><c> an</c><00:30:55.260><c> explicit</c><00:30:55.679><c> call</c><00:30:55.860><c> to</c><00:30:56.039><c> concatenate</c>

00:30:56.870 --> 00:30:56.880 align:start position:0%
to make an explicit call to concatenate
 

00:30:56.880 --> 00:31:00.950 align:start position:0%
to make an explicit call to concatenate
Etc<00:30:57.000><c> we</c><00:30:57.840><c> can</c><00:30:58.020><c> simply</c><00:30:58.320><c> take</c><00:30:58.860><c> this</c><00:30:59.659><c> input</c><00:31:00.659><c> tensor</c>

00:31:00.950 --> 00:31:00.960 align:start position:0%
Etc we can simply take this input tensor
 

00:31:00.960 --> 00:31:03.409 align:start position:0%
Etc we can simply take this input tensor
to<00:31:01.140><c> flatten</c><00:31:01.500><c> and</c><00:31:02.039><c> we</c><00:31:02.159><c> can</c><00:31:02.340><c> just</c><00:31:02.460><c> view</c><00:31:02.640><c> it</c><00:31:02.880><c> in</c>

00:31:03.409 --> 00:31:03.419 align:start position:0%
to flatten and we can just view it in
 

00:31:03.419 --> 00:31:04.730 align:start position:0%
to flatten and we can just view it in
whatever<00:31:03.539><c> way</c><00:31:03.779><c> we</c><00:31:04.020><c> want</c>

00:31:04.730 --> 00:31:04.740 align:start position:0%
whatever way we want
 

00:31:04.740 --> 00:31:07.070 align:start position:0%
whatever way we want
and<00:31:05.399><c> in</c><00:31:06.240><c> particular</c><00:31:06.539><c> you</c><00:31:06.720><c> don't</c><00:31:06.840><c> want</c><00:31:06.960><c> to</c>

00:31:07.070 --> 00:31:07.080 align:start position:0%
and in particular you don't want to
 

00:31:07.080 --> 00:31:09.350 align:start position:0%
and in particular you don't want to
stretch<00:31:07.380><c> things</c><00:31:07.559><c> out</c><00:31:07.799><c> with</c><00:31:08.279><c> negative</c><00:31:08.700><c> one</c><00:31:08.880><c> we</c>

00:31:09.350 --> 00:31:09.360 align:start position:0%
stretch things out with negative one we
 

00:31:09.360 --> 00:31:10.310 align:start position:0%
stretch things out with negative one we
want<00:31:09.480><c> to</c><00:31:09.600><c> actually</c><00:31:09.720><c> create</c><00:31:10.020><c> a</c>

00:31:10.310 --> 00:31:10.320 align:start position:0%
want to actually create a
 

00:31:10.320 --> 00:31:12.470 align:start position:0%
want to actually create a
three-dimensional<00:31:10.919><c> array</c><00:31:11.279><c> and</c><00:31:12.059><c> depending</c><00:31:12.360><c> on</c>

00:31:12.470 --> 00:31:12.480 align:start position:0%
three-dimensional array and depending on
 

00:31:12.480 --> 00:31:15.590 align:start position:0%
three-dimensional array and depending on
how<00:31:12.779><c> many</c><00:31:13.100><c> vectors</c><00:31:14.100><c> that</c><00:31:14.460><c> are</c><00:31:14.580><c> consecutive</c><00:31:15.059><c> we</c>

00:31:15.590 --> 00:31:15.600 align:start position:0%
how many vectors that are consecutive we
 

00:31:15.600 --> 00:31:16.669 align:start position:0%
how many vectors that are consecutive we
want<00:31:15.779><c> to</c>

00:31:16.669 --> 00:31:16.679 align:start position:0%
want to
 

00:31:16.679 --> 00:31:20.389 align:start position:0%
want to
um<00:31:17.100><c> fuse</c><00:31:17.760><c> like</c><00:31:18.240><c> for</c><00:31:18.360><c> example</c><00:31:18.600><c> two</c><00:31:19.100><c> then</c><00:31:20.100><c> we</c><00:31:20.279><c> can</c>

00:31:20.389 --> 00:31:20.399 align:start position:0%
um fuse like for example two then we can
 

00:31:20.399 --> 00:31:21.769 align:start position:0%
um fuse like for example two then we can
just<00:31:20.520><c> simply</c><00:31:20.700><c> ask</c><00:31:20.820><c> for</c><00:31:21.000><c> this</c><00:31:21.179><c> Dimension</c><00:31:21.539><c> to</c><00:31:21.659><c> be</c>

00:31:21.769 --> 00:31:21.779 align:start position:0%
just simply ask for this Dimension to be
 

00:31:21.779 --> 00:31:24.169 align:start position:0%
just simply ask for this Dimension to be
20.<00:31:22.260><c> and</c><00:31:23.340><c> um</c>

00:31:24.169 --> 00:31:24.179 align:start position:0%
20. and um
 

00:31:24.179 --> 00:31:26.450 align:start position:0%
20. and um
use<00:31:24.539><c> a</c><00:31:24.720><c> negative</c><00:31:24.960><c> 1</c><00:31:25.080><c> here</c><00:31:25.380><c> and</c><00:31:25.799><c> python</c><00:31:26.220><c> will</c>

00:31:26.450 --> 00:31:26.460 align:start position:0%
use a negative 1 here and python will
 

00:31:26.460 --> 00:31:27.830 align:start position:0%
use a negative 1 here and python will
figure<00:31:26.580><c> out</c><00:31:26.700><c> how</c><00:31:26.880><c> many</c><00:31:27.000><c> groups</c><00:31:27.299><c> it</c><00:31:27.480><c> needs</c><00:31:27.779><c> to</c>

00:31:27.830 --> 00:31:27.840 align:start position:0%
figure out how many groups it needs to
 

00:31:27.840 --> 00:31:29.330 align:start position:0%
figure out how many groups it needs to
pack<00:31:28.020><c> into</c><00:31:28.320><c> this</c><00:31:28.620><c> additional</c><00:31:28.980><c> batch</c>

00:31:29.330 --> 00:31:29.340 align:start position:0%
pack into this additional batch
 

00:31:29.340 --> 00:31:30.590 align:start position:0%
pack into this additional batch
dimension

00:31:30.590 --> 00:31:30.600 align:start position:0%
dimension
 

00:31:30.600 --> 00:31:32.630 align:start position:0%
dimension
so<00:31:31.080><c> let's</c><00:31:31.200><c> now</c><00:31:31.380><c> go</c><00:31:31.620><c> into</c><00:31:31.740><c> flatten</c><00:31:32.399><c> and</c>

00:31:32.630 --> 00:31:32.640 align:start position:0%
so let's now go into flatten and
 

00:31:32.640 --> 00:31:34.430 align:start position:0%
so let's now go into flatten and
implement<00:31:32.940><c> this</c><00:31:33.120><c> okay</c><00:31:33.539><c> so</c><00:31:33.779><c> I</c><00:31:33.899><c> scroll</c><00:31:34.080><c> up</c><00:31:34.320><c> here</c>

00:31:34.430 --> 00:31:34.440 align:start position:0%
implement this okay so I scroll up here
 

00:31:34.440 --> 00:31:36.409 align:start position:0%
implement this okay so I scroll up here
to<00:31:34.620><c> flatten</c><00:31:35.039><c> and</c><00:31:35.820><c> what</c><00:31:35.880><c> we'd</c><00:31:36.059><c> like</c><00:31:36.179><c> to</c><00:31:36.240><c> do</c><00:31:36.360><c> is</c>

00:31:36.409 --> 00:31:36.419 align:start position:0%
to flatten and what we'd like to do is
 

00:31:36.419 --> 00:31:38.570 align:start position:0%
to flatten and what we'd like to do is
we'd<00:31:36.659><c> like</c><00:31:36.779><c> to</c><00:31:36.960><c> change</c><00:31:37.440><c> it</c><00:31:37.679><c> now</c><00:31:37.860><c> so</c><00:31:38.340><c> let</c><00:31:38.460><c> me</c>

00:31:38.570 --> 00:31:38.580 align:start position:0%
we'd like to change it now so let me
 

00:31:38.580 --> 00:31:40.310 align:start position:0%
we'd like to change it now so let me
create<00:31:38.760><c> a</c><00:31:38.940><c> Constructor</c><00:31:39.240><c> and</c><00:31:39.840><c> take</c><00:31:40.020><c> the</c><00:31:40.200><c> number</c>

00:31:40.310 --> 00:31:40.320 align:start position:0%
create a Constructor and take the number
 

00:31:40.320 --> 00:31:42.649 align:start position:0%
create a Constructor and take the number
of<00:31:40.500><c> elements</c><00:31:40.980><c> that</c><00:31:41.580><c> are</c><00:31:41.700><c> consecutive</c><00:31:42.179><c> that</c><00:31:42.539><c> we</c>

00:31:42.649 --> 00:31:42.659 align:start position:0%
of elements that are consecutive that we
 

00:31:42.659 --> 00:31:44.570 align:start position:0%
of elements that are consecutive that we
would<00:31:42.779><c> like</c><00:31:42.960><c> to</c><00:31:43.140><c> concatenate</c><00:31:43.919><c> now</c><00:31:44.159><c> in</c><00:31:44.460><c> the</c>

00:31:44.570 --> 00:31:44.580 align:start position:0%
would like to concatenate now in the
 

00:31:44.580 --> 00:31:46.789 align:start position:0%
would like to concatenate now in the
last<00:31:44.700><c> dimension</c><00:31:45.120><c> of</c><00:31:45.419><c> the</c><00:31:45.539><c> output</c>

00:31:46.789 --> 00:31:46.799 align:start position:0%
last dimension of the output
 

00:31:46.799 --> 00:31:48.310 align:start position:0%
last dimension of the output
so<00:31:47.159><c> here</c><00:31:47.340><c> we're</c><00:31:47.520><c> just</c><00:31:47.700><c> going</c><00:31:47.820><c> to</c><00:31:47.880><c> remember</c>

00:31:48.310 --> 00:31:48.320 align:start position:0%
so here we're just going to remember
 

00:31:48.320 --> 00:31:50.450 align:start position:0%
so here we're just going to remember
solve.n<00:31:49.320><c> equals</c><00:31:49.620><c> n</c>

00:31:50.450 --> 00:31:50.460 align:start position:0%
solve.n equals n
 

00:31:50.460 --> 00:31:52.250 align:start position:0%
solve.n equals n
and<00:31:51.059><c> then</c><00:31:51.240><c> I</c><00:31:51.539><c> want</c><00:31:51.659><c> to</c><00:31:51.779><c> be</c><00:31:51.840><c> careful</c><00:31:52.020><c> here</c>

00:31:52.250 --> 00:31:52.260 align:start position:0%
and then I want to be careful here
 

00:31:52.260 --> 00:31:54.350 align:start position:0%
and then I want to be careful here
because<00:31:52.500><c> pipe</c><00:31:53.220><c> pytorch</c><00:31:53.880><c> actually</c><00:31:54.000><c> has</c><00:31:54.240><c> a</c>

00:31:54.350 --> 00:31:54.360 align:start position:0%
because pipe pytorch actually has a
 

00:31:54.360 --> 00:31:56.090 align:start position:0%
because pipe pytorch actually has a
torch<00:31:54.600><c> to</c><00:31:54.720><c> flatten</c><00:31:55.140><c> and</c><00:31:55.679><c> its</c><00:31:55.980><c> keyword</c>

00:31:56.090 --> 00:31:56.100 align:start position:0%
torch to flatten and its keyword
 

00:31:56.100 --> 00:31:58.190 align:start position:0%
torch to flatten and its keyword
arguments<00:31:56.580><c> are</c><00:31:56.880><c> different</c><00:31:57.059><c> and</c><00:31:57.600><c> they</c><00:31:57.840><c> kind</c><00:31:58.080><c> of</c>

00:31:58.190 --> 00:31:58.200 align:start position:0%
arguments are different and they kind of
 

00:31:58.200 --> 00:32:00.230 align:start position:0%
arguments are different and they kind of
like<00:31:58.260><c> function</c><00:31:58.620><c> differently</c><00:31:59.039><c> so</c><00:31:59.640><c> R</c><00:31:59.820><c> flatten</c>

00:32:00.230 --> 00:32:00.240 align:start position:0%
like function differently so R flatten
 

00:32:00.240 --> 00:32:02.090 align:start position:0%
like function differently so R flatten
is<00:32:00.480><c> going</c><00:32:00.600><c> to</c><00:32:00.720><c> start</c><00:32:00.840><c> to</c><00:32:01.020><c> depart</c><00:32:01.380><c> from</c><00:32:01.620><c> patreon</c>

00:32:02.090 --> 00:32:02.100 align:start position:0%
is going to start to depart from patreon
 

00:32:02.100 --> 00:32:04.370 align:start position:0%
is going to start to depart from patreon
flatten<00:32:02.460><c> so</c><00:32:02.940><c> let</c><00:32:03.000><c> me</c><00:32:03.120><c> call</c><00:32:03.480><c> it</c><00:32:03.600><c> flat</c><00:32:03.899><c> flatten</c>

00:32:04.370 --> 00:32:04.380 align:start position:0%
flatten so let me call it flat flatten
 

00:32:04.380 --> 00:32:06.470 align:start position:0%
flatten so let me call it flat flatten
consecutive<00:32:05.100><c> or</c><00:32:05.640><c> something</c><00:32:05.760><c> like</c><00:32:06.000><c> that</c><00:32:06.179><c> just</c>

00:32:06.470 --> 00:32:06.480 align:start position:0%
consecutive or something like that just
 

00:32:06.480 --> 00:32:08.690 align:start position:0%
consecutive or something like that just
to<00:32:06.600><c> make</c><00:32:06.720><c> sure</c><00:32:06.840><c> that</c><00:32:07.200><c> our</c><00:32:07.799><c> apis</c><00:32:08.340><c> are</c><00:32:08.580><c> about</c>

00:32:08.690 --> 00:32:08.700 align:start position:0%
to make sure that our apis are about
 

00:32:08.700 --> 00:32:09.769 align:start position:0%
to make sure that our apis are about
equal

00:32:09.769 --> 00:32:09.779 align:start position:0%
equal
 

00:32:09.779 --> 00:32:13.669 align:start position:0%
equal
so<00:32:10.260><c> this</c><00:32:10.559><c> uh</c><00:32:11.299><c> basically</c><00:32:12.299><c> flattens</c><00:32:12.779><c> only</c><00:32:13.080><c> some</c>

00:32:13.669 --> 00:32:13.679 align:start position:0%
so this uh basically flattens only some
 

00:32:13.679 --> 00:32:15.590 align:start position:0%
so this uh basically flattens only some
n<00:32:14.100><c> consecutive</c><00:32:14.700><c> elements</c><00:32:15.120><c> and</c><00:32:15.299><c> puts</c><00:32:15.539><c> them</c>

00:32:15.590 --> 00:32:15.600 align:start position:0%
n consecutive elements and puts them
 

00:32:15.600 --> 00:32:17.570 align:start position:0%
n consecutive elements and puts them
into<00:32:15.720><c> the</c><00:32:15.899><c> last</c><00:32:16.020><c> dimension</c>

00:32:17.570 --> 00:32:17.580 align:start position:0%
into the last dimension
 

00:32:17.580 --> 00:32:21.470 align:start position:0%
into the last dimension
now<00:32:18.120><c> here</c><00:32:18.419><c> the</c><00:32:18.840><c> shape</c><00:32:19.080><c> of</c><00:32:19.200><c> X</c><00:32:19.440><c> is</c><00:32:19.860><c> B</c><00:32:20.520><c> by</c><00:32:20.760><c> T</c><00:32:21.000><c> by</c><00:32:21.240><c> C</c>

00:32:21.470 --> 00:32:21.480 align:start position:0%
now here the shape of X is B by T by C
 

00:32:21.480 --> 00:32:23.450 align:start position:0%
now here the shape of X is B by T by C
so<00:32:21.899><c> let</c><00:32:22.140><c> me</c>

00:32:23.450 --> 00:32:23.460 align:start position:0%
so let me
 

00:32:23.460 --> 00:32:26.269 align:start position:0%
so let me
pop<00:32:24.059><c> those</c><00:32:24.299><c> out</c><00:32:24.539><c> into</c><00:32:24.720><c> variables</c><00:32:25.260><c> and</c><00:32:25.980><c> recall</c>

00:32:26.269 --> 00:32:26.279 align:start position:0%
pop those out into variables and recall
 

00:32:26.279 --> 00:32:28.970 align:start position:0%
pop those out into variables and recall
that<00:32:26.399><c> in</c><00:32:26.580><c> our</c><00:32:26.700><c> example</c><00:32:27.059><c> down</c><00:32:27.360><c> below</c><00:32:27.600><c> B</c><00:32:28.080><c> was</c><00:32:28.320><c> 4</c><00:32:28.559><c> T</c>

00:32:28.970 --> 00:32:28.980 align:start position:0%
that in our example down below B was 4 T
 

00:32:28.980 --> 00:32:33.529 align:start position:0%
that in our example down below B was 4 T
was<00:32:29.220><c> 8</c><00:32:29.520><c> and</c><00:32:29.880><c> C</c><00:32:30.120><c> was</c><00:32:30.360><c> 10.</c>

00:32:33.529 --> 00:32:33.539 align:start position:0%
 
 

00:32:33.539 --> 00:32:37.070 align:start position:0%
 
now<00:32:33.899><c> instead</c><00:32:34.260><c> of</c><00:32:34.380><c> doing</c><00:32:34.559><c> x</c><00:32:35.100><c> dot</c><00:32:35.460><c> view</c><00:32:35.640><c> of</c><00:32:36.299><c> B</c><00:32:36.840><c> by</c>

00:32:37.070 --> 00:32:37.080 align:start position:0%
now instead of doing x dot view of B by
 

00:32:37.080 --> 00:32:39.529 align:start position:0%
now instead of doing x dot view of B by
negative<00:32:37.440><c> one</c>

00:32:39.529 --> 00:32:39.539 align:start position:0%
negative one
 

00:32:39.539 --> 00:32:44.210 align:start position:0%
negative one
right<00:32:39.720><c> this</c><00:32:40.020><c> is</c><00:32:40.140><c> what</c><00:32:40.260><c> we</c><00:32:40.380><c> had</c><00:32:40.500><c> before</c>

00:32:44.210 --> 00:32:44.220 align:start position:0%
 
 

00:32:44.220 --> 00:32:47.090 align:start position:0%
 
we<00:32:44.640><c> want</c><00:32:44.820><c> this</c><00:32:45.240><c> to</c><00:32:45.419><c> be</c><00:32:45.539><c> B</c><00:32:45.899><c> by</c>

00:32:47.090 --> 00:32:47.100 align:start position:0%
we want this to be B by
 

00:32:47.100 --> 00:32:49.669 align:start position:0%
we want this to be B by
um<00:32:47.159><c> negative</c><00:32:47.820><c> 1</c><00:32:48.000><c> by</c>

00:32:49.669 --> 00:32:49.679 align:start position:0%
um negative 1 by
 

00:32:49.679 --> 00:32:52.250 align:start position:0%
um negative 1 by
and<00:32:50.039><c> basically</c><00:32:50.399><c> here</c><00:32:50.760><c> we</c><00:32:51.179><c> want</c><00:32:51.299><c> c</c><00:32:51.600><c> times</c><00:32:51.899><c> n</c>

00:32:52.250 --> 00:32:52.260 align:start position:0%
and basically here we want c times n
 

00:32:52.260 --> 00:32:55.610 align:start position:0%
and basically here we want c times n
that's<00:32:52.860><c> how</c><00:32:53.159><c> many</c><00:32:53.279><c> consecutive</c><00:32:54.059><c> elements</c><00:32:54.960><c> we</c>

00:32:55.610 --> 00:32:55.620 align:start position:0%
that's how many consecutive elements we
 

00:32:55.620 --> 00:32:56.870 align:start position:0%
that's how many consecutive elements we
want

00:32:56.870 --> 00:32:56.880 align:start position:0%
want
 

00:32:56.880 --> 00:32:58.669 align:start position:0%
want
and<00:32:57.419><c> here</c><00:32:57.539><c> instead</c><00:32:57.779><c> of</c><00:32:57.899><c> negative</c><00:32:58.140><c> one</c><00:32:58.260><c> I</c><00:32:58.500><c> don't</c>

00:32:58.669 --> 00:32:58.679 align:start position:0%
and here instead of negative one I don't
 

00:32:58.679 --> 00:33:00.110 align:start position:0%
and here instead of negative one I don't
super<00:32:58.860><c> love</c><00:32:59.159><c> the</c><00:32:59.340><c> use</c><00:32:59.520><c> of</c><00:32:59.640><c> negative</c><00:32:59.940><c> one</c>

00:33:00.110 --> 00:33:00.120 align:start position:0%
super love the use of negative one
 

00:33:00.120 --> 00:33:02.269 align:start position:0%
super love the use of negative one
because<00:33:00.480><c> I</c><00:33:01.080><c> like</c><00:33:01.200><c> to</c><00:33:01.380><c> be</c><00:33:01.500><c> very</c><00:33:01.620><c> explicit</c><00:33:02.100><c> so</c>

00:33:02.269 --> 00:33:02.279 align:start position:0%
because I like to be very explicit so
 

00:33:02.279 --> 00:33:03.590 align:start position:0%
because I like to be very explicit so
that<00:33:02.340><c> you</c><00:33:02.460><c> get</c><00:33:02.580><c> error</c><00:33:02.880><c> messages</c><00:33:03.000><c> when</c><00:33:03.360><c> things</c>

00:33:03.590 --> 00:33:03.600 align:start position:0%
that you get error messages when things
 

00:33:03.600 --> 00:33:04.970 align:start position:0%
that you get error messages when things
don't<00:33:03.779><c> go</c><00:33:03.960><c> according</c><00:33:04.320><c> to</c><00:33:04.380><c> your</c><00:33:04.500><c> expectation</c>

00:33:04.970 --> 00:33:04.980 align:start position:0%
don't go according to your expectation
 

00:33:04.980 --> 00:33:07.669 align:start position:0%
don't go according to your expectation
so<00:33:05.700><c> what</c><00:33:05.880><c> do</c><00:33:06.059><c> we</c><00:33:06.179><c> expect</c><00:33:06.360><c> here</c><00:33:06.720><c> we</c><00:33:07.200><c> expect</c><00:33:07.440><c> this</c>

00:33:07.669 --> 00:33:07.679 align:start position:0%
so what do we expect here we expect this
 

00:33:07.679 --> 00:33:09.049 align:start position:0%
so what do we expect here we expect this
to<00:33:07.860><c> become</c><00:33:08.100><c> t</c>

00:33:09.049 --> 00:33:09.059 align:start position:0%
to become t
 

00:33:09.059 --> 00:33:12.350 align:start position:0%
to become t
divide<00:33:09.720><c> n</c><00:33:10.080><c> using</c><00:33:10.740><c> integer</c><00:33:11.100><c> division</c><00:33:11.399><c> here</c>

00:33:12.350 --> 00:33:12.360 align:start position:0%
divide n using integer division here
 

00:33:12.360 --> 00:33:14.509 align:start position:0%
divide n using integer division here
so<00:33:12.600><c> that's</c><00:33:12.720><c> what</c><00:33:12.899><c> I</c><00:33:13.019><c> expect</c><00:33:13.140><c> to</c><00:33:13.620><c> happen</c>

00:33:14.509 --> 00:33:14.519 align:start position:0%
so that's what I expect to happen
 

00:33:14.519 --> 00:33:15.889 align:start position:0%
so that's what I expect to happen
and<00:33:14.940><c> then</c><00:33:15.059><c> one</c><00:33:15.240><c> more</c><00:33:15.360><c> thing</c><00:33:15.480><c> I</c><00:33:15.600><c> want</c><00:33:15.720><c> to</c><00:33:15.840><c> do</c>

00:33:15.889 --> 00:33:15.899 align:start position:0%
and then one more thing I want to do
 

00:33:15.899 --> 00:33:18.289 align:start position:0%
and then one more thing I want to do
here<00:33:16.080><c> is</c><00:33:16.260><c> remember</c><00:33:16.860><c> previously</c><00:33:17.700><c> all</c><00:33:18.120><c> the</c><00:33:18.240><c> way</c>

00:33:18.289 --> 00:33:18.299 align:start position:0%
here is remember previously all the way
 

00:33:18.299 --> 00:33:21.590 align:start position:0%
here is remember previously all the way
in<00:33:18.419><c> the</c><00:33:18.539><c> beginning</c><00:33:18.659><c> n</c><00:33:19.440><c> was</c><00:33:19.799><c> three</c><00:33:20.299><c> and</c><00:33:21.299><c> uh</c>

00:33:21.590 --> 00:33:21.600 align:start position:0%
in the beginning n was three and uh
 

00:33:21.600 --> 00:33:23.269 align:start position:0%
in the beginning n was three and uh
basically<00:33:21.899><c> we're</c><00:33:22.080><c> concatenating</c>

00:33:23.269 --> 00:33:23.279 align:start position:0%
basically we're concatenating
 

00:33:23.279 --> 00:33:25.310 align:start position:0%
basically we're concatenating
um<00:33:23.340><c> all</c><00:33:24.059><c> the</c><00:33:24.179><c> three</c><00:33:24.360><c> characters</c><00:33:24.600><c> that</c><00:33:24.960><c> existed</c>

00:33:25.310 --> 00:33:25.320 align:start position:0%
um all the three characters that existed
 

00:33:25.320 --> 00:33:26.269 align:start position:0%
um all the three characters that existed
there

00:33:26.269 --> 00:33:26.279 align:start position:0%
there
 

00:33:26.279 --> 00:33:28.430 align:start position:0%
there
so<00:33:26.880><c> we</c><00:33:27.240><c> basically</c><00:33:27.600><c> are</c><00:33:27.840><c> concatenated</c>

00:33:28.430 --> 00:33:28.440 align:start position:0%
so we basically are concatenated
 

00:33:28.440 --> 00:33:29.810 align:start position:0%
so we basically are concatenated
everything

00:33:29.810 --> 00:33:29.820 align:start position:0%
everything
 

00:33:29.820 --> 00:33:31.730 align:start position:0%
everything
and<00:33:30.299><c> so</c><00:33:30.480><c> sometimes</c><00:33:30.720><c> I</c><00:33:30.899><c> can</c><00:33:31.019><c> create</c><00:33:31.200><c> a</c><00:33:31.380><c> spurious</c>

00:33:31.730 --> 00:33:31.740 align:start position:0%
and so sometimes I can create a spurious
 

00:33:31.740 --> 00:33:34.190 align:start position:0%
and so sometimes I can create a spurious
dimension<00:33:32.100><c> of</c><00:33:32.279><c> one</c><00:33:32.460><c> here</c><00:33:32.880><c> so</c><00:33:33.659><c> if</c><00:33:33.779><c> it</c><00:33:33.960><c> is</c><00:33:34.080><c> the</c>

00:33:34.190 --> 00:33:34.200 align:start position:0%
dimension of one here so if it is the
 

00:33:34.200 --> 00:33:37.190 align:start position:0%
dimension of one here so if it is the
case<00:33:34.320><c> that</c><00:33:34.500><c> x</c><00:33:34.679><c> dot</c><00:33:34.980><c> shape</c><00:33:35.159><c> at</c><00:33:35.340><c> one</c><00:33:35.519><c> is</c><00:33:36.179><c> one</c><00:33:36.600><c> then</c>

00:33:37.190 --> 00:33:37.200 align:start position:0%
case that x dot shape at one is one then
 

00:33:37.200 --> 00:33:39.830 align:start position:0%
case that x dot shape at one is one then
it's<00:33:37.380><c> kind</c><00:33:37.500><c> of</c><00:33:37.559><c> like</c><00:33:37.679><c> a</c><00:33:37.799><c> spurious</c><00:33:38.159><c> dimension</c>

00:33:39.830 --> 00:33:39.840 align:start position:0%
it's kind of like a spurious dimension
 

00:33:39.840 --> 00:33:41.690 align:start position:0%
it's kind of like a spurious dimension
um<00:33:39.899><c> so</c><00:33:40.559><c> we</c><00:33:40.980><c> don't</c><00:33:41.100><c> want</c><00:33:41.220><c> to</c><00:33:41.279><c> return</c><00:33:41.399><c> a</c>

00:33:41.690 --> 00:33:41.700 align:start position:0%
um so we don't want to return a
 

00:33:41.700 --> 00:33:44.210 align:start position:0%
um so we don't want to return a
three-dimensional<00:33:42.179><c> tensor</c><00:33:42.600><c> with</c><00:33:43.019><c> a</c><00:33:43.380><c> one</c><00:33:43.799><c> here</c>

00:33:44.210 --> 00:33:44.220 align:start position:0%
three-dimensional tensor with a one here
 

00:33:44.220 --> 00:33:46.070 align:start position:0%
three-dimensional tensor with a one here
we<00:33:44.820><c> just</c><00:33:45.000><c> want</c><00:33:45.120><c> to</c><00:33:45.240><c> return</c><00:33:45.299><c> a</c><00:33:45.539><c> two-dimensional</c>

00:33:46.070 --> 00:33:46.080 align:start position:0%
we just want to return a two-dimensional
 

00:33:46.080 --> 00:33:48.350 align:start position:0%
we just want to return a two-dimensional
tensor<00:33:46.440><c> exactly</c><00:33:47.039><c> as</c><00:33:47.159><c> we</c><00:33:47.340><c> did</c><00:33:47.519><c> before</c>

00:33:48.350 --> 00:33:48.360 align:start position:0%
tensor exactly as we did before
 

00:33:48.360 --> 00:33:50.690 align:start position:0%
tensor exactly as we did before
so<00:33:48.960><c> in</c><00:33:49.200><c> this</c><00:33:49.320><c> case</c><00:33:49.500><c> basically</c><00:33:49.919><c> we</c><00:33:50.220><c> will</c><00:33:50.399><c> just</c>

00:33:50.690 --> 00:33:50.700 align:start position:0%
so in this case basically we will just
 

00:33:50.700 --> 00:33:54.230 align:start position:0%
so in this case basically we will just
say<00:33:50.940><c> x</c><00:33:51.299><c> equals</c><00:33:51.659><c> x</c><00:33:51.840><c> dot</c><00:33:52.200><c> squeeze</c><00:33:53.159><c> that</c><00:33:53.880><c> is</c><00:33:54.059><c> a</c>

00:33:54.230 --> 00:33:54.240 align:start position:0%
say x equals x dot squeeze that is a
 

00:33:54.240 --> 00:33:56.950 align:start position:0%
say x equals x dot squeeze that is a
pytorch<00:33:54.899><c> function</c>

00:33:56.950 --> 00:33:56.960 align:start position:0%
pytorch function
 

00:33:56.960 --> 00:34:01.009 align:start position:0%
pytorch function
and<00:33:57.960><c> squeeze</c><00:33:58.440><c> takes</c><00:33:58.679><c> a</c><00:33:58.919><c> dimension</c><00:33:59.460><c> that</c><00:34:00.360><c> it</c>

00:34:01.009 --> 00:34:01.019 align:start position:0%
and squeeze takes a dimension that it
 

00:34:01.019 --> 00:34:02.810 align:start position:0%
and squeeze takes a dimension that it
either<00:34:01.260><c> squeezes</c><00:34:01.919><c> out</c><00:34:02.039><c> all</c><00:34:02.340><c> the</c><00:34:02.460><c> dimensions</c>

00:34:02.810 --> 00:34:02.820 align:start position:0%
either squeezes out all the dimensions
 

00:34:02.820 --> 00:34:05.389 align:start position:0%
either squeezes out all the dimensions
of<00:34:03.000><c> a</c><00:34:03.179><c> tensor</c><00:34:03.480><c> that</c><00:34:03.960><c> are</c><00:34:04.200><c> one</c><00:34:04.440><c> or</c><00:34:05.100><c> you</c><00:34:05.279><c> can</c>

00:34:05.389 --> 00:34:05.399 align:start position:0%
of a tensor that are one or you can
 

00:34:05.399 --> 00:34:08.210 align:start position:0%
of a tensor that are one or you can
specify<00:34:05.820><c> the</c><00:34:06.120><c> exact</c><00:34:06.419><c> Dimension</c><00:34:07.380><c> that</c><00:34:08.099><c> you</c>

00:34:08.210 --> 00:34:08.220 align:start position:0%
specify the exact Dimension that you
 

00:34:08.220 --> 00:34:10.490 align:start position:0%
specify the exact Dimension that you
want<00:34:08.339><c> to</c><00:34:08.399><c> be</c><00:34:08.520><c> squeezed</c><00:34:08.940><c> and</c><00:34:09.780><c> again</c><00:34:10.020><c> I</c><00:34:10.200><c> like</c><00:34:10.320><c> to</c>

00:34:10.490 --> 00:34:10.500 align:start position:0%
want to be squeezed and again I like to
 

00:34:10.500 --> 00:34:12.710 align:start position:0%
want to be squeezed and again I like to
be<00:34:10.619><c> as</c><00:34:10.740><c> explicit</c><00:34:11.220><c> as</c><00:34:11.339><c> possible</c><00:34:11.639><c> always</c><00:34:11.879><c> so</c><00:34:12.540><c> I</c>

00:34:12.710 --> 00:34:12.720 align:start position:0%
be as explicit as possible always so I
 

00:34:12.720 --> 00:34:13.970 align:start position:0%
be as explicit as possible always so I
expect<00:34:12.899><c> to</c><00:34:13.200><c> squeeze</c><00:34:13.560><c> out</c><00:34:13.619><c> the</c><00:34:13.919><c> First</c>

00:34:13.970 --> 00:34:13.980 align:start position:0%
expect to squeeze out the First
 

00:34:13.980 --> 00:34:15.470 align:start position:0%
expect to squeeze out the First
Dimension<00:34:14.520><c> only</c>

00:34:15.470 --> 00:34:15.480 align:start position:0%
Dimension only
 

00:34:15.480 --> 00:34:17.629 align:start position:0%
Dimension only
of<00:34:16.020><c> this</c><00:34:16.200><c> tensor</c>

00:34:17.629 --> 00:34:17.639 align:start position:0%
of this tensor
 

00:34:17.639 --> 00:34:19.490 align:start position:0%
of this tensor
this<00:34:18.119><c> three-dimensional</c><00:34:18.599><c> tensor</c><00:34:18.960><c> and</c><00:34:19.379><c> if</c>

00:34:19.490 --> 00:34:19.500 align:start position:0%
this three-dimensional tensor and if
 

00:34:19.500 --> 00:34:21.109 align:start position:0%
this three-dimensional tensor and if
this<00:34:19.619><c> Dimension</c><00:34:19.980><c> here</c><00:34:20.099><c> is</c><00:34:20.220><c> one</c><00:34:20.399><c> then</c><00:34:20.820><c> I</c><00:34:21.000><c> just</c>

00:34:21.109 --> 00:34:21.119 align:start position:0%
this Dimension here is one then I just
 

00:34:21.119 --> 00:34:24.230 align:start position:0%
this Dimension here is one then I just
want<00:34:21.240><c> to</c><00:34:21.359><c> return</c><00:34:21.480><c> B</c><00:34:21.899><c> by</c><00:34:22.260><c> c</c><00:34:22.919><c> times</c><00:34:23.099><c> n</c>

00:34:24.230 --> 00:34:24.240 align:start position:0%
want to return B by c times n
 

00:34:24.240 --> 00:34:26.690 align:start position:0%
want to return B by c times n
and<00:34:24.540><c> so</c><00:34:24.720><c> self</c><00:34:24.960><c> dot</c><00:34:25.379><c> out</c><00:34:25.500><c> will</c><00:34:25.800><c> be</c><00:34:25.980><c> X</c><00:34:26.220><c> and</c><00:34:26.580><c> then</c>

00:34:26.690 --> 00:34:26.700 align:start position:0%
and so self dot out will be X and then
 

00:34:26.700 --> 00:34:28.609 align:start position:0%
and so self dot out will be X and then
we<00:34:26.879><c> return</c><00:34:27.060><c> salt</c><00:34:27.599><c> dot</c><00:34:27.960><c> out</c>

00:34:28.609 --> 00:34:28.619 align:start position:0%
we return salt dot out
 

00:34:28.619 --> 00:34:30.950 align:start position:0%
we return salt dot out
so<00:34:29.580><c> that's</c><00:34:29.700><c> the</c><00:34:30.000><c> candidate</c><00:34:30.359><c> implementation</c>

00:34:30.950 --> 00:34:30.960 align:start position:0%
so that's the candidate implementation
 

00:34:30.960 --> 00:34:33.050 align:start position:0%
so that's the candidate implementation
and<00:34:31.379><c> of</c><00:34:31.500><c> course</c><00:34:31.619><c> this</c><00:34:31.800><c> should</c><00:34:31.980><c> be</c><00:34:32.159><c> self.n</c>

00:34:33.050 --> 00:34:33.060 align:start position:0%
and of course this should be self.n
 

00:34:33.060 --> 00:34:34.970 align:start position:0%
and of course this should be self.n
instead<00:34:33.720><c> of</c><00:34:33.780><c> just</c><00:34:33.899><c> n</c>

00:34:34.970 --> 00:34:34.980 align:start position:0%
instead of just n
 

00:34:34.980 --> 00:34:36.950 align:start position:0%
instead of just n
so<00:34:35.220><c> let's</c><00:34:35.520><c> run</c>

00:34:36.950 --> 00:34:36.960 align:start position:0%
so let's run
 

00:34:36.960 --> 00:34:39.050 align:start position:0%
so let's run
and<00:34:37.379><c> let's</c><00:34:37.500><c> come</c><00:34:37.740><c> here</c><00:34:37.919><c> now</c>

00:34:39.050 --> 00:34:39.060 align:start position:0%
and let's come here now
 

00:34:39.060 --> 00:34:41.389 align:start position:0%
and let's come here now
and<00:34:39.540><c> take</c><00:34:39.780><c> it</c><00:34:39.960><c> for</c><00:34:40.020><c> a</c><00:34:40.200><c> spin</c><00:34:40.440><c> so</c><00:34:40.859><c> flatten</c>

00:34:41.389 --> 00:34:41.399 align:start position:0%
and take it for a spin so flatten
 

00:34:41.399 --> 00:34:44.210 align:start position:0%
and take it for a spin so flatten
consecutive

00:34:44.210 --> 00:34:44.220 align:start position:0%
 
 

00:34:44.220 --> 00:34:47.030 align:start position:0%
 
and<00:34:44.940><c> in</c><00:34:45.780><c> the</c><00:34:45.960><c> beginning</c><00:34:46.080><c> let's</c><00:34:46.560><c> just</c><00:34:46.800><c> use</c>

00:34:47.030 --> 00:34:47.040 align:start position:0%
and in the beginning let's just use
 

00:34:47.040 --> 00:34:49.010 align:start position:0%
and in the beginning let's just use
eight<00:34:47.339><c> so</c><00:34:48.060><c> this</c><00:34:48.300><c> should</c><00:34:48.419><c> recover</c><00:34:48.720><c> the</c>

00:34:49.010 --> 00:34:49.020 align:start position:0%
eight so this should recover the
 

00:34:49.020 --> 00:34:51.109 align:start position:0%
eight so this should recover the
previous<00:34:49.200><c> Behavior</c><00:34:49.859><c> so</c><00:34:50.580><c> flagging</c>

00:34:51.109 --> 00:34:51.119 align:start position:0%
previous Behavior so flagging
 

00:34:51.119 --> 00:34:53.210 align:start position:0%
previous Behavior so flagging
consecutive<00:34:51.480><c> of</c><00:34:51.720><c> eight</c><00:34:51.960><c> uh</c><00:34:52.800><c> which</c><00:34:53.040><c> is</c><00:34:53.099><c> the</c>

00:34:53.210 --> 00:34:53.220 align:start position:0%
consecutive of eight uh which is the
 

00:34:53.220 --> 00:34:55.609 align:start position:0%
consecutive of eight uh which is the
current<00:34:53.339><c> block</c><00:34:53.580><c> size</c>

00:34:55.609 --> 00:34:55.619 align:start position:0%
current block size
 

00:34:55.619 --> 00:34:57.890 align:start position:0%
current block size
we<00:34:56.099><c> can</c><00:34:56.280><c> do</c><00:34:56.399><c> this</c><00:34:56.580><c> uh</c><00:34:57.240><c> that</c><00:34:57.480><c> should</c><00:34:57.599><c> recover</c>

00:34:57.890 --> 00:34:57.900 align:start position:0%
we can do this uh that should recover
 

00:34:57.900 --> 00:34:59.390 align:start position:0%
we can do this uh that should recover
the<00:34:58.080><c> previous</c><00:34:58.260><c> Behavior</c>

00:34:59.390 --> 00:34:59.400 align:start position:0%
the previous Behavior
 

00:34:59.400 --> 00:35:02.630 align:start position:0%
the previous Behavior
so<00:35:00.060><c> we</c><00:35:00.420><c> should</c><00:35:00.540><c> be</c><00:35:00.660><c> able</c><00:35:00.839><c> to</c><00:35:00.960><c> run</c><00:35:01.440><c> the</c><00:35:01.859><c> model</c>

00:35:02.630 --> 00:35:02.640 align:start position:0%
so we should be able to run the model
 

00:35:02.640 --> 00:35:06.050 align:start position:0%
so we should be able to run the model
and<00:35:03.180><c> here</c><00:35:03.420><c> we</c><00:35:03.720><c> can</c><00:35:03.900><c> inspect</c><00:35:04.380><c> I</c><00:35:05.220><c> have</c><00:35:05.400><c> a</c><00:35:05.640><c> little</c>

00:35:06.050 --> 00:35:06.060 align:start position:0%
and here we can inspect I have a little
 

00:35:06.060 --> 00:35:08.030 align:start position:0%
and here we can inspect I have a little
code<00:35:06.359><c> snippet</c><00:35:06.720><c> here</c><00:35:06.900><c> where</c><00:35:07.320><c> I</c><00:35:07.560><c> iterate</c><00:35:07.920><c> over</c>

00:35:08.030 --> 00:35:08.040 align:start position:0%
code snippet here where I iterate over
 

00:35:08.040 --> 00:35:11.510 align:start position:0%
code snippet here where I iterate over
all<00:35:08.220><c> the</c><00:35:08.339><c> layers</c><00:35:08.640><c> I</c><00:35:09.300><c> print</c><00:35:09.540><c> the</c><00:35:10.140><c> name</c><00:35:10.440><c> of</c><00:35:11.099><c> this</c>

00:35:11.510 --> 00:35:11.520 align:start position:0%
all the layers I print the name of this
 

00:35:11.520 --> 00:35:14.750 align:start position:0%
all the layers I print the name of this
class<00:35:12.300><c> and</c><00:35:13.140><c> the</c><00:35:13.560><c> shape</c>

00:35:14.750 --> 00:35:14.760 align:start position:0%
class and the shape
 

00:35:14.760 --> 00:35:17.630 align:start position:0%
class and the shape
and<00:35:15.300><c> so</c><00:35:15.540><c> we</c><00:35:16.200><c> see</c><00:35:16.380><c> the</c><00:35:16.560><c> shapes</c><00:35:16.920><c> as</c><00:35:17.339><c> we</c><00:35:17.520><c> expect</c>

00:35:17.630 --> 00:35:17.640 align:start position:0%
and so we see the shapes as we expect
 

00:35:17.640 --> 00:35:19.970 align:start position:0%
and so we see the shapes as we expect
them<00:35:17.940><c> after</c><00:35:18.180><c> every</c><00:35:18.540><c> single</c><00:35:18.900><c> layer</c><00:35:19.619><c> in</c><00:35:19.740><c> the</c><00:35:19.859><c> top</c>

00:35:19.970 --> 00:35:19.980 align:start position:0%
them after every single layer in the top
 

00:35:19.980 --> 00:35:22.849 align:start position:0%
them after every single layer in the top
bit<00:35:20.220><c> so</c><00:35:21.180><c> now</c><00:35:21.359><c> let's</c><00:35:21.720><c> try</c><00:35:21.960><c> to</c><00:35:22.079><c> restructure</c><00:35:22.740><c> it</c>

00:35:22.849 --> 00:35:22.859 align:start position:0%
bit so now let's try to restructure it
 

00:35:22.859 --> 00:35:25.370 align:start position:0%
bit so now let's try to restructure it
using<00:35:23.220><c> our</c><00:35:23.400><c> flattened</c><00:35:23.940><c> consecutive</c><00:35:24.359><c> and</c><00:35:25.200><c> do</c>

00:35:25.370 --> 00:35:25.380 align:start position:0%
using our flattened consecutive and do
 

00:35:25.380 --> 00:35:28.310 align:start position:0%
using our flattened consecutive and do
it<00:35:25.560><c> hierarchically</c><00:35:26.700><c> so</c><00:35:27.119><c> in</c><00:35:27.300><c> particular</c>

00:35:28.310 --> 00:35:28.320 align:start position:0%
it hierarchically so in particular
 

00:35:28.320 --> 00:35:30.410 align:start position:0%
it hierarchically so in particular
we<00:35:28.740><c> want</c><00:35:28.859><c> to</c><00:35:28.980><c> flatten</c><00:35:29.339><c> consecutive</c><00:35:29.880><c> not</c><00:35:30.240><c> just</c>

00:35:30.410 --> 00:35:30.420 align:start position:0%
we want to flatten consecutive not just
 

00:35:30.420 --> 00:35:33.050 align:start position:0%
we want to flatten consecutive not just
not<00:35:30.720><c> block</c><00:35:30.960><c> size</c><00:35:31.260><c> but</c><00:35:31.800><c> just</c><00:35:32.040><c> two</c>

00:35:33.050 --> 00:35:33.060 align:start position:0%
not block size but just two
 

00:35:33.060 --> 00:35:34.790 align:start position:0%
not block size but just two
and<00:35:33.480><c> then</c><00:35:33.599><c> we</c><00:35:33.720><c> want</c><00:35:33.839><c> to</c><00:35:34.020><c> process</c><00:35:34.320><c> this</c><00:35:34.560><c> with</c>

00:35:34.790 --> 00:35:34.800 align:start position:0%
and then we want to process this with
 

00:35:34.800 --> 00:35:37.130 align:start position:0%
and then we want to process this with
linear<00:35:35.160><c> now</c><00:35:35.820><c> then</c><00:35:36.000><c> the</c><00:35:36.119><c> number</c><00:35:36.480><c> of</c><00:35:36.660><c> inputs</c><00:35:37.020><c> to</c>

00:35:37.130 --> 00:35:37.140 align:start position:0%
linear now then the number of inputs to
 

00:35:37.140 --> 00:35:38.930 align:start position:0%
linear now then the number of inputs to
this<00:35:37.260><c> linear</c><00:35:37.619><c> will</c><00:35:37.800><c> not</c><00:35:37.920><c> be</c><00:35:38.160><c> an</c><00:35:38.400><c> embed</c><00:35:38.700><c> times</c>

00:35:38.930 --> 00:35:38.940 align:start position:0%
this linear will not be an embed times
 

00:35:38.940 --> 00:35:41.030 align:start position:0%
this linear will not be an embed times
block<00:35:39.180><c> size</c><00:35:39.420><c> it</c><00:35:40.020><c> will</c><00:35:40.140><c> now</c><00:35:40.260><c> only</c><00:35:40.440><c> be</c><00:35:40.560><c> n</c><00:35:40.740><c> embed</c>

00:35:41.030 --> 00:35:41.040 align:start position:0%
block size it will now only be n embed
 

00:35:41.040 --> 00:35:42.650 align:start position:0%
block size it will now only be n embed
times<00:35:41.400><c> two</c>

00:35:42.650 --> 00:35:42.660 align:start position:0%
times two
 

00:35:42.660 --> 00:35:44.270 align:start position:0%
times two
20.

00:35:44.270 --> 00:35:44.280 align:start position:0%
20.
 

00:35:44.280 --> 00:35:46.609 align:start position:0%
20.
this<00:35:44.640><c> goes</c><00:35:44.940><c> through</c><00:35:45.060><c> the</c><00:35:45.240><c> first</c><00:35:45.359><c> layer</c><00:35:46.200><c> and</c>

00:35:46.609 --> 00:35:46.619 align:start position:0%
this goes through the first layer and
 

00:35:46.619 --> 00:35:48.470 align:start position:0%
this goes through the first layer and
now<00:35:46.740><c> we</c><00:35:46.920><c> can</c><00:35:47.099><c> in</c><00:35:47.400><c> principle</c><00:35:47.760><c> just</c><00:35:47.940><c> copy</c><00:35:48.240><c> paste</c>

00:35:48.470 --> 00:35:48.480 align:start position:0%
now we can in principle just copy paste
 

00:35:48.480 --> 00:35:49.790 align:start position:0%
now we can in principle just copy paste
this

00:35:49.790 --> 00:35:49.800 align:start position:0%
this
 

00:35:49.800 --> 00:35:51.530 align:start position:0%
this
now<00:35:50.280><c> the</c><00:35:50.520><c> next</c><00:35:50.579><c> linear</c><00:35:50.940><c> layer</c><00:35:51.240><c> should</c><00:35:51.359><c> expect</c>

00:35:51.530 --> 00:35:51.540 align:start position:0%
now the next linear layer should expect
 

00:35:51.540 --> 00:35:53.930 align:start position:0%
now the next linear layer should expect
and<00:35:52.020><c> hidden</c><00:35:52.380><c> times</c><00:35:52.619><c> two</c>

00:35:53.930 --> 00:35:53.940 align:start position:0%
and hidden times two
 

00:35:53.940 --> 00:35:58.670 align:start position:0%
and hidden times two
and<00:35:55.220><c> the</c><00:35:56.220><c> last</c><00:35:56.460><c> piece</c><00:35:57.240><c> of</c><00:35:57.359><c> it</c><00:35:57.480><c> should</c><00:35:58.380><c> expect</c>

00:35:58.670 --> 00:35:58.680 align:start position:0%
and the last piece of it should expect
 

00:35:58.680 --> 00:36:01.490 align:start position:0%
and the last piece of it should expect
and<00:35:59.040><c> it</c><00:35:59.160><c> enters</c><00:35:59.520><c> 2</c><00:35:59.700><c> again</c>

00:36:01.490 --> 00:36:01.500 align:start position:0%
and it enters 2 again
 

00:36:01.500 --> 00:36:03.230 align:start position:0%
and it enters 2 again
so<00:36:02.099><c> this</c><00:36:02.280><c> is</c><00:36:02.400><c> sort</c><00:36:02.579><c> of</c><00:36:02.700><c> like</c><00:36:02.760><c> the</c><00:36:02.940><c> naive</c>

00:36:03.230 --> 00:36:03.240 align:start position:0%
so this is sort of like the naive
 

00:36:03.240 --> 00:36:04.490 align:start position:0%
so this is sort of like the naive
version<00:36:03.480><c> of</c><00:36:03.660><c> it</c>

00:36:04.490 --> 00:36:04.500 align:start position:0%
version of it
 

00:36:04.500 --> 00:36:05.329 align:start position:0%
version of it
um

00:36:05.329 --> 00:36:05.339 align:start position:0%
um
 

00:36:05.339 --> 00:36:07.730 align:start position:0%
um
so<00:36:06.000><c> running</c><00:36:06.240><c> this</c><00:36:06.599><c> we</c><00:36:07.140><c> now</c><00:36:07.260><c> have</c><00:36:07.380><c> a</c><00:36:07.440><c> much</c><00:36:07.619><c> much</c>

00:36:07.730 --> 00:36:07.740 align:start position:0%
so running this we now have a much much
 

00:36:07.740 --> 00:36:09.050 align:start position:0%
so running this we now have a much much
bigger<00:36:08.040><c> model</c>

00:36:09.050 --> 00:36:09.060 align:start position:0%
bigger model
 

00:36:09.060 --> 00:36:10.730 align:start position:0%
bigger model
and<00:36:09.480><c> we</c><00:36:09.540><c> should</c><00:36:09.720><c> be</c><00:36:09.780><c> able</c><00:36:09.900><c> to</c><00:36:10.020><c> basically</c><00:36:10.440><c> just</c>

00:36:10.730 --> 00:36:10.740 align:start position:0%
and we should be able to basically just
 

00:36:10.740 --> 00:36:13.430 align:start position:0%
and we should be able to basically just
forward<00:36:11.280><c> the</c><00:36:11.760><c> model</c>

00:36:13.430 --> 00:36:13.440 align:start position:0%
forward the model
 

00:36:13.440 --> 00:36:16.490 align:start position:0%
forward the model
and<00:36:14.099><c> now</c><00:36:14.400><c> we</c><00:36:14.579><c> can</c><00:36:14.700><c> inspect</c><00:36:15.119><c> uh</c><00:36:15.720><c> the</c><00:36:15.960><c> numbers</c><00:36:16.200><c> in</c>

00:36:16.490 --> 00:36:16.500 align:start position:0%
and now we can inspect uh the numbers in
 

00:36:16.500 --> 00:36:17.690 align:start position:0%
and now we can inspect uh the numbers in
between

00:36:17.690 --> 00:36:17.700 align:start position:0%
between
 

00:36:17.700 --> 00:36:19.609 align:start position:0%
between
so<00:36:18.060><c> four</c><00:36:18.240><c> byte</c><00:36:18.599><c> by</c><00:36:18.720><c> 20</c>

00:36:19.609 --> 00:36:19.619 align:start position:0%
so four byte by 20
 

00:36:19.619 --> 00:36:21.410 align:start position:0%
so four byte by 20
was<00:36:19.920><c> Platinum</c><00:36:20.339><c> consecutively</c><00:36:20.820><c> into</c><00:36:21.119><c> four</c><00:36:21.300><c> by</c>

00:36:21.410 --> 00:36:21.420 align:start position:0%
was Platinum consecutively into four by
 

00:36:21.420 --> 00:36:23.089 align:start position:0%
was Platinum consecutively into four by
four<00:36:21.599><c> by</c><00:36:21.780><c> Twenty</c>

00:36:23.089 --> 00:36:23.099 align:start position:0%
four by Twenty
 

00:36:23.099 --> 00:36:24.950 align:start position:0%
four by Twenty
this<00:36:23.520><c> was</c><00:36:23.640><c> projected</c><00:36:24.119><c> into</c><00:36:24.300><c> four</c><00:36:24.480><c> by</c><00:36:24.660><c> four</c><00:36:24.780><c> by</c>

00:36:24.950 --> 00:36:24.960 align:start position:0%
this was projected into four by four by
 

00:36:24.960 --> 00:36:26.510 align:start position:0%
this was projected into four by four by
two<00:36:25.140><c> hundred</c>

00:36:26.510 --> 00:36:26.520 align:start position:0%
two hundred
 

00:36:26.520 --> 00:36:29.930 align:start position:0%
two hundred
and<00:36:27.180><c> then</c><00:36:27.420><c> bash</c><00:36:28.140><c> storm</c><00:36:28.500><c> just</c><00:36:29.280><c> worked</c><00:36:29.579><c> out</c><00:36:29.820><c> of</c>

00:36:29.930 --> 00:36:29.940 align:start position:0%
and then bash storm just worked out of
 

00:36:29.940 --> 00:36:31.490 align:start position:0%
and then bash storm just worked out of
the<00:36:30.000><c> box</c><00:36:30.119><c> we</c><00:36:30.480><c> have</c><00:36:30.599><c> to</c><00:36:30.720><c> verify</c><00:36:31.020><c> that</c><00:36:31.140><c> bastron</c>

00:36:31.490 --> 00:36:31.500 align:start position:0%
the box we have to verify that bastron
 

00:36:31.500 --> 00:36:32.990 align:start position:0%
the box we have to verify that bastron
does<00:36:31.740><c> the</c><00:36:31.920><c> correct</c><00:36:32.160><c> thing</c><00:36:32.339><c> even</c><00:36:32.640><c> though</c><00:36:32.820><c> it</c>

00:36:32.990 --> 00:36:33.000 align:start position:0%
does the correct thing even though it
 

00:36:33.000 --> 00:36:34.310 align:start position:0%
does the correct thing even though it
takes<00:36:33.180><c> a</c><00:36:33.359><c> three-dimensional</c><00:36:33.839><c> impedance</c><00:36:34.200><c> that</c>

00:36:34.310 --> 00:36:34.320 align:start position:0%
takes a three-dimensional impedance that
 

00:36:34.320 --> 00:36:36.050 align:start position:0%
takes a three-dimensional impedance that
are<00:36:34.440><c> two</c><00:36:34.560><c> dimensional</c><00:36:34.920><c> input</c>

00:36:36.050 --> 00:36:36.060 align:start position:0%
are two dimensional input
 

00:36:36.060 --> 00:36:38.510 align:start position:0%
are two dimensional input
then<00:36:36.780><c> we</c><00:36:36.960><c> have</c><00:36:37.079><c> 10h</c><00:36:37.560><c> which</c><00:36:37.800><c> is</c><00:36:37.920><c> element</c><00:36:38.040><c> wise</c>

00:36:38.510 --> 00:36:38.520 align:start position:0%
then we have 10h which is element wise
 

00:36:38.520 --> 00:36:41.450 align:start position:0%
then we have 10h which is element wise
then<00:36:39.180><c> we</c><00:36:39.420><c> crushed</c><00:36:39.900><c> it</c><00:36:40.079><c> again</c><00:36:40.380><c> so</c><00:36:41.160><c> if</c><00:36:41.280><c> we</c>

00:36:41.450 --> 00:36:41.460 align:start position:0%
then we crushed it again so if we
 

00:36:41.460 --> 00:36:42.890 align:start position:0%
then we crushed it again so if we
flatten<00:36:41.760><c> consecutively</c><00:36:42.300><c> and</c><00:36:42.480><c> ended</c><00:36:42.660><c> up</c><00:36:42.780><c> with</c>

00:36:42.890 --> 00:36:42.900 align:start position:0%
flatten consecutively and ended up with
 

00:36:42.900 --> 00:36:45.109 align:start position:0%
flatten consecutively and ended up with
a<00:36:43.020><c> four</c><00:36:43.079><c> by</c><00:36:43.260><c> two</c><00:36:43.560><c> by</c><00:36:43.800><c> 400</c><00:36:44.280><c> now</c>

00:36:45.109 --> 00:36:45.119 align:start position:0%
a four by two by 400 now
 

00:36:45.119 --> 00:36:47.150 align:start position:0%
a four by two by 400 now
then<00:36:45.599><c> linear</c><00:36:46.020><c> brought</c><00:36:46.260><c> it</c><00:36:46.380><c> back</c><00:36:46.500><c> down</c><00:36:46.619><c> to</c><00:36:46.800><c> 200</c>

00:36:47.150 --> 00:36:47.160 align:start position:0%
then linear brought it back down to 200
 

00:36:47.160 --> 00:36:50.390 align:start position:0%
then linear brought it back down to 200
batch<00:36:47.940><c> room</c><00:36:48.119><c> 10h</c><00:36:48.540><c> and</c><00:36:49.200><c> lastly</c><00:36:49.560><c> we</c><00:36:49.920><c> get</c><00:36:50.040><c> a</c><00:36:50.160><c> 4</c><00:36:50.220><c> by</c>

00:36:50.390 --> 00:36:50.400 align:start position:0%
batch room 10h and lastly we get a 4 by
 

00:36:50.400 --> 00:36:52.250 align:start position:0%
batch room 10h and lastly we get a 4 by
400<00:36:50.820><c> and</c><00:36:51.359><c> we</c><00:36:51.480><c> see</c><00:36:51.599><c> that</c><00:36:51.780><c> the</c><00:36:51.900><c> flattened</c>

00:36:52.250 --> 00:36:52.260 align:start position:0%
400 and we see that the flattened
 

00:36:52.260 --> 00:36:54.710 align:start position:0%
400 and we see that the flattened
consecutive<00:36:52.680><c> for</c><00:36:52.980><c> the</c><00:36:53.160><c> last</c><00:36:53.280><c> flatten</c><00:36:53.700><c> here</c><00:36:53.880><c> uh</c>

00:36:54.710 --> 00:36:54.720 align:start position:0%
consecutive for the last flatten here uh
 

00:36:54.720 --> 00:36:57.349 align:start position:0%
consecutive for the last flatten here uh
it<00:36:54.960><c> squeezed</c><00:36:55.380><c> out</c><00:36:55.500><c> that</c><00:36:55.920><c> dimension</c><00:36:56.520><c> of</c><00:36:56.700><c> one</c><00:36:56.820><c> so</c>

00:36:57.349 --> 00:36:57.359 align:start position:0%
it squeezed out that dimension of one so
 

00:36:57.359 --> 00:36:58.790 align:start position:0%
it squeezed out that dimension of one so
we<00:36:57.540><c> only</c><00:36:57.660><c> ended</c><00:36:57.960><c> up</c><00:36:58.079><c> with</c><00:36:58.200><c> four</c><00:36:58.320><c> by</c><00:36:58.500><c> four</c>

00:36:58.790 --> 00:36:58.800 align:start position:0%
we only ended up with four by four
 

00:36:58.800 --> 00:37:00.970 align:start position:0%
we only ended up with four by four
hundred<00:36:59.040><c> and</c><00:36:59.579><c> then</c><00:36:59.760><c> linear</c><00:37:00.119><c> Bachelor</c><00:37:00.540><c> on</c><00:37:00.660><c> 10h</c>

00:37:00.970 --> 00:37:00.980 align:start position:0%
hundred and then linear Bachelor on 10h
 

00:37:00.980 --> 00:37:04.069 align:start position:0%
hundred and then linear Bachelor on 10h
and<00:37:01.980><c> uh</c><00:37:02.400><c> the</c><00:37:02.700><c> last</c><00:37:02.880><c> linear</c><00:37:03.540><c> layer</c><00:37:03.780><c> to</c><00:37:03.900><c> get</c><00:37:03.960><c> our</c>

00:37:04.069 --> 00:37:04.079 align:start position:0%
and uh the last linear layer to get our
 

00:37:04.079 --> 00:37:06.530 align:start position:0%
and uh the last linear layer to get our
logents<00:37:04.680><c> and</c><00:37:05.280><c> so</c><00:37:05.400><c> The</c><00:37:05.520><c> Lodges</c><00:37:05.820><c> end</c><00:37:06.000><c> up</c><00:37:06.119><c> in</c><00:37:06.300><c> the</c>

00:37:06.530 --> 00:37:06.540 align:start position:0%
logents and so The Lodges end up in the
 

00:37:06.540 --> 00:37:08.690 align:start position:0%
logents and so The Lodges end up in the
same<00:37:06.720><c> shape</c><00:37:06.960><c> as</c><00:37:07.140><c> they</c><00:37:07.260><c> were</c><00:37:07.380><c> before</c><00:37:07.619><c> but</c><00:37:08.520><c> now</c>

00:37:08.690 --> 00:37:08.700 align:start position:0%
same shape as they were before but now
 

00:37:08.700 --> 00:37:10.430 align:start position:0%
same shape as they were before but now
we<00:37:08.880><c> actually</c><00:37:09.000><c> have</c><00:37:09.240><c> a</c><00:37:09.480><c> nice</c><00:37:09.599><c> three</c><00:37:10.079><c> layer</c>

00:37:10.430 --> 00:37:10.440 align:start position:0%
we actually have a nice three layer
 

00:37:10.440 --> 00:37:12.890 align:start position:0%
we actually have a nice three layer
neural<00:37:10.980><c> nut</c><00:37:11.099><c> and</c><00:37:11.760><c> it</c><00:37:11.880><c> basically</c><00:37:12.240><c> corresponds</c>

00:37:12.890 --> 00:37:12.900 align:start position:0%
neural nut and it basically corresponds
 

00:37:12.900 --> 00:37:15.650 align:start position:0%
neural nut and it basically corresponds
to<00:37:13.320><c> whoops</c><00:37:13.920><c> sorry</c><00:37:14.220><c> it</c><00:37:14.880><c> basically</c><00:37:15.180><c> corresponds</c>

00:37:15.650 --> 00:37:15.660 align:start position:0%
to whoops sorry it basically corresponds
 

00:37:15.660 --> 00:37:18.710 align:start position:0%
to whoops sorry it basically corresponds
exactly<00:37:16.079><c> to</c><00:37:16.320><c> this</c><00:37:16.560><c> network</c><00:37:16.800><c> now</c><00:37:17.359><c> except</c><00:37:18.359><c> only</c>

00:37:18.710 --> 00:37:18.720 align:start position:0%
exactly to this network now except only
 

00:37:18.720 --> 00:37:20.089 align:start position:0%
exactly to this network now except only
this<00:37:19.020><c> piece</c><00:37:19.320><c> here</c><00:37:19.440><c> because</c><00:37:19.619><c> we</c><00:37:19.800><c> only</c><00:37:19.920><c> have</c>

00:37:20.089 --> 00:37:20.099 align:start position:0%
this piece here because we only have
 

00:37:20.099 --> 00:37:22.130 align:start position:0%
this piece here because we only have
three<00:37:20.280><c> layers</c><00:37:20.660><c> whereas</c><00:37:21.660><c> here</c><00:37:21.780><c> in</c><00:37:22.079><c> this</c>

00:37:22.130 --> 00:37:22.140 align:start position:0%
three layers whereas here in this
 

00:37:22.140 --> 00:37:25.250 align:start position:0%
three layers whereas here in this
example<00:37:22.440><c> there's</c><00:37:22.800><c> uh</c><00:37:23.220><c> four</c><00:37:23.640><c> layers</c><00:37:24.180><c> with</c><00:37:25.140><c> the</c>

00:37:25.250 --> 00:37:25.260 align:start position:0%
example there's uh four layers with the
 

00:37:25.260 --> 00:37:28.069 align:start position:0%
example there's uh four layers with the
total<00:37:25.500><c> receptive</c><00:37:25.920><c> field</c><00:37:26.099><c> size</c><00:37:26.400><c> of</c><00:37:27.079><c> 16</c>

00:37:28.069 --> 00:37:28.079 align:start position:0%
total receptive field size of 16
 

00:37:28.079 --> 00:37:29.510 align:start position:0%
total receptive field size of 16
characters<00:37:28.380><c> instead</c><00:37:28.980><c> of</c><00:37:29.040><c> just</c><00:37:29.220><c> eight</c>

00:37:29.510 --> 00:37:29.520 align:start position:0%
characters instead of just eight
 

00:37:29.520 --> 00:37:32.569 align:start position:0%
characters instead of just eight
characters<00:37:29.820><c> so</c><00:37:30.660><c> the</c><00:37:30.780><c> block</c><00:37:30.960><c> size</c><00:37:31.140><c> here</c><00:37:31.380><c> is</c><00:37:31.500><c> 16.</c>

00:37:32.569 --> 00:37:32.579 align:start position:0%
characters so the block size here is 16.
 

00:37:32.579 --> 00:37:34.730 align:start position:0%
characters so the block size here is 16.
so<00:37:33.300><c> this</c><00:37:33.900><c> piece</c><00:37:34.079><c> of</c><00:37:34.200><c> it's</c><00:37:34.320><c> basically</c>

00:37:34.730 --> 00:37:34.740 align:start position:0%
so this piece of it's basically
 

00:37:34.740 --> 00:37:36.650 align:start position:0%
so this piece of it's basically
implemented<00:37:35.460><c> here</c>

00:37:36.650 --> 00:37:36.660 align:start position:0%
implemented here
 

00:37:36.660 --> 00:37:38.510 align:start position:0%
implemented here
um<00:37:36.720><c> now</c><00:37:37.320><c> we</c><00:37:37.560><c> just</c><00:37:37.680><c> have</c><00:37:37.800><c> to</c><00:37:37.920><c> kind</c><00:37:38.040><c> of</c><00:37:38.160><c> figure</c>

00:37:38.510 --> 00:37:38.520 align:start position:0%
um now we just have to kind of figure
 

00:37:38.520 --> 00:37:40.790 align:start position:0%
um now we just have to kind of figure
out<00:37:38.700><c> some</c><00:37:39.000><c> good</c><00:37:39.300><c> Channel</c><00:37:39.780><c> numbers</c><00:37:40.079><c> to</c><00:37:40.680><c> use</c>

00:37:40.790 --> 00:37:40.800 align:start position:0%
out some good Channel numbers to use
 

00:37:40.800 --> 00:37:42.770 align:start position:0%
out some good Channel numbers to use
here<00:37:41.099><c> now</c><00:37:41.700><c> in</c><00:37:41.880><c> particular</c><00:37:42.180><c> I</c><00:37:42.420><c> changed</c><00:37:42.720><c> the</c>

00:37:42.770 --> 00:37:42.780 align:start position:0%
here now in particular I changed the
 

00:37:42.780 --> 00:37:45.710 align:start position:0%
here now in particular I changed the
number<00:37:42.900><c> of</c><00:37:43.079><c> hidden</c><00:37:43.440><c> units</c><00:37:44.160><c> to</c><00:37:44.280><c> be</c><00:37:44.520><c> 68</c><00:37:45.000><c> in</c><00:37:45.599><c> this</c>

00:37:45.710 --> 00:37:45.720 align:start position:0%
number of hidden units to be 68 in this
 

00:37:45.720 --> 00:37:47.750 align:start position:0%
number of hidden units to be 68 in this
architecture<00:37:46.200><c> because</c><00:37:46.680><c> when</c><00:37:46.859><c> I</c><00:37:46.980><c> use</c><00:37:47.099><c> 68</c><00:37:47.460><c> the</c>

00:37:47.750 --> 00:37:47.760 align:start position:0%
architecture because when I use 68 the
 

00:37:47.760 --> 00:37:49.730 align:start position:0%
architecture because when I use 68 the
number<00:37:47.940><c> of</c><00:37:48.060><c> parameters</c><00:37:48.480><c> comes</c><00:37:48.780><c> out</c><00:37:48.839><c> to</c><00:37:48.960><c> be</c><00:37:49.079><c> 22</c>

00:37:49.730 --> 00:37:49.740 align:start position:0%
number of parameters comes out to be 22
 

00:37:49.740 --> 00:37:52.010 align:start position:0%
number of parameters comes out to be 22
000<00:37:49.920><c> so</c><00:37:50.579><c> that's</c><00:37:50.940><c> exactly</c><00:37:51.480><c> the</c><00:37:51.599><c> same</c><00:37:51.720><c> that</c><00:37:51.900><c> we</c>

00:37:52.010 --> 00:37:52.020 align:start position:0%
000 so that's exactly the same that we
 

00:37:52.020 --> 00:37:54.109 align:start position:0%
000 so that's exactly the same that we
had<00:37:52.140><c> before</c><00:37:52.320><c> and</c><00:37:52.980><c> we</c><00:37:53.280><c> have</c><00:37:53.400><c> the</c><00:37:53.640><c> same</c><00:37:53.820><c> amount</c>

00:37:54.109 --> 00:37:54.119 align:start position:0%
had before and we have the same amount
 

00:37:54.119 --> 00:37:56.150 align:start position:0%
had before and we have the same amount
of<00:37:54.300><c> capacity</c><00:37:54.960><c> at</c><00:37:55.200><c> this</c><00:37:55.380><c> neural</c><00:37:55.619><c> net</c><00:37:55.800><c> in</c><00:37:55.980><c> terms</c>

00:37:56.150 --> 00:37:56.160 align:start position:0%
of capacity at this neural net in terms
 

00:37:56.160 --> 00:37:57.770 align:start position:0%
of capacity at this neural net in terms
of<00:37:56.220><c> the</c><00:37:56.339><c> number</c><00:37:56.460><c> of</c><00:37:56.579><c> parameters</c><00:37:56.940><c> but</c><00:37:57.660><c> the</c>

00:37:57.770 --> 00:37:57.780 align:start position:0%
of the number of parameters but the
 

00:37:57.780 --> 00:37:59.150 align:start position:0%
of the number of parameters but the
question<00:37:57.900><c> is</c><00:37:58.079><c> whether</c><00:37:58.260><c> we</c><00:37:58.560><c> are</c><00:37:58.680><c> utilizing</c>

00:37:59.150 --> 00:37:59.160 align:start position:0%
question is whether we are utilizing
 

00:37:59.160 --> 00:38:00.410 align:start position:0%
question is whether we are utilizing
those<00:37:59.339><c> parameters</c><00:37:59.640><c> in</c><00:37:59.880><c> a</c><00:38:00.000><c> more</c><00:38:00.119><c> efficient</c>

00:38:00.410 --> 00:38:00.420 align:start position:0%
those parameters in a more efficient
 

00:38:00.420 --> 00:38:03.589 align:start position:0%
those parameters in a more efficient
architecture<00:38:01.440><c> so</c><00:38:01.920><c> what</c><00:38:02.040><c> I</c><00:38:02.220><c> did</c><00:38:02.280><c> then</c><00:38:02.520><c> is</c><00:38:02.700><c> I</c><00:38:03.000><c> got</c>

00:38:03.589 --> 00:38:03.599 align:start position:0%
architecture so what I did then is I got
 

00:38:03.599 --> 00:38:05.569 align:start position:0%
architecture so what I did then is I got
rid<00:38:03.780><c> of</c><00:38:03.900><c> a</c><00:38:04.020><c> lot</c><00:38:04.140><c> of</c><00:38:04.260><c> the</c><00:38:04.440><c> debugging</c><00:38:05.160><c> cells</c><00:38:05.460><c> here</c>

00:38:05.569 --> 00:38:05.579 align:start position:0%
rid of a lot of the debugging cells here
 

00:38:05.579 --> 00:38:07.670 align:start position:0%
rid of a lot of the debugging cells here
and<00:38:05.880><c> I</c><00:38:06.000><c> rerun</c><00:38:06.420><c> the</c><00:38:06.480><c> optimization</c><00:38:06.960><c> and</c>

00:38:07.670 --> 00:38:07.680 align:start position:0%
and I rerun the optimization and
 

00:38:07.680 --> 00:38:09.829 align:start position:0%
and I rerun the optimization and
scrolling<00:38:07.980><c> down</c><00:38:08.099><c> to</c><00:38:08.280><c> the</c><00:38:08.400><c> result</c><00:38:08.579><c> we</c><00:38:09.420><c> see</c><00:38:09.599><c> that</c>

00:38:09.829 --> 00:38:09.839 align:start position:0%
scrolling down to the result we see that
 

00:38:09.839 --> 00:38:12.410 align:start position:0%
scrolling down to the result we see that
we<00:38:10.079><c> get</c><00:38:10.280><c> the</c><00:38:11.280><c> identical</c><00:38:11.640><c> performance</c><00:38:12.000><c> roughly</c>

00:38:12.410 --> 00:38:12.420 align:start position:0%
we get the identical performance roughly
 

00:38:12.420 --> 00:38:15.890 align:start position:0%
we get the identical performance roughly
so<00:38:13.200><c> our</c><00:38:13.440><c> validation</c><00:38:13.800><c> loss</c><00:38:14.160><c> now</c><00:38:14.280><c> is</c><00:38:14.460><c> 2.029</c><00:38:15.359><c> and</c>

00:38:15.890 --> 00:38:15.900 align:start position:0%
so our validation loss now is 2.029 and
 

00:38:15.900 --> 00:38:18.530 align:start position:0%
so our validation loss now is 2.029 and
previously<00:38:16.260><c> it</c><00:38:16.380><c> was</c><00:38:16.500><c> 2.027</c><00:38:17.339><c> so</c><00:38:18.060><c> controlling</c>

00:38:18.530 --> 00:38:18.540 align:start position:0%
previously it was 2.027 so controlling
 

00:38:18.540 --> 00:38:20.089 align:start position:0%
previously it was 2.027 so controlling
for<00:38:18.660><c> the</c><00:38:18.780><c> number</c><00:38:18.900><c> of</c><00:38:19.020><c> parameters</c><00:38:19.380><c> changing</c>

00:38:20.089 --> 00:38:20.099 align:start position:0%
for the number of parameters changing
 

00:38:20.099 --> 00:38:21.530 align:start position:0%
for the number of parameters changing
from<00:38:20.220><c> the</c><00:38:20.400><c> flat</c><00:38:20.640><c> to</c><00:38:20.700><c> hierarchical</c><00:38:21.119><c> is</c><00:38:21.300><c> not</c>

00:38:21.530 --> 00:38:21.540 align:start position:0%
from the flat to hierarchical is not
 

00:38:21.540 --> 00:38:23.390 align:start position:0%
from the flat to hierarchical is not
giving<00:38:21.660><c> us</c><00:38:21.839><c> anything</c><00:38:22.079><c> yet</c>

00:38:23.390 --> 00:38:23.400 align:start position:0%
giving us anything yet
 

00:38:23.400 --> 00:38:25.490 align:start position:0%
giving us anything yet
that<00:38:23.940><c> said</c><00:38:24.119><c> there</c><00:38:24.420><c> are</c><00:38:24.540><c> two</c><00:38:24.660><c> things</c>

00:38:25.490 --> 00:38:25.500 align:start position:0%
that said there are two things
 

00:38:25.500 --> 00:38:27.650 align:start position:0%
that said there are two things
um<00:38:25.560><c> to</c><00:38:26.160><c> point</c><00:38:26.280><c> out</c><00:38:26.460><c> number</c><00:38:27.000><c> one</c><00:38:27.240><c> we</c><00:38:27.480><c> didn't</c>

00:38:27.650 --> 00:38:27.660 align:start position:0%
um to point out number one we didn't
 

00:38:27.660 --> 00:38:29.870 align:start position:0%
um to point out number one we didn't
really<00:38:27.780><c> torture</c><00:38:28.260><c> the</c><00:38:29.160><c> um</c><00:38:29.220><c> architecture</c><00:38:29.700><c> here</c>

00:38:29.870 --> 00:38:29.880 align:start position:0%
really torture the um architecture here
 

00:38:29.880 --> 00:38:31.190 align:start position:0%
really torture the um architecture here
very<00:38:30.060><c> much</c><00:38:30.240><c> this</c><00:38:30.420><c> is</c><00:38:30.540><c> just</c><00:38:30.660><c> my</c><00:38:30.839><c> first</c><00:38:30.960><c> guess</c>

00:38:31.190 --> 00:38:31.200 align:start position:0%
very much this is just my first guess
 

00:38:31.200 --> 00:38:33.109 align:start position:0%
very much this is just my first guess
and<00:38:31.920><c> there's</c><00:38:32.099><c> a</c><00:38:32.280><c> bunch</c><00:38:32.400><c> of</c><00:38:32.460><c> hyper</c><00:38:32.760><c> parameters</c>

00:38:33.109 --> 00:38:33.119 align:start position:0%
and there's a bunch of hyper parameters
 

00:38:33.119 --> 00:38:35.030 align:start position:0%
and there's a bunch of hyper parameters
search<00:38:33.300><c> that</c><00:38:33.540><c> we</c><00:38:33.660><c> could</c><00:38:33.780><c> do</c><00:38:33.900><c> in</c><00:38:34.440><c> order</c><00:38:34.619><c> in</c>

00:38:35.030 --> 00:38:35.040 align:start position:0%
search that we could do in order in
 

00:38:35.040 --> 00:38:37.130 align:start position:0%
search that we could do in order in
terms<00:38:35.220><c> of</c><00:38:35.339><c> how</c><00:38:35.579><c> we</c><00:38:35.760><c> allocate</c><00:38:36.180><c> uh</c><00:38:36.660><c> our</c><00:38:36.900><c> budget</c>

00:38:37.130 --> 00:38:37.140 align:start position:0%
terms of how we allocate uh our budget
 

00:38:37.140 --> 00:38:39.770 align:start position:0%
terms of how we allocate uh our budget
of<00:38:37.380><c> parameters</c><00:38:37.740><c> to</c><00:38:38.160><c> what</c><00:38:38.339><c> layers</c><00:38:38.700><c> number</c><00:38:39.540><c> two</c>

00:38:39.770 --> 00:38:39.780 align:start position:0%
of parameters to what layers number two
 

00:38:39.780 --> 00:38:42.770 align:start position:0%
of parameters to what layers number two
we<00:38:40.500><c> still</c><00:38:40.680><c> may</c><00:38:40.859><c> have</c><00:38:41.099><c> a</c><00:38:41.640><c> bug</c><00:38:42.119><c> inside</c><00:38:42.540><c> the</c>

00:38:42.770 --> 00:38:42.780 align:start position:0%
we still may have a bug inside the
 

00:38:42.780 --> 00:38:44.690 align:start position:0%
we still may have a bug inside the
bachelor<00:38:43.140><c> 1D</c><00:38:43.500><c> layer</c><00:38:43.920><c> so</c><00:38:44.160><c> let's</c><00:38:44.280><c> take</c><00:38:44.460><c> a</c><00:38:44.579><c> look</c>

00:38:44.690 --> 00:38:44.700 align:start position:0%
bachelor 1D layer so let's take a look
 

00:38:44.700 --> 00:38:45.410 align:start position:0%
bachelor 1D layer so let's take a look
at

00:38:45.410 --> 00:38:45.420 align:start position:0%
at
 

00:38:45.420 --> 00:38:49.550 align:start position:0%
at
um<00:38:45.900><c> uh</c><00:38:46.560><c> that</c><00:38:47.220><c> because</c><00:38:47.880><c> it</c><00:38:48.660><c> runs</c><00:38:48.960><c> but</c><00:38:49.200><c> does</c><00:38:49.380><c> it</c>

00:38:49.550 --> 00:38:49.560 align:start position:0%
um uh that because it runs but does it
 

00:38:49.560 --> 00:38:50.810 align:start position:0%
um uh that because it runs but does it
do<00:38:49.680><c> the</c><00:38:49.800><c> right</c><00:38:49.980><c> thing</c>

00:38:50.810 --> 00:38:50.820 align:start position:0%
do the right thing
 

00:38:50.820 --> 00:38:53.750 align:start position:0%
do the right thing
so<00:38:51.240><c> I</c><00:38:51.359><c> pulled</c><00:38:51.660><c> up</c><00:38:51.720><c> the</c><00:38:52.320><c> layer</c><00:38:52.920><c> inspector</c><00:38:53.520><c> sort</c>

00:38:53.750 --> 00:38:53.760 align:start position:0%
so I pulled up the layer inspector sort
 

00:38:53.760 --> 00:38:55.550 align:start position:0%
so I pulled up the layer inspector sort
of<00:38:53.880><c> that</c><00:38:54.000><c> we</c><00:38:54.180><c> have</c><00:38:54.300><c> here</c><00:38:54.480><c> and</c><00:38:55.020><c> printed</c><00:38:55.320><c> out</c><00:38:55.440><c> the</c>

00:38:55.550 --> 00:38:55.560 align:start position:0%
of that we have here and printed out the
 

00:38:55.560 --> 00:38:57.170 align:start position:0%
of that we have here and printed out the
shape<00:38:55.680><c> along</c><00:38:55.859><c> the</c><00:38:56.099><c> way</c><00:38:56.160><c> and</c><00:38:56.760><c> currently</c><00:38:57.000><c> it</c>

00:38:57.170 --> 00:38:57.180 align:start position:0%
shape along the way and currently it
 

00:38:57.180 --> 00:38:58.730 align:start position:0%
shape along the way and currently it
looks<00:38:57.420><c> like</c><00:38:57.540><c> the</c><00:38:57.839><c> batch</c><00:38:58.020><c> form</c><00:38:58.260><c> is</c><00:38:58.500><c> receiving</c>

00:38:58.730 --> 00:38:58.740 align:start position:0%
looks like the batch form is receiving
 

00:38:58.740 --> 00:39:03.050 align:start position:0%
looks like the batch form is receiving
an<00:38:58.980><c> input</c><00:38:59.220><c> that</c><00:38:59.579><c> is</c><00:38:59.700><c> 32</c><00:39:00.180><c> by</c><00:39:00.420><c> 4</c><00:39:00.720><c> by</c><00:39:01.020><c> 68</c><00:39:01.440><c> right</c><00:39:02.160><c> and</c>

00:39:03.050 --> 00:39:03.060 align:start position:0%
an input that is 32 by 4 by 68 right and
 

00:39:03.060 --> 00:39:04.370 align:start position:0%
an input that is 32 by 4 by 68 right and
here<00:39:03.240><c> on</c><00:39:03.420><c> the</c><00:39:03.540><c> right</c><00:39:03.660><c> I</c><00:39:03.960><c> have</c><00:39:04.079><c> the</c><00:39:04.260><c> current</c>

00:39:04.370 --> 00:39:04.380 align:start position:0%
here on the right I have the current
 

00:39:04.380 --> 00:39:05.810 align:start position:0%
here on the right I have the current
implementation<00:39:04.859><c> of</c><00:39:05.040><c> Bachelor</c><00:39:05.400><c> that</c><00:39:05.579><c> we</c><00:39:05.700><c> have</c>

00:39:05.810 --> 00:39:05.820 align:start position:0%
implementation of Bachelor that we have
 

00:39:05.820 --> 00:39:06.650 align:start position:0%
implementation of Bachelor that we have
right<00:39:05.940><c> now</c>

00:39:06.650 --> 00:39:06.660 align:start position:0%
right now
 

00:39:06.660 --> 00:39:09.410 align:start position:0%
right now
now<00:39:07.140><c> this</c><00:39:07.320><c> bachelor</c><00:39:07.740><c> assumed</c><00:39:08.460><c> in</c><00:39:09.060><c> the</c><00:39:09.180><c> way</c><00:39:09.300><c> we</c>

00:39:09.410 --> 00:39:09.420 align:start position:0%
now this bachelor assumed in the way we
 

00:39:09.420 --> 00:39:11.329 align:start position:0%
now this bachelor assumed in the way we
wrote<00:39:09.599><c> it</c><00:39:09.780><c> and</c><00:39:09.960><c> at</c><00:39:10.079><c> the</c><00:39:10.260><c> time</c><00:39:10.380><c> that</c><00:39:10.920><c> X</c><00:39:11.099><c> is</c>

00:39:11.329 --> 00:39:11.339 align:start position:0%
wrote it and at the time that X is
 

00:39:11.339 --> 00:39:15.170 align:start position:0%
wrote it and at the time that X is
two-dimensional<00:39:11.940><c> so</c><00:39:12.839><c> it</c><00:39:13.500><c> was</c><00:39:13.619><c> n</c><00:39:13.859><c> by</c><00:39:14.099><c> D</c><00:39:14.339><c> where</c><00:39:14.940><c> n</c>

00:39:15.170 --> 00:39:15.180 align:start position:0%
two-dimensional so it was n by D where n
 

00:39:15.180 --> 00:39:17.089 align:start position:0%
two-dimensional so it was n by D where n
was<00:39:15.420><c> the</c><00:39:15.660><c> batch</c><00:39:16.020><c> size</c><00:39:16.260><c> so</c><00:39:16.500><c> that's</c><00:39:16.619><c> why</c><00:39:16.800><c> we</c><00:39:16.980><c> only</c>

00:39:17.089 --> 00:39:17.099 align:start position:0%
was the batch size so that's why we only
 

00:39:17.099 --> 00:39:19.010 align:start position:0%
was the batch size so that's why we only
reduced<00:39:17.700><c> uh</c><00:39:18.180><c> the</c><00:39:18.359><c> mean</c><00:39:18.420><c> and</c><00:39:18.599><c> the</c><00:39:18.780><c> variance</c>

00:39:19.010 --> 00:39:19.020 align:start position:0%
reduced uh the mean and the variance
 

00:39:19.020 --> 00:39:21.650 align:start position:0%
reduced uh the mean and the variance
over<00:39:19.200><c> the</c><00:39:19.440><c> zeroth</c><00:39:19.859><c> dimension</c><00:39:20.400><c> but</c><00:39:21.000><c> now</c><00:39:21.119><c> X</c><00:39:21.359><c> will</c>

00:39:21.650 --> 00:39:21.660 align:start position:0%
over the zeroth dimension but now X will
 

00:39:21.660 --> 00:39:23.510 align:start position:0%
over the zeroth dimension but now X will
basically<00:39:21.960><c> become</c><00:39:22.200><c> three-dimensional</c><00:39:22.920><c> so</c>

00:39:23.510 --> 00:39:23.520 align:start position:0%
basically become three-dimensional so
 

00:39:23.520 --> 00:39:24.530 align:start position:0%
basically become three-dimensional so
what's<00:39:23.640><c> happening</c><00:39:23.940><c> inside</c><00:39:24.000><c> the</c><00:39:24.240><c> bachelor</c>

00:39:24.530 --> 00:39:24.540 align:start position:0%
what's happening inside the bachelor
 

00:39:24.540 --> 00:39:26.450 align:start position:0%
what's happening inside the bachelor
right<00:39:25.020><c> now</c><00:39:25.140><c> and</c><00:39:25.380><c> how</c><00:39:25.560><c> come</c><00:39:25.740><c> it's</c><00:39:25.920><c> working</c><00:39:26.160><c> at</c>

00:39:26.450 --> 00:39:26.460 align:start position:0%
right now and how come it's working at
 

00:39:26.460 --> 00:39:28.730 align:start position:0%
right now and how come it's working at
all<00:39:26.640><c> and</c><00:39:26.820><c> not</c><00:39:26.940><c> giving</c><00:39:27.119><c> any</c><00:39:27.359><c> errors</c><00:39:28.140><c> the</c><00:39:28.560><c> reason</c>

00:39:28.730 --> 00:39:28.740 align:start position:0%
all and not giving any errors the reason
 

00:39:28.740 --> 00:39:29.990 align:start position:0%
all and not giving any errors the reason
for<00:39:28.920><c> that</c><00:39:29.040><c> is</c><00:39:29.160><c> basically</c><00:39:29.460><c> because</c><00:39:29.700><c> everything</c>

00:39:29.990 --> 00:39:30.000 align:start position:0%
for that is basically because everything
 

00:39:30.000 --> 00:39:32.810 align:start position:0%
for that is basically because everything
broadcasts<00:39:30.839><c> properly</c><00:39:31.380><c> but</c><00:39:31.980><c> the</c><00:39:32.099><c> bachelor</c><00:39:32.400><c> is</c>

00:39:32.810 --> 00:39:32.820 align:start position:0%
broadcasts properly but the bachelor is
 

00:39:32.820 --> 00:39:34.970 align:start position:0%
broadcasts properly but the bachelor is
not<00:39:33.060><c> doing</c><00:39:33.359><c> what</c><00:39:33.839><c> we</c><00:39:33.960><c> need</c><00:39:34.140><c> what</c><00:39:34.440><c> we</c><00:39:34.560><c> wanted</c><00:39:34.740><c> to</c>

00:39:34.970 --> 00:39:34.980 align:start position:0%
not doing what we need what we wanted to
 

00:39:34.980 --> 00:39:35.630 align:start position:0%
not doing what we need what we wanted to
do

00:39:35.630 --> 00:39:35.640 align:start position:0%
do
 

00:39:35.640 --> 00:39:37.670 align:start position:0%
do
so<00:39:36.000><c> in</c><00:39:36.180><c> particular</c><00:39:36.540><c> let's</c><00:39:36.960><c> basically</c><00:39:37.380><c> think</c>

00:39:37.670 --> 00:39:37.680 align:start position:0%
so in particular let's basically think
 

00:39:37.680 --> 00:39:38.870 align:start position:0%
so in particular let's basically think
through<00:39:37.920><c> what's</c><00:39:38.220><c> happening</c><00:39:38.520><c> inside</c><00:39:38.700><c> the</c>

00:39:38.870 --> 00:39:38.880 align:start position:0%
through what's happening inside the
 

00:39:38.880 --> 00:39:41.390 align:start position:0%
through what's happening inside the
bathroom<00:39:39.079><c> uh</c><00:39:40.079><c> looking</c><00:39:40.260><c> at</c><00:39:40.440><c> what's</c><00:39:40.680><c> what's</c><00:39:41.099><c> do</c>

00:39:41.390 --> 00:39:41.400 align:start position:0%
bathroom uh looking at what's what's do
 

00:39:41.400 --> 00:39:43.670 align:start position:0%
bathroom uh looking at what's what's do
What's<00:39:41.700><c> Happening</c><00:39:42.000><c> Here</c>

00:39:43.670 --> 00:39:43.680 align:start position:0%
What's Happening Here
 

00:39:43.680 --> 00:39:45.349 align:start position:0%
What's Happening Here
I<00:39:44.160><c> have</c><00:39:44.280><c> the</c><00:39:44.460><c> code</c><00:39:44.579><c> here</c>

00:39:45.349 --> 00:39:45.359 align:start position:0%
I have the code here
 

00:39:45.359 --> 00:39:47.930 align:start position:0%
I have the code here
so<00:39:45.839><c> we're</c><00:39:45.960><c> receiving</c><00:39:46.260><c> an</c><00:39:46.500><c> input</c><00:39:46.800><c> of</c><00:39:47.220><c> 32</c><00:39:47.640><c> by</c><00:39:47.760><c> 4</c>

00:39:47.930 --> 00:39:47.940 align:start position:0%
so we're receiving an input of 32 by 4
 

00:39:47.940 --> 00:39:52.250 align:start position:0%
so we're receiving an input of 32 by 4
by<00:39:48.119><c> 68</c><00:39:48.859><c> and</c><00:39:49.859><c> then</c><00:39:50.040><c> we</c><00:39:50.280><c> are</c><00:39:50.460><c> doing</c><00:39:50.700><c> uh</c><00:39:51.540><c> here</c><00:39:52.020><c> x</c>

00:39:52.250 --> 00:39:52.260 align:start position:0%
by 68 and then we are doing uh here x
 

00:39:52.260 --> 00:39:54.829 align:start position:0%
by 68 and then we are doing uh here x
dot<00:39:52.619><c> mean</c><00:39:52.740><c> here</c><00:39:53.099><c> I</c><00:39:53.280><c> have</c><00:39:53.400><c> e</c><00:39:53.700><c> instead</c><00:39:54.060><c> of</c><00:39:54.180><c> X</c><00:39:54.300><c> but</c>

00:39:54.829 --> 00:39:54.839 align:start position:0%
dot mean here I have e instead of X but
 

00:39:54.839 --> 00:39:57.410 align:start position:0%
dot mean here I have e instead of X but
we're<00:39:55.020><c> doing</c><00:39:55.200><c> the</c><00:39:55.380><c> mean</c><00:39:55.560><c> over</c><00:39:55.859><c> zero</c><00:39:57.060><c> and</c>

00:39:57.410 --> 00:39:57.420 align:start position:0%
we're doing the mean over zero and
 

00:39:57.420 --> 00:39:59.630 align:start position:0%
we're doing the mean over zero and
that's<00:39:57.480><c> actually</c><00:39:57.660><c> giving</c><00:39:57.900><c> us</c><00:39:58.079><c> 1</c><00:39:58.320><c> by</c><00:39:58.500><c> 4</c><00:39:58.740><c> by</c><00:39:58.980><c> 68.</c>

00:39:59.630 --> 00:39:59.640 align:start position:0%
that's actually giving us 1 by 4 by 68.
 

00:39:59.640 --> 00:40:01.310 align:start position:0%
that's actually giving us 1 by 4 by 68.
so<00:39:59.880><c> we're</c><00:40:00.060><c> doing</c><00:40:00.240><c> the</c><00:40:00.359><c> mean</c><00:40:00.540><c> only</c><00:40:00.780><c> over</c><00:40:01.020><c> the</c>

00:40:01.310 --> 00:40:01.320 align:start position:0%
so we're doing the mean only over the
 

00:40:01.320 --> 00:40:03.290 align:start position:0%
so we're doing the mean only over the
very<00:40:01.500><c> first</c><00:40:01.740><c> Dimension</c><00:40:02.280><c> and</c><00:40:02.820><c> it's</c><00:40:03.000><c> giving</c><00:40:03.119><c> us</c>

00:40:03.290 --> 00:40:03.300 align:start position:0%
very first Dimension and it's giving us
 

00:40:03.300 --> 00:40:05.030 align:start position:0%
very first Dimension and it's giving us
a<00:40:03.420><c> mean</c><00:40:03.599><c> and</c><00:40:03.720><c> a</c><00:40:03.900><c> variance</c><00:40:04.200><c> that</c><00:40:04.740><c> still</c>

00:40:05.030 --> 00:40:05.040 align:start position:0%
a mean and a variance that still
 

00:40:05.040 --> 00:40:07.790 align:start position:0%
a mean and a variance that still
maintain<00:40:05.579><c> this</c><00:40:06.300><c> Dimension</c><00:40:06.900><c> here</c>

00:40:07.790 --> 00:40:07.800 align:start position:0%
maintain this Dimension here
 

00:40:07.800 --> 00:40:10.310 align:start position:0%
maintain this Dimension here
so<00:40:08.099><c> these</c><00:40:08.460><c> means</c><00:40:08.700><c> are</c><00:40:08.880><c> only</c><00:40:09.000><c> taking</c><00:40:09.300><c> over</c><00:40:09.780><c> 32</c>

00:40:10.310 --> 00:40:10.320 align:start position:0%
so these means are only taking over 32
 

00:40:10.320 --> 00:40:12.530 align:start position:0%
so these means are only taking over 32
numbers<00:40:10.560><c> in</c><00:40:10.980><c> the</c><00:40:11.099><c> First</c><00:40:11.220><c> Dimension</c><00:40:11.700><c> and</c><00:40:12.480><c> then</c>

00:40:12.530 --> 00:40:12.540 align:start position:0%
numbers in the First Dimension and then
 

00:40:12.540 --> 00:40:14.569 align:start position:0%
numbers in the First Dimension and then
when<00:40:12.660><c> we</c><00:40:12.839><c> perform</c><00:40:13.020><c> this</c><00:40:13.579><c> everything</c>

00:40:14.569 --> 00:40:14.579 align:start position:0%
when we perform this everything
 

00:40:14.579 --> 00:40:16.970 align:start position:0%
when we perform this everything
broadcasts<00:40:15.420><c> correctly</c><00:40:16.079><c> still</c>

00:40:16.970 --> 00:40:16.980 align:start position:0%
broadcasts correctly still
 

00:40:16.980 --> 00:40:20.690 align:start position:0%
broadcasts correctly still
but<00:40:17.460><c> basically</c><00:40:17.700><c> what</c><00:40:17.880><c> ends</c><00:40:18.180><c> up</c><00:40:18.180><c> happening</c><00:40:18.540><c> is</c>

00:40:20.690 --> 00:40:20.700 align:start position:0%
but basically what ends up happening is
 

00:40:20.700 --> 00:40:26.150 align:start position:0%
but basically what ends up happening is
when<00:40:21.180><c> we</c><00:40:21.300><c> also</c><00:40:21.540><c> look</c><00:40:21.660><c> at</c><00:40:21.780><c> the</c><00:40:21.960><c> running</c><00:40:22.020><c> mean</c>

00:40:26.150 --> 00:40:26.160 align:start position:0%
 
 

00:40:26.160 --> 00:40:27.650 align:start position:0%
 
the<00:40:26.579><c> shape</c><00:40:26.700><c> of</c><00:40:26.880><c> it</c><00:40:26.940><c> so</c><00:40:27.180><c> I'm</c><00:40:27.300><c> looking</c><00:40:27.420><c> at</c><00:40:27.540><c> the</c>

00:40:27.650 --> 00:40:27.660 align:start position:0%
the shape of it so I'm looking at the
 

00:40:27.660 --> 00:40:28.970 align:start position:0%
the shape of it so I'm looking at the
model<00:40:27.780><c> that</c><00:40:28.020><c> layers</c><00:40:28.260><c> at</c><00:40:28.380><c> three</c><00:40:28.560><c> which</c><00:40:28.800><c> is</c><00:40:28.920><c> the</c>

00:40:28.970 --> 00:40:28.980 align:start position:0%
model that layers at three which is the
 

00:40:28.980 --> 00:40:30.410 align:start position:0%
model that layers at three which is the
first<00:40:29.099><c> bathroom</c><00:40:29.280><c> layer</c><00:40:29.820><c> and</c><00:40:30.180><c> they're</c><00:40:30.240><c> looking</c>

00:40:30.410 --> 00:40:30.420 align:start position:0%
first bathroom layer and they're looking
 

00:40:30.420 --> 00:40:32.750 align:start position:0%
first bathroom layer and they're looking
at<00:40:30.599><c> whatever</c><00:40:30.720><c> the</c><00:40:31.020><c> running</c><00:40:31.200><c> mean</c><00:40:31.500><c> became</c><00:40:32.220><c> and</c>

00:40:32.750 --> 00:40:32.760 align:start position:0%
at whatever the running mean became and
 

00:40:32.760 --> 00:40:34.130 align:start position:0%
at whatever the running mean became and
its<00:40:33.060><c> shape</c>

00:40:34.130 --> 00:40:34.140 align:start position:0%
its shape
 

00:40:34.140 --> 00:40:35.930 align:start position:0%
its shape
the<00:40:34.560><c> shape</c><00:40:34.740><c> of</c><00:40:34.859><c> this</c><00:40:34.980><c> running</c><00:40:35.099><c> mean</c><00:40:35.400><c> now</c><00:40:35.579><c> is</c><00:40:35.760><c> 1</c>

00:40:35.930 --> 00:40:35.940 align:start position:0%
the shape of this running mean now is 1
 

00:40:35.940 --> 00:40:38.030 align:start position:0%
the shape of this running mean now is 1
by<00:40:36.119><c> 4</c><00:40:36.300><c> by</c><00:40:36.480><c> 68.</c>

00:40:38.030 --> 00:40:38.040 align:start position:0%
by 4 by 68.
 

00:40:38.040 --> 00:40:39.950 align:start position:0%
by 4 by 68.
right<00:40:38.460><c> instead</c><00:40:38.820><c> of</c><00:40:38.940><c> it</c><00:40:39.060><c> being</c>

00:40:39.950 --> 00:40:39.960 align:start position:0%
right instead of it being
 

00:40:39.960 --> 00:40:43.190 align:start position:0%
right instead of it being
um<00:40:40.020><c> you</c><00:40:40.260><c> know</c><00:40:40.320><c> just</c><00:40:40.560><c> a</c><00:40:40.859><c> size</c><00:40:41.220><c> of</c><00:40:41.400><c> dimension</c>

00:40:43.190 --> 00:40:43.200 align:start position:0%
um you know just a size of dimension
 

00:40:43.200 --> 00:40:45.290 align:start position:0%
um you know just a size of dimension
because<00:40:43.500><c> we</c><00:40:43.680><c> have</c><00:40:43.800><c> 68</c><00:40:44.040><c> channels</c><00:40:44.520><c> we</c><00:40:44.880><c> expect</c><00:40:45.060><c> to</c>

00:40:45.290 --> 00:40:45.300 align:start position:0%
because we have 68 channels we expect to
 

00:40:45.300 --> 00:40:47.870 align:start position:0%
because we have 68 channels we expect to
have<00:40:45.420><c> 68</c><00:40:45.980><c> means</c><00:40:46.980><c> and</c><00:40:47.099><c> variances</c><00:40:47.579><c> that</c><00:40:47.760><c> we're</c>

00:40:47.870 --> 00:40:47.880 align:start position:0%
have 68 means and variances that we're
 

00:40:47.880 --> 00:40:49.430 align:start position:0%
have 68 means and variances that we're
maintaining<00:40:48.300><c> but</c><00:40:48.780><c> actually</c><00:40:48.900><c> we</c><00:40:49.200><c> have</c><00:40:49.320><c> an</c>

00:40:49.430 --> 00:40:49.440 align:start position:0%
maintaining but actually we have an
 

00:40:49.440 --> 00:40:51.890 align:start position:0%
maintaining but actually we have an
array<00:40:49.680><c> of</c><00:40:49.859><c> 4</c><00:40:50.040><c> by</c><00:40:50.220><c> 68</c><00:40:50.700><c> and</c><00:40:51.420><c> so</c><00:40:51.540><c> basically</c><00:40:51.780><c> what</c>

00:40:51.890 --> 00:40:51.900 align:start position:0%
array of 4 by 68 and so basically what
 

00:40:51.900 --> 00:40:54.109 align:start position:0%
array of 4 by 68 and so basically what
this<00:40:52.079><c> is</c><00:40:52.200><c> telling</c><00:40:52.440><c> us</c><00:40:52.500><c> is</c><00:40:52.859><c> this</c><00:40:53.400><c> bash</c><00:40:53.640><c> Norm</c><00:40:53.880><c> is</c>

00:40:54.109 --> 00:40:54.119 align:start position:0%
this is telling us is this bash Norm is
 

00:40:54.119 --> 00:40:55.310 align:start position:0%
this is telling us is this bash Norm is
only

00:40:55.310 --> 00:40:55.320 align:start position:0%
only
 

00:40:55.320 --> 00:40:57.170 align:start position:0%
only
this<00:40:55.740><c> bachelor</c><00:40:56.099><c> is</c><00:40:56.339><c> currently</c><00:40:56.640><c> working</c><00:40:56.820><c> in</c>

00:40:57.170 --> 00:40:57.180 align:start position:0%
this bachelor is currently working in
 

00:40:57.180 --> 00:40:58.130 align:start position:0%
this bachelor is currently working in
parallel

00:40:58.130 --> 00:40:58.140 align:start position:0%
parallel
 

00:40:58.140 --> 00:41:01.250 align:start position:0%
parallel
over

00:41:01.250 --> 00:41:01.260 align:start position:0%
 
 

00:41:01.260 --> 00:41:06.230 align:start position:0%
 
4<00:41:01.740><c> times</c><00:41:02.040><c> 68</c><00:41:03.000><c> instead</c><00:41:03.540><c> of</c><00:41:03.599><c> just</c><00:41:03.780><c> 68</c><00:41:04.380><c> channels</c>

00:41:06.230 --> 00:41:06.240 align:start position:0%
4 times 68 instead of just 68 channels
 

00:41:06.240 --> 00:41:08.450 align:start position:0%
4 times 68 instead of just 68 channels
so<00:41:06.780><c> basically</c><00:41:07.260><c> we</c><00:41:07.619><c> are</c><00:41:07.920><c> maintaining</c>

00:41:08.450 --> 00:41:08.460 align:start position:0%
so basically we are maintaining
 

00:41:08.460 --> 00:41:10.730 align:start position:0%
so basically we are maintaining
statistics<00:41:09.180><c> for</c><00:41:09.839><c> every</c><00:41:10.079><c> one</c><00:41:10.260><c> of</c><00:41:10.380><c> these</c><00:41:10.560><c> four</c>

00:41:10.730 --> 00:41:10.740 align:start position:0%
statistics for every one of these four
 

00:41:10.740 --> 00:41:13.609 align:start position:0%
statistics for every one of these four
positions<00:41:11.400><c> individually</c><00:41:12.060><c> and</c><00:41:12.420><c> independently</c>

00:41:13.609 --> 00:41:13.619 align:start position:0%
positions individually and independently
 

00:41:13.619 --> 00:41:15.230 align:start position:0%
positions individually and independently
and<00:41:13.680><c> instead</c><00:41:14.339><c> what</c><00:41:14.460><c> we</c><00:41:14.640><c> want</c><00:41:14.700><c> to</c><00:41:14.820><c> do</c><00:41:14.940><c> is</c><00:41:15.000><c> we</c>

00:41:15.230 --> 00:41:15.240 align:start position:0%
and instead what we want to do is we
 

00:41:15.240 --> 00:41:16.970 align:start position:0%
and instead what we want to do is we
want<00:41:15.300><c> to</c><00:41:15.420><c> treat</c><00:41:15.599><c> this</c><00:41:15.900><c> four</c><00:41:16.140><c> as</c><00:41:16.680><c> a</c><00:41:16.859><c> batch</c>

00:41:16.970 --> 00:41:16.980 align:start position:0%
want to treat this four as a batch
 

00:41:16.980 --> 00:41:19.430 align:start position:0%
want to treat this four as a batch
Dimension<00:41:17.579><c> just</c><00:41:18.180><c> like</c><00:41:18.359><c> the</c><00:41:18.660><c> zeroth</c><00:41:19.020><c> dimension</c>

00:41:19.430 --> 00:41:19.440 align:start position:0%
Dimension just like the zeroth dimension
 

00:41:19.440 --> 00:41:22.609 align:start position:0%
Dimension just like the zeroth dimension
so<00:41:20.339><c> as</c><00:41:21.240><c> far</c><00:41:21.420><c> as</c><00:41:21.540><c> the</c><00:41:21.660><c> bachelor</c><00:41:21.960><c> is</c><00:41:22.260><c> concerned</c>

00:41:22.609 --> 00:41:22.619 align:start position:0%
so as far as the bachelor is concerned
 

00:41:22.619 --> 00:41:24.829 align:start position:0%
so as far as the bachelor is concerned
it<00:41:23.099><c> doesn't</c><00:41:23.280><c> want</c><00:41:23.880><c> to</c><00:41:24.060><c> average</c><00:41:24.240><c> we</c><00:41:24.599><c> don't</c><00:41:24.720><c> want</c>

00:41:24.829 --> 00:41:24.839 align:start position:0%
it doesn't want to average we don't want
 

00:41:24.839 --> 00:41:26.870 align:start position:0%
it doesn't want to average we don't want
to<00:41:24.960><c> average</c><00:41:25.079><c> over</c><00:41:25.380><c> 32</c><00:41:25.800><c> numbers</c><00:41:26.040><c> we</c><00:41:26.579><c> want</c><00:41:26.760><c> to</c>

00:41:26.870 --> 00:41:26.880 align:start position:0%
to average over 32 numbers we want to
 

00:41:26.880 --> 00:41:29.210 align:start position:0%
to average over 32 numbers we want to
now<00:41:27.060><c> average</c><00:41:27.240><c> over</c><00:41:27.599><c> 32</c><00:41:28.140><c> times</c><00:41:28.500><c> four</c><00:41:28.980><c> numbers</c>

00:41:29.210 --> 00:41:29.220 align:start position:0%
now average over 32 times four numbers
 

00:41:29.220 --> 00:41:31.250 align:start position:0%
now average over 32 times four numbers
for<00:41:29.820><c> every</c><00:41:30.000><c> single</c><00:41:30.300><c> one</c><00:41:30.420><c> of</c><00:41:30.540><c> these</c><00:41:30.780><c> 68</c>

00:41:31.250 --> 00:41:31.260 align:start position:0%
for every single one of these 68
 

00:41:31.260 --> 00:41:32.569 align:start position:0%
for every single one of these 68
channels

00:41:32.569 --> 00:41:32.579 align:start position:0%
channels
 

00:41:32.579 --> 00:41:34.910 align:start position:0%
channels
and<00:41:33.359><c> uh</c><00:41:33.660><c> so</c><00:41:33.839><c> let</c><00:41:33.960><c> me</c><00:41:34.140><c> now</c>

00:41:34.910 --> 00:41:34.920 align:start position:0%
and uh so let me now
 

00:41:34.920 --> 00:41:36.950 align:start position:0%
and uh so let me now
remove<00:41:35.460><c> this</c>

00:41:36.950 --> 00:41:36.960 align:start position:0%
remove this
 

00:41:36.960 --> 00:41:38.510 align:start position:0%
remove this
it<00:41:37.320><c> turns</c><00:41:37.619><c> out</c><00:41:37.680><c> that</c><00:41:37.800><c> when</c><00:41:37.980><c> you</c><00:41:38.099><c> look</c><00:41:38.280><c> at</c><00:41:38.400><c> the</c>

00:41:38.510 --> 00:41:38.520 align:start position:0%
it turns out that when you look at the
 

00:41:38.520 --> 00:41:42.050 align:start position:0%
it turns out that when you look at the
documentation<00:41:39.000><c> of</c><00:41:39.300><c> torch.mean</c>

00:41:42.050 --> 00:41:42.060 align:start position:0%
documentation of torch.mean
 

00:41:42.060 --> 00:41:49.250 align:start position:0%
documentation of torch.mean
so<00:41:42.599><c> let's</c><00:41:42.780><c> go</c><00:41:42.900><c> to</c><00:41:43.020><c> torch.me</c>

00:41:49.250 --> 00:41:49.260 align:start position:0%
 
 

00:41:49.260 --> 00:41:51.650 align:start position:0%
 
in<00:41:49.980><c> one</c><00:41:50.099><c> of</c><00:41:50.220><c> its</c><00:41:50.400><c> signatures</c><00:41:50.760><c> when</c><00:41:51.119><c> we</c><00:41:51.240><c> specify</c>

00:41:51.650 --> 00:41:51.660 align:start position:0%
in one of its signatures when we specify
 

00:41:51.660 --> 00:41:53.150 align:start position:0%
in one of its signatures when we specify
the<00:41:51.780><c> dimension</c>

00:41:53.150 --> 00:41:53.160 align:start position:0%
the dimension
 

00:41:53.160 --> 00:41:54.829 align:start position:0%
the dimension
we<00:41:53.520><c> see</c><00:41:53.640><c> that</c><00:41:53.760><c> the</c><00:41:53.940><c> dimension</c><00:41:54.240><c> here</c><00:41:54.480><c> is</c><00:41:54.660><c> not</c>

00:41:54.829 --> 00:41:54.839 align:start position:0%
we see that the dimension here is not
 

00:41:54.839 --> 00:41:56.870 align:start position:0%
we see that the dimension here is not
just<00:41:55.020><c> it</c><00:41:55.500><c> can</c><00:41:55.619><c> be</c><00:41:55.740><c> in</c><00:41:55.920><c> or</c><00:41:56.220><c> it</c><00:41:56.339><c> can</c><00:41:56.460><c> also</c><00:41:56.640><c> be</c><00:41:56.760><c> a</c>

00:41:56.870 --> 00:41:56.880 align:start position:0%
just it can be in or it can also be a
 

00:41:56.880 --> 00:41:59.870 align:start position:0%
just it can be in or it can also be a
tuple<00:41:57.240><c> of</c><00:41:57.359><c> ins</c><00:41:58.260><c> so</c><00:41:58.680><c> we</c><00:41:58.800><c> can</c><00:41:58.980><c> reduce</c><00:41:59.400><c> over</c>

00:41:59.870 --> 00:41:59.880 align:start position:0%
tuple of ins so we can reduce over
 

00:41:59.880 --> 00:42:02.089 align:start position:0%
tuple of ins so we can reduce over
multiple<00:42:00.599><c> integers</c><00:42:01.020><c> at</c><00:42:01.320><c> the</c><00:42:01.380><c> same</c><00:42:01.560><c> time</c><00:42:01.680><c> over</c>

00:42:02.089 --> 00:42:02.099 align:start position:0%
multiple integers at the same time over
 

00:42:02.099 --> 00:42:04.069 align:start position:0%
multiple integers at the same time over
multiple<00:42:02.460><c> Dimensions</c><00:42:02.820><c> at</c><00:42:03.060><c> the</c><00:42:03.119><c> same</c><00:42:03.240><c> time</c><00:42:03.359><c> so</c>

00:42:04.069 --> 00:42:04.079 align:start position:0%
multiple Dimensions at the same time so
 

00:42:04.079 --> 00:42:05.870 align:start position:0%
multiple Dimensions at the same time so
instead<00:42:04.380><c> of</c><00:42:04.440><c> just</c><00:42:04.560><c> reducing</c><00:42:04.980><c> over</c><00:42:05.160><c> zero</c><00:42:05.640><c> we</c>

00:42:05.870 --> 00:42:05.880 align:start position:0%
instead of just reducing over zero we
 

00:42:05.880 --> 00:42:08.510 align:start position:0%
instead of just reducing over zero we
can<00:42:06.000><c> pass</c><00:42:06.119><c> in</c><00:42:06.300><c> a</c><00:42:06.420><c> tuple</c><00:42:06.780><c> 0</c><00:42:07.079><c> 1.</c>

00:42:08.510 --> 00:42:08.520 align:start position:0%
can pass in a tuple 0 1.
 

00:42:08.520 --> 00:42:10.790 align:start position:0%
can pass in a tuple 0 1.
and<00:42:09.060><c> here</c><00:42:09.240><c> zero</c><00:42:09.599><c> one</c><00:42:09.720><c> as</c><00:42:09.900><c> well</c><00:42:10.320><c> and</c><00:42:10.740><c> then</c>

00:42:10.790 --> 00:42:10.800 align:start position:0%
and here zero one as well and then
 

00:42:10.800 --> 00:42:12.349 align:start position:0%
and here zero one as well and then
what's<00:42:10.920><c> going</c><00:42:11.160><c> to</c><00:42:11.220><c> happen</c><00:42:11.339><c> is</c><00:42:11.579><c> the</c><00:42:11.940><c> output</c><00:42:12.180><c> of</c>

00:42:12.349 --> 00:42:12.359 align:start position:0%
what's going to happen is the output of
 

00:42:12.359 --> 00:42:13.790 align:start position:0%
what's going to happen is the output of
course<00:42:12.480><c> is</c><00:42:12.599><c> going</c><00:42:12.780><c> to</c><00:42:12.839><c> be</c><00:42:12.900><c> the</c><00:42:13.079><c> same</c>

00:42:13.790 --> 00:42:13.800 align:start position:0%
course is going to be the same
 

00:42:13.800 --> 00:42:14.990 align:start position:0%
course is going to be the same
but<00:42:14.160><c> now</c><00:42:14.220><c> what's</c><00:42:14.400><c> going</c><00:42:14.520><c> to</c><00:42:14.640><c> happen</c><00:42:14.760><c> is</c>

00:42:14.990 --> 00:42:15.000 align:start position:0%
but now what's going to happen is
 

00:42:15.000 --> 00:42:17.630 align:start position:0%
but now what's going to happen is
because<00:42:15.420><c> we</c><00:42:15.660><c> reduce</c><00:42:15.839><c> over</c><00:42:16.079><c> 0</c><00:42:16.320><c> and</c><00:42:16.560><c> 1</c><00:42:16.740><c> if</c><00:42:17.520><c> we</c>

00:42:17.630 --> 00:42:17.640 align:start position:0%
because we reduce over 0 and 1 if we
 

00:42:17.640 --> 00:42:20.150 align:start position:0%
because we reduce over 0 and 1 if we
look<00:42:17.760><c> at</c><00:42:17.880><c> immin.shape</c>

00:42:20.150 --> 00:42:20.160 align:start position:0%
look at immin.shape
 

00:42:20.160 --> 00:42:22.849 align:start position:0%
look at immin.shape
we<00:42:20.460><c> see</c><00:42:20.640><c> that</c><00:42:20.760><c> now</c><00:42:21.060><c> we've</c><00:42:21.599><c> reduced</c><00:42:22.200><c> we</c><00:42:22.680><c> took</c>

00:42:22.849 --> 00:42:22.859 align:start position:0%
we see that now we've reduced we took
 

00:42:22.859 --> 00:42:25.250 align:start position:0%
we see that now we've reduced we took
the<00:42:22.980><c> mean</c><00:42:23.099><c> over</c><00:42:23.460><c> both</c><00:42:23.940><c> the</c><00:42:24.300><c> zeroth</c><00:42:24.960><c> and</c><00:42:25.140><c> the</c>

00:42:25.250 --> 00:42:25.260 align:start position:0%
the mean over both the zeroth and the
 

00:42:25.260 --> 00:42:26.810 align:start position:0%
the mean over both the zeroth and the
First<00:42:25.440><c> Dimension</c>

00:42:26.810 --> 00:42:26.820 align:start position:0%
First Dimension
 

00:42:26.820 --> 00:42:28.730 align:start position:0%
First Dimension
so<00:42:27.000><c> we're</c><00:42:27.240><c> just</c><00:42:27.359><c> getting</c><00:42:27.540><c> 68</c><00:42:27.960><c> numbers</c><00:42:28.260><c> and</c><00:42:28.619><c> a</c>

00:42:28.730 --> 00:42:28.740 align:start position:0%
so we're just getting 68 numbers and a
 

00:42:28.740 --> 00:42:30.890 align:start position:0%
so we're just getting 68 numbers and a
bunch<00:42:28.859><c> of</c><00:42:28.980><c> spurious</c><00:42:29.339><c> Dimensions</c><00:42:29.700><c> here</c>

00:42:30.890 --> 00:42:30.900 align:start position:0%
bunch of spurious Dimensions here
 

00:42:30.900 --> 00:42:34.069 align:start position:0%
bunch of spurious Dimensions here
so<00:42:31.260><c> now</c><00:42:31.500><c> this</c><00:42:31.680><c> becomes</c><00:42:32.040><c> 1</c><00:42:32.220><c> by</c><00:42:32.400><c> 1</c><00:42:32.579><c> by</c><00:42:32.760><c> 68</c><00:42:33.240><c> and</c><00:42:33.900><c> the</c>

00:42:34.069 --> 00:42:34.079 align:start position:0%
so now this becomes 1 by 1 by 68 and the
 

00:42:34.079 --> 00:42:35.750 align:start position:0%
so now this becomes 1 by 1 by 68 and the
running<00:42:34.200><c> mean</c><00:42:34.500><c> and</c><00:42:34.980><c> the</c><00:42:35.099><c> running</c><00:42:35.220><c> variance</c>

00:42:35.750 --> 00:42:35.760 align:start position:0%
running mean and the running variance
 

00:42:35.760 --> 00:42:37.910 align:start position:0%
running mean and the running variance
analogously<00:42:36.720><c> will</c><00:42:36.960><c> become</c><00:42:37.200><c> one</c><00:42:37.380><c> by</c><00:42:37.560><c> one</c><00:42:37.740><c> by</c>

00:42:37.910 --> 00:42:37.920 align:start position:0%
analogously will become one by one by
 

00:42:37.920 --> 00:42:39.710 align:start position:0%
analogously will become one by one by
68.<00:42:38.579><c> so</c><00:42:39.000><c> even</c><00:42:39.119><c> though</c><00:42:39.300><c> there</c><00:42:39.480><c> are</c><00:42:39.599><c> the</c>

00:42:39.710 --> 00:42:39.720 align:start position:0%
68. so even though there are the
 

00:42:39.720 --> 00:42:41.810 align:start position:0%
68. so even though there are the
spurious<00:42:40.020><c> Dimensions</c><00:42:40.440><c> uh</c><00:42:41.099><c> the</c><00:42:41.280><c> current</c><00:42:41.460><c> the</c>

00:42:41.810 --> 00:42:41.820 align:start position:0%
spurious Dimensions uh the current the
 

00:42:41.820 --> 00:42:43.609 align:start position:0%
spurious Dimensions uh the current the
current<00:42:41.940><c> the</c><00:42:42.300><c> correct</c><00:42:42.540><c> thing</c><00:42:42.720><c> will</c><00:42:42.900><c> happen</c><00:42:43.079><c> in</c>

00:42:43.609 --> 00:42:43.619 align:start position:0%
current the correct thing will happen in
 

00:42:43.619 --> 00:42:45.589 align:start position:0%
current the correct thing will happen in
that<00:42:43.800><c> we</c><00:42:43.980><c> are</c><00:42:44.160><c> only</c><00:42:44.400><c> maintaining</c><00:42:45.000><c> means</c><00:42:45.420><c> and</c>

00:42:45.589 --> 00:42:45.599 align:start position:0%
that we are only maintaining means and
 

00:42:45.599 --> 00:42:49.250 align:start position:0%
that we are only maintaining means and
variances<00:42:46.020><c> for</c><00:42:46.440><c> 64</c><00:42:46.920><c> sorry</c><00:42:47.760><c> for</c><00:42:48.000><c> 68</c><00:42:48.420><c> channels</c>

00:42:49.250 --> 00:42:49.260 align:start position:0%
variances for 64 sorry for 68 channels
 

00:42:49.260 --> 00:42:50.930 align:start position:0%
variances for 64 sorry for 68 channels
and<00:42:49.859><c> we're</c><00:42:50.040><c> not</c><00:42:50.160><c> calculating</c><00:42:50.640><c> the</c><00:42:50.760><c> mean</c>

00:42:50.930 --> 00:42:50.940 align:start position:0%
and we're not calculating the mean
 

00:42:50.940 --> 00:42:54.410 align:start position:0%
and we're not calculating the mean
variance<00:42:51.480><c> across</c><00:42:52.020><c> 32</c><00:42:52.560><c> times</c><00:42:52.800><c> 4</c><00:42:53.160><c> dimensions</c><00:42:53.820><c> so</c>

00:42:54.410 --> 00:42:54.420 align:start position:0%
variance across 32 times 4 dimensions so
 

00:42:54.420 --> 00:42:56.810 align:start position:0%
variance across 32 times 4 dimensions so
that's<00:42:54.599><c> exactly</c><00:42:54.960><c> what</c><00:42:55.200><c> we</c><00:42:55.380><c> want</c><00:42:55.560><c> and</c><00:42:56.460><c> let's</c>

00:42:56.810 --> 00:42:56.820 align:start position:0%
that's exactly what we want and let's
 

00:42:56.820 --> 00:42:58.550 align:start position:0%
that's exactly what we want and let's
change<00:42:57.119><c> the</c><00:42:57.480><c> implementation</c><00:42:58.020><c> of</c><00:42:58.200><c> bash</c><00:42:58.319><c> term</c>

00:42:58.550 --> 00:42:58.560 align:start position:0%
change the implementation of bash term
 

00:42:58.560 --> 00:43:01.670 align:start position:0%
change the implementation of bash term
1D<00:42:58.920><c> that</c><00:42:59.160><c> we</c><00:42:59.280><c> have</c><00:42:59.400><c> so</c><00:43:00.060><c> that</c><00:43:00.240><c> it</c><00:43:00.480><c> can</c><00:43:00.720><c> take</c><00:43:01.500><c> in</c>

00:43:01.670 --> 00:43:01.680 align:start position:0%
1D that we have so that it can take in
 

00:43:01.680 --> 00:43:02.930 align:start position:0%
1D that we have so that it can take in
two-dimensional<00:43:02.220><c> or</c><00:43:02.400><c> three-dimensional</c>

00:43:02.930 --> 00:43:02.940 align:start position:0%
two-dimensional or three-dimensional
 

00:43:02.940 --> 00:43:05.870 align:start position:0%
two-dimensional or three-dimensional
inputs<00:43:03.300><c> and</c><00:43:03.839><c> perform</c><00:43:04.200><c> accordingly</c><00:43:05.220><c> so</c><00:43:05.640><c> at</c><00:43:05.760><c> the</c>

00:43:05.870 --> 00:43:05.880 align:start position:0%
inputs and perform accordingly so at the
 

00:43:05.880 --> 00:43:07.010 align:start position:0%
inputs and perform accordingly so at the
end<00:43:05.940><c> of</c><00:43:06.000><c> the</c><00:43:06.119><c> day</c><00:43:06.180><c> the</c><00:43:06.300><c> fix</c><00:43:06.480><c> is</c><00:43:06.660><c> relatively</c>

00:43:07.010 --> 00:43:07.020 align:start position:0%
end of the day the fix is relatively
 

00:43:07.020 --> 00:43:09.170 align:start position:0%
end of the day the fix is relatively
straightforward<00:43:07.859><c> basically</c><00:43:08.520><c> the</c><00:43:08.819><c> dimension</c>

00:43:09.170 --> 00:43:09.180 align:start position:0%
straightforward basically the dimension
 

00:43:09.180 --> 00:43:12.470 align:start position:0%
straightforward basically the dimension
we<00:43:09.359><c> want</c><00:43:09.480><c> to</c><00:43:09.599><c> reduce</c><00:43:09.720><c> over</c><00:43:10.280><c> is</c><00:43:11.280><c> either</c><00:43:11.640><c> 0</c><00:43:12.000><c> or</c>

00:43:12.470 --> 00:43:12.480 align:start position:0%
we want to reduce over is either 0 or
 

00:43:12.480 --> 00:43:14.150 align:start position:0%
we want to reduce over is either 0 or
the<00:43:12.599><c> Tuple</c><00:43:12.960><c> zero</c><00:43:13.200><c> and</c><00:43:13.319><c> one</c><00:43:13.440><c> depending</c><00:43:13.920><c> on</c><00:43:14.040><c> the</c>

00:43:14.150 --> 00:43:14.160 align:start position:0%
the Tuple zero and one depending on the
 

00:43:14.160 --> 00:43:16.910 align:start position:0%
the Tuple zero and one depending on the
dimensionality<00:43:14.579><c> of</c><00:43:14.760><c> X</c><00:43:14.940><c> so</c><00:43:15.720><c> if</c><00:43:15.839><c> x</c><00:43:16.079><c> dot</c><00:43:16.500><c> and</c><00:43:16.680><c> dim</c>

00:43:16.910 --> 00:43:16.920 align:start position:0%
dimensionality of X so if x dot and dim
 

00:43:16.920 --> 00:43:18.950 align:start position:0%
dimensionality of X so if x dot and dim
is<00:43:17.339><c> two</c><00:43:17.520><c> so</c><00:43:17.880><c> it's</c><00:43:18.000><c> a</c><00:43:18.119><c> two</c><00:43:18.240><c> dimensional</c><00:43:18.599><c> tensor</c>

00:43:18.950 --> 00:43:18.960 align:start position:0%
is two so it's a two dimensional tensor
 

00:43:18.960 --> 00:43:20.809 align:start position:0%
is two so it's a two dimensional tensor
then<00:43:19.440><c> Dimension</c><00:43:19.800><c> we</c><00:43:19.920><c> want</c><00:43:20.040><c> to</c><00:43:20.160><c> reduce</c><00:43:20.280><c> over</c><00:43:20.579><c> is</c>

00:43:20.809 --> 00:43:20.819 align:start position:0%
then Dimension we want to reduce over is
 

00:43:20.819 --> 00:43:22.370 align:start position:0%
then Dimension we want to reduce over is
just<00:43:21.000><c> the</c><00:43:21.119><c> integer</c><00:43:21.480><c> zero</c>

00:43:22.370 --> 00:43:22.380 align:start position:0%
just the integer zero
 

00:43:22.380 --> 00:43:24.770 align:start position:0%
just the integer zero
L<00:43:22.800><c> if</c><00:43:22.980><c> x</c><00:43:23.160><c> dot</c><00:43:23.460><c> ending</c><00:43:23.760><c> is</c><00:43:24.000><c> three</c><00:43:24.180><c> so</c><00:43:24.480><c> it's</c><00:43:24.660><c> a</c>

00:43:24.770 --> 00:43:24.780 align:start position:0%
L if x dot ending is three so it's a
 

00:43:24.780 --> 00:43:26.630 align:start position:0%
L if x dot ending is three so it's a
three-dimensional<00:43:25.260><c> tensor</c><00:43:25.619><c> then</c><00:43:26.040><c> the</c><00:43:26.280><c> dims</c>

00:43:26.630 --> 00:43:26.640 align:start position:0%
three-dimensional tensor then the dims
 

00:43:26.640 --> 00:43:29.270 align:start position:0%
three-dimensional tensor then the dims
we're<00:43:27.119><c> going</c><00:43:27.359><c> to</c><00:43:27.420><c> assume</c><00:43:27.900><c> are</c><00:43:28.619><c> zero</c><00:43:29.040><c> and</c><00:43:29.099><c> one</c>

00:43:29.270 --> 00:43:29.280 align:start position:0%
we're going to assume are zero and one
 

00:43:29.280 --> 00:43:31.849 align:start position:0%
we're going to assume are zero and one
that<00:43:29.579><c> we</c><00:43:29.700><c> want</c><00:43:29.880><c> to</c><00:43:30.000><c> reduce</c><00:43:30.180><c> over</c><00:43:30.740><c> and</c><00:43:31.740><c> then</c>

00:43:31.849 --> 00:43:31.859 align:start position:0%
that we want to reduce over and then
 

00:43:31.859 --> 00:43:33.770 align:start position:0%
that we want to reduce over and then
here<00:43:32.099><c> we</c><00:43:32.339><c> just</c><00:43:32.460><c> pass</c><00:43:32.579><c> in</c><00:43:32.819><c> dim</c>

00:43:33.770 --> 00:43:33.780 align:start position:0%
here we just pass in dim
 

00:43:33.780 --> 00:43:35.089 align:start position:0%
here we just pass in dim
and<00:43:34.079><c> if</c><00:43:34.200><c> the</c><00:43:34.319><c> dimensionality</c><00:43:34.680><c> of</c><00:43:34.859><c> X</c><00:43:34.980><c> is</c>

00:43:35.089 --> 00:43:35.099 align:start position:0%
and if the dimensionality of X is
 

00:43:35.099 --> 00:43:36.410 align:start position:0%
and if the dimensionality of X is
anything<00:43:35.220><c> else</c><00:43:35.400><c> we'll</c><00:43:35.640><c> now</c><00:43:35.760><c> get</c><00:43:35.940><c> an</c><00:43:36.060><c> error</c>

00:43:36.410 --> 00:43:36.420 align:start position:0%
anything else we'll now get an error
 

00:43:36.420 --> 00:43:38.690 align:start position:0%
anything else we'll now get an error
which<00:43:36.540><c> is</c><00:43:36.660><c> good</c>

00:43:38.690 --> 00:43:38.700 align:start position:0%
which is good
 

00:43:38.700 --> 00:43:41.150 align:start position:0%
which is good
um<00:43:38.839><c> so</c><00:43:39.839><c> that</c><00:43:39.960><c> should</c><00:43:40.140><c> be</c><00:43:40.260><c> the</c><00:43:40.380><c> fix</c><00:43:40.560><c> now</c><00:43:40.920><c> I</c><00:43:41.099><c> want</c>

00:43:41.150 --> 00:43:41.160 align:start position:0%
um so that should be the fix now I want
 

00:43:41.160 --> 00:43:42.710 align:start position:0%
um so that should be the fix now I want
to<00:43:41.280><c> point</c><00:43:41.400><c> out</c><00:43:41.579><c> one</c><00:43:41.760><c> more</c><00:43:41.940><c> thing</c><00:43:42.060><c> we're</c>

00:43:42.710 --> 00:43:42.720 align:start position:0%
to point out one more thing we're
 

00:43:42.720 --> 00:43:44.390 align:start position:0%
to point out one more thing we're
actually<00:43:42.900><c> departing</c><00:43:43.440><c> from</c><00:43:43.619><c> the</c><00:43:43.740><c> API</c><00:43:44.040><c> of</c><00:43:44.220><c> Pi</c>

00:43:44.390 --> 00:43:44.400 align:start position:0%
actually departing from the API of Pi
 

00:43:44.400 --> 00:43:46.309 align:start position:0%
actually departing from the API of Pi
torch<00:43:44.760><c> here</c><00:43:45.000><c> a</c><00:43:45.240><c> little</c><00:43:45.359><c> bit</c><00:43:45.480><c> because</c><00:43:46.020><c> when</c><00:43:46.260><c> you</c>

00:43:46.309 --> 00:43:46.319 align:start position:0%
torch here a little bit because when you
 

00:43:46.319 --> 00:43:48.950 align:start position:0%
torch here a little bit because when you
come<00:43:46.440><c> to</c><00:43:46.560><c> batch</c><00:43:46.740><c> room</c><00:43:47.040><c> 1D</c><00:43:47.460><c> and</c><00:43:47.640><c> pytorch</c><00:43:48.540><c> you</c>

00:43:48.950 --> 00:43:48.960 align:start position:0%
come to batch room 1D and pytorch you
 

00:43:48.960 --> 00:43:50.569 align:start position:0%
come to batch room 1D and pytorch you
can<00:43:49.020><c> scroll</c><00:43:49.200><c> down</c><00:43:49.380><c> and</c><00:43:49.560><c> you</c><00:43:49.740><c> can</c><00:43:49.800><c> see</c><00:43:49.980><c> that</c><00:43:50.220><c> the</c>

00:43:50.569 --> 00:43:50.579 align:start position:0%
can scroll down and you can see that the
 

00:43:50.579 --> 00:43:53.270 align:start position:0%
can scroll down and you can see that the
input<00:43:50.940><c> to</c><00:43:51.119><c> this</c><00:43:51.359><c> layer</c><00:43:51.599><c> can</c><00:43:52.079><c> either</c><00:43:52.200><c> be</c><00:43:52.440><c> n</c><00:43:52.680><c> by</c><00:43:52.980><c> C</c>

00:43:53.270 --> 00:43:53.280 align:start position:0%
input to this layer can either be n by C
 

00:43:53.280 --> 00:43:55.370 align:start position:0%
input to this layer can either be n by C
where<00:43:54.000><c> n</c><00:43:54.180><c> is</c><00:43:54.300><c> the</c><00:43:54.420><c> batch</c><00:43:54.540><c> size</c><00:43:54.780><c> and</c><00:43:54.960><c> C</c><00:43:55.079><c> is</c><00:43:55.260><c> the</c>

00:43:55.370 --> 00:43:55.380 align:start position:0%
where n is the batch size and C is the
 

00:43:55.380 --> 00:43:57.650 align:start position:0%
where n is the batch size and C is the
number<00:43:55.500><c> of</c><00:43:55.619><c> features</c><00:43:56.040><c> or</c><00:43:56.220><c> channels</c><00:43:56.640><c> or</c><00:43:57.359><c> it</c>

00:43:57.650 --> 00:43:57.660 align:start position:0%
number of features or channels or it
 

00:43:57.660 --> 00:43:59.089 align:start position:0%
number of features or channels or it
actually<00:43:57.780><c> does</c><00:43:58.079><c> accept</c><00:43:58.319><c> three-dimensional</c>

00:43:59.089 --> 00:43:59.099 align:start position:0%
actually does accept three-dimensional
 

00:43:59.099 --> 00:44:01.670 align:start position:0%
actually does accept three-dimensional
inputs<00:43:59.460><c> but</c><00:43:59.940><c> it</c><00:44:00.060><c> expects</c><00:44:00.420><c> it</c><00:44:00.540><c> to</c><00:44:00.660><c> be</c><00:44:00.720><c> n</c><00:44:00.960><c> by</c><00:44:01.200><c> C</c><00:44:01.440><c> by</c>

00:44:01.670 --> 00:44:01.680 align:start position:0%
inputs but it expects it to be n by C by
 

00:44:01.680 --> 00:44:02.690 align:start position:0%
inputs but it expects it to be n by C by
L

00:44:02.690 --> 00:44:02.700 align:start position:0%
L
 

00:44:02.700 --> 00:44:04.730 align:start position:0%
L
where<00:44:03.240><c> LSA</c><00:44:03.780><c> like</c><00:44:03.900><c> the</c><00:44:04.079><c> sequence</c><00:44:04.319><c> length</c><00:44:04.560><c> or</c>

00:44:04.730 --> 00:44:04.740 align:start position:0%
where LSA like the sequence length or
 

00:44:04.740 --> 00:44:05.930 align:start position:0%
where LSA like the sequence length or
something<00:44:04.920><c> like</c><00:44:05.099><c> that</c>

00:44:05.930 --> 00:44:05.940 align:start position:0%
something like that
 

00:44:05.940 --> 00:44:07.730 align:start position:0%
something like that
so<00:44:07.079><c> um</c>

00:44:07.730 --> 00:44:07.740 align:start position:0%
so um
 

00:44:07.740 --> 00:44:09.829 align:start position:0%
so um
this<00:44:08.280><c> is</c><00:44:08.460><c> problem</c><00:44:08.700><c> because</c><00:44:08.940><c> you</c><00:44:09.180><c> see</c><00:44:09.300><c> how</c><00:44:09.420><c> C</c><00:44:09.599><c> is</c>

00:44:09.829 --> 00:44:09.839 align:start position:0%
this is problem because you see how C is
 

00:44:09.839 --> 00:44:12.650 align:start position:0%
this is problem because you see how C is
nested<00:44:10.200><c> here</c><00:44:10.380><c> in</c><00:44:10.560><c> the</c><00:44:10.680><c> middle</c><00:44:11.280><c> and</c><00:44:11.880><c> so</c><00:44:12.060><c> when</c><00:44:12.480><c> it</c>

00:44:12.650 --> 00:44:12.660 align:start position:0%
nested here in the middle and so when it
 

00:44:12.660 --> 00:44:14.809 align:start position:0%
nested here in the middle and so when it
gets<00:44:12.960><c> three-dimensional</c><00:44:13.560><c> inputs</c><00:44:13.980><c> this</c><00:44:14.579><c> bash</c>

00:44:14.809 --> 00:44:14.819 align:start position:0%
gets three-dimensional inputs this bash
 

00:44:14.819 --> 00:44:17.329 align:start position:0%
gets three-dimensional inputs this bash
term<00:44:15.000><c> layer</c><00:44:15.359><c> will</c><00:44:15.599><c> reduce</c><00:44:15.839><c> over</c><00:44:16.140><c> zero</c><00:44:16.740><c> and</c><00:44:17.040><c> two</c>

00:44:17.329 --> 00:44:17.339 align:start position:0%
term layer will reduce over zero and two
 

00:44:17.339 --> 00:44:20.390 align:start position:0%
term layer will reduce over zero and two
instead<00:44:17.880><c> of</c><00:44:18.000><c> zero</c><00:44:18.420><c> and</c><00:44:18.720><c> one</c><00:44:18.960><c> so</c><00:44:19.740><c> it</c><00:44:19.920><c> basically</c>

00:44:20.390 --> 00:44:20.400 align:start position:0%
instead of zero and one so it basically
 

00:44:20.400 --> 00:44:22.490 align:start position:0%
instead of zero and one so it basically
Pi<00:44:21.180><c> torch</c><00:44:21.420><c> batch</c><00:44:21.660><c> number</c><00:44:21.839><c> one</c><00:44:22.020><c> D</c><00:44:22.260><c> layer</c>

00:44:22.490 --> 00:44:22.500 align:start position:0%
Pi torch batch number one D layer
 

00:44:22.500 --> 00:44:25.970 align:start position:0%
Pi torch batch number one D layer
assumes<00:44:23.040><c> that</c><00:44:23.220><c> c</c><00:44:23.640><c> will</c><00:44:23.940><c> always</c><00:44:24.119><c> be</c><00:44:24.800><c> the</c><00:44:25.800><c> First</c>

00:44:25.970 --> 00:44:25.980 align:start position:0%
assumes that c will always be the First
 

00:44:25.980 --> 00:44:28.069 align:start position:0%
assumes that c will always be the First
Dimension<00:44:26.460><c> whereas</c><00:44:27.000><c> we'll</c><00:44:27.240><c> we</c><00:44:27.540><c> assume</c><00:44:27.900><c> here</c>

00:44:28.069 --> 00:44:28.079 align:start position:0%
Dimension whereas we'll we assume here
 

00:44:28.079 --> 00:44:30.890 align:start position:0%
Dimension whereas we'll we assume here
that<00:44:28.619><c> c</c><00:44:29.220><c> is</c><00:44:29.640><c> the</c><00:44:29.819><c> last</c><00:44:30.000><c> Dimension</c><00:44:30.480><c> and</c><00:44:30.720><c> there</c>

00:44:30.890 --> 00:44:30.900 align:start position:0%
that c is the last Dimension and there
 

00:44:30.900 --> 00:44:32.030 align:start position:0%
that c is the last Dimension and there
are<00:44:30.960><c> some</c><00:44:31.140><c> number</c><00:44:31.260><c> of</c><00:44:31.380><c> batch</c><00:44:31.560><c> Dimensions</c>

00:44:32.030 --> 00:44:32.040 align:start position:0%
are some number of batch Dimensions
 

00:44:32.040 --> 00:44:34.190 align:start position:0%
are some number of batch Dimensions
beforehand

00:44:34.190 --> 00:44:34.200 align:start position:0%
beforehand
 

00:44:34.200 --> 00:44:34.849 align:start position:0%
beforehand
um

00:44:34.849 --> 00:44:34.859 align:start position:0%
um
 

00:44:34.859 --> 00:44:36.650 align:start position:0%
um
and<00:44:35.460><c> so</c>

00:44:36.650 --> 00:44:36.660 align:start position:0%
and so
 

00:44:36.660 --> 00:44:39.410 align:start position:0%
and so
it<00:44:37.200><c> expects</c><00:44:37.560><c> n</c><00:44:37.740><c> by</c><00:44:37.920><c> C</c><00:44:38.099><c> or</c><00:44:38.339><c> M</c><00:44:38.460><c> by</c><00:44:38.579><c> C</c><00:44:38.760><c> by</c><00:44:38.880><c> all</c><00:44:39.060><c> we</c>

00:44:39.410 --> 00:44:39.420 align:start position:0%
it expects n by C or M by C by all we
 

00:44:39.420 --> 00:44:42.770 align:start position:0%
it expects n by C or M by C by all we
expect<00:44:39.660><c> and</c><00:44:39.960><c> by</c><00:44:40.140><c> C</c><00:44:40.380><c> or</c><00:44:40.619><c> n</c><00:44:41.160><c> by</c><00:44:41.339><c> L</c><00:44:41.520><c> by</c><00:44:41.700><c> C</c>

00:44:42.770 --> 00:44:42.780 align:start position:0%
expect and by C or n by L by C
 

00:44:42.780 --> 00:44:45.349 align:start position:0%
expect and by C or n by L by C
and<00:44:43.440><c> so</c><00:44:43.740><c> it's</c><00:44:43.980><c> a</c><00:44:44.099><c> deviation</c>

00:44:45.349 --> 00:44:45.359 align:start position:0%
and so it's a deviation
 

00:44:45.359 --> 00:44:46.670 align:start position:0%
and so it's a deviation
um

00:44:46.670 --> 00:44:46.680 align:start position:0%
um
 

00:44:46.680 --> 00:44:49.010 align:start position:0%
um
I<00:44:47.099><c> think</c><00:44:47.220><c> it's</c><00:44:47.339><c> okay</c><00:44:47.520><c> I</c><00:44:48.300><c> prefer</c><00:44:48.540><c> it</c><00:44:48.660><c> this</c><00:44:48.839><c> way</c>

00:44:49.010 --> 00:44:49.020 align:start position:0%
I think it's okay I prefer it this way
 

00:44:49.020 --> 00:44:50.630 align:start position:0%
I think it's okay I prefer it this way
honestly<00:44:49.380><c> so</c><00:44:49.619><c> this</c><00:44:49.859><c> is</c><00:44:49.920><c> the</c><00:44:50.040><c> way</c><00:44:50.220><c> that</c><00:44:50.339><c> we</c><00:44:50.520><c> will</c>

00:44:50.630 --> 00:44:50.640 align:start position:0%
honestly so this is the way that we will
 

00:44:50.640 --> 00:44:52.069 align:start position:0%
honestly so this is the way that we will
keep<00:44:50.819><c> it</c><00:44:50.940><c> for</c><00:44:51.060><c> our</c><00:44:51.180><c> purposes</c>

00:44:52.069 --> 00:44:52.079 align:start position:0%
keep it for our purposes
 

00:44:52.079 --> 00:44:53.990 align:start position:0%
keep it for our purposes
so<00:44:52.440><c> I</c><00:44:52.500><c> redefined</c><00:44:52.920><c> the</c><00:44:53.040><c> layers</c><00:44:53.280><c> re-initialize</c>

00:44:53.990 --> 00:44:54.000 align:start position:0%
so I redefined the layers re-initialize
 

00:44:54.000 --> 00:44:55.430 align:start position:0%
so I redefined the layers re-initialize
the<00:44:54.119><c> neural</c><00:44:54.420><c> net</c><00:44:54.540><c> and</c><00:44:54.839><c> did</c><00:44:54.960><c> a</c><00:44:55.140><c> single</c><00:44:55.319><c> forward</c>

00:44:55.430 --> 00:44:55.440 align:start position:0%
the neural net and did a single forward
 

00:44:55.440 --> 00:44:57.770 align:start position:0%
the neural net and did a single forward
pass<00:44:55.800><c> with</c><00:44:56.160><c> a</c><00:44:56.339><c> break</c><00:44:56.520><c> just</c><00:44:57.000><c> for</c><00:44:57.180><c> one</c><00:44:57.420><c> step</c>

00:44:57.770 --> 00:44:57.780 align:start position:0%
pass with a break just for one step
 

00:44:57.780 --> 00:44:59.930 align:start position:0%
pass with a break just for one step
looking<00:44:58.680><c> at</c><00:44:58.920><c> the</c><00:44:59.099><c> shapes</c><00:44:59.400><c> along</c><00:44:59.640><c> the</c><00:44:59.819><c> way</c>

00:44:59.930 --> 00:44:59.940 align:start position:0%
looking at the shapes along the way
 

00:44:59.940 --> 00:45:01.490 align:start position:0%
looking at the shapes along the way
they're<00:45:00.240><c> of</c><00:45:00.480><c> course</c><00:45:00.540><c> identical</c><00:45:01.020><c> all</c><00:45:01.319><c> the</c>

00:45:01.490 --> 00:45:01.500 align:start position:0%
they're of course identical all the
 

00:45:01.500 --> 00:45:03.290 align:start position:0%
they're of course identical all the
shapes<00:45:01.740><c> are</c><00:45:01.920><c> the</c><00:45:02.040><c> same</c><00:45:02.160><c> but</c><00:45:02.700><c> the</c><00:45:02.819><c> way</c><00:45:02.940><c> we</c><00:45:03.119><c> see</c>

00:45:03.290 --> 00:45:03.300 align:start position:0%
shapes are the same but the way we see
 

00:45:03.300 --> 00:45:05.089 align:start position:0%
shapes are the same but the way we see
that<00:45:03.660><c> things</c><00:45:03.900><c> are</c><00:45:04.079><c> actually</c><00:45:04.200><c> working</c><00:45:04.500><c> as</c><00:45:04.980><c> we</c>

00:45:05.089 --> 00:45:05.099 align:start position:0%
that things are actually working as we
 

00:45:05.099 --> 00:45:07.010 align:start position:0%
that things are actually working as we
want<00:45:05.339><c> them</c><00:45:05.460><c> to</c><00:45:05.640><c> now</c><00:45:05.819><c> is</c><00:45:06.359><c> that</c><00:45:06.540><c> when</c><00:45:06.660><c> we</c><00:45:06.780><c> look</c><00:45:06.900><c> at</c>

00:45:07.010 --> 00:45:07.020 align:start position:0%
want them to now is that when we look at
 

00:45:07.020 --> 00:45:08.569 align:start position:0%
want them to now is that when we look at
the<00:45:07.079><c> bathroom</c><00:45:07.260><c> layer</c><00:45:07.800><c> the</c><00:45:08.160><c> running</c><00:45:08.280><c> mean</c>

00:45:08.569 --> 00:45:08.579 align:start position:0%
the bathroom layer the running mean
 

00:45:08.579 --> 00:45:11.150 align:start position:0%
the bathroom layer the running mean
shape<00:45:08.940><c> is</c><00:45:09.060><c> now</c><00:45:09.180><c> one</c><00:45:09.300><c> by</c><00:45:09.480><c> one</c><00:45:09.660><c> by</c><00:45:09.839><c> 68.</c><00:45:10.560><c> so</c><00:45:10.980><c> we're</c>

00:45:11.150 --> 00:45:11.160 align:start position:0%
shape is now one by one by 68. so we're
 

00:45:11.160 --> 00:45:13.609 align:start position:0%
shape is now one by one by 68. so we're
only<00:45:11.339><c> maintaining</c><00:45:11.819><c> 68</c><00:45:12.420><c> means</c><00:45:12.900><c> for</c><00:45:13.260><c> every</c><00:45:13.440><c> one</c>

00:45:13.609 --> 00:45:13.619 align:start position:0%
only maintaining 68 means for every one
 

00:45:13.619 --> 00:45:15.650 align:start position:0%
only maintaining 68 means for every one
of<00:45:13.800><c> our</c><00:45:13.920><c> channels</c><00:45:14.579><c> and</c><00:45:14.940><c> we're</c><00:45:15.060><c> treating</c><00:45:15.359><c> both</c>

00:45:15.650 --> 00:45:15.660 align:start position:0%
of our channels and we're treating both
 

00:45:15.660 --> 00:45:17.809 align:start position:0%
of our channels and we're treating both
the<00:45:16.200><c> zeroth</c><00:45:16.560><c> and</c><00:45:16.740><c> the</c><00:45:16.859><c> First</c><00:45:16.980><c> Dimension</c><00:45:17.400><c> as</c><00:45:17.579><c> a</c>

00:45:17.809 --> 00:45:17.819 align:start position:0%
the zeroth and the First Dimension as a
 

00:45:17.819 --> 00:45:19.730 align:start position:0%
the zeroth and the First Dimension as a
batch<00:45:18.060><c> Dimension</c><00:45:18.660><c> which</c><00:45:19.079><c> is</c><00:45:19.200><c> exactly</c><00:45:19.500><c> what</c><00:45:19.619><c> we</c>

00:45:19.730 --> 00:45:19.740 align:start position:0%
batch Dimension which is exactly what we
 

00:45:19.740 --> 00:45:21.410 align:start position:0%
batch Dimension which is exactly what we
want<00:45:19.920><c> so</c><00:45:20.339><c> let</c><00:45:20.460><c> me</c><00:45:20.579><c> retrain</c><00:45:20.880><c> the</c><00:45:21.000><c> neural</c><00:45:21.300><c> lot</c>

00:45:21.410 --> 00:45:21.420 align:start position:0%
want so let me retrain the neural lot
 

00:45:21.420 --> 00:45:22.849 align:start position:0%
want so let me retrain the neural lot
now<00:45:21.599><c> okay</c><00:45:21.839><c> so</c><00:45:22.020><c> I</c><00:45:22.140><c> retrained</c><00:45:22.440><c> the</c><00:45:22.500><c> neural</c><00:45:22.740><c> net</c>

00:45:22.849 --> 00:45:22.859 align:start position:0%
now okay so I retrained the neural net
 

00:45:22.859 --> 00:45:25.130 align:start position:0%
now okay so I retrained the neural net
with<00:45:23.040><c> the</c><00:45:23.160><c> bug</c><00:45:23.280><c> fix</c><00:45:23.520><c> we</c><00:45:24.240><c> get</c><00:45:24.420><c> a</c><00:45:24.540><c> nice</c><00:45:24.660><c> curve</c><00:45:24.960><c> and</c>

00:45:25.130 --> 00:45:25.140 align:start position:0%
with the bug fix we get a nice curve and
 

00:45:25.140 --> 00:45:25.970 align:start position:0%
with the bug fix we get a nice curve and
when<00:45:25.260><c> we</c><00:45:25.440><c> look</c><00:45:25.500><c> at</c><00:45:25.619><c> the</c><00:45:25.680><c> validation</c>

00:45:25.970 --> 00:45:25.980 align:start position:0%
when we look at the validation
 

00:45:25.980 --> 00:45:27.530 align:start position:0%
when we look at the validation
performance<00:45:26.460><c> we</c><00:45:26.640><c> do</c><00:45:26.819><c> actually</c><00:45:27.000><c> see</c><00:45:27.240><c> a</c><00:45:27.420><c> slight</c>

00:45:27.530 --> 00:45:27.540 align:start position:0%
performance we do actually see a slight
 

00:45:27.540 --> 00:45:30.190 align:start position:0%
performance we do actually see a slight
Improvement<00:45:28.020><c> so</c><00:45:28.560><c> we</c><00:45:28.680><c> went</c><00:45:28.859><c> from</c><00:45:29.040><c> 2.029</c><00:45:29.880><c> to</c>

00:45:30.190 --> 00:45:30.200 align:start position:0%
Improvement so we went from 2.029 to
 

00:45:30.200 --> 00:45:32.930 align:start position:0%
Improvement so we went from 2.029 to
2.022<00:45:31.200><c> so</c><00:45:31.859><c> basically</c><00:45:32.160><c> the</c><00:45:32.280><c> bug</c><00:45:32.460><c> inside</c><00:45:32.760><c> the</c>

00:45:32.930 --> 00:45:32.940 align:start position:0%
2.022 so basically the bug inside the
 

00:45:32.940 --> 00:45:35.270 align:start position:0%
2.022 so basically the bug inside the
bathroom<00:45:33.060><c> was</c><00:45:33.480><c> holding</c><00:45:33.780><c> up</c><00:45:33.900><c> us</c><00:45:34.560><c> back</c><00:45:34.740><c> like</c><00:45:35.099><c> a</c>

00:45:35.270 --> 00:45:35.280 align:start position:0%
bathroom was holding up us back like a
 

00:45:35.280 --> 00:45:37.550 align:start position:0%
bathroom was holding up us back like a
little<00:45:35.400><c> bit</c><00:45:35.520><c> it</c><00:45:35.700><c> looks</c><00:45:35.940><c> like</c><00:45:36.319><c> and</c><00:45:37.319><c> we</c><00:45:37.440><c> are</c>

00:45:37.550 --> 00:45:37.560 align:start position:0%
little bit it looks like and we are
 

00:45:37.560 --> 00:45:39.050 align:start position:0%
little bit it looks like and we are
getting<00:45:37.740><c> a</c><00:45:37.920><c> tiny</c><00:45:38.220><c> Improvement</c><00:45:38.520><c> now</c><00:45:38.700><c> but</c><00:45:38.940><c> it's</c>

00:45:39.050 --> 00:45:39.060 align:start position:0%
getting a tiny Improvement now but it's
 

00:45:39.060 --> 00:45:40.069 align:start position:0%
getting a tiny Improvement now but it's
not<00:45:39.119><c> clear</c><00:45:39.240><c> if</c><00:45:39.420><c> this</c><00:45:39.540><c> is</c><00:45:39.720><c> statistical</c>

00:45:40.069 --> 00:45:40.079 align:start position:0%
not clear if this is statistical
 

00:45:40.079 --> 00:45:41.569 align:start position:0%
not clear if this is statistical
significant

00:45:41.569 --> 00:45:41.579 align:start position:0%
significant
 

00:45:41.579 --> 00:45:42.530 align:start position:0%
significant
um

00:45:42.530 --> 00:45:42.540 align:start position:0%
um
 

00:45:42.540 --> 00:45:44.510 align:start position:0%
um
and<00:45:43.140><c> the</c><00:45:43.380><c> reason</c><00:45:43.500><c> we</c><00:45:43.740><c> slightly</c><00:45:44.099><c> expect</c><00:45:44.280><c> an</c>

00:45:44.510 --> 00:45:44.520 align:start position:0%
and the reason we slightly expect an
 

00:45:44.520 --> 00:45:46.069 align:start position:0%
and the reason we slightly expect an
improvement<00:45:44.880><c> is</c><00:45:45.060><c> because</c><00:45:45.300><c> we're</c><00:45:45.839><c> not</c>

00:45:46.069 --> 00:45:46.079 align:start position:0%
improvement is because we're not
 

00:45:46.079 --> 00:45:47.569 align:start position:0%
improvement is because we're not
maintaining<00:45:46.500><c> so</c><00:45:46.680><c> many</c><00:45:46.800><c> different</c><00:45:46.980><c> means</c><00:45:47.400><c> and</c>

00:45:47.569 --> 00:45:47.579 align:start position:0%
maintaining so many different means and
 

00:45:47.579 --> 00:45:49.430 align:start position:0%
maintaining so many different means and
variances<00:45:48.000><c> that</c><00:45:48.420><c> are</c><00:45:48.540><c> only</c><00:45:48.660><c> estimated</c><00:45:49.079><c> using</c>

00:45:49.430 --> 00:45:49.440 align:start position:0%
variances that are only estimated using
 

00:45:49.440 --> 00:45:52.370 align:start position:0%
variances that are only estimated using
using<00:45:49.920><c> 32</c><00:45:50.339><c> numbers</c><00:45:50.640><c> effectively</c><00:45:51.359><c> now</c><00:45:52.079><c> we</c><00:45:52.260><c> are</c>

00:45:52.370 --> 00:45:52.380 align:start position:0%
using 32 numbers effectively now we are
 

00:45:52.380 --> 00:45:54.650 align:start position:0%
using 32 numbers effectively now we are
estimating<00:45:52.740><c> them</c><00:45:52.859><c> using</c><00:45:53.220><c> 32</c><00:45:53.579><c> times</c><00:45:53.940><c> 4</c><00:45:54.300><c> numbers</c>

00:45:54.650 --> 00:45:54.660 align:start position:0%
estimating them using 32 times 4 numbers
 

00:45:54.660 --> 00:45:56.690 align:start position:0%
estimating them using 32 times 4 numbers
so<00:45:55.319><c> you</c><00:45:55.440><c> just</c><00:45:55.560><c> have</c><00:45:55.680><c> a</c><00:45:55.859><c> lot</c><00:45:55.980><c> more</c><00:45:56.160><c> numbers</c><00:45:56.400><c> that</c>

00:45:56.690 --> 00:45:56.700 align:start position:0%
so you just have a lot more numbers that
 

00:45:56.700 --> 00:45:58.550 align:start position:0%
so you just have a lot more numbers that
go<00:45:56.880><c> into</c><00:45:57.000><c> any</c><00:45:57.300><c> one</c><00:45:57.540><c> estimate</c><00:45:57.960><c> of</c><00:45:58.140><c> the</c><00:45:58.260><c> mean</c><00:45:58.380><c> and</c>

00:45:58.550 --> 00:45:58.560 align:start position:0%
go into any one estimate of the mean and
 

00:45:58.560 --> 00:46:01.430 align:start position:0%
go into any one estimate of the mean and
variance<00:45:59.000><c> and</c><00:46:00.000><c> it</c><00:46:00.660><c> allows</c><00:46:00.900><c> things</c><00:46:01.020><c> to</c><00:46:01.200><c> be</c><00:46:01.319><c> a</c>

00:46:01.430 --> 00:46:01.440 align:start position:0%
variance and it allows things to be a
 

00:46:01.440 --> 00:46:03.170 align:start position:0%
variance and it allows things to be a
bit<00:46:01.500><c> more</c><00:46:01.619><c> stable</c><00:46:01.980><c> and</c><00:46:02.160><c> less</c><00:46:02.280><c> Wiggly</c><00:46:02.760><c> inside</c>

00:46:03.170 --> 00:46:03.180 align:start position:0%
bit more stable and less Wiggly inside
 

00:46:03.180 --> 00:46:07.010 align:start position:0%
bit more stable and less Wiggly inside
those<00:46:03.540><c> estimates</c><00:46:04.020><c> of</c><00:46:04.260><c> those</c><00:46:05.160><c> statistics</c><00:46:06.020><c> so</c>

00:46:07.010 --> 00:46:07.020 align:start position:0%
those estimates of those statistics so
 

00:46:07.020 --> 00:46:08.510 align:start position:0%
those estimates of those statistics so
pretty<00:46:07.200><c> nice</c><00:46:07.440><c> with</c><00:46:07.980><c> this</c><00:46:08.160><c> more</c><00:46:08.339><c> General</c>

00:46:08.510 --> 00:46:08.520 align:start position:0%
pretty nice with this more General
 

00:46:08.520 --> 00:46:10.309 align:start position:0%
pretty nice with this more General
architecture<00:46:09.060><c> in</c><00:46:09.300><c> place</c><00:46:09.420><c> we</c><00:46:09.720><c> are</c><00:46:09.900><c> now</c><00:46:10.020><c> set</c><00:46:10.140><c> up</c>

00:46:10.309 --> 00:46:10.319 align:start position:0%
architecture in place we are now set up
 

00:46:10.319 --> 00:46:12.410 align:start position:0%
architecture in place we are now set up
to<00:46:10.619><c> push</c><00:46:11.040><c> the</c><00:46:11.280><c> performance</c><00:46:11.640><c> further</c><00:46:12.000><c> by</c>

00:46:12.410 --> 00:46:12.420 align:start position:0%
to push the performance further by
 

00:46:12.420 --> 00:46:14.450 align:start position:0%
to push the performance further by
increasing<00:46:12.839><c> the</c><00:46:12.960><c> size</c><00:46:13.079><c> of</c><00:46:13.260><c> the</c><00:46:13.380><c> network</c><00:46:13.980><c> so</c>

00:46:14.450 --> 00:46:14.460 align:start position:0%
increasing the size of the network so
 

00:46:14.460 --> 00:46:16.190 align:start position:0%
increasing the size of the network so
for<00:46:14.640><c> example</c><00:46:14.819><c> I</c><00:46:15.180><c> bumped</c><00:46:15.599><c> up</c><00:46:15.720><c> the</c><00:46:15.900><c> number</c><00:46:16.020><c> of</c>

00:46:16.190 --> 00:46:16.200 align:start position:0%
for example I bumped up the number of
 

00:46:16.200 --> 00:46:19.309 align:start position:0%
for example I bumped up the number of
embeddings<00:46:16.560><c> to</c><00:46:16.740><c> 24</c><00:46:16.980><c> instead</c><00:46:17.819><c> of</c><00:46:17.880><c> 10</c><00:46:18.060><c> and</c><00:46:18.839><c> also</c>

00:46:19.309 --> 00:46:19.319 align:start position:0%
embeddings to 24 instead of 10 and also
 

00:46:19.319 --> 00:46:21.050 align:start position:0%
embeddings to 24 instead of 10 and also
increased<00:46:19.560><c> number</c><00:46:19.740><c> of</c><00:46:19.859><c> hidden</c><00:46:20.160><c> units</c><00:46:20.520><c> but</c>

00:46:21.050 --> 00:46:21.060 align:start position:0%
increased number of hidden units but
 

00:46:21.060 --> 00:46:23.030 align:start position:0%
increased number of hidden units but
using<00:46:21.359><c> the</c><00:46:21.480><c> exact</c><00:46:21.660><c> same</c><00:46:21.780><c> architecture</c><00:46:22.319><c> we</c><00:46:22.859><c> now</c>

00:46:23.030 --> 00:46:23.040 align:start position:0%
using the exact same architecture we now
 

00:46:23.040 --> 00:46:25.970 align:start position:0%
using the exact same architecture we now
have<00:46:23.220><c> 76</c><00:46:23.940><c> 000</c><00:46:24.060><c> parameters</c><00:46:24.599><c> and</c><00:46:25.440><c> the</c><00:46:25.680><c> training</c>

00:46:25.970 --> 00:46:25.980 align:start position:0%
have 76 000 parameters and the training
 

00:46:25.980 --> 00:46:28.309 align:start position:0%
have 76 000 parameters and the training
takes<00:46:26.220><c> a</c><00:46:26.400><c> lot</c><00:46:26.520><c> longer</c><00:46:26.940><c> but</c><00:46:27.660><c> we</c><00:46:27.780><c> do</c><00:46:27.900><c> get</c><00:46:28.079><c> a</c><00:46:28.200><c> nice</c>

00:46:28.309 --> 00:46:28.319 align:start position:0%
takes a lot longer but we do get a nice
 

00:46:28.319 --> 00:46:29.690 align:start position:0%
takes a lot longer but we do get a nice
curve<00:46:28.680><c> and</c><00:46:29.220><c> then</c><00:46:29.280><c> when</c><00:46:29.460><c> you</c><00:46:29.579><c> actually</c>

00:46:29.690 --> 00:46:29.700 align:start position:0%
curve and then when you actually
 

00:46:29.700 --> 00:46:31.430 align:start position:0%
curve and then when you actually
evaluate<00:46:30.180><c> the</c><00:46:30.300><c> performance</c><00:46:30.660><c> we</c><00:46:31.200><c> are</c><00:46:31.319><c> now</c>

00:46:31.430 --> 00:46:31.440 align:start position:0%
evaluate the performance we are now
 

00:46:31.440 --> 00:46:33.470 align:start position:0%
evaluate the performance we are now
getting<00:46:31.560><c> validation</c><00:46:31.980><c> performance</c><00:46:32.460><c> of</c><00:46:32.579><c> 1.993</c>

00:46:33.470 --> 00:46:33.480 align:start position:0%
getting validation performance of 1.993
 

00:46:33.480 --> 00:46:36.950 align:start position:0%
getting validation performance of 1.993
so<00:46:34.140><c> we've</c><00:46:34.440><c> crossed</c><00:46:34.740><c> over</c><00:46:34.980><c> the</c><00:46:35.220><c> 2.0</c><00:46:35.839><c> sort</c><00:46:36.839><c> of</c>

00:46:36.950 --> 00:46:36.960 align:start position:0%
so we've crossed over the 2.0 sort of
 

00:46:36.960 --> 00:46:39.770 align:start position:0%
so we've crossed over the 2.0 sort of
territory<00:46:37.380><c> and</c><00:46:37.980><c> right</c><00:46:38.220><c> about</c><00:46:38.460><c> 1.99</c><00:46:39.060><c> but</c><00:46:39.540><c> we</c>

00:46:39.770 --> 00:46:39.780 align:start position:0%
territory and right about 1.99 but we
 

00:46:39.780 --> 00:46:42.170 align:start position:0%
territory and right about 1.99 but we
are<00:46:39.900><c> starting</c><00:46:40.079><c> to</c><00:46:40.319><c> have</c><00:46:40.440><c> to</c><00:46:40.740><c> wait</c><00:46:41.640><c> quite</c><00:46:42.000><c> a</c><00:46:42.060><c> bit</c>

00:46:42.170 --> 00:46:42.180 align:start position:0%
are starting to have to wait quite a bit
 

00:46:42.180 --> 00:46:44.150 align:start position:0%
are starting to have to wait quite a bit
longer<00:46:42.480><c> and</c><00:46:43.140><c> we're</c><00:46:43.319><c> a</c><00:46:43.619><c> little</c><00:46:43.680><c> bit</c><00:46:43.800><c> in</c><00:46:44.040><c> the</c>

00:46:44.150 --> 00:46:44.160 align:start position:0%
longer and we're a little bit in the
 

00:46:44.160 --> 00:46:46.010 align:start position:0%
longer and we're a little bit in the
dark<00:46:44.339><c> with</c><00:46:45.060><c> respect</c><00:46:45.300><c> to</c><00:46:45.420><c> the</c><00:46:45.599><c> correct</c><00:46:45.780><c> setting</c>

00:46:46.010 --> 00:46:46.020 align:start position:0%
dark with respect to the correct setting
 

00:46:46.020 --> 00:46:47.329 align:start position:0%
dark with respect to the correct setting
of<00:46:46.140><c> the</c><00:46:46.200><c> hyper</c><00:46:46.500><c> parameters</c><00:46:46.859><c> here</c><00:46:47.040><c> and</c><00:46:47.220><c> the</c>

00:46:47.329 --> 00:46:47.339 align:start position:0%
of the hyper parameters here and the
 

00:46:47.339 --> 00:46:48.710 align:start position:0%
of the hyper parameters here and the
learning<00:46:47.579><c> rates</c><00:46:47.760><c> and</c><00:46:47.880><c> so</c><00:46:48.060><c> on</c><00:46:48.180><c> because</c><00:46:48.540><c> the</c>

00:46:48.710 --> 00:46:48.720 align:start position:0%
learning rates and so on because the
 

00:46:48.720 --> 00:46:50.089 align:start position:0%
learning rates and so on because the
experiments<00:46:49.140><c> are</c><00:46:49.200><c> starting</c><00:46:49.380><c> to</c><00:46:49.500><c> take</c><00:46:49.680><c> longer</c>

00:46:50.089 --> 00:46:50.099 align:start position:0%
experiments are starting to take longer
 

00:46:50.099 --> 00:46:52.190 align:start position:0%
experiments are starting to take longer
to<00:46:50.400><c> train</c><00:46:50.579><c> and</c><00:46:51.180><c> so</c><00:46:51.300><c> we</c><00:46:51.420><c> are</c><00:46:51.599><c> missing</c><00:46:51.900><c> sort</c><00:46:52.079><c> of</c>

00:46:52.190 --> 00:46:52.200 align:start position:0%
to train and so we are missing sort of
 

00:46:52.200 --> 00:46:54.650 align:start position:0%
to train and so we are missing sort of
like<00:46:52.260><c> an</c><00:46:52.440><c> experimental</c><00:46:52.920><c> harness</c><00:46:53.280><c> on</c><00:46:54.000><c> which</c><00:46:54.359><c> we</c>

00:46:54.650 --> 00:46:54.660 align:start position:0%
like an experimental harness on which we
 

00:46:54.660 --> 00:46:56.630 align:start position:0%
like an experimental harness on which we
could<00:46:54.839><c> run</c><00:46:55.319><c> a</c><00:46:55.500><c> number</c><00:46:55.619><c> of</c><00:46:55.740><c> experiments</c><00:46:56.280><c> and</c>

00:46:56.630 --> 00:46:56.640 align:start position:0%
could run a number of experiments and
 

00:46:56.640 --> 00:46:58.069 align:start position:0%
could run a number of experiments and
really<00:46:56.819><c> tune</c><00:46:57.000><c> this</c><00:46:57.240><c> architecture</c><00:46:57.540><c> very</c><00:46:57.900><c> well</c>

00:46:58.069 --> 00:46:58.079 align:start position:0%
really tune this architecture very well
 

00:46:58.079 --> 00:46:59.870 align:start position:0%
really tune this architecture very well
so<00:46:58.680><c> I'd</c><00:46:58.740><c> like</c><00:46:58.920><c> to</c><00:46:59.040><c> conclude</c><00:46:59.280><c> now</c><00:46:59.460><c> with</c><00:46:59.640><c> a</c><00:46:59.760><c> few</c>

00:46:59.870 --> 00:46:59.880 align:start position:0%
so I'd like to conclude now with a few
 

00:46:59.880 --> 00:47:02.089 align:start position:0%
so I'd like to conclude now with a few
notes<00:47:00.660><c> we</c><00:47:01.140><c> basically</c><00:47:01.440><c> improved</c><00:47:01.859><c> our</c>

00:47:02.089 --> 00:47:02.099 align:start position:0%
notes we basically improved our
 

00:47:02.099 --> 00:47:04.550 align:start position:0%
notes we basically improved our
performance<00:47:02.460><c> from</c><00:47:02.880><c> a</c><00:47:03.240><c> starting</c><00:47:03.420><c> of</c><00:47:03.780><c> 2.1</c><00:47:04.319><c> down</c>

00:47:04.550 --> 00:47:04.560 align:start position:0%
performance from a starting of 2.1 down
 

00:47:04.560 --> 00:47:06.890 align:start position:0%
performance from a starting of 2.1 down
to<00:47:04.740><c> 1.9</c><00:47:05.400><c> but</c><00:47:05.940><c> I</c><00:47:06.180><c> don't</c><00:47:06.300><c> want</c><00:47:06.420><c> that</c><00:47:06.540><c> to</c><00:47:06.660><c> be</c><00:47:06.780><c> the</c>

00:47:06.890 --> 00:47:06.900 align:start position:0%
to 1.9 but I don't want that to be the
 

00:47:06.900 --> 00:47:08.569 align:start position:0%
to 1.9 but I don't want that to be the
focus<00:47:07.140><c> because</c><00:47:07.440><c> honestly</c><00:47:07.980><c> we're</c><00:47:08.220><c> kind</c><00:47:08.400><c> of</c><00:47:08.520><c> in</c>

00:47:08.569 --> 00:47:08.579 align:start position:0%
focus because honestly we're kind of in
 

00:47:08.579 --> 00:47:10.190 align:start position:0%
focus because honestly we're kind of in
the<00:47:08.760><c> dark</c><00:47:08.880><c> we</c><00:47:09.180><c> have</c><00:47:09.359><c> no</c><00:47:09.480><c> experimental</c><00:47:09.900><c> harness</c>

00:47:10.190 --> 00:47:10.200 align:start position:0%
the dark we have no experimental harness
 

00:47:10.200 --> 00:47:12.290 align:start position:0%
the dark we have no experimental harness
we're<00:47:10.740><c> just</c><00:47:10.920><c> guessing</c><00:47:11.339><c> and</c><00:47:11.460><c> checking</c><00:47:11.819><c> and</c>

00:47:12.290 --> 00:47:12.300 align:start position:0%
we're just guessing and checking and
 

00:47:12.300 --> 00:47:13.849 align:start position:0%
we're just guessing and checking and
this<00:47:12.480><c> whole</c><00:47:12.599><c> thing</c><00:47:12.780><c> is</c><00:47:13.020><c> terrible</c><00:47:13.500><c> we're</c><00:47:13.680><c> just</c>

00:47:13.849 --> 00:47:13.859 align:start position:0%
this whole thing is terrible we're just
 

00:47:13.859 --> 00:47:15.470 align:start position:0%
this whole thing is terrible we're just
looking<00:47:13.980><c> at</c><00:47:14.220><c> the</c><00:47:14.339><c> training</c><00:47:14.640><c> loss</c><00:47:14.940><c> normally</c>

00:47:15.470 --> 00:47:15.480 align:start position:0%
looking at the training loss normally
 

00:47:15.480 --> 00:47:17.210 align:start position:0%
looking at the training loss normally
you<00:47:15.660><c> want</c><00:47:15.839><c> to</c><00:47:15.900><c> look</c><00:47:16.020><c> at</c><00:47:16.140><c> both</c><00:47:16.380><c> the</c><00:47:16.680><c> training</c>

00:47:17.210 --> 00:47:17.220 align:start position:0%
you want to look at both the training
 

00:47:17.220 --> 00:47:19.849 align:start position:0%
you want to look at both the training
and<00:47:17.400><c> the</c><00:47:17.520><c> validation</c><00:47:17.880><c> loss</c><00:47:18.359><c> together</c><00:47:18.960><c> and</c><00:47:19.680><c> the</c>

00:47:19.849 --> 00:47:19.859 align:start position:0%
and the validation loss together and the
 

00:47:19.859 --> 00:47:20.930 align:start position:0%
and the validation loss together and the
whole<00:47:19.920><c> thing</c><00:47:20.040><c> looks</c><00:47:20.400><c> different</c><00:47:20.520><c> if</c><00:47:20.819><c> you're</c>

00:47:20.930 --> 00:47:20.940 align:start position:0%
whole thing looks different if you're
 

00:47:20.940 --> 00:47:23.329 align:start position:0%
whole thing looks different if you're
actually<00:47:21.119><c> trying</c><00:47:21.359><c> to</c><00:47:21.540><c> squeeze</c><00:47:21.900><c> out</c><00:47:22.020><c> numbers</c>

00:47:23.329 --> 00:47:23.339 align:start position:0%
actually trying to squeeze out numbers
 

00:47:23.339 --> 00:47:25.910 align:start position:0%
actually trying to squeeze out numbers
that<00:47:23.760><c> said</c><00:47:24.000><c> we</c><00:47:24.900><c> did</c><00:47:25.020><c> implement</c><00:47:25.560><c> this</c>

00:47:25.910 --> 00:47:25.920 align:start position:0%
that said we did implement this
 

00:47:25.920 --> 00:47:28.130 align:start position:0%
that said we did implement this
architecture<00:47:26.339><c> from</c><00:47:26.520><c> the</c><00:47:26.640><c> wavenet</c><00:47:27.119><c> paper</c><00:47:27.240><c> but</c>

00:47:28.130 --> 00:47:28.140 align:start position:0%
architecture from the wavenet paper but
 

00:47:28.140 --> 00:47:31.430 align:start position:0%
architecture from the wavenet paper but
we<00:47:28.319><c> did</c><00:47:28.560><c> not</c><00:47:28.800><c> implement</c><00:47:29.520><c> this</c><00:47:30.000><c> specific</c><00:47:30.480><c> uh</c>

00:47:31.430 --> 00:47:31.440 align:start position:0%
we did not implement this specific uh
 

00:47:31.440 --> 00:47:33.290 align:start position:0%
we did not implement this specific uh
forward<00:47:31.619><c> pass</c><00:47:31.920><c> of</c><00:47:32.160><c> it</c><00:47:32.339><c> where</c><00:47:32.760><c> you</c><00:47:32.880><c> have</c><00:47:33.000><c> a</c><00:47:33.119><c> more</c>

00:47:33.290 --> 00:47:33.300 align:start position:0%
forward pass of it where you have a more
 

00:47:33.300 --> 00:47:35.809 align:start position:0%
forward pass of it where you have a more
complicated<00:47:33.660><c> a</c><00:47:34.079><c> linear</c><00:47:34.380><c> layer</c><00:47:34.680><c> sort</c><00:47:34.800><c> of</c><00:47:34.980><c> that</c>

00:47:35.809 --> 00:47:35.819 align:start position:0%
complicated a linear layer sort of that
 

00:47:35.819 --> 00:47:38.569 align:start position:0%
complicated a linear layer sort of that
is<00:47:35.940><c> this</c><00:47:36.180><c> gated</c><00:47:36.420><c> linear</c><00:47:37.200><c> layer</c><00:47:37.500><c> kind</c><00:47:37.680><c> of</c><00:47:37.800><c> and</c>

00:47:38.569 --> 00:47:38.579 align:start position:0%
is this gated linear layer kind of and
 

00:47:38.579 --> 00:47:40.550 align:start position:0%
is this gated linear layer kind of and
there's<00:47:38.880><c> residual</c><00:47:39.839><c> connections</c><00:47:40.260><c> and</c><00:47:40.380><c> Skip</c>

00:47:40.550 --> 00:47:40.560 align:start position:0%
there's residual connections and Skip
 

00:47:40.560 --> 00:47:42.109 align:start position:0%
there's residual connections and Skip
connections<00:47:41.040><c> and</c><00:47:41.160><c> so</c><00:47:41.280><c> on</c><00:47:41.400><c> so</c><00:47:41.700><c> we</c><00:47:41.819><c> did</c><00:47:42.000><c> not</c>

00:47:42.109 --> 00:47:42.119 align:start position:0%
connections and so on so we did not
 

00:47:42.119 --> 00:47:44.030 align:start position:0%
connections and so on so we did not
Implement<00:47:42.480><c> that</c><00:47:42.660><c> we</c><00:47:42.960><c> just</c><00:47:43.140><c> implemented</c><00:47:43.619><c> this</c>

00:47:44.030 --> 00:47:44.040 align:start position:0%
Implement that we just implemented this
 

00:47:44.040 --> 00:47:46.490 align:start position:0%
Implement that we just implemented this
structure<00:47:45.060><c> I</c><00:47:45.599><c> would</c><00:47:45.720><c> like</c><00:47:45.839><c> to</c><00:47:45.960><c> briefly</c><00:47:46.260><c> hint</c>

00:47:46.490 --> 00:47:46.500 align:start position:0%
structure I would like to briefly hint
 

00:47:46.500 --> 00:47:48.349 align:start position:0%
structure I would like to briefly hint
or<00:47:46.740><c> preview</c><00:47:47.099><c> how</c><00:47:47.579><c> what</c><00:47:47.760><c> we've</c><00:47:48.000><c> done</c><00:47:48.119><c> here</c>

00:47:48.349 --> 00:47:48.359 align:start position:0%
or preview how what we've done here
 

00:47:48.359 --> 00:47:50.329 align:start position:0%
or preview how what we've done here
relates<00:47:48.900><c> to</c><00:47:49.079><c> convolutional</c><00:47:49.500><c> neural</c><00:47:49.980><c> networks</c>

00:47:50.329 --> 00:47:50.339 align:start position:0%
relates to convolutional neural networks
 

00:47:50.339 --> 00:47:52.790 align:start position:0%
relates to convolutional neural networks
as<00:47:50.880><c> used</c><00:47:51.180><c> in</c><00:47:51.359><c> the</c><00:47:51.480><c> wavenet</c><00:47:51.900><c> paper</c><00:47:52.560><c> and</c>

00:47:52.790 --> 00:47:52.800 align:start position:0%
as used in the wavenet paper and
 

00:47:52.800 --> 00:47:54.290 align:start position:0%
as used in the wavenet paper and
basically<00:47:53.099><c> the</c><00:47:53.220><c> use</c><00:47:53.339><c> of</c><00:47:53.520><c> convolutions</c><00:47:53.940><c> is</c>

00:47:54.290 --> 00:47:54.300 align:start position:0%
basically the use of convolutions is
 

00:47:54.300 --> 00:47:56.329 align:start position:0%
basically the use of convolutions is
strictly<00:47:54.599><c> for</c><00:47:54.900><c> efficiency</c><00:47:55.500><c> it</c><00:47:56.160><c> doesn't</c>

00:47:56.329 --> 00:47:56.339 align:start position:0%
strictly for efficiency it doesn't
 

00:47:56.339 --> 00:47:57.410 align:start position:0%
strictly for efficiency it doesn't
actually<00:47:56.520><c> change</c><00:47:56.760><c> the</c><00:47:57.000><c> model</c><00:47:57.119><c> we've</c>

00:47:57.410 --> 00:47:57.420 align:start position:0%
actually change the model we've
 

00:47:57.420 --> 00:47:58.430 align:start position:0%
actually change the model we've
implemented

00:47:58.430 --> 00:47:58.440 align:start position:0%
implemented
 

00:47:58.440 --> 00:48:00.770 align:start position:0%
implemented
so<00:47:59.040><c> here</c><00:47:59.640><c> for</c><00:47:59.819><c> example</c>

00:48:00.770 --> 00:48:00.780 align:start position:0%
so here for example
 

00:48:00.780 --> 00:48:02.750 align:start position:0%
so here for example
let<00:48:01.079><c> me</c><00:48:01.140><c> look</c><00:48:01.260><c> at</c><00:48:01.380><c> a</c><00:48:01.560><c> specific</c><00:48:01.859><c> name</c><00:48:02.280><c> to</c><00:48:02.640><c> work</c>

00:48:02.750 --> 00:48:02.760 align:start position:0%
let me look at a specific name to work
 

00:48:02.760 --> 00:48:05.329 align:start position:0%
let me look at a specific name to work
with<00:48:02.940><c> an</c><00:48:03.060><c> example</c><00:48:03.420><c> so</c><00:48:04.020><c> there's</c><00:48:04.319><c> a</c><00:48:04.800><c> name</c><00:48:04.980><c> in</c><00:48:05.220><c> our</c>

00:48:05.329 --> 00:48:05.339 align:start position:0%
with an example so there's a name in our
 

00:48:05.339 --> 00:48:08.030 align:start position:0%
with an example so there's a name in our
training<00:48:05.640><c> set</c><00:48:05.760><c> and</c><00:48:05.940><c> it's</c><00:48:06.060><c> DeAndre</c><00:48:06.660><c> and</c><00:48:07.560><c> it</c><00:48:07.800><c> has</c>

00:48:08.030 --> 00:48:08.040 align:start position:0%
training set and it's DeAndre and it has
 

00:48:08.040 --> 00:48:10.190 align:start position:0%
training set and it's DeAndre and it has
seven<00:48:08.220><c> letters</c><00:48:08.640><c> so</c><00:48:08.940><c> that</c><00:48:09.180><c> is</c><00:48:09.359><c> eight</c>

00:48:10.190 --> 00:48:10.200 align:start position:0%
seven letters so that is eight
 

00:48:10.200 --> 00:48:12.829 align:start position:0%
seven letters so that is eight
independent<00:48:10.800><c> examples</c><00:48:11.160><c> in</c><00:48:11.460><c> our</c><00:48:11.579><c> model</c><00:48:11.819><c> so</c><00:48:12.540><c> all</c>

00:48:12.829 --> 00:48:12.839 align:start position:0%
independent examples in our model so all
 

00:48:12.839 --> 00:48:14.690 align:start position:0%
independent examples in our model so all
these<00:48:13.079><c> rows</c><00:48:13.380><c> here</c><00:48:13.560><c> are</c><00:48:13.800><c> independent</c><00:48:14.280><c> examples</c>

00:48:14.690 --> 00:48:14.700 align:start position:0%
these rows here are independent examples
 

00:48:14.700 --> 00:48:16.430 align:start position:0%
these rows here are independent examples
of<00:48:15.060><c> the</c><00:48:15.359><c> Android</c>

00:48:16.430 --> 00:48:16.440 align:start position:0%
of the Android
 

00:48:16.440 --> 00:48:18.710 align:start position:0%
of the Android
now<00:48:17.099><c> you</c><00:48:17.400><c> can</c><00:48:17.520><c> forward</c><00:48:17.700><c> of</c><00:48:18.000><c> course</c><00:48:18.119><c> any</c><00:48:18.359><c> one</c><00:48:18.599><c> of</c>

00:48:18.710 --> 00:48:18.720 align:start position:0%
now you can forward of course any one of
 

00:48:18.720 --> 00:48:20.750 align:start position:0%
now you can forward of course any one of
these<00:48:18.839><c> rows</c><00:48:19.200><c> independently</c><00:48:19.859><c> so</c><00:48:20.339><c> I</c><00:48:20.520><c> can</c><00:48:20.640><c> take</c>

00:48:20.750 --> 00:48:20.760 align:start position:0%
these rows independently so I can take
 

00:48:20.760 --> 00:48:24.530 align:start position:0%
these rows independently so I can take
my<00:48:21.000><c> model</c><00:48:21.119><c> and</c><00:48:21.540><c> call</c><00:48:21.920><c> call</c><00:48:22.920><c> it</c><00:48:23.160><c> on</c><00:48:23.640><c> any</c>

00:48:24.530 --> 00:48:24.540 align:start position:0%
my model and call call it on any
 

00:48:24.540 --> 00:48:26.690 align:start position:0%
my model and call call it on any
individual<00:48:25.020><c> index</c><00:48:25.380><c> notice</c><00:48:26.099><c> by</c><00:48:26.280><c> the</c><00:48:26.400><c> way</c><00:48:26.460><c> here</c>

00:48:26.690 --> 00:48:26.700 align:start position:0%
individual index notice by the way here
 

00:48:26.700 --> 00:48:28.370 align:start position:0%
individual index notice by the way here
I'm<00:48:27.000><c> being</c><00:48:27.180><c> a</c><00:48:27.300><c> little</c><00:48:27.359><c> bit</c><00:48:27.540><c> tricky</c>

00:48:28.370 --> 00:48:28.380 align:start position:0%
I'm being a little bit tricky
 

00:48:28.380 --> 00:48:30.290 align:start position:0%
I'm being a little bit tricky
the<00:48:28.740><c> reason</c><00:48:28.859><c> for</c><00:48:29.099><c> this</c><00:48:29.220><c> is</c><00:48:29.460><c> that</c><00:48:29.640><c> extra</c><00:48:29.940><c> at</c>

00:48:30.290 --> 00:48:30.300 align:start position:0%
the reason for this is that extra at
 

00:48:30.300 --> 00:48:33.170 align:start position:0%
the reason for this is that extra at
seven<00:48:30.480><c> that</c><00:48:30.960><c> shape</c><00:48:31.380><c> is</c><00:48:32.280><c> just</c>

00:48:33.170 --> 00:48:33.180 align:start position:0%
seven that shape is just
 

00:48:33.180 --> 00:48:36.410 align:start position:0%
seven that shape is just
um one<00:48:33.900><c> dimensional</c><00:48:34.440><c> array</c><00:48:35.099><c> of</c><00:48:35.339><c> eight</c><00:48:35.579><c> so</c><00:48:36.300><c> you</c>

00:48:36.410 --> 00:48:36.420 align:start position:0%
um one dimensional array of eight so you
 

00:48:36.420 --> 00:48:37.970 align:start position:0%
um one dimensional array of eight so you
can't<00:48:36.599><c> actually</c><00:48:36.780><c> call</c><00:48:37.079><c> the</c><00:48:37.319><c> model</c><00:48:37.500><c> on</c><00:48:37.859><c> it</c>

00:48:37.970 --> 00:48:37.980 align:start position:0%
can't actually call the model on it
 

00:48:37.980 --> 00:48:39.770 align:start position:0%
can't actually call the model on it
you're<00:48:38.280><c> going</c><00:48:38.460><c> to</c><00:48:38.579><c> get</c><00:48:38.760><c> an</c><00:48:39.000><c> error</c><00:48:39.359><c> because</c>

00:48:39.770 --> 00:48:39.780 align:start position:0%
you're going to get an error because
 

00:48:39.780 --> 00:48:41.690 align:start position:0%
you're going to get an error because
there's<00:48:40.020><c> no</c><00:48:40.200><c> batch</c><00:48:40.440><c> dimension</c>

00:48:41.690 --> 00:48:41.700 align:start position:0%
there's no batch dimension
 

00:48:41.700 --> 00:48:45.050 align:start position:0%
there's no batch dimension
so<00:48:42.480><c> when</c><00:48:43.260><c> you</c><00:48:43.380><c> do</c><00:48:43.560><c> extra</c><00:48:43.859><c> at</c>

00:48:45.050 --> 00:48:45.060 align:start position:0%
so when you do extra at
 

00:48:45.060 --> 00:48:47.870 align:start position:0%
so when you do extra at
a<00:48:45.900><c> list</c><00:48:46.319><c> of</c><00:48:46.500><c> seven</c><00:48:46.680><c> then</c><00:48:47.280><c> the</c><00:48:47.460><c> shape</c><00:48:47.579><c> of</c><00:48:47.760><c> this</c>

00:48:47.870 --> 00:48:47.880 align:start position:0%
a list of seven then the shape of this
 

00:48:47.880 --> 00:48:49.730 align:start position:0%
a list of seven then the shape of this
becomes<00:48:48.240><c> one</c><00:48:48.420><c> by</c><00:48:48.660><c> eight</c><00:48:48.839><c> so</c><00:48:49.140><c> I</c><00:48:49.260><c> get</c><00:48:49.440><c> an</c><00:48:49.560><c> extra</c>

00:48:49.730 --> 00:48:49.740 align:start position:0%
becomes one by eight so I get an extra
 

00:48:49.740 --> 00:48:52.010 align:start position:0%
becomes one by eight so I get an extra
batch<00:48:49.980><c> dimension</c><00:48:50.579><c> of</c><00:48:50.880><c> one</c><00:48:51.240><c> and</c><00:48:51.660><c> then</c><00:48:51.780><c> we</c><00:48:51.900><c> can</c>

00:48:52.010 --> 00:48:52.020 align:start position:0%
batch dimension of one and then we can
 

00:48:52.020 --> 00:48:53.450 align:start position:0%
batch dimension of one and then we can
forward<00:48:52.200><c> the</c><00:48:52.440><c> model</c>

00:48:53.450 --> 00:48:53.460 align:start position:0%
forward the model
 

00:48:53.460 --> 00:48:55.190 align:start position:0%
forward the model
so

00:48:55.190 --> 00:48:55.200 align:start position:0%
so
 

00:48:55.200 --> 00:48:57.770 align:start position:0%
so
that<00:48:55.740><c> forwards</c><00:48:56.160><c> a</c><00:48:56.280><c> single</c><00:48:56.520><c> example</c><00:48:56.880><c> and</c><00:48:57.599><c> you</c>

00:48:57.770 --> 00:48:57.780 align:start position:0%
that forwards a single example and you
 

00:48:57.780 --> 00:48:59.030 align:start position:0%
that forwards a single example and you
might<00:48:57.960><c> imagine</c><00:48:58.079><c> that</c><00:48:58.380><c> you</c><00:48:58.560><c> actually</c><00:48:58.680><c> may</c><00:48:58.859><c> want</c>

00:48:59.030 --> 00:48:59.040 align:start position:0%
might imagine that you actually may want
 

00:48:59.040 --> 00:49:01.670 align:start position:0%
might imagine that you actually may want
to<00:48:59.099><c> forward</c><00:48:59.520><c> all</c><00:48:59.940><c> of</c><00:49:00.060><c> these</c><00:49:00.359><c> eight</c>

00:49:01.670 --> 00:49:01.680 align:start position:0%
to forward all of these eight
 

00:49:01.680 --> 00:49:03.230 align:start position:0%
to forward all of these eight
um<00:49:01.740><c> at</c><00:49:02.099><c> the</c><00:49:02.220><c> same</c><00:49:02.339><c> time</c>

00:49:03.230 --> 00:49:03.240 align:start position:0%
um at the same time
 

00:49:03.240 --> 00:49:05.690 align:start position:0%
um at the same time
so<00:49:03.920><c> pre-allocating</c><00:49:04.920><c> some</c><00:49:05.099><c> memory</c><00:49:05.400><c> and</c><00:49:05.579><c> then</c>

00:49:05.690 --> 00:49:05.700 align:start position:0%
so pre-allocating some memory and then
 

00:49:05.700 --> 00:49:07.550 align:start position:0%
so pre-allocating some memory and then
doing<00:49:05.880><c> a</c><00:49:06.060><c> for</c><00:49:06.180><c> Loop</c><00:49:06.480><c> eight</c><00:49:06.780><c> times</c><00:49:07.079><c> and</c>

00:49:07.550 --> 00:49:07.560 align:start position:0%
doing a for Loop eight times and
 

00:49:07.560 --> 00:49:10.250 align:start position:0%
doing a for Loop eight times and
forwarding<00:49:07.980><c> all</c><00:49:08.160><c> of</c><00:49:08.280><c> those</c><00:49:08.460><c> eight</c><00:49:08.880><c> here</c><00:49:09.540><c> will</c>

00:49:10.250 --> 00:49:10.260 align:start position:0%
forwarding all of those eight here will
 

00:49:10.260 --> 00:49:11.809 align:start position:0%
forwarding all of those eight here will
give<00:49:10.500><c> us</c><00:49:10.619><c> all</c><00:49:10.800><c> the</c><00:49:10.920><c> logits</c><00:49:11.339><c> in</c><00:49:11.460><c> all</c><00:49:11.640><c> these</c>

00:49:11.809 --> 00:49:11.819 align:start position:0%
give us all the logits in all these
 

00:49:11.819 --> 00:49:13.130 align:start position:0%
give us all the logits in all these
different<00:49:11.940><c> cases</c>

00:49:13.130 --> 00:49:13.140 align:start position:0%
different cases
 

00:49:13.140 --> 00:49:14.809 align:start position:0%
different cases
now<00:49:13.560><c> for</c><00:49:13.740><c> us</c><00:49:13.859><c> with</c><00:49:14.040><c> the</c><00:49:14.220><c> model</c><00:49:14.339><c> as</c><00:49:14.579><c> we've</c>

00:49:14.809 --> 00:49:14.819 align:start position:0%
now for us with the model as we've
 

00:49:14.819 --> 00:49:16.490 align:start position:0%
now for us with the model as we've
implemented<00:49:15.240><c> it</c><00:49:15.359><c> right</c><00:49:15.540><c> now</c><00:49:15.720><c> this</c><00:49:16.200><c> is</c><00:49:16.319><c> eight</c>

00:49:16.490 --> 00:49:16.500 align:start position:0%
implemented it right now this is eight
 

00:49:16.500 --> 00:49:18.349 align:start position:0%
implemented it right now this is eight
independent<00:49:17.040><c> calls</c><00:49:17.280><c> to</c><00:49:17.400><c> our</c><00:49:17.520><c> model</c>

00:49:18.349 --> 00:49:18.359 align:start position:0%
independent calls to our model
 

00:49:18.359 --> 00:49:20.750 align:start position:0%
independent calls to our model
but<00:49:18.720><c> what</c><00:49:18.960><c> convolutions</c><00:49:19.440><c> allow</c><00:49:19.800><c> you</c><00:49:19.859><c> to</c><00:49:20.040><c> do</c><00:49:20.160><c> is</c>

00:49:20.750 --> 00:49:20.760 align:start position:0%
but what convolutions allow you to do is
 

00:49:20.760 --> 00:49:22.730 align:start position:0%
but what convolutions allow you to do is
it<00:49:20.940><c> allow</c><00:49:21.240><c> you</c><00:49:21.359><c> to</c><00:49:21.480><c> basically</c><00:49:21.839><c> slide</c><00:49:22.380><c> this</c>

00:49:22.730 --> 00:49:22.740 align:start position:0%
it allow you to basically slide this
 

00:49:22.740 --> 00:49:24.770 align:start position:0%
it allow you to basically slide this
model<00:49:22.920><c> efficiently</c><00:49:23.700><c> over</c><00:49:24.300><c> the</c><00:49:24.480><c> input</c>

00:49:24.770 --> 00:49:24.780 align:start position:0%
model efficiently over the input
 

00:49:24.780 --> 00:49:27.770 align:start position:0%
model efficiently over the input
sequence<00:49:25.619><c> and</c><00:49:26.280><c> so</c><00:49:26.579><c> this</c><00:49:27.000><c> for</c><00:49:27.180><c> Loop</c><00:49:27.480><c> can</c><00:49:27.660><c> be</c>

00:49:27.770 --> 00:49:27.780 align:start position:0%
sequence and so this for Loop can be
 

00:49:27.780 --> 00:49:31.069 align:start position:0%
sequence and so this for Loop can be
done<00:49:27.960><c> not</c><00:49:28.380><c> outside</c><00:49:28.800><c> in</c><00:49:29.160><c> Python</c><00:49:29.579><c> but</c><00:49:30.300><c> inside</c><00:49:30.599><c> of</c>

00:49:31.069 --> 00:49:31.079 align:start position:0%
done not outside in Python but inside of
 

00:49:31.079 --> 00:49:33.710 align:start position:0%
done not outside in Python but inside of
kernels<00:49:31.500><c> in</c><00:49:31.740><c> Cuda</c><00:49:32.520><c> and</c><00:49:33.000><c> so</c><00:49:33.119><c> this</c><00:49:33.300><c> for</c><00:49:33.480><c> Loop</c>

00:49:33.710 --> 00:49:33.720 align:start position:0%
kernels in Cuda and so this for Loop
 

00:49:33.720 --> 00:49:35.690 align:start position:0%
kernels in Cuda and so this for Loop
gets<00:49:33.960><c> hidden</c><00:49:34.140><c> into</c><00:49:34.319><c> the</c><00:49:34.500><c> convolution</c>

00:49:35.690 --> 00:49:35.700 align:start position:0%
gets hidden into the convolution
 

00:49:35.700 --> 00:49:37.490 align:start position:0%
gets hidden into the convolution
so<00:49:35.880><c> the</c><00:49:36.060><c> convolution</c><00:49:36.359><c> basically</c><00:49:36.960><c> you</c><00:49:37.380><c> can</c>

00:49:37.490 --> 00:49:37.500 align:start position:0%
so the convolution basically you can
 

00:49:37.500 --> 00:49:40.130 align:start position:0%
so the convolution basically you can
cover<00:49:37.740><c> this</c><00:49:37.980><c> it's</c><00:49:38.220><c> a</c><00:49:38.400><c> for</c><00:49:38.579><c> Loop</c><00:49:38.940><c> applying</c><00:49:39.900><c> a</c>

00:49:40.130 --> 00:49:40.140 align:start position:0%
cover this it's a for Loop applying a
 

00:49:40.140 --> 00:49:43.069 align:start position:0%
cover this it's a for Loop applying a
little<00:49:40.200><c> linear</c><00:49:40.619><c> filter</c><00:49:40.859><c> over</c><00:49:41.700><c> space</c><00:49:42.420><c> of</c><00:49:42.960><c> some</c>

00:49:43.069 --> 00:49:43.079 align:start position:0%
little linear filter over space of some
 

00:49:43.079 --> 00:49:45.290 align:start position:0%
little linear filter over space of some
input<00:49:43.440><c> sequence</c><00:49:43.800><c> and</c><00:49:44.460><c> in</c><00:49:44.640><c> our</c><00:49:44.760><c> case</c><00:49:44.880><c> the</c><00:49:45.119><c> space</c>

00:49:45.290 --> 00:49:45.300 align:start position:0%
input sequence and in our case the space
 

00:49:45.300 --> 00:49:46.550 align:start position:0%
input sequence and in our case the space
we're<00:49:45.480><c> interested</c><00:49:45.780><c> in</c><00:49:45.839><c> is</c><00:49:46.020><c> one</c><00:49:46.140><c> dimensional</c>

00:49:46.550 --> 00:49:46.560 align:start position:0%
we're interested in is one dimensional
 

00:49:46.560 --> 00:49:48.170 align:start position:0%
we're interested in is one dimensional
and<00:49:46.920><c> we're</c><00:49:47.040><c> interested</c><00:49:47.400><c> in</c><00:49:47.460><c> sliding</c><00:49:48.000><c> these</c>

00:49:48.170 --> 00:49:48.180 align:start position:0%
and we're interested in sliding these
 

00:49:48.180 --> 00:49:51.069 align:start position:0%
and we're interested in sliding these
filters<00:49:48.540><c> over</c><00:49:48.900><c> the</c><00:49:49.319><c> input</c><00:49:49.619><c> data</c>

00:49:51.069 --> 00:49:51.079 align:start position:0%
filters over the input data
 

00:49:51.079 --> 00:49:54.349 align:start position:0%
filters over the input data
so<00:49:52.079><c> this</c><00:49:52.440><c> diagram</c><00:49:52.680><c> actually</c><00:49:52.980><c> is</c><00:49:53.220><c> fairly</c><00:49:53.700><c> good</c>

00:49:54.349 --> 00:49:54.359 align:start position:0%
so this diagram actually is fairly good
 

00:49:54.359 --> 00:49:55.430 align:start position:0%
so this diagram actually is fairly good
as<00:49:54.599><c> well</c>

00:49:55.430 --> 00:49:55.440 align:start position:0%
as well
 

00:49:55.440 --> 00:49:57.170 align:start position:0%
as well
basically<00:49:56.040><c> what</c><00:49:56.160><c> we've</c><00:49:56.339><c> done</c><00:49:56.520><c> is</c><00:49:56.700><c> here</c><00:49:57.000><c> they</c>

00:49:57.170 --> 00:49:57.180 align:start position:0%
basically what we've done is here they
 

00:49:57.180 --> 00:49:59.270 align:start position:0%
basically what we've done is here they
are<00:49:57.359><c> highlighting</c><00:49:57.720><c> in</c><00:49:57.900><c> Black</c><00:49:58.079><c> one</c><00:49:58.859><c> individ</c>

00:49:59.270 --> 00:49:59.280 align:start position:0%
are highlighting in Black one individ
 

00:49:59.280 --> 00:50:01.430 align:start position:0%
are highlighting in Black one individ
one<00:49:59.640><c> single</c><00:49:59.880><c> sort</c><00:50:00.060><c> of</c><00:50:00.240><c> like</c><00:50:00.300><c> tree</c><00:50:00.720><c> of</c><00:50:01.319><c> this</c>

00:50:01.430 --> 00:50:01.440 align:start position:0%
one single sort of like tree of this
 

00:50:01.440 --> 00:50:03.650 align:start position:0%
one single sort of like tree of this
calculation<00:50:01.980><c> so</c><00:50:02.760><c> just</c><00:50:02.940><c> calculating</c><00:50:03.420><c> the</c>

00:50:03.650 --> 00:50:03.660 align:start position:0%
calculation so just calculating the
 

00:50:03.660 --> 00:50:05.990 align:start position:0%
calculation so just calculating the
single<00:50:04.020><c> output</c><00:50:04.619><c> example</c><00:50:04.980><c> here</c>

00:50:05.990 --> 00:50:06.000 align:start position:0%
single output example here
 

00:50:06.000 --> 00:50:07.130 align:start position:0%
single output example here
um

00:50:07.130 --> 00:50:07.140 align:start position:0%
um
 

00:50:07.140 --> 00:50:08.809 align:start position:0%
um
and<00:50:07.740><c> so</c><00:50:07.920><c> this</c><00:50:08.160><c> is</c><00:50:08.280><c> basically</c><00:50:08.520><c> what</c><00:50:08.640><c> we've</c>

00:50:08.809 --> 00:50:08.819 align:start position:0%
and so this is basically what we've
 

00:50:08.819 --> 00:50:10.910 align:start position:0%
and so this is basically what we've
implemented<00:50:09.300><c> here</c><00:50:09.599><c> we've</c><00:50:10.200><c> implemented</c><00:50:10.619><c> a</c>

00:50:10.910 --> 00:50:10.920 align:start position:0%
implemented here we've implemented a
 

00:50:10.920 --> 00:50:13.490 align:start position:0%
implemented here we've implemented a
single<00:50:11.280><c> this</c><00:50:12.000><c> black</c><00:50:12.240><c> structure</c><00:50:12.839><c> we've</c>

00:50:13.490 --> 00:50:13.500 align:start position:0%
single this black structure we've
 

00:50:13.500 --> 00:50:15.470 align:start position:0%
single this black structure we've
implemented<00:50:13.920><c> that</c><00:50:14.099><c> and</c><00:50:14.460><c> calculated</c><00:50:14.940><c> a</c><00:50:15.180><c> single</c>

00:50:15.470 --> 00:50:15.480 align:start position:0%
implemented that and calculated a single
 

00:50:15.480 --> 00:50:17.569 align:start position:0%
implemented that and calculated a single
output<00:50:15.720><c> like</c><00:50:16.140><c> a</c><00:50:16.260><c> single</c><00:50:16.500><c> example</c>

00:50:17.569 --> 00:50:17.579 align:start position:0%
output like a single example
 

00:50:17.579 --> 00:50:19.130 align:start position:0%
output like a single example
but<00:50:17.940><c> what</c><00:50:18.060><c> collusions</c><00:50:18.480><c> allow</c><00:50:18.720><c> you</c><00:50:18.780><c> to</c><00:50:18.900><c> do</c><00:50:19.020><c> is</c>

00:50:19.130 --> 00:50:19.140 align:start position:0%
but what collusions allow you to do is
 

00:50:19.140 --> 00:50:20.809 align:start position:0%
but what collusions allow you to do is
it<00:50:19.319><c> allows</c><00:50:19.680><c> you</c><00:50:19.680><c> to</c><00:50:19.859><c> take</c><00:50:20.099><c> this</c><00:50:20.579><c> black</c>

00:50:20.809 --> 00:50:20.819 align:start position:0%
it allows you to take this black
 

00:50:20.819 --> 00:50:23.569 align:start position:0%
it allows you to take this black
structure<00:50:21.359><c> and</c><00:50:22.079><c> kind</c><00:50:22.440><c> of</c><00:50:22.560><c> like</c><00:50:22.740><c> slide</c><00:50:23.220><c> it</c><00:50:23.339><c> over</c>

00:50:23.569 --> 00:50:23.579 align:start position:0%
structure and kind of like slide it over
 

00:50:23.579 --> 00:50:26.270 align:start position:0%
structure and kind of like slide it over
the<00:50:23.760><c> input</c><00:50:24.000><c> sequence</c><00:50:24.420><c> here</c><00:50:25.140><c> and</c><00:50:25.800><c> calculate</c>

00:50:26.270 --> 00:50:26.280 align:start position:0%
the input sequence here and calculate
 

00:50:26.280 --> 00:50:29.569 align:start position:0%
the input sequence here and calculate
all<00:50:26.880><c> of</c><00:50:27.000><c> these</c><00:50:27.300><c> orange</c><00:50:28.079><c> outputs</c><00:50:29.040><c> at</c><00:50:29.339><c> the</c><00:50:29.460><c> same</c>

00:50:29.569 --> 00:50:29.579 align:start position:0%
all of these orange outputs at the same
 

00:50:29.579 --> 00:50:31.730 align:start position:0%
all of these orange outputs at the same
time<00:50:29.760><c> or</c><00:50:30.660><c> here</c><00:50:30.900><c> that</c><00:50:31.200><c> corresponds</c><00:50:31.560><c> to</c>

00:50:31.730 --> 00:50:31.740 align:start position:0%
time or here that corresponds to
 

00:50:31.740 --> 00:50:34.849 align:start position:0%
time or here that corresponds to
calculating<00:50:32.160><c> all</c><00:50:32.460><c> of</c><00:50:32.579><c> these</c><00:50:32.880><c> outputs</c><00:50:33.480><c> of</c>

00:50:34.849 --> 00:50:34.859 align:start position:0%
calculating all of these outputs of
 

00:50:34.859 --> 00:50:37.190 align:start position:0%
calculating all of these outputs of
um<00:50:34.920><c> at</c><00:50:35.400><c> all</c><00:50:35.520><c> the</c><00:50:35.700><c> positions</c><00:50:36.180><c> of</c><00:50:36.300><c> DeAndre</c><00:50:36.839><c> at</c>

00:50:37.190 --> 00:50:37.200 align:start position:0%
um at all the positions of DeAndre at
 

00:50:37.200 --> 00:50:38.569 align:start position:0%
um at all the positions of DeAndre at
the<00:50:37.319><c> same</c><00:50:37.500><c> time</c>

00:50:38.569 --> 00:50:38.579 align:start position:0%
the same time
 

00:50:38.579 --> 00:50:41.030 align:start position:0%
the same time
and<00:50:39.420><c> the</c><00:50:40.140><c> reason</c><00:50:40.260><c> that</c><00:50:40.440><c> this</c><00:50:40.619><c> is</c><00:50:40.740><c> much</c><00:50:40.859><c> more</c>

00:50:41.030 --> 00:50:41.040 align:start position:0%
and the reason that this is much more
 

00:50:41.040 --> 00:50:43.190 align:start position:0%
and the reason that this is much more
efficient<00:50:41.400><c> is</c><00:50:42.060><c> because</c><00:50:42.180><c> number</c><00:50:42.480><c> one</c><00:50:42.720><c> as</c><00:50:43.020><c> I</c>

00:50:43.190 --> 00:50:43.200 align:start position:0%
efficient is because number one as I
 

00:50:43.200 --> 00:50:44.990 align:start position:0%
efficient is because number one as I
mentioned<00:50:43.380><c> the</c><00:50:43.560><c> for</c><00:50:43.740><c> Loop</c><00:50:44.099><c> is</c><00:50:44.460><c> inside</c><00:50:44.700><c> the</c>

00:50:44.990 --> 00:50:45.000 align:start position:0%
mentioned the for Loop is inside the
 

00:50:45.000 --> 00:50:48.290 align:start position:0%
mentioned the for Loop is inside the
Cuda<00:50:45.359><c> kernels</c><00:50:45.660><c> in</c><00:50:46.200><c> the</c><00:50:46.319><c> sliding</c><00:50:46.740><c> so</c><00:50:47.700><c> that</c>

00:50:48.290 --> 00:50:48.300 align:start position:0%
Cuda kernels in the sliding so that
 

00:50:48.300 --> 00:50:50.390 align:start position:0%
Cuda kernels in the sliding so that
makes<00:50:48.420><c> it</c><00:50:48.599><c> efficient</c><00:50:48.960><c> but</c><00:50:49.559><c> number</c><00:50:49.680><c> two</c><00:50:49.920><c> notice</c>

00:50:50.390 --> 00:50:50.400 align:start position:0%
makes it efficient but number two notice
 

00:50:50.400 --> 00:50:52.430 align:start position:0%
makes it efficient but number two notice
the<00:50:50.640><c> variable</c><00:50:50.940><c> reuse</c><00:50:51.300><c> here</c><00:50:51.599><c> for</c><00:50:52.140><c> example</c><00:50:52.319><c> if</c>

00:50:52.430 --> 00:50:52.440 align:start position:0%
the variable reuse here for example if
 

00:50:52.440 --> 00:50:54.049 align:start position:0%
the variable reuse here for example if
we<00:50:52.559><c> look</c><00:50:52.680><c> at</c><00:50:52.800><c> this</c><00:50:52.920><c> circle</c><00:50:53.099><c> this</c><00:50:53.520><c> node</c><00:50:53.819><c> here</c>

00:50:54.049 --> 00:50:54.059 align:start position:0%
we look at this circle this node here
 

00:50:54.059 --> 00:50:56.809 align:start position:0%
we look at this circle this node here
this<00:50:54.900><c> node</c><00:50:55.140><c> here</c><00:50:55.319><c> is</c><00:50:55.740><c> the</c><00:50:55.980><c> right</c><00:50:56.099><c> child</c><00:50:56.460><c> of</c>

00:50:56.809 --> 00:50:56.819 align:start position:0%
this node here is the right child of
 

00:50:56.819 --> 00:50:59.690 align:start position:0%
this node here is the right child of
this<00:50:57.059><c> node</c><00:50:57.359><c> but</c><00:50:58.140><c> is</c><00:50:58.260><c> also</c><00:50:58.559><c> the</c><00:50:58.740><c> left</c><00:50:58.859><c> child</c><00:50:59.160><c> of</c>

00:50:59.690 --> 00:50:59.700 align:start position:0%
this node but is also the left child of
 

00:50:59.700 --> 00:51:01.069 align:start position:0%
this node but is also the left child of
the<00:50:59.819><c> node</c><00:51:00.119><c> here</c>

00:51:01.069 --> 00:51:01.079 align:start position:0%
the node here
 

00:51:01.079 --> 00:51:03.349 align:start position:0%
the node here
and<00:51:01.559><c> so</c><00:51:01.740><c> basically</c><00:51:02.040><c> this</c><00:51:02.339><c> node</c><00:51:02.640><c> and</c><00:51:02.940><c> its</c><00:51:03.240><c> value</c>

00:51:03.349 --> 00:51:03.359 align:start position:0%
and so basically this node and its value
 

00:51:03.359 --> 00:51:05.510 align:start position:0%
and so basically this node and its value
is<00:51:04.020><c> used</c><00:51:04.200><c> twice</c>

00:51:05.510 --> 00:51:05.520 align:start position:0%
is used twice
 

00:51:05.520 --> 00:51:08.569 align:start position:0%
is used twice
and<00:51:06.119><c> so</c><00:51:06.359><c> right</c><00:51:06.900><c> now</c><00:51:07.079><c> in</c><00:51:07.380><c> this</c><00:51:07.559><c> naive</c><00:51:07.859><c> way</c><00:51:08.040><c> we'd</c>

00:51:08.569 --> 00:51:08.579 align:start position:0%
and so right now in this naive way we'd
 

00:51:08.579 --> 00:51:11.150 align:start position:0%
and so right now in this naive way we'd
have<00:51:08.700><c> to</c><00:51:08.819><c> recalculate</c><00:51:09.420><c> it</c><00:51:09.619><c> but</c><00:51:10.619><c> here</c><00:51:10.800><c> we</c><00:51:11.040><c> are</c>

00:51:11.150 --> 00:51:11.160 align:start position:0%
have to recalculate it but here we are
 

00:51:11.160 --> 00:51:12.650 align:start position:0%
have to recalculate it but here we are
allowed<00:51:11.460><c> to</c><00:51:11.579><c> reuse</c><00:51:11.880><c> it</c>

00:51:12.650 --> 00:51:12.660 align:start position:0%
allowed to reuse it
 

00:51:12.660 --> 00:51:14.089 align:start position:0%
allowed to reuse it
so<00:51:13.020><c> in</c><00:51:13.140><c> the</c><00:51:13.260><c> convolutional</c><00:51:13.740><c> neural</c><00:51:13.980><c> network</c>

00:51:14.089 --> 00:51:14.099 align:start position:0%
so in the convolutional neural network
 

00:51:14.099 --> 00:51:16.190 align:start position:0%
so in the convolutional neural network
you<00:51:14.520><c> think</c><00:51:14.760><c> of</c><00:51:14.940><c> these</c><00:51:15.300><c> linear</c><00:51:15.660><c> layers</c><00:51:15.900><c> that</c><00:51:16.079><c> we</c>

00:51:16.190 --> 00:51:16.200 align:start position:0%
you think of these linear layers that we
 

00:51:16.200 --> 00:51:19.309 align:start position:0%
you think of these linear layers that we
have<00:51:16.319><c> up</c><00:51:16.559><c> above</c><00:51:17.040><c> as</c><00:51:17.579><c> filters</c><00:51:18.119><c> and</c><00:51:19.020><c> we</c><00:51:19.200><c> take</c>

00:51:19.309 --> 00:51:19.319 align:start position:0%
have up above as filters and we take
 

00:51:19.319 --> 00:51:21.290 align:start position:0%
have up above as filters and we take
these<00:51:19.619><c> filters</c><00:51:19.980><c> and</c><00:51:20.520><c> they're</c><00:51:20.640><c> linear</c><00:51:20.940><c> filters</c>

00:51:21.290 --> 00:51:21.300 align:start position:0%
these filters and they're linear filters
 

00:51:21.300 --> 00:51:23.089 align:start position:0%
these filters and they're linear filters
and<00:51:21.720><c> you</c><00:51:21.839><c> slide</c><00:51:22.079><c> them</c><00:51:22.200><c> over</c><00:51:22.380><c> input</c><00:51:22.680><c> sequence</c>

00:51:23.089 --> 00:51:23.099 align:start position:0%
and you slide them over input sequence
 

00:51:23.099 --> 00:51:25.309 align:start position:0%
and you slide them over input sequence
and<00:51:23.700><c> we</c><00:51:23.880><c> calculate</c><00:51:24.240><c> the</c><00:51:24.480><c> first</c><00:51:24.660><c> layer</c><00:51:25.020><c> and</c>

00:51:25.309 --> 00:51:25.319 align:start position:0%
and we calculate the first layer and
 

00:51:25.319 --> 00:51:26.930 align:start position:0%
and we calculate the first layer and
then<00:51:25.440><c> the</c><00:51:25.559><c> second</c><00:51:25.740><c> layer</c><00:51:26.160><c> and</c><00:51:26.520><c> then</c><00:51:26.640><c> the</c><00:51:26.819><c> third</c>

00:51:26.930 --> 00:51:26.940 align:start position:0%
then the second layer and then the third
 

00:51:26.940 --> 00:51:28.609 align:start position:0%
then the second layer and then the third
layer<00:51:27.240><c> and</c><00:51:27.540><c> then</c><00:51:27.660><c> the</c><00:51:27.839><c> output</c><00:51:28.140><c> layer</c><00:51:28.440><c> of</c><00:51:28.500><c> the</c>

00:51:28.609 --> 00:51:28.619 align:start position:0%
layer and then the output layer of the
 

00:51:28.619 --> 00:51:30.230 align:start position:0%
layer and then the output layer of the
sandwich<00:51:28.800><c> and</c><00:51:29.520><c> it's</c><00:51:29.640><c> all</c><00:51:29.819><c> done</c><00:51:30.000><c> very</c>

00:51:30.230 --> 00:51:30.240 align:start position:0%
sandwich and it's all done very
 

00:51:30.240 --> 00:51:32.690 align:start position:0%
sandwich and it's all done very
efficiently<00:51:30.660><c> using</c><00:51:31.200><c> these</c><00:51:31.500><c> convolutions</c>

00:51:32.690 --> 00:51:32.700 align:start position:0%
efficiently using these convolutions
 

00:51:32.700 --> 00:51:34.130 align:start position:0%
efficiently using these convolutions
so<00:51:33.000><c> we're</c><00:51:33.119><c> going</c><00:51:33.240><c> to</c><00:51:33.300><c> cover</c><00:51:33.420><c> that</c><00:51:33.599><c> in</c><00:51:33.900><c> a</c><00:51:33.960><c> future</c>

00:51:34.130 --> 00:51:34.140 align:start position:0%
so we're going to cover that in a future
 

00:51:34.140 --> 00:51:35.809 align:start position:0%
so we're going to cover that in a future
video<00:51:34.380><c> the</c><00:51:34.920><c> second</c><00:51:35.040><c> thing</c><00:51:35.220><c> I</c><00:51:35.339><c> hope</c><00:51:35.520><c> you</c><00:51:35.579><c> took</c>

00:51:35.809 --> 00:51:35.819 align:start position:0%
video the second thing I hope you took
 

00:51:35.819 --> 00:51:37.790 align:start position:0%
video the second thing I hope you took
away<00:51:35.940><c> from</c><00:51:36.119><c> this</c><00:51:36.300><c> video</c><00:51:36.480><c> is</c><00:51:36.960><c> you've</c><00:51:37.500><c> seen</c><00:51:37.619><c> me</c>

00:51:37.790 --> 00:51:37.800 align:start position:0%
away from this video is you've seen me
 

00:51:37.800 --> 00:51:40.370 align:start position:0%
away from this video is you've seen me
basically<00:51:38.099><c> Implement</c><00:51:38.460><c> all</c><00:51:38.760><c> of</c><00:51:38.940><c> these</c><00:51:39.380><c> layer</c>

00:51:40.370 --> 00:51:40.380 align:start position:0%
basically Implement all of these layer
 

00:51:40.380 --> 00:51:42.829 align:start position:0%
basically Implement all of these layer
Lego<00:51:40.740><c> building</c><00:51:41.099><c> blocks</c><00:51:41.579><c> or</c><00:51:42.000><c> module</c><00:51:42.540><c> building</c>

00:51:42.829 --> 00:51:42.839 align:start position:0%
Lego building blocks or module building
 

00:51:42.839 --> 00:51:45.170 align:start position:0%
Lego building blocks or module building
blocks<00:51:43.380><c> and</c><00:51:44.220><c> I'm</c><00:51:44.460><c> implementing</c><00:51:44.880><c> them</c><00:51:45.000><c> over</c>

00:51:45.170 --> 00:51:45.180 align:start position:0%
blocks and I'm implementing them over
 

00:51:45.180 --> 00:51:46.790 align:start position:0%
blocks and I'm implementing them over
here<00:51:45.420><c> and</c><00:51:45.780><c> we've</c><00:51:45.960><c> implemented</c><00:51:46.440><c> a</c><00:51:46.559><c> number</c><00:51:46.680><c> of</c>

00:51:46.790 --> 00:51:46.800 align:start position:0%
here and we've implemented a number of
 

00:51:46.800 --> 00:51:48.410 align:start position:0%
here and we've implemented a number of
layers<00:51:47.099><c> together</c><00:51:47.339><c> and</c><00:51:48.000><c> we've</c><00:51:48.180><c> also</c>

00:51:48.410 --> 00:51:48.420 align:start position:0%
layers together and we've also
 

00:51:48.420 --> 00:51:51.049 align:start position:0%
layers together and we've also
implemented<00:51:48.839><c> these</c><00:51:49.200><c> these</c><00:51:49.680><c> containers</c><00:51:50.099><c> and</c>

00:51:51.049 --> 00:51:51.059 align:start position:0%
implemented these these containers and
 

00:51:51.059 --> 00:51:53.450 align:start position:0%
implemented these these containers and
we've<00:51:51.420><c> overall</c><00:51:51.839><c> pytorchified</c><00:51:52.740><c> our</c><00:51:53.220><c> code</c>

00:51:53.450 --> 00:51:53.460 align:start position:0%
we've overall pytorchified our code
 

00:51:53.460 --> 00:51:54.829 align:start position:0%
we've overall pytorchified our code
quite<00:51:53.940><c> a</c><00:51:54.000><c> bit</c><00:51:54.119><c> more</c>

00:51:54.829 --> 00:51:54.839 align:start position:0%
quite a bit more
 

00:51:54.839 --> 00:51:56.870 align:start position:0%
quite a bit more
now<00:51:55.500><c> basically</c><00:51:55.920><c> what</c><00:51:56.040><c> we're</c><00:51:56.220><c> doing</c><00:51:56.339><c> here</c><00:51:56.579><c> is</c>

00:51:56.870 --> 00:51:56.880 align:start position:0%
now basically what we're doing here is
 

00:51:56.880 --> 00:51:59.210 align:start position:0%
now basically what we're doing here is
we're<00:51:57.180><c> re-implementing</c><00:51:57.900><c> torch.nn</c><00:51:58.800><c> which</c><00:51:59.099><c> is</c>

00:51:59.210 --> 00:51:59.220 align:start position:0%
we're re-implementing torch.nn which is
 

00:51:59.220 --> 00:52:02.349 align:start position:0%
we're re-implementing torch.nn which is
the<00:51:59.339><c> neural</c><00:51:59.640><c> networks</c><00:52:00.380><c> library</c><00:52:01.380><c> on</c><00:52:01.920><c> top</c><00:52:02.099><c> of</c>

00:52:02.349 --> 00:52:02.359 align:start position:0%
the neural networks library on top of
 

00:52:02.359 --> 00:52:04.609 align:start position:0%
the neural networks library on top of
torch.tensor<00:52:03.359><c> and</c><00:52:03.720><c> it</c><00:52:03.839><c> looks</c><00:52:04.140><c> very</c><00:52:04.260><c> much</c><00:52:04.380><c> like</c>

00:52:04.609 --> 00:52:04.619 align:start position:0%
torch.tensor and it looks very much like
 

00:52:04.619 --> 00:52:07.010 align:start position:0%
torch.tensor and it looks very much like
this<00:52:04.859><c> except</c><00:52:05.400><c> it</c><00:52:05.640><c> is</c><00:52:05.760><c> much</c><00:52:06.000><c> better</c><00:52:06.180><c> because</c>

00:52:07.010 --> 00:52:07.020 align:start position:0%
this except it is much better because
 

00:52:07.020 --> 00:52:08.930 align:start position:0%
this except it is much better because
because<00:52:07.559><c> it's</c><00:52:07.800><c> in</c><00:52:07.920><c> pi</c><00:52:08.160><c> torch</c><00:52:08.460><c> instead</c><00:52:08.880><c> of</c>

00:52:08.930 --> 00:52:08.940 align:start position:0%
because it's in pi torch instead of
 

00:52:08.940 --> 00:52:11.569 align:start position:0%
because it's in pi torch instead of
jingling<00:52:09.540><c> my</c><00:52:09.839><c> Jupiter</c><00:52:10.260><c> notebook</c><00:52:10.559><c> so</c><00:52:11.339><c> I</c><00:52:11.460><c> think</c>

00:52:11.569 --> 00:52:11.579 align:start position:0%
jingling my Jupiter notebook so I think
 

00:52:11.579 --> 00:52:13.309 align:start position:0%
jingling my Jupiter notebook so I think
going<00:52:12.000><c> forward</c><00:52:12.180><c> I</c><00:52:12.720><c> will</c><00:52:12.900><c> probably</c><00:52:13.079><c> have</c>

00:52:13.309 --> 00:52:13.319 align:start position:0%
going forward I will probably have
 

00:52:13.319 --> 00:52:15.650 align:start position:0%
going forward I will probably have
considered<00:52:13.740><c> us</c><00:52:13.920><c> having</c><00:52:14.220><c> unlocked</c>

00:52:15.650 --> 00:52:15.660 align:start position:0%
considered us having unlocked
 

00:52:15.660 --> 00:52:18.049 align:start position:0%
considered us having unlocked
um<00:52:15.859><c> torch.nn</c><00:52:16.859><c> we</c><00:52:17.220><c> understand</c><00:52:17.339><c> roughly</c><00:52:17.880><c> what's</c>

00:52:18.049 --> 00:52:18.059 align:start position:0%
um torch.nn we understand roughly what's
 

00:52:18.059 --> 00:52:19.730 align:start position:0%
um torch.nn we understand roughly what's
in<00:52:18.240><c> there</c><00:52:18.359><c> how</c><00:52:18.720><c> these</c><00:52:18.960><c> modules</c><00:52:19.260><c> work</c><00:52:19.440><c> how</c>

00:52:19.730 --> 00:52:19.740 align:start position:0%
in there how these modules work how
 

00:52:19.740 --> 00:52:21.950 align:start position:0%
in there how these modules work how
they're<00:52:19.920><c> nested</c><00:52:20.339><c> and</c><00:52:21.000><c> what</c><00:52:21.480><c> they're</c><00:52:21.599><c> doing</c><00:52:21.780><c> on</c>

00:52:21.950 --> 00:52:21.960 align:start position:0%
they're nested and what they're doing on
 

00:52:21.960 --> 00:52:23.990 align:start position:0%
they're nested and what they're doing on
top<00:52:22.079><c> of</c><00:52:22.200><c> torture</c><00:52:22.559><c> tensor</c><00:52:22.980><c> so</c><00:52:23.400><c> hopefully</c><00:52:23.760><c> we'll</c>

00:52:23.990 --> 00:52:24.000 align:start position:0%
top of torture tensor so hopefully we'll
 

00:52:24.000 --> 00:52:25.970 align:start position:0%
top of torture tensor so hopefully we'll
just<00:52:24.240><c> uh</c><00:52:24.660><c> we'll</c><00:52:25.140><c> just</c><00:52:25.260><c> switch</c><00:52:25.380><c> over</c><00:52:25.619><c> and</c>

00:52:25.970 --> 00:52:25.980 align:start position:0%
just uh we'll just switch over and
 

00:52:25.980 --> 00:52:27.650 align:start position:0%
just uh we'll just switch over and
continue<00:52:26.160><c> and</c><00:52:26.579><c> start</c><00:52:26.700><c> using</c><00:52:26.940><c> torch.net</c>

00:52:27.650 --> 00:52:27.660 align:start position:0%
continue and start using torch.net
 

00:52:27.660 --> 00:52:29.390 align:start position:0%
continue and start using torch.net
directly<00:52:28.079><c> the</c><00:52:28.559><c> next</c><00:52:28.680><c> thing</c><00:52:28.800><c> I</c><00:52:28.920><c> hope</c><00:52:29.040><c> you</c><00:52:29.160><c> got</c><00:52:29.280><c> a</c>

00:52:29.390 --> 00:52:29.400 align:start position:0%
directly the next thing I hope you got a
 

00:52:29.400 --> 00:52:31.250 align:start position:0%
directly the next thing I hope you got a
bit<00:52:29.460><c> of</c><00:52:29.579><c> a</c><00:52:29.700><c> sense</c><00:52:29.880><c> of</c><00:52:30.059><c> is</c><00:52:30.720><c> what</c><00:52:31.140><c> the</c>

00:52:31.250 --> 00:52:31.260 align:start position:0%
bit of a sense of is what the
 

00:52:31.260 --> 00:52:33.230 align:start position:0%
bit of a sense of is what the
development<00:52:31.740><c> process</c><00:52:32.160><c> of</c><00:52:32.640><c> building</c><00:52:33.059><c> deep</c>

00:52:33.230 --> 00:52:33.240 align:start position:0%
development process of building deep
 

00:52:33.240 --> 00:52:35.089 align:start position:0%
development process of building deep
neural<00:52:33.599><c> networks</c><00:52:33.900><c> looks</c><00:52:34.140><c> like</c><00:52:34.200><c> which</c><00:52:34.859><c> I</c><00:52:35.040><c> think</c>

00:52:35.089 --> 00:52:35.099 align:start position:0%
neural networks looks like which I think
 

00:52:35.099 --> 00:52:36.770 align:start position:0%
neural networks looks like which I think
was<00:52:35.339><c> relatively</c><00:52:35.819><c> representative</c><00:52:36.359><c> to</c><00:52:36.660><c> some</c>

00:52:36.770 --> 00:52:36.780 align:start position:0%
was relatively representative to some
 

00:52:36.780 --> 00:52:39.650 align:start position:0%
was relatively representative to some
extent<00:52:37.079><c> so</c><00:52:37.740><c> number</c><00:52:37.980><c> one</c><00:52:38.220><c> we</c><00:52:38.819><c> are</c><00:52:38.940><c> spending</c><00:52:39.359><c> a</c>

00:52:39.650 --> 00:52:39.660 align:start position:0%
extent so number one we are spending a
 

00:52:39.660 --> 00:52:41.510 align:start position:0%
extent so number one we are spending a
lot<00:52:39.780><c> of</c><00:52:39.900><c> time</c><00:52:40.079><c> in</c><00:52:40.500><c> the</c><00:52:40.619><c> documentation</c><00:52:40.980><c> page</c><00:52:41.339><c> of</c>

00:52:41.510 --> 00:52:41.520 align:start position:0%
lot of time in the documentation page of
 

00:52:41.520 --> 00:52:44.030 align:start position:0%
lot of time in the documentation page of
pytorch<00:52:42.119><c> and</c><00:52:42.900><c> we're</c><00:52:43.260><c> reading</c><00:52:43.800><c> through</c><00:52:43.920><c> all</c>

00:52:44.030 --> 00:52:44.040 align:start position:0%
pytorch and we're reading through all
 

00:52:44.040 --> 00:52:45.490 align:start position:0%
pytorch and we're reading through all
the<00:52:44.220><c> layers</c><00:52:44.400><c> looking</c><00:52:44.640><c> at</c><00:52:44.880><c> documentations</c>

00:52:45.490 --> 00:52:45.500 align:start position:0%
the layers looking at documentations
 

00:52:45.500 --> 00:52:48.230 align:start position:0%
the layers looking at documentations
where<00:52:46.500><c> the</c><00:52:46.740><c> shapes</c><00:52:47.040><c> of</c><00:52:47.160><c> the</c><00:52:47.280><c> inputs</c><00:52:47.640><c> what</c><00:52:48.119><c> can</c>

00:52:48.230 --> 00:52:48.240 align:start position:0%
where the shapes of the inputs what can
 

00:52:48.240 --> 00:52:51.309 align:start position:0%
where the shapes of the inputs what can
they<00:52:48.420><c> be</c><00:52:48.599><c> what</c><00:52:48.900><c> does</c><00:52:49.319><c> the</c><00:52:49.440><c> layer</c><00:52:49.680><c> do</c><00:52:50.000><c> and</c><00:52:51.000><c> so</c><00:52:51.180><c> on</c>

00:52:51.309 --> 00:52:51.319 align:start position:0%
they be what does the layer do and so on
 

00:52:51.319 --> 00:52:53.030 align:start position:0%
they be what does the layer do and so on
unfortunately<00:52:52.319><c> I</c><00:52:52.619><c> have</c><00:52:52.740><c> to</c><00:52:52.859><c> say</c><00:52:52.920><c> the</c>

00:52:53.030 --> 00:52:53.040 align:start position:0%
unfortunately I have to say the
 

00:52:53.040 --> 00:52:55.549 align:start position:0%
unfortunately I have to say the
patreon's<00:52:53.579><c> documentation</c><00:52:53.940><c> is</c><00:52:54.359><c> not</c><00:52:54.780><c> are</c><00:52:55.200><c> very</c>

00:52:55.549 --> 00:52:55.559 align:start position:0%
patreon's documentation is not are very
 

00:52:55.559 --> 00:52:57.950 align:start position:0%
patreon's documentation is not are very
good<00:52:55.680><c> they</c><00:52:56.640><c> spend</c><00:52:57.119><c> a</c><00:52:57.300><c> ton</c><00:52:57.420><c> of</c><00:52:57.480><c> time</c><00:52:57.660><c> on</c>

00:52:57.950 --> 00:52:57.960 align:start position:0%
good they spend a ton of time on
 

00:52:57.960 --> 00:52:59.569 align:start position:0%
good they spend a ton of time on
Hardcore<00:52:58.440><c> engineering</c><00:52:58.920><c> of</c><00:52:59.160><c> all</c><00:52:59.280><c> kinds</c><00:52:59.520><c> of</c>

00:52:59.569 --> 00:52:59.579 align:start position:0%
Hardcore engineering of all kinds of
 

00:52:59.579 --> 00:53:01.670 align:start position:0%
Hardcore engineering of all kinds of
distributed<00:52:59.940><c> Primitives</c><00:53:00.540><c> Etc</c><00:53:00.660><c> but</c><00:53:01.319><c> as</c><00:53:01.440><c> far</c><00:53:01.559><c> as</c>

00:53:01.670 --> 00:53:01.680 align:start position:0%
distributed Primitives Etc but as far as
 

00:53:01.680 --> 00:53:03.349 align:start position:0%
distributed Primitives Etc but as far as
I<00:53:01.800><c> can</c><00:53:01.980><c> tell</c><00:53:02.099><c> no</c><00:53:02.700><c> one</c><00:53:02.880><c> is</c><00:53:02.940><c> maintaining</c><00:53:03.300><c> any</c>

00:53:03.349 --> 00:53:03.359 align:start position:0%
I can tell no one is maintaining any
 

00:53:03.359 --> 00:53:06.410 align:start position:0%
I can tell no one is maintaining any
documentation<00:53:03.900><c> it</c><00:53:04.859><c> will</c><00:53:05.099><c> lie</c><00:53:05.400><c> to</c><00:53:05.520><c> you</c><00:53:05.640><c> it</c><00:53:06.240><c> will</c>

00:53:06.410 --> 00:53:06.420 align:start position:0%
documentation it will lie to you it will
 

00:53:06.420 --> 00:53:08.930 align:start position:0%
documentation it will lie to you it will
be<00:53:06.599><c> wrong</c><00:53:06.780><c> it</c><00:53:07.140><c> will</c><00:53:07.260><c> be</c><00:53:07.440><c> incomplete</c><00:53:08.099><c> it</c><00:53:08.760><c> will</c>

00:53:08.930 --> 00:53:08.940 align:start position:0%
be wrong it will be incomplete it will
 

00:53:08.940 --> 00:53:11.990 align:start position:0%
be wrong it will be incomplete it will
be<00:53:09.720><c> unclear</c><00:53:10.260><c> so</c><00:53:11.099><c> unfortunately</c><00:53:11.460><c> it</c><00:53:11.760><c> is</c><00:53:11.880><c> what</c>

00:53:11.990 --> 00:53:12.000 align:start position:0%
be unclear so unfortunately it is what
 

00:53:12.000 --> 00:53:14.690 align:start position:0%
be unclear so unfortunately it is what
it<00:53:12.180><c> is</c><00:53:12.359><c> and</c><00:53:12.660><c> you</c><00:53:12.900><c> just</c><00:53:13.079><c> kind</c><00:53:13.200><c> of</c><00:53:13.319><c> do</c><00:53:13.440><c> your</c><00:53:13.559><c> best</c>

00:53:14.690 --> 00:53:14.700 align:start position:0%
it is and you just kind of do your best
 

00:53:14.700 --> 00:53:17.990 align:start position:0%
it is and you just kind of do your best
um with<00:53:15.300><c> what</c><00:53:15.599><c> they've</c><00:53:16.079><c> given</c><00:53:16.380><c> us</c>

00:53:17.990 --> 00:53:18.000 align:start position:0%
um with what they've given us
 

00:53:18.000 --> 00:53:20.690 align:start position:0%
um with what they've given us
um<00:53:18.119><c> number</c><00:53:18.960><c> two</c>

00:53:20.690 --> 00:53:20.700 align:start position:0%
um number two
 

00:53:20.700 --> 00:53:22.370 align:start position:0%
um number two
uh<00:53:21.300><c> the</c><00:53:21.420><c> other</c><00:53:21.599><c> thing</c><00:53:21.720><c> that</c><00:53:21.839><c> I</c><00:53:21.900><c> hope</c><00:53:22.020><c> you</c><00:53:22.079><c> got</c><00:53:22.260><c> a</c>

00:53:22.370 --> 00:53:22.380 align:start position:0%
uh the other thing that I hope you got a
 

00:53:22.380 --> 00:53:24.589 align:start position:0%
uh the other thing that I hope you got a
sense<00:53:22.500><c> of</c><00:53:22.619><c> is</c><00:53:22.980><c> there's</c><00:53:23.579><c> a</c><00:53:23.760><c> ton</c><00:53:23.940><c> of</c><00:53:24.059><c> trying</c><00:53:24.359><c> to</c>

00:53:24.589 --> 00:53:24.599 align:start position:0%
sense of is there's a ton of trying to
 

00:53:24.599 --> 00:53:26.510 align:start position:0%
sense of is there's a ton of trying to
make<00:53:24.839><c> the</c><00:53:25.500><c> shapes</c><00:53:25.800><c> work</c><00:53:25.980><c> and</c><00:53:26.220><c> there's</c><00:53:26.339><c> a</c><00:53:26.460><c> lot</c>

00:53:26.510 --> 00:53:26.520 align:start position:0%
make the shapes work and there's a lot
 

00:53:26.520 --> 00:53:27.650 align:start position:0%
make the shapes work and there's a lot
of<00:53:26.640><c> gymnastics</c><00:53:27.119><c> around</c><00:53:27.359><c> these</c>

00:53:27.650 --> 00:53:27.660 align:start position:0%
of gymnastics around these
 

00:53:27.660 --> 00:53:29.210 align:start position:0%
of gymnastics around these
multi-dimensional<00:53:28.319><c> arrays</c><00:53:28.680><c> and</c><00:53:28.980><c> are</c><00:53:29.099><c> they</c>

00:53:29.210 --> 00:53:29.220 align:start position:0%
multi-dimensional arrays and are they
 

00:53:29.220 --> 00:53:30.410 align:start position:0%
multi-dimensional arrays and are they
two-dimensional<00:53:29.760><c> three-dimensional</c>

00:53:30.410 --> 00:53:30.420 align:start position:0%
two-dimensional three-dimensional
 

00:53:30.420 --> 00:53:32.510 align:start position:0%
two-dimensional three-dimensional
four-dimensional<00:53:31.200><c> uh</c><00:53:31.800><c> what</c><00:53:31.980><c> layers</c><00:53:32.280><c> take</c>

00:53:32.510 --> 00:53:32.520 align:start position:0%
four-dimensional uh what layers take
 

00:53:32.520 --> 00:53:36.170 align:start position:0%
four-dimensional uh what layers take
what<00:53:32.760><c> shapes</c><00:53:33.300><c> is</c><00:53:33.780><c> it</c><00:53:33.960><c> NCL</c><00:53:34.319><c> or</c><00:53:34.680><c> NLC</c><00:53:35.220><c> and</c><00:53:36.000><c> you're</c>

00:53:36.170 --> 00:53:36.180 align:start position:0%
what shapes is it NCL or NLC and you're
 

00:53:36.180 --> 00:53:38.990 align:start position:0%
what shapes is it NCL or NLC and you're
promoting<00:53:36.900><c> and</c><00:53:37.140><c> viewing</c><00:53:37.500><c> and</c><00:53:38.040><c> it</c><00:53:38.700><c> just</c><00:53:38.880><c> can</c>

00:53:38.990 --> 00:53:39.000 align:start position:0%
promoting and viewing and it just can
 

00:53:39.000 --> 00:53:40.970 align:start position:0%
promoting and viewing and it just can
get<00:53:39.180><c> pretty</c><00:53:39.420><c> messy</c><00:53:39.780><c> and</c><00:53:40.380><c> so</c><00:53:40.500><c> that</c><00:53:40.619><c> brings</c><00:53:40.800><c> me</c>

00:53:40.970 --> 00:53:40.980 align:start position:0%
get pretty messy and so that brings me
 

00:53:40.980 --> 00:53:43.549 align:start position:0%
get pretty messy and so that brings me
to<00:53:41.099><c> number</c><00:53:41.280><c> three</c><00:53:41.579><c> I</c><00:53:42.420><c> very</c><00:53:42.599><c> often</c><00:53:42.900><c> prototype</c>

00:53:43.549 --> 00:53:43.559 align:start position:0%
to number three I very often prototype
 

00:53:43.559 --> 00:53:44.930 align:start position:0%
to number three I very often prototype
these<00:53:43.800><c> layers</c><00:53:44.040><c> and</c><00:53:44.220><c> implementations</c><00:53:44.700><c> in</c>

00:53:44.930 --> 00:53:44.940 align:start position:0%
these layers and implementations in
 

00:53:44.940 --> 00:53:46.549 align:start position:0%
these layers and implementations in
jupyter<00:53:45.359><c> notebooks</c><00:53:45.780><c> and</c><00:53:45.900><c> make</c><00:53:46.020><c> sure</c><00:53:46.140><c> that</c><00:53:46.380><c> all</c>

00:53:46.549 --> 00:53:46.559 align:start position:0%
jupyter notebooks and make sure that all
 

00:53:46.559 --> 00:53:48.710 align:start position:0%
jupyter notebooks and make sure that all
the<00:53:46.680><c> shapes</c><00:53:46.920><c> work</c><00:53:47.160><c> out</c><00:53:47.339><c> and</c><00:53:47.940><c> I'm</c><00:53:48.300><c> spending</c><00:53:48.660><c> a</c>

00:53:48.710 --> 00:53:48.720 align:start position:0%
the shapes work out and I'm spending a
 

00:53:48.720 --> 00:53:50.809 align:start position:0%
the shapes work out and I'm spending a
lot<00:53:48.839><c> of</c><00:53:48.960><c> time</c><00:53:49.079><c> basically</c><00:53:49.800><c> babysitting</c><00:53:50.640><c> the</c>

00:53:50.809 --> 00:53:50.819 align:start position:0%
lot of time basically babysitting the
 

00:53:50.819 --> 00:53:52.130 align:start position:0%
lot of time basically babysitting the
shapes<00:53:51.059><c> and</c><00:53:51.180><c> making</c><00:53:51.359><c> sure</c><00:53:51.660><c> everything</c><00:53:51.900><c> is</c>

00:53:52.130 --> 00:53:52.140 align:start position:0%
shapes and making sure everything is
 

00:53:52.140 --> 00:53:54.290 align:start position:0%
shapes and making sure everything is
correct<00:53:52.440><c> and</c><00:53:53.220><c> then</c><00:53:53.280><c> once</c><00:53:53.700><c> I'm</c><00:53:53.819><c> satisfied</c><00:53:54.180><c> with</c>

00:53:54.290 --> 00:53:54.300 align:start position:0%
correct and then once I'm satisfied with
 

00:53:54.300 --> 00:53:55.370 align:start position:0%
correct and then once I'm satisfied with
the<00:53:54.480><c> functionality</c><00:53:54.839><c> in</c><00:53:54.960><c> the</c><00:53:55.079><c> Jupiter</c>

00:53:55.370 --> 00:53:55.380 align:start position:0%
the functionality in the Jupiter
 

00:53:55.380 --> 00:53:57.290 align:start position:0%
the functionality in the Jupiter
notebook<00:53:55.680><c> I</c><00:53:56.099><c> will</c><00:53:56.220><c> take</c><00:53:56.400><c> that</c><00:53:56.579><c> code</c><00:53:56.760><c> and</c><00:53:56.940><c> copy</c>

00:53:57.290 --> 00:53:57.300 align:start position:0%
notebook I will take that code and copy
 

00:53:57.300 --> 00:53:59.569 align:start position:0%
notebook I will take that code and copy
paste<00:53:57.599><c> it</c><00:53:57.660><c> into</c><00:53:57.900><c> my</c><00:53:58.200><c> repository</c><00:53:58.680><c> of</c><00:53:59.280><c> actual</c>

00:53:59.569 --> 00:53:59.579 align:start position:0%
paste it into my repository of actual
 

00:53:59.579 --> 00:54:02.390 align:start position:0%
paste it into my repository of actual
code<00:53:59.819><c> that</c><00:54:00.359><c> I'm</c><00:54:00.480><c> training</c><00:54:00.780><c> with</c><00:54:00.900><c> and</c><00:54:01.740><c> so</c><00:54:02.040><c> then</c>

00:54:02.390 --> 00:54:02.400 align:start position:0%
code that I'm training with and so then
 

00:54:02.400 --> 00:54:04.549 align:start position:0%
code that I'm training with and so then
I'm<00:54:02.579><c> working</c><00:54:02.760><c> with</c><00:54:03.000><c> vs</c><00:54:03.359><c> code</c><00:54:03.540><c> on</c><00:54:03.780><c> the</c><00:54:03.960><c> side</c><00:54:04.079><c> so</c>

00:54:04.549 --> 00:54:04.559 align:start position:0%
I'm working with vs code on the side so
 

00:54:04.559 --> 00:54:06.049 align:start position:0%
I'm working with vs code on the side so
I<00:54:04.680><c> usually</c><00:54:04.859><c> have</c><00:54:04.980><c> jupyter</c><00:54:05.400><c> notebook</c><00:54:05.640><c> and</c><00:54:05.760><c> vs</c>

00:54:06.049 --> 00:54:06.059 align:start position:0%
I usually have jupyter notebook and vs
 

00:54:06.059 --> 00:54:07.849 align:start position:0%
I usually have jupyter notebook and vs
code<00:54:06.180><c> I</c><00:54:06.599><c> develop</c><00:54:06.900><c> in</c><00:54:07.079><c> Jupiter</c><00:54:07.380><c> notebook</c><00:54:07.680><c> I</c>

00:54:07.849 --> 00:54:07.859 align:start position:0%
code I develop in Jupiter notebook I
 

00:54:07.859 --> 00:54:09.650 align:start position:0%
code I develop in Jupiter notebook I
paste<00:54:08.099><c> into</c><00:54:08.220><c> vs</c><00:54:08.579><c> code</c><00:54:08.760><c> and</c><00:54:09.119><c> then</c><00:54:09.240><c> I</c><00:54:09.359><c> kick</c><00:54:09.540><c> off</c>

00:54:09.650 --> 00:54:09.660 align:start position:0%
paste into vs code and then I kick off
 

00:54:09.660 --> 00:54:11.630 align:start position:0%
paste into vs code and then I kick off
experiments<00:54:10.200><c> from</c><00:54:10.500><c> from</c><00:54:10.859><c> the</c><00:54:11.099><c> reaper</c><00:54:11.520><c> of</c>

00:54:11.630 --> 00:54:11.640 align:start position:0%
experiments from from the reaper of
 

00:54:11.640 --> 00:54:14.569 align:start position:0%
experiments from from the reaper of
course<00:54:11.760><c> from</c><00:54:12.359><c> the</c><00:54:12.540><c> code</c><00:54:12.680><c> repository</c><00:54:13.680><c> so</c>

00:54:14.569 --> 00:54:14.579 align:start position:0%
course from the code repository so
 

00:54:14.579 --> 00:54:16.190 align:start position:0%
course from the code repository so
that's<00:54:14.700><c> roughly</c><00:54:15.119><c> some</c><00:54:15.599><c> notes</c><00:54:15.960><c> on</c><00:54:16.079><c> the</c>

00:54:16.190 --> 00:54:16.200 align:start position:0%
that's roughly some notes on the
 

00:54:16.200 --> 00:54:17.450 align:start position:0%
that's roughly some notes on the
development<00:54:16.559><c> process</c><00:54:16.859><c> of</c><00:54:17.040><c> working</c><00:54:17.280><c> with</c>

00:54:17.450 --> 00:54:17.460 align:start position:0%
development process of working with
 

00:54:17.460 --> 00:54:19.370 align:start position:0%
development process of working with
neurons<00:54:17.819><c> lastly</c><00:54:18.540><c> I</c><00:54:18.780><c> think</c><00:54:18.900><c> this</c><00:54:19.079><c> lecture</c>

00:54:19.370 --> 00:54:19.380 align:start position:0%
neurons lastly I think this lecture
 

00:54:19.380 --> 00:54:21.530 align:start position:0%
neurons lastly I think this lecture
unlocks<00:54:19.800><c> a</c><00:54:20.040><c> lot</c><00:54:20.160><c> of</c><00:54:20.220><c> potential</c><00:54:20.940><c> further</c>

00:54:21.530 --> 00:54:21.540 align:start position:0%
unlocks a lot of potential further
 

00:54:21.540 --> 00:54:23.630 align:start position:0%
unlocks a lot of potential further
lectures<00:54:22.020><c> because</c><00:54:22.440><c> number</c><00:54:22.980><c> one</c><00:54:23.160><c> we</c><00:54:23.400><c> have</c><00:54:23.520><c> to</c>

00:54:23.630 --> 00:54:23.640 align:start position:0%
lectures because number one we have to
 

00:54:23.640 --> 00:54:25.069 align:start position:0%
lectures because number one we have to
convert<00:54:23.880><c> our</c><00:54:24.059><c> neural</c><00:54:24.359><c> network</c><00:54:24.480><c> to</c><00:54:24.900><c> actually</c>

00:54:25.069 --> 00:54:25.079 align:start position:0%
convert our neural network to actually
 

00:54:25.079 --> 00:54:27.109 align:start position:0%
convert our neural network to actually
use<00:54:25.380><c> these</c><00:54:25.740><c> dilated</c><00:54:26.040><c> causal</c><00:54:26.520><c> convolutional</c>

00:54:27.109 --> 00:54:27.119 align:start position:0%
use these dilated causal convolutional
 

00:54:27.119 --> 00:54:30.770 align:start position:0%
use these dilated causal convolutional
layers<00:54:27.920><c> so</c><00:54:28.920><c> implementing</c><00:54:29.400><c> the</c><00:54:29.520><c> comnet</c><00:54:30.359><c> number</c>

00:54:30.770 --> 00:54:30.780 align:start position:0%
layers so implementing the comnet number
 

00:54:30.780 --> 00:54:32.770 align:start position:0%
layers so implementing the comnet number
two<00:54:31.020><c> potentially</c><00:54:31.740><c> starting</c><00:54:31.980><c> to</c><00:54:32.160><c> get</c><00:54:32.339><c> into</c>

00:54:32.770 --> 00:54:32.780 align:start position:0%
two potentially starting to get into
 

00:54:32.780 --> 00:54:34.910 align:start position:0%
two potentially starting to get into
what<00:54:33.780><c> this</c><00:54:33.900><c> means</c><00:54:34.200><c> whatever</c><00:54:34.440><c> residual</c>

00:54:34.910 --> 00:54:34.920 align:start position:0%
what this means whatever residual
 

00:54:34.920 --> 00:54:36.290 align:start position:0%
what this means whatever residual
connections<00:54:35.280><c> and</c><00:54:35.400><c> Skip</c><00:54:35.579><c> connections</c><00:54:36.000><c> and</c><00:54:36.119><c> why</c>

00:54:36.290 --> 00:54:36.300 align:start position:0%
connections and Skip connections and why
 

00:54:36.300 --> 00:54:37.910 align:start position:0%
connections and Skip connections and why
are<00:54:36.420><c> they</c><00:54:36.540><c> useful</c>

00:54:37.910 --> 00:54:37.920 align:start position:0%
are they useful
 

00:54:37.920 --> 00:54:40.790 align:start position:0%
are they useful
number<00:54:38.640><c> three</c><00:54:39.000><c> we</c><00:54:39.960><c> as</c><00:54:40.200><c> I</c><00:54:40.319><c> mentioned</c><00:54:40.559><c> we</c><00:54:40.680><c> don't</c>

00:54:40.790 --> 00:54:40.800 align:start position:0%
number three we as I mentioned we don't
 

00:54:40.800 --> 00:54:42.890 align:start position:0%
number three we as I mentioned we don't
have<00:54:40.920><c> any</c><00:54:41.040><c> experimental</c><00:54:41.640><c> harness</c><00:54:42.119><c> so</c><00:54:42.720><c> right</c>

00:54:42.890 --> 00:54:42.900 align:start position:0%
have any experimental harness so right
 

00:54:42.900 --> 00:54:44.030 align:start position:0%
have any experimental harness so right
now<00:54:43.020><c> I'm</c><00:54:43.140><c> just</c><00:54:43.319><c> guessing</c><00:54:43.680><c> checking</c>

00:54:44.030 --> 00:54:44.040 align:start position:0%
now I'm just guessing checking
 

00:54:44.040 --> 00:54:45.710 align:start position:0%
now I'm just guessing checking
everything<00:54:44.160><c> this</c><00:54:44.819><c> is</c><00:54:44.940><c> not</c><00:54:45.059><c> representative</c><00:54:45.540><c> of</c>

00:54:45.710 --> 00:54:45.720 align:start position:0%
everything this is not representative of
 

00:54:45.720 --> 00:54:47.690 align:start position:0%
everything this is not representative of
typical<00:54:46.079><c> deep</c><00:54:46.319><c> learning</c><00:54:46.680><c> workflows</c><00:54:47.099><c> you</c><00:54:47.579><c> have</c>

00:54:47.690 --> 00:54:47.700 align:start position:0%
typical deep learning workflows you have
 

00:54:47.700 --> 00:54:49.910 align:start position:0%
typical deep learning workflows you have
to<00:54:47.760><c> set</c><00:54:47.940><c> up</c><00:54:48.119><c> your</c><00:54:48.420><c> evaluation</c><00:54:49.020><c> harness</c><00:54:49.440><c> you</c>

00:54:49.910 --> 00:54:49.920 align:start position:0%
to set up your evaluation harness you
 

00:54:49.920 --> 00:54:51.650 align:start position:0%
to set up your evaluation harness you
can<00:54:49.980><c> kick</c><00:54:50.220><c> off</c><00:54:50.339><c> experiments</c><00:54:50.940><c> you</c><00:54:51.240><c> have</c><00:54:51.420><c> lots</c>

00:54:51.650 --> 00:54:51.660 align:start position:0%
can kick off experiments you have lots
 

00:54:51.660 --> 00:54:53.089 align:start position:0%
can kick off experiments you have lots
of<00:54:51.720><c> arguments</c><00:54:52.140><c> that</c><00:54:52.319><c> your</c><00:54:52.500><c> script</c><00:54:52.680><c> can</c><00:54:52.920><c> take</c>

00:54:53.089 --> 00:54:53.099 align:start position:0%
of arguments that your script can take
 

00:54:53.099 --> 00:54:54.829 align:start position:0%
of arguments that your script can take
you're<00:54:53.700><c> you're</c><00:54:54.000><c> kicking</c><00:54:54.420><c> off</c><00:54:54.480><c> a</c><00:54:54.660><c> lot</c><00:54:54.720><c> of</c>

00:54:54.829 --> 00:54:54.839 align:start position:0%
you're you're kicking off a lot of
 

00:54:54.839 --> 00:54:56.329 align:start position:0%
you're you're kicking off a lot of
experimentation<00:54:55.380><c> you're</c><00:54:55.800><c> looking</c><00:54:55.980><c> at</c><00:54:56.160><c> a</c><00:54:56.280><c> lot</c>

00:54:56.329 --> 00:54:56.339 align:start position:0%
experimentation you're looking at a lot
 

00:54:56.339 --> 00:54:57.710 align:start position:0%
experimentation you're looking at a lot
of<00:54:56.460><c> plots</c><00:54:56.700><c> of</c><00:54:56.940><c> training</c><00:54:57.300><c> and</c><00:54:57.359><c> validation</c>

00:54:57.710 --> 00:54:57.720 align:start position:0%
of plots of training and validation
 

00:54:57.720 --> 00:54:59.630 align:start position:0%
of plots of training and validation
losses<00:54:58.260><c> and</c><00:54:58.619><c> you're</c><00:54:58.800><c> looking</c><00:54:58.920><c> at</c><00:54:59.099><c> what</c><00:54:59.520><c> is</c>

00:54:59.630 --> 00:54:59.640 align:start position:0%
losses and you're looking at what is
 

00:54:59.640 --> 00:55:01.190 align:start position:0%
losses and you're looking at what is
working<00:54:59.819><c> and</c><00:55:00.000><c> what</c><00:55:00.180><c> is</c><00:55:00.300><c> not</c><00:55:00.420><c> working</c><00:55:00.599><c> and</c>

00:55:01.190 --> 00:55:01.200 align:start position:0%
working and what is not working and
 

00:55:01.200 --> 00:55:02.329 align:start position:0%
working and what is not working and
you're<00:55:01.319><c> working</c><00:55:01.500><c> on</c><00:55:01.680><c> this</c><00:55:01.859><c> like</c><00:55:02.040><c> population</c>

00:55:02.329 --> 00:55:02.339 align:start position:0%
you're working on this like population
 

00:55:02.339 --> 00:55:04.309 align:start position:0%
you're working on this like population
level<00:55:02.819><c> and</c><00:55:03.420><c> you're</c><00:55:03.540><c> doing</c><00:55:03.720><c> all</c><00:55:03.839><c> these</c><00:55:04.020><c> hyper</c>

00:55:04.309 --> 00:55:04.319 align:start position:0%
level and you're doing all these hyper
 

00:55:04.319 --> 00:55:06.349 align:start position:0%
level and you're doing all these hyper
parameter<00:55:04.740><c> searches</c><00:55:05.160><c> and</c><00:55:05.760><c> so</c><00:55:05.940><c> we've</c><00:55:06.180><c> done</c>

00:55:06.349 --> 00:55:06.359 align:start position:0%
parameter searches and so we've done
 

00:55:06.359 --> 00:55:09.589 align:start position:0%
parameter searches and so we've done
none<00:55:06.720><c> of</c><00:55:06.839><c> that</c><00:55:06.960><c> so</c><00:55:07.200><c> far</c><00:55:07.760><c> so</c><00:55:08.760><c> how</c><00:55:09.180><c> to</c><00:55:09.240><c> set</c><00:55:09.480><c> that</c>

00:55:09.589 --> 00:55:09.599 align:start position:0%
none of that so far so how to set that
 

00:55:09.599 --> 00:55:11.930 align:start position:0%
none of that so far so how to set that
up<00:55:09.780><c> and</c><00:55:09.900><c> how</c><00:55:10.140><c> to</c><00:55:10.260><c> make</c><00:55:10.440><c> it</c><00:55:10.619><c> good</c><00:55:11.099><c> I</c><00:55:11.520><c> think</c><00:55:11.579><c> as</c><00:55:11.819><c> a</c>

00:55:11.930 --> 00:55:11.940 align:start position:0%
up and how to make it good I think as a
 

00:55:11.940 --> 00:55:14.870 align:start position:0%
up and how to make it good I think as a
whole<00:55:12.119><c> another</c><00:55:12.420><c> topic</c><00:55:13.920><c> number</c><00:55:14.460><c> three</c><00:55:14.700><c> we</c>

00:55:14.870 --> 00:55:14.880 align:start position:0%
whole another topic number three we
 

00:55:14.880 --> 00:55:16.250 align:start position:0%
whole another topic number three we
should<00:55:15.059><c> probably</c><00:55:15.180><c> cover</c><00:55:15.420><c> recurring</c><00:55:16.079><c> neural</c>

00:55:16.250 --> 00:55:16.260 align:start position:0%
should probably cover recurring neural
 

00:55:16.260 --> 00:55:19.069 align:start position:0%
should probably cover recurring neural
networks<00:55:16.619><c> RNs</c><00:55:17.520><c> lstm's</c><00:55:18.180><c> grooves</c><00:55:18.480><c> and</c><00:55:18.900><c> of</c>

00:55:19.069 --> 00:55:19.079 align:start position:0%
networks RNs lstm's grooves and of
 

00:55:19.079 --> 00:55:22.670 align:start position:0%
networks RNs lstm's grooves and of
course<00:55:19.200><c> Transformers</c><00:55:19.940><c> so</c><00:55:20.940><c> many</c><00:55:21.420><c> uh</c><00:55:22.079><c> places</c><00:55:22.380><c> to</c>

00:55:22.670 --> 00:55:22.680 align:start position:0%
course Transformers so many uh places to
 

00:55:22.680 --> 00:55:24.890 align:start position:0%
course Transformers so many uh places to
go<00:55:23.000><c> and</c><00:55:24.000><c> we'll</c><00:55:24.180><c> cover</c><00:55:24.359><c> that</c><00:55:24.540><c> in</c><00:55:24.660><c> the</c><00:55:24.780><c> future</c>

00:55:24.890 --> 00:55:24.900 align:start position:0%
go and we'll cover that in the future
 

00:55:24.900 --> 00:55:27.829 align:start position:0%
go and we'll cover that in the future
for<00:55:25.619><c> now</c><00:55:25.800><c> bye</c><00:55:26.579><c> sorry</c><00:55:26.880><c> I</c><00:55:27.119><c> forgot</c><00:55:27.359><c> to</c><00:55:27.480><c> say</c><00:55:27.660><c> that</c>

00:55:27.829 --> 00:55:27.839 align:start position:0%
for now bye sorry I forgot to say that
 

00:55:27.839 --> 00:55:30.109 align:start position:0%
for now bye sorry I forgot to say that
if<00:55:28.380><c> you</c><00:55:28.500><c> are</c><00:55:28.619><c> interested</c><00:55:28.980><c> I</c><00:55:29.520><c> think</c><00:55:29.640><c> it</c><00:55:29.760><c> is</c><00:55:29.940><c> kind</c>

00:55:30.109 --> 00:55:30.119 align:start position:0%
if you are interested I think it is kind
 

00:55:30.119 --> 00:55:31.609 align:start position:0%
if you are interested I think it is kind
of<00:55:30.180><c> interesting</c><00:55:30.480><c> to</c><00:55:30.660><c> try</c><00:55:30.839><c> to</c><00:55:31.020><c> beat</c><00:55:31.200><c> this</c>

00:55:31.609 --> 00:55:31.619 align:start position:0%
of interesting to try to beat this
 

00:55:31.619 --> 00:55:34.309 align:start position:0%
of interesting to try to beat this
number<00:55:31.880><c> 1.993</c><00:55:32.880><c> because</c><00:55:33.660><c> I</c><00:55:33.960><c> really</c><00:55:34.079><c> haven't</c>

00:55:34.309 --> 00:55:34.319 align:start position:0%
number 1.993 because I really haven't
 

00:55:34.319 --> 00:55:36.230 align:start position:0%
number 1.993 because I really haven't
tried<00:55:35.040><c> a</c><00:55:35.160><c> lot</c><00:55:35.280><c> of</c><00:55:35.339><c> experimentation</c><00:55:35.819><c> here</c><00:55:36.059><c> and</c>

00:55:36.230 --> 00:55:36.240 align:start position:0%
tried a lot of experimentation here and
 

00:55:36.240 --> 00:55:37.910 align:start position:0%
tried a lot of experimentation here and
there's<00:55:36.359><c> quite</c><00:55:36.540><c> a</c><00:55:36.660><c> bit</c><00:55:36.720><c> of</c><00:55:36.839><c> fruit</c><00:55:37.440><c> potentially</c>

00:55:37.910 --> 00:55:37.920 align:start position:0%
there's quite a bit of fruit potentially
 

00:55:37.920 --> 00:55:40.609 align:start position:0%
there's quite a bit of fruit potentially
to<00:55:38.640><c> still</c><00:55:38.819><c> purchase</c><00:55:39.180><c> further</c><00:55:39.540><c> so</c><00:55:40.319><c> I</c><00:55:40.500><c> haven't</c>

00:55:40.609 --> 00:55:40.619 align:start position:0%
to still purchase further so I haven't
 

00:55:40.619 --> 00:55:42.890 align:start position:0%
to still purchase further so I haven't
tried<00:55:40.920><c> any</c><00:55:41.220><c> other</c><00:55:41.400><c> ways</c><00:55:42.000><c> of</c><00:55:42.119><c> allocating</c><00:55:42.540><c> these</c>

00:55:42.890 --> 00:55:42.900 align:start position:0%
tried any other ways of allocating these
 

00:55:42.900 --> 00:55:44.930 align:start position:0%
tried any other ways of allocating these
channels<00:55:43.260><c> in</c><00:55:43.500><c> this</c><00:55:43.619><c> neural</c><00:55:43.980><c> net</c><00:55:44.099><c> maybe</c><00:55:44.700><c> the</c>

00:55:44.930 --> 00:55:44.940 align:start position:0%
channels in this neural net maybe the
 

00:55:44.940 --> 00:55:47.329 align:start position:0%
channels in this neural net maybe the
number<00:55:45.119><c> of</c><00:55:45.559><c> dimensions</c><00:55:46.559><c> for</c><00:55:46.800><c> the</c><00:55:46.920><c> embedding</c>

00:55:47.329 --> 00:55:47.339 align:start position:0%
number of dimensions for the embedding
 

00:55:47.339 --> 00:55:49.549 align:start position:0%
number of dimensions for the embedding
is<00:55:47.579><c> all</c><00:55:47.700><c> wrong</c><00:55:47.880><c> maybe</c><00:55:48.839><c> it's</c><00:55:49.079><c> possible</c><00:55:49.380><c> to</c>

00:55:49.549 --> 00:55:49.559 align:start position:0%
is all wrong maybe it's possible to
 

00:55:49.559 --> 00:55:50.930 align:start position:0%
is all wrong maybe it's possible to
actually<00:55:49.740><c> take</c><00:55:50.040><c> the</c><00:55:50.160><c> original</c><00:55:50.280><c> network</c><00:55:50.640><c> with</c>

00:55:50.930 --> 00:55:50.940 align:start position:0%
actually take the original network with
 

00:55:50.940 --> 00:55:53.150 align:start position:0%
actually take the original network with
just<00:55:51.119><c> one</c><00:55:51.300><c> hidden</c><00:55:51.599><c> layer</c><00:55:51.900><c> and</c><00:55:52.559><c> make</c><00:55:52.859><c> it</c><00:55:53.040><c> big</c>

00:55:53.150 --> 00:55:53.160 align:start position:0%
just one hidden layer and make it big
 

00:55:53.160 --> 00:55:54.650 align:start position:0%
just one hidden layer and make it big
enough<00:55:53.339><c> and</c><00:55:53.640><c> actually</c><00:55:53.819><c> beat</c><00:55:54.119><c> my</c><00:55:54.359><c> fancy</c>

00:55:54.650 --> 00:55:54.660 align:start position:0%
enough and actually beat my fancy
 

00:55:54.660 --> 00:55:56.890 align:start position:0%
enough and actually beat my fancy
hierarchical<00:55:55.200><c> Network</c><00:55:55.980><c> it's</c><00:55:56.280><c> not</c><00:55:56.460><c> obvious</c>

00:55:56.890 --> 00:55:56.900 align:start position:0%
hierarchical Network it's not obvious
 

00:55:56.900 --> 00:55:59.450 align:start position:0%
hierarchical Network it's not obvious
that<00:55:57.900><c> would</c><00:55:58.020><c> be</c><00:55:58.140><c> kind</c><00:55:58.200><c> of</c><00:55:58.319><c> embarrassing</c><00:55:58.680><c> if</c>

00:55:59.450 --> 00:55:59.460 align:start position:0%
that would be kind of embarrassing if
 

00:55:59.460 --> 00:56:01.309 align:start position:0%
that would be kind of embarrassing if
this<00:55:59.640><c> did</c><00:55:59.819><c> not</c><00:55:59.940><c> do</c><00:56:00.180><c> better</c><00:56:00.420><c> even</c><00:56:00.839><c> once</c><00:56:01.140><c> you</c>

00:56:01.309 --> 00:56:01.319 align:start position:0%
this did not do better even once you
 

00:56:01.319 --> 00:56:03.470 align:start position:0%
this did not do better even once you
torture<00:56:01.740><c> it</c><00:56:01.920><c> a</c><00:56:02.040><c> little</c><00:56:02.160><c> bit</c><00:56:02.760><c> maybe</c><00:56:03.180><c> you</c><00:56:03.420><c> can</c>

00:56:03.470 --> 00:56:03.480 align:start position:0%
torture it a little bit maybe you can
 

00:56:03.480 --> 00:56:04.730 align:start position:0%
torture it a little bit maybe you can
read<00:56:03.599><c> the</c><00:56:03.720><c> weight</c><00:56:03.839><c> net</c><00:56:04.079><c> paper</c><00:56:04.260><c> and</c><00:56:04.440><c> try</c><00:56:04.619><c> to</c>

00:56:04.730 --> 00:56:04.740 align:start position:0%
read the weight net paper and try to
 

00:56:04.740 --> 00:56:06.049 align:start position:0%
read the weight net paper and try to
figure<00:56:04.980><c> out</c><00:56:05.160><c> how</c><00:56:05.339><c> some</c><00:56:05.460><c> of</c><00:56:05.579><c> these</c><00:56:05.700><c> layers</c><00:56:05.880><c> work</c>

00:56:06.049 --> 00:56:06.059 align:start position:0%
figure out how some of these layers work
 

00:56:06.059 --> 00:56:07.730 align:start position:0%
figure out how some of these layers work
and<00:56:06.240><c> Implement</c><00:56:06.480><c> them</c><00:56:06.660><c> yourselves</c><00:56:07.020><c> using</c><00:56:07.500><c> what</c>

00:56:07.730 --> 00:56:07.740 align:start position:0%
and Implement them yourselves using what
 

00:56:07.740 --> 00:56:08.870 align:start position:0%
and Implement them yourselves using what
we<00:56:07.920><c> have</c>

00:56:08.870 --> 00:56:08.880 align:start position:0%
we have
 

00:56:08.880 --> 00:56:10.609 align:start position:0%
we have
and<00:56:09.420><c> of</c><00:56:09.540><c> course</c><00:56:09.660><c> you</c><00:56:09.780><c> can</c><00:56:09.900><c> always</c><00:56:10.020><c> tune</c><00:56:10.260><c> some</c>

00:56:10.609 --> 00:56:10.619 align:start position:0%
and of course you can always tune some
 

00:56:10.619 --> 00:56:12.589 align:start position:0%
and of course you can always tune some
of<00:56:10.740><c> the</c><00:56:10.859><c> initialization</c><00:56:11.700><c> or</c><00:56:12.119><c> some</c><00:56:12.300><c> of</c><00:56:12.480><c> the</c>

00:56:12.589 --> 00:56:12.599 align:start position:0%
of the initialization or some of the
 

00:56:12.599 --> 00:56:15.049 align:start position:0%
of the initialization or some of the
optimization<00:56:13.380><c> and</c><00:56:14.220><c> see</c><00:56:14.400><c> if</c><00:56:14.520><c> you</c><00:56:14.700><c> can</c><00:56:14.819><c> improve</c>

00:56:15.049 --> 00:56:15.059 align:start position:0%
optimization and see if you can improve
 

00:56:15.059 --> 00:56:16.849 align:start position:0%
optimization and see if you can improve
it<00:56:15.180><c> that</c><00:56:15.300><c> way</c><00:56:15.480><c> so</c><00:56:16.079><c> I'd</c><00:56:16.140><c> be</c><00:56:16.319><c> curious</c><00:56:16.559><c> if</c><00:56:16.680><c> people</c>

00:56:16.849 --> 00:56:16.859 align:start position:0%
it that way so I'd be curious if people
 

00:56:16.859 --> 00:56:18.849 align:start position:0%
it that way so I'd be curious if people
can<00:56:17.040><c> come</c><00:56:17.160><c> up</c><00:56:17.220><c> with</c><00:56:17.339><c> some</c><00:56:17.520><c> ways</c><00:56:17.760><c> to</c><00:56:17.940><c> beat</c><00:56:18.420><c> this</c>

00:56:18.849 --> 00:56:18.859 align:start position:0%
can come up with some ways to beat this
 

00:56:18.859 --> 00:56:22.880 align:start position:0%
can come up with some ways to beat this
and<00:56:19.859><c> yeah</c><00:56:19.920><c> that's</c><00:56:20.099><c> it</c><00:56:20.280><c> for</c><00:56:20.400><c> now</c><00:56:20.520><c> bye</c>

