WEBVTT
Kind: captions
Language: en

00:00:00.240 --> 00:00:02.230 align:start position:0%
 
hi<00:00:00.399><c> everyone</c><00:00:00.960><c> hope</c><00:00:01.199><c> you're</c><00:00:01.439><c> well</c>

00:00:02.230 --> 00:00:02.240 align:start position:0%
hi everyone hope you're well
 

00:00:02.240 --> 00:00:04.070 align:start position:0%
hi everyone hope you're well
and<00:00:02.639><c> next</c><00:00:02.879><c> up</c><00:00:02.960><c> what</c><00:00:03.199><c> i'd</c><00:00:03.280><c> like</c><00:00:03.439><c> to</c><00:00:03.520><c> do</c><00:00:03.760><c> is</c><00:00:03.919><c> i'd</c>

00:00:04.070 --> 00:00:04.080 align:start position:0%
and next up what i'd like to do is i'd
 

00:00:04.080 --> 00:00:06.150 align:start position:0%
and next up what i'd like to do is i'd
like<00:00:04.240><c> to</c><00:00:04.319><c> build</c><00:00:04.640><c> out</c><00:00:04.960><c> make</c><00:00:05.200><c> more</c>

00:00:06.150 --> 00:00:06.160 align:start position:0%
like to build out make more
 

00:00:06.160 --> 00:00:08.549 align:start position:0%
like to build out make more
like<00:00:06.319><c> micrograd</c><00:00:06.960><c> before</c><00:00:07.359><c> it</c><00:00:07.759><c> make</c><00:00:08.000><c> more</c><00:00:08.240><c> is</c><00:00:08.400><c> a</c>

00:00:08.549 --> 00:00:08.559 align:start position:0%
like micrograd before it make more is a
 

00:00:08.559 --> 00:00:10.230 align:start position:0%
like micrograd before it make more is a
repository<00:00:09.120><c> that</c><00:00:09.280><c> i</c><00:00:09.360><c> have</c><00:00:09.599><c> on</c><00:00:09.679><c> my</c><00:00:09.840><c> github</c>

00:00:10.230 --> 00:00:10.240 align:start position:0%
repository that i have on my github
 

00:00:10.240 --> 00:00:11.350 align:start position:0%
repository that i have on my github
webpage

00:00:11.350 --> 00:00:11.360 align:start position:0%
webpage
 

00:00:11.360 --> 00:00:12.629 align:start position:0%
webpage
you<00:00:11.519><c> can</c><00:00:11.599><c> look</c><00:00:11.840><c> at</c><00:00:12.000><c> it</c>

00:00:12.629 --> 00:00:12.639 align:start position:0%
you can look at it
 

00:00:12.639 --> 00:00:14.390 align:start position:0%
you can look at it
but<00:00:12.960><c> just</c><00:00:13.120><c> like</c><00:00:13.280><c> with</c><00:00:13.440><c> micrograd</c><00:00:14.080><c> i'm</c><00:00:14.240><c> going</c>

00:00:14.390 --> 00:00:14.400 align:start position:0%
but just like with micrograd i'm going
 

00:00:14.400 --> 00:00:16.310 align:start position:0%
but just like with micrograd i'm going
to<00:00:14.480><c> build</c><00:00:14.719><c> it</c><00:00:14.880><c> out</c><00:00:15.200><c> step</c><00:00:15.519><c> by</c><00:00:15.679><c> step</c><00:00:16.080><c> and</c><00:00:16.240><c> i'm</c>

00:00:16.310 --> 00:00:16.320 align:start position:0%
to build it out step by step and i'm
 

00:00:16.320 --> 00:00:17.910 align:start position:0%
to build it out step by step and i'm
going<00:00:16.480><c> to</c><00:00:16.640><c> spell</c><00:00:17.039><c> everything</c><00:00:17.440><c> out</c><00:00:17.680><c> so</c><00:00:17.840><c> we're</c>

00:00:17.910 --> 00:00:17.920 align:start position:0%
going to spell everything out so we're
 

00:00:17.920 --> 00:00:19.029 align:start position:0%
going to spell everything out so we're
going<00:00:18.080><c> to</c><00:00:18.160><c> build</c><00:00:18.320><c> it</c><00:00:18.480><c> out</c><00:00:18.560><c> slowly</c><00:00:18.960><c> and</c>

00:00:19.029 --> 00:00:19.039 align:start position:0%
going to build it out slowly and
 

00:00:19.039 --> 00:00:20.230 align:start position:0%
going to build it out slowly and
together

00:00:20.230 --> 00:00:20.240 align:start position:0%
together
 

00:00:20.240 --> 00:00:22.150 align:start position:0%
together
now<00:00:20.640><c> what</c><00:00:20.880><c> is</c><00:00:21.039><c> make</c><00:00:21.279><c> more</c>

00:00:22.150 --> 00:00:22.160 align:start position:0%
now what is make more
 

00:00:22.160 --> 00:00:24.550 align:start position:0%
now what is make more
make<00:00:22.400><c> more</c><00:00:23.039><c> as</c><00:00:23.199><c> the</c><00:00:23.359><c> name</c><00:00:23.519><c> suggests</c>

00:00:24.550 --> 00:00:24.560 align:start position:0%
make more as the name suggests
 

00:00:24.560 --> 00:00:27.509 align:start position:0%
make more as the name suggests
makes<00:00:24.880><c> more</c><00:00:25.279><c> of</c><00:00:26.000><c> things</c><00:00:26.400><c> that</c><00:00:26.480><c> you</c><00:00:26.640><c> give</c><00:00:26.880><c> it</c>

00:00:27.509 --> 00:00:27.519 align:start position:0%
makes more of things that you give it
 

00:00:27.519 --> 00:00:29.029 align:start position:0%
makes more of things that you give it
so<00:00:27.760><c> here's</c><00:00:28.000><c> an</c><00:00:28.160><c> example</c>

00:00:29.029 --> 00:00:29.039 align:start position:0%
so here's an example
 

00:00:29.039 --> 00:00:31.509 align:start position:0%
so here's an example
names.txt<00:00:29.840><c> is</c><00:00:29.920><c> an</c><00:00:30.080><c> example</c><00:00:30.400><c> dataset</c><00:00:31.039><c> to</c><00:00:31.279><c> make</c>

00:00:31.509 --> 00:00:31.519 align:start position:0%
names.txt is an example dataset to make
 

00:00:31.519 --> 00:00:32.470 align:start position:0%
names.txt is an example dataset to make
more

00:00:32.470 --> 00:00:32.480 align:start position:0%
more
 

00:00:32.480 --> 00:00:34.389 align:start position:0%
more
and<00:00:32.719><c> when</c><00:00:32.960><c> you</c><00:00:33.040><c> look</c><00:00:33.200><c> at</c><00:00:33.280><c> names.txt</c><00:00:34.160><c> you'll</c>

00:00:34.389 --> 00:00:34.399 align:start position:0%
and when you look at names.txt you'll
 

00:00:34.399 --> 00:00:36.790 align:start position:0%
and when you look at names.txt you'll
find<00:00:34.800><c> that</c><00:00:35.040><c> it's</c><00:00:35.200><c> a</c><00:00:35.280><c> very</c><00:00:35.520><c> large</c><00:00:35.760><c> data</c><00:00:36.000><c> set</c><00:00:36.320><c> of</c>

00:00:36.790 --> 00:00:36.800 align:start position:0%
find that it's a very large data set of
 

00:00:36.800 --> 00:00:38.150 align:start position:0%
find that it's a very large data set of
names

00:00:38.150 --> 00:00:38.160 align:start position:0%
names
 

00:00:38.160 --> 00:00:40.150 align:start position:0%
names
so

00:00:40.150 --> 00:00:40.160 align:start position:0%
so
 

00:00:40.160 --> 00:00:41.670 align:start position:0%
so
here's<00:00:40.480><c> lots</c><00:00:40.719><c> of</c><00:00:40.800><c> different</c><00:00:41.040><c> types</c><00:00:41.280><c> of</c><00:00:41.360><c> names</c>

00:00:41.670 --> 00:00:41.680 align:start position:0%
here's lots of different types of names
 

00:00:41.680 --> 00:00:44.150 align:start position:0%
here's lots of different types of names
in<00:00:41.760><c> fact</c><00:00:42.079><c> i</c><00:00:42.160><c> believe</c><00:00:42.399><c> there</c><00:00:42.559><c> are</c><00:00:42.800><c> 32</c><00:00:43.440><c> 000</c><00:00:43.840><c> names</c>

00:00:44.150 --> 00:00:44.160 align:start position:0%
in fact i believe there are 32 000 names
 

00:00:44.160 --> 00:00:46.069 align:start position:0%
in fact i believe there are 32 000 names
that<00:00:44.320><c> i've</c><00:00:44.719><c> sort</c><00:00:44.879><c> of</c><00:00:44.960><c> found</c><00:00:45.280><c> randomly</c><00:00:45.680><c> on</c><00:00:45.760><c> the</c>

00:00:46.069 --> 00:00:46.079 align:start position:0%
that i've sort of found randomly on the
 

00:00:46.079 --> 00:00:47.830 align:start position:0%
that i've sort of found randomly on the
government<00:00:46.480><c> website</c>

00:00:47.830 --> 00:00:47.840 align:start position:0%
government website
 

00:00:47.840 --> 00:00:50.069 align:start position:0%
government website
and<00:00:48.320><c> if</c><00:00:48.480><c> you</c><00:00:48.640><c> train</c><00:00:48.960><c> make</c><00:00:49.200><c> more</c><00:00:49.440><c> on</c><00:00:49.600><c> this</c><00:00:49.760><c> data</c>

00:00:50.069 --> 00:00:50.079 align:start position:0%
and if you train make more on this data
 

00:00:50.079 --> 00:00:53.189 align:start position:0%
and if you train make more on this data
set<00:00:50.719><c> it</c><00:00:50.879><c> will</c><00:00:51.039><c> learn</c><00:00:51.280><c> to</c><00:00:51.360><c> make</c><00:00:51.920><c> more</c><00:00:52.559><c> of</c><00:00:52.800><c> things</c>

00:00:53.189 --> 00:00:53.199 align:start position:0%
set it will learn to make more of things
 

00:00:53.199 --> 00:00:55.270 align:start position:0%
set it will learn to make more of things
like<00:00:53.440><c> this</c>

00:00:55.270 --> 00:00:55.280 align:start position:0%
like this
 

00:00:55.280 --> 00:00:57.590 align:start position:0%
like this
and<00:00:55.440><c> in</c><00:00:55.520><c> particular</c><00:00:56.079><c> in</c><00:00:56.160><c> this</c><00:00:56.399><c> case</c><00:00:57.120><c> that</c><00:00:57.360><c> will</c>

00:00:57.590 --> 00:00:57.600 align:start position:0%
and in particular in this case that will
 

00:00:57.600 --> 00:01:00.310 align:start position:0%
and in particular in this case that will
mean<00:00:58.079><c> more</c><00:00:58.480><c> things</c><00:00:58.719><c> that</c><00:00:59.039><c> sound</c><00:00:59.600><c> name-like</c>

00:01:00.310 --> 00:01:00.320 align:start position:0%
mean more things that sound name-like
 

00:01:00.320 --> 00:01:02.310 align:start position:0%
mean more things that sound name-like
but<00:01:00.480><c> are</c><00:01:00.640><c> actually</c><00:01:00.960><c> unique</c><00:01:01.359><c> names</c>

00:01:02.310 --> 00:01:02.320 align:start position:0%
but are actually unique names
 

00:01:02.320 --> 00:01:03.830 align:start position:0%
but are actually unique names
and<00:01:02.399><c> maybe</c><00:01:02.719><c> if</c><00:01:02.879><c> you</c><00:01:03.039><c> have</c><00:01:03.280><c> a</c><00:01:03.359><c> baby</c><00:01:03.680><c> and</c><00:01:03.760><c> you're</c>

00:01:03.830 --> 00:01:03.840 align:start position:0%
and maybe if you have a baby and you're
 

00:01:03.840 --> 00:01:05.270 align:start position:0%
and maybe if you have a baby and you're
trying<00:01:04.080><c> to</c><00:01:04.239><c> assign</c><00:01:04.559><c> name</c><00:01:04.879><c> maybe</c><00:01:05.119><c> you're</c>

00:01:05.270 --> 00:01:05.280 align:start position:0%
trying to assign name maybe you're
 

00:01:05.280 --> 00:01:07.030 align:start position:0%
trying to assign name maybe you're
looking<00:01:05.519><c> for</c><00:01:05.600><c> a</c><00:01:05.680><c> cool</c><00:01:06.000><c> new</c><00:01:06.240><c> sounding</c><00:01:06.720><c> unique</c>

00:01:07.030 --> 00:01:07.040 align:start position:0%
looking for a cool new sounding unique
 

00:01:07.040 --> 00:01:09.510 align:start position:0%
looking for a cool new sounding unique
name<00:01:07.680><c> make</c><00:01:07.920><c> more</c><00:01:08.159><c> might</c><00:01:08.320><c> help</c><00:01:08.560><c> you</c>

00:01:09.510 --> 00:01:09.520 align:start position:0%
name make more might help you
 

00:01:09.520 --> 00:01:11.270 align:start position:0%
name make more might help you
so<00:01:09.680><c> here</c><00:01:09.840><c> are</c><00:01:09.920><c> some</c><00:01:10.080><c> example</c><00:01:10.479><c> generations</c>

00:01:11.270 --> 00:01:11.280 align:start position:0%
so here are some example generations
 

00:01:11.280 --> 00:01:13.350 align:start position:0%
so here are some example generations
from<00:01:12.000><c> the</c><00:01:12.159><c> neural</c><00:01:12.400><c> network</c>

00:01:13.350 --> 00:01:13.360 align:start position:0%
from the neural network
 

00:01:13.360 --> 00:01:16.149 align:start position:0%
from the neural network
once<00:01:13.600><c> we</c><00:01:13.840><c> train</c><00:01:14.159><c> it</c><00:01:14.400><c> on</c><00:01:14.560><c> our</c><00:01:14.640><c> data</c><00:01:14.960><c> set</c>

00:01:16.149 --> 00:01:16.159 align:start position:0%
once we train it on our data set
 

00:01:16.159 --> 00:01:17.749 align:start position:0%
once we train it on our data set
so<00:01:16.400><c> here's</c><00:01:16.640><c> some</c><00:01:16.880><c> example</c>

00:01:17.749 --> 00:01:17.759 align:start position:0%
so here's some example
 

00:01:17.759 --> 00:01:19.670 align:start position:0%
so here's some example
unique<00:01:18.080><c> names</c><00:01:18.320><c> that</c><00:01:18.479><c> it</c><00:01:18.560><c> will</c><00:01:18.720><c> generate</c>

00:01:19.670 --> 00:01:19.680 align:start position:0%
unique names that it will generate
 

00:01:19.680 --> 00:01:21.670 align:start position:0%
unique names that it will generate
dontel

00:01:21.670 --> 00:01:21.680 align:start position:0%
dontel
 

00:01:21.680 --> 00:01:23.429 align:start position:0%
dontel
irot

00:01:23.429 --> 00:01:23.439 align:start position:0%
irot
 

00:01:23.439 --> 00:01:24.469 align:start position:0%
irot
zhendi

00:01:24.469 --> 00:01:24.479 align:start position:0%
zhendi
 

00:01:24.479 --> 00:01:26.950 align:start position:0%
zhendi
and<00:01:24.640><c> so</c><00:01:24.799><c> on</c><00:01:25.520><c> and</c><00:01:25.680><c> so</c><00:01:25.840><c> all</c><00:01:26.000><c> these</c><00:01:26.240><c> are</c><00:01:26.479><c> sound</c>

00:01:26.950 --> 00:01:26.960 align:start position:0%
and so on and so all these are sound
 

00:01:26.960 --> 00:01:28.870 align:start position:0%
and so on and so all these are sound
name<00:01:27.200><c> like</c><00:01:27.840><c> but</c><00:01:28.000><c> they're</c><00:01:28.159><c> not</c><00:01:28.400><c> of</c><00:01:28.479><c> course</c>

00:01:28.870 --> 00:01:28.880 align:start position:0%
name like but they're not of course
 

00:01:28.880 --> 00:01:30.630 align:start position:0%
name like but they're not of course
names

00:01:30.630 --> 00:01:30.640 align:start position:0%
names
 

00:01:30.640 --> 00:01:32.870 align:start position:0%
names
so<00:01:30.880><c> under</c><00:01:31.119><c> the</c><00:01:31.280><c> hood</c><00:01:31.920><c> make</c><00:01:32.159><c> more</c><00:01:32.560><c> is</c><00:01:32.720><c> a</c>

00:01:32.870 --> 00:01:32.880 align:start position:0%
so under the hood make more is a
 

00:01:32.880 --> 00:01:35.190 align:start position:0%
so under the hood make more is a
character<00:01:33.280><c> level</c><00:01:33.520><c> language</c><00:01:33.920><c> model</c><00:01:34.720><c> so</c><00:01:35.040><c> what</c>

00:01:35.190 --> 00:01:35.200 align:start position:0%
character level language model so what
 

00:01:35.200 --> 00:01:37.270 align:start position:0%
character level language model so what
that<00:01:35.439><c> means</c><00:01:35.840><c> is</c><00:01:36.000><c> that</c><00:01:36.240><c> it</c><00:01:36.400><c> is</c><00:01:36.640><c> treating</c><00:01:37.040><c> every</c>

00:01:37.270 --> 00:01:37.280 align:start position:0%
that means is that it is treating every
 

00:01:37.280 --> 00:01:39.670 align:start position:0%
that means is that it is treating every
single<00:01:37.840><c> line</c><00:01:38.159><c> here</c><00:01:38.400><c> as</c><00:01:38.560><c> an</c><00:01:38.640><c> example</c><00:01:39.600><c> and</c>

00:01:39.670 --> 00:01:39.680 align:start position:0%
single line here as an example and
 

00:01:39.680 --> 00:01:42.069 align:start position:0%
single line here as an example and
within<00:01:40.079><c> each</c><00:01:40.320><c> example</c><00:01:40.880><c> it's</c><00:01:41.200><c> treating</c><00:01:41.759><c> them</c>

00:01:42.069 --> 00:01:42.079 align:start position:0%
within each example it's treating them
 

00:01:42.079 --> 00:01:43.990 align:start position:0%
within each example it's treating them
all<00:01:42.479><c> as</c><00:01:42.799><c> sequences</c><00:01:43.360><c> of</c><00:01:43.520><c> individual</c>

00:01:43.990 --> 00:01:44.000 align:start position:0%
all as sequences of individual
 

00:01:44.000 --> 00:01:48.870 align:start position:0%
all as sequences of individual
characters<00:01:45.040><c> so</c><00:01:45.520><c> r</c><00:01:45.920><c> e</c><00:01:46.320><c> e</c><00:01:46.960><c> s</c><00:01:47.360><c> e</c><00:01:48.000><c> is</c><00:01:48.159><c> this</c><00:01:48.399><c> example</c>

00:01:48.870 --> 00:01:48.880 align:start position:0%
characters so r e e s e is this example
 

00:01:48.880 --> 00:01:50.550 align:start position:0%
characters so r e e s e is this example
and<00:01:48.960><c> that's</c><00:01:49.200><c> the</c><00:01:49.360><c> sequence</c><00:01:49.759><c> of</c><00:01:49.840><c> characters</c>

00:01:50.550 --> 00:01:50.560 align:start position:0%
and that's the sequence of characters
 

00:01:50.560 --> 00:01:51.830 align:start position:0%
and that's the sequence of characters
and<00:01:50.640><c> that's</c><00:01:50.799><c> the</c><00:01:50.960><c> level</c><00:01:51.280><c> on</c><00:01:51.360><c> which</c><00:01:51.600><c> we</c><00:01:51.759><c> are</c>

00:01:51.830 --> 00:01:51.840 align:start position:0%
and that's the level on which we are
 

00:01:51.840 --> 00:01:54.789 align:start position:0%
and that's the level on which we are
building<00:01:52.240><c> out</c><00:01:52.720><c> make</c><00:01:52.960><c> more</c><00:01:53.840><c> and</c><00:01:54.159><c> what</c><00:01:54.320><c> it</c><00:01:54.479><c> means</c>

00:01:54.789 --> 00:01:54.799 align:start position:0%
building out make more and what it means
 

00:01:54.799 --> 00:01:56.469 align:start position:0%
building out make more and what it means
to<00:01:54.960><c> be</c><00:01:55.119><c> a</c><00:01:55.280><c> character</c><00:01:55.600><c> level</c><00:01:55.920><c> language</c><00:01:56.240><c> model</c>

00:01:56.469 --> 00:01:56.479 align:start position:0%
to be a character level language model
 

00:01:56.479 --> 00:01:58.389 align:start position:0%
to be a character level language model
then<00:01:56.960><c> is</c><00:01:57.040><c> that</c><00:01:57.200><c> it's</c><00:01:57.360><c> just</c><00:01:57.680><c> uh</c><00:01:58.159><c> sort</c><00:01:58.320><c> of</c>

00:01:58.389 --> 00:01:58.399 align:start position:0%
then is that it's just uh sort of
 

00:01:58.399 --> 00:01:59.910 align:start position:0%
then is that it's just uh sort of
modeling<00:01:58.719><c> those</c><00:01:58.880><c> sequences</c><00:01:59.280><c> of</c><00:01:59.360><c> characters</c>

00:01:59.910 --> 00:01:59.920 align:start position:0%
modeling those sequences of characters
 

00:01:59.920 --> 00:02:01.350 align:start position:0%
modeling those sequences of characters
and<00:02:00.079><c> it</c><00:02:00.159><c> knows</c><00:02:00.399><c> how</c><00:02:00.560><c> to</c><00:02:00.640><c> predict</c><00:02:00.960><c> the</c><00:02:01.119><c> next</c>

00:02:01.350 --> 00:02:01.360 align:start position:0%
and it knows how to predict the next
 

00:02:01.360 --> 00:02:03.590 align:start position:0%
and it knows how to predict the next
character<00:02:01.920><c> in</c><00:02:02.000><c> the</c><00:02:02.079><c> sequence</c>

00:02:03.590 --> 00:02:03.600 align:start position:0%
character in the sequence
 

00:02:03.600 --> 00:02:05.270 align:start position:0%
character in the sequence
now<00:02:04.079><c> we're</c><00:02:04.240><c> actually</c><00:02:04.479><c> going</c><00:02:04.640><c> to</c><00:02:04.799><c> implement</c><00:02:05.200><c> a</c>

00:02:05.270 --> 00:02:05.280 align:start position:0%
now we're actually going to implement a
 

00:02:05.280 --> 00:02:07.429 align:start position:0%
now we're actually going to implement a
large<00:02:05.600><c> number</c><00:02:06.000><c> of</c><00:02:06.479><c> character</c><00:02:06.880><c> level</c><00:02:07.119><c> language</c>

00:02:07.429 --> 00:02:07.439 align:start position:0%
large number of character level language
 

00:02:07.439 --> 00:02:09.190 align:start position:0%
large number of character level language
models<00:02:08.000><c> in</c><00:02:08.160><c> terms</c><00:02:08.399><c> of</c><00:02:08.479><c> the</c><00:02:08.560><c> neural</c><00:02:08.800><c> networks</c>

00:02:09.190 --> 00:02:09.200 align:start position:0%
models in terms of the neural networks
 

00:02:09.200 --> 00:02:10.869 align:start position:0%
models in terms of the neural networks
that<00:02:09.280><c> are</c><00:02:09.520><c> involved</c><00:02:10.080><c> in</c><00:02:10.160><c> predicting</c><00:02:10.560><c> the</c><00:02:10.640><c> next</c>

00:02:10.869 --> 00:02:10.879 align:start position:0%
that are involved in predicting the next
 

00:02:10.879 --> 00:02:13.430 align:start position:0%
that are involved in predicting the next
character<00:02:11.280><c> in</c><00:02:11.360><c> a</c><00:02:11.440><c> sequence</c><00:02:12.319><c> so</c><00:02:12.720><c> very</c><00:02:12.959><c> simple</c>

00:02:13.430 --> 00:02:13.440 align:start position:0%
character in a sequence so very simple
 

00:02:13.440 --> 00:02:15.270 align:start position:0%
character in a sequence so very simple
bi-gram<00:02:14.000><c> and</c><00:02:14.080><c> back</c><00:02:14.239><c> of</c><00:02:14.400><c> work</c><00:02:14.560><c> models</c>

00:02:15.270 --> 00:02:15.280 align:start position:0%
bi-gram and back of work models
 

00:02:15.280 --> 00:02:17.110 align:start position:0%
bi-gram and back of work models
multilingual<00:02:15.840><c> perceptrons</c><00:02:16.720><c> recurrent</c>

00:02:17.110 --> 00:02:17.120 align:start position:0%
multilingual perceptrons recurrent
 

00:02:17.120 --> 00:02:19.589 align:start position:0%
multilingual perceptrons recurrent
neural<00:02:17.360><c> networks</c><00:02:18.080><c> all</c><00:02:18.239><c> the</c><00:02:18.319><c> way</c><00:02:18.560><c> to</c><00:02:18.959><c> modern</c>

00:02:19.589 --> 00:02:19.599 align:start position:0%
neural networks all the way to modern
 

00:02:19.599 --> 00:02:21.670 align:start position:0%
neural networks all the way to modern
transformers<00:02:20.720><c> in</c><00:02:20.879><c> fact</c><00:02:21.040><c> the</c><00:02:21.120><c> transformer</c>

00:02:21.670 --> 00:02:21.680 align:start position:0%
transformers in fact the transformer
 

00:02:21.680 --> 00:02:23.670 align:start position:0%
transformers in fact the transformer
that<00:02:21.840><c> we</c><00:02:22.000><c> will</c><00:02:22.160><c> build</c><00:02:22.800><c> will</c><00:02:23.040><c> be</c><00:02:23.200><c> basically</c><00:02:23.599><c> the</c>

00:02:23.670 --> 00:02:23.680 align:start position:0%
that we will build will be basically the
 

00:02:23.680 --> 00:02:26.229 align:start position:0%
that we will build will be basically the
equivalent<00:02:24.160><c> transformer</c><00:02:24.800><c> to</c><00:02:25.040><c> gpt2</c><00:02:26.000><c> if</c><00:02:26.080><c> you</c>

00:02:26.229 --> 00:02:26.239 align:start position:0%
equivalent transformer to gpt2 if you
 

00:02:26.239 --> 00:02:28.630 align:start position:0%
equivalent transformer to gpt2 if you
have<00:02:26.319><c> heard</c><00:02:26.720><c> of</c><00:02:26.879><c> gpt</c><00:02:27.840><c> uh</c><00:02:28.000><c> so</c><00:02:28.160><c> that's</c><00:02:28.319><c> kind</c><00:02:28.480><c> of</c><00:02:28.560><c> a</c>

00:02:28.630 --> 00:02:28.640 align:start position:0%
have heard of gpt uh so that's kind of a
 

00:02:28.640 --> 00:02:30.869 align:start position:0%
have heard of gpt uh so that's kind of a
big<00:02:28.800><c> deal</c><00:02:29.280><c> it's</c><00:02:29.440><c> a</c><00:02:29.520><c> modern</c><00:02:29.840><c> network</c><00:02:30.480><c> and</c><00:02:30.720><c> by</c>

00:02:30.869 --> 00:02:30.879 align:start position:0%
big deal it's a modern network and by
 

00:02:30.879 --> 00:02:32.550 align:start position:0%
big deal it's a modern network and by
the<00:02:31.040><c> end</c><00:02:31.200><c> of</c><00:02:31.519><c> the</c><00:02:31.680><c> series</c><00:02:32.080><c> you</c><00:02:32.160><c> will</c><00:02:32.319><c> actually</c>

00:02:32.550 --> 00:02:32.560 align:start position:0%
the end of the series you will actually
 

00:02:32.560 --> 00:02:34.630 align:start position:0%
the end of the series you will actually
understand<00:02:32.959><c> how</c><00:02:33.120><c> that</c><00:02:33.280><c> works</c><00:02:34.000><c> um</c><00:02:34.400><c> on</c><00:02:34.560><c> the</c>

00:02:34.630 --> 00:02:34.640 align:start position:0%
understand how that works um on the
 

00:02:34.640 --> 00:02:36.790 align:start position:0%
understand how that works um on the
level<00:02:34.879><c> of</c><00:02:35.040><c> characters</c><00:02:36.080><c> now</c><00:02:36.319><c> to</c><00:02:36.480><c> give</c><00:02:36.560><c> you</c><00:02:36.720><c> a</c>

00:02:36.790 --> 00:02:36.800 align:start position:0%
level of characters now to give you a
 

00:02:36.800 --> 00:02:39.830 align:start position:0%
level of characters now to give you a
sense<00:02:37.280><c> of</c><00:02:37.599><c> the</c><00:02:38.080><c> extensions</c><00:02:38.640><c> here</c><00:02:39.280><c> uh</c><00:02:39.519><c> after</c>

00:02:39.830 --> 00:02:39.840 align:start position:0%
sense of the extensions here uh after
 

00:02:39.840 --> 00:02:41.430 align:start position:0%
sense of the extensions here uh after
characters<00:02:40.239><c> we</c><00:02:40.400><c> will</c><00:02:40.640><c> probably</c><00:02:40.959><c> spend</c><00:02:41.280><c> some</c>

00:02:41.430 --> 00:02:41.440 align:start position:0%
characters we will probably spend some
 

00:02:41.440 --> 00:02:43.270 align:start position:0%
characters we will probably spend some
time<00:02:41.680><c> on</c><00:02:41.760><c> the</c><00:02:42.000><c> word</c><00:02:42.239><c> level</c><00:02:42.720><c> so</c><00:02:42.879><c> that</c><00:02:43.040><c> we</c><00:02:43.120><c> can</c>

00:02:43.270 --> 00:02:43.280 align:start position:0%
time on the word level so that we can
 

00:02:43.280 --> 00:02:45.030 align:start position:0%
time on the word level so that we can
generate<00:02:43.599><c> documents</c><00:02:44.080><c> of</c><00:02:44.239><c> words</c><00:02:44.720><c> not</c><00:02:44.879><c> just</c>

00:02:45.030 --> 00:02:45.040 align:start position:0%
generate documents of words not just
 

00:02:45.040 --> 00:02:47.509 align:start position:0%
generate documents of words not just
little<00:02:45.519><c> you</c><00:02:45.599><c> know</c><00:02:45.840><c> segments</c><00:02:46.160><c> of</c><00:02:46.239><c> characters</c>

00:02:47.509 --> 00:02:47.519 align:start position:0%
little you know segments of characters
 

00:02:47.519 --> 00:02:49.430 align:start position:0%
little you know segments of characters
but<00:02:47.680><c> we</c><00:02:47.760><c> can</c><00:02:47.920><c> generate</c><00:02:48.239><c> entire</c><00:02:48.640><c> large</c><00:02:49.120><c> much</c>

00:02:49.430 --> 00:02:49.440 align:start position:0%
but we can generate entire large much
 

00:02:49.440 --> 00:02:50.949 align:start position:0%
but we can generate entire large much
larger<00:02:49.760><c> documents</c>

00:02:50.949 --> 00:02:50.959 align:start position:0%
larger documents
 

00:02:50.959 --> 00:02:52.309 align:start position:0%
larger documents
and<00:02:51.120><c> then</c><00:02:51.280><c> we're</c><00:02:51.440><c> probably</c><00:02:51.680><c> going</c><00:02:51.840><c> to</c><00:02:51.920><c> go</c><00:02:52.080><c> into</c>

00:02:52.309 --> 00:02:52.319 align:start position:0%
and then we're probably going to go into
 

00:02:52.319 --> 00:02:54.630 align:start position:0%
and then we're probably going to go into
images<00:02:52.959><c> and</c><00:02:53.280><c> image</c><00:02:53.599><c> text</c>

00:02:54.630 --> 00:02:54.640 align:start position:0%
images and image text
 

00:02:54.640 --> 00:02:57.030 align:start position:0%
images and image text
networks<00:02:55.360><c> such</c><00:02:55.599><c> as</c><00:02:55.840><c> dolly</c><00:02:56.239><c> stable</c><00:02:56.480><c> diffusion</c>

00:02:57.030 --> 00:02:57.040 align:start position:0%
networks such as dolly stable diffusion
 

00:02:57.040 --> 00:02:59.990 align:start position:0%
networks such as dolly stable diffusion
and<00:02:57.120><c> so</c><00:02:57.360><c> on</c><00:02:58.080><c> but</c><00:02:58.239><c> for</c><00:02:58.400><c> now</c><00:02:58.560><c> we</c><00:02:58.640><c> have</c><00:02:58.800><c> to</c><00:02:58.879><c> start</c>

00:02:59.990 --> 00:03:00.000 align:start position:0%
and so on but for now we have to start
 

00:03:00.000 --> 00:03:02.149 align:start position:0%
and so on but for now we have to start
here<00:03:00.720><c> character</c><00:03:01.040><c> level</c><00:03:01.200><c> language</c><00:03:01.519><c> modeling</c>

00:03:02.149 --> 00:03:02.159 align:start position:0%
here character level language modeling
 

00:03:02.159 --> 00:03:03.350 align:start position:0%
here character level language modeling
let's<00:03:02.400><c> go</c>

00:03:03.350 --> 00:03:03.360 align:start position:0%
let's go
 

00:03:03.360 --> 00:03:04.790 align:start position:0%
let's go
so<00:03:03.519><c> like</c><00:03:03.760><c> before</c><00:03:04.000><c> we</c><00:03:04.159><c> are</c><00:03:04.319><c> starting</c><00:03:04.560><c> with</c><00:03:04.720><c> a</c>

00:03:04.790 --> 00:03:04.800 align:start position:0%
so like before we are starting with a
 

00:03:04.800 --> 00:03:06.949 align:start position:0%
so like before we are starting with a
completely<00:03:05.120><c> blank</c><00:03:05.599><c> jupiter</c><00:03:06.000><c> notebook</c><00:03:06.319><c> page</c>

00:03:06.949 --> 00:03:06.959 align:start position:0%
completely blank jupiter notebook page
 

00:03:06.959 --> 00:03:08.550 align:start position:0%
completely blank jupiter notebook page
the<00:03:07.120><c> first</c><00:03:07.280><c> thing</c><00:03:07.519><c> is</c><00:03:07.680><c> i</c><00:03:07.840><c> would</c><00:03:08.000><c> like</c><00:03:08.239><c> to</c>

00:03:08.550 --> 00:03:08.560 align:start position:0%
the first thing is i would like to
 

00:03:08.560 --> 00:03:11.750 align:start position:0%
the first thing is i would like to
basically<00:03:08.959><c> load</c><00:03:09.200><c> up</c><00:03:09.280><c> the</c><00:03:09.360><c> dataset</c><00:03:09.920><c> names.txt</c>

00:03:11.750 --> 00:03:11.760 align:start position:0%
basically load up the dataset names.txt
 

00:03:11.760 --> 00:03:13.830 align:start position:0%
basically load up the dataset names.txt
so<00:03:11.920><c> we're</c><00:03:12.000><c> going</c><00:03:12.159><c> to</c><00:03:12.480><c> open</c><00:03:12.640><c> up</c><00:03:12.800><c> names.txt</c><00:03:13.599><c> for</c>

00:03:13.830 --> 00:03:13.840 align:start position:0%
so we're going to open up names.txt for
 

00:03:13.840 --> 00:03:15.350 align:start position:0%
so we're going to open up names.txt for
reading

00:03:15.350 --> 00:03:15.360 align:start position:0%
reading
 

00:03:15.360 --> 00:03:17.350 align:start position:0%
reading
and<00:03:15.599><c> we're</c><00:03:15.840><c> going</c><00:03:16.000><c> to</c><00:03:16.159><c> read</c><00:03:16.480><c> in</c><00:03:16.800><c> everything</c>

00:03:17.350 --> 00:03:17.360 align:start position:0%
and we're going to read in everything
 

00:03:17.360 --> 00:03:19.750 align:start position:0%
and we're going to read in everything
into<00:03:17.599><c> a</c><00:03:17.760><c> massive</c><00:03:18.159><c> string</c>

00:03:19.750 --> 00:03:19.760 align:start position:0%
into a massive string
 

00:03:19.760 --> 00:03:21.350 align:start position:0%
into a massive string
and<00:03:19.920><c> then</c><00:03:20.239><c> because</c><00:03:20.480><c> it's</c><00:03:20.640><c> a</c><00:03:20.720><c> massive</c><00:03:21.040><c> string</c>

00:03:21.350 --> 00:03:21.360 align:start position:0%
and then because it's a massive string
 

00:03:21.360 --> 00:03:23.110 align:start position:0%
and then because it's a massive string
we'd<00:03:21.680><c> only</c><00:03:21.840><c> like</c><00:03:22.000><c> the</c><00:03:22.159><c> individual</c><00:03:22.640><c> words</c><00:03:23.040><c> and</c>

00:03:23.110 --> 00:03:23.120 align:start position:0%
we'd only like the individual words and
 

00:03:23.120 --> 00:03:24.470 align:start position:0%
we'd only like the individual words and
put<00:03:23.280><c> them</c><00:03:23.440><c> in</c><00:03:23.519><c> the</c><00:03:23.599><c> list</c>

00:03:24.470 --> 00:03:24.480 align:start position:0%
put them in the list
 

00:03:24.480 --> 00:03:26.470 align:start position:0%
put them in the list
so<00:03:24.720><c> let's</c><00:03:24.959><c> call</c><00:03:25.200><c> split</c><00:03:25.599><c> lines</c>

00:03:26.470 --> 00:03:26.480 align:start position:0%
so let's call split lines
 

00:03:26.480 --> 00:03:27.750 align:start position:0%
so let's call split lines
on<00:03:26.640><c> that</c><00:03:26.879><c> string</c>

00:03:27.750 --> 00:03:27.760 align:start position:0%
on that string
 

00:03:27.760 --> 00:03:30.229 align:start position:0%
on that string
to<00:03:27.920><c> get</c><00:03:28.080><c> all</c><00:03:28.239><c> of</c><00:03:28.319><c> our</c><00:03:28.560><c> words</c><00:03:29.040><c> as</c><00:03:29.200><c> a</c><00:03:29.280><c> python</c><00:03:29.760><c> list</c>

00:03:30.229 --> 00:03:30.239 align:start position:0%
to get all of our words as a python list
 

00:03:30.239 --> 00:03:31.990 align:start position:0%
to get all of our words as a python list
of<00:03:30.400><c> strings</c>

00:03:31.990 --> 00:03:32.000 align:start position:0%
of strings
 

00:03:32.000 --> 00:03:33.350 align:start position:0%
of strings
so<00:03:32.159><c> basically</c><00:03:32.480><c> we</c><00:03:32.560><c> can</c><00:03:32.720><c> look</c><00:03:32.799><c> at</c><00:03:32.959><c> for</c><00:03:33.040><c> example</c>

00:03:33.350 --> 00:03:33.360 align:start position:0%
so basically we can look at for example
 

00:03:33.360 --> 00:03:35.750 align:start position:0%
so basically we can look at for example
the<00:03:33.440><c> first</c><00:03:33.840><c> 10</c><00:03:34.400><c> words</c>

00:03:35.750 --> 00:03:35.760 align:start position:0%
the first 10 words
 

00:03:35.760 --> 00:03:39.030 align:start position:0%
the first 10 words
and<00:03:36.080><c> we</c><00:03:36.319><c> have</c><00:03:36.879><c> that</c><00:03:37.040><c> it's</c><00:03:37.200><c> a</c><00:03:37.360><c> list</c><00:03:37.840><c> of</c><00:03:38.480><c> emma</c>

00:03:39.030 --> 00:03:39.040 align:start position:0%
and we have that it's a list of emma
 

00:03:39.040 --> 00:03:41.430 align:start position:0%
and we have that it's a list of emma
olivia<00:03:39.760><c> eva</c><00:03:40.319><c> and</c><00:03:40.480><c> so</c><00:03:40.720><c> on</c>

00:03:41.430 --> 00:03:41.440 align:start position:0%
olivia eva and so on
 

00:03:41.440 --> 00:03:43.670 align:start position:0%
olivia eva and so on
and<00:03:41.599><c> if</c><00:03:41.760><c> we</c><00:03:41.840><c> look</c><00:03:42.080><c> at</c>

00:03:43.670 --> 00:03:43.680 align:start position:0%
and if we look at
 

00:03:43.680 --> 00:03:45.509 align:start position:0%
and if we look at
the<00:03:43.840><c> top</c><00:03:44.000><c> of</c><00:03:44.080><c> the</c><00:03:44.159><c> page</c><00:03:44.400><c> here</c><00:03:44.879><c> that</c><00:03:45.040><c> is</c><00:03:45.200><c> indeed</c>

00:03:45.509 --> 00:03:45.519 align:start position:0%
the top of the page here that is indeed
 

00:03:45.519 --> 00:03:47.030 align:start position:0%
the top of the page here that is indeed
what<00:03:45.680><c> we</c><00:03:45.920><c> see</c>

00:03:47.030 --> 00:03:47.040 align:start position:0%
what we see
 

00:03:47.040 --> 00:03:48.149 align:start position:0%
what we see
um

00:03:48.149 --> 00:03:48.159 align:start position:0%
um
 

00:03:48.159 --> 00:03:49.589 align:start position:0%
um
so<00:03:48.319><c> that's</c><00:03:48.560><c> good</c>

00:03:49.589 --> 00:03:49.599 align:start position:0%
so that's good
 

00:03:49.599 --> 00:03:52.229 align:start position:0%
so that's good
this<00:03:49.840><c> list</c><00:03:50.080><c> actually</c><00:03:50.319><c> makes</c><00:03:50.480><c> me</c><00:03:50.720><c> feel</c><00:03:51.040><c> that</c>

00:03:52.229 --> 00:03:52.239 align:start position:0%
this list actually makes me feel that
 

00:03:52.239 --> 00:03:55.589 align:start position:0%
this list actually makes me feel that
this<00:03:52.480><c> is</c><00:03:52.640><c> probably</c><00:03:52.879><c> sorted</c><00:03:53.200><c> by</c><00:03:53.360><c> frequency</c>

00:03:55.589 --> 00:03:55.599 align:start position:0%
this is probably sorted by frequency
 

00:03:55.599 --> 00:03:57.270 align:start position:0%
this is probably sorted by frequency
but<00:03:56.239><c> okay</c><00:03:56.480><c> so</c>

00:03:57.270 --> 00:03:57.280 align:start position:0%
but okay so
 

00:03:57.280 --> 00:03:58.949 align:start position:0%
but okay so
these<00:03:57.519><c> are</c><00:03:57.599><c> the</c><00:03:57.760><c> words</c><00:03:58.319><c> now</c><00:03:58.560><c> we'd</c><00:03:58.720><c> like</c><00:03:58.879><c> to</c>

00:03:58.949 --> 00:03:58.959 align:start position:0%
these are the words now we'd like to
 

00:03:58.959 --> 00:04:00.550 align:start position:0%
these are the words now we'd like to
actually<00:03:59.360><c> like</c><00:03:59.760><c> learn</c><00:04:00.000><c> a</c><00:04:00.080><c> little</c><00:04:00.239><c> bit</c><00:04:00.400><c> more</c>

00:04:00.550 --> 00:04:00.560 align:start position:0%
actually like learn a little bit more
 

00:04:00.560 --> 00:04:02.309 align:start position:0%
actually like learn a little bit more
about<00:04:00.879><c> this</c><00:04:01.040><c> data</c><00:04:01.280><c> set</c><00:04:01.760><c> let's</c><00:04:02.000><c> look</c><00:04:02.159><c> at</c><00:04:02.239><c> the</c>

00:04:02.309 --> 00:04:02.319 align:start position:0%
about this data set let's look at the
 

00:04:02.319 --> 00:04:03.910 align:start position:0%
about this data set let's look at the
total<00:04:02.560><c> number</c><00:04:02.720><c> of</c><00:04:02.879><c> words</c><00:04:03.200><c> we</c><00:04:03.439><c> expect</c><00:04:03.680><c> this</c><00:04:03.840><c> to</c>

00:04:03.910 --> 00:04:03.920 align:start position:0%
total number of words we expect this to
 

00:04:03.920 --> 00:04:06.390 align:start position:0%
total number of words we expect this to
be<00:04:04.080><c> roughly</c><00:04:04.560><c> 32</c><00:04:05.040><c> 000</c>

00:04:06.390 --> 00:04:06.400 align:start position:0%
be roughly 32 000
 

00:04:06.400 --> 00:04:07.670 align:start position:0%
be roughly 32 000
and<00:04:06.560><c> then</c><00:04:06.720><c> what</c><00:04:06.879><c> is</c><00:04:06.959><c> the</c><00:04:07.120><c> for</c><00:04:07.280><c> example</c>

00:04:07.670 --> 00:04:07.680 align:start position:0%
and then what is the for example
 

00:04:07.680 --> 00:04:09.110 align:start position:0%
and then what is the for example
shortest<00:04:08.159><c> word</c>

00:04:09.110 --> 00:04:09.120 align:start position:0%
shortest word
 

00:04:09.120 --> 00:04:10.949 align:start position:0%
shortest word
so<00:04:09.360><c> min</c><00:04:09.680><c> of</c>

00:04:10.949 --> 00:04:10.959 align:start position:0%
so min of
 

00:04:10.959 --> 00:04:13.589 align:start position:0%
so min of
length<00:04:11.200><c> of</c><00:04:11.360><c> each</c><00:04:11.519><c> word</c><00:04:11.840><c> for</c><00:04:12.080><c> w</c><00:04:12.480><c> inwards</c>

00:04:13.589 --> 00:04:13.599 align:start position:0%
length of each word for w inwards
 

00:04:13.599 --> 00:04:17.030 align:start position:0%
length of each word for w inwards
so<00:04:13.760><c> the</c><00:04:14.000><c> shortest</c><00:04:14.720><c> word</c><00:04:15.439><c> will</c><00:04:15.680><c> be</c><00:04:16.079><c> length</c>

00:04:17.030 --> 00:04:17.040 align:start position:0%
so the shortest word will be length
 

00:04:17.040 --> 00:04:18.229 align:start position:0%
so the shortest word will be length
two

00:04:18.229 --> 00:04:18.239 align:start position:0%
two
 

00:04:18.239 --> 00:04:21.189 align:start position:0%
two
and<00:04:18.479><c> max</c><00:04:18.720><c> of</c><00:04:18.880><c> one</c><00:04:19.040><c> w</c><00:04:19.440><c> for</c><00:04:19.600><c> w</c><00:04:19.919><c> in</c><00:04:20.079><c> words</c><00:04:20.799><c> so</c><00:04:21.040><c> the</c>

00:04:21.189 --> 00:04:21.199 align:start position:0%
and max of one w for w in words so the
 

00:04:21.199 --> 00:04:23.110 align:start position:0%
and max of one w for w in words so the
longest<00:04:21.600><c> word</c><00:04:21.919><c> will</c><00:04:22.079><c> be</c>

00:04:23.110 --> 00:04:23.120 align:start position:0%
longest word will be
 

00:04:23.120 --> 00:04:24.550 align:start position:0%
longest word will be
15<00:04:23.520><c> characters</c>

00:04:24.550 --> 00:04:24.560 align:start position:0%
15 characters
 

00:04:24.560 --> 00:04:25.830 align:start position:0%
15 characters
so<00:04:24.720><c> let's</c><00:04:24.960><c> now</c><00:04:25.120><c> think</c><00:04:25.280><c> through</c><00:04:25.520><c> our</c><00:04:25.600><c> very</c>

00:04:25.830 --> 00:04:25.840 align:start position:0%
so let's now think through our very
 

00:04:25.840 --> 00:04:27.350 align:start position:0%
so let's now think through our very
first<00:04:26.080><c> language</c><00:04:26.400><c> model</c>

00:04:27.350 --> 00:04:27.360 align:start position:0%
first language model
 

00:04:27.360 --> 00:04:28.710 align:start position:0%
first language model
as<00:04:27.520><c> i</c><00:04:27.600><c> mentioned</c><00:04:28.160><c> a</c><00:04:28.240><c> character</c><00:04:28.560><c> level</c>

00:04:28.710 --> 00:04:28.720 align:start position:0%
as i mentioned a character level
 

00:04:28.720 --> 00:04:30.710 align:start position:0%
as i mentioned a character level
language<00:04:29.040><c> model</c><00:04:29.759><c> is</c><00:04:29.919><c> predicting</c><00:04:30.320><c> the</c><00:04:30.479><c> next</c>

00:04:30.710 --> 00:04:30.720 align:start position:0%
language model is predicting the next
 

00:04:30.720 --> 00:04:33.430 align:start position:0%
language model is predicting the next
character<00:04:31.120><c> in</c><00:04:31.199><c> a</c><00:04:31.280><c> sequence</c><00:04:32.240><c> given</c><00:04:33.040><c> already</c>

00:04:33.430 --> 00:04:33.440 align:start position:0%
character in a sequence given already
 

00:04:33.440 --> 00:04:35.189 align:start position:0%
character in a sequence given already
some<00:04:33.680><c> concrete</c><00:04:34.240><c> sequence</c><00:04:34.639><c> of</c><00:04:34.720><c> characters</c>

00:04:35.189 --> 00:04:35.199 align:start position:0%
some concrete sequence of characters
 

00:04:35.199 --> 00:04:36.550 align:start position:0%
some concrete sequence of characters
before<00:04:35.520><c> it</c>

00:04:36.550 --> 00:04:36.560 align:start position:0%
before it
 

00:04:36.560 --> 00:04:37.990 align:start position:0%
before it
now<00:04:36.880><c> we</c><00:04:37.040><c> have</c><00:04:37.120><c> to</c><00:04:37.199><c> realize</c><00:04:37.520><c> here</c><00:04:37.759><c> is</c><00:04:37.840><c> that</c>

00:04:37.990 --> 00:04:38.000 align:start position:0%
now we have to realize here is that
 

00:04:38.000 --> 00:04:40.950 align:start position:0%
now we have to realize here is that
every<00:04:38.240><c> single</c><00:04:38.560><c> word</c><00:04:38.800><c> here</c><00:04:39.360><c> like</c><00:04:39.600><c> isabella</c><00:04:40.720><c> is</c>

00:04:40.950 --> 00:04:40.960 align:start position:0%
every single word here like isabella is
 

00:04:40.960 --> 00:04:43.909 align:start position:0%
every single word here like isabella is
actually<00:04:41.440><c> quite</c><00:04:41.680><c> a</c><00:04:41.759><c> few</c><00:04:42.080><c> examples</c><00:04:42.960><c> packed</c><00:04:43.360><c> in</c>

00:04:43.909 --> 00:04:43.919 align:start position:0%
actually quite a few examples packed in
 

00:04:43.919 --> 00:04:45.510 align:start position:0%
actually quite a few examples packed in
to<00:04:44.080><c> that</c><00:04:44.240><c> single</c><00:04:44.560><c> word</c>

00:04:45.510 --> 00:04:45.520 align:start position:0%
to that single word
 

00:04:45.520 --> 00:04:47.270 align:start position:0%
to that single word
because<00:04:45.759><c> what</c><00:04:45.919><c> is</c><00:04:46.320><c> an</c><00:04:46.479><c> existence</c><00:04:46.960><c> of</c><00:04:47.040><c> a</c><00:04:47.120><c> word</c>

00:04:47.270 --> 00:04:47.280 align:start position:0%
because what is an existence of a word
 

00:04:47.280 --> 00:04:48.950 align:start position:0%
because what is an existence of a word
like<00:04:47.440><c> isabella</c><00:04:47.919><c> in</c><00:04:48.000><c> the</c><00:04:48.080><c> data</c><00:04:48.240><c> set</c><00:04:48.400><c> telling</c><00:04:48.720><c> us</c>

00:04:48.950 --> 00:04:48.960 align:start position:0%
like isabella in the data set telling us
 

00:04:48.960 --> 00:04:51.110 align:start position:0%
like isabella in the data set telling us
really<00:04:49.680><c> it's</c><00:04:49.919><c> saying</c><00:04:50.240><c> that</c>

00:04:51.110 --> 00:04:51.120 align:start position:0%
really it's saying that
 

00:04:51.120 --> 00:04:53.590 align:start position:0%
really it's saying that
the<00:04:51.360><c> character</c><00:04:51.840><c> i</c><00:04:52.560><c> is</c><00:04:52.720><c> a</c><00:04:52.800><c> very</c><00:04:53.040><c> likely</c>

00:04:53.590 --> 00:04:53.600 align:start position:0%
the character i is a very likely
 

00:04:53.600 --> 00:04:56.469 align:start position:0%
the character i is a very likely
character<00:04:54.160><c> to</c><00:04:54.320><c> come</c><00:04:54.560><c> first</c><00:04:55.440><c> in</c><00:04:55.600><c> the</c><00:04:55.759><c> sequence</c>

00:04:56.469 --> 00:04:56.479 align:start position:0%
character to come first in the sequence
 

00:04:56.479 --> 00:04:58.550 align:start position:0%
character to come first in the sequence
of<00:04:56.880><c> a</c><00:04:57.040><c> name</c>

00:04:58.550 --> 00:04:58.560 align:start position:0%
of a name
 

00:04:58.560 --> 00:05:01.670 align:start position:0%
of a name
the<00:04:58.960><c> character</c><00:04:59.520><c> s</c><00:04:59.919><c> is</c><00:05:00.080><c> likely</c><00:05:00.479><c> to</c><00:05:00.639><c> come</c>

00:05:01.670 --> 00:05:01.680 align:start position:0%
the character s is likely to come
 

00:05:01.680 --> 00:05:04.310 align:start position:0%
the character s is likely to come
after<00:05:02.080><c> i</c>

00:05:04.310 --> 00:05:04.320 align:start position:0%
after i
 

00:05:04.320 --> 00:05:06.390 align:start position:0%
after i
the<00:05:04.479><c> character</c><00:05:04.880><c> a</c><00:05:05.120><c> is</c><00:05:05.199><c> likely</c><00:05:05.520><c> to</c><00:05:05.600><c> come</c><00:05:06.000><c> after</c>

00:05:06.390 --> 00:05:06.400 align:start position:0%
the character a is likely to come after
 

00:05:06.400 --> 00:05:07.590 align:start position:0%
the character a is likely to come after
is

00:05:07.590 --> 00:05:07.600 align:start position:0%
is
 

00:05:07.600 --> 00:05:09.350 align:start position:0%
is
the<00:05:07.759><c> character</c><00:05:08.240><c> b</c><00:05:08.479><c> is</c><00:05:08.560><c> very</c><00:05:08.720><c> likely</c><00:05:09.039><c> to</c><00:05:09.120><c> come</c>

00:05:09.350 --> 00:05:09.360 align:start position:0%
the character b is very likely to come
 

00:05:09.360 --> 00:05:12.469 align:start position:0%
the character b is very likely to come
after<00:05:09.759><c> isa</c><00:05:10.639><c> and</c><00:05:10.800><c> so</c><00:05:10.960><c> on</c><00:05:11.280><c> all</c><00:05:11.360><c> the</c><00:05:11.440><c> way</c><00:05:11.600><c> to</c><00:05:12.160><c> a</c>

00:05:12.469 --> 00:05:12.479 align:start position:0%
after isa and so on all the way to a
 

00:05:12.479 --> 00:05:14.390 align:start position:0%
after isa and so on all the way to a
following<00:05:13.039><c> isabel</c>

00:05:14.390 --> 00:05:14.400 align:start position:0%
following isabel
 

00:05:14.400 --> 00:05:15.670 align:start position:0%
following isabel
and<00:05:14.479><c> then</c><00:05:14.639><c> there's</c><00:05:14.880><c> one</c><00:05:15.039><c> more</c><00:05:15.280><c> example</c>

00:05:15.670 --> 00:05:15.680 align:start position:0%
and then there's one more example
 

00:05:15.680 --> 00:05:17.270 align:start position:0%
and then there's one more example
actually<00:05:16.000><c> packed</c><00:05:16.320><c> in</c><00:05:16.479><c> here</c>

00:05:17.270 --> 00:05:17.280 align:start position:0%
actually packed in here
 

00:05:17.280 --> 00:05:19.029 align:start position:0%
actually packed in here
and<00:05:17.440><c> that</c><00:05:17.680><c> is</c><00:05:18.000><c> that</c>

00:05:19.029 --> 00:05:19.039 align:start position:0%
and that is that
 

00:05:19.039 --> 00:05:21.350 align:start position:0%
and that is that
after<00:05:19.600><c> there's</c><00:05:19.919><c> isabella</c>

00:05:21.350 --> 00:05:21.360 align:start position:0%
after there's isabella
 

00:05:21.360 --> 00:05:23.749 align:start position:0%
after there's isabella
the<00:05:21.520><c> word</c><00:05:21.759><c> is</c><00:05:21.919><c> very</c><00:05:22.080><c> likely</c><00:05:22.400><c> to</c><00:05:22.720><c> end</c>

00:05:23.749 --> 00:05:23.759 align:start position:0%
the word is very likely to end
 

00:05:23.759 --> 00:05:25.430 align:start position:0%
the word is very likely to end
so<00:05:23.919><c> that's</c><00:05:24.160><c> one</c><00:05:24.320><c> more</c><00:05:24.560><c> sort</c><00:05:24.720><c> of</c><00:05:25.039><c> explicit</c>

00:05:25.430 --> 00:05:25.440 align:start position:0%
so that's one more sort of explicit
 

00:05:25.440 --> 00:05:27.350 align:start position:0%
so that's one more sort of explicit
piece<00:05:25.680><c> of</c><00:05:25.759><c> information</c><00:05:26.160><c> that</c><00:05:26.320><c> we</c><00:05:26.400><c> have</c><00:05:26.639><c> here</c>

00:05:27.350 --> 00:05:27.360 align:start position:0%
piece of information that we have here
 

00:05:27.360 --> 00:05:29.590 align:start position:0%
piece of information that we have here
that<00:05:27.600><c> we</c><00:05:27.919><c> have</c><00:05:28.080><c> to</c><00:05:28.160><c> be</c><00:05:28.240><c> careful</c><00:05:28.560><c> with</c>

00:05:29.590 --> 00:05:29.600 align:start position:0%
that we have to be careful with
 

00:05:29.600 --> 00:05:31.670 align:start position:0%
that we have to be careful with
and<00:05:29.840><c> so</c><00:05:30.479><c> there's</c><00:05:30.800><c> a</c><00:05:30.800><c> lot</c><00:05:31.039><c> backed</c><00:05:31.360><c> into</c><00:05:31.600><c> a</c>

00:05:31.670 --> 00:05:31.680 align:start position:0%
and so there's a lot backed into a
 

00:05:31.680 --> 00:05:33.670 align:start position:0%
and so there's a lot backed into a
single<00:05:31.919><c> individual</c><00:05:32.320><c> word</c><00:05:32.639><c> in</c><00:05:32.720><c> terms</c><00:05:32.960><c> of</c><00:05:33.039><c> the</c>

00:05:33.670 --> 00:05:33.680 align:start position:0%
single individual word in terms of the
 

00:05:33.680 --> 00:05:35.350 align:start position:0%
single individual word in terms of the
statistical<00:05:34.240><c> structure</c><00:05:34.639><c> of</c><00:05:34.800><c> what's</c><00:05:35.039><c> likely</c>

00:05:35.350 --> 00:05:35.360 align:start position:0%
statistical structure of what's likely
 

00:05:35.360 --> 00:05:37.990 align:start position:0%
statistical structure of what's likely
to<00:05:35.600><c> follow</c><00:05:36.160><c> in</c><00:05:36.320><c> these</c><00:05:36.479><c> character</c><00:05:36.880><c> sequences</c>

00:05:37.990 --> 00:05:38.000 align:start position:0%
to follow in these character sequences
 

00:05:38.000 --> 00:05:39.189 align:start position:0%
to follow in these character sequences
and<00:05:38.160><c> then</c><00:05:38.320><c> of</c><00:05:38.400><c> course</c><00:05:38.560><c> we</c><00:05:38.639><c> don't</c><00:05:38.800><c> have</c><00:05:38.880><c> just</c><00:05:39.039><c> an</c>

00:05:39.189 --> 00:05:39.199 align:start position:0%
and then of course we don't have just an
 

00:05:39.199 --> 00:05:41.510 align:start position:0%
and then of course we don't have just an
individual<00:05:39.600><c> word</c><00:05:40.240><c> we</c><00:05:40.400><c> actually</c><00:05:40.639><c> have</c><00:05:40.720><c> 32</c><00:05:41.280><c> 000</c>

00:05:41.510 --> 00:05:41.520 align:start position:0%
individual word we actually have 32 000
 

00:05:41.520 --> 00:05:42.790 align:start position:0%
individual word we actually have 32 000
of<00:05:41.680><c> these</c><00:05:42.080><c> and</c><00:05:42.160><c> so</c><00:05:42.320><c> there's</c><00:05:42.560><c> a</c><00:05:42.560><c> lot</c><00:05:42.720><c> of</c>

00:05:42.790 --> 00:05:42.800 align:start position:0%
of these and so there's a lot of
 

00:05:42.800 --> 00:05:44.790 align:start position:0%
of these and so there's a lot of
structure<00:05:43.199><c> here</c><00:05:43.440><c> to</c><00:05:43.600><c> model</c>

00:05:44.790 --> 00:05:44.800 align:start position:0%
structure here to model
 

00:05:44.800 --> 00:05:46.150 align:start position:0%
structure here to model
now<00:05:45.039><c> in</c><00:05:45.120><c> the</c><00:05:45.199><c> beginning</c><00:05:45.600><c> what</c><00:05:45.759><c> i'd</c><00:05:45.840><c> like</c><00:05:46.000><c> to</c>

00:05:46.150 --> 00:05:46.160 align:start position:0%
now in the beginning what i'd like to
 

00:05:46.160 --> 00:05:48.070 align:start position:0%
now in the beginning what i'd like to
start<00:05:46.400><c> with</c><00:05:47.039><c> is</c><00:05:47.199><c> i'd</c><00:05:47.280><c> like</c><00:05:47.440><c> to</c><00:05:47.600><c> start</c><00:05:47.919><c> with</c>

00:05:48.070 --> 00:05:48.080 align:start position:0%
start with is i'd like to start with
 

00:05:48.080 --> 00:05:51.189 align:start position:0%
start with is i'd like to start with
building<00:05:48.400><c> a</c><00:05:48.560><c> bi-gram</c><00:05:49.199><c> language</c><00:05:49.600><c> model</c>

00:05:51.189 --> 00:05:51.199 align:start position:0%
building a bi-gram language model
 

00:05:51.199 --> 00:05:53.029 align:start position:0%
building a bi-gram language model
now<00:05:51.440><c> in</c><00:05:51.520><c> the</c><00:05:51.600><c> bigram</c><00:05:52.000><c> language</c><00:05:52.320><c> model</c><00:05:52.800><c> we're</c>

00:05:53.029 --> 00:05:53.039 align:start position:0%
now in the bigram language model we're
 

00:05:53.039 --> 00:05:54.629 align:start position:0%
now in the bigram language model we're
always<00:05:53.360><c> working</c><00:05:53.600><c> with</c><00:05:53.840><c> just</c>

00:05:54.629 --> 00:05:54.639 align:start position:0%
always working with just
 

00:05:54.639 --> 00:05:56.710 align:start position:0%
always working with just
two<00:05:54.960><c> characters</c><00:05:55.440><c> at</c><00:05:55.600><c> a</c><00:05:55.680><c> time</c>

00:05:56.710 --> 00:05:56.720 align:start position:0%
two characters at a time
 

00:05:56.720 --> 00:05:59.270 align:start position:0%
two characters at a time
so<00:05:57.360><c> we're</c><00:05:57.600><c> only</c><00:05:57.840><c> looking</c><00:05:58.240><c> at</c><00:05:58.560><c> one</c><00:05:58.800><c> character</c>

00:05:59.270 --> 00:05:59.280 align:start position:0%
so we're only looking at one character
 

00:05:59.280 --> 00:06:00.870 align:start position:0%
so we're only looking at one character
that<00:05:59.440><c> we</c><00:05:59.600><c> are</c><00:05:59.680><c> given</c><00:06:00.319><c> and</c><00:06:00.479><c> we're</c><00:06:00.639><c> trying</c><00:06:00.800><c> to</c>

00:06:00.870 --> 00:06:00.880 align:start position:0%
that we are given and we're trying to
 

00:06:00.880 --> 00:06:02.469 align:start position:0%
that we are given and we're trying to
predict<00:06:01.199><c> the</c><00:06:01.360><c> next</c><00:06:01.600><c> character</c><00:06:02.240><c> in</c><00:06:02.319><c> the</c>

00:06:02.469 --> 00:06:02.479 align:start position:0%
predict the next character in the
 

00:06:02.479 --> 00:06:03.830 align:start position:0%
predict the next character in the
sequence

00:06:03.830 --> 00:06:03.840 align:start position:0%
sequence
 

00:06:03.840 --> 00:06:06.309 align:start position:0%
sequence
so<00:06:04.400><c> um</c><00:06:05.120><c> what</c><00:06:05.360><c> characters</c><00:06:05.759><c> are</c><00:06:05.919><c> likely</c><00:06:06.160><c> to</c>

00:06:06.309 --> 00:06:06.319 align:start position:0%
so um what characters are likely to
 

00:06:06.319 --> 00:06:08.309 align:start position:0%
so um what characters are likely to
follow<00:06:06.720><c> are</c><00:06:07.199><c> what</c><00:06:07.440><c> characters</c><00:06:07.840><c> are</c><00:06:07.919><c> likely</c><00:06:08.240><c> to</c>

00:06:08.309 --> 00:06:08.319 align:start position:0%
follow are what characters are likely to
 

00:06:08.319 --> 00:06:10.150 align:start position:0%
follow are what characters are likely to
follow<00:06:08.720><c> a</c><00:06:09.120><c> and</c><00:06:09.199><c> so</c><00:06:09.440><c> on</c><00:06:09.600><c> and</c><00:06:09.759><c> we're</c><00:06:09.919><c> just</c>

00:06:10.150 --> 00:06:10.160 align:start position:0%
follow a and so on and we're just
 

00:06:10.160 --> 00:06:11.830 align:start position:0%
follow a and so on and we're just
modeling<00:06:10.479><c> that</c><00:06:10.720><c> kind</c><00:06:10.880><c> of</c><00:06:10.960><c> a</c><00:06:11.039><c> little</c><00:06:11.520><c> local</c>

00:06:11.830 --> 00:06:11.840 align:start position:0%
modeling that kind of a little local
 

00:06:11.840 --> 00:06:12.870 align:start position:0%
modeling that kind of a little local
structure

00:06:12.870 --> 00:06:12.880 align:start position:0%
structure
 

00:06:12.880 --> 00:06:14.950 align:start position:0%
structure
and<00:06:13.039><c> we're</c><00:06:13.280><c> forgetting</c><00:06:13.680><c> the</c><00:06:13.840><c> fact</c><00:06:14.160><c> that</c><00:06:14.800><c> we</c>

00:06:14.950 --> 00:06:14.960 align:start position:0%
and we're forgetting the fact that we
 

00:06:14.960 --> 00:06:16.950 align:start position:0%
and we're forgetting the fact that we
may<00:06:15.120><c> have</c><00:06:15.360><c> a</c><00:06:15.520><c> lot</c><00:06:15.680><c> more</c><00:06:16.000><c> information</c><00:06:16.720><c> we're</c>

00:06:16.950 --> 00:06:16.960 align:start position:0%
may have a lot more information we're
 

00:06:16.960 --> 00:06:18.309 align:start position:0%
may have a lot more information we're
always<00:06:17.199><c> just</c><00:06:17.360><c> looking</c><00:06:17.600><c> at</c><00:06:17.759><c> the</c><00:06:17.919><c> previous</c>

00:06:18.309 --> 00:06:18.319 align:start position:0%
always just looking at the previous
 

00:06:18.319 --> 00:06:20.309 align:start position:0%
always just looking at the previous
character<00:06:18.800><c> to</c><00:06:18.960><c> predict</c><00:06:19.280><c> the</c><00:06:19.360><c> next</c><00:06:19.600><c> one</c><00:06:20.160><c> so</c>

00:06:20.309 --> 00:06:20.319 align:start position:0%
character to predict the next one so
 

00:06:20.319 --> 00:06:21.670 align:start position:0%
character to predict the next one so
it's<00:06:20.400><c> a</c><00:06:20.479><c> very</c><00:06:20.720><c> simple</c><00:06:21.039><c> and</c><00:06:21.120><c> weak</c><00:06:21.360><c> language</c>

00:06:21.670 --> 00:06:21.680 align:start position:0%
it's a very simple and weak language
 

00:06:21.680 --> 00:06:23.189 align:start position:0%
it's a very simple and weak language
model<00:06:22.080><c> but</c><00:06:22.240><c> i</c><00:06:22.319><c> think</c><00:06:22.479><c> it's</c><00:06:22.560><c> a</c><00:06:22.639><c> great</c><00:06:22.800><c> place</c><00:06:23.039><c> to</c>

00:06:23.189 --> 00:06:23.199 align:start position:0%
model but i think it's a great place to
 

00:06:23.199 --> 00:06:24.070 align:start position:0%
model but i think it's a great place to
start

00:06:24.070 --> 00:06:24.080 align:start position:0%
start
 

00:06:24.080 --> 00:06:25.670 align:start position:0%
start
so<00:06:24.240><c> now</c><00:06:24.400><c> let's</c><00:06:24.639><c> begin</c><00:06:24.880><c> by</c><00:06:25.039><c> looking</c><00:06:25.360><c> at</c><00:06:25.440><c> these</c>

00:06:25.670 --> 00:06:25.680 align:start position:0%
so now let's begin by looking at these
 

00:06:25.680 --> 00:06:27.430 align:start position:0%
so now let's begin by looking at these
bi-grams<00:06:26.240><c> in</c><00:06:26.400><c> our</c><00:06:26.479><c> data</c><00:06:26.720><c> set</c><00:06:27.039><c> and</c><00:06:27.120><c> what</c><00:06:27.280><c> they</c>

00:06:27.430 --> 00:06:27.440 align:start position:0%
bi-grams in our data set and what they
 

00:06:27.440 --> 00:06:29.029 align:start position:0%
bi-grams in our data set and what they
look<00:06:27.600><c> like</c><00:06:27.840><c> and</c><00:06:27.919><c> these</c><00:06:28.160><c> bi-grams</c><00:06:28.639><c> again</c><00:06:28.880><c> are</c>

00:06:29.029 --> 00:06:29.039 align:start position:0%
look like and these bi-grams again are
 

00:06:29.039 --> 00:06:30.870 align:start position:0%
look like and these bi-grams again are
just<00:06:29.280><c> two</c><00:06:29.440><c> characters</c><00:06:29.919><c> in</c><00:06:30.080><c> a</c><00:06:30.080><c> row</c>

00:06:30.870 --> 00:06:30.880 align:start position:0%
just two characters in a row
 

00:06:30.880 --> 00:06:33.110 align:start position:0%
just two characters in a row
so<00:06:31.120><c> for</c><00:06:31.280><c> w</c><00:06:31.680><c> in</c><00:06:31.759><c> words</c>

00:06:33.110 --> 00:06:33.120 align:start position:0%
so for w in words
 

00:06:33.120 --> 00:06:35.189 align:start position:0%
so for w in words
each<00:06:33.360><c> w</c><00:06:33.759><c> here</c><00:06:34.000><c> is</c><00:06:34.160><c> an</c><00:06:34.319><c> individual</c><00:06:34.800><c> word</c><00:06:35.039><c> a</c>

00:06:35.189 --> 00:06:35.199 align:start position:0%
each w here is an individual word a
 

00:06:35.199 --> 00:06:36.309 align:start position:0%
each w here is an individual word a
string

00:06:36.309 --> 00:06:36.319 align:start position:0%
string
 

00:06:36.319 --> 00:06:39.590 align:start position:0%
string
we<00:06:36.479><c> want</c><00:06:36.639><c> to</c><00:06:36.720><c> iterate</c><00:06:37.440><c> uh</c><00:06:38.000><c> for</c>

00:06:39.590 --> 00:06:39.600 align:start position:0%
we want to iterate uh for
 

00:06:39.600 --> 00:06:41.670 align:start position:0%
we want to iterate uh for
we're<00:06:39.759><c> going</c><00:06:39.919><c> to</c><00:06:40.000><c> iterate</c><00:06:40.400><c> this</c><00:06:40.560><c> word</c>

00:06:41.670 --> 00:06:41.680 align:start position:0%
we're going to iterate this word
 

00:06:41.680 --> 00:06:43.990 align:start position:0%
we're going to iterate this word
with<00:06:42.000><c> consecutive</c><00:06:42.560><c> characters</c><00:06:43.600><c> so</c><00:06:43.840><c> two</c>

00:06:43.990 --> 00:06:44.000 align:start position:0%
with consecutive characters so two
 

00:06:44.000 --> 00:06:45.909 align:start position:0%
with consecutive characters so two
characters<00:06:44.400><c> at</c><00:06:44.560><c> a</c><00:06:44.639><c> time</c><00:06:45.199><c> sliding</c><00:06:45.600><c> it</c><00:06:45.759><c> through</c>

00:06:45.909 --> 00:06:45.919 align:start position:0%
characters at a time sliding it through
 

00:06:45.919 --> 00:06:49.350 align:start position:0%
characters at a time sliding it through
the<00:06:46.000><c> word</c><00:06:46.720><c> now</c><00:06:47.120><c> a</c><00:06:47.600><c> interesting</c><00:06:48.160><c> nice</c><00:06:48.639><c> way</c><00:06:49.120><c> cute</c>

00:06:49.350 --> 00:06:49.360 align:start position:0%
the word now a interesting nice way cute
 

00:06:49.360 --> 00:06:51.430 align:start position:0%
the word now a interesting nice way cute
way<00:06:49.520><c> to</c><00:06:49.680><c> do</c><00:06:49.840><c> this</c><00:06:50.000><c> in</c><00:06:50.080><c> python</c><00:06:50.400><c> by</c><00:06:50.560><c> the</c><00:06:50.639><c> way</c><00:06:51.280><c> is</c>

00:06:51.430 --> 00:06:51.440 align:start position:0%
way to do this in python by the way is
 

00:06:51.440 --> 00:06:53.189 align:start position:0%
way to do this in python by the way is
doing<00:06:51.759><c> something</c><00:06:52.000><c> like</c><00:06:52.160><c> this</c><00:06:52.720><c> for</c><00:06:52.880><c> character</c>

00:06:53.189 --> 00:06:53.199 align:start position:0%
doing something like this for character
 

00:06:53.199 --> 00:06:56.309 align:start position:0%
doing something like this for character
one<00:06:53.440><c> character</c><00:06:53.840><c> two</c><00:06:54.319><c> in</c><00:06:54.960><c> zip</c><00:06:55.440><c> off</c>

00:06:56.309 --> 00:06:56.319 align:start position:0%
one character two in zip off
 

00:06:56.319 --> 00:06:59.990 align:start position:0%
one character two in zip off
w<00:06:57.120><c> and</c><00:06:57.280><c> w</c><00:06:57.680><c> at</c><00:06:57.840><c> one</c>

00:06:59.990 --> 00:07:00.000 align:start position:0%
w and w at one
 

00:07:00.000 --> 00:07:01.670 align:start position:0%
w and w at one
one<00:07:00.240><c> column</c>

00:07:01.670 --> 00:07:01.680 align:start position:0%
one column
 

00:07:01.680 --> 00:07:02.790 align:start position:0%
one column
print

00:07:02.790 --> 00:07:02.800 align:start position:0%
print
 

00:07:02.800 --> 00:07:04.550 align:start position:0%
print
character<00:07:03.199><c> one</c><00:07:03.360><c> character</c><00:07:03.680><c> two</c>

00:07:04.550 --> 00:07:04.560 align:start position:0%
character one character two
 

00:07:04.560 --> 00:07:05.909 align:start position:0%
character one character two
and<00:07:04.720><c> let's</c><00:07:04.880><c> not</c><00:07:05.039><c> do</c><00:07:05.199><c> all</c><00:07:05.280><c> the</c><00:07:05.440><c> words</c><00:07:05.680><c> let's</c>

00:07:05.909 --> 00:07:05.919 align:start position:0%
and let's not do all the words let's
 

00:07:05.919 --> 00:07:07.430 align:start position:0%
and let's not do all the words let's
just<00:07:06.080><c> do</c><00:07:06.240><c> the</c><00:07:06.400><c> first</c><00:07:06.639><c> three</c><00:07:06.800><c> words</c><00:07:07.199><c> and</c><00:07:07.360><c> i'm</c>

00:07:07.430 --> 00:07:07.440 align:start position:0%
just do the first three words and i'm
 

00:07:07.440 --> 00:07:09.029 align:start position:0%
just do the first three words and i'm
going<00:07:07.599><c> to</c><00:07:07.680><c> show</c><00:07:07.840><c> you</c><00:07:08.240><c> in</c><00:07:08.319><c> a</c><00:07:08.400><c> second</c><00:07:08.639><c> how</c><00:07:08.800><c> this</c>

00:07:09.029 --> 00:07:09.039 align:start position:0%
going to show you in a second how this
 

00:07:09.039 --> 00:07:09.909 align:start position:0%
going to show you in a second how this
works

00:07:09.909 --> 00:07:09.919 align:start position:0%
works
 

00:07:09.919 --> 00:07:11.909 align:start position:0%
works
but<00:07:10.080><c> for</c><00:07:10.240><c> now</c><00:07:10.479><c> basically</c><00:07:10.960><c> as</c><00:07:11.120><c> an</c><00:07:11.280><c> example</c>

00:07:11.909 --> 00:07:11.919 align:start position:0%
but for now basically as an example
 

00:07:11.919 --> 00:07:13.670 align:start position:0%
but for now basically as an example
let's<00:07:12.080><c> just</c><00:07:12.240><c> do</c><00:07:12.560><c> the</c><00:07:12.639><c> very</c><00:07:12.880><c> first</c><00:07:13.120><c> word</c><00:07:13.280><c> alone</c>

00:07:13.670 --> 00:07:13.680 align:start position:0%
let's just do the very first word alone
 

00:07:13.680 --> 00:07:15.270 align:start position:0%
let's just do the very first word alone
emma

00:07:15.270 --> 00:07:15.280 align:start position:0%
emma
 

00:07:15.280 --> 00:07:18.309 align:start position:0%
emma
you<00:07:15.440><c> see</c><00:07:15.680><c> how</c><00:07:16.319><c> we</c><00:07:16.479><c> have</c><00:07:16.639><c> a</c><00:07:16.960><c> emma</c><00:07:17.840><c> and</c><00:07:18.000><c> this</c><00:07:18.160><c> will</c>

00:07:18.309 --> 00:07:18.319 align:start position:0%
you see how we have a emma and this will
 

00:07:18.319 --> 00:07:20.950 align:start position:0%
you see how we have a emma and this will
just<00:07:18.479><c> print</c><00:07:18.720><c> e</c><00:07:18.960><c> m</c><00:07:19.280><c> m</c><00:07:19.840><c> m</c><00:07:20.080><c> a</c>

00:07:20.950 --> 00:07:20.960 align:start position:0%
just print e m m m a
 

00:07:20.960 --> 00:07:23.749 align:start position:0%
just print e m m m a
and<00:07:21.039><c> the</c><00:07:21.199><c> reason</c><00:07:21.440><c> this</c><00:07:21.680><c> works</c><00:07:22.319><c> is</c><00:07:22.960><c> because</c><00:07:23.199><c> w</c>

00:07:23.749 --> 00:07:23.759 align:start position:0%
and the reason this works is because w
 

00:07:23.759 --> 00:07:26.790 align:start position:0%
and the reason this works is because w
is<00:07:24.080><c> the</c><00:07:24.240><c> string</c><00:07:24.639><c> emma</c><00:07:25.280><c> w</c><00:07:25.759><c> at</c><00:07:25.919><c> one</c><00:07:26.160><c> column</c><00:07:26.639><c> is</c>

00:07:26.790 --> 00:07:26.800 align:start position:0%
is the string emma w at one column is
 

00:07:26.800 --> 00:07:28.629 align:start position:0%
is the string emma w at one column is
the<00:07:26.960><c> string</c><00:07:27.360><c> mma</c>

00:07:28.629 --> 00:07:28.639 align:start position:0%
the string mma
 

00:07:28.639 --> 00:07:29.670 align:start position:0%
the string mma
and<00:07:28.880><c> zip</c>

00:07:29.670 --> 00:07:29.680 align:start position:0%
and zip
 

00:07:29.680 --> 00:07:33.350 align:start position:0%
and zip
takes<00:07:30.240><c> two</c><00:07:30.479><c> iterators</c><00:07:31.520><c> and</c><00:07:31.680><c> it</c><00:07:32.160><c> pairs</c><00:07:32.560><c> them</c><00:07:32.800><c> up</c>

00:07:33.350 --> 00:07:33.360 align:start position:0%
takes two iterators and it pairs them up
 

00:07:33.360 --> 00:07:35.029 align:start position:0%
takes two iterators and it pairs them up
and<00:07:33.520><c> then</c><00:07:33.759><c> creates</c><00:07:34.080><c> an</c><00:07:34.240><c> iterator</c><00:07:34.720><c> over</c><00:07:34.880><c> the</c>

00:07:35.029 --> 00:07:35.039 align:start position:0%
and then creates an iterator over the
 

00:07:35.039 --> 00:07:37.350 align:start position:0%
and then creates an iterator over the
tuples<00:07:35.520><c> of</c><00:07:35.599><c> their</c><00:07:35.759><c> consecutive</c><00:07:36.400><c> entries</c>

00:07:37.350 --> 00:07:37.360 align:start position:0%
tuples of their consecutive entries
 

00:07:37.360 --> 00:07:39.430 align:start position:0%
tuples of their consecutive entries
and<00:07:37.520><c> if</c><00:07:37.840><c> any</c><00:07:38.080><c> one</c><00:07:38.240><c> of</c><00:07:38.319><c> these</c><00:07:38.560><c> lists</c><00:07:38.960><c> is</c><00:07:39.120><c> shorter</c>

00:07:39.430 --> 00:07:39.440 align:start position:0%
and if any one of these lists is shorter
 

00:07:39.440 --> 00:07:41.830 align:start position:0%
and if any one of these lists is shorter
than<00:07:39.680><c> the</c><00:07:39.840><c> other</c><00:07:40.240><c> then</c><00:07:40.400><c> it</c><00:07:40.560><c> will</c><00:07:40.720><c> just</c>

00:07:41.830 --> 00:07:41.840 align:start position:0%
than the other then it will just
 

00:07:41.840 --> 00:07:43.670 align:start position:0%
than the other then it will just
halt<00:07:42.319><c> and</c><00:07:42.479><c> return</c>

00:07:43.670 --> 00:07:43.680 align:start position:0%
halt and return
 

00:07:43.680 --> 00:07:48.950 align:start position:0%
halt and return
so<00:07:43.919><c> basically</c><00:07:44.800><c> that's</c><00:07:45.120><c> why</c><00:07:45.840><c> we</c><00:07:46.080><c> return</c><00:07:46.639><c> em</c><00:07:47.360><c> mmm</c>

00:07:48.950 --> 00:07:48.960 align:start position:0%
so basically that's why we return em mmm
 

00:07:48.960 --> 00:07:49.909 align:start position:0%
so basically that's why we return em mmm
ma

00:07:49.909 --> 00:07:49.919 align:start position:0%
ma
 

00:07:49.919 --> 00:07:52.070 align:start position:0%
ma
but<00:07:50.160><c> then</c><00:07:50.720><c> because</c><00:07:51.039><c> this</c><00:07:51.280><c> iterator</c><00:07:51.840><c> second</c>

00:07:52.070 --> 00:07:52.080 align:start position:0%
but then because this iterator second
 

00:07:52.080 --> 00:07:55.110 align:start position:0%
but then because this iterator second
one<00:07:52.319><c> here</c><00:07:52.720><c> runs</c><00:07:52.960><c> out</c><00:07:53.120><c> of</c><00:07:53.199><c> elements</c><00:07:54.000><c> zip</c><00:07:54.319><c> just</c>

00:07:55.110 --> 00:07:55.120 align:start position:0%
one here runs out of elements zip just
 

00:07:55.120 --> 00:07:56.869 align:start position:0%
one here runs out of elements zip just
ends<00:07:55.680><c> and</c><00:07:55.759><c> that's</c><00:07:56.000><c> why</c><00:07:56.160><c> we</c><00:07:56.319><c> only</c><00:07:56.560><c> get</c><00:07:56.720><c> these</c>

00:07:56.869 --> 00:07:56.879 align:start position:0%
ends and that's why we only get these
 

00:07:56.879 --> 00:07:59.670 align:start position:0%
ends and that's why we only get these
tuples<00:07:57.680><c> so</c><00:07:57.919><c> pretty</c><00:07:58.160><c> cute</c>

00:07:59.670 --> 00:07:59.680 align:start position:0%
tuples so pretty cute
 

00:07:59.680 --> 00:08:01.830 align:start position:0%
tuples so pretty cute
so<00:07:59.840><c> these</c><00:08:00.080><c> are</c><00:08:00.160><c> the</c><00:08:00.240><c> consecutive</c><00:08:00.720><c> elements</c><00:08:01.440><c> in</c>

00:08:01.830 --> 00:08:01.840 align:start position:0%
so these are the consecutive elements in
 

00:08:01.840 --> 00:08:03.909 align:start position:0%
so these are the consecutive elements in
the<00:08:02.000><c> first</c><00:08:02.319><c> word</c><00:08:03.039><c> now</c><00:08:03.199><c> we</c><00:08:03.360><c> have</c><00:08:03.440><c> to</c><00:08:03.520><c> be</c><00:08:03.599><c> careful</c>

00:08:03.909 --> 00:08:03.919 align:start position:0%
the first word now we have to be careful
 

00:08:03.919 --> 00:08:04.869 align:start position:0%
the first word now we have to be careful
because<00:08:04.160><c> we</c><00:08:04.240><c> actually</c><00:08:04.479><c> have</c><00:08:04.639><c> more</c>

00:08:04.869 --> 00:08:04.879 align:start position:0%
because we actually have more
 

00:08:04.879 --> 00:08:07.270 align:start position:0%
because we actually have more
information<00:08:05.360><c> here</c><00:08:05.520><c> than</c><00:08:05.759><c> just</c><00:08:06.160><c> these</c><00:08:06.400><c> three</c>

00:08:07.270 --> 00:08:07.280 align:start position:0%
information here than just these three
 

00:08:07.280 --> 00:08:09.909 align:start position:0%
information here than just these three
examples<00:08:07.840><c> as</c><00:08:08.000><c> i</c><00:08:08.160><c> mentioned</c><00:08:08.960><c> we</c><00:08:09.120><c> know</c><00:08:09.280><c> that</c><00:08:09.599><c> e</c>

00:08:09.909 --> 00:08:09.919 align:start position:0%
examples as i mentioned we know that e
 

00:08:09.919 --> 00:08:12.309 align:start position:0%
examples as i mentioned we know that e
is<00:08:10.080><c> the</c><00:08:10.639><c> is</c><00:08:10.800><c> very</c><00:08:10.960><c> likely</c><00:08:11.280><c> to</c><00:08:11.440><c> come</c><00:08:11.680><c> first</c><00:08:12.160><c> and</c>

00:08:12.309 --> 00:08:12.319 align:start position:0%
is the is very likely to come first and
 

00:08:12.319 --> 00:08:14.390 align:start position:0%
is the is very likely to come first and
we<00:08:12.400><c> know</c><00:08:12.560><c> that</c><00:08:12.800><c> a</c><00:08:13.120><c> in</c><00:08:13.280><c> this</c><00:08:13.440><c> case</c><00:08:13.840><c> is</c><00:08:14.080><c> coming</c>

00:08:14.390 --> 00:08:14.400 align:start position:0%
we know that a in this case is coming
 

00:08:14.400 --> 00:08:15.589 align:start position:0%
we know that a in this case is coming
last

00:08:15.589 --> 00:08:15.599 align:start position:0%
last
 

00:08:15.599 --> 00:08:17.749 align:start position:0%
last
so<00:08:15.759><c> one</c><00:08:15.919><c> way</c><00:08:16.080><c> to</c><00:08:16.160><c> do</c><00:08:16.319><c> this</c><00:08:16.560><c> is</c><00:08:16.800><c> basically</c><00:08:17.599><c> we're</c>

00:08:17.749 --> 00:08:17.759 align:start position:0%
so one way to do this is basically we're
 

00:08:17.759 --> 00:08:19.270 align:start position:0%
so one way to do this is basically we're
going<00:08:18.000><c> to</c><00:08:18.240><c> create</c>

00:08:19.270 --> 00:08:19.280 align:start position:0%
going to create
 

00:08:19.280 --> 00:08:21.510 align:start position:0%
going to create
a<00:08:19.440><c> special</c><00:08:19.759><c> array</c><00:08:20.080><c> here</c><00:08:20.800><c> all</c>

00:08:21.510 --> 00:08:21.520 align:start position:0%
a special array here all
 

00:08:21.520 --> 00:08:23.029 align:start position:0%
a special array here all
characters

00:08:23.029 --> 00:08:23.039 align:start position:0%
characters
 

00:08:23.039 --> 00:08:25.270 align:start position:0%
characters
and<00:08:23.520><c> um</c><00:08:24.000><c> we're</c><00:08:24.160><c> going</c><00:08:24.319><c> to</c><00:08:24.479><c> hallucinate</c><00:08:25.120><c> a</c>

00:08:25.270 --> 00:08:25.280 align:start position:0%
and um we're going to hallucinate a
 

00:08:25.280 --> 00:08:28.390 align:start position:0%
and um we're going to hallucinate a
special<00:08:25.759><c> start</c><00:08:26.319><c> token</c><00:08:26.720><c> here</c>

00:08:28.390 --> 00:08:28.400 align:start position:0%
special start token here
 

00:08:28.400 --> 00:08:29.830 align:start position:0%
special start token here
i'm<00:08:28.560><c> going</c><00:08:28.800><c> to</c>

00:08:29.830 --> 00:08:29.840 align:start position:0%
i'm going to
 

00:08:29.840 --> 00:08:32.389 align:start position:0%
i'm going to
call<00:08:30.080><c> it</c><00:08:30.160><c> like</c><00:08:30.879><c> special</c><00:08:31.360><c> start</c>

00:08:32.389 --> 00:08:32.399 align:start position:0%
call it like special start
 

00:08:32.399 --> 00:08:34.550 align:start position:0%
call it like special start
so<00:08:32.640><c> this</c><00:08:32.800><c> is</c><00:08:32.880><c> a</c><00:08:32.959><c> list</c><00:08:33.200><c> of</c><00:08:33.279><c> one</c><00:08:33.519><c> element</c>

00:08:34.550 --> 00:08:34.560 align:start position:0%
so this is a list of one element
 

00:08:34.560 --> 00:08:36.469 align:start position:0%
so this is a list of one element
plus

00:08:36.469 --> 00:08:36.479 align:start position:0%
plus
 

00:08:36.479 --> 00:08:37.750 align:start position:0%
plus
w

00:08:37.750 --> 00:08:37.760 align:start position:0%
w
 

00:08:37.760 --> 00:08:41.269 align:start position:0%
w
and<00:08:37.839><c> then</c><00:08:38.080><c> plus</c><00:08:38.719><c> a</c><00:08:38.880><c> special</c><00:08:39.360><c> end</c><00:08:39.839><c> character</c>

00:08:41.269 --> 00:08:41.279 align:start position:0%
and then plus a special end character
 

00:08:41.279 --> 00:08:42.709 align:start position:0%
and then plus a special end character
and<00:08:41.360><c> the</c><00:08:41.440><c> reason</c><00:08:41.680><c> i'm</c><00:08:41.839><c> wrapping</c><00:08:42.159><c> the</c><00:08:42.320><c> list</c><00:08:42.560><c> of</c>

00:08:42.709 --> 00:08:42.719 align:start position:0%
and the reason i'm wrapping the list of
 

00:08:42.719 --> 00:08:45.910 align:start position:0%
and the reason i'm wrapping the list of
w<00:08:43.039><c> here</c><00:08:43.760><c> is</c><00:08:43.919><c> because</c><00:08:44.159><c> w</c><00:08:44.480><c> is</c><00:08:44.560><c> a</c><00:08:44.640><c> string</c><00:08:45.040><c> emma</c>

00:08:45.910 --> 00:08:45.920 align:start position:0%
w here is because w is a string emma
 

00:08:45.920 --> 00:08:48.630 align:start position:0%
w here is because w is a string emma
list<00:08:46.160><c> of</c><00:08:46.240><c> w</c><00:08:46.720><c> will</c><00:08:47.040><c> just</c><00:08:47.279><c> have</c><00:08:47.920><c> the</c><00:08:48.160><c> individual</c>

00:08:48.630 --> 00:08:48.640 align:start position:0%
list of w will just have the individual
 

00:08:48.640 --> 00:08:50.790 align:start position:0%
list of w will just have the individual
characters<00:08:49.200><c> in</c><00:08:49.279><c> the</c><00:08:49.440><c> list</c>

00:08:50.790 --> 00:08:50.800 align:start position:0%
characters in the list
 

00:08:50.800 --> 00:08:51.829 align:start position:0%
characters in the list
and<00:08:50.959><c> then</c>

00:08:51.829 --> 00:08:51.839 align:start position:0%
and then
 

00:08:51.839 --> 00:08:54.710 align:start position:0%
and then
doing<00:08:52.000><c> this</c><00:08:52.240><c> again</c><00:08:52.560><c> now</c><00:08:53.120><c> but</c><00:08:53.680><c> not</c><00:08:54.320><c> iterating</c>

00:08:54.710 --> 00:08:54.720 align:start position:0%
doing this again now but not iterating
 

00:08:54.720 --> 00:08:58.070 align:start position:0%
doing this again now but not iterating
over<00:08:54.959><c> w's</c><00:08:55.440><c> but</c><00:08:55.680><c> over</c><00:08:55.920><c> the</c><00:08:56.240><c> characters</c>

00:08:58.070 --> 00:08:58.080 align:start position:0%
over w's but over the characters
 

00:08:58.080 --> 00:09:00.150 align:start position:0%
over w's but over the characters
will<00:08:58.240><c> give</c><00:08:58.480><c> us</c><00:08:58.560><c> something</c><00:08:58.800><c> like</c><00:08:58.959><c> this</c>

00:09:00.150 --> 00:09:00.160 align:start position:0%
will give us something like this
 

00:09:00.160 --> 00:09:02.710 align:start position:0%
will give us something like this
so<00:09:00.640><c> e</c><00:09:00.959><c> is</c><00:09:01.120><c> likely</c><00:09:01.680><c> so</c><00:09:01.839><c> this</c><00:09:01.920><c> is</c><00:09:02.080><c> a</c><00:09:02.160><c> bigram</c><00:09:02.640><c> of</c>

00:09:02.710 --> 00:09:02.720 align:start position:0%
so e is likely so this is a bigram of
 

00:09:02.720 --> 00:09:05.110 align:start position:0%
so e is likely so this is a bigram of
the<00:09:02.880><c> start</c><00:09:03.440><c> character</c><00:09:03.920><c> and</c><00:09:04.160><c> e</c><00:09:04.640><c> and</c><00:09:04.720><c> this</c><00:09:04.880><c> is</c><00:09:05.040><c> a</c>

00:09:05.110 --> 00:09:05.120 align:start position:0%
the start character and e and this is a
 

00:09:05.120 --> 00:09:06.389 align:start position:0%
the start character and e and this is a
bigram<00:09:05.600><c> of</c><00:09:05.680><c> the</c>

00:09:06.389 --> 00:09:06.399 align:start position:0%
bigram of the
 

00:09:06.399 --> 00:09:09.030 align:start position:0%
bigram of the
a<00:09:06.800><c> and</c><00:09:06.880><c> the</c><00:09:07.040><c> special</c><00:09:07.519><c> end</c><00:09:07.920><c> character</c>

00:09:09.030 --> 00:09:09.040 align:start position:0%
a and the special end character
 

00:09:09.040 --> 00:09:10.470 align:start position:0%
a and the special end character
and<00:09:09.120><c> now</c><00:09:09.279><c> we</c><00:09:09.440><c> can</c><00:09:09.519><c> look</c><00:09:09.760><c> at</c><00:09:09.839><c> for</c><00:09:10.000><c> example</c><00:09:10.320><c> what</c>

00:09:10.470 --> 00:09:10.480 align:start position:0%
and now we can look at for example what
 

00:09:10.480 --> 00:09:11.990 align:start position:0%
and now we can look at for example what
this<00:09:10.640><c> looks</c><00:09:10.800><c> like</c><00:09:10.959><c> for</c>

00:09:11.990 --> 00:09:12.000 align:start position:0%
this looks like for
 

00:09:12.000 --> 00:09:14.470 align:start position:0%
this looks like for
olivia<00:09:12.560><c> or</c><00:09:12.880><c> eva</c>

00:09:14.470 --> 00:09:14.480 align:start position:0%
olivia or eva
 

00:09:14.480 --> 00:09:16.150 align:start position:0%
olivia or eva
and<00:09:14.640><c> indeed</c><00:09:14.880><c> we</c><00:09:15.040><c> can</c><00:09:15.200><c> actually</c>

00:09:16.150 --> 00:09:16.160 align:start position:0%
and indeed we can actually
 

00:09:16.160 --> 00:09:17.590 align:start position:0%
and indeed we can actually
potentially<00:09:16.640><c> do</c><00:09:16.800><c> this</c><00:09:16.880><c> for</c><00:09:17.040><c> the</c><00:09:17.120><c> entire</c><00:09:17.360><c> data</c>

00:09:17.590 --> 00:09:17.600 align:start position:0%
potentially do this for the entire data
 

00:09:17.600 --> 00:09:19.350 align:start position:0%
potentially do this for the entire data
set<00:09:18.080><c> but</c><00:09:18.320><c> we</c><00:09:18.480><c> won't</c><00:09:18.640><c> print</c><00:09:18.880><c> that</c><00:09:19.040><c> that's</c><00:09:19.200><c> going</c>

00:09:19.350 --> 00:09:19.360 align:start position:0%
set but we won't print that that's going
 

00:09:19.360 --> 00:09:20.630 align:start position:0%
set but we won't print that that's going
to<00:09:19.440><c> be</c><00:09:19.600><c> too</c><00:09:19.760><c> much</c>

00:09:20.630 --> 00:09:20.640 align:start position:0%
to be too much
 

00:09:20.640 --> 00:09:22.470 align:start position:0%
to be too much
but<00:09:20.800><c> these</c><00:09:20.959><c> are</c><00:09:21.120><c> the</c><00:09:21.200><c> individual</c><00:09:22.080><c> character</c>

00:09:22.470 --> 00:09:22.480 align:start position:0%
but these are the individual character
 

00:09:22.480 --> 00:09:24.949 align:start position:0%
but these are the individual character
diagrams<00:09:23.120><c> and</c><00:09:23.200><c> we</c><00:09:23.360><c> can</c><00:09:23.600><c> print</c><00:09:23.839><c> them</c>

00:09:24.949 --> 00:09:24.959 align:start position:0%
diagrams and we can print them
 

00:09:24.959 --> 00:09:26.470 align:start position:0%
diagrams and we can print them
now<00:09:25.200><c> in</c><00:09:25.279><c> order</c><00:09:25.519><c> to</c><00:09:25.680><c> learn</c><00:09:25.839><c> the</c><00:09:26.000><c> statistics</c>

00:09:26.470 --> 00:09:26.480 align:start position:0%
now in order to learn the statistics
 

00:09:26.480 --> 00:09:28.310 align:start position:0%
now in order to learn the statistics
about<00:09:26.800><c> which</c><00:09:27.040><c> characters</c><00:09:27.600><c> are</c><00:09:27.839><c> likely</c><00:09:28.160><c> to</c>

00:09:28.310 --> 00:09:28.320 align:start position:0%
about which characters are likely to
 

00:09:28.320 --> 00:09:30.550 align:start position:0%
about which characters are likely to
follow<00:09:28.720><c> other</c><00:09:28.959><c> characters</c><00:09:29.760><c> the</c><00:09:29.920><c> simplest</c><00:09:30.399><c> way</c>

00:09:30.550 --> 00:09:30.560 align:start position:0%
follow other characters the simplest way
 

00:09:30.560 --> 00:09:32.710 align:start position:0%
follow other characters the simplest way
in<00:09:30.720><c> the</c><00:09:30.800><c> bigram</c><00:09:31.519><c> language</c><00:09:31.920><c> models</c><00:09:32.480><c> is</c><00:09:32.560><c> to</c>

00:09:32.710 --> 00:09:32.720 align:start position:0%
in the bigram language models is to
 

00:09:32.720 --> 00:09:34.389 align:start position:0%
in the bigram language models is to
simply<00:09:32.959><c> do</c><00:09:33.120><c> it</c><00:09:33.200><c> by</c><00:09:33.440><c> counting</c>

00:09:34.389 --> 00:09:34.399 align:start position:0%
simply do it by counting
 

00:09:34.399 --> 00:09:36.389 align:start position:0%
simply do it by counting
so<00:09:34.640><c> we're</c><00:09:35.120><c> basically</c><00:09:35.519><c> just</c><00:09:35.680><c> going</c><00:09:35.839><c> to</c><00:09:36.000><c> count</c>

00:09:36.389 --> 00:09:36.399 align:start position:0%
so we're basically just going to count
 

00:09:36.399 --> 00:09:38.389 align:start position:0%
so we're basically just going to count
how<00:09:36.640><c> often</c><00:09:37.279><c> any</c><00:09:37.440><c> one</c><00:09:37.600><c> of</c><00:09:37.680><c> these</c><00:09:37.839><c> combinations</c>

00:09:38.389 --> 00:09:38.399 align:start position:0%
how often any one of these combinations
 

00:09:38.399 --> 00:09:40.230 align:start position:0%
how often any one of these combinations
occurs<00:09:38.880><c> in</c><00:09:39.040><c> the</c><00:09:39.120><c> training</c><00:09:39.440><c> set</c>

00:09:40.230 --> 00:09:40.240 align:start position:0%
occurs in the training set
 

00:09:40.240 --> 00:09:41.750 align:start position:0%
occurs in the training set
in<00:09:40.640><c> these</c><00:09:40.880><c> words</c>

00:09:41.750 --> 00:09:41.760 align:start position:0%
in these words
 

00:09:41.760 --> 00:09:43.110 align:start position:0%
in these words
so<00:09:42.160><c> we're</c><00:09:42.320><c> going</c><00:09:42.480><c> to</c><00:09:42.560><c> need</c><00:09:42.720><c> some</c><00:09:42.880><c> kind</c><00:09:42.959><c> of</c><00:09:43.040><c> a</c>

00:09:43.110 --> 00:09:43.120 align:start position:0%
so we're going to need some kind of a
 

00:09:43.120 --> 00:09:44.870 align:start position:0%
so we're going to need some kind of a
dictionary<00:09:43.600><c> that's</c><00:09:43.760><c> going</c><00:09:43.920><c> to</c><00:09:44.000><c> maintain</c><00:09:44.560><c> some</c>

00:09:44.870 --> 00:09:44.880 align:start position:0%
dictionary that's going to maintain some
 

00:09:44.880 --> 00:09:47.269 align:start position:0%
dictionary that's going to maintain some
counts<00:09:45.519><c> for</c><00:09:45.680><c> every</c><00:09:45.839><c> one</c><00:09:46.000><c> of</c><00:09:46.080><c> these</c><00:09:46.320><c> diagrams</c>

00:09:47.269 --> 00:09:47.279 align:start position:0%
counts for every one of these diagrams
 

00:09:47.279 --> 00:09:49.750 align:start position:0%
counts for every one of these diagrams
so<00:09:47.440><c> let's</c><00:09:47.760><c> use</c><00:09:47.920><c> a</c><00:09:48.000><c> dictionary</c><00:09:48.560><c> b</c>

00:09:49.750 --> 00:09:49.760 align:start position:0%
so let's use a dictionary b
 

00:09:49.760 --> 00:09:52.870 align:start position:0%
so let's use a dictionary b
and<00:09:50.080><c> this</c><00:09:50.320><c> will</c><00:09:50.959><c> map</c><00:09:51.519><c> these</c><00:09:51.760><c> bi-grams</c><00:09:52.640><c> so</c>

00:09:52.870 --> 00:09:52.880 align:start position:0%
and this will map these bi-grams so
 

00:09:52.880 --> 00:09:54.470 align:start position:0%
and this will map these bi-grams so
bi-gram<00:09:53.360><c> is</c><00:09:53.440><c> a</c><00:09:53.519><c> tuple</c><00:09:53.839><c> of</c><00:09:53.920><c> character</c><00:09:54.320><c> one</c>

00:09:54.470 --> 00:09:54.480 align:start position:0%
bi-gram is a tuple of character one
 

00:09:54.480 --> 00:09:56.150 align:start position:0%
bi-gram is a tuple of character one
character<00:09:54.800><c> two</c>

00:09:56.150 --> 00:09:56.160 align:start position:0%
character two
 

00:09:56.160 --> 00:09:58.710 align:start position:0%
character two
and<00:09:56.320><c> then</c><00:09:56.720><c> b</c><00:09:56.959><c> at</c><00:09:57.120><c> bi-gram</c>

00:09:58.710 --> 00:09:58.720 align:start position:0%
and then b at bi-gram
 

00:09:58.720 --> 00:10:01.030 align:start position:0%
and then b at bi-gram
will<00:09:58.880><c> be</c><00:09:59.120><c> b</c><00:09:59.279><c> dot</c><00:09:59.519><c> get</c><00:09:59.760><c> of</c><00:09:59.920><c> bi-gram</c>

00:10:01.030 --> 00:10:01.040 align:start position:0%
will be b dot get of bi-gram
 

00:10:01.040 --> 00:10:03.190 align:start position:0%
will be b dot get of bi-gram
which<00:10:01.279><c> is</c><00:10:01.360><c> basically</c><00:10:01.839><c> the</c><00:10:02.000><c> same</c><00:10:02.240><c> as</c><00:10:02.560><c> b</c><00:10:02.880><c> at</c>

00:10:03.190 --> 00:10:03.200 align:start position:0%
which is basically the same as b at
 

00:10:03.200 --> 00:10:04.630 align:start position:0%
which is basically the same as b at
bigram

00:10:04.630 --> 00:10:04.640 align:start position:0%
bigram
 

00:10:04.640 --> 00:10:07.030 align:start position:0%
bigram
but<00:10:04.959><c> in</c><00:10:05.040><c> the</c><00:10:05.200><c> case</c><00:10:05.440><c> that</c><00:10:05.680><c> bigram</c><00:10:06.240><c> is</c><00:10:06.480><c> not</c><00:10:06.880><c> in</c>

00:10:07.030 --> 00:10:07.040 align:start position:0%
but in the case that bigram is not in
 

00:10:07.040 --> 00:10:09.350 align:start position:0%
but in the case that bigram is not in
the<00:10:07.519><c> dictionary</c><00:10:08.000><c> b</c><00:10:08.480><c> we</c><00:10:08.640><c> would</c><00:10:08.800><c> like</c><00:10:08.959><c> to</c><00:10:09.200><c> by</c>

00:10:09.350 --> 00:10:09.360 align:start position:0%
the dictionary b we would like to by
 

00:10:09.360 --> 00:10:11.829 align:start position:0%
the dictionary b we would like to by
default<00:10:09.760><c> return</c><00:10:10.079><c> to</c><00:10:10.240><c> zero</c>

00:10:11.829 --> 00:10:11.839 align:start position:0%
default return to zero
 

00:10:11.839 --> 00:10:13.030 align:start position:0%
default return to zero
plus<00:10:12.079><c> one</c>

00:10:13.030 --> 00:10:13.040 align:start position:0%
plus one
 

00:10:13.040 --> 00:10:15.509 align:start position:0%
plus one
so<00:10:13.200><c> this</c><00:10:13.440><c> will</c><00:10:13.600><c> basically</c><00:10:14.320><c> add</c><00:10:14.640><c> up</c><00:10:15.200><c> all</c><00:10:15.360><c> the</c>

00:10:15.509 --> 00:10:15.519 align:start position:0%
so this will basically add up all the
 

00:10:15.519 --> 00:10:18.230 align:start position:0%
so this will basically add up all the
bigrams<00:10:16.160><c> and</c><00:10:16.320><c> count</c><00:10:16.560><c> how</c><00:10:16.800><c> often</c><00:10:17.040><c> they</c><00:10:17.200><c> occur</c>

00:10:18.230 --> 00:10:18.240 align:start position:0%
bigrams and count how often they occur
 

00:10:18.240 --> 00:10:20.230 align:start position:0%
bigrams and count how often they occur
let's<00:10:18.399><c> get</c><00:10:18.560><c> rid</c><00:10:18.720><c> of</c><00:10:18.880><c> printing</c>

00:10:20.230 --> 00:10:20.240 align:start position:0%
let's get rid of printing
 

00:10:20.240 --> 00:10:22.389 align:start position:0%
let's get rid of printing
or<00:10:20.399><c> rather</c>

00:10:22.389 --> 00:10:22.399 align:start position:0%
or rather
 

00:10:22.399 --> 00:10:23.990 align:start position:0%
or rather
let's<00:10:22.640><c> keep</c><00:10:22.800><c> the</c><00:10:22.959><c> printing</c><00:10:23.360><c> and</c><00:10:23.440><c> let's</c><00:10:23.680><c> just</c>

00:10:23.990 --> 00:10:24.000 align:start position:0%
let's keep the printing and let's just
 

00:10:24.000 --> 00:10:27.110 align:start position:0%
let's keep the printing and let's just
inspect<00:10:24.480><c> what</c><00:10:24.720><c> b</c><00:10:25.040><c> is</c><00:10:25.360><c> in</c><00:10:25.440><c> this</c><00:10:25.600><c> case</c>

00:10:27.110 --> 00:10:27.120 align:start position:0%
inspect what b is in this case
 

00:10:27.120 --> 00:10:29.269 align:start position:0%
inspect what b is in this case
and<00:10:27.279><c> we</c><00:10:27.440><c> see</c><00:10:27.600><c> that</c><00:10:28.079><c> many</c><00:10:28.399><c> bi-grams</c><00:10:28.800><c> occur</c><00:10:29.120><c> just</c>

00:10:29.269 --> 00:10:29.279 align:start position:0%
and we see that many bi-grams occur just
 

00:10:29.279 --> 00:10:31.110 align:start position:0%
and we see that many bi-grams occur just
a<00:10:29.360><c> single</c><00:10:29.680><c> time</c><00:10:30.240><c> this</c><00:10:30.399><c> one</c><00:10:30.640><c> allegedly</c>

00:10:31.110 --> 00:10:31.120 align:start position:0%
a single time this one allegedly
 

00:10:31.120 --> 00:10:32.949 align:start position:0%
a single time this one allegedly
occurred<00:10:31.680><c> three</c><00:10:31.920><c> times</c>

00:10:32.949 --> 00:10:32.959 align:start position:0%
occurred three times
 

00:10:32.959 --> 00:10:35.350 align:start position:0%
occurred three times
so<00:10:33.279><c> a</c><00:10:33.440><c> was</c><00:10:33.600><c> an</c><00:10:33.760><c> ending</c><00:10:34.000><c> character</c><00:10:34.399><c> three</c><00:10:34.560><c> times</c>

00:10:35.350 --> 00:10:35.360 align:start position:0%
so a was an ending character three times
 

00:10:35.360 --> 00:10:37.910 align:start position:0%
so a was an ending character three times
and<00:10:35.600><c> that's</c><00:10:35.920><c> true</c><00:10:36.160><c> for</c><00:10:36.399><c> all</c><00:10:36.560><c> of</c><00:10:36.640><c> these</c><00:10:36.880><c> words</c>

00:10:37.910 --> 00:10:37.920 align:start position:0%
and that's true for all of these words
 

00:10:37.920 --> 00:10:41.910 align:start position:0%
and that's true for all of these words
all<00:10:38.160><c> of</c><00:10:38.240><c> emma</c><00:10:38.640><c> olivia</c><00:10:39.120><c> and</c><00:10:39.360><c> eva</c><00:10:39.839><c> and</c><00:10:40.000><c> with</c><00:10:40.320><c> a</c>

00:10:41.910 --> 00:10:41.920 align:start position:0%
all of emma olivia and eva and with a
 

00:10:41.920 --> 00:10:46.630 align:start position:0%
all of emma olivia and eva and with a
so<00:10:42.079><c> that's</c><00:10:42.320><c> why</c><00:10:42.640><c> this</c><00:10:43.040><c> occurred</c><00:10:43.440><c> three</c><00:10:43.600><c> times</c>

00:10:46.630 --> 00:10:46.640 align:start position:0%
 
 

00:10:46.640 --> 00:10:51.269 align:start position:0%
 
now<00:10:46.880><c> let's</c><00:10:47.120><c> do</c><00:10:47.279><c> it</c><00:10:47.519><c> for</c><00:10:47.839><c> all</c><00:10:48.000><c> the</c><00:10:48.160><c> words</c>

00:10:51.269 --> 00:10:51.279 align:start position:0%
 
 

00:10:51.279 --> 00:10:55.030 align:start position:0%
 
oops<00:10:52.000><c> i</c><00:10:52.320><c> should</c><00:10:52.560><c> not</c><00:10:52.720><c> have</c><00:10:52.880><c> printed</c>

00:10:55.030 --> 00:10:55.040 align:start position:0%
oops i should not have printed
 

00:10:55.040 --> 00:10:56.710 align:start position:0%
oops i should not have printed
i'm<00:10:55.200><c> going</c><00:10:55.360><c> to</c><00:10:55.519><c> erase</c><00:10:55.839><c> that</c>

00:10:56.710 --> 00:10:56.720 align:start position:0%
i'm going to erase that
 

00:10:56.720 --> 00:10:58.710 align:start position:0%
i'm going to erase that
let's<00:10:57.200><c> kill</c><00:10:57.440><c> this</c>

00:10:58.710 --> 00:10:58.720 align:start position:0%
let's kill this
 

00:10:58.720 --> 00:11:00.550 align:start position:0%
let's kill this
let's<00:10:58.959><c> just</c><00:10:59.600><c> run</c>

00:11:00.550 --> 00:11:00.560 align:start position:0%
let's just run
 

00:11:00.560 --> 00:11:02.310 align:start position:0%
let's just run
and<00:11:00.720><c> now</c><00:11:01.040><c> b</c><00:11:01.279><c> will</c><00:11:01.440><c> have</c><00:11:01.600><c> the</c><00:11:01.760><c> statistics</c><00:11:02.240><c> of</c>

00:11:02.310 --> 00:11:02.320 align:start position:0%
and now b will have the statistics of
 

00:11:02.320 --> 00:11:04.069 align:start position:0%
and now b will have the statistics of
the<00:11:02.399><c> entire</c><00:11:02.720><c> data</c><00:11:02.959><c> set</c>

00:11:04.069 --> 00:11:04.079 align:start position:0%
the entire data set
 

00:11:04.079 --> 00:11:05.829 align:start position:0%
the entire data set
so<00:11:04.240><c> these</c><00:11:04.399><c> are</c><00:11:04.560><c> the</c><00:11:04.720><c> counts</c><00:11:05.200><c> across</c><00:11:05.600><c> all</c><00:11:05.680><c> the</c>

00:11:05.829 --> 00:11:05.839 align:start position:0%
so these are the counts across all the
 

00:11:05.839 --> 00:11:08.310 align:start position:0%
so these are the counts across all the
words<00:11:06.240><c> of</c><00:11:06.320><c> the</c><00:11:06.480><c> individual</c><00:11:06.959><c> pie</c><00:11:07.200><c> grams</c>

00:11:08.310 --> 00:11:08.320 align:start position:0%
words of the individual pie grams
 

00:11:08.320 --> 00:11:09.910 align:start position:0%
words of the individual pie grams
and<00:11:08.640><c> we</c><00:11:08.800><c> could</c><00:11:09.040><c> for</c><00:11:09.200><c> example</c><00:11:09.440><c> look</c><00:11:09.680><c> at</c><00:11:09.760><c> some</c><00:11:09.839><c> of</c>

00:11:09.910 --> 00:11:09.920 align:start position:0%
and we could for example look at some of
 

00:11:09.920 --> 00:11:11.509 align:start position:0%
and we could for example look at some of
the<00:11:10.000><c> most</c><00:11:10.240><c> common</c><00:11:10.560><c> ones</c><00:11:10.800><c> and</c><00:11:10.959><c> least</c><00:11:11.200><c> common</c>

00:11:11.509 --> 00:11:11.519 align:start position:0%
the most common ones and least common
 

00:11:11.519 --> 00:11:13.350 align:start position:0%
the most common ones and least common
ones

00:11:13.350 --> 00:11:13.360 align:start position:0%
ones
 

00:11:13.360 --> 00:11:15.030 align:start position:0%
ones
this<00:11:13.519><c> kind</c><00:11:13.680><c> of</c><00:11:13.839><c> grows</c><00:11:14.079><c> in</c><00:11:14.320><c> python</c><00:11:14.640><c> but</c><00:11:14.800><c> the</c><00:11:14.880><c> way</c>

00:11:15.030 --> 00:11:15.040 align:start position:0%
this kind of grows in python but the way
 

00:11:15.040 --> 00:11:17.430 align:start position:0%
this kind of grows in python but the way
to<00:11:15.200><c> do</c><00:11:15.360><c> this</c><00:11:15.839><c> the</c><00:11:16.000><c> simplest</c><00:11:16.399><c> way</c><00:11:16.560><c> i</c><00:11:16.720><c> like</c><00:11:17.120><c> is</c><00:11:17.279><c> we</c>

00:11:17.430 --> 00:11:17.440 align:start position:0%
to do this the simplest way i like is we
 

00:11:17.440 --> 00:11:19.509 align:start position:0%
to do this the simplest way i like is we
just<00:11:17.839><c> use</c><00:11:18.079><c> b</c><00:11:18.240><c> dot</c><00:11:18.480><c> items</c>

00:11:19.509 --> 00:11:19.519 align:start position:0%
just use b dot items
 

00:11:19.519 --> 00:11:21.750 align:start position:0%
just use b dot items
b<00:11:19.680><c> dot</c><00:11:19.920><c> items</c><00:11:20.320><c> returns</c>

00:11:21.750 --> 00:11:21.760 align:start position:0%
b dot items returns
 

00:11:21.760 --> 00:11:24.310 align:start position:0%
b dot items returns
the<00:11:21.920><c> tuples</c><00:11:22.800><c> of</c>

00:11:24.310 --> 00:11:24.320 align:start position:0%
the tuples of
 

00:11:24.320 --> 00:11:27.030 align:start position:0%
the tuples of
key<00:11:24.640><c> value</c><00:11:25.200><c> in</c><00:11:25.440><c> this</c><00:11:25.600><c> case</c><00:11:25.760><c> the</c><00:11:25.920><c> keys</c><00:11:26.320><c> are</c>

00:11:27.030 --> 00:11:27.040 align:start position:0%
key value in this case the keys are
 

00:11:27.040 --> 00:11:29.190 align:start position:0%
key value in this case the keys are
the<00:11:27.360><c> character</c><00:11:27.680><c> diagrams</c><00:11:28.399><c> and</c><00:11:28.560><c> the</c><00:11:28.640><c> values</c>

00:11:29.190 --> 00:11:29.200 align:start position:0%
the character diagrams and the values
 

00:11:29.200 --> 00:11:30.870 align:start position:0%
the character diagrams and the values
are<00:11:29.519><c> the</c><00:11:29.680><c> counts</c>

00:11:30.870 --> 00:11:30.880 align:start position:0%
are the counts
 

00:11:30.880 --> 00:11:32.389 align:start position:0%
are the counts
and<00:11:31.040><c> so</c><00:11:31.200><c> then</c><00:11:31.360><c> what</c><00:11:31.519><c> we</c><00:11:31.600><c> want</c><00:11:31.760><c> to</c><00:11:31.839><c> do</c><00:11:32.079><c> is</c><00:11:32.240><c> we</c>

00:11:32.389 --> 00:11:32.399 align:start position:0%
and so then what we want to do is we
 

00:11:32.399 --> 00:11:35.670 align:start position:0%
and so then what we want to do is we
want<00:11:32.560><c> to</c><00:11:32.640><c> do</c>

00:11:35.670 --> 00:11:35.680 align:start position:0%
 
 

00:11:35.680 --> 00:11:38.389 align:start position:0%
 
sorted<00:11:36.240><c> of</c><00:11:36.399><c> this</c>

00:11:38.389 --> 00:11:38.399 align:start position:0%
sorted of this
 

00:11:38.399 --> 00:11:43.509 align:start position:0%
sorted of this
but<00:11:38.560><c> by</c><00:11:38.720><c> default</c><00:11:39.200><c> sort</c><00:11:39.519><c> is</c><00:11:39.680><c> on</c><00:11:39.839><c> the</c><00:11:40.000><c> first</c>

00:11:43.509 --> 00:11:43.519 align:start position:0%
 
 

00:11:43.519 --> 00:11:45.910 align:start position:0%
 
on<00:11:43.680><c> the</c><00:11:43.839><c> first</c><00:11:44.240><c> item</c><00:11:44.640><c> of</c><00:11:44.800><c> a</c><00:11:44.959><c> tuple</c><00:11:45.440><c> but</c><00:11:45.680><c> we</c><00:11:45.760><c> want</c>

00:11:45.910 --> 00:11:45.920 align:start position:0%
on the first item of a tuple but we want
 

00:11:45.920 --> 00:11:47.509 align:start position:0%
on the first item of a tuple but we want
to<00:11:46.000><c> sort</c><00:11:46.240><c> by</c><00:11:46.399><c> the</c><00:11:46.560><c> values</c><00:11:46.959><c> which</c><00:11:47.120><c> are</c><00:11:47.279><c> the</c>

00:11:47.509 --> 00:11:47.519 align:start position:0%
to sort by the values which are the
 

00:11:47.519 --> 00:11:49.269 align:start position:0%
to sort by the values which are the
second<00:11:47.920><c> element</c><00:11:48.240><c> of</c><00:11:48.399><c> a</c><00:11:48.480><c> tuple</c><00:11:48.880><c> that</c><00:11:49.040><c> is</c><00:11:49.120><c> the</c>

00:11:49.269 --> 00:11:49.279 align:start position:0%
second element of a tuple that is the
 

00:11:49.279 --> 00:11:50.629 align:start position:0%
second element of a tuple that is the
key<00:11:49.519><c> value</c>

00:11:50.629 --> 00:11:50.639 align:start position:0%
key value
 

00:11:50.639 --> 00:11:52.949 align:start position:0%
key value
so<00:11:50.880><c> we</c><00:11:51.040><c> want</c><00:11:51.360><c> to</c><00:11:51.519><c> use</c><00:11:51.680><c> the</c><00:11:51.839><c> key</c>

00:11:52.949 --> 00:11:52.959 align:start position:0%
so we want to use the key
 

00:11:52.959 --> 00:11:55.269 align:start position:0%
so we want to use the key
equals<00:11:53.440><c> lambda</c>

00:11:55.269 --> 00:11:55.279 align:start position:0%
equals lambda
 

00:11:55.279 --> 00:11:57.590 align:start position:0%
equals lambda
that<00:11:55.440><c> takes</c><00:11:55.680><c> the</c><00:11:55.920><c> key</c><00:11:56.079><c> value</c>

00:11:57.590 --> 00:11:57.600 align:start position:0%
that takes the key value
 

00:11:57.600 --> 00:11:58.870 align:start position:0%
that takes the key value
and<00:11:57.839><c> returns</c>

00:11:58.870 --> 00:11:58.880 align:start position:0%
and returns
 

00:11:58.880 --> 00:12:02.230 align:start position:0%
and returns
the<00:11:59.440><c> key</c><00:11:59.680><c> value</c><00:12:00.079><c> at</c><00:12:00.480><c> the</c><00:12:01.040><c> one</c><00:12:01.519><c> not</c><00:12:01.760><c> at</c><00:12:01.839><c> zero</c><00:12:02.079><c> but</c>

00:12:02.230 --> 00:12:02.240 align:start position:0%
the key value at the one not at zero but
 

00:12:02.240 --> 00:12:04.550 align:start position:0%
the key value at the one not at zero but
at<00:12:02.399><c> one</c><00:12:02.720><c> which</c><00:12:02.959><c> is</c><00:12:03.040><c> the</c><00:12:03.279><c> count</c><00:12:03.920><c> so</c><00:12:04.079><c> we</c><00:12:04.160><c> want</c><00:12:04.320><c> to</c>

00:12:04.550 --> 00:12:04.560 align:start position:0%
at one which is the count so we want to
 

00:12:04.560 --> 00:12:07.110 align:start position:0%
at one which is the count so we want to
sort<00:12:05.040><c> by</c><00:12:05.200><c> the</c><00:12:05.440><c> count</c>

00:12:07.110 --> 00:12:07.120 align:start position:0%
sort by the count
 

00:12:07.120 --> 00:12:10.389 align:start position:0%
sort by the count
of<00:12:07.600><c> these</c><00:12:08.000><c> elements</c>

00:12:10.389 --> 00:12:10.399 align:start position:0%
of these elements
 

00:12:10.399 --> 00:12:12.629 align:start position:0%
of these elements
and<00:12:10.639><c> actually</c><00:12:10.959><c> we</c><00:12:11.040><c> wanted</c><00:12:11.279><c> to</c><00:12:11.360><c> go</c><00:12:11.519><c> backwards</c>

00:12:12.629 --> 00:12:12.639 align:start position:0%
and actually we wanted to go backwards
 

00:12:12.639 --> 00:12:14.629 align:start position:0%
and actually we wanted to go backwards
so<00:12:13.200><c> here</c><00:12:13.519><c> we</c><00:12:13.600><c> have</c><00:12:13.920><c> is</c>

00:12:14.629 --> 00:12:14.639 align:start position:0%
so here we have is
 

00:12:14.639 --> 00:12:17.190 align:start position:0%
so here we have is
the<00:12:14.800><c> bi-gram</c><00:12:15.279><c> q</c><00:12:15.519><c> and</c><00:12:15.680><c> r</c><00:12:16.160><c> occurs</c><00:12:16.480><c> only</c><00:12:16.720><c> a</c><00:12:16.880><c> single</c>

00:12:17.190 --> 00:12:17.200 align:start position:0%
the bi-gram q and r occurs only a single
 

00:12:17.200 --> 00:12:18.389 align:start position:0%
the bi-gram q and r occurs only a single
time

00:12:18.389 --> 00:12:18.399 align:start position:0%
time
 

00:12:18.399 --> 00:12:20.629 align:start position:0%
time
dz<00:12:18.800><c> occurred</c><00:12:19.200><c> only</c><00:12:19.440><c> a</c><00:12:19.519><c> single</c><00:12:19.839><c> time</c>

00:12:20.629 --> 00:12:20.639 align:start position:0%
dz occurred only a single time
 

00:12:20.639 --> 00:12:21.829 align:start position:0%
dz occurred only a single time
and<00:12:20.720><c> when</c><00:12:20.959><c> we</c><00:12:21.040><c> sort</c><00:12:21.279><c> this</c><00:12:21.440><c> the</c><00:12:21.519><c> other</c><00:12:21.680><c> way</c>

00:12:21.829 --> 00:12:21.839 align:start position:0%
and when we sort this the other way
 

00:12:21.839 --> 00:12:23.350 align:start position:0%
and when we sort this the other way
around

00:12:23.350 --> 00:12:23.360 align:start position:0%
around
 

00:12:23.360 --> 00:12:25.269 align:start position:0%
around
we're<00:12:23.519><c> going</c><00:12:23.680><c> to</c><00:12:23.760><c> see</c><00:12:24.000><c> the</c><00:12:24.079><c> most</c><00:12:24.480><c> likely</c>

00:12:25.269 --> 00:12:25.279 align:start position:0%
we're going to see the most likely
 

00:12:25.279 --> 00:12:28.310 align:start position:0%
we're going to see the most likely
bigrams<00:12:26.240><c> so</c><00:12:26.399><c> we</c><00:12:26.560><c> see</c><00:12:26.720><c> that</c><00:12:27.040><c> n</c><00:12:27.519><c> was</c>

00:12:28.310 --> 00:12:28.320 align:start position:0%
bigrams so we see that n was
 

00:12:28.320 --> 00:12:30.629 align:start position:0%
bigrams so we see that n was
very<00:12:28.639><c> often</c><00:12:29.200><c> an</c><00:12:29.440><c> ending</c><00:12:29.680><c> character</c>

00:12:30.629 --> 00:12:30.639 align:start position:0%
very often an ending character
 

00:12:30.639 --> 00:12:32.949 align:start position:0%
very often an ending character
many<00:12:30.880><c> many</c><00:12:31.120><c> times</c><00:12:31.680><c> and</c><00:12:31.839><c> apparently</c><00:12:32.399><c> n</c><00:12:32.639><c> almost</c>

00:12:32.949 --> 00:12:32.959 align:start position:0%
many many times and apparently n almost
 

00:12:32.959 --> 00:12:34.389 align:start position:0%
many many times and apparently n almost
always<00:12:33.200><c> follows</c><00:12:33.519><c> an</c><00:12:33.680><c> a</c>

00:12:34.389 --> 00:12:34.399 align:start position:0%
always follows an a
 

00:12:34.399 --> 00:12:36.150 align:start position:0%
always follows an a
and<00:12:34.480><c> that's</c><00:12:34.720><c> a</c><00:12:34.800><c> very</c><00:12:34.959><c> likely</c><00:12:35.519><c> combination</c><00:12:36.000><c> as</c>

00:12:36.150 --> 00:12:36.160 align:start position:0%
and that's a very likely combination as
 

00:12:36.160 --> 00:12:38.629 align:start position:0%
and that's a very likely combination as
well

00:12:38.629 --> 00:12:38.639 align:start position:0%
well
 

00:12:38.639 --> 00:12:39.829 align:start position:0%
well
so

00:12:39.829 --> 00:12:39.839 align:start position:0%
so
 

00:12:39.839 --> 00:12:41.910 align:start position:0%
so
this<00:12:40.079><c> is</c><00:12:40.240><c> kind</c><00:12:40.399><c> of</c><00:12:40.480><c> the</c><00:12:40.800><c> individual</c><00:12:41.440><c> counts</c>

00:12:41.910 --> 00:12:41.920 align:start position:0%
this is kind of the individual counts
 

00:12:41.920 --> 00:12:44.870 align:start position:0%
this is kind of the individual counts
that<00:12:42.079><c> we</c><00:12:42.240><c> achieve</c><00:12:42.560><c> over</c><00:12:42.800><c> the</c><00:12:42.880><c> entire</c><00:12:43.120><c> data</c><00:12:43.360><c> set</c>

00:12:44.870 --> 00:12:44.880 align:start position:0%
that we achieve over the entire data set
 

00:12:44.880 --> 00:12:46.069 align:start position:0%
that we achieve over the entire data set
now<00:12:45.120><c> it's</c><00:12:45.360><c> actually</c><00:12:45.600><c> going</c><00:12:45.760><c> to</c><00:12:45.920><c> be</c>

00:12:46.069 --> 00:12:46.079 align:start position:0%
now it's actually going to be
 

00:12:46.079 --> 00:12:48.310 align:start position:0%
now it's actually going to be
significantly<00:12:46.720><c> more</c><00:12:46.880><c> convenient</c><00:12:47.360><c> for</c><00:12:47.519><c> us</c><00:12:47.680><c> to</c>

00:12:48.310 --> 00:12:48.320 align:start position:0%
significantly more convenient for us to
 

00:12:48.320 --> 00:12:49.750 align:start position:0%
significantly more convenient for us to
keep<00:12:48.639><c> this</c><00:12:48.880><c> information</c><00:12:49.440><c> in</c><00:12:49.600><c> a</c>

00:12:49.750 --> 00:12:49.760 align:start position:0%
keep this information in a
 

00:12:49.760 --> 00:12:51.670 align:start position:0%
keep this information in a
two-dimensional<00:12:50.399><c> array</c><00:12:50.880><c> instead</c><00:12:51.200><c> of</c><00:12:51.440><c> a</c>

00:12:51.670 --> 00:12:51.680 align:start position:0%
two-dimensional array instead of a
 

00:12:51.680 --> 00:12:53.590 align:start position:0%
two-dimensional array instead of a
python<00:12:52.160><c> dictionary</c>

00:12:53.590 --> 00:12:53.600 align:start position:0%
python dictionary
 

00:12:53.600 --> 00:12:54.470 align:start position:0%
python dictionary
so

00:12:54.470 --> 00:12:54.480 align:start position:0%
so
 

00:12:54.480 --> 00:12:56.710 align:start position:0%
so
we're<00:12:54.639><c> going</c><00:12:54.880><c> to</c><00:12:55.040><c> store</c><00:12:55.440><c> this</c><00:12:55.680><c> information</c>

00:12:56.710 --> 00:12:56.720 align:start position:0%
we're going to store this information
 

00:12:56.720 --> 00:12:58.470 align:start position:0%
we're going to store this information
in<00:12:57.040><c> a</c><00:12:57.200><c> 2d</c><00:12:57.519><c> array</c>

00:12:58.470 --> 00:12:58.480 align:start position:0%
in a 2d array
 

00:12:58.480 --> 00:12:59.990 align:start position:0%
in a 2d array
and

00:12:59.990 --> 00:13:00.000 align:start position:0%
and
 

00:13:00.000 --> 00:13:01.430 align:start position:0%
and
the<00:13:00.240><c> rows</c><00:13:00.560><c> are</c><00:13:00.720><c> going</c><00:13:00.800><c> to</c><00:13:00.959><c> be</c><00:13:01.040><c> the</c><00:13:01.200><c> first</c>

00:13:01.430 --> 00:13:01.440 align:start position:0%
the rows are going to be the first
 

00:13:01.440 --> 00:13:03.430 align:start position:0%
the rows are going to be the first
character<00:13:02.000><c> of</c><00:13:02.079><c> the</c><00:13:02.240><c> bigram</c><00:13:02.800><c> and</c><00:13:02.959><c> the</c><00:13:03.040><c> columns</c>

00:13:03.430 --> 00:13:03.440 align:start position:0%
character of the bigram and the columns
 

00:13:03.440 --> 00:13:05.269 align:start position:0%
character of the bigram and the columns
are<00:13:03.519><c> going</c><00:13:03.680><c> to</c><00:13:03.760><c> be</c><00:13:03.920><c> the</c><00:13:04.000><c> second</c><00:13:04.320><c> character</c><00:13:05.040><c> and</c>

00:13:05.269 --> 00:13:05.279 align:start position:0%
are going to be the second character and
 

00:13:05.279 --> 00:13:06.870 align:start position:0%
are going to be the second character and
each<00:13:05.519><c> entry</c><00:13:05.839><c> in</c><00:13:05.920><c> this</c><00:13:06.000><c> two-dimensional</c><00:13:06.560><c> array</c>

00:13:06.870 --> 00:13:06.880 align:start position:0%
each entry in this two-dimensional array
 

00:13:06.880 --> 00:13:08.870 align:start position:0%
each entry in this two-dimensional array
will<00:13:07.040><c> tell</c><00:13:07.200><c> us</c><00:13:07.600><c> how</c><00:13:07.920><c> often</c><00:13:08.399><c> that</c><00:13:08.639><c> first</c>

00:13:08.870 --> 00:13:08.880 align:start position:0%
will tell us how often that first
 

00:13:08.880 --> 00:13:11.269 align:start position:0%
will tell us how often that first
character<00:13:09.200><c> files</c><00:13:09.440><c> the</c><00:13:09.519><c> second</c><00:13:09.839><c> character</c><00:13:10.560><c> in</c>

00:13:11.269 --> 00:13:11.279 align:start position:0%
character files the second character in
 

00:13:11.279 --> 00:13:12.629 align:start position:0%
character files the second character in
the<00:13:11.440><c> data</c><00:13:11.680><c> set</c>

00:13:12.629 --> 00:13:12.639 align:start position:0%
the data set
 

00:13:12.639 --> 00:13:14.629 align:start position:0%
the data set
so<00:13:12.800><c> in</c><00:13:12.959><c> particular</c><00:13:13.440><c> the</c><00:13:14.079><c> array</c>

00:13:14.629 --> 00:13:14.639 align:start position:0%
so in particular the array
 

00:13:14.639 --> 00:13:16.069 align:start position:0%
so in particular the array
representation<00:13:15.200><c> that</c><00:13:15.360><c> we're</c><00:13:15.440><c> going</c><00:13:15.600><c> to</c><00:13:15.760><c> use</c>

00:13:16.069 --> 00:13:16.079 align:start position:0%
representation that we're going to use
 

00:13:16.079 --> 00:13:18.790 align:start position:0%
representation that we're going to use
or<00:13:16.240><c> the</c><00:13:16.399><c> library</c><00:13:17.120><c> is</c><00:13:17.279><c> that</c><00:13:17.519><c> of</c><00:13:17.680><c> pytorch</c>

00:13:18.790 --> 00:13:18.800 align:start position:0%
or the library is that of pytorch
 

00:13:18.800 --> 00:13:20.230 align:start position:0%
or the library is that of pytorch
and<00:13:18.959><c> pytorch</c><00:13:19.360><c> is</c><00:13:19.440><c> a</c><00:13:19.519><c> deep</c>

00:13:20.230 --> 00:13:20.240 align:start position:0%
and pytorch is a deep
 

00:13:20.240 --> 00:13:22.389 align:start position:0%
and pytorch is a deep
learning<00:13:20.720><c> neural</c><00:13:20.959><c> network</c><00:13:21.279><c> framework</c><00:13:22.160><c> but</c>

00:13:22.389 --> 00:13:22.399 align:start position:0%
learning neural network framework but
 

00:13:22.399 --> 00:13:25.190 align:start position:0%
learning neural network framework but
part<00:13:22.639><c> of</c><00:13:22.800><c> it</c><00:13:23.040><c> is</c><00:13:23.200><c> also</c><00:13:23.440><c> this</c><00:13:23.680><c> torch.tensor</c>

00:13:25.190 --> 00:13:25.200 align:start position:0%
part of it is also this torch.tensor
 

00:13:25.200 --> 00:13:26.150 align:start position:0%
part of it is also this torch.tensor
which<00:13:25.360><c> allows</c><00:13:25.680><c> us</c><00:13:25.839><c> to</c><00:13:25.920><c> create</c>

00:13:26.150 --> 00:13:26.160 align:start position:0%
which allows us to create
 

00:13:26.160 --> 00:13:27.990 align:start position:0%
which allows us to create
multi-dimensional<00:13:26.959><c> arrays</c><00:13:27.360><c> and</c><00:13:27.519><c> manipulate</c>

00:13:27.990 --> 00:13:28.000 align:start position:0%
multi-dimensional arrays and manipulate
 

00:13:28.000 --> 00:13:29.750 align:start position:0%
multi-dimensional arrays and manipulate
them<00:13:28.160><c> very</c><00:13:28.320><c> efficiently</c>

00:13:29.750 --> 00:13:29.760 align:start position:0%
them very efficiently
 

00:13:29.760 --> 00:13:30.710 align:start position:0%
them very efficiently
so

00:13:30.710 --> 00:13:30.720 align:start position:0%
so
 

00:13:30.720 --> 00:13:32.710 align:start position:0%
so
let's<00:13:31.040><c> import</c><00:13:31.360><c> pytorch</c><00:13:32.000><c> which</c><00:13:32.240><c> you</c><00:13:32.320><c> can</c><00:13:32.399><c> do</c><00:13:32.560><c> by</c>

00:13:32.710 --> 00:13:32.720 align:start position:0%
let's import pytorch which you can do by
 

00:13:32.720 --> 00:13:34.710 align:start position:0%
let's import pytorch which you can do by
import<00:13:33.040><c> torch</c>

00:13:34.710 --> 00:13:34.720 align:start position:0%
import torch
 

00:13:34.720 --> 00:13:36.310 align:start position:0%
import torch
and<00:13:34.800><c> then</c><00:13:34.959><c> we</c><00:13:35.120><c> can</c><00:13:35.279><c> create</c>

00:13:36.310 --> 00:13:36.320 align:start position:0%
and then we can create
 

00:13:36.320 --> 00:13:37.430 align:start position:0%
and then we can create
arrays

00:13:37.430 --> 00:13:37.440 align:start position:0%
arrays
 

00:13:37.440 --> 00:13:40.629 align:start position:0%
arrays
so<00:13:37.600><c> let's</c><00:13:37.839><c> create</c><00:13:38.160><c> a</c><00:13:38.800><c> array</c><00:13:39.199><c> of</c><00:13:39.279><c> zeros</c>

00:13:40.629 --> 00:13:40.639 align:start position:0%
so let's create a array of zeros
 

00:13:40.639 --> 00:13:42.870 align:start position:0%
so let's create a array of zeros
and<00:13:41.120><c> we</c><00:13:41.279><c> give</c><00:13:41.440><c> it</c><00:13:41.680><c> a</c>

00:13:42.870 --> 00:13:42.880 align:start position:0%
and we give it a
 

00:13:42.880 --> 00:13:44.550 align:start position:0%
and we give it a
size<00:13:43.199><c> of</c><00:13:43.279><c> this</c><00:13:43.440><c> array</c><00:13:43.760><c> let's</c><00:13:44.000><c> create</c><00:13:44.240><c> a</c><00:13:44.320><c> three</c>

00:13:44.550 --> 00:13:44.560 align:start position:0%
size of this array let's create a three
 

00:13:44.560 --> 00:13:47.030 align:start position:0%
size of this array let's create a three
by<00:13:44.720><c> five</c><00:13:45.040><c> array</c><00:13:45.440><c> as</c><00:13:45.600><c> an</c><00:13:45.760><c> example</c>

00:13:47.030 --> 00:13:47.040 align:start position:0%
by five array as an example
 

00:13:47.040 --> 00:13:48.550 align:start position:0%
by five array as an example
and

00:13:48.550 --> 00:13:48.560 align:start position:0%
and
 

00:13:48.560 --> 00:13:51.509 align:start position:0%
and
this<00:13:48.800><c> is</c><00:13:48.959><c> a</c><00:13:49.120><c> three</c><00:13:49.279><c> by</c><00:13:49.440><c> five</c><00:13:49.680><c> array</c><00:13:50.079><c> of</c><00:13:50.160><c> zeros</c>

00:13:51.509 --> 00:13:51.519 align:start position:0%
this is a three by five array of zeros
 

00:13:51.519 --> 00:13:53.829 align:start position:0%
this is a three by five array of zeros
and<00:13:51.839><c> by</c><00:13:52.000><c> default</c><00:13:52.399><c> you'll</c><00:13:52.560><c> notice</c><00:13:52.959><c> a.d</c><00:13:53.519><c> type</c>

00:13:53.829 --> 00:13:53.839 align:start position:0%
and by default you'll notice a.d type
 

00:13:53.839 --> 00:13:56.550 align:start position:0%
and by default you'll notice a.d type
which<00:13:54.079><c> is</c><00:13:54.160><c> short</c><00:13:54.399><c> for</c><00:13:54.560><c> data</c><00:13:54.880><c> type</c><00:13:55.519><c> is</c><00:13:55.680><c> float32</c>

00:13:56.550 --> 00:13:56.560 align:start position:0%
which is short for data type is float32
 

00:13:56.560 --> 00:13:58.150 align:start position:0%
which is short for data type is float32
so<00:13:56.720><c> these</c><00:13:56.959><c> are</c><00:13:57.120><c> single</c><00:13:57.360><c> precision</c><00:13:57.760><c> floating</c>

00:13:58.150 --> 00:13:58.160 align:start position:0%
so these are single precision floating
 

00:13:58.160 --> 00:13:59.430 align:start position:0%
so these are single precision floating
point<00:13:58.399><c> numbers</c>

00:13:59.430 --> 00:13:59.440 align:start position:0%
point numbers
 

00:13:59.440 --> 00:14:01.750 align:start position:0%
point numbers
because<00:13:59.680><c> we</c><00:13:59.839><c> are</c><00:14:00.000><c> going</c><00:14:00.160><c> to</c><00:14:00.399><c> represent</c><00:14:00.959><c> counts</c>

00:14:01.750 --> 00:14:01.760 align:start position:0%
because we are going to represent counts
 

00:14:01.760 --> 00:14:04.310 align:start position:0%
because we are going to represent counts
let's<00:14:02.079><c> actually</c><00:14:02.320><c> use</c><00:14:02.639><c> d</c><00:14:02.880><c> type</c><00:14:03.360><c> as</c><00:14:03.680><c> torch</c><00:14:04.000><c> dot</c>

00:14:04.310 --> 00:14:04.320 align:start position:0%
let's actually use d type as torch dot
 

00:14:04.320 --> 00:14:05.990 align:start position:0%
let's actually use d type as torch dot
and<00:14:04.480><c> 32</c>

00:14:05.990 --> 00:14:06.000 align:start position:0%
and 32
 

00:14:06.000 --> 00:14:07.750 align:start position:0%
and 32
so<00:14:06.160><c> these</c><00:14:06.480><c> are</c>

00:14:07.750 --> 00:14:07.760 align:start position:0%
so these are
 

00:14:07.760 --> 00:14:10.069 align:start position:0%
so these are
32-bit<00:14:08.800><c> integers</c>

00:14:10.069 --> 00:14:10.079 align:start position:0%
32-bit integers
 

00:14:10.079 --> 00:14:12.790 align:start position:0%
32-bit integers
so<00:14:10.240><c> now</c><00:14:10.399><c> you</c><00:14:10.560><c> see</c><00:14:10.720><c> that</c><00:14:10.880><c> we</c><00:14:11.040><c> have</c><00:14:11.519><c> integer</c><00:14:12.240><c> data</c>

00:14:12.790 --> 00:14:12.800 align:start position:0%
so now you see that we have integer data
 

00:14:12.800 --> 00:14:14.550 align:start position:0%
so now you see that we have integer data
inside<00:14:13.040><c> this</c><00:14:13.199><c> tensor</c>

00:14:14.550 --> 00:14:14.560 align:start position:0%
inside this tensor
 

00:14:14.560 --> 00:14:17.350 align:start position:0%
inside this tensor
now<00:14:14.800><c> tensors</c><00:14:15.199><c> allow</c><00:14:15.519><c> us</c><00:14:15.600><c> to</c><00:14:15.839><c> really</c>

00:14:17.350 --> 00:14:17.360 align:start position:0%
now tensors allow us to really
 

00:14:17.360 --> 00:14:18.949 align:start position:0%
now tensors allow us to really
manipulate<00:14:17.920><c> all</c><00:14:18.079><c> the</c><00:14:18.160><c> individual</c><00:14:18.639><c> entries</c>

00:14:18.949 --> 00:14:18.959 align:start position:0%
manipulate all the individual entries
 

00:14:18.959 --> 00:14:20.710 align:start position:0%
manipulate all the individual entries
and<00:14:19.120><c> do</c><00:14:19.199><c> it</c><00:14:19.360><c> very</c><00:14:19.519><c> efficiently</c>

00:14:20.710 --> 00:14:20.720 align:start position:0%
and do it very efficiently
 

00:14:20.720 --> 00:14:22.870 align:start position:0%
and do it very efficiently
so<00:14:20.880><c> for</c><00:14:21.040><c> example</c><00:14:21.360><c> if</c><00:14:21.519><c> we</c><00:14:21.600><c> want</c><00:14:21.760><c> to</c><00:14:22.320><c> change</c><00:14:22.639><c> this</c>

00:14:22.870 --> 00:14:22.880 align:start position:0%
so for example if we want to change this
 

00:14:22.880 --> 00:14:23.670 align:start position:0%
so for example if we want to change this
bit

00:14:23.670 --> 00:14:23.680 align:start position:0%
bit
 

00:14:23.680 --> 00:14:25.910 align:start position:0%
bit
we<00:14:23.839><c> have</c><00:14:23.920><c> to</c><00:14:24.160><c> index</c><00:14:24.480><c> into</c><00:14:24.720><c> the</c><00:14:24.880><c> tensor</c><00:14:25.680><c> and</c><00:14:25.839><c> in</c>

00:14:25.910 --> 00:14:25.920 align:start position:0%
we have to index into the tensor and in
 

00:14:25.920 --> 00:14:29.670 align:start position:0%
we have to index into the tensor and in
particular<00:14:26.880><c> here</c><00:14:27.600><c> this</c><00:14:27.839><c> is</c><00:14:27.920><c> the</c><00:14:28.240><c> first</c><00:14:28.880><c> row</c>

00:14:29.670 --> 00:14:29.680 align:start position:0%
particular here this is the first row
 

00:14:29.680 --> 00:14:31.430 align:start position:0%
particular here this is the first row
and<00:14:29.839><c> the</c>

00:14:31.430 --> 00:14:31.440 align:start position:0%
and the
 

00:14:31.440 --> 00:14:34.150 align:start position:0%
and the
because<00:14:31.680><c> it's</c><00:14:31.920><c> zero</c><00:14:32.240><c> indexed</c><00:14:32.720><c> so</c><00:14:32.880><c> this</c><00:14:33.120><c> is</c><00:14:33.680><c> row</c>

00:14:34.150 --> 00:14:34.160 align:start position:0%
because it's zero indexed so this is row
 

00:14:34.160 --> 00:14:37.829 align:start position:0%
because it's zero indexed so this is row
index<00:14:34.800><c> one</c><00:14:35.519><c> and</c><00:14:35.760><c> column</c><00:14:36.160><c> index</c><00:14:36.720><c> zero</c><00:14:37.120><c> one</c><00:14:37.440><c> two</c>

00:14:37.829 --> 00:14:37.839 align:start position:0%
index one and column index zero one two
 

00:14:37.839 --> 00:14:38.710 align:start position:0%
index one and column index zero one two
three

00:14:38.710 --> 00:14:38.720 align:start position:0%
three
 

00:14:38.720 --> 00:14:41.829 align:start position:0%
three
so<00:14:39.120><c> a</c><00:14:39.440><c> at</c><00:14:39.920><c> one</c><00:14:40.240><c> comma</c><00:14:40.560><c> three</c><00:14:41.199><c> we</c><00:14:41.360><c> can</c><00:14:41.519><c> set</c><00:14:41.680><c> that</c>

00:14:41.829 --> 00:14:41.839 align:start position:0%
so a at one comma three we can set that
 

00:14:41.839 --> 00:14:43.590 align:start position:0%
so a at one comma three we can set that
to<00:14:42.079><c> one</c>

00:14:43.590 --> 00:14:43.600 align:start position:0%
to one
 

00:14:43.600 --> 00:14:47.030 align:start position:0%
to one
and<00:14:43.839><c> then</c><00:14:44.079><c> a</c><00:14:44.639><c> we'll</c><00:14:44.800><c> have</c><00:14:44.959><c> a</c><00:14:45.040><c> 1</c><00:14:45.279><c> over</c><00:14:45.440><c> there</c>

00:14:47.030 --> 00:14:47.040 align:start position:0%
and then a we'll have a 1 over there
 

00:14:47.040 --> 00:14:48.710 align:start position:0%
and then a we'll have a 1 over there
we<00:14:47.199><c> can</c><00:14:47.360><c> of</c><00:14:47.519><c> course</c><00:14:47.760><c> also</c><00:14:48.079><c> do</c><00:14:48.320><c> things</c><00:14:48.560><c> like</c>

00:14:48.710 --> 00:14:48.720 align:start position:0%
we can of course also do things like
 

00:14:48.720 --> 00:14:52.470 align:start position:0%
we can of course also do things like
this<00:14:49.199><c> so</c><00:14:49.360><c> now</c><00:14:49.680><c> a</c><00:14:49.839><c> will</c><00:14:50.079><c> be</c><00:14:50.720><c> 2</c><00:14:51.040><c> over</c><00:14:51.199><c> there</c>

00:14:52.470 --> 00:14:52.480 align:start position:0%
this so now a will be 2 over there
 

00:14:52.480 --> 00:14:53.829 align:start position:0%
this so now a will be 2 over there
or<00:14:52.720><c> 3.</c>

00:14:53.829 --> 00:14:53.839 align:start position:0%
or 3.
 

00:14:53.839 --> 00:14:56.069 align:start position:0%
or 3.
and<00:14:54.000><c> also</c><00:14:54.240><c> we</c><00:14:54.399><c> can</c><00:14:54.480><c> for</c><00:14:54.639><c> example</c><00:14:54.959><c> say</c><00:14:55.199><c> a</c><00:14:55.360><c> 0</c><00:14:55.680><c> 0</c><00:14:55.920><c> is</c>

00:14:56.069 --> 00:14:56.079 align:start position:0%
and also we can for example say a 0 0 is
 

00:14:56.079 --> 00:14:57.189 align:start position:0%
and also we can for example say a 0 0 is
5

00:14:57.189 --> 00:14:57.199 align:start position:0%
5
 

00:14:57.199 --> 00:15:00.069 align:start position:0%
5
and<00:14:57.360><c> then</c><00:14:57.600><c> a</c><00:14:57.839><c> will</c><00:14:58.160><c> have</c><00:14:58.480><c> a</c><00:14:58.639><c> 5</c><00:14:58.959><c> over</c><00:14:59.120><c> here</c>

00:15:00.069 --> 00:15:00.079 align:start position:0%
and then a will have a 5 over here
 

00:15:00.079 --> 00:15:02.230 align:start position:0%
and then a will have a 5 over here
so<00:15:00.560><c> that's</c><00:15:00.800><c> how</c><00:15:00.880><c> we</c><00:15:01.040><c> can</c><00:15:01.199><c> index</c><00:15:01.600><c> into</c><00:15:01.839><c> the</c>

00:15:02.230 --> 00:15:02.240 align:start position:0%
so that's how we can index into the
 

00:15:02.240 --> 00:15:04.310 align:start position:0%
so that's how we can index into the
arrays<00:15:03.199><c> now</c><00:15:03.440><c> of</c><00:15:03.519><c> course</c><00:15:03.680><c> the</c><00:15:03.760><c> array</c><00:15:04.079><c> that</c><00:15:04.160><c> we</c>

00:15:04.310 --> 00:15:04.320 align:start position:0%
arrays now of course the array that we
 

00:15:04.320 --> 00:15:06.470 align:start position:0%
arrays now of course the array that we
are<00:15:04.399><c> interested</c><00:15:04.720><c> in</c><00:15:04.959><c> is</c><00:15:05.040><c> much</c><00:15:05.199><c> much</c><00:15:05.440><c> bigger</c><00:15:06.240><c> so</c>

00:15:06.470 --> 00:15:06.480 align:start position:0%
are interested in is much much bigger so
 

00:15:06.480 --> 00:15:08.790 align:start position:0%
are interested in is much much bigger so
for<00:15:06.720><c> our</c><00:15:06.880><c> purposes</c><00:15:07.360><c> we</c><00:15:07.519><c> have</c><00:15:07.920><c> 26</c><00:15:08.399><c> letters</c><00:15:08.720><c> of</c>

00:15:08.790 --> 00:15:08.800 align:start position:0%
for our purposes we have 26 letters of
 

00:15:08.800 --> 00:15:09.910 align:start position:0%
for our purposes we have 26 letters of
the<00:15:08.880><c> alphabet</c>

00:15:09.910 --> 00:15:09.920 align:start position:0%
the alphabet
 

00:15:09.920 --> 00:15:12.389 align:start position:0%
the alphabet
and<00:15:10.079><c> then</c><00:15:10.240><c> we</c><00:15:10.399><c> have</c><00:15:10.639><c> two</c><00:15:10.800><c> special</c><00:15:11.440><c> characters</c>

00:15:12.389 --> 00:15:12.399 align:start position:0%
and then we have two special characters
 

00:15:12.399 --> 00:15:13.990 align:start position:0%
and then we have two special characters
s<00:15:12.720><c> and</c><00:15:13.040><c> e</c>

00:15:13.990 --> 00:15:14.000 align:start position:0%
s and e
 

00:15:14.000 --> 00:15:18.150 align:start position:0%
s and e
so<00:15:14.560><c> uh</c><00:15:14.959><c> we</c><00:15:15.199><c> want</c><00:15:15.680><c> 26</c><00:15:16.160><c> plus</c><00:15:16.399><c> 2</c><00:15:16.639><c> or</c><00:15:16.800><c> 28</c><00:15:17.279><c> by</c><00:15:17.519><c> 28</c>

00:15:18.150 --> 00:15:18.160 align:start position:0%
so uh we want 26 plus 2 or 28 by 28
 

00:15:18.160 --> 00:15:19.189 align:start position:0%
so uh we want 26 plus 2 or 28 by 28
array

00:15:19.189 --> 00:15:19.199 align:start position:0%
array
 

00:15:19.199 --> 00:15:21.110 align:start position:0%
array
and<00:15:19.360><c> let's</c><00:15:19.600><c> call</c><00:15:19.760><c> it</c><00:15:19.920><c> the</c><00:15:20.000><c> capital</c><00:15:20.560><c> n</c><00:15:20.880><c> because</c>

00:15:21.110 --> 00:15:21.120 align:start position:0%
and let's call it the capital n because
 

00:15:21.120 --> 00:15:22.550 align:start position:0%
and let's call it the capital n because
it's<00:15:21.279><c> going</c><00:15:21.440><c> to</c><00:15:21.519><c> represent</c><00:15:22.079><c> sort</c><00:15:22.240><c> of</c><00:15:22.320><c> the</c>

00:15:22.550 --> 00:15:22.560 align:start position:0%
it's going to represent sort of the
 

00:15:22.560 --> 00:15:24.470 align:start position:0%
it's going to represent sort of the
counts

00:15:24.470 --> 00:15:24.480 align:start position:0%
counts
 

00:15:24.480 --> 00:15:26.710 align:start position:0%
counts
let<00:15:24.639><c> me</c><00:15:24.800><c> erase</c><00:15:25.040><c> this</c><00:15:25.199><c> stuff</c>

00:15:26.710 --> 00:15:26.720 align:start position:0%
let me erase this stuff
 

00:15:26.720 --> 00:15:28.710 align:start position:0%
let me erase this stuff
so<00:15:26.880><c> that's</c><00:15:27.040><c> the</c><00:15:27.199><c> array</c><00:15:27.600><c> that</c><00:15:27.760><c> starts</c><00:15:28.000><c> at</c><00:15:28.079><c> zeros</c>

00:15:28.710 --> 00:15:28.720 align:start position:0%
so that's the array that starts at zeros
 

00:15:28.720 --> 00:15:30.389 align:start position:0%
so that's the array that starts at zeros
28<00:15:29.040><c> by</c><00:15:29.199><c> 28</c>

00:15:30.389 --> 00:15:30.399 align:start position:0%
28 by 28
 

00:15:30.399 --> 00:15:33.670 align:start position:0%
28 by 28
and<00:15:30.720><c> now</c><00:15:31.040><c> let's</c><00:15:31.279><c> copy</c><00:15:31.519><c> paste</c><00:15:31.839><c> this</c>

00:15:33.670 --> 00:15:33.680 align:start position:0%
and now let's copy paste this
 

00:15:33.680 --> 00:15:34.550 align:start position:0%
and now let's copy paste this
here

00:15:34.550 --> 00:15:34.560 align:start position:0%
here
 

00:15:34.560 --> 00:15:36.949 align:start position:0%
here
but<00:15:34.720><c> instead</c><00:15:34.959><c> of</c><00:15:35.120><c> having</c><00:15:35.360><c> a</c><00:15:35.440><c> dictionary</c><00:15:35.920><c> b</c>

00:15:36.949 --> 00:15:36.959 align:start position:0%
but instead of having a dictionary b
 

00:15:36.959 --> 00:15:39.110 align:start position:0%
but instead of having a dictionary b
which<00:15:37.199><c> we're</c><00:15:37.360><c> going</c><00:15:37.519><c> to</c><00:15:37.680><c> erase</c><00:15:38.399><c> we</c><00:15:38.639><c> now</c><00:15:38.880><c> have</c>

00:15:39.110 --> 00:15:39.120 align:start position:0%
which we're going to erase we now have
 

00:15:39.120 --> 00:15:40.949 align:start position:0%
which we're going to erase we now have
an<00:15:39.360><c> n</c>

00:15:40.949 --> 00:15:40.959 align:start position:0%
an n
 

00:15:40.959 --> 00:15:42.389 align:start position:0%
an n
now<00:15:41.120><c> the</c><00:15:41.279><c> problem</c><00:15:41.600><c> here</c><00:15:41.920><c> is</c><00:15:42.000><c> that</c><00:15:42.160><c> we</c><00:15:42.240><c> have</c>

00:15:42.389 --> 00:15:42.399 align:start position:0%
now the problem here is that we have
 

00:15:42.399 --> 00:15:44.150 align:start position:0%
now the problem here is that we have
these<00:15:42.560><c> characters</c><00:15:43.040><c> which</c><00:15:43.279><c> are</c><00:15:43.360><c> strings</c><00:15:44.000><c> but</c>

00:15:44.150 --> 00:15:44.160 align:start position:0%
these characters which are strings but
 

00:15:44.160 --> 00:15:45.509 align:start position:0%
these characters which are strings but
we<00:15:44.399><c> have</c><00:15:44.480><c> to</c><00:15:44.639><c> now</c>

00:15:45.509 --> 00:15:45.519 align:start position:0%
we have to now
 

00:15:45.519 --> 00:15:48.069 align:start position:0%
we have to now
um<00:15:45.839><c> basically</c><00:15:46.240><c> index</c><00:15:46.720><c> into</c><00:15:47.199><c> a</c>

00:15:48.069 --> 00:15:48.079 align:start position:0%
um basically index into a
 

00:15:48.079 --> 00:15:50.470 align:start position:0%
um basically index into a
um<00:15:48.720><c> array</c><00:15:49.360><c> and</c><00:15:49.440><c> we</c><00:15:49.600><c> have</c><00:15:49.680><c> to</c><00:15:49.839><c> index</c><00:15:50.160><c> using</c>

00:15:50.470 --> 00:15:50.480 align:start position:0%
um array and we have to index using
 

00:15:50.480 --> 00:15:52.069 align:start position:0%
um array and we have to index using
integers<00:15:51.279><c> so</c><00:15:51.440><c> we</c><00:15:51.519><c> need</c><00:15:51.680><c> some</c><00:15:51.759><c> kind</c><00:15:51.920><c> of</c><00:15:52.000><c> a</c>

00:15:52.069 --> 00:15:52.079 align:start position:0%
integers so we need some kind of a
 

00:15:52.079 --> 00:15:55.189 align:start position:0%
integers so we need some kind of a
lookup<00:15:52.399><c> table</c><00:15:52.720><c> from</c><00:15:52.959><c> characters</c><00:15:53.680><c> to</c><00:15:53.920><c> integers</c>

00:15:55.189 --> 00:15:55.199 align:start position:0%
lookup table from characters to integers
 

00:15:55.199 --> 00:15:56.790 align:start position:0%
lookup table from characters to integers
so<00:15:55.360><c> let's</c><00:15:55.519><c> construct</c><00:15:56.000><c> such</c><00:15:56.240><c> a</c><00:15:56.399><c> character</c>

00:15:56.790 --> 00:15:56.800 align:start position:0%
so let's construct such a character
 

00:15:56.800 --> 00:15:57.990 align:start position:0%
so let's construct such a character
array

00:15:57.990 --> 00:15:58.000 align:start position:0%
array
 

00:15:58.000 --> 00:15:59.269 align:start position:0%
array
and<00:15:58.160><c> the</c><00:15:58.320><c> way</c><00:15:58.399><c> we're</c><00:15:58.560><c> going</c><00:15:58.639><c> to</c><00:15:58.800><c> do</c><00:15:58.880><c> this</c><00:15:59.040><c> is</c>

00:15:59.269 --> 00:15:59.279 align:start position:0%
and the way we're going to do this is
 

00:15:59.279 --> 00:16:01.110 align:start position:0%
and the way we're going to do this is
we're<00:15:59.519><c> going</c><00:15:59.680><c> to</c><00:15:59.759><c> take</c><00:16:00.160><c> all</c><00:16:00.240><c> the</c><00:16:00.399><c> words</c><00:16:00.880><c> which</c>

00:16:01.110 --> 00:16:01.120 align:start position:0%
we're going to take all the words which
 

00:16:01.120 --> 00:16:02.710 align:start position:0%
we're going to take all the words which
is<00:16:01.199><c> a</c><00:16:01.279><c> list</c><00:16:01.519><c> of</c><00:16:01.680><c> strings</c>

00:16:02.710 --> 00:16:02.720 align:start position:0%
is a list of strings
 

00:16:02.720 --> 00:16:04.310 align:start position:0%
is a list of strings
we're<00:16:02.880><c> going</c><00:16:03.040><c> to</c><00:16:03.199><c> concatenate</c><00:16:03.839><c> all</c><00:16:04.000><c> of</c><00:16:04.160><c> it</c>

00:16:04.310 --> 00:16:04.320 align:start position:0%
we're going to concatenate all of it
 

00:16:04.320 --> 00:16:05.990 align:start position:0%
we're going to concatenate all of it
into<00:16:04.560><c> a</c><00:16:04.639><c> massive</c><00:16:04.959><c> string</c><00:16:05.360><c> so</c><00:16:05.519><c> this</c><00:16:05.759><c> is</c><00:16:05.839><c> just</c>

00:16:05.990 --> 00:16:06.000 align:start position:0%
into a massive string so this is just
 

00:16:06.000 --> 00:16:07.590 align:start position:0%
into a massive string so this is just
simply<00:16:06.240><c> the</c><00:16:06.399><c> entire</c><00:16:06.720><c> data</c><00:16:06.959><c> set</c><00:16:07.120><c> as</c><00:16:07.279><c> a</c><00:16:07.360><c> single</c>

00:16:07.590 --> 00:16:07.600 align:start position:0%
simply the entire data set as a single
 

00:16:07.600 --> 00:16:09.189 align:start position:0%
simply the entire data set as a single
string

00:16:09.189 --> 00:16:09.199 align:start position:0%
string
 

00:16:09.199 --> 00:16:10.790 align:start position:0%
string
we're<00:16:09.360><c> going</c><00:16:09.519><c> to</c><00:16:09.680><c> pass</c><00:16:09.920><c> this</c><00:16:10.160><c> to</c><00:16:10.320><c> the</c><00:16:10.560><c> set</c>

00:16:10.790 --> 00:16:10.800 align:start position:0%
we're going to pass this to the set
 

00:16:10.800 --> 00:16:13.509 align:start position:0%
we're going to pass this to the set
constructor<00:16:11.839><c> which</c><00:16:12.160><c> takes</c><00:16:12.959><c> this</c><00:16:13.199><c> massive</c>

00:16:13.509 --> 00:16:13.519 align:start position:0%
constructor which takes this massive
 

00:16:13.519 --> 00:16:14.389 align:start position:0%
constructor which takes this massive
string

00:16:14.389 --> 00:16:14.399 align:start position:0%
string
 

00:16:14.399 --> 00:16:16.949 align:start position:0%
string
and<00:16:14.880><c> throws</c><00:16:15.199><c> out</c><00:16:15.440><c> duplicates</c><00:16:16.240><c> because</c><00:16:16.560><c> sets</c>

00:16:16.949 --> 00:16:16.959 align:start position:0%
and throws out duplicates because sets
 

00:16:16.959 --> 00:16:18.870 align:start position:0%
and throws out duplicates because sets
do<00:16:17.120><c> not</c><00:16:17.360><c> allow</c><00:16:17.600><c> duplicates</c>

00:16:18.870 --> 00:16:18.880 align:start position:0%
do not allow duplicates
 

00:16:18.880 --> 00:16:21.110 align:start position:0%
do not allow duplicates
so<00:16:19.279><c> set</c><00:16:19.600><c> of</c><00:16:19.680><c> this</c><00:16:19.920><c> will</c><00:16:20.160><c> just</c><00:16:20.320><c> be</c><00:16:20.480><c> the</c><00:16:20.720><c> set</c><00:16:20.959><c> of</c>

00:16:21.110 --> 00:16:21.120 align:start position:0%
so set of this will just be the set of
 

00:16:21.120 --> 00:16:24.150 align:start position:0%
so set of this will just be the set of
all<00:16:21.279><c> the</c><00:16:21.440><c> lowercase</c><00:16:22.240><c> characters</c>

00:16:24.150 --> 00:16:24.160 align:start position:0%
all the lowercase characters
 

00:16:24.160 --> 00:16:25.990 align:start position:0%
all the lowercase characters
and<00:16:24.320><c> there</c><00:16:24.560><c> should</c><00:16:24.720><c> be</c><00:16:24.800><c> a</c><00:16:24.880><c> total</c><00:16:25.199><c> of</c><00:16:25.360><c> 26</c><00:16:25.920><c> of</c>

00:16:25.990 --> 00:16:26.000 align:start position:0%
and there should be a total of 26 of
 

00:16:26.000 --> 00:16:28.550 align:start position:0%
and there should be a total of 26 of
them

00:16:28.550 --> 00:16:28.560 align:start position:0%
 
 

00:16:28.560 --> 00:16:29.910 align:start position:0%
 
and<00:16:28.720><c> now</c><00:16:28.880><c> we</c><00:16:28.959><c> actually</c><00:16:29.199><c> don't</c><00:16:29.279><c> want</c><00:16:29.519><c> a</c><00:16:29.600><c> set</c><00:16:29.839><c> we</c>

00:16:29.910 --> 00:16:29.920 align:start position:0%
and now we actually don't want a set we
 

00:16:29.920 --> 00:16:32.629 align:start position:0%
and now we actually don't want a set we
want<00:16:30.160><c> a</c><00:16:30.320><c> list</c>

00:16:32.629 --> 00:16:32.639 align:start position:0%
want a list
 

00:16:32.639 --> 00:16:34.550 align:start position:0%
want a list
but<00:16:32.800><c> we</c><00:16:32.880><c> don't</c><00:16:33.040><c> want</c><00:16:33.279><c> a</c><00:16:33.360><c> list</c><00:16:33.680><c> sorted</c><00:16:34.079><c> in</c><00:16:34.240><c> some</c>

00:16:34.550 --> 00:16:34.560 align:start position:0%
but we don't want a list sorted in some
 

00:16:34.560 --> 00:16:36.150 align:start position:0%
but we don't want a list sorted in some
weird<00:16:34.800><c> arbitrary</c><00:16:35.279><c> way</c><00:16:35.519><c> we</c><00:16:35.600><c> want</c><00:16:35.839><c> it</c><00:16:35.920><c> to</c><00:16:36.000><c> be</c>

00:16:36.150 --> 00:16:36.160 align:start position:0%
weird arbitrary way we want it to be
 

00:16:36.160 --> 00:16:37.590 align:start position:0%
weird arbitrary way we want it to be
sorted

00:16:37.590 --> 00:16:37.600 align:start position:0%
sorted
 

00:16:37.600 --> 00:16:39.749 align:start position:0%
sorted
from<00:16:37.839><c> a</c><00:16:37.920><c> to</c><00:16:38.079><c> z</c>

00:16:39.749 --> 00:16:39.759 align:start position:0%
from a to z
 

00:16:39.759 --> 00:16:41.829 align:start position:0%
from a to z
so<00:16:40.079><c> sorted</c><00:16:40.480><c> list</c>

00:16:41.829 --> 00:16:41.839 align:start position:0%
so sorted list
 

00:16:41.839 --> 00:16:45.590 align:start position:0%
so sorted list
so<00:16:42.000><c> those</c><00:16:42.240><c> are</c><00:16:42.399><c> our</c><00:16:42.560><c> characters</c>

00:16:45.590 --> 00:16:45.600 align:start position:0%
 
 

00:16:45.600 --> 00:16:47.269 align:start position:0%
 
now<00:16:45.759><c> what</c><00:16:45.920><c> we</c><00:16:46.079><c> want</c><00:16:46.320><c> is</c><00:16:46.480><c> this</c><00:16:46.639><c> lookup</c><00:16:46.880><c> table</c><00:16:47.199><c> as</c>

00:16:47.269 --> 00:16:47.279 align:start position:0%
now what we want is this lookup table as
 

00:16:47.279 --> 00:16:49.910 align:start position:0%
now what we want is this lookup table as
i<00:16:47.360><c> mentioned</c><00:16:47.759><c> so</c><00:16:48.320><c> let's</c><00:16:48.639><c> create</c><00:16:49.040><c> a</c><00:16:49.199><c> special</c>

00:16:49.910 --> 00:16:49.920 align:start position:0%
i mentioned so let's create a special
 

00:16:49.920 --> 00:16:52.949 align:start position:0%
i mentioned so let's create a special
s2i<00:16:51.120><c> i</c><00:16:51.199><c> will</c><00:16:51.440><c> call</c><00:16:51.680><c> it</c>

00:16:52.949 --> 00:16:52.959 align:start position:0%
s2i i will call it
 

00:16:52.959 --> 00:16:55.749 align:start position:0%
s2i i will call it
um<00:16:53.440><c> s</c><00:16:53.680><c> is</c><00:16:54.000><c> string</c><00:16:54.480><c> or</c><00:16:54.639><c> character</c><00:16:55.519><c> and</c><00:16:55.600><c> this</c>

00:16:55.749 --> 00:16:55.759 align:start position:0%
um s is string or character and this
 

00:16:55.759 --> 00:16:58.790 align:start position:0%
um s is string or character and this
will<00:16:55.920><c> be</c><00:16:56.079><c> an</c><00:16:56.320><c> s2i</c><00:16:57.040><c> mapping</c>

00:16:58.790 --> 00:16:58.800 align:start position:0%
will be an s2i mapping
 

00:16:58.800 --> 00:16:59.910 align:start position:0%
will be an s2i mapping
for

00:16:59.910 --> 00:16:59.920 align:start position:0%
for
 

00:16:59.920 --> 00:17:04.230 align:start position:0%
for
is<00:17:00.639><c> in</c><00:17:00.959><c> enumerate</c><00:17:02.000><c> of</c><00:17:02.320><c> these</c><00:17:02.560><c> characters</c>

00:17:04.230 --> 00:17:04.240 align:start position:0%
is in enumerate of these characters
 

00:17:04.240 --> 00:17:06.870 align:start position:0%
is in enumerate of these characters
so<00:17:04.799><c> enumerate</c><00:17:05.600><c> basically</c><00:17:06.000><c> gives</c><00:17:06.240><c> us</c><00:17:06.559><c> this</c>

00:17:06.870 --> 00:17:06.880 align:start position:0%
so enumerate basically gives us this
 

00:17:06.880 --> 00:17:09.990 align:start position:0%
so enumerate basically gives us this
iterator<00:17:07.360><c> over</c><00:17:07.600><c> the</c><00:17:07.760><c> integer</c><00:17:08.640><c> index</c><00:17:09.199><c> and</c><00:17:09.839><c> the</c>

00:17:09.990 --> 00:17:10.000 align:start position:0%
iterator over the integer index and the
 

00:17:10.000 --> 00:17:12.309 align:start position:0%
iterator over the integer index and the
actual<00:17:10.640><c> element</c><00:17:11.039><c> of</c><00:17:11.120><c> the</c><00:17:11.280><c> list</c><00:17:12.000><c> and</c><00:17:12.079><c> then</c><00:17:12.240><c> we</c>

00:17:12.309 --> 00:17:12.319 align:start position:0%
actual element of the list and then we
 

00:17:12.319 --> 00:17:15.189 align:start position:0%
actual element of the list and then we
are<00:17:12.480><c> mapping</c><00:17:13.039><c> the</c><00:17:13.199><c> character</c><00:17:13.600><c> to</c><00:17:13.760><c> the</c><00:17:13.919><c> integer</c>

00:17:15.189 --> 00:17:15.199 align:start position:0%
are mapping the character to the integer
 

00:17:15.199 --> 00:17:16.710 align:start position:0%
are mapping the character to the integer
so<00:17:15.439><c> s2i</c>

00:17:16.710 --> 00:17:16.720 align:start position:0%
so s2i
 

00:17:16.720 --> 00:17:19.909 align:start position:0%
so s2i
is<00:17:16.880><c> a</c><00:17:17.039><c> mapping</c><00:17:17.360><c> from</c><00:17:17.600><c> a</c><00:17:17.760><c> to</c><00:17:17.919><c> 0</c><00:17:18.319><c> b</c><00:17:18.480><c> to</c><00:17:18.640><c> 1</c><00:17:18.959><c> etc</c><00:17:19.760><c> all</c>

00:17:19.909 --> 00:17:19.919 align:start position:0%
is a mapping from a to 0 b to 1 etc all
 

00:17:19.919 --> 00:17:24.069 align:start position:0%
is a mapping from a to 0 b to 1 etc all
the<00:17:20.000><c> way</c><00:17:20.319><c> from</c><00:17:20.559><c> z</c><00:17:20.799><c> to</c><00:17:20.959><c> 25</c>

00:17:24.069 --> 00:17:24.079 align:start position:0%
 
 

00:17:24.079 --> 00:17:25.429 align:start position:0%
 
and<00:17:24.160><c> that's</c><00:17:24.319><c> going</c><00:17:24.480><c> to</c><00:17:24.559><c> be</c><00:17:24.640><c> useful</c><00:17:24.959><c> here</c><00:17:25.199><c> but</c>

00:17:25.429 --> 00:17:25.439 align:start position:0%
and that's going to be useful here but
 

00:17:25.439 --> 00:17:27.189 align:start position:0%
and that's going to be useful here but
we<00:17:25.679><c> actually</c><00:17:26.000><c> also</c><00:17:26.240><c> have</c><00:17:26.400><c> to</c><00:17:26.559><c> specifically</c>

00:17:27.189 --> 00:17:27.199 align:start position:0%
we actually also have to specifically
 

00:17:27.199 --> 00:17:29.750 align:start position:0%
we actually also have to specifically
set<00:17:27.439><c> that</c><00:17:27.760><c> s</c><00:17:28.079><c> will</c><00:17:28.240><c> be</c><00:17:28.480><c> 26</c>

00:17:29.750 --> 00:17:29.760 align:start position:0%
set that s will be 26
 

00:17:29.760 --> 00:17:33.590 align:start position:0%
set that s will be 26
and<00:17:30.000><c> s</c><00:17:30.160><c> to</c><00:17:30.400><c> i</c><00:17:30.640><c> at</c><00:17:31.039><c> e</c><00:17:32.000><c> will</c><00:17:32.240><c> be</c><00:17:32.400><c> 27</c><00:17:33.120><c> right</c><00:17:33.360><c> because</c>

00:17:33.590 --> 00:17:33.600 align:start position:0%
and s to i at e will be 27 right because
 

00:17:33.600 --> 00:17:35.909 align:start position:0%
and s to i at e will be 27 right because
z<00:17:33.840><c> was</c><00:17:34.000><c> 25.</c>

00:17:35.909 --> 00:17:35.919 align:start position:0%
z was 25.
 

00:17:35.919 --> 00:17:38.070 align:start position:0%
z was 25.
so<00:17:36.160><c> those</c><00:17:36.400><c> are</c><00:17:36.480><c> the</c><00:17:36.640><c> lookups</c><00:17:37.600><c> and</c><00:17:37.679><c> now</c><00:17:37.840><c> we</c><00:17:37.919><c> can</c>

00:17:38.070 --> 00:17:38.080 align:start position:0%
so those are the lookups and now we can
 

00:17:38.080 --> 00:17:39.830 align:start position:0%
so those are the lookups and now we can
come<00:17:38.240><c> here</c><00:17:38.559><c> and</c><00:17:38.640><c> we</c><00:17:38.799><c> can</c><00:17:39.039><c> map</c>

00:17:39.830 --> 00:17:39.840 align:start position:0%
come here and we can map
 

00:17:39.840 --> 00:17:41.510 align:start position:0%
come here and we can map
both<00:17:40.080><c> character</c><00:17:40.480><c> 1</c><00:17:40.720><c> and</c><00:17:40.799><c> character</c><00:17:41.200><c> 2</c><00:17:41.360><c> to</c>

00:17:41.510 --> 00:17:41.520 align:start position:0%
both character 1 and character 2 to
 

00:17:41.520 --> 00:17:42.710 align:start position:0%
both character 1 and character 2 to
their<00:17:41.679><c> integers</c>

00:17:42.710 --> 00:17:42.720 align:start position:0%
their integers
 

00:17:42.720 --> 00:17:45.270 align:start position:0%
their integers
so<00:17:42.880><c> this</c><00:17:43.039><c> will</c><00:17:43.200><c> be</c><00:17:43.360><c> s2i</c><00:17:43.840><c> at</c><00:17:43.919><c> character</c><00:17:44.320><c> 1</c>

00:17:45.270 --> 00:17:45.280 align:start position:0%
so this will be s2i at character 1
 

00:17:45.280 --> 00:17:49.350 align:start position:0%
so this will be s2i at character 1
and<00:17:45.600><c> ix2</c><00:17:46.160><c> will</c><00:17:46.320><c> be</c><00:17:46.480><c> s2i</c><00:17:47.120><c> of</c><00:17:47.360><c> character</c><00:17:47.840><c> 2.</c>

00:17:49.350 --> 00:17:49.360 align:start position:0%
and ix2 will be s2i of character 2.
 

00:17:49.360 --> 00:17:52.070 align:start position:0%
and ix2 will be s2i of character 2.
and<00:17:49.520><c> now</c><00:17:49.679><c> we</c><00:17:49.840><c> should</c><00:17:50.000><c> be</c><00:17:50.080><c> able</c><00:17:50.240><c> to</c>

00:17:52.070 --> 00:17:52.080 align:start position:0%
and now we should be able to
 

00:17:52.080 --> 00:17:55.669 align:start position:0%
and now we should be able to
do<00:17:52.400><c> this</c><00:17:52.640><c> line</c><00:17:53.120><c> but</c><00:17:53.280><c> using</c><00:17:53.600><c> our</c><00:17:53.760><c> array</c><00:17:54.480><c> so</c><00:17:54.720><c> n</c><00:17:54.960><c> at</c>

00:17:55.669 --> 00:17:55.679 align:start position:0%
do this line but using our array so n at
 

00:17:55.679 --> 00:17:58.870 align:start position:0%
do this line but using our array so n at
x1<00:17:56.240><c> ix2</c><00:17:57.280><c> this</c><00:17:57.520><c> is</c><00:17:57.600><c> the</c><00:17:58.000><c> two-dimensional</c><00:17:58.559><c> array</c>

00:17:58.870 --> 00:17:58.880 align:start position:0%
x1 ix2 this is the two-dimensional array
 

00:17:58.880 --> 00:18:00.549 align:start position:0%
x1 ix2 this is the two-dimensional array
indexing<00:17:59.200><c> i've</c><00:17:59.360><c> shown</c><00:17:59.520><c> you</c><00:17:59.600><c> before</c>

00:18:00.549 --> 00:18:00.559 align:start position:0%
indexing i've shown you before
 

00:18:00.559 --> 00:18:02.950 align:start position:0%
indexing i've shown you before
and<00:18:00.720><c> honestly</c><00:18:01.120><c> just</c><00:18:01.360><c> plus</c><00:18:01.600><c> equals</c><00:18:01.840><c> one</c>

00:18:02.950 --> 00:18:02.960 align:start position:0%
and honestly just plus equals one
 

00:18:02.960 --> 00:18:04.789 align:start position:0%
and honestly just plus equals one
because<00:18:03.200><c> everything</c><00:18:03.600><c> starts</c><00:18:03.919><c> at</c>

00:18:04.789 --> 00:18:04.799 align:start position:0%
because everything starts at
 

00:18:04.799 --> 00:18:06.150 align:start position:0%
because everything starts at
zero

00:18:06.150 --> 00:18:06.160 align:start position:0%
zero
 

00:18:06.160 --> 00:18:07.909 align:start position:0%
zero
so<00:18:06.400><c> this</c><00:18:06.799><c> should</c>

00:18:07.909 --> 00:18:07.919 align:start position:0%
so this should
 

00:18:07.919 --> 00:18:08.870 align:start position:0%
so this should
work

00:18:08.870 --> 00:18:08.880 align:start position:0%
work
 

00:18:08.880 --> 00:18:12.950 align:start position:0%
work
and<00:18:09.120><c> give</c><00:18:09.440><c> us</c><00:18:10.080><c> a</c><00:18:10.400><c> large</c><00:18:10.880><c> 28</c><00:18:11.280><c> by</c><00:18:11.440><c> 28</c><00:18:11.840><c> array</c>

00:18:12.950 --> 00:18:12.960 align:start position:0%
and give us a large 28 by 28 array
 

00:18:12.960 --> 00:18:15.029 align:start position:0%
and give us a large 28 by 28 array
of<00:18:13.200><c> all</c><00:18:13.360><c> these</c><00:18:13.600><c> counts</c><00:18:14.320><c> so</c>

00:18:15.029 --> 00:18:15.039 align:start position:0%
of all these counts so
 

00:18:15.039 --> 00:18:16.870 align:start position:0%
of all these counts so
if<00:18:15.120><c> we</c><00:18:15.360><c> print</c><00:18:15.760><c> n</c>

00:18:16.870 --> 00:18:16.880 align:start position:0%
if we print n
 

00:18:16.880 --> 00:18:19.110 align:start position:0%
if we print n
this<00:18:17.120><c> is</c><00:18:17.200><c> the</c><00:18:17.360><c> array</c><00:18:17.760><c> but</c><00:18:18.000><c> of</c><00:18:18.160><c> course</c><00:18:18.480><c> it</c><00:18:18.880><c> looks</c>

00:18:19.110 --> 00:18:19.120 align:start position:0%
this is the array but of course it looks
 

00:18:19.120 --> 00:18:21.830 align:start position:0%
this is the array but of course it looks
ugly<00:18:19.760><c> so</c><00:18:19.919><c> let's</c><00:18:20.240><c> erase</c><00:18:20.799><c> this</c><00:18:21.039><c> ugly</c><00:18:21.360><c> mess</c><00:18:21.679><c> and</c>

00:18:21.830 --> 00:18:21.840 align:start position:0%
ugly so let's erase this ugly mess and
 

00:18:21.840 --> 00:18:23.669 align:start position:0%
ugly so let's erase this ugly mess and
let's<00:18:22.000><c> try</c><00:18:22.160><c> to</c><00:18:22.240><c> visualize</c><00:18:22.640><c> it</c><00:18:22.720><c> a</c><00:18:22.799><c> bit</c><00:18:22.960><c> more</c>

00:18:23.669 --> 00:18:23.679 align:start position:0%
let's try to visualize it a bit more
 

00:18:23.679 --> 00:18:24.789 align:start position:0%
let's try to visualize it a bit more
nicer

00:18:24.789 --> 00:18:24.799 align:start position:0%
nicer
 

00:18:24.799 --> 00:18:26.870 align:start position:0%
nicer
so<00:18:25.039><c> for</c><00:18:25.200><c> that</c><00:18:25.440><c> we're</c><00:18:25.600><c> going</c><00:18:25.760><c> to</c><00:18:25.919><c> use</c><00:18:26.320><c> a</c><00:18:26.480><c> library</c>

00:18:26.870 --> 00:18:26.880 align:start position:0%
so for that we're going to use a library
 

00:18:26.880 --> 00:18:28.789 align:start position:0%
so for that we're going to use a library
called<00:18:27.120><c> matplotlib</c>

00:18:28.789 --> 00:18:28.799 align:start position:0%
called matplotlib
 

00:18:28.799 --> 00:18:30.310 align:start position:0%
called matplotlib
so<00:18:28.960><c> matplotlib</c><00:18:29.600><c> allows</c><00:18:29.840><c> us</c><00:18:29.919><c> to</c><00:18:30.080><c> create</c>

00:18:30.310 --> 00:18:30.320 align:start position:0%
so matplotlib allows us to create
 

00:18:30.320 --> 00:18:32.470 align:start position:0%
so matplotlib allows us to create
figures<00:18:30.960><c> so</c><00:18:31.280><c> we</c><00:18:31.360><c> can</c><00:18:31.520><c> do</c><00:18:31.679><c> things</c><00:18:31.840><c> like</c><00:18:32.080><c> plt</c>

00:18:32.470 --> 00:18:32.480 align:start position:0%
figures so we can do things like plt
 

00:18:32.480 --> 00:18:36.070 align:start position:0%
figures so we can do things like plt
item<00:18:32.720><c> show</c><00:18:33.039><c> of</c><00:18:33.600><c> the</c><00:18:33.760><c> counter</c><00:18:34.080><c> array</c>

00:18:36.070 --> 00:18:36.080 align:start position:0%
item show of the counter array
 

00:18:36.080 --> 00:18:39.029 align:start position:0%
item show of the counter array
so<00:18:36.320><c> this</c><00:18:36.559><c> is</c><00:18:36.640><c> the</c><00:18:37.120><c> 28x28</c><00:18:37.919><c> array</c>

00:18:39.029 --> 00:18:39.039 align:start position:0%
so this is the 28x28 array
 

00:18:39.039 --> 00:18:41.909 align:start position:0%
so this is the 28x28 array
and<00:18:39.600><c> this</c><00:18:39.840><c> is</c><00:18:40.080><c> structure</c><00:18:40.880><c> but</c><00:18:41.200><c> even</c><00:18:41.520><c> this</c><00:18:41.840><c> i</c>

00:18:41.909 --> 00:18:41.919 align:start position:0%
and this is structure but even this i
 

00:18:41.919 --> 00:18:43.830 align:start position:0%
and this is structure but even this i
would<00:18:42.080><c> say</c><00:18:42.240><c> is</c><00:18:42.400><c> still</c><00:18:42.559><c> pretty</c><00:18:42.880><c> ugly</c>

00:18:43.830 --> 00:18:43.840 align:start position:0%
would say is still pretty ugly
 

00:18:43.840 --> 00:18:45.669 align:start position:0%
would say is still pretty ugly
so<00:18:44.160><c> we're</c><00:18:44.320><c> going</c><00:18:44.480><c> to</c><00:18:44.960><c> try</c><00:18:45.120><c> to</c><00:18:45.200><c> create</c><00:18:45.440><c> a</c><00:18:45.520><c> much</c>

00:18:45.669 --> 00:18:45.679 align:start position:0%
so we're going to try to create a much
 

00:18:45.679 --> 00:18:47.510 align:start position:0%
so we're going to try to create a much
nicer<00:18:46.000><c> visualization</c><00:18:46.640><c> of</c><00:18:46.720><c> it</c><00:18:46.960><c> and</c><00:18:47.039><c> i</c><00:18:47.280><c> wrote</c><00:18:47.440><c> a</c>

00:18:47.510 --> 00:18:47.520 align:start position:0%
nicer visualization of it and i wrote a
 

00:18:47.520 --> 00:18:49.669 align:start position:0%
nicer visualization of it and i wrote a
bunch<00:18:47.760><c> of</c><00:18:47.919><c> code</c><00:18:48.160><c> for</c><00:18:48.240><c> that</c>

00:18:49.669 --> 00:18:49.679 align:start position:0%
bunch of code for that
 

00:18:49.679 --> 00:18:51.830 align:start position:0%
bunch of code for that
the<00:18:49.840><c> first</c><00:18:50.000><c> thing</c><00:18:50.160><c> we're</c><00:18:50.240><c> going</c><00:18:50.400><c> to</c><00:18:50.559><c> need</c><00:18:50.880><c> is</c>

00:18:51.830 --> 00:18:51.840 align:start position:0%
the first thing we're going to need is
 

00:18:51.840 --> 00:18:53.830 align:start position:0%
the first thing we're going to need is
we're<00:18:52.000><c> going</c><00:18:52.160><c> to</c><00:18:52.320><c> need</c><00:18:52.559><c> to</c><00:18:52.880><c> invert</c>

00:18:53.830 --> 00:18:53.840 align:start position:0%
we're going to need to invert
 

00:18:53.840 --> 00:18:57.350 align:start position:0%
we're going to need to invert
this<00:18:54.240><c> array</c><00:18:54.640><c> here</c><00:18:55.039><c> this</c><00:18:55.679><c> dictionary</c><00:18:56.559><c> so</c><00:18:56.799><c> s2i</c>

00:18:57.350 --> 00:18:57.360 align:start position:0%
this array here this dictionary so s2i
 

00:18:57.360 --> 00:18:59.750 align:start position:0%
this array here this dictionary so s2i
is<00:18:57.520><c> mapping</c><00:18:57.840><c> from</c><00:18:58.080><c> s</c><00:18:58.480><c> to</c><00:18:58.640><c> i</c>

00:18:59.750 --> 00:18:59.760 align:start position:0%
is mapping from s to i
 

00:18:59.760 --> 00:19:02.230 align:start position:0%
is mapping from s to i
and<00:19:00.000><c> in</c><00:19:00.240><c> i2s</c><00:19:00.960><c> we're</c><00:19:01.120><c> going</c><00:19:01.280><c> to</c><00:19:01.360><c> reverse</c><00:19:02.000><c> this</c>

00:19:02.230 --> 00:19:02.240 align:start position:0%
and in i2s we're going to reverse this
 

00:19:02.240 --> 00:19:04.470 align:start position:0%
and in i2s we're going to reverse this
dictionary<00:19:02.960><c> so</c><00:19:03.120><c> iterator</c><00:19:03.520><c> of</c><00:19:03.679><c> all</c><00:19:03.760><c> the</c><00:19:03.919><c> items</c>

00:19:04.470 --> 00:19:04.480 align:start position:0%
dictionary so iterator of all the items
 

00:19:04.480 --> 00:19:06.549 align:start position:0%
dictionary so iterator of all the items
and<00:19:04.640><c> just</c><00:19:04.880><c> reverse</c><00:19:05.360><c> that</c><00:19:05.600><c> array</c>

00:19:06.549 --> 00:19:06.559 align:start position:0%
and just reverse that array
 

00:19:06.559 --> 00:19:08.310 align:start position:0%
and just reverse that array
so<00:19:07.120><c> i2s</c>

00:19:08.310 --> 00:19:08.320 align:start position:0%
so i2s
 

00:19:08.320 --> 00:19:12.549 align:start position:0%
so i2s
maps<00:19:09.039><c> inversely</c><00:19:09.600><c> from</c><00:19:09.760><c> 0</c><00:19:10.000><c> to</c><00:19:10.160><c> a</c><00:19:10.480><c> 1</c><00:19:10.640><c> to</c><00:19:10.799><c> b</c><00:19:11.039><c> etc</c>

00:19:12.549 --> 00:19:12.559 align:start position:0%
maps inversely from 0 to a 1 to b etc
 

00:19:12.559 --> 00:19:14.150 align:start position:0%
maps inversely from 0 to a 1 to b etc
so<00:19:12.720><c> we'll</c><00:19:12.880><c> need</c><00:19:13.120><c> that</c>

00:19:14.150 --> 00:19:14.160 align:start position:0%
so we'll need that
 

00:19:14.160 --> 00:19:16.150 align:start position:0%
so we'll need that
and<00:19:14.320><c> then</c><00:19:14.559><c> here's</c><00:19:15.200><c> the</c><00:19:15.360><c> code</c><00:19:15.600><c> that</c><00:19:15.760><c> i</c><00:19:15.840><c> came</c><00:19:16.080><c> up</c>

00:19:16.150 --> 00:19:16.160 align:start position:0%
and then here's the code that i came up
 

00:19:16.160 --> 00:19:17.590 align:start position:0%
and then here's the code that i came up
with<00:19:16.320><c> to</c><00:19:16.480><c> try</c><00:19:16.640><c> to</c><00:19:16.799><c> make</c><00:19:16.960><c> this</c><00:19:17.200><c> a</c><00:19:17.280><c> little</c><00:19:17.440><c> bit</c>

00:19:17.590 --> 00:19:17.600 align:start position:0%
with to try to make this a little bit
 

00:19:17.600 --> 00:19:20.470 align:start position:0%
with to try to make this a little bit
nicer

00:19:20.470 --> 00:19:20.480 align:start position:0%
 
 

00:19:20.480 --> 00:19:21.990 align:start position:0%
 
we<00:19:20.640><c> create</c><00:19:20.880><c> a</c><00:19:20.960><c> figure</c>

00:19:21.990 --> 00:19:22.000 align:start position:0%
we create a figure
 

00:19:22.000 --> 00:19:23.350 align:start position:0%
we create a figure
we<00:19:22.240><c> plot</c>

00:19:23.350 --> 00:19:23.360 align:start position:0%
we plot
 

00:19:23.360 --> 00:19:24.390 align:start position:0%
we plot
n

00:19:24.390 --> 00:19:24.400 align:start position:0%
n
 

00:19:24.400 --> 00:19:26.070 align:start position:0%
n
and<00:19:24.480><c> then</c><00:19:24.640><c> we</c><00:19:24.799><c> do</c><00:19:25.120><c> and</c><00:19:25.280><c> then</c><00:19:25.440><c> we</c><00:19:25.600><c> visualize</c><00:19:26.000><c> a</c>

00:19:26.070 --> 00:19:26.080 align:start position:0%
and then we do and then we visualize a
 

00:19:26.080 --> 00:19:27.990 align:start position:0%
and then we do and then we visualize a
bunch<00:19:26.240><c> of</c><00:19:26.320><c> things</c><00:19:26.559><c> later</c><00:19:27.200><c> let</c><00:19:27.360><c> me</c><00:19:27.600><c> just</c><00:19:27.760><c> run</c><00:19:27.919><c> it</c>

00:19:27.990 --> 00:19:28.000 align:start position:0%
bunch of things later let me just run it
 

00:19:28.000 --> 00:19:31.909 align:start position:0%
bunch of things later let me just run it
so<00:19:28.080><c> you</c><00:19:28.160><c> get</c><00:19:28.240><c> a</c><00:19:28.320><c> sense</c><00:19:28.559><c> of</c><00:19:28.640><c> what</c><00:19:28.880><c> this</c><00:19:29.120><c> is</c>

00:19:31.909 --> 00:19:31.919 align:start position:0%
 
 

00:19:31.919 --> 00:19:32.950 align:start position:0%
 
okay

00:19:32.950 --> 00:19:32.960 align:start position:0%
okay
 

00:19:32.960 --> 00:19:35.270 align:start position:0%
okay
so<00:19:33.120><c> you</c><00:19:33.200><c> see</c><00:19:33.440><c> here</c><00:19:33.600><c> that</c><00:19:33.760><c> we</c><00:19:33.919><c> have</c>

00:19:35.270 --> 00:19:35.280 align:start position:0%
so you see here that we have
 

00:19:35.280 --> 00:19:37.110 align:start position:0%
so you see here that we have
the<00:19:35.440><c> array</c><00:19:35.919><c> spaced</c><00:19:36.320><c> out</c>

00:19:37.110 --> 00:19:37.120 align:start position:0%
the array spaced out
 

00:19:37.120 --> 00:19:39.830 align:start position:0%
the array spaced out
and<00:19:37.840><c> every</c><00:19:38.080><c> one</c><00:19:38.320><c> of</c><00:19:38.400><c> these</c><00:19:38.640><c> is</c><00:19:38.720><c> basically</c><00:19:39.600><c> like</c>

00:19:39.830 --> 00:19:39.840 align:start position:0%
and every one of these is basically like
 

00:19:39.840 --> 00:19:42.310 align:start position:0%
and every one of these is basically like
b<00:19:40.160><c> follows</c><00:19:40.640><c> g</c><00:19:41.039><c> zero</c><00:19:41.360><c> times</c>

00:19:42.310 --> 00:19:42.320 align:start position:0%
b follows g zero times
 

00:19:42.320 --> 00:19:44.630 align:start position:0%
b follows g zero times
b<00:19:42.559><c> follows</c><00:19:42.960><c> h</c><00:19:43.200><c> 41</c><00:19:43.760><c> times</c>

00:19:44.630 --> 00:19:44.640 align:start position:0%
b follows h 41 times
 

00:19:44.640 --> 00:19:47.830 align:start position:0%
b follows h 41 times
um<00:19:45.200><c> so</c><00:19:45.440><c> a</c><00:19:45.679><c> follows</c><00:19:46.000><c> j</c><00:19:46.240><c> 175</c><00:19:46.880><c> times</c>

00:19:47.830 --> 00:19:47.840 align:start position:0%
um so a follows j 175 times
 

00:19:47.840 --> 00:19:49.270 align:start position:0%
um so a follows j 175 times
and<00:19:48.000><c> so</c><00:19:48.160><c> what</c><00:19:48.320><c> you</c><00:19:48.400><c> can</c><00:19:48.559><c> see</c><00:19:48.799><c> that</c><00:19:48.960><c> i'm</c><00:19:49.039><c> doing</c>

00:19:49.270 --> 00:19:49.280 align:start position:0%
and so what you can see that i'm doing
 

00:19:49.280 --> 00:19:52.870 align:start position:0%
and so what you can see that i'm doing
here<00:19:49.520><c> is</c><00:19:49.919><c> first</c><00:19:50.240><c> i</c><00:19:50.799><c> show</c><00:19:51.360><c> that</c><00:19:51.600><c> entire</c><00:19:52.000><c> array</c>

00:19:52.870 --> 00:19:52.880 align:start position:0%
here is first i show that entire array
 

00:19:52.880 --> 00:19:54.230 align:start position:0%
here is first i show that entire array
and<00:19:52.960><c> then</c><00:19:53.120><c> i</c><00:19:53.280><c> iterate</c><00:19:53.679><c> over</c><00:19:53.919><c> all</c><00:19:54.000><c> the</c>

00:19:54.230 --> 00:19:54.240 align:start position:0%
and then i iterate over all the
 

00:19:54.240 --> 00:19:56.710 align:start position:0%
and then i iterate over all the
individual<00:19:54.799><c> little</c><00:19:55.120><c> cells</c><00:19:55.440><c> here</c>

00:19:56.710 --> 00:19:56.720 align:start position:0%
individual little cells here
 

00:19:56.720 --> 00:19:59.270 align:start position:0%
individual little cells here
and<00:19:56.880><c> i</c><00:19:57.039><c> create</c><00:19:57.360><c> a</c><00:19:57.440><c> character</c><00:19:58.000><c> string</c><00:19:58.480><c> here</c>

00:19:59.270 --> 00:19:59.280 align:start position:0%
and i create a character string here
 

00:19:59.280 --> 00:20:02.549 align:start position:0%
and i create a character string here
which<00:19:59.520><c> is</c><00:19:59.679><c> the</c><00:19:59.919><c> inverse</c><00:20:00.240><c> mapping</c><00:20:00.960><c> i2s</c><00:20:01.760><c> of</c><00:20:02.400><c> the</c>

00:20:02.549 --> 00:20:02.559 align:start position:0%
which is the inverse mapping i2s of the
 

00:20:02.559 --> 00:20:05.190 align:start position:0%
which is the inverse mapping i2s of the
integer<00:20:02.960><c> i</c><00:20:03.280><c> and</c><00:20:03.360><c> the</c><00:20:03.520><c> integer</c><00:20:03.919><c> j</c><00:20:04.559><c> so</c><00:20:04.720><c> those</c><00:20:05.120><c> are</c>

00:20:05.190 --> 00:20:05.200 align:start position:0%
integer i and the integer j so those are
 

00:20:05.200 --> 00:20:06.710 align:start position:0%
integer i and the integer j so those are
the<00:20:05.360><c> bi-grams</c><00:20:06.000><c> in</c><00:20:06.159><c> a</c><00:20:06.320><c> character</c>

00:20:06.710 --> 00:20:06.720 align:start position:0%
the bi-grams in a character
 

00:20:06.720 --> 00:20:08.549 align:start position:0%
the bi-grams in a character
representation

00:20:08.549 --> 00:20:08.559 align:start position:0%
representation
 

00:20:08.559 --> 00:20:11.990 align:start position:0%
representation
and<00:20:08.720><c> then</c><00:20:08.960><c> i</c><00:20:09.280><c> plot</c><00:20:10.080><c> just</c><00:20:10.400><c> the</c><00:20:10.880><c> diagram</c><00:20:11.360><c> text</c>

00:20:11.990 --> 00:20:12.000 align:start position:0%
and then i plot just the diagram text
 

00:20:12.000 --> 00:20:14.149 align:start position:0%
and then i plot just the diagram text
and<00:20:12.159><c> then</c><00:20:12.320><c> i</c><00:20:12.400><c> plot</c><00:20:12.960><c> the</c><00:20:13.200><c> number</c><00:20:13.440><c> of</c><00:20:13.600><c> times</c><00:20:14.000><c> that</c>

00:20:14.149 --> 00:20:14.159 align:start position:0%
and then i plot the number of times that
 

00:20:14.159 --> 00:20:15.990 align:start position:0%
and then i plot the number of times that
this<00:20:14.320><c> bigram</c><00:20:14.799><c> occurs</c>

00:20:15.990 --> 00:20:16.000 align:start position:0%
this bigram occurs
 

00:20:16.000 --> 00:20:17.510 align:start position:0%
this bigram occurs
now<00:20:16.159><c> the</c><00:20:16.320><c> reason</c><00:20:16.559><c> that</c><00:20:16.640><c> there's</c><00:20:16.880><c> a</c><00:20:16.960><c> dot</c><00:20:17.280><c> item</c>

00:20:17.510 --> 00:20:17.520 align:start position:0%
now the reason that there's a dot item
 

00:20:17.520 --> 00:20:19.990 align:start position:0%
now the reason that there's a dot item
here<00:20:18.320><c> is</c><00:20:18.559><c> because</c><00:20:19.120><c> when</c><00:20:19.280><c> you</c><00:20:19.520><c> index</c><00:20:19.840><c> into</c>

00:20:19.990 --> 00:20:20.000 align:start position:0%
here is because when you index into
 

00:20:20.000 --> 00:20:22.950 align:start position:0%
here is because when you index into
these<00:20:20.240><c> arrays</c><00:20:20.880><c> these</c><00:20:21.120><c> are</c><00:20:21.280><c> torch</c><00:20:21.760><c> tensors</c>

00:20:22.950 --> 00:20:22.960 align:start position:0%
these arrays these are torch tensors
 

00:20:22.960 --> 00:20:25.909 align:start position:0%
these arrays these are torch tensors
you<00:20:23.120><c> see</c><00:20:23.280><c> that</c><00:20:23.360><c> we</c><00:20:23.600><c> still</c><00:20:23.840><c> get</c><00:20:24.480><c> a</c><00:20:24.640><c> tensor</c><00:20:25.039><c> back</c>

00:20:25.909 --> 00:20:25.919 align:start position:0%
you see that we still get a tensor back
 

00:20:25.919 --> 00:20:28.070 align:start position:0%
you see that we still get a tensor back
so<00:20:26.159><c> the</c><00:20:26.320><c> type</c><00:20:26.640><c> of</c><00:20:26.799><c> this</c><00:20:27.039><c> thing</c><00:20:27.600><c> you'd</c><00:20:27.760><c> think</c><00:20:28.000><c> it</c>

00:20:28.070 --> 00:20:28.080 align:start position:0%
so the type of this thing you'd think it
 

00:20:28.080 --> 00:20:29.909 align:start position:0%
so the type of this thing you'd think it
would<00:20:28.240><c> be</c><00:20:28.320><c> just</c><00:20:28.480><c> an</c><00:20:28.640><c> integer</c><00:20:29.039><c> 149</c><00:20:29.600><c> but</c><00:20:29.760><c> it's</c>

00:20:29.909 --> 00:20:29.919 align:start position:0%
would be just an integer 149 but it's
 

00:20:29.919 --> 00:20:31.909 align:start position:0%
would be just an integer 149 but it's
actually<00:20:30.080><c> a</c><00:20:30.159><c> torch.tensor</c>

00:20:31.909 --> 00:20:31.919 align:start position:0%
actually a torch.tensor
 

00:20:31.919 --> 00:20:32.870 align:start position:0%
actually a torch.tensor
and<00:20:32.159><c> so</c>

00:20:32.870 --> 00:20:32.880 align:start position:0%
and so
 

00:20:32.880 --> 00:20:35.350 align:start position:0%
and so
if<00:20:33.039><c> you</c><00:20:33.120><c> do</c><00:20:33.360><c> dot</c><00:20:33.600><c> item</c><00:20:34.320><c> then</c><00:20:34.480><c> it</c><00:20:34.559><c> will</c><00:20:34.799><c> pop</c><00:20:35.120><c> out</c>

00:20:35.350 --> 00:20:35.360 align:start position:0%
if you do dot item then it will pop out
 

00:20:35.360 --> 00:20:38.390 align:start position:0%
if you do dot item then it will pop out
that<00:20:35.600><c> in</c><00:20:36.000><c> individual</c><00:20:36.640><c> integer</c>

00:20:38.390 --> 00:20:38.400 align:start position:0%
that in individual integer
 

00:20:38.400 --> 00:20:40.630 align:start position:0%
that in individual integer
so<00:20:38.559><c> it</c><00:20:38.720><c> will</c><00:20:38.799><c> just</c><00:20:38.960><c> be</c><00:20:39.120><c> 149.</c>

00:20:40.630 --> 00:20:40.640 align:start position:0%
so it will just be 149.
 

00:20:40.640 --> 00:20:42.470 align:start position:0%
so it will just be 149.
so<00:20:40.880><c> that's</c><00:20:41.120><c> what's</c><00:20:41.360><c> happening</c><00:20:41.679><c> there</c><00:20:42.320><c> and</c>

00:20:42.470 --> 00:20:42.480 align:start position:0%
so that's what's happening there and
 

00:20:42.480 --> 00:20:43.750 align:start position:0%
so that's what's happening there and
these<00:20:42.720><c> are</c><00:20:42.799><c> just</c><00:20:42.880><c> some</c><00:20:43.120><c> options</c><00:20:43.440><c> to</c><00:20:43.520><c> make</c><00:20:43.679><c> it</c>

00:20:43.750 --> 00:20:43.760 align:start position:0%
these are just some options to make it
 

00:20:43.760 --> 00:20:45.190 align:start position:0%
these are just some options to make it
look<00:20:44.000><c> nice</c>

00:20:45.190 --> 00:20:45.200 align:start position:0%
look nice
 

00:20:45.200 --> 00:20:49.110 align:start position:0%
look nice
so<00:20:45.360><c> what</c><00:20:45.520><c> is</c><00:20:45.600><c> the</c><00:20:45.679><c> structure</c><00:20:46.000><c> of</c><00:20:46.080><c> this</c><00:20:46.320><c> array</c>

00:20:49.110 --> 00:20:49.120 align:start position:0%
 
 

00:20:49.120 --> 00:20:50.470 align:start position:0%
 
we<00:20:49.280><c> have</c><00:20:49.360><c> all</c><00:20:49.440><c> these</c><00:20:49.679><c> counts</c><00:20:49.919><c> and</c><00:20:50.080><c> we</c><00:20:50.159><c> see</c><00:20:50.320><c> that</c>

00:20:50.470 --> 00:20:50.480 align:start position:0%
we have all these counts and we see that
 

00:20:50.480 --> 00:20:52.149 align:start position:0%
we have all these counts and we see that
some<00:20:50.640><c> of</c><00:20:50.720><c> them</c><00:20:50.880><c> occur</c><00:20:51.360><c> often</c><00:20:51.840><c> and</c><00:20:51.919><c> some</c><00:20:52.080><c> of</c>

00:20:52.149 --> 00:20:52.159 align:start position:0%
some of them occur often and some of
 

00:20:52.159 --> 00:20:53.909 align:start position:0%
some of them occur often and some of
them<00:20:52.320><c> do</c><00:20:52.400><c> not</c><00:20:52.640><c> occur</c><00:20:52.960><c> often</c>

00:20:53.909 --> 00:20:53.919 align:start position:0%
them do not occur often
 

00:20:53.919 --> 00:20:55.990 align:start position:0%
them do not occur often
now<00:20:54.159><c> if</c><00:20:54.240><c> you</c><00:20:54.400><c> scrutinize</c><00:20:54.880><c> this</c><00:20:55.200><c> carefully</c><00:20:55.919><c> you</c>

00:20:55.990 --> 00:20:56.000 align:start position:0%
now if you scrutinize this carefully you
 

00:20:56.000 --> 00:20:57.110 align:start position:0%
now if you scrutinize this carefully you
will<00:20:56.159><c> notice</c><00:20:56.400><c> that</c><00:20:56.480><c> we're</c><00:20:56.640><c> not</c><00:20:56.880><c> actually</c>

00:20:57.110 --> 00:20:57.120 align:start position:0%
will notice that we're not actually
 

00:20:57.120 --> 00:20:58.549 align:start position:0%
will notice that we're not actually
being<00:20:57.280><c> very</c><00:20:57.520><c> clever</c>

00:20:58.549 --> 00:20:58.559 align:start position:0%
being very clever
 

00:20:58.559 --> 00:21:00.549 align:start position:0%
being very clever
that's<00:20:58.799><c> because</c><00:20:59.039><c> when</c><00:20:59.200><c> you</c><00:20:59.280><c> come</c><00:20:59.520><c> over</c><00:20:59.679><c> here</c>

00:21:00.549 --> 00:21:00.559 align:start position:0%
that's because when you come over here
 

00:21:00.559 --> 00:21:02.230 align:start position:0%
that's because when you come over here
you'll<00:21:00.720><c> notice</c><00:21:00.960><c> that</c><00:21:01.120><c> for</c><00:21:01.280><c> example</c><00:21:01.600><c> we</c><00:21:01.679><c> have</c>

00:21:02.230 --> 00:21:02.240 align:start position:0%
you'll notice that for example we have
 

00:21:02.240 --> 00:21:04.710 align:start position:0%
you'll notice that for example we have
an<00:21:02.400><c> entire</c><00:21:02.799><c> row</c><00:21:03.120><c> of</c><00:21:03.200><c> completely</c><00:21:03.679><c> zeros</c><00:21:04.559><c> and</c>

00:21:04.710 --> 00:21:04.720 align:start position:0%
an entire row of completely zeros and
 

00:21:04.720 --> 00:21:06.950 align:start position:0%
an entire row of completely zeros and
that's<00:21:04.960><c> because</c><00:21:05.280><c> the</c><00:21:05.520><c> end</c><00:21:05.760><c> character</c>

00:21:06.950 --> 00:21:06.960 align:start position:0%
that's because the end character
 

00:21:06.960 --> 00:21:08.630 align:start position:0%
that's because the end character
is<00:21:07.120><c> never</c><00:21:07.440><c> possibly</c><00:21:07.840><c> going</c><00:21:08.000><c> to</c><00:21:08.080><c> be</c><00:21:08.240><c> the</c><00:21:08.400><c> first</c>

00:21:08.630 --> 00:21:08.640 align:start position:0%
is never possibly going to be the first
 

00:21:08.640 --> 00:21:10.149 align:start position:0%
is never possibly going to be the first
character<00:21:08.960><c> of</c><00:21:09.039><c> a</c><00:21:09.120><c> bi-gram</c><00:21:09.760><c> because</c><00:21:10.000><c> we're</c>

00:21:10.149 --> 00:21:10.159 align:start position:0%
character of a bi-gram because we're
 

00:21:10.159 --> 00:21:12.390 align:start position:0%
character of a bi-gram because we're
always<00:21:10.400><c> placing</c><00:21:10.720><c> these</c><00:21:11.039><c> end</c><00:21:11.440><c> tokens</c><00:21:11.919><c> all</c><00:21:12.240><c> at</c>

00:21:12.390 --> 00:21:12.400 align:start position:0%
always placing these end tokens all at
 

00:21:12.400 --> 00:21:14.230 align:start position:0%
always placing these end tokens all at
the<00:21:12.559><c> end</c><00:21:12.720><c> of</c><00:21:12.799><c> the</c><00:21:12.880><c> diagram</c>

00:21:14.230 --> 00:21:14.240 align:start position:0%
the end of the diagram
 

00:21:14.240 --> 00:21:16.789 align:start position:0%
the end of the diagram
similarly<00:21:14.799><c> we</c><00:21:14.880><c> have</c><00:21:15.039><c> entire</c><00:21:15.600><c> columns</c><00:21:16.320><c> zeros</c>

00:21:16.789 --> 00:21:16.799 align:start position:0%
similarly we have entire columns zeros
 

00:21:16.799 --> 00:21:19.590 align:start position:0%
similarly we have entire columns zeros
here<00:21:17.360><c> because</c><00:21:17.760><c> the</c><00:21:18.240><c> s</c>

00:21:19.590 --> 00:21:19.600 align:start position:0%
here because the s
 

00:21:19.600 --> 00:21:21.350 align:start position:0%
here because the s
character<00:21:20.080><c> will</c><00:21:20.240><c> never</c><00:21:20.559><c> possibly</c><00:21:20.960><c> be</c><00:21:21.200><c> the</c>

00:21:21.350 --> 00:21:21.360 align:start position:0%
character will never possibly be the
 

00:21:21.360 --> 00:21:23.669 align:start position:0%
character will never possibly be the
second<00:21:22.080><c> element</c><00:21:22.400><c> of</c><00:21:22.480><c> a</c><00:21:22.559><c> bigram</c><00:21:23.280><c> because</c><00:21:23.520><c> we</c>

00:21:23.669 --> 00:21:23.679 align:start position:0%
second element of a bigram because we
 

00:21:23.679 --> 00:21:25.590 align:start position:0%
second element of a bigram because we
always<00:21:23.919><c> start</c><00:21:24.159><c> with</c><00:21:24.400><c> s</c><00:21:24.559><c> and</c><00:21:24.640><c> we</c><00:21:24.880><c> end</c><00:21:25.039><c> with</c><00:21:25.280><c> e</c>

00:21:25.590 --> 00:21:25.600 align:start position:0%
always start with s and we end with e
 

00:21:25.600 --> 00:21:27.590 align:start position:0%
always start with s and we end with e
and<00:21:25.760><c> we</c><00:21:25.919><c> only</c><00:21:26.080><c> have</c><00:21:26.159><c> the</c><00:21:26.240><c> words</c><00:21:26.559><c> in</c><00:21:26.640><c> between</c>

00:21:27.590 --> 00:21:27.600 align:start position:0%
and we only have the words in between
 

00:21:27.600 --> 00:21:30.070 align:start position:0%
and we only have the words in between
so<00:21:27.760><c> we</c><00:21:27.840><c> have</c><00:21:28.000><c> an</c><00:21:28.080><c> entire</c><00:21:28.480><c> column</c><00:21:28.960><c> of</c><00:21:29.360><c> zeros</c><00:21:29.840><c> an</c>

00:21:30.070 --> 00:21:30.080 align:start position:0%
so we have an entire column of zeros an
 

00:21:30.080 --> 00:21:32.230 align:start position:0%
so we have an entire column of zeros an
entire<00:21:30.400><c> row</c><00:21:30.640><c> of</c><00:21:30.799><c> zeros</c><00:21:31.600><c> and</c><00:21:31.760><c> in</c><00:21:31.840><c> this</c><00:21:32.000><c> little</c>

00:21:32.230 --> 00:21:32.240 align:start position:0%
entire row of zeros and in this little
 

00:21:32.240 --> 00:21:34.310 align:start position:0%
entire row of zeros and in this little
two<00:21:32.400><c> by</c><00:21:32.559><c> two</c><00:21:32.720><c> matrix</c><00:21:33.120><c> here</c><00:21:33.360><c> as</c><00:21:33.440><c> well</c><00:21:34.000><c> the</c><00:21:34.159><c> only</c>

00:21:34.310 --> 00:21:34.320 align:start position:0%
two by two matrix here as well the only
 

00:21:34.320 --> 00:21:36.789 align:start position:0%
two by two matrix here as well the only
one<00:21:34.480><c> that</c><00:21:34.720><c> can</c><00:21:34.880><c> possibly</c><00:21:35.360><c> happen</c><00:21:35.919><c> is</c><00:21:36.159><c> if</c><00:21:36.400><c> s</c>

00:21:36.789 --> 00:21:36.799 align:start position:0%
one that can possibly happen is if s
 

00:21:36.799 --> 00:21:38.470 align:start position:0%
one that can possibly happen is if s
directly<00:21:37.280><c> follows</c><00:21:37.679><c> e</c>

00:21:38.470 --> 00:21:38.480 align:start position:0%
directly follows e
 

00:21:38.480 --> 00:21:41.350 align:start position:0%
directly follows e
that<00:21:38.720><c> can</c><00:21:38.880><c> be</c><00:21:39.120><c> non-zero</c><00:21:40.080><c> if</c><00:21:40.240><c> we</c><00:21:40.400><c> have</c><00:21:40.640><c> a</c><00:21:40.799><c> word</c>

00:21:41.350 --> 00:21:41.360 align:start position:0%
that can be non-zero if we have a word
 

00:21:41.360 --> 00:21:43.590 align:start position:0%
that can be non-zero if we have a word
that<00:21:41.600><c> has</c><00:21:41.840><c> no</c><00:21:42.080><c> letters</c><00:21:42.960><c> so</c><00:21:43.120><c> in</c><00:21:43.280><c> that</c><00:21:43.360><c> case</c>

00:21:43.590 --> 00:21:43.600 align:start position:0%
that has no letters so in that case
 

00:21:43.600 --> 00:21:44.870 align:start position:0%
that has no letters so in that case
there's<00:21:43.760><c> no</c><00:21:43.919><c> letters</c><00:21:44.240><c> in</c><00:21:44.320><c> the</c><00:21:44.400><c> word</c><00:21:44.559><c> it's</c><00:21:44.720><c> an</c>

00:21:44.870 --> 00:21:44.880 align:start position:0%
there's no letters in the word it's an
 

00:21:44.880 --> 00:21:47.430 align:start position:0%
there's no letters in the word it's an
empty<00:21:45.120><c> word</c><00:21:45.440><c> and</c><00:21:45.520><c> we</c><00:21:45.600><c> just</c><00:21:45.760><c> have</c><00:21:46.000><c> s</c><00:21:46.159><c> follows</c><00:21:46.559><c> e</c>

00:21:47.430 --> 00:21:47.440 align:start position:0%
empty word and we just have s follows e
 

00:21:47.440 --> 00:21:50.070 align:start position:0%
empty word and we just have s follows e
but<00:21:47.679><c> the</c><00:21:47.919><c> other</c><00:21:48.080><c> ones</c><00:21:48.400><c> are</c><00:21:48.799><c> just</c><00:21:48.960><c> not</c><00:21:49.120><c> possible</c>

00:21:50.070 --> 00:21:50.080 align:start position:0%
but the other ones are just not possible
 

00:21:50.080 --> 00:21:51.669 align:start position:0%
but the other ones are just not possible
and<00:21:50.159><c> so</c><00:21:50.320><c> we're</c><00:21:50.480><c> basically</c><00:21:50.799><c> wasting</c><00:21:51.200><c> space</c><00:21:51.600><c> and</c>

00:21:51.669 --> 00:21:51.679 align:start position:0%
and so we're basically wasting space and
 

00:21:51.679 --> 00:21:53.669 align:start position:0%
and so we're basically wasting space and
not<00:21:51.919><c> only</c><00:21:52.159><c> that</c><00:21:52.400><c> but</c><00:21:52.640><c> the</c><00:21:52.880><c> s</c><00:21:53.039><c> and</c><00:21:53.200><c> the</c><00:21:53.360><c> e</c><00:21:53.600><c> are</c>

00:21:53.669 --> 00:21:53.679 align:start position:0%
not only that but the s and the e are
 

00:21:53.679 --> 00:21:55.510 align:start position:0%
not only that but the s and the e are
getting<00:21:53.919><c> very</c><00:21:54.159><c> crowded</c><00:21:54.640><c> here</c>

00:21:55.510 --> 00:21:55.520 align:start position:0%
getting very crowded here
 

00:21:55.520 --> 00:21:57.430 align:start position:0%
getting very crowded here
i<00:21:55.679><c> was</c><00:21:55.840><c> using</c><00:21:56.080><c> these</c><00:21:56.320><c> brackets</c><00:21:56.799><c> because</c>

00:21:57.430 --> 00:21:57.440 align:start position:0%
i was using these brackets because
 

00:21:57.440 --> 00:21:58.950 align:start position:0%
i was using these brackets because
there's<00:21:57.679><c> convention</c><00:21:58.159><c> and</c><00:21:58.240><c> natural</c><00:21:58.559><c> language</c>

00:21:58.950 --> 00:21:58.960 align:start position:0%
there's convention and natural language
 

00:21:58.960 --> 00:22:00.310 align:start position:0%
there's convention and natural language
processing<00:21:59.360><c> to</c><00:21:59.520><c> use</c><00:21:59.760><c> these</c><00:22:00.000><c> kinds</c><00:22:00.240><c> of</c>

00:22:00.310 --> 00:22:00.320 align:start position:0%
processing to use these kinds of
 

00:22:00.320 --> 00:22:03.110 align:start position:0%
processing to use these kinds of
brackets<00:22:00.720><c> to</c><00:22:00.799><c> denote</c><00:22:01.200><c> special</c><00:22:01.919><c> tokens</c>

00:22:03.110 --> 00:22:03.120 align:start position:0%
brackets to denote special tokens
 

00:22:03.120 --> 00:22:05.110 align:start position:0%
brackets to denote special tokens
but<00:22:03.280><c> we're</c><00:22:03.440><c> going</c><00:22:03.600><c> to</c><00:22:03.679><c> use</c><00:22:03.840><c> something</c><00:22:04.159><c> else</c>

00:22:05.110 --> 00:22:05.120 align:start position:0%
but we're going to use something else
 

00:22:05.120 --> 00:22:06.870 align:start position:0%
but we're going to use something else
so<00:22:05.280><c> let's</c><00:22:05.520><c> fix</c><00:22:05.760><c> all</c><00:22:05.919><c> this</c><00:22:06.320><c> and</c><00:22:06.400><c> make</c><00:22:06.640><c> it</c>

00:22:06.870 --> 00:22:06.880 align:start position:0%
so let's fix all this and make it
 

00:22:06.880 --> 00:22:08.149 align:start position:0%
so let's fix all this and make it
prettier

00:22:08.149 --> 00:22:08.159 align:start position:0%
prettier
 

00:22:08.159 --> 00:22:09.510 align:start position:0%
prettier
we're<00:22:08.320><c> not</c><00:22:08.480><c> actually</c><00:22:08.720><c> going</c><00:22:08.880><c> to</c><00:22:08.960><c> have</c><00:22:09.200><c> two</c>

00:22:09.510 --> 00:22:09.520 align:start position:0%
we're not actually going to have two
 

00:22:09.520 --> 00:22:11.110 align:start position:0%
we're not actually going to have two
special<00:22:09.919><c> tokens</c><00:22:10.240><c> we're</c><00:22:10.400><c> only</c><00:22:10.559><c> going</c><00:22:10.720><c> to</c><00:22:10.880><c> have</c>

00:22:11.110 --> 00:22:11.120 align:start position:0%
special tokens we're only going to have
 

00:22:11.120 --> 00:22:12.950 align:start position:0%
special tokens we're only going to have
one<00:22:11.440><c> special</c><00:22:11.840><c> token</c>

00:22:12.950 --> 00:22:12.960 align:start position:0%
one special token
 

00:22:12.960 --> 00:22:13.669 align:start position:0%
one special token
so

00:22:13.669 --> 00:22:13.679 align:start position:0%
so
 

00:22:13.679 --> 00:22:15.430 align:start position:0%
so
we're<00:22:13.840><c> going</c><00:22:14.000><c> to</c><00:22:14.159><c> have</c><00:22:14.400><c> n</c><00:22:14.480><c> by</c><00:22:14.799><c> n</c>

00:22:15.430 --> 00:22:15.440 align:start position:0%
we're going to have n by n
 

00:22:15.440 --> 00:22:18.789 align:start position:0%
we're going to have n by n
array<00:22:15.760><c> of</c><00:22:15.919><c> 27</c><00:22:16.320><c> by</c><00:22:16.640><c> 27</c><00:22:17.120><c> instead</c>

00:22:18.789 --> 00:22:18.799 align:start position:0%
array of 27 by 27 instead
 

00:22:18.799 --> 00:22:20.390 align:start position:0%
array of 27 by 27 instead
instead<00:22:19.120><c> of</c><00:22:19.200><c> having</c><00:22:19.600><c> two</c>

00:22:20.390 --> 00:22:20.400 align:start position:0%
instead of having two
 

00:22:20.400 --> 00:22:22.390 align:start position:0%
instead of having two
we<00:22:20.559><c> will</c><00:22:20.720><c> just</c><00:22:20.880><c> have</c><00:22:21.120><c> one</c><00:22:21.520><c> and</c><00:22:21.679><c> i</c><00:22:21.760><c> will</c><00:22:22.000><c> call</c><00:22:22.240><c> it</c>

00:22:22.390 --> 00:22:22.400 align:start position:0%
we will just have one and i will call it
 

00:22:22.400 --> 00:22:24.630 align:start position:0%
we will just have one and i will call it
a<00:22:22.559><c> dot</c>

00:22:24.630 --> 00:22:24.640 align:start position:0%
a dot
 

00:22:24.640 --> 00:22:27.270 align:start position:0%
a dot
okay

00:22:27.270 --> 00:22:27.280 align:start position:0%
okay
 

00:22:27.280 --> 00:22:30.390 align:start position:0%
okay
let<00:22:27.440><c> me</c><00:22:27.600><c> swing</c><00:22:27.919><c> this</c><00:22:28.080><c> over</c><00:22:28.400><c> here</c>

00:22:30.390 --> 00:22:30.400 align:start position:0%
let me swing this over here
 

00:22:30.400 --> 00:22:31.669 align:start position:0%
let me swing this over here
now<00:22:30.559><c> one</c><00:22:30.720><c> more</c><00:22:30.880><c> thing</c><00:22:31.039><c> that</c><00:22:31.200><c> i</c><00:22:31.280><c> would</c><00:22:31.360><c> like</c><00:22:31.520><c> to</c>

00:22:31.669 --> 00:22:31.679 align:start position:0%
now one more thing that i would like to
 

00:22:31.679 --> 00:22:33.510 align:start position:0%
now one more thing that i would like to
do<00:22:31.840><c> is</c><00:22:32.000><c> i</c><00:22:32.080><c> would</c><00:22:32.240><c> actually</c><00:22:32.559><c> like</c><00:22:32.799><c> to</c><00:22:32.960><c> make</c><00:22:33.200><c> this</c>

00:22:33.510 --> 00:22:33.520 align:start position:0%
do is i would actually like to make this
 

00:22:33.520 --> 00:22:36.149 align:start position:0%
do is i would actually like to make this
special<00:22:33.919><c> character</c><00:22:34.400><c> half</c><00:22:34.640><c> position</c><00:22:35.280><c> zero</c>

00:22:36.149 --> 00:22:36.159 align:start position:0%
special character half position zero
 

00:22:36.159 --> 00:22:37.750 align:start position:0%
special character half position zero
and<00:22:36.400><c> i</c><00:22:36.480><c> would</c><00:22:36.640><c> like</c><00:22:36.799><c> to</c><00:22:36.880><c> offset</c><00:22:37.280><c> all</c><00:22:37.440><c> the</c><00:22:37.600><c> other</c>

00:22:37.750 --> 00:22:37.760 align:start position:0%
and i would like to offset all the other
 

00:22:37.760 --> 00:22:39.750 align:start position:0%
and i would like to offset all the other
letters<00:22:38.480><c> off</c><00:22:38.880><c> i</c><00:22:38.960><c> find</c><00:22:39.200><c> that</c><00:22:39.360><c> a</c><00:22:39.440><c> little</c><00:22:39.600><c> bit</c>

00:22:39.750 --> 00:22:39.760 align:start position:0%
letters off i find that a little bit
 

00:22:39.760 --> 00:22:40.470 align:start position:0%
letters off i find that a little bit
more

00:22:40.470 --> 00:22:40.480 align:start position:0%
more
 

00:22:40.480 --> 00:22:42.549 align:start position:0%
more
pleasing

00:22:42.549 --> 00:22:42.559 align:start position:0%
pleasing
 

00:22:42.559 --> 00:22:44.630 align:start position:0%
pleasing
so

00:22:44.630 --> 00:22:44.640 align:start position:0%
so
 

00:22:44.640 --> 00:22:46.390 align:start position:0%
so
we<00:22:44.799><c> need</c><00:22:44.960><c> a</c><00:22:45.120><c> plus</c><00:22:45.360><c> one</c><00:22:45.600><c> here</c><00:22:45.919><c> so</c><00:22:46.080><c> that</c><00:22:46.320><c> the</c>

00:22:46.390 --> 00:22:46.400 align:start position:0%
we need a plus one here so that the
 

00:22:46.400 --> 00:22:48.470 align:start position:0%
we need a plus one here so that the
first<00:22:46.640><c> character</c><00:22:47.039><c> which</c><00:22:47.280><c> is</c><00:22:47.440><c> a</c><00:22:47.760><c> will</c><00:22:48.000><c> start</c><00:22:48.240><c> at</c>

00:22:48.470 --> 00:22:48.480 align:start position:0%
first character which is a will start at
 

00:22:48.480 --> 00:22:49.750 align:start position:0%
first character which is a will start at
one

00:22:49.750 --> 00:22:49.760 align:start position:0%
one
 

00:22:49.760 --> 00:22:51.190 align:start position:0%
one
so<00:22:50.080><c> s2i</c>

00:22:51.190 --> 00:22:51.200 align:start position:0%
so s2i
 

00:22:51.200 --> 00:22:55.830 align:start position:0%
so s2i
will<00:22:51.360><c> now</c><00:22:51.520><c> be</c><00:22:51.760><c> a</c><00:22:52.159><c> starts</c><00:22:52.480><c> at</c><00:22:52.640><c> one</c><00:22:53.200><c> and</c><00:22:53.919><c> dot</c><00:22:54.240><c> is</c><00:22:54.400><c> 0</c>

00:22:55.830 --> 00:22:55.840 align:start position:0%
will now be a starts at one and dot is 0
 

00:22:55.840 --> 00:22:56.710 align:start position:0%
will now be a starts at one and dot is 0
and

00:22:56.710 --> 00:22:56.720 align:start position:0%
and
 

00:22:56.720 --> 00:22:58.870 align:start position:0%
and
i2s<00:22:57.280><c> of</c><00:22:57.440><c> course</c><00:22:57.679><c> we're</c><00:22:57.919><c> not</c><00:22:58.240><c> changing</c><00:22:58.640><c> this</c>

00:22:58.870 --> 00:22:58.880 align:start position:0%
i2s of course we're not changing this
 

00:22:58.880 --> 00:23:00.470 align:start position:0%
i2s of course we're not changing this
because<00:22:59.120><c> i2s</c><00:22:59.520><c> just</c><00:22:59.760><c> creates</c><00:23:00.000><c> a</c><00:23:00.080><c> reverse</c>

00:23:00.470 --> 00:23:00.480 align:start position:0%
because i2s just creates a reverse
 

00:23:00.480 --> 00:23:02.870 align:start position:0%
because i2s just creates a reverse
mapping<00:23:00.880><c> and</c><00:23:01.039><c> this</c><00:23:01.200><c> will</c><00:23:01.360><c> work</c><00:23:01.600><c> fine</c><00:23:02.159><c> so</c><00:23:02.400><c> 1</c><00:23:02.720><c> is</c>

00:23:02.870 --> 00:23:02.880 align:start position:0%
mapping and this will work fine so 1 is
 

00:23:02.880 --> 00:23:04.310 align:start position:0%
mapping and this will work fine so 1 is
a<00:23:03.120><c> 2</c><00:23:03.360><c> is</c><00:23:03.520><c> b</c>

00:23:04.310 --> 00:23:04.320 align:start position:0%
a 2 is b
 

00:23:04.320 --> 00:23:06.470 align:start position:0%
a 2 is b
0<00:23:04.559><c> is</c><00:23:04.720><c> dot</c>

00:23:06.470 --> 00:23:06.480 align:start position:0%
0 is dot
 

00:23:06.480 --> 00:23:09.029 align:start position:0%
0 is dot
so<00:23:06.640><c> we've</c><00:23:06.799><c> reversed</c><00:23:07.280><c> that</c><00:23:07.919><c> here</c>

00:23:09.029 --> 00:23:09.039 align:start position:0%
so we've reversed that here
 

00:23:09.039 --> 00:23:10.230 align:start position:0%
so we've reversed that here
we<00:23:09.360><c> have</c>

00:23:10.230 --> 00:23:10.240 align:start position:0%
we have
 

00:23:10.240 --> 00:23:12.870 align:start position:0%
we have
a<00:23:10.400><c> dot</c><00:23:10.640><c> and</c><00:23:10.799><c> a</c><00:23:10.880><c> dot</c>

00:23:12.870 --> 00:23:12.880 align:start position:0%
a dot and a dot
 

00:23:12.880 --> 00:23:14.710 align:start position:0%
a dot and a dot
this<00:23:13.120><c> should</c><00:23:13.280><c> work</c><00:23:13.600><c> fine</c>

00:23:14.710 --> 00:23:14.720 align:start position:0%
this should work fine
 

00:23:14.720 --> 00:23:17.830 align:start position:0%
this should work fine
make<00:23:14.880><c> sure</c><00:23:15.039><c> i</c><00:23:15.120><c> start</c><00:23:15.280><c> at</c><00:23:15.440><c> zeros</c>

00:23:17.830 --> 00:23:17.840 align:start position:0%
make sure i start at zeros
 

00:23:17.840 --> 00:23:18.710 align:start position:0%
make sure i start at zeros
count

00:23:18.710 --> 00:23:18.720 align:start position:0%
count
 

00:23:18.720 --> 00:23:20.549 align:start position:0%
count
and<00:23:18.799><c> then</c><00:23:19.039><c> here</c><00:23:19.200><c> we</c><00:23:19.360><c> don't</c><00:23:19.520><c> go</c><00:23:19.679><c> up</c><00:23:19.760><c> to</c><00:23:19.840><c> 28</c><00:23:20.320><c> we</c><00:23:20.400><c> go</c>

00:23:20.549 --> 00:23:20.559 align:start position:0%
and then here we don't go up to 28 we go
 

00:23:20.559 --> 00:23:22.549 align:start position:0%
and then here we don't go up to 28 we go
up<00:23:20.640><c> to</c><00:23:20.799><c> 27</c>

00:23:22.549 --> 00:23:22.559 align:start position:0%
up to 27
 

00:23:22.559 --> 00:23:30.789 align:start position:0%
up to 27
and<00:23:22.799><c> this</c><00:23:23.039><c> should</c><00:23:23.360><c> just</c><00:23:24.000><c> work</c>

00:23:30.789 --> 00:23:30.799 align:start position:0%
 
 

00:23:30.799 --> 00:23:31.669 align:start position:0%
 
okay

00:23:31.669 --> 00:23:31.679 align:start position:0%
okay
 

00:23:31.679 --> 00:23:33.590 align:start position:0%
okay
so<00:23:31.919><c> we</c><00:23:32.000><c> see</c><00:23:32.159><c> that</c><00:23:32.480><c> dot</c><00:23:32.720><c> never</c><00:23:32.960><c> happened</c><00:23:33.440><c> it's</c>

00:23:33.590 --> 00:23:33.600 align:start position:0%
so we see that dot never happened it's
 

00:23:33.600 --> 00:23:35.350 align:start position:0%
so we see that dot never happened it's
at<00:23:33.679><c> zero</c><00:23:34.159><c> because</c><00:23:34.559><c> we</c><00:23:34.720><c> don't</c><00:23:34.960><c> have</c><00:23:35.120><c> empty</c>

00:23:35.350 --> 00:23:35.360 align:start position:0%
at zero because we don't have empty
 

00:23:35.360 --> 00:23:36.390 align:start position:0%
at zero because we don't have empty
words

00:23:36.390 --> 00:23:36.400 align:start position:0%
words
 

00:23:36.400 --> 00:23:38.950 align:start position:0%
words
then<00:23:36.720><c> this</c><00:23:36.960><c> row</c><00:23:37.280><c> here</c><00:23:37.520><c> now</c><00:23:37.919><c> is</c><00:23:38.159><c> just</c><00:23:38.480><c> uh</c><00:23:38.720><c> very</c>

00:23:38.950 --> 00:23:38.960 align:start position:0%
then this row here now is just uh very
 

00:23:38.960 --> 00:23:40.710 align:start position:0%
then this row here now is just uh very
simply<00:23:39.360><c> the</c><00:23:39.840><c> um</c>

00:23:40.710 --> 00:23:40.720 align:start position:0%
simply the um
 

00:23:40.720 --> 00:23:44.870 align:start position:0%
simply the um
counts<00:23:41.200><c> for</c><00:23:41.440><c> all</c><00:23:41.600><c> the</c><00:23:42.159><c> first</c><00:23:42.640><c> letters</c><00:23:43.520><c> so</c>

00:23:44.870 --> 00:23:44.880 align:start position:0%
counts for all the first letters so
 

00:23:44.880 --> 00:23:47.750 align:start position:0%
counts for all the first letters so
uh<00:23:45.200><c> j</c><00:23:45.600><c> starts</c><00:23:45.919><c> a</c><00:23:46.080><c> word</c><00:23:46.480><c> h</c><00:23:46.720><c> starts</c><00:23:46.960><c> a</c><00:23:47.039><c> word</c><00:23:47.520><c> i</c>

00:23:47.750 --> 00:23:47.760 align:start position:0%
uh j starts a word h starts a word i
 

00:23:47.760 --> 00:23:50.149 align:start position:0%
uh j starts a word h starts a word i
starts<00:23:48.080><c> a</c><00:23:48.159><c> word</c><00:23:48.559><c> etc</c><00:23:49.440><c> and</c><00:23:49.520><c> then</c><00:23:49.679><c> these</c><00:23:49.919><c> are</c><00:23:50.080><c> all</c>

00:23:50.149 --> 00:23:50.159 align:start position:0%
starts a word etc and then these are all
 

00:23:50.159 --> 00:23:51.750 align:start position:0%
starts a word etc and then these are all
the<00:23:50.640><c> ending</c>

00:23:51.750 --> 00:23:51.760 align:start position:0%
the ending
 

00:23:51.760 --> 00:23:52.950 align:start position:0%
the ending
characters

00:23:52.950 --> 00:23:52.960 align:start position:0%
characters
 

00:23:52.960 --> 00:23:54.630 align:start position:0%
characters
and<00:23:53.120><c> in</c><00:23:53.279><c> between</c><00:23:53.679><c> we</c><00:23:53.760><c> have</c><00:23:53.919><c> the</c><00:23:54.000><c> structure</c><00:23:54.480><c> of</c>

00:23:54.630 --> 00:23:54.640 align:start position:0%
and in between we have the structure of
 

00:23:54.640 --> 00:23:56.950 align:start position:0%
and in between we have the structure of
what<00:23:54.799><c> characters</c><00:23:55.360><c> follow</c><00:23:55.760><c> each</c><00:23:56.000><c> other</c>

00:23:56.950 --> 00:23:56.960 align:start position:0%
what characters follow each other
 

00:23:56.960 --> 00:23:59.510 align:start position:0%
what characters follow each other
so<00:23:57.120><c> this</c><00:23:57.360><c> is</c><00:23:57.440><c> the</c><00:23:58.080><c> counts</c><00:23:58.480><c> array</c><00:23:58.960><c> of</c><00:23:59.200><c> our</c>

00:23:59.510 --> 00:23:59.520 align:start position:0%
so this is the counts array of our
 

00:23:59.520 --> 00:24:00.710 align:start position:0%
so this is the counts array of our
entire

00:24:00.710 --> 00:24:00.720 align:start position:0%
entire
 

00:24:00.720 --> 00:24:03.269 align:start position:0%
entire
data<00:24:00.960><c> set</c><00:24:01.600><c> so</c><00:24:01.760><c> this</c><00:24:02.000><c> array</c><00:24:02.400><c> actually</c><00:24:02.720><c> has</c><00:24:03.039><c> all</c>

00:24:03.269 --> 00:24:03.279 align:start position:0%
data set so this array actually has all
 

00:24:03.279 --> 00:24:04.950 align:start position:0%
data set so this array actually has all
the<00:24:03.360><c> information</c><00:24:03.840><c> necessary</c><00:24:04.320><c> for</c><00:24:04.559><c> us</c><00:24:04.720><c> to</c>

00:24:04.950 --> 00:24:04.960 align:start position:0%
the information necessary for us to
 

00:24:04.960 --> 00:24:07.430 align:start position:0%
the information necessary for us to
actually<00:24:05.360><c> sample</c><00:24:05.919><c> from</c><00:24:06.080><c> this</c><00:24:06.400><c> bigram</c>

00:24:07.430 --> 00:24:07.440 align:start position:0%
actually sample from this bigram
 

00:24:07.440 --> 00:24:09.590 align:start position:0%
actually sample from this bigram
uh<00:24:07.679><c> character</c><00:24:08.000><c> level</c><00:24:08.240><c> language</c><00:24:08.559><c> model</c>

00:24:09.590 --> 00:24:09.600 align:start position:0%
uh character level language model
 

00:24:09.600 --> 00:24:11.750 align:start position:0%
uh character level language model
and<00:24:10.080><c> um</c><00:24:10.720><c> roughly</c><00:24:11.120><c> speaking</c><00:24:11.360><c> what</c><00:24:11.520><c> we're</c><00:24:11.600><c> going</c>

00:24:11.750 --> 00:24:11.760 align:start position:0%
and um roughly speaking what we're going
 

00:24:11.760 --> 00:24:13.190 align:start position:0%
and um roughly speaking what we're going
to<00:24:11.840><c> do</c><00:24:12.080><c> is</c><00:24:12.159><c> we're</c><00:24:12.400><c> just</c><00:24:12.559><c> going</c><00:24:12.720><c> to</c><00:24:12.880><c> start</c>

00:24:13.190 --> 00:24:13.200 align:start position:0%
to do is we're just going to start
 

00:24:13.200 --> 00:24:14.870 align:start position:0%
to do is we're just going to start
following<00:24:13.600><c> these</c><00:24:13.760><c> probabilities</c><00:24:14.559><c> and</c><00:24:14.640><c> these</c>

00:24:14.870 --> 00:24:14.880 align:start position:0%
following these probabilities and these
 

00:24:14.880 --> 00:24:16.710 align:start position:0%
following these probabilities and these
counts<00:24:15.600><c> and</c><00:24:15.679><c> we're</c><00:24:15.840><c> going</c><00:24:16.000><c> to</c><00:24:16.080><c> start</c><00:24:16.320><c> sampling</c>

00:24:16.710 --> 00:24:16.720 align:start position:0%
counts and we're going to start sampling
 

00:24:16.720 --> 00:24:18.710 align:start position:0%
counts and we're going to start sampling
from<00:24:16.960><c> the</c><00:24:17.520><c> from</c><00:24:17.679><c> the</c><00:24:17.760><c> model</c>

00:24:18.710 --> 00:24:18.720 align:start position:0%
from the from the model
 

00:24:18.720 --> 00:24:20.470 align:start position:0%
from the from the model
so<00:24:18.880><c> in</c><00:24:18.960><c> the</c><00:24:19.039><c> beginning</c><00:24:19.440><c> of</c><00:24:19.520><c> course</c>

00:24:20.470 --> 00:24:20.480 align:start position:0%
so in the beginning of course
 

00:24:20.480 --> 00:24:23.669 align:start position:0%
so in the beginning of course
we<00:24:20.720><c> start</c><00:24:20.960><c> with</c><00:24:21.120><c> the</c><00:24:21.279><c> dot</c><00:24:21.679><c> the</c><00:24:21.919><c> start</c><00:24:22.480><c> token</c>

00:24:23.669 --> 00:24:23.679 align:start position:0%
we start with the dot the start token
 

00:24:23.679 --> 00:24:24.549 align:start position:0%
we start with the dot the start token
dot

00:24:24.549 --> 00:24:24.559 align:start position:0%
dot
 

00:24:24.559 --> 00:24:27.430 align:start position:0%
dot
so<00:24:25.039><c> to</c><00:24:25.279><c> sample</c><00:24:25.600><c> the</c><00:24:25.760><c> first</c><00:24:26.159><c> character</c><00:24:26.880><c> of</c><00:24:27.279><c> a</c>

00:24:27.430 --> 00:24:27.440 align:start position:0%
so to sample the first character of a
 

00:24:27.440 --> 00:24:30.470 align:start position:0%
so to sample the first character of a
name<00:24:28.000><c> we're</c><00:24:28.159><c> looking</c><00:24:28.400><c> at</c><00:24:28.559><c> this</c><00:24:28.720><c> row</c><00:24:29.039><c> here</c>

00:24:30.470 --> 00:24:30.480 align:start position:0%
name we're looking at this row here
 

00:24:30.480 --> 00:24:32.630 align:start position:0%
name we're looking at this row here
so<00:24:30.640><c> we</c><00:24:30.799><c> see</c><00:24:31.120><c> that</c><00:24:31.520><c> we</c><00:24:31.679><c> have</c><00:24:31.840><c> the</c><00:24:32.080><c> counts</c><00:24:32.559><c> and</c>

00:24:32.630 --> 00:24:32.640 align:start position:0%
so we see that we have the counts and
 

00:24:32.640 --> 00:24:34.549 align:start position:0%
so we see that we have the counts and
those<00:24:32.880><c> concepts</c><00:24:33.200><c> terminally</c><00:24:33.679><c> are</c><00:24:33.840><c> telling</c><00:24:34.159><c> us</c>

00:24:34.549 --> 00:24:34.559 align:start position:0%
those concepts terminally are telling us
 

00:24:34.559 --> 00:24:37.190 align:start position:0%
those concepts terminally are telling us
how<00:24:34.880><c> often</c><00:24:35.600><c> any</c><00:24:35.840><c> one</c><00:24:36.080><c> of</c><00:24:36.159><c> these</c><00:24:36.320><c> characters</c><00:24:36.880><c> is</c>

00:24:37.190 --> 00:24:37.200 align:start position:0%
how often any one of these characters is
 

00:24:37.200 --> 00:24:39.510 align:start position:0%
how often any one of these characters is
to<00:24:37.440><c> start</c><00:24:38.000><c> a</c><00:24:38.240><c> word</c>

00:24:39.510 --> 00:24:39.520 align:start position:0%
to start a word
 

00:24:39.520 --> 00:24:41.830 align:start position:0%
to start a word
so<00:24:39.679><c> if</c><00:24:39.840><c> we</c><00:24:40.080><c> take</c><00:24:40.640><c> this</c><00:24:41.039><c> n</c>

00:24:41.830 --> 00:24:41.840 align:start position:0%
so if we take this n
 

00:24:41.840 --> 00:24:44.710 align:start position:0%
so if we take this n
and<00:24:42.000><c> we</c><00:24:42.320><c> grab</c><00:24:42.640><c> the</c><00:24:42.880><c> first</c><00:24:43.279><c> row</c>

00:24:44.710 --> 00:24:44.720 align:start position:0%
and we grab the first row
 

00:24:44.720 --> 00:24:47.430 align:start position:0%
and we grab the first row
we<00:24:44.799><c> can</c><00:24:44.960><c> do</c><00:24:45.120><c> that</c><00:24:45.360><c> by</c><00:24:46.159><c> using</c><00:24:46.559><c> just</c><00:24:46.880><c> indexing</c><00:24:47.279><c> as</c>

00:24:47.430 --> 00:24:47.440 align:start position:0%
we can do that by using just indexing as
 

00:24:47.440 --> 00:24:48.310 align:start position:0%
we can do that by using just indexing as
zero

00:24:48.310 --> 00:24:48.320 align:start position:0%
zero
 

00:24:48.320 --> 00:24:51.590 align:start position:0%
zero
and<00:24:48.480><c> then</c><00:24:48.960><c> using</c><00:24:49.600><c> this</c><00:24:49.840><c> notation</c><00:24:50.400><c> column</c><00:24:51.039><c> for</c>

00:24:51.590 --> 00:24:51.600 align:start position:0%
and then using this notation column for
 

00:24:51.600 --> 00:24:53.590 align:start position:0%
and then using this notation column for
the<00:24:51.760><c> rest</c><00:24:52.080><c> of</c><00:24:52.159><c> that</c><00:24:52.320><c> row</c>

00:24:53.590 --> 00:24:53.600 align:start position:0%
the rest of that row
 

00:24:53.600 --> 00:24:56.470 align:start position:0%
the rest of that row
so<00:24:54.159><c> n</c><00:24:54.799><c> zero</c><00:24:55.200><c> colon</c>

00:24:56.470 --> 00:24:56.480 align:start position:0%
so n zero colon
 

00:24:56.480 --> 00:24:58.789 align:start position:0%
so n zero colon
is<00:24:56.640><c> indexing</c><00:24:57.039><c> into</c><00:24:57.279><c> the</c><00:24:57.440><c> zeroth</c>

00:24:58.789 --> 00:24:58.799 align:start position:0%
is indexing into the zeroth
 

00:24:58.799 --> 00:25:00.549 align:start position:0%
is indexing into the zeroth
row<00:24:59.279><c> and</c><00:24:59.360><c> then</c><00:24:59.600><c> it's</c><00:24:59.760><c> grabbing</c><00:25:00.240><c> all</c><00:25:00.400><c> the</c>

00:25:00.549 --> 00:25:00.559 align:start position:0%
row and then it's grabbing all the
 

00:25:00.559 --> 00:25:01.909 align:start position:0%
row and then it's grabbing all the
columns

00:25:01.909 --> 00:25:01.919 align:start position:0%
columns
 

00:25:01.919 --> 00:25:03.510 align:start position:0%
columns
and<00:25:02.080><c> so</c><00:25:02.559><c> this</c><00:25:02.880><c> will</c><00:25:03.039><c> give</c><00:25:03.200><c> us</c><00:25:03.360><c> a</c>

00:25:03.510 --> 00:25:03.520 align:start position:0%
and so this will give us a
 

00:25:03.520 --> 00:25:05.190 align:start position:0%
and so this will give us a
one-dimensional<00:25:04.159><c> array</c>

00:25:05.190 --> 00:25:05.200 align:start position:0%
one-dimensional array
 

00:25:05.200 --> 00:25:08.310 align:start position:0%
one-dimensional array
of<00:25:05.360><c> the</c><00:25:05.520><c> first</c><00:25:05.760><c> row</c><00:25:06.080><c> so</c><00:25:06.320><c> zero</c><00:25:06.880><c> four</c><00:25:07.120><c> four</c><00:25:07.360><c> ten</c>

00:25:08.310 --> 00:25:08.320 align:start position:0%
of the first row so zero four four ten
 

00:25:08.320 --> 00:25:10.950 align:start position:0%
of the first row so zero four four ten
you<00:25:08.480><c> know</c><00:25:08.960><c> zero</c><00:25:09.279><c> four</c><00:25:09.520><c> four</c><00:25:09.760><c> ten</c><00:25:10.320><c> one</c><00:25:10.559><c> three</c><00:25:10.799><c> oh</c>

00:25:10.950 --> 00:25:10.960 align:start position:0%
you know zero four four ten one three oh
 

00:25:10.960 --> 00:25:13.190 align:start position:0%
you know zero four four ten one three oh
six<00:25:11.200><c> one</c><00:25:11.360><c> five</c><00:25:11.600><c> four</c><00:25:11.840><c> two</c><00:25:12.400><c> etc</c><00:25:12.880><c> it's</c><00:25:12.960><c> just</c><00:25:13.120><c> the</c>

00:25:13.190 --> 00:25:13.200 align:start position:0%
six one five four two etc it's just the
 

00:25:13.200 --> 00:25:15.669 align:start position:0%
six one five four two etc it's just the
first<00:25:13.440><c> row</c><00:25:14.320><c> the</c><00:25:14.480><c> shape</c><00:25:14.799><c> of</c><00:25:14.880><c> this</c>

00:25:15.669 --> 00:25:15.679 align:start position:0%
first row the shape of this
 

00:25:15.679 --> 00:25:19.830 align:start position:0%
first row the shape of this
is<00:25:16.240><c> 27</c><00:25:17.039><c> it's</c><00:25:17.120><c> just</c><00:25:17.279><c> the</c><00:25:17.360><c> row</c><00:25:17.600><c> of</c><00:25:17.679><c> 27</c>

00:25:19.830 --> 00:25:19.840 align:start position:0%
is 27 it's just the row of 27
 

00:25:19.840 --> 00:25:21.110 align:start position:0%
is 27 it's just the row of 27
and<00:25:20.080><c> the</c><00:25:20.240><c> other</c><00:25:20.400><c> way</c><00:25:20.559><c> that</c><00:25:20.640><c> you</c><00:25:20.720><c> can</c><00:25:20.880><c> do</c><00:25:20.960><c> this</c>

00:25:21.110 --> 00:25:21.120 align:start position:0%
and the other way that you can do this
 

00:25:21.120 --> 00:25:22.390 align:start position:0%
and the other way that you can do this
also<00:25:21.360><c> is</c><00:25:21.520><c> you</c><00:25:21.600><c> just</c><00:25:21.840><c> you</c><00:25:22.000><c> don't</c><00:25:22.159><c> need</c><00:25:22.240><c> to</c>

00:25:22.390 --> 00:25:22.400 align:start position:0%
also is you just you don't need to
 

00:25:22.400 --> 00:25:23.669 align:start position:0%
also is you just you don't need to
actually<00:25:22.720><c> give</c><00:25:22.880><c> this</c>

00:25:23.669 --> 00:25:23.679 align:start position:0%
actually give this
 

00:25:23.679 --> 00:25:26.070 align:start position:0%
actually give this
you<00:25:23.840><c> just</c><00:25:24.320><c> grab</c><00:25:24.559><c> the</c><00:25:24.720><c> zeroth</c><00:25:25.200><c> row</c><00:25:25.440><c> like</c><00:25:25.600><c> this</c>

00:25:26.070 --> 00:25:26.080 align:start position:0%
you just grab the zeroth row like this
 

00:25:26.080 --> 00:25:28.070 align:start position:0%
you just grab the zeroth row like this
this<00:25:26.320><c> is</c><00:25:26.480><c> equivalent</c>

00:25:28.070 --> 00:25:28.080 align:start position:0%
this is equivalent
 

00:25:28.080 --> 00:25:29.909 align:start position:0%
this is equivalent
now<00:25:28.320><c> these</c><00:25:28.559><c> are</c><00:25:28.640><c> the</c><00:25:28.799><c> counts</c>

00:25:29.909 --> 00:25:29.919 align:start position:0%
now these are the counts
 

00:25:29.919 --> 00:25:31.750 align:start position:0%
now these are the counts
and<00:25:30.240><c> now</c><00:25:30.720><c> what</c><00:25:30.880><c> we'd</c><00:25:31.039><c> like</c><00:25:31.200><c> to</c><00:25:31.360><c> do</c><00:25:31.520><c> is</c><00:25:31.600><c> we'd</c>

00:25:31.750 --> 00:25:31.760 align:start position:0%
and now what we'd like to do is we'd
 

00:25:31.760 --> 00:25:34.950 align:start position:0%
and now what we'd like to do is we'd
like<00:25:31.919><c> to</c><00:25:32.159><c> basically</c><00:25:32.720><c> um</c><00:25:33.279><c> sample</c><00:25:33.679><c> from</c><00:25:33.840><c> this</c>

00:25:34.950 --> 00:25:34.960 align:start position:0%
like to basically um sample from this
 

00:25:34.960 --> 00:25:36.070 align:start position:0%
like to basically um sample from this
since<00:25:35.120><c> these</c><00:25:35.360><c> are</c><00:25:35.440><c> the</c><00:25:35.520><c> raw</c><00:25:35.760><c> counts</c><00:25:36.000><c> we</c>

00:25:36.070 --> 00:25:36.080 align:start position:0%
since these are the raw counts we
 

00:25:36.080 --> 00:25:37.269 align:start position:0%
since these are the raw counts we
actually<00:25:36.320><c> have</c><00:25:36.400><c> to</c><00:25:36.480><c> convert</c><00:25:36.799><c> this</c><00:25:37.039><c> to</c>

00:25:37.269 --> 00:25:37.279 align:start position:0%
actually have to convert this to
 

00:25:37.279 --> 00:25:39.110 align:start position:0%
actually have to convert this to
probabilities

00:25:39.110 --> 00:25:39.120 align:start position:0%
probabilities
 

00:25:39.120 --> 00:25:42.789 align:start position:0%
probabilities
so<00:25:39.440><c> we</c><00:25:39.679><c> create</c><00:25:40.000><c> a</c><00:25:40.080><c> probability</c><00:25:41.039><c> vector</c>

00:25:42.789 --> 00:25:42.799 align:start position:0%
so we create a probability vector
 

00:25:42.799 --> 00:25:44.950 align:start position:0%
so we create a probability vector
so<00:25:42.960><c> we'll</c><00:25:43.200><c> take</c><00:25:43.520><c> n</c><00:25:43.679><c> of</c><00:25:43.840><c> zero</c>

00:25:44.950 --> 00:25:44.960 align:start position:0%
so we'll take n of zero
 

00:25:44.960 --> 00:25:48.149 align:start position:0%
so we'll take n of zero
and<00:25:45.200><c> we'll</c><00:25:45.440><c> actually</c><00:25:45.760><c> convert</c><00:25:46.159><c> this</c><00:25:46.559><c> to</c><00:25:47.039><c> float</c>

00:25:48.149 --> 00:25:48.159 align:start position:0%
and we'll actually convert this to float
 

00:25:48.159 --> 00:25:49.909 align:start position:0%
and we'll actually convert this to float
first

00:25:49.909 --> 00:25:49.919 align:start position:0%
first
 

00:25:49.919 --> 00:25:51.750 align:start position:0%
first
okay<00:25:50.159><c> so</c><00:25:50.320><c> these</c><00:25:50.559><c> integers</c><00:25:51.039><c> are</c><00:25:51.120><c> converted</c><00:25:51.600><c> to</c>

00:25:51.750 --> 00:25:51.760 align:start position:0%
okay so these integers are converted to
 

00:25:51.760 --> 00:25:52.710 align:start position:0%
okay so these integers are converted to
float

00:25:52.710 --> 00:25:52.720 align:start position:0%
float
 

00:25:52.720 --> 00:25:54.549 align:start position:0%
float
floating<00:25:53.039><c> point</c><00:25:53.279><c> numbers</c><00:25:54.000><c> and</c><00:25:54.159><c> the</c><00:25:54.320><c> reason</c>

00:25:54.549 --> 00:25:54.559 align:start position:0%
floating point numbers and the reason
 

00:25:54.559 --> 00:25:56.230 align:start position:0%
floating point numbers and the reason
we're<00:25:54.880><c> creating</c><00:25:55.200><c> floats</c><00:25:55.600><c> is</c><00:25:55.679><c> because</c><00:25:56.000><c> we're</c>

00:25:56.230 --> 00:25:56.240 align:start position:0%
we're creating floats is because we're
 

00:25:56.240 --> 00:25:58.789 align:start position:0%
we're creating floats is because we're
about<00:25:56.480><c> to</c><00:25:56.720><c> normalize</c><00:25:57.279><c> these</c><00:25:57.600><c> counts</c>

00:25:58.789 --> 00:25:58.799 align:start position:0%
about to normalize these counts
 

00:25:58.799 --> 00:26:00.789 align:start position:0%
about to normalize these counts
so<00:25:58.960><c> to</c><00:25:59.120><c> create</c><00:25:59.279><c> a</c><00:25:59.440><c> probability</c><00:26:00.080><c> distribution</c>

00:26:00.789 --> 00:26:00.799 align:start position:0%
so to create a probability distribution
 

00:26:00.799 --> 00:26:03.750 align:start position:0%
so to create a probability distribution
here<00:26:01.360><c> we</c><00:26:01.520><c> want</c><00:26:01.679><c> to</c><00:26:01.840><c> divide</c>

00:26:03.750 --> 00:26:03.760 align:start position:0%
here we want to divide
 

00:26:03.760 --> 00:26:05.909 align:start position:0%
here we want to divide
we<00:26:03.919><c> basically</c><00:26:04.240><c> want</c><00:26:04.320><c> to</c><00:26:04.400><c> do</c><00:26:04.559><c> p</c><00:26:04.880><c> p</c><00:26:05.200><c> p</c><00:26:05.360><c> divide</c><00:26:05.760><c> p</c>

00:26:05.909 --> 00:26:05.919 align:start position:0%
we basically want to do p p p divide p
 

00:26:05.919 --> 00:26:09.590 align:start position:0%
we basically want to do p p p divide p
that<00:26:06.159><c> sum</c>

00:26:09.590 --> 00:26:09.600 align:start position:0%
 
 

00:26:09.600 --> 00:26:11.430 align:start position:0%
 
and<00:26:09.760><c> now</c><00:26:09.919><c> we</c><00:26:10.000><c> get</c><00:26:10.159><c> a</c><00:26:10.320><c> vector</c><00:26:10.720><c> of</c><00:26:11.039><c> smaller</c>

00:26:11.430 --> 00:26:11.440 align:start position:0%
and now we get a vector of smaller
 

00:26:11.440 --> 00:26:13.669 align:start position:0%
and now we get a vector of smaller
numbers<00:26:12.000><c> and</c><00:26:12.080><c> these</c><00:26:12.320><c> are</c><00:26:12.400><c> now</c><00:26:12.640><c> probabilities</c>

00:26:13.669 --> 00:26:13.679 align:start position:0%
numbers and these are now probabilities
 

00:26:13.679 --> 00:26:15.190 align:start position:0%
numbers and these are now probabilities
so<00:26:13.919><c> of</c><00:26:14.000><c> course</c><00:26:14.240><c> because</c><00:26:14.480><c> we</c><00:26:14.559><c> divided</c><00:26:14.960><c> by</c><00:26:15.039><c> the</c>

00:26:15.190 --> 00:26:15.200 align:start position:0%
so of course because we divided by the
 

00:26:15.200 --> 00:26:18.710 align:start position:0%
so of course because we divided by the
sum<00:26:15.840><c> the</c><00:26:16.000><c> sum</c><00:26:16.320><c> of</c><00:26:16.480><c> p</c><00:26:16.720><c> now</c><00:26:17.200><c> is</c><00:26:17.919><c> 1.</c>

00:26:18.710 --> 00:26:18.720 align:start position:0%
sum the sum of p now is 1.
 

00:26:18.720 --> 00:26:20.390 align:start position:0%
sum the sum of p now is 1.
so<00:26:18.880><c> this</c><00:26:19.039><c> is</c><00:26:19.200><c> a</c><00:26:19.279><c> nice</c><00:26:19.600><c> proper</c><00:26:19.919><c> probability</c>

00:26:20.390 --> 00:26:20.400 align:start position:0%
so this is a nice proper probability
 

00:26:20.400 --> 00:26:22.549 align:start position:0%
so this is a nice proper probability
distribution<00:26:21.039><c> it</c><00:26:21.120><c> sums</c><00:26:21.440><c> to</c><00:26:21.600><c> 1</c><00:26:22.159><c> and</c><00:26:22.320><c> this</c><00:26:22.480><c> is</c>

00:26:22.549 --> 00:26:22.559 align:start position:0%
distribution it sums to 1 and this is
 

00:26:22.559 --> 00:26:24.310 align:start position:0%
distribution it sums to 1 and this is
giving<00:26:22.799><c> us</c><00:26:22.880><c> the</c><00:26:22.960><c> probability</c><00:26:23.520><c> for</c><00:26:23.760><c> any</c><00:26:24.000><c> single</c>

00:26:24.310 --> 00:26:24.320 align:start position:0%
giving us the probability for any single
 

00:26:24.320 --> 00:26:25.990 align:start position:0%
giving us the probability for any single
character<00:26:24.640><c> to</c><00:26:24.799><c> be</c><00:26:24.960><c> the</c><00:26:25.120><c> first</c>

00:26:25.990 --> 00:26:26.000 align:start position:0%
character to be the first
 

00:26:26.000 --> 00:26:27.909 align:start position:0%
character to be the first
character<00:26:26.320><c> of</c><00:26:26.480><c> a</c><00:26:26.559><c> word</c>

00:26:27.909 --> 00:26:27.919 align:start position:0%
character of a word
 

00:26:27.919 --> 00:26:29.590 align:start position:0%
character of a word
so<00:26:28.240><c> now</c><00:26:28.400><c> we</c><00:26:28.559><c> can</c><00:26:28.640><c> try</c><00:26:28.799><c> to</c><00:26:28.960><c> sample</c><00:26:29.279><c> from</c><00:26:29.440><c> this</c>

00:26:29.590 --> 00:26:29.600 align:start position:0%
so now we can try to sample from this
 

00:26:29.600 --> 00:26:31.510 align:start position:0%
so now we can try to sample from this
distribution<00:26:30.640><c> to</c><00:26:30.880><c> sample</c><00:26:31.200><c> from</c><00:26:31.360><c> these</c>

00:26:31.510 --> 00:26:31.520 align:start position:0%
distribution to sample from these
 

00:26:31.520 --> 00:26:32.990 align:start position:0%
distribution to sample from these
distributions<00:26:32.080><c> we're</c><00:26:32.240><c> going</c><00:26:32.400><c> to</c><00:26:32.559><c> use</c>

00:26:32.990 --> 00:26:33.000 align:start position:0%
distributions we're going to use
 

00:26:33.000 --> 00:26:34.870 align:start position:0%
distributions we're going to use
storch.multinomial<00:26:34.080><c> which</c><00:26:34.240><c> i've</c><00:26:34.480><c> pulled</c><00:26:34.720><c> up</c>

00:26:34.870 --> 00:26:34.880 align:start position:0%
storch.multinomial which i've pulled up
 

00:26:34.880 --> 00:26:36.070 align:start position:0%
storch.multinomial which i've pulled up
here

00:26:36.070 --> 00:26:36.080 align:start position:0%
here
 

00:26:36.080 --> 00:26:40.470 align:start position:0%
here
so<00:26:36.360><c> torch.multinomial</c><00:26:37.520><c> returns</c><00:26:38.159><c> uh</c>

00:26:40.470 --> 00:26:40.480 align:start position:0%
 
 

00:26:40.480 --> 00:26:42.230 align:start position:0%
 
samples<00:26:40.799><c> from</c><00:26:40.960><c> the</c><00:26:41.039><c> multinomial</c><00:26:41.760><c> probability</c>

00:26:42.230 --> 00:26:42.240 align:start position:0%
samples from the multinomial probability
 

00:26:42.240 --> 00:26:44.310 align:start position:0%
samples from the multinomial probability
distribution<00:26:43.200><c> which</c><00:26:43.360><c> is</c><00:26:43.520><c> a</c><00:26:43.600><c> complicated</c><00:26:44.080><c> way</c>

00:26:44.310 --> 00:26:44.320 align:start position:0%
distribution which is a complicated way
 

00:26:44.320 --> 00:26:46.390 align:start position:0%
distribution which is a complicated way
of<00:26:44.480><c> saying</c><00:26:45.039><c> you</c><00:26:45.200><c> give</c><00:26:45.360><c> me</c><00:26:45.520><c> probabilities</c><00:26:46.320><c> and</c>

00:26:46.390 --> 00:26:46.400 align:start position:0%
of saying you give me probabilities and
 

00:26:46.400 --> 00:26:48.390 align:start position:0%
of saying you give me probabilities and
i<00:26:46.559><c> will</c><00:26:46.720><c> give</c><00:26:46.880><c> you</c><00:26:47.039><c> integers</c><00:26:48.000><c> which</c><00:26:48.240><c> are</c>

00:26:48.390 --> 00:26:48.400 align:start position:0%
i will give you integers which are
 

00:26:48.400 --> 00:26:49.430 align:start position:0%
i will give you integers which are
sampled

00:26:49.430 --> 00:26:49.440 align:start position:0%
sampled
 

00:26:49.440 --> 00:26:51.510 align:start position:0%
sampled
according<00:26:49.760><c> to</c><00:26:49.840><c> the</c><00:26:50.000><c> property</c><00:26:50.400><c> distribution</c>

00:26:51.510 --> 00:26:51.520 align:start position:0%
according to the property distribution
 

00:26:51.520 --> 00:26:53.110 align:start position:0%
according to the property distribution
so<00:26:51.679><c> this</c><00:26:51.760><c> is</c><00:26:51.840><c> the</c><00:26:51.919><c> signature</c><00:26:52.320><c> of</c><00:26:52.400><c> the</c><00:26:52.480><c> method</c>

00:26:53.110 --> 00:26:53.120 align:start position:0%
so this is the signature of the method
 

00:26:53.120 --> 00:26:54.710 align:start position:0%
so this is the signature of the method
and<00:26:53.279><c> to</c><00:26:53.360><c> make</c><00:26:53.600><c> everything</c><00:26:53.840><c> deterministic</c>

00:26:54.710 --> 00:26:54.720 align:start position:0%
and to make everything deterministic
 

00:26:54.720 --> 00:26:57.350 align:start position:0%
and to make everything deterministic
we're<00:26:54.880><c> going</c><00:26:55.039><c> to</c><00:26:55.279><c> use</c><00:26:55.840><c> a</c><00:26:56.159><c> generator</c><00:26:56.799><c> object</c><00:26:57.279><c> in</c>

00:26:57.350 --> 00:26:57.360 align:start position:0%
we're going to use a generator object in
 

00:26:57.360 --> 00:26:59.190 align:start position:0%
we're going to use a generator object in
pytorch

00:26:59.190 --> 00:26:59.200 align:start position:0%
pytorch
 

00:26:59.200 --> 00:27:00.870 align:start position:0%
pytorch
so<00:26:59.360><c> this</c><00:26:59.600><c> makes</c><00:26:59.840><c> everything</c><00:27:00.080><c> deterministic</c>

00:27:00.870 --> 00:27:00.880 align:start position:0%
so this makes everything deterministic
 

00:27:00.880 --> 00:27:02.470 align:start position:0%
so this makes everything deterministic
so<00:27:01.200><c> when</c><00:27:01.360><c> you</c><00:27:01.520><c> run</c><00:27:01.679><c> this</c><00:27:01.919><c> on</c><00:27:02.000><c> your</c><00:27:02.159><c> computer</c>

00:27:02.470 --> 00:27:02.480 align:start position:0%
so when you run this on your computer
 

00:27:02.480 --> 00:27:04.070 align:start position:0%
so when you run this on your computer
you're<00:27:02.640><c> going</c><00:27:02.799><c> to</c><00:27:02.880><c> the</c><00:27:03.039><c> exact</c><00:27:03.440><c> get</c><00:27:03.679><c> the</c><00:27:03.760><c> exact</c>

00:27:04.070 --> 00:27:04.080 align:start position:0%
you're going to the exact get the exact
 

00:27:04.080 --> 00:27:05.830 align:start position:0%
you're going to the exact get the exact
same<00:27:04.240><c> results</c><00:27:04.559><c> that</c><00:27:04.720><c> i'm</c><00:27:04.880><c> getting</c><00:27:05.200><c> here</c><00:27:05.520><c> on</c><00:27:05.600><c> my</c>

00:27:05.830 --> 00:27:05.840 align:start position:0%
same results that i'm getting here on my
 

00:27:05.840 --> 00:27:07.190 align:start position:0%
same results that i'm getting here on my
computer

00:27:07.190 --> 00:27:07.200 align:start position:0%
computer
 

00:27:07.200 --> 00:27:12.630 align:start position:0%
computer
so<00:27:07.600><c> let</c><00:27:07.760><c> me</c><00:27:07.840><c> show</c><00:27:08.000><c> you</c><00:27:08.080><c> how</c><00:27:08.240><c> this</c><00:27:08.400><c> works</c>

00:27:12.630 --> 00:27:12.640 align:start position:0%
 
 

00:27:12.640 --> 00:27:15.350 align:start position:0%
 
here's<00:27:12.880><c> the</c><00:27:12.960><c> deterministic</c><00:27:13.600><c> way</c><00:27:14.320><c> of</c><00:27:14.880><c> creating</c>

00:27:15.350 --> 00:27:15.360 align:start position:0%
here's the deterministic way of creating
 

00:27:15.360 --> 00:27:18.149 align:start position:0%
here's the deterministic way of creating
a<00:27:15.760><c> torch</c><00:27:16.240><c> generator</c><00:27:16.799><c> object</c>

00:27:18.149 --> 00:27:18.159 align:start position:0%
a torch generator object
 

00:27:18.159 --> 00:27:19.990 align:start position:0%
a torch generator object
seeding<00:27:18.559><c> it</c><00:27:18.720><c> with</c><00:27:18.960><c> some</c><00:27:19.120><c> number</c><00:27:19.520><c> that</c><00:27:19.679><c> we</c><00:27:19.760><c> can</c>

00:27:19.990 --> 00:27:20.000 align:start position:0%
seeding it with some number that we can
 

00:27:20.000 --> 00:27:21.190 align:start position:0%
seeding it with some number that we can
agree<00:27:20.240><c> on</c>

00:27:21.190 --> 00:27:21.200 align:start position:0%
agree on
 

00:27:21.200 --> 00:27:23.590 align:start position:0%
agree on
so<00:27:21.360><c> that</c><00:27:21.600><c> seeds</c><00:27:21.919><c> a</c><00:27:22.080><c> generator</c><00:27:23.039><c> gets</c><00:27:23.279><c> gives</c><00:27:23.440><c> us</c>

00:27:23.590 --> 00:27:23.600 align:start position:0%
so that seeds a generator gets gives us
 

00:27:23.600 --> 00:27:24.789 align:start position:0%
so that seeds a generator gets gives us
an<00:27:23.679><c> object</c><00:27:24.000><c> g</c>

00:27:24.789 --> 00:27:24.799 align:start position:0%
an object g
 

00:27:24.799 --> 00:27:26.470 align:start position:0%
an object g
and<00:27:24.960><c> then</c><00:27:25.039><c> we</c><00:27:25.200><c> can</c><00:27:25.279><c> pass</c><00:27:25.520><c> that</c><00:27:25.760><c> g</c>

00:27:26.470 --> 00:27:26.480 align:start position:0%
and then we can pass that g
 

00:27:26.480 --> 00:27:28.310 align:start position:0%
and then we can pass that g
to<00:27:26.720><c> a</c><00:27:27.200><c> function</c>

00:27:28.310 --> 00:27:28.320 align:start position:0%
to a function
 

00:27:28.320 --> 00:27:30.149 align:start position:0%
to a function
that<00:27:28.559><c> creates</c><00:27:29.200><c> um</c>

00:27:30.149 --> 00:27:30.159 align:start position:0%
that creates um
 

00:27:30.159 --> 00:27:32.630 align:start position:0%
that creates um
here<00:27:30.559><c> random</c><00:27:30.880><c> numbers</c><00:27:31.679><c> twerk.rand</c><00:27:32.399><c> creates</c>

00:27:32.630 --> 00:27:32.640 align:start position:0%
here random numbers twerk.rand creates
 

00:27:32.640 --> 00:27:35.190 align:start position:0%
here random numbers twerk.rand creates
random<00:27:32.960><c> numbers</c><00:27:33.919><c> three</c><00:27:34.159><c> of</c><00:27:34.240><c> them</c>

00:27:35.190 --> 00:27:35.200 align:start position:0%
random numbers three of them
 

00:27:35.200 --> 00:27:37.510 align:start position:0%
random numbers three of them
and<00:27:35.360><c> it's</c><00:27:35.520><c> using</c><00:27:35.760><c> this</c><00:27:35.919><c> generator</c><00:27:36.480><c> object</c><00:27:37.039><c> to</c>

00:27:37.510 --> 00:27:37.520 align:start position:0%
and it's using this generator object to
 

00:27:37.520 --> 00:27:40.389 align:start position:0%
and it's using this generator object to
as<00:27:37.679><c> a</c><00:27:37.760><c> source</c><00:27:38.000><c> of</c><00:27:38.159><c> randomness</c>

00:27:40.389 --> 00:27:40.399 align:start position:0%
as a source of randomness
 

00:27:40.399 --> 00:27:41.830 align:start position:0%
as a source of randomness
so

00:27:41.830 --> 00:27:41.840 align:start position:0%
so
 

00:27:41.840 --> 00:27:44.230 align:start position:0%
so
without<00:27:42.240><c> normalizing</c><00:27:42.799><c> it</c>

00:27:44.230 --> 00:27:44.240 align:start position:0%
without normalizing it
 

00:27:44.240 --> 00:27:46.470 align:start position:0%
without normalizing it
i<00:27:44.320><c> can</c><00:27:44.480><c> just</c><00:27:44.720><c> print</c>

00:27:46.470 --> 00:27:46.480 align:start position:0%
i can just print
 

00:27:46.480 --> 00:27:48.389 align:start position:0%
i can just print
this<00:27:46.720><c> is</c><00:27:46.799><c> sort</c><00:27:46.960><c> of</c><00:27:47.120><c> like</c><00:27:47.440><c> numbers</c><00:27:47.760><c> between</c><00:27:48.080><c> 0</c>

00:27:48.389 --> 00:27:48.399 align:start position:0%
this is sort of like numbers between 0
 

00:27:48.399 --> 00:27:50.710 align:start position:0%
this is sort of like numbers between 0
and<00:27:48.559><c> 1</c><00:27:48.880><c> that</c><00:27:49.120><c> are</c><00:27:49.279><c> random</c><00:27:49.760><c> according</c><00:27:50.159><c> to</c><00:27:50.320><c> this</c>

00:27:50.710 --> 00:27:50.720 align:start position:0%
and 1 that are random according to this
 

00:27:50.720 --> 00:27:53.029 align:start position:0%
and 1 that are random according to this
thing<00:27:51.120><c> and</c><00:27:51.279><c> whenever</c><00:27:51.600><c> i</c><00:27:51.760><c> run</c><00:27:52.000><c> it</c><00:27:52.159><c> again</c>

00:27:53.029 --> 00:27:53.039 align:start position:0%
thing and whenever i run it again
 

00:27:53.039 --> 00:27:54.549 align:start position:0%
thing and whenever i run it again
i'm<00:27:53.200><c> always</c><00:27:53.440><c> going</c><00:27:53.520><c> to</c><00:27:53.600><c> get</c><00:27:53.760><c> the</c><00:27:53.840><c> same</c><00:27:54.000><c> result</c>

00:27:54.549 --> 00:27:54.559 align:start position:0%
i'm always going to get the same result
 

00:27:54.559 --> 00:27:56.230 align:start position:0%
i'm always going to get the same result
because<00:27:54.880><c> i</c><00:27:54.960><c> keep</c><00:27:55.200><c> using</c><00:27:55.440><c> the</c><00:27:55.520><c> same</c><00:27:55.760><c> generator</c>

00:27:56.230 --> 00:27:56.240 align:start position:0%
because i keep using the same generator
 

00:27:56.240 --> 00:27:58.710 align:start position:0%
because i keep using the same generator
object<00:27:56.559><c> which</c><00:27:56.799><c> i'm</c><00:27:56.960><c> seeing</c><00:27:57.360><c> here</c>

00:27:58.710 --> 00:27:58.720 align:start position:0%
object which i'm seeing here
 

00:27:58.720 --> 00:28:01.590 align:start position:0%
object which i'm seeing here
and<00:27:58.799><c> then</c><00:27:59.039><c> if</c><00:27:59.200><c> i</c><00:27:59.279><c> divide</c>

00:28:01.590 --> 00:28:01.600 align:start position:0%
and then if i divide
 

00:28:01.600 --> 00:28:03.990 align:start position:0%
and then if i divide
to<00:28:01.840><c> normalize</c><00:28:02.799><c> i'm</c><00:28:03.039><c> going</c><00:28:03.200><c> to</c><00:28:03.360><c> get</c><00:28:03.679><c> a</c><00:28:03.760><c> nice</c>

00:28:03.990 --> 00:28:04.000 align:start position:0%
to normalize i'm going to get a nice
 

00:28:04.000 --> 00:28:05.909 align:start position:0%
to normalize i'm going to get a nice
probability<00:28:04.399><c> distribution</c><00:28:05.120><c> of</c><00:28:05.279><c> just</c><00:28:05.679><c> three</c>

00:28:05.909 --> 00:28:05.919 align:start position:0%
probability distribution of just three
 

00:28:05.919 --> 00:28:07.510 align:start position:0%
probability distribution of just three
elements

00:28:07.510 --> 00:28:07.520 align:start position:0%
elements
 

00:28:07.520 --> 00:28:09.269 align:start position:0%
elements
and<00:28:07.600><c> then</c><00:28:07.760><c> we</c><00:28:07.919><c> can</c><00:28:08.000><c> use</c><00:28:08.240><c> torsion</c><00:28:08.559><c> multinomial</c>

00:28:09.269 --> 00:28:09.279 align:start position:0%
and then we can use torsion multinomial
 

00:28:09.279 --> 00:28:11.590 align:start position:0%
and then we can use torsion multinomial
to<00:28:09.440><c> draw</c><00:28:09.760><c> samples</c><00:28:10.159><c> from</c><00:28:10.399><c> it</c><00:28:11.039><c> so</c><00:28:11.200><c> this</c><00:28:11.360><c> is</c><00:28:11.440><c> what</c>

00:28:11.590 --> 00:28:11.600 align:start position:0%
to draw samples from it so this is what
 

00:28:11.600 --> 00:28:13.590 align:start position:0%
to draw samples from it so this is what
that<00:28:11.840><c> looks</c><00:28:12.080><c> like</c>

00:28:13.590 --> 00:28:13.600 align:start position:0%
that looks like
 

00:28:13.600 --> 00:28:16.710 align:start position:0%
that looks like
tertiary<00:28:14.000><c> multinomial</c><00:28:14.960><c> we'll</c><00:28:15.200><c> take</c><00:28:16.240><c> the</c>

00:28:16.710 --> 00:28:16.720 align:start position:0%
tertiary multinomial we'll take the
 

00:28:16.720 --> 00:28:18.310 align:start position:0%
tertiary multinomial we'll take the
torch<00:28:17.039><c> tensor</c>

00:28:18.310 --> 00:28:18.320 align:start position:0%
torch tensor
 

00:28:18.320 --> 00:28:20.950 align:start position:0%
torch tensor
of<00:28:18.480><c> probability</c><00:28:18.880><c> distributions</c>

00:28:20.950 --> 00:28:20.960 align:start position:0%
of probability distributions
 

00:28:20.960 --> 00:28:22.470 align:start position:0%
of probability distributions
then<00:28:21.120><c> we</c><00:28:21.200><c> can</c><00:28:21.360><c> ask</c><00:28:21.600><c> for</c><00:28:21.760><c> a</c><00:28:21.840><c> number</c><00:28:22.000><c> of</c><00:28:22.080><c> samples</c>

00:28:22.470 --> 00:28:22.480 align:start position:0%
then we can ask for a number of samples
 

00:28:22.480 --> 00:28:24.470 align:start position:0%
then we can ask for a number of samples
let's<00:28:22.640><c> say</c><00:28:22.880><c> 20.</c>

00:28:24.470 --> 00:28:24.480 align:start position:0%
let's say 20.
 

00:28:24.480 --> 00:28:26.950 align:start position:0%
let's say 20.
replacement<00:28:25.039><c> equals</c><00:28:25.360><c> true</c><00:28:25.840><c> means</c><00:28:26.480><c> that</c><00:28:26.799><c> when</c>

00:28:26.950 --> 00:28:26.960 align:start position:0%
replacement equals true means that when
 

00:28:26.960 --> 00:28:28.789 align:start position:0%
replacement equals true means that when
we<00:28:27.120><c> draw</c><00:28:27.440><c> an</c><00:28:27.679><c> element</c>

00:28:28.789 --> 00:28:28.799 align:start position:0%
we draw an element
 

00:28:28.799 --> 00:28:30.870 align:start position:0%
we draw an element
we<00:28:28.960><c> will</c><00:28:29.440><c> uh</c><00:28:29.679><c> we</c><00:28:29.840><c> can</c><00:28:30.000><c> draw</c><00:28:30.320><c> it</c><00:28:30.559><c> and</c><00:28:30.640><c> then</c><00:28:30.799><c> we</c>

00:28:30.870 --> 00:28:30.880 align:start position:0%
we will uh we can draw it and then we
 

00:28:30.880 --> 00:28:32.950 align:start position:0%
we will uh we can draw it and then we
can<00:28:31.039><c> put</c><00:28:31.200><c> it</c><00:28:31.360><c> back</c><00:28:31.679><c> into</c><00:28:32.000><c> the</c><00:28:32.559><c> list</c><00:28:32.799><c> of</c>

00:28:32.950 --> 00:28:32.960 align:start position:0%
can put it back into the list of
 

00:28:32.960 --> 00:28:35.750 align:start position:0%
can put it back into the list of
eligible<00:28:33.760><c> indices</c><00:28:34.240><c> to</c><00:28:34.399><c> draw</c><00:28:34.799><c> again</c>

00:28:35.750 --> 00:28:35.760 align:start position:0%
eligible indices to draw again
 

00:28:35.760 --> 00:28:37.430 align:start position:0%
eligible indices to draw again
and<00:28:36.000><c> we</c><00:28:36.159><c> have</c><00:28:36.240><c> to</c><00:28:36.399><c> specify</c><00:28:36.799><c> replacement</c><00:28:37.279><c> as</c>

00:28:37.430 --> 00:28:37.440 align:start position:0%
and we have to specify replacement as
 

00:28:37.440 --> 00:28:39.750 align:start position:0%
and we have to specify replacement as
true<00:28:37.760><c> because</c><00:28:38.080><c> by</c><00:28:38.240><c> default</c><00:28:38.960><c> uh</c><00:28:39.440><c> for</c><00:28:39.600><c> some</c>

00:28:39.750 --> 00:28:39.760 align:start position:0%
true because by default uh for some
 

00:28:39.760 --> 00:28:41.510 align:start position:0%
true because by default uh for some
reason<00:28:40.159><c> it's</c><00:28:40.399><c> false</c>

00:28:41.510 --> 00:28:41.520 align:start position:0%
reason it's false
 

00:28:41.520 --> 00:28:42.950 align:start position:0%
reason it's false
and<00:28:41.679><c> i</c><00:28:41.760><c> think</c>

00:28:42.950 --> 00:28:42.960 align:start position:0%
and i think
 

00:28:42.960 --> 00:28:44.230 align:start position:0%
and i think
you<00:28:43.039><c> know</c><00:28:43.440><c> it's</c><00:28:43.600><c> just</c><00:28:43.760><c> something</c><00:28:44.080><c> to</c><00:28:44.159><c> be</c>

00:28:44.230 --> 00:28:44.240 align:start position:0%
you know it's just something to be
 

00:28:44.240 --> 00:28:45.669 align:start position:0%
you know it's just something to be
careful<00:28:44.559><c> with</c>

00:28:45.669 --> 00:28:45.679 align:start position:0%
careful with
 

00:28:45.679 --> 00:28:47.590 align:start position:0%
careful with
and<00:28:45.840><c> the</c><00:28:46.000><c> generator</c><00:28:46.399><c> is</c><00:28:46.559><c> passed</c><00:28:46.799><c> in</c><00:28:46.960><c> here</c><00:28:47.360><c> so</c>

00:28:47.590 --> 00:28:47.600 align:start position:0%
and the generator is passed in here so
 

00:28:47.600 --> 00:28:49.269 align:start position:0%
and the generator is passed in here so
we're<00:28:47.840><c> going</c><00:28:48.000><c> to</c><00:28:48.159><c> always</c><00:28:48.399><c> get</c><00:28:48.559><c> deterministic</c>

00:28:49.269 --> 00:28:49.279 align:start position:0%
we're going to always get deterministic
 

00:28:49.279 --> 00:28:51.830 align:start position:0%
we're going to always get deterministic
results<00:28:50.080><c> the</c><00:28:50.159><c> same</c><00:28:50.399><c> results</c><00:28:51.200><c> so</c><00:28:51.360><c> if</c><00:28:51.520><c> i</c><00:28:51.600><c> run</c>

00:28:51.830 --> 00:28:51.840 align:start position:0%
results the same results so if i run
 

00:28:51.840 --> 00:28:53.669 align:start position:0%
results the same results so if i run
these<00:28:52.240><c> two</c>

00:28:53.669 --> 00:28:53.679 align:start position:0%
these two
 

00:28:53.679 --> 00:28:55.269 align:start position:0%
these two
we're<00:28:53.919><c> going</c><00:28:54.000><c> to</c><00:28:54.159><c> get</c><00:28:54.240><c> a</c><00:28:54.320><c> bunch</c><00:28:54.480><c> of</c><00:28:54.640><c> samples</c>

00:28:55.269 --> 00:28:55.279 align:start position:0%
we're going to get a bunch of samples
 

00:28:55.279 --> 00:28:57.110 align:start position:0%
we're going to get a bunch of samples
from<00:28:55.440><c> this</c><00:28:55.600><c> distribution</c>

00:28:57.110 --> 00:28:57.120 align:start position:0%
from this distribution
 

00:28:57.120 --> 00:28:58.870 align:start position:0%
from this distribution
now<00:28:57.760><c> you'll</c><00:28:57.919><c> notice</c><00:28:58.240><c> here</c><00:28:58.480><c> that</c><00:28:58.720><c> the</c>

00:28:58.870 --> 00:28:58.880 align:start position:0%
now you'll notice here that the
 

00:28:58.880 --> 00:29:00.389 align:start position:0%
now you'll notice here that the
probability<00:28:59.440><c> for</c><00:28:59.600><c> the</c>

00:29:00.389 --> 00:29:00.399 align:start position:0%
probability for the
 

00:29:00.399 --> 00:29:04.470 align:start position:0%
probability for the
first<00:29:00.720><c> element</c><00:29:01.279><c> in</c><00:29:01.360><c> this</c><00:29:01.600><c> tensor</c><00:29:02.399><c> is</c><00:29:02.799><c> 60</c>

00:29:04.470 --> 00:29:04.480 align:start position:0%
first element in this tensor is 60
 

00:29:04.480 --> 00:29:08.230 align:start position:0%
first element in this tensor is 60
so<00:29:04.960><c> in</c><00:29:05.120><c> these</c><00:29:05.440><c> 20</c><00:29:05.760><c> samples</c><00:29:06.399><c> we'd</c><00:29:06.640><c> expect</c><00:29:07.440><c> 60</c><00:29:08.159><c> of</c>

00:29:08.230 --> 00:29:08.240 align:start position:0%
so in these 20 samples we'd expect 60 of
 

00:29:08.240 --> 00:29:10.549 align:start position:0%
so in these 20 samples we'd expect 60 of
them<00:29:08.640><c> to</c><00:29:08.799><c> be</c><00:29:09.039><c> zero</c>

00:29:10.549 --> 00:29:10.559 align:start position:0%
them to be zero
 

00:29:10.559 --> 00:29:12.789 align:start position:0%
them to be zero
we'd<00:29:10.880><c> expect</c><00:29:11.600><c> thirty</c><00:29:11.840><c> percent</c><00:29:12.159><c> of</c><00:29:12.240><c> them</c><00:29:12.399><c> to</c><00:29:12.559><c> be</c>

00:29:12.789 --> 00:29:12.799 align:start position:0%
we'd expect thirty percent of them to be
 

00:29:12.799 --> 00:29:14.149 align:start position:0%
we'd expect thirty percent of them to be
one

00:29:14.149 --> 00:29:14.159 align:start position:0%
one
 

00:29:14.159 --> 00:29:17.430 align:start position:0%
one
and<00:29:14.399><c> because</c><00:29:14.720><c> the</c><00:29:15.120><c> the</c><00:29:15.279><c> element</c><00:29:16.000><c> index</c><00:29:16.480><c> two</c>

00:29:17.430 --> 00:29:17.440 align:start position:0%
and because the the element index two
 

00:29:17.440 --> 00:29:19.669 align:start position:0%
and because the the element index two
has<00:29:17.679><c> only</c><00:29:17.919><c> ten</c><00:29:18.080><c> percent</c><00:29:18.399><c> probability</c><00:29:19.440><c> very</c>

00:29:19.669 --> 00:29:19.679 align:start position:0%
has only ten percent probability very
 

00:29:19.679 --> 00:29:22.230 align:start position:0%
has only ten percent probability very
few<00:29:19.919><c> of</c><00:29:20.000><c> these</c><00:29:20.159><c> samples</c><00:29:20.799><c> should</c><00:29:21.039><c> be</c><00:29:21.440><c> two</c><00:29:22.080><c> and</c>

00:29:22.230 --> 00:29:22.240 align:start position:0%
few of these samples should be two and
 

00:29:22.240 --> 00:29:24.070 align:start position:0%
few of these samples should be two and
indeed<00:29:22.559><c> we</c><00:29:22.720><c> only</c><00:29:22.880><c> have</c><00:29:23.039><c> a</c><00:29:23.520><c> small</c><00:29:23.760><c> number</c><00:29:24.000><c> of</c>

00:29:24.070 --> 00:29:24.080 align:start position:0%
indeed we only have a small number of
 

00:29:24.080 --> 00:29:25.269 align:start position:0%
indeed we only have a small number of
twos

00:29:25.269 --> 00:29:25.279 align:start position:0%
twos
 

00:29:25.279 --> 00:29:28.870 align:start position:0%
twos
and<00:29:25.440><c> we</c><00:29:25.520><c> can</c><00:29:25.919><c> sample</c><00:29:26.240><c> as</c><00:29:26.320><c> many</c><00:29:26.559><c> as</c><00:29:26.720><c> we'd</c><00:29:26.880><c> like</c>

00:29:28.870 --> 00:29:28.880 align:start position:0%
and we can sample as many as we'd like
 

00:29:28.880 --> 00:29:31.029 align:start position:0%
and we can sample as many as we'd like
and<00:29:29.039><c> the</c><00:29:29.200><c> more</c><00:29:29.360><c> we</c><00:29:29.520><c> sample</c><00:29:29.919><c> the</c><00:29:30.080><c> more</c>

00:29:31.029 --> 00:29:31.039 align:start position:0%
and the more we sample the more
 

00:29:31.039 --> 00:29:33.269 align:start position:0%
and the more we sample the more
these<00:29:31.279><c> numbers</c><00:29:31.840><c> should</c><00:29:32.240><c> um</c><00:29:32.640><c> roughly</c><00:29:32.960><c> have</c><00:29:33.120><c> the</c>

00:29:33.269 --> 00:29:33.279 align:start position:0%
these numbers should um roughly have the
 

00:29:33.279 --> 00:29:35.830 align:start position:0%
these numbers should um roughly have the
distribution<00:29:34.320><c> here</c>

00:29:35.830 --> 00:29:35.840 align:start position:0%
distribution here
 

00:29:35.840 --> 00:29:38.310 align:start position:0%
distribution here
so<00:29:36.159><c> we</c><00:29:36.320><c> should</c><00:29:36.559><c> have</c><00:29:36.799><c> lots</c><00:29:37.120><c> of</c><00:29:37.200><c> zeros</c>

00:29:38.310 --> 00:29:38.320 align:start position:0%
so we should have lots of zeros
 

00:29:38.320 --> 00:29:41.590 align:start position:0%
so we should have lots of zeros
half<00:29:38.640><c> as</c><00:29:38.840><c> many</c><00:29:39.679><c> um</c>

00:29:41.590 --> 00:29:41.600 align:start position:0%
half as many um
 

00:29:41.600 --> 00:29:44.870 align:start position:0%
half as many um
ones<00:29:42.399><c> and</c><00:29:42.480><c> we</c><00:29:42.640><c> should</c><00:29:42.880><c> have</c><00:29:43.360><c> um</c><00:29:44.080><c> three</c><00:29:44.320><c> times</c>

00:29:44.870 --> 00:29:44.880 align:start position:0%
ones and we should have um three times
 

00:29:44.880 --> 00:29:46.070 align:start position:0%
ones and we should have um three times
as<00:29:45.120><c> few</c>

00:29:46.070 --> 00:29:46.080 align:start position:0%
as few
 

00:29:46.080 --> 00:29:49.029 align:start position:0%
as few
oh<00:29:46.320><c> sorry</c><00:29:46.640><c> s</c><00:29:46.799><c> few</c><00:29:47.360><c> ones</c><00:29:48.080><c> and</c><00:29:48.399><c> three</c><00:29:48.559><c> times</c><00:29:48.880><c> as</c>

00:29:49.029 --> 00:29:49.039 align:start position:0%
oh sorry s few ones and three times as
 

00:29:49.039 --> 00:29:50.470 align:start position:0%
oh sorry s few ones and three times as
few<00:29:49.520><c> uh</c>

00:29:50.470 --> 00:29:50.480 align:start position:0%
few uh
 

00:29:50.480 --> 00:29:51.669 align:start position:0%
few uh
twos

00:29:51.669 --> 00:29:51.679 align:start position:0%
twos
 

00:29:51.679 --> 00:29:53.430 align:start position:0%
twos
so<00:29:51.840><c> you</c><00:29:51.919><c> see</c><00:29:52.080><c> that</c><00:29:52.240><c> we</c><00:29:52.320><c> have</c><00:29:52.399><c> very</c><00:29:52.559><c> few</c><00:29:52.799><c> twos</c><00:29:53.279><c> we</c>

00:29:53.430 --> 00:29:53.440 align:start position:0%
so you see that we have very few twos we
 

00:29:53.440 --> 00:29:55.669 align:start position:0%
so you see that we have very few twos we
have<00:29:53.600><c> some</c><00:29:53.840><c> ones</c><00:29:54.240><c> and</c><00:29:54.399><c> most</c><00:29:54.640><c> of</c><00:29:54.720><c> them</c><00:29:54.880><c> are</c><00:29:54.960><c> zero</c>

00:29:55.669 --> 00:29:55.679 align:start position:0%
have some ones and most of them are zero
 

00:29:55.679 --> 00:29:57.590 align:start position:0%
have some ones and most of them are zero
so<00:29:55.919><c> that's</c><00:29:56.159><c> what</c><00:29:56.559><c> torsion</c><00:29:56.880><c> multinomial</c><00:29:57.520><c> is</c>

00:29:57.590 --> 00:29:57.600 align:start position:0%
so that's what torsion multinomial is
 

00:29:57.600 --> 00:29:58.789 align:start position:0%
so that's what torsion multinomial is
doing

00:29:58.789 --> 00:29:58.799 align:start position:0%
doing
 

00:29:58.799 --> 00:30:01.029 align:start position:0%
doing
for<00:29:59.039><c> us</c><00:29:59.279><c> here</c>

00:30:01.029 --> 00:30:01.039 align:start position:0%
for us here
 

00:30:01.039 --> 00:30:02.549 align:start position:0%
for us here
we<00:30:01.200><c> are</c><00:30:01.360><c> interested</c><00:30:01.679><c> in</c><00:30:01.760><c> this</c><00:30:02.000><c> row</c><00:30:02.320><c> we've</c>

00:30:02.549 --> 00:30:02.559 align:start position:0%
we are interested in this row we've
 

00:30:02.559 --> 00:30:05.590 align:start position:0%
we are interested in this row we've
created<00:30:02.880><c> this</c>

00:30:05.590 --> 00:30:05.600 align:start position:0%
 
 

00:30:05.600 --> 00:30:06.789 align:start position:0%
 
p<00:30:05.840><c> here</c>

00:30:06.789 --> 00:30:06.799 align:start position:0%
p here
 

00:30:06.799 --> 00:30:09.590 align:start position:0%
p here
and<00:30:06.880><c> now</c><00:30:07.120><c> we</c><00:30:07.200><c> can</c><00:30:07.360><c> sample</c><00:30:07.679><c> from</c><00:30:07.919><c> it</c>

00:30:09.590 --> 00:30:09.600 align:start position:0%
and now we can sample from it
 

00:30:09.600 --> 00:30:11.350 align:start position:0%
and now we can sample from it
so<00:30:09.840><c> if</c><00:30:10.000><c> we</c><00:30:10.159><c> use</c><00:30:10.399><c> the</c><00:30:10.559><c> same</c>

00:30:11.350 --> 00:30:11.360 align:start position:0%
so if we use the same
 

00:30:11.360 --> 00:30:12.789 align:start position:0%
so if we use the same
seed

00:30:12.789 --> 00:30:12.799 align:start position:0%
seed
 

00:30:12.799 --> 00:30:14.389 align:start position:0%
seed
and<00:30:12.960><c> then</c><00:30:13.200><c> we</c><00:30:13.760><c> sample</c><00:30:14.080><c> from</c><00:30:14.240><c> this</c>

00:30:14.389 --> 00:30:14.399 align:start position:0%
and then we sample from this
 

00:30:14.399 --> 00:30:18.070 align:start position:0%
and then we sample from this
distribution<00:30:15.120><c> let's</c><00:30:15.279><c> just</c><00:30:15.360><c> get</c><00:30:15.520><c> one</c><00:30:15.760><c> sample</c>

00:30:18.070 --> 00:30:18.080 align:start position:0%
distribution let's just get one sample
 

00:30:18.080 --> 00:30:22.630 align:start position:0%
distribution let's just get one sample
then<00:30:18.480><c> we</c><00:30:18.640><c> see</c><00:30:18.880><c> that</c><00:30:19.039><c> the</c><00:30:19.200><c> sample</c><00:30:19.600><c> is</c><00:30:19.840><c> say</c><00:30:20.080><c> 13.</c>

00:30:22.630 --> 00:30:22.640 align:start position:0%
then we see that the sample is say 13.
 

00:30:22.640 --> 00:30:25.190 align:start position:0%
then we see that the sample is say 13.
so<00:30:22.960><c> this</c><00:30:23.120><c> will</c><00:30:23.279><c> be</c><00:30:23.440><c> the</c><00:30:23.760><c> index</c>

00:30:25.190 --> 00:30:25.200 align:start position:0%
so this will be the index
 

00:30:25.200 --> 00:30:27.350 align:start position:0%
so this will be the index
and<00:30:25.360><c> let's</c><00:30:25.840><c> you</c><00:30:26.000><c> see</c><00:30:26.159><c> how</c><00:30:26.320><c> it's</c><00:30:26.480><c> a</c><00:30:26.559><c> tensor</c><00:30:27.120><c> that</c>

00:30:27.350 --> 00:30:27.360 align:start position:0%
and let's you see how it's a tensor that
 

00:30:27.360 --> 00:30:30.389 align:start position:0%
and let's you see how it's a tensor that
wraps<00:30:27.760><c> 13</c><00:30:28.640><c> we</c><00:30:28.880><c> again</c><00:30:29.120><c> have</c><00:30:29.279><c> to</c><00:30:29.360><c> use</c><00:30:29.600><c> that</c><00:30:29.919><c> item</c>

00:30:30.389 --> 00:30:30.399 align:start position:0%
wraps 13 we again have to use that item
 

00:30:30.399 --> 00:30:32.870 align:start position:0%
wraps 13 we again have to use that item
to<00:30:30.640><c> pop</c><00:30:30.880><c> out</c><00:30:31.279><c> that</c><00:30:31.840><c> integer</c>

00:30:32.870 --> 00:30:32.880 align:start position:0%
to pop out that integer
 

00:30:32.880 --> 00:30:35.269 align:start position:0%
to pop out that integer
and<00:30:33.039><c> now</c><00:30:33.360><c> index</c><00:30:33.840><c> would</c><00:30:34.000><c> be</c><00:30:34.720><c> just</c><00:30:34.960><c> the</c><00:30:35.039><c> number</c>

00:30:35.269 --> 00:30:35.279 align:start position:0%
and now index would be just the number
 

00:30:35.279 --> 00:30:37.350 align:start position:0%
and now index would be just the number
13.

00:30:37.350 --> 00:30:37.360 align:start position:0%
13.
 

00:30:37.360 --> 00:30:40.149 align:start position:0%
13.
and<00:30:37.520><c> of</c><00:30:37.600><c> course</c><00:30:38.000><c> the</c><00:30:38.399><c> um</c><00:30:38.960><c> we</c><00:30:39.120><c> can</c><00:30:39.279><c> do</c>

00:30:40.149 --> 00:30:40.159 align:start position:0%
and of course the um we can do
 

00:30:40.159 --> 00:30:43.510 align:start position:0%
and of course the um we can do
we<00:30:40.320><c> can</c><00:30:40.480><c> map</c><00:30:40.799><c> the</c><00:30:41.039><c> i2s</c><00:30:41.919><c> of</c><00:30:42.240><c> ix</c><00:30:42.799><c> to</c><00:30:42.960><c> figure</c><00:30:43.279><c> out</c>

00:30:43.510 --> 00:30:43.520 align:start position:0%
we can map the i2s of ix to figure out
 

00:30:43.520 --> 00:30:45.029 align:start position:0%
we can map the i2s of ix to figure out
exactly<00:30:43.840><c> which</c><00:30:44.080><c> character</c>

00:30:45.029 --> 00:30:45.039 align:start position:0%
exactly which character
 

00:30:45.039 --> 00:30:47.990 align:start position:0%
exactly which character
we're<00:30:45.279><c> sampling</c><00:30:45.600><c> here</c><00:30:45.919><c> we're</c><00:30:46.080><c> sampling</c><00:30:46.559><c> m</c>

00:30:47.990 --> 00:30:48.000 align:start position:0%
we're sampling here we're sampling m
 

00:30:48.000 --> 00:30:50.070 align:start position:0%
we're sampling here we're sampling m
so<00:30:48.240><c> we're</c><00:30:48.399><c> saying</c><00:30:48.640><c> that</c><00:30:48.720><c> the</c><00:30:48.799><c> first</c><00:30:49.039><c> character</c>

00:30:50.070 --> 00:30:50.080 align:start position:0%
so we're saying that the first character
 

00:30:50.080 --> 00:30:51.110 align:start position:0%
so we're saying that the first character
is

00:30:51.110 --> 00:30:51.120 align:start position:0%
is
 

00:30:51.120 --> 00:30:53.029 align:start position:0%
is
in<00:30:51.360><c> our</c><00:30:51.760><c> generation</c>

00:30:53.029 --> 00:30:53.039 align:start position:0%
in our generation
 

00:30:53.039 --> 00:30:55.110 align:start position:0%
in our generation
and<00:30:53.360><c> just</c><00:30:53.520><c> looking</c><00:30:53.760><c> at</c><00:30:53.840><c> the</c><00:30:53.919><c> road</c><00:30:54.159><c> here</c>

00:30:55.110 --> 00:30:55.120 align:start position:0%
and just looking at the road here
 

00:30:55.120 --> 00:30:57.190 align:start position:0%
and just looking at the road here
m<00:30:55.360><c> was</c><00:30:55.520><c> drawn</c><00:30:56.080><c> and</c><00:30:56.159><c> you</c><00:30:56.399><c> we</c><00:30:56.480><c> can</c><00:30:56.559><c> see</c><00:30:56.720><c> that</c><00:30:56.960><c> m</c>

00:30:57.190 --> 00:30:57.200 align:start position:0%
m was drawn and you we can see that m
 

00:30:57.200 --> 00:30:59.669 align:start position:0%
m was drawn and you we can see that m
actually<00:30:57.760><c> starts</c><00:30:58.159><c> a</c><00:30:58.240><c> large</c><00:30:58.480><c> number</c><00:30:58.720><c> of</c><00:30:58.799><c> words</c>

00:30:59.669 --> 00:30:59.679 align:start position:0%
actually starts a large number of words
 

00:30:59.679 --> 00:31:01.029 align:start position:0%
actually starts a large number of words
uh<00:31:00.080><c> m</c>

00:31:01.029 --> 00:31:01.039 align:start position:0%
uh m
 

00:31:01.039 --> 00:31:04.630 align:start position:0%
uh m
started<00:31:01.519><c> 2</c><00:31:02.000><c> 500</c><00:31:02.559><c> words</c><00:31:02.960><c> out</c><00:31:03.120><c> of</c><00:31:03.200><c> 32</c><00:31:03.760><c> 000</c><00:31:04.080><c> words</c>

00:31:04.630 --> 00:31:04.640 align:start position:0%
started 2 500 words out of 32 000 words
 

00:31:04.640 --> 00:31:06.230 align:start position:0%
started 2 500 words out of 32 000 words
so<00:31:04.960><c> almost</c>

00:31:06.230 --> 00:31:06.240 align:start position:0%
so almost
 

00:31:06.240 --> 00:31:07.909 align:start position:0%
so almost
a<00:31:06.320><c> bit</c><00:31:06.480><c> less</c><00:31:06.640><c> than</c><00:31:06.799><c> 10</c><00:31:06.960><c> percent</c><00:31:07.279><c> of</c><00:31:07.360><c> the</c><00:31:07.519><c> words</c>

00:31:07.909 --> 00:31:07.919 align:start position:0%
a bit less than 10 percent of the words
 

00:31:07.919 --> 00:31:09.750 align:start position:0%
a bit less than 10 percent of the words
start<00:31:08.159><c> with</c><00:31:08.399><c> them</c><00:31:08.960><c> so</c><00:31:09.120><c> this</c><00:31:09.279><c> was</c><00:31:09.440><c> actually</c><00:31:09.679><c> a</c>

00:31:09.750 --> 00:31:09.760 align:start position:0%
start with them so this was actually a
 

00:31:09.760 --> 00:31:13.190 align:start position:0%
start with them so this was actually a
fairly<00:31:10.159><c> likely</c><00:31:10.640><c> character</c><00:31:11.039><c> to</c><00:31:11.200><c> draw</c>

00:31:13.190 --> 00:31:13.200 align:start position:0%
fairly likely character to draw
 

00:31:13.200 --> 00:31:15.110 align:start position:0%
fairly likely character to draw
um

00:31:15.110 --> 00:31:15.120 align:start position:0%
um
 

00:31:15.120 --> 00:31:16.470 align:start position:0%
um
so<00:31:15.279><c> that</c><00:31:15.360><c> would</c><00:31:15.519><c> be</c><00:31:15.600><c> the</c><00:31:15.679><c> first</c><00:31:15.919><c> character</c><00:31:16.320><c> of</c>

00:31:16.470 --> 00:31:16.480 align:start position:0%
so that would be the first character of
 

00:31:16.480 --> 00:31:18.070 align:start position:0%
so that would be the first character of
our<00:31:16.559><c> work</c><00:31:16.960><c> and</c><00:31:17.120><c> now</c><00:31:17.279><c> we</c><00:31:17.360><c> can</c><00:31:17.519><c> continue</c><00:31:17.919><c> to</c>

00:31:18.070 --> 00:31:18.080 align:start position:0%
our work and now we can continue to
 

00:31:18.080 --> 00:31:20.470 align:start position:0%
our work and now we can continue to
sample<00:31:18.480><c> more</c><00:31:18.720><c> characters</c><00:31:19.679><c> because</c><00:31:20.000><c> now</c><00:31:20.320><c> we</c>

00:31:20.470 --> 00:31:20.480 align:start position:0%
sample more characters because now we
 

00:31:20.480 --> 00:31:22.870 align:start position:0%
sample more characters because now we
know<00:31:20.640><c> that</c><00:31:20.960><c> m</c><00:31:21.519><c> started</c>

00:31:22.870 --> 00:31:22.880 align:start position:0%
know that m started
 

00:31:22.880 --> 00:31:24.630 align:start position:0%
know that m started
m<00:31:23.120><c> is</c><00:31:23.279><c> already</c><00:31:23.600><c> sampled</c>

00:31:24.630 --> 00:31:24.640 align:start position:0%
m is already sampled
 

00:31:24.640 --> 00:31:26.870 align:start position:0%
m is already sampled
so<00:31:24.799><c> now</c><00:31:24.960><c> to</c><00:31:25.120><c> draw</c><00:31:25.279><c> the</c><00:31:25.519><c> next</c><00:31:25.760><c> character</c><00:31:26.720><c> we</c>

00:31:26.870 --> 00:31:26.880 align:start position:0%
so now to draw the next character we
 

00:31:26.880 --> 00:31:29.509 align:start position:0%
so now to draw the next character we
will<00:31:27.039><c> come</c><00:31:27.279><c> back</c><00:31:27.760><c> here</c><00:31:28.480><c> and</c><00:31:28.559><c> we</c><00:31:28.720><c> will</c><00:31:28.960><c> look</c><00:31:29.279><c> for</c>

00:31:29.509 --> 00:31:29.519 align:start position:0%
will come back here and we will look for
 

00:31:29.519 --> 00:31:30.870 align:start position:0%
will come back here and we will look for
the<00:31:29.760><c> row</c>

00:31:30.870 --> 00:31:30.880 align:start position:0%
the row
 

00:31:30.880 --> 00:31:32.630 align:start position:0%
the row
that<00:31:31.279><c> starts</c><00:31:31.600><c> with</c><00:31:31.760><c> m</c>

00:31:32.630 --> 00:31:32.640 align:start position:0%
that starts with m
 

00:31:32.640 --> 00:31:34.549 align:start position:0%
that starts with m
so<00:31:32.799><c> you</c><00:31:32.960><c> see</c><00:31:33.279><c> m</c>

00:31:34.549 --> 00:31:34.559 align:start position:0%
so you see m
 

00:31:34.559 --> 00:31:36.549 align:start position:0%
so you see m
and<00:31:34.799><c> we</c><00:31:34.960><c> have</c><00:31:35.120><c> a</c><00:31:35.279><c> row</c><00:31:35.600><c> here</c>

00:31:36.549 --> 00:31:36.559 align:start position:0%
and we have a row here
 

00:31:36.559 --> 00:31:39.430 align:start position:0%
and we have a row here
so<00:31:36.799><c> we</c><00:31:36.880><c> see</c><00:31:37.039><c> that</c><00:31:37.279><c> m</c><00:31:37.440><c> dot</c><00:31:38.240><c> is</c>

00:31:39.430 --> 00:31:39.440 align:start position:0%
so we see that m dot is
 

00:31:39.440 --> 00:31:43.190 align:start position:0%
so we see that m dot is
516<00:31:40.640><c> m</c><00:31:40.880><c> a</c><00:31:41.200><c> is</c><00:31:41.360><c> this</c><00:31:41.519><c> many</c><00:31:41.919><c> and</c><00:31:42.159><c> b</c><00:31:42.399><c> is</c><00:31:42.480><c> this</c><00:31:42.720><c> many</c>

00:31:43.190 --> 00:31:43.200 align:start position:0%
516 m a is this many and b is this many
 

00:31:43.200 --> 00:31:44.950 align:start position:0%
516 m a is this many and b is this many
etc<00:31:43.679><c> so</c><00:31:43.840><c> these</c><00:31:44.000><c> are</c><00:31:44.080><c> the</c><00:31:44.240><c> counts</c><00:31:44.480><c> for</c><00:31:44.640><c> the</c><00:31:44.720><c> next</c>

00:31:44.950 --> 00:31:44.960 align:start position:0%
etc so these are the counts for the next
 

00:31:44.960 --> 00:31:46.549 align:start position:0%
etc so these are the counts for the next
row<00:31:45.519><c> and</c><00:31:45.600><c> that's</c><00:31:45.840><c> the</c><00:31:45.919><c> next</c><00:31:46.080><c> character</c><00:31:46.480><c> that</c>

00:31:46.549 --> 00:31:46.559 align:start position:0%
row and that's the next character that
 

00:31:46.559 --> 00:31:48.549 align:start position:0%
row and that's the next character that
we<00:31:46.720><c> are</c><00:31:46.799><c> going</c><00:31:46.960><c> to</c><00:31:47.039><c> now</c><00:31:47.600><c> generate</c>

00:31:48.549 --> 00:31:48.559 align:start position:0%
we are going to now generate
 

00:31:48.559 --> 00:31:49.990 align:start position:0%
we are going to now generate
so<00:31:48.720><c> i</c><00:31:48.799><c> think</c><00:31:48.880><c> we</c><00:31:49.039><c> are</c><00:31:49.200><c> ready</c><00:31:49.360><c> to</c><00:31:49.519><c> actually</c><00:31:49.760><c> just</c>

00:31:49.990 --> 00:31:50.000 align:start position:0%
so i think we are ready to actually just
 

00:31:50.000 --> 00:31:51.590 align:start position:0%
so i think we are ready to actually just
write<00:31:50.240><c> out</c><00:31:50.480><c> the</c><00:31:50.640><c> loop</c><00:31:51.120><c> because</c><00:31:51.360><c> i</c><00:31:51.440><c> think</c>

00:31:51.590 --> 00:31:51.600 align:start position:0%
write out the loop because i think
 

00:31:51.600 --> 00:31:52.710 align:start position:0%
write out the loop because i think
you're<00:31:51.760><c> starting</c><00:31:52.000><c> to</c><00:31:52.080><c> get</c><00:31:52.159><c> a</c><00:31:52.240><c> sense</c><00:31:52.480><c> of</c><00:31:52.559><c> how</c>

00:31:52.710 --> 00:31:52.720 align:start position:0%
you're starting to get a sense of how
 

00:31:52.720 --> 00:31:54.470 align:start position:0%
you're starting to get a sense of how
this<00:31:52.960><c> is</c><00:31:53.039><c> going</c><00:31:53.200><c> to</c><00:31:53.360><c> go</c>

00:31:54.470 --> 00:31:54.480 align:start position:0%
this is going to go
 

00:31:54.480 --> 00:31:56.149 align:start position:0%
this is going to go
the<00:31:54.960><c> um</c>

00:31:56.149 --> 00:31:56.159 align:start position:0%
the um
 

00:31:56.159 --> 00:31:57.830 align:start position:0%
the um
we<00:31:56.399><c> always</c><00:31:56.640><c> begin</c><00:31:57.039><c> at</c>

00:31:57.830 --> 00:31:57.840 align:start position:0%
we always begin at
 

00:31:57.840 --> 00:32:02.310 align:start position:0%
we always begin at
index<00:31:58.559><c> 0</c><00:31:58.960><c> because</c><00:31:59.120><c> that's</c><00:31:59.360><c> the</c><00:31:59.519><c> start</c><00:32:00.159><c> token</c>

00:32:02.310 --> 00:32:02.320 align:start position:0%
index 0 because that's the start token
 

00:32:02.320 --> 00:32:04.870 align:start position:0%
index 0 because that's the start token
and<00:32:02.480><c> then</c><00:32:02.880><c> while</c><00:32:03.200><c> true</c>

00:32:04.870 --> 00:32:04.880 align:start position:0%
and then while true
 

00:32:04.880 --> 00:32:06.070 align:start position:0%
and then while true
we're<00:32:05.039><c> going</c><00:32:05.200><c> to</c><00:32:05.360><c> grab</c><00:32:05.600><c> the</c><00:32:05.760><c> row</c>

00:32:06.070 --> 00:32:06.080 align:start position:0%
we're going to grab the row
 

00:32:06.080 --> 00:32:08.389 align:start position:0%
we're going to grab the row
corresponding<00:32:06.880><c> to</c><00:32:07.279><c> index</c>

00:32:08.389 --> 00:32:08.399 align:start position:0%
corresponding to index
 

00:32:08.399 --> 00:32:11.110 align:start position:0%
corresponding to index
that<00:32:08.559><c> we're</c><00:32:08.799><c> currently</c><00:32:09.279><c> on</c><00:32:09.679><c> so</c><00:32:09.840><c> that's</c><00:32:10.159><c> p</c>

00:32:11.110 --> 00:32:11.120 align:start position:0%
that we're currently on so that's p
 

00:32:11.120 --> 00:32:14.389 align:start position:0%
that we're currently on so that's p
so<00:32:11.279><c> that's</c><00:32:11.919><c> n</c><00:32:12.399><c> array</c><00:32:12.799><c> at</c><00:32:13.039><c> ix</c>

00:32:14.389 --> 00:32:14.399 align:start position:0%
so that's n array at ix
 

00:32:14.399 --> 00:32:19.029 align:start position:0%
so that's n array at ix
converted<00:32:14.880><c> to</c><00:32:15.039><c> float</c><00:32:15.679><c> is</c><00:32:16.080><c> rp</c>

00:32:19.029 --> 00:32:19.039 align:start position:0%
 
 

00:32:19.039 --> 00:32:21.190 align:start position:0%
 
then<00:32:19.519><c> we</c><00:32:19.760><c> normalize</c>

00:32:21.190 --> 00:32:21.200 align:start position:0%
then we normalize
 

00:32:21.200 --> 00:32:25.269 align:start position:0%
then we normalize
this<00:32:21.440><c> p</c><00:32:21.840><c> to</c><00:32:22.000><c> sum</c><00:32:22.240><c> to</c><00:32:22.399><c> one</c>

00:32:25.269 --> 00:32:25.279 align:start position:0%
 
 

00:32:25.279 --> 00:32:28.230 align:start position:0%
 
i<00:32:25.440><c> accidentally</c><00:32:26.000><c> ran</c><00:32:26.240><c> the</c><00:32:26.799><c> infinite</c><00:32:27.200><c> loop</c><00:32:28.080><c> we</c>

00:32:28.230 --> 00:32:28.240 align:start position:0%
i accidentally ran the infinite loop we
 

00:32:28.240 --> 00:32:30.710 align:start position:0%
i accidentally ran the infinite loop we
normalize<00:32:28.880><c> p</c><00:32:29.120><c> to</c><00:32:29.279><c> something</c><00:32:29.600><c> one</c>

00:32:30.710 --> 00:32:30.720 align:start position:0%
normalize p to something one
 

00:32:30.720 --> 00:32:33.750 align:start position:0%
normalize p to something one
then<00:32:30.880><c> we</c><00:32:30.960><c> need</c><00:32:31.120><c> this</c><00:32:31.279><c> generator</c><00:32:31.840><c> object</c>

00:32:33.750 --> 00:32:33.760 align:start position:0%
then we need this generator object
 

00:32:33.760 --> 00:32:35.590 align:start position:0%
then we need this generator object
now<00:32:34.000><c> we're</c><00:32:34.080><c> going</c><00:32:34.240><c> to</c><00:32:34.320><c> initialize</c><00:32:34.799><c> up</c><00:32:34.960><c> here</c>

00:32:35.590 --> 00:32:35.600 align:start position:0%
now we're going to initialize up here
 

00:32:35.600 --> 00:32:36.950 align:start position:0%
now we're going to initialize up here
and<00:32:35.679><c> we're</c><00:32:35.840><c> going</c><00:32:36.000><c> to</c><00:32:36.080><c> draw</c><00:32:36.320><c> a</c><00:32:36.399><c> single</c><00:32:36.720><c> sample</c>

00:32:36.950 --> 00:32:36.960 align:start position:0%
and we're going to draw a single sample
 

00:32:36.960 --> 00:32:40.789 align:start position:0%
and we're going to draw a single sample
from<00:32:37.120><c> this</c><00:32:37.279><c> distribution</c>

00:32:40.789 --> 00:32:40.799 align:start position:0%
 
 

00:32:40.799 --> 00:32:42.789 align:start position:0%
 
and<00:32:40.960><c> then</c><00:32:41.200><c> this</c><00:32:41.519><c> is</c><00:32:41.679><c> going</c><00:32:41.840><c> to</c><00:32:42.000><c> tell</c><00:32:42.240><c> us</c><00:32:42.480><c> what</c>

00:32:42.789 --> 00:32:42.799 align:start position:0%
and then this is going to tell us what
 

00:32:42.799 --> 00:32:46.549 align:start position:0%
and then this is going to tell us what
index<00:32:43.440><c> is</c><00:32:43.600><c> going</c><00:32:43.760><c> to</c><00:32:43.919><c> be</c><00:32:44.320><c> next</c>

00:32:46.549 --> 00:32:46.559 align:start position:0%
index is going to be next
 

00:32:46.559 --> 00:32:48.710 align:start position:0%
index is going to be next
if<00:32:46.720><c> the</c><00:32:46.880><c> index</c><00:32:47.279><c> sampled</c><00:32:48.000><c> is</c>

00:32:48.710 --> 00:32:48.720 align:start position:0%
if the index sampled is
 

00:32:48.720 --> 00:32:49.669 align:start position:0%
if the index sampled is
0

00:32:49.669 --> 00:32:49.679 align:start position:0%
0
 

00:32:49.679 --> 00:32:52.630 align:start position:0%
0
then<00:32:49.840><c> that's</c><00:32:50.159><c> now</c><00:32:50.559><c> the</c><00:32:50.799><c> end</c><00:32:51.039><c> token</c>

00:32:52.630 --> 00:32:52.640 align:start position:0%
then that's now the end token
 

00:32:52.640 --> 00:32:55.350 align:start position:0%
then that's now the end token
so<00:32:52.880><c> we</c><00:32:53.039><c> will</c><00:32:53.279><c> break</c>

00:32:55.350 --> 00:32:55.360 align:start position:0%
so we will break
 

00:32:55.360 --> 00:32:57.750 align:start position:0%
so we will break
otherwise<00:32:55.760><c> we</c><00:32:55.919><c> are</c><00:32:56.080><c> going</c><00:32:56.240><c> to</c><00:32:56.399><c> print</c>

00:32:57.750 --> 00:32:57.760 align:start position:0%
otherwise we are going to print
 

00:32:57.760 --> 00:33:02.230 align:start position:0%
otherwise we are going to print
s2i<00:32:58.559><c> of</c><00:32:58.880><c> ix</c>

00:33:02.230 --> 00:33:02.240 align:start position:0%
 
 

00:33:02.240 --> 00:33:05.269 align:start position:0%
 
i2s

00:33:05.269 --> 00:33:05.279 align:start position:0%
 
 

00:33:05.279 --> 00:33:07.830 align:start position:0%
 
and<00:33:05.600><c> uh</c><00:33:05.840><c> that's</c><00:33:06.480><c> pretty</c><00:33:06.720><c> much</c><00:33:06.960><c> it</c><00:33:07.200><c> we're</c><00:33:07.519><c> just</c>

00:33:07.830 --> 00:33:07.840 align:start position:0%
and uh that's pretty much it we're just
 

00:33:07.840 --> 00:33:12.070 align:start position:0%
and uh that's pretty much it we're just
uh<00:33:08.480><c> this</c><00:33:08.640><c> should</c><00:33:08.880><c> work</c><00:33:10.320><c> okay</c><00:33:10.640><c> more</c>

00:33:12.070 --> 00:33:12.080 align:start position:0%
uh this should work okay more
 

00:33:12.080 --> 00:33:13.830 align:start position:0%
uh this should work okay more
so<00:33:12.240><c> that's</c><00:33:12.720><c> that's</c><00:33:12.960><c> the</c><00:33:13.120><c> name</c><00:33:13.440><c> that</c><00:33:13.600><c> we've</c>

00:33:13.830 --> 00:33:13.840 align:start position:0%
so that's that's the name that we've
 

00:33:13.840 --> 00:33:16.950 align:start position:0%
so that's that's the name that we've
sampled<00:33:14.720><c> we</c><00:33:14.880><c> started</c><00:33:15.760><c> with</c><00:33:16.080><c> m</c><00:33:16.399><c> the</c><00:33:16.559><c> next</c><00:33:16.720><c> step</c>

00:33:16.950 --> 00:33:16.960 align:start position:0%
sampled we started with m the next step
 

00:33:16.960 --> 00:33:21.350 align:start position:0%
sampled we started with m the next step
was<00:33:17.279><c> o</c><00:33:17.679><c> then</c><00:33:17.919><c> r</c><00:33:18.399><c> and</c><00:33:18.559><c> then</c><00:33:18.880><c> dot</c>

00:33:21.350 --> 00:33:21.360 align:start position:0%
 
 

00:33:21.360 --> 00:33:24.789 align:start position:0%
 
and<00:33:21.600><c> this</c><00:33:21.840><c> dot</c><00:33:22.640><c> we</c><00:33:23.120><c> it</c><00:33:23.279><c> here</c><00:33:23.600><c> as</c><00:33:23.760><c> well</c>

00:33:24.789 --> 00:33:24.799 align:start position:0%
and this dot we it here as well
 

00:33:24.799 --> 00:33:26.389 align:start position:0%
and this dot we it here as well
so

00:33:26.389 --> 00:33:26.399 align:start position:0%
so
 

00:33:26.399 --> 00:33:29.909 align:start position:0%
so
let's<00:33:26.640><c> now</c><00:33:26.799><c> do</c><00:33:26.960><c> this</c><00:33:27.120><c> a</c><00:33:27.200><c> few</c><00:33:27.440><c> times</c>

00:33:29.909 --> 00:33:29.919 align:start position:0%
 
 

00:33:29.919 --> 00:33:33.430 align:start position:0%
 
so<00:33:30.080><c> let's</c><00:33:30.320><c> actually</c><00:33:31.039><c> create</c><00:33:31.679><c> an</c>

00:33:33.430 --> 00:33:33.440 align:start position:0%
so let's actually create an
 

00:33:33.440 --> 00:33:37.110 align:start position:0%
so let's actually create an
out<00:33:34.000><c> list</c><00:33:34.320><c> here</c>

00:33:37.110 --> 00:33:37.120 align:start position:0%
 
 

00:33:37.120 --> 00:33:38.549 align:start position:0%
 
and<00:33:37.279><c> instead</c><00:33:37.519><c> of</c><00:33:37.679><c> printing</c><00:33:38.080><c> we're</c><00:33:38.240><c> going</c><00:33:38.399><c> to</c>

00:33:38.549 --> 00:33:38.559 align:start position:0%
and instead of printing we're going to
 

00:33:38.559 --> 00:33:39.669 align:start position:0%
and instead of printing we're going to
append

00:33:39.669 --> 00:33:39.679 align:start position:0%
append
 

00:33:39.679 --> 00:33:44.389 align:start position:0%
append
so<00:33:39.919><c> out</c><00:33:40.240><c> that</c><00:33:40.480><c> append</c><00:33:41.039><c> this</c><00:33:41.279><c> character</c>

00:33:44.389 --> 00:33:44.399 align:start position:0%
 
 

00:33:44.399 --> 00:33:46.470 align:start position:0%
 
and<00:33:44.480><c> then</c><00:33:44.640><c> here</c><00:33:44.880><c> let's</c><00:33:45.120><c> just</c><00:33:45.279><c> print</c><00:33:45.519><c> it</c><00:33:46.159><c> at</c><00:33:46.320><c> the</c>

00:33:46.470 --> 00:33:46.480 align:start position:0%
and then here let's just print it at the
 

00:33:46.480 --> 00:33:49.350 align:start position:0%
and then here let's just print it at the
end<00:33:46.880><c> so</c><00:33:47.360><c> let's</c><00:33:47.600><c> just</c><00:33:47.840><c> join</c><00:33:48.080><c> up</c><00:33:48.320><c> all</c><00:33:48.480><c> the</c><00:33:48.640><c> outs</c>

00:33:49.350 --> 00:33:49.360 align:start position:0%
end so let's just join up all the outs
 

00:33:49.360 --> 00:33:51.909 align:start position:0%
end so let's just join up all the outs
and<00:33:49.519><c> we're</c><00:33:49.679><c> just</c><00:33:49.840><c> going</c><00:33:50.000><c> to</c><00:33:50.080><c> print</c><00:33:50.559><c> more</c><00:33:51.279><c> okay</c>

00:33:51.909 --> 00:33:51.919 align:start position:0%
and we're just going to print more okay
 

00:33:51.919 --> 00:33:53.350 align:start position:0%
and we're just going to print more okay
now<00:33:52.159><c> we're</c><00:33:52.320><c> always</c><00:33:52.480><c> getting</c><00:33:52.640><c> the</c><00:33:52.720><c> same</c><00:33:52.960><c> result</c>

00:33:53.350 --> 00:33:53.360 align:start position:0%
now we're always getting the same result
 

00:33:53.360 --> 00:33:55.029 align:start position:0%
now we're always getting the same result
because<00:33:53.600><c> of</c><00:33:53.679><c> the</c><00:33:53.760><c> generator</c>

00:33:55.029 --> 00:33:55.039 align:start position:0%
because of the generator
 

00:33:55.039 --> 00:33:57.029 align:start position:0%
because of the generator
so<00:33:55.279><c> if</c><00:33:55.360><c> we</c><00:33:55.440><c> want</c><00:33:55.600><c> to</c><00:33:55.679><c> do</c><00:33:55.840><c> this</c><00:33:56.000><c> a</c><00:33:56.080><c> few</c><00:33:56.240><c> times</c><00:33:56.880><c> we</c>

00:33:57.029 --> 00:33:57.039 align:start position:0%
so if we want to do this a few times we
 

00:33:57.039 --> 00:34:00.070 align:start position:0%
so if we want to do this a few times we
can<00:33:57.200><c> go</c><00:33:57.679><c> for</c><00:33:58.159><c> i</c><00:33:58.559><c> in</c><00:33:58.799><c> range</c>

00:34:00.070 --> 00:34:00.080 align:start position:0%
can go for i in range
 

00:34:00.080 --> 00:34:02.470 align:start position:0%
can go for i in range
10<00:34:00.559><c> we</c><00:34:00.720><c> can</c><00:34:00.880><c> sample</c><00:34:01.200><c> 10</c><00:34:01.440><c> names</c>

00:34:02.470 --> 00:34:02.480 align:start position:0%
10 we can sample 10 names
 

00:34:02.480 --> 00:34:05.669 align:start position:0%
10 we can sample 10 names
and<00:34:02.559><c> we</c><00:34:02.720><c> can</c><00:34:02.799><c> just</c><00:34:02.960><c> do</c><00:34:03.120><c> that</c><00:34:03.279><c> 10</c><00:34:03.519><c> times</c>

00:34:05.669 --> 00:34:05.679 align:start position:0%
and we can just do that 10 times
 

00:34:05.679 --> 00:34:06.789 align:start position:0%
and we can just do that 10 times
and<00:34:05.760><c> these</c><00:34:06.000><c> are</c><00:34:06.159><c> the</c><00:34:06.320><c> names</c><00:34:06.559><c> that</c><00:34:06.720><c> we're</c>

00:34:06.789 --> 00:34:06.799 align:start position:0%
and these are the names that we're
 

00:34:06.799 --> 00:34:08.389 align:start position:0%
and these are the names that we're
getting<00:34:07.120><c> out</c>

00:34:08.389 --> 00:34:08.399 align:start position:0%
getting out
 

00:34:08.399 --> 00:34:14.230 align:start position:0%
getting out
let's<00:34:08.639><c> do</c><00:34:08.879><c> 20.</c>

00:34:14.230 --> 00:34:14.240 align:start position:0%
 
 

00:34:14.240 --> 00:34:15.430 align:start position:0%
 
i'll<00:34:14.399><c> be</c><00:34:14.560><c> honest</c><00:34:14.720><c> with</c><00:34:14.879><c> you</c><00:34:15.040><c> this</c><00:34:15.200><c> doesn't</c>

00:34:15.430 --> 00:34:15.440 align:start position:0%
i'll be honest with you this doesn't
 

00:34:15.440 --> 00:34:16.470 align:start position:0%
i'll be honest with you this doesn't
look<00:34:15.599><c> right</c>

00:34:16.470 --> 00:34:16.480 align:start position:0%
look right
 

00:34:16.480 --> 00:34:18.230 align:start position:0%
look right
so<00:34:16.639><c> i</c><00:34:16.720><c> started</c><00:34:17.200><c> a</c><00:34:17.280><c> few</c><00:34:17.440><c> minutes</c><00:34:17.679><c> to</c><00:34:17.839><c> convince</c>

00:34:18.230 --> 00:34:18.240 align:start position:0%
so i started a few minutes to convince
 

00:34:18.240 --> 00:34:20.470 align:start position:0%
so i started a few minutes to convince
myself<00:34:18.480><c> that</c><00:34:18.720><c> it</c><00:34:18.879><c> actually</c><00:34:19.200><c> is</c><00:34:19.359><c> right</c>

00:34:20.470 --> 00:34:20.480 align:start position:0%
myself that it actually is right
 

00:34:20.480 --> 00:34:22.389 align:start position:0%
myself that it actually is right
the<00:34:20.639><c> reason</c><00:34:20.960><c> these</c><00:34:21.119><c> samples</c><00:34:21.520><c> are</c><00:34:21.599><c> so</c><00:34:21.839><c> terrible</c>

00:34:22.389 --> 00:34:22.399 align:start position:0%
the reason these samples are so terrible
 

00:34:22.399 --> 00:34:24.790 align:start position:0%
the reason these samples are so terrible
is<00:34:22.560><c> that</c><00:34:23.119><c> bigram</c><00:34:23.520><c> language</c><00:34:23.839><c> model</c>

00:34:24.790 --> 00:34:24.800 align:start position:0%
is that bigram language model
 

00:34:24.800 --> 00:34:26.470 align:start position:0%
is that bigram language model
is<00:34:25.440><c> actually</c><00:34:25.760><c> look</c><00:34:25.919><c> just</c><00:34:26.079><c> like</c><00:34:26.240><c> really</c>

00:34:26.470 --> 00:34:26.480 align:start position:0%
is actually look just like really
 

00:34:26.480 --> 00:34:27.669 align:start position:0%
is actually look just like really
terrible

00:34:27.669 --> 00:34:27.679 align:start position:0%
terrible
 

00:34:27.679 --> 00:34:29.990 align:start position:0%
terrible
we<00:34:27.839><c> can</c><00:34:28.000><c> generate</c><00:34:28.320><c> a</c><00:34:28.399><c> few</c><00:34:28.560><c> more</c><00:34:28.800><c> here</c>

00:34:29.990 --> 00:34:30.000 align:start position:0%
we can generate a few more here
 

00:34:30.000 --> 00:34:30.950 align:start position:0%
we can generate a few more here
and<00:34:30.079><c> you</c><00:34:30.240><c> can</c><00:34:30.320><c> see</c><00:34:30.480><c> that</c><00:34:30.560><c> they're</c><00:34:30.720><c> kind</c><00:34:30.879><c> of</c>

00:34:30.950 --> 00:34:30.960 align:start position:0%
and you can see that they're kind of
 

00:34:30.960 --> 00:34:33.190 align:start position:0%
and you can see that they're kind of
like<00:34:31.119><c> their</c><00:34:31.359><c> name</c><00:34:31.839><c> like</c><00:34:32.320><c> a</c><00:34:32.399><c> little</c><00:34:32.639><c> bit</c><00:34:32.879><c> like</c>

00:34:33.190 --> 00:34:33.200 align:start position:0%
like their name like a little bit like
 

00:34:33.200 --> 00:34:36.149 align:start position:0%
like their name like a little bit like
yanu<00:34:33.760><c> o'reilly</c><00:34:34.399><c> etc</c><00:34:35.440><c> but</c><00:34:35.599><c> they're</c><00:34:35.839><c> just</c><00:34:36.000><c> like</c>

00:34:36.149 --> 00:34:36.159 align:start position:0%
yanu o'reilly etc but they're just like
 

00:34:36.159 --> 00:34:38.550 align:start position:0%
yanu o'reilly etc but they're just like
totally<00:34:36.560><c> messed</c><00:34:36.879><c> up</c><00:34:37.200><c> um</c>

00:34:38.550 --> 00:34:38.560 align:start position:0%
totally messed up um
 

00:34:38.560 --> 00:34:40.470 align:start position:0%
totally messed up um
and<00:34:39.040><c> i</c><00:34:39.119><c> mean</c><00:34:39.280><c> the</c><00:34:39.440><c> reason</c><00:34:39.839><c> that</c><00:34:40.000><c> this</c><00:34:40.240><c> is</c><00:34:40.320><c> so</c>

00:34:40.470 --> 00:34:40.480 align:start position:0%
and i mean the reason that this is so
 

00:34:40.480 --> 00:34:42.869 align:start position:0%
and i mean the reason that this is so
bad<00:34:40.720><c> like</c><00:34:40.879><c> we're</c><00:34:41.119><c> generating</c><00:34:41.679><c> h</c><00:34:42.000><c> as</c><00:34:42.159><c> a</c><00:34:42.320><c> name</c>

00:34:42.869 --> 00:34:42.879 align:start position:0%
bad like we're generating h as a name
 

00:34:42.879 --> 00:34:44.470 align:start position:0%
bad like we're generating h as a name
but<00:34:43.119><c> you</c><00:34:43.200><c> have</c><00:34:43.280><c> to</c><00:34:43.440><c> think</c><00:34:43.679><c> through</c>

00:34:44.470 --> 00:34:44.480 align:start position:0%
but you have to think through
 

00:34:44.480 --> 00:34:47.190 align:start position:0%
but you have to think through
it<00:34:44.800><c> from</c><00:34:45.200><c> the</c><00:34:45.280><c> model's</c><00:34:45.760><c> eyes</c><00:34:46.480><c> it</c><00:34:46.639><c> doesn't</c><00:34:46.960><c> know</c>

00:34:47.190 --> 00:34:47.200 align:start position:0%
it from the model's eyes it doesn't know
 

00:34:47.200 --> 00:34:49.750 align:start position:0%
it from the model's eyes it doesn't know
that<00:34:47.520><c> this</c><00:34:47.839><c> h</c><00:34:48.079><c> is</c><00:34:48.240><c> the</c><00:34:48.320><c> very</c><00:34:48.560><c> first</c><00:34:48.879><c> h</c><00:34:49.440><c> all</c><00:34:49.599><c> it</c>

00:34:49.750 --> 00:34:49.760 align:start position:0%
that this h is the very first h all it
 

00:34:49.760 --> 00:34:52.470 align:start position:0%
that this h is the very first h all it
knows<00:34:50.000><c> is</c><00:34:50.159><c> that</c><00:34:50.639><c> h</c><00:34:50.879><c> was</c><00:34:51.119><c> previously</c><00:34:52.079><c> and</c><00:34:52.240><c> now</c>

00:34:52.470 --> 00:34:52.480 align:start position:0%
knows is that h was previously and now
 

00:34:52.480 --> 00:34:55.829 align:start position:0%
knows is that h was previously and now
how<00:34:52.639><c> likely</c><00:34:53.119><c> is</c><00:34:53.359><c> h</c><00:34:53.679><c> the</c><00:34:53.839><c> last</c><00:34:54.639><c> character</c><00:34:55.599><c> well</c>

00:34:55.829 --> 00:34:55.839 align:start position:0%
how likely is h the last character well
 

00:34:55.839 --> 00:34:57.030 align:start position:0%
how likely is h the last character well
it's<00:34:56.079><c> somewhat</c>

00:34:57.030 --> 00:34:57.040 align:start position:0%
it's somewhat
 

00:34:57.040 --> 00:34:58.790 align:start position:0%
it's somewhat
likely<00:34:57.680><c> and</c><00:34:57.839><c> so</c><00:34:58.079><c> it</c><00:34:58.160><c> just</c><00:34:58.320><c> makes</c><00:34:58.560><c> it</c><00:34:58.640><c> last</c>

00:34:58.790 --> 00:34:58.800 align:start position:0%
likely and so it just makes it last
 

00:34:58.800 --> 00:34:59.990 align:start position:0%
likely and so it just makes it last
character<00:34:59.200><c> it</c><00:34:59.280><c> doesn't</c><00:34:59.520><c> know</c><00:34:59.680><c> that</c><00:34:59.839><c> there</c>

00:34:59.990 --> 00:35:00.000 align:start position:0%
character it doesn't know that there
 

00:35:00.000 --> 00:35:01.990 align:start position:0%
character it doesn't know that there
were<00:35:00.240><c> other</c><00:35:00.480><c> things</c><00:35:01.040><c> before</c><00:35:01.440><c> it</c><00:35:01.599><c> or</c><00:35:01.839><c> there</c>

00:35:01.990 --> 00:35:02.000 align:start position:0%
were other things before it or there
 

00:35:02.000 --> 00:35:04.390 align:start position:0%
were other things before it or there
were<00:35:02.160><c> not</c><00:35:02.400><c> other</c><00:35:02.640><c> things</c><00:35:02.880><c> before</c><00:35:03.200><c> it</c><00:35:03.839><c> and</c><00:35:04.079><c> so</c>

00:35:04.390 --> 00:35:04.400 align:start position:0%
were not other things before it and so
 

00:35:04.400 --> 00:35:05.589 align:start position:0%
were not other things before it and so
that's<00:35:04.560><c> why</c><00:35:04.720><c> it's</c><00:35:04.880><c> generating</c><00:35:05.280><c> all</c><00:35:05.359><c> these</c>

00:35:05.589 --> 00:35:05.599 align:start position:0%
that's why it's generating all these
 

00:35:05.599 --> 00:35:06.470 align:start position:0%
that's why it's generating all these
like

00:35:06.470 --> 00:35:06.480 align:start position:0%
like
 

00:35:06.480 --> 00:35:08.069 align:start position:0%
like
nonsense<00:35:07.040><c> names</c>

00:35:08.069 --> 00:35:08.079 align:start position:0%
nonsense names
 

00:35:08.079 --> 00:35:11.910 align:start position:0%
nonsense names
another<00:35:08.400><c> way</c><00:35:08.560><c> to</c><00:35:08.640><c> do</c><00:35:08.800><c> this</c><00:35:09.119><c> is</c>

00:35:11.910 --> 00:35:11.920 align:start position:0%
 
 

00:35:11.920 --> 00:35:12.950 align:start position:0%
 
to<00:35:12.000><c> convince</c><00:35:12.400><c> yourself</c><00:35:12.640><c> that</c><00:35:12.720><c> this</c><00:35:12.880><c> is</c>

00:35:12.950 --> 00:35:12.960 align:start position:0%
to convince yourself that this is
 

00:35:12.960 --> 00:35:14.470 align:start position:0%
to convince yourself that this is
actually<00:35:13.200><c> doing</c><00:35:13.440><c> something</c><00:35:13.760><c> reasonable</c><00:35:14.320><c> even</c>

00:35:14.470 --> 00:35:14.480 align:start position:0%
actually doing something reasonable even
 

00:35:14.480 --> 00:35:17.670 align:start position:0%
actually doing something reasonable even
though<00:35:14.640><c> it's</c><00:35:14.800><c> so</c><00:35:14.960><c> terrible</c><00:35:16.000><c> is</c>

00:35:17.670 --> 00:35:17.680 align:start position:0%
though it's so terrible is
 

00:35:17.680 --> 00:35:20.950 align:start position:0%
though it's so terrible is
these<00:35:17.920><c> little</c><00:35:18.240><c> piece</c><00:35:18.560><c> here</c><00:35:18.880><c> are</c><00:35:19.119><c> 27</c><00:35:19.920><c> right</c>

00:35:20.950 --> 00:35:20.960 align:start position:0%
these little piece here are 27 right
 

00:35:20.960 --> 00:35:23.030 align:start position:0%
these little piece here are 27 right
like<00:35:21.200><c> 27.</c>

00:35:23.030 --> 00:35:23.040 align:start position:0%
like 27.
 

00:35:23.040 --> 00:35:24.310 align:start position:0%
like 27.
so<00:35:23.200><c> how</c><00:35:23.359><c> about</c><00:35:23.520><c> if</c><00:35:23.599><c> we</c><00:35:23.760><c> did</c><00:35:23.920><c> something</c><00:35:24.160><c> like</c>

00:35:24.310 --> 00:35:24.320 align:start position:0%
so how about if we did something like
 

00:35:24.320 --> 00:35:26.230 align:start position:0%
so how about if we did something like
this

00:35:26.230 --> 00:35:26.240 align:start position:0%
this
 

00:35:26.240 --> 00:35:27.589 align:start position:0%
this
instead<00:35:26.480><c> of</c><00:35:26.640><c> p</c><00:35:26.800><c> having</c><00:35:27.119><c> any</c><00:35:27.280><c> structure</c>

00:35:27.589 --> 00:35:27.599 align:start position:0%
instead of p having any structure
 

00:35:27.599 --> 00:35:28.870 align:start position:0%
instead of p having any structure
whatsoever

00:35:28.870 --> 00:35:28.880 align:start position:0%
whatsoever
 

00:35:28.880 --> 00:35:30.710 align:start position:0%
whatsoever
how<00:35:29.040><c> about</c><00:35:29.280><c> if</c><00:35:29.440><c> p</c><00:35:29.599><c> was</c><00:35:29.920><c> just</c>

00:35:30.710 --> 00:35:30.720 align:start position:0%
how about if p was just
 

00:35:30.720 --> 00:35:34.870 align:start position:0%
how about if p was just
torch<00:35:31.040><c> dot</c><00:35:31.839><c> once</c>

00:35:34.870 --> 00:35:34.880 align:start position:0%
 
 

00:35:34.880 --> 00:35:37.190 align:start position:0%
 
of<00:35:35.119><c> 27</c>

00:35:37.190 --> 00:35:37.200 align:start position:0%
of 27
 

00:35:37.200 --> 00:35:39.349 align:start position:0%
of 27
by<00:35:37.359><c> default</c><00:35:37.680><c> this</c><00:35:37.839><c> is</c><00:35:37.920><c> a</c><00:35:38.000><c> float</c><00:35:38.320><c> 32</c><00:35:38.880><c> so</c><00:35:39.040><c> this</c><00:35:39.200><c> is</c>

00:35:39.349 --> 00:35:39.359 align:start position:0%
by default this is a float 32 so this is
 

00:35:39.359 --> 00:35:42.790 align:start position:0%
by default this is a float 32 so this is
fine<00:35:40.079><c> divide</c><00:35:40.400><c> 27</c>

00:35:42.790 --> 00:35:42.800 align:start position:0%
fine divide 27
 

00:35:42.800 --> 00:35:44.950 align:start position:0%
fine divide 27
so<00:35:42.960><c> what</c><00:35:43.119><c> i'm</c><00:35:43.200><c> doing</c><00:35:43.440><c> here</c><00:35:43.839><c> is</c><00:35:44.320><c> this</c><00:35:44.640><c> is</c><00:35:44.800><c> the</c>

00:35:44.950 --> 00:35:44.960 align:start position:0%
so what i'm doing here is this is the
 

00:35:44.960 --> 00:35:47.109 align:start position:0%
so what i'm doing here is this is the
uniform<00:35:45.440><c> distribution</c><00:35:46.480><c> which</c><00:35:46.720><c> will</c><00:35:46.880><c> make</c>

00:35:47.109 --> 00:35:47.119 align:start position:0%
uniform distribution which will make
 

00:35:47.119 --> 00:35:49.829 align:start position:0%
uniform distribution which will make
everything<00:35:47.680><c> equally</c><00:35:48.160><c> likely</c>

00:35:49.829 --> 00:35:49.839 align:start position:0%
everything equally likely
 

00:35:49.839 --> 00:35:52.310 align:start position:0%
everything equally likely
and<00:35:50.000><c> we</c><00:35:50.160><c> can</c><00:35:50.560><c> sample</c><00:35:50.880><c> from</c><00:35:51.040><c> that</c><00:35:51.839><c> so</c><00:35:52.000><c> let's</c><00:35:52.160><c> see</c>

00:35:52.310 --> 00:35:52.320 align:start position:0%
and we can sample from that so let's see
 

00:35:52.320 --> 00:35:54.150 align:start position:0%
and we can sample from that so let's see
if<00:35:52.400><c> that</c><00:35:52.560><c> does</c><00:35:52.720><c> any</c><00:35:52.960><c> better</c>

00:35:54.150 --> 00:35:54.160 align:start position:0%
if that does any better
 

00:35:54.160 --> 00:35:55.910 align:start position:0%
if that does any better
okay<00:35:54.880><c> so</c><00:35:55.040><c> it's</c>

00:35:55.910 --> 00:35:55.920 align:start position:0%
okay so it's
 

00:35:55.920 --> 00:35:57.430 align:start position:0%
okay so it's
this<00:35:56.160><c> is</c><00:35:56.240><c> what</c><00:35:56.400><c> you</c><00:35:56.560><c> have</c><00:35:56.800><c> from</c><00:35:56.960><c> a</c><00:35:57.040><c> model</c><00:35:57.280><c> that</c>

00:35:57.430 --> 00:35:57.440 align:start position:0%
this is what you have from a model that
 

00:35:57.440 --> 00:35:59.109 align:start position:0%
this is what you have from a model that
is<00:35:57.599><c> completely</c><00:35:58.079><c> untrained</c><00:35:58.560><c> where</c><00:35:58.800><c> everything</c>

00:35:59.109 --> 00:35:59.119 align:start position:0%
is completely untrained where everything
 

00:35:59.119 --> 00:36:01.430 align:start position:0%
is completely untrained where everything
is<00:35:59.280><c> equally</c><00:35:59.760><c> likely</c><00:36:00.560><c> so</c><00:36:00.720><c> it's</c><00:36:01.040><c> obviously</c>

00:36:01.430 --> 00:36:01.440 align:start position:0%
is equally likely so it's obviously
 

00:36:01.440 --> 00:36:03.510 align:start position:0%
is equally likely so it's obviously
garbage<00:36:02.320><c> and</c><00:36:02.400><c> then</c><00:36:02.640><c> if</c><00:36:02.720><c> we</c><00:36:02.880><c> have</c><00:36:03.040><c> a</c><00:36:03.200><c> trained</c>

00:36:03.510 --> 00:36:03.520 align:start position:0%
garbage and then if we have a trained
 

00:36:03.520 --> 00:36:07.030 align:start position:0%
garbage and then if we have a trained
model<00:36:04.079><c> which</c><00:36:04.320><c> is</c><00:36:04.560><c> trained</c><00:36:04.880><c> on</c><00:36:05.119><c> just</c><00:36:05.680><c> bi-grams</c>

00:36:07.030 --> 00:36:07.040 align:start position:0%
model which is trained on just bi-grams
 

00:36:07.040 --> 00:36:09.109 align:start position:0%
model which is trained on just bi-grams
this<00:36:07.280><c> is</c><00:36:07.359><c> what</c><00:36:07.520><c> we</c><00:36:07.680><c> get</c><00:36:08.400><c> so</c><00:36:08.560><c> you</c><00:36:08.640><c> can</c><00:36:08.720><c> see</c><00:36:08.880><c> that</c>

00:36:09.109 --> 00:36:09.119 align:start position:0%
this is what we get so you can see that
 

00:36:09.119 --> 00:36:11.030 align:start position:0%
this is what we get so you can see that
it<00:36:09.359><c> is</c><00:36:09.599><c> more</c><00:36:09.839><c> name-like</c><00:36:10.400><c> it</c><00:36:10.560><c> is</c><00:36:10.720><c> actually</c>

00:36:11.030 --> 00:36:11.040 align:start position:0%
it is more name-like it is actually
 

00:36:11.040 --> 00:36:14.069 align:start position:0%
it is more name-like it is actually
working<00:36:11.760><c> it's</c><00:36:12.000><c> just</c><00:36:12.560><c> um</c>

00:36:14.069 --> 00:36:14.079 align:start position:0%
working it's just um
 

00:36:14.079 --> 00:36:15.910 align:start position:0%
working it's just um
my<00:36:14.240><c> gram</c><00:36:14.560><c> is</c><00:36:14.640><c> so</c><00:36:14.800><c> terrible</c><00:36:15.280><c> and</c><00:36:15.440><c> we</c><00:36:15.520><c> have</c><00:36:15.680><c> to</c><00:36:15.760><c> do</c>

00:36:15.910 --> 00:36:15.920 align:start position:0%
my gram is so terrible and we have to do
 

00:36:15.920 --> 00:36:17.829 align:start position:0%
my gram is so terrible and we have to do
better<00:36:16.480><c> now</c><00:36:16.720><c> next</c><00:36:16.960><c> i</c><00:36:17.119><c> would</c><00:36:17.200><c> like</c><00:36:17.359><c> to</c><00:36:17.440><c> fix</c><00:36:17.680><c> an</c>

00:36:17.829 --> 00:36:17.839 align:start position:0%
better now next i would like to fix an
 

00:36:17.839 --> 00:36:20.150 align:start position:0%
better now next i would like to fix an
inefficiency<00:36:18.400><c> that</c><00:36:18.560><c> we</c><00:36:18.640><c> have</c><00:36:18.800><c> going</c><00:36:19.040><c> on</c><00:36:19.200><c> here</c>

00:36:20.150 --> 00:36:20.160 align:start position:0%
inefficiency that we have going on here
 

00:36:20.160 --> 00:36:21.910 align:start position:0%
inefficiency that we have going on here
because<00:36:20.400><c> what</c><00:36:20.640><c> we're</c><00:36:20.800><c> doing</c><00:36:21.040><c> here</c><00:36:21.359><c> is</c><00:36:21.680><c> we're</c>

00:36:21.910 --> 00:36:21.920 align:start position:0%
because what we're doing here is we're
 

00:36:21.920 --> 00:36:24.310 align:start position:0%
because what we're doing here is we're
always<00:36:22.480><c> fetching</c><00:36:22.880><c> a</c><00:36:23.040><c> row</c><00:36:23.280><c> of</c><00:36:23.520><c> n</c><00:36:23.920><c> from</c><00:36:24.160><c> the</c>

00:36:24.310 --> 00:36:24.320 align:start position:0%
always fetching a row of n from the
 

00:36:24.320 --> 00:36:26.390 align:start position:0%
always fetching a row of n from the
counts<00:36:24.640><c> matrix</c><00:36:25.119><c> up</c><00:36:25.280><c> ahead</c>

00:36:26.390 --> 00:36:26.400 align:start position:0%
counts matrix up ahead
 

00:36:26.400 --> 00:36:27.670 align:start position:0%
counts matrix up ahead
and<00:36:26.720><c> then</c><00:36:26.800><c> we're</c><00:36:27.040><c> always</c><00:36:27.200><c> doing</c><00:36:27.359><c> the</c><00:36:27.440><c> same</c>

00:36:27.670 --> 00:36:27.680 align:start position:0%
and then we're always doing the same
 

00:36:27.680 --> 00:36:28.950 align:start position:0%
and then we're always doing the same
things<00:36:27.920><c> we're</c><00:36:28.079><c> converting</c><00:36:28.480><c> to</c><00:36:28.640><c> float</c><00:36:28.880><c> and</c>

00:36:28.950 --> 00:36:28.960 align:start position:0%
things we're converting to float and
 

00:36:28.960 --> 00:36:30.790 align:start position:0%
things we're converting to float and
we're<00:36:29.119><c> dividing</c><00:36:29.839><c> and</c><00:36:29.920><c> we're</c><00:36:30.079><c> doing</c><00:36:30.320><c> this</c>

00:36:30.790 --> 00:36:30.800 align:start position:0%
we're dividing and we're doing this
 

00:36:30.800 --> 00:36:32.790 align:start position:0%
we're dividing and we're doing this
every<00:36:31.040><c> single</c><00:36:31.359><c> iteration</c><00:36:31.839><c> of</c><00:36:31.920><c> this</c><00:36:32.079><c> loop</c><00:36:32.640><c> and</c>

00:36:32.790 --> 00:36:32.800 align:start position:0%
every single iteration of this loop and
 

00:36:32.800 --> 00:36:34.310 align:start position:0%
every single iteration of this loop and
we<00:36:32.960><c> just</c><00:36:33.119><c> keep</c><00:36:33.280><c> renormalizing</c><00:36:33.920><c> these</c><00:36:34.079><c> rows</c>

00:36:34.310 --> 00:36:34.320 align:start position:0%
we just keep renormalizing these rows
 

00:36:34.320 --> 00:36:35.670 align:start position:0%
we just keep renormalizing these rows
over<00:36:34.480><c> and</c><00:36:34.560><c> over</c><00:36:34.720><c> again</c><00:36:34.960><c> and</c><00:36:35.040><c> it's</c><00:36:35.200><c> extremely</c>

00:36:35.670 --> 00:36:35.680 align:start position:0%
over and over again and it's extremely
 

00:36:35.680 --> 00:36:37.670 align:start position:0%
over and over again and it's extremely
inefficient<00:36:36.240><c> and</c><00:36:36.320><c> wasteful</c><00:36:37.280><c> so</c><00:36:37.440><c> what</c><00:36:37.599><c> i'd</c>

00:36:37.670 --> 00:36:37.680 align:start position:0%
inefficient and wasteful so what i'd
 

00:36:37.680 --> 00:36:38.950 align:start position:0%
inefficient and wasteful so what i'd
like<00:36:37.839><c> to</c><00:36:37.920><c> do</c><00:36:38.079><c> is</c><00:36:38.240><c> i'd</c><00:36:38.320><c> like</c><00:36:38.480><c> to</c><00:36:38.640><c> actually</c>

00:36:38.950 --> 00:36:38.960 align:start position:0%
like to do is i'd like to actually
 

00:36:38.960 --> 00:36:41.910 align:start position:0%
like to do is i'd like to actually
prepare<00:36:39.920><c> a</c><00:36:40.000><c> matrix</c><00:36:40.480><c> capital</c><00:36:40.960><c> p</c><00:36:41.599><c> that</c><00:36:41.760><c> will</c>

00:36:41.910 --> 00:36:41.920 align:start position:0%
prepare a matrix capital p that will
 

00:36:41.920 --> 00:36:44.069 align:start position:0%
prepare a matrix capital p that will
just<00:36:42.079><c> have</c><00:36:42.240><c> the</c><00:36:42.400><c> probabilities</c><00:36:43.200><c> in</c><00:36:43.359><c> it</c><00:36:43.839><c> so</c><00:36:44.000><c> in</c>

00:36:44.069 --> 00:36:44.079 align:start position:0%
just have the probabilities in it so in
 

00:36:44.079 --> 00:36:45.589 align:start position:0%
just have the probabilities in it so in
other<00:36:44.240><c> words</c><00:36:44.480><c> it's</c><00:36:44.560><c> going</c><00:36:44.720><c> to</c><00:36:44.800><c> be</c><00:36:44.960><c> the</c><00:36:45.040><c> same</c><00:36:45.280><c> as</c>

00:36:45.589 --> 00:36:45.599 align:start position:0%
other words it's going to be the same as
 

00:36:45.599 --> 00:36:48.069 align:start position:0%
other words it's going to be the same as
the<00:36:45.839><c> capital</c><00:36:46.240><c> n</c><00:36:46.400><c> matrix</c><00:36:46.800><c> here</c><00:36:47.119><c> of</c><00:36:47.359><c> counts</c><00:36:47.920><c> but</c>

00:36:48.069 --> 00:36:48.079 align:start position:0%
the capital n matrix here of counts but
 

00:36:48.079 --> 00:36:50.069 align:start position:0%
the capital n matrix here of counts but
every<00:36:48.320><c> single</c><00:36:48.640><c> row</c><00:36:49.119><c> will</c><00:36:49.280><c> have</c><00:36:49.520><c> the</c><00:36:49.760><c> row</c><00:36:50.000><c> of</c>

00:36:50.069 --> 00:36:50.079 align:start position:0%
every single row will have the row of
 

00:36:50.079 --> 00:36:52.870 align:start position:0%
every single row will have the row of
probabilities<00:36:51.280><c> uh</c><00:36:51.520><c> that</c><00:36:51.680><c> is</c><00:36:51.760><c> normalized</c><00:36:52.160><c> to</c><00:36:52.400><c> 1</c>

00:36:52.870 --> 00:36:52.880 align:start position:0%
probabilities uh that is normalized to 1
 

00:36:52.880 --> 00:36:54.390 align:start position:0%
probabilities uh that is normalized to 1
indicating<00:36:53.359><c> the</c><00:36:53.440><c> probability</c><00:36:53.839><c> distribution</c>

00:36:54.390 --> 00:36:54.400 align:start position:0%
indicating the probability distribution
 

00:36:54.400 --> 00:36:56.550 align:start position:0%
indicating the probability distribution
for<00:36:54.560><c> the</c><00:36:54.720><c> next</c><00:36:54.960><c> character</c><00:36:55.920><c> given</c><00:36:56.400><c> the</c>

00:36:56.550 --> 00:36:56.560 align:start position:0%
for the next character given the
 

00:36:56.560 --> 00:36:57.910 align:start position:0%
for the next character given the
character<00:36:56.960><c> before</c><00:36:57.280><c> it</c>

00:36:57.910 --> 00:36:57.920 align:start position:0%
character before it
 

00:36:57.920 --> 00:37:01.510 align:start position:0%
character before it
um<00:36:58.480><c> as</c><00:36:58.640><c> defined</c><00:36:58.960><c> by</c><00:36:59.119><c> which</c><00:36:59.440><c> row</c><00:36:59.680><c> we're</c><00:36:59.920><c> in</c>

00:37:01.510 --> 00:37:01.520 align:start position:0%
um as defined by which row we're in
 

00:37:01.520 --> 00:37:03.109 align:start position:0%
um as defined by which row we're in
so<00:37:02.079><c> basically</c><00:37:02.400><c> what</c><00:37:02.560><c> we'd</c><00:37:02.640><c> like</c><00:37:02.800><c> to</c><00:37:02.880><c> do</c><00:37:03.040><c> is</c>

00:37:03.109 --> 00:37:03.119 align:start position:0%
so basically what we'd like to do is
 

00:37:03.119 --> 00:37:04.950 align:start position:0%
so basically what we'd like to do is
we'd<00:37:03.280><c> like</c><00:37:03.440><c> to</c><00:37:03.520><c> just</c><00:37:03.680><c> do</c><00:37:03.839><c> it</c><00:37:04.000><c> up</c><00:37:04.079><c> front</c><00:37:04.400><c> here</c>

00:37:04.950 --> 00:37:04.960 align:start position:0%
we'd like to just do it up front here
 

00:37:04.960 --> 00:37:06.470 align:start position:0%
we'd like to just do it up front here
and<00:37:05.119><c> then</c><00:37:05.359><c> we</c><00:37:05.440><c> would</c><00:37:05.520><c> like</c><00:37:05.680><c> to</c><00:37:05.839><c> just</c><00:37:06.079><c> use</c><00:37:06.240><c> that</c>

00:37:06.470 --> 00:37:06.480 align:start position:0%
and then we would like to just use that
 

00:37:06.480 --> 00:37:09.510 align:start position:0%
and then we would like to just use that
row<00:37:06.880><c> here</c><00:37:08.160><c> so</c><00:37:08.400><c> here</c><00:37:08.720><c> we</c><00:37:08.880><c> would</c><00:37:09.040><c> like</c><00:37:09.200><c> to</c><00:37:09.280><c> just</c>

00:37:09.510 --> 00:37:09.520 align:start position:0%
row here so here we would like to just
 

00:37:09.520 --> 00:37:12.870 align:start position:0%
row here so here we would like to just
do<00:37:09.920><c> p</c><00:37:10.240><c> equals</c><00:37:10.800><c> p</c><00:37:10.960><c> of</c><00:37:11.119><c> ix</c><00:37:11.680><c> instead</c>

00:37:12.870 --> 00:37:12.880 align:start position:0%
do p equals p of ix instead
 

00:37:12.880 --> 00:37:14.870 align:start position:0%
do p equals p of ix instead
okay

00:37:14.870 --> 00:37:14.880 align:start position:0%
okay
 

00:37:14.880 --> 00:37:15.990 align:start position:0%
okay
the<00:37:14.960><c> other</c><00:37:15.119><c> reason</c><00:37:15.359><c> i</c><00:37:15.440><c> want</c><00:37:15.599><c> to</c><00:37:15.680><c> do</c><00:37:15.760><c> this</c><00:37:15.920><c> is</c>

00:37:15.990 --> 00:37:16.000 align:start position:0%
the other reason i want to do this is
 

00:37:16.000 --> 00:37:17.750 align:start position:0%
the other reason i want to do this is
not<00:37:16.160><c> just</c><00:37:16.320><c> for</c><00:37:16.480><c> efficiency</c><00:37:16.960><c> but</c><00:37:17.200><c> also</c><00:37:17.520><c> i</c><00:37:17.599><c> would</c>

00:37:17.750 --> 00:37:17.760 align:start position:0%
not just for efficiency but also i would
 

00:37:17.760 --> 00:37:19.349 align:start position:0%
not just for efficiency but also i would
like<00:37:18.000><c> us</c><00:37:18.160><c> to</c><00:37:18.320><c> practice</c>

00:37:19.349 --> 00:37:19.359 align:start position:0%
like us to practice
 

00:37:19.359 --> 00:37:21.510 align:start position:0%
like us to practice
these<00:37:19.680><c> n-dimensional</c><00:37:20.240><c> tensors</c><00:37:21.040><c> and</c><00:37:21.200><c> i'd</c><00:37:21.359><c> like</c>

00:37:21.510 --> 00:37:21.520 align:start position:0%
these n-dimensional tensors and i'd like
 

00:37:21.520 --> 00:37:23.589 align:start position:0%
these n-dimensional tensors and i'd like
us<00:37:21.599><c> to</c><00:37:21.839><c> practice</c><00:37:22.560><c> their</c><00:37:22.720><c> manipulation</c><00:37:23.440><c> and</c>

00:37:23.589 --> 00:37:23.599 align:start position:0%
us to practice their manipulation and
 

00:37:23.599 --> 00:37:24.550 align:start position:0%
us to practice their manipulation and
especially<00:37:24.000><c> something</c><00:37:24.240><c> that's</c><00:37:24.400><c> called</c>

00:37:24.550 --> 00:37:24.560 align:start position:0%
especially something that's called
 

00:37:24.560 --> 00:37:25.990 align:start position:0%
especially something that's called
broadcasting<00:37:25.200><c> that</c><00:37:25.280><c> we'll</c><00:37:25.440><c> go</c><00:37:25.599><c> into</c><00:37:25.760><c> in</c><00:37:25.920><c> a</c>

00:37:25.990 --> 00:37:26.000 align:start position:0%
broadcasting that we'll go into in a
 

00:37:26.000 --> 00:37:26.870 align:start position:0%
broadcasting that we'll go into in a
second

00:37:26.870 --> 00:37:26.880 align:start position:0%
second
 

00:37:26.880 --> 00:37:28.150 align:start position:0%
second
we're<00:37:27.119><c> actually</c><00:37:27.359><c> going</c><00:37:27.520><c> to</c><00:37:27.599><c> have</c><00:37:27.760><c> to</c><00:37:27.839><c> become</c>

00:37:28.150 --> 00:37:28.160 align:start position:0%
we're actually going to have to become
 

00:37:28.160 --> 00:37:30.470 align:start position:0%
we're actually going to have to become
very<00:37:28.320><c> good</c><00:37:28.640><c> at</c><00:37:28.800><c> these</c><00:37:29.200><c> tensor</c><00:37:29.520><c> manipulations</c>

00:37:30.470 --> 00:37:30.480 align:start position:0%
very good at these tensor manipulations
 

00:37:30.480 --> 00:37:31.990 align:start position:0%
very good at these tensor manipulations
because<00:37:30.800><c> if</c><00:37:30.880><c> we're</c><00:37:31.040><c> going</c><00:37:31.200><c> to</c><00:37:31.280><c> build</c><00:37:31.520><c> out</c><00:37:31.839><c> all</c>

00:37:31.990 --> 00:37:32.000 align:start position:0%
because if we're going to build out all
 

00:37:32.000 --> 00:37:33.510 align:start position:0%
because if we're going to build out all
the<00:37:32.079><c> way</c><00:37:32.160><c> to</c><00:37:32.320><c> transformers</c><00:37:33.119><c> we're</c><00:37:33.280><c> going</c><00:37:33.440><c> to</c>

00:37:33.510 --> 00:37:33.520 align:start position:0%
the way to transformers we're going to
 

00:37:33.520 --> 00:37:35.349 align:start position:0%
the way to transformers we're going to
be<00:37:33.599><c> doing</c><00:37:33.839><c> some</c><00:37:34.000><c> pretty</c><00:37:34.160><c> complicated</c><00:37:34.880><c> um</c>

00:37:35.349 --> 00:37:35.359 align:start position:0%
be doing some pretty complicated um
 

00:37:35.359 --> 00:37:37.910 align:start position:0%
be doing some pretty complicated um
array<00:37:35.680><c> operations</c><00:37:36.240><c> for</c><00:37:36.400><c> efficiency</c><00:37:37.200><c> and</c><00:37:37.760><c> we</c>

00:37:37.910 --> 00:37:37.920 align:start position:0%
array operations for efficiency and we
 

00:37:37.920 --> 00:37:39.430 align:start position:0%
array operations for efficiency and we
need<00:37:38.079><c> to</c><00:37:38.160><c> really</c><00:37:38.400><c> understand</c><00:37:38.720><c> that</c><00:37:38.960><c> and</c><00:37:39.040><c> be</c>

00:37:39.430 --> 00:37:39.440 align:start position:0%
need to really understand that and be
 

00:37:39.440 --> 00:37:42.069 align:start position:0%
need to really understand that and be
very<00:37:39.599><c> good</c><00:37:39.760><c> at</c><00:37:39.920><c> it</c>

00:37:42.069 --> 00:37:42.079 align:start position:0%
very good at it
 

00:37:42.079 --> 00:37:43.750 align:start position:0%
very good at it
so<00:37:42.320><c> intuitively</c><00:37:42.720><c> what</c><00:37:42.880><c> we</c><00:37:42.960><c> want</c><00:37:43.119><c> to</c><00:37:43.200><c> do</c><00:37:43.359><c> is</c><00:37:43.599><c> we</c>

00:37:43.750 --> 00:37:43.760 align:start position:0%
so intuitively what we want to do is we
 

00:37:43.760 --> 00:37:45.829 align:start position:0%
so intuitively what we want to do is we
first<00:37:44.000><c> want</c><00:37:44.160><c> to</c><00:37:44.320><c> grab</c><00:37:44.560><c> the</c><00:37:44.720><c> floating</c><00:37:45.119><c> point</c>

00:37:45.829 --> 00:37:45.839 align:start position:0%
first want to grab the floating point
 

00:37:45.839 --> 00:37:48.150 align:start position:0%
first want to grab the floating point
copy<00:37:46.480><c> of</c><00:37:46.720><c> n</c>

00:37:48.150 --> 00:37:48.160 align:start position:0%
copy of n
 

00:37:48.160 --> 00:37:49.349 align:start position:0%
copy of n
and<00:37:48.320><c> i'm</c><00:37:48.400><c> mimicking</c><00:37:48.800><c> the</c><00:37:48.960><c> line</c><00:37:49.119><c> here</c>

00:37:49.349 --> 00:37:49.359 align:start position:0%
and i'm mimicking the line here
 

00:37:49.359 --> 00:37:50.870 align:start position:0%
and i'm mimicking the line here
basically

00:37:50.870 --> 00:37:50.880 align:start position:0%
basically
 

00:37:50.880 --> 00:37:53.190 align:start position:0%
basically
and<00:37:50.960><c> then</c><00:37:51.119><c> we</c><00:37:51.200><c> want</c><00:37:51.359><c> to</c><00:37:51.440><c> divide</c><00:37:52.079><c> all</c><00:37:52.240><c> the</c><00:37:52.400><c> rows</c>

00:37:53.190 --> 00:37:53.200 align:start position:0%
and then we want to divide all the rows
 

00:37:53.200 --> 00:37:55.589 align:start position:0%
and then we want to divide all the rows
so<00:37:53.359><c> that</c><00:37:53.680><c> they</c><00:37:54.000><c> sum</c><00:37:54.560><c> to</c><00:37:54.800><c> 1.</c>

00:37:55.589 --> 00:37:55.599 align:start position:0%
so that they sum to 1.
 

00:37:55.599 --> 00:37:57.349 align:start position:0%
so that they sum to 1.
so<00:37:55.920><c> we'd</c><00:37:56.160><c> like</c><00:37:56.320><c> to</c><00:37:56.400><c> do</c><00:37:56.560><c> something</c><00:37:56.720><c> like</c><00:37:56.880><c> this</c><00:37:57.200><c> p</c>

00:37:57.349 --> 00:37:57.359 align:start position:0%
so we'd like to do something like this p
 

00:37:57.359 --> 00:38:00.550 align:start position:0%
so we'd like to do something like this p
divide<00:37:58.079><c> p</c><00:37:58.240><c> dot</c><00:37:58.480><c> sum</c>

00:38:00.550 --> 00:38:00.560 align:start position:0%
divide p dot sum
 

00:38:00.560 --> 00:38:01.270 align:start position:0%
divide p dot sum
but

00:38:01.270 --> 00:38:01.280 align:start position:0%
but
 

00:38:01.280 --> 00:38:02.790 align:start position:0%
but
now<00:38:01.440><c> we</c><00:38:01.599><c> have</c><00:38:01.680><c> to</c><00:38:01.760><c> be</c><00:38:01.839><c> careful</c>

00:38:02.790 --> 00:38:02.800 align:start position:0%
now we have to be careful
 

00:38:02.800 --> 00:38:05.270 align:start position:0%
now we have to be careful
because<00:38:03.119><c> p</c><00:38:03.280><c> dot</c><00:38:03.599><c> sum</c><00:38:03.920><c> actually</c>

00:38:05.270 --> 00:38:05.280 align:start position:0%
because p dot sum actually
 

00:38:05.280 --> 00:38:07.990 align:start position:0%
because p dot sum actually
produces<00:38:05.839><c> a</c><00:38:06.079><c> sum</c>

00:38:07.990 --> 00:38:08.000 align:start position:0%
produces a sum
 

00:38:08.000 --> 00:38:10.630 align:start position:0%
produces a sum
sorry<00:38:08.720><c> equals</c><00:38:09.040><c> and</c><00:38:09.119><c> that</c><00:38:09.280><c> float</c><00:38:09.520><c> copy</c>

00:38:10.630 --> 00:38:10.640 align:start position:0%
sorry equals and that float copy
 

00:38:10.640 --> 00:38:14.950 align:start position:0%
sorry equals and that float copy
p<00:38:10.800><c> dot</c><00:38:11.040><c> sum</c><00:38:11.599><c> produces</c><00:38:12.320><c> a</c><00:38:12.960><c> um</c>

00:38:14.950 --> 00:38:14.960 align:start position:0%
p dot sum produces a um
 

00:38:14.960 --> 00:38:16.950 align:start position:0%
p dot sum produces a um
sums<00:38:15.359><c> up</c><00:38:15.599><c> all</c><00:38:15.760><c> of</c><00:38:15.839><c> the</c><00:38:16.000><c> counts</c><00:38:16.400><c> of</c><00:38:16.480><c> this</c><00:38:16.640><c> entire</c>

00:38:16.950 --> 00:38:16.960 align:start position:0%
sums up all of the counts of this entire
 

00:38:16.960 --> 00:38:19.510 align:start position:0%
sums up all of the counts of this entire
matrix<00:38:17.520><c> n</c><00:38:18.160><c> and</c><00:38:18.320><c> gives</c><00:38:18.560><c> us</c><00:38:18.640><c> a</c><00:38:18.720><c> single</c><00:38:19.040><c> number</c><00:38:19.359><c> of</c>

00:38:19.510 --> 00:38:19.520 align:start position:0%
matrix n and gives us a single number of
 

00:38:19.520 --> 00:38:21.349 align:start position:0%
matrix n and gives us a single number of
just<00:38:19.680><c> the</c><00:38:19.760><c> summation</c><00:38:20.240><c> of</c><00:38:20.320><c> everything</c><00:38:21.200><c> so</c>

00:38:21.349 --> 00:38:21.359 align:start position:0%
just the summation of everything so
 

00:38:21.359 --> 00:38:22.790 align:start position:0%
just the summation of everything so
that's<00:38:21.520><c> not</c><00:38:21.760><c> the</c><00:38:21.920><c> way</c><00:38:22.079><c> we</c><00:38:22.160><c> want</c><00:38:22.240><c> to</c><00:38:22.320><c> define</c>

00:38:22.790 --> 00:38:22.800 align:start position:0%
that's not the way we want to define
 

00:38:22.800 --> 00:38:25.190 align:start position:0%
that's not the way we want to define
divide<00:38:23.359><c> we</c><00:38:23.520><c> want</c><00:38:23.680><c> to</c><00:38:24.079><c> simultaneously</c><00:38:24.960><c> and</c><00:38:25.119><c> in</c>

00:38:25.190 --> 00:38:25.200 align:start position:0%
divide we want to simultaneously and in
 

00:38:25.200 --> 00:38:27.589 align:start position:0%
divide we want to simultaneously and in
parallel<00:38:26.000><c> divide</c><00:38:26.400><c> all</c><00:38:26.480><c> the</c><00:38:26.720><c> rows</c>

00:38:27.589 --> 00:38:27.599 align:start position:0%
parallel divide all the rows
 

00:38:27.599 --> 00:38:30.550 align:start position:0%
parallel divide all the rows
by<00:38:27.920><c> their</c><00:38:28.160><c> respective</c><00:38:28.880><c> sums</c>

00:38:30.550 --> 00:38:30.560 align:start position:0%
by their respective sums
 

00:38:30.560 --> 00:38:32.630 align:start position:0%
by their respective sums
so<00:38:31.200><c> what</c><00:38:31.359><c> we</c><00:38:31.520><c> have</c><00:38:31.599><c> to</c><00:38:31.680><c> do</c><00:38:31.760><c> now</c><00:38:32.079><c> is</c><00:38:32.240><c> we</c><00:38:32.400><c> have</c><00:38:32.560><c> to</c>

00:38:32.630 --> 00:38:32.640 align:start position:0%
so what we have to do now is we have to
 

00:38:32.640 --> 00:38:35.750 align:start position:0%
so what we have to do now is we have to
go<00:38:32.880><c> into</c><00:38:33.280><c> documentation</c><00:38:33.839><c> for</c><00:38:34.000><c> torch.sum</c>

00:38:35.750 --> 00:38:35.760 align:start position:0%
go into documentation for torch.sum
 

00:38:35.760 --> 00:38:37.270 align:start position:0%
go into documentation for torch.sum
and<00:38:36.079><c> we</c><00:38:36.240><c> can</c><00:38:36.400><c> scroll</c><00:38:36.640><c> down</c><00:38:36.800><c> here</c><00:38:36.960><c> to</c><00:38:37.119><c> a</c>

00:38:37.270 --> 00:38:37.280 align:start position:0%
and we can scroll down here to a
 

00:38:37.280 --> 00:38:38.950 align:start position:0%
and we can scroll down here to a
definition<00:38:37.680><c> that</c><00:38:37.839><c> is</c><00:38:37.920><c> relevant</c><00:38:38.320><c> to</c><00:38:38.480><c> us</c><00:38:38.720><c> which</c>

00:38:38.950 --> 00:38:38.960 align:start position:0%
definition that is relevant to us which
 

00:38:38.960 --> 00:38:41.670 align:start position:0%
definition that is relevant to us which
is<00:38:39.119><c> where</c><00:38:39.839><c> we</c><00:38:40.000><c> don't</c><00:38:40.240><c> only</c><00:38:40.480><c> provide</c><00:38:41.040><c> an</c><00:38:41.280><c> input</c>

00:38:41.670 --> 00:38:41.680 align:start position:0%
is where we don't only provide an input
 

00:38:41.680 --> 00:38:43.829 align:start position:0%
is where we don't only provide an input
array<00:38:42.079><c> that</c><00:38:42.240><c> we</c><00:38:42.320><c> want</c><00:38:42.480><c> to</c><00:38:42.720><c> sum</c><00:38:43.280><c> but</c><00:38:43.440><c> we</c><00:38:43.599><c> also</c>

00:38:43.829 --> 00:38:43.839 align:start position:0%
array that we want to sum but we also
 

00:38:43.839 --> 00:38:45.750 align:start position:0%
array that we want to sum but we also
provide<00:38:44.079><c> the</c><00:38:44.240><c> dimension</c><00:38:45.119><c> along</c><00:38:45.440><c> which</c><00:38:45.599><c> we</c>

00:38:45.750 --> 00:38:45.760 align:start position:0%
provide the dimension along which we
 

00:38:45.760 --> 00:38:47.190 align:start position:0%
provide the dimension along which we
want<00:38:45.920><c> to</c><00:38:46.160><c> sum</c>

00:38:47.190 --> 00:38:47.200 align:start position:0%
want to sum
 

00:38:47.200 --> 00:38:49.829 align:start position:0%
want to sum
and<00:38:47.359><c> in</c><00:38:47.440><c> particular</c><00:38:47.839><c> we</c><00:38:48.000><c> want</c><00:38:48.240><c> to</c><00:38:48.560><c> sum</c><00:38:48.880><c> up</c>

00:38:49.829 --> 00:38:49.839 align:start position:0%
and in particular we want to sum up
 

00:38:49.839 --> 00:38:51.030 align:start position:0%
and in particular we want to sum up
over<00:38:50.160><c> rows</c>

00:38:51.030 --> 00:38:51.040 align:start position:0%
over rows
 

00:38:51.040 --> 00:38:52.310 align:start position:0%
over rows
right

00:38:52.310 --> 00:38:52.320 align:start position:0%
right
 

00:38:52.320 --> 00:38:53.750 align:start position:0%
right
now<00:38:52.640><c> one</c><00:38:52.800><c> more</c><00:38:52.960><c> argument</c><00:38:53.280><c> that</c><00:38:53.359><c> i</c><00:38:53.440><c> want</c><00:38:53.599><c> you</c><00:38:53.680><c> to</c>

00:38:53.750 --> 00:38:53.760 align:start position:0%
now one more argument that i want you to
 

00:38:53.760 --> 00:38:56.230 align:start position:0%
now one more argument that i want you to
pay<00:38:53.839><c> attention</c><00:38:54.240><c> to</c><00:38:54.400><c> here</c><00:38:54.800><c> is</c><00:38:55.280><c> the</c><00:38:55.680><c> keep</c><00:38:55.920><c> them</c>

00:38:56.230 --> 00:38:56.240 align:start position:0%
pay attention to here is the keep them
 

00:38:56.240 --> 00:38:57.829 align:start position:0%
pay attention to here is the keep them
is<00:38:56.480><c> false</c>

00:38:57.829 --> 00:38:57.839 align:start position:0%
is false
 

00:38:57.839 --> 00:39:00.230 align:start position:0%
is false
if<00:38:58.000><c> keep</c><00:38:58.240><c> them</c><00:38:58.640><c> is</c><00:38:59.040><c> true</c><00:38:59.680><c> then</c><00:38:59.839><c> the</c><00:39:00.000><c> output</c>

00:39:00.230 --> 00:39:00.240 align:start position:0%
if keep them is true then the output
 

00:39:00.240 --> 00:39:02.390 align:start position:0%
if keep them is true then the output
tensor<00:39:00.880><c> is</c><00:39:01.040><c> of</c><00:39:01.200><c> the</c><00:39:01.280><c> same</c><00:39:01.520><c> size</c><00:39:01.760><c> as</c><00:39:01.920><c> input</c>

00:39:02.390 --> 00:39:02.400 align:start position:0%
tensor is of the same size as input
 

00:39:02.400 --> 00:39:03.750 align:start position:0%
tensor is of the same size as input
except<00:39:02.720><c> of</c><00:39:02.800><c> course</c><00:39:03.040><c> the</c><00:39:03.119><c> dimension</c><00:39:03.520><c> along</c>

00:39:03.750 --> 00:39:03.760 align:start position:0%
except of course the dimension along
 

00:39:03.760 --> 00:39:05.829 align:start position:0%
except of course the dimension along
which<00:39:04.000><c> is</c><00:39:04.160><c> summed</c><00:39:04.720><c> which</c><00:39:04.960><c> will</c><00:39:05.119><c> become</c><00:39:05.440><c> just</c>

00:39:05.829 --> 00:39:05.839 align:start position:0%
which is summed which will become just
 

00:39:05.839 --> 00:39:07.270 align:start position:0%
which is summed which will become just
one

00:39:07.270 --> 00:39:07.280 align:start position:0%
one
 

00:39:07.280 --> 00:39:11.990 align:start position:0%
one
but<00:39:07.599><c> if</c><00:39:07.760><c> you</c><00:39:07.920><c> pass</c><00:39:08.240><c> in</c><00:39:08.880><c> keep</c><00:39:09.119><c> them</c><00:39:09.440><c> as</c><00:39:10.000><c> false</c>

00:39:11.990 --> 00:39:12.000 align:start position:0%
but if you pass in keep them as false
 

00:39:12.000 --> 00:39:14.470 align:start position:0%
but if you pass in keep them as false
then<00:39:12.240><c> this</c><00:39:12.480><c> dimension</c><00:39:12.960><c> is</c><00:39:13.119><c> squeezed</c><00:39:13.680><c> out</c><00:39:14.320><c> and</c>

00:39:14.470 --> 00:39:14.480 align:start position:0%
then this dimension is squeezed out and
 

00:39:14.480 --> 00:39:16.790 align:start position:0%
then this dimension is squeezed out and
so<00:39:14.800><c> torch.sum</c><00:39:15.520><c> not</c><00:39:15.680><c> only</c><00:39:15.920><c> does</c><00:39:16.079><c> the</c><00:39:16.320><c> sum</c><00:39:16.720><c> and</c>

00:39:16.790 --> 00:39:16.800 align:start position:0%
so torch.sum not only does the sum and
 

00:39:16.800 --> 00:39:18.790 align:start position:0%
so torch.sum not only does the sum and
collapses<00:39:17.280><c> dimension</c><00:39:17.680><c> to</c><00:39:17.760><c> be</c><00:39:17.920><c> of</c><00:39:18.079><c> size</c><00:39:18.320><c> one</c>

00:39:18.790 --> 00:39:18.800 align:start position:0%
collapses dimension to be of size one
 

00:39:18.800 --> 00:39:20.390 align:start position:0%
collapses dimension to be of size one
but<00:39:18.960><c> in</c><00:39:19.119><c> addition</c><00:39:19.520><c> it</c><00:39:19.680><c> does</c><00:39:19.839><c> what's</c><00:39:20.079><c> called</c><00:39:20.320><c> a</c>

00:39:20.390 --> 00:39:20.400 align:start position:0%
but in addition it does what's called a
 

00:39:20.400 --> 00:39:22.150 align:start position:0%
but in addition it does what's called a
squeeze<00:39:20.960><c> where</c><00:39:21.119><c> it</c><00:39:21.200><c> squeezes</c><00:39:21.599><c> out</c><00:39:22.000><c> it</c>

00:39:22.150 --> 00:39:22.160 align:start position:0%
squeeze where it squeezes out it
 

00:39:22.160 --> 00:39:24.550 align:start position:0%
squeeze where it squeezes out it
squeezes<00:39:22.560><c> out</c><00:39:22.640><c> that</c><00:39:22.800><c> dimension</c>

00:39:24.550 --> 00:39:24.560 align:start position:0%
squeezes out that dimension
 

00:39:24.560 --> 00:39:25.750 align:start position:0%
squeezes out that dimension
so

00:39:25.750 --> 00:39:25.760 align:start position:0%
so
 

00:39:25.760 --> 00:39:27.030 align:start position:0%
so
basically<00:39:26.079><c> what</c><00:39:26.240><c> we</c><00:39:26.320><c> want</c><00:39:26.560><c> here</c><00:39:26.800><c> is</c><00:39:26.880><c> we</c>

00:39:27.030 --> 00:39:27.040 align:start position:0%
basically what we want here is we
 

00:39:27.040 --> 00:39:29.030 align:start position:0%
basically what we want here is we
instead<00:39:27.280><c> want</c><00:39:27.440><c> to</c><00:39:27.520><c> do</c><00:39:27.680><c> p</c><00:39:27.839><c> dot</c><00:39:28.079><c> sum</c><00:39:28.400><c> of</c><00:39:28.800><c> some</c>

00:39:29.030 --> 00:39:29.040 align:start position:0%
instead want to do p dot sum of some
 

00:39:29.040 --> 00:39:30.710 align:start position:0%
instead want to do p dot sum of some
axis

00:39:30.710 --> 00:39:30.720 align:start position:0%
axis
 

00:39:30.720 --> 00:39:32.470 align:start position:0%
axis
and<00:39:30.880><c> in</c><00:39:31.040><c> particular</c><00:39:31.599><c> notice</c><00:39:31.920><c> that</c><00:39:32.079><c> p</c><00:39:32.240><c> dot</c>

00:39:32.470 --> 00:39:32.480 align:start position:0%
and in particular notice that p dot
 

00:39:32.480 --> 00:39:35.510 align:start position:0%
and in particular notice that p dot
shape<00:39:32.960><c> is</c><00:39:33.200><c> 27</c><00:39:33.520><c> by</c><00:39:33.680><c> 27</c>

00:39:35.510 --> 00:39:35.520 align:start position:0%
shape is 27 by 27
 

00:39:35.520 --> 00:39:37.829 align:start position:0%
shape is 27 by 27
so<00:39:35.680><c> when</c><00:39:35.839><c> we</c><00:39:36.000><c> sum</c><00:39:36.160><c> up</c><00:39:36.320><c> across</c><00:39:36.720><c> axis</c><00:39:37.119><c> zero</c><00:39:37.680><c> then</c>

00:39:37.829 --> 00:39:37.839 align:start position:0%
so when we sum up across axis zero then
 

00:39:37.839 --> 00:39:39.990 align:start position:0%
so when we sum up across axis zero then
we<00:39:38.000><c> would</c><00:39:38.160><c> be</c><00:39:38.320><c> taking</c><00:39:38.640><c> the</c><00:39:38.800><c> zeroth</c><00:39:39.280><c> dimension</c>

00:39:39.990 --> 00:39:40.000 align:start position:0%
we would be taking the zeroth dimension
 

00:39:40.000 --> 00:39:42.550 align:start position:0%
we would be taking the zeroth dimension
and<00:39:40.160><c> we</c><00:39:40.240><c> would</c><00:39:40.400><c> be</c><00:39:40.480><c> summing</c><00:39:40.800><c> across</c><00:39:41.280><c> it</c>

00:39:42.550 --> 00:39:42.560 align:start position:0%
and we would be summing across it
 

00:39:42.560 --> 00:39:44.950 align:start position:0%
and we would be summing across it
so<00:39:42.720><c> when</c><00:39:42.960><c> keep</c><00:39:43.119><c> them</c><00:39:43.359><c> as</c><00:39:43.599><c> true</c>

00:39:44.950 --> 00:39:44.960 align:start position:0%
so when keep them as true
 

00:39:44.960 --> 00:39:46.950 align:start position:0%
so when keep them as true
then<00:39:45.200><c> this</c><00:39:45.520><c> thing</c><00:39:46.000><c> will</c><00:39:46.160><c> not</c><00:39:46.400><c> only</c><00:39:46.560><c> give</c><00:39:46.800><c> us</c>

00:39:46.950 --> 00:39:46.960 align:start position:0%
then this thing will not only give us
 

00:39:46.960 --> 00:39:49.990 align:start position:0%
then this thing will not only give us
the<00:39:47.520><c> counts</c><00:39:48.079><c> across</c><00:39:48.880><c> um</c>

00:39:49.990 --> 00:39:50.000 align:start position:0%
the counts across um
 

00:39:50.000 --> 00:39:51.829 align:start position:0%
the counts across um
along<00:39:50.240><c> the</c><00:39:50.400><c> columns</c>

00:39:51.829 --> 00:39:51.839 align:start position:0%
along the columns
 

00:39:51.839 --> 00:39:53.589 align:start position:0%
along the columns
but<00:39:52.079><c> notice</c><00:39:52.480><c> that</c><00:39:52.640><c> basically</c><00:39:53.040><c> the</c><00:39:53.280><c> shape</c><00:39:53.520><c> of</c>

00:39:53.589 --> 00:39:53.599 align:start position:0%
but notice that basically the shape of
 

00:39:53.599 --> 00:39:57.349 align:start position:0%
but notice that basically the shape of
this<00:39:54.160><c> is</c><00:39:54.320><c> 1</c><00:39:54.560><c> by</c><00:39:54.720><c> 27</c><00:39:55.359><c> we</c><00:39:55.520><c> just</c><00:39:55.680><c> get</c><00:39:55.839><c> a</c><00:39:55.920><c> row</c><00:39:56.079><c> vector</c>

00:39:57.349 --> 00:39:57.359 align:start position:0%
this is 1 by 27 we just get a row vector
 

00:39:57.359 --> 00:39:58.950 align:start position:0%
this is 1 by 27 we just get a row vector
and<00:39:57.599><c> the</c><00:39:57.760><c> reason</c><00:39:58.000><c> we</c><00:39:58.079><c> get</c><00:39:58.160><c> a</c><00:39:58.240><c> row</c><00:39:58.480><c> vector</c><00:39:58.800><c> here</c>

00:39:58.950 --> 00:39:58.960 align:start position:0%
and the reason we get a row vector here
 

00:39:58.960 --> 00:40:00.230 align:start position:0%
and the reason we get a row vector here
again<00:39:59.280><c> is</c><00:39:59.359><c> because</c><00:39:59.520><c> we</c><00:39:59.680><c> passed</c><00:39:59.920><c> in</c><00:40:00.000><c> zero</c>

00:40:00.230 --> 00:40:00.240 align:start position:0%
again is because we passed in zero
 

00:40:00.240 --> 00:40:02.470 align:start position:0%
again is because we passed in zero
dimension<00:40:00.880><c> so</c><00:40:01.119><c> this</c><00:40:01.359><c> zero</c><00:40:01.680><c> dimension</c><00:40:02.079><c> becomes</c>

00:40:02.470 --> 00:40:02.480 align:start position:0%
dimension so this zero dimension becomes
 

00:40:02.480 --> 00:40:04.710 align:start position:0%
dimension so this zero dimension becomes
one<00:40:02.880><c> and</c><00:40:03.040><c> we've</c><00:40:03.200><c> done</c><00:40:03.440><c> a</c><00:40:03.680><c> sum</c>

00:40:04.710 --> 00:40:04.720 align:start position:0%
one and we've done a sum
 

00:40:04.720 --> 00:40:06.630 align:start position:0%
one and we've done a sum
and<00:40:04.880><c> we</c><00:40:05.040><c> get</c><00:40:05.200><c> a</c><00:40:05.280><c> row</c><00:40:05.760><c> and</c><00:40:05.920><c> so</c><00:40:06.079><c> basically</c><00:40:06.480><c> we've</c>

00:40:06.630 --> 00:40:06.640 align:start position:0%
and we get a row and so basically we've
 

00:40:06.640 --> 00:40:08.069 align:start position:0%
and we get a row and so basically we've
done<00:40:06.800><c> the</c><00:40:07.040><c> sum</c>

00:40:08.069 --> 00:40:08.079 align:start position:0%
done the sum
 

00:40:08.079 --> 00:40:09.270 align:start position:0%
done the sum
this<00:40:08.319><c> way</c>

00:40:09.270 --> 00:40:09.280 align:start position:0%
this way
 

00:40:09.280 --> 00:40:11.109 align:start position:0%
this way
vertically<00:40:09.920><c> and</c><00:40:10.079><c> arrived</c><00:40:10.480><c> at</c><00:40:10.560><c> just</c><00:40:10.720><c> a</c><00:40:10.800><c> single</c>

00:40:11.109 --> 00:40:11.119 align:start position:0%
vertically and arrived at just a single
 

00:40:11.119 --> 00:40:12.870 align:start position:0%
vertically and arrived at just a single
1<00:40:11.359><c> by</c><00:40:11.599><c> 27</c>

00:40:12.870 --> 00:40:12.880 align:start position:0%
1 by 27
 

00:40:12.880 --> 00:40:15.190 align:start position:0%
1 by 27
vector<00:40:13.200><c> of</c><00:40:13.359><c> counts</c>

00:40:15.190 --> 00:40:15.200 align:start position:0%
vector of counts
 

00:40:15.200 --> 00:40:17.670 align:start position:0%
vector of counts
what<00:40:15.440><c> happens</c><00:40:15.680><c> when</c><00:40:15.839><c> you</c><00:40:15.920><c> take</c><00:40:16.160><c> out</c><00:40:16.319><c> keep</c><00:40:16.560><c> them</c>

00:40:17.670 --> 00:40:17.680 align:start position:0%
what happens when you take out keep them
 

00:40:17.680 --> 00:40:20.230 align:start position:0%
what happens when you take out keep them
is<00:40:17.839><c> that</c><00:40:18.000><c> we</c><00:40:18.079><c> just</c><00:40:18.240><c> get</c><00:40:18.560><c> 27.</c><00:40:19.440><c> so</c><00:40:19.599><c> it</c><00:40:19.760><c> squeezes</c>

00:40:20.230 --> 00:40:20.240 align:start position:0%
is that we just get 27. so it squeezes
 

00:40:20.240 --> 00:40:23.510 align:start position:0%
is that we just get 27. so it squeezes
out<00:40:20.640><c> that</c><00:40:20.800><c> dimension</c><00:40:21.599><c> and</c><00:40:21.680><c> we</c><00:40:21.839><c> just</c><00:40:22.079><c> get</c>

00:40:23.510 --> 00:40:23.520 align:start position:0%
out that dimension and we just get
 

00:40:23.520 --> 00:40:28.550 align:start position:0%
out that dimension and we just get
a<00:40:23.680><c> one-dimensional</c><00:40:24.319><c> vector</c><00:40:24.720><c> of</c><00:40:24.880><c> size</c><00:40:25.200><c> 27.</c>

00:40:28.550 --> 00:40:28.560 align:start position:0%
 
 

00:40:28.560 --> 00:40:31.270 align:start position:0%
 
now<00:40:28.800><c> we</c><00:40:28.960><c> don't</c><00:40:29.200><c> actually</c><00:40:29.520><c> want</c>

00:40:31.270 --> 00:40:31.280 align:start position:0%
now we don't actually want
 

00:40:31.280 --> 00:40:33.670 align:start position:0%
now we don't actually want
one<00:40:31.440><c> by</c><00:40:31.680><c> 27</c><00:40:32.160><c> row</c><00:40:32.319><c> vector</c><00:40:32.960><c> because</c><00:40:33.280><c> that</c><00:40:33.440><c> gives</c>

00:40:33.670 --> 00:40:33.680 align:start position:0%
one by 27 row vector because that gives
 

00:40:33.680 --> 00:40:37.430 align:start position:0%
one by 27 row vector because that gives
us<00:40:33.839><c> the</c><00:40:34.400><c> counts</c><00:40:34.880><c> or</c><00:40:35.040><c> the</c><00:40:35.280><c> sums</c><00:40:35.839><c> across</c>

00:40:37.430 --> 00:40:37.440 align:start position:0%
us the counts or the sums across
 

00:40:37.440 --> 00:40:39.349 align:start position:0%
us the counts or the sums across
the<00:40:38.079><c> columns</c>

00:40:39.349 --> 00:40:39.359 align:start position:0%
the columns
 

00:40:39.359 --> 00:40:41.109 align:start position:0%
the columns
we<00:40:39.520><c> actually</c><00:40:39.839><c> want</c><00:40:40.079><c> to</c><00:40:40.240><c> sum</c><00:40:40.480><c> the</c><00:40:40.640><c> other</c><00:40:40.800><c> way</c>

00:40:41.109 --> 00:40:41.119 align:start position:0%
we actually want to sum the other way
 

00:40:41.119 --> 00:40:43.270 align:start position:0%
we actually want to sum the other way
along<00:40:41.359><c> dimension</c><00:40:41.920><c> one</c><00:40:42.640><c> and</c><00:40:42.800><c> you'll</c><00:40:42.960><c> see</c><00:40:43.119><c> that</c>

00:40:43.270 --> 00:40:43.280 align:start position:0%
along dimension one and you'll see that
 

00:40:43.280 --> 00:40:46.230 align:start position:0%
along dimension one and you'll see that
the<00:40:43.440><c> shape</c><00:40:43.760><c> of</c><00:40:43.839><c> this</c><00:40:44.079><c> is</c><00:40:44.240><c> 27</c><00:40:44.800><c> by</c><00:40:45.040><c> one</c><00:40:45.599><c> so</c><00:40:45.839><c> it's</c><00:40:46.079><c> a</c>

00:40:46.230 --> 00:40:46.240 align:start position:0%
the shape of this is 27 by one so it's a
 

00:40:46.240 --> 00:40:49.829 align:start position:0%
the shape of this is 27 by one so it's a
column<00:40:46.560><c> vector</c><00:40:47.280><c> it's</c><00:40:47.520><c> a</c><00:40:47.599><c> 27</c><00:40:48.160><c> by</c><00:40:48.400><c> one</c>

00:40:49.829 --> 00:40:49.839 align:start position:0%
column vector it's a 27 by one
 

00:40:49.839 --> 00:40:52.790 align:start position:0%
column vector it's a 27 by one
vector<00:40:50.240><c> of</c><00:40:50.400><c> counts</c>

00:40:52.790 --> 00:40:52.800 align:start position:0%
vector of counts
 

00:40:52.800 --> 00:40:53.829 align:start position:0%
vector of counts
okay

00:40:53.829 --> 00:40:53.839 align:start position:0%
okay
 

00:40:53.839 --> 00:40:55.109 align:start position:0%
okay
and<00:40:53.920><c> that's</c><00:40:54.160><c> because</c><00:40:54.400><c> what's</c><00:40:54.640><c> happened</c><00:40:54.880><c> here</c>

00:40:55.109 --> 00:40:55.119 align:start position:0%
and that's because what's happened here
 

00:40:55.119 --> 00:40:56.950 align:start position:0%
and that's because what's happened here
is<00:40:55.200><c> that</c><00:40:55.359><c> we're</c><00:40:55.440><c> going</c><00:40:55.680><c> horizontally</c><00:40:56.800><c> and</c>

00:40:56.950 --> 00:40:56.960 align:start position:0%
is that we're going horizontally and
 

00:40:56.960 --> 00:41:01.430 align:start position:0%
is that we're going horizontally and
this<00:40:57.200><c> 27</c><00:40:57.599><c> by</c><00:40:57.760><c> 27</c><00:40:58.240><c> matrix</c><00:40:58.800><c> becomes</c><00:40:59.200><c> a</c><00:40:59.839><c> 27</c><00:41:00.400><c> by</c><00:41:00.800><c> 1</c>

00:41:01.430 --> 00:41:01.440 align:start position:0%
this 27 by 27 matrix becomes a 27 by 1
 

00:41:01.440 --> 00:41:03.430 align:start position:0%
this 27 by 27 matrix becomes a 27 by 1
array

00:41:03.430 --> 00:41:03.440 align:start position:0%
array
 

00:41:03.440 --> 00:41:06.309 align:start position:0%
array
now<00:41:03.599><c> you'll</c><00:41:03.760><c> notice</c><00:41:04.000><c> by</c><00:41:04.160><c> the</c><00:41:04.240><c> way</c><00:41:04.480><c> that</c><00:41:04.839><c> um</c><00:41:06.160><c> the</c>

00:41:06.309 --> 00:41:06.319 align:start position:0%
now you'll notice by the way that um the
 

00:41:06.319 --> 00:41:08.069 align:start position:0%
now you'll notice by the way that um the
actual<00:41:06.640><c> numbers</c>

00:41:08.069 --> 00:41:08.079 align:start position:0%
actual numbers
 

00:41:08.079 --> 00:41:10.470 align:start position:0%
actual numbers
of<00:41:08.160><c> these</c><00:41:08.400><c> counts</c><00:41:08.880><c> are</c><00:41:09.119><c> identical</c>

00:41:10.470 --> 00:41:10.480 align:start position:0%
of these counts are identical
 

00:41:10.480 --> 00:41:12.550 align:start position:0%
of these counts are identical
and<00:41:10.640><c> that's</c><00:41:10.880><c> because</c><00:41:11.200><c> this</c><00:41:11.680><c> special</c><00:41:12.160><c> array</c><00:41:12.480><c> of</c>

00:41:12.550 --> 00:41:12.560 align:start position:0%
and that's because this special array of
 

00:41:12.560 --> 00:41:13.910 align:start position:0%
and that's because this special array of
counts<00:41:12.880><c> here</c><00:41:13.119><c> comes</c><00:41:13.359><c> from</c><00:41:13.520><c> bi-gram</c>

00:41:13.910 --> 00:41:13.920 align:start position:0%
counts here comes from bi-gram
 

00:41:13.920 --> 00:41:15.750 align:start position:0%
counts here comes from bi-gram
statistics<00:41:14.720><c> and</c><00:41:14.960><c> actually</c><00:41:15.200><c> it</c><00:41:15.280><c> just</c><00:41:15.520><c> so</c>

00:41:15.750 --> 00:41:15.760 align:start position:0%
statistics and actually it just so
 

00:41:15.760 --> 00:41:17.670 align:start position:0%
statistics and actually it just so
happens<00:41:16.480><c> by</c><00:41:16.720><c> chance</c>

00:41:17.670 --> 00:41:17.680 align:start position:0%
happens by chance
 

00:41:17.680 --> 00:41:19.190 align:start position:0%
happens by chance
or<00:41:18.000><c> because</c><00:41:18.240><c> of</c><00:41:18.319><c> the</c><00:41:18.400><c> way</c><00:41:18.560><c> this</c><00:41:18.880><c> array</c><00:41:19.119><c> is</c>

00:41:19.190 --> 00:41:19.200 align:start position:0%
or because of the way this array is
 

00:41:19.200 --> 00:41:21.030 align:start position:0%
or because of the way this array is
constructed<00:41:20.000><c> that</c><00:41:20.160><c> the</c><00:41:20.400><c> sums</c><00:41:20.640><c> along</c><00:41:20.880><c> the</c>

00:41:21.030 --> 00:41:21.040 align:start position:0%
constructed that the sums along the
 

00:41:21.040 --> 00:41:23.430 align:start position:0%
constructed that the sums along the
columns<00:41:21.520><c> or</c><00:41:21.680><c> along</c><00:41:21.920><c> the</c><00:41:22.079><c> rows</c><00:41:22.880><c> horizontally</c>

00:41:23.430 --> 00:41:23.440 align:start position:0%
columns or along the rows horizontally
 

00:41:23.440 --> 00:41:26.069 align:start position:0%
columns or along the rows horizontally
or<00:41:23.520><c> vertically</c><00:41:24.240><c> is</c><00:41:24.480><c> identical</c>

00:41:26.069 --> 00:41:26.079 align:start position:0%
or vertically is identical
 

00:41:26.079 --> 00:41:27.349 align:start position:0%
or vertically is identical
but<00:41:26.319><c> actually</c><00:41:26.560><c> what</c><00:41:26.720><c> we</c><00:41:26.800><c> want</c><00:41:26.880><c> to</c><00:41:26.960><c> do</c><00:41:27.119><c> in</c><00:41:27.200><c> this</c>

00:41:27.349 --> 00:41:27.359 align:start position:0%
but actually what we want to do in this
 

00:41:27.359 --> 00:41:30.069 align:start position:0%
but actually what we want to do in this
case<00:41:27.680><c> is</c><00:41:27.760><c> we</c><00:41:27.920><c> want</c><00:41:28.079><c> to</c><00:41:28.319><c> sum</c><00:41:28.560><c> across</c><00:41:29.119><c> the</c>

00:41:30.069 --> 00:41:30.079 align:start position:0%
case is we want to sum across the
 

00:41:30.079 --> 00:41:31.109 align:start position:0%
case is we want to sum across the
rows

00:41:31.109 --> 00:41:31.119 align:start position:0%
rows
 

00:41:31.119 --> 00:41:33.829 align:start position:0%
rows
horizontally<00:41:32.240><c> so</c><00:41:32.640><c> what</c><00:41:32.800><c> we</c><00:41:32.960><c> want</c><00:41:33.200><c> here</c><00:41:33.520><c> is</c><00:41:33.680><c> p</c>

00:41:33.829 --> 00:41:33.839 align:start position:0%
horizontally so what we want here is p
 

00:41:33.839 --> 00:41:37.190 align:start position:0%
horizontally so what we want here is p
that<00:41:33.920><c> sum</c><00:41:34.160><c> of</c><00:41:34.240><c> one</c><00:41:34.560><c> with</c><00:41:34.800><c> keep</c><00:41:35.119><c> in</c><00:41:35.440><c> true</c>

00:41:37.190 --> 00:41:37.200 align:start position:0%
that sum of one with keep in true
 

00:41:37.200 --> 00:41:39.430 align:start position:0%
that sum of one with keep in true
27<00:41:37.680><c> by</c><00:41:37.839><c> one</c><00:41:38.079><c> column</c><00:41:38.400><c> vector</c>

00:41:39.430 --> 00:41:39.440 align:start position:0%
27 by one column vector
 

00:41:39.440 --> 00:41:40.950 align:start position:0%
27 by one column vector
and<00:41:39.520><c> now</c><00:41:39.680><c> what</c><00:41:39.839><c> we</c><00:41:39.920><c> want</c><00:41:40.079><c> to</c><00:41:40.160><c> do</c><00:41:40.319><c> is</c><00:41:40.400><c> we</c><00:41:40.560><c> want</c><00:41:40.720><c> to</c>

00:41:40.950 --> 00:41:40.960 align:start position:0%
and now what we want to do is we want to
 

00:41:40.960 --> 00:41:44.550 align:start position:0%
and now what we want to do is we want to
divide<00:41:41.280><c> by</c><00:41:41.440><c> that</c>

00:41:44.550 --> 00:41:44.560 align:start position:0%
 
 

00:41:44.560 --> 00:41:46.309 align:start position:0%
 
now<00:41:44.800><c> we</c><00:41:44.880><c> have</c><00:41:44.960><c> to</c><00:41:45.040><c> be</c><00:41:45.119><c> careful</c><00:41:45.440><c> here</c><00:41:45.599><c> again</c><00:41:46.160><c> is</c>

00:41:46.309 --> 00:41:46.319 align:start position:0%
now we have to be careful here again is
 

00:41:46.319 --> 00:41:48.790 align:start position:0%
now we have to be careful here again is
it<00:41:46.480><c> possible</c><00:41:46.960><c> to</c><00:41:47.280><c> take</c>

00:41:48.790 --> 00:41:48.800 align:start position:0%
it possible to take
 

00:41:48.800 --> 00:41:51.670 align:start position:0%
it possible to take
what's<00:41:49.119><c> a</c><00:41:49.680><c> um</c><00:41:50.240><c> p</c><00:41:50.400><c> dot</c><00:41:50.560><c> shape</c><00:41:50.800><c> you</c><00:41:50.960><c> see</c><00:41:51.119><c> here</c><00:41:51.280><c> 27</c>

00:41:51.670 --> 00:41:51.680 align:start position:0%
what's a um p dot shape you see here 27
 

00:41:51.680 --> 00:41:55.190 align:start position:0%
what's a um p dot shape you see here 27
by<00:41:51.839><c> 27</c><00:41:52.640><c> is</c><00:41:52.800><c> it</c><00:41:52.880><c> possible</c><00:41:53.200><c> to</c><00:41:53.280><c> take</c><00:41:53.440><c> a</c><00:41:53.520><c> 27</c><00:41:54.000><c> by</c><00:41:54.160><c> 27</c>

00:41:55.190 --> 00:41:55.200 align:start position:0%
by 27 is it possible to take a 27 by 27
 

00:41:55.200 --> 00:41:59.190 align:start position:0%
by 27 is it possible to take a 27 by 27
array<00:41:56.079><c> and</c><00:41:56.319><c> divide</c><00:41:56.640><c> it</c><00:41:56.720><c> by</c><00:41:56.960><c> what</c><00:41:57.200><c> is</c><00:41:57.440><c> a</c><00:41:57.680><c> 27</c><00:41:58.400><c> by</c><00:41:58.640><c> 1</c>

00:41:59.190 --> 00:41:59.200 align:start position:0%
array and divide it by what is a 27 by 1
 

00:41:59.200 --> 00:42:01.270 align:start position:0%
array and divide it by what is a 27 by 1
array

00:42:01.270 --> 00:42:01.280 align:start position:0%
array
 

00:42:01.280 --> 00:42:03.750 align:start position:0%
array
is<00:42:01.440><c> that</c><00:42:01.599><c> an</c><00:42:01.839><c> operation</c><00:42:02.319><c> that</c><00:42:02.480><c> you</c><00:42:02.560><c> can</c><00:42:02.720><c> do</c>

00:42:03.750 --> 00:42:03.760 align:start position:0%
is that an operation that you can do
 

00:42:03.760 --> 00:42:05.349 align:start position:0%
is that an operation that you can do
and<00:42:04.079><c> whether</c><00:42:04.319><c> or</c><00:42:04.400><c> not</c><00:42:04.560><c> you</c><00:42:04.640><c> can</c><00:42:04.800><c> perform</c><00:42:05.200><c> this</c>

00:42:05.349 --> 00:42:05.359 align:start position:0%
and whether or not you can perform this
 

00:42:05.359 --> 00:42:06.790 align:start position:0%
and whether or not you can perform this
operation<00:42:05.760><c> is</c><00:42:05.839><c> determined</c><00:42:06.160><c> by</c><00:42:06.319><c> what's</c><00:42:06.560><c> called</c>

00:42:06.790 --> 00:42:06.800 align:start position:0%
operation is determined by what's called
 

00:42:06.800 --> 00:42:09.510 align:start position:0%
operation is determined by what's called
broadcasting<00:42:07.440><c> rules</c><00:42:08.160><c> so</c><00:42:08.319><c> if</c><00:42:08.480><c> you</c><00:42:08.560><c> just</c><00:42:08.960><c> search</c>

00:42:09.510 --> 00:42:09.520 align:start position:0%
broadcasting rules so if you just search
 

00:42:09.520 --> 00:42:11.910 align:start position:0%
broadcasting rules so if you just search
broadcasting<00:42:10.079><c> semantics</c><00:42:10.560><c> in</c><00:42:10.720><c> torch</c>

00:42:11.910 --> 00:42:11.920 align:start position:0%
broadcasting semantics in torch
 

00:42:11.920 --> 00:42:12.950 align:start position:0%
broadcasting semantics in torch
you'll<00:42:12.160><c> notice</c><00:42:12.400><c> that</c><00:42:12.480><c> there's</c><00:42:12.640><c> a</c><00:42:12.720><c> special</c>

00:42:12.950 --> 00:42:12.960 align:start position:0%
you'll notice that there's a special
 

00:42:12.960 --> 00:42:14.309 align:start position:0%
you'll notice that there's a special
definition<00:42:13.520><c> for</c>

00:42:14.309 --> 00:42:14.319 align:start position:0%
definition for
 

00:42:14.319 --> 00:42:16.870 align:start position:0%
definition for
what's<00:42:14.560><c> called</c><00:42:14.839><c> broadcasting</c><00:42:15.920><c> that</c><00:42:16.319><c> uh</c><00:42:16.720><c> for</c>

00:42:16.870 --> 00:42:16.880 align:start position:0%
what's called broadcasting that uh for
 

00:42:16.880 --> 00:42:20.069 align:start position:0%
what's called broadcasting that uh for
whether<00:42:17.119><c> or</c><00:42:17.200><c> not</c><00:42:17.599><c> um</c><00:42:18.160><c> these</c><00:42:18.480><c> two</c><00:42:19.119><c> uh</c><00:42:19.359><c> arrays</c>

00:42:20.069 --> 00:42:20.079 align:start position:0%
whether or not um these two uh arrays
 

00:42:20.079 --> 00:42:22.069 align:start position:0%
whether or not um these two uh arrays
can<00:42:20.240><c> be</c><00:42:20.400><c> combined</c><00:42:20.880><c> in</c><00:42:20.960><c> a</c><00:42:21.040><c> binary</c><00:42:21.440><c> operation</c>

00:42:22.069 --> 00:42:22.079 align:start position:0%
can be combined in a binary operation
 

00:42:22.079 --> 00:42:23.829 align:start position:0%
can be combined in a binary operation
like<00:42:22.400><c> division</c>

00:42:23.829 --> 00:42:23.839 align:start position:0%
like division
 

00:42:23.839 --> 00:42:25.510 align:start position:0%
like division
so<00:42:24.000><c> the</c><00:42:24.079><c> first</c><00:42:24.240><c> condition</c><00:42:24.800><c> is</c><00:42:25.040><c> each</c><00:42:25.280><c> tensor</c>

00:42:25.510 --> 00:42:25.520 align:start position:0%
so the first condition is each tensor
 

00:42:25.520 --> 00:42:27.190 align:start position:0%
so the first condition is each tensor
has<00:42:25.680><c> at</c><00:42:25.760><c> least</c><00:42:26.000><c> one</c><00:42:26.160><c> dimension</c><00:42:26.640><c> which</c><00:42:26.880><c> is</c><00:42:27.119><c> the</c>

00:42:27.190 --> 00:42:27.200 align:start position:0%
has at least one dimension which is the
 

00:42:27.200 --> 00:42:28.470 align:start position:0%
has at least one dimension which is the
case<00:42:27.440><c> for</c><00:42:27.680><c> us</c>

00:42:28.470 --> 00:42:28.480 align:start position:0%
case for us
 

00:42:28.480 --> 00:42:29.589 align:start position:0%
case for us
and<00:42:28.560><c> then</c><00:42:28.720><c> when</c><00:42:28.880><c> iterating</c><00:42:29.280><c> over</c><00:42:29.520><c> the</c>

00:42:29.589 --> 00:42:29.599 align:start position:0%
and then when iterating over the
 

00:42:29.599 --> 00:42:31.270 align:start position:0%
and then when iterating over the
dimension<00:42:30.000><c> sizes</c><00:42:30.480><c> starting</c><00:42:30.720><c> at</c><00:42:30.800><c> the</c><00:42:30.960><c> trailing</c>

00:42:31.270 --> 00:42:31.280 align:start position:0%
dimension sizes starting at the trailing
 

00:42:31.280 --> 00:42:32.309 align:start position:0%
dimension sizes starting at the trailing
dimension

00:42:32.309 --> 00:42:32.319 align:start position:0%
dimension
 

00:42:32.319 --> 00:42:34.550 align:start position:0%
dimension
the<00:42:32.480><c> dimension</c><00:42:32.880><c> sizes</c><00:42:33.200><c> must</c><00:42:33.520><c> either</c><00:42:33.760><c> be</c><00:42:33.920><c> equal</c>

00:42:34.550 --> 00:42:34.560 align:start position:0%
the dimension sizes must either be equal
 

00:42:34.560 --> 00:42:36.230 align:start position:0%
the dimension sizes must either be equal
one<00:42:34.720><c> of</c><00:42:34.800><c> them</c><00:42:34.960><c> is</c><00:42:35.119><c> one</c><00:42:35.440><c> or</c><00:42:35.599><c> one</c><00:42:35.839><c> of</c><00:42:35.920><c> them</c><00:42:36.000><c> does</c>

00:42:36.230 --> 00:42:36.240 align:start position:0%
one of them is one or one of them does
 

00:42:36.240 --> 00:42:37.990 align:start position:0%
one of them is one or one of them does
not<00:42:36.400><c> exist</c>

00:42:37.990 --> 00:42:38.000 align:start position:0%
not exist
 

00:42:38.000 --> 00:42:38.870 align:start position:0%
not exist
okay

00:42:38.870 --> 00:42:38.880 align:start position:0%
okay
 

00:42:38.880 --> 00:42:41.270 align:start position:0%
okay
so<00:42:39.359><c> let's</c><00:42:39.599><c> do</c><00:42:39.760><c> that</c><00:42:40.160><c> we</c><00:42:40.319><c> need</c><00:42:40.480><c> to</c><00:42:40.640><c> align</c><00:42:41.119><c> the</c>

00:42:41.270 --> 00:42:41.280 align:start position:0%
so let's do that we need to align the
 

00:42:41.280 --> 00:42:44.230 align:start position:0%
so let's do that we need to align the
two<00:42:42.000><c> arrays</c><00:42:42.800><c> and</c><00:42:43.040><c> their</c><00:42:43.280><c> shapes</c><00:42:43.920><c> which</c><00:42:44.160><c> is</c>

00:42:44.230 --> 00:42:44.240 align:start position:0%
two arrays and their shapes which is
 

00:42:44.240 --> 00:42:45.670 align:start position:0%
two arrays and their shapes which is
very<00:42:44.480><c> easy</c><00:42:44.720><c> because</c><00:42:44.960><c> both</c><00:42:45.119><c> of</c><00:42:45.280><c> these</c><00:42:45.440><c> shapes</c>

00:42:45.670 --> 00:42:45.680 align:start position:0%
very easy because both of these shapes
 

00:42:45.680 --> 00:42:47.990 align:start position:0%
very easy because both of these shapes
have<00:42:45.839><c> two</c><00:42:46.079><c> elements</c><00:42:46.480><c> so</c><00:42:46.640><c> they're</c><00:42:46.880><c> aligned</c>

00:42:47.990 --> 00:42:48.000 align:start position:0%
have two elements so they're aligned
 

00:42:48.000 --> 00:42:50.150 align:start position:0%
have two elements so they're aligned
then<00:42:48.160><c> we</c><00:42:48.319><c> iterate</c><00:42:48.720><c> over</c><00:42:49.359><c> from</c><00:42:49.520><c> the</c><00:42:49.760><c> from</c><00:42:50.000><c> the</c>

00:42:50.150 --> 00:42:50.160 align:start position:0%
then we iterate over from the from the
 

00:42:50.160 --> 00:42:52.230 align:start position:0%
then we iterate over from the from the
right<00:42:50.560><c> and</c><00:42:50.720><c> going</c><00:42:50.960><c> to</c><00:42:51.040><c> the</c><00:42:51.119><c> left</c>

00:42:52.230 --> 00:42:52.240 align:start position:0%
right and going to the left
 

00:42:52.240 --> 00:42:55.430 align:start position:0%
right and going to the left
each<00:42:52.480><c> dimension</c><00:42:53.359><c> must</c><00:42:53.599><c> be</c><00:42:54.240><c> either</c><00:42:54.640><c> equal</c><00:42:55.280><c> one</c>

00:42:55.430 --> 00:42:55.440 align:start position:0%
each dimension must be either equal one
 

00:42:55.440 --> 00:42:57.030 align:start position:0%
each dimension must be either equal one
of<00:42:55.520><c> them</c><00:42:55.680><c> is</c><00:42:55.760><c> a</c><00:42:55.839><c> one</c><00:42:56.160><c> or</c><00:42:56.240><c> one</c><00:42:56.400><c> of</c><00:42:56.480><c> them</c><00:42:56.640><c> does</c><00:42:56.880><c> not</c>

00:42:57.030 --> 00:42:57.040 align:start position:0%
of them is a one or one of them does not
 

00:42:57.040 --> 00:42:59.190 align:start position:0%
of them is a one or one of them does not
exist<00:42:57.839><c> so</c><00:42:58.000><c> in</c><00:42:58.079><c> this</c><00:42:58.240><c> case</c><00:42:58.400><c> they're</c><00:42:58.640><c> not</c><00:42:58.880><c> equal</c>

00:42:59.190 --> 00:42:59.200 align:start position:0%
exist so in this case they're not equal
 

00:42:59.200 --> 00:43:01.829 align:start position:0%
exist so in this case they're not equal
but<00:42:59.359><c> one</c><00:42:59.520><c> of</c><00:42:59.599><c> them</c><00:42:59.680><c> is</c><00:42:59.839><c> a</c><00:42:59.920><c> one</c><00:43:00.400><c> so</c><00:43:00.640><c> this</c><00:43:00.880><c> is</c><00:43:01.040><c> fine</c>

00:43:01.829 --> 00:43:01.839 align:start position:0%
but one of them is a one so this is fine
 

00:43:01.839 --> 00:43:03.190 align:start position:0%
but one of them is a one so this is fine
and<00:43:01.920><c> then</c><00:43:02.079><c> this</c><00:43:02.240><c> dimension</c><00:43:02.800><c> they're</c><00:43:02.960><c> both</c>

00:43:03.190 --> 00:43:03.200 align:start position:0%
and then this dimension they're both
 

00:43:03.200 --> 00:43:03.990 align:start position:0%
and then this dimension they're both
equal

00:43:03.990 --> 00:43:04.000 align:start position:0%
equal
 

00:43:04.000 --> 00:43:05.829 align:start position:0%
equal
so<00:43:04.480><c> uh</c><00:43:04.640><c> this</c><00:43:04.880><c> is</c><00:43:04.960><c> fine</c>

00:43:05.829 --> 00:43:05.839 align:start position:0%
so uh this is fine
 

00:43:05.839 --> 00:43:08.470 align:start position:0%
so uh this is fine
so<00:43:06.319><c> all</c><00:43:06.480><c> the</c><00:43:06.560><c> dimensions</c><00:43:07.440><c> are</c><00:43:07.920><c> fine</c><00:43:08.400><c> and</c>

00:43:08.470 --> 00:43:08.480 align:start position:0%
so all the dimensions are fine and
 

00:43:08.480 --> 00:43:10.829 align:start position:0%
so all the dimensions are fine and
therefore<00:43:08.880><c> the</c><00:43:09.359><c> this</c><00:43:09.599><c> operation</c><00:43:10.160><c> is</c>

00:43:10.829 --> 00:43:10.839 align:start position:0%
therefore the this operation is
 

00:43:10.839 --> 00:43:12.790 align:start position:0%
therefore the this operation is
broadcastable<00:43:11.839><c> so</c><00:43:12.000><c> that</c><00:43:12.160><c> means</c><00:43:12.319><c> that</c><00:43:12.480><c> this</c>

00:43:12.790 --> 00:43:12.800 align:start position:0%
broadcastable so that means that this
 

00:43:12.800 --> 00:43:14.470 align:start position:0%
broadcastable so that means that this
operation<00:43:13.200><c> is</c><00:43:13.440><c> allowed</c>

00:43:14.470 --> 00:43:14.480 align:start position:0%
operation is allowed
 

00:43:14.480 --> 00:43:16.790 align:start position:0%
operation is allowed
and<00:43:14.640><c> what</c><00:43:14.960><c> is</c><00:43:15.119><c> it</c><00:43:15.280><c> that</c><00:43:15.599><c> these</c><00:43:15.920><c> arrays</c><00:43:16.319><c> do</c><00:43:16.640><c> when</c>

00:43:16.790 --> 00:43:16.800 align:start position:0%
and what is it that these arrays do when
 

00:43:16.800 --> 00:43:19.750 align:start position:0%
and what is it that these arrays do when
you<00:43:16.960><c> divide</c><00:43:17.280><c> 27</c><00:43:17.680><c> by</c><00:43:17.839><c> 27</c><00:43:18.160><c> by</c><00:43:18.319><c> 27</c><00:43:18.720><c> by</c><00:43:18.880><c> one</c>

00:43:19.750 --> 00:43:19.760 align:start position:0%
you divide 27 by 27 by 27 by one
 

00:43:19.760 --> 00:43:21.670 align:start position:0%
you divide 27 by 27 by 27 by one
what<00:43:19.920><c> it</c><00:43:20.079><c> does</c><00:43:20.319><c> is</c><00:43:20.480><c> that</c><00:43:20.640><c> it</c><00:43:20.800><c> takes</c><00:43:21.440><c> this</c>

00:43:21.670 --> 00:43:21.680 align:start position:0%
what it does is that it takes this
 

00:43:21.680 --> 00:43:24.150 align:start position:0%
what it does is that it takes this
dimension<00:43:22.160><c> one</c><00:43:22.720><c> and</c><00:43:22.880><c> it</c><00:43:23.040><c> stretches</c><00:43:23.520><c> it</c><00:43:23.680><c> out</c><00:43:23.920><c> it</c>

00:43:24.150 --> 00:43:24.160 align:start position:0%
dimension one and it stretches it out it
 

00:43:24.160 --> 00:43:27.109 align:start position:0%
dimension one and it stretches it out it
copies<00:43:24.839><c> it</c><00:43:25.839><c> to</c><00:43:26.079><c> match</c>

00:43:27.109 --> 00:43:27.119 align:start position:0%
copies it to match
 

00:43:27.119 --> 00:43:28.950 align:start position:0%
copies it to match
27<00:43:27.599><c> here</c><00:43:27.839><c> in</c><00:43:27.920><c> this</c><00:43:28.079><c> case</c>

00:43:28.950 --> 00:43:28.960 align:start position:0%
27 here in this case
 

00:43:28.960 --> 00:43:30.710 align:start position:0%
27 here in this case
so<00:43:29.200><c> in</c><00:43:29.359><c> our</c><00:43:29.520><c> case</c><00:43:29.920><c> it</c><00:43:30.000><c> takes</c><00:43:30.240><c> this</c><00:43:30.400><c> column</c>

00:43:30.710 --> 00:43:30.720 align:start position:0%
so in our case it takes this column
 

00:43:30.720 --> 00:43:32.790 align:start position:0%
so in our case it takes this column
vector<00:43:31.040><c> which</c><00:43:31.280><c> is</c><00:43:31.359><c> 27</c><00:43:31.839><c> by</c><00:43:32.000><c> 1</c>

00:43:32.790 --> 00:43:32.800 align:start position:0%
vector which is 27 by 1
 

00:43:32.800 --> 00:43:36.630 align:start position:0%
vector which is 27 by 1
and<00:43:32.960><c> it</c><00:43:33.599><c> copies</c><00:43:34.160><c> it</c><00:43:34.560><c> 27</c><00:43:35.200><c> times</c>

00:43:36.630 --> 00:43:36.640 align:start position:0%
and it copies it 27 times
 

00:43:36.640 --> 00:43:37.750 align:start position:0%
and it copies it 27 times
to<00:43:36.800><c> make</c>

00:43:37.750 --> 00:43:37.760 align:start position:0%
to make
 

00:43:37.760 --> 00:43:40.550 align:start position:0%
to make
these<00:43:38.079><c> both</c><00:43:38.319><c> be</c><00:43:38.480><c> 27</c><00:43:38.880><c> by</c><00:43:39.040><c> 27</c><00:43:39.599><c> internally</c><00:43:40.400><c> you</c>

00:43:40.550 --> 00:43:40.560 align:start position:0%
these both be 27 by 27 internally you
 

00:43:40.560 --> 00:43:42.150 align:start position:0%
these both be 27 by 27 internally you
can<00:43:40.640><c> think</c><00:43:40.800><c> of</c><00:43:40.960><c> it</c><00:43:41.040><c> that</c><00:43:41.200><c> way</c><00:43:41.680><c> and</c><00:43:41.839><c> so</c><00:43:42.000><c> it</c>

00:43:42.150 --> 00:43:42.160 align:start position:0%
can think of it that way and so it
 

00:43:42.160 --> 00:43:44.150 align:start position:0%
can think of it that way and so it
copies<00:43:42.640><c> those</c><00:43:43.040><c> counts</c>

00:43:44.150 --> 00:43:44.160 align:start position:0%
copies those counts
 

00:43:44.160 --> 00:43:45.510 align:start position:0%
copies those counts
and<00:43:44.319><c> then</c><00:43:44.480><c> it</c><00:43:44.560><c> does</c><00:43:44.720><c> an</c><00:43:44.880><c> element-wise</c>

00:43:45.510 --> 00:43:45.520 align:start position:0%
and then it does an element-wise
 

00:43:45.520 --> 00:43:47.270 align:start position:0%
and then it does an element-wise
division

00:43:47.270 --> 00:43:47.280 align:start position:0%
division
 

00:43:47.280 --> 00:43:48.710 align:start position:0%
division
which<00:43:47.520><c> is</c><00:43:47.599><c> what</c><00:43:47.760><c> we</c><00:43:47.839><c> want</c><00:43:48.160><c> because</c><00:43:48.480><c> these</c>

00:43:48.710 --> 00:43:48.720 align:start position:0%
which is what we want because these
 

00:43:48.720 --> 00:43:50.710 align:start position:0%
which is what we want because these
counts<00:43:49.200><c> we</c><00:43:49.359><c> want</c><00:43:49.520><c> to</c><00:43:49.680><c> divide</c><00:43:50.000><c> by</c><00:43:50.160><c> them</c><00:43:50.480><c> on</c>

00:43:50.710 --> 00:43:50.720 align:start position:0%
counts we want to divide by them on
 

00:43:50.720 --> 00:43:52.950 align:start position:0%
counts we want to divide by them on
every<00:43:50.960><c> single</c><00:43:51.760><c> one</c><00:43:52.000><c> of</c><00:43:52.079><c> these</c><00:43:52.240><c> columns</c><00:43:52.880><c> in</c>

00:43:52.950 --> 00:43:52.960 align:start position:0%
every single one of these columns in
 

00:43:52.960 --> 00:43:54.710 align:start position:0%
every single one of these columns in
this<00:43:53.119><c> matrix</c>

00:43:54.710 --> 00:43:54.720 align:start position:0%
this matrix
 

00:43:54.720 --> 00:43:56.470 align:start position:0%
this matrix
so<00:43:54.880><c> this</c><00:43:55.119><c> actually</c><00:43:55.440><c> we</c><00:43:55.680><c> expect</c><00:43:56.319><c> will</c>

00:43:56.470 --> 00:43:56.480 align:start position:0%
so this actually we expect will
 

00:43:56.480 --> 00:43:57.670 align:start position:0%
so this actually we expect will
normalize

00:43:57.670 --> 00:43:57.680 align:start position:0%
normalize
 

00:43:57.680 --> 00:43:59.589 align:start position:0%
normalize
every<00:43:57.920><c> single</c><00:43:58.240><c> row</c>

00:43:59.589 --> 00:43:59.599 align:start position:0%
every single row
 

00:43:59.599 --> 00:44:01.589 align:start position:0%
every single row
and<00:43:59.760><c> we</c><00:43:59.920><c> can</c><00:44:00.079><c> check</c><00:44:00.319><c> that</c><00:44:00.400><c> this</c><00:44:00.640><c> is</c><00:44:00.720><c> true</c><00:44:01.359><c> by</c>

00:44:01.589 --> 00:44:01.599 align:start position:0%
and we can check that this is true by
 

00:44:01.599 --> 00:44:04.069 align:start position:0%
and we can check that this is true by
taking<00:44:01.839><c> the</c><00:44:01.920><c> first</c><00:44:02.160><c> row</c><00:44:02.400><c> for</c><00:44:02.480><c> example</c><00:44:03.359><c> and</c>

00:44:04.069 --> 00:44:04.079 align:start position:0%
taking the first row for example and
 

00:44:04.079 --> 00:44:06.829 align:start position:0%
taking the first row for example and
taking<00:44:04.400><c> its</c><00:44:04.560><c> sum</c><00:44:05.200><c> we</c><00:44:05.440><c> expect</c><00:44:05.760><c> this</c><00:44:06.000><c> to</c><00:44:06.160><c> be</c>

00:44:06.829 --> 00:44:06.839 align:start position:0%
taking its sum we expect this to be
 

00:44:06.839 --> 00:44:10.230 align:start position:0%
taking its sum we expect this to be
1.<00:44:08.160><c> because</c><00:44:08.400><c> it's</c><00:44:08.480><c> not</c><00:44:08.640><c> normalized</c>

00:44:10.230 --> 00:44:10.240 align:start position:0%
1. because it's not normalized
 

00:44:10.240 --> 00:44:13.030 align:start position:0%
1. because it's not normalized
and<00:44:10.400><c> then</c><00:44:10.560><c> we</c><00:44:10.800><c> expect</c><00:44:11.200><c> this</c><00:44:11.839><c> now</c><00:44:12.640><c> because</c><00:44:12.960><c> if</c>

00:44:13.030 --> 00:44:13.040 align:start position:0%
and then we expect this now because if
 

00:44:13.040 --> 00:44:14.710 align:start position:0%
and then we expect this now because if
we<00:44:13.440><c> actually</c><00:44:13.760><c> correctly</c><00:44:14.160><c> normalize</c><00:44:14.560><c> all</c><00:44:14.640><c> the</c>

00:44:14.710 --> 00:44:14.720 align:start position:0%
we actually correctly normalize all the
 

00:44:14.720 --> 00:44:16.870 align:start position:0%
we actually correctly normalize all the
rows<00:44:15.440><c> we</c><00:44:15.599><c> expect</c><00:44:16.000><c> to</c><00:44:16.160><c> get</c><00:44:16.240><c> the</c><00:44:16.400><c> exact</c><00:44:16.640><c> same</c>

00:44:16.870 --> 00:44:16.880 align:start position:0%
rows we expect to get the exact same
 

00:44:16.880 --> 00:44:19.109 align:start position:0%
rows we expect to get the exact same
result<00:44:17.200><c> here</c><00:44:17.599><c> so</c><00:44:17.760><c> let's</c><00:44:18.000><c> run</c><00:44:18.160><c> this</c>

00:44:19.109 --> 00:44:19.119 align:start position:0%
result here so let's run this
 

00:44:19.119 --> 00:44:21.750 align:start position:0%
result here so let's run this
it's<00:44:19.280><c> the</c><00:44:19.359><c> exact</c><00:44:19.599><c> same</c><00:44:19.839><c> result</c>

00:44:21.750 --> 00:44:21.760 align:start position:0%
it's the exact same result
 

00:44:21.760 --> 00:44:23.670 align:start position:0%
it's the exact same result
this<00:44:22.000><c> is</c><00:44:22.079><c> correct</c><00:44:22.880><c> so</c><00:44:23.040><c> now</c><00:44:23.280><c> i</c><00:44:23.359><c> would</c><00:44:23.440><c> like</c><00:44:23.599><c> to</c>

00:44:23.670 --> 00:44:23.680 align:start position:0%
this is correct so now i would like to
 

00:44:23.680 --> 00:44:25.190 align:start position:0%
this is correct so now i would like to
scare<00:44:24.000><c> you</c><00:44:24.160><c> a</c><00:44:24.240><c> little</c><00:44:24.400><c> bit</c>

00:44:25.190 --> 00:44:25.200 align:start position:0%
scare you a little bit
 

00:44:25.200 --> 00:44:27.190 align:start position:0%
scare you a little bit
uh<00:44:25.359><c> you</c><00:44:25.520><c> actually</c><00:44:25.760><c> have</c><00:44:25.920><c> to</c><00:44:26.079><c> like</c><00:44:26.720><c> i</c><00:44:26.880><c> basically</c>

00:44:27.190 --> 00:44:27.200 align:start position:0%
uh you actually have to like i basically
 

00:44:27.200 --> 00:44:28.550 align:start position:0%
uh you actually have to like i basically
encourage<00:44:27.520><c> you</c><00:44:27.680><c> very</c><00:44:27.839><c> strongly</c><00:44:28.160><c> to</c><00:44:28.319><c> read</c>

00:44:28.550 --> 00:44:28.560 align:start position:0%
encourage you very strongly to read
 

00:44:28.560 --> 00:44:30.390 align:start position:0%
encourage you very strongly to read
through<00:44:28.720><c> broadcasting</c><00:44:29.280><c> semantics</c>

00:44:30.390 --> 00:44:30.400 align:start position:0%
through broadcasting semantics
 

00:44:30.400 --> 00:44:31.750 align:start position:0%
through broadcasting semantics
and<00:44:30.560><c> i</c><00:44:30.720><c> encourage</c><00:44:31.040><c> you</c><00:44:31.119><c> to</c><00:44:31.200><c> treat</c><00:44:31.440><c> this</c><00:44:31.599><c> with</c>

00:44:31.750 --> 00:44:31.760 align:start position:0%
and i encourage you to treat this with
 

00:44:31.760 --> 00:44:34.230 align:start position:0%
and i encourage you to treat this with
respect<00:44:32.640><c> and</c><00:44:32.800><c> it's</c><00:44:32.960><c> not</c><00:44:33.119><c> something</c><00:44:33.440><c> to</c><00:44:33.599><c> play</c>

00:44:34.230 --> 00:44:34.240 align:start position:0%
respect and it's not something to play
 

00:44:34.240 --> 00:44:35.750 align:start position:0%
respect and it's not something to play
fast<00:44:34.480><c> and</c><00:44:34.560><c> loose</c><00:44:34.800><c> with</c><00:44:35.040><c> it's</c><00:44:35.280><c> something</c><00:44:35.520><c> to</c>

00:44:35.750 --> 00:44:35.760 align:start position:0%
fast and loose with it's something to
 

00:44:35.760 --> 00:44:37.589 align:start position:0%
fast and loose with it's something to
really<00:44:36.079><c> respect</c><00:44:36.480><c> really</c><00:44:36.720><c> understand</c><00:44:37.440><c> and</c>

00:44:37.589 --> 00:44:37.599 align:start position:0%
really respect really understand and
 

00:44:37.599 --> 00:44:38.950 align:start position:0%
really respect really understand and
look<00:44:37.839><c> up</c><00:44:37.920><c> maybe</c><00:44:38.160><c> some</c><00:44:38.319><c> tutorials</c><00:44:38.800><c> for</c>

00:44:38.950 --> 00:44:38.960 align:start position:0%
look up maybe some tutorials for
 

00:44:38.960 --> 00:44:40.470 align:start position:0%
look up maybe some tutorials for
broadcasting<00:44:39.520><c> and</c><00:44:39.599><c> practice</c><00:44:40.000><c> it</c><00:44:40.240><c> and</c><00:44:40.319><c> be</c>

00:44:40.470 --> 00:44:40.480 align:start position:0%
broadcasting and practice it and be
 

00:44:40.480 --> 00:44:42.309 align:start position:0%
broadcasting and practice it and be
careful<00:44:41.280><c> with</c><00:44:41.440><c> it</c><00:44:41.680><c> because</c><00:44:41.839><c> you</c><00:44:42.000><c> can</c><00:44:42.160><c> very</c>

00:44:42.309 --> 00:44:42.319 align:start position:0%
careful with it because you can very
 

00:44:42.319 --> 00:44:44.150 align:start position:0%
careful with it because you can very
quickly<00:44:42.640><c> run</c><00:44:42.800><c> into</c><00:44:43.040><c> books</c><00:44:43.680><c> let</c><00:44:43.839><c> me</c><00:44:43.920><c> show</c><00:44:44.079><c> you</c>

00:44:44.150 --> 00:44:44.160 align:start position:0%
quickly run into books let me show you
 

00:44:44.160 --> 00:44:47.109 align:start position:0%
quickly run into books let me show you
what<00:44:44.319><c> i</c><00:44:44.400><c> mean</c>

00:44:47.109 --> 00:44:47.119 align:start position:0%
 
 

00:44:47.119 --> 00:44:48.630 align:start position:0%
 
you<00:44:47.280><c> see</c><00:44:47.440><c> how</c><00:44:47.599><c> here</c><00:44:47.760><c> we</c><00:44:47.920><c> have</c><00:44:48.079><c> p</c><00:44:48.240><c> dot</c><00:44:48.400><c> sum</c><00:44:48.560><c> of</c>

00:44:48.630 --> 00:44:48.640 align:start position:0%
you see how here we have p dot sum of
 

00:44:48.640 --> 00:44:50.390 align:start position:0%
you see how here we have p dot sum of
one<00:44:48.960><c> keep</c><00:44:49.119><c> them</c><00:44:49.440><c> as</c><00:44:49.520><c> true</c>

00:44:50.390 --> 00:44:50.400 align:start position:0%
one keep them as true
 

00:44:50.400 --> 00:44:53.190 align:start position:0%
one keep them as true
the<00:44:50.640><c> shape</c><00:44:50.880><c> of</c><00:44:50.960><c> this</c><00:44:51.359><c> is</c><00:44:51.520><c> 27</c><00:44:52.000><c> by</c><00:44:52.160><c> one</c><00:44:52.880><c> let</c><00:44:53.040><c> me</c>

00:44:53.190 --> 00:44:53.200 align:start position:0%
the shape of this is 27 by one let me
 

00:44:53.200 --> 00:44:55.589 align:start position:0%
the shape of this is 27 by one let me
take<00:44:53.359><c> out</c><00:44:53.440><c> this</c><00:44:53.599><c> line</c><00:44:53.839><c> just</c><00:44:54.000><c> so</c><00:44:54.160><c> we</c><00:44:54.240><c> have</c><00:44:54.400><c> the</c><00:44:54.960><c> n</c>

00:44:55.589 --> 00:44:55.599 align:start position:0%
take out this line just so we have the n
 

00:44:55.599 --> 00:44:58.390 align:start position:0%
take out this line just so we have the n
and<00:44:55.760><c> then</c><00:44:56.400><c> we</c><00:44:56.560><c> can</c><00:44:56.800><c> see</c><00:44:57.280><c> the</c><00:44:57.440><c> counts</c>

00:44:58.390 --> 00:44:58.400 align:start position:0%
and then we can see the counts
 

00:44:58.400 --> 00:45:00.550 align:start position:0%
and then we can see the counts
we<00:44:58.560><c> can</c><00:44:58.640><c> see</c><00:44:58.800><c> that</c><00:44:58.960><c> this</c><00:44:59.119><c> is</c><00:44:59.359><c> a</c><00:44:59.839><c> all</c><00:45:00.000><c> the</c><00:45:00.160><c> counts</c>

00:45:00.550 --> 00:45:00.560 align:start position:0%
we can see that this is a all the counts
 

00:45:00.560 --> 00:45:02.470 align:start position:0%
we can see that this is a all the counts
across<00:45:01.200><c> all</c><00:45:01.359><c> the</c>

00:45:02.470 --> 00:45:02.480 align:start position:0%
across all the
 

00:45:02.480 --> 00:45:03.430 align:start position:0%
across all the
rows

00:45:03.430 --> 00:45:03.440 align:start position:0%
rows
 

00:45:03.440 --> 00:45:07.030 align:start position:0%
rows
and<00:45:03.599><c> it's</c><00:45:03.680><c> a</c><00:45:03.760><c> 27</c><00:45:04.160><c> by</c><00:45:04.319><c> one</c><00:45:04.560><c> column</c><00:45:04.880><c> vector</c><00:45:05.359><c> right</c>

00:45:07.030 --> 00:45:07.040 align:start position:0%
and it's a 27 by one column vector right
 

00:45:07.040 --> 00:45:09.430 align:start position:0%
and it's a 27 by one column vector right
now<00:45:07.440><c> suppose</c><00:45:07.839><c> that</c><00:45:08.079><c> i</c><00:45:08.240><c> tried</c><00:45:08.640><c> to</c><00:45:09.119><c> do</c><00:45:09.280><c> the</c>

00:45:09.430 --> 00:45:09.440 align:start position:0%
now suppose that i tried to do the
 

00:45:09.440 --> 00:45:10.390 align:start position:0%
now suppose that i tried to do the
following

00:45:10.390 --> 00:45:10.400 align:start position:0%
following
 

00:45:10.400 --> 00:45:13.829 align:start position:0%
following
but<00:45:10.560><c> i</c><00:45:10.720><c> erase</c><00:45:11.200><c> keep</c><00:45:11.359><c> them</c><00:45:11.599><c> just</c><00:45:11.839><c> true</c><00:45:12.319><c> here</c>

00:45:13.829 --> 00:45:13.839 align:start position:0%
but i erase keep them just true here
 

00:45:13.839 --> 00:45:15.910 align:start position:0%
but i erase keep them just true here
what<00:45:14.000><c> does</c><00:45:14.160><c> that</c><00:45:14.319><c> do</c><00:45:14.880><c> if</c><00:45:15.119><c> keep</c><00:45:15.280><c> them</c><00:45:15.520><c> is</c><00:45:15.599><c> not</c>

00:45:15.910 --> 00:45:15.920 align:start position:0%
what does that do if keep them is not
 

00:45:15.920 --> 00:45:18.069 align:start position:0%
what does that do if keep them is not
true<00:45:16.240><c> it's</c><00:45:16.480><c> false</c><00:45:17.119><c> then</c><00:45:17.280><c> remember</c><00:45:17.760><c> according</c>

00:45:18.069 --> 00:45:18.079 align:start position:0%
true it's false then remember according
 

00:45:18.079 --> 00:45:20.230 align:start position:0%
true it's false then remember according
to<00:45:18.240><c> documentation</c><00:45:19.119><c> it</c><00:45:19.280><c> gets</c><00:45:19.520><c> rid</c><00:45:19.760><c> of</c><00:45:19.920><c> this</c>

00:45:20.230 --> 00:45:20.240 align:start position:0%
to documentation it gets rid of this
 

00:45:20.240 --> 00:45:23.030 align:start position:0%
to documentation it gets rid of this
dimension<00:45:20.960><c> one</c><00:45:21.280><c> it</c><00:45:21.359><c> squeezes</c><00:45:21.920><c> it</c><00:45:22.079><c> out</c><00:45:22.800><c> so</c>

00:45:23.030 --> 00:45:23.040 align:start position:0%
dimension one it squeezes it out so
 

00:45:23.040 --> 00:45:24.790 align:start position:0%
dimension one it squeezes it out so
basically<00:45:23.359><c> we</c><00:45:23.520><c> just</c><00:45:23.760><c> get</c><00:45:24.319><c> all</c><00:45:24.400><c> the</c><00:45:24.560><c> same</c>

00:45:24.790 --> 00:45:24.800 align:start position:0%
basically we just get all the same
 

00:45:24.800 --> 00:45:27.190 align:start position:0%
basically we just get all the same
counts<00:45:25.280><c> the</c><00:45:25.359><c> same</c><00:45:25.599><c> result</c><00:45:26.400><c> except</c><00:45:26.800><c> the</c><00:45:26.960><c> shape</c>

00:45:27.190 --> 00:45:27.200 align:start position:0%
counts the same result except the shape
 

00:45:27.200 --> 00:45:29.990 align:start position:0%
counts the same result except the shape
of<00:45:27.280><c> it</c><00:45:27.440><c> is</c><00:45:27.520><c> not</c><00:45:28.000><c> 27</c><00:45:28.480><c> by</c><00:45:28.640><c> 1</c><00:45:28.800><c> it</c><00:45:28.960><c> is</c><00:45:29.040><c> just</c><00:45:29.280><c> 27</c><00:45:29.839><c> the</c>

00:45:29.990 --> 00:45:30.000 align:start position:0%
of it is not 27 by 1 it is just 27 the
 

00:45:30.000 --> 00:45:31.589 align:start position:0%
of it is not 27 by 1 it is just 27 the
one<00:45:30.160><c> disappears</c>

00:45:31.589 --> 00:45:31.599 align:start position:0%
one disappears
 

00:45:31.599 --> 00:45:34.150 align:start position:0%
one disappears
but<00:45:31.839><c> all</c><00:45:31.920><c> the</c><00:45:32.079><c> counts</c><00:45:32.400><c> are</c><00:45:32.560><c> the</c><00:45:32.720><c> same</c>

00:45:34.150 --> 00:45:34.160 align:start position:0%
but all the counts are the same
 

00:45:34.160 --> 00:45:37.910 align:start position:0%
but all the counts are the same
so<00:45:34.640><c> you'd</c><00:45:34.960><c> think</c><00:45:35.280><c> that</c><00:45:36.000><c> this</c><00:45:36.640><c> divide</c><00:45:37.040><c> that</c>

00:45:37.910 --> 00:45:37.920 align:start position:0%
so you'd think that this divide that
 

00:45:37.920 --> 00:45:39.990 align:start position:0%
so you'd think that this divide that
would<00:45:38.400><c> uh</c><00:45:38.640><c> would</c><00:45:38.800><c> work</c>

00:45:39.990 --> 00:45:40.000 align:start position:0%
would uh would work
 

00:45:40.000 --> 00:45:42.069 align:start position:0%
would uh would work
first<00:45:40.240><c> of</c><00:45:40.319><c> all</c><00:45:40.640><c> can</c><00:45:40.800><c> we</c><00:45:40.960><c> even</c><00:45:41.359><c> uh</c><00:45:41.599><c> write</c><00:45:41.839><c> this</c>

00:45:42.069 --> 00:45:42.079 align:start position:0%
first of all can we even uh write this
 

00:45:42.079 --> 00:45:44.230 align:start position:0%
first of all can we even uh write this
and<00:45:42.160><c> will</c><00:45:42.400><c> it</c><00:45:42.720><c> is</c><00:45:42.800><c> it</c><00:45:43.359><c> even</c><00:45:43.760><c> is</c><00:45:43.839><c> it</c><00:45:44.000><c> even</c>

00:45:44.230 --> 00:45:44.240 align:start position:0%
and will it is it even is it even
 

00:45:44.240 --> 00:45:46.230 align:start position:0%
and will it is it even is it even
expected<00:45:44.560><c> to</c><00:45:44.720><c> run</c><00:45:44.960><c> is</c><00:45:45.119><c> it</c><00:45:45.200><c> broadcastable</c>

00:45:46.230 --> 00:45:46.240 align:start position:0%
expected to run is it broadcastable
 

00:45:46.240 --> 00:45:47.589 align:start position:0%
expected to run is it broadcastable
let's<00:45:46.480><c> determine</c><00:45:46.880><c> if</c><00:45:47.040><c> this</c><00:45:47.200><c> result</c><00:45:47.520><c> is</c>

00:45:47.589 --> 00:45:47.599 align:start position:0%
let's determine if this result is
 

00:45:47.599 --> 00:45:49.109 align:start position:0%
let's determine if this result is
broadcastable

00:45:49.109 --> 00:45:49.119 align:start position:0%
broadcastable
 

00:45:49.119 --> 00:45:51.510 align:start position:0%
broadcastable
p.summit<00:45:49.839><c> one</c><00:45:50.079><c> is</c><00:45:50.319><c> shape</c>

00:45:51.510 --> 00:45:51.520 align:start position:0%
p.summit one is shape
 

00:45:51.520 --> 00:45:52.790 align:start position:0%
p.summit one is shape
is<00:45:51.680><c> 27.</c>

00:45:52.790 --> 00:45:52.800 align:start position:0%
is 27.
 

00:45:52.800 --> 00:45:57.589 align:start position:0%
is 27.
this<00:45:53.040><c> is</c><00:45:53.200><c> 27</c><00:45:53.599><c> by</c><00:45:53.760><c> 27.</c><00:45:54.319><c> so</c><00:45:54.560><c> 27</c><00:45:54.960><c> by</c><00:45:55.119><c> 27</c>

00:45:57.589 --> 00:45:57.599 align:start position:0%
 
 

00:45:57.599 --> 00:46:01.589 align:start position:0%
 
broadcasting<00:45:58.240><c> into</c><00:45:58.839><c> 27.</c><00:46:00.240><c> so</c><00:46:00.480><c> now</c>

00:46:01.589 --> 00:46:01.599 align:start position:0%
broadcasting into 27. so now
 

00:46:01.599 --> 00:46:03.670 align:start position:0%
broadcasting into 27. so now
rules<00:46:01.920><c> of</c><00:46:02.000><c> broadcasting</c><00:46:02.560><c> number</c><00:46:02.880><c> one</c><00:46:03.280><c> align</c>

00:46:03.670 --> 00:46:03.680 align:start position:0%
rules of broadcasting number one align
 

00:46:03.680 --> 00:46:06.390 align:start position:0%
rules of broadcasting number one align
all<00:46:03.760><c> the</c><00:46:04.000><c> dimensions</c><00:46:04.480><c> on</c><00:46:04.560><c> the</c><00:46:04.720><c> right</c><00:46:05.440><c> done</c><00:46:06.160><c> now</c>

00:46:06.390 --> 00:46:06.400 align:start position:0%
all the dimensions on the right done now
 

00:46:06.400 --> 00:46:07.750 align:start position:0%
all the dimensions on the right done now
iteration<00:46:06.800><c> over</c><00:46:07.040><c> all</c><00:46:07.119><c> the</c><00:46:07.280><c> dimensions</c>

00:46:07.750 --> 00:46:07.760 align:start position:0%
iteration over all the dimensions
 

00:46:07.760 --> 00:46:09.109 align:start position:0%
iteration over all the dimensions
starting<00:46:08.000><c> from</c><00:46:08.160><c> the</c><00:46:08.240><c> right</c><00:46:08.640><c> going</c><00:46:08.880><c> to</c><00:46:08.960><c> the</c>

00:46:09.109 --> 00:46:09.119 align:start position:0%
starting from the right going to the
 

00:46:09.119 --> 00:46:10.069 align:start position:0%
starting from the right going to the
left

00:46:10.069 --> 00:46:10.079 align:start position:0%
left
 

00:46:10.079 --> 00:46:12.950 align:start position:0%
left
all<00:46:10.240><c> the</c><00:46:10.400><c> dimensions</c><00:46:10.800><c> must</c><00:46:11.040><c> either</c><00:46:11.280><c> be</c><00:46:11.440><c> equal</c>

00:46:12.950 --> 00:46:12.960 align:start position:0%
all the dimensions must either be equal
 

00:46:12.960 --> 00:46:14.950 align:start position:0%
all the dimensions must either be equal
one<00:46:13.119><c> of</c><00:46:13.200><c> them</c><00:46:13.280><c> must</c><00:46:13.520><c> be</c><00:46:13.680><c> one</c><00:46:14.240><c> or</c><00:46:14.400><c> one</c><00:46:14.640><c> that</c><00:46:14.800><c> does</c>

00:46:14.950 --> 00:46:14.960 align:start position:0%
one of them must be one or one that does
 

00:46:14.960 --> 00:46:17.670 align:start position:0%
one of them must be one or one that does
not<00:46:15.119><c> exist</c><00:46:15.920><c> so</c><00:46:16.079><c> here</c><00:46:16.319><c> they</c><00:46:16.400><c> are</c><00:46:16.560><c> all</c><00:46:16.800><c> equal</c>

00:46:17.670 --> 00:46:17.680 align:start position:0%
not exist so here they are all equal
 

00:46:17.680 --> 00:46:19.910 align:start position:0%
not exist so here they are all equal
here<00:46:18.000><c> the</c><00:46:18.160><c> dimension</c><00:46:18.480><c> does</c><00:46:18.640><c> not</c><00:46:18.800><c> exist</c>

00:46:19.910 --> 00:46:19.920 align:start position:0%
here the dimension does not exist
 

00:46:19.920 --> 00:46:21.430 align:start position:0%
here the dimension does not exist
so<00:46:20.079><c> internally</c><00:46:20.480><c> what</c><00:46:20.640><c> broadcasting</c><00:46:21.119><c> will</c><00:46:21.280><c> do</c>

00:46:21.430 --> 00:46:21.440 align:start position:0%
so internally what broadcasting will do
 

00:46:21.440 --> 00:46:24.230 align:start position:0%
so internally what broadcasting will do
is<00:46:21.599><c> it</c><00:46:21.680><c> will</c><00:46:21.920><c> create</c><00:46:22.720><c> a</c><00:46:22.880><c> one</c><00:46:23.119><c> here</c>

00:46:24.230 --> 00:46:24.240 align:start position:0%
is it will create a one here
 

00:46:24.240 --> 00:46:25.829 align:start position:0%
is it will create a one here
and<00:46:24.560><c> then</c>

00:46:25.829 --> 00:46:25.839 align:start position:0%
and then
 

00:46:25.839 --> 00:46:27.750 align:start position:0%
and then
we<00:46:26.000><c> see</c><00:46:26.160><c> that</c><00:46:26.319><c> one</c><00:46:26.480><c> of</c><00:46:26.560><c> them</c><00:46:26.720><c> is</c><00:46:26.800><c> a</c><00:46:26.880><c> one</c><00:46:27.680><c> and</c>

00:46:27.750 --> 00:46:27.760 align:start position:0%
we see that one of them is a one and
 

00:46:27.760 --> 00:46:30.230 align:start position:0%
we see that one of them is a one and
this<00:46:27.920><c> will</c><00:46:28.079><c> get</c><00:46:28.319><c> copied</c><00:46:29.200><c> and</c><00:46:29.680><c> this</c><00:46:29.839><c> will</c><00:46:30.000><c> run</c>

00:46:30.230 --> 00:46:30.240 align:start position:0%
this will get copied and this will run
 

00:46:30.240 --> 00:46:32.390 align:start position:0%
this will get copied and this will run
this<00:46:30.319><c> will</c><00:46:30.560><c> broadcast</c>

00:46:32.390 --> 00:46:32.400 align:start position:0%
this will broadcast
 

00:46:32.400 --> 00:46:34.790 align:start position:0%
this will broadcast
okay<00:46:32.720><c> so</c><00:46:33.200><c> you'd</c><00:46:33.440><c> expect</c><00:46:33.920><c> this</c>

00:46:34.790 --> 00:46:34.800 align:start position:0%
okay so you'd expect this
 

00:46:34.800 --> 00:46:37.270 align:start position:0%
okay so you'd expect this
to<00:46:34.960><c> work</c>

00:46:37.270 --> 00:46:37.280 align:start position:0%
 
 

00:46:37.280 --> 00:46:41.190 align:start position:0%
 
because<00:46:37.599><c> we</c><00:46:37.839><c> we</c><00:46:38.079><c> are</c>

00:46:41.190 --> 00:46:41.200 align:start position:0%
 
 

00:46:41.200 --> 00:46:42.790 align:start position:0%
 
this<00:46:41.440><c> broadcast</c><00:46:41.920><c> and</c><00:46:42.000><c> this</c><00:46:42.240><c> we</c><00:46:42.400><c> can</c><00:46:42.480><c> divide</c>

00:46:42.790 --> 00:46:42.800 align:start position:0%
this broadcast and this we can divide
 

00:46:42.800 --> 00:46:43.510 align:start position:0%
this broadcast and this we can divide
this

00:46:43.510 --> 00:46:43.520 align:start position:0%
this
 

00:46:43.520 --> 00:46:45.109 align:start position:0%
this
now<00:46:43.760><c> if</c><00:46:43.920><c> i</c><00:46:44.000><c> run</c><00:46:44.160><c> this</c><00:46:44.480><c> you'd</c><00:46:44.720><c> expect</c><00:46:44.960><c> it</c><00:46:45.040><c> to</c>

00:46:45.109 --> 00:46:45.119 align:start position:0%
now if i run this you'd expect it to
 

00:46:45.119 --> 00:46:46.630 align:start position:0%
now if i run this you'd expect it to
work<00:46:45.440><c> but</c>

00:46:46.630 --> 00:46:46.640 align:start position:0%
work but
 

00:46:46.640 --> 00:46:47.829 align:start position:0%
work but
it<00:46:46.720><c> doesn't</c>

00:46:47.829 --> 00:46:47.839 align:start position:0%
it doesn't
 

00:46:47.839 --> 00:46:49.670 align:start position:0%
it doesn't
uh<00:46:48.079><c> you</c><00:46:48.160><c> actually</c><00:46:48.400><c> get</c><00:46:48.560><c> garbage</c><00:46:49.359><c> you</c><00:46:49.520><c> get</c><00:46:49.599><c> a</c>

00:46:49.670 --> 00:46:49.680 align:start position:0%
uh you actually get garbage you get a
 

00:46:49.680 --> 00:46:51.349 align:start position:0%
uh you actually get garbage you get a
wrong<00:46:49.839><c> dissolve</c><00:46:50.319><c> because</c><00:46:50.560><c> this</c><00:46:50.720><c> is</c><00:46:50.880><c> actually</c>

00:46:51.349 --> 00:46:51.359 align:start position:0%
wrong dissolve because this is actually
 

00:46:51.359 --> 00:46:52.390 align:start position:0%
wrong dissolve because this is actually
a<00:46:51.520><c> bug</c>

00:46:52.390 --> 00:46:52.400 align:start position:0%
a bug
 

00:46:52.400 --> 00:46:57.109 align:start position:0%
a bug
this<00:46:52.640><c> keep</c><00:46:52.800><c> them</c><00:46:53.359><c> equals</c><00:46:53.680><c> true</c>

00:46:57.109 --> 00:46:57.119 align:start position:0%
 
 

00:46:57.119 --> 00:47:00.550 align:start position:0%
 
makes<00:46:57.440><c> it</c><00:46:57.520><c> work</c>

00:47:00.550 --> 00:47:00.560 align:start position:0%
 
 

00:47:00.560 --> 00:47:02.790 align:start position:0%
 
this<00:47:00.800><c> is</c><00:47:00.880><c> a</c><00:47:00.960><c> bug</c>

00:47:02.790 --> 00:47:02.800 align:start position:0%
this is a bug
 

00:47:02.800 --> 00:47:04.710 align:start position:0%
this is a bug
in<00:47:02.960><c> both</c><00:47:03.119><c> cases</c><00:47:03.520><c> we</c><00:47:03.680><c> are</c><00:47:03.760><c> doing</c>

00:47:04.710 --> 00:47:04.720 align:start position:0%
in both cases we are doing
 

00:47:04.720 --> 00:47:07.270 align:start position:0%
in both cases we are doing
the<00:47:04.880><c> correct</c><00:47:05.760><c> counts</c><00:47:06.240><c> we</c><00:47:06.400><c> are</c><00:47:06.560><c> summing</c><00:47:06.960><c> up</c>

00:47:07.270 --> 00:47:07.280 align:start position:0%
the correct counts we are summing up
 

00:47:07.280 --> 00:47:09.190 align:start position:0%
the correct counts we are summing up
across<00:47:07.680><c> the</c><00:47:07.839><c> rows</c>

00:47:09.190 --> 00:47:09.200 align:start position:0%
across the rows
 

00:47:09.200 --> 00:47:10.870 align:start position:0%
across the rows
but<00:47:09.440><c> keep</c><00:47:09.599><c> them</c><00:47:09.839><c> is</c><00:47:09.920><c> saving</c><00:47:10.240><c> us</c><00:47:10.400><c> and</c><00:47:10.480><c> making</c><00:47:10.720><c> it</c>

00:47:10.870 --> 00:47:10.880 align:start position:0%
but keep them is saving us and making it
 

00:47:10.880 --> 00:47:12.630 align:start position:0%
but keep them is saving us and making it
work<00:47:11.440><c> so</c><00:47:11.599><c> in</c><00:47:11.680><c> this</c><00:47:11.839><c> case</c>

00:47:12.630 --> 00:47:12.640 align:start position:0%
work so in this case
 

00:47:12.640 --> 00:47:14.230 align:start position:0%
work so in this case
i'd<00:47:12.800><c> like</c><00:47:13.040><c> to</c><00:47:13.200><c> encourage</c><00:47:13.520><c> you</c><00:47:13.599><c> to</c><00:47:13.760><c> potentially</c>

00:47:14.230 --> 00:47:14.240 align:start position:0%
i'd like to encourage you to potentially
 

00:47:14.240 --> 00:47:15.750 align:start position:0%
i'd like to encourage you to potentially
like<00:47:14.480><c> pause</c><00:47:14.640><c> this</c><00:47:14.800><c> video</c><00:47:15.040><c> at</c><00:47:15.119><c> this</c><00:47:15.280><c> point</c><00:47:15.599><c> and</c>

00:47:15.750 --> 00:47:15.760 align:start position:0%
like pause this video at this point and
 

00:47:15.760 --> 00:47:18.390 align:start position:0%
like pause this video at this point and
try<00:47:15.920><c> to</c><00:47:16.000><c> think</c><00:47:16.160><c> about</c><00:47:16.720><c> why</c><00:47:17.200><c> this</c><00:47:17.440><c> is</c><00:47:17.520><c> buggy</c><00:47:18.319><c> and</c>

00:47:18.390 --> 00:47:18.400 align:start position:0%
try to think about why this is buggy and
 

00:47:18.400 --> 00:47:22.150 align:start position:0%
try to think about why this is buggy and
why<00:47:18.560><c> the</c><00:47:18.720><c> keep</c><00:47:18.880><c> dim</c><00:47:19.119><c> was</c><00:47:19.280><c> necessary</c><00:47:19.760><c> here</c>

00:47:22.150 --> 00:47:22.160 align:start position:0%
 
 

00:47:22.160 --> 00:47:22.950 align:start position:0%
 
okay

00:47:22.950 --> 00:47:22.960 align:start position:0%
okay
 

00:47:22.960 --> 00:47:24.390 align:start position:0%
okay
so<00:47:23.200><c> the</c><00:47:23.280><c> reason</c><00:47:23.520><c> to</c><00:47:23.599><c> do</c>

00:47:24.390 --> 00:47:24.400 align:start position:0%
so the reason to do
 

00:47:24.400 --> 00:47:26.549 align:start position:0%
so the reason to do
for<00:47:24.640><c> this</c><00:47:24.880><c> is</c><00:47:25.119><c> i'm</c><00:47:25.280><c> trying</c><00:47:25.520><c> to</c><00:47:25.680><c> hint</c><00:47:25.920><c> it</c><00:47:26.160><c> here</c>

00:47:26.549 --> 00:47:26.559 align:start position:0%
for this is i'm trying to hint it here
 

00:47:26.559 --> 00:47:27.829 align:start position:0%
for this is i'm trying to hint it here
when<00:47:26.720><c> i</c><00:47:26.800><c> was</c><00:47:26.960><c> sort</c><00:47:27.119><c> of</c><00:47:27.280><c> giving</c><00:47:27.440><c> you</c><00:47:27.520><c> a</c><00:47:27.599><c> bit</c><00:47:27.680><c> of</c><00:47:27.760><c> a</c>

00:47:27.829 --> 00:47:27.839 align:start position:0%
when i was sort of giving you a bit of a
 

00:47:27.839 --> 00:47:29.430 align:start position:0%
when i was sort of giving you a bit of a
hint<00:47:28.079><c> on</c><00:47:28.160><c> how</c><00:47:28.319><c> this</c><00:47:28.480><c> works</c>

00:47:29.430 --> 00:47:29.440 align:start position:0%
hint on how this works
 

00:47:29.440 --> 00:47:30.309 align:start position:0%
hint on how this works
this

00:47:30.309 --> 00:47:30.319 align:start position:0%
this
 

00:47:30.319 --> 00:47:32.150 align:start position:0%
this
27<00:47:30.880><c> vector</c>

00:47:32.150 --> 00:47:32.160 align:start position:0%
27 vector
 

00:47:32.160 --> 00:47:34.390 align:start position:0%
27 vector
internally<00:47:32.720><c> inside</c><00:47:32.960><c> the</c><00:47:33.040><c> broadcasting</c><00:47:34.160><c> this</c>

00:47:34.390 --> 00:47:34.400 align:start position:0%
internally inside the broadcasting this
 

00:47:34.400 --> 00:47:36.390 align:start position:0%
internally inside the broadcasting this
becomes<00:47:34.720><c> a</c><00:47:34.800><c> 1</c><00:47:34.960><c> by</c><00:47:35.200><c> 27</c>

00:47:36.390 --> 00:47:36.400 align:start position:0%
becomes a 1 by 27
 

00:47:36.400 --> 00:47:39.510 align:start position:0%
becomes a 1 by 27
and<00:47:36.559><c> 1</c><00:47:36.800><c> by</c><00:47:36.960><c> 27</c><00:47:37.440><c> is</c><00:47:37.520><c> a</c><00:47:37.599><c> row</c><00:47:37.839><c> vector</c><00:47:38.640><c> right</c>

00:47:39.510 --> 00:47:39.520 align:start position:0%
and 1 by 27 is a row vector right
 

00:47:39.520 --> 00:47:41.990 align:start position:0%
and 1 by 27 is a row vector right
and<00:47:39.760><c> now</c><00:47:40.079><c> we</c><00:47:40.240><c> are</c><00:47:40.400><c> dividing</c><00:47:40.720><c> 27</c><00:47:41.040><c> by</c><00:47:41.200><c> 27</c><00:47:41.599><c> by</c><00:47:41.680><c> 1</c><00:47:41.839><c> by</c>

00:47:41.990 --> 00:47:42.000 align:start position:0%
and now we are dividing 27 by 27 by 1 by
 

00:47:42.000 --> 00:47:43.109 align:start position:0%
and now we are dividing 27 by 27 by 1 by
27

00:47:43.109 --> 00:47:43.119 align:start position:0%
27
 

00:47:43.119 --> 00:47:45.829 align:start position:0%
27
and<00:47:43.520><c> torch</c><00:47:44.000><c> will</c><00:47:44.319><c> replicate</c><00:47:44.720><c> this</c><00:47:44.880><c> dimension</c>

00:47:45.829 --> 00:47:45.839 align:start position:0%
and torch will replicate this dimension
 

00:47:45.839 --> 00:47:47.589 align:start position:0%
and torch will replicate this dimension
so<00:47:46.480><c> basically</c>

00:47:47.589 --> 00:47:47.599 align:start position:0%
so basically
 

00:47:47.599 --> 00:47:49.670 align:start position:0%
so basically
uh<00:47:47.839><c> it</c><00:47:47.920><c> will</c><00:47:48.160><c> take</c>

00:47:49.670 --> 00:47:49.680 align:start position:0%
uh it will take
 

00:47:49.680 --> 00:47:51.030 align:start position:0%
uh it will take
it<00:47:49.760><c> will</c><00:47:49.920><c> take</c><00:47:50.160><c> this</c>

00:47:51.030 --> 00:47:51.040 align:start position:0%
it will take this
 

00:47:51.040 --> 00:47:53.589 align:start position:0%
it will take this
row<00:47:51.280><c> vector</c><00:47:51.920><c> and</c><00:47:52.000><c> it</c><00:47:52.160><c> will</c><00:47:52.720><c> copy</c><00:47:53.119><c> it</c>

00:47:53.589 --> 00:47:53.599 align:start position:0%
row vector and it will copy it
 

00:47:53.599 --> 00:47:55.270 align:start position:0%
row vector and it will copy it
vertically<00:47:54.079><c> now</c>

00:47:55.270 --> 00:47:55.280 align:start position:0%
vertically now
 

00:47:55.280 --> 00:47:57.910 align:start position:0%
vertically now
27<00:47:55.839><c> times</c><00:47:56.079><c> so</c><00:47:56.240><c> the</c><00:47:56.400><c> 27</c><00:47:56.720><c> by</c><00:47:56.800><c> 27</c><00:47:57.200><c> lies</c><00:47:57.440><c> exactly</c>

00:47:57.910 --> 00:47:57.920 align:start position:0%
27 times so the 27 by 27 lies exactly
 

00:47:57.920 --> 00:48:00.230 align:start position:0%
27 times so the 27 by 27 lies exactly
and<00:47:58.160><c> element</c><00:47:58.559><c> wise</c><00:47:58.800><c> divides</c>

00:48:00.230 --> 00:48:00.240 align:start position:0%
and element wise divides
 

00:48:00.240 --> 00:48:02.150 align:start position:0%
and element wise divides
and<00:48:00.400><c> so</c><00:48:00.559><c> basically</c><00:48:00.960><c> what's</c><00:48:01.200><c> happening</c><00:48:01.520><c> here</c>

00:48:02.150 --> 00:48:02.160 align:start position:0%
and so basically what's happening here
 

00:48:02.160 --> 00:48:04.309 align:start position:0%
and so basically what's happening here
is

00:48:04.309 --> 00:48:04.319 align:start position:0%
is
 

00:48:04.319 --> 00:48:06.069 align:start position:0%
is
we're<00:48:04.559><c> actually</c><00:48:04.800><c> normalizing</c><00:48:05.280><c> the</c><00:48:05.359><c> columns</c>

00:48:06.069 --> 00:48:06.079 align:start position:0%
we're actually normalizing the columns
 

00:48:06.079 --> 00:48:09.349 align:start position:0%
we're actually normalizing the columns
instead<00:48:06.319><c> of</c><00:48:06.400><c> normalizing</c><00:48:06.960><c> the</c><00:48:07.119><c> rows</c>

00:48:09.349 --> 00:48:09.359 align:start position:0%
instead of normalizing the rows
 

00:48:09.359 --> 00:48:11.349 align:start position:0%
instead of normalizing the rows
so<00:48:09.599><c> you</c><00:48:09.760><c> can</c><00:48:10.000><c> check</c><00:48:10.640><c> that</c><00:48:10.800><c> what's</c><00:48:11.040><c> happening</c>

00:48:11.349 --> 00:48:11.359 align:start position:0%
so you can check that what's happening
 

00:48:11.359 --> 00:48:13.589 align:start position:0%
so you can check that what's happening
here<00:48:11.680><c> is</c><00:48:11.839><c> that</c><00:48:12.319><c> p</c><00:48:12.559><c> at</c><00:48:12.720><c> zero</c><00:48:12.960><c> which</c><00:48:13.119><c> is</c><00:48:13.200><c> the</c>

00:48:13.589 --> 00:48:13.599 align:start position:0%
here is that p at zero which is the
 

00:48:13.599 --> 00:48:16.230 align:start position:0%
here is that p at zero which is the
first<00:48:13.920><c> row</c><00:48:14.240><c> of</c><00:48:14.400><c> p</c><00:48:15.040><c> dot</c><00:48:15.280><c> sum</c>

00:48:16.230 --> 00:48:16.240 align:start position:0%
first row of p dot sum
 

00:48:16.240 --> 00:48:18.549 align:start position:0%
first row of p dot sum
is<00:48:16.400><c> not</c><00:48:16.640><c> one</c><00:48:16.960><c> it's</c><00:48:17.280><c> seven</c>

00:48:18.549 --> 00:48:18.559 align:start position:0%
is not one it's seven
 

00:48:18.559 --> 00:48:20.710 align:start position:0%
is not one it's seven
it<00:48:18.720><c> is</c><00:48:18.880><c> the</c><00:48:19.119><c> first</c><00:48:19.520><c> column</c><00:48:19.920><c> as</c><00:48:20.079><c> an</c><00:48:20.160><c> example</c>

00:48:20.710 --> 00:48:20.720 align:start position:0%
it is the first column as an example
 

00:48:20.720 --> 00:48:23.589 align:start position:0%
it is the first column as an example
that<00:48:20.960><c> sums</c><00:48:21.200><c> to</c><00:48:21.359><c> one</c>

00:48:23.589 --> 00:48:23.599 align:start position:0%
that sums to one
 

00:48:23.599 --> 00:48:24.470 align:start position:0%
that sums to one
so

00:48:24.470 --> 00:48:24.480 align:start position:0%
so
 

00:48:24.480 --> 00:48:26.230 align:start position:0%
so
to<00:48:24.720><c> summarize</c><00:48:25.280><c> where</c><00:48:25.520><c> does</c><00:48:25.680><c> the</c><00:48:25.839><c> issue</c><00:48:26.079><c> come</c>

00:48:26.230 --> 00:48:26.240 align:start position:0%
to summarize where does the issue come
 

00:48:26.240 --> 00:48:28.069 align:start position:0%
to summarize where does the issue come
from<00:48:26.640><c> the</c><00:48:26.720><c> issue</c><00:48:27.040><c> comes</c><00:48:27.200><c> from</c><00:48:27.359><c> the</c><00:48:27.599><c> silent</c>

00:48:28.069 --> 00:48:28.079 align:start position:0%
from the issue comes from the silent
 

00:48:28.079 --> 00:48:30.069 align:start position:0%
from the issue comes from the silent
adding<00:48:28.319><c> of</c><00:48:28.480><c> a</c><00:48:28.559><c> dimension</c><00:48:29.040><c> here</c><00:48:29.680><c> because</c><00:48:30.000><c> in</c>

00:48:30.069 --> 00:48:30.079 align:start position:0%
adding of a dimension here because in
 

00:48:30.079 --> 00:48:31.910 align:start position:0%
adding of a dimension here because in
broadcasting<00:48:30.720><c> rules</c><00:48:31.119><c> you</c><00:48:31.359><c> align</c><00:48:31.680><c> on</c><00:48:31.760><c> the</c>

00:48:31.910 --> 00:48:31.920 align:start position:0%
broadcasting rules you align on the
 

00:48:31.920 --> 00:48:33.990 align:start position:0%
broadcasting rules you align on the
right<00:48:32.400><c> and</c><00:48:32.480><c> go</c><00:48:32.640><c> from</c><00:48:32.800><c> right</c><00:48:33.040><c> to</c><00:48:33.200><c> left</c><00:48:33.680><c> and</c><00:48:33.839><c> if</c>

00:48:33.990 --> 00:48:34.000 align:start position:0%
right and go from right to left and if
 

00:48:34.000 --> 00:48:36.069 align:start position:0%
right and go from right to left and if
dimension<00:48:34.400><c> doesn't</c><00:48:34.640><c> exist</c><00:48:34.960><c> you</c><00:48:35.040><c> create</c><00:48:35.359><c> it</c>

00:48:36.069 --> 00:48:36.079 align:start position:0%
dimension doesn't exist you create it
 

00:48:36.079 --> 00:48:37.990 align:start position:0%
dimension doesn't exist you create it
so<00:48:36.319><c> that's</c><00:48:36.480><c> where</c><00:48:36.640><c> the</c><00:48:36.720><c> problem</c><00:48:37.040><c> happens</c><00:48:37.839><c> we</c>

00:48:37.990 --> 00:48:38.000 align:start position:0%
so that's where the problem happens we
 

00:48:38.000 --> 00:48:39.589 align:start position:0%
so that's where the problem happens we
still<00:48:38.240><c> did</c><00:48:38.400><c> the</c><00:48:38.480><c> counts</c><00:48:38.800><c> correctly</c><00:48:39.280><c> we</c><00:48:39.440><c> did</c>

00:48:39.589 --> 00:48:39.599 align:start position:0%
still did the counts correctly we did
 

00:48:39.599 --> 00:48:41.670 align:start position:0%
still did the counts correctly we did
the<00:48:39.760><c> counts</c><00:48:40.160><c> across</c><00:48:40.559><c> the</c><00:48:40.720><c> rows</c><00:48:41.119><c> and</c><00:48:41.280><c> we</c><00:48:41.440><c> got</c>

00:48:41.670 --> 00:48:41.680 align:start position:0%
the counts across the rows and we got
 

00:48:41.680 --> 00:48:44.549 align:start position:0%
the counts across the rows and we got
the<00:48:42.160><c> the</c><00:48:42.400><c> counts</c><00:48:43.040><c> on</c><00:48:43.200><c> the</c><00:48:43.359><c> right</c><00:48:43.599><c> here</c><00:48:44.319><c> as</c><00:48:44.480><c> a</c>

00:48:44.549 --> 00:48:44.559 align:start position:0%
the the counts on the right here as a
 

00:48:44.559 --> 00:48:46.230 align:start position:0%
the the counts on the right here as a
column<00:48:44.800><c> vector</c><00:48:45.520><c> but</c><00:48:45.680><c> because</c><00:48:45.920><c> the</c><00:48:46.000><c> keep</c>

00:48:46.230 --> 00:48:46.240 align:start position:0%
column vector but because the keep
 

00:48:46.240 --> 00:48:48.309 align:start position:0%
column vector but because the keep
things<00:48:46.480><c> was</c><00:48:46.720><c> true</c><00:48:47.200><c> this</c><00:48:47.599><c> this</c><00:48:47.920><c> uh</c><00:48:48.160><c> this</c>

00:48:48.309 --> 00:48:48.319 align:start position:0%
things was true this this uh this
 

00:48:48.319 --> 00:48:49.829 align:start position:0%
things was true this this uh this
dimension<00:48:48.720><c> was</c><00:48:48.800><c> discarded</c><00:48:49.280><c> and</c><00:48:49.440><c> now</c><00:48:49.599><c> we</c><00:48:49.680><c> just</c>

00:48:49.829 --> 00:48:49.839 align:start position:0%
dimension was discarded and now we just
 

00:48:49.839 --> 00:48:52.390 align:start position:0%
dimension was discarded and now we just
have<00:48:49.920><c> a</c><00:48:50.000><c> vector</c><00:48:50.240><c> of</c><00:48:50.319><c> 27.</c><00:48:51.359><c> and</c><00:48:51.520><c> because</c><00:48:51.839><c> of</c>

00:48:52.390 --> 00:48:52.400 align:start position:0%
have a vector of 27. and because of
 

00:48:52.400 --> 00:48:54.069 align:start position:0%
have a vector of 27. and because of
broadcasting<00:48:52.880><c> the</c><00:48:53.040><c> way</c><00:48:53.119><c> it</c><00:48:53.200><c> works</c><00:48:53.760><c> this</c>

00:48:54.069 --> 00:48:54.079 align:start position:0%
broadcasting the way it works this
 

00:48:54.079 --> 00:48:55.990 align:start position:0%
broadcasting the way it works this
vector<00:48:54.400><c> of</c><00:48:54.559><c> 27</c><00:48:55.119><c> suddenly</c><00:48:55.440><c> becomes</c><00:48:55.680><c> a</c><00:48:55.760><c> row</c>

00:48:55.990 --> 00:48:56.000 align:start position:0%
vector of 27 suddenly becomes a row
 

00:48:56.000 --> 00:48:56.950 align:start position:0%
vector of 27 suddenly becomes a row
vector

00:48:56.950 --> 00:48:56.960 align:start position:0%
vector
 

00:48:56.960 --> 00:48:58.870 align:start position:0%
vector
and<00:48:57.040><c> then</c><00:48:57.200><c> this</c><00:48:57.359><c> row</c><00:48:57.520><c> vector</c><00:48:57.839><c> gets</c><00:48:58.000><c> replicated</c>

00:48:58.870 --> 00:48:58.880 align:start position:0%
and then this row vector gets replicated
 

00:48:58.880 --> 00:49:00.950 align:start position:0%
and then this row vector gets replicated
vertically<00:48:59.839><c> and</c><00:49:00.000><c> that</c><00:49:00.240><c> every</c><00:49:00.400><c> single</c><00:49:00.720><c> point</c>

00:49:00.950 --> 00:49:00.960 align:start position:0%
vertically and that every single point
 

00:49:00.960 --> 00:49:05.430 align:start position:0%
vertically and that every single point
we<00:49:01.119><c> are</c><00:49:01.200><c> dividing</c><00:49:01.599><c> by</c><00:49:01.920><c> the</c><00:49:02.559><c> by</c><00:49:02.720><c> the</c><00:49:02.960><c> count</c>

00:49:05.430 --> 00:49:05.440 align:start position:0%
 
 

00:49:05.440 --> 00:49:07.270 align:start position:0%
 
in<00:49:05.520><c> the</c><00:49:05.680><c> opposite</c><00:49:06.000><c> direction</c>

00:49:07.270 --> 00:49:07.280 align:start position:0%
in the opposite direction
 

00:49:07.280 --> 00:49:08.790 align:start position:0%
in the opposite direction
so<00:49:07.839><c> uh</c>

00:49:08.790 --> 00:49:08.800 align:start position:0%
so uh
 

00:49:08.800 --> 00:49:11.589 align:start position:0%
so uh
so<00:49:09.040><c> this</c><00:49:09.280><c> thing</c><00:49:09.599><c> just</c><00:49:09.920><c> uh</c><00:49:10.480><c> doesn't</c><00:49:10.800><c> work</c><00:49:11.440><c> this</c>

00:49:11.589 --> 00:49:11.599 align:start position:0%
so this thing just uh doesn't work this
 

00:49:11.599 --> 00:49:12.950 align:start position:0%
so this thing just uh doesn't work this
needs<00:49:11.760><c> to</c><00:49:11.839><c> be</c><00:49:12.000><c> keep</c><00:49:12.160><c> things</c><00:49:12.400><c> equal</c><00:49:12.640><c> true</c><00:49:12.880><c> in</c>

00:49:12.950 --> 00:49:12.960 align:start position:0%
needs to be keep things equal true in
 

00:49:12.960 --> 00:49:14.150 align:start position:0%
needs to be keep things equal true in
this<00:49:13.119><c> case</c>

00:49:14.150 --> 00:49:14.160 align:start position:0%
this case
 

00:49:14.160 --> 00:49:16.309 align:start position:0%
this case
so<00:49:14.400><c> then</c>

00:49:16.309 --> 00:49:16.319 align:start position:0%
so then
 

00:49:16.319 --> 00:49:17.829 align:start position:0%
so then
then<00:49:16.480><c> we</c><00:49:16.640><c> have</c><00:49:16.720><c> that</c><00:49:16.960><c> p</c><00:49:17.119><c> at</c><00:49:17.280><c> zero</c><00:49:17.680><c> is</c>

00:49:17.829 --> 00:49:17.839 align:start position:0%
then we have that p at zero is
 

00:49:17.839 --> 00:49:19.829 align:start position:0%
then we have that p at zero is
normalized

00:49:19.829 --> 00:49:19.839 align:start position:0%
normalized
 

00:49:19.839 --> 00:49:21.670 align:start position:0%
normalized
and<00:49:20.079><c> conversely</c><00:49:20.720><c> the</c><00:49:20.800><c> first</c><00:49:21.040><c> column</c><00:49:21.440><c> you'd</c>

00:49:21.670 --> 00:49:21.680 align:start position:0%
and conversely the first column you'd
 

00:49:21.680 --> 00:49:24.549 align:start position:0%
and conversely the first column you'd
expect<00:49:21.920><c> to</c><00:49:22.000><c> potentially</c><00:49:22.400><c> not</c><00:49:22.480><c> be</c><00:49:22.640><c> normalized</c>

00:49:24.549 --> 00:49:24.559 align:start position:0%
expect to potentially not be normalized
 

00:49:24.559 --> 00:49:27.589 align:start position:0%
expect to potentially not be normalized
and<00:49:24.640><c> this</c><00:49:24.800><c> is</c><00:49:24.880><c> what</c><00:49:25.040><c> makes</c><00:49:25.359><c> it</c><00:49:25.760><c> work</c>

00:49:27.589 --> 00:49:27.599 align:start position:0%
and this is what makes it work
 

00:49:27.599 --> 00:49:31.030 align:start position:0%
and this is what makes it work
so<00:49:28.319><c> pretty</c><00:49:28.559><c> subtle</c><00:49:29.280><c> and</c><00:49:29.599><c> uh</c><00:49:30.000><c> hopefully</c><00:49:30.480><c> this</c>

00:49:31.030 --> 00:49:31.040 align:start position:0%
so pretty subtle and uh hopefully this
 

00:49:31.040 --> 00:49:33.030 align:start position:0%
so pretty subtle and uh hopefully this
helps<00:49:31.359><c> to</c><00:49:31.520><c> scare</c><00:49:31.839><c> you</c><00:49:32.240><c> that</c><00:49:32.400><c> you</c><00:49:32.559><c> should</c><00:49:32.880><c> have</c>

00:49:33.030 --> 00:49:33.040 align:start position:0%
helps to scare you that you should have
 

00:49:33.040 --> 00:49:34.950 align:start position:0%
helps to scare you that you should have
a<00:49:33.119><c> respect</c><00:49:33.440><c> for</c><00:49:33.599><c> broadcasting</c><00:49:34.240><c> be</c><00:49:34.400><c> careful</c>

00:49:34.950 --> 00:49:34.960 align:start position:0%
a respect for broadcasting be careful
 

00:49:34.960 --> 00:49:37.829 align:start position:0%
a respect for broadcasting be careful
check<00:49:35.200><c> your</c><00:49:35.359><c> work</c><00:49:36.000><c> uh</c><00:49:36.400><c> and</c><00:49:36.800><c> uh</c><00:49:37.359><c> understand</c><00:49:37.680><c> how</c>

00:49:37.829 --> 00:49:37.839 align:start position:0%
check your work uh and uh understand how
 

00:49:37.839 --> 00:49:39.030 align:start position:0%
check your work uh and uh understand how
it<00:49:37.920><c> works</c><00:49:38.160><c> under</c><00:49:38.319><c> the</c><00:49:38.400><c> hood</c><00:49:38.640><c> and</c><00:49:38.720><c> make</c><00:49:38.880><c> sure</c>

00:49:39.030 --> 00:49:39.040 align:start position:0%
it works under the hood and make sure
 

00:49:39.040 --> 00:49:40.390 align:start position:0%
it works under the hood and make sure
that<00:49:39.200><c> it's</c><00:49:39.359><c> broadcasting</c><00:49:39.839><c> in</c><00:49:39.920><c> the</c><00:49:40.000><c> direction</c>

00:49:40.390 --> 00:49:40.400 align:start position:0%
that it's broadcasting in the direction
 

00:49:40.400 --> 00:49:41.829 align:start position:0%
that it's broadcasting in the direction
that<00:49:40.480><c> you</c><00:49:40.640><c> like</c><00:49:41.200><c> otherwise</c><00:49:41.520><c> you're</c><00:49:41.680><c> going</c><00:49:41.760><c> to</c>

00:49:41.829 --> 00:49:41.839 align:start position:0%
that you like otherwise you're going to
 

00:49:41.839 --> 00:49:44.069 align:start position:0%
that you like otherwise you're going to
introduce<00:49:42.240><c> very</c><00:49:42.400><c> subtle</c><00:49:42.640><c> bugs</c><00:49:43.200><c> very</c><00:49:43.760><c> hard</c><00:49:44.000><c> to</c>

00:49:44.069 --> 00:49:44.079 align:start position:0%
introduce very subtle bugs very hard to
 

00:49:44.079 --> 00:49:46.710 align:start position:0%
introduce very subtle bugs very hard to
find<00:49:44.319><c> bugs</c><00:49:45.040><c> and</c><00:49:45.280><c> uh</c><00:49:45.680><c> just</c><00:49:45.839><c> be</c><00:49:46.000><c> careful</c><00:49:46.480><c> one</c>

00:49:46.710 --> 00:49:46.720 align:start position:0%
find bugs and uh just be careful one
 

00:49:46.720 --> 00:49:48.710 align:start position:0%
find bugs and uh just be careful one
more<00:49:46.880><c> note</c><00:49:47.119><c> on</c><00:49:47.280><c> efficiency</c><00:49:48.160><c> we</c><00:49:48.319><c> don't</c><00:49:48.480><c> want</c><00:49:48.640><c> to</c>

00:49:48.710 --> 00:49:48.720 align:start position:0%
more note on efficiency we don't want to
 

00:49:48.720 --> 00:49:51.430 align:start position:0%
more note on efficiency we don't want to
be<00:49:48.880><c> doing</c><00:49:49.119><c> this</c><00:49:49.359><c> here</c><00:49:49.839><c> because</c><00:49:50.800><c> this</c><00:49:51.119><c> creates</c>

00:49:51.430 --> 00:49:51.440 align:start position:0%
be doing this here because this creates
 

00:49:51.440 --> 00:49:53.270 align:start position:0%
be doing this here because this creates
a<00:49:51.760><c> completely</c><00:49:52.160><c> new</c><00:49:52.400><c> tensor</c><00:49:52.800><c> that</c><00:49:52.880><c> we</c><00:49:53.040><c> store</c>

00:49:53.270 --> 00:49:53.280 align:start position:0%
a completely new tensor that we store
 

00:49:53.280 --> 00:49:54.309 align:start position:0%
a completely new tensor that we store
into<00:49:53.520><c> p</c>

00:49:54.309 --> 00:49:54.319 align:start position:0%
into p
 

00:49:54.319 --> 00:49:56.390 align:start position:0%
into p
we<00:49:54.559><c> prefer</c><00:49:54.880><c> to</c><00:49:55.040><c> use</c><00:49:55.359><c> in</c><00:49:55.520><c> place</c><00:49:55.760><c> operations</c><00:49:56.240><c> if</c>

00:49:56.390 --> 00:49:56.400 align:start position:0%
we prefer to use in place operations if
 

00:49:56.400 --> 00:49:57.750 align:start position:0%
we prefer to use in place operations if
possible

00:49:57.750 --> 00:49:57.760 align:start position:0%
possible
 

00:49:57.760 --> 00:49:59.990 align:start position:0%
possible
so<00:49:58.160><c> this</c><00:49:58.480><c> would</c><00:49:58.640><c> be</c><00:49:58.720><c> an</c><00:49:58.880><c> in-place</c><00:49:59.280><c> operation</c>

00:49:59.990 --> 00:50:00.000 align:start position:0%
so this would be an in-place operation
 

00:50:00.000 --> 00:50:01.829 align:start position:0%
so this would be an in-place operation
it<00:50:00.079><c> has</c><00:50:00.240><c> the</c><00:50:00.400><c> potential</c><00:50:00.720><c> to</c><00:50:00.800><c> be</c><00:50:00.960><c> faster</c><00:50:01.760><c> it</c>

00:50:01.829 --> 00:50:01.839 align:start position:0%
it has the potential to be faster it
 

00:50:01.839 --> 00:50:03.430 align:start position:0%
it has the potential to be faster it
doesn't<00:50:02.079><c> create</c><00:50:02.400><c> new</c><00:50:02.559><c> memory</c>

00:50:03.430 --> 00:50:03.440 align:start position:0%
doesn't create new memory
 

00:50:03.440 --> 00:50:06.150 align:start position:0%
doesn't create new memory
under<00:50:03.680><c> the</c><00:50:03.839><c> hood</c><00:50:04.400><c> and</c><00:50:04.480><c> then</c><00:50:04.640><c> let's</c><00:50:04.880><c> erase</c><00:50:05.200><c> this</c>

00:50:06.150 --> 00:50:06.160 align:start position:0%
under the hood and then let's erase this
 

00:50:06.160 --> 00:50:07.910 align:start position:0%
under the hood and then let's erase this
we<00:50:06.319><c> don't</c><00:50:06.480><c> need</c><00:50:06.720><c> it</c>

00:50:07.910 --> 00:50:07.920 align:start position:0%
we don't need it
 

00:50:07.920 --> 00:50:09.109 align:start position:0%
we don't need it
and<00:50:08.240><c> let's</c>

00:50:09.109 --> 00:50:09.119 align:start position:0%
and let's
 

00:50:09.119 --> 00:50:10.870 align:start position:0%
and let's
also

00:50:10.870 --> 00:50:10.880 align:start position:0%
also
 

00:50:10.880 --> 00:50:13.589 align:start position:0%
also
um<00:50:11.920><c> just</c><00:50:12.079><c> do</c><00:50:12.240><c> fewer</c><00:50:12.640><c> just</c><00:50:12.800><c> so</c><00:50:12.960><c> i'm</c><00:50:13.040><c> not</c><00:50:13.280><c> wasting</c>

00:50:13.589 --> 00:50:13.599 align:start position:0%
um just do fewer just so i'm not wasting
 

00:50:13.599 --> 00:50:14.549 align:start position:0%
um just do fewer just so i'm not wasting
space

00:50:14.549 --> 00:50:14.559 align:start position:0%
space
 

00:50:14.559 --> 00:50:15.910 align:start position:0%
space
okay<00:50:14.800><c> so</c><00:50:14.960><c> we're</c><00:50:15.200><c> actually</c><00:50:15.440><c> in</c><00:50:15.520><c> a</c><00:50:15.599><c> pretty</c><00:50:15.760><c> good</c>

00:50:15.910 --> 00:50:15.920 align:start position:0%
okay so we're actually in a pretty good
 

00:50:15.920 --> 00:50:16.950 align:start position:0%
okay so we're actually in a pretty good
spot<00:50:16.160><c> now</c>

00:50:16.950 --> 00:50:16.960 align:start position:0%
spot now
 

00:50:16.960 --> 00:50:19.270 align:start position:0%
spot now
we<00:50:17.200><c> trained</c><00:50:17.680><c> a</c><00:50:17.839><c> bigram</c><00:50:18.240><c> language</c><00:50:18.559><c> model</c><00:50:19.119><c> and</c>

00:50:19.270 --> 00:50:19.280 align:start position:0%
we trained a bigram language model and
 

00:50:19.280 --> 00:50:22.069 align:start position:0%
we trained a bigram language model and
we<00:50:19.440><c> trained</c><00:50:19.760><c> it</c><00:50:19.839><c> really</c><00:50:20.160><c> just</c><00:50:20.319><c> by</c><00:50:20.720><c> counting</c><00:50:21.599><c> uh</c>

00:50:22.069 --> 00:50:22.079 align:start position:0%
we trained it really just by counting uh
 

00:50:22.079 --> 00:50:24.390 align:start position:0%
we trained it really just by counting uh
how<00:50:22.319><c> frequently</c><00:50:22.880><c> any</c><00:50:23.200><c> pairing</c><00:50:23.680><c> occurs</c><00:50:24.319><c> and</c>

00:50:24.390 --> 00:50:24.400 align:start position:0%
how frequently any pairing occurs and
 

00:50:24.400 --> 00:50:26.309 align:start position:0%
how frequently any pairing occurs and
then<00:50:24.559><c> normalizing</c><00:50:25.359><c> so</c><00:50:25.520><c> that</c><00:50:25.839><c> we</c><00:50:25.920><c> get</c><00:50:26.079><c> a</c><00:50:26.160><c> nice</c>

00:50:26.309 --> 00:50:26.319 align:start position:0%
then normalizing so that we get a nice
 

00:50:26.319 --> 00:50:27.829 align:start position:0%
then normalizing so that we get a nice
property<00:50:26.640><c> distribution</c>

00:50:27.829 --> 00:50:27.839 align:start position:0%
property distribution
 

00:50:27.839 --> 00:50:31.030 align:start position:0%
property distribution
so<00:50:28.000><c> really</c><00:50:28.319><c> these</c><00:50:28.800><c> elements</c><00:50:29.280><c> of</c><00:50:29.440><c> this</c><00:50:30.000><c> array</c><00:50:30.400><c> p</c>

00:50:31.030 --> 00:50:31.040 align:start position:0%
so really these elements of this array p
 

00:50:31.040 --> 00:50:32.710 align:start position:0%
so really these elements of this array p
are<00:50:31.200><c> really</c><00:50:31.440><c> the</c><00:50:31.599><c> parameters</c><00:50:32.160><c> of</c><00:50:32.240><c> our</c><00:50:32.319><c> biogram</c>

00:50:32.710 --> 00:50:32.720 align:start position:0%
are really the parameters of our biogram
 

00:50:32.720 --> 00:50:34.549 align:start position:0%
are really the parameters of our biogram
language<00:50:33.040><c> model</c><00:50:33.440><c> giving</c><00:50:33.760><c> us</c><00:50:34.000><c> and</c><00:50:34.079><c> summarizing</c>

00:50:34.549 --> 00:50:34.559 align:start position:0%
language model giving us and summarizing
 

00:50:34.559 --> 00:50:36.870 align:start position:0%
language model giving us and summarizing
the<00:50:34.720><c> statistics</c><00:50:35.280><c> of</c><00:50:35.359><c> these</c><00:50:35.599><c> bigrams</c>

00:50:36.870 --> 00:50:36.880 align:start position:0%
the statistics of these bigrams
 

00:50:36.880 --> 00:50:38.630 align:start position:0%
the statistics of these bigrams
so<00:50:37.040><c> we</c><00:50:37.280><c> train</c><00:50:37.520><c> the</c><00:50:37.680><c> model</c><00:50:38.079><c> and</c><00:50:38.160><c> then</c><00:50:38.319><c> we</c><00:50:38.480><c> know</c>

00:50:38.630 --> 00:50:38.640 align:start position:0%
so we train the model and then we know
 

00:50:38.640 --> 00:50:40.470 align:start position:0%
so we train the model and then we know
how<00:50:38.800><c> to</c><00:50:38.960><c> sample</c><00:50:39.200><c> from</c><00:50:39.440><c> a</c><00:50:39.520><c> model</c><00:50:40.079><c> we</c><00:50:40.240><c> just</c>

00:50:40.470 --> 00:50:40.480 align:start position:0%
how to sample from a model we just
 

00:50:40.480 --> 00:50:43.349 align:start position:0%
how to sample from a model we just
iteratively<00:50:41.359><c> uh</c><00:50:41.920><c> sample</c><00:50:42.240><c> the</c><00:50:42.319><c> next</c><00:50:42.559><c> character</c>

00:50:43.349 --> 00:50:43.359 align:start position:0%
iteratively uh sample the next character
 

00:50:43.359 --> 00:50:45.510 align:start position:0%
iteratively uh sample the next character
and<00:50:43.839><c> feed</c><00:50:44.079><c> it</c><00:50:44.240><c> in</c><00:50:44.480><c> each</c><00:50:44.720><c> time</c><00:50:45.040><c> and</c><00:50:45.119><c> get</c><00:50:45.280><c> a</c><00:50:45.359><c> next</c>

00:50:45.510 --> 00:50:45.520 align:start position:0%
and feed it in each time and get a next
 

00:50:45.520 --> 00:50:46.950 align:start position:0%
and feed it in each time and get a next
character

00:50:46.950 --> 00:50:46.960 align:start position:0%
character
 

00:50:46.960 --> 00:50:48.470 align:start position:0%
character
now<00:50:47.119><c> what</c><00:50:47.280><c> i'd</c><00:50:47.359><c> like</c><00:50:47.520><c> to</c><00:50:47.599><c> do</c><00:50:47.760><c> is</c><00:50:47.920><c> i'd</c><00:50:48.079><c> like</c><00:50:48.240><c> to</c>

00:50:48.470 --> 00:50:48.480 align:start position:0%
now what i'd like to do is i'd like to
 

00:50:48.480 --> 00:50:50.309 align:start position:0%
now what i'd like to do is i'd like to
somehow<00:50:48.800><c> evaluate</c><00:50:49.359><c> the</c><00:50:49.520><c> quality</c><00:50:50.000><c> of</c><00:50:50.079><c> this</c>

00:50:50.309 --> 00:50:50.319 align:start position:0%
somehow evaluate the quality of this
 

00:50:50.319 --> 00:50:52.950 align:start position:0%
somehow evaluate the quality of this
model<00:50:51.040><c> we'd</c><00:50:51.200><c> like</c><00:50:51.359><c> to</c><00:50:51.440><c> somehow</c><00:50:51.839><c> summarize</c><00:50:52.800><c> the</c>

00:50:52.950 --> 00:50:52.960 align:start position:0%
model we'd like to somehow summarize the
 

00:50:52.960 --> 00:50:54.710 align:start position:0%
model we'd like to somehow summarize the
quality<00:50:53.359><c> of</c><00:50:53.440><c> this</c><00:50:53.599><c> model</c><00:50:54.079><c> into</c><00:50:54.319><c> a</c><00:50:54.400><c> single</c>

00:50:54.710 --> 00:50:54.720 align:start position:0%
quality of this model into a single
 

00:50:54.720 --> 00:50:57.430 align:start position:0%
quality of this model into a single
number<00:50:55.200><c> how</c><00:50:55.359><c> good</c><00:50:55.680><c> is</c><00:50:55.760><c> it</c><00:50:55.920><c> at</c><00:50:56.079><c> predicting</c>

00:50:57.430 --> 00:50:57.440 align:start position:0%
number how good is it at predicting
 

00:50:57.440 --> 00:50:58.950 align:start position:0%
number how good is it at predicting
the<00:50:57.599><c> training</c><00:50:57.920><c> set</c>

00:50:58.950 --> 00:50:58.960 align:start position:0%
the training set
 

00:50:58.960 --> 00:51:00.950 align:start position:0%
the training set
and<00:50:59.440><c> as</c><00:50:59.599><c> an</c><00:50:59.760><c> example</c><00:51:00.000><c> so</c><00:51:00.240><c> in</c><00:51:00.319><c> the</c><00:51:00.400><c> training</c><00:51:00.720><c> set</c>

00:51:00.950 --> 00:51:00.960 align:start position:0%
and as an example so in the training set
 

00:51:00.960 --> 00:51:04.150 align:start position:0%
and as an example so in the training set
we<00:51:01.119><c> can</c><00:51:01.280><c> evaluate</c><00:51:01.920><c> now</c><00:51:02.240><c> the</c><00:51:02.480><c> training</c><00:51:03.359><c> loss</c>

00:51:04.150 --> 00:51:04.160 align:start position:0%
we can evaluate now the training loss
 

00:51:04.160 --> 00:51:05.910 align:start position:0%
we can evaluate now the training loss
and<00:51:04.319><c> this</c><00:51:04.480><c> training</c><00:51:04.880><c> loss</c><00:51:05.359><c> is</c><00:51:05.520><c> telling</c><00:51:05.760><c> us</c>

00:51:05.910 --> 00:51:05.920 align:start position:0%
and this training loss is telling us
 

00:51:05.920 --> 00:51:06.870 align:start position:0%
and this training loss is telling us
about

00:51:06.870 --> 00:51:06.880 align:start position:0%
about
 

00:51:06.880 --> 00:51:08.150 align:start position:0%
about
sort<00:51:07.040><c> of</c><00:51:07.119><c> the</c><00:51:07.280><c> quality</c><00:51:07.520><c> of</c><00:51:07.599><c> this</c><00:51:07.680><c> model</c><00:51:08.000><c> in</c><00:51:08.079><c> a</c>

00:51:08.150 --> 00:51:08.160 align:start position:0%
sort of the quality of this model in a
 

00:51:08.160 --> 00:51:09.990 align:start position:0%
sort of the quality of this model in a
single<00:51:08.480><c> number</c><00:51:09.040><c> just</c><00:51:09.200><c> like</c><00:51:09.359><c> we</c><00:51:09.520><c> saw</c><00:51:09.839><c> in</c>

00:51:09.990 --> 00:51:10.000 align:start position:0%
single number just like we saw in
 

00:51:10.000 --> 00:51:11.829 align:start position:0%
single number just like we saw in
micrograd

00:51:11.829 --> 00:51:11.839 align:start position:0%
micrograd
 

00:51:11.839 --> 00:51:13.349 align:start position:0%
micrograd
so<00:51:12.240><c> let's</c><00:51:12.480><c> try</c><00:51:12.640><c> to</c><00:51:12.800><c> think</c><00:51:12.960><c> through</c><00:51:13.200><c> the</c>

00:51:13.349 --> 00:51:13.359 align:start position:0%
so let's try to think through the
 

00:51:13.359 --> 00:51:14.470 align:start position:0%
so let's try to think through the
quality<00:51:13.599><c> of</c><00:51:13.680><c> the</c><00:51:13.760><c> model</c><00:51:14.000><c> and</c><00:51:14.079><c> how</c><00:51:14.240><c> we</c><00:51:14.319><c> would</c>

00:51:14.470 --> 00:51:14.480 align:start position:0%
quality of the model and how we would
 

00:51:14.480 --> 00:51:16.950 align:start position:0%
quality of the model and how we would
evaluate<00:51:14.960><c> it</c>

00:51:16.950 --> 00:51:16.960 align:start position:0%
evaluate it
 

00:51:16.960 --> 00:51:18.069 align:start position:0%
evaluate it
basically<00:51:17.359><c> what</c><00:51:17.440><c> we're</c><00:51:17.599><c> going</c><00:51:17.760><c> to</c><00:51:17.839><c> do</c><00:51:17.920><c> is</c>

00:51:18.069 --> 00:51:18.079 align:start position:0%
basically what we're going to do is
 

00:51:18.079 --> 00:51:20.549 align:start position:0%
basically what we're going to do is
we're<00:51:18.160><c> going</c><00:51:18.319><c> to</c><00:51:18.880><c> copy</c><00:51:19.119><c> paste</c><00:51:19.359><c> this</c><00:51:19.520><c> code</c>

00:51:20.549 --> 00:51:20.559 align:start position:0%
we're going to copy paste this code
 

00:51:20.559 --> 00:51:22.870 align:start position:0%
we're going to copy paste this code
that<00:51:20.720><c> we</c><00:51:20.880><c> previously</c><00:51:21.359><c> used</c><00:51:21.520><c> for</c><00:51:21.680><c> counting</c>

00:51:22.870 --> 00:51:22.880 align:start position:0%
that we previously used for counting
 

00:51:22.880 --> 00:51:24.069 align:start position:0%
that we previously used for counting
okay

00:51:24.069 --> 00:51:24.079 align:start position:0%
okay
 

00:51:24.079 --> 00:51:25.589 align:start position:0%
okay
and<00:51:24.240><c> let</c><00:51:24.400><c> me</c><00:51:24.480><c> just</c><00:51:24.640><c> print</c><00:51:24.880><c> these</c><00:51:25.040><c> diagrams</c>

00:51:25.589 --> 00:51:25.599 align:start position:0%
and let me just print these diagrams
 

00:51:25.599 --> 00:51:27.750 align:start position:0%
and let me just print these diagrams
first<00:51:25.920><c> we're</c><00:51:26.079><c> gonna</c><00:51:26.319><c> use</c><00:51:26.559><c> f</c><00:51:26.800><c> strings</c>

00:51:27.750 --> 00:51:27.760 align:start position:0%
first we're gonna use f strings
 

00:51:27.760 --> 00:51:29.670 align:start position:0%
first we're gonna use f strings
and<00:51:28.000><c> i'm</c><00:51:28.079><c> gonna</c><00:51:28.319><c> print</c><00:51:28.960><c> character</c><00:51:29.359><c> one</c>

00:51:29.670 --> 00:51:29.680 align:start position:0%
and i'm gonna print character one
 

00:51:29.680 --> 00:51:30.950 align:start position:0%
and i'm gonna print character one
followed<00:51:29.920><c> by</c><00:51:30.079><c> character</c><00:51:30.400><c> two</c><00:51:30.559><c> these</c><00:51:30.800><c> are</c><00:51:30.880><c> the</c>

00:51:30.950 --> 00:51:30.960 align:start position:0%
followed by character two these are the
 

00:51:30.960 --> 00:51:32.870 align:start position:0%
followed by character two these are the
diagrams<00:51:31.920><c> and</c><00:51:32.000><c> then</c><00:51:32.240><c> i</c><00:51:32.319><c> don't</c><00:51:32.400><c> wanna</c><00:51:32.720><c> do</c><00:51:32.800><c> it</c>

00:51:32.870 --> 00:51:32.880 align:start position:0%
diagrams and then i don't wanna do it
 

00:51:32.880 --> 00:51:34.150 align:start position:0%
diagrams and then i don't wanna do it
for<00:51:33.040><c> all</c><00:51:33.119><c> the</c><00:51:33.200><c> words</c><00:51:33.440><c> just</c><00:51:33.760><c> do</c><00:51:33.920><c> the</c><00:51:34.000><c> first</c>

00:51:34.150 --> 00:51:34.160 align:start position:0%
for all the words just do the first
 

00:51:34.160 --> 00:51:37.589 align:start position:0%
for all the words just do the first
three<00:51:34.839><c> words</c><00:51:35.920><c> so</c><00:51:36.079><c> here</c><00:51:36.240><c> we</c><00:51:36.400><c> have</c><00:51:36.640><c> emma</c><00:51:37.040><c> olivia</c>

00:51:37.589 --> 00:51:37.599 align:start position:0%
three words so here we have emma olivia
 

00:51:37.599 --> 00:51:40.069 align:start position:0%
three words so here we have emma olivia
and<00:51:37.760><c> ava</c><00:51:38.240><c> bigrams</c>

00:51:40.069 --> 00:51:40.079 align:start position:0%
and ava bigrams
 

00:51:40.079 --> 00:51:41.750 align:start position:0%
and ava bigrams
now<00:51:40.319><c> what</c><00:51:40.480><c> we'd</c><00:51:40.640><c> like</c><00:51:40.800><c> to</c><00:51:40.880><c> do</c><00:51:41.119><c> is</c><00:51:41.280><c> we'd</c><00:51:41.440><c> like</c><00:51:41.599><c> to</c>

00:51:41.750 --> 00:51:41.760 align:start position:0%
now what we'd like to do is we'd like to
 

00:51:41.760 --> 00:51:44.630 align:start position:0%
now what we'd like to do is we'd like to
basically<00:51:42.319><c> look</c><00:51:43.040><c> at</c><00:51:43.359><c> the</c><00:51:43.599><c> probability</c><00:51:44.400><c> that</c>

00:51:44.630 --> 00:51:44.640 align:start position:0%
basically look at the probability that
 

00:51:44.640 --> 00:51:46.710 align:start position:0%
basically look at the probability that
the<00:51:44.720><c> model</c><00:51:45.119><c> assigns</c><00:51:45.920><c> to</c><00:51:46.160><c> every</c><00:51:46.319><c> one</c><00:51:46.480><c> of</c><00:51:46.559><c> these</c>

00:51:46.710 --> 00:51:46.720 align:start position:0%
the model assigns to every one of these
 

00:51:46.720 --> 00:51:48.069 align:start position:0%
the model assigns to every one of these
diagrams

00:51:48.069 --> 00:51:48.079 align:start position:0%
diagrams
 

00:51:48.079 --> 00:51:49.430 align:start position:0%
diagrams
so<00:51:48.240><c> in</c><00:51:48.319><c> other</c><00:51:48.480><c> words</c><00:51:48.720><c> we</c><00:51:48.880><c> can</c><00:51:49.040><c> look</c><00:51:49.280><c> at</c><00:51:49.359><c> the</c>

00:51:49.430 --> 00:51:49.440 align:start position:0%
so in other words we can look at the
 

00:51:49.440 --> 00:51:51.109 align:start position:0%
so in other words we can look at the
probability<00:51:50.160><c> which</c><00:51:50.400><c> is</c>

00:51:51.109 --> 00:51:51.119 align:start position:0%
probability which is
 

00:51:51.119 --> 00:51:52.950 align:start position:0%
probability which is
summarized<00:51:51.520><c> in</c><00:51:51.599><c> the</c><00:51:51.680><c> matrix</c><00:51:52.079><c> b</c>

00:51:52.950 --> 00:51:52.960 align:start position:0%
summarized in the matrix b
 

00:51:52.960 --> 00:51:55.990 align:start position:0%
summarized in the matrix b
of<00:51:53.119><c> i</c><00:51:53.280><c> x</c><00:51:53.359><c> 1</c><00:51:53.680><c> x</c><00:51:53.839><c> 2</c>

00:51:55.990 --> 00:51:56.000 align:start position:0%
of i x 1 x 2
 

00:51:56.000 --> 00:51:57.910 align:start position:0%
of i x 1 x 2
and<00:51:56.160><c> then</c><00:51:56.400><c> we</c><00:51:56.480><c> can</c><00:51:56.720><c> print</c><00:51:56.960><c> it</c><00:51:57.119><c> here</c>

00:51:57.910 --> 00:51:57.920 align:start position:0%
and then we can print it here
 

00:51:57.920 --> 00:52:00.630 align:start position:0%
and then we can print it here
as<00:51:58.240><c> probability</c>

00:52:00.630 --> 00:52:00.640 align:start position:0%
as probability
 

00:52:00.640 --> 00:52:01.990 align:start position:0%
as probability
and<00:52:00.720><c> because</c><00:52:00.960><c> these</c><00:52:01.119><c> properties</c><00:52:01.520><c> are</c><00:52:01.680><c> way</c><00:52:01.839><c> too</c>

00:52:01.990 --> 00:52:02.000 align:start position:0%
and because these properties are way too
 

00:52:02.000 --> 00:52:04.710 align:start position:0%
and because these properties are way too
large<00:52:02.319><c> let</c><00:52:02.480><c> me</c><00:52:02.960><c> present</c>

00:52:04.710 --> 00:52:04.720 align:start position:0%
large let me present
 

00:52:04.720 --> 00:52:06.710 align:start position:0%
large let me present
or<00:52:04.880><c> call</c><00:52:05.119><c> in</c><00:52:05.359><c> 0.4</c><00:52:05.839><c> f</c>

00:52:06.710 --> 00:52:06.720 align:start position:0%
or call in 0.4 f
 

00:52:06.720 --> 00:52:09.030 align:start position:0%
or call in 0.4 f
to<00:52:06.960><c> like</c><00:52:07.119><c> truncate</c><00:52:07.520><c> it</c><00:52:07.599><c> a</c><00:52:07.680><c> bit</c>

00:52:09.030 --> 00:52:09.040 align:start position:0%
to like truncate it a bit
 

00:52:09.040 --> 00:52:10.309 align:start position:0%
to like truncate it a bit
so<00:52:09.280><c> what</c><00:52:09.440><c> do</c><00:52:09.440><c> we</c><00:52:09.599><c> have</c><00:52:09.680><c> here</c><00:52:09.920><c> right</c><00:52:10.079><c> we're</c>

00:52:10.309 --> 00:52:10.319 align:start position:0%
so what do we have here right we're
 

00:52:10.319 --> 00:52:11.750 align:start position:0%
so what do we have here right we're
looking<00:52:10.559><c> at</c><00:52:10.640><c> the</c><00:52:10.800><c> probabilities</c><00:52:11.440><c> that</c><00:52:11.599><c> the</c>

00:52:11.750 --> 00:52:11.760 align:start position:0%
looking at the probabilities that the
 

00:52:11.760 --> 00:52:13.109 align:start position:0%
looking at the probabilities that the
model<00:52:12.079><c> assigns</c><00:52:12.400><c> to</c><00:52:12.559><c> every</c><00:52:12.720><c> one</c><00:52:12.880><c> of</c><00:52:12.960><c> these</c>

00:52:13.109 --> 00:52:13.119 align:start position:0%
model assigns to every one of these
 

00:52:13.119 --> 00:52:15.109 align:start position:0%
model assigns to every one of these
bigrams<00:52:13.760><c> in</c><00:52:13.839><c> the</c><00:52:13.920><c> dataset</c>

00:52:15.109 --> 00:52:15.119 align:start position:0%
bigrams in the dataset
 

00:52:15.119 --> 00:52:16.630 align:start position:0%
bigrams in the dataset
and<00:52:15.280><c> so</c><00:52:15.440><c> we</c><00:52:15.520><c> can</c><00:52:15.680><c> see</c><00:52:15.839><c> some</c><00:52:16.000><c> of</c><00:52:16.079><c> them</c><00:52:16.240><c> are</c><00:52:16.480><c> four</c>

00:52:16.630 --> 00:52:16.640 align:start position:0%
and so we can see some of them are four
 

00:52:16.640 --> 00:52:18.549 align:start position:0%
and so we can see some of them are four
percent<00:52:17.040><c> three</c><00:52:17.200><c> percent</c><00:52:17.520><c> etc</c>

00:52:18.549 --> 00:52:18.559 align:start position:0%
percent three percent etc
 

00:52:18.559 --> 00:52:19.910 align:start position:0%
percent three percent etc
just<00:52:18.720><c> to</c><00:52:18.880><c> have</c><00:52:18.960><c> a</c><00:52:19.040><c> measuring</c><00:52:19.440><c> stick</c><00:52:19.680><c> in</c><00:52:19.760><c> our</c>

00:52:19.910 --> 00:52:19.920 align:start position:0%
just to have a measuring stick in our
 

00:52:19.920 --> 00:52:23.270 align:start position:0%
just to have a measuring stick in our
mind<00:52:20.160><c> by</c><00:52:20.319><c> the</c><00:52:20.400><c> way</c><00:52:21.040><c> um</c><00:52:21.680><c> we</c><00:52:21.760><c> have</c><00:52:21.920><c> 27</c><00:52:22.640><c> possible</c>

00:52:23.270 --> 00:52:23.280 align:start position:0%
mind by the way um we have 27 possible
 

00:52:23.280 --> 00:52:25.349 align:start position:0%
mind by the way um we have 27 possible
characters<00:52:23.760><c> or</c><00:52:23.920><c> tokens</c><00:52:24.640><c> and</c><00:52:24.880><c> if</c><00:52:25.040><c> everything</c>

00:52:25.349 --> 00:52:25.359 align:start position:0%
characters or tokens and if everything
 

00:52:25.359 --> 00:52:27.430 align:start position:0%
characters or tokens and if everything
was<00:52:25.599><c> equally</c><00:52:25.920><c> likely</c><00:52:26.640><c> then</c><00:52:26.800><c> you'd</c><00:52:27.040><c> expect</c><00:52:27.280><c> all</c>

00:52:27.430 --> 00:52:27.440 align:start position:0%
was equally likely then you'd expect all
 

00:52:27.440 --> 00:52:28.870 align:start position:0%
was equally likely then you'd expect all
these<00:52:27.599><c> probabilities</c>

00:52:28.870 --> 00:52:28.880 align:start position:0%
these probabilities
 

00:52:28.880 --> 00:52:30.549 align:start position:0%
these probabilities
to<00:52:29.040><c> be</c>

00:52:30.549 --> 00:52:30.559 align:start position:0%
to be
 

00:52:30.559 --> 00:52:32.390 align:start position:0%
to be
four<00:52:30.720><c> percent</c><00:52:31.200><c> roughly</c>

00:52:32.390 --> 00:52:32.400 align:start position:0%
four percent roughly
 

00:52:32.400 --> 00:52:34.309 align:start position:0%
four percent roughly
so<00:52:32.640><c> anything</c><00:52:32.960><c> above</c><00:52:33.280><c> four</c><00:52:33.440><c> percent</c><00:52:34.079><c> means</c>

00:52:34.309 --> 00:52:34.319 align:start position:0%
so anything above four percent means
 

00:52:34.319 --> 00:52:35.910 align:start position:0%
so anything above four percent means
that<00:52:34.400><c> we've</c><00:52:34.640><c> learned</c><00:52:34.800><c> something</c><00:52:35.200><c> useful</c><00:52:35.760><c> from</c>

00:52:35.910 --> 00:52:35.920 align:start position:0%
that we've learned something useful from
 

00:52:35.920 --> 00:52:38.069 align:start position:0%
that we've learned something useful from
these<00:52:36.160><c> bigram</c><00:52:36.559><c> statistics</c><00:52:37.520><c> and</c><00:52:37.680><c> you</c><00:52:37.760><c> see</c><00:52:37.920><c> that</c>

00:52:38.069 --> 00:52:38.079 align:start position:0%
these bigram statistics and you see that
 

00:52:38.079 --> 00:52:39.430 align:start position:0%
these bigram statistics and you see that
roughly<00:52:38.400><c> some</c><00:52:38.559><c> of</c><00:52:38.640><c> these</c><00:52:38.800><c> are</c><00:52:38.880><c> four</c><00:52:39.040><c> percent</c>

00:52:39.430 --> 00:52:39.440 align:start position:0%
roughly some of these are four percent
 

00:52:39.440 --> 00:52:40.870 align:start position:0%
roughly some of these are four percent
but<00:52:39.599><c> some</c><00:52:39.760><c> of</c><00:52:39.839><c> them</c><00:52:40.000><c> are</c><00:52:40.160><c> as</c><00:52:40.319><c> high</c><00:52:40.480><c> as</c><00:52:40.559><c> 40</c>

00:52:40.870 --> 00:52:40.880 align:start position:0%
but some of them are as high as 40
 

00:52:40.880 --> 00:52:41.829 align:start position:0%
but some of them are as high as 40
percent

00:52:41.829 --> 00:52:41.839 align:start position:0%
percent
 

00:52:41.839 --> 00:52:44.390 align:start position:0%
percent
35<00:52:42.240><c> percent</c><00:52:43.119><c> and</c><00:52:43.200><c> so</c><00:52:43.440><c> on</c><00:52:43.839><c> so</c><00:52:44.000><c> you</c><00:52:44.079><c> see</c><00:52:44.240><c> that</c><00:52:44.319><c> the</c>

00:52:44.390 --> 00:52:44.400 align:start position:0%
35 percent and so on so you see that the
 

00:52:44.400 --> 00:52:45.589 align:start position:0%
35 percent and so on so you see that the
model<00:52:44.640><c> actually</c><00:52:44.960><c> assigned</c><00:52:45.200><c> a</c><00:52:45.280><c> pretty</c><00:52:45.440><c> high</c>

00:52:45.589 --> 00:52:45.599 align:start position:0%
model actually assigned a pretty high
 

00:52:45.599 --> 00:52:47.430 align:start position:0%
model actually assigned a pretty high
probability<00:52:46.240><c> to</c><00:52:46.880><c> whatever's</c><00:52:47.280><c> in</c><00:52:47.359><c> the</c>

00:52:47.430 --> 00:52:47.440 align:start position:0%
probability to whatever's in the
 

00:52:47.440 --> 00:52:49.990 align:start position:0%
probability to whatever's in the
training<00:52:47.760><c> set</c><00:52:48.240><c> and</c><00:52:48.319><c> so</c><00:52:48.640><c> that's</c><00:52:48.880><c> a</c><00:52:48.960><c> good</c><00:52:49.119><c> thing</c>

00:52:49.990 --> 00:52:50.000 align:start position:0%
training set and so that's a good thing
 

00:52:50.000 --> 00:52:51.670 align:start position:0%
training set and so that's a good thing
um<00:52:50.559><c> basically</c><00:52:50.880><c> if</c><00:52:50.960><c> you</c><00:52:51.119><c> have</c><00:52:51.200><c> a</c><00:52:51.359><c> very</c><00:52:51.520><c> good</c>

00:52:51.670 --> 00:52:51.680 align:start position:0%
um basically if you have a very good
 

00:52:51.680 --> 00:52:53.190 align:start position:0%
um basically if you have a very good
model<00:52:52.319><c> you'd</c><00:52:52.559><c> expect</c><00:52:52.880><c> that</c><00:52:53.040><c> these</c>

00:52:53.190 --> 00:52:53.200 align:start position:0%
model you'd expect that these
 

00:52:53.200 --> 00:52:54.950 align:start position:0%
model you'd expect that these
probabilities<00:52:53.599><c> should</c><00:52:53.760><c> be</c><00:52:53.920><c> near</c><00:52:54.240><c> one</c><00:52:54.800><c> because</c>

00:52:54.950 --> 00:52:54.960 align:start position:0%
probabilities should be near one because
 

00:52:54.960 --> 00:52:57.109 align:start position:0%
probabilities should be near one because
that<00:52:55.200><c> means</c><00:52:55.440><c> that</c><00:52:56.000><c> your</c><00:52:56.160><c> model</c><00:52:56.559><c> is</c><00:52:56.720><c> correctly</c>

00:52:57.109 --> 00:52:57.119 align:start position:0%
that means that your model is correctly
 

00:52:57.119 --> 00:52:58.630 align:start position:0%
that means that your model is correctly
predicting<00:52:57.520><c> what's</c><00:52:57.680><c> going</c><00:52:57.760><c> to</c><00:52:57.839><c> come</c><00:52:58.079><c> next</c>

00:52:58.630 --> 00:52:58.640 align:start position:0%
predicting what's going to come next
 

00:52:58.640 --> 00:53:00.230 align:start position:0%
predicting what's going to come next
especially<00:52:59.040><c> on</c><00:52:59.119><c> the</c><00:52:59.280><c> training</c><00:52:59.520><c> set</c><00:52:59.839><c> where</c><00:53:00.000><c> you</c>

00:53:00.230 --> 00:53:00.240 align:start position:0%
especially on the training set where you
 

00:53:00.240 --> 00:53:02.790 align:start position:0%
especially on the training set where you
where<00:53:00.400><c> you</c><00:53:00.559><c> trained</c><00:53:00.800><c> your</c><00:53:00.960><c> model</c>

00:53:02.790 --> 00:53:02.800 align:start position:0%
where you trained your model
 

00:53:02.800 --> 00:53:03.670 align:start position:0%
where you trained your model
so

00:53:03.670 --> 00:53:03.680 align:start position:0%
so
 

00:53:03.680 --> 00:53:05.270 align:start position:0%
so
now<00:53:03.920><c> we'd</c><00:53:04.079><c> like</c><00:53:04.240><c> to</c><00:53:04.319><c> think</c><00:53:04.480><c> about</c><00:53:04.880><c> how</c><00:53:05.040><c> can</c><00:53:05.119><c> we</c>

00:53:05.270 --> 00:53:05.280 align:start position:0%
now we'd like to think about how can we
 

00:53:05.280 --> 00:53:07.510 align:start position:0%
now we'd like to think about how can we
summarize<00:53:05.760><c> these</c><00:53:06.000><c> probabilities</c><00:53:07.119><c> into</c><00:53:07.359><c> a</c>

00:53:07.510 --> 00:53:07.520 align:start position:0%
summarize these probabilities into a
 

00:53:07.520 --> 00:53:09.430 align:start position:0%
summarize these probabilities into a
single<00:53:07.839><c> number</c><00:53:08.319><c> that</c><00:53:08.480><c> measures</c><00:53:08.800><c> the</c><00:53:09.040><c> quality</c>

00:53:09.430 --> 00:53:09.440 align:start position:0%
single number that measures the quality
 

00:53:09.440 --> 00:53:11.670 align:start position:0%
single number that measures the quality
of<00:53:09.599><c> this</c><00:53:09.760><c> model</c>

00:53:11.670 --> 00:53:11.680 align:start position:0%
of this model
 

00:53:11.680 --> 00:53:13.190 align:start position:0%
of this model
now<00:53:11.920><c> when</c><00:53:12.079><c> you</c><00:53:12.160><c> look</c><00:53:12.319><c> at</c><00:53:12.400><c> the</c><00:53:12.480><c> literature</c><00:53:12.960><c> into</c>

00:53:13.190 --> 00:53:13.200 align:start position:0%
now when you look at the literature into
 

00:53:13.200 --> 00:53:15.109 align:start position:0%
now when you look at the literature into
maximum<00:53:13.520><c> likelihood</c><00:53:13.920><c> estimation</c><00:53:14.800><c> and</c>

00:53:15.109 --> 00:53:15.119 align:start position:0%
maximum likelihood estimation and
 

00:53:15.119 --> 00:53:17.190 align:start position:0%
maximum likelihood estimation and
statistical<00:53:15.680><c> modeling</c><00:53:16.079><c> and</c><00:53:16.160><c> so</c><00:53:16.400><c> on</c>

00:53:17.190 --> 00:53:17.200 align:start position:0%
statistical modeling and so on
 

00:53:17.200 --> 00:53:18.710 align:start position:0%
statistical modeling and so on
you'll<00:53:17.440><c> see</c><00:53:17.599><c> that</c><00:53:17.760><c> what's</c><00:53:18.000><c> typically</c><00:53:18.480><c> used</c>

00:53:18.710 --> 00:53:18.720 align:start position:0%
you'll see that what's typically used
 

00:53:18.720 --> 00:53:21.349 align:start position:0%
you'll see that what's typically used
here<00:53:19.280><c> is</c><00:53:19.599><c> something</c><00:53:19.839><c> called</c><00:53:20.000><c> the</c><00:53:20.160><c> likelihood</c>

00:53:21.349 --> 00:53:21.359 align:start position:0%
here is something called the likelihood
 

00:53:21.359 --> 00:53:23.589 align:start position:0%
here is something called the likelihood
and<00:53:21.520><c> the</c><00:53:21.680><c> likelihood</c><00:53:22.319><c> is</c><00:53:22.480><c> the</c><00:53:22.720><c> product</c><00:53:23.280><c> of</c><00:53:23.520><c> all</c>

00:53:23.589 --> 00:53:23.599 align:start position:0%
and the likelihood is the product of all
 

00:53:23.599 --> 00:53:25.750 align:start position:0%
and the likelihood is the product of all
of<00:53:23.680><c> these</c><00:53:23.839><c> probabilities</c>

00:53:25.750 --> 00:53:25.760 align:start position:0%
of these probabilities
 

00:53:25.760 --> 00:53:27.270 align:start position:0%
of these probabilities
and<00:53:26.160><c> so</c><00:53:26.319><c> the</c><00:53:26.480><c> product</c><00:53:26.800><c> of</c><00:53:26.960><c> all</c><00:53:27.119><c> these</c>

00:53:27.270 --> 00:53:27.280 align:start position:0%
and so the product of all these
 

00:53:27.280 --> 00:53:29.430 align:start position:0%
and so the product of all these
probabilities<00:53:28.079><c> is</c><00:53:28.160><c> the</c><00:53:28.319><c> likelihood</c><00:53:29.200><c> and</c><00:53:29.359><c> it's</c>

00:53:29.430 --> 00:53:29.440 align:start position:0%
probabilities is the likelihood and it's
 

00:53:29.440 --> 00:53:31.829 align:start position:0%
probabilities is the likelihood and it's
really<00:53:29.680><c> telling</c><00:53:30.000><c> us</c><00:53:30.160><c> about</c><00:53:30.960><c> the</c><00:53:31.200><c> probability</c>

00:53:31.829 --> 00:53:31.839 align:start position:0%
really telling us about the probability
 

00:53:31.839 --> 00:53:34.950 align:start position:0%
really telling us about the probability
of<00:53:31.920><c> the</c><00:53:32.079><c> entire</c><00:53:32.400><c> data</c><00:53:32.720><c> set</c><00:53:33.440><c> assigned</c><00:53:34.480><c> uh</c>

00:53:34.950 --> 00:53:34.960 align:start position:0%
of the entire data set assigned uh
 

00:53:34.960 --> 00:53:37.589 align:start position:0%
of the entire data set assigned uh
assigned<00:53:35.599><c> by</c><00:53:35.920><c> the</c><00:53:36.079><c> model</c><00:53:36.400><c> that</c><00:53:36.559><c> we've</c><00:53:36.800><c> trained</c>

00:53:37.589 --> 00:53:37.599 align:start position:0%
assigned by the model that we've trained
 

00:53:37.599 --> 00:53:39.349 align:start position:0%
assigned by the model that we've trained
and<00:53:37.680><c> that</c><00:53:37.839><c> is</c><00:53:37.920><c> a</c><00:53:38.000><c> measure</c><00:53:38.319><c> of</c><00:53:38.400><c> quality</c>

00:53:39.349 --> 00:53:39.359 align:start position:0%
and that is a measure of quality
 

00:53:39.359 --> 00:53:41.190 align:start position:0%
and that is a measure of quality
so<00:53:39.680><c> the</c><00:53:39.839><c> product</c><00:53:40.240><c> of</c><00:53:40.319><c> these</c>

00:53:41.190 --> 00:53:41.200 align:start position:0%
so the product of these
 

00:53:41.200 --> 00:53:43.190 align:start position:0%
so the product of these
should<00:53:41.359><c> be</c><00:53:41.520><c> as</c><00:53:41.680><c> high</c><00:53:41.920><c> as</c><00:53:42.079><c> possible</c>

00:53:43.190 --> 00:53:43.200 align:start position:0%
should be as high as possible
 

00:53:43.200 --> 00:53:44.630 align:start position:0%
should be as high as possible
when<00:53:43.359><c> you</c><00:53:43.520><c> are</c><00:53:43.680><c> training</c><00:53:43.920><c> the</c><00:53:44.079><c> model</c><00:53:44.400><c> and</c><00:53:44.480><c> when</c>

00:53:44.630 --> 00:53:44.640 align:start position:0%
when you are training the model and when
 

00:53:44.640 --> 00:53:46.549 align:start position:0%
when you are training the model and when
you<00:53:44.720><c> have</c><00:53:44.800><c> a</c><00:53:44.960><c> good</c><00:53:45.200><c> model</c><00:53:45.839><c> your</c><00:53:46.000><c> pro</c><00:53:46.319><c> your</c>

00:53:46.549 --> 00:53:46.559 align:start position:0%
you have a good model your pro your
 

00:53:46.559 --> 00:53:47.750 align:start position:0%
you have a good model your pro your
product<00:53:46.800><c> of</c><00:53:46.880><c> these</c><00:53:47.040><c> probabilities</c><00:53:47.440><c> should</c><00:53:47.599><c> be</c>

00:53:47.750 --> 00:53:47.760 align:start position:0%
product of these probabilities should be
 

00:53:47.760 --> 00:53:49.349 align:start position:0%
product of these probabilities should be
very<00:53:48.000><c> high</c>

00:53:49.349 --> 00:53:49.359 align:start position:0%
very high
 

00:53:49.359 --> 00:53:50.309 align:start position:0%
very high
um

00:53:50.309 --> 00:53:50.319 align:start position:0%
um
 

00:53:50.319 --> 00:53:51.510 align:start position:0%
um
now<00:53:50.559><c> because</c><00:53:50.800><c> the</c><00:53:50.960><c> product</c><00:53:51.280><c> of</c><00:53:51.359><c> these</c>

00:53:51.510 --> 00:53:51.520 align:start position:0%
now because the product of these
 

00:53:51.520 --> 00:53:53.430 align:start position:0%
now because the product of these
probabilities<00:53:52.240><c> is</c><00:53:52.319><c> an</c><00:53:52.559><c> unwieldy</c><00:53:53.119><c> thing</c><00:53:53.359><c> to</c>

00:53:53.430 --> 00:53:53.440 align:start position:0%
probabilities is an unwieldy thing to
 

00:53:53.440 --> 00:53:55.030 align:start position:0%
probabilities is an unwieldy thing to
work<00:53:53.680><c> with</c><00:53:54.240><c> you</c><00:53:54.319><c> can</c><00:53:54.400><c> see</c><00:53:54.559><c> that</c><00:53:54.720><c> all</c><00:53:54.800><c> of</c><00:53:54.880><c> them</c>

00:53:55.030 --> 00:53:55.040 align:start position:0%
work with you can see that all of them
 

00:53:55.040 --> 00:53:56.950 align:start position:0%
work with you can see that all of them
are<00:53:55.119><c> between</c><00:53:55.359><c> zero</c><00:53:55.599><c> and</c><00:53:55.680><c> one</c><00:53:56.240><c> so</c><00:53:56.400><c> your</c><00:53:56.640><c> product</c>

00:53:56.950 --> 00:53:56.960 align:start position:0%
are between zero and one so your product
 

00:53:56.960 --> 00:53:58.390 align:start position:0%
are between zero and one so your product
of<00:53:57.040><c> these</c><00:53:57.200><c> probabilities</c><00:53:57.760><c> will</c><00:53:57.920><c> be</c><00:53:58.079><c> a</c><00:53:58.160><c> very</c>

00:53:58.390 --> 00:53:58.400 align:start position:0%
of these probabilities will be a very
 

00:53:58.400 --> 00:54:00.069 align:start position:0%
of these probabilities will be a very
tiny<00:53:58.720><c> number</c>

00:54:00.069 --> 00:54:00.079 align:start position:0%
tiny number
 

00:54:00.079 --> 00:54:00.870 align:start position:0%
tiny number
um

00:54:00.870 --> 00:54:00.880 align:start position:0%
um
 

00:54:00.880 --> 00:54:01.750 align:start position:0%
um
so

00:54:01.750 --> 00:54:01.760 align:start position:0%
so
 

00:54:01.760 --> 00:54:03.270 align:start position:0%
so
for<00:54:01.920><c> convenience</c><00:54:02.480><c> what</c><00:54:02.640><c> people</c><00:54:02.880><c> work</c><00:54:03.040><c> with</c>

00:54:03.270 --> 00:54:03.280 align:start position:0%
for convenience what people work with
 

00:54:03.280 --> 00:54:04.950 align:start position:0%
for convenience what people work with
usually<00:54:03.599><c> is</c><00:54:03.680><c> not</c><00:54:03.920><c> the</c><00:54:04.079><c> likelihood</c><00:54:04.720><c> but</c><00:54:04.880><c> they</c>

00:54:04.950 --> 00:54:04.960 align:start position:0%
usually is not the likelihood but they
 

00:54:04.960 --> 00:54:06.069 align:start position:0%
usually is not the likelihood but they
work<00:54:05.119><c> with</c><00:54:05.280><c> what's</c><00:54:05.520><c> called</c><00:54:05.680><c> the</c><00:54:05.839><c> log</c>

00:54:06.069 --> 00:54:06.079 align:start position:0%
work with what's called the log
 

00:54:06.079 --> 00:54:07.829 align:start position:0%
work with what's called the log
likelihood

00:54:07.829 --> 00:54:07.839 align:start position:0%
likelihood
 

00:54:07.839 --> 00:54:08.870 align:start position:0%
likelihood
so

00:54:08.870 --> 00:54:08.880 align:start position:0%
so
 

00:54:08.880 --> 00:54:10.790 align:start position:0%
so
the<00:54:09.119><c> product</c><00:54:09.359><c> of</c><00:54:09.440><c> these</c><00:54:09.599><c> is</c><00:54:09.760><c> the</c><00:54:09.839><c> likelihood</c>

00:54:10.790 --> 00:54:10.800 align:start position:0%
the product of these is the likelihood
 

00:54:10.800 --> 00:54:12.710 align:start position:0%
the product of these is the likelihood
to<00:54:10.960><c> get</c><00:54:11.119><c> the</c><00:54:11.200><c> log</c><00:54:11.520><c> likelihood</c><00:54:12.240><c> we</c><00:54:12.480><c> just</c><00:54:12.640><c> have</c>

00:54:12.710 --> 00:54:12.720 align:start position:0%
to get the log likelihood we just have
 

00:54:12.720 --> 00:54:14.950 align:start position:0%
to get the log likelihood we just have
to<00:54:12.800><c> take</c><00:54:13.040><c> the</c><00:54:13.119><c> log</c><00:54:13.440><c> of</c><00:54:13.520><c> the</c><00:54:13.599><c> probability</c>

00:54:14.950 --> 00:54:14.960 align:start position:0%
to take the log of the probability
 

00:54:14.960 --> 00:54:17.109 align:start position:0%
to take the log of the probability
and<00:54:15.119><c> so</c><00:54:15.359><c> the</c><00:54:15.440><c> log</c><00:54:15.680><c> of</c><00:54:15.839><c> the</c><00:54:15.920><c> probability</c><00:54:16.559><c> here</c><00:54:16.960><c> i</c>

00:54:17.109 --> 00:54:17.119 align:start position:0%
and so the log of the probability here i
 

00:54:17.119 --> 00:54:19.670 align:start position:0%
and so the log of the probability here i
have<00:54:17.200><c> the</c><00:54:17.280><c> log</c><00:54:17.440><c> of</c><00:54:17.599><c> x</c><00:54:17.760><c> from</c><00:54:17.920><c> zero</c><00:54:18.160><c> to</c><00:54:18.319><c> one</c>

00:54:19.670 --> 00:54:19.680 align:start position:0%
have the log of x from zero to one
 

00:54:19.680 --> 00:54:21.910 align:start position:0%
have the log of x from zero to one
the<00:54:19.920><c> log</c><00:54:20.240><c> is</c><00:54:20.480><c> a</c><00:54:20.800><c> you</c><00:54:20.960><c> see</c><00:54:21.119><c> here</c><00:54:21.359><c> monotonic</c>

00:54:21.910 --> 00:54:21.920 align:start position:0%
the log is a you see here monotonic
 

00:54:21.920 --> 00:54:24.549 align:start position:0%
the log is a you see here monotonic
transformation<00:54:22.800><c> of</c><00:54:22.880><c> the</c><00:54:23.040><c> probability</c>

00:54:24.549 --> 00:54:24.559 align:start position:0%
transformation of the probability
 

00:54:24.559 --> 00:54:27.190 align:start position:0%
transformation of the probability
where<00:54:25.119><c> if</c><00:54:25.280><c> you</c><00:54:25.440><c> pass</c><00:54:25.760><c> in</c><00:54:26.400><c> one</c>

00:54:27.190 --> 00:54:27.200 align:start position:0%
where if you pass in one
 

00:54:27.200 --> 00:54:28.710 align:start position:0%
where if you pass in one
you<00:54:27.359><c> get</c><00:54:27.760><c> zero</c>

00:54:28.710 --> 00:54:28.720 align:start position:0%
you get zero
 

00:54:28.720 --> 00:54:30.630 align:start position:0%
you get zero
so<00:54:28.960><c> probability</c><00:54:29.359><c> one</c><00:54:29.760><c> gets</c><00:54:30.000><c> your</c><00:54:30.319><c> log</c>

00:54:30.630 --> 00:54:30.640 align:start position:0%
so probability one gets your log
 

00:54:30.640 --> 00:54:32.150 align:start position:0%
so probability one gets your log
probability<00:54:31.200><c> of</c><00:54:31.280><c> zero</c>

00:54:32.150 --> 00:54:32.160 align:start position:0%
probability of zero
 

00:54:32.160 --> 00:54:33.589 align:start position:0%
probability of zero
and<00:54:32.240><c> then</c><00:54:32.480><c> as</c><00:54:32.640><c> you</c><00:54:32.720><c> go</c><00:54:32.960><c> lower</c><00:54:33.200><c> and</c><00:54:33.280><c> lower</c>

00:54:33.589 --> 00:54:33.599 align:start position:0%
and then as you go lower and lower
 

00:54:33.599 --> 00:54:35.670 align:start position:0%
and then as you go lower and lower
probability<00:54:34.480><c> the</c><00:54:34.720><c> log</c><00:54:34.960><c> will</c><00:54:35.200><c> grow</c><00:54:35.440><c> more</c><00:54:35.599><c> and</c>

00:54:35.670 --> 00:54:35.680 align:start position:0%
probability the log will grow more and
 

00:54:35.680 --> 00:54:37.349 align:start position:0%
probability the log will grow more and
more<00:54:35.920><c> negative</c><00:54:36.480><c> until</c><00:54:36.880><c> all</c><00:54:37.040><c> the</c><00:54:37.119><c> way</c><00:54:37.280><c> to</c>

00:54:37.349 --> 00:54:37.359 align:start position:0%
more negative until all the way to
 

00:54:37.359 --> 00:54:41.829 align:start position:0%
more negative until all the way to
negative<00:54:37.760><c> infinity</c><00:54:38.480><c> at</c><00:54:38.880><c> zero</c>

00:54:41.829 --> 00:54:41.839 align:start position:0%
 
 

00:54:41.839 --> 00:54:43.990 align:start position:0%
 
so<00:54:42.000><c> here</c><00:54:42.640><c> we</c><00:54:42.799><c> have</c><00:54:42.960><c> a</c><00:54:43.040><c> log</c><00:54:43.280><c> prob</c><00:54:43.680><c> which</c><00:54:43.920><c> is</c>

00:54:43.990 --> 00:54:44.000 align:start position:0%
so here we have a log prob which is
 

00:54:44.000 --> 00:54:46.710 align:start position:0%
so here we have a log prob which is
really<00:54:44.240><c> just</c><00:54:44.480><c> a</c><00:54:44.559><c> torch.log</c><00:54:45.520><c> of</c><00:54:45.760><c> probability</c>

00:54:46.710 --> 00:54:46.720 align:start position:0%
really just a torch.log of probability
 

00:54:46.720 --> 00:54:48.470 align:start position:0%
really just a torch.log of probability
let's<00:54:46.960><c> print</c><00:54:47.200><c> it</c><00:54:47.359><c> out</c><00:54:47.440><c> to</c><00:54:47.520><c> get</c><00:54:47.599><c> a</c><00:54:47.680><c> sense</c><00:54:48.000><c> of</c>

00:54:48.470 --> 00:54:48.480 align:start position:0%
let's print it out to get a sense of
 

00:54:48.480 --> 00:54:49.910 align:start position:0%
let's print it out to get a sense of
what<00:54:48.640><c> that</c><00:54:48.880><c> looks</c><00:54:49.119><c> like</c>

00:54:49.910 --> 00:54:49.920 align:start position:0%
what that looks like
 

00:54:49.920 --> 00:54:51.589 align:start position:0%
what that looks like
log<00:54:50.240><c> prob</c>

00:54:51.589 --> 00:54:51.599 align:start position:0%
log prob
 

00:54:51.599 --> 00:54:54.710 align:start position:0%
log prob
also<00:54:52.000><c> 0.4</c><00:54:52.480><c> f</c>

00:54:54.710 --> 00:54:54.720 align:start position:0%
 
 

00:54:54.720 --> 00:54:56.549 align:start position:0%
 
okay

00:54:56.549 --> 00:54:56.559 align:start position:0%
okay
 

00:54:56.559 --> 00:54:58.549 align:start position:0%
okay
so<00:54:57.040><c> as</c><00:54:57.200><c> you</c><00:54:57.280><c> can</c><00:54:57.440><c> see</c><00:54:57.680><c> when</c><00:54:57.839><c> we</c><00:54:58.000><c> plug</c><00:54:58.240><c> in</c>

00:54:58.549 --> 00:54:58.559 align:start position:0%
so as you can see when we plug in
 

00:54:58.559 --> 00:55:00.630 align:start position:0%
so as you can see when we plug in
numbers<00:54:58.880><c> that</c><00:54:59.040><c> are</c><00:54:59.359><c> very</c><00:54:59.599><c> close</c><00:55:00.240><c> some</c><00:55:00.400><c> of</c><00:55:00.559><c> our</c>

00:55:00.630 --> 00:55:00.640 align:start position:0%
numbers that are very close some of our
 

00:55:00.640 --> 00:55:02.309 align:start position:0%
numbers that are very close some of our
higher<00:55:00.880><c> numbers</c><00:55:01.280><c> we</c><00:55:01.440><c> get</c><00:55:01.599><c> closer</c><00:55:01.920><c> and</c><00:55:02.000><c> closer</c>

00:55:02.309 --> 00:55:02.319 align:start position:0%
higher numbers we get closer and closer
 

00:55:02.319 --> 00:55:03.349 align:start position:0%
higher numbers we get closer and closer
to<00:55:02.480><c> zero</c>

00:55:03.349 --> 00:55:03.359 align:start position:0%
to zero
 

00:55:03.359 --> 00:55:04.950 align:start position:0%
to zero
and<00:55:03.440><c> then</c><00:55:03.599><c> if</c><00:55:03.680><c> we</c><00:55:03.839><c> plug</c><00:55:04.079><c> in</c><00:55:04.240><c> very</c><00:55:04.559><c> bad</c>

00:55:04.950 --> 00:55:04.960 align:start position:0%
and then if we plug in very bad
 

00:55:04.960 --> 00:55:06.549 align:start position:0%
and then if we plug in very bad
probabilities<00:55:05.680><c> we</c><00:55:05.760><c> get</c><00:55:06.000><c> more</c><00:55:06.240><c> and</c><00:55:06.319><c> more</c>

00:55:06.549 --> 00:55:06.559 align:start position:0%
probabilities we get more and more
 

00:55:06.559 --> 00:55:09.510 align:start position:0%
probabilities we get more and more
negative<00:55:06.960><c> number</c><00:55:07.440><c> that's</c><00:55:07.760><c> bad</c>

00:55:09.510 --> 00:55:09.520 align:start position:0%
negative number that's bad
 

00:55:09.520 --> 00:55:10.789 align:start position:0%
negative number that's bad
so

00:55:10.789 --> 00:55:10.799 align:start position:0%
so
 

00:55:10.799 --> 00:55:12.390 align:start position:0%
so
and<00:55:10.960><c> the</c><00:55:11.200><c> reason</c><00:55:11.440><c> we</c><00:55:11.520><c> work</c><00:55:11.760><c> with</c><00:55:11.920><c> this</c><00:55:12.079><c> is</c><00:55:12.240><c> for</c>

00:55:12.390 --> 00:55:12.400 align:start position:0%
and the reason we work with this is for
 

00:55:12.400 --> 00:55:15.190 align:start position:0%
and the reason we work with this is for
a<00:55:13.040><c> large</c><00:55:13.280><c> extent</c><00:55:13.680><c> convenience</c><00:55:14.400><c> right</c>

00:55:15.190 --> 00:55:15.200 align:start position:0%
a large extent convenience right
 

00:55:15.200 --> 00:55:16.870 align:start position:0%
a large extent convenience right
because<00:55:15.599><c> we</c><00:55:15.760><c> have</c><00:55:15.920><c> mathematically</c><00:55:16.559><c> that</c><00:55:16.799><c> if</c>

00:55:16.870 --> 00:55:16.880 align:start position:0%
because we have mathematically that if
 

00:55:16.880 --> 00:55:18.870 align:start position:0%
because we have mathematically that if
you<00:55:16.960><c> have</c><00:55:17.119><c> some</c><00:55:17.359><c> product</c><00:55:17.760><c> a</c><00:55:17.920><c> times</c><00:55:18.160><c> b</c><00:55:18.319><c> times</c><00:55:18.559><c> c</c>

00:55:18.870 --> 00:55:18.880 align:start position:0%
you have some product a times b times c
 

00:55:18.880 --> 00:55:21.109 align:start position:0%
you have some product a times b times c
of<00:55:19.040><c> all</c><00:55:19.119><c> these</c><00:55:19.280><c> probabilities</c><00:55:20.240><c> right</c>

00:55:21.109 --> 00:55:21.119 align:start position:0%
of all these probabilities right
 

00:55:21.119 --> 00:55:23.670 align:start position:0%
of all these probabilities right
the<00:55:21.280><c> likelihood</c><00:55:22.079><c> is</c><00:55:22.559><c> the</c><00:55:22.799><c> product</c><00:55:23.359><c> of</c><00:55:23.599><c> all</c>

00:55:23.670 --> 00:55:23.680 align:start position:0%
the likelihood is the product of all
 

00:55:23.680 --> 00:55:25.349 align:start position:0%
the likelihood is the product of all
these<00:55:23.839><c> probabilities</c>

00:55:25.349 --> 00:55:25.359 align:start position:0%
these probabilities
 

00:55:25.359 --> 00:55:27.349 align:start position:0%
these probabilities
then<00:55:25.520><c> the</c><00:55:25.760><c> log</c>

00:55:27.349 --> 00:55:27.359 align:start position:0%
then the log
 

00:55:27.359 --> 00:55:28.390 align:start position:0%
then the log
of<00:55:27.520><c> these</c>

00:55:28.390 --> 00:55:28.400 align:start position:0%
of these
 

00:55:28.400 --> 00:55:30.789 align:start position:0%
of these
is<00:55:28.559><c> just</c><00:55:29.040><c> log</c><00:55:29.280><c> of</c><00:55:29.440><c> a</c><00:55:29.920><c> plus</c>

00:55:30.789 --> 00:55:30.799 align:start position:0%
is just log of a plus
 

00:55:30.799 --> 00:55:33.670 align:start position:0%
is just log of a plus
log<00:55:31.040><c> of</c><00:55:31.119><c> b</c>

00:55:33.670 --> 00:55:33.680 align:start position:0%
 
 

00:55:33.680 --> 00:55:36.150 align:start position:0%
 
plus<00:55:34.160><c> log</c><00:55:34.480><c> of</c><00:55:34.559><c> c</c><00:55:35.119><c> if</c><00:55:35.280><c> you</c><00:55:35.359><c> remember</c><00:55:35.680><c> your</c><00:55:35.839><c> logs</c>

00:55:36.150 --> 00:55:36.160 align:start position:0%
plus log of c if you remember your logs
 

00:55:36.160 --> 00:55:37.430 align:start position:0%
plus log of c if you remember your logs
from<00:55:36.480><c> your</c>

00:55:37.430 --> 00:55:37.440 align:start position:0%
from your
 

00:55:37.440 --> 00:55:39.670 align:start position:0%
from your
high<00:55:37.599><c> school</c><00:55:38.000><c> or</c><00:55:38.160><c> undergrad</c><00:55:38.559><c> and</c><00:55:38.640><c> so</c><00:55:38.799><c> on</c>

00:55:39.670 --> 00:55:39.680 align:start position:0%
high school or undergrad and so on
 

00:55:39.680 --> 00:55:41.430 align:start position:0%
high school or undergrad and so on
so<00:55:39.920><c> we</c><00:55:40.000><c> have</c><00:55:40.160><c> that</c><00:55:40.319><c> basically</c>

00:55:41.430 --> 00:55:41.440 align:start position:0%
so we have that basically
 

00:55:41.440 --> 00:55:42.470 align:start position:0%
so we have that basically
the<00:55:41.599><c> likelihood</c><00:55:42.000><c> of</c><00:55:42.079><c> the</c><00:55:42.160><c> product</c>

00:55:42.470 --> 00:55:42.480 align:start position:0%
the likelihood of the product
 

00:55:42.480 --> 00:55:44.630 align:start position:0%
the likelihood of the product
probabilities<00:55:43.200><c> the</c><00:55:43.359><c> log</c><00:55:43.599><c> likelihood</c><00:55:44.319><c> is</c><00:55:44.480><c> just</c>

00:55:44.630 --> 00:55:44.640 align:start position:0%
probabilities the log likelihood is just
 

00:55:44.640 --> 00:55:46.870 align:start position:0%
probabilities the log likelihood is just
the<00:55:44.880><c> sum</c><00:55:45.440><c> of</c><00:55:45.599><c> the</c><00:55:45.760><c> logs</c><00:55:46.160><c> of</c><00:55:46.240><c> the</c><00:55:46.400><c> individual</c>

00:55:46.870 --> 00:55:46.880 align:start position:0%
the sum of the logs of the individual
 

00:55:46.880 --> 00:55:48.789 align:start position:0%
the sum of the logs of the individual
probabilities

00:55:48.789 --> 00:55:48.799 align:start position:0%
probabilities
 

00:55:48.799 --> 00:55:49.990 align:start position:0%
probabilities
so

00:55:49.990 --> 00:55:50.000 align:start position:0%
so
 

00:55:50.000 --> 00:55:52.710 align:start position:0%
so
log<00:55:50.480><c> likelihood</c>

00:55:52.710 --> 00:55:52.720 align:start position:0%
log likelihood
 

00:55:52.720 --> 00:55:54.549 align:start position:0%
log likelihood
starts<00:55:52.960><c> at</c><00:55:53.119><c> zero</c>

00:55:54.549 --> 00:55:54.559 align:start position:0%
starts at zero
 

00:55:54.559 --> 00:55:57.109 align:start position:0%
starts at zero
and<00:55:54.720><c> then</c><00:55:55.119><c> log</c><00:55:55.359><c> likelihood</c><00:55:56.480><c> here</c><00:55:56.720><c> we</c><00:55:56.880><c> can</c><00:55:56.960><c> just</c>

00:55:57.109 --> 00:55:57.119 align:start position:0%
and then log likelihood here we can just
 

00:55:57.119 --> 00:56:00.309 align:start position:0%
and then log likelihood here we can just
accumulate<00:55:57.839><c> simply</c>

00:56:00.309 --> 00:56:00.319 align:start position:0%
 
 

00:56:00.319 --> 00:56:05.349 align:start position:0%
 
and<00:56:00.559><c> in</c><00:56:00.640><c> the</c><00:56:00.799><c> end</c><00:56:00.960><c> we</c><00:56:01.119><c> can</c><00:56:01.280><c> print</c><00:56:01.440><c> this</c>

00:56:05.349 --> 00:56:05.359 align:start position:0%
 
 

00:56:05.359 --> 00:56:09.510 align:start position:0%
 
print<00:56:05.680><c> the</c><00:56:05.839><c> log</c><00:56:06.079><c> likelihood</c>

00:56:09.510 --> 00:56:09.520 align:start position:0%
 
 

00:56:09.520 --> 00:56:11.670 align:start position:0%
 
f<00:56:09.760><c> strings</c>

00:56:11.670 --> 00:56:11.680 align:start position:0%
f strings
 

00:56:11.680 --> 00:56:13.829 align:start position:0%
f strings
maybe<00:56:11.920><c> you're</c><00:56:12.079><c> familiar</c><00:56:12.400><c> with</c><00:56:12.559><c> this</c>

00:56:13.829 --> 00:56:13.839 align:start position:0%
maybe you're familiar with this
 

00:56:13.839 --> 00:56:19.910 align:start position:0%
maybe you're familiar with this
so<00:56:14.000><c> log</c><00:56:14.160><c> likelihood</c><00:56:14.799><c> is</c><00:56:15.440><c> negative</c><00:56:15.839><c> 38.</c>

00:56:19.910 --> 00:56:19.920 align:start position:0%
 
 

00:56:19.920 --> 00:56:21.270 align:start position:0%
 
okay

00:56:21.270 --> 00:56:21.280 align:start position:0%
okay
 

00:56:21.280 --> 00:56:22.470 align:start position:0%
okay
now

00:56:22.470 --> 00:56:22.480 align:start position:0%
now
 

00:56:22.480 --> 00:56:25.190 align:start position:0%
now
we<00:56:22.640><c> actually</c><00:56:22.880><c> want</c><00:56:23.359><c> um</c>

00:56:25.190 --> 00:56:25.200 align:start position:0%
we actually want um
 

00:56:25.200 --> 00:56:27.829 align:start position:0%
we actually want um
so<00:56:25.520><c> how</c><00:56:25.760><c> high</c><00:56:26.000><c> can</c><00:56:26.240><c> log</c><00:56:26.480><c> likelihood</c><00:56:26.960><c> get</c><00:56:27.680><c> it</c>

00:56:27.829 --> 00:56:27.839 align:start position:0%
so how high can log likelihood get it
 

00:56:27.839 --> 00:56:30.309 align:start position:0%
so how high can log likelihood get it
can<00:56:28.079><c> go</c><00:56:28.720><c> to</c><00:56:28.960><c> zero</c><00:56:29.760><c> so</c><00:56:29.920><c> when</c><00:56:30.079><c> all</c><00:56:30.240><c> the</c>

00:56:30.309 --> 00:56:30.319 align:start position:0%
can go to zero so when all the
 

00:56:30.319 --> 00:56:31.910 align:start position:0%
can go to zero so when all the
probabilities<00:56:30.720><c> are</c><00:56:30.880><c> one</c><00:56:31.280><c> log</c><00:56:31.440><c> likelihood</c>

00:56:31.910 --> 00:56:31.920 align:start position:0%
probabilities are one log likelihood
 

00:56:31.920 --> 00:56:33.589 align:start position:0%
probabilities are one log likelihood
will<00:56:32.000><c> be</c><00:56:32.160><c> zero</c><00:56:32.799><c> and</c><00:56:32.880><c> then</c><00:56:33.040><c> when</c><00:56:33.280><c> all</c><00:56:33.440><c> the</c>

00:56:33.589 --> 00:56:33.599 align:start position:0%
will be zero and then when all the
 

00:56:33.599 --> 00:56:35.430 align:start position:0%
will be zero and then when all the
probabilities<00:56:34.240><c> are</c><00:56:34.400><c> lower</c><00:56:34.799><c> this</c><00:56:35.040><c> will</c><00:56:35.200><c> grow</c>

00:56:35.430 --> 00:56:35.440 align:start position:0%
probabilities are lower this will grow
 

00:56:35.440 --> 00:56:37.430 align:start position:0%
probabilities are lower this will grow
more<00:56:35.680><c> and</c><00:56:35.760><c> more</c><00:56:36.000><c> negative</c>

00:56:37.430 --> 00:56:37.440 align:start position:0%
more and more negative
 

00:56:37.440 --> 00:56:39.750 align:start position:0%
more and more negative
now<00:56:38.079><c> we</c><00:56:38.240><c> don't</c><00:56:38.400><c> actually</c><00:56:38.720><c> like</c><00:56:38.880><c> this</c><00:56:39.200><c> because</c>

00:56:39.750 --> 00:56:39.760 align:start position:0%
now we don't actually like this because
 

00:56:39.760 --> 00:56:41.829 align:start position:0%
now we don't actually like this because
what<00:56:39.920><c> we'd</c><00:56:40.160><c> like</c><00:56:40.319><c> is</c><00:56:40.480><c> a</c><00:56:40.640><c> loss</c><00:56:40.880><c> function</c><00:56:41.599><c> and</c><00:56:41.760><c> a</c>

00:56:41.829 --> 00:56:41.839 align:start position:0%
what we'd like is a loss function and a
 

00:56:41.839 --> 00:56:44.630 align:start position:0%
what we'd like is a loss function and a
loss<00:56:42.079><c> function</c><00:56:42.480><c> has</c><00:56:42.640><c> the</c><00:56:42.799><c> semantics</c><00:56:43.599><c> that</c><00:56:43.920><c> low</c>

00:56:44.630 --> 00:56:44.640 align:start position:0%
loss function has the semantics that low
 

00:56:44.640 --> 00:56:46.150 align:start position:0%
loss function has the semantics that low
is<00:56:45.280><c> good</c>

00:56:46.150 --> 00:56:46.160 align:start position:0%
is good
 

00:56:46.160 --> 00:56:47.430 align:start position:0%
is good
because<00:56:46.400><c> we're</c><00:56:46.559><c> trying</c><00:56:46.720><c> to</c><00:56:46.799><c> minimize</c><00:56:47.280><c> the</c>

00:56:47.430 --> 00:56:47.440 align:start position:0%
because we're trying to minimize the
 

00:56:47.440 --> 00:56:50.309 align:start position:0%
because we're trying to minimize the
loss<00:56:48.160><c> so</c><00:56:48.319><c> we</c><00:56:48.480><c> actually</c><00:56:48.799><c> need</c><00:56:48.960><c> to</c><00:56:49.200><c> invert</c><00:56:49.520><c> this</c>

00:56:50.309 --> 00:56:50.319 align:start position:0%
loss so we actually need to invert this
 

00:56:50.319 --> 00:56:51.750 align:start position:0%
loss so we actually need to invert this
and<00:56:50.559><c> that's</c><00:56:50.880><c> what</c><00:56:51.040><c> gives</c><00:56:51.280><c> us</c><00:56:51.440><c> something</c>

00:56:51.750 --> 00:56:51.760 align:start position:0%
and that's what gives us something
 

00:56:51.760 --> 00:56:55.910 align:start position:0%
and that's what gives us something
called<00:56:52.240><c> the</c><00:56:52.400><c> negative</c><00:56:52.720><c> log</c><00:56:52.960><c> likelihood</c>

00:56:55.910 --> 00:56:55.920 align:start position:0%
 
 

00:56:55.920 --> 00:56:58.549 align:start position:0%
 
negative<00:56:56.240><c> log</c><00:56:56.480><c> likelihood</c><00:56:57.040><c> is</c><00:56:57.520><c> just</c><00:56:57.839><c> negative</c>

00:56:58.549 --> 00:56:58.559 align:start position:0%
negative log likelihood is just negative
 

00:56:58.559 --> 00:57:03.750 align:start position:0%
negative log likelihood is just negative
of<00:56:58.720><c> the</c><00:56:58.799><c> log</c><00:56:59.040><c> likelihood</c>

00:57:03.750 --> 00:57:03.760 align:start position:0%
 
 

00:57:03.760 --> 00:57:05.030 align:start position:0%
 
these<00:57:04.000><c> are</c><00:57:04.160><c> f</c><00:57:04.319><c> strings</c><00:57:04.559><c> by</c><00:57:04.720><c> the</c><00:57:04.720><c> way</c><00:57:04.880><c> if</c><00:57:04.960><c> you'd</c>

00:57:05.030 --> 00:57:05.040 align:start position:0%
these are f strings by the way if you'd
 

00:57:05.040 --> 00:57:06.390 align:start position:0%
these are f strings by the way if you'd
like<00:57:05.200><c> to</c><00:57:05.280><c> look</c><00:57:05.440><c> this</c><00:57:05.680><c> up</c>

00:57:06.390 --> 00:57:06.400 align:start position:0%
like to look this up
 

00:57:06.400 --> 00:57:09.270 align:start position:0%
like to look this up
negative<00:57:06.720><c> log</c><00:57:06.880><c> likelihood</c><00:57:07.359><c> equals</c>

00:57:09.270 --> 00:57:09.280 align:start position:0%
negative log likelihood equals
 

00:57:09.280 --> 00:57:10.870 align:start position:0%
negative log likelihood equals
so<00:57:09.440><c> negative</c><00:57:09.760><c> log</c><00:57:10.000><c> likelihood</c><00:57:10.400><c> now</c><00:57:10.559><c> is</c><00:57:10.640><c> just</c>

00:57:10.870 --> 00:57:10.880 align:start position:0%
so negative log likelihood now is just
 

00:57:10.880 --> 00:57:12.870 align:start position:0%
so negative log likelihood now is just
negative<00:57:11.200><c> of</c><00:57:11.359><c> it</c><00:57:12.000><c> and</c><00:57:12.160><c> so</c><00:57:12.319><c> the</c><00:57:12.400><c> negative</c><00:57:12.720><c> log</c>

00:57:12.870 --> 00:57:12.880 align:start position:0%
negative of it and so the negative log
 

00:57:12.880 --> 00:57:15.589 align:start position:0%
negative of it and so the negative log
block<00:57:13.040><c> load</c><00:57:13.440><c> is</c><00:57:13.680><c> a</c><00:57:13.839><c> very</c><00:57:14.079><c> nice</c><00:57:14.480><c> loss</c><00:57:14.720><c> function</c>

00:57:15.589 --> 00:57:15.599 align:start position:0%
block load is a very nice loss function
 

00:57:15.599 --> 00:57:17.589 align:start position:0%
block load is a very nice loss function
because<00:57:16.480><c> um</c>

00:57:17.589 --> 00:57:17.599 align:start position:0%
because um
 

00:57:17.599 --> 00:57:19.670 align:start position:0%
because um
the<00:57:17.760><c> lowest</c><00:57:18.160><c> it</c><00:57:18.319><c> can</c><00:57:18.400><c> get</c><00:57:18.640><c> is</c><00:57:18.799><c> zero</c>

00:57:19.670 --> 00:57:19.680 align:start position:0%
the lowest it can get is zero
 

00:57:19.680 --> 00:57:22.150 align:start position:0%
the lowest it can get is zero
and<00:57:19.920><c> the</c><00:57:20.079><c> higher</c><00:57:20.480><c> it</c><00:57:20.640><c> is</c><00:57:20.960><c> the</c><00:57:21.200><c> worse</c><00:57:21.520><c> off</c><00:57:22.000><c> the</c>

00:57:22.150 --> 00:57:22.160 align:start position:0%
and the higher it is the worse off the
 

00:57:22.160 --> 00:57:24.630 align:start position:0%
and the higher it is the worse off the
predictions<00:57:22.880><c> are</c><00:57:23.119><c> that</c><00:57:23.280><c> you're</c><00:57:23.440><c> making</c>

00:57:24.630 --> 00:57:24.640 align:start position:0%
predictions are that you're making
 

00:57:24.640 --> 00:57:25.990 align:start position:0%
predictions are that you're making
and<00:57:24.720><c> then</c><00:57:24.880><c> one</c><00:57:25.040><c> more</c><00:57:25.200><c> modification</c><00:57:25.760><c> to</c><00:57:25.839><c> this</c>

00:57:25.990 --> 00:57:26.000 align:start position:0%
and then one more modification to this
 

00:57:26.000 --> 00:57:27.910 align:start position:0%
and then one more modification to this
that<00:57:26.160><c> sometimes</c><00:57:26.480><c> people</c><00:57:26.720><c> do</c><00:57:27.359><c> is</c><00:57:27.520><c> that</c><00:57:27.760><c> for</c>

00:57:27.910 --> 00:57:27.920 align:start position:0%
that sometimes people do is that for
 

00:57:27.920 --> 00:57:29.829 align:start position:0%
that sometimes people do is that for
convenience<00:57:28.880><c> uh</c><00:57:29.040><c> they</c><00:57:29.200><c> actually</c><00:57:29.520><c> like</c><00:57:29.680><c> to</c>

00:57:29.829 --> 00:57:29.839 align:start position:0%
convenience uh they actually like to
 

00:57:29.839 --> 00:57:32.150 align:start position:0%
convenience uh they actually like to
normalize<00:57:30.640><c> by</c><00:57:31.200><c> they</c><00:57:31.359><c> like</c><00:57:31.520><c> to</c><00:57:31.599><c> make</c><00:57:31.839><c> it</c><00:57:31.920><c> an</c>

00:57:32.150 --> 00:57:32.160 align:start position:0%
normalize by they like to make it an
 

00:57:32.160 --> 00:57:34.309 align:start position:0%
normalize by they like to make it an
average<00:57:32.559><c> instead</c><00:57:32.880><c> of</c><00:57:32.960><c> a</c><00:57:33.200><c> sum</c>

00:57:34.309 --> 00:57:34.319 align:start position:0%
average instead of a sum
 

00:57:34.319 --> 00:57:37.030 align:start position:0%
average instead of a sum
and<00:57:34.559><c> so</c><00:57:35.200><c> uh</c><00:57:35.520><c> here</c>

00:57:37.030 --> 00:57:37.040 align:start position:0%
and so uh here
 

00:57:37.040 --> 00:57:39.270 align:start position:0%
and so uh here
let's<00:57:37.280><c> just</c><00:57:37.440><c> keep</c><00:57:37.680><c> some</c><00:57:37.920><c> counts</c><00:57:38.240><c> as</c><00:57:38.400><c> well</c>

00:57:39.270 --> 00:57:39.280 align:start position:0%
let's just keep some counts as well
 

00:57:39.280 --> 00:57:41.430 align:start position:0%
let's just keep some counts as well
so<00:57:39.599><c> n</c><00:57:40.079><c> plus</c><00:57:40.319><c> equals</c><00:57:40.640><c> one</c>

00:57:41.430 --> 00:57:41.440 align:start position:0%
so n plus equals one
 

00:57:41.440 --> 00:57:42.789 align:start position:0%
so n plus equals one
starts<00:57:41.760><c> at</c><00:57:41.920><c> zero</c>

00:57:42.789 --> 00:57:42.799 align:start position:0%
starts at zero
 

00:57:42.799 --> 00:57:43.990 align:start position:0%
starts at zero
and<00:57:42.880><c> then</c><00:57:43.119><c> here</c>

00:57:43.990 --> 00:57:44.000 align:start position:0%
and then here
 

00:57:44.000 --> 00:57:46.150 align:start position:0%
and then here
um<00:57:44.559><c> we</c><00:57:44.720><c> can</c><00:57:44.799><c> have</c><00:57:44.960><c> sort</c><00:57:45.119><c> of</c><00:57:45.200><c> like</c><00:57:45.359><c> a</c><00:57:45.440><c> normalized</c>

00:57:46.150 --> 00:57:46.160 align:start position:0%
um we can have sort of like a normalized
 

00:57:46.160 --> 00:57:47.750 align:start position:0%
um we can have sort of like a normalized
log<00:57:46.400><c> likelihood</c>

00:57:47.750 --> 00:57:47.760 align:start position:0%
log likelihood
 

00:57:47.760 --> 00:57:50.390 align:start position:0%
log likelihood
um

00:57:50.390 --> 00:57:50.400 align:start position:0%
 
 

00:57:50.400 --> 00:57:52.390 align:start position:0%
 
if<00:57:50.559><c> we</c><00:57:50.640><c> just</c><00:57:50.799><c> normalize</c><00:57:51.200><c> it</c><00:57:51.280><c> by</c><00:57:51.440><c> the</c><00:57:51.599><c> count</c>

00:57:52.390 --> 00:57:52.400 align:start position:0%
if we just normalize it by the count
 

00:57:52.400 --> 00:57:54.630 align:start position:0%
if we just normalize it by the count
then<00:57:52.640><c> we</c><00:57:52.720><c> will</c><00:57:52.880><c> sort</c><00:57:53.040><c> of</c><00:57:53.119><c> get</c><00:57:53.280><c> the</c><00:57:53.520><c> average</c>

00:57:54.630 --> 00:57:54.640 align:start position:0%
then we will sort of get the average
 

00:57:54.640 --> 00:57:56.870 align:start position:0%
then we will sort of get the average
log<00:57:54.880><c> likelihood</c><00:57:55.680><c> so</c><00:57:55.839><c> this</c><00:57:56.000><c> would</c><00:57:56.160><c> be</c>

00:57:56.870 --> 00:57:56.880 align:start position:0%
log likelihood so this would be
 

00:57:56.880 --> 00:57:59.190 align:start position:0%
log likelihood so this would be
usually<00:57:57.280><c> our</c><00:57:57.440><c> loss</c><00:57:57.680><c> function</c><00:57:58.000><c> here</c><00:57:58.720><c> is</c><00:57:58.960><c> what</c>

00:57:59.190 --> 00:57:59.200 align:start position:0%
usually our loss function here is what
 

00:57:59.200 --> 00:58:02.069 align:start position:0%
usually our loss function here is what
this<00:57:59.359><c> we</c><00:57:59.520><c> would</c><00:57:59.760><c> this</c><00:57:59.920><c> is</c><00:58:00.000><c> what</c><00:58:00.160><c> we</c><00:58:00.240><c> would</c><00:58:00.480><c> use</c>

00:58:02.069 --> 00:58:02.079 align:start position:0%
this we would this is what we would use
 

00:58:02.079 --> 00:58:03.910 align:start position:0%
this we would this is what we would use
uh<00:58:02.240><c> so</c><00:58:02.480><c> our</c><00:58:02.640><c> loss</c><00:58:02.880><c> function</c><00:58:03.200><c> for</c><00:58:03.359><c> the</c><00:58:03.599><c> training</c>

00:58:03.910 --> 00:58:03.920 align:start position:0%
uh so our loss function for the training
 

00:58:03.920 --> 00:58:06.549 align:start position:0%
uh so our loss function for the training
set<00:58:04.160><c> assigned</c><00:58:04.480><c> by</c><00:58:04.640><c> the</c><00:58:04.720><c> model</c><00:58:05.359><c> is</c><00:58:05.520><c> 2.4</c><00:58:06.319><c> that's</c>

00:58:06.549 --> 00:58:06.559 align:start position:0%
set assigned by the model is 2.4 that's
 

00:58:06.559 --> 00:58:08.470 align:start position:0%
set assigned by the model is 2.4 that's
the<00:58:06.720><c> quality</c><00:58:07.200><c> of</c><00:58:07.280><c> this</c><00:58:07.520><c> model</c>

00:58:08.470 --> 00:58:08.480 align:start position:0%
the quality of this model
 

00:58:08.480 --> 00:58:10.390 align:start position:0%
the quality of this model
and<00:58:08.640><c> the</c><00:58:08.799><c> lower</c><00:58:09.119><c> it</c><00:58:09.280><c> is</c><00:58:09.599><c> the</c><00:58:09.760><c> better</c><00:58:10.000><c> off</c><00:58:10.240><c> we</c>

00:58:10.390 --> 00:58:10.400 align:start position:0%
and the lower it is the better off we
 

00:58:10.400 --> 00:58:11.990 align:start position:0%
and the lower it is the better off we
are<00:58:10.640><c> and</c><00:58:10.799><c> the</c><00:58:10.880><c> higher</c><00:58:11.119><c> it</c><00:58:11.280><c> is</c><00:58:11.440><c> the</c><00:58:11.520><c> worse</c><00:58:11.839><c> off</c>

00:58:11.990 --> 00:58:12.000 align:start position:0%
are and the higher it is the worse off
 

00:58:12.000 --> 00:58:13.349 align:start position:0%
are and the higher it is the worse off
we<00:58:12.160><c> are</c>

00:58:13.349 --> 00:58:13.359 align:start position:0%
we are
 

00:58:13.359 --> 00:58:14.230 align:start position:0%
we are
and

00:58:14.230 --> 00:58:14.240 align:start position:0%
and
 

00:58:14.240 --> 00:58:17.030 align:start position:0%
and
the<00:58:14.480><c> job</c><00:58:14.799><c> of</c><00:58:15.040><c> our</c><00:58:15.680><c> you</c><00:58:15.760><c> know</c><00:58:16.079><c> training</c><00:58:16.720><c> is</c><00:58:16.880><c> to</c>

00:58:17.030 --> 00:58:17.040 align:start position:0%
the job of our you know training is to
 

00:58:17.040 --> 00:58:19.510 align:start position:0%
the job of our you know training is to
find<00:58:17.200><c> the</c><00:58:17.359><c> parameters</c><00:58:18.319><c> that</c><00:58:18.559><c> minimize</c><00:58:19.359><c> the</c>

00:58:19.510 --> 00:58:19.520 align:start position:0%
find the parameters that minimize the
 

00:58:19.520 --> 00:58:22.789 align:start position:0%
find the parameters that minimize the
negative<00:58:19.839><c> log</c><00:58:20.079><c> likelihood</c><00:58:20.839><c> loss</c>

00:58:22.789 --> 00:58:22.799 align:start position:0%
negative log likelihood loss
 

00:58:22.799 --> 00:58:24.549 align:start position:0%
negative log likelihood loss
and<00:58:23.200><c> that</c><00:58:23.359><c> would</c><00:58:23.520><c> be</c><00:58:23.760><c> like</c><00:58:23.920><c> a</c><00:58:24.000><c> high</c><00:58:24.240><c> quality</c>

00:58:24.549 --> 00:58:24.559 align:start position:0%
and that would be like a high quality
 

00:58:24.559 --> 00:58:26.470 align:start position:0%
and that would be like a high quality
model<00:58:25.280><c> okay</c><00:58:25.520><c> so</c><00:58:25.680><c> to</c><00:58:25.760><c> summarize</c><00:58:26.160><c> i</c><00:58:26.240><c> actually</c>

00:58:26.470 --> 00:58:26.480 align:start position:0%
model okay so to summarize i actually
 

00:58:26.480 --> 00:58:27.990 align:start position:0%
model okay so to summarize i actually
wrote<00:58:26.720><c> it</c><00:58:26.880><c> out</c><00:58:27.040><c> here</c>

00:58:27.990 --> 00:58:28.000 align:start position:0%
wrote it out here
 

00:58:28.000 --> 00:58:30.789 align:start position:0%
wrote it out here
so<00:58:28.400><c> our</c><00:58:28.640><c> goal</c><00:58:29.040><c> is</c><00:58:29.200><c> to</c><00:58:29.359><c> maximize</c><00:58:29.920><c> likelihood</c>

00:58:30.789 --> 00:58:30.799 align:start position:0%
so our goal is to maximize likelihood
 

00:58:30.799 --> 00:58:31.910 align:start position:0%
so our goal is to maximize likelihood
which<00:58:31.040><c> is</c><00:58:31.200><c> the</c>

00:58:31.910 --> 00:58:31.920 align:start position:0%
which is the
 

00:58:31.920 --> 00:58:33.990 align:start position:0%
which is the
product<00:58:32.400><c> of</c><00:58:32.559><c> all</c><00:58:32.640><c> the</c><00:58:32.799><c> probabilities</c>

00:58:33.990 --> 00:58:34.000 align:start position:0%
product of all the probabilities
 

00:58:34.000 --> 00:58:35.510 align:start position:0%
product of all the probabilities
assigned<00:58:34.240><c> by</c><00:58:34.400><c> the</c><00:58:34.480><c> model</c>

00:58:35.510 --> 00:58:35.520 align:start position:0%
assigned by the model
 

00:58:35.520 --> 00:58:37.510 align:start position:0%
assigned by the model
and<00:58:35.680><c> we</c><00:58:35.839><c> want</c><00:58:36.000><c> to</c><00:58:36.160><c> maximize</c><00:58:36.640><c> this</c><00:58:36.799><c> likelihood</c>

00:58:37.510 --> 00:58:37.520 align:start position:0%
and we want to maximize this likelihood
 

00:58:37.520 --> 00:58:39.750 align:start position:0%
and we want to maximize this likelihood
with<00:58:37.760><c> respect</c><00:58:38.079><c> to</c><00:58:38.319><c> the</c><00:58:38.400><c> model</c><00:58:38.720><c> parameters</c><00:58:39.599><c> and</c>

00:58:39.750 --> 00:58:39.760 align:start position:0%
with respect to the model parameters and
 

00:58:39.760 --> 00:58:41.910 align:start position:0%
with respect to the model parameters and
in<00:58:40.000><c> our</c><00:58:40.240><c> case</c><00:58:40.640><c> the</c><00:58:40.720><c> model</c><00:58:41.040><c> parameters</c><00:58:41.520><c> here</c>

00:58:41.910 --> 00:58:41.920 align:start position:0%
in our case the model parameters here
 

00:58:41.920 --> 00:58:43.910 align:start position:0%
in our case the model parameters here
are<00:58:42.240><c> defined</c><00:58:42.640><c> in</c><00:58:42.799><c> the</c><00:58:42.880><c> table</c><00:58:43.359><c> these</c><00:58:43.599><c> numbers</c>

00:58:43.910 --> 00:58:43.920 align:start position:0%
are defined in the table these numbers
 

00:58:43.920 --> 00:58:45.430 align:start position:0%
are defined in the table these numbers
the<00:58:44.079><c> probabilities</c>

00:58:45.430 --> 00:58:45.440 align:start position:0%
the probabilities
 

00:58:45.440 --> 00:58:46.390 align:start position:0%
the probabilities
are

00:58:46.390 --> 00:58:46.400 align:start position:0%
are
 

00:58:46.400 --> 00:58:47.829 align:start position:0%
are
the<00:58:46.559><c> model</c><00:58:46.799><c> parameters</c><00:58:47.359><c> sort</c><00:58:47.520><c> of</c><00:58:47.680><c> in</c><00:58:47.760><c> our</c>

00:58:47.829 --> 00:58:47.839 align:start position:0%
the model parameters sort of in our
 

00:58:47.839 --> 00:58:50.309 align:start position:0%
the model parameters sort of in our
program<00:58:48.240><c> language</c><00:58:48.559><c> models</c><00:58:48.880><c> so</c><00:58:49.040><c> far</c><00:58:50.000><c> but</c><00:58:50.160><c> you</c>

00:58:50.309 --> 00:58:50.319 align:start position:0%
program language models so far but you
 

00:58:50.319 --> 00:58:51.990 align:start position:0%
program language models so far but you
have<00:58:50.400><c> to</c><00:58:50.480><c> keep</c><00:58:50.640><c> in</c><00:58:50.799><c> mind</c><00:58:51.040><c> that</c><00:58:51.520><c> here</c><00:58:51.760><c> we</c><00:58:51.920><c> are</c>

00:58:51.990 --> 00:58:52.000 align:start position:0%
have to keep in mind that here we are
 

00:58:52.000 --> 00:58:53.670 align:start position:0%
have to keep in mind that here we are
storing<00:58:52.240><c> everything</c><00:58:52.559><c> in</c><00:58:52.640><c> a</c><00:58:52.720><c> table</c><00:58:53.040><c> format</c><00:58:53.520><c> the</c>

00:58:53.670 --> 00:58:53.680 align:start position:0%
storing everything in a table format the
 

00:58:53.680 --> 00:58:55.829 align:start position:0%
storing everything in a table format the
probabilities<00:58:54.640><c> but</c><00:58:54.799><c> what's</c><00:58:55.040><c> coming</c><00:58:55.280><c> up</c><00:58:55.520><c> as</c><00:58:55.680><c> a</c>

00:58:55.829 --> 00:58:55.839 align:start position:0%
probabilities but what's coming up as a
 

00:58:55.839 --> 00:58:58.470 align:start position:0%
probabilities but what's coming up as a
brief<00:58:56.160><c> preview</c><00:58:56.960><c> is</c><00:58:57.119><c> that</c><00:58:57.440><c> these</c><00:58:57.680><c> numbers</c><00:58:58.319><c> will</c>

00:58:58.470 --> 00:58:58.480 align:start position:0%
brief preview is that these numbers will
 

00:58:58.480 --> 00:59:00.710 align:start position:0%
brief preview is that these numbers will
not<00:58:58.640><c> be</c><00:58:58.799><c> kept</c><00:58:59.119><c> explicitly</c><00:59:00.079><c> but</c><00:59:00.240><c> these</c><00:59:00.400><c> numbers</c>

00:59:00.710 --> 00:59:00.720 align:start position:0%
not be kept explicitly but these numbers
 

00:59:00.720 --> 00:59:03.030 align:start position:0%
not be kept explicitly but these numbers
will<00:59:00.880><c> be</c><00:59:00.960><c> calculated</c><00:59:01.520><c> by</c><00:59:01.680><c> a</c><00:59:01.760><c> neural</c><00:59:02.079><c> network</c>

00:59:03.030 --> 00:59:03.040 align:start position:0%
will be calculated by a neural network
 

00:59:03.040 --> 00:59:04.470 align:start position:0%
will be calculated by a neural network
so<00:59:03.200><c> that's</c><00:59:03.359><c> coming</c><00:59:03.680><c> up</c>

00:59:04.470 --> 00:59:04.480 align:start position:0%
so that's coming up
 

00:59:04.480 --> 00:59:06.230 align:start position:0%
so that's coming up
and<00:59:04.640><c> we</c><00:59:04.799><c> want</c><00:59:04.960><c> to</c><00:59:05.119><c> change</c><00:59:05.440><c> and</c><00:59:05.599><c> tune</c><00:59:05.920><c> the</c>

00:59:06.230 --> 00:59:06.240 align:start position:0%
and we want to change and tune the
 

00:59:06.240 --> 00:59:08.150 align:start position:0%
and we want to change and tune the
parameters<00:59:06.720><c> of</c><00:59:06.799><c> these</c><00:59:06.960><c> neural</c><00:59:07.200><c> networks</c><00:59:08.000><c> we</c>

00:59:08.150 --> 00:59:08.160 align:start position:0%
parameters of these neural networks we
 

00:59:08.160 --> 00:59:09.589 align:start position:0%
parameters of these neural networks we
want<00:59:08.240><c> to</c><00:59:08.400><c> change</c><00:59:08.559><c> these</c><00:59:08.799><c> parameters</c><00:59:09.440><c> to</c>

00:59:09.589 --> 00:59:09.599 align:start position:0%
want to change these parameters to
 

00:59:09.599 --> 00:59:11.430 align:start position:0%
want to change these parameters to
maximize<00:59:10.240><c> the</c><00:59:10.319><c> likelihood</c><00:59:10.880><c> the</c><00:59:11.040><c> product</c><00:59:11.359><c> of</c>

00:59:11.430 --> 00:59:11.440 align:start position:0%
maximize the likelihood the product of
 

00:59:11.440 --> 00:59:13.270 align:start position:0%
maximize the likelihood the product of
the<00:59:11.520><c> probabilities</c>

00:59:13.270 --> 00:59:13.280 align:start position:0%
the probabilities
 

00:59:13.280 --> 00:59:15.030 align:start position:0%
the probabilities
now<00:59:13.760><c> maximizing</c><00:59:14.319><c> the</c><00:59:14.400><c> likelihood</c><00:59:14.960><c> is</c>

00:59:15.030 --> 00:59:15.040 align:start position:0%
now maximizing the likelihood is
 

00:59:15.040 --> 00:59:16.470 align:start position:0%
now maximizing the likelihood is
equivalent<00:59:15.440><c> to</c><00:59:15.599><c> maximizing</c><00:59:16.079><c> the</c><00:59:16.240><c> log</c>

00:59:16.470 --> 00:59:16.480 align:start position:0%
equivalent to maximizing the log
 

00:59:16.480 --> 00:59:18.630 align:start position:0%
equivalent to maximizing the log
likelihood<00:59:17.119><c> because</c><00:59:17.440><c> log</c><00:59:17.839><c> is</c><00:59:17.920><c> a</c><00:59:18.079><c> monotonic</c>

00:59:18.630 --> 00:59:18.640 align:start position:0%
likelihood because log is a monotonic
 

00:59:18.640 --> 00:59:19.829 align:start position:0%
likelihood because log is a monotonic
function

00:59:19.829 --> 00:59:19.839 align:start position:0%
function
 

00:59:19.839 --> 00:59:21.990 align:start position:0%
function
here's<00:59:20.160><c> the</c><00:59:20.319><c> graph</c><00:59:20.799><c> of</c><00:59:21.040><c> log</c>

00:59:21.990 --> 00:59:22.000 align:start position:0%
here's the graph of log
 

00:59:22.000 --> 00:59:24.309 align:start position:0%
here's the graph of log
and<00:59:22.079><c> basically</c><00:59:22.559><c> all</c><00:59:22.720><c> it</c><00:59:22.880><c> is</c><00:59:23.040><c> doing</c><00:59:23.599><c> is</c><00:59:23.839><c> it's</c>

00:59:24.309 --> 00:59:24.319 align:start position:0%
and basically all it is doing is it's
 

00:59:24.319 --> 00:59:27.109 align:start position:0%
and basically all it is doing is it's
just<00:59:24.799><c> scaling</c><00:59:25.760><c> your</c><00:59:26.160><c> um</c><00:59:26.640><c> you</c><00:59:26.720><c> can</c><00:59:26.880><c> look</c><00:59:26.960><c> at</c><00:59:27.040><c> it</c>

00:59:27.109 --> 00:59:27.119 align:start position:0%
just scaling your um you can look at it
 

00:59:27.119 --> 00:59:29.349 align:start position:0%
just scaling your um you can look at it
as<00:59:27.200><c> just</c><00:59:27.359><c> a</c><00:59:27.520><c> scaling</c><00:59:27.920><c> of</c><00:59:28.000><c> the</c><00:59:28.160><c> loss</c><00:59:28.400><c> function</c>

00:59:29.349 --> 00:59:29.359 align:start position:0%
as just a scaling of the loss function
 

00:59:29.359 --> 00:59:32.470 align:start position:0%
as just a scaling of the loss function
and<00:59:30.000><c> so</c><00:59:30.160><c> the</c><00:59:30.319><c> optimization</c><00:59:30.960><c> problem</c><00:59:31.359><c> here</c><00:59:32.160><c> and</c>

00:59:32.470 --> 00:59:32.480 align:start position:0%
and so the optimization problem here and
 

00:59:32.480 --> 00:59:34.390 align:start position:0%
and so the optimization problem here and
here<00:59:32.960><c> are</c><00:59:33.119><c> actually</c><00:59:33.359><c> equivalent</c><00:59:34.079><c> because</c>

00:59:34.390 --> 00:59:34.400 align:start position:0%
here are actually equivalent because
 

00:59:34.400 --> 00:59:35.990 align:start position:0%
here are actually equivalent because
this<00:59:34.559><c> is</c><00:59:34.720><c> just</c><00:59:35.040><c> scaling</c><00:59:35.440><c> you</c><00:59:35.520><c> can</c><00:59:35.680><c> look</c><00:59:35.839><c> at</c><00:59:35.920><c> it</c>

00:59:35.990 --> 00:59:36.000 align:start position:0%
this is just scaling you can look at it
 

00:59:36.000 --> 00:59:36.950 align:start position:0%
this is just scaling you can look at it
that<00:59:36.160><c> way</c>

00:59:36.950 --> 00:59:36.960 align:start position:0%
that way
 

00:59:36.960 --> 00:59:38.630 align:start position:0%
that way
and<00:59:37.119><c> so</c><00:59:37.359><c> these</c><00:59:37.599><c> are</c><00:59:37.760><c> two</c><00:59:38.000><c> identical</c>

00:59:38.630 --> 00:59:38.640 align:start position:0%
and so these are two identical
 

00:59:38.640 --> 00:59:41.030 align:start position:0%
and so these are two identical
optimization<00:59:39.280><c> problems</c>

00:59:41.030 --> 00:59:41.040 align:start position:0%
optimization problems
 

00:59:41.040 --> 00:59:41.829 align:start position:0%
optimization problems
um

00:59:41.829 --> 00:59:41.839 align:start position:0%
um
 

00:59:41.839 --> 00:59:43.109 align:start position:0%
um
maximizing<00:59:42.400><c> the</c><00:59:42.480><c> log-likelihood</c><00:59:43.040><c> is</c>

00:59:43.109 --> 00:59:43.119 align:start position:0%
maximizing the log-likelihood is
 

00:59:43.119 --> 00:59:44.549 align:start position:0%
maximizing the log-likelihood is
equivalent<00:59:43.520><c> to</c><00:59:43.599><c> minimizing</c><00:59:44.079><c> the</c><00:59:44.240><c> negative</c>

00:59:44.549 --> 00:59:44.559 align:start position:0%
equivalent to minimizing the negative
 

00:59:44.559 --> 00:59:47.030 align:start position:0%
equivalent to minimizing the negative
log<00:59:44.720><c> likelihood</c><00:59:46.160><c> and</c><00:59:46.319><c> then</c><00:59:46.559><c> in</c><00:59:46.720><c> practice</c>

00:59:47.030 --> 00:59:47.040 align:start position:0%
log likelihood and then in practice
 

00:59:47.040 --> 00:59:48.789 align:start position:0%
log likelihood and then in practice
people<00:59:47.280><c> actually</c><00:59:47.520><c> minimize</c><00:59:47.920><c> the</c><00:59:48.240><c> average</c>

00:59:48.789 --> 00:59:48.799 align:start position:0%
people actually minimize the average
 

00:59:48.799 --> 00:59:50.789 align:start position:0%
people actually minimize the average
negative<00:59:49.119><c> log</c><00:59:49.359><c> likelihood</c><00:59:50.160><c> to</c><00:59:50.319><c> get</c><00:59:50.480><c> numbers</c>

00:59:50.789 --> 00:59:50.799 align:start position:0%
negative log likelihood to get numbers
 

00:59:50.799 --> 00:59:52.870 align:start position:0%
negative log likelihood to get numbers
like<00:59:51.520><c> 2.4</c>

00:59:52.870 --> 00:59:52.880 align:start position:0%
like 2.4
 

00:59:52.880 --> 00:59:55.190 align:start position:0%
like 2.4
and<00:59:53.040><c> then</c><00:59:53.440><c> this</c><00:59:53.920><c> summarizes</c><00:59:54.559><c> the</c><00:59:54.720><c> quality</c><00:59:55.119><c> of</c>

00:59:55.190 --> 00:59:55.200 align:start position:0%
and then this summarizes the quality of
 

00:59:55.200 --> 00:59:57.349 align:start position:0%
and then this summarizes the quality of
your<00:59:55.359><c> model</c><00:59:56.160><c> and</c><00:59:56.319><c> we'd</c><00:59:56.480><c> like</c><00:59:56.640><c> to</c><00:59:56.799><c> minimize</c><00:59:57.200><c> it</c>

00:59:57.349 --> 00:59:57.359 align:start position:0%
your model and we'd like to minimize it
 

00:59:57.359 --> 00:59:59.589 align:start position:0%
your model and we'd like to minimize it
and<00:59:57.440><c> make</c><00:59:57.680><c> it</c><00:59:57.839><c> as</c><00:59:58.000><c> small</c><00:59:58.240><c> as</c><00:59:58.400><c> possible</c>

00:59:59.589 --> 00:59:59.599 align:start position:0%
and make it as small as possible
 

00:59:59.599 --> 01:00:02.309 align:start position:0%
and make it as small as possible
and<00:59:59.839><c> the</c><01:00:00.000><c> lowest</c><01:00:00.400><c> it</c><01:00:00.480><c> can</c><01:00:00.640><c> get</c><01:00:00.960><c> is</c><01:00:01.280><c> zero</c>

01:00:02.309 --> 01:00:02.319 align:start position:0%
and the lowest it can get is zero
 

01:00:02.319 --> 01:00:04.150 align:start position:0%
and the lowest it can get is zero
and<01:00:02.480><c> the</c><01:00:02.720><c> lower</c><01:00:03.040><c> it</c><01:00:03.200><c> is</c>

01:00:04.150 --> 01:00:04.160 align:start position:0%
and the lower it is
 

01:00:04.160 --> 01:00:05.910 align:start position:0%
and the lower it is
the<01:00:04.319><c> better</c><01:00:04.559><c> off</c><01:00:04.720><c> your</c><01:00:04.880><c> model</c><01:00:05.200><c> is</c><01:00:05.599><c> because</c>

01:00:05.910 --> 01:00:05.920 align:start position:0%
the better off your model is because
 

01:00:05.920 --> 01:00:07.430 align:start position:0%
the better off your model is because
it's<01:00:06.079><c> signing</c><01:00:06.720><c> it's</c><01:00:06.880><c> assigning</c><01:00:07.200><c> high</c>

01:00:07.430 --> 01:00:07.440 align:start position:0%
it's signing it's assigning high
 

01:00:07.440 --> 01:00:09.829 align:start position:0%
it's signing it's assigning high
probabilities<01:00:08.400><c> to</c><01:00:08.559><c> your</c><01:00:08.720><c> data</c><01:00:09.440><c> now</c><01:00:09.599><c> let's</c>

01:00:09.829 --> 01:00:09.839 align:start position:0%
probabilities to your data now let's
 

01:00:09.839 --> 01:00:11.270 align:start position:0%
probabilities to your data now let's
estimate<01:00:10.160><c> the</c><01:00:10.319><c> probability</c><01:00:10.720><c> over</c><01:00:10.880><c> the</c><01:00:11.040><c> entire</c>

01:00:11.270 --> 01:00:11.280 align:start position:0%
estimate the probability over the entire
 

01:00:11.280 --> 01:00:12.710 align:start position:0%
estimate the probability over the entire
training<01:00:11.520><c> set</c><01:00:11.839><c> just</c><01:00:12.000><c> to</c><01:00:12.079><c> make</c><01:00:12.240><c> sure</c><01:00:12.400><c> that</c><01:00:12.559><c> we</c>

01:00:12.710 --> 01:00:12.720 align:start position:0%
training set just to make sure that we
 

01:00:12.720 --> 01:00:15.349 align:start position:0%
training set just to make sure that we
get<01:00:12.880><c> something</c><01:00:13.280><c> around</c><01:00:13.599><c> 2.4</c><01:00:14.799><c> let's</c><01:00:15.040><c> run</c><01:00:15.200><c> this</c>

01:00:15.349 --> 01:00:15.359 align:start position:0%
get something around 2.4 let's run this
 

01:00:15.359 --> 01:00:17.190 align:start position:0%
get something around 2.4 let's run this
over<01:00:15.520><c> the</c><01:00:15.599><c> entire</c><01:00:16.000><c> oops</c>

01:00:17.190 --> 01:00:17.200 align:start position:0%
over the entire oops
 

01:00:17.200 --> 01:00:20.630 align:start position:0%
over the entire oops
let's<01:00:17.359><c> take</c><01:00:17.599><c> out</c><01:00:17.680><c> the</c><01:00:17.760><c> print</c><01:00:18.000><c> segment</c><01:00:18.400><c> as</c><01:00:18.559><c> well</c>

01:00:20.630 --> 01:00:20.640 align:start position:0%
let's take out the print segment as well
 

01:00:20.640 --> 01:00:24.390 align:start position:0%
let's take out the print segment as well
okay<01:00:20.960><c> 2.45</c><01:00:21.760><c> or</c><01:00:21.839><c> the</c><01:00:22.000><c> entire</c><01:00:22.319><c> training</c><01:00:22.640><c> set</c>

01:00:24.390 --> 01:00:24.400 align:start position:0%
okay 2.45 or the entire training set
 

01:00:24.400 --> 01:00:25.670 align:start position:0%
okay 2.45 or the entire training set
now<01:00:24.559><c> what</c><01:00:24.720><c> i'd</c><01:00:24.799><c> like</c><01:00:24.960><c> to</c><01:00:25.119><c> show</c><01:00:25.280><c> you</c><01:00:25.440><c> is</c><01:00:25.520><c> that</c>

01:00:25.670 --> 01:00:25.680 align:start position:0%
now what i'd like to show you is that
 

01:00:25.680 --> 01:00:26.549 align:start position:0%
now what i'd like to show you is that
you<01:00:25.760><c> can</c><01:00:25.920><c> actually</c><01:00:26.079><c> evaluate</c><01:00:26.480><c> the</c>

01:00:26.549 --> 01:00:26.559 align:start position:0%
you can actually evaluate the
 

01:00:26.559 --> 01:00:28.230 align:start position:0%
you can actually evaluate the
probability<01:00:26.960><c> for</c><01:00:27.119><c> any</c><01:00:27.359><c> word</c><01:00:27.599><c> that</c><01:00:27.680><c> you</c><01:00:27.839><c> want</c>

01:00:28.230 --> 01:00:28.240 align:start position:0%
probability for any word that you want
 

01:00:28.240 --> 01:00:30.390 align:start position:0%
probability for any word that you want
like<01:00:28.400><c> for</c><01:00:28.559><c> example</c>

01:00:30.390 --> 01:00:30.400 align:start position:0%
like for example
 

01:00:30.400 --> 01:00:32.870 align:start position:0%
like for example
if<01:00:30.559><c> we</c><01:00:30.720><c> just</c><01:00:30.960><c> test</c><01:00:31.200><c> a</c><01:00:31.280><c> single</c><01:00:31.520><c> word</c><01:00:31.760><c> andre</c><01:00:32.720><c> and</c>

01:00:32.870 --> 01:00:32.880 align:start position:0%
if we just test a single word andre and
 

01:00:32.880 --> 01:00:35.750 align:start position:0%
if we just test a single word andre and
bring<01:00:33.040><c> back</c><01:00:33.200><c> the</c><01:00:33.359><c> print</c><01:00:33.599><c> statement</c>

01:00:35.750 --> 01:00:35.760 align:start position:0%
bring back the print statement
 

01:00:35.760 --> 01:00:37.109 align:start position:0%
bring back the print statement
then<01:00:35.920><c> you</c><01:00:36.079><c> see</c><01:00:36.240><c> that</c><01:00:36.400><c> andre</c><01:00:36.720><c> is</c><01:00:36.799><c> actually</c><01:00:37.040><c> kind</c>

01:00:37.109 --> 01:00:37.119 align:start position:0%
then you see that andre is actually kind
 

01:00:37.119 --> 01:00:40.630 align:start position:0%
then you see that andre is actually kind
of<01:00:37.200><c> like</c><01:00:37.359><c> an</c><01:00:37.520><c> unlikely</c><01:00:38.400><c> word</c><01:00:38.799><c> like</c><01:00:38.960><c> on</c><01:00:39.200><c> average</c>

01:00:40.630 --> 01:00:40.640 align:start position:0%
of like an unlikely word like on average
 

01:00:40.640 --> 01:00:41.670 align:start position:0%
of like an unlikely word like on average
we<01:00:40.880><c> take</c>

01:00:41.670 --> 01:00:41.680 align:start position:0%
we take
 

01:00:41.680 --> 01:00:42.549 align:start position:0%
we take
three

01:00:42.549 --> 01:00:42.559 align:start position:0%
three
 

01:00:42.559 --> 01:00:44.789 align:start position:0%
three
log<01:00:42.720><c> probability</c><01:00:43.280><c> to</c><01:00:43.359><c> represent</c><01:00:43.839><c> it</c><01:00:44.400><c> and</c>

01:00:44.789 --> 01:00:44.799 align:start position:0%
log probability to represent it and
 

01:00:44.799 --> 01:00:46.470 align:start position:0%
log probability to represent it and
roughly<01:00:45.119><c> that's</c><01:00:45.359><c> because</c><01:00:45.599><c> ej</c><01:00:46.000><c> apparently</c><01:00:46.400><c> is</c>

01:00:46.470 --> 01:00:46.480 align:start position:0%
roughly that's because ej apparently is
 

01:00:46.480 --> 01:00:49.990 align:start position:0%
roughly that's because ej apparently is
very<01:00:47.119><c> uncommon</c><01:00:47.599><c> as</c><01:00:47.760><c> an</c><01:00:47.839><c> example</c>

01:00:49.990 --> 01:00:50.000 align:start position:0%
very uncommon as an example
 

01:00:50.000 --> 01:00:51.190 align:start position:0%
very uncommon as an example
now

01:00:51.190 --> 01:00:51.200 align:start position:0%
now
 

01:00:51.200 --> 01:00:53.750 align:start position:0%
now
think<01:00:51.440><c> through</c><01:00:51.599><c> this</c><01:00:52.319><c> um</c>

01:00:53.750 --> 01:00:53.760 align:start position:0%
think through this um
 

01:00:53.760 --> 01:00:55.910 align:start position:0%
think through this um
when<01:00:53.920><c> i</c><01:00:54.000><c> take</c><01:00:54.160><c> andre</c><01:00:54.480><c> and</c><01:00:54.559><c> i</c><01:00:54.640><c> append</c><01:00:54.960><c> q</c><01:00:55.599><c> and</c><01:00:55.760><c> i</c>

01:00:55.910 --> 01:00:55.920 align:start position:0%
when i take andre and i append q and i
 

01:00:55.920 --> 01:01:00.150 align:start position:0%
when i take andre and i append q and i
test<01:00:56.240><c> the</c><01:00:56.319><c> probability</c><01:00:56.880><c> of</c><01:00:57.040><c> it</c><01:00:57.280><c> under</c><01:00:57.599><c> q</c>

01:01:00.150 --> 01:01:00.160 align:start position:0%
 
 

01:01:00.160 --> 01:01:01.670 align:start position:0%
 
we<01:01:00.319><c> actually</c><01:01:00.640><c> get</c>

01:01:01.670 --> 01:01:01.680 align:start position:0%
we actually get
 

01:01:01.680 --> 01:01:02.950 align:start position:0%
we actually get
infinity

01:01:02.950 --> 01:01:02.960 align:start position:0%
infinity
 

01:01:02.960 --> 01:01:05.589 align:start position:0%
infinity
and<01:01:03.040><c> that's</c><01:01:03.280><c> because</c><01:01:03.680><c> jq</c><01:01:04.480><c> has</c><01:01:04.640><c> a</c><01:01:04.880><c> zero</c><01:01:05.200><c> percent</c>

01:01:05.589 --> 01:01:05.599 align:start position:0%
and that's because jq has a zero percent
 

01:01:05.599 --> 01:01:07.670 align:start position:0%
and that's because jq has a zero percent
probability<01:01:06.240><c> according</c><01:01:06.559><c> to</c><01:01:06.720><c> our</c><01:01:06.880><c> model</c><01:01:07.520><c> so</c>

01:01:07.670 --> 01:01:07.680 align:start position:0%
probability according to our model so
 

01:01:07.680 --> 01:01:09.270 align:start position:0%
probability according to our model so
the<01:01:07.839><c> log</c><01:01:08.079><c> likelihood</c>

01:01:09.270 --> 01:01:09.280 align:start position:0%
the log likelihood
 

01:01:09.280 --> 01:01:11.190 align:start position:0%
the log likelihood
so<01:01:09.520><c> the</c><01:01:09.599><c> log</c><01:01:10.000><c> of</c><01:01:10.160><c> zero</c><01:01:10.559><c> will</c><01:01:10.720><c> be</c><01:01:10.799><c> negative</c>

01:01:11.190 --> 01:01:11.200 align:start position:0%
so the log of zero will be negative
 

01:01:11.200 --> 01:01:14.390 align:start position:0%
so the log of zero will be negative
infinity<01:01:12.079><c> we</c><01:01:12.240><c> get</c><01:01:12.559><c> infinite</c><01:01:13.359><c> loss</c>

01:01:14.390 --> 01:01:14.400 align:start position:0%
infinity we get infinite loss
 

01:01:14.400 --> 01:01:15.670 align:start position:0%
infinity we get infinite loss
so<01:01:14.559><c> this</c><01:01:14.720><c> is</c><01:01:14.799><c> kind</c><01:01:14.880><c> of</c><01:01:14.960><c> undesirable</c><01:01:15.520><c> right</c>

01:01:15.670 --> 01:01:15.680 align:start position:0%
so this is kind of undesirable right
 

01:01:15.680 --> 01:01:16.870 align:start position:0%
so this is kind of undesirable right
because<01:01:15.839><c> we</c><01:01:16.000><c> plugged</c><01:01:16.240><c> in</c><01:01:16.400><c> a</c><01:01:16.480><c> string</c><01:01:16.720><c> that</c>

01:01:16.870 --> 01:01:16.880 align:start position:0%
because we plugged in a string that
 

01:01:16.880 --> 01:01:19.109 align:start position:0%
because we plugged in a string that
could<01:01:17.119><c> be</c><01:01:17.280><c> like</c><01:01:17.520><c> a</c><01:01:17.599><c> somewhat</c><01:01:17.920><c> reasonable</c><01:01:18.480><c> name</c>

01:01:19.109 --> 01:01:19.119 align:start position:0%
could be like a somewhat reasonable name
 

01:01:19.119 --> 01:01:20.470 align:start position:0%
could be like a somewhat reasonable name
but<01:01:19.280><c> basically</c><01:01:19.680><c> what</c><01:01:19.839><c> this</c><01:01:20.000><c> is</c><01:01:20.160><c> saying</c><01:01:20.400><c> is</c>

01:01:20.470 --> 01:01:20.480 align:start position:0%
but basically what this is saying is
 

01:01:20.480 --> 01:01:22.390 align:start position:0%
but basically what this is saying is
that<01:01:20.640><c> this</c><01:01:20.799><c> model</c><01:01:21.200><c> is</c><01:01:21.359><c> exactly</c><01:01:21.760><c> zero</c><01:01:22.000><c> percent</c>

01:01:22.390 --> 01:01:22.400 align:start position:0%
that this model is exactly zero percent
 

01:01:22.400 --> 01:01:25.430 align:start position:0%
that this model is exactly zero percent
likely<01:01:23.119><c> to</c><01:01:23.520><c> uh</c><01:01:23.760><c> to</c><01:01:23.920><c> predict</c><01:01:24.559><c> this</c>

01:01:25.430 --> 01:01:25.440 align:start position:0%
likely to uh to predict this
 

01:01:25.440 --> 01:01:26.390 align:start position:0%
likely to uh to predict this
name

01:01:26.390 --> 01:01:26.400 align:start position:0%
name
 

01:01:26.400 --> 01:01:29.670 align:start position:0%
name
and<01:01:26.720><c> our</c><01:01:26.960><c> loss</c><01:01:27.280><c> is</c><01:01:27.440><c> infinity</c><01:01:27.920><c> on</c><01:01:28.000><c> this</c><01:01:28.640><c> example</c>

01:01:29.670 --> 01:01:29.680 align:start position:0%
and our loss is infinity on this example
 

01:01:29.680 --> 01:01:31.430 align:start position:0%
and our loss is infinity on this example
and<01:01:29.920><c> really</c><01:01:30.240><c> what</c><01:01:30.640><c> the</c><01:01:30.720><c> reason</c><01:01:31.040><c> for</c><01:01:31.119><c> that</c><01:01:31.359><c> is</c>

01:01:31.430 --> 01:01:31.440 align:start position:0%
and really what the reason for that is
 

01:01:31.440 --> 01:01:32.789 align:start position:0%
and really what the reason for that is
that<01:01:31.680><c> j</c>

01:01:32.789 --> 01:01:32.799 align:start position:0%
that j
 

01:01:32.799 --> 01:01:34.950 align:start position:0%
that j
is<01:01:33.119><c> followed</c><01:01:33.520><c> by</c><01:01:33.760><c> q</c>

01:01:34.950 --> 01:01:34.960 align:start position:0%
is followed by q
 

01:01:34.960 --> 01:01:36.870 align:start position:0%
is followed by q
uh<01:01:35.440><c> zero</c><01:01:35.839><c> times</c>

01:01:36.870 --> 01:01:36.880 align:start position:0%
uh zero times
 

01:01:36.880 --> 01:01:40.630 align:start position:0%
uh zero times
uh<01:01:37.040><c> where's</c><01:01:37.359><c> q</c><01:01:37.839><c> jq</c><01:01:38.319><c> is</c><01:01:38.400><c> zero</c><01:01:39.200><c> and</c><01:01:39.359><c> so</c><01:01:39.599><c> jq</c><01:01:40.160><c> is</c><01:01:40.319><c> uh</c>

01:01:40.630 --> 01:01:40.640 align:start position:0%
uh where's q jq is zero and so jq is uh
 

01:01:40.640 --> 01:01:42.150 align:start position:0%
uh where's q jq is zero and so jq is uh
zero<01:01:40.880><c> percent</c><01:01:41.119><c> likely</c>

01:01:42.150 --> 01:01:42.160 align:start position:0%
zero percent likely
 

01:01:42.160 --> 01:01:43.589 align:start position:0%
zero percent likely
so<01:01:42.319><c> it's</c><01:01:42.480><c> actually</c><01:01:42.720><c> kind</c><01:01:42.880><c> of</c><01:01:43.119><c> gross</c><01:01:43.520><c> and</c>

01:01:43.589 --> 01:01:43.599 align:start position:0%
so it's actually kind of gross and
 

01:01:43.599 --> 01:01:45.589 align:start position:0%
so it's actually kind of gross and
people<01:01:43.839><c> don't</c><01:01:44.000><c> like</c><01:01:44.160><c> this</c><01:01:44.400><c> too</c><01:01:44.559><c> much</c><01:01:45.200><c> to</c><01:01:45.359><c> fix</c>

01:01:45.589 --> 01:01:45.599 align:start position:0%
people don't like this too much to fix
 

01:01:45.599 --> 01:01:47.030 align:start position:0%
people don't like this too much to fix
this<01:01:45.839><c> there's</c><01:01:46.000><c> a</c><01:01:46.079><c> very</c><01:01:46.319><c> simple</c><01:01:46.640><c> fix</c><01:01:46.880><c> that</c>

01:01:47.030 --> 01:01:47.040 align:start position:0%
this there's a very simple fix that
 

01:01:47.040 --> 01:01:49.270 align:start position:0%
this there's a very simple fix that
people<01:01:47.359><c> like</c><01:01:47.599><c> to</c><01:01:47.760><c> do</c><01:01:48.400><c> to</c><01:01:48.559><c> sort</c><01:01:48.720><c> of</c><01:01:48.799><c> like</c><01:01:48.960><c> smooth</c>

01:01:49.270 --> 01:01:49.280 align:start position:0%
people like to do to sort of like smooth
 

01:01:49.280 --> 01:01:50.390 align:start position:0%
people like to do to sort of like smooth
out<01:01:49.359><c> your</c><01:01:49.599><c> model</c><01:01:49.839><c> a</c><01:01:49.839><c> little</c><01:01:50.000><c> bit</c><01:01:50.240><c> and</c><01:01:50.319><c> it's</c>

01:01:50.390 --> 01:01:50.400 align:start position:0%
out your model a little bit and it's
 

01:01:50.400 --> 01:01:52.549 align:start position:0%
out your model a little bit and it's
called<01:01:50.559><c> model</c><01:01:50.799><c> smoothing</c><01:01:52.000><c> and</c><01:01:52.240><c> roughly</c>

01:01:52.549 --> 01:01:52.559 align:start position:0%
called model smoothing and roughly
 

01:01:52.559 --> 01:01:53.910 align:start position:0%
called model smoothing and roughly
what's<01:01:52.720><c> happening</c><01:01:53.040><c> is</c><01:01:53.119><c> that</c><01:01:53.280><c> we</c><01:01:53.440><c> will</c><01:01:53.599><c> eight</c>

01:01:53.910 --> 01:01:53.920 align:start position:0%
what's happening is that we will eight
 

01:01:53.920 --> 01:01:56.230 align:start position:0%
what's happening is that we will eight
we<01:01:54.079><c> will</c><01:01:54.240><c> add</c><01:01:54.480><c> some</c><01:01:54.799><c> fake</c><01:01:55.119><c> counts</c>

01:01:56.230 --> 01:01:56.240 align:start position:0%
we will add some fake counts
 

01:01:56.240 --> 01:01:57.109 align:start position:0%
we will add some fake counts
so

01:01:57.109 --> 01:01:57.119 align:start position:0%
so
 

01:01:57.119 --> 01:01:59.270 align:start position:0%
so
imagine<01:01:57.520><c> adding</c><01:01:57.839><c> a</c><01:01:58.000><c> count</c><01:01:58.319><c> of</c><01:01:58.559><c> one</c><01:01:59.039><c> to</c>

01:01:59.270 --> 01:01:59.280 align:start position:0%
imagine adding a count of one to
 

01:01:59.280 --> 01:02:00.870 align:start position:0%
imagine adding a count of one to
everything

01:02:00.870 --> 01:02:00.880 align:start position:0%
everything
 

01:02:00.880 --> 01:02:03.349 align:start position:0%
everything
so<01:02:01.359><c> we</c><01:02:01.520><c> add</c><01:02:01.760><c> a</c><01:02:01.839><c> count</c><01:02:02.160><c> of</c><01:02:02.319><c> one</c>

01:02:03.349 --> 01:02:03.359 align:start position:0%
so we add a count of one
 

01:02:03.359 --> 01:02:04.549 align:start position:0%
so we add a count of one
like<01:02:03.599><c> this</c>

01:02:04.549 --> 01:02:04.559 align:start position:0%
like this
 

01:02:04.559 --> 01:02:05.510 align:start position:0%
like this
and<01:02:04.640><c> then</c><01:02:04.799><c> we</c><01:02:04.880><c> recalculate</c><01:02:05.359><c> the</c>

01:02:05.510 --> 01:02:05.520 align:start position:0%
and then we recalculate the
 

01:02:05.520 --> 01:02:07.670 align:start position:0%
and then we recalculate the
probabilities

01:02:07.670 --> 01:02:07.680 align:start position:0%
probabilities
 

01:02:07.680 --> 01:02:09.190 align:start position:0%
probabilities
and<01:02:07.839><c> that's</c><01:02:08.079><c> model</c><01:02:08.319><c> smoothing</c><01:02:08.880><c> and</c><01:02:08.960><c> you</c><01:02:09.039><c> can</c>

01:02:09.190 --> 01:02:09.200 align:start position:0%
and that's model smoothing and you can
 

01:02:09.200 --> 01:02:10.870 align:start position:0%
and that's model smoothing and you can
add<01:02:09.440><c> as</c><01:02:09.520><c> much</c><01:02:09.680><c> as</c><01:02:09.839><c> you</c><01:02:09.920><c> like</c><01:02:10.079><c> you</c><01:02:10.160><c> can</c><01:02:10.319><c> add</c><01:02:10.559><c> five</c>

01:02:10.870 --> 01:02:10.880 align:start position:0%
add as much as you like you can add five
 

01:02:10.880 --> 01:02:12.789 align:start position:0%
add as much as you like you can add five
and<01:02:11.039><c> it</c><01:02:11.119><c> will</c><01:02:11.280><c> give</c><01:02:11.359><c> you</c><01:02:11.440><c> a</c><01:02:11.520><c> smoother</c><01:02:11.920><c> model</c>

01:02:12.789 --> 01:02:12.799 align:start position:0%
and it will give you a smoother model
 

01:02:12.799 --> 01:02:14.710 align:start position:0%
and it will give you a smoother model
and<01:02:12.960><c> the</c><01:02:13.119><c> more</c><01:02:13.359><c> you</c><01:02:13.599><c> add</c><01:02:13.839><c> here</c>

01:02:14.710 --> 01:02:14.720 align:start position:0%
and the more you add here
 

01:02:14.720 --> 01:02:15.829 align:start position:0%
and the more you add here
the<01:02:14.880><c> more</c>

01:02:15.829 --> 01:02:15.839 align:start position:0%
the more
 

01:02:15.839 --> 01:02:17.750 align:start position:0%
the more
uniform<01:02:16.319><c> model</c><01:02:16.559><c> you're</c><01:02:16.720><c> going</c><01:02:16.799><c> to</c><01:02:16.960><c> have</c><01:02:17.680><c> and</c>

01:02:17.750 --> 01:02:17.760 align:start position:0%
uniform model you're going to have and
 

01:02:17.760 --> 01:02:19.589 align:start position:0%
uniform model you're going to have and
the<01:02:17.920><c> less</c><01:02:18.160><c> you</c><01:02:18.319><c> add</c>

01:02:19.589 --> 01:02:19.599 align:start position:0%
the less you add
 

01:02:19.599 --> 01:02:21.109 align:start position:0%
the less you add
the<01:02:19.760><c> more</c><01:02:20.079><c> peaked</c><01:02:20.480><c> model</c><01:02:20.720><c> you</c><01:02:20.880><c> are</c><01:02:20.960><c> going</c><01:02:21.039><c> to</c>

01:02:21.109 --> 01:02:21.119 align:start position:0%
the more peaked model you are going to
 

01:02:21.119 --> 01:02:22.230 align:start position:0%
the more peaked model you are going to
have<01:02:21.359><c> of</c><01:02:21.440><c> course</c>

01:02:22.230 --> 01:02:22.240 align:start position:0%
have of course
 

01:02:22.240 --> 01:02:24.870 align:start position:0%
have of course
so<01:02:22.640><c> one</c><01:02:22.960><c> is</c><01:02:23.039><c> like</c><01:02:23.200><c> a</c><01:02:23.280><c> pretty</c><01:02:23.520><c> decent</c><01:02:24.319><c> count</c><01:02:24.640><c> to</c>

01:02:24.870 --> 01:02:24.880 align:start position:0%
so one is like a pretty decent count to
 

01:02:24.880 --> 01:02:25.670 align:start position:0%
so one is like a pretty decent count to
add

01:02:25.670 --> 01:02:25.680 align:start position:0%
add
 

01:02:25.680 --> 01:02:27.510 align:start position:0%
add
and<01:02:25.760><c> that</c><01:02:26.000><c> will</c><01:02:26.160><c> ensure</c><01:02:26.960><c> that</c><01:02:27.119><c> there</c><01:02:27.280><c> will</c><01:02:27.359><c> be</c>

01:02:27.510 --> 01:02:27.520 align:start position:0%
and that will ensure that there will be
 

01:02:27.520 --> 01:02:30.789 align:start position:0%
and that will ensure that there will be
no<01:02:27.760><c> zeros</c><01:02:28.240><c> in</c><01:02:28.400><c> our</c><01:02:28.559><c> probability</c><01:02:29.039><c> matrix</c><01:02:29.440><c> p</c>

01:02:30.789 --> 01:02:30.799 align:start position:0%
no zeros in our probability matrix p
 

01:02:30.799 --> 01:02:31.990 align:start position:0%
no zeros in our probability matrix p
and<01:02:30.960><c> so</c><01:02:31.119><c> this</c><01:02:31.280><c> will</c><01:02:31.440><c> of</c><01:02:31.520><c> course</c><01:02:31.680><c> change</c><01:02:31.920><c> the</c>

01:02:31.990 --> 01:02:32.000 align:start position:0%
and so this will of course change the
 

01:02:32.000 --> 01:02:34.150 align:start position:0%
and so this will of course change the
generations<01:02:32.559><c> a</c><01:02:32.640><c> little</c><01:02:32.799><c> bit</c><01:02:33.520><c> in</c><01:02:33.680><c> this</c><01:02:33.839><c> case</c><01:02:34.079><c> it</c>

01:02:34.150 --> 01:02:34.160 align:start position:0%
generations a little bit in this case it
 

01:02:34.160 --> 01:02:36.470 align:start position:0%
generations a little bit in this case it
didn't<01:02:34.480><c> but</c><01:02:34.880><c> in</c><01:02:35.039><c> principle</c><01:02:35.440><c> it</c><01:02:35.599><c> could</c>

01:02:36.470 --> 01:02:36.480 align:start position:0%
didn't but in principle it could
 

01:02:36.480 --> 01:02:38.309 align:start position:0%
didn't but in principle it could
but<01:02:36.720><c> what</c><01:02:36.880><c> that's</c><01:02:37.119><c> going</c><01:02:37.280><c> to</c><01:02:37.359><c> do</c><01:02:37.599><c> now</c><01:02:37.839><c> is</c><01:02:38.000><c> that</c>

01:02:38.309 --> 01:02:38.319 align:start position:0%
but what that's going to do now is that
 

01:02:38.319 --> 01:02:41.109 align:start position:0%
but what that's going to do now is that
nothing<01:02:38.640><c> will</c><01:02:38.720><c> be</c><01:02:38.960><c> infinity</c><01:02:39.920><c> unlikely</c>

01:02:41.109 --> 01:02:41.119 align:start position:0%
nothing will be infinity unlikely
 

01:02:41.119 --> 01:02:42.309 align:start position:0%
nothing will be infinity unlikely
so<01:02:41.359><c> now</c>

01:02:42.309 --> 01:02:42.319 align:start position:0%
so now
 

01:02:42.319 --> 01:02:43.910 align:start position:0%
so now
our<01:02:42.559><c> model</c><01:02:42.880><c> will</c><01:02:42.960><c> predict</c><01:02:43.440><c> some</c><01:02:43.680><c> other</c>

01:02:43.910 --> 01:02:43.920 align:start position:0%
our model will predict some other
 

01:02:43.920 --> 01:02:46.069 align:start position:0%
our model will predict some other
probability<01:02:44.640><c> and</c><01:02:44.799><c> we</c><01:02:44.880><c> see</c><01:02:45.039><c> that</c><01:02:45.200><c> jq</c><01:02:45.599><c> now</c><01:02:45.760><c> has</c><01:02:45.920><c> a</c>

01:02:46.069 --> 01:02:46.079 align:start position:0%
probability and we see that jq now has a
 

01:02:46.079 --> 01:02:48.069 align:start position:0%
probability and we see that jq now has a
very<01:02:46.319><c> small</c><01:02:46.640><c> probability</c><01:02:47.599><c> so</c><01:02:47.760><c> the</c><01:02:47.839><c> model</c>

01:02:48.069 --> 01:02:48.079 align:start position:0%
very small probability so the model
 

01:02:48.079 --> 01:02:49.589 align:start position:0%
very small probability so the model
still<01:02:48.240><c> finds</c><01:02:48.480><c> it</c><01:02:48.640><c> very</c><01:02:48.799><c> surprising</c><01:02:49.280><c> that</c><01:02:49.359><c> this</c>

01:02:49.589 --> 01:02:49.599 align:start position:0%
still finds it very surprising that this
 

01:02:49.599 --> 01:02:51.990 align:start position:0%
still finds it very surprising that this
was<01:02:50.240><c> a</c><01:02:50.400><c> word</c><01:02:50.640><c> or</c><01:02:50.720><c> a</c><01:02:50.799><c> bigram</c><01:02:51.440><c> but</c><01:02:51.599><c> we</c><01:02:51.760><c> don't</c><01:02:51.839><c> get</c>

01:02:51.990 --> 01:02:52.000 align:start position:0%
was a word or a bigram but we don't get
 

01:02:52.000 --> 01:02:53.990 align:start position:0%
was a word or a bigram but we don't get
negative<01:02:52.400><c> infinity</c><01:02:53.280><c> so</c><01:02:53.440><c> it's</c><01:02:53.520><c> kind</c><01:02:53.680><c> of</c><01:02:53.760><c> like</c><01:02:53.920><c> a</c>

01:02:53.990 --> 01:02:54.000 align:start position:0%
negative infinity so it's kind of like a
 

01:02:54.000 --> 01:02:55.270 align:start position:0%
negative infinity so it's kind of like a
nice<01:02:54.160><c> fix</c><01:02:54.400><c> that</c><01:02:54.480><c> people</c><01:02:54.720><c> like</c><01:02:54.880><c> to</c><01:02:55.039><c> apply</c>

01:02:55.270 --> 01:02:55.280 align:start position:0%
nice fix that people like to apply
 

01:02:55.280 --> 01:02:56.230 align:start position:0%
nice fix that people like to apply
sometimes<01:02:55.680><c> and</c><01:02:55.760><c> it's</c><01:02:55.839><c> called</c><01:02:56.000><c> model</c>

01:02:56.230 --> 01:02:56.240 align:start position:0%
sometimes and it's called model
 

01:02:56.240 --> 01:02:58.309 align:start position:0%
sometimes and it's called model
smoothing<01:02:57.039><c> okay</c><01:02:57.280><c> so</c><01:02:57.440><c> we've</c><01:02:57.599><c> now</c><01:02:57.839><c> trained</c><01:02:58.160><c> a</c>

01:02:58.309 --> 01:02:58.319 align:start position:0%
smoothing okay so we've now trained a
 

01:02:58.319 --> 01:03:00.470 align:start position:0%
smoothing okay so we've now trained a
respectable<01:02:59.280><c> bi-gram</c><01:02:59.920><c> character</c><01:03:00.240><c> level</c>

01:03:00.470 --> 01:03:00.480 align:start position:0%
respectable bi-gram character level
 

01:03:00.480 --> 01:03:04.150 align:start position:0%
respectable bi-gram character level
language<01:03:00.799><c> model</c><01:03:01.359><c> and</c><01:03:01.520><c> we</c><01:03:01.680><c> saw</c><01:03:02.000><c> that</c><01:03:02.160><c> we</c><01:03:02.799><c> both</c>

01:03:04.150 --> 01:03:04.160 align:start position:0%
language model and we saw that we both
 

01:03:04.160 --> 01:03:05.910 align:start position:0%
language model and we saw that we both
sort<01:03:04.319><c> of</c><01:03:04.480><c> trained</c><01:03:04.880><c> the</c><01:03:04.960><c> model</c><01:03:05.359><c> by</c><01:03:05.520><c> looking</c><01:03:05.839><c> at</c>

01:03:05.910 --> 01:03:05.920 align:start position:0%
sort of trained the model by looking at
 

01:03:05.920 --> 01:03:08.069 align:start position:0%
sort of trained the model by looking at
the<01:03:06.079><c> counts</c><01:03:06.319><c> of</c><01:03:06.480><c> all</c><01:03:06.559><c> the</c><01:03:06.720><c> bigrams</c><01:03:07.760><c> and</c>

01:03:08.069 --> 01:03:08.079 align:start position:0%
the counts of all the bigrams and
 

01:03:08.079 --> 01:03:09.990 align:start position:0%
the counts of all the bigrams and
normalizing<01:03:08.640><c> the</c><01:03:08.799><c> rows</c><01:03:09.200><c> to</c><01:03:09.280><c> get</c><01:03:09.440><c> probability</c>

01:03:09.990 --> 01:03:10.000 align:start position:0%
normalizing the rows to get probability
 

01:03:10.000 --> 01:03:11.430 align:start position:0%
normalizing the rows to get probability
distributions

01:03:11.430 --> 01:03:11.440 align:start position:0%
distributions
 

01:03:11.440 --> 01:03:14.150 align:start position:0%
distributions
we<01:03:11.599><c> saw</c><01:03:11.839><c> that</c><01:03:12.000><c> we</c><01:03:12.079><c> can</c><01:03:12.319><c> also</c><01:03:12.640><c> then</c><01:03:12.960><c> use</c><01:03:13.520><c> those</c>

01:03:14.150 --> 01:03:14.160 align:start position:0%
we saw that we can also then use those
 

01:03:14.160 --> 01:03:16.549 align:start position:0%
we saw that we can also then use those
parameters<01:03:14.720><c> of</c><01:03:14.799><c> this</c><01:03:14.960><c> model</c><01:03:15.599><c> to</c><01:03:15.760><c> perform</c>

01:03:16.549 --> 01:03:16.559 align:start position:0%
parameters of this model to perform
 

01:03:16.559 --> 01:03:19.430 align:start position:0%
parameters of this model to perform
sampling<01:03:17.119><c> of</c><01:03:17.280><c> new</c><01:03:17.520><c> words</c>

01:03:19.430 --> 01:03:19.440 align:start position:0%
sampling of new words
 

01:03:19.440 --> 01:03:20.950 align:start position:0%
sampling of new words
so<01:03:19.599><c> we</c><01:03:19.760><c> sample</c><01:03:20.079><c> new</c><01:03:20.240><c> names</c><01:03:20.480><c> according</c><01:03:20.880><c> to</c>

01:03:20.950 --> 01:03:20.960 align:start position:0%
so we sample new names according to
 

01:03:20.960 --> 01:03:22.950 align:start position:0%
so we sample new names according to
those<01:03:21.200><c> distributions</c><01:03:22.160><c> and</c><01:03:22.240><c> we</c><01:03:22.400><c> also</c><01:03:22.640><c> saw</c><01:03:22.799><c> that</c>

01:03:22.950 --> 01:03:22.960 align:start position:0%
those distributions and we also saw that
 

01:03:22.960 --> 01:03:24.549 align:start position:0%
those distributions and we also saw that
we<01:03:23.039><c> can</c><01:03:23.200><c> evaluate</c><01:03:23.760><c> the</c><01:03:23.920><c> quality</c><01:03:24.240><c> of</c><01:03:24.400><c> this</c>

01:03:24.549 --> 01:03:24.559 align:start position:0%
we can evaluate the quality of this
 

01:03:24.559 --> 01:03:26.549 align:start position:0%
we can evaluate the quality of this
model<01:03:25.359><c> and</c><01:03:25.520><c> the</c><01:03:25.680><c> quality</c><01:03:25.920><c> of</c><01:03:26.000><c> this</c><01:03:26.160><c> model</c><01:03:26.480><c> is</c>

01:03:26.549 --> 01:03:26.559 align:start position:0%
model and the quality of this model is
 

01:03:26.559 --> 01:03:28.309 align:start position:0%
model and the quality of this model is
summarized<01:03:26.960><c> in</c><01:03:27.039><c> a</c><01:03:27.119><c> single</c><01:03:27.440><c> number</c><01:03:27.920><c> which</c><01:03:28.160><c> is</c>

01:03:28.309 --> 01:03:28.319 align:start position:0%
summarized in a single number which is
 

01:03:28.319 --> 01:03:30.150 align:start position:0%
summarized in a single number which is
the<01:03:28.400><c> negative</c><01:03:28.799><c> log</c><01:03:29.039><c> likelihood</c><01:03:29.839><c> and</c><01:03:30.000><c> the</c>

01:03:30.150 --> 01:03:30.160 align:start position:0%
the negative log likelihood and the
 

01:03:30.160 --> 01:03:32.069 align:start position:0%
the negative log likelihood and the
lower<01:03:30.480><c> this</c><01:03:30.720><c> number</c><01:03:31.039><c> is</c><01:03:31.520><c> the</c><01:03:31.680><c> better</c><01:03:31.920><c> the</c>

01:03:32.069 --> 01:03:32.079 align:start position:0%
lower this number is the better the
 

01:03:32.079 --> 01:03:33.270 align:start position:0%
lower this number is the better the
model<01:03:32.400><c> is</c>

01:03:33.270 --> 01:03:33.280 align:start position:0%
model is
 

01:03:33.280 --> 01:03:35.430 align:start position:0%
model is
because<01:03:33.599><c> it</c><01:03:33.839><c> is</c><01:03:34.160><c> giving</c><01:03:34.480><c> high</c><01:03:34.640><c> probabilities</c>

01:03:35.430 --> 01:03:35.440 align:start position:0%
because it is giving high probabilities
 

01:03:35.440 --> 01:03:37.670 align:start position:0%
because it is giving high probabilities
to<01:03:35.599><c> the</c><01:03:35.839><c> actual</c><01:03:36.240><c> next</c><01:03:36.480><c> characters</c><01:03:37.280><c> in</c><01:03:37.440><c> all</c><01:03:37.520><c> the</c>

01:03:37.670 --> 01:03:37.680 align:start position:0%
to the actual next characters in all the
 

01:03:37.680 --> 01:03:40.150 align:start position:0%
to the actual next characters in all the
bi-grams<01:03:38.079><c> in</c><01:03:38.240><c> our</c><01:03:38.319><c> training</c><01:03:38.640><c> set</c>

01:03:40.150 --> 01:03:40.160 align:start position:0%
bi-grams in our training set
 

01:03:40.160 --> 01:03:42.390 align:start position:0%
bi-grams in our training set
so<01:03:40.559><c> that's</c><01:03:40.799><c> all</c><01:03:41.039><c> well</c><01:03:41.280><c> and</c><01:03:41.359><c> good</c><01:03:42.000><c> but</c><01:03:42.160><c> we've</c>

01:03:42.390 --> 01:03:42.400 align:start position:0%
so that's all well and good but we've
 

01:03:42.400 --> 01:03:44.390 align:start position:0%
so that's all well and good but we've
arrived<01:03:42.799><c> at</c><01:03:42.960><c> this</c><01:03:43.119><c> model</c><01:03:43.599><c> explicitly</c><01:03:44.240><c> by</c>

01:03:44.390 --> 01:03:44.400 align:start position:0%
arrived at this model explicitly by
 

01:03:44.400 --> 01:03:46.150 align:start position:0%
arrived at this model explicitly by
doing<01:03:44.640><c> something</c><01:03:44.880><c> that</c><01:03:45.119><c> felt</c><01:03:45.520><c> sensible</c><01:03:46.000><c> we</c>

01:03:46.150 --> 01:03:46.160 align:start position:0%
doing something that felt sensible we
 

01:03:46.160 --> 01:03:48.870 align:start position:0%
doing something that felt sensible we
were<01:03:46.559><c> just</c><01:03:46.720><c> performing</c><01:03:47.200><c> counts</c><01:03:48.000><c> and</c><01:03:48.160><c> then</c><01:03:48.720><c> we</c>

01:03:48.870 --> 01:03:48.880 align:start position:0%
were just performing counts and then we
 

01:03:48.880 --> 01:03:50.870 align:start position:0%
were just performing counts and then we
were<01:03:49.039><c> normalizing</c><01:03:49.520><c> those</c><01:03:49.760><c> counts</c>

01:03:50.870 --> 01:03:50.880 align:start position:0%
were normalizing those counts
 

01:03:50.880 --> 01:03:52.069 align:start position:0%
were normalizing those counts
now<01:03:51.119><c> what</c><01:03:51.200><c> i</c><01:03:51.280><c> would</c><01:03:51.440><c> like</c><01:03:51.520><c> to</c><01:03:51.599><c> do</c><01:03:51.760><c> is</c><01:03:51.920><c> i</c><01:03:52.000><c> would</c>

01:03:52.069 --> 01:03:52.079 align:start position:0%
now what i would like to do is i would
 

01:03:52.079 --> 01:03:54.150 align:start position:0%
now what i would like to do is i would
like<01:03:52.240><c> to</c><01:03:52.319><c> take</c><01:03:52.559><c> an</c><01:03:52.720><c> alternative</c><01:03:53.359><c> approach</c><01:03:54.000><c> we</c>

01:03:54.150 --> 01:03:54.160 align:start position:0%
like to take an alternative approach we
 

01:03:54.160 --> 01:03:55.750 align:start position:0%
like to take an alternative approach we
will<01:03:54.400><c> end</c><01:03:54.559><c> up</c><01:03:54.720><c> in</c><01:03:54.880><c> a</c><01:03:54.960><c> very</c><01:03:55.200><c> very</c><01:03:55.359><c> similar</c>

01:03:55.750 --> 01:03:55.760 align:start position:0%
will end up in a very very similar
 

01:03:55.760 --> 01:03:57.430 align:start position:0%
will end up in a very very similar
position<01:03:56.319><c> but</c><01:03:56.559><c> the</c><01:03:56.640><c> approach</c><01:03:56.960><c> will</c><01:03:57.119><c> look</c><01:03:57.280><c> very</c>

01:03:57.430 --> 01:03:57.440 align:start position:0%
position but the approach will look very
 

01:03:57.440 --> 01:03:59.270 align:start position:0%
position but the approach will look very
different<01:03:58.160><c> because</c><01:03:58.400><c> i</c><01:03:58.480><c> would</c><01:03:58.559><c> like</c><01:03:58.720><c> to</c><01:03:58.880><c> cast</c>

01:03:59.270 --> 01:03:59.280 align:start position:0%
different because i would like to cast
 

01:03:59.280 --> 01:04:00.870 align:start position:0%
different because i would like to cast
the<01:03:59.440><c> problem</c><01:03:59.760><c> of</c><01:03:59.920><c> bi-gram</c><01:04:00.400><c> character</c><01:04:00.720><c> level</c>

01:04:00.870 --> 01:04:00.880 align:start position:0%
the problem of bi-gram character level
 

01:04:00.880 --> 01:04:02.630 align:start position:0%
the problem of bi-gram character level
language<01:04:01.200><c> modeling</c><01:04:01.839><c> into</c><01:04:02.240><c> the</c><01:04:02.400><c> neural</c>

01:04:02.630 --> 01:04:02.640 align:start position:0%
language modeling into the neural
 

01:04:02.640 --> 01:04:04.150 align:start position:0%
language modeling into the neural
network<01:04:02.960><c> framework</c>

01:04:04.150 --> 01:04:04.160 align:start position:0%
network framework
 

01:04:04.160 --> 01:04:05.589 align:start position:0%
network framework
in<01:04:04.319><c> the</c><01:04:04.400><c> neural</c><01:04:04.640><c> network</c><01:04:04.960><c> framework</c><01:04:05.280><c> we're</c>

01:04:05.589 --> 01:04:05.599 align:start position:0%
in the neural network framework we're
 

01:04:05.599 --> 01:04:07.589 align:start position:0%
in the neural network framework we're
going<01:04:05.839><c> to</c><01:04:06.000><c> approach</c><01:04:06.720><c> things</c><01:04:07.200><c> slightly</c>

01:04:07.589 --> 01:04:07.599 align:start position:0%
going to approach things slightly
 

01:04:07.599 --> 01:04:09.270 align:start position:0%
going to approach things slightly
differently<01:04:08.079><c> but</c><01:04:08.319><c> again</c><01:04:08.640><c> end</c><01:04:08.799><c> up</c><01:04:08.880><c> in</c><01:04:08.960><c> a</c><01:04:09.119><c> very</c>

01:04:09.270 --> 01:04:09.280 align:start position:0%
differently but again end up in a very
 

01:04:09.280 --> 01:04:12.549 align:start position:0%
differently but again end up in a very
similar<01:04:09.599><c> spot</c><01:04:10.160><c> i'll</c><01:04:10.319><c> go</c><01:04:10.480><c> into</c><01:04:10.640><c> that</c><01:04:10.839><c> later</c><01:04:11.920><c> now</c>

01:04:12.549 --> 01:04:12.559 align:start position:0%
similar spot i'll go into that later now
 

01:04:12.559 --> 01:04:14.870 align:start position:0%
similar spot i'll go into that later now
our<01:04:12.720><c> neural</c><01:04:12.960><c> network</c><01:04:13.760><c> is</c><01:04:14.160><c> going</c><01:04:14.400><c> to</c><01:04:14.480><c> be</c><01:04:14.720><c> a</c>

01:04:14.870 --> 01:04:14.880 align:start position:0%
our neural network is going to be a
 

01:04:14.880 --> 01:04:16.230 align:start position:0%
our neural network is going to be a
still<01:04:15.200><c> a</c><01:04:15.280><c> background</c><01:04:15.680><c> character</c><01:04:16.000><c> level</c>

01:04:16.230 --> 01:04:16.240 align:start position:0%
still a background character level
 

01:04:16.240 --> 01:04:18.630 align:start position:0%
still a background character level
language<01:04:16.559><c> model</c><01:04:17.200><c> so</c><01:04:17.440><c> it</c><01:04:17.680><c> receives</c><01:04:18.079><c> a</c><01:04:18.240><c> single</c>

01:04:18.630 --> 01:04:18.640 align:start position:0%
language model so it receives a single
 

01:04:18.640 --> 01:04:20.309 align:start position:0%
language model so it receives a single
character<01:04:19.119><c> as</c><01:04:19.280><c> an</c><01:04:19.440><c> input</c>

01:04:20.309 --> 01:04:20.319 align:start position:0%
character as an input
 

01:04:20.319 --> 01:04:21.750 align:start position:0%
character as an input
then<01:04:20.480><c> there's</c><01:04:20.720><c> neural</c><01:04:20.960><c> network</c><01:04:21.359><c> with</c><01:04:21.520><c> some</c>

01:04:21.750 --> 01:04:21.760 align:start position:0%
then there's neural network with some
 

01:04:21.760 --> 01:04:24.069 align:start position:0%
then there's neural network with some
weights<01:04:22.160><c> or</c><01:04:22.319><c> some</c><01:04:22.480><c> parameters</c><01:04:22.960><c> w</c>

01:04:24.069 --> 01:04:24.079 align:start position:0%
weights or some parameters w
 

01:04:24.079 --> 01:04:26.470 align:start position:0%
weights or some parameters w
and<01:04:24.400><c> it's</c><01:04:24.640><c> going</c><01:04:24.799><c> to</c><01:04:25.039><c> output</c><01:04:25.839><c> the</c><01:04:26.000><c> probability</c>

01:04:26.470 --> 01:04:26.480 align:start position:0%
and it's going to output the probability
 

01:04:26.480 --> 01:04:28.390 align:start position:0%
and it's going to output the probability
distribution<01:04:27.280><c> over</c><01:04:27.520><c> the</c><01:04:27.680><c> next</c><01:04:27.920><c> character</c><01:04:28.319><c> in</c>

01:04:28.390 --> 01:04:28.400 align:start position:0%
distribution over the next character in
 

01:04:28.400 --> 01:04:30.549 align:start position:0%
distribution over the next character in
a<01:04:28.480><c> sequence</c><01:04:29.039><c> it's</c><01:04:29.280><c> going</c><01:04:29.440><c> to</c><01:04:29.520><c> make</c><01:04:29.760><c> guesses</c><01:04:30.400><c> as</c>

01:04:30.549 --> 01:04:30.559 align:start position:0%
a sequence it's going to make guesses as
 

01:04:30.559 --> 01:04:32.630 align:start position:0%
a sequence it's going to make guesses as
to<01:04:30.799><c> what</c><01:04:31.039><c> is</c><01:04:31.200><c> likely</c><01:04:31.520><c> to</c><01:04:31.680><c> follow</c><01:04:32.400><c> this</c>

01:04:32.630 --> 01:04:32.640 align:start position:0%
to what is likely to follow this
 

01:04:32.640 --> 01:04:35.829 align:start position:0%
to what is likely to follow this
character<01:04:33.039><c> that</c><01:04:33.200><c> was</c><01:04:33.680><c> input</c><01:04:33.920><c> to</c><01:04:34.079><c> the</c><01:04:34.160><c> model</c>

01:04:35.829 --> 01:04:35.839 align:start position:0%
character that was input to the model
 

01:04:35.839 --> 01:04:37.670 align:start position:0%
character that was input to the model
and<01:04:36.000><c> then</c><01:04:36.160><c> in</c><01:04:36.319><c> addition</c><01:04:36.720><c> to</c><01:04:36.799><c> that</c><01:04:37.440><c> we're</c><01:04:37.599><c> going</c>

01:04:37.670 --> 01:04:37.680 align:start position:0%
and then in addition to that we're going
 

01:04:37.680 --> 01:04:39.670 align:start position:0%
and then in addition to that we're going
to<01:04:37.760><c> be</c><01:04:37.920><c> able</c><01:04:38.000><c> to</c><01:04:38.240><c> evaluate</c><01:04:38.880><c> any</c><01:04:39.039><c> setting</c><01:04:39.520><c> of</c>

01:04:39.670 --> 01:04:39.680 align:start position:0%
to be able to evaluate any setting of
 

01:04:39.680 --> 01:04:41.510 align:start position:0%
to be able to evaluate any setting of
the<01:04:39.839><c> parameters</c><01:04:40.319><c> of</c><01:04:40.400><c> the</c><01:04:40.559><c> neural</c><01:04:40.799><c> net</c><01:04:41.280><c> because</c>

01:04:41.510 --> 01:04:41.520 align:start position:0%
the parameters of the neural net because
 

01:04:41.520 --> 01:04:43.589 align:start position:0%
the parameters of the neural net because
we<01:04:41.599><c> have</c><01:04:41.760><c> the</c><01:04:41.839><c> loss</c><01:04:42.079><c> function</c>

01:04:43.589 --> 01:04:43.599 align:start position:0%
we have the loss function
 

01:04:43.599 --> 01:04:45.190 align:start position:0%
we have the loss function
the<01:04:43.760><c> negative</c><01:04:44.079><c> log</c><01:04:44.319><c> likelihood</c><01:04:44.880><c> so</c><01:04:45.039><c> we're</c>

01:04:45.190 --> 01:04:45.200 align:start position:0%
the negative log likelihood so we're
 

01:04:45.200 --> 01:04:46.470 align:start position:0%
the negative log likelihood so we're
going<01:04:45.280><c> to</c><01:04:45.440><c> take</c><01:04:45.599><c> a</c><01:04:45.680><c> look</c><01:04:45.760><c> at</c><01:04:45.920><c> its</c><01:04:46.079><c> probability</c>

01:04:46.470 --> 01:04:46.480 align:start position:0%
going to take a look at its probability
 

01:04:46.480 --> 01:04:48.230 align:start position:0%
going to take a look at its probability
distributions<01:04:47.280><c> and</c><01:04:47.440><c> we're</c><01:04:47.599><c> going</c><01:04:47.760><c> to</c><01:04:47.839><c> use</c><01:04:48.079><c> the</c>

01:04:48.230 --> 01:04:48.240 align:start position:0%
distributions and we're going to use the
 

01:04:48.240 --> 01:04:49.990 align:start position:0%
distributions and we're going to use the
labels

01:04:49.990 --> 01:04:50.000 align:start position:0%
labels
 

01:04:50.000 --> 01:04:51.670 align:start position:0%
labels
which<01:04:50.319><c> are</c><01:04:50.400><c> basically</c><01:04:50.799><c> just</c><01:04:51.039><c> the</c><01:04:51.119><c> identity</c><01:04:51.599><c> of</c>

01:04:51.670 --> 01:04:51.680 align:start position:0%
which are basically just the identity of
 

01:04:51.680 --> 01:04:53.349 align:start position:0%
which are basically just the identity of
the<01:04:51.760><c> next</c><01:04:52.000><c> character</c><01:04:52.480><c> in</c><01:04:52.559><c> that</c><01:04:52.720><c> diagram</c><01:04:53.200><c> the</c>

01:04:53.349 --> 01:04:53.359 align:start position:0%
the next character in that diagram the
 

01:04:53.359 --> 01:04:54.630 align:start position:0%
the next character in that diagram the
second<01:04:53.599><c> character</c>

01:04:54.630 --> 01:04:54.640 align:start position:0%
second character
 

01:04:54.640 --> 01:04:56.390 align:start position:0%
second character
so<01:04:54.880><c> knowing</c><01:04:55.520><c> what</c><01:04:55.760><c> second</c><01:04:56.079><c> character</c>

01:04:56.390 --> 01:04:56.400 align:start position:0%
so knowing what second character
 

01:04:56.400 --> 01:04:58.390 align:start position:0%
so knowing what second character
actually<01:04:56.720><c> comes</c><01:04:56.960><c> next</c><01:04:57.200><c> in</c><01:04:57.280><c> the</c><01:04:57.359><c> bigram</c><01:04:58.079><c> allows</c>

01:04:58.390 --> 01:04:58.400 align:start position:0%
actually comes next in the bigram allows
 

01:04:58.400 --> 01:05:00.789 align:start position:0%
actually comes next in the bigram allows
us<01:04:58.559><c> to</c><01:04:58.720><c> then</c><01:04:59.039><c> look</c><01:04:59.280><c> at</c><01:04:59.839><c> what</c><01:05:00.160><c> how</c><01:05:00.400><c> high</c><01:05:00.640><c> of</c>

01:05:00.789 --> 01:05:00.799 align:start position:0%
us to then look at what how high of
 

01:05:00.799 --> 01:05:02.789 align:start position:0%
us to then look at what how high of
probability<01:05:01.520><c> the</c><01:05:01.680><c> model</c><01:05:02.000><c> assigns</c><01:05:02.400><c> to</c><01:05:02.559><c> that</c>

01:05:02.789 --> 01:05:02.799 align:start position:0%
probability the model assigns to that
 

01:05:02.799 --> 01:05:03.829 align:start position:0%
probability the model assigns to that
character

01:05:03.829 --> 01:05:03.839 align:start position:0%
character
 

01:05:03.839 --> 01:05:05.029 align:start position:0%
character
and<01:05:04.000><c> then</c><01:05:04.240><c> we</c><01:05:04.480><c> of</c><01:05:04.559><c> course</c><01:05:04.720><c> want</c><01:05:04.960><c> the</c>

01:05:05.029 --> 01:05:05.039 align:start position:0%
and then we of course want the
 

01:05:05.039 --> 01:05:06.950 align:start position:0%
and then we of course want the
probability<01:05:05.359><c> to</c><01:05:05.440><c> be</c><01:05:05.599><c> very</c><01:05:05.760><c> high</c>

01:05:06.950 --> 01:05:06.960 align:start position:0%
probability to be very high
 

01:05:06.960 --> 01:05:08.789 align:start position:0%
probability to be very high
and<01:05:07.119><c> that</c><01:05:07.280><c> is</c><01:05:07.440><c> another</c><01:05:07.680><c> way</c><01:05:07.839><c> of</c><01:05:07.920><c> saying</c><01:05:08.400><c> that</c>

01:05:08.789 --> 01:05:08.799 align:start position:0%
and that is another way of saying that
 

01:05:08.799 --> 01:05:10.710 align:start position:0%
and that is another way of saying that
the<01:05:08.960><c> loss</c><01:05:09.280><c> is</c><01:05:09.440><c> low</c>

01:05:10.710 --> 01:05:10.720 align:start position:0%
the loss is low
 

01:05:10.720 --> 01:05:12.470 align:start position:0%
the loss is low
so<01:05:11.119><c> we're</c><01:05:11.280><c> going</c><01:05:11.440><c> to</c><01:05:11.520><c> use</c><01:05:11.920><c> gradient-based</c>

01:05:12.470 --> 01:05:12.480 align:start position:0%
so we're going to use gradient-based
 

01:05:12.480 --> 01:05:14.309 align:start position:0%
so we're going to use gradient-based
optimization<01:05:13.119><c> then</c><01:05:13.440><c> to</c><01:05:13.599><c> tune</c><01:05:13.839><c> the</c><01:05:13.920><c> parameters</c>

01:05:14.309 --> 01:05:14.319 align:start position:0%
optimization then to tune the parameters
 

01:05:14.319 --> 01:05:16.150 align:start position:0%
optimization then to tune the parameters
of<01:05:14.400><c> this</c><01:05:14.559><c> network</c><01:05:15.359><c> because</c><01:05:15.599><c> we</c><01:05:15.680><c> have</c><01:05:15.839><c> the</c><01:05:15.920><c> loss</c>

01:05:16.150 --> 01:05:16.160 align:start position:0%
of this network because we have the loss
 

01:05:16.160 --> 01:05:18.309 align:start position:0%
of this network because we have the loss
function<01:05:16.960><c> and</c><01:05:17.039><c> we're</c><01:05:17.200><c> going</c><01:05:17.359><c> to</c><01:05:17.440><c> minimize</c><01:05:17.920><c> it</c>

01:05:18.309 --> 01:05:18.319 align:start position:0%
function and we're going to minimize it
 

01:05:18.319 --> 01:05:20.230 align:start position:0%
function and we're going to minimize it
so<01:05:18.480><c> we're</c><01:05:18.640><c> going</c><01:05:18.799><c> to</c><01:05:18.960><c> tune</c><01:05:19.200><c> the</c><01:05:19.359><c> weights</c><01:05:20.079><c> so</c>

01:05:20.230 --> 01:05:20.240 align:start position:0%
so we're going to tune the weights so
 

01:05:20.240 --> 01:05:21.670 align:start position:0%
so we're going to tune the weights so
that<01:05:20.400><c> the</c><01:05:20.480><c> neural</c><01:05:20.720><c> net</c><01:05:21.039><c> is</c><01:05:21.280><c> correctly</c>

01:05:21.670 --> 01:05:21.680 align:start position:0%
that the neural net is correctly
 

01:05:21.680 --> 01:05:22.950 align:start position:0%
that the neural net is correctly
predicting<01:05:22.079><c> the</c><01:05:22.160><c> probabilities</c><01:05:22.720><c> for</c><01:05:22.880><c> the</c>

01:05:22.950 --> 01:05:22.960 align:start position:0%
predicting the probabilities for the
 

01:05:22.960 --> 01:05:24.309 align:start position:0%
predicting the probabilities for the
next<01:05:23.119><c> character</c>

01:05:24.309 --> 01:05:24.319 align:start position:0%
next character
 

01:05:24.319 --> 01:05:26.069 align:start position:0%
next character
so<01:05:24.720><c> let's</c><01:05:24.880><c> get</c><01:05:25.039><c> started</c><01:05:25.520><c> the</c><01:05:25.599><c> first</c><01:05:25.760><c> thing</c><01:05:25.920><c> i</c>

01:05:26.069 --> 01:05:26.079 align:start position:0%
so let's get started the first thing i
 

01:05:26.079 --> 01:05:27.510 align:start position:0%
so let's get started the first thing i
want<01:05:26.160><c> to</c><01:05:26.240><c> do</c><01:05:26.480><c> is</c><01:05:26.559><c> i</c><01:05:26.640><c> want</c><01:05:26.799><c> to</c><01:05:26.880><c> compile</c><01:05:27.359><c> the</c>

01:05:27.510 --> 01:05:27.520 align:start position:0%
want to do is i want to compile the
 

01:05:27.520 --> 01:05:29.190 align:start position:0%
want to do is i want to compile the
training<01:05:27.920><c> set</c><01:05:28.240><c> of</c><01:05:28.400><c> this</c><01:05:28.559><c> neural</c><01:05:28.799><c> network</c>

01:05:29.190 --> 01:05:29.200 align:start position:0%
training set of this neural network
 

01:05:29.200 --> 01:05:30.230 align:start position:0%
training set of this neural network
right<01:05:29.520><c> so</c>

01:05:30.230 --> 01:05:30.240 align:start position:0%
right so
 

01:05:30.240 --> 01:05:31.270 align:start position:0%
right so
create

01:05:31.270 --> 01:05:31.280 align:start position:0%
create
 

01:05:31.280 --> 01:05:33.029 align:start position:0%
create
the<01:05:31.440><c> training</c><01:05:31.839><c> set</c>

01:05:33.029 --> 01:05:33.039 align:start position:0%
the training set
 

01:05:33.039 --> 01:05:36.309 align:start position:0%
the training set
of<01:05:33.280><c> all</c><01:05:33.359><c> the</c><01:05:33.520><c> bigrams</c>

01:05:36.309 --> 01:05:36.319 align:start position:0%
of all the bigrams
 

01:05:36.319 --> 01:05:37.589 align:start position:0%
of all the bigrams
okay

01:05:37.589 --> 01:05:37.599 align:start position:0%
okay
 

01:05:37.599 --> 01:05:39.349 align:start position:0%
okay
and

01:05:39.349 --> 01:05:39.359 align:start position:0%
and
 

01:05:39.359 --> 01:05:40.630 align:start position:0%
and
here

01:05:40.630 --> 01:05:40.640 align:start position:0%
here
 

01:05:40.640 --> 01:05:43.670 align:start position:0%
here
i'm<01:05:40.799><c> going</c><01:05:41.039><c> to</c><01:05:41.280><c> copy</c><01:05:41.680><c> paste</c><01:05:42.240><c> this</c><01:05:42.480><c> code</c>

01:05:43.670 --> 01:05:43.680 align:start position:0%
i'm going to copy paste this code
 

01:05:43.680 --> 01:05:45.109 align:start position:0%
i'm going to copy paste this code
because<01:05:43.920><c> this</c><01:05:44.079><c> code</c><01:05:44.319><c> iterates</c><01:05:44.720><c> over</c><01:05:44.880><c> all</c><01:05:45.039><c> the</c>

01:05:45.109 --> 01:05:45.119 align:start position:0%
because this code iterates over all the
 

01:05:45.119 --> 01:05:47.349 align:start position:0%
because this code iterates over all the
programs

01:05:47.349 --> 01:05:47.359 align:start position:0%
programs
 

01:05:47.359 --> 01:05:48.950 align:start position:0%
programs
so<01:05:47.520><c> here</c><01:05:47.680><c> we</c><01:05:47.839><c> start</c><01:05:48.000><c> with</c><01:05:48.160><c> the</c><01:05:48.240><c> words</c><01:05:48.799><c> we</c>

01:05:48.950 --> 01:05:48.960 align:start position:0%
so here we start with the words we
 

01:05:48.960 --> 01:05:50.549 align:start position:0%
so here we start with the words we
iterate<01:05:49.280><c> over</c><01:05:49.520><c> all</c><01:05:49.599><c> the</c><01:05:49.680><c> bygrams</c><01:05:50.400><c> and</c>

01:05:50.549 --> 01:05:50.559 align:start position:0%
iterate over all the bygrams and
 

01:05:50.559 --> 01:05:52.230 align:start position:0%
iterate over all the bygrams and
previously<01:05:51.119><c> as</c><01:05:51.200><c> you</c><01:05:51.280><c> recall</c><01:05:51.680><c> we</c><01:05:51.839><c> did</c><01:05:52.079><c> the</c>

01:05:52.230 --> 01:05:52.240 align:start position:0%
previously as you recall we did the
 

01:05:52.240 --> 01:05:53.990 align:start position:0%
previously as you recall we did the
counts<01:05:52.960><c> but</c><01:05:53.119><c> now</c><01:05:53.280><c> we're</c><01:05:53.440><c> not</c><01:05:53.599><c> going</c><01:05:53.760><c> to</c><01:05:53.839><c> do</c>

01:05:53.990 --> 01:05:54.000 align:start position:0%
counts but now we're not going to do
 

01:05:54.000 --> 01:05:55.750 align:start position:0%
counts but now we're not going to do
counts<01:05:54.400><c> we're</c><01:05:54.559><c> just</c><01:05:54.960><c> creating</c><01:05:55.280><c> a</c><01:05:55.359><c> training</c>

01:05:55.750 --> 01:05:55.760 align:start position:0%
counts we're just creating a training
 

01:05:55.760 --> 01:05:56.789 align:start position:0%
counts we're just creating a training
set

01:05:56.789 --> 01:05:56.799 align:start position:0%
set
 

01:05:56.799 --> 01:05:58.630 align:start position:0%
set
now<01:05:56.960><c> this</c><01:05:57.200><c> training</c><01:05:57.520><c> set</c><01:05:57.760><c> will</c><01:05:57.920><c> be</c><01:05:58.000><c> made</c><01:05:58.240><c> up</c><01:05:58.400><c> of</c>

01:05:58.630 --> 01:05:58.640 align:start position:0%
now this training set will be made up of
 

01:05:58.640 --> 01:06:01.990 align:start position:0%
now this training set will be made up of
two<01:05:59.280><c> lists</c>

01:06:01.990 --> 01:06:02.000 align:start position:0%
 
 

01:06:02.000 --> 01:06:04.630 align:start position:0%
 
we<01:06:02.240><c> have</c><01:06:02.480><c> the</c>

01:06:04.630 --> 01:06:04.640 align:start position:0%
we have the
 

01:06:04.640 --> 01:06:06.230 align:start position:0%
we have the
inputs

01:06:06.230 --> 01:06:06.240 align:start position:0%
inputs
 

01:06:06.240 --> 01:06:07.670 align:start position:0%
inputs
and<01:06:06.480><c> the</c><01:06:06.640><c> targets</c>

01:06:07.670 --> 01:06:07.680 align:start position:0%
and the targets
 

01:06:07.680 --> 01:06:09.430 align:start position:0%
and the targets
the<01:06:07.920><c> the</c><01:06:08.079><c> labels</c>

01:06:09.430 --> 01:06:09.440 align:start position:0%
the the labels
 

01:06:09.440 --> 01:06:11.430 align:start position:0%
the the labels
and<01:06:09.599><c> these</c><01:06:09.760><c> bi-grams</c><01:06:10.240><c> will</c><01:06:10.400><c> denote</c><01:06:10.799><c> x</c><01:06:10.960><c> y</c><01:06:11.200><c> those</c>

01:06:11.430 --> 01:06:11.440 align:start position:0%
and these bi-grams will denote x y those
 

01:06:11.440 --> 01:06:13.109 align:start position:0%
and these bi-grams will denote x y those
are<01:06:11.520><c> the</c><01:06:11.680><c> characters</c><01:06:12.160><c> right</c>

01:06:13.109 --> 01:06:13.119 align:start position:0%
are the characters right
 

01:06:13.119 --> 01:06:14.789 align:start position:0%
are the characters right
and<01:06:13.280><c> so</c><01:06:13.520><c> we're</c><01:06:13.760><c> given</c><01:06:14.079><c> the</c><01:06:14.240><c> first</c><01:06:14.400><c> character</c>

01:06:14.789 --> 01:06:14.799 align:start position:0%
and so we're given the first character
 

01:06:14.799 --> 01:06:16.150 align:start position:0%
and so we're given the first character
of<01:06:14.880><c> the</c><01:06:14.960><c> bi-gram</c><01:06:15.520><c> and</c><01:06:15.599><c> then</c><01:06:15.760><c> we're</c><01:06:15.920><c> trying</c><01:06:16.079><c> to</c>

01:06:16.150 --> 01:06:16.160 align:start position:0%
of the bi-gram and then we're trying to
 

01:06:16.160 --> 01:06:17.670 align:start position:0%
of the bi-gram and then we're trying to
predict<01:06:16.400><c> the</c><01:06:16.480><c> next</c><01:06:16.640><c> one</c>

01:06:17.670 --> 01:06:17.680 align:start position:0%
predict the next one
 

01:06:17.680 --> 01:06:19.349 align:start position:0%
predict the next one
both<01:06:17.920><c> of</c><01:06:18.000><c> these</c><01:06:18.160><c> are</c><01:06:18.240><c> going</c><01:06:18.400><c> to</c><01:06:18.480><c> be</c><01:06:18.640><c> integers</c>

01:06:19.349 --> 01:06:19.359 align:start position:0%
both of these are going to be integers
 

01:06:19.359 --> 01:06:22.230 align:start position:0%
both of these are going to be integers
so<01:06:19.680><c> here</c><01:06:20.480><c> we'll</c><01:06:20.640><c> take</c><01:06:20.960><c> x's</c><01:06:21.280><c> that</c><01:06:21.520><c> append</c><01:06:22.079><c> is</c>

01:06:22.230 --> 01:06:22.240 align:start position:0%
so here we'll take x's that append is
 

01:06:22.240 --> 01:06:23.510 align:start position:0%
so here we'll take x's that append is
just

01:06:23.510 --> 01:06:23.520 align:start position:0%
just
 

01:06:23.520 --> 01:06:27.589 align:start position:0%
just
x1<01:06:24.400><c> ystat</c><01:06:24.880><c> append</c><01:06:25.440><c> ix2</c>

01:06:27.589 --> 01:06:27.599 align:start position:0%
x1 ystat append ix2
 

01:06:27.599 --> 01:06:29.270 align:start position:0%
x1 ystat append ix2
and<01:06:27.760><c> then</c><01:06:28.000><c> here</c>

01:06:29.270 --> 01:06:29.280 align:start position:0%
and then here
 

01:06:29.280 --> 01:06:31.430 align:start position:0%
and then here
we<01:06:29.440><c> actually</c><01:06:29.680><c> don't</c><01:06:29.839><c> want</c><01:06:30.079><c> lists</c><01:06:30.400><c> of</c><01:06:30.559><c> integers</c>

01:06:31.430 --> 01:06:31.440 align:start position:0%
we actually don't want lists of integers
 

01:06:31.440 --> 01:06:34.069 align:start position:0%
we actually don't want lists of integers
we<01:06:31.680><c> will</c><01:06:31.920><c> create</c><01:06:32.480><c> tensors</c><01:06:32.960><c> out</c><01:06:33.119><c> of</c><01:06:33.200><c> these</c><01:06:33.599><c> so</c>

01:06:34.069 --> 01:06:34.079 align:start position:0%
we will create tensors out of these so
 

01:06:34.079 --> 01:06:38.109 align:start position:0%
we will create tensors out of these so
axis<01:06:34.559><c> is</c><01:06:34.799><c> torch.tensor</c><01:06:36.160><c> of</c><01:06:36.480><c> axis</c><01:06:37.359><c> and</c><01:06:37.599><c> wise</c><01:06:38.000><c> a</c>

01:06:38.109 --> 01:06:38.119 align:start position:0%
axis is torch.tensor of axis and wise a
 

01:06:38.119 --> 01:06:41.430 align:start position:0%
axis is torch.tensor of axis and wise a
storage.tensor<01:06:39.200><c> of</c><01:06:39.440><c> ys</c>

01:06:41.430 --> 01:06:41.440 align:start position:0%
storage.tensor of ys
 

01:06:41.440 --> 01:06:42.390 align:start position:0%
storage.tensor of ys
and<01:06:41.520><c> then</c>

01:06:42.390 --> 01:06:42.400 align:start position:0%
and then
 

01:06:42.400 --> 01:06:43.670 align:start position:0%
and then
we<01:06:42.559><c> don't</c><01:06:42.720><c> actually</c><01:06:42.960><c> want</c><01:06:43.119><c> to</c><01:06:43.200><c> take</c><01:06:43.440><c> all</c><01:06:43.520><c> the</c>

01:06:43.670 --> 01:06:43.680 align:start position:0%
we don't actually want to take all the
 

01:06:43.680 --> 01:06:45.270 align:start position:0%
we don't actually want to take all the
words<01:06:44.000><c> just</c><01:06:44.160><c> yet</c><01:06:44.480><c> because</c><01:06:44.720><c> i</c><01:06:44.799><c> want</c><01:06:45.039><c> everything</c>

01:06:45.270 --> 01:06:45.280 align:start position:0%
words just yet because i want everything
 

01:06:45.280 --> 01:06:46.950 align:start position:0%
words just yet because i want everything
to<01:06:45.359><c> be</c><01:06:45.760><c> manageable</c>

01:06:46.950 --> 01:06:46.960 align:start position:0%
to be manageable
 

01:06:46.960 --> 01:06:48.870 align:start position:0%
to be manageable
so<01:06:47.359><c> let's</c><01:06:47.599><c> just</c><01:06:47.760><c> do</c><01:06:47.920><c> the</c><01:06:48.000><c> first</c><01:06:48.240><c> word</c><01:06:48.480><c> which</c><01:06:48.720><c> is</c>

01:06:48.870 --> 01:06:48.880 align:start position:0%
so let's just do the first word which is
 

01:06:48.880 --> 01:06:51.190 align:start position:0%
so let's just do the first word which is
emma

01:06:51.190 --> 01:06:51.200 align:start position:0%
emma
 

01:06:51.200 --> 01:06:52.870 align:start position:0%
emma
and<01:06:51.280><c> then</c><01:06:51.440><c> it's</c><01:06:51.760><c> clear</c><01:06:52.079><c> what</c><01:06:52.240><c> these</c><01:06:52.480><c> x's</c><01:06:52.799><c> and</c>

01:06:52.870 --> 01:06:52.880 align:start position:0%
and then it's clear what these x's and
 

01:06:52.880 --> 01:06:55.349 align:start position:0%
and then it's clear what these x's and
y's<01:06:53.200><c> would</c><01:06:53.359><c> be</c>

01:06:55.349 --> 01:06:55.359 align:start position:0%
y's would be
 

01:06:55.359 --> 01:06:57.750 align:start position:0%
y's would be
here<01:06:55.599><c> let</c><01:06:55.760><c> me</c><01:06:56.000><c> print</c>

01:06:57.750 --> 01:06:57.760 align:start position:0%
here let me print
 

01:06:57.760 --> 01:06:59.589 align:start position:0%
here let me print
character<01:06:58.160><c> 1</c><01:06:58.400><c> character</c><01:06:58.720><c> 2</c><01:06:58.960><c> just</c><01:06:59.119><c> so</c><01:06:59.280><c> you</c><01:06:59.440><c> see</c>

01:06:59.589 --> 01:06:59.599 align:start position:0%
character 1 character 2 just so you see
 

01:06:59.599 --> 01:07:01.510 align:start position:0%
character 1 character 2 just so you see
what's<01:06:59.760><c> going</c><01:07:00.000><c> on</c><01:07:00.160><c> here</c>

01:07:01.510 --> 01:07:01.520 align:start position:0%
what's going on here
 

01:07:01.520 --> 01:07:04.950 align:start position:0%
what's going on here
so<01:07:01.680><c> the</c><01:07:01.839><c> bigrams</c><01:07:02.720><c> of</c><01:07:02.880><c> these</c><01:07:03.039><c> characters</c><01:07:04.000><c> is</c>

01:07:04.950 --> 01:07:04.960 align:start position:0%
so the bigrams of these characters is
 

01:07:04.960 --> 01:07:09.510 align:start position:0%
so the bigrams of these characters is
dot<01:07:05.280><c> e</c><01:07:05.839><c> e</c><01:07:06.079><c> m</c><01:07:06.480><c> m</c><01:07:07.119><c> m</c><01:07:07.280><c> a</c><01:07:07.839><c> a</c><01:07:08.000><c> dot</c><01:07:08.720><c> so</c><01:07:08.880><c> this</c><01:07:09.200><c> single</c>

01:07:09.510 --> 01:07:09.520 align:start position:0%
dot e e m m m a a dot so this single
 

01:07:09.520 --> 01:07:11.670 align:start position:0%
dot e e m m m a a dot so this single
word<01:07:09.839><c> as</c><01:07:10.000><c> i</c><01:07:10.079><c> mentioned</c><01:07:10.480><c> has</c><01:07:10.640><c> one</c><01:07:10.960><c> two</c><01:07:11.359><c> three</c>

01:07:11.670 --> 01:07:11.680 align:start position:0%
word as i mentioned has one two three
 

01:07:11.680 --> 01:07:13.430 align:start position:0%
word as i mentioned has one two three
four<01:07:12.160><c> five</c><01:07:12.480><c> examples</c><01:07:12.880><c> for</c><01:07:13.039><c> our</c><01:07:13.119><c> neural</c>

01:07:13.430 --> 01:07:13.440 align:start position:0%
four five examples for our neural
 

01:07:13.440 --> 01:07:14.630 align:start position:0%
four five examples for our neural
network

01:07:14.630 --> 01:07:14.640 align:start position:0%
network
 

01:07:14.640 --> 01:07:17.510 align:start position:0%
network
there<01:07:14.880><c> are</c><01:07:15.039><c> five</c><01:07:15.200><c> separate</c><01:07:15.520><c> examples</c><01:07:16.079><c> in</c><01:07:16.319><c> emma</c>

01:07:17.510 --> 01:07:17.520 align:start position:0%
there are five separate examples in emma
 

01:07:17.520 --> 01:07:19.190 align:start position:0%
there are five separate examples in emma
and<01:07:17.599><c> those</c><01:07:17.839><c> examples</c><01:07:18.160><c> are</c><01:07:18.319><c> summarized</c><01:07:18.720><c> here</c>

01:07:19.190 --> 01:07:19.200 align:start position:0%
and those examples are summarized here
 

01:07:19.200 --> 01:07:21.190 align:start position:0%
and those examples are summarized here
when<01:07:19.359><c> the</c><01:07:19.520><c> input</c><01:07:19.760><c> to</c><01:07:19.920><c> the</c><01:07:20.319><c> neural</c><01:07:20.559><c> network</c><01:07:21.039><c> is</c>

01:07:21.190 --> 01:07:21.200 align:start position:0%
when the input to the neural network is
 

01:07:21.200 --> 01:07:23.029 align:start position:0%
when the input to the neural network is
integer<01:07:21.680><c> 0</c>

01:07:23.029 --> 01:07:23.039 align:start position:0%
integer 0
 

01:07:23.039 --> 01:07:25.910 align:start position:0%
integer 0
the<01:07:23.200><c> desired</c><01:07:23.680><c> label</c><01:07:24.400><c> is</c><01:07:24.559><c> integer</c><01:07:25.119><c> 5</c><01:07:25.680><c> which</c>

01:07:25.910 --> 01:07:25.920 align:start position:0%
the desired label is integer 5 which
 

01:07:25.920 --> 01:07:28.630 align:start position:0%
the desired label is integer 5 which
corresponds<01:07:26.480><c> to</c><01:07:26.880><c> e</c><01:07:27.839><c> when</c><01:07:28.000><c> the</c><01:07:28.160><c> input</c><01:07:28.400><c> to</c><01:07:28.480><c> the</c>

01:07:28.630 --> 01:07:28.640 align:start position:0%
corresponds to e when the input to the
 

01:07:28.640 --> 01:07:31.109 align:start position:0%
corresponds to e when the input to the
neural<01:07:28.880><c> network</c><01:07:29.280><c> is</c><01:07:29.440><c> 5</c><01:07:30.240><c> we</c><01:07:30.400><c> want</c><01:07:30.640><c> its</c><01:07:30.799><c> weights</c>

01:07:31.109 --> 01:07:31.119 align:start position:0%
neural network is 5 we want its weights
 

01:07:31.119 --> 01:07:33.589 align:start position:0%
neural network is 5 we want its weights
to<01:07:31.200><c> be</c><01:07:31.280><c> arranged</c><01:07:32.000><c> so</c><01:07:32.240><c> that</c><01:07:32.640><c> 13</c><01:07:33.119><c> gets</c><01:07:33.359><c> a</c><01:07:33.440><c> very</c>

01:07:33.589 --> 01:07:33.599 align:start position:0%
to be arranged so that 13 gets a very
 

01:07:33.599 --> 01:07:35.029 align:start position:0%
to be arranged so that 13 gets a very
high<01:07:33.760><c> probability</c>

01:07:35.029 --> 01:07:35.039 align:start position:0%
high probability
 

01:07:35.039 --> 01:07:37.750 align:start position:0%
high probability
when<01:07:35.280><c> 13</c><01:07:35.680><c> is</c><01:07:35.839><c> put</c><01:07:36.079><c> in</c><01:07:36.400><c> we</c><01:07:36.559><c> want</c><01:07:37.039><c> 13</c><01:07:37.440><c> to</c><01:07:37.599><c> have</c><01:07:37.680><c> a</c>

01:07:37.750 --> 01:07:37.760 align:start position:0%
when 13 is put in we want 13 to have a
 

01:07:37.760 --> 01:07:39.109 align:start position:0%
when 13 is put in we want 13 to have a
high<01:07:37.920><c> probability</c>

01:07:39.109 --> 01:07:39.119 align:start position:0%
high probability
 

01:07:39.119 --> 01:07:41.510 align:start position:0%
high probability
when<01:07:39.280><c> 13</c><01:07:39.680><c> is</c><01:07:39.760><c> put</c><01:07:39.920><c> in</c><01:07:40.160><c> we</c><01:07:40.319><c> also</c><01:07:40.559><c> want</c><01:07:40.880><c> 1</c><01:07:41.280><c> to</c><01:07:41.440><c> have</c>

01:07:41.510 --> 01:07:41.520 align:start position:0%
when 13 is put in we also want 1 to have
 

01:07:41.520 --> 01:07:43.589 align:start position:0%
when 13 is put in we also want 1 to have
a<01:07:41.599><c> high</c><01:07:41.760><c> probability</c>

01:07:43.589 --> 01:07:43.599 align:start position:0%
a high probability
 

01:07:43.599 --> 01:07:45.829 align:start position:0%
a high probability
when<01:07:44.160><c> one</c><01:07:44.319><c> is</c><01:07:44.480><c> input</c><01:07:44.720><c> we</c><01:07:44.880><c> want</c><01:07:45.200><c> zero</c><01:07:45.520><c> to</c><01:07:45.680><c> have</c><01:07:45.760><c> a</c>

01:07:45.829 --> 01:07:45.839 align:start position:0%
when one is input we want zero to have a
 

01:07:45.839 --> 01:07:48.150 align:start position:0%
when one is input we want zero to have a
very<01:07:46.079><c> high</c><01:07:46.240><c> probability</c><01:07:47.359><c> so</c><01:07:47.520><c> there</c><01:07:47.760><c> are</c><01:07:47.920><c> five</c>

01:07:48.150 --> 01:07:48.160 align:start position:0%
very high probability so there are five
 

01:07:48.160 --> 01:07:51.430 align:start position:0%
very high probability so there are five
separate<01:07:48.559><c> input</c><01:07:48.880><c> examples</c><01:07:49.680><c> to</c><01:07:49.920><c> a</c><01:07:50.079><c> neural</c><01:07:50.400><c> nut</c>

01:07:51.430 --> 01:07:51.440 align:start position:0%
separate input examples to a neural nut
 

01:07:51.440 --> 01:07:54.950 align:start position:0%
separate input examples to a neural nut
in<01:07:51.680><c> this</c><01:07:51.920><c> data</c><01:07:52.240><c> set</c>

01:07:54.950 --> 01:07:54.960 align:start position:0%
 
 

01:07:54.960 --> 01:07:57.510 align:start position:0%
 
i<01:07:55.119><c> wanted</c><01:07:55.359><c> to</c><01:07:55.520><c> add</c><01:07:55.760><c> a</c><01:07:56.079><c> tangent</c><01:07:56.640><c> of</c><01:07:56.799><c> a</c><01:07:57.200><c> node</c><01:07:57.440><c> of</c>

01:07:57.510 --> 01:07:57.520 align:start position:0%
i wanted to add a tangent of a node of
 

01:07:57.520 --> 01:07:58.950 align:start position:0%
i wanted to add a tangent of a node of
caution<01:07:57.920><c> to</c><01:07:58.079><c> be</c><01:07:58.160><c> careful</c><01:07:58.480><c> with</c><01:07:58.559><c> a</c><01:07:58.640><c> lot</c><01:07:58.799><c> of</c><01:07:58.880><c> the</c>

01:07:58.950 --> 01:07:58.960 align:start position:0%
caution to be careful with a lot of the
 

01:07:58.960 --> 01:08:01.430 align:start position:0%
caution to be careful with a lot of the
apis<01:07:59.520><c> of</c><01:07:59.599><c> some</c><01:07:59.760><c> of</c><01:07:59.839><c> these</c><01:08:00.000><c> frameworks</c>

01:08:01.430 --> 01:08:01.440 align:start position:0%
apis of some of these frameworks
 

01:08:01.440 --> 01:08:03.910 align:start position:0%
apis of some of these frameworks
you<01:08:01.599><c> saw</c><01:08:01.760><c> me</c><01:08:01.920><c> silently</c><01:08:02.400><c> use</c><01:08:02.640><c> torch.tensor</c>

01:08:03.910 --> 01:08:03.920 align:start position:0%
you saw me silently use torch.tensor
 

01:08:03.920 --> 01:08:05.829 align:start position:0%
you saw me silently use torch.tensor
with<01:08:04.160><c> a</c><01:08:04.400><c> lowercase</c><01:08:04.960><c> t</c>

01:08:05.829 --> 01:08:05.839 align:start position:0%
with a lowercase t
 

01:08:05.839 --> 01:08:07.829 align:start position:0%
with a lowercase t
and<01:08:06.160><c> the</c><01:08:06.400><c> output</c><01:08:06.640><c> looked</c><01:08:06.960><c> right</c>

01:08:07.829 --> 01:08:07.839 align:start position:0%
and the output looked right
 

01:08:07.839 --> 01:08:09.510 align:start position:0%
and the output looked right
but<01:08:08.319><c> you</c><01:08:08.400><c> should</c><01:08:08.559><c> be</c><01:08:08.880><c> aware</c><01:08:09.119><c> that</c><01:08:09.280><c> there's</c>

01:08:09.510 --> 01:08:09.520 align:start position:0%
but you should be aware that there's
 

01:08:09.520 --> 01:08:10.870 align:start position:0%
but you should be aware that there's
actually<01:08:09.760><c> two</c><01:08:09.920><c> ways</c><01:08:10.160><c> of</c><01:08:10.240><c> constructing</c><01:08:10.720><c> a</c>

01:08:10.870 --> 01:08:10.880 align:start position:0%
actually two ways of constructing a
 

01:08:10.880 --> 01:08:13.829 align:start position:0%
actually two ways of constructing a
tensor<01:08:11.680><c> there's</c><01:08:11.920><c> a</c><01:08:12.160><c> torch.lowercase</c><01:08:13.119><c> tensor</c>

01:08:13.829 --> 01:08:13.839 align:start position:0%
tensor there's a torch.lowercase tensor
 

01:08:13.839 --> 01:08:16.309 align:start position:0%
tensor there's a torch.lowercase tensor
and<01:08:13.920><c> there's</c><01:08:14.160><c> also</c><01:08:14.400><c> a</c><01:08:14.599><c> torch.capital</c><01:08:15.599><c> tensor</c>

01:08:16.309 --> 01:08:16.319 align:start position:0%
and there's also a torch.capital tensor
 

01:08:16.319 --> 01:08:18.550 align:start position:0%
and there's also a torch.capital tensor
class<01:08:16.640><c> which</c><01:08:16.880><c> you</c><01:08:16.960><c> can</c><01:08:17.040><c> also</c><01:08:17.279><c> construct</c>

01:08:18.550 --> 01:08:18.560 align:start position:0%
class which you can also construct
 

01:08:18.560 --> 01:08:20.309 align:start position:0%
class which you can also construct
so<01:08:18.799><c> you</c><01:08:18.880><c> can</c><01:08:19.040><c> actually</c><01:08:19.279><c> call</c><01:08:19.600><c> both</c><01:08:20.000><c> you</c><01:08:20.159><c> can</c>

01:08:20.309 --> 01:08:20.319 align:start position:0%
so you can actually call both you can
 

01:08:20.319 --> 01:08:22.789 align:start position:0%
so you can actually call both you can
also<01:08:20.560><c> do</c><01:08:20.719><c> torch.capital</c><01:08:21.600><c> tensor</c>

01:08:22.789 --> 01:08:22.799 align:start position:0%
also do torch.capital tensor
 

01:08:22.799 --> 01:08:25.349 align:start position:0%
also do torch.capital tensor
and<01:08:23.040><c> you</c><01:08:23.120><c> get</c><01:08:23.279><c> a</c><01:08:23.359><c> nexus</c><01:08:23.679><c> and</c><01:08:23.839><c> wise</c><01:08:24.159><c> as</c><01:08:24.239><c> well</c>

01:08:25.349 --> 01:08:25.359 align:start position:0%
and you get a nexus and wise as well
 

01:08:25.359 --> 01:08:27.430 align:start position:0%
and you get a nexus and wise as well
so<01:08:25.600><c> that's</c><01:08:25.759><c> not</c><01:08:25.920><c> confusing</c><01:08:26.400><c> at</c><01:08:26.480><c> all</c>

01:08:27.430 --> 01:08:27.440 align:start position:0%
so that's not confusing at all
 

01:08:27.440 --> 01:08:28.789 align:start position:0%
so that's not confusing at all
um

01:08:28.789 --> 01:08:28.799 align:start position:0%
um
 

01:08:28.799 --> 01:08:29.829 align:start position:0%
um
there<01:08:28.960><c> are</c><01:08:29.120><c> threads</c><01:08:29.440><c> on</c><01:08:29.520><c> what</c><01:08:29.679><c> is</c><01:08:29.759><c> the</c>

01:08:29.829 --> 01:08:29.839 align:start position:0%
there are threads on what is the
 

01:08:29.839 --> 01:08:31.510 align:start position:0%
there are threads on what is the
difference<01:08:30.080><c> between</c><01:08:30.400><c> these</c><01:08:30.640><c> two</c>

01:08:31.510 --> 01:08:31.520 align:start position:0%
difference between these two
 

01:08:31.520 --> 01:08:33.349 align:start position:0%
difference between these two
and<01:08:32.000><c> um</c>

01:08:33.349 --> 01:08:33.359 align:start position:0%
and um
 

01:08:33.359 --> 01:08:35.110 align:start position:0%
and um
unfortunately<01:08:33.920><c> the</c><01:08:34.080><c> docs</c><01:08:34.400><c> are</c><01:08:34.480><c> just</c><01:08:34.640><c> like</c><01:08:34.880><c> not</c>

01:08:35.110 --> 01:08:35.120 align:start position:0%
unfortunately the docs are just like not
 

01:08:35.120 --> 01:08:36.309 align:start position:0%
unfortunately the docs are just like not
clear<01:08:35.440><c> on</c><01:08:35.520><c> the</c><01:08:35.600><c> difference</c><01:08:36.000><c> and</c><01:08:36.080><c> when</c><01:08:36.239><c> you</c>

01:08:36.309 --> 01:08:36.319 align:start position:0%
clear on the difference and when you
 

01:08:36.319 --> 01:08:38.709 align:start position:0%
clear on the difference and when you
look<01:08:36.480><c> at</c><01:08:36.640><c> the</c><01:08:37.279><c> the</c><01:08:37.440><c> docs</c><01:08:37.759><c> of</c><01:08:38.159><c> lower</c><01:08:38.480><c> case</c>

01:08:38.709 --> 01:08:38.719 align:start position:0%
look at the the docs of lower case
 

01:08:38.719 --> 01:08:40.870 align:start position:0%
look at the the docs of lower case
tensor<01:08:39.120><c> construct</c><01:08:39.679><c> tensor</c><01:08:40.080><c> with</c><01:08:40.239><c> no</c><01:08:40.480><c> autograd</c>

01:08:40.870 --> 01:08:40.880 align:start position:0%
tensor construct tensor with no autograd
 

01:08:40.880 --> 01:08:43.510 align:start position:0%
tensor construct tensor with no autograd
history<01:08:41.600><c> by</c><01:08:41.759><c> copying</c><01:08:42.159><c> data</c>

01:08:43.510 --> 01:08:43.520 align:start position:0%
history by copying data
 

01:08:43.520 --> 01:08:45.590 align:start position:0%
history by copying data
it's<01:08:43.679><c> just</c><01:08:43.920><c> like</c><01:08:44.239><c> it</c><01:08:44.400><c> doesn't</c>

01:08:45.590 --> 01:08:45.600 align:start position:0%
it's just like it doesn't
 

01:08:45.600 --> 01:08:47.189 align:start position:0%
it's just like it doesn't
it<01:08:45.679><c> doesn't</c><01:08:45.920><c> make</c><01:08:46.080><c> sense</c><01:08:46.560><c> so</c><01:08:46.719><c> the</c><01:08:46.880><c> actual</c>

01:08:47.189 --> 01:08:47.199 align:start position:0%
it doesn't make sense so the actual
 

01:08:47.199 --> 01:08:48.550 align:start position:0%
it doesn't make sense so the actual
difference<01:08:47.520><c> as</c><01:08:47.679><c> far</c><01:08:47.839><c> as</c><01:08:47.920><c> i</c><01:08:48.000><c> can</c><01:08:48.159><c> tell</c><01:08:48.400><c> is</c>

01:08:48.550 --> 01:08:48.560 align:start position:0%
difference as far as i can tell is
 

01:08:48.560 --> 01:08:49.990 align:start position:0%
difference as far as i can tell is
explained<01:08:48.960><c> eventually</c><01:08:49.440><c> in</c><01:08:49.520><c> this</c><01:08:49.679><c> random</c>

01:08:49.990 --> 01:08:50.000 align:start position:0%
explained eventually in this random
 

01:08:50.000 --> 01:08:51.510 align:start position:0%
explained eventually in this random
thread<01:08:50.239><c> that</c><01:08:50.319><c> you</c><01:08:50.400><c> can</c><01:08:50.560><c> google</c>

01:08:51.510 --> 01:08:51.520 align:start position:0%
thread that you can google
 

01:08:51.520 --> 01:08:53.189 align:start position:0%
thread that you can google
and<01:08:51.679><c> really</c><01:08:51.920><c> it</c><01:08:52.000><c> comes</c><01:08:52.239><c> down</c><01:08:52.480><c> to</c>

01:08:53.189 --> 01:08:53.199 align:start position:0%
and really it comes down to
 

01:08:53.199 --> 01:08:55.030 align:start position:0%
and really it comes down to
i<01:08:53.359><c> believe</c>

01:08:55.030 --> 01:08:55.040 align:start position:0%
i believe
 

01:08:55.040 --> 01:08:56.550 align:start position:0%
i believe
that<01:08:55.600><c> um</c>

01:08:56.550 --> 01:08:56.560 align:start position:0%
that um
 

01:08:56.560 --> 01:08:58.470 align:start position:0%
that um
what<01:08:56.719><c> is</c><01:08:56.880><c> this</c>

01:08:58.470 --> 01:08:58.480 align:start position:0%
what is this
 

01:08:58.480 --> 01:09:00.630 align:start position:0%
what is this
torch.tensor<01:08:59.199><c> in</c><01:08:59.359><c> first</c><01:08:59.679><c> d-type</c><01:09:00.239><c> the</c><01:09:00.319><c> data</c>

01:09:00.630 --> 01:09:00.640 align:start position:0%
torch.tensor in first d-type the data
 

01:09:00.640 --> 01:09:02.470 align:start position:0%
torch.tensor in first d-type the data
type<01:09:00.880><c> automatically</c><01:09:01.600><c> while</c><01:09:01.759><c> torch.tensor</c>

01:09:02.470 --> 01:09:02.480 align:start position:0%
type automatically while torch.tensor
 

01:09:02.480 --> 01:09:04.309 align:start position:0%
type automatically while torch.tensor
just<01:09:02.719><c> returns</c><01:09:03.040><c> a</c><01:09:03.120><c> float</c><01:09:03.359><c> tensor</c>

01:09:04.309 --> 01:09:04.319 align:start position:0%
just returns a float tensor
 

01:09:04.319 --> 01:09:05.430 align:start position:0%
just returns a float tensor
i<01:09:04.480><c> would</c><01:09:04.640><c> recommend</c><01:09:05.120><c> stick</c><01:09:05.279><c> to</c>

01:09:05.430 --> 01:09:05.440 align:start position:0%
i would recommend stick to
 

01:09:05.440 --> 01:09:07.749 align:start position:0%
i would recommend stick to
torch.lowercase<01:09:06.239><c> tensor</c>

01:09:07.749 --> 01:09:07.759 align:start position:0%
torch.lowercase tensor
 

01:09:07.759 --> 01:09:09.510 align:start position:0%
torch.lowercase tensor
so<01:09:08.239><c> um</c>

01:09:09.510 --> 01:09:09.520 align:start position:0%
so um
 

01:09:09.520 --> 01:09:11.510 align:start position:0%
so um
indeed<01:09:10.000><c> we</c><01:09:10.159><c> see</c><01:09:10.319><c> that</c><01:09:10.640><c> when</c><01:09:10.880><c> i</c>

01:09:11.510 --> 01:09:11.520 align:start position:0%
indeed we see that when i
 

01:09:11.520 --> 01:09:13.829 align:start position:0%
indeed we see that when i
construct<01:09:11.920><c> this</c><01:09:12.080><c> with</c><01:09:12.239><c> a</c><01:09:12.319><c> capital</c><01:09:12.719><c> t</c><01:09:13.359><c> the</c><01:09:13.520><c> data</c>

01:09:13.829 --> 01:09:13.839 align:start position:0%
construct this with a capital t the data
 

01:09:13.839 --> 01:09:18.070 align:start position:0%
construct this with a capital t the data
type<01:09:14.080><c> here</c><01:09:14.560><c> of</c><01:09:14.719><c> xs</c><01:09:15.600><c> is</c><01:09:16.000><c> float32</c>

01:09:18.070 --> 01:09:18.080 align:start position:0%
type here of xs is float32
 

01:09:18.080 --> 01:09:21.030 align:start position:0%
type here of xs is float32
but<01:09:18.400><c> towards</c><01:09:18.719><c> that</c><01:09:18.799><c> lowercase</c><01:09:19.279><c> tensor</c>

01:09:21.030 --> 01:09:21.040 align:start position:0%
but towards that lowercase tensor
 

01:09:21.040 --> 01:09:24.550 align:start position:0%
but towards that lowercase tensor
you<01:09:21.199><c> see</c><01:09:21.440><c> how</c><01:09:21.759><c> it's</c><01:09:22.000><c> now</c><01:09:22.640><c> x</c><01:09:22.799><c> dot</c><01:09:23.040><c> d</c><01:09:23.199><c> type</c><01:09:23.759><c> is</c><01:09:23.920><c> now</c>

01:09:24.550 --> 01:09:24.560 align:start position:0%
you see how it's now x dot d type is now
 

01:09:24.560 --> 01:09:26.709 align:start position:0%
you see how it's now x dot d type is now
integer

01:09:26.709 --> 01:09:26.719 align:start position:0%
integer
 

01:09:26.719 --> 01:09:28.149 align:start position:0%
integer
so<01:09:27.120><c> um</c>

01:09:28.149 --> 01:09:28.159 align:start position:0%
so um
 

01:09:28.159 --> 01:09:30.709 align:start position:0%
so um
it's<01:09:28.400><c> advised</c><01:09:28.960><c> that</c><01:09:29.120><c> you</c><01:09:29.279><c> use</c><01:09:29.759><c> lowercase</c><01:09:30.319><c> t</c>

01:09:30.709 --> 01:09:30.719 align:start position:0%
it's advised that you use lowercase t
 

01:09:30.719 --> 01:09:32.149 align:start position:0%
it's advised that you use lowercase t
and<01:09:30.799><c> you</c><01:09:30.880><c> can</c><01:09:31.040><c> read</c><01:09:31.199><c> more</c><01:09:31.440><c> about</c><01:09:31.679><c> it</c><01:09:31.839><c> if</c><01:09:32.000><c> you</c>

01:09:32.149 --> 01:09:32.159 align:start position:0%
and you can read more about it if you
 

01:09:32.159 --> 01:09:34.390 align:start position:0%
and you can read more about it if you
like<01:09:32.400><c> in</c><01:09:32.480><c> some</c><01:09:32.640><c> of</c><01:09:32.799><c> these</c><01:09:32.960><c> threads</c><01:09:34.159><c> but</c>

01:09:34.390 --> 01:09:34.400 align:start position:0%
like in some of these threads but
 

01:09:34.400 --> 01:09:35.669 align:start position:0%
like in some of these threads but
basically

01:09:35.669 --> 01:09:35.679 align:start position:0%
basically
 

01:09:35.679 --> 01:09:36.470 align:start position:0%
basically
um

01:09:36.470 --> 01:09:36.480 align:start position:0%
um
 

01:09:36.480 --> 01:09:38.070 align:start position:0%
um
i'm<01:09:36.719><c> pointing</c><01:09:37.040><c> out</c><01:09:37.120><c> some</c><01:09:37.279><c> of</c><01:09:37.359><c> these</c><01:09:37.520><c> things</c>

01:09:38.070 --> 01:09:38.080 align:start position:0%
i'm pointing out some of these things
 

01:09:38.080 --> 01:09:39.669 align:start position:0%
i'm pointing out some of these things
because<01:09:38.319><c> i</c><01:09:38.400><c> want</c><01:09:38.560><c> to</c><01:09:38.640><c> caution</c><01:09:38.960><c> you</c><01:09:39.199><c> and</c><01:09:39.359><c> i</c><01:09:39.520><c> want</c>

01:09:39.669 --> 01:09:39.679 align:start position:0%
because i want to caution you and i want
 

01:09:39.679 --> 01:09:41.590 align:start position:0%
because i want to caution you and i want
you<01:09:39.839><c> to</c><01:09:40.159><c> re</c><01:09:40.560><c> get</c><01:09:40.719><c> used</c><01:09:40.960><c> to</c><01:09:41.120><c> reading</c><01:09:41.359><c> a</c><01:09:41.440><c> lot</c><01:09:41.520><c> of</c>

01:09:41.590 --> 01:09:41.600 align:start position:0%
you to re get used to reading a lot of
 

01:09:41.600 --> 01:09:43.590 align:start position:0%
you to re get used to reading a lot of
documentation<01:09:42.560><c> and</c><01:09:42.799><c> reading</c><01:09:43.120><c> through</c><01:09:43.359><c> a</c><01:09:43.440><c> lot</c>

01:09:43.590 --> 01:09:43.600 align:start position:0%
documentation and reading through a lot
 

01:09:43.600 --> 01:09:44.309 align:start position:0%
documentation and reading through a lot
of

01:09:44.309 --> 01:09:44.319 align:start position:0%
of
 

01:09:44.319 --> 01:09:46.950 align:start position:0%
of
q<01:09:44.560><c> and</c><01:09:44.719><c> a's</c><01:09:45.040><c> and</c><01:09:45.600><c> threads</c><01:09:46.000><c> like</c><01:09:46.159><c> this</c>

01:09:46.950 --> 01:09:46.960 align:start position:0%
q and a's and threads like this
 

01:09:46.960 --> 01:09:48.149 align:start position:0%
q and a's and threads like this
and

01:09:48.149 --> 01:09:48.159 align:start position:0%
and
 

01:09:48.159 --> 01:09:49.110 align:start position:0%
and
you<01:09:48.319><c> know</c><01:09:48.400><c> some</c><01:09:48.560><c> of</c><01:09:48.640><c> the</c><01:09:48.719><c> stuff</c><01:09:48.960><c> is</c>

01:09:49.110 --> 01:09:49.120 align:start position:0%
you know some of the stuff is
 

01:09:49.120 --> 01:09:50.550 align:start position:0%
you know some of the stuff is
unfortunately<01:09:49.679><c> not</c><01:09:49.839><c> easy</c><01:09:50.000><c> and</c><01:09:50.080><c> not</c><01:09:50.239><c> very</c><01:09:50.400><c> well</c>

01:09:50.550 --> 01:09:50.560 align:start position:0%
unfortunately not easy and not very well
 

01:09:50.560 --> 01:09:51.910 align:start position:0%
unfortunately not easy and not very well
documented<01:09:51.120><c> and</c><01:09:51.199><c> you</c><01:09:51.359><c> have</c><01:09:51.440><c> to</c><01:09:51.520><c> be</c><01:09:51.600><c> careful</c>

01:09:51.910 --> 01:09:51.920 align:start position:0%
documented and you have to be careful
 

01:09:51.920 --> 01:09:54.630 align:start position:0%
documented and you have to be careful
out<01:09:52.080><c> there</c><01:09:52.560><c> what</c><01:09:52.799><c> we</c><01:09:52.960><c> want</c><01:09:53.279><c> here</c><01:09:53.600><c> is</c><01:09:53.839><c> integers</c>

01:09:54.630 --> 01:09:54.640 align:start position:0%
out there what we want here is integers
 

01:09:54.640 --> 01:09:56.950 align:start position:0%
out there what we want here is integers
because<01:09:54.880><c> that's</c><01:09:55.120><c> what</c><01:09:55.280><c> makes</c><01:09:55.760><c> uh</c><01:09:56.080><c> sense</c>

01:09:56.950 --> 01:09:56.960 align:start position:0%
because that's what makes uh sense
 

01:09:56.960 --> 01:09:57.990 align:start position:0%
because that's what makes uh sense
um

01:09:57.990 --> 01:09:58.000 align:start position:0%
um
 

01:09:58.000 --> 01:09:59.350 align:start position:0%
um
and<01:09:58.239><c> so</c>

01:09:59.350 --> 01:09:59.360 align:start position:0%
and so
 

01:09:59.360 --> 01:10:01.110 align:start position:0%
and so
lowercase<01:09:59.840><c> tensor</c><01:10:00.159><c> is</c><01:10:00.239><c> what</c><01:10:00.400><c> we</c><01:10:00.560><c> are</c><01:10:00.719><c> using</c>

01:10:01.110 --> 01:10:01.120 align:start position:0%
lowercase tensor is what we are using
 

01:10:01.120 --> 01:10:02.550 align:start position:0%
lowercase tensor is what we are using
okay<01:10:01.360><c> now</c><01:10:01.600><c> we</c><01:10:01.679><c> want</c><01:10:01.840><c> to</c><01:10:02.000><c> think</c><01:10:02.159><c> through</c><01:10:02.400><c> how</c>

01:10:02.550 --> 01:10:02.560 align:start position:0%
okay now we want to think through how
 

01:10:02.560 --> 01:10:04.470 align:start position:0%
okay now we want to think through how
we're<01:10:02.719><c> going</c><01:10:02.880><c> to</c><01:10:03.040><c> feed</c><01:10:03.360><c> in</c><01:10:03.679><c> these</c><01:10:04.000><c> examples</c>

01:10:04.470 --> 01:10:04.480 align:start position:0%
we're going to feed in these examples
 

01:10:04.480 --> 01:10:06.229 align:start position:0%
we're going to feed in these examples
into<01:10:04.719><c> a</c><01:10:04.800><c> neural</c><01:10:05.120><c> network</c>

01:10:06.229 --> 01:10:06.239 align:start position:0%
into a neural network
 

01:10:06.239 --> 01:10:09.030 align:start position:0%
into a neural network
now<01:10:06.480><c> it's</c><01:10:06.640><c> not</c><01:10:07.040><c> quite</c><01:10:07.199><c> as</c><01:10:07.360><c> straightforward</c><01:10:07.920><c> as</c>

01:10:09.030 --> 01:10:09.040 align:start position:0%
now it's not quite as straightforward as
 

01:10:09.040 --> 01:10:10.950 align:start position:0%
now it's not quite as straightforward as
plugging<01:10:09.440><c> it</c><01:10:09.600><c> in</c><01:10:10.000><c> because</c><01:10:10.320><c> these</c><01:10:10.560><c> examples</c>

01:10:10.950 --> 01:10:10.960 align:start position:0%
plugging it in because these examples
 

01:10:10.960 --> 01:10:12.950 align:start position:0%
plugging it in because these examples
right<01:10:11.120><c> now</c><01:10:11.360><c> are</c><01:10:11.520><c> integers</c><01:10:12.239><c> so</c><01:10:12.400><c> there's</c><01:10:12.640><c> like</c><01:10:12.800><c> a</c>

01:10:12.950 --> 01:10:12.960 align:start position:0%
right now are integers so there's like a
 

01:10:12.960 --> 01:10:15.830 align:start position:0%
right now are integers so there's like a
0<01:10:13.440><c> 5</c><01:10:13.760><c> or</c><01:10:14.000><c> 13</c><01:10:14.560><c> it</c><01:10:14.719><c> gives</c><01:10:14.960><c> us</c><01:10:15.040><c> the</c><01:10:15.199><c> index</c><01:10:15.600><c> of</c><01:10:15.679><c> the</c>

01:10:15.830 --> 01:10:15.840 align:start position:0%
0 5 or 13 it gives us the index of the
 

01:10:15.840 --> 01:10:17.510 align:start position:0%
0 5 or 13 it gives us the index of the
character<01:10:16.400><c> and</c><01:10:16.560><c> you</c><01:10:16.640><c> can't</c><01:10:16.880><c> just</c><01:10:17.040><c> plug</c><01:10:17.360><c> an</c>

01:10:17.510 --> 01:10:17.520 align:start position:0%
character and you can't just plug an
 

01:10:17.520 --> 01:10:19.910 align:start position:0%
character and you can't just plug an
integer<01:10:18.000><c> index</c><01:10:18.320><c> into</c><01:10:18.480><c> a</c><01:10:18.560><c> neural</c><01:10:18.880><c> net</c>

01:10:19.910 --> 01:10:19.920 align:start position:0%
integer index into a neural net
 

01:10:19.920 --> 01:10:22.390 align:start position:0%
integer index into a neural net
these<01:10:20.080><c> neural</c><01:10:20.400><c> nets</c><01:10:21.120><c> right</c><01:10:21.440><c> are</c><01:10:21.920><c> sort</c><01:10:22.080><c> of</c><01:10:22.159><c> made</c>

01:10:22.390 --> 01:10:22.400 align:start position:0%
these neural nets right are sort of made
 

01:10:22.400 --> 01:10:24.470 align:start position:0%
these neural nets right are sort of made
up<01:10:22.719><c> of</c><01:10:22.960><c> these</c><01:10:23.280><c> neurons</c>

01:10:24.470 --> 01:10:24.480 align:start position:0%
up of these neurons
 

01:10:24.480 --> 01:10:25.350 align:start position:0%
up of these neurons
and

01:10:25.350 --> 01:10:25.360 align:start position:0%
and
 

01:10:25.360 --> 01:10:27.270 align:start position:0%
and
these<01:10:25.520><c> neurons</c><01:10:25.920><c> have</c><01:10:26.159><c> weights</c><01:10:26.800><c> and</c><01:10:26.960><c> as</c><01:10:27.120><c> you</c>

01:10:27.270 --> 01:10:27.280 align:start position:0%
these neurons have weights and as you
 

01:10:27.280 --> 01:10:29.270 align:start position:0%
these neurons have weights and as you
saw<01:10:27.440><c> in</c><01:10:27.520><c> micrograd</c><01:10:28.400><c> these</c><01:10:28.719><c> weights</c><01:10:29.040><c> act</c>

01:10:29.270 --> 01:10:29.280 align:start position:0%
saw in micrograd these weights act
 

01:10:29.280 --> 01:10:31.990 align:start position:0%
saw in micrograd these weights act
multiplicatively<01:10:30.159><c> on</c><01:10:30.239><c> the</c><01:10:30.480><c> inputs</c><01:10:30.960><c> w</c><01:10:31.360><c> x</c><01:10:31.760><c> plus</c>

01:10:31.990 --> 01:10:32.000 align:start position:0%
multiplicatively on the inputs w x plus
 

01:10:32.000 --> 01:10:34.550 align:start position:0%
multiplicatively on the inputs w x plus
b<01:10:32.480><c> there's</c><01:10:32.719><c> 10</c><01:10:32.960><c> h's</c><01:10:33.280><c> and</c><01:10:33.440><c> so</c><01:10:33.600><c> on</c><01:10:34.159><c> and</c><01:10:34.239><c> so</c><01:10:34.400><c> it</c>

01:10:34.550 --> 01:10:34.560 align:start position:0%
b there's 10 h's and so on and so it
 

01:10:34.560 --> 01:10:35.669 align:start position:0%
b there's 10 h's and so on and so it
doesn't<01:10:34.719><c> really</c><01:10:34.880><c> make</c><01:10:35.040><c> sense</c><01:10:35.280><c> to</c><01:10:35.360><c> make</c><01:10:35.520><c> an</c>

01:10:35.669 --> 01:10:35.679 align:start position:0%
doesn't really make sense to make an
 

01:10:35.679 --> 01:10:37.830 align:start position:0%
doesn't really make sense to make an
input<01:10:35.920><c> neuron</c><01:10:36.320><c> take</c><01:10:36.560><c> on</c><01:10:36.800><c> integer</c><01:10:37.199><c> values</c><01:10:37.679><c> that</c>

01:10:37.830 --> 01:10:37.840 align:start position:0%
input neuron take on integer values that
 

01:10:37.840 --> 01:10:40.390 align:start position:0%
input neuron take on integer values that
you<01:10:38.080><c> feed</c><01:10:38.320><c> in</c><01:10:38.640><c> and</c><01:10:38.800><c> then</c><01:10:39.120><c> multiply</c><01:10:39.760><c> on</c><01:10:40.159><c> with</c>

01:10:40.390 --> 01:10:40.400 align:start position:0%
you feed in and then multiply on with
 

01:10:40.400 --> 01:10:41.590 align:start position:0%
you feed in and then multiply on with
weights

01:10:41.590 --> 01:10:41.600 align:start position:0%
weights
 

01:10:41.600 --> 01:10:42.790 align:start position:0%
weights
so<01:10:41.840><c> instead</c>

01:10:42.790 --> 01:10:42.800 align:start position:0%
so instead
 

01:10:42.800 --> 01:10:44.630 align:start position:0%
so instead
a<01:10:42.880><c> common</c><01:10:43.199><c> way</c><01:10:43.360><c> of</c><01:10:43.520><c> encoding</c><01:10:44.000><c> integers</c><01:10:44.560><c> is</c>

01:10:44.630 --> 01:10:44.640 align:start position:0%
a common way of encoding integers is
 

01:10:44.640 --> 01:10:46.950 align:start position:0%
a common way of encoding integers is
what's<01:10:44.880><c> called</c><01:10:45.199><c> one</c><01:10:45.440><c> hot</c><01:10:45.679><c> encoding</c>

01:10:46.950 --> 01:10:46.960 align:start position:0%
what's called one hot encoding
 

01:10:46.960 --> 01:10:48.709 align:start position:0%
what's called one hot encoding
in<01:10:47.120><c> one</c><01:10:47.360><c> hot</c><01:10:47.679><c> encoding</c>

01:10:48.709 --> 01:10:48.719 align:start position:0%
in one hot encoding
 

01:10:48.719 --> 01:10:51.270 align:start position:0%
in one hot encoding
we<01:10:48.880><c> take</c><01:10:49.040><c> an</c><01:10:49.199><c> integer</c><01:10:49.600><c> like</c><01:10:49.840><c> 13</c><01:10:50.719><c> and</c><01:10:50.800><c> we</c><01:10:50.960><c> create</c>

01:10:51.270 --> 01:10:51.280 align:start position:0%
we take an integer like 13 and we create
 

01:10:51.280 --> 01:10:53.990 align:start position:0%
we take an integer like 13 and we create
a<01:10:51.360><c> vector</c><01:10:52.080><c> that</c><01:10:52.239><c> is</c><01:10:52.560><c> all</c><01:10:52.719><c> zeros</c><01:10:53.600><c> except</c><01:10:53.840><c> for</c>

01:10:53.990 --> 01:10:54.000 align:start position:0%
a vector that is all zeros except for
 

01:10:54.000 --> 01:10:56.550 align:start position:0%
a vector that is all zeros except for
the<01:10:54.239><c> 13th</c><01:10:54.800><c> dimension</c><01:10:55.520><c> which</c><01:10:55.760><c> we</c><01:10:55.920><c> turn</c><01:10:56.159><c> to</c><01:10:56.400><c> a</c>

01:10:56.550 --> 01:10:56.560 align:start position:0%
the 13th dimension which we turn to a
 

01:10:56.560 --> 01:10:59.430 align:start position:0%
the 13th dimension which we turn to a
one<01:10:57.360><c> and</c><01:10:57.520><c> then</c><01:10:57.679><c> that</c><01:10:57.920><c> vector</c><01:10:58.320><c> can</c><01:10:58.560><c> feed</c><01:10:58.880><c> into</c><01:10:59.280><c> a</c>

01:10:59.430 --> 01:10:59.440 align:start position:0%
one and then that vector can feed into a
 

01:10:59.440 --> 01:11:01.110 align:start position:0%
one and then that vector can feed into a
neural<01:10:59.760><c> net</c>

01:11:01.110 --> 01:11:01.120 align:start position:0%
neural net
 

01:11:01.120 --> 01:11:03.110 align:start position:0%
neural net
now<01:11:01.760><c> conveniently</c>

01:11:03.110 --> 01:11:03.120 align:start position:0%
now conveniently
 

01:11:03.120 --> 01:11:04.630 align:start position:0%
now conveniently
uh<01:11:03.520><c> pi</c><01:11:03.679><c> torch</c><01:11:04.000><c> actually</c><01:11:04.239><c> has</c><01:11:04.400><c> something</c>

01:11:04.630 --> 01:11:04.640 align:start position:0%
uh pi torch actually has something
 

01:11:04.640 --> 01:11:07.830 align:start position:0%
uh pi torch actually has something
called<01:11:04.800><c> the</c><01:11:04.960><c> one</c><01:11:05.199><c> hot</c>

01:11:07.830 --> 01:11:07.840 align:start position:0%
 
 

01:11:07.840 --> 01:11:10.229 align:start position:0%
 
function<01:11:08.320><c> inside</c><01:11:08.719><c> torching</c><01:11:09.199><c> and</c><01:11:09.280><c> functional</c>

01:11:10.229 --> 01:11:10.239 align:start position:0%
function inside torching and functional
 

01:11:10.239 --> 01:11:13.830 align:start position:0%
function inside torching and functional
it<01:11:10.400><c> takes</c><01:11:10.719><c> a</c><01:11:10.880><c> tensor</c><01:11:11.440><c> made</c><01:11:11.679><c> up</c><01:11:11.760><c> of</c><01:11:11.920><c> integers</c>

01:11:13.830 --> 01:11:13.840 align:start position:0%
it takes a tensor made up of integers
 

01:11:13.840 --> 01:11:14.950 align:start position:0%
it takes a tensor made up of integers
um

01:11:14.950 --> 01:11:14.960 align:start position:0%
um
 

01:11:14.960 --> 01:11:18.149 align:start position:0%
um
long<01:11:15.360><c> is</c><01:11:15.600><c> a</c><01:11:16.159><c> is</c><01:11:16.320><c> a</c><01:11:16.719><c> as</c><01:11:16.800><c> an</c><01:11:16.960><c> integer</c>

01:11:18.149 --> 01:11:18.159 align:start position:0%
long is a is a as an integer
 

01:11:18.159 --> 01:11:19.110 align:start position:0%
long is a is a as an integer
um

01:11:19.110 --> 01:11:19.120 align:start position:0%
um
 

01:11:19.120 --> 01:11:22.470 align:start position:0%
um
and<01:11:19.360><c> it</c><01:11:19.520><c> also</c><01:11:19.840><c> takes</c><01:11:20.159><c> a</c><01:11:20.239><c> number</c><01:11:20.480><c> of</c><01:11:20.560><c> classes</c><01:11:21.440><c> um</c>

01:11:22.470 --> 01:11:22.480 align:start position:0%
and it also takes a number of classes um
 

01:11:22.480 --> 01:11:24.310 align:start position:0%
and it also takes a number of classes um
which<01:11:22.719><c> is</c><01:11:22.800><c> how</c><01:11:22.960><c> large</c><01:11:23.199><c> you</c><01:11:23.360><c> want</c><01:11:23.520><c> your</c><01:11:24.000><c> uh</c>

01:11:24.310 --> 01:11:24.320 align:start position:0%
which is how large you want your uh
 

01:11:24.320 --> 01:11:27.669 align:start position:0%
which is how large you want your uh
tensor<01:11:25.280><c> uh</c><01:11:25.440><c> your</c><01:11:25.679><c> vector</c><01:11:26.000><c> to</c><01:11:26.159><c> be</c>

01:11:27.669 --> 01:11:27.679 align:start position:0%
tensor uh your vector to be
 

01:11:27.679 --> 01:11:30.030 align:start position:0%
tensor uh your vector to be
so<01:11:27.840><c> here</c><01:11:28.320><c> let's</c><01:11:28.640><c> import</c>

01:11:30.030 --> 01:11:30.040 align:start position:0%
so here let's import
 

01:11:30.040 --> 01:11:32.310 align:start position:0%
so here let's import
torch.n.functional<01:11:31.120><c> sf</c><01:11:31.679><c> this</c><01:11:31.840><c> is</c><01:11:32.000><c> a</c><01:11:32.080><c> common</c>

01:11:32.310 --> 01:11:32.320 align:start position:0%
torch.n.functional sf this is a common
 

01:11:32.320 --> 01:11:34.070 align:start position:0%
torch.n.functional sf this is a common
way<01:11:32.480><c> of</c><01:11:32.640><c> importing</c><01:11:33.120><c> it</c>

01:11:34.070 --> 01:11:34.080 align:start position:0%
way of importing it
 

01:11:34.080 --> 01:11:36.630 align:start position:0%
way of importing it
and<01:11:34.159><c> then</c><01:11:34.320><c> let's</c><01:11:34.560><c> do</c><01:11:34.719><c> f.1</c><01:11:35.280><c> hot</c>

01:11:36.630 --> 01:11:36.640 align:start position:0%
and then let's do f.1 hot
 

01:11:36.640 --> 01:11:38.630 align:start position:0%
and then let's do f.1 hot
and<01:11:36.800><c> we</c><01:11:37.120><c> feed</c><01:11:37.360><c> in</c><01:11:37.840><c> the</c><01:11:37.920><c> integers</c><01:11:38.320><c> that</c><01:11:38.480><c> we</c><01:11:38.560><c> want</c>

01:11:38.630 --> 01:11:38.640 align:start position:0%
and we feed in the integers that we want
 

01:11:38.640 --> 01:11:41.270 align:start position:0%
and we feed in the integers that we want
to<01:11:38.840><c> encode</c><01:11:39.920><c> so</c><01:11:40.239><c> we</c><01:11:40.400><c> can</c><01:11:40.560><c> actually</c><01:11:40.800><c> feed</c><01:11:41.040><c> in</c><01:11:41.120><c> the</c>

01:11:41.270 --> 01:11:41.280 align:start position:0%
to encode so we can actually feed in the
 

01:11:41.280 --> 01:11:43.990 align:start position:0%
to encode so we can actually feed in the
entire<01:11:41.760><c> array</c><01:11:42.239><c> of</c><01:11:42.480><c> x's</c>

01:11:43.990 --> 01:11:44.000 align:start position:0%
entire array of x's
 

01:11:44.000 --> 01:11:46.149 align:start position:0%
entire array of x's
and<01:11:44.159><c> we</c><01:11:44.400><c> can</c><01:11:44.560><c> tell</c><01:11:44.800><c> it</c><01:11:44.880><c> that</c><01:11:45.040><c> num</c><01:11:45.280><c> classes</c><01:11:46.000><c> is</c>

01:11:46.149 --> 01:11:46.159 align:start position:0%
and we can tell it that num classes is
 

01:11:46.159 --> 01:11:47.669 align:start position:0%
and we can tell it that num classes is
27.

01:11:47.669 --> 01:11:47.679 align:start position:0%
27.
 

01:11:47.679 --> 01:11:49.510 align:start position:0%
27.
so<01:11:47.840><c> it</c><01:11:47.920><c> doesn't</c><01:11:48.159><c> have</c><01:11:48.239><c> to</c><01:11:48.400><c> try</c><01:11:48.560><c> to</c><01:11:48.640><c> guess</c><01:11:48.880><c> it</c><01:11:49.360><c> it</c>

01:11:49.510 --> 01:11:49.520 align:start position:0%
so it doesn't have to try to guess it it
 

01:11:49.520 --> 01:11:51.669 align:start position:0%
so it doesn't have to try to guess it it
may<01:11:49.679><c> have</c><01:11:49.840><c> guessed</c><01:11:50.080><c> that</c><01:11:50.239><c> it's</c><01:11:50.560><c> only</c><01:11:50.800><c> 13</c><01:11:51.520><c> and</c>

01:11:51.669 --> 01:11:51.679 align:start position:0%
may have guessed that it's only 13 and
 

01:11:51.679 --> 01:11:54.550 align:start position:0%
may have guessed that it's only 13 and
would<01:11:51.840><c> give</c><01:11:52.000><c> us</c><01:11:52.159><c> an</c><01:11:52.239><c> incorrect</c><01:11:52.640><c> result</c>

01:11:54.550 --> 01:11:54.560 align:start position:0%
would give us an incorrect result
 

01:11:54.560 --> 01:11:57.430 align:start position:0%
would give us an incorrect result
so<01:11:54.719><c> this</c><01:11:54.880><c> is</c><01:11:54.960><c> the</c><01:11:55.120><c> one</c><01:11:55.280><c> hot</c><01:11:55.760><c> let's</c><01:11:56.000><c> call</c><01:11:56.239><c> this</c><01:11:56.880><c> x</c>

01:11:57.430 --> 01:11:57.440 align:start position:0%
so this is the one hot let's call this x
 

01:11:57.440 --> 01:12:01.990 align:start position:0%
so this is the one hot let's call this x
inc<01:11:58.080><c> for</c><01:11:58.560><c> x</c><01:11:58.880><c> encoded</c>

01:12:01.990 --> 01:12:02.000 align:start position:0%
 
 

01:12:02.000 --> 01:12:03.669 align:start position:0%
 
and<01:12:02.159><c> then</c><01:12:02.320><c> we</c><01:12:02.480><c> see</c><01:12:02.640><c> that</c><01:12:02.880><c> x</c><01:12:03.120><c> encoded</c><01:12:03.440><c> that</c>

01:12:03.669 --> 01:12:03.679 align:start position:0%
and then we see that x encoded that
 

01:12:03.679 --> 01:12:07.030 align:start position:0%
and then we see that x encoded that
shape<01:12:04.320><c> is</c><01:12:04.640><c> 5</c><01:12:04.880><c> by</c><01:12:05.040><c> 27</c>

01:12:07.030 --> 01:12:07.040 align:start position:0%
shape is 5 by 27
 

01:12:07.040 --> 01:12:10.310 align:start position:0%
shape is 5 by 27
and<01:12:07.360><c> uh</c><01:12:08.320><c> we</c><01:12:08.480><c> can</c><01:12:08.640><c> also</c><01:12:08.880><c> visualize</c><01:12:09.280><c> it</c><01:12:09.440><c> plt.i</c><01:12:10.159><c> am</c>

01:12:10.310 --> 01:12:10.320 align:start position:0%
and uh we can also visualize it plt.i am
 

01:12:10.320 --> 01:12:12.229 align:start position:0%
and uh we can also visualize it plt.i am
show<01:12:10.560><c> of</c><01:12:10.719><c> x</c><01:12:10.960><c> inc</c>

01:12:12.229 --> 01:12:12.239 align:start position:0%
show of x inc
 

01:12:12.239 --> 01:12:13.510 align:start position:0%
show of x inc
to<01:12:12.400><c> make</c><01:12:12.560><c> it</c><01:12:12.719><c> a</c><01:12:12.800><c> little</c><01:12:12.880><c> bit</c><01:12:13.040><c> more</c><01:12:13.199><c> clear</c>

01:12:13.510 --> 01:12:13.520 align:start position:0%
to make it a little bit more clear
 

01:12:13.520 --> 01:12:15.350 align:start position:0%
to make it a little bit more clear
because<01:12:13.679><c> this</c><01:12:13.840><c> is</c><01:12:13.920><c> a</c><01:12:14.000><c> little</c><01:12:14.239><c> messy</c>

01:12:15.350 --> 01:12:15.360 align:start position:0%
because this is a little messy
 

01:12:15.360 --> 01:12:17.110 align:start position:0%
because this is a little messy
so<01:12:15.520><c> we</c><01:12:15.679><c> see</c><01:12:15.840><c> that</c><01:12:16.000><c> we've</c><01:12:16.239><c> encoded</c><01:12:16.719><c> all</c><01:12:16.880><c> the</c>

01:12:17.110 --> 01:12:17.120 align:start position:0%
so we see that we've encoded all the
 

01:12:17.120 --> 01:12:20.630 align:start position:0%
so we see that we've encoded all the
five<01:12:17.520><c> examples</c><01:12:18.560><c> uh</c><01:12:18.800><c> into</c><01:12:19.520><c> vectors</c><01:12:20.400><c> we</c><01:12:20.560><c> have</c>

01:12:20.630 --> 01:12:20.640 align:start position:0%
five examples uh into vectors we have
 

01:12:20.640 --> 01:12:22.790 align:start position:0%
five examples uh into vectors we have
five<01:12:20.880><c> examples</c><01:12:21.280><c> so</c><01:12:21.440><c> we</c><01:12:21.520><c> have</c><01:12:21.679><c> five</c><01:12:21.920><c> rows</c><01:12:22.640><c> and</c>

01:12:22.790 --> 01:12:22.800 align:start position:0%
five examples so we have five rows and
 

01:12:22.800 --> 01:12:24.950 align:start position:0%
five examples so we have five rows and
each<01:12:23.040><c> row</c><01:12:23.280><c> here</c><01:12:23.600><c> is</c><01:12:23.760><c> now</c><01:12:24.080><c> an</c><01:12:24.239><c> example</c><01:12:24.640><c> into</c><01:12:24.880><c> a</c>

01:12:24.950 --> 01:12:24.960 align:start position:0%
each row here is now an example into a
 

01:12:24.960 --> 01:12:26.229 align:start position:0%
each row here is now an example into a
neural<01:12:25.280><c> nut</c>

01:12:26.229 --> 01:12:26.239 align:start position:0%
neural nut
 

01:12:26.239 --> 01:12:28.229 align:start position:0%
neural nut
and<01:12:26.320><c> we</c><01:12:26.480><c> see</c><01:12:26.640><c> that</c><01:12:26.800><c> the</c><01:12:26.960><c> appropriate</c><01:12:27.520><c> bit</c><01:12:28.000><c> is</c>

01:12:28.229 --> 01:12:28.239 align:start position:0%
and we see that the appropriate bit is
 

01:12:28.239 --> 01:12:30.470 align:start position:0%
and we see that the appropriate bit is
turned<01:12:28.560><c> on</c><01:12:28.800><c> as</c><01:12:28.960><c> a</c><01:12:29.120><c> one</c><01:12:29.760><c> and</c><01:12:30.000><c> everything</c><01:12:30.320><c> else</c>

01:12:30.470 --> 01:12:30.480 align:start position:0%
turned on as a one and everything else
 

01:12:30.480 --> 01:12:31.830 align:start position:0%
turned on as a one and everything else
is<01:12:30.640><c> zero</c>

01:12:31.830 --> 01:12:31.840 align:start position:0%
is zero
 

01:12:31.840 --> 01:12:33.430 align:start position:0%
is zero
so<01:12:32.320><c> um</c>

01:12:33.430 --> 01:12:33.440 align:start position:0%
so um
 

01:12:33.440 --> 01:12:35.750 align:start position:0%
so um
here<01:12:33.679><c> for</c><01:12:33.840><c> example</c><01:12:34.320><c> the</c><01:12:34.960><c> zeroth</c><01:12:35.360><c> bit</c><01:12:35.600><c> is</c>

01:12:35.750 --> 01:12:35.760 align:start position:0%
here for example the zeroth bit is
 

01:12:35.760 --> 01:12:38.229 align:start position:0%
here for example the zeroth bit is
turned<01:12:36.080><c> on</c><01:12:36.560><c> the</c><01:12:36.719><c> fifth</c><01:12:36.960><c> bit</c><01:12:37.199><c> is</c><01:12:37.280><c> turned</c><01:12:37.600><c> on</c>

01:12:38.229 --> 01:12:38.239 align:start position:0%
turned on the fifth bit is turned on
 

01:12:38.239 --> 01:12:40.149 align:start position:0%
turned on the fifth bit is turned on
13th<01:12:38.800><c> bits</c><01:12:39.120><c> are</c><01:12:39.199><c> turned</c><01:12:39.520><c> on</c><01:12:39.679><c> for</c><01:12:39.840><c> both</c><01:12:40.080><c> of</c>

01:12:40.149 --> 01:12:40.159 align:start position:0%
13th bits are turned on for both of
 

01:12:40.159 --> 01:12:42.630 align:start position:0%
13th bits are turned on for both of
these<01:12:40.640><c> examples</c><01:12:41.440><c> and</c><01:12:41.600><c> then</c><01:12:41.760><c> the</c><01:12:41.840><c> first</c><01:12:42.159><c> bit</c>

01:12:42.630 --> 01:12:42.640 align:start position:0%
these examples and then the first bit
 

01:12:42.640 --> 01:12:44.550 align:start position:0%
these examples and then the first bit
here<01:12:42.960><c> is</c><01:12:43.120><c> turned</c><01:12:43.360><c> on</c>

01:12:44.550 --> 01:12:44.560 align:start position:0%
here is turned on
 

01:12:44.560 --> 01:12:47.030 align:start position:0%
here is turned on
so<01:12:44.719><c> that's</c><01:12:44.880><c> how</c><01:12:45.040><c> we</c><01:12:45.199><c> can</c><01:12:45.520><c> encode</c>

01:12:47.030 --> 01:12:47.040 align:start position:0%
so that's how we can encode
 

01:12:47.040 --> 01:12:49.750 align:start position:0%
so that's how we can encode
integers<01:12:47.679><c> into</c><01:12:48.320><c> vectors</c><01:12:49.280><c> and</c><01:12:49.360><c> then</c><01:12:49.520><c> these</c>

01:12:49.750 --> 01:12:49.760 align:start position:0%
integers into vectors and then these
 

01:12:49.760 --> 01:12:52.070 align:start position:0%
integers into vectors and then these
vectors<01:12:50.320><c> can</c><01:12:50.560><c> feed</c><01:12:50.800><c> in</c><01:12:51.040><c> to</c><01:12:51.199><c> neural</c><01:12:51.520><c> nets</c><01:12:51.840><c> one</c>

01:12:52.070 --> 01:12:52.080 align:start position:0%
vectors can feed in to neural nets one
 

01:12:52.080 --> 01:12:53.510 align:start position:0%
vectors can feed in to neural nets one
more<01:12:52.239><c> issue</c><01:12:52.480><c> to</c><01:12:52.560><c> be</c><01:12:52.640><c> careful</c><01:12:52.960><c> with</c><01:12:53.120><c> here</c><01:12:53.360><c> by</c>

01:12:53.510 --> 01:12:53.520 align:start position:0%
more issue to be careful with here by
 

01:12:53.520 --> 01:12:55.110 align:start position:0%
more issue to be careful with here by
the<01:12:53.600><c> way</c><01:12:53.920><c> is</c>

01:12:55.110 --> 01:12:55.120 align:start position:0%
the way is
 

01:12:55.120 --> 01:12:56.870 align:start position:0%
the way is
let's<01:12:55.360><c> look</c><01:12:55.520><c> at</c><01:12:55.600><c> the</c><01:12:55.679><c> data</c><01:12:55.920><c> type</c><01:12:56.080><c> of</c><01:12:56.400><c> encoding</c>

01:12:56.870 --> 01:12:56.880 align:start position:0%
let's look at the data type of encoding
 

01:12:56.880 --> 01:12:58.310 align:start position:0%
let's look at the data type of encoding
we<01:12:57.040><c> always</c><01:12:57.280><c> want</c><01:12:57.440><c> to</c><01:12:57.520><c> be</c><01:12:57.600><c> careful</c><01:12:57.920><c> with</c><01:12:58.080><c> data</c>

01:12:58.310 --> 01:12:58.320 align:start position:0%
we always want to be careful with data
 

01:12:58.320 --> 01:12:59.350 align:start position:0%
we always want to be careful with data
types

01:12:59.350 --> 01:12:59.360 align:start position:0%
types
 

01:12:59.360 --> 01:13:01.669 align:start position:0%
types
what<01:12:59.520><c> would</c><01:12:59.679><c> you</c><01:12:59.840><c> expect</c><01:13:00.640><c> x</c><01:13:00.880><c> encoding's</c><01:13:01.360><c> data</c>

01:13:01.669 --> 01:13:01.679 align:start position:0%
what would you expect x encoding's data
 

01:13:01.679 --> 01:13:02.709 align:start position:0%
what would you expect x encoding's data
type<01:13:01.840><c> to</c><01:13:02.000><c> be</c>

01:13:02.709 --> 01:13:02.719 align:start position:0%
type to be
 

01:13:02.719 --> 01:13:04.630 align:start position:0%
type to be
when<01:13:02.880><c> we're</c><01:13:03.199><c> plugging</c><01:13:03.600><c> numbers</c><01:13:03.920><c> into</c><01:13:04.400><c> neural</c>

01:13:04.630 --> 01:13:04.640 align:start position:0%
when we're plugging numbers into neural
 

01:13:04.640 --> 01:13:06.149 align:start position:0%
when we're plugging numbers into neural
nuts<01:13:04.880><c> we</c><01:13:05.040><c> don't</c><01:13:05.120><c> want</c><01:13:05.280><c> them</c><01:13:05.440><c> to</c><01:13:05.520><c> be</c><01:13:05.679><c> integers</c>

01:13:06.149 --> 01:13:06.159 align:start position:0%
nuts we don't want them to be integers
 

01:13:06.159 --> 01:13:07.430 align:start position:0%
nuts we don't want them to be integers
we<01:13:06.320><c> want</c><01:13:06.480><c> them</c><01:13:06.640><c> to</c><01:13:06.719><c> be</c><01:13:06.880><c> floating</c><01:13:07.280><c> point</c>

01:13:07.430 --> 01:13:07.440 align:start position:0%
we want them to be floating point
 

01:13:07.440 --> 01:13:10.390 align:start position:0%
we want them to be floating point
numbers<01:13:07.840><c> that</c><01:13:08.000><c> can</c><01:13:08.159><c> take</c><01:13:08.400><c> on</c><01:13:09.040><c> various</c><01:13:09.440><c> values</c>

01:13:10.390 --> 01:13:10.400 align:start position:0%
numbers that can take on various values
 

01:13:10.400 --> 01:13:13.110 align:start position:0%
numbers that can take on various values
but<01:13:10.560><c> the</c><01:13:10.640><c> d</c><01:13:10.800><c> type</c><01:13:11.040><c> here</c><01:13:11.360><c> is</c><01:13:11.600><c> actually</c><01:13:12.320><c> 64-bit</c>

01:13:13.110 --> 01:13:13.120 align:start position:0%
but the d type here is actually 64-bit
 

01:13:13.120 --> 01:13:14.229 align:start position:0%
but the d type here is actually 64-bit
integer

01:13:14.229 --> 01:13:14.239 align:start position:0%
integer
 

01:13:14.239 --> 01:13:15.669 align:start position:0%
integer
and<01:13:14.320><c> the</c><01:13:14.480><c> reason</c><01:13:14.719><c> for</c><01:13:14.800><c> that</c><01:13:15.040><c> i</c><01:13:15.120><c> suspect</c><01:13:15.600><c> is</c>

01:13:15.669 --> 01:13:15.679 align:start position:0%
and the reason for that i suspect is
 

01:13:15.679 --> 01:13:18.870 align:start position:0%
and the reason for that i suspect is
that<01:13:15.920><c> one</c><01:13:16.239><c> hot</c><01:13:16.719><c> received</c><01:13:17.440><c> a</c><01:13:17.840><c> 64-bit</c><01:13:18.560><c> integer</c>

01:13:18.870 --> 01:13:18.880 align:start position:0%
that one hot received a 64-bit integer
 

01:13:18.880 --> 01:13:21.830 align:start position:0%
that one hot received a 64-bit integer
here<01:13:19.600><c> and</c><01:13:19.760><c> it</c><01:13:19.840><c> returned</c><01:13:20.400><c> the</c><01:13:20.480><c> same</c><01:13:20.719><c> data</c><01:13:20.960><c> type</c>

01:13:21.830 --> 01:13:21.840 align:start position:0%
here and it returned the same data type
 

01:13:21.840 --> 01:13:23.189 align:start position:0%
here and it returned the same data type
and<01:13:22.000><c> when</c><01:13:22.080><c> you</c><01:13:22.239><c> look</c><01:13:22.320><c> at</c><01:13:22.560><c> the</c><01:13:22.640><c> signature</c><01:13:23.040><c> of</c>

01:13:23.189 --> 01:13:23.199 align:start position:0%
and when you look at the signature of
 

01:13:23.199 --> 01:13:25.430 align:start position:0%
and when you look at the signature of
one<01:13:23.360><c> hot</c><01:13:23.600><c> it</c><01:13:23.760><c> doesn't</c><01:13:24.000><c> even</c><01:13:24.159><c> take</c><01:13:24.480><c> a</c><01:13:24.560><c> d</c><01:13:24.800><c> type</c><01:13:25.360><c> a</c>

01:13:25.430 --> 01:13:25.440 align:start position:0%
one hot it doesn't even take a d type a
 

01:13:25.440 --> 01:13:28.390 align:start position:0%
one hot it doesn't even take a d type a
desired<01:13:25.920><c> data</c><01:13:26.159><c> type</c><01:13:26.719><c> of</c><01:13:27.040><c> the</c><01:13:27.120><c> output</c><01:13:27.440><c> tensor</c>

01:13:28.390 --> 01:13:28.400 align:start position:0%
desired data type of the output tensor
 

01:13:28.400 --> 01:13:30.550 align:start position:0%
desired data type of the output tensor
and<01:13:28.560><c> so</c><01:13:28.719><c> we</c><01:13:28.960><c> can't</c><01:13:29.600><c> in</c><01:13:29.840><c> a</c><01:13:29.840><c> lot</c><01:13:30.000><c> of</c><01:13:30.080><c> functions</c><01:13:30.480><c> in</c>

01:13:30.550 --> 01:13:30.560 align:start position:0%
and so we can't in a lot of functions in
 

01:13:30.560 --> 01:13:31.990 align:start position:0%
and so we can't in a lot of functions in
torch<01:13:30.880><c> we'd</c><01:13:31.040><c> be</c><01:13:31.199><c> able</c><01:13:31.360><c> to</c><01:13:31.440><c> do</c><01:13:31.520><c> something</c><01:13:31.840><c> like</c>

01:13:31.990 --> 01:13:32.000 align:start position:0%
torch we'd be able to do something like
 

01:13:32.000 --> 01:13:34.310 align:start position:0%
torch we'd be able to do something like
d<01:13:32.159><c> type</c><01:13:32.400><c> equal</c><01:13:32.719><c> storage.float32</c>

01:13:34.310 --> 01:13:34.320 align:start position:0%
d type equal storage.float32
 

01:13:34.320 --> 01:13:36.470 align:start position:0%
d type equal storage.float32
which<01:13:34.560><c> is</c><01:13:34.640><c> what</c><01:13:34.800><c> we</c><01:13:34.960><c> want</c><01:13:35.600><c> but</c><01:13:35.920><c> one</c><01:13:36.080><c> heart</c><01:13:36.320><c> does</c>

01:13:36.470 --> 01:13:36.480 align:start position:0%
which is what we want but one heart does
 

01:13:36.480 --> 01:13:37.910 align:start position:0%
which is what we want but one heart does
not<01:13:36.640><c> support</c><01:13:37.040><c> that</c>

01:13:37.910 --> 01:13:37.920 align:start position:0%
not support that
 

01:13:37.920 --> 01:13:39.669 align:start position:0%
not support that
so<01:13:38.080><c> instead</c><01:13:38.480><c> we're</c><01:13:38.640><c> going</c><01:13:38.800><c> to</c><01:13:38.880><c> want</c><01:13:39.040><c> to</c><01:13:39.280><c> cast</c>

01:13:39.669 --> 01:13:39.679 align:start position:0%
so instead we're going to want to cast
 

01:13:39.679 --> 01:13:43.189 align:start position:0%
so instead we're going to want to cast
this<01:13:40.159><c> to</c><01:13:40.320><c> float</c><01:13:40.960><c> like</c><01:13:41.120><c> this</c>

01:13:43.189 --> 01:13:43.199 align:start position:0%
this to float like this
 

01:13:43.199 --> 01:13:44.790 align:start position:0%
this to float like this
so<01:13:43.360><c> that</c><01:13:43.520><c> these</c>

01:13:44.790 --> 01:13:44.800 align:start position:0%
so that these
 

01:13:44.800 --> 01:13:46.390 align:start position:0%
so that these
everything<01:13:45.120><c> is</c><01:13:45.280><c> the</c><01:13:45.360><c> same</c>

01:13:46.390 --> 01:13:46.400 align:start position:0%
everything is the same
 

01:13:46.400 --> 01:13:48.630 align:start position:0%
everything is the same
everything<01:13:46.800><c> looks</c><01:13:47.040><c> the</c><01:13:47.199><c> same</c><01:13:47.840><c> but</c><01:13:48.000><c> the</c><01:13:48.159><c> d-type</c>

01:13:48.630 --> 01:13:48.640 align:start position:0%
everything looks the same but the d-type
 

01:13:48.640 --> 01:13:52.229 align:start position:0%
everything looks the same but the d-type
is<01:13:48.719><c> float32</c><01:13:49.920><c> and</c><01:13:50.080><c> floats</c><01:13:50.480><c> can</c><01:13:50.719><c> feed</c><01:13:50.960><c> into</c>

01:13:52.229 --> 01:13:52.239 align:start position:0%
is float32 and floats can feed into
 

01:13:52.239 --> 01:13:54.310 align:start position:0%
is float32 and floats can feed into
neural<01:13:52.560><c> nets</c><01:13:53.199><c> so</c><01:13:53.360><c> now</c><01:13:53.520><c> let's</c><01:13:53.760><c> construct</c><01:13:54.159><c> our</c>

01:13:54.310 --> 01:13:54.320 align:start position:0%
neural nets so now let's construct our
 

01:13:54.320 --> 01:13:55.990 align:start position:0%
neural nets so now let's construct our
first<01:13:54.560><c> neuron</c>

01:13:55.990 --> 01:13:56.000 align:start position:0%
first neuron
 

01:13:56.000 --> 01:13:58.550 align:start position:0%
first neuron
this<01:13:56.239><c> neuron</c><01:13:56.880><c> will</c><01:13:57.440><c> look</c><01:13:57.760><c> at</c><01:13:58.000><c> these</c><01:13:58.320><c> input</c>

01:13:58.550 --> 01:13:58.560 align:start position:0%
this neuron will look at these input
 

01:13:58.560 --> 01:14:00.070 align:start position:0%
this neuron will look at these input
vectors

01:14:00.070 --> 01:14:00.080 align:start position:0%
vectors
 

01:14:00.080 --> 01:14:02.070 align:start position:0%
vectors
and<01:14:00.400><c> as</c><01:14:00.480><c> you</c><01:14:00.640><c> remember</c><01:14:00.960><c> from</c><01:14:01.120><c> micrograd</c><01:14:01.840><c> these</c>

01:14:02.070 --> 01:14:02.080 align:start position:0%
and as you remember from micrograd these
 

01:14:02.080 --> 01:14:03.750 align:start position:0%
and as you remember from micrograd these
neurons<01:14:02.480><c> basically</c><01:14:02.800><c> perform</c><01:14:03.199><c> a</c><01:14:03.280><c> very</c><01:14:03.440><c> simple</c>

01:14:03.750 --> 01:14:03.760 align:start position:0%
neurons basically perform a very simple
 

01:14:03.760 --> 01:14:07.270 align:start position:0%
neurons basically perform a very simple
function<01:14:04.239><c> w</c><01:14:04.719><c> x</c><01:14:05.199><c> plus</c><01:14:05.440><c> b</c><01:14:06.000><c> where</c><01:14:06.239><c> w</c><01:14:06.640><c> x</c><01:14:06.800><c> is</c><01:14:06.960><c> a</c><01:14:07.040><c> dot</c>

01:14:07.270 --> 01:14:07.280 align:start position:0%
function w x plus b where w x is a dot
 

01:14:07.280 --> 01:14:08.229 align:start position:0%
function w x plus b where w x is a dot
product

01:14:08.229 --> 01:14:08.239 align:start position:0%
product
 

01:14:08.239 --> 01:14:09.510 align:start position:0%
product
right

01:14:09.510 --> 01:14:09.520 align:start position:0%
right
 

01:14:09.520 --> 01:14:11.990 align:start position:0%
right
so<01:14:10.159><c> we</c><01:14:10.320><c> can</c><01:14:10.480><c> achieve</c><01:14:10.800><c> the</c><01:14:10.960><c> same</c><01:14:11.120><c> thing</c><01:14:11.360><c> here</c>

01:14:11.990 --> 01:14:12.000 align:start position:0%
so we can achieve the same thing here
 

01:14:12.000 --> 01:14:14.149 align:start position:0%
so we can achieve the same thing here
let's<01:14:12.159><c> first</c><01:14:12.400><c> define</c><01:14:12.800><c> the</c><01:14:12.960><c> weights</c><01:14:13.440><c> of</c><01:14:13.600><c> this</c>

01:14:14.149 --> 01:14:14.159 align:start position:0%
let's first define the weights of this
 

01:14:14.159 --> 01:14:15.669 align:start position:0%
let's first define the weights of this
neuron<01:14:14.560><c> basically</c><01:14:14.880><c> what</c><01:14:15.040><c> are</c><01:14:15.120><c> the</c><01:14:15.280><c> initial</c>

01:14:15.669 --> 01:14:15.679 align:start position:0%
neuron basically what are the initial
 

01:14:15.679 --> 01:14:17.669 align:start position:0%
neuron basically what are the initial
weights<01:14:16.159><c> at</c><01:14:16.320><c> initialization</c><01:14:17.280><c> for</c><01:14:17.440><c> this</c>

01:14:17.669 --> 01:14:17.679 align:start position:0%
weights at initialization for this
 

01:14:17.679 --> 01:14:18.709 align:start position:0%
weights at initialization for this
neuron

01:14:18.709 --> 01:14:18.719 align:start position:0%
neuron
 

01:14:18.719 --> 01:14:21.590 align:start position:0%
neuron
let's<01:14:18.960><c> initialize</c><01:14:19.360><c> them</c><01:14:19.520><c> with</c><01:14:19.679><c> torch.rendin</c>

01:14:21.590 --> 01:14:21.600 align:start position:0%
let's initialize them with torch.rendin
 

01:14:21.600 --> 01:14:23.270 align:start position:0%
let's initialize them with torch.rendin
torch.rendin

01:14:23.270 --> 01:14:23.280 align:start position:0%
torch.rendin
 

01:14:23.280 --> 01:14:24.550 align:start position:0%
torch.rendin
is<01:14:23.760><c> um</c>

01:14:24.550 --> 01:14:24.560 align:start position:0%
is um
 

01:14:24.560 --> 01:14:27.030 align:start position:0%
is um
fills<01:14:25.040><c> a</c><01:14:25.199><c> tensor</c><01:14:25.600><c> with</c><01:14:25.760><c> random</c><01:14:26.080><c> numbers</c>

01:14:27.030 --> 01:14:27.040 align:start position:0%
fills a tensor with random numbers
 

01:14:27.040 --> 01:14:29.189 align:start position:0%
fills a tensor with random numbers
drawn<01:14:27.360><c> from</c><01:14:27.520><c> a</c><01:14:27.600><c> normal</c><01:14:27.920><c> distribution</c>

01:14:29.189 --> 01:14:29.199 align:start position:0%
drawn from a normal distribution
 

01:14:29.199 --> 01:14:31.030 align:start position:0%
drawn from a normal distribution
and<01:14:29.360><c> a</c><01:14:29.520><c> normal</c><01:14:29.760><c> distribution</c>

01:14:31.030 --> 01:14:31.040 align:start position:0%
and a normal distribution
 

01:14:31.040 --> 01:14:31.830 align:start position:0%
and a normal distribution
has

01:14:31.830 --> 01:14:31.840 align:start position:0%
has
 

01:14:31.840 --> 01:14:34.310 align:start position:0%
has
a<01:14:32.000><c> probability</c><01:14:32.800><c> density</c><01:14:33.199><c> function</c><01:14:33.520><c> like</c><01:14:33.760><c> this</c>

01:14:34.310 --> 01:14:34.320 align:start position:0%
a probability density function like this
 

01:14:34.320 --> 01:14:35.830 align:start position:0%
a probability density function like this
and<01:14:34.480><c> so</c><01:14:34.640><c> most</c><01:14:34.880><c> of</c><01:14:34.960><c> the</c><01:14:35.040><c> numbers</c><01:14:35.360><c> drawn</c><01:14:35.679><c> from</c>

01:14:35.830 --> 01:14:35.840 align:start position:0%
and so most of the numbers drawn from
 

01:14:35.840 --> 01:14:39.030 align:start position:0%
and so most of the numbers drawn from
this<01:14:36.000><c> distribution</c><01:14:36.960><c> will</c><01:14:37.199><c> be</c><01:14:37.520><c> around</c><01:14:37.920><c> 0</c>

01:14:39.030 --> 01:14:39.040 align:start position:0%
this distribution will be around 0
 

01:14:39.040 --> 01:14:40.630 align:start position:0%
this distribution will be around 0
but<01:14:39.280><c> some</c><01:14:39.440><c> of</c><01:14:39.520><c> them</c><01:14:39.679><c> will</c><01:14:39.840><c> be</c><01:14:40.080><c> as</c><01:14:40.239><c> high</c><01:14:40.480><c> as</c>

01:14:40.630 --> 01:14:40.640 align:start position:0%
but some of them will be as high as
 

01:14:40.640 --> 01:14:42.390 align:start position:0%
but some of them will be as high as
almost<01:14:40.960><c> three</c><01:14:41.199><c> and</c><01:14:41.280><c> so</c><01:14:41.520><c> on</c><01:14:41.840><c> and</c><01:14:42.000><c> very</c><01:14:42.239><c> few</c>

01:14:42.390 --> 01:14:42.400 align:start position:0%
almost three and so on and very few
 

01:14:42.400 --> 01:14:46.310 align:start position:0%
almost three and so on and very few
numbers<01:14:42.640><c> will</c><01:14:42.800><c> be</c><01:14:42.960><c> above</c><01:14:43.760><c> three</c><01:14:44.239><c> in</c><01:14:44.640><c> magnitude</c>

01:14:46.310 --> 01:14:46.320 align:start position:0%
numbers will be above three in magnitude
 

01:14:46.320 --> 01:14:49.030 align:start position:0%
numbers will be above three in magnitude
so<01:14:46.800><c> we</c><01:14:46.960><c> need</c><01:14:47.120><c> to</c><01:14:47.199><c> take</c><01:14:47.520><c> a</c><01:14:47.679><c> size</c><01:14:48.159><c> as</c><01:14:48.320><c> an</c><01:14:48.800><c> input</c>

01:14:49.030 --> 01:14:49.040 align:start position:0%
so we need to take a size as an input
 

01:14:49.040 --> 01:14:50.390 align:start position:0%
so we need to take a size as an input
here

01:14:50.390 --> 01:14:50.400 align:start position:0%
here
 

01:14:50.400 --> 01:14:52.870 align:start position:0%
here
and<01:14:50.560><c> i'm</c><01:14:50.719><c> going</c><01:14:50.880><c> to</c><01:14:50.960><c> use</c><01:14:51.199><c> size</c><01:14:51.520><c> as</c><01:14:51.760><c> to</c><01:14:51.840><c> be</c><01:14:52.000><c> 27</c><01:14:52.640><c> by</c>

01:14:52.870 --> 01:14:52.880 align:start position:0%
and i'm going to use size as to be 27 by
 

01:14:52.880 --> 01:14:54.550 align:start position:0%
and i'm going to use size as to be 27 by
one

01:14:54.550 --> 01:14:54.560 align:start position:0%
one
 

01:14:54.560 --> 01:14:55.510 align:start position:0%
one
so

01:14:55.510 --> 01:14:55.520 align:start position:0%
so
 

01:14:55.520 --> 01:14:58.709 align:start position:0%
so
27<01:14:56.080><c> by</c><01:14:56.320><c> one</c><01:14:56.640><c> and</c><01:14:56.800><c> then</c><01:14:56.960><c> let's</c><01:14:57.199><c> visualize</c><01:14:57.679><c> w</c><01:14:58.480><c> so</c>

01:14:58.709 --> 01:14:58.719 align:start position:0%
27 by one and then let's visualize w so
 

01:14:58.719 --> 01:15:03.030 align:start position:0%
27 by one and then let's visualize w so
w<01:14:59.040><c> is</c><01:14:59.120><c> a</c><01:14:59.199><c> column</c><01:14:59.520><c> vector</c><01:15:00.000><c> of</c><01:15:00.159><c> 27</c><01:15:00.719><c> numbers</c>

01:15:03.030 --> 01:15:03.040 align:start position:0%
w is a column vector of 27 numbers
 

01:15:03.040 --> 01:15:03.910 align:start position:0%
w is a column vector of 27 numbers
and

01:15:03.910 --> 01:15:03.920 align:start position:0%
and
 

01:15:03.920 --> 01:15:06.870 align:start position:0%
and
these<01:15:04.239><c> weights</c><01:15:04.960><c> are</c><01:15:05.520><c> then</c><01:15:05.760><c> multiplied</c><01:15:06.560><c> by</c><01:15:06.719><c> the</c>

01:15:06.870 --> 01:15:06.880 align:start position:0%
these weights are then multiplied by the
 

01:15:06.880 --> 01:15:08.630 align:start position:0%
these weights are then multiplied by the
inputs

01:15:08.630 --> 01:15:08.640 align:start position:0%
inputs
 

01:15:08.640 --> 01:15:10.709 align:start position:0%
inputs
so<01:15:09.040><c> now</c><01:15:09.280><c> to</c><01:15:09.440><c> perform</c><01:15:09.760><c> this</c><01:15:09.920><c> multiplication</c><01:15:10.560><c> we</c>

01:15:10.709 --> 01:15:10.719 align:start position:0%
so now to perform this multiplication we
 

01:15:10.719 --> 01:15:13.110 align:start position:0%
so now to perform this multiplication we
can<01:15:10.800><c> take</c><01:15:11.040><c> x</c><01:15:11.280><c> encoding</c><01:15:12.239><c> and</c><01:15:12.400><c> we</c><01:15:12.480><c> can</c><01:15:12.640><c> multiply</c>

01:15:13.110 --> 01:15:13.120 align:start position:0%
can take x encoding and we can multiply
 

01:15:13.120 --> 01:15:14.950 align:start position:0%
can take x encoding and we can multiply
it<01:15:13.440><c> with</c><01:15:13.679><c> w</c>

01:15:14.950 --> 01:15:14.960 align:start position:0%
it with w
 

01:15:14.960 --> 01:15:17.510 align:start position:0%
it with w
this<01:15:15.280><c> is</c><01:15:15.600><c> a</c><01:15:15.679><c> matrix</c><01:15:16.080><c> multiplication</c><01:15:16.960><c> operator</c>

01:15:17.510 --> 01:15:17.520 align:start position:0%
this is a matrix multiplication operator
 

01:15:17.520 --> 01:15:19.830 align:start position:0%
this is a matrix multiplication operator
in<01:15:17.600><c> pi</c><01:15:17.840><c> torch</c>

01:15:19.830 --> 01:15:19.840 align:start position:0%
in pi torch
 

01:15:19.840 --> 01:15:22.390 align:start position:0%
in pi torch
and<01:15:20.000><c> the</c><01:15:20.239><c> output</c><01:15:20.640><c> of</c><01:15:20.800><c> this</c><01:15:21.040><c> operation</c><01:15:21.760><c> is</c><01:15:22.159><c> five</c>

01:15:22.390 --> 01:15:22.400 align:start position:0%
and the output of this operation is five
 

01:15:22.400 --> 01:15:23.590 align:start position:0%
and the output of this operation is five
by<01:15:22.640><c> one</c>

01:15:23.590 --> 01:15:23.600 align:start position:0%
by one
 

01:15:23.600 --> 01:15:24.790 align:start position:0%
by one
the<01:15:23.679><c> reason</c><01:15:23.920><c> is</c><01:15:24.000><c> five</c><01:15:24.159><c> by</c><01:15:24.320><c> five</c><01:15:24.560><c> is</c><01:15:24.640><c> the</c>

01:15:24.790 --> 01:15:24.800 align:start position:0%
the reason is five by five is the
 

01:15:24.800 --> 01:15:25.830 align:start position:0%
the reason is five by five is the
following

01:15:25.830 --> 01:15:25.840 align:start position:0%
following
 

01:15:25.840 --> 01:15:27.990 align:start position:0%
following
we<01:15:26.000><c> took</c><01:15:26.239><c> x</c><01:15:26.480><c> encoding</c><01:15:26.960><c> which</c><01:15:27.199><c> is</c><01:15:27.440><c> five</c><01:15:27.760><c> by</c>

01:15:27.990 --> 01:15:28.000 align:start position:0%
we took x encoding which is five by
 

01:15:28.000 --> 01:15:30.550 align:start position:0%
we took x encoding which is five by
twenty<01:15:28.239><c> seven</c><01:15:28.960><c> and</c><01:15:29.120><c> we</c><01:15:29.280><c> multiplied</c><01:15:29.920><c> it</c><01:15:30.320><c> by</c>

01:15:30.550 --> 01:15:30.560 align:start position:0%
twenty seven and we multiplied it by
 

01:15:30.560 --> 01:15:33.510 align:start position:0%
twenty seven and we multiplied it by
twenty<01:15:30.880><c> seven</c><01:15:31.199><c> by</c><01:15:31.360><c> one</c>

01:15:33.510 --> 01:15:33.520 align:start position:0%
twenty seven by one
 

01:15:33.520 --> 01:15:34.390 align:start position:0%
twenty seven by one
and

01:15:34.390 --> 01:15:34.400 align:start position:0%
and
 

01:15:34.400 --> 01:15:36.470 align:start position:0%
and
in<01:15:34.560><c> matrix</c><01:15:34.880><c> multiplication</c>

01:15:36.470 --> 01:15:36.480 align:start position:0%
in matrix multiplication
 

01:15:36.480 --> 01:15:38.790 align:start position:0%
in matrix multiplication
you<01:15:36.640><c> see</c><01:15:36.800><c> that</c><01:15:36.960><c> the</c><01:15:37.199><c> output</c><01:15:37.679><c> will</c><01:15:37.920><c> become</c><01:15:38.239><c> five</c>

01:15:38.790 --> 01:15:38.800 align:start position:0%
you see that the output will become five
 

01:15:38.800 --> 01:15:41.590 align:start position:0%
you see that the output will become five
by<01:15:39.040><c> one</c><01:15:39.760><c> because</c><01:15:40.080><c> these</c><01:15:40.320><c> 27</c>

01:15:41.590 --> 01:15:41.600 align:start position:0%
by one because these 27
 

01:15:41.600 --> 01:15:44.790 align:start position:0%
by one because these 27
will<01:15:42.159><c> multiply</c><01:15:42.800><c> and</c><01:15:43.040><c> add</c>

01:15:44.790 --> 01:15:44.800 align:start position:0%
will multiply and add
 

01:15:44.800 --> 01:15:46.870 align:start position:0%
will multiply and add
so<01:15:44.960><c> basically</c><01:15:45.360><c> what</c><01:15:45.520><c> we're</c><01:15:45.679><c> seeing</c><01:15:46.000><c> here</c><01:15:46.400><c> outs</c>

01:15:46.870 --> 01:15:46.880 align:start position:0%
so basically what we're seeing here outs
 

01:15:46.880 --> 01:15:48.709 align:start position:0%
so basically what we're seeing here outs
out<01:15:47.040><c> of</c><01:15:47.120><c> this</c><01:15:47.360><c> operation</c>

01:15:48.709 --> 01:15:48.719 align:start position:0%
out of this operation
 

01:15:48.719 --> 01:15:51.830 align:start position:0%
out of this operation
is<01:15:48.880><c> we</c><01:15:49.040><c> are</c><01:15:49.199><c> seeing</c><01:15:49.520><c> the</c><01:15:49.840><c> five</c>

01:15:51.830 --> 01:15:51.840 align:start position:0%
is we are seeing the five
 

01:15:51.840 --> 01:15:53.669 align:start position:0%
is we are seeing the five
activations

01:15:53.669 --> 01:15:53.679 align:start position:0%
activations
 

01:15:53.679 --> 01:15:56.310 align:start position:0%
activations
of<01:15:53.840><c> this</c><01:15:54.400><c> neuron</c>

01:15:56.310 --> 01:15:56.320 align:start position:0%
of this neuron
 

01:15:56.320 --> 01:15:58.149 align:start position:0%
of this neuron
on<01:15:56.480><c> these</c><01:15:56.800><c> five</c><01:15:57.199><c> inputs</c>

01:15:58.149 --> 01:15:58.159 align:start position:0%
on these five inputs
 

01:15:58.159 --> 01:15:59.750 align:start position:0%
on these five inputs
and<01:15:58.320><c> we've</c><01:15:58.560><c> evaluated</c><01:15:59.199><c> all</c><01:15:59.280><c> of</c><01:15:59.440><c> them</c><01:15:59.600><c> in</c>

01:15:59.750 --> 01:15:59.760 align:start position:0%
and we've evaluated all of them in
 

01:15:59.760 --> 01:16:01.830 align:start position:0%
and we've evaluated all of them in
parallel<01:16:00.400><c> we</c><01:16:00.560><c> didn't</c><01:16:00.880><c> feed</c><01:16:01.120><c> in</c><01:16:01.199><c> just</c><01:16:01.440><c> a</c><01:16:01.520><c> single</c>

01:16:01.830 --> 01:16:01.840 align:start position:0%
parallel we didn't feed in just a single
 

01:16:01.840 --> 01:16:03.910 align:start position:0%
parallel we didn't feed in just a single
input<01:16:02.159><c> to</c><01:16:02.239><c> the</c><01:16:02.400><c> single</c><01:16:02.640><c> neuron</c><01:16:03.360><c> we</c><01:16:03.600><c> fed</c><01:16:03.840><c> in</c>

01:16:03.910 --> 01:16:03.920 align:start position:0%
input to the single neuron we fed in
 

01:16:03.920 --> 01:16:06.630 align:start position:0%
input to the single neuron we fed in
simultaneously<01:16:04.880><c> all</c><01:16:05.040><c> the</c><01:16:05.280><c> five</c><01:16:05.760><c> inputs</c><01:16:06.400><c> into</c>

01:16:06.630 --> 01:16:06.640 align:start position:0%
simultaneously all the five inputs into
 

01:16:06.640 --> 01:16:08.070 align:start position:0%
simultaneously all the five inputs into
the<01:16:06.719><c> same</c><01:16:06.960><c> neuron</c>

01:16:08.070 --> 01:16:08.080 align:start position:0%
the same neuron
 

01:16:08.080 --> 01:16:11.110 align:start position:0%
the same neuron
and<01:16:08.400><c> in</c><01:16:08.560><c> parallel</c><01:16:09.280><c> patrol</c><01:16:09.760><c> has</c><01:16:09.840><c> evaluated</c>

01:16:11.110 --> 01:16:11.120 align:start position:0%
and in parallel patrol has evaluated
 

01:16:11.120 --> 01:16:14.390 align:start position:0%
and in parallel patrol has evaluated
the<01:16:11.360><c> wx</c><01:16:12.080><c> plus</c><01:16:12.400><c> b</c><01:16:12.960><c> but</c><01:16:13.120><c> here</c><01:16:13.360><c> is</c><01:16:13.440><c> just</c><01:16:13.679><c> the</c><01:16:13.760><c> wx</c>

01:16:14.390 --> 01:16:14.400 align:start position:0%
the wx plus b but here is just the wx
 

01:16:14.400 --> 01:16:15.830 align:start position:0%
the wx plus b but here is just the wx
there's<01:16:14.560><c> no</c><01:16:14.719><c> bias</c>

01:16:15.830 --> 01:16:15.840 align:start position:0%
there's no bias
 

01:16:15.840 --> 01:16:19.669 align:start position:0%
there's no bias
it<01:16:16.000><c> has</c><01:16:16.159><c> value</c><01:16:16.480><c> w</c><01:16:17.520><c> times</c><01:16:17.840><c> x</c><01:16:18.000><c> for</c><01:16:18.239><c> all</c><01:16:18.400><c> of</c><01:16:18.480><c> them</c>

01:16:19.669 --> 01:16:19.679 align:start position:0%
it has value w times x for all of them
 

01:16:19.679 --> 01:16:21.430 align:start position:0%
it has value w times x for all of them
independently<01:16:20.560><c> now</c><01:16:20.800><c> instead</c><01:16:21.040><c> of</c><01:16:21.120><c> a</c><01:16:21.199><c> single</c>

01:16:21.430 --> 01:16:21.440 align:start position:0%
independently now instead of a single
 

01:16:21.440 --> 01:16:23.350 align:start position:0%
independently now instead of a single
neuron<01:16:21.840><c> though</c><01:16:22.080><c> i</c><01:16:22.159><c> would</c><01:16:22.320><c> like</c><01:16:22.480><c> to</c><01:16:22.560><c> have</c><01:16:22.800><c> 27</c>

01:16:23.350 --> 01:16:23.360 align:start position:0%
neuron though i would like to have 27
 

01:16:23.360 --> 01:16:25.189 align:start position:0%
neuron though i would like to have 27
neurons<01:16:24.000><c> and</c><01:16:24.159><c> i'll</c><01:16:24.320><c> show</c><01:16:24.480><c> you</c><01:16:24.560><c> in</c><01:16:24.719><c> a</c><01:16:24.800><c> second</c>

01:16:25.189 --> 01:16:25.199 align:start position:0%
neurons and i'll show you in a second
 

01:16:25.199 --> 01:16:27.510 align:start position:0%
neurons and i'll show you in a second
why<01:16:25.600><c> i</c><01:16:25.760><c> want</c><01:16:26.000><c> 27</c><01:16:26.480><c> neurons</c>

01:16:27.510 --> 01:16:27.520 align:start position:0%
why i want 27 neurons
 

01:16:27.520 --> 01:16:29.750 align:start position:0%
why i want 27 neurons
so<01:16:27.760><c> instead</c><01:16:28.000><c> of</c><01:16:28.080><c> having</c><01:16:28.400><c> just</c><01:16:28.560><c> a</c><01:16:28.719><c> 1</c><01:16:28.960><c> here</c><01:16:29.520><c> which</c>

01:16:29.750 --> 01:16:29.760 align:start position:0%
so instead of having just a 1 here which
 

01:16:29.760 --> 01:16:31.189 align:start position:0%
so instead of having just a 1 here which
is<01:16:29.920><c> indicating</c><01:16:30.320><c> this</c><01:16:30.560><c> presence</c><01:16:30.880><c> of</c><01:16:31.040><c> one</c>

01:16:31.189 --> 01:16:31.199 align:start position:0%
is indicating this presence of one
 

01:16:31.199 --> 01:16:32.390 align:start position:0%
is indicating this presence of one
single<01:16:31.520><c> neuron</c>

01:16:32.390 --> 01:16:32.400 align:start position:0%
single neuron
 

01:16:32.400 --> 01:16:34.630 align:start position:0%
single neuron
we<01:16:32.560><c> can</c><01:16:32.719><c> use</c><01:16:32.960><c> 27</c>

01:16:34.630 --> 01:16:34.640 align:start position:0%
we can use 27
 

01:16:34.640 --> 01:16:38.310 align:start position:0%
we can use 27
and<01:16:34.719><c> then</c><01:16:34.880><c> when</c><01:16:35.040><c> w</c><01:16:35.440><c> is</c><01:16:35.520><c> 27</c><01:16:36.000><c> by</c><01:16:36.239><c> 27</c>

01:16:38.310 --> 01:16:38.320 align:start position:0%
and then when w is 27 by 27
 

01:16:38.320 --> 01:16:41.750 align:start position:0%
and then when w is 27 by 27
this<01:16:38.880><c> will</c><01:16:39.360><c> in</c><01:16:39.520><c> parallel</c><01:16:40.159><c> evaluate</c><01:16:41.199><c> all</c><01:16:41.520><c> the</c>

01:16:41.750 --> 01:16:41.760 align:start position:0%
this will in parallel evaluate all the
 

01:16:41.760 --> 01:16:46.470 align:start position:0%
this will in parallel evaluate all the
27<01:16:42.320><c> neurons</c><01:16:43.280><c> on</c><01:16:43.600><c> all</c><01:16:43.760><c> the</c><01:16:43.920><c> 5</c><01:16:44.320><c> inputs</c>

01:16:46.470 --> 01:16:46.480 align:start position:0%
27 neurons on all the 5 inputs
 

01:16:46.480 --> 01:16:48.550 align:start position:0%
27 neurons on all the 5 inputs
giving<01:16:46.800><c> us</c><01:16:46.960><c> a</c><01:16:47.040><c> much</c><01:16:47.280><c> better</c><01:16:47.840><c> much</c><01:16:48.080><c> much</c><01:16:48.320><c> bigger</c>

01:16:48.550 --> 01:16:48.560 align:start position:0%
giving us a much better much much bigger
 

01:16:48.560 --> 01:16:51.350 align:start position:0%
giving us a much better much much bigger
result<01:16:49.440><c> so</c><01:16:49.600><c> now</c><01:16:49.760><c> what</c><01:16:49.920><c> we've</c><01:16:50.080><c> done</c><01:16:50.320><c> is</c><01:16:50.400><c> 5</c><01:16:50.640><c> by</c><01:16:50.800><c> 27</c>

01:16:51.350 --> 01:16:51.360 align:start position:0%
result so now what we've done is 5 by 27
 

01:16:51.360 --> 01:16:53.990 align:start position:0%
result so now what we've done is 5 by 27
multiplied<01:16:52.080><c> 27</c><01:16:52.560><c> by</c><01:16:52.719><c> 27</c>

01:16:53.990 --> 01:16:54.000 align:start position:0%
multiplied 27 by 27
 

01:16:54.000 --> 01:16:57.750 align:start position:0%
multiplied 27 by 27
and<01:16:54.159><c> the</c><01:16:54.400><c> output</c><01:16:54.800><c> of</c><01:16:54.960><c> this</c><01:16:55.199><c> is</c><01:16:55.280><c> now</c><01:16:55.520><c> 5</c><01:16:55.760><c> by</c><01:16:55.920><c> 27</c>

01:16:57.750 --> 01:16:57.760 align:start position:0%
and the output of this is now 5 by 27
 

01:16:57.760 --> 01:17:01.750 align:start position:0%
and the output of this is now 5 by 27
so<01:16:58.000><c> we</c><01:16:58.159><c> can</c><01:16:58.320><c> see</c><01:16:58.480><c> that</c><01:16:58.640><c> the</c><01:16:58.880><c> shape</c><01:16:59.120><c> of</c><01:16:59.199><c> this</c>

01:17:01.750 --> 01:17:01.760 align:start position:0%
 
 

01:17:01.760 --> 01:17:03.830 align:start position:0%
 
is<01:17:02.000><c> 5</c><01:17:02.159><c> by</c><01:17:02.320><c> 27.</c>

01:17:03.830 --> 01:17:03.840 align:start position:0%
is 5 by 27.
 

01:17:03.840 --> 01:17:06.229 align:start position:0%
is 5 by 27.
so<01:17:04.000><c> what</c><01:17:04.239><c> is</c><01:17:04.400><c> every</c><01:17:04.719><c> element</c><01:17:05.120><c> here</c><01:17:05.520><c> telling</c><01:17:05.840><c> us</c>

01:17:06.229 --> 01:17:06.239 align:start position:0%
so what is every element here telling us
 

01:17:06.239 --> 01:17:07.030 align:start position:0%
so what is every element here telling us
right

01:17:07.030 --> 01:17:07.040 align:start position:0%
right
 

01:17:07.040 --> 01:17:09.189 align:start position:0%
right
it's<01:17:07.280><c> telling</c><01:17:07.600><c> us</c><01:17:07.840><c> for</c><01:17:08.080><c> every</c><01:17:08.320><c> one</c><01:17:08.480><c> of</c><01:17:08.640><c> 27</c>

01:17:09.189 --> 01:17:09.199 align:start position:0%
it's telling us for every one of 27
 

01:17:09.199 --> 01:17:13.189 align:start position:0%
it's telling us for every one of 27
neurons<01:17:09.840><c> that</c><01:17:10.000><c> we</c><01:17:10.239><c> created</c>

01:17:13.189 --> 01:17:13.199 align:start position:0%
 
 

01:17:13.199 --> 01:17:16.630 align:start position:0%
 
what<01:17:13.440><c> is</c><01:17:13.600><c> the</c><01:17:13.840><c> firing</c><01:17:14.239><c> rate</c><01:17:14.880><c> of</c><01:17:15.040><c> those</c><01:17:15.600><c> neurons</c>

01:17:16.630 --> 01:17:16.640 align:start position:0%
what is the firing rate of those neurons
 

01:17:16.640 --> 01:17:19.590 align:start position:0%
what is the firing rate of those neurons
on<01:17:16.880><c> every</c><01:17:17.120><c> one</c><01:17:17.360><c> of</c><01:17:17.440><c> those</c><01:17:17.920><c> five</c><01:17:18.159><c> examples</c>

01:17:19.590 --> 01:17:19.600 align:start position:0%
on every one of those five examples
 

01:17:19.600 --> 01:17:20.709 align:start position:0%
on every one of those five examples
so

01:17:20.709 --> 01:17:20.719 align:start position:0%
so
 

01:17:20.719 --> 01:17:25.270 align:start position:0%
so
the<01:17:20.960><c> element</c><01:17:21.520><c> for</c><01:17:21.679><c> example</c><01:17:22.239><c> 3</c><01:17:22.719><c> comma</c><01:17:23.600><c> 13</c>

01:17:25.270 --> 01:17:25.280 align:start position:0%
the element for example 3 comma 13
 

01:17:25.280 --> 01:17:28.229 align:start position:0%
the element for example 3 comma 13
is<01:17:25.440><c> giving</c><01:17:25.760><c> us</c><01:17:26.320><c> the</c><01:17:26.560><c> firing</c><01:17:26.960><c> rate</c><01:17:27.360><c> of</c><01:17:27.520><c> the</c><01:17:27.679><c> 13th</c>

01:17:28.229 --> 01:17:28.239 align:start position:0%
is giving us the firing rate of the 13th
 

01:17:28.239 --> 01:17:29.270 align:start position:0%
is giving us the firing rate of the 13th
neuron

01:17:29.270 --> 01:17:29.280 align:start position:0%
neuron
 

01:17:29.280 --> 01:17:31.830 align:start position:0%
neuron
looking<01:17:29.600><c> at</c><01:17:29.760><c> the</c><01:17:29.920><c> third</c><01:17:30.239><c> input</c>

01:17:31.830 --> 01:17:31.840 align:start position:0%
looking at the third input
 

01:17:31.840 --> 01:17:34.470 align:start position:0%
looking at the third input
and<01:17:32.080><c> the</c><01:17:32.239><c> way</c><01:17:32.480><c> this</c><01:17:32.719><c> was</c><01:17:33.040><c> achieved</c><01:17:33.760><c> is</c><01:17:34.159><c> by</c><01:17:34.320><c> a</c>

01:17:34.470 --> 01:17:34.480 align:start position:0%
and the way this was achieved is by a
 

01:17:34.480 --> 01:17:36.229 align:start position:0%
and the way this was achieved is by a
dot<01:17:34.719><c> product</c>

01:17:36.229 --> 01:17:36.239 align:start position:0%
dot product
 

01:17:36.239 --> 01:17:37.750 align:start position:0%
dot product
between<01:17:36.640><c> the</c><01:17:36.880><c> third</c>

01:17:37.750 --> 01:17:37.760 align:start position:0%
between the third
 

01:17:37.760 --> 01:17:38.870 align:start position:0%
between the third
input

01:17:38.870 --> 01:17:38.880 align:start position:0%
input
 

01:17:38.880 --> 01:17:41.430 align:start position:0%
input
and<01:17:39.199><c> the</c><01:17:39.360><c> 13th</c><01:17:40.159><c> column</c>

01:17:41.430 --> 01:17:41.440 align:start position:0%
and the 13th column
 

01:17:41.440 --> 01:17:44.790 align:start position:0%
and the 13th column
of<01:17:41.600><c> this</c><01:17:41.840><c> w</c><01:17:42.239><c> matrix</c><01:17:43.040><c> here</c>

01:17:44.790 --> 01:17:44.800 align:start position:0%
of this w matrix here
 

01:17:44.800 --> 01:17:45.590 align:start position:0%
of this w matrix here
okay

01:17:45.590 --> 01:17:45.600 align:start position:0%
okay
 

01:17:45.600 --> 01:17:46.470 align:start position:0%
okay
so

01:17:46.470 --> 01:17:46.480 align:start position:0%
so
 

01:17:46.480 --> 01:17:48.229 align:start position:0%
so
using<01:17:46.719><c> matrix</c><01:17:47.040><c> multiplication</c><01:17:47.679><c> we</c><01:17:47.840><c> can</c><01:17:48.000><c> very</c>

01:17:48.229 --> 01:17:48.239 align:start position:0%
using matrix multiplication we can very
 

01:17:48.239 --> 01:17:50.790 align:start position:0%
using matrix multiplication we can very
efficiently<01:17:48.880><c> evaluate</c>

01:17:50.790 --> 01:17:50.800 align:start position:0%
efficiently evaluate
 

01:17:50.800 --> 01:17:52.630 align:start position:0%
efficiently evaluate
the<01:17:50.960><c> dot</c><01:17:51.199><c> product</c><01:17:51.600><c> between</c><01:17:52.000><c> lots</c><01:17:52.239><c> of</c><01:17:52.400><c> input</c>

01:17:52.630 --> 01:17:52.640 align:start position:0%
the dot product between lots of input
 

01:17:52.640 --> 01:17:54.950 align:start position:0%
the dot product between lots of input
examples<01:17:53.120><c> in</c><01:17:53.280><c> a</c><01:17:53.600><c> batch</c>

01:17:54.950 --> 01:17:54.960 align:start position:0%
examples in a batch
 

01:17:54.960 --> 01:17:57.510 align:start position:0%
examples in a batch
and<01:17:55.440><c> lots</c><01:17:55.760><c> of</c><01:17:56.159><c> neurons</c><01:17:56.960><c> where</c><01:17:57.199><c> all</c><01:17:57.360><c> those</c>

01:17:57.510 --> 01:17:57.520 align:start position:0%
and lots of neurons where all those
 

01:17:57.520 --> 01:17:59.669 align:start position:0%
and lots of neurons where all those
neurons<01:17:57.920><c> have</c><01:17:58.080><c> weights</c><01:17:58.560><c> in</c><01:17:58.719><c> the</c><01:17:58.880><c> columns</c><01:17:59.520><c> of</c>

01:17:59.669 --> 01:17:59.679 align:start position:0%
neurons have weights in the columns of
 

01:17:59.679 --> 01:18:01.030 align:start position:0%
neurons have weights in the columns of
those<01:17:59.840><c> w's</c>

01:18:01.030 --> 01:18:01.040 align:start position:0%
those w's
 

01:18:01.040 --> 01:18:02.390 align:start position:0%
those w's
and<01:18:01.199><c> in</c><01:18:01.280><c> matrix</c><01:18:01.600><c> multiplication</c><01:18:02.080><c> we're</c><01:18:02.239><c> just</c>

01:18:02.390 --> 01:18:02.400 align:start position:0%
and in matrix multiplication we're just
 

01:18:02.400 --> 01:18:04.470 align:start position:0%
and in matrix multiplication we're just
doing<01:18:02.640><c> those</c><01:18:02.800><c> dot</c><01:18:03.040><c> products</c><01:18:03.520><c> and</c>

01:18:04.470 --> 01:18:04.480 align:start position:0%
doing those dot products and
 

01:18:04.480 --> 01:18:06.229 align:start position:0%
doing those dot products and
in<01:18:04.640><c> parallel</c><01:18:05.440><c> just</c><01:18:05.600><c> to</c><01:18:05.679><c> show</c><01:18:05.840><c> you</c><01:18:05.920><c> that</c><01:18:06.080><c> this</c>

01:18:06.229 --> 01:18:06.239 align:start position:0%
in parallel just to show you that this
 

01:18:06.239 --> 01:18:08.470 align:start position:0%
in parallel just to show you that this
is<01:18:06.400><c> the</c><01:18:06.560><c> case</c><01:18:07.120><c> we</c><01:18:07.280><c> can</c><01:18:07.440><c> take</c><01:18:07.679><c> x</c><01:18:07.840><c> and</c><01:18:08.239><c> we</c><01:18:08.320><c> can</c>

01:18:08.470 --> 01:18:08.480 align:start position:0%
is the case we can take x and we can
 

01:18:08.480 --> 01:18:10.390 align:start position:0%
is the case we can take x and we can
take<01:18:08.640><c> the</c><01:18:08.800><c> third</c>

01:18:10.390 --> 01:18:10.400 align:start position:0%
take the third
 

01:18:10.400 --> 01:18:12.070 align:start position:0%
take the third
row

01:18:12.070 --> 01:18:12.080 align:start position:0%
row
 

01:18:12.080 --> 01:18:14.630 align:start position:0%
row
and<01:18:12.239><c> we</c><01:18:12.320><c> can</c><01:18:12.480><c> take</c><01:18:12.719><c> the</c><01:18:13.199><c> w</c><01:18:13.600><c> and</c><01:18:13.679><c> take</c><01:18:13.920><c> its</c><01:18:14.080><c> 13th</c>

01:18:14.630 --> 01:18:14.640 align:start position:0%
and we can take the w and take its 13th
 

01:18:14.640 --> 01:18:17.350 align:start position:0%
and we can take the w and take its 13th
column

01:18:17.350 --> 01:18:17.360 align:start position:0%
 
 

01:18:17.360 --> 01:18:18.790 align:start position:0%
 
and<01:18:17.440><c> then</c><01:18:17.600><c> we</c><01:18:17.760><c> can</c><01:18:17.920><c> do</c>

01:18:18.790 --> 01:18:18.800 align:start position:0%
and then we can do
 

01:18:18.800 --> 01:18:21.510 align:start position:0%
and then we can do
x<01:18:19.040><c> and</c><01:18:19.199><c> get</c><01:18:19.440><c> three</c>

01:18:21.510 --> 01:18:21.520 align:start position:0%
x and get three
 

01:18:21.520 --> 01:18:26.630 align:start position:0%
x and get three
elementwise<01:18:22.159><c> multiply</c><01:18:23.280><c> with</c><01:18:23.520><c> w</c><01:18:23.840><c> at</c><01:18:23.920><c> 13.</c>

01:18:26.630 --> 01:18:26.640 align:start position:0%
elementwise multiply with w at 13.
 

01:18:26.640 --> 01:18:29.590 align:start position:0%
elementwise multiply with w at 13.
and<01:18:26.880><c> sum</c><01:18:27.120><c> that</c><01:18:27.360><c> up</c><01:18:27.760><c> that's</c><01:18:28.000><c> wx</c><01:18:28.480><c> plus</c><01:18:28.719><c> b</c>

01:18:29.590 --> 01:18:29.600 align:start position:0%
and sum that up that's wx plus b
 

01:18:29.600 --> 01:18:31.910 align:start position:0%
and sum that up that's wx plus b
well<01:18:29.760><c> there's</c><01:18:30.000><c> no</c><01:18:30.400><c> plus</c><01:18:30.640><c> b</c><01:18:30.880><c> it's</c><01:18:30.960><c> just</c><01:18:31.120><c> wx</c><01:18:31.679><c> dot</c>

01:18:31.910 --> 01:18:31.920 align:start position:0%
well there's no plus b it's just wx dot
 

01:18:31.920 --> 01:18:32.790 align:start position:0%
well there's no plus b it's just wx dot
product

01:18:32.790 --> 01:18:32.800 align:start position:0%
product
 

01:18:32.800 --> 01:18:34.070 align:start position:0%
product
and<01:18:32.960><c> that's</c>

01:18:34.070 --> 01:18:34.080 align:start position:0%
and that's
 

01:18:34.080 --> 01:18:35.189 align:start position:0%
and that's
this<01:18:34.239><c> number</c>

01:18:35.189 --> 01:18:35.199 align:start position:0%
this number
 

01:18:35.199 --> 01:18:36.870 align:start position:0%
this number
so<01:18:35.360><c> you</c><01:18:35.440><c> see</c><01:18:35.600><c> that</c><01:18:35.760><c> this</c><01:18:35.920><c> is</c><01:18:36.000><c> just</c><01:18:36.159><c> being</c><01:18:36.400><c> done</c>

01:18:36.870 --> 01:18:36.880 align:start position:0%
so you see that this is just being done
 

01:18:36.880 --> 01:18:39.510 align:start position:0%
so you see that this is just being done
efficiently<01:18:37.920><c> by</c><01:18:38.080><c> the</c><01:18:38.159><c> matrix</c><01:18:38.480><c> multiplication</c>

01:18:39.510 --> 01:18:39.520 align:start position:0%
efficiently by the matrix multiplication
 

01:18:39.520 --> 01:18:40.390 align:start position:0%
efficiently by the matrix multiplication
operation

01:18:40.390 --> 01:18:40.400 align:start position:0%
operation
 

01:18:40.400 --> 01:18:42.709 align:start position:0%
operation
for<01:18:40.719><c> all</c><01:18:40.880><c> the</c><01:18:41.120><c> input</c><01:18:41.440><c> examples</c><01:18:42.080><c> and</c><01:18:42.320><c> for</c><01:18:42.560><c> all</c>

01:18:42.709 --> 01:18:42.719 align:start position:0%
for all the input examples and for all
 

01:18:42.719 --> 01:18:45.990 align:start position:0%
for all the input examples and for all
the<01:18:43.120><c> output</c><01:18:43.520><c> neurons</c><01:18:44.320><c> of</c><01:18:44.480><c> this</c><01:18:44.719><c> first</c><01:18:45.040><c> layer</c>

01:18:45.990 --> 01:18:46.000 align:start position:0%
the output neurons of this first layer
 

01:18:46.000 --> 01:18:49.270 align:start position:0%
the output neurons of this first layer
okay<01:18:46.239><c> so</c><01:18:46.400><c> we</c><01:18:46.560><c> fed</c><01:18:47.280><c> our</c><01:18:47.719><c> 27-dimensional</c><01:18:48.800><c> inputs</c>

01:18:49.270 --> 01:18:49.280 align:start position:0%
okay so we fed our 27-dimensional inputs
 

01:18:49.280 --> 01:18:51.110 align:start position:0%
okay so we fed our 27-dimensional inputs
into<01:18:49.520><c> a</c><01:18:49.600><c> first</c><01:18:49.840><c> layer</c><01:18:50.000><c> of</c><01:18:50.080><c> a</c><01:18:50.159><c> neural</c><01:18:50.480><c> net</c><01:18:50.960><c> that</c>

01:18:51.110 --> 01:18:51.120 align:start position:0%
into a first layer of a neural net that
 

01:18:51.120 --> 01:18:54.390 align:start position:0%
into a first layer of a neural net that
has<01:18:51.360><c> 27</c><01:18:51.840><c> neurons</c><01:18:52.640><c> right</c><01:18:52.800><c> so</c><01:18:52.960><c> we</c><01:18:53.120><c> have</c><01:18:53.920><c> 27</c>

01:18:54.390 --> 01:18:54.400 align:start position:0%
has 27 neurons right so we have 27
 

01:18:54.400 --> 01:18:57.189 align:start position:0%
has 27 neurons right so we have 27
inputs<01:18:54.719><c> and</c><01:18:54.800><c> now</c><01:18:54.960><c> we</c><01:18:55.120><c> have</c><01:18:55.199><c> 27</c><01:18:56.080><c> neurons</c><01:18:56.960><c> these</c>

01:18:57.189 --> 01:18:57.199 align:start position:0%
inputs and now we have 27 neurons these
 

01:18:57.199 --> 01:18:59.990 align:start position:0%
inputs and now we have 27 neurons these
neurons<01:18:58.000><c> perform</c><01:18:58.480><c> w</c><01:18:58.880><c> times</c><01:18:59.199><c> x</c><01:18:59.679><c> they</c><01:18:59.840><c> don't</c>

01:18:59.990 --> 01:19:00.000 align:start position:0%
neurons perform w times x they don't
 

01:19:00.000 --> 01:19:01.510 align:start position:0%
neurons perform w times x they don't
have<01:19:00.159><c> a</c><01:19:00.239><c> bias</c><01:19:00.880><c> and</c><01:19:00.960><c> they</c><01:19:01.120><c> don't</c><01:19:01.280><c> have</c><01:19:01.440><c> a</c>

01:19:01.510 --> 01:19:01.520 align:start position:0%
have a bias and they don't have a
 

01:19:01.520 --> 01:19:03.590 align:start position:0%
have a bias and they don't have a
non-linearity<01:19:02.239><c> like</c><01:19:02.480><c> 10</c><01:19:02.719><c> h</c><01:19:03.120><c> we're</c><01:19:03.280><c> going</c><01:19:03.440><c> to</c>

01:19:03.590 --> 01:19:03.600 align:start position:0%
non-linearity like 10 h we're going to
 

01:19:03.600 --> 01:19:06.470 align:start position:0%
non-linearity like 10 h we're going to
leave<01:19:03.760><c> them</c><01:19:03.920><c> to</c><01:19:04.080><c> be</c><01:19:04.480><c> a</c><01:19:04.640><c> linear</c><01:19:05.520><c> layer</c>

01:19:06.470 --> 01:19:06.480 align:start position:0%
leave them to be a linear layer
 

01:19:06.480 --> 01:19:07.910 align:start position:0%
leave them to be a linear layer
in<01:19:06.640><c> addition</c><01:19:07.040><c> to</c><01:19:07.120><c> that</c><01:19:07.360><c> we're</c><01:19:07.520><c> not</c><01:19:07.679><c> going</c><01:19:07.840><c> to</c>

01:19:07.910 --> 01:19:07.920 align:start position:0%
in addition to that we're not going to
 

01:19:07.920 --> 01:19:09.510 align:start position:0%
in addition to that we're not going to
have<01:19:08.080><c> any</c><01:19:08.320><c> other</c><01:19:08.480><c> layers</c><01:19:08.960><c> this</c><01:19:09.199><c> is</c><01:19:09.280><c> going</c><01:19:09.440><c> to</c>

01:19:09.510 --> 01:19:09.520 align:start position:0%
have any other layers this is going to
 

01:19:09.520 --> 01:19:11.430 align:start position:0%
have any other layers this is going to
be<01:19:09.760><c> it</c><01:19:10.000><c> it's</c><01:19:10.080><c> just</c><01:19:10.320><c> going</c><01:19:10.480><c> to</c><01:19:10.560><c> be</c>

01:19:11.430 --> 01:19:11.440 align:start position:0%
be it it's just going to be
 

01:19:11.440 --> 01:19:13.510 align:start position:0%
be it it's just going to be
the<01:19:11.600><c> dumbest</c><01:19:12.080><c> smallest</c><01:19:12.719><c> simplest</c><01:19:13.040><c> neural</c><01:19:13.280><c> net</c>

01:19:13.510 --> 01:19:13.520 align:start position:0%
the dumbest smallest simplest neural net
 

01:19:13.520 --> 01:19:16.390 align:start position:0%
the dumbest smallest simplest neural net
which<01:19:13.679><c> is</c><01:19:13.760><c> just</c><01:19:14.000><c> a</c><01:19:14.080><c> single</c><01:19:14.400><c> linear</c><01:19:14.880><c> layer</c>

01:19:16.390 --> 01:19:16.400 align:start position:0%
which is just a single linear layer
 

01:19:16.400 --> 01:19:18.070 align:start position:0%
which is just a single linear layer
and<01:19:16.560><c> now</c><01:19:16.800><c> i'd</c><01:19:16.880><c> like</c><01:19:17.040><c> to</c><01:19:17.199><c> explain</c><01:19:17.440><c> what</c><01:19:17.679><c> i</c><01:19:17.840><c> want</c>

01:19:18.070 --> 01:19:18.080 align:start position:0%
and now i'd like to explain what i want
 

01:19:18.080 --> 01:19:21.189 align:start position:0%
and now i'd like to explain what i want
those<01:19:18.320><c> 27</c><01:19:19.199><c> outputs</c><01:19:19.840><c> to</c><01:19:20.000><c> be</c>

01:19:21.189 --> 01:19:21.199 align:start position:0%
those 27 outputs to be
 

01:19:21.199 --> 01:19:22.550 align:start position:0%
those 27 outputs to be
intuitively<01:19:21.760><c> what</c><01:19:21.920><c> we're</c><01:19:22.000><c> trying</c><01:19:22.159><c> to</c><01:19:22.239><c> produce</c>

01:19:22.550 --> 01:19:22.560 align:start position:0%
intuitively what we're trying to produce
 

01:19:22.560 --> 01:19:24.630 align:start position:0%
intuitively what we're trying to produce
here<01:19:22.800><c> for</c><01:19:22.960><c> every</c><01:19:23.199><c> single</c><01:19:23.520><c> input</c><01:19:23.840><c> example</c><01:19:24.480><c> is</c>

01:19:24.630 --> 01:19:24.640 align:start position:0%
here for every single input example is
 

01:19:24.640 --> 01:19:25.990 align:start position:0%
here for every single input example is
we're<01:19:24.800><c> trying</c><01:19:24.960><c> to</c><01:19:25.120><c> produce</c><01:19:25.440><c> some</c><01:19:25.600><c> kind</c><01:19:25.760><c> of</c><01:19:25.920><c> a</c>

01:19:25.990 --> 01:19:26.000 align:start position:0%
we're trying to produce some kind of a
 

01:19:26.000 --> 01:19:27.669 align:start position:0%
we're trying to produce some kind of a
probability<01:19:26.560><c> distribution</c><01:19:27.120><c> for</c><01:19:27.280><c> the</c><01:19:27.440><c> next</c>

01:19:27.669 --> 01:19:27.679 align:start position:0%
probability distribution for the next
 

01:19:27.679 --> 01:19:29.270 align:start position:0%
probability distribution for the next
character<01:19:28.080><c> in</c><01:19:28.239><c> a</c><01:19:28.320><c> sequence</c>

01:19:29.270 --> 01:19:29.280 align:start position:0%
character in a sequence
 

01:19:29.280 --> 01:19:31.430 align:start position:0%
character in a sequence
and<01:19:29.520><c> there's</c><01:19:29.920><c> 27</c><01:19:30.560><c> of</c><01:19:30.640><c> them</c>

01:19:31.430 --> 01:19:31.440 align:start position:0%
and there's 27 of them
 

01:19:31.440 --> 01:19:33.030 align:start position:0%
and there's 27 of them
but<01:19:31.679><c> we</c><01:19:31.760><c> have</c><01:19:31.920><c> to</c><01:19:32.000><c> come</c><01:19:32.159><c> up</c><01:19:32.239><c> with</c><01:19:32.400><c> like</c><01:19:32.560><c> precise</c>

01:19:33.030 --> 01:19:33.040 align:start position:0%
but we have to come up with like precise
 

01:19:33.040 --> 01:19:34.790 align:start position:0%
but we have to come up with like precise
semantics<01:19:33.679><c> for</c><01:19:33.840><c> exactly</c><01:19:34.239><c> how</c><01:19:34.400><c> we're</c><01:19:34.480><c> going</c><01:19:34.640><c> to</c>

01:19:34.790 --> 01:19:34.800 align:start position:0%
semantics for exactly how we're going to
 

01:19:34.800 --> 01:19:37.669 align:start position:0%
semantics for exactly how we're going to
interpret<01:19:35.760><c> these</c><01:19:36.000><c> 27</c><01:19:36.560><c> numbers</c><01:19:37.280><c> that</c><01:19:37.520><c> these</c>

01:19:37.669 --> 01:19:37.679 align:start position:0%
interpret these 27 numbers that these
 

01:19:37.679 --> 01:19:39.669 align:start position:0%
interpret these 27 numbers that these
neurons<01:19:38.159><c> take</c><01:19:38.400><c> on</c>

01:19:39.669 --> 01:19:39.679 align:start position:0%
neurons take on
 

01:19:39.679 --> 01:19:41.110 align:start position:0%
neurons take on
now<01:19:39.920><c> intuitively</c>

01:19:41.110 --> 01:19:41.120 align:start position:0%
now intuitively
 

01:19:41.120 --> 01:19:42.550 align:start position:0%
now intuitively
you<01:19:41.280><c> see</c><01:19:41.440><c> here</c><01:19:41.600><c> that</c><01:19:41.760><c> these</c><01:19:41.920><c> numbers</c><01:19:42.320><c> are</c>

01:19:42.550 --> 01:19:42.560 align:start position:0%
you see here that these numbers are
 

01:19:42.560 --> 01:19:43.990 align:start position:0%
you see here that these numbers are
negative<01:19:43.040><c> and</c><01:19:43.120><c> some</c><01:19:43.280><c> of</c><01:19:43.280><c> them</c><01:19:43.440><c> are</c><01:19:43.520><c> positive</c>

01:19:43.990 --> 01:19:44.000 align:start position:0%
negative and some of them are positive
 

01:19:44.000 --> 01:19:45.110 align:start position:0%
negative and some of them are positive
etc

01:19:45.110 --> 01:19:45.120 align:start position:0%
etc
 

01:19:45.120 --> 01:19:46.470 align:start position:0%
etc
and<01:19:45.280><c> that's</c><01:19:45.520><c> because</c><01:19:45.760><c> these</c><01:19:45.920><c> are</c><01:19:46.080><c> coming</c><01:19:46.320><c> out</c>

01:19:46.470 --> 01:19:46.480 align:start position:0%
and that's because these are coming out
 

01:19:46.480 --> 01:19:48.870 align:start position:0%
and that's because these are coming out
of<01:19:46.640><c> a</c><01:19:47.280><c> neural</c><01:19:47.520><c> net</c><01:19:47.760><c> layer</c><01:19:48.080><c> initialized</c><01:19:48.719><c> with</c>

01:19:48.870 --> 01:19:48.880 align:start position:0%
of a neural net layer initialized with
 

01:19:48.880 --> 01:19:51.350 align:start position:0%
of a neural net layer initialized with
these

01:19:51.350 --> 01:19:51.360 align:start position:0%
 
 

01:19:51.360 --> 01:19:52.950 align:start position:0%
 
normal<01:19:51.600><c> distribution</c>

01:19:52.950 --> 01:19:52.960 align:start position:0%
normal distribution
 

01:19:52.960 --> 01:19:54.229 align:start position:0%
normal distribution
parameters

01:19:54.229 --> 01:19:54.239 align:start position:0%
parameters
 

01:19:54.239 --> 01:19:55.830 align:start position:0%
parameters
but<01:19:54.480><c> what</c><01:19:54.640><c> we</c><01:19:54.800><c> want</c><01:19:55.120><c> is</c><01:19:55.199><c> we</c><01:19:55.360><c> want</c><01:19:55.520><c> something</c>

01:19:55.830 --> 01:19:55.840 align:start position:0%
but what we want is we want something
 

01:19:55.840 --> 01:19:57.189 align:start position:0%
but what we want is we want something
like<01:19:56.000><c> we</c><01:19:56.159><c> had</c><01:19:56.400><c> here</c>

01:19:57.189 --> 01:19:57.199 align:start position:0%
like we had here
 

01:19:57.199 --> 01:19:58.950 align:start position:0%
like we had here
like<01:19:57.440><c> each</c><01:19:57.760><c> row</c><01:19:58.159><c> here</c>

01:19:58.950 --> 01:19:58.960 align:start position:0%
like each row here
 

01:19:58.960 --> 01:20:01.110 align:start position:0%
like each row here
told<01:19:59.280><c> us</c><01:19:59.679><c> the</c><01:19:59.840><c> counts</c><01:20:00.800><c> and</c><01:20:00.880><c> then</c><01:20:01.040><c> we</c>

01:20:01.110 --> 01:20:01.120 align:start position:0%
told us the counts and then we
 

01:20:01.120 --> 01:20:02.149 align:start position:0%
told us the counts and then we
normalized<01:20:01.600><c> the</c><01:20:01.679><c> counts</c><01:20:01.920><c> to</c><01:20:02.000><c> get</c>

01:20:02.149 --> 01:20:02.159 align:start position:0%
normalized the counts to get
 

01:20:02.159 --> 01:20:04.229 align:start position:0%
normalized the counts to get
probabilities<01:20:03.440><c> and</c><01:20:03.600><c> we</c><01:20:03.679><c> want</c><01:20:03.920><c> something</c>

01:20:04.229 --> 01:20:04.239 align:start position:0%
probabilities and we want something
 

01:20:04.239 --> 01:20:06.390 align:start position:0%
probabilities and we want something
similar<01:20:04.560><c> to</c><01:20:04.640><c> come</c><01:20:04.800><c> out</c><01:20:04.960><c> of</c><01:20:05.040><c> the</c><01:20:05.120><c> neural</c><01:20:05.360><c> net</c>

01:20:06.390 --> 01:20:06.400 align:start position:0%
similar to come out of the neural net
 

01:20:06.400 --> 01:20:07.830 align:start position:0%
similar to come out of the neural net
but<01:20:06.560><c> what</c><01:20:06.719><c> we</c><01:20:06.880><c> just</c><01:20:07.120><c> have</c><01:20:07.280><c> right</c><01:20:07.440><c> now</c><01:20:07.679><c> is</c><01:20:07.760><c> just</c>

01:20:07.830 --> 01:20:07.840 align:start position:0%
but what we just have right now is just
 

01:20:07.840 --> 01:20:10.550 align:start position:0%
but what we just have right now is just
some<01:20:08.080><c> negative</c><01:20:08.400><c> and</c><01:20:08.480><c> positive</c><01:20:08.800><c> numbers</c>

01:20:10.550 --> 01:20:10.560 align:start position:0%
some negative and positive numbers
 

01:20:10.560 --> 01:20:12.229 align:start position:0%
some negative and positive numbers
now<01:20:10.960><c> we</c><01:20:11.120><c> want</c><01:20:11.280><c> those</c><01:20:11.520><c> numbers</c><01:20:11.840><c> to</c><01:20:11.920><c> somehow</c>

01:20:12.229 --> 01:20:12.239 align:start position:0%
now we want those numbers to somehow
 

01:20:12.239 --> 01:20:13.990 align:start position:0%
now we want those numbers to somehow
represent<01:20:12.719><c> the</c><01:20:12.800><c> probabilities</c><01:20:13.520><c> for</c><01:20:13.679><c> the</c><01:20:13.760><c> next</c>

01:20:13.990 --> 01:20:14.000 align:start position:0%
represent the probabilities for the next
 

01:20:14.000 --> 01:20:15.270 align:start position:0%
represent the probabilities for the next
character

01:20:15.270 --> 01:20:15.280 align:start position:0%
character
 

01:20:15.280 --> 01:20:17.590 align:start position:0%
character
but<01:20:15.520><c> you</c><01:20:15.600><c> see</c><01:20:15.760><c> that</c><01:20:15.920><c> probabilities</c><01:20:16.880><c> they</c><01:20:17.360><c> they</c>

01:20:17.590 --> 01:20:17.600 align:start position:0%
but you see that probabilities they they
 

01:20:17.600 --> 01:20:19.910 align:start position:0%
but you see that probabilities they they
have<01:20:17.760><c> a</c><01:20:17.840><c> special</c><01:20:18.159><c> structure</c><01:20:18.719><c> they</c><01:20:18.960><c> um</c>

01:20:19.910 --> 01:20:19.920 align:start position:0%
have a special structure they um
 

01:20:19.920 --> 01:20:21.910 align:start position:0%
have a special structure they um
they're<01:20:20.159><c> positive</c><01:20:20.639><c> numbers</c><01:20:21.199><c> and</c><01:20:21.280><c> they</c><01:20:21.520><c> sum</c><01:20:21.760><c> to</c>

01:20:21.910 --> 01:20:21.920 align:start position:0%
they're positive numbers and they sum to
 

01:20:21.920 --> 01:20:22.790 align:start position:0%
they're positive numbers and they sum to
one

01:20:22.790 --> 01:20:22.800 align:start position:0%
one
 

01:20:22.800 --> 01:20:24.550 align:start position:0%
one
and<01:20:23.040><c> so</c><01:20:23.440><c> that</c><01:20:23.600><c> doesn't</c><01:20:23.920><c> just</c><01:20:24.080><c> come</c><01:20:24.239><c> out</c><01:20:24.320><c> of</c><01:20:24.480><c> a</c>

01:20:24.550 --> 01:20:24.560 align:start position:0%
and so that doesn't just come out of a
 

01:20:24.560 --> 01:20:25.750 align:start position:0%
and so that doesn't just come out of a
neural<01:20:24.800><c> net</c>

01:20:25.750 --> 01:20:25.760 align:start position:0%
neural net
 

01:20:25.760 --> 01:20:27.750 align:start position:0%
neural net
and<01:20:25.840><c> then</c><01:20:26.159><c> they</c><01:20:26.320><c> can't</c><01:20:26.560><c> be</c><01:20:26.800><c> counts</c>

01:20:27.750 --> 01:20:27.760 align:start position:0%
and then they can't be counts
 

01:20:27.760 --> 01:20:31.030 align:start position:0%
and then they can't be counts
because<01:20:28.400><c> these</c><01:20:28.639><c> counts</c><01:20:29.199><c> are</c><01:20:29.600><c> positive</c><01:20:30.560><c> and</c>

01:20:31.030 --> 01:20:31.040 align:start position:0%
because these counts are positive and
 

01:20:31.040 --> 01:20:32.709 align:start position:0%
because these counts are positive and
counts<01:20:31.440><c> are</c><01:20:31.679><c> integers</c>

01:20:32.709 --> 01:20:32.719 align:start position:0%
counts are integers
 

01:20:32.719 --> 01:20:34.470 align:start position:0%
counts are integers
so<01:20:33.120><c> counts</c><01:20:33.440><c> are</c><01:20:33.520><c> also</c><01:20:33.760><c> not</c><01:20:34.000><c> really</c><01:20:34.239><c> a</c><01:20:34.320><c> good</c>

01:20:34.470 --> 01:20:34.480 align:start position:0%
so counts are also not really a good
 

01:20:34.480 --> 01:20:36.629 align:start position:0%
so counts are also not really a good
thing<01:20:34.639><c> to</c><01:20:34.880><c> output</c><01:20:35.199><c> from</c><01:20:35.280><c> a</c><01:20:35.440><c> neural</c><01:20:35.679><c> net</c>

01:20:36.629 --> 01:20:36.639 align:start position:0%
thing to output from a neural net
 

01:20:36.639 --> 01:20:38.149 align:start position:0%
thing to output from a neural net
so<01:20:36.800><c> instead</c><01:20:37.199><c> what</c><01:20:37.360><c> the</c><01:20:37.440><c> neural</c><01:20:37.679><c> net</c><01:20:37.920><c> is</c><01:20:38.000><c> going</c>

01:20:38.149 --> 01:20:38.159 align:start position:0%
so instead what the neural net is going
 

01:20:38.159 --> 01:20:39.750 align:start position:0%
so instead what the neural net is going
to<01:20:38.320><c> output</c><01:20:38.880><c> and</c><01:20:39.040><c> how</c><01:20:39.199><c> we</c><01:20:39.360><c> are</c><01:20:39.440><c> going</c><01:20:39.600><c> to</c>

01:20:39.750 --> 01:20:39.760 align:start position:0%
to output and how we are going to
 

01:20:39.760 --> 01:20:42.070 align:start position:0%
to output and how we are going to
interpret<01:20:40.639><c> the</c><01:20:41.040><c> um</c>

01:20:42.070 --> 01:20:42.080 align:start position:0%
interpret the um
 

01:20:42.080 --> 01:20:45.590 align:start position:0%
interpret the um
the<01:20:42.480><c> 27</c><01:20:43.120><c> numbers</c><01:20:44.000><c> is</c><01:20:44.159><c> that</c><01:20:44.239><c> these</c><01:20:44.480><c> 27</c><01:20:45.040><c> numbers</c>

01:20:45.590 --> 01:20:45.600 align:start position:0%
the 27 numbers is that these 27 numbers
 

01:20:45.600 --> 01:20:48.470 align:start position:0%
the 27 numbers is that these 27 numbers
are<01:20:45.760><c> giving</c><01:20:46.080><c> us</c><01:20:46.639><c> log</c><01:20:47.120><c> counts</c>

01:20:48.470 --> 01:20:48.480 align:start position:0%
are giving us log counts
 

01:20:48.480 --> 01:20:49.669 align:start position:0%
are giving us log counts
basically

01:20:49.669 --> 01:20:49.679 align:start position:0%
basically
 

01:20:49.679 --> 01:20:50.390 align:start position:0%
basically
um

01:20:50.390 --> 01:20:50.400 align:start position:0%
um
 

01:20:50.400 --> 01:20:52.870 align:start position:0%
um
so<01:20:50.800><c> instead</c><01:20:51.040><c> of</c><01:20:51.120><c> giving</c><01:20:51.440><c> us</c><01:20:51.920><c> counts</c><01:20:52.400><c> directly</c>

01:20:52.870 --> 01:20:52.880 align:start position:0%
so instead of giving us counts directly
 

01:20:52.880 --> 01:20:54.790 align:start position:0%
so instead of giving us counts directly
like<01:20:53.120><c> in</c><01:20:53.199><c> this</c><01:20:53.360><c> table</c><01:20:53.840><c> they're</c><01:20:54.000><c> giving</c><01:20:54.320><c> us</c><01:20:54.480><c> log</c>

01:20:54.790 --> 01:20:54.800 align:start position:0%
like in this table they're giving us log
 

01:20:54.800 --> 01:20:55.990 align:start position:0%
like in this table they're giving us log
counts

01:20:55.990 --> 01:20:56.000 align:start position:0%
counts
 

01:20:56.000 --> 01:20:57.669 align:start position:0%
counts
and<01:20:56.239><c> to</c><01:20:56.480><c> get</c><01:20:56.639><c> the</c><01:20:56.800><c> counts</c><01:20:57.280><c> we're</c><01:20:57.440><c> going</c><01:20:57.600><c> to</c>

01:20:57.669 --> 01:20:57.679 align:start position:0%
and to get the counts we're going to
 

01:20:57.679 --> 01:20:59.350 align:start position:0%
and to get the counts we're going to
take<01:20:57.920><c> the</c><01:20:58.080><c> log</c><01:20:58.480><c> counts</c><01:20:58.880><c> and</c><01:20:58.960><c> we're</c><01:20:59.120><c> going</c><01:20:59.280><c> to</c>

01:20:59.350 --> 01:20:59.360 align:start position:0%
take the log counts and we're going to
 

01:20:59.360 --> 01:21:01.350 align:start position:0%
take the log counts and we're going to
exponentiate<01:21:00.159><c> them</c>

01:21:01.350 --> 01:21:01.360 align:start position:0%
exponentiate them
 

01:21:01.360 --> 01:21:02.310 align:start position:0%
exponentiate them
now

01:21:02.310 --> 01:21:02.320 align:start position:0%
now
 

01:21:02.320 --> 01:21:04.149 align:start position:0%
now
exponentiation

01:21:04.149 --> 01:21:04.159 align:start position:0%
exponentiation
 

01:21:04.159 --> 01:21:07.189 align:start position:0%
exponentiation
takes<01:21:04.400><c> the</c><01:21:04.480><c> following</c><01:21:05.199><c> form</c>

01:21:07.189 --> 01:21:07.199 align:start position:0%
takes the following form
 

01:21:07.199 --> 01:21:08.790 align:start position:0%
takes the following form
it<01:21:07.360><c> takes</c><01:21:07.679><c> numbers</c>

01:21:08.790 --> 01:21:08.800 align:start position:0%
it takes numbers
 

01:21:08.800 --> 01:21:10.870 align:start position:0%
it takes numbers
that<01:21:09.040><c> are</c><01:21:09.199><c> negative</c><01:21:09.600><c> or</c><01:21:09.760><c> they</c><01:21:09.920><c> are</c><01:21:10.080><c> positive</c>

01:21:10.870 --> 01:21:10.880 align:start position:0%
that are negative or they are positive
 

01:21:10.880 --> 01:21:12.790 align:start position:0%
that are negative or they are positive
it<01:21:10.960><c> takes</c><01:21:11.199><c> the</c><01:21:11.360><c> entire</c><01:21:11.679><c> real</c><01:21:12.000><c> line</c>

01:21:12.790 --> 01:21:12.800 align:start position:0%
it takes the entire real line
 

01:21:12.800 --> 01:21:14.709 align:start position:0%
it takes the entire real line
and<01:21:12.960><c> then</c><01:21:13.120><c> if</c><01:21:13.199><c> you</c><01:21:13.280><c> plug</c><01:21:13.520><c> in</c><01:21:13.679><c> negative</c><01:21:14.000><c> numbers</c>

01:21:14.709 --> 01:21:14.719 align:start position:0%
and then if you plug in negative numbers
 

01:21:14.719 --> 01:21:17.189 align:start position:0%
and then if you plug in negative numbers
you're<01:21:14.960><c> going</c><01:21:15.120><c> to</c><01:21:15.280><c> get</c><01:21:15.920><c> e</c><01:21:16.159><c> to</c><01:21:16.320><c> the</c><01:21:16.480><c> x</c>

01:21:17.189 --> 01:21:17.199 align:start position:0%
you're going to get e to the x
 

01:21:17.199 --> 01:21:20.550 align:start position:0%
you're going to get e to the x
which<01:21:17.520><c> is</c><01:21:18.080><c> uh</c><01:21:18.480><c> always</c><01:21:18.800><c> below</c><01:21:19.520><c> one</c>

01:21:20.550 --> 01:21:20.560 align:start position:0%
which is uh always below one
 

01:21:20.560 --> 01:21:23.350 align:start position:0%
which is uh always below one
so<01:21:20.719><c> you're</c><01:21:20.880><c> getting</c><01:21:21.120><c> numbers</c><01:21:21.440><c> lower</c><01:21:21.760><c> than</c><01:21:21.920><c> one</c>

01:21:23.350 --> 01:21:23.360 align:start position:0%
so you're getting numbers lower than one
 

01:21:23.360 --> 01:21:25.270 align:start position:0%
so you're getting numbers lower than one
and<01:21:23.520><c> if</c><01:21:23.679><c> you</c><01:21:23.760><c> plug</c><01:21:23.920><c> in</c><01:21:24.000><c> numbers</c><01:21:24.400><c> greater</c><01:21:24.719><c> than</c>

01:21:25.270 --> 01:21:25.280 align:start position:0%
and if you plug in numbers greater than
 

01:21:25.280 --> 01:21:27.430 align:start position:0%
and if you plug in numbers greater than
zero<01:21:25.840><c> you're</c><01:21:26.080><c> getting</c><01:21:26.239><c> numbers</c><01:21:26.880><c> greater</c><01:21:27.199><c> than</c>

01:21:27.430 --> 01:21:27.440 align:start position:0%
zero you're getting numbers greater than
 

01:21:27.440 --> 01:21:30.790 align:start position:0%
zero you're getting numbers greater than
one<01:21:28.239><c> all</c><01:21:28.400><c> the</c><01:21:28.560><c> way</c><01:21:28.960><c> growing</c><01:21:29.199><c> to</c><01:21:29.360><c> the</c><01:21:29.440><c> infinity</c>

01:21:30.790 --> 01:21:30.800 align:start position:0%
one all the way growing to the infinity
 

01:21:30.800 --> 01:21:33.189 align:start position:0%
one all the way growing to the infinity
and<01:21:30.960><c> this</c><01:21:31.199><c> here</c><01:21:31.440><c> grows</c><01:21:31.679><c> to</c><01:21:31.840><c> zero</c>

01:21:33.189 --> 01:21:33.199 align:start position:0%
and this here grows to zero
 

01:21:33.199 --> 01:21:35.110 align:start position:0%
and this here grows to zero
so<01:21:33.440><c> basically</c><01:21:33.840><c> we're</c><01:21:34.000><c> going</c><01:21:34.159><c> to</c>

01:21:35.110 --> 01:21:35.120 align:start position:0%
so basically we're going to
 

01:21:35.120 --> 01:21:37.750 align:start position:0%
so basically we're going to
take<01:21:35.920><c> these</c><01:21:36.159><c> numbers</c>

01:21:37.750 --> 01:21:37.760 align:start position:0%
take these numbers
 

01:21:37.760 --> 01:21:40.310 align:start position:0%
take these numbers
here

01:21:40.310 --> 01:21:40.320 align:start position:0%
 
 

01:21:40.320 --> 01:21:43.270 align:start position:0%
 
and

01:21:43.270 --> 01:21:43.280 align:start position:0%
and
 

01:21:43.280 --> 01:21:44.550 align:start position:0%
and
instead<01:21:43.600><c> of</c><01:21:43.679><c> them</c><01:21:43.840><c> being</c><01:21:44.080><c> positive</c><01:21:44.480><c> and</c>

01:21:44.550 --> 01:21:44.560 align:start position:0%
instead of them being positive and
 

01:21:44.560 --> 01:21:46.149 align:start position:0%
instead of them being positive and
negative<01:21:44.880><c> and</c><01:21:45.040><c> all</c><01:21:45.120><c> over</c><01:21:45.280><c> the</c><01:21:45.440><c> place</c><01:21:46.000><c> we're</c>

01:21:46.149 --> 01:21:46.159 align:start position:0%
negative and all over the place we're
 

01:21:46.159 --> 01:21:48.709 align:start position:0%
negative and all over the place we're
going<01:21:46.320><c> to</c><01:21:46.480><c> interpret</c><01:21:46.880><c> them</c><01:21:47.120><c> as</c><01:21:47.280><c> log</c><01:21:47.760><c> counts</c>

01:21:48.709 --> 01:21:48.719 align:start position:0%
going to interpret them as log counts
 

01:21:48.719 --> 01:21:50.149 align:start position:0%
going to interpret them as log counts
and<01:21:48.800><c> then</c><01:21:48.960><c> we're</c><01:21:49.040><c> going</c><01:21:49.199><c> to</c><01:21:49.360><c> element</c><01:21:49.760><c> wise</c>

01:21:50.149 --> 01:21:50.159 align:start position:0%
and then we're going to element wise
 

01:21:50.159 --> 01:21:52.709 align:start position:0%
and then we're going to element wise
exponentiate<01:21:50.960><c> these</c><01:21:51.199><c> numbers</c>

01:21:52.709 --> 01:21:52.719 align:start position:0%
exponentiate these numbers
 

01:21:52.719 --> 01:21:54.470 align:start position:0%
exponentiate these numbers
exponentiating<01:21:53.520><c> them</c><01:21:53.840><c> now</c><01:21:54.000><c> gives</c><01:21:54.320><c> us</c>

01:21:54.470 --> 01:21:54.480 align:start position:0%
exponentiating them now gives us
 

01:21:54.480 --> 01:21:56.390 align:start position:0%
exponentiating them now gives us
something<01:21:54.880><c> like</c><01:21:55.120><c> this</c>

01:21:56.390 --> 01:21:56.400 align:start position:0%
something like this
 

01:21:56.400 --> 01:21:57.590 align:start position:0%
something like this
and<01:21:56.480><c> you</c><01:21:56.639><c> see</c><01:21:56.800><c> that</c><01:21:56.960><c> these</c><01:21:57.120><c> numbers</c><01:21:57.440><c> now</c>

01:21:57.590 --> 01:21:57.600 align:start position:0%
and you see that these numbers now
 

01:21:57.600 --> 01:21:59.270 align:start position:0%
and you see that these numbers now
because<01:21:58.000><c> they</c><01:21:58.159><c> went</c><01:21:58.239><c> through</c><01:21:58.400><c> an</c><01:21:58.560><c> exponent</c>

01:21:59.270 --> 01:21:59.280 align:start position:0%
because they went through an exponent
 

01:21:59.280 --> 01:22:00.790 align:start position:0%
because they went through an exponent
all<01:21:59.440><c> the</c><01:21:59.600><c> negative</c><01:21:59.920><c> numbers</c><01:22:00.320><c> turned</c><01:22:00.560><c> into</c>

01:22:00.790 --> 01:22:00.800 align:start position:0%
all the negative numbers turned into
 

01:22:00.800 --> 01:22:04.550 align:start position:0%
all the negative numbers turned into
numbers<01:22:01.199><c> below</c><01:22:01.520><c> 1</c><01:22:02.159><c> like</c><01:22:02.719><c> 0.338</c><01:22:04.159><c> and</c><01:22:04.400><c> all</c><01:22:04.480><c> the</c>

01:22:04.550 --> 01:22:04.560 align:start position:0%
numbers below 1 like 0.338 and all the
 

01:22:04.560 --> 01:22:07.110 align:start position:0%
numbers below 1 like 0.338 and all the
positive<01:22:04.960><c> numbers</c><01:22:05.440><c> originally</c><01:22:06.400><c> turned</c><01:22:06.719><c> into</c>

01:22:07.110 --> 01:22:07.120 align:start position:0%
positive numbers originally turned into
 

01:22:07.120 --> 01:22:08.629 align:start position:0%
positive numbers originally turned into
even<01:22:07.360><c> more</c><01:22:07.520><c> positive</c><01:22:07.920><c> numbers</c><01:22:08.320><c> sort</c><01:22:08.480><c> of</c>

01:22:08.629 --> 01:22:08.639 align:start position:0%
even more positive numbers sort of
 

01:22:08.639 --> 01:22:10.709 align:start position:0%
even more positive numbers sort of
greater<01:22:08.960><c> than</c><01:22:09.120><c> one</c>

01:22:10.709 --> 01:22:10.719 align:start position:0%
greater than one
 

01:22:10.719 --> 01:22:12.470 align:start position:0%
greater than one
so<01:22:10.880><c> like</c><01:22:11.120><c> for</c><01:22:11.280><c> example</c>

01:22:12.470 --> 01:22:12.480 align:start position:0%
so like for example
 

01:22:12.480 --> 01:22:14.470 align:start position:0%
so like for example
seven

01:22:14.470 --> 01:22:14.480 align:start position:0%
seven
 

01:22:14.480 --> 01:22:18.390 align:start position:0%
seven
is<01:22:14.960><c> some</c><01:22:15.520><c> positive</c><01:22:15.920><c> number</c><01:22:16.480><c> over</c><01:22:16.719><c> here</c>

01:22:18.390 --> 01:22:18.400 align:start position:0%
is some positive number over here
 

01:22:18.400 --> 01:22:21.030 align:start position:0%
is some positive number over here
that<01:22:18.560><c> is</c><01:22:18.719><c> greater</c><01:22:18.960><c> than</c><01:22:19.120><c> zero</c>

01:22:21.030 --> 01:22:21.040 align:start position:0%
that is greater than zero
 

01:22:21.040 --> 01:22:24.790 align:start position:0%
that is greater than zero
but<01:22:21.679><c> exponentiated</c><01:22:22.880><c> outputs</c><01:22:23.280><c> here</c>

01:22:24.790 --> 01:22:24.800 align:start position:0%
but exponentiated outputs here
 

01:22:24.800 --> 01:22:26.310 align:start position:0%
but exponentiated outputs here
basically<01:22:25.199><c> give</c><01:22:25.360><c> us</c><01:22:25.520><c> something</c><01:22:25.840><c> that</c><01:22:26.000><c> we</c><01:22:26.159><c> can</c>

01:22:26.310 --> 01:22:26.320 align:start position:0%
basically give us something that we can
 

01:22:26.320 --> 01:22:29.030 align:start position:0%
basically give us something that we can
use<01:22:26.639><c> and</c><01:22:26.800><c> interpret</c><01:22:27.679><c> as</c><01:22:27.840><c> the</c><01:22:28.000><c> equivalent</c><01:22:28.719><c> of</c>

01:22:29.030 --> 01:22:29.040 align:start position:0%
use and interpret as the equivalent of
 

01:22:29.040 --> 01:22:31.510 align:start position:0%
use and interpret as the equivalent of
counts<01:22:29.840><c> originally</c><01:22:30.880><c> so</c><01:22:31.040><c> you</c><01:22:31.120><c> see</c><01:22:31.280><c> these</c>

01:22:31.510 --> 01:22:31.520 align:start position:0%
counts originally so you see these
 

01:22:31.520 --> 01:22:36.310 align:start position:0%
counts originally so you see these
counts<01:22:31.840><c> here</c><01:22:32.159><c> 112</c><01:22:32.880><c> 7</c><01:22:33.520><c> 51</c><01:22:34.080><c> 1</c><01:22:34.320><c> etc</c>

01:22:36.310 --> 01:22:36.320 align:start position:0%
counts here 112 7 51 1 etc
 

01:22:36.320 --> 01:22:38.550 align:start position:0%
counts here 112 7 51 1 etc
the<01:22:36.480><c> neural</c><01:22:36.719><c> net</c><01:22:36.960><c> is</c><01:22:37.040><c> kind</c><01:22:37.199><c> of</c><01:22:37.280><c> now</c><01:22:37.440><c> predicting</c>

01:22:38.550 --> 01:22:38.560 align:start position:0%
the neural net is kind of now predicting
 

01:22:38.560 --> 01:22:40.229 align:start position:0%
the neural net is kind of now predicting
uh

01:22:40.229 --> 01:22:40.239 align:start position:0%
uh
 

01:22:40.239 --> 01:22:41.510 align:start position:0%
uh
counts

01:22:41.510 --> 01:22:41.520 align:start position:0%
counts
 

01:22:41.520 --> 01:22:43.830 align:start position:0%
counts
and<01:22:41.920><c> these</c><01:22:42.239><c> counts</c><01:22:42.639><c> are</c><01:22:43.040><c> positive</c><01:22:43.360><c> numbers</c>

01:22:43.830 --> 01:22:43.840 align:start position:0%
and these counts are positive numbers
 

01:22:43.840 --> 01:22:45.669 align:start position:0%
and these counts are positive numbers
they<01:22:44.000><c> can</c><01:22:44.159><c> never</c><01:22:44.320><c> be</c><01:22:44.560><c> below</c><01:22:44.880><c> zero</c><01:22:45.360><c> so</c><01:22:45.520><c> that</c>

01:22:45.669 --> 01:22:45.679 align:start position:0%
they can never be below zero so that
 

01:22:45.679 --> 01:22:46.709 align:start position:0%
they can never be below zero so that
makes<01:22:45.920><c> sense</c>

01:22:46.709 --> 01:22:46.719 align:start position:0%
makes sense
 

01:22:46.719 --> 01:22:48.550 align:start position:0%
makes sense
and<01:22:46.960><c> uh</c><01:22:47.120><c> they</c><01:22:47.280><c> can</c><01:22:47.520><c> now</c><01:22:47.760><c> take</c><01:22:48.000><c> on</c><01:22:48.239><c> various</c>

01:22:48.550 --> 01:22:48.560 align:start position:0%
and uh they can now take on various
 

01:22:48.560 --> 01:22:49.669 align:start position:0%
and uh they can now take on various
values

01:22:49.669 --> 01:22:49.679 align:start position:0%
values
 

01:22:49.679 --> 01:22:54.149 align:start position:0%
values
depending<01:22:50.239><c> on</c><01:22:50.800><c> the</c><01:22:50.960><c> settings</c><01:22:51.760><c> of</c><01:22:52.159><c> w</c>

01:22:54.149 --> 01:22:54.159 align:start position:0%
depending on the settings of w
 

01:22:54.159 --> 01:22:56.149 align:start position:0%
depending on the settings of w
so<01:22:54.400><c> let</c><01:22:54.560><c> me</c><01:22:54.639><c> break</c><01:22:54.880><c> this</c><01:22:55.040><c> down</c>

01:22:56.149 --> 01:22:56.159 align:start position:0%
so let me break this down
 

01:22:56.159 --> 01:22:58.229 align:start position:0%
so let me break this down
we're<01:22:56.320><c> going</c><01:22:56.480><c> to</c><01:22:56.800><c> interpret</c><01:22:57.199><c> these</c><01:22:57.440><c> to</c><01:22:57.600><c> be</c><01:22:57.760><c> the</c>

01:22:58.229 --> 01:22:58.239 align:start position:0%
we're going to interpret these to be the
 

01:22:58.239 --> 01:23:01.189 align:start position:0%
we're going to interpret these to be the
log<01:22:58.639><c> counts</c>

01:23:01.189 --> 01:23:01.199 align:start position:0%
 
 

01:23:01.199 --> 01:23:02.950 align:start position:0%
 
in<01:23:01.360><c> other</c><01:23:01.520><c> words</c><01:23:01.760><c> for</c><01:23:01.920><c> this</c><01:23:02.239><c> that</c><01:23:02.480><c> is</c><01:23:02.639><c> often</c>

01:23:02.950 --> 01:23:02.960 align:start position:0%
in other words for this that is often
 

01:23:02.960 --> 01:23:05.110 align:start position:0%
in other words for this that is often
used<01:23:03.280><c> is</c><01:23:03.360><c> so-called</c><01:23:03.840><c> logits</c>

01:23:05.110 --> 01:23:05.120 align:start position:0%
used is so-called logits
 

01:23:05.120 --> 01:23:08.550 align:start position:0%
used is so-called logits
these<01:23:05.360><c> are</c><01:23:05.760><c> logits</c><01:23:06.639><c> log</c><01:23:07.199><c> counts</c>

01:23:08.550 --> 01:23:08.560 align:start position:0%
these are logits log counts
 

01:23:08.560 --> 01:23:11.189 align:start position:0%
these are logits log counts
then<01:23:08.719><c> these</c><01:23:08.960><c> will</c><01:23:09.120><c> be</c><01:23:09.280><c> sort</c><01:23:09.440><c> of</c><01:23:09.520><c> the</c><01:23:09.679><c> counts</c>

01:23:11.189 --> 01:23:11.199 align:start position:0%
then these will be sort of the counts
 

01:23:11.199 --> 01:23:13.350 align:start position:0%
then these will be sort of the counts
largest<01:23:11.600><c> exponentiated</c>

01:23:13.350 --> 01:23:13.360 align:start position:0%
largest exponentiated
 

01:23:13.360 --> 01:23:16.229 align:start position:0%
largest exponentiated
and<01:23:13.679><c> this</c><01:23:13.920><c> is</c><01:23:14.000><c> equivalent</c><01:23:15.040><c> to</c><01:23:15.199><c> the</c><01:23:15.360><c> n</c><01:23:15.520><c> matrix</c>

01:23:16.229 --> 01:23:16.239 align:start position:0%
and this is equivalent to the n matrix
 

01:23:16.239 --> 01:23:17.990 align:start position:0%
and this is equivalent to the n matrix
sort<01:23:16.480><c> of</c><01:23:16.719><c> the</c><01:23:16.960><c> n</c>

01:23:17.990 --> 01:23:18.000 align:start position:0%
sort of the n
 

01:23:18.000 --> 01:23:20.070 align:start position:0%
sort of the n
array<01:23:18.560><c> that</c><01:23:18.719><c> we</c><01:23:18.800><c> used</c><01:23:19.040><c> previously</c><01:23:19.760><c> remember</c>

01:23:20.070 --> 01:23:20.080 align:start position:0%
array that we used previously remember
 

01:23:20.080 --> 01:23:21.590 align:start position:0%
array that we used previously remember
this<01:23:20.239><c> was</c><01:23:20.400><c> the</c><01:23:20.560><c> n</c>

01:23:21.590 --> 01:23:21.600 align:start position:0%
this was the n
 

01:23:21.600 --> 01:23:24.070 align:start position:0%
this was the n
this<01:23:21.840><c> is</c><01:23:21.920><c> the</c><01:23:22.320><c> the</c><01:23:22.800><c> array</c><01:23:23.040><c> of</c><01:23:23.199><c> counts</c>

01:23:24.070 --> 01:23:24.080 align:start position:0%
this is the the array of counts
 

01:23:24.080 --> 01:23:27.750 align:start position:0%
this is the the array of counts
and<01:23:24.239><c> each</c><01:23:24.480><c> row</c><01:23:24.719><c> here</c><01:23:25.440><c> are</c><01:23:25.600><c> the</c><01:23:25.840><c> counts</c><01:23:26.480><c> for</c><01:23:26.719><c> the</c>

01:23:27.750 --> 01:23:27.760 align:start position:0%
and each row here are the counts for the
 

01:23:27.760 --> 01:23:28.950 align:start position:0%
and each row here are the counts for the
for<01:23:27.920><c> the</c><01:23:28.159><c> um</c>

01:23:28.950 --> 01:23:28.960 align:start position:0%
for the um
 

01:23:28.960 --> 01:23:32.629 align:start position:0%
for the um
next<01:23:29.360><c> character</c><01:23:29.920><c> sort</c><01:23:30.159><c> of</c>

01:23:32.629 --> 01:23:32.639 align:start position:0%
 
 

01:23:32.639 --> 01:23:34.790 align:start position:0%
 
so<01:23:32.800><c> those</c><01:23:33.040><c> are</c><01:23:33.120><c> the</c><01:23:33.280><c> counts</c><01:23:34.239><c> and</c><01:23:34.400><c> now</c><01:23:34.560><c> the</c>

01:23:34.790 --> 01:23:34.800 align:start position:0%
so those are the counts and now the
 

01:23:34.800 --> 01:23:37.910 align:start position:0%
so those are the counts and now the
probabilities<01:23:35.679><c> are</c><01:23:35.840><c> just</c><01:23:36.080><c> the</c><01:23:36.320><c> counts</c><01:23:37.199><c> um</c>

01:23:37.910 --> 01:23:37.920 align:start position:0%
probabilities are just the counts um
 

01:23:37.920 --> 01:23:39.590 align:start position:0%
probabilities are just the counts um
normalized

01:23:39.590 --> 01:23:39.600 align:start position:0%
normalized
 

01:23:39.600 --> 01:23:41.590 align:start position:0%
normalized
and<01:23:39.840><c> so</c><01:23:40.480><c> um</c>

01:23:41.590 --> 01:23:41.600 align:start position:0%
and so um
 

01:23:41.600 --> 01:23:43.030 align:start position:0%
and so um
i'm<01:23:41.760><c> not</c><01:23:42.000><c> going</c><01:23:42.080><c> to</c><01:23:42.159><c> find</c><01:23:42.400><c> the</c><01:23:42.560><c> same</c><01:23:42.800><c> but</c>

01:23:43.030 --> 01:23:43.040 align:start position:0%
i'm not going to find the same but
 

01:23:43.040 --> 01:23:44.790 align:start position:0%
i'm not going to find the same but
basically<01:23:43.760><c> i'm</c><01:23:43.840><c> not</c><01:23:44.000><c> going</c><01:23:44.159><c> to</c><01:23:44.320><c> scroll</c><01:23:44.639><c> all</c>

01:23:44.790 --> 01:23:44.800 align:start position:0%
basically i'm not going to scroll all
 

01:23:44.800 --> 01:23:45.990 align:start position:0%
basically i'm not going to scroll all
over<01:23:44.960><c> the</c><01:23:45.040><c> place</c>

01:23:45.990 --> 01:23:46.000 align:start position:0%
over the place
 

01:23:46.000 --> 01:23:48.149 align:start position:0%
over the place
we've<01:23:46.320><c> already</c><01:23:46.639><c> done</c><01:23:46.800><c> this</c><01:23:47.360><c> we</c><01:23:47.520><c> want</c><01:23:47.840><c> to</c>

01:23:48.149 --> 01:23:48.159 align:start position:0%
we've already done this we want to
 

01:23:48.159 --> 01:23:50.070 align:start position:0%
we've already done this we want to
counts<01:23:48.719><c> that</c><01:23:49.040><c> sum</c>

01:23:50.070 --> 01:23:50.080 align:start position:0%
counts that sum
 

01:23:50.080 --> 01:23:52.229 align:start position:0%
counts that sum
along<01:23:50.400><c> the</c><01:23:50.480><c> first</c><01:23:50.800><c> dimension</c><01:23:51.679><c> and</c><01:23:51.840><c> we</c><01:23:52.000><c> want</c><01:23:52.159><c> to</c>

01:23:52.229 --> 01:23:52.239 align:start position:0%
along the first dimension and we want to
 

01:23:52.239 --> 01:23:54.709 align:start position:0%
along the first dimension and we want to
keep<01:23:52.560><c> them</c><01:23:53.280><c> as</c><01:23:53.520><c> true</c>

01:23:54.709 --> 01:23:54.719 align:start position:0%
keep them as true
 

01:23:54.719 --> 01:23:56.790 align:start position:0%
keep them as true
we've<01:23:55.280><c> went</c><01:23:55.520><c> over</c><01:23:55.679><c> this</c><01:23:56.159><c> and</c><01:23:56.239><c> this</c><01:23:56.400><c> is</c><01:23:56.480><c> how</c><01:23:56.639><c> we</c>

01:23:56.790 --> 01:23:56.800 align:start position:0%
we've went over this and this is how we
 

01:23:56.800 --> 01:23:59.910 align:start position:0%
we've went over this and this is how we
normalize<01:23:57.280><c> the</c><01:23:57.440><c> rows</c><01:23:58.320><c> of</c><01:23:58.480><c> our</c><01:23:58.719><c> counts</c><01:23:59.120><c> matrix</c>

01:23:59.910 --> 01:23:59.920 align:start position:0%
normalize the rows of our counts matrix
 

01:23:59.920 --> 01:24:03.189 align:start position:0%
normalize the rows of our counts matrix
to<01:24:00.080><c> get</c><01:24:00.320><c> our</c><01:24:00.480><c> probabilities</c>

01:24:03.189 --> 01:24:03.199 align:start position:0%
to get our probabilities
 

01:24:03.199 --> 01:24:04.870 align:start position:0%
to get our probabilities
props

01:24:04.870 --> 01:24:04.880 align:start position:0%
props
 

01:24:04.880 --> 01:24:07.910 align:start position:0%
props
so<01:24:05.040><c> now</c><01:24:05.199><c> these</c><01:24:05.520><c> are</c><01:24:05.920><c> the</c><01:24:06.080><c> probabilities</c>

01:24:07.910 --> 01:24:07.920 align:start position:0%
so now these are the probabilities
 

01:24:07.920 --> 01:24:08.629 align:start position:0%
so now these are the probabilities
and

01:24:08.629 --> 01:24:08.639 align:start position:0%
and
 

01:24:08.639 --> 01:24:10.149 align:start position:0%
and
these<01:24:08.800><c> are</c><01:24:08.960><c> the</c><01:24:09.120><c> counts</c><01:24:09.520><c> that</c><01:24:09.679><c> we</c><01:24:09.840><c> ask</c>

01:24:10.149 --> 01:24:10.159 align:start position:0%
these are the counts that we ask
 

01:24:10.159 --> 01:24:11.350 align:start position:0%
these are the counts that we ask
currently<01:24:10.639><c> and</c><01:24:10.719><c> now</c><01:24:10.880><c> when</c><01:24:11.040><c> i</c><01:24:11.120><c> show</c><01:24:11.280><c> the</c>

01:24:11.350 --> 01:24:11.360 align:start position:0%
currently and now when i show the
 

01:24:11.360 --> 01:24:13.669 align:start position:0%
currently and now when i show the
probabilities

01:24:13.669 --> 01:24:13.679 align:start position:0%
probabilities
 

01:24:13.679 --> 01:24:15.590 align:start position:0%
probabilities
you<01:24:13.920><c> see</c><01:24:14.159><c> that</c><01:24:14.719><c> um</c>

01:24:15.590 --> 01:24:15.600 align:start position:0%
you see that um
 

01:24:15.600 --> 01:24:17.350 align:start position:0%
you see that um
every<01:24:16.080><c> row</c><01:24:16.320><c> here</c>

01:24:17.350 --> 01:24:17.360 align:start position:0%
every row here
 

01:24:17.360 --> 01:24:19.430 align:start position:0%
every row here
of<01:24:17.440><c> course</c>

01:24:19.430 --> 01:24:19.440 align:start position:0%
of course
 

01:24:19.440 --> 01:24:21.350 align:start position:0%
of course
will<01:24:19.679><c> sum</c><01:24:19.840><c> to</c><01:24:20.000><c> 1</c>

01:24:21.350 --> 01:24:21.360 align:start position:0%
will sum to 1
 

01:24:21.360 --> 01:24:23.110 align:start position:0%
will sum to 1
because<01:24:21.520><c> they're</c><01:24:21.679><c> normalized</c>

01:24:23.110 --> 01:24:23.120 align:start position:0%
because they're normalized
 

01:24:23.120 --> 01:24:25.270 align:start position:0%
because they're normalized
and<01:24:23.280><c> the</c><01:24:23.440><c> shape</c><01:24:23.679><c> of</c><01:24:23.760><c> this</c>

01:24:25.270 --> 01:24:25.280 align:start position:0%
and the shape of this
 

01:24:25.280 --> 01:24:27.350 align:start position:0%
and the shape of this
is<01:24:25.440><c> 5</c><01:24:25.679><c> by</c><01:24:25.840><c> 27</c>

01:24:27.350 --> 01:24:27.360 align:start position:0%
is 5 by 27
 

01:24:27.360 --> 01:24:29.750 align:start position:0%
is 5 by 27
and<01:24:27.520><c> so</c><01:24:27.679><c> really</c><01:24:27.920><c> what</c><01:24:28.000><c> we've</c><01:24:28.320><c> achieved</c><01:24:28.960><c> is</c><01:24:29.520><c> for</c>

01:24:29.750 --> 01:24:29.760 align:start position:0%
and so really what we've achieved is for
 

01:24:29.760 --> 01:24:31.669 align:start position:0%
and so really what we've achieved is for
every<01:24:29.920><c> one</c><01:24:30.080><c> of</c><01:24:30.239><c> our</c><01:24:30.400><c> five</c><01:24:30.639><c> examples</c>

01:24:31.669 --> 01:24:31.679 align:start position:0%
every one of our five examples
 

01:24:31.679 --> 01:24:33.750 align:start position:0%
every one of our five examples
we<01:24:31.840><c> now</c><01:24:32.080><c> have</c><01:24:32.320><c> a</c><01:24:32.560><c> row</c><01:24:33.040><c> that</c><01:24:33.280><c> came</c><01:24:33.520><c> out</c><01:24:33.600><c> of</c><01:24:33.679><c> a</c>

01:24:33.750 --> 01:24:33.760 align:start position:0%
we now have a row that came out of a
 

01:24:33.760 --> 01:24:35.030 align:start position:0%
we now have a row that came out of a
neural<01:24:34.000><c> net</c>

01:24:35.030 --> 01:24:35.040 align:start position:0%
neural net
 

01:24:35.040 --> 01:24:37.510 align:start position:0%
neural net
and<01:24:35.440><c> because</c><01:24:35.840><c> of</c><01:24:35.920><c> the</c><01:24:36.080><c> transformations</c><01:24:36.719><c> here</c>

01:24:37.510 --> 01:24:37.520 align:start position:0%
and because of the transformations here
 

01:24:37.520 --> 01:24:39.189 align:start position:0%
and because of the transformations here
we<01:24:37.679><c> made</c><01:24:37.840><c> sure</c><01:24:38.080><c> that</c><01:24:38.320><c> this</c><01:24:38.639><c> output</c><01:24:38.960><c> of</c><01:24:39.040><c> this</c>

01:24:39.189 --> 01:24:39.199 align:start position:0%
we made sure that this output of this
 

01:24:39.199 --> 01:24:41.430 align:start position:0%
we made sure that this output of this
neural<01:24:39.440><c> net</c><01:24:39.679><c> now</c><01:24:40.320><c> are</c><01:24:40.480><c> probabilities</c><01:24:41.199><c> or</c><01:24:41.280><c> we</c>

01:24:41.430 --> 01:24:41.440 align:start position:0%
neural net now are probabilities or we
 

01:24:41.440 --> 01:24:43.990 align:start position:0%
neural net now are probabilities or we
can<01:24:41.600><c> interpret</c><01:24:42.000><c> to</c><01:24:42.080><c> be</c><01:24:42.239><c> probabilities</c>

01:24:43.990 --> 01:24:44.000 align:start position:0%
can interpret to be probabilities
 

01:24:44.000 --> 01:24:45.270 align:start position:0%
can interpret to be probabilities
so

01:24:45.270 --> 01:24:45.280 align:start position:0%
so
 

01:24:45.280 --> 01:24:47.990 align:start position:0%
so
our<01:24:45.440><c> wx</c><01:24:46.080><c> here</c><01:24:46.400><c> gave</c><01:24:46.639><c> us</c><01:24:46.960><c> logits</c>

01:24:47.990 --> 01:24:48.000 align:start position:0%
our wx here gave us logits
 

01:24:48.000 --> 01:24:49.669 align:start position:0%
our wx here gave us logits
and<01:24:48.159><c> then</c><01:24:48.320><c> we</c><01:24:48.480><c> interpret</c><01:24:48.880><c> those</c><01:24:49.120><c> to</c><01:24:49.199><c> be</c><01:24:49.360><c> log</c>

01:24:49.669 --> 01:24:49.679 align:start position:0%
and then we interpret those to be log
 

01:24:49.679 --> 01:24:50.629 align:start position:0%
and then we interpret those to be log
counts

01:24:50.629 --> 01:24:50.639 align:start position:0%
counts
 

01:24:50.639 --> 01:24:52.390 align:start position:0%
counts
we<01:24:50.880><c> exponentiate</c><01:24:51.600><c> to</c><01:24:51.760><c> get</c><01:24:51.920><c> something</c><01:24:52.159><c> that</c>

01:24:52.390 --> 01:24:52.400 align:start position:0%
we exponentiate to get something that
 

01:24:52.400 --> 01:24:53.910 align:start position:0%
we exponentiate to get something that
looks<01:24:52.639><c> like</c><01:24:52.880><c> counts</c>

01:24:53.910 --> 01:24:53.920 align:start position:0%
looks like counts
 

01:24:53.920 --> 01:24:55.350 align:start position:0%
looks like counts
and<01:24:54.000><c> then</c><01:24:54.159><c> we</c><01:24:54.320><c> normalize</c><01:24:54.719><c> those</c><01:24:54.960><c> counts</c><01:24:55.280><c> to</c>

01:24:55.350 --> 01:24:55.360 align:start position:0%
and then we normalize those counts to
 

01:24:55.360 --> 01:24:57.430 align:start position:0%
and then we normalize those counts to
get<01:24:55.600><c> a</c><01:24:55.679><c> probability</c><01:24:56.080><c> distribution</c>

01:24:57.430 --> 01:24:57.440 align:start position:0%
get a probability distribution
 

01:24:57.440 --> 01:24:59.030 align:start position:0%
get a probability distribution
and<01:24:57.679><c> all</c><01:24:57.920><c> of</c><01:24:58.000><c> these</c><01:24:58.239><c> are</c><01:24:58.320><c> differentiable</c>

01:24:59.030 --> 01:24:59.040 align:start position:0%
and all of these are differentiable
 

01:24:59.040 --> 01:25:00.310 align:start position:0%
and all of these are differentiable
operations

01:25:00.310 --> 01:25:00.320 align:start position:0%
operations
 

01:25:00.320 --> 01:25:02.310 align:start position:0%
operations
so<01:25:00.480><c> what</c><01:25:00.639><c> we've</c><01:25:00.880><c> done</c><01:25:01.120><c> now</c><01:25:01.520><c> is</c><01:25:01.760><c> we're</c><01:25:02.000><c> taking</c>

01:25:02.310 --> 01:25:02.320 align:start position:0%
so what we've done now is we're taking
 

01:25:02.320 --> 01:25:04.629 align:start position:0%
so what we've done now is we're taking
inputs<01:25:03.199><c> we</c><01:25:03.360><c> have</c><01:25:03.440><c> differentiable</c><01:25:04.080><c> operations</c>

01:25:04.629 --> 01:25:04.639 align:start position:0%
inputs we have differentiable operations
 

01:25:04.639 --> 01:25:06.790 align:start position:0%
inputs we have differentiable operations
that<01:25:04.800><c> we</c><01:25:04.880><c> can</c><01:25:05.040><c> back</c><01:25:05.280><c> propagate</c><01:25:05.760><c> through</c>

01:25:06.790 --> 01:25:06.800 align:start position:0%
that we can back propagate through
 

01:25:06.800 --> 01:25:08.229 align:start position:0%
that we can back propagate through
and<01:25:06.960><c> we're</c><01:25:07.199><c> getting</c><01:25:07.520><c> out</c><01:25:07.760><c> probability</c>

01:25:08.229 --> 01:25:08.239 align:start position:0%
and we're getting out probability
 

01:25:08.239 --> 01:25:09.830 align:start position:0%
and we're getting out probability
distributions

01:25:09.830 --> 01:25:09.840 align:start position:0%
distributions
 

01:25:09.840 --> 01:25:11.030 align:start position:0%
distributions
so

01:25:11.030 --> 01:25:11.040 align:start position:0%
so
 

01:25:11.040 --> 01:25:13.350 align:start position:0%
so
for<01:25:11.280><c> example</c><01:25:11.600><c> for</c><01:25:11.760><c> the</c><01:25:12.159><c> zeroth</c><01:25:12.639><c> example</c><01:25:13.120><c> that</c>

01:25:13.350 --> 01:25:13.360 align:start position:0%
for example for the zeroth example that
 

01:25:13.360 --> 01:25:15.110 align:start position:0%
for example for the zeroth example that
fed<01:25:13.600><c> in</c>

01:25:15.110 --> 01:25:15.120 align:start position:0%
fed in
 

01:25:15.120 --> 01:25:17.030 align:start position:0%
fed in
right<01:25:15.360><c> which</c><01:25:15.600><c> was</c><01:25:16.159><c> um</c>

01:25:17.030 --> 01:25:17.040 align:start position:0%
right which was um
 

01:25:17.040 --> 01:25:18.790 align:start position:0%
right which was um
the<01:25:17.199><c> zeroth</c><01:25:17.600><c> example</c><01:25:17.920><c> here</c><01:25:18.159><c> was</c><01:25:18.320><c> a</c><01:25:18.400><c> one-half</c>

01:25:18.790 --> 01:25:18.800 align:start position:0%
the zeroth example here was a one-half
 

01:25:18.800 --> 01:25:20.550 align:start position:0%
the zeroth example here was a one-half
vector<01:25:19.120><c> of</c><01:25:19.280><c> zero</c>

01:25:20.550 --> 01:25:20.560 align:start position:0%
vector of zero
 

01:25:20.560 --> 01:25:22.470 align:start position:0%
vector of zero
and<01:25:20.960><c> um</c>

01:25:22.470 --> 01:25:22.480 align:start position:0%
and um
 

01:25:22.480 --> 01:25:26.550 align:start position:0%
and um
it<01:25:22.639><c> basically</c><01:25:23.600><c> corresponded</c><01:25:24.320><c> to</c><01:25:24.719><c> feeding</c><01:25:25.120><c> in</c>

01:25:26.550 --> 01:25:26.560 align:start position:0%
it basically corresponded to feeding in
 

01:25:26.560 --> 01:25:28.629 align:start position:0%
it basically corresponded to feeding in
this<01:25:26.800><c> example</c><01:25:27.199><c> here</c><01:25:27.760><c> so</c><01:25:27.920><c> we're</c><01:25:28.159><c> feeding</c><01:25:28.400><c> in</c><01:25:28.560><c> a</c>

01:25:28.629 --> 01:25:28.639 align:start position:0%
this example here so we're feeding in a
 

01:25:28.639 --> 01:25:31.030 align:start position:0%
this example here so we're feeding in a
dot<01:25:29.120><c> into</c><01:25:29.360><c> a</c><01:25:29.440><c> neural</c><01:25:29.679><c> net</c><01:25:30.320><c> and</c><01:25:30.400><c> the</c><01:25:30.560><c> way</c><01:25:30.719><c> we</c><01:25:30.880><c> fed</c>

01:25:31.030 --> 01:25:31.040 align:start position:0%
dot into a neural net and the way we fed
 

01:25:31.040 --> 01:25:32.629 align:start position:0%
dot into a neural net and the way we fed
the<01:25:31.199><c> dot</c><01:25:31.440><c> into</c><01:25:31.600><c> a</c><01:25:31.760><c> neural</c><01:25:32.000><c> net</c><01:25:32.239><c> is</c><01:25:32.400><c> that</c><01:25:32.480><c> we</c>

01:25:32.629 --> 01:25:32.639 align:start position:0%
the dot into a neural net is that we
 

01:25:32.639 --> 01:25:34.310 align:start position:0%
the dot into a neural net is that we
first<01:25:32.800><c> got</c><01:25:33.040><c> its</c><01:25:33.280><c> index</c>

01:25:34.310 --> 01:25:34.320 align:start position:0%
first got its index
 

01:25:34.320 --> 01:25:36.550 align:start position:0%
first got its index
then<01:25:34.560><c> we</c><01:25:34.800><c> one</c><01:25:35.040><c> hot</c><01:25:35.280><c> encoded</c><01:25:35.760><c> it</c>

01:25:36.550 --> 01:25:36.560 align:start position:0%
then we one hot encoded it
 

01:25:36.560 --> 01:25:39.030 align:start position:0%
then we one hot encoded it
then<01:25:36.800><c> it</c><01:25:36.960><c> went</c><01:25:37.199><c> into</c><01:25:37.360><c> the</c><01:25:37.520><c> neural</c><01:25:37.840><c> net</c><01:25:38.480><c> and</c><01:25:38.719><c> out</c>

01:25:39.030 --> 01:25:39.040 align:start position:0%
then it went into the neural net and out
 

01:25:39.040 --> 01:25:40.550 align:start position:0%
then it went into the neural net and out
came

01:25:40.550 --> 01:25:40.560 align:start position:0%
came
 

01:25:40.560 --> 01:25:43.350 align:start position:0%
came
this<01:25:40.960><c> distribution</c><01:25:41.600><c> of</c><01:25:41.679><c> probabilities</c>

01:25:43.350 --> 01:25:43.360 align:start position:0%
this distribution of probabilities
 

01:25:43.360 --> 01:25:46.390 align:start position:0%
this distribution of probabilities
and<01:25:43.600><c> its</c><01:25:44.239><c> shape</c>

01:25:46.390 --> 01:25:46.400 align:start position:0%
and its shape
 

01:25:46.400 --> 01:25:49.110 align:start position:0%
and its shape
is<01:25:46.560><c> 27</c><01:25:47.199><c> there's</c><01:25:47.440><c> 27</c><01:25:47.920><c> numbers</c><01:25:48.639><c> and</c><01:25:48.800><c> we're</c><01:25:48.960><c> going</c>

01:25:49.110 --> 01:25:49.120 align:start position:0%
is 27 there's 27 numbers and we're going
 

01:25:49.120 --> 01:25:51.350 align:start position:0%
is 27 there's 27 numbers and we're going
to<01:25:49.280><c> interpret</c><01:25:49.679><c> this</c><01:25:50.320><c> as</c><01:25:50.480><c> the</c><01:25:50.639><c> neural</c><01:25:50.960><c> nets</c>

01:25:51.350 --> 01:25:51.360 align:start position:0%
to interpret this as the neural nets
 

01:25:51.360 --> 01:25:54.390 align:start position:0%
to interpret this as the neural nets
assignment<01:25:52.320><c> for</c><01:25:52.560><c> how</c><01:25:52.800><c> likely</c><01:25:54.000><c> every</c><01:25:54.159><c> one</c><01:25:54.320><c> of</c>

01:25:54.390 --> 01:25:54.400 align:start position:0%
assignment for how likely every one of
 

01:25:54.400 --> 01:25:56.550 align:start position:0%
assignment for how likely every one of
these<01:25:54.639><c> characters</c><01:25:55.679><c> um</c>

01:25:56.550 --> 01:25:56.560 align:start position:0%
these characters um
 

01:25:56.560 --> 01:25:59.669 align:start position:0%
these characters um
the<01:25:56.719><c> 27</c><01:25:57.199><c> characters</c><01:25:57.840><c> are</c><01:25:58.000><c> to</c><01:25:58.159><c> come</c><01:25:58.400><c> next</c>

01:25:59.669 --> 01:25:59.679 align:start position:0%
the 27 characters are to come next
 

01:25:59.679 --> 01:26:02.310 align:start position:0%
the 27 characters are to come next
and<01:26:00.000><c> as</c><01:26:00.159><c> we</c><01:26:00.400><c> tune</c><01:26:00.639><c> the</c><01:26:00.800><c> weights</c><01:26:01.120><c> w</c>

01:26:02.310 --> 01:26:02.320 align:start position:0%
and as we tune the weights w
 

01:26:02.320 --> 01:26:03.510 align:start position:0%
and as we tune the weights w
we're<01:26:02.560><c> going</c><01:26:02.719><c> to</c><01:26:02.800><c> be</c><01:26:02.960><c> of</c><01:26:03.040><c> course</c><01:26:03.199><c> getting</c>

01:26:03.510 --> 01:26:03.520 align:start position:0%
we're going to be of course getting
 

01:26:03.520 --> 01:26:05.350 align:start position:0%
we're going to be of course getting
different<01:26:03.760><c> probabilities</c><01:26:04.480><c> out</c><01:26:04.960><c> for</c><01:26:05.120><c> any</c>

01:26:05.350 --> 01:26:05.360 align:start position:0%
different probabilities out for any
 

01:26:05.360 --> 01:26:07.110 align:start position:0%
different probabilities out for any
character<01:26:05.679><c> that</c><01:26:05.840><c> you</c><01:26:06.000><c> input</c>

01:26:07.110 --> 01:26:07.120 align:start position:0%
character that you input
 

01:26:07.120 --> 01:26:08.950 align:start position:0%
character that you input
and<01:26:07.280><c> so</c><01:26:07.440><c> now</c><01:26:07.600><c> the</c><01:26:07.679><c> question</c><01:26:08.080><c> is</c><01:26:08.239><c> just</c><01:26:08.560><c> can</c><01:26:08.719><c> we</c>

01:26:08.950 --> 01:26:08.960 align:start position:0%
and so now the question is just can we
 

01:26:08.960 --> 01:26:10.950 align:start position:0%
and so now the question is just can we
optimize<01:26:09.440><c> and</c><01:26:09.520><c> find</c><01:26:09.679><c> a</c><01:26:09.760><c> good</c><01:26:09.920><c> w</c>

01:26:10.950 --> 01:26:10.960 align:start position:0%
optimize and find a good w
 

01:26:10.960 --> 01:26:12.950 align:start position:0%
optimize and find a good w
such<01:26:11.199><c> that</c><01:26:11.360><c> the</c><01:26:11.520><c> probabilities</c><01:26:12.159><c> coming</c><01:26:12.480><c> out</c>

01:26:12.950 --> 01:26:12.960 align:start position:0%
such that the probabilities coming out
 

01:26:12.960 --> 01:26:15.270 align:start position:0%
such that the probabilities coming out
are<01:26:13.440><c> pretty</c><01:26:13.679><c> good</c><01:26:14.400><c> and</c><01:26:14.560><c> the</c><01:26:14.639><c> way</c><01:26:14.800><c> we</c><01:26:14.960><c> measure</c>

01:26:15.270 --> 01:26:15.280 align:start position:0%
are pretty good and the way we measure
 

01:26:15.280 --> 01:26:17.350 align:start position:0%
are pretty good and the way we measure
pretty<01:26:15.440><c> good</c><01:26:15.760><c> is</c><01:26:15.920><c> by</c><01:26:16.080><c> the</c><01:26:16.159><c> loss</c><01:26:16.400><c> function</c><01:26:17.120><c> okay</c>

01:26:17.350 --> 01:26:17.360 align:start position:0%
pretty good is by the loss function okay
 

01:26:17.360 --> 01:26:18.950 align:start position:0%
pretty good is by the loss function okay
so<01:26:17.440><c> i</c><01:26:17.600><c> organized</c><01:26:18.000><c> everything</c><01:26:18.320><c> into</c><01:26:18.560><c> a</c><01:26:18.639><c> single</c>

01:26:18.950 --> 01:26:18.960 align:start position:0%
so i organized everything into a single
 

01:26:18.960 --> 01:26:20.390 align:start position:0%
so i organized everything into a single
summary<01:26:19.360><c> so</c><01:26:19.520><c> that</c><01:26:19.679><c> hopefully</c><01:26:20.000><c> it's</c><01:26:20.159><c> a</c><01:26:20.239><c> bit</c>

01:26:20.390 --> 01:26:20.400 align:start position:0%
summary so that hopefully it's a bit
 

01:26:20.400 --> 01:26:22.550 align:start position:0%
summary so that hopefully it's a bit
more<01:26:20.560><c> clear</c><01:26:21.199><c> so</c><01:26:21.360><c> it</c><01:26:21.440><c> starts</c><01:26:21.679><c> here</c>

01:26:22.550 --> 01:26:22.560 align:start position:0%
more clear so it starts here
 

01:26:22.560 --> 01:26:24.390 align:start position:0%
more clear so it starts here
with<01:26:22.800><c> an</c><01:26:22.960><c> input</c><01:26:23.199><c> data</c><01:26:23.520><c> set</c>

01:26:24.390 --> 01:26:24.400 align:start position:0%
with an input data set
 

01:26:24.400 --> 01:26:26.310 align:start position:0%
with an input data set
we<01:26:24.560><c> have</c><01:26:24.800><c> some</c><01:26:25.040><c> inputs</c><01:26:25.360><c> to</c><01:26:25.440><c> the</c><01:26:25.600><c> neural</c><01:26:25.840><c> net</c>

01:26:26.310 --> 01:26:26.320 align:start position:0%
we have some inputs to the neural net
 

01:26:26.320 --> 01:26:28.550 align:start position:0%
we have some inputs to the neural net
and<01:26:26.480><c> we</c><01:26:26.639><c> have</c><01:26:26.719><c> some</c><01:26:26.960><c> labels</c><01:26:27.760><c> for</c><01:26:28.000><c> the</c><01:26:28.159><c> correct</c>

01:26:28.550 --> 01:26:28.560 align:start position:0%
and we have some labels for the correct
 

01:26:28.560 --> 01:26:30.790 align:start position:0%
and we have some labels for the correct
next<01:26:28.880><c> character</c><01:26:29.360><c> in</c><01:26:29.520><c> a</c><01:26:29.600><c> sequence</c><01:26:30.480><c> these</c><01:26:30.639><c> are</c>

01:26:30.790 --> 01:26:30.800 align:start position:0%
next character in a sequence these are
 

01:26:30.800 --> 01:26:32.709 align:start position:0%
next character in a sequence these are
integers

01:26:32.709 --> 01:26:32.719 align:start position:0%
integers
 

01:26:32.719 --> 01:26:35.350 align:start position:0%
integers
here<01:26:32.960><c> i'm</c><01:26:33.199><c> using</c><01:26:33.760><c> uh</c><01:26:34.320><c> torch</c><01:26:34.639><c> generators</c><01:26:35.120><c> now</c>

01:26:35.350 --> 01:26:35.360 align:start position:0%
here i'm using uh torch generators now
 

01:26:35.360 --> 01:26:37.430 align:start position:0%
here i'm using uh torch generators now
so<01:26:35.520><c> that</c><01:26:36.080><c> you</c><01:26:36.320><c> see</c><01:26:36.480><c> the</c><01:26:36.639><c> same</c><01:26:36.800><c> numbers</c><01:26:37.120><c> that</c><01:26:37.280><c> i</c>

01:26:37.430 --> 01:26:37.440 align:start position:0%
so that you see the same numbers that i
 

01:26:37.440 --> 01:26:38.550 align:start position:0%
so that you see the same numbers that i
see

01:26:38.550 --> 01:26:38.560 align:start position:0%
see
 

01:26:38.560 --> 01:26:40.790 align:start position:0%
see
and<01:26:38.719><c> i'm</c><01:26:38.880><c> generating</c><01:26:39.840><c> um</c>

01:26:40.790 --> 01:26:40.800 align:start position:0%
and i'm generating um
 

01:26:40.800 --> 01:26:42.790 align:start position:0%
and i'm generating um
27<01:26:41.360><c> neurons</c><01:26:41.840><c> weights</c>

01:26:42.790 --> 01:26:42.800 align:start position:0%
27 neurons weights
 

01:26:42.800 --> 01:26:48.550 align:start position:0%
27 neurons weights
and<01:26:43.360><c> each</c><01:26:43.600><c> neuron</c><01:26:44.000><c> here</c><01:26:44.159><c> receives</c><01:26:44.560><c> 27</c><01:26:45.120><c> inputs</c>

01:26:48.550 --> 01:26:48.560 align:start position:0%
 
 

01:26:48.560 --> 01:26:50.390 align:start position:0%
 
then<01:26:48.719><c> here</c><01:26:48.880><c> we're</c><01:26:49.040><c> going</c><01:26:49.199><c> to</c><01:26:49.440><c> plug</c><01:26:49.679><c> in</c><01:26:49.840><c> all</c><01:26:50.000><c> the</c>

01:26:50.390 --> 01:26:50.400 align:start position:0%
then here we're going to plug in all the
 

01:26:50.400 --> 01:26:52.870 align:start position:0%
then here we're going to plug in all the
input<01:26:50.800><c> examples</c><01:26:51.360><c> x's</c><01:26:51.760><c> into</c><01:26:52.000><c> a</c><01:26:52.080><c> neural</c><01:26:52.320><c> net</c><01:26:52.639><c> so</c>

01:26:52.870 --> 01:26:52.880 align:start position:0%
input examples x's into a neural net so
 

01:26:52.880 --> 01:26:55.669 align:start position:0%
input examples x's into a neural net so
here<01:26:53.199><c> this</c><01:26:53.440><c> is</c><01:26:53.520><c> a</c><01:26:53.600><c> forward</c><01:26:54.000><c> pass</c>

01:26:55.669 --> 01:26:55.679 align:start position:0%
here this is a forward pass
 

01:26:55.679 --> 01:26:57.590 align:start position:0%
here this is a forward pass
first<01:26:56.000><c> we</c><01:26:56.159><c> have</c><01:26:56.320><c> to</c><01:26:56.480><c> encode</c><01:26:57.120><c> all</c><01:26:57.280><c> of</c><01:26:57.360><c> the</c>

01:26:57.590 --> 01:26:57.600 align:start position:0%
first we have to encode all of the
 

01:26:57.600 --> 01:27:00.390 align:start position:0%
first we have to encode all of the
inputs<01:26:58.000><c> into</c><01:26:58.239><c> one</c><01:26:58.480><c> hot</c><01:26:58.719><c> representations</c>

01:27:00.390 --> 01:27:00.400 align:start position:0%
inputs into one hot representations
 

01:27:00.400 --> 01:27:02.709 align:start position:0%
inputs into one hot representations
so<01:27:00.560><c> we</c><01:27:00.719><c> have</c><01:27:00.800><c> 27</c><01:27:01.280><c> classes</c><01:27:01.679><c> we</c><01:27:01.920><c> pass</c><01:27:02.239><c> in</c><01:27:02.480><c> these</c>

01:27:02.709 --> 01:27:02.719 align:start position:0%
so we have 27 classes we pass in these
 

01:27:02.719 --> 01:27:04.390 align:start position:0%
so we have 27 classes we pass in these
integers<01:27:03.760><c> and</c>

01:27:04.390 --> 01:27:04.400 align:start position:0%
integers and
 

01:27:04.400 --> 01:27:09.669 align:start position:0%
integers and
x<01:27:04.800><c> inc</c><01:27:05.440><c> becomes</c><01:27:05.840><c> a</c><01:27:06.480><c> array</c><01:27:07.199><c> that</c><01:27:07.360><c> is</c><01:27:07.600><c> 5</c><01:27:07.840><c> by</c><01:27:08.000><c> 27</c>

01:27:09.669 --> 01:27:09.679 align:start position:0%
x inc becomes a array that is 5 by 27
 

01:27:09.679 --> 01:27:12.229 align:start position:0%
x inc becomes a array that is 5 by 27
zeros<01:27:10.239><c> except</c><01:27:10.480><c> for</c><01:27:10.560><c> a</c><01:27:10.639><c> few</c><01:27:10.800><c> ones</c>

01:27:12.229 --> 01:27:12.239 align:start position:0%
zeros except for a few ones
 

01:27:12.239 --> 01:27:14.229 align:start position:0%
zeros except for a few ones
we<01:27:12.400><c> then</c><01:27:12.639><c> multiply</c><01:27:13.120><c> this</c><01:27:13.360><c> in</c><01:27:13.440><c> the</c><01:27:13.520><c> first</c><01:27:13.840><c> layer</c>

01:27:14.229 --> 01:27:14.239 align:start position:0%
we then multiply this in the first layer
 

01:27:14.239 --> 01:27:16.709 align:start position:0%
we then multiply this in the first layer
of<01:27:14.320><c> a</c><01:27:14.400><c> neural</c><01:27:14.719><c> net</c><01:27:14.960><c> to</c><01:27:15.120><c> get</c><01:27:15.280><c> logits</c>

01:27:16.709 --> 01:27:16.719 align:start position:0%
of a neural net to get logits
 

01:27:16.719 --> 01:27:18.870 align:start position:0%
of a neural net to get logits
exponentiate<01:27:17.360><c> the</c><01:27:17.520><c> logits</c><01:27:18.000><c> to</c><01:27:18.080><c> get</c><01:27:18.480><c> fake</c>

01:27:18.870 --> 01:27:18.880 align:start position:0%
exponentiate the logits to get fake
 

01:27:18.880 --> 01:27:20.629 align:start position:0%
exponentiate the logits to get fake
counts<01:27:19.520><c> sort</c><01:27:19.760><c> of</c>

01:27:20.629 --> 01:27:20.639 align:start position:0%
counts sort of
 

01:27:20.639 --> 01:27:22.149 align:start position:0%
counts sort of
and<01:27:20.800><c> normalize</c><01:27:21.280><c> these</c><01:27:21.520><c> counts</c><01:27:21.760><c> to</c><01:27:21.920><c> get</c>

01:27:22.149 --> 01:27:22.159 align:start position:0%
and normalize these counts to get
 

01:27:22.159 --> 01:27:24.310 align:start position:0%
and normalize these counts to get
probabilities

01:27:24.310 --> 01:27:24.320 align:start position:0%
probabilities
 

01:27:24.320 --> 01:27:26.470 align:start position:0%
probabilities
so<01:27:24.960><c> we</c><01:27:25.120><c> lock</c><01:27:25.360><c> these</c><01:27:25.600><c> last</c><01:27:25.840><c> two</c><01:27:26.000><c> lines</c><01:27:26.239><c> by</c><01:27:26.400><c> the</c>

01:27:26.470 --> 01:27:26.480 align:start position:0%
so we lock these last two lines by the
 

01:27:26.480 --> 01:27:29.990 align:start position:0%
so we lock these last two lines by the
way<01:27:26.719><c> here</c><01:27:27.440><c> are</c><01:27:27.600><c> called</c><01:27:27.840><c> the</c><01:27:27.920><c> softmax</c>

01:27:29.990 --> 01:27:30.000 align:start position:0%
way here are called the softmax
 

01:27:30.000 --> 01:27:33.189 align:start position:0%
way here are called the softmax
which<01:27:30.239><c> i</c><01:27:30.480><c> pulled</c><01:27:30.719><c> up</c><01:27:30.880><c> here</c><01:27:32.000><c> soft</c><01:27:32.239><c> max</c><01:27:32.880><c> is</c><01:27:33.120><c> a</c>

01:27:33.189 --> 01:27:33.199 align:start position:0%
which i pulled up here soft max is a
 

01:27:33.199 --> 01:27:35.910 align:start position:0%
which i pulled up here soft max is a
very<01:27:33.520><c> often</c><01:27:33.840><c> used</c><01:27:34.400><c> layer</c><01:27:34.719><c> in</c><01:27:34.880><c> a</c><01:27:34.960><c> neural</c><01:27:35.199><c> net</c>

01:27:35.910 --> 01:27:35.920 align:start position:0%
very often used layer in a neural net
 

01:27:35.920 --> 01:27:38.870 align:start position:0%
very often used layer in a neural net
that<01:27:36.080><c> takes</c><01:27:36.400><c> these</c><01:27:36.960><c> z's</c><01:27:37.360><c> which</c><01:27:37.600><c> are</c><01:27:37.760><c> logics</c>

01:27:38.870 --> 01:27:38.880 align:start position:0%
that takes these z's which are logics
 

01:27:38.880 --> 01:27:40.950 align:start position:0%
that takes these z's which are logics
exponentiates<01:27:39.679><c> them</c>

01:27:40.950 --> 01:27:40.960 align:start position:0%
exponentiates them
 

01:27:40.960 --> 01:27:43.669 align:start position:0%
exponentiates them
and<01:27:41.600><c> divides</c><01:27:42.000><c> and</c><01:27:42.080><c> normalizes</c><01:27:43.040><c> it's</c><01:27:43.199><c> a</c><01:27:43.280><c> way</c><01:27:43.520><c> of</c>

01:27:43.669 --> 01:27:43.679 align:start position:0%
and divides and normalizes it's a way of
 

01:27:43.679 --> 01:27:44.629 align:start position:0%
and divides and normalizes it's a way of
taking

01:27:44.629 --> 01:27:44.639 align:start position:0%
taking
 

01:27:44.639 --> 01:27:47.189 align:start position:0%
taking
outputs<01:27:44.960><c> of</c><01:27:45.040><c> a</c><01:27:45.120><c> neural</c><01:27:45.440><c> net</c><01:27:45.679><c> layer</c><01:27:46.239><c> and</c><01:27:46.400><c> these</c>

01:27:47.189 --> 01:27:47.199 align:start position:0%
outputs of a neural net layer and these
 

01:27:47.199 --> 01:27:48.550 align:start position:0%
outputs of a neural net layer and these
these<01:27:47.440><c> outputs</c><01:27:47.760><c> can</c><01:27:47.840><c> be</c><01:27:48.000><c> positive</c><01:27:48.400><c> or</c>

01:27:48.550 --> 01:27:48.560 align:start position:0%
these outputs can be positive or
 

01:27:48.560 --> 01:27:49.750 align:start position:0%
these outputs can be positive or
negative

01:27:49.750 --> 01:27:49.760 align:start position:0%
negative
 

01:27:49.760 --> 01:27:52.390 align:start position:0%
negative
and<01:27:50.080><c> it</c><01:27:50.400><c> outputs</c><01:27:51.040><c> probability</c><01:27:51.600><c> distributions</c>

01:27:52.390 --> 01:27:52.400 align:start position:0%
and it outputs probability distributions
 

01:27:52.400 --> 01:27:55.189 align:start position:0%
and it outputs probability distributions
it<01:27:52.560><c> outputs</c><01:27:53.120><c> something</c><01:27:53.679><c> that</c><01:27:53.920><c> is</c><01:27:54.080><c> always</c>

01:27:55.189 --> 01:27:55.199 align:start position:0%
it outputs something that is always
 

01:27:55.199 --> 01:27:56.790 align:start position:0%
it outputs something that is always
sums<01:27:55.440><c> to</c><01:27:55.600><c> one</c><01:27:55.840><c> and</c><01:27:56.080><c> are</c><01:27:56.159><c> positive</c><01:27:56.480><c> numbers</c>

01:27:56.790 --> 01:27:56.800 align:start position:0%
sums to one and are positive numbers
 

01:27:56.800 --> 01:27:58.470 align:start position:0%
sums to one and are positive numbers
just<01:27:56.960><c> like</c><01:27:57.120><c> probabilities</c>

01:27:58.470 --> 01:27:58.480 align:start position:0%
just like probabilities
 

01:27:58.480 --> 01:28:00.149 align:start position:0%
just like probabilities
um<01:27:58.800><c> so</c><01:27:58.960><c> it's</c><01:27:59.040><c> kind</c><01:27:59.199><c> of</c><01:27:59.280><c> like</c><01:27:59.360><c> a</c><01:27:59.440><c> normalization</c>

01:28:00.149 --> 01:28:00.159 align:start position:0%
um so it's kind of like a normalization
 

01:28:00.159 --> 01:28:01.430 align:start position:0%
um so it's kind of like a normalization
function<01:28:00.560><c> if</c><01:28:00.639><c> you</c><01:28:00.719><c> want</c><01:28:00.800><c> to</c><01:28:00.880><c> think</c><01:28:01.040><c> of</c><01:28:01.199><c> it</c><01:28:01.280><c> that</c>

01:28:01.430 --> 01:28:01.440 align:start position:0%
function if you want to think of it that
 

01:28:01.440 --> 01:28:03.350 align:start position:0%
function if you want to think of it that
way<01:28:02.080><c> and</c><01:28:02.239><c> you</c><01:28:02.320><c> can</c><01:28:02.400><c> put</c><01:28:02.560><c> it</c><01:28:02.719><c> on</c><01:28:02.800><c> top</c><01:28:03.040><c> of</c><01:28:03.199><c> any</c>

01:28:03.350 --> 01:28:03.360 align:start position:0%
way and you can put it on top of any
 

01:28:03.360 --> 01:28:05.590 align:start position:0%
way and you can put it on top of any
other<01:28:03.679><c> linear</c><01:28:04.159><c> layer</c><01:28:04.480><c> inside</c><01:28:04.719><c> a</c><01:28:04.800><c> neural</c><01:28:05.120><c> net</c>

01:28:05.590 --> 01:28:05.600 align:start position:0%
other linear layer inside a neural net
 

01:28:05.600 --> 01:28:07.110 align:start position:0%
other linear layer inside a neural net
and<01:28:05.760><c> it</c><01:28:05.920><c> basically</c><01:28:06.320><c> makes</c><01:28:06.560><c> a</c><01:28:06.639><c> neural</c><01:28:06.880><c> net</c>

01:28:07.110 --> 01:28:07.120 align:start position:0%
and it basically makes a neural net
 

01:28:07.120 --> 01:28:09.750 align:start position:0%
and it basically makes a neural net
output<01:28:07.440><c> probabilities</c><01:28:08.560><c> that's</c><01:28:08.880><c> very</c><01:28:09.120><c> often</c>

01:28:09.750 --> 01:28:09.760 align:start position:0%
output probabilities that's very often
 

01:28:09.760 --> 01:28:13.270 align:start position:0%
output probabilities that's very often
used<01:28:10.400><c> and</c><01:28:10.480><c> we</c><01:28:10.719><c> used</c><01:28:10.880><c> it</c><01:28:11.040><c> as</c><01:28:11.199><c> well</c><01:28:11.360><c> here</c>

01:28:13.270 --> 01:28:13.280 align:start position:0%
used and we used it as well here
 

01:28:13.280 --> 01:28:14.629 align:start position:0%
used and we used it as well here
so<01:28:13.440><c> this</c><01:28:13.600><c> is</c><01:28:13.679><c> the</c><01:28:13.760><c> forward</c><01:28:14.080><c> pass</c><01:28:14.400><c> and</c><01:28:14.480><c> that's</c>

01:28:14.629 --> 01:28:14.639 align:start position:0%
so this is the forward pass and that's
 

01:28:14.639 --> 01:28:16.149 align:start position:0%
so this is the forward pass and that's
how<01:28:14.800><c> we</c><01:28:14.960><c> made</c><01:28:15.280><c> a</c><01:28:15.360><c> neural</c><01:28:15.600><c> net</c><01:28:15.840><c> output</c>

01:28:16.149 --> 01:28:16.159 align:start position:0%
how we made a neural net output
 

01:28:16.159 --> 01:28:17.830 align:start position:0%
how we made a neural net output
probability

01:28:17.830 --> 01:28:17.840 align:start position:0%
probability
 

01:28:17.840 --> 01:28:19.350 align:start position:0%
probability
now

01:28:19.350 --> 01:28:19.360 align:start position:0%
now
 

01:28:19.360 --> 01:28:20.629 align:start position:0%
now
you'll<01:28:19.600><c> notice</c><01:28:19.920><c> that</c>

01:28:20.629 --> 01:28:20.639 align:start position:0%
you'll notice that
 

01:28:20.639 --> 01:28:22.950 align:start position:0%
you'll notice that
um

01:28:22.950 --> 01:28:22.960 align:start position:0%
 
 

01:28:22.960 --> 01:28:24.229 align:start position:0%
 
all<01:28:23.120><c> of</c><01:28:23.199><c> these</c>

01:28:24.229 --> 01:28:24.239 align:start position:0%
all of these
 

01:28:24.239 --> 01:28:25.910 align:start position:0%
all of these
this<01:28:24.480><c> entire</c><01:28:24.719><c> forward</c><01:28:25.040><c> pass</c><01:28:25.280><c> is</c><01:28:25.360><c> made</c><01:28:25.520><c> up</c><01:28:25.679><c> of</c>

01:28:25.910 --> 01:28:25.920 align:start position:0%
this entire forward pass is made up of
 

01:28:25.920 --> 01:28:27.270 align:start position:0%
this entire forward pass is made up of
differentiable

01:28:27.270 --> 01:28:27.280 align:start position:0%
differentiable
 

01:28:27.280 --> 01:28:29.110 align:start position:0%
differentiable
layers<01:28:27.840><c> everything</c><01:28:28.239><c> here</c><01:28:28.560><c> we</c><01:28:28.719><c> can</c><01:28:28.880><c> back</c>

01:28:29.110 --> 01:28:29.120 align:start position:0%
layers everything here we can back
 

01:28:29.120 --> 01:28:30.950 align:start position:0%
layers everything here we can back
propagate<01:28:29.600><c> through</c><01:28:30.080><c> and</c><01:28:30.239><c> we</c><01:28:30.400><c> saw</c><01:28:30.639><c> some</c><01:28:30.800><c> of</c><01:28:30.880><c> the</c>

01:28:30.950 --> 01:28:30.960 align:start position:0%
propagate through and we saw some of the
 

01:28:30.960 --> 01:28:33.189 align:start position:0%
propagate through and we saw some of the
back<01:28:31.199><c> propagation</c><01:28:31.840><c> in</c><01:28:31.920><c> micrograd</c>

01:28:33.189 --> 01:28:33.199 align:start position:0%
back propagation in micrograd
 

01:28:33.199 --> 01:28:34.709 align:start position:0%
back propagation in micrograd
this<01:28:33.520><c> is</c><01:28:33.679><c> just</c>

01:28:34.709 --> 01:28:34.719 align:start position:0%
this is just
 

01:28:34.719 --> 01:28:36.790 align:start position:0%
this is just
multiplication<01:28:35.520><c> and</c><01:28:35.679><c> addition</c><01:28:36.400><c> all</c><01:28:36.560><c> that's</c>

01:28:36.790 --> 01:28:36.800 align:start position:0%
multiplication and addition all that's
 

01:28:36.800 --> 01:28:38.229 align:start position:0%
multiplication and addition all that's
happening<01:28:37.120><c> here</c><01:28:37.280><c> is</c><01:28:37.360><c> just</c><01:28:37.440><c> multiply</c><01:28:37.920><c> and</c><01:28:38.000><c> then</c>

01:28:38.229 --> 01:28:38.239 align:start position:0%
happening here is just multiply and then
 

01:28:38.239 --> 01:28:39.750 align:start position:0%
happening here is just multiply and then
add<01:28:38.639><c> and</c><01:28:38.719><c> we</c><01:28:38.880><c> know</c><01:28:39.040><c> how</c><01:28:39.120><c> to</c><01:28:39.199><c> backpropagate</c>

01:28:39.750 --> 01:28:39.760 align:start position:0%
add and we know how to backpropagate
 

01:28:39.760 --> 01:28:40.709 align:start position:0%
add and we know how to backpropagate
through<01:28:39.920><c> them</c>

01:28:40.709 --> 01:28:40.719 align:start position:0%
through them
 

01:28:40.719 --> 01:28:41.990 align:start position:0%
through them
exponentiation<01:28:41.520><c> we</c><01:28:41.679><c> know</c><01:28:41.840><c> how</c><01:28:41.920><c> to</c>

01:28:41.990 --> 01:28:42.000 align:start position:0%
exponentiation we know how to
 

01:28:42.000 --> 01:28:43.830 align:start position:0%
exponentiation we know how to
backpropagate<01:28:42.639><c> through</c>

01:28:43.830 --> 01:28:43.840 align:start position:0%
backpropagate through
 

01:28:43.840 --> 01:28:46.470 align:start position:0%
backpropagate through
and<01:28:44.000><c> then</c><01:28:44.320><c> here</c><01:28:44.719><c> we</c><01:28:44.880><c> are</c><01:28:45.520><c> summing</c>

01:28:46.470 --> 01:28:46.480 align:start position:0%
and then here we are summing
 

01:28:46.480 --> 01:28:49.189 align:start position:0%
and then here we are summing
and<01:28:46.719><c> sum</c><01:28:47.280><c> is</c><01:28:47.840><c> is</c><01:28:48.080><c> easily</c><01:28:48.320><c> backpropagable</c><01:28:49.120><c> as</c>

01:28:49.189 --> 01:28:49.199 align:start position:0%
and sum is is easily backpropagable as
 

01:28:49.199 --> 01:28:50.070 align:start position:0%
and sum is is easily backpropagable as
well

01:28:50.070 --> 01:28:50.080 align:start position:0%
well
 

01:28:50.080 --> 01:28:52.550 align:start position:0%
well
and<01:28:50.320><c> division</c><01:28:51.120><c> as</c><01:28:51.280><c> well</c><01:28:51.920><c> so</c><01:28:52.080><c> everything</c><01:28:52.400><c> here</c>

01:28:52.550 --> 01:28:52.560 align:start position:0%
and division as well so everything here
 

01:28:52.560 --> 01:28:54.550 align:start position:0%
and division as well so everything here
is<01:28:52.719><c> differentiable</c><01:28:53.280><c> operation</c>

01:28:54.550 --> 01:28:54.560 align:start position:0%
is differentiable operation
 

01:28:54.560 --> 01:28:57.510 align:start position:0%
is differentiable operation
and<01:28:54.719><c> we</c><01:28:54.880><c> can</c><01:28:55.040><c> back</c><01:28:55.199><c> propagate</c><01:28:55.679><c> through</c>

01:28:57.510 --> 01:28:57.520 align:start position:0%
and we can back propagate through
 

01:28:57.520 --> 01:28:59.750 align:start position:0%
and we can back propagate through
now<01:28:58.239><c> we</c><01:28:58.400><c> achieve</c><01:28:58.719><c> these</c><01:28:58.880><c> probabilities</c><01:28:59.520><c> which</c>

01:28:59.750 --> 01:28:59.760 align:start position:0%
now we achieve these probabilities which
 

01:28:59.760 --> 01:29:01.590 align:start position:0%
now we achieve these probabilities which
are<01:28:59.920><c> 5</c><01:29:00.159><c> by</c><01:29:00.400><c> 27</c>

01:29:01.590 --> 01:29:01.600 align:start position:0%
are 5 by 27
 

01:29:01.600 --> 01:29:03.910 align:start position:0%
are 5 by 27
for<01:29:01.840><c> every</c><01:29:02.000><c> single</c><01:29:02.320><c> example</c><01:29:03.199><c> we</c><01:29:03.360><c> have</c><01:29:03.840><c> a</c>

01:29:03.910 --> 01:29:03.920 align:start position:0%
for every single example we have a
 

01:29:03.920 --> 01:29:06.310 align:start position:0%
for every single example we have a
vector<01:29:04.159><c> of</c><01:29:04.239><c> probabilities</c><01:29:04.800><c> that's</c><01:29:04.960><c> into</c><01:29:05.199><c> one</c>

01:29:06.310 --> 01:29:06.320 align:start position:0%
vector of probabilities that's into one
 

01:29:06.320 --> 01:29:08.470 align:start position:0%
vector of probabilities that's into one
and<01:29:06.400><c> then</c><01:29:06.560><c> here</c><01:29:06.880><c> i</c><01:29:07.040><c> wrote</c><01:29:07.280><c> a</c><01:29:07.360><c> bunch</c><01:29:07.679><c> of</c><01:29:07.760><c> stuff</c>

01:29:08.470 --> 01:29:08.480 align:start position:0%
and then here i wrote a bunch of stuff
 

01:29:08.480 --> 01:29:10.390 align:start position:0%
and then here i wrote a bunch of stuff
to<01:29:08.639><c> sort</c><01:29:08.800><c> of</c><01:29:08.880><c> like</c><01:29:09.040><c> break</c><01:29:09.360><c> down</c><01:29:09.920><c> uh</c><01:29:10.159><c> the</c>

01:29:10.390 --> 01:29:10.400 align:start position:0%
to sort of like break down uh the
 

01:29:10.400 --> 01:29:11.430 align:start position:0%
to sort of like break down uh the
examples

01:29:11.430 --> 01:29:11.440 align:start position:0%
examples
 

01:29:11.440 --> 01:29:14.310 align:start position:0%
examples
so<01:29:11.600><c> we</c><01:29:11.760><c> have</c><01:29:11.840><c> five</c><01:29:12.159><c> examples</c><01:29:12.800><c> making</c><01:29:13.120><c> up</c><01:29:13.600><c> emma</c>

01:29:14.310 --> 01:29:14.320 align:start position:0%
so we have five examples making up emma
 

01:29:14.320 --> 01:29:16.310 align:start position:0%
so we have five examples making up emma
right

01:29:16.310 --> 01:29:16.320 align:start position:0%
right
 

01:29:16.320 --> 01:29:19.990 align:start position:0%
right
and<01:29:16.639><c> there</c><01:29:16.800><c> are</c><01:29:17.040><c> five</c><01:29:17.280><c> bigrams</c><01:29:18.000><c> inside</c><01:29:18.560><c> emma</c>

01:29:19.990 --> 01:29:20.000 align:start position:0%
and there are five bigrams inside emma
 

01:29:20.000 --> 01:29:23.590 align:start position:0%
and there are five bigrams inside emma
so<01:29:20.639><c> bigram</c><01:29:21.120><c> example</c><01:29:21.679><c> a</c><01:29:21.840><c> bigram</c><01:29:22.400><c> example1</c><01:29:23.280><c> is</c>

01:29:23.590 --> 01:29:23.600 align:start position:0%
so bigram example a bigram example1 is
 

01:29:23.600 --> 01:29:26.310 align:start position:0%
so bigram example a bigram example1 is
that<01:29:24.000><c> e</c><01:29:24.239><c> is</c><01:29:24.320><c> the</c><01:29:24.719><c> beginning</c><01:29:25.120><c> character</c><01:29:26.000><c> right</c>

01:29:26.310 --> 01:29:26.320 align:start position:0%
that e is the beginning character right
 

01:29:26.320 --> 01:29:28.229 align:start position:0%
that e is the beginning character right
after<01:29:26.639><c> dot</c>

01:29:28.229 --> 01:29:28.239 align:start position:0%
after dot
 

01:29:28.239 --> 01:29:30.390 align:start position:0%
after dot
and<01:29:28.800><c> the</c><01:29:28.960><c> indexes</c><01:29:29.440><c> for</c><01:29:29.600><c> these</c><01:29:29.840><c> are</c><01:29:30.000><c> zero</c><01:29:30.239><c> and</c>

01:29:30.390 --> 01:29:30.400 align:start position:0%
and the indexes for these are zero and
 

01:29:30.400 --> 01:29:31.270 align:start position:0%
and the indexes for these are zero and
five

01:29:31.270 --> 01:29:31.280 align:start position:0%
five
 

01:29:31.280 --> 01:29:34.070 align:start position:0%
five
so<01:29:31.520><c> then</c><01:29:32.080><c> we</c><01:29:32.320><c> feed</c><01:29:32.560><c> in</c><01:29:32.719><c> a</c><01:29:32.800><c> zero</c>

01:29:34.070 --> 01:29:34.080 align:start position:0%
so then we feed in a zero
 

01:29:34.080 --> 01:29:35.910 align:start position:0%
so then we feed in a zero
that's<01:29:34.320><c> the</c><01:29:34.400><c> input</c><01:29:34.639><c> of</c><01:29:34.719><c> the</c><01:29:34.800><c> neural</c><01:29:35.120><c> net</c>

01:29:35.910 --> 01:29:35.920 align:start position:0%
that's the input of the neural net
 

01:29:35.920 --> 01:29:38.070 align:start position:0%
that's the input of the neural net
we<01:29:36.080><c> get</c><01:29:36.239><c> probabilities</c><01:29:36.960><c> from</c><01:29:37.199><c> the</c><01:29:37.280><c> neural</c><01:29:37.600><c> net</c>

01:29:38.070 --> 01:29:38.080 align:start position:0%
we get probabilities from the neural net
 

01:29:38.080 --> 01:29:41.270 align:start position:0%
we get probabilities from the neural net
that<01:29:38.719><c> are</c><01:29:38.880><c> 27</c><01:29:39.440><c> numbers</c>

01:29:41.270 --> 01:29:41.280 align:start position:0%
that are 27 numbers
 

01:29:41.280 --> 01:29:44.070 align:start position:0%
that are 27 numbers
and<01:29:41.360><c> then</c><01:29:41.600><c> the</c><01:29:41.760><c> label</c><01:29:42.400><c> is</c><01:29:42.880><c> 5</c><01:29:43.520><c> because</c><01:29:43.840><c> e</c>

01:29:44.070 --> 01:29:44.080 align:start position:0%
and then the label is 5 because e
 

01:29:44.080 --> 01:29:45.830 align:start position:0%
and then the label is 5 because e
actually<01:29:44.320><c> comes</c><01:29:44.560><c> after</c><01:29:44.960><c> dot</c>

01:29:45.830 --> 01:29:45.840 align:start position:0%
actually comes after dot
 

01:29:45.840 --> 01:29:47.910 align:start position:0%
actually comes after dot
so<01:29:46.000><c> that's</c><01:29:46.159><c> the</c><01:29:46.320><c> label</c>

01:29:47.910 --> 01:29:47.920 align:start position:0%
so that's the label
 

01:29:47.920 --> 01:29:49.350 align:start position:0%
so that's the label
and<01:29:48.000><c> then</c>

01:29:49.350 --> 01:29:49.360 align:start position:0%
and then
 

01:29:49.360 --> 01:29:52.310 align:start position:0%
and then
we<01:29:49.679><c> use</c><01:29:49.920><c> this</c><01:29:50.159><c> label</c><01:29:50.560><c> 5</c><01:29:51.280><c> to</c><01:29:51.520><c> index</c><01:29:52.000><c> into</c><01:29:52.239><c> the</c>

01:29:52.310 --> 01:29:52.320 align:start position:0%
we use this label 5 to index into the
 

01:29:52.320 --> 01:29:54.310 align:start position:0%
we use this label 5 to index into the
probability<01:29:52.880><c> distribution</c><01:29:53.360><c> here</c>

01:29:54.310 --> 01:29:54.320 align:start position:0%
probability distribution here
 

01:29:54.320 --> 01:29:55.110 align:start position:0%
probability distribution here
so

01:29:55.110 --> 01:29:55.120 align:start position:0%
so
 

01:29:55.120 --> 01:29:55.990 align:start position:0%
so
this

01:29:55.990 --> 01:29:56.000 align:start position:0%
this
 

01:29:56.000 --> 01:29:59.990 align:start position:0%
this
index<01:29:56.400><c> 5</c><01:29:56.800><c> here</c><01:29:57.120><c> is</c><01:29:57.280><c> 0</c><01:29:57.760><c> 1</c><01:29:58.080><c> 2</c><01:29:58.480><c> 3</c><01:29:58.800><c> 4</c><01:29:59.199><c> 5.</c><01:29:59.600><c> it's</c><01:29:59.760><c> this</c>

01:29:59.990 --> 01:30:00.000 align:start position:0%
index 5 here is 0 1 2 3 4 5. it's this
 

01:30:00.000 --> 01:30:01.270 align:start position:0%
index 5 here is 0 1 2 3 4 5. it's this
number<01:30:00.239><c> here</c>

01:30:01.270 --> 01:30:01.280 align:start position:0%
number here
 

01:30:01.280 --> 01:30:03.990 align:start position:0%
number here
which<01:30:01.520><c> is</c><01:30:01.760><c> here</c>

01:30:03.990 --> 01:30:04.000 align:start position:0%
which is here
 

01:30:04.000 --> 01:30:05.350 align:start position:0%
which is here
so<01:30:04.159><c> that's</c><01:30:04.400><c> basically</c><01:30:04.639><c> the</c><01:30:04.719><c> probability</c>

01:30:05.350 --> 01:30:05.360 align:start position:0%
so that's basically the probability
 

01:30:05.360 --> 01:30:07.270 align:start position:0%
so that's basically the probability
assigned<01:30:05.679><c> by</c><01:30:05.840><c> the</c><01:30:05.920><c> neural</c><01:30:06.159><c> net</c><01:30:06.560><c> to</c><01:30:06.719><c> the</c><01:30:06.960><c> actual</c>

01:30:07.270 --> 01:30:07.280 align:start position:0%
assigned by the neural net to the actual
 

01:30:07.280 --> 01:30:08.709 align:start position:0%
assigned by the neural net to the actual
correct<01:30:07.600><c> character</c>

01:30:08.709 --> 01:30:08.719 align:start position:0%
correct character
 

01:30:08.719 --> 01:30:10.149 align:start position:0%
correct character
you<01:30:08.880><c> see</c><01:30:09.040><c> that</c><01:30:09.199><c> the</c><01:30:09.360><c> network</c><01:30:09.840><c> currently</c>

01:30:10.149 --> 01:30:10.159 align:start position:0%
you see that the network currently
 

01:30:10.159 --> 01:30:12.470 align:start position:0%
you see that the network currently
thinks<01:30:10.480><c> that</c><01:30:11.040><c> this</c><01:30:11.280><c> next</c><01:30:11.520><c> character</c><01:30:12.080><c> that</c><01:30:12.239><c> e</c>

01:30:12.470 --> 01:30:12.480 align:start position:0%
thinks that this next character that e
 

01:30:12.480 --> 01:30:15.270 align:start position:0%
thinks that this next character that e
following<01:30:12.960><c> dot</c><01:30:13.440><c> is</c><01:30:13.600><c> only</c><01:30:13.840><c> one</c><01:30:14.000><c> percent</c><01:30:14.400><c> likely</c>

01:30:15.270 --> 01:30:15.280 align:start position:0%
following dot is only one percent likely
 

01:30:15.280 --> 01:30:16.950 align:start position:0%
following dot is only one percent likely
which<01:30:15.520><c> is</c><01:30:15.600><c> of</c><01:30:15.679><c> course</c><01:30:16.000><c> not</c><01:30:16.239><c> very</c><01:30:16.400><c> good</c><01:30:16.719><c> right</c>

01:30:16.950 --> 01:30:16.960 align:start position:0%
which is of course not very good right
 

01:30:16.960 --> 01:30:18.790 align:start position:0%
which is of course not very good right
because<01:30:17.600><c> this</c><01:30:17.920><c> actually</c><01:30:18.159><c> is</c><01:30:18.320><c> a</c><01:30:18.480><c> training</c>

01:30:18.790 --> 01:30:18.800 align:start position:0%
because this actually is a training
 

01:30:18.800 --> 01:30:20.790 align:start position:0%
because this actually is a training
example<01:30:19.679><c> and</c><01:30:19.840><c> the</c><01:30:19.920><c> network</c><01:30:20.239><c> thinks</c><01:30:20.480><c> this</c><01:30:20.639><c> is</c>

01:30:20.790 --> 01:30:20.800 align:start position:0%
example and the network thinks this is
 

01:30:20.800 --> 01:30:22.790 align:start position:0%
example and the network thinks this is
currently<01:30:21.199><c> very</c><01:30:21.440><c> very</c><01:30:21.600><c> unlikely</c><01:30:22.400><c> but</c><01:30:22.560><c> that's</c>

01:30:22.790 --> 01:30:22.800 align:start position:0%
currently very very unlikely but that's
 

01:30:22.800 --> 01:30:24.790 align:start position:0%
currently very very unlikely but that's
just<01:30:22.960><c> because</c><01:30:23.199><c> we</c><01:30:23.360><c> didn't</c><01:30:23.600><c> get</c><01:30:23.760><c> very</c><01:30:24.000><c> lucky</c><01:30:24.639><c> in</c>

01:30:24.790 --> 01:30:24.800 align:start position:0%
just because we didn't get very lucky in
 

01:30:24.800 --> 01:30:27.270 align:start position:0%
just because we didn't get very lucky in
generating<01:30:25.360><c> a</c><01:30:25.440><c> good</c><01:30:25.840><c> setting</c><01:30:26.239><c> of</c><01:30:26.320><c> w</c><01:30:26.960><c> so</c><01:30:27.120><c> right</c>

01:30:27.270 --> 01:30:27.280 align:start position:0%
generating a good setting of w so right
 

01:30:27.280 --> 01:30:29.270 align:start position:0%
generating a good setting of w so right
now<01:30:27.440><c> this</c><01:30:27.600><c> network</c><01:30:27.920><c> things</c><01:30:28.159><c> it</c><01:30:28.239><c> says</c><01:30:28.480><c> unlikely</c>

01:30:29.270 --> 01:30:29.280 align:start position:0%
now this network things it says unlikely
 

01:30:29.280 --> 01:30:31.910 align:start position:0%
now this network things it says unlikely
and<01:30:29.440><c> 0.01</c><01:30:30.239><c> is</c><01:30:30.320><c> not</c><01:30:30.400><c> a</c><01:30:30.480><c> good</c><01:30:30.639><c> outcome</c>

01:30:31.910 --> 01:30:31.920 align:start position:0%
and 0.01 is not a good outcome
 

01:30:31.920 --> 01:30:34.709 align:start position:0%
and 0.01 is not a good outcome
so<01:30:32.080><c> the</c><01:30:32.239><c> log</c><01:30:32.400><c> likelihood</c><01:30:32.960><c> then</c><01:30:34.320><c> is</c><01:30:34.480><c> very</c>

01:30:34.709 --> 01:30:34.719 align:start position:0%
so the log likelihood then is very
 

01:30:34.719 --> 01:30:35.750 align:start position:0%
so the log likelihood then is very
negative

01:30:35.750 --> 01:30:35.760 align:start position:0%
negative
 

01:30:35.760 --> 01:30:38.229 align:start position:0%
negative
and<01:30:35.920><c> the</c><01:30:36.080><c> negative</c><01:30:36.400><c> log</c><01:30:36.639><c> likelihood</c><01:30:37.360><c> is</c><01:30:38.000><c> very</c>

01:30:38.229 --> 01:30:38.239 align:start position:0%
and the negative log likelihood is very
 

01:30:38.239 --> 01:30:39.350 align:start position:0%
and the negative log likelihood is very
positive

01:30:39.350 --> 01:30:39.360 align:start position:0%
positive
 

01:30:39.360 --> 01:30:42.390 align:start position:0%
positive
and<01:30:39.840><c> so</c><01:30:40.159><c> four</c><01:30:40.560><c> is</c><01:30:40.719><c> a</c><01:30:40.800><c> very</c><01:30:41.120><c> high</c><01:30:41.840><c> negative</c><01:30:42.159><c> log</c>

01:30:42.390 --> 01:30:42.400 align:start position:0%
and so four is a very high negative log
 

01:30:42.400 --> 01:30:43.990 align:start position:0%
and so four is a very high negative log
likelihood<01:30:43.120><c> and</c><01:30:43.199><c> that</c><01:30:43.360><c> means</c><01:30:43.600><c> we're</c><01:30:43.760><c> going</c><01:30:43.840><c> to</c>

01:30:43.990 --> 01:30:44.000 align:start position:0%
likelihood and that means we're going to
 

01:30:44.000 --> 01:30:45.270 align:start position:0%
likelihood and that means we're going to
have<01:30:44.080><c> a</c><01:30:44.159><c> high</c><01:30:44.400><c> loss</c>

01:30:45.270 --> 01:30:45.280 align:start position:0%
have a high loss
 

01:30:45.280 --> 01:30:47.430 align:start position:0%
have a high loss
because<01:30:45.520><c> what</c><01:30:45.679><c> is</c><01:30:45.840><c> the</c><01:30:45.920><c> loss</c><01:30:46.800><c> the</c><01:30:46.960><c> loss</c><01:30:47.360><c> is</c>

01:30:47.430 --> 01:30:47.440 align:start position:0%
because what is the loss the loss is
 

01:30:47.440 --> 01:30:51.590 align:start position:0%
because what is the loss the loss is
just<01:30:47.600><c> the</c><01:30:47.840><c> average</c><01:30:48.639><c> negative</c><01:30:48.960><c> log</c><01:30:49.199><c> likelihood</c>

01:30:51.590 --> 01:30:51.600 align:start position:0%
just the average negative log likelihood
 

01:30:51.600 --> 01:30:53.590 align:start position:0%
just the average negative log likelihood
so<01:30:51.760><c> the</c><01:30:51.840><c> second</c><01:30:52.080><c> character</c><01:30:52.480><c> is</c><01:30:52.639><c> em</c>

01:30:53.590 --> 01:30:53.600 align:start position:0%
so the second character is em
 

01:30:53.600 --> 01:30:55.270 align:start position:0%
so the second character is em
and<01:30:53.679><c> you</c><01:30:53.840><c> see</c><01:30:54.080><c> here</c><01:30:54.320><c> that</c><01:30:54.560><c> also</c><01:30:54.800><c> the</c><01:30:54.880><c> network</c>

01:30:55.270 --> 01:30:55.280 align:start position:0%
and you see here that also the network
 

01:30:55.280 --> 01:30:57.750 align:start position:0%
and you see here that also the network
thought<01:30:55.600><c> that</c><01:30:55.920><c> m</c><01:30:56.320><c> following</c><01:30:56.800><c> e</c><01:30:57.280><c> is</c><01:30:57.440><c> very</c>

01:30:57.750 --> 01:30:57.760 align:start position:0%
thought that m following e is very
 

01:30:57.760 --> 01:31:00.950 align:start position:0%
thought that m following e is very
unlikely<01:30:58.239><c> one</c><01:30:58.400><c> percent</c>

01:31:00.950 --> 01:31:00.960 align:start position:0%
 
 

01:31:00.960 --> 01:31:03.030 align:start position:0%
 
the<01:31:01.440><c> for</c><01:31:01.760><c> m</c><01:31:01.920><c> following</c><01:31:02.320><c> m</c><01:31:02.560><c> i</c><01:31:02.639><c> thought</c><01:31:02.800><c> it</c><01:31:02.880><c> was</c>

01:31:03.030 --> 01:31:03.040 align:start position:0%
the for m following m i thought it was
 

01:31:03.040 --> 01:31:04.229 align:start position:0%
the for m following m i thought it was
two<01:31:03.199><c> percent</c>

01:31:04.229 --> 01:31:04.239 align:start position:0%
two percent
 

01:31:04.239 --> 01:31:06.070 align:start position:0%
two percent
and<01:31:04.400><c> for</c><01:31:04.560><c> a</c><01:31:04.800><c> following</c><01:31:05.280><c> m</c><01:31:05.600><c> it</c><01:31:05.840><c> actually</c>

01:31:06.070 --> 01:31:06.080 align:start position:0%
and for a following m it actually
 

01:31:06.080 --> 01:31:08.629 align:start position:0%
and for a following m it actually
thought<01:31:06.239><c> it</c><01:31:06.320><c> was</c><01:31:06.480><c> seven</c><01:31:06.719><c> percent</c><01:31:07.040><c> likely</c><01:31:07.840><c> so</c>

01:31:08.629 --> 01:31:08.639 align:start position:0%
thought it was seven percent likely so
 

01:31:08.639 --> 01:31:10.709 align:start position:0%
thought it was seven percent likely so
just<01:31:08.880><c> by</c><01:31:09.120><c> chance</c><01:31:09.840><c> this</c><01:31:10.000><c> one</c><01:31:10.239><c> actually</c><01:31:10.480><c> has</c><01:31:10.639><c> a</c>

01:31:10.709 --> 01:31:10.719 align:start position:0%
just by chance this one actually has a
 

01:31:10.719 --> 01:31:12.310 align:start position:0%
just by chance this one actually has a
pretty<01:31:10.960><c> good</c><01:31:11.199><c> probability</c><01:31:11.840><c> and</c><01:31:11.920><c> therefore</c>

01:31:12.310 --> 01:31:12.320 align:start position:0%
pretty good probability and therefore
 

01:31:12.320 --> 01:31:15.270 align:start position:0%
pretty good probability and therefore
pretty<01:31:12.719><c> low</c><01:31:13.440><c> negative</c><01:31:13.760><c> log</c><01:31:14.000><c> likelihood</c>

01:31:15.270 --> 01:31:15.280 align:start position:0%
pretty low negative log likelihood
 

01:31:15.280 --> 01:31:17.030 align:start position:0%
pretty low negative log likelihood
and<01:31:15.440><c> finally</c><01:31:15.760><c> here</c><01:31:16.320><c> it</c><01:31:16.480><c> thought</c><01:31:16.639><c> this</c><01:31:16.800><c> was</c><01:31:16.880><c> one</c>

01:31:17.030 --> 01:31:17.040 align:start position:0%
and finally here it thought this was one
 

01:31:17.040 --> 01:31:18.310 align:start position:0%
and finally here it thought this was one
percent<01:31:17.360><c> likely</c>

01:31:18.310 --> 01:31:18.320 align:start position:0%
percent likely
 

01:31:18.320 --> 01:31:20.470 align:start position:0%
percent likely
so<01:31:18.560><c> overall</c><01:31:19.440><c> our</c><01:31:19.679><c> average</c><01:31:20.000><c> negative</c><01:31:20.320><c> log</c>

01:31:20.470 --> 01:31:20.480 align:start position:0%
so overall our average negative log
 

01:31:20.480 --> 01:31:22.870 align:start position:0%
so overall our average negative log
likelihood<01:31:20.960><c> which</c><01:31:21.199><c> is</c><01:31:21.280><c> the</c><01:31:21.520><c> loss</c><01:31:22.320><c> the</c><01:31:22.480><c> total</c>

01:31:22.870 --> 01:31:22.880 align:start position:0%
likelihood which is the loss the total
 

01:31:22.880 --> 01:31:24.709 align:start position:0%
likelihood which is the loss the total
loss<01:31:23.280><c> that</c><01:31:23.520><c> summarizes</c>

01:31:24.709 --> 01:31:24.719 align:start position:0%
loss that summarizes
 

01:31:24.719 --> 01:31:26.470 align:start position:0%
loss that summarizes
basically<01:31:25.120><c> the</c><01:31:25.600><c> how</c><01:31:25.760><c> well</c><01:31:25.920><c> this</c><01:31:26.080><c> network</c>

01:31:26.470 --> 01:31:26.480 align:start position:0%
basically the how well this network
 

01:31:26.480 --> 01:31:28.149 align:start position:0%
basically the how well this network
currently<01:31:26.880><c> works</c><01:31:27.280><c> at</c><01:31:27.440><c> least</c><01:31:27.679><c> on</c><01:31:27.760><c> this</c><01:31:27.920><c> one</c>

01:31:28.149 --> 01:31:28.159 align:start position:0%
currently works at least on this one
 

01:31:28.159 --> 01:31:30.070 align:start position:0%
currently works at least on this one
word<01:31:28.719><c> not</c><01:31:28.960><c> on</c><01:31:29.040><c> the</c><01:31:29.120><c> full</c><01:31:29.280><c> data</c><01:31:29.440><c> suggested</c><01:31:29.920><c> one</c>

01:31:30.070 --> 01:31:30.080 align:start position:0%
word not on the full data suggested one
 

01:31:30.080 --> 01:31:33.189 align:start position:0%
word not on the full data suggested one
word<01:31:30.800><c> is</c><01:31:31.040><c> 3.76</c><01:31:32.159><c> which</c><01:31:32.320><c> is</c><01:31:32.480><c> actually</c><01:31:32.719><c> very</c>

01:31:33.189 --> 01:31:33.199 align:start position:0%
word is 3.76 which is actually very
 

01:31:33.199 --> 01:31:35.030 align:start position:0%
word is 3.76 which is actually very
fairly<01:31:33.520><c> high</c><01:31:33.760><c> loss</c><01:31:34.080><c> this</c><01:31:34.320><c> is</c><01:31:34.400><c> not</c><01:31:34.639><c> a</c><01:31:34.719><c> very</c><01:31:34.880><c> good</c>

01:31:35.030 --> 01:31:35.040 align:start position:0%
fairly high loss this is not a very good
 

01:31:35.040 --> 01:31:36.790 align:start position:0%
fairly high loss this is not a very good
setting<01:31:35.360><c> of</c><01:31:35.440><c> w's</c>

01:31:36.790 --> 01:31:36.800 align:start position:0%
setting of w's
 

01:31:36.800 --> 01:31:38.550 align:start position:0%
setting of w's
now<01:31:36.960><c> here's</c><01:31:37.199><c> what</c><01:31:37.280><c> we</c><01:31:37.440><c> can</c><01:31:37.520><c> do</c>

01:31:38.550 --> 01:31:38.560 align:start position:0%
now here's what we can do
 

01:31:38.560 --> 01:31:41.189 align:start position:0%
now here's what we can do
we're<01:31:38.719><c> currently</c><01:31:39.040><c> getting</c><01:31:39.280><c> 3.76</c>

01:31:41.189 --> 01:31:41.199 align:start position:0%
we're currently getting 3.76
 

01:31:41.199 --> 01:31:42.950 align:start position:0%
we're currently getting 3.76
we<01:31:41.360><c> can</c><01:31:41.520><c> actually</c><01:31:41.840><c> come</c><01:31:42.000><c> here</c><01:31:42.480><c> and</c><01:31:42.560><c> we</c><01:31:42.719><c> can</c>

01:31:42.950 --> 01:31:42.960 align:start position:0%
we can actually come here and we can
 

01:31:42.960 --> 01:31:45.910 align:start position:0%
we can actually come here and we can
change<01:31:43.600><c> our</c><01:31:43.760><c> w</c><01:31:44.239><c> we</c><01:31:44.400><c> can</c><01:31:44.560><c> resample</c><01:31:45.120><c> it</c><01:31:45.600><c> so</c><01:31:45.760><c> let</c>

01:31:45.910 --> 01:31:45.920 align:start position:0%
change our w we can resample it so let
 

01:31:45.920 --> 01:31:48.629 align:start position:0%
change our w we can resample it so let
me<01:31:46.000><c> just</c><01:31:46.320><c> add</c><01:31:46.560><c> one</c><01:31:46.880><c> to</c><01:31:46.960><c> have</c><01:31:47.120><c> a</c><01:31:47.199><c> different</c><01:31:47.600><c> seed</c>

01:31:48.629 --> 01:31:48.639 align:start position:0%
me just add one to have a different seed
 

01:31:48.639 --> 01:31:50.470 align:start position:0%
me just add one to have a different seed
and<01:31:48.800><c> then</c><01:31:48.960><c> we</c><01:31:49.040><c> get</c><01:31:49.199><c> a</c><01:31:49.280><c> different</c><01:31:49.520><c> w</c>

01:31:50.470 --> 01:31:50.480 align:start position:0%
and then we get a different w
 

01:31:50.480 --> 01:31:52.790 align:start position:0%
and then we get a different w
and<01:31:50.639><c> then</c><01:31:50.719><c> we</c><01:31:50.880><c> can</c><01:31:51.040><c> rerun</c><01:31:51.440><c> this</c>

01:31:52.790 --> 01:31:52.800 align:start position:0%
and then we can rerun this
 

01:31:52.800 --> 01:31:54.629 align:start position:0%
and then we can rerun this
and<01:31:52.960><c> with</c><01:31:53.120><c> this</c><01:31:53.360><c> different</c><01:31:53.840><c> c</c><01:31:54.239><c> with</c><01:31:54.400><c> this</c>

01:31:54.629 --> 01:31:54.639 align:start position:0%
and with this different c with this
 

01:31:54.639 --> 01:31:58.550 align:start position:0%
and with this different c with this
different<01:31:54.960><c> setting</c><01:31:55.280><c> of</c><01:31:55.440><c> w's</c><01:31:56.239><c> we</c><01:31:56.400><c> now</c><01:31:56.639><c> get</c><01:31:56.880><c> 3.37</c>

01:31:58.550 --> 01:31:58.560 align:start position:0%
different setting of w's we now get 3.37
 

01:31:58.560 --> 01:32:00.790 align:start position:0%
different setting of w's we now get 3.37
so<01:31:58.719><c> this</c><01:31:58.880><c> is</c><01:31:58.960><c> a</c><01:31:59.120><c> much</c><01:31:59.360><c> better</c><01:31:59.600><c> w</c><01:32:00.159><c> right</c><01:32:00.639><c> and</c>

01:32:00.790 --> 01:32:00.800 align:start position:0%
so this is a much better w right and
 

01:32:00.800 --> 01:32:02.149 align:start position:0%
so this is a much better w right and
that<01:32:01.199><c> and</c><01:32:01.360><c> it's</c><01:32:01.520><c> better</c><01:32:01.840><c> because</c><01:32:02.080><c> the</c>

01:32:02.149 --> 01:32:02.159 align:start position:0%
that and it's better because the
 

01:32:02.159 --> 01:32:04.709 align:start position:0%
that and it's better because the
probabilities<01:32:02.880><c> just</c><01:32:03.120><c> happen</c><01:32:03.360><c> to</c><01:32:03.520><c> come</c><01:32:03.760><c> out</c>

01:32:04.709 --> 01:32:04.719 align:start position:0%
probabilities just happen to come out
 

01:32:04.719 --> 01:32:07.030 align:start position:0%
probabilities just happen to come out
higher<01:32:05.440><c> for</c><01:32:05.679><c> the</c><01:32:06.159><c> for</c><01:32:06.320><c> the</c><01:32:06.400><c> characters</c><01:32:06.800><c> that</c>

01:32:07.030 --> 01:32:07.040 align:start position:0%
higher for the for the characters that
 

01:32:07.040 --> 01:32:08.790 align:start position:0%
higher for the for the characters that
actually<01:32:07.360><c> are</c><01:32:07.520><c> next</c>

01:32:08.790 --> 01:32:08.800 align:start position:0%
actually are next
 

01:32:08.800 --> 01:32:09.990 align:start position:0%
actually are next
and<01:32:08.960><c> so</c><01:32:09.040><c> you</c><01:32:09.120><c> can</c><01:32:09.280><c> imagine</c><01:32:09.600><c> actually</c><01:32:09.840><c> just</c>

01:32:09.990 --> 01:32:10.000 align:start position:0%
and so you can imagine actually just
 

01:32:10.000 --> 01:32:14.310 align:start position:0%
and so you can imagine actually just
resampling<01:32:10.560><c> this</c><01:32:11.199><c> you</c><01:32:11.280><c> know</c><01:32:11.600><c> we</c><01:32:11.760><c> can</c><01:32:11.920><c> try</c><01:32:12.400><c> two</c>

01:32:14.310 --> 01:32:14.320 align:start position:0%
resampling this you know we can try two
 

01:32:14.320 --> 01:32:15.430 align:start position:0%
resampling this you know we can try two
so

01:32:15.430 --> 01:32:15.440 align:start position:0%
so
 

01:32:15.440 --> 01:32:17.110 align:start position:0%
so
okay<01:32:15.679><c> this</c><01:32:15.840><c> was</c><01:32:16.000><c> not</c><01:32:16.239><c> very</c><01:32:16.400><c> good</c>

01:32:17.110 --> 01:32:17.120 align:start position:0%
okay this was not very good
 

01:32:17.120 --> 01:32:18.470 align:start position:0%
okay this was not very good
let's<01:32:17.360><c> try</c><01:32:17.520><c> one</c><01:32:17.679><c> more</c>

01:32:18.470 --> 01:32:18.480 align:start position:0%
let's try one more
 

01:32:18.480 --> 01:32:20.870 align:start position:0%
let's try one more
we<01:32:18.639><c> can</c><01:32:18.719><c> try</c><01:32:19.040><c> three</c>

01:32:20.870 --> 01:32:20.880 align:start position:0%
we can try three
 

01:32:20.880 --> 01:32:22.790 align:start position:0%
we can try three
okay<01:32:21.120><c> this</c><01:32:21.280><c> was</c><01:32:21.600><c> terrible</c><01:32:22.080><c> setting</c><01:32:22.560><c> because</c>

01:32:22.790 --> 01:32:22.800 align:start position:0%
okay this was terrible setting because
 

01:32:22.800 --> 01:32:24.830 align:start position:0%
okay this was terrible setting because
we<01:32:22.880><c> have</c><01:32:23.040><c> a</c><01:32:23.120><c> very</c><01:32:23.440><c> high</c><01:32:23.679><c> loss</c>

01:32:24.830 --> 01:32:24.840 align:start position:0%
we have a very high loss
 

01:32:24.840 --> 01:32:29.910 align:start position:0%
we have a very high loss
so<01:32:26.080><c> anyway</c><01:32:26.400><c> i'm</c><01:32:26.480><c> going</c><01:32:26.560><c> to</c><01:32:26.719><c> erase</c><01:32:27.040><c> this</c>

01:32:29.910 --> 01:32:29.920 align:start position:0%
 
 

01:32:29.920 --> 01:32:31.430 align:start position:0%
 
what<01:32:30.080><c> i'm</c><01:32:30.159><c> doing</c><01:32:30.400><c> here</c><01:32:30.639><c> which</c><01:32:30.880><c> is</c><01:32:30.960><c> just</c><01:32:31.199><c> guess</c>

01:32:31.430 --> 01:32:31.440 align:start position:0%
what i'm doing here which is just guess
 

01:32:31.440 --> 01:32:32.950 align:start position:0%
what i'm doing here which is just guess
and<01:32:31.600><c> check</c><01:32:31.920><c> of</c><01:32:32.080><c> randomly</c><01:32:32.560><c> assigning</c>

01:32:32.950 --> 01:32:32.960 align:start position:0%
and check of randomly assigning
 

01:32:32.960 --> 01:32:34.629 align:start position:0%
and check of randomly assigning
parameters<01:32:33.520><c> and</c><01:32:33.679><c> seeing</c><01:32:33.920><c> if</c><01:32:34.080><c> the</c><01:32:34.159><c> network</c><01:32:34.560><c> is</c>

01:32:34.629 --> 01:32:34.639 align:start position:0%
parameters and seeing if the network is
 

01:32:34.639 --> 01:32:37.430 align:start position:0%
parameters and seeing if the network is
good<01:32:35.360><c> that</c><01:32:35.679><c> is</c><01:32:36.159><c> uh</c><01:32:36.480><c> amateur</c><01:32:36.880><c> hour</c><01:32:37.120><c> that's</c><01:32:37.280><c> not</c>

01:32:37.430 --> 01:32:37.440 align:start position:0%
good that is uh amateur hour that's not
 

01:32:37.440 --> 01:32:39.270 align:start position:0%
good that is uh amateur hour that's not
how<01:32:37.600><c> you</c><01:32:37.760><c> optimize</c><01:32:38.159><c> a</c><01:32:38.239><c> neural</c><01:32:38.480><c> net</c><01:32:39.040><c> the</c><01:32:39.120><c> way</c>

01:32:39.270 --> 01:32:39.280 align:start position:0%
how you optimize a neural net the way
 

01:32:39.280 --> 01:32:40.709 align:start position:0%
how you optimize a neural net the way
you<01:32:39.440><c> optimize</c><01:32:39.760><c> your</c><01:32:39.920><c> neural</c><01:32:40.159><c> net</c><01:32:40.400><c> is</c><01:32:40.560><c> you</c>

01:32:40.709 --> 01:32:40.719 align:start position:0%
you optimize your neural net is you
 

01:32:40.719 --> 01:32:42.470 align:start position:0%
you optimize your neural net is you
start<01:32:41.040><c> with</c><01:32:41.120><c> some</c><01:32:41.360><c> random</c><01:32:41.679><c> guess</c><01:32:42.159><c> and</c><01:32:42.320><c> we're</c>

01:32:42.470 --> 01:32:42.480 align:start position:0%
start with some random guess and we're
 

01:32:42.480 --> 01:32:43.750 align:start position:0%
start with some random guess and we're
going<01:32:42.560><c> to</c><01:32:42.639><c> commit</c><01:32:42.880><c> to</c><01:32:43.040><c> this</c><01:32:43.199><c> one</c><01:32:43.440><c> even</c><01:32:43.600><c> though</c>

01:32:43.750 --> 01:32:43.760 align:start position:0%
going to commit to this one even though
 

01:32:43.760 --> 01:32:45.110 align:start position:0%
going to commit to this one even though
it's<01:32:43.920><c> not</c><01:32:44.080><c> very</c><01:32:44.239><c> good</c>

01:32:45.110 --> 01:32:45.120 align:start position:0%
it's not very good
 

01:32:45.120 --> 01:32:46.870 align:start position:0%
it's not very good
but<01:32:45.280><c> now</c><01:32:45.520><c> the</c><01:32:45.679><c> big</c><01:32:45.840><c> deal</c><01:32:46.159><c> is</c><01:32:46.320><c> we</c><01:32:46.400><c> have</c><01:32:46.560><c> a</c><01:32:46.639><c> loss</c>

01:32:46.870 --> 01:32:46.880 align:start position:0%
but now the big deal is we have a loss
 

01:32:46.880 --> 01:32:48.229 align:start position:0%
but now the big deal is we have a loss
function

01:32:48.229 --> 01:32:48.239 align:start position:0%
function
 

01:32:48.239 --> 01:32:49.910 align:start position:0%
function
so<01:32:48.480><c> this</c><01:32:48.800><c> loss</c>

01:32:49.910 --> 01:32:49.920 align:start position:0%
so this loss
 

01:32:49.920 --> 01:32:52.830 align:start position:0%
so this loss
is<01:32:50.159><c> made</c><01:32:50.400><c> up</c><01:32:50.800><c> only</c><01:32:51.120><c> of</c><01:32:51.280><c> differentiable</c>

01:32:52.830 --> 01:32:52.840 align:start position:0%
is made up only of differentiable
 

01:32:52.840 --> 01:32:56.310 align:start position:0%
is made up only of differentiable
operations<01:32:54.159><c> and</c><01:32:54.560><c> we</c><01:32:54.719><c> can</c><01:32:54.880><c> minimize</c><01:32:55.360><c> the</c><01:32:55.520><c> loss</c>

01:32:56.310 --> 01:32:56.320 align:start position:0%
operations and we can minimize the loss
 

01:32:56.320 --> 01:32:57.510 align:start position:0%
operations and we can minimize the loss
by<01:32:56.560><c> tuning</c>

01:32:57.510 --> 01:32:57.520 align:start position:0%
by tuning
 

01:32:57.520 --> 01:32:58.629 align:start position:0%
by tuning
ws

01:32:58.629 --> 01:32:58.639 align:start position:0%
ws
 

01:32:58.639 --> 01:33:01.189 align:start position:0%
ws
by<01:32:58.800><c> computing</c><01:32:59.199><c> the</c><01:32:59.360><c> gradients</c><01:33:00.159><c> of</c><01:33:00.320><c> the</c><01:33:00.560><c> loss</c>

01:33:01.189 --> 01:33:01.199 align:start position:0%
by computing the gradients of the loss
 

01:33:01.199 --> 01:33:02.550 align:start position:0%
by computing the gradients of the loss
with<01:33:01.360><c> respect</c><01:33:01.760><c> to</c>

01:33:02.550 --> 01:33:02.560 align:start position:0%
with respect to
 

01:33:02.560 --> 01:33:04.950 align:start position:0%
with respect to
these<01:33:02.800><c> w</c><01:33:03.120><c> matrices</c>

01:33:04.950 --> 01:33:04.960 align:start position:0%
these w matrices
 

01:33:04.960 --> 01:33:07.110 align:start position:0%
these w matrices
and<01:33:05.280><c> so</c><01:33:05.440><c> then</c><01:33:05.679><c> we</c><01:33:05.760><c> can</c><01:33:05.920><c> tune</c><01:33:06.159><c> w</c><01:33:06.560><c> to</c><01:33:06.719><c> minimize</c>

01:33:07.110 --> 01:33:07.120 align:start position:0%
and so then we can tune w to minimize
 

01:33:07.120 --> 01:33:09.510 align:start position:0%
and so then we can tune w to minimize
the<01:33:07.199><c> loss</c><01:33:07.600><c> and</c><01:33:07.679><c> find</c><01:33:07.920><c> a</c><01:33:08.000><c> good</c><01:33:08.239><c> setting</c><01:33:08.719><c> of</c><01:33:08.880><c> w</c>

01:33:09.510 --> 01:33:09.520 align:start position:0%
the loss and find a good setting of w
 

01:33:09.520 --> 01:33:11.750 align:start position:0%
the loss and find a good setting of w
using<01:33:09.840><c> gradient</c><01:33:10.239><c> based</c><01:33:10.480><c> optimization</c><01:33:11.600><c> so</c>

01:33:11.750 --> 01:33:11.760 align:start position:0%
using gradient based optimization so
 

01:33:11.760 --> 01:33:13.350 align:start position:0%
using gradient based optimization so
let's<01:33:11.920><c> see</c><01:33:12.080><c> how</c><01:33:12.159><c> that</c><01:33:12.320><c> will</c><01:33:12.480><c> work</c><01:33:12.960><c> now</c><01:33:13.120><c> things</c>

01:33:13.350 --> 01:33:13.360 align:start position:0%
let's see how that will work now things
 

01:33:13.360 --> 01:33:14.550 align:start position:0%
let's see how that will work now things
are<01:33:13.440><c> actually</c><01:33:13.679><c> going</c><01:33:13.840><c> to</c><01:33:14.000><c> look</c><01:33:14.239><c> almost</c>

01:33:14.550 --> 01:33:14.560 align:start position:0%
are actually going to look almost
 

01:33:14.560 --> 01:33:17.030 align:start position:0%
are actually going to look almost
identical<01:33:15.120><c> to</c><01:33:15.280><c> what</c><01:33:15.440><c> we</c><01:33:15.520><c> had</c><01:33:15.679><c> with</c><01:33:15.840><c> micrograd</c>

01:33:17.030 --> 01:33:17.040 align:start position:0%
identical to what we had with micrograd
 

01:33:17.040 --> 01:33:18.149 align:start position:0%
identical to what we had with micrograd
so<01:33:17.280><c> here</c>

01:33:18.149 --> 01:33:18.159 align:start position:0%
so here
 

01:33:18.159 --> 01:33:20.870 align:start position:0%
so here
i<01:33:18.400><c> pulled</c><01:33:18.639><c> up</c><01:33:19.199><c> the</c><01:33:19.679><c> lecture</c><01:33:20.000><c> from</c><01:33:20.159><c> micrograd</c>

01:33:20.870 --> 01:33:20.880 align:start position:0%
i pulled up the lecture from micrograd
 

01:33:20.880 --> 01:33:23.750 align:start position:0%
i pulled up the lecture from micrograd
the<01:33:21.199><c> notebook</c><01:33:22.000><c> it's</c><01:33:22.159><c> from</c><01:33:22.320><c> this</c><01:33:22.480><c> repository</c>

01:33:23.750 --> 01:33:23.760 align:start position:0%
the notebook it's from this repository
 

01:33:23.760 --> 01:33:24.950 align:start position:0%
the notebook it's from this repository
and<01:33:23.920><c> when</c><01:33:24.000><c> i</c><01:33:24.080><c> scroll</c><01:33:24.320><c> all</c><01:33:24.480><c> the</c><01:33:24.480><c> way</c><01:33:24.639><c> to</c><01:33:24.800><c> the</c><01:33:24.880><c> end</c>

01:33:24.950 --> 01:33:24.960 align:start position:0%
and when i scroll all the way to the end
 

01:33:24.960 --> 01:33:26.870 align:start position:0%
and when i scroll all the way to the end
where<01:33:25.120><c> we</c><01:33:25.280><c> left</c><01:33:25.520><c> off</c><01:33:25.679><c> with</c><01:33:25.760><c> micrograd</c><01:33:26.560><c> we</c><01:33:26.719><c> had</c>

01:33:26.870 --> 01:33:26.880 align:start position:0%
where we left off with micrograd we had
 

01:33:26.880 --> 01:33:28.550 align:start position:0%
where we left off with micrograd we had
something<01:33:27.199><c> very</c><01:33:27.360><c> very</c><01:33:27.520><c> similar</c>

01:33:28.550 --> 01:33:28.560 align:start position:0%
something very very similar
 

01:33:28.560 --> 01:33:29.590 align:start position:0%
something very very similar
we<01:33:28.719><c> had</c>

01:33:29.590 --> 01:33:29.600 align:start position:0%
we had
 

01:33:29.600 --> 01:33:31.189 align:start position:0%
we had
a<01:33:29.679><c> number</c><01:33:29.920><c> of</c><01:33:30.000><c> input</c><01:33:30.320><c> examples</c><01:33:30.800><c> in</c><01:33:30.880><c> this</c><01:33:31.040><c> case</c>

01:33:31.189 --> 01:33:31.199 align:start position:0%
a number of input examples in this case
 

01:33:31.199 --> 01:33:34.149 align:start position:0%
a number of input examples in this case
we<01:33:31.360><c> had</c><01:33:31.440><c> four</c><01:33:31.679><c> input</c><01:33:31.920><c> examples</c><01:33:32.639><c> inside</c><01:33:33.040><c> axis</c>

01:33:34.149 --> 01:33:34.159 align:start position:0%
we had four input examples inside axis
 

01:33:34.159 --> 01:33:36.550 align:start position:0%
we had four input examples inside axis
and<01:33:34.320><c> we</c><01:33:34.560><c> had</c><01:33:35.040><c> their</c><01:33:35.280><c> targets</c><01:33:36.159><c> these</c><01:33:36.400><c> are</c>

01:33:36.550 --> 01:33:36.560 align:start position:0%
and we had their targets these are
 

01:33:36.560 --> 01:33:37.590 align:start position:0%
and we had their targets these are
targets

01:33:37.590 --> 01:33:37.600 align:start position:0%
targets
 

01:33:37.600 --> 01:33:39.669 align:start position:0%
targets
just<01:33:37.760><c> like</c><01:33:38.000><c> here</c><01:33:38.239><c> we</c><01:33:38.400><c> have</c><01:33:38.800><c> our</c><01:33:38.960><c> axes</c><01:33:39.360><c> now</c><01:33:39.520><c> but</c>

01:33:39.669 --> 01:33:39.679 align:start position:0%
just like here we have our axes now but
 

01:33:39.679 --> 01:33:41.189 align:start position:0%
just like here we have our axes now but
we<01:33:39.840><c> have</c><01:33:39.920><c> five</c><01:33:40.159><c> of</c><01:33:40.239><c> them</c><01:33:40.639><c> and</c><01:33:40.719><c> they're</c><01:33:40.960><c> now</c>

01:33:41.189 --> 01:33:41.199 align:start position:0%
we have five of them and they're now
 

01:33:41.199 --> 01:33:44.070 align:start position:0%
we have five of them and they're now
integers<01:33:42.159><c> instead</c><01:33:42.480><c> of</c><01:33:42.880><c> vectors</c>

01:33:44.070 --> 01:33:44.080 align:start position:0%
integers instead of vectors
 

01:33:44.080 --> 01:33:45.830 align:start position:0%
integers instead of vectors
but<01:33:44.239><c> we're</c><01:33:44.400><c> going</c><01:33:44.560><c> to</c><01:33:44.639><c> convert</c><01:33:45.040><c> our</c><01:33:45.199><c> integers</c>

01:33:45.830 --> 01:33:45.840 align:start position:0%
but we're going to convert our integers
 

01:33:45.840 --> 01:33:48.870 align:start position:0%
but we're going to convert our integers
to<01:33:46.080><c> vectors</c><01:33:46.880><c> except</c><01:33:47.199><c> our</c><01:33:47.280><c> vectors</c><01:33:47.600><c> will</c><01:33:47.760><c> be</c><01:33:47.920><c> 27</c>

01:33:48.870 --> 01:33:48.880 align:start position:0%
to vectors except our vectors will be 27
 

01:33:48.880 --> 01:33:51.910 align:start position:0%
to vectors except our vectors will be 27
large<01:33:49.280><c> instead</c><01:33:49.520><c> of</c><01:33:49.679><c> three</c><01:33:50.159><c> large</c>

01:33:51.910 --> 01:33:51.920 align:start position:0%
large instead of three large
 

01:33:51.920 --> 01:33:53.590 align:start position:0%
large instead of three large
and<01:33:52.239><c> then</c><01:33:52.400><c> here</c><01:33:52.560><c> what</c><01:33:52.719><c> we</c><01:33:52.800><c> did</c><01:33:53.040><c> is</c><01:33:53.199><c> first</c><01:33:53.440><c> we</c>

01:33:53.590 --> 01:33:53.600 align:start position:0%
and then here what we did is first we
 

01:33:53.600 --> 01:33:55.830 align:start position:0%
and then here what we did is first we
did<01:33:53.760><c> a</c><01:33:53.840><c> forward</c><01:33:54.159><c> pass</c><01:33:54.719><c> where</c><01:33:54.960><c> we</c><01:33:55.120><c> ran</c><01:33:55.440><c> a</c><01:33:55.520><c> neural</c>

01:33:55.830 --> 01:33:55.840 align:start position:0%
did a forward pass where we ran a neural
 

01:33:55.840 --> 01:33:58.229 align:start position:0%
did a forward pass where we ran a neural
net<01:33:56.080><c> on</c><01:33:56.239><c> all</c><01:33:56.400><c> of</c><01:33:56.480><c> the</c><01:33:56.639><c> inputs</c>

01:33:58.229 --> 01:33:58.239 align:start position:0%
net on all of the inputs
 

01:33:58.239 --> 01:34:00.229 align:start position:0%
net on all of the inputs
to<01:33:58.400><c> get</c><01:33:58.560><c> predictions</c>

01:34:00.229 --> 01:34:00.239 align:start position:0%
to get predictions
 

01:34:00.239 --> 01:34:02.870 align:start position:0%
to get predictions
our<01:34:00.400><c> neural</c><01:34:00.639><c> net</c><01:34:00.880><c> at</c><01:34:00.960><c> the</c><01:34:01.120><c> time</c><01:34:01.440><c> this</c><01:34:01.760><c> nfx</c><01:34:02.560><c> was</c>

01:34:02.870 --> 01:34:02.880 align:start position:0%
our neural net at the time this nfx was
 

01:34:02.880 --> 01:34:05.030 align:start position:0%
our neural net at the time this nfx was
a<01:34:03.360><c> multi-layer</c><01:34:03.840><c> perceptron</c>

01:34:05.030 --> 01:34:05.040 align:start position:0%
a multi-layer perceptron
 

01:34:05.040 --> 01:34:06.550 align:start position:0%
a multi-layer perceptron
our<01:34:05.280><c> neural</c><01:34:05.520><c> net</c><01:34:05.760><c> is</c><01:34:05.840><c> going</c><01:34:06.000><c> to</c><01:34:06.159><c> look</c>

01:34:06.550 --> 01:34:06.560 align:start position:0%
our neural net is going to look
 

01:34:06.560 --> 01:34:08.229 align:start position:0%
our neural net is going to look
different<01:34:07.040><c> because</c><01:34:07.360><c> our</c><01:34:07.520><c> neural</c><01:34:07.760><c> net</c><01:34:08.000><c> is</c><01:34:08.080><c> just</c>

01:34:08.229 --> 01:34:08.239 align:start position:0%
different because our neural net is just
 

01:34:08.239 --> 01:34:10.390 align:start position:0%
different because our neural net is just
a<01:34:08.320><c> single</c><01:34:09.040><c> layer</c>

01:34:10.390 --> 01:34:10.400 align:start position:0%
a single layer
 

01:34:10.400 --> 01:34:12.390 align:start position:0%
a single layer
single<01:34:10.719><c> linear</c><01:34:11.120><c> layer</c><01:34:11.679><c> followed</c><01:34:11.920><c> by</c><01:34:12.080><c> a</c><01:34:12.159><c> soft</c>

01:34:12.390 --> 01:34:12.400 align:start position:0%
single linear layer followed by a soft
 

01:34:12.400 --> 01:34:13.750 align:start position:0%
single linear layer followed by a soft
max

01:34:13.750 --> 01:34:13.760 align:start position:0%
max
 

01:34:13.760 --> 01:34:15.830 align:start position:0%
max
so<01:34:13.920><c> that's</c><01:34:14.080><c> our</c><01:34:14.239><c> neural</c><01:34:14.480><c> net</c>

01:34:15.830 --> 01:34:15.840 align:start position:0%
so that's our neural net
 

01:34:15.840 --> 01:34:17.669 align:start position:0%
so that's our neural net
and<01:34:15.920><c> the</c><01:34:16.159><c> loss</c><01:34:16.480><c> here</c><01:34:16.800><c> was</c><01:34:16.960><c> the</c><01:34:17.120><c> mean</c><01:34:17.360><c> squared</c>

01:34:17.669 --> 01:34:17.679 align:start position:0%
and the loss here was the mean squared
 

01:34:17.679 --> 01:34:19.510 align:start position:0%
and the loss here was the mean squared
error<01:34:18.320><c> so</c><01:34:18.480><c> we</c><01:34:18.639><c> simply</c><01:34:18.960><c> subtracted</c><01:34:19.440><c> the</c>

01:34:19.510 --> 01:34:19.520 align:start position:0%
error so we simply subtracted the
 

01:34:19.520 --> 01:34:21.030 align:start position:0%
error so we simply subtracted the
prediction<01:34:19.920><c> from</c><01:34:20.080><c> the</c><01:34:20.320><c> ground</c><01:34:20.560><c> truth</c><01:34:20.960><c> and</c>

01:34:21.030 --> 01:34:21.040 align:start position:0%
prediction from the ground truth and
 

01:34:21.040 --> 01:34:23.110 align:start position:0%
prediction from the ground truth and
squared<01:34:21.440><c> it</c><01:34:21.600><c> and</c><01:34:21.760><c> summed</c><01:34:22.080><c> it</c><01:34:22.239><c> all</c><01:34:22.400><c> up</c><01:34:22.880><c> and</c><01:34:22.960><c> that</c>

01:34:23.110 --> 01:34:23.120 align:start position:0%
squared it and summed it all up and that
 

01:34:23.120 --> 01:34:25.270 align:start position:0%
squared it and summed it all up and that
was<01:34:23.199><c> the</c><01:34:23.360><c> loss</c><01:34:24.080><c> and</c><01:34:24.320><c> loss</c><01:34:24.639><c> was</c><01:34:24.800><c> the</c><01:34:24.960><c> single</c>

01:34:25.270 --> 01:34:25.280 align:start position:0%
was the loss and loss was the single
 

01:34:25.280 --> 01:34:27.510 align:start position:0%
was the loss and loss was the single
number<01:34:25.760><c> that</c><01:34:26.000><c> summarized</c><01:34:26.719><c> the</c><01:34:26.960><c> quality</c><01:34:27.440><c> of</c>

01:34:27.510 --> 01:34:27.520 align:start position:0%
number that summarized the quality of
 

01:34:27.520 --> 01:34:30.709 align:start position:0%
number that summarized the quality of
the<01:34:27.679><c> neural</c><01:34:27.920><c> net</c><01:34:28.400><c> and</c><01:34:28.639><c> when</c><01:34:28.880><c> loss</c><01:34:29.360><c> is</c><01:34:29.920><c> low</c><01:34:30.480><c> like</c>

01:34:30.709 --> 01:34:30.719 align:start position:0%
the neural net and when loss is low like
 

01:34:30.719 --> 01:34:33.750 align:start position:0%
the neural net and when loss is low like
almost<01:34:31.120><c> zero</c><01:34:31.840><c> that</c><01:34:32.000><c> means</c><01:34:32.159><c> the</c><01:34:32.320><c> neural</c><01:34:32.560><c> net</c><01:34:32.880><c> is</c>

01:34:33.750 --> 01:34:33.760 align:start position:0%
almost zero that means the neural net is
 

01:34:33.760 --> 01:34:36.149 align:start position:0%
almost zero that means the neural net is
predicting<01:34:34.239><c> correctly</c>

01:34:36.149 --> 01:34:36.159 align:start position:0%
predicting correctly
 

01:34:36.159 --> 01:34:38.470 align:start position:0%
predicting correctly
so<01:34:36.320><c> we</c><01:34:36.480><c> had</c><01:34:36.639><c> a</c><01:34:36.719><c> single</c><01:34:37.120><c> number</c><01:34:37.679><c> that</c><01:34:38.080><c> uh</c><01:34:38.239><c> that</c>

01:34:38.470 --> 01:34:38.480 align:start position:0%
so we had a single number that uh that
 

01:34:38.480 --> 01:34:40.950 align:start position:0%
so we had a single number that uh that
summarized<01:34:39.199><c> the</c><01:34:39.920><c> uh</c><01:34:40.320><c> the</c><01:34:40.400><c> performance</c><01:34:40.800><c> of</c><01:34:40.880><c> the</c>

01:34:40.950 --> 01:34:40.960 align:start position:0%
summarized the uh the performance of the
 

01:34:40.960 --> 01:34:42.790 align:start position:0%
summarized the uh the performance of the
neural<01:34:41.280><c> net</c><01:34:41.920><c> and</c><01:34:42.159><c> everything</c><01:34:42.480><c> here</c><01:34:42.639><c> was</c>

01:34:42.790 --> 01:34:42.800 align:start position:0%
neural net and everything here was
 

01:34:42.800 --> 01:34:44.629 align:start position:0%
neural net and everything here was
differentiable<01:34:43.520><c> and</c><01:34:43.600><c> was</c><01:34:43.840><c> stored</c><01:34:44.159><c> in</c><01:34:44.320><c> massive</c>

01:34:44.629 --> 01:34:44.639 align:start position:0%
differentiable and was stored in massive
 

01:34:44.639 --> 01:34:46.790 align:start position:0%
differentiable and was stored in massive
compute<01:34:45.040><c> graph</c>

01:34:46.790 --> 01:34:46.800 align:start position:0%
compute graph
 

01:34:46.800 --> 01:34:48.709 align:start position:0%
compute graph
and<01:34:46.880><c> then</c><01:34:47.040><c> we</c><01:34:47.199><c> iterated</c><01:34:47.840><c> over</c><01:34:48.400><c> all</c><01:34:48.560><c> the</c>

01:34:48.709 --> 01:34:48.719 align:start position:0%
and then we iterated over all the
 

01:34:48.719 --> 01:34:50.070 align:start position:0%
and then we iterated over all the
parameters<01:34:49.119><c> we</c><01:34:49.280><c> made</c><01:34:49.440><c> sure</c><01:34:49.679><c> that</c><01:34:49.920><c> the</c>

01:34:50.070 --> 01:34:50.080 align:start position:0%
parameters we made sure that the
 

01:34:50.080 --> 01:34:52.310 align:start position:0%
parameters we made sure that the
gradients<01:34:50.480><c> are</c><01:34:50.560><c> set</c><01:34:50.719><c> to</c><01:34:50.880><c> zero</c><01:34:51.679><c> and</c><01:34:51.840><c> we</c><01:34:52.000><c> called</c>

01:34:52.310 --> 01:34:52.320 align:start position:0%
gradients are set to zero and we called
 

01:34:52.320 --> 01:34:54.070 align:start position:0%
gradients are set to zero and we called
lost<01:34:52.639><c> up</c><01:34:52.719><c> backward</c>

01:34:54.070 --> 01:34:54.080 align:start position:0%
lost up backward
 

01:34:54.080 --> 01:34:56.070 align:start position:0%
lost up backward
and<01:34:54.320><c> lasted</c><01:34:54.719><c> backward</c><01:34:55.280><c> initiated</c><01:34:55.840><c> back</c>

01:34:56.070 --> 01:34:56.080 align:start position:0%
and lasted backward initiated back
 

01:34:56.080 --> 01:34:58.390 align:start position:0%
and lasted backward initiated back
propagation<01:34:56.800><c> at</c><01:34:56.960><c> the</c><01:34:57.119><c> final</c><01:34:57.440><c> output</c><01:34:57.840><c> node</c><01:34:58.239><c> of</c>

01:34:58.390 --> 01:34:58.400 align:start position:0%
propagation at the final output node of
 

01:34:58.400 --> 01:34:59.270 align:start position:0%
propagation at the final output node of
loss

01:34:59.270 --> 01:34:59.280 align:start position:0%
loss
 

01:34:59.280 --> 01:35:00.790 align:start position:0%
loss
right<01:34:59.520><c> so</c>

01:35:00.790 --> 01:35:00.800 align:start position:0%
right so
 

01:35:00.800 --> 01:35:02.390 align:start position:0%
right so
yeah<01:35:01.040><c> remember</c><01:35:01.360><c> these</c><01:35:01.600><c> expressions</c><01:35:02.080><c> we</c><01:35:02.239><c> had</c>

01:35:02.390 --> 01:35:02.400 align:start position:0%
yeah remember these expressions we had
 

01:35:02.400 --> 01:35:03.910 align:start position:0%
yeah remember these expressions we had
loss<01:35:02.639><c> all</c><01:35:02.719><c> the</c><01:35:02.800><c> way</c><01:35:02.960><c> at</c><01:35:03.040><c> the</c><01:35:03.119><c> end</c><01:35:03.520><c> we</c><01:35:03.679><c> start</c>

01:35:03.910 --> 01:35:03.920 align:start position:0%
loss all the way at the end we start
 

01:35:03.920 --> 01:35:05.510 align:start position:0%
loss all the way at the end we start
back<01:35:04.080><c> propagation</c><01:35:04.639><c> and</c><01:35:04.719><c> we</c><01:35:04.880><c> went</c><01:35:05.040><c> all</c><01:35:05.199><c> the</c><01:35:05.280><c> way</c>

01:35:05.510 --> 01:35:05.520 align:start position:0%
back propagation and we went all the way
 

01:35:05.520 --> 01:35:06.310 align:start position:0%
back propagation and we went all the way
back

01:35:06.310 --> 01:35:06.320 align:start position:0%
back
 

01:35:06.320 --> 01:35:08.390 align:start position:0%
back
and<01:35:06.480><c> we</c><01:35:06.639><c> made</c><01:35:06.800><c> sure</c><01:35:07.040><c> that</c><01:35:07.199><c> we</c><01:35:07.440><c> populated</c><01:35:08.239><c> all</c>

01:35:08.390 --> 01:35:08.400 align:start position:0%
and we made sure that we populated all
 

01:35:08.400 --> 01:35:10.709 align:start position:0%
and we made sure that we populated all
the<01:35:08.560><c> parameters</c><01:35:09.440><c> dot</c><01:35:09.679><c> grad</c>

01:35:10.709 --> 01:35:10.719 align:start position:0%
the parameters dot grad
 

01:35:10.719 --> 01:35:12.629 align:start position:0%
the parameters dot grad
so<01:35:10.880><c> that</c><01:35:11.119><c> graph</c><01:35:11.360><c> started</c><01:35:11.600><c> at</c><01:35:11.760><c> zero</c><01:35:12.239><c> but</c><01:35:12.480><c> back</c>

01:35:12.629 --> 01:35:12.639 align:start position:0%
so that graph started at zero but back
 

01:35:12.639 --> 01:35:14.470 align:start position:0%
so that graph started at zero but back
propagation<01:35:13.440><c> filled</c><01:35:13.679><c> it</c><01:35:13.760><c> in</c>

01:35:14.470 --> 01:35:14.480 align:start position:0%
propagation filled it in
 

01:35:14.480 --> 01:35:16.390 align:start position:0%
propagation filled it in
and<01:35:14.560><c> then</c><01:35:14.800><c> in</c><01:35:14.880><c> the</c><01:35:15.119><c> update</c><01:35:15.440><c> we</c><01:35:15.679><c> iterated</c><01:35:16.080><c> over</c>

01:35:16.390 --> 01:35:16.400 align:start position:0%
and then in the update we iterated over
 

01:35:16.400 --> 01:35:18.629 align:start position:0%
and then in the update we iterated over
all<01:35:16.480><c> the</c><01:35:16.560><c> parameters</c><01:35:17.360><c> and</c><01:35:17.520><c> we</c><01:35:17.679><c> simply</c><01:35:18.080><c> did</c><01:35:18.480><c> a</c>

01:35:18.629 --> 01:35:18.639 align:start position:0%
all the parameters and we simply did a
 

01:35:18.639 --> 01:35:21.430 align:start position:0%
all the parameters and we simply did a
parameter<01:35:19.119><c> update</c><01:35:19.760><c> where</c><01:35:20.000><c> every</c><01:35:20.320><c> single</c>

01:35:21.430 --> 01:35:21.440 align:start position:0%
parameter update where every single
 

01:35:21.440 --> 01:35:24.550 align:start position:0%
parameter update where every single
element<01:35:22.400><c> of</c><01:35:22.560><c> our</c><01:35:22.719><c> parameters</c><01:35:23.520><c> was</c><01:35:23.840><c> nudged</c><01:35:24.400><c> in</c>

01:35:24.550 --> 01:35:24.560 align:start position:0%
element of our parameters was nudged in
 

01:35:24.560 --> 01:35:27.510 align:start position:0%
element of our parameters was nudged in
the<01:35:25.040><c> opposite</c><01:35:25.440><c> direction</c><01:35:25.760><c> of</c><01:35:25.840><c> the</c><01:35:25.920><c> gradient</c>

01:35:27.510 --> 01:35:27.520 align:start position:0%
the opposite direction of the gradient
 

01:35:27.520 --> 01:35:30.229 align:start position:0%
the opposite direction of the gradient
and<01:35:28.159><c> so</c><01:35:28.400><c> we're</c><01:35:28.560><c> going</c><01:35:28.719><c> to</c><01:35:28.880><c> do</c><01:35:29.040><c> the</c><01:35:29.280><c> exact</c><01:35:29.920><c> same</c>

01:35:30.229 --> 01:35:30.239 align:start position:0%
and so we're going to do the exact same
 

01:35:30.239 --> 01:35:31.669 align:start position:0%
and so we're going to do the exact same
thing<01:35:30.560><c> here</c>

01:35:31.669 --> 01:35:31.679 align:start position:0%
thing here
 

01:35:31.679 --> 01:35:34.390 align:start position:0%
thing here
so<01:35:31.840><c> i'm</c><01:35:32.000><c> going</c><01:35:32.159><c> to</c><01:35:32.320><c> pull</c><01:35:32.560><c> this</c><01:35:32.880><c> up</c>

01:35:34.390 --> 01:35:34.400 align:start position:0%
so i'm going to pull this up
 

01:35:34.400 --> 01:35:38.470 align:start position:0%
so i'm going to pull this up
on<01:35:34.560><c> the</c><01:35:34.639><c> side</c><01:35:34.960><c> here</c>

01:35:38.470 --> 01:35:38.480 align:start position:0%
 
 

01:35:38.480 --> 01:35:40.070 align:start position:0%
 
so<01:35:38.639><c> that</c><01:35:38.800><c> we</c><01:35:38.880><c> have</c><01:35:39.040><c> it</c><01:35:39.119><c> available</c><01:35:39.760><c> and</c><01:35:39.840><c> we're</c>

01:35:40.070 --> 01:35:40.080 align:start position:0%
so that we have it available and we're
 

01:35:40.080 --> 01:35:41.270 align:start position:0%
so that we have it available and we're
actually<01:35:40.239><c> going</c><01:35:40.400><c> to</c><01:35:40.480><c> do</c><01:35:40.639><c> the</c><01:35:40.800><c> exact</c><01:35:41.119><c> same</c>

01:35:41.270 --> 01:35:41.280 align:start position:0%
actually going to do the exact same
 

01:35:41.280 --> 01:35:44.310 align:start position:0%
actually going to do the exact same
thing<01:35:42.080><c> so</c><01:35:42.320><c> this</c><01:35:42.719><c> was</c><01:35:42.880><c> the</c><01:35:43.040><c> forward</c><01:35:43.360><c> pass</c><01:35:44.080><c> so</c>

01:35:44.310 --> 01:35:44.320 align:start position:0%
thing so this was the forward pass so
 

01:35:44.320 --> 01:35:46.870 align:start position:0%
thing so this was the forward pass so
where<01:35:44.880><c> we</c><01:35:45.199><c> did</c><01:35:45.440><c> this</c>

01:35:46.870 --> 01:35:46.880 align:start position:0%
where we did this
 

01:35:46.880 --> 01:35:49.430 align:start position:0%
where we did this
and<01:35:47.040><c> probs</c><01:35:47.520><c> is</c><01:35:47.760><c> our</c><01:35:47.920><c> wipe</c><01:35:48.159><c> red</c><01:35:48.880><c> so</c><01:35:49.040><c> now</c><01:35:49.199><c> we</c><01:35:49.280><c> have</c>

01:35:49.430 --> 01:35:49.440 align:start position:0%
and probs is our wipe red so now we have
 

01:35:49.440 --> 01:35:51.189 align:start position:0%
and probs is our wipe red so now we have
to<01:35:49.520><c> evaluate</c><01:35:49.840><c> the</c><01:35:50.000><c> loss</c><01:35:50.400><c> but</c><01:35:50.560><c> we're</c><01:35:50.719><c> not</c><01:35:50.960><c> using</c>

01:35:51.189 --> 01:35:51.199 align:start position:0%
to evaluate the loss but we're not using
 

01:35:51.199 --> 01:35:52.870 align:start position:0%
to evaluate the loss but we're not using
the<01:35:51.280><c> mean</c><01:35:51.520><c> squared</c><01:35:51.840><c> error</c><01:35:52.320><c> we're</c><01:35:52.560><c> using</c><01:35:52.800><c> the</c>

01:35:52.870 --> 01:35:52.880 align:start position:0%
the mean squared error we're using the
 

01:35:52.880 --> 01:35:54.470 align:start position:0%
the mean squared error we're using the
negative<01:35:53.199><c> log</c><01:35:53.440><c> likelihood</c><01:35:54.080><c> because</c><01:35:54.320><c> we</c><01:35:54.400><c> are</c>

01:35:54.470 --> 01:35:54.480 align:start position:0%
negative log likelihood because we are
 

01:35:54.480 --> 01:35:56.310 align:start position:0%
negative log likelihood because we are
doing<01:35:54.719><c> classification</c><01:35:55.520><c> we're</c><01:35:55.679><c> not</c><01:35:55.840><c> doing</c>

01:35:56.310 --> 01:35:56.320 align:start position:0%
doing classification we're not doing
 

01:35:56.320 --> 01:35:58.950 align:start position:0%
doing classification we're not doing
regression<01:35:56.960><c> as</c><01:35:57.119><c> it's</c><01:35:57.280><c> called</c>

01:35:58.950 --> 01:35:58.960 align:start position:0%
regression as it's called
 

01:35:58.960 --> 01:36:02.390 align:start position:0%
regression as it's called
so<01:35:59.360><c> here</c><01:35:59.760><c> we</c><01:35:59.840><c> want</c><01:36:00.000><c> to</c><01:36:00.080><c> calculate</c><01:36:00.560><c> loss</c>

01:36:02.390 --> 01:36:02.400 align:start position:0%
so here we want to calculate loss
 

01:36:02.400 --> 01:36:04.470 align:start position:0%
so here we want to calculate loss
now<01:36:02.719><c> the</c><01:36:02.880><c> way</c><01:36:03.040><c> we</c><01:36:03.199><c> calculate</c><01:36:03.679><c> it</c><01:36:03.920><c> is</c><01:36:04.159><c> it's</c><01:36:04.320><c> just</c>

01:36:04.470 --> 01:36:04.480 align:start position:0%
now the way we calculate it is it's just
 

01:36:04.480 --> 01:36:07.109 align:start position:0%
now the way we calculate it is it's just
this<01:36:04.719><c> average</c><01:36:05.280><c> negative</c><01:36:05.600><c> log</c><01:36:05.840><c> likelihood</c>

01:36:07.109 --> 01:36:07.119 align:start position:0%
this average negative log likelihood
 

01:36:07.119 --> 01:36:10.629 align:start position:0%
this average negative log likelihood
now<01:36:07.360><c> this</c><01:36:07.600><c> probs</c><01:36:08.320><c> here</c>

01:36:10.629 --> 01:36:10.639 align:start position:0%
now this probs here
 

01:36:10.639 --> 01:36:13.270 align:start position:0%
now this probs here
has<01:36:10.880><c> a</c><01:36:10.960><c> shape</c><01:36:11.199><c> of</c><01:36:11.360><c> 5</c><01:36:11.600><c> by</c><01:36:11.760><c> 27</c>

01:36:13.270 --> 01:36:13.280 align:start position:0%
has a shape of 5 by 27
 

01:36:13.280 --> 01:36:15.669 align:start position:0%
has a shape of 5 by 27
and<01:36:13.679><c> so</c><01:36:14.000><c> to</c><01:36:14.159><c> get</c><01:36:14.480><c> all</c><01:36:14.560><c> the</c><01:36:14.960><c> we</c><01:36:15.199><c> basically</c><01:36:15.520><c> want</c>

01:36:15.669 --> 01:36:15.679 align:start position:0%
and so to get all the we basically want
 

01:36:15.679 --> 01:36:18.229 align:start position:0%
and so to get all the we basically want
to<01:36:15.840><c> pluck</c><01:36:16.159><c> out</c><01:36:16.400><c> the</c><01:36:16.560><c> probabilities</c><01:36:17.679><c> at</c><01:36:18.159><c> the</c>

01:36:18.229 --> 01:36:18.239 align:start position:0%
to pluck out the probabilities at the
 

01:36:18.239 --> 01:36:19.990 align:start position:0%
to pluck out the probabilities at the
correct<01:36:18.639><c> indices</c><01:36:19.119><c> here</c>

01:36:19.990 --> 01:36:20.000 align:start position:0%
correct indices here
 

01:36:20.000 --> 01:36:22.070 align:start position:0%
correct indices here
so<01:36:20.159><c> in</c><01:36:20.239><c> particular</c><01:36:20.719><c> because</c><01:36:20.960><c> the</c><01:36:21.119><c> labels</c><01:36:21.760><c> are</c>

01:36:22.070 --> 01:36:22.080 align:start position:0%
so in particular because the labels are
 

01:36:22.080 --> 01:36:24.470 align:start position:0%
so in particular because the labels are
stored<01:36:22.400><c> here</c><01:36:22.719><c> in</c><01:36:23.040><c> array</c><01:36:23.440><c> wise</c>

01:36:24.470 --> 01:36:24.480 align:start position:0%
stored here in array wise
 

01:36:24.480 --> 01:36:25.990 align:start position:0%
stored here in array wise
basically<01:36:24.800><c> what</c><01:36:24.880><c> we're</c><01:36:25.119><c> after</c><01:36:25.440><c> is</c><01:36:25.679><c> for</c><01:36:25.840><c> the</c>

01:36:25.990 --> 01:36:26.000 align:start position:0%
basically what we're after is for the
 

01:36:26.000 --> 01:36:27.510 align:start position:0%
basically what we're after is for the
first<01:36:26.239><c> example</c><01:36:26.960><c> we're</c><01:36:27.199><c> looking</c><01:36:27.440><c> at</c>

01:36:27.510 --> 01:36:27.520 align:start position:0%
first example we're looking at
 

01:36:27.520 --> 01:36:30.870 align:start position:0%
first example we're looking at
probability<01:36:28.159><c> of</c><01:36:28.560><c> five</c><01:36:29.040><c> right</c><01:36:29.520><c> at</c><01:36:29.679><c> index</c><01:36:30.000><c> five</c>

01:36:30.870 --> 01:36:30.880 align:start position:0%
probability of five right at index five
 

01:36:30.880 --> 01:36:32.709 align:start position:0%
probability of five right at index five
for<01:36:31.040><c> the</c><01:36:31.199><c> second</c><01:36:31.520><c> example</c>

01:36:32.709 --> 01:36:32.719 align:start position:0%
for the second example
 

01:36:32.719 --> 01:36:36.149 align:start position:0%
for the second example
at<01:36:32.960><c> the</c><01:36:33.360><c> the</c><01:36:33.520><c> second</c><01:36:33.920><c> row</c><01:36:34.400><c> or</c><01:36:34.800><c> row</c><01:36:35.040><c> index</c><01:36:35.360><c> one</c>

01:36:36.149 --> 01:36:36.159 align:start position:0%
at the the second row or row index one
 

01:36:36.159 --> 01:36:37.430 align:start position:0%
at the the second row or row index one
we<01:36:36.320><c> are</c><01:36:36.400><c> interested</c><01:36:36.800><c> in</c><01:36:36.880><c> the</c><01:36:36.960><c> probability</c>

01:36:37.430 --> 01:36:37.440 align:start position:0%
we are interested in the probability
 

01:36:37.440 --> 01:36:40.229 align:start position:0%
we are interested in the probability
assigned<01:36:37.840><c> to</c><01:36:38.560><c> index</c><01:36:38.880><c> 13.</c>

01:36:40.229 --> 01:36:40.239 align:start position:0%
assigned to index 13.
 

01:36:40.239 --> 01:36:43.430 align:start position:0%
assigned to index 13.
at<01:36:40.400><c> the</c><01:36:40.480><c> second</c><01:36:40.800><c> example</c><01:36:41.520><c> we</c><01:36:41.679><c> also</c><01:36:41.920><c> have</c><01:36:42.000><c> 13.</c>

01:36:43.430 --> 01:36:43.440 align:start position:0%
at the second example we also have 13.
 

01:36:43.440 --> 01:36:47.350 align:start position:0%
at the second example we also have 13.
at<01:36:43.760><c> the</c><01:36:43.920><c> third</c><01:36:44.239><c> row</c><01:36:44.719><c> we</c><01:36:44.960><c> want</c><01:36:45.600><c> one</c>

01:36:47.350 --> 01:36:47.360 align:start position:0%
at the third row we want one
 

01:36:47.360 --> 01:36:49.750 align:start position:0%
at the third row we want one
and<01:36:47.440><c> then</c><01:36:47.600><c> the</c><01:36:47.760><c> last</c><01:36:48.080><c> row</c><01:36:48.560><c> which</c><01:36:48.800><c> is</c><01:36:48.960><c> four</c><01:36:49.600><c> we</c>

01:36:49.750 --> 01:36:49.760 align:start position:0%
and then the last row which is four we
 

01:36:49.760 --> 01:36:52.310 align:start position:0%
and then the last row which is four we
want<01:36:50.560><c> zero</c><01:36:51.199><c> so</c><01:36:51.360><c> these</c><01:36:51.520><c> are</c><01:36:51.600><c> the</c><01:36:51.679><c> probabilities</c>

01:36:52.310 --> 01:36:52.320 align:start position:0%
want zero so these are the probabilities
 

01:36:52.320 --> 01:36:53.990 align:start position:0%
want zero so these are the probabilities
we're<01:36:52.480><c> interested</c><01:36:52.880><c> in</c><01:36:53.119><c> right</c>

01:36:53.990 --> 01:36:54.000 align:start position:0%
we're interested in right
 

01:36:54.000 --> 01:36:55.910 align:start position:0%
we're interested in right
and<01:36:54.080><c> you</c><01:36:54.239><c> can</c><01:36:54.320><c> see</c><01:36:54.480><c> that</c><01:36:54.719><c> they're</c><01:36:54.880><c> not</c><01:36:55.280><c> amazing</c>

01:36:55.910 --> 01:36:55.920 align:start position:0%
and you can see that they're not amazing
 

01:36:55.920 --> 01:36:58.550 align:start position:0%
and you can see that they're not amazing
as<01:36:56.080><c> we</c><01:36:56.320><c> saw</c><01:36:56.719><c> above</c>

01:36:58.550 --> 01:36:58.560 align:start position:0%
as we saw above
 

01:36:58.560 --> 01:37:00.070 align:start position:0%
as we saw above
so<01:36:58.719><c> these</c><01:36:58.880><c> are</c><01:36:59.040><c> the</c><01:36:59.119><c> probabilities</c><01:36:59.520><c> we</c><01:36:59.679><c> want</c>

01:37:00.070 --> 01:37:00.080 align:start position:0%
so these are the probabilities we want
 

01:37:00.080 --> 01:37:02.229 align:start position:0%
so these are the probabilities we want
but<01:37:00.320><c> we</c><01:37:00.480><c> want</c><01:37:00.719><c> like</c><01:37:00.880><c> a</c><01:37:00.960><c> more</c><01:37:01.119><c> efficient</c><01:37:01.520><c> way</c><01:37:01.840><c> to</c>

01:37:02.229 --> 01:37:02.239 align:start position:0%
but we want like a more efficient way to
 

01:37:02.239 --> 01:37:04.470 align:start position:0%
but we want like a more efficient way to
access<01:37:02.560><c> these</c><01:37:02.719><c> probabilities</c>

01:37:04.470 --> 01:37:04.480 align:start position:0%
access these probabilities
 

01:37:04.480 --> 01:37:06.229 align:start position:0%
access these probabilities
not<01:37:04.639><c> just</c><01:37:05.040><c> listing</c><01:37:05.360><c> them</c><01:37:05.520><c> out</c><01:37:05.679><c> in</c><01:37:05.840><c> a</c><01:37:05.920><c> tuple</c>

01:37:06.229 --> 01:37:06.239 align:start position:0%
not just listing them out in a tuple
 

01:37:06.239 --> 01:37:07.910 align:start position:0%
not just listing them out in a tuple
like<01:37:06.400><c> this</c><01:37:06.960><c> so</c><01:37:07.119><c> it</c><01:37:07.199><c> turns</c><01:37:07.440><c> out</c><01:37:07.520><c> that</c><01:37:07.679><c> the</c><01:37:07.760><c> way</c>

01:37:07.910 --> 01:37:07.920 align:start position:0%
like this so it turns out that the way
 

01:37:07.920 --> 01:37:09.830 align:start position:0%
like this so it turns out that the way
to<01:37:08.080><c> do</c><01:37:08.080><c> this</c><01:37:08.320><c> in</c><01:37:08.400><c> pytorch</c><01:37:09.040><c> uh</c><01:37:09.199><c> one</c><01:37:09.440><c> of</c><01:37:09.520><c> the</c><01:37:09.600><c> ways</c>

01:37:09.830 --> 01:37:09.840 align:start position:0%
to do this in pytorch uh one of the ways
 

01:37:09.840 --> 01:37:12.870 align:start position:0%
to do this in pytorch uh one of the ways
at<01:37:10.000><c> least</c><01:37:10.719><c> is</c><01:37:10.880><c> we</c><01:37:11.040><c> can</c><01:37:11.280><c> basically</c><01:37:11.840><c> pass</c><01:37:12.159><c> in</c>

01:37:12.870 --> 01:37:12.880 align:start position:0%
at least is we can basically pass in
 

01:37:12.880 --> 01:37:16.629 align:start position:0%
at least is we can basically pass in
all<01:37:13.040><c> of</c><01:37:13.119><c> these</c>

01:37:16.629 --> 01:37:16.639 align:start position:0%
 
 

01:37:16.639 --> 01:37:19.669 align:start position:0%
 
sorry<01:37:16.960><c> about</c><01:37:17.119><c> that</c><01:37:17.840><c> all</c><01:37:18.000><c> of</c><01:37:18.080><c> these</c><01:37:18.639><c> um</c>

01:37:19.669 --> 01:37:19.679 align:start position:0%
sorry about that all of these um
 

01:37:19.679 --> 01:37:22.070 align:start position:0%
sorry about that all of these um
integers<01:37:20.560><c> in</c><01:37:20.719><c> the</c><01:37:20.800><c> vectors</c>

01:37:22.070 --> 01:37:22.080 align:start position:0%
integers in the vectors
 

01:37:22.080 --> 01:37:22.870 align:start position:0%
integers in the vectors
so

01:37:22.870 --> 01:37:22.880 align:start position:0%
so
 

01:37:22.880 --> 01:37:23.830 align:start position:0%
so
the

01:37:23.830 --> 01:37:23.840 align:start position:0%
the
 

01:37:23.840 --> 01:37:25.910 align:start position:0%
the
these<01:37:24.080><c> ones</c><01:37:24.400><c> you</c><01:37:24.480><c> see</c><01:37:24.639><c> how</c><01:37:24.800><c> they're</c><01:37:25.040><c> just</c><01:37:25.520><c> 0</c><01:37:25.760><c> 1</c>

01:37:25.910 --> 01:37:25.920 align:start position:0%
these ones you see how they're just 0 1
 

01:37:25.920 --> 01:37:27.030 align:start position:0%
these ones you see how they're just 0 1
2<01:37:26.080><c> 3</c><01:37:26.320><c> 4</c>

01:37:27.030 --> 01:37:27.040 align:start position:0%
2 3 4
 

01:37:27.040 --> 01:37:29.189 align:start position:0%
2 3 4
we<01:37:27.199><c> can</c><01:37:27.360><c> actually</c><01:37:27.600><c> create</c><01:37:27.840><c> that</c><01:37:28.000><c> using</c><01:37:28.400><c> mp</c>

01:37:29.189 --> 01:37:29.199 align:start position:0%
we can actually create that using mp
 

01:37:29.199 --> 01:37:32.790 align:start position:0%
we can actually create that using mp
not<01:37:29.440><c> mp</c><01:37:29.760><c> sorry</c><01:37:30.159><c> torch</c><01:37:30.639><c> dot</c><01:37:31.119><c> range</c><01:37:31.600><c> of</c><01:37:31.760><c> 5</c>

01:37:32.790 --> 01:37:32.800 align:start position:0%
not mp sorry torch dot range of 5
 

01:37:32.800 --> 01:37:34.390 align:start position:0%
not mp sorry torch dot range of 5
0<01:37:33.040><c> 1</c><01:37:33.199><c> 2</c><01:37:33.360><c> 3</c><01:37:33.520><c> 4.</c>

01:37:34.390 --> 01:37:34.400 align:start position:0%
0 1 2 3 4.
 

01:37:34.400 --> 01:37:37.030 align:start position:0%
0 1 2 3 4.
so<01:37:34.560><c> we</c><01:37:34.639><c> can</c><01:37:34.880><c> index</c><01:37:35.199><c> here</c><01:37:35.440><c> with</c><01:37:35.600><c> torch.range</c><01:37:36.800><c> of</c>

01:37:37.030 --> 01:37:37.040 align:start position:0%
so we can index here with torch.range of
 

01:37:37.040 --> 01:37:38.229 align:start position:0%
so we can index here with torch.range of
5

01:37:38.229 --> 01:37:38.239 align:start position:0%
5
 

01:37:38.239 --> 01:37:41.109 align:start position:0%
5
and<01:37:38.480><c> here</c><01:37:38.880><c> we</c><01:37:39.040><c> index</c><01:37:39.360><c> with</c><01:37:39.600><c> ys</c>

01:37:41.109 --> 01:37:41.119 align:start position:0%
and here we index with ys
 

01:37:41.119 --> 01:37:43.109 align:start position:0%
and here we index with ys
and<01:37:41.199><c> you</c><01:37:41.360><c> see</c><01:37:41.520><c> that</c><01:37:41.679><c> that</c><01:37:41.840><c> gives</c><01:37:42.159><c> us</c>

01:37:43.109 --> 01:37:43.119 align:start position:0%
and you see that that gives us
 

01:37:43.119 --> 01:37:48.950 align:start position:0%
and you see that that gives us
exactly<01:37:43.679><c> these</c><01:37:43.920><c> numbers</c>

01:37:48.950 --> 01:37:48.960 align:start position:0%
 
 

01:37:48.960 --> 01:37:51.430 align:start position:0%
 
so<01:37:49.119><c> that</c><01:37:49.360><c> plucks</c><01:37:49.679><c> out</c><01:37:49.760><c> the</c><01:37:49.920><c> probabilities</c><01:37:50.719><c> of</c>

01:37:51.430 --> 01:37:51.440 align:start position:0%
so that plucks out the probabilities of
 

01:37:51.440 --> 01:37:53.910 align:start position:0%
so that plucks out the probabilities of
that<01:37:51.600><c> the</c><01:37:51.679><c> neural</c><01:37:51.920><c> network</c><01:37:52.320><c> assigns</c><01:37:52.960><c> to</c><01:37:53.119><c> the</c>

01:37:53.910 --> 01:37:53.920 align:start position:0%
that the neural network assigns to the
 

01:37:53.920 --> 01:37:56.229 align:start position:0%
that the neural network assigns to the
correct<01:37:54.560><c> next</c><01:37:54.800><c> character</c>

01:37:56.229 --> 01:37:56.239 align:start position:0%
correct next character
 

01:37:56.239 --> 01:37:58.310 align:start position:0%
correct next character
now<01:37:56.480><c> we</c><01:37:56.639><c> take</c><01:37:56.880><c> those</c><01:37:57.040><c> probabilities</c><01:37:58.000><c> and</c><01:37:58.159><c> we</c>

01:37:58.310 --> 01:37:58.320 align:start position:0%
now we take those probabilities and we
 

01:37:58.320 --> 01:37:59.590 align:start position:0%
now we take those probabilities and we
don't<01:37:58.480><c> we</c><01:37:58.639><c> actually</c><01:37:58.880><c> look</c><01:37:59.119><c> at</c><01:37:59.199><c> the</c><01:37:59.360><c> log</c>

01:37:59.590 --> 01:37:59.600 align:start position:0%
don't we actually look at the log
 

01:37:59.600 --> 01:38:03.510 align:start position:0%
don't we actually look at the log
probability<01:38:00.560><c> so</c><01:38:00.880><c> we</c><01:38:01.040><c> want</c><01:38:01.199><c> to</c><01:38:01.360><c> dot</c><01:38:01.679><c> log</c>

01:38:03.510 --> 01:38:03.520 align:start position:0%
probability so we want to dot log
 

01:38:03.520 --> 01:38:05.669 align:start position:0%
probability so we want to dot log
and<01:38:03.679><c> then</c><01:38:04.159><c> we</c><01:38:04.320><c> want</c><01:38:04.560><c> to</c><01:38:04.800><c> just</c>

01:38:05.669 --> 01:38:05.679 align:start position:0%
and then we want to just
 

01:38:05.679 --> 01:38:07.669 align:start position:0%
and then we want to just
average<01:38:06.080><c> that</c><01:38:06.320><c> up</c><01:38:06.639><c> so</c><01:38:06.880><c> take</c><01:38:07.040><c> the</c><01:38:07.199><c> mean</c><01:38:07.440><c> of</c><01:38:07.600><c> all</c>

01:38:07.669 --> 01:38:07.679 align:start position:0%
average that up so take the mean of all
 

01:38:07.679 --> 01:38:08.550 align:start position:0%
average that up so take the mean of all
of<01:38:07.760><c> that</c>

01:38:08.550 --> 01:38:08.560 align:start position:0%
of that
 

01:38:08.560 --> 01:38:10.310 align:start position:0%
of that
and<01:38:08.639><c> then</c><01:38:08.960><c> it's</c><01:38:09.199><c> the</c><01:38:09.360><c> negative</c>

01:38:10.310 --> 01:38:10.320 align:start position:0%
and then it's the negative
 

01:38:10.320 --> 01:38:14.149 align:start position:0%
and then it's the negative
average<01:38:10.880><c> log</c><01:38:11.199><c> likelihood</c><01:38:11.760><c> that</c><01:38:11.920><c> is</c><01:38:12.080><c> the</c><01:38:12.159><c> loss</c>

01:38:14.149 --> 01:38:14.159 align:start position:0%
average log likelihood that is the loss
 

01:38:14.159 --> 01:38:18.070 align:start position:0%
average log likelihood that is the loss
so<01:38:14.320><c> the</c><01:38:14.480><c> loss</c><01:38:14.800><c> here</c><01:38:15.280><c> is</c><01:38:16.239><c> 3.7</c><01:38:17.199><c> something</c><01:38:17.920><c> and</c>

01:38:18.070 --> 01:38:18.080 align:start position:0%
so the loss here is 3.7 something and
 

01:38:18.080 --> 01:38:21.669 align:start position:0%
so the loss here is 3.7 something and
you<01:38:18.239><c> see</c><01:38:18.400><c> that</c><01:38:18.639><c> this</c><01:38:18.880><c> loss</c><01:38:19.360><c> 3.76</c><01:38:20.719><c> 3.76</c><01:38:21.520><c> is</c>

01:38:21.669 --> 01:38:21.679 align:start position:0%
you see that this loss 3.76 3.76 is
 

01:38:21.679 --> 01:38:23.430 align:start position:0%
you see that this loss 3.76 3.76 is
exactly<01:38:22.000><c> as</c><01:38:22.080><c> we've</c><01:38:22.320><c> obtained</c><01:38:22.639><c> before</c><01:38:23.280><c> but</c>

01:38:23.430 --> 01:38:23.440 align:start position:0%
exactly as we've obtained before but
 

01:38:23.440 --> 01:38:25.270 align:start position:0%
exactly as we've obtained before but
this<01:38:23.600><c> is</c><01:38:23.679><c> a</c><01:38:23.760><c> vectorized</c><01:38:24.400><c> form</c><01:38:24.880><c> of</c><01:38:25.040><c> that</c>

01:38:25.270 --> 01:38:25.280 align:start position:0%
this is a vectorized form of that
 

01:38:25.280 --> 01:38:26.470 align:start position:0%
this is a vectorized form of that
expression

01:38:26.470 --> 01:38:26.480 align:start position:0%
expression
 

01:38:26.480 --> 01:38:27.189 align:start position:0%
expression
so

01:38:27.189 --> 01:38:27.199 align:start position:0%
so
 

01:38:27.199 --> 01:38:29.510 align:start position:0%
so
we<01:38:27.360><c> get</c><01:38:27.520><c> the</c><01:38:27.679><c> same</c><01:38:28.320><c> loss</c>

01:38:29.510 --> 01:38:29.520 align:start position:0%
we get the same loss
 

01:38:29.520 --> 01:38:31.350 align:start position:0%
we get the same loss
and<01:38:29.600><c> the</c><01:38:29.840><c> same</c><01:38:30.080><c> loss</c><01:38:30.480><c> we</c><01:38:30.639><c> can</c><01:38:30.800><c> consider</c>

01:38:31.350 --> 01:38:31.360 align:start position:0%
and the same loss we can consider
 

01:38:31.360 --> 01:38:33.990 align:start position:0%
and the same loss we can consider
service<01:38:31.840><c> part</c><01:38:32.080><c> of</c><01:38:32.560><c> this</c><01:38:32.719><c> forward</c><01:38:33.119><c> pass</c>

01:38:33.990 --> 01:38:34.000 align:start position:0%
service part of this forward pass
 

01:38:34.000 --> 01:38:36.310 align:start position:0%
service part of this forward pass
and<01:38:34.159><c> we've</c><01:38:34.400><c> achieved</c><01:38:34.800><c> here</c><01:38:35.040><c> now</c><01:38:35.440><c> loss</c>

01:38:36.310 --> 01:38:36.320 align:start position:0%
and we've achieved here now loss
 

01:38:36.320 --> 01:38:37.910 align:start position:0%
and we've achieved here now loss
okay<01:38:36.560><c> so</c><01:38:36.639><c> we</c><01:38:36.800><c> made</c><01:38:37.040><c> our</c><01:38:37.199><c> way</c><01:38:37.440><c> all</c><01:38:37.520><c> the</c><01:38:37.600><c> way</c><01:38:37.760><c> to</c>

01:38:37.910 --> 01:38:37.920 align:start position:0%
okay so we made our way all the way to
 

01:38:37.920 --> 01:38:40.070 align:start position:0%
okay so we made our way all the way to
loss<01:38:38.239><c> we've</c><01:38:38.400><c> defined</c><01:38:38.719><c> the</c><01:38:38.800><c> forward</c><01:38:39.119><c> pass</c>

01:38:40.070 --> 01:38:40.080 align:start position:0%
loss we've defined the forward pass
 

01:38:40.080 --> 01:38:41.990 align:start position:0%
loss we've defined the forward pass
we<01:38:40.320><c> forwarded</c><01:38:40.800><c> the</c><01:38:40.880><c> network</c><01:38:41.360><c> and</c><01:38:41.440><c> the</c><01:38:41.600><c> loss</c>

01:38:41.990 --> 01:38:42.000 align:start position:0%
we forwarded the network and the loss
 

01:38:42.000 --> 01:38:44.229 align:start position:0%
we forwarded the network and the loss
now<01:38:42.159><c> we're</c><01:38:42.320><c> ready</c><01:38:42.560><c> to</c><01:38:42.639><c> do</c><01:38:42.800><c> the</c><01:38:43.040><c> backward</c><01:38:43.360><c> pass</c>

01:38:44.229 --> 01:38:44.239 align:start position:0%
now we're ready to do the backward pass
 

01:38:44.239 --> 01:38:47.990 align:start position:0%
now we're ready to do the backward pass
so<01:38:44.480><c> backward</c><01:38:44.880><c> pass</c>

01:38:47.990 --> 01:38:48.000 align:start position:0%
 
 

01:38:48.000 --> 01:38:49.510 align:start position:0%
 
we<01:38:48.159><c> want</c><01:38:48.320><c> to</c><01:38:48.480><c> first</c><01:38:48.800><c> make</c><01:38:48.960><c> sure</c><01:38:49.119><c> that</c><01:38:49.280><c> all</c><01:38:49.360><c> the</c>

01:38:49.510 --> 01:38:49.520 align:start position:0%
we want to first make sure that all the
 

01:38:49.520 --> 01:38:52.390 align:start position:0%
we want to first make sure that all the
gradients<01:38:49.920><c> are</c><01:38:50.080><c> reset</c><01:38:50.960><c> so</c><01:38:51.119><c> they're</c><01:38:51.280><c> at</c><01:38:51.440><c> zero</c>

01:38:52.390 --> 01:38:52.400 align:start position:0%
gradients are reset so they're at zero
 

01:38:52.400 --> 01:38:55.350 align:start position:0%
gradients are reset so they're at zero
now<01:38:52.639><c> in</c><01:38:52.800><c> pytorch</c><01:38:53.679><c> you</c><01:38:53.840><c> can</c><01:38:54.560><c> set</c><01:38:54.800><c> the</c><01:38:54.960><c> gradients</c>

01:38:55.350 --> 01:38:55.360 align:start position:0%
now in pytorch you can set the gradients
 

01:38:55.360 --> 01:38:57.189 align:start position:0%
now in pytorch you can set the gradients
to<01:38:55.440><c> be</c><01:38:55.520><c> zero</c><01:38:55.840><c> but</c><01:38:56.000><c> you</c><01:38:56.159><c> can</c><01:38:56.239><c> also</c><01:38:56.560><c> just</c><01:38:56.880><c> set</c><01:38:57.119><c> it</c>

01:38:57.189 --> 01:38:57.199 align:start position:0%
to be zero but you can also just set it
 

01:38:57.199 --> 01:38:59.350 align:start position:0%
to be zero but you can also just set it
to<01:38:57.440><c> none</c><01:38:58.080><c> and</c><01:38:58.320><c> setting</c><01:38:58.560><c> it</c><01:38:58.639><c> to</c><01:38:58.800><c> none</c><01:38:59.040><c> is</c><01:38:59.199><c> more</c>

01:38:59.350 --> 01:38:59.360 align:start position:0%
to none and setting it to none is more
 

01:38:59.360 --> 01:39:01.590 align:start position:0%
to none and setting it to none is more
efficient<01:39:00.159><c> and</c><01:39:00.320><c> pi</c><01:39:00.480><c> torch</c><01:39:00.719><c> will</c><01:39:00.960><c> interpret</c>

01:39:01.590 --> 01:39:01.600 align:start position:0%
efficient and pi torch will interpret
 

01:39:01.600 --> 01:39:04.310 align:start position:0%
efficient and pi torch will interpret
none<01:39:02.080><c> as</c><01:39:02.320><c> like</c><01:39:02.880><c> a</c><01:39:03.040><c> lack</c><01:39:03.280><c> of</c><01:39:03.360><c> a</c><01:39:03.520><c> gradient</c><01:39:04.000><c> and</c><01:39:04.159><c> is</c>

01:39:04.310 --> 01:39:04.320 align:start position:0%
none as like a lack of a gradient and is
 

01:39:04.320 --> 01:39:05.750 align:start position:0%
none as like a lack of a gradient and is
the<01:39:04.400><c> same</c><01:39:04.639><c> as</c><01:39:04.800><c> zeros</c>

01:39:05.750 --> 01:39:05.760 align:start position:0%
the same as zeros
 

01:39:05.760 --> 01:39:07.910 align:start position:0%
the same as zeros
so<01:39:05.920><c> this</c><01:39:06.080><c> is</c><01:39:06.159><c> a</c><01:39:06.239><c> way</c><01:39:06.480><c> to</c><01:39:06.880><c> set</c><01:39:07.119><c> to</c><01:39:07.280><c> zero</c><01:39:07.760><c> the</c>

01:39:07.910 --> 01:39:07.920 align:start position:0%
so this is a way to set to zero the
 

01:39:07.920 --> 01:39:10.390 align:start position:0%
so this is a way to set to zero the
gradient

01:39:10.390 --> 01:39:10.400 align:start position:0%
 
 

01:39:10.400 --> 01:39:14.629 align:start position:0%
 
and<01:39:10.560><c> now</c><01:39:10.800><c> we</c><01:39:10.960><c> do</c><01:39:11.199><c> lost</c><01:39:11.520><c> it</c><01:39:11.600><c> backward</c>

01:39:14.629 --> 01:39:14.639 align:start position:0%
 
 

01:39:14.639 --> 01:39:16.149 align:start position:0%
 
before<01:39:14.960><c> we</c><01:39:15.040><c> do</c><01:39:15.199><c> lost</c><01:39:15.440><c> that</c><01:39:15.520><c> backward</c><01:39:15.920><c> we</c><01:39:16.000><c> need</c>

01:39:16.149 --> 01:39:16.159 align:start position:0%
before we do lost that backward we need
 

01:39:16.159 --> 01:39:17.590 align:start position:0%
before we do lost that backward we need
one<01:39:16.320><c> more</c><01:39:16.560><c> thing</c><01:39:16.880><c> if</c><01:39:16.960><c> you</c><01:39:17.040><c> remember</c><01:39:17.360><c> from</c>

01:39:17.590 --> 01:39:17.600 align:start position:0%
one more thing if you remember from
 

01:39:17.600 --> 01:39:18.790 align:start position:0%
one more thing if you remember from
micrograd

01:39:18.790 --> 01:39:18.800 align:start position:0%
micrograd
 

01:39:18.800 --> 01:39:21.270 align:start position:0%
micrograd
pytorch<01:39:19.360><c> actually</c><01:39:19.679><c> requires</c>

01:39:21.270 --> 01:39:21.280 align:start position:0%
pytorch actually requires
 

01:39:21.280 --> 01:39:25.109 align:start position:0%
pytorch actually requires
that<01:39:21.440><c> we</c><01:39:21.679><c> pass</c><01:39:22.000><c> in</c><01:39:22.159><c> requires</c><01:39:22.800><c> grad</c><01:39:23.280><c> is</c><01:39:23.520><c> true</c>

01:39:25.109 --> 01:39:25.119 align:start position:0%
that we pass in requires grad is true
 

01:39:25.119 --> 01:39:26.950 align:start position:0%
that we pass in requires grad is true
so<01:39:25.280><c> that</c><01:39:25.600><c> when</c><01:39:25.760><c> we</c><01:39:26.000><c> tell</c>

01:39:26.950 --> 01:39:26.960 align:start position:0%
so that when we tell
 

01:39:26.960 --> 01:39:28.470 align:start position:0%
so that when we tell
pythorge<01:39:27.360><c> that</c><01:39:27.520><c> we</c><01:39:27.600><c> are</c><01:39:27.760><c> interested</c><01:39:28.320><c> in</c>

01:39:28.470 --> 01:39:28.480 align:start position:0%
pythorge that we are interested in
 

01:39:28.480 --> 01:39:30.709 align:start position:0%
pythorge that we are interested in
calculating<01:39:29.119><c> gradients</c><01:39:29.840><c> for</c><01:39:30.080><c> this</c><01:39:30.480><c> leaf</c>

01:39:30.709 --> 01:39:30.719 align:start position:0%
calculating gradients for this leaf
 

01:39:30.719 --> 01:39:33.430 align:start position:0%
calculating gradients for this leaf
tensor<01:39:31.280><c> by</c><01:39:31.520><c> default</c><01:39:32.000><c> this</c><01:39:32.239><c> is</c><01:39:32.400><c> false</c>

01:39:33.430 --> 01:39:33.440 align:start position:0%
tensor by default this is false
 

01:39:33.440 --> 01:39:35.830 align:start position:0%
tensor by default this is false
so<01:39:33.600><c> let</c><01:39:33.760><c> me</c><01:39:33.840><c> recalculate</c><01:39:34.480><c> with</c><01:39:34.719><c> that</c>

01:39:35.830 --> 01:39:35.840 align:start position:0%
so let me recalculate with that
 

01:39:35.840 --> 01:39:37.910 align:start position:0%
so let me recalculate with that
and<01:39:36.000><c> then</c><01:39:36.400><c> set</c><01:39:36.560><c> to</c><01:39:36.800><c> none</c><01:39:37.280><c> and</c><01:39:37.520><c> lost</c><01:39:37.760><c> that</c>

01:39:37.910 --> 01:39:37.920 align:start position:0%
and then set to none and lost that
 

01:39:37.920 --> 01:39:40.629 align:start position:0%
and then set to none and lost that
backward

01:39:40.629 --> 01:39:40.639 align:start position:0%
backward
 

01:39:40.639 --> 01:39:42.310 align:start position:0%
backward
now<01:39:40.960><c> something</c><01:39:41.280><c> magical</c><01:39:41.679><c> happened</c><01:39:42.080><c> when</c>

01:39:42.310 --> 01:39:42.320 align:start position:0%
now something magical happened when
 

01:39:42.320 --> 01:39:44.390 align:start position:0%
now something magical happened when
lasted<01:39:42.639><c> backward</c><01:39:43.040><c> was</c><01:39:43.199><c> run</c>

01:39:44.390 --> 01:39:44.400 align:start position:0%
lasted backward was run
 

01:39:44.400 --> 01:39:47.189 align:start position:0%
lasted backward was run
because<01:39:44.960><c> pytorch</c><01:39:45.520><c> just</c><01:39:45.679><c> like</c><01:39:45.840><c> micrograd</c><01:39:46.960><c> when</c>

01:39:47.189 --> 01:39:47.199 align:start position:0%
because pytorch just like micrograd when
 

01:39:47.199 --> 01:39:49.030 align:start position:0%
because pytorch just like micrograd when
we<01:39:47.280><c> did</c><01:39:47.440><c> the</c><01:39:47.600><c> forward</c><01:39:47.920><c> pass</c><01:39:48.239><c> here</c>

01:39:49.030 --> 01:39:49.040 align:start position:0%
we did the forward pass here
 

01:39:49.040 --> 01:39:51.430 align:start position:0%
we did the forward pass here
it<01:39:49.360><c> keeps</c><01:39:50.000><c> track</c><01:39:50.239><c> of</c><01:39:50.400><c> all</c><01:39:50.560><c> the</c><01:39:50.719><c> operations</c>

01:39:51.430 --> 01:39:51.440 align:start position:0%
it keeps track of all the operations
 

01:39:51.440 --> 01:39:53.189 align:start position:0%
it keeps track of all the operations
under<01:39:51.600><c> the</c><01:39:51.760><c> hood</c><01:39:52.320><c> it</c><01:39:52.480><c> builds</c><01:39:52.800><c> a</c><01:39:52.880><c> full</c>

01:39:53.189 --> 01:39:53.199 align:start position:0%
under the hood it builds a full
 

01:39:53.199 --> 01:39:55.590 align:start position:0%
under the hood it builds a full
computational<01:39:53.920><c> graph</c><01:39:54.719><c> just</c><01:39:54.960><c> like</c><01:39:55.119><c> the</c><01:39:55.280><c> graphs</c>

01:39:55.590 --> 01:39:55.600 align:start position:0%
computational graph just like the graphs
 

01:39:55.600 --> 01:39:56.470 align:start position:0%
computational graph just like the graphs
we've

01:39:56.470 --> 01:39:56.480 align:start position:0%
we've
 

01:39:56.480 --> 01:39:58.790 align:start position:0%
we've
produced<01:39:56.880><c> in</c><01:39:56.960><c> micrograd</c><01:39:57.760><c> those</c><01:39:58.000><c> graphs</c><01:39:58.400><c> exist</c>

01:39:58.790 --> 01:39:58.800 align:start position:0%
produced in micrograd those graphs exist
 

01:39:58.800 --> 01:40:00.790 align:start position:0%
produced in micrograd those graphs exist
inside<01:39:59.280><c> pi</c><01:39:59.440><c> torch</c>

01:40:00.790 --> 01:40:00.800 align:start position:0%
inside pi torch
 

01:40:00.800 --> 01:40:02.709 align:start position:0%
inside pi torch
and<01:40:00.960><c> so</c><01:40:01.360><c> it</c><01:40:01.600><c> knows</c><01:40:01.840><c> all</c><01:40:02.000><c> the</c><01:40:02.080><c> dependencies</c><01:40:02.639><c> and</c>

01:40:02.709 --> 01:40:02.719 align:start position:0%
and so it knows all the dependencies and
 

01:40:02.719 --> 01:40:03.990 align:start position:0%
and so it knows all the dependencies and
all<01:40:02.800><c> the</c><01:40:02.960><c> mathematical</c><01:40:03.440><c> operations</c><01:40:03.840><c> of</c>

01:40:03.990 --> 01:40:04.000 align:start position:0%
all the mathematical operations of
 

01:40:04.000 --> 01:40:04.950 align:start position:0%
all the mathematical operations of
everything

01:40:04.950 --> 01:40:04.960 align:start position:0%
everything
 

01:40:04.960 --> 01:40:07.030 align:start position:0%
everything
and<01:40:05.119><c> when</c><01:40:05.280><c> you</c><01:40:05.360><c> then</c><01:40:05.600><c> calculate</c><01:40:06.080><c> the</c><01:40:06.159><c> loss</c>

01:40:07.030 --> 01:40:07.040 align:start position:0%
and when you then calculate the loss
 

01:40:07.040 --> 01:40:09.510 align:start position:0%
and when you then calculate the loss
we<01:40:07.199><c> can</c><01:40:07.440><c> call</c><01:40:07.679><c> a</c><01:40:07.760><c> dot</c><01:40:08.000><c> backward</c><01:40:08.480><c> on</c><01:40:08.639><c> it</c>

01:40:09.510 --> 01:40:09.520 align:start position:0%
we can call a dot backward on it
 

01:40:09.520 --> 01:40:11.669 align:start position:0%
we can call a dot backward on it
and<01:40:09.760><c> that</c><01:40:10.000><c> backward</c><01:40:10.560><c> then</c><01:40:11.040><c> fills</c><01:40:11.360><c> in</c><01:40:11.520><c> the</c>

01:40:11.669 --> 01:40:11.679 align:start position:0%
and that backward then fills in the
 

01:40:11.679 --> 01:40:13.590 align:start position:0%
and that backward then fills in the
gradients<01:40:12.719><c> of</c>

01:40:13.590 --> 01:40:13.600 align:start position:0%
gradients of
 

01:40:13.600 --> 01:40:15.189 align:start position:0%
gradients of
all<01:40:13.760><c> the</c><01:40:13.920><c> intermediates</c>

01:40:15.189 --> 01:40:15.199 align:start position:0%
all the intermediates
 

01:40:15.199 --> 01:40:18.310 align:start position:0%
all the intermediates
all<01:40:15.360><c> the</c><01:40:15.440><c> way</c><01:40:15.679><c> back</c><01:40:16.239><c> to</c><01:40:16.719><c> w's</c><01:40:17.760><c> which</c><01:40:18.000><c> are</c><01:40:18.159><c> the</c>

01:40:18.310 --> 01:40:18.320 align:start position:0%
all the way back to w's which are the
 

01:40:18.320 --> 01:40:20.390 align:start position:0%
all the way back to w's which are the
parameters<01:40:18.719><c> of</c><01:40:18.880><c> our</c><01:40:18.960><c> neural</c><01:40:19.199><c> net</c><01:40:19.920><c> so</c><01:40:20.080><c> now</c><01:40:20.239><c> we</c>

01:40:20.390 --> 01:40:20.400 align:start position:0%
parameters of our neural net so now we
 

01:40:20.400 --> 01:40:23.109 align:start position:0%
parameters of our neural net so now we
can<01:40:20.480><c> do</c><01:40:20.639><c> w</c><01:40:21.119><c> grad</c><01:40:22.320><c> and</c><01:40:22.400><c> we</c><01:40:22.560><c> see</c><01:40:22.719><c> that</c><01:40:22.880><c> it</c><01:40:22.960><c> has</c>

01:40:23.109 --> 01:40:23.119 align:start position:0%
can do w grad and we see that it has
 

01:40:23.119 --> 01:40:29.030 align:start position:0%
can do w grad and we see that it has
structure<01:40:23.840><c> there's</c><01:40:24.080><c> stuff</c><01:40:24.320><c> inside</c><01:40:24.719><c> it</c>

01:40:29.030 --> 01:40:29.040 align:start position:0%
 
 

01:40:29.040 --> 01:40:30.790 align:start position:0%
 
and<01:40:29.440><c> these</c><01:40:29.760><c> gradients</c>

01:40:30.790 --> 01:40:30.800 align:start position:0%
and these gradients
 

01:40:30.800 --> 01:40:33.350 align:start position:0%
and these gradients
every<01:40:31.040><c> single</c><01:40:31.360><c> element</c><01:40:31.760><c> here</c>

01:40:33.350 --> 01:40:33.360 align:start position:0%
every single element here
 

01:40:33.360 --> 01:40:36.790 align:start position:0%
every single element here
so<01:40:33.520><c> w</c><01:40:33.840><c> dot</c><01:40:34.080><c> shape</c><01:40:34.560><c> is</c><01:40:35.040><c> 27</c><01:40:35.520><c> by</c><01:40:35.679><c> 27</c>

01:40:36.790 --> 01:40:36.800 align:start position:0%
so w dot shape is 27 by 27
 

01:40:36.800 --> 01:40:40.629 align:start position:0%
so w dot shape is 27 by 27
w<01:40:37.199><c> grad</c><01:40:37.440><c> shape</c><01:40:37.840><c> is</c><01:40:38.000><c> the</c><01:40:38.080><c> same</c><01:40:38.639><c> 27</c><01:40:39.040><c> by</c><01:40:39.199><c> 27</c>

01:40:40.629 --> 01:40:40.639 align:start position:0%
w grad shape is the same 27 by 27
 

01:40:40.639 --> 01:40:43.030 align:start position:0%
w grad shape is the same 27 by 27
and<01:40:40.960><c> every</c><01:40:41.199><c> element</c><01:40:41.520><c> of</c><01:40:41.600><c> w</c><01:40:41.920><c> that</c><01:40:42.159><c> grad</c>

01:40:43.030 --> 01:40:43.040 align:start position:0%
and every element of w that grad
 

01:40:43.040 --> 01:40:44.390 align:start position:0%
and every element of w that grad
is<01:40:43.199><c> telling</c><01:40:43.520><c> us</c>

01:40:44.390 --> 01:40:44.400 align:start position:0%
is telling us
 

01:40:44.400 --> 01:40:47.590 align:start position:0%
is telling us
the<01:40:44.639><c> influence</c><01:40:45.199><c> of</c><01:40:45.360><c> that</c><01:40:46.159><c> weight</c><01:40:46.800><c> on</c><01:40:47.199><c> the</c><01:40:47.360><c> loss</c>

01:40:47.590 --> 01:40:47.600 align:start position:0%
the influence of that weight on the loss
 

01:40:47.600 --> 01:40:48.709 align:start position:0%
the influence of that weight on the loss
function

01:40:48.709 --> 01:40:48.719 align:start position:0%
function
 

01:40:48.719 --> 01:40:50.790 align:start position:0%
function
so<01:40:48.880><c> for</c><01:40:49.040><c> example</c><01:40:49.520><c> this</c><01:40:50.000><c> number</c><01:40:50.400><c> all</c><01:40:50.480><c> the</c><01:40:50.560><c> way</c>

01:40:50.790 --> 01:40:50.800 align:start position:0%
so for example this number all the way
 

01:40:50.800 --> 01:40:51.910 align:start position:0%
so for example this number all the way
here

01:40:51.910 --> 01:40:51.920 align:start position:0%
here
 

01:40:51.920 --> 01:40:54.310 align:start position:0%
here
if<01:40:52.159><c> this</c><01:40:52.480><c> element</c><01:40:53.040><c> the</c><01:40:53.199><c> zero</c><01:40:53.520><c> zero</c><01:40:53.760><c> element</c><01:40:54.159><c> of</c>

01:40:54.310 --> 01:40:54.320 align:start position:0%
if this element the zero zero element of
 

01:40:54.320 --> 01:40:55.510 align:start position:0%
if this element the zero zero element of
w

01:40:55.510 --> 01:40:55.520 align:start position:0%
w
 

01:40:55.520 --> 01:40:57.590 align:start position:0%
w
because<01:40:55.760><c> the</c><01:40:55.920><c> gradient</c><01:40:56.400><c> is</c><01:40:56.639><c> positive</c><01:40:57.440><c> is</c>

01:40:57.590 --> 01:40:57.600 align:start position:0%
because the gradient is positive is
 

01:40:57.600 --> 01:40:59.990 align:start position:0%
because the gradient is positive is
telling<01:40:58.000><c> us</c><01:40:58.639><c> that</c><01:40:59.040><c> this</c><01:40:59.199><c> has</c><01:40:59.440><c> a</c><01:40:59.520><c> positive</c>

01:40:59.990 --> 01:41:00.000 align:start position:0%
telling us that this has a positive
 

01:41:00.000 --> 01:41:03.030 align:start position:0%
telling us that this has a positive
influence<01:41:00.400><c> in</c><01:41:00.480><c> the</c><01:41:00.560><c> loss</c><01:41:01.280><c> slightly</c><01:41:01.760><c> nudging</c>

01:41:03.030 --> 01:41:03.040 align:start position:0%
influence in the loss slightly nudging
 

01:41:03.040 --> 01:41:04.390 align:start position:0%
influence in the loss slightly nudging
w

01:41:04.390 --> 01:41:04.400 align:start position:0%
w
 

01:41:04.400 --> 01:41:06.950 align:start position:0%
w
slightly<01:41:04.800><c> taking</c><01:41:05.119><c> w</c><01:41:05.440><c> 0</c><01:41:05.679><c> 0</c>

01:41:06.950 --> 01:41:06.960 align:start position:0%
slightly taking w 0 0
 

01:41:06.960 --> 01:41:07.750 align:start position:0%
slightly taking w 0 0
and

01:41:07.750 --> 01:41:07.760 align:start position:0%
and
 

01:41:07.760 --> 01:41:10.390 align:start position:0%
and
adding<01:41:08.080><c> a</c><01:41:08.159><c> small</c><01:41:08.639><c> h</c><01:41:09.199><c> to</c><01:41:09.440><c> it</c>

01:41:10.390 --> 01:41:10.400 align:start position:0%
adding a small h to it
 

01:41:10.400 --> 01:41:12.390 align:start position:0%
adding a small h to it
would<01:41:10.719><c> increase</c><01:41:11.280><c> the</c><01:41:11.440><c> loss</c>

01:41:12.390 --> 01:41:12.400 align:start position:0%
would increase the loss
 

01:41:12.400 --> 01:41:15.669 align:start position:0%
would increase the loss
mildly<01:41:13.199><c> because</c><01:41:13.440><c> this</c><01:41:13.679><c> gradient</c><01:41:14.159><c> is</c><01:41:14.239><c> positive</c>

01:41:15.669 --> 01:41:15.679 align:start position:0%
mildly because this gradient is positive
 

01:41:15.679 --> 01:41:16.709 align:start position:0%
mildly because this gradient is positive
some<01:41:15.840><c> of</c><01:41:15.920><c> these</c><01:41:16.000><c> gradients</c><01:41:16.400><c> are</c><01:41:16.480><c> also</c>

01:41:16.709 --> 01:41:16.719 align:start position:0%
some of these gradients are also
 

01:41:16.719 --> 01:41:18.550 align:start position:0%
some of these gradients are also
negative

01:41:18.550 --> 01:41:18.560 align:start position:0%
negative
 

01:41:18.560 --> 01:41:20.229 align:start position:0%
negative
so<01:41:18.800><c> that's</c><01:41:18.960><c> telling</c><01:41:19.280><c> us</c><01:41:19.360><c> about</c><01:41:19.600><c> the</c><01:41:19.760><c> gradient</c>

01:41:20.229 --> 01:41:20.239 align:start position:0%
so that's telling us about the gradient
 

01:41:20.239 --> 01:41:22.390 align:start position:0%
so that's telling us about the gradient
information<01:41:21.199><c> and</c><01:41:21.360><c> we</c><01:41:21.520><c> can</c><01:41:21.600><c> use</c><01:41:21.760><c> this</c><01:41:22.000><c> gradient</c>

01:41:22.390 --> 01:41:22.400 align:start position:0%
information and we can use this gradient
 

01:41:22.400 --> 01:41:25.350 align:start position:0%
information and we can use this gradient
information<01:41:23.360><c> to</c><01:41:23.840><c> update</c><01:41:24.560><c> the</c><01:41:24.719><c> weights</c><01:41:25.280><c> of</c>

01:41:25.350 --> 01:41:25.360 align:start position:0%
information to update the weights of
 

01:41:25.360 --> 01:41:27.430 align:start position:0%
information to update the weights of
this<01:41:25.600><c> neural</c><01:41:25.840><c> network</c><01:41:26.639><c> so</c><01:41:26.800><c> let's</c><01:41:26.960><c> now</c><01:41:27.119><c> do</c><01:41:27.280><c> the</c>

01:41:27.430 --> 01:41:27.440 align:start position:0%
this neural network so let's now do the
 

01:41:27.440 --> 01:41:29.350 align:start position:0%
this neural network so let's now do the
update<01:41:28.239><c> it's</c><01:41:28.400><c> going</c><01:41:28.560><c> to</c><01:41:28.639><c> be</c><01:41:28.800><c> very</c><01:41:28.960><c> similar</c><01:41:29.280><c> to</c>

01:41:29.350 --> 01:41:29.360 align:start position:0%
update it's going to be very similar to
 

01:41:29.360 --> 01:41:32.229 align:start position:0%
update it's going to be very similar to
what<01:41:29.440><c> we</c><01:41:29.600><c> had</c><01:41:29.679><c> in</c><01:41:29.760><c> micrograd</c><01:41:30.719><c> we</c><01:41:30.960><c> need</c><01:41:31.280><c> no</c><01:41:31.840><c> loop</c>

01:41:32.229 --> 01:41:32.239 align:start position:0%
what we had in micrograd we need no loop
 

01:41:32.239 --> 01:41:33.750 align:start position:0%
what we had in micrograd we need no loop
over<01:41:32.560><c> all</c><01:41:32.639><c> the</c><01:41:32.800><c> parameters</c><01:41:33.280><c> because</c><01:41:33.440><c> we</c><01:41:33.600><c> only</c>

01:41:33.750 --> 01:41:33.760 align:start position:0%
over all the parameters because we only
 

01:41:33.760 --> 01:41:36.070 align:start position:0%
over all the parameters because we only
have<01:41:33.840><c> one</c><01:41:34.080><c> parameter</c><01:41:35.040><c> uh</c><01:41:35.280><c> tensor</c><01:41:35.679><c> and</c><01:41:35.760><c> that</c><01:41:36.000><c> is</c>

01:41:36.070 --> 01:41:36.080 align:start position:0%
have one parameter uh tensor and that is
 

01:41:36.080 --> 01:41:37.030 align:start position:0%
have one parameter uh tensor and that is
w

01:41:37.030 --> 01:41:37.040 align:start position:0%
w
 

01:41:37.040 --> 01:41:40.950 align:start position:0%
w
so<01:41:37.199><c> we</c><01:41:37.360><c> simply</c><01:41:37.679><c> do</c><01:41:38.320><c> w</c><01:41:38.719><c> dot</c><01:41:38.960><c> data</c><01:41:39.679><c> plus</c><01:41:39.920><c> equals</c>

01:41:40.950 --> 01:41:40.960 align:start position:0%
so we simply do w dot data plus equals
 

01:41:40.960 --> 01:41:42.149 align:start position:0%
so we simply do w dot data plus equals
uh<01:41:41.280><c> the</c>

01:41:42.149 --> 01:41:42.159 align:start position:0%
uh the
 

01:41:42.159 --> 01:41:43.830 align:start position:0%
uh the
we<01:41:42.239><c> can</c><01:41:42.400><c> actually</c><01:41:42.639><c> copy</c><01:41:42.960><c> this</c><01:41:43.119><c> almost</c><01:41:43.440><c> exactly</c>

01:41:43.830 --> 01:41:43.840 align:start position:0%
we can actually copy this almost exactly
 

01:41:43.840 --> 01:41:49.350 align:start position:0%
we can actually copy this almost exactly
negative<01:41:44.080><c> 0.1</c><01:41:44.880><c> times</c><01:41:46.000><c> w</c><01:41:46.320><c> dot</c><01:41:46.560><c> grad</c>

01:41:49.350 --> 01:41:49.360 align:start position:0%
 
 

01:41:49.360 --> 01:41:52.229 align:start position:0%
 
and<01:41:49.760><c> that</c><01:41:49.920><c> would</c><01:41:50.080><c> be</c><01:41:50.239><c> the</c><01:41:50.639><c> update</c><01:41:51.440><c> to</c><01:41:51.679><c> the</c>

01:41:52.229 --> 01:41:52.239 align:start position:0%
and that would be the update to the
 

01:41:52.239 --> 01:41:54.470 align:start position:0%
and that would be the update to the
tensor

01:41:54.470 --> 01:41:54.480 align:start position:0%
tensor
 

01:41:54.480 --> 01:41:55.910 align:start position:0%
tensor
so<01:41:54.639><c> that</c><01:41:54.880><c> updates</c>

01:41:55.910 --> 01:41:55.920 align:start position:0%
so that updates
 

01:41:55.920 --> 01:41:58.629 align:start position:0%
so that updates
the<01:41:56.080><c> tensor</c>

01:41:58.629 --> 01:41:58.639 align:start position:0%
 
 

01:41:58.639 --> 01:41:59.510 align:start position:0%
 
and

01:41:59.510 --> 01:41:59.520 align:start position:0%
and
 

01:41:59.520 --> 01:42:01.109 align:start position:0%
and
because<01:41:59.840><c> the</c><01:42:00.000><c> tensor</c><01:42:00.320><c> is</c><01:42:00.400><c> updated</c><01:42:00.800><c> we</c><01:42:00.960><c> would</c>

01:42:01.109 --> 01:42:01.119 align:start position:0%
because the tensor is updated we would
 

01:42:01.119 --> 01:42:04.310 align:start position:0%
because the tensor is updated we would
expect<01:42:01.520><c> that</c><01:42:01.760><c> now</c><01:42:02.000><c> the</c><01:42:02.159><c> loss</c><01:42:02.719><c> should</c><01:42:02.960><c> decrease</c>

01:42:04.310 --> 01:42:04.320 align:start position:0%
expect that now the loss should decrease
 

01:42:04.320 --> 01:42:05.350 align:start position:0%
expect that now the loss should decrease
so

01:42:05.350 --> 01:42:05.360 align:start position:0%
so
 

01:42:05.360 --> 01:42:09.430 align:start position:0%
so
here<01:42:05.920><c> if</c><01:42:06.080><c> i</c><01:42:06.239><c> print</c><01:42:07.040><c> loss</c>

01:42:09.430 --> 01:42:09.440 align:start position:0%
 
 

01:42:09.440 --> 01:42:11.109 align:start position:0%
 
that<01:42:09.679><c> item</c>

01:42:11.109 --> 01:42:11.119 align:start position:0%
that item
 

01:42:11.119 --> 01:42:13.109 align:start position:0%
that item
it<01:42:11.199><c> was</c><01:42:11.360><c> 3.76</c><01:42:12.239><c> right</c>

01:42:13.109 --> 01:42:13.119 align:start position:0%
it was 3.76 right
 

01:42:13.119 --> 01:42:16.470 align:start position:0%
it was 3.76 right
so<01:42:13.360><c> we've</c><01:42:13.679><c> updated</c><01:42:14.080><c> the</c><01:42:14.239><c> w</c><01:42:15.119><c> here</c><01:42:15.920><c> so</c><01:42:16.159><c> if</c><01:42:16.320><c> i</c>

01:42:16.470 --> 01:42:16.480 align:start position:0%
so we've updated the w here so if i
 

01:42:16.480 --> 01:42:18.950 align:start position:0%
so we've updated the w here so if i
recalculate<01:42:17.119><c> forward</c><01:42:17.440><c> pass</c>

01:42:18.950 --> 01:42:18.960 align:start position:0%
recalculate forward pass
 

01:42:18.960 --> 01:42:21.590 align:start position:0%
recalculate forward pass
loss<01:42:19.360><c> now</c><01:42:19.840><c> should</c><01:42:20.000><c> be</c><01:42:20.159><c> slightly</c><01:42:20.639><c> lower</c><01:42:21.360><c> so</c>

01:42:21.590 --> 01:42:21.600 align:start position:0%
loss now should be slightly lower so
 

01:42:21.600 --> 01:42:23.510 align:start position:0%
loss now should be slightly lower so
3.76<01:42:22.480><c> goes</c><01:42:22.719><c> to</c>

01:42:23.510 --> 01:42:23.520 align:start position:0%
3.76 goes to
 

01:42:23.520 --> 01:42:25.669 align:start position:0%
3.76 goes to
3.74

01:42:25.669 --> 01:42:25.679 align:start position:0%
3.74
 

01:42:25.679 --> 01:42:26.709 align:start position:0%
3.74
and<01:42:25.920><c> then</c>

01:42:26.709 --> 01:42:26.719 align:start position:0%
and then
 

01:42:26.719 --> 01:42:29.590 align:start position:0%
and then
we<01:42:26.880><c> can</c><01:42:27.119><c> again</c><01:42:27.920><c> set</c><01:42:28.080><c> to</c><01:42:28.480><c> set</c><01:42:28.719><c> grad</c><01:42:28.880><c> to</c><01:42:29.040><c> none</c><01:42:29.440><c> and</c>

01:42:29.590 --> 01:42:29.600 align:start position:0%
we can again set to set grad to none and
 

01:42:29.600 --> 01:42:30.790 align:start position:0%
we can again set to set grad to none and
backward

01:42:30.790 --> 01:42:30.800 align:start position:0%
backward
 

01:42:30.800 --> 01:42:32.470 align:start position:0%
backward
update

01:42:32.470 --> 01:42:32.480 align:start position:0%
update
 

01:42:32.480 --> 01:42:34.790 align:start position:0%
update
and<01:42:32.639><c> now</c><01:42:32.880><c> the</c><01:42:33.040><c> parameters</c><01:42:33.440><c> changed</c><01:42:33.760><c> again</c>

01:42:34.790 --> 01:42:34.800 align:start position:0%
and now the parameters changed again
 

01:42:34.800 --> 01:42:37.189 align:start position:0%
and now the parameters changed again
so<01:42:35.040><c> if</c><01:42:35.119><c> we</c><01:42:35.280><c> recalculate</c><01:42:35.760><c> the</c><01:42:35.840><c> forward</c><01:42:36.159><c> pass</c><01:42:36.960><c> we</c>

01:42:37.189 --> 01:42:37.199 align:start position:0%
so if we recalculate the forward pass we
 

01:42:37.199 --> 01:42:42.149 align:start position:0%
so if we recalculate the forward pass we
expect<01:42:37.600><c> a</c><01:42:37.679><c> lower</c><01:42:38.000><c> loss</c><01:42:38.239><c> again</c><01:42:38.560><c> 3.72</c>

01:42:42.149 --> 01:42:42.159 align:start position:0%
 
 

01:42:42.159 --> 01:42:44.470 align:start position:0%
 
okay<01:42:42.719><c> and</c><01:42:42.880><c> this</c><01:42:43.119><c> is</c><01:42:43.199><c> again</c><01:42:43.440><c> doing</c><01:42:43.679><c> the</c><01:42:44.320><c> we're</c>

01:42:44.470 --> 01:42:44.480 align:start position:0%
okay and this is again doing the we're
 

01:42:44.480 --> 01:42:48.470 align:start position:0%
okay and this is again doing the we're
now<01:42:44.639><c> doing</c><01:42:44.800><c> gradient</c><01:42:45.199><c> descent</c>

01:42:48.470 --> 01:42:48.480 align:start position:0%
 
 

01:42:48.480 --> 01:42:50.629 align:start position:0%
 
and<01:42:48.719><c> when</c><01:42:48.880><c> we</c><01:42:49.040><c> achieve</c><01:42:49.360><c> a</c><01:42:49.440><c> low</c><01:42:49.679><c> loss</c><01:42:50.239><c> that</c><01:42:50.400><c> will</c>

01:42:50.629 --> 01:42:50.639 align:start position:0%
and when we achieve a low loss that will
 

01:42:50.639 --> 01:42:52.629 align:start position:0%
and when we achieve a low loss that will
mean<01:42:50.880><c> that</c><01:42:51.040><c> the</c><01:42:51.199><c> network</c><01:42:51.840><c> is</c><01:42:52.080><c> assigning</c><01:42:52.480><c> high</c>

01:42:52.629 --> 01:42:52.639 align:start position:0%
mean that the network is assigning high
 

01:42:52.639 --> 01:42:54.390 align:start position:0%
mean that the network is assigning high
probabilities<01:42:53.600><c> to</c><01:42:53.760><c> the</c><01:42:53.840><c> correctness</c>

01:42:54.390 --> 01:42:54.400 align:start position:0%
probabilities to the correctness
 

01:42:54.400 --> 01:42:56.070 align:start position:0%
probabilities to the correctness
characters<01:42:55.119><c> okay</c><01:42:55.360><c> so</c><01:42:55.520><c> i</c><01:42:55.679><c> rearranged</c>

01:42:56.070 --> 01:42:56.080 align:start position:0%
characters okay so i rearranged
 

01:42:56.080 --> 01:42:57.910 align:start position:0%
characters okay so i rearranged
everything<01:42:56.400><c> and</c><01:42:56.560><c> i</c><01:42:56.639><c> put</c><01:42:56.800><c> it</c><01:42:56.960><c> all</c><01:42:57.040><c> together</c>

01:42:57.910 --> 01:42:57.920 align:start position:0%
everything and i put it all together
 

01:42:57.920 --> 01:42:59.430 align:start position:0%
everything and i put it all together
from<01:42:58.159><c> scratch</c>

01:42:59.430 --> 01:42:59.440 align:start position:0%
from scratch
 

01:42:59.440 --> 01:43:01.350 align:start position:0%
from scratch
so<01:42:59.600><c> here</c><01:43:00.080><c> is</c><01:43:00.239><c> where</c><01:43:00.480><c> we</c><01:43:00.639><c> construct</c><01:43:01.040><c> our</c><01:43:01.119><c> data</c>

01:43:01.350 --> 01:43:01.360 align:start position:0%
so here is where we construct our data
 

01:43:01.360 --> 01:43:03.189 align:start position:0%
so here is where we construct our data
set<01:43:01.600><c> of</c><01:43:01.679><c> bigrams</c>

01:43:03.189 --> 01:43:03.199 align:start position:0%
set of bigrams
 

01:43:03.199 --> 01:43:04.709 align:start position:0%
set of bigrams
you<01:43:03.360><c> see</c><01:43:03.520><c> that</c><01:43:03.679><c> we</c><01:43:03.760><c> are</c><01:43:03.920><c> still</c><01:43:04.080><c> iterating</c><01:43:04.480><c> only</c>

01:43:04.709 --> 01:43:04.719 align:start position:0%
you see that we are still iterating only
 

01:43:04.719 --> 01:43:06.870 align:start position:0%
you see that we are still iterating only
on<01:43:04.960><c> the</c><01:43:05.040><c> first</c><01:43:05.360><c> word</c><01:43:05.679><c> emma</c>

01:43:06.870 --> 01:43:06.880 align:start position:0%
on the first word emma
 

01:43:06.880 --> 01:43:09.270 align:start position:0%
on the first word emma
i'm<01:43:07.040><c> going</c><01:43:07.199><c> to</c><01:43:07.520><c> change</c><01:43:07.760><c> that</c><01:43:08.000><c> in</c><01:43:08.080><c> a</c><01:43:08.159><c> second</c><01:43:09.040><c> i</c>

01:43:09.270 --> 01:43:09.280 align:start position:0%
i'm going to change that in a second i
 

01:43:09.280 --> 01:43:11.350 align:start position:0%
i'm going to change that in a second i
added<01:43:09.760><c> a</c><01:43:09.920><c> number</c><01:43:10.320><c> that</c><01:43:10.560><c> counts</c><01:43:10.880><c> the</c><01:43:11.040><c> number</c><01:43:11.199><c> of</c>

01:43:11.350 --> 01:43:11.360 align:start position:0%
added a number that counts the number of
 

01:43:11.360 --> 01:43:14.550 align:start position:0%
added a number that counts the number of
elements<01:43:12.159><c> in</c><01:43:12.719><c> x's</c><01:43:13.440><c> so</c><01:43:13.600><c> that</c><01:43:13.760><c> we</c><01:43:14.000><c> explicitly</c>

01:43:14.550 --> 01:43:14.560 align:start position:0%
elements in x's so that we explicitly
 

01:43:14.560 --> 01:43:16.870 align:start position:0%
elements in x's so that we explicitly
see<01:43:14.719><c> that</c><01:43:14.960><c> number</c><01:43:15.119><c> of</c><01:43:15.199><c> examples</c><01:43:15.600><c> is</c><01:43:15.840><c> five</c>

01:43:16.870 --> 01:43:16.880 align:start position:0%
see that number of examples is five
 

01:43:16.880 --> 01:43:17.990 align:start position:0%
see that number of examples is five
because<01:43:17.119><c> currently</c><01:43:17.440><c> we're</c><01:43:17.679><c> just</c><01:43:17.760><c> working</c>

01:43:17.990 --> 01:43:18.000 align:start position:0%
because currently we're just working
 

01:43:18.000 --> 01:43:19.430 align:start position:0%
because currently we're just working
with<01:43:18.159><c> emma</c><01:43:18.480><c> and</c><01:43:18.560><c> there's</c><01:43:18.800><c> five</c><01:43:18.960><c> backgrounds</c>

01:43:19.430 --> 01:43:19.440 align:start position:0%
with emma and there's five backgrounds
 

01:43:19.440 --> 01:43:20.550 align:start position:0%
with emma and there's five backgrounds
there

01:43:20.550 --> 01:43:20.560 align:start position:0%
there
 

01:43:20.560 --> 01:43:22.550 align:start position:0%
there
and<01:43:20.800><c> here</c><01:43:20.960><c> i</c><01:43:21.119><c> added</c><01:43:21.440><c> a</c><01:43:21.520><c> loop</c><01:43:21.920><c> of</c><01:43:22.080><c> exactly</c><01:43:22.400><c> what</c>

01:43:22.550 --> 01:43:22.560 align:start position:0%
and here i added a loop of exactly what
 

01:43:22.560 --> 01:43:25.270 align:start position:0%
and here i added a loop of exactly what
we<01:43:22.639><c> had</c><01:43:22.800><c> before</c><01:43:23.679><c> so</c><01:43:23.920><c> we</c><01:43:24.080><c> had</c><01:43:24.320><c> 10</c><01:43:24.560><c> iterations</c><01:43:25.199><c> of</c>

01:43:25.270 --> 01:43:25.280 align:start position:0%
we had before so we had 10 iterations of
 

01:43:25.280 --> 01:43:27.430 align:start position:0%
we had before so we had 10 iterations of
grainy<01:43:25.679><c> descent</c><01:43:26.159><c> of</c><01:43:26.400><c> forward</c><01:43:26.719><c> pass</c><01:43:27.119><c> backward</c>

01:43:27.430 --> 01:43:27.440 align:start position:0%
grainy descent of forward pass backward
 

01:43:27.440 --> 01:43:28.870 align:start position:0%
grainy descent of forward pass backward
pass<01:43:27.679><c> and</c><01:43:27.840><c> an</c><01:43:28.000><c> update</c>

01:43:28.870 --> 01:43:28.880 align:start position:0%
pass and an update
 

01:43:28.880 --> 01:43:30.310 align:start position:0%
pass and an update
and<01:43:29.040><c> so</c><01:43:29.280><c> running</c><01:43:29.520><c> these</c><01:43:29.679><c> two</c><01:43:29.920><c> cells</c>

01:43:30.310 --> 01:43:30.320 align:start position:0%
and so running these two cells
 

01:43:30.320 --> 01:43:32.790 align:start position:0%
and so running these two cells
initialization<01:43:31.119><c> and</c><01:43:31.280><c> gradient</c><01:43:31.679><c> descent</c>

01:43:32.790 --> 01:43:32.800 align:start position:0%
initialization and gradient descent
 

01:43:32.800 --> 01:43:35.350 align:start position:0%
initialization and gradient descent
gives<01:43:33.040><c> us</c><01:43:33.760><c> some</c><01:43:34.080><c> improvement</c>

01:43:35.350 --> 01:43:35.360 align:start position:0%
gives us some improvement
 

01:43:35.360 --> 01:43:36.149 align:start position:0%
gives us some improvement
on

01:43:36.149 --> 01:43:36.159 align:start position:0%
on
 

01:43:36.159 --> 01:43:38.149 align:start position:0%
on
the<01:43:36.239><c> loss</c><01:43:36.480><c> function</c>

01:43:38.149 --> 01:43:38.159 align:start position:0%
the loss function
 

01:43:38.159 --> 01:43:41.669 align:start position:0%
the loss function
but<01:43:38.400><c> now</c><01:43:38.880><c> i</c><01:43:39.040><c> want</c><01:43:39.199><c> to</c><01:43:39.280><c> use</c><01:43:39.520><c> all</c><01:43:39.600><c> the</c><01:43:39.760><c> words</c>

01:43:41.669 --> 01:43:41.679 align:start position:0%
but now i want to use all the words
 

01:43:41.679 --> 01:43:45.350 align:start position:0%
but now i want to use all the words
and<01:43:42.000><c> there's</c><01:43:42.239><c> not</c><01:43:42.560><c> 5</c><01:43:42.960><c> but</c><01:43:43.280><c> 228</c><01:43:44.239><c> 000</c><01:43:44.880><c> bigrams</c>

01:43:45.350 --> 01:43:45.360 align:start position:0%
and there's not 5 but 228 000 bigrams
 

01:43:45.360 --> 01:43:46.629 align:start position:0%
and there's not 5 but 228 000 bigrams
now

01:43:46.629 --> 01:43:46.639 align:start position:0%
now
 

01:43:46.639 --> 01:43:48.229 align:start position:0%
now
however<01:43:47.360><c> this</c><01:43:47.520><c> should</c><01:43:47.679><c> require</c><01:43:48.080><c> no</c>

01:43:48.229 --> 01:43:48.239 align:start position:0%
however this should require no
 

01:43:48.239 --> 01:43:49.750 align:start position:0%
however this should require no
modification<01:43:48.800><c> whatsoever</c><01:43:49.440><c> everything</c>

01:43:49.750 --> 01:43:49.760 align:start position:0%
modification whatsoever everything
 

01:43:49.760 --> 01:43:51.669 align:start position:0%
modification whatsoever everything
should<01:43:49.920><c> just</c><01:43:50.159><c> run</c><01:43:50.719><c> because</c><01:43:51.040><c> all</c><01:43:51.199><c> the</c><01:43:51.280><c> code</c><01:43:51.520><c> we</c>

01:43:51.669 --> 01:43:51.679 align:start position:0%
should just run because all the code we
 

01:43:51.679 --> 01:43:53.030 align:start position:0%
should just run because all the code we
wrote<01:43:52.000><c> doesn't</c><01:43:52.239><c> care</c><01:43:52.480><c> if</c><01:43:52.560><c> there's</c><01:43:52.800><c> five</c>

01:43:53.030 --> 01:43:53.040 align:start position:0%
wrote doesn't care if there's five
 

01:43:53.040 --> 01:43:56.149 align:start position:0%
wrote doesn't care if there's five
migrants<01:43:53.840><c> or</c><01:43:54.000><c> 228</c><01:43:54.800><c> 000</c><01:43:54.960><c> bigrams</c><01:43:55.760><c> and</c><01:43:55.920><c> with</c>

01:43:56.149 --> 01:43:56.159 align:start position:0%
migrants or 228 000 bigrams and with
 

01:43:56.159 --> 01:43:58.390 align:start position:0%
migrants or 228 000 bigrams and with
everything<01:43:56.400><c> we</c><01:43:56.560><c> should</c><01:43:56.719><c> just</c><01:43:56.880><c> work</c><01:43:57.280><c> so</c>

01:43:58.390 --> 01:43:58.400 align:start position:0%
everything we should just work so
 

01:43:58.400 --> 01:44:00.310 align:start position:0%
everything we should just work so
you<01:43:58.560><c> see</c><01:43:58.719><c> that</c><01:43:58.880><c> this</c><01:43:59.040><c> will</c><01:43:59.199><c> just</c><01:43:59.440><c> run</c>

01:44:00.310 --> 01:44:00.320 align:start position:0%
you see that this will just run
 

01:44:00.320 --> 01:44:01.669 align:start position:0%
you see that this will just run
but<01:44:00.480><c> now</c><01:44:00.639><c> we</c><01:44:00.800><c> are</c><01:44:00.880><c> optimizing</c><01:44:01.360><c> over</c><01:44:01.600><c> the</c>

01:44:01.669 --> 01:44:01.679 align:start position:0%
but now we are optimizing over the
 

01:44:01.679 --> 01:44:04.629 align:start position:0%
but now we are optimizing over the
entire<01:44:02.080><c> training</c><01:44:02.400><c> set</c><01:44:02.719><c> of</c><01:44:02.960><c> all</c><01:44:03.119><c> the</c><01:44:03.199><c> bigrams</c>

01:44:04.629 --> 01:44:04.639 align:start position:0%
entire training set of all the bigrams
 

01:44:04.639 --> 01:44:06.470 align:start position:0%
entire training set of all the bigrams
and<01:44:04.800><c> you</c><01:44:04.960><c> see</c><01:44:05.119><c> now</c><01:44:05.360><c> that</c><01:44:05.520><c> we</c><01:44:05.679><c> are</c><01:44:05.920><c> decreasing</c>

01:44:06.470 --> 01:44:06.480 align:start position:0%
and you see now that we are decreasing
 

01:44:06.480 --> 01:44:08.149 align:start position:0%
and you see now that we are decreasing
very<01:44:06.719><c> slightly</c><01:44:07.440><c> so</c><01:44:07.600><c> actually</c><01:44:07.920><c> we</c><01:44:08.000><c> can</c>

01:44:08.149 --> 01:44:08.159 align:start position:0%
very slightly so actually we can
 

01:44:08.159 --> 01:44:12.310 align:start position:0%
very slightly so actually we can
probably<01:44:08.480><c> afford</c><01:44:08.800><c> a</c><01:44:08.960><c> larger</c><01:44:09.360><c> learning</c><01:44:09.679><c> rate</c>

01:44:12.310 --> 01:44:12.320 align:start position:0%
 
 

01:44:12.320 --> 01:44:13.990 align:start position:0%
 
and<01:44:12.480><c> probably</c><01:44:12.800><c> for</c><01:44:13.040><c> even</c><01:44:13.199><c> larger</c><01:44:13.679><c> learning</c>

01:44:13.990 --> 01:44:14.000 align:start position:0%
and probably for even larger learning
 

01:44:14.000 --> 01:44:20.629 align:start position:0%
and probably for even larger learning
rate

01:44:20.629 --> 01:44:20.639 align:start position:0%
 
 

01:44:20.639 --> 01:44:22.550 align:start position:0%
 
even<01:44:20.960><c> 50</c><01:44:21.280><c> seems</c><01:44:21.520><c> to</c><01:44:21.600><c> work</c><01:44:21.840><c> on</c><01:44:21.920><c> this</c><01:44:22.080><c> very</c><01:44:22.320><c> very</c>

01:44:22.550 --> 01:44:22.560 align:start position:0%
even 50 seems to work on this very very
 

01:44:22.560 --> 01:44:24.310 align:start position:0%
even 50 seems to work on this very very
simple<01:44:22.880><c> example</c><01:44:23.440><c> right</c><01:44:23.840><c> so</c><01:44:24.000><c> let</c><01:44:24.159><c> me</c>

01:44:24.310 --> 01:44:24.320 align:start position:0%
simple example right so let me
 

01:44:24.320 --> 01:44:26.870 align:start position:0%
simple example right so let me
re-initialize<01:44:25.520><c> and</c><01:44:25.679><c> let's</c><01:44:26.000><c> run</c><01:44:26.480><c> 100</c>

01:44:26.870 --> 01:44:26.880 align:start position:0%
re-initialize and let's run 100
 

01:44:26.880 --> 01:44:29.270 align:start position:0%
re-initialize and let's run 100
iterations

01:44:29.270 --> 01:44:29.280 align:start position:0%
iterations
 

01:44:29.280 --> 01:44:32.870 align:start position:0%
iterations
see<01:44:29.440><c> what</c><01:44:29.600><c> happens</c>

01:44:32.870 --> 01:44:32.880 align:start position:0%
 
 

01:44:32.880 --> 01:44:36.229 align:start position:0%
 
okay

01:44:36.229 --> 01:44:36.239 align:start position:0%
 
 

01:44:36.239 --> 01:44:39.030 align:start position:0%
 
we<01:44:36.480><c> seem</c><01:44:36.719><c> to</c><01:44:36.880><c> be</c>

01:44:39.030 --> 01:44:39.040 align:start position:0%
we seem to be
 

01:44:39.040 --> 01:44:40.470 align:start position:0%
we seem to be
coming<01:44:39.360><c> up</c><01:44:39.440><c> to</c><01:44:39.520><c> some</c><01:44:39.760><c> pretty</c><01:44:39.920><c> good</c><01:44:40.080><c> losses</c>

01:44:40.470 --> 01:44:40.480 align:start position:0%
coming up to some pretty good losses
 

01:44:40.480 --> 01:44:42.709 align:start position:0%
coming up to some pretty good losses
here<01:44:41.199><c> 2.47</c>

01:44:42.709 --> 01:44:42.719 align:start position:0%
here 2.47
 

01:44:42.719 --> 01:44:44.470 align:start position:0%
here 2.47
let<01:44:42.880><c> me</c><01:44:43.040><c> run</c><01:44:43.199><c> 100</c><01:44:43.679><c> more</c>

01:44:44.470 --> 01:44:44.480 align:start position:0%
let me run 100 more
 

01:44:44.480 --> 01:44:46.070 align:start position:0%
let me run 100 more
what<01:44:44.719><c> is</c><01:44:44.880><c> the</c><01:44:44.960><c> number</c><01:44:45.199><c> that</c><01:44:45.360><c> we</c><01:44:45.520><c> expect</c><01:44:45.840><c> by</c><01:44:46.000><c> the</c>

01:44:46.070 --> 01:44:46.080 align:start position:0%
what is the number that we expect by the
 

01:44:46.080 --> 01:44:47.990 align:start position:0%
what is the number that we expect by the
way<01:44:46.239><c> in</c><01:44:46.400><c> the</c><01:44:46.480><c> loss</c><01:44:47.199><c> we</c><01:44:47.360><c> expect</c><01:44:47.679><c> to</c><01:44:47.760><c> get</c>

01:44:47.990 --> 01:44:48.000 align:start position:0%
way in the loss we expect to get
 

01:44:48.000 --> 01:44:50.229 align:start position:0%
way in the loss we expect to get
something<01:44:48.320><c> around</c><01:44:49.119><c> what</c><01:44:49.280><c> we</c><01:44:49.360><c> had</c><01:44:49.600><c> originally</c>

01:44:50.229 --> 01:44:50.239 align:start position:0%
something around what we had originally
 

01:44:50.239 --> 01:44:51.990 align:start position:0%
something around what we had originally
actually

01:44:51.990 --> 01:44:52.000 align:start position:0%
actually
 

01:44:52.000 --> 01:44:53.510 align:start position:0%
actually
so<01:44:52.159><c> all</c><01:44:52.320><c> the</c><01:44:52.400><c> way</c><01:44:52.560><c> back</c><01:44:52.800><c> if</c><01:44:52.960><c> you</c><01:44:53.040><c> remember</c><01:44:53.440><c> in</c>

01:44:53.510 --> 01:44:53.520 align:start position:0%
so all the way back if you remember in
 

01:44:53.520 --> 01:44:55.830 align:start position:0%
so all the way back if you remember in
the<01:44:53.600><c> beginning</c><01:44:53.920><c> of</c><01:44:54.000><c> this</c><01:44:54.159><c> video</c><01:44:54.880><c> when</c><01:44:55.119><c> we</c>

01:44:55.830 --> 01:44:55.840 align:start position:0%
the beginning of this video when we
 

01:44:55.840 --> 01:44:58.870 align:start position:0%
the beginning of this video when we
optimized<01:44:56.960><c> uh</c><01:44:57.360><c> just</c><01:44:57.600><c> by</c><01:44:57.760><c> counting</c>

01:44:58.870 --> 01:44:58.880 align:start position:0%
optimized uh just by counting
 

01:44:58.880 --> 01:45:01.510 align:start position:0%
optimized uh just by counting
our<01:44:59.119><c> loss</c><01:44:59.440><c> was</c><01:44:59.600><c> roughly</c><01:45:00.000><c> 2.47</c>

01:45:01.510 --> 01:45:01.520 align:start position:0%
our loss was roughly 2.47
 

01:45:01.520 --> 01:45:03.430 align:start position:0%
our loss was roughly 2.47
after<01:45:01.840><c> we</c><01:45:02.000><c> had</c><01:45:02.159><c> it</c><01:45:02.239><c> smoothing</c>

01:45:03.430 --> 01:45:03.440 align:start position:0%
after we had it smoothing
 

01:45:03.440 --> 01:45:06.550 align:start position:0%
after we had it smoothing
but<01:45:03.600><c> before</c><01:45:03.920><c> smoothing</c><01:45:04.320><c> we</c><01:45:04.400><c> had</c><01:45:04.560><c> roughly</c><01:45:04.880><c> 2.45</c>

01:45:06.550 --> 01:45:06.560 align:start position:0%
but before smoothing we had roughly 2.45
 

01:45:06.560 --> 01:45:08.310 align:start position:0%
but before smoothing we had roughly 2.45
likelihood

01:45:08.310 --> 01:45:08.320 align:start position:0%
likelihood
 

01:45:08.320 --> 01:45:09.669 align:start position:0%
likelihood
sorry<01:45:08.639><c> loss</c>

01:45:09.669 --> 01:45:09.679 align:start position:0%
sorry loss
 

01:45:09.679 --> 01:45:10.950 align:start position:0%
sorry loss
and<01:45:09.840><c> so</c><01:45:10.080><c> that's</c><01:45:10.320><c> actually</c><01:45:10.560><c> roughly</c><01:45:10.880><c> the</c>

01:45:10.950 --> 01:45:10.960 align:start position:0%
and so that's actually roughly the
 

01:45:10.960 --> 01:45:13.750 align:start position:0%
and so that's actually roughly the
vicinity<01:45:11.520><c> of</c><01:45:11.679><c> what</c><01:45:11.920><c> we</c><01:45:12.080><c> expect</c><01:45:12.560><c> to</c><01:45:12.960><c> achieve</c>

01:45:13.750 --> 01:45:13.760 align:start position:0%
vicinity of what we expect to achieve
 

01:45:13.760 --> 01:45:15.830 align:start position:0%
vicinity of what we expect to achieve
but<01:45:13.920><c> before</c><01:45:14.239><c> we</c><01:45:14.400><c> achieved</c><01:45:14.800><c> it</c><01:45:14.880><c> by</c><01:45:15.119><c> counting</c>

01:45:15.830 --> 01:45:15.840 align:start position:0%
but before we achieved it by counting
 

01:45:15.840 --> 01:45:17.830 align:start position:0%
but before we achieved it by counting
and<01:45:16.000><c> here</c><01:45:16.239><c> we</c><01:45:16.400><c> are</c><01:45:16.560><c> achieving</c><01:45:17.040><c> the</c><01:45:17.440><c> roughly</c>

01:45:17.830 --> 01:45:17.840 align:start position:0%
and here we are achieving the roughly
 

01:45:17.840 --> 01:45:19.669 align:start position:0%
and here we are achieving the roughly
the<01:45:17.920><c> same</c><01:45:18.159><c> result</c><01:45:18.719><c> but</c><01:45:18.880><c> with</c><01:45:19.040><c> gradient</c><01:45:19.440><c> based</c>

01:45:19.669 --> 01:45:19.679 align:start position:0%
the same result but with gradient based
 

01:45:19.679 --> 01:45:20.950 align:start position:0%
the same result but with gradient based
optimization

01:45:20.950 --> 01:45:20.960 align:start position:0%
optimization
 

01:45:20.960 --> 01:45:23.910 align:start position:0%
optimization
so<01:45:21.119><c> we</c><01:45:21.280><c> come</c><01:45:21.440><c> to</c><01:45:21.679><c> about</c><01:45:22.080><c> 2.4</c>

01:45:23.910 --> 01:45:23.920 align:start position:0%
so we come to about 2.4
 

01:45:23.920 --> 01:45:26.229 align:start position:0%
so we come to about 2.4
6<01:45:24.159><c> 2.45</c><01:45:25.119><c> etc</c>

01:45:26.229 --> 01:45:26.239 align:start position:0%
6 2.45 etc
 

01:45:26.239 --> 01:45:27.109 align:start position:0%
6 2.45 etc
and<01:45:26.320><c> that</c><01:45:26.480><c> makes</c><01:45:26.719><c> sense</c><01:45:26.880><c> because</c>

01:45:27.109 --> 01:45:27.119 align:start position:0%
and that makes sense because
 

01:45:27.119 --> 01:45:28.709 align:start position:0%
and that makes sense because
fundamentally<01:45:27.760><c> we're</c><01:45:27.920><c> not</c><01:45:28.080><c> taking</c><01:45:28.480><c> any</c>

01:45:28.709 --> 01:45:28.719 align:start position:0%
fundamentally we're not taking any
 

01:45:28.719 --> 01:45:30.470 align:start position:0%
fundamentally we're not taking any
additional<01:45:29.119><c> information</c><01:45:29.840><c> we're</c><01:45:30.080><c> still</c><01:45:30.239><c> just</c>

01:45:30.470 --> 01:45:30.480 align:start position:0%
additional information we're still just
 

01:45:30.480 --> 01:45:31.910 align:start position:0%
additional information we're still just
taking<01:45:30.719><c> in</c><01:45:30.880><c> the</c><01:45:30.960><c> previous</c><01:45:31.360><c> character</c><01:45:31.760><c> and</c>

01:45:31.910 --> 01:45:31.920 align:start position:0%
taking in the previous character and
 

01:45:31.920 --> 01:45:33.830 align:start position:0%
taking in the previous character and
trying<01:45:32.080><c> to</c><01:45:32.239><c> predict</c><01:45:32.480><c> the</c><01:45:32.639><c> next</c><01:45:32.880><c> one</c><01:45:33.520><c> but</c>

01:45:33.830 --> 01:45:33.840 align:start position:0%
trying to predict the next one but
 

01:45:33.840 --> 01:45:35.350 align:start position:0%
trying to predict the next one but
instead<01:45:34.080><c> of</c><01:45:34.159><c> doing</c><01:45:34.400><c> it</c><01:45:34.560><c> explicitly</c><01:45:35.119><c> by</c>

01:45:35.350 --> 01:45:35.360 align:start position:0%
instead of doing it explicitly by
 

01:45:35.360 --> 01:45:38.149 align:start position:0%
instead of doing it explicitly by
counting<01:45:36.159><c> and</c><01:45:36.400><c> normalizing</c>

01:45:38.149 --> 01:45:38.159 align:start position:0%
counting and normalizing
 

01:45:38.159 --> 01:45:39.350 align:start position:0%
counting and normalizing
we<01:45:38.320><c> are</c><01:45:38.400><c> doing</c><01:45:38.560><c> it</c><01:45:38.639><c> with</c><01:45:38.880><c> gradient-based</c>

01:45:39.350 --> 01:45:39.360 align:start position:0%
we are doing it with gradient-based
 

01:45:39.360 --> 01:45:41.430 align:start position:0%
we are doing it with gradient-based
learning<01:45:40.080><c> and</c><01:45:40.239><c> it</c><01:45:40.320><c> just</c><01:45:40.480><c> so</c><01:45:40.719><c> happens</c><01:45:41.119><c> that</c><01:45:41.280><c> the</c>

01:45:41.430 --> 01:45:41.440 align:start position:0%
learning and it just so happens that the
 

01:45:41.440 --> 01:45:43.990 align:start position:0%
learning and it just so happens that the
explicit<01:45:42.000><c> approach</c><01:45:42.560><c> happens</c><01:45:42.960><c> to</c><01:45:43.199><c> very</c><01:45:43.440><c> well</c>

01:45:43.990 --> 01:45:44.000 align:start position:0%
explicit approach happens to very well
 

01:45:44.000 --> 01:45:46.310 align:start position:0%
explicit approach happens to very well
optimize<01:45:44.480><c> the</c><01:45:44.639><c> loss</c><01:45:44.880><c> function</c><01:45:45.520><c> without</c><01:45:46.080><c> any</c>

01:45:46.310 --> 01:45:46.320 align:start position:0%
optimize the loss function without any
 

01:45:46.320 --> 01:45:48.470 align:start position:0%
optimize the loss function without any
need<01:45:46.560><c> for</c><01:45:46.719><c> a</c><01:45:46.800><c> gradient</c><01:45:47.119><c> based</c><01:45:47.360><c> optimization</c>

01:45:48.470 --> 01:45:48.480 align:start position:0%
need for a gradient based optimization
 

01:45:48.480 --> 01:45:50.070 align:start position:0%
need for a gradient based optimization
because<01:45:48.719><c> the</c><01:45:48.880><c> setup</c><01:45:49.119><c> for</c><01:45:49.280><c> bigram</c><01:45:49.760><c> language</c>

01:45:50.070 --> 01:45:50.080 align:start position:0%
because the setup for bigram language
 

01:45:50.080 --> 01:45:51.990 align:start position:0%
because the setup for bigram language
models<01:45:50.480><c> are</c><01:45:50.719><c> is</c><01:45:51.119><c> so</c><01:45:51.280><c> straightforward</c><01:45:51.840><c> that's</c>

01:45:51.990 --> 01:45:52.000 align:start position:0%
models are is so straightforward that's
 

01:45:52.000 --> 01:45:54.310 align:start position:0%
models are is so straightforward that's
so<01:45:52.239><c> simple</c><01:45:52.800><c> we</c><01:45:52.960><c> can</c><01:45:53.119><c> just</c><01:45:53.520><c> afford</c><01:45:53.840><c> to</c><01:45:54.000><c> estimate</c>

01:45:54.310 --> 01:45:54.320 align:start position:0%
so simple we can just afford to estimate
 

01:45:54.320 --> 01:45:55.990 align:start position:0%
so simple we can just afford to estimate
those<01:45:54.480><c> probabilities</c><01:45:55.119><c> directly</c><01:45:55.840><c> and</c>

01:45:55.990 --> 01:45:56.000 align:start position:0%
those probabilities directly and
 

01:45:56.000 --> 01:45:57.109 align:start position:0%
those probabilities directly and
maintain<01:45:56.400><c> them</c>

01:45:57.109 --> 01:45:57.119 align:start position:0%
maintain them
 

01:45:57.119 --> 01:45:58.790 align:start position:0%
maintain them
in<01:45:57.280><c> a</c><01:45:57.360><c> table</c>

01:45:58.790 --> 01:45:58.800 align:start position:0%
in a table
 

01:45:58.800 --> 01:46:00.790 align:start position:0%
in a table
but<01:45:59.119><c> the</c><01:45:59.360><c> gradient-based</c><01:46:00.000><c> approach</c><01:46:00.560><c> is</c>

01:46:00.790 --> 01:46:00.800 align:start position:0%
but the gradient-based approach is
 

01:46:00.800 --> 01:46:02.870 align:start position:0%
but the gradient-based approach is
significantly<01:46:01.440><c> more</c><01:46:01.600><c> flexible</c>

01:46:02.870 --> 01:46:02.880 align:start position:0%
significantly more flexible
 

01:46:02.880 --> 01:46:04.790 align:start position:0%
significantly more flexible
so<01:46:03.040><c> we've</c><01:46:03.280><c> actually</c><01:46:03.520><c> gained</c><01:46:03.840><c> a</c><01:46:04.000><c> lot</c>

01:46:04.790 --> 01:46:04.800 align:start position:0%
so we've actually gained a lot
 

01:46:04.800 --> 01:46:06.550 align:start position:0%
so we've actually gained a lot
because

01:46:06.550 --> 01:46:06.560 align:start position:0%
because
 

01:46:06.560 --> 01:46:09.109 align:start position:0%
because
what<01:46:06.800><c> we</c><01:46:06.880><c> can</c><01:46:07.040><c> do</c><01:46:07.280><c> now</c><01:46:07.600><c> is</c>

01:46:09.109 --> 01:46:09.119 align:start position:0%
what we can do now is
 

01:46:09.119 --> 01:46:11.030 align:start position:0%
what we can do now is
we<01:46:09.360><c> can</c><01:46:10.000><c> expand</c><01:46:10.400><c> this</c><01:46:10.560><c> approach</c><01:46:10.960><c> and</c>

01:46:11.030 --> 01:46:11.040 align:start position:0%
we can expand this approach and
 

01:46:11.040 --> 01:46:13.270 align:start position:0%
we can expand this approach and
complexify<01:46:11.600><c> the</c><01:46:11.760><c> neural</c><01:46:12.080><c> net</c><01:46:12.800><c> so</c><01:46:12.960><c> currently</c>

01:46:13.270 --> 01:46:13.280 align:start position:0%
complexify the neural net so currently
 

01:46:13.280 --> 01:46:14.709 align:start position:0%
complexify the neural net so currently
we're<01:46:13.440><c> just</c><01:46:13.520><c> taking</c><01:46:13.760><c> a</c><01:46:13.840><c> single</c><01:46:14.159><c> character</c><01:46:14.560><c> and</c>

01:46:14.709 --> 01:46:14.719 align:start position:0%
we're just taking a single character and
 

01:46:14.719 --> 01:46:16.310 align:start position:0%
we're just taking a single character and
feeding<01:46:14.960><c> into</c><01:46:15.199><c> a</c><01:46:15.280><c> neural</c><01:46:15.600><c> net</c><01:46:15.840><c> and</c><01:46:15.920><c> the</c><01:46:16.080><c> neural</c>

01:46:16.310 --> 01:46:16.320 align:start position:0%
feeding into a neural net and the neural
 

01:46:16.320 --> 01:46:18.310 align:start position:0%
feeding into a neural net and the neural
that's<01:46:16.560><c> extremely</c><01:46:17.040><c> simple</c><01:46:17.679><c> but</c><01:46:17.920><c> we're</c><01:46:18.080><c> about</c>

01:46:18.310 --> 01:46:18.320 align:start position:0%
that's extremely simple but we're about
 

01:46:18.320 --> 01:46:20.550 align:start position:0%
that's extremely simple but we're about
to<01:46:18.480><c> iterate</c><01:46:18.880><c> on</c><01:46:18.960><c> this</c><01:46:19.280><c> substantially</c><01:46:20.320><c> we're</c>

01:46:20.550 --> 01:46:20.560 align:start position:0%
to iterate on this substantially we're
 

01:46:20.560 --> 01:46:22.470 align:start position:0%
to iterate on this substantially we're
going<01:46:20.719><c> to</c><01:46:20.800><c> be</c><01:46:20.880><c> taking</c><01:46:21.280><c> multiple</c><01:46:22.080><c> previous</c>

01:46:22.470 --> 01:46:22.480 align:start position:0%
going to be taking multiple previous
 

01:46:22.480 --> 01:46:24.550 align:start position:0%
going to be taking multiple previous
characters<01:46:23.280><c> and</c><01:46:23.360><c> we're</c><01:46:23.520><c> going</c><01:46:23.679><c> to</c><01:46:23.760><c> be</c><01:46:23.920><c> feeding</c>

01:46:24.550 --> 01:46:24.560 align:start position:0%
characters and we're going to be feeding
 

01:46:24.560 --> 01:46:26.070 align:start position:0%
characters and we're going to be feeding
feeding<01:46:24.880><c> them</c><01:46:25.119><c> into</c><01:46:25.440><c> increasingly</c><01:46:25.920><c> more</c>

01:46:26.070 --> 01:46:26.080 align:start position:0%
feeding them into increasingly more
 

01:46:26.080 --> 01:46:28.550 align:start position:0%
feeding them into increasingly more
complex<01:46:26.480><c> neural</c><01:46:26.719><c> nets</c><01:46:27.360><c> but</c><01:46:27.600><c> fundamentally</c>

01:46:28.550 --> 01:46:28.560 align:start position:0%
complex neural nets but fundamentally
 

01:46:28.560 --> 01:46:30.149 align:start position:0%
complex neural nets but fundamentally
out<01:46:28.880><c> the</c><01:46:29.040><c> output</c><01:46:29.360><c> of</c><01:46:29.440><c> the</c><01:46:29.520><c> neural</c><01:46:29.760><c> net</c><01:46:30.000><c> will</c>

01:46:30.149 --> 01:46:30.159 align:start position:0%
out the output of the neural net will
 

01:46:30.159 --> 01:46:32.550 align:start position:0%
out the output of the neural net will
always<01:46:30.480><c> just</c><01:46:30.639><c> be</c><01:46:30.880><c> logics</c>

01:46:32.550 --> 01:46:32.560 align:start position:0%
always just be logics
 

01:46:32.560 --> 01:46:33.990 align:start position:0%
always just be logics
and<01:46:32.719><c> those</c><01:46:32.960><c> logits</c><01:46:33.360><c> will</c><01:46:33.520><c> go</c><01:46:33.679><c> through</c><01:46:33.840><c> the</c>

01:46:33.990 --> 01:46:34.000 align:start position:0%
and those logits will go through the
 

01:46:34.000 --> 01:46:35.990 align:start position:0%
and those logits will go through the
exact<01:46:34.239><c> same</c><01:46:34.480><c> transformation</c><01:46:35.440><c> we</c><01:46:35.600><c> are</c><01:46:35.840><c> going</c>

01:46:35.990 --> 01:46:36.000 align:start position:0%
exact same transformation we are going
 

01:46:36.000 --> 01:46:37.830 align:start position:0%
exact same transformation we are going
to<01:46:36.159><c> take</c><01:46:36.320><c> them</c><01:46:36.400><c> through</c><01:46:36.639><c> a</c><01:46:36.719><c> soft</c><01:46:36.960><c> max</c>

01:46:37.830 --> 01:46:37.840 align:start position:0%
to take them through a soft max
 

01:46:37.840 --> 01:46:39.510 align:start position:0%
to take them through a soft max
calculate<01:46:38.320><c> the</c><01:46:38.400><c> loss</c><01:46:38.639><c> function</c><01:46:39.280><c> and</c><01:46:39.440><c> the</c>

01:46:39.510 --> 01:46:39.520 align:start position:0%
calculate the loss function and the
 

01:46:39.520 --> 01:46:42.070 align:start position:0%
calculate the loss function and the
negative<01:46:39.840><c> log</c><01:46:40.080><c> likelihood</c><01:46:41.040><c> and</c><01:46:41.280><c> do</c><01:46:41.760><c> gradient</c>

01:46:42.070 --> 01:46:42.080 align:start position:0%
negative log likelihood and do gradient
 

01:46:42.080 --> 01:46:44.870 align:start position:0%
negative log likelihood and do gradient
based<01:46:42.320><c> optimization</c><01:46:43.520><c> and</c><01:46:43.679><c> so</c><01:46:43.920><c> actually</c>

01:46:44.870 --> 01:46:44.880 align:start position:0%
based optimization and so actually
 

01:46:44.880 --> 01:46:47.430 align:start position:0%
based optimization and so actually
as<01:46:45.040><c> we</c><01:46:45.199><c> complexify</c><01:46:45.840><c> the</c><01:46:46.000><c> neural</c><01:46:46.320><c> nets</c><01:46:46.960><c> and</c>

01:46:47.430 --> 01:46:47.440 align:start position:0%
as we complexify the neural nets and
 

01:46:47.440 --> 01:46:49.750 align:start position:0%
as we complexify the neural nets and
work<01:46:47.679><c> all</c><01:46:47.760><c> the</c><01:46:47.840><c> way</c><01:46:48.080><c> up</c><01:46:48.159><c> to</c><01:46:48.320><c> transformers</c>

01:46:49.750 --> 01:46:49.760 align:start position:0%
work all the way up to transformers
 

01:46:49.760 --> 01:46:51.430 align:start position:0%
work all the way up to transformers
none<01:46:49.920><c> of</c><01:46:50.000><c> this</c><01:46:50.320><c> will</c><01:46:50.480><c> really</c><01:46:50.800><c> fundamentally</c>

01:46:51.430 --> 01:46:51.440 align:start position:0%
none of this will really fundamentally
 

01:46:51.440 --> 01:46:52.950 align:start position:0%
none of this will really fundamentally
change<01:46:51.840><c> none</c><01:46:52.080><c> of</c><01:46:52.159><c> this</c><01:46:52.239><c> will</c><01:46:52.400><c> fundamentally</c>

01:46:52.950 --> 01:46:52.960 align:start position:0%
change none of this will fundamentally
 

01:46:52.960 --> 01:46:54.629 align:start position:0%
change none of this will fundamentally
change<01:46:53.520><c> the</c><01:46:53.679><c> only</c><01:46:53.840><c> thing</c><01:46:54.000><c> that</c><01:46:54.080><c> will</c><01:46:54.239><c> change</c>

01:46:54.629 --> 01:46:54.639 align:start position:0%
change the only thing that will change
 

01:46:54.639 --> 01:46:55.590 align:start position:0%
change the only thing that will change
is

01:46:55.590 --> 01:46:55.600 align:start position:0%
is
 

01:46:55.600 --> 01:46:57.669 align:start position:0%
is
the<01:46:55.760><c> way</c><01:46:55.920><c> we</c><01:46:56.080><c> do</c><01:46:56.239><c> the</c><01:46:56.400><c> forward</c><01:46:56.719><c> pass</c><01:46:57.360><c> where</c><01:46:57.520><c> we</c>

01:46:57.669 --> 01:46:57.679 align:start position:0%
the way we do the forward pass where we
 

01:46:57.679 --> 01:46:59.109 align:start position:0%
the way we do the forward pass where we
take<01:46:57.840><c> in</c><01:46:58.000><c> some</c><01:46:58.159><c> previous</c><01:46:58.480><c> characters</c><01:46:59.040><c> and</c>

01:46:59.109 --> 01:46:59.119 align:start position:0%
take in some previous characters and
 

01:46:59.119 --> 01:47:01.669 align:start position:0%
take in some previous characters and
calculate<01:46:59.600><c> logits</c><01:47:00.400><c> for</c><01:47:00.560><c> the</c><01:47:00.719><c> next</c><01:47:01.119><c> character</c>

01:47:01.669 --> 01:47:01.679 align:start position:0%
calculate logits for the next character
 

01:47:01.679 --> 01:47:03.910 align:start position:0%
calculate logits for the next character
in<01:47:01.760><c> the</c><01:47:01.840><c> sequence</c><01:47:02.800><c> that</c><01:47:03.040><c> will</c><01:47:03.520><c> become</c><01:47:03.760><c> more</c>

01:47:03.910 --> 01:47:03.920 align:start position:0%
in the sequence that will become more
 

01:47:03.920 --> 01:47:05.109 align:start position:0%
in the sequence that will become more
complex

01:47:05.109 --> 01:47:05.119 align:start position:0%
complex
 

01:47:05.119 --> 01:47:07.350 align:start position:0%
complex
and<01:47:05.520><c> uh</c><01:47:06.000><c> but</c><01:47:06.159><c> we'll</c><01:47:06.320><c> use</c><01:47:06.560><c> the</c><01:47:06.639><c> same</c><01:47:06.880><c> machinery</c>

01:47:07.350 --> 01:47:07.360 align:start position:0%
and uh but we'll use the same machinery
 

01:47:07.360 --> 01:47:08.790 align:start position:0%
and uh but we'll use the same machinery
to<01:47:07.520><c> optimize</c><01:47:08.000><c> it</c>

01:47:08.790 --> 01:47:08.800 align:start position:0%
to optimize it
 

01:47:08.800 --> 01:47:10.629 align:start position:0%
to optimize it
and<01:47:09.520><c> um</c>

01:47:10.629 --> 01:47:10.639 align:start position:0%
and um
 

01:47:10.639 --> 01:47:12.070 align:start position:0%
and um
it's<01:47:10.800><c> not</c><01:47:11.040><c> obvious</c><01:47:11.360><c> how</c><01:47:11.520><c> we</c><01:47:11.760><c> would</c><01:47:11.920><c> have</c>

01:47:12.070 --> 01:47:12.080 align:start position:0%
it's not obvious how we would have
 

01:47:12.080 --> 01:47:13.109 align:start position:0%
it's not obvious how we would have
extended

01:47:13.109 --> 01:47:13.119 align:start position:0%
extended
 

01:47:13.119 --> 01:47:14.870 align:start position:0%
extended
this<01:47:13.360><c> bigram</c><01:47:13.840><c> approach</c>

01:47:14.870 --> 01:47:14.880 align:start position:0%
this bigram approach
 

01:47:14.880 --> 01:47:17.350 align:start position:0%
this bigram approach
into<01:47:15.520><c> the</c><01:47:15.679><c> case</c><01:47:16.159><c> where</c><01:47:16.320><c> there</c><01:47:16.560><c> are</c><01:47:16.639><c> many</c><01:47:16.880><c> more</c>

01:47:17.350 --> 01:47:17.360 align:start position:0%
into the case where there are many more
 

01:47:17.360 --> 01:47:19.350 align:start position:0%
into the case where there are many more
characters<01:47:18.159><c> at</c><01:47:18.320><c> the</c><01:47:18.480><c> input</c><01:47:19.119><c> because</c>

01:47:19.350 --> 01:47:19.360 align:start position:0%
characters at the input because
 

01:47:19.360 --> 01:47:21.350 align:start position:0%
characters at the input because
eventually<01:47:19.840><c> these</c><01:47:20.080><c> tables</c><01:47:20.560><c> would</c><01:47:20.719><c> get</c><01:47:21.199><c> way</c>

01:47:21.350 --> 01:47:21.360 align:start position:0%
eventually these tables would get way
 

01:47:21.360 --> 01:47:23.109 align:start position:0%
eventually these tables would get way
too<01:47:21.600><c> large</c><01:47:22.159><c> because</c><01:47:22.320><c> there's</c><01:47:22.560><c> way</c><01:47:22.719><c> too</c><01:47:22.880><c> many</c>

01:47:23.109 --> 01:47:23.119 align:start position:0%
too large because there's way too many
 

01:47:23.119 --> 01:47:26.149 align:start position:0%
too large because there's way too many
combinations<01:47:24.159><c> of</c><01:47:24.320><c> what</c><01:47:24.560><c> previous</c><01:47:24.960><c> characters</c>

01:47:26.149 --> 01:47:26.159 align:start position:0%
combinations of what previous characters
 

01:47:26.159 --> 01:47:27.750 align:start position:0%
combinations of what previous characters
could<01:47:26.320><c> be</c>

01:47:27.750 --> 01:47:27.760 align:start position:0%
could be
 

01:47:27.760 --> 01:47:29.590 align:start position:0%
could be
if<01:47:27.920><c> you</c><01:47:28.000><c> only</c><01:47:28.159><c> have</c><01:47:28.400><c> one</c><01:47:28.639><c> previous</c><01:47:28.960><c> character</c>

01:47:29.590 --> 01:47:29.600 align:start position:0%
if you only have one previous character
 

01:47:29.600 --> 01:47:31.109 align:start position:0%
if you only have one previous character
we<01:47:29.760><c> can</c><01:47:29.840><c> just</c><01:47:30.000><c> keep</c><01:47:30.159><c> everything</c><01:47:30.480><c> in</c><01:47:30.560><c> a</c><01:47:30.639><c> table</c>

01:47:31.109 --> 01:47:31.119 align:start position:0%
we can just keep everything in a table
 

01:47:31.119 --> 01:47:33.590 align:start position:0%
we can just keep everything in a table
that<01:47:31.280><c> counts</c><01:47:32.000><c> but</c><01:47:32.159><c> if</c><01:47:32.320><c> you</c><01:47:32.400><c> have</c><01:47:32.880><c> the</c><01:47:33.040><c> last</c><01:47:33.360><c> 10</c>

01:47:33.590 --> 01:47:33.600 align:start position:0%
that counts but if you have the last 10
 

01:47:33.600 --> 01:47:35.430 align:start position:0%
that counts but if you have the last 10
characters<01:47:34.000><c> that</c><01:47:34.239><c> are</c><01:47:34.480><c> input</c><01:47:35.040><c> we</c><01:47:35.199><c> can't</c>

01:47:35.430 --> 01:47:35.440 align:start position:0%
characters that are input we can't
 

01:47:35.440 --> 01:47:36.709 align:start position:0%
characters that are input we can't
actually<01:47:35.760><c> keep</c><01:47:36.000><c> everything</c><01:47:36.239><c> in</c><01:47:36.320><c> the</c><01:47:36.400><c> table</c>

01:47:36.709 --> 01:47:36.719 align:start position:0%
actually keep everything in the table
 

01:47:36.719 --> 01:47:38.470 align:start position:0%
actually keep everything in the table
anymore<01:47:37.360><c> so</c><01:47:37.520><c> this</c><01:47:37.679><c> is</c><01:47:37.760><c> fundamentally</c><01:47:38.320><c> an</c>

01:47:38.470 --> 01:47:38.480 align:start position:0%
anymore so this is fundamentally an
 

01:47:38.480 --> 01:47:40.229 align:start position:0%
anymore so this is fundamentally an
unscalable<01:47:39.040><c> approach</c><01:47:39.760><c> and</c><01:47:39.840><c> the</c><01:47:40.000><c> neural</c>

01:47:40.229 --> 01:47:40.239 align:start position:0%
unscalable approach and the neural
 

01:47:40.239 --> 01:47:42.070 align:start position:0%
unscalable approach and the neural
network<01:47:40.719><c> approach</c><01:47:41.119><c> is</c><01:47:41.360><c> significantly</c><01:47:41.920><c> more</c>

01:47:42.070 --> 01:47:42.080 align:start position:0%
network approach is significantly more
 

01:47:42.080 --> 01:47:43.990 align:start position:0%
network approach is significantly more
scalable<01:47:43.040><c> and</c><01:47:43.280><c> it's</c><01:47:43.520><c> something</c><01:47:43.760><c> that</c>

01:47:43.990 --> 01:47:44.000 align:start position:0%
scalable and it's something that
 

01:47:44.000 --> 01:47:46.790 align:start position:0%
scalable and it's something that
actually<01:47:44.719><c> we</c><01:47:44.880><c> can</c><01:47:45.119><c> improve</c><01:47:45.440><c> on</c><01:47:45.760><c> over</c><01:47:46.080><c> time</c><01:47:46.639><c> so</c>

01:47:46.790 --> 01:47:46.800 align:start position:0%
actually we can improve on over time so
 

01:47:46.800 --> 01:47:48.550 align:start position:0%
actually we can improve on over time so
that's<01:47:46.960><c> where</c><01:47:47.119><c> we</c><01:47:47.280><c> will</c><01:47:47.440><c> be</c><01:47:47.600><c> digging</c><01:47:48.000><c> next</c><01:47:48.480><c> i</c>

01:47:48.550 --> 01:47:48.560 align:start position:0%
that's where we will be digging next i
 

01:47:48.560 --> 01:47:51.030 align:start position:0%
that's where we will be digging next i
wanted<01:47:48.800><c> to</c><01:47:49.199><c> point</c><01:47:49.440><c> out</c><01:47:49.600><c> two</c><01:47:49.760><c> more</c><01:47:50.080><c> things</c>

01:47:51.030 --> 01:47:51.040 align:start position:0%
wanted to point out two more things
 

01:47:51.040 --> 01:47:52.229 align:start position:0%
wanted to point out two more things
number<01:47:51.360><c> one</c>

01:47:52.229 --> 01:47:52.239 align:start position:0%
number one
 

01:47:52.239 --> 01:47:53.990 align:start position:0%
number one
i<01:47:52.320><c> want</c><01:47:52.480><c> you</c><01:47:52.639><c> to</c><01:47:52.800><c> notice</c><01:47:53.119><c> that</c>

01:47:53.990 --> 01:47:54.000 align:start position:0%
i want you to notice that
 

01:47:54.000 --> 01:47:55.030 align:start position:0%
i want you to notice that
this

01:47:55.030 --> 01:47:55.040 align:start position:0%
this
 

01:47:55.040 --> 01:47:56.629 align:start position:0%
this
x<01:47:55.360><c> ink</c><01:47:55.679><c> here</c>

01:47:56.629 --> 01:47:56.639 align:start position:0%
x ink here
 

01:47:56.639 --> 01:47:59.030 align:start position:0%
x ink here
this<01:47:56.880><c> is</c><01:47:56.960><c> made</c><01:47:57.199><c> up</c><01:47:57.280><c> of</c><01:47:57.440><c> one</c><01:47:57.679><c> hot</c><01:47:58.000><c> vectors</c><01:47:58.880><c> and</c>

01:47:59.030 --> 01:47:59.040 align:start position:0%
this is made up of one hot vectors and
 

01:47:59.040 --> 01:48:00.390 align:start position:0%
this is made up of one hot vectors and
then<01:47:59.199><c> those</c><01:47:59.360><c> one</c><01:47:59.600><c> hot</c><01:47:59.840><c> vectors</c><01:48:00.239><c> are</c>

01:48:00.390 --> 01:48:00.400 align:start position:0%
then those one hot vectors are
 

01:48:00.400 --> 01:48:03.109 align:start position:0%
then those one hot vectors are
multiplied<01:48:00.960><c> by</c><01:48:01.199><c> this</c><01:48:01.360><c> w</c><01:48:01.760><c> matrix</c>

01:48:03.109 --> 01:48:03.119 align:start position:0%
multiplied by this w matrix
 

01:48:03.119 --> 01:48:05.750 align:start position:0%
multiplied by this w matrix
and<01:48:03.360><c> we</c><01:48:03.520><c> think</c><01:48:03.760><c> of</c><01:48:03.840><c> this</c><01:48:04.239><c> as</c><01:48:04.880><c> multiple</c><01:48:05.280><c> neurons</c>

01:48:05.750 --> 01:48:05.760 align:start position:0%
and we think of this as multiple neurons
 

01:48:05.760 --> 01:48:07.430 align:start position:0%
and we think of this as multiple neurons
being<01:48:06.000><c> forwarded</c><01:48:06.560><c> in</c><01:48:06.719><c> a</c><01:48:06.800><c> fully</c><01:48:07.040><c> connected</c>

01:48:07.430 --> 01:48:07.440 align:start position:0%
being forwarded in a fully connected
 

01:48:07.440 --> 01:48:08.629 align:start position:0%
being forwarded in a fully connected
manner

01:48:08.629 --> 01:48:08.639 align:start position:0%
manner
 

01:48:08.639 --> 01:48:09.990 align:start position:0%
manner
but<01:48:08.880><c> actually</c><01:48:09.119><c> what's</c><01:48:09.280><c> happening</c><01:48:09.600><c> here</c><01:48:09.840><c> is</c>

01:48:09.990 --> 01:48:10.000 align:start position:0%
but actually what's happening here is
 

01:48:10.000 --> 01:48:11.910 align:start position:0%
but actually what's happening here is
that<01:48:10.159><c> for</c><01:48:10.320><c> example</c>

01:48:11.910 --> 01:48:11.920 align:start position:0%
that for example
 

01:48:11.920 --> 01:48:14.310 align:start position:0%
that for example
if<01:48:12.080><c> you</c><01:48:12.159><c> have</c><01:48:12.400><c> a</c><01:48:12.560><c> one</c><01:48:12.800><c> hot</c><01:48:13.280><c> vector</c><01:48:13.679><c> here</c><01:48:14.080><c> that</c>

01:48:14.310 --> 01:48:14.320 align:start position:0%
if you have a one hot vector here that
 

01:48:14.320 --> 01:48:17.669 align:start position:0%
if you have a one hot vector here that
has<01:48:15.040><c> a</c><01:48:15.199><c> one</c><01:48:15.600><c> at</c><01:48:15.760><c> say</c><01:48:15.920><c> the</c><01:48:16.080><c> fifth</c><01:48:16.400><c> dimension</c>

01:48:17.669 --> 01:48:17.679 align:start position:0%
has a one at say the fifth dimension
 

01:48:17.679 --> 01:48:19.109 align:start position:0%
has a one at say the fifth dimension
then<01:48:17.840><c> because</c><01:48:18.080><c> of</c><01:48:18.159><c> the</c><01:48:18.239><c> way</c><01:48:18.400><c> the</c><01:48:18.800><c> matrix</c>

01:48:19.109 --> 01:48:19.119 align:start position:0%
then because of the way the matrix
 

01:48:19.119 --> 01:48:21.109 align:start position:0%
then because of the way the matrix
multiplication<01:48:19.840><c> works</c>

01:48:21.109 --> 01:48:21.119 align:start position:0%
multiplication works
 

01:48:21.119 --> 01:48:23.430 align:start position:0%
multiplication works
multiplying<01:48:21.679><c> that</c><01:48:21.840><c> one-half</c><01:48:22.239><c> vector</c><01:48:22.480><c> with</c><01:48:22.719><c> w</c>

01:48:23.430 --> 01:48:23.440 align:start position:0%
multiplying that one-half vector with w
 

01:48:23.440 --> 01:48:25.590 align:start position:0%
multiplying that one-half vector with w
actually<01:48:23.840><c> ends</c><01:48:24.000><c> up</c><01:48:24.239><c> plucking</c><01:48:24.639><c> out</c><01:48:25.040><c> the</c><01:48:25.280><c> fifth</c>

01:48:25.590 --> 01:48:25.600 align:start position:0%
actually ends up plucking out the fifth
 

01:48:25.600 --> 01:48:27.430 align:start position:0%
actually ends up plucking out the fifth
row<01:48:26.080><c> of</c><01:48:26.239><c> w</c>

01:48:27.430 --> 01:48:27.440 align:start position:0%
row of w
 

01:48:27.440 --> 01:48:29.510 align:start position:0%
row of w
log<01:48:27.920><c> logits</c><01:48:28.400><c> would</c><01:48:28.560><c> become</c><01:48:28.880><c> just</c><01:48:29.119><c> the</c><01:48:29.199><c> fifth</c>

01:48:29.510 --> 01:48:29.520 align:start position:0%
log logits would become just the fifth
 

01:48:29.520 --> 01:48:31.189 align:start position:0%
log logits would become just the fifth
row<01:48:29.920><c> of</c><01:48:30.000><c> w</c>

01:48:31.189 --> 01:48:31.199 align:start position:0%
row of w
 

01:48:31.199 --> 01:48:32.950 align:start position:0%
row of w
and<01:48:31.360><c> that's</c><01:48:31.520><c> because</c><01:48:31.760><c> of</c><01:48:31.840><c> the</c><01:48:32.000><c> way</c><01:48:32.239><c> the</c><01:48:32.560><c> matrix</c>

01:48:32.950 --> 01:48:32.960 align:start position:0%
and that's because of the way the matrix
 

01:48:32.960 --> 01:48:35.189 align:start position:0%
and that's because of the way the matrix
multiplication<01:48:34.000><c> works</c>

01:48:35.189 --> 01:48:35.199 align:start position:0%
multiplication works
 

01:48:35.199 --> 01:48:36.870 align:start position:0%
multiplication works
um

01:48:36.870 --> 01:48:36.880 align:start position:0%
um
 

01:48:36.880 --> 01:48:37.750 align:start position:0%
um
so

01:48:37.750 --> 01:48:37.760 align:start position:0%
so
 

01:48:37.760 --> 01:48:39.990 align:start position:0%
so
that's<01:48:38.080><c> actually</c><01:48:38.320><c> what</c><01:48:38.480><c> ends</c><01:48:38.719><c> up</c><01:48:38.800><c> happening</c>

01:48:39.990 --> 01:48:40.000 align:start position:0%
that's actually what ends up happening
 

01:48:40.000 --> 01:48:41.990 align:start position:0%
that's actually what ends up happening
so<01:48:40.480><c> but</c><01:48:40.639><c> that's</c><01:48:40.880><c> actually</c><01:48:41.440><c> exactly</c><01:48:41.840><c> what</c>

01:48:41.990 --> 01:48:42.000 align:start position:0%
so but that's actually exactly what
 

01:48:42.000 --> 01:48:43.189 align:start position:0%
so but that's actually exactly what
happened<01:48:42.320><c> before</c>

01:48:43.189 --> 01:48:43.199 align:start position:0%
happened before
 

01:48:43.199 --> 01:48:46.629 align:start position:0%
happened before
because<01:48:43.520><c> remember</c><01:48:43.920><c> all</c><01:48:44.080><c> the</c><01:48:44.159><c> way</c><01:48:44.400><c> up</c><01:48:44.560><c> here</c>

01:48:46.629 --> 01:48:46.639 align:start position:0%
because remember all the way up here
 

01:48:46.639 --> 01:48:48.229 align:start position:0%
because remember all the way up here
we<01:48:46.800><c> have</c><01:48:46.880><c> a</c><01:48:46.960><c> bigram</c><01:48:47.520><c> we</c><01:48:47.679><c> took</c><01:48:47.840><c> the</c><01:48:48.000><c> first</c>

01:48:48.229 --> 01:48:48.239 align:start position:0%
we have a bigram we took the first
 

01:48:48.239 --> 01:48:50.310 align:start position:0%
we have a bigram we took the first
character<01:48:49.119><c> and</c><01:48:49.199><c> then</c><01:48:49.360><c> that</c><01:48:49.520><c> first</c><01:48:49.760><c> character</c>

01:48:50.310 --> 01:48:50.320 align:start position:0%
character and then that first character
 

01:48:50.320 --> 01:48:54.950 align:start position:0%
character and then that first character
indexed<01:48:51.040><c> into</c><01:48:51.520><c> a</c><01:48:51.760><c> row</c><01:48:52.560><c> of</c><01:48:52.719><c> this</c><01:48:53.440><c> array</c><01:48:53.840><c> here</c>

01:48:54.950 --> 01:48:54.960 align:start position:0%
indexed into a row of this array here
 

01:48:54.960 --> 01:48:56.550 align:start position:0%
indexed into a row of this array here
and<01:48:55.119><c> that</c><01:48:55.360><c> row</c><01:48:55.679><c> gave</c><01:48:55.920><c> us</c><01:48:56.000><c> the</c><01:48:56.159><c> probability</c>

01:48:56.550 --> 01:48:56.560 align:start position:0%
and that row gave us the probability
 

01:48:56.560 --> 01:48:58.709 align:start position:0%
and that row gave us the probability
distribution<01:48:57.119><c> for</c><01:48:57.280><c> the</c><01:48:57.440><c> next</c><01:48:57.679><c> character</c><01:48:58.560><c> so</c>

01:48:58.709 --> 01:48:58.719 align:start position:0%
distribution for the next character so
 

01:48:58.719 --> 01:49:01.109 align:start position:0%
distribution for the next character so
the<01:48:58.880><c> first</c><01:48:59.040><c> character</c><01:48:59.440><c> was</c><01:48:59.600><c> used</c><01:48:59.840><c> as</c><01:49:00.080><c> a</c><01:49:00.560><c> lookup</c>

01:49:01.109 --> 01:49:01.119 align:start position:0%
the first character was used as a lookup
 

01:49:01.119 --> 01:49:03.590 align:start position:0%
the first character was used as a lookup
into<01:49:01.600><c> a</c>

01:49:03.590 --> 01:49:03.600 align:start position:0%
into a
 

01:49:03.600 --> 01:49:05.109 align:start position:0%
into a
matrix<01:49:04.000><c> here</c><01:49:04.400><c> to</c><01:49:04.480><c> get</c><01:49:04.639><c> the</c><01:49:04.719><c> probability</c>

01:49:05.109 --> 01:49:05.119 align:start position:0%
matrix here to get the probability
 

01:49:05.119 --> 01:49:06.229 align:start position:0%
matrix here to get the probability
distribution

01:49:06.229 --> 01:49:06.239 align:start position:0%
distribution
 

01:49:06.239 --> 01:49:07.430 align:start position:0%
distribution
well<01:49:06.400><c> that's</c><01:49:06.639><c> actually</c><01:49:06.880><c> exactly</c><01:49:07.199><c> what's</c>

01:49:07.430 --> 01:49:07.440 align:start position:0%
well that's actually exactly what's
 

01:49:07.440 --> 01:49:09.590 align:start position:0%
well that's actually exactly what's
happening<01:49:07.760><c> here</c><01:49:08.480><c> because</c><01:49:08.719><c> we're</c><01:49:08.880><c> taking</c><01:49:09.199><c> the</c>

01:49:09.590 --> 01:49:09.600 align:start position:0%
happening here because we're taking the
 

01:49:09.600 --> 01:49:11.830 align:start position:0%
happening here because we're taking the
index<01:49:10.560><c> we're</c><01:49:10.719><c> encoding</c><01:49:11.040><c> it</c><01:49:11.199><c> as</c><01:49:11.280><c> one</c><01:49:11.440><c> hot</c><01:49:11.760><c> and</c>

01:49:11.830 --> 01:49:11.840 align:start position:0%
index we're encoding it as one hot and
 

01:49:11.840 --> 01:49:13.430 align:start position:0%
index we're encoding it as one hot and
multiplying<01:49:12.320><c> it</c><01:49:12.400><c> by</c><01:49:12.560><c> w</c>

01:49:13.430 --> 01:49:13.440 align:start position:0%
multiplying it by w
 

01:49:13.440 --> 01:49:15.669 align:start position:0%
multiplying it by w
so<01:49:13.679><c> logics</c><01:49:14.159><c> literally</c><01:49:14.560><c> becomes</c>

01:49:15.669 --> 01:49:15.679 align:start position:0%
so logics literally becomes
 

01:49:15.679 --> 01:49:17.990 align:start position:0%
so logics literally becomes
the

01:49:17.990 --> 01:49:18.000 align:start position:0%
 
 

01:49:18.000 --> 01:49:20.790 align:start position:0%
 
the<01:49:18.159><c> appropriate</c><01:49:18.719><c> row</c><01:49:19.199><c> of</c><01:49:19.360><c> w</c>

01:49:20.790 --> 01:49:20.800 align:start position:0%
the appropriate row of w
 

01:49:20.800 --> 01:49:22.550 align:start position:0%
the appropriate row of w
and<01:49:20.960><c> that</c><01:49:21.199><c> gets</c><01:49:21.599><c> just</c><01:49:21.840><c> as</c><01:49:22.000><c> before</c>

01:49:22.550 --> 01:49:22.560 align:start position:0%
and that gets just as before
 

01:49:22.560 --> 01:49:24.870 align:start position:0%
and that gets just as before
exponentiated<01:49:23.360><c> to</c><01:49:23.440><c> create</c><01:49:23.599><c> the</c><01:49:23.760><c> counts</c>

01:49:24.870 --> 01:49:24.880 align:start position:0%
exponentiated to create the counts
 

01:49:24.880 --> 01:49:26.229 align:start position:0%
exponentiated to create the counts
and<01:49:24.960><c> then</c><01:49:25.199><c> normalized</c><01:49:25.840><c> and</c><01:49:25.920><c> becomes</c>

01:49:26.229 --> 01:49:26.239 align:start position:0%
and then normalized and becomes
 

01:49:26.239 --> 01:49:27.430 align:start position:0%
and then normalized and becomes
probability

01:49:27.430 --> 01:49:27.440 align:start position:0%
probability
 

01:49:27.440 --> 01:49:29.430 align:start position:0%
probability
so<01:49:27.679><c> this</c><01:49:28.000><c> w</c><01:49:28.480><c> here</c>

01:49:29.430 --> 01:49:29.440 align:start position:0%
so this w here
 

01:49:29.440 --> 01:49:31.350 align:start position:0%
so this w here
is<01:49:29.760><c> literally</c>

01:49:31.350 --> 01:49:31.360 align:start position:0%
is literally
 

01:49:31.360 --> 01:49:35.030 align:start position:0%
is literally
the<01:49:31.599><c> same</c><01:49:32.320><c> as</c><01:49:32.560><c> this</c><01:49:33.119><c> array</c><01:49:33.440><c> here</c>

01:49:35.030 --> 01:49:35.040 align:start position:0%
the same as this array here
 

01:49:35.040 --> 01:49:38.229 align:start position:0%
the same as this array here
but<01:49:35.679><c> w</c><01:49:36.159><c> remember</c><01:49:36.560><c> is</c><01:49:36.639><c> the</c><01:49:36.800><c> log</c><01:49:37.199><c> counts</c><01:49:37.840><c> not</c><01:49:38.080><c> the</c>

01:49:38.229 --> 01:49:38.239 align:start position:0%
but w remember is the log counts not the
 

01:49:38.239 --> 01:49:40.629 align:start position:0%
but w remember is the log counts not the
counts<01:49:38.800><c> so</c><01:49:38.960><c> it's</c><01:49:39.119><c> more</c><01:49:39.360><c> precise</c><01:49:39.679><c> to</c><01:49:39.920><c> say</c><01:49:40.480><c> that</c>

01:49:40.629 --> 01:49:40.639 align:start position:0%
counts so it's more precise to say that
 

01:49:40.639 --> 01:49:42.790 align:start position:0%
counts so it's more precise to say that
w<01:49:41.360><c> exponentiated</c>

01:49:42.790 --> 01:49:42.800 align:start position:0%
w exponentiated
 

01:49:42.800 --> 01:49:46.149 align:start position:0%
w exponentiated
w<01:49:43.119><c> dot</c><01:49:43.440><c> x</c><01:49:44.000><c> is</c><01:49:44.480><c> this</c><01:49:45.040><c> array</c>

01:49:46.149 --> 01:49:46.159 align:start position:0%
w dot x is this array
 

01:49:46.159 --> 01:49:49.270 align:start position:0%
w dot x is this array
but<01:49:46.560><c> this</c><01:49:46.800><c> array</c><01:49:47.199><c> was</c><01:49:47.360><c> filled</c><01:49:47.679><c> in</c><01:49:47.920><c> by</c><01:49:48.159><c> counting</c>

01:49:49.270 --> 01:49:49.280 align:start position:0%
but this array was filled in by counting
 

01:49:49.280 --> 01:49:50.390 align:start position:0%
but this array was filled in by counting
and<01:49:49.599><c> by</c>

01:49:50.390 --> 01:49:50.400 align:start position:0%
and by
 

01:49:50.400 --> 01:49:51.910 align:start position:0%
and by
basically

01:49:51.910 --> 01:49:51.920 align:start position:0%
basically
 

01:49:51.920 --> 01:49:53.830 align:start position:0%
basically
populating<01:49:52.400><c> the</c><01:49:52.560><c> counts</c><01:49:52.880><c> of</c><01:49:52.960><c> bi-grams</c>

01:49:53.830 --> 01:49:53.840 align:start position:0%
populating the counts of bi-grams
 

01:49:53.840 --> 01:49:55.830 align:start position:0%
populating the counts of bi-grams
whereas<01:49:54.320><c> in</c><01:49:54.400><c> the</c><01:49:54.560><c> gradient-based</c><01:49:55.199><c> framework</c>

01:49:55.830 --> 01:49:55.840 align:start position:0%
whereas in the gradient-based framework
 

01:49:55.840 --> 01:49:57.910 align:start position:0%
whereas in the gradient-based framework
we<01:49:56.000><c> initialize</c><01:49:56.560><c> it</c><01:49:56.719><c> randomly</c><01:49:57.520><c> and</c><01:49:57.599><c> then</c><01:49:57.760><c> we</c>

01:49:57.910 --> 01:49:57.920 align:start position:0%
we initialize it randomly and then we
 

01:49:57.920 --> 01:49:59.350 align:start position:0%
we initialize it randomly and then we
let<01:49:58.159><c> the</c><01:49:58.320><c> loss</c>

01:49:59.350 --> 01:49:59.360 align:start position:0%
let the loss
 

01:49:59.360 --> 01:50:00.470 align:start position:0%
let the loss
guide<01:49:59.679><c> us</c>

01:50:00.470 --> 01:50:00.480 align:start position:0%
guide us
 

01:50:00.480 --> 01:50:03.189 align:start position:0%
guide us
to<01:50:00.639><c> arrive</c><01:50:01.040><c> at</c><01:50:01.199><c> the</c><01:50:01.360><c> exact</c><01:50:01.760><c> same</c><01:50:02.080><c> array</c>

01:50:03.189 --> 01:50:03.199 align:start position:0%
to arrive at the exact same array
 

01:50:03.199 --> 01:50:05.750 align:start position:0%
to arrive at the exact same array
so<01:50:03.440><c> this</c><01:50:03.760><c> array</c><01:50:04.320><c> exactly</c><01:50:04.800><c> here</c>

01:50:05.750 --> 01:50:05.760 align:start position:0%
so this array exactly here
 

01:50:05.760 --> 01:50:06.709 align:start position:0%
so this array exactly here
is

01:50:06.709 --> 01:50:06.719 align:start position:0%
is
 

01:50:06.719 --> 01:50:09.109 align:start position:0%
is
basically<01:50:07.440><c> the</c><01:50:07.599><c> array</c><01:50:07.920><c> w</c><01:50:08.639><c> at</c><01:50:08.719><c> the</c><01:50:08.880><c> end</c><01:50:09.040><c> of</c>

01:50:09.109 --> 01:50:09.119 align:start position:0%
basically the array w at the end of
 

01:50:09.119 --> 01:50:12.229 align:start position:0%
basically the array w at the end of
optimization<01:50:10.080><c> except</c><01:50:10.480><c> we</c><01:50:10.639><c> arrived</c><01:50:11.040><c> at</c><01:50:11.199><c> it</c>

01:50:12.229 --> 01:50:12.239 align:start position:0%
optimization except we arrived at it
 

01:50:12.239 --> 01:50:14.950 align:start position:0%
optimization except we arrived at it
piece<01:50:12.480><c> by</c><01:50:12.639><c> piece</c><01:50:12.880><c> by</c><01:50:13.040><c> following</c><01:50:13.440><c> the</c><01:50:13.520><c> loss</c>

01:50:14.950 --> 01:50:14.960 align:start position:0%
piece by piece by following the loss
 

01:50:14.960 --> 01:50:16.629 align:start position:0%
piece by piece by following the loss
and<01:50:15.040><c> that's</c><01:50:15.280><c> why</c><01:50:15.440><c> we</c><01:50:15.599><c> also</c><01:50:15.840><c> obtain</c><01:50:16.159><c> the</c><01:50:16.320><c> same</c>

01:50:16.629 --> 01:50:16.639 align:start position:0%
and that's why we also obtain the same
 

01:50:16.639 --> 01:50:18.550 align:start position:0%
and that's why we also obtain the same
loss<01:50:16.880><c> function</c><01:50:17.199><c> at</c><01:50:17.280><c> the</c><01:50:17.440><c> end</c><01:50:17.920><c> and</c><01:50:18.000><c> the</c><01:50:18.159><c> second</c>

01:50:18.550 --> 01:50:18.560 align:start position:0%
loss function at the end and the second
 

01:50:18.560 --> 01:50:20.470 align:start position:0%
loss function at the end and the second
note<01:50:18.880><c> is</c><01:50:19.119><c> if</c><01:50:19.280><c> i</c><01:50:19.360><c> come</c><01:50:19.599><c> here</c>

01:50:20.470 --> 01:50:20.480 align:start position:0%
note is if i come here
 

01:50:20.480 --> 01:50:22.550 align:start position:0%
note is if i come here
remember<01:50:20.800><c> the</c><01:50:20.960><c> smoothing</c><01:50:21.599><c> where</c><01:50:21.840><c> we</c><01:50:22.000><c> added</c>

01:50:22.550 --> 01:50:22.560 align:start position:0%
remember the smoothing where we added
 

01:50:22.560 --> 01:50:24.870 align:start position:0%
remember the smoothing where we added
fake<01:50:22.960><c> counts</c><01:50:23.599><c> to</c><01:50:23.760><c> our</c><01:50:23.920><c> counts</c>

01:50:24.870 --> 01:50:24.880 align:start position:0%
fake counts to our counts
 

01:50:24.880 --> 01:50:25.990 align:start position:0%
fake counts to our counts
in<01:50:24.960><c> order</c><01:50:25.280><c> to</c>

01:50:25.990 --> 01:50:26.000 align:start position:0%
in order to
 

01:50:26.000 --> 01:50:28.470 align:start position:0%
in order to
smooth<01:50:26.320><c> out</c><01:50:26.560><c> and</c><01:50:26.639><c> make</c><01:50:27.119><c> more</c><01:50:27.360><c> uniform</c><01:50:28.320><c> the</c>

01:50:28.470 --> 01:50:28.480 align:start position:0%
smooth out and make more uniform the
 

01:50:28.480 --> 01:50:30.950 align:start position:0%
smooth out and make more uniform the
distributions<01:50:29.280><c> of</c><01:50:29.360><c> these</c><01:50:29.520><c> probabilities</c>

01:50:30.950 --> 01:50:30.960 align:start position:0%
distributions of these probabilities
 

01:50:30.960 --> 01:50:32.470 align:start position:0%
distributions of these probabilities
and<01:50:31.119><c> that</c><01:50:31.280><c> prevented</c><01:50:31.760><c> us</c><01:50:31.840><c> from</c><01:50:32.080><c> assigning</c>

01:50:32.470 --> 01:50:32.480 align:start position:0%
and that prevented us from assigning
 

01:50:32.480 --> 01:50:34.950 align:start position:0%
and that prevented us from assigning
zero<01:50:32.719><c> probability</c><01:50:33.360><c> to</c>

01:50:34.950 --> 01:50:34.960 align:start position:0%
zero probability to
 

01:50:34.960 --> 01:50:37.109 align:start position:0%
zero probability to
to<01:50:35.199><c> any</c><01:50:35.360><c> one</c><01:50:35.840><c> bigram</c>

01:50:37.109 --> 01:50:37.119 align:start position:0%
to any one bigram
 

01:50:37.119 --> 01:50:40.229 align:start position:0%
to any one bigram
now<01:50:37.679><c> if</c><01:50:37.920><c> i</c><01:50:38.480><c> increase</c><01:50:38.800><c> the</c><01:50:38.960><c> count</c><01:50:39.280><c> here</c>

01:50:40.229 --> 01:50:40.239 align:start position:0%
now if i increase the count here
 

01:50:40.239 --> 01:50:42.790 align:start position:0%
now if i increase the count here
what's<01:50:40.560><c> happening</c><01:50:41.119><c> to</c><01:50:41.280><c> the</c><01:50:41.360><c> probability</c>

01:50:42.790 --> 01:50:42.800 align:start position:0%
what's happening to the probability
 

01:50:42.800 --> 01:50:45.270 align:start position:0%
what's happening to the probability
as<01:50:42.960><c> i</c><01:50:43.199><c> increase</c><01:50:43.840><c> the</c><01:50:44.000><c> count</c><01:50:44.719><c> probability</c>

01:50:45.270 --> 01:50:45.280 align:start position:0%
as i increase the count probability
 

01:50:45.280 --> 01:50:47.910 align:start position:0%
as i increase the count probability
becomes<01:50:45.840><c> more</c><01:50:46.080><c> and</c><01:50:46.239><c> more</c><01:50:46.639><c> uniform</c>

01:50:47.910 --> 01:50:47.920 align:start position:0%
becomes more and more uniform
 

01:50:47.920 --> 01:50:50.310 align:start position:0%
becomes more and more uniform
right<01:50:48.080><c> because</c><01:50:48.880><c> these</c><01:50:49.119><c> counts</c><01:50:49.440><c> go</c><01:50:49.840><c> only</c><01:50:50.080><c> up</c><01:50:50.159><c> to</c>

01:50:50.310 --> 01:50:50.320 align:start position:0%
right because these counts go only up to
 

01:50:50.320 --> 01:50:52.550 align:start position:0%
right because these counts go only up to
like<01:50:50.560><c> 900</c><01:50:50.960><c> or</c><01:50:51.119><c> whatever</c><01:50:51.440><c> so</c><01:50:51.599><c> if</c><01:50:51.679><c> i'm</c><01:50:51.840><c> adding</c>

01:50:52.550 --> 01:50:52.560 align:start position:0%
like 900 or whatever so if i'm adding
 

01:50:52.560 --> 01:50:54.310 align:start position:0%
like 900 or whatever so if i'm adding
plus<01:50:52.800><c> a</c><01:50:52.880><c> million</c><01:50:53.440><c> to</c><01:50:53.599><c> every</c><01:50:53.760><c> single</c><01:50:54.080><c> number</c>

01:50:54.310 --> 01:50:54.320 align:start position:0%
plus a million to every single number
 

01:50:54.320 --> 01:50:56.390 align:start position:0%
plus a million to every single number
here<01:50:55.040><c> you</c><01:50:55.199><c> can</c><01:50:55.360><c> see</c><01:50:55.599><c> how</c>

01:50:56.390 --> 01:50:56.400 align:start position:0%
here you can see how
 

01:50:56.400 --> 01:50:58.390 align:start position:0%
here you can see how
the<01:50:56.719><c> row</c><01:50:57.119><c> and</c><01:50:57.280><c> its</c><01:50:57.360><c> probability</c><01:50:57.920><c> then</c><01:50:58.080><c> when</c><01:50:58.320><c> we</c>

01:50:58.390 --> 01:50:58.400 align:start position:0%
the row and its probability then when we
 

01:50:58.400 --> 01:51:00.149 align:start position:0%
the row and its probability then when we
divide<01:50:59.040><c> is</c><01:50:59.199><c> just</c><01:50:59.360><c> going</c><01:50:59.520><c> to</c><01:50:59.599><c> become</c><01:50:59.840><c> more</c><01:51:00.000><c> and</c>

01:51:00.149 --> 01:51:00.159 align:start position:0%
divide is just going to become more and
 

01:51:00.159 --> 01:51:02.950 align:start position:0%
divide is just going to become more and
more<01:51:00.400><c> close</c><01:51:00.639><c> to</c><01:51:00.960><c> exactly</c><01:51:01.440><c> even</c><01:51:02.000><c> probability</c>

01:51:02.950 --> 01:51:02.960 align:start position:0%
more close to exactly even probability
 

01:51:02.960 --> 01:51:05.109 align:start position:0%
more close to exactly even probability
uniform<01:51:03.360><c> distribution</c>

01:51:05.109 --> 01:51:05.119 align:start position:0%
uniform distribution
 

01:51:05.119 --> 01:51:06.550 align:start position:0%
uniform distribution
it<01:51:05.280><c> turns</c><01:51:05.520><c> out</c><01:51:05.679><c> that</c><01:51:05.920><c> the</c><01:51:06.000><c> gradient</c><01:51:06.320><c> based</c>

01:51:06.550 --> 01:51:06.560 align:start position:0%
it turns out that the gradient based
 

01:51:06.560 --> 01:51:10.790 align:start position:0%
it turns out that the gradient based
framework<01:51:07.199><c> has</c><01:51:07.440><c> an</c><01:51:07.599><c> equivalent</c><01:51:08.480><c> to</c><01:51:09.119><c> smoothing</c>

01:51:10.790 --> 01:51:10.800 align:start position:0%
framework has an equivalent to smoothing
 

01:51:10.800 --> 01:51:13.109 align:start position:0%
framework has an equivalent to smoothing
in<01:51:10.880><c> particular</c>

01:51:13.109 --> 01:51:13.119 align:start position:0%
in particular
 

01:51:13.119 --> 01:51:15.830 align:start position:0%
in particular
think<01:51:13.360><c> through</c><01:51:13.599><c> these</c><01:51:14.159><c> w's</c><01:51:14.719><c> here</c>

01:51:15.830 --> 01:51:15.840 align:start position:0%
think through these w's here
 

01:51:15.840 --> 01:51:18.470 align:start position:0%
think through these w's here
which<01:51:16.080><c> we</c><01:51:16.400><c> initialized</c><01:51:16.960><c> randomly</c>

01:51:18.470 --> 01:51:18.480 align:start position:0%
which we initialized randomly
 

01:51:18.480 --> 01:51:20.070 align:start position:0%
which we initialized randomly
we<01:51:18.639><c> could</c><01:51:18.800><c> also</c><01:51:19.040><c> think</c><01:51:19.280><c> about</c><01:51:19.440><c> initializing</c>

01:51:20.070 --> 01:51:20.080 align:start position:0%
we could also think about initializing
 

01:51:20.080 --> 01:51:22.070 align:start position:0%
we could also think about initializing
w's<01:51:20.639><c> to</c><01:51:20.719><c> be</c><01:51:20.960><c> zero</c>

01:51:22.070 --> 01:51:22.080 align:start position:0%
w's to be zero
 

01:51:22.080 --> 01:51:25.910 align:start position:0%
w's to be zero
if<01:51:22.320><c> all</c><01:51:22.480><c> the</c><01:51:22.639><c> entries</c><01:51:23.040><c> of</c><01:51:23.119><c> w</c><01:51:23.520><c> are</c><01:51:23.679><c> zero</c>

01:51:25.910 --> 01:51:25.920 align:start position:0%
if all the entries of w are zero
 

01:51:25.920 --> 01:51:27.510 align:start position:0%
if all the entries of w are zero
then<01:51:26.080><c> you'll</c><01:51:26.239><c> see</c><01:51:26.400><c> that</c><01:51:26.560><c> logits</c><01:51:27.040><c> will</c><01:51:27.199><c> become</c>

01:51:27.510 --> 01:51:27.520 align:start position:0%
then you'll see that logits will become
 

01:51:27.520 --> 01:51:28.709 align:start position:0%
then you'll see that logits will become
all<01:51:27.679><c> zero</c>

01:51:28.709 --> 01:51:28.719 align:start position:0%
all zero
 

01:51:28.719 --> 01:51:30.149 align:start position:0%
all zero
and<01:51:28.800><c> then</c><01:51:29.040><c> exponentiating</c><01:51:29.599><c> those</c><01:51:29.760><c> logics</c>

01:51:30.149 --> 01:51:30.159 align:start position:0%
and then exponentiating those logics
 

01:51:30.159 --> 01:51:32.070 align:start position:0%
and then exponentiating those logics
becomes<01:51:30.480><c> all</c><01:51:30.719><c> one</c>

01:51:32.070 --> 01:51:32.080 align:start position:0%
becomes all one
 

01:51:32.080 --> 01:51:33.830 align:start position:0%
becomes all one
and<01:51:32.159><c> then</c><01:51:32.639><c> the</c><01:51:32.800><c> probabilities</c><01:51:33.440><c> turned</c><01:51:33.679><c> out</c><01:51:33.760><c> to</c>

01:51:33.830 --> 01:51:33.840 align:start position:0%
and then the probabilities turned out to
 

01:51:33.840 --> 01:51:35.669 align:start position:0%
and then the probabilities turned out to
be<01:51:33.920><c> exactly</c><01:51:34.400><c> uniform</c>

01:51:35.669 --> 01:51:35.679 align:start position:0%
be exactly uniform
 

01:51:35.679 --> 01:51:37.990 align:start position:0%
be exactly uniform
so<01:51:35.840><c> basically</c><01:51:36.159><c> when</c><01:51:36.400><c> w's</c><01:51:36.880><c> are</c><01:51:37.119><c> all</c><01:51:37.520><c> equal</c><01:51:37.840><c> to</c>

01:51:37.990 --> 01:51:38.000 align:start position:0%
so basically when w's are all equal to
 

01:51:38.000 --> 01:51:41.189 align:start position:0%
so basically when w's are all equal to
each<01:51:38.159><c> other</c><01:51:38.560><c> or</c><01:51:38.880><c> say</c><01:51:39.119><c> especially</c><01:51:39.679><c> zero</c>

01:51:41.189 --> 01:51:41.199 align:start position:0%
each other or say especially zero
 

01:51:41.199 --> 01:51:42.629 align:start position:0%
each other or say especially zero
then<01:51:41.760><c> the</c><01:51:41.920><c> probabilities</c><01:51:42.400><c> come</c><01:51:42.560><c> out</c>

01:51:42.629 --> 01:51:42.639 align:start position:0%
then the probabilities come out
 

01:51:42.639 --> 01:51:44.390 align:start position:0%
then the probabilities come out
completely<01:51:43.040><c> uniform</c>

01:51:44.390 --> 01:51:44.400 align:start position:0%
completely uniform
 

01:51:44.400 --> 01:51:45.430 align:start position:0%
completely uniform
so

01:51:45.430 --> 01:51:45.440 align:start position:0%
so
 

01:51:45.440 --> 01:51:49.189 align:start position:0%
so
trying<01:51:45.760><c> to</c><01:51:45.920><c> incentivize</c><01:51:46.639><c> w</c><01:51:47.040><c> to</c><01:51:47.199><c> be</c><01:51:47.360><c> near</c><01:51:47.920><c> zero</c>

01:51:49.189 --> 01:51:49.199 align:start position:0%
trying to incentivize w to be near zero
 

01:51:49.199 --> 01:51:51.830 align:start position:0%
trying to incentivize w to be near zero
is<01:51:49.360><c> basically</c><01:51:50.080><c> equivalent</c><01:51:51.119><c> to</c>

01:51:51.830 --> 01:51:51.840 align:start position:0%
is basically equivalent to
 

01:51:51.840 --> 01:51:53.430 align:start position:0%
is basically equivalent to
label<01:51:52.080><c> smoothing</c><01:51:52.800><c> and</c><01:51:52.960><c> the</c><01:51:53.040><c> more</c><01:51:53.280><c> you</c>

01:51:53.430 --> 01:51:53.440 align:start position:0%
label smoothing and the more you
 

01:51:53.440 --> 01:51:55.430 align:start position:0%
label smoothing and the more you
incentivize<01:51:54.080><c> that</c><01:51:54.239><c> in</c><01:51:54.400><c> the</c><01:51:54.480><c> loss</c><01:51:54.719><c> function</c>

01:51:55.430 --> 01:51:55.440 align:start position:0%
incentivize that in the loss function
 

01:51:55.440 --> 01:51:57.350 align:start position:0%
incentivize that in the loss function
the<01:51:55.599><c> more</c><01:51:56.159><c> smooth</c><01:51:56.719><c> distribution</c><01:51:57.280><c> you're</c>

01:51:57.350 --> 01:51:57.360 align:start position:0%
the more smooth distribution you're
 

01:51:57.360 --> 01:51:58.870 align:start position:0%
the more smooth distribution you're
going<01:51:57.520><c> to</c><01:51:57.679><c> achieve</c>

01:51:58.870 --> 01:51:58.880 align:start position:0%
going to achieve
 

01:51:58.880 --> 01:52:00.070 align:start position:0%
going to achieve
so<01:51:59.040><c> this</c><01:51:59.199><c> brings</c><01:51:59.440><c> us</c><01:51:59.520><c> to</c><01:51:59.679><c> something</c><01:51:59.920><c> that's</c>

01:52:00.070 --> 01:52:00.080 align:start position:0%
so this brings us to something that's
 

01:52:00.080 --> 01:52:00.830 align:start position:0%
so this brings us to something that's
called

01:52:00.830 --> 01:52:00.840 align:start position:0%
called
 

01:52:00.840 --> 01:52:02.870 align:start position:0%
called
regularization<01:52:01.920><c> where</c><01:52:02.080><c> we</c><01:52:02.239><c> can</c><01:52:02.400><c> actually</c>

01:52:02.870 --> 01:52:02.880 align:start position:0%
regularization where we can actually
 

01:52:02.880 --> 01:52:04.950 align:start position:0%
regularization where we can actually
augment<01:52:03.360><c> the</c><01:52:03.520><c> loss</c><01:52:03.760><c> function</c><01:52:04.239><c> to</c><01:52:04.400><c> have</c><01:52:04.719><c> a</c>

01:52:04.950 --> 01:52:04.960 align:start position:0%
augment the loss function to have a
 

01:52:04.960 --> 01:52:06.470 align:start position:0%
augment the loss function to have a
small<01:52:05.199><c> component</c><01:52:05.840><c> that</c><01:52:05.920><c> we</c><01:52:06.080><c> call</c><01:52:06.400><c> a</c>

01:52:06.470 --> 01:52:06.480 align:start position:0%
small component that we call a
 

01:52:06.480 --> 01:52:08.950 align:start position:0%
small component that we call a
regularization<01:52:07.280><c> loss</c>

01:52:08.950 --> 01:52:08.960 align:start position:0%
regularization loss
 

01:52:08.960 --> 01:52:10.149 align:start position:0%
regularization loss
in<01:52:09.040><c> particular</c><01:52:09.360><c> what</c><01:52:09.520><c> we're</c><01:52:09.599><c> going</c><01:52:09.760><c> to</c><01:52:09.840><c> do</c><01:52:10.000><c> is</c>

01:52:10.149 --> 01:52:10.159 align:start position:0%
in particular what we're going to do is
 

01:52:10.159 --> 01:52:12.390 align:start position:0%
in particular what we're going to do is
we<01:52:10.239><c> can</c><01:52:10.400><c> take</c><01:52:10.639><c> w</c><01:52:11.520><c> and</c><01:52:11.679><c> we</c><01:52:11.760><c> can</c><01:52:11.920><c> for</c><01:52:12.080><c> example</c>

01:52:12.390 --> 01:52:12.400 align:start position:0%
we can take w and we can for example
 

01:52:12.400 --> 01:52:14.550 align:start position:0%
we can take w and we can for example
square<01:52:12.719><c> all</c><01:52:12.880><c> of</c><01:52:13.040><c> its</c><01:52:13.199><c> entries</c>

01:52:14.550 --> 01:52:14.560 align:start position:0%
square all of its entries
 

01:52:14.560 --> 01:52:17.750 align:start position:0%
square all of its entries
and<01:52:14.719><c> then</c><01:52:14.960><c> we</c><01:52:15.199><c> can</c><01:52:15.679><c> um</c><01:52:16.239><c> whoops</c>

01:52:17.750 --> 01:52:17.760 align:start position:0%
and then we can um whoops
 

01:52:17.760 --> 01:52:18.950 align:start position:0%
and then we can um whoops
sorry<01:52:18.000><c> about</c><01:52:18.159><c> that</c>

01:52:18.950 --> 01:52:18.960 align:start position:0%
sorry about that
 

01:52:18.960 --> 01:52:20.790 align:start position:0%
sorry about that
we<01:52:19.040><c> can</c><01:52:19.199><c> take</c><01:52:19.440><c> all</c><01:52:19.599><c> the</c><01:52:19.840><c> entries</c><01:52:20.159><c> of</c><01:52:20.320><c> w</c><01:52:20.639><c> and</c><01:52:20.719><c> we</c>

01:52:20.790 --> 01:52:20.800 align:start position:0%
we can take all the entries of w and we
 

01:52:20.800 --> 01:52:23.510 align:start position:0%
we can take all the entries of w and we
can<01:52:20.960><c> sum</c><01:52:21.199><c> them</c>

01:52:23.510 --> 01:52:23.520 align:start position:0%
 
 

01:52:23.520 --> 01:52:25.750 align:start position:0%
 
and<01:52:23.760><c> because</c><01:52:24.080><c> we're</c><01:52:24.320><c> squaring</c><01:52:25.199><c> uh</c><01:52:25.440><c> there</c><01:52:25.599><c> will</c>

01:52:25.750 --> 01:52:25.760 align:start position:0%
and because we're squaring uh there will
 

01:52:25.760 --> 01:52:28.229 align:start position:0%
and because we're squaring uh there will
be<01:52:25.920><c> no</c><01:52:26.159><c> signs</c><01:52:26.639><c> anymore</c><01:52:27.360><c> um</c>

01:52:28.229 --> 01:52:28.239 align:start position:0%
be no signs anymore um
 

01:52:28.239 --> 01:52:29.830 align:start position:0%
be no signs anymore um
negatives<01:52:28.639><c> and</c><01:52:28.719><c> positives</c><01:52:29.119><c> all</c><01:52:29.280><c> get</c><01:52:29.440><c> squashed</c>

01:52:29.830 --> 01:52:29.840 align:start position:0%
negatives and positives all get squashed
 

01:52:29.840 --> 01:52:31.430 align:start position:0%
negatives and positives all get squashed
to<01:52:30.000><c> be</c><01:52:30.159><c> positive</c><01:52:30.560><c> numbers</c>

01:52:31.430 --> 01:52:31.440 align:start position:0%
to be positive numbers
 

01:52:31.440 --> 01:52:33.750 align:start position:0%
to be positive numbers
and<01:52:31.599><c> then</c><01:52:31.920><c> the</c><01:52:32.080><c> way</c><01:52:32.239><c> this</c><01:52:32.480><c> works</c><01:52:32.800><c> is</c><01:52:33.520><c> you</c>

01:52:33.750 --> 01:52:33.760 align:start position:0%
and then the way this works is you
 

01:52:33.760 --> 01:52:36.229 align:start position:0%
and then the way this works is you
achieve<01:52:34.159><c> zero</c><01:52:34.560><c> loss</c><01:52:34.960><c> if</c><01:52:35.119><c> w</c><01:52:35.599><c> is</c><01:52:35.679><c> exactly</c><01:52:36.080><c> or</c>

01:52:36.229 --> 01:52:36.239 align:start position:0%
achieve zero loss if w is exactly or
 

01:52:36.239 --> 01:52:39.430 align:start position:0%
achieve zero loss if w is exactly or
zero<01:52:37.040><c> but</c><01:52:37.280><c> if</c><01:52:37.360><c> w</c><01:52:37.760><c> has</c><01:52:37.920><c> non-zero</c><01:52:38.480><c> numbers</c><01:52:39.119><c> you</c>

01:52:39.430 --> 01:52:39.440 align:start position:0%
zero but if w has non-zero numbers you
 

01:52:39.440 --> 01:52:41.109 align:start position:0%
zero but if w has non-zero numbers you
accumulate<01:52:39.920><c> loss</c>

01:52:41.109 --> 01:52:41.119 align:start position:0%
accumulate loss
 

01:52:41.119 --> 01:52:42.790 align:start position:0%
accumulate loss
and<01:52:41.280><c> so</c><01:52:41.440><c> we</c><01:52:41.520><c> can</c><01:52:41.679><c> actually</c><01:52:42.080><c> take</c><01:52:42.239><c> this</c><01:52:42.560><c> and</c><01:52:42.719><c> we</c>

01:52:42.790 --> 01:52:42.800 align:start position:0%
and so we can actually take this and we
 

01:52:42.800 --> 01:52:44.870 align:start position:0%
and so we can actually take this and we
can<01:52:43.040><c> add</c><01:52:43.280><c> it</c><01:52:43.440><c> on</c><01:52:43.840><c> here</c>

01:52:44.870 --> 01:52:44.880 align:start position:0%
can add it on here
 

01:52:44.880 --> 01:52:48.790 align:start position:0%
can add it on here
so<01:52:45.520><c> we</c><01:52:45.679><c> can</c><01:52:45.840><c> do</c><01:52:46.080><c> something</c><01:52:46.320><c> like</c><01:52:46.560><c> loss</c><01:52:47.440><c> plus</c>

01:52:48.790 --> 01:52:48.800 align:start position:0%
so we can do something like loss plus
 

01:52:48.800 --> 01:52:50.390 align:start position:0%
so we can do something like loss plus
w<01:52:49.280><c> square</c>

01:52:50.390 --> 01:52:50.400 align:start position:0%
w square
 

01:52:50.400 --> 01:52:51.910 align:start position:0%
w square
dot<01:52:50.719><c> sum</c>

01:52:51.910 --> 01:52:51.920 align:start position:0%
dot sum
 

01:52:51.920 --> 01:52:53.589 align:start position:0%
dot sum
or<01:52:52.080><c> let's</c><01:52:52.400><c> actually</c><01:52:52.719><c> instead</c><01:52:52.960><c> of</c><01:52:53.119><c> sum</c><01:52:53.360><c> let's</c>

01:52:53.589 --> 01:52:53.599 align:start position:0%
or let's actually instead of sum let's
 

01:52:53.599 --> 01:52:55.430 align:start position:0%
or let's actually instead of sum let's
take<01:52:53.840><c> a</c><01:52:54.000><c> mean</c><01:52:54.400><c> because</c><01:52:54.560><c> otherwise</c><01:52:54.960><c> the</c><01:52:55.119><c> sum</c>

01:52:55.430 --> 01:52:55.440 align:start position:0%
take a mean because otherwise the sum
 

01:52:55.440 --> 01:52:57.430 align:start position:0%
take a mean because otherwise the sum
gets<01:52:55.760><c> too</c><01:52:56.000><c> large</c>

01:52:57.430 --> 01:52:57.440 align:start position:0%
gets too large
 

01:52:57.440 --> 01:52:58.870 align:start position:0%
gets too large
so<01:52:57.679><c> mean</c><01:52:57.920><c> is</c><01:52:58.000><c> like</c><01:52:58.159><c> a</c><01:52:58.239><c> little</c><01:52:58.400><c> bit</c><01:52:58.480><c> more</c>

01:52:58.870 --> 01:52:58.880 align:start position:0%
so mean is like a little bit more
 

01:52:58.880 --> 01:53:01.270 align:start position:0%
so mean is like a little bit more
manageable

01:53:01.270 --> 01:53:01.280 align:start position:0%
manageable
 

01:53:01.280 --> 01:53:02.950 align:start position:0%
manageable
and<01:53:01.440><c> then</c><01:53:01.679><c> we</c><01:53:01.760><c> have</c><01:53:01.920><c> a</c><01:53:02.000><c> regularization</c><01:53:02.719><c> loss</c>

01:53:02.950 --> 01:53:02.960 align:start position:0%
and then we have a regularization loss
 

01:53:02.960 --> 01:53:05.510 align:start position:0%
and then we have a regularization loss
here<01:53:03.599><c> say</c><01:53:03.840><c> 0.01</c><01:53:04.639><c> times</c>

01:53:05.510 --> 01:53:05.520 align:start position:0%
here say 0.01 times
 

01:53:05.520 --> 01:53:06.709 align:start position:0%
here say 0.01 times
or<01:53:05.679><c> something</c><01:53:05.920><c> like</c><01:53:06.080><c> that</c><01:53:06.239><c> you</c><01:53:06.400><c> can</c><01:53:06.480><c> choose</c>

01:53:06.709 --> 01:53:06.719 align:start position:0%
or something like that you can choose
 

01:53:06.719 --> 01:53:09.270 align:start position:0%
or something like that you can choose
the<01:53:06.800><c> regularization</c><01:53:07.599><c> strength</c>

01:53:09.270 --> 01:53:09.280 align:start position:0%
the regularization strength
 

01:53:09.280 --> 01:53:12.229 align:start position:0%
the regularization strength
and<01:53:09.360><c> then</c><01:53:09.599><c> we</c><01:53:09.679><c> can</c><01:53:09.840><c> just</c><01:53:10.080><c> optimize</c><01:53:10.840><c> this</c><01:53:12.080><c> and</c>

01:53:12.229 --> 01:53:12.239 align:start position:0%
and then we can just optimize this and
 

01:53:12.239 --> 01:53:14.390 align:start position:0%
and then we can just optimize this and
now<01:53:12.560><c> this</c><01:53:12.800><c> optimization</c><01:53:13.520><c> actually</c><01:53:13.760><c> has</c><01:53:14.000><c> two</c>

01:53:14.390 --> 01:53:14.400 align:start position:0%
now this optimization actually has two
 

01:53:14.400 --> 01:53:16.390 align:start position:0%
now this optimization actually has two
components<01:53:15.280><c> not</c><01:53:15.520><c> only</c><01:53:15.679><c> is</c><01:53:15.840><c> it</c><01:53:15.920><c> trying</c><01:53:16.080><c> to</c><01:53:16.159><c> make</c>

01:53:16.390 --> 01:53:16.400 align:start position:0%
components not only is it trying to make
 

01:53:16.400 --> 01:53:18.550 align:start position:0%
components not only is it trying to make
all<01:53:16.480><c> the</c><01:53:16.639><c> probabilities</c><01:53:17.360><c> work</c><01:53:17.679><c> out</c><01:53:18.239><c> but</c><01:53:18.400><c> in</c>

01:53:18.550 --> 01:53:18.560 align:start position:0%
all the probabilities work out but in
 

01:53:18.560 --> 01:53:19.830 align:start position:0%
all the probabilities work out but in
addition<01:53:18.960><c> to</c><01:53:19.040><c> that</c><01:53:19.199><c> there's</c><01:53:19.440><c> an</c><01:53:19.520><c> additional</c>

01:53:19.830 --> 01:53:19.840 align:start position:0%
addition to that there's an additional
 

01:53:19.840 --> 01:53:22.070 align:start position:0%
addition to that there's an additional
component<01:53:20.239><c> that</c><01:53:20.400><c> simultaneously</c><01:53:21.199><c> tries</c><01:53:21.440><c> to</c>

01:53:22.070 --> 01:53:22.080 align:start position:0%
component that simultaneously tries to
 

01:53:22.080 --> 01:53:24.709 align:start position:0%
component that simultaneously tries to
make<01:53:22.320><c> all</c><01:53:22.480><c> w's</c><01:53:22.880><c> be</c><01:53:23.040><c> zero</c><01:53:23.840><c> because</c><01:53:24.080><c> if</c><01:53:24.239><c> w's</c><01:53:24.639><c> are</c>

01:53:24.709 --> 01:53:24.719 align:start position:0%
make all w's be zero because if w's are
 

01:53:24.719 --> 01:53:26.470 align:start position:0%
make all w's be zero because if w's are
non-zero<01:53:25.199><c> you</c><01:53:25.360><c> feel</c><01:53:25.599><c> a</c><01:53:25.679><c> loss</c><01:53:26.159><c> and</c><01:53:26.320><c> so</c>

01:53:26.470 --> 01:53:26.480 align:start position:0%
non-zero you feel a loss and so
 

01:53:26.480 --> 01:53:28.470 align:start position:0%
non-zero you feel a loss and so
minimizing<01:53:27.040><c> this</c><01:53:27.440><c> the</c><01:53:27.599><c> only</c><01:53:27.760><c> way</c><01:53:27.920><c> to</c><01:53:28.159><c> achieve</c>

01:53:28.470 --> 01:53:28.480 align:start position:0%
minimizing this the only way to achieve
 

01:53:28.480 --> 01:53:30.629 align:start position:0%
minimizing this the only way to achieve
that<01:53:28.719><c> is</c><01:53:28.960><c> for</c><01:53:29.119><c> w</c><01:53:29.440><c> to</c><01:53:29.520><c> be</c><01:53:29.599><c> zero</c>

01:53:30.629 --> 01:53:30.639 align:start position:0%
that is for w to be zero
 

01:53:30.639 --> 01:53:32.470 align:start position:0%
that is for w to be zero
and<01:53:30.800><c> so</c><01:53:31.360><c> you</c><01:53:31.520><c> can</c><01:53:31.679><c> think</c><01:53:31.840><c> of</c><01:53:31.920><c> this</c><01:53:32.080><c> as</c><01:53:32.239><c> adding</c>

01:53:32.470 --> 01:53:32.480 align:start position:0%
and so you can think of this as adding
 

01:53:32.480 --> 01:53:34.629 align:start position:0%
and so you can think of this as adding
like<01:53:32.719><c> a</c><01:53:32.800><c> spring</c><01:53:33.199><c> force</c><01:53:33.760><c> or</c><01:53:33.920><c> like</c><01:53:34.080><c> a</c><01:53:34.159><c> gravity</c>

01:53:34.629 --> 01:53:34.639 align:start position:0%
like a spring force or like a gravity
 

01:53:34.639 --> 01:53:38.310 align:start position:0%
like a spring force or like a gravity
force<01:53:35.360><c> that</c><01:53:35.599><c> that</c><01:53:35.920><c> pushes</c><01:53:36.400><c> w</c><01:53:36.719><c> to</c><01:53:36.800><c> be</c><01:53:36.960><c> zero</c><01:53:37.760><c> so</c><01:53:37.920><c> w</c>

01:53:38.310 --> 01:53:38.320 align:start position:0%
force that that pushes w to be zero so w
 

01:53:38.320 --> 01:53:39.990 align:start position:0%
force that that pushes w to be zero so w
wants<01:53:38.560><c> to</c><01:53:38.639><c> be</c><01:53:38.800><c> zero</c><01:53:39.280><c> and</c><01:53:39.360><c> the</c><01:53:39.520><c> probabilities</c>

01:53:39.990 --> 01:53:40.000 align:start position:0%
wants to be zero and the probabilities
 

01:53:40.000 --> 01:53:41.990 align:start position:0%
wants to be zero and the probabilities
want<01:53:40.159><c> to</c><01:53:40.239><c> be</c><01:53:40.400><c> uniform</c><01:53:41.360><c> but</c><01:53:41.520><c> they</c><01:53:41.760><c> also</c>

01:53:41.990 --> 01:53:42.000 align:start position:0%
want to be uniform but they also
 

01:53:42.000 --> 01:53:44.229 align:start position:0%
want to be uniform but they also
simultaneously<01:53:42.719><c> want</c><01:53:42.880><c> to</c><01:53:43.040><c> match</c><01:53:43.440><c> up</c><01:53:43.760><c> your</c>

01:53:44.229 --> 01:53:44.239 align:start position:0%
simultaneously want to match up your
 

01:53:44.239 --> 01:53:46.310 align:start position:0%
simultaneously want to match up your
your<01:53:44.560><c> probabilities</c><01:53:45.520><c> as</c><01:53:45.679><c> indicated</c><01:53:46.080><c> by</c><01:53:46.239><c> the</c>

01:53:46.310 --> 01:53:46.320 align:start position:0%
your probabilities as indicated by the
 

01:53:46.320 --> 01:53:47.350 align:start position:0%
your probabilities as indicated by the
data

01:53:47.350 --> 01:53:47.360 align:start position:0%
data
 

01:53:47.360 --> 01:53:49.189 align:start position:0%
data
and<01:53:47.599><c> so</c><01:53:48.239><c> the</c><01:53:48.480><c> strength</c><01:53:48.960><c> of</c><01:53:49.040><c> this</c>

01:53:49.189 --> 01:53:49.199 align:start position:0%
and so the strength of this
 

01:53:49.199 --> 01:53:52.629 align:start position:0%
and so the strength of this
regularization<01:53:50.639><c> is</c><01:53:50.880><c> exactly</c><01:53:51.360><c> controlling</c>

01:53:52.629 --> 01:53:52.639 align:start position:0%
regularization is exactly controlling
 

01:53:52.639 --> 01:53:54.390 align:start position:0%
regularization is exactly controlling
the<01:53:52.800><c> amount</c><01:53:53.040><c> of</c><01:53:53.280><c> counts</c>

01:53:54.390 --> 01:53:54.400 align:start position:0%
the amount of counts
 

01:53:54.400 --> 01:53:57.189 align:start position:0%
the amount of counts
that<01:53:54.560><c> you</c><01:53:54.800><c> add</c><01:53:55.119><c> here</c>

01:53:57.189 --> 01:53:57.199 align:start position:0%
that you add here
 

01:53:57.199 --> 01:53:59.350 align:start position:0%
that you add here
adding<01:53:57.679><c> a</c><01:53:57.760><c> lot</c><01:53:58.000><c> more</c><01:53:58.320><c> counts</c>

01:53:59.350 --> 01:53:59.360 align:start position:0%
adding a lot more counts
 

01:53:59.360 --> 01:54:00.629 align:start position:0%
adding a lot more counts
here

01:54:00.629 --> 01:54:00.639 align:start position:0%
here
 

01:54:00.639 --> 01:54:02.790 align:start position:0%
here
corresponds<01:54:01.280><c> to</c>

01:54:02.790 --> 01:54:02.800 align:start position:0%
corresponds to
 

01:54:02.800 --> 01:54:04.629 align:start position:0%
corresponds to
increasing<01:54:03.280><c> this</c><01:54:03.520><c> number</c>

01:54:04.629 --> 01:54:04.639 align:start position:0%
increasing this number
 

01:54:04.639 --> 01:54:06.470 align:start position:0%
increasing this number
because<01:54:04.880><c> the</c><01:54:04.960><c> more</c><01:54:05.199><c> you</c><01:54:05.360><c> increase</c><01:54:05.760><c> it</c><01:54:06.320><c> the</c>

01:54:06.470 --> 01:54:06.480 align:start position:0%
because the more you increase it the
 

01:54:06.480 --> 01:54:07.990 align:start position:0%
because the more you increase it the
more<01:54:06.800><c> this</c><01:54:07.040><c> part</c><01:54:07.199><c> of</c><01:54:07.280><c> the</c><01:54:07.360><c> loss</c><01:54:07.599><c> function</c>

01:54:07.990 --> 01:54:08.000 align:start position:0%
more this part of the loss function
 

01:54:08.000 --> 01:54:10.870 align:start position:0%
more this part of the loss function
dominates<01:54:08.560><c> this</c><01:54:08.800><c> part</c><01:54:09.520><c> and</c><01:54:09.679><c> the</c><01:54:09.840><c> more</c><01:54:10.480><c> these</c>

01:54:10.870 --> 01:54:10.880 align:start position:0%
dominates this part and the more these
 

01:54:10.880 --> 01:54:13.589 align:start position:0%
dominates this part and the more these
these<01:54:11.119><c> weights</c><01:54:11.440><c> will</c><01:54:11.679><c> un</c><01:54:11.840><c> be</c><01:54:12.080><c> unable</c><01:54:12.560><c> to</c><01:54:12.800><c> grow</c>

01:54:13.589 --> 01:54:13.599 align:start position:0%
these weights will un be unable to grow
 

01:54:13.599 --> 01:54:15.430 align:start position:0%
these weights will un be unable to grow
because<01:54:13.920><c> as</c><01:54:14.080><c> they</c><01:54:14.239><c> grow</c>

01:54:15.430 --> 01:54:15.440 align:start position:0%
because as they grow
 

01:54:15.440 --> 01:54:18.310 align:start position:0%
because as they grow
they<01:54:15.760><c> uh</c><01:54:16.000><c> accumulate</c><01:54:16.480><c> way</c><01:54:16.639><c> too</c><01:54:16.800><c> much</c><01:54:16.960><c> loss</c>

01:54:18.310 --> 01:54:18.320 align:start position:0%
they uh accumulate way too much loss
 

01:54:18.320 --> 01:54:21.189 align:start position:0%
they uh accumulate way too much loss
and<01:54:18.560><c> so</c><01:54:19.199><c> if</c><01:54:19.360><c> this</c><01:54:19.599><c> is</c><01:54:19.760><c> strong</c><01:54:20.080><c> enough</c>

01:54:21.189 --> 01:54:21.199 align:start position:0%
and so if this is strong enough
 

01:54:21.199 --> 01:54:23.430 align:start position:0%
and so if this is strong enough
then<01:54:21.520><c> we</c><01:54:21.760><c> are</c><01:54:21.920><c> not</c><01:54:22.159><c> able</c><01:54:22.400><c> to</c><01:54:22.800><c> overcome</c><01:54:23.280><c> the</c>

01:54:23.430 --> 01:54:23.440 align:start position:0%
then we are not able to overcome the
 

01:54:23.440 --> 01:54:26.709 align:start position:0%
then we are not able to overcome the
force<01:54:23.760><c> of</c><01:54:23.920><c> this</c><01:54:24.159><c> loss</c><01:54:24.800><c> and</c><01:54:24.960><c> we</c><01:54:25.119><c> will</c><01:54:25.280><c> never</c>

01:54:26.709 --> 01:54:26.719 align:start position:0%
force of this loss and we will never
 

01:54:26.719 --> 01:54:28.070 align:start position:0%
force of this loss and we will never
and<01:54:26.880><c> basically</c><01:54:27.199><c> everything</c><01:54:27.440><c> will</c><01:54:27.599><c> be</c><01:54:27.679><c> uniform</c>

01:54:28.070 --> 01:54:28.080 align:start position:0%
and basically everything will be uniform
 

01:54:28.080 --> 01:54:29.270 align:start position:0%
and basically everything will be uniform
predictions

01:54:29.270 --> 01:54:29.280 align:start position:0%
predictions
 

01:54:29.280 --> 01:54:30.950 align:start position:0%
predictions
so<01:54:29.440><c> i</c><01:54:29.520><c> thought</c><01:54:29.679><c> that's</c><01:54:29.840><c> kind</c><01:54:30.000><c> of</c><01:54:30.080><c> cool</c><01:54:30.719><c> okay</c>

01:54:30.950 --> 01:54:30.960 align:start position:0%
so i thought that's kind of cool okay
 

01:54:30.960 --> 01:54:33.030 align:start position:0%
so i thought that's kind of cool okay
and<01:54:31.199><c> lastly</c><01:54:31.599><c> before</c><01:54:31.840><c> we</c><01:54:32.000><c> wrap</c><01:54:32.320><c> up</c>

01:54:33.030 --> 01:54:33.040 align:start position:0%
and lastly before we wrap up
 

01:54:33.040 --> 01:54:34.229 align:start position:0%
and lastly before we wrap up
i<01:54:33.199><c> wanted</c><01:54:33.440><c> to</c><01:54:33.520><c> show</c><01:54:33.679><c> you</c><01:54:33.760><c> how</c><01:54:33.920><c> you</c><01:54:34.000><c> would</c>

01:54:34.229 --> 01:54:34.239 align:start position:0%
i wanted to show you how you would
 

01:54:34.239 --> 01:54:36.790 align:start position:0%
i wanted to show you how you would
sample<01:54:34.719><c> from</c><01:54:34.880><c> this</c><01:54:35.119><c> neural</c><01:54:35.440><c> net</c><01:54:35.599><c> model</c>

01:54:36.790 --> 01:54:36.800 align:start position:0%
sample from this neural net model
 

01:54:36.800 --> 01:54:39.270 align:start position:0%
sample from this neural net model
and<01:54:37.360><c> i</c><01:54:37.599><c> copy-pasted</c><01:54:38.239><c> the</c><01:54:38.400><c> sampling</c><01:54:38.880><c> code</c><01:54:39.119><c> from</c>

01:54:39.270 --> 01:54:39.280 align:start position:0%
and i copy-pasted the sampling code from
 

01:54:39.280 --> 01:54:40.709 align:start position:0%
and i copy-pasted the sampling code from
before

01:54:40.709 --> 01:54:40.719 align:start position:0%
before
 

01:54:40.719 --> 01:54:43.270 align:start position:0%
before
where<01:54:41.440><c> remember</c><01:54:42.000><c> that</c><01:54:42.159><c> we</c><01:54:42.639><c> sampled</c><01:54:43.040><c> five</c>

01:54:43.270 --> 01:54:43.280 align:start position:0%
where remember that we sampled five
 

01:54:43.280 --> 01:54:44.229 align:start position:0%
where remember that we sampled five
times

01:54:44.229 --> 01:54:44.239 align:start position:0%
times
 

01:54:44.239 --> 01:54:46.390 align:start position:0%
times
and<01:54:44.480><c> all</c><01:54:44.639><c> we</c><01:54:44.800><c> did</c><01:54:45.040><c> we</c><01:54:45.280><c> start</c><01:54:45.440><c> at</c><01:54:45.599><c> zero</c><01:54:46.159><c> we</c>

01:54:46.390 --> 01:54:46.400 align:start position:0%
and all we did we start at zero we
 

01:54:46.400 --> 01:54:50.470 align:start position:0%
and all we did we start at zero we
grabbed<01:54:47.040><c> the</c><01:54:47.760><c> current</c><01:54:48.239><c> ix</c><01:54:48.719><c> row</c><01:54:49.119><c> of</c><01:54:49.360><c> p</c><01:54:50.239><c> and</c><01:54:50.320><c> that</c>

01:54:50.470 --> 01:54:50.480 align:start position:0%
grabbed the current ix row of p and that
 

01:54:50.480 --> 01:54:52.310 align:start position:0%
grabbed the current ix row of p and that
was<01:54:50.639><c> our</c><01:54:50.800><c> probability</c><01:54:51.440><c> row</c>

01:54:52.310 --> 01:54:52.320 align:start position:0%
was our probability row
 

01:54:52.320 --> 01:54:54.870 align:start position:0%
was our probability row
from<01:54:52.480><c> which</c><01:54:52.719><c> we</c><01:54:52.960><c> sampled</c><01:54:53.520><c> the</c><01:54:53.679><c> next</c><01:54:54.000><c> index</c><01:54:54.719><c> and</c>

01:54:54.870 --> 01:54:54.880 align:start position:0%
from which we sampled the next index and
 

01:54:54.880 --> 01:54:56.709 align:start position:0%
from which we sampled the next index and
just<01:54:55.119><c> accumulated</c><01:54:55.679><c> that</c><01:54:56.000><c> and</c>

01:54:56.709 --> 01:54:56.719 align:start position:0%
just accumulated that and
 

01:54:56.719 --> 01:54:58.870 align:start position:0%
just accumulated that and
break<01:54:57.280><c> when</c><01:54:57.760><c> zero</c>

01:54:58.870 --> 01:54:58.880 align:start position:0%
break when zero
 

01:54:58.880 --> 01:55:00.310 align:start position:0%
break when zero
and<01:54:59.119><c> running</c><01:54:59.440><c> this</c>

01:55:00.310 --> 01:55:00.320 align:start position:0%
and running this
 

01:55:00.320 --> 01:55:02.830 align:start position:0%
and running this
gave<01:55:00.560><c> us</c><01:55:01.119><c> these</c>

01:55:02.830 --> 01:55:02.840 align:start position:0%
gave us these
 

01:55:02.840 --> 01:55:05.510 align:start position:0%
gave us these
results<01:55:03.920><c> still</c><01:55:04.159><c> have</c><01:55:04.480><c> the</c>

01:55:05.510 --> 01:55:05.520 align:start position:0%
results still have the
 

01:55:05.520 --> 01:55:07.589 align:start position:0%
results still have the
p<01:55:05.760><c> in</c><01:55:05.840><c> memory</c><01:55:06.239><c> so</c><01:55:06.400><c> this</c><01:55:06.560><c> is</c><01:55:06.639><c> fine</c>

01:55:07.589 --> 01:55:07.599 align:start position:0%
p in memory so this is fine
 

01:55:07.599 --> 01:55:09.109 align:start position:0%
p in memory so this is fine
now

01:55:09.109 --> 01:55:09.119 align:start position:0%
now
 

01:55:09.119 --> 01:55:11.830 align:start position:0%
now
the<01:55:09.280><c> speed</c><01:55:09.760><c> doesn't</c><01:55:10.000><c> come</c><01:55:10.239><c> from</c><01:55:10.639><c> the</c><01:55:10.800><c> row</c><01:55:11.040><c> of</c><01:55:11.199><c> b</c>

01:55:11.830 --> 01:55:11.840 align:start position:0%
the speed doesn't come from the row of b
 

01:55:11.840 --> 01:55:14.870 align:start position:0%
the speed doesn't come from the row of b
instead<01:55:12.239><c> it</c><01:55:12.320><c> comes</c><01:55:12.480><c> from</c><01:55:12.639><c> this</c><01:55:12.880><c> neural</c><01:55:13.199><c> net</c>

01:55:14.870 --> 01:55:14.880 align:start position:0%
instead it comes from this neural net
 

01:55:14.880 --> 01:55:17.030 align:start position:0%
instead it comes from this neural net
first<01:55:15.199><c> we</c><01:55:15.360><c> take</c><01:55:15.599><c> ix</c>

01:55:17.030 --> 01:55:17.040 align:start position:0%
first we take ix
 

01:55:17.040 --> 01:55:21.030 align:start position:0%
first we take ix
and<01:55:17.199><c> we</c><01:55:17.599><c> encode</c><01:55:18.080><c> it</c><01:55:18.320><c> into</c><01:55:18.639><c> a</c><01:55:18.880><c> one</c><01:55:19.119><c> hot</c><01:55:19.599><c> row</c><01:55:20.400><c> of</c><01:55:20.719><c> x</c>

01:55:21.030 --> 01:55:21.040 align:start position:0%
and we encode it into a one hot row of x
 

01:55:21.040 --> 01:55:22.390 align:start position:0%
and we encode it into a one hot row of x
inc

01:55:22.390 --> 01:55:22.400 align:start position:0%
inc
 

01:55:22.400 --> 01:55:25.109 align:start position:0%
inc
this<01:55:22.719><c> x</c><01:55:22.960><c> inc</c><01:55:23.199><c> multiplies</c><01:55:23.920><c> rw</c>

01:55:25.109 --> 01:55:25.119 align:start position:0%
this x inc multiplies rw
 

01:55:25.119 --> 01:55:26.870 align:start position:0%
this x inc multiplies rw
which<01:55:25.360><c> really</c><01:55:25.599><c> just</c><01:55:25.760><c> plucks</c><01:55:26.159><c> out</c><01:55:26.320><c> the</c><01:55:26.480><c> row</c><01:55:26.719><c> of</c>

01:55:26.870 --> 01:55:26.880 align:start position:0%
which really just plucks out the row of
 

01:55:26.880 --> 01:55:29.350 align:start position:0%
which really just plucks out the row of
w<01:55:27.280><c> corresponding</c><01:55:27.920><c> to</c><01:55:28.320><c> ix</c><01:55:28.880><c> really</c><01:55:29.199><c> that's</c>

01:55:29.350 --> 01:55:29.360 align:start position:0%
w corresponding to ix really that's
 

01:55:29.360 --> 01:55:30.390 align:start position:0%
w corresponding to ix really that's
what's<01:55:29.520><c> happening</c>

01:55:30.390 --> 01:55:30.400 align:start position:0%
what's happening
 

01:55:30.400 --> 01:55:33.109 align:start position:0%
what's happening
and<01:55:30.560><c> that</c><01:55:30.800><c> gets</c><01:55:31.040><c> our</c><01:55:31.199><c> logits</c><01:55:32.239><c> and</c><01:55:32.400><c> then</c><01:55:32.639><c> we</c>

01:55:33.109 --> 01:55:33.119 align:start position:0%
and that gets our logits and then we
 

01:55:33.119 --> 01:55:34.709 align:start position:0%
and that gets our logits and then we
normalize<01:55:33.520><c> those</c><01:55:33.679><c> low</c><01:55:33.920><c> jets</c>

01:55:34.709 --> 01:55:34.719 align:start position:0%
normalize those low jets
 

01:55:34.719 --> 01:55:36.550 align:start position:0%
normalize those low jets
exponentiate<01:55:35.360><c> to</c><01:55:35.440><c> get</c><01:55:35.599><c> counts</c><01:55:36.239><c> and</c><01:55:36.320><c> then</c>

01:55:36.550 --> 01:55:36.560 align:start position:0%
exponentiate to get counts and then
 

01:55:36.560 --> 01:55:39.030 align:start position:0%
exponentiate to get counts and then
normalize<01:55:37.040><c> to</c><01:55:37.199><c> get</c><01:55:37.599><c> uh</c><01:55:37.760><c> the</c><01:55:37.920><c> distribution</c><01:55:38.880><c> and</c>

01:55:39.030 --> 01:55:39.040 align:start position:0%
normalize to get uh the distribution and
 

01:55:39.040 --> 01:55:41.270 align:start position:0%
normalize to get uh the distribution and
then<01:55:39.119><c> we</c><01:55:39.280><c> can</c><01:55:39.520><c> sample</c><01:55:39.760><c> from</c><01:55:39.920><c> the</c><01:55:40.080><c> distribution</c>

01:55:41.270 --> 01:55:41.280 align:start position:0%
then we can sample from the distribution
 

01:55:41.280 --> 01:55:45.109 align:start position:0%
then we can sample from the distribution
so<01:55:41.440><c> if</c><01:55:41.599><c> i</c><01:55:41.679><c> run</c><01:55:41.920><c> this</c>

01:55:45.109 --> 01:55:45.119 align:start position:0%
 
 

01:55:45.119 --> 01:55:47.189 align:start position:0%
 
kind<01:55:45.280><c> of</c><01:55:45.440><c> anticlimactic</c><01:55:46.239><c> or</c><01:55:46.480><c> climatic</c>

01:55:47.189 --> 01:55:47.199 align:start position:0%
kind of anticlimactic or climatic
 

01:55:47.199 --> 01:55:48.870 align:start position:0%
kind of anticlimactic or climatic
depending<01:55:47.599><c> how</c><01:55:47.760><c> you</c><01:55:47.920><c> look</c><01:55:48.080><c> at</c><01:55:48.159><c> it</c><01:55:48.400><c> but</c><01:55:48.560><c> we</c><01:55:48.719><c> get</c>

01:55:48.870 --> 01:55:48.880 align:start position:0%
depending how you look at it but we get
 

01:55:48.880 --> 01:55:50.870 align:start position:0%
depending how you look at it but we get
the<01:55:48.960><c> exact</c><01:55:49.280><c> same</c><01:55:49.440><c> result</c>

01:55:50.870 --> 01:55:50.880 align:start position:0%
the exact same result
 

01:55:50.880 --> 01:55:52.229 align:start position:0%
the exact same result
um

01:55:52.229 --> 01:55:52.239 align:start position:0%
um
 

01:55:52.239 --> 01:55:53.589 align:start position:0%
um
and<01:55:52.320><c> that's</c><01:55:52.560><c> because</c><01:55:52.880><c> this</c><01:55:53.119><c> is</c><01:55:53.280><c> in</c><01:55:53.440><c> the</c>

01:55:53.589 --> 01:55:53.599 align:start position:0%
and that's because this is in the
 

01:55:53.599 --> 01:55:55.669 align:start position:0%
and that's because this is in the
identical<01:55:54.000><c> model</c><01:55:54.560><c> not</c><01:55:54.800><c> only</c><01:55:55.040><c> does</c><01:55:55.199><c> it</c><01:55:55.360><c> achieve</c>

01:55:55.669 --> 01:55:55.679 align:start position:0%
identical model not only does it achieve
 

01:55:55.679 --> 01:55:56.950 align:start position:0%
identical model not only does it achieve
the<01:55:55.760><c> same</c><01:55:56.000><c> loss</c>

01:55:56.950 --> 01:55:56.960 align:start position:0%
the same loss
 

01:55:56.960 --> 01:55:58.070 align:start position:0%
the same loss
but

01:55:58.070 --> 01:55:58.080 align:start position:0%
but
 

01:55:58.080 --> 01:55:59.270 align:start position:0%
but
as<01:55:58.239><c> i</c><01:55:58.320><c> mentioned</c><01:55:58.560><c> these</c><01:55:58.719><c> are</c><01:55:58.800><c> identical</c>

01:55:59.270 --> 01:55:59.280 align:start position:0%
as i mentioned these are identical
 

01:55:59.280 --> 01:56:02.470 align:start position:0%
as i mentioned these are identical
models<01:55:59.760><c> and</c><01:55:59.920><c> this</c><01:56:00.080><c> w</c><01:56:00.880><c> is</c><01:56:01.280><c> the</c><01:56:01.440><c> log</c><01:56:01.760><c> counts</c><01:56:02.239><c> of</c>

01:56:02.470 --> 01:56:02.480 align:start position:0%
models and this w is the log counts of
 

01:56:02.480 --> 01:56:05.109 align:start position:0%
models and this w is the log counts of
what<01:56:02.639><c> we've</c><01:56:02.880><c> estimated</c><01:56:03.360><c> before</c><01:56:04.159><c> but</c><01:56:04.400><c> we</c><01:56:04.639><c> came</c>

01:56:05.109 --> 01:56:05.119 align:start position:0%
what we've estimated before but we came
 

01:56:05.119 --> 01:56:07.350 align:start position:0%
what we've estimated before but we came
to<01:56:05.280><c> this</c><01:56:05.520><c> answer</c><01:56:06.000><c> in</c><01:56:06.080><c> a</c><01:56:06.159><c> very</c><01:56:06.400><c> different</c><01:56:06.800><c> way</c>

01:56:07.350 --> 01:56:07.360 align:start position:0%
to this answer in a very different way
 

01:56:07.360 --> 01:56:08.310 align:start position:0%
to this answer in a very different way
and<01:56:07.520><c> it's</c><01:56:07.599><c> got</c><01:56:07.760><c> a</c><01:56:07.840><c> very</c><01:56:08.080><c> different</c>

01:56:08.310 --> 01:56:08.320 align:start position:0%
and it's got a very different
 

01:56:08.320 --> 01:56:10.310 align:start position:0%
and it's got a very different
interpretation<01:56:09.360><c> but</c><01:56:09.520><c> fundamentally</c><01:56:10.080><c> this</c><01:56:10.239><c> is</c>

01:56:10.310 --> 01:56:10.320 align:start position:0%
interpretation but fundamentally this is
 

01:56:10.320 --> 01:56:11.669 align:start position:0%
interpretation but fundamentally this is
basically<01:56:10.639><c> the</c><01:56:10.719><c> same</c><01:56:10.960><c> model</c><01:56:11.280><c> and</c><01:56:11.360><c> gives</c><01:56:11.599><c> the</c>

01:56:11.669 --> 01:56:11.679 align:start position:0%
basically the same model and gives the
 

01:56:11.679 --> 01:56:14.790 align:start position:0%
basically the same model and gives the
same<01:56:11.920><c> samples</c><01:56:12.320><c> here</c><01:56:13.040><c> and</c><01:56:13.280><c> so</c>

01:56:14.790 --> 01:56:14.800 align:start position:0%
same samples here and so
 

01:56:14.800 --> 01:56:16.149 align:start position:0%
same samples here and so
that's<01:56:15.040><c> kind</c><01:56:15.199><c> of</c><01:56:15.280><c> cool</c><01:56:15.520><c> okay</c><01:56:15.760><c> so</c><01:56:15.920><c> we've</c>

01:56:16.149 --> 01:56:16.159 align:start position:0%
that's kind of cool okay so we've
 

01:56:16.159 --> 01:56:18.149 align:start position:0%
that's kind of cool okay so we've
actually<01:56:16.400><c> covered</c><01:56:16.719><c> a</c><01:56:16.800><c> lot</c><01:56:16.960><c> of</c><01:56:17.119><c> ground</c><01:56:17.920><c> we</c>

01:56:18.149 --> 01:56:18.159 align:start position:0%
actually covered a lot of ground we
 

01:56:18.159 --> 01:56:20.470 align:start position:0%
actually covered a lot of ground we
introduced<01:56:18.719><c> the</c><01:56:18.880><c> bigram</c><01:56:19.679><c> character</c><01:56:20.080><c> level</c>

01:56:20.470 --> 01:56:20.480 align:start position:0%
introduced the bigram character level
 

01:56:20.480 --> 01:56:21.910 align:start position:0%
introduced the bigram character level
language<01:56:20.800><c> model</c>

01:56:21.910 --> 01:56:21.920 align:start position:0%
language model
 

01:56:21.920 --> 01:56:24.070 align:start position:0%
language model
we<01:56:22.159><c> saw</c><01:56:22.480><c> how</c><01:56:22.639><c> we</c><01:56:22.719><c> can</c><01:56:22.960><c> train</c><01:56:23.199><c> the</c><01:56:23.360><c> model</c><01:56:23.840><c> how</c><01:56:24.000><c> we</c>

01:56:24.070 --> 01:56:24.080 align:start position:0%
we saw how we can train the model how we
 

01:56:24.080 --> 01:56:25.910 align:start position:0%
we saw how we can train the model how we
can<01:56:24.320><c> sample</c><01:56:24.639><c> from</c><01:56:24.800><c> the</c><01:56:24.960><c> model</c><01:56:25.360><c> and</c><01:56:25.520><c> how</c><01:56:25.679><c> we</c><01:56:25.760><c> can</c>

01:56:25.910 --> 01:56:25.920 align:start position:0%
can sample from the model and how we can
 

01:56:25.920 --> 01:56:28.070 align:start position:0%
can sample from the model and how we can
evaluate<01:56:26.480><c> the</c><01:56:26.719><c> quality</c><01:56:27.040><c> of</c><01:56:27.119><c> the</c><01:56:27.280><c> model</c><01:56:27.840><c> using</c>

01:56:28.070 --> 01:56:28.080 align:start position:0%
evaluate the quality of the model using
 

01:56:28.080 --> 01:56:30.149 align:start position:0%
evaluate the quality of the model using
the<01:56:28.239><c> negative</c><01:56:28.639><c> log</c><01:56:28.880><c> likelihood</c><01:56:29.360><c> loss</c>

01:56:30.149 --> 01:56:30.159 align:start position:0%
the negative log likelihood loss
 

01:56:30.159 --> 01:56:31.589 align:start position:0%
the negative log likelihood loss
and<01:56:30.239><c> then</c><01:56:30.400><c> we</c><01:56:30.639><c> actually</c><01:56:30.880><c> trained</c><01:56:31.119><c> the</c><01:56:31.199><c> model</c>

01:56:31.589 --> 01:56:31.599 align:start position:0%
and then we actually trained the model
 

01:56:31.599 --> 01:56:33.430 align:start position:0%
and then we actually trained the model
in<01:56:31.760><c> two</c><01:56:32.000><c> completely</c><01:56:32.480><c> different</c><01:56:32.800><c> ways</c><01:56:33.280><c> that</c>

01:56:33.430 --> 01:56:33.440 align:start position:0%
in two completely different ways that
 

01:56:33.440 --> 01:56:34.950 align:start position:0%
in two completely different ways that
actually<01:56:33.760><c> get</c><01:56:33.920><c> the</c><01:56:34.000><c> same</c><01:56:34.239><c> result</c><01:56:34.719><c> and</c><01:56:34.880><c> the</c>

01:56:34.950 --> 01:56:34.960 align:start position:0%
actually get the same result and the
 

01:56:34.960 --> 01:56:36.229 align:start position:0%
actually get the same result and the
same<01:56:35.199><c> model</c>

01:56:36.229 --> 01:56:36.239 align:start position:0%
same model
 

01:56:36.239 --> 01:56:38.629 align:start position:0%
same model
in<01:56:36.400><c> the</c><01:56:36.480><c> first</c><01:56:36.800><c> way</c><01:56:37.199><c> we</c><01:56:37.520><c> just</c><01:56:37.920><c> counted</c><01:56:38.400><c> up</c><01:56:38.560><c> the</c>

01:56:38.629 --> 01:56:38.639 align:start position:0%
in the first way we just counted up the
 

01:56:38.639 --> 01:56:40.149 align:start position:0%
in the first way we just counted up the
frequency<01:56:39.119><c> of</c><01:56:39.199><c> all</c><01:56:39.280><c> the</c><01:56:39.440><c> bigrams</c><01:56:40.080><c> and</c>

01:56:40.149 --> 01:56:40.159 align:start position:0%
frequency of all the bigrams and
 

01:56:40.159 --> 01:56:41.430 align:start position:0%
frequency of all the bigrams and
normalized

01:56:41.430 --> 01:56:41.440 align:start position:0%
normalized
 

01:56:41.440 --> 01:56:44.550 align:start position:0%
normalized
in<01:56:41.599><c> a</c><01:56:41.679><c> second</c><01:56:42.159><c> way</c><01:56:42.800><c> we</c><01:56:43.199><c> used</c><01:56:43.679><c> the</c>

01:56:44.550 --> 01:56:44.560 align:start position:0%
in a second way we used the
 

01:56:44.560 --> 01:56:47.669 align:start position:0%
in a second way we used the
negative<01:56:44.880><c> log</c><01:56:45.119><c> likelihood</c><01:56:45.520><c> loss</c><01:56:46.400><c> as</c><01:56:46.560><c> a</c><01:56:46.719><c> guide</c>

01:56:47.669 --> 01:56:47.679 align:start position:0%
negative log likelihood loss as a guide
 

01:56:47.679 --> 01:56:50.790 align:start position:0%
negative log likelihood loss as a guide
to<01:56:47.920><c> optimizing</c><01:56:48.560><c> the</c><01:56:48.880><c> counts</c><01:56:49.199><c> matrix</c>

01:56:50.790 --> 01:56:50.800 align:start position:0%
to optimizing the counts matrix
 

01:56:50.800 --> 01:56:52.709 align:start position:0%
to optimizing the counts matrix
or<01:56:50.880><c> the</c><01:56:51.040><c> counts</c><01:56:51.360><c> array</c><01:56:51.840><c> so</c><01:56:52.000><c> that</c><01:56:52.159><c> the</c><01:56:52.320><c> loss</c><01:56:52.560><c> is</c>

01:56:52.709 --> 01:56:52.719 align:start position:0%
or the counts array so that the loss is
 

01:56:52.719 --> 01:56:54.950 align:start position:0%
or the counts array so that the loss is
minimized<01:56:53.679><c> in</c><01:56:53.840><c> the</c><01:56:54.080><c> in</c><01:56:54.239><c> a</c><01:56:54.320><c> gradient-based</c>

01:56:54.950 --> 01:56:54.960 align:start position:0%
minimized in the in a gradient-based
 

01:56:54.960 --> 01:56:56.790 align:start position:0%
minimized in the in a gradient-based
framework<01:56:55.760><c> and</c><01:56:55.840><c> we</c><01:56:56.000><c> saw</c><01:56:56.159><c> that</c><01:56:56.320><c> both</c><01:56:56.560><c> of</c><01:56:56.639><c> them</c>

01:56:56.790 --> 01:56:56.800 align:start position:0%
framework and we saw that both of them
 

01:56:56.800 --> 01:56:58.390 align:start position:0%
framework and we saw that both of them
give<01:56:56.960><c> the</c><01:56:57.040><c> same</c><01:56:57.280><c> result</c>

01:56:58.390 --> 01:56:58.400 align:start position:0%
give the same result
 

01:56:58.400 --> 01:57:00.310 align:start position:0%
give the same result
and

01:57:00.310 --> 01:57:00.320 align:start position:0%
and
 

01:57:00.320 --> 01:57:01.350 align:start position:0%
and
that's<01:57:00.639><c> it</c>

01:57:01.350 --> 01:57:01.360 align:start position:0%
that's it
 

01:57:01.360 --> 01:57:02.470 align:start position:0%
that's it
now<01:57:01.520><c> the</c><01:57:01.679><c> second</c><01:57:01.920><c> one</c><01:57:02.080><c> of</c><01:57:02.159><c> these</c><01:57:02.400><c> the</c>

01:57:02.470 --> 01:57:02.480 align:start position:0%
now the second one of these the
 

01:57:02.480 --> 01:57:03.910 align:start position:0%
now the second one of these the
gradient-based<01:57:03.040><c> framework</c><01:57:03.440><c> is</c><01:57:03.599><c> much</c><01:57:03.679><c> more</c>

01:57:03.910 --> 01:57:03.920 align:start position:0%
gradient-based framework is much more
 

01:57:03.920 --> 01:57:06.070 align:start position:0%
gradient-based framework is much more
flexible<01:57:04.880><c> and</c><01:57:05.119><c> right</c><01:57:05.360><c> now</c><01:57:05.599><c> our</c><01:57:05.760><c> neural</c>

01:57:06.070 --> 01:57:06.080 align:start position:0%
flexible and right now our neural
 

01:57:06.080 --> 01:57:08.149 align:start position:0%
flexible and right now our neural
network<01:57:06.560><c> is</c><01:57:06.719><c> super</c><01:57:07.040><c> simple</c><01:57:07.520><c> we're</c><01:57:07.679><c> taking</c><01:57:08.000><c> a</c>

01:57:08.149 --> 01:57:08.159 align:start position:0%
network is super simple we're taking a
 

01:57:08.159 --> 01:57:10.550 align:start position:0%
network is super simple we're taking a
single<01:57:08.800><c> previous</c><01:57:09.199><c> character</c><01:57:10.080><c> and</c><01:57:10.239><c> we're</c>

01:57:10.550 --> 01:57:10.560 align:start position:0%
single previous character and we're
 

01:57:10.560 --> 01:57:12.310 align:start position:0%
single previous character and we're
taking<01:57:10.880><c> it</c><01:57:10.960><c> through</c><01:57:11.119><c> a</c><01:57:11.199><c> single</c><01:57:11.520><c> linear</c><01:57:11.920><c> layer</c>

01:57:12.310 --> 01:57:12.320 align:start position:0%
taking it through a single linear layer
 

01:57:12.320 --> 01:57:13.990 align:start position:0%
taking it through a single linear layer
to<01:57:12.480><c> calculate</c><01:57:12.880><c> the</c><01:57:12.960><c> logits</c>

01:57:13.990 --> 01:57:14.000 align:start position:0%
to calculate the logits
 

01:57:14.000 --> 01:57:16.229 align:start position:0%
to calculate the logits
this<01:57:14.239><c> is</c><01:57:14.320><c> about</c><01:57:14.560><c> to</c><01:57:14.719><c> complexify</c><01:57:15.840><c> so</c><01:57:16.000><c> in</c><01:57:16.080><c> the</c>

01:57:16.229 --> 01:57:16.239 align:start position:0%
this is about to complexify so in the
 

01:57:16.239 --> 01:57:17.750 align:start position:0%
this is about to complexify so in the
follow-up<01:57:16.639><c> videos</c><01:57:17.280><c> we're</c><01:57:17.440><c> going</c><01:57:17.599><c> to</c><01:57:17.679><c> be</c>

01:57:17.750 --> 01:57:17.760 align:start position:0%
follow-up videos we're going to be
 

01:57:17.760 --> 01:57:20.470 align:start position:0%
follow-up videos we're going to be
taking<01:57:18.159><c> more</c><01:57:18.400><c> and</c><01:57:18.560><c> more</c><01:57:18.880><c> of</c><01:57:18.960><c> these</c><01:57:19.119><c> characters</c>

01:57:20.470 --> 01:57:20.480 align:start position:0%
taking more and more of these characters
 

01:57:20.480 --> 01:57:21.830 align:start position:0%
taking more and more of these characters
and<01:57:20.639><c> we're</c><01:57:20.880><c> going</c><01:57:21.040><c> to</c><01:57:21.119><c> be</c><01:57:21.199><c> feeding</c><01:57:21.440><c> them</c><01:57:21.599><c> into</c>

01:57:21.830 --> 01:57:21.840 align:start position:0%
and we're going to be feeding them into
 

01:57:21.840 --> 01:57:23.750 align:start position:0%
and we're going to be feeding them into
a<01:57:21.920><c> neural</c><01:57:22.159><c> net</c><01:57:22.800><c> but</c><01:57:22.960><c> this</c><01:57:23.119><c> neural</c><01:57:23.360><c> net</c><01:57:23.599><c> will</c>

01:57:23.750 --> 01:57:23.760 align:start position:0%
a neural net but this neural net will
 

01:57:23.760 --> 01:57:25.350 align:start position:0%
a neural net but this neural net will
still<01:57:24.000><c> output</c><01:57:24.320><c> the</c><01:57:24.400><c> exact</c><01:57:24.719><c> same</c><01:57:24.880><c> thing</c><01:57:25.199><c> the</c>

01:57:25.350 --> 01:57:25.360 align:start position:0%
still output the exact same thing the
 

01:57:25.360 --> 01:57:27.910 align:start position:0%
still output the exact same thing the
neural<01:57:25.679><c> net</c><01:57:25.840><c> will</c><01:57:26.000><c> output</c><01:57:26.560><c> logits</c>

01:57:27.910 --> 01:57:27.920 align:start position:0%
neural net will output logits
 

01:57:27.920 --> 01:57:29.189 align:start position:0%
neural net will output logits
and<01:57:28.159><c> these</c><01:57:28.400><c> logits</c><01:57:28.800><c> will</c><01:57:28.880><c> still</c><01:57:29.040><c> be</c>

01:57:29.189 --> 01:57:29.199 align:start position:0%
and these logits will still be
 

01:57:29.199 --> 01:57:30.870 align:start position:0%
and these logits will still be
normalized<01:57:29.599><c> in</c><01:57:29.760><c> the</c><01:57:29.840><c> exact</c><01:57:30.080><c> same</c><01:57:30.320><c> way</c><01:57:30.560><c> and</c><01:57:30.719><c> all</c>

01:57:30.870 --> 01:57:30.880 align:start position:0%
normalized in the exact same way and all
 

01:57:30.880 --> 01:57:32.229 align:start position:0%
normalized in the exact same way and all
the<01:57:31.040><c> loss</c><01:57:31.360><c> and</c><01:57:31.520><c> everything</c><01:57:31.840><c> else</c><01:57:32.080><c> and</c><01:57:32.159><c> the</c>

01:57:32.229 --> 01:57:32.239 align:start position:0%
the loss and everything else and the
 

01:57:32.239 --> 01:57:33.669 align:start position:0%
the loss and everything else and the
gradient<01:57:32.800><c> gradient-based</c><01:57:33.280><c> framework</c>

01:57:33.669 --> 01:57:33.679 align:start position:0%
gradient gradient-based framework
 

01:57:33.679 --> 01:57:35.669 align:start position:0%
gradient gradient-based framework
everything<01:57:34.000><c> stays</c><01:57:34.320><c> identical</c><01:57:35.360><c> it's</c><01:57:35.520><c> just</c>

01:57:35.669 --> 01:57:35.679 align:start position:0%
everything stays identical it's just
 

01:57:35.679 --> 01:57:38.550 align:start position:0%
everything stays identical it's just
that<01:57:35.840><c> this</c><01:57:36.080><c> neural</c><01:57:36.320><c> net</c><01:57:36.880><c> will</c><01:57:37.440><c> now</c><01:57:37.679><c> complexify</c>

01:57:38.550 --> 01:57:38.560 align:start position:0%
that this neural net will now complexify
 

01:57:38.560 --> 01:57:40.470 align:start position:0%
that this neural net will now complexify
all<01:57:38.639><c> the</c><01:57:38.800><c> way</c><01:57:38.960><c> to</c><01:57:39.119><c> transformers</c>

01:57:40.470 --> 01:57:40.480 align:start position:0%
all the way to transformers
 

01:57:40.480 --> 01:57:42.229 align:start position:0%
all the way to transformers
so<01:57:41.119><c> that's</c><01:57:41.360><c> gonna</c><01:57:41.520><c> be</c><01:57:41.599><c> pretty</c><01:57:41.840><c> awesome</c><01:57:42.159><c> and</c>

01:57:42.229 --> 01:57:42.239 align:start position:0%
so that's gonna be pretty awesome and
 

01:57:42.239 --> 01:57:46.719 align:start position:0%
so that's gonna be pretty awesome and
i'm<01:57:42.400><c> looking</c><01:57:42.560><c> forward</c><01:57:42.800><c> to</c><01:57:42.960><c> it</c><01:57:43.360><c> for</c><01:57:43.520><c> now</c><01:57:44.000><c> bye</c>

