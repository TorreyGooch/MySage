WEBVTT
Kind: captions
Language: en

00:00:00.199 --> 00:00:02.510 align:start position:0%
 
hi<00:00:00.439><c> everyone</c><00:00:01.439><c> so</c><00:00:01.640><c> by</c><00:00:01.800><c> now</c><00:00:01.920><c> you</c><00:00:02.040><c> have</c><00:00:02.240><c> probably</c>

00:00:02.510 --> 00:00:02.520 align:start position:0%
hi everyone so by now you have probably
 

00:00:02.520 --> 00:00:04.910 align:start position:0%
hi everyone so by now you have probably
heard<00:00:02.720><c> of</c><00:00:02.879><c> chat</c><00:00:03.159><c> GPT</c><00:00:03.959><c> it</c><00:00:04.080><c> has</c><00:00:04.200><c> taken</c><00:00:04.440><c> the</c><00:00:04.600><c> world</c>

00:00:04.910 --> 00:00:04.920 align:start position:0%
heard of chat GPT it has taken the world
 

00:00:04.920 --> 00:00:07.550 align:start position:0%
heard of chat GPT it has taken the world
and<00:00:05.160><c> AI</c><00:00:05.440><c> Community</c><00:00:05.799><c> by</c><00:00:05.960><c> storm</c><00:00:06.960><c> and</c><00:00:07.160><c> it</c><00:00:07.240><c> is</c><00:00:07.399><c> a</c>

00:00:07.550 --> 00:00:07.560 align:start position:0%
and AI Community by storm and it is a
 

00:00:07.560 --> 00:00:09.830 align:start position:0%
and AI Community by storm and it is a
system<00:00:07.879><c> that</c><00:00:08.080><c> allows</c><00:00:08.400><c> you</c><00:00:08.519><c> to</c><00:00:09.040><c> interact</c><00:00:09.719><c> with</c>

00:00:09.830 --> 00:00:09.840 align:start position:0%
system that allows you to interact with
 

00:00:09.840 --> 00:00:12.830 align:start position:0%
system that allows you to interact with
an<00:00:10.080><c> AI</c><00:00:10.559><c> and</c><00:00:10.719><c> give</c><00:00:10.840><c> it</c><00:00:11.160><c> text</c><00:00:11.480><c> based</c><00:00:11.960><c> tasks</c><00:00:12.679><c> so</c>

00:00:12.830 --> 00:00:12.840 align:start position:0%
an AI and give it text based tasks so
 

00:00:12.840 --> 00:00:15.070 align:start position:0%
an AI and give it text based tasks so
for<00:00:13.000><c> example</c><00:00:13.719><c> we</c><00:00:13.839><c> can</c><00:00:13.960><c> ask</c><00:00:14.160><c> chat</c><00:00:14.400><c> GPT</c><00:00:14.799><c> to</c><00:00:14.920><c> write</c>

00:00:15.070 --> 00:00:15.080 align:start position:0%
for example we can ask chat GPT to write
 

00:00:15.080 --> 00:00:16.950 align:start position:0%
for example we can ask chat GPT to write
us<00:00:15.240><c> a</c><00:00:15.320><c> small</c><00:00:15.559><c> Hau</c><00:00:16.000><c> about</c><00:00:16.199><c> how</c><00:00:16.320><c> important</c><00:00:16.640><c> it</c><00:00:16.760><c> is</c>

00:00:16.950 --> 00:00:16.960 align:start position:0%
us a small Hau about how important it is
 

00:00:16.960 --> 00:00:18.750 align:start position:0%
us a small Hau about how important it is
that<00:00:17.080><c> people</c><00:00:17.520><c> understand</c><00:00:17.720><c> Ai</c><00:00:18.400><c> and</c><00:00:18.520><c> then</c><00:00:18.640><c> they</c>

00:00:18.750 --> 00:00:18.760 align:start position:0%
that people understand Ai and then they
 

00:00:18.760 --> 00:00:20.150 align:start position:0%
that people understand Ai and then they
can<00:00:18.920><c> use</c><00:00:19.039><c> it</c><00:00:19.199><c> to</c><00:00:19.359><c> improve</c><00:00:19.640><c> the</c><00:00:19.720><c> world</c><00:00:19.920><c> and</c><00:00:20.039><c> make</c>

00:00:20.150 --> 00:00:20.160 align:start position:0%
can use it to improve the world and make
 

00:00:20.160 --> 00:00:23.710 align:start position:0%
can use it to improve the world and make
it<00:00:20.279><c> more</c><00:00:20.560><c> prosperous</c><00:00:21.560><c> so</c><00:00:21.760><c> when</c><00:00:21.880><c> we</c><00:00:22.039><c> run</c><00:00:22.720><c> this</c>

00:00:23.710 --> 00:00:23.720 align:start position:0%
it more prosperous so when we run this
 

00:00:23.720 --> 00:00:25.630 align:start position:0%
it more prosperous so when we run this
AI<00:00:24.039><c> knowledge</c><00:00:24.320><c> brings</c><00:00:24.880><c> prosperity</c><00:00:25.320><c> for</c><00:00:25.480><c> all</c>

00:00:25.630 --> 00:00:25.640 align:start position:0%
AI knowledge brings prosperity for all
 

00:00:25.640 --> 00:00:27.390 align:start position:0%
AI knowledge brings prosperity for all
to<00:00:25.760><c> see</c><00:00:26.320><c> Embrace</c><00:00:26.679><c> its</c>

00:00:27.390 --> 00:00:27.400 align:start position:0%
to see Embrace its
 

00:00:27.400 --> 00:00:29.790 align:start position:0%
to see Embrace its
power<00:00:28.400><c> okay</c><00:00:28.599><c> not</c><00:00:28.840><c> bad</c><00:00:29.240><c> and</c><00:00:29.320><c> so</c><00:00:29.439><c> you</c><00:00:29.519><c> could</c><00:00:29.640><c> see</c>

00:00:29.790 --> 00:00:29.800 align:start position:0%
power okay not bad and so you could see
 

00:00:29.800 --> 00:00:31.990 align:start position:0%
power okay not bad and so you could see
that<00:00:30.000><c> chpt</c><00:00:30.560><c> went</c><00:00:30.720><c> from</c><00:00:30.920><c> left</c><00:00:31.119><c> to</c><00:00:31.359><c> right</c><00:00:31.840><c> and</c>

00:00:31.990 --> 00:00:32.000 align:start position:0%
that chpt went from left to right and
 

00:00:32.000 --> 00:00:35.030 align:start position:0%
that chpt went from left to right and
generated<00:00:32.960><c> all</c><00:00:33.120><c> these</c><00:00:33.320><c> words</c><00:00:33.879><c> SE</c><00:00:34.280><c> sort</c><00:00:34.440><c> of</c>

00:00:35.030 --> 00:00:35.040 align:start position:0%
generated all these words SE sort of
 

00:00:35.040 --> 00:00:37.430 align:start position:0%
generated all these words SE sort of
sequentially<00:00:36.040><c> now</c><00:00:36.320><c> I</c><00:00:36.480><c> asked</c><00:00:36.760><c> it</c><00:00:36.960><c> already</c><00:00:37.320><c> the</c>

00:00:37.430 --> 00:00:37.440 align:start position:0%
sequentially now I asked it already the
 

00:00:37.440 --> 00:00:39.590 align:start position:0%
sequentially now I asked it already the
exact<00:00:37.719><c> same</c><00:00:37.960><c> prompt</c><00:00:38.360><c> a</c><00:00:38.440><c> little</c><00:00:38.640><c> bit</c><00:00:38.760><c> earlier</c>

00:00:39.590 --> 00:00:39.600 align:start position:0%
exact same prompt a little bit earlier
 

00:00:39.600 --> 00:00:41.389 align:start position:0%
exact same prompt a little bit earlier
and<00:00:39.760><c> it</c><00:00:39.879><c> generated</c><00:00:40.239><c> a</c><00:00:40.360><c> slightly</c><00:00:40.760><c> different</c>

00:00:41.389 --> 00:00:41.399 align:start position:0%
and it generated a slightly different
 

00:00:41.399 --> 00:00:43.990 align:start position:0%
and it generated a slightly different
outcome<00:00:42.399><c> ai's</c><00:00:42.800><c> power</c><00:00:43.000><c> to</c><00:00:43.120><c> grow</c><00:00:43.559><c> ignorance</c>

00:00:43.990 --> 00:00:44.000 align:start position:0%
outcome ai's power to grow ignorance
 

00:00:44.000 --> 00:00:47.350 align:start position:0%
outcome ai's power to grow ignorance
holds<00:00:44.239><c> us</c><00:00:44.440><c> back</c><00:00:44.840><c> learn</c><00:00:45.520><c> Prosperity</c><00:00:46.360><c> weights</c>

00:00:47.350 --> 00:00:47.360 align:start position:0%
holds us back learn Prosperity weights
 

00:00:47.360 --> 00:00:49.150 align:start position:0%
holds us back learn Prosperity weights
so<00:00:47.800><c> uh</c><00:00:47.960><c> pretty</c><00:00:48.160><c> good</c><00:00:48.320><c> in</c><00:00:48.480><c> both</c><00:00:48.680><c> cases</c><00:00:49.000><c> and</c>

00:00:49.150 --> 00:00:49.160 align:start position:0%
so uh pretty good in both cases and
 

00:00:49.160 --> 00:00:50.750 align:start position:0%
so uh pretty good in both cases and
slightly<00:00:49.520><c> different</c><00:00:50.120><c> so</c><00:00:50.239><c> you</c><00:00:50.320><c> can</c><00:00:50.440><c> see</c><00:00:50.640><c> that</c>

00:00:50.750 --> 00:00:50.760 align:start position:0%
slightly different so you can see that
 

00:00:50.760 --> 00:00:52.830 align:start position:0%
slightly different so you can see that
chat<00:00:51.000><c> GPT</c><00:00:51.360><c> is</c><00:00:51.440><c> a</c><00:00:51.640><c> probabilistic</c><00:00:52.199><c> system</c><00:00:52.719><c> and</c>

00:00:52.830 --> 00:00:52.840 align:start position:0%
chat GPT is a probabilistic system and
 

00:00:52.840 --> 00:00:54.630 align:start position:0%
chat GPT is a probabilistic system and
for<00:00:53.039><c> any</c><00:00:53.239><c> one</c><00:00:53.520><c> prompt</c><00:00:54.000><c> it</c><00:00:54.120><c> can</c><00:00:54.280><c> give</c><00:00:54.399><c> us</c>

00:00:54.630 --> 00:00:54.640 align:start position:0%
for any one prompt it can give us
 

00:00:54.640 --> 00:00:57.349 align:start position:0%
for any one prompt it can give us
multiple<00:00:55.120><c> answers</c><00:00:55.920><c> sort</c><00:00:56.079><c> of</c><00:00:56.480><c> uh</c><00:00:56.600><c> replying</c><00:00:57.079><c> to</c>

00:00:57.349 --> 00:00:57.359 align:start position:0%
multiple answers sort of uh replying to
 

00:00:57.359 --> 00:00:59.750 align:start position:0%
multiple answers sort of uh replying to
it<00:00:58.359><c> now</c><00:00:58.760><c> this</c><00:00:58.840><c> is</c><00:00:59.000><c> just</c><00:00:59.160><c> one</c><00:00:59.320><c> example</c><00:00:59.600><c> of</c><00:00:59.680><c> a</c>

00:00:59.750 --> 00:00:59.760 align:start position:0%
it now this is just one example of a
 

00:00:59.760 --> 00:01:01.430 align:start position:0%
it now this is just one example of a
problem<00:01:00.359><c> people</c><00:01:00.559><c> have</c><00:01:00.680><c> come</c><00:01:00.840><c> up</c><00:01:01.039><c> with</c><00:01:01.239><c> many</c>

00:01:01.430 --> 00:01:01.440 align:start position:0%
problem people have come up with many
 

00:01:01.440 --> 00:01:03.229 align:start position:0%
problem people have come up with many
many<00:01:01.719><c> examples</c><00:01:02.519><c> and</c><00:01:02.640><c> there</c><00:01:02.719><c> are</c><00:01:02.920><c> entire</c>

00:01:03.229 --> 00:01:03.239 align:start position:0%
many examples and there are entire
 

00:01:03.239 --> 00:01:05.990 align:start position:0%
many examples and there are entire
websites<00:01:03.719><c> that</c><00:01:03.920><c> index</c><00:01:04.600><c> interactions</c><00:01:05.479><c> with</c>

00:01:05.990 --> 00:01:06.000 align:start position:0%
websites that index interactions with
 

00:01:06.000 --> 00:01:08.670 align:start position:0%
websites that index interactions with
chpt<00:01:07.000><c> and</c><00:01:07.159><c> so</c><00:01:07.880><c> many</c><00:01:08.119><c> of</c><00:01:08.200><c> them</c><00:01:08.320><c> are</c><00:01:08.479><c> quite</c>

00:01:08.670 --> 00:01:08.680 align:start position:0%
chpt and so many of them are quite
 

00:01:08.680 --> 00:01:10.950 align:start position:0%
chpt and so many of them are quite
humorous<00:01:09.479><c> explain</c><00:01:09.840><c> HTML</c><00:01:10.280><c> to</c><00:01:10.360><c> me</c><00:01:10.560><c> like</c><00:01:10.680><c> I'm</c><00:01:10.759><c> a</c>

00:01:10.950 --> 00:01:10.960 align:start position:0%
humorous explain HTML to me like I'm a
 

00:01:10.960 --> 00:01:14.550 align:start position:0%
humorous explain HTML to me like I'm a
dog<00:01:11.960><c> uh</c><00:01:12.119><c> write</c><00:01:12.360><c> release</c><00:01:12.720><c> notes</c><00:01:12.960><c> for</c><00:01:13.159><c> chess</c><00:01:13.560><c> 2</c>

00:01:14.550 --> 00:01:14.560 align:start position:0%
dog uh write release notes for chess 2
 

00:01:14.560 --> 00:01:16.390 align:start position:0%
dog uh write release notes for chess 2
write<00:01:14.759><c> a</c><00:01:14.920><c> note</c><00:01:15.159><c> about</c><00:01:15.360><c> Elon</c><00:01:15.640><c> Musk</c><00:01:15.880><c> buying</c><00:01:16.040><c> a</c>

00:01:16.390 --> 00:01:16.400 align:start position:0%
write a note about Elon Musk buying a
 

00:01:16.400 --> 00:01:20.550 align:start position:0%
write a note about Elon Musk buying a
Twitter<00:01:17.400><c> and</c><00:01:17.640><c> so</c><00:01:18.119><c> on</c><00:01:19.119><c> so</c><00:01:19.320><c> as</c><00:01:19.439><c> an</c><00:01:19.600><c> example</c><00:01:20.439><c> uh</c>

00:01:20.550 --> 00:01:20.560 align:start position:0%
Twitter and so on so as an example uh
 

00:01:20.560 --> 00:01:21.870 align:start position:0%
Twitter and so on so as an example uh
please<00:01:20.759><c> write</c><00:01:20.960><c> a</c><00:01:21.040><c> breaking</c><00:01:21.360><c> news</c><00:01:21.600><c> article</c>

00:01:21.870 --> 00:01:21.880 align:start position:0%
please write a breaking news article
 

00:01:21.880 --> 00:01:23.469 align:start position:0%
please write a breaking news article
about<00:01:22.079><c> a</c><00:01:22.200><c> leaf</c><00:01:22.439><c> falling</c><00:01:22.720><c> from</c><00:01:22.840><c> a</c>

00:01:23.469 --> 00:01:23.479 align:start position:0%
about a leaf falling from a
 

00:01:23.479 --> 00:01:26.550 align:start position:0%
about a leaf falling from a
tree<00:01:24.479><c> uh</c><00:01:25.040><c> and</c><00:01:25.200><c> a</c><00:01:25.320><c> shocking</c><00:01:25.600><c> turn</c><00:01:25.840><c> of</c><00:01:26.000><c> events</c><00:01:26.439><c> a</c>

00:01:26.550 --> 00:01:26.560 align:start position:0%
tree uh and a shocking turn of events a
 

00:01:26.560 --> 00:01:28.030 align:start position:0%
tree uh and a shocking turn of events a
leaf<00:01:26.799><c> has</c><00:01:26.880><c> fallen</c><00:01:27.159><c> from</c><00:01:27.280><c> a</c><00:01:27.400><c> tree</c><00:01:27.600><c> in</c><00:01:27.680><c> the</c><00:01:27.759><c> local</c>

00:01:28.030 --> 00:01:28.040 align:start position:0%
leaf has fallen from a tree in the local
 

00:01:28.040 --> 00:01:30.069 align:start position:0%
leaf has fallen from a tree in the local
park<00:01:28.600><c> Witnesses</c><00:01:29.040><c> report</c><00:01:29.360><c> that</c><00:01:29.479><c> the</c><00:01:29.600><c> leaf</c>

00:01:30.069 --> 00:01:30.079 align:start position:0%
park Witnesses report that the leaf
 

00:01:30.079 --> 00:01:31.390 align:start position:0%
park Witnesses report that the leaf
which<00:01:30.200><c> was</c><00:01:30.320><c> previously</c><00:01:30.799><c> attached</c><00:01:31.159><c> to</c><00:01:31.280><c> a</c>

00:01:31.390 --> 00:01:31.400 align:start position:0%
which was previously attached to a
 

00:01:31.400 --> 00:01:33.429 align:start position:0%
which was previously attached to a
branch<00:01:31.640><c> of</c><00:01:31.759><c> a</c><00:01:31.880><c> tree</c><00:01:32.520><c> attached</c><00:01:32.920><c> itself</c><00:01:33.280><c> and</c>

00:01:33.429 --> 00:01:33.439 align:start position:0%
branch of a tree attached itself and
 

00:01:33.439 --> 00:01:36.270 align:start position:0%
branch of a tree attached itself and
fell<00:01:33.640><c> to</c><00:01:33.799><c> the</c><00:01:33.920><c> ground</c><00:01:34.840><c> very</c><00:01:35.040><c> dramatic</c><00:01:36.040><c> so</c><00:01:36.200><c> you</c>

00:01:36.270 --> 00:01:36.280 align:start position:0%
fell to the ground very dramatic so you
 

00:01:36.280 --> 00:01:37.950 align:start position:0%
fell to the ground very dramatic so you
can<00:01:36.399><c> see</c><00:01:36.640><c> that</c><00:01:36.759><c> this</c><00:01:36.840><c> is</c><00:01:37.000><c> a</c><00:01:37.200><c> pretty</c><00:01:37.439><c> remarkable</c>

00:01:37.950 --> 00:01:37.960 align:start position:0%
can see that this is a pretty remarkable
 

00:01:37.960 --> 00:01:40.350 align:start position:0%
can see that this is a pretty remarkable
system<00:01:38.720><c> and</c><00:01:38.840><c> it</c><00:01:38.960><c> is</c><00:01:39.200><c> what</c><00:01:39.360><c> we</c><00:01:39.560><c> call</c><00:01:39.799><c> a</c><00:01:39.960><c> language</c>

00:01:40.350 --> 00:01:40.360 align:start position:0%
system and it is what we call a language
 

00:01:40.360 --> 00:01:43.749 align:start position:0%
system and it is what we call a language
model<00:01:41.200><c> uh</c><00:01:41.360><c> because</c><00:01:41.840><c> it</c><00:01:42.280><c> um</c><00:01:42.640><c> it</c><00:01:42.759><c> models</c><00:01:43.600><c> the</c>

00:01:43.749 --> 00:01:43.759 align:start position:0%
model uh because it um it models the
 

00:01:43.759 --> 00:01:46.389 align:start position:0%
model uh because it um it models the
sequence<00:01:44.200><c> of</c><00:01:44.560><c> words</c><00:01:45.159><c> or</c><00:01:45.399><c> characters</c><00:01:46.040><c> or</c>

00:01:46.389 --> 00:01:46.399 align:start position:0%
sequence of words or characters or
 

00:01:46.399 --> 00:01:49.069 align:start position:0%
sequence of words or characters or
tokens<00:01:47.040><c> more</c><00:01:47.240><c> generally</c><00:01:48.240><c> and</c><00:01:48.360><c> it</c><00:01:48.479><c> knows</c><00:01:48.799><c> how</c>

00:01:49.069 --> 00:01:49.079 align:start position:0%
tokens more generally and it knows how
 

00:01:49.079 --> 00:01:50.670 align:start position:0%
tokens more generally and it knows how
sort<00:01:49.280><c> of</c><00:01:49.479><c> words</c><00:01:49.759><c> follow</c><00:01:50.119><c> each</c><00:01:50.240><c> other</c><00:01:50.520><c> in</c>

00:01:50.670 --> 00:01:50.680 align:start position:0%
sort of words follow each other in
 

00:01:50.680 --> 00:01:52.910 align:start position:0%
sort of words follow each other in
English<00:01:51.079><c> language</c><00:01:52.079><c> and</c><00:01:52.200><c> so</c><00:01:52.439><c> from</c><00:01:52.680><c> its</c>

00:01:52.910 --> 00:01:52.920 align:start position:0%
English language and so from its
 

00:01:52.920 --> 00:01:55.510 align:start position:0%
English language and so from its
perspective<00:01:53.520><c> what</c><00:01:53.680><c> it</c><00:01:53.840><c> is</c><00:01:54.000><c> doing</c><00:01:54.920><c> is</c><00:01:55.200><c> it</c><00:01:55.360><c> is</c>

00:01:55.510 --> 00:01:55.520 align:start position:0%
perspective what it is doing is it is
 

00:01:55.520 --> 00:01:57.910 align:start position:0%
perspective what it is doing is it is
completing<00:01:56.000><c> the</c><00:01:56.159><c> sequence</c><00:01:57.039><c> so</c><00:01:57.320><c> I</c><00:01:57.439><c> give</c><00:01:57.600><c> it</c><00:01:57.759><c> the</c>

00:01:57.910 --> 00:01:57.920 align:start position:0%
completing the sequence so I give it the
 

00:01:57.920 --> 00:02:00.069 align:start position:0%
completing the sequence so I give it the
start<00:01:58.119><c> of</c><00:01:58.240><c> a</c><00:01:58.399><c> sequence</c><00:01:59.119><c> and</c><00:01:59.240><c> it</c><00:01:59.360><c> completes</c><00:01:59.920><c> the</c>

00:02:00.069 --> 00:02:00.079 align:start position:0%
start of a sequence and it completes the
 

00:02:00.079 --> 00:02:02.550 align:start position:0%
start of a sequence and it completes the
sequence<00:02:00.840><c> with</c><00:02:01.200><c> the</c><00:02:01.320><c> outcome</c><00:02:02.000><c> and</c><00:02:02.079><c> so</c><00:02:02.240><c> it's</c><00:02:02.360><c> a</c>

00:02:02.550 --> 00:02:02.560 align:start position:0%
sequence with the outcome and so it's a
 

00:02:02.560 --> 00:02:05.350 align:start position:0%
sequence with the outcome and so it's a
language<00:02:02.920><c> model</c><00:02:03.320><c> in</c><00:02:03.479><c> that</c><00:02:03.719><c> sense</c><00:02:04.719><c> now</c><00:02:05.079><c> I</c><00:02:05.159><c> would</c>

00:02:05.350 --> 00:02:05.360 align:start position:0%
language model in that sense now I would
 

00:02:05.360 --> 00:02:07.789 align:start position:0%
language model in that sense now I would
like<00:02:05.479><c> to</c><00:02:05.600><c> focus</c><00:02:05.840><c> on</c><00:02:06.039><c> the</c><00:02:06.200><c> under</c><00:02:06.520><c> the</c><00:02:06.680><c> hood</c><00:02:07.360><c> of</c>

00:02:07.789 --> 00:02:07.799 align:start position:0%
like to focus on the under the hood of
 

00:02:07.799 --> 00:02:09.869 align:start position:0%
like to focus on the under the hood of
um<00:02:08.399><c> under</c><00:02:08.679><c> the</c><00:02:08.800><c> hood</c><00:02:08.959><c> components</c><00:02:09.520><c> of</c><00:02:09.720><c> what</c>

00:02:09.869 --> 00:02:09.879 align:start position:0%
um under the hood components of what
 

00:02:09.879 --> 00:02:12.190 align:start position:0%
um under the hood components of what
makes<00:02:10.119><c> CH</c><00:02:10.360><c> GPT</c><00:02:10.759><c> work</c><00:02:11.480><c> so</c><00:02:11.640><c> what</c><00:02:11.720><c> is</c><00:02:11.800><c> the</c><00:02:11.920><c> neural</c>

00:02:12.190 --> 00:02:12.200 align:start position:0%
makes CH GPT work so what is the neural
 

00:02:12.200 --> 00:02:14.350 align:start position:0%
makes CH GPT work so what is the neural
network<00:02:12.640><c> under</c><00:02:12.920><c> the</c><00:02:13.080><c> hood</c><00:02:13.480><c> that</c><00:02:13.640><c> models</c><00:02:14.200><c> the</c>

00:02:14.350 --> 00:02:14.360 align:start position:0%
network under the hood that models the
 

00:02:14.360 --> 00:02:17.869 align:start position:0%
network under the hood that models the
sequence<00:02:14.720><c> of</c><00:02:14.959><c> these</c><00:02:15.599><c> words</c><00:02:16.599><c> and</c><00:02:17.480><c> that</c><00:02:17.640><c> comes</c>

00:02:17.869 --> 00:02:17.879 align:start position:0%
sequence of these words and that comes
 

00:02:17.879 --> 00:02:19.430 align:start position:0%
sequence of these words and that comes
from<00:02:18.080><c> this</c><00:02:18.239><c> paper</c><00:02:18.480><c> called</c><00:02:18.800><c> attention</c><00:02:19.160><c> is</c><00:02:19.280><c> all</c>

00:02:19.430 --> 00:02:19.440 align:start position:0%
from this paper called attention is all
 

00:02:19.440 --> 00:02:23.110 align:start position:0%
from this paper called attention is all
you<00:02:19.560><c> need</c><00:02:20.280><c> in</c><00:02:20.680><c> 2017</c><00:02:21.680><c> a</c><00:02:21.840><c> landmark</c><00:02:22.319><c> paper</c><00:02:23.040><c> a</c>

00:02:23.110 --> 00:02:23.120 align:start position:0%
you need in 2017 a landmark paper a
 

00:02:23.120 --> 00:02:25.750 align:start position:0%
you need in 2017 a landmark paper a
landmark<00:02:23.519><c> paper</c><00:02:23.720><c> in</c><00:02:23.879><c> AI</c><00:02:24.400><c> that</c><00:02:24.560><c> produced</c><00:02:25.360><c> and</c>

00:02:25.750 --> 00:02:25.760 align:start position:0%
landmark paper in AI that produced and
 

00:02:25.760 --> 00:02:27.790 align:start position:0%
landmark paper in AI that produced and
proposed<00:02:26.319><c> the</c><00:02:26.560><c> Transformer</c>

00:02:27.790 --> 00:02:27.800 align:start position:0%
proposed the Transformer
 

00:02:27.800 --> 00:02:31.070 align:start position:0%
proposed the Transformer
architecture<00:02:28.800><c> so</c><00:02:29.000><c> GPT</c><00:02:29.560><c> is</c><00:02:30.000><c> uh</c><00:02:30.120><c> short</c><00:02:30.400><c> for</c>

00:02:31.070 --> 00:02:31.080 align:start position:0%
architecture so GPT is uh short for
 

00:02:31.080 --> 00:02:33.390 align:start position:0%
architecture so GPT is uh short for
generally<00:02:32.080><c> generatively</c><00:02:32.760><c> pre-trained</c>

00:02:33.390 --> 00:02:33.400 align:start position:0%
generally generatively pre-trained
 

00:02:33.400 --> 00:02:35.589 align:start position:0%
generally generatively pre-trained
Transformer<00:02:34.200><c> so</c><00:02:34.440><c> Transformer</c><00:02:35.000><c> is</c><00:02:35.120><c> the</c><00:02:35.239><c> neuron</c>

00:02:35.589 --> 00:02:35.599 align:start position:0%
Transformer so Transformer is the neuron
 

00:02:35.599 --> 00:02:36.949 align:start position:0%
Transformer so Transformer is the neuron
nut<00:02:35.840><c> that</c><00:02:36.000><c> actually</c><00:02:36.239><c> does</c><00:02:36.440><c> all</c><00:02:36.599><c> the</c><00:02:36.760><c> heavy</c>

00:02:36.949 --> 00:02:36.959 align:start position:0%
nut that actually does all the heavy
 

00:02:36.959 --> 00:02:39.190 align:start position:0%
nut that actually does all the heavy
lifting<00:02:37.400><c> under</c><00:02:37.599><c> the</c><00:02:37.720><c> hood</c><00:02:38.519><c> it</c><00:02:38.680><c> comes</c><00:02:38.920><c> from</c>

00:02:39.190 --> 00:02:39.200 align:start position:0%
lifting under the hood it comes from
 

00:02:39.200 --> 00:02:41.910 align:start position:0%
lifting under the hood it comes from
this<00:02:39.360><c> paper</c><00:02:39.640><c> in</c><00:02:40.159><c> 2017</c><00:02:41.159><c> now</c><00:02:41.319><c> if</c><00:02:41.400><c> you</c><00:02:41.560><c> read</c><00:02:41.760><c> this</c>

00:02:41.910 --> 00:02:41.920 align:start position:0%
this paper in 2017 now if you read this
 

00:02:41.920 --> 00:02:44.509 align:start position:0%
this paper in 2017 now if you read this
paper<00:02:42.640><c> this</c><00:02:42.920><c> uh</c><00:02:43.040><c> reads</c><00:02:43.319><c> like</c><00:02:43.440><c> a</c><00:02:43.560><c> pretty</c><00:02:44.159><c> random</c>

00:02:44.509 --> 00:02:44.519 align:start position:0%
paper this uh reads like a pretty random
 

00:02:44.519 --> 00:02:46.190 align:start position:0%
paper this uh reads like a pretty random
machine<00:02:44.840><c> translation</c><00:02:45.360><c> paper</c><00:02:45.879><c> and</c><00:02:46.040><c> that's</c>

00:02:46.190 --> 00:02:46.200 align:start position:0%
machine translation paper and that's
 

00:02:46.200 --> 00:02:47.509 align:start position:0%
machine translation paper and that's
because<00:02:46.440><c> I</c><00:02:46.519><c> think</c><00:02:46.680><c> the</c><00:02:46.760><c> authors</c><00:02:47.080><c> didn't</c><00:02:47.280><c> fully</c>

00:02:47.509 --> 00:02:47.519 align:start position:0%
because I think the authors didn't fully
 

00:02:47.519 --> 00:02:48.990 align:start position:0%
because I think the authors didn't fully
anticipate<00:02:48.080><c> the</c><00:02:48.280><c> impact</c><00:02:48.760><c> that</c><00:02:48.879><c> the</c>

00:02:48.990 --> 00:02:49.000 align:start position:0%
anticipate the impact that the
 

00:02:49.000 --> 00:02:51.390 align:start position:0%
anticipate the impact that the
Transformer<00:02:49.519><c> would</c><00:02:49.680><c> have</c><00:02:49.840><c> on</c><00:02:49.920><c> the</c><00:02:50.080><c> field</c><00:02:51.080><c> and</c>

00:02:51.390 --> 00:02:51.400 align:start position:0%
Transformer would have on the field and
 

00:02:51.400 --> 00:02:52.910 align:start position:0%
Transformer would have on the field and
this<00:02:51.599><c> architecture</c><00:02:52.080><c> that</c><00:02:52.200><c> they</c><00:02:52.360><c> produced</c><00:02:52.800><c> in</c>

00:02:52.910 --> 00:02:52.920 align:start position:0%
this architecture that they produced in
 

00:02:52.920 --> 00:02:54.830 align:start position:0%
this architecture that they produced in
the<00:02:53.040><c> context</c><00:02:53.319><c> of</c><00:02:53.440><c> machine</c><00:02:53.720><c> translation</c><00:02:54.680><c> in</c>

00:02:54.830 --> 00:02:54.840 align:start position:0%
the context of machine translation in
 

00:02:54.840 --> 00:02:57.309 align:start position:0%
the context of machine translation in
their<00:02:55.080><c> case</c><00:02:55.720><c> actually</c><00:02:55.959><c> ended</c><00:02:56.200><c> up</c><00:02:56.360><c> taking</c><00:02:56.680><c> over</c>

00:02:57.309 --> 00:02:57.319 align:start position:0%
their case actually ended up taking over
 

00:02:57.319 --> 00:03:00.030 align:start position:0%
their case actually ended up taking over
uh<00:02:57.440><c> the</c><00:02:57.560><c> rest</c><00:02:57.760><c> of</c><00:02:57.959><c> AI</c><00:02:58.760><c> in</c><00:02:58.879><c> the</c><00:02:59.040><c> next</c><00:02:59.280><c> 5</c><00:02:59.480><c> years</c>

00:03:00.030 --> 00:03:00.040 align:start position:0%
uh the rest of AI in the next 5 years
 

00:03:00.040 --> 00:03:02.670 align:start position:0%
uh the rest of AI in the next 5 years
after<00:03:00.959><c> and</c><00:03:01.080><c> so</c><00:03:01.560><c> this</c><00:03:01.720><c> architecture</c><00:03:02.480><c> with</c>

00:03:02.670 --> 00:03:02.680 align:start position:0%
after and so this architecture with
 

00:03:02.680 --> 00:03:05.509 align:start position:0%
after and so this architecture with
minor<00:03:03.000><c> changes</c><00:03:03.480><c> was</c><00:03:03.680><c> copy</c><00:03:03.959><c> pasted</c><00:03:04.760><c> into</c><00:03:05.319><c> a</c>

00:03:05.509 --> 00:03:05.519 align:start position:0%
minor changes was copy pasted into a
 

00:03:05.519 --> 00:03:07.589 align:start position:0%
minor changes was copy pasted into a
huge<00:03:05.720><c> amount</c><00:03:05.959><c> of</c><00:03:06.120><c> applications</c><00:03:06.640><c> in</c><00:03:06.799><c> AI</c><00:03:07.440><c> in</c>

00:03:07.589 --> 00:03:07.599 align:start position:0%
huge amount of applications in AI in
 

00:03:07.599 --> 00:03:10.390 align:start position:0%
huge amount of applications in AI in
more<00:03:07.879><c> recent</c><00:03:08.400><c> years</c><00:03:09.120><c> and</c><00:03:09.319><c> that</c><00:03:09.480><c> includes</c><00:03:10.239><c> at</c>

00:03:10.390 --> 00:03:10.400 align:start position:0%
more recent years and that includes at
 

00:03:10.400 --> 00:03:13.710 align:start position:0%
more recent years and that includes at
the<00:03:10.560><c> core</c><00:03:11.120><c> of</c><00:03:11.280><c> chat</c><00:03:11.920><c> GPT</c><00:03:12.920><c> now</c><00:03:13.280><c> we</c><00:03:13.400><c> are</c><00:03:13.519><c> not</c>

00:03:13.710 --> 00:03:13.720 align:start position:0%
the core of chat GPT now we are not
 

00:03:13.720 --> 00:03:15.470 align:start position:0%
the core of chat GPT now we are not
going<00:03:13.879><c> to</c><00:03:14.400><c> what</c><00:03:14.519><c> I'd</c><00:03:14.680><c> like</c><00:03:14.799><c> to</c><00:03:14.879><c> do</c><00:03:15.000><c> now</c><00:03:15.200><c> is</c><00:03:15.319><c> I'd</c>

00:03:15.470 --> 00:03:15.480 align:start position:0%
going to what I'd like to do now is I'd
 

00:03:15.480 --> 00:03:17.589 align:start position:0%
going to what I'd like to do now is I'd
like<00:03:15.599><c> to</c><00:03:15.799><c> build</c><00:03:16.000><c> out</c><00:03:16.440><c> something</c><00:03:16.840><c> like</c><00:03:17.080><c> chat</c>

00:03:17.589 --> 00:03:17.599 align:start position:0%
like to build out something like chat
 

00:03:17.599 --> 00:03:19.789 align:start position:0%
like to build out something like chat
GPT<00:03:18.599><c> but</c><00:03:18.840><c> uh</c><00:03:18.920><c> we're</c><00:03:19.040><c> not</c><00:03:19.159><c> going</c><00:03:19.319><c> to</c><00:03:19.400><c> be</c><00:03:19.519><c> able</c><00:03:19.680><c> to</c>

00:03:19.789 --> 00:03:19.799 align:start position:0%
GPT but uh we're not going to be able to
 

00:03:19.799 --> 00:03:21.710 align:start position:0%
GPT but uh we're not going to be able to
of<00:03:19.920><c> course</c><00:03:20.120><c> reproduce</c><00:03:20.640><c> chat</c><00:03:20.879><c> GPT</c><00:03:21.319><c> this</c><00:03:21.440><c> is</c><00:03:21.519><c> a</c>

00:03:21.710 --> 00:03:21.720 align:start position:0%
of course reproduce chat GPT this is a
 

00:03:21.720 --> 00:03:23.910 align:start position:0%
of course reproduce chat GPT this is a
very<00:03:22.040><c> serious</c><00:03:22.440><c> production</c><00:03:22.799><c> grade</c><00:03:23.120><c> system</c><00:03:23.799><c> it</c>

00:03:23.910 --> 00:03:23.920 align:start position:0%
very serious production grade system it
 

00:03:23.920 --> 00:03:26.949 align:start position:0%
very serious production grade system it
is<00:03:24.040><c> trained</c><00:03:24.440><c> on</c><00:03:25.440><c> uh</c><00:03:26.080><c> a</c><00:03:26.280><c> good</c><00:03:26.440><c> chunk</c><00:03:26.720><c> of</c>

00:03:26.949 --> 00:03:26.959 align:start position:0%
is trained on uh a good chunk of
 

00:03:26.959 --> 00:03:29.309 align:start position:0%
is trained on uh a good chunk of
internet<00:03:27.959><c> and</c><00:03:28.200><c> then</c><00:03:28.519><c> there's</c><00:03:28.680><c> a</c><00:03:28.799><c> lot</c><00:03:28.920><c> of</c><00:03:29.200><c> uh</c>

00:03:29.309 --> 00:03:29.319 align:start position:0%
internet and then there's a lot of uh
 

00:03:29.319 --> 00:03:31.229 align:start position:0%
internet and then there's a lot of uh
pre-training<00:03:29.920><c> and</c><00:03:30.040><c> fine-tuning</c><00:03:30.640><c> stages</c><00:03:31.040><c> to</c>

00:03:31.229 --> 00:03:31.239 align:start position:0%
pre-training and fine-tuning stages to
 

00:03:31.239 --> 00:03:33.390 align:start position:0%
pre-training and fine-tuning stages to
it<00:03:31.640><c> and</c><00:03:31.760><c> so</c><00:03:31.879><c> it's</c><00:03:32.040><c> very</c><00:03:32.200><c> complicated</c><00:03:33.120><c> what</c><00:03:33.280><c> I'd</c>

00:03:33.390 --> 00:03:33.400 align:start position:0%
it and so it's very complicated what I'd
 

00:03:33.400 --> 00:03:36.390 align:start position:0%
it and so it's very complicated what I'd
like<00:03:33.519><c> to</c><00:03:33.680><c> focus</c><00:03:33.920><c> on</c><00:03:34.200><c> is</c><00:03:34.439><c> just</c><00:03:34.840><c> to</c><00:03:35.280><c> train</c><00:03:36.080><c> a</c>

00:03:36.390 --> 00:03:36.400 align:start position:0%
like to focus on is just to train a
 

00:03:36.400 --> 00:03:38.869 align:start position:0%
like to focus on is just to train a
Transformer<00:03:37.000><c> based</c><00:03:37.439><c> language</c><00:03:37.799><c> model</c><00:03:38.560><c> and</c><00:03:38.720><c> in</c>

00:03:38.869 --> 00:03:38.879 align:start position:0%
Transformer based language model and in
 

00:03:38.879 --> 00:03:40.429 align:start position:0%
Transformer based language model and in
our<00:03:39.080><c> case</c><00:03:39.280><c> it's</c><00:03:39.400><c> going</c><00:03:39.519><c> to</c><00:03:39.640><c> be</c><00:03:39.720><c> a</c><00:03:39.879><c> character</c>

00:03:40.429 --> 00:03:40.439 align:start position:0%
our case it's going to be a character
 

00:03:40.439 --> 00:03:43.070 align:start position:0%
our case it's going to be a character
level<00:03:41.439><c> language</c><00:03:41.799><c> model</c><00:03:42.439><c> I</c><00:03:42.519><c> still</c><00:03:42.760><c> think</c><00:03:42.959><c> that</c>

00:03:43.070 --> 00:03:43.080 align:start position:0%
level language model I still think that
 

00:03:43.080 --> 00:03:44.990 align:start position:0%
level language model I still think that
is<00:03:43.400><c> uh</c><00:03:43.720><c> very</c><00:03:43.959><c> educational</c><00:03:44.480><c> with</c><00:03:44.640><c> respect</c><00:03:44.840><c> to</c>

00:03:44.990 --> 00:03:45.000 align:start position:0%
is uh very educational with respect to
 

00:03:45.000 --> 00:03:47.229 align:start position:0%
is uh very educational with respect to
how<00:03:45.159><c> these</c><00:03:45.319><c> systems</c><00:03:45.920><c> work</c><00:03:46.720><c> so</c><00:03:46.920><c> I</c><00:03:47.000><c> don't</c><00:03:47.120><c> want</c>

00:03:47.229 --> 00:03:47.239 align:start position:0%
how these systems work so I don't want
 

00:03:47.239 --> 00:03:48.750 align:start position:0%
how these systems work so I don't want
to<00:03:47.319><c> train</c><00:03:47.519><c> on</c><00:03:47.640><c> the</c><00:03:47.799><c> chunk</c><00:03:48.000><c> of</c><00:03:48.159><c> Internet</c><00:03:48.640><c> we</c>

00:03:48.750 --> 00:03:48.760 align:start position:0%
to train on the chunk of Internet we
 

00:03:48.760 --> 00:03:51.390 align:start position:0%
to train on the chunk of Internet we
need<00:03:49.040><c> a</c><00:03:49.200><c> smaller</c><00:03:49.640><c> data</c><00:03:49.920><c> set</c><00:03:50.680><c> in</c><00:03:50.799><c> this</c><00:03:51.000><c> case</c><00:03:51.239><c> I</c>

00:03:51.390 --> 00:03:51.400 align:start position:0%
need a smaller data set in this case I
 

00:03:51.400 --> 00:03:53.309 align:start position:0%
need a smaller data set in this case I
propose<00:03:51.680><c> that</c><00:03:51.799><c> we</c><00:03:51.959><c> work</c><00:03:52.239><c> with</c><00:03:52.720><c> uh</c><00:03:52.879><c> my</c><00:03:53.000><c> favorite</c>

00:03:53.309 --> 00:03:53.319 align:start position:0%
propose that we work with uh my favorite
 

00:03:53.319 --> 00:03:55.110 align:start position:0%
propose that we work with uh my favorite
toy<00:03:53.560><c> data</c><00:03:53.840><c> set</c><00:03:54.239><c> it's</c><00:03:54.400><c> called</c><00:03:54.599><c> tiny</c>

00:03:55.110 --> 00:03:55.120 align:start position:0%
toy data set it's called tiny
 

00:03:55.120 --> 00:03:57.429 align:start position:0%
toy data set it's called tiny
Shakespeare<00:03:56.120><c> and</c><00:03:56.560><c> um</c><00:03:56.920><c> what</c><00:03:57.040><c> it</c><00:03:57.120><c> is</c><00:03:57.280><c> is</c>

00:03:57.429 --> 00:03:57.439 align:start position:0%
Shakespeare and um what it is is
 

00:03:57.439 --> 00:03:59.149 align:start position:0%
Shakespeare and um what it is is
basically<00:03:57.799><c> it's</c><00:03:57.920><c> a</c><00:03:58.040><c> concatenation</c><00:03:58.760><c> of</c><00:03:58.920><c> all</c><00:03:59.040><c> of</c>

00:03:59.149 --> 00:03:59.159 align:start position:0%
basically it's a concatenation of all of
 

00:03:59.159 --> 00:04:00.869 align:start position:0%
basically it's a concatenation of all of
the<00:03:59.239><c> works</c><00:03:59.439><c> of</c><00:03:59.519><c> sh</c><00:03:59.760><c> Shakespeare</c><00:04:00.360><c> in</c><00:04:00.480><c> my</c>

00:04:00.869 --> 00:04:00.879 align:start position:0%
the works of sh Shakespeare in my
 

00:04:00.879 --> 00:04:02.670 align:start position:0%
the works of sh Shakespeare in my
understanding<00:04:01.760><c> and</c><00:04:01.840><c> so</c><00:04:02.079><c> this</c><00:04:02.200><c> is</c><00:04:02.360><c> all</c><00:04:02.519><c> of</c>

00:04:02.670 --> 00:04:02.680 align:start position:0%
understanding and so this is all of
 

00:04:02.680 --> 00:04:05.309 align:start position:0%
understanding and so this is all of
Shakespeare<00:04:03.439><c> in</c><00:04:03.640><c> a</c><00:04:03.799><c> single</c><00:04:04.200><c> file</c><00:04:05.079><c> uh</c><00:04:05.200><c> this</c>

00:04:05.309 --> 00:04:05.319 align:start position:0%
Shakespeare in a single file uh this
 

00:04:05.319 --> 00:04:07.949 align:start position:0%
Shakespeare in a single file uh this
file<00:04:05.519><c> is</c><00:04:05.680><c> about</c><00:04:05.840><c> 1</c><00:04:06.439><c> megab</c><00:04:07.439><c> and</c><00:04:07.560><c> it's</c><00:04:07.640><c> just</c><00:04:07.840><c> all</c>

00:04:07.949 --> 00:04:07.959 align:start position:0%
file is about 1 megab and it's just all
 

00:04:07.959 --> 00:04:08.670 align:start position:0%
file is about 1 megab and it's just all
of

00:04:08.670 --> 00:04:08.680 align:start position:0%
of
 

00:04:08.680 --> 00:04:10.789 align:start position:0%
of
Shakespeare<00:04:09.680><c> and</c><00:04:09.959><c> what</c><00:04:10.079><c> we</c><00:04:10.159><c> are</c><00:04:10.280><c> going</c><00:04:10.439><c> to</c><00:04:10.560><c> do</c>

00:04:10.789 --> 00:04:10.799 align:start position:0%
Shakespeare and what we are going to do
 

00:04:10.799 --> 00:04:12.789 align:start position:0%
Shakespeare and what we are going to do
now<00:04:11.079><c> is</c><00:04:11.200><c> we're</c><00:04:11.400><c> going</c><00:04:11.560><c> to</c><00:04:11.720><c> basically</c><00:04:12.200><c> model</c>

00:04:12.789 --> 00:04:12.799 align:start position:0%
now is we're going to basically model
 

00:04:12.799 --> 00:04:14.470 align:start position:0%
now is we're going to basically model
how<00:04:12.959><c> these</c><00:04:13.159><c> characters</c><00:04:13.920><c> uh</c><00:04:14.000><c> follow</c><00:04:14.360><c> each</c>

00:04:14.470 --> 00:04:14.480 align:start position:0%
how these characters uh follow each
 

00:04:14.480 --> 00:04:16.710 align:start position:0%
how these characters uh follow each
other<00:04:15.239><c> so</c><00:04:15.400><c> for</c><00:04:15.560><c> example</c><00:04:15.920><c> given</c><00:04:16.120><c> a</c><00:04:16.280><c> chunk</c><00:04:16.560><c> of</c>

00:04:16.710 --> 00:04:16.720 align:start position:0%
other so for example given a chunk of
 

00:04:16.720 --> 00:04:19.670 align:start position:0%
other so for example given a chunk of
these<00:04:16.880><c> characters</c><00:04:17.519><c> like</c><00:04:17.840><c> this</c><00:04:18.840><c> uh</c><00:04:19.000><c> given</c><00:04:19.359><c> some</c>

00:04:19.670 --> 00:04:19.680 align:start position:0%
these characters like this uh given some
 

00:04:19.680 --> 00:04:22.550 align:start position:0%
these characters like this uh given some
context<00:04:20.560><c> of</c><00:04:20.840><c> characters</c><00:04:21.400><c> in</c><00:04:21.519><c> the</c><00:04:21.720><c> past</c><00:04:22.400><c> the</c>

00:04:22.550 --> 00:04:22.560 align:start position:0%
context of characters in the past the
 

00:04:22.560 --> 00:04:24.550 align:start position:0%
context of characters in the past the
Transformer<00:04:23.160><c> neural</c><00:04:23.520><c> network</c><00:04:24.120><c> will</c><00:04:24.320><c> look</c><00:04:24.440><c> at</c>

00:04:24.550 --> 00:04:24.560 align:start position:0%
Transformer neural network will look at
 

00:04:24.560 --> 00:04:26.110 align:start position:0%
Transformer neural network will look at
the<00:04:24.680><c> characters</c><00:04:25.040><c> that</c><00:04:25.160><c> I've</c><00:04:25.360><c> highlighted</c><00:04:26.000><c> and</c>

00:04:26.110 --> 00:04:26.120 align:start position:0%
the characters that I've highlighted and
 

00:04:26.120 --> 00:04:28.310 align:start position:0%
the characters that I've highlighted and
is<00:04:26.240><c> going</c><00:04:26.400><c> to</c><00:04:26.560><c> predict</c><00:04:26.960><c> that</c><00:04:27.160><c> g</c><00:04:27.759><c> is</c><00:04:27.919><c> likely</c><00:04:28.160><c> to</c>

00:04:28.310 --> 00:04:28.320 align:start position:0%
is going to predict that g is likely to
 

00:04:28.320 --> 00:04:30.350 align:start position:0%
is going to predict that g is likely to
come<00:04:28.520><c> next</c><00:04:28.800><c> in</c><00:04:28.880><c> the</c><00:04:29.039><c> sequence</c><00:04:29.960><c> and</c><00:04:30.080><c> it's</c><00:04:30.199><c> going</c>

00:04:30.350 --> 00:04:30.360 align:start position:0%
come next in the sequence and it's going
 

00:04:30.360 --> 00:04:31.710 align:start position:0%
come next in the sequence and it's going
to<00:04:30.479><c> do</c><00:04:30.639><c> that</c><00:04:30.800><c> because</c><00:04:30.960><c> we're</c><00:04:31.080><c> going</c><00:04:31.199><c> to</c><00:04:31.360><c> train</c>

00:04:31.710 --> 00:04:31.720 align:start position:0%
to do that because we're going to train
 

00:04:31.720 --> 00:04:34.350 align:start position:0%
to do that because we're going to train
that<00:04:32.080><c> Transformer</c><00:04:32.800><c> on</c><00:04:33.160><c> Shakespeare</c><00:04:34.120><c> and</c><00:04:34.240><c> it's</c>

00:04:34.350 --> 00:04:34.360 align:start position:0%
that Transformer on Shakespeare and it's
 

00:04:34.360 --> 00:04:36.629 align:start position:0%
that Transformer on Shakespeare and it's
just<00:04:34.479><c> going</c><00:04:34.639><c> to</c><00:04:34.759><c> try</c><00:04:34.960><c> to</c><00:04:35.320><c> produce</c><00:04:36.320><c> uh</c>

00:04:36.629 --> 00:04:36.639 align:start position:0%
just going to try to produce uh
 

00:04:36.639 --> 00:04:39.469 align:start position:0%
just going to try to produce uh
character<00:04:37.039><c> sequences</c><00:04:37.560><c> that</c><00:04:37.759><c> look</c><00:04:38.039><c> like</c><00:04:38.479><c> this</c>

00:04:39.469 --> 00:04:39.479 align:start position:0%
character sequences that look like this
 

00:04:39.479 --> 00:04:40.909 align:start position:0%
character sequences that look like this
and<00:04:39.680><c> in</c><00:04:39.840><c> that</c><00:04:40.039><c> process</c><00:04:40.280><c> is</c><00:04:40.360><c> going</c><00:04:40.520><c> to</c><00:04:40.639><c> model</c>

00:04:40.909 --> 00:04:40.919 align:start position:0%
and in that process is going to model
 

00:04:40.919 --> 00:04:43.550 align:start position:0%
and in that process is going to model
all<00:04:41.039><c> the</c><00:04:41.160><c> patterns</c><00:04:41.560><c> inside</c><00:04:41.840><c> this</c><00:04:42.120><c> data</c><00:04:43.120><c> so</c>

00:04:43.550 --> 00:04:43.560 align:start position:0%
all the patterns inside this data so
 

00:04:43.560 --> 00:04:45.270 align:start position:0%
all the patterns inside this data so
once<00:04:44.000><c> we've</c><00:04:44.199><c> trained</c><00:04:44.479><c> the</c><00:04:44.639><c> system</c><00:04:45.039><c> i'</c><00:04:45.160><c> just</c>

00:04:45.270 --> 00:04:45.280 align:start position:0%
once we've trained the system i' just
 

00:04:45.280 --> 00:04:47.749 align:start position:0%
once we've trained the system i' just
like<00:04:45.440><c> to</c><00:04:45.520><c> give</c><00:04:45.680><c> you</c><00:04:45.759><c> a</c><00:04:46.000><c> preview</c><00:04:47.000><c> we</c><00:04:47.199><c> can</c>

00:04:47.749 --> 00:04:47.759 align:start position:0%
like to give you a preview we can
 

00:04:47.759 --> 00:04:49.749 align:start position:0%
like to give you a preview we can
generate<00:04:48.400><c> infinite</c><00:04:48.759><c> Shakespeare</c><00:04:49.520><c> and</c><00:04:49.639><c> of</c>

00:04:49.749 --> 00:04:49.759 align:start position:0%
generate infinite Shakespeare and of
 

00:04:49.759 --> 00:04:51.950 align:start position:0%
generate infinite Shakespeare and of
course<00:04:49.919><c> it's</c><00:04:50.039><c> a</c><00:04:50.280><c> fake</c><00:04:51.000><c> thing</c><00:04:51.240><c> that</c><00:04:51.440><c> looks</c><00:04:51.840><c> kind</c>

00:04:51.950 --> 00:04:51.960 align:start position:0%
course it's a fake thing that looks kind
 

00:04:51.960 --> 00:04:53.350 align:start position:0%
course it's a fake thing that looks kind
of<00:04:52.199><c> like</c>

00:04:53.350 --> 00:04:53.360 align:start position:0%
of like
 

00:04:53.360 --> 00:04:55.950 align:start position:0%
of like
Shakespeare

00:04:55.950 --> 00:04:55.960 align:start position:0%
Shakespeare
 

00:04:55.960 --> 00:04:59.029 align:start position:0%
Shakespeare
um<00:04:56.960><c> apologies</c><00:04:57.479><c> for</c><00:04:58.039><c> there's</c><00:04:58.240><c> some</c><00:04:58.520><c> Jank</c><00:04:58.880><c> that</c>

00:04:59.029 --> 00:04:59.039 align:start position:0%
um apologies for there's some Jank that
 

00:04:59.039 --> 00:05:02.870 align:start position:0%
um apologies for there's some Jank that
I'm<00:04:59.160><c> not</c><00:04:59.280><c> able</c><00:04:59.440><c> to</c><00:04:59.800><c> resolve</c><00:05:00.320><c> in</c><00:05:01.080><c> in</c><00:05:01.280><c> here</c><00:05:01.600><c> but</c>

00:05:02.870 --> 00:05:02.880 align:start position:0%
I'm not able to resolve in in here but
 

00:05:02.880 --> 00:05:05.230 align:start position:0%
I'm not able to resolve in in here but
um<00:05:03.880><c> you</c><00:05:04.000><c> can</c><00:05:04.160><c> see</c><00:05:04.440><c> how</c><00:05:04.759><c> this</c><00:05:04.880><c> is</c><00:05:05.000><c> going</c>

00:05:05.230 --> 00:05:05.240 align:start position:0%
um you can see how this is going
 

00:05:05.240 --> 00:05:07.070 align:start position:0%
um you can see how this is going
character<00:05:05.560><c> by</c><00:05:05.720><c> character</c><00:05:06.479><c> and</c><00:05:06.600><c> it's</c><00:05:06.800><c> kind</c><00:05:06.919><c> of</c>

00:05:07.070 --> 00:05:07.080 align:start position:0%
character by character and it's kind of
 

00:05:07.080 --> 00:05:09.430 align:start position:0%
character by character and it's kind of
like<00:05:07.479><c> predicting</c><00:05:08.479><c> Shakespeare</c><00:05:09.120><c> like</c>

00:05:09.430 --> 00:05:09.440 align:start position:0%
like predicting Shakespeare like
 

00:05:09.440 --> 00:05:12.310 align:start position:0%
like predicting Shakespeare like
language<00:05:10.199><c> so</c><00:05:10.560><c> verily</c><00:05:11.000><c> my</c><00:05:11.160><c> Lord</c><00:05:11.680><c> the</c><00:05:11.800><c> sites</c>

00:05:12.310 --> 00:05:12.320 align:start position:0%
language so verily my Lord the sites
 

00:05:12.320 --> 00:05:15.550 align:start position:0%
language so verily my Lord the sites
have<00:05:12.520><c> left</c><00:05:13.080><c> the</c><00:05:13.479><c> again</c><00:05:14.160><c> the</c><00:05:14.320><c> king</c><00:05:15.039><c> coming</c><00:05:15.400><c> with</c>

00:05:15.550 --> 00:05:15.560 align:start position:0%
have left the again the king coming with
 

00:05:15.560 --> 00:05:19.029 align:start position:0%
have left the again the king coming with
my<00:05:15.759><c> curses</c><00:05:16.479><c> with</c><00:05:17.160><c> precious</c><00:05:17.800><c> pale</c><00:05:18.800><c> and</c><00:05:18.880><c> then</c>

00:05:19.029 --> 00:05:19.039 align:start position:0%
my curses with precious pale and then
 

00:05:19.039 --> 00:05:21.230 align:start position:0%
my curses with precious pale and then
tranos<00:05:19.560><c> say</c><00:05:19.720><c> something</c><00:05:19.960><c> else</c><00:05:20.199><c> Etc</c><00:05:21.039><c> and</c><00:05:21.160><c> this</c>

00:05:21.230 --> 00:05:21.240 align:start position:0%
tranos say something else Etc and this
 

00:05:21.240 --> 00:05:23.029 align:start position:0%
tranos say something else Etc and this
is<00:05:21.400><c> just</c><00:05:21.520><c> coming</c><00:05:21.720><c> out</c><00:05:21.840><c> of</c><00:05:21.960><c> the</c><00:05:22.080><c> Transformer</c><00:05:22.919><c> in</c>

00:05:23.029 --> 00:05:23.039 align:start position:0%
is just coming out of the Transformer in
 

00:05:23.039 --> 00:05:25.110 align:start position:0%
is just coming out of the Transformer in
a<00:05:23.160><c> very</c><00:05:23.360><c> similar</c><00:05:23.919><c> manner</c><00:05:24.560><c> as</c><00:05:24.680><c> it</c><00:05:24.800><c> would</c><00:05:24.960><c> come</c>

00:05:25.110 --> 00:05:25.120 align:start position:0%
a very similar manner as it would come
 

00:05:25.120 --> 00:05:27.670 align:start position:0%
a very similar manner as it would come
out<00:05:25.319><c> in</c><00:05:25.440><c> chat</c><00:05:25.720><c> GPT</c><00:05:26.600><c> in</c><00:05:26.759><c> our</c><00:05:26.960><c> case</c><00:05:27.160><c> character</c><00:05:27.479><c> by</c>

00:05:27.670 --> 00:05:27.680 align:start position:0%
out in chat GPT in our case character by
 

00:05:27.680 --> 00:05:31.309 align:start position:0%
out in chat GPT in our case character by
character<00:05:28.600><c> in</c><00:05:28.880><c> chat</c><00:05:29.160><c> GPT</c><00:05:30.080><c> uh</c><00:05:30.680><c> it's</c><00:05:30.840><c> coming</c><00:05:31.080><c> out</c>

00:05:31.309 --> 00:05:31.319 align:start position:0%
character in chat GPT uh it's coming out
 

00:05:31.319 --> 00:05:33.270 align:start position:0%
character in chat GPT uh it's coming out
on<00:05:31.440><c> the</c><00:05:31.600><c> token</c><00:05:31.880><c> by</c><00:05:32.039><c> token</c><00:05:32.319><c> level</c><00:05:32.759><c> and</c><00:05:32.919><c> tokens</c>

00:05:33.270 --> 00:05:33.280 align:start position:0%
on the token by token level and tokens
 

00:05:33.280 --> 00:05:35.309 align:start position:0%
on the token by token level and tokens
are<00:05:33.520><c> these</c><00:05:33.880><c> sort</c><00:05:34.039><c> of</c><00:05:34.240><c> like</c><00:05:34.520><c> little</c><00:05:34.759><c> subword</c>

00:05:35.309 --> 00:05:35.319 align:start position:0%
are these sort of like little subword
 

00:05:35.319 --> 00:05:36.950 align:start position:0%
are these sort of like little subword
pieces<00:05:35.759><c> so</c><00:05:35.919><c> they're</c><00:05:36.080><c> not</c><00:05:36.240><c> Word</c><00:05:36.479><c> level</c><00:05:36.800><c> they're</c>

00:05:36.950 --> 00:05:36.960 align:start position:0%
pieces so they're not Word level they're
 

00:05:36.960 --> 00:05:38.830 align:start position:0%
pieces so they're not Word level they're
kind<00:05:37.080><c> of</c><00:05:37.199><c> like</c><00:05:37.520><c> word</c><00:05:37.840><c> chunk</c>

00:05:38.830 --> 00:05:38.840 align:start position:0%
kind of like word chunk
 

00:05:38.840 --> 00:05:43.110 align:start position:0%
kind of like word chunk
level<00:05:39.840><c> um</c><00:05:40.840><c> and</c><00:05:41.840><c> now</c><00:05:42.400><c> I've</c><00:05:42.560><c> already</c><00:05:42.840><c> written</c>

00:05:43.110 --> 00:05:43.120 align:start position:0%
level um and now I've already written
 

00:05:43.120 --> 00:05:45.230 align:start position:0%
level um and now I've already written
this<00:05:43.280><c> entire</c><00:05:43.560><c> code</c><00:05:44.039><c> uh</c><00:05:44.120><c> to</c><00:05:44.280><c> train</c><00:05:44.919><c> these</c>

00:05:45.230 --> 00:05:45.240 align:start position:0%
this entire code uh to train these
 

00:05:45.240 --> 00:05:48.830 align:start position:0%
this entire code uh to train these
Transformers<00:05:46.240><c> um</c><00:05:47.199><c> and</c><00:05:47.919><c> it</c><00:05:48.039><c> is</c><00:05:48.199><c> in</c><00:05:48.319><c> a</c><00:05:48.479><c> GitHub</c>

00:05:48.830 --> 00:05:48.840 align:start position:0%
Transformers um and it is in a GitHub
 

00:05:48.840 --> 00:05:50.430 align:start position:0%
Transformers um and it is in a GitHub
repository<00:05:49.319><c> that</c><00:05:49.440><c> you</c><00:05:49.520><c> can</c><00:05:49.720><c> find</c><00:05:50.120><c> and</c><00:05:50.240><c> it's</c>

00:05:50.430 --> 00:05:50.440 align:start position:0%
repository that you can find and it's
 

00:05:50.440 --> 00:05:51.749 align:start position:0%
repository that you can find and it's
called<00:05:50.880><c> nanog</c>

00:05:51.749 --> 00:05:51.759 align:start position:0%
called nanog
 

00:05:51.759 --> 00:05:54.350 align:start position:0%
called nanog
GPT<00:05:52.759><c> so</c><00:05:52.960><c> nanog</c><00:05:53.199><c> GPT</c><00:05:53.560><c> is</c><00:05:53.680><c> a</c><00:05:53.800><c> repository</c><00:05:54.280><c> that</c>

00:05:54.350 --> 00:05:54.360 align:start position:0%
GPT so nanog GPT is a repository that
 

00:05:54.360 --> 00:05:56.670 align:start position:0%
GPT so nanog GPT is a repository that
you<00:05:54.440><c> can</c><00:05:54.560><c> find</c><00:05:54.720><c> in</c><00:05:54.840><c> my</c><00:05:55.000><c> GitHub</c><00:05:55.960><c> and</c><00:05:56.160><c> it's</c><00:05:56.319><c> a</c>

00:05:56.670 --> 00:05:56.680 align:start position:0%
you can find in my GitHub and it's a
 

00:05:56.680 --> 00:05:59.230 align:start position:0%
you can find in my GitHub and it's a
repository<00:05:57.199><c> for</c><00:05:57.319><c> training</c><00:05:57.800><c> Transformers</c><00:05:58.800><c> um</c>

00:05:59.230 --> 00:05:59.240 align:start position:0%
repository for training Transformers um
 

00:05:59.240 --> 00:06:02.070 align:start position:0%
repository for training Transformers um
on<00:05:59.720><c> any</c><00:05:59.880><c> given</c><00:06:00.280><c> text</c><00:06:01.280><c> and</c><00:06:01.600><c> what</c><00:06:01.720><c> I</c><00:06:01.800><c> think</c><00:06:01.919><c> is</c>

00:06:02.070 --> 00:06:02.080 align:start position:0%
on any given text and what I think is
 

00:06:02.080 --> 00:06:03.110 align:start position:0%
on any given text and what I think is
interesting<00:06:02.440><c> about</c><00:06:02.639><c> it</c><00:06:02.759><c> because</c><00:06:02.960><c> there's</c>

00:06:03.110 --> 00:06:03.120 align:start position:0%
interesting about it because there's
 

00:06:03.120 --> 00:06:05.029 align:start position:0%
interesting about it because there's
many<00:06:03.319><c> ways</c><00:06:03.479><c> to</c><00:06:03.600><c> train</c><00:06:03.840><c> Transformers</c><00:06:04.800><c> but</c><00:06:04.960><c> this</c>

00:06:05.029 --> 00:06:05.039 align:start position:0%
many ways to train Transformers but this
 

00:06:05.039 --> 00:06:06.909 align:start position:0%
many ways to train Transformers but this
is<00:06:05.160><c> a</c><00:06:05.280><c> very</c><00:06:05.479><c> simple</c><00:06:05.800><c> implementation</c><00:06:06.599><c> so</c><00:06:06.759><c> it's</c>

00:06:06.909 --> 00:06:06.919 align:start position:0%
is a very simple implementation so it's
 

00:06:06.919 --> 00:06:10.070 align:start position:0%
is a very simple implementation so it's
just<00:06:07.120><c> two</c><00:06:07.720><c> files</c><00:06:08.000><c> of</c><00:06:08.160><c> 300</c><00:06:08.599><c> lines</c><00:06:08.800><c> of</c><00:06:08.960><c> code</c><00:06:09.360><c> each</c>

00:06:10.070 --> 00:06:10.080 align:start position:0%
just two files of 300 lines of code each
 

00:06:10.080 --> 00:06:12.469 align:start position:0%
just two files of 300 lines of code each
one<00:06:10.400><c> file</c><00:06:10.680><c> defines</c><00:06:11.000><c> the</c><00:06:11.120><c> GPT</c><00:06:11.840><c> model</c><00:06:12.360><c> the</c>

00:06:12.469 --> 00:06:12.479 align:start position:0%
one file defines the GPT model the
 

00:06:12.479 --> 00:06:14.629 align:start position:0%
one file defines the GPT model the
Transformer<00:06:13.400><c> and</c><00:06:13.560><c> one</c><00:06:13.759><c> file</c><00:06:13.960><c> trains</c><00:06:14.319><c> it</c><00:06:14.479><c> on</c>

00:06:14.629 --> 00:06:14.639 align:start position:0%
Transformer and one file trains it on
 

00:06:14.639 --> 00:06:17.029 align:start position:0%
Transformer and one file trains it on
some<00:06:14.800><c> given</c><00:06:15.039><c> Text</c><00:06:15.280><c> data</c><00:06:15.520><c> set</c><00:06:16.520><c> and</c><00:06:16.720><c> here</c><00:06:16.919><c> I'm</c>

00:06:17.029 --> 00:06:17.039 align:start position:0%
some given Text data set and here I'm
 

00:06:17.039 --> 00:06:18.870 align:start position:0%
some given Text data set and here I'm
showing<00:06:17.319><c> that</c><00:06:17.440><c> if</c><00:06:17.520><c> you</c><00:06:17.639><c> train</c><00:06:17.880><c> it</c><00:06:18.039><c> on</c><00:06:18.199><c> a</c><00:06:18.599><c> open</c>

00:06:18.870 --> 00:06:18.880 align:start position:0%
showing that if you train it on a open
 

00:06:18.880 --> 00:06:20.270 align:start position:0%
showing that if you train it on a open
web<00:06:19.080><c> Text</c><00:06:19.319><c> data</c><00:06:19.599><c> set</c><00:06:19.759><c> which</c><00:06:19.840><c> is</c><00:06:19.919><c> a</c><00:06:20.039><c> fairly</c>

00:06:20.270 --> 00:06:20.280 align:start position:0%
web Text data set which is a fairly
 

00:06:20.280 --> 00:06:22.230 align:start position:0%
web Text data set which is a fairly
large<00:06:20.520><c> data</c><00:06:20.720><c> set</c><00:06:20.840><c> of</c><00:06:20.960><c> web</c><00:06:21.160><c> pages</c><00:06:21.919><c> then</c><00:06:22.080><c> I</c>

00:06:22.230 --> 00:06:22.240 align:start position:0%
large data set of web pages then I
 

00:06:22.240 --> 00:06:25.430 align:start position:0%
large data set of web pages then I
reproduce<00:06:22.919><c> the</c><00:06:23.720><c> the</c><00:06:24.000><c> performance</c><00:06:24.680><c> of</c>

00:06:25.430 --> 00:06:25.440 align:start position:0%
reproduce the the performance of
 

00:06:25.440 --> 00:06:29.110 align:start position:0%
reproduce the the performance of
gpt2<00:06:26.440><c> so</c><00:06:26.639><c> gpt2</c><00:06:27.240><c> is</c><00:06:27.319><c> an</c><00:06:27.520><c> early</c><00:06:27.880><c> version</c><00:06:28.520><c> of</c><00:06:28.840><c> open</c>

00:06:29.110 --> 00:06:29.120 align:start position:0%
gpt2 so gpt2 is an early version of open
 

00:06:29.120 --> 00:06:32.830 align:start position:0%
gpt2 so gpt2 is an early version of open
AI<00:06:29.919><c> GPT</c><00:06:30.919><c> uh</c><00:06:31.199><c> from</c><00:06:31.479><c> 2017</c><00:06:32.280><c> if</c><00:06:32.360><c> I</c><00:06:32.479><c> recall</c>

00:06:32.830 --> 00:06:32.840 align:start position:0%
AI GPT uh from 2017 if I recall
 

00:06:32.840 --> 00:06:34.469 align:start position:0%
AI GPT uh from 2017 if I recall
correctly<00:06:33.599><c> and</c><00:06:33.800><c> I've</c><00:06:33.919><c> only</c><00:06:34.080><c> so</c><00:06:34.280><c> far</c>

00:06:34.469 --> 00:06:34.479 align:start position:0%
correctly and I've only so far
 

00:06:34.479 --> 00:06:36.830 align:start position:0%
correctly and I've only so far
reproduced<00:06:35.160><c> the</c><00:06:35.400><c> the</c><00:06:35.520><c> smallest</c><00:06:35.880><c> 124</c><00:06:36.440><c> million</c>

00:06:36.830 --> 00:06:36.840 align:start position:0%
reproduced the the smallest 124 million
 

00:06:36.840 --> 00:06:38.830 align:start position:0%
reproduced the the smallest 124 million
parameter<00:06:37.240><c> model</c><00:06:38.039><c> uh</c><00:06:38.160><c> but</c><00:06:38.280><c> basically</c><00:06:38.639><c> this</c><00:06:38.720><c> is</c>

00:06:38.830 --> 00:06:38.840 align:start position:0%
parameter model uh but basically this is
 

00:06:38.840 --> 00:06:39.950 align:start position:0%
parameter model uh but basically this is
just<00:06:39.000><c> proving</c><00:06:39.280><c> that</c><00:06:39.400><c> the</c><00:06:39.479><c> codebase</c><00:06:39.840><c> is</c>

00:06:39.950 --> 00:06:39.960 align:start position:0%
just proving that the codebase is
 

00:06:39.960 --> 00:06:42.830 align:start position:0%
just proving that the codebase is
correctly<00:06:40.360><c> arranged</c><00:06:41.240><c> and</c><00:06:41.360><c> I'm</c><00:06:41.520><c> able</c><00:06:41.720><c> to</c><00:06:42.000><c> load</c>

00:06:42.830 --> 00:06:42.840 align:start position:0%
correctly arranged and I'm able to load
 

00:06:42.840 --> 00:06:45.350 align:start position:0%
correctly arranged and I'm able to load
the<00:06:43.280><c> uh</c><00:06:43.560><c> neural</c><00:06:43.880><c> network</c><00:06:44.199><c> weights</c><00:06:44.720><c> that</c><00:06:44.880><c> openi</c>

00:06:45.350 --> 00:06:45.360 align:start position:0%
the uh neural network weights that openi
 

00:06:45.360 --> 00:06:48.270 align:start position:0%
the uh neural network weights that openi
has<00:06:45.560><c> released</c><00:06:46.120><c> later</c><00:06:47.120><c> so</c><00:06:47.759><c> you</c><00:06:47.880><c> can</c><00:06:48.039><c> take</c><00:06:48.160><c> a</c>

00:06:48.270 --> 00:06:48.280 align:start position:0%
has released later so you can take a
 

00:06:48.280 --> 00:06:50.749 align:start position:0%
has released later so you can take a
look<00:06:48.400><c> at</c><00:06:48.560><c> the</c><00:06:48.759><c> finished</c><00:06:49.160><c> code</c><00:06:49.520><c> here</c><00:06:49.639><c> in</c><00:06:49.759><c> N</c><00:06:50.000><c> GPT</c>

00:06:50.749 --> 00:06:50.759 align:start position:0%
look at the finished code here in N GPT
 

00:06:50.759 --> 00:06:51.909 align:start position:0%
look at the finished code here in N GPT
but<00:06:50.919><c> what</c><00:06:51.120><c> I</c><00:06:51.199><c> would</c><00:06:51.319><c> like</c><00:06:51.440><c> to</c><00:06:51.520><c> do</c><00:06:51.639><c> in</c><00:06:51.759><c> this</c>

00:06:51.909 --> 00:06:51.919 align:start position:0%
but what I would like to do in this
 

00:06:51.919 --> 00:06:55.110 align:start position:0%
but what I would like to do in this
lecture<00:06:52.560><c> is</c><00:06:52.759><c> I</c><00:06:52.840><c> would</c><00:06:53.000><c> like</c><00:06:53.120><c> to</c><00:06:53.880><c> basically</c><00:06:54.880><c> uh</c>

00:06:55.110 --> 00:06:55.120 align:start position:0%
lecture is I would like to basically uh
 

00:06:55.120 --> 00:06:57.309 align:start position:0%
lecture is I would like to basically uh
write<00:06:55.560><c> this</c><00:06:55.720><c> repository</c><00:06:56.240><c> from</c><00:06:56.400><c> scratch</c><00:06:57.160><c> so</c>

00:06:57.309 --> 00:06:57.319 align:start position:0%
write this repository from scratch so
 

00:06:57.319 --> 00:06:59.150 align:start position:0%
write this repository from scratch so
we're<00:06:57.440><c> going</c><00:06:57.560><c> to</c><00:06:57.720><c> begin</c><00:06:57.919><c> with</c><00:06:58.039><c> an</c><00:06:58.160><c> empty</c><00:06:58.479><c> file</c>

00:06:59.150 --> 00:06:59.160 align:start position:0%
we're going to begin with an empty file
 

00:06:59.160 --> 00:07:00.869 align:start position:0%
we're going to begin with an empty file
and<00:06:59.319><c> we're</c><00:06:59.560><c> we're</c><00:06:59.680><c> going</c><00:06:59.840><c> to</c><00:07:00.280><c> define</c><00:07:00.720><c> a</c>

00:07:00.869 --> 00:07:00.879 align:start position:0%
and we're we're going to define a
 

00:07:00.879 --> 00:07:03.710 align:start position:0%
and we're we're going to define a
Transformer<00:07:01.639><c> piece</c><00:07:01.879><c> by</c><00:07:02.440><c> piece</c><00:07:03.440><c> we're</c><00:07:03.560><c> going</c>

00:07:03.710 --> 00:07:03.720 align:start position:0%
Transformer piece by piece we're going
 

00:07:03.720 --> 00:07:05.749 align:start position:0%
Transformer piece by piece we're going
to<00:07:03.840><c> train</c><00:07:04.080><c> it</c><00:07:04.240><c> on</c><00:07:04.599><c> the</c><00:07:04.759><c> tiny</c><00:07:05.000><c> Shakespeare</c><00:07:05.479><c> data</c>

00:07:05.749 --> 00:07:05.759 align:start position:0%
to train it on the tiny Shakespeare data
 

00:07:05.759 --> 00:07:08.390 align:start position:0%
to train it on the tiny Shakespeare data
set<00:07:06.599><c> and</c><00:07:06.680><c> we'll</c><00:07:06.879><c> see</c><00:07:07.080><c> how</c><00:07:07.199><c> we</c><00:07:07.280><c> can</c><00:07:07.479><c> then</c><00:07:08.280><c> uh</c>

00:07:08.390 --> 00:07:08.400 align:start position:0%
set and we'll see how we can then uh
 

00:07:08.400 --> 00:07:10.790 align:start position:0%
set and we'll see how we can then uh
generate<00:07:08.759><c> infinite</c><00:07:09.400><c> Shakespeare</c><00:07:10.400><c> and</c><00:07:10.680><c> of</c>

00:07:10.790 --> 00:07:10.800 align:start position:0%
generate infinite Shakespeare and of
 

00:07:10.800 --> 00:07:12.150 align:start position:0%
generate infinite Shakespeare and of
course<00:07:11.039><c> this</c><00:07:11.160><c> can</c><00:07:11.360><c> copy</c><00:07:11.639><c> paste</c><00:07:11.840><c> to</c><00:07:12.000><c> any</c>

00:07:12.150 --> 00:07:12.160 align:start position:0%
course this can copy paste to any
 

00:07:12.160 --> 00:07:14.830 align:start position:0%
course this can copy paste to any
arbitrary<00:07:12.599><c> Text</c><00:07:12.840><c> data</c><00:07:13.120><c> set</c><00:07:13.520><c> uh</c><00:07:13.639><c> that</c><00:07:13.720><c> you</c><00:07:13.879><c> like</c>

00:07:14.830 --> 00:07:14.840 align:start position:0%
arbitrary Text data set uh that you like
 

00:07:14.840 --> 00:07:16.390 align:start position:0%
arbitrary Text data set uh that you like
uh<00:07:14.960><c> but</c><00:07:15.120><c> my</c><00:07:15.280><c> goal</c><00:07:15.560><c> really</c><00:07:15.800><c> here</c><00:07:15.960><c> is</c><00:07:16.080><c> to</c><00:07:16.240><c> just</c>

00:07:16.390 --> 00:07:16.400 align:start position:0%
uh but my goal really here is to just
 

00:07:16.400 --> 00:07:18.749 align:start position:0%
uh but my goal really here is to just
make<00:07:16.560><c> you</c><00:07:17.080><c> understand</c><00:07:17.240><c> and</c><00:07:17.520><c> appreciate</c><00:07:18.520><c> uh</c>

00:07:18.749 --> 00:07:18.759 align:start position:0%
make you understand and appreciate uh
 

00:07:18.759 --> 00:07:22.510 align:start position:0%
make you understand and appreciate uh
how<00:07:19.120><c> under</c><00:07:19.360><c> the</c><00:07:19.520><c> hood</c><00:07:19.680><c> chat</c><00:07:19.879><c> GPT</c><00:07:20.360><c> works</c><00:07:21.360><c> and</c><00:07:21.919><c> um</c>

00:07:22.510 --> 00:07:22.520 align:start position:0%
how under the hood chat GPT works and um
 

00:07:22.520 --> 00:07:23.990 align:start position:0%
how under the hood chat GPT works and um
really<00:07:22.720><c> all</c><00:07:22.879><c> that's</c><00:07:23.120><c> required</c><00:07:23.639><c> is</c><00:07:23.800><c> a</c>

00:07:23.990 --> 00:07:24.000 align:start position:0%
really all that's required is a
 

00:07:24.000 --> 00:07:27.390 align:start position:0%
really all that's required is a
Proficiency<00:07:24.639><c> in</c><00:07:25.160><c> Python</c><00:07:26.160><c> and</c><00:07:26.560><c> uh</c><00:07:26.680><c> some</c><00:07:26.879><c> basic</c>

00:07:27.390 --> 00:07:27.400 align:start position:0%
Proficiency in Python and uh some basic
 

00:07:27.400 --> 00:07:29.150 align:start position:0%
Proficiency in Python and uh some basic
understanding<00:07:27.639><c> of</c><00:07:28.160><c> um</c><00:07:28.639><c> calculus</c><00:07:29.039><c> and</c>

00:07:29.150 --> 00:07:29.160 align:start position:0%
understanding of um calculus and
 

00:07:29.160 --> 00:07:30.270 align:start position:0%
understanding of um calculus and
statistics

00:07:30.270 --> 00:07:30.280 align:start position:0%
statistics
 

00:07:30.280 --> 00:07:32.110 align:start position:0%
statistics
and<00:07:30.440><c> it</c><00:07:30.520><c> would</c><00:07:30.720><c> help</c><00:07:31.000><c> if</c><00:07:31.120><c> you</c><00:07:31.319><c> also</c><00:07:31.520><c> see</c><00:07:31.919><c> my</c>

00:07:32.110 --> 00:07:32.120 align:start position:0%
and it would help if you also see my
 

00:07:32.120 --> 00:07:33.990 align:start position:0%
and it would help if you also see my
previous<00:07:32.520><c> videos</c><00:07:33.080><c> on</c><00:07:33.360><c> the</c><00:07:33.479><c> same</c><00:07:33.680><c> YouTube</c>

00:07:33.990 --> 00:07:34.000 align:start position:0%
previous videos on the same YouTube
 

00:07:34.000 --> 00:07:35.909 align:start position:0%
previous videos on the same YouTube
channel<00:07:34.720><c> in</c><00:07:34.879><c> particular</c><00:07:35.280><c> my</c><00:07:35.440><c> make</c><00:07:35.639><c> more</c>

00:07:35.909 --> 00:07:35.919 align:start position:0%
channel in particular my make more
 

00:07:35.919 --> 00:07:40.469 align:start position:0%
channel in particular my make more
series<00:07:36.840><c> where</c><00:07:37.160><c> I</c><00:07:37.800><c> um</c><00:07:38.800><c> Define</c><00:07:39.440><c> smaller</c><00:07:40.080><c> and</c>

00:07:40.469 --> 00:07:40.479 align:start position:0%
series where I um Define smaller and
 

00:07:40.479 --> 00:07:42.830 align:start position:0%
series where I um Define smaller and
simpler<00:07:40.960><c> neural</c><00:07:41.319><c> network</c><00:07:41.720><c> language</c><00:07:42.080><c> models</c>

00:07:42.830 --> 00:07:42.840 align:start position:0%
simpler neural network language models
 

00:07:42.840 --> 00:07:45.189 align:start position:0%
simpler neural network language models
uh<00:07:42.919><c> so</c><00:07:43.080><c> multi</c><00:07:43.680><c> perceptrons</c><00:07:44.280><c> and</c><00:07:44.440><c> so</c><00:07:44.560><c> on</c><00:07:45.080><c> it</c>

00:07:45.189 --> 00:07:45.199 align:start position:0%
uh so multi perceptrons and so on it
 

00:07:45.199 --> 00:07:46.869 align:start position:0%
uh so multi perceptrons and so on it
really<00:07:45.599><c> introduces</c><00:07:46.080><c> the</c><00:07:46.240><c> language</c><00:07:46.560><c> modeling</c>

00:07:46.869 --> 00:07:46.879 align:start position:0%
really introduces the language modeling
 

00:07:46.879 --> 00:07:49.390 align:start position:0%
really introduces the language modeling
framework<00:07:47.800><c> and</c><00:07:48.039><c> then</c><00:07:48.560><c> uh</c><00:07:48.720><c> here</c><00:07:48.879><c> in</c><00:07:49.039><c> this</c><00:07:49.159><c> video</c>

00:07:49.390 --> 00:07:49.400 align:start position:0%
framework and then uh here in this video
 

00:07:49.400 --> 00:07:50.749 align:start position:0%
framework and then uh here in this video
we're<00:07:49.520><c> going</c><00:07:49.680><c> to</c><00:07:49.800><c> focus</c><00:07:50.000><c> on</c><00:07:50.120><c> the</c><00:07:50.240><c> Transformer</c>

00:07:50.749 --> 00:07:50.759 align:start position:0%
we're going to focus on the Transformer
 

00:07:50.759 --> 00:07:53.510 align:start position:0%
we're going to focus on the Transformer
neural<00:07:51.080><c> network</c><00:07:51.759><c> itself</c><00:07:52.759><c> okay</c><00:07:52.840><c> so</c><00:07:53.000><c> I</c><00:07:53.120><c> created</c>

00:07:53.510 --> 00:07:53.520 align:start position:0%
neural network itself okay so I created
 

00:07:53.520 --> 00:07:57.110 align:start position:0%
neural network itself okay so I created
a<00:07:53.680><c> new</c><00:07:53.879><c> Google</c><00:07:54.199><c> collab</c><00:07:55.120><c> uh</c><00:07:55.319><c> jup</c><00:07:55.759><c> notebook</c><00:07:56.199><c> here</c>

00:07:57.110 --> 00:07:57.120 align:start position:0%
a new Google collab uh jup notebook here
 

00:07:57.120 --> 00:07:58.749 align:start position:0%
a new Google collab uh jup notebook here
and<00:07:57.440><c> this</c><00:07:57.520><c> will</c><00:07:57.720><c> allow</c><00:07:57.919><c> me</c><00:07:58.000><c> to</c><00:07:58.159><c> later</c><00:07:58.479><c> easily</c>

00:07:58.749 --> 00:07:58.759 align:start position:0%
and this will allow me to later easily
 

00:07:58.759 --> 00:08:00.110 align:start position:0%
and this will allow me to later easily
share<00:07:59.120><c> this</c><00:07:59.520><c> code</c><00:07:59.639><c> that</c><00:07:59.720><c> we're</c><00:07:59.879><c> going</c><00:08:00.000><c> to</c>

00:08:00.110 --> 00:08:00.120 align:start position:0%
share this code that we're going to
 

00:08:00.120 --> 00:08:01.830 align:start position:0%
share this code that we're going to
develop<00:08:00.560><c> together</c><00:08:01.080><c> uh</c><00:08:01.199><c> with</c><00:08:01.319><c> you</c><00:08:01.479><c> so</c><00:08:01.599><c> you</c><00:08:01.680><c> can</c>

00:08:01.830 --> 00:08:01.840 align:start position:0%
develop together uh with you so you can
 

00:08:01.840 --> 00:08:03.629 align:start position:0%
develop together uh with you so you can
follow<00:08:02.120><c> along</c><00:08:02.720><c> so</c><00:08:02.879><c> this</c><00:08:03.000><c> will</c><00:08:03.120><c> be</c><00:08:03.240><c> in</c><00:08:03.280><c> a</c><00:08:03.400><c> video</c>

00:08:03.629 --> 00:08:03.639 align:start position:0%
follow along so this will be in a video
 

00:08:03.639 --> 00:08:07.070 align:start position:0%
follow along so this will be in a video
description<00:08:04.360><c> uh</c><00:08:04.680><c> later</c><00:08:05.680><c> now</c><00:08:06.479><c> here</c><00:08:06.759><c> I've</c><00:08:06.919><c> just</c>

00:08:07.070 --> 00:08:07.080 align:start position:0%
description uh later now here I've just
 

00:08:07.080 --> 00:08:09.189 align:start position:0%
description uh later now here I've just
done<00:08:07.319><c> some</c><00:08:07.560><c> preliminaries</c><00:08:08.520><c> I</c><00:08:08.680><c> downloaded</c><00:08:09.080><c> the</c>

00:08:09.189 --> 00:08:09.199 align:start position:0%
done some preliminaries I downloaded the
 

00:08:09.199 --> 00:08:10.790 align:start position:0%
done some preliminaries I downloaded the
data<00:08:09.440><c> set</c><00:08:09.680><c> the</c><00:08:09.759><c> tiny</c><00:08:09.960><c> Shakespeare</c><00:08:10.440><c> data</c><00:08:10.639><c> set</c>

00:08:10.790 --> 00:08:10.800 align:start position:0%
data set the tiny Shakespeare data set
 

00:08:10.800 --> 00:08:12.550 align:start position:0%
data set the tiny Shakespeare data set
at<00:08:10.919><c> this</c><00:08:11.080><c> URL</c><00:08:11.879><c> and</c><00:08:11.960><c> you</c><00:08:12.039><c> can</c><00:08:12.159><c> see</c><00:08:12.319><c> that</c><00:08:12.440><c> it's</c>

00:08:12.550 --> 00:08:12.560 align:start position:0%
at this URL and you can see that it's
 

00:08:12.560 --> 00:08:15.830 align:start position:0%
at this URL and you can see that it's
about<00:08:12.720><c> a</c><00:08:12.800><c> 1</c><00:08:13.000><c> Megabyte</c><00:08:13.800><c> file</c><00:08:14.800><c> then</c><00:08:15.000><c> here</c><00:08:15.280><c> I</c><00:08:15.520><c> open</c>

00:08:15.830 --> 00:08:15.840 align:start position:0%
about a 1 Megabyte file then here I open
 

00:08:15.840 --> 00:08:17.790 align:start position:0%
about a 1 Megabyte file then here I open
the<00:08:15.960><c> input.txt</c><00:08:16.520><c> file</c><00:08:17.120><c> and</c><00:08:17.240><c> just</c><00:08:17.360><c> read</c><00:08:17.560><c> in</c><00:08:17.680><c> all</c>

00:08:17.790 --> 00:08:17.800 align:start position:0%
the input.txt file and just read in all
 

00:08:17.800 --> 00:08:20.070 align:start position:0%
the input.txt file and just read in all
the<00:08:17.879><c> text</c><00:08:18.080><c> of</c><00:08:18.240><c> the</c><00:08:18.479><c> string</c><00:08:19.479><c> and</c><00:08:19.599><c> we</c><00:08:19.720><c> see</c><00:08:19.960><c> that</c>

00:08:20.070 --> 00:08:20.080 align:start position:0%
the text of the string and we see that
 

00:08:20.080 --> 00:08:22.430 align:start position:0%
the text of the string and we see that
we<00:08:20.199><c> are</c><00:08:20.400><c> working</c><00:08:20.720><c> with</c><00:08:20.919><c> 1</c><00:08:21.159><c> million</c><00:08:21.560><c> characters</c>

00:08:22.430 --> 00:08:22.440 align:start position:0%
we are working with 1 million characters
 

00:08:22.440 --> 00:08:24.790 align:start position:0%
we are working with 1 million characters
roughly<00:08:23.440><c> and</c><00:08:23.599><c> the</c><00:08:23.720><c> first</c><00:08:23.919><c> 1,000</c><00:08:24.360><c> characters</c>

00:08:24.790 --> 00:08:24.800 align:start position:0%
roughly and the first 1,000 characters
 

00:08:24.800 --> 00:08:26.670 align:start position:0%
roughly and the first 1,000 characters
if<00:08:24.879><c> we</c><00:08:25.000><c> just</c><00:08:25.159><c> print</c><00:08:25.360><c> them</c><00:08:25.520><c> out</c><00:08:26.120><c> are</c><00:08:26.360><c> basically</c>

00:08:26.670 --> 00:08:26.680 align:start position:0%
if we just print them out are basically
 

00:08:26.680 --> 00:08:28.110 align:start position:0%
if we just print them out are basically
what<00:08:26.759><c> you</c><00:08:26.879><c> would</c><00:08:27.080><c> expect</c><00:08:27.479><c> this</c><00:08:27.599><c> is</c><00:08:27.720><c> the</c><00:08:27.879><c> first</c>

00:08:28.110 --> 00:08:28.120 align:start position:0%
what you would expect this is the first
 

00:08:28.120 --> 00:08:30.830 align:start position:0%
what you would expect this is the first
1,000<00:08:29.039><c> characters</c><00:08:29.879><c> of</c><00:08:30.000><c> the</c><00:08:30.120><c> tiny</c><00:08:30.360><c> Shakespeare</c>

00:08:30.830 --> 00:08:30.840 align:start position:0%
1,000 characters of the tiny Shakespeare
 

00:08:30.840 --> 00:08:34.750 align:start position:0%
1,000 characters of the tiny Shakespeare
data<00:08:31.080><c> set</c><00:08:31.639><c> roughly</c><00:08:31.960><c> up</c><00:08:32.080><c> to</c><00:08:32.800><c> here</c><00:08:33.800><c> so</c><00:08:34.120><c> so</c><00:08:34.320><c> far</c><00:08:34.519><c> so</c>

00:08:34.750 --> 00:08:34.760 align:start position:0%
data set roughly up to here so so far so
 

00:08:34.760 --> 00:08:37.389 align:start position:0%
data set roughly up to here so so far so
good<00:08:35.320><c> next</c><00:08:35.599><c> we're</c><00:08:35.760><c> going</c><00:08:35.919><c> to</c><00:08:36.080><c> take</c><00:08:36.279><c> this</c><00:08:36.479><c> text</c>

00:08:37.389 --> 00:08:37.399 align:start position:0%
good next we're going to take this text
 

00:08:37.399 --> 00:08:39.269 align:start position:0%
good next we're going to take this text
and<00:08:37.760><c> the</c><00:08:37.880><c> text</c><00:08:38.159><c> is</c><00:08:38.320><c> a</c><00:08:38.479><c> sequence</c><00:08:38.800><c> of</c><00:08:38.919><c> characters</c>

00:08:39.269 --> 00:08:39.279 align:start position:0%
and the text is a sequence of characters
 

00:08:39.279 --> 00:08:41.230 align:start position:0%
and the text is a sequence of characters
in<00:08:39.479><c> Python</c><00:08:40.200><c> so</c><00:08:40.360><c> when</c><00:08:40.479><c> I</c><00:08:40.599><c> call</c><00:08:40.800><c> the</c><00:08:40.919><c> set</c>

00:08:41.230 --> 00:08:41.240 align:start position:0%
in Python so when I call the set
 

00:08:41.240 --> 00:08:44.029 align:start position:0%
in Python so when I call the set
Constructor<00:08:41.839><c> on</c><00:08:42.000><c> it</c><00:08:42.839><c> I'm</c><00:08:43.000><c> just</c><00:08:43.159><c> going</c><00:08:43.320><c> to</c><00:08:43.599><c> get</c>

00:08:44.029 --> 00:08:44.039 align:start position:0%
Constructor on it I'm just going to get
 

00:08:44.039 --> 00:08:46.710 align:start position:0%
Constructor on it I'm just going to get
the<00:08:44.360><c> set</c><00:08:44.720><c> of</c><00:08:45.120><c> all</c><00:08:45.279><c> the</c><00:08:45.560><c> characters</c><00:08:46.120><c> that</c><00:08:46.320><c> occur</c>

00:08:46.710 --> 00:08:46.720 align:start position:0%
the set of all the characters that occur
 

00:08:46.720 --> 00:08:49.710 align:start position:0%
the set of all the characters that occur
in<00:08:46.920><c> this</c><00:08:47.360><c> text</c><00:08:48.360><c> and</c><00:08:48.440><c> then</c><00:08:48.560><c> I</c><00:08:48.720><c> call</c><00:08:49.040><c> list</c><00:08:49.360><c> on</c>

00:08:49.710 --> 00:08:49.720 align:start position:0%
in this text and then I call list on
 

00:08:49.720 --> 00:08:51.710 align:start position:0%
in this text and then I call list on
that<00:08:50.480><c> to</c><00:08:50.720><c> create</c><00:08:51.040><c> a</c><00:08:51.240><c> list</c><00:08:51.399><c> of</c><00:08:51.560><c> those</c>

00:08:51.710 --> 00:08:51.720 align:start position:0%
that to create a list of those
 

00:08:51.720 --> 00:08:53.389 align:start position:0%
that to create a list of those
characters<00:08:52.120><c> instead</c><00:08:52.360><c> of</c><00:08:52.480><c> just</c><00:08:52.600><c> a</c><00:08:52.800><c> set</c><00:08:53.160><c> so</c><00:08:53.279><c> that</c>

00:08:53.389 --> 00:08:53.399 align:start position:0%
characters instead of just a set so that
 

00:08:53.399 --> 00:08:56.269 align:start position:0%
characters instead of just a set so that
I<00:08:53.519><c> have</c><00:08:53.640><c> an</c><00:08:53.760><c> ordering</c><00:08:54.320><c> an</c><00:08:54.440><c> arbitrary</c><00:08:55.279><c> ordering</c>

00:08:56.269 --> 00:08:56.279 align:start position:0%
I have an ordering an arbitrary ordering
 

00:08:56.279 --> 00:08:59.030 align:start position:0%
I have an ordering an arbitrary ordering
and<00:08:56.399><c> then</c><00:08:56.519><c> I</c><00:08:56.680><c> sort</c><00:08:57.279><c> that</c><00:08:58.240><c> so</c><00:08:58.399><c> basically</c><00:08:58.720><c> we</c><00:08:58.880><c> get</c>

00:08:59.030 --> 00:08:59.040 align:start position:0%
and then I sort that so basically we get
 

00:08:59.040 --> 00:09:00.590 align:start position:0%
and then I sort that so basically we get
just<00:08:59.440><c> all</c><00:08:59.560><c> the</c><00:08:59.720><c> characters</c><00:09:00.040><c> that</c><00:09:00.200><c> occur</c><00:09:00.480><c> in</c>

00:09:00.590 --> 00:09:00.600 align:start position:0%
just all the characters that occur in
 

00:09:00.600 --> 00:09:02.829 align:start position:0%
just all the characters that occur in
the<00:09:00.720><c> entire</c><00:09:01.040><c> data</c><00:09:01.320><c> set</c><00:09:01.480><c> and</c><00:09:01.560><c> they're</c><00:09:01.839><c> sorted</c>

00:09:02.829 --> 00:09:02.839 align:start position:0%
the entire data set and they're sorted
 

00:09:02.839 --> 00:09:04.310 align:start position:0%
the entire data set and they're sorted
now<00:09:03.000><c> the</c><00:09:03.160><c> number</c><00:09:03.480><c> of</c><00:09:03.640><c> them</c><00:09:03.880><c> is</c><00:09:04.000><c> going</c><00:09:04.120><c> to</c><00:09:04.200><c> be</c>

00:09:04.310 --> 00:09:04.320 align:start position:0%
now the number of them is going to be
 

00:09:04.320 --> 00:09:06.310 align:start position:0%
now the number of them is going to be
our<00:09:04.519><c> vocabulary</c><00:09:05.160><c> size</c><00:09:05.600><c> these</c><00:09:05.720><c> are</c><00:09:05.880><c> the</c>

00:09:06.310 --> 00:09:06.320 align:start position:0%
our vocabulary size these are the
 

00:09:06.320 --> 00:09:08.990 align:start position:0%
our vocabulary size these are the
possible<00:09:06.880><c> elements</c><00:09:07.480><c> of</c><00:09:07.600><c> our</c><00:09:07.880><c> sequences</c><00:09:08.880><c> and</c>

00:09:08.990 --> 00:09:09.000 align:start position:0%
possible elements of our sequences and
 

00:09:09.000 --> 00:09:11.310 align:start position:0%
possible elements of our sequences and
we<00:09:09.120><c> see</c><00:09:09.399><c> that</c><00:09:09.560><c> when</c><00:09:09.640><c> I</c><00:09:09.800><c> print</c><00:09:10.079><c> here</c><00:09:10.279><c> the</c>

00:09:11.310 --> 00:09:11.320 align:start position:0%
we see that when I print here the
 

00:09:11.320 --> 00:09:14.310 align:start position:0%
we see that when I print here the
characters<00:09:12.320><c> there's</c><00:09:12.680><c> 65</c><00:09:13.200><c> of</c><00:09:13.360><c> them</c><00:09:13.519><c> in</c><00:09:13.640><c> total</c>

00:09:14.310 --> 00:09:14.320 align:start position:0%
characters there's 65 of them in total
 

00:09:14.320 --> 00:09:16.190 align:start position:0%
characters there's 65 of them in total
there's<00:09:14.480><c> a</c><00:09:14.680><c> space</c><00:09:15.040><c> character</c><00:09:15.800><c> and</c><00:09:15.880><c> then</c><00:09:16.040><c> all</c>

00:09:16.190 --> 00:09:16.200 align:start position:0%
there's a space character and then all
 

00:09:16.200 --> 00:09:19.190 align:start position:0%
there's a space character and then all
kinds<00:09:16.360><c> of</c><00:09:16.519><c> special</c><00:09:17.320><c> characters</c><00:09:18.320><c> and</c><00:09:18.480><c> then</c><00:09:18.959><c> U</c>

00:09:19.190 --> 00:09:19.200 align:start position:0%
kinds of special characters and then U
 

00:09:19.200 --> 00:09:21.550 align:start position:0%
kinds of special characters and then U
capitals<00:09:19.760><c> and</c><00:09:19.880><c> lowercase</c><00:09:20.399><c> letters</c><00:09:21.240><c> so</c><00:09:21.399><c> that's</c>

00:09:21.550 --> 00:09:21.560 align:start position:0%
capitals and lowercase letters so that's
 

00:09:21.560 --> 00:09:23.190 align:start position:0%
capitals and lowercase letters so that's
our<00:09:21.760><c> vocabulary</c><00:09:22.440><c> and</c><00:09:22.560><c> that's</c><00:09:22.720><c> the</c><00:09:22.839><c> sort</c><00:09:23.000><c> of</c>

00:09:23.190 --> 00:09:23.200 align:start position:0%
our vocabulary and that's the sort of
 

00:09:23.200 --> 00:09:25.790 align:start position:0%
our vocabulary and that's the sort of
like<00:09:23.640><c> possible</c><00:09:24.640><c> uh</c><00:09:24.760><c> characters</c><00:09:25.360><c> that</c><00:09:25.600><c> the</c>

00:09:25.790 --> 00:09:25.800 align:start position:0%
like possible uh characters that the
 

00:09:25.800 --> 00:09:29.230 align:start position:0%
like possible uh characters that the
model<00:09:26.120><c> can</c><00:09:26.360><c> see</c><00:09:27.000><c> or</c><00:09:27.640><c> emit</c><00:09:28.640><c> okay</c><00:09:28.760><c> so</c><00:09:28.920><c> next</c><00:09:29.160><c> we</c>

00:09:29.230 --> 00:09:29.240 align:start position:0%
model can see or emit okay so next we
 

00:09:29.240 --> 00:09:30.990 align:start position:0%
model can see or emit okay so next we
will<00:09:29.399><c> would</c><00:09:29.560><c> like</c><00:09:29.680><c> to</c><00:09:30.000><c> develop</c><00:09:30.360><c> some</c><00:09:30.560><c> strategy</c>

00:09:30.990 --> 00:09:31.000 align:start position:0%
will would like to develop some strategy
 

00:09:31.000 --> 00:09:34.990 align:start position:0%
will would like to develop some strategy
to<00:09:31.279><c> tokenize</c><00:09:32.279><c> the</c><00:09:32.560><c> input</c><00:09:33.120><c> text</c><00:09:34.120><c> now</c><00:09:34.760><c> when</c>

00:09:34.990 --> 00:09:35.000 align:start position:0%
to tokenize the input text now when
 

00:09:35.000 --> 00:09:36.870 align:start position:0%
to tokenize the input text now when
people<00:09:35.200><c> say</c><00:09:35.440><c> tokenize</c><00:09:36.040><c> they</c><00:09:36.160><c> mean</c><00:09:36.399><c> convert</c>

00:09:36.870 --> 00:09:36.880 align:start position:0%
people say tokenize they mean convert
 

00:09:36.880 --> 00:09:39.190 align:start position:0%
people say tokenize they mean convert
the<00:09:37.040><c> raw</c><00:09:37.480><c> text</c><00:09:37.800><c> as</c><00:09:37.880><c> a</c><00:09:38.040><c> string</c><00:09:38.720><c> to</c><00:09:38.920><c> some</c>

00:09:39.190 --> 00:09:39.200 align:start position:0%
the raw text as a string to some
 

00:09:39.200 --> 00:09:41.590 align:start position:0%
the raw text as a string to some
sequence<00:09:39.600><c> of</c><00:09:39.760><c> integers</c><00:09:40.480><c> According</c><00:09:40.800><c> to</c><00:09:41.000><c> some</c>

00:09:41.590 --> 00:09:41.600 align:start position:0%
sequence of integers According to some
 

00:09:41.600 --> 00:09:43.630 align:start position:0%
sequence of integers According to some
uh<00:09:41.720><c> notebook</c><00:09:42.279><c> According</c><00:09:42.560><c> to</c><00:09:42.680><c> some</c><00:09:42.880><c> vocabulary</c>

00:09:43.630 --> 00:09:43.640 align:start position:0%
uh notebook According to some vocabulary
 

00:09:43.640 --> 00:09:46.870 align:start position:0%
uh notebook According to some vocabulary
of<00:09:43.920><c> possible</c><00:09:44.519><c> elements</c><00:09:45.519><c> so</c><00:09:45.640><c> as</c><00:09:45.760><c> an</c><00:09:45.920><c> example</c>

00:09:46.870 --> 00:09:46.880 align:start position:0%
of possible elements so as an example
 

00:09:46.880 --> 00:09:48.150 align:start position:0%
of possible elements so as an example
here<00:09:47.120><c> we</c><00:09:47.200><c> are</c><00:09:47.360><c> going</c><00:09:47.480><c> to</c><00:09:47.600><c> be</c><00:09:47.760><c> building</c><00:09:48.040><c> a</c>

00:09:48.150 --> 00:09:48.160 align:start position:0%
here we are going to be building a
 

00:09:48.160 --> 00:09:49.750 align:start position:0%
here we are going to be building a
character<00:09:48.480><c> level</c><00:09:48.720><c> language</c><00:09:49.040><c> model</c><00:09:49.440><c> so</c><00:09:49.600><c> we're</c>

00:09:49.750 --> 00:09:49.760 align:start position:0%
character level language model so we're
 

00:09:49.760 --> 00:09:50.910 align:start position:0%
character level language model so we're
simply<00:09:50.000><c> going</c><00:09:50.160><c> to</c><00:09:50.279><c> be</c><00:09:50.399><c> translating</c>

00:09:50.910 --> 00:09:50.920 align:start position:0%
simply going to be translating
 

00:09:50.920 --> 00:09:53.630 align:start position:0%
simply going to be translating
individual<00:09:51.480><c> characters</c><00:09:52.000><c> into</c><00:09:52.519><c> integers</c><00:09:53.519><c> so</c>

00:09:53.630 --> 00:09:53.640 align:start position:0%
individual characters into integers so
 

00:09:53.640 --> 00:09:55.430 align:start position:0%
individual characters into integers so
let<00:09:53.720><c> me</c><00:09:53.839><c> show</c><00:09:54.040><c> you</c><00:09:54.519><c> uh</c><00:09:54.680><c> a</c><00:09:54.760><c> chunk</c><00:09:55.000><c> of</c><00:09:55.120><c> code</c><00:09:55.360><c> that</c>

00:09:55.430 --> 00:09:55.440 align:start position:0%
let me show you uh a chunk of code that
 

00:09:55.440 --> 00:09:57.430 align:start position:0%
let me show you uh a chunk of code that
sort<00:09:55.560><c> of</c><00:09:55.680><c> does</c><00:09:55.920><c> that</c><00:09:56.040><c> for</c><00:09:56.279><c> us</c><00:09:57.120><c> so</c><00:09:57.279><c> we're</c>

00:09:57.430 --> 00:09:57.440 align:start position:0%
sort of does that for us so we're
 

00:09:57.440 --> 00:09:58.910 align:start position:0%
sort of does that for us so we're
building<00:09:57.800><c> both</c><00:09:58.000><c> the</c><00:09:58.120><c> encoder</c><00:09:58.680><c> and</c><00:09:58.800><c> the</c>

00:09:58.910 --> 00:09:58.920 align:start position:0%
building both the encoder and the
 

00:09:58.920 --> 00:10:00.190 align:start position:0%
building both the encoder and the
decoder

00:10:00.190 --> 00:10:00.200 align:start position:0%
decoder
 

00:10:00.200 --> 00:10:01.190 align:start position:0%
decoder
and<00:10:00.320><c> let</c><00:10:00.399><c> me</c><00:10:00.519><c> just</c><00:10:00.680><c> talk</c><00:10:00.839><c> through</c><00:10:01.000><c> what's</c>

00:10:01.190 --> 00:10:01.200 align:start position:0%
and let me just talk through what's
 

00:10:01.200 --> 00:10:02.230 align:start position:0%
and let me just talk through what's
happening

00:10:02.230 --> 00:10:02.240 align:start position:0%
happening
 

00:10:02.240 --> 00:10:05.389 align:start position:0%
happening
here<00:10:03.240><c> when</c><00:10:03.399><c> we</c><00:10:03.640><c> encode</c><00:10:04.200><c> an</c><00:10:04.360><c> arbitrary</c><00:10:04.920><c> text</c>

00:10:05.389 --> 00:10:05.399 align:start position:0%
here when we encode an arbitrary text
 

00:10:05.399 --> 00:10:08.190 align:start position:0%
here when we encode an arbitrary text
like<00:10:05.600><c> hi</c><00:10:05.880><c> there</c><00:10:06.440><c> we're</c><00:10:06.640><c> going</c><00:10:06.800><c> to</c><00:10:07.000><c> receive</c><00:10:07.959><c> a</c>

00:10:08.190 --> 00:10:08.200 align:start position:0%
like hi there we're going to receive a
 

00:10:08.200 --> 00:10:10.750 align:start position:0%
like hi there we're going to receive a
list<00:10:08.440><c> of</c><00:10:08.720><c> integers</c><00:10:09.720><c> that</c><00:10:09.920><c> represents</c><00:10:10.600><c> that</c>

00:10:10.750 --> 00:10:10.760 align:start position:0%
list of integers that represents that
 

00:10:10.760 --> 00:10:14.910 align:start position:0%
list of integers that represents that
string<00:10:11.480><c> so</c><00:10:11.680><c> for</c><00:10:11.839><c> example</c><00:10:12.120><c> 46</c><00:10:12.680><c> 47</c><00:10:13.560><c> Etc</c><00:10:14.560><c> and</c><00:10:14.680><c> then</c>

00:10:14.910 --> 00:10:14.920 align:start position:0%
string so for example 46 47 Etc and then
 

00:10:14.920 --> 00:10:17.030 align:start position:0%
string so for example 46 47 Etc and then
we<00:10:15.040><c> also</c><00:10:15.360><c> have</c><00:10:15.440><c> the</c><00:10:15.560><c> reverse</c><00:10:15.959><c> mapping</c><00:10:16.680><c> so</c><00:10:16.920><c> we</c>

00:10:17.030 --> 00:10:17.040 align:start position:0%
we also have the reverse mapping so we
 

00:10:17.040 --> 00:10:20.310 align:start position:0%
we also have the reverse mapping so we
can<00:10:17.279><c> take</c><00:10:17.839><c> this</c><00:10:18.120><c> list</c><00:10:18.880><c> and</c><00:10:19.120><c> decode</c><00:10:19.560><c> it</c><00:10:19.920><c> to</c><00:10:20.120><c> get</c>

00:10:20.310 --> 00:10:20.320 align:start position:0%
can take this list and decode it to get
 

00:10:20.320 --> 00:10:22.630 align:start position:0%
can take this list and decode it to get
back<00:10:20.560><c> the</c><00:10:20.760><c> exact</c><00:10:21.079><c> same</c><00:10:21.360><c> string</c><00:10:22.360><c> so</c><00:10:22.480><c> it's</c>

00:10:22.630 --> 00:10:22.640 align:start position:0%
back the exact same string so it's
 

00:10:22.640 --> 00:10:24.110 align:start position:0%
back the exact same string so it's
really<00:10:22.800><c> just</c><00:10:22.920><c> like</c><00:10:23.040><c> a</c><00:10:23.120><c> translation</c><00:10:23.839><c> to</c>

00:10:24.110 --> 00:10:24.120 align:start position:0%
really just like a translation to
 

00:10:24.120 --> 00:10:26.910 align:start position:0%
really just like a translation to
integers<00:10:24.680><c> and</c><00:10:24.959><c> back</c><00:10:25.279><c> for</c><00:10:25.519><c> arbitrary</c><00:10:26.000><c> string</c>

00:10:26.910 --> 00:10:26.920 align:start position:0%
integers and back for arbitrary string
 

00:10:26.920 --> 00:10:28.590 align:start position:0%
integers and back for arbitrary string
and<00:10:27.079><c> for</c><00:10:27.320><c> us</c><00:10:27.600><c> it</c><00:10:27.680><c> is</c><00:10:27.839><c> done</c><00:10:28.000><c> on</c><00:10:28.079><c> a</c><00:10:28.240><c> character</c>

00:10:28.590 --> 00:10:28.600 align:start position:0%
and for us it is done on a character
 

00:10:28.600 --> 00:10:30.110 align:start position:0%
and for us it is done on a character
level

00:10:30.110 --> 00:10:30.120 align:start position:0%
level
 

00:10:30.120 --> 00:10:31.949 align:start position:0%
level
now<00:10:30.240><c> the</c><00:10:30.360><c> way</c><00:10:30.480><c> this</c><00:10:30.640><c> was</c><00:10:30.760><c> achieved</c><00:10:31.200><c> is</c><00:10:31.600><c> we</c><00:10:31.760><c> just</c>

00:10:31.949 --> 00:10:31.959 align:start position:0%
now the way this was achieved is we just
 

00:10:31.959 --> 00:10:34.150 align:start position:0%
now the way this was achieved is we just
iterate<00:10:32.360><c> over</c><00:10:32.640><c> all</c><00:10:32.800><c> the</c><00:10:32.920><c> characters</c><00:10:33.399><c> here</c><00:10:33.959><c> and</c>

00:10:34.150 --> 00:10:34.160 align:start position:0%
iterate over all the characters here and
 

00:10:34.160 --> 00:10:35.870 align:start position:0%
iterate over all the characters here and
create<00:10:34.440><c> a</c><00:10:34.519><c> lookup</c><00:10:34.880><c> table</c><00:10:35.240><c> from</c><00:10:35.440><c> the</c><00:10:35.600><c> character</c>

00:10:35.870 --> 00:10:35.880 align:start position:0%
create a lookup table from the character
 

00:10:35.880 --> 00:10:38.430 align:start position:0%
create a lookup table from the character
to<00:10:36.040><c> the</c><00:10:36.160><c> integer</c><00:10:36.800><c> and</c><00:10:37.000><c> vice</c><00:10:37.200><c> versa</c><00:10:38.160><c> and</c><00:10:38.279><c> then</c>

00:10:38.430 --> 00:10:38.440 align:start position:0%
to the integer and vice versa and then
 

00:10:38.440 --> 00:10:40.629 align:start position:0%
to the integer and vice versa and then
to<00:10:38.639><c> encode</c><00:10:39.160><c> some</c><00:10:39.360><c> string</c><00:10:40.160><c> we</c><00:10:40.320><c> simply</c>

00:10:40.629 --> 00:10:40.639 align:start position:0%
to encode some string we simply
 

00:10:40.639 --> 00:10:41.629 align:start position:0%
to encode some string we simply
translate<00:10:41.040><c> all</c><00:10:41.120><c> the</c><00:10:41.240><c> characters</c>

00:10:41.629 --> 00:10:41.639 align:start position:0%
translate all the characters
 

00:10:41.639 --> 00:10:44.550 align:start position:0%
translate all the characters
individually<00:10:42.519><c> and</c><00:10:42.639><c> to</c><00:10:42.800><c> decode</c><00:10:43.120><c> it</c><00:10:43.360><c> back</c><00:10:43.800><c> we</c>

00:10:44.550 --> 00:10:44.560 align:start position:0%
individually and to decode it back we
 

00:10:44.560 --> 00:10:46.430 align:start position:0%
individually and to decode it back we
use<00:10:44.800><c> the</c><00:10:44.920><c> reverse</c><00:10:45.279><c> mapping</c><00:10:45.600><c> and</c><00:10:45.800><c> concatenate</c>

00:10:46.430 --> 00:10:46.440 align:start position:0%
use the reverse mapping and concatenate
 

00:10:46.440 --> 00:10:49.470 align:start position:0%
use the reverse mapping and concatenate
all<00:10:46.560><c> of</c><00:10:46.680><c> it</c><00:10:47.600><c> now</c><00:10:47.760><c> this</c><00:10:47.839><c> is</c><00:10:48.040><c> only</c><00:10:48.320><c> one</c><00:10:48.959><c> of</c><00:10:49.200><c> many</c>

00:10:49.470 --> 00:10:49.480 align:start position:0%
all of it now this is only one of many
 

00:10:49.480 --> 00:10:51.430 align:start position:0%
all of it now this is only one of many
possible<00:10:49.800><c> encodings</c><00:10:50.560><c> or</c><00:10:50.720><c> many</c><00:10:50.959><c> possible</c><00:10:51.240><c> sort</c>

00:10:51.430 --> 00:10:51.440 align:start position:0%
possible encodings or many possible sort
 

00:10:51.440 --> 00:10:54.150 align:start position:0%
possible encodings or many possible sort
of<00:10:51.560><c> tokenizers</c><00:10:52.560><c> and</c><00:10:52.680><c> it's</c><00:10:52.880><c> a</c><00:10:53.040><c> very</c><00:10:53.279><c> simple</c><00:10:53.560><c> one</c>

00:10:54.150 --> 00:10:54.160 align:start position:0%
of tokenizers and it's a very simple one
 

00:10:54.160 --> 00:10:55.670 align:start position:0%
of tokenizers and it's a very simple one
but<00:10:54.279><c> there's</c><00:10:54.480><c> many</c><00:10:54.720><c> other</c><00:10:55.120><c> schemas</c><00:10:55.560><c> that</c>

00:10:55.670 --> 00:10:55.680 align:start position:0%
but there's many other schemas that
 

00:10:55.680 --> 00:10:57.590 align:start position:0%
but there's many other schemas that
people<00:10:55.880><c> have</c><00:10:56.000><c> come</c><00:10:56.160><c> up</c><00:10:56.360><c> with</c><00:10:56.639><c> in</c><00:10:56.839><c> practice</c><00:10:57.399><c> so</c>

00:10:57.590 --> 00:10:57.600 align:start position:0%
people have come up with in practice so
 

00:10:57.600 --> 00:10:59.829 align:start position:0%
people have come up with in practice so
for<00:10:57.760><c> example</c><00:10:58.079><c> Google</c><00:10:58.360><c> uses</c><00:10:58.760><c> a</c><00:10:58.880><c> sentence</c>

00:10:59.829 --> 00:10:59.839 align:start position:0%
for example Google uses a sentence
 

00:10:59.839 --> 00:11:02.110 align:start position:0%
for example Google uses a sentence
piece<00:11:00.839><c> uh</c><00:11:00.920><c> so</c><00:11:01.079><c> sentence</c><00:11:01.440><c> piece</c><00:11:01.639><c> will</c><00:11:01.839><c> also</c>

00:11:02.110 --> 00:11:02.120 align:start position:0%
piece uh so sentence piece will also
 

00:11:02.120 --> 00:11:05.629 align:start position:0%
piece uh so sentence piece will also
encode<00:11:02.680><c> text</c><00:11:03.079><c> into</c><00:11:03.839><c> um</c><00:11:04.200><c> integers</c><00:11:05.200><c> but</c><00:11:05.360><c> in</c><00:11:05.440><c> a</c>

00:11:05.629 --> 00:11:05.639 align:start position:0%
encode text into um integers but in a
 

00:11:05.639 --> 00:11:08.509 align:start position:0%
encode text into um integers but in a
different<00:11:05.920><c> schema</c><00:11:06.920><c> and</c><00:11:07.320><c> using</c><00:11:07.519><c> a</c><00:11:07.680><c> different</c>

00:11:08.509 --> 00:11:08.519 align:start position:0%
different schema and using a different
 

00:11:08.519 --> 00:11:10.790 align:start position:0%
different schema and using a different
vocabulary<00:11:09.519><c> and</c><00:11:09.720><c> sentence</c><00:11:10.120><c> piece</c><00:11:10.399><c> is</c><00:11:10.519><c> a</c>

00:11:10.790 --> 00:11:10.800 align:start position:0%
vocabulary and sentence piece is a
 

00:11:10.800 --> 00:11:13.590 align:start position:0%
vocabulary and sentence piece is a
subword<00:11:11.760><c> uh</c><00:11:11.880><c> sort</c><00:11:12.040><c> of</c><00:11:12.320><c> tokenizer</c><00:11:13.320><c> and</c><00:11:13.440><c> what</c>

00:11:13.590 --> 00:11:13.600 align:start position:0%
subword uh sort of tokenizer and what
 

00:11:13.600 --> 00:11:15.509 align:start position:0%
subword uh sort of tokenizer and what
that<00:11:13.760><c> means</c><00:11:14.200><c> is</c><00:11:14.480><c> that</c><00:11:14.920><c> um</c><00:11:15.160><c> you're</c><00:11:15.360><c> not</c>

00:11:15.509 --> 00:11:15.519 align:start position:0%
that means is that um you're not
 

00:11:15.519 --> 00:11:17.269 align:start position:0%
that means is that um you're not
encoding<00:11:16.040><c> entire</c><00:11:16.440><c> words</c><00:11:16.839><c> but</c><00:11:16.959><c> you're</c><00:11:17.120><c> not</c>

00:11:17.269 --> 00:11:17.279 align:start position:0%
encoding entire words but you're not
 

00:11:17.279 --> 00:11:19.629 align:start position:0%
encoding entire words but you're not
also<00:11:17.519><c> encoding</c><00:11:18.000><c> individual</c><00:11:18.480><c> characters</c><00:11:19.360><c> it's</c>

00:11:19.629 --> 00:11:19.639 align:start position:0%
also encoding individual characters it's
 

00:11:19.639 --> 00:11:22.590 align:start position:0%
also encoding individual characters it's
it's<00:11:19.720><c> a</c><00:11:20.079><c> subword</c><00:11:21.079><c> unit</c><00:11:21.600><c> level</c><00:11:22.320><c> and</c><00:11:22.440><c> that's</c>

00:11:22.590 --> 00:11:22.600 align:start position:0%
it's a subword unit level and that's
 

00:11:22.600 --> 00:11:24.509 align:start position:0%
it's a subword unit level and that's
usually<00:11:22.920><c> what's</c><00:11:23.079><c> adopted</c><00:11:23.480><c> in</c><00:11:23.639><c> practice</c><00:11:24.360><c> for</c>

00:11:24.509 --> 00:11:24.519 align:start position:0%
usually what's adopted in practice for
 

00:11:24.519 --> 00:11:26.350 align:start position:0%
usually what's adopted in practice for
example<00:11:24.880><c> also</c><00:11:25.079><c> openai</c><00:11:25.680><c> has</c><00:11:25.880><c> this</c><00:11:26.000><c> Library</c>

00:11:26.350 --> 00:11:26.360 align:start position:0%
example also openai has this Library
 

00:11:26.360 --> 00:11:28.870 align:start position:0%
example also openai has this Library
called<00:11:26.560><c> tick</c><00:11:26.800><c> token</c><00:11:27.560><c> that</c><00:11:27.680><c> uses</c><00:11:28.040><c> a</c><00:11:28.360><c> bite</c><00:11:28.680><c> pair</c>

00:11:28.870 --> 00:11:28.880 align:start position:0%
called tick token that uses a bite pair
 

00:11:28.880 --> 00:11:29.910 align:start position:0%
called tick token that uses a bite pair
encode

00:11:29.910 --> 00:11:29.920 align:start position:0%
encode
 

00:11:29.920 --> 00:11:33.350 align:start position:0%
encode
tokenizer<00:11:30.920><c> um</c><00:11:31.200><c> and</c><00:11:31.320><c> that's</c><00:11:31.440><c> what</c><00:11:31.600><c> GPT</c><00:11:32.360><c> uses</c>

00:11:33.350 --> 00:11:33.360 align:start position:0%
tokenizer um and that's what GPT uses
 

00:11:33.360 --> 00:11:35.710 align:start position:0%
tokenizer um and that's what GPT uses
and<00:11:33.519><c> you</c><00:11:33.600><c> can</c><00:11:33.760><c> also</c><00:11:33.959><c> just</c><00:11:34.120><c> encode</c><00:11:34.519><c> words</c><00:11:35.079><c> into</c>

00:11:35.710 --> 00:11:35.720 align:start position:0%
and you can also just encode words into
 

00:11:35.720 --> 00:11:38.829 align:start position:0%
and you can also just encode words into
like<00:11:35.920><c> hell</c><00:11:36.240><c> world</c><00:11:36.760><c> into</c><00:11:37.399><c> a</c><00:11:37.519><c> list</c><00:11:37.720><c> of</c><00:11:37.839><c> integers</c>

00:11:38.829 --> 00:11:38.839 align:start position:0%
like hell world into a list of integers
 

00:11:38.839 --> 00:11:40.790 align:start position:0%
like hell world into a list of integers
so<00:11:39.000><c> as</c><00:11:39.079><c> an</c><00:11:39.279><c> example</c><00:11:39.839><c> I'm</c><00:11:39.959><c> using</c><00:11:40.200><c> the</c><00:11:40.320><c> Tik</c><00:11:40.519><c> token</c>

00:11:40.790 --> 00:11:40.800 align:start position:0%
so as an example I'm using the Tik token
 

00:11:40.800 --> 00:11:43.150 align:start position:0%
so as an example I'm using the Tik token
Library<00:11:41.279><c> here</c><00:11:42.240><c> I'm</c><00:11:42.399><c> getting</c><00:11:42.639><c> the</c><00:11:42.800><c> encoding</c>

00:11:43.150 --> 00:11:43.160 align:start position:0%
Library here I'm getting the encoding
 

00:11:43.160 --> 00:11:46.310 align:start position:0%
Library here I'm getting the encoding
for<00:11:43.360><c> gpt2</c><00:11:44.120><c> or</c><00:11:44.279><c> that</c><00:11:44.399><c> was</c><00:11:44.560><c> used</c><00:11:44.760><c> for</c><00:11:45.320><c> gpt2</c>

00:11:46.310 --> 00:11:46.320 align:start position:0%
for gpt2 or that was used for gpt2
 

00:11:46.320 --> 00:11:48.150 align:start position:0%
for gpt2 or that was used for gpt2
instead<00:11:46.600><c> of</c><00:11:46.720><c> just</c><00:11:46.839><c> having</c><00:11:47.079><c> 65</c><00:11:47.800><c> possible</c>

00:11:48.150 --> 00:11:48.160 align:start position:0%
instead of just having 65 possible
 

00:11:48.160 --> 00:11:51.910 align:start position:0%
instead of just having 65 possible
characters<00:11:48.959><c> or</c><00:11:49.440><c> tokens</c><00:11:50.240><c> they</c><00:11:50.399><c> have</c><00:11:50.720><c> 50,000</c>

00:11:51.910 --> 00:11:51.920 align:start position:0%
characters or tokens they have 50,000
 

00:11:51.920 --> 00:11:54.430 align:start position:0%
characters or tokens they have 50,000
tokens<00:11:52.920><c> and</c><00:11:53.040><c> so</c><00:11:53.279><c> when</c><00:11:53.399><c> they</c><00:11:53.519><c> encode</c><00:11:53.920><c> the</c><00:11:54.120><c> exact</c>

00:11:54.430 --> 00:11:54.440 align:start position:0%
tokens and so when they encode the exact
 

00:11:54.440 --> 00:11:57.150 align:start position:0%
tokens and so when they encode the exact
same<00:11:54.800><c> string</c><00:11:55.360><c> High</c><00:11:55.639><c> there</c><00:11:56.320><c> we</c><00:11:56.480><c> only</c><00:11:56.760><c> get</c><00:11:57.000><c> a</c>

00:11:57.150 --> 00:11:57.160 align:start position:0%
same string High there we only get a
 

00:11:57.160 --> 00:11:59.269 align:start position:0%
same string High there we only get a
list<00:11:57.399><c> of</c><00:11:57.680><c> three</c><00:11:57.959><c> integers</c><00:11:58.880><c> but</c><00:11:59.040><c> those</c>

00:11:59.269 --> 00:11:59.279 align:start position:0%
list of three integers but those
 

00:11:59.279 --> 00:12:01.750 align:start position:0%
list of three integers but those
integers<00:11:59.680><c> are</c><00:11:59.839><c> not</c><00:12:00.040><c> between</c><00:12:00.279><c> 0</c><00:12:00.600><c> and</c><00:12:00.720><c> 64</c><00:12:01.639><c> they</c>

00:12:01.750 --> 00:12:01.760 align:start position:0%
integers are not between 0 and 64 they
 

00:12:01.760 --> 00:12:05.790 align:start position:0%
integers are not between 0 and 64 they
are<00:12:01.959><c> between</c><00:12:02.320><c> Z</c><00:12:02.959><c> and</c><00:12:03.360><c> 5,</c>

00:12:05.790 --> 00:12:05.800 align:start position:0%
are between Z and 5,
 

00:12:05.800 --> 00:12:09.190 align:start position:0%
are between Z and 5,
5,256<00:12:06.800><c> so</c><00:12:06.959><c> basically</c><00:12:07.399><c> you</c><00:12:07.480><c> can</c><00:12:07.600><c> trade</c><00:12:07.959><c> off</c><00:12:08.760><c> the</c>

00:12:09.190 --> 00:12:09.200 align:start position:0%
5,256 so basically you can trade off the
 

00:12:09.200 --> 00:12:11.990 align:start position:0%
5,256 so basically you can trade off the
code<00:12:09.480><c> book</c><00:12:09.800><c> size</c><00:12:10.480><c> and</c><00:12:10.600><c> the</c><00:12:10.720><c> sequence</c><00:12:11.200><c> lengths</c>

00:12:11.990 --> 00:12:12.000 align:start position:0%
code book size and the sequence lengths
 

00:12:12.000 --> 00:12:13.949 align:start position:0%
code book size and the sequence lengths
so<00:12:12.120><c> you</c><00:12:12.240><c> can</c><00:12:12.399><c> have</c><00:12:12.680><c> very</c><00:12:12.920><c> long</c><00:12:13.320><c> sequences</c><00:12:13.800><c> of</c>

00:12:13.949 --> 00:12:13.959 align:start position:0%
so you can have very long sequences of
 

00:12:13.959 --> 00:12:16.389 align:start position:0%
so you can have very long sequences of
integers<00:12:14.480><c> with</c><00:12:14.680><c> very</c><00:12:14.880><c> small</c><00:12:15.240><c> vocabularies</c><00:12:16.240><c> or</c>

00:12:16.389 --> 00:12:16.399 align:start position:0%
integers with very small vocabularies or
 

00:12:16.399 --> 00:12:20.310 align:start position:0%
integers with very small vocabularies or
we<00:12:16.480><c> can</c><00:12:16.639><c> have</c><00:12:17.079><c> short</c><00:12:18.279><c> um</c><00:12:19.279><c> sequences</c><00:12:19.959><c> of</c>

00:12:20.310 --> 00:12:20.320 align:start position:0%
we can have short um sequences of
 

00:12:20.320 --> 00:12:23.350 align:start position:0%
we can have short um sequences of
integers<00:12:21.160><c> with</c><00:12:21.360><c> very</c><00:12:21.680><c> large</c><00:12:22.360><c> vocabularies</c>

00:12:23.350 --> 00:12:23.360 align:start position:0%
integers with very large vocabularies
 

00:12:23.360 --> 00:12:25.870 align:start position:0%
integers with very large vocabularies
and<00:12:23.519><c> so</c><00:12:24.360><c> typically</c><00:12:24.800><c> people</c><00:12:25.040><c> use</c><00:12:25.320><c> in</c><00:12:25.519><c> practice</c>

00:12:25.870 --> 00:12:25.880 align:start position:0%
and so typically people use in practice
 

00:12:25.880 --> 00:12:28.590 align:start position:0%
and so typically people use in practice
these<00:12:26.079><c> subword</c><00:12:27.000><c> encodings</c><00:12:28.000><c> but</c><00:12:28.240><c> I'd</c><00:12:28.360><c> like</c><00:12:28.480><c> to</c>

00:12:28.590 --> 00:12:28.600 align:start position:0%
these subword encodings but I'd like to
 

00:12:28.600 --> 00:12:30.550 align:start position:0%
these subword encodings but I'd like to
keep<00:12:28.760><c> our</c><00:12:28.880><c> token</c><00:12:29.320><c> ier</c><00:12:29.760><c> very</c><00:12:29.959><c> simple</c><00:12:30.320><c> so</c><00:12:30.440><c> we're</c>

00:12:30.550 --> 00:12:30.560 align:start position:0%
keep our token ier very simple so we're
 

00:12:30.560 --> 00:12:33.030 align:start position:0%
keep our token ier very simple so we're
using<00:12:30.880><c> character</c><00:12:31.199><c> level</c><00:12:31.800><c> tokenizer</c><00:12:32.800><c> and</c><00:12:32.959><c> that</c>

00:12:33.030 --> 00:12:33.040 align:start position:0%
using character level tokenizer and that
 

00:12:33.040 --> 00:12:34.990 align:start position:0%
using character level tokenizer and that
means<00:12:33.240><c> that</c><00:12:33.360><c> we</c><00:12:33.480><c> have</c><00:12:33.639><c> very</c><00:12:33.839><c> small</c><00:12:34.160><c> code</c><00:12:34.360><c> books</c>

00:12:34.990 --> 00:12:35.000 align:start position:0%
means that we have very small code books
 

00:12:35.000 --> 00:12:37.150 align:start position:0%
means that we have very small code books
we<00:12:35.120><c> have</c><00:12:35.440><c> very</c><00:12:35.680><c> simple</c><00:12:36.040><c> encode</c><00:12:36.440><c> and</c><00:12:36.560><c> decode</c>

00:12:37.150 --> 00:12:37.160 align:start position:0%
we have very simple encode and decode
 

00:12:37.160 --> 00:12:40.230 align:start position:0%
we have very simple encode and decode
functions<00:12:38.160><c> uh</c><00:12:38.279><c> but</c><00:12:38.440><c> we</c><00:12:38.639><c> do</c><00:12:39.199><c> get</c><00:12:39.519><c> very</c><00:12:39.760><c> long</c>

00:12:40.230 --> 00:12:40.240 align:start position:0%
functions uh but we do get very long
 

00:12:40.240 --> 00:12:42.470 align:start position:0%
functions uh but we do get very long
sequences<00:12:40.839><c> as</c><00:12:40.920><c> a</c><00:12:41.120><c> result</c><00:12:41.920><c> but</c><00:12:42.160><c> that's</c><00:12:42.320><c> the</c>

00:12:42.470 --> 00:12:42.480 align:start position:0%
sequences as a result but that's the
 

00:12:42.480 --> 00:12:43.710 align:start position:0%
sequences as a result but that's the
level<00:12:42.720><c> at</c><00:12:42.839><c> which</c><00:12:42.959><c> we're</c><00:12:43.120><c> going</c><00:12:43.240><c> to</c><00:12:43.360><c> stick</c><00:12:43.600><c> with</c>

00:12:43.710 --> 00:12:43.720 align:start position:0%
level at which we're going to stick with
 

00:12:43.720 --> 00:12:45.269 align:start position:0%
level at which we're going to stick with
this<00:12:43.839><c> lecture</c><00:12:44.199><c> because</c><00:12:44.399><c> it's</c><00:12:44.519><c> the</c><00:12:44.680><c> simplest</c>

00:12:45.269 --> 00:12:45.279 align:start position:0%
this lecture because it's the simplest
 

00:12:45.279 --> 00:12:46.629 align:start position:0%
this lecture because it's the simplest
thing<00:12:45.720><c> okay</c><00:12:45.839><c> so</c><00:12:46.000><c> now</c><00:12:46.160><c> that</c><00:12:46.279><c> we</c><00:12:46.399><c> have</c><00:12:46.480><c> an</c>

00:12:46.629 --> 00:12:46.639 align:start position:0%
thing okay so now that we have an
 

00:12:46.639 --> 00:12:49.030 align:start position:0%
thing okay so now that we have an
encoder<00:12:47.240><c> and</c><00:12:47.360><c> a</c><00:12:47.519><c> decoder</c><00:12:48.519><c> effectively</c><00:12:48.920><c> a</c>

00:12:49.030 --> 00:12:49.040 align:start position:0%
encoder and a decoder effectively a
 

00:12:49.040 --> 00:12:51.310 align:start position:0%
encoder and a decoder effectively a
tokenizer<00:12:50.040><c> we</c><00:12:50.160><c> can</c><00:12:50.320><c> tokenize</c><00:12:50.839><c> the</c><00:12:50.959><c> entire</c>

00:12:51.310 --> 00:12:51.320 align:start position:0%
tokenizer we can tokenize the entire
 

00:12:51.320 --> 00:12:53.710 align:start position:0%
tokenizer we can tokenize the entire
training<00:12:51.639><c> set</c><00:12:51.839><c> of</c><00:12:52.160><c> Shakespeare</c><00:12:53.160><c> so</c><00:12:53.480><c> here's</c><00:12:53.639><c> a</c>

00:12:53.710 --> 00:12:53.720 align:start position:0%
training set of Shakespeare so here's a
 

00:12:53.720 --> 00:12:55.710 align:start position:0%
training set of Shakespeare so here's a
chunk<00:12:53.959><c> of</c><00:12:54.079><c> code</c><00:12:54.279><c> that</c><00:12:54.440><c> does</c><00:12:54.639><c> that</c><00:12:55.519><c> and</c><00:12:55.639><c> I'm</c>

00:12:55.710 --> 00:12:55.720 align:start position:0%
chunk of code that does that and I'm
 

00:12:55.720 --> 00:12:56.949 align:start position:0%
chunk of code that does that and I'm
going<00:12:55.880><c> to</c><00:12:55.959><c> start</c><00:12:56.120><c> to</c><00:12:56.240><c> use</c><00:12:56.399><c> the</c><00:12:56.519><c> pytorch</c>

00:12:56.949 --> 00:12:56.959 align:start position:0%
going to start to use the pytorch
 

00:12:56.959 --> 00:12:58.750 align:start position:0%
going to start to use the pytorch
library<00:12:57.360><c> and</c><00:12:57.560><c> specifically</c><00:12:58.079><c> the</c><00:12:58.279><c> torch.</c>

00:12:58.750 --> 00:12:58.760 align:start position:0%
library and specifically the torch.
 

00:12:58.760 --> 00:13:01.310 align:start position:0%
library and specifically the torch.
tensor<00:12:59.320><c> from</c><00:12:59.440><c> the</c><00:12:59.560><c> pytorch</c><00:13:00.040><c> library</c><00:13:01.040><c> so</c><00:13:01.160><c> we're</c>

00:13:01.310 --> 00:13:01.320 align:start position:0%
tensor from the pytorch library so we're
 

00:13:01.320 --> 00:13:03.350 align:start position:0%
tensor from the pytorch library so we're
going<00:13:01.440><c> to</c><00:13:01.600><c> take</c><00:13:01.800><c> all</c><00:13:01.920><c> of</c><00:13:02.040><c> the</c><00:13:02.240><c> text</c><00:13:02.760><c> in</c><00:13:03.079><c> tiny</c>

00:13:03.350 --> 00:13:03.360 align:start position:0%
going to take all of the text in tiny
 

00:13:03.360 --> 00:13:05.870 align:start position:0%
going to take all of the text in tiny
Shakespeare<00:13:04.279><c> encode</c><00:13:04.680><c> it</c><00:13:05.160><c> and</c><00:13:05.279><c> then</c><00:13:05.440><c> wrap</c><00:13:05.680><c> it</c>

00:13:05.870 --> 00:13:05.880 align:start position:0%
Shakespeare encode it and then wrap it
 

00:13:05.880 --> 00:13:08.269 align:start position:0%
Shakespeare encode it and then wrap it
into<00:13:06.079><c> a</c><00:13:06.199><c> torch.</c><00:13:06.680><c> tensor</c><00:13:07.519><c> to</c><00:13:07.680><c> get</c><00:13:07.800><c> the</c><00:13:07.959><c> data</c>

00:13:08.269 --> 00:13:08.279 align:start position:0%
into a torch. tensor to get the data
 

00:13:08.279 --> 00:13:10.350 align:start position:0%
into a torch. tensor to get the data
tensor<00:13:09.160><c> so</c><00:13:09.320><c> here's</c><00:13:09.519><c> what</c><00:13:09.639><c> the</c><00:13:09.760><c> data</c><00:13:10.000><c> tensor</c>

00:13:10.350 --> 00:13:10.360 align:start position:0%
tensor so here's what the data tensor
 

00:13:10.360 --> 00:13:11.990 align:start position:0%
tensor so here's what the data tensor
looks<00:13:10.600><c> like</c><00:13:10.880><c> when</c><00:13:11.000><c> I</c><00:13:11.120><c> look</c><00:13:11.240><c> at</c><00:13:11.399><c> just</c><00:13:11.519><c> the</c><00:13:11.680><c> first</c>

00:13:11.990 --> 00:13:12.000 align:start position:0%
looks like when I look at just the first
 

00:13:12.000 --> 00:13:14.470 align:start position:0%
looks like when I look at just the first
1,000<00:13:12.639><c> characters</c><00:13:13.440><c> or</c><00:13:13.600><c> the</c><00:13:13.680><c> 1,000</c><00:13:14.120><c> elements</c>

00:13:14.470 --> 00:13:14.480 align:start position:0%
1,000 characters or the 1,000 elements
 

00:13:14.480 --> 00:13:16.750 align:start position:0%
1,000 characters or the 1,000 elements
of<00:13:14.680><c> it</c><00:13:15.639><c> so</c><00:13:15.760><c> we</c><00:13:15.880><c> see</c><00:13:16.040><c> that</c><00:13:16.160><c> we</c><00:13:16.240><c> have</c><00:13:16.360><c> a</c><00:13:16.519><c> massive</c>

00:13:16.750 --> 00:13:16.760 align:start position:0%
of it so we see that we have a massive
 

00:13:16.760 --> 00:13:18.910 align:start position:0%
of it so we see that we have a massive
sequence<00:13:17.079><c> of</c><00:13:17.240><c> integers</c><00:13:18.240><c> and</c><00:13:18.440><c> this</c><00:13:18.639><c> sequence</c>

00:13:18.910 --> 00:13:18.920 align:start position:0%
sequence of integers and this sequence
 

00:13:18.920 --> 00:13:20.910 align:start position:0%
sequence of integers and this sequence
of<00:13:19.040><c> integers</c><00:13:19.560><c> here</c><00:13:20.160><c> is</c><00:13:20.360><c> basically</c><00:13:20.760><c> an</c>

00:13:20.910 --> 00:13:20.920 align:start position:0%
of integers here is basically an
 

00:13:20.920 --> 00:13:22.509 align:start position:0%
of integers here is basically an
identical<00:13:21.360><c> translation</c><00:13:22.079><c> of</c><00:13:22.199><c> the</c><00:13:22.320><c> first</c>

00:13:22.509 --> 00:13:22.519 align:start position:0%
identical translation of the first
 

00:13:22.519 --> 00:13:24.470 align:start position:0%
identical translation of the first
10,000<00:13:22.920><c> characters</c>

00:13:24.470 --> 00:13:24.480 align:start position:0%
10,000 characters
 

00:13:24.480 --> 00:13:26.990 align:start position:0%
10,000 characters
here<00:13:25.480><c> so</c><00:13:25.720><c> I</c><00:13:25.839><c> believe</c><00:13:26.079><c> for</c><00:13:26.240><c> example</c><00:13:26.519><c> that</c><00:13:26.680><c> zero</c>

00:13:26.990 --> 00:13:27.000 align:start position:0%
here so I believe for example that zero
 

00:13:27.000 --> 00:13:29.110 align:start position:0%
here so I believe for example that zero
is<00:13:27.079><c> a</c><00:13:27.240><c> new</c><00:13:27.440><c> line</c><00:13:27.680><c> character</c><00:13:28.519><c> and</c><00:13:28.680><c> maybe</c><00:13:28.959><c> one</c>

00:13:29.110 --> 00:13:29.120 align:start position:0%
is a new line character and maybe one
 

00:13:29.120 --> 00:13:32.189 align:start position:0%
is a new line character and maybe one
one<00:13:29.360><c> is</c><00:13:29.480><c> a</c><00:13:29.680><c> space</c><00:13:30.519><c> not</c><00:13:30.800><c> 100%</c><00:13:31.199><c> sure</c><00:13:31.839><c> but</c><00:13:32.000><c> from</c>

00:13:32.189 --> 00:13:32.199 align:start position:0%
one is a space not 100% sure but from
 

00:13:32.199 --> 00:13:34.110 align:start position:0%
one is a space not 100% sure but from
now<00:13:32.360><c> on</c><00:13:32.720><c> the</c><00:13:32.839><c> entire</c><00:13:33.199><c> data</c><00:13:33.399><c> set</c><00:13:33.560><c> of</c><00:13:33.680><c> text</c><00:13:33.959><c> is</c>

00:13:34.110 --> 00:13:34.120 align:start position:0%
now on the entire data set of text is
 

00:13:34.120 --> 00:13:35.790 align:start position:0%
now on the entire data set of text is
re-represented<00:13:34.920><c> as</c><00:13:35.120><c> just</c><00:13:35.480><c> it's</c><00:13:35.639><c> just</c>

00:13:35.790 --> 00:13:35.800 align:start position:0%
re-represented as just it's just
 

00:13:35.800 --> 00:13:38.269 align:start position:0%
re-represented as just it's just
stretched<00:13:36.199><c> out</c><00:13:36.399><c> as</c><00:13:36.600><c> a</c><00:13:36.760><c> single</c><00:13:37.240><c> very</c><00:13:37.480><c> large</c><00:13:38.160><c> uh</c>

00:13:38.269 --> 00:13:38.279 align:start position:0%
stretched out as a single very large uh
 

00:13:38.279 --> 00:13:39.350 align:start position:0%
stretched out as a single very large uh
sequence<00:13:38.639><c> of</c>

00:13:39.350 --> 00:13:39.360 align:start position:0%
sequence of
 

00:13:39.360 --> 00:13:41.509 align:start position:0%
sequence of
integers<00:13:40.360><c> let</c><00:13:40.440><c> me</c><00:13:40.600><c> do</c><00:13:40.760><c> one</c><00:13:40.920><c> more</c><00:13:41.120><c> thing</c><00:13:41.320><c> before</c>

00:13:41.509 --> 00:13:41.519 align:start position:0%
integers let me do one more thing before
 

00:13:41.519 --> 00:13:43.550 align:start position:0%
integers let me do one more thing before
we<00:13:41.639><c> move</c><00:13:41.839><c> on</c><00:13:42.079><c> here</c><00:13:42.560><c> I'd</c><00:13:42.720><c> like</c><00:13:42.839><c> to</c><00:13:43.000><c> separate</c><00:13:43.360><c> out</c>

00:13:43.550 --> 00:13:43.560 align:start position:0%
we move on here I'd like to separate out
 

00:13:43.560 --> 00:13:45.710 align:start position:0%
we move on here I'd like to separate out
our<00:13:43.760><c> data</c><00:13:44.000><c> set</c><00:13:44.199><c> into</c><00:13:44.440><c> a</c><00:13:44.560><c> train</c><00:13:45.160><c> and</c><00:13:45.320><c> a</c>

00:13:45.710 --> 00:13:45.720 align:start position:0%
our data set into a train and a
 

00:13:45.720 --> 00:13:48.189 align:start position:0%
our data set into a train and a
validation<00:13:46.199><c> split</c><00:13:47.199><c> so</c><00:13:47.360><c> in</c><00:13:47.480><c> particular</c><00:13:48.040><c> we're</c>

00:13:48.189 --> 00:13:48.199 align:start position:0%
validation split so in particular we're
 

00:13:48.199 --> 00:13:51.030 align:start position:0%
validation split so in particular we're
going<00:13:48.360><c> to</c><00:13:48.519><c> take</c><00:13:48.680><c> the</c><00:13:48.800><c> first</c><00:13:49.160><c> 90%</c><00:13:50.160><c> of</c><00:13:50.360><c> the</c><00:13:50.759><c> data</c>

00:13:51.030 --> 00:13:51.040 align:start position:0%
going to take the first 90% of the data
 

00:13:51.040 --> 00:13:52.790 align:start position:0%
going to take the first 90% of the data
set<00:13:51.639><c> and</c><00:13:51.839><c> consider</c><00:13:52.160><c> that</c><00:13:52.240><c> to</c><00:13:52.320><c> be</c><00:13:52.440><c> the</c><00:13:52.519><c> training</c>

00:13:52.790 --> 00:13:52.800 align:start position:0%
set and consider that to be the training
 

00:13:52.800 --> 00:13:54.509 align:start position:0%
set and consider that to be the training
data<00:13:53.000><c> for</c><00:13:53.160><c> the</c><00:13:53.240><c> Transformer</c><00:13:54.079><c> and</c><00:13:54.199><c> we're</c><00:13:54.360><c> going</c>

00:13:54.509 --> 00:13:54.519 align:start position:0%
data for the Transformer and we're going
 

00:13:54.519 --> 00:13:56.910 align:start position:0%
data for the Transformer and we're going
to<00:13:54.880><c> withhold</c><00:13:55.440><c> the</c><00:13:55.600><c> last</c><00:13:55.800><c> 10%</c><00:13:56.399><c> at</c><00:13:56.519><c> the</c><00:13:56.600><c> end</c><00:13:56.800><c> of</c>

00:13:56.910 --> 00:13:56.920 align:start position:0%
to withhold the last 10% at the end of
 

00:13:56.920 --> 00:13:59.470 align:start position:0%
to withhold the last 10% at the end of
it<00:13:57.560><c> to</c><00:13:57.680><c> be</c><00:13:57.839><c> the</c><00:13:57.959><c> validation</c><00:13:58.399><c> data</c><00:13:59.279><c> and</c><00:13:59.399><c> this</c>

00:13:59.470 --> 00:13:59.480 align:start position:0%
it to be the validation data and this
 

00:13:59.480 --> 00:14:01.150 align:start position:0%
it to be the validation data and this
will<00:13:59.639><c> help</c><00:13:59.839><c> us</c><00:14:00.279><c> understand</c><00:14:00.560><c> to</c><00:14:00.720><c> what</c><00:14:00.880><c> extent</c>

00:14:01.150 --> 00:14:01.160 align:start position:0%
will help us understand to what extent
 

00:14:01.160 --> 00:14:03.030 align:start position:0%
will help us understand to what extent
our<00:14:01.320><c> model</c><00:14:01.560><c> is</c><00:14:01.720><c> overfitting</c><00:14:02.600><c> so</c><00:14:02.759><c> we're</c><00:14:02.880><c> going</c>

00:14:03.030 --> 00:14:03.040 align:start position:0%
our model is overfitting so we're going
 

00:14:03.040 --> 00:14:04.629 align:start position:0%
our model is overfitting so we're going
to<00:14:03.199><c> basically</c><00:14:03.880><c> hide</c><00:14:04.120><c> and</c><00:14:04.320><c> keep</c><00:14:04.519><c> the</c>

00:14:04.629 --> 00:14:04.639 align:start position:0%
to basically hide and keep the
 

00:14:04.639 --> 00:14:06.749 align:start position:0%
to basically hide and keep the
validation<00:14:05.040><c> data</c><00:14:05.240><c> on</c><00:14:05.360><c> the</c><00:14:05.560><c> side</c><00:14:06.480><c> because</c><00:14:06.680><c> we</c>

00:14:06.749 --> 00:14:06.759 align:start position:0%
validation data on the side because we
 

00:14:06.759 --> 00:14:08.550 align:start position:0%
validation data on the side because we
don't<00:14:06.880><c> want</c><00:14:07.120><c> just</c><00:14:07.240><c> a</c><00:14:07.399><c> perfect</c><00:14:07.680><c> memorization</c>

00:14:08.550 --> 00:14:08.560 align:start position:0%
don't want just a perfect memorization
 

00:14:08.560 --> 00:14:11.110 align:start position:0%
don't want just a perfect memorization
of<00:14:08.800><c> this</c><00:14:09.079><c> exact</c><00:14:09.639><c> Shakespeare</c><00:14:10.639><c> we</c><00:14:10.759><c> want</c><00:14:11.000><c> a</c>

00:14:11.110 --> 00:14:11.120 align:start position:0%
of this exact Shakespeare we want a
 

00:14:11.120 --> 00:14:12.550 align:start position:0%
of this exact Shakespeare we want a
neural<00:14:11.440><c> network</c><00:14:11.759><c> that</c><00:14:11.839><c> sort</c><00:14:12.000><c> of</c><00:14:12.240><c> creates</c>

00:14:12.550 --> 00:14:12.560 align:start position:0%
neural network that sort of creates
 

00:14:12.560 --> 00:14:15.350 align:start position:0%
neural network that sort of creates
Shakespeare<00:14:13.120><c> like</c><00:14:13.839><c> uh</c><00:14:14.000><c> text</c><00:14:14.880><c> and</c><00:14:15.040><c> so</c><00:14:15.279><c> it</c>

00:14:15.350 --> 00:14:15.360 align:start position:0%
Shakespeare like uh text and so it
 

00:14:15.360 --> 00:14:17.069 align:start position:0%
Shakespeare like uh text and so it
should<00:14:15.519><c> be</c><00:14:15.680><c> fairly</c><00:14:16.040><c> likely</c><00:14:16.320><c> for</c><00:14:16.480><c> it</c><00:14:16.639><c> to</c>

00:14:17.069 --> 00:14:17.079 align:start position:0%
should be fairly likely for it to
 

00:14:17.079 --> 00:14:21.430 align:start position:0%
should be fairly likely for it to
produce<00:14:18.079><c> the</c><00:14:18.279><c> actual</c><00:14:19.040><c> like</c><00:14:19.560><c> stowed</c><00:14:20.279><c> away</c><00:14:21.279><c> uh</c>

00:14:21.430 --> 00:14:21.440 align:start position:0%
produce the actual like stowed away uh
 

00:14:21.440 --> 00:14:24.590 align:start position:0%
produce the actual like stowed away uh
true<00:14:21.959><c> Shakespeare</c><00:14:22.839><c> text</c><00:14:23.839><c> um</c><00:14:24.279><c> and</c><00:14:24.360><c> so</c><00:14:24.480><c> we're</c>

00:14:24.590 --> 00:14:24.600 align:start position:0%
true Shakespeare text um and so we're
 

00:14:24.600 --> 00:14:26.470 align:start position:0%
true Shakespeare text um and so we're
going<00:14:24.759><c> to</c><00:14:24.959><c> use</c><00:14:25.199><c> this</c><00:14:25.360><c> to</c><00:14:25.759><c> uh</c><00:14:25.880><c> get</c><00:14:26.000><c> a</c><00:14:26.120><c> sense</c><00:14:26.320><c> of</c>

00:14:26.470 --> 00:14:26.480 align:start position:0%
going to use this to uh get a sense of
 

00:14:26.480 --> 00:14:28.150 align:start position:0%
going to use this to uh get a sense of
the<00:14:26.639><c> overfitting</c><00:14:27.480><c> okay</c><00:14:27.600><c> so</c><00:14:27.759><c> now</c><00:14:27.920><c> we</c><00:14:28.000><c> would</c>

00:14:28.150 --> 00:14:28.160 align:start position:0%
the overfitting okay so now we would
 

00:14:28.160 --> 00:14:30.389 align:start position:0%
the overfitting okay so now we would
like<00:14:28.279><c> to</c><00:14:28.399><c> start</c><00:14:28.639><c> plugging</c><00:14:29.480><c> these</c><00:14:30.079><c> text</c>

00:14:30.389 --> 00:14:30.399 align:start position:0%
like to start plugging these text
 

00:14:30.399 --> 00:14:32.189 align:start position:0%
like to start plugging these text
sequences<00:14:30.880><c> or</c><00:14:31.040><c> integer</c><00:14:31.399><c> sequences</c><00:14:31.880><c> into</c><00:14:32.079><c> the</c>

00:14:32.189 --> 00:14:32.199 align:start position:0%
sequences or integer sequences into the
 

00:14:32.199 --> 00:14:34.110 align:start position:0%
sequences or integer sequences into the
Transformer<00:14:32.759><c> so</c><00:14:32.920><c> that</c><00:14:33.000><c> it</c><00:14:33.120><c> can</c><00:14:33.320><c> train</c><00:14:33.959><c> and</c>

00:14:34.110 --> 00:14:34.120 align:start position:0%
Transformer so that it can train and
 

00:14:34.120 --> 00:14:36.670 align:start position:0%
Transformer so that it can train and
learn<00:14:34.440><c> those</c><00:14:35.000><c> patterns</c><00:14:36.000><c> now</c><00:14:36.279><c> the</c><00:14:36.399><c> important</c>

00:14:36.670 --> 00:14:36.680 align:start position:0%
learn those patterns now the important
 

00:14:36.680 --> 00:14:38.629 align:start position:0%
learn those patterns now the important
thing<00:14:36.759><c> to</c><00:14:36.920><c> realize</c><00:14:37.759><c> is</c><00:14:37.880><c> we're</c><00:14:38.079><c> never</c><00:14:38.279><c> going</c><00:14:38.399><c> to</c>

00:14:38.629 --> 00:14:38.639 align:start position:0%
thing to realize is we're never going to
 

00:14:38.639 --> 00:14:40.550 align:start position:0%
thing to realize is we're never going to
actually<00:14:39.000><c> feed</c><00:14:39.519><c> entire</c><00:14:39.959><c> text</c><00:14:40.199><c> into</c><00:14:40.440><c> a</c>

00:14:40.550 --> 00:14:40.560 align:start position:0%
actually feed entire text into a
 

00:14:40.560 --> 00:14:42.230 align:start position:0%
actually feed entire text into a
Transformer<00:14:41.120><c> all</c><00:14:41.279><c> at</c><00:14:41.440><c> once</c><00:14:41.839><c> that</c><00:14:41.959><c> would</c><00:14:42.079><c> be</c>

00:14:42.230 --> 00:14:42.240 align:start position:0%
Transformer all at once that would be
 

00:14:42.240 --> 00:14:44.230 align:start position:0%
Transformer all at once that would be
computationally<00:14:43.240><c> very</c><00:14:43.639><c> expensive</c><00:14:44.000><c> and</c>

00:14:44.230 --> 00:14:44.240 align:start position:0%
computationally very expensive and
 

00:14:44.240 --> 00:14:46.310 align:start position:0%
computationally very expensive and
prohibitive<00:14:45.240><c> so</c><00:14:45.360><c> when</c><00:14:45.480><c> we</c><00:14:45.639><c> actually</c><00:14:45.880><c> train</c><00:14:46.160><c> a</c>

00:14:46.310 --> 00:14:46.320 align:start position:0%
prohibitive so when we actually train a
 

00:14:46.320 --> 00:14:48.189 align:start position:0%
prohibitive so when we actually train a
Transformer<00:14:46.759><c> on</c><00:14:46.880><c> a</c><00:14:46.959><c> lot</c><00:14:47.120><c> of</c><00:14:47.240><c> these</c><00:14:47.360><c> data</c><00:14:47.600><c> sets</c>

00:14:48.189 --> 00:14:48.199 align:start position:0%
Transformer on a lot of these data sets
 

00:14:48.199 --> 00:14:50.389 align:start position:0%
Transformer on a lot of these data sets
we<00:14:48.320><c> only</c><00:14:48.560><c> work</c><00:14:48.839><c> with</c><00:14:49.120><c> chunks</c><00:14:49.560><c> of</c><00:14:49.680><c> the</c><00:14:49.839><c> data</c><00:14:50.079><c> set</c>

00:14:50.389 --> 00:14:50.399 align:start position:0%
we only work with chunks of the data set
 

00:14:50.399 --> 00:14:52.030 align:start position:0%
we only work with chunks of the data set
and<00:14:50.519><c> when</c><00:14:50.639><c> we</c><00:14:50.759><c> train</c><00:14:50.959><c> the</c><00:14:51.079><c> Transformer</c><00:14:51.880><c> we</c>

00:14:52.030 --> 00:14:52.040 align:start position:0%
and when we train the Transformer we
 

00:14:52.040 --> 00:14:53.829 align:start position:0%
and when we train the Transformer we
basically<00:14:52.399><c> sample</c><00:14:52.800><c> random</c><00:14:53.199><c> little</c><00:14:53.440><c> chunks</c>

00:14:53.829 --> 00:14:53.839 align:start position:0%
basically sample random little chunks
 

00:14:53.839 --> 00:14:55.829 align:start position:0%
basically sample random little chunks
out<00:14:53.959><c> of</c><00:14:54.040><c> the</c><00:14:54.160><c> training</c><00:14:54.519><c> set</c><00:14:55.040><c> and</c><00:14:55.160><c> train</c><00:14:55.440><c> on</c>

00:14:55.829 --> 00:14:55.839 align:start position:0%
out of the training set and train on
 

00:14:55.839 --> 00:14:58.350 align:start position:0%
out of the training set and train on
just<00:14:56.040><c> chunks</c><00:14:56.399><c> at</c><00:14:56.519><c> a</c><00:14:56.720><c> time</c><00:14:57.680><c> and</c><00:14:57.800><c> these</c><00:14:58.000><c> chunks</c>

00:14:58.350 --> 00:14:58.360 align:start position:0%
just chunks at a time and these chunks
 

00:14:58.360 --> 00:15:01.829 align:start position:0%
just chunks at a time and these chunks
have<00:14:58.560><c> basically</c><00:14:59.160><c> some</c><00:14:59.320><c> kind</c><00:14:59.440><c> of</c><00:14:59.639><c> a</c><00:15:00.440><c> length</c><00:15:01.440><c> and</c>

00:15:01.829 --> 00:15:01.839 align:start position:0%
have basically some kind of a length and
 

00:15:01.839 --> 00:15:04.350 align:start position:0%
have basically some kind of a length and
some<00:15:02.040><c> maximum</c><00:15:02.600><c> length</c><00:15:03.600><c> now</c><00:15:03.839><c> the</c><00:15:03.959><c> maximum</c>

00:15:04.350 --> 00:15:04.360 align:start position:0%
some maximum length now the maximum
 

00:15:04.360 --> 00:15:06.230 align:start position:0%
some maximum length now the maximum
length<00:15:04.680><c> typically</c><00:15:05.320><c> at</c><00:15:05.399><c> least</c><00:15:05.560><c> in</c><00:15:05.680><c> the</c><00:15:05.839><c> code</c><00:15:06.120><c> I</c>

00:15:06.230 --> 00:15:06.240 align:start position:0%
length typically at least in the code I
 

00:15:06.240 --> 00:15:08.670 align:start position:0%
length typically at least in the code I
usually<00:15:06.560><c> write</c><00:15:06.720><c> is</c><00:15:06.839><c> called</c><00:15:07.120><c> block</c><00:15:07.560><c> size</c><00:15:08.560><c> you</c>

00:15:08.670 --> 00:15:08.680 align:start position:0%
usually write is called block size you
 

00:15:08.680 --> 00:15:10.949 align:start position:0%
usually write is called block size you
can<00:15:09.040><c> you</c><00:15:09.160><c> can</c><00:15:10.000><c> uh</c><00:15:10.120><c> find</c><00:15:10.320><c> it</c><00:15:10.440><c> under</c><00:15:10.720><c> different</c>

00:15:10.949 --> 00:15:10.959 align:start position:0%
can you can uh find it under different
 

00:15:10.959 --> 00:15:12.590 align:start position:0%
can you can uh find it under different
names<00:15:11.399><c> like</c><00:15:11.560><c> context</c><00:15:11.880><c> length</c><00:15:12.160><c> or</c><00:15:12.279><c> something</c>

00:15:12.590 --> 00:15:12.600 align:start position:0%
names like context length or something
 

00:15:12.600 --> 00:15:14.069 align:start position:0%
names like context length or something
like<00:15:12.800><c> that</c><00:15:13.399><c> let's</c><00:15:13.560><c> start</c><00:15:13.720><c> with</c><00:15:13.800><c> the</c><00:15:13.920><c> block</c>

00:15:14.069 --> 00:15:14.079 align:start position:0%
like that let's start with the block
 

00:15:14.079 --> 00:15:16.110 align:start position:0%
like that let's start with the block
size<00:15:14.279><c> of</c><00:15:14.440><c> just</c><00:15:14.639><c> eight</c><00:15:15.440><c> and</c><00:15:15.639><c> let</c><00:15:15.759><c> me</c><00:15:15.880><c> look</c><00:15:16.000><c> at</c>

00:15:16.110 --> 00:15:16.120 align:start position:0%
size of just eight and let me look at
 

00:15:16.120 --> 00:15:18.710 align:start position:0%
size of just eight and let me look at
the<00:15:16.240><c> first</c><00:15:16.440><c> train</c><00:15:17.000><c> data</c><00:15:17.600><c> characters</c><00:15:18.600><c> the</c>

00:15:18.710 --> 00:15:18.720 align:start position:0%
the first train data characters the
 

00:15:18.720 --> 00:15:20.710 align:start position:0%
the first train data characters the
first<00:15:18.959><c> block</c><00:15:19.240><c> size</c><00:15:19.519><c> plus</c><00:15:19.759><c> one</c><00:15:20.120><c> characters</c>

00:15:20.710 --> 00:15:20.720 align:start position:0%
first block size plus one characters
 

00:15:20.720 --> 00:15:22.749 align:start position:0%
first block size plus one characters
I'll<00:15:20.920><c> explain</c><00:15:21.240><c> why</c><00:15:21.399><c> plus</c><00:15:21.600><c> one</c><00:15:21.800><c> in</c><00:15:21.920><c> a</c>

00:15:22.749 --> 00:15:22.759 align:start position:0%
I'll explain why plus one in a
 

00:15:22.759 --> 00:15:24.949 align:start position:0%
I'll explain why plus one in a
second<00:15:23.759><c> so</c><00:15:23.920><c> this</c><00:15:24.040><c> is</c><00:15:24.160><c> the</c><00:15:24.320><c> first</c><00:15:24.600><c> nine</c>

00:15:24.949 --> 00:15:24.959 align:start position:0%
second so this is the first nine
 

00:15:24.959 --> 00:15:27.710 align:start position:0%
second so this is the first nine
characters<00:15:25.759><c> in</c><00:15:26.079><c> the</c><00:15:26.240><c> sequence</c><00:15:27.160><c> in</c><00:15:27.360><c> the</c>

00:15:27.710 --> 00:15:27.720 align:start position:0%
characters in the sequence in the
 

00:15:27.720 --> 00:15:29.990 align:start position:0%
characters in the sequence in the
training<00:15:28.120><c> set</c><00:15:29.199><c> now</c><00:15:29.319><c> what</c><00:15:29.440><c> I'd</c><00:15:29.600><c> like</c><00:15:29.680><c> to</c><00:15:29.800><c> point</c>

00:15:29.990 --> 00:15:30.000 align:start position:0%
training set now what I'd like to point
 

00:15:30.000 --> 00:15:31.670 align:start position:0%
training set now what I'd like to point
out<00:15:30.199><c> is</c><00:15:30.319><c> that</c><00:15:30.399><c> when</c><00:15:30.519><c> you</c><00:15:30.639><c> sample</c><00:15:31.000><c> a</c><00:15:31.160><c> chunk</c><00:15:31.480><c> of</c>

00:15:31.670 --> 00:15:31.680 align:start position:0%
out is that when you sample a chunk of
 

00:15:31.680 --> 00:15:34.230 align:start position:0%
out is that when you sample a chunk of
data<00:15:32.000><c> like</c><00:15:32.240><c> this</c><00:15:32.839><c> so</c><00:15:33.279><c> say</c><00:15:33.519><c> the</c><00:15:33.800><c> these</c><00:15:34.000><c> nine</c>

00:15:34.230 --> 00:15:34.240 align:start position:0%
data like this so say the these nine
 

00:15:34.240 --> 00:15:36.550 align:start position:0%
data like this so say the these nine
characters<00:15:34.600><c> out</c><00:15:34.720><c> of</c><00:15:34.839><c> the</c><00:15:34.920><c> training</c><00:15:35.360><c> set</c><00:15:36.360><c> this</c>

00:15:36.550 --> 00:15:36.560 align:start position:0%
characters out of the training set this
 

00:15:36.560 --> 00:15:38.590 align:start position:0%
characters out of the training set this
actually<00:15:36.839><c> has</c><00:15:37.120><c> multiple</c><00:15:37.600><c> examples</c><00:15:38.199><c> packed</c>

00:15:38.590 --> 00:15:38.600 align:start position:0%
actually has multiple examples packed
 

00:15:38.600 --> 00:15:41.189 align:start position:0%
actually has multiple examples packed
into<00:15:39.040><c> it</c><00:15:40.040><c> and</c><00:15:40.399><c> uh</c><00:15:40.560><c> that's</c><00:15:40.720><c> because</c><00:15:40.959><c> all</c><00:15:41.079><c> of</c>

00:15:41.189 --> 00:15:41.199 align:start position:0%
into it and uh that's because all of
 

00:15:41.199 --> 00:15:43.829 align:start position:0%
into it and uh that's because all of
these<00:15:41.360><c> characters</c><00:15:42.040><c> follow</c><00:15:42.399><c> each</c><00:15:42.680><c> other</c><00:15:43.680><c> and</c>

00:15:43.829 --> 00:15:43.839 align:start position:0%
these characters follow each other and
 

00:15:43.839 --> 00:15:47.069 align:start position:0%
these characters follow each other and
so<00:15:44.560><c> what</c><00:15:44.759><c> this</c><00:15:45.639><c> thing</c><00:15:45.959><c> is</c><00:15:46.120><c> going</c><00:15:46.319><c> to</c><00:15:46.680><c> say</c><00:15:46.959><c> when</c>

00:15:47.069 --> 00:15:47.079 align:start position:0%
so what this thing is going to say when
 

00:15:47.079 --> 00:15:49.230 align:start position:0%
so what this thing is going to say when
we<00:15:47.240><c> plug</c><00:15:47.399><c> it</c><00:15:47.519><c> into</c><00:15:47.639><c> a</c><00:15:47.959><c> Transformer</c><00:15:48.959><c> is</c><00:15:49.079><c> we're</c>

00:15:49.230 --> 00:15:49.240 align:start position:0%
we plug it into a Transformer is we're
 

00:15:49.240 --> 00:15:50.629 align:start position:0%
we plug it into a Transformer is we're
going<00:15:49.360><c> to</c><00:15:49.519><c> actually</c><00:15:49.759><c> simultaneously</c><00:15:50.360><c> train</c>

00:15:50.629 --> 00:15:50.639 align:start position:0%
going to actually simultaneously train
 

00:15:50.639 --> 00:15:52.470 align:start position:0%
going to actually simultaneously train
it<00:15:50.959><c> to</c><00:15:51.199><c> make</c><00:15:51.440><c> prediction</c><00:15:51.759><c> at</c><00:15:52.000><c> every</c><00:15:52.199><c> one</c><00:15:52.360><c> of</c>

00:15:52.470 --> 00:15:52.480 align:start position:0%
it to make prediction at every one of
 

00:15:52.480 --> 00:15:53.350 align:start position:0%
it to make prediction at every one of
these

00:15:53.350 --> 00:15:53.360 align:start position:0%
these
 

00:15:53.360 --> 00:15:56.749 align:start position:0%
these
positions<00:15:54.360><c> now</c><00:15:55.319><c> in</c><00:15:55.480><c> the</c><00:15:55.759><c> in</c><00:15:55.880><c> a</c><00:15:56.040><c> chunk</c><00:15:56.319><c> of</c><00:15:56.519><c> nine</c>

00:15:56.749 --> 00:15:56.759 align:start position:0%
positions now in the in a chunk of nine
 

00:15:56.759 --> 00:15:58.949 align:start position:0%
positions now in the in a chunk of nine
characters<00:15:57.519><c> there's</c><00:15:57.800><c> actually</c><00:15:58.199><c> eight</c><00:15:58.600><c> indiv</c>

00:15:58.949 --> 00:15:58.959 align:start position:0%
characters there's actually eight indiv
 

00:15:58.959 --> 00:16:01.550 align:start position:0%
characters there's actually eight indiv
ual<00:15:59.279><c> examples</c><00:15:59.759><c> packed</c><00:16:00.079><c> in</c><00:16:00.279><c> there</c><00:16:01.199><c> so</c><00:16:01.360><c> there's</c>

00:16:01.550 --> 00:16:01.560 align:start position:0%
ual examples packed in there so there's
 

00:16:01.560 --> 00:16:04.670 align:start position:0%
ual examples packed in there so there's
the<00:16:01.680><c> example</c><00:16:02.120><c> that</c><00:16:02.319><c> when</c><00:16:02.800><c> 18</c><00:16:03.800><c> when</c><00:16:04.440><c> in</c><00:16:04.519><c> the</c>

00:16:04.670 --> 00:16:04.680 align:start position:0%
the example that when 18 when in the
 

00:16:04.680 --> 00:16:08.309 align:start position:0%
the example that when 18 when in the
context<00:16:05.000><c> of</c><00:16:05.160><c> 18</c><00:16:06.000><c> 47</c><00:16:06.720><c> likely</c><00:16:07.079><c> comes</c><00:16:07.360><c> next</c><00:16:08.040><c> in</c><00:16:08.160><c> a</c>

00:16:08.309 --> 00:16:08.319 align:start position:0%
context of 18 47 likely comes next in a
 

00:16:08.319 --> 00:16:12.110 align:start position:0%
context of 18 47 likely comes next in a
context<00:16:08.639><c> of</c><00:16:08.759><c> 18</c><00:16:09.079><c> and</c><00:16:09.240><c> 47</c><00:16:10.199><c> 56</c><00:16:10.759><c> comes</c><00:16:11.040><c> next</c><00:16:11.880><c> in</c><00:16:12.000><c> a</c>

00:16:12.110 --> 00:16:12.120 align:start position:0%
context of 18 and 47 56 comes next in a
 

00:16:12.120 --> 00:16:16.550 align:start position:0%
context of 18 and 47 56 comes next in a
context<00:16:12.440><c> of</c><00:16:12.560><c> 18</c><00:16:12.839><c> 47</c><00:16:13.319><c> 56</c><00:16:14.319><c> 57</c><00:16:15.319><c> can</c><00:16:15.519><c> come</c><00:16:15.759><c> next</c><00:16:16.399><c> and</c>

00:16:16.550 --> 00:16:16.560 align:start position:0%
context of 18 47 56 57 can come next and
 

00:16:16.560 --> 00:16:18.790 align:start position:0%
context of 18 47 56 57 can come next and
so<00:16:16.720><c> on</c><00:16:17.279><c> so</c><00:16:17.440><c> that's</c><00:16:17.639><c> the</c><00:16:17.800><c> eight</c><00:16:18.160><c> individual</c>

00:16:18.790 --> 00:16:18.800 align:start position:0%
so on so that's the eight individual
 

00:16:18.800 --> 00:16:20.829 align:start position:0%
so on so that's the eight individual
examples<00:16:19.800><c> let</c><00:16:19.920><c> me</c><00:16:20.079><c> actually</c><00:16:20.279><c> spell</c><00:16:20.519><c> it</c><00:16:20.639><c> out</c>

00:16:20.829 --> 00:16:20.839 align:start position:0%
examples let me actually spell it out
 

00:16:20.839 --> 00:16:21.629 align:start position:0%
examples let me actually spell it out
with

00:16:21.629 --> 00:16:21.639 align:start position:0%
with
 

00:16:21.639 --> 00:16:24.110 align:start position:0%
with
code<00:16:22.639><c> so</c><00:16:22.800><c> here's</c><00:16:23.000><c> a</c><00:16:23.079><c> chunk</c><00:16:23.319><c> of</c><00:16:23.480><c> code</c><00:16:23.680><c> to</c>

00:16:24.110 --> 00:16:24.120 align:start position:0%
code so here's a chunk of code to
 

00:16:24.120 --> 00:16:26.470 align:start position:0%
code so here's a chunk of code to
illustrate<00:16:25.120><c> X</c><00:16:25.480><c> are</c><00:16:25.759><c> the</c><00:16:25.880><c> inputs</c><00:16:26.240><c> to</c><00:16:26.399><c> the</c>

00:16:26.470 --> 00:16:26.480 align:start position:0%
illustrate X are the inputs to the
 

00:16:26.480 --> 00:16:28.110 align:start position:0%
illustrate X are the inputs to the
Transformer<00:16:27.160><c> it</c><00:16:27.240><c> will</c><00:16:27.399><c> just</c><00:16:27.560><c> be</c><00:16:27.680><c> the</c><00:16:27.800><c> first</c>

00:16:28.110 --> 00:16:28.120 align:start position:0%
Transformer it will just be the first
 

00:16:28.120 --> 00:16:32.590 align:start position:0%
Transformer it will just be the first
block<00:16:28.440><c> size</c><00:16:29.319><c> characters</c><00:16:30.319><c> y</c><00:16:31.199><c> will</c><00:16:31.399><c> be</c><00:16:31.720><c> the</c><00:16:32.360><c> uh</c>

00:16:32.590 --> 00:16:32.600 align:start position:0%
block size characters y will be the uh
 

00:16:32.600 --> 00:16:34.509 align:start position:0%
block size characters y will be the uh
next<00:16:33.079><c> block</c><00:16:33.399><c> size</c><00:16:33.639><c> characters</c><00:16:34.160><c> so</c><00:16:34.279><c> it's</c>

00:16:34.509 --> 00:16:34.519 align:start position:0%
next block size characters so it's
 

00:16:34.519 --> 00:16:37.389 align:start position:0%
next block size characters so it's
offset<00:16:34.920><c> by</c><00:16:35.120><c> one</c><00:16:36.120><c> and</c><00:16:36.240><c> that's</c><00:16:36.399><c> because</c><00:16:36.680><c> y</c><00:16:37.199><c> are</c>

00:16:37.389 --> 00:16:37.399 align:start position:0%
offset by one and that's because y are
 

00:16:37.399 --> 00:16:40.430 align:start position:0%
offset by one and that's because y are
the<00:16:37.600><c> targets</c><00:16:38.360><c> for</c><00:16:38.600><c> each</c><00:16:39.079><c> position</c><00:16:39.920><c> in</c><00:16:40.040><c> the</c>

00:16:40.430 --> 00:16:40.440 align:start position:0%
the targets for each position in the
 

00:16:40.440 --> 00:16:42.629 align:start position:0%
the targets for each position in the
input<00:16:41.440><c> and</c><00:16:41.560><c> then</c><00:16:41.720><c> here</c><00:16:41.839><c> I'm</c><00:16:41.959><c> iterating</c><00:16:42.399><c> over</c>

00:16:42.629 --> 00:16:42.639 align:start position:0%
input and then here I'm iterating over
 

00:16:42.639 --> 00:16:45.389 align:start position:0%
input and then here I'm iterating over
all<00:16:42.839><c> the</c><00:16:43.399><c> block</c><00:16:43.639><c> size</c><00:16:43.839><c> of</c><00:16:44.000><c> eight</c><00:16:45.000><c> and</c><00:16:45.279><c> the</c>

00:16:45.389 --> 00:16:45.399 align:start position:0%
all the block size of eight and the
 

00:16:45.399 --> 00:16:47.110 align:start position:0%
all the block size of eight and the
context<00:16:45.759><c> is</c><00:16:45.959><c> always</c><00:16:46.319><c> all</c><00:16:46.440><c> the</c><00:16:46.560><c> characters</c><00:16:46.920><c> in</c>

00:16:47.110 --> 00:16:47.120 align:start position:0%
context is always all the characters in
 

00:16:47.120 --> 00:16:51.470 align:start position:0%
context is always all the characters in
x<00:16:48.120><c> uh</c><00:16:48.279><c> up</c><00:16:48.440><c> to</c><00:16:48.600><c> T</c><00:16:49.040><c> and</c><00:16:49.199><c> including</c><00:16:49.920><c> T</c><00:16:50.920><c> and</c><00:16:51.279><c> the</c>

00:16:51.470 --> 00:16:51.480 align:start position:0%
x uh up to T and including T and the
 

00:16:51.480 --> 00:16:53.670 align:start position:0%
x uh up to T and including T and the
target<00:16:51.800><c> is</c><00:16:51.959><c> always</c><00:16:52.199><c> the</c><00:16:52.319><c> teth</c><00:16:52.800><c> character</c><00:16:53.480><c> but</c>

00:16:53.670 --> 00:16:53.680 align:start position:0%
target is always the teth character but
 

00:16:53.680 --> 00:16:56.590 align:start position:0%
target is always the teth character but
in<00:16:54.279><c> the</c><00:16:54.399><c> targets</c><00:16:54.880><c> array</c><00:16:55.319><c> y</c><00:16:56.120><c> so</c><00:16:56.240><c> let</c><00:16:56.319><c> me</c><00:16:56.480><c> just</c>

00:16:56.590 --> 00:16:56.600 align:start position:0%
in the targets array y so let me just
 

00:16:56.600 --> 00:16:57.350 align:start position:0%
in the targets array y so let me just
run

00:16:57.350 --> 00:16:57.360 align:start position:0%
run
 

00:16:57.360 --> 00:16:59.829 align:start position:0%
run
this<00:16:58.360><c> and</c><00:16:58.519><c> basically</c><00:16:58.959><c> it</c><00:16:59.040><c> spells</c><00:16:59.360><c> out</c><00:16:59.560><c> what</c><00:16:59.680><c> I</c>

00:16:59.829 --> 00:16:59.839 align:start position:0%
this and basically it spells out what I
 

00:16:59.839 --> 00:17:02.189 align:start position:0%
this and basically it spells out what I
said<00:17:00.120><c> in</c><00:17:00.319><c> words</c><00:17:01.240><c> uh</c><00:17:01.360><c> these</c><00:17:01.440><c> are</c><00:17:01.639><c> the</c><00:17:01.839><c> eight</c>

00:17:02.189 --> 00:17:02.199 align:start position:0%
said in words uh these are the eight
 

00:17:02.199 --> 00:17:04.510 align:start position:0%
said in words uh these are the eight
examples<00:17:02.800><c> hidden</c><00:17:03.079><c> in</c><00:17:03.199><c> a</c><00:17:03.360><c> chunk</c><00:17:04.000><c> of</c><00:17:04.199><c> nine</c>

00:17:04.510 --> 00:17:04.520 align:start position:0%
examples hidden in a chunk of nine
 

00:17:04.520 --> 00:17:08.309 align:start position:0%
examples hidden in a chunk of nine
characters<00:17:05.480><c> that</c><00:17:05.640><c> we</c><00:17:06.400><c> uh</c><00:17:07.039><c> sampled</c><00:17:07.839><c> from</c><00:17:08.199><c> the</c>

00:17:08.309 --> 00:17:08.319 align:start position:0%
characters that we uh sampled from the
 

00:17:08.319 --> 00:17:11.029 align:start position:0%
characters that we uh sampled from the
training<00:17:09.079><c> set</c><00:17:10.079><c> I</c><00:17:10.160><c> want</c><00:17:10.280><c> to</c><00:17:10.400><c> mention</c><00:17:10.679><c> one</c><00:17:10.839><c> more</c>

00:17:11.029 --> 00:17:11.039 align:start position:0%
training set I want to mention one more
 

00:17:11.039 --> 00:17:14.390 align:start position:0%
training set I want to mention one more
thing<00:17:11.760><c> we</c><00:17:11.919><c> train</c><00:17:12.199><c> on</c><00:17:12.480><c> all</c><00:17:12.720><c> the</c><00:17:13.199><c> eight</c><00:17:13.880><c> examples</c>

00:17:14.390 --> 00:17:14.400 align:start position:0%
thing we train on all the eight examples
 

00:17:14.400 --> 00:17:16.789 align:start position:0%
thing we train on all the eight examples
here<00:17:15.000><c> with</c><00:17:15.199><c> context</c><00:17:15.679><c> between</c><00:17:16.079><c> one</c><00:17:16.559><c> all</c><00:17:16.679><c> the</c>

00:17:16.789 --> 00:17:16.799 align:start position:0%
here with context between one all the
 

00:17:16.799 --> 00:17:19.270 align:start position:0%
here with context between one all the
way<00:17:16.959><c> up</c><00:17:17.039><c> to</c><00:17:17.240><c> context</c><00:17:17.559><c> of</c><00:17:17.760><c> block</c><00:17:18.039><c> size</c><00:17:19.039><c> and</c><00:17:19.160><c> we</c>

00:17:19.270 --> 00:17:19.280 align:start position:0%
way up to context of block size and we
 

00:17:19.280 --> 00:17:20.870 align:start position:0%
way up to context of block size and we
train<00:17:19.520><c> on</c><00:17:19.679><c> that</c><00:17:19.839><c> not</c><00:17:19.959><c> just</c><00:17:20.079><c> for</c><00:17:20.319><c> computational</c>

00:17:20.870 --> 00:17:20.880 align:start position:0%
train on that not just for computational
 

00:17:20.880 --> 00:17:22.150 align:start position:0%
train on that not just for computational
reasons<00:17:21.280><c> because</c><00:17:21.480><c> we</c><00:17:21.600><c> happen</c><00:17:21.799><c> to</c><00:17:21.959><c> have</c><00:17:22.079><c> the</c>

00:17:22.150 --> 00:17:22.160 align:start position:0%
reasons because we happen to have the
 

00:17:22.160 --> 00:17:23.669 align:start position:0%
reasons because we happen to have the
sequence<00:17:22.520><c> already</c><00:17:22.959><c> or</c><00:17:23.120><c> something</c><00:17:23.400><c> like</c><00:17:23.559><c> that</c>

00:17:23.669 --> 00:17:23.679 align:start position:0%
sequence already or something like that
 

00:17:23.679 --> 00:17:26.189 align:start position:0%
sequence already or something like that
it's<00:17:23.839><c> not</c><00:17:24.319><c> just</c><00:17:24.480><c> done</c><00:17:24.600><c> for</c><00:17:24.959><c> efficiency</c><00:17:25.959><c> it's</c>

00:17:26.189 --> 00:17:26.199 align:start position:0%
it's not just done for efficiency it's
 

00:17:26.199 --> 00:17:28.909 align:start position:0%
it's not just done for efficiency it's
also<00:17:26.559><c> done</c><00:17:27.160><c> um</c><00:17:27.360><c> to</c><00:17:27.919><c> make</c><00:17:28.120><c> the</c><00:17:28.240><c> Transformer</c>

00:17:28.909 --> 00:17:28.919 align:start position:0%
also done um to make the Transformer
 

00:17:28.919 --> 00:17:31.990 align:start position:0%
also done um to make the Transformer
Network<00:17:29.559><c> be</c><00:17:29.760><c> used</c><00:17:30.120><c> to</c><00:17:30.360><c> seeing</c><00:17:31.080><c> contexts</c><00:17:31.840><c> all</c>

00:17:31.990 --> 00:17:32.000 align:start position:0%
Network be used to seeing contexts all
 

00:17:32.000 --> 00:17:33.909 align:start position:0%
Network be used to seeing contexts all
the<00:17:32.120><c> way</c><00:17:32.280><c> from</c><00:17:32.520><c> as</c><00:17:32.679><c> little</c><00:17:32.919><c> as</c><00:17:33.080><c> one</c><00:17:33.640><c> all</c><00:17:33.799><c> the</c>

00:17:33.909 --> 00:17:33.919 align:start position:0%
the way from as little as one all the
 

00:17:33.919 --> 00:17:36.590 align:start position:0%
the way from as little as one all the
way<00:17:34.120><c> to</c><00:17:34.640><c> block</c><00:17:35.039><c> size</c><00:17:36.039><c> and</c><00:17:36.200><c> we'd</c><00:17:36.360><c> like</c><00:17:36.480><c> the</c>

00:17:36.590 --> 00:17:36.600 align:start position:0%
way to block size and we'd like the
 

00:17:36.600 --> 00:17:38.230 align:start position:0%
way to block size and we'd like the
transform<00:17:37.039><c> to</c><00:17:37.160><c> be</c><00:17:37.240><c> used</c><00:17:37.520><c> to</c><00:17:37.840><c> seeing</c>

00:17:38.230 --> 00:17:38.240 align:start position:0%
transform to be used to seeing
 

00:17:38.240 --> 00:17:39.909 align:start position:0%
transform to be used to seeing
everything<00:17:38.520><c> in</c><00:17:38.640><c> between</c><00:17:39.520><c> and</c><00:17:39.640><c> that's</c><00:17:39.760><c> going</c>

00:17:39.909 --> 00:17:39.919 align:start position:0%
everything in between and that's going
 

00:17:39.919 --> 00:17:41.669 align:start position:0%
everything in between and that's going
to<00:17:40.000><c> be</c><00:17:40.080><c> useful</c><00:17:40.440><c> later</c><00:17:40.679><c> during</c><00:17:40.960><c> inference</c>

00:17:41.669 --> 00:17:41.679 align:start position:0%
to be useful later during inference
 

00:17:41.679 --> 00:17:43.590 align:start position:0%
to be useful later during inference
because<00:17:42.000><c> while</c><00:17:42.160><c> we're</c><00:17:42.400><c> sampling</c><00:17:43.360><c> we</c><00:17:43.480><c> can</c>

00:17:43.590 --> 00:17:43.600 align:start position:0%
because while we're sampling we can
 

00:17:43.600 --> 00:17:45.590 align:start position:0%
because while we're sampling we can
start<00:17:43.840><c> the</c><00:17:44.360><c> sampling</c><00:17:44.720><c> generation</c><00:17:45.240><c> with</c><00:17:45.440><c> as</c>

00:17:45.590 --> 00:17:45.600 align:start position:0%
start the sampling generation with as
 

00:17:45.600 --> 00:17:47.669 align:start position:0%
start the sampling generation with as
little<00:17:45.840><c> as</c><00:17:46.039><c> one</c><00:17:46.360><c> character</c><00:17:46.640><c> of</c><00:17:46.840><c> context</c><00:17:47.600><c> and</c>

00:17:47.669 --> 00:17:47.679 align:start position:0%
little as one character of context and
 

00:17:47.679 --> 00:17:49.190 align:start position:0%
little as one character of context and
the<00:17:47.840><c> Transformer</c><00:17:48.320><c> knows</c><00:17:48.559><c> how</c><00:17:48.679><c> to</c><00:17:48.840><c> predict</c><00:17:49.080><c> the</c>

00:17:49.190 --> 00:17:49.200 align:start position:0%
the Transformer knows how to predict the
 

00:17:49.200 --> 00:17:50.990 align:start position:0%
the Transformer knows how to predict the
next<00:17:49.400><c> character</c><00:17:50.160><c> with</c><00:17:50.320><c> all</c><00:17:50.480><c> the</c><00:17:50.559><c> way</c><00:17:50.720><c> up</c><00:17:50.799><c> to</c>

00:17:50.990 --> 00:17:51.000 align:start position:0%
next character with all the way up to
 

00:17:51.000 --> 00:17:53.630 align:start position:0%
next character with all the way up to
just<00:17:51.400><c> context</c><00:17:51.720><c> of</c><00:17:51.919><c> one</c><00:17:52.679><c> and</c><00:17:52.799><c> so</c><00:17:53.039><c> then</c><00:17:53.160><c> it</c><00:17:53.320><c> can</c>

00:17:53.630 --> 00:17:53.640 align:start position:0%
just context of one and so then it can
 

00:17:53.640 --> 00:17:55.590 align:start position:0%
just context of one and so then it can
predict<00:17:53.960><c> everything</c><00:17:54.240><c> up</c><00:17:54.360><c> to</c><00:17:54.480><c> block</c><00:17:54.760><c> size</c><00:17:55.400><c> and</c>

00:17:55.590 --> 00:17:55.600 align:start position:0%
predict everything up to block size and
 

00:17:55.600 --> 00:17:56.909 align:start position:0%
predict everything up to block size and
after<00:17:55.840><c> block</c><00:17:56.120><c> size</c><00:17:56.360><c> we</c><00:17:56.440><c> have</c><00:17:56.520><c> to</c><00:17:56.640><c> start</c>

00:17:56.909 --> 00:17:56.919 align:start position:0%
after block size we have to start
 

00:17:56.919 --> 00:17:58.830 align:start position:0%
after block size we have to start
truncating<00:17:57.919><c> because</c><00:17:58.120><c> the</c><00:17:58.240><c> Transformer</c><00:17:58.679><c> will</c>

00:17:58.830 --> 00:17:58.840 align:start position:0%
truncating because the Transformer will
 

00:17:58.840 --> 00:18:01.190 align:start position:0%
truncating because the Transformer will
will<00:17:59.000><c> never</c><00:17:59.760><c> um</c><00:18:00.159><c> receive</c><00:18:00.520><c> more</c><00:18:00.720><c> than</c><00:18:00.880><c> block</c>

00:18:01.190 --> 00:18:01.200 align:start position:0%
will never um receive more than block
 

00:18:01.200 --> 00:18:02.990 align:start position:0%
will never um receive more than block
size<00:18:01.720><c> inputs</c><00:18:02.280><c> when</c><00:18:02.400><c> it's</c><00:18:02.559><c> predicting</c><00:18:02.880><c> the</c>

00:18:02.990 --> 00:18:03.000 align:start position:0%
size inputs when it's predicting the
 

00:18:03.000 --> 00:18:03.750 align:start position:0%
size inputs when it's predicting the
next

00:18:03.750 --> 00:18:03.760 align:start position:0%
next
 

00:18:03.760 --> 00:18:06.190 align:start position:0%
next
character<00:18:04.760><c> Okay</c><00:18:04.880><c> so</c><00:18:05.039><c> we've</c><00:18:05.200><c> looked</c><00:18:05.440><c> at</c><00:18:05.679><c> the</c>

00:18:06.190 --> 00:18:06.200 align:start position:0%
character Okay so we've looked at the
 

00:18:06.200 --> 00:18:07.950 align:start position:0%
character Okay so we've looked at the
time<00:18:06.440><c> dimension</c><00:18:07.120><c> of</c><00:18:07.240><c> the</c><00:18:07.360><c> tensors</c><00:18:07.760><c> that</c><00:18:07.840><c> are</c>

00:18:07.950 --> 00:18:07.960 align:start position:0%
time dimension of the tensors that are
 

00:18:07.960 --> 00:18:09.549 align:start position:0%
time dimension of the tensors that are
going<00:18:08.039><c> to</c><00:18:08.120><c> be</c><00:18:08.200><c> feeding</c><00:18:08.480><c> into</c><00:18:08.640><c> the</c><00:18:08.720><c> Transformer</c>

00:18:09.549 --> 00:18:09.559 align:start position:0%
going to be feeding into the Transformer
 

00:18:09.559 --> 00:18:10.990 align:start position:0%
going to be feeding into the Transformer
there's<00:18:09.760><c> one</c><00:18:09.919><c> more</c><00:18:10.080><c> Dimension</c><00:18:10.400><c> to</c><00:18:10.559><c> care</c><00:18:10.760><c> about</c>

00:18:10.990 --> 00:18:11.000 align:start position:0%
there's one more Dimension to care about
 

00:18:11.000 --> 00:18:13.310 align:start position:0%
there's one more Dimension to care about
and<00:18:11.120><c> that</c><00:18:11.200><c> is</c><00:18:11.320><c> the</c><00:18:11.440><c> batch</c><00:18:11.840><c> Dimension</c><00:18:12.840><c> and</c><00:18:13.000><c> so</c>

00:18:13.310 --> 00:18:13.320 align:start position:0%
and that is the batch Dimension and so
 

00:18:13.320 --> 00:18:15.510 align:start position:0%
and that is the batch Dimension and so
as<00:18:13.400><c> we're</c><00:18:13.600><c> sampling</c><00:18:14.039><c> these</c><00:18:14.240><c> chunks</c><00:18:14.559><c> of</c><00:18:14.799><c> text</c>

00:18:15.510 --> 00:18:15.520 align:start position:0%
as we're sampling these chunks of text
 

00:18:15.520 --> 00:18:17.549 align:start position:0%
as we're sampling these chunks of text
we're<00:18:15.720><c> going</c><00:18:15.840><c> to</c><00:18:16.039><c> be</c><00:18:16.600><c> actually</c><00:18:17.200><c> every</c><00:18:17.400><c> time</c>

00:18:17.549 --> 00:18:17.559 align:start position:0%
we're going to be actually every time
 

00:18:17.559 --> 00:18:18.430 align:start position:0%
we're going to be actually every time
we're<00:18:17.720><c> going</c><00:18:17.799><c> to</c><00:18:17.919><c> feed</c><00:18:18.120><c> them</c><00:18:18.200><c> into</c><00:18:18.360><c> a</c>

00:18:18.430 --> 00:18:18.440 align:start position:0%
we're going to feed them into a
 

00:18:18.440 --> 00:18:20.190 align:start position:0%
we're going to feed them into a
Transformer<00:18:19.240><c> we're</c><00:18:19.400><c> going</c><00:18:19.520><c> to</c><00:18:19.679><c> have</c><00:18:19.880><c> many</c>

00:18:20.190 --> 00:18:20.200 align:start position:0%
Transformer we're going to have many
 

00:18:20.200 --> 00:18:22.149 align:start position:0%
Transformer we're going to have many
batches<00:18:20.679><c> of</c><00:18:20.880><c> multiple</c><00:18:21.280><c> chunks</c><00:18:21.559><c> of</c><00:18:21.760><c> text</c><00:18:22.080><c> that</c>

00:18:22.149 --> 00:18:22.159 align:start position:0%
batches of multiple chunks of text that
 

00:18:22.159 --> 00:18:23.669 align:start position:0%
batches of multiple chunks of text that
are<00:18:22.320><c> all</c><00:18:22.520><c> like</c><00:18:22.799><c> stacked</c><00:18:23.080><c> up</c><00:18:23.159><c> in</c><00:18:23.280><c> a</c><00:18:23.400><c> single</c>

00:18:23.669 --> 00:18:23.679 align:start position:0%
are all like stacked up in a single
 

00:18:23.679 --> 00:18:25.430 align:start position:0%
are all like stacked up in a single
tensor<00:18:24.640><c> and</c><00:18:24.760><c> that's</c><00:18:24.919><c> just</c><00:18:25.080><c> done</c><00:18:25.240><c> for</c>

00:18:25.430 --> 00:18:25.440 align:start position:0%
tensor and that's just done for
 

00:18:25.440 --> 00:18:26.990 align:start position:0%
tensor and that's just done for
efficiency<00:18:26.039><c> just</c><00:18:26.159><c> so</c><00:18:26.320><c> that</c><00:18:26.400><c> we</c><00:18:26.520><c> can</c><00:18:26.679><c> keep</c><00:18:26.880><c> the</c>

00:18:26.990 --> 00:18:27.000 align:start position:0%
efficiency just so that we can keep the
 

00:18:27.000 --> 00:18:29.470 align:start position:0%
efficiency just so that we can keep the
gpus<00:18:27.559><c> busy</c><00:18:28.320><c> uh</c><00:18:28.440><c> because</c><00:18:28.600><c> they</c><00:18:28.799><c> are</c><00:18:28.960><c> very</c><00:18:29.200><c> good</c>

00:18:29.470 --> 00:18:29.480 align:start position:0%
gpus busy uh because they are very good
 

00:18:29.480 --> 00:18:33.230 align:start position:0%
gpus busy uh because they are very good
at<00:18:29.880><c> parallel</c><00:18:30.400><c> processing</c><00:18:31.000><c> of</c><00:18:31.679><c> um</c><00:18:31.960><c> of</c><00:18:32.159><c> data</c><00:18:33.080><c> and</c>

00:18:33.230 --> 00:18:33.240 align:start position:0%
at parallel processing of um of data and
 

00:18:33.240 --> 00:18:35.190 align:start position:0%
at parallel processing of um of data and
so<00:18:33.679><c> we</c><00:18:33.880><c> just</c><00:18:34.000><c> want</c><00:18:34.159><c> to</c><00:18:34.400><c> process</c><00:18:34.760><c> multiple</c>

00:18:35.190 --> 00:18:35.200 align:start position:0%
so we just want to process multiple
 

00:18:35.200 --> 00:18:37.310 align:start position:0%
so we just want to process multiple
chunks<00:18:35.640><c> all</c><00:18:35.840><c> at</c><00:18:36.000><c> the</c><00:18:36.120><c> same</c><00:18:36.360><c> time</c><00:18:36.960><c> but</c><00:18:37.159><c> those</c>

00:18:37.310 --> 00:18:37.320 align:start position:0%
chunks all at the same time but those
 

00:18:37.320 --> 00:18:38.390 align:start position:0%
chunks all at the same time but those
chunks<00:18:37.600><c> are</c><00:18:37.760><c> processed</c><00:18:38.120><c> completely</c>

00:18:38.390 --> 00:18:38.400 align:start position:0%
chunks are processed completely
 

00:18:38.400 --> 00:18:39.669 align:start position:0%
chunks are processed completely
independently<00:18:38.960><c> they</c><00:18:39.039><c> don't</c><00:18:39.240><c> talk</c><00:18:39.400><c> to</c><00:18:39.559><c> each</c>

00:18:39.669 --> 00:18:39.679 align:start position:0%
independently they don't talk to each
 

00:18:39.679 --> 00:18:42.430 align:start position:0%
independently they don't talk to each
other<00:18:40.360><c> and</c><00:18:40.559><c> so</c><00:18:40.720><c> on</c><00:18:41.480><c> so</c><00:18:41.600><c> let</c><00:18:41.720><c> me</c><00:18:41.880><c> basically</c><00:18:42.280><c> just</c>

00:18:42.430 --> 00:18:42.440 align:start position:0%
other and so on so let me basically just
 

00:18:42.440 --> 00:18:44.230 align:start position:0%
other and so on so let me basically just
generalize<00:18:43.000><c> this</c><00:18:43.240><c> and</c><00:18:43.400><c> introduce</c><00:18:43.760><c> a</c><00:18:43.919><c> batch</c>

00:18:44.230 --> 00:18:44.240 align:start position:0%
generalize this and introduce a batch
 

00:18:44.240 --> 00:18:46.270 align:start position:0%
generalize this and introduce a batch
Dimension<00:18:44.960><c> here's</c><00:18:45.159><c> a</c><00:18:45.280><c> chunk</c><00:18:45.520><c> of</c>

00:18:46.270 --> 00:18:46.280 align:start position:0%
Dimension here's a chunk of
 

00:18:46.280 --> 00:18:48.470 align:start position:0%
Dimension here's a chunk of
code<00:18:47.280><c> let</c><00:18:47.360><c> me</c><00:18:47.520><c> just</c><00:18:47.679><c> run</c><00:18:47.840><c> it</c><00:18:48.120><c> and</c><00:18:48.240><c> then</c><00:18:48.360><c> I'm</c>

00:18:48.470 --> 00:18:48.480 align:start position:0%
code let me just run it and then I'm
 

00:18:48.480 --> 00:18:50.750 align:start position:0%
code let me just run it and then I'm
going<00:18:48.600><c> to</c><00:18:48.799><c> explain</c><00:18:49.080><c> what</c><00:18:49.200><c> it</c>

00:18:50.750 --> 00:18:50.760 align:start position:0%
going to explain what it
 

00:18:50.760 --> 00:18:52.830 align:start position:0%
going to explain what it
does<00:18:51.760><c> so</c><00:18:52.000><c> here</c><00:18:52.159><c> because</c><00:18:52.360><c> we're</c><00:18:52.520><c> going</c><00:18:52.640><c> to</c>

00:18:52.830 --> 00:18:52.840 align:start position:0%
does so here because we're going to
 

00:18:52.840 --> 00:18:54.669 align:start position:0%
does so here because we're going to
start<00:18:53.200><c> sampling</c><00:18:53.720><c> random</c><00:18:54.039><c> locations</c><00:18:54.440><c> in</c><00:18:54.559><c> the</c>

00:18:54.669 --> 00:18:54.679 align:start position:0%
start sampling random locations in the
 

00:18:54.679 --> 00:18:56.990 align:start position:0%
start sampling random locations in the
data<00:18:54.960><c> set</c><00:18:55.120><c> to</c><00:18:55.280><c> pull</c><00:18:55.480><c> chunks</c><00:18:55.840><c> from</c><00:18:56.760><c> I</c><00:18:56.840><c> am</c>

00:18:56.990 --> 00:18:57.000 align:start position:0%
data set to pull chunks from I am
 

00:18:57.000 --> 00:19:00.029 align:start position:0%
data set to pull chunks from I am
setting<00:18:57.320><c> the</c><00:18:57.480><c> seed</c><00:18:58.200><c> so</c><00:18:58.440><c> that</c><00:18:59.039><c> um</c><00:18:59.760><c> in</c><00:18:59.880><c> the</c>

00:19:00.029 --> 00:19:00.039 align:start position:0%
setting the seed so that um in the
 

00:19:00.039 --> 00:19:01.430 align:start position:0%
setting the seed so that um in the
random<00:19:00.320><c> number</c><00:19:00.520><c> generator</c><00:19:01.039><c> so</c><00:19:01.200><c> that</c><00:19:01.320><c> the</c>

00:19:01.430 --> 00:19:01.440 align:start position:0%
random number generator so that the
 

00:19:01.440 --> 00:19:02.830 align:start position:0%
random number generator so that the
numbers<00:19:01.760><c> I</c><00:19:01.880><c> see</c><00:19:02.120><c> here</c><00:19:02.280><c> are</c><00:19:02.440><c> going</c><00:19:02.520><c> to</c><00:19:02.600><c> be</c><00:19:02.720><c> the</c>

00:19:02.830 --> 00:19:02.840 align:start position:0%
numbers I see here are going to be the
 

00:19:02.840 --> 00:19:04.710 align:start position:0%
numbers I see here are going to be the
same<00:19:03.000><c> numbers</c><00:19:03.320><c> you</c><00:19:03.480><c> see</c><00:19:03.720><c> later</c><00:19:04.159><c> if</c><00:19:04.280><c> you</c><00:19:04.400><c> try</c><00:19:04.600><c> to</c>

00:19:04.710 --> 00:19:04.720 align:start position:0%
same numbers you see later if you try to
 

00:19:04.720 --> 00:19:07.350 align:start position:0%
same numbers you see later if you try to
reproduce<00:19:05.400><c> this</c><00:19:06.400><c> now</c><00:19:06.520><c> the</c><00:19:06.679><c> batch</c><00:19:06.960><c> size</c><00:19:07.200><c> here</c>

00:19:07.350 --> 00:19:07.360 align:start position:0%
reproduce this now the batch size here
 

00:19:07.360 --> 00:19:09.310 align:start position:0%
reproduce this now the batch size here
is<00:19:07.520><c> how</c><00:19:07.600><c> many</c><00:19:07.799><c> independent</c><00:19:08.200><c> sequences</c><00:19:09.000><c> we</c><00:19:09.120><c> are</c>

00:19:09.310 --> 00:19:09.320 align:start position:0%
is how many independent sequences we are
 

00:19:09.320 --> 00:19:11.510 align:start position:0%
is how many independent sequences we are
processing<00:19:10.120><c> every</c><00:19:10.400><c> forward</c><00:19:10.840><c> backward</c><00:19:11.280><c> pass</c>

00:19:11.510 --> 00:19:11.520 align:start position:0%
processing every forward backward pass
 

00:19:11.520 --> 00:19:12.710 align:start position:0%
processing every forward backward pass
of<00:19:11.640><c> the</c>

00:19:12.710 --> 00:19:12.720 align:start position:0%
of the
 

00:19:12.720 --> 00:19:14.470 align:start position:0%
of the
Transformer<00:19:13.720><c> the</c><00:19:13.840><c> block</c><00:19:14.080><c> size</c><00:19:14.280><c> as</c><00:19:14.400><c> I</c>

00:19:14.470 --> 00:19:14.480 align:start position:0%
Transformer the block size as I
 

00:19:14.480 --> 00:19:16.630 align:start position:0%
Transformer the block size as I
explained<00:19:14.919><c> is</c><00:19:15.039><c> the</c><00:19:15.200><c> maximum</c><00:19:15.600><c> context</c><00:19:16.000><c> length</c>

00:19:16.630 --> 00:19:16.640 align:start position:0%
explained is the maximum context length
 

00:19:16.640 --> 00:19:19.190 align:start position:0%
explained is the maximum context length
to<00:19:16.840><c> make</c><00:19:17.039><c> those</c><00:19:17.400><c> predictions</c><00:19:18.400><c> so</c><00:19:18.559><c> let's</c><00:19:18.720><c> say</c><00:19:18.960><c> B</c>

00:19:19.190 --> 00:19:19.200 align:start position:0%
to make those predictions so let's say B
 

00:19:19.200 --> 00:19:21.190 align:start position:0%
to make those predictions so let's say B
size<00:19:19.400><c> four</c><00:19:19.720><c> block</c><00:19:20.000><c> size</c><00:19:20.240><c> eight</c><00:19:20.919><c> and</c><00:19:21.039><c> then</c>

00:19:21.190 --> 00:19:21.200 align:start position:0%
size four block size eight and then
 

00:19:21.200 --> 00:19:23.350 align:start position:0%
size four block size eight and then
here's<00:19:21.440><c> how</c><00:19:21.559><c> we</c><00:19:21.720><c> get</c><00:19:21.960><c> batch</c><00:19:22.919><c> for</c><00:19:23.159><c> any</c>

00:19:23.350 --> 00:19:23.360 align:start position:0%
here's how we get batch for any
 

00:19:23.360 --> 00:19:25.470 align:start position:0%
here's how we get batch for any
arbitrary<00:19:23.799><c> split</c><00:19:24.720><c> if</c><00:19:24.840><c> the</c><00:19:24.960><c> split</c><00:19:25.240><c> is</c><00:19:25.360><c> a</c>

00:19:25.470 --> 00:19:25.480 align:start position:0%
arbitrary split if the split is a
 

00:19:25.480 --> 00:19:26.830 align:start position:0%
arbitrary split if the split is a
training<00:19:25.799><c> split</c><00:19:26.280><c> then</c><00:19:26.400><c> we're</c><00:19:26.520><c> going</c><00:19:26.640><c> to</c><00:19:26.720><c> look</c>

00:19:26.830 --> 00:19:26.840 align:start position:0%
training split then we're going to look
 

00:19:26.840 --> 00:19:29.990 align:start position:0%
training split then we're going to look
at<00:19:26.960><c> train</c><00:19:27.200><c> data</c><00:19:27.679><c> otherwise</c><00:19:28.039><c> at</c><00:19:28.200><c> valid</c><00:19:28.480><c> data</c>

00:19:29.990 --> 00:19:30.000 align:start position:0%
at train data otherwise at valid data
 

00:19:30.000 --> 00:19:33.510 align:start position:0%
at train data otherwise at valid data
that<00:19:30.159><c> gives</c><00:19:30.400><c> us</c><00:19:30.760><c> the</c><00:19:31.280><c> data</c><00:19:31.880><c> array</c><00:19:32.880><c> and</c><00:19:33.039><c> then</c>

00:19:33.510 --> 00:19:33.520 align:start position:0%
that gives us the data array and then
 

00:19:33.520 --> 00:19:35.750 align:start position:0%
that gives us the data array and then
when<00:19:33.640><c> I</c><00:19:33.840><c> Generate</c><00:19:34.559><c> random</c><00:19:34.880><c> positions</c><00:19:35.360><c> to</c><00:19:35.559><c> grab</c>

00:19:35.750 --> 00:19:35.760 align:start position:0%
when I Generate random positions to grab
 

00:19:35.760 --> 00:19:38.630 align:start position:0%
when I Generate random positions to grab
a<00:19:35.880><c> chunk</c><00:19:36.200><c> out</c><00:19:36.400><c> of</c><00:19:37.360><c> I</c><00:19:37.480><c> actually</c><00:19:37.880><c> grab</c><00:19:38.520><c> I</c>

00:19:38.630 --> 00:19:38.640 align:start position:0%
a chunk out of I actually grab I
 

00:19:38.640 --> 00:19:41.630 align:start position:0%
a chunk out of I actually grab I
actually<00:19:38.919><c> generate</c><00:19:39.640><c> batch</c><00:19:39.960><c> size</c><00:19:40.240><c> number</c><00:19:40.640><c> of</c>

00:19:41.630 --> 00:19:41.640 align:start position:0%
actually generate batch size number of
 

00:19:41.640 --> 00:19:44.789 align:start position:0%
actually generate batch size number of
Random<00:19:42.240><c> offsets</c><00:19:43.240><c> so</c><00:19:43.480><c> because</c><00:19:43.799><c> this</c><00:19:43.880><c> is</c><00:19:44.039><c> four</c>

00:19:44.789 --> 00:19:44.799 align:start position:0%
Random offsets so because this is four
 

00:19:44.799 --> 00:19:47.230 align:start position:0%
Random offsets so because this is four
we<00:19:44.880><c> are</c><00:19:45.440><c> ex</c><00:19:45.720><c> is</c><00:19:45.840><c> going</c><00:19:46.000><c> to</c><00:19:46.159><c> be</c><00:19:46.440><c> a</c><00:19:46.880><c> uh</c><00:19:46.960><c> four</c>

00:19:47.230 --> 00:19:47.240 align:start position:0%
we are ex is going to be a uh four
 

00:19:47.240 --> 00:19:49.190 align:start position:0%
we are ex is going to be a uh four
numbers<00:19:47.799><c> that</c><00:19:47.919><c> are</c><00:19:48.039><c> randomly</c><00:19:48.440><c> generated</c>

00:19:49.190 --> 00:19:49.200 align:start position:0%
numbers that are randomly generated
 

00:19:49.200 --> 00:19:51.510 align:start position:0%
numbers that are randomly generated
between<00:19:49.520><c> zero</c><00:19:50.039><c> and</c><00:19:50.240><c> Len</c><00:19:50.559><c> of</c><00:19:50.760><c> data</c><00:19:50.960><c> minus</c><00:19:51.280><c> block</c>

00:19:51.510 --> 00:19:51.520 align:start position:0%
between zero and Len of data minus block
 

00:19:51.520 --> 00:19:53.750 align:start position:0%
between zero and Len of data minus block
size<00:19:52.240><c> so</c><00:19:52.400><c> it's</c><00:19:52.559><c> just</c><00:19:52.880><c> random</c><00:19:53.200><c> offsets</c><00:19:53.600><c> into</c>

00:19:53.750 --> 00:19:53.760 align:start position:0%
size so it's just random offsets into
 

00:19:53.760 --> 00:19:54.870 align:start position:0%
size so it's just random offsets into
the<00:19:53.919><c> training</c>

00:19:54.870 --> 00:19:54.880 align:start position:0%
the training
 

00:19:54.880 --> 00:19:58.390 align:start position:0%
the training
set<00:19:55.880><c> and</c><00:19:56.039><c> then</c><00:19:56.360><c> X's</c><00:19:56.880><c> as</c><00:19:56.960><c> I</c><00:19:57.120><c> explained</c><00:19:57.720><c> are</c><00:19:58.280><c> the</c>

00:19:58.390 --> 00:19:58.400 align:start position:0%
set and then X's as I explained are the
 

00:19:58.400 --> 00:20:00.430 align:start position:0%
set and then X's as I explained are the
first<00:19:58.720><c> first</c><00:19:58.880><c> block</c><00:19:59.200><c> size</c><00:19:59.679><c> characters</c>

00:20:00.430 --> 00:20:00.440 align:start position:0%
first first block size characters
 

00:20:00.440 --> 00:20:04.990 align:start position:0%
first first block size characters
starting<00:20:01.080><c> at</c><00:20:01.760><c> I</c><00:20:02.760><c> the</c><00:20:02.960><c> Y's</c><00:20:03.640><c> are</c><00:20:03.919><c> the</c><00:20:04.360><c> offset</c><00:20:04.799><c> by</c>

00:20:04.990 --> 00:20:05.000 align:start position:0%
starting at I the Y's are the offset by
 

00:20:05.000 --> 00:20:08.510 align:start position:0%
starting at I the Y's are the offset by
one<00:20:05.440><c> of</c><00:20:05.679><c> that</c><00:20:06.080><c> so</c><00:20:06.320><c> just</c><00:20:06.480><c> add</c><00:20:06.760><c> plus</c><00:20:07.320><c> one</c><00:20:08.320><c> and</c>

00:20:08.510 --> 00:20:08.520 align:start position:0%
one of that so just add plus one and
 

00:20:08.520 --> 00:20:10.470 align:start position:0%
one of that so just add plus one and
then<00:20:08.799><c> we're</c><00:20:08.960><c> going</c><00:20:09.120><c> to</c><00:20:09.280><c> get</c><00:20:09.480><c> those</c><00:20:09.720><c> chunks</c><00:20:10.240><c> for</c>

00:20:10.470 --> 00:20:10.480 align:start position:0%
then we're going to get those chunks for
 

00:20:10.480 --> 00:20:14.029 align:start position:0%
then we're going to get those chunks for
every<00:20:10.720><c> one</c><00:20:10.919><c> of</c><00:20:11.280><c> integers</c><00:20:11.840><c> I</c><00:20:12.559><c> INX</c><00:20:13.559><c> and</c><00:20:13.679><c> use</c><00:20:13.880><c> a</c>

00:20:14.029 --> 00:20:14.039 align:start position:0%
every one of integers I INX and use a
 

00:20:14.039 --> 00:20:17.669 align:start position:0%
every one of integers I INX and use a
torch.<00:20:14.679><c> stack</c><00:20:15.559><c> to</c><00:20:15.799><c> take</c><00:20:16.000><c> all</c><00:20:16.240><c> those</c><00:20:16.760><c> uh</c><00:20:17.559><c> uh</c>

00:20:17.669 --> 00:20:17.679 align:start position:0%
torch. stack to take all those uh uh
 

00:20:17.679 --> 00:20:20.430 align:start position:0%
torch. stack to take all those uh uh
one-dimensional<00:20:18.320><c> tensors</c><00:20:18.840><c> as</c><00:20:18.960><c> we</c><00:20:19.080><c> saw</c><00:20:19.440><c> here</c>

00:20:20.430 --> 00:20:20.440 align:start position:0%
one-dimensional tensors as we saw here
 

00:20:20.440 --> 00:20:24.070 align:start position:0%
one-dimensional tensors as we saw here
and<00:20:20.559><c> we're</c><00:20:20.760><c> going</c><00:20:20.919><c> to</c><00:20:21.480><c> um</c><00:20:21.880><c> stack</c><00:20:22.240><c> them</c><00:20:22.400><c> up</c><00:20:23.280><c> at</c>

00:20:24.070 --> 00:20:24.080 align:start position:0%
and we're going to um stack them up at
 

00:20:24.080 --> 00:20:27.230 align:start position:0%
and we're going to um stack them up at
rows<00:20:25.080><c> and</c><00:20:25.159><c> so</c><00:20:25.360><c> they</c><00:20:25.480><c> all</c><00:20:25.640><c> become</c><00:20:25.880><c> a</c><00:20:26.080><c> row</c><00:20:26.760><c> in</c><00:20:26.919><c> a</c>

00:20:27.230 --> 00:20:27.240 align:start position:0%
rows and so they all become a row in a
 

00:20:27.240 --> 00:20:29.549 align:start position:0%
rows and so they all become a row in a
4x8<00:20:28.240><c> tensor</c>

00:20:29.549 --> 00:20:29.559 align:start position:0%
4x8 tensor
 

00:20:29.559 --> 00:20:32.029 align:start position:0%
4x8 tensor
so<00:20:29.760><c> here's</c><00:20:29.919><c> where</c><00:20:30.039><c> I'm</c><00:20:30.159><c> printing</c><00:20:30.799><c> then</c><00:20:31.799><c> when</c><00:20:31.919><c> I</c>

00:20:32.029 --> 00:20:32.039 align:start position:0%
so here's where I'm printing then when I
 

00:20:32.039 --> 00:20:35.270 align:start position:0%
so here's where I'm printing then when I
sample<00:20:32.360><c> a</c><00:20:32.480><c> batch</c><00:20:32.720><c> XB</c><00:20:33.120><c> and</c><00:20:33.679><c> YB</c><00:20:34.679><c> the</c><00:20:34.799><c> inputs</c><00:20:35.159><c> to</c>

00:20:35.270 --> 00:20:35.280 align:start position:0%
sample a batch XB and YB the inputs to
 

00:20:35.280 --> 00:20:38.990 align:start position:0%
sample a batch XB and YB the inputs to
the<00:20:35.360><c> Transformer</c><00:20:35.919><c> now</c><00:20:36.679><c> are</c><00:20:37.679><c> the</c><00:20:37.840><c> input</c><00:20:38.240><c> X</c><00:20:38.799><c> is</c>

00:20:38.990 --> 00:20:39.000 align:start position:0%
the Transformer now are the input X is
 

00:20:39.000 --> 00:20:44.110 align:start position:0%
the Transformer now are the input X is
the<00:20:39.120><c> 4x8</c><00:20:40.080><c> tensor</c><00:20:41.159><c> four</c><00:20:42.159><c> uh</c><00:20:42.400><c> rows</c><00:20:42.960><c> of</c><00:20:43.200><c> eight</c>

00:20:44.110 --> 00:20:44.120 align:start position:0%
the 4x8 tensor four uh rows of eight
 

00:20:44.120 --> 00:20:47.110 align:start position:0%
the 4x8 tensor four uh rows of eight
columns<00:20:45.120><c> and</c><00:20:45.400><c> each</c><00:20:45.600><c> one</c><00:20:45.720><c> of</c><00:20:45.960><c> these</c><00:20:46.400><c> is</c><00:20:46.520><c> a</c><00:20:46.840><c> chunk</c>

00:20:47.110 --> 00:20:47.120 align:start position:0%
columns and each one of these is a chunk
 

00:20:47.120 --> 00:20:48.669 align:start position:0%
columns and each one of these is a chunk
of<00:20:47.240><c> the</c><00:20:47.360><c> training</c>

00:20:48.669 --> 00:20:48.679 align:start position:0%
of the training
 

00:20:48.679 --> 00:20:52.190 align:start position:0%
of the training
set<00:20:49.679><c> and</c><00:20:49.840><c> then</c><00:20:50.280><c> the</c><00:20:50.440><c> targets</c><00:20:50.919><c> here</c><00:20:51.360><c> are</c><00:20:51.880><c> in</c><00:20:52.080><c> the</c>

00:20:52.190 --> 00:20:52.200 align:start position:0%
set and then the targets here are in the
 

00:20:52.200 --> 00:20:54.390 align:start position:0%
set and then the targets here are in the
associated<00:20:52.720><c> array</c><00:20:53.039><c> Y</c><00:20:53.520><c> and</c><00:20:53.679><c> they</c><00:20:53.760><c> will</c><00:20:53.960><c> come</c><00:20:54.120><c> in</c>

00:20:54.390 --> 00:20:54.400 align:start position:0%
associated array Y and they will come in
 

00:20:54.400 --> 00:20:55.750 align:start position:0%
associated array Y and they will come in
to<00:20:54.559><c> the</c><00:20:54.679><c> Transformer</c><00:20:55.200><c> all</c><00:20:55.320><c> the</c><00:20:55.440><c> way</c><00:20:55.559><c> at</c><00:20:55.640><c> the</c>

00:20:55.750 --> 00:20:55.760 align:start position:0%
to the Transformer all the way at the
 

00:20:55.760 --> 00:20:59.390 align:start position:0%
to the Transformer all the way at the
end<00:20:56.559><c> uh</c><00:20:56.720><c> to</c><00:20:57.280><c> um</c><00:20:57.720><c> create</c><00:20:57.960><c> the</c><00:20:58.080><c> loss</c><00:20:58.320><c> function</c>

00:20:59.390 --> 00:20:59.400 align:start position:0%
end uh to um create the loss function
 

00:20:59.400 --> 00:21:00.990 align:start position:0%
end uh to um create the loss function
uh<00:20:59.520><c> so</c><00:20:59.760><c> they</c><00:20:59.880><c> will</c><00:21:00.240><c> give</c><00:21:00.400><c> us</c><00:21:00.559><c> the</c><00:21:00.640><c> correct</c>

00:21:00.990 --> 00:21:01.000 align:start position:0%
uh so they will give us the correct
 

00:21:01.000 --> 00:21:03.830 align:start position:0%
uh so they will give us the correct
answer<00:21:01.400><c> for</c><00:21:01.640><c> every</c><00:21:01.840><c> single</c><00:21:02.200><c> position</c><00:21:03.039><c> inside</c>

00:21:03.830 --> 00:21:03.840 align:start position:0%
answer for every single position inside
 

00:21:03.840 --> 00:21:06.390 align:start position:0%
answer for every single position inside
X<00:21:04.840><c> and</c><00:21:05.000><c> then</c><00:21:05.360><c> these</c><00:21:05.480><c> are</c><00:21:05.720><c> the</c><00:21:05.880><c> four</c>

00:21:06.390 --> 00:21:06.400 align:start position:0%
X and then these are the four
 

00:21:06.400 --> 00:21:07.950 align:start position:0%
X and then these are the four
independent

00:21:07.950 --> 00:21:07.960 align:start position:0%
independent
 

00:21:07.960 --> 00:21:11.269 align:start position:0%
independent
rows<00:21:08.960><c> so</c><00:21:09.520><c> spelled</c><00:21:09.919><c> out</c><00:21:10.200><c> as</c><00:21:10.279><c> we</c><00:21:10.440><c> did</c>

00:21:11.269 --> 00:21:11.279 align:start position:0%
rows so spelled out as we did
 

00:21:11.279 --> 00:21:14.830 align:start position:0%
rows so spelled out as we did
before<00:21:12.279><c> uh</c><00:21:12.440><c> this</c><00:21:12.559><c> 4x8</c><00:21:13.320><c> array</c><00:21:14.039><c> contains</c><00:21:14.679><c> a</c>

00:21:14.830 --> 00:21:14.840 align:start position:0%
before uh this 4x8 array contains a
 

00:21:14.840 --> 00:21:17.430 align:start position:0%
before uh this 4x8 array contains a
total<00:21:15.120><c> of</c><00:21:15.320><c> 32</c><00:21:16.080><c> examples</c><00:21:17.080><c> and</c><00:21:17.200><c> they're</c>

00:21:17.430 --> 00:21:17.440 align:start position:0%
total of 32 examples and they're
 

00:21:17.440 --> 00:21:19.149 align:start position:0%
total of 32 examples and they're
completely<00:21:17.799><c> independent</c><00:21:18.720><c> as</c><00:21:18.840><c> far</c><00:21:18.960><c> as</c><00:21:19.080><c> the</c>

00:21:19.149 --> 00:21:19.159 align:start position:0%
completely independent as far as the
 

00:21:19.159 --> 00:21:20.510 align:start position:0%
completely independent as far as the
Transformer<00:21:19.600><c> is</c>

00:21:20.510 --> 00:21:20.520 align:start position:0%
Transformer is
 

00:21:20.520 --> 00:21:25.230 align:start position:0%
Transformer is
concerned<00:21:21.520><c> uh</c><00:21:22.120><c> so</c><00:21:22.559><c> when</c><00:21:23.279><c> the</c><00:21:24.279><c> input</c><00:21:24.559><c> is</c><00:21:24.679><c> 24</c><00:21:25.120><c> the</c>

00:21:25.230 --> 00:21:25.240 align:start position:0%
concerned uh so when the input is 24 the
 

00:21:25.240 --> 00:21:28.230 align:start position:0%
concerned uh so when the input is 24 the
target<00:21:25.480><c> is</c><00:21:25.640><c> 43</c><00:21:26.640><c> or</c><00:21:27.000><c> rather</c><00:21:27.200><c> 43</c><00:21:27.679><c> here</c><00:21:27.799><c> in</c><00:21:27.919><c> the</c><00:21:28.080><c> Y</c>

00:21:28.230 --> 00:21:28.240 align:start position:0%
target is 43 or rather 43 here in the Y
 

00:21:28.240 --> 00:21:29.190 align:start position:0%
target is 43 or rather 43 here in the Y
array

00:21:29.190 --> 00:21:29.200 align:start position:0%
array
 

00:21:29.200 --> 00:21:31.909 align:start position:0%
array
when<00:21:29.360><c> the</c><00:21:29.440><c> input</c><00:21:29.720><c> is</c><00:21:29.840><c> 2443</c><00:21:30.840><c> the</c><00:21:30.960><c> target</c><00:21:31.240><c> is</c>

00:21:31.909 --> 00:21:31.919 align:start position:0%
when the input is 2443 the target is
 

00:21:31.919 --> 00:21:34.909 align:start position:0%
when the input is 2443 the target is
58<00:21:32.919><c> uh</c><00:21:33.000><c> when</c><00:21:33.120><c> the</c><00:21:33.240><c> input</c><00:21:33.480><c> is</c><00:21:33.600><c> 24</c><00:21:33.919><c> 43</c><00:21:34.360><c> 58</c><00:21:34.799><c> the</c>

00:21:34.909 --> 00:21:34.919 align:start position:0%
58 uh when the input is 24 43 58 the
 

00:21:34.919 --> 00:21:38.269 align:start position:0%
58 uh when the input is 24 43 58 the
target<00:21:35.200><c> is</c><00:21:35.360><c> 5</c><00:21:35.679><c> Etc</c><00:21:36.679><c> or</c><00:21:36.880><c> like</c><00:21:37.000><c> when</c><00:21:37.120><c> it</c><00:21:37.240><c> is</c><00:21:37.400><c> a</c><00:21:37.840><c> 52</c>

00:21:38.269 --> 00:21:38.279 align:start position:0%
target is 5 Etc or like when it is a 52
 

00:21:38.279 --> 00:21:40.909 align:start position:0%
target is 5 Etc or like when it is a 52
581<00:21:39.200><c> the</c><00:21:39.360><c> target</c><00:21:39.799><c> is</c>

00:21:40.909 --> 00:21:40.919 align:start position:0%
581 the target is
 

00:21:40.919 --> 00:21:43.510 align:start position:0%
581 the target is
58<00:21:41.919><c> right</c><00:21:42.080><c> so</c><00:21:42.360><c> you</c><00:21:42.480><c> can</c><00:21:42.640><c> sort</c><00:21:42.799><c> of</c><00:21:42.960><c> see</c><00:21:43.320><c> this</c>

00:21:43.510 --> 00:21:43.520 align:start position:0%
58 right so you can sort of see this
 

00:21:43.520 --> 00:21:45.830 align:start position:0%
58 right so you can sort of see this
spelled<00:21:43.840><c> out</c><00:21:44.320><c> these</c><00:21:44.480><c> are</c><00:21:44.640><c> the</c><00:21:44.840><c> 32</c><00:21:45.360><c> independent</c>

00:21:45.830 --> 00:21:45.840 align:start position:0%
spelled out these are the 32 independent
 

00:21:45.840 --> 00:21:48.710 align:start position:0%
spelled out these are the 32 independent
examples<00:21:46.679><c> packed</c><00:21:47.000><c> in</c><00:21:47.400><c> to</c><00:21:47.600><c> a</c><00:21:47.720><c> single</c><00:21:48.039><c> batch</c><00:21:48.559><c> of</c>

00:21:48.710 --> 00:21:48.720 align:start position:0%
examples packed in to a single batch of
 

00:21:48.720 --> 00:21:51.789 align:start position:0%
examples packed in to a single batch of
the<00:21:48.840><c> input</c><00:21:49.240><c> X</c><00:21:50.159><c> and</c><00:21:50.320><c> then</c><00:21:50.520><c> the</c><00:21:50.640><c> desired</c><00:21:51.000><c> targets</c>

00:21:51.789 --> 00:21:51.799 align:start position:0%
the input X and then the desired targets
 

00:21:51.799 --> 00:21:57.390 align:start position:0%
the input X and then the desired targets
are<00:21:52.400><c> in</c><00:21:52.919><c> y</c><00:21:53.919><c> and</c><00:21:54.039><c> so</c><00:21:54.320><c> now</c><00:21:54.640><c> this</c><00:21:55.559><c> integer</c><00:21:56.400><c> tensor</c>

00:21:57.390 --> 00:21:57.400 align:start position:0%
are in y and so now this integer tensor
 

00:21:57.400 --> 00:22:00.510 align:start position:0%
are in y and so now this integer tensor
of<00:21:58.320><c> um</c><00:21:58.720><c> X</c><00:21:59.200><c> is</c><00:21:59.360><c> going</c><00:21:59.480><c> to</c><00:21:59.600><c> feed</c><00:21:59.799><c> into</c><00:22:00.000><c> the</c>

00:22:00.510 --> 00:22:00.520 align:start position:0%
of um X is going to feed into the
 

00:22:00.520 --> 00:22:02.750 align:start position:0%
of um X is going to feed into the
Transformer<00:22:01.520><c> and</c><00:22:02.080><c> that</c><00:22:02.200><c> Transformer</c><00:22:02.640><c> is</c>

00:22:02.750 --> 00:22:02.760 align:start position:0%
Transformer and that Transformer is
 

00:22:02.760 --> 00:22:04.269 align:start position:0%
Transformer and that Transformer is
going<00:22:02.919><c> to</c><00:22:03.159><c> simultaneously</c><00:22:03.799><c> process</c><00:22:04.120><c> all</c>

00:22:04.269 --> 00:22:04.279 align:start position:0%
going to simultaneously process all
 

00:22:04.279 --> 00:22:05.990 align:start position:0%
going to simultaneously process all
these<00:22:04.480><c> examples</c><00:22:05.159><c> and</c><00:22:05.240><c> then</c><00:22:05.400><c> look</c><00:22:05.559><c> up</c><00:22:05.840><c> the</c>

00:22:05.990 --> 00:22:06.000 align:start position:0%
these examples and then look up the
 

00:22:06.000 --> 00:22:08.909 align:start position:0%
these examples and then look up the
correct<00:22:06.880><c> um</c><00:22:07.600><c> integers</c><00:22:08.000><c> to</c><00:22:08.200><c> predict</c><00:22:08.559><c> in</c><00:22:08.720><c> every</c>

00:22:08.909 --> 00:22:08.919 align:start position:0%
correct um integers to predict in every
 

00:22:08.919 --> 00:22:11.950 align:start position:0%
correct um integers to predict in every
one<00:22:09.039><c> of</c><00:22:09.159><c> these</c><00:22:09.360><c> positions</c><00:22:10.279><c> in</c><00:22:10.520><c> the</c><00:22:10.640><c> tensor</c><00:22:11.120><c> y</c>

00:22:11.950 --> 00:22:11.960 align:start position:0%
one of these positions in the tensor y
 

00:22:11.960 --> 00:22:13.789 align:start position:0%
one of these positions in the tensor y
okay<00:22:12.080><c> so</c><00:22:12.279><c> now</c><00:22:12.440><c> that</c><00:22:12.559><c> we</c><00:22:12.679><c> have</c><00:22:12.880><c> our</c><00:22:13.400><c> batch</c><00:22:13.600><c> of</c>

00:22:13.789 --> 00:22:13.799 align:start position:0%
okay so now that we have our batch of
 

00:22:13.799 --> 00:22:15.029 align:start position:0%
okay so now that we have our batch of
input<00:22:14.120><c> that</c><00:22:14.240><c> we'd</c><00:22:14.360><c> like</c><00:22:14.480><c> to</c><00:22:14.600><c> feed</c><00:22:14.799><c> into</c><00:22:14.960><c> a</c>

00:22:15.029 --> 00:22:15.039 align:start position:0%
input that we'd like to feed into a
 

00:22:15.039 --> 00:22:16.710 align:start position:0%
input that we'd like to feed into a
Transformer<00:22:15.919><c> let's</c><00:22:16.120><c> start</c><00:22:16.400><c> basically</c>

00:22:16.710 --> 00:22:16.720 align:start position:0%
Transformer let's start basically
 

00:22:16.720 --> 00:22:19.190 align:start position:0%
Transformer let's start basically
feeding<00:22:17.120><c> this</c><00:22:17.279><c> into</c><00:22:17.600><c> neural</c><00:22:18.039><c> networks</c><00:22:19.039><c> now</c>

00:22:19.190 --> 00:22:19.200 align:start position:0%
feeding this into neural networks now
 

00:22:19.200 --> 00:22:20.269 align:start position:0%
feeding this into neural networks now
we're<00:22:19.320><c> going</c><00:22:19.480><c> to</c><00:22:19.600><c> start</c><00:22:19.840><c> off</c><00:22:19.960><c> with</c><00:22:20.120><c> the</c>

00:22:20.269 --> 00:22:20.279 align:start position:0%
we're going to start off with the
 

00:22:20.279 --> 00:22:22.070 align:start position:0%
we're going to start off with the
simplest<00:22:20.799><c> possible</c><00:22:21.120><c> neural</c><00:22:21.440><c> network</c><00:22:21.960><c> which</c>

00:22:22.070 --> 00:22:22.080 align:start position:0%
simplest possible neural network which
 

00:22:22.080 --> 00:22:23.470 align:start position:0%
simplest possible neural network which
in<00:22:22.200><c> the</c><00:22:22.279><c> case</c><00:22:22.440><c> of</c><00:22:22.600><c> language</c><00:22:22.880><c> modeling</c><00:22:23.240><c> in</c><00:22:23.360><c> my</c>

00:22:23.470 --> 00:22:23.480 align:start position:0%
in the case of language modeling in my
 

00:22:23.480 --> 00:22:25.510 align:start position:0%
in the case of language modeling in my
opinion<00:22:23.799><c> is</c><00:22:23.919><c> the</c><00:22:24.080><c> Byram</c><00:22:24.480><c> language</c><00:22:24.760><c> model</c><00:22:25.440><c> and</c>

00:22:25.510 --> 00:22:25.520 align:start position:0%
opinion is the Byram language model and
 

00:22:25.520 --> 00:22:26.950 align:start position:0%
opinion is the Byram language model and
we've<00:22:25.720><c> covered</c><00:22:25.960><c> the</c><00:22:26.039><c> Byram</c><00:22:26.400><c> language</c><00:22:26.679><c> model</c>

00:22:26.950 --> 00:22:26.960 align:start position:0%
we've covered the Byram language model
 

00:22:26.960 --> 00:22:29.909 align:start position:0%
we've covered the Byram language model
in<00:22:27.080><c> my</c><00:22:27.240><c> make</c><00:22:27.520><c> more</c><00:22:27.760><c> series</c><00:22:28.240><c> in</c><00:22:28.559><c> a</c><00:22:28.679><c> lot</c><00:22:28.799><c> of</c><00:22:28.960><c> depth</c>

00:22:29.909 --> 00:22:29.919 align:start position:0%
in my make more series in a lot of depth
 

00:22:29.919 --> 00:22:31.510 align:start position:0%
in my make more series in a lot of depth
and<00:22:30.039><c> so</c><00:22:30.279><c> here</c><00:22:30.440><c> I'm</c><00:22:30.559><c> going</c><00:22:30.720><c> to</c><00:22:31.000><c> sort</c><00:22:31.159><c> of</c><00:22:31.320><c> go</c>

00:22:31.510 --> 00:22:31.520 align:start position:0%
and so here I'm going to sort of go
 

00:22:31.520 --> 00:22:33.470 align:start position:0%
and so here I'm going to sort of go
faster<00:22:32.080><c> and</c><00:22:32.240><c> let's</c><00:22:32.480><c> just</c><00:22:32.600><c> Implement</c><00:22:33.080><c> pytorch</c>

00:22:33.470 --> 00:22:33.480 align:start position:0%
faster and let's just Implement pytorch
 

00:22:33.480 --> 00:22:36.070 align:start position:0%
faster and let's just Implement pytorch
module<00:22:34.120><c> directly</c><00:22:34.919><c> that</c><00:22:35.080><c> implements</c><00:22:35.480><c> the</c><00:22:35.600><c> byr</c>

00:22:36.070 --> 00:22:36.080 align:start position:0%
module directly that implements the byr
 

00:22:36.080 --> 00:22:36.870 align:start position:0%
module directly that implements the byr
language

00:22:36.870 --> 00:22:36.880 align:start position:0%
language
 

00:22:36.880 --> 00:22:41.110 align:start position:0%
language
model<00:22:37.880><c> so</c><00:22:38.080><c> I'm</c><00:22:38.240><c> importing</c><00:22:38.600><c> the</c><00:22:38.760><c> pytorch</c><00:22:39.760><c> um</c><00:22:40.080><c> NN</c>

00:22:41.110 --> 00:22:41.120 align:start position:0%
model so I'm importing the pytorch um NN
 

00:22:41.120 --> 00:22:43.190 align:start position:0%
model so I'm importing the pytorch um NN
module<00:22:42.120><c> uh</c><00:22:42.240><c> for</c>

00:22:43.190 --> 00:22:43.200 align:start position:0%
module uh for
 

00:22:43.200 --> 00:22:44.789 align:start position:0%
module uh for
reproducibility<00:22:44.200><c> and</c><00:22:44.320><c> then</c><00:22:44.520><c> here</c><00:22:44.679><c> I'm</c>

00:22:44.789 --> 00:22:44.799 align:start position:0%
reproducibility and then here I'm
 

00:22:44.799 --> 00:22:46.310 align:start position:0%
reproducibility and then here I'm
constructing<00:22:45.240><c> a</c><00:22:45.320><c> Byram</c><00:22:45.720><c> language</c><00:22:46.000><c> model</c>

00:22:46.310 --> 00:22:46.320 align:start position:0%
constructing a Byram language model
 

00:22:46.320 --> 00:22:48.230 align:start position:0%
constructing a Byram language model
which<00:22:46.440><c> is</c><00:22:46.520><c> a</c><00:22:46.640><c> subass</c><00:22:47.039><c> of</c><00:22:47.120><c> NN</c>

00:22:48.230 --> 00:22:48.240 align:start position:0%
which is a subass of NN
 

00:22:48.240 --> 00:22:51.070 align:start position:0%
which is a subass of NN
module<00:22:49.240><c> and</c><00:22:49.640><c> then</c><00:22:49.799><c> I'm</c><00:22:50.039><c> calling</c><00:22:50.400><c> it</c><00:22:50.799><c> and</c><00:22:50.919><c> I'm</c>

00:22:51.070 --> 00:22:51.080 align:start position:0%
module and then I'm calling it and I'm
 

00:22:51.080 --> 00:22:53.789 align:start position:0%
module and then I'm calling it and I'm
passing<00:22:51.320><c> it</c><00:22:51.480><c> the</c><00:22:51.600><c> inputs</c><00:22:52.080><c> and</c><00:22:52.200><c> the</c><00:22:52.799><c> targets</c>

00:22:53.789 --> 00:22:53.799 align:start position:0%
passing it the inputs and the targets
 

00:22:53.799 --> 00:22:55.590 align:start position:0%
passing it the inputs and the targets
and<00:22:53.919><c> I'm</c><00:22:54.039><c> just</c><00:22:54.279><c> printing</c><00:22:55.279><c> now</c><00:22:55.400><c> when</c><00:22:55.520><c> the</c>

00:22:55.590 --> 00:22:55.600 align:start position:0%
and I'm just printing now when the
 

00:22:55.600 --> 00:22:57.789 align:start position:0%
and I'm just printing now when the
inputs<00:22:55.880><c> on</c><00:22:56.039><c> targets</c><00:22:56.360><c> come</c><00:22:56.559><c> here</c><00:22:57.360><c> you</c><00:22:57.480><c> see</c><00:22:57.679><c> that</c>

00:22:57.789 --> 00:22:57.799 align:start position:0%
inputs on targets come here you see that
 

00:22:57.799 --> 00:23:00.710 align:start position:0%
inputs on targets come here you see that
I'm<00:22:57.919><c> just</c><00:22:58.039><c> taking</c><00:22:58.240><c> the</c><00:22:58.520><c> index</c><00:22:59.520><c> uh</c><00:22:59.640><c> the</c><00:22:59.760><c> inputs</c>

00:23:00.710 --> 00:23:00.720 align:start position:0%
I'm just taking the index uh the inputs
 

00:23:00.720 --> 00:23:03.230 align:start position:0%
I'm just taking the index uh the inputs
X<00:23:01.080><c> here</c><00:23:01.360><c> which</c><00:23:01.480><c> I</c><00:23:01.600><c> rename</c><00:23:01.960><c> to</c><00:23:02.080><c> idx</c><00:23:03.000><c> and</c><00:23:03.120><c> I'm</c>

00:23:03.230 --> 00:23:03.240 align:start position:0%
X here which I rename to idx and I'm
 

00:23:03.240 --> 00:23:04.470 align:start position:0%
X here which I rename to idx and I'm
just<00:23:03.400><c> passing</c><00:23:03.679><c> them</c><00:23:03.840><c> into</c><00:23:04.039><c> this</c><00:23:04.200><c> token</c>

00:23:04.470 --> 00:23:04.480 align:start position:0%
just passing them into this token
 

00:23:04.480 --> 00:23:07.269 align:start position:0%
just passing them into this token
embedding<00:23:05.159><c> table</c><00:23:06.159><c> so</c><00:23:06.279><c> it's</c><00:23:06.480><c> going</c><00:23:06.640><c> on</c><00:23:06.880><c> here</c><00:23:07.080><c> is</c>

00:23:07.269 --> 00:23:07.279 align:start position:0%
embedding table so it's going on here is
 

00:23:07.279 --> 00:23:09.789 align:start position:0%
embedding table so it's going on here is
that<00:23:07.880><c> here</c><00:23:08.000><c> in</c><00:23:08.120><c> the</c><00:23:08.520><c> Constructor</c><00:23:09.520><c> we</c><00:23:09.640><c> are</c>

00:23:09.789 --> 00:23:09.799 align:start position:0%
that here in the Constructor we are
 

00:23:09.799 --> 00:23:12.350 align:start position:0%
that here in the Constructor we are
creating<00:23:10.200><c> a</c><00:23:10.400><c> token</c><00:23:10.640><c> embedding</c><00:23:11.080><c> table</c><00:23:12.080><c> and</c><00:23:12.240><c> it</c>

00:23:12.350 --> 00:23:12.360 align:start position:0%
creating a token embedding table and it
 

00:23:12.360 --> 00:23:15.470 align:start position:0%
creating a token embedding table and it
is<00:23:12.520><c> of</c><00:23:12.760><c> size</c><00:23:13.159><c> vocap</c><00:23:13.600><c> size</c><00:23:13.840><c> by</c><00:23:14.000><c> vocap</c>

00:23:15.470 --> 00:23:15.480 align:start position:0%
is of size vocap size by vocap
 

00:23:15.480 --> 00:23:18.230 align:start position:0%
is of size vocap size by vocap
size<00:23:16.480><c> and</c><00:23:16.640><c> we're</c><00:23:16.840><c> using</c><00:23:17.080><c> an.</c><00:23:17.559><c> embedding</c><00:23:18.159><c> which</c>

00:23:18.230 --> 00:23:18.240 align:start position:0%
size and we're using an. embedding which
 

00:23:18.240 --> 00:23:20.510 align:start position:0%
size and we're using an. embedding which
is<00:23:18.400><c> a</c><00:23:18.600><c> very</c><00:23:18.840><c> thin</c><00:23:19.039><c> wrapper</c><00:23:19.640><c> around</c><00:23:19.960><c> basically</c>

00:23:20.510 --> 00:23:20.520 align:start position:0%
is a very thin wrapper around basically
 

00:23:20.520 --> 00:23:23.190 align:start position:0%
is a very thin wrapper around basically
a<00:23:20.720><c> tensor</c><00:23:21.200><c> of</c><00:23:21.520><c> shape</c><00:23:22.039><c> voap</c><00:23:22.480><c> size</c><00:23:22.679><c> by</c><00:23:22.799><c> vocab</c>

00:23:23.190 --> 00:23:23.200 align:start position:0%
a tensor of shape voap size by vocab
 

00:23:23.200 --> 00:23:25.669 align:start position:0%
a tensor of shape voap size by vocab
size<00:23:24.159><c> and</c><00:23:24.279><c> what's</c><00:23:24.440><c> happening</c><00:23:24.760><c> here</c><00:23:24.960><c> is</c><00:23:25.159><c> that</c>

00:23:25.669 --> 00:23:25.679 align:start position:0%
size and what's happening here is that
 

00:23:25.679 --> 00:23:28.070 align:start position:0%
size and what's happening here is that
when<00:23:25.840><c> we</c><00:23:26.080><c> pass</c><00:23:26.320><c> idx</c><00:23:26.840><c> here</c><00:23:27.600><c> every</c><00:23:27.799><c> single</c>

00:23:28.070 --> 00:23:28.080 align:start position:0%
when we pass idx here every single
 

00:23:28.080 --> 00:23:30.390 align:start position:0%
when we pass idx here every single
integer<00:23:28.600><c> in</c><00:23:28.679><c> our</c><00:23:28.880><c> input</c><00:23:29.640><c> is</c><00:23:29.799><c> going</c><00:23:29.960><c> to</c><00:23:30.120><c> refer</c>

00:23:30.390 --> 00:23:30.400 align:start position:0%
integer in our input is going to refer
 

00:23:30.400 --> 00:23:32.350 align:start position:0%
integer in our input is going to refer
to<00:23:30.559><c> this</c><00:23:30.720><c> embedding</c><00:23:31.120><c> table</c><00:23:31.960><c> and</c><00:23:32.080><c> it's</c><00:23:32.240><c> going</c>

00:23:32.350 --> 00:23:32.360 align:start position:0%
to this embedding table and it's going
 

00:23:32.360 --> 00:23:34.470 align:start position:0%
to this embedding table and it's going
to<00:23:32.520><c> pluck</c><00:23:32.799><c> out</c><00:23:33.120><c> a</c><00:23:33.320><c> row</c><00:23:33.760><c> of</c><00:23:33.919><c> that</c><00:23:34.080><c> embedding</c>

00:23:34.470 --> 00:23:34.480 align:start position:0%
to pluck out a row of that embedding
 

00:23:34.480 --> 00:23:37.789 align:start position:0%
to pluck out a row of that embedding
table<00:23:34.960><c> corresponding</c><00:23:35.440><c> to</c><00:23:35.559><c> its</c><00:23:35.760><c> index</c><00:23:36.760><c> so</c><00:23:37.159><c> 24</c>

00:23:37.789 --> 00:23:37.799 align:start position:0%
table corresponding to its index so 24
 

00:23:37.799 --> 00:23:39.590 align:start position:0%
table corresponding to its index so 24
here<00:23:38.159><c> will</c><00:23:38.320><c> go</c><00:23:38.440><c> into</c><00:23:38.600><c> the</c><00:23:38.679><c> embedding</c><00:23:39.080><c> table</c>

00:23:39.590 --> 00:23:39.600 align:start position:0%
here will go into the embedding table
 

00:23:39.600 --> 00:23:42.110 align:start position:0%
here will go into the embedding table
and<00:23:39.679><c> we'll</c><00:23:39.880><c> pluck</c><00:23:40.120><c> out</c><00:23:40.279><c> the</c><00:23:40.400><c> 24th</c><00:23:41.000><c> row</c><00:23:42.000><c> and</c>

00:23:42.110 --> 00:23:42.120 align:start position:0%
and we'll pluck out the 24th row and
 

00:23:42.120 --> 00:23:44.230 align:start position:0%
and we'll pluck out the 24th row and
then<00:23:42.240><c> 43</c><00:23:42.840><c> will</c><00:23:43.039><c> go</c><00:23:43.240><c> here</c><00:23:43.679><c> and</c><00:23:43.799><c> pluck</c><00:23:44.039><c> out</c><00:23:44.159><c> the</c>

00:23:44.230 --> 00:23:44.240 align:start position:0%
then 43 will go here and pluck out the
 

00:23:44.240 --> 00:23:47.269 align:start position:0%
then 43 will go here and pluck out the
43d<00:23:44.799><c> row</c><00:23:45.279><c> Etc</c><00:23:46.279><c> and</c><00:23:46.360><c> then</c><00:23:46.520><c> pytorch</c><00:23:46.919><c> is</c><00:23:47.039><c> going</c><00:23:47.159><c> to</c>

00:23:47.269 --> 00:23:47.279 align:start position:0%
43d row Etc and then pytorch is going to
 

00:23:47.279 --> 00:23:50.350 align:start position:0%
43d row Etc and then pytorch is going to
arrange<00:23:47.679><c> all</c><00:23:47.760><c> of</c><00:23:47.960><c> this</c><00:23:48.159><c> into</c><00:23:48.559><c> a</c><00:23:49.039><c> batch</c><00:23:49.520><c> by</c><00:23:49.799><c> Time</c>

00:23:50.350 --> 00:23:50.360 align:start position:0%
arrange all of this into a batch by Time
 

00:23:50.360 --> 00:23:53.590 align:start position:0%
arrange all of this into a batch by Time
by<00:23:50.640><c> channel</c><00:23:51.640><c> uh</c><00:23:51.760><c> tensor</c><00:23:52.760><c> in</c><00:23:52.919><c> this</c><00:23:53.080><c> case</c><00:23:53.279><c> batch</c>

00:23:53.590 --> 00:23:53.600 align:start position:0%
by channel uh tensor in this case batch
 

00:23:53.600 --> 00:23:57.750 align:start position:0%
by channel uh tensor in this case batch
is<00:23:53.880><c> four</c><00:23:54.760><c> time</c><00:23:55.159><c> is</c><00:23:55.400><c> eight</c><00:23:55.919><c> and</c><00:23:56.120><c> C</c><00:23:56.600><c> which</c><00:23:56.720><c> is</c><00:23:56.960><c> the</c>

00:23:57.750 --> 00:23:57.760 align:start position:0%
is four time is eight and C which is the
 

00:23:57.760 --> 00:24:01.149 align:start position:0%
is four time is eight and C which is the
channels<00:23:58.600><c> is</c><00:23:58.799><c> vocab</c><00:23:59.240><c> size</c><00:23:59.480><c> or</c><00:23:59.919><c> 65</c><00:24:00.919><c> and</c><00:24:01.000><c> so</c>

00:24:01.149 --> 00:24:01.159 align:start position:0%
channels is vocab size or 65 and so
 

00:24:01.159 --> 00:24:02.470 align:start position:0%
channels is vocab size or 65 and so
we're<00:24:01.360><c> just</c><00:24:01.480><c> going</c><00:24:01.640><c> to</c><00:24:01.760><c> pluck</c><00:24:02.000><c> out</c><00:24:02.159><c> all</c><00:24:02.279><c> those</c>

00:24:02.470 --> 00:24:02.480 align:start position:0%
we're just going to pluck out all those
 

00:24:02.480 --> 00:24:05.950 align:start position:0%
we're just going to pluck out all those
rows<00:24:03.159><c> arrange</c><00:24:03.559><c> them</c><00:24:03.760><c> in</c><00:24:03.880><c> a</c><00:24:04.039><c> b</c><00:24:04.279><c> by</c><00:24:04.440><c> T</c><00:24:04.679><c> by</c><00:24:04.840><c> C</c><00:24:05.840><c> and</c>

00:24:05.950 --> 00:24:05.960 align:start position:0%
rows arrange them in a b by T by C and
 

00:24:05.960 --> 00:24:07.350 align:start position:0%
rows arrange them in a b by T by C and
now<00:24:06.039><c> we're</c><00:24:06.159><c> going</c><00:24:06.279><c> to</c><00:24:06.480><c> interpret</c><00:24:06.960><c> this</c><00:24:07.120><c> as</c><00:24:07.240><c> the</c>

00:24:07.350 --> 00:24:07.360 align:start position:0%
now we're going to interpret this as the
 

00:24:07.360 --> 00:24:10.190 align:start position:0%
now we're going to interpret this as the
logits<00:24:08.360><c> which</c><00:24:08.480><c> are</c><00:24:08.679><c> basically</c><00:24:09.039><c> the</c><00:24:09.200><c> scores</c>

00:24:10.190 --> 00:24:10.200 align:start position:0%
logits which are basically the scores
 

00:24:10.200 --> 00:24:12.669 align:start position:0%
logits which are basically the scores
for<00:24:10.559><c> the</c><00:24:10.720><c> next</c><00:24:11.000><c> character</c><00:24:11.320><c> in</c><00:24:11.440><c> the</c><00:24:11.679><c> sequence</c>

00:24:12.669 --> 00:24:12.679 align:start position:0%
for the next character in the sequence
 

00:24:12.679 --> 00:24:14.669 align:start position:0%
for the next character in the sequence
and<00:24:12.799><c> so</c><00:24:12.919><c> what's</c><00:24:13.120><c> happening</c><00:24:13.480><c> here</c><00:24:13.720><c> is</c><00:24:14.440><c> we</c><00:24:14.520><c> are</c>

00:24:14.669 --> 00:24:14.679 align:start position:0%
and so what's happening here is we are
 

00:24:14.679 --> 00:24:17.190 align:start position:0%
and so what's happening here is we are
predicting<00:24:15.120><c> what</c><00:24:15.240><c> comes</c><00:24:15.520><c> next</c><00:24:15.960><c> based</c><00:24:16.240><c> on</c><00:24:17.000><c> just</c>

00:24:17.190 --> 00:24:17.200 align:start position:0%
predicting what comes next based on just
 

00:24:17.200 --> 00:24:19.149 align:start position:0%
predicting what comes next based on just
the<00:24:17.360><c> individual</c><00:24:17.919><c> identity</c><00:24:18.360><c> of</c><00:24:18.520><c> a</c><00:24:18.720><c> single</c>

00:24:19.149 --> 00:24:19.159 align:start position:0%
the individual identity of a single
 

00:24:19.159 --> 00:24:22.470 align:start position:0%
the individual identity of a single
token<00:24:20.159><c> and</c><00:24:20.360><c> you</c><00:24:20.480><c> can</c><00:24:20.640><c> do</c><00:24:20.840><c> that</c><00:24:21.080><c> because</c><00:24:21.679><c> um</c><00:24:22.400><c> I</c>

00:24:22.470 --> 00:24:22.480 align:start position:0%
token and you can do that because um I
 

00:24:22.480 --> 00:24:23.710 align:start position:0%
token and you can do that because um I
mean<00:24:22.640><c> currently</c><00:24:23.000><c> the</c><00:24:23.080><c> tokens</c><00:24:23.360><c> are</c><00:24:23.559><c> not</c>

00:24:23.710 --> 00:24:23.720 align:start position:0%
mean currently the tokens are not
 

00:24:23.720 --> 00:24:25.190 align:start position:0%
mean currently the tokens are not
talking<00:24:23.960><c> to</c><00:24:24.120><c> each</c><00:24:24.240><c> other</c><00:24:24.760><c> and</c><00:24:24.880><c> they're</c><00:24:25.039><c> not</c>

00:24:25.190 --> 00:24:25.200 align:start position:0%
talking to each other and they're not
 

00:24:25.200 --> 00:24:26.750 align:start position:0%
talking to each other and they're not
seeing<00:24:25.520><c> any</c><00:24:25.720><c> context</c><00:24:26.200><c> except</c><00:24:26.440><c> for</c><00:24:26.600><c> they're</c>

00:24:26.750 --> 00:24:26.760 align:start position:0%
seeing any context except for they're
 

00:24:26.760 --> 00:24:29.470 align:start position:0%
seeing any context except for they're
just<00:24:26.840><c> seeing</c><00:24:27.279><c> themselves</c><00:24:28.039><c> so</c><00:24:28.760><c> I'm</c><00:24:28.880><c> a</c><00:24:29.080><c> f</c><00:24:29.279><c> I'm</c><00:24:29.360><c> a</c>

00:24:29.470 --> 00:24:29.480 align:start position:0%
just seeing themselves so I'm a f I'm a
 

00:24:29.480 --> 00:24:32.110 align:start position:0%
just seeing themselves so I'm a f I'm a
token<00:24:29.760><c> number</c><00:24:30.120><c> five</c><00:24:31.039><c> and</c><00:24:31.200><c> then</c><00:24:31.880><c> I</c><00:24:31.960><c> can</c>

00:24:32.110 --> 00:24:32.120 align:start position:0%
token number five and then I can
 

00:24:32.120 --> 00:24:33.590 align:start position:0%
token number five and then I can
actually<00:24:32.399><c> make</c><00:24:32.679><c> pretty</c><00:24:32.919><c> decent</c><00:24:33.200><c> predictions</c>

00:24:33.590 --> 00:24:33.600 align:start position:0%
actually make pretty decent predictions
 

00:24:33.600 --> 00:24:35.310 align:start position:0%
actually make pretty decent predictions
about<00:24:33.840><c> what</c><00:24:33.960><c> comes</c><00:24:34.240><c> next</c><00:24:34.679><c> just</c><00:24:34.880><c> by</c><00:24:35.000><c> knowing</c>

00:24:35.310 --> 00:24:35.320 align:start position:0%
about what comes next just by knowing
 

00:24:35.320 --> 00:24:37.110 align:start position:0%
about what comes next just by knowing
that<00:24:35.480><c> I'm</c><00:24:35.679><c> token</c><00:24:36.039><c> five</c><00:24:36.640><c> because</c><00:24:36.880><c> some</c>

00:24:37.110 --> 00:24:37.120 align:start position:0%
that I'm token five because some
 

00:24:37.120 --> 00:24:39.950 align:start position:0%
that I'm token five because some
characters<00:24:37.840><c> uh</c><00:24:37.960><c> know</c><00:24:38.600><c> um</c><00:24:38.880><c> C</c><00:24:39.320><c> follow</c><00:24:39.720><c> other</c>

00:24:39.950 --> 00:24:39.960 align:start position:0%
characters uh know um C follow other
 

00:24:39.960 --> 00:24:42.909 align:start position:0%
characters uh know um C follow other
characters<00:24:40.840><c> in</c><00:24:41.159><c> in</c><00:24:41.279><c> typical</c><00:24:41.679><c> scenarios</c><00:24:42.679><c> so</c><00:24:42.799><c> we</c>

00:24:42.909 --> 00:24:42.919 align:start position:0%
characters in in typical scenarios so we
 

00:24:42.919 --> 00:24:44.950 align:start position:0%
characters in in typical scenarios so we
saw<00:24:43.159><c> a</c><00:24:43.279><c> lot</c><00:24:43.399><c> of</c><00:24:43.559><c> this</c><00:24:43.720><c> in</c><00:24:43.919><c> a</c><00:24:44.039><c> lot</c><00:24:44.200><c> more</c><00:24:44.520><c> depth</c><00:24:44.840><c> in</c>

00:24:44.950 --> 00:24:44.960 align:start position:0%
saw a lot of this in a lot more depth in
 

00:24:44.960 --> 00:24:46.909 align:start position:0%
saw a lot of this in a lot more depth in
the<00:24:45.080><c> make</c><00:24:45.320><c> more</c><00:24:45.480><c> series</c><00:24:46.240><c> and</c><00:24:46.399><c> here</c><00:24:46.559><c> if</c><00:24:46.640><c> I</c><00:24:46.760><c> just</c>

00:24:46.909 --> 00:24:46.919 align:start position:0%
the make more series and here if I just
 

00:24:46.919 --> 00:24:49.350 align:start position:0%
the make more series and here if I just
run<00:24:47.200><c> this</c><00:24:48.159><c> then</c><00:24:48.440><c> we</c><00:24:48.600><c> currently</c><00:24:49.039><c> get</c><00:24:49.200><c> the</c>

00:24:49.350 --> 00:24:49.360 align:start position:0%
run this then we currently get the
 

00:24:49.360 --> 00:24:53.149 align:start position:0%
run this then we currently get the
predictions<00:24:50.320><c> the</c><00:24:50.440><c> scores</c><00:24:51.440><c> the</c><00:24:51.760><c> lits</c><00:24:52.760><c> for</c>

00:24:53.149 --> 00:24:53.159 align:start position:0%
predictions the scores the lits for
 

00:24:53.159 --> 00:24:55.789 align:start position:0%
predictions the scores the lits for
every<00:24:53.360><c> one</c><00:24:53.520><c> of</c><00:24:53.600><c> the</c><00:24:53.720><c> 4x8</c><00:24:54.520><c> positions</c><00:24:55.520><c> now</c><00:24:55.679><c> that</c>

00:24:55.789 --> 00:24:55.799 align:start position:0%
every one of the 4x8 positions now that
 

00:24:55.799 --> 00:24:57.149 align:start position:0%
every one of the 4x8 positions now that
we've<00:24:55.960><c> made</c><00:24:56.120><c> predictions</c><00:24:56.559><c> about</c><00:24:56.760><c> what</c><00:24:56.880><c> comes</c>

00:24:57.149 --> 00:24:57.159 align:start position:0%
we've made predictions about what comes
 

00:24:57.159 --> 00:24:58.789 align:start position:0%
we've made predictions about what comes
next<00:24:57.559><c> we'd</c><00:24:57.720><c> like</c><00:24:57.840><c> to</c><00:24:58.000><c> evaluate</c><00:24:58.520><c> the</c><00:24:58.600><c> loss</c>

00:24:58.789 --> 00:24:58.799 align:start position:0%
next we'd like to evaluate the loss
 

00:24:58.799 --> 00:25:00.909 align:start position:0%
next we'd like to evaluate the loss
function<00:24:59.559><c> and</c><00:24:59.679><c> so</c><00:24:59.840><c> in</c><00:24:59.960><c> make</c><00:25:00.240><c> more</c><00:25:00.399><c> series</c><00:25:00.799><c> we</c>

00:25:00.909 --> 00:25:00.919 align:start position:0%
function and so in make more series we
 

00:25:00.919 --> 00:25:03.430 align:start position:0%
function and so in make more series we
saw<00:25:01.279><c> that</c><00:25:01.640><c> a</c><00:25:01.840><c> good</c><00:25:02.000><c> way</c><00:25:02.159><c> to</c><00:25:02.279><c> measure</c><00:25:02.640><c> a</c><00:25:02.840><c> loss</c><00:25:03.240><c> or</c>

00:25:03.430 --> 00:25:03.440 align:start position:0%
saw that a good way to measure a loss or
 

00:25:03.440 --> 00:25:05.669 align:start position:0%
saw that a good way to measure a loss or
like<00:25:03.600><c> a</c><00:25:03.760><c> quality</c><00:25:04.159><c> of</c><00:25:04.279><c> the</c><00:25:04.399><c> predictions</c><00:25:05.360><c> is</c><00:25:05.520><c> to</c>

00:25:05.669 --> 00:25:05.679 align:start position:0%
like a quality of the predictions is to
 

00:25:05.679 --> 00:25:07.950 align:start position:0%
like a quality of the predictions is to
use<00:25:05.919><c> the</c><00:25:06.080><c> negative</c><00:25:06.399><c> log</c><00:25:06.679><c> likelihood</c><00:25:07.240><c> loss</c>

00:25:07.950 --> 00:25:07.960 align:start position:0%
use the negative log likelihood loss
 

00:25:07.960 --> 00:25:09.430 align:start position:0%
use the negative log likelihood loss
which<00:25:08.080><c> is</c><00:25:08.240><c> also</c><00:25:08.480><c> implemented</c><00:25:08.880><c> in</c><00:25:09.039><c> pytorch</c>

00:25:09.430 --> 00:25:09.440 align:start position:0%
which is also implemented in pytorch
 

00:25:09.440 --> 00:25:12.190 align:start position:0%
which is also implemented in pytorch
under<00:25:09.640><c> the</c><00:25:09.760><c> name</c><00:25:10.120><c> cross</c><00:25:10.760><c> entropy</c><00:25:11.760><c> so</c><00:25:11.919><c> what</c><00:25:12.039><c> we'</c>

00:25:12.190 --> 00:25:12.200 align:start position:0%
under the name cross entropy so what we'
 

00:25:12.200 --> 00:25:15.430 align:start position:0%
under the name cross entropy so what we'
like<00:25:12.320><c> to</c><00:25:12.440><c> do</c><00:25:12.679><c> here</c><00:25:13.559><c> is</c><00:25:14.559><c> loss</c><00:25:14.919><c> is</c><00:25:15.080><c> the</c><00:25:15.200><c> cross</c>

00:25:15.430 --> 00:25:15.440 align:start position:0%
like to do here is loss is the cross
 

00:25:15.440 --> 00:25:17.789 align:start position:0%
like to do here is loss is the cross
entropy<00:25:16.279><c> on</c><00:25:16.679><c> the</c><00:25:16.799><c> predictions</c><00:25:17.480><c> and</c><00:25:17.640><c> the</c>

00:25:17.789 --> 00:25:17.799 align:start position:0%
entropy on the predictions and the
 

00:25:17.799 --> 00:25:20.149 align:start position:0%
entropy on the predictions and the
targets<00:25:18.600><c> and</c><00:25:18.679><c> so</c><00:25:18.840><c> this</c><00:25:18.960><c> measures</c><00:25:19.360><c> the</c><00:25:19.640><c> quality</c>

00:25:20.149 --> 00:25:20.159 align:start position:0%
targets and so this measures the quality
 

00:25:20.159 --> 00:25:21.710 align:start position:0%
targets and so this measures the quality
of<00:25:20.360><c> the</c><00:25:20.480><c> logits</c><00:25:21.039><c> with</c><00:25:21.200><c> respect</c><00:25:21.440><c> to</c><00:25:21.559><c> the</c>

00:25:21.710 --> 00:25:21.720 align:start position:0%
of the logits with respect to the
 

00:25:21.720 --> 00:25:24.149 align:start position:0%
of the logits with respect to the
Targets<00:25:22.720><c> in</c><00:25:22.840><c> other</c><00:25:23.039><c> words</c><00:25:23.760><c> we</c><00:25:23.880><c> have</c><00:25:24.039><c> the</c>

00:25:24.149 --> 00:25:24.159 align:start position:0%
Targets in other words we have the
 

00:25:24.159 --> 00:25:26.190 align:start position:0%
Targets in other words we have the
identity<00:25:24.520><c> of</c><00:25:24.640><c> the</c><00:25:24.720><c> next</c><00:25:24.960><c> character</c><00:25:25.679><c> so</c><00:25:25.960><c> how</c>

00:25:26.190 --> 00:25:26.200 align:start position:0%
identity of the next character so how
 

00:25:26.200 --> 00:25:28.070 align:start position:0%
identity of the next character so how
well<00:25:26.600><c> are</c><00:25:26.760><c> we</c><00:25:26.960><c> predicting</c><00:25:27.760><c> the</c><00:25:27.919><c> next</c>

00:25:28.070 --> 00:25:28.080 align:start position:0%
well are we predicting the next
 

00:25:28.080 --> 00:25:30.269 align:start position:0%
well are we predicting the next
character<00:25:28.720><c> based</c><00:25:28.919><c> on</c><00:25:29.000><c> the</c><00:25:29.120><c> lits</c><00:25:30.120><c> and</c>

00:25:30.269 --> 00:25:30.279 align:start position:0%
character based on the lits and
 

00:25:30.279 --> 00:25:33.549 align:start position:0%
character based on the lits and
intuitively<00:25:31.159><c> the</c><00:25:31.320><c> correct</c><00:25:32.120><c> um</c><00:25:33.000><c> the</c><00:25:33.159><c> correct</c>

00:25:33.549 --> 00:25:33.559 align:start position:0%
intuitively the correct um the correct
 

00:25:33.559 --> 00:25:36.669 align:start position:0%
intuitively the correct um the correct
dimension<00:25:34.080><c> of</c><00:25:34.240><c> low</c><00:25:34.799><c> jits</c><00:25:35.799><c> uh</c><00:25:36.320><c> depending</c><00:25:36.600><c> on</c>

00:25:36.669 --> 00:25:36.679 align:start position:0%
dimension of low jits uh depending on
 

00:25:36.679 --> 00:25:38.070 align:start position:0%
dimension of low jits uh depending on
whatever<00:25:36.919><c> the</c><00:25:37.039><c> target</c><00:25:37.360><c> is</c><00:25:37.640><c> should</c><00:25:37.840><c> have</c><00:25:37.960><c> a</c>

00:25:38.070 --> 00:25:38.080 align:start position:0%
whatever the target is should have a
 

00:25:38.080 --> 00:25:39.549 align:start position:0%
whatever the target is should have a
very<00:25:38.279><c> high</c><00:25:38.440><c> number</c><00:25:38.960><c> and</c><00:25:39.120><c> all</c><00:25:39.240><c> the</c><00:25:39.360><c> other</c>

00:25:39.549 --> 00:25:39.559 align:start position:0%
very high number and all the other
 

00:25:39.559 --> 00:25:41.710 align:start position:0%
very high number and all the other
dimensions<00:25:39.960><c> should</c><00:25:40.120><c> be</c><00:25:40.360><c> very</c><00:25:40.559><c> low</c><00:25:40.760><c> number</c>

00:25:41.710 --> 00:25:41.720 align:start position:0%
dimensions should be very low number
 

00:25:41.720 --> 00:25:44.110 align:start position:0%
dimensions should be very low number
right<00:25:42.720><c> now</c><00:25:43.000><c> the</c><00:25:43.120><c> issue</c><00:25:43.360><c> is</c><00:25:43.480><c> that</c><00:25:43.679><c> this</c><00:25:43.799><c> won't</c>

00:25:44.110 --> 00:25:44.120 align:start position:0%
right now the issue is that this won't
 

00:25:44.120 --> 00:25:46.149 align:start position:0%
right now the issue is that this won't
actually<00:25:45.000><c> this</c><00:25:45.120><c> is</c><00:25:45.279><c> what</c><00:25:45.360><c> we</c><00:25:45.480><c> want</c><00:25:45.679><c> we</c><00:25:45.799><c> want</c><00:25:45.960><c> to</c>

00:25:46.149 --> 00:25:46.159 align:start position:0%
actually this is what we want we want to
 

00:25:46.159 --> 00:25:50.029 align:start position:0%
actually this is what we want we want to
basically<00:25:46.559><c> output</c><00:25:47.360><c> the</c><00:25:47.440><c> logits</c><00:25:47.880><c> and</c><00:25:48.000><c> the</c>

00:25:50.029 --> 00:25:50.039 align:start position:0%
basically output the logits and the
 

00:25:50.039 --> 00:25:52.470 align:start position:0%
basically output the logits and the
loss<00:25:51.039><c> this</c><00:25:51.159><c> is</c><00:25:51.279><c> what</c><00:25:51.399><c> we</c><00:25:51.520><c> want</c><00:25:51.799><c> but</c>

00:25:52.470 --> 00:25:52.480 align:start position:0%
loss this is what we want but
 

00:25:52.480 --> 00:25:55.950 align:start position:0%
loss this is what we want but
unfortunately<00:25:53.480><c> uh</c><00:25:53.559><c> this</c><00:25:53.679><c> won't</c><00:25:54.000><c> actually</c><00:25:54.960><c> run</c>

00:25:55.950 --> 00:25:55.960 align:start position:0%
unfortunately uh this won't actually run
 

00:25:55.960 --> 00:25:57.909 align:start position:0%
unfortunately uh this won't actually run
we<00:25:56.080><c> get</c><00:25:56.240><c> an</c><00:25:56.360><c> error</c><00:25:56.679><c> message</c><00:25:57.279><c> but</c><00:25:57.440><c> intuitively</c>

00:25:57.909 --> 00:25:57.919 align:start position:0%
we get an error message but intuitively
 

00:25:57.919 --> 00:26:01.070 align:start position:0%
we get an error message but intuitively
we<00:25:58.039><c> want</c><00:25:58.320><c> to</c><00:25:58.880><c> uh</c><00:25:59.600><c> measure</c><00:26:00.080><c> this</c><00:26:00.720><c> now</c><00:26:00.840><c> when</c><00:26:00.960><c> we</c>

00:26:01.070 --> 00:26:01.080 align:start position:0%
we want to uh measure this now when we
 

00:26:01.080 --> 00:26:04.830 align:start position:0%
we want to uh measure this now when we
go<00:26:01.200><c> to</c><00:26:01.279><c> the</c><00:26:01.440><c> pytorch</c><00:26:02.440><c> um</c><00:26:03.080><c> cross</c><00:26:03.840><c> entropy</c>

00:26:04.830 --> 00:26:04.840 align:start position:0%
go to the pytorch um cross entropy
 

00:26:04.840 --> 00:26:08.070 align:start position:0%
go to the pytorch um cross entropy
documentation<00:26:05.600><c> here</c><00:26:06.600><c> um</c><00:26:07.520><c> we're</c><00:26:07.720><c> trying</c><00:26:07.919><c> to</c>

00:26:08.070 --> 00:26:08.080 align:start position:0%
documentation here um we're trying to
 

00:26:08.080 --> 00:26:10.230 align:start position:0%
documentation here um we're trying to
call<00:26:08.320><c> the</c><00:26:08.520><c> cross</c><00:26:08.799><c> entropy</c><00:26:09.320><c> in</c><00:26:09.520><c> its</c><00:26:09.760><c> functional</c>

00:26:10.230 --> 00:26:10.240 align:start position:0%
call the cross entropy in its functional
 

00:26:10.240 --> 00:26:11.750 align:start position:0%
call the cross entropy in its functional
form<00:26:10.799><c> uh</c><00:26:10.919><c> so</c><00:26:11.039><c> that</c><00:26:11.120><c> means</c><00:26:11.320><c> we</c><00:26:11.399><c> don't</c><00:26:11.520><c> have</c><00:26:11.640><c> to</c>

00:26:11.750 --> 00:26:11.760 align:start position:0%
form uh so that means we don't have to
 

00:26:11.760 --> 00:26:14.830 align:start position:0%
form uh so that means we don't have to
create<00:26:12.000><c> like</c><00:26:12.120><c> a</c><00:26:12.559><c> module</c><00:26:12.919><c> for</c><00:26:13.399><c> it</c><00:26:14.399><c> but</c><00:26:14.720><c> here</c>

00:26:14.830 --> 00:26:14.840 align:start position:0%
create like a module for it but here
 

00:26:14.840 --> 00:26:16.950 align:start position:0%
create like a module for it but here
when<00:26:14.960><c> we</c><00:26:15.080><c> go</c><00:26:15.200><c> to</c><00:26:15.360><c> the</c><00:26:15.760><c> documentation</c><00:26:16.760><c> you</c><00:26:16.880><c> have</c>

00:26:16.950 --> 00:26:16.960 align:start position:0%
when we go to the documentation you have
 

00:26:16.960 --> 00:26:18.789 align:start position:0%
when we go to the documentation you have
to<00:26:17.080><c> look</c><00:26:17.200><c> into</c><00:26:17.399><c> the</c><00:26:17.480><c> details</c><00:26:17.840><c> of</c><00:26:18.039><c> how</c><00:26:18.279><c> pitor</c>

00:26:18.789 --> 00:26:18.799 align:start position:0%
to look into the details of how pitor
 

00:26:18.799 --> 00:26:20.950 align:start position:0%
to look into the details of how pitor
expects<00:26:19.320><c> these</c><00:26:19.520><c> inputs</c><00:26:20.360><c> and</c><00:26:20.480><c> basically</c><00:26:20.840><c> the</c>

00:26:20.950 --> 00:26:20.960 align:start position:0%
expects these inputs and basically the
 

00:26:20.960 --> 00:26:24.070 align:start position:0%
expects these inputs and basically the
issue<00:26:21.279><c> here</c><00:26:21.520><c> is</c><00:26:22.279><c> ptor</c><00:26:22.720><c> expects</c><00:26:23.720><c> if</c><00:26:23.799><c> you</c><00:26:23.919><c> have</c>

00:26:24.070 --> 00:26:24.080 align:start position:0%
issue here is ptor expects if you have
 

00:26:24.080 --> 00:26:25.909 align:start position:0%
issue here is ptor expects if you have
multi-dimensional<00:26:24.840><c> input</c><00:26:25.200><c> which</c><00:26:25.360><c> we</c><00:26:25.480><c> do</c>

00:26:25.909 --> 00:26:25.919 align:start position:0%
multi-dimensional input which we do
 

00:26:25.919 --> 00:26:28.750 align:start position:0%
multi-dimensional input which we do
because<00:26:26.080><c> we</c><00:26:26.200><c> have</c><00:26:26.279><c> a</c><00:26:26.440><c> b</c><00:26:26.640><c> BYT</c><00:26:27.080><c> by</c><00:26:27.200><c> C</c><00:26:27.520><c> tensor</c><00:26:28.559><c> then</c>

00:26:28.750 --> 00:26:28.760 align:start position:0%
because we have a b BYT by C tensor then
 

00:26:28.760 --> 00:26:31.190 align:start position:0%
because we have a b BYT by C tensor then
it<00:26:28.960><c> actually</c><00:26:29.240><c> really</c><00:26:29.440><c> wants</c><00:26:29.720><c> the</c><00:26:29.919><c> channels</c><00:26:30.919><c> to</c>

00:26:31.190 --> 00:26:31.200 align:start position:0%
it actually really wants the channels to
 

00:26:31.200 --> 00:26:35.110 align:start position:0%
it actually really wants the channels to
be<00:26:32.200><c> the</c><00:26:32.320><c> second</c><00:26:32.960><c> uh</c><00:26:33.080><c> Dimension</c><00:26:33.760><c> here</c><00:26:34.760><c> so</c><00:26:35.000><c> if</c>

00:26:35.110 --> 00:26:35.120 align:start position:0%
be the second uh Dimension here so if
 

00:26:35.120 --> 00:26:38.909 align:start position:0%
be the second uh Dimension here so if
you<00:26:35.760><c> um</c><00:26:36.640><c> so</c><00:26:36.880><c> basically</c><00:26:37.559><c> it</c><00:26:37.720><c> wants</c><00:26:38.000><c> a</c><00:26:38.200><c> b</c><00:26:38.480><c> by</c><00:26:38.640><c> C</c>

00:26:38.909 --> 00:26:38.919 align:start position:0%
you um so basically it wants a b by C
 

00:26:38.919 --> 00:26:42.909 align:start position:0%
you um so basically it wants a b by C
BYT<00:26:39.840><c> instead</c><00:26:40.120><c> of</c><00:26:40.200><c> a</c><00:26:40.320><c> b</c><00:26:40.520><c> by</c><00:26:40.640><c> T</c><00:26:40.880><c> by</c><00:26:41.240><c> C</c><00:26:42.240><c> and</c><00:26:42.360><c> so</c><00:26:42.760><c> it's</c>

00:26:42.909 --> 00:26:42.919 align:start position:0%
BYT instead of a b by T by C and so it's
 

00:26:42.919 --> 00:26:45.590 align:start position:0%
BYT instead of a b by T by C and so it's
just<00:26:43.080><c> the</c><00:26:43.240><c> details</c><00:26:43.640><c> of</c><00:26:43.799><c> how</c><00:26:44.039><c> P</c><00:26:44.279><c> torch</c><00:26:44.640><c> treats</c>

00:26:45.590 --> 00:26:45.600 align:start position:0%
just the details of how P torch treats
 

00:26:45.600 --> 00:26:49.549 align:start position:0%
just the details of how P torch treats
um<00:26:46.520><c> these</c><00:26:46.720><c> kinds</c><00:26:46.880><c> of</c><00:26:47.039><c> inputs</c><00:26:47.880><c> and</c><00:26:48.000><c> so</c><00:26:48.640><c> we</c><00:26:48.760><c> don't</c>

00:26:49.549 --> 00:26:49.559 align:start position:0%
um these kinds of inputs and so we don't
 

00:26:49.559 --> 00:26:51.230 align:start position:0%
um these kinds of inputs and so we don't
actually<00:26:49.799><c> want</c><00:26:49.919><c> to</c><00:26:50.039><c> deal</c><00:26:50.240><c> with</c><00:26:50.440><c> that</c><00:26:50.679><c> so</c><00:26:51.159><c> what</c>

00:26:51.230 --> 00:26:51.240 align:start position:0%
actually want to deal with that so what
 

00:26:51.240 --> 00:26:52.549 align:start position:0%
actually want to deal with that so what
we're<00:26:51.399><c> going</c><00:26:51.520><c> to</c><00:26:51.640><c> do</c><00:26:51.760><c> instead</c><00:26:52.120><c> is</c><00:26:52.279><c> we</c><00:26:52.360><c> need</c><00:26:52.480><c> to</c>

00:26:52.549 --> 00:26:52.559 align:start position:0%
we're going to do instead is we need to
 

00:26:52.559 --> 00:26:54.750 align:start position:0%
we're going to do instead is we need to
basically<00:26:52.840><c> reshape</c><00:26:53.200><c> our</c><00:26:53.360><c> logits</c><00:26:54.360><c> so</c><00:26:54.559><c> here's</c>

00:26:54.750 --> 00:26:54.760 align:start position:0%
basically reshape our logits so here's
 

00:26:54.760 --> 00:26:56.510 align:start position:0%
basically reshape our logits so here's
what<00:26:54.840><c> I</c><00:26:54.960><c> like</c><00:26:55.080><c> to</c><00:26:55.200><c> do</c><00:26:55.399><c> I</c><00:26:55.520><c> like</c><00:26:55.640><c> to</c><00:26:55.840><c> take</c>

00:26:56.510 --> 00:26:56.520 align:start position:0%
what I like to do I like to take
 

00:26:56.520 --> 00:26:58.389 align:start position:0%
what I like to do I like to take
basically<00:26:56.840><c> give</c><00:26:57.000><c> names</c><00:26:57.240><c> to</c><00:26:57.399><c> the</c><00:26:57.559><c> dimensions</c>

00:26:58.389 --> 00:26:58.399 align:start position:0%
basically give names to the dimensions
 

00:26:58.399 --> 00:27:01.430 align:start position:0%
basically give names to the dimensions
so<00:26:58.559><c> lit.</c><00:26:59.200><c> shape</c><00:26:59.880><c> is</c><00:27:00.080><c> B</c><00:27:00.240><c> BYT</c><00:27:00.520><c> by</c><00:27:00.640><c> C</c><00:27:00.799><c> and</c><00:27:00.960><c> unpack</c>

00:27:01.430 --> 00:27:01.440 align:start position:0%
so lit. shape is B BYT by C and unpack
 

00:27:01.440 --> 00:27:04.149 align:start position:0%
so lit. shape is B BYT by C and unpack
those<00:27:01.679><c> numbers</c><00:27:02.679><c> and</c><00:27:02.799><c> then</c><00:27:03.000><c> let's</c><00:27:03.559><c> uh</c><00:27:03.720><c> say</c><00:27:04.000><c> that</c>

00:27:04.149 --> 00:27:04.159 align:start position:0%
those numbers and then let's uh say that
 

00:27:04.159 --> 00:27:07.710 align:start position:0%
those numbers and then let's uh say that
logits<00:27:04.919><c> equals</c><00:27:05.320><c> lit.</c><00:27:06.240><c> View</c><00:27:07.240><c> and</c><00:27:07.360><c> we</c><00:27:07.480><c> want</c><00:27:07.640><c> it</c>

00:27:07.710 --> 00:27:07.720 align:start position:0%
logits equals lit. View and we want it
 

00:27:07.720 --> 00:27:11.310 align:start position:0%
logits equals lit. View and we want it
to<00:27:07.840><c> be</c><00:27:07.960><c> a</c><00:27:08.080><c> b</c><00:27:08.240><c> *</c><00:27:08.559><c> c</c><00:27:09.200><c> b</c><00:27:09.360><c> *</c><00:27:09.679><c> T</c><00:27:10.080><c> by</c><00:27:10.279><c> C</c><00:27:10.720><c> so</c><00:27:10.919><c> just</c><00:27:11.039><c> a</c><00:27:11.159><c> two-</c>

00:27:11.310 --> 00:27:11.320 align:start position:0%
to be a b * c b * T by C so just a two-
 

00:27:11.320 --> 00:27:12.789 align:start position:0%
to be a b * c b * T by C so just a two-
dimensional

00:27:12.789 --> 00:27:12.799 align:start position:0%
dimensional
 

00:27:12.799 --> 00:27:15.029 align:start position:0%
dimensional
array<00:27:13.799><c> right</c><00:27:13.960><c> so</c><00:27:14.120><c> we're</c><00:27:14.279><c> going</c><00:27:14.399><c> to</c><00:27:14.600><c> take</c><00:27:14.799><c> all</c>

00:27:15.029 --> 00:27:15.039 align:start position:0%
array right so we're going to take all
 

00:27:15.039 --> 00:27:18.950 align:start position:0%
array right so we're going to take all
the<00:27:16.000><c> we're</c><00:27:16.159><c> going</c><00:27:16.320><c> to</c><00:27:16.440><c> take</c><00:27:16.640><c> all</c><00:27:16.760><c> of</c><00:27:16.960><c> these</c><00:27:17.960><c> um</c>

00:27:18.950 --> 00:27:18.960 align:start position:0%
the we're going to take all of these um
 

00:27:18.960 --> 00:27:20.669 align:start position:0%
the we're going to take all of these um
positions<00:27:19.440><c> here</c><00:27:19.799><c> and</c><00:27:19.880><c> we're</c><00:27:20.039><c> going</c><00:27:20.159><c> to</c><00:27:20.559><c> uh</c>

00:27:20.669 --> 00:27:20.679 align:start position:0%
positions here and we're going to uh
 

00:27:20.679 --> 00:27:22.789 align:start position:0%
positions here and we're going to uh
stretch<00:27:21.039><c> them</c><00:27:21.159><c> out</c><00:27:21.360><c> in</c><00:27:21.480><c> a</c><00:27:21.559><c> onedimensional</c>

00:27:22.789 --> 00:27:22.799 align:start position:0%
stretch them out in a onedimensional
 

00:27:22.799 --> 00:27:24.990 align:start position:0%
stretch them out in a onedimensional
sequence<00:27:23.799><c> and</c><00:27:24.039><c> uh</c><00:27:24.200><c> preserve</c><00:27:24.559><c> the</c><00:27:24.679><c> channel</c>

00:27:24.990 --> 00:27:25.000 align:start position:0%
sequence and uh preserve the channel
 

00:27:25.000 --> 00:27:26.750 align:start position:0%
sequence and uh preserve the channel
Dimension<00:27:25.480><c> as</c><00:27:25.679><c> the</c><00:27:25.880><c> second</c>

00:27:26.750 --> 00:27:26.760 align:start position:0%
Dimension as the second
 

00:27:26.760 --> 00:27:28.470 align:start position:0%
Dimension as the second
dimension<00:27:27.760><c> so</c><00:27:27.880><c> we're</c><00:27:28.000><c> just</c><00:27:28.200><c> kind</c><00:27:28.320><c> of</c><00:27:28.360><c> like</c>

00:27:28.470 --> 00:27:28.480 align:start position:0%
dimension so we're just kind of like
 

00:27:28.480 --> 00:27:29.870 align:start position:0%
dimension so we're just kind of like
stretching<00:27:28.880><c> out</c><00:27:29.000><c> the</c><00:27:29.120><c> array</c><00:27:29.399><c> so</c><00:27:29.559><c> it's</c><00:27:29.679><c> two-</c>

00:27:29.870 --> 00:27:29.880 align:start position:0%
stretching out the array so it's two-
 

00:27:29.880 --> 00:27:31.549 align:start position:0%
stretching out the array so it's two-
dimensional<00:27:30.720><c> and</c><00:27:30.840><c> in</c><00:27:31.000><c> that</c><00:27:31.120><c> case</c><00:27:31.279><c> it's</c><00:27:31.440><c> going</c>

00:27:31.549 --> 00:27:31.559 align:start position:0%
dimensional and in that case it's going
 

00:27:31.559 --> 00:27:33.909 align:start position:0%
dimensional and in that case it's going
to<00:27:31.760><c> better</c><00:27:32.039><c> conform</c><00:27:32.720><c> to</c><00:27:32.919><c> what</c><00:27:33.080><c> pytorch</c><00:27:33.799><c> uh</c>

00:27:33.909 --> 00:27:33.919 align:start position:0%
to better conform to what pytorch uh
 

00:27:33.919 --> 00:27:36.590 align:start position:0%
to better conform to what pytorch uh
sort<00:27:34.080><c> of</c><00:27:34.240><c> expects</c><00:27:34.679><c> in</c><00:27:34.799><c> its</c><00:27:35.320><c> Dimensions</c><00:27:36.320><c> now</c><00:27:36.480><c> we</c>

00:27:36.590 --> 00:27:36.600 align:start position:0%
sort of expects in its Dimensions now we
 

00:27:36.600 --> 00:27:38.669 align:start position:0%
sort of expects in its Dimensions now we
have<00:27:36.679><c> to</c><00:27:36.799><c> do</c><00:27:36.960><c> the</c><00:27:37.080><c> same</c><00:27:37.279><c> to</c><00:27:37.480><c> targets</c><00:27:38.480><c> because</c>

00:27:38.669 --> 00:27:38.679 align:start position:0%
have to do the same to targets because
 

00:27:38.679 --> 00:27:44.590 align:start position:0%
have to do the same to targets because
currently<00:27:39.399><c> targets</c><00:27:40.399><c> are</c><00:27:41.240><c> um</c><00:27:42.000><c> of</c><00:27:42.159><c> shape</c><00:27:42.880><c> B</c><00:27:43.600><c> by</c><00:27:43.840><c> T</c>

00:27:44.590 --> 00:27:44.600 align:start position:0%
currently targets are um of shape B by T
 

00:27:44.600 --> 00:27:47.149 align:start position:0%
currently targets are um of shape B by T
and<00:27:44.760><c> we</c><00:27:44.880><c> want</c><00:27:45.000><c> it</c><00:27:45.120><c> to</c><00:27:45.240><c> be</c><00:27:45.440><c> just</c><00:27:45.600><c> B</c><00:27:45.799><c> *</c><00:27:46.120><c> T</c><00:27:46.919><c> so</c>

00:27:47.149 --> 00:27:47.159 align:start position:0%
and we want it to be just B * T so
 

00:27:47.159 --> 00:27:49.630 align:start position:0%
and we want it to be just B * T so
onedimensional<00:27:48.000><c> now</c><00:27:49.000><c> alternatively</c><00:27:49.559><c> you</c>

00:27:49.630 --> 00:27:49.640 align:start position:0%
onedimensional now alternatively you
 

00:27:49.640 --> 00:27:51.870 align:start position:0%
onedimensional now alternatively you
could<00:27:49.760><c> always</c><00:27:49.960><c> still</c><00:27:50.240><c> just</c><00:27:50.480><c> do</c><00:27:50.720><c> minus</c><00:27:51.039><c> one</c>

00:27:51.870 --> 00:27:51.880 align:start position:0%
could always still just do minus one
 

00:27:51.880 --> 00:27:53.590 align:start position:0%
could always still just do minus one
because<00:27:52.240><c> pytor</c><00:27:52.640><c> will</c><00:27:52.880><c> guess</c><00:27:53.320><c> what</c><00:27:53.480><c> this</c>

00:27:53.590 --> 00:27:53.600 align:start position:0%
because pytor will guess what this
 

00:27:53.600 --> 00:27:55.430 align:start position:0%
because pytor will guess what this
should<00:27:53.799><c> be</c><00:27:53.960><c> if</c><00:27:54.039><c> you</c><00:27:54.159><c> want</c><00:27:54.240><c> to</c><00:27:54.399><c> lay</c><00:27:54.559><c> it</c><00:27:54.679><c> out</c><00:27:55.320><c> uh</c>

00:27:55.430 --> 00:27:55.440 align:start position:0%
should be if you want to lay it out uh
 

00:27:55.440 --> 00:27:57.110 align:start position:0%
should be if you want to lay it out uh
but<00:27:55.559><c> let</c><00:27:55.640><c> me</c><00:27:55.760><c> just</c><00:27:55.880><c> be</c><00:27:56.039><c> explicit</c><00:27:56.360><c> and</c><00:27:56.480><c> say</c><00:27:56.640><c> p</c><00:27:56.799><c> *</c>

00:27:57.110 --> 00:27:57.120 align:start position:0%
but let me just be explicit and say p *
 

00:27:57.120 --> 00:28:00.430 align:start position:0%
but let me just be explicit and say p *
t<00:27:58.200><c> once</c><00:27:58.360><c> we've</c><00:27:58.559><c> reshaped</c><00:27:59.120><c> this</c><00:27:59.679><c> it</c><00:27:59.760><c> will</c><00:28:00.039><c> match</c>

00:28:00.430 --> 00:28:00.440 align:start position:0%
t once we've reshaped this it will match
 

00:28:00.440 --> 00:28:03.149 align:start position:0%
t once we've reshaped this it will match
the<00:28:00.600><c> cross</c><00:28:00.880><c> entropy</c><00:28:01.880><c> case</c><00:28:02.840><c> and</c><00:28:02.960><c> then</c><00:28:03.080><c> we</c>

00:28:03.149 --> 00:28:03.159 align:start position:0%
the cross entropy case and then we
 

00:28:03.159 --> 00:28:06.110 align:start position:0%
the cross entropy case and then we
should<00:28:03.320><c> be</c><00:28:03.399><c> able</c><00:28:03.559><c> to</c><00:28:03.760><c> evaluate</c><00:28:04.120><c> our</c>

00:28:06.110 --> 00:28:06.120 align:start position:0%
should be able to evaluate our
 

00:28:06.120 --> 00:28:10.029 align:start position:0%
should be able to evaluate our
loss<00:28:07.120><c> okay</c><00:28:07.240><c> so</c><00:28:07.480><c> that</c><00:28:07.679><c> R</c><00:28:07.919><c> now</c><00:28:08.240><c> and</c><00:28:08.399><c> we</c><00:28:08.799><c> can</c><00:28:09.799><c> do</c>

00:28:10.029 --> 00:28:10.039 align:start position:0%
loss okay so that R now and we can do
 

00:28:10.039 --> 00:28:11.990 align:start position:0%
loss okay so that R now and we can do
loss<00:28:10.919><c> and</c><00:28:11.000><c> So</c><00:28:11.159><c> currently</c><00:28:11.480><c> we</c><00:28:11.600><c> see</c><00:28:11.799><c> that</c><00:28:11.919><c> the</c>

00:28:11.990 --> 00:28:12.000 align:start position:0%
loss and So currently we see that the
 

00:28:12.000 --> 00:28:13.669 align:start position:0%
loss and So currently we see that the
loss<00:28:12.240><c> is</c>

00:28:13.669 --> 00:28:13.679 align:start position:0%
loss is
 

00:28:13.679 --> 00:28:17.230 align:start position:0%
loss is
4.87<00:28:14.679><c> now</c><00:28:15.000><c> because</c><00:28:15.519><c> our</c><00:28:16.240><c> uh</c><00:28:16.360><c> we</c><00:28:16.480><c> have</c><00:28:16.600><c> 65</c>

00:28:17.230 --> 00:28:17.240 align:start position:0%
4.87 now because our uh we have 65
 

00:28:17.240 --> 00:28:19.310 align:start position:0%
4.87 now because our uh we have 65
possible<00:28:17.640><c> vocabulary</c><00:28:18.200><c> elements</c><00:28:19.039><c> we</c><00:28:19.159><c> can</c>

00:28:19.310 --> 00:28:19.320 align:start position:0%
possible vocabulary elements we can
 

00:28:19.320 --> 00:28:20.789 align:start position:0%
possible vocabulary elements we can
actually<00:28:19.640><c> guess</c><00:28:19.840><c> at</c><00:28:20.039><c> what</c><00:28:20.200><c> the</c><00:28:20.320><c> loss</c><00:28:20.600><c> should</c>

00:28:20.789 --> 00:28:20.799 align:start position:0%
actually guess at what the loss should
 

00:28:20.799 --> 00:28:22.470 align:start position:0%
actually guess at what the loss should
be<00:28:21.600><c> and</c><00:28:21.720><c> in</c>

00:28:22.470 --> 00:28:22.480 align:start position:0%
be and in
 

00:28:22.480 --> 00:28:24.430 align:start position:0%
be and in
particular<00:28:23.480><c> we</c><00:28:23.640><c> covered</c><00:28:23.960><c> negative</c><00:28:24.240><c> log</c>

00:28:24.430 --> 00:28:24.440 align:start position:0%
particular we covered negative log
 

00:28:24.440 --> 00:28:26.430 align:start position:0%
particular we covered negative log
likelihood<00:28:24.880><c> in</c><00:28:24.960><c> a</c><00:28:25.039><c> lot</c><00:28:25.159><c> of</c><00:28:25.320><c> detail</c><00:28:25.919><c> we</c><00:28:26.039><c> are</c>

00:28:26.430 --> 00:28:26.440 align:start position:0%
likelihood in a lot of detail we are
 

00:28:26.440 --> 00:28:32.230 align:start position:0%
likelihood in a lot of detail we are
expecting<00:28:27.440><c> log</c><00:28:28.159><c> or</c><00:28:28.519><c> lawn</c><00:28:29.519><c> of</c><00:28:30.080><c> um</c><00:28:30.760><c> 1</c><00:28:31.039><c> over</c><00:28:31.279><c> 65</c>

00:28:32.230 --> 00:28:32.240 align:start position:0%
expecting log or lawn of um 1 over 65
 

00:28:32.240 --> 00:28:34.430 align:start position:0%
expecting log or lawn of um 1 over 65
and<00:28:32.440><c> negative</c><00:28:32.760><c> of</c><00:28:32.960><c> that</c><00:28:33.799><c> so</c><00:28:33.960><c> we're</c><00:28:34.120><c> expecting</c>

00:28:34.430 --> 00:28:34.440 align:start position:0%
and negative of that so we're expecting
 

00:28:34.440 --> 00:28:37.710 align:start position:0%
and negative of that so we're expecting
the<00:28:34.559><c> loss</c><00:28:34.840><c> to</c><00:28:34.960><c> be</c><00:28:35.120><c> about</c><00:28:35.399><c> 4.1</c><00:28:36.440><c> 17</c><00:28:37.440><c> but</c><00:28:37.559><c> we're</c>

00:28:37.710 --> 00:28:37.720 align:start position:0%
the loss to be about 4.1 17 but we're
 

00:28:37.720 --> 00:28:40.070 align:start position:0%
the loss to be about 4.1 17 but we're
getting<00:28:38.200><c> 4.87</c><00:28:39.200><c> and</c><00:28:39.279><c> so</c><00:28:39.440><c> that's</c><00:28:39.600><c> telling</c><00:28:39.880><c> us</c>

00:28:40.070 --> 00:28:40.080 align:start position:0%
getting 4.87 and so that's telling us
 

00:28:40.080 --> 00:28:41.990 align:start position:0%
getting 4.87 and so that's telling us
that<00:28:40.200><c> the</c><00:28:40.360><c> initial</c><00:28:40.679><c> predictions</c><00:28:41.080><c> are</c><00:28:41.279><c> not</c><00:28:41.880><c> uh</c>

00:28:41.990 --> 00:28:42.000 align:start position:0%
that the initial predictions are not uh
 

00:28:42.000 --> 00:28:43.750 align:start position:0%
that the initial predictions are not uh
super<00:28:42.279><c> diffuse</c><00:28:43.000><c> they've</c><00:28:43.200><c> got</c><00:28:43.360><c> a</c><00:28:43.480><c> little</c><00:28:43.640><c> bit</c>

00:28:43.750 --> 00:28:43.760 align:start position:0%
super diffuse they've got a little bit
 

00:28:43.760 --> 00:28:47.029 align:start position:0%
super diffuse they've got a little bit
of<00:28:43.840><c> entropy</c><00:28:44.679><c> and</c><00:28:44.799><c> so</c><00:28:44.960><c> we're</c><00:28:45.200><c> guessing</c><00:28:46.039><c> wrong</c>

00:28:47.029 --> 00:28:47.039 align:start position:0%
of entropy and so we're guessing wrong
 

00:28:47.039 --> 00:28:50.549 align:start position:0%
of entropy and so we're guessing wrong
uh<00:28:47.360><c> so</c><00:28:48.360><c> uh</c><00:28:48.799><c> yes</c><00:28:49.360><c> but</c><00:28:49.559><c> actually</c><00:28:49.840><c> we're</c><00:28:50.039><c> I</c><00:28:50.200><c> a</c><00:28:50.440><c> we</c>

00:28:50.549 --> 00:28:50.559 align:start position:0%
uh so uh yes but actually we're I a we
 

00:28:50.559 --> 00:28:53.029 align:start position:0%
uh so uh yes but actually we're I a we
are<00:28:50.679><c> able</c><00:28:50.880><c> to</c><00:28:51.039><c> evaluate</c><00:28:51.559><c> the</c><00:28:51.760><c> loss</c><00:28:52.760><c> okay</c><00:28:52.880><c> so</c>

00:28:53.029 --> 00:28:53.039 align:start position:0%
are able to evaluate the loss okay so
 

00:28:53.039 --> 00:28:54.950 align:start position:0%
are able to evaluate the loss okay so
now<00:28:53.200><c> that</c><00:28:53.279><c> we</c><00:28:53.399><c> can</c><00:28:53.559><c> evaluate</c><00:28:53.960><c> the</c><00:28:54.120><c> quality</c><00:28:54.840><c> of</c>

00:28:54.950 --> 00:28:54.960 align:start position:0%
now that we can evaluate the quality of
 

00:28:54.960 --> 00:28:57.630 align:start position:0%
now that we can evaluate the quality of
the<00:28:55.120><c> model</c><00:28:55.679><c> on</c><00:28:55.880><c> some</c><00:28:56.200><c> data</c><00:28:57.080><c> we'd</c><00:28:57.240><c> like</c><00:28:57.399><c> to</c><00:28:57.519><c> also</c>

00:28:57.630 --> 00:28:57.640 align:start position:0%
the model on some data we'd like to also
 

00:28:57.640 --> 00:28:59.430 align:start position:0%
the model on some data we'd like to also
be<00:28:57.720><c> able</c><00:28:57.880><c> to</c><00:28:58.120><c> generate</c><00:28:58.480><c> from</c><00:28:58.640><c> the</c><00:28:58.760><c> model</c><00:28:59.240><c> so</c>

00:28:59.430 --> 00:28:59.440 align:start position:0%
be able to generate from the model so
 

00:28:59.440 --> 00:29:01.710 align:start position:0%
be able to generate from the model so
let's<00:28:59.679><c> do</c><00:28:59.880><c> the</c><00:29:00.159><c> generation</c><00:29:01.159><c> now</c><00:29:01.320><c> I'm</c><00:29:01.440><c> going</c><00:29:01.559><c> to</c>

00:29:01.710 --> 00:29:01.720 align:start position:0%
let's do the generation now I'm going to
 

00:29:01.720 --> 00:29:03.029 align:start position:0%
let's do the generation now I'm going to
go<00:29:01.919><c> again</c><00:29:02.080><c> a</c><00:29:02.200><c> little</c><00:29:02.320><c> bit</c><00:29:02.519><c> faster</c><00:29:02.840><c> here</c>

00:29:03.029 --> 00:29:03.039 align:start position:0%
go again a little bit faster here
 

00:29:03.039 --> 00:29:04.669 align:start position:0%
go again a little bit faster here
because<00:29:03.279><c> I</c><00:29:03.399><c> covered</c><00:29:03.799><c> all</c><00:29:04.080><c> this</c><00:29:04.240><c> already</c><00:29:04.480><c> in</c>

00:29:04.669 --> 00:29:04.679 align:start position:0%
because I covered all this already in
 

00:29:04.679 --> 00:29:05.750 align:start position:0%
because I covered all this already in
previous

00:29:05.750 --> 00:29:05.760 align:start position:0%
previous
 

00:29:05.760 --> 00:29:07.430 align:start position:0%
previous
videos

00:29:07.430 --> 00:29:07.440 align:start position:0%
videos
 

00:29:07.440 --> 00:29:11.310 align:start position:0%
videos
so<00:29:08.440><c> here's</c><00:29:08.600><c> a</c><00:29:08.760><c> generate</c><00:29:09.159><c> function</c><00:29:09.480><c> for</c><00:29:09.600><c> the</c>

00:29:11.310 --> 00:29:11.320 align:start position:0%
so here's a generate function for the
 

00:29:11.320 --> 00:29:15.029 align:start position:0%
so here's a generate function for the
model<00:29:12.320><c> so</c><00:29:12.480><c> we</c><00:29:12.640><c> take</c><00:29:12.840><c> some</c><00:29:13.600><c> uh</c><00:29:13.799><c> we</c><00:29:14.200><c> take</c><00:29:14.399><c> the</c><00:29:14.960><c> the</c>

00:29:15.029 --> 00:29:15.039 align:start position:0%
model so we take some uh we take the the
 

00:29:15.039 --> 00:29:18.509 align:start position:0%
model so we take some uh we take the the
same<00:29:15.240><c> kind</c><00:29:15.360><c> of</c><00:29:15.519><c> input</c><00:29:15.840><c> idx</c><00:29:16.559><c> here</c><00:29:17.559><c> and</c>

00:29:18.509 --> 00:29:18.519 align:start position:0%
same kind of input idx here and
 

00:29:18.519 --> 00:29:21.990 align:start position:0%
same kind of input idx here and
basically<00:29:19.519><c> this</c><00:29:19.640><c> is</c><00:29:19.880><c> the</c><00:29:20.159><c> current</c><00:29:21.000><c> uh</c><00:29:21.240><c> context</c>

00:29:21.990 --> 00:29:22.000 align:start position:0%
basically this is the current uh context
 

00:29:22.000 --> 00:29:24.750 align:start position:0%
basically this is the current uh context
of<00:29:22.240><c> some</c><00:29:22.519><c> characters</c><00:29:23.159><c> in</c><00:29:23.279><c> a</c><00:29:23.559><c> batch</c><00:29:24.159><c> in</c><00:29:24.320><c> some</c>

00:29:24.750 --> 00:29:24.760 align:start position:0%
of some characters in a batch in some
 

00:29:24.760 --> 00:29:28.389 align:start position:0%
of some characters in a batch in some
batch<00:29:25.760><c> so</c><00:29:25.919><c> it's</c><00:29:26.080><c> also</c><00:29:26.360><c> B</c><00:29:26.559><c> BYT</c><00:29:27.519><c> and</c><00:29:27.720><c> the</c><00:29:28.120><c> job</c><00:29:28.279><c> of</c>

00:29:28.389 --> 00:29:28.399 align:start position:0%
batch so it's also B BYT and the job of
 

00:29:28.399 --> 00:29:30.789 align:start position:0%
batch so it's also B BYT and the job of
generate<00:29:29.200><c> is</c><00:29:29.320><c> to</c><00:29:29.519><c> basically</c><00:29:29.960><c> take</c><00:29:30.159><c> this</c><00:29:30.320><c> B</c><00:29:30.480><c> BYT</c>

00:29:30.789 --> 00:29:30.799 align:start position:0%
generate is to basically take this B BYT
 

00:29:30.799 --> 00:29:32.950 align:start position:0%
generate is to basically take this B BYT
and<00:29:30.880><c> extend</c><00:29:31.120><c> it</c><00:29:31.200><c> to</c><00:29:31.320><c> be</c><00:29:31.440><c> B</c><00:29:31.640><c> BYT</c><00:29:31.960><c> +</c><00:29:32.200><c> 1</c><00:29:32.480><c> plus</c><00:29:32.679><c> 2</c>

00:29:32.950 --> 00:29:32.960 align:start position:0%
and extend it to be B BYT + 1 plus 2
 

00:29:32.960 --> 00:29:34.789 align:start position:0%
and extend it to be B BYT + 1 plus 2
plus<00:29:33.159><c> 3</c><00:29:33.640><c> and</c><00:29:33.760><c> so</c><00:29:33.919><c> it's</c><00:29:34.080><c> just</c><00:29:34.279><c> basically</c><00:29:34.640><c> it</c>

00:29:34.789 --> 00:29:34.799 align:start position:0%
plus 3 and so it's just basically it
 

00:29:34.799 --> 00:29:36.430 align:start position:0%
plus 3 and so it's just basically it
continues<00:29:35.200><c> the</c><00:29:35.360><c> generation</c><00:29:36.080><c> in</c><00:29:36.200><c> all</c><00:29:36.320><c> the</c>

00:29:36.430 --> 00:29:36.440 align:start position:0%
continues the generation in all the
 

00:29:36.440 --> 00:29:39.230 align:start position:0%
continues the generation in all the
batch<00:29:36.720><c> dimensions</c><00:29:37.519><c> in</c><00:29:37.679><c> the</c><00:29:37.840><c> time</c><00:29:38.240><c> Dimension</c>

00:29:39.230 --> 00:29:39.240 align:start position:0%
batch dimensions in the time Dimension
 

00:29:39.240 --> 00:29:41.070 align:start position:0%
batch dimensions in the time Dimension
So<00:29:39.399><c> that's</c><00:29:39.559><c> its</c><00:29:39.840><c> job</c><00:29:40.440><c> and</c><00:29:40.559><c> it</c><00:29:40.640><c> will</c><00:29:40.799><c> do</c><00:29:40.960><c> that</c>

00:29:41.070 --> 00:29:41.080 align:start position:0%
So that's its job and it will do that
 

00:29:41.080 --> 00:29:43.630 align:start position:0%
So that's its job and it will do that
for<00:29:41.240><c> Max</c><00:29:41.559><c> new</c><00:29:42.000><c> tokens</c><00:29:43.000><c> so</c><00:29:43.159><c> you</c><00:29:43.240><c> can</c><00:29:43.360><c> see</c><00:29:43.519><c> here</c>

00:29:43.630 --> 00:29:43.640 align:start position:0%
for Max new tokens so you can see here
 

00:29:43.640 --> 00:29:45.029 align:start position:0%
for Max new tokens so you can see here
on<00:29:43.760><c> the</c><00:29:43.880><c> bottom</c><00:29:44.399><c> there's</c><00:29:44.600><c> going</c><00:29:44.679><c> to</c><00:29:44.799><c> be</c><00:29:44.880><c> some</c>

00:29:45.029 --> 00:29:45.039 align:start position:0%
on the bottom there's going to be some
 

00:29:45.039 --> 00:29:47.389 align:start position:0%
on the bottom there's going to be some
stuff<00:29:45.320><c> here</c><00:29:45.880><c> but</c><00:29:46.000><c> on</c><00:29:46.120><c> the</c><00:29:46.279><c> bottom</c><00:29:46.840><c> whatever</c><00:29:47.120><c> is</c>

00:29:47.389 --> 00:29:47.399 align:start position:0%
stuff here but on the bottom whatever is
 

00:29:47.399 --> 00:29:50.430 align:start position:0%
stuff here but on the bottom whatever is
predicted<00:29:48.399><c> is</c><00:29:49.039><c> concatenated</c><00:29:49.760><c> on</c><00:29:49.919><c> top</c><00:29:50.080><c> of</c><00:29:50.200><c> the</c>

00:29:50.430 --> 00:29:50.440 align:start position:0%
predicted is concatenated on top of the
 

00:29:50.440 --> 00:29:53.029 align:start position:0%
predicted is concatenated on top of the
previous<00:29:51.120><c> idx</c><00:29:52.120><c> along</c><00:29:52.360><c> the</c><00:29:52.480><c> First</c><00:29:52.679><c> Dimension</c>

00:29:53.029 --> 00:29:53.039 align:start position:0%
previous idx along the First Dimension
 

00:29:53.039 --> 00:29:54.710 align:start position:0%
previous idx along the First Dimension
which<00:29:53.159><c> is</c><00:29:53.240><c> the</c><00:29:53.360><c> time</c><00:29:53.600><c> Dimension</c><00:29:54.200><c> to</c><00:29:54.360><c> create</c><00:29:54.600><c> a</c>

00:29:54.710 --> 00:29:54.720 align:start position:0%
which is the time Dimension to create a
 

00:29:54.720 --> 00:29:58.389 align:start position:0%
which is the time Dimension to create a
b<00:29:54.919><c> BYT</c><00:29:55.240><c> +</c><00:29:55.600><c> one</c><00:29:56.600><c> so</c><00:29:56.880><c> that</c><00:29:57.000><c> becomes</c><00:29:57.240><c> a</c><00:29:57.360><c> new</c><00:29:57.519><c> idx</c><00:29:58.240><c> so</c>

00:29:58.389 --> 00:29:58.399 align:start position:0%
b BYT + one so that becomes a new idx so
 

00:29:58.399 --> 00:30:00.430 align:start position:0%
b BYT + one so that becomes a new idx so
the<00:29:58.519><c> job</c><00:29:58.679><c> of</c><00:29:58.840><c> generate</c><00:29:59.200><c> is</c><00:29:59.320><c> to</c><00:29:59.440><c> take</c><00:29:59.559><c> a</c><00:29:59.720><c> b</c><00:29:59.919><c> BYT</c>

00:30:00.430 --> 00:30:00.440 align:start position:0%
the job of generate is to take a b BYT
 

00:30:00.440 --> 00:30:02.710 align:start position:0%
the job of generate is to take a b BYT
and<00:30:00.559><c> make</c><00:30:00.679><c> it</c><00:30:00.799><c> a</c><00:30:00.919><c> b</c><00:30:01.080><c> BYT</c><00:30:01.440><c> plus</c><00:30:01.600><c> 1</c><00:30:01.880><c> plus</c><00:30:02.080><c> 2</c><00:30:02.320><c> plus</c>

00:30:02.710 --> 00:30:02.720 align:start position:0%
and make it a b BYT plus 1 plus 2 plus
 

00:30:02.720 --> 00:30:05.750 align:start position:0%
and make it a b BYT plus 1 plus 2 plus
three<00:30:03.720><c> as</c><00:30:03.880><c> many</c><00:30:04.120><c> as</c><00:30:04.240><c> we</c><00:30:04.399><c> want</c><00:30:04.720><c> Max</c><00:30:05.000><c> new</c><00:30:05.200><c> tokens</c>

00:30:05.750 --> 00:30:05.760 align:start position:0%
three as many as we want Max new tokens
 

00:30:05.760 --> 00:30:08.350 align:start position:0%
three as many as we want Max new tokens
so<00:30:05.919><c> this</c><00:30:06.039><c> is</c><00:30:06.120><c> the</c><00:30:06.320><c> generation</c><00:30:06.880><c> from</c><00:30:07.039><c> the</c><00:30:07.360><c> model</c>

00:30:08.350 --> 00:30:08.360 align:start position:0%
so this is the generation from the model
 

00:30:08.360 --> 00:30:10.029 align:start position:0%
so this is the generation from the model
now<00:30:08.600><c> inside</c><00:30:08.880><c> the</c><00:30:09.000><c> generation</c><00:30:09.480><c> what</c><00:30:09.840><c> what</c><00:30:09.919><c> are</c>

00:30:10.029 --> 00:30:10.039 align:start position:0%
now inside the generation what what are
 

00:30:10.039 --> 00:30:11.669 align:start position:0%
now inside the generation what what are
we<00:30:10.159><c> doing</c><00:30:10.840><c> we're</c><00:30:11.000><c> taking</c><00:30:11.200><c> the</c><00:30:11.320><c> current</c>

00:30:11.669 --> 00:30:11.679 align:start position:0%
we doing we're taking the current
 

00:30:11.679 --> 00:30:15.029 align:start position:0%
we doing we're taking the current
indices<00:30:12.679><c> we're</c><00:30:12.919><c> getting</c><00:30:13.240><c> the</c><00:30:13.480><c> predictions</c><00:30:14.480><c> so</c>

00:30:15.029 --> 00:30:15.039 align:start position:0%
indices we're getting the predictions so
 

00:30:15.039 --> 00:30:18.310 align:start position:0%
indices we're getting the predictions so
we<00:30:15.279><c> get</c><00:30:15.840><c> uh</c><00:30:16.000><c> those</c><00:30:16.200><c> are</c><00:30:16.360><c> in</c><00:30:16.440><c> the</c><00:30:16.559><c> low</c><00:30:17.120><c> jits</c><00:30:18.120><c> and</c>

00:30:18.310 --> 00:30:18.320 align:start position:0%
we get uh those are in the low jits and
 

00:30:18.320 --> 00:30:19.509 align:start position:0%
we get uh those are in the low jits and
then<00:30:18.640><c> the</c><00:30:18.760><c> loss</c><00:30:19.039><c> here</c><00:30:19.159><c> is</c><00:30:19.279><c> going</c><00:30:19.360><c> to</c><00:30:19.440><c> be</c>

00:30:19.509 --> 00:30:19.519 align:start position:0%
then the loss here is going to be
 

00:30:19.519 --> 00:30:21.509 align:start position:0%
then the loss here is going to be
ignored<00:30:20.120><c> because</c><00:30:20.600><c> um</c><00:30:20.880><c> we're</c><00:30:21.039><c> not</c><00:30:21.240><c> we're</c><00:30:21.360><c> not</c>

00:30:21.509 --> 00:30:21.519 align:start position:0%
ignored because um we're not we're not
 

00:30:21.519 --> 00:30:23.789 align:start position:0%
ignored because um we're not we're not
using<00:30:22.000><c> that</c><00:30:22.200><c> and</c><00:30:22.320><c> we</c><00:30:22.440><c> have</c><00:30:22.640><c> no</c><00:30:23.080><c> targets</c><00:30:23.679><c> that</c>

00:30:23.789 --> 00:30:23.799 align:start position:0%
using that and we have no targets that
 

00:30:23.799 --> 00:30:25.509 align:start position:0%
using that and we have no targets that
are<00:30:23.919><c> sort</c><00:30:24.080><c> of</c><00:30:24.200><c> ground</c><00:30:24.519><c> truth</c><00:30:24.960><c> targets</c><00:30:25.399><c> that</c>

00:30:25.509 --> 00:30:25.519 align:start position:0%
are sort of ground truth targets that
 

00:30:25.519 --> 00:30:28.630 align:start position:0%
are sort of ground truth targets that
we're<00:30:25.640><c> going</c><00:30:25.760><c> to</c><00:30:25.880><c> be</c><00:30:26.440><c> comparing</c><00:30:26.919><c> with</c>

00:30:28.630 --> 00:30:28.640 align:start position:0%
we're going to be comparing with
 

00:30:28.640 --> 00:30:30.470 align:start position:0%
we're going to be comparing with
then<00:30:28.799><c> once</c><00:30:28.960><c> we</c><00:30:29.080><c> get</c><00:30:29.200><c> the</c><00:30:29.279><c> logits</c><00:30:29.960><c> we</c><00:30:30.080><c> are</c><00:30:30.240><c> only</c>

00:30:30.470 --> 00:30:30.480 align:start position:0%
then once we get the logits we are only
 

00:30:30.480 --> 00:30:33.389 align:start position:0%
then once we get the logits we are only
focusing<00:30:30.880><c> on</c><00:30:31.039><c> the</c><00:30:31.279><c> last</c><00:30:31.799><c> step</c><00:30:32.640><c> so</c><00:30:33.039><c> instead</c><00:30:33.279><c> of</c>

00:30:33.389 --> 00:30:33.399 align:start position:0%
focusing on the last step so instead of
 

00:30:33.399 --> 00:30:36.389 align:start position:0%
focusing on the last step so instead of
a<00:30:33.519><c> b</c><00:30:33.720><c> by</c><00:30:33.880><c> T</c><00:30:34.200><c> by</c><00:30:34.360><c> C</c><00:30:34.840><c> we're</c><00:30:35.039><c> going</c><00:30:35.159><c> to</c><00:30:35.320><c> pluck</c><00:30:35.600><c> out</c>

00:30:36.389 --> 00:30:36.399 align:start position:0%
a b by T by C we're going to pluck out
 

00:30:36.399 --> 00:30:38.710 align:start position:0%
a b by T by C we're going to pluck out
the<00:30:36.840><c> negative-1</c><00:30:37.600><c> the</c><00:30:37.840><c> last</c><00:30:38.120><c> element</c><00:30:38.480><c> in</c><00:30:38.559><c> the</c>

00:30:38.710 --> 00:30:38.720 align:start position:0%
the negative-1 the last element in the
 

00:30:38.720 --> 00:30:40.669 align:start position:0%
the negative-1 the last element in the
time<00:30:39.120><c> Dimension</c><00:30:40.120><c> because</c><00:30:40.320><c> those</c><00:30:40.440><c> are</c><00:30:40.559><c> the</c>

00:30:40.669 --> 00:30:40.679 align:start position:0%
time Dimension because those are the
 

00:30:40.679 --> 00:30:42.950 align:start position:0%
time Dimension because those are the
predictions<00:30:41.039><c> for</c><00:30:41.240><c> what</c><00:30:41.360><c> comes</c><00:30:41.679><c> next</c><00:30:42.640><c> so</c><00:30:42.840><c> that</c>

00:30:42.950 --> 00:30:42.960 align:start position:0%
predictions for what comes next so that
 

00:30:42.960 --> 00:30:44.430 align:start position:0%
predictions for what comes next so that
gives<00:30:43.120><c> us</c><00:30:43.240><c> the</c><00:30:43.320><c> logits</c><00:30:44.080><c> which</c><00:30:44.200><c> we</c><00:30:44.320><c> then</c>

00:30:44.430 --> 00:30:44.440 align:start position:0%
gives us the logits which we then
 

00:30:44.440 --> 00:30:47.630 align:start position:0%
gives us the logits which we then
convert<00:30:44.720><c> to</c><00:30:45.000><c> probabilities</c><00:30:46.000><c> via</c><00:30:46.559><c> softmax</c><00:30:47.559><c> and</c>

00:30:47.630 --> 00:30:47.640 align:start position:0%
convert to probabilities via softmax and
 

00:30:47.640 --> 00:30:49.389 align:start position:0%
convert to probabilities via softmax and
then<00:30:47.720><c> we</c><00:30:47.799><c> use</c><00:30:47.960><c> tor.</c><00:30:48.360><c> multinomial</c><00:30:48.919><c> to</c><00:30:49.039><c> sample</c>

00:30:49.389 --> 00:30:49.399 align:start position:0%
then we use tor. multinomial to sample
 

00:30:49.399 --> 00:30:51.230 align:start position:0%
then we use tor. multinomial to sample
from<00:30:49.600><c> those</c><00:30:49.799><c> probabilities</c><00:30:50.720><c> and</c><00:30:50.840><c> we</c><00:30:50.960><c> ask</c>

00:30:51.230 --> 00:30:51.240 align:start position:0%
from those probabilities and we ask
 

00:30:51.240 --> 00:30:54.710 align:start position:0%
from those probabilities and we ask
pytorch<00:30:51.600><c> to</c><00:30:51.720><c> give</c><00:30:51.799><c> us</c><00:30:52.159><c> one</c><00:30:52.880><c> sample</c><00:30:53.880><c> and</c><00:30:54.000><c> so</c><00:30:54.200><c> idx</c>

00:30:54.710 --> 00:30:54.720 align:start position:0%
pytorch to give us one sample and so idx
 

00:30:54.720 --> 00:30:57.549 align:start position:0%
pytorch to give us one sample and so idx
next<00:30:55.120><c> will</c><00:30:55.320><c> become</c><00:30:55.639><c> a</c><00:30:55.799><c> b</c><00:30:56.039><c> by</c><00:30:56.240><c> one</c><00:30:57.159><c> because</c><00:30:57.399><c> in</c>

00:30:57.549 --> 00:30:57.559 align:start position:0%
next will become a b by one because in
 

00:30:57.559 --> 00:31:00.149 align:start position:0%
next will become a b by one because in
each<00:30:58.279><c> uh</c><00:30:58.440><c> one</c><00:30:58.559><c> of</c><00:30:58.720><c> the</c><00:30:58.880><c> batch</c><00:30:59.240><c> Dimensions</c>

00:31:00.149 --> 00:31:00.159 align:start position:0%
each uh one of the batch Dimensions
 

00:31:00.159 --> 00:31:01.430 align:start position:0%
each uh one of the batch Dimensions
we're<00:31:00.320><c> going</c><00:31:00.440><c> to</c><00:31:00.559><c> have</c><00:31:00.639><c> a</c><00:31:00.760><c> single</c><00:31:01.080><c> prediction</c>

00:31:01.430 --> 00:31:01.440 align:start position:0%
we're going to have a single prediction
 

00:31:01.440 --> 00:31:03.629 align:start position:0%
we're going to have a single prediction
for<00:31:01.600><c> what</c><00:31:01.720><c> comes</c><00:31:02.000><c> next</c><00:31:02.559><c> so</c><00:31:02.720><c> this</c><00:31:02.840><c> num</c><00:31:03.159><c> samples</c>

00:31:03.629 --> 00:31:03.639 align:start position:0%
for what comes next so this num samples
 

00:31:03.639 --> 00:31:06.310 align:start position:0%
for what comes next so this num samples
equals<00:31:04.000><c> one</c><00:31:04.600><c> will</c><00:31:04.880><c> make</c><00:31:05.080><c> this</c><00:31:05.240><c> be</c><00:31:05.440><c> a</c>

00:31:06.310 --> 00:31:06.320 align:start position:0%
equals one will make this be a
 

00:31:06.320 --> 00:31:08.310 align:start position:0%
equals one will make this be a
one<00:31:07.320><c> and</c><00:31:07.399><c> then</c><00:31:07.480><c> we're</c><00:31:07.639><c> going</c><00:31:07.760><c> to</c><00:31:07.919><c> take</c><00:31:08.120><c> those</c>

00:31:08.310 --> 00:31:08.320 align:start position:0%
one and then we're going to take those
 

00:31:08.320 --> 00:31:10.509 align:start position:0%
one and then we're going to take those
integers<00:31:09.279><c> that</c><00:31:09.440><c> come</c><00:31:09.679><c> from</c><00:31:09.840><c> the</c><00:31:10.000><c> sampling</c>

00:31:10.509 --> 00:31:10.519 align:start position:0%
integers that come from the sampling
 

00:31:10.519 --> 00:31:11.789 align:start position:0%
integers that come from the sampling
process<00:31:10.919><c> according</c><00:31:11.200><c> to</c><00:31:11.320><c> the</c><00:31:11.399><c> probability</c>

00:31:11.789 --> 00:31:11.799 align:start position:0%
process according to the probability
 

00:31:11.799 --> 00:31:13.750 align:start position:0%
process according to the probability
distribution<00:31:12.279><c> given</c><00:31:12.559><c> here</c><00:31:13.480><c> and</c><00:31:13.600><c> those</c>

00:31:13.750 --> 00:31:13.760 align:start position:0%
distribution given here and those
 

00:31:13.760 --> 00:31:15.830 align:start position:0%
distribution given here and those
integers<00:31:14.200><c> got</c><00:31:14.360><c> just</c><00:31:14.720><c> concatenated</c><00:31:15.440><c> on</c><00:31:15.600><c> top</c><00:31:15.720><c> of</c>

00:31:15.830 --> 00:31:15.840 align:start position:0%
integers got just concatenated on top of
 

00:31:15.840 --> 00:31:17.870 align:start position:0%
integers got just concatenated on top of
the<00:31:15.919><c> current</c><00:31:16.399><c> sort</c><00:31:16.600><c> of</c><00:31:16.760><c> like</c><00:31:16.960><c> running</c><00:31:17.480><c> stream</c>

00:31:17.870 --> 00:31:17.880 align:start position:0%
the current sort of like running stream
 

00:31:17.880 --> 00:31:20.710 align:start position:0%
the current sort of like running stream
of<00:31:18.159><c> integers</c><00:31:19.159><c> and</c><00:31:19.360><c> this</c><00:31:19.480><c> gives</c><00:31:19.639><c> us</c><00:31:19.760><c> a</c><00:31:19.880><c> b</c><00:31:20.039><c> BYT</c><00:31:20.320><c> +</c>

00:31:20.710 --> 00:31:20.720 align:start position:0%
of integers and this gives us a b BYT +
 

00:31:20.720 --> 00:31:24.029 align:start position:0%
of integers and this gives us a b BYT +
one<00:31:21.720><c> and</c><00:31:21.840><c> then</c><00:31:21.960><c> we</c><00:31:22.080><c> can</c><00:31:22.320><c> return</c><00:31:22.559><c> that</c><00:31:23.440><c> now</c><00:31:23.840><c> one</c>

00:31:24.029 --> 00:31:24.039 align:start position:0%
one and then we can return that now one
 

00:31:24.039 --> 00:31:26.870 align:start position:0%
one and then we can return that now one
thing<00:31:24.279><c> here</c><00:31:24.639><c> is</c><00:31:25.200><c> you</c><00:31:25.360><c> see</c><00:31:25.559><c> how</c><00:31:25.720><c> I'm</c><00:31:25.919><c> calling</c>

00:31:26.870 --> 00:31:26.880 align:start position:0%
thing here is you see how I'm calling
 

00:31:26.880 --> 00:31:29.549 align:start position:0%
thing here is you see how I'm calling
self<00:31:27.240><c> of</c><00:31:27.440><c> idx</c><00:31:28.320><c> which</c><00:31:28.480><c> will</c><00:31:28.760><c> end</c><00:31:28.919><c> up</c><00:31:29.080><c> going</c><00:31:29.279><c> to</c>

00:31:29.549 --> 00:31:29.559 align:start position:0%
self of idx which will end up going to
 

00:31:29.559 --> 00:31:31.669 align:start position:0%
self of idx which will end up going to
the<00:31:29.679><c> forward</c><00:31:30.080><c> function</c><00:31:31.039><c> I'm</c><00:31:31.200><c> not</c><00:31:31.360><c> providing</c>

00:31:31.669 --> 00:31:31.679 align:start position:0%
the forward function I'm not providing
 

00:31:31.679 --> 00:31:33.950 align:start position:0%
the forward function I'm not providing
any<00:31:31.880><c> Targets</c><00:31:32.799><c> So</c><00:31:32.960><c> currently</c><00:31:33.399><c> this</c><00:31:33.480><c> would</c><00:31:33.679><c> give</c>

00:31:33.950 --> 00:31:33.960 align:start position:0%
any Targets So currently this would give
 

00:31:33.960 --> 00:31:36.629 align:start position:0%
any Targets So currently this would give
an<00:31:34.120><c> error</c><00:31:34.480><c> because</c><00:31:34.760><c> targets</c><00:31:35.399><c> is</c><00:31:35.679><c> uh</c><00:31:35.880><c> is</c><00:31:36.360><c> uh</c>

00:31:36.629 --> 00:31:36.639 align:start position:0%
an error because targets is uh is uh
 

00:31:36.639 --> 00:31:39.110 align:start position:0%
an error because targets is uh is uh
sort<00:31:36.840><c> of</c><00:31:37.000><c> like</c><00:31:37.159><c> not</c><00:31:37.360><c> given</c><00:31:38.320><c> so</c><00:31:38.519><c> targets</c><00:31:38.919><c> has</c><00:31:39.000><c> to</c>

00:31:39.110 --> 00:31:39.120 align:start position:0%
sort of like not given so targets has to
 

00:31:39.120 --> 00:31:41.310 align:start position:0%
sort of like not given so targets has to
be<00:31:39.279><c> optional</c><00:31:40.039><c> so</c><00:31:40.240><c> targets</c><00:31:40.559><c> is</c><00:31:40.720><c> none</c><00:31:41.159><c> by</c>

00:31:41.310 --> 00:31:41.320 align:start position:0%
be optional so targets is none by
 

00:31:41.320 --> 00:31:44.549 align:start position:0%
be optional so targets is none by
default<00:31:42.279><c> and</c><00:31:42.399><c> then</c><00:31:42.559><c> if</c><00:31:42.720><c> targets</c><00:31:43.440><c> is</c><00:31:43.600><c> none</c><00:31:44.399><c> then</c>

00:31:44.549 --> 00:31:44.559 align:start position:0%
default and then if targets is none then
 

00:31:44.559 --> 00:31:47.470 align:start position:0%
default and then if targets is none then
there's<00:31:44.799><c> no</c><00:31:45.240><c> loss</c><00:31:45.720><c> to</c><00:31:46.519><c> create</c><00:31:46.919><c> so</c><00:31:47.080><c> it's</c><00:31:47.240><c> just</c>

00:31:47.470 --> 00:31:47.480 align:start position:0%
there's no loss to create so it's just
 

00:31:47.480 --> 00:31:50.389 align:start position:0%
there's no loss to create so it's just
loss<00:31:47.760><c> is</c><00:31:47.919><c> none</c><00:31:48.760><c> but</c><00:31:48.960><c> else</c><00:31:49.960><c> all</c><00:31:50.080><c> of</c><00:31:50.240><c> this</c>

00:31:50.389 --> 00:31:50.399 align:start position:0%
loss is none but else all of this
 

00:31:50.399 --> 00:31:53.269 align:start position:0%
loss is none but else all of this
happens<00:31:50.720><c> and</c><00:31:50.840><c> we</c><00:31:50.919><c> can</c><00:31:51.080><c> create</c><00:31:51.399><c> a</c><00:31:52.000><c> loss</c><00:31:53.000><c> so</c><00:31:53.159><c> this</c>

00:31:53.269 --> 00:31:53.279 align:start position:0%
happens and we can create a loss so this
 

00:31:53.279 --> 00:31:56.070 align:start position:0%
happens and we can create a loss so this
will<00:31:53.480><c> make</c><00:31:53.600><c> it</c><00:31:53.799><c> so</c><00:31:54.600><c> um</c><00:31:55.600><c> if</c><00:31:55.720><c> we</c><00:31:55.840><c> have</c><00:31:56.000><c> the</c>

00:31:56.070 --> 00:31:56.080 align:start position:0%
will make it so um if we have the
 

00:31:56.080 --> 00:31:57.549 align:start position:0%
will make it so um if we have the
targets<00:31:56.440><c> we</c><00:31:56.600><c> provide</c><00:31:56.840><c> them</c><00:31:56.960><c> and</c><00:31:57.080><c> get</c><00:31:57.159><c> a</c><00:31:57.320><c> loss</c>

00:31:57.549 --> 00:31:57.559 align:start position:0%
targets we provide them and get a loss
 

00:31:57.559 --> 00:31:59.230 align:start position:0%
targets we provide them and get a loss
if<00:31:57.679><c> we</c><00:31:57.919><c> have</c><00:31:58.039><c> no</c><00:31:58.159><c> targets</c><00:31:58.720><c> it</c><00:31:58.799><c> will'll</c><00:31:59.039><c> just</c>

00:31:59.230 --> 00:31:59.240 align:start position:0%
if we have no targets it will'll just
 

00:31:59.240 --> 00:32:00.470 align:start position:0%
if we have no targets it will'll just
get<00:31:59.480><c> the</c>

00:32:00.470 --> 00:32:00.480 align:start position:0%
get the
 

00:32:00.480 --> 00:32:02.950 align:start position:0%
get the
loits<00:32:01.480><c> so</c><00:32:01.760><c> this</c><00:32:02.000><c> here</c><00:32:02.240><c> will</c><00:32:02.480><c> generate</c><00:32:02.799><c> from</c>

00:32:02.950 --> 00:32:02.960 align:start position:0%
loits so this here will generate from
 

00:32:02.960 --> 00:32:06.830 align:start position:0%
loits so this here will generate from
the<00:32:03.320><c> model</c><00:32:04.320><c> um</c><00:32:05.279><c> and</c><00:32:05.639><c> let's</c><00:32:05.919><c> take</c><00:32:06.120><c> that</c><00:32:06.279><c> for</c><00:32:06.639><c> a</c>

00:32:06.830 --> 00:32:06.840 align:start position:0%
the model um and let's take that for a
 

00:32:06.840 --> 00:32:08.509 align:start position:0%
the model um and let's take that for a
ride

00:32:08.509 --> 00:32:08.519 align:start position:0%
ride
 

00:32:08.519 --> 00:32:11.870 align:start position:0%
ride
now<00:32:09.679><c> oops</c><00:32:10.679><c> so</c><00:32:10.880><c> I</c><00:32:11.000><c> have</c><00:32:11.120><c> another</c><00:32:11.360><c> code</c><00:32:11.559><c> chunk</c>

00:32:11.870 --> 00:32:11.880 align:start position:0%
now oops so I have another code chunk
 

00:32:11.880 --> 00:32:13.909 align:start position:0%
now oops so I have another code chunk
here<00:32:12.200><c> which</c><00:32:12.320><c> will</c><00:32:12.519><c> generate</c><00:32:12.799><c> for</c><00:32:13.000><c> the</c><00:32:13.159><c> model</c>

00:32:13.909 --> 00:32:13.919 align:start position:0%
here which will generate for the model
 

00:32:13.919 --> 00:32:15.789 align:start position:0%
here which will generate for the model
from<00:32:14.080><c> the</c><00:32:14.200><c> model</c><00:32:14.880><c> and</c><00:32:15.159><c> okay</c><00:32:15.320><c> this</c><00:32:15.440><c> is</c><00:32:15.559><c> kind</c><00:32:15.639><c> of</c>

00:32:15.789 --> 00:32:15.799 align:start position:0%
from the model and okay this is kind of
 

00:32:15.799 --> 00:32:18.310 align:start position:0%
from the model and okay this is kind of
crazy<00:32:16.120><c> so</c><00:32:16.279><c> maybe</c><00:32:16.559><c> let</c><00:32:16.720><c> me</c><00:32:17.639><c> let</c><00:32:17.760><c> me</c><00:32:17.919><c> break</c><00:32:18.120><c> this</c>

00:32:18.310 --> 00:32:18.320 align:start position:0%
crazy so maybe let me let me break this
 

00:32:18.320 --> 00:32:23.870 align:start position:0%
crazy so maybe let me let me break this
down<00:32:19.320><c> so</c><00:32:19.519><c> these</c><00:32:19.639><c> are</c><00:32:19.840><c> the</c><00:32:20.039><c> idx</c>

00:32:23.870 --> 00:32:23.880 align:start position:0%
 
 

00:32:23.880 --> 00:32:26.909 align:start position:0%
 
right<00:32:24.880><c> I'm</c><00:32:25.039><c> creating</c><00:32:25.440><c> a</c><00:32:25.760><c> batch</c><00:32:26.399><c> will</c><00:32:26.559><c> be</c><00:32:26.760><c> just</c>

00:32:26.909 --> 00:32:26.919 align:start position:0%
right I'm creating a batch will be just
 

00:32:26.919 --> 00:32:30.029 align:start position:0%
right I'm creating a batch will be just
one<00:32:27.600><c> time</c><00:32:28.039><c> will</c><00:32:28.200><c> be</c><00:32:28.360><c> just</c><00:32:28.720><c> one</c><00:32:29.720><c> so</c><00:32:29.919><c> I'm</c>

00:32:30.029 --> 00:32:30.039 align:start position:0%
one time will be just one so I'm
 

00:32:30.039 --> 00:32:32.149 align:start position:0%
one time will be just one so I'm
creating<00:32:30.320><c> a</c><00:32:30.480><c> little</c><00:32:30.720><c> one</c><00:32:30.960><c> by</c><00:32:31.159><c> one</c><00:32:31.360><c> tensor</c><00:32:32.039><c> and</c>

00:32:32.149 --> 00:32:32.159 align:start position:0%
creating a little one by one tensor and
 

00:32:32.159 --> 00:32:35.070 align:start position:0%
creating a little one by one tensor and
it's<00:32:32.320><c> holding</c><00:32:32.760><c> a</c><00:32:33.200><c> zero</c><00:32:34.200><c> and</c><00:32:34.360><c> the</c><00:32:34.519><c> D</c><00:32:34.760><c> type</c><00:32:35.000><c> the</c>

00:32:35.070 --> 00:32:35.080 align:start position:0%
it's holding a zero and the D type the
 

00:32:35.080 --> 00:32:38.029 align:start position:0%
it's holding a zero and the D type the
data<00:32:35.360><c> type</c><00:32:35.639><c> is</c><00:32:36.080><c> uh</c><00:32:36.240><c> integer</c><00:32:37.240><c> so</c><00:32:37.480><c> zero</c><00:32:37.760><c> is</c><00:32:37.880><c> going</c>

00:32:38.029 --> 00:32:38.039 align:start position:0%
data type is uh integer so zero is going
 

00:32:38.039 --> 00:32:40.310 align:start position:0%
data type is uh integer so zero is going
to<00:32:38.120><c> be</c><00:32:38.279><c> how</c><00:32:38.399><c> we</c><00:32:38.600><c> kick</c><00:32:38.799><c> off</c><00:32:39.000><c> the</c><00:32:39.159><c> generation</c><00:32:40.159><c> and</c>

00:32:40.310 --> 00:32:40.320 align:start position:0%
to be how we kick off the generation and
 

00:32:40.320 --> 00:32:44.110 align:start position:0%
to be how we kick off the generation and
remember<00:32:40.720><c> that</c><00:32:40.919><c> zero</c><00:32:41.919><c> is</c><00:32:42.519><c> uh</c><00:32:42.880><c> is</c><00:32:43.159><c> the</c><00:32:43.399><c> element</c>

00:32:44.110 --> 00:32:44.120 align:start position:0%
remember that zero is uh is the element
 

00:32:44.120 --> 00:32:45.830 align:start position:0%
remember that zero is uh is the element
standing<00:32:44.399><c> for</c><00:32:44.559><c> a</c><00:32:44.679><c> new</c><00:32:44.840><c> line</c><00:32:45.120><c> character</c><00:32:45.679><c> so</c>

00:32:45.830 --> 00:32:45.840 align:start position:0%
standing for a new line character so
 

00:32:45.840 --> 00:32:47.430 align:start position:0%
standing for a new line character so
it's<00:32:45.960><c> kind</c><00:32:46.039><c> of</c><00:32:46.159><c> like</c><00:32:46.279><c> a</c><00:32:46.360><c> reasonable</c><00:32:46.880><c> thing</c><00:32:47.120><c> to</c>

00:32:47.430 --> 00:32:47.440 align:start position:0%
it's kind of like a reasonable thing to
 

00:32:47.440 --> 00:32:49.029 align:start position:0%
it's kind of like a reasonable thing to
to<00:32:47.600><c> feed</c><00:32:47.840><c> in</c><00:32:48.039><c> as</c><00:32:48.159><c> the</c><00:32:48.320><c> very</c><00:32:48.519><c> first</c><00:32:48.760><c> character</c>

00:32:49.029 --> 00:32:49.039 align:start position:0%
to feed in as the very first character
 

00:32:49.039 --> 00:32:51.509 align:start position:0%
to feed in as the very first character
in<00:32:49.159><c> a</c><00:32:49.360><c> sequence</c><00:32:50.360><c> to</c><00:32:50.480><c> be</c><00:32:50.639><c> the</c><00:32:50.760><c> new</c>

00:32:51.509 --> 00:32:51.519 align:start position:0%
in a sequence to be the new
 

00:32:51.519 --> 00:32:54.950 align:start position:0%
in a sequence to be the new
line<00:32:52.519><c> um</c><00:32:53.000><c> so</c><00:32:53.159><c> it's</c><00:32:53.320><c> going</c><00:32:53.440><c> to</c><00:32:53.559><c> be</c><00:32:53.840><c> idx</c><00:32:54.840><c> which</c>

00:32:54.950 --> 00:32:54.960 align:start position:0%
line um so it's going to be idx which
 

00:32:54.960 --> 00:32:56.350 align:start position:0%
line um so it's going to be idx which
we're<00:32:55.080><c> going</c><00:32:55.240><c> to</c><00:32:55.320><c> feed</c><00:32:55.519><c> in</c><00:32:55.720><c> here</c><00:32:56.120><c> then</c><00:32:56.240><c> we're</c>

00:32:56.350 --> 00:32:56.360 align:start position:0%
we're going to feed in here then we're
 

00:32:56.360 --> 00:32:58.750 align:start position:0%
we're going to feed in here then we're
going<00:32:56.519><c> to</c><00:32:56.639><c> ask</c><00:32:56.840><c> for</c><00:32:57.200><c> 100</c><00:32:57.440><c> tokens</c>

00:32:58.750 --> 00:32:58.760 align:start position:0%
going to ask for 100 tokens
 

00:32:58.760 --> 00:33:01.830 align:start position:0%
going to ask for 100 tokens
and<00:32:58.880><c> then.</c><00:32:59.480><c> generate</c><00:32:59.960><c> will</c><00:33:00.200><c> continue</c><00:33:00.840><c> that</c>

00:33:01.830 --> 00:33:01.840 align:start position:0%
and then. generate will continue that
 

00:33:01.840 --> 00:33:04.990 align:start position:0%
and then. generate will continue that
now<00:33:02.120><c> because</c><00:33:02.919><c> uh</c><00:33:03.760><c> generate</c><00:33:04.480><c> works</c><00:33:04.760><c> on</c><00:33:04.880><c> the</c>

00:33:04.990 --> 00:33:05.000 align:start position:0%
now because uh generate works on the
 

00:33:05.000 --> 00:33:07.269 align:start position:0%
now because uh generate works on the
level<00:33:05.200><c> of</c><00:33:05.360><c> batches</c><00:33:06.360><c> we</c><00:33:06.760><c> we</c><00:33:06.880><c> then</c><00:33:07.039><c> have</c><00:33:07.120><c> to</c>

00:33:07.269 --> 00:33:07.279 align:start position:0%
level of batches we we then have to
 

00:33:07.279 --> 00:33:09.909 align:start position:0%
level of batches we we then have to
index<00:33:07.600><c> into</c><00:33:07.760><c> the</c><00:33:07.880><c> zero</c><00:33:08.200><c> throw</c><00:33:09.000><c> to</c><00:33:09.440><c> basically</c>

00:33:09.909 --> 00:33:09.919 align:start position:0%
index into the zero throw to basically
 

00:33:09.919 --> 00:33:13.870 align:start position:0%
index into the zero throw to basically
unplug<00:33:10.720><c> the</c><00:33:11.039><c> um</c><00:33:11.880><c> the</c><00:33:12.159><c> single</c><00:33:13.159><c> batch</c><00:33:13.440><c> Dimension</c>

00:33:13.870 --> 00:33:13.880 align:start position:0%
unplug the um the single batch Dimension
 

00:33:13.880 --> 00:33:18.909 align:start position:0%
unplug the um the single batch Dimension
that<00:33:14.120><c> exists</c><00:33:15.120><c> and</c><00:33:15.320><c> then</c><00:33:16.200><c> that</c><00:33:16.399><c> gives</c><00:33:16.639><c> us</c><00:33:17.000><c> a</c><00:33:17.919><c> um</c>

00:33:18.909 --> 00:33:18.919 align:start position:0%
that exists and then that gives us a um
 

00:33:18.919 --> 00:33:20.909 align:start position:0%
that exists and then that gives us a um
time<00:33:19.159><c> steps</c><00:33:19.960><c> just</c><00:33:20.080><c> a</c><00:33:20.159><c> onedimensional</c><00:33:20.519><c> array</c>

00:33:20.909 --> 00:33:20.919 align:start position:0%
time steps just a onedimensional array
 

00:33:20.919 --> 00:33:23.430 align:start position:0%
time steps just a onedimensional array
of<00:33:21.000><c> all</c><00:33:21.120><c> the</c><00:33:21.399><c> indices</c><00:33:22.399><c> which</c><00:33:22.559><c> we</c><00:33:22.679><c> will</c><00:33:22.840><c> convert</c>

00:33:23.430 --> 00:33:23.440 align:start position:0%
of all the indices which we will convert
 

00:33:23.440 --> 00:33:26.269 align:start position:0%
of all the indices which we will convert
to<00:33:23.639><c> simple</c><00:33:24.080><c> python</c><00:33:24.440><c> list</c><00:33:25.440><c> from</c><00:33:25.799><c> pytorch</c>

00:33:26.269 --> 00:33:26.279 align:start position:0%
to simple python list from pytorch
 

00:33:26.279 --> 00:33:28.669 align:start position:0%
to simple python list from pytorch
tensor<00:33:27.240><c> so</c><00:33:27.519><c> that</c><00:33:27.880><c> that</c><00:33:28.000><c> can</c><00:33:28.120><c> feed</c><00:33:28.360><c> into</c><00:33:28.559><c> our</c>

00:33:28.669 --> 00:33:28.679 align:start position:0%
tensor so that that can feed into our
 

00:33:28.679 --> 00:33:32.310 align:start position:0%
tensor so that that can feed into our
decode<00:33:29.080><c> function</c><00:33:29.919><c> and</c><00:33:30.799><c> uh</c><00:33:31.799><c> convert</c><00:33:32.159><c> those</c>

00:33:32.310 --> 00:33:32.320 align:start position:0%
decode function and uh convert those
 

00:33:32.320 --> 00:33:34.909 align:start position:0%
decode function and uh convert those
integers<00:33:32.799><c> into</c><00:33:33.080><c> text</c><00:33:34.000><c> so</c><00:33:34.159><c> let</c><00:33:34.279><c> me</c><00:33:34.480><c> bring</c><00:33:34.679><c> this</c>

00:33:34.909 --> 00:33:34.919 align:start position:0%
integers into text so let me bring this
 

00:33:34.919 --> 00:33:37.190 align:start position:0%
integers into text so let me bring this
back<00:33:35.440><c> and</c><00:33:35.559><c> we're</c><00:33:35.760><c> generating</c><00:33:36.320><c> 100</c><00:33:36.559><c> tokens</c>

00:33:37.190 --> 00:33:37.200 align:start position:0%
back and we're generating 100 tokens
 

00:33:37.200 --> 00:33:37.950 align:start position:0%
back and we're generating 100 tokens
let's

00:33:37.950 --> 00:33:37.960 align:start position:0%
let's
 

00:33:37.960 --> 00:33:40.909 align:start position:0%
let's
run<00:33:38.960><c> and</c><00:33:39.720><c> uh</c><00:33:39.919><c> here's</c><00:33:40.120><c> the</c><00:33:40.240><c> generation</c><00:33:40.639><c> that</c><00:33:40.760><c> we</c>

00:33:40.909 --> 00:33:40.919 align:start position:0%
run and uh here's the generation that we
 

00:33:40.919 --> 00:33:43.389 align:start position:0%
run and uh here's the generation that we
achieved<00:33:41.919><c> so</c><00:33:42.200><c> obviously</c><00:33:42.559><c> it's</c><00:33:42.880><c> garbage</c><00:33:43.279><c> and</c>

00:33:43.389 --> 00:33:43.399 align:start position:0%
achieved so obviously it's garbage and
 

00:33:43.399 --> 00:33:44.789 align:start position:0%
achieved so obviously it's garbage and
the<00:33:43.480><c> reason</c><00:33:43.679><c> it's</c><00:33:43.880><c> garbage</c><00:33:44.320><c> is</c><00:33:44.480><c> because</c><00:33:44.720><c> this</c>

00:33:44.789 --> 00:33:44.799 align:start position:0%
the reason it's garbage is because this
 

00:33:44.799 --> 00:33:46.990 align:start position:0%
the reason it's garbage is because this
is<00:33:44.919><c> a</c><00:33:45.039><c> totally</c><00:33:45.360><c> random</c><00:33:45.679><c> model</c><00:33:46.440><c> so</c><00:33:46.639><c> next</c><00:33:46.880><c> up</c>

00:33:46.990 --> 00:33:47.000 align:start position:0%
is a totally random model so next up
 

00:33:47.000 --> 00:33:49.230 align:start position:0%
is a totally random model so next up
we're<00:33:47.120><c> going</c><00:33:47.240><c> to</c><00:33:47.399><c> want</c><00:33:47.519><c> to</c><00:33:47.799><c> train</c><00:33:48.080><c> this</c><00:33:48.240><c> model</c>

00:33:49.230 --> 00:33:49.240 align:start position:0%
we're going to want to train this model
 

00:33:49.240 --> 00:33:50.590 align:start position:0%
we're going to want to train this model
now<00:33:49.399><c> one</c><00:33:49.519><c> more</c><00:33:49.679><c> thing</c><00:33:49.799><c> I</c><00:33:49.880><c> wanted</c><00:33:50.080><c> to</c><00:33:50.159><c> point</c><00:33:50.360><c> out</c>

00:33:50.590 --> 00:33:50.600 align:start position:0%
now one more thing I wanted to point out
 

00:33:50.600 --> 00:33:53.470 align:start position:0%
now one more thing I wanted to point out
here<00:33:51.279><c> is</c><00:33:52.279><c> this</c><00:33:52.440><c> function</c><00:33:52.760><c> is</c><00:33:52.919><c> written</c><00:33:53.159><c> to</c><00:33:53.279><c> be</c>

00:33:53.470 --> 00:33:53.480 align:start position:0%
here is this function is written to be
 

00:33:53.480 --> 00:33:55.789 align:start position:0%
here is this function is written to be
General<00:33:54.399><c> but</c><00:33:54.600><c> it's</c><00:33:54.760><c> kind</c><00:33:54.880><c> of</c><00:33:55.000><c> like</c><00:33:55.200><c> ridiculous</c>

00:33:55.789 --> 00:33:55.799 align:start position:0%
General but it's kind of like ridiculous
 

00:33:55.799 --> 00:33:57.990 align:start position:0%
General but it's kind of like ridiculous
right<00:33:55.960><c> now</c><00:33:56.240><c> because</c>

00:33:57.990 --> 00:33:58.000 align:start position:0%
right now because
 

00:33:58.000 --> 00:33:59.789 align:start position:0%
right now because
we're<00:33:58.200><c> feeding</c><00:33:58.519><c> in</c><00:33:58.760><c> all</c><00:33:59.000><c> this</c><00:33:59.279><c> we're</c><00:33:59.440><c> building</c>

00:33:59.789 --> 00:33:59.799 align:start position:0%
we're feeding in all this we're building
 

00:33:59.799 --> 00:34:02.110 align:start position:0%
we're feeding in all this we're building
out<00:34:00.000><c> this</c><00:34:00.200><c> context</c><00:34:00.960><c> and</c><00:34:01.080><c> we're</c><00:34:01.399><c> concatenating</c>

00:34:02.110 --> 00:34:02.120 align:start position:0%
out this context and we're concatenating
 

00:34:02.120 --> 00:34:05.029 align:start position:0%
out this context and we're concatenating
it<00:34:02.320><c> all</c><00:34:02.880><c> and</c><00:34:03.000><c> we're</c><00:34:03.200><c> always</c><00:34:03.480><c> feeding</c><00:34:03.840><c> it</c><00:34:04.399><c> all</c>

00:34:05.029 --> 00:34:05.039 align:start position:0%
it all and we're always feeding it all
 

00:34:05.039 --> 00:34:07.590 align:start position:0%
it all and we're always feeding it all
into<00:34:05.240><c> the</c><00:34:05.880><c> model</c><00:34:06.880><c> but</c><00:34:07.240><c> that's</c><00:34:07.360><c> kind</c><00:34:07.480><c> of</c>

00:34:07.590 --> 00:34:07.600 align:start position:0%
into the model but that's kind of
 

00:34:07.600 --> 00:34:09.030 align:start position:0%
into the model but that's kind of
ridiculous<00:34:08.119><c> because</c><00:34:08.359><c> this</c><00:34:08.480><c> is</c><00:34:08.599><c> just</c><00:34:08.720><c> a</c><00:34:08.800><c> simple</c>

00:34:09.030 --> 00:34:09.040 align:start position:0%
ridiculous because this is just a simple
 

00:34:09.040 --> 00:34:11.109 align:start position:0%
ridiculous because this is just a simple
Byram<00:34:09.480><c> model</c><00:34:09.879><c> so</c><00:34:10.040><c> to</c><00:34:10.200><c> make</c><00:34:10.560><c> for</c><00:34:10.679><c> example</c><00:34:11.000><c> this</c>

00:34:11.109 --> 00:34:11.119 align:start position:0%
Byram model so to make for example this
 

00:34:11.119 --> 00:34:14.389 align:start position:0%
Byram model so to make for example this
prediction<00:34:11.480><c> about</c><00:34:11.800><c> K</c><00:34:12.679><c> we</c><00:34:12.800><c> only</c><00:34:12.960><c> needed</c><00:34:13.320><c> this</c><00:34:13.520><c> W</c>

00:34:14.389 --> 00:34:14.399 align:start position:0%
prediction about K we only needed this W
 

00:34:14.399 --> 00:34:15.710 align:start position:0%
prediction about K we only needed this W
but<00:34:14.560><c> actually</c><00:34:14.800><c> what</c><00:34:14.879><c> we</c><00:34:15.000><c> fed</c><00:34:15.200><c> into</c><00:34:15.359><c> the</c><00:34:15.480><c> model</c>

00:34:15.710 --> 00:34:15.720 align:start position:0%
but actually what we fed into the model
 

00:34:15.720 --> 00:34:18.030 align:start position:0%
but actually what we fed into the model
is<00:34:15.839><c> we</c><00:34:15.960><c> fed</c><00:34:16.159><c> the</c><00:34:16.320><c> entire</c><00:34:16.720><c> sequence</c><00:34:17.679><c> and</c><00:34:17.839><c> then</c>

00:34:18.030 --> 00:34:18.040 align:start position:0%
is we fed the entire sequence and then
 

00:34:18.040 --> 00:34:20.430 align:start position:0%
is we fed the entire sequence and then
we<00:34:18.200><c> only</c><00:34:18.440><c> looked</c><00:34:18.720><c> at</c><00:34:18.879><c> the</c><00:34:19.040><c> very</c><00:34:19.320><c> last</c><00:34:19.639><c> piece</c>

00:34:20.430 --> 00:34:20.440 align:start position:0%
we only looked at the very last piece
 

00:34:20.440 --> 00:34:23.270 align:start position:0%
we only looked at the very last piece
and<00:34:20.800><c> predicted</c><00:34:21.280><c> K</c><00:34:22.280><c> so</c><00:34:22.599><c> the</c><00:34:22.720><c> only</c><00:34:22.879><c> reason</c><00:34:23.119><c> I'm</c>

00:34:23.270 --> 00:34:23.280 align:start position:0%
and predicted K so the only reason I'm
 

00:34:23.280 --> 00:34:25.430 align:start position:0%
and predicted K so the only reason I'm
writing<00:34:23.520><c> it</c><00:34:23.720><c> in</c><00:34:23.919><c> this</c><00:34:24.119><c> way</c><00:34:24.399><c> is</c><00:34:24.599><c> because</c><00:34:25.280><c> right</c>

00:34:25.430 --> 00:34:25.440 align:start position:0%
writing it in this way is because right
 

00:34:25.440 --> 00:34:27.510 align:start position:0%
writing it in this way is because right
now<00:34:25.599><c> this</c><00:34:25.720><c> is</c><00:34:25.800><c> a</c><00:34:25.919><c> byr</c><00:34:26.359><c> model</c><00:34:27.040><c> but</c><00:34:27.159><c> I'd</c><00:34:27.320><c> like</c><00:34:27.440><c> to</c>

00:34:27.510 --> 00:34:27.520 align:start position:0%
now this is a byr model but I'd like to
 

00:34:27.520 --> 00:34:29.389 align:start position:0%
now this is a byr model but I'd like to
keep<00:34:27.720><c> keep</c><00:34:27.879><c> this</c><00:34:28.000><c> function</c><00:34:28.440><c> fixed</c><00:34:29.040><c> and</c><00:34:29.240><c> I'd</c>

00:34:29.389 --> 00:34:29.399 align:start position:0%
keep keep this function fixed and I'd
 

00:34:29.399 --> 00:34:32.589 align:start position:0%
keep keep this function fixed and I'd
like<00:34:29.520><c> it</c><00:34:29.639><c> to</c><00:34:29.800><c> work</c><00:34:30.599><c> um</c><00:34:31.000><c> later</c><00:34:31.919><c> when</c><00:34:32.399><c> our</c>

00:34:32.589 --> 00:34:32.599 align:start position:0%
like it to work um later when our
 

00:34:32.599 --> 00:34:35.669 align:start position:0%
like it to work um later when our
characters<00:34:33.079><c> actually</c><00:34:34.079><c> um</c><00:34:34.480><c> basically</c><00:34:35.159><c> look</c>

00:34:35.669 --> 00:34:35.679 align:start position:0%
characters actually um basically look
 

00:34:35.679 --> 00:34:37.669 align:start position:0%
characters actually um basically look
further<00:34:36.000><c> in</c><00:34:36.119><c> the</c><00:34:36.240><c> history</c><00:34:37.119><c> and</c><00:34:37.200><c> so</c><00:34:37.399><c> right</c><00:34:37.520><c> now</c>

00:34:37.669 --> 00:34:37.679 align:start position:0%
further in the history and so right now
 

00:34:37.679 --> 00:34:39.430 align:start position:0%
further in the history and so right now
the<00:34:37.800><c> history</c><00:34:38.079><c> is</c><00:34:38.240><c> not</c><00:34:38.440><c> used</c><00:34:38.800><c> so</c><00:34:39.000><c> this</c><00:34:39.119><c> looks</c>

00:34:39.430 --> 00:34:39.440 align:start position:0%
the history is not used so this looks
 

00:34:39.440 --> 00:34:42.310 align:start position:0%
the history is not used so this looks
silly<00:34:40.359><c> uh</c><00:34:40.520><c> but</c><00:34:40.760><c> eventually</c><00:34:41.159><c> the</c><00:34:41.280><c> history</c><00:34:42.079><c> will</c>

00:34:42.310 --> 00:34:42.320 align:start position:0%
silly uh but eventually the history will
 

00:34:42.320 --> 00:34:44.629 align:start position:0%
silly uh but eventually the history will
be<00:34:42.480><c> used</c><00:34:43.159><c> and</c><00:34:43.280><c> so</c><00:34:43.480><c> that's</c><00:34:43.679><c> why</c><00:34:43.839><c> we</c><00:34:43.960><c> want</c><00:34:44.079><c> to</c><00:34:44.520><c> uh</c>

00:34:44.629 --> 00:34:44.639 align:start position:0%
be used and so that's why we want to uh
 

00:34:44.639 --> 00:34:46.510 align:start position:0%
be used and so that's why we want to uh
do<00:34:44.760><c> it</c><00:34:44.919><c> this</c><00:34:45.079><c> way</c><00:34:45.639><c> so</c><00:34:45.800><c> just</c><00:34:45.919><c> a</c><00:34:46.040><c> quick</c><00:34:46.240><c> comment</c>

00:34:46.510 --> 00:34:46.520 align:start position:0%
do it this way so just a quick comment
 

00:34:46.520 --> 00:34:49.589 align:start position:0%
do it this way so just a quick comment
on<00:34:46.720><c> that</c><00:34:47.599><c> so</c><00:34:47.839><c> now</c><00:34:48.240><c> we</c><00:34:48.359><c> see</c><00:34:48.560><c> that</c><00:34:48.720><c> this</c><00:34:48.839><c> is</c><00:34:49.240><c> um</c>

00:34:49.589 --> 00:34:49.599 align:start position:0%
on that so now we see that this is um
 

00:34:49.599 --> 00:34:51.750 align:start position:0%
on that so now we see that this is um
random<00:34:50.240><c> so</c><00:34:50.480><c> let's</c><00:34:50.760><c> train</c><00:34:51.040><c> the</c><00:34:51.159><c> model</c><00:34:51.440><c> so</c><00:34:51.599><c> it</c>

00:34:51.750 --> 00:34:51.760 align:start position:0%
random so let's train the model so it
 

00:34:51.760 --> 00:34:53.950 align:start position:0%
random so let's train the model so it
becomes<00:34:52.000><c> a</c><00:34:52.119><c> bit</c><00:34:52.480><c> less</c><00:34:52.679><c> random</c><00:34:53.520><c> okay</c><00:34:53.679><c> let's</c><00:34:53.839><c> Now</c>

00:34:53.950 --> 00:34:53.960 align:start position:0%
becomes a bit less random okay let's Now
 

00:34:53.960 --> 00:34:55.950 align:start position:0%
becomes a bit less random okay let's Now
train<00:34:54.200><c> the</c><00:34:54.320><c> model</c><00:34:55.159><c> so</c><00:34:55.359><c> first</c><00:34:55.599><c> what</c><00:34:55.720><c> I'm</c><00:34:55.800><c> going</c>

00:34:55.950 --> 00:34:55.960 align:start position:0%
train the model so first what I'm going
 

00:34:55.960 --> 00:34:57.950 align:start position:0%
train the model so first what I'm going
to<00:34:56.079><c> do</c><00:34:56.200><c> is</c><00:34:56.320><c> I'm</c><00:34:56.440><c> going</c><00:34:56.560><c> to</c><00:34:56.720><c> create</c><00:34:57.079><c> a</c><00:34:57.280><c> pyour</c>

00:34:57.950 --> 00:34:57.960 align:start position:0%
to do is I'm going to create a pyour
 

00:34:57.960 --> 00:35:00.829 align:start position:0%
to do is I'm going to create a pyour
optimization<00:34:58.760><c> object</c><00:34:59.760><c> so</c><00:35:00.000><c> here</c><00:35:00.280><c> we</c><00:35:00.400><c> are</c><00:35:00.520><c> using</c>

00:35:00.829 --> 00:35:00.839 align:start position:0%
optimization object so here we are using
 

00:35:00.839 --> 00:35:05.030 align:start position:0%
optimization object so here we are using
the<00:35:01.400><c> optimizer</c><00:35:02.400><c> ATM</c><00:35:03.040><c> W</c><00:35:04.040><c> um</c><00:35:04.400><c> now</c><00:35:04.599><c> in</c><00:35:04.680><c> a</c><00:35:04.800><c> make</c>

00:35:05.030 --> 00:35:05.040 align:start position:0%
the optimizer ATM W um now in a make
 

00:35:05.040 --> 00:35:06.750 align:start position:0%
the optimizer ATM W um now in a make
more<00:35:05.200><c> series</c><00:35:05.480><c> we've</c><00:35:05.720><c> only</c><00:35:05.880><c> ever</c><00:35:06.040><c> use</c><00:35:06.320><c> tastic</c>

00:35:06.750 --> 00:35:06.760 align:start position:0%
more series we've only ever use tastic
 

00:35:06.760 --> 00:35:08.310 align:start position:0%
more series we've only ever use tastic
gradi<00:35:06.960><c> in</c><00:35:07.079><c> descent</c><00:35:07.520><c> the</c><00:35:07.640><c> simplest</c><00:35:08.000><c> possible</c>

00:35:08.310 --> 00:35:08.320 align:start position:0%
gradi in descent the simplest possible
 

00:35:08.320 --> 00:35:10.109 align:start position:0%
gradi in descent the simplest possible
Optimizer<00:35:09.040><c> which</c><00:35:09.160><c> you</c><00:35:09.240><c> can</c><00:35:09.440><c> get</c><00:35:09.599><c> using</c><00:35:10.000><c> the</c>

00:35:10.109 --> 00:35:10.119 align:start position:0%
Optimizer which you can get using the
 

00:35:10.119 --> 00:35:12.550 align:start position:0%
Optimizer which you can get using the
SGD<00:35:10.640><c> instead</c><00:35:11.560><c> but</c><00:35:11.680><c> I</c><00:35:11.760><c> want</c><00:35:11.880><c> to</c><00:35:12.000><c> use</c><00:35:12.160><c> Adam</c><00:35:12.480><c> which</c>

00:35:12.550 --> 00:35:12.560 align:start position:0%
SGD instead but I want to use Adam which
 

00:35:12.560 --> 00:35:14.190 align:start position:0%
SGD instead but I want to use Adam which
is<00:35:12.640><c> a</c><00:35:12.760><c> much</c><00:35:12.880><c> more</c><00:35:13.079><c> advanced</c><00:35:13.599><c> and</c><00:35:13.839><c> popular</c>

00:35:14.190 --> 00:35:14.200 align:start position:0%
is a much more advanced and popular
 

00:35:14.200 --> 00:35:16.589 align:start position:0%
is a much more advanced and popular
Optimizer<00:35:15.040><c> and</c><00:35:15.119><c> it</c><00:35:15.240><c> works</c><00:35:15.520><c> extremely</c><00:35:15.920><c> well</c>

00:35:16.589 --> 00:35:16.599 align:start position:0%
Optimizer and it works extremely well
 

00:35:16.599 --> 00:35:19.310 align:start position:0%
Optimizer and it works extremely well
for<00:35:17.280><c> uh</c><00:35:17.839><c> typical</c><00:35:18.359><c> good</c><00:35:18.800><c> setting</c><00:35:19.079><c> for</c><00:35:19.240><c> the</c>

00:35:19.310 --> 00:35:19.320 align:start position:0%
for uh typical good setting for the
 

00:35:19.320 --> 00:35:22.510 align:start position:0%
for uh typical good setting for the
learning<00:35:19.640><c> rate</c><00:35:19.800><c> is</c><00:35:19.920><c> roughly</c><00:35:20.200><c> 3</c><00:35:20.880><c> E4</c><00:35:21.880><c> uh</c><00:35:22.000><c> but</c><00:35:22.160><c> for</c>

00:35:22.510 --> 00:35:22.520 align:start position:0%
learning rate is roughly 3 E4 uh but for
 

00:35:22.520 --> 00:35:23.950 align:start position:0%
learning rate is roughly 3 E4 uh but for
very<00:35:22.720><c> very</c><00:35:22.920><c> small</c><00:35:23.160><c> networks</c><00:35:23.599><c> like</c><00:35:23.720><c> is</c><00:35:23.839><c> the</c>

00:35:23.950 --> 00:35:23.960 align:start position:0%
very very small networks like is the
 

00:35:23.960 --> 00:35:25.630 align:start position:0%
very very small networks like is the
case<00:35:24.240><c> here</c><00:35:24.680><c> you</c><00:35:24.800><c> can</c><00:35:24.920><c> get</c><00:35:25.079><c> away</c><00:35:25.280><c> with</c><00:35:25.440><c> much</c>

00:35:25.630 --> 00:35:25.640 align:start position:0%
case here you can get away with much
 

00:35:25.640 --> 00:35:28.190 align:start position:0%
case here you can get away with much
much<00:35:25.800><c> higher</c><00:35:26.040><c> learning</c><00:35:26.359><c> rates</c><00:35:26.760><c> R3</c><00:35:27.720><c> or</c><00:35:27.839><c> even</c>

00:35:28.190 --> 00:35:28.200 align:start position:0%
much higher learning rates R3 or even
 

00:35:28.200 --> 00:35:30.589 align:start position:0%
much higher learning rates R3 or even
higher<00:35:28.760><c> probably</c><00:35:29.760><c> but</c><00:35:29.960><c> let</c><00:35:30.079><c> me</c><00:35:30.240><c> create</c><00:35:30.480><c> the</c>

00:35:30.589 --> 00:35:30.599 align:start position:0%
higher probably but let me create the
 

00:35:30.599 --> 00:35:33.109 align:start position:0%
higher probably but let me create the
optimizer<00:35:31.400><c> object</c><00:35:32.400><c> which</c><00:35:32.520><c> will</c><00:35:32.720><c> basically</c>

00:35:33.109 --> 00:35:33.119 align:start position:0%
optimizer object which will basically
 

00:35:33.119 --> 00:35:35.109 align:start position:0%
optimizer object which will basically
take<00:35:33.400><c> the</c><00:35:33.560><c> gradients</c><00:35:34.240><c> and</c><00:35:34.560><c> uh</c><00:35:34.680><c> update</c><00:35:35.000><c> the</c>

00:35:35.109 --> 00:35:35.119 align:start position:0%
take the gradients and uh update the
 

00:35:35.119 --> 00:35:36.790 align:start position:0%
take the gradients and uh update the
parameters<00:35:35.720><c> using</c><00:35:35.960><c> the</c>

00:35:36.790 --> 00:35:36.800 align:start position:0%
parameters using the
 

00:35:36.800 --> 00:35:40.190 align:start position:0%
parameters using the
gradients<00:35:37.800><c> and</c><00:35:37.920><c> then</c><00:35:38.560><c> here</c><00:35:39.560><c> our</c><00:35:39.760><c> batch</c><00:35:40.000><c> size</c>

00:35:40.190 --> 00:35:40.200 align:start position:0%
gradients and then here our batch size
 

00:35:40.200 --> 00:35:41.790 align:start position:0%
gradients and then here our batch size
up<00:35:40.359><c> above</c><00:35:40.640><c> was</c><00:35:40.800><c> only</c><00:35:41.000><c> four</c><00:35:41.400><c> so</c><00:35:41.520><c> let</c><00:35:41.640><c> me</c>

00:35:41.790 --> 00:35:41.800 align:start position:0%
up above was only four so let me
 

00:35:41.800 --> 00:35:43.230 align:start position:0%
up above was only four so let me
actually<00:35:42.000><c> use</c><00:35:42.240><c> something</c><00:35:42.480><c> bigger</c><00:35:42.880><c> let's</c><00:35:43.040><c> say</c>

00:35:43.230 --> 00:35:43.240 align:start position:0%
actually use something bigger let's say
 

00:35:43.240 --> 00:35:46.589 align:start position:0%
actually use something bigger let's say
32<00:35:44.240><c> and</c><00:35:44.359><c> then</c><00:35:44.480><c> for</c><00:35:44.640><c> some</c><00:35:44.800><c> number</c><00:35:45.000><c> of</c><00:35:45.160><c> steps</c><00:35:45.960><c> um</c>

00:35:46.589 --> 00:35:46.599 align:start position:0%
32 and then for some number of steps um
 

00:35:46.599 --> 00:35:48.589 align:start position:0%
32 and then for some number of steps um
we<00:35:46.720><c> are</c><00:35:46.880><c> sampling</c><00:35:47.280><c> a</c><00:35:47.400><c> new</c><00:35:47.560><c> batch</c><00:35:47.720><c> of</c><00:35:47.880><c> data</c>

00:35:48.589 --> 00:35:48.599 align:start position:0%
we are sampling a new batch of data
 

00:35:48.599 --> 00:35:51.309 align:start position:0%
we are sampling a new batch of data
we're<00:35:49.079><c> evaluating</c><00:35:49.599><c> the</c><00:35:49.839><c> loss</c><00:35:50.839><c> uh</c><00:35:50.960><c> we're</c>

00:35:51.309 --> 00:35:51.319 align:start position:0%
we're evaluating the loss uh we're
 

00:35:51.319 --> 00:35:52.750 align:start position:0%
we're evaluating the loss uh we're
zeroing<00:35:51.800><c> out</c><00:35:51.960><c> all</c><00:35:52.040><c> the</c><00:35:52.160><c> gradients</c><00:35:52.520><c> from</c><00:35:52.640><c> the</c>

00:35:52.750 --> 00:35:52.760 align:start position:0%
zeroing out all the gradients from the
 

00:35:52.760 --> 00:35:54.870 align:start position:0%
zeroing out all the gradients from the
previous<00:35:53.040><c> step</c><00:35:53.960><c> getting</c><00:35:54.240><c> the</c><00:35:54.359><c> gradients</c><00:35:54.720><c> for</c>

00:35:54.870 --> 00:35:54.880 align:start position:0%
previous step getting the gradients for
 

00:35:54.880 --> 00:35:56.950 align:start position:0%
previous step getting the gradients for
all<00:35:55.040><c> the</c><00:35:55.160><c> parameters</c><00:35:56.079><c> and</c><00:35:56.280><c> then</c><00:35:56.520><c> using</c><00:35:56.800><c> those</c>

00:35:56.950 --> 00:35:56.960 align:start position:0%
all the parameters and then using those
 

00:35:56.960 --> 00:35:58.950 align:start position:0%
all the parameters and then using those
gradients<00:35:57.319><c> to</c><00:35:57.440><c> up</c><00:35:57.640><c> update</c><00:35:57.920><c> our</c><00:35:58.079><c> parameters</c><00:35:58.720><c> so</c>

00:35:58.950 --> 00:35:58.960 align:start position:0%
gradients to up update our parameters so
 

00:35:58.960 --> 00:36:00.950 align:start position:0%
gradients to up update our parameters so
typical<00:35:59.280><c> training</c><00:35:59.640><c> loop</c><00:36:00.359><c> as</c><00:36:00.480><c> we</c><00:36:00.599><c> saw</c><00:36:00.760><c> in</c><00:36:00.839><c> the</c>

00:36:00.950 --> 00:36:00.960 align:start position:0%
typical training loop as we saw in the
 

00:36:00.960 --> 00:36:04.589 align:start position:0%
typical training loop as we saw in the
make<00:36:01.160><c> more</c><00:36:01.640><c> series</c><00:36:02.640><c> so</c><00:36:02.839><c> let</c><00:36:02.960><c> me</c><00:36:03.240><c> now</c><00:36:03.800><c> uh</c><00:36:04.000><c> run</c>

00:36:04.589 --> 00:36:04.599 align:start position:0%
make more series so let me now uh run
 

00:36:04.599 --> 00:36:07.270 align:start position:0%
make more series so let me now uh run
this<00:36:05.599><c> for</c><00:36:05.920><c> say</c><00:36:06.200><c> 100</c><00:36:06.440><c> iterations</c><00:36:07.000><c> and</c><00:36:07.119><c> let's</c>

00:36:07.270 --> 00:36:07.280 align:start position:0%
this for say 100 iterations and let's
 

00:36:07.280 --> 00:36:09.790 align:start position:0%
this for say 100 iterations and let's
see<00:36:07.400><c> what</c><00:36:07.520><c> kind</c><00:36:07.599><c> of</c><00:36:07.720><c> losses</c><00:36:08.000><c> we're</c><00:36:08.119><c> going</c><00:36:08.240><c> to</c>

00:36:09.790 --> 00:36:09.800 align:start position:0%
see what kind of losses we're going to
 

00:36:09.800 --> 00:36:12.670 align:start position:0%
see what kind of losses we're going to
get<00:36:10.800><c> so</c><00:36:10.960><c> we</c><00:36:11.079><c> started</c><00:36:11.359><c> around</c>

00:36:12.670 --> 00:36:12.680 align:start position:0%
get so we started around
 

00:36:12.680 --> 00:36:14.670 align:start position:0%
get so we started around
4.7<00:36:13.680><c> and</c><00:36:13.800><c> now</c><00:36:13.880><c> we're</c><00:36:14.000><c> getting</c><00:36:14.200><c> to</c><00:36:14.400><c> down</c><00:36:14.520><c> to</c>

00:36:14.670 --> 00:36:14.680 align:start position:0%
4.7 and now we're getting to down to
 

00:36:14.680 --> 00:36:18.510 align:start position:0%
4.7 and now we're getting to down to
like<00:36:14.880><c> 4.6</c><00:36:15.880><c> 4.5</c><00:36:16.640><c> Etc</c><00:36:17.160><c> so</c><00:36:17.680><c> the</c><00:36:17.800><c> optimization</c><00:36:18.359><c> is</c>

00:36:18.510 --> 00:36:18.520 align:start position:0%
like 4.6 4.5 Etc so the optimization is
 

00:36:18.520 --> 00:36:22.069 align:start position:0%
like 4.6 4.5 Etc so the optimization is
definitely<00:36:18.920><c> happening</c><00:36:19.800><c> but</c><00:36:20.319><c> um</c><00:36:21.319><c> let's</c><00:36:21.960><c> uh</c>

00:36:22.069 --> 00:36:22.079 align:start position:0%
definitely happening but um let's uh
 

00:36:22.079 --> 00:36:23.910 align:start position:0%
definitely happening but um let's uh
sort<00:36:22.280><c> of</c><00:36:22.680><c> try</c><00:36:22.880><c> to</c><00:36:23.240><c> increase</c><00:36:23.640><c> number</c><00:36:23.800><c> of</c>

00:36:23.910 --> 00:36:23.920 align:start position:0%
sort of try to increase number of
 

00:36:23.920 --> 00:36:25.870 align:start position:0%
sort of try to increase number of
iterations<00:36:24.480><c> and</c><00:36:24.599><c> only</c><00:36:24.880><c> print</c><00:36:25.119><c> at</c><00:36:25.280><c> the</c>

00:36:25.870 --> 00:36:25.880 align:start position:0%
iterations and only print at the
 

00:36:25.880 --> 00:36:29.430 align:start position:0%
iterations and only print at the
end<00:36:26.880><c> because</c><00:36:27.079><c> we</c><00:36:27.200><c> probably</c><00:36:27.400><c> want</c><00:36:27.680><c> train</c><00:36:27.880><c> for</c>

00:36:29.430 --> 00:36:29.440 align:start position:0%
end because we probably want train for
 

00:36:29.440 --> 00:36:34.670 align:start position:0%
end because we probably want train for
longer<00:36:30.440><c> okay</c><00:36:30.560><c> so</c><00:36:30.680><c> we're</c><00:36:30.800><c> down</c><00:36:30.960><c> to</c><00:36:31.119><c> 3.6</c>

00:36:34.670 --> 00:36:34.680 align:start position:0%
 
 

00:36:34.680 --> 00:36:40.550 align:start position:0%
 
roughly<00:36:35.680><c> roughly</c><00:36:36.000><c> down</c><00:36:36.160><c> to</c>

00:36:40.550 --> 00:36:40.560 align:start position:0%
 
 

00:36:40.560 --> 00:36:46.309 align:start position:0%
 
three<00:36:41.560><c> this</c><00:36:41.680><c> is</c><00:36:41.800><c> the</c><00:36:41.920><c> most</c><00:36:42.079><c> janky</c>

00:36:46.309 --> 00:36:46.319 align:start position:0%
 
 

00:36:46.319 --> 00:36:48.109 align:start position:0%
 
optimization<00:36:47.319><c> okay</c><00:36:47.440><c> it's</c><00:36:47.599><c> working</c><00:36:47.920><c> let's</c>

00:36:48.109 --> 00:36:48.119 align:start position:0%
optimization okay it's working let's
 

00:36:48.119 --> 00:36:50.510 align:start position:0%
optimization okay it's working let's
just<00:36:48.240><c> do</c>

00:36:50.510 --> 00:36:50.520 align:start position:0%
just do
 

00:36:50.520 --> 00:36:53.510 align:start position:0%
just do
10,000<00:36:51.520><c> and</c><00:36:51.720><c> then</c><00:36:52.000><c> from</c><00:36:52.280><c> here</c><00:36:52.640><c> we</c><00:36:52.800><c> want</c><00:36:53.040><c> to</c>

00:36:53.510 --> 00:36:53.520 align:start position:0%
10,000 and then from here we want to
 

00:36:53.520 --> 00:36:56.829 align:start position:0%
10,000 and then from here we want to
copy<00:36:54.359><c> this</c><00:36:55.359><c> and</c><00:36:55.760><c> hopefully</c><00:36:56.440><c> that</c><00:36:56.560><c> we're</c><00:36:56.720><c> going</c>

00:36:56.829 --> 00:36:56.839 align:start position:0%
copy this and hopefully that we're going
 

00:36:56.839 --> 00:36:58.190 align:start position:0%
copy this and hopefully that we're going
to<00:36:56.920><c> get</c><00:36:57.040><c> something</c><00:36:57.240><c> reason</c><00:36:57.880><c> and</c><00:36:57.960><c> of</c><00:36:58.040><c> course</c>

00:36:58.190 --> 00:36:58.200 align:start position:0%
to get something reason and of course
 

00:36:58.200 --> 00:37:00.030 align:start position:0%
to get something reason and of course
it's<00:36:58.319><c> not</c><00:36:58.440><c> going</c><00:36:58.560><c> to</c><00:36:58.640><c> be</c><00:36:58.760><c> Shakespeare</c><00:36:59.760><c> from</c><00:36:59.880><c> a</c>

00:37:00.030 --> 00:37:00.040 align:start position:0%
it's not going to be Shakespeare from a
 

00:37:00.040 --> 00:37:01.870 align:start position:0%
it's not going to be Shakespeare from a
byr<00:37:00.440><c> model</c><00:37:00.960><c> but</c><00:37:01.079><c> at</c><00:37:01.160><c> least</c><00:37:01.319><c> we</c><00:37:01.440><c> see</c><00:37:01.640><c> that</c><00:37:01.760><c> the</c>

00:37:01.870 --> 00:37:01.880 align:start position:0%
byr model but at least we see that the
 

00:37:01.880 --> 00:37:05.109 align:start position:0%
byr model but at least we see that the
loss<00:37:02.119><c> is</c><00:37:02.560><c> improving</c><00:37:03.560><c> and</c><00:37:04.079><c> uh</c><00:37:04.599><c> hopefully</c><00:37:04.920><c> we're</c>

00:37:05.109 --> 00:37:05.119 align:start position:0%
loss is improving and uh hopefully we're
 

00:37:05.119 --> 00:37:06.870 align:start position:0%
loss is improving and uh hopefully we're
expecting<00:37:05.400><c> something</c><00:37:05.680><c> a</c><00:37:05.800><c> bit</c><00:37:05.920><c> more</c>

00:37:06.870 --> 00:37:06.880 align:start position:0%
expecting something a bit more
 

00:37:06.880 --> 00:37:08.829 align:start position:0%
expecting something a bit more
reasonable<00:37:07.880><c> okay</c><00:37:08.000><c> so</c><00:37:08.119><c> we're</c><00:37:08.280><c> down</c><00:37:08.480><c> at</c><00:37:08.640><c> about</c>

00:37:08.829 --> 00:37:08.839 align:start position:0%
reasonable okay so we're down at about
 

00:37:08.839 --> 00:37:12.870 align:start position:0%
reasonable okay so we're down at about
2.5<00:37:09.440><c> is</c><00:37:10.079><c> let's</c><00:37:10.240><c> see</c><00:37:10.400><c> what</c><00:37:10.520><c> we</c><00:37:10.760><c> get</c><00:37:11.880><c> okay</c>

00:37:12.870 --> 00:37:12.880 align:start position:0%
2.5 is let's see what we get okay
 

00:37:12.880 --> 00:37:14.349 align:start position:0%
2.5 is let's see what we get okay
dramatic<00:37:13.200><c> improvements</c><00:37:13.599><c> certainly</c><00:37:13.960><c> on</c><00:37:14.200><c> what</c>

00:37:14.349 --> 00:37:14.359 align:start position:0%
dramatic improvements certainly on what
 

00:37:14.359 --> 00:37:17.550 align:start position:0%
dramatic improvements certainly on what
we<00:37:14.520><c> had</c><00:37:14.800><c> here</c><00:37:15.800><c> so</c><00:37:16.520><c> let</c><00:37:16.640><c> me</c><00:37:16.839><c> just</c><00:37:17.040><c> increase</c><00:37:17.440><c> the</c>

00:37:17.550 --> 00:37:17.560 align:start position:0%
we had here so let me just increase the
 

00:37:17.560 --> 00:37:19.870 align:start position:0%
we had here so let me just increase the
number<00:37:17.760><c> of</c><00:37:18.200><c> tokens</c><00:37:19.200><c> okay</c><00:37:19.319><c> so</c><00:37:19.480><c> we</c><00:37:19.599><c> see</c><00:37:19.800><c> that</c>

00:37:19.870 --> 00:37:19.880 align:start position:0%
number of tokens okay so we see that
 

00:37:19.880 --> 00:37:21.829 align:start position:0%
number of tokens okay so we see that
we're<00:37:20.000><c> starting</c><00:37:20.240><c> to</c><00:37:20.400><c> get</c><00:37:20.560><c> something</c><00:37:20.920><c> at</c><00:37:21.040><c> least</c>

00:37:21.829 --> 00:37:21.839 align:start position:0%
we're starting to get something at least
 

00:37:21.839 --> 00:37:25.670 align:start position:0%
we're starting to get something at least
like<00:37:22.839><c> reasonable</c><00:37:23.440><c> is</c>

00:37:25.670 --> 00:37:25.680 align:start position:0%
like reasonable is
 

00:37:25.680 --> 00:37:29.390 align:start position:0%
like reasonable is
um<00:37:26.680><c> certainly</c><00:37:27.040><c> not</c><00:37:27.160><c> shakes</c><00:37:27.960><c> spear</c><00:37:28.960><c> but</c><00:37:29.240><c> uh</c><00:37:29.319><c> the</c>

00:37:29.390 --> 00:37:29.400 align:start position:0%
um certainly not shakes spear but uh the
 

00:37:29.400 --> 00:37:31.470 align:start position:0%
um certainly not shakes spear but uh the
model<00:37:29.599><c> is</c><00:37:29.760><c> making</c><00:37:30.040><c> progress</c><00:37:30.760><c> so</c><00:37:30.960><c> that</c><00:37:31.079><c> is</c><00:37:31.280><c> the</c>

00:37:31.470 --> 00:37:31.480 align:start position:0%
model is making progress so that is the
 

00:37:31.480 --> 00:37:33.109 align:start position:0%
model is making progress so that is the
simplest<00:37:32.000><c> possible</c>

00:37:33.109 --> 00:37:33.119 align:start position:0%
simplest possible
 

00:37:33.119 --> 00:37:36.670 align:start position:0%
simplest possible
model<00:37:34.119><c> so</c><00:37:34.319><c> now</c><00:37:34.480><c> what</c><00:37:34.599><c> I'd</c><00:37:34.760><c> like</c><00:37:34.880><c> to</c><00:37:35.000><c> do</c>

00:37:36.670 --> 00:37:36.680 align:start position:0%
model so now what I'd like to do
 

00:37:36.680 --> 00:37:39.670 align:start position:0%
model so now what I'd like to do
is<00:37:37.680><c> obviously</c><00:37:38.319><c> this</c><00:37:38.440><c> is</c><00:37:38.640><c> a</c><00:37:38.960><c> very</c><00:37:39.119><c> simple</c><00:37:39.400><c> model</c>

00:37:39.670 --> 00:37:39.680 align:start position:0%
is obviously this is a very simple model
 

00:37:39.680 --> 00:37:41.030 align:start position:0%
is obviously this is a very simple model
because<00:37:39.880><c> the</c><00:37:40.000><c> tokens</c><00:37:40.280><c> are</c><00:37:40.440><c> not</c><00:37:40.599><c> talking</c><00:37:40.839><c> to</c>

00:37:41.030 --> 00:37:41.040 align:start position:0%
because the tokens are not talking to
 

00:37:41.040 --> 00:37:43.150 align:start position:0%
because the tokens are not talking to
each<00:37:41.160><c> other</c><00:37:41.680><c> so</c><00:37:41.920><c> given</c><00:37:42.160><c> the</c><00:37:42.319><c> previous</c><00:37:42.680><c> context</c>

00:37:43.150 --> 00:37:43.160 align:start position:0%
each other so given the previous context
 

00:37:43.160 --> 00:37:45.390 align:start position:0%
each other so given the previous context
of<00:37:43.560><c> whatever</c><00:37:44.200><c> was</c><00:37:44.400><c> generated</c><00:37:45.040><c> we're</c><00:37:45.200><c> only</c>

00:37:45.390 --> 00:37:45.400 align:start position:0%
of whatever was generated we're only
 

00:37:45.400 --> 00:37:46.829 align:start position:0%
of whatever was generated we're only
looking<00:37:45.599><c> at</c><00:37:45.720><c> the</c><00:37:45.880><c> very</c><00:37:46.079><c> last</c><00:37:46.280><c> character</c><00:37:46.720><c> to</c>

00:37:46.829 --> 00:37:46.839 align:start position:0%
looking at the very last character to
 

00:37:46.839 --> 00:37:48.069 align:start position:0%
looking at the very last character to
make<00:37:46.960><c> the</c><00:37:47.079><c> predictions</c><00:37:47.480><c> about</c><00:37:47.680><c> what</c><00:37:47.800><c> comes</c>

00:37:48.069 --> 00:37:48.079 align:start position:0%
make the predictions about what comes
 

00:37:48.079 --> 00:37:50.829 align:start position:0%
make the predictions about what comes
next<00:37:48.800><c> so</c><00:37:49.000><c> now</c><00:37:49.280><c> these</c><00:37:49.800><c> uh</c><00:37:50.160><c> now</c><00:37:50.359><c> these</c><00:37:50.520><c> tokens</c>

00:37:50.829 --> 00:37:50.839 align:start position:0%
next so now these uh now these tokens
 

00:37:50.839 --> 00:37:53.030 align:start position:0%
next so now these uh now these tokens
have<00:37:50.960><c> to</c><00:37:51.079><c> start</c><00:37:51.359><c> talking</c><00:37:51.839><c> to</c><00:37:52.079><c> each</c><00:37:52.200><c> other</c><00:37:52.880><c> and</c>

00:37:53.030 --> 00:37:53.040 align:start position:0%
have to start talking to each other and
 

00:37:53.040 --> 00:37:55.309 align:start position:0%
have to start talking to each other and
figuring<00:37:53.400><c> out</c><00:37:53.880><c> what</c><00:37:54.040><c> is</c><00:37:54.240><c> in</c><00:37:54.359><c> the</c><00:37:54.520><c> context</c><00:37:55.160><c> so</c>

00:37:55.309 --> 00:37:55.319 align:start position:0%
figuring out what is in the context so
 

00:37:55.319 --> 00:37:56.430 align:start position:0%
figuring out what is in the context so
that<00:37:55.440><c> they</c><00:37:55.560><c> can</c><00:37:55.680><c> make</c><00:37:55.839><c> better</c><00:37:56.079><c> predictions</c>

00:37:56.430 --> 00:37:56.440 align:start position:0%
that they can make better predictions
 

00:37:56.440 --> 00:37:57.950 align:start position:0%
that they can make better predictions
for<00:37:56.599><c> what</c><00:37:56.720><c> comes</c><00:37:56.960><c> next</c><00:37:57.520><c> and</c><00:37:57.640><c> this</c><00:37:57.720><c> is</c><00:37:57.839><c> how</c>

00:37:57.950 --> 00:37:57.960 align:start position:0%
for what comes next and this is how
 

00:37:57.960 --> 00:37:59.630 align:start position:0%
for what comes next and this is how
we're<00:37:58.079><c> going</c><00:37:58.200><c> to</c><00:37:58.319><c> kick</c><00:37:58.520><c> off</c><00:37:59.040><c> the</c><00:37:59.319><c> uh</c>

00:37:59.630 --> 00:37:59.640 align:start position:0%
we're going to kick off the uh
 

00:37:59.640 --> 00:38:02.030 align:start position:0%
we're going to kick off the uh
Transformer<00:38:00.640><c> okay</c><00:38:00.760><c> so</c><00:38:01.000><c> next</c><00:38:01.440><c> I</c><00:38:01.520><c> took</c><00:38:01.720><c> the</c><00:38:01.839><c> code</c>

00:38:02.030 --> 00:38:02.040 align:start position:0%
Transformer okay so next I took the code
 

00:38:02.040 --> 00:38:03.470 align:start position:0%
Transformer okay so next I took the code
that<00:38:02.119><c> we</c><00:38:02.240><c> developed</c><00:38:02.560><c> in</c><00:38:02.640><c> this</c><00:38:02.760><c> juper</c><00:38:03.079><c> notebook</c>

00:38:03.470 --> 00:38:03.480 align:start position:0%
that we developed in this juper notebook
 

00:38:03.480 --> 00:38:05.750 align:start position:0%
that we developed in this juper notebook
and<00:38:03.560><c> I</c><00:38:03.680><c> converted</c><00:38:04.079><c> it</c><00:38:04.200><c> to</c><00:38:04.319><c> be</c><00:38:04.480><c> a</c><00:38:04.640><c> script</c><00:38:05.640><c> and</c>

00:38:05.750 --> 00:38:05.760 align:start position:0%
and I converted it to be a script and
 

00:38:05.760 --> 00:38:08.030 align:start position:0%
and I converted it to be a script and
I'm<00:38:05.880><c> doing</c><00:38:06.160><c> this</c><00:38:06.520><c> because</c><00:38:07.520><c> I</c><00:38:07.599><c> just</c><00:38:07.720><c> want</c><00:38:07.880><c> to</c>

00:38:08.030 --> 00:38:08.040 align:start position:0%
I'm doing this because I just want to
 

00:38:08.040 --> 00:38:10.109 align:start position:0%
I'm doing this because I just want to
simplify<00:38:08.680><c> our</c><00:38:08.880><c> intermediate</c><00:38:09.400><c> work</c><00:38:09.599><c> into</c><00:38:09.960><c> just</c>

00:38:10.109 --> 00:38:10.119 align:start position:0%
simplify our intermediate work into just
 

00:38:10.119 --> 00:38:12.150 align:start position:0%
simplify our intermediate work into just
the<00:38:10.240><c> final</c><00:38:10.560><c> product</c><00:38:10.880><c> that</c><00:38:11.000><c> we</c><00:38:11.160><c> have</c><00:38:11.319><c> at</c><00:38:11.480><c> this</c>

00:38:12.150 --> 00:38:12.160 align:start position:0%
the final product that we have at this
 

00:38:12.160 --> 00:38:15.270 align:start position:0%
the final product that we have at this
point<00:38:13.160><c> so</c><00:38:14.119><c> in</c><00:38:14.240><c> the</c><00:38:14.400><c> top</c><00:38:14.640><c> here</c><00:38:14.800><c> I</c><00:38:14.920><c> put</c><00:38:15.040><c> all</c><00:38:15.160><c> the</c>

00:38:15.270 --> 00:38:15.280 align:start position:0%
point so in the top here I put all the
 

00:38:15.280 --> 00:38:16.910 align:start position:0%
point so in the top here I put all the
hyp<00:38:15.480><c> parameters</c><00:38:15.839><c> that</c><00:38:15.920><c> we</c><00:38:16.079><c> to</c><00:38:16.240><c> find</c><00:38:16.800><c> I</c>

00:38:16.910 --> 00:38:16.920 align:start position:0%
hyp parameters that we to find I
 

00:38:16.920 --> 00:38:18.349 align:start position:0%
hyp parameters that we to find I
introduced<00:38:17.400><c> a</c><00:38:17.480><c> few</c><00:38:17.720><c> and</c><00:38:17.800><c> I'm</c><00:38:17.920><c> going</c><00:38:18.040><c> to</c><00:38:18.160><c> speak</c>

00:38:18.349 --> 00:38:18.359 align:start position:0%
introduced a few and I'm going to speak
 

00:38:18.359 --> 00:38:20.710 align:start position:0%
introduced a few and I'm going to speak
to<00:38:18.560><c> that</c><00:38:18.920><c> in</c><00:38:19.000><c> a</c><00:38:19.119><c> little</c><00:38:19.359><c> bit</c><00:38:20.160><c> otherwise</c><00:38:20.520><c> a</c><00:38:20.599><c> lot</c>

00:38:20.710 --> 00:38:20.720 align:start position:0%
to that in a little bit otherwise a lot
 

00:38:20.720 --> 00:38:23.150 align:start position:0%
to that in a little bit otherwise a lot
of<00:38:20.800><c> this</c><00:38:20.920><c> should</c><00:38:21.040><c> be</c><00:38:21.400><c> recognizable</c><00:38:22.400><c> uh</c>

00:38:23.150 --> 00:38:23.160 align:start position:0%
of this should be recognizable uh
 

00:38:23.160 --> 00:38:25.550 align:start position:0%
of this should be recognizable uh
reproducibility<00:38:24.160><c> read</c><00:38:24.520><c> data</c><00:38:25.319><c> get</c><00:38:25.480><c> the</c>

00:38:25.550 --> 00:38:25.560 align:start position:0%
reproducibility read data get the
 

00:38:25.560 --> 00:38:27.670 align:start position:0%
reproducibility read data get the
encoder<00:38:25.920><c> and</c><00:38:26.000><c> the</c><00:38:26.119><c> decoder</c><00:38:26.960><c> create</c><00:38:27.240><c> the</c><00:38:27.480><c> train</c>

00:38:27.670 --> 00:38:27.680 align:start position:0%
encoder and the decoder create the train
 

00:38:27.680 --> 00:38:30.910 align:start position:0%
encoder and the decoder create the train
into<00:38:28.280><c> splits</c><00:38:29.280><c> uh</c><00:38:29.440><c> use</c><00:38:29.800><c> the</c><00:38:30.280><c> uh</c><00:38:30.520><c> kind</c><00:38:30.640><c> of</c><00:38:30.760><c> like</c>

00:38:30.910 --> 00:38:30.920 align:start position:0%
into splits uh use the uh kind of like
 

00:38:30.920 --> 00:38:33.990 align:start position:0%
into splits uh use the uh kind of like
data<00:38:31.160><c> loader</c><00:38:32.000><c> um</c><00:38:32.520><c> that</c><00:38:32.760><c> gets</c><00:38:32.960><c> a</c><00:38:33.160><c> batch</c><00:38:33.640><c> of</c><00:38:33.839><c> the</c>

00:38:33.990 --> 00:38:34.000 align:start position:0%
data loader um that gets a batch of the
 

00:38:34.000 --> 00:38:36.950 align:start position:0%
data loader um that gets a batch of the
inputs<00:38:34.319><c> and</c><00:38:34.960><c> Targets</c><00:38:35.960><c> this</c><00:38:36.119><c> is</c><00:38:36.319><c> new</c><00:38:36.640><c> and</c><00:38:36.760><c> I'll</c>

00:38:36.950 --> 00:38:36.960 align:start position:0%
inputs and Targets this is new and I'll
 

00:38:36.960 --> 00:38:39.390 align:start position:0%
inputs and Targets this is new and I'll
talk<00:38:37.119><c> about</c><00:38:37.280><c> it</c><00:38:37.440><c> in</c><00:38:37.520><c> a</c><00:38:38.040><c> second</c><00:38:39.040><c> now</c><00:38:39.200><c> this</c><00:38:39.280><c> is</c>

00:38:39.390 --> 00:38:39.400 align:start position:0%
talk about it in a second now this is
 

00:38:39.400 --> 00:38:40.750 align:start position:0%
talk about it in a second now this is
the<00:38:39.480><c> Byram</c><00:38:39.839><c> language</c><00:38:40.119><c> model</c><00:38:40.359><c> that</c><00:38:40.480><c> we</c>

00:38:40.750 --> 00:38:40.760 align:start position:0%
the Byram language model that we
 

00:38:40.760 --> 00:38:43.109 align:start position:0%
the Byram language model that we
developed<00:38:41.760><c> and</c><00:38:41.880><c> it</c><00:38:42.000><c> can</c><00:38:42.240><c> forward</c><00:38:42.760><c> and</c><00:38:42.880><c> give</c><00:38:43.000><c> us</c>

00:38:43.109 --> 00:38:43.119 align:start position:0%
developed and it can forward and give us
 

00:38:43.119 --> 00:38:45.829 align:start position:0%
developed and it can forward and give us
a<00:38:43.240><c> logits</c><00:38:43.599><c> and</c><00:38:43.760><c> loss</c><00:38:44.119><c> and</c><00:38:44.240><c> it</c><00:38:44.359><c> can</c>

00:38:45.829 --> 00:38:45.839 align:start position:0%
a logits and loss and it can
 

00:38:45.839 --> 00:38:48.150 align:start position:0%
a logits and loss and it can
generate<00:38:46.839><c> and</c><00:38:47.000><c> then</c><00:38:47.240><c> here</c><00:38:47.599><c> we</c><00:38:47.720><c> are</c><00:38:47.839><c> creating</c>

00:38:48.150 --> 00:38:48.160 align:start position:0%
generate and then here we are creating
 

00:38:48.160 --> 00:38:51.030 align:start position:0%
generate and then here we are creating
the<00:38:48.280><c> optimizer</c><00:38:48.880><c> and</c><00:38:49.000><c> this</c><00:38:49.119><c> is</c><00:38:49.240><c> the</c><00:38:49.359><c> training</c>

00:38:51.030 --> 00:38:51.040 align:start position:0%
the optimizer and this is the training
 

00:38:51.040 --> 00:38:53.309 align:start position:0%
the optimizer and this is the training
Loop<00:38:52.040><c> so</c><00:38:52.359><c> everything</c><00:38:52.720><c> here</c><00:38:52.839><c> should</c><00:38:53.079><c> look</c>

00:38:53.309 --> 00:38:53.319 align:start position:0%
Loop so everything here should look
 

00:38:53.319 --> 00:38:55.230 align:start position:0%
Loop so everything here should look
pretty<00:38:53.599><c> familiar</c><00:38:54.280><c> now</c><00:38:54.640><c> some</c><00:38:54.800><c> of</c><00:38:54.880><c> the</c><00:38:55.000><c> small</c>

00:38:55.230 --> 00:38:55.240 align:start position:0%
pretty familiar now some of the small
 

00:38:55.240 --> 00:38:57.829 align:start position:0%
pretty familiar now some of the small
things<00:38:55.440><c> that</c><00:38:55.560><c> I</c><00:38:55.720><c> added</c><00:38:56.200><c> number</c><00:38:56.480><c> one</c><00:38:57.440><c> I</c><00:38:57.560><c> added</c>

00:38:57.829 --> 00:38:57.839 align:start position:0%
things that I added number one I added
 

00:38:57.839 --> 00:39:00.069 align:start position:0%
things that I added number one I added
the<00:38:57.960><c> ability</c><00:38:58.240><c> to</c><00:38:58.400><c> run</c><00:38:58.720><c> on</c><00:38:58.880><c> a</c><00:38:59.119><c> GPU</c><00:38:59.680><c> if</c><00:38:59.760><c> you</c><00:38:59.960><c> have</c>

00:39:00.069 --> 00:39:00.079 align:start position:0%
the ability to run on a GPU if you have
 

00:39:00.079 --> 00:39:02.550 align:start position:0%
the ability to run on a GPU if you have
it<00:39:00.760><c> so</c><00:39:00.920><c> if</c><00:39:01.040><c> you</c><00:39:01.160><c> have</c><00:39:01.280><c> a</c><00:39:01.359><c> GPU</c><00:39:01.839><c> then</c><00:39:01.960><c> you</c><00:39:02.079><c> can</c>

00:39:02.550 --> 00:39:02.560 align:start position:0%
it so if you have a GPU then you can
 

00:39:02.560 --> 00:39:04.910 align:start position:0%
it so if you have a GPU then you can
this<00:39:02.680><c> will</c><00:39:03.160><c> use</c><00:39:03.440><c> Cuda</c><00:39:03.880><c> instead</c><00:39:04.119><c> of</c><00:39:04.200><c> just</c><00:39:04.359><c> CPU</c>

00:39:04.910 --> 00:39:04.920 align:start position:0%
this will use Cuda instead of just CPU
 

00:39:04.920 --> 00:39:07.270 align:start position:0%
this will use Cuda instead of just CPU
and<00:39:05.079><c> everything</c><00:39:05.400><c> will</c><00:39:05.520><c> be</c><00:39:05.640><c> a</c><00:39:05.760><c> lot</c><00:39:05.920><c> more</c><00:39:06.280><c> faster</c>

00:39:07.270 --> 00:39:07.280 align:start position:0%
and everything will be a lot more faster
 

00:39:07.280 --> 00:39:09.710 align:start position:0%
and everything will be a lot more faster
now<00:39:07.520><c> when</c><00:39:07.880><c> device</c><00:39:08.240><c> becomes</c><00:39:08.599><c> Cuda</c><00:39:09.520><c> then</c><00:39:09.640><c> we</c>

00:39:09.710 --> 00:39:09.720 align:start position:0%
now when device becomes Cuda then we
 

00:39:09.720 --> 00:39:11.230 align:start position:0%
now when device becomes Cuda then we
need<00:39:09.839><c> to</c><00:39:10.000><c> make</c><00:39:10.119><c> sure</c><00:39:10.359><c> that</c><00:39:10.520><c> when</c><00:39:10.640><c> we</c><00:39:10.800><c> load</c><00:39:11.079><c> the</c>

00:39:11.230 --> 00:39:11.240 align:start position:0%
need to make sure that when we load the
 

00:39:11.240 --> 00:39:13.069 align:start position:0%
need to make sure that when we load the
data<00:39:11.640><c> we</c><00:39:11.760><c> move</c><00:39:12.040><c> it</c><00:39:12.200><c> to</c>

00:39:13.069 --> 00:39:13.079 align:start position:0%
data we move it to
 

00:39:13.079 --> 00:39:15.910 align:start position:0%
data we move it to
device<00:39:14.079><c> when</c><00:39:14.240><c> we</c><00:39:14.440><c> create</c><00:39:14.720><c> the</c><00:39:14.880><c> model</c><00:39:15.520><c> we</c><00:39:15.640><c> want</c>

00:39:15.910 --> 00:39:15.920 align:start position:0%
device when we create the model we want
 

00:39:15.920 --> 00:39:18.109 align:start position:0%
device when we create the model we want
to<00:39:16.200><c> move</c><00:39:16.839><c> uh</c><00:39:16.920><c> the</c><00:39:17.040><c> model</c><00:39:17.359><c> parameters</c><00:39:17.800><c> to</c>

00:39:18.109 --> 00:39:18.119 align:start position:0%
to move uh the model parameters to
 

00:39:18.119 --> 00:39:21.309 align:start position:0%
to move uh the model parameters to
device<00:39:19.119><c> so</c><00:39:19.480><c> as</c><00:39:19.560><c> an</c><00:39:19.839><c> example</c><00:39:20.839><c> here</c><00:39:20.960><c> we</c><00:39:21.079><c> have</c><00:39:21.200><c> the</c>

00:39:21.309 --> 00:39:21.319 align:start position:0%
device so as an example here we have the
 

00:39:21.319 --> 00:39:23.390 align:start position:0%
device so as an example here we have the
N<00:39:21.480><c> an</c><00:39:21.599><c> embedding</c><00:39:22.040><c> table</c><00:39:22.440><c> and</c><00:39:22.560><c> it's</c><00:39:22.760><c> got</c><00:39:22.920><c> a</c>

00:39:23.390 --> 00:39:23.400 align:start position:0%
N an embedding table and it's got a
 

00:39:23.400 --> 00:39:26.030 align:start position:0%
N an embedding table and it's got a
weight<00:39:23.880><c> inside</c><00:39:24.240><c> it</c><00:39:24.680><c> which</c><00:39:24.800><c> stores</c><00:39:25.280><c> the</c><00:39:25.920><c> uh</c>

00:39:26.030 --> 00:39:26.040 align:start position:0%
weight inside it which stores the uh
 

00:39:26.040 --> 00:39:27.829 align:start position:0%
weight inside it which stores the uh
sort<00:39:26.240><c> of</c><00:39:26.359><c> lookup</c><00:39:26.640><c> table</c><00:39:27.160><c> so</c><00:39:27.359><c> so</c><00:39:27.480><c> that</c><00:39:27.599><c> would</c><00:39:27.720><c> be</c>

00:39:27.829 --> 00:39:27.839 align:start position:0%
sort of lookup table so so that would be
 

00:39:27.839 --> 00:39:29.670 align:start position:0%
sort of lookup table so so that would be
moved<00:39:28.240><c> to</c><00:39:28.400><c> the</c><00:39:28.520><c> GPU</c><00:39:29.079><c> so</c><00:39:29.280><c> that</c><00:39:29.440><c> all</c><00:39:29.560><c> the</c>

00:39:29.670 --> 00:39:29.680 align:start position:0%
moved to the GPU so that all the
 

00:39:29.680 --> 00:39:31.990 align:start position:0%
moved to the GPU so that all the
calculations<00:39:30.359><c> here</c><00:39:30.880><c> happen</c><00:39:31.160><c> on</c><00:39:31.319><c> the</c><00:39:31.440><c> GPU</c><00:39:31.880><c> and</c>

00:39:31.990 --> 00:39:32.000 align:start position:0%
calculations here happen on the GPU and
 

00:39:32.000 --> 00:39:34.230 align:start position:0%
calculations here happen on the GPU and
they<00:39:32.119><c> can</c><00:39:32.240><c> be</c><00:39:32.359><c> a</c><00:39:32.480><c> lot</c><00:39:33.000><c> faster</c><00:39:34.000><c> and</c><00:39:34.119><c> then</c>

00:39:34.230 --> 00:39:34.240 align:start position:0%
they can be a lot faster and then
 

00:39:34.240 --> 00:39:35.470 align:start position:0%
they can be a lot faster and then
finally<00:39:34.560><c> here</c><00:39:34.680><c> when</c><00:39:34.800><c> I'm</c><00:39:34.920><c> creating</c><00:39:35.280><c> the</c>

00:39:35.470 --> 00:39:35.480 align:start position:0%
finally here when I'm creating the
 

00:39:35.480 --> 00:39:37.790 align:start position:0%
finally here when I'm creating the
context<00:39:36.480><c> that</c><00:39:36.680><c> feeds</c><00:39:37.000><c> in</c><00:39:37.119><c> to</c><00:39:37.240><c> generate</c><00:39:37.599><c> I</c><00:39:37.680><c> have</c>

00:39:37.790 --> 00:39:37.800 align:start position:0%
context that feeds in to generate I have
 

00:39:37.800 --> 00:39:39.430 align:start position:0%
context that feeds in to generate I have
to<00:39:37.880><c> make</c><00:39:38.000><c> sure</c><00:39:38.160><c> that</c><00:39:38.240><c> I</c><00:39:38.400><c> create</c><00:39:38.599><c> it</c><00:39:38.760><c> on</c><00:39:38.880><c> the</c>

00:39:39.430 --> 00:39:39.440 align:start position:0%
to make sure that I create it on the
 

00:39:39.440 --> 00:39:43.069 align:start position:0%
to make sure that I create it on the
device<00:39:40.440><c> number</c><00:39:40.680><c> two</c><00:39:40.920><c> what</c><00:39:41.040><c> I</c><00:39:41.160><c> introduced</c><00:39:42.079><c> is</c>

00:39:43.069 --> 00:39:43.079 align:start position:0%
device number two what I introduced is
 

00:39:43.079 --> 00:39:46.589 align:start position:0%
device number two what I introduced is
uh<00:39:43.800><c> the</c><00:39:43.960><c> fact</c><00:39:44.319><c> that</c><00:39:44.880><c> here</c><00:39:45.000><c> in</c><00:39:45.119><c> the</c><00:39:45.240><c> training</c>

00:39:46.589 --> 00:39:46.599 align:start position:0%
uh the fact that here in the training
 

00:39:46.599 --> 00:39:50.790 align:start position:0%
uh the fact that here in the training
Loop<00:39:47.599><c> here</c><00:39:47.800><c> I</c><00:39:47.880><c> was</c><00:39:48.040><c> just</c><00:39:48.200><c> printing</c><00:39:48.920><c> the</c><00:39:49.480><c> um</c><00:39:49.839><c> l.</c>

00:39:50.790 --> 00:39:50.800 align:start position:0%
Loop here I was just printing the um l.
 

00:39:50.800 --> 00:39:53.270 align:start position:0%
Loop here I was just printing the um l.
item<00:39:51.800><c> inside</c><00:39:52.119><c> the</c><00:39:52.240><c> training</c><00:39:52.520><c> Loop</c><00:39:53.040><c> but</c><00:39:53.200><c> this</c>

00:39:53.270 --> 00:39:53.280 align:start position:0%
item inside the training Loop but this
 

00:39:53.280 --> 00:39:54.510 align:start position:0%
item inside the training Loop but this
is<00:39:53.359><c> a</c><00:39:53.480><c> very</c><00:39:53.640><c> noisy</c><00:39:53.960><c> measurement</c><00:39:54.319><c> of</c><00:39:54.440><c> the</c>

00:39:54.510 --> 00:39:54.520 align:start position:0%
is a very noisy measurement of the
 

00:39:54.520 --> 00:39:56.670 align:start position:0%
is a very noisy measurement of the
current<00:39:54.800><c> loss</c><00:39:55.240><c> because</c><00:39:55.480><c> every</c><00:39:55.720><c> batch</c><00:39:56.000><c> will</c><00:39:56.160><c> be</c>

00:39:56.670 --> 00:39:56.680 align:start position:0%
current loss because every batch will be
 

00:39:56.680 --> 00:39:59.510 align:start position:0%
current loss because every batch will be
more<00:39:56.880><c> or</c><00:39:57.079><c> less</c><00:39:57.640><c> lucky</c><00:39:58.640><c> and</c><00:39:58.760><c> so</c><00:39:59.040><c> what</c><00:39:59.160><c> I</c><00:39:59.240><c> want</c><00:39:59.359><c> to</c>

00:39:59.510 --> 00:39:59.520 align:start position:0%
more or less lucky and so what I want to
 

00:39:59.520 --> 00:40:02.870 align:start position:0%
more or less lucky and so what I want to
do<00:39:59.720><c> usually</c><00:40:00.520><c> um</c><00:40:00.839><c> is</c><00:40:01.839><c> uh</c><00:40:01.960><c> I</c><00:40:02.079><c> have</c><00:40:02.200><c> an</c><00:40:02.440><c> estimate</c>

00:40:02.870 --> 00:40:02.880 align:start position:0%
do usually um is uh I have an estimate
 

00:40:02.880 --> 00:40:05.510 align:start position:0%
do usually um is uh I have an estimate
loss<00:40:03.359><c> function</c><00:40:04.359><c> and</c><00:40:04.640><c> the</c><00:40:04.760><c> estimate</c><00:40:05.200><c> loss</c>

00:40:05.510 --> 00:40:05.520 align:start position:0%
loss function and the estimate loss
 

00:40:05.520 --> 00:40:10.510 align:start position:0%
loss function and the estimate loss
basically<00:40:06.200><c> then</c><00:40:06.839><c> um</c><00:40:07.240><c> goes</c><00:40:07.520><c> up</c><00:40:08.119><c> here</c><00:40:09.359><c> and</c><00:40:10.359><c> it</c>

00:40:10.510 --> 00:40:10.520 align:start position:0%
basically then um goes up here and it
 

00:40:10.520 --> 00:40:12.670 align:start position:0%
basically then um goes up here and it
averages<00:40:10.960><c> up</c><00:40:11.119><c> the</c><00:40:11.240><c> loss</c><00:40:11.599><c> over</c><00:40:11.960><c> multiple</c>

00:40:12.670 --> 00:40:12.680 align:start position:0%
averages up the loss over multiple
 

00:40:12.680 --> 00:40:15.109 align:start position:0%
averages up the loss over multiple
batches<00:40:13.680><c> so</c><00:40:14.200><c> in</c><00:40:14.359><c> particular</c><00:40:14.720><c> we're</c><00:40:14.839><c> going</c><00:40:14.960><c> to</c>

00:40:15.109 --> 00:40:15.119 align:start position:0%
batches so in particular we're going to
 

00:40:15.119 --> 00:40:17.829 align:start position:0%
batches so in particular we're going to
iterate<00:40:15.680><c> eval</c><00:40:16.079><c> iter</c><00:40:16.480><c> times</c><00:40:17.440><c> and</c><00:40:17.560><c> we're</c><00:40:17.680><c> going</c>

00:40:17.829 --> 00:40:17.839 align:start position:0%
iterate eval iter times and we're going
 

00:40:17.839 --> 00:40:19.670 align:start position:0%
iterate eval iter times and we're going
to<00:40:17.960><c> basically</c><00:40:18.359><c> get</c><00:40:18.520><c> our</c><00:40:18.720><c> loss</c><00:40:19.319><c> and</c><00:40:19.440><c> then</c><00:40:19.560><c> we're</c>

00:40:19.670 --> 00:40:19.680 align:start position:0%
to basically get our loss and then we're
 

00:40:19.680 --> 00:40:21.589 align:start position:0%
to basically get our loss and then we're
going<00:40:19.800><c> to</c><00:40:19.960><c> get</c><00:40:20.079><c> the</c><00:40:20.240><c> average</c><00:40:20.599><c> loss</c><00:40:20.960><c> for</c><00:40:21.200><c> both</c>

00:40:21.589 --> 00:40:21.599 align:start position:0%
going to get the average loss for both
 

00:40:21.599 --> 00:40:24.069 align:start position:0%
going to get the average loss for both
splits<00:40:22.560><c> and</c><00:40:22.640><c> so</c><00:40:22.800><c> this</c><00:40:22.880><c> will</c><00:40:23.040><c> be</c><00:40:23.160><c> a</c><00:40:23.280><c> lot</c><00:40:23.480><c> less</c>

00:40:24.069 --> 00:40:24.079 align:start position:0%
splits and so this will be a lot less
 

00:40:24.079 --> 00:40:26.470 align:start position:0%
splits and so this will be a lot less
noisy<00:40:25.079><c> so</c><00:40:25.280><c> here</c><00:40:25.480><c> when</c><00:40:25.599><c> we</c><00:40:25.720><c> call</c><00:40:25.920><c> the</c><00:40:26.079><c> estimate</c>

00:40:26.470 --> 00:40:26.480 align:start position:0%
noisy so here when we call the estimate
 

00:40:26.480 --> 00:40:28.470 align:start position:0%
noisy so here when we call the estimate
loss<00:40:27.040><c> we're</c><00:40:27.319><c> we're</c><00:40:27.359><c> going</c><00:40:27.480><c> to</c><00:40:27.599><c> report</c><00:40:27.920><c> the</c><00:40:28.319><c> uh</c>

00:40:28.470 --> 00:40:28.480 align:start position:0%
loss we're we're going to report the uh
 

00:40:28.480 --> 00:40:31.030 align:start position:0%
loss we're we're going to report the uh
pretty<00:40:28.800><c> accurate</c><00:40:29.319><c> train</c><00:40:29.720><c> and</c><00:40:29.880><c> validation</c>

00:40:31.030 --> 00:40:31.040 align:start position:0%
pretty accurate train and validation
 

00:40:31.040 --> 00:40:33.390 align:start position:0%
pretty accurate train and validation
loss<00:40:32.040><c> now</c><00:40:32.240><c> when</c><00:40:32.359><c> we</c><00:40:32.480><c> come</c><00:40:32.680><c> back</c><00:40:32.839><c> up</c><00:40:33.200><c> you'll</c>

00:40:33.390 --> 00:40:33.400 align:start position:0%
loss now when we come back up you'll
 

00:40:33.400 --> 00:40:35.270 align:start position:0%
loss now when we come back up you'll
notice<00:40:33.680><c> a</c><00:40:33.800><c> few</c><00:40:34.000><c> things</c><00:40:34.280><c> here</c><00:40:34.720><c> I'm</c><00:40:34.839><c> setting</c><00:40:35.119><c> the</c>

00:40:35.270 --> 00:40:35.280 align:start position:0%
notice a few things here I'm setting the
 

00:40:35.280 --> 00:40:38.190 align:start position:0%
notice a few things here I'm setting the
model<00:40:35.560><c> to</c><00:40:35.839><c> evaluation</c><00:40:36.680><c> phase</c><00:40:37.680><c> and</c><00:40:37.839><c> down</c><00:40:38.040><c> here</c>

00:40:38.190 --> 00:40:38.200 align:start position:0%
model to evaluation phase and down here
 

00:40:38.200 --> 00:40:40.829 align:start position:0%
model to evaluation phase and down here
I'm<00:40:38.319><c> resetting</c><00:40:38.720><c> it</c><00:40:38.920><c> back</c><00:40:39.079><c> to</c><00:40:39.400><c> training</c><00:40:39.839><c> phase</c>

00:40:40.829 --> 00:40:40.839 align:start position:0%
I'm resetting it back to training phase
 

00:40:40.839 --> 00:40:42.790 align:start position:0%
I'm resetting it back to training phase
now<00:40:41.160><c> right</c><00:40:41.280><c> now</c><00:40:41.440><c> for</c><00:40:41.599><c> our</c><00:40:41.800><c> model</c><00:40:42.160><c> as</c><00:40:42.319><c> is</c><00:40:42.680><c> this</c>

00:40:42.790 --> 00:40:42.800 align:start position:0%
now right now for our model as is this
 

00:40:42.800 --> 00:40:44.790 align:start position:0%
now right now for our model as is this
doesn't<00:40:43.040><c> actually</c><00:40:43.319><c> do</c><00:40:43.520><c> anything</c><00:40:44.440><c> because</c><00:40:44.680><c> the</c>

00:40:44.790 --> 00:40:44.800 align:start position:0%
doesn't actually do anything because the
 

00:40:44.800 --> 00:40:46.790 align:start position:0%
doesn't actually do anything because the
only<00:40:45.040><c> thing</c><00:40:45.280><c> inside</c><00:40:45.560><c> this</c><00:40:45.720><c> model</c><00:40:46.119><c> is</c><00:40:46.400><c> this</c><00:40:46.720><c> uh</c>

00:40:46.790 --> 00:40:46.800 align:start position:0%
only thing inside this model is this uh
 

00:40:46.800 --> 00:40:51.550 align:start position:0%
only thing inside this model is this uh
nn.<00:40:47.640><c> embedding</c><00:40:48.640><c> and</c><00:40:49.200><c> um</c><00:40:49.720><c> this</c><00:40:50.520><c> this</c><00:40:51.000><c> um</c>

00:40:51.550 --> 00:40:51.560 align:start position:0%
nn. embedding and um this this um
 

00:40:51.560 --> 00:40:53.550 align:start position:0%
nn. embedding and um this this um
Network<00:40:52.040><c> would</c><00:40:52.240><c> behave</c><00:40:52.640><c> both</c><00:40:53.079><c> would</c><00:40:53.240><c> behave</c>

00:40:53.550 --> 00:40:53.560 align:start position:0%
Network would behave both would behave
 

00:40:53.560 --> 00:40:55.390 align:start position:0%
Network would behave both would behave
the<00:40:53.680><c> same</c><00:40:54.040><c> in</c><00:40:54.240><c> both</c><00:40:54.520><c> evaluation</c><00:40:55.000><c> mode</c><00:40:55.280><c> and</c>

00:40:55.390 --> 00:40:55.400 align:start position:0%
the same in both evaluation mode and
 

00:40:55.400 --> 00:40:57.670 align:start position:0%
the same in both evaluation mode and
training<00:40:55.760><c> mode</c><00:40:56.440><c> we</c><00:40:56.560><c> have</c><00:40:56.680><c> no</c><00:40:56.880><c> drop</c><00:40:57.119><c> off</c><00:40:57.400><c> layers</c>

00:40:57.670 --> 00:40:57.680 align:start position:0%
training mode we have no drop off layers
 

00:40:57.680 --> 00:41:00.109 align:start position:0%
training mode we have no drop off layers
we<00:40:57.760><c> have</c><00:40:57.880><c> no</c><00:40:58.000><c> batm</c><00:40:58.440><c> layers</c><00:40:58.760><c> Etc</c><00:40:59.640><c> but</c><00:40:59.800><c> it</c><00:40:59.880><c> is</c><00:40:59.960><c> a</c>

00:41:00.109 --> 00:41:00.119 align:start position:0%
we have no batm layers Etc but it is a
 

00:41:00.119 --> 00:41:02.470 align:start position:0%
we have no batm layers Etc but it is a
good<00:41:00.319><c> practice</c><00:41:00.640><c> to</c><00:41:00.800><c> Think</c><00:41:01.119><c> Through</c><00:41:01.880><c> what</c><00:41:02.119><c> mode</c>

00:41:02.470 --> 00:41:02.480 align:start position:0%
good practice to Think Through what mode
 

00:41:02.480 --> 00:41:04.630 align:start position:0%
good practice to Think Through what mode
your<00:41:02.640><c> neural</c><00:41:02.960><c> network</c><00:41:03.280><c> is</c><00:41:03.440><c> in</c><00:41:04.200><c> because</c><00:41:04.440><c> some</c>

00:41:04.630 --> 00:41:04.640 align:start position:0%
your neural network is in because some
 

00:41:04.640 --> 00:41:07.069 align:start position:0%
your neural network is in because some
layers<00:41:05.440><c> will</c><00:41:05.599><c> have</c><00:41:05.800><c> different</c><00:41:06.079><c> Behavior</c><00:41:06.960><c> Uh</c>

00:41:07.069 --> 00:41:07.079 align:start position:0%
layers will have different Behavior Uh
 

00:41:07.079 --> 00:41:11.069 align:start position:0%
layers will have different Behavior Uh
at<00:41:07.240><c> inference</c><00:41:07.640><c> time</c><00:41:07.760><c> or</c><00:41:07.880><c> training</c><00:41:08.720><c> time</c><00:41:10.079><c> and</c>

00:41:11.069 --> 00:41:11.079 align:start position:0%
at inference time or training time and
 

00:41:11.079 --> 00:41:12.829 align:start position:0%
at inference time or training time and
there's<00:41:11.319><c> also</c><00:41:11.599><c> this</c><00:41:11.880><c> context</c><00:41:12.240><c> manager</c><00:41:12.560><c> torch</c>

00:41:12.829 --> 00:41:12.839 align:start position:0%
there's also this context manager torch
 

00:41:12.839 --> 00:41:14.550 align:start position:0%
there's also this context manager torch
up<00:41:13.000><c> nograd</c><00:41:13.800><c> and</c><00:41:13.920><c> this</c><00:41:14.000><c> is</c><00:41:14.160><c> just</c><00:41:14.280><c> telling</c>

00:41:14.550 --> 00:41:14.560 align:start position:0%
up nograd and this is just telling
 

00:41:14.560 --> 00:41:16.109 align:start position:0%
up nograd and this is just telling
pytorch<00:41:15.079><c> that</c><00:41:15.319><c> everything</c><00:41:15.599><c> that</c><00:41:15.760><c> happens</c>

00:41:16.109 --> 00:41:16.119 align:start position:0%
pytorch that everything that happens
 

00:41:16.119 --> 00:41:18.589 align:start position:0%
pytorch that everything that happens
inside<00:41:16.440><c> this</c><00:41:16.640><c> function</c><00:41:17.400><c> we</c><00:41:17.520><c> will</c><00:41:17.760><c> not</c><00:41:18.000><c> call</c><00:41:18.280><c> do</c>

00:41:18.589 --> 00:41:18.599 align:start position:0%
inside this function we will not call do
 

00:41:18.599 --> 00:41:21.630 align:start position:0%
inside this function we will not call do
backward<00:41:19.079><c> on</c><00:41:20.079><c> and</c><00:41:20.240><c> so</c><00:41:20.760><c> pytorch</c><00:41:21.119><c> can</c><00:41:21.240><c> be</c><00:41:21.359><c> a</c><00:41:21.480><c> lot</c>

00:41:21.630 --> 00:41:21.640 align:start position:0%
backward on and so pytorch can be a lot
 

00:41:21.640 --> 00:41:23.349 align:start position:0%
backward on and so pytorch can be a lot
more<00:41:21.839><c> efficient</c><00:41:22.240><c> with</c><00:41:22.359><c> its</c><00:41:22.520><c> memory</c><00:41:22.839><c> use</c>

00:41:23.349 --> 00:41:23.359 align:start position:0%
more efficient with its memory use
 

00:41:23.359 --> 00:41:25.109 align:start position:0%
more efficient with its memory use
because<00:41:23.520><c> it</c><00:41:23.640><c> doesn't</c><00:41:23.920><c> have</c><00:41:24.079><c> to</c><00:41:24.440><c> store</c><00:41:24.800><c> all</c><00:41:24.960><c> the</c>

00:41:25.109 --> 00:41:25.119 align:start position:0%
because it doesn't have to store all the
 

00:41:25.119 --> 00:41:26.990 align:start position:0%
because it doesn't have to store all the
intermediate<00:41:25.680><c> variables</c><00:41:26.640><c> uh</c><00:41:26.760><c> because</c><00:41:26.920><c> we're</c>

00:41:26.990 --> 00:41:27.000 align:start position:0%
intermediate variables uh because we're
 

00:41:27.000 --> 00:41:29.270 align:start position:0%
intermediate variables uh because we're
never<00:41:27.359><c> going</c><00:41:27.400><c> to</c><00:41:27.480><c> call</c><00:41:27.720><c> backward</c><00:41:28.720><c> and</c><00:41:28.839><c> so</c><00:41:29.119><c> it</c>

00:41:29.270 --> 00:41:29.280 align:start position:0%
never going to call backward and so it
 

00:41:29.280 --> 00:41:30.589 align:start position:0%
never going to call backward and so it
can<00:41:29.599><c> it</c><00:41:29.680><c> can</c><00:41:29.800><c> be</c><00:41:29.920><c> a</c><00:41:29.960><c> lot</c><00:41:30.119><c> more</c><00:41:30.240><c> memory</c>

00:41:30.589 --> 00:41:30.599 align:start position:0%
can it can be a lot more memory
 

00:41:30.599 --> 00:41:32.670 align:start position:0%
can it can be a lot more memory
efficient<00:41:30.960><c> in</c><00:41:31.119><c> that</c><00:41:31.319><c> way</c><00:41:31.800><c> so</c><00:41:32.040><c> also</c><00:41:32.280><c> a</c><00:41:32.440><c> good</c>

00:41:32.670 --> 00:41:32.680 align:start position:0%
efficient in that way so also a good
 

00:41:32.680 --> 00:41:35.190 align:start position:0%
efficient in that way so also a good
practice<00:41:33.040><c> to</c><00:41:33.400><c> tpy</c><00:41:33.880><c> torch</c><00:41:34.280><c> when</c><00:41:34.760><c> we</c><00:41:34.920><c> don't</c>

00:41:35.190 --> 00:41:35.200 align:start position:0%
practice to tpy torch when we don't
 

00:41:35.200 --> 00:41:36.710 align:start position:0%
practice to tpy torch when we don't
intend<00:41:35.520><c> to</c><00:41:35.599><c> do</c><00:41:35.800><c> back</c>

00:41:36.710 --> 00:41:36.720 align:start position:0%
intend to do back
 

00:41:36.720 --> 00:41:39.950 align:start position:0%
intend to do back
propagation<00:41:37.720><c> so</c><00:41:38.400><c> right</c><00:41:38.599><c> now</c><00:41:38.920><c> this</c><00:41:39.160><c> script</c><00:41:39.720><c> is</c>

00:41:39.950 --> 00:41:39.960 align:start position:0%
propagation so right now this script is
 

00:41:39.960 --> 00:41:43.109 align:start position:0%
propagation so right now this script is
about<00:41:40.400><c> 120</c><00:41:41.400><c> lines</c><00:41:41.640><c> of</c><00:41:41.800><c> code</c><00:41:42.480><c> of</c><00:41:42.839><c> and</c><00:41:42.960><c> that's</c>

00:41:43.109 --> 00:41:43.119 align:start position:0%
about 120 lines of code of and that's
 

00:41:43.119 --> 00:41:45.950 align:start position:0%
about 120 lines of code of and that's
kind<00:41:43.240><c> of</c><00:41:43.400><c> our</c><00:41:43.560><c> starter</c><00:41:44.319><c> code</c><00:41:45.319><c> I'm</c><00:41:45.520><c> calling</c><00:41:45.760><c> it</c>

00:41:45.950 --> 00:41:45.960 align:start position:0%
kind of our starter code I'm calling it
 

00:41:45.960 --> 00:41:48.870 align:start position:0%
kind of our starter code I'm calling it
b.p<00:41:46.960><c> and</c><00:41:47.079><c> I'm</c><00:41:47.200><c> going</c><00:41:47.359><c> to</c><00:41:47.480><c> release</c><00:41:47.760><c> it</c><00:41:47.920><c> later</c>

00:41:48.870 --> 00:41:48.880 align:start position:0%
b.p and I'm going to release it later
 

00:41:48.880 --> 00:41:50.069 align:start position:0%
b.p and I'm going to release it later
now<00:41:49.040><c> running</c><00:41:49.359><c> this</c>

00:41:50.069 --> 00:41:50.079 align:start position:0%
now running this
 

00:41:50.079 --> 00:41:52.630 align:start position:0%
now running this
script<00:41:51.079><c> gives</c><00:41:51.319><c> us</c><00:41:51.480><c> output</c><00:41:51.800><c> in</c><00:41:51.880><c> the</c><00:41:52.000><c> terminal</c>

00:41:52.630 --> 00:41:52.640 align:start position:0%
script gives us output in the terminal
 

00:41:52.640 --> 00:41:54.950 align:start position:0%
script gives us output in the terminal
and<00:41:52.760><c> it</c><00:41:52.880><c> looks</c><00:41:53.079><c> something</c><00:41:53.359><c> like</c><00:41:53.760><c> this</c><00:41:54.760><c> it</c>

00:41:54.950 --> 00:41:54.960 align:start position:0%
and it looks something like this it
 

00:41:54.960 --> 00:41:57.670 align:start position:0%
and it looks something like this it
basically<00:41:55.760><c> as</c><00:41:55.960><c> I</c><00:41:56.079><c> ran</c><00:41:56.400><c> this</c><00:41:56.599><c> code</c><00:41:57.079><c> uh</c><00:41:57.240><c> it</c><00:41:57.319><c> was</c>

00:41:57.670 --> 00:41:57.680 align:start position:0%
basically as I ran this code uh it was
 

00:41:57.680 --> 00:41:59.670 align:start position:0%
basically as I ran this code uh it was
giving<00:41:57.880><c> me</c><00:41:58.000><c> the</c><00:41:58.119><c> train</c><00:41:58.359><c> loss</c><00:41:58.599><c> and</c><00:41:58.800><c> Val</c><00:41:59.079><c> loss</c>

00:41:59.670 --> 00:41:59.680 align:start position:0%
giving me the train loss and Val loss
 

00:41:59.680 --> 00:42:01.069 align:start position:0%
giving me the train loss and Val loss
and<00:41:59.760><c> we</c><00:41:59.880><c> see</c><00:42:00.040><c> that</c><00:42:00.119><c> we</c><00:42:00.280><c> convert</c><00:42:00.599><c> to</c><00:42:00.760><c> somewhere</c>

00:42:01.069 --> 00:42:01.079 align:start position:0%
and we see that we convert to somewhere
 

00:42:01.079 --> 00:42:01.870 align:start position:0%
and we see that we convert to somewhere
around

00:42:01.870 --> 00:42:01.880 align:start position:0%
around
 

00:42:01.880 --> 00:42:04.870 align:start position:0%
around
2.5<00:42:02.880><c> with</c><00:42:03.000><c> the</c><00:42:03.119><c> pyr</c><00:42:03.560><c> model</c><00:42:04.400><c> and</c><00:42:04.520><c> then</c><00:42:04.640><c> here's</c>

00:42:04.870 --> 00:42:04.880 align:start position:0%
2.5 with the pyr model and then here's
 

00:42:04.880 --> 00:42:07.430 align:start position:0%
2.5 with the pyr model and then here's
the<00:42:05.000><c> sample</c><00:42:05.359><c> that</c><00:42:05.480><c> we</c><00:42:05.599><c> produced</c><00:42:06.400><c> at</c><00:42:06.520><c> the</c>

00:42:07.430 --> 00:42:07.440 align:start position:0%
the sample that we produced at the
 

00:42:07.440 --> 00:42:09.750 align:start position:0%
the sample that we produced at the
end<00:42:08.440><c> and</c><00:42:08.560><c> so</c><00:42:08.880><c> we</c><00:42:09.000><c> have</c><00:42:09.160><c> everything</c><00:42:09.440><c> packaged</c>

00:42:09.750 --> 00:42:09.760 align:start position:0%
end and so we have everything packaged
 

00:42:09.760 --> 00:42:11.630 align:start position:0%
end and so we have everything packaged
up<00:42:09.880><c> in</c><00:42:09.960><c> the</c><00:42:10.079><c> script</c><00:42:10.800><c> and</c><00:42:10.920><c> we're</c><00:42:11.119><c> in</c><00:42:11.240><c> a</c><00:42:11.440><c> good</c>

00:42:11.630 --> 00:42:11.640 align:start position:0%
up in the script and we're in a good
 

00:42:11.640 --> 00:42:13.710 align:start position:0%
up in the script and we're in a good
position<00:42:11.960><c> now</c><00:42:12.079><c> to</c><00:42:12.240><c> iterate</c><00:42:12.599><c> on</c><00:42:12.760><c> this</c><00:42:13.480><c> okay</c><00:42:13.599><c> so</c>

00:42:13.710 --> 00:42:13.720 align:start position:0%
position now to iterate on this okay so
 

00:42:13.720 --> 00:42:15.950 align:start position:0%
position now to iterate on this okay so
we<00:42:13.839><c> are</c><00:42:14.000><c> almost</c><00:42:14.359><c> ready</c><00:42:14.680><c> to</c><00:42:14.880><c> start</c><00:42:15.280><c> writing</c><00:42:15.680><c> our</c>

00:42:15.950 --> 00:42:15.960 align:start position:0%
we are almost ready to start writing our
 

00:42:15.960 --> 00:42:18.270 align:start position:0%
we are almost ready to start writing our
very<00:42:16.240><c> first</c><00:42:16.720><c> self</c><00:42:17.040><c> attention</c><00:42:17.480><c> block</c><00:42:18.000><c> for</c>

00:42:18.270 --> 00:42:18.280 align:start position:0%
very first self attention block for
 

00:42:18.280 --> 00:42:22.630 align:start position:0%
very first self attention block for
processing<00:42:19.079><c> these</c><00:42:19.680><c> uh</c><00:42:20.280><c> tokens</c><00:42:21.280><c> now</c><00:42:22.280><c> before</c><00:42:22.480><c> we</c>

00:42:22.630 --> 00:42:22.640 align:start position:0%
processing these uh tokens now before we
 

00:42:22.640 --> 00:42:24.190 align:start position:0%
processing these uh tokens now before we
actually<00:42:22.880><c> get</c><00:42:23.079><c> there</c><00:42:23.520><c> I</c><00:42:23.599><c> want</c><00:42:23.760><c> to</c><00:42:23.880><c> get</c><00:42:24.000><c> you</c>

00:42:24.190 --> 00:42:24.200 align:start position:0%
actually get there I want to get you
 

00:42:24.200 --> 00:42:26.190 align:start position:0%
actually get there I want to get you
used<00:42:24.440><c> to</c><00:42:24.839><c> a</c><00:42:25.000><c> mathematical</c><00:42:25.599><c> trick</c><00:42:25.960><c> that</c><00:42:26.079><c> is</c>

00:42:26.190 --> 00:42:26.200 align:start position:0%
used to a mathematical trick that is
 

00:42:26.200 --> 00:42:28.069 align:start position:0%
used to a mathematical trick that is
used<00:42:26.480><c> in</c><00:42:26.680><c> the</c><00:42:26.800><c> self</c><00:42:27.200><c> attention</c><00:42:27.720><c> inside</c><00:42:27.960><c> a</c>

00:42:28.069 --> 00:42:28.079 align:start position:0%
used in the self attention inside a
 

00:42:28.079 --> 00:42:30.150 align:start position:0%
used in the self attention inside a
Transformer<00:42:28.960><c> and</c><00:42:29.119><c> is</c><00:42:29.359><c> really</c><00:42:29.599><c> just</c><00:42:29.839><c> like</c><00:42:30.000><c> at</c>

00:42:30.150 --> 00:42:30.160 align:start position:0%
Transformer and is really just like at
 

00:42:30.160 --> 00:42:32.069 align:start position:0%
Transformer and is really just like at
the<00:42:30.319><c> heart</c><00:42:30.559><c> of</c><00:42:30.680><c> an</c><00:42:31.440><c> an</c><00:42:31.640><c> efficient</c>

00:42:32.069 --> 00:42:32.079 align:start position:0%
the heart of an an efficient
 

00:42:32.079 --> 00:42:34.870 align:start position:0%
the heart of an an efficient
implementation<00:42:32.960><c> of</c><00:42:33.200><c> self</c><00:42:33.599><c> attention</c><00:42:34.599><c> and</c><00:42:34.720><c> so</c>

00:42:34.870 --> 00:42:34.880 align:start position:0%
implementation of self attention and so
 

00:42:34.880 --> 00:42:36.430 align:start position:0%
implementation of self attention and so
I<00:42:34.960><c> want</c><00:42:35.079><c> to</c><00:42:35.240><c> work</c><00:42:35.400><c> with</c><00:42:35.480><c> this</c><00:42:35.680><c> toy</c><00:42:35.920><c> example</c><00:42:36.280><c> to</c>

00:42:36.430 --> 00:42:36.440 align:start position:0%
I want to work with this toy example to
 

00:42:36.440 --> 00:42:38.470 align:start position:0%
I want to work with this toy example to
just<00:42:36.599><c> get</c><00:42:36.720><c> you</c><00:42:36.839><c> used</c><00:42:37.079><c> to</c><00:42:37.280><c> this</c><00:42:37.480><c> operation</c><00:42:38.359><c> and</c>

00:42:38.470 --> 00:42:38.480 align:start position:0%
just get you used to this operation and
 

00:42:38.480 --> 00:42:39.790 align:start position:0%
just get you used to this operation and
then<00:42:38.599><c> it's</c><00:42:38.720><c> going</c><00:42:38.880><c> to</c><00:42:39.160><c> make</c><00:42:39.280><c> it</c><00:42:39.480><c> much</c><00:42:39.640><c> more</c>

00:42:39.790 --> 00:42:39.800 align:start position:0%
then it's going to make it much more
 

00:42:39.800 --> 00:42:43.109 align:start position:0%
then it's going to make it much more
clear<00:42:40.079><c> once</c><00:42:40.240><c> we</c><00:42:40.400><c> actually</c><00:42:40.720><c> get</c><00:42:41.160><c> to</c><00:42:41.839><c> um</c><00:42:42.200><c> to</c><00:42:42.400><c> it</c>

00:42:43.109 --> 00:42:43.119 align:start position:0%
clear once we actually get to um to it
 

00:42:43.119 --> 00:42:44.390 align:start position:0%
clear once we actually get to um to it
uh<00:42:43.280><c> in</c><00:42:43.359><c> the</c><00:42:43.480><c> script</c>

00:42:44.390 --> 00:42:44.400 align:start position:0%
uh in the script
 

00:42:44.400 --> 00:42:47.630 align:start position:0%
uh in the script
again<00:42:45.400><c> so</c><00:42:45.680><c> let's</c><00:42:45.880><c> create</c><00:42:46.200><c> a</c><00:42:46.319><c> b</c><00:42:46.520><c> BYT</c><00:42:46.839><c> by</c><00:42:47.000><c> C</c><00:42:47.440><c> where</c>

00:42:47.630 --> 00:42:47.640 align:start position:0%
again so let's create a b BYT by C where
 

00:42:47.640 --> 00:42:50.230 align:start position:0%
again so let's create a b BYT by C where
BT<00:42:48.000><c> and</c><00:42:48.119><c> C</c><00:42:48.319><c> are</c><00:42:48.480><c> just</c><00:42:48.599><c> 48</c><00:42:49.079><c> and</c><00:42:49.200><c> two</c><00:42:49.440><c> in</c><00:42:49.520><c> the</c><00:42:49.680><c> toy</c>

00:42:50.230 --> 00:42:50.240 align:start position:0%
BT and C are just 48 and two in the toy
 

00:42:50.240 --> 00:42:53.069 align:start position:0%
BT and C are just 48 and two in the toy
example<00:42:51.240><c> and</c><00:42:51.440><c> these</c><00:42:51.559><c> are</c><00:42:51.720><c> basically</c><00:42:52.119><c> channels</c>

00:42:53.069 --> 00:42:53.079 align:start position:0%
example and these are basically channels
 

00:42:53.079 --> 00:42:55.790 align:start position:0%
example and these are basically channels
and<00:42:53.240><c> we</c><00:42:53.400><c> have</c><00:42:53.800><c> uh</c><00:42:54.040><c> batches</c><00:42:55.040><c> and</c><00:42:55.359><c> we</c><00:42:55.480><c> have</c><00:42:55.640><c> the</c>

00:42:55.790 --> 00:42:55.800 align:start position:0%
and we have uh batches and we have the
 

00:42:55.800 --> 00:42:58.030 align:start position:0%
and we have uh batches and we have the
time<00:42:56.040><c> component</c><00:42:56.680><c> and</c><00:42:56.800><c> we</c><00:42:56.880><c> have</c><00:42:57.359><c> information</c>

00:42:58.030 --> 00:42:58.040 align:start position:0%
time component and we have information
 

00:42:58.040 --> 00:43:01.069 align:start position:0%
time component and we have information
at<00:42:58.200><c> each</c><00:42:58.520><c> point</c><00:42:58.839><c> in</c><00:42:58.960><c> the</c><00:42:59.119><c> sequence</c><00:42:59.880><c> so</c>

00:43:01.069 --> 00:43:01.079 align:start position:0%
at each point in the sequence so
 

00:43:01.079 --> 00:43:03.430 align:start position:0%
at each point in the sequence so
see<00:43:02.079><c> now</c><00:43:02.359><c> what</c><00:43:02.480><c> we</c><00:43:02.599><c> would</c><00:43:02.760><c> like</c><00:43:02.920><c> to</c><00:43:03.040><c> do</c><00:43:03.200><c> is</c><00:43:03.319><c> we</c>

00:43:03.430 --> 00:43:03.440 align:start position:0%
see now what we would like to do is we
 

00:43:03.440 --> 00:43:06.190 align:start position:0%
see now what we would like to do is we
would<00:43:03.640><c> like</c><00:43:03.920><c> these</c><00:43:04.480><c> um</c><00:43:04.880><c> tokens</c><00:43:05.599><c> so</c><00:43:05.800><c> we</c><00:43:05.880><c> have</c><00:43:06.079><c> up</c>

00:43:06.190 --> 00:43:06.200 align:start position:0%
would like these um tokens so we have up
 

00:43:06.200 --> 00:43:08.750 align:start position:0%
would like these um tokens so we have up
to<00:43:06.359><c> eight</c><00:43:06.640><c> tokens</c><00:43:07.079><c> here</c><00:43:07.440><c> in</c><00:43:07.599><c> a</c><00:43:07.800><c> batch</c><00:43:08.599><c> and</c>

00:43:08.750 --> 00:43:08.760 align:start position:0%
to eight tokens here in a batch and
 

00:43:08.760 --> 00:43:10.309 align:start position:0%
to eight tokens here in a batch and
these<00:43:08.920><c> eight</c><00:43:09.160><c> tokens</c><00:43:09.480><c> are</c><00:43:09.640><c> currently</c><00:43:10.079><c> not</c>

00:43:10.309 --> 00:43:10.319 align:start position:0%
these eight tokens are currently not
 

00:43:10.319 --> 00:43:11.589 align:start position:0%
these eight tokens are currently not
talking<00:43:10.559><c> to</c><00:43:10.720><c> each</c><00:43:10.839><c> other</c><00:43:11.160><c> and</c><00:43:11.240><c> we</c><00:43:11.319><c> would</c><00:43:11.480><c> like</c>

00:43:11.589 --> 00:43:11.599 align:start position:0%
talking to each other and we would like
 

00:43:11.599 --> 00:43:13.150 align:start position:0%
talking to each other and we would like
them<00:43:11.720><c> to</c><00:43:11.880><c> talk</c><00:43:12.079><c> to</c><00:43:12.240><c> each</c><00:43:12.359><c> other</c><00:43:12.599><c> we'd</c><00:43:12.760><c> like</c><00:43:12.920><c> to</c>

00:43:13.150 --> 00:43:13.160 align:start position:0%
them to talk to each other we'd like to
 

00:43:13.160 --> 00:43:17.349 align:start position:0%
them to talk to each other we'd like to
couple<00:43:13.920><c> them</c><00:43:14.920><c> and</c><00:43:15.400><c> in</c><00:43:15.680><c> particular</c><00:43:16.680><c> we</c><00:43:17.040><c> don't</c>

00:43:17.349 --> 00:43:17.359 align:start position:0%
couple them and in particular we don't
 

00:43:17.359 --> 00:43:18.750 align:start position:0%
couple them and in particular we don't
we<00:43:17.559><c> we</c><00:43:17.640><c> want</c><00:43:17.800><c> to</c><00:43:17.920><c> couple</c><00:43:18.160><c> them</c><00:43:18.280><c> in</c><00:43:18.359><c> a</c><00:43:18.520><c> very</c>

00:43:18.750 --> 00:43:18.760 align:start position:0%
we we want to couple them in a very
 

00:43:18.760 --> 00:43:21.430 align:start position:0%
we we want to couple them in a very
specific<00:43:19.200><c> way</c><00:43:19.960><c> so</c><00:43:20.400><c> the</c><00:43:20.559><c> token</c><00:43:20.839><c> for</c><00:43:20.960><c> example</c><00:43:21.319><c> at</c>

00:43:21.430 --> 00:43:21.440 align:start position:0%
specific way so the token for example at
 

00:43:21.440 --> 00:43:23.750 align:start position:0%
specific way so the token for example at
the<00:43:21.599><c> fifth</c><00:43:22.040><c> location</c><00:43:23.040><c> it</c><00:43:23.240><c> should</c><00:43:23.520><c> not</c>

00:43:23.750 --> 00:43:23.760 align:start position:0%
the fifth location it should not
 

00:43:23.760 --> 00:43:25.670 align:start position:0%
the fifth location it should not
communicate<00:43:24.319><c> with</c><00:43:24.520><c> tokens</c><00:43:24.920><c> in</c><00:43:25.040><c> the</c><00:43:25.200><c> sixth</c>

00:43:25.670 --> 00:43:25.680 align:start position:0%
communicate with tokens in the sixth
 

00:43:25.680 --> 00:43:27.750 align:start position:0%
communicate with tokens in the sixth
seventh<00:43:26.079><c> and</c><00:43:26.200><c> eighth</c><00:43:26.520><c> location</c>

00:43:27.750 --> 00:43:27.760 align:start position:0%
seventh and eighth location
 

00:43:27.760 --> 00:43:29.710 align:start position:0%
seventh and eighth location
because<00:43:28.359><c> uh</c><00:43:28.480><c> those</c><00:43:28.599><c> are</c><00:43:28.800><c> future</c><00:43:29.200><c> tokens</c><00:43:29.599><c> in</c>

00:43:29.710 --> 00:43:29.720 align:start position:0%
because uh those are future tokens in
 

00:43:29.720 --> 00:43:31.829 align:start position:0%
because uh those are future tokens in
the<00:43:29.960><c> sequence</c><00:43:30.960><c> the</c><00:43:31.079><c> token</c><00:43:31.319><c> on</c><00:43:31.440><c> the</c><00:43:31.599><c> fifth</c>

00:43:31.829 --> 00:43:31.839 align:start position:0%
the sequence the token on the fifth
 

00:43:31.839 --> 00:43:33.510 align:start position:0%
the sequence the token on the fifth
location<00:43:32.240><c> should</c><00:43:32.480><c> only</c><00:43:32.720><c> talk</c><00:43:32.920><c> to</c><00:43:33.079><c> the</c><00:43:33.240><c> one</c><00:43:33.440><c> in</c>

00:43:33.510 --> 00:43:33.520 align:start position:0%
location should only talk to the one in
 

00:43:33.520 --> 00:43:36.190 align:start position:0%
location should only talk to the one in
the<00:43:33.680><c> fourth</c><00:43:34.160><c> third</c><00:43:34.559><c> second</c><00:43:34.880><c> and</c><00:43:35.079><c> first</c><00:43:36.000><c> so</c>

00:43:36.190 --> 00:43:36.200 align:start position:0%
the fourth third second and first so
 

00:43:36.200 --> 00:43:38.710 align:start position:0%
the fourth third second and first so
it's<00:43:36.400><c> only</c><00:43:36.960><c> so</c><00:43:37.200><c> information</c><00:43:37.680><c> only</c><00:43:37.920><c> flows</c><00:43:38.480><c> from</c>

00:43:38.710 --> 00:43:38.720 align:start position:0%
it's only so information only flows from
 

00:43:38.720 --> 00:43:40.470 align:start position:0%
it's only so information only flows from
previous<00:43:39.119><c> context</c><00:43:39.640><c> to</c><00:43:39.839><c> the</c><00:43:39.960><c> current</c><00:43:40.240><c> time</c>

00:43:40.470 --> 00:43:40.480 align:start position:0%
previous context to the current time
 

00:43:40.480 --> 00:43:42.510 align:start position:0%
previous context to the current time
step<00:43:41.319><c> and</c><00:43:41.440><c> we</c><00:43:41.559><c> cannot</c><00:43:41.839><c> get</c><00:43:42.000><c> any</c><00:43:42.160><c> information</c>

00:43:42.510 --> 00:43:42.520 align:start position:0%
step and we cannot get any information
 

00:43:42.520 --> 00:43:44.069 align:start position:0%
step and we cannot get any information
from<00:43:42.680><c> the</c><00:43:42.800><c> future</c><00:43:43.319><c> because</c><00:43:43.520><c> we</c><00:43:43.640><c> are</c><00:43:43.800><c> about</c><00:43:43.960><c> to</c>

00:43:44.069 --> 00:43:44.079 align:start position:0%
from the future because we are about to
 

00:43:44.079 --> 00:43:45.549 align:start position:0%
from the future because we are about to
try<00:43:44.240><c> to</c><00:43:44.400><c> predict</c><00:43:44.680><c> the</c>

00:43:45.549 --> 00:43:45.559 align:start position:0%
try to predict the
 

00:43:45.559 --> 00:43:49.270 align:start position:0%
try to predict the
future<00:43:46.880><c> so</c><00:43:47.880><c> what</c><00:43:48.000><c> is</c><00:43:48.160><c> the</c><00:43:48.359><c> easiest</c><00:43:48.839><c> way</c><00:43:49.000><c> for</c>

00:43:49.270 --> 00:43:49.280 align:start position:0%
future so what is the easiest way for
 

00:43:49.280 --> 00:43:52.109 align:start position:0%
future so what is the easiest way for
tokens<00:43:49.640><c> to</c><00:43:49.960><c> communicate</c><00:43:50.960><c> okay</c><00:43:51.480><c> the</c><00:43:51.640><c> easiest</c>

00:43:52.109 --> 00:43:52.119 align:start position:0%
tokens to communicate okay the easiest
 

00:43:52.119 --> 00:43:54.589 align:start position:0%
tokens to communicate okay the easiest
way<00:43:52.319><c> I</c><00:43:52.400><c> would</c><00:43:52.599><c> say</c><00:43:53.280><c> is</c><00:43:53.680><c> okay</c><00:43:53.800><c> if</c><00:43:53.920><c> we're</c><00:43:54.119><c> up</c><00:43:54.280><c> to</c>

00:43:54.589 --> 00:43:54.599 align:start position:0%
way I would say is okay if we're up to
 

00:43:54.599 --> 00:43:56.270 align:start position:0%
way I would say is okay if we're up to
if<00:43:54.680><c> we're</c><00:43:54.880><c> a</c><00:43:55.040><c> fifth</c><00:43:55.359><c> token</c><00:43:55.760><c> and</c><00:43:55.880><c> I'd</c><00:43:56.040><c> like</c><00:43:56.119><c> to</c>

00:43:56.270 --> 00:43:56.280 align:start position:0%
if we're a fifth token and I'd like to
 

00:43:56.280 --> 00:43:58.430 align:start position:0%
if we're a fifth token and I'd like to
communicate<00:43:56.680><c> with</c><00:43:56.760><c> my</c><00:43:57.160><c> past</c><00:43:57.920><c> the</c><00:43:58.040><c> simplest</c>

00:43:58.430 --> 00:43:58.440 align:start position:0%
communicate with my past the simplest
 

00:43:58.440 --> 00:44:00.549 align:start position:0%
communicate with my past the simplest
way<00:43:58.599><c> we</c><00:43:58.680><c> can</c><00:43:58.800><c> do</c><00:43:59.000><c> that</c><00:43:59.160><c> is</c><00:43:59.280><c> to</c><00:43:59.480><c> just</c><00:43:59.680><c> do</c><00:44:00.359><c> a</c>

00:44:00.549 --> 00:44:00.559 align:start position:0%
way we can do that is to just do a
 

00:44:00.559 --> 00:44:03.549 align:start position:0%
way we can do that is to just do a
weight<00:44:01.240><c> is</c><00:44:01.359><c> to</c><00:44:01.559><c> just</c><00:44:01.720><c> do</c><00:44:01.880><c> an</c><00:44:02.119><c> average</c><00:44:03.040><c> of</c><00:44:03.280><c> all</c>

00:44:03.549 --> 00:44:03.559 align:start position:0%
weight is to just do an average of all
 

00:44:03.559 --> 00:44:06.230 align:start position:0%
weight is to just do an average of all
the<00:44:03.880><c> um</c><00:44:04.440><c> of</c><00:44:04.559><c> all</c><00:44:04.680><c> the</c><00:44:04.839><c> preceding</c><00:44:05.319><c> elements</c><00:44:06.079><c> so</c>

00:44:06.230 --> 00:44:06.240 align:start position:0%
the um of all the preceding elements so
 

00:44:06.240 --> 00:44:08.150 align:start position:0%
the um of all the preceding elements so
for<00:44:06.400><c> example</c><00:44:06.680><c> if</c><00:44:06.760><c> I'm</c><00:44:06.880><c> the</c><00:44:07.000><c> fif</c><00:44:07.240><c> token</c><00:44:07.920><c> I</c><00:44:08.000><c> would</c>

00:44:08.150 --> 00:44:08.160 align:start position:0%
for example if I'm the fif token I would
 

00:44:08.160 --> 00:44:10.670 align:start position:0%
for example if I'm the fif token I would
like<00:44:08.280><c> to</c><00:44:08.440><c> take</c><00:44:08.720><c> the</c><00:44:09.160><c> channels</c><00:44:10.160><c> uh</c><00:44:10.319><c> that</c><00:44:10.480><c> make</c>

00:44:10.670 --> 00:44:10.680 align:start position:0%
like to take the channels uh that make
 

00:44:10.680 --> 00:44:13.950 align:start position:0%
like to take the channels uh that make
up<00:44:11.680><c> that</c><00:44:11.920><c> are</c><00:44:12.160><c> information</c><00:44:12.640><c> at</c><00:44:12.800><c> my</c><00:44:13.079><c> step</c><00:44:13.800><c> but</c>

00:44:13.950 --> 00:44:13.960 align:start position:0%
up that are information at my step but
 

00:44:13.960 --> 00:44:15.589 align:start position:0%
up that are information at my step but
then<00:44:14.119><c> also</c><00:44:14.440><c> the</c><00:44:14.640><c> channels</c><00:44:15.040><c> from</c><00:44:15.200><c> the</c><00:44:15.319><c> fourth</c>

00:44:15.589 --> 00:44:15.599 align:start position:0%
then also the channels from the fourth
 

00:44:15.599 --> 00:44:17.109 align:start position:0%
then also the channels from the fourth
step<00:44:15.920><c> third</c><00:44:16.200><c> step</c><00:44:16.480><c> second</c><00:44:16.720><c> step</c><00:44:16.920><c> and</c><00:44:17.040><c> the</c>

00:44:17.109 --> 00:44:17.119 align:start position:0%
step third step second step and the
 

00:44:17.119 --> 00:44:19.750 align:start position:0%
step third step second step and the
first<00:44:17.359><c> step</c><00:44:17.839><c> I'd</c><00:44:18.000><c> like</c><00:44:18.119><c> to</c><00:44:18.280><c> average</c><00:44:18.720><c> those</c><00:44:18.960><c> up</c>

00:44:19.750 --> 00:44:19.760 align:start position:0%
first step I'd like to average those up
 

00:44:19.760 --> 00:44:21.150 align:start position:0%
first step I'd like to average those up
and<00:44:19.880><c> then</c><00:44:20.079><c> that</c><00:44:20.240><c> would</c><00:44:20.440><c> become</c><00:44:20.680><c> sort</c><00:44:20.880><c> of</c><00:44:21.000><c> like</c>

00:44:21.150 --> 00:44:21.160 align:start position:0%
and then that would become sort of like
 

00:44:21.160 --> 00:44:23.829 align:start position:0%
and then that would become sort of like
a<00:44:21.280><c> feature</c><00:44:21.599><c> Vector</c><00:44:22.040><c> that</c><00:44:22.240><c> summarizes</c><00:44:23.240><c> me</c><00:44:23.720><c> in</c>

00:44:23.829 --> 00:44:23.839 align:start position:0%
a feature Vector that summarizes me in
 

00:44:23.839 --> 00:44:26.309 align:start position:0%
a feature Vector that summarizes me in
the<00:44:24.040><c> context</c><00:44:24.440><c> of</c><00:44:24.559><c> my</c><00:44:24.839><c> history</c><00:44:25.839><c> now</c><00:44:26.000><c> of</c><00:44:26.079><c> course</c>

00:44:26.309 --> 00:44:26.319 align:start position:0%
the context of my history now of course
 

00:44:26.319 --> 00:44:28.670 align:start position:0%
the context of my history now of course
just<00:44:26.440><c> doing</c><00:44:26.720><c> a</c><00:44:27.119><c> sum</c><00:44:27.480><c> or</c><00:44:27.640><c> like</c><00:44:27.760><c> an</c><00:44:27.920><c> average</c><00:44:28.559><c> is</c>

00:44:28.670 --> 00:44:28.680 align:start position:0%
just doing a sum or like an average is
 

00:44:28.680 --> 00:44:30.430 align:start position:0%
just doing a sum or like an average is
an<00:44:28.839><c> extremely</c><00:44:29.280><c> weak</c><00:44:29.520><c> form</c><00:44:29.680><c> of</c><00:44:29.839><c> interaction</c>

00:44:30.430 --> 00:44:30.440 align:start position:0%
an extremely weak form of interaction
 

00:44:30.440 --> 00:44:32.190 align:start position:0%
an extremely weak form of interaction
like<00:44:30.599><c> this</c><00:44:30.760><c> communication</c><00:44:31.319><c> is</c><00:44:31.640><c> uh</c><00:44:31.800><c> extremely</c>

00:44:32.190 --> 00:44:32.200 align:start position:0%
like this communication is uh extremely
 

00:44:32.200 --> 00:44:33.990 align:start position:0%
like this communication is uh extremely
lossy<00:44:32.839><c> we've</c><00:44:33.040><c> lost</c><00:44:33.240><c> a</c><00:44:33.359><c> ton</c><00:44:33.520><c> of</c><00:44:33.640><c> information</c>

00:44:33.990 --> 00:44:34.000 align:start position:0%
lossy we've lost a ton of information
 

00:44:34.000 --> 00:44:35.710 align:start position:0%
lossy we've lost a ton of information
about<00:44:34.160><c> the</c><00:44:34.280><c> spatial</c><00:44:35.079><c> Arrangements</c><00:44:35.480><c> of</c><00:44:35.599><c> all</c>

00:44:35.710 --> 00:44:35.720 align:start position:0%
about the spatial Arrangements of all
 

00:44:35.720 --> 00:44:38.109 align:start position:0%
about the spatial Arrangements of all
those<00:44:36.040><c> tokens</c><00:44:37.040><c> uh</c><00:44:37.160><c> but</c><00:44:37.359><c> that's</c><00:44:37.559><c> okay</c><00:44:37.720><c> for</c><00:44:37.920><c> now</c>

00:44:38.109 --> 00:44:38.119 align:start position:0%
those tokens uh but that's okay for now
 

00:44:38.119 --> 00:44:39.270 align:start position:0%
those tokens uh but that's okay for now
we'll<00:44:38.359><c> see</c><00:44:38.520><c> how</c><00:44:38.640><c> we</c><00:44:38.760><c> can</c><00:44:38.880><c> bring</c><00:44:39.119><c> that</c>

00:44:39.270 --> 00:44:39.280 align:start position:0%
we'll see how we can bring that
 

00:44:39.280 --> 00:44:41.549 align:start position:0%
we'll see how we can bring that
information<00:44:39.680><c> back</c><00:44:40.000><c> later</c><00:44:41.000><c> for</c><00:44:41.200><c> now</c><00:44:41.400><c> what</c><00:44:41.480><c> we</c>

00:44:41.549 --> 00:44:41.559 align:start position:0%
information back later for now what we
 

00:44:41.559 --> 00:44:43.790 align:start position:0%
information back later for now what we
would<00:44:41.720><c> like</c><00:44:41.839><c> to</c><00:44:41.960><c> do</c><00:44:42.200><c> is</c><00:44:43.200><c> for</c><00:44:43.400><c> every</c><00:44:43.559><c> single</c>

00:44:43.790 --> 00:44:43.800 align:start position:0%
would like to do is for every single
 

00:44:43.800 --> 00:44:46.510 align:start position:0%
would like to do is for every single
batch<00:44:44.040><c> element</c><00:44:45.000><c> independently</c><00:44:46.000><c> for</c><00:44:46.240><c> every</c>

00:44:46.510 --> 00:44:46.520 align:start position:0%
batch element independently for every
 

00:44:46.520 --> 00:44:49.549 align:start position:0%
batch element independently for every
teeth<00:44:47.079><c> token</c><00:44:47.960><c> in</c><00:44:48.119><c> that</c><00:44:48.319><c> sequence</c><00:44:49.160><c> we'd</c><00:44:49.400><c> like</c>

00:44:49.549 --> 00:44:49.559 align:start position:0%
teeth token in that sequence we'd like
 

00:44:49.559 --> 00:44:52.990 align:start position:0%
teeth token in that sequence we'd like
to<00:44:49.839><c> now</c><00:44:50.400><c> calculate</c><00:44:51.240><c> the</c><00:44:51.440><c> average</c><00:44:51.920><c> of</c><00:44:52.160><c> all</c><00:44:52.400><c> the</c>

00:44:52.990 --> 00:44:53.000 align:start position:0%
to now calculate the average of all the
 

00:44:53.000 --> 00:44:55.549 align:start position:0%
to now calculate the average of all the
vectors<00:44:53.920><c> in</c><00:44:54.119><c> all</c><00:44:54.280><c> the</c><00:44:54.440><c> previous</c><00:44:54.760><c> tokens</c><00:44:55.359><c> and</c>

00:44:55.549 --> 00:44:55.559 align:start position:0%
vectors in all the previous tokens and
 

00:44:55.559 --> 00:44:58.549 align:start position:0%
vectors in all the previous tokens and
also<00:44:55.800><c> at</c><00:44:56.040><c> this</c><00:44:56.200><c> token</c><00:44:57.400><c> so</c><00:44:57.599><c> let's</c><00:44:57.839><c> write</c><00:44:58.040><c> that</c>

00:44:58.549 --> 00:44:58.559 align:start position:0%
also at this token so let's write that
 

00:44:58.559 --> 00:45:01.549 align:start position:0%
also at this token so let's write that
out<00:44:59.559><c> um</c><00:44:59.920><c> I</c><00:45:00.000><c> have</c><00:45:00.119><c> a</c><00:45:00.200><c> small</c><00:45:00.359><c> snippet</c><00:45:00.839><c> here</c><00:45:01.400><c> and</c>

00:45:01.549 --> 00:45:01.559 align:start position:0%
out um I have a small snippet here and
 

00:45:01.559 --> 00:45:03.750 align:start position:0%
out um I have a small snippet here and
instead<00:45:01.800><c> of</c><00:45:01.920><c> just</c><00:45:02.079><c> fumbling</c><00:45:02.559><c> around</c><00:45:03.480><c> let</c><00:45:03.599><c> me</c>

00:45:03.750 --> 00:45:03.760 align:start position:0%
instead of just fumbling around let me
 

00:45:03.760 --> 00:45:05.510 align:start position:0%
instead of just fumbling around let me
just<00:45:04.000><c> copy</c><00:45:04.240><c> paste</c><00:45:04.440><c> it</c><00:45:04.520><c> and</c><00:45:04.640><c> talk</c><00:45:04.800><c> to</c>

00:45:05.510 --> 00:45:05.520 align:start position:0%
just copy paste it and talk to
 

00:45:05.520 --> 00:45:07.990 align:start position:0%
just copy paste it and talk to
it<00:45:06.520><c> so</c><00:45:06.680><c> in</c><00:45:06.800><c> other</c><00:45:06.960><c> words</c><00:45:07.520><c> we're</c><00:45:07.680><c> going</c><00:45:07.800><c> to</c>

00:45:07.990 --> 00:45:08.000 align:start position:0%
it so in other words we're going to
 

00:45:08.000 --> 00:45:12.390 align:start position:0%
it so in other words we're going to
create<00:45:08.880><c> X</c><00:45:09.880><c> and</c><00:45:10.200><c> B</c><00:45:10.839><c> is</c><00:45:10.920><c> short</c><00:45:11.160><c> for</c><00:45:11.359><c> bag</c><00:45:11.559><c> of</c><00:45:11.760><c> words</c>

00:45:12.390 --> 00:45:12.400 align:start position:0%
create X and B is short for bag of words
 

00:45:12.400 --> 00:45:15.069 align:start position:0%
create X and B is short for bag of words
because<00:45:12.640><c> bag</c><00:45:12.800><c> of</c><00:45:12.920><c> words</c><00:45:13.280><c> is</c><00:45:13.680><c> um</c><00:45:14.559><c> is</c><00:45:14.800><c> kind</c><00:45:14.920><c> of</c>

00:45:15.069 --> 00:45:15.079 align:start position:0%
because bag of words is um is kind of
 

00:45:15.079 --> 00:45:17.750 align:start position:0%
because bag of words is um is kind of
like<00:45:15.359><c> um</c><00:45:16.280><c> a</c><00:45:16.400><c> term</c><00:45:16.720><c> that</c><00:45:16.839><c> people</c><00:45:17.079><c> use</c><00:45:17.520><c> when</c><00:45:17.640><c> you</c>

00:45:17.750 --> 00:45:17.760 align:start position:0%
like um a term that people use when you
 

00:45:17.760 --> 00:45:19.270 align:start position:0%
like um a term that people use when you
are<00:45:17.920><c> just</c><00:45:18.079><c> averaging</c><00:45:18.480><c> up</c><00:45:18.680><c> things</c><00:45:18.960><c> so</c><00:45:19.079><c> this</c><00:45:19.200><c> is</c>

00:45:19.270 --> 00:45:19.280 align:start position:0%
are just averaging up things so this is
 

00:45:19.280 --> 00:45:21.349 align:start position:0%
are just averaging up things so this is
just<00:45:19.400><c> a</c><00:45:19.559><c> bag</c><00:45:19.760><c> of</c><00:45:19.920><c> words</c><00:45:20.599><c> basically</c><00:45:21.000><c> there's</c><00:45:21.160><c> a</c>

00:45:21.349 --> 00:45:21.359 align:start position:0%
just a bag of words basically there's a
 

00:45:21.359 --> 00:45:23.710 align:start position:0%
just a bag of words basically there's a
word<00:45:21.839><c> stored</c><00:45:22.599><c> on</c><00:45:22.839><c> every</c><00:45:23.040><c> one</c><00:45:23.200><c> of</c><00:45:23.319><c> these</c><00:45:23.480><c> eight</c>

00:45:23.710 --> 00:45:23.720 align:start position:0%
word stored on every one of these eight
 

00:45:23.720 --> 00:45:25.309 align:start position:0%
word stored on every one of these eight
locations<00:45:24.240><c> and</c><00:45:24.359><c> we're</c><00:45:24.480><c> doing</c><00:45:24.640><c> a</c><00:45:24.800><c> bag</c><00:45:25.000><c> of</c><00:45:25.079><c> words</c>

00:45:25.309 --> 00:45:25.319 align:start position:0%
locations and we're doing a bag of words
 

00:45:25.319 --> 00:45:27.430 align:start position:0%
locations and we're doing a bag of words
we're<00:45:25.520><c> just</c><00:45:25.680><c> averaging</c>

00:45:27.430 --> 00:45:27.440 align:start position:0%
we're just averaging
 

00:45:27.440 --> 00:45:28.870 align:start position:0%
we're just averaging
so<00:45:27.640><c> in</c><00:45:27.760><c> the</c><00:45:27.920><c> beginning</c><00:45:28.240><c> we're</c><00:45:28.400><c> going</c><00:45:28.559><c> to</c><00:45:28.680><c> say</c>

00:45:28.870 --> 00:45:28.880 align:start position:0%
so in the beginning we're going to say
 

00:45:28.880 --> 00:45:30.710 align:start position:0%
so in the beginning we're going to say
that<00:45:28.960><c> it's</c><00:45:29.119><c> just</c><00:45:29.280><c> initialized</c><00:45:29.720><c> at</c><00:45:29.880><c> Zero</c><00:45:30.599><c> and</c>

00:45:30.710 --> 00:45:30.720 align:start position:0%
that it's just initialized at Zero and
 

00:45:30.720 --> 00:45:32.150 align:start position:0%
that it's just initialized at Zero and
then<00:45:30.839><c> I'm</c><00:45:30.960><c> doing</c><00:45:31.119><c> a</c><00:45:31.240><c> for</c><00:45:31.480><c> Loop</c><00:45:31.760><c> here</c><00:45:31.880><c> so</c><00:45:32.000><c> we're</c>

00:45:32.150 --> 00:45:32.160 align:start position:0%
then I'm doing a for Loop here so we're
 

00:45:32.160 --> 00:45:34.470 align:start position:0%
then I'm doing a for Loop here so we're
not<00:45:32.280><c> being</c><00:45:32.520><c> efficient</c><00:45:32.960><c> yet</c><00:45:33.280><c> that's</c><00:45:33.520><c> coming</c>

00:45:34.470 --> 00:45:34.480 align:start position:0%
not being efficient yet that's coming
 

00:45:34.480 --> 00:45:35.990 align:start position:0%
not being efficient yet that's coming
but<00:45:34.599><c> for</c><00:45:34.760><c> now</c><00:45:34.960><c> we're</c><00:45:35.119><c> just</c><00:45:35.400><c> iterating</c><00:45:35.839><c> over</c>

00:45:35.990 --> 00:45:36.000 align:start position:0%
but for now we're just iterating over
 

00:45:36.000 --> 00:45:37.990 align:start position:0%
but for now we're just iterating over
all<00:45:36.119><c> the</c><00:45:36.240><c> batch</c><00:45:36.480><c> Dimensions</c><00:45:37.000><c> independently</c>

00:45:37.990 --> 00:45:38.000 align:start position:0%
all the batch Dimensions independently
 

00:45:38.000 --> 00:45:40.870 align:start position:0%
all the batch Dimensions independently
iterating<00:45:38.520><c> over</c><00:45:39.160><c> time</c><00:45:40.160><c> and</c><00:45:40.319><c> then</c><00:45:40.680><c> the</c>

00:45:40.870 --> 00:45:40.880 align:start position:0%
iterating over time and then the
 

00:45:40.880 --> 00:45:45.309 align:start position:0%
iterating over time and then the
previous<00:45:41.720><c> uh</c><00:45:41.839><c> tokens</c><00:45:42.599><c> are</c><00:45:43.040><c> at</c><00:45:43.400><c> this</c><00:45:44.119><c> uh</c><00:45:44.319><c> batch</c>

00:45:45.309 --> 00:45:45.319 align:start position:0%
previous uh tokens are at this uh batch
 

00:45:45.319 --> 00:45:47.829 align:start position:0%
previous uh tokens are at this uh batch
Dimension<00:45:46.319><c> and</c><00:45:46.440><c> then</c><00:45:46.680><c> everything</c><00:45:47.079><c> up</c><00:45:47.280><c> to</c><00:45:47.559><c> and</c>

00:45:47.829 --> 00:45:47.839 align:start position:0%
Dimension and then everything up to and
 

00:45:47.839 --> 00:45:51.270 align:start position:0%
Dimension and then everything up to and
including<00:45:48.280><c> the</c><00:45:48.480><c> teeth</c><00:45:48.960><c> token</c><00:45:49.960><c> okay</c><00:45:50.960><c> so</c><00:45:51.160><c> when</c>

00:45:51.270 --> 00:45:51.280 align:start position:0%
including the teeth token okay so when
 

00:45:51.280 --> 00:45:54.309 align:start position:0%
including the teeth token okay so when
we<00:45:51.400><c> slice</c><00:45:51.760><c> out</c><00:45:52.040><c> X</c><00:45:52.280><c> in</c><00:45:52.480><c> this</c><00:45:52.680><c> way</c><00:45:53.480><c> X</c><00:45:53.800><c> prev</c>

00:45:54.309 --> 00:45:54.319 align:start position:0%
we slice out X in this way X prev
 

00:45:54.319 --> 00:45:58.470 align:start position:0%
we slice out X in this way X prev
Becomes<00:45:54.960><c> of</c><00:45:55.280><c> shape</c><00:45:56.280><c> um</c><00:45:57.000><c> how</c><00:45:57.079><c> many</c><00:45:57.359><c> T</c><00:45:58.160><c> elements</c>

00:45:58.470 --> 00:45:58.480 align:start position:0%
Becomes of shape um how many T elements
 

00:45:58.480 --> 00:46:00.109 align:start position:0%
Becomes of shape um how many T elements
there<00:45:58.599><c> were</c><00:45:58.760><c> in</c><00:45:58.839><c> the</c><00:45:59.040><c> past</c><00:45:59.680><c> and</c><00:45:59.800><c> then</c><00:45:59.960><c> of</c>

00:46:00.109 --> 00:46:00.119 align:start position:0%
there were in the past and then of
 

00:46:00.119 --> 00:46:02.589 align:start position:0%
there were in the past and then of
course<00:46:00.440><c> C</c><00:46:00.920><c> so</c><00:46:01.160><c> all</c><00:46:01.359><c> the</c><00:46:01.880><c> two-dimensional</c>

00:46:02.589 --> 00:46:02.599 align:start position:0%
course C so all the two-dimensional
 

00:46:02.599 --> 00:46:05.470 align:start position:0%
course C so all the two-dimensional
information<00:46:03.160><c> from</c><00:46:03.359><c> these</c><00:46:03.520><c> little</c><00:46:04.240><c> tokens</c><00:46:05.240><c> so</c>

00:46:05.470 --> 00:46:05.480 align:start position:0%
information from these little tokens so
 

00:46:05.480 --> 00:46:08.069 align:start position:0%
information from these little tokens so
that's<00:46:05.680><c> the</c><00:46:05.880><c> previous</c><00:46:06.520><c> uh</c><00:46:06.640><c> sort</c><00:46:06.800><c> of</c><00:46:07.000><c> chunk</c><00:46:07.520><c> of</c>

00:46:08.069 --> 00:46:08.079 align:start position:0%
that's the previous uh sort of chunk of
 

00:46:08.079 --> 00:46:12.030 align:start position:0%
that's the previous uh sort of chunk of
um<00:46:08.839><c> tokens</c><00:46:09.839><c> from</c><00:46:10.119><c> my</c><00:46:10.319><c> current</c><00:46:10.880><c> sequence</c><00:46:11.880><c> and</c>

00:46:12.030 --> 00:46:12.040 align:start position:0%
um tokens from my current sequence and
 

00:46:12.040 --> 00:46:13.790 align:start position:0%
um tokens from my current sequence and
then<00:46:12.160><c> I'm</c><00:46:12.319><c> just</c><00:46:12.440><c> doing</c><00:46:12.720><c> the</c><00:46:13.000><c> average</c><00:46:13.480><c> or</c><00:46:13.640><c> the</c>

00:46:13.790 --> 00:46:13.800 align:start position:0%
then I'm just doing the average or the
 

00:46:13.800 --> 00:46:15.870 align:start position:0%
then I'm just doing the average or the
mean<00:46:14.480><c> over</c><00:46:14.680><c> the</c><00:46:14.800><c> zero</c><00:46:15.160><c> Dimension</c><00:46:15.599><c> so</c><00:46:15.720><c> I'm</c>

00:46:15.870 --> 00:46:15.880 align:start position:0%
mean over the zero Dimension so I'm
 

00:46:15.880 --> 00:46:19.069 align:start position:0%
mean over the zero Dimension so I'm
averaging<00:46:16.280><c> out</c><00:46:16.839><c> the</c><00:46:17.079><c> time</c><00:46:17.599><c> here</c><00:46:18.599><c> and</c><00:46:18.800><c> I'm</c><00:46:18.960><c> just</c>

00:46:19.069 --> 00:46:19.079 align:start position:0%
averaging out the time here and I'm just
 

00:46:19.079 --> 00:46:21.309 align:start position:0%
averaging out the time here and I'm just
going<00:46:19.240><c> to</c><00:46:19.440><c> get</c><00:46:19.599><c> a</c><00:46:19.800><c> little</c><00:46:20.200><c> c</c><00:46:20.680><c> one</c><00:46:20.880><c> dimensional</c>

00:46:21.309 --> 00:46:21.319 align:start position:0%
going to get a little c one dimensional
 

00:46:21.319 --> 00:46:23.870 align:start position:0%
going to get a little c one dimensional
Vector<00:46:21.640><c> which</c><00:46:21.760><c> I'm</c><00:46:21.880><c> going</c><00:46:22.040><c> to</c><00:46:22.200><c> store</c><00:46:22.839><c> in</c><00:46:23.400><c> X</c><00:46:23.680><c> bag</c>

00:46:23.870 --> 00:46:23.880 align:start position:0%
Vector which I'm going to store in X bag
 

00:46:23.880 --> 00:46:27.510 align:start position:0%
Vector which I'm going to store in X bag
of<00:46:24.160><c> words</c><00:46:25.160><c> so</c><00:46:25.359><c> I</c><00:46:25.440><c> can</c><00:46:25.599><c> run</c><00:46:25.880><c> this</c><00:46:26.760><c> and</c><00:46:26.960><c> and</c><00:46:27.280><c> uh</c>

00:46:27.510 --> 00:46:27.520 align:start position:0%
of words so I can run this and and uh
 

00:46:27.520 --> 00:46:30.190 align:start position:0%
of words so I can run this and and uh
this<00:46:27.640><c> is</c><00:46:27.760><c> not</c><00:46:27.880><c> going</c><00:46:28.040><c> to</c><00:46:28.119><c> be</c><00:46:28.280><c> very</c><00:46:28.480><c> informative</c>

00:46:30.190 --> 00:46:30.200 align:start position:0%
this is not going to be very informative
 

00:46:30.200 --> 00:46:32.710 align:start position:0%
this is not going to be very informative
because<00:46:31.200><c> let's</c><00:46:31.359><c> see</c><00:46:31.559><c> so</c><00:46:31.760><c> this</c><00:46:31.839><c> is</c><00:46:32.000><c> X</c><00:46:32.160><c> of</c><00:46:32.359><c> Zer</c><00:46:32.599><c> so</c>

00:46:32.710 --> 00:46:32.720 align:start position:0%
because let's see so this is X of Zer so
 

00:46:32.720 --> 00:46:35.390 align:start position:0%
because let's see so this is X of Zer so
this<00:46:32.800><c> is</c><00:46:33.000><c> the</c><00:46:33.640><c> zeroth</c><00:46:34.160><c> batch</c><00:46:34.400><c> element</c><00:46:35.280><c> and</c>

00:46:35.390 --> 00:46:35.400 align:start position:0%
this is the zeroth batch element and
 

00:46:35.400 --> 00:46:40.030 align:start position:0%
this is the zeroth batch element and
then<00:46:35.599><c> expo</c><00:46:36.000><c> at</c><00:46:36.240><c> zero</c><00:46:37.440><c> now</c><00:46:38.440><c> you</c><00:46:38.599><c> see</c><00:46:38.839><c> how</c><00:46:39.119><c> the</c><00:46:39.880><c> at</c>

00:46:40.030 --> 00:46:40.040 align:start position:0%
then expo at zero now you see how the at
 

00:46:40.040 --> 00:46:42.390 align:start position:0%
then expo at zero now you see how the at
the<00:46:40.160><c> first</c><00:46:40.480><c> location</c><00:46:40.960><c> here</c><00:46:41.559><c> you</c><00:46:41.720><c> see</c><00:46:41.960><c> that</c><00:46:42.280><c> the</c>

00:46:42.390 --> 00:46:42.400 align:start position:0%
the first location here you see that the
 

00:46:42.400 --> 00:46:44.990 align:start position:0%
the first location here you see that the
two<00:46:42.559><c> are</c><00:46:42.880><c> equal</c><00:46:43.800><c> and</c><00:46:43.920><c> that's</c><00:46:44.160><c> because</c><00:46:44.640><c> it's</c>

00:46:44.990 --> 00:46:45.000 align:start position:0%
two are equal and that's because it's
 

00:46:45.000 --> 00:46:46.710 align:start position:0%
two are equal and that's because it's
we're<00:46:45.160><c> just</c><00:46:45.280><c> doing</c><00:46:45.440><c> an</c><00:46:45.599><c> average</c><00:46:45.920><c> of</c><00:46:46.079><c> this</c><00:46:46.200><c> one</c>

00:46:46.710 --> 00:46:46.720 align:start position:0%
we're just doing an average of this one
 

00:46:46.720 --> 00:46:49.510 align:start position:0%
we're just doing an average of this one
token<00:46:47.720><c> but</c><00:46:48.000><c> here</c><00:46:48.520><c> this</c><00:46:48.640><c> one</c><00:46:48.960><c> is</c><00:46:49.119><c> now</c><00:46:49.280><c> an</c>

00:46:49.510 --> 00:46:49.520 align:start position:0%
token but here this one is now an
 

00:46:49.520 --> 00:46:53.109 align:start position:0%
token but here this one is now an
average<00:46:50.040><c> of</c><00:46:50.240><c> these</c><00:46:50.800><c> two</c><00:46:51.800><c> and</c><00:46:51.920><c> now</c><00:46:52.200><c> this</c><00:46:52.359><c> one</c><00:46:53.000><c> is</c>

00:46:53.109 --> 00:46:53.119 align:start position:0%
average of these two and now this one is
 

00:46:53.119 --> 00:46:54.950 align:start position:0%
average of these two and now this one is
an<00:46:53.359><c> average</c><00:46:53.680><c> of</c><00:46:54.040><c> these</c>

00:46:54.950 --> 00:46:54.960 align:start position:0%
an average of these
 

00:46:54.960 --> 00:46:57.870 align:start position:0%
an average of these
three<00:46:55.960><c> and</c><00:46:56.160><c> so</c><00:46:56.319><c> on</c>

00:46:57.870 --> 00:46:57.880 align:start position:0%
three and so on
 

00:46:57.880 --> 00:47:01.230 align:start position:0%
three and so on
so<00:46:58.599><c> uh</c><00:46:58.760><c> and</c><00:46:59.000><c> this</c><00:46:59.240><c> last</c><00:46:59.480><c> one</c><00:46:59.960><c> is</c><00:47:00.119><c> the</c><00:47:00.319><c> average</c>

00:47:01.230 --> 00:47:01.240 align:start position:0%
so uh and this last one is the average
 

00:47:01.240 --> 00:47:03.030 align:start position:0%
so uh and this last one is the average
of<00:47:01.520><c> all</c><00:47:01.640><c> of</c><00:47:01.800><c> these</c><00:47:01.960><c> elements</c><00:47:02.400><c> so</c><00:47:02.640><c> vertical</c>

00:47:03.030 --> 00:47:03.040 align:start position:0%
of all of these elements so vertical
 

00:47:03.040 --> 00:47:05.270 align:start position:0%
of all of these elements so vertical
average<00:47:03.480><c> just</c><00:47:03.680><c> averaging</c><00:47:04.040><c> up</c><00:47:04.240><c> all</c><00:47:04.359><c> the</c><00:47:04.480><c> tokens</c>

00:47:05.270 --> 00:47:05.280 align:start position:0%
average just averaging up all the tokens
 

00:47:05.280 --> 00:47:07.390 align:start position:0%
average just averaging up all the tokens
now<00:47:05.520><c> gives</c><00:47:06.079><c> this</c><00:47:06.359><c> outcome</c>

00:47:07.390 --> 00:47:07.400 align:start position:0%
now gives this outcome
 

00:47:07.400 --> 00:47:10.309 align:start position:0%
now gives this outcome
here<00:47:08.400><c> so</c><00:47:08.720><c> this</c><00:47:08.839><c> is</c><00:47:08.960><c> all</c><00:47:09.119><c> well</c><00:47:09.280><c> and</c><00:47:09.480><c> good</c><00:47:10.079><c> uh</c><00:47:10.160><c> but</c>

00:47:10.309 --> 00:47:10.319 align:start position:0%
here so this is all well and good uh but
 

00:47:10.319 --> 00:47:12.950 align:start position:0%
here so this is all well and good uh but
this<00:47:10.400><c> is</c><00:47:10.599><c> very</c><00:47:10.960><c> inefficient</c><00:47:11.960><c> now</c><00:47:12.160><c> the</c><00:47:12.359><c> trick</c>

00:47:12.950 --> 00:47:12.960 align:start position:0%
this is very inefficient now the trick
 

00:47:12.960 --> 00:47:14.390 align:start position:0%
this is very inefficient now the trick
is<00:47:13.079><c> that</c><00:47:13.200><c> we</c><00:47:13.280><c> can</c><00:47:13.440><c> be</c><00:47:13.640><c> very</c><00:47:13.839><c> very</c><00:47:14.040><c> efficient</c>

00:47:14.390 --> 00:47:14.400 align:start position:0%
is that we can be very very efficient
 

00:47:14.400 --> 00:47:16.430 align:start position:0%
is that we can be very very efficient
about<00:47:14.599><c> doing</c><00:47:14.880><c> this</c><00:47:15.240><c> using</c><00:47:15.520><c> matrix</c>

00:47:16.430 --> 00:47:16.440 align:start position:0%
about doing this using matrix
 

00:47:16.440 --> 00:47:18.150 align:start position:0%
about doing this using matrix
multiplication<00:47:17.440><c> so</c><00:47:17.680><c> that's</c><00:47:17.880><c> the</c>

00:47:18.150 --> 00:47:18.160 align:start position:0%
multiplication so that's the
 

00:47:18.160 --> 00:47:19.630 align:start position:0%
multiplication so that's the
mathematical<00:47:18.680><c> trick</c><00:47:19.040><c> and</c><00:47:19.160><c> let</c><00:47:19.280><c> me</c><00:47:19.359><c> show</c><00:47:19.520><c> you</c>

00:47:19.630 --> 00:47:19.640 align:start position:0%
mathematical trick and let me show you
 

00:47:19.640 --> 00:47:21.470 align:start position:0%
mathematical trick and let me show you
what<00:47:19.720><c> I</c><00:47:19.839><c> mean</c><00:47:20.520><c> let's</c><00:47:20.680><c> work</c><00:47:20.920><c> with</c><00:47:21.079><c> the</c><00:47:21.200><c> toy</c>

00:47:21.470 --> 00:47:21.480 align:start position:0%
what I mean let's work with the toy
 

00:47:21.480 --> 00:47:24.430 align:start position:0%
what I mean let's work with the toy
example<00:47:22.000><c> here</c><00:47:23.000><c> let</c><00:47:23.079><c> me</c><00:47:23.240><c> run</c><00:47:23.400><c> it</c><00:47:23.520><c> and</c><00:47:23.640><c> I'll</c>

00:47:24.430 --> 00:47:24.440 align:start position:0%
example here let me run it and I'll
 

00:47:24.440 --> 00:47:27.670 align:start position:0%
example here let me run it and I'll
explain<00:47:25.440><c> I</c><00:47:25.520><c> have</c><00:47:25.640><c> a</c><00:47:25.839><c> simple</c><00:47:26.920><c> Matrix</c><00:47:27.319><c> here</c><00:47:27.599><c> that</c>

00:47:27.670 --> 00:47:27.680 align:start position:0%
explain I have a simple Matrix here that
 

00:47:27.680 --> 00:47:31.030 align:start position:0%
explain I have a simple Matrix here that
is<00:47:27.760><c> a</c><00:47:27.880><c> 3X3</c><00:47:28.640><c> of</c><00:47:28.800><c> all</c><00:47:29.079><c> ones</c><00:47:30.079><c> a</c><00:47:30.240><c> matrix</c><00:47:30.599><c> B</c><00:47:30.760><c> of</c><00:47:30.880><c> just</c>

00:47:31.030 --> 00:47:31.040 align:start position:0%
is a 3X3 of all ones a matrix B of just
 

00:47:31.040 --> 00:47:33.630 align:start position:0%
is a 3X3 of all ones a matrix B of just
random<00:47:31.319><c> numbers</c><00:47:31.839><c> and</c><00:47:31.920><c> it's</c><00:47:32.040><c> a</c><00:47:32.400><c> 3x2</c><00:47:33.400><c> and</c><00:47:33.520><c> a</c>

00:47:33.630 --> 00:47:33.640 align:start position:0%
random numbers and it's a 3x2 and a
 

00:47:33.640 --> 00:47:36.870 align:start position:0%
random numbers and it's a 3x2 and a
matrix<00:47:33.960><c> C</c><00:47:34.240><c> which</c><00:47:34.319><c> will</c><00:47:34.480><c> be</c><00:47:34.640><c> 3x3</c><00:47:35.319><c> multip</c><00:47:35.880><c> 3x2</c>

00:47:36.870 --> 00:47:36.880 align:start position:0%
matrix C which will be 3x3 multip 3x2
 

00:47:36.880 --> 00:47:39.870 align:start position:0%
matrix C which will be 3x3 multip 3x2
which<00:47:37.119><c> will</c><00:47:37.359><c> give</c><00:47:37.480><c> out</c><00:47:37.800><c> a</c><00:47:38.359><c> 3x2</c><00:47:39.359><c> so</c><00:47:39.559><c> here</c><00:47:39.680><c> we're</c>

00:47:39.870 --> 00:47:39.880 align:start position:0%
which will give out a 3x2 so here we're
 

00:47:39.880 --> 00:47:43.790 align:start position:0%
which will give out a 3x2 so here we're
just<00:47:40.040><c> using</c><00:47:40.800><c> um</c><00:47:41.720><c> matrix</c><00:47:42.400><c> multiplication</c><00:47:43.400><c> so</c><00:47:43.599><c> a</c>

00:47:43.790 --> 00:47:43.800 align:start position:0%
just using um matrix multiplication so a
 

00:47:43.800 --> 00:47:46.190 align:start position:0%
just using um matrix multiplication so a
multiply<00:47:44.319><c> B</c><00:47:44.599><c> gives</c><00:47:44.800><c> us</c>

00:47:46.190 --> 00:47:46.200 align:start position:0%
multiply B gives us
 

00:47:46.200 --> 00:47:51.390 align:start position:0%
multiply B gives us
C<00:47:47.200><c> okay</c><00:47:47.839><c> so</c><00:47:48.280><c> how</c><00:47:48.520><c> are</c><00:47:48.880><c> these</c><00:47:49.240><c> numbers</c><00:47:49.760><c> in</c><00:47:50.160><c> C</c><00:47:51.160><c> um</c>

00:47:51.390 --> 00:47:51.400 align:start position:0%
C okay so how are these numbers in C um
 

00:47:51.400 --> 00:47:54.030 align:start position:0%
C okay so how are these numbers in C um
achieved<00:47:51.960><c> right</c><00:47:52.160><c> so</c><00:47:52.880><c> this</c><00:47:53.040><c> number</c><00:47:53.440><c> in</c><00:47:53.559><c> the</c><00:47:53.760><c> top</c>

00:47:54.030 --> 00:47:54.040 align:start position:0%
achieved right so this number in the top
 

00:47:54.040 --> 00:47:57.750 align:start position:0%
achieved right so this number in the top
left<00:47:54.800><c> is</c><00:47:55.200><c> the</c><00:47:55.400><c> first</c><00:47:55.680><c> row</c><00:47:56.000><c> of</c><00:47:56.160><c> a</c><00:47:56.880><c> dot</c><00:47:57.119><c> product</c>

00:47:57.750 --> 00:47:57.760 align:start position:0%
left is the first row of a dot product
 

00:47:57.760 --> 00:48:00.790 align:start position:0%
left is the first row of a dot product
with<00:47:57.920><c> the</c><00:47:58.079><c> First</c><00:47:58.400><c> Column</c><00:47:58.880><c> of</c><00:47:59.160><c> B</c><00:48:00.160><c> and</c><00:48:00.280><c> since</c><00:48:00.599><c> all</c>

00:48:00.790 --> 00:48:00.800 align:start position:0%
with the First Column of B and since all
 

00:48:00.800 --> 00:48:02.870 align:start position:0%
with the First Column of B and since all
the<00:48:01.200><c> the</c><00:48:01.319><c> row</c><00:48:01.559><c> of</c><00:48:01.720><c> a</c><00:48:01.960><c> right</c><00:48:02.079><c> now</c><00:48:02.200><c> is</c><00:48:02.319><c> all</c><00:48:02.480><c> just</c>

00:48:02.870 --> 00:48:02.880 align:start position:0%
the the row of a right now is all just
 

00:48:02.880 --> 00:48:05.829 align:start position:0%
the the row of a right now is all just
ones<00:48:03.880><c> then</c><00:48:04.040><c> the</c><00:48:04.160><c> do</c><00:48:04.400><c> product</c><00:48:04.800><c> here</c><00:48:05.119><c> with</c><00:48:05.520><c> with</c>

00:48:05.829 --> 00:48:05.839 align:start position:0%
ones then the do product here with with
 

00:48:05.839 --> 00:48:07.870 align:start position:0%
ones then the do product here with with
this<00:48:06.040><c> column</c><00:48:06.319><c> of</c><00:48:06.480><c> B</c><00:48:07.000><c> is</c><00:48:07.160><c> just</c><00:48:07.280><c> going</c><00:48:07.440><c> to</c><00:48:07.559><c> do</c><00:48:07.720><c> a</c>

00:48:07.870 --> 00:48:07.880 align:start position:0%
this column of B is just going to do a
 

00:48:07.880 --> 00:48:11.710 align:start position:0%
this column of B is just going to do a
sum<00:48:08.480><c> of</c><00:48:08.680><c> these</c><00:48:09.240><c> of</c><00:48:09.400><c> this</c><00:48:09.559><c> column</c><00:48:10.200><c> so</c><00:48:10.359><c> 2</c><00:48:10.520><c> +</c><00:48:10.720><c> 6</c><00:48:10.920><c> +</c><00:48:11.160><c> 6</c>

00:48:11.710 --> 00:48:11.720 align:start position:0%
sum of these of this column so 2 + 6 + 6
 

00:48:11.720 --> 00:48:12.589 align:start position:0%
sum of these of this column so 2 + 6 + 6
is

00:48:12.589 --> 00:48:12.599 align:start position:0%
is
 

00:48:12.599 --> 00:48:15.510 align:start position:0%
is
14<00:48:13.599><c> the</c><00:48:13.720><c> element</c><00:48:14.079><c> here</c><00:48:14.280><c> in</c><00:48:14.400><c> the</c><00:48:14.480><c> output</c><00:48:14.760><c> of</c><00:48:14.880><c> C</c>

00:48:15.510 --> 00:48:15.520 align:start position:0%
14 the element here in the output of C
 

00:48:15.520 --> 00:48:17.510 align:start position:0%
14 the element here in the output of C
is<00:48:15.720><c> also</c><00:48:16.000><c> the</c><00:48:16.160><c> first</c><00:48:16.440><c> column</c><00:48:16.839><c> here</c><00:48:17.160><c> the</c><00:48:17.240><c> first</c>

00:48:17.510 --> 00:48:17.520 align:start position:0%
is also the first column here the first
 

00:48:17.520 --> 00:48:20.190 align:start position:0%
is also the first column here the first
row<00:48:17.800><c> of</c><00:48:17.960><c> a</c><00:48:18.440><c> multiplied</c><00:48:19.000><c> now</c><00:48:19.160><c> with</c><00:48:19.359><c> the</c><00:48:19.800><c> second</c>

00:48:20.190 --> 00:48:20.200 align:start position:0%
row of a multiplied now with the second
 

00:48:20.200 --> 00:48:25.150 align:start position:0%
row of a multiplied now with the second
column<00:48:20.599><c> of</c><00:48:20.800><c> B</c><00:48:21.559><c> so</c><00:48:21.760><c> 7</c><00:48:22.000><c> +</c><00:48:22.200><c> 4</c><00:48:22.640><c> +</c><00:48:22.960><c> 5</c><00:48:23.359><c> is</c><00:48:23.920><c> 16</c><00:48:24.920><c> now</c><00:48:25.040><c> you</c>

00:48:25.150 --> 00:48:25.160 align:start position:0%
column of B so 7 + 4 + 5 is 16 now you
 

00:48:25.160 --> 00:48:26.349 align:start position:0%
column of B so 7 + 4 + 5 is 16 now you
see<00:48:25.280><c> that</c><00:48:25.400><c> there's</c><00:48:25.599><c> repeating</c><00:48:25.920><c> elements</c><00:48:26.240><c> here</c>

00:48:26.349 --> 00:48:26.359 align:start position:0%
see that there's repeating elements here
 

00:48:26.359 --> 00:48:28.710 align:start position:0%
see that there's repeating elements here
so<00:48:26.480><c> this</c><00:48:26.760><c> 14</c><00:48:27.160><c> again</c><00:48:27.760><c> is</c><00:48:27.920><c> because</c><00:48:28.200><c> this</c><00:48:28.359><c> row</c><00:48:28.559><c> is</c>

00:48:28.710 --> 00:48:28.720 align:start position:0%
so this 14 again is because this row is
 

00:48:28.720 --> 00:48:30.470 align:start position:0%
so this 14 again is because this row is
again<00:48:28.920><c> all</c><00:48:29.119><c> ones</c><00:48:29.599><c> and</c><00:48:29.720><c> it's</c><00:48:29.839><c> multiplying</c><00:48:30.359><c> the</c>

00:48:30.470 --> 00:48:30.480 align:start position:0%
again all ones and it's multiplying the
 

00:48:30.480 --> 00:48:33.430 align:start position:0%
again all ones and it's multiplying the
First<00:48:30.760><c> Column</c><00:48:31.040><c> of</c><00:48:31.200><c> B</c><00:48:31.559><c> so</c><00:48:31.720><c> we</c><00:48:31.839><c> get</c><00:48:32.160><c> 14</c><00:48:33.160><c> and</c><00:48:33.319><c> this</c>

00:48:33.430 --> 00:48:33.440 align:start position:0%
First Column of B so we get 14 and this
 

00:48:33.440 --> 00:48:35.790 align:start position:0%
First Column of B so we get 14 and this
one<00:48:33.680><c> is</c><00:48:34.400><c> and</c><00:48:34.520><c> so</c><00:48:34.640><c> on</c><00:48:34.839><c> so</c><00:48:35.040><c> this</c><00:48:35.240><c> last</c><00:48:35.440><c> number</c>

00:48:35.790 --> 00:48:35.800 align:start position:0%
one is and so on so this last number
 

00:48:35.800 --> 00:48:39.349 align:start position:0%
one is and so on so this last number
here<00:48:36.359><c> is</c><00:48:36.559><c> the</c><00:48:36.760><c> last</c><00:48:37.040><c> row</c><00:48:37.440><c> do</c><00:48:37.760><c> product</c><00:48:38.400><c> last</c>

00:48:39.349 --> 00:48:39.359 align:start position:0%
here is the last row do product last
 

00:48:39.359 --> 00:48:42.349 align:start position:0%
here is the last row do product last
column<00:48:40.359><c> now</c><00:48:40.520><c> the</c><00:48:40.640><c> trick</c><00:48:40.960><c> here</c><00:48:41.240><c> is</c><00:48:41.760><c> uh</c><00:48:41.960><c> the</c>

00:48:42.349 --> 00:48:42.359 align:start position:0%
column now the trick here is uh the
 

00:48:42.359 --> 00:48:44.750 align:start position:0%
column now the trick here is uh the
following<00:48:43.359><c> this</c><00:48:43.480><c> is</c><00:48:43.680><c> just</c><00:48:43.839><c> a</c><00:48:43.960><c> boring</c><00:48:44.280><c> number</c>

00:48:44.750 --> 00:48:44.760 align:start position:0%
following this is just a boring number
 

00:48:44.760 --> 00:48:48.069 align:start position:0%
following this is just a boring number
of<00:48:45.640><c> um</c><00:48:46.359><c> it's</c><00:48:46.559><c> just</c><00:48:46.680><c> a</c><00:48:46.800><c> boring</c><00:48:47.319><c> array</c><00:48:47.720><c> of</c><00:48:47.880><c> all</c>

00:48:48.069 --> 00:48:48.079 align:start position:0%
of um it's just a boring array of all
 

00:48:48.079 --> 00:48:50.710 align:start position:0%
of um it's just a boring array of all
ones<00:48:49.079><c> but</c><00:48:49.240><c> torch</c><00:48:49.559><c> has</c><00:48:49.760><c> this</c><00:48:49.920><c> function</c><00:48:50.319><c> called</c>

00:48:50.710 --> 00:48:50.720 align:start position:0%
ones but torch has this function called
 

00:48:50.720 --> 00:48:54.190 align:start position:0%
ones but torch has this function called
Trail<00:48:51.720><c> which</c><00:48:51.880><c> is</c><00:48:52.040><c> short</c><00:48:52.400><c> for</c><00:48:52.839><c> a</c>

00:48:54.190 --> 00:48:54.200 align:start position:0%
Trail which is short for a
 

00:48:54.200 --> 00:48:56.789 align:start position:0%
Trail which is short for a
triangular<00:48:55.200><c> uh</c><00:48:55.359><c> something</c><00:48:55.680><c> like</c><00:48:55.880><c> that</c><00:48:56.520><c> and</c>

00:48:56.789 --> 00:48:56.799 align:start position:0%
triangular uh something like that and
 

00:48:56.799 --> 00:48:58.349 align:start position:0%
triangular uh something like that and
you<00:48:56.839><c> can</c><00:48:56.960><c> wrap</c><00:48:57.160><c> it</c><00:48:57.280><c> in</c><00:48:57.480><c> torch</c><00:48:57.720><c> up</c><00:48:57.920><c> once</c><00:48:58.200><c> and</c><00:48:58.319><c> it</c>

00:48:58.349 --> 00:48:58.359 align:start position:0%
you can wrap it in torch up once and it
 

00:48:58.359 --> 00:49:00.349 align:start position:0%
you can wrap it in torch up once and it
will<00:48:58.520><c> just</c><00:48:58.799><c> return</c><00:48:59.079><c> the</c><00:48:59.359><c> lower</c><00:48:59.720><c> triangular</c>

00:49:00.349 --> 00:49:00.359 align:start position:0%
will just return the lower triangular
 

00:49:00.359 --> 00:49:03.750 align:start position:0%
will just return the lower triangular
portion<00:49:01.119><c> of</c><00:49:01.760><c> this</c>

00:49:03.750 --> 00:49:03.760 align:start position:0%
portion of this
 

00:49:03.760 --> 00:49:06.549 align:start position:0%
portion of this
okay<00:49:04.760><c> so</c><00:49:04.920><c> now</c><00:49:05.119><c> it</c><00:49:05.200><c> will</c><00:49:05.359><c> basically</c><00:49:05.720><c> zero</c><00:49:06.040><c> out</c>

00:49:06.549 --> 00:49:06.559 align:start position:0%
okay so now it will basically zero out
 

00:49:06.559 --> 00:49:08.109 align:start position:0%
okay so now it will basically zero out
uh<00:49:06.680><c> these</c><00:49:06.880><c> guys</c><00:49:07.119><c> here</c><00:49:07.440><c> so</c><00:49:07.599><c> we</c><00:49:07.760><c> just</c><00:49:07.880><c> get</c><00:49:08.000><c> the</c>

00:49:08.109 --> 00:49:08.119 align:start position:0%
uh these guys here so we just get the
 

00:49:08.119 --> 00:49:10.390 align:start position:0%
uh these guys here so we just get the
lower<00:49:08.400><c> triangular</c><00:49:08.960><c> part</c><00:49:09.720><c> well</c><00:49:09.880><c> what</c><00:49:10.040><c> happens</c>

00:49:10.390 --> 00:49:10.400 align:start position:0%
lower triangular part well what happens
 

00:49:10.400 --> 00:49:14.030 align:start position:0%
lower triangular part well what happens
if<00:49:11.240><c> we</c><00:49:11.400><c> do</c>

00:49:14.030 --> 00:49:14.040 align:start position:0%
 
 

00:49:14.040 --> 00:49:17.589 align:start position:0%
 
that<00:49:15.040><c> so</c><00:49:15.240><c> now</c><00:49:15.400><c> we'll</c><00:49:15.680><c> have</c><00:49:16.520><c> a</c><00:49:16.760><c> like</c><00:49:17.000><c> this</c><00:49:17.240><c> and</c><00:49:17.400><c> B</c>

00:49:17.589 --> 00:49:17.599 align:start position:0%
that so now we'll have a like this and B
 

00:49:17.599 --> 00:49:18.910 align:start position:0%
that so now we'll have a like this and B
like<00:49:17.799><c> this</c><00:49:18.119><c> and</c><00:49:18.240><c> now</c><00:49:18.359><c> what</c><00:49:18.480><c> are</c><00:49:18.559><c> we</c><00:49:18.680><c> getting</c>

00:49:18.910 --> 00:49:18.920 align:start position:0%
like this and now what are we getting
 

00:49:18.920 --> 00:49:22.030 align:start position:0%
like this and now what are we getting
here<00:49:19.079><c> in</c><00:49:19.400><c> C</c><00:49:20.400><c> well</c><00:49:20.680><c> what</c><00:49:20.839><c> is</c><00:49:20.960><c> this</c><00:49:21.119><c> number</c><00:49:21.880><c> well</c>

00:49:22.030 --> 00:49:22.040 align:start position:0%
here in C well what is this number well
 

00:49:22.040 --> 00:49:24.510 align:start position:0%
here in C well what is this number well
this<00:49:22.119><c> is</c><00:49:22.319><c> the</c><00:49:22.480><c> first</c><00:49:22.839><c> row</c><00:49:23.680><c> times</c><00:49:24.119><c> the</c><00:49:24.240><c> First</c>

00:49:24.510 --> 00:49:24.520 align:start position:0%
this is the first row times the First
 

00:49:24.520 --> 00:49:28.630 align:start position:0%
this is the first row times the First
Column<00:49:25.400><c> and</c><00:49:25.559><c> because</c><00:49:25.799><c> this</c><00:49:25.920><c> is</c><00:49:26.160><c> zeros</c>

00:49:28.630 --> 00:49:28.640 align:start position:0%
Column and because this is zeros
 

00:49:28.640 --> 00:49:30.630 align:start position:0%
Column and because this is zeros
uh<00:49:28.960><c> these</c><00:49:29.160><c> elements</c><00:49:29.599><c> here</c><00:49:29.799><c> are</c><00:49:29.960><c> now</c><00:49:30.160><c> ignored</c>

00:49:30.630 --> 00:49:30.640 align:start position:0%
uh these elements here are now ignored
 

00:49:30.640 --> 00:49:32.870 align:start position:0%
uh these elements here are now ignored
so<00:49:30.760><c> we</c><00:49:30.880><c> just</c><00:49:31.040><c> get</c><00:49:31.160><c> a</c><00:49:31.400><c> two</c><00:49:32.400><c> and</c><00:49:32.520><c> then</c><00:49:32.720><c> this</c>

00:49:32.870 --> 00:49:32.880 align:start position:0%
so we just get a two and then this
 

00:49:32.880 --> 00:49:35.390 align:start position:0%
so we just get a two and then this
number<00:49:33.200><c> here</c><00:49:33.599><c> is</c><00:49:33.799><c> the</c><00:49:33.960><c> first</c><00:49:34.280><c> row</c><00:49:34.720><c> times</c><00:49:35.119><c> the</c>

00:49:35.390 --> 00:49:35.400 align:start position:0%
number here is the first row times the
 

00:49:35.400 --> 00:49:37.230 align:start position:0%
number here is the first row times the
second<00:49:35.760><c> column</c><00:49:36.640><c> and</c><00:49:36.760><c> because</c><00:49:36.960><c> these</c><00:49:37.079><c> are</c>

00:49:37.230 --> 00:49:37.240 align:start position:0%
second column and because these are
 

00:49:37.240 --> 00:49:39.270 align:start position:0%
second column and because these are
zeros<00:49:37.599><c> they</c><00:49:37.720><c> get</c><00:49:37.880><c> ignored</c><00:49:38.480><c> and</c><00:49:38.680><c> it's</c><00:49:38.920><c> just</c>

00:49:39.270 --> 00:49:39.280 align:start position:0%
zeros they get ignored and it's just
 

00:49:39.280 --> 00:49:42.510 align:start position:0%
zeros they get ignored and it's just
seven<00:49:40.160><c> this</c><00:49:40.319><c> seven</c><00:49:40.559><c> multiplies</c><00:49:41.040><c> this</c><00:49:41.400><c> one</c><00:49:42.400><c> but</c>

00:49:42.510 --> 00:49:42.520 align:start position:0%
seven this seven multiplies this one but
 

00:49:42.520 --> 00:49:43.950 align:start position:0%
seven this seven multiplies this one but
look<00:49:42.720><c> what</c><00:49:42.839><c> happened</c><00:49:43.160><c> here</c><00:49:43.400><c> because</c><00:49:43.680><c> this</c><00:49:43.799><c> is</c>

00:49:43.950 --> 00:49:43.960 align:start position:0%
look what happened here because this is
 

00:49:43.960 --> 00:49:46.750 align:start position:0%
look what happened here because this is
one<00:49:44.240><c> and</c><00:49:44.359><c> then</c><00:49:44.680><c> zeros</c><00:49:45.680><c> we</c><00:49:46.240><c> what</c><00:49:46.400><c> ended</c><00:49:46.599><c> up</c>

00:49:46.750 --> 00:49:46.760 align:start position:0%
one and then zeros we what ended up
 

00:49:46.760 --> 00:49:48.270 align:start position:0%
one and then zeros we what ended up
happening<00:49:47.040><c> is</c><00:49:47.160><c> we're</c><00:49:47.319><c> just</c><00:49:47.480><c> plucking</c><00:49:47.839><c> out</c><00:49:48.119><c> the</c>

00:49:48.270 --> 00:49:48.280 align:start position:0%
happening is we're just plucking out the
 

00:49:48.280 --> 00:49:51.230 align:start position:0%
happening is we're just plucking out the
row<00:49:48.599><c> of</c><00:49:48.960><c> this</c><00:49:49.160><c> row</c><00:49:49.400><c> of</c><00:49:49.559><c> B</c><00:49:50.040><c> and</c><00:49:50.160><c> that's</c><00:49:50.319><c> what</c><00:49:50.440><c> we</c>

00:49:51.230 --> 00:49:51.240 align:start position:0%
row of this row of B and that's what we
 

00:49:51.240 --> 00:49:57.349 align:start position:0%
row of this row of B and that's what we
got<00:49:52.240><c> now</c><00:49:52.520><c> here</c><00:49:53.359><c> we</c><00:49:53.559><c> have</c><00:49:53.920><c> one</c><00:49:54.160><c> 1</c><00:49:54.440><c> Z</c><00:49:55.359><c> so</c><00:49:55.720><c> here</c><00:49:56.720><c> 110</c>

00:49:57.349 --> 00:49:57.359 align:start position:0%
got now here we have one 1 Z so here 110
 

00:49:57.359 --> 00:49:58.990 align:start position:0%
got now here we have one 1 Z so here 110
do<00:49:57.599><c> product</c><00:49:57.920><c> with</c><00:49:58.119><c> these</c><00:49:58.240><c> two</c><00:49:58.400><c> columns</c><00:49:58.839><c> will</c>

00:49:58.990 --> 00:49:59.000 align:start position:0%
do product with these two columns will
 

00:49:59.000 --> 00:50:01.990 align:start position:0%
do product with these two columns will
now<00:49:59.160><c> give</c><00:49:59.319><c> us</c><00:49:59.520><c> 2</c><00:49:59.760><c> +</c><00:49:59.960><c> 6</c><00:50:00.240><c> which</c><00:50:00.319><c> is</c><00:50:00.440><c> 8</c><00:50:01.000><c> and</c><00:50:01.160><c> 7</c><00:50:01.440><c> +</c><00:50:01.640><c> 4</c>

00:50:01.990 --> 00:50:02.000 align:start position:0%
now give us 2 + 6 which is 8 and 7 + 4
 

00:50:02.000 --> 00:50:05.390 align:start position:0%
now give us 2 + 6 which is 8 and 7 + 4
which<00:50:02.079><c> is</c><00:50:02.400><c> 11</c><00:50:03.400><c> and</c><00:50:03.520><c> because</c><00:50:03.799><c> this</c><00:50:03.880><c> is</c><00:50:04.240><c> 111</c><00:50:05.240><c> we</c>

00:50:05.390 --> 00:50:05.400 align:start position:0%
which is 11 and because this is 111 we
 

00:50:05.400 --> 00:50:07.789 align:start position:0%
which is 11 and because this is 111 we
ended<00:50:05.680><c> up</c><00:50:05.920><c> with</c><00:50:06.599><c> the</c><00:50:06.760><c> addition</c><00:50:07.160><c> of</c><00:50:07.319><c> all</c><00:50:07.440><c> of</c>

00:50:07.789 --> 00:50:07.799 align:start position:0%
ended up with the addition of all of
 

00:50:07.799 --> 00:50:10.190 align:start position:0%
ended up with the addition of all of
them<00:50:08.799><c> and</c><00:50:08.880><c> so</c><00:50:09.079><c> basically</c><00:50:09.599><c> depending</c><00:50:09.920><c> on</c><00:50:10.079><c> how</c>

00:50:10.190 --> 00:50:10.200 align:start position:0%
them and so basically depending on how
 

00:50:10.200 --> 00:50:12.829 align:start position:0%
them and so basically depending on how
many<00:50:10.400><c> ones</c><00:50:10.640><c> and</c><00:50:10.799><c> zeros</c><00:50:11.160><c> we</c><00:50:11.319><c> have</c><00:50:11.559><c> here</c><00:50:12.240><c> we</c><00:50:12.359><c> are</c>

00:50:12.829 --> 00:50:12.839 align:start position:0%
many ones and zeros we have here we are
 

00:50:12.839 --> 00:50:16.670 align:start position:0%
many ones and zeros we have here we are
basically<00:50:13.280><c> doing</c><00:50:14.119><c> a</c><00:50:14.359><c> sum</c><00:50:15.079><c> currently</c><00:50:16.079><c> of</c><00:50:16.480><c> a</c>

00:50:16.670 --> 00:50:16.680 align:start position:0%
basically doing a sum currently of a
 

00:50:16.680 --> 00:50:18.870 align:start position:0%
basically doing a sum currently of a
variable<00:50:17.119><c> number</c><00:50:17.520><c> of</c><00:50:17.720><c> these</c><00:50:17.920><c> rows</c><00:50:18.599><c> and</c><00:50:18.760><c> that</c>

00:50:18.870 --> 00:50:18.880 align:start position:0%
variable number of these rows and that
 

00:50:18.880 --> 00:50:20.710 align:start position:0%
variable number of these rows and that
gets<00:50:19.119><c> deposited</c><00:50:19.599><c> into</c>

00:50:20.710 --> 00:50:20.720 align:start position:0%
gets deposited into
 

00:50:20.720 --> 00:50:23.150 align:start position:0%
gets deposited into
C<00:50:21.720><c> So</c><00:50:21.880><c> currently</c><00:50:22.200><c> we're</c><00:50:22.319><c> doing</c><00:50:22.520><c> sums</c><00:50:22.960><c> because</c>

00:50:23.150 --> 00:50:23.160 align:start position:0%
C So currently we're doing sums because
 

00:50:23.160 --> 00:50:25.109 align:start position:0%
C So currently we're doing sums because
these<00:50:23.280><c> are</c><00:50:23.520><c> ones</c><00:50:24.319><c> but</c><00:50:24.440><c> we</c><00:50:24.520><c> can</c><00:50:24.680><c> also</c><00:50:24.880><c> do</c>

00:50:25.109 --> 00:50:25.119 align:start position:0%
these are ones but we can also do
 

00:50:25.119 --> 00:50:27.589 align:start position:0%
these are ones but we can also do
average<00:50:25.920><c> right</c><00:50:26.440><c> and</c><00:50:26.760><c> you</c><00:50:26.839><c> can</c><00:50:27.040><c> start</c><00:50:27.240><c> to</c><00:50:27.400><c> see</c>

00:50:27.589 --> 00:50:27.599 align:start position:0%
average right and you can start to see
 

00:50:27.599 --> 00:50:29.950 align:start position:0%
average right and you can start to see
how<00:50:27.720><c> we</c><00:50:27.839><c> could</c><00:50:27.960><c> do</c><00:50:28.160><c> average</c><00:50:28.960><c> uh</c><00:50:29.119><c> of</c><00:50:29.480><c> the</c><00:50:29.640><c> rows</c>

00:50:29.950 --> 00:50:29.960 align:start position:0%
how we could do average uh of the rows
 

00:50:29.960 --> 00:50:32.630 align:start position:0%
how we could do average uh of the rows
of<00:50:30.200><c> B</c><00:50:31.200><c> uh</c><00:50:31.280><c> sort</c><00:50:31.480><c> of</c><00:50:31.599><c> in</c><00:50:31.680><c> an</c><00:50:31.799><c> incremental</c>

00:50:32.630 --> 00:50:32.640 align:start position:0%
of B uh sort of in an incremental
 

00:50:32.640 --> 00:50:35.190 align:start position:0%
of B uh sort of in an incremental
fashion<00:50:33.640><c> because</c><00:50:34.119><c> we</c><00:50:34.240><c> don't</c><00:50:34.400><c> have</c><00:50:34.520><c> to</c><00:50:34.960><c> we</c><00:50:35.040><c> can</c>

00:50:35.190 --> 00:50:35.200 align:start position:0%
fashion because we don't have to we can
 

00:50:35.200 --> 00:50:37.549 align:start position:0%
fashion because we don't have to we can
basically<00:50:35.640><c> normalize</c><00:50:36.440><c> these</c><00:50:36.640><c> rows</c><00:50:37.240><c> so</c><00:50:37.400><c> that</c>

00:50:37.549 --> 00:50:37.559 align:start position:0%
basically normalize these rows so that
 

00:50:37.559 --> 00:50:39.030 align:start position:0%
basically normalize these rows so that
they<00:50:37.720><c> sum</c><00:50:38.000><c> to</c><00:50:38.200><c> one</c><00:50:38.559><c> and</c><00:50:38.680><c> then</c><00:50:38.760><c> we're</c><00:50:38.880><c> going</c><00:50:38.960><c> to</c>

00:50:39.030 --> 00:50:39.040 align:start position:0%
they sum to one and then we're going to
 

00:50:39.040 --> 00:50:41.950 align:start position:0%
they sum to one and then we're going to
get<00:50:39.160><c> an</c><00:50:39.319><c> average</c><00:50:40.319><c> so</c><00:50:40.440><c> if</c><00:50:40.559><c> we</c><00:50:40.680><c> took</c><00:50:40.960><c> a</c><00:50:41.760><c> and</c><00:50:41.880><c> then</c>

00:50:41.950 --> 00:50:41.960 align:start position:0%
get an average so if we took a and then
 

00:50:41.960 --> 00:50:43.549 align:start position:0%
get an average so if we took a and then
we<00:50:42.119><c> did</c><00:50:42.319><c> aals</c>

00:50:43.549 --> 00:50:43.559 align:start position:0%
we did aals
 

00:50:43.559 --> 00:50:51.870 align:start position:0%
we did aals
aide<00:50:44.559><c> torch.</c><00:50:45.440><c> sum</c><00:50:46.440><c> in</c><00:50:46.720><c> the</c><00:50:47.720><c> um</c><00:50:48.720><c> of</c><00:50:48.920><c> a</c><00:50:49.880><c> in</c><00:50:50.119><c> the</c><00:50:50.599><c> um</c>

00:50:51.870 --> 00:50:51.880 align:start position:0%
aide torch. sum in the um of a in the um
 

00:50:51.880 --> 00:50:55.309 align:start position:0%
aide torch. sum in the um of a in the um
oneth<00:50:53.079><c> Dimension</c><00:50:54.079><c> and</c><00:50:54.160><c> then</c><00:50:54.359><c> let's</c><00:50:54.559><c> keep</c><00:50:54.880><c> them</c>

00:50:55.309 --> 00:50:55.319 align:start position:0%
oneth Dimension and then let's keep them
 

00:50:55.319 --> 00:50:57.549 align:start position:0%
oneth Dimension and then let's keep them
as<00:50:55.520><c> true</c><00:50:56.400><c> so</c><00:50:56.640><c> so</c><00:50:56.720><c> therefore</c><00:50:56.960><c> the</c><00:50:57.040><c> broadcasting</c>

00:50:57.549 --> 00:50:57.559 align:start position:0%
as true so so therefore the broadcasting
 

00:50:57.559 --> 00:51:00.829 align:start position:0%
as true so so therefore the broadcasting
will<00:50:57.760><c> work</c><00:50:57.920><c> out</c><00:50:58.839><c> so</c><00:50:59.000><c> if</c><00:50:59.079><c> I</c><00:50:59.240><c> rerun</c><00:50:59.640><c> this</c><00:51:00.440><c> you</c><00:51:00.599><c> see</c>

00:51:00.829 --> 00:51:00.839 align:start position:0%
will work out so if I rerun this you see
 

00:51:00.839 --> 00:51:03.990 align:start position:0%
will work out so if I rerun this you see
now<00:51:01.040><c> that</c><00:51:01.240><c> these</c><00:51:01.480><c> rows</c><00:51:02.280><c> now</c><00:51:02.640><c> sum</c><00:51:02.960><c> to</c><00:51:03.119><c> one</c><00:51:03.760><c> so</c>

00:51:03.990 --> 00:51:04.000 align:start position:0%
now that these rows now sum to one so
 

00:51:04.000 --> 00:51:07.109 align:start position:0%
now that these rows now sum to one so
this<00:51:04.160><c> row</c><00:51:04.359><c> is</c><00:51:04.599><c> one</c><00:51:04.920><c> this</c><00:51:05.040><c> row</c><00:51:05.240><c> is</c><00:51:05.319><c> 0.</c><00:51:05.559><c> 5.5</c><00:51:06.240><c> Z</c><00:51:06.880><c> and</c>

00:51:07.109 --> 00:51:07.119 align:start position:0%
this row is one this row is 0. 5.5 Z and
 

00:51:07.119 --> 00:51:09.910 align:start position:0%
this row is one this row is 0. 5.5 Z and
here<00:51:07.240><c> we</c><00:51:07.400><c> get</c><00:51:07.960><c> 1/3</c><00:51:08.960><c> and</c><00:51:09.119><c> now</c><00:51:09.280><c> when</c><00:51:09.400><c> we</c><00:51:09.520><c> do</c><00:51:09.720><c> a</c>

00:51:09.910 --> 00:51:09.920 align:start position:0%
here we get 1/3 and now when we do a
 

00:51:09.920 --> 00:51:12.789 align:start position:0%
here we get 1/3 and now when we do a
multiply<00:51:10.359><c> B</c><00:51:11.000><c> what</c><00:51:11.119><c> are</c><00:51:11.240><c> we</c><00:51:11.559><c> getting</c><00:51:12.559><c> here</c><00:51:12.720><c> we</c>

00:51:12.789 --> 00:51:12.799 align:start position:0%
multiply B what are we getting here we
 

00:51:12.799 --> 00:51:15.789 align:start position:0%
multiply B what are we getting here we
are<00:51:12.960><c> just</c><00:51:13.119><c> getting</c><00:51:13.319><c> the</c><00:51:13.440><c> first</c><00:51:13.680><c> row</c><00:51:14.200><c> first</c><00:51:14.799><c> row</c>

00:51:15.789 --> 00:51:15.799 align:start position:0%
are just getting the first row first row
 

00:51:15.799 --> 00:51:18.150 align:start position:0%
are just getting the first row first row
here<00:51:16.000><c> now</c><00:51:16.200><c> we</c><00:51:16.280><c> are</c><00:51:16.440><c> getting</c><00:51:16.720><c> the</c><00:51:17.000><c> average</c><00:51:18.000><c> of</c>

00:51:18.150 --> 00:51:18.160 align:start position:0%
here now we are getting the average of
 

00:51:18.160 --> 00:51:20.150 align:start position:0%
here now we are getting the average of
the<00:51:18.280><c> first</c><00:51:18.480><c> two</c>

00:51:20.150 --> 00:51:20.160 align:start position:0%
the first two
 

00:51:20.160 --> 00:51:23.390 align:start position:0%
the first two
rows<00:51:21.160><c> okay</c><00:51:21.359><c> so</c><00:51:21.599><c> 2</c><00:51:21.880><c> and</c><00:51:22.079><c> six</c><00:51:22.400><c> average</c><00:51:22.680><c> is</c><00:51:22.839><c> four</c>

00:51:23.390 --> 00:51:23.400 align:start position:0%
rows okay so 2 and six average is four
 

00:51:23.400 --> 00:51:25.069 align:start position:0%
rows okay so 2 and six average is four
and<00:51:23.520><c> four</c><00:51:23.680><c> and</c><00:51:23.839><c> seven</c><00:51:24.079><c> average</c><00:51:24.319><c> is</c>

00:51:25.069 --> 00:51:25.079 align:start position:0%
and four and seven average is
 

00:51:25.079 --> 00:51:27.829 align:start position:0%
and four and seven average is
5.5<00:51:26.079><c> and</c><00:51:26.359><c> on</c><00:51:26.640><c> the</c><00:51:26.760><c> bottom</c><00:51:27.040><c> here</c><00:51:27.359><c> we</c><00:51:27.480><c> are</c><00:51:27.640><c> now</c>

00:51:27.829 --> 00:51:27.839 align:start position:0%
5.5 and on the bottom here we are now
 

00:51:27.839 --> 00:51:31.470 align:start position:0%
5.5 and on the bottom here we are now
getting<00:51:28.559><c> the</c><00:51:28.760><c> average</c><00:51:29.640><c> of</c><00:51:29.839><c> these</c><00:51:30.000><c> three</c><00:51:30.480><c> rows</c>

00:51:31.470 --> 00:51:31.480 align:start position:0%
getting the average of these three rows
 

00:51:31.480 --> 00:51:33.789 align:start position:0%
getting the average of these three rows
so<00:51:31.680><c> the</c><00:51:31.839><c> average</c><00:51:32.319><c> of</c><00:51:32.599><c> all</c><00:51:32.760><c> of</c><00:51:33.000><c> elements</c><00:51:33.319><c> of</c><00:51:33.480><c> B</c>

00:51:33.789 --> 00:51:33.799 align:start position:0%
so the average of all of elements of B
 

00:51:33.799 --> 00:51:36.950 align:start position:0%
so the average of all of elements of B
are<00:51:34.000><c> now</c><00:51:34.319><c> deposited</c><00:51:35.440><c> here</c><00:51:36.440><c> and</c><00:51:36.559><c> so</c><00:51:36.680><c> you</c><00:51:36.799><c> can</c>

00:51:36.950 --> 00:51:36.960 align:start position:0%
are now deposited here and so you can
 

00:51:36.960 --> 00:51:39.990 align:start position:0%
are now deposited here and so you can
see<00:51:37.280><c> that</c><00:51:37.559><c> by</c><00:51:38.240><c> manipulating</c><00:51:39.240><c> these</c><00:51:39.760><c> uh</c>

00:51:39.990 --> 00:51:40.000 align:start position:0%
see that by manipulating these uh
 

00:51:40.000 --> 00:51:42.390 align:start position:0%
see that by manipulating these uh
elements<00:51:40.559><c> of</c><00:51:40.760><c> this</c><00:51:40.920><c> multiplying</c><00:51:41.480><c> Matrix</c><00:51:42.280><c> and</c>

00:51:42.390 --> 00:51:42.400 align:start position:0%
elements of this multiplying Matrix and
 

00:51:42.400 --> 00:51:44.470 align:start position:0%
elements of this multiplying Matrix and
then<00:51:42.599><c> multiplying</c><00:51:43.160><c> it</c><00:51:43.440><c> with</c><00:51:44.000><c> any</c><00:51:44.200><c> given</c>

00:51:44.470 --> 00:51:44.480 align:start position:0%
then multiplying it with any given
 

00:51:44.480 --> 00:51:47.430 align:start position:0%
then multiplying it with any given
Matrix<00:51:45.400><c> we</c><00:51:45.520><c> can</c><00:51:45.680><c> do</c><00:51:45.920><c> these</c><00:51:46.200><c> averages</c><00:51:47.119><c> in</c><00:51:47.280><c> this</c>

00:51:47.430 --> 00:51:47.440 align:start position:0%
Matrix we can do these averages in this
 

00:51:47.440 --> 00:51:50.390 align:start position:0%
Matrix we can do these averages in this
incremental<00:51:48.040><c> fashion</c><00:51:48.960><c> because</c><00:51:49.200><c> we</c><00:51:49.359><c> just</c><00:51:49.599><c> get</c>

00:51:50.390 --> 00:51:50.400 align:start position:0%
incremental fashion because we just get
 

00:51:50.400 --> 00:51:53.109 align:start position:0%
incremental fashion because we just get
um<00:51:51.400><c> and</c><00:51:51.559><c> we</c><00:51:51.680><c> can</c><00:51:51.839><c> manipulate</c><00:51:52.359><c> that</c><00:51:52.520><c> based</c><00:51:52.760><c> on</c>

00:51:53.109 --> 00:51:53.119 align:start position:0%
um and we can manipulate that based on
 

00:51:53.119 --> 00:51:55.270 align:start position:0%
um and we can manipulate that based on
the<00:51:53.240><c> elements</c><00:51:53.599><c> of</c><00:51:53.799><c> a</c><00:51:54.680><c> okay</c><00:51:54.799><c> so</c><00:51:54.960><c> that's</c><00:51:55.119><c> very</c>

00:51:55.270 --> 00:51:55.280 align:start position:0%
the elements of a okay so that's very
 

00:51:55.280 --> 00:51:57.470 align:start position:0%
the elements of a okay so that's very
convenient<00:51:56.000><c> so</c><00:51:56.319><c> let's</c><00:51:56.599><c> let's</c><00:51:56.760><c> swing</c><00:51:57.119><c> back</c><00:51:57.280><c> up</c>

00:51:57.470 --> 00:51:57.480 align:start position:0%
convenient so let's let's swing back up
 

00:51:57.480 --> 00:51:59.190 align:start position:0%
convenient so let's let's swing back up
here<00:51:57.960><c> and</c><00:51:58.079><c> see</c><00:51:58.280><c> how</c><00:51:58.400><c> we</c><00:51:58.480><c> can</c><00:51:58.640><c> vectorize</c><00:51:59.079><c> this</c>

00:51:59.190 --> 00:51:59.200 align:start position:0%
here and see how we can vectorize this
 

00:51:59.200 --> 00:52:00.829 align:start position:0%
here and see how we can vectorize this
and<00:51:59.319><c> make</c><00:51:59.440><c> it</c><00:51:59.559><c> much</c><00:51:59.720><c> more</c><00:51:59.880><c> efficient</c><00:52:00.520><c> using</c>

00:52:00.829 --> 00:52:00.839 align:start position:0%
and make it much more efficient using
 

00:52:00.839 --> 00:52:03.630 align:start position:0%
and make it much more efficient using
what<00:52:01.000><c> we've</c><00:52:01.240><c> learned</c><00:52:02.240><c> so</c><00:52:02.400><c> in</c>

00:52:03.630 --> 00:52:03.640 align:start position:0%
what we've learned so in
 

00:52:03.640 --> 00:52:05.750 align:start position:0%
what we've learned so in
particular<00:52:04.640><c> we</c><00:52:04.760><c> are</c><00:52:04.880><c> going</c><00:52:05.000><c> to</c><00:52:05.200><c> produce</c><00:52:05.599><c> an</c>

00:52:05.750 --> 00:52:05.760 align:start position:0%
particular we are going to produce an
 

00:52:05.760 --> 00:52:08.270 align:start position:0%
particular we are going to produce an
array<00:52:06.160><c> a</c><00:52:06.960><c> but</c><00:52:07.119><c> here</c><00:52:07.240><c> I'm</c><00:52:07.359><c> going</c><00:52:07.520><c> to</c><00:52:07.640><c> call</c><00:52:07.760><c> it</c><00:52:07.920><c> we</c>

00:52:08.270 --> 00:52:08.280 align:start position:0%
array a but here I'm going to call it we
 

00:52:08.280 --> 00:52:11.710 align:start position:0%
array a but here I'm going to call it we
short<00:52:08.599><c> for</c><00:52:09.160><c> weights</c><00:52:10.160><c> but</c><00:52:10.319><c> this</c><00:52:10.400><c> is</c><00:52:10.520><c> our</c>

00:52:11.710 --> 00:52:11.720 align:start position:0%
short for weights but this is our
 

00:52:11.720 --> 00:52:14.870 align:start position:0%
short for weights but this is our
a<00:52:12.720><c> and</c><00:52:12.880><c> this</c><00:52:13.000><c> is</c><00:52:13.200><c> how</c><00:52:13.400><c> much</c><00:52:13.599><c> of</c><00:52:13.839><c> every</c><00:52:14.160><c> row</c><00:52:14.720><c> we</c>

00:52:14.870 --> 00:52:14.880 align:start position:0%
a and this is how much of every row we
 

00:52:14.880 --> 00:52:17.190 align:start position:0%
a and this is how much of every row we
want<00:52:15.040><c> to</c><00:52:15.599><c> average</c><00:52:15.960><c> up</c><00:52:16.640><c> and</c><00:52:16.760><c> it's</c><00:52:16.880><c> going</c><00:52:17.000><c> to</c><00:52:17.079><c> be</c>

00:52:17.190 --> 00:52:17.200 align:start position:0%
want to average up and it's going to be
 

00:52:17.200 --> 00:52:18.309 align:start position:0%
want to average up and it's going to be
an<00:52:17.319><c> average</c><00:52:17.680><c> because</c><00:52:17.839><c> you</c><00:52:17.920><c> can</c><00:52:18.040><c> see</c><00:52:18.200><c> that</c>

00:52:18.309 --> 00:52:18.319 align:start position:0%
an average because you can see that
 

00:52:18.319 --> 00:52:20.030 align:start position:0%
an average because you can see that
these<00:52:18.520><c> rows</c><00:52:18.839><c> sum</c><00:52:19.079><c> to</c>

00:52:20.030 --> 00:52:20.040 align:start position:0%
these rows sum to
 

00:52:20.040 --> 00:52:23.549 align:start position:0%
these rows sum to
one<00:52:21.040><c> so</c><00:52:21.240><c> this</c><00:52:21.319><c> is</c><00:52:21.440><c> our</c><00:52:21.720><c> a</c><00:52:22.400><c> and</c><00:52:22.559><c> then</c><00:52:22.880><c> our</c><00:52:23.119><c> B</c><00:52:23.400><c> in</c>

00:52:23.549 --> 00:52:23.559 align:start position:0%
one so this is our a and then our B in
 

00:52:23.559 --> 00:52:27.789 align:start position:0%
one so this is our a and then our B in
this<00:52:23.760><c> example</c><00:52:24.119><c> of</c><00:52:24.240><c> course</c><00:52:25.119><c> is</c><00:52:26.119><c> X</c>

00:52:27.789 --> 00:52:27.799 align:start position:0%
this example of course is X
 

00:52:27.799 --> 00:52:29.309 align:start position:0%
this example of course is X
so<00:52:27.960><c> what's</c><00:52:28.119><c> going</c><00:52:28.240><c> to</c><00:52:28.400><c> happen</c><00:52:28.680><c> here</c><00:52:28.880><c> now</c><00:52:29.200><c> is</c>

00:52:29.309 --> 00:52:29.319 align:start position:0%
so what's going to happen here now is
 

00:52:29.319 --> 00:52:31.910 align:start position:0%
so what's going to happen here now is
that<00:52:29.480><c> we</c><00:52:29.559><c> are</c><00:52:29.640><c> going</c><00:52:29.760><c> to</c><00:52:29.839><c> have</c><00:52:29.960><c> an</c><00:52:30.160><c> expo</c>

00:52:31.910 --> 00:52:31.920 align:start position:0%
that we are going to have an expo
 

00:52:31.920 --> 00:52:36.549 align:start position:0%
that we are going to have an expo
2<00:52:32.920><c> and</c><00:52:33.280><c> this</c><00:52:33.480><c> Expo</c><00:52:33.880><c> 2</c><00:52:34.119><c> is</c><00:52:34.240><c> going</c><00:52:34.480><c> to</c><00:52:34.640><c> be</c><00:52:35.160><c> way</c>

00:52:36.549 --> 00:52:36.559 align:start position:0%
2 and this Expo 2 is going to be way
 

00:52:36.559 --> 00:52:38.390 align:start position:0%
2 and this Expo 2 is going to be way
multiplying

00:52:38.390 --> 00:52:38.400 align:start position:0%
multiplying
 

00:52:38.400 --> 00:52:42.670 align:start position:0%
multiplying
RX<00:52:39.400><c> so</c><00:52:39.559><c> let's</c><00:52:39.720><c> think</c><00:52:39.920><c> this</c><00:52:40.079><c> true</c><00:52:40.720><c> way</c><00:52:41.160><c> is</c><00:52:41.480><c> T</c><00:52:41.760><c> BYT</c>

00:52:42.670 --> 00:52:42.680 align:start position:0%
RX so let's think this true way is T BYT
 

00:52:42.680 --> 00:52:44.510 align:start position:0%
RX so let's think this true way is T BYT
and<00:52:42.799><c> this</c><00:52:42.920><c> is</c><00:52:43.559><c> Matrix</c><00:52:43.920><c> multiplying</c><00:52:44.359><c> in</c>

00:52:44.510 --> 00:52:44.520 align:start position:0%
and this is Matrix multiplying in
 

00:52:44.520 --> 00:52:47.190 align:start position:0%
and this is Matrix multiplying in
pytorch<00:52:45.319><c> a</c><00:52:45.520><c> b</c><00:52:45.799><c> by</c><00:52:45.960><c> T</c><00:52:46.240><c> by</c>

00:52:47.190 --> 00:52:47.200 align:start position:0%
pytorch a b by T by
 

00:52:47.200 --> 00:52:50.910 align:start position:0%
pytorch a b by T by
C<00:52:48.200><c> and</c><00:52:48.319><c> it's</c><00:52:48.480><c> giving</c><00:52:48.960><c> us</c><00:52:49.960><c> uh</c><00:52:50.200><c> different</c><00:52:50.760><c> what</c>

00:52:50.910 --> 00:52:50.920 align:start position:0%
C and it's giving us uh different what
 

00:52:50.920 --> 00:52:52.950 align:start position:0%
C and it's giving us uh different what
shape<00:52:51.760><c> so</c><00:52:52.040><c> pytorch</c><00:52:52.440><c> will</c><00:52:52.559><c> come</c><00:52:52.680><c> here</c><00:52:52.799><c> and</c><00:52:52.880><c> it</c>

00:52:52.950 --> 00:52:52.960 align:start position:0%
shape so pytorch will come here and it
 

00:52:52.960 --> 00:52:54.789 align:start position:0%
shape so pytorch will come here and it
will<00:52:53.119><c> see</c><00:52:53.359><c> that</c><00:52:53.559><c> these</c><00:52:53.720><c> shapes</c><00:52:54.040><c> are</c><00:52:54.280><c> not</c><00:52:54.680><c> the</c>

00:52:54.789 --> 00:52:54.799 align:start position:0%
will see that these shapes are not the
 

00:52:54.799 --> 00:52:57.390 align:start position:0%
will see that these shapes are not the
same<00:52:55.599><c> so</c><00:52:55.920><c> it</c><00:52:56.000><c> will</c><00:52:56.160><c> create</c><00:52:56.599><c> a</c><00:52:56.680><c> batch</c><00:52:56.920><c> Dimension</c>

00:52:57.390 --> 00:52:57.400 align:start position:0%
same so it will create a batch Dimension
 

00:52:57.400 --> 00:53:00.109 align:start position:0%
same so it will create a batch Dimension
here<00:52:58.240><c> and</c><00:52:58.359><c> this</c><00:52:58.440><c> is</c><00:52:58.559><c> a</c><00:52:58.760><c> batched</c><00:52:59.079><c> matrix</c>

00:53:00.109 --> 00:53:00.119 align:start position:0%
here and this is a batched matrix
 

00:53:00.119 --> 00:53:02.069 align:start position:0%
here and this is a batched matrix
multiply<00:53:01.119><c> and</c><00:53:01.240><c> so</c><00:53:01.440><c> it</c><00:53:01.559><c> will</c><00:53:01.720><c> apply</c><00:53:02.000><c> this</c>

00:53:02.069 --> 00:53:02.079 align:start position:0%
multiply and so it will apply this
 

00:53:02.079 --> 00:53:03.990 align:start position:0%
multiply and so it will apply this
matrix<00:53:02.400><c> multiplication</c><00:53:03.160><c> in</c><00:53:03.359><c> all</c><00:53:03.520><c> the</c><00:53:03.720><c> batch</c>

00:53:03.990 --> 00:53:04.000 align:start position:0%
matrix multiplication in all the batch
 

00:53:04.000 --> 00:53:08.030 align:start position:0%
matrix multiplication in all the batch
elements<00:53:04.880><c> um</c><00:53:05.040><c> in</c><00:53:05.599><c> parallel</c><00:53:06.599><c> and</c><00:53:07.040><c> individually</c>

00:53:08.030 --> 00:53:08.040 align:start position:0%
elements um in parallel and individually
 

00:53:08.040 --> 00:53:09.789 align:start position:0%
elements um in parallel and individually
and<00:53:08.160><c> then</c><00:53:08.319><c> for</c><00:53:08.480><c> each</c><00:53:08.720><c> batch</c><00:53:09.000><c> element</c><00:53:09.680><c> there</c>

00:53:09.789 --> 00:53:09.799 align:start position:0%
and then for each batch element there
 

00:53:09.799 --> 00:53:12.750 align:start position:0%
and then for each batch element there
will<00:53:09.920><c> be</c><00:53:10.040><c> a</c><00:53:10.200><c> t</c><00:53:10.400><c> BYT</c><00:53:10.760><c> multiplying</c><00:53:11.319><c> T</c><00:53:11.559><c> by</c><00:53:11.760><c> C</c>

00:53:12.750 --> 00:53:12.760 align:start position:0%
will be a t BYT multiplying T by C
 

00:53:12.760 --> 00:53:15.789 align:start position:0%
will be a t BYT multiplying T by C
exactly<00:53:13.160><c> as</c><00:53:13.319><c> we</c><00:53:13.520><c> had</c>

00:53:15.789 --> 00:53:15.799 align:start position:0%
exactly as we had
 

00:53:15.799 --> 00:53:20.630 align:start position:0%
exactly as we had
below<00:53:16.799><c> so</c><00:53:17.040><c> this</c><00:53:17.119><c> will</c><00:53:17.319><c> now</c><00:53:17.880><c> create</c><00:53:18.880><c> B</c><00:53:19.160><c> by</c><00:53:19.359><c> T</c><00:53:19.599><c> by</c>

00:53:20.630 --> 00:53:20.640 align:start position:0%
below so this will now create B by T by
 

00:53:20.640 --> 00:53:24.589 align:start position:0%
below so this will now create B by T by
C<00:53:21.640><c> and</c><00:53:22.000><c> Expo</c><00:53:22.480><c> 2</c><00:53:23.119><c> will</c><00:53:23.359><c> now</c><00:53:23.559><c> become</c><00:53:23.960><c> identical</c>

00:53:24.589 --> 00:53:24.599 align:start position:0%
C and Expo 2 will now become identical
 

00:53:24.599 --> 00:53:28.109 align:start position:0%
C and Expo 2 will now become identical
to<00:53:24.839><c> Expo</c>

00:53:28.109 --> 00:53:28.119 align:start position:0%
 
 

00:53:28.119 --> 00:53:32.309 align:start position:0%
 
so<00:53:29.119><c> we</c><00:53:29.240><c> can</c><00:53:29.400><c> see</c><00:53:29.640><c> that</c><00:53:29.799><c> torch.</c><00:53:30.319><c> all</c><00:53:31.040><c> close</c><00:53:32.040><c> of</c>

00:53:32.309 --> 00:53:32.319 align:start position:0%
so we can see that torch. all close of
 

00:53:32.319 --> 00:53:36.390 align:start position:0%
so we can see that torch. all close of
xbo<00:53:32.839><c> and</c><00:53:33.000><c> xbo</c><00:53:33.400><c> 2</c><00:53:33.880><c> should</c><00:53:34.119><c> be</c><00:53:34.400><c> true</c>

00:53:36.390 --> 00:53:36.400 align:start position:0%
xbo and xbo 2 should be true
 

00:53:36.400 --> 00:53:38.829 align:start position:0%
xbo and xbo 2 should be true
now<00:53:37.400><c> so</c><00:53:37.599><c> this</c><00:53:37.760><c> kind</c><00:53:37.880><c> of</c><00:53:38.000><c> like</c><00:53:38.160><c> convinces</c><00:53:38.559><c> us</c>

00:53:38.829 --> 00:53:38.839 align:start position:0%
now so this kind of like convinces us
 

00:53:38.839 --> 00:53:43.190 align:start position:0%
now so this kind of like convinces us
that<00:53:39.280><c> uh</c><00:53:39.559><c> these</c><00:53:39.720><c> are</c><00:53:40.079><c> in</c><00:53:40.280><c> fact</c><00:53:41.000><c> um</c><00:53:41.599><c> the</c><00:53:41.920><c> same</c><00:53:42.920><c> so</c>

00:53:43.190 --> 00:53:43.200 align:start position:0%
that uh these are in fact um the same so
 

00:53:43.200 --> 00:53:47.109 align:start position:0%
that uh these are in fact um the same so
xbo<00:53:43.960><c> and</c><00:53:44.200><c> xbo</c><00:53:44.599><c> 2</c><00:53:45.000><c> if</c><00:53:45.119><c> I</c><00:53:45.280><c> just</c><00:53:45.440><c> print</c>

00:53:47.109 --> 00:53:47.119 align:start position:0%
xbo and xbo 2 if I just print
 

00:53:47.119 --> 00:53:49.670 align:start position:0%
xbo and xbo 2 if I just print
them<00:53:48.119><c> uh</c><00:53:48.559><c> okay</c><00:53:48.839><c> we're</c><00:53:49.000><c> not</c><00:53:49.119><c> going</c><00:53:49.240><c> to</c><00:53:49.359><c> be</c><00:53:49.480><c> able</c>

00:53:49.670 --> 00:53:49.680 align:start position:0%
them uh okay we're not going to be able
 

00:53:49.680 --> 00:53:51.710 align:start position:0%
them uh okay we're not going to be able
to<00:53:50.680><c> okay</c><00:53:50.880><c> we're</c><00:53:51.040><c> not</c><00:53:51.119><c> going</c><00:53:51.240><c> to</c><00:53:51.319><c> be</c><00:53:51.400><c> able</c><00:53:51.559><c> to</c>

00:53:51.710 --> 00:53:51.720 align:start position:0%
to okay we're not going to be able to
 

00:53:51.720 --> 00:53:54.190 align:start position:0%
to okay we're not going to be able to
just<00:53:52.000><c> stare</c><00:53:52.319><c> it</c><00:53:52.480><c> down</c><00:53:52.760><c> but</c>

00:53:54.190 --> 00:53:54.200 align:start position:0%
just stare it down but
 

00:53:54.200 --> 00:53:56.670 align:start position:0%
just stare it down but
um<00:53:55.200><c> well</c><00:53:55.319><c> let</c><00:53:55.440><c> me</c><00:53:55.559><c> try</c><00:53:55.799><c> Expo</c><00:53:56.200><c> basically</c><00:53:56.559><c> just</c>

00:53:56.670 --> 00:53:56.680 align:start position:0%
um well let me try Expo basically just
 

00:53:56.680 --> 00:53:58.230 align:start position:0%
um well let me try Expo basically just
at<00:53:56.799><c> the</c><00:53:56.880><c> zeroth</c><00:53:57.200><c> element</c><00:53:57.440><c> and</c><00:53:57.559><c> Expo</c><00:53:57.960><c> two</c><00:53:58.119><c> at</c>

00:53:58.230 --> 00:53:58.240 align:start position:0%
at the zeroth element and Expo two at
 

00:53:58.240 --> 00:53:59.829 align:start position:0%
at the zeroth element and Expo two at
the<00:53:58.319><c> zeroth</c><00:53:58.680><c> element</c><00:53:59.000><c> so</c><00:53:59.200><c> just</c><00:53:59.319><c> the</c><00:53:59.520><c> first</c>

00:53:59.829 --> 00:53:59.839 align:start position:0%
the zeroth element so just the first
 

00:53:59.839 --> 00:54:02.430 align:start position:0%
the zeroth element so just the first
batch<00:54:00.599><c> and</c><00:54:00.680><c> we</c><00:54:00.799><c> should</c><00:54:00.960><c> see</c><00:54:01.240><c> that</c><00:54:01.480><c> this</c><00:54:02.240><c> and</c>

00:54:02.430 --> 00:54:02.440 align:start position:0%
batch and we should see that this and
 

00:54:02.440 --> 00:54:04.589 align:start position:0%
batch and we should see that this and
that<00:54:02.599><c> should</c><00:54:02.760><c> be</c><00:54:03.000><c> identical</c><00:54:03.640><c> which</c><00:54:03.799><c> they</c>

00:54:04.589 --> 00:54:04.599 align:start position:0%
that should be identical which they
 

00:54:04.599 --> 00:54:07.430 align:start position:0%
that should be identical which they
are<00:54:05.599><c> right</c><00:54:05.880><c> so</c><00:54:06.040><c> what</c><00:54:06.200><c> happened</c><00:54:06.559><c> here</c><00:54:07.280><c> the</c>

00:54:07.430 --> 00:54:07.440 align:start position:0%
are right so what happened here the
 

00:54:07.440 --> 00:54:09.510 align:start position:0%
are right so what happened here the
trick<00:54:07.720><c> is</c><00:54:08.319><c> we</c><00:54:08.400><c> were</c><00:54:08.599><c> able</c><00:54:08.799><c> to</c><00:54:08.920><c> use</c><00:54:09.200><c> batched</c>

00:54:09.510 --> 00:54:09.520 align:start position:0%
trick is we were able to use batched
 

00:54:09.520 --> 00:54:12.750 align:start position:0%
trick is we were able to use batched
Matrix<00:54:10.079><c> multiply</c><00:54:11.079><c> to</c><00:54:11.599><c> do</c><00:54:11.960><c> this</c><00:54:12.520><c> uh</c>

00:54:12.750 --> 00:54:12.760 align:start position:0%
Matrix multiply to do this uh
 

00:54:12.760 --> 00:54:15.710 align:start position:0%
Matrix multiply to do this uh
aggregation<00:54:13.760><c> really</c><00:54:14.599><c> and</c><00:54:14.720><c> it's</c><00:54:14.880><c> a</c><00:54:15.079><c> weighted</c>

00:54:15.710 --> 00:54:15.720 align:start position:0%
aggregation really and it's a weighted
 

00:54:15.720 --> 00:54:17.710 align:start position:0%
aggregation really and it's a weighted
aggregation<00:54:16.720><c> and</c><00:54:16.839><c> the</c><00:54:17.040><c> weights</c><00:54:17.440><c> are</c>

00:54:17.710 --> 00:54:17.720 align:start position:0%
aggregation and the weights are
 

00:54:17.720 --> 00:54:21.470 align:start position:0%
aggregation and the weights are
specified<00:54:18.440><c> in</c><00:54:18.680><c> this</c><00:54:19.160><c> um</c><00:54:19.440><c> T</c><00:54:19.680><c> BYT</c><00:54:20.400><c> array</c><00:54:21.400><c> and</c>

00:54:21.470 --> 00:54:21.480 align:start position:0%
specified in this um T BYT array and
 

00:54:21.480 --> 00:54:24.430 align:start position:0%
specified in this um T BYT array and
we're<00:54:21.680><c> basically</c><00:54:22.000><c> doing</c><00:54:22.280><c> weighted</c><00:54:22.880><c> sums</c><00:54:23.880><c> and</c>

00:54:24.430 --> 00:54:24.440 align:start position:0%
we're basically doing weighted sums and
 

00:54:24.440 --> 00:54:26.430 align:start position:0%
we're basically doing weighted sums and
uh<00:54:24.760><c> these</c><00:54:24.920><c> weighted</c><00:54:25.240><c> sums</c><00:54:25.599><c> are</c><00:54:25.839><c> are</c><00:54:26.160><c> U</c>

00:54:26.430 --> 00:54:26.440 align:start position:0%
uh these weighted sums are are U
 

00:54:26.440 --> 00:54:28.829 align:start position:0%
uh these weighted sums are are U
according<00:54:26.799><c> to</c><00:54:27.400><c> uh</c><00:54:27.520><c> the</c><00:54:27.640><c> weights</c><00:54:27.960><c> inside</c><00:54:28.359><c> here</c>

00:54:28.829 --> 00:54:28.839 align:start position:0%
according to uh the weights inside here
 

00:54:28.839 --> 00:54:31.150 align:start position:0%
according to uh the weights inside here
they<00:54:29.000><c> take</c><00:54:29.200><c> on</c><00:54:29.799><c> sort</c><00:54:29.960><c> of</c><00:54:30.079><c> this</c><00:54:30.240><c> triangular</c>

00:54:31.150 --> 00:54:31.160 align:start position:0%
they take on sort of this triangular
 

00:54:31.160 --> 00:54:33.710 align:start position:0%
they take on sort of this triangular
form<00:54:32.160><c> and</c><00:54:32.280><c> so</c><00:54:32.440><c> that</c><00:54:32.559><c> means</c><00:54:32.880><c> that</c><00:54:33.119><c> a</c><00:54:33.280><c> token</c><00:54:33.559><c> at</c>

00:54:33.710 --> 00:54:33.720 align:start position:0%
form and so that means that a token at
 

00:54:33.720 --> 00:54:36.230 align:start position:0%
form and so that means that a token at
the<00:54:33.839><c> teth</c><00:54:34.160><c> dimension</c><00:54:34.640><c> will</c><00:54:34.880><c> only</c><00:54:35.319><c> get</c><00:54:35.920><c> uh</c><00:54:36.040><c> sort</c>

00:54:36.230 --> 00:54:36.240 align:start position:0%
the teth dimension will only get uh sort
 

00:54:36.240 --> 00:54:39.589 align:start position:0%
the teth dimension will only get uh sort
of<00:54:36.680><c> um</c><00:54:37.040><c> information</c><00:54:37.599><c> from</c><00:54:38.200><c> the</c><00:54:38.760><c> um</c><00:54:39.160><c> tokens</c>

00:54:39.589 --> 00:54:39.599 align:start position:0%
of um information from the um tokens
 

00:54:39.599 --> 00:54:41.470 align:start position:0%
of um information from the um tokens
perceiving<00:54:40.079><c> it</c><00:54:40.559><c> so</c><00:54:40.720><c> that's</c><00:54:40.920><c> exactly</c><00:54:41.240><c> what</c><00:54:41.359><c> we</c>

00:54:41.470 --> 00:54:41.480 align:start position:0%
perceiving it so that's exactly what we
 

00:54:41.480 --> 00:54:43.549 align:start position:0%
perceiving it so that's exactly what we
want<00:54:42.240><c> and</c><00:54:42.440><c> finally</c><00:54:42.760><c> I</c><00:54:42.839><c> would</c><00:54:43.000><c> like</c><00:54:43.119><c> to</c><00:54:43.240><c> rewrite</c>

00:54:43.549 --> 00:54:43.559 align:start position:0%
want and finally I would like to rewrite
 

00:54:43.559 --> 00:54:46.150 align:start position:0%
want and finally I would like to rewrite
it<00:54:43.720><c> in</c><00:54:43.920><c> one</c><00:54:44.079><c> more</c><00:54:44.480><c> way</c><00:54:45.480><c> and</c><00:54:45.640><c> we're</c><00:54:45.880><c> going</c><00:54:46.040><c> to</c>

00:54:46.150 --> 00:54:46.160 align:start position:0%
it in one more way and we're going to
 

00:54:46.160 --> 00:54:48.630 align:start position:0%
it in one more way and we're going to
see<00:54:46.359><c> why</c><00:54:46.520><c> that's</c><00:54:47.040><c> useful</c><00:54:48.040><c> so</c><00:54:48.280><c> this</c><00:54:48.359><c> is</c><00:54:48.480><c> the</c>

00:54:48.630 --> 00:54:48.640 align:start position:0%
see why that's useful so this is the
 

00:54:48.640 --> 00:54:50.910 align:start position:0%
see why that's useful so this is the
third<00:54:48.920><c> version</c><00:54:49.680><c> and</c><00:54:49.880><c> it's</c><00:54:50.040><c> also</c><00:54:50.359><c> identical</c><00:54:50.760><c> to</c>

00:54:50.910 --> 00:54:50.920 align:start position:0%
third version and it's also identical to
 

00:54:50.920 --> 00:54:53.230 align:start position:0%
third version and it's also identical to
the<00:54:51.079><c> first</c><00:54:51.319><c> and</c><00:54:51.520><c> second</c><00:54:52.359><c> but</c><00:54:52.559><c> let</c><00:54:52.680><c> me</c><00:54:52.920><c> talk</c>

00:54:53.230 --> 00:54:53.240 align:start position:0%
the first and second but let me talk
 

00:54:53.240 --> 00:54:54.710 align:start position:0%
the first and second but let me talk
through<00:54:53.440><c> it</c><00:54:53.720><c> it</c><00:54:53.839><c> uses</c>

00:54:54.710 --> 00:54:54.720 align:start position:0%
through it it uses
 

00:54:54.720 --> 00:55:00.349 align:start position:0%
through it it uses
softmax<00:54:55.720><c> so</c><00:54:56.760><c> Trill</c><00:54:57.720><c> here</c><00:54:58.720><c> is</c><00:54:59.280><c> this</c><00:54:59.480><c> Matrix</c>

00:55:00.349 --> 00:55:00.359 align:start position:0%
softmax so Trill here is this Matrix
 

00:55:00.359 --> 00:55:01.750 align:start position:0%
softmax so Trill here is this Matrix
lower<00:55:00.720><c> triangular</c>

00:55:01.750 --> 00:55:01.760 align:start position:0%
lower triangular
 

00:55:01.760 --> 00:55:05.390 align:start position:0%
lower triangular
ones<00:55:02.760><c> way</c><00:55:03.559><c> begins</c><00:55:04.079><c> as</c><00:55:04.200><c> all</c>

00:55:05.390 --> 00:55:05.400 align:start position:0%
ones way begins as all
 

00:55:05.400 --> 00:55:07.910 align:start position:0%
ones way begins as all
zero<00:55:06.400><c> okay</c><00:55:06.559><c> so</c><00:55:06.799><c> if</c><00:55:06.880><c> I</c><00:55:07.000><c> just</c><00:55:07.160><c> print</c><00:55:07.440><c> way</c><00:55:07.720><c> in</c><00:55:07.799><c> the</c>

00:55:07.910 --> 00:55:07.920 align:start position:0%
zero okay so if I just print way in the
 

00:55:07.920 --> 00:55:11.670 align:start position:0%
zero okay so if I just print way in the
beginning<00:55:08.799><c> it's</c><00:55:08.960><c> all</c><00:55:09.640><c> zero</c><00:55:10.640><c> then</c><00:55:10.920><c> I</c>

00:55:11.670 --> 00:55:11.680 align:start position:0%
beginning it's all zero then I
 

00:55:11.680 --> 00:55:15.190 align:start position:0%
beginning it's all zero then I
used<00:55:12.680><c> masked</c><00:55:13.200><c> fill</c><00:55:14.200><c> so</c><00:55:14.359><c> what</c><00:55:14.520><c> this</c><00:55:14.599><c> is</c><00:55:14.760><c> doing</c>

00:55:15.190 --> 00:55:15.200 align:start position:0%
used masked fill so what this is doing
 

00:55:15.200 --> 00:55:18.349 align:start position:0%
used masked fill so what this is doing
is<00:55:16.200><c> we.</c><00:55:16.680><c> masked</c><00:55:17.040><c> fill</c><00:55:17.520><c> it's</c><00:55:17.680><c> all</c><00:55:17.880><c> zeros</c><00:55:18.280><c> and</c>

00:55:18.349 --> 00:55:18.359 align:start position:0%
is we. masked fill it's all zeros and
 

00:55:18.359 --> 00:55:20.710 align:start position:0%
is we. masked fill it's all zeros and
I'm<00:55:18.559><c> saying</c><00:55:19.559><c> for</c><00:55:19.799><c> all</c><00:55:19.960><c> the</c><00:55:20.079><c> elements</c><00:55:20.520><c> where</c>

00:55:20.710 --> 00:55:20.720 align:start position:0%
I'm saying for all the elements where
 

00:55:20.720 --> 00:55:23.789 align:start position:0%
I'm saying for all the elements where
Trill<00:55:21.079><c> is</c><00:55:21.200><c> equal</c><00:55:21.520><c> equal</c><00:55:21.880><c> Z</c><00:55:22.880><c> make</c><00:55:23.119><c> them</c><00:55:23.599><c> be</c>

00:55:23.789 --> 00:55:23.799 align:start position:0%
Trill is equal equal Z make them be
 

00:55:23.799 --> 00:55:26.349 align:start position:0%
Trill is equal equal Z make them be
negative<00:55:24.440><c> Infinity</c><00:55:25.440><c> so</c><00:55:25.680><c> all</c><00:55:25.799><c> the</c><00:55:25.920><c> elements</c>

00:55:26.349 --> 00:55:26.359 align:start position:0%
negative Infinity so all the elements
 

00:55:26.359 --> 00:55:28.470 align:start position:0%
negative Infinity so all the elements
where<00:55:26.559><c> Trill</c><00:55:26.839><c> is</c><00:55:27.039><c> zero</c><00:55:27.440><c> will</c><00:55:27.680><c> become</c><00:55:28.160><c> negative</c>

00:55:28.470 --> 00:55:28.480 align:start position:0%
where Trill is zero will become negative
 

00:55:28.480 --> 00:55:32.309 align:start position:0%
where Trill is zero will become negative
Infinity<00:55:29.160><c> now</c><00:55:30.160><c> so</c><00:55:30.319><c> this</c><00:55:30.400><c> is</c><00:55:30.520><c> what</c><00:55:30.640><c> we</c><00:55:31.240><c> get</c><00:55:32.240><c> and</c>

00:55:32.309 --> 00:55:32.319 align:start position:0%
Infinity now so this is what we get and
 

00:55:32.319 --> 00:55:36.270 align:start position:0%
Infinity now so this is what we get and
then<00:55:32.440><c> the</c><00:55:32.599><c> final</c><00:55:32.880><c> line</c><00:55:33.200><c> here</c><00:55:33.760><c> is</c>

00:55:36.270 --> 00:55:36.280 align:start position:0%
then the final line here is
 

00:55:36.280 --> 00:55:38.910 align:start position:0%
then the final line here is
softmax<00:55:37.280><c> so</c><00:55:37.480><c> if</c><00:55:37.599><c> I</c><00:55:37.720><c> take</c><00:55:37.839><c> a</c><00:55:38.000><c> softmax</c><00:55:38.599><c> along</c>

00:55:38.910 --> 00:55:38.920 align:start position:0%
softmax so if I take a softmax along
 

00:55:38.920 --> 00:55:40.910 align:start position:0%
softmax so if I take a softmax along
every<00:55:39.160><c> single</c><00:55:39.680><c> so</c><00:55:39.880><c> dim</c><00:55:40.079><c> is</c><00:55:40.200><c> negative</c><00:55:40.480><c> one</c><00:55:40.760><c> so</c>

00:55:40.910 --> 00:55:40.920 align:start position:0%
every single so dim is negative one so
 

00:55:40.920 --> 00:55:44.390 align:start position:0%
every single so dim is negative one so
along<00:55:41.200><c> every</c><00:55:41.400><c> single</c><00:55:41.880><c> row</c><00:55:42.880><c> if</c><00:55:42.960><c> I</c><00:55:43.079><c> do</c><00:55:43.400><c> softmax</c>

00:55:44.390 --> 00:55:44.400 align:start position:0%
along every single row if I do softmax
 

00:55:44.400 --> 00:55:46.630 align:start position:0%
along every single row if I do softmax
what<00:55:44.520><c> is</c><00:55:44.680><c> that</c><00:55:44.799><c> going</c><00:55:44.960><c> to</c>

00:55:46.630 --> 00:55:46.640 align:start position:0%
what is that going to
 

00:55:46.640 --> 00:55:51.950 align:start position:0%
what is that going to
do<00:55:47.640><c> well</c><00:55:47.960><c> softmax</c><00:55:48.960><c> is</c><00:55:49.520><c> um</c><00:55:50.520><c> is</c><00:55:50.760><c> also</c><00:55:51.119><c> like</c><00:55:51.720><c> a</c>

00:55:51.950 --> 00:55:51.960 align:start position:0%
do well softmax is um is also like a
 

00:55:51.960 --> 00:55:54.910 align:start position:0%
do well softmax is um is also like a
normalization<00:55:52.680><c> operation</c><00:55:53.640><c> right</c><00:55:54.640><c> and</c><00:55:54.720><c> so</c>

00:55:54.910 --> 00:55:54.920 align:start position:0%
normalization operation right and so
 

00:55:54.920 --> 00:55:58.029 align:start position:0%
normalization operation right and so
spoiler<00:55:55.319><c> alert</c><00:55:55.960><c> you</c><00:55:56.039><c> get</c><00:55:56.319><c> the</c><00:55:56.440><c> exact</c><00:55:56.680><c> same</c>

00:55:58.029 --> 00:55:58.039 align:start position:0%
spoiler alert you get the exact same
 

00:55:58.039 --> 00:56:00.270 align:start position:0%
spoiler alert you get the exact same
Matrix<00:55:59.039><c> let</c><00:55:59.119><c> me</c><00:55:59.280><c> bring</c><00:55:59.480><c> back</c><00:55:59.599><c> to</c>

00:56:00.270 --> 00:56:00.280 align:start position:0%
Matrix let me bring back to
 

00:56:00.280 --> 00:56:02.789 align:start position:0%
Matrix let me bring back to
softmax<00:56:01.280><c> and</c><00:56:01.480><c> recall</c><00:56:01.799><c> that</c><00:56:01.960><c> in</c><00:56:02.119><c> softmax</c><00:56:02.640><c> we're</c>

00:56:02.789 --> 00:56:02.799 align:start position:0%
softmax and recall that in softmax we're
 

00:56:02.799 --> 00:56:04.510 align:start position:0%
softmax and recall that in softmax we're
going<00:56:02.920><c> to</c><00:56:03.079><c> exponentiate</c><00:56:03.799><c> every</c><00:56:04.000><c> single</c><00:56:04.359><c> one</c>

00:56:04.510 --> 00:56:04.520 align:start position:0%
going to exponentiate every single one
 

00:56:04.520 --> 00:56:06.789 align:start position:0%
going to exponentiate every single one
of<00:56:04.799><c> these</c><00:56:05.799><c> and</c><00:56:05.920><c> then</c><00:56:06.039><c> we're</c><00:56:06.160><c> going</c><00:56:06.319><c> to</c><00:56:06.480><c> divide</c>

00:56:06.789 --> 00:56:06.799 align:start position:0%
of these and then we're going to divide
 

00:56:06.799 --> 00:56:09.990 align:start position:0%
of these and then we're going to divide
by<00:56:06.920><c> the</c><00:56:07.319><c> sum</c><00:56:08.319><c> and</c><00:56:08.440><c> so</c><00:56:09.119><c> if</c><00:56:09.200><c> we</c><00:56:09.400><c> exponentiate</c>

00:56:09.990 --> 00:56:10.000 align:start position:0%
by the sum and so if we exponentiate
 

00:56:10.000 --> 00:56:11.309 align:start position:0%
by the sum and so if we exponentiate
every<00:56:10.160><c> single</c><00:56:10.400><c> element</c><00:56:10.760><c> here</c><00:56:10.920><c> we're</c><00:56:11.039><c> going</c><00:56:11.200><c> to</c>

00:56:11.309 --> 00:56:11.319 align:start position:0%
every single element here we're going to
 

00:56:11.319 --> 00:56:13.990 align:start position:0%
every single element here we're going to
get<00:56:11.400><c> a</c><00:56:11.599><c> one</c><00:56:12.440><c> and</c><00:56:12.599><c> here</c><00:56:12.760><c> we're</c><00:56:12.920><c> going</c><00:56:13.079><c> to</c><00:56:13.280><c> get</c><00:56:13.839><c> uh</c>

00:56:13.990 --> 00:56:14.000 align:start position:0%
get a one and here we're going to get uh
 

00:56:14.000 --> 00:56:17.109 align:start position:0%
get a one and here we're going to get uh
basically<00:56:14.400><c> zero</c><00:56:14.799><c> 0</c><00:56:15.079><c> z0</c><00:56:15.559><c> Z</c><00:56:15.799><c> everywhere</c><00:56:16.160><c> else</c>

00:56:17.109 --> 00:56:17.119 align:start position:0%
basically zero 0 z0 Z everywhere else
 

00:56:17.119 --> 00:56:19.349 align:start position:0%
basically zero 0 z0 Z everywhere else
and<00:56:17.280><c> then</c><00:56:17.480><c> when</c><00:56:17.640><c> we</c><00:56:18.119><c> normalize</c><00:56:18.720><c> we</c><00:56:18.839><c> just</c><00:56:19.079><c> get</c>

00:56:19.349 --> 00:56:19.359 align:start position:0%
and then when we normalize we just get
 

00:56:19.359 --> 00:56:21.829 align:start position:0%
and then when we normalize we just get
one<00:56:20.119><c> here</c><00:56:20.280><c> we're</c><00:56:20.440><c> going</c><00:56:20.520><c> to</c><00:56:20.599><c> get</c><00:56:20.760><c> one</c><00:56:21.039><c> one</c><00:56:21.680><c> and</c>

00:56:21.829 --> 00:56:21.839 align:start position:0%
one here we're going to get one one and
 

00:56:21.839 --> 00:56:24.630 align:start position:0%
one here we're going to get one one and
then<00:56:22.280><c> zeros</c><00:56:23.280><c> and</c><00:56:23.359><c> then</c><00:56:23.520><c> softmax</c><00:56:24.039><c> will</c><00:56:24.319><c> again</c>

00:56:24.630 --> 00:56:24.640 align:start position:0%
then zeros and then softmax will again
 

00:56:24.640 --> 00:56:27.349 align:start position:0%
then zeros and then softmax will again
divide<00:56:25.359><c> and</c><00:56:25.480><c> this</c><00:56:25.680><c> will</c><00:56:25.799><c> give</c><00:56:25.920><c> us</c><00:56:26.359><c> 5.5</c><00:56:27.079><c> and</c><00:56:27.200><c> so</c>

00:56:27.349 --> 00:56:27.359 align:start position:0%
divide and this will give us 5.5 and so
 

00:56:27.359 --> 00:56:30.750 align:start position:0%
divide and this will give us 5.5 and so
on<00:56:28.240><c> and</c><00:56:28.359><c> so</c><00:56:28.559><c> this</c><00:56:28.680><c> is</c><00:56:28.920><c> also</c><00:56:29.720><c> the</c><00:56:30.119><c> uh</c><00:56:30.359><c> the</c><00:56:30.480><c> same</c>

00:56:30.750 --> 00:56:30.760 align:start position:0%
on and so this is also the uh the same
 

00:56:30.760 --> 00:56:33.670 align:start position:0%
on and so this is also the uh the same
way<00:56:30.960><c> to</c><00:56:31.160><c> produce</c><00:56:31.839><c> uh</c><00:56:31.960><c> this</c><00:56:32.400><c> mask</c><00:56:33.400><c> now</c><00:56:33.559><c> the</c>

00:56:33.670 --> 00:56:33.680 align:start position:0%
way to produce uh this mask now the
 

00:56:33.680 --> 00:56:34.750 align:start position:0%
way to produce uh this mask now the
reason<00:56:33.920><c> that</c><00:56:34.039><c> this</c><00:56:34.160><c> is</c><00:56:34.319><c> a</c><00:56:34.440><c> bit</c><00:56:34.559><c> more</c>

00:56:34.750 --> 00:56:34.760 align:start position:0%
reason that this is a bit more
 

00:56:34.760 --> 00:56:36.190 align:start position:0%
reason that this is a bit more
interesting<00:56:35.440><c> and</c><00:56:35.559><c> the</c><00:56:35.680><c> reason</c><00:56:35.920><c> we're</c><00:56:36.039><c> going</c>

00:56:36.190 --> 00:56:36.200 align:start position:0%
interesting and the reason we're going
 

00:56:36.200 --> 00:56:37.910 align:start position:0%
interesting and the reason we're going
to<00:56:36.319><c> end</c><00:56:36.440><c> up</c><00:56:36.559><c> using</c><00:56:36.799><c> it</c><00:56:36.920><c> in</c><00:56:37.039><c> self</c>

00:56:37.910 --> 00:56:37.920 align:start position:0%
to end up using it in self
 

00:56:37.920 --> 00:56:41.789 align:start position:0%
to end up using it in self
attention<00:56:38.920><c> is</c><00:56:39.559><c> that</c><00:56:40.559><c> these</c><00:56:40.799><c> weights</c><00:56:41.200><c> here</c>

00:56:41.789 --> 00:56:41.799 align:start position:0%
attention is that these weights here
 

00:56:41.799 --> 00:56:44.670 align:start position:0%
attention is that these weights here
begin<00:56:42.799><c> uh</c><00:56:43.119><c> with</c><00:56:43.520><c> zero</c><00:56:44.039><c> and</c><00:56:44.160><c> you</c><00:56:44.240><c> can</c><00:56:44.400><c> think</c><00:56:44.520><c> of</c>

00:56:44.670 --> 00:56:44.680 align:start position:0%
begin uh with zero and you can think of
 

00:56:44.680 --> 00:56:46.630 align:start position:0%
begin uh with zero and you can think of
this<00:56:44.839><c> as</c><00:56:45.000><c> like</c><00:56:45.119><c> an</c><00:56:45.319><c> interaction</c><00:56:45.880><c> strength</c><00:56:46.480><c> or</c>

00:56:46.630 --> 00:56:46.640 align:start position:0%
this as like an interaction strength or
 

00:56:46.640 --> 00:56:49.190 align:start position:0%
this as like an interaction strength or
like<00:56:46.799><c> an</c><00:56:47.280><c> affinity</c><00:56:48.280><c> so</c><00:56:48.520><c> basically</c><00:56:49.039><c> it's</c>

00:56:49.190 --> 00:56:49.200 align:start position:0%
like an affinity so basically it's
 

00:56:49.200 --> 00:56:52.270 align:start position:0%
like an affinity so basically it's
telling<00:56:49.599><c> us</c><00:56:50.079><c> how</c><00:56:50.359><c> much</c><00:56:50.799><c> of</c><00:56:51.079><c> each</c><00:56:51.720><c> uh</c><00:56:51.880><c> token</c>

00:56:52.270 --> 00:56:52.280 align:start position:0%
telling us how much of each uh token
 

00:56:52.280 --> 00:56:54.870 align:start position:0%
telling us how much of each uh token
from<00:56:52.480><c> the</c><00:56:52.720><c> past</c><00:56:53.280><c> do</c><00:56:53.440><c> we</c><00:56:53.559><c> want</c><00:56:53.720><c> to</c><00:56:54.240><c> Aggregate</c>

00:56:54.870 --> 00:56:54.880 align:start position:0%
from the past do we want to Aggregate
 

00:56:54.880 --> 00:56:57.190 align:start position:0%
from the past do we want to Aggregate
and<00:56:55.160><c> average</c><00:56:55.559><c> up</c>

00:56:57.190 --> 00:56:57.200 align:start position:0%
and average up
 

00:56:57.200 --> 00:56:59.950 align:start position:0%
and average up
and<00:56:57.400><c> then</c><00:56:57.839><c> this</c><00:56:58.039><c> line</c><00:56:58.280><c> is</c><00:56:58.440><c> saying</c><00:56:59.400><c> tokens</c><00:56:59.799><c> from</c>

00:56:59.950 --> 00:56:59.960 align:start position:0%
and then this line is saying tokens from
 

00:56:59.960 --> 00:57:02.549 align:start position:0%
and then this line is saying tokens from
the<00:57:00.200><c> past</c><00:57:00.680><c> cannot</c><00:57:01.119><c> communicate</c><00:57:02.119><c> by</c><00:57:02.240><c> setting</c>

00:57:02.549 --> 00:57:02.559 align:start position:0%
the past cannot communicate by setting
 

00:57:02.559 --> 00:57:04.430 align:start position:0%
the past cannot communicate by setting
them<00:57:02.680><c> to</c><00:57:02.839><c> negative</c><00:57:03.200><c> Infinity</c><00:57:03.839><c> we're</c><00:57:04.039><c> saying</c>

00:57:04.430 --> 00:57:04.440 align:start position:0%
them to negative Infinity we're saying
 

00:57:04.440 --> 00:57:06.309 align:start position:0%
them to negative Infinity we're saying
that<00:57:04.559><c> we</c><00:57:04.680><c> will</c><00:57:04.880><c> not</c><00:57:05.160><c> aggregate</c><00:57:05.720><c> anything</c><00:57:06.079><c> from</c>

00:57:06.309 --> 00:57:06.319 align:start position:0%
that we will not aggregate anything from
 

00:57:06.319 --> 00:57:07.390 align:start position:0%
that we will not aggregate anything from
those

00:57:07.390 --> 00:57:07.400 align:start position:0%
those
 

00:57:07.400 --> 00:57:09.710 align:start position:0%
those
tokens<00:57:08.400><c> and</c><00:57:08.480><c> so</c><00:57:08.720><c> basically</c><00:57:09.280><c> this</c><00:57:09.440><c> then</c><00:57:09.559><c> goes</c>

00:57:09.710 --> 00:57:09.720 align:start position:0%
tokens and so basically this then goes
 

00:57:09.720 --> 00:57:11.349 align:start position:0%
tokens and so basically this then goes
through<00:57:09.880><c> softmax</c><00:57:10.440><c> and</c><00:57:10.559><c> through</c><00:57:10.720><c> the</c><00:57:10.839><c> weighted</c>

00:57:11.349 --> 00:57:11.359 align:start position:0%
through softmax and through the weighted
 

00:57:11.359 --> 00:57:12.670 align:start position:0%
through softmax and through the weighted
and<00:57:11.480><c> this</c><00:57:11.559><c> is</c><00:57:11.680><c> the</c><00:57:11.799><c> aggregation</c><00:57:12.480><c> through</c>

00:57:12.670 --> 00:57:12.680 align:start position:0%
and this is the aggregation through
 

00:57:12.680 --> 00:57:14.069 align:start position:0%
and this is the aggregation through
matrix

00:57:14.069 --> 00:57:14.079 align:start position:0%
matrix
 

00:57:14.079 --> 00:57:16.150 align:start position:0%
matrix
multiplication<00:57:15.079><c> and</c><00:57:15.200><c> so</c><00:57:15.400><c> what</c><00:57:15.559><c> this</c><00:57:15.680><c> is</c><00:57:15.880><c> now</c>

00:57:16.150 --> 00:57:16.160 align:start position:0%
multiplication and so what this is now
 

00:57:16.160 --> 00:57:19.150 align:start position:0%
multiplication and so what this is now
is<00:57:16.760><c> you</c><00:57:16.880><c> can</c><00:57:17.039><c> think</c><00:57:17.200><c> of</c><00:57:17.400><c> these</c><00:57:17.760><c> as</c><00:57:18.280><c> um</c><00:57:18.920><c> these</c>

00:57:19.150 --> 00:57:19.160 align:start position:0%
is you can think of these as um these
 

00:57:19.160 --> 00:57:21.549 align:start position:0%
is you can think of these as um these
zeros<00:57:20.000><c> are</c><00:57:20.240><c> currently</c><00:57:20.599><c> just</c><00:57:20.720><c> set</c><00:57:21.000><c> by</c><00:57:21.119><c> us</c><00:57:21.280><c> to</c><00:57:21.400><c> be</c>

00:57:21.549 --> 00:57:21.559 align:start position:0%
zeros are currently just set by us to be
 

00:57:21.559 --> 00:57:25.150 align:start position:0%
zeros are currently just set by us to be
zero<00:57:22.440><c> but</c><00:57:22.880><c> a</c><00:57:23.200><c> quick</c><00:57:23.480><c> preview</c><00:57:24.280><c> is</c><00:57:24.440><c> that</c><00:57:24.640><c> these</c>

00:57:25.150 --> 00:57:25.160 align:start position:0%
zero but a quick preview is that these
 

00:57:25.160 --> 00:57:27.430 align:start position:0%
zero but a quick preview is that these
affinities<00:57:26.160><c> between</c><00:57:26.359><c> the</c><00:57:26.480><c> tokens</c><00:57:27.079><c> are</c><00:57:27.280><c> not</c>

00:57:27.430 --> 00:57:27.440 align:start position:0%
affinities between the tokens are not
 

00:57:27.440 --> 00:57:29.190 align:start position:0%
affinities between the tokens are not
going<00:57:27.559><c> to</c><00:57:27.640><c> be</c><00:57:27.799><c> just</c><00:57:28.000><c> constant</c><00:57:28.359><c> at</c><00:57:28.559><c> zero</c>

00:57:29.190 --> 00:57:29.200 align:start position:0%
going to be just constant at zero
 

00:57:29.200 --> 00:57:31.390 align:start position:0%
going to be just constant at zero
they're<00:57:29.440><c> going</c><00:57:29.599><c> to</c><00:57:29.839><c> be</c><00:57:30.079><c> data</c><00:57:30.359><c> dependent</c><00:57:31.200><c> these</c>

00:57:31.390 --> 00:57:31.400 align:start position:0%
they're going to be data dependent these
 

00:57:31.400 --> 00:57:32.789 align:start position:0%
they're going to be data dependent these
tokens<00:57:31.720><c> are</c><00:57:31.839><c> going</c><00:57:32.000><c> to</c><00:57:32.119><c> start</c><00:57:32.359><c> looking</c><00:57:32.599><c> at</c>

00:57:32.789 --> 00:57:32.799 align:start position:0%
tokens are going to start looking at
 

00:57:32.799 --> 00:57:34.870 align:start position:0%
tokens are going to start looking at
each<00:57:32.920><c> other</c><00:57:33.680><c> and</c><00:57:33.839><c> some</c><00:57:34.079><c> tokens</c><00:57:34.440><c> will</c><00:57:34.599><c> find</c>

00:57:34.870 --> 00:57:34.880 align:start position:0%
each other and some tokens will find
 

00:57:34.880 --> 00:57:37.630 align:start position:0%
each other and some tokens will find
other<00:57:35.119><c> tokens</c><00:57:35.640><c> more</c><00:57:35.839><c> or</c><00:57:36.039><c> less</c><00:57:36.640><c> interesting</c>

00:57:37.630 --> 00:57:37.640 align:start position:0%
other tokens more or less interesting
 

00:57:37.640 --> 00:57:39.589 align:start position:0%
other tokens more or less interesting
and<00:57:37.920><c> depending</c><00:57:38.280><c> on</c><00:57:38.440><c> what</c><00:57:38.559><c> their</c><00:57:38.720><c> values</c><00:57:39.079><c> are</c>

00:57:39.589 --> 00:57:39.599 align:start position:0%
and depending on what their values are
 

00:57:39.599 --> 00:57:40.990 align:start position:0%
and depending on what their values are
they're<00:57:39.760><c> going</c><00:57:39.920><c> to</c><00:57:40.079><c> find</c><00:57:40.280><c> each</c><00:57:40.440><c> other</c>

00:57:40.990 --> 00:57:41.000 align:start position:0%
they're going to find each other
 

00:57:41.000 --> 00:57:42.910 align:start position:0%
they're going to find each other
interesting<00:57:41.400><c> to</c><00:57:41.640><c> different</c><00:57:41.960><c> amounts</c><00:57:42.720><c> and</c><00:57:42.839><c> I'm</c>

00:57:42.910 --> 00:57:42.920 align:start position:0%
interesting to different amounts and I'm
 

00:57:42.920 --> 00:57:45.270 align:start position:0%
interesting to different amounts and I'm
going<00:57:43.079><c> to</c><00:57:43.200><c> call</c><00:57:43.359><c> those</c><00:57:43.559><c> affinities</c><00:57:44.200><c> I</c><00:57:44.319><c> think</c>

00:57:45.270 --> 00:57:45.280 align:start position:0%
going to call those affinities I think
 

00:57:45.280 --> 00:57:47.069 align:start position:0%
going to call those affinities I think
and<00:57:45.400><c> then</c><00:57:45.599><c> here</c><00:57:45.760><c> we</c><00:57:45.880><c> are</c><00:57:46.039><c> saying</c><00:57:46.640><c> the</c><00:57:46.760><c> future</c>

00:57:47.069 --> 00:57:47.079 align:start position:0%
and then here we are saying the future
 

00:57:47.079 --> 00:57:49.109 align:start position:0%
and then here we are saying the future
cannot<00:57:47.359><c> communicate</c><00:57:47.760><c> with</c><00:57:47.880><c> the</c><00:57:48.039><c> past</c><00:57:48.960><c> we're</c>

00:57:49.109 --> 00:57:49.119 align:start position:0%
cannot communicate with the past we're
 

00:57:49.119 --> 00:57:51.549 align:start position:0%
cannot communicate with the past we're
we're<00:57:49.280><c> going</c><00:57:49.359><c> to</c><00:57:49.480><c> clamp</c><00:57:50.119><c> them</c><00:57:51.119><c> and</c><00:57:51.240><c> then</c><00:57:51.400><c> when</c>

00:57:51.549 --> 00:57:51.559 align:start position:0%
we're going to clamp them and then when
 

00:57:51.559 --> 00:57:53.630 align:start position:0%
we're going to clamp them and then when
we<00:57:51.720><c> normalize</c><00:57:52.319><c> and</c><00:57:52.559><c> sum</c><00:57:53.200><c> we're</c><00:57:53.359><c> going</c><00:57:53.440><c> to</c>

00:57:53.630 --> 00:57:53.640 align:start position:0%
we normalize and sum we're going to
 

00:57:53.640 --> 00:57:56.150 align:start position:0%
we normalize and sum we're going to
aggregate<00:57:54.640><c> uh</c><00:57:54.720><c> sort</c><00:57:54.920><c> of</c><00:57:55.079><c> their</c><00:57:55.319><c> values</c>

00:57:56.150 --> 00:57:56.160 align:start position:0%
aggregate uh sort of their values
 

00:57:56.160 --> 00:57:57.430 align:start position:0%
aggregate uh sort of their values
depending<00:57:56.400><c> on</c><00:57:56.520><c> how</c><00:57:56.680><c> interesting</c><00:57:57.039><c> they</c><00:57:57.200><c> find</c>

00:57:57.430 --> 00:57:57.440 align:start position:0%
depending on how interesting they find
 

00:57:57.440 --> 00:57:59.470 align:start position:0%
depending on how interesting they find
each<00:57:57.559><c> other</c><00:57:58.480><c> and</c><00:57:58.559><c> so</c><00:57:58.720><c> that's</c><00:57:58.880><c> the</c><00:57:59.000><c> preview</c><00:57:59.359><c> for</c>

00:57:59.470 --> 00:57:59.480 align:start position:0%
each other and so that's the preview for
 

00:57:59.480 --> 00:58:03.109 align:start position:0%
each other and so that's the preview for
self<00:57:59.920><c> attention</c><00:58:00.920><c> and</c><00:58:01.640><c> basically</c><00:58:02.640><c> long</c><00:58:02.839><c> story</c>

00:58:03.109 --> 00:58:03.119 align:start position:0%
self attention and basically long story
 

00:58:03.119 --> 00:58:05.069 align:start position:0%
self attention and basically long story
short<00:58:03.359><c> from</c><00:58:03.559><c> this</c><00:58:03.680><c> entire</c><00:58:03.920><c> section</c><00:58:04.319><c> is</c><00:58:04.520><c> that</c>

00:58:05.069 --> 00:58:05.079 align:start position:0%
short from this entire section is that
 

00:58:05.079 --> 00:58:07.710 align:start position:0%
short from this entire section is that
you<00:58:05.240><c> can</c><00:58:05.400><c> do</c><00:58:05.920><c> weighted</c><00:58:06.480><c> aggregations</c><00:58:07.319><c> of</c><00:58:07.440><c> your</c>

00:58:07.710 --> 00:58:07.720 align:start position:0%
you can do weighted aggregations of your
 

00:58:07.720 --> 00:58:08.630 align:start position:0%
you can do weighted aggregations of your
past

00:58:08.630 --> 00:58:08.640 align:start position:0%
past
 

00:58:08.640 --> 00:58:11.990 align:start position:0%
past
Elements<00:58:09.640><c> by</c><00:58:10.319><c> having</c><00:58:10.880><c> by</c><00:58:11.079><c> using</c><00:58:11.359><c> matrix</c>

00:58:11.990 --> 00:58:12.000 align:start position:0%
Elements by having by using matrix
 

00:58:12.000 --> 00:58:14.549 align:start position:0%
Elements by having by using matrix
multiplication<00:58:13.000><c> of</c><00:58:13.240><c> a</c><00:58:13.400><c> lower</c><00:58:13.720><c> triangular</c>

00:58:14.549 --> 00:58:14.559 align:start position:0%
multiplication of a lower triangular
 

00:58:14.559 --> 00:58:17.109 align:start position:0%
multiplication of a lower triangular
fashion<00:58:15.559><c> and</c><00:58:15.760><c> then</c><00:58:16.119><c> the</c><00:58:16.280><c> elements</c><00:58:16.799><c> here</c><00:58:17.000><c> in</c>

00:58:17.109 --> 00:58:17.119 align:start position:0%
fashion and then the elements here in
 

00:58:17.119 --> 00:58:18.750 align:start position:0%
fashion and then the elements here in
the<00:58:17.200><c> lower</c><00:58:17.480><c> triangular</c><00:58:18.039><c> part</c><00:58:18.359><c> are</c><00:58:18.520><c> telling</c>

00:58:18.750 --> 00:58:18.760 align:start position:0%
the lower triangular part are telling
 

00:58:18.760 --> 00:58:21.630 align:start position:0%
the lower triangular part are telling
you<00:58:18.960><c> how</c><00:58:19.119><c> much</c><00:58:19.480><c> of</c><00:58:19.640><c> each</c><00:58:19.839><c> element</c><00:58:20.559><c> uh</c><00:58:20.680><c> fuses</c>

00:58:21.630 --> 00:58:21.640 align:start position:0%
you how much of each element uh fuses
 

00:58:21.640 --> 00:58:23.990 align:start position:0%
you how much of each element uh fuses
into<00:58:22.000><c> this</c><00:58:22.319><c> position</c><00:58:23.319><c> so</c><00:58:23.480><c> we're</c><00:58:23.599><c> going</c><00:58:23.720><c> to</c><00:58:23.839><c> use</c>

00:58:23.990 --> 00:58:24.000 align:start position:0%
into this position so we're going to use
 

00:58:24.000 --> 00:58:25.510 align:start position:0%
into this position so we're going to use
this<00:58:24.119><c> trick</c><00:58:24.400><c> now</c><00:58:24.599><c> to</c><00:58:24.760><c> develop</c><00:58:25.119><c> the</c><00:58:25.240><c> self</c>

00:58:25.510 --> 00:58:25.520 align:start position:0%
this trick now to develop the self
 

00:58:25.520 --> 00:58:27.670 align:start position:0%
this trick now to develop the self
attention<00:58:25.880><c> block</c><00:58:26.119><c> block</c><00:58:26.920><c> so</c><00:58:27.119><c> first</c><00:58:27.359><c> let's</c><00:58:27.559><c> get</c>

00:58:27.670 --> 00:58:27.680 align:start position:0%
attention block block so first let's get
 

00:58:27.680 --> 00:58:30.430 align:start position:0%
attention block block so first let's get
some<00:58:27.880><c> quick</c><00:58:28.079><c> preliminaries</c><00:58:28.599><c> out</c><00:58:28.720><c> of</c><00:58:28.839><c> the</c><00:58:29.440><c> way</c>

00:58:30.430 --> 00:58:30.440 align:start position:0%
some quick preliminaries out of the way
 

00:58:30.440 --> 00:58:31.870 align:start position:0%
some quick preliminaries out of the way
first<00:58:30.680><c> the</c><00:58:30.760><c> thing</c><00:58:30.920><c> I'm</c><00:58:31.079><c> kind</c><00:58:31.200><c> of</c><00:58:31.319><c> bothered</c><00:58:31.680><c> by</c>

00:58:31.870 --> 00:58:31.880 align:start position:0%
first the thing I'm kind of bothered by
 

00:58:31.880 --> 00:58:33.270 align:start position:0%
first the thing I'm kind of bothered by
is<00:58:32.079><c> that</c><00:58:32.280><c> you</c><00:58:32.400><c> see</c><00:58:32.599><c> how</c><00:58:32.680><c> we're</c><00:58:32.880><c> passing</c><00:58:33.119><c> in</c>

00:58:33.270 --> 00:58:33.280 align:start position:0%
is that you see how we're passing in
 

00:58:33.280 --> 00:58:35.109 align:start position:0%
is that you see how we're passing in
vocap<00:58:33.640><c> size</c><00:58:33.839><c> into</c><00:58:34.000><c> the</c><00:58:34.160><c> Constructor</c><00:58:34.920><c> there's</c>

00:58:35.109 --> 00:58:35.119 align:start position:0%
vocap size into the Constructor there's
 

00:58:35.119 --> 00:58:36.710 align:start position:0%
vocap size into the Constructor there's
no<00:58:35.240><c> need</c><00:58:35.400><c> to</c><00:58:35.520><c> do</c><00:58:35.640><c> that</c><00:58:35.799><c> because</c><00:58:36.000><c> vocap</c><00:58:36.400><c> size</c><00:58:36.599><c> is</c>

00:58:36.710 --> 00:58:36.720 align:start position:0%
no need to do that because vocap size is
 

00:58:36.720 --> 00:58:38.829 align:start position:0%
no need to do that because vocap size is
already<00:58:37.079><c> defined</c><00:58:37.799><c> uh</c><00:58:37.920><c> up</c><00:58:38.119><c> top</c><00:58:38.319><c> as</c><00:58:38.400><c> a</c><00:58:38.520><c> global</c>

00:58:38.829 --> 00:58:38.839 align:start position:0%
already defined uh up top as a global
 

00:58:38.839 --> 00:58:40.549 align:start position:0%
already defined uh up top as a global
variable<00:58:39.359><c> so</c><00:58:39.559><c> there's</c><00:58:39.720><c> no</c><00:58:39.839><c> need</c><00:58:40.000><c> to</c><00:58:40.200><c> pass</c><00:58:40.400><c> this</c>

00:58:40.549 --> 00:58:40.559 align:start position:0%
variable so there's no need to pass this
 

00:58:40.559 --> 00:58:41.589 align:start position:0%
variable so there's no need to pass this
stuff

00:58:41.589 --> 00:58:41.599 align:start position:0%
stuff
 

00:58:41.599 --> 00:58:44.549 align:start position:0%
stuff
around<00:58:42.599><c> next</c><00:58:42.799><c> what</c><00:58:42.960><c> I</c><00:58:43.039><c> want</c><00:58:43.160><c> to</c><00:58:43.280><c> do</c><00:58:43.559><c> is</c><00:58:44.319><c> I</c><00:58:44.400><c> don't</c>

00:58:44.549 --> 00:58:44.559 align:start position:0%
around next what I want to do is I don't
 

00:58:44.559 --> 00:58:46.510 align:start position:0%
around next what I want to do is I don't
want<00:58:44.680><c> to</c><00:58:44.920><c> actually</c><00:58:45.280><c> create</c><00:58:45.960><c> I</c><00:58:46.039><c> want</c><00:58:46.160><c> to</c><00:58:46.280><c> create</c>

00:58:46.510 --> 00:58:46.520 align:start position:0%
want to actually create I want to create
 

00:58:46.520 --> 00:58:47.950 align:start position:0%
want to actually create I want to create
like<00:58:46.640><c> a</c><00:58:46.720><c> level</c><00:58:46.920><c> of</c><00:58:47.039><c> indirection</c><00:58:47.599><c> here</c><00:58:47.799><c> where</c>

00:58:47.950 --> 00:58:47.960 align:start position:0%
like a level of indirection here where
 

00:58:47.960 --> 00:58:49.670 align:start position:0%
like a level of indirection here where
we<00:58:48.079><c> don't</c><00:58:48.359><c> directly</c><00:58:48.799><c> go</c><00:58:48.920><c> to</c><00:58:49.160><c> the</c><00:58:49.280><c> embedding</c>

00:58:49.670 --> 00:58:49.680 align:start position:0%
we don't directly go to the embedding
 

00:58:49.680 --> 00:58:52.829 align:start position:0%
we don't directly go to the embedding
for<00:58:49.960><c> the</c><00:58:50.520><c> um</c><00:58:51.319><c> logits</c><00:58:52.160><c> but</c><00:58:52.280><c> instead</c><00:58:52.559><c> we</c><00:58:52.680><c> go</c>

00:58:52.829 --> 00:58:52.839 align:start position:0%
for the um logits but instead we go
 

00:58:52.839 --> 00:58:54.430 align:start position:0%
for the um logits but instead we go
through<00:58:53.039><c> this</c><00:58:53.280><c> intermediate</c><00:58:53.880><c> phase</c><00:58:54.280><c> because</c>

00:58:54.430 --> 00:58:54.440 align:start position:0%
through this intermediate phase because
 

00:58:54.440 --> 00:58:57.190 align:start position:0%
through this intermediate phase because
we're<00:58:54.599><c> going</c><00:58:54.760><c> to</c><00:58:54.920><c> start</c><00:58:55.720><c> making</c><00:58:56.200><c> that</c><00:58:56.319><c> bigger</c>

00:58:57.190 --> 00:58:57.200 align:start position:0%
we're going to start making that bigger
 

00:58:57.200 --> 00:58:59.829 align:start position:0%
we're going to start making that bigger
so<00:58:57.359><c> let</c><00:58:57.480><c> me</c><00:58:57.680><c> introduce</c><00:58:58.160><c> a</c><00:58:58.280><c> new</c><00:58:58.480><c> variable</c><00:58:59.119><c> n</c>

00:58:59.829 --> 00:58:59.839 align:start position:0%
so let me introduce a new variable n
 

00:58:59.839 --> 00:59:02.670 align:start position:0%
so let me introduce a new variable n
embed<00:59:00.839><c> it</c><00:59:01.000><c> shorted</c><00:59:01.280><c> for</c><00:59:01.520><c> number</c><00:59:01.760><c> of</c><00:59:01.960><c> embedding</c>

00:59:02.670 --> 00:59:02.680 align:start position:0%
embed it shorted for number of embedding
 

00:59:02.680 --> 00:59:04.510 align:start position:0%
embed it shorted for number of embedding
Dimensions<00:59:03.680><c> so</c>

00:59:04.510 --> 00:59:04.520 align:start position:0%
Dimensions so
 

00:59:04.520 --> 00:59:09.470 align:start position:0%
Dimensions so
nbed<00:59:05.839><c> here</c><00:59:06.839><c> will</c><00:59:07.119><c> be</c><00:59:07.559><c> say</c><00:59:08.039><c> 32</c><00:59:09.039><c> that</c><00:59:09.160><c> was</c><00:59:09.280><c> a</c>

00:59:09.470 --> 00:59:09.480 align:start position:0%
nbed here will be say 32 that was a
 

00:59:09.480 --> 00:59:11.069 align:start position:0%
nbed here will be say 32 that was a
suggestion<00:59:09.920><c> from</c><00:59:10.119><c> GitHub</c><00:59:10.440><c> co-pilot</c><00:59:10.880><c> by</c><00:59:11.000><c> the</c>

00:59:11.069 --> 00:59:11.079 align:start position:0%
suggestion from GitHub co-pilot by the
 

00:59:11.079 --> 00:59:14.430 align:start position:0%
suggestion from GitHub co-pilot by the
way<00:59:11.599><c> um</c><00:59:11.920><c> it</c><00:59:12.119><c> also</c><00:59:12.240><c> suest</c><00:59:12.760><c> 32</c><00:59:13.240><c> which</c><00:59:13.359><c> is</c><00:59:13.520><c> a</c><00:59:13.680><c> good</c>

00:59:14.430 --> 00:59:14.440 align:start position:0%
way um it also suest 32 which is a good
 

00:59:14.440 --> 00:59:16.710 align:start position:0%
way um it also suest 32 which is a good
number<00:59:15.440><c> so</c><00:59:15.559><c> this</c><00:59:15.680><c> is</c><00:59:15.760><c> an</c><00:59:15.839><c> embedding</c><00:59:16.240><c> table</c><00:59:16.599><c> and</c>

00:59:16.710 --> 00:59:16.720 align:start position:0%
number so this is an embedding table and
 

00:59:16.720 --> 00:59:18.910 align:start position:0%
number so this is an embedding table and
only<00:59:16.960><c> 32</c><00:59:17.359><c> dimensional</c>

00:59:18.910 --> 00:59:18.920 align:start position:0%
only 32 dimensional
 

00:59:18.920 --> 00:59:21.230 align:start position:0%
only 32 dimensional
embeddings<00:59:19.920><c> so</c><00:59:20.200><c> then</c><00:59:20.440><c> here</c><00:59:20.839><c> this</c><00:59:20.960><c> is</c><00:59:21.079><c> not</c>

00:59:21.230 --> 00:59:21.240 align:start position:0%
embeddings so then here this is not
 

00:59:21.240 --> 00:59:23.549 align:start position:0%
embeddings so then here this is not
going<00:59:21.359><c> to</c><00:59:21.480><c> give</c><00:59:21.599><c> us</c><00:59:21.720><c> logits</c><00:59:22.240><c> directly</c><00:59:23.200><c> instead</c>

00:59:23.549 --> 00:59:23.559 align:start position:0%
going to give us logits directly instead
 

00:59:23.559 --> 00:59:24.789 align:start position:0%
going to give us logits directly instead
this<00:59:23.640><c> is</c><00:59:23.760><c> going</c><00:59:23.880><c> to</c><00:59:24.039><c> give</c><00:59:24.160><c> us</c><00:59:24.400><c> token</c>

00:59:24.789 --> 00:59:24.799 align:start position:0%
this is going to give us token
 

00:59:24.799 --> 00:59:27.190 align:start position:0%
this is going to give us token
embeddings<00:59:25.799><c> that's</c><00:59:26.200><c> I'm</c><00:59:26.280><c> going</c><00:59:26.400><c> to</c><00:59:26.520><c> call</c><00:59:26.680><c> it</c>

00:59:27.190 --> 00:59:27.200 align:start position:0%
embeddings that's I'm going to call it
 

00:59:27.200 --> 00:59:28.990 align:start position:0%
embeddings that's I'm going to call it
and<00:59:27.319><c> then</c><00:59:27.400><c> to</c><00:59:27.559><c> go</c><00:59:27.680><c> from</c><00:59:27.799><c> the</c><00:59:27.920><c> token</c><00:59:28.319><c> Tings</c><00:59:28.839><c> to</c>

00:59:28.990 --> 00:59:29.000 align:start position:0%
and then to go from the token Tings to
 

00:59:29.000 --> 00:59:30.750 align:start position:0%
and then to go from the token Tings to
the<00:59:29.119><c> logits</c><00:59:29.640><c> we're</c><00:59:29.799><c> going</c><00:59:29.920><c> to</c><00:59:30.039><c> need</c><00:59:30.240><c> a</c><00:59:30.400><c> linear</c>

00:59:30.750 --> 00:59:30.760 align:start position:0%
the logits we're going to need a linear
 

00:59:30.760 --> 00:59:34.069 align:start position:0%
the logits we're going to need a linear
layer<00:59:31.559><c> so</c><00:59:31.760><c> self.</c><00:59:32.280><c> LM</c><00:59:32.640><c> head</c><00:59:33.280><c> let's</c><00:59:33.520><c> call</c><00:59:33.680><c> it</c>

00:59:34.069 --> 00:59:34.079 align:start position:0%
layer so self. LM head let's call it
 

00:59:34.079 --> 00:59:36.470 align:start position:0%
layer so self. LM head let's call it
short<00:59:34.200><c> for</c><00:59:34.400><c> language</c><00:59:34.680><c> modeling</c><00:59:35.160><c> head</c><00:59:36.160><c> is</c><00:59:36.319><c> n</c>

00:59:36.470 --> 00:59:36.480 align:start position:0%
short for language modeling head is n
 

00:59:36.480 --> 00:59:39.870 align:start position:0%
short for language modeling head is n
and<00:59:36.640><c> linear</c><00:59:37.119><c> from</c><00:59:37.319><c> n</c><00:59:37.480><c> ined</c><00:59:37.920><c> up</c><00:59:38.039><c> to</c><00:59:38.200><c> vocap</c><00:59:38.880><c> size</c>

00:59:39.870 --> 00:59:39.880 align:start position:0%
and linear from n ined up to vocap size
 

00:59:39.880 --> 00:59:41.309 align:start position:0%
and linear from n ined up to vocap size
and<00:59:40.000><c> then</c><00:59:40.079><c> when</c><00:59:40.160><c> we</c><00:59:40.280><c> swing</c><00:59:40.559><c> over</c><00:59:40.799><c> here</c><00:59:41.119><c> we're</c>

00:59:41.309 --> 00:59:41.319 align:start position:0%
and then when we swing over here we're
 

00:59:41.319 --> 00:59:43.549 align:start position:0%
and then when we swing over here we're
actually<00:59:41.559><c> going</c><00:59:41.680><c> to</c><00:59:41.799><c> get</c><00:59:41.880><c> the</c><00:59:42.079><c> loits</c><00:59:42.599><c> by</c>

00:59:43.549 --> 00:59:43.559 align:start position:0%
actually going to get the loits by
 

00:59:43.559 --> 00:59:46.230 align:start position:0%
actually going to get the loits by
exactly<00:59:43.920><c> what</c><00:59:44.039><c> the</c><00:59:44.160><c> co-pilot</c><00:59:45.000><c> says</c><00:59:46.000><c> now</c><00:59:46.119><c> we</c>

00:59:46.230 --> 00:59:46.240 align:start position:0%
exactly what the co-pilot says now we
 

00:59:46.240 --> 00:59:48.430 align:start position:0%
exactly what the co-pilot says now we
have<00:59:46.319><c> to</c><00:59:46.400><c> be</c><00:59:46.520><c> careful</c><00:59:46.839><c> here</c><00:59:47.119><c> because</c><00:59:47.880><c> this</c><00:59:48.039><c> C</c>

00:59:48.430 --> 00:59:48.440 align:start position:0%
have to be careful here because this C
 

00:59:48.440 --> 00:59:52.470 align:start position:0%
have to be careful here because this C
and<00:59:48.640><c> this</c><00:59:48.760><c> C</c><00:59:49.119><c> are</c><00:59:49.359><c> not</c><00:59:50.280><c> equal</c><00:59:51.280><c> um</c><00:59:51.599><c> this</c><00:59:51.720><c> is</c><00:59:51.920><c> nmed</c>

00:59:52.470 --> 00:59:52.480 align:start position:0%
and this C are not equal um this is nmed
 

00:59:52.480 --> 00:59:55.510 align:start position:0%
and this C are not equal um this is nmed
C<00:59:52.839><c> and</c><00:59:53.000><c> this</c><00:59:53.079><c> is</c><00:59:53.240><c> vocap</c><00:59:54.039><c> size</c><00:59:55.039><c> so</c><00:59:55.240><c> let's</c><00:59:55.400><c> just</c>

00:59:55.510 --> 00:59:55.520 align:start position:0%
C and this is vocap size so let's just
 

00:59:55.520 --> 00:59:57.950 align:start position:0%
C and this is vocap size so let's just
say<00:59:55.680><c> that</c><00:59:55.799><c> n</c><00:59:56.039><c> ined</c><00:59:56.440><c> is</c><00:59:56.559><c> equal</c><00:59:56.839><c> to</c>

00:59:57.950 --> 00:59:57.960 align:start position:0%
say that n ined is equal to
 

00:59:57.960 --> 01:00:01.150 align:start position:0%
say that n ined is equal to
C<00:59:58.960><c> and</c><00:59:59.160><c> then</c><00:59:59.599><c> this</c><00:59:59.760><c> just</c><00:59:59.920><c> creates</c><01:00:00.280><c> one</c><01:00:00.640><c> spous</c>

01:00:01.150 --> 01:00:01.160 align:start position:0%
C and then this just creates one spous
 

01:00:01.160 --> 01:00:02.829 align:start position:0%
C and then this just creates one spous
layer<01:00:01.359><c> of</c><01:00:01.480><c> interaction</c><01:00:02.039><c> through</c><01:00:02.240><c> a</c><01:00:02.400><c> linear</c>

01:00:02.829 --> 01:00:02.839 align:start position:0%
layer of interaction through a linear
 

01:00:02.839 --> 01:00:11.349 align:start position:0%
layer of interaction through a linear
layer<01:00:03.839><c> but</c><01:00:04.280><c> uh</c><01:00:04.400><c> this</c><01:00:04.520><c> should</c><01:00:04.720><c> basically</c>

01:00:11.349 --> 01:00:11.359 align:start position:0%
 
 

01:00:11.359 --> 01:00:15.150 align:start position:0%
 
run<01:00:12.359><c> so</c><01:00:12.559><c> we</c><01:00:12.680><c> see</c><01:00:12.880><c> that</c><01:00:13.000><c> this</c><01:00:13.160><c> runs</c><01:00:13.760><c> and</c><01:00:14.200><c> uh</c><01:00:15.000><c> this</c>

01:00:15.150 --> 01:00:15.160 align:start position:0%
run so we see that this runs and uh this
 

01:00:15.160 --> 01:00:16.990 align:start position:0%
run so we see that this runs and uh this
currently<01:00:15.520><c> looks</c><01:00:15.720><c> kind</c><01:00:15.799><c> of</c><01:00:15.920><c> spous</c><01:00:16.480><c> but</c><01:00:16.920><c> uh</c>

01:00:16.990 --> 01:00:17.000 align:start position:0%
currently looks kind of spous but uh
 

01:00:17.000 --> 01:00:19.029 align:start position:0%
currently looks kind of spous but uh
we're<01:00:17.160><c> going</c><01:00:17.280><c> to</c><01:00:17.400><c> build</c><01:00:17.599><c> on</c><01:00:17.760><c> top</c><01:00:17.880><c> of</c><01:00:18.039><c> this</c><01:00:18.799><c> now</c>

01:00:19.029 --> 01:00:19.039 align:start position:0%
we're going to build on top of this now
 

01:00:19.039 --> 01:00:22.069 align:start position:0%
we're going to build on top of this now
next<01:00:19.280><c> up</c><01:00:20.000><c> so</c><01:00:20.119><c> far</c><01:00:20.240><c> we've</c><01:00:20.400><c> taken</c><01:00:20.640><c> these</c><01:00:21.359><c> indices</c>

01:00:22.069 --> 01:00:22.079 align:start position:0%
next up so far we've taken these indices
 

01:00:22.079 --> 01:00:23.670 align:start position:0%
next up so far we've taken these indices
and<01:00:22.200><c> we've</c><01:00:22.440><c> encoded</c><01:00:22.920><c> them</c><01:00:23.200><c> based</c><01:00:23.440><c> on</c><01:00:23.559><c> the</c>

01:00:23.670 --> 01:00:23.680 align:start position:0%
and we've encoded them based on the
 

01:00:23.680 --> 01:00:28.150 align:start position:0%
and we've encoded them based on the
identity<01:00:24.200><c> of</c><01:00:24.400><c> the</c><01:00:24.960><c> uh</c><01:00:25.119><c> tokens</c><01:00:25.720><c> in</c><01:00:26.000><c> inside</c><01:00:27.160><c> idx</c>

01:00:28.150 --> 01:00:28.160 align:start position:0%
identity of the uh tokens in inside idx
 

01:00:28.160 --> 01:00:30.069 align:start position:0%
identity of the uh tokens in inside idx
the<01:00:28.280><c> next</c><01:00:28.440><c> thing</c><01:00:28.599><c> that</c><01:00:28.760><c> people</c><01:00:29.000><c> very</c><01:00:29.200><c> often</c><01:00:29.480><c> do</c>

01:00:30.069 --> 01:00:30.079 align:start position:0%
the next thing that people very often do
 

01:00:30.079 --> 01:00:31.589 align:start position:0%
the next thing that people very often do
is<01:00:30.200><c> that</c><01:00:30.319><c> we're</c><01:00:30.480><c> not</c><01:00:30.640><c> just</c><01:00:30.799><c> encoding</c><01:00:31.319><c> the</c>

01:00:31.589 --> 01:00:31.599 align:start position:0%
is that we're not just encoding the
 

01:00:31.599 --> 01:00:33.789 align:start position:0%
is that we're not just encoding the
identity<01:00:32.160><c> of</c><01:00:32.319><c> these</c><01:00:32.480><c> tokens</c><01:00:33.000><c> but</c><01:00:33.160><c> also</c><01:00:33.440><c> their</c>

01:00:33.789 --> 01:00:33.799 align:start position:0%
identity of these tokens but also their
 

01:00:33.799 --> 01:00:35.910 align:start position:0%
identity of these tokens but also their
position<01:00:34.799><c> so</c><01:00:34.960><c> we're</c><01:00:35.119><c> going</c><01:00:35.240><c> to</c><01:00:35.359><c> have</c><01:00:35.440><c> a</c><01:00:35.599><c> second</c>

01:00:35.910 --> 01:00:35.920 align:start position:0%
position so we're going to have a second
 

01:00:35.920 --> 01:00:38.390 align:start position:0%
position so we're going to have a second
position<01:00:36.799><c> uh</c><01:00:36.960><c> embedding</c><01:00:37.359><c> table</c><01:00:37.680><c> here</c><01:00:38.240><c> so</c>

01:00:38.390 --> 01:00:38.400 align:start position:0%
position uh embedding table here so
 

01:00:38.400 --> 01:00:41.470 align:start position:0%
position uh embedding table here so
self.<01:00:39.000><c> position</c><01:00:39.520><c> embedding</c><01:00:40.000><c> table</c><01:00:41.000><c> is</c><01:00:41.119><c> an</c><01:00:41.319><c> an</c>

01:00:41.470 --> 01:00:41.480 align:start position:0%
self. position embedding table is an an
 

01:00:41.480 --> 01:00:44.109 align:start position:0%
self. position embedding table is an an
embedding<01:00:42.039><c> of</c><01:00:42.240><c> block</c><01:00:42.520><c> size</c><01:00:42.799><c> by</c><01:00:42.920><c> an</c><01:00:43.119><c> embed</c><01:00:44.000><c> and</c>

01:00:44.109 --> 01:00:44.119 align:start position:0%
embedding of block size by an embed and
 

01:00:44.119 --> 01:00:46.230 align:start position:0%
embedding of block size by an embed and
so<01:00:44.280><c> each</c><01:00:44.520><c> position</c><01:00:45.079><c> from</c><01:00:45.319><c> zero</c><01:00:45.599><c> to</c><01:00:45.799><c> block</c><01:00:46.039><c> size</c>

01:00:46.230 --> 01:00:46.240 align:start position:0%
so each position from zero to block size
 

01:00:46.240 --> 01:00:47.630 align:start position:0%
so each position from zero to block size
minus<01:00:46.480><c> one</c><01:00:46.799><c> will</c><01:00:46.960><c> also</c><01:00:47.200><c> get</c><01:00:47.319><c> its</c><01:00:47.440><c> own</c>

01:00:47.630 --> 01:00:47.640 align:start position:0%
minus one will also get its own
 

01:00:47.640 --> 01:00:50.829 align:start position:0%
minus one will also get its own
embedding<01:00:48.520><c> vector</c><01:00:49.520><c> and</c><01:00:49.640><c> then</c><01:00:49.799><c> here</c><01:00:50.480><c> first</c><01:00:50.720><c> let</c>

01:00:50.829 --> 01:00:50.839 align:start position:0%
embedding vector and then here first let
 

01:00:50.839 --> 01:00:54.349 align:start position:0%
embedding vector and then here first let
me<01:00:51.039><c> decode</c><01:00:51.760><c> B</c><01:00:52.000><c> BYT</c><01:00:52.559><c> from</c><01:00:52.839><c> idx</c><01:00:53.319><c> do</c>

01:00:54.349 --> 01:00:54.359 align:start position:0%
me decode B BYT from idx do
 

01:00:54.359 --> 01:00:56.510 align:start position:0%
me decode B BYT from idx do
shape<01:00:55.359><c> and</c><01:00:55.480><c> then</c><01:00:55.640><c> here</c><01:00:56.000><c> we're</c><01:00:56.119><c> also</c><01:00:56.280><c> going</c><01:00:56.400><c> to</c>

01:00:56.510 --> 01:00:56.520 align:start position:0%
shape and then here we're also going to
 

01:00:56.520 --> 01:00:58.349 align:start position:0%
shape and then here we're also going to
have<01:00:56.599><c> a</c><01:00:56.720><c> pause</c><01:00:56.920><c> embedding</c><01:00:57.920><c> which</c><01:00:58.039><c> is</c><01:00:58.160><c> the</c>

01:00:58.349 --> 01:00:58.359 align:start position:0%
have a pause embedding which is the
 

01:00:58.359 --> 01:01:00.029 align:start position:0%
have a pause embedding which is the
positional<01:00:58.720><c> embedding</c><01:00:59.319><c> and</c><01:00:59.480><c> these</c><01:00:59.599><c> are</c><01:00:59.960><c> this</c>

01:01:00.029 --> 01:01:00.039 align:start position:0%
positional embedding and these are this
 

01:01:00.039 --> 01:01:02.990 align:start position:0%
positional embedding and these are this
is<01:01:00.160><c> to</c><01:01:00.599><c> arrange</c><01:01:01.599><c> so</c><01:01:01.760><c> this</c><01:01:01.880><c> will</c><01:01:02.079><c> be</c><01:01:02.680><c> basically</c>

01:01:02.990 --> 01:01:03.000 align:start position:0%
is to arrange so this will be basically
 

01:01:03.000 --> 01:01:06.230 align:start position:0%
is to arrange so this will be basically
just<01:01:03.200><c> integers</c><01:01:03.640><c> from</c><01:01:03.799><c> Z</c><01:01:04.160><c> to</c><01:01:04.280><c> T</c><01:01:04.480><c> minus</c><01:01:05.079><c> one</c><01:01:06.079><c> and</c>

01:01:06.230 --> 01:01:06.240 align:start position:0%
just integers from Z to T minus one and
 

01:01:06.240 --> 01:01:08.069 align:start position:0%
just integers from Z to T minus one and
all<01:01:06.359><c> of</c><01:01:06.520><c> those</c><01:01:06.680><c> integers</c><01:01:07.200><c> from</c><01:01:07.319><c> 0</c><01:01:07.559><c> to</c><01:01:07.680><c> T</c><01:01:07.839><c> minus</c>

01:01:08.069 --> 01:01:08.079 align:start position:0%
all of those integers from 0 to T minus
 

01:01:08.079 --> 01:01:09.870 align:start position:0%
all of those integers from 0 to T minus
one<01:01:08.240><c> get</c><01:01:08.400><c> embedded</c><01:01:08.839><c> through</c><01:01:09.000><c> the</c><01:01:09.160><c> table</c><01:01:09.720><c> to</c>

01:01:09.870 --> 01:01:09.880 align:start position:0%
one get embedded through the table to
 

01:01:09.880 --> 01:01:11.270 align:start position:0%
one get embedded through the table to
create<01:01:10.119><c> a</c><01:01:10.240><c> t</c><01:01:10.480><c> by</c>

01:01:11.270 --> 01:01:11.280 align:start position:0%
create a t by
 

01:01:11.280 --> 01:01:14.750 align:start position:0%
create a t by
C<01:01:12.280><c> and</c><01:01:12.440><c> then</c><01:01:12.680><c> here</c><01:01:13.640><c> this</c><01:01:13.839><c> gets</c><01:01:14.039><c> renamed</c><01:01:14.520><c> to</c>

01:01:14.750 --> 01:01:14.760 align:start position:0%
C and then here this gets renamed to
 

01:01:14.760 --> 01:01:18.710 align:start position:0%
C and then here this gets renamed to
just<01:01:14.960><c> say</c><01:01:15.280><c> x</c><01:01:16.280><c> and</c><01:01:16.480><c> x</c><01:01:16.760><c> will</c><01:01:16.960><c> be</c><01:01:17.960><c> the</c><01:01:18.119><c> addition</c><01:01:18.599><c> of</c>

01:01:18.710 --> 01:01:18.720 align:start position:0%
just say x and x will be the addition of
 

01:01:18.720 --> 01:01:20.870 align:start position:0%
just say x and x will be the addition of
the<01:01:18.839><c> token</c><01:01:19.079><c> embeddings</c><01:01:19.559><c> with</c><01:01:19.680><c> the</c><01:01:19.760><c> positional</c>

01:01:20.870 --> 01:01:20.880 align:start position:0%
the token embeddings with the positional
 

01:01:20.880 --> 01:01:22.910 align:start position:0%
the token embeddings with the positional
embeddings<01:01:21.880><c> and</c><01:01:22.079><c> here</c><01:01:22.240><c> the</c><01:01:22.359><c> broadcasting</c>

01:01:22.910 --> 01:01:22.920 align:start position:0%
embeddings and here the broadcasting
 

01:01:22.920 --> 01:01:25.430 align:start position:0%
embeddings and here the broadcasting
note<01:01:23.200><c> will</c><01:01:23.400><c> work</c><01:01:23.559><c> out</c><01:01:23.799><c> so</c><01:01:23.960><c> B</c><01:01:24.200><c> by</c><01:01:24.319><c> T</c><01:01:24.520><c> by</c><01:01:24.640><c> C</c><01:01:24.920><c> plus</c><01:01:25.200><c> T</c>

01:01:25.430 --> 01:01:25.440 align:start position:0%
note will work out so B by T by C plus T
 

01:01:25.440 --> 01:01:26.430 align:start position:0%
note will work out so B by T by C plus T
by<01:01:25.559><c> C</c>

01:01:26.430 --> 01:01:26.440 align:start position:0%
by C
 

01:01:26.440 --> 01:01:28.630 align:start position:0%
by C
this<01:01:26.640><c> gets</c><01:01:27.039><c> right</c><01:01:27.240><c> aligned</c><01:01:27.880><c> a</c><01:01:28.039><c> new</c><01:01:28.280><c> dimension</c>

01:01:28.630 --> 01:01:28.640 align:start position:0%
this gets right aligned a new dimension
 

01:01:28.640 --> 01:01:30.230 align:start position:0%
this gets right aligned a new dimension
of<01:01:28.799><c> one</c><01:01:29.039><c> gets</c><01:01:29.240><c> added</c><01:01:29.760><c> and</c><01:01:29.920><c> it</c><01:01:30.079><c> gets</c>

01:01:30.230 --> 01:01:30.240 align:start position:0%
of one gets added and it gets
 

01:01:30.240 --> 01:01:31.750 align:start position:0%
of one gets added and it gets
broadcasted<01:01:30.799><c> across</c>

01:01:31.750 --> 01:01:31.760 align:start position:0%
broadcasted across
 

01:01:31.760 --> 01:01:34.870 align:start position:0%
broadcasted across
batch<01:01:32.760><c> so</c><01:01:33.000><c> at</c><01:01:33.160><c> this</c><01:01:33.319><c> point</c><01:01:33.640><c> x</c><01:01:34.160><c> holds</c><01:01:34.520><c> not</c><01:01:34.720><c> just</c>

01:01:34.870 --> 01:01:34.880 align:start position:0%
batch so at this point x holds not just
 

01:01:34.880 --> 01:01:37.549 align:start position:0%
batch so at this point x holds not just
the<01:01:35.079><c> token</c><01:01:35.559><c> identities</c><01:01:36.559><c> but</c><01:01:36.920><c> the</c><01:01:37.079><c> positions</c>

01:01:37.549 --> 01:01:37.559 align:start position:0%
the token identities but the positions
 

01:01:37.559 --> 01:01:39.950 align:start position:0%
the token identities but the positions
at<01:01:37.720><c> which</c><01:01:37.880><c> these</c><01:01:38.039><c> tokens</c><01:01:38.559><c> occur</c><01:01:39.559><c> and</c><01:01:39.720><c> this</c><01:01:39.799><c> is</c>

01:01:39.950 --> 01:01:39.960 align:start position:0%
at which these tokens occur and this is
 

01:01:39.960 --> 01:01:41.670 align:start position:0%
at which these tokens occur and this is
currently<01:01:40.359><c> not</c><01:01:40.559><c> that</c><01:01:40.720><c> useful</c><01:01:41.240><c> because</c><01:01:41.559><c> of</c>

01:01:41.670 --> 01:01:41.680 align:start position:0%
currently not that useful because of
 

01:01:41.680 --> 01:01:43.349 align:start position:0%
currently not that useful because of
course<01:01:41.920><c> we</c><01:01:42.039><c> just</c><01:01:42.119><c> have</c><01:01:42.240><c> a</c><01:01:42.319><c> simple</c><01:01:42.559><c> byr</c><01:01:42.960><c> model</c>

01:01:43.349 --> 01:01:43.359 align:start position:0%
course we just have a simple byr model
 

01:01:43.359 --> 01:01:44.390 align:start position:0%
course we just have a simple byr model
so<01:01:43.480><c> it</c><01:01:43.559><c> doesn't</c><01:01:43.799><c> matter</c><01:01:44.000><c> if</c><01:01:44.079><c> you're</c><01:01:44.200><c> in</c><01:01:44.280><c> the</c>

01:01:44.390 --> 01:01:44.400 align:start position:0%
so it doesn't matter if you're in the
 

01:01:44.400 --> 01:01:46.270 align:start position:0%
so it doesn't matter if you're in the
fifth<01:01:44.640><c> position</c><01:01:45.000><c> the</c><01:01:45.079><c> second</c><01:01:45.680><c> position</c><01:01:46.079><c> or</c>

01:01:46.270 --> 01:01:46.280 align:start position:0%
fifth position the second position or
 

01:01:46.280 --> 01:01:48.349 align:start position:0%
fifth position the second position or
wherever<01:01:47.000><c> it's</c><01:01:47.160><c> all</c><01:01:47.359><c> translation</c><01:01:47.799><c> invariant</c>

01:01:48.349 --> 01:01:48.359 align:start position:0%
wherever it's all translation invariant
 

01:01:48.359 --> 01:01:50.430 align:start position:0%
wherever it's all translation invariant
at<01:01:48.480><c> this</c><01:01:48.640><c> stage</c><01:01:49.559><c> uh</c><01:01:49.640><c> so</c><01:01:49.880><c> this</c><01:01:50.039><c> information</c>

01:01:50.430 --> 01:01:50.440 align:start position:0%
at this stage uh so this information
 

01:01:50.440 --> 01:01:52.870 align:start position:0%
at this stage uh so this information
currently<01:01:50.799><c> wouldn't</c><01:01:51.119><c> help</c><01:01:51.960><c> uh</c><01:01:52.160><c> but</c><01:01:52.640><c> as</c><01:01:52.760><c> we</c>

01:01:52.870 --> 01:01:52.880 align:start position:0%
currently wouldn't help uh but as we
 

01:01:52.880 --> 01:01:54.390 align:start position:0%
currently wouldn't help uh but as we
work<01:01:53.039><c> on</c><01:01:53.160><c> the</c><01:01:53.240><c> self</c><01:01:53.440><c> attention</c><01:01:53.799><c> block</c><01:01:54.200><c> we'll</c>

01:01:54.390 --> 01:01:54.400 align:start position:0%
work on the self attention block we'll
 

01:01:54.400 --> 01:01:59.870 align:start position:0%
work on the self attention block we'll
see<01:01:54.640><c> that</c><01:01:54.799><c> this</c><01:01:54.880><c> starts</c><01:01:55.160><c> to</c><01:01:55.319><c> matter</c>

01:01:59.870 --> 01:01:59.880 align:start position:0%
 
 

01:01:59.880 --> 01:02:01.470 align:start position:0%
 
okay<01:02:00.000><c> so</c><01:02:00.200><c> now</c><01:02:00.319><c> we</c><01:02:00.480><c> get</c><01:02:00.640><c> the</c><01:02:00.760><c> Crux</c><01:02:01.119><c> of</c><01:02:01.240><c> self</c>

01:02:01.470 --> 01:02:01.480 align:start position:0%
okay so now we get the Crux of self
 

01:02:01.480 --> 01:02:03.230 align:start position:0%
okay so now we get the Crux of self
attention<01:02:02.200><c> so</c><01:02:02.359><c> this</c><01:02:02.480><c> is</c><01:02:02.680><c> probably</c><01:02:03.000><c> the</c><01:02:03.079><c> most</c>

01:02:03.230 --> 01:02:03.240 align:start position:0%
attention so this is probably the most
 

01:02:03.240 --> 01:02:05.390 align:start position:0%
attention so this is probably the most
important<01:02:03.599><c> part</c><01:02:03.799><c> of</c><01:02:04.000><c> this</c><01:02:04.160><c> video</c><01:02:04.400><c> to</c>

01:02:05.390 --> 01:02:05.400 align:start position:0%
important part of this video to
 

01:02:05.400 --> 01:02:07.269 align:start position:0%
important part of this video to
understand<01:02:06.400><c> we're</c><01:02:06.559><c> going</c><01:02:06.680><c> to</c><01:02:06.799><c> implement</c><01:02:07.160><c> a</c>

01:02:07.269 --> 01:02:07.279 align:start position:0%
understand we're going to implement a
 

01:02:07.279 --> 01:02:08.710 align:start position:0%
understand we're going to implement a
small<01:02:07.480><c> self</c><01:02:07.720><c> attention</c><01:02:08.079><c> for</c><01:02:08.240><c> a</c><01:02:08.400><c> single</c>

01:02:08.710 --> 01:02:08.720 align:start position:0%
small self attention for a single
 

01:02:08.720 --> 01:02:11.390 align:start position:0%
small self attention for a single
individual<01:02:09.400><c> head</c><01:02:09.839><c> as</c><01:02:09.960><c> they're</c><01:02:10.160><c> called</c><01:02:11.119><c> so</c><01:02:11.240><c> we</c>

01:02:11.390 --> 01:02:11.400 align:start position:0%
individual head as they're called so we
 

01:02:11.400 --> 01:02:13.589 align:start position:0%
individual head as they're called so we
start<01:02:11.640><c> off</c><01:02:11.920><c> with</c><01:02:12.279><c> where</c><01:02:12.440><c> we</c><01:02:12.559><c> were</c><01:02:13.160><c> so</c><01:02:13.359><c> all</c><01:02:13.480><c> of</c>

01:02:13.589 --> 01:02:13.599 align:start position:0%
start off with where we were so all of
 

01:02:13.599 --> 01:02:16.630 align:start position:0%
start off with where we were so all of
this<01:02:13.760><c> code</c><01:02:13.960><c> is</c><01:02:14.440><c> familiar</c><01:02:15.440><c> so</c><01:02:16.000><c> right</c><01:02:16.200><c> now</c><01:02:16.520><c> I'm</c>

01:02:16.630 --> 01:02:16.640 align:start position:0%
this code is familiar so right now I'm
 

01:02:16.640 --> 01:02:17.950 align:start position:0%
this code is familiar so right now I'm
working<01:02:16.880><c> with</c><01:02:17.039><c> an</c><01:02:17.200><c> example</c><01:02:17.559><c> where</c><01:02:17.640><c> I</c><01:02:17.760><c> Chang</c>

01:02:17.950 --> 01:02:17.960 align:start position:0%
working with an example where I Chang
 

01:02:17.960 --> 01:02:20.230 align:start position:0%
working with an example where I Chang
the<01:02:18.079><c> number</c><01:02:18.240><c> of</c><01:02:18.319><c> channels</c><01:02:18.720><c> from</c><01:02:18.880><c> 2</c><01:02:19.240><c> to</c><01:02:19.440><c> 32</c><01:02:20.039><c> so</c>

01:02:20.230 --> 01:02:20.240 align:start position:0%
the number of channels from 2 to 32 so
 

01:02:20.240 --> 01:02:24.109 align:start position:0%
the number of channels from 2 to 32 so
we<01:02:20.359><c> have</c><01:02:20.480><c> a</c><01:02:20.920><c> 4x8</c><01:02:21.640><c> arrangement</c><01:02:22.559><c> of</c><01:02:22.920><c> tokens</c><01:02:23.920><c> and</c>

01:02:24.109 --> 01:02:24.119 align:start position:0%
we have a 4x8 arrangement of tokens and
 

01:02:24.119 --> 01:02:26.630 align:start position:0%
we have a 4x8 arrangement of tokens and
each<01:02:24.400><c> to</c><01:02:24.960><c> and</c><01:02:25.079><c> the</c><01:02:25.200><c> information</c><01:02:25.960><c> each</c><01:02:26.160><c> token</c>

01:02:26.630 --> 01:02:26.640 align:start position:0%
each to and the information each token
 

01:02:26.640 --> 01:02:28.870 align:start position:0%
each to and the information each token
is<01:02:26.799><c> currently</c><01:02:27.119><c> 32</c><01:02:27.559><c> dimensional</c><01:02:28.279><c> but</c><01:02:28.400><c> we</c><01:02:28.599><c> just</c>

01:02:28.870 --> 01:02:28.880 align:start position:0%
is currently 32 dimensional but we just
 

01:02:28.880 --> 01:02:30.309 align:start position:0%
is currently 32 dimensional but we just
are<01:02:29.039><c> working</c><01:02:29.279><c> with</c><01:02:29.400><c> random</c>

01:02:30.309 --> 01:02:30.319 align:start position:0%
are working with random
 

01:02:30.319 --> 01:02:34.349 align:start position:0%
are working with random
numbers<01:02:31.319><c> now</c><01:02:31.480><c> we</c><01:02:31.599><c> saw</c><01:02:31.920><c> here</c><01:02:32.880><c> that</c><01:02:33.880><c> the</c><01:02:34.000><c> code</c><01:02:34.240><c> as</c>

01:02:34.349 --> 01:02:34.359 align:start position:0%
numbers now we saw here that the code as
 

01:02:34.359 --> 01:02:37.630 align:start position:0%
numbers now we saw here that the code as
we<01:02:34.480><c> had</c><01:02:34.559><c> it</c><01:02:34.839><c> before</c><01:02:35.680><c> does</c><01:02:36.079><c> a</c><01:02:36.599><c> uh</c><01:02:36.799><c> simple</c><01:02:37.240><c> weight</c>

01:02:37.630 --> 01:02:37.640 align:start position:0%
we had it before does a uh simple weight
 

01:02:37.640 --> 01:02:41.150 align:start position:0%
we had it before does a uh simple weight
simple<01:02:38.039><c> average</c><01:02:39.000><c> of</c><01:02:39.279><c> all</c><01:02:39.480><c> the</c><01:02:39.839><c> past</c><01:02:40.160><c> tokens</c>

01:02:41.150 --> 01:02:41.160 align:start position:0%
simple average of all the past tokens
 

01:02:41.160 --> 01:02:43.309 align:start position:0%
simple average of all the past tokens
and<01:02:41.440><c> the</c><01:02:41.559><c> current</c><01:02:41.880><c> token</c><01:02:42.480><c> so</c><01:02:42.760><c> it's</c><01:02:42.960><c> just</c><01:02:43.119><c> the</c>

01:02:43.309 --> 01:02:43.319 align:start position:0%
and the current token so it's just the
 

01:02:43.319 --> 01:02:44.470 align:start position:0%
and the current token so it's just the
previous<01:02:43.640><c> information</c><01:02:44.039><c> and</c><01:02:44.200><c> current</c>

01:02:44.470 --> 01:02:44.480 align:start position:0%
previous information and current
 

01:02:44.480 --> 01:02:45.870 align:start position:0%
previous information and current
information<01:02:44.799><c> is</c><01:02:44.920><c> just</c><01:02:45.079><c> being</c><01:02:45.319><c> mixed</c><01:02:45.720><c> together</c>

01:02:45.870 --> 01:02:45.880 align:start position:0%
information is just being mixed together
 

01:02:45.880 --> 01:02:48.309 align:start position:0%
information is just being mixed together
in<01:02:46.000><c> an</c><01:02:46.279><c> average</c><01:02:47.279><c> and</c><01:02:47.440><c> that's</c><01:02:47.599><c> what</c><01:02:47.880><c> this</c><01:02:48.039><c> code</c>

01:02:48.309 --> 01:02:48.319 align:start position:0%
in an average and that's what this code
 

01:02:48.319 --> 01:02:50.190 align:start position:0%
in an average and that's what this code
currently<01:02:48.680><c> achieves</c><01:02:49.520><c> and</c><01:02:49.599><c> it</c><01:02:49.720><c> Doo</c><01:02:50.079><c> by</c>

01:02:50.190 --> 01:02:50.200 align:start position:0%
currently achieves and it Doo by
 

01:02:50.200 --> 01:02:52.390 align:start position:0%
currently achieves and it Doo by
creating<01:02:50.520><c> this</c><01:02:50.640><c> lower</c><01:02:50.920><c> triangular</c><01:02:51.480><c> structure</c>

01:02:52.390 --> 01:02:52.400 align:start position:0%
creating this lower triangular structure
 

01:02:52.400 --> 01:02:55.670 align:start position:0%
creating this lower triangular structure
which<01:02:52.559><c> allows</c><01:02:52.839><c> us</c><01:02:52.960><c> to</c><01:02:53.279><c> mask</c><01:02:53.640><c> out</c><01:02:54.520><c> this</c><01:02:54.880><c> uh</c><01:02:55.039><c> we</c>

01:02:55.670 --> 01:02:55.680 align:start position:0%
which allows us to mask out this uh we
 

01:02:55.680 --> 01:02:59.109 align:start position:0%
which allows us to mask out this uh we
uh<01:02:56.079><c> Matrix</c><01:02:56.480><c> that</c><01:02:56.599><c> we</c><01:02:56.839><c> create</c><01:02:57.839><c> so</c><01:02:58.480><c> we</c><01:02:58.680><c> mask</c><01:02:58.960><c> it</c>

01:02:59.109 --> 01:02:59.119 align:start position:0%
uh Matrix that we create so we mask it
 

01:02:59.119 --> 01:03:01.190 align:start position:0%
uh Matrix that we create so we mask it
out<01:02:59.400><c> and</c><01:02:59.520><c> then</c><01:02:59.599><c> we</c><01:02:59.720><c> normalize</c><01:03:00.200><c> it</c><01:03:00.720><c> and</c>

01:03:01.190 --> 01:03:01.200 align:start position:0%
out and then we normalize it and
 

01:03:01.200 --> 01:03:03.950 align:start position:0%
out and then we normalize it and
currently<01:03:02.200><c> when</c><01:03:02.599><c> we</c><01:03:03.279><c> initialize</c><01:03:03.799><c> the</c>

01:03:03.950 --> 01:03:03.960 align:start position:0%
currently when we initialize the
 

01:03:03.960 --> 01:03:05.789 align:start position:0%
currently when we initialize the
affinities<01:03:04.520><c> between</c><01:03:04.839><c> all</c><01:03:05.000><c> the</c><01:03:05.200><c> different</c>

01:03:05.789 --> 01:03:05.799 align:start position:0%
affinities between all the different
 

01:03:05.799 --> 01:03:08.589 align:start position:0%
affinities between all the different
sort<01:03:06.079><c> of</c><01:03:06.240><c> tokens</c><01:03:06.880><c> or</c><01:03:07.079><c> nodes</c><01:03:07.599><c> I'm</c><01:03:07.720><c> going</c><01:03:07.799><c> to</c><01:03:08.359><c> use</c>

01:03:08.589 --> 01:03:08.599 align:start position:0%
sort of tokens or nodes I'm going to use
 

01:03:08.599 --> 01:03:09.630 align:start position:0%
sort of tokens or nodes I'm going to use
those<01:03:08.760><c> terms</c>

01:03:09.630 --> 01:03:09.640 align:start position:0%
those terms
 

01:03:09.640 --> 01:03:11.789 align:start position:0%
those terms
interchangeably<01:03:10.640><c> so</c><01:03:10.799><c> when</c><01:03:10.960><c> we</c><01:03:11.319><c> initialize</c>

01:03:11.789 --> 01:03:11.799 align:start position:0%
interchangeably so when we initialize
 

01:03:11.799 --> 01:03:13.069 align:start position:0%
interchangeably so when we initialize
the<01:03:11.920><c> affinities</c><01:03:12.400><c> between</c><01:03:12.640><c> all</c><01:03:12.760><c> the</c><01:03:12.839><c> different</c>

01:03:13.069 --> 01:03:13.079 align:start position:0%
the affinities between all the different
 

01:03:13.079 --> 01:03:16.069 align:start position:0%
the affinities between all the different
tokens<01:03:13.400><c> to</c><01:03:13.520><c> be</c><01:03:14.160><c> zero</c><01:03:15.160><c> then</c><01:03:15.279><c> we</c><01:03:15.400><c> see</c><01:03:15.599><c> that</c><01:03:15.799><c> way</c>

01:03:16.069 --> 01:03:16.079 align:start position:0%
tokens to be zero then we see that way
 

01:03:16.079 --> 01:03:18.470 align:start position:0%
tokens to be zero then we see that way
gives<01:03:16.240><c> us</c><01:03:16.520><c> this</c><01:03:17.000><c> um</c><01:03:17.640><c> structure</c><01:03:18.160><c> where</c><01:03:18.319><c> every</c>

01:03:18.470 --> 01:03:18.480 align:start position:0%
gives us this um structure where every
 

01:03:18.480 --> 01:03:22.390 align:start position:0%
gives us this um structure where every
single<01:03:18.760><c> row</c><01:03:19.119><c> has</c><01:03:19.359><c> these</c><01:03:20.079><c> um</c><01:03:21.079><c> uniform</c><01:03:21.559><c> numbers</c>

01:03:22.390 --> 01:03:22.400 align:start position:0%
single row has these um uniform numbers
 

01:03:22.400 --> 01:03:25.109 align:start position:0%
single row has these um uniform numbers
and<01:03:22.520><c> so</c><01:03:22.720><c> that's</c><01:03:23.160><c> what</c><01:03:23.440><c> that's</c><01:03:23.680><c> what</c><01:03:23.960><c> then</c><01:03:24.920><c> uh</c>

01:03:25.109 --> 01:03:25.119 align:start position:0%
and so that's what that's what then uh
 

01:03:25.119 --> 01:03:27.069 align:start position:0%
and so that's what that's what then uh
in<01:03:25.240><c> this</c><01:03:25.400><c> Matrix</c><01:03:25.799><c> multiply</c><01:03:26.440><c> makes</c><01:03:26.680><c> it</c><01:03:26.799><c> so</c><01:03:26.960><c> that</c>

01:03:27.069 --> 01:03:27.079 align:start position:0%
in this Matrix multiply makes it so that
 

01:03:27.079 --> 01:03:28.710 align:start position:0%
in this Matrix multiply makes it so that
we're<01:03:27.200><c> doing</c><01:03:27.599><c> a</c><01:03:27.839><c> simple</c>

01:03:28.710 --> 01:03:28.720 align:start position:0%
we're doing a simple
 

01:03:28.720 --> 01:03:32.150 align:start position:0%
we're doing a simple
average<01:03:29.799><c> now</c><01:03:30.799><c> we</c><01:03:30.920><c> don't</c><01:03:31.160><c> actually</c><01:03:31.480><c> want</c><01:03:32.000><c> this</c>

01:03:32.150 --> 01:03:32.160 align:start position:0%
average now we don't actually want this
 

01:03:32.160 --> 01:03:36.230 align:start position:0%
average now we don't actually want this
to<01:03:32.400><c> be</c><01:03:33.400><c> all</c><01:03:33.880><c> uniform</c><01:03:34.880><c> because</c><01:03:35.359><c> different</c><01:03:36.079><c> uh</c>

01:03:36.230 --> 01:03:36.240 align:start position:0%
to be all uniform because different uh
 

01:03:36.240 --> 01:03:38.589 align:start position:0%
to be all uniform because different uh
tokens<01:03:36.680><c> will</c><01:03:36.920><c> find</c><01:03:37.359><c> different</c><01:03:37.680><c> other</c><01:03:37.920><c> tokens</c>

01:03:38.589 --> 01:03:38.599 align:start position:0%
tokens will find different other tokens
 

01:03:38.599 --> 01:03:40.230 align:start position:0%
tokens will find different other tokens
more<01:03:38.760><c> or</c><01:03:39.000><c> less</c><01:03:39.200><c> interesting</c><01:03:39.880><c> and</c><01:03:40.000><c> we</c><01:03:40.119><c> want</c>

01:03:40.230 --> 01:03:40.240 align:start position:0%
more or less interesting and we want
 

01:03:40.240 --> 01:03:42.230 align:start position:0%
more or less interesting and we want
that<01:03:40.400><c> to</c><01:03:40.480><c> be</c><01:03:40.640><c> data</c><01:03:40.880><c> dependent</c><01:03:41.520><c> so</c><01:03:41.760><c> for</c><01:03:41.920><c> example</c>

01:03:42.230 --> 01:03:42.240 align:start position:0%
that to be data dependent so for example
 

01:03:42.240 --> 01:03:44.589 align:start position:0%
that to be data dependent so for example
if<01:03:42.359><c> I'm</c><01:03:42.480><c> a</c><01:03:42.640><c> vowel</c><01:03:43.599><c> then</c><01:03:43.799><c> maybe</c><01:03:44.200><c> I'm</c><01:03:44.359><c> looking</c>

01:03:44.589 --> 01:03:44.599 align:start position:0%
if I'm a vowel then maybe I'm looking
 

01:03:44.599 --> 01:03:46.789 align:start position:0%
if I'm a vowel then maybe I'm looking
for<01:03:44.839><c> consonants</c><01:03:45.440><c> in</c><01:03:45.559><c> my</c><01:03:45.799><c> past</c><01:03:46.359><c> and</c><01:03:46.480><c> maybe</c><01:03:46.720><c> I</c>

01:03:46.789 --> 01:03:46.799 align:start position:0%
for consonants in my past and maybe I
 

01:03:46.799 --> 01:03:48.309 align:start position:0%
for consonants in my past and maybe I
want<01:03:46.920><c> to</c><01:03:47.079><c> know</c><01:03:47.279><c> what</c><01:03:47.400><c> those</c><01:03:47.559><c> consonants</c><01:03:48.039><c> are</c>

01:03:48.309 --> 01:03:48.319 align:start position:0%
want to know what those consonants are
 

01:03:48.319 --> 01:03:50.269 align:start position:0%
want to know what those consonants are
and<01:03:48.440><c> I</c><01:03:48.520><c> want</c><01:03:48.720><c> that</c><01:03:48.880><c> information</c><01:03:49.279><c> to</c><01:03:49.400><c> flow</c><01:03:49.760><c> to</c>

01:03:50.269 --> 01:03:50.279 align:start position:0%
and I want that information to flow to
 

01:03:50.279 --> 01:03:52.870 align:start position:0%
and I want that information to flow to
me<01:03:51.279><c> and</c><01:03:51.400><c> so</c><01:03:51.599><c> I</c><01:03:51.680><c> want</c><01:03:51.799><c> to</c><01:03:52.039><c> now</c><01:03:52.359><c> gather</c>

01:03:52.870 --> 01:03:52.880 align:start position:0%
me and so I want to now gather
 

01:03:52.880 --> 01:03:54.789 align:start position:0%
me and so I want to now gather
information<01:03:53.279><c> from</c><01:03:53.440><c> the</c><01:03:53.640><c> past</c><01:03:54.359><c> but</c><01:03:54.480><c> I</c><01:03:54.559><c> want</c><01:03:54.680><c> to</c>

01:03:54.789 --> 01:03:54.799 align:start position:0%
information from the past but I want to
 

01:03:54.799 --> 01:03:56.589 align:start position:0%
information from the past but I want to
do<01:03:54.880><c> it</c><01:03:55.000><c> in</c><01:03:55.079><c> the</c><01:03:55.200><c> data</c><01:03:55.400><c> dependent</c><01:03:55.960><c> way</c><01:03:56.359><c> and</c><01:03:56.520><c> this</c>

01:03:56.589 --> 01:03:56.599 align:start position:0%
do it in the data dependent way and this
 

01:03:56.599 --> 01:03:58.150 align:start position:0%
do it in the data dependent way and this
is<01:03:56.760><c> the</c><01:03:56.880><c> problem</c><01:03:57.119><c> that</c><01:03:57.240><c> self</c><01:03:57.440><c> attention</c>

01:03:58.150 --> 01:03:58.160 align:start position:0%
is the problem that self attention
 

01:03:58.160 --> 01:04:00.630 align:start position:0%
is the problem that self attention
solves<01:03:59.160><c> now</c><01:03:59.400><c> the</c><01:03:59.520><c> way</c><01:03:59.680><c> self</c><01:03:59.920><c> attention</c><01:04:00.279><c> solves</c>

01:04:00.630 --> 01:04:00.640 align:start position:0%
solves now the way self attention solves
 

01:04:00.640 --> 01:04:03.870 align:start position:0%
solves now the way self attention solves
this<01:04:01.200><c> is</c><01:04:01.400><c> the</c><01:04:01.559><c> following</c><01:04:02.559><c> every</c><01:04:02.839><c> single</c><01:04:03.240><c> node</c>

01:04:03.870 --> 01:04:03.880 align:start position:0%
this is the following every single node
 

01:04:03.880 --> 01:04:06.589 align:start position:0%
this is the following every single node
or<01:04:04.039><c> every</c><01:04:04.200><c> single</c><01:04:04.520><c> token</c><01:04:05.200><c> at</c><01:04:05.359><c> each</c><01:04:05.599><c> position</c>

01:04:06.589 --> 01:04:06.599 align:start position:0%
or every single token at each position
 

01:04:06.599 --> 01:04:09.829 align:start position:0%
or every single token at each position
will<01:04:06.920><c> emit</c><01:04:07.279><c> two</c><01:04:07.680><c> vectors</c><01:04:08.680><c> it</c><01:04:08.760><c> will</c><01:04:09.039><c> emit</c><01:04:09.400><c> a</c>

01:04:09.829 --> 01:04:09.839 align:start position:0%
will emit two vectors it will emit a
 

01:04:09.839 --> 01:04:12.630 align:start position:0%
will emit two vectors it will emit a
query<01:04:10.839><c> and</c><01:04:10.960><c> it</c><01:04:11.079><c> will</c><01:04:11.279><c> emit</c><01:04:11.559><c> a</c>

01:04:12.630 --> 01:04:12.640 align:start position:0%
query and it will emit a
 

01:04:12.640 --> 01:04:15.470 align:start position:0%
query and it will emit a
key<01:04:13.640><c> now</c><01:04:14.000><c> the</c><01:04:14.160><c> query</c><01:04:14.480><c> Vector</c><01:04:15.160><c> roughly</c>

01:04:15.470 --> 01:04:15.480 align:start position:0%
key now the query Vector roughly
 

01:04:15.480 --> 01:04:18.589 align:start position:0%
key now the query Vector roughly
speaking<01:04:16.000><c> is</c><01:04:16.640><c> what</c><01:04:16.799><c> am</c><01:04:16.880><c> I</c><01:04:17.039><c> looking</c><01:04:17.440><c> for</c><01:04:18.440><c> and</c>

01:04:18.589 --> 01:04:18.599 align:start position:0%
speaking is what am I looking for and
 

01:04:18.599 --> 01:04:20.589 align:start position:0%
speaking is what am I looking for and
the<01:04:18.720><c> key</c><01:04:18.960><c> Vector</c><01:04:19.279><c> roughly</c><01:04:19.559><c> speaking</c><01:04:20.079><c> is</c><01:04:20.440><c> what</c>

01:04:20.589 --> 01:04:20.599 align:start position:0%
the key Vector roughly speaking is what
 

01:04:20.599 --> 01:04:21.789 align:start position:0%
the key Vector roughly speaking is what
do<01:04:20.760><c> I</c>

01:04:21.789 --> 01:04:21.799 align:start position:0%
do I
 

01:04:21.799 --> 01:04:24.069 align:start position:0%
do I
contain<01:04:22.799><c> and</c><01:04:23.000><c> then</c><01:04:23.440><c> the</c><01:04:23.559><c> way</c><01:04:23.720><c> we</c><01:04:23.839><c> get</c>

01:04:24.069 --> 01:04:24.079 align:start position:0%
contain and then the way we get
 

01:04:24.079 --> 01:04:27.029 align:start position:0%
contain and then the way we get
affinities<01:04:24.680><c> between</c><01:04:25.400><c> these</c><01:04:25.880><c> uh</c><01:04:26.039><c> tokens</c><01:04:26.480><c> now</c>

01:04:27.029 --> 01:04:27.039 align:start position:0%
affinities between these uh tokens now
 

01:04:27.039 --> 01:04:29.710 align:start position:0%
affinities between these uh tokens now
in<01:04:27.160><c> a</c><01:04:27.520><c> sequence</c><01:04:28.520><c> is</c><01:04:28.720><c> we</c><01:04:28.880><c> basically</c><01:04:29.240><c> just</c><01:04:29.400><c> do</c><01:04:29.599><c> a</c>

01:04:29.710 --> 01:04:29.720 align:start position:0%
in a sequence is we basically just do a
 

01:04:29.720 --> 01:04:31.829 align:start position:0%
in a sequence is we basically just do a
do<01:04:30.000><c> product</c><01:04:30.319><c> between</c><01:04:30.680><c> the</c><01:04:30.799><c> keys</c><01:04:31.200><c> and</c><01:04:31.319><c> the</c>

01:04:31.829 --> 01:04:31.839 align:start position:0%
do product between the keys and the
 

01:04:31.839 --> 01:04:35.309 align:start position:0%
do product between the keys and the
queries<01:04:32.839><c> so</c><01:04:33.520><c> my</c><01:04:33.799><c> query</c><01:04:34.480><c> dot</c><01:04:34.760><c> products</c><01:04:35.160><c> with</c>

01:04:35.309 --> 01:04:35.319 align:start position:0%
queries so my query dot products with
 

01:04:35.319 --> 01:04:37.950 align:start position:0%
queries so my query dot products with
all<01:04:35.440><c> the</c><01:04:35.559><c> keys</c><01:04:35.960><c> of</c><01:04:36.119><c> all</c><01:04:36.240><c> the</c><01:04:36.359><c> other</c><01:04:36.559><c> tokens</c><01:04:37.559><c> and</c>

01:04:37.950 --> 01:04:37.960 align:start position:0%
all the keys of all the other tokens and
 

01:04:37.960 --> 01:04:41.910 align:start position:0%
all the keys of all the other tokens and
that<01:04:38.160><c> dot</c><01:04:38.440><c> product</c><01:04:39.119><c> now</c><01:04:39.599><c> becomes</c>

01:04:41.910 --> 01:04:41.920 align:start position:0%
that dot product now becomes
 

01:04:41.920 --> 01:04:45.589 align:start position:0%
that dot product now becomes
wayy<01:04:42.920><c> and</c><01:04:43.119><c> so</c><01:04:43.680><c> um</c><01:04:44.079><c> if</c><01:04:44.520><c> the</c><01:04:44.680><c> key</c><01:04:44.960><c> and</c><01:04:45.079><c> the</c><01:04:45.240><c> query</c>

01:04:45.589 --> 01:04:45.599 align:start position:0%
wayy and so um if the key and the query
 

01:04:45.599 --> 01:04:47.710 align:start position:0%
wayy and so um if the key and the query
are<01:04:45.880><c> sort</c><01:04:46.079><c> of</c><01:04:46.240><c> aligned</c><01:04:46.920><c> they</c><01:04:47.039><c> will</c><01:04:47.279><c> interact</c>

01:04:47.710 --> 01:04:47.720 align:start position:0%
are sort of aligned they will interact
 

01:04:47.720 --> 01:04:50.190 align:start position:0%
are sort of aligned they will interact
to<01:04:47.839><c> a</c><01:04:47.960><c> very</c><01:04:48.200><c> high</c><01:04:48.400><c> amount</c><01:04:49.039><c> and</c><01:04:49.200><c> then</c><01:04:49.440><c> I</c><01:04:49.559><c> will</c>

01:04:50.190 --> 01:04:50.200 align:start position:0%
to a very high amount and then I will
 

01:04:50.200 --> 01:04:52.630 align:start position:0%
to a very high amount and then I will
get<01:04:50.359><c> to</c><01:04:50.599><c> learn</c><01:04:50.960><c> more</c><01:04:51.520><c> about</c><01:04:51.839><c> that</c><01:04:52.039><c> specific</c>

01:04:52.630 --> 01:04:52.640 align:start position:0%
get to learn more about that specific
 

01:04:52.640 --> 01:04:55.150 align:start position:0%
get to learn more about that specific
token<01:04:53.640><c> as</c><01:04:53.799><c> opposed</c><01:04:54.079><c> to</c><01:04:54.480><c> any</c><01:04:54.680><c> other</c><01:04:54.839><c> token</c><01:04:55.079><c> in</c>

01:04:55.150 --> 01:04:55.160 align:start position:0%
token as opposed to any other token in
 

01:04:55.160 --> 01:04:56.150 align:start position:0%
token as opposed to any other token in
the<01:04:55.279><c> sequence</c>

01:04:56.150 --> 01:04:56.160 align:start position:0%
the sequence
 

01:04:56.160 --> 01:05:00.549 align:start position:0%
the sequence
so<01:04:56.319><c> let's</c><01:04:56.520><c> implement</c><01:04:56.880><c> this</c>

01:05:00.549 --> 01:05:00.559 align:start position:0%
 
 

01:05:00.559 --> 01:05:03.710 align:start position:0%
 
now<01:05:01.559><c> we're</c><01:05:01.720><c> going</c><01:05:01.880><c> to</c><01:05:02.000><c> implement</c><01:05:02.359><c> a</c>

01:05:03.710 --> 01:05:03.720 align:start position:0%
now we're going to implement a
 

01:05:03.720 --> 01:05:06.990 align:start position:0%
now we're going to implement a
single<01:05:04.720><c> what's</c><01:05:04.960><c> called</c><01:05:05.319><c> head</c><01:05:05.799><c> of</c><01:05:05.960><c> self</c>

01:05:06.990 --> 01:05:07.000 align:start position:0%
single what's called head of self
 

01:05:07.000 --> 01:05:09.549 align:start position:0%
single what's called head of self
attention<01:05:08.000><c> so</c><01:05:08.160><c> this</c><01:05:08.279><c> is</c><01:05:08.440><c> just</c><01:05:08.640><c> one</c><01:05:08.880><c> head</c>

01:05:09.549 --> 01:05:09.559 align:start position:0%
attention so this is just one head
 

01:05:09.559 --> 01:05:10.950 align:start position:0%
attention so this is just one head
there's<01:05:09.720><c> a</c><01:05:09.880><c> hyper</c><01:05:10.119><c> parameter</c><01:05:10.520><c> involved</c><01:05:10.839><c> with</c>

01:05:10.950 --> 01:05:10.960 align:start position:0%
there's a hyper parameter involved with
 

01:05:10.960 --> 01:05:13.589 align:start position:0%
there's a hyper parameter involved with
these<01:05:11.119><c> heads</c><01:05:11.400><c> which</c><01:05:11.520><c> is</c><01:05:11.680><c> the</c><01:05:11.839><c> head</c><01:05:12.480><c> size</c><01:05:13.480><c> and</c>

01:05:13.589 --> 01:05:13.599 align:start position:0%
these heads which is the head size and
 

01:05:13.599 --> 01:05:15.950 align:start position:0%
these heads which is the head size and
then<01:05:13.760><c> here</c><01:05:13.880><c> I'm</c><01:05:14.039><c> initializing</c><01:05:15.039><c> linear</c>

01:05:15.950 --> 01:05:15.960 align:start position:0%
then here I'm initializing linear
 

01:05:15.960 --> 01:05:18.109 align:start position:0%
then here I'm initializing linear
modules<01:05:16.680><c> and</c><01:05:16.760><c> I'm</c><01:05:16.880><c> using</c><01:05:17.160><c> bias</c><01:05:17.440><c> equals</c><01:05:17.680><c> false</c>

01:05:18.109 --> 01:05:18.119 align:start position:0%
modules and I'm using bias equals false
 

01:05:18.119 --> 01:05:19.390 align:start position:0%
modules and I'm using bias equals false
so<01:05:18.359><c> these</c><01:05:18.480><c> are</c><01:05:18.640><c> just</c><01:05:18.799><c> going</c><01:05:18.960><c> to</c><01:05:19.079><c> apply</c><01:05:19.319><c> a</c>

01:05:19.390 --> 01:05:19.400 align:start position:0%
so these are just going to apply a
 

01:05:19.400 --> 01:05:21.750 align:start position:0%
so these are just going to apply a
matrix<01:05:19.720><c> multiply</c><01:05:20.279><c> with</c><01:05:20.480><c> some</c><01:05:20.839><c> fixed</c>

01:05:21.750 --> 01:05:21.760 align:start position:0%
matrix multiply with some fixed
 

01:05:21.760 --> 01:05:26.109 align:start position:0%
matrix multiply with some fixed
weights<01:05:22.760><c> and</c><01:05:22.920><c> now</c><01:05:23.119><c> let</c><01:05:23.200><c> me</c><01:05:23.400><c> produce</c><01:05:24.039><c> a</c><01:05:25.039><c> key</c><01:05:25.400><c> and</c>

01:05:26.109 --> 01:05:26.119 align:start position:0%
weights and now let me produce a key and
 

01:05:26.119 --> 01:05:29.910 align:start position:0%
weights and now let me produce a key and
q<01:05:26.559><c> k</c><01:05:26.760><c> and</c><01:05:26.960><c> Q</c><01:05:27.680><c> by</c><01:05:27.839><c> forwarding</c><01:05:28.279><c> these</c><01:05:28.440><c> modules</c><01:05:29.039><c> on</c>

01:05:29.910 --> 01:05:29.920 align:start position:0%
q k and Q by forwarding these modules on
 

01:05:29.920 --> 01:05:32.750 align:start position:0%
q k and Q by forwarding these modules on
X<01:05:30.920><c> so</c><01:05:31.119><c> the</c><01:05:31.240><c> size</c><01:05:31.440><c> of</c><01:05:31.640><c> this</c><01:05:31.839><c> will</c><01:05:32.000><c> now</c>

01:05:32.750 --> 01:05:32.760 align:start position:0%
X so the size of this will now
 

01:05:32.760 --> 01:05:36.870 align:start position:0%
X so the size of this will now
become<01:05:33.760><c> B</c><01:05:34.119><c> by</c><01:05:34.319><c> T</c><01:05:34.920><c> by</c><01:05:35.400><c> 16</c><01:05:36.200><c> because</c><01:05:36.440><c> that</c><01:05:36.520><c> is</c><01:05:36.680><c> the</c>

01:05:36.870 --> 01:05:36.880 align:start position:0%
become B by T by 16 because that is the
 

01:05:36.880 --> 01:05:44.750 align:start position:0%
become B by T by 16 because that is the
head<01:05:37.119><c> size</c><01:05:38.000><c> and</c><01:05:38.160><c> the</c><01:05:38.240><c> same</c><01:05:38.520><c> here</c><01:05:38.799><c> B</c><01:05:39.039><c> by</c><01:05:39.200><c> T</c><01:05:39.480><c> by</c>

01:05:44.750 --> 01:05:44.760 align:start position:0%
 
 

01:05:44.760 --> 01:05:47.950 align:start position:0%
 
16<01:05:45.760><c> so</c><01:05:45.920><c> this</c><01:05:46.079><c> being</c><01:05:46.279><c> the</c><01:05:46.440><c> head</c><01:05:46.640><c> size</c><01:05:47.599><c> so</c><01:05:47.839><c> you</c>

01:05:47.950 --> 01:05:47.960 align:start position:0%
16 so this being the head size so you
 

01:05:47.960 --> 01:05:49.870 align:start position:0%
16 so this being the head size so you
see<01:05:48.200><c> here</c><01:05:48.359><c> that</c><01:05:48.480><c> when</c><01:05:48.599><c> I</c><01:05:48.720><c> forward</c><01:05:49.119><c> this</c><01:05:49.279><c> linear</c>

01:05:49.870 --> 01:05:49.880 align:start position:0%
see here that when I forward this linear
 

01:05:49.880 --> 01:05:52.950 align:start position:0%
see here that when I forward this linear
on<01:05:50.039><c> top</c><01:05:50.200><c> of</c><01:05:50.359><c> my</c><01:05:50.559><c> X</c><01:05:51.559><c> all</c><01:05:51.720><c> the</c><01:05:51.880><c> tokens</c><01:05:52.480><c> in</c><01:05:52.680><c> all</c><01:05:52.799><c> the</c>

01:05:52.950 --> 01:05:52.960 align:start position:0%
on top of my X all the tokens in all the
 

01:05:52.960 --> 01:05:55.349 align:start position:0%
on top of my X all the tokens in all the
positions<01:05:53.599><c> in</c><01:05:53.760><c> the</c><01:05:53.920><c> B</c><01:05:54.119><c> BYT</c><01:05:54.520><c> Arrangement</c><01:05:55.240><c> all</c>

01:05:55.349 --> 01:05:55.359 align:start position:0%
positions in the B BYT Arrangement all
 

01:05:55.359 --> 01:05:56.990 align:start position:0%
positions in the B BYT Arrangement all
of<01:05:55.480><c> them</c><01:05:55.720><c> them</c><01:05:55.880><c> in</c><01:05:56.119><c> parallel</c><01:05:56.720><c> and</c>

01:05:56.990 --> 01:05:57.000 align:start position:0%
of them them in parallel and
 

01:05:57.000 --> 01:05:59.630 align:start position:0%
of them them in parallel and
independently<01:05:58.000><c> produce</c><01:05:58.480><c> a</c><01:05:58.680><c> key</c><01:05:58.920><c> and</c><01:05:59.039><c> a</c><01:05:59.200><c> query</c>

01:05:59.630 --> 01:05:59.640 align:start position:0%
independently produce a key and a query
 

01:05:59.640 --> 01:06:01.549 align:start position:0%
independently produce a key and a query
so<01:05:59.839><c> no</c><01:06:00.039><c> communication</c><01:06:00.520><c> has</c><01:06:00.680><c> happened</c>

01:06:01.549 --> 01:06:01.559 align:start position:0%
so no communication has happened
 

01:06:01.559 --> 01:06:04.190 align:start position:0%
so no communication has happened
yet<01:06:02.559><c> but</c><01:06:02.680><c> the</c><01:06:02.799><c> communication</c><01:06:03.279><c> comes</c><01:06:03.680><c> now</c><01:06:04.039><c> all</c>

01:06:04.190 --> 01:06:04.200 align:start position:0%
yet but the communication comes now all
 

01:06:04.200 --> 01:06:07.510 align:start position:0%
yet but the communication comes now all
the<01:06:04.359><c> queries</c><01:06:05.119><c> will</c><01:06:05.599><c> do</c><01:06:05.960><c> product</c><01:06:06.319><c> with</c><01:06:06.480><c> all</c><01:06:06.599><c> the</c>

01:06:07.510 --> 01:06:07.520 align:start position:0%
the queries will do product with all the
 

01:06:07.520 --> 01:06:09.870 align:start position:0%
the queries will do product with all the
keys<01:06:08.520><c> so</c><01:06:08.720><c> basically</c><01:06:09.079><c> what</c><01:06:09.240><c> we</c><01:06:09.359><c> want</c><01:06:09.640><c> is</c><01:06:09.760><c> we</c>

01:06:09.870 --> 01:06:09.880 align:start position:0%
keys so basically what we want is we
 

01:06:09.880 --> 01:06:12.109 align:start position:0%
keys so basically what we want is we
want<01:06:10.160><c> way</c><01:06:10.480><c> now</c><01:06:10.880><c> or</c><01:06:11.119><c> the</c><01:06:11.240><c> affinities</c><01:06:11.799><c> between</c>

01:06:12.109 --> 01:06:12.119 align:start position:0%
want way now or the affinities between
 

01:06:12.119 --> 01:06:16.710 align:start position:0%
want way now or the affinities between
these<01:06:12.680><c> to</c><01:06:12.920><c> be</c><01:06:13.920><c> query</c><01:06:14.559><c> multiplying</c><01:06:15.480><c> key</c><01:06:16.480><c> but</c><01:06:16.599><c> we</c>

01:06:16.710 --> 01:06:16.720 align:start position:0%
these to be query multiplying key but we
 

01:06:16.720 --> 01:06:18.230 align:start position:0%
these to be query multiplying key but we
have<01:06:16.799><c> to</c><01:06:16.880><c> be</c><01:06:17.000><c> careful</c><01:06:17.400><c> with</c><01:06:17.839><c> uh</c><01:06:17.920><c> we</c><01:06:18.039><c> can't</c>

01:06:18.230 --> 01:06:18.240 align:start position:0%
have to be careful with uh we can't
 

01:06:18.240 --> 01:06:20.069 align:start position:0%
have to be careful with uh we can't
Matrix<01:06:18.559><c> multiply</c><01:06:19.000><c> this</c><01:06:19.119><c> we</c><01:06:19.240><c> actually</c><01:06:19.400><c> need</c><01:06:19.599><c> to</c>

01:06:20.069 --> 01:06:20.079 align:start position:0%
Matrix multiply this we actually need to
 

01:06:20.079 --> 01:06:22.990 align:start position:0%
Matrix multiply this we actually need to
transpose<01:06:21.079><c> uh</c><01:06:21.359><c> K</c><01:06:22.039><c> but</c><01:06:22.160><c> we</c><01:06:22.279><c> have</c><01:06:22.359><c> to</c><01:06:22.480><c> be</c><01:06:22.720><c> also</c>

01:06:22.990 --> 01:06:23.000 align:start position:0%
transpose uh K but we have to be also
 

01:06:23.000 --> 01:06:25.589 align:start position:0%
transpose uh K but we have to be also
careful<01:06:23.640><c> because</c><01:06:24.640><c> these</c><01:06:24.799><c> are</c><01:06:25.160><c> when</c><01:06:25.279><c> you</c><01:06:25.359><c> have</c>

01:06:25.589 --> 01:06:25.599 align:start position:0%
careful because these are when you have
 

01:06:25.599 --> 01:06:27.630 align:start position:0%
careful because these are when you have
The<01:06:25.680><c> Bash</c><01:06:25.920><c> Dimension</c><01:06:26.799><c> so</c><01:06:26.960><c> in</c><01:06:27.079><c> particular</c><01:06:27.520><c> we</c>

01:06:27.630 --> 01:06:27.640 align:start position:0%
The Bash Dimension so in particular we
 

01:06:27.640 --> 01:06:30.430 align:start position:0%
The Bash Dimension so in particular we
want<01:06:27.799><c> to</c><01:06:28.319><c> transpose</c><01:06:29.319><c> uh</c><01:06:29.480><c> the</c><01:06:29.680><c> last</c><01:06:30.119><c> two</c>

01:06:30.430 --> 01:06:30.440 align:start position:0%
want to transpose uh the last two
 

01:06:30.440 --> 01:06:33.950 align:start position:0%
want to transpose uh the last two
dimensions<01:06:31.240><c> dimension1</c><01:06:32.240><c> and</c><01:06:32.359><c> dimension</c><01:06:32.960><c> -2</c>

01:06:33.950 --> 01:06:33.960 align:start position:0%
dimensions dimension1 and dimension -2
 

01:06:33.960 --> 01:06:36.470 align:start position:0%
dimensions dimension1 and dimension -2
so

01:06:36.470 --> 01:06:36.480 align:start position:0%
 
 

01:06:36.480 --> 01:06:40.150 align:start position:0%
 
-21<01:06:37.480><c> and</c><01:06:37.599><c> so</c><01:06:37.920><c> this</c><01:06:38.400><c> Matrix</c><01:06:38.960><c> multiply</c><01:06:39.559><c> now</c><01:06:39.880><c> will</c>

01:06:40.150 --> 01:06:40.160 align:start position:0%
-21 and so this Matrix multiply now will
 

01:06:40.160 --> 01:06:44.190 align:start position:0%
-21 and so this Matrix multiply now will
basically<01:06:40.520><c> do</c><01:06:40.680><c> the</c><01:06:40.839><c> following</c><01:06:41.599><c> B</c><01:06:41.839><c> by</c><01:06:42.000><c> T</c><01:06:42.279><c> by</c>

01:06:44.190 --> 01:06:44.200 align:start position:0%
basically do the following B by T by
 

01:06:44.200 --> 01:06:49.069 align:start position:0%
basically do the following B by T by
16<01:06:45.200><c> Matrix</c><01:06:45.599><c> multiplies</c><01:06:46.279><c> B</c><01:06:46.599><c> by</c><01:06:47.119><c> 16</c><01:06:47.640><c> by</c><01:06:47.839><c> T</c><01:06:48.839><c> to</c>

01:06:49.069 --> 01:06:49.079 align:start position:0%
16 Matrix multiplies B by 16 by T to
 

01:06:49.079 --> 01:06:53.549 align:start position:0%
16 Matrix multiplies B by 16 by T to
give<01:06:49.520><c> us</c><01:06:50.520><c> B</c><01:06:51.039><c> by</c><01:06:51.240><c> T</c><01:06:51.720><c> by</c>

01:06:53.549 --> 01:06:53.559 align:start position:0%
give us B by T by
 

01:06:53.559 --> 01:06:56.029 align:start position:0%
give us B by T by
T<01:06:54.559><c> right</c>

01:06:56.029 --> 01:06:56.039 align:start position:0%
T right
 

01:06:56.039 --> 01:06:58.789 align:start position:0%
T right
so<01:06:56.240><c> for</c><01:06:56.480><c> every</c><01:06:56.839><c> row</c><01:06:57.200><c> of</c><01:06:57.400><c> B</c><01:06:58.039><c> we're</c><01:06:58.240><c> now</c><01:06:58.400><c> going</c><01:06:58.559><c> to</c>

01:06:58.789 --> 01:06:58.799 align:start position:0%
so for every row of B we're now going to
 

01:06:58.799 --> 01:07:01.109 align:start position:0%
so for every row of B we're now going to
have<01:06:59.240><c> a</c><01:06:59.440><c> t</c><01:06:59.720><c> Square</c><01:07:00.160><c> Matrix</c><01:07:00.559><c> giving</c><01:07:00.799><c> us</c><01:07:00.960><c> the</c>

01:07:01.109 --> 01:07:01.119 align:start position:0%
have a t Square Matrix giving us the
 

01:07:01.119 --> 01:07:04.069 align:start position:0%
have a t Square Matrix giving us the
affinities<01:07:02.000><c> and</c><01:07:02.160><c> these</c><01:07:02.279><c> are</c><01:07:02.480><c> now</c><01:07:02.720><c> the</c><01:07:02.920><c> way</c><01:07:03.880><c> so</c>

01:07:04.069 --> 01:07:04.079 align:start position:0%
affinities and these are now the way so
 

01:07:04.079 --> 01:07:06.309 align:start position:0%
affinities and these are now the way so
they're<01:07:04.319><c> not</c><01:07:04.920><c> zeros</c><01:07:05.680><c> they</c><01:07:05.760><c> are</c><01:07:05.920><c> now</c><01:07:06.079><c> coming</c>

01:07:06.309 --> 01:07:06.319 align:start position:0%
they're not zeros they are now coming
 

01:07:06.319 --> 01:07:08.190 align:start position:0%
they're not zeros they are now coming
from<01:07:06.599><c> this</c><01:07:06.880><c> dot</c><01:07:07.200><c> product</c><01:07:07.599><c> between</c><01:07:07.839><c> the</c><01:07:08.000><c> keys</c>

01:07:08.190 --> 01:07:08.200 align:start position:0%
from this dot product between the keys
 

01:07:08.200 --> 01:07:11.269 align:start position:0%
from this dot product between the keys
and<01:07:08.319><c> the</c><01:07:08.760><c> queries</c><01:07:09.760><c> so</c><01:07:10.039><c> this</c><01:07:10.240><c> can</c><01:07:10.480><c> now</c><01:07:10.720><c> run</c><01:07:11.160><c> I</c>

01:07:11.269 --> 01:07:11.279 align:start position:0%
and the queries so this can now run I
 

01:07:11.279 --> 01:07:13.789 align:start position:0%
and the queries so this can now run I
can<01:07:11.480><c> I</c><01:07:11.599><c> can</c><01:07:11.760><c> run</c><01:07:12.200><c> this</c><01:07:13.200><c> and</c><01:07:13.359><c> the</c><01:07:13.480><c> weighted</c>

01:07:13.789 --> 01:07:13.799 align:start position:0%
can I can run this and the weighted
 

01:07:13.799 --> 01:07:16.390 align:start position:0%
can I can run this and the weighted
aggregation<01:07:14.440><c> now</c><01:07:14.760><c> is</c><01:07:14.880><c> a</c><01:07:15.079><c> function</c><01:07:15.839><c> in</c><01:07:15.960><c> a</c><01:07:16.119><c> data</c>

01:07:16.390 --> 01:07:16.400 align:start position:0%
aggregation now is a function in a data
 

01:07:16.400 --> 01:07:18.190 align:start position:0%
aggregation now is a function in a data
Bandon<01:07:16.760><c> manner</c><01:07:17.480><c> between</c><01:07:17.760><c> the</c><01:07:17.880><c> keys</c><01:07:18.079><c> and</c>

01:07:18.190 --> 01:07:18.200 align:start position:0%
Bandon manner between the keys and
 

01:07:18.200 --> 01:07:20.670 align:start position:0%
Bandon manner between the keys and
queries<01:07:18.640><c> of</c><01:07:18.880><c> these</c><01:07:19.240><c> nodes</c><01:07:20.240><c> so</c><01:07:20.480><c> just</c>

01:07:20.670 --> 01:07:20.680 align:start position:0%
queries of these nodes so just
 

01:07:20.680 --> 01:07:22.829 align:start position:0%
queries of these nodes so just
inspecting<01:07:21.119><c> what</c><01:07:21.240><c> happened</c>

01:07:22.829 --> 01:07:22.839 align:start position:0%
inspecting what happened
 

01:07:22.839 --> 01:07:26.390 align:start position:0%
inspecting what happened
here<01:07:23.839><c> the</c><01:07:24.000><c> way</c><01:07:24.640><c> takes</c><01:07:24.839><c> on</c><01:07:25.079><c> this</c><01:07:25.200><c> form</c>

01:07:26.390 --> 01:07:26.400 align:start position:0%
here the way takes on this form
 

01:07:26.400 --> 01:07:28.990 align:start position:0%
here the way takes on this form
and<01:07:26.520><c> you</c><01:07:26.640><c> see</c><01:07:26.920><c> that</c><01:07:27.599><c> before</c><01:07:28.000><c> way</c><01:07:28.359><c> was</c><01:07:28.720><c> uh</c><01:07:28.839><c> just</c>

01:07:28.990 --> 01:07:29.000 align:start position:0%
and you see that before way was uh just
 

01:07:29.000 --> 01:07:31.109 align:start position:0%
and you see that before way was uh just
a<01:07:29.200><c> constant</c><01:07:29.760><c> so</c><01:07:29.960><c> it</c><01:07:30.079><c> was</c><01:07:30.279><c> applied</c><01:07:30.599><c> in</c><01:07:30.720><c> the</c><01:07:30.880><c> same</c>

01:07:31.109 --> 01:07:31.119 align:start position:0%
a constant so it was applied in the same
 

01:07:31.119 --> 01:07:33.349 align:start position:0%
a constant so it was applied in the same
way<01:07:31.279><c> to</c><01:07:31.440><c> all</c><01:07:31.599><c> the</c><01:07:31.760><c> batch</c><01:07:32.160><c> elements</c><01:07:33.039><c> but</c><01:07:33.160><c> now</c>

01:07:33.349 --> 01:07:33.359 align:start position:0%
way to all the batch elements but now
 

01:07:33.359 --> 01:07:34.750 align:start position:0%
way to all the batch elements but now
every<01:07:33.599><c> single</c><01:07:33.839><c> batch</c><01:07:34.079><c> elements</c><01:07:34.400><c> will</c><01:07:34.559><c> have</c>

01:07:34.750 --> 01:07:34.760 align:start position:0%
every single batch elements will have
 

01:07:34.760 --> 01:07:37.829 align:start position:0%
every single batch elements will have
different<01:07:35.319><c> sort</c><01:07:35.480><c> of</c><01:07:35.720><c> we</c><01:07:36.720><c> because</c><01:07:37.400><c> uh</c><01:07:37.640><c> every</c>

01:07:37.829 --> 01:07:37.839 align:start position:0%
different sort of we because uh every
 

01:07:37.839 --> 01:07:39.390 align:start position:0%
different sort of we because uh every
single<01:07:38.119><c> batch</c><01:07:38.319><c> element</c><01:07:38.559><c> contains</c><01:07:38.960><c> different</c>

01:07:39.390 --> 01:07:39.400 align:start position:0%
single batch element contains different
 

01:07:39.400 --> 01:07:41.950 align:start position:0%
single batch element contains different
uh<01:07:39.520><c> tokens</c><01:07:40.440><c> at</c><01:07:40.640><c> different</c><01:07:40.880><c> positions</c><01:07:41.640><c> and</c><01:07:41.760><c> so</c>

01:07:41.950 --> 01:07:41.960 align:start position:0%
uh tokens at different positions and so
 

01:07:41.960 --> 01:07:44.589 align:start position:0%
uh tokens at different positions and so
this<01:07:42.039><c> is</c><01:07:42.200><c> not</c><01:07:42.400><c> data</c><01:07:43.000><c> dependent</c><01:07:44.000><c> so</c><01:07:44.359><c> when</c><01:07:44.480><c> we</c>

01:07:44.589 --> 01:07:44.599 align:start position:0%
this is not data dependent so when we
 

01:07:44.599 --> 01:07:47.109 align:start position:0%
this is not data dependent so when we
look<01:07:44.720><c> at</c><01:07:44.920><c> just</c><01:07:45.079><c> the</c><01:07:45.359><c> zeroth</c><01:07:46.359><c> uh</c><01:07:46.520><c> Row</c><01:07:46.960><c> for</c>

01:07:47.109 --> 01:07:47.119 align:start position:0%
look at just the zeroth uh Row for
 

01:07:47.119 --> 01:07:49.670 align:start position:0%
look at just the zeroth uh Row for
example<01:07:47.559><c> in</c><01:07:47.680><c> the</c><01:07:47.880><c> input</c><01:07:48.880><c> these</c><01:07:49.039><c> are</c><01:07:49.319><c> the</c>

01:07:49.670 --> 01:07:49.680 align:start position:0%
example in the input these are the
 

01:07:49.680 --> 01:07:51.549 align:start position:0%
example in the input these are the
weights<01:07:50.039><c> that</c><01:07:50.200><c> came</c><01:07:50.359><c> out</c><01:07:50.960><c> and</c><01:07:51.079><c> so</c><01:07:51.160><c> you</c><01:07:51.240><c> can</c><01:07:51.359><c> see</c>

01:07:51.549 --> 01:07:51.559 align:start position:0%
weights that came out and so you can see
 

01:07:51.559 --> 01:07:53.430 align:start position:0%
weights that came out and so you can see
now<01:07:51.680><c> that</c><01:07:51.799><c> they're</c><01:07:51.960><c> not</c><01:07:52.160><c> just</c><01:07:52.319><c> exactly</c>

01:07:53.430 --> 01:07:53.440 align:start position:0%
now that they're not just exactly
 

01:07:53.440 --> 01:07:55.910 align:start position:0%
now that they're not just exactly
uniform<01:07:54.440><c> um</c><01:07:54.920><c> and</c><01:07:55.039><c> in</c><01:07:55.160><c> particular</c><01:07:55.720><c> as</c><01:07:55.799><c> an</c>

01:07:55.910 --> 01:07:55.920 align:start position:0%
uniform um and in particular as an
 

01:07:55.920 --> 01:07:58.069 align:start position:0%
uniform um and in particular as an
example<01:07:56.240><c> here</c><01:07:56.359><c> for</c><01:07:56.559><c> the</c><01:07:56.680><c> last</c><01:07:56.960><c> row</c><01:07:57.760><c> this</c><01:07:57.880><c> was</c>

01:07:58.069 --> 01:07:58.079 align:start position:0%
example here for the last row this was
 

01:07:58.079 --> 01:08:00.230 align:start position:0%
example here for the last row this was
the<01:07:58.240><c> eighth</c><01:07:58.640><c> token</c><01:07:59.359><c> and</c><01:07:59.480><c> the</c><01:07:59.599><c> eighth</c><01:07:59.880><c> token</c>

01:08:00.230 --> 01:08:00.240 align:start position:0%
the eighth token and the eighth token
 

01:08:00.240 --> 01:08:02.230 align:start position:0%
the eighth token and the eighth token
knows<01:08:00.559><c> what</c><01:08:00.799><c> content</c><01:08:01.160><c> it</c><01:08:01.400><c> has</c><01:08:01.680><c> and</c><01:08:01.799><c> it</c><01:08:01.920><c> knows</c>

01:08:02.230 --> 01:08:02.240 align:start position:0%
knows what content it has and it knows
 

01:08:02.240 --> 01:08:04.870 align:start position:0%
knows what content it has and it knows
at<01:08:02.440><c> what</c><01:08:02.599><c> position</c><01:08:03.000><c> it's</c><01:08:03.160><c> in</c><01:08:04.160><c> and</c><01:08:04.279><c> now</c><01:08:04.480><c> the</c><01:08:04.599><c> E</c>

01:08:04.870 --> 01:08:04.880 align:start position:0%
at what position it's in and now the E
 

01:08:04.880 --> 01:08:08.549 align:start position:0%
at what position it's in and now the E
token<01:08:05.559><c> based</c><01:08:05.799><c> on</c><01:08:06.279><c> that</c><01:08:07.279><c> uh</c><01:08:07.400><c> creates</c><01:08:07.760><c> a</c><01:08:07.880><c> query</c>

01:08:08.549 --> 01:08:08.559 align:start position:0%
token based on that uh creates a query
 

01:08:08.559 --> 01:08:10.510 align:start position:0%
token based on that uh creates a query
hey<01:08:08.720><c> I'm</c><01:08:08.839><c> looking</c><01:08:09.039><c> for</c><01:08:09.240><c> this</c><01:08:09.359><c> kind</c><01:08:09.480><c> of</c><01:08:09.680><c> stuff</c>

01:08:10.510 --> 01:08:10.520 align:start position:0%
hey I'm looking for this kind of stuff
 

01:08:10.520 --> 01:08:12.750 align:start position:0%
hey I'm looking for this kind of stuff
um<01:08:10.960><c> I'm</c><01:08:11.079><c> a</c><01:08:11.240><c> vowel</c><01:08:11.640><c> I'm</c><01:08:11.720><c> on</c><01:08:11.839><c> the</c><01:08:11.960><c> E</c><01:08:12.200><c> position</c><01:08:12.640><c> I'm</c>

01:08:12.750 --> 01:08:12.760 align:start position:0%
um I'm a vowel I'm on the E position I'm
 

01:08:12.760 --> 01:08:14.630 align:start position:0%
um I'm a vowel I'm on the E position I'm
looking<01:08:12.960><c> for</c><01:08:13.119><c> any</c><01:08:13.319><c> consonant</c><01:08:13.839><c> at</c><01:08:14.000><c> positions</c>

01:08:14.630 --> 01:08:14.640 align:start position:0%
looking for any consonant at positions
 

01:08:14.640 --> 01:08:18.149 align:start position:0%
looking for any consonant at positions
up<01:08:14.799><c> to</c><01:08:15.440><c> four</c><01:08:16.440><c> and</c><01:08:16.600><c> then</c><01:08:16.960><c> all</c><01:08:17.239><c> the</c><01:08:17.359><c> nodes</c><01:08:17.880><c> get</c><01:08:18.000><c> to</c>

01:08:18.149 --> 01:08:18.159 align:start position:0%
up to four and then all the nodes get to
 

01:08:18.159 --> 01:08:20.590 align:start position:0%
up to four and then all the nodes get to
emit<01:08:18.560><c> keys</c><01:08:19.560><c> and</c><01:08:19.679><c> maybe</c><01:08:19.880><c> one</c><01:08:20.000><c> of</c><01:08:20.080><c> the</c><01:08:20.199><c> channels</c>

01:08:20.590 --> 01:08:20.600 align:start position:0%
emit keys and maybe one of the channels
 

01:08:20.600 --> 01:08:22.990 align:start position:0%
emit keys and maybe one of the channels
could<01:08:20.759><c> be</c><01:08:21.239><c> I</c><01:08:21.359><c> am</c><01:08:21.520><c> a</c><01:08:21.839><c> I</c><01:08:21.920><c> am</c><01:08:22.080><c> a</c><01:08:22.239><c> consonant</c><01:08:22.719><c> and</c><01:08:22.920><c> I</c>

01:08:22.990 --> 01:08:23.000 align:start position:0%
could be I am a I am a consonant and I
 

01:08:23.000 --> 01:08:25.590 align:start position:0%
could be I am a I am a consonant and I
am<01:08:23.159><c> in</c><01:08:23.279><c> a</c><01:08:23.440><c> position</c><01:08:23.759><c> up</c><01:08:23.880><c> to</c><01:08:24.159><c> four</c><01:08:25.159><c> and</c><01:08:25.319><c> that</c>

01:08:25.590 --> 01:08:25.600 align:start position:0%
am in a position up to four and that
 

01:08:25.600 --> 01:08:27.789 align:start position:0%
am in a position up to four and that
that<01:08:25.920><c> key</c><01:08:26.239><c> would</c><01:08:26.400><c> have</c><01:08:26.520><c> a</c><01:08:26.719><c> high</c><01:08:27.120><c> number</c><01:08:27.600><c> in</c>

01:08:27.789 --> 01:08:27.799 align:start position:0%
that key would have a high number in
 

01:08:27.799 --> 01:08:29.870 align:start position:0%
that key would have a high number in
that<01:08:28.080><c> specific</c><01:08:28.440><c> Channel</c><01:08:29.319><c> and</c><01:08:29.440><c> that's</c><01:08:29.600><c> how</c><01:08:29.759><c> the</c>

01:08:29.870 --> 01:08:29.880 align:start position:0%
that specific Channel and that's how the
 

01:08:29.880 --> 01:08:31.669 align:start position:0%
that specific Channel and that's how the
query<01:08:30.159><c> and</c><01:08:30.279><c> the</c><01:08:30.400><c> key</c><01:08:30.600><c> when</c><01:08:30.759><c> they</c><01:08:30.960><c> do</c><01:08:31.239><c> product</c>

01:08:31.669 --> 01:08:31.679 align:start position:0%
query and the key when they do product
 

01:08:31.679 --> 01:08:33.030 align:start position:0%
query and the key when they do product
they<01:08:31.759><c> can</c><01:08:31.920><c> find</c><01:08:32.199><c> each</c><01:08:32.319><c> other</c><01:08:32.600><c> and</c><01:08:32.719><c> create</c><01:08:32.920><c> a</c>

01:08:33.030 --> 01:08:33.040 align:start position:0%
they can find each other and create a
 

01:08:33.040 --> 01:08:35.390 align:start position:0%
they can find each other and create a
high<01:08:33.640><c> affinity</c><01:08:34.640><c> and</c><01:08:34.759><c> when</c><01:08:34.880><c> they</c><01:08:35.000><c> have</c><01:08:35.080><c> a</c><01:08:35.199><c> high</c>

01:08:35.390 --> 01:08:35.400 align:start position:0%
high affinity and when they have a high
 

01:08:35.400 --> 01:08:38.149 align:start position:0%
high affinity and when they have a high
Affinity<01:08:35.880><c> like</c><01:08:36.159><c> say</c><01:08:37.080><c> uh</c><01:08:37.239><c> this</c><01:08:37.400><c> token</c><01:08:37.960><c> was</c>

01:08:38.149 --> 01:08:38.159 align:start position:0%
Affinity like say uh this token was
 

01:08:38.159 --> 01:08:41.309 align:start position:0%
Affinity like say uh this token was
pretty<01:08:38.400><c> interesting</c><01:08:38.920><c> to</c><01:08:39.759><c> uh</c><01:08:39.880><c> to</c><01:08:40.120><c> this</c><01:08:40.319><c> eighth</c>

01:08:41.309 --> 01:08:41.319 align:start position:0%
pretty interesting to uh to this eighth
 

01:08:41.319 --> 01:08:43.789 align:start position:0%
pretty interesting to uh to this eighth
token<01:08:42.319><c> when</c><01:08:42.480><c> they</c><01:08:42.600><c> have</c><01:08:42.679><c> a</c><01:08:42.799><c> high</c><01:08:42.960><c> Affinity</c>

01:08:43.789 --> 01:08:43.799 align:start position:0%
token when they have a high Affinity
 

01:08:43.799 --> 01:08:45.709 align:start position:0%
token when they have a high Affinity
then<01:08:43.960><c> through</c><01:08:44.120><c> the</c><01:08:44.279><c> softmax</c><01:08:45.159><c> I</c><01:08:45.239><c> will</c><01:08:45.400><c> end</c><01:08:45.520><c> up</c>

01:08:45.709 --> 01:08:45.719 align:start position:0%
then through the softmax I will end up
 

01:08:45.719 --> 01:08:47.430 align:start position:0%
then through the softmax I will end up
aggregating<01:08:46.279><c> a</c><01:08:46.400><c> lot</c><01:08:46.520><c> of</c><01:08:46.640><c> its</c><01:08:46.839><c> information</c>

01:08:47.430 --> 01:08:47.440 align:start position:0%
aggregating a lot of its information
 

01:08:47.440 --> 01:08:49.870 align:start position:0%
aggregating a lot of its information
into<01:08:47.960><c> my</c><01:08:48.239><c> position</c><01:08:49.239><c> and</c><01:08:49.319><c> so</c><01:08:49.520><c> I'll</c><01:08:49.640><c> get</c><01:08:49.759><c> to</c>

01:08:49.870 --> 01:08:49.880 align:start position:0%
into my position and so I'll get to
 

01:08:49.880 --> 01:08:51.749 align:start position:0%
into my position and so I'll get to
learn<01:08:50.159><c> a</c><01:08:50.319><c> lot</c><01:08:50.679><c> about</c>

01:08:51.749 --> 01:08:51.759 align:start position:0%
learn a lot about
 

01:08:51.759 --> 01:08:55.870 align:start position:0%
learn a lot about
it<01:08:52.759><c> now</c><01:08:53.640><c> just</c><01:08:54.199><c> this</c><01:08:54.400><c> we're</c><01:08:54.640><c> looking</c><01:08:54.880><c> at</c><01:08:55.080><c> way</c>

01:08:55.870 --> 01:08:55.880 align:start position:0%
it now just this we're looking at way
 

01:08:55.880 --> 01:08:59.390 align:start position:0%
it now just this we're looking at way
after<01:08:56.359><c> this</c><01:08:56.480><c> has</c><01:08:56.679><c> already</c><01:08:57.279><c> happened</c><01:08:58.319><c> um</c><01:08:59.319><c> let</c>

01:08:59.390 --> 01:08:59.400 align:start position:0%
after this has already happened um let
 

01:08:59.400 --> 01:09:01.110 align:start position:0%
after this has already happened um let
me<01:08:59.560><c> erase</c><01:08:59.960><c> this</c><01:09:00.159><c> operation</c><01:09:00.560><c> as</c><01:09:00.679><c> well</c><01:09:00.880><c> so</c><01:09:01.040><c> let</c>

01:09:01.110 --> 01:09:01.120 align:start position:0%
me erase this operation as well so let
 

01:09:01.120 --> 01:09:03.309 align:start position:0%
me erase this operation as well so let
me<01:09:01.239><c> erase</c><01:09:01.560><c> the</c><01:09:01.920><c> masking</c><01:09:02.359><c> and</c><01:09:02.480><c> the</c><01:09:02.600><c> softmax</c>

01:09:03.309 --> 01:09:03.319 align:start position:0%
me erase the masking and the softmax
 

01:09:03.319 --> 01:09:04.510 align:start position:0%
me erase the masking and the softmax
just<01:09:03.480><c> to</c><01:09:03.600><c> show</c><01:09:03.719><c> you</c><01:09:03.880><c> the</c><01:09:04.000><c> under</c><01:09:04.239><c> the</c><01:09:04.359><c> hood</c>

01:09:04.510 --> 01:09:04.520 align:start position:0%
just to show you the under the hood
 

01:09:04.520 --> 01:09:07.189 align:start position:0%
just to show you the under the hood
internals<01:09:04.920><c> and</c><01:09:05.080><c> how</c><01:09:05.199><c> that</c><01:09:05.520><c> works</c><01:09:06.520><c> so</c><01:09:06.759><c> without</c>

01:09:07.189 --> 01:09:07.199 align:start position:0%
internals and how that works so without
 

01:09:07.199 --> 01:09:09.510 align:start position:0%
internals and how that works so without
the<01:09:07.440><c> masking</c><01:09:07.920><c> in</c><01:09:08.040><c> the</c><01:09:08.120><c> softmax</c><01:09:08.960><c> Whey</c><01:09:09.279><c> comes</c>

01:09:09.510 --> 01:09:09.520 align:start position:0%
the masking in the softmax Whey comes
 

01:09:09.520 --> 01:09:11.669 align:start position:0%
the masking in the softmax Whey comes
out<01:09:10.199><c> like</c><01:09:10.400><c> this</c><01:09:10.679><c> right</c><01:09:10.920><c> this</c><01:09:11.040><c> is</c><01:09:11.199><c> the</c><01:09:11.400><c> outputs</c>

01:09:11.669 --> 01:09:11.679 align:start position:0%
out like this right this is the outputs
 

01:09:11.679 --> 01:09:14.309 align:start position:0%
out like this right this is the outputs
of<01:09:11.799><c> the</c><01:09:11.880><c> do</c><01:09:12.520><c> products</c><01:09:13.520><c> um</c><01:09:13.719><c> and</c><01:09:13.880><c> these</c><01:09:14.000><c> are</c><01:09:14.159><c> the</c>

01:09:14.309 --> 01:09:14.319 align:start position:0%
of the do products um and these are the
 

01:09:14.319 --> 01:09:15.950 align:start position:0%
of the do products um and these are the
raw<01:09:14.560><c> outputs</c><01:09:14.960><c> and</c><01:09:15.040><c> they</c><01:09:15.159><c> take</c><01:09:15.279><c> on</c><01:09:15.480><c> values</c><01:09:15.759><c> from</c>

01:09:15.950 --> 01:09:15.960 align:start position:0%
raw outputs and they take on values from
 

01:09:15.960 --> 01:09:18.749 align:start position:0%
raw outputs and they take on values from
negative<01:09:16.560><c> you</c><01:09:16.679><c> know</c><01:09:17.000><c> two</c><01:09:17.319><c> to</c><01:09:17.520><c> positive</c><01:09:17.799><c> two</c>

01:09:18.749 --> 01:09:18.759 align:start position:0%
negative you know two to positive two
 

01:09:18.759 --> 01:09:21.829 align:start position:0%
negative you know two to positive two
Etc<01:09:19.759><c> so</c><01:09:20.120><c> that's</c><01:09:20.319><c> the</c><01:09:20.520><c> raw</c><01:09:20.960><c> interactions</c><01:09:21.640><c> and</c>

01:09:21.829 --> 01:09:21.839 align:start position:0%
Etc so that's the raw interactions and
 

01:09:21.839 --> 01:09:24.550 align:start position:0%
Etc so that's the raw interactions and
raw<01:09:22.120><c> affinities</c><01:09:22.600><c> between</c><01:09:22.920><c> all</c><01:09:23.080><c> the</c><01:09:23.359><c> nodes</c><01:09:24.359><c> but</c>

01:09:24.550 --> 01:09:24.560 align:start position:0%
raw affinities between all the nodes but
 

01:09:24.560 --> 01:09:26.709 align:start position:0%
raw affinities between all the nodes but
now<01:09:24.880><c> if</c><01:09:24.960><c> I'm</c><01:09:25.080><c> going</c><01:09:25.480><c> if</c><01:09:25.600><c> I'm</c><01:09:25.719><c> a</c><01:09:25.839><c> fifth</c><01:09:26.080><c> node</c><01:09:26.640><c> I</c>

01:09:26.709 --> 01:09:26.719 align:start position:0%
now if I'm going if I'm a fifth node I
 

01:09:26.719 --> 01:09:28.789 align:start position:0%
now if I'm going if I'm a fifth node I
will<01:09:26.960><c> not</c><01:09:27.159><c> want</c><01:09:27.359><c> to</c><01:09:27.799><c> aggregate</c><01:09:28.279><c> anything</c><01:09:28.640><c> from</c>

01:09:28.789 --> 01:09:28.799 align:start position:0%
will not want to aggregate anything from
 

01:09:28.799 --> 01:09:30.349 align:start position:0%
will not want to aggregate anything from
the<01:09:28.920><c> sixth</c><01:09:29.199><c> node</c><01:09:29.440><c> seventh</c><01:09:29.719><c> node</c><01:09:30.159><c> and</c><01:09:30.279><c> the</c>

01:09:30.349 --> 01:09:30.359 align:start position:0%
the sixth node seventh node and the
 

01:09:30.359 --> 01:09:32.870 align:start position:0%
the sixth node seventh node and the
eighth<01:09:30.600><c> node</c><01:09:31.279><c> so</c><01:09:31.560><c> actually</c><01:09:31.799><c> we</c><01:09:31.920><c> use</c><01:09:32.159><c> the</c><01:09:32.520><c> upper</c>

01:09:32.870 --> 01:09:32.880 align:start position:0%
eighth node so actually we use the upper
 

01:09:32.880 --> 01:09:35.590 align:start position:0%
eighth node so actually we use the upper
triangular<01:09:33.880><c> masking</c><01:09:34.880><c> so</c><01:09:35.120><c> those</c><01:09:35.279><c> are</c><01:09:35.440><c> not</c>

01:09:35.590 --> 01:09:35.600 align:start position:0%
triangular masking so those are not
 

01:09:35.600 --> 01:09:37.349 align:start position:0%
triangular masking so those are not
allowed<01:09:35.880><c> to</c>

01:09:37.349 --> 01:09:37.359 align:start position:0%
allowed to
 

01:09:37.359 --> 01:09:40.070 align:start position:0%
allowed to
communicate<01:09:38.359><c> and</c><01:09:38.640><c> now</c><01:09:39.319><c> we</c><01:09:39.480><c> actually</c><01:09:39.759><c> want</c><01:09:39.920><c> to</c>

01:09:40.070 --> 01:09:40.080 align:start position:0%
communicate and now we actually want to
 

01:09:40.080 --> 01:09:42.749 align:start position:0%
communicate and now we actually want to
have<01:09:40.159><c> a</c><01:09:40.359><c> nice</c><01:09:40.960><c> uh</c><01:09:41.359><c> distribution</c><01:09:42.359><c> uh</c><01:09:42.480><c> so</c><01:09:42.640><c> we</c>

01:09:42.749 --> 01:09:42.759 align:start position:0%
have a nice uh distribution uh so we
 

01:09:42.759 --> 01:09:45.110 align:start position:0%
have a nice uh distribution uh so we
don't<01:09:42.920><c> want</c><01:09:43.080><c> to</c><01:09:43.400><c> aggregate</c><01:09:43.839><c> negative</c><01:09:44.040><c> .11</c><01:09:44.920><c> of</c>

01:09:45.110 --> 01:09:45.120 align:start position:0%
don't want to aggregate negative .11 of
 

01:09:45.120 --> 01:09:47.110 align:start position:0%
don't want to aggregate negative .11 of
this<01:09:45.279><c> node</c><01:09:45.600><c> that's</c><01:09:45.799><c> crazy</c><01:09:46.560><c> so</c><01:09:46.719><c> instead</c><01:09:47.000><c> we</c>

01:09:47.110 --> 01:09:47.120 align:start position:0%
this node that's crazy so instead we
 

01:09:47.120 --> 01:09:49.349 align:start position:0%
this node that's crazy so instead we
exponentiate<01:09:47.679><c> and</c><01:09:47.960><c> normalize</c><01:09:48.960><c> and</c><01:09:49.080><c> now</c><01:09:49.199><c> we</c>

01:09:49.349 --> 01:09:49.359 align:start position:0%
exponentiate and normalize and now we
 

01:09:49.359 --> 01:09:51.550 align:start position:0%
exponentiate and normalize and now we
get<01:09:49.440><c> a</c><01:09:49.560><c> nice</c><01:09:49.719><c> distribution</c><01:09:50.120><c> that</c><01:09:50.199><c> sums</c><01:09:50.440><c> to</c><01:09:50.560><c> one</c>

01:09:51.550 --> 01:09:51.560 align:start position:0%
get a nice distribution that sums to one
 

01:09:51.560 --> 01:09:52.829 align:start position:0%
get a nice distribution that sums to one
and<01:09:51.679><c> this</c><01:09:51.759><c> is</c><01:09:51.880><c> telling</c><01:09:52.159><c> us</c><01:09:52.319><c> now</c><01:09:52.440><c> in</c><01:09:52.480><c> the</c><01:09:52.600><c> data</c>

01:09:52.829 --> 01:09:52.839 align:start position:0%
and this is telling us now in the data
 

01:09:52.839 --> 01:09:54.830 align:start position:0%
and this is telling us now in the data
dependent<01:09:53.199><c> manner</c><01:09:53.719><c> how</c><01:09:53.880><c> much</c><01:09:54.159><c> of</c><01:09:54.480><c> information</c>

01:09:54.830 --> 01:09:54.840 align:start position:0%
dependent manner how much of information
 

01:09:54.840 --> 01:09:56.950 align:start position:0%
dependent manner how much of information
to<01:09:55.000><c> aggregate</c><01:09:55.719><c> from</c><01:09:55.920><c> any</c><01:09:56.080><c> of</c><01:09:56.199><c> these</c><01:09:56.360><c> tokens</c><01:09:56.800><c> in</c>

01:09:56.950 --> 01:09:56.960 align:start position:0%
to aggregate from any of these tokens in
 

01:09:56.960 --> 01:09:58.590 align:start position:0%
to aggregate from any of these tokens in
the

01:09:58.590 --> 01:09:58.600 align:start position:0%
the
 

01:09:58.600 --> 01:10:01.950 align:start position:0%
the
past<01:09:59.600><c> so</c><01:10:00.080><c> that's</c><01:10:00.600><c> way</c><01:10:01.199><c> and</c><01:10:01.320><c> it's</c><01:10:01.440><c> not</c><01:10:01.600><c> zeros</c>

01:10:01.950 --> 01:10:01.960 align:start position:0%
past so that's way and it's not zeros
 

01:10:01.960 --> 01:10:04.229 align:start position:0%
past so that's way and it's not zeros
anymore<01:10:02.360><c> but</c><01:10:02.960><c> but</c><01:10:03.080><c> it's</c><01:10:03.360><c> calculated</c><01:10:03.880><c> in</c><01:10:04.040><c> this</c>

01:10:04.229 --> 01:10:04.239 align:start position:0%
anymore but but it's calculated in this
 

01:10:04.239 --> 01:10:07.990 align:start position:0%
anymore but but it's calculated in this
way<01:10:04.960><c> now</c><01:10:05.120><c> there's</c><01:10:05.400><c> one</c><01:10:05.600><c> more</c><01:10:06.320><c> uh</c><01:10:06.640><c> part</c><01:10:07.040><c> to</c><01:10:07.440><c> a</c>

01:10:07.990 --> 01:10:08.000 align:start position:0%
way now there's one more uh part to a
 

01:10:08.000 --> 01:10:10.550 align:start position:0%
way now there's one more uh part to a
single<01:10:08.719><c> self</c><01:10:09.000><c> attention</c><01:10:09.480><c> head</c><01:10:10.239><c> and</c><01:10:10.360><c> that</c><01:10:10.440><c> is</c>

01:10:10.550 --> 01:10:10.560 align:start position:0%
single self attention head and that is
 

01:10:10.560 --> 01:10:12.350 align:start position:0%
single self attention head and that is
that<01:10:10.679><c> when</c><01:10:10.800><c> we</c><01:10:10.920><c> do</c><01:10:11.120><c> the</c><01:10:11.239><c> aggregation</c><01:10:12.000><c> we</c><01:10:12.120><c> don't</c>

01:10:12.350 --> 01:10:12.360 align:start position:0%
that when we do the aggregation we don't
 

01:10:12.360 --> 01:10:15.030 align:start position:0%
that when we do the aggregation we don't
actually<01:10:12.640><c> aggregate</c><01:10:13.120><c> the</c><01:10:13.320><c> tokens</c><01:10:13.880><c> exactly</c><01:10:14.880><c> we</c>

01:10:15.030 --> 01:10:15.040 align:start position:0%
actually aggregate the tokens exactly we
 

01:10:15.040 --> 01:10:17.470 align:start position:0%
actually aggregate the tokens exactly we
aggregate<01:10:15.719><c> we</c><01:10:15.840><c> produce</c><01:10:16.159><c> one</c><01:10:16.280><c> more</c><01:10:16.480><c> value</c><01:10:16.840><c> here</c>

01:10:17.470 --> 01:10:17.480 align:start position:0%
aggregate we produce one more value here
 

01:10:17.480 --> 01:10:20.149 align:start position:0%
aggregate we produce one more value here
and<01:10:17.600><c> we</c><01:10:17.760><c> call</c><01:10:18.000><c> that</c><01:10:18.640><c> the</c>

01:10:20.149 --> 01:10:20.159 align:start position:0%
and we call that the
 

01:10:20.159 --> 01:10:22.110 align:start position:0%
and we call that the
value<01:10:21.159><c> so</c><01:10:21.400><c> in</c><01:10:21.520><c> the</c><01:10:21.600><c> same</c><01:10:21.800><c> way</c><01:10:21.920><c> that</c><01:10:22.000><c> we</c>

01:10:22.110 --> 01:10:22.120 align:start position:0%
value so in the same way that we
 

01:10:22.120 --> 01:10:23.910 align:start position:0%
value so in the same way that we
produced<01:10:22.440><c> p</c><01:10:22.600><c> and</c><01:10:22.760><c> query</c><01:10:23.080><c> we're</c><01:10:23.239><c> also</c><01:10:23.400><c> going</c><01:10:23.560><c> to</c>

01:10:23.910 --> 01:10:23.920 align:start position:0%
produced p and query we're also going to
 

01:10:23.920 --> 01:10:26.070 align:start position:0%
produced p and query we're also going to
create<01:10:24.199><c> a</c><01:10:24.440><c> value</c>

01:10:26.070 --> 01:10:26.080 align:start position:0%
create a value
 

01:10:26.080 --> 01:10:26.870 align:start position:0%
create a value
and

01:10:26.870 --> 01:10:26.880 align:start position:0%
and
 

01:10:26.880 --> 01:10:30.229 align:start position:0%
and
then<01:10:27.920><c> here</c><01:10:28.920><c> we</c><01:10:29.080><c> don't</c>

01:10:30.229 --> 01:10:30.239 align:start position:0%
then here we don't
 

01:10:30.239 --> 01:10:34.229 align:start position:0%
then here we don't
aggregate<01:10:31.239><c> X</c><01:10:32.120><c> we</c><01:10:32.320><c> calculate</c><01:10:32.920><c> a</c><01:10:33.159><c> v</c><01:10:33.880><c> which</c><01:10:34.040><c> is</c>

01:10:34.229 --> 01:10:34.239 align:start position:0%
aggregate X we calculate a v which is
 

01:10:34.239 --> 01:10:37.149 align:start position:0%
aggregate X we calculate a v which is
just<01:10:34.440><c> achieved</c><01:10:34.880><c> by</c><01:10:35.480><c> uh</c><01:10:35.600><c> propagating</c><01:10:36.360><c> this</c>

01:10:37.149 --> 01:10:37.159 align:start position:0%
just achieved by uh propagating this
 

01:10:37.159 --> 01:10:40.630 align:start position:0%
just achieved by uh propagating this
linear<01:10:37.560><c> on</c><01:10:37.679><c> top</c><01:10:37.840><c> of</c><01:10:37.960><c> X</c><01:10:38.199><c> again</c><01:10:39.080><c> and</c><01:10:39.239><c> then</c><01:10:39.640><c> we</c>

01:10:40.630 --> 01:10:40.640 align:start position:0%
linear on top of X again and then we
 

01:10:40.640 --> 01:10:44.350 align:start position:0%
linear on top of X again and then we
output<01:10:41.280><c> way</c><01:10:41.719><c> multiplied</c><01:10:42.239><c> by</c><01:10:42.400><c> V</c><01:10:43.159><c> so</c><01:10:43.400><c> V</c><01:10:43.679><c> is</c><01:10:44.159><c> the</c>

01:10:44.350 --> 01:10:44.360 align:start position:0%
output way multiplied by V so V is the
 

01:10:44.360 --> 01:10:46.430 align:start position:0%
output way multiplied by V so V is the
elements<01:10:44.719><c> that</c><01:10:44.840><c> we</c><01:10:45.000><c> aggregate</c><01:10:45.600><c> or</c><01:10:45.880><c> the</c><01:10:46.320><c> the</c>

01:10:46.430 --> 01:10:46.440 align:start position:0%
elements that we aggregate or the the
 

01:10:46.440 --> 01:10:47.870 align:start position:0%
elements that we aggregate or the the
vectors<01:10:46.760><c> that</c><01:10:46.880><c> we</c><01:10:47.000><c> aggregate</c><01:10:47.400><c> instead</c><01:10:47.640><c> of</c><01:10:47.760><c> the</c>

01:10:47.870 --> 01:10:47.880 align:start position:0%
vectors that we aggregate instead of the
 

01:10:47.880 --> 01:10:48.870 align:start position:0%
vectors that we aggregate instead of the
raw

01:10:48.870 --> 01:10:48.880 align:start position:0%
raw
 

01:10:48.880 --> 01:10:51.709 align:start position:0%
raw
X<01:10:49.880><c> and</c><01:10:50.080><c> now</c><01:10:50.360><c> of</c><01:10:50.480><c> course</c><01:10:50.880><c> uh</c><01:10:51.000><c> this</c><01:10:51.120><c> will</c><01:10:51.440><c> make</c><01:10:51.560><c> it</c>

01:10:51.709 --> 01:10:51.719 align:start position:0%
X and now of course uh this will make it
 

01:10:51.719 --> 01:10:53.430 align:start position:0%
X and now of course uh this will make it
so<01:10:51.880><c> that</c><01:10:52.040><c> the</c><01:10:52.120><c> output</c><01:10:52.520><c> here</c><01:10:52.760><c> of</c><01:10:52.920><c> this</c><01:10:53.080><c> single</c>

01:10:53.430 --> 01:10:53.440 align:start position:0%
so that the output here of this single
 

01:10:53.440 --> 01:10:55.390 align:start position:0%
so that the output here of this single
head<01:10:53.800><c> will</c><01:10:53.960><c> be</c><01:10:54.080><c> 16</c><01:10:54.440><c> dimensional</c><01:10:54.920><c> because</c><01:10:55.120><c> that</c>

01:10:55.390 --> 01:10:55.400 align:start position:0%
head will be 16 dimensional because that
 

01:10:55.400 --> 01:10:57.350 align:start position:0%
head will be 16 dimensional because that
is<01:10:55.600><c> the</c><01:10:55.840><c> head</c>

01:10:57.350 --> 01:10:57.360 align:start position:0%
is the head
 

01:10:57.360 --> 01:10:59.790 align:start position:0%
is the head
size<01:10:58.360><c> so</c><01:10:58.480><c> you</c><01:10:58.560><c> can</c><01:10:58.719><c> think</c><01:10:58.880><c> of</c><01:10:59.080><c> X</c><01:10:59.400><c> as</c><01:10:59.520><c> kind</c><01:10:59.640><c> of</c>

01:10:59.790 --> 01:10:59.800 align:start position:0%
size so you can think of X as kind of
 

01:10:59.800 --> 01:11:01.709 align:start position:0%
size so you can think of X as kind of
like<01:11:00.080><c> private</c><01:11:00.440><c> information</c><01:11:00.920><c> to</c><01:11:01.120><c> this</c><01:11:01.280><c> token</c>

01:11:01.709 --> 01:11:01.719 align:start position:0%
like private information to this token
 

01:11:01.719 --> 01:11:03.870 align:start position:0%
like private information to this token
if<01:11:01.880><c> you</c><01:11:02.040><c> if</c><01:11:02.159><c> you</c><01:11:02.360><c> think</c><01:11:02.719><c> about</c><01:11:02.880><c> it</c><01:11:03.040><c> that</c><01:11:03.159><c> way</c><01:11:03.679><c> so</c>

01:11:03.870 --> 01:11:03.880 align:start position:0%
if you if you think about it that way so
 

01:11:03.880 --> 01:11:06.030 align:start position:0%
if you if you think about it that way so
X<01:11:04.199><c> is</c><01:11:04.480><c> kind</c><01:11:04.600><c> of</c><01:11:04.760><c> private</c><01:11:05.000><c> to</c><01:11:05.159><c> this</c><01:11:05.320><c> token</c><01:11:05.880><c> so</c>

01:11:06.030 --> 01:11:06.040 align:start position:0%
X is kind of private to this token so
 

01:11:06.040 --> 01:11:08.030 align:start position:0%
X is kind of private to this token so
I'm<01:11:06.120><c> a</c><01:11:06.280><c> fifth</c><01:11:06.560><c> token</c><01:11:07.080><c> at</c><01:11:07.239><c> some</c><01:11:07.760><c> and</c><01:11:07.840><c> I</c><01:11:07.920><c> have</c>

01:11:08.030 --> 01:11:08.040 align:start position:0%
I'm a fifth token at some and I have
 

01:11:08.040 --> 01:11:11.470 align:start position:0%
I'm a fifth token at some and I have
some<01:11:08.199><c> identity</c><01:11:09.199><c> and</c><01:11:09.800><c> uh</c><01:11:10.320><c> my</c><01:11:10.719><c> information</c><01:11:11.320><c> is</c>

01:11:11.470 --> 01:11:11.480 align:start position:0%
some identity and uh my information is
 

01:11:11.480 --> 01:11:14.070 align:start position:0%
some identity and uh my information is
kept<01:11:11.679><c> in</c><01:11:11.840><c> Vector</c><01:11:12.199><c> X</c><01:11:13.199><c> and</c><01:11:13.400><c> now</c><01:11:13.760><c> for</c><01:11:13.920><c> the</c>

01:11:14.070 --> 01:11:14.080 align:start position:0%
kept in Vector X and now for the
 

01:11:14.080 --> 01:11:16.189 align:start position:0%
kept in Vector X and now for the
purposes<01:11:14.400><c> of</c><01:11:14.520><c> the</c><01:11:14.679><c> single</c><01:11:15.000><c> head</c><01:11:15.640><c> here's</c><01:11:15.960><c> what</c>

01:11:16.189 --> 01:11:16.199 align:start position:0%
purposes of the single head here's what
 

01:11:16.199 --> 01:11:19.990 align:start position:0%
purposes of the single head here's what
I'm<01:11:16.400><c> interested</c><01:11:16.800><c> in</c><01:11:17.520><c> here's</c><01:11:17.920><c> what</c><01:11:18.239><c> I</c><01:11:18.679><c> have</c><01:11:19.679><c> and</c>

01:11:19.990 --> 01:11:20.000 align:start position:0%
I'm interested in here's what I have and
 

01:11:20.000 --> 01:11:21.830 align:start position:0%
I'm interested in here's what I have and
if<01:11:20.080><c> you</c><01:11:20.239><c> find</c><01:11:20.440><c> me</c><01:11:20.640><c> interesting</c><01:11:21.360><c> here's</c><01:11:21.600><c> what</c><01:11:21.760><c> I</c>

01:11:21.830 --> 01:11:21.840 align:start position:0%
if you find me interesting here's what I
 

01:11:21.840 --> 01:11:23.510 align:start position:0%
if you find me interesting here's what I
will<01:11:22.040><c> communicate</c><01:11:22.440><c> to</c><01:11:22.600><c> you</c><01:11:23.199><c> and</c><01:11:23.360><c> that's</c>

01:11:23.510 --> 01:11:23.520 align:start position:0%
will communicate to you and that's
 

01:11:23.520 --> 01:11:26.229 align:start position:0%
will communicate to you and that's
stored<01:11:23.920><c> in</c><01:11:24.120><c> v</c><01:11:25.040><c> and</c><01:11:25.320><c> so</c><01:11:25.440><c> V</c><01:11:25.640><c> is</c><01:11:25.760><c> the</c><01:11:25.880><c> thing</c><01:11:26.080><c> that</c>

01:11:26.229 --> 01:11:26.239 align:start position:0%
stored in v and so V is the thing that
 

01:11:26.239 --> 01:11:28.390 align:start position:0%
stored in v and so V is the thing that
gets<01:11:26.440><c> aggregated</c><01:11:27.040><c> for</c><01:11:27.199><c> the</c><01:11:27.320><c> purposes</c><01:11:27.800><c> of</c><01:11:28.040><c> this</c>

01:11:28.390 --> 01:11:28.400 align:start position:0%
gets aggregated for the purposes of this
 

01:11:28.400 --> 01:11:30.750 align:start position:0%
gets aggregated for the purposes of this
single<01:11:29.000><c> head</c><01:11:29.560><c> between</c><01:11:29.840><c> the</c><01:11:29.960><c> different</c>

01:11:30.750 --> 01:11:30.760 align:start position:0%
single head between the different
 

01:11:30.760 --> 01:11:34.350 align:start position:0%
single head between the different
notes<01:11:31.760><c> and</c><01:11:31.960><c> that's</c><01:11:32.480><c> uh</c><01:11:33.480><c> basically</c><01:11:34.000><c> the</c><01:11:34.120><c> self</c>

01:11:34.350 --> 01:11:34.360 align:start position:0%
notes and that's uh basically the self
 

01:11:34.360 --> 01:11:36.830 align:start position:0%
notes and that's uh basically the self
attention<01:11:34.719><c> mechanism</c><01:11:35.400><c> this</c><01:11:35.560><c> is</c><01:11:36.480><c> this</c><01:11:36.600><c> is</c><01:11:36.760><c> what</c>

01:11:36.830 --> 01:11:36.840 align:start position:0%
attention mechanism this is this is what
 

01:11:36.840 --> 01:11:39.110 align:start position:0%
attention mechanism this is this is what
it<01:11:37.120><c> does</c><01:11:38.120><c> there</c><01:11:38.199><c> are</c><01:11:38.320><c> a</c><01:11:38.400><c> few</c><01:11:38.560><c> notes</c><01:11:38.920><c> that</c><01:11:39.040><c> I</c>

01:11:39.110 --> 01:11:39.120 align:start position:0%
it does there are a few notes that I
 

01:11:39.120 --> 01:11:41.750 align:start position:0%
it does there are a few notes that I
would<01:11:39.360><c> make</c><01:11:39.719><c> like</c><01:11:39.880><c> to</c><01:11:40.040><c> make</c><01:11:40.280><c> about</c><01:11:40.760><c> attention</c>

01:11:41.750 --> 01:11:41.760 align:start position:0%
would make like to make about attention
 

01:11:41.760 --> 01:11:44.270 align:start position:0%
would make like to make about attention
number<01:11:42.000><c> one</c><01:11:42.280><c> attention</c><01:11:42.840><c> is</c><01:11:43.600><c> a</c><01:11:43.719><c> communication</c>

01:11:44.270 --> 01:11:44.280 align:start position:0%
number one attention is a communication
 

01:11:44.280 --> 01:11:46.229 align:start position:0%
number one attention is a communication
mechanism<01:11:45.199><c> you</c><01:11:45.320><c> can</c><01:11:45.480><c> really</c><01:11:45.679><c> think</c><01:11:45.840><c> about</c><01:11:46.040><c> it</c>

01:11:46.229 --> 01:11:46.239 align:start position:0%
mechanism you can really think about it
 

01:11:46.239 --> 01:11:48.149 align:start position:0%
mechanism you can really think about it
as<01:11:46.400><c> a</c><01:11:46.520><c> communication</c><01:11:47.080><c> mechanism</c><01:11:47.920><c> where</c><01:11:48.040><c> you</c>

01:11:48.149 --> 01:11:48.159 align:start position:0%
as a communication mechanism where you
 

01:11:48.159 --> 01:11:50.110 align:start position:0%
as a communication mechanism where you
have<01:11:48.320><c> a</c><01:11:48.440><c> number</c><01:11:48.679><c> of</c><01:11:48.840><c> nodes</c><01:11:49.360><c> in</c><01:11:49.480><c> a</c><01:11:49.639><c> directed</c>

01:11:50.110 --> 01:11:50.120 align:start position:0%
have a number of nodes in a directed
 

01:11:50.120 --> 01:11:52.189 align:start position:0%
have a number of nodes in a directed
graph<01:11:51.040><c> where</c><01:11:51.280><c> basically</c><01:11:51.600><c> you</c><01:11:51.719><c> have</c><01:11:51.880><c> edges</c>

01:11:52.189 --> 01:11:52.199 align:start position:0%
graph where basically you have edges
 

01:11:52.199 --> 01:11:53.870 align:start position:0%
graph where basically you have edges
pointed<01:11:52.520><c> between</c><01:11:52.760><c> noes</c><01:11:53.120><c> like</c>

01:11:53.870 --> 01:11:53.880 align:start position:0%
pointed between noes like
 

01:11:53.880 --> 01:11:56.790 align:start position:0%
pointed between noes like
this<01:11:54.880><c> and</c><01:11:55.280><c> what</c><01:11:55.400><c> happens</c><01:11:55.800><c> is</c><01:11:56.080><c> every</c><01:11:56.280><c> node</c><01:11:56.639><c> has</c>

01:11:56.790 --> 01:11:56.800 align:start position:0%
this and what happens is every node has
 

01:11:56.800 --> 01:11:58.830 align:start position:0%
this and what happens is every node has
some<01:11:57.000><c> Vector</c><01:11:57.280><c> of</c><01:11:57.480><c> information</c><01:11:58.440><c> and</c><01:11:58.520><c> it</c><01:11:58.639><c> gets</c>

01:11:58.830 --> 01:11:58.840 align:start position:0%
some Vector of information and it gets
 

01:11:58.840 --> 01:12:01.310 align:start position:0%
some Vector of information and it gets
to<01:11:59.040><c> aggregate</c><01:11:59.560><c> information</c><01:12:00.400><c> via</c><01:12:00.719><c> a</c><01:12:00.920><c> weighted</c>

01:12:01.310 --> 01:12:01.320 align:start position:0%
to aggregate information via a weighted
 

01:12:01.320 --> 01:12:03.790 align:start position:0%
to aggregate information via a weighted
sum<01:12:01.960><c> from</c><01:12:02.120><c> all</c><01:12:02.239><c> of</c><01:12:02.360><c> the</c><01:12:02.440><c> nodes</c><01:12:02.719><c> that</c><01:12:02.880><c> point</c><01:12:03.199><c> to</c>

01:12:03.790 --> 01:12:03.800 align:start position:0%
sum from all of the nodes that point to
 

01:12:03.800 --> 01:12:06.229 align:start position:0%
sum from all of the nodes that point to
it<01:12:04.800><c> and</c><01:12:04.960><c> this</c><01:12:05.040><c> is</c><01:12:05.159><c> done</c><01:12:05.320><c> in</c><01:12:05.440><c> a</c><01:12:05.600><c> data</c><01:12:05.840><c> dependent</c>

01:12:06.229 --> 01:12:06.239 align:start position:0%
it and this is done in a data dependent
 

01:12:06.239 --> 01:12:08.310 align:start position:0%
it and this is done in a data dependent
manner<01:12:06.639><c> so</c><01:12:06.880><c> depending</c><01:12:07.199><c> on</c><01:12:07.400><c> whatever</c><01:12:07.960><c> data</c><01:12:08.159><c> is</c>

01:12:08.310 --> 01:12:08.320 align:start position:0%
manner so depending on whatever data is
 

01:12:08.320 --> 01:12:09.470 align:start position:0%
manner so depending on whatever data is
actually<01:12:08.480><c> stored</c><01:12:08.800><c> that</c><01:12:08.920><c> you</c><01:12:09.000><c> should</c><01:12:09.080><c> not</c><01:12:09.320><c> at</c>

01:12:09.470 --> 01:12:09.480 align:start position:0%
actually stored that you should not at
 

01:12:09.480 --> 01:12:13.350 align:start position:0%
actually stored that you should not at
any<01:12:09.600><c> point</c><01:12:09.800><c> in</c><01:12:10.360><c> time</c><01:12:11.639><c> now</c><01:12:12.639><c> our</c><01:12:12.880><c> graph</c><01:12:13.120><c> doesn't</c>

01:12:13.350 --> 01:12:13.360 align:start position:0%
any point in time now our graph doesn't
 

01:12:13.360 --> 01:12:14.990 align:start position:0%
any point in time now our graph doesn't
look<01:12:13.520><c> like</c><01:12:13.719><c> this</c><01:12:13.920><c> our</c><01:12:14.159><c> graph</c><01:12:14.440><c> has</c><01:12:14.560><c> a</c><01:12:14.719><c> different</c>

01:12:14.990 --> 01:12:15.000 align:start position:0%
look like this our graph has a different
 

01:12:15.000 --> 01:12:17.189 align:start position:0%
look like this our graph has a different
structure<01:12:15.760><c> we</c><01:12:15.880><c> have</c><01:12:16.080><c> eight</c><01:12:16.320><c> nodes</c><01:12:17.000><c> because</c>

01:12:17.189 --> 01:12:17.199 align:start position:0%
structure we have eight nodes because
 

01:12:17.199 --> 01:12:18.750 align:start position:0%
structure we have eight nodes because
the<01:12:17.320><c> block</c><01:12:17.560><c> size</c><01:12:17.760><c> is</c><01:12:17.960><c> eight</c><01:12:18.360><c> and</c><01:12:18.520><c> there's</c>

01:12:18.750 --> 01:12:18.760 align:start position:0%
the block size is eight and there's
 

01:12:18.760 --> 01:12:20.310 align:start position:0%
the block size is eight and there's
always<01:12:19.080><c> eight</c><01:12:19.440><c> to</c>

01:12:20.310 --> 01:12:20.320 align:start position:0%
always eight to
 

01:12:20.320 --> 01:12:23.110 align:start position:0%
always eight to
tokens<01:12:21.320><c> and</c><01:12:21.920><c> uh</c><01:12:22.120><c> the</c><01:12:22.280><c> first</c><01:12:22.520><c> node</c><01:12:22.760><c> is</c><01:12:22.880><c> only</c>

01:12:23.110 --> 01:12:23.120 align:start position:0%
tokens and uh the first node is only
 

01:12:23.120 --> 01:12:25.510 align:start position:0%
tokens and uh the first node is only
pointed<01:12:23.400><c> to</c><01:12:23.679><c> by</c><01:12:23.800><c> itself</c><01:12:24.679><c> the</c><01:12:24.800><c> second</c><01:12:25.199><c> node</c><01:12:25.400><c> is</c>

01:12:25.510 --> 01:12:25.520 align:start position:0%
pointed to by itself the second node is
 

01:12:25.520 --> 01:12:27.830 align:start position:0%
pointed to by itself the second node is
pointed<01:12:25.800><c> to</c><01:12:25.960><c> by</c><01:12:26.120><c> the</c><01:12:26.239><c> first</c><01:12:26.480><c> node</c><01:12:26.800><c> and</c><01:12:27.080><c> itself</c>

01:12:27.830 --> 01:12:27.840 align:start position:0%
pointed to by the first node and itself
 

01:12:27.840 --> 01:12:29.790 align:start position:0%
pointed to by the first node and itself
all<01:12:28.000><c> the</c><01:12:28.120><c> way</c><01:12:28.280><c> up</c><01:12:28.400><c> to</c><01:12:28.719><c> the</c><01:12:28.880><c> eighth</c><01:12:29.199><c> node</c><01:12:29.679><c> which</c>

01:12:29.790 --> 01:12:29.800 align:start position:0%
all the way up to the eighth node which
 

01:12:29.800 --> 01:12:32.070 align:start position:0%
all the way up to the eighth node which
is<01:12:29.960><c> pointed</c><01:12:30.239><c> to</c><01:12:30.520><c> by</c><01:12:30.760><c> all</c><01:12:30.920><c> the</c><01:12:31.080><c> previous</c><01:12:31.440><c> nodes</c>

01:12:32.070 --> 01:12:32.080 align:start position:0%
is pointed to by all the previous nodes
 

01:12:32.080 --> 01:12:34.910 align:start position:0%
is pointed to by all the previous nodes
and<01:12:32.760><c> itself</c><01:12:33.760><c> and</c><01:12:33.880><c> so</c><01:12:34.199><c> that's</c><01:12:34.360><c> the</c><01:12:34.520><c> structure</c>

01:12:34.910 --> 01:12:34.920 align:start position:0%
and itself and so that's the structure
 

01:12:34.920 --> 01:12:37.070 align:start position:0%
and itself and so that's the structure
that<01:12:35.000><c> our</c><01:12:35.199><c> directed</c><01:12:35.600><c> graph</c><01:12:35.960><c> has</c><01:12:36.360><c> or</c><01:12:36.560><c> happens</c>

01:12:37.070 --> 01:12:37.080 align:start position:0%
that our directed graph has or happens
 

01:12:37.080 --> 01:12:38.910 align:start position:0%
that our directed graph has or happens
happens<01:12:37.360><c> to</c><01:12:37.520><c> have</c><01:12:37.719><c> in</c><01:12:37.920><c> Auto</c><01:12:38.239><c> regressive</c><01:12:38.760><c> sort</c>

01:12:38.910 --> 01:12:38.920 align:start position:0%
happens to have in Auto regressive sort
 

01:12:38.920 --> 01:12:41.390 align:start position:0%
happens to have in Auto regressive sort
of<01:12:39.040><c> scenario</c><01:12:39.520><c> like</c><01:12:39.719><c> language</c><01:12:40.199><c> modeling</c><01:12:41.199><c> but</c>

01:12:41.390 --> 01:12:41.400 align:start position:0%
of scenario like language modeling but
 

01:12:41.400 --> 01:12:42.830 align:start position:0%
of scenario like language modeling but
in<01:12:41.520><c> principle</c><01:12:41.920><c> attention</c><01:12:42.239><c> can</c><01:12:42.320><c> be</c><01:12:42.440><c> applied</c><01:12:42.719><c> to</c>

01:12:42.830 --> 01:12:42.840 align:start position:0%
in principle attention can be applied to
 

01:12:42.840 --> 01:12:44.430 align:start position:0%
in principle attention can be applied to
any<01:12:43.000><c> arbitrary</c><01:12:43.520><c> directed</c><01:12:43.920><c> graph</c><01:12:44.239><c> and</c><01:12:44.320><c> it's</c>

01:12:44.430 --> 01:12:44.440 align:start position:0%
any arbitrary directed graph and it's
 

01:12:44.440 --> 01:12:46.030 align:start position:0%
any arbitrary directed graph and it's
just<01:12:44.560><c> a</c><01:12:44.679><c> communication</c><01:12:45.199><c> mechanism</c><01:12:45.760><c> between</c>

01:12:46.030 --> 01:12:46.040 align:start position:0%
just a communication mechanism between
 

01:12:46.040 --> 01:12:48.830 align:start position:0%
just a communication mechanism between
the<01:12:46.199><c> nodes</c><01:12:47.199><c> the</c><01:12:47.320><c> second</c><01:12:47.639><c> note</c><01:12:48.040><c> is</c><01:12:48.239><c> that</c><01:12:48.480><c> notice</c>

01:12:48.830 --> 01:12:48.840 align:start position:0%
the nodes the second note is that notice
 

01:12:48.840 --> 01:12:51.270 align:start position:0%
the nodes the second note is that notice
that<01:12:48.960><c> there</c><01:12:49.040><c> is</c><01:12:49.239><c> no</c><01:12:49.440><c> notion</c><01:12:49.679><c> of</c><01:12:49.880><c> space</c><01:12:50.719><c> so</c>

01:12:51.270 --> 01:12:51.280 align:start position:0%
that there is no notion of space so
 

01:12:51.280 --> 01:12:53.709 align:start position:0%
that there is no notion of space so
attention<01:12:51.719><c> simply</c><01:12:52.080><c> acts</c><01:12:52.440><c> over</c><01:12:52.880><c> like</c><01:12:53.080><c> a</c><01:12:53.280><c> set</c><01:12:53.520><c> of</c>

01:12:53.709 --> 01:12:53.719 align:start position:0%
attention simply acts over like a set of
 

01:12:53.719 --> 01:12:56.510 align:start position:0%
attention simply acts over like a set of
vectors<01:12:54.239><c> in</c><01:12:54.400><c> this</c><01:12:54.639><c> graph</c><01:12:55.400><c> and</c><01:12:55.560><c> so</c><01:12:55.960><c> by</c><01:12:56.159><c> default</c>

01:12:56.510 --> 01:12:56.520 align:start position:0%
vectors in this graph and so by default
 

01:12:56.520 --> 01:12:58.030 align:start position:0%
vectors in this graph and so by default
these<01:12:56.639><c> nodes</c><01:12:56.960><c> have</c><01:12:57.120><c> no</c><01:12:57.280><c> idea</c><01:12:57.639><c> where</c><01:12:57.760><c> they</c><01:12:57.880><c> are</c>

01:12:58.030 --> 01:12:58.040 align:start position:0%
these nodes have no idea where they are
 

01:12:58.040 --> 01:12:59.669 align:start position:0%
these nodes have no idea where they are
positioned<01:12:58.400><c> in</c><01:12:58.520><c> the</c><01:12:58.679><c> space</c><01:12:59.280><c> and</c><01:12:59.400><c> that's</c><01:12:59.560><c> why</c>

01:12:59.669 --> 01:12:59.679 align:start position:0%
positioned in the space and that's why
 

01:12:59.679 --> 01:13:02.189 align:start position:0%
positioned in the space and that's why
we<01:12:59.760><c> need</c><01:12:59.920><c> to</c><01:13:00.199><c> encode</c><01:13:00.639><c> them</c><01:13:00.840><c> positionally</c><01:13:01.760><c> and</c>

01:13:02.189 --> 01:13:02.199 align:start position:0%
we need to encode them positionally and
 

01:13:02.199 --> 01:13:03.750 align:start position:0%
we need to encode them positionally and
sort<01:13:02.360><c> of</c><01:13:02.600><c> give</c><01:13:02.719><c> them</c><01:13:02.880><c> some</c><01:13:03.239><c> information</c><01:13:03.639><c> that</c>

01:13:03.750 --> 01:13:03.760 align:start position:0%
sort of give them some information that
 

01:13:03.760 --> 01:13:05.790 align:start position:0%
sort of give them some information that
is<01:13:03.920><c> anchored</c><01:13:04.320><c> to</c><01:13:04.440><c> a</c><01:13:04.600><c> specific</c><01:13:05.000><c> position</c><01:13:05.639><c> so</c>

01:13:05.790 --> 01:13:05.800 align:start position:0%
is anchored to a specific position so
 

01:13:05.800 --> 01:13:08.669 align:start position:0%
is anchored to a specific position so
that<01:13:06.040><c> they</c><01:13:06.880><c> sort</c><01:13:07.080><c> of</c><01:13:07.239><c> know</c><01:13:07.480><c> where</c><01:13:07.719><c> they</c><01:13:07.840><c> are</c>

01:13:08.669 --> 01:13:08.679 align:start position:0%
that they sort of know where they are
 

01:13:08.679 --> 01:13:09.950 align:start position:0%
that they sort of know where they are
and<01:13:08.840><c> this</c><01:13:08.920><c> is</c><01:13:09.159><c> different</c><01:13:09.480><c> than</c><01:13:09.600><c> for</c><01:13:09.719><c> example</c>

01:13:09.950 --> 01:13:09.960 align:start position:0%
and this is different than for example
 

01:13:09.960 --> 01:13:11.709 align:start position:0%
and this is different than for example
from<01:13:10.159><c> convolution</c><01:13:10.840><c> because</c><01:13:11.040><c> if</c><01:13:11.199><c> you're</c><01:13:11.320><c> run</c>

01:13:11.709 --> 01:13:11.719 align:start position:0%
from convolution because if you're run
 

01:13:11.719 --> 01:13:13.189 align:start position:0%
from convolution because if you're run
for<01:13:11.880><c> example</c><01:13:12.120><c> a</c><01:13:12.239><c> convolution</c><01:13:12.719><c> operation</c><01:13:13.000><c> over</c>

01:13:13.189 --> 01:13:13.199 align:start position:0%
for example a convolution operation over
 

01:13:13.199 --> 01:13:15.830 align:start position:0%
for example a convolution operation over
some<01:13:13.440><c> input</c><01:13:13.960><c> there's</c><01:13:14.159><c> a</c><01:13:14.400><c> very</c><01:13:14.840><c> specific</c><01:13:15.679><c> sort</c>

01:13:15.830 --> 01:13:15.840 align:start position:0%
some input there's a very specific sort
 

01:13:15.840 --> 01:13:18.430 align:start position:0%
some input there's a very specific sort
of<01:13:16.080><c> layout</c><01:13:16.639><c> of</c><01:13:16.800><c> the</c><01:13:16.960><c> information</c><01:13:17.520><c> in</c><01:13:17.880><c> space</c>

01:13:18.430 --> 01:13:18.440 align:start position:0%
of layout of the information in space
 

01:13:18.440 --> 01:13:20.310 align:start position:0%
of layout of the information in space
and<01:13:18.560><c> the</c><01:13:18.679><c> convolutional</c><01:13:19.360><c> filters</c><01:13:19.840><c> sort</c><01:13:20.000><c> of</c>

01:13:20.310 --> 01:13:20.320 align:start position:0%
and the convolutional filters sort of
 

01:13:20.320 --> 01:13:23.709 align:start position:0%
and the convolutional filters sort of
act<01:13:20.520><c> in</c><01:13:20.760><c> space</c><01:13:21.560><c> and</c><01:13:21.719><c> so</c><01:13:22.280><c> it's</c><01:13:22.719><c> it's</c><01:13:23.000><c> not</c><01:13:23.440><c> like</c>

01:13:23.709 --> 01:13:23.719 align:start position:0%
act in space and so it's it's not like
 

01:13:23.719 --> 01:13:25.990 align:start position:0%
act in space and so it's it's not like
an<01:13:23.920><c> attention</c><01:13:24.760><c> in</c><01:13:24.880><c> ATT</c><01:13:25.120><c> ention</c><01:13:25.360><c> is</c><01:13:25.520><c> just</c><01:13:25.679><c> a</c><01:13:25.840><c> set</c>

01:13:25.990 --> 01:13:26.000 align:start position:0%
an attention in ATT ention is just a set
 

01:13:26.000 --> 01:13:27.870 align:start position:0%
an attention in ATT ention is just a set
of<01:13:26.159><c> vectors</c><01:13:26.600><c> out</c><01:13:26.760><c> there</c><01:13:26.880><c> in</c><01:13:27.040><c> space</c><01:13:27.719><c> they</c>

01:13:27.870 --> 01:13:27.880 align:start position:0%
of vectors out there in space they
 

01:13:27.880 --> 01:13:29.790 align:start position:0%
of vectors out there in space they
communicate<01:13:28.840><c> and</c><01:13:29.000><c> if</c><01:13:29.080><c> you</c><01:13:29.239><c> want</c><01:13:29.400><c> them</c><01:13:29.520><c> to</c><01:13:29.679><c> have</c>

01:13:29.790 --> 01:13:29.800 align:start position:0%
communicate and if you want them to have
 

01:13:29.800 --> 01:13:31.310 align:start position:0%
communicate and if you want them to have
a<01:13:29.920><c> notion</c><01:13:30.199><c> of</c><01:13:30.400><c> space</c><01:13:30.800><c> you</c><01:13:30.920><c> need</c><01:13:31.080><c> to</c>

01:13:31.310 --> 01:13:31.320 align:start position:0%
a notion of space you need to
 

01:13:31.320 --> 01:13:33.310 align:start position:0%
a notion of space you need to
specifically<01:13:31.920><c> add</c><01:13:32.120><c> it</c><01:13:32.719><c> which</c><01:13:32.840><c> is</c><01:13:32.960><c> what</c><01:13:33.120><c> we've</c>

01:13:33.310 --> 01:13:33.320 align:start position:0%
specifically add it which is what we've
 

01:13:33.320 --> 01:13:36.110 align:start position:0%
specifically add it which is what we've
done<01:13:33.600><c> when</c><01:13:33.719><c> we</c><01:13:33.920><c> calculated</c><01:13:34.480><c> the</c><01:13:34.840><c> um</c><01:13:35.440><c> relative</c>

01:13:36.110 --> 01:13:36.120 align:start position:0%
done when we calculated the um relative
 

01:13:36.120 --> 01:13:38.430 align:start position:0%
done when we calculated the um relative
the<01:13:36.480><c> positional</c><01:13:36.880><c> encode</c><01:13:37.440><c> encodings</c><01:13:38.239><c> and</c>

01:13:38.430 --> 01:13:38.440 align:start position:0%
the positional encode encodings and
 

01:13:38.440 --> 01:13:40.270 align:start position:0%
the positional encode encodings and
added<01:13:38.719><c> that</c><01:13:38.880><c> information</c><01:13:39.360><c> to</c><01:13:39.520><c> the</c><01:13:39.679><c> vectors</c>

01:13:40.270 --> 01:13:40.280 align:start position:0%
added that information to the vectors
 

01:13:40.280 --> 01:13:41.830 align:start position:0%
added that information to the vectors
the<01:13:40.440><c> next</c><01:13:40.600><c> thing</c><01:13:40.719><c> that</c><01:13:40.840><c> I</c><01:13:40.920><c> hope</c><01:13:41.120><c> is</c><01:13:41.280><c> very</c><01:13:41.440><c> clear</c>

01:13:41.830 --> 01:13:41.840 align:start position:0%
the next thing that I hope is very clear
 

01:13:41.840 --> 01:13:43.750 align:start position:0%
the next thing that I hope is very clear
is<01:13:42.040><c> that</c><01:13:42.480><c> the</c><01:13:42.639><c> elements</c><01:13:43.080><c> across</c><01:13:43.400><c> the</c><01:13:43.520><c> batch</c>

01:13:43.750 --> 01:13:43.760 align:start position:0%
is that the elements across the batch
 

01:13:43.760 --> 01:13:45.870 align:start position:0%
is that the elements across the batch
Dimension<01:13:44.560><c> which</c><01:13:44.679><c> are</c><01:13:44.880><c> independent</c><01:13:45.360><c> examples</c>

01:13:45.870 --> 01:13:45.880 align:start position:0%
Dimension which are independent examples
 

01:13:45.880 --> 01:13:47.310 align:start position:0%
Dimension which are independent examples
never<01:13:46.120><c> talk</c><01:13:46.320><c> to</c><01:13:46.440><c> each</c><01:13:46.560><c> other</c><01:13:46.840><c> they're</c><01:13:47.080><c> always</c>

01:13:47.310 --> 01:13:47.320 align:start position:0%
never talk to each other they're always
 

01:13:47.320 --> 01:13:49.149 align:start position:0%
never talk to each other they're always
processed<01:13:47.719><c> independently</c><01:13:48.560><c> and</c><01:13:48.719><c> this</c><01:13:48.800><c> is</c><01:13:49.000><c> a</c>

01:13:49.149 --> 01:13:49.159 align:start position:0%
processed independently and this is a
 

01:13:49.159 --> 01:13:51.030 align:start position:0%
processed independently and this is a
batched<01:13:49.480><c> matrix</c><01:13:49.840><c> multiply</c><01:13:50.520><c> that</c><01:13:50.679><c> applies</c>

01:13:51.030 --> 01:13:51.040 align:start position:0%
batched matrix multiply that applies
 

01:13:51.040 --> 01:13:53.070 align:start position:0%
batched matrix multiply that applies
basically<01:13:51.360><c> a</c><01:13:51.480><c> matrix</c><01:13:51.960><c> multiplication</c><01:13:52.960><c> uh</c>

01:13:53.070 --> 01:13:53.080 align:start position:0%
basically a matrix multiplication uh
 

01:13:53.080 --> 01:13:54.430 align:start position:0%
basically a matrix multiplication uh
kind<01:13:53.199><c> of</c><01:13:53.320><c> in</c><01:13:53.520><c> parallel</c><01:13:53.840><c> across</c><01:13:54.080><c> the</c><01:13:54.159><c> batch</c>

01:13:54.430 --> 01:13:54.440 align:start position:0%
kind of in parallel across the batch
 

01:13:54.440 --> 01:13:56.149 align:start position:0%
kind of in parallel across the batch
dimension<01:13:55.239><c> so</c><01:13:55.440><c> maybe</c><01:13:55.639><c> it</c><01:13:55.719><c> would</c><01:13:55.840><c> be</c><01:13:55.960><c> more</c>

01:13:56.149 --> 01:13:56.159 align:start position:0%
dimension so maybe it would be more
 

01:13:56.159 --> 01:13:58.270 align:start position:0%
dimension so maybe it would be more
accurate<01:13:56.480><c> to</c><01:13:56.639><c> say</c><01:13:56.920><c> that</c><01:13:57.360><c> in</c><01:13:57.560><c> this</c><01:13:57.760><c> analogy</c><01:13:58.159><c> of</c>

01:13:58.270 --> 01:13:58.280 align:start position:0%
accurate to say that in this analogy of
 

01:13:58.280 --> 01:14:00.830 align:start position:0%
accurate to say that in this analogy of
a<01:13:58.440><c> directed</c><01:13:58.880><c> graph</c><01:13:59.679><c> we</c><01:13:59.880><c> really</c><01:14:00.199><c> have</c><01:14:00.639><c> because</c>

01:14:00.830 --> 01:14:00.840 align:start position:0%
a directed graph we really have because
 

01:14:00.840 --> 01:14:03.070 align:start position:0%
a directed graph we really have because
the<01:14:00.960><c> back</c><01:14:01.199><c> size</c><01:14:01.400><c> is</c><01:14:01.520><c> four</c><01:14:02.080><c> we</c><01:14:02.280><c> really</c><01:14:02.560><c> have</c>

01:14:03.070 --> 01:14:03.080 align:start position:0%
the back size is four we really have
 

01:14:03.080 --> 01:14:05.790 align:start position:0%
the back size is four we really have
four<01:14:03.360><c> separate</c><01:14:03.800><c> pools</c><01:14:04.560><c> of</c><01:14:04.800><c> eight</c><01:14:05.040><c> nodes</c><01:14:05.639><c> and</c>

01:14:05.790 --> 01:14:05.800 align:start position:0%
four separate pools of eight nodes and
 

01:14:05.800 --> 01:14:06.990 align:start position:0%
four separate pools of eight nodes and
those<01:14:05.920><c> eight</c><01:14:06.080><c> nodes</c><01:14:06.360><c> only</c><01:14:06.560><c> talk</c><01:14:06.719><c> to</c><01:14:06.880><c> each</c>

01:14:06.990 --> 01:14:07.000 align:start position:0%
those eight nodes only talk to each
 

01:14:07.000 --> 01:14:08.910 align:start position:0%
those eight nodes only talk to each
other<01:14:07.360><c> but</c><01:14:07.480><c> in</c><01:14:07.600><c> total</c><01:14:07.840><c> there's</c><01:14:08.080><c> like</c><01:14:08.239><c> 32</c><01:14:08.639><c> nodes</c>

01:14:08.910 --> 01:14:08.920 align:start position:0%
other but in total there's like 32 nodes
 

01:14:08.920 --> 01:14:10.990 align:start position:0%
other but in total there's like 32 nodes
that<01:14:09.000><c> are</c><01:14:09.120><c> being</c><01:14:09.320><c> processed</c><01:14:10.199><c> uh</c><01:14:10.360><c> but</c><01:14:10.520><c> there's</c>

01:14:10.990 --> 01:14:11.000 align:start position:0%
that are being processed uh but there's
 

01:14:11.000 --> 01:14:13.590 align:start position:0%
that are being processed uh but there's
um<01:14:11.560><c> sort</c><01:14:11.719><c> of</c><01:14:11.920><c> four</c><01:14:12.239><c> separate</c><01:14:12.560><c> pools</c><01:14:12.880><c> of</c><01:14:13.120><c> eight</c>

01:14:13.590 --> 01:14:13.600 align:start position:0%
um sort of four separate pools of eight
 

01:14:13.600 --> 01:14:15.790 align:start position:0%
um sort of four separate pools of eight
you<01:14:13.719><c> can</c><01:14:13.840><c> look</c><01:14:13.960><c> at</c><01:14:14.080><c> it</c><01:14:14.239><c> that</c><01:14:14.440><c> way</c><01:14:15.440><c> the</c><01:14:15.600><c> next</c>

01:14:15.790 --> 01:14:15.800 align:start position:0%
you can look at it that way the next
 

01:14:15.800 --> 01:14:17.990 align:start position:0%
you can look at it that way the next
note<01:14:16.159><c> is</c><01:14:16.400><c> that</c><01:14:16.960><c> here</c><01:14:17.239><c> in</c><01:14:17.440><c> the</c><01:14:17.679><c> case</c><01:14:17.840><c> of</c>

01:14:17.990 --> 01:14:18.000 align:start position:0%
note is that here in the case of
 

01:14:18.000 --> 01:14:20.470 align:start position:0%
note is that here in the case of
language<01:14:18.639><c> modeling</c><01:14:19.639><c> uh</c><01:14:19.880><c> we</c><01:14:20.040><c> have</c><01:14:20.239><c> this</c>

01:14:20.470 --> 01:14:20.480 align:start position:0%
language modeling uh we have this
 

01:14:20.480 --> 01:14:22.709 align:start position:0%
language modeling uh we have this
specific<01:14:21.080><c> uh</c><01:14:21.239><c> structure</c><01:14:21.639><c> of</c><01:14:21.880><c> directed</c><01:14:22.320><c> graph</c>

01:14:22.709 --> 01:14:22.719 align:start position:0%
specific uh structure of directed graph
 

01:14:22.719 --> 01:14:24.590 align:start position:0%
specific uh structure of directed graph
where<01:14:22.960><c> the</c><01:14:23.280><c> future</c><01:14:23.800><c> tokens</c><01:14:24.199><c> will</c><01:14:24.400><c> not</c>

01:14:24.590 --> 01:14:24.600 align:start position:0%
where the future tokens will not
 

01:14:24.600 --> 01:14:27.550 align:start position:0%
where the future tokens will not
communicate<01:14:25.120><c> to</c><01:14:25.280><c> the</c><01:14:25.400><c> Past</c><01:14:25.840><c> tokens</c><01:14:26.840><c> but</c><01:14:27.159><c> this</c>

01:14:27.550 --> 01:14:27.560 align:start position:0%
communicate to the Past tokens but this
 

01:14:27.560 --> 01:14:28.590 align:start position:0%
communicate to the Past tokens but this
doesn't<01:14:27.840><c> necessarily</c><01:14:28.199><c> have</c><01:14:28.280><c> to</c><01:14:28.400><c> be</c><01:14:28.480><c> the</c>

01:14:28.590 --> 01:14:28.600 align:start position:0%
doesn't necessarily have to be the
 

01:14:28.600 --> 01:14:30.669 align:start position:0%
doesn't necessarily have to be the
constraint<01:14:29.000><c> in</c><01:14:29.120><c> the</c><01:14:29.239><c> general</c><01:14:29.600><c> case</c><01:14:30.400><c> and</c><01:14:30.520><c> in</c>

01:14:30.669 --> 01:14:30.679 align:start position:0%
constraint in the general case and in
 

01:14:30.679 --> 01:14:32.790 align:start position:0%
constraint in the general case and in
fact<01:14:31.000><c> in</c><01:14:31.120><c> many</c><01:14:31.360><c> cases</c><01:14:31.719><c> you</c><01:14:31.920><c> may</c><01:14:32.120><c> want</c><01:14:32.280><c> to</c><01:14:32.560><c> have</c>

01:14:32.790 --> 01:14:32.800 align:start position:0%
fact in many cases you may want to have
 

01:14:32.800 --> 01:14:35.550 align:start position:0%
fact in many cases you may want to have
all<01:14:32.920><c> of</c><01:14:33.159><c> the</c><01:14:33.639><c> uh</c><01:14:33.719><c> noes</c><01:14:34.280><c> talk</c><01:14:34.520><c> to</c><01:14:34.719><c> each</c><01:14:34.840><c> other</c><01:14:35.440><c> uh</c>

01:14:35.550 --> 01:14:35.560 align:start position:0%
all of the uh noes talk to each other uh
 

01:14:35.560 --> 01:14:37.510 align:start position:0%
all of the uh noes talk to each other uh
fully<01:14:36.480><c> so</c><01:14:36.639><c> as</c><01:14:36.719><c> an</c><01:14:36.880><c> example</c><01:14:37.120><c> if</c><01:14:37.199><c> you're</c><01:14:37.320><c> doing</c>

01:14:37.510 --> 01:14:37.520 align:start position:0%
fully so as an example if you're doing
 

01:14:37.520 --> 01:14:38.950 align:start position:0%
fully so as an example if you're doing
sentiment<01:14:37.960><c> analysis</c><01:14:38.360><c> or</c><01:14:38.520><c> something</c><01:14:38.800><c> like</c>

01:14:38.950 --> 01:14:38.960 align:start position:0%
sentiment analysis or something like
 

01:14:38.960 --> 01:14:40.950 align:start position:0%
sentiment analysis or something like
that<01:14:39.120><c> with</c><01:14:39.239><c> a</c><01:14:39.360><c> Transformer</c><01:14:40.239><c> you</c><01:14:40.440><c> might</c><01:14:40.639><c> have</c><01:14:40.840><c> a</c>

01:14:40.950 --> 01:14:40.960 align:start position:0%
that with a Transformer you might have a
 

01:14:40.960 --> 01:14:42.870 align:start position:0%
that with a Transformer you might have a
number<01:14:41.159><c> of</c><01:14:41.280><c> tokens</c><01:14:42.040><c> and</c><01:14:42.120><c> you</c><01:14:42.239><c> may</c><01:14:42.440><c> want</c><01:14:42.560><c> to</c>

01:14:42.870 --> 01:14:42.880 align:start position:0%
number of tokens and you may want to
 

01:14:42.880 --> 01:14:45.310 align:start position:0%
number of tokens and you may want to
have<01:14:43.080><c> them</c><01:14:43.280><c> all</c><01:14:43.440><c> talk</c><01:14:43.679><c> to</c><01:14:43.840><c> each</c><01:14:43.960><c> other</c><01:14:44.320><c> fully</c>

01:14:45.310 --> 01:14:45.320 align:start position:0%
have them all talk to each other fully
 

01:14:45.320 --> 01:14:46.590 align:start position:0%
have them all talk to each other fully
because<01:14:45.560><c> later</c><01:14:45.840><c> you</c><01:14:45.920><c> are</c><01:14:46.080><c> predicting</c><01:14:46.440><c> for</c>

01:14:46.590 --> 01:14:46.600 align:start position:0%
because later you are predicting for
 

01:14:46.600 --> 01:14:48.990 align:start position:0%
because later you are predicting for
example<01:14:46.880><c> the</c><01:14:47.000><c> sentiment</c><01:14:47.520><c> of</c><01:14:47.679><c> the</c><01:14:48.000><c> sentence</c>

01:14:48.990 --> 01:14:49.000 align:start position:0%
example the sentiment of the sentence
 

01:14:49.000 --> 01:14:50.669 align:start position:0%
example the sentiment of the sentence
and<01:14:49.120><c> so</c><01:14:49.280><c> it's</c><01:14:49.480><c> okay</c><01:14:49.600><c> for</c><01:14:49.800><c> these</c><01:14:50.159><c> NOS</c><01:14:50.440><c> to</c><01:14:50.560><c> talk</c>

01:14:50.669 --> 01:14:50.679 align:start position:0%
and so it's okay for these NOS to talk
 

01:14:50.679 --> 01:14:53.590 align:start position:0%
and so it's okay for these NOS to talk
to<01:14:50.840><c> each</c><01:14:51.000><c> other</c><01:14:52.000><c> and</c><01:14:52.080><c> so</c><01:14:52.280><c> in</c><01:14:52.480><c> those</c><01:14:52.679><c> cases</c><01:14:53.520><c> you</c>

01:14:53.590 --> 01:14:53.600 align:start position:0%
to each other and so in those cases you
 

01:14:53.600 --> 01:14:55.790 align:start position:0%
to each other and so in those cases you
will<01:14:53.760><c> use</c><01:14:53.960><c> an</c><01:14:54.120><c> encoder</c><01:14:54.600><c> block</c><01:14:55.199><c> of</c><01:14:55.320><c> self</c>

01:14:55.790 --> 01:14:55.800 align:start position:0%
will use an encoder block of self
 

01:14:55.800 --> 01:14:58.229 align:start position:0%
will use an encoder block of self
attention<01:14:56.800><c> and</c><01:14:57.239><c> uh</c><01:14:57.560><c> all</c><01:14:57.760><c> it</c><01:14:57.840><c> means</c><01:14:58.040><c> that</c><01:14:58.159><c> it's</c>

01:14:58.229 --> 01:14:58.239 align:start position:0%
attention and uh all it means that it's
 

01:14:58.239 --> 01:15:00.790 align:start position:0%
attention and uh all it means that it's
an<01:14:58.400><c> encoder</c><01:14:58.840><c> block</c><01:14:59.560><c> is</c><01:14:59.840><c> that</c><01:15:00.040><c> you</c><01:15:00.159><c> will</c><01:15:00.360><c> delete</c>

01:15:00.790 --> 01:15:00.800 align:start position:0%
an encoder block is that you will delete
 

01:15:00.800 --> 01:15:02.910 align:start position:0%
an encoder block is that you will delete
this<01:15:00.960><c> line</c><01:15:01.120><c> of</c><01:15:01.320><c> code</c><01:15:02.040><c> allowing</c><01:15:02.360><c> all</c><01:15:02.560><c> the</c><01:15:02.679><c> noes</c>

01:15:02.910 --> 01:15:02.920 align:start position:0%
this line of code allowing all the noes
 

01:15:02.920 --> 01:15:04.830 align:start position:0%
this line of code allowing all the noes
to<01:15:03.120><c> completely</c><01:15:03.480><c> talk</c><01:15:03.639><c> to</c><01:15:03.760><c> each</c><01:15:03.880><c> other</c><01:15:04.719><c> what</c>

01:15:04.830 --> 01:15:04.840 align:start position:0%
to completely talk to each other what
 

01:15:04.840 --> 01:15:06.149 align:start position:0%
to completely talk to each other what
we're<01:15:05.000><c> implementing</c><01:15:05.520><c> here</c><01:15:05.719><c> is</c><01:15:05.960><c> sometimes</c>

01:15:06.149 --> 01:15:06.159 align:start position:0%
we're implementing here is sometimes
 

01:15:06.159 --> 01:15:09.510 align:start position:0%
we're implementing here is sometimes
called<01:15:06.440><c> a</c><01:15:06.600><c> decoder</c><01:15:07.120><c> block</c><01:15:08.080><c> and</c><01:15:08.360><c> it's</c><01:15:08.520><c> called</c><01:15:08.760><c> a</c>

01:15:09.510 --> 01:15:09.520 align:start position:0%
called a decoder block and it's called a
 

01:15:09.520 --> 01:15:12.910 align:start position:0%
called a decoder block and it's called a
decoder<01:15:10.520><c> because</c><01:15:10.840><c> it</c><01:15:11.000><c> is</c><01:15:11.120><c> sort</c><01:15:11.280><c> of</c><01:15:11.480><c> like</c><01:15:12.040><c> a</c>

01:15:12.910 --> 01:15:12.920 align:start position:0%
decoder because it is sort of like a
 

01:15:12.920 --> 01:15:14.990 align:start position:0%
decoder because it is sort of like a
decoding<01:15:13.760><c> language</c><01:15:14.440><c> and</c><01:15:14.560><c> it's</c><01:15:14.719><c> got</c><01:15:14.880><c> this</c>

01:15:14.990 --> 01:15:15.000 align:start position:0%
decoding language and it's got this
 

01:15:15.000 --> 01:15:16.990 align:start position:0%
decoding language and it's got this
autor<01:15:15.280><c> regressive</c><01:15:15.719><c> format</c><01:15:16.560><c> where</c><01:15:16.719><c> you</c><01:15:16.880><c> have</c>

01:15:16.990 --> 01:15:17.000 align:start position:0%
autor regressive format where you have
 

01:15:17.000 --> 01:15:19.709 align:start position:0%
autor regressive format where you have
to<01:15:17.199><c> mask</c><01:15:17.719><c> with</c><01:15:17.880><c> the</c><01:15:18.080><c> Triangular</c><01:15:18.639><c> Matrix</c><01:15:19.440><c> so</c>

01:15:19.709 --> 01:15:19.719 align:start position:0%
to mask with the Triangular Matrix so
 

01:15:19.719 --> 01:15:21.990 align:start position:0%
to mask with the Triangular Matrix so
that<01:15:20.199><c> uh</c><01:15:20.600><c> nodes</c><01:15:20.960><c> from</c><01:15:21.080><c> the</c><01:15:21.199><c> future</c><01:15:21.520><c> never</c><01:15:21.760><c> talk</c>

01:15:21.990 --> 01:15:22.000 align:start position:0%
that uh nodes from the future never talk
 

01:15:22.000 --> 01:15:24.310 align:start position:0%
that uh nodes from the future never talk
to<01:15:22.360><c> the</c><01:15:22.560><c> Past</c><01:15:23.400><c> because</c><01:15:23.639><c> they</c><01:15:23.760><c> would</c><01:15:23.920><c> give</c><01:15:24.080><c> away</c>

01:15:24.310 --> 01:15:24.320 align:start position:0%
to the Past because they would give away
 

01:15:24.320 --> 01:15:25.550 align:start position:0%
to the Past because they would give away
the<01:15:24.440><c> answer</c>

01:15:25.550 --> 01:15:25.560 align:start position:0%
the answer
 

01:15:25.560 --> 01:15:27.430 align:start position:0%
the answer
and<01:15:25.679><c> so</c><01:15:25.920><c> basically</c><01:15:26.320><c> in</c><01:15:26.480><c> encoder</c><01:15:26.880><c> blocks</c><01:15:27.320><c> you</c>

01:15:27.430 --> 01:15:27.440 align:start position:0%
and so basically in encoder blocks you
 

01:15:27.440 --> 01:15:29.350 align:start position:0%
and so basically in encoder blocks you
would<01:15:27.639><c> delete</c><01:15:28.080><c> this</c><01:15:28.400><c> allow</c><01:15:28.639><c> all</c><01:15:28.800><c> the</c><01:15:28.920><c> noes</c><01:15:29.199><c> to</c>

01:15:29.350 --> 01:15:29.360 align:start position:0%
would delete this allow all the noes to
 

01:15:29.360 --> 01:15:31.470 align:start position:0%
would delete this allow all the noes to
talk<01:15:29.880><c> in</c><01:15:30.040><c> decoder</c><01:15:30.480><c> blocks</c><01:15:30.960><c> this</c><01:15:31.080><c> will</c><01:15:31.239><c> always</c>

01:15:31.470 --> 01:15:31.480 align:start position:0%
talk in decoder blocks this will always
 

01:15:31.480 --> 01:15:33.350 align:start position:0%
talk in decoder blocks this will always
be<01:15:31.679><c> present</c><01:15:32.360><c> so</c><01:15:32.600><c> that</c><01:15:33.040><c> you</c><01:15:33.120><c> have</c><01:15:33.239><c> this</c>

01:15:33.350 --> 01:15:33.360 align:start position:0%
be present so that you have this
 

01:15:33.360 --> 01:15:35.350 align:start position:0%
be present so that you have this
triangular<01:15:33.800><c> structure</c><01:15:34.719><c> uh</c><01:15:34.840><c> but</c><01:15:35.040><c> both</c><01:15:35.199><c> are</c>

01:15:35.350 --> 01:15:35.360 align:start position:0%
triangular structure uh but both are
 

01:15:35.360 --> 01:15:36.910 align:start position:0%
triangular structure uh but both are
allowed<01:15:35.800><c> and</c><01:15:35.960><c> attention</c><01:15:36.320><c> doesn't</c><01:15:36.600><c> care</c>

01:15:36.910 --> 01:15:36.920 align:start position:0%
allowed and attention doesn't care
 

01:15:36.920 --> 01:15:38.149 align:start position:0%
allowed and attention doesn't care
attention<01:15:37.320><c> supports</c><01:15:37.760><c> arbitrary</c>

01:15:38.149 --> 01:15:38.159 align:start position:0%
attention supports arbitrary
 

01:15:38.159 --> 01:15:40.189 align:start position:0%
attention supports arbitrary
connectivity<01:15:38.679><c> between</c><01:15:38.960><c> nodes</c><01:15:39.920><c> the</c><01:15:40.040><c> next</c>

01:15:40.189 --> 01:15:40.199 align:start position:0%
connectivity between nodes the next
 

01:15:40.199 --> 01:15:41.830 align:start position:0%
connectivity between nodes the next
thing<01:15:40.320><c> I</c><01:15:40.400><c> wanted</c><01:15:40.600><c> to</c><01:15:40.679><c> comment</c><01:15:41.000><c> on</c><01:15:41.280><c> is</c><01:15:41.480><c> you</c><01:15:41.600><c> keep</c>

01:15:41.830 --> 01:15:41.840 align:start position:0%
thing I wanted to comment on is you keep
 

01:15:41.840 --> 01:15:43.830 align:start position:0%
thing I wanted to comment on is you keep
me<01:15:42.239><c> you</c><01:15:42.400><c> keep</c><01:15:42.560><c> hearing</c><01:15:42.880><c> me</c><01:15:43.120><c> say</c><01:15:43.400><c> attention</c>

01:15:43.830 --> 01:15:43.840 align:start position:0%
me you keep hearing me say attention
 

01:15:43.840 --> 01:15:45.790 align:start position:0%
me you keep hearing me say attention
self<01:15:44.080><c> attention</c><01:15:44.520><c> Etc</c><01:15:45.080><c> there's</c><01:15:45.320><c> actually</c><01:15:45.560><c> also</c>

01:15:45.790 --> 01:15:45.800 align:start position:0%
self attention Etc there's actually also
 

01:15:45.800 --> 01:15:47.189 align:start position:0%
self attention Etc there's actually also
something<01:15:46.040><c> called</c><01:15:46.239><c> cross</c><01:15:46.520><c> attention</c><01:15:47.000><c> what</c><01:15:47.080><c> is</c>

01:15:47.189 --> 01:15:47.199 align:start position:0%
something called cross attention what is
 

01:15:47.199 --> 01:15:47.870 align:start position:0%
something called cross attention what is
the

01:15:47.870 --> 01:15:47.880 align:start position:0%
the
 

01:15:47.880 --> 01:15:49.510 align:start position:0%
the
difference

01:15:49.510 --> 01:15:49.520 align:start position:0%
difference
 

01:15:49.520 --> 01:15:52.830 align:start position:0%
difference
so<01:15:50.520><c> basically</c><01:15:51.520><c> the</c><01:15:51.639><c> reason</c><01:15:52.040><c> this</c><01:15:52.280><c> attention</c>

01:15:52.830 --> 01:15:52.840 align:start position:0%
so basically the reason this attention
 

01:15:52.840 --> 01:15:55.629 align:start position:0%
so basically the reason this attention
is<01:15:53.080><c> self</c><01:15:53.520><c> attention</c><01:15:54.520><c> is</c><01:15:54.679><c> because</c><01:15:55.040><c> because</c><01:15:55.480><c> the</c>

01:15:55.629 --> 01:15:55.639 align:start position:0%
is self attention is because because the
 

01:15:55.639 --> 01:15:57.950 align:start position:0%
is self attention is because because the
keys<01:15:56.159><c> queries</c><01:15:56.600><c> and</c><01:15:56.719><c> the</c><01:15:56.880><c> values</c><01:15:57.639><c> are</c><01:15:57.800><c> all</c>

01:15:57.950 --> 01:15:57.960 align:start position:0%
keys queries and the values are all
 

01:15:57.960 --> 01:16:01.189 align:start position:0%
keys queries and the values are all
coming<01:15:58.199><c> from</c><01:15:58.360><c> the</c><01:15:58.560><c> same</c><01:15:58.880><c> Source</c><01:15:59.679><c> from</c><01:16:00.080><c> X</c><01:16:01.000><c> so</c>

01:16:01.189 --> 01:16:01.199 align:start position:0%
coming from the same Source from X so
 

01:16:01.199 --> 01:16:03.390 align:start position:0%
coming from the same Source from X so
the<01:16:01.320><c> same</c><01:16:01.560><c> Source</c><01:16:01.960><c> X</c><01:16:02.320><c> produces</c><01:16:02.760><c> Keys</c><01:16:03.080><c> queries</c>

01:16:03.390 --> 01:16:03.400 align:start position:0%
the same Source X produces Keys queries
 

01:16:03.400 --> 01:16:05.950 align:start position:0%
the same Source X produces Keys queries
and<01:16:03.600><c> values</c><01:16:04.360><c> so</c><01:16:04.679><c> these</c><01:16:05.040><c> nodes</c><01:16:05.360><c> are</c><01:16:05.520><c> self</c>

01:16:05.950 --> 01:16:05.960 align:start position:0%
and values so these nodes are self
 

01:16:05.960 --> 01:16:08.510 align:start position:0%
and values so these nodes are self
attending<01:16:06.960><c> but</c><01:16:07.120><c> in</c><01:16:07.280><c> principle</c><01:16:07.679><c> attention</c><01:16:08.360><c> is</c>

01:16:08.510 --> 01:16:08.520 align:start position:0%
attending but in principle attention is
 

01:16:08.520 --> 01:16:10.310 align:start position:0%
attending but in principle attention is
much<01:16:08.639><c> more</c><01:16:08.800><c> General</c><01:16:09.199><c> than</c><01:16:09.400><c> that</c><01:16:10.040><c> so</c><01:16:10.199><c> for</c>

01:16:10.310 --> 01:16:10.320 align:start position:0%
much more General than that so for
 

01:16:10.320 --> 01:16:12.830 align:start position:0%
much more General than that so for
example<01:16:10.600><c> an</c><01:16:10.719><c> encoder</c><01:16:11.120><c> decoder</c><01:16:11.840><c> Transformers</c>

01:16:12.830 --> 01:16:12.840 align:start position:0%
example an encoder decoder Transformers
 

01:16:12.840 --> 01:16:14.990 align:start position:0%
example an encoder decoder Transformers
uh<01:16:12.960><c> you</c><01:16:13.040><c> can</c><01:16:13.239><c> have</c><01:16:13.360><c> a</c><01:16:13.639><c> case</c><01:16:14.000><c> where</c><01:16:14.520><c> the</c><01:16:14.639><c> queries</c>

01:16:14.990 --> 01:16:15.000 align:start position:0%
uh you can have a case where the queries
 

01:16:15.000 --> 01:16:17.310 align:start position:0%
uh you can have a case where the queries
are<01:16:15.159><c> produced</c><01:16:15.520><c> from</c><01:16:15.719><c> X</c><01:16:16.480><c> but</c><01:16:16.639><c> the</c><01:16:16.760><c> keys</c><01:16:17.040><c> and</c><01:16:17.159><c> the</c>

01:16:17.310 --> 01:16:17.320 align:start position:0%
are produced from X but the keys and the
 

01:16:17.320 --> 01:16:18.870 align:start position:0%
are produced from X but the keys and the
values<01:16:17.719><c> come</c><01:16:17.880><c> from</c><01:16:18.000><c> a</c><01:16:18.159><c> whole</c><01:16:18.400><c> separate</c>

01:16:18.870 --> 01:16:18.880 align:start position:0%
values come from a whole separate
 

01:16:18.880 --> 01:16:21.470 align:start position:0%
values come from a whole separate
external<01:16:19.360><c> source</c><01:16:19.960><c> and</c><01:16:20.280><c> sometimes</c><01:16:20.719><c> from</c><01:16:21.360><c> uh</c>

01:16:21.470 --> 01:16:21.480 align:start position:0%
external source and sometimes from uh
 

01:16:21.480 --> 01:16:23.790 align:start position:0%
external source and sometimes from uh
encoder<01:16:21.920><c> blocks</c><01:16:22.560><c> that</c><01:16:22.719><c> encode</c><01:16:23.080><c> some</c><01:16:23.440><c> context</c>

01:16:23.790 --> 01:16:23.800 align:start position:0%
encoder blocks that encode some context
 

01:16:23.800 --> 01:16:25.550 align:start position:0%
encoder blocks that encode some context
that<01:16:23.920><c> we'd</c><01:16:24.080><c> like</c><01:16:24.199><c> to</c><01:16:24.480><c> condition</c><01:16:24.679><c> on</c>

01:16:25.550 --> 01:16:25.560 align:start position:0%
that we'd like to condition on
 

01:16:25.560 --> 01:16:26.830 align:start position:0%
that we'd like to condition on
and<01:16:25.639><c> so</c><01:16:25.840><c> the</c><01:16:25.960><c> keys</c><01:16:26.120><c> and</c><01:16:26.239><c> the</c><01:16:26.360><c> values</c><01:16:26.679><c> will</c>

01:16:26.830 --> 01:16:26.840 align:start position:0%
and so the keys and the values will
 

01:16:26.840 --> 01:16:28.310 align:start position:0%
and so the keys and the values will
actually<01:16:27.080><c> come</c><01:16:27.199><c> from</c><01:16:27.360><c> a</c><01:16:27.639><c> whole</c><01:16:27.840><c> separate</c>

01:16:28.310 --> 01:16:28.320 align:start position:0%
actually come from a whole separate
 

01:16:28.320 --> 01:16:30.990 align:start position:0%
actually come from a whole separate
Source<01:16:28.960><c> those</c><01:16:29.080><c> are</c><01:16:29.280><c> nodes</c><01:16:29.679><c> on</c><01:16:29.840><c> the</c><01:16:30.120><c> side</c><01:16:30.840><c> and</c>

01:16:30.990 --> 01:16:31.000 align:start position:0%
Source those are nodes on the side and
 

01:16:31.000 --> 01:16:32.870 align:start position:0%
Source those are nodes on the side and
here<01:16:31.120><c> we're</c><01:16:31.280><c> just</c><01:16:31.440><c> producing</c><01:16:31.840><c> queries</c><01:16:32.719><c> and</c>

01:16:32.870 --> 01:16:32.880 align:start position:0%
here we're just producing queries and
 

01:16:32.880 --> 01:16:34.310 align:start position:0%
here we're just producing queries and
we're<01:16:33.000><c> reading</c><01:16:33.280><c> off</c><01:16:33.520><c> information</c><01:16:33.880><c> from</c><01:16:34.040><c> the</c>

01:16:34.310 --> 01:16:34.320 align:start position:0%
we're reading off information from the
 

01:16:34.320 --> 01:16:37.350 align:start position:0%
we're reading off information from the
side<01:16:35.280><c> so</c><01:16:35.600><c> cross</c><01:16:35.880><c> attention</c><01:16:36.679><c> is</c><01:16:36.840><c> used</c><01:16:37.199><c> when</c>

01:16:37.350 --> 01:16:37.360 align:start position:0%
side so cross attention is used when
 

01:16:37.360 --> 01:16:40.550 align:start position:0%
side so cross attention is used when
there's<01:16:37.560><c> a</c><01:16:38.159><c> separate</c><01:16:39.080><c> source</c><01:16:39.520><c> of</c><01:16:39.719><c> nodes</c><01:16:40.360><c> we'd</c>

01:16:40.550 --> 01:16:40.560 align:start position:0%
there's a separate source of nodes we'd
 

01:16:40.560 --> 01:16:42.870 align:start position:0%
there's a separate source of nodes we'd
like<01:16:40.679><c> to</c><01:16:40.880><c> pull</c><01:16:41.280><c> information</c><01:16:41.760><c> from</c><01:16:42.360><c> into</c><01:16:42.639><c> our</c>

01:16:42.870 --> 01:16:42.880 align:start position:0%
like to pull information from into our
 

01:16:42.880 --> 01:16:45.189 align:start position:0%
like to pull information from into our
nodes<01:16:43.840><c> and</c><01:16:44.000><c> it's</c><01:16:44.159><c> self</c><01:16:44.400><c> attention</c><01:16:44.840><c> if</c><01:16:44.960><c> we</c><01:16:45.080><c> just</c>

01:16:45.189 --> 01:16:45.199 align:start position:0%
nodes and it's self attention if we just
 

01:16:45.199 --> 01:16:46.510 align:start position:0%
nodes and it's self attention if we just
have<01:16:45.360><c> nodes</c><01:16:45.760><c> that</c><01:16:45.880><c> would</c><01:16:46.040><c> like</c><01:16:46.159><c> to</c><01:16:46.280><c> look</c><01:16:46.400><c> at</c>

01:16:46.510 --> 01:16:46.520 align:start position:0%
have nodes that would like to look at
 

01:16:46.520 --> 01:16:48.590 align:start position:0%
have nodes that would like to look at
each<01:16:46.639><c> other</c><01:16:46.800><c> and</c><01:16:46.920><c> talk</c><01:16:47.080><c> to</c><01:16:47.199><c> each</c><01:16:47.320><c> other</c><01:16:48.320><c> so</c>

01:16:48.590 --> 01:16:48.600 align:start position:0%
each other and talk to each other so
 

01:16:48.600 --> 01:16:51.790 align:start position:0%
each other and talk to each other so
this<01:16:48.960><c> attention</c><01:16:49.400><c> here</c><01:16:49.719><c> happens</c><01:16:50.000><c> to</c><01:16:50.159><c> be</c><01:16:50.440><c> self</c>

01:16:51.790 --> 01:16:51.800 align:start position:0%
this attention here happens to be self
 

01:16:51.800 --> 01:16:55.669 align:start position:0%
this attention here happens to be self
attention<01:16:52.800><c> but</c><01:16:53.000><c> in</c><01:16:53.199><c> principle</c><01:16:54.199><c> um</c><01:16:55.320><c> attention</c>

01:16:55.669 --> 01:16:55.679 align:start position:0%
attention but in principle um attention
 

01:16:55.679 --> 01:16:57.510 align:start position:0%
attention but in principle um attention
is<01:16:55.760><c> a</c><01:16:55.840><c> lot</c><01:16:56.000><c> more</c><01:16:56.120><c> General</c><01:16:56.960><c> okay</c><01:16:57.080><c> and</c><01:16:57.199><c> the</c><01:16:57.320><c> last</c>

01:16:57.510 --> 01:16:57.520 align:start position:0%
is a lot more General okay and the last
 

01:16:57.520 --> 01:16:59.590 align:start position:0%
is a lot more General okay and the last
note<01:16:57.760><c> at</c><01:16:57.920><c> this</c><01:16:58.080><c> stage</c><01:16:58.480><c> is</c><01:16:59.000><c> if</c><01:16:59.120><c> we</c><01:16:59.239><c> come</c><01:16:59.360><c> to</c><01:16:59.480><c> the</c>

01:16:59.590 --> 01:16:59.600 align:start position:0%
note at this stage is if we come to the
 

01:16:59.600 --> 01:17:01.750 align:start position:0%
note at this stage is if we come to the
attention<01:16:59.920><c> is</c><01:17:00.000><c> all</c><01:17:00.239><c> need</c><01:17:00.480><c> paper</c><01:17:00.800><c> here</c><01:17:01.520><c> we've</c>

01:17:01.750 --> 01:17:01.760 align:start position:0%
attention is all need paper here we've
 

01:17:01.760 --> 01:17:03.590 align:start position:0%
attention is all need paper here we've
already<01:17:02.000><c> implemented</c><01:17:02.440><c> attention</c><01:17:03.080><c> so</c><01:17:03.280><c> given</c>

01:17:03.590 --> 01:17:03.600 align:start position:0%
already implemented attention so given
 

01:17:03.600 --> 01:17:06.430 align:start position:0%
already implemented attention so given
query<01:17:03.920><c> key</c><01:17:04.120><c> and</c><01:17:04.320><c> value</c><01:17:05.280><c> we've</c><01:17:05.800><c> U</c><01:17:05.960><c> multiplied</c>

01:17:06.430 --> 01:17:06.440 align:start position:0%
query key and value we've U multiplied
 

01:17:06.440 --> 01:17:09.030 align:start position:0%
query key and value we've U multiplied
the<01:17:06.520><c> query</c><01:17:06.760><c> and</c><01:17:06.840><c> a</c><01:17:07.000><c> key</c><01:17:07.880><c> we've</c><01:17:08.040><c> soft</c><01:17:08.360><c> maxed</c><01:17:08.639><c> it</c>

01:17:09.030 --> 01:17:09.040 align:start position:0%
the query and a key we've soft maxed it
 

01:17:09.040 --> 01:17:11.709 align:start position:0%
the query and a key we've soft maxed it
and<01:17:09.239><c> then</c><01:17:09.480><c> we</c><01:17:09.600><c> are</c><01:17:09.800><c> aggregating</c><01:17:10.280><c> the</c><01:17:10.719><c> values</c>

01:17:11.709 --> 01:17:11.719 align:start position:0%
and then we are aggregating the values
 

01:17:11.719 --> 01:17:12.510 align:start position:0%
and then we are aggregating the values
there's<01:17:11.920><c> one</c><01:17:12.040><c> more</c><01:17:12.199><c> thing</c><01:17:12.320><c> that</c><01:17:12.400><c> we're</c>

01:17:12.510 --> 01:17:12.520 align:start position:0%
there's one more thing that we're
 

01:17:12.520 --> 01:17:13.910 align:start position:0%
there's one more thing that we're
missing<01:17:12.840><c> here</c><01:17:13.000><c> which</c><01:17:13.120><c> is</c><01:17:13.239><c> the</c><01:17:13.400><c> dividing</c><01:17:13.800><c> by</c>

01:17:13.910 --> 01:17:13.920 align:start position:0%
missing here which is the dividing by
 

01:17:13.920 --> 01:17:16.669 align:start position:0%
missing here which is the dividing by
one<01:17:14.040><c> /</c><01:17:14.320><c> square</c><01:17:14.560><c> root</c><01:17:14.920><c> of</c><01:17:15.360><c> the</c><01:17:15.520><c> head</c><01:17:15.840><c> size</c><01:17:16.560><c> the</c>

01:17:16.669 --> 01:17:16.679 align:start position:0%
one / square root of the head size the
 

01:17:16.679 --> 01:17:18.910 align:start position:0%
one / square root of the head size the
DK<01:17:17.040><c> here</c><01:17:17.120><c> is</c><01:17:17.239><c> the</c><01:17:17.360><c> head</c><01:17:17.600><c> size</c><01:17:18.520><c> why</c><01:17:18.639><c> are</c><01:17:18.760><c> they</c>

01:17:18.910 --> 01:17:18.920 align:start position:0%
DK here is the head size why are they
 

01:17:18.920 --> 01:17:21.430 align:start position:0%
DK here is the head size why are they
doing<01:17:19.120><c> this</c><01:17:19.239><c> finds</c><01:17:19.480><c> this</c><01:17:19.760><c> important</c><01:17:20.760><c> so</c><01:17:21.320><c> they</c>

01:17:21.430 --> 01:17:21.440 align:start position:0%
doing this finds this important so they
 

01:17:21.440 --> 01:17:24.430 align:start position:0%
doing this finds this important so they
call<01:17:21.600><c> it</c><01:17:21.719><c> the</c><01:17:21.880><c> scaled</c><01:17:23.080><c> attention</c><01:17:24.080><c> and</c><01:17:24.199><c> it's</c>

01:17:24.430 --> 01:17:24.440 align:start position:0%
call it the scaled attention and it's
 

01:17:24.440 --> 01:17:25.790 align:start position:0%
call it the scaled attention and it's
kind<01:17:24.560><c> of</c><01:17:24.679><c> like</c><01:17:24.920><c> an</c><01:17:25.000><c> important</c><01:17:25.239><c> normalization</c>

01:17:25.790 --> 01:17:25.800 align:start position:0%
kind of like an important normalization
 

01:17:25.800 --> 01:17:26.910 align:start position:0%
kind of like an important normalization
to<01:17:25.960><c> basically</c>

01:17:26.910 --> 01:17:26.920 align:start position:0%
to basically
 

01:17:26.920 --> 01:17:29.709 align:start position:0%
to basically
have<01:17:27.920><c> the</c><01:17:28.120><c> problem</c><01:17:28.440><c> is</c><01:17:28.679><c> if</c><01:17:28.800><c> you</c><01:17:28.920><c> have</c><01:17:29.199><c> unit</c><01:17:29.520><c> gsh</c>

01:17:29.709 --> 01:17:29.719 align:start position:0%
have the problem is if you have unit gsh
 

01:17:29.719 --> 01:17:32.310 align:start position:0%
have the problem is if you have unit gsh
and<01:17:29.880><c> inputs</c><01:17:30.280><c> so</c><01:17:30.480><c> zero</c><01:17:30.719><c> mean</c><01:17:30.960><c> unit</c><01:17:31.239><c> variance</c><01:17:32.120><c> K</c>

01:17:32.310 --> 01:17:32.320 align:start position:0%
and inputs so zero mean unit variance K
 

01:17:32.320 --> 01:17:34.149 align:start position:0%
and inputs so zero mean unit variance K
and<01:17:32.480><c> Q</c><01:17:32.639><c> are</c><01:17:32.719><c> unit</c><01:17:33.040><c> gashin</c><01:17:33.719><c> then</c><01:17:33.840><c> if</c><01:17:33.920><c> you</c><01:17:34.040><c> just</c>

01:17:34.149 --> 01:17:34.159 align:start position:0%
and Q are unit gashin then if you just
 

01:17:34.159 --> 01:17:36.990 align:start position:0%
and Q are unit gashin then if you just
do<01:17:34.360><c> we</c><01:17:34.800><c> naively</c><01:17:35.719><c> then</c><01:17:35.840><c> you</c><01:17:35.960><c> see</c><01:17:36.199><c> that</c><01:17:36.400><c> your</c><01:17:36.600><c> we</c>

01:17:36.990 --> 01:17:37.000 align:start position:0%
do we naively then you see that your we
 

01:17:37.000 --> 01:17:38.870 align:start position:0%
do we naively then you see that your we
actually<01:17:37.320><c> will</c><01:17:37.520><c> be</c><01:17:38.000><c> uh</c><01:17:38.120><c> the</c><01:17:38.239><c> variance</c><01:17:38.600><c> will</c><01:17:38.760><c> be</c>

01:17:38.870 --> 01:17:38.880 align:start position:0%
actually will be uh the variance will be
 

01:17:38.880 --> 01:17:40.550 align:start position:0%
actually will be uh the variance will be
on<01:17:39.040><c> the</c><01:17:39.159><c> order</c><01:17:39.400><c> of</c><01:17:39.600><c> head</c><01:17:39.800><c> size</c><01:17:40.199><c> which</c><01:17:40.320><c> in</c><01:17:40.400><c> our</c>

01:17:40.550 --> 01:17:40.560 align:start position:0%
on the order of head size which in our
 

01:17:40.560 --> 01:17:43.830 align:start position:0%
on the order of head size which in our
case<01:17:40.719><c> is</c><01:17:41.440><c> 16</c><01:17:42.440><c> but</c><01:17:42.639><c> if</c><01:17:42.760><c> you</c><01:17:43.040><c> multiply</c><01:17:43.560><c> by</c><01:17:43.679><c> one</c>

01:17:43.830 --> 01:17:43.840 align:start position:0%
case is 16 but if you multiply by one
 

01:17:43.840 --> 01:17:45.870 align:start position:0%
case is 16 but if you multiply by one
over<01:17:44.080><c> head</c><01:17:44.320><c> size</c><01:17:44.679><c> square</c><01:17:45.000><c> root</c><01:17:45.480><c> so</c><01:17:45.639><c> this</c><01:17:45.760><c> is</c>

01:17:45.870 --> 01:17:45.880 align:start position:0%
over head size square root so this is
 

01:17:45.880 --> 01:17:47.430 align:start position:0%
over head size square root so this is
square<01:17:46.120><c> root</c><01:17:46.360><c> and</c><01:17:46.480><c> this</c><01:17:46.560><c> is</c><01:17:46.679><c> one</c>

01:17:47.430 --> 01:17:47.440 align:start position:0%
square root and this is one
 

01:17:47.440 --> 01:17:50.590 align:start position:0%
square root and this is one
over<01:17:48.440><c> then</c><01:17:49.080><c> the</c><01:17:49.199><c> variance</c><01:17:49.520><c> of</c><01:17:49.679><c> we</c><01:17:49.920><c> will</c><01:17:50.040><c> be</c><01:17:50.199><c> one</c>

01:17:50.590 --> 01:17:50.600 align:start position:0%
over then the variance of we will be one
 

01:17:50.600 --> 01:17:51.990 align:start position:0%
over then the variance of we will be one
so<01:17:50.760><c> it</c><01:17:50.840><c> will</c><01:17:50.960><c> be</c>

01:17:51.990 --> 01:17:52.000 align:start position:0%
so it will be
 

01:17:52.000 --> 01:17:54.430 align:start position:0%
so it will be
preserved<01:17:53.000><c> now</c><01:17:53.159><c> why</c><01:17:53.239><c> is</c><01:17:53.360><c> this</c><01:17:53.560><c> important</c>

01:17:54.430 --> 01:17:54.440 align:start position:0%
preserved now why is this important
 

01:17:54.440 --> 01:17:56.110 align:start position:0%
preserved now why is this important
you'll<01:17:54.639><c> not</c><01:17:54.840><c> notice</c><01:17:55.080><c> that</c><01:17:55.320><c> way</c>

01:17:56.110 --> 01:17:56.120 align:start position:0%
you'll not notice that way
 

01:17:56.120 --> 01:17:58.669 align:start position:0%
you'll not notice that way
here<01:17:57.120><c> will</c><01:17:57.320><c> feed</c><01:17:57.639><c> into</c>

01:17:58.669 --> 01:17:58.679 align:start position:0%
here will feed into
 

01:17:58.679 --> 01:18:00.750 align:start position:0%
here will feed into
softmax<01:17:59.679><c> and</c><01:17:59.800><c> so</c><01:17:59.920><c> it's</c><01:18:00.080><c> really</c><01:18:00.280><c> important</c>

01:18:00.750 --> 01:18:00.760 align:start position:0%
softmax and so it's really important
 

01:18:00.760 --> 01:18:03.110 align:start position:0%
softmax and so it's really important
especially<01:18:01.120><c> at</c><01:18:01.400><c> initialization</c><01:18:02.400><c> that</c><01:18:02.600><c> we</c><01:18:02.880><c> be</c>

01:18:03.110 --> 01:18:03.120 align:start position:0%
especially at initialization that we be
 

01:18:03.120 --> 01:18:06.590 align:start position:0%
especially at initialization that we be
fairly<01:18:03.719><c> diffuse</c><01:18:04.719><c> so</c><01:18:04.880><c> in</c><01:18:05.000><c> our</c><01:18:05.239><c> case</c><01:18:05.520><c> here</c><01:18:06.440><c> we</c>

01:18:06.590 --> 01:18:06.600 align:start position:0%
fairly diffuse so in our case here we
 

01:18:06.600 --> 01:18:10.070 align:start position:0%
fairly diffuse so in our case here we
sort<01:18:06.800><c> of</c><01:18:07.040><c> locked</c><01:18:07.360><c> out</c><01:18:07.679><c> here</c><01:18:08.400><c> and</c><01:18:08.800><c> we</c><01:18:09.800><c> had</c><01:18:09.920><c> a</c>

01:18:10.070 --> 01:18:10.080 align:start position:0%
sort of locked out here and we had a
 

01:18:10.080 --> 01:18:13.669 align:start position:0%
sort of locked out here and we had a
fairly<01:18:10.400><c> diffuse</c><01:18:10.880><c> numbers</c><01:18:11.280><c> here</c><01:18:11.760><c> so</c><01:18:12.679><c> um</c><01:18:13.440><c> like</c>

01:18:13.669 --> 01:18:13.679 align:start position:0%
fairly diffuse numbers here so um like
 

01:18:13.679 --> 01:18:15.830 align:start position:0%
fairly diffuse numbers here so um like
this<01:18:14.440><c> now</c><01:18:14.600><c> the</c><01:18:14.760><c> problem</c><01:18:15.040><c> is</c><01:18:15.280><c> that</c><01:18:15.520><c> because</c><01:18:15.719><c> of</c>

01:18:15.830 --> 01:18:15.840 align:start position:0%
this now the problem is that because of
 

01:18:15.840 --> 01:18:18.149 align:start position:0%
this now the problem is that because of
softmax<01:18:16.520><c> if</c><01:18:16.719><c> weight</c><01:18:17.000><c> takes</c><01:18:17.199><c> on</c><01:18:17.520><c> very</c><01:18:17.800><c> positive</c>

01:18:18.149 --> 01:18:18.159 align:start position:0%
softmax if weight takes on very positive
 

01:18:18.159 --> 01:18:20.149 align:start position:0%
softmax if weight takes on very positive
and<01:18:18.320><c> very</c><01:18:18.480><c> negative</c><01:18:18.880><c> numbers</c><01:18:19.239><c> inside</c><01:18:19.560><c> it</c>

01:18:20.149 --> 01:18:20.159 align:start position:0%
and very negative numbers inside it
 

01:18:20.159 --> 01:18:22.669 align:start position:0%
and very negative numbers inside it
softmax<01:18:20.760><c> will</c><01:18:20.960><c> actually</c><01:18:21.280><c> converge</c><01:18:22.120><c> towards</c>

01:18:22.669 --> 01:18:22.679 align:start position:0%
softmax will actually converge towards
 

01:18:22.679 --> 01:18:25.229 align:start position:0%
softmax will actually converge towards
one<01:18:23.000><c> hot</c><01:18:23.280><c> vectors</c><01:18:24.280><c> and</c><01:18:24.400><c> so</c><01:18:24.520><c> I</c><01:18:24.600><c> can</c><01:18:24.840><c> illustrate</c>

01:18:25.229 --> 01:18:25.239 align:start position:0%
one hot vectors and so I can illustrate
 

01:18:25.239 --> 01:18:29.590 align:start position:0%
one hot vectors and so I can illustrate
that<01:18:25.880><c> here</c><01:18:27.120><c> um</c><01:18:28.120><c> say</c><01:18:28.320><c> we</c><01:18:28.440><c> are</c><01:18:28.639><c> applying</c><01:18:29.000><c> softmax</c>

01:18:29.590 --> 01:18:29.600 align:start position:0%
that here um say we are applying softmax
 

01:18:29.600 --> 01:18:31.270 align:start position:0%
that here um say we are applying softmax
to<01:18:29.840><c> a</c><01:18:30.000><c> tensor</c><01:18:30.400><c> of</c><01:18:30.560><c> values</c><01:18:30.880><c> that</c><01:18:30.960><c> are</c><01:18:31.120><c> very</c>

01:18:31.270 --> 01:18:31.280 align:start position:0%
to a tensor of values that are very
 

01:18:31.280 --> 01:18:33.030 align:start position:0%
to a tensor of values that are very
close<01:18:31.480><c> to</c><01:18:31.679><c> zero</c><01:18:32.320><c> then</c><01:18:32.440><c> we're</c><01:18:32.600><c> going</c><01:18:32.719><c> to</c><01:18:32.800><c> get</c><01:18:32.920><c> a</c>

01:18:33.030 --> 01:18:33.040 align:start position:0%
close to zero then we're going to get a
 

01:18:33.040 --> 01:18:34.510 align:start position:0%
close to zero then we're going to get a
diffuse<01:18:33.560><c> thing</c><01:18:33.760><c> out</c><01:18:33.880><c> of</c>

01:18:34.510 --> 01:18:34.520 align:start position:0%
diffuse thing out of
 

01:18:34.520 --> 01:18:36.669 align:start position:0%
diffuse thing out of
softmax<01:18:35.520><c> but</c><01:18:35.679><c> the</c><01:18:35.800><c> moment</c><01:18:36.000><c> I</c><01:18:36.120><c> take</c><01:18:36.280><c> the</c><01:18:36.440><c> exact</c>

01:18:36.669 --> 01:18:36.679 align:start position:0%
softmax but the moment I take the exact
 

01:18:36.679 --> 01:18:38.550 align:start position:0%
softmax but the moment I take the exact
same<01:18:36.840><c> thing</c><01:18:36.960><c> and</c><01:18:37.080><c> I</c><01:18:37.199><c> start</c><01:18:37.560><c> sharpening</c><01:18:38.080><c> it</c>

01:18:38.550 --> 01:18:38.560 align:start position:0%
same thing and I start sharpening it
 

01:18:38.560 --> 01:18:40.070 align:start position:0%
same thing and I start sharpening it
making<01:18:38.760><c> it</c><01:18:38.920><c> bigger</c><01:18:39.360><c> by</c><01:18:39.480><c> multiplying</c><01:18:39.960><c> these</c>

01:18:40.070 --> 01:18:40.080 align:start position:0%
making it bigger by multiplying these
 

01:18:40.080 --> 01:18:42.149 align:start position:0%
making it bigger by multiplying these
numbers<01:18:40.400><c> by</c><01:18:40.520><c> eight</c><01:18:40.800><c> for</c><01:18:40.960><c> example</c><01:18:41.840><c> you'll</c><01:18:42.000><c> see</c>

01:18:42.149 --> 01:18:42.159 align:start position:0%
numbers by eight for example you'll see
 

01:18:42.159 --> 01:18:44.229 align:start position:0%
numbers by eight for example you'll see
that<01:18:42.280><c> the</c><01:18:42.400><c> softmax</c><01:18:42.840><c> will</c><01:18:42.960><c> start</c><01:18:43.120><c> to</c><01:18:43.280><c> sharpen</c>

01:18:44.229 --> 01:18:44.239 align:start position:0%
that the softmax will start to sharpen
 

01:18:44.239 --> 01:18:46.070 align:start position:0%
that the softmax will start to sharpen
and<01:18:44.360><c> in</c><01:18:44.520><c> fact</c><01:18:44.679><c> it</c><01:18:44.760><c> will</c><01:18:44.920><c> sharpen</c><01:18:45.440><c> towards</c><01:18:45.920><c> the</c>

01:18:46.070 --> 01:18:46.080 align:start position:0%
and in fact it will sharpen towards the
 

01:18:46.080 --> 01:18:48.149 align:start position:0%
and in fact it will sharpen towards the
max<01:18:46.719><c> so</c><01:18:46.920><c> it</c><01:18:47.000><c> will</c><01:18:47.120><c> sharpen</c><01:18:47.440><c> towards</c><01:18:47.840><c> whatever</c>

01:18:48.149 --> 01:18:48.159 align:start position:0%
max so it will sharpen towards whatever
 

01:18:48.159 --> 01:18:51.430 align:start position:0%
max so it will sharpen towards whatever
number<01:18:48.440><c> here</c><01:18:48.600><c> is</c><01:18:48.880><c> the</c><01:18:49.280><c> highest</c><01:18:50.280><c> and</c><01:18:50.440><c> so</c><01:18:50.920><c> um</c>

01:18:51.430 --> 01:18:51.440 align:start position:0%
number here is the highest and so um
 

01:18:51.440 --> 01:18:52.590 align:start position:0%
number here is the highest and so um
basically<01:18:51.760><c> we</c><01:18:51.880><c> don't</c><01:18:52.000><c> want</c><01:18:52.120><c> these</c><01:18:52.239><c> values</c><01:18:52.520><c> to</c>

01:18:52.590 --> 01:18:52.600 align:start position:0%
basically we don't want these values to
 

01:18:52.600 --> 01:18:53.790 align:start position:0%
basically we don't want these values to
be<01:18:52.719><c> too</c><01:18:52.920><c> extreme</c><01:18:53.320><c> especially</c><01:18:53.639><c> at</c>

01:18:53.790 --> 01:18:53.800 align:start position:0%
be too extreme especially at
 

01:18:53.800 --> 01:18:55.790 align:start position:0%
be too extreme especially at
initialization<01:18:54.800><c> otherwise</c><01:18:55.040><c> softmax</c><01:18:55.480><c> will</c><01:18:55.600><c> be</c>

01:18:55.790 --> 01:18:55.800 align:start position:0%
initialization otherwise softmax will be
 

01:18:55.800 --> 01:18:58.590 align:start position:0%
initialization otherwise softmax will be
way<01:18:55.960><c> too</c><01:18:56.159><c> peaky</c><01:18:57.080><c> and</c><01:18:57.560><c> um</c><01:18:57.880><c> you're</c><01:18:58.120><c> basically</c>

01:18:58.590 --> 01:18:58.600 align:start position:0%
way too peaky and um you're basically
 

01:18:58.600 --> 01:19:01.189 align:start position:0%
way too peaky and um you're basically
aggregating<01:18:59.600><c> um</c><01:19:00.239><c> information</c><01:19:00.719><c> from</c><01:19:00.920><c> like</c><01:19:01.080><c> a</c>

01:19:01.189 --> 01:19:01.199 align:start position:0%
aggregating um information from like a
 

01:19:01.199 --> 01:19:03.070 align:start position:0%
aggregating um information from like a
single<01:19:01.480><c> node</c><01:19:02.040><c> every</c><01:19:02.239><c> node</c><01:19:02.480><c> just</c><01:19:02.639><c> agregates</c>

01:19:03.070 --> 01:19:03.080 align:start position:0%
single node every node just agregates
 

01:19:03.080 --> 01:19:04.669 align:start position:0%
single node every node just agregates
information<01:19:03.400><c> from</c><01:19:03.560><c> a</c><01:19:03.719><c> single</c><01:19:03.960><c> other</c><01:19:04.199><c> node</c>

01:19:04.669 --> 01:19:04.679 align:start position:0%
information from a single other node
 

01:19:04.679 --> 01:19:06.390 align:start position:0%
information from a single other node
that's<01:19:04.840><c> not</c><01:19:05.000><c> what</c><01:19:05.120><c> we</c><01:19:05.239><c> want</c><01:19:05.679><c> especially</c><01:19:06.040><c> at</c>

01:19:06.390 --> 01:19:06.400 align:start position:0%
that's not what we want especially at
 

01:19:06.400 --> 01:19:08.830 align:start position:0%
that's not what we want especially at
initialization<01:19:07.400><c> and</c><01:19:07.560><c> so</c><01:19:08.120><c> the</c><01:19:08.239><c> scaling</c><01:19:08.679><c> is</c>

01:19:08.830 --> 01:19:08.840 align:start position:0%
initialization and so the scaling is
 

01:19:08.840 --> 01:19:11.030 align:start position:0%
initialization and so the scaling is
used<01:19:09.199><c> just</c><01:19:09.320><c> to</c><01:19:09.480><c> control</c><01:19:09.800><c> the</c><01:19:09.960><c> variance</c><01:19:10.400><c> at</c>

01:19:11.030 --> 01:19:11.040 align:start position:0%
used just to control the variance at
 

01:19:11.040 --> 01:19:13.030 align:start position:0%
used just to control the variance at
initialization<01:19:12.040><c> okay</c><01:19:12.159><c> so</c><01:19:12.320><c> having</c><01:19:12.520><c> said</c><01:19:12.760><c> all</c>

01:19:13.030 --> 01:19:13.040 align:start position:0%
initialization okay so having said all
 

01:19:13.040 --> 01:19:15.110 align:start position:0%
initialization okay so having said all
that<01:19:13.400><c> let's</c><01:19:13.639><c> now</c><01:19:13.840><c> take</c><01:19:14.080><c> our</c><01:19:14.440><c> self</c><01:19:14.719><c> attention</c>

01:19:15.110 --> 01:19:15.120 align:start position:0%
that let's now take our self attention
 

01:19:15.120 --> 01:19:17.110 align:start position:0%
that let's now take our self attention
knowledge<01:19:15.560><c> and</c><01:19:15.719><c> let's</c><01:19:16.000><c> uh</c><01:19:16.120><c> take</c><01:19:16.239><c> it</c><01:19:16.320><c> for</c><01:19:16.440><c> a</c>

01:19:17.110 --> 01:19:17.120 align:start position:0%
knowledge and let's uh take it for a
 

01:19:17.120 --> 01:19:19.950 align:start position:0%
knowledge and let's uh take it for a
spin<01:19:18.120><c> so</c><01:19:18.280><c> here</c><01:19:18.400><c> in</c><01:19:18.520><c> the</c><01:19:18.600><c> code</c><01:19:19.040><c> I</c><01:19:19.199><c> created</c><01:19:19.600><c> this</c>

01:19:19.950 --> 01:19:19.960 align:start position:0%
spin so here in the code I created this
 

01:19:19.960 --> 01:19:22.229 align:start position:0%
spin so here in the code I created this
head<01:19:20.360><c> module</c><01:19:20.960><c> and</c><01:19:21.080><c> it</c><01:19:21.199><c> implements</c><01:19:21.679><c> a</c><01:19:21.840><c> single</c>

01:19:22.229 --> 01:19:22.239 align:start position:0%
head module and it implements a single
 

01:19:22.239 --> 01:19:24.790 align:start position:0%
head module and it implements a single
head<01:19:22.440><c> of</c><01:19:22.600><c> self</c><01:19:23.080><c> attention</c><01:19:24.080><c> so</c><01:19:24.239><c> you</c><01:19:24.360><c> give</c><01:19:24.480><c> it</c><01:19:24.520><c> a</c>

01:19:24.790 --> 01:19:24.800 align:start position:0%
head of self attention so you give it a
 

01:19:24.800 --> 01:19:26.830 align:start position:0%
head of self attention so you give it a
head<01:19:25.000><c> size</c><01:19:25.800><c> and</c><01:19:25.920><c> then</c><01:19:26.120><c> here</c><01:19:26.280><c> it</c><01:19:26.400><c> creates</c><01:19:26.679><c> the</c>

01:19:26.830 --> 01:19:26.840 align:start position:0%
head size and then here it creates the
 

01:19:26.840 --> 01:19:29.270 align:start position:0%
head size and then here it creates the
key<01:19:27.040><c> query</c><01:19:27.320><c> and</c><01:19:27.480><c> the</c><01:19:27.639><c> value</c><01:19:28.000><c> linear</c><01:19:28.360><c> layers</c>

01:19:29.270 --> 01:19:29.280 align:start position:0%
key query and the value linear layers
 

01:19:29.280 --> 01:19:31.229 align:start position:0%
key query and the value linear layers
typically<01:19:29.639><c> people</c><01:19:29.800><c> don't</c><01:19:30.040><c> use</c><01:19:30.239><c> biases</c><01:19:30.679><c> in</c>

01:19:31.229 --> 01:19:31.239 align:start position:0%
typically people don't use biases in
 

01:19:31.239 --> 01:19:33.270 align:start position:0%
typically people don't use biases in
these<01:19:32.239><c> uh</c><01:19:32.360><c> so</c><01:19:32.480><c> those</c><01:19:32.679><c> are</c><01:19:32.800><c> the</c><01:19:32.920><c> linear</c>

01:19:33.270 --> 01:19:33.280 align:start position:0%
these uh so those are the linear
 

01:19:33.280 --> 01:19:34.709 align:start position:0%
these uh so those are the linear
projections<01:19:33.639><c> that</c><01:19:33.719><c> we're</c><01:19:33.880><c> going</c><01:19:34.000><c> to</c><01:19:34.159><c> apply</c><01:19:34.560><c> to</c>

01:19:34.709 --> 01:19:34.719 align:start position:0%
projections that we're going to apply to
 

01:19:34.719 --> 01:19:37.550 align:start position:0%
projections that we're going to apply to
all<01:19:34.840><c> of</c><01:19:34.920><c> our</c><01:19:35.400><c> nodes</c><01:19:36.400><c> now</c><01:19:36.679><c> here</c><01:19:37.040><c> I'm</c><01:19:37.159><c> creating</c>

01:19:37.550 --> 01:19:37.560 align:start position:0%
all of our nodes now here I'm creating
 

01:19:37.560 --> 01:19:39.990 align:start position:0%
all of our nodes now here I'm creating
this<01:19:37.800><c> Trill</c><01:19:38.400><c> variable</c><01:19:39.199><c> Trill</c><01:19:39.600><c> is</c><01:19:39.719><c> not</c><01:19:39.840><c> a</c>

01:19:39.990 --> 01:19:40.000 align:start position:0%
this Trill variable Trill is not a
 

01:19:40.000 --> 01:19:41.790 align:start position:0%
this Trill variable Trill is not a
parameter<01:19:40.360><c> of</c><01:19:40.480><c> the</c><01:19:40.679><c> module</c><01:19:41.159><c> so</c><01:19:41.360><c> in</c><01:19:41.480><c> sort</c><01:19:41.679><c> of</c>

01:19:41.790 --> 01:19:41.800 align:start position:0%
parameter of the module so in sort of
 

01:19:41.800 --> 01:19:43.790 align:start position:0%
parameter of the module so in sort of
pytorch<01:19:42.239><c> naming</c><01:19:42.520><c> conventions</c><01:19:43.480><c> uh</c><01:19:43.560><c> this</c><01:19:43.679><c> is</c>

01:19:43.790 --> 01:19:43.800 align:start position:0%
pytorch naming conventions uh this is
 

01:19:43.800 --> 01:19:46.110 align:start position:0%
pytorch naming conventions uh this is
called<01:19:44.000><c> a</c><01:19:44.159><c> buffer</c><01:19:44.800><c> it's</c><01:19:44.920><c> not</c><01:19:45.040><c> a</c><01:19:45.199><c> parameter</c><01:19:45.960><c> and</c>

01:19:46.110 --> 01:19:46.120 align:start position:0%
called a buffer it's not a parameter and
 

01:19:46.120 --> 01:19:47.430 align:start position:0%
called a buffer it's not a parameter and
you<01:19:46.199><c> have</c><01:19:46.320><c> to</c><01:19:46.560><c> call</c><01:19:46.719><c> it</c><01:19:46.920><c> you</c><01:19:47.000><c> have</c><01:19:47.120><c> to</c><01:19:47.239><c> assign</c>

01:19:47.430 --> 01:19:47.440 align:start position:0%
you have to call it you have to assign
 

01:19:47.440 --> 01:19:49.629 align:start position:0%
you have to call it you have to assign
it<01:19:47.560><c> to</c><01:19:47.639><c> the</c><01:19:47.760><c> module</c><01:19:48.080><c> using</c><01:19:48.280><c> a</c><01:19:48.400><c> register</c><01:19:48.840><c> buffer</c>

01:19:49.629 --> 01:19:49.639 align:start position:0%
it to the module using a register buffer
 

01:19:49.639 --> 01:19:52.390 align:start position:0%
it to the module using a register buffer
so<01:19:49.840><c> that</c><01:19:49.960><c> creates</c><01:19:50.320><c> the</c><01:19:50.560><c> trill</c><01:19:51.560><c> uh</c><01:19:51.719><c> the</c><01:19:51.920><c> triang</c>

01:19:52.390 --> 01:19:52.400 align:start position:0%
so that creates the trill uh the triang
 

01:19:52.400 --> 01:19:55.030 align:start position:0%
so that creates the trill uh the triang
lower<01:19:52.679><c> triangular</c><01:19:53.320><c> Matrix</c><01:19:54.320><c> and</c><01:19:54.719><c> we're</c><01:19:54.840><c> given</c>

01:19:55.030 --> 01:19:55.040 align:start position:0%
lower triangular Matrix and we're given
 

01:19:55.040 --> 01:19:56.470 align:start position:0%
lower triangular Matrix and we're given
the<01:19:55.120><c> input</c><01:19:55.400><c> X</c><01:19:55.800><c> this</c><01:19:55.920><c> should</c><01:19:56.120><c> look</c><01:19:56.320><c> very</c>

01:19:56.470 --> 01:19:56.480 align:start position:0%
the input X this should look very
 

01:19:56.480 --> 01:19:58.550 align:start position:0%
the input X this should look very
familiar<01:19:56.880><c> now</c><01:19:57.320><c> we</c><01:19:57.480><c> calculate</c><01:19:57.840><c> the</c><01:19:57.960><c> keys</c><01:19:58.440><c> the</c>

01:19:58.550 --> 01:19:58.560 align:start position:0%
familiar now we calculate the keys the
 

01:19:58.560 --> 01:20:00.709 align:start position:0%
familiar now we calculate the keys the
queries<01:19:59.400><c> we</c><01:19:59.600><c> C</c><01:19:59.920><c> calculate</c><01:20:00.280><c> the</c><01:20:00.400><c> attention</c>

01:20:00.709 --> 01:20:00.719 align:start position:0%
queries we C calculate the attention
 

01:20:00.719 --> 01:20:03.870 align:start position:0%
queries we C calculate the attention
scores<01:20:01.360><c> inside</c><01:20:01.880><c> way</c><01:20:02.880><c> uh</c><01:20:02.960><c> we</c><01:20:03.080><c> normalize</c><01:20:03.560><c> it</c><01:20:03.719><c> so</c>

01:20:03.870 --> 01:20:03.880 align:start position:0%
scores inside way uh we normalize it so
 

01:20:03.880 --> 01:20:06.430 align:start position:0%
scores inside way uh we normalize it so
we're<01:20:04.040><c> using</c><01:20:04.280><c> scaled</c><01:20:04.719><c> attention</c><01:20:05.280><c> here</c><01:20:06.280><c> then</c>

01:20:06.430 --> 01:20:06.440 align:start position:0%
we're using scaled attention here then
 

01:20:06.440 --> 01:20:08.149 align:start position:0%
we're using scaled attention here then
we<01:20:06.600><c> make</c><01:20:06.760><c> sure</c><01:20:07.159><c> that</c><01:20:07.480><c> uh</c><01:20:07.600><c> future</c><01:20:07.960><c> doesn't</c>

01:20:08.149 --> 01:20:08.159 align:start position:0%
we make sure that uh future doesn't
 

01:20:08.159 --> 01:20:09.990 align:start position:0%
we make sure that uh future doesn't
communicate<01:20:08.600><c> with</c><01:20:08.719><c> the</c><01:20:08.880><c> past</c><01:20:09.480><c> so</c><01:20:09.679><c> this</c><01:20:09.800><c> makes</c>

01:20:09.990 --> 01:20:10.000 align:start position:0%
communicate with the past so this makes
 

01:20:10.000 --> 01:20:13.350 align:start position:0%
communicate with the past so this makes
it<01:20:10.120><c> a</c><01:20:10.320><c> decoder</c><01:20:11.080><c> block</c><01:20:12.080><c> and</c><01:20:12.199><c> then</c><01:20:12.440><c> softmax</c><01:20:13.239><c> and</c>

01:20:13.350 --> 01:20:13.360 align:start position:0%
it a decoder block and then softmax and
 

01:20:13.360 --> 01:20:15.510 align:start position:0%
it a decoder block and then softmax and
then<01:20:13.520><c> aggregate</c><01:20:13.880><c> the</c><01:20:14.040><c> value</c><01:20:14.360><c> and</c>

01:20:15.510 --> 01:20:15.520 align:start position:0%
then aggregate the value and
 

01:20:15.520 --> 01:20:17.590 align:start position:0%
then aggregate the value and
output<01:20:16.520><c> then</c><01:20:16.639><c> here</c><01:20:16.760><c> in</c><01:20:16.840><c> the</c><01:20:16.960><c> language</c><01:20:17.280><c> model</c>

01:20:17.590 --> 01:20:17.600 align:start position:0%
output then here in the language model
 

01:20:17.600 --> 01:20:20.350 align:start position:0%
output then here in the language model
I'm<01:20:17.800><c> creating</c><01:20:18.400><c> a</c><01:20:18.560><c> head</c><01:20:18.960><c> in</c><01:20:19.120><c> the</c><01:20:19.800><c> Constructor</c>

01:20:20.350 --> 01:20:20.360 align:start position:0%
I'm creating a head in the Constructor
 

01:20:20.360 --> 01:20:22.470 align:start position:0%
I'm creating a head in the Constructor
and<01:20:20.440><c> I'm</c><01:20:20.560><c> calling</c><01:20:20.800><c> it</c><01:20:20.920><c> self</c><01:20:21.199><c> attention</c><01:20:21.639><c> head</c>

01:20:22.470 --> 01:20:22.480 align:start position:0%
and I'm calling it self attention head
 

01:20:22.480 --> 01:20:24.750 align:start position:0%
and I'm calling it self attention head
and<01:20:22.679><c> the</c><01:20:23.000><c> head</c><01:20:23.320><c> size</c><01:20:23.760><c> I'm</c><01:20:23.920><c> going</c><01:20:24.040><c> to</c><01:20:24.199><c> keep</c><01:20:24.440><c> as</c>

01:20:24.750 --> 01:20:24.760 align:start position:0%
and the head size I'm going to keep as
 

01:20:24.760 --> 01:20:27.550 align:start position:0%
and the head size I'm going to keep as
the<01:20:24.880><c> same</c><01:20:25.199><c> and</c><01:20:25.400><c> embed</c><01:20:26.280><c> just</c><01:20:26.440><c> for</c>

01:20:27.550 --> 01:20:27.560 align:start position:0%
the same and embed just for
 

01:20:27.560 --> 01:20:31.070 align:start position:0%
the same and embed just for
now<01:20:28.560><c> and</c><01:20:28.679><c> then</c><01:20:28.920><c> here</c><01:20:29.920><c> once</c><01:20:30.120><c> we've</c><01:20:30.360><c> encoded</c><01:20:30.920><c> the</c>

01:20:31.070 --> 01:20:31.080 align:start position:0%
now and then here once we've encoded the
 

01:20:31.080 --> 01:20:32.910 align:start position:0%
now and then here once we've encoded the
information<01:20:32.000><c> with</c><01:20:32.159><c> the</c><01:20:32.280><c> token</c><01:20:32.520><c> embeddings</c>

01:20:32.910 --> 01:20:32.920 align:start position:0%
information with the token embeddings
 

01:20:32.920 --> 01:20:34.750 align:start position:0%
information with the token embeddings
and<01:20:33.000><c> the</c><01:20:33.120><c> position</c><01:20:33.400><c> embeddings</c><01:20:34.320><c> we're</c><01:20:34.480><c> simply</c>

01:20:34.750 --> 01:20:34.760 align:start position:0%
and the position embeddings we're simply
 

01:20:34.760 --> 01:20:36.390 align:start position:0%
and the position embeddings we're simply
going<01:20:34.880><c> to</c><01:20:35.000><c> feed</c><01:20:35.239><c> it</c><01:20:35.400><c> into</c><01:20:35.600><c> the</c><01:20:35.719><c> self</c><01:20:35.960><c> attention</c>

01:20:36.390 --> 01:20:36.400 align:start position:0%
going to feed it into the self attention
 

01:20:36.400 --> 01:20:38.550 align:start position:0%
going to feed it into the self attention
head<01:20:37.199><c> and</c><01:20:37.400><c> then</c><01:20:37.679><c> the</c><01:20:37.800><c> output</c><01:20:38.120><c> of</c><01:20:38.239><c> that</c><01:20:38.440><c> is</c>

01:20:38.550 --> 01:20:38.560 align:start position:0%
head and then the output of that is
 

01:20:38.560 --> 01:20:42.189 align:start position:0%
head and then the output of that is
going<01:20:38.719><c> to</c><01:20:38.880><c> go</c><01:20:39.159><c> into</c><01:20:40.159><c> uh</c><01:20:41.000><c> the</c><01:20:41.159><c> decoder</c><01:20:41.880><c> language</c>

01:20:42.189 --> 01:20:42.199 align:start position:0%
going to go into uh the decoder language
 

01:20:42.199 --> 01:20:44.590 align:start position:0%
going to go into uh the decoder language
modeling<01:20:42.600><c> head</c><01:20:43.159><c> and</c><01:20:43.320><c> create</c><01:20:43.560><c> the</c><01:20:43.639><c> logits</c><01:20:44.440><c> so</c>

01:20:44.590 --> 01:20:44.600 align:start position:0%
modeling head and create the logits so
 

01:20:44.600 --> 01:20:46.470 align:start position:0%
modeling head and create the logits so
this<01:20:44.800><c> the</c><01:20:45.199><c> sort</c><01:20:45.360><c> of</c><01:20:45.480><c> the</c><01:20:45.679><c> simplest</c><01:20:46.120><c> way</c><01:20:46.320><c> to</c>

01:20:46.470 --> 01:20:46.480 align:start position:0%
this the sort of the simplest way to
 

01:20:46.480 --> 01:20:48.990 align:start position:0%
this the sort of the simplest way to
plug<01:20:46.719><c> in</c><01:20:46.880><c> a</c><01:20:47.000><c> self</c><01:20:47.280><c> attention</c><01:20:47.840><c> component</c><01:20:48.840><c> uh</c>

01:20:48.990 --> 01:20:49.000 align:start position:0%
plug in a self attention component uh
 

01:20:49.000 --> 01:20:51.590 align:start position:0%
plug in a self attention component uh
into<01:20:49.320><c> our</c><01:20:49.520><c> Network</c><01:20:49.960><c> right</c><01:20:50.120><c> now</c><01:20:51.080><c> I</c><01:20:51.159><c> had</c><01:20:51.280><c> to</c><01:20:51.400><c> make</c>

01:20:51.590 --> 01:20:51.600 align:start position:0%
into our Network right now I had to make
 

01:20:51.600 --> 01:20:55.189 align:start position:0%
into our Network right now I had to make
one<01:20:51.760><c> more</c><01:20:51.960><c> change</c><01:20:52.920><c> which</c><01:20:53.120><c> is</c><01:20:53.679><c> that</c><01:20:53.960><c> here</c><01:20:55.000><c> in</c>

01:20:55.189 --> 01:20:55.199 align:start position:0%
one more change which is that here in
 

01:20:55.199 --> 01:20:57.430 align:start position:0%
one more change which is that here in
the<01:20:55.480><c> generate</c><01:20:56.480><c> uh</c><01:20:56.600><c> we</c><01:20:56.760><c> have</c><01:20:56.840><c> to</c><01:20:57.000><c> make</c><01:20:57.159><c> sure</c>

01:20:57.430 --> 01:20:57.440 align:start position:0%
the generate uh we have to make sure
 

01:20:57.440 --> 01:21:00.990 align:start position:0%
the generate uh we have to make sure
that<01:20:57.679><c> our</c><01:20:58.400><c> idx</c><01:20:58.960><c> that</c><01:20:59.040><c> we</c><01:20:59.159><c> feed</c><01:20:59.440><c> into</c><01:20:59.840><c> the</c><01:21:00.000><c> model</c>

01:21:00.990 --> 01:21:01.000 align:start position:0%
that our idx that we feed into the model
 

01:21:01.000 --> 01:21:02.070 align:start position:0%
that our idx that we feed into the model
because<01:21:01.239><c> now</c><01:21:01.360><c> we're</c><01:21:01.480><c> using</c><01:21:01.719><c> positional</c>

01:21:02.070 --> 01:21:02.080 align:start position:0%
because now we're using positional
 

01:21:02.080 --> 01:21:04.430 align:start position:0%
because now we're using positional
embeddings<01:21:02.960><c> we</c><01:21:03.080><c> can</c><01:21:03.280><c> never</c><01:21:03.880><c> have</c><01:21:04.040><c> more</c><01:21:04.280><c> than</c>

01:21:04.430 --> 01:21:04.440 align:start position:0%
embeddings we can never have more than
 

01:21:04.440 --> 01:21:07.510 align:start position:0%
embeddings we can never have more than
block<01:21:04.800><c> size</c><01:21:05.199><c> coming</c><01:21:05.480><c> in</c><01:21:06.280><c> because</c><01:21:06.600><c> if</c><01:21:06.800><c> idx</c><01:21:07.360><c> is</c>

01:21:07.510 --> 01:21:07.520 align:start position:0%
block size coming in because if idx is
 

01:21:07.520 --> 01:21:09.470 align:start position:0%
block size coming in because if idx is
more<01:21:07.719><c> than</c><01:21:07.920><c> block</c><01:21:08.280><c> size</c><01:21:08.880><c> then</c><01:21:09.040><c> our</c><01:21:09.199><c> position</c>

01:21:09.470 --> 01:21:09.480 align:start position:0%
more than block size then our position
 

01:21:09.480 --> 01:21:11.110 align:start position:0%
more than block size then our position
embedding<01:21:09.880><c> table</c><01:21:10.159><c> is</c><01:21:10.280><c> going</c><01:21:10.440><c> to</c><01:21:10.679><c> run</c><01:21:10.840><c> out</c><01:21:11.000><c> of</c>

01:21:11.110 --> 01:21:11.120 align:start position:0%
embedding table is going to run out of
 

01:21:11.120 --> 01:21:12.669 align:start position:0%
embedding table is going to run out of
scope<01:21:11.560><c> because</c><01:21:11.719><c> it</c><01:21:11.840><c> only</c><01:21:12.040><c> has</c><01:21:12.159><c> embeddings</c><01:21:12.560><c> for</c>

01:21:12.669 --> 01:21:12.679 align:start position:0%
scope because it only has embeddings for
 

01:21:12.679 --> 01:21:15.070 align:start position:0%
scope because it only has embeddings for
up<01:21:12.840><c> to</c><01:21:13.000><c> block</c><01:21:13.400><c> size</c><01:21:14.400><c> and</c><01:21:14.520><c> so</c><01:21:14.679><c> therefore</c><01:21:14.960><c> I</c>

01:21:15.070 --> 01:21:15.080 align:start position:0%
up to block size and so therefore I
 

01:21:15.080 --> 01:21:17.189 align:start position:0%
up to block size and so therefore I
added<01:21:15.360><c> some</c><01:21:15.800><c> uh</c><01:21:15.960><c> code</c><01:21:16.239><c> here</c><01:21:16.400><c> to</c><01:21:16.600><c> crop</c><01:21:16.960><c> the</c>

01:21:17.189 --> 01:21:17.199 align:start position:0%
added some uh code here to crop the
 

01:21:17.199 --> 01:21:20.110 align:start position:0%
added some uh code here to crop the
context<01:21:18.199><c> that</c><01:21:18.320><c> we're</c><01:21:18.480><c> going</c><01:21:18.560><c> to</c><01:21:18.719><c> feed</c><01:21:18.960><c> into</c>

01:21:20.110 --> 01:21:20.120 align:start position:0%
context that we're going to feed into
 

01:21:20.120 --> 01:21:23.510 align:start position:0%
context that we're going to feed into
self<01:21:21.120><c> um</c><01:21:21.719><c> so</c><01:21:22.000><c> that</c><01:21:22.400><c> uh</c><01:21:22.520><c> we</c><01:21:22.639><c> never</c><01:21:23.040><c> pass</c><01:21:23.239><c> in</c><01:21:23.360><c> more</c>

01:21:23.510 --> 01:21:23.520 align:start position:0%
self um so that uh we never pass in more
 

01:21:23.520 --> 01:21:25.510 align:start position:0%
self um so that uh we never pass in more
than<01:21:23.679><c> block</c><01:21:23.920><c> siiz</c><01:21:24.159><c> elements</c>

01:21:25.510 --> 01:21:25.520 align:start position:0%
than block siiz elements
 

01:21:25.520 --> 01:21:27.030 align:start position:0%
than block siiz elements
so<01:21:25.719><c> those</c><01:21:25.840><c> are</c><01:21:25.960><c> the</c><01:21:26.080><c> changes</c><01:21:26.560><c> and</c><01:21:26.679><c> let's</c><01:21:26.880><c> Now</c>

01:21:27.030 --> 01:21:27.040 align:start position:0%
so those are the changes and let's Now
 

01:21:27.040 --> 01:21:29.110 align:start position:0%
so those are the changes and let's Now
train<01:21:27.280><c> the</c><01:21:27.360><c> network</c><01:21:28.080><c> okay</c><01:21:28.199><c> so</c><01:21:28.360><c> I</c><01:21:28.480><c> also</c><01:21:28.800><c> came</c><01:21:28.960><c> up</c>

01:21:29.110 --> 01:21:29.120 align:start position:0%
train the network okay so I also came up
 

01:21:29.120 --> 01:21:30.910 align:start position:0%
train the network okay so I also came up
to<01:21:29.239><c> the</c><01:21:29.400><c> script</c><01:21:29.719><c> here</c><01:21:29.880><c> and</c><01:21:30.040><c> I</c><01:21:30.400><c> decreased</c><01:21:30.840><c> the</c>

01:21:30.910 --> 01:21:30.920 align:start position:0%
to the script here and I decreased the
 

01:21:30.920 --> 01:21:32.470 align:start position:0%
to the script here and I decreased the
learning<01:21:31.239><c> rate</c><01:21:31.600><c> because</c><01:21:32.040><c> uh</c><01:21:32.120><c> the</c><01:21:32.199><c> self</c>

01:21:32.470 --> 01:21:32.480 align:start position:0%
learning rate because uh the self
 

01:21:32.480 --> 01:21:34.270 align:start position:0%
learning rate because uh the self
attention<01:21:33.080><c> can't</c><01:21:33.320><c> tolerate</c><01:21:33.760><c> very</c><01:21:33.960><c> very</c><01:21:34.159><c> high</c>

01:21:34.270 --> 01:21:34.280 align:start position:0%
attention can't tolerate very very high
 

01:21:34.280 --> 01:21:36.950 align:start position:0%
attention can't tolerate very very high
learning<01:21:34.600><c> rates</c><01:21:35.600><c> and</c><01:21:35.800><c> then</c><01:21:36.120><c> I</c><01:21:36.360><c> also</c><01:21:36.600><c> increased</c>

01:21:36.950 --> 01:21:36.960 align:start position:0%
learning rates and then I also increased
 

01:21:36.960 --> 01:21:37.910 align:start position:0%
learning rates and then I also increased
number<01:21:37.120><c> of</c><01:21:37.199><c> iterations</c><01:21:37.679><c> because</c><01:21:37.840><c> the</c>

01:21:37.910 --> 01:21:37.920 align:start position:0%
number of iterations because the
 

01:21:37.920 --> 01:21:39.590 align:start position:0%
number of iterations because the
learning<01:21:38.199><c> rate</c><01:21:38.360><c> is</c><01:21:38.440><c> lower</c><01:21:39.280><c> and</c><01:21:39.400><c> then</c><01:21:39.480><c> I</c>

01:21:39.590 --> 01:21:39.600 align:start position:0%
learning rate is lower and then I
 

01:21:39.600 --> 01:21:41.310 align:start position:0%
learning rate is lower and then I
trained<01:21:39.920><c> it</c><01:21:40.199><c> and</c><01:21:40.400><c> previously</c><01:21:40.880><c> we</c><01:21:40.960><c> were</c><01:21:41.120><c> only</c>

01:21:41.310 --> 01:21:41.320 align:start position:0%
trained it and previously we were only
 

01:21:41.320 --> 01:21:43.709 align:start position:0%
trained it and previously we were only
able<01:21:41.480><c> to</c><01:21:41.600><c> get</c><01:21:41.719><c> to</c><01:21:41.880><c> up</c><01:21:42.000><c> to</c><01:21:42.199><c> 2.5</c><01:21:43.199><c> and</c><01:21:43.320><c> now</c><01:21:43.480><c> we</c><01:21:43.560><c> are</c>

01:21:43.709 --> 01:21:43.719 align:start position:0%
able to get to up to 2.5 and now we are
 

01:21:43.719 --> 01:21:46.189 align:start position:0%
able to get to up to 2.5 and now we are
down<01:21:43.880><c> to</c><01:21:44.239><c> 2.4</c><01:21:45.239><c> so</c><01:21:45.360><c> we</c><01:21:45.520><c> definitely</c><01:21:45.880><c> see</c><01:21:46.120><c> a</c>

01:21:46.189 --> 01:21:46.199 align:start position:0%
down to 2.4 so we definitely see a
 

01:21:46.199 --> 01:21:48.110 align:start position:0%
down to 2.4 so we definitely see a
little<01:21:46.360><c> bit</c><01:21:46.440><c> of</c><01:21:46.520><c> an</c><01:21:46.639><c> improvement</c><01:21:47.360><c> from</c><01:21:47.520><c> 2.5</c><01:21:48.000><c> to</c>

01:21:48.110 --> 01:21:48.120 align:start position:0%
little bit of an improvement from 2.5 to
 

01:21:48.120 --> 01:21:50.990 align:start position:0%
little bit of an improvement from 2.5 to
2.4<01:21:48.719><c> roughly</c><01:21:49.679><c> uh</c><01:21:49.800><c> but</c><01:21:49.920><c> the</c><01:21:50.040><c> text</c><01:21:50.239><c> is</c><01:21:50.360><c> still</c><01:21:50.600><c> not</c>

01:21:50.990 --> 01:21:51.000 align:start position:0%
2.4 roughly uh but the text is still not
 

01:21:51.000 --> 01:21:53.590 align:start position:0%
2.4 roughly uh but the text is still not
amazing<01:21:52.000><c> so</c><01:21:52.400><c> clearly</c><01:21:52.840><c> the</c><01:21:52.960><c> self</c><01:21:53.199><c> attention</c>

01:21:53.590 --> 01:21:53.600 align:start position:0%
amazing so clearly the self attention
 

01:21:53.600 --> 01:21:56.550 align:start position:0%
amazing so clearly the self attention
head<01:21:53.840><c> is</c><01:21:53.960><c> doing</c><01:21:54.600><c> some</c><01:21:54.800><c> useful</c><01:21:55.560><c> communication</c>

01:21:56.550 --> 01:21:56.560 align:start position:0%
head is doing some useful communication
 

01:21:56.560 --> 01:21:59.390 align:start position:0%
head is doing some useful communication
but<01:21:57.159><c> um</c><01:21:57.880><c> we</c><01:21:58.000><c> still</c><01:21:58.199><c> have</c><01:21:58.280><c> a</c><01:21:58.400><c> long</c><01:21:58.520><c> way</c><01:21:58.639><c> to</c><01:21:58.800><c> go</c>

01:21:59.390 --> 01:21:59.400 align:start position:0%
but um we still have a long way to go
 

01:21:59.400 --> 01:22:00.990 align:start position:0%
but um we still have a long way to go
okay<01:21:59.520><c> so</c><01:21:59.679><c> now</c><01:21:59.800><c> we've</c><01:21:59.960><c> implemented</c><01:22:00.400><c> the</c><01:22:00.480><c> scale.</c>

01:22:00.990 --> 01:22:01.000 align:start position:0%
okay so now we've implemented the scale.
 

01:22:01.000 --> 01:22:02.910 align:start position:0%
okay so now we've implemented the scale.
product<01:22:01.280><c> attention</c><01:22:02.080><c> now</c><01:22:02.280><c> next</c><01:22:02.480><c> up</c><01:22:02.679><c> and</c><01:22:02.800><c> the</c>

01:22:02.910 --> 01:22:02.920 align:start position:0%
product attention now next up and the
 

01:22:02.920 --> 01:22:05.149 align:start position:0%
product attention now next up and the
attention<01:22:03.280><c> is</c><01:22:03.440><c> all</c><01:22:03.600><c> you</c><01:22:03.760><c> need</c><01:22:04.080><c> paper</c><01:22:04.960><c> there's</c>

01:22:05.149 --> 01:22:05.159 align:start position:0%
attention is all you need paper there's
 

01:22:05.159 --> 01:22:07.030 align:start position:0%
attention is all you need paper there's
something<01:22:05.400><c> called</c><01:22:05.600><c> multi-head</c><01:22:06.080><c> attention</c>

01:22:07.030 --> 01:22:07.040 align:start position:0%
something called multi-head attention
 

01:22:07.040 --> 01:22:09.110 align:start position:0%
something called multi-head attention
and<01:22:07.159><c> what</c><01:22:07.280><c> is</c><01:22:07.400><c> multi-head</c><01:22:07.880><c> attention</c><01:22:08.880><c> it's</c>

01:22:09.110 --> 01:22:09.120 align:start position:0%
and what is multi-head attention it's
 

01:22:09.120 --> 01:22:11.070 align:start position:0%
and what is multi-head attention it's
just<01:22:09.400><c> applying</c><01:22:09.800><c> multiple</c><01:22:10.199><c> attentions</c><01:22:10.840><c> in</c>

01:22:11.070 --> 01:22:11.080 align:start position:0%
just applying multiple attentions in
 

01:22:11.080 --> 01:22:13.950 align:start position:0%
just applying multiple attentions in
parallel<01:22:11.840><c> and</c><01:22:12.040><c> concatenating</c><01:22:12.719><c> their</c><01:22:12.960><c> results</c>

01:22:13.950 --> 01:22:13.960 align:start position:0%
parallel and concatenating their results
 

01:22:13.960 --> 01:22:15.590 align:start position:0%
parallel and concatenating their results
so<01:22:14.199><c> they</c><01:22:14.360><c> have</c><01:22:14.520><c> a</c><01:22:14.679><c> little</c><01:22:14.800><c> bit</c><01:22:14.920><c> of</c><01:22:15.120><c> diagram</c>

01:22:15.590 --> 01:22:15.600 align:start position:0%
so they have a little bit of diagram
 

01:22:15.600 --> 01:22:18.270 align:start position:0%
so they have a little bit of diagram
here<01:22:16.159><c> I</c><01:22:16.239><c> don't</c><01:22:16.400><c> know</c><01:22:16.520><c> if</c><01:22:16.639><c> this</c><01:22:16.760><c> is</c><01:22:16.960><c> super</c><01:22:17.280><c> clear</c>

01:22:18.270 --> 01:22:18.280 align:start position:0%
here I don't know if this is super clear
 

01:22:18.280 --> 01:22:20.669 align:start position:0%
here I don't know if this is super clear
it's<01:22:18.560><c> really</c><01:22:18.760><c> just</c><01:22:18.920><c> multiple</c><01:22:19.360><c> attentions</c><01:22:20.280><c> in</c>

01:22:20.669 --> 01:22:20.679 align:start position:0%
it's really just multiple attentions in
 

01:22:20.679 --> 01:22:23.510 align:start position:0%
it's really just multiple attentions in
parallel<01:22:21.679><c> so</c><01:22:21.840><c> let's</c><01:22:22.040><c> Implement</c><01:22:22.520><c> that</c><01:22:23.199><c> fairly</c>

01:22:23.510 --> 01:22:23.520 align:start position:0%
parallel so let's Implement that fairly
 

01:22:23.520 --> 01:22:25.310 align:start position:0%
parallel so let's Implement that fairly
straightforward

01:22:25.310 --> 01:22:25.320 align:start position:0%
straightforward
 

01:22:25.320 --> 01:22:27.350 align:start position:0%
straightforward
if<01:22:25.440><c> we</c><01:22:25.560><c> want</c><01:22:25.719><c> a</c><01:22:25.880><c> multi-head</c><01:22:26.400><c> attention</c><01:22:27.280><c> then</c>

01:22:27.350 --> 01:22:27.360 align:start position:0%
if we want a multi-head attention then
 

01:22:27.360 --> 01:22:28.870 align:start position:0%
if we want a multi-head attention then
we<01:22:27.480><c> want</c><01:22:27.639><c> multiple</c><01:22:27.960><c> heads</c><01:22:28.159><c> of</c><01:22:28.280><c> self</c><01:22:28.520><c> attention</c>

01:22:28.870 --> 01:22:28.880 align:start position:0%
we want multiple heads of self attention
 

01:22:28.880 --> 01:22:32.550 align:start position:0%
we want multiple heads of self attention
running<01:22:29.239><c> in</c><01:22:29.960><c> parallel</c><01:22:30.960><c> so</c><01:22:31.560><c> in</c><01:22:31.760><c> pytorch</c><01:22:32.280><c> we</c><01:22:32.360><c> can</c>

01:22:32.550 --> 01:22:32.560 align:start position:0%
running in parallel so in pytorch we can
 

01:22:32.560 --> 01:22:35.229 align:start position:0%
running in parallel so in pytorch we can
do<01:22:32.679><c> this</c><01:22:32.840><c> by</c><01:22:33.000><c> simply</c><01:22:33.320><c> creating</c><01:22:34.000><c> multiple</c>

01:22:35.229 --> 01:22:35.239 align:start position:0%
do this by simply creating multiple
 

01:22:35.239 --> 01:22:38.270 align:start position:0%
do this by simply creating multiple
heads<01:22:36.239><c> so</c><01:22:36.719><c> however</c><01:22:37.000><c> heads</c><01:22:37.360><c> how</c><01:22:37.960><c> however</c><01:22:38.120><c> many</c>

01:22:38.270 --> 01:22:38.280 align:start position:0%
heads so however heads how however many
 

01:22:38.280 --> 01:22:39.910 align:start position:0%
heads so however heads how however many
heads<01:22:38.520><c> you</c><01:22:38.639><c> want</c><01:22:39.080><c> and</c><01:22:39.199><c> then</c><01:22:39.320><c> what</c><01:22:39.440><c> is</c><01:22:39.520><c> the</c><01:22:39.639><c> head</c>

01:22:39.910 --> 01:22:39.920 align:start position:0%
heads you want and then what is the head
 

01:22:39.920 --> 01:22:43.310 align:start position:0%
heads you want and then what is the head
size<01:22:40.199><c> of</c><01:22:40.639><c> each</c><01:22:41.639><c> and</c><01:22:41.840><c> then</c><01:22:42.320><c> we</c><01:22:42.639><c> run</c><01:22:42.960><c> all</c><01:22:43.080><c> of</c><01:22:43.199><c> them</c>

01:22:43.310 --> 01:22:43.320 align:start position:0%
size of each and then we run all of them
 

01:22:43.320 --> 01:22:45.990 align:start position:0%
size of each and then we run all of them
in<01:22:43.480><c> parallel</c><01:22:44.440><c> into</c><01:22:44.679><c> a</c><01:22:44.880><c> list</c><01:22:45.520><c> and</c><01:22:45.639><c> simply</c>

01:22:45.990 --> 01:22:46.000 align:start position:0%
in parallel into a list and simply
 

01:22:46.000 --> 01:22:48.709 align:start position:0%
in parallel into a list and simply
concatenate<01:22:46.719><c> all</c><01:22:46.840><c> of</c><01:22:47.080><c> the</c><01:22:47.360><c> outputs</c><01:22:48.360><c> and</c><01:22:48.520><c> we're</c>

01:22:48.709 --> 01:22:48.719 align:start position:0%
concatenate all of the outputs and we're
 

01:22:48.719 --> 01:22:50.669 align:start position:0%
concatenate all of the outputs and we're
concatenating<01:22:49.320><c> over</c><01:22:49.520><c> the</c><01:22:49.679><c> channel</c>

01:22:50.669 --> 01:22:50.679 align:start position:0%
concatenating over the channel
 

01:22:50.679 --> 01:22:53.270 align:start position:0%
concatenating over the channel
Dimension<01:22:51.679><c> so</c><01:22:51.880><c> the</c><01:22:52.000><c> way</c><01:22:52.159><c> this</c><01:22:52.280><c> looks</c><01:22:52.560><c> now</c><01:22:52.800><c> is</c>

01:22:53.270 --> 01:22:53.280 align:start position:0%
Dimension so the way this looks now is
 

01:22:53.280 --> 01:22:56.229 align:start position:0%
Dimension so the way this looks now is
we<01:22:53.400><c> don't</c><01:22:53.600><c> have</c><01:22:53.719><c> just</c><01:22:53.840><c> a</c><01:22:53.920><c> single</c><01:22:54.159><c> ATT</c>

01:22:56.229 --> 01:22:56.239 align:start position:0%
we don't have just a single ATT
 

01:22:56.239 --> 01:22:59.030 align:start position:0%
we don't have just a single ATT
that<01:22:56.679><c> uh</c><01:22:56.880><c> has</c><01:22:57.159><c> a</c><01:22:57.360><c> hit</c><01:22:57.600><c> size</c><01:22:57.800><c> of</c><01:22:58.000><c> 32</c><01:22:58.800><c> because</c>

01:22:59.030 --> 01:22:59.040 align:start position:0%
that uh has a hit size of 32 because
 

01:22:59.040 --> 01:23:00.590 align:start position:0%
that uh has a hit size of 32 because
remember<01:22:59.320><c> n</c><01:22:59.520><c> Ed</c><01:22:59.880><c> is</c>

01:23:00.590 --> 01:23:00.600 align:start position:0%
remember n Ed is
 

01:23:00.600 --> 01:23:03.750 align:start position:0%
remember n Ed is
32<01:23:01.600><c> instead</c><01:23:01.840><c> of</c><01:23:02.000><c> having</c><01:23:02.239><c> one</c><01:23:03.159><c> Communication</c>

01:23:03.750 --> 01:23:03.760 align:start position:0%
32 instead of having one Communication
 

01:23:03.760 --> 01:23:06.189 align:start position:0%
32 instead of having one Communication
channel<01:23:04.440><c> we</c><01:23:04.639><c> now</c><01:23:04.880><c> have</c><01:23:05.199><c> four</c><01:23:05.560><c> communication</c>

01:23:06.189 --> 01:23:06.199 align:start position:0%
channel we now have four communication
 

01:23:06.199 --> 01:23:08.750 align:start position:0%
channel we now have four communication
channels<01:23:07.120><c> in</c><01:23:07.320><c> parallel</c><01:23:08.159><c> and</c><01:23:08.320><c> each</c><01:23:08.480><c> one</c><01:23:08.639><c> of</c>

01:23:08.750 --> 01:23:08.760 align:start position:0%
channels in parallel and each one of
 

01:23:08.760 --> 01:23:10.910 align:start position:0%
channels in parallel and each one of
these<01:23:08.920><c> communication</c><01:23:09.400><c> channels</c><01:23:09.920><c> typically</c>

01:23:10.910 --> 01:23:10.920 align:start position:0%
these communication channels typically
 

01:23:10.920 --> 01:23:14.790 align:start position:0%
these communication channels typically
will<01:23:11.159><c> be</c><01:23:11.840><c> uh</c><01:23:12.239><c> smaller</c><01:23:13.239><c> uh</c><01:23:13.520><c> correspondingly</c><01:23:14.520><c> so</c>

01:23:14.790 --> 01:23:14.800 align:start position:0%
will be uh smaller uh correspondingly so
 

01:23:14.800 --> 01:23:15.950 align:start position:0%
will be uh smaller uh correspondingly so
because<01:23:15.040><c> we</c><01:23:15.120><c> have</c><01:23:15.239><c> four</c><01:23:15.440><c> communication</c>

01:23:15.950 --> 01:23:15.960 align:start position:0%
because we have four communication
 

01:23:15.960 --> 01:23:18.189 align:start position:0%
because we have four communication
channels<01:23:16.760><c> we</c><01:23:16.880><c> want</c><01:23:17.159><c> eight</c><01:23:17.400><c> dimensional</c><01:23:17.800><c> self</c>

01:23:18.189 --> 01:23:18.199 align:start position:0%
channels we want eight dimensional self
 

01:23:18.199 --> 01:23:20.470 align:start position:0%
channels we want eight dimensional self
attention<01:23:19.199><c> and</c><01:23:19.320><c> so</c><01:23:19.560><c> from</c><01:23:19.760><c> each</c><01:23:19.960><c> Communication</c>

01:23:20.470 --> 01:23:20.480 align:start position:0%
attention and so from each Communication
 

01:23:20.480 --> 01:23:22.030 align:start position:0%
attention and so from each Communication
channel<01:23:20.800><c> we're</c><01:23:20.960><c> going</c><01:23:21.040><c> to</c><01:23:21.400><c> together</c><01:23:21.800><c> eight</c>

01:23:22.030 --> 01:23:22.040 align:start position:0%
channel we're going to together eight
 

01:23:22.040 --> 01:23:23.910 align:start position:0%
channel we're going to together eight
dimensional<01:23:22.480><c> vectors</c><01:23:23.400><c> and</c><01:23:23.520><c> then</c><01:23:23.679><c> we</c><01:23:23.760><c> have</c>

01:23:23.910 --> 01:23:23.920 align:start position:0%
dimensional vectors and then we have
 

01:23:23.920 --> 01:23:25.790 align:start position:0%
dimensional vectors and then we have
four<01:23:24.080><c> of</c><01:23:24.239><c> them</c><01:23:24.639><c> and</c><01:23:24.800><c> that</c><01:23:24.960><c> concatenates</c><01:23:25.600><c> to</c>

01:23:25.790 --> 01:23:25.800 align:start position:0%
four of them and that concatenates to
 

01:23:25.800 --> 01:23:28.110 align:start position:0%
four of them and that concatenates to
give<01:23:25.920><c> us</c><01:23:26.159><c> 32</c><01:23:26.840><c> which</c><01:23:26.960><c> is</c><01:23:27.080><c> the</c><01:23:27.239><c> original</c><01:23:27.679><c> and</c>

01:23:28.110 --> 01:23:28.120 align:start position:0%
give us 32 which is the original and
 

01:23:28.120 --> 01:23:30.830 align:start position:0%
give us 32 which is the original and
embed<01:23:29.120><c> and</c><01:23:29.199><c> so</c><01:23:29.400><c> this</c><01:23:29.480><c> is</c><01:23:29.639><c> kind</c><01:23:29.760><c> of</c><01:23:30.040><c> similar</c><01:23:30.360><c> to</c>

01:23:30.830 --> 01:23:30.840 align:start position:0%
embed and so this is kind of similar to
 

01:23:30.840 --> 01:23:32.189 align:start position:0%
embed and so this is kind of similar to
um<01:23:31.000><c> if</c><01:23:31.080><c> you're</c><01:23:31.239><c> familiar</c><01:23:31.560><c> with</c><01:23:31.679><c> convolutions</c>

01:23:32.189 --> 01:23:32.199 align:start position:0%
um if you're familiar with convolutions
 

01:23:32.199 --> 01:23:34.350 align:start position:0%
um if you're familiar with convolutions
this<01:23:32.320><c> is</c><01:23:32.480><c> kind</c><01:23:32.560><c> of</c><01:23:32.679><c> like</c><01:23:32.800><c> a</c><01:23:32.920><c> group</c><01:23:33.360><c> convolution</c>

01:23:34.350 --> 01:23:34.360 align:start position:0%
this is kind of like a group convolution
 

01:23:34.360 --> 01:23:36.149 align:start position:0%
this is kind of like a group convolution
uh<01:23:34.480><c> because</c><01:23:34.800><c> basically</c><01:23:35.600><c> instead</c><01:23:35.880><c> of</c><01:23:35.960><c> having</c>

01:23:36.149 --> 01:23:36.159 align:start position:0%
uh because basically instead of having
 

01:23:36.159 --> 01:23:37.990 align:start position:0%
uh because basically instead of having
one<01:23:36.360><c> large</c><01:23:36.600><c> convolution</c><01:23:37.199><c> we</c><01:23:37.360><c> do</c><01:23:37.560><c> convolution</c>

01:23:37.990 --> 01:23:38.000 align:start position:0%
one large convolution we do convolution
 

01:23:38.000 --> 01:23:40.790 align:start position:0%
one large convolution we do convolution
in<01:23:38.159><c> groups</c><01:23:39.159><c> and</c><01:23:39.600><c> uh</c><01:23:39.760><c> that's</c><01:23:40.000><c> multi-headed</c>

01:23:40.790 --> 01:23:40.800 align:start position:0%
in groups and uh that's multi-headed
 

01:23:40.800 --> 01:23:41.590 align:start position:0%
in groups and uh that's multi-headed
self

01:23:41.590 --> 01:23:41.600 align:start position:0%
self
 

01:23:41.600 --> 01:23:44.590 align:start position:0%
self
attention<01:23:42.600><c> and</c><01:23:42.800><c> so</c><01:23:43.480><c> then</c><01:23:43.719><c> here</c><01:23:43.960><c> we</c><01:23:44.120><c> just</c><01:23:44.280><c> use</c>

01:23:44.590 --> 01:23:44.600 align:start position:0%
attention and so then here we just use
 

01:23:44.600 --> 01:23:47.790 align:start position:0%
attention and so then here we just use
essay<01:23:45.000><c> heads</c><01:23:45.400><c> self</c><01:23:45.639><c> attention</c><01:23:46.080><c> heads</c><01:23:46.800><c> instead</c>

01:23:47.790 --> 01:23:47.800 align:start position:0%
essay heads self attention heads instead
 

01:23:47.800 --> 01:23:51.189 align:start position:0%
essay heads self attention heads instead
now<01:23:48.000><c> I</c><01:23:48.120><c> actually</c><01:23:48.480><c> ran</c><01:23:48.639><c> it</c><01:23:49.280><c> and</c><01:23:49.760><c> uh</c><01:23:50.159><c> scrolling</c>

01:23:51.189 --> 01:23:51.199 align:start position:0%
now I actually ran it and uh scrolling
 

01:23:51.199 --> 01:23:53.510 align:start position:0%
now I actually ran it and uh scrolling
down<01:23:52.199><c> I</c><01:23:52.320><c> ran</c><01:23:52.600><c> the</c><01:23:52.719><c> same</c><01:23:52.920><c> thing</c><01:23:53.159><c> and</c><01:23:53.280><c> then</c><01:23:53.400><c> we</c>

01:23:53.510 --> 01:23:53.520 align:start position:0%
down I ran the same thing and then we
 

01:23:53.520 --> 01:23:57.189 align:start position:0%
down I ran the same thing and then we
now<01:23:53.679><c> get</c><01:23:53.880><c> this</c><01:23:54.000><c> down</c><01:23:54.159><c> to</c><01:23:54.719><c> 2.28</c><01:23:55.800><c> roughly</c><01:23:56.800><c> and</c>

01:23:57.189 --> 01:23:57.199 align:start position:0%
now get this down to 2.28 roughly and
 

01:23:57.199 --> 01:23:58.830 align:start position:0%
now get this down to 2.28 roughly and
the<01:23:57.480><c> output</c><01:23:57.840><c> is</c><01:23:58.000><c> still</c><01:23:58.239><c> the</c><01:23:58.360><c> generation</c><01:23:58.719><c> is</c>

01:23:58.830 --> 01:23:58.840 align:start position:0%
the output is still the generation is
 

01:23:58.840 --> 01:24:00.470 align:start position:0%
the output is still the generation is
still<01:23:59.040><c> not</c><01:23:59.239><c> amazing</c><01:23:59.880><c> but</c><01:24:00.040><c> clearly</c><01:24:00.360><c> the</c>

01:24:00.470 --> 01:24:00.480 align:start position:0%
still not amazing but clearly the
 

01:24:00.480 --> 01:24:02.070 align:start position:0%
still not amazing but clearly the
validation<01:24:00.840><c> loss</c><01:24:01.080><c> is</c><01:24:01.239><c> improving</c><01:24:01.760><c> because</c><01:24:01.960><c> we</c>

01:24:02.070 --> 01:24:02.080 align:start position:0%
validation loss is improving because we
 

01:24:02.080 --> 01:24:05.790 align:start position:0%
validation loss is improving because we
were<01:24:02.280><c> at</c><01:24:02.440><c> 2.4</c><01:24:03.400><c> just</c><01:24:03.880><c> now</c><01:24:04.880><c> and</c><01:24:05.000><c> so</c><01:24:05.320><c> it</c><01:24:05.440><c> helps</c><01:24:05.679><c> to</c>

01:24:05.790 --> 01:24:05.800 align:start position:0%
were at 2.4 just now and so it helps to
 

01:24:05.800 --> 01:24:07.229 align:start position:0%
were at 2.4 just now and so it helps to
have<01:24:05.920><c> multiple</c><01:24:06.280><c> communication</c><01:24:06.800><c> channels</c>

01:24:07.229 --> 01:24:07.239 align:start position:0%
have multiple communication channels
 

01:24:07.239 --> 01:24:09.229 align:start position:0%
have multiple communication channels
because<01:24:07.480><c> obviously</c><01:24:08.320><c> these</c><01:24:08.480><c> tokens</c><01:24:08.920><c> have</c><01:24:09.080><c> a</c>

01:24:09.229 --> 01:24:09.239 align:start position:0%
because obviously these tokens have a
 

01:24:09.239 --> 01:24:11.430 align:start position:0%
because obviously these tokens have a
lot<01:24:09.440><c> to</c><01:24:09.639><c> talk</c><01:24:09.880><c> about</c><01:24:10.719><c> they</c><01:24:10.840><c> want</c><01:24:10.960><c> to</c><01:24:11.120><c> find</c><01:24:11.320><c> the</c>

01:24:11.430 --> 01:24:11.440 align:start position:0%
lot to talk about they want to find the
 

01:24:11.440 --> 01:24:13.270 align:start position:0%
lot to talk about they want to find the
consonants<01:24:12.040><c> the</c><01:24:12.159><c> vowels</c><01:24:12.639><c> they</c><01:24:12.719><c> want</c><01:24:12.880><c> to</c><01:24:13.040><c> find</c>

01:24:13.270 --> 01:24:13.280 align:start position:0%
consonants the vowels they want to find
 

01:24:13.280 --> 01:24:15.350 align:start position:0%
consonants the vowels they want to find
the<01:24:13.360><c> vowels</c><01:24:13.719><c> just</c><01:24:13.840><c> from</c><01:24:14.000><c> certain</c><01:24:14.360><c> positions</c>

01:24:15.350 --> 01:24:15.360 align:start position:0%
the vowels just from certain positions
 

01:24:15.360 --> 01:24:17.270 align:start position:0%
the vowels just from certain positions
uh<01:24:15.480><c> they</c><01:24:15.600><c> want</c><01:24:15.760><c> to</c><01:24:15.960><c> find</c><01:24:16.679><c> any</c><01:24:16.920><c> kinds</c><01:24:17.080><c> of</c>

01:24:17.270 --> 01:24:17.280 align:start position:0%
uh they want to find any kinds of
 

01:24:17.280 --> 01:24:19.270 align:start position:0%
uh they want to find any kinds of
different<01:24:17.560><c> things</c><01:24:18.440><c> and</c><01:24:18.520><c> so</c><01:24:18.719><c> it</c><01:24:18.840><c> helps</c><01:24:19.080><c> to</c>

01:24:19.270 --> 01:24:19.280 align:start position:0%
different things and so it helps to
 

01:24:19.280 --> 01:24:20.709 align:start position:0%
different things and so it helps to
create<01:24:19.560><c> multiple</c><01:24:19.920><c> independent</c><01:24:20.320><c> channels</c><01:24:20.600><c> of</c>

01:24:20.709 --> 01:24:20.719 align:start position:0%
create multiple independent channels of
 

01:24:20.719 --> 01:24:22.510 align:start position:0%
create multiple independent channels of
communication<01:24:21.520><c> gather</c><01:24:21.880><c> lots</c><01:24:22.040><c> of</c><01:24:22.199><c> different</c>

01:24:22.510 --> 01:24:22.520 align:start position:0%
communication gather lots of different
 

01:24:22.520 --> 01:24:25.310 align:start position:0%
communication gather lots of different
types<01:24:22.719><c> of</c><01:24:22.920><c> data</c><01:24:23.800><c> and</c><01:24:23.960><c> then</c><01:24:24.520><c> uh</c><01:24:24.679><c> decode</c><01:24:25.199><c> the</c>

01:24:25.310 --> 01:24:25.320 align:start position:0%
types of data and then uh decode the
 

01:24:25.320 --> 01:24:27.270 align:start position:0%
types of data and then uh decode the
output<01:24:26.080><c> now</c><01:24:26.239><c> going</c><01:24:26.440><c> back</c><01:24:26.560><c> to</c><01:24:26.639><c> the</c><01:24:26.760><c> paper</c><01:24:27.040><c> for</c><01:24:27.159><c> a</c>

01:24:27.270 --> 01:24:27.280 align:start position:0%
output now going back to the paper for a
 

01:24:27.280 --> 01:24:28.950 align:start position:0%
output now going back to the paper for a
second<01:24:27.880><c> of</c><01:24:27.960><c> course</c><01:24:28.159><c> I</c><01:24:28.280><c> didn't</c><01:24:28.520><c> explain</c><01:24:28.840><c> this</c>

01:24:28.950 --> 01:24:28.960 align:start position:0%
second of course I didn't explain this
 

01:24:28.960 --> 01:24:30.830 align:start position:0%
second of course I didn't explain this
figure<01:24:29.199><c> in</c><01:24:29.320><c> full</c><01:24:29.520><c> detail</c><01:24:29.960><c> but</c><01:24:30.600><c> we</c><01:24:30.679><c> are</c>

01:24:30.830 --> 01:24:30.840 align:start position:0%
figure in full detail but we are
 

01:24:30.840 --> 01:24:32.070 align:start position:0%
figure in full detail but we are
starting<01:24:31.080><c> to</c><01:24:31.159><c> see</c><01:24:31.320><c> some</c><01:24:31.480><c> components</c><01:24:31.840><c> of</c><01:24:31.960><c> what</c>

01:24:32.070 --> 01:24:32.080 align:start position:0%
starting to see some components of what
 

01:24:32.080 --> 01:24:33.629 align:start position:0%
starting to see some components of what
we've<01:24:32.239><c> already</c><01:24:32.520><c> implemented</c><01:24:33.280><c> we</c><01:24:33.400><c> have</c><01:24:33.520><c> the</c>

01:24:33.629 --> 01:24:33.639 align:start position:0%
we've already implemented we have the
 

01:24:33.639 --> 01:24:35.470 align:start position:0%
we've already implemented we have the
positional<01:24:34.000><c> encodings</c><01:24:34.600><c> the</c><01:24:34.679><c> token</c><01:24:34.960><c> encodings</c>

01:24:35.470 --> 01:24:35.480 align:start position:0%
positional encodings the token encodings
 

01:24:35.480 --> 01:24:37.830 align:start position:0%
positional encodings the token encodings
that<01:24:35.719><c> add</c><01:24:36.440><c> we</c><01:24:36.560><c> have</c><01:24:36.679><c> the</c><01:24:36.840><c> masked</c><01:24:37.199><c> multi-headed</c>

01:24:37.830 --> 01:24:37.840 align:start position:0%
that add we have the masked multi-headed
 

01:24:37.840 --> 01:24:41.030 align:start position:0%
that add we have the masked multi-headed
attention<01:24:38.960><c> implemented</c><01:24:39.960><c> now</c><01:24:40.560><c> here's</c><01:24:40.800><c> another</c>

01:24:41.030 --> 01:24:41.040 align:start position:0%
attention implemented now here's another
 

01:24:41.040 --> 01:24:42.750 align:start position:0%
attention implemented now here's another
multi-headed<01:24:41.600><c> attention</c><01:24:42.080><c> which</c><01:24:42.199><c> is</c><01:24:42.320><c> a</c><01:24:42.480><c> cross</c>

01:24:42.750 --> 01:24:42.760 align:start position:0%
multi-headed attention which is a cross
 

01:24:42.760 --> 01:24:45.189 align:start position:0%
multi-headed attention which is a cross
attention<01:24:43.400><c> to</c><01:24:43.560><c> an</c><01:24:43.719><c> encoder</c><01:24:44.400><c> which</c><01:24:44.600><c> we</c><01:24:44.760><c> haven't</c>

01:24:45.189 --> 01:24:45.199 align:start position:0%
attention to an encoder which we haven't
 

01:24:45.199 --> 01:24:46.470 align:start position:0%
attention to an encoder which we haven't
we're<01:24:45.400><c> not</c><01:24:45.560><c> going</c><01:24:45.719><c> to</c><01:24:45.840><c> implement</c><01:24:46.199><c> in</c><01:24:46.320><c> this</c>

01:24:46.470 --> 01:24:46.480 align:start position:0%
we're not going to implement in this
 

01:24:46.480 --> 01:24:48.430 align:start position:0%
we're not going to implement in this
case<01:24:47.080><c> I'm</c><01:24:47.239><c> going</c><01:24:47.360><c> to</c><01:24:47.480><c> come</c><01:24:47.639><c> back</c><01:24:47.760><c> to</c><01:24:47.880><c> that</c>

01:24:48.430 --> 01:24:48.440 align:start position:0%
case I'm going to come back to that
 

01:24:48.440 --> 01:24:50.390 align:start position:0%
case I'm going to come back to that
later<01:24:49.440><c> but</c><01:24:49.639><c> I</c><01:24:49.719><c> want</c><01:24:49.840><c> you</c><01:24:49.960><c> to</c><01:24:50.040><c> notice</c><01:24:50.320><c> that</c>

01:24:50.390 --> 01:24:50.400 align:start position:0%
later but I want you to notice that
 

01:24:50.400 --> 01:24:52.229 align:start position:0%
later but I want you to notice that
there's<01:24:50.560><c> a</c><01:24:50.639><c> feed</c><01:24:50.880><c> forward</c><01:24:51.280><c> part</c><01:24:51.560><c> here</c><01:24:52.119><c> and</c>

01:24:52.229 --> 01:24:52.239 align:start position:0%
there's a feed forward part here and
 

01:24:52.239 --> 01:24:53.950 align:start position:0%
there's a feed forward part here and
then<01:24:52.440><c> this</c><01:24:52.639><c> is</c><01:24:52.800><c> grouped</c><01:24:53.119><c> into</c><01:24:53.320><c> a</c><01:24:53.480><c> block</c><01:24:53.840><c> that</c>

01:24:53.950 --> 01:24:53.960 align:start position:0%
then this is grouped into a block that
 

01:24:53.960 --> 01:24:56.030 align:start position:0%
then this is grouped into a block that
gets<01:24:54.360><c> repeat</c><01:24:54.560><c> it</c><01:24:54.679><c> again</c><01:24:54.800><c> and</c><01:24:55.000><c> again</c><01:24:55.840><c> now</c><01:24:55.960><c> the</c>

01:24:56.030 --> 01:24:56.040 align:start position:0%
gets repeat it again and again now the
 

01:24:56.040 --> 01:24:57.950 align:start position:0%
gets repeat it again and again now the
feedforward<01:24:56.600><c> part</c><01:24:56.840><c> here</c><01:24:57.040><c> is</c><01:24:57.199><c> just</c><01:24:57.320><c> a</c><01:24:57.480><c> simple</c>

01:24:57.950 --> 01:24:57.960 align:start position:0%
feedforward part here is just a simple
 

01:24:57.960 --> 01:25:00.629 align:start position:0%
feedforward part here is just a simple
uh<01:24:58.080><c> multi-layer</c><01:24:59.000><c> perceptron</c>

01:25:00.629 --> 01:25:00.639 align:start position:0%
uh multi-layer perceptron
 

01:25:00.639 --> 01:25:04.310 align:start position:0%
uh multi-layer perceptron
um<01:25:01.639><c> so</c><01:25:01.800><c> the</c><01:25:01.960><c> multi-headed</c><01:25:02.960><c> so</c><01:25:03.199><c> here</c><01:25:03.480><c> position</c>

01:25:04.310 --> 01:25:04.320 align:start position:0%
um so the multi-headed so here position
 

01:25:04.320 --> 01:25:06.149 align:start position:0%
um so the multi-headed so here position
wise<01:25:04.560><c> feed</c><01:25:04.800><c> forward</c><01:25:05.080><c> networks</c><01:25:05.719><c> is</c><01:25:05.880><c> just</c><01:25:06.000><c> a</c>

01:25:06.149 --> 01:25:06.159 align:start position:0%
wise feed forward networks is just a
 

01:25:06.159 --> 01:25:08.910 align:start position:0%
wise feed forward networks is just a
simple<01:25:06.600><c> little</c><01:25:07.119><c> MLP</c><01:25:08.119><c> so</c><01:25:08.320><c> I</c><01:25:08.400><c> want</c><01:25:08.560><c> to</c><01:25:08.679><c> start</c>

01:25:08.910 --> 01:25:08.920 align:start position:0%
simple little MLP so I want to start
 

01:25:08.920 --> 01:25:10.669 align:start position:0%
simple little MLP so I want to start
basically<01:25:09.320><c> in</c><01:25:09.400><c> a</c><01:25:09.560><c> similar</c><01:25:09.960><c> fashion</c><01:25:10.360><c> also</c>

01:25:10.669 --> 01:25:10.679 align:start position:0%
basically in a similar fashion also
 

01:25:10.679 --> 01:25:13.390 align:start position:0%
basically in a similar fashion also
adding<01:25:11.080><c> computation</c><01:25:11.880><c> into</c><01:25:12.080><c> the</c><01:25:12.280><c> network</c><01:25:13.280><c> and</c>

01:25:13.390 --> 01:25:13.400 align:start position:0%
adding computation into the network and
 

01:25:13.400 --> 01:25:16.390 align:start position:0%
adding computation into the network and
this<01:25:13.560><c> computation</c><01:25:14.159><c> is</c><01:25:14.360><c> on</c><01:25:14.480><c> a</c><01:25:14.639><c> per</c><01:25:14.880><c> node</c><01:25:15.159><c> level</c>

01:25:16.390 --> 01:25:16.400 align:start position:0%
this computation is on a per node level
 

01:25:16.400 --> 01:25:18.629 align:start position:0%
this computation is on a per node level
so<01:25:17.400><c> I've</c><01:25:17.600><c> already</c><01:25:17.840><c> implemented</c><01:25:18.280><c> it</c><01:25:18.480><c> and</c><01:25:18.560><c> you</c>

01:25:18.629 --> 01:25:18.639 align:start position:0%
so I've already implemented it and you
 

01:25:18.639 --> 01:25:20.590 align:start position:0%
so I've already implemented it and you
can<01:25:18.760><c> see</c><01:25:18.960><c> the</c><01:25:19.119><c> diff</c><01:25:19.600><c> highlighted</c><01:25:20.080><c> on</c><01:25:20.159><c> the</c><01:25:20.320><c> left</c>

01:25:20.590 --> 01:25:20.600 align:start position:0%
can see the diff highlighted on the left
 

01:25:20.600 --> 01:25:22.910 align:start position:0%
can see the diff highlighted on the left
here<01:25:20.800><c> when</c><01:25:20.960><c> I've</c><01:25:21.159><c> added</c><01:25:21.400><c> or</c><01:25:21.520><c> changed</c><01:25:21.920><c> things</c>

01:25:22.910 --> 01:25:22.920 align:start position:0%
here when I've added or changed things
 

01:25:22.920 --> 01:25:25.070 align:start position:0%
here when I've added or changed things
now<01:25:23.119><c> before</c><01:25:23.440><c> we</c><01:25:23.600><c> had</c><01:25:23.880><c> the</c><01:25:24.360><c> self</c><01:25:24.560><c> multi-headed</c>

01:25:25.070 --> 01:25:25.080 align:start position:0%
now before we had the self multi-headed
 

01:25:25.080 --> 01:25:26.430 align:start position:0%
now before we had the self multi-headed
self<01:25:25.280><c> attention</c><01:25:25.719><c> that</c><01:25:25.840><c> did</c><01:25:26.000><c> the</c>

01:25:26.430 --> 01:25:26.440 align:start position:0%
self attention that did the
 

01:25:26.440 --> 01:25:28.950 align:start position:0%
self attention that did the
communication<01:25:27.440><c> but</c><01:25:27.639><c> we</c><01:25:27.800><c> went</c><01:25:28.080><c> way</c><01:25:28.239><c> too</c><01:25:28.520><c> fast</c>

01:25:28.950 --> 01:25:28.960 align:start position:0%
communication but we went way too fast
 

01:25:28.960 --> 01:25:31.709 align:start position:0%
communication but we went way too fast
to<01:25:29.159><c> calculate</c><01:25:29.520><c> the</c><01:25:29.679><c> logits</c><01:25:30.679><c> so</c><01:25:31.280><c> the</c><01:25:31.440><c> tokens</c>

01:25:31.709 --> 01:25:31.719 align:start position:0%
to calculate the logits so the tokens
 

01:25:31.719 --> 01:25:32.870 align:start position:0%
to calculate the logits so the tokens
looked<01:25:31.960><c> at</c><01:25:32.040><c> each</c><01:25:32.159><c> other</c><01:25:32.400><c> but</c><01:25:32.520><c> didn't</c><01:25:32.719><c> really</c>

01:25:32.870 --> 01:25:32.880 align:start position:0%
looked at each other but didn't really
 

01:25:32.880 --> 01:25:35.229 align:start position:0%
looked at each other but didn't really
have<01:25:33.000><c> a</c><01:25:33.080><c> lot</c><01:25:33.199><c> of</c><01:25:33.320><c> time</c><01:25:33.520><c> to</c><01:25:33.880><c> think</c><01:25:34.159><c> on</c><01:25:34.760><c> what</c><01:25:35.080><c> they</c>

01:25:35.229 --> 01:25:35.239 align:start position:0%
have a lot of time to think on what they
 

01:25:35.239 --> 01:25:38.790 align:start position:0%
have a lot of time to think on what they
found<01:25:35.760><c> from</c><01:25:35.920><c> the</c><01:25:36.040><c> other</c><01:25:36.560><c> tokens</c><01:25:37.560><c> and</c><01:25:37.719><c> so</c><01:25:38.679><c> what</c>

01:25:38.790 --> 01:25:38.800 align:start position:0%
found from the other tokens and so what
 

01:25:38.800 --> 01:25:40.510 align:start position:0%
found from the other tokens and so what
I've<01:25:38.960><c> implemented</c><01:25:39.520><c> here</c><01:25:39.679><c> is</c><01:25:39.800><c> a</c><01:25:39.960><c> little</c><01:25:40.280><c> feet</c>

01:25:40.510 --> 01:25:40.520 align:start position:0%
I've implemented here is a little feet
 

01:25:40.520 --> 01:25:42.910 align:start position:0%
I've implemented here is a little feet
forward<01:25:41.040><c> single</c><01:25:41.400><c> layer</c><01:25:42.360><c> and</c><01:25:42.520><c> this</c><01:25:42.679><c> little</c>

01:25:42.910 --> 01:25:42.920 align:start position:0%
forward single layer and this little
 

01:25:42.920 --> 01:25:45.149 align:start position:0%
forward single layer and this little
layer<01:25:43.400><c> is</c><01:25:43.600><c> just</c><01:25:43.760><c> a</c><01:25:43.920><c> linear</c><01:25:44.239><c> followed</c><01:25:44.639><c> by</c><01:25:44.760><c> a</c><01:25:44.840><c> Rel</c>

01:25:45.149 --> 01:25:45.159 align:start position:0%
layer is just a linear followed by a Rel
 

01:25:45.159 --> 01:25:48.149 align:start position:0%
layer is just a linear followed by a Rel
nonlinearity<01:25:46.159><c> and</c><01:25:46.360><c> that's</c><01:25:46.639><c> that's</c><01:25:46.960><c> it</c><01:25:47.960><c> so</c>

01:25:48.149 --> 01:25:48.159 align:start position:0%
nonlinearity and that's that's it so
 

01:25:48.159 --> 01:25:50.870 align:start position:0%
nonlinearity and that's that's it so
it's<01:25:48.360><c> just</c><01:25:48.480><c> a</c><01:25:48.600><c> little</c><01:25:49.159><c> layer</c><01:25:50.159><c> and</c><01:25:50.320><c> then</c><01:25:50.560><c> I</c><01:25:50.679><c> call</c>

01:25:50.870 --> 01:25:50.880 align:start position:0%
it's just a little layer and then I call
 

01:25:50.880 --> 01:25:52.310 align:start position:0%
it's just a little layer and then I call
it<01:25:51.119><c> feed</c>

01:25:52.310 --> 01:25:52.320 align:start position:0%
it feed
 

01:25:52.320 --> 01:25:54.950 align:start position:0%
it feed
forward<01:25:53.320><c> um</c><01:25:53.480><c> and</c><01:25:53.679><c> embed</c>

01:25:54.950 --> 01:25:54.960 align:start position:0%
forward um and embed
 

01:25:54.960 --> 01:25:56.109 align:start position:0%
forward um and embed
and<01:25:55.080><c> then</c><01:25:55.199><c> this</c><01:25:55.320><c> feed</c><01:25:55.560><c> forward</c><01:25:55.880><c> is</c><01:25:55.960><c> just</c>

01:25:56.109 --> 01:25:56.119 align:start position:0%
and then this feed forward is just
 

01:25:56.119 --> 01:25:57.990 align:start position:0%
and then this feed forward is just
called<01:25:56.360><c> sequentially</c><01:25:56.920><c> right</c><01:25:57.080><c> after</c><01:25:57.560><c> the</c><01:25:57.719><c> self</c>

01:25:57.990 --> 01:25:58.000 align:start position:0%
called sequentially right after the self
 

01:25:58.000 --> 01:26:00.990 align:start position:0%
called sequentially right after the self
attention<01:25:58.880><c> so</c><01:25:59.040><c> we</c><01:25:59.159><c> self</c><01:25:59.440><c> attend</c><01:26:00.280><c> then</c><01:26:00.440><c> we</c><01:26:00.679><c> feed</c>

01:26:00.990 --> 01:26:01.000 align:start position:0%
attention so we self attend then we feed
 

01:26:01.000 --> 01:26:02.790 align:start position:0%
attention so we self attend then we feed
forward<01:26:01.880><c> and</c><01:26:02.000><c> you'll</c><01:26:02.159><c> notice</c><01:26:02.440><c> that</c><01:26:02.520><c> the</c><01:26:02.600><c> feet</c>

01:26:02.790 --> 01:26:02.800 align:start position:0%
forward and you'll notice that the feet
 

01:26:02.800 --> 01:26:04.870 align:start position:0%
forward and you'll notice that the feet
forward<01:26:03.199><c> here</c><01:26:03.520><c> when</c><01:26:03.639><c> it's</c><01:26:03.800><c> applying</c><01:26:04.119><c> linear</c>

01:26:04.870 --> 01:26:04.880 align:start position:0%
forward here when it's applying linear
 

01:26:04.880 --> 01:26:06.750 align:start position:0%
forward here when it's applying linear
this<01:26:05.000><c> is</c><01:26:05.119><c> on</c><01:26:05.239><c> a</c><01:26:05.440><c> per</c><01:26:05.679><c> token</c><01:26:06.000><c> level</c><01:26:06.480><c> all</c><01:26:06.639><c> the</c>

01:26:06.750 --> 01:26:06.760 align:start position:0%
this is on a per token level all the
 

01:26:06.760 --> 01:26:09.590 align:start position:0%
this is on a per token level all the
tokens<01:26:07.119><c> do</c><01:26:07.360><c> this</c><01:26:07.679><c> independently</c><01:26:08.679><c> so</c><01:26:09.199><c> the</c><01:26:09.320><c> self</c>

01:26:09.590 --> 01:26:09.600 align:start position:0%
tokens do this independently so the self
 

01:26:09.600 --> 01:26:11.629 align:start position:0%
tokens do this independently so the self
attention<01:26:10.000><c> is</c><01:26:10.119><c> the</c><01:26:10.400><c> communication</c><01:26:11.400><c> and</c><01:26:11.520><c> then</c>

01:26:11.629 --> 01:26:11.639 align:start position:0%
attention is the communication and then
 

01:26:11.639 --> 01:26:13.270 align:start position:0%
attention is the communication and then
once<01:26:11.840><c> they've</c><01:26:12.080><c> gathered</c><01:26:12.400><c> all</c><01:26:12.520><c> the</c><01:26:12.679><c> data</c><01:26:13.119><c> now</c>

01:26:13.270 --> 01:26:13.280 align:start position:0%
once they've gathered all the data now
 

01:26:13.280 --> 01:26:15.109 align:start position:0%
once they've gathered all the data now
they<01:26:13.400><c> need</c><01:26:13.520><c> to</c><01:26:13.719><c> think</c><01:26:13.960><c> on</c><01:26:14.159><c> that</c><01:26:14.320><c> data</c>

01:26:15.109 --> 01:26:15.119 align:start position:0%
they need to think on that data
 

01:26:15.119 --> 01:26:16.870 align:start position:0%
they need to think on that data
individually<01:26:16.119><c> and</c><01:26:16.239><c> so</c><01:26:16.400><c> that's</c><01:26:16.520><c> what</c><01:26:16.639><c> feed</c>

01:26:16.870 --> 01:26:16.880 align:start position:0%
individually and so that's what feed
 

01:26:16.880 --> 01:26:18.830 align:start position:0%
individually and so that's what feed
forward<01:26:17.159><c> is</c><01:26:17.280><c> doing</c><01:26:18.080><c> and</c><01:26:18.320><c> that's</c><01:26:18.520><c> why</c><01:26:18.639><c> I've</c>

01:26:18.830 --> 01:26:18.840 align:start position:0%
forward is doing and that's why I've
 

01:26:18.840 --> 01:26:21.590 align:start position:0%
forward is doing and that's why I've
added<01:26:19.080><c> it</c><01:26:19.320><c> here</c><01:26:20.320><c> now</c><01:26:20.480><c> when</c><01:26:20.600><c> I</c><01:26:20.719><c> train</c><01:26:21.080><c> this</c><01:26:21.440><c> the</c>

01:26:21.590 --> 01:26:21.600 align:start position:0%
added it here now when I train this the
 

01:26:21.600 --> 01:26:23.109 align:start position:0%
added it here now when I train this the
validation<01:26:21.960><c> LW</c><01:26:22.280><c> actually</c><01:26:22.480><c> continues</c><01:26:22.840><c> to</c><01:26:23.000><c> go</c>

01:26:23.109 --> 01:26:23.119 align:start position:0%
validation LW actually continues to go
 

01:26:23.119 --> 01:26:26.510 align:start position:0%
validation LW actually continues to go
down<01:26:23.560><c> now</c><01:26:23.760><c> to</c><01:26:23.880><c> 2.</c><01:26:24.400><c> 24</c><01:26:25.239><c> which</c><01:26:25.360><c> is</c><01:26:25.520><c> down</c><01:26:25.679><c> from</c>

01:26:26.510 --> 01:26:26.520 align:start position:0%
down now to 2. 24 which is down from
 

01:26:26.520 --> 01:26:28.790 align:start position:0%
down now to 2. 24 which is down from
2.28<01:26:27.520><c> uh</c><01:26:27.639><c> the</c><01:26:27.719><c> output</c><01:26:28.119><c> still</c><01:26:28.280><c> look</c><01:26:28.520><c> kind</c><01:26:28.639><c> of</c>

01:26:28.790 --> 01:26:28.800 align:start position:0%
2.28 uh the output still look kind of
 

01:26:28.800 --> 01:26:31.030 align:start position:0%
2.28 uh the output still look kind of
terrible<01:26:29.639><c> but</c><01:26:29.840><c> at</c><01:26:29.960><c> least</c><01:26:30.119><c> we've</c><01:26:30.280><c> improved</c><01:26:30.600><c> the</c>

01:26:31.030 --> 01:26:31.040 align:start position:0%
terrible but at least we've improved the
 

01:26:31.040 --> 01:26:34.270 align:start position:0%
terrible but at least we've improved the
situation<01:26:32.040><c> and</c><01:26:32.159><c> so</c><01:26:32.400><c> as</c><01:26:32.480><c> a</c><01:26:33.119><c> preview</c><01:26:34.119><c> we're</c>

01:26:34.270 --> 01:26:34.280 align:start position:0%
situation and so as a preview we're
 

01:26:34.280 --> 01:26:37.189 align:start position:0%
situation and so as a preview we're
going<01:26:34.440><c> to</c><01:26:34.639><c> now</c><01:26:34.800><c> start</c><01:26:35.000><c> to</c><01:26:35.600><c> intersperse</c><01:26:36.600><c> the</c>

01:26:37.189 --> 01:26:37.199 align:start position:0%
going to now start to intersperse the
 

01:26:37.199 --> 01:26:39.830 align:start position:0%
going to now start to intersperse the
communication<01:26:38.199><c> with</c><01:26:38.480><c> the</c><01:26:38.679><c> computation</c><01:26:39.679><c> and</c>

01:26:39.830 --> 01:26:39.840 align:start position:0%
communication with the computation and
 

01:26:39.840 --> 01:26:42.189 align:start position:0%
communication with the computation and
that's<01:26:40.000><c> also</c><01:26:40.560><c> what</c><01:26:40.679><c> the</c><01:26:40.800><c> Transformer</c><01:26:41.360><c> does</c>

01:26:42.189 --> 01:26:42.199 align:start position:0%
that's also what the Transformer does
 

01:26:42.199 --> 01:26:44.070 align:start position:0%
that's also what the Transformer does
when<01:26:42.320><c> it</c><01:26:42.480><c> has</c><01:26:42.679><c> blocks</c><01:26:43.080><c> that</c><01:26:43.239><c> communicate</c><01:26:43.920><c> and</c>

01:26:44.070 --> 01:26:44.080 align:start position:0%
when it has blocks that communicate and
 

01:26:44.080 --> 01:26:46.790 align:start position:0%
when it has blocks that communicate and
then<01:26:44.480><c> compute</c><01:26:45.360><c> and</c><01:26:45.480><c> it</c><01:26:45.600><c> groups</c><01:26:46.000><c> them</c><01:26:46.440><c> and</c>

01:26:46.790 --> 01:26:46.800 align:start position:0%
then compute and it groups them and
 

01:26:46.800 --> 01:26:49.629 align:start position:0%
then compute and it groups them and
replicates<01:26:47.800><c> them</c><01:26:48.800><c> okay</c><01:26:48.880><c> so</c><01:26:49.040><c> let</c><01:26:49.119><c> me</c><01:26:49.239><c> show</c><01:26:49.440><c> you</c>

01:26:49.629 --> 01:26:49.639 align:start position:0%
replicates them okay so let me show you
 

01:26:49.639 --> 01:26:51.830 align:start position:0%
replicates them okay so let me show you
what<01:26:49.840><c> we'd</c><01:26:50.159><c> like</c><01:26:50.320><c> to</c><01:26:50.520><c> do</c><01:26:51.320><c> we'd</c><01:26:51.520><c> like</c><01:26:51.639><c> to</c><01:26:51.719><c> do</c>

01:26:51.830 --> 01:26:51.840 align:start position:0%
what we'd like to do we'd like to do
 

01:26:51.840 --> 01:26:53.750 align:start position:0%
what we'd like to do we'd like to do
something<01:26:52.119><c> like</c><01:26:52.280><c> this</c><01:26:52.440><c> we</c><01:26:52.560><c> have</c><01:26:52.639><c> a</c><01:26:52.840><c> block</c><01:26:53.639><c> and</c>

01:26:53.750 --> 01:26:53.760 align:start position:0%
something like this we have a block and
 

01:26:53.760 --> 01:26:55.229 align:start position:0%
something like this we have a block and
this<01:26:53.880><c> block</c><01:26:54.080><c> is</c><01:26:54.239><c> is</c><01:26:54.360><c> basically</c><01:26:54.800><c> this</c><01:26:54.960><c> part</c>

01:26:55.229 --> 01:26:55.239 align:start position:0%
this block is is basically this part
 

01:26:55.239 --> 01:26:57.550 align:start position:0%
this block is is basically this part
here<01:26:56.080><c> except</c><01:26:56.320><c> for</c><01:26:56.480><c> the</c><01:26:56.600><c> cross</c>

01:26:57.550 --> 01:26:57.560 align:start position:0%
here except for the cross
 

01:26:57.560 --> 01:26:59.470 align:start position:0%
here except for the cross
attention<01:26:58.560><c> now</c><01:26:58.719><c> the</c><01:26:58.840><c> block</c><01:26:59.159><c> basically</c>

01:26:59.470 --> 01:26:59.480 align:start position:0%
attention now the block basically
 

01:26:59.480 --> 01:27:01.550 align:start position:0%
attention now the block basically
intersperses<01:27:00.480><c> communication</c><01:27:01.119><c> and</c><01:27:01.239><c> then</c>

01:27:01.550 --> 01:27:01.560 align:start position:0%
intersperses communication and then
 

01:27:01.560 --> 01:27:03.510 align:start position:0%
intersperses communication and then
computation<01:27:02.560><c> the</c><01:27:02.679><c> computation</c><01:27:03.360><c> the</c>

01:27:03.510 --> 01:27:03.520 align:start position:0%
computation the computation the
 

01:27:03.520 --> 01:27:05.149 align:start position:0%
computation the computation the
communication<01:27:04.000><c> is</c><01:27:04.119><c> done</c><01:27:04.400><c> using</c><01:27:04.639><c> multi-headed</c>

01:27:05.149 --> 01:27:05.159 align:start position:0%
communication is done using multi-headed
 

01:27:05.159 --> 01:27:07.030 align:start position:0%
communication is done using multi-headed
selfelf<01:27:05.440><c> attention</c><01:27:06.440><c> and</c><01:27:06.560><c> then</c><01:27:06.960><c> the</c>

01:27:07.030 --> 01:27:07.040 align:start position:0%
selfelf attention and then the
 

01:27:07.040 --> 01:27:08.709 align:start position:0%
selfelf attention and then the
computation<01:27:07.520><c> is</c><01:27:07.639><c> done</c><01:27:07.840><c> using</c><01:27:08.080><c> a</c><01:27:08.159><c> feed</c><01:27:08.400><c> forward</c>

01:27:08.709 --> 01:27:08.719 align:start position:0%
computation is done using a feed forward
 

01:27:08.719 --> 01:27:11.590 align:start position:0%
computation is done using a feed forward
Network<01:27:09.480><c> on</c><01:27:09.639><c> all</c><01:27:09.760><c> the</c><01:27:09.880><c> tokens</c>

01:27:11.590 --> 01:27:11.600 align:start position:0%
Network on all the tokens
 

01:27:11.600 --> 01:27:14.189 align:start position:0%
Network on all the tokens
independently<01:27:12.600><c> now</c><01:27:13.320><c> what</c><01:27:13.440><c> I've</c><01:27:13.639><c> added</c><01:27:13.960><c> here</c>

01:27:14.189 --> 01:27:14.199 align:start position:0%
independently now what I've added here
 

01:27:14.199 --> 01:27:16.149 align:start position:0%
independently now what I've added here
also<01:27:14.560><c> is</c><01:27:14.719><c> you'll</c>

01:27:16.149 --> 01:27:16.159 align:start position:0%
also is you'll
 

01:27:16.159 --> 01:27:18.030 align:start position:0%
also is you'll
notice<01:27:17.159><c> this</c><01:27:17.320><c> takes</c><01:27:17.600><c> the</c><01:27:17.719><c> number</c><01:27:17.880><c> of</c>

01:27:18.030 --> 01:27:18.040 align:start position:0%
notice this takes the number of
 

01:27:18.040 --> 01:27:19.510 align:start position:0%
notice this takes the number of
embeddings<01:27:18.600><c> in</c><01:27:18.719><c> the</c><01:27:18.840><c> embedding</c><01:27:19.159><c> Dimension</c>

01:27:19.510 --> 01:27:19.520 align:start position:0%
embeddings in the embedding Dimension
 

01:27:19.520 --> 01:27:21.070 align:start position:0%
embeddings in the embedding Dimension
and<01:27:19.719><c> number</c><01:27:19.920><c> of</c><01:27:20.080><c> heads</c><01:27:20.400><c> that</c><01:27:20.520><c> we</c><01:27:20.600><c> would</c><01:27:20.800><c> like</c>

01:27:21.070 --> 01:27:21.080 align:start position:0%
and number of heads that we would like
 

01:27:21.080 --> 01:27:22.550 align:start position:0%
and number of heads that we would like
which<01:27:21.159><c> is</c><01:27:21.280><c> kind</c><01:27:21.400><c> of</c><01:27:21.520><c> like</c><01:27:21.679><c> group</c><01:27:21.960><c> size</c><01:27:22.239><c> in</c>

01:27:22.550 --> 01:27:22.560 align:start position:0%
which is kind of like group size in
 

01:27:22.560 --> 01:27:24.709 align:start position:0%
which is kind of like group size in
group<01:27:22.960><c> convolution</c><01:27:23.960><c> and</c><01:27:24.199><c> and</c><01:27:24.400><c> I'm</c><01:27:24.520><c> saying</c>

01:27:24.709 --> 01:27:24.719 align:start position:0%
group convolution and and I'm saying
 

01:27:24.719 --> 01:27:26.750 align:start position:0%
group convolution and and I'm saying
that<01:27:24.920><c> number</c><01:27:25.080><c> of</c><01:27:25.199><c> heads</c><01:27:25.440><c> we'd</c><01:27:25.639><c> like</c><01:27:25.880><c> is</c><01:27:26.040><c> four</c>

01:27:26.750 --> 01:27:26.760 align:start position:0%
that number of heads we'd like is four
 

01:27:26.760 --> 01:27:29.470 align:start position:0%
that number of heads we'd like is four
and<01:27:26.880><c> so</c><01:27:27.119><c> because</c><01:27:27.400><c> this</c><01:27:27.520><c> is</c><01:27:27.880><c> 32</c><01:27:28.880><c> we</c><01:27:29.040><c> calculate</c>

01:27:29.470 --> 01:27:29.480 align:start position:0%
and so because this is 32 we calculate
 

01:27:29.480 --> 01:27:31.109 align:start position:0%
and so because this is 32 we calculate
that<01:27:29.639><c> because</c><01:27:29.840><c> this</c><01:27:29.920><c> is</c><01:27:30.040><c> 32</c><01:27:30.719><c> the</c><01:27:30.840><c> number</c><01:27:31.000><c> of</c>

01:27:31.109 --> 01:27:31.119 align:start position:0%
that because this is 32 the number of
 

01:27:31.119 --> 01:27:34.709 align:start position:0%
that because this is 32 the number of
heads<01:27:31.320><c> should</c><01:27:31.480><c> be</c><01:27:32.080><c> four</c><01:27:33.080><c> um</c><01:27:34.080><c> the</c><01:27:34.280><c> head</c><01:27:34.520><c> size</c>

01:27:34.709 --> 01:27:34.719 align:start position:0%
heads should be four um the head size
 

01:27:34.719 --> 01:27:36.229 align:start position:0%
heads should be four um the head size
should<01:27:34.840><c> be</c><01:27:35.040><c> eight</c><01:27:35.480><c> so</c><01:27:35.679><c> that</c><01:27:35.840><c> everything</c><01:27:36.080><c> sort</c>

01:27:36.229 --> 01:27:36.239 align:start position:0%
should be eight so that everything sort
 

01:27:36.239 --> 01:27:39.270 align:start position:0%
should be eight so that everything sort
of<01:27:36.360><c> works</c><01:27:36.639><c> out</c><01:27:36.960><c> Channel</c><01:27:37.679><c> wise</c><01:27:38.679><c> um</c><01:27:38.880><c> so</c><01:27:39.040><c> this</c><01:27:39.159><c> is</c>

01:27:39.270 --> 01:27:39.280 align:start position:0%
of works out Channel wise um so this is
 

01:27:39.280 --> 01:27:41.229 align:start position:0%
of works out Channel wise um so this is
how<01:27:39.400><c> the</c><01:27:39.520><c> Transformer</c><01:27:40.000><c> structures</c><01:27:40.960><c> uh</c><01:27:41.080><c> sort</c>

01:27:41.229 --> 01:27:41.239 align:start position:0%
how the Transformer structures uh sort
 

01:27:41.239 --> 01:27:44.470 align:start position:0%
how the Transformer structures uh sort
of<01:27:41.480><c> the</c><01:27:42.080><c> uh</c><01:27:42.199><c> the</c><01:27:42.360><c> sizes</c><01:27:43.199><c> typically</c><01:27:44.199><c> so</c><01:27:44.360><c> the</c>

01:27:44.470 --> 01:27:44.480 align:start position:0%
of the uh the sizes typically so the
 

01:27:44.480 --> 01:27:45.950 align:start position:0%
of the uh the sizes typically so the
head<01:27:44.639><c> size</c><01:27:44.840><c> will</c><01:27:44.960><c> become</c><01:27:45.199><c> eight</c><01:27:45.679><c> and</c><01:27:45.800><c> then</c>

01:27:45.950 --> 01:27:45.960 align:start position:0%
head size will become eight and then
 

01:27:45.960 --> 01:27:47.790 align:start position:0%
head size will become eight and then
this<01:27:46.040><c> is</c><01:27:46.159><c> how</c><01:27:46.280><c> we</c><01:27:46.360><c> want</c><01:27:46.480><c> to</c><01:27:46.600><c> intersperse</c><01:27:47.159><c> them</c>

01:27:47.790 --> 01:27:47.800 align:start position:0%
this is how we want to intersperse them
 

01:27:47.800 --> 01:27:49.550 align:start position:0%
this is how we want to intersperse them
and<01:27:47.920><c> then</c><01:27:48.080><c> here</c><01:27:48.760><c> I'm</c><01:27:48.880><c> trying</c><01:27:49.080><c> to</c><01:27:49.239><c> create</c>

01:27:49.550 --> 01:27:49.560 align:start position:0%
and then here I'm trying to create
 

01:27:49.560 --> 01:27:51.790 align:start position:0%
and then here I'm trying to create
blocks<01:27:50.119><c> which</c><01:27:50.239><c> is</c><01:27:50.440><c> just</c><01:27:50.600><c> a</c><01:27:50.880><c> sequential</c>

01:27:51.790 --> 01:27:51.800 align:start position:0%
blocks which is just a sequential
 

01:27:51.800 --> 01:27:53.870 align:start position:0%
blocks which is just a sequential
application<01:27:52.320><c> of</c><01:27:52.480><c> block</c><01:27:52.719><c> block</c><01:27:53.000><c> block</c><01:27:53.560><c> so</c><01:27:53.760><c> that</c>

01:27:53.870 --> 01:27:53.880 align:start position:0%
application of block block block so that
 

01:27:53.880 --> 01:27:55.669 align:start position:0%
application of block block block so that
we're<01:27:54.159><c> interspersing</c><01:27:54.880><c> communication</c><01:27:55.440><c> feed</c>

01:27:55.669 --> 01:27:55.679 align:start position:0%
we're interspersing communication feed
 

01:27:55.679 --> 01:27:57.750 align:start position:0%
we're interspersing communication feed
forward<01:27:55.960><c> many</c><01:27:56.159><c> many</c><01:27:56.400><c> times</c><01:27:57.040><c> and</c><01:27:57.159><c> then</c><01:27:57.360><c> finally</c>

01:27:57.750 --> 01:27:57.760 align:start position:0%
forward many many times and then finally
 

01:27:57.760 --> 01:28:01.109 align:start position:0%
forward many many times and then finally
we<01:27:58.560><c> decode</c><01:27:59.560><c> now</c><01:28:00.119><c> I</c><01:28:00.239><c> actually</c><01:28:00.480><c> tried</c><01:28:00.719><c> to</c><01:28:00.840><c> run</c>

01:28:01.109 --> 01:28:01.119 align:start position:0%
we decode now I actually tried to run
 

01:28:01.119 --> 01:28:02.790 align:start position:0%
we decode now I actually tried to run
this<01:28:01.679><c> and</c><01:28:01.800><c> the</c><01:28:01.920><c> problem</c><01:28:02.239><c> is</c><01:28:02.400><c> this</c><01:28:02.520><c> doesn't</c>

01:28:02.790 --> 01:28:02.800 align:start position:0%
this and the problem is this doesn't
 

01:28:02.800 --> 01:28:05.830 align:start position:0%
this and the problem is this doesn't
actually<01:28:03.000><c> give</c><01:28:03.119><c> a</c><01:28:03.280><c> very</c><01:28:03.480><c> good</c><01:28:04.040><c> uh</c><01:28:04.440><c> answer</c><01:28:05.440><c> and</c>

01:28:05.830 --> 01:28:05.840 align:start position:0%
actually give a very good uh answer and
 

01:28:05.840 --> 01:28:07.590 align:start position:0%
actually give a very good uh answer and
very<01:28:06.000><c> good</c><01:28:06.199><c> result</c><01:28:06.800><c> and</c><01:28:06.880><c> the</c><01:28:07.000><c> reason</c><01:28:07.239><c> for</c><01:28:07.440><c> that</c>

01:28:07.590 --> 01:28:07.600 align:start position:0%
very good result and the reason for that
 

01:28:07.600 --> 01:28:09.189 align:start position:0%
very good result and the reason for that
is<01:28:07.800><c> we're</c><01:28:08.040><c> start</c><01:28:08.280><c> starting</c><01:28:08.560><c> to</c><01:28:08.800><c> actually</c><01:28:09.000><c> get</c>

01:28:09.189 --> 01:28:09.199 align:start position:0%
is we're start starting to actually get
 

01:28:09.199 --> 01:28:11.350 align:start position:0%
is we're start starting to actually get
like<01:28:09.280><c> a</c><01:28:09.440><c> pretty</c><01:28:09.679><c> deep</c><01:28:10.080><c> neural</c><01:28:10.400><c> net</c><01:28:11.000><c> and</c><01:28:11.159><c> deep</c>

01:28:11.350 --> 01:28:11.360 align:start position:0%
like a pretty deep neural net and deep
 

01:28:11.360 --> 01:28:13.390 align:start position:0%
like a pretty deep neural net and deep
neural<01:28:11.639><c> Nets</c><01:28:12.159><c> uh</c><01:28:12.280><c> suffer</c><01:28:12.600><c> from</c><01:28:12.800><c> optimization</c>

01:28:13.390 --> 01:28:13.400 align:start position:0%
neural Nets uh suffer from optimization
 

01:28:13.400 --> 01:28:14.510 align:start position:0%
neural Nets uh suffer from optimization
issues<01:28:13.719><c> and</c><01:28:13.840><c> I</c><01:28:13.920><c> think</c><01:28:14.080><c> that's</c><01:28:14.199><c> what</c><01:28:14.320><c> we're</c>

01:28:14.510 --> 01:28:14.520 align:start position:0%
issues and I think that's what we're
 

01:28:14.520 --> 01:28:16.070 align:start position:0%
issues and I think that's what we're
kind<01:28:14.639><c> of</c><01:28:14.840><c> like</c><01:28:15.040><c> slightly</c><01:28:15.440><c> starting</c><01:28:15.719><c> to</c><01:28:15.880><c> run</c>

01:28:16.070 --> 01:28:16.080 align:start position:0%
kind of like slightly starting to run
 

01:28:16.080 --> 01:28:18.350 align:start position:0%
kind of like slightly starting to run
into<01:28:16.639><c> so</c><01:28:16.800><c> we</c><01:28:16.920><c> need</c><01:28:17.080><c> one</c><01:28:17.239><c> more</c><01:28:17.480><c> idea</c><01:28:18.040><c> that</c><01:28:18.239><c> we</c>

01:28:18.350 --> 01:28:18.360 align:start position:0%
into so we need one more idea that we
 

01:28:18.360 --> 01:28:21.189 align:start position:0%
into so we need one more idea that we
can<01:28:18.560><c> borrow</c><01:28:19.000><c> from</c><01:28:19.239><c> the</c><01:28:20.000><c> um</c><01:28:20.239><c> Transformer</c><01:28:20.800><c> paper</c>

01:28:21.189 --> 01:28:21.199 align:start position:0%
can borrow from the um Transformer paper
 

01:28:21.199 --> 01:28:23.149 align:start position:0%
can borrow from the um Transformer paper
to<01:28:21.400><c> resolve</c><01:28:21.719><c> those</c><01:28:21.920><c> difficulties</c><01:28:22.920><c> now</c><01:28:23.080><c> there</c>

01:28:23.149 --> 01:28:23.159 align:start position:0%
to resolve those difficulties now there
 

01:28:23.159 --> 01:28:25.390 align:start position:0%
to resolve those difficulties now there
are<01:28:23.320><c> two</c><01:28:23.520><c> optimizations</c><01:28:24.400><c> that</c><01:28:24.840><c> dramatically</c>

01:28:25.390 --> 01:28:25.400 align:start position:0%
are two optimizations that dramatically
 

01:28:25.400 --> 01:28:27.310 align:start position:0%
are two optimizations that dramatically
help<01:28:25.719><c> with</c><01:28:25.840><c> the</c><01:28:26.000><c> depth</c><01:28:26.239><c> of</c><01:28:26.360><c> these</c><01:28:26.520><c> networks</c>

01:28:27.310 --> 01:28:27.320 align:start position:0%
help with the depth of these networks
 

01:28:27.320 --> 01:28:29.350 align:start position:0%
help with the depth of these networks
and<01:28:27.560><c> make</c><01:28:27.719><c> sure</c><01:28:28.119><c> that</c><01:28:28.360><c> the</c><01:28:28.600><c> networks</c><01:28:29.119><c> remain</c>

01:28:29.350 --> 01:28:29.360 align:start position:0%
and make sure that the networks remain
 

01:28:29.360 --> 01:28:31.030 align:start position:0%
and make sure that the networks remain
optimizable<01:28:30.159><c> let's</c><01:28:30.360><c> talk</c><01:28:30.520><c> about</c><01:28:30.719><c> the</c><01:28:30.840><c> first</c>

01:28:31.030 --> 01:28:31.040 align:start position:0%
optimizable let's talk about the first
 

01:28:31.040 --> 01:28:33.430 align:start position:0%
optimizable let's talk about the first
one<01:28:31.920><c> the</c><01:28:32.080><c> first</c><01:28:32.239><c> one</c><01:28:32.360><c> in</c><01:28:32.480><c> this</c><01:28:32.600><c> diagram</c><01:28:33.080><c> is</c><01:28:33.320><c> you</c>

01:28:33.430 --> 01:28:33.440 align:start position:0%
one the first one in this diagram is you
 

01:28:33.440 --> 01:28:36.669 align:start position:0%
one the first one in this diagram is you
see<01:28:33.719><c> this</c><01:28:33.880><c> Arrow</c><01:28:34.400><c> here</c><01:28:35.400><c> and</c><01:28:35.600><c> then</c><01:28:35.920><c> this</c><01:28:36.119><c> arrow</c>

01:28:36.669 --> 01:28:36.679 align:start position:0%
see this Arrow here and then this arrow
 

01:28:36.679 --> 01:28:38.189 align:start position:0%
see this Arrow here and then this arrow
and<01:28:36.840><c> this</c><01:28:37.000><c> Arrow</c><01:28:37.639><c> those</c><01:28:37.760><c> are</c><01:28:37.920><c> skip</c>

01:28:38.189 --> 01:28:38.199 align:start position:0%
and this Arrow those are skip
 

01:28:38.199 --> 01:28:40.470 align:start position:0%
and this Arrow those are skip
connections<01:28:38.760><c> or</c><01:28:39.119><c> sometimes</c><01:28:39.360><c> called</c><01:28:39.679><c> residual</c>

01:28:40.470 --> 01:28:40.480 align:start position:0%
connections or sometimes called residual
 

01:28:40.480 --> 01:28:43.310 align:start position:0%
connections or sometimes called residual
connections<01:28:41.480><c> they</c><01:28:41.600><c> come</c><01:28:41.760><c> from</c><01:28:41.960><c> this</c><01:28:42.159><c> paper</c><01:28:43.119><c> uh</c>

01:28:43.310 --> 01:28:43.320 align:start position:0%
connections they come from this paper uh
 

01:28:43.320 --> 01:28:44.550 align:start position:0%
connections they come from this paper uh
the<01:28:43.480><c> presidual</c><01:28:43.920><c> learning</c><01:28:44.159><c> for</c><01:28:44.320><c> image</c>

01:28:44.550 --> 01:28:44.560 align:start position:0%
the presidual learning for image
 

01:28:44.560 --> 01:28:46.629 align:start position:0%
the presidual learning for image
recognition<01:28:45.480><c> from</c><01:28:45.719><c> about</c>

01:28:46.629 --> 01:28:46.639 align:start position:0%
recognition from about
 

01:28:46.639 --> 01:28:50.990 align:start position:0%
recognition from about
2015<01:28:47.639><c> uh</c><01:28:47.760><c> that</c><01:28:47.920><c> introduced</c><01:28:48.520><c> the</c><01:28:49.080><c> concept</c><01:28:50.080><c> now</c>

01:28:50.990 --> 01:28:51.000 align:start position:0%
2015 uh that introduced the concept now
 

01:28:51.000 --> 01:28:53.270 align:start position:0%
2015 uh that introduced the concept now
these<01:28:51.119><c> are</c><01:28:51.320><c> basically</c><01:28:52.080><c> what</c><01:28:52.239><c> it</c><01:28:52.360><c> means</c><01:28:52.719><c> is</c><01:28:53.040><c> you</c>

01:28:53.270 --> 01:28:53.280 align:start position:0%
these are basically what it means is you
 

01:28:53.280 --> 01:28:55.229 align:start position:0%
these are basically what it means is you
transform<01:28:53.840><c> data</c><01:28:54.480><c> but</c><01:28:54.600><c> then</c><01:28:54.679><c> you</c><01:28:54.800><c> have</c><01:28:54.880><c> a</c><01:28:55.000><c> skip</c>

01:28:55.229 --> 01:28:55.239 align:start position:0%
transform data but then you have a skip
 

01:28:55.239 --> 01:28:57.830 align:start position:0%
transform data but then you have a skip
connection<01:28:56.040><c> with</c><01:28:56.480><c> addition</c><01:28:57.480><c> from</c><01:28:57.679><c> the</c>

01:28:57.830 --> 01:28:57.840 align:start position:0%
connection with addition from the
 

01:28:57.840 --> 01:29:00.189 align:start position:0%
connection with addition from the
previous<01:28:58.320><c> features</c><01:28:59.320><c> now</c><01:28:59.520><c> the</c><01:28:59.639><c> way</c><01:28:59.800><c> I</c><01:28:59.920><c> like</c><01:29:00.080><c> to</c>

01:29:00.189 --> 01:29:00.199 align:start position:0%
previous features now the way I like to
 

01:29:00.199 --> 01:29:03.310 align:start position:0%
previous features now the way I like to
visualize<01:29:00.679><c> it</c><01:29:01.480><c> uh</c><01:29:01.639><c> that</c><01:29:01.760><c> I</c><01:29:02.000><c> prefer</c><01:29:03.000><c> is</c><01:29:03.199><c> the</c>

01:29:03.310 --> 01:29:03.320 align:start position:0%
visualize it uh that I prefer is the
 

01:29:03.320 --> 01:29:05.310 align:start position:0%
visualize it uh that I prefer is the
following<01:29:04.199><c> here</c><01:29:04.360><c> the</c><01:29:04.520><c> computation</c><01:29:05.000><c> happens</c>

01:29:05.310 --> 01:29:05.320 align:start position:0%
following here the computation happens
 

01:29:05.320 --> 01:29:08.390 align:start position:0%
following here the computation happens
from<01:29:05.560><c> the</c><01:29:06.040><c> top</c><01:29:06.320><c> to</c><01:29:06.560><c> bottom</c><01:29:07.560><c> and</c><01:29:07.800><c> basically</c><01:29:08.280><c> you</c>

01:29:08.390 --> 01:29:08.400 align:start position:0%
from the top to bottom and basically you
 

01:29:08.400 --> 01:29:11.229 align:start position:0%
from the top to bottom and basically you
have<01:29:08.639><c> this</c><01:29:09.080><c> uh</c><01:29:09.320><c> residual</c><01:29:10.040><c> pathway</c><01:29:11.040><c> and</c><01:29:11.159><c> you</c>

01:29:11.229 --> 01:29:11.239 align:start position:0%
have this uh residual pathway and you
 

01:29:11.239 --> 01:29:13.030 align:start position:0%
have this uh residual pathway and you
are<01:29:11.400><c> free</c><01:29:11.639><c> to</c><01:29:11.800><c> Fork</c><01:29:12.159><c> off</c><01:29:12.320><c> from</c><01:29:12.440><c> the</c><01:29:12.560><c> residual</c>

01:29:13.030 --> 01:29:13.040 align:start position:0%
are free to Fork off from the residual
 

01:29:13.040 --> 01:29:14.990 align:start position:0%
are free to Fork off from the residual
pathway<01:29:13.520><c> perform</c><01:29:13.840><c> some</c><01:29:14.040><c> computation</c><01:29:14.880><c> and</c>

01:29:14.990 --> 01:29:15.000 align:start position:0%
pathway perform some computation and
 

01:29:15.000 --> 01:29:16.390 align:start position:0%
pathway perform some computation and
then<01:29:15.159><c> project</c><01:29:15.560><c> back</c><01:29:15.679><c> to</c><01:29:15.800><c> the</c><01:29:15.920><c> residual</c>

01:29:16.390 --> 01:29:16.400 align:start position:0%
then project back to the residual
 

01:29:16.400 --> 01:29:19.629 align:start position:0%
then project back to the residual
pathway<01:29:16.960><c> via</c><01:29:17.520><c> addition</c><01:29:18.520><c> and</c><01:29:18.600><c> so</c><01:29:18.760><c> you</c><01:29:18.920><c> go</c><01:29:19.119><c> from</c>

01:29:19.629 --> 01:29:19.639 align:start position:0%
pathway via addition and so you go from
 

01:29:19.639 --> 01:29:22.910 align:start position:0%
pathway via addition and so you go from
the<01:29:20.639><c> the</c><01:29:20.880><c> uh</c><01:29:21.000><c> inputs</c><01:29:21.600><c> to</c><01:29:21.760><c> the</c><01:29:21.920><c> targets</c><01:29:22.639><c> only</c>

01:29:22.910 --> 01:29:22.920 align:start position:0%
the the uh inputs to the targets only
 

01:29:22.920 --> 01:29:25.910 align:start position:0%
the the uh inputs to the targets only
via<01:29:23.280><c> plus</c><01:29:23.560><c> and</c><01:29:23.719><c> plus</c><01:29:24.480><c> plus</c><01:29:25.480><c> and</c><01:29:25.560><c> the</c><01:29:25.679><c> reason</c>

01:29:25.910 --> 01:29:25.920 align:start position:0%
via plus and plus plus and the reason
 

01:29:25.920 --> 01:29:27.270 align:start position:0%
via plus and plus plus and the reason
this<01:29:26.000><c> is</c><01:29:26.119><c> useful</c><01:29:26.480><c> is</c><01:29:26.600><c> because</c><01:29:26.800><c> during</c><01:29:27.040><c> back</c>

01:29:27.270 --> 01:29:27.280 align:start position:0%
this is useful is because during back
 

01:29:27.280 --> 01:29:29.550 align:start position:0%
this is useful is because during back
propagation<01:29:27.840><c> remember</c><01:29:28.440><c> from</c><01:29:28.679><c> our</c><01:29:29.199><c> microG</c>

01:29:29.550 --> 01:29:29.560 align:start position:0%
propagation remember from our microG
 

01:29:29.560 --> 01:29:32.270 align:start position:0%
propagation remember from our microG
grad<01:29:29.840><c> video</c><01:29:30.159><c> earlier</c><01:29:31.119><c> addition</c><01:29:31.760><c> distributes</c>

01:29:32.270 --> 01:29:32.280 align:start position:0%
grad video earlier addition distributes
 

01:29:32.280 --> 01:29:34.350 align:start position:0%
grad video earlier addition distributes
gradients<01:29:32.719><c> equally</c><01:29:33.199><c> to</c><01:29:33.440><c> both</c><01:29:33.600><c> of</c><01:29:33.760><c> its</c>

01:29:34.350 --> 01:29:34.360 align:start position:0%
gradients equally to both of its
 

01:29:34.360 --> 01:29:37.310 align:start position:0%
gradients equally to both of its
branches<01:29:35.360><c> that</c><01:29:35.600><c> that</c><01:29:35.719><c> fed</c><01:29:35.960><c> as</c><01:29:36.119><c> the</c><01:29:36.239><c> input</c><01:29:37.119><c> and</c>

01:29:37.310 --> 01:29:37.320 align:start position:0%
branches that that fed as the input and
 

01:29:37.320 --> 01:29:40.310 align:start position:0%
branches that that fed as the input and
so<01:29:38.320><c> the</c><01:29:38.840><c> supervision</c><01:29:39.520><c> or</c><01:29:39.639><c> the</c><01:29:39.760><c> gradients</c><01:29:40.159><c> from</c>

01:29:40.310 --> 01:29:40.320 align:start position:0%
so the supervision or the gradients from
 

01:29:40.320 --> 01:29:43.430 align:start position:0%
so the supervision or the gradients from
the<01:29:40.440><c> loss</c><01:29:41.440><c> basically</c><01:29:42.040><c> hop</c><01:29:42.920><c> through</c><01:29:43.159><c> every</c>

01:29:43.430 --> 01:29:43.440 align:start position:0%
the loss basically hop through every
 

01:29:43.440 --> 01:29:46.790 align:start position:0%
the loss basically hop through every
addition<01:29:44.000><c> node</c><01:29:44.719><c> all</c><01:29:44.920><c> the</c><01:29:45.040><c> way</c><01:29:45.239><c> to</c><01:29:45.719><c> the</c><01:29:45.880><c> input</c>

01:29:46.790 --> 01:29:46.800 align:start position:0%
addition node all the way to the input
 

01:29:46.800 --> 01:29:50.310 align:start position:0%
addition node all the way to the input
and<01:29:46.960><c> then</c><01:29:47.199><c> also</c><01:29:47.480><c> Fork</c><01:29:47.880><c> off</c><01:29:48.280><c> into</c><01:29:48.600><c> the</c><01:29:48.719><c> residual</c>

01:29:50.310 --> 01:29:50.320 align:start position:0%
and then also Fork off into the residual
 

01:29:50.320 --> 01:29:52.229 align:start position:0%
and then also Fork off into the residual
blocks<01:29:51.320><c> but</c><01:29:51.440><c> basically</c><01:29:51.760><c> you</c><01:29:51.880><c> have</c><01:29:52.040><c> this</c>

01:29:52.229 --> 01:29:52.239 align:start position:0%
blocks but basically you have this
 

01:29:52.239 --> 01:29:53.709 align:start position:0%
blocks but basically you have this
gradient<01:29:52.600><c> Super</c><01:29:52.920><c> Highway</c><01:29:53.400><c> that</c><01:29:53.560><c> goes</c>

01:29:53.709 --> 01:29:53.719 align:start position:0%
gradient Super Highway that goes
 

01:29:53.719 --> 01:29:55.830 align:start position:0%
gradient Super Highway that goes
directly<01:29:54.239><c> from</c><01:29:54.480><c> the</c><01:29:54.800><c> supervision</c><01:29:55.600><c> all</c><01:29:55.760><c> the</c>

01:29:55.830 --> 01:29:55.840 align:start position:0%
directly from the supervision all the
 

01:29:55.840 --> 01:29:58.430 align:start position:0%
directly from the supervision all the
way<01:29:55.960><c> to</c><01:29:56.080><c> the</c><01:29:56.199><c> input</c><01:29:57.199><c> unimpeded</c><01:29:58.199><c> and</c><01:29:58.320><c> then</c>

01:29:58.430 --> 01:29:58.440 align:start position:0%
way to the input unimpeded and then
 

01:29:58.440 --> 01:29:59.830 align:start position:0%
way to the input unimpeded and then
these<01:29:58.600><c> viral</c><01:29:59.000><c> blocks</c><01:29:59.280><c> are</c><01:29:59.480><c> usually</c>

01:29:59.830 --> 01:29:59.840 align:start position:0%
these viral blocks are usually
 

01:29:59.840 --> 01:30:01.470 align:start position:0%
these viral blocks are usually
initialized<01:30:00.360><c> in</c><01:30:00.440><c> the</c><01:30:00.600><c> beginning</c><01:30:01.159><c> so</c><01:30:01.360><c> they</c>

01:30:01.470 --> 01:30:01.480 align:start position:0%
initialized in the beginning so they
 

01:30:01.480 --> 01:30:03.189 align:start position:0%
initialized in the beginning so they
contribute<01:30:02.000><c> very</c><01:30:02.199><c> very</c><01:30:02.400><c> little</c><01:30:02.760><c> if</c><01:30:02.880><c> anything</c>

01:30:03.189 --> 01:30:03.199 align:start position:0%
contribute very very little if anything
 

01:30:03.199 --> 01:30:05.229 align:start position:0%
contribute very very little if anything
to<01:30:03.320><c> the</c><01:30:03.440><c> residual</c><01:30:03.920><c> pathway</c><01:30:04.760><c> they</c><01:30:05.000><c> they</c><01:30:05.080><c> are</c>

01:30:05.229 --> 01:30:05.239 align:start position:0%
to the residual pathway they they are
 

01:30:05.239 --> 01:30:07.590 align:start position:0%
to the residual pathway they they are
initialized<01:30:05.800><c> that</c><01:30:06.000><c> way</c><01:30:06.679><c> so</c><01:30:06.960><c> in</c><01:30:07.080><c> the</c><01:30:07.199><c> beginning</c>

01:30:07.590 --> 01:30:07.600 align:start position:0%
initialized that way so in the beginning
 

01:30:07.600 --> 01:30:09.350 align:start position:0%
initialized that way so in the beginning
they<01:30:07.719><c> are</c><01:30:07.840><c> sort</c><01:30:08.040><c> of</c><01:30:08.440><c> almost</c><01:30:08.679><c> kind</c><01:30:08.760><c> of</c><01:30:08.880><c> like</c><01:30:09.040><c> not</c>

01:30:09.350 --> 01:30:09.360 align:start position:0%
they are sort of almost kind of like not
 

01:30:09.360 --> 01:30:11.629 align:start position:0%
they are sort of almost kind of like not
there<01:30:10.040><c> but</c><01:30:10.159><c> then</c><01:30:10.239><c> during</c><01:30:10.440><c> the</c><01:30:10.639><c> optimization</c>

01:30:11.629 --> 01:30:11.639 align:start position:0%
there but then during the optimization
 

01:30:11.639 --> 01:30:14.790 align:start position:0%
there but then during the optimization
they<01:30:11.920><c> come</c><01:30:12.159><c> online</c><01:30:12.719><c> over</c><01:30:13.119><c> time</c><01:30:14.119><c> and</c><01:30:14.360><c> they</c><01:30:14.679><c> uh</c>

01:30:14.790 --> 01:30:14.800 align:start position:0%
they come online over time and they uh
 

01:30:14.800 --> 01:30:17.149 align:start position:0%
they come online over time and they uh
start<01:30:14.960><c> to</c><01:30:15.360><c> contribute</c><01:30:16.360><c> but</c><01:30:16.600><c> at</c><01:30:16.719><c> least</c><01:30:16.920><c> at</c><01:30:17.040><c> the</c>

01:30:17.149 --> 01:30:17.159 align:start position:0%
start to contribute but at least at the
 

01:30:17.159 --> 01:30:18.990 align:start position:0%
start to contribute but at least at the
initialization<01:30:18.080><c> you</c><01:30:18.159><c> can</c><01:30:18.320><c> go</c><01:30:18.480><c> from</c><01:30:18.639><c> directly</c>

01:30:18.990 --> 01:30:19.000 align:start position:0%
initialization you can go from directly
 

01:30:19.000 --> 01:30:21.350 align:start position:0%
initialization you can go from directly
supervision<01:30:19.679><c> to</c><01:30:19.840><c> the</c><01:30:19.960><c> input</c><01:30:20.840><c> gradient</c><01:30:21.199><c> is</c>

01:30:21.350 --> 01:30:21.360 align:start position:0%
supervision to the input gradient is
 

01:30:21.360 --> 01:30:23.189 align:start position:0%
supervision to the input gradient is
unimpeded<01:30:21.840><c> and</c><01:30:21.960><c> just</c><01:30:22.119><c> flows</c><01:30:22.840><c> and</c><01:30:22.960><c> then</c><01:30:23.080><c> the</c>

01:30:23.189 --> 01:30:23.199 align:start position:0%
unimpeded and just flows and then the
 

01:30:23.199 --> 01:30:24.669 align:start position:0%
unimpeded and just flows and then the
blocks<01:30:23.520><c> over</c><01:30:23.760><c> time</c>

01:30:24.669 --> 01:30:24.679 align:start position:0%
blocks over time
 

01:30:24.679 --> 01:30:27.390 align:start position:0%
blocks over time
kick<01:30:24.880><c> in</c><01:30:25.760><c> and</c><01:30:25.920><c> so</c><01:30:26.239><c> that</c><01:30:26.480><c> dramatically</c><01:30:27.080><c> helps</c>

01:30:27.390 --> 01:30:27.400 align:start position:0%
kick in and so that dramatically helps
 

01:30:27.400 --> 01:30:29.310 align:start position:0%
kick in and so that dramatically helps
with<01:30:27.520><c> the</c><01:30:27.639><c> optimization</c><01:30:28.600><c> so</c><01:30:28.719><c> let's</c><01:30:28.920><c> implement</c>

01:30:29.310 --> 01:30:29.320 align:start position:0%
with the optimization so let's implement
 

01:30:29.320 --> 01:30:31.470 align:start position:0%
with the optimization so let's implement
this<01:30:29.760><c> so</c><01:30:29.920><c> coming</c><01:30:30.159><c> back</c><01:30:30.280><c> to</c><01:30:30.400><c> our</c><01:30:30.560><c> block</c><01:30:30.840><c> here</c>

01:30:31.470 --> 01:30:31.480 align:start position:0%
this so coming back to our block here
 

01:30:31.480 --> 01:30:33.709 align:start position:0%
this so coming back to our block here
basically<01:30:31.800><c> what</c><01:30:31.920><c> we</c><01:30:32.040><c> want</c><01:30:32.159><c> to</c><01:30:32.280><c> do</c><01:30:32.600><c> is</c><01:30:33.440><c> we</c><01:30:33.560><c> want</c>

01:30:33.709 --> 01:30:33.719 align:start position:0%
basically what we want to do is we want
 

01:30:33.719 --> 01:30:35.470 align:start position:0%
basically what we want to do is we want
to<01:30:34.040><c> do</c><01:30:34.239><c> xal</c>

01:30:35.470 --> 01:30:35.480 align:start position:0%
to do xal
 

01:30:35.480 --> 01:30:39.709 align:start position:0%
to do xal
X+<01:30:36.480><c> self</c><01:30:36.800><c> attention</c><01:30:37.320><c> and</c><01:30:37.480><c> xal</c><01:30:37.960><c> X+</c><01:30:38.480><c> self.</c><01:30:38.960><c> feed</c>

01:30:39.709 --> 01:30:39.719 align:start position:0%
X+ self attention and xal X+ self. feed
 

01:30:39.719 --> 01:30:43.350 align:start position:0%
X+ self attention and xal X+ self. feed
forward<01:30:40.719><c> so</c><01:30:41.040><c> this</c><01:30:41.199><c> is</c><01:30:41.520><c> X</c><01:30:42.000><c> and</c><01:30:42.199><c> then</c><01:30:42.800><c> we</c><01:30:42.920><c> Fork</c>

01:30:43.350 --> 01:30:43.360 align:start position:0%
forward so this is X and then we Fork
 

01:30:43.360 --> 01:30:45.109 align:start position:0%
forward so this is X and then we Fork
off<01:30:43.600><c> and</c><01:30:43.719><c> do</c><01:30:43.880><c> some</c><01:30:44.080><c> communication</c><01:30:44.719><c> and</c><01:30:44.880><c> come</c>

01:30:45.109 --> 01:30:45.119 align:start position:0%
off and do some communication and come
 

01:30:45.119 --> 01:30:46.910 align:start position:0%
off and do some communication and come
back<01:30:45.719><c> and</c><01:30:45.800><c> we</c><01:30:45.920><c> Fork</c><01:30:46.239><c> off</c><01:30:46.440><c> and</c><01:30:46.520><c> we</c><01:30:46.639><c> do</c><01:30:46.760><c> some</c>

01:30:46.910 --> 01:30:46.920 align:start position:0%
back and we Fork off and we do some
 

01:30:46.920 --> 01:30:49.310 align:start position:0%
back and we Fork off and we do some
computation<01:30:47.440><c> and</c><01:30:47.560><c> come</c><01:30:47.880><c> back</c><01:30:48.880><c> so</c><01:30:49.040><c> those</c><01:30:49.159><c> are</c>

01:30:49.310 --> 01:30:49.320 align:start position:0%
computation and come back so those are
 

01:30:49.320 --> 01:30:51.910 align:start position:0%
computation and come back so those are
residual<01:30:49.880><c> connections</c><01:30:50.880><c> and</c><01:30:51.000><c> then</c><01:30:51.400><c> swinging</c>

01:30:51.910 --> 01:30:51.920 align:start position:0%
residual connections and then swinging
 

01:30:51.920 --> 01:30:54.270 align:start position:0%
residual connections and then swinging
back<01:30:52.080><c> up</c><01:30:52.320><c> here</c><01:30:53.199><c> we</c><01:30:53.320><c> also</c><01:30:53.480><c> have</c><01:30:53.560><c> to</c><01:30:53.679><c> introd</c><01:30:54.040><c> use</c>

01:30:54.270 --> 01:30:54.280 align:start position:0%
back up here we also have to introd use
 

01:30:54.280 --> 01:30:57.629 align:start position:0%
back up here we also have to introd use
this<01:30:54.920><c> projection</c><01:30:55.920><c> so</c><01:30:56.119><c> nn.</c>

01:30:57.629 --> 01:30:57.639 align:start position:0%
this projection so nn.
 

01:30:57.639 --> 01:31:00.870 align:start position:0%
this projection so nn.
linear<01:30:58.639><c> and</c><01:30:59.159><c> uh</c><01:30:59.360><c> this</c><01:30:59.480><c> is</c><01:30:59.679><c> going</c><01:30:59.840><c> to</c><01:31:00.000><c> be</c>

01:31:00.870 --> 01:31:00.880 align:start position:0%
linear and uh this is going to be
 

01:31:00.880 --> 01:31:03.270 align:start position:0%
linear and uh this is going to be
from<01:31:01.880><c> after</c><01:31:02.159><c> we</c><01:31:02.320><c> concatenate</c><01:31:02.920><c> this</c><01:31:03.080><c> this</c><01:31:03.159><c> is</c>

01:31:03.270 --> 01:31:03.280 align:start position:0%
from after we concatenate this this is
 

01:31:03.280 --> 01:31:05.790 align:start position:0%
from after we concatenate this this is
the<01:31:03.440><c> prze</c><01:31:03.760><c> and</c><01:31:03.960><c> embed</c><01:31:04.920><c> so</c><01:31:05.080><c> this</c><01:31:05.199><c> is</c><01:31:05.320><c> the</c><01:31:05.440><c> output</c>

01:31:05.790 --> 01:31:05.800 align:start position:0%
the prze and embed so this is the output
 

01:31:05.800 --> 01:31:08.310 align:start position:0%
the prze and embed so this is the output
of<01:31:05.920><c> the</c><01:31:06.040><c> self</c><01:31:06.320><c> tension</c><01:31:06.880><c> itself</c><01:31:07.880><c> but</c><01:31:08.040><c> then</c><01:31:08.159><c> we</c>

01:31:08.310 --> 01:31:08.320 align:start position:0%
of the self tension itself but then we
 

01:31:08.320 --> 01:31:11.229 align:start position:0%
of the self tension itself but then we
actually<01:31:08.600><c> want</c><01:31:09.320><c> the</c><01:31:09.800><c> uh</c><01:31:10.119><c> to</c><01:31:10.280><c> apply</c><01:31:10.560><c> the</c>

01:31:11.229 --> 01:31:11.239 align:start position:0%
actually want the uh to apply the
 

01:31:11.239 --> 01:31:13.229 align:start position:0%
actually want the uh to apply the
projection<01:31:12.239><c> and</c><01:31:12.360><c> that's</c><01:31:12.560><c> the</c>

01:31:13.229 --> 01:31:13.239 align:start position:0%
projection and that's the
 

01:31:13.239 --> 01:31:15.149 align:start position:0%
projection and that's the
result<01:31:14.239><c> so</c><01:31:14.400><c> the</c><01:31:14.520><c> projection</c><01:31:14.840><c> is</c><01:31:14.960><c> just</c><01:31:15.040><c> a</c>

01:31:15.149 --> 01:31:15.159 align:start position:0%
result so the projection is just a
 

01:31:15.159 --> 01:31:16.709 align:start position:0%
result so the projection is just a
linear<01:31:15.440><c> transformation</c><01:31:15.960><c> of</c><01:31:16.080><c> the</c><01:31:16.199><c> outcome</c><01:31:16.600><c> of</c>

01:31:16.709 --> 01:31:16.719 align:start position:0%
linear transformation of the outcome of
 

01:31:16.719 --> 01:31:17.830 align:start position:0%
linear transformation of the outcome of
this

01:31:17.830 --> 01:31:17.840 align:start position:0%
this
 

01:31:17.840 --> 01:31:20.149 align:start position:0%
this
layer<01:31:18.840><c> so</c><01:31:19.040><c> that's</c><01:31:19.239><c> the</c><01:31:19.440><c> projection</c><01:31:19.840><c> back</c><01:31:20.000><c> into</c>

01:31:20.149 --> 01:31:20.159 align:start position:0%
layer so that's the projection back into
 

01:31:20.159 --> 01:31:22.430 align:start position:0%
layer so that's the projection back into
the<01:31:20.239><c> virual</c><01:31:20.880><c> pathway</c><01:31:21.880><c> and</c><01:31:22.000><c> then</c><01:31:22.119><c> here</c><01:31:22.239><c> in</c><01:31:22.320><c> a</c>

01:31:22.430 --> 01:31:22.440 align:start position:0%
the virual pathway and then here in a
 

01:31:22.440 --> 01:31:23.950 align:start position:0%
the virual pathway and then here in a
feet<01:31:22.639><c> forward</c><01:31:23.239><c> it's</c><01:31:23.400><c> going</c><01:31:23.520><c> to</c><01:31:23.600><c> be</c><01:31:23.679><c> the</c><01:31:23.760><c> same</c>

01:31:23.950 --> 01:31:23.960 align:start position:0%
feet forward it's going to be the same
 

01:31:23.960 --> 01:31:26.109 align:start position:0%
feet forward it's going to be the same
same<01:31:24.159><c> thing</c><01:31:24.960><c> I</c><01:31:25.040><c> could</c><01:31:25.199><c> have</c><01:31:25.360><c> a</c><01:31:25.560><c> a</c><01:31:25.639><c> self</c><01:31:25.920><c> doot</c>

01:31:26.109 --> 01:31:26.119 align:start position:0%
same thing I could have a a self doot
 

01:31:26.119 --> 01:31:28.229 align:start position:0%
same thing I could have a a self doot
projection<01:31:26.560><c> here</c><01:31:26.760><c> as</c><01:31:26.920><c> well</c><01:31:27.679><c> but</c><01:31:27.840><c> let</c><01:31:27.960><c> me</c><01:31:28.080><c> just</c>

01:31:28.229 --> 01:31:28.239 align:start position:0%
projection here as well but let me just
 

01:31:28.239 --> 01:31:32.590 align:start position:0%
projection here as well but let me just
simplify<01:31:28.719><c> it</c><01:31:29.719><c> and</c><01:31:30.080><c> let</c><01:31:30.520><c> me</c><01:31:31.520><c> uh</c><01:31:32.080><c> couple</c><01:31:32.400><c> it</c>

01:31:32.590 --> 01:31:32.600 align:start position:0%
simplify it and let me uh couple it
 

01:31:32.600 --> 01:31:34.870 align:start position:0%
simplify it and let me uh couple it
inside<01:31:32.880><c> the</c><01:31:32.960><c> same</c><01:31:33.159><c> sequential</c><01:31:33.800><c> container</c><01:31:34.800><c> and</c>

01:31:34.870 --> 01:31:34.880 align:start position:0%
inside the same sequential container and
 

01:31:34.880 --> 01:31:36.590 align:start position:0%
inside the same sequential container and
so<01:31:35.080><c> this</c><01:31:35.159><c> is</c><01:31:35.320><c> the</c><01:31:35.440><c> projection</c><01:31:35.920><c> layer</c><01:31:36.320><c> going</c>

01:31:36.590 --> 01:31:36.600 align:start position:0%
so this is the projection layer going
 

01:31:36.600 --> 01:31:38.310 align:start position:0%
so this is the projection layer going
back<01:31:36.719><c> into</c><01:31:36.920><c> the</c><01:31:37.040><c> residual</c>

01:31:38.310 --> 01:31:38.320 align:start position:0%
back into the residual
 

01:31:38.320 --> 01:31:40.229 align:start position:0%
back into the residual
pathway<01:31:39.320><c> and</c>

01:31:40.229 --> 01:31:40.239 align:start position:0%
pathway and
 

01:31:40.239 --> 01:31:42.990 align:start position:0%
pathway and
so<01:31:41.239><c> that's</c><01:31:41.679><c> uh</c><01:31:41.840><c> well</c><01:31:42.000><c> that's</c><01:31:42.159><c> it</c><01:31:42.639><c> so</c><01:31:42.800><c> now</c><01:31:42.920><c> we</c>

01:31:42.990 --> 01:31:43.000 align:start position:0%
so that's uh well that's it so now we
 

01:31:43.000 --> 01:31:44.709 align:start position:0%
so that's uh well that's it so now we
can<01:31:43.119><c> train</c><01:31:43.400><c> this</c><01:31:43.800><c> so</c><01:31:43.920><c> I</c><01:31:44.000><c> implemented</c><01:31:44.440><c> one</c><01:31:44.560><c> more</c>

01:31:44.709 --> 01:31:44.719 align:start position:0%
can train this so I implemented one more
 

01:31:44.719 --> 01:31:47.430 align:start position:0%
can train this so I implemented one more
small<01:31:45.000><c> change</c><01:31:45.920><c> when</c><01:31:46.040><c> you</c><01:31:46.159><c> look</c><01:31:46.360><c> into</c><01:31:46.800><c> the</c>

01:31:47.430 --> 01:31:47.440 align:start position:0%
small change when you look into the
 

01:31:47.440 --> 01:31:49.510 align:start position:0%
small change when you look into the
paper<01:31:47.760><c> again</c><01:31:48.400><c> you</c><01:31:48.600><c> see</c><01:31:49.000><c> that</c><01:31:49.400><c> the</c>

01:31:49.510 --> 01:31:49.520 align:start position:0%
paper again you see that the
 

01:31:49.520 --> 01:31:51.430 align:start position:0%
paper again you see that the
dimensionality<01:31:50.119><c> of</c><01:31:50.280><c> input</c><01:31:50.560><c> and</c><01:31:50.679><c> output</c><01:31:51.239><c> is</c>

01:31:51.430 --> 01:31:51.440 align:start position:0%
dimensionality of input and output is
 

01:31:51.440 --> 01:31:53.350 align:start position:0%
dimensionality of input and output is
512<01:31:51.960><c> for</c><01:31:52.159><c> them</c><01:31:52.679><c> and</c><01:31:52.800><c> they're</c><01:31:52.920><c> saying</c><01:31:53.159><c> that</c><01:31:53.239><c> the</c>

01:31:53.350 --> 01:31:53.360 align:start position:0%
512 for them and they're saying that the
 

01:31:53.360 --> 01:31:55.310 align:start position:0%
512 for them and they're saying that the
inner<01:31:53.560><c> layer</c><01:31:54.199><c> here</c><01:31:54.320><c> in</c><01:31:54.440><c> the</c><01:31:54.560><c> feet</c><01:31:54.760><c> forward</c><01:31:55.159><c> has</c>

01:31:55.310 --> 01:31:55.320 align:start position:0%
inner layer here in the feet forward has
 

01:31:55.320 --> 01:31:57.510 align:start position:0%
inner layer here in the feet forward has
dimensionality<01:31:55.840><c> of</c><01:31:56.119><c> 248</c><01:31:57.119><c> so</c><01:31:57.280><c> there's</c><01:31:57.400><c> a</c>

01:31:57.510 --> 01:31:57.520 align:start position:0%
dimensionality of 248 so there's a
 

01:31:57.520 --> 01:32:00.470 align:start position:0%
dimensionality of 248 so there's a
multiplier<01:31:58.040><c> of</c><01:31:58.400><c> four</c><01:31:59.400><c> and</c><01:31:59.560><c> so</c><01:32:00.040><c> the</c><01:32:00.159><c> inner</c>

01:32:00.470 --> 01:32:00.480 align:start position:0%
multiplier of four and so the inner
 

01:32:00.480 --> 01:32:02.870 align:start position:0%
multiplier of four and so the inner
layer<01:32:00.800><c> of</c><01:32:00.880><c> the</c><01:32:01.000><c> feet</c><01:32:01.199><c> forward</c><01:32:01.679><c> Network</c><01:32:02.679><c> should</c>

01:32:02.870 --> 01:32:02.880 align:start position:0%
layer of the feet forward Network should
 

01:32:02.880 --> 01:32:04.149 align:start position:0%
layer of the feet forward Network should
be<01:32:03.000><c> multiplied</c><01:32:03.440><c> by</c><01:32:03.560><c> four</c><01:32:03.760><c> in</c><01:32:03.840><c> terms</c><01:32:04.040><c> of</c>

01:32:04.149 --> 01:32:04.159 align:start position:0%
be multiplied by four in terms of
 

01:32:04.159 --> 01:32:05.990 align:start position:0%
be multiplied by four in terms of
Channel<01:32:04.480><c> sizes</c><01:32:05.119><c> so</c><01:32:05.280><c> I</c><01:32:05.400><c> came</c><01:32:05.600><c> here</c><01:32:05.800><c> and</c><01:32:05.920><c> I</c>

01:32:05.990 --> 01:32:06.000 align:start position:0%
Channel sizes so I came here and I
 

01:32:06.000 --> 01:32:08.590 align:start position:0%
Channel sizes so I came here and I
multiplied<01:32:06.520><c> four</c><01:32:06.760><c> times</c><01:32:07.040><c> embed</c><01:32:07.960><c> here</c><01:32:08.280><c> for</c><01:32:08.480><c> the</c>

01:32:08.590 --> 01:32:08.600 align:start position:0%
multiplied four times embed here for the
 

01:32:08.600 --> 01:32:10.590 align:start position:0%
multiplied four times embed here for the
feed<01:32:08.840><c> forward</c><01:32:09.639><c> and</c><01:32:09.760><c> then</c><01:32:10.000><c> from</c><01:32:10.159><c> four</c><01:32:10.360><c> times</c>

01:32:10.590 --> 01:32:10.600 align:start position:0%
feed forward and then from four times
 

01:32:10.600 --> 01:32:13.270 align:start position:0%
feed forward and then from four times
nmed<01:32:11.320><c> coming</c><01:32:11.639><c> back</c><01:32:11.800><c> down</c><01:32:11.960><c> to</c><01:32:12.119><c> nmed</c><01:32:12.840><c> when</c><01:32:13.000><c> we</c><01:32:13.119><c> go</c>

01:32:13.270 --> 01:32:13.280 align:start position:0%
nmed coming back down to nmed when we go
 

01:32:13.280 --> 01:32:15.510 align:start position:0%
nmed coming back down to nmed when we go
back<01:32:13.400><c> to</c><01:32:13.520><c> the</c><01:32:13.679><c> pro</c><01:32:14.040><c> uh</c><01:32:14.159><c> to</c><01:32:14.320><c> the</c><01:32:14.520><c> projection</c><01:32:15.280><c> so</c>

01:32:15.510 --> 01:32:15.520 align:start position:0%
back to the pro uh to the projection so
 

01:32:15.520 --> 01:32:17.030 align:start position:0%
back to the pro uh to the projection so
adding<01:32:15.760><c> a</c><01:32:15.880><c> bit</c><01:32:16.000><c> of</c><01:32:16.119><c> computation</c><01:32:16.639><c> here</c><01:32:16.840><c> and</c>

01:32:17.030 --> 01:32:17.040 align:start position:0%
adding a bit of computation here and
 

01:32:17.040 --> 01:32:19.149 align:start position:0%
adding a bit of computation here and
growing<01:32:17.560><c> that</c><01:32:17.960><c> layer</c><01:32:18.639><c> that</c><01:32:18.760><c> is</c><01:32:18.880><c> in</c><01:32:19.040><c> the</c>

01:32:19.149 --> 01:32:19.159 align:start position:0%
growing that layer that is in the
 

01:32:19.159 --> 01:32:21.109 align:start position:0%
growing that layer that is in the
residual<01:32:19.600><c> block</c><01:32:19.880><c> on</c><01:32:19.960><c> the</c><01:32:20.239><c> side</c><01:32:20.880><c> of</c><01:32:21.000><c> the</c>

01:32:21.109 --> 01:32:21.119 align:start position:0%
residual block on the side of the
 

01:32:21.119 --> 01:32:22.109 align:start position:0%
residual block on the side of the
residual

01:32:22.109 --> 01:32:22.119 align:start position:0%
residual
 

01:32:22.119 --> 01:32:24.350 align:start position:0%
residual
pathway<01:32:23.119><c> and</c><01:32:23.239><c> then</c><01:32:23.400><c> I</c><01:32:23.480><c> train</c><01:32:23.960><c> this</c><01:32:24.119><c> and</c><01:32:24.239><c> we</c>

01:32:24.350 --> 01:32:24.360 align:start position:0%
pathway and then I train this and we
 

01:32:24.360 --> 01:32:27.109 align:start position:0%
pathway and then I train this and we
actually<01:32:24.600><c> get</c><01:32:24.760><c> down</c><01:32:24.960><c> all</c><01:32:25.119><c> the</c><01:32:25.199><c> way</c><01:32:25.360><c> to</c><01:32:26.040><c> uh</c><01:32:26.199><c> 2.08</c>

01:32:27.109 --> 01:32:27.119 align:start position:0%
actually get down all the way to uh 2.08
 

01:32:27.119 --> 01:32:29.030 align:start position:0%
actually get down all the way to uh 2.08
validation<01:32:27.560><c> loss</c><01:32:28.199><c> and</c><01:32:28.320><c> we</c><01:32:28.440><c> also</c><01:32:28.600><c> see</c><01:32:28.800><c> that</c>

01:32:29.030 --> 01:32:29.040 align:start position:0%
validation loss and we also see that
 

01:32:29.040 --> 01:32:30.709 align:start position:0%
validation loss and we also see that
network<01:32:29.320><c> is</c><01:32:29.400><c> starting</c><01:32:29.639><c> to</c><01:32:29.760><c> get</c><01:32:29.880><c> big</c><01:32:30.119><c> enough</c>

01:32:30.709 --> 01:32:30.719 align:start position:0%
network is starting to get big enough
 

01:32:30.719 --> 01:32:32.229 align:start position:0%
network is starting to get big enough
that<01:32:30.840><c> our</c><01:32:30.960><c> train</c><01:32:31.239><c> loss</c><01:32:31.480><c> is</c><01:32:31.600><c> getting</c><01:32:31.880><c> ahead</c><01:32:32.119><c> of</c>

01:32:32.229 --> 01:32:32.239 align:start position:0%
that our train loss is getting ahead of
 

01:32:32.239 --> 01:32:33.870 align:start position:0%
that our train loss is getting ahead of
validation<01:32:32.679><c> loss</c><01:32:33.000><c> so</c><01:32:33.119><c> we're</c><01:32:33.239><c> starting</c><01:32:33.480><c> to</c><01:32:33.600><c> see</c>

01:32:33.870 --> 01:32:33.880 align:start position:0%
validation loss so we're starting to see
 

01:32:33.880 --> 01:32:35.229 align:start position:0%
validation loss so we're starting to see
like<01:32:34.000><c> a</c><01:32:34.119><c> little</c><01:32:34.280><c> bit</c><01:32:34.400><c> of</c>

01:32:35.229 --> 01:32:35.239 align:start position:0%
like a little bit of
 

01:32:35.239 --> 01:32:38.870 align:start position:0%
like a little bit of
overfitting<01:32:36.239><c> and</c><01:32:36.800><c> um</c><01:32:37.080><c> our</c><01:32:37.639><c> our</c>

01:32:38.870 --> 01:32:38.880 align:start position:0%
overfitting and um our our
 

01:32:38.880 --> 01:32:41.229 align:start position:0%
overfitting and um our our
um<01:32:39.880><c> uh</c><01:32:40.040><c> Generations</c><01:32:40.560><c> here</c><01:32:40.679><c> are</c><01:32:40.840><c> still</c><01:32:41.040><c> not</c>

01:32:41.229 --> 01:32:41.239 align:start position:0%
um uh Generations here are still not
 

01:32:41.239 --> 01:32:42.910 align:start position:0%
um uh Generations here are still not
amazing<01:32:41.639><c> but</c><01:32:41.800><c> at</c><01:32:41.920><c> least</c><01:32:42.239><c> you</c><01:32:42.360><c> see</c><01:32:42.560><c> that</c><01:32:42.719><c> we</c><01:32:42.800><c> can</c>

01:32:42.910 --> 01:32:42.920 align:start position:0%
amazing but at least you see that we can
 

01:32:42.920 --> 01:32:46.750 align:start position:0%
amazing but at least you see that we can
see<01:32:43.159><c> like</c><01:32:43.360><c> is</c><01:32:43.639><c> here</c><01:32:43.960><c> this</c><01:32:44.239><c> now</c><01:32:44.800><c> grief</c><01:32:45.560><c> syn</c><01:32:46.560><c> like</c>

01:32:46.750 --> 01:32:46.760 align:start position:0%
see like is here this now grief syn like
 

01:32:46.760 --> 01:32:48.950 align:start position:0%
see like is here this now grief syn like
this<01:32:46.880><c> starts</c><01:32:47.199><c> to</c><01:32:47.480><c> almost</c><01:32:47.719><c> look</c><01:32:47.960><c> like</c><01:32:48.119><c> English</c>

01:32:48.950 --> 01:32:48.960 align:start position:0%
this starts to almost look like English
 

01:32:48.960 --> 01:32:50.950 align:start position:0%
this starts to almost look like English
so<01:32:49.600><c> um</c><01:32:50.000><c> yeah</c><01:32:50.119><c> we're</c><01:32:50.239><c> starting</c><01:32:50.480><c> to</c><01:32:50.639><c> really</c><01:32:50.800><c> get</c>

01:32:50.950 --> 01:32:50.960 align:start position:0%
so um yeah we're starting to really get
 

01:32:50.960 --> 01:32:52.910 align:start position:0%
so um yeah we're starting to really get
there<01:32:51.719><c> okay</c><01:32:51.840><c> and</c><01:32:52.000><c> the</c><01:32:52.119><c> second</c><01:32:52.440><c> Innovation</c>

01:32:52.910 --> 01:32:52.920 align:start position:0%
there okay and the second Innovation
 

01:32:52.920 --> 01:32:54.669 align:start position:0%
there okay and the second Innovation
that<01:32:53.000><c> is</c><01:32:53.199><c> very</c><01:32:53.360><c> helpful</c><01:32:53.840><c> for</c><01:32:54.000><c> optimizing</c><01:32:54.480><c> very</c>

01:32:54.669 --> 01:32:54.679 align:start position:0%
that is very helpful for optimizing very
 

01:32:54.679 --> 01:32:57.070 align:start position:0%
that is very helpful for optimizing very
deep<01:32:54.880><c> neural</c><01:32:55.159><c> networks</c><01:32:55.719><c> is</c><01:32:55.960><c> right</c><01:32:56.159><c> here</c><01:32:56.840><c> so</c><01:32:57.000><c> we</c>

01:32:57.070 --> 01:32:57.080 align:start position:0%
deep neural networks is right here so we
 

01:32:57.080 --> 01:32:58.229 align:start position:0%
deep neural networks is right here so we
have<01:32:57.239><c> this</c><01:32:57.400><c> addition</c><01:32:57.800><c> now</c><01:32:57.960><c> that's</c><01:32:58.119><c> the</c>

01:32:58.229 --> 01:32:58.239 align:start position:0%
have this addition now that's the
 

01:32:58.239 --> 01:33:00.470 align:start position:0%
have this addition now that's the
residual<01:32:58.760><c> part</c><01:32:59.280><c> but</c><01:32:59.480><c> this</c><01:32:59.639><c> Norm</c><01:33:00.000><c> is</c><01:33:00.119><c> referring</c>

01:33:00.470 --> 01:33:00.480 align:start position:0%
residual part but this Norm is referring
 

01:33:00.480 --> 01:33:03.109 align:start position:0%
residual part but this Norm is referring
to<01:33:00.639><c> something</c><01:33:00.880><c> called</c><01:33:01.080><c> layer</c><01:33:01.520><c> Norm</c><01:33:02.520><c> so</c><01:33:02.800><c> layer</c>

01:33:03.109 --> 01:33:03.119 align:start position:0%
to something called layer Norm so layer
 

01:33:03.119 --> 01:33:04.590 align:start position:0%
to something called layer Norm so layer
Norm<01:33:03.320><c> is</c><01:33:03.400><c> implemented</c><01:33:03.760><c> in</c><01:33:03.880><c> pytorch</c><01:33:04.360><c> it's</c><01:33:04.480><c> a</c>

01:33:04.590 --> 01:33:04.600 align:start position:0%
Norm is implemented in pytorch it's a
 

01:33:04.600 --> 01:33:09.189 align:start position:0%
Norm is implemented in pytorch it's a
paper<01:33:04.920><c> that</c><01:33:05.080><c> came</c><01:33:05.280><c> out</c><01:33:06.000><c> a</c><01:33:06.159><c> while</c><01:33:06.440><c> back</c><01:33:07.480><c> here</c>

01:33:09.189 --> 01:33:09.199 align:start position:0%
paper that came out a while back here
 

01:33:09.199 --> 01:33:11.590 align:start position:0%
paper that came out a while back here
um<01:33:10.199><c> and</c><01:33:10.360><c> layer</c><01:33:10.639><c> Norm</c><01:33:10.920><c> is</c><01:33:11.040><c> very</c><01:33:11.239><c> very</c><01:33:11.360><c> similar</c>

01:33:11.590 --> 01:33:11.600 align:start position:0%
um and layer Norm is very very similar
 

01:33:11.600 --> 01:33:14.590 align:start position:0%
um and layer Norm is very very similar
to<01:33:11.760><c> bash</c><01:33:11.960><c> Norm</c><01:33:12.679><c> so</c><01:33:12.920><c> remember</c><01:33:13.320><c> back</c><01:33:13.520><c> to</c><01:33:14.440><c> our</c>

01:33:14.590 --> 01:33:14.600 align:start position:0%
to bash Norm so remember back to our
 

01:33:14.600 --> 01:33:16.350 align:start position:0%
to bash Norm so remember back to our
make<01:33:14.880><c> more</c><01:33:15.000><c> series</c><01:33:15.320><c> part</c><01:33:15.560><c> three</c><01:33:16.199><c> we</c>

01:33:16.350 --> 01:33:16.360 align:start position:0%
make more series part three we
 

01:33:16.360 --> 01:33:17.709 align:start position:0%
make more series part three we
implemented<01:33:16.800><c> bash</c>

01:33:17.709 --> 01:33:17.719 align:start position:0%
implemented bash
 

01:33:17.719 --> 01:33:19.830 align:start position:0%
implemented bash
normalization<01:33:18.719><c> and</c><01:33:19.000><c> uh</c><01:33:19.119><c> bash</c><01:33:19.320><c> normalization</c>

01:33:19.830 --> 01:33:19.840 align:start position:0%
normalization and uh bash normalization
 

01:33:19.840 --> 01:33:22.950 align:start position:0%
normalization and uh bash normalization
basically<01:33:20.159><c> just</c><01:33:20.320><c> made</c><01:33:20.600><c> sure</c><01:33:21.600><c> that</c><01:33:22.159><c> um</c><01:33:22.639><c> Across</c>

01:33:22.950 --> 01:33:22.960 align:start position:0%
basically just made sure that um Across
 

01:33:22.960 --> 01:33:25.910 align:start position:0%
basically just made sure that um Across
The<01:33:23.119><c> Bash</c><01:33:23.360><c> dimension</c><01:33:24.159><c> any</c><01:33:24.480><c> individual</c><01:33:24.960><c> neuron</c>

01:33:25.910 --> 01:33:25.920 align:start position:0%
The Bash dimension any individual neuron
 

01:33:25.920 --> 01:33:30.430 align:start position:0%
The Bash dimension any individual neuron
had<01:33:26.440><c> unit</c><01:33:27.239><c> uh</c><01:33:27.560><c> Gan</c><01:33:28.560><c> um</c><01:33:29.280><c> distribution</c><01:33:30.199><c> so</c><01:33:30.320><c> it</c>

01:33:30.430 --> 01:33:30.440 align:start position:0%
had unit uh Gan um distribution so it
 

01:33:30.440 --> 01:33:32.270 align:start position:0%
had unit uh Gan um distribution so it
was<01:33:30.600><c> zero</c><01:33:30.840><c> mean</c><01:33:31.280><c> and</c><01:33:31.600><c> unit</c><01:33:31.960><c> standard</c>

01:33:32.270 --> 01:33:32.280 align:start position:0%
was zero mean and unit standard
 

01:33:32.280 --> 01:33:35.830 align:start position:0%
was zero mean and unit standard
deviation<01:33:32.960><c> one</c><01:33:33.239><c> standard</c><01:33:33.560><c> deviation</c><01:33:34.840><c> output</c>

01:33:35.830 --> 01:33:35.840 align:start position:0%
deviation one standard deviation output
 

01:33:35.840 --> 01:33:37.790 align:start position:0%
deviation one standard deviation output
so<01:33:36.119><c> what</c><01:33:36.239><c> I</c><01:33:36.360><c> did</c><01:33:36.560><c> here</c><01:33:36.760><c> is</c><01:33:36.880><c> I'm</c><01:33:37.119><c> copy</c><01:33:37.400><c> pasting</c>

01:33:37.790 --> 01:33:37.800 align:start position:0%
so what I did here is I'm copy pasting
 

01:33:37.800 --> 01:33:39.350 align:start position:0%
so what I did here is I'm copy pasting
the<01:33:37.920><c> bashor</c><01:33:38.320><c> 1D</c><01:33:38.639><c> that</c><01:33:38.760><c> we</c><01:33:38.840><c> developed</c><01:33:39.199><c> in</c><01:33:39.239><c> our</c>

01:33:39.350 --> 01:33:39.360 align:start position:0%
the bashor 1D that we developed in our
 

01:33:39.360 --> 01:33:42.430 align:start position:0%
the bashor 1D that we developed in our
make<01:33:39.560><c> more</c><01:33:40.000><c> series</c><01:33:41.000><c> and</c><01:33:41.760><c> see</c><01:33:42.040><c> here</c><01:33:42.159><c> we</c><01:33:42.280><c> can</c>

01:33:42.430 --> 01:33:42.440 align:start position:0%
make more series and see here we can
 

01:33:42.440 --> 01:33:44.830 align:start position:0%
make more series and see here we can
initialize<01:33:43.320><c> for</c><01:33:43.480><c> example</c><01:33:43.800><c> this</c><01:33:43.960><c> module</c><01:33:44.719><c> and</c>

01:33:44.830 --> 01:33:44.840 align:start position:0%
initialize for example this module and
 

01:33:44.840 --> 01:33:47.149 align:start position:0%
initialize for example this module and
we<01:33:44.920><c> can</c><01:33:45.119><c> have</c><01:33:45.239><c> a</c><01:33:45.440><c> batch</c><01:33:45.679><c> of</c><01:33:45.960><c> 32</c><01:33:46.960><c> 100</c>

01:33:47.149 --> 01:33:47.159 align:start position:0%
we can have a batch of 32 100
 

01:33:47.159 --> 01:33:48.669 align:start position:0%
we can have a batch of 32 100
dimensional<01:33:47.600><c> vectors</c><01:33:48.000><c> feeding</c><01:33:48.360><c> through</c><01:33:48.560><c> the</c>

01:33:48.669 --> 01:33:48.679 align:start position:0%
dimensional vectors feeding through the
 

01:33:48.679 --> 01:33:52.430 align:start position:0%
dimensional vectors feeding through the
bachor<01:33:49.239><c> layer</c><01:33:50.239><c> so</c><01:33:50.400><c> what</c><01:33:50.560><c> this</c><01:33:50.719><c> does</c><01:33:51.239><c> is</c><01:33:51.360><c> it</c>

01:33:52.430 --> 01:33:52.440 align:start position:0%
bachor layer so what this does is it
 

01:33:52.440 --> 01:33:54.629 align:start position:0%
bachor layer so what this does is it
guarantees<01:33:53.440><c> that</c><01:33:53.560><c> when</c><01:33:53.840><c> we</c><01:33:53.920><c> look</c><01:33:54.040><c> at</c><01:33:54.239><c> just</c><01:33:54.400><c> the</c>

01:33:54.629 --> 01:33:54.639 align:start position:0%
guarantees that when we look at just the
 

01:33:54.639 --> 01:33:58.310 align:start position:0%
guarantees that when we look at just the
zeroth<01:33:55.440><c> column</c><01:33:56.440><c> it's</c><01:33:56.600><c> a</c><01:33:57.159><c> zero</c><01:33:57.440><c> mean</c><01:33:58.000><c> one</c>

01:33:58.310 --> 01:33:58.320 align:start position:0%
zeroth column it's a zero mean one
 

01:33:58.320 --> 01:34:00.709 align:start position:0%
zeroth column it's a zero mean one
standard<01:33:58.760><c> deviation</c><01:33:59.760><c> so</c><01:33:59.960><c> it's</c><01:34:00.119><c> normalizing</c>

01:34:00.709 --> 01:34:00.719 align:start position:0%
standard deviation so it's normalizing
 

01:34:00.719 --> 01:34:04.109 align:start position:0%
standard deviation so it's normalizing
every<01:34:00.920><c> single</c><01:34:01.360><c> column</c><01:34:01.760><c> of</c><01:34:02.000><c> this</c><01:34:02.480><c> uh</c><01:34:02.960><c> input</c><01:34:03.960><c> now</c>

01:34:04.109 --> 01:34:04.119 align:start position:0%
every single column of this uh input now
 

01:34:04.119 --> 01:34:06.229 align:start position:0%
every single column of this uh input now
the<01:34:04.239><c> rows</c><01:34:04.520><c> are</c><01:34:04.760><c> not</c><01:34:05.719><c> uh</c><01:34:05.840><c> going</c><01:34:06.000><c> to</c><01:34:06.119><c> be</c>

01:34:06.229 --> 01:34:06.239 align:start position:0%
the rows are not uh going to be
 

01:34:06.239 --> 01:34:07.990 align:start position:0%
the rows are not uh going to be
normalized<01:34:06.719><c> by</c><01:34:06.840><c> default</c><01:34:07.520><c> because</c><01:34:07.719><c> we're</c><01:34:07.840><c> just</c>

01:34:07.990 --> 01:34:08.000 align:start position:0%
normalized by default because we're just
 

01:34:08.000 --> 01:34:10.149 align:start position:0%
normalized by default because we're just
normalizing<01:34:08.760><c> columns</c><01:34:09.760><c> so</c><01:34:09.880><c> let's</c><01:34:10.040><c> now</c>

01:34:10.149 --> 01:34:10.159 align:start position:0%
normalizing columns so let's now
 

01:34:10.159 --> 01:34:12.430 align:start position:0%
normalizing columns so let's now
Implement<01:34:10.520><c> layer</c><01:34:10.840><c> Norm</c><01:34:11.840><c> uh</c><01:34:12.000><c> it's</c><01:34:12.239><c> very</c>

01:34:12.430 --> 01:34:12.440 align:start position:0%
Implement layer Norm uh it's very
 

01:34:12.440 --> 01:34:15.590 align:start position:0%
Implement layer Norm uh it's very
complicated<01:34:13.320><c> look</c><01:34:14.119><c> we</c><01:34:14.280><c> come</c><01:34:14.520><c> here</c><01:34:15.080><c> we</c><01:34:15.199><c> change</c>

01:34:15.590 --> 01:34:15.600 align:start position:0%
complicated look we come here we change
 

01:34:15.600 --> 01:34:18.270 align:start position:0%
complicated look we come here we change
this<01:34:15.840><c> from</c><01:34:16.040><c> zero</c><01:34:16.560><c> to</c><01:34:16.840><c> one</c><01:34:17.840><c> so</c><01:34:18.000><c> we</c><01:34:18.080><c> don't</c>

01:34:18.270 --> 01:34:18.280 align:start position:0%
this from zero to one so we don't
 

01:34:18.280 --> 01:34:20.910 align:start position:0%
this from zero to one so we don't
normalize<01:34:18.960><c> The</c><01:34:19.119><c> Columns</c><01:34:19.560><c> we</c><01:34:19.719><c> normalize</c><01:34:20.440><c> the</c>

01:34:20.910 --> 01:34:20.920 align:start position:0%
normalize The Columns we normalize the
 

01:34:20.920 --> 01:34:23.350 align:start position:0%
normalize The Columns we normalize the
rows<01:34:21.920><c> and</c><01:34:22.280><c> now</c><01:34:22.480><c> we've</c><01:34:22.679><c> implemented</c><01:34:23.119><c> layer</c>

01:34:23.350 --> 01:34:23.360 align:start position:0%
rows and now we've implemented layer
 

01:34:23.360 --> 01:34:25.070 align:start position:0%
rows and now we've implemented layer
Norm

01:34:25.070 --> 01:34:25.080 align:start position:0%
Norm
 

01:34:25.080 --> 01:34:28.149 align:start position:0%
Norm
so<01:34:25.760><c> now</c><01:34:26.000><c> the</c><01:34:26.159><c> columns</c><01:34:26.560><c> are</c><01:34:26.760><c> not</c><01:34:27.080><c> going</c><01:34:27.239><c> to</c><01:34:27.360><c> be</c>

01:34:28.149 --> 01:34:28.159 align:start position:0%
so now the columns are not going to be
 

01:34:28.159 --> 01:34:31.470 align:start position:0%
so now the columns are not going to be
normalized<01:34:29.159><c> um</c><01:34:30.000><c> but</c><01:34:30.520><c> the</c><01:34:30.840><c> rows</c><01:34:31.159><c> are</c><01:34:31.280><c> going</c><01:34:31.400><c> to</c>

01:34:31.470 --> 01:34:31.480 align:start position:0%
normalized um but the rows are going to
 

01:34:31.480 --> 01:34:33.189 align:start position:0%
normalized um but the rows are going to
be<01:34:31.600><c> normalized</c><01:34:32.239><c> for</c><01:34:32.440><c> every</c><01:34:32.679><c> individual</c>

01:34:33.189 --> 01:34:33.199 align:start position:0%
be normalized for every individual
 

01:34:33.199 --> 01:34:35.109 align:start position:0%
be normalized for every individual
example<01:34:33.639><c> it's</c><01:34:34.000><c> 100</c><01:34:34.199><c> dimensional</c><01:34:34.639><c> Vector</c><01:34:34.960><c> is</c>

01:34:35.109 --> 01:34:35.119 align:start position:0%
example it's 100 dimensional Vector is
 

01:34:35.119 --> 01:34:38.070 align:start position:0%
example it's 100 dimensional Vector is
normalized<01:34:36.000><c> uh</c><01:34:36.119><c> in</c><01:34:36.280><c> this</c><01:34:36.480><c> way</c><01:34:37.320><c> and</c><01:34:37.520><c> because</c>

01:34:38.070 --> 01:34:38.080 align:start position:0%
normalized uh in this way and because
 

01:34:38.080 --> 01:34:40.270 align:start position:0%
normalized uh in this way and because
our<01:34:38.400><c> computation</c><01:34:38.920><c> Now</c><01:34:39.080><c> does</c><01:34:39.239><c> not</c><01:34:39.400><c> span</c><01:34:39.760><c> across</c>

01:34:40.270 --> 01:34:40.280 align:start position:0%
our computation Now does not span across
 

01:34:40.280 --> 01:34:43.270 align:start position:0%
our computation Now does not span across
examples<01:34:41.280><c> we</c><01:34:41.480><c> can</c><01:34:41.880><c> delete</c><01:34:42.600><c> all</c><01:34:42.719><c> of</c><01:34:42.920><c> this</c>

01:34:43.270 --> 01:34:43.280 align:start position:0%
examples we can delete all of this
 

01:34:43.280 --> 01:34:45.790 align:start position:0%
examples we can delete all of this
buffers<01:34:43.880><c> stuff</c><01:34:44.800><c> uh</c><01:34:44.960><c> because</c><01:34:45.440><c> uh</c><01:34:45.520><c> we</c><01:34:45.639><c> can</c>

01:34:45.790 --> 01:34:45.800 align:start position:0%
buffers stuff uh because uh we can
 

01:34:45.800 --> 01:34:48.669 align:start position:0%
buffers stuff uh because uh we can
always<01:34:46.080><c> apply</c><01:34:46.440><c> this</c><01:34:47.199><c> operation</c><01:34:48.199><c> and</c><01:34:48.560><c> don't</c>

01:34:48.669 --> 01:34:48.679 align:start position:0%
always apply this operation and don't
 

01:34:48.679 --> 01:34:50.870 align:start position:0%
always apply this operation and don't
need<01:34:48.840><c> to</c><01:34:48.920><c> maintain</c><01:34:49.239><c> any</c><01:34:49.360><c> running</c><01:34:49.679><c> buffers</c><01:34:50.679><c> so</c>

01:34:50.870 --> 01:34:50.880 align:start position:0%
need to maintain any running buffers so
 

01:34:50.880 --> 01:34:52.270 align:start position:0%
need to maintain any running buffers so
we<01:34:51.000><c> don't</c><01:34:51.199><c> need</c><01:34:51.520><c> the</c>

01:34:52.270 --> 01:34:52.280 align:start position:0%
we don't need the
 

01:34:52.280 --> 01:34:54.270 align:start position:0%
we don't need the
buffers<01:34:53.280><c> uh</c><01:34:53.400><c> we</c>

01:34:54.270 --> 01:34:54.280 align:start position:0%
buffers uh we
 

01:34:54.280 --> 01:34:56.270 align:start position:0%
buffers uh we
don't<01:34:55.280><c> There's</c><01:34:55.440><c> no</c><01:34:55.600><c> distinction</c><01:34:56.000><c> between</c>

01:34:56.270 --> 01:34:56.280 align:start position:0%
don't There's no distinction between
 

01:34:56.280 --> 01:34:58.189 align:start position:0%
don't There's no distinction between
training<01:34:56.639><c> and</c><01:34:56.840><c> test</c>

01:34:58.189 --> 01:34:58.199 align:start position:0%
training and test
 

01:34:58.199 --> 01:35:00.790 align:start position:0%
training and test
time<01:34:59.199><c> uh</c><01:34:59.560><c> and</c><01:34:59.840><c> we</c><01:34:59.960><c> don't</c><01:35:00.119><c> need</c><01:35:00.360><c> these</c><01:35:00.480><c> running</c>

01:35:00.790 --> 01:35:00.800 align:start position:0%
time uh and we don't need these running
 

01:35:00.800 --> 01:35:03.750 align:start position:0%
time uh and we don't need these running
buffers<01:35:01.800><c> we</c><01:35:01.920><c> do</c><01:35:02.199><c> keep</c><01:35:02.480><c> gamma</c><01:35:02.760><c> and</c><01:35:02.960><c> beta</c><01:35:03.639><c> we</c>

01:35:03.750 --> 01:35:03.760 align:start position:0%
buffers we do keep gamma and beta we
 

01:35:03.760 --> 01:35:05.510 align:start position:0%
buffers we do keep gamma and beta we
don't<01:35:03.960><c> need</c><01:35:04.159><c> the</c><01:35:04.280><c> momentum</c><01:35:04.840><c> we</c><01:35:04.920><c> don't</c><01:35:05.119><c> care</c><01:35:05.440><c> if</c>

01:35:05.510 --> 01:35:05.520 align:start position:0%
don't need the momentum we don't care if
 

01:35:05.520 --> 01:35:08.790 align:start position:0%
don't need the momentum we don't care if
it's<01:35:05.679><c> training</c><01:35:06.000><c> or</c><01:35:06.400><c> not</c><01:35:07.400><c> and</c><01:35:07.600><c> this</c><01:35:07.719><c> is</c><01:35:08.000><c> now</c><01:35:08.400><c> a</c>

01:35:08.790 --> 01:35:08.800 align:start position:0%
it's training or not and this is now a
 

01:35:08.800 --> 01:35:09.790 align:start position:0%
it's training or not and this is now a
layer

01:35:09.790 --> 01:35:09.800 align:start position:0%
layer
 

01:35:09.800 --> 01:35:12.950 align:start position:0%
layer
norm<01:35:10.800><c> and</c><01:35:11.040><c> it</c><01:35:11.199><c> normalizes</c><01:35:12.159><c> the</c><01:35:12.400><c> rows</c><01:35:12.719><c> instead</c>

01:35:12.950 --> 01:35:12.960 align:start position:0%
norm and it normalizes the rows instead
 

01:35:12.960 --> 01:35:15.950 align:start position:0%
norm and it normalizes the rows instead
of<01:35:13.040><c> the</c><01:35:13.159><c> columns</c><01:35:14.119><c> and</c><01:35:14.320><c> this</c><01:35:14.719><c> here</c><01:35:15.719><c> is</c>

01:35:15.950 --> 01:35:15.960 align:start position:0%
of the columns and this here is
 

01:35:15.960 --> 01:35:19.750 align:start position:0%
of the columns and this here is
identical<01:35:16.679><c> to</c><01:35:17.360><c> basically</c><01:35:17.840><c> this</c><01:35:18.440><c> here</c><01:35:19.440><c> so</c>

01:35:19.750 --> 01:35:19.760 align:start position:0%
identical to basically this here so
 

01:35:19.760 --> 01:35:21.550 align:start position:0%
identical to basically this here so
let's<01:35:20.040><c> now</c><01:35:20.440><c> Implement</c><01:35:20.840><c> layer</c><01:35:21.040><c> Norm</c><01:35:21.320><c> in</c><01:35:21.440><c> our</c>

01:35:21.550 --> 01:35:21.560 align:start position:0%
let's now Implement layer Norm in our
 

01:35:21.560 --> 01:35:23.310 align:start position:0%
let's now Implement layer Norm in our
Transformer<01:35:22.520><c> before</c><01:35:22.719><c> I</c><01:35:22.840><c> incorporate</c><01:35:23.239><c> the</c>

01:35:23.310 --> 01:35:23.320 align:start position:0%
Transformer before I incorporate the
 

01:35:23.320 --> 01:35:25.510 align:start position:0%
Transformer before I incorporate the
layer<01:35:23.480><c> Norm</c><01:35:23.880><c> I</c><01:35:23.960><c> just</c><01:35:24.040><c> wanted</c><01:35:24.280><c> to</c><01:35:24.400><c> note</c><01:35:24.760><c> that</c><01:35:25.400><c> as</c>

01:35:25.510 --> 01:35:25.520 align:start position:0%
layer Norm I just wanted to note that as
 

01:35:25.520 --> 01:35:27.189 align:start position:0%
layer Norm I just wanted to note that as
I<01:35:25.639><c> said</c><01:35:26.080><c> very</c><01:35:26.280><c> few</c><01:35:26.520><c> details</c><01:35:26.960><c> about</c><01:35:27.119><c> the</c>

01:35:27.189 --> 01:35:27.199 align:start position:0%
I said very few details about the
 

01:35:27.199 --> 01:35:28.709 align:start position:0%
I said very few details about the
Transformer<01:35:27.679><c> have</c><01:35:27.800><c> changed</c><01:35:28.119><c> in</c><01:35:28.199><c> the</c><01:35:28.320><c> last</c><01:35:28.520><c> 5</c>

01:35:28.709 --> 01:35:28.719 align:start position:0%
Transformer have changed in the last 5
 

01:35:28.719 --> 01:35:30.270 align:start position:0%
Transformer have changed in the last 5
years<01:35:29.119><c> but</c><01:35:29.320><c> this</c><01:35:29.520><c> is</c><01:35:29.719><c> actually</c><01:35:30.000><c> something</c>

01:35:30.270 --> 01:35:30.280 align:start position:0%
years but this is actually something
 

01:35:30.280 --> 01:35:31.669 align:start position:0%
years but this is actually something
that<01:35:30.400><c> slightly</c><01:35:30.760><c> departs</c><01:35:31.119><c> from</c><01:35:31.199><c> the</c><01:35:31.320><c> original</c>

01:35:31.669 --> 01:35:31.679 align:start position:0%
that slightly departs from the original
 

01:35:31.679 --> 01:35:34.430 align:start position:0%
that slightly departs from the original
paper<01:35:32.560><c> you</c><01:35:32.679><c> see</c><01:35:32.920><c> that</c><01:35:33.159><c> the</c><01:35:33.440><c> ADD</c><01:35:33.719><c> and</c><01:35:33.920><c> Norm</c><01:35:34.280><c> is</c>

01:35:34.430 --> 01:35:34.440 align:start position:0%
paper you see that the ADD and Norm is
 

01:35:34.440 --> 01:35:36.550 align:start position:0%
paper you see that the ADD and Norm is
applied<01:35:35.000><c> after</c><01:35:35.480><c> the</c>

01:35:36.550 --> 01:35:36.560 align:start position:0%
applied after the
 

01:35:36.560 --> 01:35:39.990 align:start position:0%
applied after the
transformation<01:35:37.560><c> but</c><01:35:38.040><c> um</c><01:35:38.400><c> in</c><01:35:39.199><c> now</c><01:35:39.400><c> it</c><01:35:39.520><c> is</c><01:35:39.719><c> a</c><01:35:39.840><c> bit</c>

01:35:39.990 --> 01:35:40.000 align:start position:0%
transformation but um in now it is a bit
 

01:35:40.000 --> 01:35:42.109 align:start position:0%
transformation but um in now it is a bit
more<01:35:40.360><c> uh</c><01:35:40.520><c> basically</c><01:35:40.960><c> common</c><01:35:41.400><c> to</c><01:35:41.600><c> apply</c><01:35:41.920><c> the</c>

01:35:42.109 --> 01:35:42.119 align:start position:0%
more uh basically common to apply the
 

01:35:42.119 --> 01:35:44.550 align:start position:0%
more uh basically common to apply the
layer<01:35:42.400><c> Norm</c><01:35:43.159><c> before</c><01:35:43.560><c> the</c><01:35:43.679><c> transformation</c><01:35:44.400><c> so</c>

01:35:44.550 --> 01:35:44.560 align:start position:0%
layer Norm before the transformation so
 

01:35:44.560 --> 01:35:46.870 align:start position:0%
layer Norm before the transformation so
there's<01:35:44.719><c> a</c><01:35:44.840><c> reshuffling</c><01:35:45.360><c> of</c><01:35:45.440><c> the</c><01:35:45.560><c> layer</c><01:35:45.880><c> Norms</c>

01:35:46.870 --> 01:35:46.880 align:start position:0%
there's a reshuffling of the layer Norms
 

01:35:46.880 --> 01:35:48.270 align:start position:0%
there's a reshuffling of the layer Norms
uh<01:35:46.960><c> so</c><01:35:47.199><c> this</c><01:35:47.280><c> is</c><01:35:47.400><c> called</c><01:35:47.560><c> the</c><01:35:47.760><c> prorm</c>

01:35:48.270 --> 01:35:48.280 align:start position:0%
uh so this is called the prorm
 

01:35:48.280 --> 01:35:49.470 align:start position:0%
uh so this is called the prorm
formulation<01:35:48.920><c> and</c><01:35:49.040><c> that's</c><01:35:49.199><c> the</c><01:35:49.280><c> one</c><01:35:49.360><c> that</c>

01:35:49.470 --> 01:35:49.480 align:start position:0%
formulation and that's the one that
 

01:35:49.480 --> 01:35:50.790 align:start position:0%
formulation and that's the one that
we're<01:35:49.639><c> going</c><01:35:49.760><c> to</c><01:35:49.880><c> implement</c><01:35:50.280><c> as</c><01:35:50.400><c> well</c><01:35:50.639><c> so</c>

01:35:50.790 --> 01:35:50.800 align:start position:0%
we're going to implement as well so
 

01:35:50.800 --> 01:35:53.270 align:start position:0%
we're going to implement as well so
select<01:35:51.119><c> deviation</c><01:35:51.520><c> from</c><01:35:51.639><c> the</c><01:35:51.760><c> original</c><01:35:52.280><c> paper</c>

01:35:53.270 --> 01:35:53.280 align:start position:0%
select deviation from the original paper
 

01:35:53.280 --> 01:35:55.149 align:start position:0%
select deviation from the original paper
basically<01:35:53.719><c> we</c><01:35:53.800><c> need</c><01:35:53.920><c> two</c><01:35:54.159><c> layer</c><01:35:54.400><c> Norms</c><01:35:54.920><c> layer</c>

01:35:55.149 --> 01:35:55.159 align:start position:0%
basically we need two layer Norms layer
 

01:35:55.159 --> 01:35:59.270 align:start position:0%
basically we need two layer Norms layer
Norm<01:35:55.440><c> one</c><01:35:55.840><c> is</c><01:35:56.400><c> uh</c><01:35:56.520><c> NN</c><01:35:57.000><c> do</c><01:35:57.639><c> layer</c><01:35:58.000><c> norm</c><01:35:59.000><c> and</c><01:35:59.159><c> we</c>

01:35:59.270 --> 01:35:59.280 align:start position:0%
Norm one is uh NN do layer norm and we
 

01:35:59.280 --> 01:36:00.990 align:start position:0%
Norm one is uh NN do layer norm and we
tell<01:35:59.480><c> it</c><01:35:59.679><c> how</c><01:35:59.800><c> many</c><01:36:00.520><c> um</c><01:36:00.719><c> what</c><01:36:00.800><c> is</c><01:36:00.920><c> the</c>

01:36:00.990 --> 01:36:01.000 align:start position:0%
tell it how many um what is the
 

01:36:01.000 --> 01:36:03.510 align:start position:0%
tell it how many um what is the
embedding<01:36:01.760><c> Dimension</c><01:36:02.760><c> and</c><01:36:02.920><c> we</c><01:36:03.040><c> need</c><01:36:03.360><c> the</c>

01:36:03.510 --> 01:36:03.520 align:start position:0%
embedding Dimension and we need the
 

01:36:03.520 --> 01:36:06.590 align:start position:0%
embedding Dimension and we need the
second<01:36:03.760><c> layer</c><01:36:04.280><c> norm</c><01:36:05.280><c> and</c><01:36:05.440><c> then</c><01:36:05.719><c> here</c><01:36:06.480><c> the</c>

01:36:06.590 --> 01:36:06.600 align:start position:0%
second layer norm and then here the
 

01:36:06.600 --> 01:36:09.350 align:start position:0%
second layer norm and then here the
layer<01:36:06.840><c> Norms</c><01:36:07.080><c> are</c><01:36:07.199><c> applied</c><01:36:07.679><c> immediately</c><01:36:08.119><c> on</c><01:36:08.360><c> X</c>

01:36:09.350 --> 01:36:09.360 align:start position:0%
layer Norms are applied immediately on X
 

01:36:09.360 --> 01:36:13.030 align:start position:0%
layer Norms are applied immediately on X
so<01:36:09.639><c> self.</c><01:36:10.119><c> layer</c><01:36:10.360><c> Norm</c><01:36:10.560><c> one</c><01:36:11.560><c> applied</c><01:36:11.880><c> on</c><01:36:12.040><c> X</c><01:36:12.920><c> and</c>

01:36:13.030 --> 01:36:13.040 align:start position:0%
so self. layer Norm one applied on X and
 

01:36:13.040 --> 01:36:15.750 align:start position:0%
so self. layer Norm one applied on X and
self.<01:36:13.440><c> layer</c><01:36:13.639><c> Norm</c><01:36:13.840><c> two</c><01:36:14.080><c> applied</c><01:36:14.400><c> on</c><01:36:14.560><c> X</c><01:36:15.480><c> before</c>

01:36:15.750 --> 01:36:15.760 align:start position:0%
self. layer Norm two applied on X before
 

01:36:15.760 --> 01:36:18.109 align:start position:0%
self. layer Norm two applied on X before
it<01:36:15.920><c> goes</c><01:36:16.080><c> into</c><01:36:16.320><c> self</c><01:36:16.560><c> attention</c><01:36:16.880><c> and</c><01:36:17.000><c> feed</c>

01:36:18.109 --> 01:36:18.119 align:start position:0%
it goes into self attention and feed
 

01:36:18.119 --> 01:36:20.669 align:start position:0%
it goes into self attention and feed
forward<01:36:19.119><c> and</c><01:36:19.679><c> uh</c><01:36:19.840><c> the</c><01:36:20.000><c> size</c><01:36:20.199><c> of</c><01:36:20.320><c> the</c><01:36:20.440><c> layer</c>

01:36:20.669 --> 01:36:20.679 align:start position:0%
forward and uh the size of the layer
 

01:36:20.679 --> 01:36:23.590 align:start position:0%
forward and uh the size of the layer
Norm<01:36:20.960><c> here</c><01:36:21.119><c> is</c><01:36:21.280><c> an</c><01:36:21.440><c> ed</c><01:36:21.760><c> so</c><01:36:22.040><c> 32</c><01:36:23.040><c> so</c><01:36:23.239><c> when</c><01:36:23.360><c> the</c>

01:36:23.590 --> 01:36:23.600 align:start position:0%
Norm here is an ed so 32 so when the
 

01:36:23.600 --> 01:36:26.430 align:start position:0%
Norm here is an ed so 32 so when the
layer<01:36:23.800><c> Norm</c><01:36:24.080><c> is</c><01:36:24.400><c> normalizing</c><01:36:25.080><c> our</c><01:36:25.440><c> features</c>

01:36:26.430 --> 01:36:26.440 align:start position:0%
layer Norm is normalizing our features
 

01:36:26.440 --> 01:36:30.350 align:start position:0%
layer Norm is normalizing our features
it<01:36:26.600><c> is</c><01:36:26.960><c> uh</c><01:36:27.080><c> the</c><01:36:27.199><c> normalization</c><01:36:28.199><c> here</c><01:36:29.280><c> uh</c>

01:36:30.350 --> 01:36:30.360 align:start position:0%
it is uh the normalization here uh
 

01:36:30.360 --> 01:36:32.350 align:start position:0%
it is uh the normalization here uh
happens<01:36:31.360><c> the</c><01:36:31.440><c> mean</c><01:36:31.679><c> and</c><01:36:31.800><c> the</c><01:36:31.920><c> variance</c><01:36:32.239><c> are</c>

01:36:32.350 --> 01:36:32.360 align:start position:0%
happens the mean and the variance are
 

01:36:32.360 --> 01:36:34.870 align:start position:0%
happens the mean and the variance are
taken<01:36:32.560><c> over</c><01:36:32.800><c> 32</c><01:36:33.280><c> numbers</c><01:36:34.119><c> so</c><01:36:34.320><c> the</c><01:36:34.440><c> batch</c><01:36:34.760><c> and</c>

01:36:34.870 --> 01:36:34.880 align:start position:0%
taken over 32 numbers so the batch and
 

01:36:34.880 --> 01:36:37.510 align:start position:0%
taken over 32 numbers so the batch and
the<01:36:35.080><c> time</c><01:36:35.639><c> act</c><01:36:35.920><c> as</c><01:36:36.119><c> batch</c><01:36:36.440><c> Dimensions</c><01:36:37.199><c> both</c><01:36:37.360><c> of</c>

01:36:37.510 --> 01:36:37.520 align:start position:0%
the time act as batch Dimensions both of
 

01:36:37.520 --> 01:36:40.629 align:start position:0%
the time act as batch Dimensions both of
them<01:36:38.320><c> so</c><01:36:38.520><c> this</c><01:36:38.600><c> is</c><01:36:38.760><c> kind</c><01:36:38.880><c> of</c><01:36:39.000><c> like</c><01:36:39.080><c> a</c><01:36:39.280><c> per</c><01:36:39.639><c> token</c>

01:36:40.629 --> 01:36:40.639 align:start position:0%
them so this is kind of like a per token
 

01:36:40.639 --> 01:36:42.830 align:start position:0%
them so this is kind of like a per token
um<01:36:41.360><c> transformation</c><01:36:42.000><c> that</c><01:36:42.159><c> just</c><01:36:42.280><c> normalizes</c>

01:36:42.830 --> 01:36:42.840 align:start position:0%
um transformation that just normalizes
 

01:36:42.840 --> 01:36:46.189 align:start position:0%
um transformation that just normalizes
the<01:36:42.920><c> features</c><01:36:43.800><c> and</c><01:36:44.080><c> makes</c><01:36:44.360><c> them</c><01:36:44.679><c> a</c><01:36:44.800><c> unit</c><01:36:45.199><c> mean</c>

01:36:46.189 --> 01:36:46.199 align:start position:0%
the features and makes them a unit mean
 

01:36:46.199 --> 01:36:48.350 align:start position:0%
the features and makes them a unit mean
uh<01:36:46.360><c> unit</c><01:36:46.679><c> Gan</c><01:36:47.560><c> at</c>

01:36:48.350 --> 01:36:48.360 align:start position:0%
uh unit Gan at
 

01:36:48.360 --> 01:36:50.030 align:start position:0%
uh unit Gan at
initialization<01:36:49.360><c> but</c><01:36:49.520><c> of</c><01:36:49.600><c> course</c><01:36:49.800><c> because</c>

01:36:50.030 --> 01:36:50.040 align:start position:0%
initialization but of course because
 

01:36:50.040 --> 01:36:52.390 align:start position:0%
initialization but of course because
these<01:36:50.159><c> layer</c><01:36:50.440><c> Norms</c><01:36:50.920><c> inside</c><01:36:51.239><c> it</c><01:36:51.960><c> have</c><01:36:52.159><c> these</c>

01:36:52.390 --> 01:36:52.400 align:start position:0%
these layer Norms inside it have these
 

01:36:52.400 --> 01:36:54.229 align:start position:0%
these layer Norms inside it have these
gamma<01:36:52.679><c> and</c><01:36:52.840><c> beta</c><01:36:53.159><c> training</c>

01:36:54.229 --> 01:36:54.239 align:start position:0%
gamma and beta training
 

01:36:54.239 --> 01:36:57.270 align:start position:0%
gamma and beta training
parameters<01:36:55.239><c> uh</c><01:36:55.360><c> the</c><01:36:55.480><c> layer</c><01:36:55.719><c> Norm</c><01:36:56.040><c> will</c><01:36:56.639><c> U</c>

01:36:57.270 --> 01:36:57.280 align:start position:0%
parameters uh the layer Norm will U
 

01:36:57.280 --> 01:36:59.430 align:start position:0%
parameters uh the layer Norm will U
eventually<01:36:58.280><c> create</c><01:36:58.600><c> outputs</c><01:36:59.000><c> that</c><01:36:59.119><c> might</c><01:36:59.280><c> not</c>

01:36:59.430 --> 01:36:59.440 align:start position:0%
eventually create outputs that might not
 

01:36:59.440 --> 01:37:01.870 align:start position:0%
eventually create outputs that might not
be<01:36:59.639><c> unit</c><01:37:00.000><c> gion</c><01:37:00.840><c> but</c><01:37:01.000><c> the</c><01:37:01.159><c> optimization</c><01:37:01.719><c> will</c>

01:37:01.870 --> 01:37:01.880 align:start position:0%
be unit gion but the optimization will
 

01:37:01.880 --> 01:37:05.149 align:start position:0%
be unit gion but the optimization will
determine<01:37:02.400><c> that</c><01:37:03.400><c> so</c><01:37:03.560><c> for</c><01:37:03.760><c> now</c><01:37:04.000><c> this</c><01:37:04.119><c> is</c><01:37:04.360><c> the</c><01:37:04.960><c> uh</c>

01:37:05.149 --> 01:37:05.159 align:start position:0%
determine that so for now this is the uh
 

01:37:05.159 --> 01:37:06.830 align:start position:0%
determine that so for now this is the uh
this<01:37:05.320><c> is</c><01:37:05.719><c> incorporating</c><01:37:06.199><c> the</c><01:37:06.280><c> layer</c><01:37:06.480><c> norms</c>

01:37:06.830 --> 01:37:06.840 align:start position:0%
this is incorporating the layer norms
 

01:37:06.840 --> 01:37:09.149 align:start position:0%
this is incorporating the layer norms
and<01:37:06.960><c> let's</c><01:37:07.119><c> train</c><01:37:07.400><c> them</c><01:37:07.520><c> on</c><01:37:08.480><c> okay</c><01:37:08.600><c> so</c><01:37:08.719><c> I</c><01:37:08.880><c> let</c><01:37:09.000><c> it</c>

01:37:09.149 --> 01:37:09.159 align:start position:0%
and let's train them on okay so I let it
 

01:37:09.159 --> 01:37:12.030 align:start position:0%
and let's train them on okay so I let it
run<01:37:09.800><c> and</c><01:37:09.960><c> we</c><01:37:10.080><c> see</c><01:37:10.239><c> that</c><01:37:10.360><c> we</c><01:37:10.480><c> get</c><01:37:10.639><c> down</c><01:37:10.760><c> to</c><01:37:11.040><c> 2.06</c>

01:37:12.030 --> 01:37:12.040 align:start position:0%
run and we see that we get down to 2.06
 

01:37:12.040 --> 01:37:14.149 align:start position:0%
run and we see that we get down to 2.06
which<01:37:12.159><c> is</c><01:37:12.280><c> better</c><01:37:12.480><c> than</c><01:37:12.600><c> the</c><01:37:12.760><c> previous</c><01:37:13.159><c> 2.08</c>

01:37:14.149 --> 01:37:14.159 align:start position:0%
which is better than the previous 2.08
 

01:37:14.159 --> 01:37:15.669 align:start position:0%
which is better than the previous 2.08
so<01:37:14.360><c> a</c><01:37:14.480><c> slight</c><01:37:14.760><c> Improvement</c><01:37:15.199><c> by</c><01:37:15.320><c> adding</c><01:37:15.600><c> the</c>

01:37:15.669 --> 01:37:15.679 align:start position:0%
so a slight Improvement by adding the
 

01:37:15.679 --> 01:37:17.669 align:start position:0%
so a slight Improvement by adding the
layer<01:37:15.920><c> norms</c><01:37:16.679><c> and</c><01:37:16.880><c> I'd</c><01:37:17.040><c> expect</c><01:37:17.280><c> that</c><01:37:17.440><c> they</c>

01:37:17.669 --> 01:37:17.679 align:start position:0%
layer norms and I'd expect that they
 

01:37:17.679 --> 01:37:19.709 align:start position:0%
layer norms and I'd expect that they
help<01:37:18.199><c> uh</c><01:37:18.320><c> even</c><01:37:18.560><c> more</c><01:37:18.760><c> if</c><01:37:18.840><c> we</c><01:37:19.000><c> had</c><01:37:19.400><c> bigger</c><01:37:19.600><c> and</c>

01:37:19.709 --> 01:37:19.719 align:start position:0%
help uh even more if we had bigger and
 

01:37:19.719 --> 01:37:21.910 align:start position:0%
help uh even more if we had bigger and
deeper<01:37:20.080><c> Network</c><01:37:21.080><c> one</c><01:37:21.199><c> more</c><01:37:21.360><c> thing</c><01:37:21.520><c> I</c><01:37:21.639><c> forgot</c>

01:37:21.910 --> 01:37:21.920 align:start position:0%
deeper Network one more thing I forgot
 

01:37:21.920 --> 01:37:23.709 align:start position:0%
deeper Network one more thing I forgot
to<01:37:22.119><c> add</c><01:37:22.440><c> is</c><01:37:22.639><c> that</c><01:37:22.920><c> there</c><01:37:23.040><c> should</c><01:37:23.199><c> be</c><01:37:23.280><c> a</c><01:37:23.520><c> layer</c>

01:37:23.709 --> 01:37:23.719 align:start position:0%
to add is that there should be a layer
 

01:37:23.719 --> 01:37:26.830 align:start position:0%
to add is that there should be a layer
Norm<01:37:24.080><c> here</c><01:37:24.480><c> also</c><01:37:25.040><c> typically</c><01:37:26.040><c> as</c><01:37:26.400><c> at</c><01:37:26.520><c> the</c><01:37:26.639><c> end</c>

01:37:26.830 --> 01:37:26.840 align:start position:0%
Norm here also typically as at the end
 

01:37:26.840 --> 01:37:28.790 align:start position:0%
Norm here also typically as at the end
of<01:37:26.960><c> the</c><01:37:27.080><c> Transformer</c><01:37:27.679><c> and</c><01:37:28.000><c> right</c><01:37:28.199><c> before</c><01:37:28.560><c> the</c>

01:37:28.790 --> 01:37:28.800 align:start position:0%
of the Transformer and right before the
 

01:37:28.800 --> 01:37:31.669 align:start position:0%
of the Transformer and right before the
final<01:37:29.520><c> uh</c><01:37:29.639><c> linear</c><01:37:30.040><c> layer</c><01:37:30.600><c> that</c><01:37:30.760><c> decodes</c><01:37:31.159><c> into</c>

01:37:31.669 --> 01:37:31.679 align:start position:0%
final uh linear layer that decodes into
 

01:37:31.679 --> 01:37:34.990 align:start position:0%
final uh linear layer that decodes into
vocabulary<01:37:32.679><c> so</c><01:37:32.880><c> I</c><01:37:33.000><c> added</c><01:37:33.320><c> that</c><01:37:33.600><c> as</c><01:37:33.760><c> well</c><01:37:34.760><c> so</c><01:37:34.920><c> at</c>

01:37:34.990 --> 01:37:35.000 align:start position:0%
vocabulary so I added that as well so at
 

01:37:35.000 --> 01:37:36.229 align:start position:0%
vocabulary so I added that as well so at
this<01:37:35.159><c> stage</c><01:37:35.360><c> we</c><01:37:35.480><c> actually</c><01:37:35.679><c> have</c><01:37:35.800><c> a</c><01:37:35.960><c> pretty</c>

01:37:36.229 --> 01:37:36.239 align:start position:0%
this stage we actually have a pretty
 

01:37:36.239 --> 01:37:38.109 align:start position:0%
this stage we actually have a pretty
complete<01:37:36.840><c> uh</c><01:37:36.960><c> Transformer</c><01:37:37.520><c> according</c><01:37:37.800><c> to</c><01:37:37.960><c> the</c>

01:37:38.109 --> 01:37:38.119 align:start position:0%
complete uh Transformer according to the
 

01:37:38.119 --> 01:37:40.229 align:start position:0%
complete uh Transformer according to the
original<01:37:38.520><c> paper</c><01:37:39.159><c> and</c><01:37:39.280><c> it's</c><01:37:39.480><c> a</c><01:37:39.639><c> decoder</c><01:37:40.000><c> only</c>

01:37:40.229 --> 01:37:40.239 align:start position:0%
original paper and it's a decoder only
 

01:37:40.239 --> 01:37:42.229 align:start position:0%
original paper and it's a decoder only
Transformer<01:37:41.000><c> I'll</c><01:37:41.440><c> I'll</c><01:37:41.639><c> talk</c><01:37:41.800><c> about</c><01:37:42.000><c> that</c><01:37:42.119><c> in</c>

01:37:42.229 --> 01:37:42.239 align:start position:0%
Transformer I'll I'll talk about that in
 

01:37:42.239 --> 01:37:44.589 align:start position:0%
Transformer I'll I'll talk about that in
a<01:37:42.360><c> second</c><01:37:43.239><c> uh</c><01:37:43.360><c> but</c><01:37:43.480><c> at</c><01:37:43.639><c> this</c><01:37:43.760><c> stage</c><01:37:44.320><c> uh</c><01:37:44.440><c> the</c>

01:37:44.589 --> 01:37:44.599 align:start position:0%
a second uh but at this stage uh the
 

01:37:44.599 --> 01:37:46.229 align:start position:0%
a second uh but at this stage uh the
major<01:37:44.920><c> pieces</c><01:37:45.159><c> are</c><01:37:45.320><c> in</c><01:37:45.520><c> place</c><01:37:45.760><c> so</c><01:37:45.880><c> we</c><01:37:45.960><c> can</c><01:37:46.080><c> try</c>

01:37:46.229 --> 01:37:46.239 align:start position:0%
major pieces are in place so we can try
 

01:37:46.239 --> 01:37:47.950 align:start position:0%
major pieces are in place so we can try
to<01:37:46.360><c> scale</c><01:37:46.679><c> this</c><01:37:46.800><c> up</c><01:37:47.000><c> and</c><01:37:47.119><c> see</c><01:37:47.320><c> how</c><01:37:47.520><c> well</c><01:37:47.679><c> we</c><01:37:47.800><c> can</c>

01:37:47.950 --> 01:37:47.960 align:start position:0%
to scale this up and see how well we can
 

01:37:47.960 --> 01:37:50.189 align:start position:0%
to scale this up and see how well we can
push<01:37:48.199><c> this</c><01:37:48.360><c> number</c><01:37:49.360><c> now</c><01:37:49.520><c> in</c><01:37:49.639><c> order</c><01:37:49.840><c> to</c><01:37:49.960><c> scale</c>

01:37:50.189 --> 01:37:50.199 align:start position:0%
push this number now in order to scale
 

01:37:50.199 --> 01:37:51.950 align:start position:0%
push this number now in order to scale
out<01:37:50.320><c> the</c><01:37:50.440><c> model</c><01:37:50.840><c> I</c><01:37:50.960><c> had</c><01:37:51.119><c> to</c><01:37:51.400><c> perform</c><01:37:51.760><c> some</c>

01:37:51.950 --> 01:37:51.960 align:start position:0%
out the model I had to perform some
 

01:37:51.960 --> 01:37:54.550 align:start position:0%
out the model I had to perform some
cosmetic<01:37:52.360><c> changes</c><01:37:52.760><c> here</c><01:37:52.920><c> to</c><01:37:53.639><c> make</c><01:37:53.760><c> it</c><01:37:53.880><c> nicer</c>

01:37:54.550 --> 01:37:54.560 align:start position:0%
cosmetic changes here to make it nicer
 

01:37:54.560 --> 01:37:56.430 align:start position:0%
cosmetic changes here to make it nicer
so<01:37:54.719><c> I</c><01:37:54.840><c> introduced</c><01:37:55.360><c> this</c><01:37:55.639><c> variable</c><01:37:56.000><c> called</c><01:37:56.199><c> n</c>

01:37:56.430 --> 01:37:56.440 align:start position:0%
so I introduced this variable called n
 

01:37:56.440 --> 01:37:57.950 align:start position:0%
so I introduced this variable called n
layer<01:37:56.800><c> which</c><01:37:57.000><c> just</c><01:37:57.119><c> specifies</c><01:37:57.560><c> how</c><01:37:57.679><c> many</c>

01:37:57.950 --> 01:37:57.960 align:start position:0%
layer which just specifies how many
 

01:37:57.960 --> 01:38:01.070 align:start position:0%
layer which just specifies how many
layers<01:37:58.639><c> of</c><01:37:58.920><c> the</c><01:37:59.440><c> blocks</c><01:37:59.800><c> we're</c><01:37:59.960><c> going</c><01:38:00.119><c> to</c><01:38:00.320><c> have</c>

01:38:01.070 --> 01:38:01.080 align:start position:0%
layers of the blocks we're going to have
 

01:38:01.080 --> 01:38:02.510 align:start position:0%
layers of the blocks we're going to have
I<01:38:01.199><c> created</c><01:38:01.480><c> a</c><01:38:01.560><c> bunch</c><01:38:01.719><c> of</c><01:38:01.840><c> blocks</c><01:38:02.199><c> and</c><01:38:02.320><c> we</c><01:38:02.400><c> have</c>

01:38:02.510 --> 01:38:02.520 align:start position:0%
I created a bunch of blocks and we have
 

01:38:02.520 --> 01:38:05.550 align:start position:0%
I created a bunch of blocks and we have
a<01:38:02.599><c> new</c><01:38:02.760><c> variable</c><01:38:03.239><c> number</c><01:38:03.480><c> of</c><01:38:03.639><c> heads</c><01:38:04.040><c> as</c><01:38:04.440><c> well</c><01:38:05.440><c> I</c>

01:38:05.550 --> 01:38:05.560 align:start position:0%
a new variable number of heads as well I
 

01:38:05.560 --> 01:38:07.709 align:start position:0%
a new variable number of heads as well I
pulled<01:38:05.800><c> out</c><01:38:05.920><c> the</c><01:38:06.000><c> layer</c><01:38:06.239><c> Norm</c><01:38:06.599><c> here</c><01:38:07.239><c> and</c><01:38:07.440><c> uh</c><01:38:07.560><c> so</c>

01:38:07.709 --> 01:38:07.719 align:start position:0%
pulled out the layer Norm here and uh so
 

01:38:07.719 --> 01:38:09.990 align:start position:0%
pulled out the layer Norm here and uh so
this<01:38:07.840><c> is</c><01:38:08.159><c> identical</c><01:38:09.159><c> now</c><01:38:09.280><c> one</c><01:38:09.480><c> thing</c><01:38:09.719><c> that</c><01:38:09.840><c> I</c>

01:38:09.990 --> 01:38:10.000 align:start position:0%
this is identical now one thing that I
 

01:38:10.000 --> 01:38:13.189 align:start position:0%
this is identical now one thing that I
did<01:38:10.199><c> briefly</c><01:38:10.560><c> change</c><01:38:10.960><c> is</c><01:38:11.159><c> I</c><01:38:11.320><c> added</c><01:38:11.880><c> a</c><01:38:12.199><c> Dropout</c>

01:38:13.189 --> 01:38:13.199 align:start position:0%
did briefly change is I added a Dropout
 

01:38:13.199 --> 01:38:15.550 align:start position:0%
did briefly change is I added a Dropout
so<01:38:13.480><c> Dropout</c><01:38:14.080><c> is</c><01:38:14.199><c> something</c><01:38:14.560><c> that</c><01:38:14.679><c> you</c><01:38:14.840><c> can</c><01:38:15.119><c> add</c>

01:38:15.550 --> 01:38:15.560 align:start position:0%
so Dropout is something that you can add
 

01:38:15.560 --> 01:38:17.950 align:start position:0%
so Dropout is something that you can add
right<01:38:15.760><c> before</c><01:38:16.199><c> the</c><01:38:16.960><c> residual</c><01:38:17.360><c> connection</c>

01:38:17.950 --> 01:38:17.960 align:start position:0%
right before the residual connection
 

01:38:17.960 --> 01:38:19.870 align:start position:0%
right before the residual connection
back<01:38:18.920><c> right</c><01:38:19.080><c> before</c><01:38:19.280><c> the</c><01:38:19.360><c> connection</c><01:38:19.719><c> back</c>

01:38:19.870 --> 01:38:19.880 align:start position:0%
back right before the connection back
 

01:38:19.880 --> 01:38:22.390 align:start position:0%
back right before the connection back
into<01:38:20.040><c> the</c><01:38:20.159><c> residual</c><01:38:20.639><c> pathway</c><01:38:21.639><c> so</c><01:38:21.800><c> we</c><01:38:21.920><c> can</c><01:38:22.080><c> drop</c>

01:38:22.390 --> 01:38:22.400 align:start position:0%
into the residual pathway so we can drop
 

01:38:22.400 --> 01:38:26.149 align:start position:0%
into the residual pathway so we can drop
out<01:38:22.880><c> that</c><01:38:23.040><c> as</c><01:38:23.239><c> l</c><01:38:23.599><c> layer</c><01:38:23.920><c> here</c><01:38:24.800><c> we</c><01:38:24.920><c> can</c><01:38:25.080><c> drop</c><01:38:25.360><c> out</c>

01:38:26.149 --> 01:38:26.159 align:start position:0%
out that as l layer here we can drop out
 

01:38:26.159 --> 01:38:27.870 align:start position:0%
out that as l layer here we can drop out
uh<01:38:26.480><c> here</c><01:38:26.719><c> at</c><01:38:26.840><c> the</c><01:38:26.920><c> end</c><01:38:27.080><c> of</c><01:38:27.199><c> the</c><01:38:27.320><c> multi-headed</c>

01:38:27.870 --> 01:38:27.880 align:start position:0%
uh here at the end of the multi-headed
 

01:38:27.880 --> 01:38:30.390 align:start position:0%
uh here at the end of the multi-headed
exension<01:38:28.320><c> as</c><01:38:28.480><c> well</c><01:38:29.440><c> and</c><01:38:29.560><c> we</c><01:38:29.639><c> can</c><01:38:29.840><c> also</c><01:38:30.119><c> drop</c>

01:38:30.390 --> 01:38:30.400 align:start position:0%
exension as well and we can also drop
 

01:38:30.400 --> 01:38:34.270 align:start position:0%
exension as well and we can also drop
out<01:38:30.760><c> here</c><01:38:31.679><c> uh</c><01:38:31.840><c> when</c><01:38:32.000><c> we</c><01:38:32.239><c> calculate</c><01:38:32.880><c> the</c><01:38:33.280><c> um</c>

01:38:34.270 --> 01:38:34.280 align:start position:0%
out here uh when we calculate the um
 

01:38:34.280 --> 01:38:35.990 align:start position:0%
out here uh when we calculate the um
basically<01:38:34.719><c> affinities</c><01:38:35.360><c> and</c><01:38:35.560><c> after</c><01:38:35.840><c> the</c>

01:38:35.990 --> 01:38:36.000 align:start position:0%
basically affinities and after the
 

01:38:36.000 --> 01:38:38.270 align:start position:0%
basically affinities and after the
softmax<01:38:36.800><c> we</c><01:38:36.920><c> can</c><01:38:37.040><c> drop</c><01:38:37.280><c> out</c><01:38:37.480><c> some</c><01:38:37.599><c> of</c><01:38:37.760><c> those</c><01:38:38.119><c> so</c>

01:38:38.270 --> 01:38:38.280 align:start position:0%
softmax we can drop out some of those so
 

01:38:38.280 --> 01:38:40.109 align:start position:0%
softmax we can drop out some of those so
we<01:38:38.400><c> can</c><01:38:38.760><c> randomly</c><01:38:39.320><c> prevent</c><01:38:39.800><c> some</c><01:38:39.920><c> of</c><01:38:40.040><c> the</c>

01:38:40.109 --> 01:38:40.119 align:start position:0%
we can randomly prevent some of the
 

01:38:40.119 --> 01:38:41.109 align:start position:0%
we can randomly prevent some of the
nodes<01:38:40.400><c> from</c>

01:38:41.109 --> 01:38:41.119 align:start position:0%
nodes from
 

01:38:41.119 --> 01:38:43.790 align:start position:0%
nodes from
communicating<01:38:42.119><c> and</c><01:38:42.239><c> so</c><01:38:42.480><c> Dropout</c><01:38:43.360><c> uh</c><01:38:43.560><c> comes</c>

01:38:43.790 --> 01:38:43.800 align:start position:0%
communicating and so Dropout uh comes
 

01:38:43.800 --> 01:38:49.030 align:start position:0%
communicating and so Dropout uh comes
from<01:38:43.960><c> this</c><01:38:44.199><c> paper</c><01:38:45.199><c> from</c><01:38:45.480><c> 2014</c><01:38:46.400><c> or</c><01:38:46.719><c> so</c><01:38:48.040><c> and</c>

01:38:49.030 --> 01:38:49.040 align:start position:0%
from this paper from 2014 or so and
 

01:38:49.040 --> 01:38:50.790 align:start position:0%
from this paper from 2014 or so and
basically<01:38:49.400><c> it</c><01:38:49.520><c> takes</c><01:38:49.800><c> your</c><01:38:49.960><c> neural</c>

01:38:50.790 --> 01:38:50.800 align:start position:0%
basically it takes your neural
 

01:38:50.800 --> 01:38:53.470 align:start position:0%
basically it takes your neural
nut<01:38:51.800><c> and</c><01:38:52.040><c> it</c><01:38:52.239><c> randomly</c><01:38:52.840><c> every</c><01:38:53.000><c> forward</c>

01:38:53.470 --> 01:38:53.480 align:start position:0%
nut and it randomly every forward
 

01:38:53.480 --> 01:38:56.430 align:start position:0%
nut and it randomly every forward
backward<01:38:53.800><c> pass</c><01:38:54.080><c> shuts</c><01:38:54.480><c> off</c><01:38:54.960><c> some</c><01:38:55.320><c> subset</c><01:38:55.960><c> of</c>

01:38:56.430 --> 01:38:56.440 align:start position:0%
backward pass shuts off some subset of
 

01:38:56.440 --> 01:38:59.510 align:start position:0%
backward pass shuts off some subset of
uh<01:38:56.920><c> neurons</c><01:38:57.920><c> so</c><01:38:58.320><c> randomly</c><01:38:58.719><c> drops</c><01:38:59.080><c> them</c><01:38:59.239><c> to</c>

01:38:59.510 --> 01:38:59.520 align:start position:0%
uh neurons so randomly drops them to
 

01:38:59.520 --> 01:39:02.629 align:start position:0%
uh neurons so randomly drops them to
zero<01:39:00.520><c> and</c><01:39:00.719><c> trains</c><01:39:01.119><c> without</c><01:39:01.320><c> them</c><01:39:02.239><c> and</c><01:39:02.440><c> what</c>

01:39:02.629 --> 01:39:02.639 align:start position:0%
zero and trains without them and what
 

01:39:02.639 --> 01:39:04.870 align:start position:0%
zero and trains without them and what
this<01:39:02.840><c> does</c><01:39:03.199><c> effectively</c><01:39:03.920><c> is</c><01:39:04.400><c> because</c><01:39:04.719><c> the</c>

01:39:04.870 --> 01:39:04.880 align:start position:0%
this does effectively is because the
 

01:39:04.880 --> 01:39:06.510 align:start position:0%
this does effectively is because the
mask<01:39:05.320><c> of</c><01:39:05.480><c> what's</c><01:39:05.639><c> being</c><01:39:05.840><c> dropped</c><01:39:06.159><c> out</c><01:39:06.360><c> is</c>

01:39:06.510 --> 01:39:06.520 align:start position:0%
mask of what's being dropped out is
 

01:39:06.520 --> 01:39:07.950 align:start position:0%
mask of what's being dropped out is
changed<01:39:06.920><c> every</c><01:39:07.080><c> single</c><01:39:07.280><c> forward</c><01:39:07.599><c> backward</c>

01:39:07.950 --> 01:39:07.960 align:start position:0%
changed every single forward backward
 

01:39:07.960 --> 01:39:10.990 align:start position:0%
changed every single forward backward
pass<01:39:08.520><c> it</c><01:39:08.679><c> ends</c><01:39:08.880><c> up</c><01:39:09.080><c> kind</c><01:39:09.239><c> of</c><01:39:09.760><c> uh</c><01:39:10.320><c> training</c><01:39:10.800><c> an</c>

01:39:10.990 --> 01:39:11.000 align:start position:0%
pass it ends up kind of uh training an
 

01:39:11.000 --> 01:39:13.589 align:start position:0%
pass it ends up kind of uh training an
ensemble<01:39:11.520><c> of</c><01:39:11.719><c> sub</c><01:39:12.159><c> networks</c><01:39:13.159><c> and</c><01:39:13.280><c> then</c><01:39:13.440><c> at</c>

01:39:13.589 --> 01:39:13.599 align:start position:0%
ensemble of sub networks and then at
 

01:39:13.599 --> 01:39:15.149 align:start position:0%
ensemble of sub networks and then at
test<01:39:13.840><c> time</c><01:39:14.080><c> everything</c><01:39:14.320><c> is</c><01:39:14.440><c> fully</c><01:39:14.679><c> enabled</c>

01:39:15.149 --> 01:39:15.159 align:start position:0%
test time everything is fully enabled
 

01:39:15.159 --> 01:39:16.709 align:start position:0%
test time everything is fully enabled
and<01:39:15.320><c> kind</c><01:39:15.440><c> of</c><01:39:15.800><c> all</c><01:39:15.960><c> of</c><01:39:16.080><c> those</c><01:39:16.199><c> sub</c><01:39:16.400><c> networks</c>

01:39:16.709 --> 01:39:16.719 align:start position:0%
and kind of all of those sub networks
 

01:39:16.719 --> 01:39:18.790 align:start position:0%
and kind of all of those sub networks
are<01:39:16.840><c> merged</c><01:39:17.239><c> into</c><01:39:17.480><c> a</c><01:39:17.599><c> single</c><01:39:18.000><c> Ensemble</c><01:39:18.599><c> if</c><01:39:18.679><c> you</c>

01:39:18.790 --> 01:39:18.800 align:start position:0%
are merged into a single Ensemble if you
 

01:39:18.800 --> 01:39:20.109 align:start position:0%
are merged into a single Ensemble if you
can<01:39:19.080><c> if</c><01:39:19.159><c> you</c><01:39:19.239><c> want</c><01:39:19.320><c> to</c><01:39:19.480><c> think</c><01:39:19.639><c> about</c><01:39:19.800><c> it</c><01:39:19.960><c> that</c>

01:39:20.109 --> 01:39:20.119 align:start position:0%
can if you want to think about it that
 

01:39:20.119 --> 01:39:22.390 align:start position:0%
can if you want to think about it that
way<01:39:20.880><c> so</c><01:39:21.040><c> I</c><01:39:21.119><c> would</c><01:39:21.280><c> read</c><01:39:21.440><c> the</c><01:39:21.560><c> paper</c><01:39:21.960><c> to</c><01:39:22.159><c> get</c><01:39:22.280><c> the</c>

01:39:22.390 --> 01:39:22.400 align:start position:0%
way so I would read the paper to get the
 

01:39:22.400 --> 01:39:24.470 align:start position:0%
way so I would read the paper to get the
full<01:39:22.639><c> detail</c><01:39:23.400><c> for</c><01:39:23.560><c> now</c><01:39:23.880><c> we're</c><01:39:24.080><c> just</c><01:39:24.199><c> going</c><01:39:24.360><c> to</c>

01:39:24.470 --> 01:39:24.480 align:start position:0%
full detail for now we're just going to
 

01:39:24.480 --> 01:39:25.950 align:start position:0%
full detail for now we're just going to
stay<01:39:24.639><c> on</c><01:39:24.760><c> the</c><01:39:24.880><c> level</c><01:39:25.080><c> of</c><01:39:25.280><c> this</c><01:39:25.400><c> is</c><01:39:25.599><c> a</c>

01:39:25.950 --> 01:39:25.960 align:start position:0%
stay on the level of this is a
 

01:39:25.960 --> 01:39:28.629 align:start position:0%
stay on the level of this is a
regularization<01:39:26.719><c> technique</c><01:39:27.679><c> and</c><01:39:28.000><c> I</c><01:39:28.159><c> added</c><01:39:28.440><c> it</c>

01:39:28.629 --> 01:39:28.639 align:start position:0%
regularization technique and I added it
 

01:39:28.639 --> 01:39:30.109 align:start position:0%
regularization technique and I added it
because<01:39:28.840><c> I'm</c><01:39:29.000><c> about</c><01:39:29.159><c> to</c><01:39:29.280><c> scale</c><01:39:29.520><c> up</c><01:39:29.639><c> the</c><01:39:29.760><c> model</c>

01:39:30.109 --> 01:39:30.119 align:start position:0%
because I'm about to scale up the model
 

01:39:30.119 --> 01:39:32.350 align:start position:0%
because I'm about to scale up the model
quite<01:39:30.280><c> a</c><01:39:30.400><c> bit</c><01:39:30.599><c> and</c><01:39:30.719><c> I</c><01:39:30.800><c> was</c><01:39:30.920><c> concerned</c><01:39:31.199><c> about</c>

01:39:32.350 --> 01:39:32.360 align:start position:0%
quite a bit and I was concerned about
 

01:39:32.360 --> 01:39:34.750 align:start position:0%
quite a bit and I was concerned about
overfitting<01:39:33.360><c> so</c><01:39:33.960><c> now</c><01:39:34.080><c> when</c><01:39:34.199><c> we</c><01:39:34.320><c> scroll</c><01:39:34.560><c> up</c><01:39:34.639><c> to</c>

01:39:34.750 --> 01:39:34.760 align:start position:0%
overfitting so now when we scroll up to
 

01:39:34.760 --> 01:39:36.950 align:start position:0%
overfitting so now when we scroll up to
the<01:39:34.920><c> top</c><01:39:35.800><c> uh</c><01:39:35.880><c> we'll</c><01:39:36.080><c> see</c><01:39:36.280><c> that</c><01:39:36.440><c> I</c><01:39:36.560><c> changed</c><01:39:36.840><c> a</c>

01:39:36.950 --> 01:39:36.960 align:start position:0%
the top uh we'll see that I changed a
 

01:39:36.960 --> 01:39:38.589 align:start position:0%
the top uh we'll see that I changed a
number<01:39:37.159><c> of</c><01:39:37.440><c> hyper</c><01:39:37.719><c> parameters</c><01:39:38.199><c> here</c><01:39:38.400><c> about</c>

01:39:38.589 --> 01:39:38.599 align:start position:0%
number of hyper parameters here about
 

01:39:38.599 --> 01:39:40.750 align:start position:0%
number of hyper parameters here about
our<01:39:38.760><c> neural</c><01:39:39.080><c> nut</c><01:39:39.760><c> so</c><01:39:39.960><c> I</c><01:39:40.040><c> made</c><01:39:40.199><c> the</c><01:39:40.320><c> batch</c><01:39:40.560><c> size</c>

01:39:40.750 --> 01:39:40.760 align:start position:0%
our neural nut so I made the batch size
 

01:39:40.760 --> 01:39:43.629 align:start position:0%
our neural nut so I made the batch size
be<01:39:40.920><c> much</c><01:39:41.080><c> larger</c><01:39:41.520><c> now</c><01:39:41.639><c> it's</c><01:39:42.159><c> 64</c><01:39:43.159><c> I</c><01:39:43.239><c> changed</c><01:39:43.560><c> the</c>

01:39:43.629 --> 01:39:43.639 align:start position:0%
be much larger now it's 64 I changed the
 

01:39:43.639 --> 01:39:46.109 align:start position:0%
be much larger now it's 64 I changed the
block<01:39:43.880><c> size</c><01:39:44.040><c> to</c><01:39:44.159><c> be</c><01:39:44.440><c> 256</c><01:39:45.440><c> so</c><01:39:45.679><c> previously</c><01:39:46.040><c> it</c>

01:39:46.109 --> 01:39:46.119 align:start position:0%
block size to be 256 so previously it
 

01:39:46.119 --> 01:39:47.629 align:start position:0%
block size to be 256 so previously it
was<01:39:46.320><c> just</c><01:39:46.480><c> eight</c><01:39:46.880><c> eight</c><01:39:47.119><c> characters</c><01:39:47.520><c> of</c>

01:39:47.629 --> 01:39:47.639 align:start position:0%
was just eight eight characters of
 

01:39:47.639 --> 01:39:50.310 align:start position:0%
was just eight eight characters of
context<01:39:48.280><c> now</c><01:39:48.480><c> it</c><01:39:48.599><c> is</c><01:39:48.760><c> 256</c><01:39:49.760><c> characters</c><01:39:50.159><c> of</c>

01:39:50.310 --> 01:39:50.320 align:start position:0%
context now it is 256 characters of
 

01:39:50.320 --> 01:39:54.149 align:start position:0%
context now it is 256 characters of
context<01:39:50.880><c> to</c><01:39:51.080><c> predict</c><01:39:51.440><c> the</c><01:39:51.560><c> 257th</c>

01:39:54.149 --> 01:39:54.159 align:start position:0%
context to predict the 257th
 

01:39:54.159 --> 01:39:55.830 align:start position:0%
context to predict the 257th
uh<01:39:54.360><c> I</c><01:39:54.760><c> brought</c><01:39:55.000><c> down</c><01:39:55.159><c> the</c><01:39:55.239><c> learning</c><01:39:55.560><c> rate</c><01:39:55.760><c> a</c>

01:39:55.830 --> 01:39:55.840 align:start position:0%
uh I brought down the learning rate a
 

01:39:55.840 --> 01:39:57.310 align:start position:0%
uh I brought down the learning rate a
little<01:39:56.040><c> bit</c><01:39:56.239><c> because</c><01:39:56.440><c> the</c><01:39:56.520><c> neural</c><01:39:56.840><c> net</c><01:39:57.040><c> is</c><01:39:57.119><c> now</c>

01:39:57.310 --> 01:39:57.320 align:start position:0%
little bit because the neural net is now
 

01:39:57.320 --> 01:39:58.790 align:start position:0%
little bit because the neural net is now
much<01:39:57.520><c> bigger</c><01:39:57.960><c> so</c><01:39:58.239><c> I</c><01:39:58.360><c> brought</c><01:39:58.560><c> down</c><01:39:58.719><c> the</c>

01:39:58.790 --> 01:39:58.800 align:start position:0%
much bigger so I brought down the
 

01:39:58.800 --> 01:40:01.030 align:start position:0%
much bigger so I brought down the
learning<01:39:59.159><c> rate</c><01:40:00.159><c> the</c><01:40:00.280><c> embedding</c><01:40:00.639><c> Dimension</c><01:40:00.920><c> is</c>

01:40:01.030 --> 01:40:01.040 align:start position:0%
learning rate the embedding Dimension is
 

01:40:01.040 --> 01:40:05.350 align:start position:0%
learning rate the embedding Dimension is
now<01:40:01.199><c> 384</c><01:40:02.199><c> and</c><01:40:02.360><c> there</c><01:40:02.440><c> are</c><01:40:02.719><c> six</c><01:40:03.000><c> heads</c><01:40:03.960><c> so</c><01:40:04.360><c> 384</c>

01:40:05.350 --> 01:40:05.360 align:start position:0%
now 384 and there are six heads so 384
 

01:40:05.360 --> 01:40:08.189 align:start position:0%
now 384 and there are six heads so 384
divide<01:40:05.760><c> 6</c><01:40:06.360><c> means</c><01:40:06.639><c> that</c><01:40:06.800><c> every</c><01:40:07.040><c> head</c><01:40:07.280><c> is</c><01:40:07.440><c> 64</c>

01:40:08.189 --> 01:40:08.199 align:start position:0%
divide 6 means that every head is 64
 

01:40:08.199 --> 01:40:11.629 align:start position:0%
divide 6 means that every head is 64
dimensional<01:40:08.920><c> as</c><01:40:09.040><c> it</c><01:40:09.480><c> as</c><01:40:09.560><c> a</c><01:40:10.119><c> standard</c><01:40:11.119><c> and</c><01:40:11.320><c> then</c>

01:40:11.629 --> 01:40:11.639 align:start position:0%
dimensional as it as a standard and then
 

01:40:11.639 --> 01:40:13.950 align:start position:0%
dimensional as it as a standard and then
there's<01:40:11.960><c> going</c><01:40:12.080><c> to</c><01:40:12.159><c> be</c><01:40:12.360><c> six</c><01:40:12.560><c> layers</c><01:40:12.840><c> of</c><01:40:13.040><c> that</c>

01:40:13.950 --> 01:40:13.960 align:start position:0%
there's going to be six layers of that
 

01:40:13.960 --> 01:40:15.870 align:start position:0%
there's going to be six layers of that
and<01:40:14.080><c> the</c><01:40:14.199><c> Dropout</c><01:40:14.560><c> will</c><01:40:14.679><c> be</c><01:40:14.800><c> at</c><01:40:14.880><c> 02</c><01:40:15.440><c> so</c><01:40:15.679><c> every</c>

01:40:15.870 --> 01:40:15.880 align:start position:0%
and the Dropout will be at 02 so every
 

01:40:15.880 --> 01:40:18.189 align:start position:0%
and the Dropout will be at 02 so every
forward<01:40:16.199><c> backward</c><01:40:16.520><c> pass</c><01:40:16.760><c> 20%</c><01:40:17.599><c> of</c><01:40:17.840><c> all</c><01:40:17.960><c> of</c>

01:40:18.189 --> 01:40:18.199 align:start position:0%
forward backward pass 20% of all of
 

01:40:18.199 --> 01:40:21.550 align:start position:0%
forward backward pass 20% of all of
these<01:40:18.880><c> um</c><01:40:19.880><c> intermediate</c><01:40:20.760><c> calculations</c><01:40:21.320><c> are</c>

01:40:21.550 --> 01:40:21.560 align:start position:0%
these um intermediate calculations are
 

01:40:21.560 --> 01:40:24.109 align:start position:0%
these um intermediate calculations are
disabled<01:40:22.000><c> and</c><01:40:22.159><c> dropped</c><01:40:22.480><c> to</c><01:40:22.679><c> zero</c>

01:40:24.109 --> 01:40:24.119 align:start position:0%
disabled and dropped to zero
 

01:40:24.119 --> 01:40:25.550 align:start position:0%
disabled and dropped to zero
and<01:40:24.280><c> then</c><01:40:24.440><c> I</c><01:40:24.599><c> already</c><01:40:24.840><c> trained</c><01:40:25.199><c> this</c><01:40:25.320><c> and</c><01:40:25.440><c> I</c>

01:40:25.550 --> 01:40:25.560 align:start position:0%
and then I already trained this and I
 

01:40:25.560 --> 01:40:28.510 align:start position:0%
and then I already trained this and I
ran<01:40:25.800><c> it</c><01:40:26.119><c> so</c><01:40:26.719><c> uh</c><01:40:27.119><c> drum</c><01:40:27.440><c> roll</c><01:40:27.719><c> how</c><01:40:27.840><c> well</c><01:40:28.000><c> does</c><01:40:28.119><c> it</c>

01:40:28.510 --> 01:40:28.520 align:start position:0%
ran it so uh drum roll how well does it
 

01:40:28.520 --> 01:40:31.629 align:start position:0%
ran it so uh drum roll how well does it
perform<01:40:29.520><c> so</c><01:40:29.679><c> let</c><01:40:29.760><c> me</c><01:40:29.880><c> just</c><01:40:30.000><c> scroll</c><01:40:30.280><c> up</c>

01:40:31.629 --> 01:40:31.639 align:start position:0%
perform so let me just scroll up
 

01:40:31.639 --> 01:40:34.830 align:start position:0%
perform so let me just scroll up
here<01:40:32.639><c> we</c><01:40:32.840><c> get</c><01:40:33.119><c> a</c><01:40:33.320><c> validation</c><01:40:33.760><c> loss</c><01:40:34.080><c> of</c>

01:40:34.830 --> 01:40:34.840 align:start position:0%
here we get a validation loss of
 

01:40:34.840 --> 01:40:37.070 align:start position:0%
here we get a validation loss of
1.48<01:40:35.840><c> which</c><01:40:35.960><c> is</c><01:40:36.119><c> actually</c><01:40:36.440><c> quite</c><01:40:36.639><c> a</c><01:40:36.760><c> bit</c><01:40:36.880><c> of</c><01:40:36.960><c> an</c>

01:40:37.070 --> 01:40:37.080 align:start position:0%
1.48 which is actually quite a bit of an
 

01:40:37.080 --> 01:40:38.629 align:start position:0%
1.48 which is actually quite a bit of an
improvement<01:40:37.480><c> on</c><01:40:37.599><c> what</c><01:40:37.719><c> we</c><01:40:37.840><c> had</c><01:40:38.000><c> before</c><01:40:38.360><c> which</c>

01:40:38.629 --> 01:40:38.639 align:start position:0%
improvement on what we had before which
 

01:40:38.639 --> 01:40:41.629 align:start position:0%
improvement on what we had before which
I<01:40:38.719><c> think</c><01:40:38.840><c> was</c><01:40:39.400><c> 2.07</c><01:40:40.400><c> so</c><01:40:40.560><c> it</c><01:40:40.639><c> went</c><01:40:40.800><c> from</c><01:40:40.960><c> 2.07</c>

01:40:41.629 --> 01:40:41.639 align:start position:0%
I think was 2.07 so it went from 2.07
 

01:40:41.639 --> 01:40:43.669 align:start position:0%
I think was 2.07 so it went from 2.07
all<01:40:41.760><c> the</c><01:40:41.840><c> way</c><01:40:41.960><c> down</c><01:40:42.080><c> to</c><01:40:42.199><c> 1.48</c><01:40:43.080><c> just</c><01:40:43.199><c> by</c><01:40:43.360><c> scaling</c>

01:40:43.669 --> 01:40:43.679 align:start position:0%
all the way down to 1.48 just by scaling
 

01:40:43.679 --> 01:40:45.390 align:start position:0%
all the way down to 1.48 just by scaling
up<01:40:43.800><c> this</c><01:40:43.920><c> neural</c><01:40:44.239><c> nut</c><01:40:44.599><c> with</c><01:40:44.719><c> the</c><01:40:44.840><c> code</c><01:40:45.080><c> that</c><01:40:45.239><c> we</c>

01:40:45.390 --> 01:40:45.400 align:start position:0%
up this neural nut with the code that we
 

01:40:45.400 --> 01:40:47.669 align:start position:0%
up this neural nut with the code that we
have<01:40:46.320><c> and</c><01:40:46.520><c> this</c><01:40:46.639><c> of</c><01:40:46.760><c> course</c><01:40:46.920><c> ran</c><01:40:47.159><c> for</c><01:40:47.360><c> a</c><01:40:47.480><c> lot</c>

01:40:47.669 --> 01:40:47.679 align:start position:0%
have and this of course ran for a lot
 

01:40:47.679 --> 01:40:49.709 align:start position:0%
have and this of course ran for a lot
longer<01:40:48.119><c> this</c><01:40:48.560><c> maybe</c><01:40:48.840><c> trained</c><01:40:49.159><c> for</c><01:40:49.400><c> I</c><01:40:49.480><c> want</c><01:40:49.599><c> to</c>

01:40:49.709 --> 01:40:49.719 align:start position:0%
longer this maybe trained for I want to
 

01:40:49.719 --> 01:40:52.870 align:start position:0%
longer this maybe trained for I want to
say<01:40:49.880><c> about</c><01:40:50.119><c> 15</c><01:40:50.520><c> minutes</c><01:40:51.239><c> on</c><01:40:51.480><c> my</c><01:40:51.719><c> a100</c><01:40:52.280><c> GPU</c><01:40:52.760><c> so</c>

01:40:52.870 --> 01:40:52.880 align:start position:0%
say about 15 minutes on my a100 GPU so
 

01:40:52.880 --> 01:40:54.950 align:start position:0%
say about 15 minutes on my a100 GPU so
that's<01:40:52.960><c> a</c><01:40:53.080><c> pretty</c><01:40:53.360><c> a</c><01:40:53.520><c> GPU</c><01:40:54.520><c> and</c><01:40:54.679><c> if</c><01:40:54.760><c> you</c><01:40:54.840><c> don't</c>

01:40:54.950 --> 01:40:54.960 align:start position:0%
that's a pretty a GPU and if you don't
 

01:40:54.960 --> 01:40:56.109 align:start position:0%
that's a pretty a GPU and if you don't
have<01:40:55.080><c> a</c><01:40:55.159><c> GPU</c><01:40:55.480><c> you're</c><01:40:55.599><c> not</c><01:40:55.719><c> going</c><01:40:55.800><c> to</c><01:40:55.880><c> be</c><01:40:56.000><c> able</c>

01:40:56.109 --> 01:40:56.119 align:start position:0%
have a GPU you're not going to be able
 

01:40:56.119 --> 01:40:58.990 align:start position:0%
have a GPU you're not going to be able
to<01:40:56.239><c> reproduce</c><01:40:56.800><c> this</c><01:40:57.560><c> uh</c><01:40:57.719><c> on</c><01:40:57.840><c> a</c><01:40:58.000><c> CPU</c><01:40:58.560><c> this</c><01:40:58.800><c> would</c>

01:40:58.990 --> 01:40:59.000 align:start position:0%
to reproduce this uh on a CPU this would
 

01:40:59.000 --> 01:41:01.470 align:start position:0%
to reproduce this uh on a CPU this would
be<01:40:59.560><c> um</c><01:41:00.000><c> I</c><01:41:00.080><c> would</c><01:41:00.239><c> not</c><01:41:00.360><c> run</c><01:41:00.599><c> this</c><01:41:00.719><c> on</c><01:41:00.800><c> a</c><01:41:00.920><c> CPU</c><01:41:01.320><c> or</c>

01:41:01.470 --> 01:41:01.480 align:start position:0%
be um I would not run this on a CPU or
 

01:41:01.480 --> 01:41:02.990 align:start position:0%
be um I would not run this on a CPU or
MacBook<01:41:01.840><c> or</c><01:41:01.960><c> something</c><01:41:02.239><c> like</c><01:41:02.440><c> that</c><01:41:02.760><c> you'll</c>

01:41:02.990 --> 01:41:03.000 align:start position:0%
MacBook or something like that you'll
 

01:41:03.000 --> 01:41:04.750 align:start position:0%
MacBook or something like that you'll
have<01:41:03.119><c> to</c><01:41:03.280><c> Brak</c><01:41:03.560><c> down</c><01:41:03.719><c> the</c><01:41:03.840><c> number</c><01:41:04.080><c> of</c><01:41:04.639><c> uh</c>

01:41:04.750 --> 01:41:04.760 align:start position:0%
have to Brak down the number of uh
 

01:41:04.760 --> 01:41:06.790 align:start position:0%
have to Brak down the number of uh
layers<01:41:05.480><c> and</c><01:41:05.639><c> the</c><01:41:05.760><c> embedding</c><01:41:06.159><c> Dimension</c><01:41:06.679><c> and</c>

01:41:06.790 --> 01:41:06.800 align:start position:0%
layers and the embedding Dimension and
 

01:41:06.800 --> 01:41:09.750 align:start position:0%
layers and the embedding Dimension and
so<01:41:07.360><c> on</c><01:41:08.360><c> uh</c><01:41:08.480><c> but</c><01:41:08.639><c> in</c><01:41:08.800><c> about</c><01:41:09.000><c> 15</c><01:41:09.280><c> minutes</c><01:41:09.560><c> we</c><01:41:09.639><c> can</c>

01:41:09.750 --> 01:41:09.760 align:start position:0%
so on uh but in about 15 minutes we can
 

01:41:09.760 --> 01:41:12.950 align:start position:0%
so on uh but in about 15 minutes we can
get<01:41:09.880><c> this</c><01:41:10.000><c> kind</c><01:41:10.119><c> of</c><01:41:10.199><c> a</c><01:41:10.360><c> result</c><01:41:11.280><c> and</c><01:41:11.880><c> um</c><01:41:12.520><c> I'm</c>

01:41:12.950 --> 01:41:12.960 align:start position:0%
get this kind of a result and um I'm
 

01:41:12.960 --> 01:41:15.109 align:start position:0%
get this kind of a result and um I'm
printing<01:41:13.960><c> some</c><01:41:14.119><c> of</c><01:41:14.199><c> the</c><01:41:14.280><c> Shakespeare</c><01:41:14.840><c> here</c>

01:41:15.109 --> 01:41:15.119 align:start position:0%
printing some of the Shakespeare here
 

01:41:15.119 --> 01:41:17.430 align:start position:0%
printing some of the Shakespeare here
but<01:41:15.239><c> what</c><01:41:15.400><c> I</c><01:41:15.520><c> did</c><01:41:15.719><c> also</c><01:41:16.000><c> is</c><01:41:16.119><c> I</c><01:41:16.280><c> printed</c><01:41:16.840><c> 10,000</c>

01:41:17.430 --> 01:41:17.440 align:start position:0%
but what I did also is I printed 10,000
 

01:41:17.440 --> 01:41:18.910 align:start position:0%
but what I did also is I printed 10,000
characters<01:41:17.880><c> so</c><01:41:18.040><c> a</c><01:41:18.119><c> lot</c><01:41:18.320><c> more</c><01:41:18.520><c> and</c><01:41:18.599><c> I</c><01:41:18.719><c> wrote</c>

01:41:18.910 --> 01:41:18.920 align:start position:0%
characters so a lot more and I wrote
 

01:41:18.920 --> 01:41:21.310 align:start position:0%
characters so a lot more and I wrote
them<01:41:19.000><c> to</c><01:41:19.159><c> a</c><01:41:19.599><c> file</c><01:41:20.599><c> and</c><01:41:20.679><c> so</c><01:41:20.880><c> here</c><01:41:20.960><c> we</c><01:41:21.080><c> see</c><01:41:21.239><c> some</c>

01:41:21.310 --> 01:41:21.320 align:start position:0%
them to a file and so here we see some
 

01:41:21.320 --> 01:41:24.310 align:start position:0%
them to a file and so here we see some
of<01:41:21.440><c> the</c><01:41:21.520><c> outputs</c>

01:41:24.310 --> 01:41:24.320 align:start position:0%
of the outputs
 

01:41:24.320 --> 01:41:26.950 align:start position:0%
of the outputs
so<01:41:24.920><c> it's</c><01:41:25.080><c> a</c><01:41:25.239><c> lot</c><01:41:25.400><c> more</c><01:41:25.599><c> recognizable</c><01:41:26.440><c> as</c><01:41:26.639><c> the</c>

01:41:26.950 --> 01:41:26.960 align:start position:0%
so it's a lot more recognizable as the
 

01:41:26.960 --> 01:41:29.109 align:start position:0%
so it's a lot more recognizable as the
input<01:41:27.280><c> text</c><01:41:27.520><c> file</c><01:41:28.239><c> so</c><01:41:28.400><c> the</c><01:41:28.520><c> input</c><01:41:28.719><c> text</c><01:41:28.920><c> file</c>

01:41:29.109 --> 01:41:29.119 align:start position:0%
input text file so the input text file
 

01:41:29.119 --> 01:41:31.910 align:start position:0%
input text file so the input text file
just<01:41:29.239><c> for</c><01:41:29.440><c> reference</c><01:41:30.040><c> looked</c><01:41:30.320><c> like</c><01:41:30.760><c> this</c><01:41:31.760><c> so</c>

01:41:31.910 --> 01:41:31.920 align:start position:0%
just for reference looked like this so
 

01:41:31.920 --> 01:41:33.589 align:start position:0%
just for reference looked like this so
there's<01:41:32.159><c> always</c><01:41:32.440><c> like</c><01:41:32.639><c> someone</c><01:41:33.040><c> speaking</c><01:41:33.480><c> in</c>

01:41:33.589 --> 01:41:33.599 align:start position:0%
there's always like someone speaking in
 

01:41:33.599 --> 01:41:37.709 align:start position:0%
there's always like someone speaking in
this<01:41:33.800><c> manner</c><01:41:34.800><c> and</c><01:41:35.639><c> uh</c><01:41:36.639><c> our</c><01:41:36.840><c> predictions</c><01:41:37.360><c> now</c>

01:41:37.709 --> 01:41:37.719 align:start position:0%
this manner and uh our predictions now
 

01:41:37.719 --> 01:41:40.229 align:start position:0%
this manner and uh our predictions now
take<01:41:37.920><c> on</c><01:41:38.159><c> that</c><01:41:38.560><c> form</c><01:41:39.560><c> except</c><01:41:39.880><c> of</c><01:41:40.000><c> course</c>

01:41:40.229 --> 01:41:40.239 align:start position:0%
take on that form except of course
 

01:41:40.239 --> 01:41:41.629 align:start position:0%
take on that form except of course
they're<01:41:40.639><c> they're</c><01:41:40.800><c> nonsensical</c><01:41:41.440><c> when</c><01:41:41.520><c> you</c>

01:41:41.629 --> 01:41:41.639 align:start position:0%
they're they're nonsensical when you
 

01:41:41.639 --> 01:41:43.629 align:start position:0%
they're they're nonsensical when you
actually<01:41:41.880><c> read</c><01:41:42.080><c> them</c>

01:41:43.629 --> 01:41:43.639 align:start position:0%
actually read them
 

01:41:43.639 --> 01:41:47.750 align:start position:0%
actually read them
so<01:41:44.639><c> it</c><01:41:44.840><c> is</c><01:41:45.480><c> every</c><01:41:45.760><c> crimp</c><01:41:46.040><c> tap</c><01:41:46.239><c> be</c><01:41:46.400><c> a</c><01:41:46.560><c> house</c><01:41:47.480><c> oh</c>

01:41:47.750 --> 01:41:47.760 align:start position:0%
so it is every crimp tap be a house oh
 

01:41:47.760 --> 01:41:48.790 align:start position:0%
so it is every crimp tap be a house oh
those

01:41:48.790 --> 01:41:48.800 align:start position:0%
those
 

01:41:48.800 --> 01:41:51.189 align:start position:0%
those
prepation<01:41:49.800><c> we</c><01:41:50.000><c> give</c>

01:41:51.189 --> 01:41:51.199 align:start position:0%
prepation we give
 

01:41:51.199 --> 01:41:56.149 align:start position:0%
prepation we give
heed<01:41:52.199><c> um</c><01:41:52.719><c> you</c><01:41:52.880><c> know</c>

01:41:56.149 --> 01:41:56.159 align:start position:0%
 
 

01:41:56.159 --> 01:41:59.790 align:start position:0%
 
Oho<01:41:56.639><c> sent</c><01:41:56.920><c> me</c><01:41:57.119><c> you</c><01:41:57.400><c> mighty</c>

01:41:59.790 --> 01:41:59.800 align:start position:0%
 
 

01:41:59.800 --> 01:42:02.350 align:start position:0%
 
Lord<01:42:00.800><c> anyway</c><01:42:01.080><c> so</c><01:42:01.280><c> you</c><01:42:01.360><c> can</c><01:42:01.480><c> read</c><01:42:01.679><c> through</c><01:42:01.920><c> this</c>

01:42:02.350 --> 01:42:02.360 align:start position:0%
Lord anyway so you can read through this
 

01:42:02.360 --> 01:42:04.669 align:start position:0%
Lord anyway so you can read through this
um<01:42:02.800><c> it's</c><01:42:03.000><c> nonsensical</c><01:42:03.639><c> of</c><01:42:03.760><c> course</c><01:42:04.080><c> but</c><01:42:04.560><c> this</c>

01:42:04.669 --> 01:42:04.679 align:start position:0%
um it's nonsensical of course but this
 

01:42:04.679 --> 01:42:06.510 align:start position:0%
um it's nonsensical of course but this
is<01:42:04.880><c> just</c><01:42:05.080><c> a</c><01:42:05.320><c> Transformer</c><01:42:05.840><c> trained</c><01:42:06.199><c> on</c><01:42:06.320><c> a</c>

01:42:06.510 --> 01:42:06.520 align:start position:0%
is just a Transformer trained on a
 

01:42:06.520 --> 01:42:09.109 align:start position:0%
is just a Transformer trained on a
character<01:42:06.880><c> level</c><01:42:07.360><c> for</c><01:42:07.719><c> 1</c><01:42:07.960><c> million</c><01:42:08.400><c> characters</c>

01:42:09.109 --> 01:42:09.119 align:start position:0%
character level for 1 million characters
 

01:42:09.119 --> 01:42:10.550 align:start position:0%
character level for 1 million characters
that<01:42:09.280><c> come</c><01:42:09.440><c> from</c><01:42:09.520><c> Shakespeare</c><01:42:10.239><c> so</c><01:42:10.360><c> there's</c>

01:42:10.550 --> 01:42:10.560 align:start position:0%
that come from Shakespeare so there's
 

01:42:10.560 --> 01:42:12.709 align:start position:0%
that come from Shakespeare so there's
sort<01:42:10.719><c> of</c><01:42:10.840><c> like</c><01:42:10.960><c> blabbers</c><01:42:11.400><c> on</c><01:42:11.679><c> in</c><01:42:11.840><c> Shakespeare</c>

01:42:12.709 --> 01:42:12.719 align:start position:0%
sort of like blabbers on in Shakespeare
 

01:42:12.719 --> 01:42:14.709 align:start position:0%
sort of like blabbers on in Shakespeare
like<01:42:13.239><c> manner</c><01:42:13.920><c> but</c><01:42:14.040><c> it</c><01:42:14.119><c> doesn't</c><01:42:14.360><c> of</c><01:42:14.480><c> course</c>

01:42:14.709 --> 01:42:14.719 align:start position:0%
like manner but it doesn't of course
 

01:42:14.719 --> 01:42:17.990 align:start position:0%
like manner but it doesn't of course
make<01:42:14.920><c> sense</c><01:42:15.360><c> at</c><01:42:15.560><c> this</c><01:42:15.920><c> scale</c><01:42:16.920><c> uh</c><01:42:17.080><c> but</c><01:42:17.360><c> I</c><01:42:17.440><c> think</c>

01:42:17.990 --> 01:42:18.000 align:start position:0%
make sense at this scale uh but I think
 

01:42:18.000 --> 01:42:19.149 align:start position:0%
make sense at this scale uh but I think
I<01:42:18.080><c> think</c><01:42:18.360><c> still</c><01:42:18.639><c> a</c><01:42:18.800><c> pretty</c><01:42:19.000><c> good</c>

01:42:19.149 --> 01:42:19.159 align:start position:0%
I think still a pretty good
 

01:42:19.159 --> 01:42:20.790 align:start position:0%
I think still a pretty good
demonstration<01:42:19.639><c> of</c><01:42:19.840><c> what's</c>

01:42:20.790 --> 01:42:20.800 align:start position:0%
demonstration of what's
 

01:42:20.800 --> 01:42:24.470 align:start position:0%
demonstration of what's
possible<01:42:21.800><c> so</c><01:42:22.560><c> now</c>

01:42:24.470 --> 01:42:24.480 align:start position:0%
possible so now
 

01:42:24.480 --> 01:42:26.350 align:start position:0%
possible so now
I<01:42:24.599><c> think</c><01:42:25.000><c> uh</c><01:42:25.159><c> that</c><01:42:25.320><c> kind</c><01:42:25.400><c> of</c><01:42:25.560><c> like</c><01:42:25.760><c> concludes</c>

01:42:26.350 --> 01:42:26.360 align:start position:0%
I think uh that kind of like concludes
 

01:42:26.360 --> 01:42:28.709 align:start position:0%
I think uh that kind of like concludes
the<01:42:26.639><c> programming</c><01:42:27.159><c> section</c><01:42:27.560><c> of</c><01:42:27.760><c> this</c><01:42:27.920><c> video</c><01:42:28.520><c> we</c>

01:42:28.709 --> 01:42:28.719 align:start position:0%
the programming section of this video we
 

01:42:28.719 --> 01:42:30.430 align:start position:0%
the programming section of this video we
basically<01:42:29.199><c> kind</c><01:42:29.360><c> of</c><01:42:29.719><c> uh</c><01:42:29.840><c> did</c><01:42:29.960><c> a</c><01:42:30.040><c> pretty</c><01:42:30.239><c> good</c>

01:42:30.430 --> 01:42:30.440 align:start position:0%
basically kind of uh did a pretty good
 

01:42:30.440 --> 01:42:32.830 align:start position:0%
basically kind of uh did a pretty good
job<01:42:30.840><c> and</c><01:42:31.520><c> um</c><01:42:32.040><c> of</c><01:42:32.199><c> implementing</c><01:42:32.679><c> this</c>

01:42:32.830 --> 01:42:32.840 align:start position:0%
job and um of implementing this
 

01:42:32.840 --> 01:42:35.310 align:start position:0%
job and um of implementing this
Transformer<01:42:33.840><c> uh</c><01:42:33.960><c> but</c><01:42:34.119><c> the</c><01:42:34.239><c> picture</c><01:42:35.000><c> doesn't</c>

01:42:35.310 --> 01:42:35.320 align:start position:0%
Transformer uh but the picture doesn't
 

01:42:35.320 --> 01:42:37.470 align:start position:0%
Transformer uh but the picture doesn't
exactly<01:42:35.800><c> match</c><01:42:36.000><c> up</c><01:42:36.199><c> to</c><01:42:36.360><c> what</c><01:42:36.520><c> we've</c><01:42:36.719><c> done</c><01:42:37.320><c> so</c>

01:42:37.470 --> 01:42:37.480 align:start position:0%
exactly match up to what we've done so
 

01:42:37.480 --> 01:42:38.870 align:start position:0%
exactly match up to what we've done so
what's<01:42:37.639><c> going</c><01:42:37.800><c> on</c><01:42:37.960><c> with</c><01:42:38.080><c> all</c><01:42:38.239><c> these</c><01:42:38.440><c> digital</c>

01:42:38.870 --> 01:42:38.880 align:start position:0%
what's going on with all these digital
 

01:42:38.880 --> 01:42:41.350 align:start position:0%
what's going on with all these digital
Parts<01:42:39.239><c> here</c><01:42:39.920><c> so</c><01:42:40.080><c> let</c><01:42:40.199><c> me</c><01:42:40.360><c> finish</c><01:42:40.800><c> explaining</c>

01:42:41.350 --> 01:42:41.360 align:start position:0%
Parts here so let me finish explaining
 

01:42:41.360 --> 01:42:43.070 align:start position:0%
Parts here so let me finish explaining
this<01:42:41.560><c> architecture</c><01:42:42.040><c> and</c><01:42:42.159><c> why</c><01:42:42.280><c> it</c><01:42:42.360><c> looks</c><01:42:42.560><c> so</c>

01:42:43.070 --> 01:42:43.080 align:start position:0%
this architecture and why it looks so
 

01:42:43.080 --> 01:42:45.830 align:start position:0%
this architecture and why it looks so
funky<01:42:44.080><c> basically</c><01:42:44.440><c> what's</c><01:42:44.599><c> happening</c><01:42:44.960><c> here</c><01:42:45.119><c> is</c>

01:42:45.830 --> 01:42:45.840 align:start position:0%
funky basically what's happening here is
 

01:42:45.840 --> 01:42:47.910 align:start position:0%
funky basically what's happening here is
what<01:42:46.000><c> we</c><01:42:46.159><c> implemented</c><01:42:46.800><c> here</c><01:42:47.080><c> is</c><01:42:47.239><c> a</c><01:42:47.400><c> decoder</c>

01:42:47.910 --> 01:42:47.920 align:start position:0%
what we implemented here is a decoder
 

01:42:47.920 --> 01:42:50.830 align:start position:0%
what we implemented here is a decoder
only<01:42:48.360><c> Transformer</c><01:42:49.360><c> so</c><01:42:49.520><c> there's</c><01:42:49.800><c> no</c><01:42:50.320><c> component</c>

01:42:50.830 --> 01:42:50.840 align:start position:0%
only Transformer so there's no component
 

01:42:50.840 --> 01:42:52.910 align:start position:0%
only Transformer so there's no component
here<01:42:51.159><c> this</c><01:42:51.320><c> part</c><01:42:51.520><c> is</c><01:42:51.639><c> called</c><01:42:51.800><c> the</c><01:42:51.920><c> encoder</c><01:42:52.800><c> and</c>

01:42:52.910 --> 01:42:52.920 align:start position:0%
here this part is called the encoder and
 

01:42:52.920 --> 01:42:55.750 align:start position:0%
here this part is called the encoder and
there's<01:42:53.320><c> no</c><01:42:53.599><c> cross</c><01:42:53.920><c> attention</c><01:42:54.560><c> block</c><01:42:54.960><c> here</c>

01:42:55.750 --> 01:42:55.760 align:start position:0%
there's no cross attention block here
 

01:42:55.760 --> 01:42:58.109 align:start position:0%
there's no cross attention block here
our<01:42:56.000><c> block</c><01:42:56.320><c> only</c><01:42:56.639><c> has</c><01:42:56.880><c> a</c><01:42:57.040><c> self</c><01:42:57.360><c> attention</c><01:42:57.960><c> and</c>

01:42:58.109 --> 01:42:58.119 align:start position:0%
our block only has a self attention and
 

01:42:58.119 --> 01:43:00.350 align:start position:0%
our block only has a self attention and
the<01:42:58.239><c> feet</c><01:42:58.480><c> forward</c><01:42:59.000><c> so</c><01:42:59.159><c> it</c><01:42:59.280><c> is</c><01:42:59.480><c> missing</c><01:42:59.920><c> this</c>

01:43:00.350 --> 01:43:00.360 align:start position:0%
the feet forward so it is missing this
 

01:43:00.360 --> 01:43:03.270 align:start position:0%
the feet forward so it is missing this
third<01:43:01.040><c> in</c><01:43:01.239><c> between</c><01:43:01.920><c> piece</c><01:43:02.280><c> here</c><01:43:02.960><c> this</c><01:43:03.119><c> piece</c>

01:43:03.270 --> 01:43:03.280 align:start position:0%
third in between piece here this piece
 

01:43:03.280 --> 01:43:05.470 align:start position:0%
third in between piece here this piece
does<01:43:03.480><c> cross</c><01:43:03.719><c> attention</c><01:43:04.560><c> so</c><01:43:04.719><c> we</c><01:43:04.840><c> don't</c><01:43:05.040><c> have</c><01:43:05.239><c> it</c>

01:43:05.470 --> 01:43:05.480 align:start position:0%
does cross attention so we don't have it
 

01:43:05.480 --> 01:43:07.070 align:start position:0%
does cross attention so we don't have it
and<01:43:05.599><c> we</c><01:43:05.679><c> don't</c><01:43:05.800><c> have</c><01:43:05.920><c> the</c><01:43:06.040><c> encoder</c><01:43:06.800><c> we</c><01:43:06.960><c> just</c>

01:43:07.070 --> 01:43:07.080 align:start position:0%
and we don't have the encoder we just
 

01:43:07.080 --> 01:43:08.870 align:start position:0%
and we don't have the encoder we just
have<01:43:07.199><c> the</c><01:43:07.320><c> decoder</c><01:43:08.199><c> and</c><01:43:08.320><c> the</c><01:43:08.400><c> reason</c><01:43:08.639><c> we</c><01:43:08.760><c> have</c>

01:43:08.870 --> 01:43:08.880 align:start position:0%
have the decoder and the reason we have
 

01:43:08.880 --> 01:43:12.109 align:start position:0%
have the decoder and the reason we have
a<01:43:09.159><c> decoder</c><01:43:09.960><c> only</c><01:43:10.960><c> uh</c><01:43:11.119><c> is</c><01:43:11.320><c> because</c><01:43:11.560><c> we</c><01:43:11.679><c> are</c><01:43:11.920><c> just</c>

01:43:12.109 --> 01:43:12.119 align:start position:0%
a decoder only uh is because we are just
 

01:43:12.119 --> 01:43:13.430 align:start position:0%
a decoder only uh is because we are just
uh<01:43:12.239><c> generating</c><01:43:12.719><c> text</c><01:43:13.119><c> and</c><01:43:13.239><c> it's</c>

01:43:13.430 --> 01:43:13.440 align:start position:0%
uh generating text and it's
 

01:43:13.440 --> 01:43:15.189 align:start position:0%
uh generating text and it's
unconditioned<01:43:14.119><c> on</c><01:43:14.320><c> anything</c><01:43:14.719><c> we're</c><01:43:14.920><c> just</c>

01:43:15.189 --> 01:43:15.199 align:start position:0%
unconditioned on anything we're just
 

01:43:15.199 --> 01:43:16.830 align:start position:0%
unconditioned on anything we're just
we're<01:43:15.320><c> just</c><01:43:15.440><c> blabbering</c><01:43:15.960><c> on</c><01:43:16.320><c> according</c><01:43:16.599><c> to</c><01:43:16.719><c> a</c>

01:43:16.830 --> 01:43:16.840 align:start position:0%
we're just blabbering on according to a
 

01:43:16.840 --> 01:43:19.669 align:start position:0%
we're just blabbering on according to a
given<01:43:17.040><c> data</c><01:43:17.400><c> set</c><01:43:18.400><c> what</c><01:43:18.560><c> makes</c><01:43:18.760><c> it</c><01:43:18.960><c> a</c><01:43:19.119><c> decoder</c>

01:43:19.669 --> 01:43:19.679 align:start position:0%
given data set what makes it a decoder
 

01:43:19.679 --> 01:43:21.950 align:start position:0%
given data set what makes it a decoder
is<01:43:19.800><c> that</c><01:43:19.920><c> we</c><01:43:20.000><c> are</c><01:43:20.159><c> using</c><01:43:20.400><c> the</c><01:43:20.560><c> Triangular</c><01:43:21.280><c> mask</c>

01:43:21.950 --> 01:43:21.960 align:start position:0%
is that we are using the Triangular mask
 

01:43:21.960 --> 01:43:24.350 align:start position:0%
is that we are using the Triangular mask
in<01:43:22.199><c> our</c><01:43:22.599><c> uh</c><01:43:22.719><c> trans</c><01:43:23.159><c> former</c><01:43:23.760><c> so</c><01:43:23.920><c> it</c><01:43:24.040><c> has</c><01:43:24.199><c> this</c>

01:43:24.350 --> 01:43:24.360 align:start position:0%
in our uh trans former so it has this
 

01:43:24.360 --> 01:43:26.189 align:start position:0%
in our uh trans former so it has this
Auto<01:43:24.639><c> regressive</c><01:43:25.239><c> property</c><01:43:25.719><c> where</c><01:43:25.880><c> we</c><01:43:26.000><c> can</c>

01:43:26.189 --> 01:43:26.199 align:start position:0%
Auto regressive property where we can
 

01:43:26.199 --> 01:43:28.910 align:start position:0%
Auto regressive property where we can
just<01:43:26.480><c> uh</c><01:43:26.560><c> go</c><01:43:26.679><c> and</c><01:43:26.880><c> sample</c><01:43:27.280><c> from</c><01:43:27.599><c> it</c><01:43:28.599><c> so</c><01:43:28.840><c> the</c>

01:43:28.910 --> 01:43:28.920 align:start position:0%
just uh go and sample from it so the
 

01:43:28.920 --> 01:43:30.229 align:start position:0%
just uh go and sample from it so the
fact<01:43:29.080><c> that</c><01:43:29.199><c> it's</c><01:43:29.280><c> using</c><01:43:29.520><c> the</c><01:43:29.639><c> Triangular</c>

01:43:30.229 --> 01:43:30.239 align:start position:0%
fact that it's using the Triangular
 

01:43:30.239 --> 01:43:32.430 align:start position:0%
fact that it's using the Triangular
triangular<01:43:30.760><c> mask</c><01:43:31.520><c> to</c><01:43:31.920><c> mask</c><01:43:32.199><c> out</c><01:43:32.360><c> the</c>

01:43:32.430 --> 01:43:32.440 align:start position:0%
triangular mask to mask out the
 

01:43:32.440 --> 01:43:34.750 align:start position:0%
triangular mask to mask out the
attention<01:43:32.840><c> makes</c><01:43:33.000><c> it</c><01:43:33.119><c> a</c><01:43:33.440><c> decoder</c><01:43:34.440><c> and</c><01:43:34.560><c> it</c><01:43:34.679><c> can</c>

01:43:34.750 --> 01:43:34.760 align:start position:0%
attention makes it a decoder and it can
 

01:43:34.760 --> 01:43:37.390 align:start position:0%
attention makes it a decoder and it can
be<01:43:34.880><c> used</c><01:43:35.080><c> for</c><01:43:35.199><c> language</c><01:43:35.719><c> modeling</c><01:43:36.719><c> now</c><01:43:37.239><c> the</c>

01:43:37.390 --> 01:43:37.400 align:start position:0%
be used for language modeling now the
 

01:43:37.400 --> 01:43:39.070 align:start position:0%
be used for language modeling now the
reason<01:43:37.679><c> that</c><01:43:37.840><c> the</c><01:43:38.000><c> original</c><01:43:38.400><c> paper</c><01:43:38.760><c> had</c><01:43:38.880><c> an</c>

01:43:39.070 --> 01:43:39.080 align:start position:0%
reason that the original paper had an
 

01:43:39.080 --> 01:43:41.310 align:start position:0%
reason that the original paper had an
incoder<01:43:39.520><c> decoder</c><01:43:39.960><c> architecture</c><01:43:40.920><c> is</c><01:43:41.119><c> because</c>

01:43:41.310 --> 01:43:41.320 align:start position:0%
incoder decoder architecture is because
 

01:43:41.320 --> 01:43:43.430 align:start position:0%
incoder decoder architecture is because
it<01:43:41.400><c> is</c><01:43:41.480><c> a</c><01:43:41.599><c> machine</c><01:43:41.880><c> translation</c><01:43:42.360><c> paper</c><01:43:43.159><c> so</c><01:43:43.360><c> it</c>

01:43:43.430 --> 01:43:43.440 align:start position:0%
it is a machine translation paper so it
 

01:43:43.440 --> 01:43:45.870 align:start position:0%
it is a machine translation paper so it
is<01:43:43.599><c> concerned</c><01:43:44.080><c> with</c><01:43:44.199><c> a</c><01:43:44.400><c> different</c><01:43:44.920><c> setting</c><01:43:45.560><c> in</c>

01:43:45.870 --> 01:43:45.880 align:start position:0%
is concerned with a different setting in
 

01:43:45.880 --> 01:43:49.669 align:start position:0%
is concerned with a different setting in
particular<01:43:46.880><c> it</c><01:43:47.360><c> expects</c><01:43:48.119><c> some</c><01:43:48.800><c> uh</c><01:43:49.080><c> tokens</c>

01:43:49.669 --> 01:43:49.679 align:start position:0%
particular it expects some uh tokens
 

01:43:49.679 --> 01:43:52.229 align:start position:0%
particular it expects some uh tokens
that<01:43:49.840><c> encode</c><01:43:50.239><c> say</c><01:43:50.400><c> for</c><01:43:50.560><c> example</c><01:43:51.119><c> French</c><01:43:52.119><c> and</c>

01:43:52.229 --> 01:43:52.239 align:start position:0%
that encode say for example French and
 

01:43:52.239 --> 01:43:54.030 align:start position:0%
that encode say for example French and
then<01:43:52.400><c> it</c><01:43:52.520><c> is</c><01:43:52.679><c> expecting</c><01:43:53.199><c> to</c><01:43:53.360><c> decode</c><01:43:53.920><c> the</c>

01:43:54.030 --> 01:43:54.040 align:start position:0%
then it is expecting to decode the
 

01:43:54.040 --> 01:43:56.790 align:start position:0%
then it is expecting to decode the
translation<01:43:54.639><c> in</c><01:43:54.920><c> English</c><01:43:55.920><c> so</c><01:43:56.480><c> so</c><01:43:56.639><c> you</c>

01:43:56.790 --> 01:43:56.800 align:start position:0%
translation in English so so you
 

01:43:56.800 --> 01:43:59.470 align:start position:0%
translation in English so so you
typically<01:43:57.400><c> these</c><01:43:57.599><c> here</c><01:43:57.760><c> are</c><01:43:58.000><c> special</c><01:43:58.480><c> tokens</c>

01:43:59.470 --> 01:43:59.480 align:start position:0%
typically these here are special tokens
 

01:43:59.480 --> 01:44:02.070 align:start position:0%
typically these here are special tokens
so<01:43:59.719><c> you</c><01:43:59.840><c> are</c><01:44:00.080><c> expected</c><01:44:00.480><c> to</c><01:44:00.719><c> read</c><01:44:00.920><c> in</c><01:44:01.480><c> this</c><01:44:01.760><c> and</c>

01:44:02.070 --> 01:44:02.080 align:start position:0%
so you are expected to read in this and
 

01:44:02.080 --> 01:44:04.189 align:start position:0%
so you are expected to read in this and
condition<01:44:02.280><c> on</c><01:44:02.440><c> it</c><01:44:03.320><c> and</c><01:44:03.480><c> then</c><01:44:03.679><c> you</c><01:44:03.840><c> start</c><01:44:04.040><c> off</c>

01:44:04.189 --> 01:44:04.199 align:start position:0%
condition on it and then you start off
 

01:44:04.199 --> 01:44:05.709 align:start position:0%
condition on it and then you start off
the<01:44:04.320><c> generation</c><01:44:04.760><c> with</c><01:44:04.880><c> a</c><01:44:05.040><c> special</c><01:44:05.360><c> token</c>

01:44:05.709 --> 01:44:05.719 align:start position:0%
the generation with a special token
 

01:44:05.719 --> 01:44:07.990 align:start position:0%
the generation with a special token
called<01:44:05.960><c> start</c><01:44:06.719><c> so</c><01:44:06.920><c> this</c><01:44:07.000><c> is</c><01:44:07.119><c> a</c><01:44:07.280><c> special</c><01:44:07.679><c> new</c>

01:44:07.990 --> 01:44:08.000 align:start position:0%
called start so this is a special new
 

01:44:08.000 --> 01:44:10.830 align:start position:0%
called start so this is a special new
token<01:44:08.760><c> um</c><01:44:09.080><c> that</c><01:44:09.199><c> you</c><01:44:09.400><c> introduce</c><01:44:10.159><c> and</c><01:44:10.440><c> always</c>

01:44:10.830 --> 01:44:10.840 align:start position:0%
token um that you introduce and always
 

01:44:10.840 --> 01:44:12.910 align:start position:0%
token um that you introduce and always
place<01:44:11.119><c> in</c><01:44:11.239><c> the</c><01:44:11.480><c> beginning</c><01:44:12.480><c> and</c><01:44:12.599><c> then</c><01:44:12.800><c> the</c>

01:44:12.910 --> 01:44:12.920 align:start position:0%
place in the beginning and then the
 

01:44:12.920 --> 01:44:15.709 align:start position:0%
place in the beginning and then the
network<01:44:13.239><c> is</c><01:44:13.440><c> expected</c><01:44:13.800><c> to</c><01:44:14.239><c> Output</c><01:44:15.119><c> neural</c>

01:44:15.709 --> 01:44:15.719 align:start position:0%
network is expected to Output neural
 

01:44:15.719 --> 01:44:17.870 align:start position:0%
network is expected to Output neural
networks<01:44:16.199><c> are</c><01:44:16.560><c> awesome</c><01:44:17.239><c> and</c><01:44:17.320><c> then</c><01:44:17.440><c> a</c><01:44:17.599><c> special</c>

01:44:17.870 --> 01:44:17.880 align:start position:0%
networks are awesome and then a special
 

01:44:17.880 --> 01:44:20.109 align:start position:0%
networks are awesome and then a special
end<01:44:18.159><c> token</c><01:44:18.520><c> to</c><01:44:18.679><c> finish</c><01:44:18.920><c> the</c>

01:44:20.109 --> 01:44:20.119 align:start position:0%
end token to finish the
 

01:44:20.119 --> 01:44:23.149 align:start position:0%
end token to finish the
generation<01:44:21.119><c> so</c><01:44:21.560><c> this</c><01:44:21.719><c> part</c><01:44:22.040><c> here</c><01:44:22.599><c> will</c><01:44:22.760><c> be</c>

01:44:23.149 --> 01:44:23.159 align:start position:0%
generation so this part here will be
 

01:44:23.159 --> 01:44:25.510 align:start position:0%
generation so this part here will be
decoded<01:44:23.760><c> exactly</c><01:44:24.199><c> as</c><01:44:24.440><c> we</c><01:44:24.920><c> we've</c><01:44:25.119><c> done</c><01:44:25.280><c> it</c>

01:44:25.510 --> 01:44:25.520 align:start position:0%
decoded exactly as we we've done it
 

01:44:25.520 --> 01:44:27.189 align:start position:0%
decoded exactly as we we've done it
neural<01:44:25.840><c> networks</c><01:44:26.159><c> are</c><01:44:26.280><c> awesome</c><01:44:26.719><c> will</c><01:44:26.920><c> be</c>

01:44:27.189 --> 01:44:27.199 align:start position:0%
neural networks are awesome will be
 

01:44:27.199 --> 01:44:29.910 align:start position:0%
neural networks are awesome will be
identical<01:44:27.599><c> to</c><01:44:27.760><c> what</c><01:44:27.920><c> we</c><01:44:28.080><c> did</c><01:44:29.040><c> but</c><01:44:29.320><c> unlike</c><01:44:29.760><c> what</c>

01:44:29.910 --> 01:44:29.920 align:start position:0%
identical to what we did but unlike what
 

01:44:29.920 --> 01:44:32.589 align:start position:0%
identical to what we did but unlike what
we<01:44:30.119><c> did</c><01:44:30.800><c> they</c><01:44:30.920><c> wanton</c><01:44:31.159><c> to</c><01:44:31.560><c> condition</c><01:44:32.199><c> the</c>

01:44:32.589 --> 01:44:32.599 align:start position:0%
we did they wanton to condition the
 

01:44:32.599 --> 01:44:34.910 align:start position:0%
we did they wanton to condition the
generation<01:44:33.599><c> on</c><01:44:33.840><c> some</c><01:44:34.480><c> additional</c>

01:44:34.910 --> 01:44:34.920 align:start position:0%
generation on some additional
 

01:44:34.920 --> 01:44:36.669 align:start position:0%
generation on some additional
information<01:44:35.599><c> and</c><01:44:35.760><c> in</c><01:44:35.920><c> that</c><01:44:36.080><c> case</c><01:44:36.480><c> this</c>

01:44:36.669 --> 01:44:36.679 align:start position:0%
information and in that case this
 

01:44:36.679 --> 01:44:38.229 align:start position:0%
information and in that case this
additional<01:44:37.040><c> information</c><01:44:37.560><c> is</c><01:44:37.679><c> the</c><01:44:37.840><c> French</c>

01:44:38.229 --> 01:44:38.239 align:start position:0%
additional information is the French
 

01:44:38.239 --> 01:44:39.669 align:start position:0%
additional information is the French
sentence<01:44:38.639><c> that</c><01:44:38.800><c> they</c><01:44:38.880><c> should</c><01:44:39.000><c> be</c>

01:44:39.669 --> 01:44:39.679 align:start position:0%
sentence that they should be
 

01:44:39.679 --> 01:44:42.870 align:start position:0%
sentence that they should be
translating<01:44:40.679><c> so</c><01:44:40.880><c> what</c><01:44:41.040><c> they</c><01:44:41.159><c> do</c><01:44:41.560><c> now</c><01:44:42.560><c> is</c><01:44:42.719><c> they</c>

01:44:42.870 --> 01:44:42.880 align:start position:0%
translating so what they do now is they
 

01:44:42.880 --> 01:44:45.589 align:start position:0%
translating so what they do now is they
bring<01:44:43.080><c> in</c><01:44:43.199><c> the</c><01:44:43.480><c> encoder</c><01:44:44.480><c> now</c><01:44:44.679><c> the</c><01:44:44.800><c> encoder</c>

01:44:45.589 --> 01:44:45.599 align:start position:0%
bring in the encoder now the encoder
 

01:44:45.599 --> 01:44:48.510 align:start position:0%
bring in the encoder now the encoder
reads<01:44:46.320><c> this</c><01:44:46.679><c> part</c><01:44:46.920><c> here</c><01:44:47.760><c> so</c><01:44:47.960><c> we're</c><01:44:48.159><c> only</c><01:44:48.360><c> going</c>

01:44:48.510 --> 01:44:48.520 align:start position:0%
reads this part here so we're only going
 

01:44:48.520 --> 01:44:50.550 align:start position:0%
reads this part here so we're only going
to<01:44:48.679><c> take</c><01:44:49.040><c> the</c><01:44:49.159><c> part</c><01:44:49.320><c> of</c><01:44:49.480><c> French</c><01:44:50.320><c> and</c><01:44:50.400><c> we're</c>

01:44:50.550 --> 01:44:50.560 align:start position:0%
to take the part of French and we're
 

01:44:50.560 --> 01:44:52.750 align:start position:0%
to take the part of French and we're
going<01:44:50.760><c> to</c><01:44:51.760><c> uh</c><01:44:51.880><c> create</c><01:44:52.159><c> tokens</c><01:44:52.480><c> from</c><01:44:52.599><c> it</c>

01:44:52.750 --> 01:44:52.760 align:start position:0%
going to uh create tokens from it
 

01:44:52.760 --> 01:44:54.750 align:start position:0%
going to uh create tokens from it
exactly<01:44:53.199><c> as</c><01:44:53.280><c> we've</c><01:44:53.400><c> seen</c><01:44:53.560><c> in</c><01:44:53.639><c> our</c><01:44:53.840><c> video</c><01:44:54.679><c> and</c>

01:44:54.750 --> 01:44:54.760 align:start position:0%
exactly as we've seen in our video and
 

01:44:54.760 --> 01:44:57.270 align:start position:0%
exactly as we've seen in our video and
we're<01:44:54.960><c> going</c><01:44:55.119><c> to</c><01:44:55.760><c> put</c><01:44:55.880><c> a</c><01:44:56.040><c> Transformer</c><01:44:56.520><c> on</c><01:44:56.679><c> it</c>

01:44:57.270 --> 01:44:57.280 align:start position:0%
we're going to put a Transformer on it
 

01:44:57.280 --> 01:44:58.910 align:start position:0%
we're going to put a Transformer on it
but<01:44:57.400><c> there's</c><01:44:57.560><c> going</c><01:44:57.639><c> to</c><01:44:57.760><c> be</c><01:44:57.880><c> no</c><01:44:58.080><c> triangular</c>

01:44:58.910 --> 01:44:58.920 align:start position:0%
but there's going to be no triangular
 

01:44:58.920 --> 01:45:00.709 align:start position:0%
but there's going to be no triangular
mask<01:44:59.480><c> and</c><01:44:59.599><c> so</c><01:44:59.800><c> all</c><01:44:59.920><c> the</c><01:45:00.040><c> tokens</c><01:45:00.320><c> are</c><01:45:00.480><c> allowed</c>

01:45:00.709 --> 01:45:00.719 align:start position:0%
mask and so all the tokens are allowed
 

01:45:00.719 --> 01:45:02.109 align:start position:0%
mask and so all the tokens are allowed
to<01:45:00.840><c> talk</c><01:45:01.040><c> to</c><01:45:01.159><c> each</c><01:45:01.280><c> other</c><01:45:01.520><c> as</c><01:45:01.679><c> much</c><01:45:01.840><c> as</c><01:45:01.960><c> they</c>

01:45:02.109 --> 01:45:02.119 align:start position:0%
to talk to each other as much as they
 

01:45:02.119 --> 01:45:04.350 align:start position:0%
to talk to each other as much as they
want<01:45:02.800><c> and</c><01:45:02.920><c> they're</c><01:45:03.159><c> just</c><01:45:03.360><c> encoding</c>

01:45:04.350 --> 01:45:04.360 align:start position:0%
want and they're just encoding
 

01:45:04.360 --> 01:45:07.270 align:start position:0%
want and they're just encoding
whatever's<01:45:04.960><c> the</c><01:45:05.119><c> content</c><01:45:05.440><c> of</c><01:45:05.639><c> this</c><01:45:05.760><c> French</c><01:45:06.760><c> uh</c>

01:45:07.270 --> 01:45:07.280 align:start position:0%
whatever's the content of this French uh
 

01:45:07.280 --> 01:45:10.950 align:start position:0%
whatever's the content of this French uh
sentence<01:45:08.280><c> once</c><01:45:08.520><c> they've</c><01:45:08.719><c> encoded</c><01:45:09.520><c> it</c><01:45:10.520><c> they</c>

01:45:10.950 --> 01:45:10.960 align:start position:0%
sentence once they've encoded it they
 

01:45:10.960 --> 01:45:13.430 align:start position:0%
sentence once they've encoded it they
they<01:45:11.199><c> basically</c><01:45:11.599><c> come</c><01:45:11.719><c> out</c><01:45:11.880><c> in</c><01:45:12.000><c> the</c><01:45:12.159><c> top</c><01:45:12.440><c> here</c>

01:45:13.430 --> 01:45:13.440 align:start position:0%
they basically come out in the top here
 

01:45:13.440 --> 01:45:14.950 align:start position:0%
they basically come out in the top here
and<01:45:13.560><c> then</c><01:45:13.719><c> what</c><01:45:13.840><c> happens</c><01:45:14.199><c> here</c><01:45:14.320><c> is</c><01:45:14.560><c> in</c><01:45:14.679><c> our</c>

01:45:14.950 --> 01:45:14.960 align:start position:0%
and then what happens here is in our
 

01:45:14.960 --> 01:45:17.750 align:start position:0%
and then what happens here is in our
decoder<01:45:15.960><c> which</c><01:45:16.159><c> does</c><01:45:16.440><c> the</c><01:45:17.000><c> uh</c><01:45:17.400><c> language</c>

01:45:17.750 --> 01:45:17.760 align:start position:0%
decoder which does the uh language
 

01:45:17.760 --> 01:45:20.030 align:start position:0%
decoder which does the uh language
modeling<01:45:18.679><c> there's</c><01:45:18.960><c> an</c><01:45:19.119><c> additional</c>

01:45:20.030 --> 01:45:20.040 align:start position:0%
modeling there's an additional
 

01:45:20.040 --> 01:45:21.990 align:start position:0%
modeling there's an additional
connection<01:45:20.599><c> here</c><01:45:21.000><c> to</c><01:45:21.199><c> the</c><01:45:21.360><c> outputs</c><01:45:21.760><c> of</c><01:45:21.880><c> the</c>

01:45:21.990 --> 01:45:22.000 align:start position:0%
connection here to the outputs of the
 

01:45:22.000 --> 01:45:23.510 align:start position:0%
connection here to the outputs of the
encoder

01:45:23.510 --> 01:45:23.520 align:start position:0%
encoder
 

01:45:23.520 --> 01:45:25.990 align:start position:0%
encoder
and<01:45:23.840><c> that</c><01:45:23.960><c> is</c><01:45:24.119><c> brought</c><01:45:24.360><c> in</c><01:45:24.520><c> through</c><01:45:24.920><c> a</c><01:45:25.599><c> cross</c>

01:45:25.990 --> 01:45:26.000 align:start position:0%
and that is brought in through a cross
 

01:45:26.000 --> 01:45:28.030 align:start position:0%
and that is brought in through a cross
attention<01:45:27.000><c> so</c><01:45:27.199><c> the</c><01:45:27.320><c> queries</c><01:45:27.679><c> are</c><01:45:27.840><c> still</c>

01:45:28.030 --> 01:45:28.040 align:start position:0%
attention so the queries are still
 

01:45:28.040 --> 01:45:30.229 align:start position:0%
attention so the queries are still
generated<01:45:28.480><c> from</c><01:45:28.679><c> X</c><01:45:29.400><c> but</c><01:45:29.520><c> now</c><01:45:29.679><c> the</c><01:45:29.840><c> keys</c><01:45:30.119><c> and</c>

01:45:30.229 --> 01:45:30.239 align:start position:0%
generated from X but now the keys and
 

01:45:30.239 --> 01:45:32.510 align:start position:0%
generated from X but now the keys and
the<01:45:30.440><c> values</c><01:45:30.800><c> are</c><01:45:31.040><c> coming</c><01:45:31.320><c> from</c><01:45:31.560><c> the</c><01:45:31.760><c> side</c><01:45:32.360><c> the</c>

01:45:32.510 --> 01:45:32.520 align:start position:0%
the values are coming from the side the
 

01:45:32.520 --> 01:45:34.270 align:start position:0%
the values are coming from the side the
keys<01:45:32.719><c> and</c><01:45:32.880><c> the</c><01:45:33.000><c> values</c><01:45:33.400><c> are</c><01:45:33.560><c> coming</c><01:45:33.840><c> from</c><01:45:34.040><c> the</c>

01:45:34.270 --> 01:45:34.280 align:start position:0%
keys and the values are coming from the
 

01:45:34.280 --> 01:45:36.870 align:start position:0%
keys and the values are coming from the
top<01:45:35.280><c> generated</c><01:45:35.760><c> by</c><01:45:35.880><c> the</c><01:45:36.000><c> nodes</c><01:45:36.520><c> that</c><01:45:36.639><c> came</c>

01:45:36.870 --> 01:45:36.880 align:start position:0%
top generated by the nodes that came
 

01:45:36.880 --> 01:45:39.990 align:start position:0%
top generated by the nodes that came
outside<01:45:37.159><c> of</c><01:45:37.280><c> the</c><01:45:37.400><c> de</c><01:45:37.719><c> the</c><01:45:38.159><c> encoder</c><01:45:39.159><c> and</c><01:45:39.719><c> those</c>

01:45:39.990 --> 01:45:40.000 align:start position:0%
outside of the de the encoder and those
 

01:45:40.000 --> 01:45:42.189 align:start position:0%
outside of the de the encoder and those
tops<01:45:40.560><c> the</c><01:45:40.719><c> keys</c><01:45:40.920><c> and</c><01:45:41.040><c> the</c><01:45:41.159><c> values</c><01:45:41.560><c> there</c><01:45:42.000><c> the</c>

01:45:42.189 --> 01:45:42.199 align:start position:0%
tops the keys and the values there the
 

01:45:42.199 --> 01:45:45.350 align:start position:0%
tops the keys and the values there the
top<01:45:42.360><c> of</c><01:45:42.679><c> it</c><01:45:43.679><c> feed</c><01:45:44.000><c> in</c><01:45:44.159><c> on</c><01:45:44.239><c> a</c><01:45:44.480><c> side</c><01:45:44.840><c> into</c><01:45:45.159><c> every</c>

01:45:45.350 --> 01:45:45.360 align:start position:0%
top of it feed in on a side into every
 

01:45:45.360 --> 01:45:47.750 align:start position:0%
top of it feed in on a side into every
single<01:45:45.679><c> block</c><01:45:46.119><c> of</c><01:45:46.239><c> the</c><01:45:46.480><c> decoder</c><01:45:47.480><c> and</c><01:45:47.599><c> so</c>

01:45:47.750 --> 01:45:47.760 align:start position:0%
single block of the decoder and so
 

01:45:47.760 --> 01:45:49.229 align:start position:0%
single block of the decoder and so
that's<01:45:47.920><c> why</c><01:45:48.119><c> there's</c><01:45:48.320><c> an</c><01:45:48.480><c> additional</c><01:45:48.920><c> cross</c>

01:45:49.229 --> 01:45:49.239 align:start position:0%
that's why there's an additional cross
 

01:45:49.239 --> 01:45:51.350 align:start position:0%
that's why there's an additional cross
attention<01:45:50.239><c> and</c><01:45:50.400><c> really</c><01:45:50.599><c> what</c><01:45:50.679><c> it's</c><01:45:50.840><c> doing</c><01:45:51.199><c> is</c>

01:45:51.350 --> 01:45:51.360 align:start position:0%
attention and really what it's doing is
 

01:45:51.360 --> 01:45:53.629 align:start position:0%
attention and really what it's doing is
it's<01:45:52.000><c> conditioning</c><01:45:52.360><c> the</c><01:45:52.480><c> decoding</c>

01:45:53.629 --> 01:45:53.639 align:start position:0%
it's conditioning the decoding
 

01:45:53.639 --> 01:45:55.910 align:start position:0%
it's conditioning the decoding
not<01:45:53.840><c> just</c><01:45:53.960><c> on</c><01:45:54.159><c> the</c><01:45:54.520><c> past</c><01:45:54.960><c> of</c><01:45:55.199><c> this</c><01:45:55.560><c> current</c>

01:45:55.910 --> 01:45:55.920 align:start position:0%
not just on the past of this current
 

01:45:55.920 --> 01:45:59.629 align:start position:0%
not just on the past of this current
decoding<01:45:56.880><c> but</c><01:45:57.159><c> also</c><01:45:58.119><c> on</c><01:45:58.440><c> having</c><01:45:58.679><c> seen</c><01:45:59.400><c> the</c>

01:45:59.629 --> 01:45:59.639 align:start position:0%
decoding but also on having seen the
 

01:45:59.639 --> 01:46:04.030 align:start position:0%
decoding but also on having seen the
full<01:46:00.520><c> fully</c><01:46:00.960><c> encoded</c><01:46:01.480><c> French</c><01:46:02.480><c> um</c><01:46:03.239><c> prompt</c><01:46:03.760><c> sort</c>

01:46:04.030 --> 01:46:04.040 align:start position:0%
full fully encoded French um prompt sort
 

01:46:04.040 --> 01:46:06.589 align:start position:0%
full fully encoded French um prompt sort
of<01:46:05.040><c> and</c><01:46:05.119><c> so</c><01:46:05.280><c> it's</c><01:46:05.400><c> an</c><01:46:05.520><c> encoder</c><01:46:05.920><c> decoder</c><01:46:06.280><c> model</c>

01:46:06.589 --> 01:46:06.599 align:start position:0%
of and so it's an encoder decoder model
 

01:46:06.599 --> 01:46:07.430 align:start position:0%
of and so it's an encoder decoder model
which<01:46:06.719><c> is</c><01:46:06.800><c> why</c><01:46:06.920><c> we</c><01:46:07.040><c> have</c><01:46:07.159><c> those</c><01:46:07.280><c> two</c>

01:46:07.430 --> 01:46:07.440 align:start position:0%
which is why we have those two
 

01:46:07.440 --> 01:46:09.830 align:start position:0%
which is why we have those two
Transformers<01:46:08.239><c> an</c><01:46:08.440><c> additional</c><01:46:08.960><c> block</c><01:46:09.520><c> and</c><01:46:09.679><c> so</c>

01:46:09.830 --> 01:46:09.840 align:start position:0%
Transformers an additional block and so
 

01:46:09.840 --> 01:46:11.990 align:start position:0%
Transformers an additional block and so
on<01:46:10.440><c> so</c><01:46:10.639><c> we</c><01:46:10.800><c> did</c><01:46:10.960><c> not</c><01:46:11.119><c> do</c><01:46:11.280><c> this</c><01:46:11.480><c> because</c><01:46:11.679><c> we</c><01:46:11.800><c> have</c>

01:46:11.990 --> 01:46:12.000 align:start position:0%
on so we did not do this because we have
 

01:46:12.000 --> 01:46:13.870 align:start position:0%
on so we did not do this because we have
no<01:46:12.320><c> we</c><01:46:12.440><c> have</c><01:46:12.560><c> nothing</c><01:46:12.760><c> to</c><01:46:12.960><c> encode</c><01:46:13.400><c> there's</c><01:46:13.599><c> no</c>

01:46:13.870 --> 01:46:13.880 align:start position:0%
no we have nothing to encode there's no
 

01:46:13.880 --> 01:46:15.470 align:start position:0%
no we have nothing to encode there's no
conditioning<01:46:14.400><c> we</c><01:46:14.520><c> just</c><01:46:14.679><c> have</c><01:46:14.760><c> a</c><01:46:14.880><c> text</c><01:46:15.159><c> file</c>

01:46:15.470 --> 01:46:15.480 align:start position:0%
conditioning we just have a text file
 

01:46:15.480 --> 01:46:16.950 align:start position:0%
conditioning we just have a text file
and<01:46:15.560><c> we</c><01:46:15.679><c> just</c><01:46:15.760><c> want</c><01:46:15.880><c> to</c><01:46:16.040><c> imitate</c><01:46:16.400><c> it</c><01:46:16.800><c> and</c>

01:46:16.950 --> 01:46:16.960 align:start position:0%
and we just want to imitate it and
 

01:46:16.960 --> 01:46:18.990 align:start position:0%
and we just want to imitate it and
that's<01:46:17.159><c> why</c><01:46:17.320><c> we</c><01:46:17.440><c> are</c><01:46:17.560><c> using</c><01:46:17.840><c> a</c><01:46:18.239><c> decoder</c><01:46:18.679><c> only</c>

01:46:18.990 --> 01:46:19.000 align:start position:0%
that's why we are using a decoder only
 

01:46:19.000 --> 01:46:21.750 align:start position:0%
that's why we are using a decoder only
Transformer<01:46:20.000><c> exactly</c><01:46:20.440><c> as</c><01:46:20.599><c> done</c><01:46:20.880><c> in</c>

01:46:21.750 --> 01:46:21.760 align:start position:0%
Transformer exactly as done in
 

01:46:21.760 --> 01:46:24.030 align:start position:0%
Transformer exactly as done in
GPT<01:46:22.760><c> okay</c><01:46:22.920><c> okay</c><01:46:23.040><c> so</c><01:46:23.199><c> now</c><01:46:23.360><c> I</c><01:46:23.440><c> wanted</c><01:46:23.679><c> to</c><01:46:23.760><c> do</c><01:46:23.920><c> a</c>

01:46:24.030 --> 01:46:24.040 align:start position:0%
GPT okay okay so now I wanted to do a
 

01:46:24.040 --> 01:46:26.109 align:start position:0%
GPT okay okay so now I wanted to do a
very<01:46:24.280><c> brief</c><01:46:24.560><c> walkthrough</c><01:46:24.960><c> of</c><01:46:25.119><c> nanog</c><01:46:25.400><c> GPT</c>

01:46:26.109 --> 01:46:26.119 align:start position:0%
very brief walkthrough of nanog GPT
 

01:46:26.119 --> 01:46:28.589 align:start position:0%
very brief walkthrough of nanog GPT
which<01:46:26.239><c> you</c><01:46:26.320><c> can</c><01:46:26.440><c> find</c><01:46:26.599><c> in</c><01:46:26.760><c> my</c><01:46:27.040><c> GitHub</c><01:46:28.040><c> and</c><01:46:28.400><c> uh</c>

01:46:28.589 --> 01:46:28.599 align:start position:0%
which you can find in my GitHub and uh
 

01:46:28.599 --> 01:46:30.430 align:start position:0%
which you can find in my GitHub and uh
nanog<01:46:28.880><c> GPT</c><01:46:29.239><c> is</c><01:46:29.360><c> basically</c><01:46:29.679><c> two</c><01:46:29.920><c> files</c><01:46:30.280><c> of</c>

01:46:30.430 --> 01:46:30.440 align:start position:0%
nanog GPT is basically two files of
 

01:46:30.440 --> 01:46:33.709 align:start position:0%
nanog GPT is basically two files of
Interest<01:46:31.199><c> there's</c><01:46:31.400><c> train.py</c><01:46:31.960><c> and</c><01:46:32.719><c> model.py</c>

01:46:33.709 --> 01:46:33.719 align:start position:0%
Interest there's train.py and model.py
 

01:46:33.719 --> 01:46:35.870 align:start position:0%
Interest there's train.py and model.py
train.py<01:46:34.280><c> is</c><01:46:34.520><c> all</c><01:46:34.679><c> the</c><01:46:34.840><c> boilerplate</c><01:46:35.480><c> code</c><01:46:35.719><c> for</c>

01:46:35.870 --> 01:46:35.880 align:start position:0%
train.py is all the boilerplate code for
 

01:46:35.880 --> 01:46:38.229 align:start position:0%
train.py is all the boilerplate code for
training<01:46:36.199><c> the</c><01:46:36.360><c> network</c><01:46:37.040><c> it</c><01:46:37.119><c> is</c><01:46:37.360><c> basically</c><01:46:38.080><c> all</c>

01:46:38.229 --> 01:46:38.239 align:start position:0%
training the network it is basically all
 

01:46:38.239 --> 01:46:40.310 align:start position:0%
training the network it is basically all
the<01:46:38.440><c> stuff</c><01:46:38.760><c> that</c><01:46:39.000><c> we</c><01:46:39.199><c> had</c><01:46:39.719><c> here</c><01:46:40.080><c> it's</c><01:46:40.239><c> the</c>

01:46:40.310 --> 01:46:40.320 align:start position:0%
the stuff that we had here it's the
 

01:46:40.320 --> 01:46:42.750 align:start position:0%
the stuff that we had here it's the
training<01:46:40.920><c> loop</c><01:46:41.920><c> it's</c><01:46:42.080><c> just</c><01:46:42.239><c> that</c><01:46:42.400><c> it's</c><01:46:42.520><c> a</c><01:46:42.599><c> lot</c>

01:46:42.750 --> 01:46:42.760 align:start position:0%
training loop it's just that it's a lot
 

01:46:42.760 --> 01:46:44.470 align:start position:0%
training loop it's just that it's a lot
more<01:46:42.920><c> complicated</c><01:46:43.440><c> because</c><01:46:43.679><c> we're</c><01:46:44.080><c> saving</c>

01:46:44.470 --> 01:46:44.480 align:start position:0%
more complicated because we're saving
 

01:46:44.480 --> 01:46:46.109 align:start position:0%
more complicated because we're saving
and<01:46:44.599><c> loading</c><01:46:44.960><c> checkpoints</c><01:46:45.480><c> and</c><01:46:45.639><c> pre-trained</c>

01:46:46.109 --> 01:46:46.119 align:start position:0%
and loading checkpoints and pre-trained
 

01:46:46.119 --> 01:46:48.270 align:start position:0%
and loading checkpoints and pre-trained
weights<01:46:46.679><c> and</c><01:46:46.880><c> we</c><01:46:47.040><c> are</c><01:46:47.679><c> uh</c><01:46:47.800><c> decaying</c><01:46:48.199><c> the</c>

01:46:48.270 --> 01:46:48.280 align:start position:0%
weights and we are uh decaying the
 

01:46:48.280 --> 01:46:50.109 align:start position:0%
weights and we are uh decaying the
learning<01:46:48.639><c> rate</c><01:46:49.000><c> and</c><01:46:49.159><c> compiling</c><01:46:49.599><c> the</c><01:46:49.719><c> model</c>

01:46:50.109 --> 01:46:50.119 align:start position:0%
learning rate and compiling the model
 

01:46:50.119 --> 01:46:51.629 align:start position:0%
learning rate and compiling the model
and<01:46:50.199><c> using</c><01:46:50.560><c> distributed</c><01:46:51.000><c> training</c><01:46:51.320><c> across</c>

01:46:51.629 --> 01:46:51.639 align:start position:0%
and using distributed training across
 

01:46:51.639 --> 01:46:54.510 align:start position:0%
and using distributed training across
multiple<01:46:52.000><c> nodes</c><01:46:52.320><c> or</c><01:46:52.480><c> GP</c><01:46:52.960><c> use</c><01:46:53.679><c> so</c><01:46:53.880><c> the</c><01:46:54.000><c> training</c>

01:46:54.510 --> 01:46:54.520 align:start position:0%
multiple nodes or GP use so the training
 

01:46:54.520 --> 01:46:56.310 align:start position:0%
multiple nodes or GP use so the training
Pi<01:46:54.719><c> gets</c><01:46:54.880><c> a</c><01:46:55.000><c> little</c><01:46:55.199><c> bit</c><01:46:55.320><c> more</c><01:46:55.560><c> hairy</c>

01:46:56.310 --> 01:46:56.320 align:start position:0%
Pi gets a little bit more hairy
 

01:46:56.320 --> 01:46:59.669 align:start position:0%
Pi gets a little bit more hairy
complicated<01:46:57.320><c> uh</c><01:46:57.400><c> there's</c><01:46:57.599><c> more</c><01:46:57.840><c> options</c><01:46:58.679><c> Etc</c>

01:46:59.669 --> 01:46:59.679 align:start position:0%
complicated uh there's more options Etc
 

01:46:59.679 --> 01:47:01.950 align:start position:0%
complicated uh there's more options Etc
but<01:46:59.920><c> the</c><01:47:00.040><c> model.py</c><01:47:00.679><c> should</c><01:47:00.880><c> look</c><01:47:01.080><c> very</c><01:47:01.320><c> very</c>

01:47:01.950 --> 01:47:01.960 align:start position:0%
but the model.py should look very very
 

01:47:01.960 --> 01:47:04.350 align:start position:0%
but the model.py should look very very
um<01:47:02.280><c> similar</c><01:47:02.679><c> to</c><01:47:02.880><c> what</c><01:47:03.000><c> we've</c><01:47:03.239><c> done</c><01:47:03.679><c> here</c><01:47:04.239><c> in</c>

01:47:04.350 --> 01:47:04.360 align:start position:0%
um similar to what we've done here in
 

01:47:04.360 --> 01:47:08.070 align:start position:0%
um similar to what we've done here in
fact<01:47:04.560><c> the</c><01:47:04.639><c> model</c><01:47:05.040><c> is</c><01:47:05.360><c> is</c><01:47:05.560><c> almost</c><01:47:06.320><c> identical</c><01:47:07.320><c> so</c>

01:47:08.070 --> 01:47:08.080 align:start position:0%
fact the model is is almost identical so
 

01:47:08.080 --> 01:47:09.790 align:start position:0%
fact the model is is almost identical so
first<01:47:08.719><c> here</c><01:47:08.880><c> we</c><01:47:09.000><c> have</c><01:47:09.119><c> the</c><01:47:09.239><c> causal</c><01:47:09.560><c> self</c>

01:47:09.790 --> 01:47:09.800 align:start position:0%
first here we have the causal self
 

01:47:09.800 --> 01:47:11.910 align:start position:0%
first here we have the causal self
attention<01:47:10.239><c> block</c><01:47:11.119><c> and</c><01:47:11.360><c> all</c><01:47:11.480><c> of</c><01:47:11.599><c> this</c><01:47:11.719><c> should</c>

01:47:11.910 --> 01:47:11.920 align:start position:0%
attention block and all of this should
 

01:47:11.920 --> 01:47:13.709 align:start position:0%
attention block and all of this should
look<01:47:12.080><c> very</c><01:47:12.280><c> very</c><01:47:12.480><c> recognizable</c><01:47:13.040><c> to</c><01:47:13.159><c> you</c><01:47:13.520><c> we're</c>

01:47:13.709 --> 01:47:13.719 align:start position:0%
look very very recognizable to you we're
 

01:47:13.719 --> 01:47:16.149 align:start position:0%
look very very recognizable to you we're
producing<01:47:14.360><c> queries</c><01:47:14.800><c> Keys</c><01:47:15.159><c> values</c><01:47:16.000><c> we're</c>

01:47:16.149 --> 01:47:16.159 align:start position:0%
producing queries Keys values we're
 

01:47:16.159 --> 01:47:18.390 align:start position:0%
producing queries Keys values we're
doing<01:47:16.440><c> Dot</c><01:47:16.719><c> products</c><01:47:17.360><c> we're</c><01:47:17.599><c> masking</c>

01:47:18.390 --> 01:47:18.400 align:start position:0%
doing Dot products we're masking
 

01:47:18.400 --> 01:47:20.589 align:start position:0%
doing Dot products we're masking
applying<01:47:18.719><c> soft</c><01:47:19.000><c> Maxs</c><01:47:19.800><c> optionally</c><01:47:20.280><c> dropping</c>

01:47:20.589 --> 01:47:20.599 align:start position:0%
applying soft Maxs optionally dropping
 

01:47:20.599 --> 01:47:23.350 align:start position:0%
applying soft Maxs optionally dropping
out<01:47:21.480><c> and</c><01:47:21.679><c> here</c><01:47:21.840><c> we</c><01:47:21.960><c> are</c><01:47:22.159><c> pulling</c><01:47:22.520><c> the</c><01:47:22.639><c> wi</c><01:47:23.000><c> the</c>

01:47:23.350 --> 01:47:23.360 align:start position:0%
out and here we are pulling the wi the
 

01:47:23.360 --> 01:47:25.950 align:start position:0%
out and here we are pulling the wi the
values<01:47:24.360><c> what</c><01:47:24.560><c> is</c><01:47:24.719><c> different</c><01:47:25.119><c> here</c><01:47:25.400><c> is</c><01:47:25.599><c> that</c><01:47:25.800><c> in</c>

01:47:25.950 --> 01:47:25.960 align:start position:0%
values what is different here is that in
 

01:47:25.960 --> 01:47:30.030 align:start position:0%
values what is different here is that in
our<01:47:26.719><c> code</c><01:47:27.719><c> I</c><01:47:28.080><c> have</c><01:47:29.080><c> separated</c><01:47:29.599><c> out</c><01:47:29.920><c> the</c>

01:47:30.030 --> 01:47:30.040 align:start position:0%
our code I have separated out the
 

01:47:30.040 --> 01:47:31.830 align:start position:0%
our code I have separated out the
multi-headed<01:47:30.560><c> detention</c><01:47:31.199><c> into</c><01:47:31.480><c> just</c><01:47:31.679><c> a</c>

01:47:31.830 --> 01:47:31.840 align:start position:0%
multi-headed detention into just a
 

01:47:31.840 --> 01:47:34.589 align:start position:0%
multi-headed detention into just a
single<01:47:32.119><c> individual</c><01:47:32.679><c> head</c><01:47:33.679><c> and</c><01:47:33.840><c> then</c><01:47:34.159><c> here</c><01:47:34.480><c> I</c>

01:47:34.589 --> 01:47:34.599 align:start position:0%
single individual head and then here I
 

01:47:34.599 --> 01:47:36.189 align:start position:0%
single individual head and then here I
have<01:47:34.719><c> multiple</c><01:47:35.080><c> heads</c><01:47:35.320><c> and</c><01:47:35.440><c> I</c><01:47:35.639><c> explicitly</c>

01:47:36.189 --> 01:47:36.199 align:start position:0%
have multiple heads and I explicitly
 

01:47:36.199 --> 01:47:39.470 align:start position:0%
have multiple heads and I explicitly
concatenate<01:47:36.880><c> them</c><01:47:37.880><c> whereas</c><01:47:38.320><c> here</c><01:47:39.119><c> uh</c><01:47:39.239><c> all</c><01:47:39.360><c> of</c>

01:47:39.470 --> 01:47:39.480 align:start position:0%
concatenate them whereas here uh all of
 

01:47:39.480 --> 01:47:41.310 align:start position:0%
concatenate them whereas here uh all of
it<01:47:39.560><c> is</c><01:47:39.719><c> implemented</c><01:47:40.199><c> in</c><01:47:40.280><c> a</c><01:47:40.480><c> batched</c><01:47:40.880><c> manner</c>

01:47:41.310 --> 01:47:41.320 align:start position:0%
it is implemented in a batched manner
 

01:47:41.320 --> 01:47:43.870 align:start position:0%
it is implemented in a batched manner
inside<01:47:41.560><c> a</c><01:47:41.719><c> single</c><01:47:42.159><c> causal</c><01:47:42.560><c> self</c><01:47:42.880><c> attention</c>

01:47:43.870 --> 01:47:43.880 align:start position:0%
inside a single causal self attention
 

01:47:43.880 --> 01:47:45.390 align:start position:0%
inside a single causal self attention
and<01:47:43.960><c> so</c><01:47:44.119><c> we</c><01:47:44.239><c> don't</c><01:47:44.400><c> just</c><01:47:44.520><c> have</c><01:47:44.639><c> a</c><01:47:44.800><c> b</c><01:47:45.000><c> and</c><01:47:45.119><c> a</c><01:47:45.239><c> T</c>

01:47:45.390 --> 01:47:45.400 align:start position:0%
and so we don't just have a b and a T
 

01:47:45.400 --> 01:47:47.550 align:start position:0%
and so we don't just have a b and a T
and<01:47:45.520><c> A</c><01:47:45.639><c> C</c><01:47:45.880><c> Dimension</c><01:47:46.639><c> we</c><01:47:46.760><c> also</c><01:47:47.080><c> end</c><01:47:47.199><c> up</c><01:47:47.360><c> with</c><01:47:47.440><c> a</c>

01:47:47.550 --> 01:47:47.560 align:start position:0%
and A C Dimension we also end up with a
 

01:47:47.560 --> 01:47:50.109 align:start position:0%
and A C Dimension we also end up with a
fourth<01:47:47.840><c> dimension</c><01:47:48.280><c> which</c><01:47:48.360><c> is</c><01:47:48.520><c> the</c><01:47:48.960><c> heads</c><01:47:49.960><c> and</c>

01:47:50.109 --> 01:47:50.119 align:start position:0%
fourth dimension which is the heads and
 

01:47:50.119 --> 01:47:52.350 align:start position:0%
fourth dimension which is the heads and
so<01:47:50.360><c> it</c><01:47:50.440><c> just</c><01:47:50.599><c> gets</c><01:47:50.800><c> a</c><01:47:50.920><c> lot</c><01:47:51.119><c> more</c><01:47:51.800><c> sort</c><01:47:51.920><c> of</c><01:47:52.040><c> hairy</c>

01:47:52.350 --> 01:47:52.360 align:start position:0%
so it just gets a lot more sort of hairy
 

01:47:52.360 --> 01:47:54.149 align:start position:0%
so it just gets a lot more sort of hairy
because<01:47:52.520><c> we</c><01:47:52.599><c> have</c><01:47:52.840><c> four</c><01:47:53.000><c> dimensional</c><01:47:53.520><c> array</c>

01:47:54.149 --> 01:47:54.159 align:start position:0%
because we have four dimensional array
 

01:47:54.159 --> 01:47:57.430 align:start position:0%
because we have four dimensional array
um<01:47:54.440><c> tensors</c><01:47:54.960><c> now</c><01:47:55.599><c> but</c><01:47:55.840><c> it</c><01:47:55.960><c> is</c><01:47:56.440><c> um</c><01:47:56.639><c> equivalent</c>

01:47:57.430 --> 01:47:57.440 align:start position:0%
um tensors now but it is um equivalent
 

01:47:57.440 --> 01:47:59.229 align:start position:0%
um tensors now but it is um equivalent
mathematically<01:47:58.440><c> so</c><01:47:58.639><c> the</c><01:47:58.719><c> exact</c><01:47:58.960><c> same</c><01:47:59.119><c> thing</c>

01:47:59.229 --> 01:47:59.239 align:start position:0%
mathematically so the exact same thing
 

01:47:59.239 --> 01:48:01.430 align:start position:0%
mathematically so the exact same thing
is<01:47:59.360><c> happening</c><01:47:59.679><c> as</c><01:47:59.840><c> what</c><01:47:59.960><c> we</c><01:48:00.159><c> have</c><01:48:00.840><c> it's</c><01:48:01.040><c> just</c>

01:48:01.430 --> 01:48:01.440 align:start position:0%
is happening as what we have it's just
 

01:48:01.440 --> 01:48:02.830 align:start position:0%
is happening as what we have it's just
it's<01:48:01.599><c> a</c><01:48:01.760><c> bit</c><01:48:01.920><c> more</c><01:48:02.080><c> efficient</c><01:48:02.480><c> because</c><01:48:02.679><c> all</c>

01:48:02.830 --> 01:48:02.840 align:start position:0%
it's a bit more efficient because all
 

01:48:02.840 --> 01:48:04.510 align:start position:0%
it's a bit more efficient because all
the<01:48:03.000><c> heads</c><01:48:03.400><c> are</c><01:48:03.560><c> now</c><01:48:03.719><c> treated</c><01:48:04.040><c> as</c><01:48:04.119><c> a</c><01:48:04.239><c> batch</c>

01:48:04.510 --> 01:48:04.520 align:start position:0%
the heads are now treated as a batch
 

01:48:04.520 --> 01:48:05.709 align:start position:0%
the heads are now treated as a batch
Dimension<01:48:04.880><c> as</c>

01:48:05.709 --> 01:48:05.719 align:start position:0%
Dimension as
 

01:48:05.719 --> 01:48:08.189 align:start position:0%
Dimension as
well<01:48:06.719><c> then</c><01:48:06.840><c> we</c><01:48:06.920><c> have</c><01:48:07.000><c> the</c><01:48:07.080><c> multier</c><01:48:07.520><c> perceptron</c>

01:48:08.189 --> 01:48:08.199 align:start position:0%
well then we have the multier perceptron
 

01:48:08.199 --> 01:48:10.550 align:start position:0%
well then we have the multier perceptron
it's<01:48:08.360><c> using</c><01:48:08.639><c> the</c><01:48:08.880><c> Galu</c><01:48:09.440><c> nonlinearity</c><01:48:10.440><c> which</c>

01:48:10.550 --> 01:48:10.560 align:start position:0%
it's using the Galu nonlinearity which
 

01:48:10.560 --> 01:48:13.430 align:start position:0%
it's using the Galu nonlinearity which
is<01:48:10.760><c> defined</c><01:48:11.360><c> here</c><01:48:11.719><c> except</c><01:48:12.119><c> instead</c><01:48:12.360><c> of</c><01:48:12.480><c> Ru</c><01:48:13.320><c> and</c>

01:48:13.430 --> 01:48:13.440 align:start position:0%
is defined here except instead of Ru and
 

01:48:13.440 --> 01:48:14.950 align:start position:0%
is defined here except instead of Ru and
this<01:48:13.520><c> is</c><01:48:13.679><c> done</c><01:48:13.880><c> just</c><01:48:14.040><c> because</c><01:48:14.239><c> opening</c><01:48:14.599><c> I</c><01:48:14.719><c> used</c>

01:48:14.950 --> 01:48:14.960 align:start position:0%
this is done just because opening I used
 

01:48:14.960 --> 01:48:17.070 align:start position:0%
this is done just because opening I used
it<01:48:15.119><c> and</c><01:48:15.199><c> I</c><01:48:15.280><c> want</c><01:48:15.400><c> to</c><01:48:15.480><c> be</c><01:48:15.599><c> able</c><01:48:15.719><c> to</c><01:48:15.800><c> load</c><01:48:16.000><c> their</c>

01:48:17.070 --> 01:48:17.080 align:start position:0%
it and I want to be able to load their
 

01:48:17.080 --> 01:48:18.990 align:start position:0%
it and I want to be able to load their
checkpoints<01:48:18.080><c> uh</c><01:48:18.360><c> the</c><01:48:18.480><c> blocks</c><01:48:18.760><c> of</c><01:48:18.880><c> the</c>

01:48:18.990 --> 01:48:19.000 align:start position:0%
checkpoints uh the blocks of the
 

01:48:19.000 --> 01:48:21.070 align:start position:0%
checkpoints uh the blocks of the
Transformer<01:48:19.480><c> are</c><01:48:19.639><c> identical</c><01:48:20.360><c> to</c><01:48:20.560><c> communicate</c>

01:48:21.070 --> 01:48:21.080 align:start position:0%
Transformer are identical to communicate
 

01:48:21.080 --> 01:48:23.470 align:start position:0%
Transformer are identical to communicate
in<01:48:21.199><c> the</c><01:48:21.320><c> compute</c><01:48:21.679><c> phase</c><01:48:22.080><c> as</c><01:48:22.199><c> we</c><01:48:22.320><c> saw</c><01:48:23.239><c> and</c><01:48:23.360><c> then</c>

01:48:23.470 --> 01:48:23.480 align:start position:0%
in the compute phase as we saw and then
 

01:48:23.480 --> 01:48:25.270 align:start position:0%
in the compute phase as we saw and then
the<01:48:23.560><c> GPT</c><01:48:24.000><c> will</c><01:48:24.119><c> be</c><01:48:24.280><c> identical</c><01:48:24.800><c> we</c><01:48:24.920><c> have</c><01:48:25.080><c> the</c>

01:48:25.270 --> 01:48:25.280 align:start position:0%
the GPT will be identical we have the
 

01:48:25.280 --> 01:48:27.709 align:start position:0%
the GPT will be identical we have the
position<01:48:25.639><c> encodings</c><01:48:26.239><c> token</c><01:48:26.560><c> encodings</c><01:48:27.560><c> the</c>

01:48:27.709 --> 01:48:27.719 align:start position:0%
position encodings token encodings the
 

01:48:27.719 --> 01:48:30.310 align:start position:0%
position encodings token encodings the
blocks<01:48:28.239><c> the</c><01:48:28.360><c> layer</c><01:48:28.599><c> Norm</c><01:48:28.880><c> at</c><01:48:29.000><c> the</c><01:48:29.119><c> end</c><01:48:30.040><c> uh</c><01:48:30.199><c> the</c>

01:48:30.310 --> 01:48:30.320 align:start position:0%
blocks the layer Norm at the end uh the
 

01:48:30.320 --> 01:48:33.229 align:start position:0%
blocks the layer Norm at the end uh the
final<01:48:30.760><c> linear</c><01:48:31.400><c> layer</c><01:48:32.400><c> and</c><01:48:32.760><c> this</c><01:48:32.880><c> should</c><01:48:33.040><c> look</c>

01:48:33.229 --> 01:48:33.239 align:start position:0%
final linear layer and this should look
 

01:48:33.239 --> 01:48:35.589 align:start position:0%
final linear layer and this should look
all<01:48:33.400><c> very</c><01:48:34.040><c> recognizable</c><01:48:35.040><c> and</c><01:48:35.159><c> there's</c><01:48:35.320><c> a</c><01:48:35.440><c> bit</c>

01:48:35.589 --> 01:48:35.599 align:start position:0%
all very recognizable and there's a bit
 

01:48:35.599 --> 01:48:36.830 align:start position:0%
all very recognizable and there's a bit
more<01:48:35.880><c> here</c><01:48:36.239><c> because</c><01:48:36.440><c> I'm</c><01:48:36.520><c> loading</c>

01:48:36.830 --> 01:48:36.840 align:start position:0%
more here because I'm loading
 

01:48:36.840 --> 01:48:38.830 align:start position:0%
more here because I'm loading
checkpoints<01:48:37.280><c> and</c><01:48:37.440><c> stuff</c><01:48:37.639><c> like</c><01:48:37.880><c> that</c><01:48:38.639><c> I'm</c>

01:48:38.830 --> 01:48:38.840 align:start position:0%
checkpoints and stuff like that I'm
 

01:48:38.840 --> 01:48:40.589 align:start position:0%
checkpoints and stuff like that I'm
separating<01:48:39.239><c> out</c><01:48:39.400><c> the</c><01:48:39.520><c> parameters</c><01:48:39.960><c> into</c><01:48:40.199><c> those</c>

01:48:40.589 --> 01:48:40.599 align:start position:0%
separating out the parameters into those
 

01:48:40.599 --> 01:48:41.990 align:start position:0%
separating out the parameters into those
that<01:48:40.679><c> should</c><01:48:40.840><c> be</c><01:48:41.000><c> weight</c><01:48:41.239><c> decayed</c><01:48:41.679><c> and</c><01:48:41.840><c> those</c>

01:48:41.990 --> 01:48:42.000 align:start position:0%
that should be weight decayed and those
 

01:48:42.000 --> 01:48:42.750 align:start position:0%
that should be weight decayed and those
that

01:48:42.750 --> 01:48:42.760 align:start position:0%
that
 

01:48:42.760 --> 01:48:44.950 align:start position:0%
that
shouldn't<01:48:43.760><c> um</c><01:48:44.159><c> but</c><01:48:44.280><c> the</c><01:48:44.360><c> generate</c><01:48:44.719><c> function</c>

01:48:44.950 --> 01:48:44.960 align:start position:0%
shouldn't um but the generate function
 

01:48:44.960 --> 01:48:47.149 align:start position:0%
shouldn't um but the generate function
should<01:48:45.199><c> also</c><01:48:45.360><c> be</c><01:48:45.520><c> very</c><01:48:45.719><c> very</c><01:48:45.880><c> similar</c><01:48:46.760><c> so</c><01:48:47.080><c> a</c>

01:48:47.149 --> 01:48:47.159 align:start position:0%
should also be very very similar so a
 

01:48:47.159 --> 01:48:48.790 align:start position:0%
should also be very very similar so a
few<01:48:47.400><c> details</c><01:48:47.800><c> are</c><01:48:48.000><c> different</c><01:48:48.360><c> but</c><01:48:48.480><c> you</c><01:48:48.599><c> should</c>

01:48:48.790 --> 01:48:48.800 align:start position:0%
few details are different but you should
 

01:48:48.800 --> 01:48:51.270 align:start position:0%
few details are different but you should
definitely<01:48:49.159><c> be</c><01:48:49.280><c> able</c><01:48:49.480><c> to</c><01:48:49.719><c> look</c><01:48:50.080><c> at</c><01:48:50.320><c> this</c><01:48:51.000><c> uh</c>

01:48:51.270 --> 01:48:51.280 align:start position:0%
definitely be able to look at this uh
 

01:48:51.280 --> 01:48:52.870 align:start position:0%
definitely be able to look at this uh
file<01:48:51.719><c> and</c><01:48:51.840><c> be</c><01:48:51.920><c> able</c><01:48:52.080><c> to</c><01:48:52.400><c> understand</c><01:48:52.560><c> little</c>

01:48:52.870 --> 01:48:52.880 align:start position:0%
file and be able to understand little
 

01:48:52.880 --> 01:48:55.030 align:start position:0%
file and be able to understand little
the<01:48:52.960><c> pieces</c><01:48:53.320><c> now</c><01:48:54.080><c> so</c><01:48:54.239><c> let's</c><01:48:54.400><c> now</c><01:48:54.560><c> bring</c><01:48:54.800><c> things</c>

01:48:55.030 --> 01:48:55.040 align:start position:0%
the pieces now so let's now bring things
 

01:48:55.040 --> 01:48:57.629 align:start position:0%
the pieces now so let's now bring things
back<01:48:55.159><c> to</c><01:48:55.320><c> chat</c><01:48:55.880><c> GPT</c><01:48:56.880><c> what</c><01:48:57.000><c> would</c><01:48:57.119><c> it</c><01:48:57.280><c> look</c><01:48:57.480><c> like</c>

01:48:57.629 --> 01:48:57.639 align:start position:0%
back to chat GPT what would it look like
 

01:48:57.639 --> 01:48:59.550 align:start position:0%
back to chat GPT what would it look like
if<01:48:57.760><c> we</c><01:48:57.880><c> wanted</c><01:48:58.080><c> to</c><01:48:58.199><c> train</c><01:48:58.400><c> chat</c><01:48:58.639><c> GPT</c><01:48:59.000><c> ourselves</c>

01:48:59.550 --> 01:48:59.560 align:start position:0%
if we wanted to train chat GPT ourselves
 

01:48:59.560 --> 01:49:00.790 align:start position:0%
if we wanted to train chat GPT ourselves
and<01:48:59.719><c> how</c><01:48:59.840><c> does</c><01:48:59.960><c> it</c><01:49:00.119><c> relate</c><01:49:00.400><c> to</c><01:49:00.520><c> what</c><01:49:00.639><c> we</c>

01:49:00.790 --> 01:49:00.800 align:start position:0%
and how does it relate to what we
 

01:49:00.800 --> 01:49:03.550 align:start position:0%
and how does it relate to what we
learned<01:49:01.440><c> today</c><01:49:02.440><c> well</c><01:49:02.599><c> to</c><01:49:02.679><c> train</c><01:49:02.880><c> in</c><01:49:03.040><c> chat</c><01:49:03.239><c> GPT</c>

01:49:03.550 --> 01:49:03.560 align:start position:0%
learned today well to train in chat GPT
 

01:49:03.560 --> 01:49:05.629 align:start position:0%
learned today well to train in chat GPT
there<01:49:03.639><c> are</c><01:49:03.800><c> roughly</c><01:49:04.080><c> two</c><01:49:04.280><c> stages</c><01:49:05.119><c> first</c><01:49:05.480><c> is</c>

01:49:05.629 --> 01:49:05.639 align:start position:0%
there are roughly two stages first is
 

01:49:05.639 --> 01:49:07.470 align:start position:0%
there are roughly two stages first is
the<01:49:05.800><c> pre-training</c><01:49:06.440><c> stage</c><01:49:06.920><c> and</c><01:49:07.080><c> then</c><01:49:07.360><c> the</c>

01:49:07.470 --> 01:49:07.480 align:start position:0%
the pre-training stage and then the
 

01:49:07.480 --> 01:49:09.870 align:start position:0%
the pre-training stage and then the
fine-tuning<01:49:08.119><c> stage</c><01:49:09.040><c> in</c><01:49:09.159><c> the</c><01:49:09.280><c> pre-training</c>

01:49:09.870 --> 01:49:09.880 align:start position:0%
fine-tuning stage in the pre-training
 

01:49:09.880 --> 01:49:12.229 align:start position:0%
fine-tuning stage in the pre-training
stage<01:49:10.800><c> uh</c><01:49:10.960><c> we</c><01:49:11.080><c> are</c><01:49:11.280><c> training</c><01:49:11.679><c> on</c><01:49:11.800><c> a</c><01:49:11.960><c> large</c>

01:49:12.229 --> 01:49:12.239 align:start position:0%
stage uh we are training on a large
 

01:49:12.239 --> 01:49:14.709 align:start position:0%
stage uh we are training on a large
chunk<01:49:12.520><c> of</c><01:49:12.679><c> internet</c><01:49:13.599><c> and</c><01:49:13.800><c> just</c><01:49:13.960><c> trying</c><01:49:14.280><c> to</c><01:49:14.480><c> get</c>

01:49:14.709 --> 01:49:14.719 align:start position:0%
chunk of internet and just trying to get
 

01:49:14.719 --> 01:49:17.270 align:start position:0%
chunk of internet and just trying to get
a<01:49:14.920><c> first</c><01:49:15.320><c> decoder</c><01:49:15.840><c> only</c><01:49:16.119><c> Transformer</c><01:49:17.000><c> to</c>

01:49:17.270 --> 01:49:17.280 align:start position:0%
a first decoder only Transformer to
 

01:49:17.280 --> 01:49:20.310 align:start position:0%
a first decoder only Transformer to
babble<01:49:17.840><c> text</c><01:49:18.719><c> so</c><01:49:18.880><c> it's</c><01:49:19.040><c> very</c><01:49:19.199><c> very</c><01:49:19.360><c> similar</c><01:49:19.880><c> to</c>

01:49:20.310 --> 01:49:20.320 align:start position:0%
babble text so it's very very similar to
 

01:49:20.320 --> 01:49:23.070 align:start position:0%
babble text so it's very very similar to
what<01:49:20.480><c> we've</c><01:49:20.719><c> done</c><01:49:21.360><c> ourselves</c><01:49:22.360><c> except</c><01:49:22.920><c> we've</c>

01:49:23.070 --> 01:49:23.080 align:start position:0%
what we've done ourselves except we've
 

01:49:23.080 --> 01:49:24.669 align:start position:0%
what we've done ourselves except we've
done<01:49:23.320><c> like</c><01:49:23.440><c> a</c><01:49:23.599><c> tiny</c><01:49:23.880><c> little</c><01:49:24.199><c> baby</c>

01:49:24.669 --> 01:49:24.679 align:start position:0%
done like a tiny little baby
 

01:49:24.679 --> 01:49:28.870 align:start position:0%
done like a tiny little baby
pre-training<01:49:25.239><c> step</c><01:49:26.159><c> um</c><01:49:26.920><c> and</c><01:49:27.080><c> so</c><01:49:27.440><c> in</c><01:49:27.560><c> our</c><01:49:27.880><c> case</c>

01:49:28.870 --> 01:49:28.880 align:start position:0%
pre-training step um and so in our case
 

01:49:28.880 --> 01:49:30.669 align:start position:0%
pre-training step um and so in our case
uh<01:49:29.520><c> this</c><01:49:29.599><c> is</c><01:49:29.760><c> how</c><01:49:29.840><c> you</c><01:49:30.040><c> print</c><01:49:30.239><c> a</c><01:49:30.320><c> number</c><01:49:30.480><c> of</c>

01:49:30.669 --> 01:49:30.679 align:start position:0%
uh this is how you print a number of
 

01:49:30.679 --> 01:49:32.709 align:start position:0%
uh this is how you print a number of
parameters<01:49:31.639><c> I</c><01:49:31.800><c> printed</c><01:49:32.119><c> it</c><01:49:32.280><c> and</c><01:49:32.360><c> it's</c><01:49:32.520><c> about</c>

01:49:32.709 --> 01:49:32.719 align:start position:0%
parameters I printed it and it's about
 

01:49:32.719 --> 01:49:35.270 align:start position:0%
parameters I printed it and it's about
10<01:49:32.920><c> million</c><01:49:33.560><c> so</c><01:49:34.119><c> this</c><01:49:34.320><c> Transformer</c><01:49:35.000><c> that</c><01:49:35.119><c> I</c>

01:49:35.270 --> 01:49:35.280 align:start position:0%
10 million so this Transformer that I
 

01:49:35.280 --> 01:49:37.030 align:start position:0%
10 million so this Transformer that I
created<01:49:35.719><c> here</c><01:49:35.880><c> to</c><01:49:36.040><c> create</c><01:49:36.440><c> little</c>

01:49:37.030 --> 01:49:37.040 align:start position:0%
created here to create little
 

01:49:37.040 --> 01:49:40.310 align:start position:0%
created here to create little
Shakespeare<01:49:38.040><c> um</c><01:49:38.840><c> Transformer</c><01:49:39.840><c> was</c><01:49:40.000><c> about</c><01:49:40.159><c> 10</c>

01:49:40.310 --> 01:49:40.320 align:start position:0%
Shakespeare um Transformer was about 10
 

01:49:40.320 --> 01:49:42.950 align:start position:0%
Shakespeare um Transformer was about 10
million<01:49:40.639><c> parameters</c><01:49:41.639><c> our</c><01:49:41.880><c> data</c><01:49:42.159><c> set</c><01:49:42.560><c> is</c>

01:49:42.950 --> 01:49:42.960 align:start position:0%
million parameters our data set is
 

01:49:42.960 --> 01:49:45.189 align:start position:0%
million parameters our data set is
roughly<01:49:43.280><c> 1</c><01:49:43.520><c> million</c><01:49:44.280><c> uh</c><01:49:44.440><c> characters</c><01:49:44.920><c> so</c>

01:49:45.189 --> 01:49:45.199 align:start position:0%
roughly 1 million uh characters so
 

01:49:45.199 --> 01:49:47.390 align:start position:0%
roughly 1 million uh characters so
roughly<01:49:45.480><c> 1</c><01:49:45.639><c> million</c><01:49:46.000><c> tokens</c><01:49:46.960><c> but</c><01:49:47.080><c> you</c><01:49:47.159><c> have</c><01:49:47.280><c> to</c>

01:49:47.390 --> 01:49:47.400 align:start position:0%
roughly 1 million tokens but you have to
 

01:49:47.400 --> 01:49:48.870 align:start position:0%
roughly 1 million tokens but you have to
remember<01:49:47.639><c> that</c><01:49:47.760><c> opening</c><01:49:48.040><c> I</c><01:49:48.360><c> is</c><01:49:48.560><c> different</c>

01:49:48.870 --> 01:49:48.880 align:start position:0%
remember that opening I is different
 

01:49:48.880 --> 01:49:50.430 align:start position:0%
remember that opening I is different
vocabulary<01:49:49.560><c> they're</c><01:49:49.719><c> not</c><01:49:49.840><c> on</c><01:49:49.960><c> the</c><01:49:50.119><c> Character</c>

01:49:50.430 --> 01:49:50.440 align:start position:0%
vocabulary they're not on the Character
 

01:49:50.440 --> 01:49:53.629 align:start position:0%
vocabulary they're not on the Character
level<01:49:50.920><c> they</c><01:49:51.040><c> use</c><01:49:51.360><c> these</c><01:49:51.760><c> um</c><01:49:52.159><c> subword</c><01:49:53.119><c> chunks</c>

01:49:53.629 --> 01:49:53.639 align:start position:0%
level they use these um subword chunks
 

01:49:53.639 --> 01:49:55.589 align:start position:0%
level they use these um subword chunks
of<01:49:53.800><c> words</c><01:49:54.520><c> and</c><01:49:54.599><c> so</c><01:49:54.760><c> they</c><01:49:54.840><c> have</c><01:49:54.960><c> a</c><01:49:55.080><c> vocabulary</c>

01:49:55.589 --> 01:49:55.599 align:start position:0%
of words and so they have a vocabulary
 

01:49:55.599 --> 01:49:58.390 align:start position:0%
of words and so they have a vocabulary
of<01:49:55.760><c> 50,000</c><01:49:56.679><c> roughly</c><01:49:57.119><c> elements</c><01:49:57.960><c> and</c><01:49:58.080><c> so</c><01:49:58.239><c> their</c>

01:49:58.390 --> 01:49:58.400 align:start position:0%
of 50,000 roughly elements and so their
 

01:49:58.400 --> 01:50:01.550 align:start position:0%
of 50,000 roughly elements and so their
sequences<01:49:58.840><c> are</c><01:49:59.280><c> a</c><01:49:59.360><c> bit</c><01:49:59.520><c> more</c><01:50:00.199><c> condensed</c><01:50:01.199><c> so</c>

01:50:01.550 --> 01:50:01.560 align:start position:0%
sequences are a bit more condensed so
 

01:50:01.560 --> 01:50:03.310 align:start position:0%
sequences are a bit more condensed so
our<01:50:01.840><c> data</c><01:50:02.119><c> set</c><01:50:02.440><c> the</c><01:50:02.520><c> Shakespeare</c><01:50:03.000><c> data</c><01:50:03.199><c> set</c>

01:50:03.310 --> 01:50:03.320 align:start position:0%
our data set the Shakespeare data set
 

01:50:03.320 --> 01:50:05.510 align:start position:0%
our data set the Shakespeare data set
would<01:50:03.440><c> be</c><01:50:03.599><c> probably</c><01:50:03.920><c> around</c><01:50:04.400><c> 300,000</c><01:50:05.400><c> uh</c>

01:50:05.510 --> 01:50:05.520 align:start position:0%
would be probably around 300,000 uh
 

01:50:05.520 --> 01:50:09.270 align:start position:0%
would be probably around 300,000 uh
tokens<01:50:06.199><c> in</c><01:50:06.360><c> the</c><01:50:06.520><c> open</c><01:50:06.760><c> AI</c><01:50:07.080><c> vocabulary</c><01:50:08.280><c> roughly</c>

01:50:09.270 --> 01:50:09.280 align:start position:0%
tokens in the open AI vocabulary roughly
 

01:50:09.280 --> 01:50:11.550 align:start position:0%
tokens in the open AI vocabulary roughly
so<01:50:09.920><c> we</c><01:50:10.080><c> trained</c><01:50:10.400><c> about</c><01:50:10.599><c> 10</c><01:50:10.760><c> million</c><01:50:11.199><c> parameter</c>

01:50:11.550 --> 01:50:11.560 align:start position:0%
so we trained about 10 million parameter
 

01:50:11.560 --> 01:50:14.510 align:start position:0%
so we trained about 10 million parameter
model<01:50:11.840><c> on</c><01:50:12.080><c> roughly</c><01:50:12.440><c> 300,000</c><01:50:13.320><c> tokens</c><01:50:14.320><c> now</c><01:50:14.440><c> when</c>

01:50:14.510 --> 01:50:14.520 align:start position:0%
model on roughly 300,000 tokens now when
 

01:50:14.520 --> 01:50:16.750 align:start position:0%
model on roughly 300,000 tokens now when
you<01:50:14.639><c> go</c><01:50:14.760><c> to</c><01:50:14.840><c> the</c><01:50:14.920><c> gpt3</c>

01:50:16.750 --> 01:50:16.760 align:start position:0%
you go to the gpt3
 

01:50:16.760 --> 01:50:20.030 align:start position:0%
you go to the gpt3
paper<01:50:17.760><c> and</c><01:50:18.199><c> you</c><01:50:18.360><c> look</c><01:50:18.480><c> at</c><01:50:18.679><c> the</c><01:50:19.480><c> Transformers</c>

01:50:20.030 --> 01:50:20.040 align:start position:0%
paper and you look at the Transformers
 

01:50:20.040 --> 01:50:22.310 align:start position:0%
paper and you look at the Transformers
that<01:50:20.159><c> they</c><01:50:20.719><c> trained</c><01:50:21.719><c> they</c><01:50:21.840><c> trained</c><01:50:22.119><c> a</c><01:50:22.159><c> number</c>

01:50:22.310 --> 01:50:22.320 align:start position:0%
that they trained they trained a number
 

01:50:22.320 --> 01:50:24.470 align:start position:0%
that they trained they trained a number
of<01:50:22.400><c> trans</c><01:50:22.679><c> Transformers</c><01:50:22.960><c> of</c><01:50:23.119><c> different</c><01:50:23.480><c> sizes</c>

01:50:24.470 --> 01:50:24.480 align:start position:0%
of trans Transformers of different sizes
 

01:50:24.480 --> 01:50:26.990 align:start position:0%
of trans Transformers of different sizes
but<01:50:24.719><c> the</c><01:50:25.080><c> biggest</c><01:50:25.360><c> Transformer</c><01:50:25.880><c> here</c><01:50:26.040><c> has</c><01:50:26.199><c> 175</c>

01:50:26.990 --> 01:50:27.000 align:start position:0%
but the biggest Transformer here has 175
 

01:50:27.000 --> 01:50:29.350 align:start position:0%
but the biggest Transformer here has 175
billion<01:50:27.400><c> parameters</c><01:50:28.400><c> uh</c><01:50:28.520><c> so</c><01:50:28.679><c> ours</c><01:50:29.000><c> is</c><01:50:29.199><c> again</c>

01:50:29.350 --> 01:50:29.360 align:start position:0%
billion parameters uh so ours is again
 

01:50:29.360 --> 01:50:31.790 align:start position:0%
billion parameters uh so ours is again
10<01:50:29.840><c> million</c><01:50:30.840><c> they</c><01:50:30.960><c> used</c><01:50:31.320><c> this</c><01:50:31.480><c> number</c><01:50:31.679><c> of</c>

01:50:31.790 --> 01:50:31.800 align:start position:0%
10 million they used this number of
 

01:50:31.800 --> 01:50:34.229 align:start position:0%
10 million they used this number of
layers<01:50:32.159><c> in</c><01:50:32.239><c> the</c><01:50:32.400><c> Transformer</c><01:50:33.199><c> this</c><01:50:33.280><c> is</c><01:50:33.440><c> the</c>

01:50:34.229 --> 01:50:34.239 align:start position:0%
layers in the Transformer this is the
 

01:50:34.239 --> 01:50:36.950 align:start position:0%
layers in the Transformer this is the
nmed<01:50:35.239><c> this</c><01:50:35.360><c> is</c><01:50:35.520><c> the</c><01:50:35.679><c> number</c><01:50:35.880><c> of</c><01:50:36.080><c> heads</c><01:50:36.800><c> and</c>

01:50:36.950 --> 01:50:36.960 align:start position:0%
nmed this is the number of heads and
 

01:50:36.960 --> 01:50:39.750 align:start position:0%
nmed this is the number of heads and
this<01:50:37.080><c> is</c><01:50:37.280><c> the</c><01:50:37.599><c> head</c><01:50:38.199><c> size</c><01:50:39.199><c> and</c><01:50:39.320><c> then</c><01:50:39.520><c> this</c><01:50:39.599><c> is</c>

01:50:39.750 --> 01:50:39.760 align:start position:0%
this is the head size and then this is
 

01:50:39.760 --> 01:50:43.149 align:start position:0%
this is the head size and then this is
the<01:50:39.880><c> batch</c><01:50:40.280><c> size</c><01:50:41.119><c> uh</c><01:50:41.239><c> so</c><01:50:41.520><c> ours</c><01:50:41.840><c> was</c>

01:50:43.149 --> 01:50:43.159 align:start position:0%
the batch size uh so ours was
 

01:50:43.159 --> 01:50:46.149 align:start position:0%
the batch size uh so ours was
65<01:50:44.159><c> and</c><01:50:44.400><c> the</c><01:50:44.560><c> learning</c><01:50:44.880><c> rate</c><01:50:45.079><c> is</c><01:50:45.199><c> similar</c><01:50:46.040><c> now</c>

01:50:46.149 --> 01:50:46.159 align:start position:0%
65 and the learning rate is similar now
 

01:50:46.159 --> 01:50:47.910 align:start position:0%
65 and the learning rate is similar now
when<01:50:46.320><c> they</c><01:50:46.440><c> train</c><01:50:46.960><c> this</c><01:50:47.119><c> Transformer</c><01:50:47.800><c> they</c>

01:50:47.910 --> 01:50:47.920 align:start position:0%
when they train this Transformer they
 

01:50:47.920 --> 01:50:51.149 align:start position:0%
when they train this Transformer they
trained<01:50:48.239><c> on</c><01:50:48.440><c> 300</c><01:50:48.960><c> billion</c><01:50:49.560><c> tokens</c><01:50:50.560><c> so</c><01:50:50.960><c> again</c>

01:50:51.149 --> 01:50:51.159 align:start position:0%
trained on 300 billion tokens so again
 

01:50:51.159 --> 01:50:53.149 align:start position:0%
trained on 300 billion tokens so again
remember<01:50:51.520><c> ours</c><01:50:51.840><c> is</c><01:50:51.960><c> about</c><01:50:52.119><c> 300,000</c>

01:50:53.149 --> 01:50:53.159 align:start position:0%
remember ours is about 300,000
 

01:50:53.159 --> 01:50:56.030 align:start position:0%
remember ours is about 300,000
so<01:50:53.400><c> this</c><01:50:53.560><c> is</c><01:50:54.159><c> uh</c><01:50:54.679><c> about</c><01:50:54.880><c> a</c><01:50:55.040><c> millionfold</c>

01:50:56.030 --> 01:50:56.040 align:start position:0%
so this is uh about a millionfold
 

01:50:56.040 --> 01:50:57.870 align:start position:0%
so this is uh about a millionfold
increase<01:50:56.840><c> and</c><01:50:56.960><c> this</c><01:50:57.119><c> number</c><01:50:57.440><c> would</c><01:50:57.599><c> not</c><01:50:57.719><c> be</c>

01:50:57.870 --> 01:50:57.880 align:start position:0%
increase and this number would not be
 

01:50:57.880 --> 01:50:59.310 align:start position:0%
increase and this number would not be
even<01:50:58.079><c> that</c><01:50:58.239><c> large</c><01:50:58.480><c> by</c><01:50:58.599><c> today's</c><01:50:58.920><c> standards</c>

01:50:59.310 --> 01:50:59.320 align:start position:0%
even that large by today's standards
 

01:50:59.320 --> 01:51:01.709 align:start position:0%
even that large by today's standards
you'd<01:50:59.520><c> be</c><01:50:59.639><c> going</c><01:50:59.880><c> up</c><01:51:00.400><c> uh</c><01:51:00.639><c> 1</c><01:51:00.840><c> trillion</c><01:51:01.280><c> and</c>

01:51:01.709 --> 01:51:01.719 align:start position:0%
you'd be going up uh 1 trillion and
 

01:51:01.719 --> 01:51:04.669 align:start position:0%
you'd be going up uh 1 trillion and
above<01:51:02.719><c> so</c><01:51:03.280><c> they</c><01:51:03.360><c> are</c><01:51:03.520><c> training</c><01:51:04.159><c> a</c>

01:51:04.669 --> 01:51:04.679 align:start position:0%
above so they are training a
 

01:51:04.679 --> 01:51:06.390 align:start position:0%
above so they are training a
significantly<01:51:05.360><c> larger</c>

01:51:06.390 --> 01:51:06.400 align:start position:0%
significantly larger
 

01:51:06.400 --> 01:51:09.990 align:start position:0%
significantly larger
model<01:51:07.400><c> on</c><01:51:08.159><c> uh</c><01:51:08.280><c> a</c><01:51:08.440><c> good</c><01:51:08.639><c> chunk</c><01:51:08.880><c> of</c><01:51:08.960><c> the</c><01:51:09.079><c> internet</c>

01:51:09.990 --> 01:51:10.000 align:start position:0%
model on uh a good chunk of the internet
 

01:51:10.000 --> 01:51:12.069 align:start position:0%
model on uh a good chunk of the internet
and<01:51:10.159><c> that</c><01:51:10.239><c> is</c><01:51:10.360><c> the</c><01:51:10.520><c> pre-training</c><01:51:11.079><c> stage</c><01:51:11.880><c> but</c>

01:51:12.069 --> 01:51:12.079 align:start position:0%
and that is the pre-training stage but
 

01:51:12.079 --> 01:51:13.629 align:start position:0%
and that is the pre-training stage but
otherwise<01:51:12.560><c> these</c><01:51:12.840><c> hyper</c><01:51:13.159><c> parameters</c><01:51:13.520><c> should</c>

01:51:13.629 --> 01:51:13.639 align:start position:0%
otherwise these hyper parameters should
 

01:51:13.639 --> 01:51:15.390 align:start position:0%
otherwise these hyper parameters should
be<01:51:13.719><c> fairly</c><01:51:14.000><c> recognizable</c><01:51:14.520><c> to</c><01:51:14.679><c> you</c><01:51:15.119><c> and</c><01:51:15.280><c> the</c>

01:51:15.390 --> 01:51:15.400 align:start position:0%
be fairly recognizable to you and the
 

01:51:15.400 --> 01:51:17.149 align:start position:0%
be fairly recognizable to you and the
architecture<01:51:16.040><c> is</c><01:51:16.239><c> actually</c><01:51:16.599><c> like</c><01:51:16.760><c> nearly</c>

01:51:17.149 --> 01:51:17.159 align:start position:0%
architecture is actually like nearly
 

01:51:17.159 --> 01:51:18.390 align:start position:0%
architecture is actually like nearly
identical<01:51:17.599><c> to</c><01:51:17.719><c> what</c><01:51:17.840><c> we</c><01:51:17.960><c> implemented</c>

01:51:18.390 --> 01:51:18.400 align:start position:0%
identical to what we implemented
 

01:51:18.400 --> 01:51:20.510 align:start position:0%
identical to what we implemented
ourselves<01:51:19.400><c> but</c><01:51:19.560><c> of</c><01:51:19.679><c> course</c><01:51:19.880><c> it's</c><01:51:19.960><c> a</c><01:51:20.159><c> massive</c>

01:51:20.510 --> 01:51:20.520 align:start position:0%
ourselves but of course it's a massive
 

01:51:20.520 --> 01:51:22.910 align:start position:0%
ourselves but of course it's a massive
infrastructure<01:51:21.119><c> challenge</c><01:51:21.840><c> to</c><01:51:22.000><c> train</c><01:51:22.320><c> this</c>

01:51:22.910 --> 01:51:22.920 align:start position:0%
infrastructure challenge to train this
 

01:51:22.920 --> 01:51:24.470 align:start position:0%
infrastructure challenge to train this
you're<01:51:23.159><c> talking</c><01:51:23.400><c> about</c><01:51:23.679><c> typically</c><01:51:24.119><c> thousands</c>

01:51:24.470 --> 01:51:24.480 align:start position:0%
you're talking about typically thousands
 

01:51:24.480 --> 01:51:27.149 align:start position:0%
you're talking about typically thousands
of<01:51:24.679><c> gpus</c><01:51:25.679><c> having</c><01:51:25.880><c> to</c><01:51:26.360><c> you</c><01:51:26.480><c> know</c><01:51:26.639><c> talk</c><01:51:26.840><c> to</c><01:51:27.000><c> each</c>

01:51:27.149 --> 01:51:27.159 align:start position:0%
of gpus having to you know talk to each
 

01:51:27.159 --> 01:51:29.950 align:start position:0%
of gpus having to you know talk to each
other<01:51:27.760><c> to</c><01:51:27.960><c> train</c><01:51:28.360><c> models</c><01:51:28.679><c> of</c><01:51:28.840><c> this</c><01:51:29.040><c> size</c><01:51:29.760><c> so</c>

01:51:29.950 --> 01:51:29.960 align:start position:0%
other to train models of this size so
 

01:51:29.960 --> 01:51:31.990 align:start position:0%
other to train models of this size so
that's<01:51:30.079><c> just</c><01:51:30.199><c> a</c><01:51:30.360><c> pre-training</c><01:51:30.880><c> stage</c><01:51:31.760><c> now</c>

01:51:31.990 --> 01:51:32.000 align:start position:0%
that's just a pre-training stage now
 

01:51:32.000 --> 01:51:33.270 align:start position:0%
that's just a pre-training stage now
after<01:51:32.159><c> you</c><01:51:32.320><c> complete</c><01:51:32.599><c> the</c><01:51:32.679><c> pre-training</c>

01:51:33.270 --> 01:51:33.280 align:start position:0%
after you complete the pre-training
 

01:51:33.280 --> 01:51:35.950 align:start position:0%
after you complete the pre-training
stage<01:51:34.280><c> uh</c><01:51:34.400><c> you</c><01:51:34.599><c> don't</c><01:51:34.880><c> get</c><01:51:35.159><c> something</c><01:51:35.560><c> that</c>

01:51:35.950 --> 01:51:35.960 align:start position:0%
stage uh you don't get something that
 

01:51:35.960 --> 01:51:37.990 align:start position:0%
stage uh you don't get something that
responds<01:51:36.400><c> to</c><01:51:36.560><c> your</c><01:51:36.800><c> questions</c><01:51:37.320><c> with</c><01:51:37.560><c> answers</c>

01:51:37.990 --> 01:51:38.000 align:start position:0%
responds to your questions with answers
 

01:51:38.000 --> 01:51:40.629 align:start position:0%
responds to your questions with answers
and<01:51:38.119><c> is</c><01:51:38.239><c> not</c><01:51:38.400><c> helpful</c><01:51:39.040><c> and</c><01:51:39.360><c> Etc</c><01:51:40.040><c> you</c><01:51:40.239><c> get</c><01:51:40.400><c> a</c>

01:51:40.629 --> 01:51:40.639 align:start position:0%
and is not helpful and Etc you get a
 

01:51:40.639 --> 01:51:41.589 align:start position:0%
and is not helpful and Etc you get a
document

01:51:41.589 --> 01:51:41.599 align:start position:0%
document
 

01:51:41.599 --> 01:51:44.550 align:start position:0%
document
completer<01:51:42.599><c> right</c><01:51:42.800><c> so</c><01:51:43.280><c> it</c><01:51:43.480><c> babbles</c><01:51:44.320><c> but</c><01:51:44.440><c> it</c>

01:51:44.550 --> 01:51:44.560 align:start position:0%
completer right so it babbles but it
 

01:51:44.560 --> 01:51:46.229 align:start position:0%
completer right so it babbles but it
doesn't<01:51:44.800><c> Babble</c><01:51:45.079><c> Shakespeare</c><01:51:45.679><c> it</c><01:51:45.840><c> babbles</c>

01:51:46.229 --> 01:51:46.239 align:start position:0%
doesn't Babble Shakespeare it babbles
 

01:51:46.239 --> 01:51:48.229 align:start position:0%
doesn't Babble Shakespeare it babbles
internet<01:51:47.000><c> it</c><01:51:47.079><c> will</c><01:51:47.280><c> create</c><01:51:47.560><c> arbitrary</c><01:51:48.000><c> news</c>

01:51:48.229 --> 01:51:48.239 align:start position:0%
internet it will create arbitrary news
 

01:51:48.239 --> 01:51:49.990 align:start position:0%
internet it will create arbitrary news
articles<01:51:48.800><c> and</c><01:51:49.040><c> documents</c><01:51:49.480><c> and</c><01:51:49.599><c> it</c><01:51:49.679><c> will</c><01:51:49.840><c> try</c>

01:51:49.990 --> 01:51:50.000 align:start position:0%
articles and documents and it will try
 

01:51:50.000 --> 01:51:51.510 align:start position:0%
articles and documents and it will try
to<01:51:50.159><c> complete</c><01:51:50.639><c> documents</c><01:51:51.159><c> because</c><01:51:51.360><c> that's</c>

01:51:51.510 --> 01:51:51.520 align:start position:0%
to complete documents because that's
 

01:51:51.520 --> 01:51:52.669 align:start position:0%
to complete documents because that's
what<01:51:51.599><c> it's</c><01:51:51.719><c> trained</c><01:51:52.000><c> for</c><01:51:52.119><c> it's</c><01:51:52.239><c> trying</c><01:51:52.400><c> to</c>

01:51:52.669 --> 01:51:52.679 align:start position:0%
what it's trained for it's trying to
 

01:51:52.679 --> 01:51:54.589 align:start position:0%
what it's trained for it's trying to
complete<01:51:53.000><c> the</c><01:51:53.119><c> sequence</c><01:51:54.119><c> so</c><01:51:54.280><c> when</c><01:51:54.360><c> you</c><01:51:54.480><c> give</c>

01:51:54.589 --> 01:51:54.599 align:start position:0%
complete the sequence so when you give
 

01:51:54.599 --> 01:51:56.390 align:start position:0%
complete the sequence so when you give
it<01:51:54.679><c> a</c><01:51:54.880><c> question</c><01:51:55.480><c> it</c><01:51:55.560><c> would</c><01:51:55.800><c> just</c><01:51:56.199><c> uh</c>

01:51:56.390 --> 01:51:56.400 align:start position:0%
it a question it would just uh
 

01:51:56.400 --> 01:51:58.750 align:start position:0%
it a question it would just uh
potentially<01:51:57.400><c> just</c><01:51:57.840><c> give</c><01:51:57.960><c> you</c><01:51:58.119><c> more</c><01:51:58.360><c> questions</c>

01:51:58.750 --> 01:51:58.760 align:start position:0%
potentially just give you more questions
 

01:51:58.760 --> 01:52:00.390 align:start position:0%
potentially just give you more questions
it<01:51:58.840><c> would</c><01:51:58.960><c> follow</c><01:51:59.239><c> with</c><01:51:59.400><c> more</c><01:51:59.639><c> questions</c><01:52:00.280><c> it</c>

01:52:00.390 --> 01:52:00.400 align:start position:0%
it would follow with more questions it
 

01:52:00.400 --> 01:52:02.669 align:start position:0%
it would follow with more questions it
will<01:52:00.599><c> do</c><01:52:00.760><c> whatever</c><01:52:01.040><c> it</c><01:52:01.159><c> looks</c><01:52:01.440><c> like</c><01:52:02.079><c> the</c><01:52:02.440><c> some</c>

01:52:02.669 --> 01:52:02.679 align:start position:0%
will do whatever it looks like the some
 

01:52:02.679 --> 01:52:05.270 align:start position:0%
will do whatever it looks like the some
close<01:52:03.079><c> document</c><01:52:03.840><c> would</c><01:52:04.079><c> do</c><01:52:04.679><c> in</c><01:52:04.800><c> the</c><01:52:04.920><c> training</c>

01:52:05.270 --> 01:52:05.280 align:start position:0%
close document would do in the training
 

01:52:05.280 --> 01:52:07.189 align:start position:0%
close document would do in the training
data<01:52:05.639><c> on</c><01:52:05.760><c> the</c><01:52:05.920><c> internet</c><01:52:06.599><c> and</c><01:52:06.719><c> so</c><01:52:06.840><c> who</c><01:52:07.000><c> knows</c>

01:52:07.189 --> 01:52:07.199 align:start position:0%
data on the internet and so who knows
 

01:52:07.199 --> 01:52:08.430 align:start position:0%
data on the internet and so who knows
you're<01:52:07.360><c> getting</c><01:52:07.599><c> kind</c><01:52:07.719><c> of</c><01:52:07.840><c> like</c><01:52:07.960><c> undefined</c>

01:52:08.430 --> 01:52:08.440 align:start position:0%
you're getting kind of like undefined
 

01:52:08.440 --> 01:52:11.149 align:start position:0%
you're getting kind of like undefined
Behavior<01:52:09.079><c> it</c><01:52:09.280><c> might</c><01:52:09.840><c> basically</c><01:52:10.320><c> answer</c><01:52:11.000><c> with</c>

01:52:11.149 --> 01:52:11.159 align:start position:0%
Behavior it might basically answer with
 

01:52:11.159 --> 01:52:13.149 align:start position:0%
Behavior it might basically answer with
to<01:52:11.400><c> questions</c><01:52:11.800><c> with</c><01:52:12.000><c> other</c><01:52:12.280><c> questions</c><01:52:13.000><c> it</c>

01:52:13.149 --> 01:52:13.159 align:start position:0%
to questions with other questions it
 

01:52:13.159 --> 01:52:15.030 align:start position:0%
to questions with other questions it
might<01:52:13.400><c> ignore</c><01:52:13.719><c> your</c><01:52:13.960><c> question</c><01:52:14.599><c> it</c><01:52:14.719><c> might</c><01:52:14.920><c> just</c>

01:52:15.030 --> 01:52:15.040 align:start position:0%
might ignore your question it might just
 

01:52:15.040 --> 01:52:17.069 align:start position:0%
might ignore your question it might just
try<01:52:15.199><c> to</c><01:52:15.360><c> complete</c><01:52:15.639><c> some</c><01:52:15.800><c> news</c><01:52:16.000><c> article</c><01:52:16.840><c> it's</c>

01:52:17.069 --> 01:52:17.079 align:start position:0%
try to complete some news article it's
 

01:52:17.079 --> 01:52:20.550 align:start position:0%
try to complete some news article it's
totally<01:52:17.599><c> unineed</c><01:52:18.480><c> as</c><01:52:18.639><c> we</c><01:52:18.800><c> say</c><01:52:19.800><c> so</c><01:52:19.960><c> the</c><01:52:20.119><c> second</c>

01:52:20.550 --> 01:52:20.560 align:start position:0%
totally unineed as we say so the second
 

01:52:20.560 --> 01:52:22.310 align:start position:0%
totally unineed as we say so the second
fine-tuning<01:52:21.119><c> stage</c><01:52:21.400><c> is</c><01:52:21.520><c> to</c><01:52:21.719><c> actually</c><01:52:22.000><c> align</c>

01:52:22.310 --> 01:52:22.320 align:start position:0%
fine-tuning stage is to actually align
 

01:52:22.320 --> 01:52:25.310 align:start position:0%
fine-tuning stage is to actually align
it<01:52:22.679><c> to</c><01:52:22.840><c> be</c><01:52:22.960><c> an</c><01:52:23.360><c> assistant</c><01:52:24.360><c> and</c><01:52:24.719><c> uh</c><01:52:24.880><c> this</c><01:52:24.960><c> is</c><01:52:25.119><c> the</c>

01:52:25.310 --> 01:52:25.320 align:start position:0%
it to be an assistant and uh this is the
 

01:52:25.320 --> 01:52:28.589 align:start position:0%
it to be an assistant and uh this is the
second<01:52:25.920><c> stage</c><01:52:26.920><c> and</c><01:52:27.239><c> so</c><01:52:27.520><c> this</c><01:52:27.639><c> chat</c><01:52:27.920><c> GPT</c><01:52:28.320><c> block</c>

01:52:28.589 --> 01:52:28.599 align:start position:0%
second stage and so this chat GPT block
 

01:52:28.599 --> 01:52:30.390 align:start position:0%
second stage and so this chat GPT block
post<01:52:28.840><c> from</c><01:52:28.960><c> openi</c><01:52:29.480><c> talks</c><01:52:29.679><c> a</c><01:52:29.800><c> little</c><01:52:30.000><c> bit</c><01:52:30.159><c> about</c>

01:52:30.390 --> 01:52:30.400 align:start position:0%
post from openi talks a little bit about
 

01:52:30.400 --> 01:52:34.229 align:start position:0%
post from openi talks a little bit about
how<01:52:30.599><c> the</c><01:52:30.719><c> stage</c><01:52:30.960><c> is</c><01:52:31.360><c> achieved</c><01:52:32.360><c> we</c><01:52:32.840><c> basically</c>

01:52:34.229 --> 01:52:34.239 align:start position:0%
how the stage is achieved we basically
 

01:52:34.239 --> 01:52:36.750 align:start position:0%
how the stage is achieved we basically
um<01:52:35.239><c> there's</c><01:52:35.440><c> roughly</c><01:52:35.760><c> three</c><01:52:35.960><c> steps</c><01:52:36.239><c> to</c><01:52:36.599><c> to</c>

01:52:36.750 --> 01:52:36.760 align:start position:0%
um there's roughly three steps to to
 

01:52:36.760 --> 01:52:38.990 align:start position:0%
um there's roughly three steps to to
this<01:52:36.960><c> stage</c><01:52:37.920><c> uh</c><01:52:38.000><c> so</c><01:52:38.159><c> what</c><01:52:38.239><c> they</c><01:52:38.360><c> do</c><01:52:38.639><c> here</c><01:52:38.840><c> is</c>

01:52:38.990 --> 01:52:39.000 align:start position:0%
this stage uh so what they do here is
 

01:52:39.000 --> 01:52:41.149 align:start position:0%
this stage uh so what they do here is
they<01:52:39.119><c> start</c><01:52:39.360><c> to</c><01:52:39.560><c> collect</c><01:52:40.000><c> training</c><01:52:40.400><c> data</c><01:52:41.040><c> that</c>

01:52:41.149 --> 01:52:41.159 align:start position:0%
they start to collect training data that
 

01:52:41.159 --> 01:52:42.870 align:start position:0%
they start to collect training data that
looks<01:52:41.480><c> specifically</c><01:52:42.159><c> like</c><01:52:42.599><c> what</c><01:52:42.719><c> an</c>

01:52:42.870 --> 01:52:42.880 align:start position:0%
looks specifically like what an
 

01:52:42.880 --> 01:52:44.510 align:start position:0%
looks specifically like what an
assistant<01:52:43.280><c> would</c><01:52:43.400><c> do</c><01:52:44.000><c> so</c><01:52:44.199><c> these</c><01:52:44.320><c> are</c>

01:52:44.510 --> 01:52:44.520 align:start position:0%
assistant would do so these are
 

01:52:44.520 --> 01:52:45.990 align:start position:0%
assistant would do so these are
documents<01:52:44.960><c> that</c><01:52:45.079><c> have</c><01:52:45.199><c> to</c><01:52:45.360><c> format</c><01:52:45.760><c> where</c><01:52:45.880><c> the</c>

01:52:45.990 --> 01:52:46.000 align:start position:0%
documents that have to format where the
 

01:52:46.000 --> 01:52:47.830 align:start position:0%
documents that have to format where the
question<01:52:46.239><c> is</c><01:52:46.400><c> on</c><01:52:46.639><c> top</c><01:52:46.960><c> and</c><01:52:47.079><c> then</c><01:52:47.199><c> an</c><01:52:47.400><c> answer</c><01:52:47.639><c> is</c>

01:52:47.830 --> 01:52:47.840 align:start position:0%
question is on top and then an answer is
 

01:52:47.840 --> 01:52:50.149 align:start position:0%
question is on top and then an answer is
below<01:52:48.560><c> and</c><01:52:48.719><c> they</c><01:52:48.920><c> have</c><01:52:49.320><c> a</c><01:52:49.440><c> large</c><01:52:49.719><c> number</c><01:52:49.960><c> of</c>

01:52:50.149 --> 01:52:50.159 align:start position:0%
below and they have a large number of
 

01:52:50.159 --> 01:52:51.910 align:start position:0%
below and they have a large number of
these<01:52:50.520><c> but</c><01:52:50.719><c> probably</c><01:52:51.000><c> not</c><01:52:51.159><c> on</c><01:52:51.280><c> the</c><01:52:51.400><c> order</c><01:52:51.679><c> of</c>

01:52:51.910 --> 01:52:51.920 align:start position:0%
these but probably not on the order of
 

01:52:51.920 --> 01:52:53.830 align:start position:0%
these but probably not on the order of
the<01:52:52.040><c> internet</c><01:52:52.880><c> uh</c><01:52:53.000><c> this</c><01:52:53.079><c> is</c><01:52:53.199><c> probably</c><01:52:53.400><c> on</c><01:52:53.560><c> the</c>

01:52:53.830 --> 01:52:53.840 align:start position:0%
the internet uh this is probably on the
 

01:52:53.840 --> 01:52:58.109 align:start position:0%
the internet uh this is probably on the
of<01:52:54.000><c> maybe</c><01:52:54.280><c> thousands</c><01:52:55.280><c> of</c><01:52:56.079><c> examples</c><01:52:57.079><c> and</c><01:52:57.239><c> so</c>

01:52:58.109 --> 01:52:58.119 align:start position:0%
of maybe thousands of examples and so
 

01:52:58.119 --> 01:53:00.709 align:start position:0%
of maybe thousands of examples and so
they<01:52:58.440><c> they</c><01:52:58.599><c> then</c><01:52:58.880><c> fine-tune</c><01:52:59.480><c> the</c><01:52:59.639><c> model</c><01:53:00.480><c> to</c>

01:53:00.709 --> 01:53:00.719 align:start position:0%
they they then fine-tune the model to
 

01:53:00.719 --> 01:53:03.430 align:start position:0%
they they then fine-tune the model to
basically<01:53:01.520><c> only</c><01:53:02.040><c> focus</c><01:53:02.560><c> on</c><01:53:02.880><c> documents</c><01:53:03.280><c> that</c>

01:53:03.430 --> 01:53:03.440 align:start position:0%
basically only focus on documents that
 

01:53:03.440 --> 01:53:05.189 align:start position:0%
basically only focus on documents that
look<01:53:03.679><c> like</c><01:53:03.880><c> that</c><01:53:04.480><c> and</c><01:53:04.599><c> so</c><01:53:04.719><c> you're</c><01:53:04.840><c> starting</c><01:53:05.079><c> to</c>

01:53:05.189 --> 01:53:05.199 align:start position:0%
look like that and so you're starting to
 

01:53:05.199 --> 01:53:07.390 align:start position:0%
look like that and so you're starting to
slowly<01:53:05.599><c> align</c><01:53:05.920><c> it</c><01:53:06.199><c> so</c><01:53:06.560><c> it's</c><01:53:06.719><c> going</c><01:53:06.880><c> to</c><01:53:07.079><c> expect</c>

01:53:07.390 --> 01:53:07.400 align:start position:0%
slowly align it so it's going to expect
 

01:53:07.400 --> 01:53:08.790 align:start position:0%
slowly align it so it's going to expect
a<01:53:07.560><c> question</c><01:53:07.800><c> at</c><01:53:07.920><c> the</c><01:53:08.079><c> top</c><01:53:08.239><c> and</c><01:53:08.320><c> it's</c><01:53:08.480><c> going</c><01:53:08.639><c> to</c>

01:53:08.790 --> 01:53:08.800 align:start position:0%
a question at the top and it's going to
 

01:53:08.800 --> 01:53:11.550 align:start position:0%
a question at the top and it's going to
expect<01:53:09.079><c> to</c><01:53:09.239><c> complete</c><01:53:09.599><c> the</c><01:53:09.920><c> answer</c><01:53:10.920><c> and</c><01:53:11.320><c> uh</c>

01:53:11.550 --> 01:53:11.560 align:start position:0%
expect to complete the answer and uh
 

01:53:11.560 --> 01:53:13.589 align:start position:0%
expect to complete the answer and uh
these<01:53:11.800><c> very</c><01:53:12.000><c> very</c><01:53:12.199><c> large</c><01:53:12.480><c> models</c><01:53:13.000><c> are</c><01:53:13.239><c> very</c>

01:53:13.589 --> 01:53:13.599 align:start position:0%
these very very large models are very
 

01:53:13.599 --> 01:53:14.950 align:start position:0%
these very very large models are very
sample<01:53:14.000><c> efficient</c><01:53:14.560><c> during</c><01:53:14.800><c> their</c>

01:53:14.950 --> 01:53:14.960 align:start position:0%
sample efficient during their
 

01:53:14.960 --> 01:53:16.830 align:start position:0%
sample efficient during their
fine-tuning<01:53:15.800><c> so</c><01:53:16.000><c> this</c><01:53:16.159><c> actually</c><01:53:16.480><c> somehow</c>

01:53:16.830 --> 01:53:16.840 align:start position:0%
fine-tuning so this actually somehow
 

01:53:16.840 --> 01:53:19.069 align:start position:0%
fine-tuning so this actually somehow
works<01:53:17.800><c> but</c><01:53:17.960><c> that's</c><01:53:18.119><c> just</c><01:53:18.280><c> step</c><01:53:18.520><c> one</c><01:53:18.880><c> that's</c>

01:53:19.069 --> 01:53:19.079 align:start position:0%
works but that's just step one that's
 

01:53:19.079 --> 01:53:20.950 align:start position:0%
works but that's just step one that's
just<01:53:19.239><c> fine</c><01:53:19.480><c> tuning</c><01:53:20.280><c> so</c><01:53:20.480><c> then</c><01:53:20.599><c> they</c><01:53:20.760><c> actually</c>

01:53:20.950 --> 01:53:20.960 align:start position:0%
just fine tuning so then they actually
 

01:53:20.960 --> 01:53:23.189 align:start position:0%
just fine tuning so then they actually
have<01:53:21.119><c> more</c><01:53:21.320><c> steps</c><01:53:21.719><c> where</c><01:53:22.560><c> okay</c><01:53:22.760><c> the</c><01:53:22.880><c> second</c>

01:53:23.189 --> 01:53:23.199 align:start position:0%
have more steps where okay the second
 

01:53:23.199 --> 01:53:25.470 align:start position:0%
have more steps where okay the second
step<01:53:23.480><c> is</c><01:53:23.599><c> you</c><01:53:23.840><c> let</c><01:53:24.000><c> the</c><01:53:24.119><c> model</c><01:53:24.520><c> respond</c><01:53:25.360><c> and</c>

01:53:25.470 --> 01:53:25.480 align:start position:0%
step is you let the model respond and
 

01:53:25.480 --> 01:53:26.990 align:start position:0%
step is you let the model respond and
then<01:53:25.639><c> different</c><01:53:25.960><c> Raiders</c><01:53:26.560><c> look</c><01:53:26.719><c> at</c><01:53:26.880><c> the</c>

01:53:26.990 --> 01:53:27.000 align:start position:0%
then different Raiders look at the
 

01:53:27.000 --> 01:53:29.189 align:start position:0%
then different Raiders look at the
different<01:53:27.280><c> responses</c><01:53:28.040><c> and</c><01:53:28.199><c> rank</c><01:53:28.480><c> them</c><01:53:28.800><c> for</c>

01:53:29.189 --> 01:53:29.199 align:start position:0%
different responses and rank them for
 

01:53:29.199 --> 01:53:30.669 align:start position:0%
different responses and rank them for
their<01:53:29.360><c> preference</c><01:53:29.840><c> as</c><01:53:29.960><c> to</c><01:53:30.199><c> which</c><01:53:30.320><c> one</c><01:53:30.560><c> is</c>

01:53:30.669 --> 01:53:30.679 align:start position:0%
their preference as to which one is
 

01:53:30.679 --> 01:53:32.510 align:start position:0%
their preference as to which one is
better<01:53:30.920><c> than</c><01:53:31.040><c> the</c><01:53:31.199><c> other</c><01:53:32.000><c> they</c><01:53:32.119><c> use</c><01:53:32.320><c> that</c><01:53:32.440><c> to</c>

01:53:32.510 --> 01:53:32.520 align:start position:0%
better than the other they use that to
 

01:53:32.520 --> 01:53:35.069 align:start position:0%
better than the other they use that to
train<01:53:32.719><c> a</c><01:53:32.880><c> reward</c><01:53:33.239><c> model</c><01:53:33.960><c> so</c><01:53:34.159><c> they</c><01:53:34.280><c> can</c><01:53:34.480><c> predict</c>

01:53:35.069 --> 01:53:35.079 align:start position:0%
train a reward model so they can predict
 

01:53:35.079 --> 01:53:37.069 align:start position:0%
train a reward model so they can predict
uh<01:53:35.239><c> basically</c><01:53:35.599><c> using</c><01:53:35.840><c> a</c><01:53:36.000><c> different</c><01:53:36.280><c> network</c>

01:53:37.069 --> 01:53:37.079 align:start position:0%
uh basically using a different network
 

01:53:37.079 --> 01:53:39.910 align:start position:0%
uh basically using a different network
how<01:53:37.239><c> much</c><01:53:37.440><c> of</c><01:53:37.679><c> any</c><01:53:38.320><c> candidate</c>

01:53:39.910 --> 01:53:39.920 align:start position:0%
how much of any candidate
 

01:53:39.920 --> 01:53:43.149 align:start position:0%
how much of any candidate
response<01:53:40.920><c> would</c><01:53:41.440><c> be</c><01:53:41.920><c> desirable</c><01:53:42.920><c> and</c><01:53:43.040><c> then</c>

01:53:43.149 --> 01:53:43.159 align:start position:0%
response would be desirable and then
 

01:53:43.159 --> 01:53:45.030 align:start position:0%
response would be desirable and then
once<01:53:43.320><c> they</c><01:53:43.440><c> have</c><01:53:43.560><c> a</c><01:53:43.639><c> reward</c><01:53:44.000><c> model</c><01:53:44.520><c> they</c><01:53:44.679><c> run</c>

01:53:45.030 --> 01:53:45.040 align:start position:0%
once they have a reward model they run
 

01:53:45.040 --> 01:53:47.510 align:start position:0%
once they have a reward model they run
po<01:53:45.800><c> which</c><01:53:45.920><c> is</c><01:53:46.119><c> a</c><01:53:46.480><c> form</c><01:53:46.639><c> of</c><01:53:46.880><c> polic</c><01:53:47.239><c> policy</c>

01:53:47.510 --> 01:53:47.520 align:start position:0%
po which is a form of polic policy
 

01:53:47.520 --> 01:53:49.629 align:start position:0%
po which is a form of polic policy
gradient<01:53:48.239><c> um</c><01:53:48.560><c> reinforcement</c><01:53:49.079><c> learning</c>

01:53:49.629 --> 01:53:49.639 align:start position:0%
gradient um reinforcement learning
 

01:53:49.639 --> 01:53:52.990 align:start position:0%
gradient um reinforcement learning
Optimizer<01:53:50.639><c> to</c><01:53:51.079><c> uh</c><01:53:51.199><c> fine-tune</c><01:53:52.079><c> this</c><01:53:52.480><c> sampling</c>

01:53:52.990 --> 01:53:53.000 align:start position:0%
Optimizer to uh fine-tune this sampling
 

01:53:53.000 --> 01:53:55.750 align:start position:0%
Optimizer to uh fine-tune this sampling
policy<01:53:54.000><c> uh</c><01:53:54.119><c> so</c><01:53:54.360><c> that</c><01:53:54.719><c> the</c><01:53:54.920><c> answers</c><01:53:55.480><c> that</c><01:53:55.599><c> the</c>

01:53:55.750 --> 01:53:55.760 align:start position:0%
policy uh so that the answers that the
 

01:53:55.760 --> 01:53:59.109 align:start position:0%
policy uh so that the answers that the
GP<01:53:56.199><c> chat</c><01:53:56.400><c> GPT</c><01:53:56.880><c> now</c><01:53:57.480><c> generates</c><01:53:58.440><c> are</c><01:53:58.719><c> expected</c>

01:53:59.109 --> 01:53:59.119 align:start position:0%
GP chat GPT now generates are expected
 

01:53:59.119 --> 01:54:02.149 align:start position:0%
GP chat GPT now generates are expected
to<01:53:59.520><c> score</c><01:53:59.920><c> a</c><01:54:00.119><c> high</c><01:54:00.560><c> reward</c><01:54:01.360><c> according</c><01:54:01.719><c> to</c><01:54:02.040><c> the</c>

01:54:02.149 --> 01:54:02.159 align:start position:0%
to score a high reward according to the
 

01:54:02.159 --> 01:54:04.629 align:start position:0%
to score a high reward according to the
reward<01:54:02.639><c> model</c><01:54:03.639><c> and</c><01:54:03.760><c> so</c><01:54:03.920><c> basically</c><01:54:04.280><c> there's</c><01:54:04.440><c> a</c>

01:54:04.629 --> 01:54:04.639 align:start position:0%
reward model and so basically there's a
 

01:54:04.639 --> 01:54:07.109 align:start position:0%
reward model and so basically there's a
whole<01:54:04.920><c> aligning</c><01:54:05.599><c> stage</c><01:54:05.960><c> here</c><01:54:06.360><c> or</c><01:54:06.560><c> fine-tuning</c>

01:54:07.109 --> 01:54:07.119 align:start position:0%
whole aligning stage here or fine-tuning
 

01:54:07.119 --> 01:54:09.189 align:start position:0%
whole aligning stage here or fine-tuning
stage<01:54:07.599><c> it's</c><01:54:07.760><c> got</c><01:54:07.920><c> multiple</c><01:54:08.239><c> steps</c><01:54:08.639><c> in</c><01:54:08.800><c> between</c>

01:54:09.189 --> 01:54:09.199 align:start position:0%
stage it's got multiple steps in between
 

01:54:09.199 --> 01:54:11.790 align:start position:0%
stage it's got multiple steps in between
there<01:54:09.480><c> as</c><01:54:09.639><c> well</c><01:54:10.400><c> and</c><01:54:10.760><c> it</c><01:54:10.960><c> takes</c><01:54:11.400><c> the</c><01:54:11.520><c> model</c>

01:54:11.790 --> 01:54:11.800 align:start position:0%
there as well and it takes the model
 

01:54:11.800 --> 01:54:14.470 align:start position:0%
there as well and it takes the model
from<01:54:11.960><c> being</c><01:54:12.119><c> a</c><01:54:12.320><c> document</c><01:54:12.679><c> completer</c><01:54:13.440><c> to</c><01:54:13.760><c> a</c>

01:54:14.470 --> 01:54:14.480 align:start position:0%
from being a document completer to a
 

01:54:14.480 --> 01:54:16.950 align:start position:0%
from being a document completer to a
question<01:54:15.440><c> answerer</c><01:54:16.440><c> and</c><01:54:16.599><c> that's</c><01:54:16.719><c> like</c><01:54:16.880><c> a</c>

01:54:16.950 --> 01:54:16.960 align:start position:0%
question answerer and that's like a
 

01:54:16.960 --> 01:54:19.189 align:start position:0%
question answerer and that's like a
whole<01:54:17.159><c> separate</c><01:54:17.520><c> stage</c><01:54:18.440><c> a</c><01:54:18.520><c> lot</c><01:54:18.639><c> of</c><01:54:18.760><c> this</c><01:54:18.920><c> data</c>

01:54:19.189 --> 01:54:19.199 align:start position:0%
whole separate stage a lot of this data
 

01:54:19.199 --> 01:54:21.430 align:start position:0%
whole separate stage a lot of this data
is<01:54:19.360><c> not</c><01:54:19.599><c> available</c><01:54:20.119><c> publicly</c><01:54:20.719><c> it</c><01:54:20.840><c> is</c><01:54:21.000><c> internal</c>

01:54:21.430 --> 01:54:21.440 align:start position:0%
is not available publicly it is internal
 

01:54:21.440 --> 01:54:24.030 align:start position:0%
is not available publicly it is internal
to<01:54:21.599><c> open</c><01:54:21.840><c> AI</c><01:54:22.760><c> and</c><01:54:23.119><c> uh</c><01:54:23.239><c> it's</c><01:54:23.440><c> much</c><01:54:23.599><c> harder</c><01:54:23.840><c> to</c>

01:54:24.030 --> 01:54:24.040 align:start position:0%
to open AI and uh it's much harder to
 

01:54:24.040 --> 01:54:27.310 align:start position:0%
to open AI and uh it's much harder to
replicate<01:54:24.639><c> this</c><01:54:25.119><c> stage</c><01:54:26.119><c> um</c><01:54:26.719><c> and</c><01:54:26.840><c> so</c><01:54:27.119><c> that's</c>

01:54:27.310 --> 01:54:27.320 align:start position:0%
replicate this stage um and so that's
 

01:54:27.320 --> 01:54:29.589 align:start position:0%
replicate this stage um and so that's
roughly<01:54:27.679><c> what</c><01:54:27.760><c> would</c><01:54:27.920><c> give</c><01:54:28.040><c> you</c><01:54:28.239><c> a</c><01:54:28.360><c> chat</c><01:54:28.639><c> GPT</c>

01:54:29.589 --> 01:54:29.599 align:start position:0%
roughly what would give you a chat GPT
 

01:54:29.599 --> 01:54:31.189 align:start position:0%
roughly what would give you a chat GPT
and<01:54:29.800><c> nanog</c><01:54:30.079><c> GPT</c><01:54:30.520><c> focuses</c><01:54:30.920><c> on</c><01:54:31.079><c> the</c>

01:54:31.189 --> 01:54:31.199 align:start position:0%
and nanog GPT focuses on the
 

01:54:31.199 --> 01:54:32.910 align:start position:0%
and nanog GPT focuses on the
pre-training<01:54:31.840><c> stage</c><01:54:32.480><c> okay</c><01:54:32.639><c> and</c><01:54:32.760><c> that's</c>

01:54:32.910 --> 01:54:32.920 align:start position:0%
pre-training stage okay and that's
 

01:54:32.920 --> 01:54:34.990 align:start position:0%
pre-training stage okay and that's
everything<01:54:33.199><c> that</c><01:54:33.320><c> I</c><01:54:33.400><c> wanted</c><01:54:33.599><c> to</c><01:54:33.719><c> cover</c><01:54:34.000><c> today</c>

01:54:34.990 --> 01:54:35.000 align:start position:0%
everything that I wanted to cover today
 

01:54:35.000 --> 01:54:38.669 align:start position:0%
everything that I wanted to cover today
so<01:54:35.400><c> we</c><01:54:35.599><c> trained</c><01:54:36.400><c> to</c><01:54:36.639><c> summarize</c><01:54:37.639><c> a</c><01:54:38.079><c> decoder</c>

01:54:38.669 --> 01:54:38.679 align:start position:0%
so we trained to summarize a decoder
 

01:54:38.679 --> 01:54:41.790 align:start position:0%
so we trained to summarize a decoder
only<01:54:39.040><c> Transformer</c><01:54:40.040><c> following</c><01:54:40.639><c> this</c><01:54:41.480><c> famous</c>

01:54:41.790 --> 01:54:41.800 align:start position:0%
only Transformer following this famous
 

01:54:41.800 --> 01:54:43.910 align:start position:0%
only Transformer following this famous
paper<01:54:42.119><c> attention</c><01:54:42.440><c> is</c><01:54:42.560><c> all</c><01:54:42.719><c> you</c><01:54:42.840><c> need</c><01:54:43.079><c> from</c>

01:54:43.910 --> 01:54:43.920 align:start position:0%
paper attention is all you need from
 

01:54:43.920 --> 01:54:47.270 align:start position:0%
paper attention is all you need from
2017<01:54:44.920><c> and</c><01:54:45.040><c> so</c><01:54:45.239><c> that's</c><01:54:45.480><c> basically</c><01:54:45.880><c> a</c><01:54:46.159><c> GPT</c><01:54:47.159><c> we</c>

01:54:47.270 --> 01:54:47.280 align:start position:0%
2017 and so that's basically a GPT we
 

01:54:47.280 --> 01:54:50.390 align:start position:0%
2017 and so that's basically a GPT we
trained<01:54:47.639><c> it</c><01:54:47.920><c> on</c><01:54:48.920><c> Tiny</c><01:54:49.159><c> Shakespeare</c><01:54:50.000><c> and</c><01:54:50.159><c> got</c>

01:54:50.390 --> 01:54:50.400 align:start position:0%
trained it on Tiny Shakespeare and got
 

01:54:50.400 --> 01:54:52.750 align:start position:0%
trained it on Tiny Shakespeare and got
sensible<01:54:51.040><c> results</c>

01:54:52.750 --> 01:54:52.760 align:start position:0%
sensible results
 

01:54:52.760 --> 01:54:54.629 align:start position:0%
sensible results
all<01:54:52.920><c> of</c><01:54:53.000><c> the</c><01:54:53.119><c> training</c><01:54:53.480><c> code</c><01:54:53.800><c> is</c>

01:54:54.629 --> 01:54:54.639 align:start position:0%
all of the training code is
 

01:54:54.639 --> 01:54:57.589 align:start position:0%
all of the training code is
roughly<01:54:55.639><c> 200</c><01:54:55.920><c> lines</c><01:54:56.119><c> of</c><01:54:56.280><c> code</c><01:54:57.199><c> I</c><01:54:57.239><c> will</c><01:54:57.400><c> be</c>

01:54:57.589 --> 01:54:57.599 align:start position:0%
roughly 200 lines of code I will be
 

01:54:57.599 --> 01:55:01.750 align:start position:0%
roughly 200 lines of code I will be
releasing<01:54:58.520><c> this</c><01:54:59.040><c> um</c><01:54:59.520><c> code</c><01:54:59.760><c> base</c><01:55:00.480><c> so</c><01:55:01.239><c> also</c><01:55:01.639><c> it</c>

01:55:01.750 --> 01:55:01.760 align:start position:0%
releasing this um code base so also it
 

01:55:01.760 --> 01:55:04.189 align:start position:0%
releasing this um code base so also it
comes<01:55:02.000><c> with</c><01:55:02.199><c> all</c><01:55:02.400><c> the</c><01:55:02.800><c> git</c><01:55:03.079><c> log</c><01:55:03.560><c> commits</c><01:55:03.960><c> along</c>

01:55:04.189 --> 01:55:04.199 align:start position:0%
comes with all the git log commits along
 

01:55:04.199 --> 01:55:05.790 align:start position:0%
comes with all the git log commits along
the<01:55:04.320><c> way</c><01:55:04.520><c> as</c><01:55:04.639><c> we</c><01:55:04.800><c> built</c><01:55:05.040><c> it</c>

01:55:05.790 --> 01:55:05.800 align:start position:0%
the way as we built it
 

01:55:05.800 --> 01:55:08.109 align:start position:0%
the way as we built it
up<01:55:06.800><c> in</c><01:55:06.920><c> addition</c><01:55:07.199><c> to</c><01:55:07.360><c> this</c><01:55:07.480><c> code</c><01:55:07.719><c> I'm</c><01:55:07.840><c> going</c><01:55:07.960><c> to</c>

01:55:08.109 --> 01:55:08.119 align:start position:0%
up in addition to this code I'm going to
 

01:55:08.119 --> 01:55:10.950 align:start position:0%
up in addition to this code I'm going to
release<01:55:08.960><c> the</c><01:55:09.440><c> um</c><01:55:09.960><c> notebook</c><01:55:10.520><c> of</c><01:55:10.639><c> course</c><01:55:10.840><c> the</c>

01:55:10.950 --> 01:55:10.960 align:start position:0%
release the um notebook of course the
 

01:55:10.960 --> 01:55:13.470 align:start position:0%
release the um notebook of course the
Google<01:55:11.599><c> collab</c><01:55:12.599><c> and</c><01:55:12.800><c> I</c><01:55:12.880><c> hope</c><01:55:13.040><c> that</c><01:55:13.159><c> gave</c><01:55:13.320><c> you</c><01:55:13.400><c> a</c>

01:55:13.470 --> 01:55:13.480 align:start position:0%
Google collab and I hope that gave you a
 

01:55:13.480 --> 01:55:16.470 align:start position:0%
Google collab and I hope that gave you a
sense<01:55:13.719><c> for</c><01:55:13.920><c> how</c><01:55:14.040><c> you</c><01:55:14.119><c> can</c><01:55:14.280><c> train</c><01:55:15.280><c> um</c><01:55:16.280><c> these</c>

01:55:16.470 --> 01:55:16.480 align:start position:0%
sense for how you can train um these
 

01:55:16.480 --> 01:55:19.270 align:start position:0%
sense for how you can train um these
models<01:55:16.880><c> like</c><01:55:17.040><c> say</c><01:55:17.239><c> gpt3</c><01:55:18.159><c> that</c><01:55:18.280><c> will</c><01:55:18.440><c> be</c><01:55:18.960><c> um</c>

01:55:19.270 --> 01:55:19.280 align:start position:0%
models like say gpt3 that will be um
 

01:55:19.280 --> 01:55:20.950 align:start position:0%
models like say gpt3 that will be um
architecturally<01:55:19.960><c> basically</c><01:55:20.360><c> identical</c><01:55:20.800><c> to</c>

01:55:20.950 --> 01:55:20.960 align:start position:0%
architecturally basically identical to
 

01:55:20.960 --> 01:55:22.470 align:start position:0%
architecturally basically identical to
what<01:55:21.079><c> we</c><01:55:21.280><c> have</c><01:55:21.760><c> but</c><01:55:21.880><c> they</c><01:55:21.960><c> are</c><01:55:22.040><c> somewhere</c>

01:55:22.470 --> 01:55:22.480 align:start position:0%
what we have but they are somewhere
 

01:55:22.480 --> 01:55:24.390 align:start position:0%
what we have but they are somewhere
between<01:55:22.719><c> 10,000</c><01:55:23.280><c> and</c><01:55:23.440><c> 1</c><01:55:23.639><c> million</c><01:55:24.079><c> times</c>

01:55:24.390 --> 01:55:24.400 align:start position:0%
between 10,000 and 1 million times
 

01:55:24.400 --> 01:55:27.589 align:start position:0%
between 10,000 and 1 million times
bigger<01:55:24.760><c> depending</c><01:55:25.079><c> on</c><01:55:25.199><c> how</c><01:55:25.320><c> you</c><01:55:25.800><c> count</c><01:55:26.800><c> and</c><01:55:27.000><c> so</c>

01:55:27.589 --> 01:55:27.599 align:start position:0%
bigger depending on how you count and so
 

01:55:27.599 --> 01:55:30.550 align:start position:0%
bigger depending on how you count and so
uh<01:55:28.280><c> that's</c><01:55:28.440><c> all</c><01:55:28.639><c> I</c><01:55:28.800><c> have</c><01:55:29.079><c> for</c><01:55:29.320><c> now</c><01:55:30.040><c> uh</c><01:55:30.159><c> we</c><01:55:30.400><c> did</c>

01:55:30.550 --> 01:55:30.560 align:start position:0%
uh that's all I have for now uh we did
 

01:55:30.560 --> 01:55:31.990 align:start position:0%
uh that's all I have for now uh we did
not<01:55:30.760><c> talk</c><01:55:30.960><c> about</c><01:55:31.159><c> any</c><01:55:31.320><c> of</c><01:55:31.400><c> the</c><01:55:31.520><c> fine-tuning</c>

01:55:31.990 --> 01:55:32.000 align:start position:0%
not talk about any of the fine-tuning
 

01:55:32.000 --> 01:55:33.910 align:start position:0%
not talk about any of the fine-tuning
stages<01:55:32.400><c> that</c><01:55:32.520><c> would</c><01:55:32.760><c> typically</c><01:55:33.119><c> go</c><01:55:33.239><c> on</c><01:55:33.480><c> top</c><01:55:33.679><c> of</c>

01:55:33.910 --> 01:55:33.920 align:start position:0%
stages that would typically go on top of
 

01:55:33.920 --> 01:55:35.470 align:start position:0%
stages that would typically go on top of
this<01:55:34.520><c> so</c><01:55:34.679><c> if</c><01:55:34.760><c> you're</c><01:55:35.000><c> interested</c><01:55:35.360><c> in</c>

01:55:35.470 --> 01:55:35.480 align:start position:0%
this so if you're interested in
 

01:55:35.480 --> 01:55:36.550 align:start position:0%
this so if you're interested in
something<01:55:35.760><c> that's</c><01:55:35.920><c> not</c><01:55:36.079><c> just</c><01:55:36.239><c> language</c>

01:55:36.550 --> 01:55:36.560 align:start position:0%
something that's not just language
 

01:55:36.560 --> 01:55:38.270 align:start position:0%
something that's not just language
modeling<01:55:36.960><c> but</c><01:55:37.079><c> you</c><01:55:37.199><c> actually</c><01:55:37.400><c> want</c><01:55:37.560><c> to</c><01:55:38.119><c> you</c>

01:55:38.270 --> 01:55:38.280 align:start position:0%
modeling but you actually want to you
 

01:55:38.280 --> 01:55:40.830 align:start position:0%
modeling but you actually want to you
know<01:55:38.440><c> say</c><01:55:38.639><c> perform</c><01:55:39.040><c> tasks</c><01:55:40.000><c> um</c><01:55:40.440><c> or</c><01:55:40.560><c> you</c><01:55:40.679><c> want</c>

01:55:40.830 --> 01:55:40.840 align:start position:0%
know say perform tasks um or you want
 

01:55:40.840 --> 01:55:43.149 align:start position:0%
know say perform tasks um or you want
them<01:55:40.960><c> to</c><01:55:41.079><c> be</c><01:55:41.199><c> aligned</c><01:55:41.560><c> in</c><01:55:41.639><c> a</c><01:55:41.840><c> specific</c><01:55:42.239><c> way</c><01:55:42.960><c> or</c>

01:55:43.149 --> 01:55:43.159 align:start position:0%
them to be aligned in a specific way or
 

01:55:43.159 --> 01:55:45.550 align:start position:0%
them to be aligned in a specific way or
you<01:55:43.360><c> want</c><01:55:44.079><c> um</c><01:55:44.480><c> to</c><01:55:44.679><c> detect</c><01:55:45.000><c> sentiment</c><01:55:45.400><c> or</c>

01:55:45.550 --> 01:55:45.560 align:start position:0%
you want um to detect sentiment or
 

01:55:45.560 --> 01:55:47.229 align:start position:0%
you want um to detect sentiment or
anything<01:55:45.880><c> like</c><01:55:46.040><c> that</c><01:55:46.480><c> basically</c><01:55:46.840><c> anytime</c><01:55:47.119><c> you</c>

01:55:47.229 --> 01:55:47.239 align:start position:0%
anything like that basically anytime you
 

01:55:47.239 --> 01:55:48.510 align:start position:0%
anything like that basically anytime you
don't<01:55:47.400><c> want</c><01:55:47.639><c> something</c><01:55:47.960><c> that's</c><01:55:48.199><c> just</c><01:55:48.320><c> a</c>

01:55:48.510 --> 01:55:48.520 align:start position:0%
don't want something that's just a
 

01:55:48.520 --> 01:55:50.629 align:start position:0%
don't want something that's just a
document<01:55:48.880><c> completer</c><01:55:49.520><c> you</c><01:55:49.679><c> have</c><01:55:49.760><c> to</c><01:55:49.960><c> complete</c>

01:55:50.629 --> 01:55:50.639 align:start position:0%
document completer you have to complete
 

01:55:50.639 --> 01:55:52.550 align:start position:0%
document completer you have to complete
further<01:55:51.040><c> stages</c><01:55:51.360><c> of</c><01:55:51.480><c> fine</c><01:55:51.679><c> tuning</c><01:55:52.000><c> which</c><01:55:52.400><c> did</c>

01:55:52.550 --> 01:55:52.560 align:start position:0%
further stages of fine tuning which did
 

01:55:52.560 --> 01:55:55.189 align:start position:0%
further stages of fine tuning which did
not<01:55:53.159><c> cover</c><01:55:54.159><c> uh</c><01:55:54.239><c> and</c><01:55:54.400><c> that</c><01:55:54.520><c> could</c><01:55:54.679><c> be</c><01:55:54.840><c> simple</c>

01:55:55.189 --> 01:55:55.199 align:start position:0%
not cover uh and that could be simple
 

01:55:55.199 --> 01:55:57.030 align:start position:0%
not cover uh and that could be simple
supervised<01:55:55.760><c> fine</c><01:55:55.960><c> tuning</c><01:55:56.520><c> or</c><01:55:56.679><c> it</c><01:55:56.760><c> can</c><01:55:56.920><c> be</c>

01:55:57.030 --> 01:55:57.040 align:start position:0%
supervised fine tuning or it can be
 

01:55:57.040 --> 01:55:58.350 align:start position:0%
supervised fine tuning or it can be
something<01:55:57.239><c> more</c><01:55:57.400><c> fancy</c><01:55:57.719><c> like</c><01:55:57.840><c> we</c><01:55:57.920><c> see</c><01:55:58.040><c> in</c><01:55:58.159><c> chat</c>

01:55:58.350 --> 01:55:58.360 align:start position:0%
something more fancy like we see in chat
 

01:55:58.360 --> 01:56:00.470 align:start position:0%
something more fancy like we see in chat
jpt<01:55:59.040><c> where</c><01:55:59.159><c> we</c><01:55:59.280><c> actually</c><01:55:59.520><c> train</c><01:55:59.840><c> a</c><01:56:00.079><c> reward</c>

01:56:00.470 --> 01:56:00.480 align:start position:0%
jpt where we actually train a reward
 

01:56:00.480 --> 01:56:03.030 align:start position:0%
jpt where we actually train a reward
model<01:56:00.920><c> and</c><01:56:01.040><c> then</c><01:56:01.199><c> do</c><01:56:01.400><c> rounds</c><01:56:01.639><c> of</c><01:56:01.800><c> Po</c><01:56:02.440><c> to</c><01:56:02.920><c> uh</c>

01:56:03.030 --> 01:56:03.040 align:start position:0%
model and then do rounds of Po to uh
 

01:56:03.040 --> 01:56:04.390 align:start position:0%
model and then do rounds of Po to uh
align<01:56:03.320><c> it</c><01:56:03.480><c> with</c><01:56:03.639><c> respect</c><01:56:03.880><c> to</c><01:56:04.000><c> the</c><01:56:04.079><c> reward</c>

01:56:04.390 --> 01:56:04.400 align:start position:0%
align it with respect to the reward
 

01:56:04.400 --> 01:56:06.350 align:start position:0%
align it with respect to the reward
model<01:56:05.320><c> so</c><01:56:05.440><c> there's</c><01:56:05.599><c> a</c><01:56:05.719><c> lot</c><01:56:05.840><c> more</c><01:56:06.000><c> that</c><01:56:06.119><c> can</c><01:56:06.239><c> be</c>

01:56:06.350 --> 01:56:06.360 align:start position:0%
model so there's a lot more that can be
 

01:56:06.360 --> 01:56:08.310 align:start position:0%
model so there's a lot more that can be
done<01:56:06.520><c> on</c><01:56:06.639><c> top</c><01:56:06.800><c> of</c><01:56:06.920><c> it</c><01:56:07.520><c> I</c><01:56:07.599><c> think</c><01:56:07.719><c> for</c><01:56:07.920><c> now</c><01:56:08.079><c> we're</c>

01:56:08.310 --> 01:56:08.320 align:start position:0%
done on top of it I think for now we're
 

01:56:08.320 --> 01:56:10.229 align:start position:0%
done on top of it I think for now we're
starting<01:56:08.560><c> to</c><01:56:08.679><c> get</c><01:56:08.800><c> to</c><01:56:08.920><c> about</c><01:56:09.079><c> two</c><01:56:09.280><c> hours</c><01:56:09.599><c> Mark</c>

01:56:10.229 --> 01:56:10.239 align:start position:0%
starting to get to about two hours Mark
 

01:56:10.239 --> 01:56:13.270 align:start position:0%
starting to get to about two hours Mark
uh<01:56:10.360><c> so</c><01:56:10.480><c> I'm</c><01:56:10.639><c> going</c><01:56:10.800><c> to</c><01:56:11.360><c> um</c><01:56:12.199><c> kind</c><01:56:12.320><c> of</c><01:56:12.440><c> finish</c>

01:56:13.270 --> 01:56:13.280 align:start position:0%
uh so I'm going to um kind of finish
 

01:56:13.280 --> 01:56:15.910 align:start position:0%
uh so I'm going to um kind of finish
here<01:56:14.280><c> uh</c><01:56:14.400><c> I</c><01:56:14.480><c> hope</c><01:56:14.599><c> you</c><01:56:14.719><c> enjoyed</c><01:56:15.000><c> the</c><01:56:15.079><c> lecture</c>

01:56:15.910 --> 01:56:15.920 align:start position:0%
here uh I hope you enjoyed the lecture
 

01:56:15.920 --> 01:56:18.470 align:start position:0%
here uh I hope you enjoyed the lecture
uh<01:56:16.079><c> and</c><01:56:16.440><c> uh</c><01:56:16.639><c> yeah</c><01:56:16.880><c> go</c><01:56:17.040><c> forth</c><01:56:17.360><c> and</c><01:56:17.599><c> transform</c>

01:56:18.470 --> 01:56:18.480 align:start position:0%
uh and uh yeah go forth and transform
 

01:56:18.480 --> 01:56:21.760 align:start position:0%
uh and uh yeah go forth and transform
see<01:56:18.639><c> you</c><01:56:18.760><c> later</c>

