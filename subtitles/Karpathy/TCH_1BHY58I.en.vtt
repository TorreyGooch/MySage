WEBVTT
Kind: captions
Language: en

00:00:00.640 --> 00:00:01.910 align:start position:0%
 
hi<00:00:00.880><c> everyone</c>

00:00:01.910 --> 00:00:01.920 align:start position:0%
hi everyone
 

00:00:01.920 --> 00:00:03.270 align:start position:0%
hi everyone
today<00:00:02.240><c> we</c><00:00:02.399><c> are</c><00:00:02.560><c> continuing</c><00:00:03.120><c> our</c>

00:00:03.270 --> 00:00:03.280 align:start position:0%
today we are continuing our
 

00:00:03.280 --> 00:00:05.190 align:start position:0%
today we are continuing our
implementation<00:00:03.919><c> of</c><00:00:04.080><c> makemore</c>

00:00:05.190 --> 00:00:05.200 align:start position:0%
implementation of makemore
 

00:00:05.200 --> 00:00:06.869 align:start position:0%
implementation of makemore
now<00:00:05.440><c> in</c><00:00:05.520><c> the</c><00:00:05.680><c> last</c><00:00:05.920><c> lecture</c><00:00:06.240><c> we</c><00:00:06.400><c> implemented</c>

00:00:06.869 --> 00:00:06.879 align:start position:0%
now in the last lecture we implemented
 

00:00:06.879 --> 00:00:08.549 align:start position:0%
now in the last lecture we implemented
the<00:00:07.040><c> bigram</c><00:00:07.440><c> language</c><00:00:07.759><c> model</c><00:00:08.240><c> and</c><00:00:08.320><c> we</c>

00:00:08.549 --> 00:00:08.559 align:start position:0%
the bigram language model and we
 

00:00:08.559 --> 00:00:10.870 align:start position:0%
the bigram language model and we
implemented<00:00:08.960><c> it</c><00:00:09.040><c> both</c><00:00:09.360><c> using</c><00:00:09.840><c> counts</c><00:00:10.639><c> and</c>

00:00:10.870 --> 00:00:10.880 align:start position:0%
implemented it both using counts and
 

00:00:10.880 --> 00:00:12.870 align:start position:0%
implemented it both using counts and
also<00:00:11.200><c> using</c><00:00:11.519><c> a</c><00:00:11.599><c> super</c><00:00:11.840><c> simple</c><00:00:12.160><c> neural</c><00:00:12.400><c> network</c>

00:00:12.870 --> 00:00:12.880 align:start position:0%
also using a super simple neural network
 

00:00:12.880 --> 00:00:15.589 align:start position:0%
also using a super simple neural network
that<00:00:13.040><c> had</c><00:00:13.200><c> a</c><00:00:13.360><c> single</c><00:00:13.840><c> linear</c><00:00:14.240><c> layer</c>

00:00:15.589 --> 00:00:15.599 align:start position:0%
that had a single linear layer
 

00:00:15.599 --> 00:00:17.510 align:start position:0%
that had a single linear layer
now<00:00:16.320><c> this</c><00:00:16.560><c> is</c><00:00:16.640><c> the</c>

00:00:17.510 --> 00:00:17.520 align:start position:0%
now this is the
 

00:00:17.520 --> 00:00:19.269 align:start position:0%
now this is the
jupyter<00:00:17.840><c> notebook</c><00:00:18.320><c> that</c><00:00:18.400><c> we</c><00:00:18.560><c> built</c><00:00:18.880><c> out</c><00:00:19.039><c> last</c>

00:00:19.269 --> 00:00:19.279 align:start position:0%
jupyter notebook that we built out last
 

00:00:19.279 --> 00:00:20.390 align:start position:0%
jupyter notebook that we built out last
lecture

00:00:20.390 --> 00:00:20.400 align:start position:0%
lecture
 

00:00:20.400 --> 00:00:21.670 align:start position:0%
lecture
and<00:00:20.560><c> we</c><00:00:20.720><c> saw</c><00:00:20.880><c> that</c><00:00:20.960><c> the</c><00:00:21.039><c> way</c><00:00:21.199><c> we</c><00:00:21.359><c> approached</c>

00:00:21.670 --> 00:00:21.680 align:start position:0%
and we saw that the way we approached
 

00:00:21.680 --> 00:00:23.269 align:start position:0%
and we saw that the way we approached
this<00:00:21.920><c> is</c><00:00:22.000><c> that</c><00:00:22.160><c> we</c><00:00:22.320><c> looked</c><00:00:22.560><c> at</c><00:00:22.880><c> only</c><00:00:23.119><c> the</c>

00:00:23.269 --> 00:00:23.279 align:start position:0%
this is that we looked at only the
 

00:00:23.279 --> 00:00:24.870 align:start position:0%
this is that we looked at only the
single<00:00:23.519><c> previous</c><00:00:23.920><c> character</c><00:00:24.560><c> and</c><00:00:24.720><c> we</c>

00:00:24.870 --> 00:00:24.880 align:start position:0%
single previous character and we
 

00:00:24.880 --> 00:00:26.470 align:start position:0%
single previous character and we
predicted<00:00:25.359><c> the</c><00:00:25.439><c> distribution</c><00:00:26.160><c> for</c><00:00:26.320><c> the</c>

00:00:26.470 --> 00:00:26.480 align:start position:0%
predicted the distribution for the
 

00:00:26.480 --> 00:00:28.230 align:start position:0%
predicted the distribution for the
character<00:00:27.119><c> that</c><00:00:27.279><c> would</c><00:00:27.439><c> go</c><00:00:27.680><c> next</c><00:00:28.000><c> in</c><00:00:28.160><c> the</c>

00:00:28.230 --> 00:00:28.240 align:start position:0%
character that would go next in the
 

00:00:28.240 --> 00:00:30.310 align:start position:0%
character that would go next in the
sequence<00:00:29.119><c> and</c><00:00:29.199><c> we</c><00:00:29.359><c> did</c><00:00:29.519><c> that</c><00:00:29.760><c> by</c><00:00:29.920><c> taking</c>

00:00:30.310 --> 00:00:30.320 align:start position:0%
sequence and we did that by taking
 

00:00:30.320 --> 00:00:32.229 align:start position:0%
sequence and we did that by taking
counts<00:00:30.880><c> and</c><00:00:31.039><c> normalizing</c><00:00:31.599><c> them</c><00:00:32.000><c> into</c>

00:00:32.229 --> 00:00:32.239 align:start position:0%
counts and normalizing them into
 

00:00:32.239 --> 00:00:33.670 align:start position:0%
counts and normalizing them into
probabilities

00:00:33.670 --> 00:00:33.680 align:start position:0%
probabilities
 

00:00:33.680 --> 00:00:36.709 align:start position:0%
probabilities
so<00:00:33.840><c> that</c><00:00:34.399><c> each</c><00:00:34.719><c> row</c><00:00:34.960><c> here</c><00:00:35.120><c> sums</c><00:00:35.360><c> to</c><00:00:35.520><c> one</c>

00:00:36.709 --> 00:00:36.719 align:start position:0%
so that each row here sums to one
 

00:00:36.719 --> 00:00:38.549 align:start position:0%
so that each row here sums to one
now<00:00:37.040><c> this</c><00:00:37.280><c> is</c><00:00:37.440><c> all</c><00:00:37.600><c> well</c><00:00:37.840><c> and</c><00:00:37.920><c> good</c><00:00:38.239><c> if</c><00:00:38.399><c> you</c>

00:00:38.549 --> 00:00:38.559 align:start position:0%
now this is all well and good if you
 

00:00:38.559 --> 00:00:40.389 align:start position:0%
now this is all well and good if you
only<00:00:38.800><c> have</c><00:00:39.280><c> one</c><00:00:39.520><c> character</c><00:00:39.920><c> of</c><00:00:40.079><c> previous</c>

00:00:40.389 --> 00:00:40.399 align:start position:0%
only have one character of previous
 

00:00:40.399 --> 00:00:41.510 align:start position:0%
only have one character of previous
context

00:00:41.510 --> 00:00:41.520 align:start position:0%
context
 

00:00:41.520 --> 00:00:43.830 align:start position:0%
context
and<00:00:41.840><c> this</c><00:00:42.000><c> works</c><00:00:42.320><c> and</c><00:00:42.399><c> it's</c><00:00:42.719><c> approachable</c><00:00:43.680><c> the</c>

00:00:43.830 --> 00:00:43.840 align:start position:0%
and this works and it's approachable the
 

00:00:43.840 --> 00:00:45.270 align:start position:0%
and this works and it's approachable the
problem<00:00:44.160><c> with</c><00:00:44.239><c> this</c><00:00:44.399><c> model</c><00:00:44.719><c> of</c><00:00:44.800><c> course</c><00:00:45.120><c> is</c>

00:00:45.270 --> 00:00:45.280 align:start position:0%
problem with this model of course is
 

00:00:45.280 --> 00:00:46.790 align:start position:0%
problem with this model of course is
that

00:00:46.790 --> 00:00:46.800 align:start position:0%
that
 

00:00:46.800 --> 00:00:48.310 align:start position:0%
that
the<00:00:47.039><c> predictions</c><00:00:47.520><c> from</c><00:00:47.600><c> this</c><00:00:47.760><c> model</c><00:00:48.000><c> are</c><00:00:48.079><c> not</c>

00:00:48.310 --> 00:00:48.320 align:start position:0%
the predictions from this model are not
 

00:00:48.320 --> 00:00:50.069 align:start position:0%
the predictions from this model are not
very<00:00:48.480><c> good</c><00:00:48.879><c> because</c><00:00:49.120><c> you</c><00:00:49.280><c> only</c><00:00:49.520><c> take</c><00:00:49.840><c> one</c>

00:00:50.069 --> 00:00:50.079 align:start position:0%
very good because you only take one
 

00:00:50.079 --> 00:00:52.790 align:start position:0%
very good because you only take one
character<00:00:50.480><c> of</c><00:00:50.640><c> context</c><00:00:51.520><c> so</c><00:00:52.160><c> the</c><00:00:52.239><c> model</c><00:00:52.559><c> didn't</c>

00:00:52.790 --> 00:00:52.800 align:start position:0%
character of context so the model didn't
 

00:00:52.800 --> 00:00:56.069 align:start position:0%
character of context so the model didn't
produce<00:00:53.280><c> very</c><00:00:53.520><c> name</c><00:00:53.760><c> like</c><00:00:54.000><c> sounding</c><00:00:54.399><c> things</c>

00:00:56.069 --> 00:00:56.079 align:start position:0%
produce very name like sounding things
 

00:00:56.079 --> 00:00:57.910 align:start position:0%
produce very name like sounding things
now<00:00:56.800><c> the</c><00:00:56.960><c> problem</c><00:00:57.199><c> with</c><00:00:57.360><c> this</c><00:00:57.520><c> approach</c>

00:00:57.910 --> 00:00:57.920 align:start position:0%
now the problem with this approach
 

00:00:57.920 --> 00:00:59.910 align:start position:0%
now the problem with this approach
though<00:00:58.399><c> is</c><00:00:58.559><c> that</c><00:00:58.800><c> if</c><00:00:58.960><c> we</c><00:00:59.199><c> are</c><00:00:59.280><c> to</c><00:00:59.440><c> take</c><00:00:59.680><c> more</c>

00:00:59.910 --> 00:00:59.920 align:start position:0%
though is that if we are to take more
 

00:00:59.920 --> 00:01:01.830 align:start position:0%
though is that if we are to take more
context<00:01:00.399><c> into</c><00:01:00.719><c> account</c><00:01:01.199><c> when</c><00:01:01.359><c> predicting</c><00:01:01.760><c> the</c>

00:01:01.830 --> 00:01:01.840 align:start position:0%
context into account when predicting the
 

00:01:01.840 --> 00:01:03.670 align:start position:0%
context into account when predicting the
next<00:01:02.079><c> character</c><00:01:02.399><c> in</c><00:01:02.559><c> a</c><00:01:02.640><c> sequence</c><00:01:03.359><c> things</c>

00:01:03.670 --> 00:01:03.680 align:start position:0%
next character in a sequence things
 

00:01:03.680 --> 00:01:06.070 align:start position:0%
next character in a sequence things
quickly<00:01:04.000><c> blow</c><00:01:04.320><c> up</c><00:01:04.640><c> and</c><00:01:04.799><c> this</c><00:01:05.040><c> table</c><00:01:05.600><c> the</c><00:01:05.840><c> size</c>

00:01:06.070 --> 00:01:06.080 align:start position:0%
quickly blow up and this table the size
 

00:01:06.080 --> 00:01:08.310 align:start position:0%
quickly blow up and this table the size
of<00:01:06.159><c> this</c><00:01:06.320><c> table</c><00:01:06.799><c> grows</c><00:01:07.439><c> and</c><00:01:07.600><c> in</c><00:01:07.760><c> fact</c><00:01:07.920><c> it</c><00:01:08.080><c> grows</c>

00:01:08.310 --> 00:01:08.320 align:start position:0%
of this table grows and in fact it grows
 

00:01:08.320 --> 00:01:09.990 align:start position:0%
of this table grows and in fact it grows
exponentially<00:01:09.200><c> with</c><00:01:09.360><c> the</c><00:01:09.520><c> length</c><00:01:09.760><c> of</c><00:01:09.840><c> the</c>

00:01:09.990 --> 00:01:10.000 align:start position:0%
exponentially with the length of the
 

00:01:10.000 --> 00:01:11.109 align:start position:0%
exponentially with the length of the
context

00:01:11.109 --> 00:01:11.119 align:start position:0%
context
 

00:01:11.119 --> 00:01:12.230 align:start position:0%
context
because<00:01:11.360><c> if</c><00:01:11.520><c> we</c><00:01:11.600><c> only</c><00:01:11.760><c> take</c><00:01:11.920><c> a</c><00:01:12.000><c> single</c>

00:01:12.230 --> 00:01:12.240 align:start position:0%
because if we only take a single
 

00:01:12.240 --> 00:01:13.910 align:start position:0%
because if we only take a single
character<00:01:12.640><c> at</c><00:01:12.720><c> a</c><00:01:12.799><c> time</c><00:01:13.119><c> that's</c><00:01:13.360><c> 27</c>

00:01:13.910 --> 00:01:13.920 align:start position:0%
character at a time that's 27
 

00:01:13.920 --> 00:01:15.830 align:start position:0%
character at a time that's 27
possibilities<00:01:14.640><c> of</c><00:01:14.720><c> context</c>

00:01:15.830 --> 00:01:15.840 align:start position:0%
possibilities of context
 

00:01:15.840 --> 00:01:17.749 align:start position:0%
possibilities of context
but<00:01:16.080><c> if</c><00:01:16.159><c> we</c><00:01:16.240><c> take</c><00:01:16.479><c> two</c><00:01:16.720><c> characters</c><00:01:17.520><c> in</c><00:01:17.680><c> the</c>

00:01:17.749 --> 00:01:17.759 align:start position:0%
but if we take two characters in the
 

00:01:17.759 --> 00:01:19.749 align:start position:0%
but if we take two characters in the
past<00:01:18.080><c> and</c><00:01:18.159><c> try</c><00:01:18.320><c> to</c><00:01:18.400><c> predict</c><00:01:18.720><c> the</c><00:01:18.799><c> third</c><00:01:19.040><c> one</c>

00:01:19.749 --> 00:01:19.759 align:start position:0%
past and try to predict the third one
 

00:01:19.759 --> 00:01:21.590 align:start position:0%
past and try to predict the third one
suddenly<00:01:20.240><c> the</c><00:01:20.400><c> number</c><00:01:20.640><c> of</c><00:01:20.799><c> rows</c><00:01:21.360><c> in</c><00:01:21.439><c> this</c>

00:01:21.590 --> 00:01:21.600 align:start position:0%
suddenly the number of rows in this
 

00:01:21.600 --> 00:01:23.749 align:start position:0%
suddenly the number of rows in this
matrix<00:01:22.320><c> you</c><00:01:22.400><c> can</c><00:01:22.560><c> look</c><00:01:22.720><c> at</c><00:01:22.799><c> it</c><00:01:22.880><c> that</c><00:01:23.040><c> way</c>

00:01:23.749 --> 00:01:23.759 align:start position:0%
matrix you can look at it that way
 

00:01:23.759 --> 00:01:26.630 align:start position:0%
matrix you can look at it that way
is<00:01:23.920><c> 27</c><00:01:24.400><c> times</c><00:01:24.640><c> 27</c><00:01:25.200><c> so</c><00:01:25.360><c> there's</c><00:01:25.600><c> 729</c>

00:01:26.630 --> 00:01:26.640 align:start position:0%
is 27 times 27 so there's 729
 

00:01:26.640 --> 00:01:28.710 align:start position:0%
is 27 times 27 so there's 729
possibilities<00:01:27.280><c> for</c><00:01:27.439><c> what</c><00:01:27.600><c> could</c><00:01:27.759><c> have</c><00:01:27.920><c> come</c>

00:01:28.710 --> 00:01:28.720 align:start position:0%
possibilities for what could have come
 

00:01:28.720 --> 00:01:30.149 align:start position:0%
possibilities for what could have come
in<00:01:28.799><c> the</c><00:01:28.960><c> context</c>

00:01:30.149 --> 00:01:30.159 align:start position:0%
in the context
 

00:01:30.159 --> 00:01:31.749 align:start position:0%
in the context
if<00:01:30.400><c> we</c><00:01:30.560><c> take</c><00:01:30.799><c> three</c><00:01:31.040><c> characters</c><00:01:31.520><c> as</c><00:01:31.680><c> the</c>

00:01:31.749 --> 00:01:31.759 align:start position:0%
if we take three characters as the
 

00:01:31.759 --> 00:01:34.390 align:start position:0%
if we take three characters as the
context<00:01:32.560><c> suddenly</c><00:01:33.200><c> we</c><00:01:33.360><c> have</c>

00:01:34.390 --> 00:01:34.400 align:start position:0%
context suddenly we have
 

00:01:34.400 --> 00:01:37.510 align:start position:0%
context suddenly we have
20<00:01:34.799><c> 000</c><00:01:35.280><c> possibilities</c><00:01:36.159><c> of</c><00:01:36.320><c> context</c>

00:01:37.510 --> 00:01:37.520 align:start position:0%
20 000 possibilities of context
 

00:01:37.520 --> 00:01:40.069 align:start position:0%
20 000 possibilities of context
and<00:01:37.680><c> so</c><00:01:38.000><c> there's</c><00:01:38.159><c> just</c><00:01:38.400><c> way</c><00:01:38.640><c> too</c><00:01:38.799><c> many</c><00:01:39.200><c> rows</c><00:01:39.920><c> of</c>

00:01:40.069 --> 00:01:40.079 align:start position:0%
and so there's just way too many rows of
 

00:01:40.079 --> 00:01:43.749 align:start position:0%
and so there's just way too many rows of
this<00:01:40.479><c> matrix</c><00:01:41.280><c> it's</c><00:01:41.520><c> way</c><00:01:41.680><c> too</c><00:01:42.240><c> few</c><00:01:42.560><c> counts</c>

00:01:43.749 --> 00:01:43.759 align:start position:0%
this matrix it's way too few counts
 

00:01:43.759 --> 00:01:45.510 align:start position:0%
this matrix it's way too few counts
for<00:01:44.000><c> each</c><00:01:44.159><c> possibility</c><00:01:44.960><c> and</c><00:01:45.119><c> the</c><00:01:45.200><c> whole</c><00:01:45.360><c> thing</c>

00:01:45.510 --> 00:01:45.520 align:start position:0%
for each possibility and the whole thing
 

00:01:45.520 --> 00:01:47.350 align:start position:0%
for each possibility and the whole thing
just<00:01:45.600><c> kind</c><00:01:45.759><c> of</c><00:01:45.920><c> explodes</c><00:01:46.640><c> and</c><00:01:46.880><c> doesn't</c><00:01:47.119><c> work</c>

00:01:47.350 --> 00:01:47.360 align:start position:0%
just kind of explodes and doesn't work
 

00:01:47.360 --> 00:01:48.950 align:start position:0%
just kind of explodes and doesn't work
very<00:01:47.520><c> well</c>

00:01:48.950 --> 00:01:48.960 align:start position:0%
very well
 

00:01:48.960 --> 00:01:50.469 align:start position:0%
very well
so<00:01:49.119><c> that's</c><00:01:49.280><c> why</c><00:01:49.520><c> today</c><00:01:49.759><c> we're</c><00:01:49.920><c> going</c><00:01:50.079><c> to</c><00:01:50.159><c> move</c>

00:01:50.469 --> 00:01:50.479 align:start position:0%
so that's why today we're going to move
 

00:01:50.479 --> 00:01:52.389 align:start position:0%
so that's why today we're going to move
on<00:01:50.720><c> to</c><00:01:50.880><c> this</c><00:01:51.119><c> bullet</c><00:01:51.439><c> point</c><00:01:51.680><c> here</c><00:01:52.079><c> and</c><00:01:52.240><c> we're</c>

00:01:52.389 --> 00:01:52.399 align:start position:0%
on to this bullet point here and we're
 

00:01:52.399 --> 00:01:53.749 align:start position:0%
on to this bullet point here and we're
going<00:01:52.479><c> to</c><00:01:52.640><c> implement</c><00:01:53.040><c> a</c><00:01:53.119><c> multi-layer</c>

00:01:53.749 --> 00:01:53.759 align:start position:0%
going to implement a multi-layer
 

00:01:53.759 --> 00:01:56.710 align:start position:0%
going to implement a multi-layer
perceptron<00:01:54.479><c> model</c><00:01:54.960><c> to</c><00:01:55.040><c> predict</c><00:01:55.600><c> the</c><00:01:55.840><c> next</c><00:01:56.479><c> uh</c>

00:01:56.710 --> 00:01:56.720 align:start position:0%
perceptron model to predict the next uh
 

00:01:56.720 --> 00:01:58.230 align:start position:0%
perceptron model to predict the next uh
character<00:01:57.040><c> in</c><00:01:57.200><c> a</c><00:01:57.280><c> sequence</c>

00:01:58.230 --> 00:01:58.240 align:start position:0%
character in a sequence
 

00:01:58.240 --> 00:02:00.069 align:start position:0%
character in a sequence
and<00:01:58.640><c> this</c><00:01:59.200><c> modeling</c><00:01:59.520><c> approach</c><00:01:59.840><c> that</c><00:01:59.920><c> we're</c>

00:02:00.069 --> 00:02:00.079 align:start position:0%
and this modeling approach that we're
 

00:02:00.079 --> 00:02:01.830 align:start position:0%
and this modeling approach that we're
going<00:02:00.159><c> to</c><00:02:00.320><c> adopt</c><00:02:00.719><c> follows</c><00:02:01.040><c> this</c><00:02:01.200><c> paper</c>

00:02:01.830 --> 00:02:01.840 align:start position:0%
going to adopt follows this paper
 

00:02:01.840 --> 00:02:04.310 align:start position:0%
going to adopt follows this paper
benguetal<00:02:02.479><c> 2003</c>

00:02:04.310 --> 00:02:04.320 align:start position:0%
benguetal 2003
 

00:02:04.320 --> 00:02:06.389 align:start position:0%
benguetal 2003
so<00:02:04.479><c> i</c><00:02:04.560><c> have</c><00:02:04.719><c> the</c><00:02:04.799><c> paper</c><00:02:05.040><c> pulled</c><00:02:05.280><c> up</c><00:02:05.439><c> here</c>

00:02:06.389 --> 00:02:06.399 align:start position:0%
so i have the paper pulled up here
 

00:02:06.399 --> 00:02:08.070 align:start position:0%
so i have the paper pulled up here
now<00:02:06.640><c> this</c><00:02:06.799><c> isn't</c><00:02:07.119><c> the</c><00:02:07.200><c> very</c><00:02:07.360><c> first</c><00:02:07.600><c> paper</c><00:02:07.920><c> that</c>

00:02:08.070 --> 00:02:08.080 align:start position:0%
now this isn't the very first paper that
 

00:02:08.080 --> 00:02:09.990 align:start position:0%
now this isn't the very first paper that
proposed<00:02:08.640><c> the</c><00:02:08.800><c> use</c><00:02:09.039><c> of</c><00:02:09.599><c> multiglio</c>

00:02:09.990 --> 00:02:10.000 align:start position:0%
proposed the use of multiglio
 

00:02:10.000 --> 00:02:11.589 align:start position:0%
proposed the use of multiglio
perceptrons<00:02:10.640><c> or</c><00:02:10.720><c> neural</c><00:02:11.039><c> networks</c><00:02:11.440><c> to</c>

00:02:11.589 --> 00:02:11.599 align:start position:0%
perceptrons or neural networks to
 

00:02:11.599 --> 00:02:13.670 align:start position:0%
perceptrons or neural networks to
predict<00:02:12.000><c> the</c><00:02:12.160><c> next</c><00:02:12.400><c> character</c><00:02:12.879><c> or</c><00:02:13.040><c> token</c><00:02:13.440><c> in</c><00:02:13.599><c> a</c>

00:02:13.670 --> 00:02:13.680 align:start position:0%
predict the next character or token in a
 

00:02:13.680 --> 00:02:15.830 align:start position:0%
predict the next character or token in a
sequence<00:02:14.480><c> but</c><00:02:14.720><c> it's</c><00:02:14.800><c> definitely</c><00:02:15.120><c> one</c><00:02:15.360><c> that</c><00:02:15.520><c> is</c>

00:02:15.830 --> 00:02:15.840 align:start position:0%
sequence but it's definitely one that is
 

00:02:15.840 --> 00:02:17.990 align:start position:0%
sequence but it's definitely one that is
uh<00:02:16.239><c> was</c><00:02:16.400><c> very</c><00:02:16.640><c> influential</c><00:02:17.120><c> around</c><00:02:17.360><c> that</c><00:02:17.599><c> time</c>

00:02:17.990 --> 00:02:18.000 align:start position:0%
uh was very influential around that time
 

00:02:18.000 --> 00:02:19.990 align:start position:0%
uh was very influential around that time
it<00:02:18.160><c> is</c><00:02:18.239><c> very</c><00:02:18.480><c> often</c><00:02:18.800><c> cited</c><00:02:19.360><c> to</c><00:02:19.520><c> stand</c><00:02:19.760><c> in</c><00:02:19.840><c> for</c>

00:02:19.990 --> 00:02:20.000 align:start position:0%
it is very often cited to stand in for
 

00:02:20.000 --> 00:02:21.990 align:start position:0%
it is very often cited to stand in for
this<00:02:20.160><c> idea</c><00:02:20.800><c> and</c><00:02:21.040><c> i</c><00:02:21.120><c> think</c><00:02:21.280><c> it's</c><00:02:21.440><c> a</c><00:02:21.520><c> very</c><00:02:21.680><c> nice</c>

00:02:21.990 --> 00:02:22.000 align:start position:0%
this idea and i think it's a very nice
 

00:02:22.000 --> 00:02:23.750 align:start position:0%
this idea and i think it's a very nice
write-up<00:02:22.480><c> and</c><00:02:22.640><c> so</c><00:02:22.800><c> this</c><00:02:22.959><c> is</c><00:02:23.040><c> the</c><00:02:23.360><c> paper</c><00:02:23.680><c> that</c>

00:02:23.750 --> 00:02:23.760 align:start position:0%
write-up and so this is the paper that
 

00:02:23.760 --> 00:02:25.830 align:start position:0%
write-up and so this is the paper that
we're<00:02:23.920><c> going</c><00:02:24.080><c> to</c><00:02:24.319><c> first</c><00:02:24.720><c> look</c><00:02:24.959><c> at</c><00:02:25.280><c> and</c><00:02:25.440><c> then</c>

00:02:25.830 --> 00:02:25.840 align:start position:0%
we're going to first look at and then
 

00:02:25.840 --> 00:02:28.390 align:start position:0%
we're going to first look at and then
implement<00:02:26.640><c> now</c><00:02:26.879><c> this</c><00:02:27.040><c> paper</c><00:02:27.280><c> has</c><00:02:27.440><c> 19</c><00:02:27.840><c> pages</c><00:02:28.239><c> so</c>

00:02:28.390 --> 00:02:28.400 align:start position:0%
implement now this paper has 19 pages so
 

00:02:28.400 --> 00:02:30.150 align:start position:0%
implement now this paper has 19 pages so
we<00:02:28.560><c> don't</c><00:02:28.720><c> have</c><00:02:28.879><c> time</c><00:02:29.040><c> to</c><00:02:29.200><c> go</c><00:02:29.360><c> into</c>

00:02:30.150 --> 00:02:30.160 align:start position:0%
we don't have time to go into
 

00:02:30.160 --> 00:02:31.670 align:start position:0%
we don't have time to go into
the<00:02:30.319><c> full</c><00:02:30.560><c> detail</c><00:02:30.879><c> of</c><00:02:30.959><c> this</c><00:02:31.120><c> paper</c><00:02:31.440><c> but</c><00:02:31.599><c> i</c>

00:02:31.670 --> 00:02:31.680 align:start position:0%
the full detail of this paper but i
 

00:02:31.680 --> 00:02:33.190 align:start position:0%
the full detail of this paper but i
invite<00:02:31.920><c> you</c><00:02:32.080><c> to</c><00:02:32.239><c> read</c><00:02:32.480><c> it</c>

00:02:33.190 --> 00:02:33.200 align:start position:0%
invite you to read it
 

00:02:33.200 --> 00:02:34.630 align:start position:0%
invite you to read it
it's<00:02:33.440><c> very</c><00:02:33.599><c> readable</c><00:02:34.000><c> interesting</c><00:02:34.400><c> and</c><00:02:34.480><c> has</c><00:02:34.640><c> a</c>

00:02:34.630 --> 00:02:34.640 align:start position:0%
it's very readable interesting and has a
 

00:02:34.640 --> 00:02:37.030 align:start position:0%
it's very readable interesting and has a
lot<00:02:34.800><c> of</c><00:02:34.879><c> interesting</c><00:02:35.200><c> ideas</c><00:02:35.599><c> in</c><00:02:35.680><c> it</c><00:02:35.840><c> as</c><00:02:36.000><c> well</c>

00:02:37.030 --> 00:02:37.040 align:start position:0%
lot of interesting ideas in it as well
 

00:02:37.040 --> 00:02:38.390 align:start position:0%
lot of interesting ideas in it as well
in<00:02:37.200><c> the</c><00:02:37.280><c> introduction</c><00:02:37.760><c> they</c><00:02:37.920><c> describe</c><00:02:38.239><c> the</c>

00:02:38.390 --> 00:02:38.400 align:start position:0%
in the introduction they describe the
 

00:02:38.400 --> 00:02:40.550 align:start position:0%
in the introduction they describe the
exact<00:02:38.640><c> same</c><00:02:38.800><c> problem</c><00:02:39.200><c> i</c><00:02:39.280><c> just</c><00:02:39.440><c> described</c><00:02:40.480><c> and</c>

00:02:40.550 --> 00:02:40.560 align:start position:0%
exact same problem i just described and
 

00:02:40.560 --> 00:02:42.309 align:start position:0%
exact same problem i just described and
then<00:02:40.800><c> to</c><00:02:40.959><c> address</c><00:02:41.360><c> it</c><00:02:41.680><c> they</c><00:02:41.840><c> propose</c><00:02:42.239><c> the</c>

00:02:42.309 --> 00:02:42.319 align:start position:0%
then to address it they propose the
 

00:02:42.319 --> 00:02:43.910 align:start position:0%
then to address it they propose the
following<00:02:42.720><c> model</c>

00:02:43.910 --> 00:02:43.920 align:start position:0%
following model
 

00:02:43.920 --> 00:02:46.550 align:start position:0%
following model
now<00:02:44.160><c> keep</c><00:02:44.400><c> in</c><00:02:44.480><c> mind</c><00:02:44.959><c> that</c><00:02:45.519><c> we</c><00:02:45.760><c> are</c><00:02:46.080><c> building</c><00:02:46.480><c> a</c>

00:02:46.550 --> 00:02:46.560 align:start position:0%
now keep in mind that we are building a
 

00:02:46.560 --> 00:02:48.150 align:start position:0%
now keep in mind that we are building a
character<00:02:46.959><c> level</c><00:02:47.200><c> language</c><00:02:47.440><c> model</c><00:02:47.840><c> so</c><00:02:48.000><c> we're</c>

00:02:48.150 --> 00:02:48.160 align:start position:0%
character level language model so we're
 

00:02:48.160 --> 00:02:50.070 align:start position:0%
character level language model so we're
working<00:02:48.400><c> on</c><00:02:48.560><c> the</c><00:02:48.640><c> level</c><00:02:48.879><c> of</c><00:02:49.040><c> characters</c><00:02:50.000><c> in</c>

00:02:50.070 --> 00:02:50.080 align:start position:0%
working on the level of characters in
 

00:02:50.080 --> 00:02:52.630 align:start position:0%
working on the level of characters in
this<00:02:50.319><c> paper</c><00:02:50.800><c> they</c><00:02:51.040><c> have</c><00:02:51.120><c> a</c><00:02:51.200><c> vocabulary</c><00:02:51.920><c> of</c><00:02:52.080><c> 17</c>

00:02:52.630 --> 00:02:52.640 align:start position:0%
this paper they have a vocabulary of 17
 

00:02:52.640 --> 00:02:54.790 align:start position:0%
this paper they have a vocabulary of 17
000<00:02:52.959><c> possible</c><00:02:53.440><c> words</c><00:02:54.080><c> and</c><00:02:54.239><c> they</c><00:02:54.400><c> instead</c>

00:02:54.790 --> 00:02:54.800 align:start position:0%
000 possible words and they instead
 

00:02:54.800 --> 00:02:56.949 align:start position:0%
000 possible words and they instead
build<00:02:55.120><c> a</c><00:02:55.280><c> word</c><00:02:55.519><c> level</c><00:02:55.760><c> language</c><00:02:56.080><c> model</c><00:02:56.800><c> but</c>

00:02:56.949 --> 00:02:56.959 align:start position:0%
build a word level language model but
 

00:02:56.959 --> 00:02:58.070 align:start position:0%
build a word level language model but
we're<00:02:57.200><c> going</c><00:02:57.360><c> to</c><00:02:57.440><c> still</c><00:02:57.680><c> stick</c><00:02:57.840><c> with</c><00:02:58.000><c> the</c>

00:02:58.070 --> 00:02:58.080 align:start position:0%
we're going to still stick with the
 

00:02:58.080 --> 00:02:59.430 align:start position:0%
we're going to still stick with the
characters<00:02:58.640><c> but</c><00:02:58.800><c> we'll</c><00:02:58.959><c> take</c><00:02:59.120><c> the</c><00:02:59.200><c> same</c>

00:02:59.430 --> 00:02:59.440 align:start position:0%
characters but we'll take the same
 

00:02:59.440 --> 00:03:01.270 align:start position:0%
characters but we'll take the same
modeling<00:02:59.840><c> approach</c>

00:03:01.270 --> 00:03:01.280 align:start position:0%
modeling approach
 

00:03:01.280 --> 00:03:03.509 align:start position:0%
modeling approach
now<00:03:01.680><c> what</c><00:03:01.840><c> they</c><00:03:02.080><c> do</c><00:03:02.400><c> is</c><00:03:02.959><c> basically</c><00:03:03.360><c> they</c>

00:03:03.509 --> 00:03:03.519 align:start position:0%
now what they do is basically they
 

00:03:03.519 --> 00:03:05.270 align:start position:0%
now what they do is basically they
propose<00:03:03.760><c> to</c><00:03:03.920><c> take</c><00:03:04.159><c> every</c><00:03:04.319><c> one</c><00:03:04.480><c> of</c><00:03:04.560><c> these</c><00:03:04.800><c> words</c>

00:03:05.270 --> 00:03:05.280 align:start position:0%
propose to take every one of these words
 

00:03:05.280 --> 00:03:07.030 align:start position:0%
propose to take every one of these words
seventeen<00:03:05.680><c> thousand</c><00:03:06.080><c> words</c><00:03:06.720><c> and</c><00:03:06.879><c> they're</c>

00:03:07.030 --> 00:03:07.040 align:start position:0%
seventeen thousand words and they're
 

00:03:07.040 --> 00:03:10.070 align:start position:0%
seventeen thousand words and they're
going<00:03:07.200><c> to</c><00:03:07.360><c> associate</c><00:03:08.239><c> to</c><00:03:08.480><c> each</c><00:03:08.720><c> word</c><00:03:09.440><c> a</c><00:03:09.760><c> say</c>

00:03:10.070 --> 00:03:10.080 align:start position:0%
going to associate to each word a say
 

00:03:10.080 --> 00:03:12.710 align:start position:0%
going to associate to each word a say
thirty<00:03:10.400><c> dimensional</c><00:03:11.040><c> feature</c><00:03:11.360><c> vector</c>

00:03:12.710 --> 00:03:12.720 align:start position:0%
thirty dimensional feature vector
 

00:03:12.720 --> 00:03:15.110 align:start position:0%
thirty dimensional feature vector
so<00:03:13.200><c> every</c><00:03:13.519><c> word</c><00:03:14.080><c> is</c><00:03:14.239><c> now</c>

00:03:15.110 --> 00:03:15.120 align:start position:0%
so every word is now
 

00:03:15.120 --> 00:03:17.670 align:start position:0%
so every word is now
embedded<00:03:16.080><c> into</c><00:03:16.319><c> a</c><00:03:16.480><c> thirty</c><00:03:16.720><c> dimensional</c><00:03:17.280><c> space</c>

00:03:17.670 --> 00:03:17.680 align:start position:0%
embedded into a thirty dimensional space
 

00:03:17.680 --> 00:03:19.830 align:start position:0%
embedded into a thirty dimensional space
you<00:03:17.760><c> can</c><00:03:17.920><c> think</c><00:03:18.080><c> of</c><00:03:18.159><c> it</c><00:03:18.239><c> that</c><00:03:18.400><c> way</c><00:03:19.120><c> so</c><00:03:19.280><c> we</c><00:03:19.440><c> have</c>

00:03:19.830 --> 00:03:19.840 align:start position:0%
you can think of it that way so we have
 

00:03:19.840 --> 00:03:22.470 align:start position:0%
you can think of it that way so we have
17<00:03:20.400><c> 000</c><00:03:20.879><c> points</c><00:03:21.280><c> or</c><00:03:21.440><c> vectors</c><00:03:22.000><c> in</c><00:03:22.159><c> a</c><00:03:22.239><c> 30</c>

00:03:22.470 --> 00:03:22.480 align:start position:0%
17 000 points or vectors in a 30
 

00:03:22.480 --> 00:03:23.830 align:start position:0%
17 000 points or vectors in a 30
dimensional<00:03:22.959><c> space</c>

00:03:23.830 --> 00:03:23.840 align:start position:0%
dimensional space
 

00:03:23.840 --> 00:03:25.750 align:start position:0%
dimensional space
and<00:03:24.159><c> that's</c><00:03:24.480><c> um</c><00:03:24.959><c> you</c><00:03:25.040><c> might</c><00:03:25.280><c> imagine</c><00:03:25.599><c> that's</c>

00:03:25.750 --> 00:03:25.760 align:start position:0%
and that's um you might imagine that's
 

00:03:25.760 --> 00:03:27.190 align:start position:0%
and that's um you might imagine that's
very<00:03:26.000><c> crowded</c><00:03:26.319><c> that's</c><00:03:26.560><c> a</c><00:03:26.560><c> lot</c><00:03:26.720><c> of</c><00:03:26.800><c> points</c><00:03:27.040><c> for</c>

00:03:27.190 --> 00:03:27.200 align:start position:0%
very crowded that's a lot of points for
 

00:03:27.200 --> 00:03:28.869 align:start position:0%
very crowded that's a lot of points for
a<00:03:27.280><c> very</c><00:03:27.440><c> small</c><00:03:27.680><c> space</c>

00:03:28.869 --> 00:03:28.879 align:start position:0%
a very small space
 

00:03:28.879 --> 00:03:30.070 align:start position:0%
a very small space
now

00:03:30.070 --> 00:03:30.080 align:start position:0%
now
 

00:03:30.080 --> 00:03:31.190 align:start position:0%
now
in<00:03:30.159><c> the</c><00:03:30.239><c> beginning</c><00:03:30.640><c> these</c><00:03:30.799><c> words</c><00:03:31.040><c> are</c>

00:03:31.190 --> 00:03:31.200 align:start position:0%
in the beginning these words are
 

00:03:31.200 --> 00:03:32.630 align:start position:0%
in the beginning these words are
initialized<00:03:31.599><c> completely</c><00:03:32.000><c> randomly</c><00:03:32.480><c> so</c>

00:03:32.630 --> 00:03:32.640 align:start position:0%
initialized completely randomly so
 

00:03:32.640 --> 00:03:34.710 align:start position:0%
initialized completely randomly so
they're<00:03:32.879><c> spread</c><00:03:33.200><c> out</c><00:03:33.360><c> at</c><00:03:33.519><c> random</c>

00:03:34.710 --> 00:03:34.720 align:start position:0%
they're spread out at random
 

00:03:34.720 --> 00:03:36.550 align:start position:0%
they're spread out at random
but<00:03:34.959><c> then</c><00:03:35.120><c> we're</c><00:03:35.360><c> going</c><00:03:35.519><c> to</c><00:03:35.680><c> tune</c><00:03:36.319><c> these</c>

00:03:36.550 --> 00:03:36.560 align:start position:0%
but then we're going to tune these
 

00:03:36.560 --> 00:03:38.550 align:start position:0%
but then we're going to tune these
embeddings<00:03:37.360><c> of</c><00:03:37.519><c> these</c><00:03:37.760><c> words</c><00:03:38.159><c> using</c><00:03:38.400><c> back</c>

00:03:38.550 --> 00:03:38.560 align:start position:0%
embeddings of these words using back
 

00:03:38.560 --> 00:03:39.670 align:start position:0%
embeddings of these words using back
propagation

00:03:39.670 --> 00:03:39.680 align:start position:0%
propagation
 

00:03:39.680 --> 00:03:41.190 align:start position:0%
propagation
so<00:03:39.920><c> during</c><00:03:40.159><c> the</c><00:03:40.239><c> course</c><00:03:40.480><c> of</c><00:03:40.640><c> training</c><00:03:40.959><c> of</c><00:03:41.040><c> this</c>

00:03:41.190 --> 00:03:41.200 align:start position:0%
so during the course of training of this
 

00:03:41.200 --> 00:03:43.190 align:start position:0%
so during the course of training of this
neural<00:03:41.440><c> network</c><00:03:42.000><c> these</c><00:03:42.239><c> points</c><00:03:42.640><c> or</c><00:03:42.720><c> vectors</c>

00:03:43.190 --> 00:03:43.200 align:start position:0%
neural network these points or vectors
 

00:03:43.200 --> 00:03:44.710 align:start position:0%
neural network these points or vectors
are<00:03:43.280><c> going</c><00:03:43.440><c> to</c><00:03:43.519><c> basically</c><00:03:43.920><c> move</c><00:03:44.159><c> around</c><00:03:44.640><c> in</c>

00:03:44.710 --> 00:03:44.720 align:start position:0%
are going to basically move around in
 

00:03:44.720 --> 00:03:46.630 align:start position:0%
are going to basically move around in
this<00:03:44.879><c> space</c><00:03:45.760><c> and</c><00:03:45.920><c> you</c><00:03:46.000><c> might</c><00:03:46.239><c> imagine</c><00:03:46.480><c> that</c>

00:03:46.630 --> 00:03:46.640 align:start position:0%
this space and you might imagine that
 

00:03:46.640 --> 00:03:48.869 align:start position:0%
this space and you might imagine that
for<00:03:46.799><c> example</c><00:03:47.200><c> words</c><00:03:47.680><c> that</c><00:03:48.080><c> have</c><00:03:48.319><c> very</c><00:03:48.560><c> similar</c>

00:03:48.869 --> 00:03:48.879 align:start position:0%
for example words that have very similar
 

00:03:48.879 --> 00:03:50.949 align:start position:0%
for example words that have very similar
meanings<00:03:49.360><c> or</c><00:03:49.599><c> that</c><00:03:49.920><c> are</c><00:03:50.080><c> indeed</c><00:03:50.400><c> synonyms</c><00:03:50.879><c> of</c>

00:03:50.949 --> 00:03:50.959 align:start position:0%
meanings or that are indeed synonyms of
 

00:03:50.959 --> 00:03:52.470 align:start position:0%
meanings or that are indeed synonyms of
each<00:03:51.200><c> other</c><00:03:51.519><c> might</c><00:03:51.840><c> end</c><00:03:52.000><c> up</c><00:03:52.080><c> in</c><00:03:52.239><c> a</c><00:03:52.319><c> very</c>

00:03:52.470 --> 00:03:52.480 align:start position:0%
each other might end up in a very
 

00:03:52.480 --> 00:03:54.789 align:start position:0%
each other might end up in a very
similar<00:03:52.879><c> part</c><00:03:53.120><c> of</c><00:03:53.200><c> the</c><00:03:53.280><c> space</c><00:03:54.080><c> and</c><00:03:54.239><c> conversely</c>

00:03:54.789 --> 00:03:54.799 align:start position:0%
similar part of the space and conversely
 

00:03:54.799 --> 00:03:56.390 align:start position:0%
similar part of the space and conversely
words<00:03:55.040><c> that</c><00:03:55.200><c> mean</c><00:03:55.440><c> very</c><00:03:55.599><c> different</c><00:03:55.920><c> things</c>

00:03:56.390 --> 00:03:56.400 align:start position:0%
words that mean very different things
 

00:03:56.400 --> 00:03:59.270 align:start position:0%
words that mean very different things
would<00:03:56.720><c> go</c><00:03:56.879><c> somewhere</c><00:03:57.200><c> else</c><00:03:57.360><c> in</c><00:03:57.519><c> a</c><00:03:57.599><c> space</c>

00:03:59.270 --> 00:03:59.280 align:start position:0%
would go somewhere else in a space
 

00:03:59.280 --> 00:04:01.190 align:start position:0%
would go somewhere else in a space
now<00:03:59.519><c> their</c><00:03:59.760><c> modeling</c><00:04:00.159><c> approach</c><00:04:00.480><c> otherwise</c><00:04:01.040><c> is</c>

00:04:01.190 --> 00:04:01.200 align:start position:0%
now their modeling approach otherwise is
 

00:04:01.200 --> 00:04:03.350 align:start position:0%
now their modeling approach otherwise is
identical<00:04:01.680><c> to</c><00:04:01.920><c> ours</c><00:04:02.560><c> they</c><00:04:02.799><c> are</c><00:04:02.879><c> using</c><00:04:03.200><c> a</c>

00:04:03.350 --> 00:04:03.360 align:start position:0%
identical to ours they are using a
 

00:04:03.360 --> 00:04:04.789 align:start position:0%
identical to ours they are using a
multi-layer<00:04:03.840><c> neural</c><00:04:04.080><c> network</c><00:04:04.400><c> to</c><00:04:04.560><c> predict</c>

00:04:04.789 --> 00:04:04.799 align:start position:0%
multi-layer neural network to predict
 

00:04:04.799 --> 00:04:07.270 align:start position:0%
multi-layer neural network to predict
the<00:04:04.879><c> next</c><00:04:05.200><c> word</c><00:04:05.680><c> given</c><00:04:05.920><c> the</c><00:04:06.000><c> previous</c><00:04:06.400><c> words</c>

00:04:07.270 --> 00:04:07.280 align:start position:0%
the next word given the previous words
 

00:04:07.280 --> 00:04:08.949 align:start position:0%
the next word given the previous words
and<00:04:07.680><c> to</c><00:04:07.840><c> train</c><00:04:08.080><c> the</c><00:04:08.159><c> neural</c><00:04:08.400><c> network</c><00:04:08.720><c> they</c><00:04:08.879><c> are</c>

00:04:08.949 --> 00:04:08.959 align:start position:0%
and to train the neural network they are
 

00:04:08.959 --> 00:04:10.630 align:start position:0%
and to train the neural network they are
maximizing<00:04:09.519><c> the</c><00:04:09.599><c> log</c><00:04:09.840><c> likelihood</c><00:04:10.400><c> of</c><00:04:10.560><c> the</c>

00:04:10.630 --> 00:04:10.640 align:start position:0%
maximizing the log likelihood of the
 

00:04:10.640 --> 00:04:12.789 align:start position:0%
maximizing the log likelihood of the
training<00:04:10.959><c> data</c><00:04:11.439><c> just</c><00:04:11.599><c> like</c><00:04:11.760><c> we</c><00:04:11.920><c> did</c>

00:04:12.789 --> 00:04:12.799 align:start position:0%
training data just like we did
 

00:04:12.799 --> 00:04:14.710 align:start position:0%
training data just like we did
so<00:04:12.959><c> the</c><00:04:13.120><c> modeling</c><00:04:13.519><c> approach</c><00:04:14.080><c> itself</c><00:04:14.560><c> is</c>

00:04:14.710 --> 00:04:14.720 align:start position:0%
so the modeling approach itself is
 

00:04:14.720 --> 00:04:16.710 align:start position:0%
so the modeling approach itself is
identical<00:04:15.599><c> now</c><00:04:15.760><c> here</c><00:04:16.000><c> they</c><00:04:16.160><c> have</c><00:04:16.239><c> a</c><00:04:16.320><c> concrete</c>

00:04:16.710 --> 00:04:16.720 align:start position:0%
identical now here they have a concrete
 

00:04:16.720 --> 00:04:18.789 align:start position:0%
identical now here they have a concrete
example<00:04:16.959><c> of</c><00:04:17.040><c> this</c><00:04:17.199><c> intuition</c>

00:04:18.789 --> 00:04:18.799 align:start position:0%
example of this intuition
 

00:04:18.799 --> 00:04:20.229 align:start position:0%
example of this intuition
why<00:04:18.959><c> does</c><00:04:19.120><c> it</c><00:04:19.280><c> work</c>

00:04:20.229 --> 00:04:20.239 align:start position:0%
why does it work
 

00:04:20.239 --> 00:04:21.830 align:start position:0%
why does it work
basically<00:04:20.720><c> suppose</c><00:04:21.120><c> that</c><00:04:21.280><c> for</c><00:04:21.440><c> example</c><00:04:21.680><c> you</c>

00:04:21.830 --> 00:04:21.840 align:start position:0%
basically suppose that for example you
 

00:04:21.840 --> 00:04:23.749 align:start position:0%
basically suppose that for example you
are<00:04:21.919><c> trying</c><00:04:22.079><c> to</c><00:04:22.240><c> predict</c><00:04:22.720><c> a</c><00:04:22.880><c> dog</c><00:04:23.120><c> was</c><00:04:23.360><c> running</c>

00:04:23.749 --> 00:04:23.759 align:start position:0%
are trying to predict a dog was running
 

00:04:23.759 --> 00:04:25.590 align:start position:0%
are trying to predict a dog was running
in<00:04:23.919><c> a</c><00:04:24.400><c> blank</c>

00:04:25.590 --> 00:04:25.600 align:start position:0%
in a blank
 

00:04:25.600 --> 00:04:28.070 align:start position:0%
in a blank
now<00:04:25.759><c> suppose</c><00:04:26.160><c> that</c><00:04:26.560><c> the</c><00:04:26.720><c> exact</c><00:04:27.199><c> phrase</c><00:04:27.680><c> a</c><00:04:27.840><c> dog</c>

00:04:28.070 --> 00:04:28.080 align:start position:0%
now suppose that the exact phrase a dog
 

00:04:28.080 --> 00:04:29.590 align:start position:0%
now suppose that the exact phrase a dog
was<00:04:28.320><c> running</c><00:04:28.720><c> in</c><00:04:28.880><c> a</c>

00:04:29.590 --> 00:04:29.600 align:start position:0%
was running in a
 

00:04:29.600 --> 00:04:31.749 align:start position:0%
was running in a
has<00:04:29.840><c> never</c><00:04:30.160><c> occurred</c><00:04:30.479><c> in</c><00:04:30.639><c> a</c><00:04:30.720><c> training</c><00:04:30.960><c> data</c>

00:04:31.749 --> 00:04:31.759 align:start position:0%
has never occurred in a training data
 

00:04:31.759 --> 00:04:33.909 align:start position:0%
has never occurred in a training data
and<00:04:31.919><c> here</c><00:04:32.080><c> you</c><00:04:32.400><c> are</c><00:04:32.639><c> at</c><00:04:33.120><c> sort</c><00:04:33.280><c> of</c><00:04:33.440><c> test</c><00:04:33.680><c> time</c>

00:04:33.909 --> 00:04:33.919 align:start position:0%
and here you are at sort of test time
 

00:04:33.919 --> 00:04:35.350 align:start position:0%
and here you are at sort of test time
later<00:04:34.320><c> when</c><00:04:34.479><c> the</c><00:04:34.560><c> model</c><00:04:34.880><c> is</c><00:04:35.040><c> deployed</c>

00:04:35.350 --> 00:04:35.360 align:start position:0%
later when the model is deployed
 

00:04:35.360 --> 00:04:36.310 align:start position:0%
later when the model is deployed
somewhere

00:04:36.310 --> 00:04:36.320 align:start position:0%
somewhere
 

00:04:36.320 --> 00:04:38.469 align:start position:0%
somewhere
and<00:04:36.479><c> it's</c><00:04:36.720><c> trying</c><00:04:36.880><c> to</c><00:04:37.280><c> make</c><00:04:37.520><c> a</c><00:04:37.600><c> sentence</c><00:04:38.400><c> and</c>

00:04:38.469 --> 00:04:38.479 align:start position:0%
and it's trying to make a sentence and
 

00:04:38.479 --> 00:04:41.350 align:start position:0%
and it's trying to make a sentence and
it's<00:04:38.639><c> saying</c><00:04:38.880><c> a</c><00:04:39.040><c> dog</c><00:04:39.280><c> was</c><00:04:39.440><c> running</c><00:04:39.759><c> in</c><00:04:40.000><c> a</c><00:04:40.400><c> blank</c>

00:04:41.350 --> 00:04:41.360 align:start position:0%
it's saying a dog was running in a blank
 

00:04:41.360 --> 00:04:43.030 align:start position:0%
it's saying a dog was running in a blank
and<00:04:41.520><c> because</c><00:04:41.840><c> it's</c><00:04:42.000><c> never</c><00:04:42.320><c> encountered</c><00:04:42.800><c> this</c>

00:04:43.030 --> 00:04:43.040 align:start position:0%
and because it's never encountered this
 

00:04:43.040 --> 00:04:45.350 align:start position:0%
and because it's never encountered this
exact<00:04:43.520><c> phrase</c><00:04:44.000><c> in</c><00:04:44.080><c> the</c><00:04:44.240><c> training</c><00:04:44.560><c> set</c><00:04:45.120><c> you're</c>

00:04:45.350 --> 00:04:45.360 align:start position:0%
exact phrase in the training set you're
 

00:04:45.360 --> 00:04:47.670 align:start position:0%
exact phrase in the training set you're
out<00:04:45.600><c> of</c><00:04:45.680><c> distribution</c><00:04:46.560><c> as</c><00:04:46.639><c> we</c><00:04:46.880><c> say</c><00:04:47.360><c> like</c><00:04:47.520><c> you</c>

00:04:47.670 --> 00:04:47.680 align:start position:0%
out of distribution as we say like you
 

00:04:47.680 --> 00:04:49.590 align:start position:0%
out of distribution as we say like you
don't<00:04:47.840><c> have</c><00:04:48.000><c> fundamentally</c><00:04:48.639><c> any</c>

00:04:49.590 --> 00:04:49.600 align:start position:0%
don't have fundamentally any
 

00:04:49.600 --> 00:04:52.230 align:start position:0%
don't have fundamentally any
reason<00:04:49.840><c> to</c><00:04:50.000><c> suspect</c>

00:04:52.230 --> 00:04:52.240 align:start position:0%
reason to suspect
 

00:04:52.240 --> 00:04:53.990 align:start position:0%
reason to suspect
what<00:04:52.479><c> might</c><00:04:52.720><c> come</c><00:04:52.960><c> next</c>

00:04:53.990 --> 00:04:54.000 align:start position:0%
what might come next
 

00:04:54.000 --> 00:04:55.749 align:start position:0%
what might come next
but<00:04:54.479><c> this</c><00:04:54.720><c> approach</c><00:04:55.120><c> actually</c><00:04:55.360><c> allows</c><00:04:55.600><c> you</c><00:04:55.680><c> to</c>

00:04:55.749 --> 00:04:55.759 align:start position:0%
but this approach actually allows you to
 

00:04:55.759 --> 00:04:57.510 align:start position:0%
but this approach actually allows you to
get<00:04:55.919><c> around</c><00:04:56.240><c> that</c><00:04:56.720><c> because</c><00:04:56.960><c> maybe</c><00:04:57.199><c> you</c><00:04:57.280><c> didn't</c>

00:04:57.510 --> 00:04:57.520 align:start position:0%
get around that because maybe you didn't
 

00:04:57.520 --> 00:04:59.270 align:start position:0%
get around that because maybe you didn't
see<00:04:57.680><c> the</c><00:04:57.840><c> exact</c><00:04:58.240><c> phrase</c><00:04:58.560><c> a</c><00:04:58.639><c> dog</c><00:04:58.880><c> was</c><00:04:59.040><c> running</c>

00:04:59.270 --> 00:04:59.280 align:start position:0%
see the exact phrase a dog was running
 

00:04:59.280 --> 00:05:01.350 align:start position:0%
see the exact phrase a dog was running
in<00:04:59.440><c> a</c><00:04:59.840><c> something</c><00:05:00.560><c> but</c><00:05:00.720><c> maybe</c><00:05:00.960><c> you've</c><00:05:01.120><c> seen</c>

00:05:01.350 --> 00:05:01.360 align:start position:0%
in a something but maybe you've seen
 

00:05:01.360 --> 00:05:03.030 align:start position:0%
in a something but maybe you've seen
similar<00:05:01.680><c> phrases</c><00:05:02.320><c> maybe</c><00:05:02.560><c> you've</c><00:05:02.720><c> seen</c><00:05:02.960><c> the</c>

00:05:03.030 --> 00:05:03.040 align:start position:0%
similar phrases maybe you've seen the
 

00:05:03.040 --> 00:05:06.150 align:start position:0%
similar phrases maybe you've seen the
phrase<00:05:03.600><c> the</c><00:05:03.759><c> dog</c><00:05:04.080><c> was</c><00:05:04.240><c> running</c><00:05:04.560><c> in</c><00:05:04.720><c> a</c><00:05:05.280><c> blank</c>

00:05:06.150 --> 00:05:06.160 align:start position:0%
phrase the dog was running in a blank
 

00:05:06.160 --> 00:05:07.670 align:start position:0%
phrase the dog was running in a blank
and<00:05:06.320><c> maybe</c><00:05:06.639><c> your</c><00:05:06.720><c> network</c><00:05:07.039><c> has</c><00:05:07.199><c> learned</c><00:05:07.440><c> that</c>

00:05:07.670 --> 00:05:07.680 align:start position:0%
and maybe your network has learned that
 

00:05:07.680 --> 00:05:08.950 align:start position:0%
and maybe your network has learned that
a<00:05:08.000><c> and</c><00:05:08.160><c> the</c>

00:05:08.950 --> 00:05:08.960 align:start position:0%
a and the
 

00:05:08.960 --> 00:05:10.950 align:start position:0%
a and the
are<00:05:09.360><c> like</c><00:05:09.600><c> frequently</c><00:05:10.160><c> are</c><00:05:10.320><c> interchangeable</c>

00:05:10.950 --> 00:05:10.960 align:start position:0%
are like frequently are interchangeable
 

00:05:10.960 --> 00:05:13.189 align:start position:0%
are like frequently are interchangeable
with<00:05:11.120><c> each</c><00:05:11.360><c> other</c><00:05:11.759><c> and</c><00:05:11.840><c> so</c><00:05:12.000><c> maybe</c><00:05:12.320><c> it</c><00:05:12.479><c> took</c><00:05:12.800><c> the</c>

00:05:13.189 --> 00:05:13.199 align:start position:0%
with each other and so maybe it took the
 

00:05:13.199 --> 00:05:15.029 align:start position:0%
with each other and so maybe it took the
embedding<00:05:13.600><c> for</c><00:05:13.840><c> a</c><00:05:14.320><c> and</c><00:05:14.400><c> the</c><00:05:14.479><c> embedding</c><00:05:14.880><c> for</c>

00:05:15.029 --> 00:05:15.039 align:start position:0%
embedding for a and the embedding for
 

00:05:15.039 --> 00:05:17.029 align:start position:0%
embedding for a and the embedding for
the<00:05:15.520><c> and</c><00:05:15.680><c> it</c><00:05:15.840><c> actually</c><00:05:16.080><c> put</c><00:05:16.240><c> them</c><00:05:16.400><c> like</c><00:05:16.560><c> nearby</c>

00:05:17.029 --> 00:05:17.039 align:start position:0%
the and it actually put them like nearby
 

00:05:17.039 --> 00:05:18.870 align:start position:0%
the and it actually put them like nearby
each<00:05:17.199><c> other</c><00:05:17.360><c> in</c><00:05:17.440><c> the</c><00:05:17.600><c> space</c><00:05:18.320><c> and</c><00:05:18.479><c> so</c><00:05:18.639><c> you</c><00:05:18.720><c> can</c>

00:05:18.870 --> 00:05:18.880 align:start position:0%
each other in the space and so you can
 

00:05:18.880 --> 00:05:20.629 align:start position:0%
each other in the space and so you can
transfer<00:05:19.360><c> knowledge</c><00:05:20.080><c> through</c><00:05:20.320><c> that</c>

00:05:20.629 --> 00:05:20.639 align:start position:0%
transfer knowledge through that
 

00:05:20.639 --> 00:05:22.469 align:start position:0%
transfer knowledge through that
embedding<00:05:21.280><c> and</c><00:05:21.360><c> you</c><00:05:21.440><c> can</c><00:05:21.600><c> generalize</c><00:05:22.160><c> in</c><00:05:22.240><c> that</c>

00:05:22.469 --> 00:05:22.479 align:start position:0%
embedding and you can generalize in that
 

00:05:22.479 --> 00:05:23.270 align:start position:0%
embedding and you can generalize in that
way

00:05:23.270 --> 00:05:23.280 align:start position:0%
way
 

00:05:23.280 --> 00:05:25.029 align:start position:0%
way
similarly<00:05:23.919><c> the</c><00:05:24.080><c> network</c><00:05:24.320><c> could</c><00:05:24.560><c> know</c><00:05:24.720><c> that</c>

00:05:25.029 --> 00:05:25.039 align:start position:0%
similarly the network could know that
 

00:05:25.039 --> 00:05:26.950 align:start position:0%
similarly the network could know that
cats<00:05:25.360><c> and</c><00:05:25.520><c> dogs</c><00:05:25.840><c> are</c><00:05:26.080><c> animals</c><00:05:26.560><c> and</c><00:05:26.639><c> they</c>

00:05:26.950 --> 00:05:26.960 align:start position:0%
cats and dogs are animals and they
 

00:05:26.960 --> 00:05:28.629 align:start position:0%
cats and dogs are animals and they
co-occur<00:05:27.600><c> in</c><00:05:27.759><c> lots</c><00:05:28.000><c> of</c><00:05:28.080><c> very</c><00:05:28.240><c> similar</c>

00:05:28.629 --> 00:05:28.639 align:start position:0%
co-occur in lots of very similar
 

00:05:28.639 --> 00:05:30.710 align:start position:0%
co-occur in lots of very similar
contexts<00:05:29.600><c> and</c><00:05:29.759><c> so</c><00:05:30.080><c> even</c><00:05:30.240><c> though</c><00:05:30.400><c> you</c><00:05:30.479><c> haven't</c>

00:05:30.710 --> 00:05:30.720 align:start position:0%
contexts and so even though you haven't
 

00:05:30.720 --> 00:05:32.469 align:start position:0%
contexts and so even though you haven't
seen<00:05:30.880><c> this</c><00:05:31.120><c> exact</c><00:05:31.520><c> phrase</c>

00:05:32.469 --> 00:05:32.479 align:start position:0%
seen this exact phrase
 

00:05:32.479 --> 00:05:34.150 align:start position:0%
seen this exact phrase
or<00:05:32.639><c> if</c><00:05:32.800><c> you</c><00:05:32.880><c> haven't</c><00:05:33.120><c> seen</c><00:05:33.280><c> exactly</c><00:05:33.759><c> walking</c>

00:05:34.150 --> 00:05:34.160 align:start position:0%
or if you haven't seen exactly walking
 

00:05:34.160 --> 00:05:35.189 align:start position:0%
or if you haven't seen exactly walking
or<00:05:34.320><c> running</c>

00:05:35.189 --> 00:05:35.199 align:start position:0%
or running
 

00:05:35.199 --> 00:05:37.510 align:start position:0%
or running
you<00:05:35.360><c> can</c><00:05:36.080><c> through</c><00:05:36.320><c> the</c><00:05:36.479><c> embedding</c><00:05:36.880><c> space</c>

00:05:37.510 --> 00:05:37.520 align:start position:0%
you can through the embedding space
 

00:05:37.520 --> 00:05:39.110 align:start position:0%
you can through the embedding space
transfer<00:05:38.000><c> knowledge</c><00:05:38.720><c> and</c><00:05:38.800><c> you</c><00:05:38.960><c> can</c>

00:05:39.110 --> 00:05:39.120 align:start position:0%
transfer knowledge and you can
 

00:05:39.120 --> 00:05:42.070 align:start position:0%
transfer knowledge and you can
generalize<00:05:39.759><c> to</c><00:05:40.000><c> novel</c><00:05:40.800><c> scenarios</c>

00:05:42.070 --> 00:05:42.080 align:start position:0%
generalize to novel scenarios
 

00:05:42.080 --> 00:05:43.590 align:start position:0%
generalize to novel scenarios
so<00:05:42.240><c> let's</c><00:05:42.400><c> now</c><00:05:42.560><c> scroll</c><00:05:42.800><c> down</c><00:05:42.960><c> to</c><00:05:43.120><c> the</c><00:05:43.199><c> diagram</c>

00:05:43.590 --> 00:05:43.600 align:start position:0%
so let's now scroll down to the diagram
 

00:05:43.600 --> 00:05:44.950 align:start position:0%
so let's now scroll down to the diagram
of<00:05:43.680><c> the</c><00:05:43.759><c> neural</c><00:05:44.000><c> network</c>

00:05:44.950 --> 00:05:44.960 align:start position:0%
of the neural network
 

00:05:44.960 --> 00:05:47.350 align:start position:0%
of the neural network
they<00:05:45.120><c> have</c><00:05:45.199><c> a</c><00:05:45.280><c> nice</c><00:05:45.680><c> diagram</c><00:05:46.160><c> here</c>

00:05:47.350 --> 00:05:47.360 align:start position:0%
they have a nice diagram here
 

00:05:47.360 --> 00:05:49.909 align:start position:0%
they have a nice diagram here
and<00:05:47.600><c> in</c><00:05:47.759><c> this</c><00:05:48.000><c> example</c><00:05:48.639><c> we</c><00:05:48.880><c> are</c><00:05:48.960><c> taking</c><00:05:49.600><c> three</c>

00:05:49.909 --> 00:05:49.919 align:start position:0%
and in this example we are taking three
 

00:05:49.919 --> 00:05:51.749 align:start position:0%
and in this example we are taking three
previous<00:05:50.400><c> words</c>

00:05:51.749 --> 00:05:51.759 align:start position:0%
previous words
 

00:05:51.759 --> 00:05:53.189 align:start position:0%
previous words
and<00:05:51.840><c> we</c><00:05:52.000><c> are</c><00:05:52.080><c> trying</c><00:05:52.240><c> to</c><00:05:52.320><c> predict</c><00:05:52.639><c> the</c><00:05:52.800><c> fourth</c>

00:05:53.189 --> 00:05:53.199 align:start position:0%
and we are trying to predict the fourth
 

00:05:53.199 --> 00:05:53.990 align:start position:0%
and we are trying to predict the fourth
word

00:05:53.990 --> 00:05:54.000 align:start position:0%
word
 

00:05:54.000 --> 00:05:55.909 align:start position:0%
word
in<00:05:54.160><c> a</c><00:05:54.240><c> sequence</c>

00:05:55.909 --> 00:05:55.919 align:start position:0%
in a sequence
 

00:05:55.919 --> 00:05:57.670 align:start position:0%
in a sequence
now<00:05:56.080><c> these</c><00:05:56.320><c> three</c><00:05:56.560><c> previous</c><00:05:56.960><c> words</c><00:05:57.440><c> as</c><00:05:57.600><c> i</c>

00:05:57.670 --> 00:05:57.680 align:start position:0%
now these three previous words as i
 

00:05:57.680 --> 00:06:00.390 align:start position:0%
now these three previous words as i
mentioned<00:05:58.479><c> uh</c><00:05:58.720><c> we</c><00:05:58.880><c> have</c><00:05:58.960><c> a</c><00:05:59.039><c> vocabulary</c><00:05:59.680><c> of</c><00:05:59.840><c> 17</c>

00:06:00.390 --> 00:06:00.400 align:start position:0%
mentioned uh we have a vocabulary of 17
 

00:06:00.400 --> 00:06:02.870 align:start position:0%
mentioned uh we have a vocabulary of 17
000<00:06:01.039><c> um</c><00:06:01.520><c> possible</c><00:06:02.000><c> words</c>

00:06:02.870 --> 00:06:02.880 align:start position:0%
000 um possible words
 

00:06:02.880 --> 00:06:04.790 align:start position:0%
000 um possible words
so<00:06:03.039><c> every</c><00:06:03.280><c> one</c><00:06:03.440><c> of</c><00:06:03.600><c> these</c>

00:06:04.790 --> 00:06:04.800 align:start position:0%
so every one of these
 

00:06:04.800 --> 00:06:05.909 align:start position:0%
so every one of these
basically basically

00:06:05.909 --> 00:06:05.919 align:start position:0%
basically basically
 

00:06:05.919 --> 00:06:09.270 align:start position:0%
basically basically
are<00:06:06.080><c> the</c><00:06:06.240><c> index</c><00:06:06.880><c> of</c><00:06:07.039><c> the</c><00:06:07.759><c> incoming</c><00:06:08.160><c> word</c>

00:06:09.270 --> 00:06:09.280 align:start position:0%
are the index of the incoming word
 

00:06:09.280 --> 00:06:11.749 align:start position:0%
are the index of the incoming word
and<00:06:09.680><c> because</c><00:06:09.919><c> there</c><00:06:10.080><c> are</c><00:06:10.160><c> 17</c><00:06:10.560><c> 000</c><00:06:10.800><c> words</c><00:06:11.520><c> this</c>

00:06:11.749 --> 00:06:11.759 align:start position:0%
and because there are 17 000 words this
 

00:06:11.759 --> 00:06:17.189 align:start position:0%
and because there are 17 000 words this
is<00:06:12.000><c> an</c><00:06:12.160><c> integer</c><00:06:12.639><c> between</c><00:06:12.960><c> 0</c><00:06:13.520><c> and</c><00:06:13.840><c> 16999</c>

00:06:17.189 --> 00:06:17.199 align:start position:0%
 
 

00:06:17.199 --> 00:06:19.350 align:start position:0%
 
now<00:06:17.520><c> there's</c><00:06:17.840><c> also</c><00:06:18.080><c> a</c><00:06:18.240><c> lookup</c><00:06:18.560><c> table</c><00:06:19.120><c> that</c>

00:06:19.350 --> 00:06:19.360 align:start position:0%
now there's also a lookup table that
 

00:06:19.360 --> 00:06:20.870 align:start position:0%
now there's also a lookup table that
they<00:06:19.520><c> call</c><00:06:19.840><c> c</c>

00:06:20.870 --> 00:06:20.880 align:start position:0%
they call c
 

00:06:20.880 --> 00:06:23.350 align:start position:0%
they call c
this<00:06:21.039><c> lookup</c><00:06:21.360><c> table</c><00:06:21.680><c> is</c><00:06:21.840><c> a</c><00:06:21.919><c> matrix</c><00:06:22.479><c> that</c><00:06:22.720><c> is</c><00:06:22.800><c> 17</c>

00:06:23.350 --> 00:06:23.360 align:start position:0%
this lookup table is a matrix that is 17
 

00:06:23.360 --> 00:06:25.909 align:start position:0%
this lookup table is a matrix that is 17
000<00:06:23.840><c> by</c><00:06:24.319><c> say</c><00:06:24.639><c> 30.</c>

00:06:25.909 --> 00:06:25.919 align:start position:0%
000 by say 30.
 

00:06:25.919 --> 00:06:27.270 align:start position:0%
000 by say 30.
and<00:06:26.080><c> basically</c><00:06:26.400><c> what</c><00:06:26.560><c> we're</c><00:06:26.720><c> doing</c><00:06:26.880><c> here</c><00:06:27.120><c> is</c>

00:06:27.270 --> 00:06:27.280 align:start position:0%
and basically what we're doing here is
 

00:06:27.280 --> 00:06:29.590 align:start position:0%
and basically what we're doing here is
we're<00:06:27.440><c> treating</c><00:06:27.680><c> this</c><00:06:27.919><c> as</c><00:06:28.080><c> a</c><00:06:28.479><c> lookup</c><00:06:28.880><c> table</c>

00:06:29.590 --> 00:06:29.600 align:start position:0%
we're treating this as a lookup table
 

00:06:29.600 --> 00:06:31.670 align:start position:0%
we're treating this as a lookup table
and<00:06:29.759><c> so</c><00:06:29.919><c> every</c><00:06:30.240><c> index</c><00:06:30.880><c> is</c>

00:06:31.670 --> 00:06:31.680 align:start position:0%
and so every index is
 

00:06:31.680 --> 00:06:34.230 align:start position:0%
and so every index is
plucking<00:06:32.160><c> out</c><00:06:32.560><c> a</c><00:06:32.720><c> row</c><00:06:33.280><c> of</c><00:06:33.440><c> this</c><00:06:33.840><c> embedding</c>

00:06:34.230 --> 00:06:34.240 align:start position:0%
plucking out a row of this embedding
 

00:06:34.240 --> 00:06:35.270 align:start position:0%
plucking out a row of this embedding
matrix

00:06:35.270 --> 00:06:35.280 align:start position:0%
matrix
 

00:06:35.280 --> 00:06:37.430 align:start position:0%
matrix
so<00:06:35.440><c> that</c><00:06:35.840><c> each</c><00:06:36.080><c> index</c><00:06:36.400><c> is</c><00:06:36.560><c> converted</c><00:06:37.039><c> to</c><00:06:37.199><c> the</c>

00:06:37.430 --> 00:06:37.440 align:start position:0%
so that each index is converted to the
 

00:06:37.440 --> 00:06:39.749 align:start position:0%
so that each index is converted to the
30<00:06:37.759><c> dimensional</c><00:06:38.720><c> vector</c><00:06:39.199><c> that</c><00:06:39.360><c> corresponds</c>

00:06:39.749 --> 00:06:39.759 align:start position:0%
30 dimensional vector that corresponds
 

00:06:39.759 --> 00:06:42.870 align:start position:0%
30 dimensional vector that corresponds
to<00:06:39.919><c> the</c><00:06:40.000><c> embedding</c><00:06:40.400><c> vector</c><00:06:40.880><c> for</c><00:06:41.120><c> that</c><00:06:41.360><c> word</c>

00:06:42.870 --> 00:06:42.880 align:start position:0%
to the embedding vector for that word
 

00:06:42.880 --> 00:06:45.590 align:start position:0%
to the embedding vector for that word
so<00:06:43.199><c> here</c><00:06:43.360><c> we</c><00:06:43.520><c> have</c><00:06:43.680><c> the</c><00:06:43.840><c> input</c><00:06:44.160><c> layer</c><00:06:44.639><c> of</c><00:06:45.120><c> 30</c>

00:06:45.590 --> 00:06:45.600 align:start position:0%
so here we have the input layer of 30
 

00:06:45.600 --> 00:06:48.790 align:start position:0%
so here we have the input layer of 30
neurons<00:06:46.479><c> for</c><00:06:46.720><c> three</c><00:06:47.120><c> words</c><00:06:47.759><c> making</c><00:06:48.080><c> up</c><00:06:48.319><c> 90</c>

00:06:48.790 --> 00:06:48.800 align:start position:0%
neurons for three words making up 90
 

00:06:48.800 --> 00:06:50.629 align:start position:0%
neurons for three words making up 90
neurons<00:06:49.280><c> in</c><00:06:49.360><c> total</c>

00:06:50.629 --> 00:06:50.639 align:start position:0%
neurons in total
 

00:06:50.639 --> 00:06:52.150 align:start position:0%
neurons in total
and<00:06:50.880><c> here</c><00:06:51.039><c> they're</c><00:06:51.280><c> saying</c><00:06:51.440><c> that</c><00:06:51.520><c> this</c><00:06:51.759><c> matrix</c>

00:06:52.150 --> 00:06:52.160 align:start position:0%
and here they're saying that this matrix
 

00:06:52.160 --> 00:06:54.870 align:start position:0%
and here they're saying that this matrix
c<00:06:52.560><c> is</c><00:06:52.880><c> shared</c><00:06:53.520><c> across</c><00:06:53.919><c> all</c><00:06:54.000><c> the</c><00:06:54.160><c> words</c><00:06:54.720><c> so</c>

00:06:54.870 --> 00:06:54.880 align:start position:0%
c is shared across all the words so
 

00:06:54.880 --> 00:06:56.230 align:start position:0%
c is shared across all the words so
we're<00:06:55.039><c> always</c><00:06:55.360><c> indexing</c><00:06:55.759><c> into</c><00:06:55.919><c> the</c><00:06:56.080><c> same</c>

00:06:56.230 --> 00:06:56.240 align:start position:0%
we're always indexing into the same
 

00:06:56.240 --> 00:06:59.350 align:start position:0%
we're always indexing into the same
matrix<00:06:56.720><c> c</c><00:06:57.039><c> over</c><00:06:57.199><c> and</c><00:06:57.360><c> over</c><00:06:58.080><c> um</c>

00:06:59.350 --> 00:06:59.360 align:start position:0%
matrix c over and over um
 

00:06:59.360 --> 00:07:00.830 align:start position:0%
matrix c over and over um
for<00:06:59.599><c> each</c><00:06:59.759><c> one</c><00:06:59.919><c> of</c><00:07:00.000><c> these</c>

00:07:00.830 --> 00:07:00.840 align:start position:0%
for each one of these
 

00:07:00.840 --> 00:07:03.270 align:start position:0%
for each one of these
words<00:07:01.919><c> next</c><00:07:02.240><c> up</c><00:07:02.400><c> is</c><00:07:02.479><c> the</c><00:07:02.639><c> hidden</c><00:07:02.960><c> layer</c><00:07:03.199><c> of</c>

00:07:03.270 --> 00:07:03.280 align:start position:0%
words next up is the hidden layer of
 

00:07:03.280 --> 00:07:05.189 align:start position:0%
words next up is the hidden layer of
this<00:07:03.440><c> neural</c><00:07:03.680><c> network</c><00:07:04.560><c> the</c><00:07:04.720><c> size</c><00:07:04.960><c> of</c><00:07:05.039><c> this</c>

00:07:05.189 --> 00:07:05.199 align:start position:0%
this neural network the size of this
 

00:07:05.199 --> 00:07:07.670 align:start position:0%
this neural network the size of this
hidden<00:07:05.680><c> neural</c><00:07:06.479><c> layer</c><00:07:06.720><c> of</c><00:07:06.800><c> this</c><00:07:06.960><c> neural</c><00:07:07.280><c> net</c>

00:07:07.670 --> 00:07:07.680 align:start position:0%
hidden neural layer of this neural net
 

00:07:07.680 --> 00:07:09.830 align:start position:0%
hidden neural layer of this neural net
is<00:07:07.840><c> a</c><00:07:07.919><c> hoppy</c><00:07:08.240><c> parameter</c><00:07:09.199><c> so</c><00:07:09.360><c> we</c><00:07:09.440><c> use</c><00:07:09.599><c> the</c><00:07:09.680><c> word</c>

00:07:09.830 --> 00:07:09.840 align:start position:0%
is a hoppy parameter so we use the word
 

00:07:09.840 --> 00:07:11.189 align:start position:0%
is a hoppy parameter so we use the word
hyperparameter<00:07:10.560><c> when</c><00:07:10.720><c> it's</c><00:07:10.800><c> kind</c><00:07:10.880><c> of</c><00:07:10.960><c> like</c><00:07:11.120><c> a</c>

00:07:11.189 --> 00:07:11.199 align:start position:0%
hyperparameter when it's kind of like a
 

00:07:11.199 --> 00:07:12.790 align:start position:0%
hyperparameter when it's kind of like a
design<00:07:11.599><c> choice</c><00:07:11.919><c> up</c><00:07:12.000><c> to</c><00:07:12.160><c> the</c><00:07:12.240><c> designer</c><00:07:12.639><c> of</c><00:07:12.720><c> the</c>

00:07:12.790 --> 00:07:12.800 align:start position:0%
design choice up to the designer of the
 

00:07:12.800 --> 00:07:15.270 align:start position:0%
design choice up to the designer of the
neural<00:07:13.120><c> net</c><00:07:13.599><c> and</c><00:07:13.680><c> this</c><00:07:13.919><c> can</c><00:07:14.080><c> be</c><00:07:14.560><c> as</c><00:07:14.800><c> large</c><00:07:15.120><c> as</c>

00:07:15.270 --> 00:07:15.280 align:start position:0%
neural net and this can be as large as
 

00:07:15.280 --> 00:07:16.790 align:start position:0%
neural net and this can be as large as
you'd<00:07:15.440><c> like</c><00:07:15.680><c> or</c><00:07:15.840><c> as</c><00:07:15.919><c> small</c><00:07:16.160><c> as</c><00:07:16.319><c> you'd</c><00:07:16.400><c> like</c><00:07:16.639><c> so</c>

00:07:16.790 --> 00:07:16.800 align:start position:0%
you'd like or as small as you'd like so
 

00:07:16.800 --> 00:07:19.189 align:start position:0%
you'd like or as small as you'd like so
for<00:07:16.960><c> example</c><00:07:17.440><c> the</c><00:07:17.599><c> size</c><00:07:17.840><c> could</c><00:07:18.000><c> be</c><00:07:18.080><c> a</c><00:07:18.160><c> hundred</c>

00:07:19.189 --> 00:07:19.199 align:start position:0%
for example the size could be a hundred
 

00:07:19.199 --> 00:07:20.629 align:start position:0%
for example the size could be a hundred
and<00:07:19.360><c> we</c><00:07:19.520><c> are</c><00:07:19.599><c> going</c><00:07:19.759><c> to</c><00:07:19.840><c> go</c><00:07:20.000><c> over</c><00:07:20.240><c> multiple</c>

00:07:20.629 --> 00:07:20.639 align:start position:0%
and we are going to go over multiple
 

00:07:20.639 --> 00:07:23.189 align:start position:0%
and we are going to go over multiple
choices<00:07:21.280><c> of</c><00:07:21.680><c> the</c><00:07:21.840><c> size</c><00:07:22.080><c> of</c><00:07:22.240><c> this</c><00:07:22.479><c> hidden</c><00:07:22.800><c> layer</c>

00:07:23.189 --> 00:07:23.199 align:start position:0%
choices of the size of this hidden layer
 

00:07:23.199 --> 00:07:24.550 align:start position:0%
choices of the size of this hidden layer
and<00:07:23.360><c> we're</c><00:07:23.440><c> going</c><00:07:23.599><c> to</c><00:07:23.680><c> evaluate</c><00:07:24.160><c> how</c><00:07:24.319><c> well</c>

00:07:24.550 --> 00:07:24.560 align:start position:0%
and we're going to evaluate how well
 

00:07:24.560 --> 00:07:25.990 align:start position:0%
and we're going to evaluate how well
they<00:07:24.720><c> work</c>

00:07:25.990 --> 00:07:26.000 align:start position:0%
they work
 

00:07:26.000 --> 00:07:28.309 align:start position:0%
they work
so<00:07:26.240><c> say</c><00:07:26.400><c> there</c><00:07:26.560><c> were</c><00:07:26.639><c> 100</c><00:07:26.960><c> neurons</c><00:07:27.440><c> here</c><00:07:28.160><c> all</c>

00:07:28.309 --> 00:07:28.319 align:start position:0%
so say there were 100 neurons here all
 

00:07:28.319 --> 00:07:29.990 align:start position:0%
so say there were 100 neurons here all
of<00:07:28.400><c> them</c><00:07:28.560><c> would</c><00:07:28.720><c> be</c><00:07:28.800><c> fully</c><00:07:29.039><c> connected</c><00:07:29.599><c> to</c><00:07:29.759><c> the</c>

00:07:29.990 --> 00:07:30.000 align:start position:0%
of them would be fully connected to the
 

00:07:30.000 --> 00:07:32.950 align:start position:0%
of them would be fully connected to the
90<00:07:30.400><c> words</c><00:07:31.120><c> or</c><00:07:31.360><c> 90</c><00:07:31.840><c> um</c>

00:07:32.950 --> 00:07:32.960 align:start position:0%
90 words or 90 um
 

00:07:32.960 --> 00:07:35.749 align:start position:0%
90 words or 90 um
numbers<00:07:33.520><c> that</c><00:07:33.759><c> make</c><00:07:34.000><c> up</c><00:07:34.240><c> these</c><00:07:34.479><c> three</c><00:07:34.639><c> words</c>

00:07:35.749 --> 00:07:35.759 align:start position:0%
numbers that make up these three words
 

00:07:35.759 --> 00:07:37.830 align:start position:0%
numbers that make up these three words
so<00:07:35.919><c> this</c><00:07:36.080><c> is</c><00:07:36.240><c> a</c><00:07:36.319><c> fully</c><00:07:36.560><c> connected</c><00:07:36.960><c> layer</c>

00:07:37.830 --> 00:07:37.840 align:start position:0%
so this is a fully connected layer
 

00:07:37.840 --> 00:07:40.070 align:start position:0%
so this is a fully connected layer
then<00:07:38.080><c> there's</c><00:07:38.319><c> a</c><00:07:38.400><c> 10</c><00:07:38.639><c> inch</c><00:07:38.800><c> long</c><00:07:38.960><c> linearity</c>

00:07:40.070 --> 00:07:40.080 align:start position:0%
then there's a 10 inch long linearity
 

00:07:40.080 --> 00:07:42.070 align:start position:0%
then there's a 10 inch long linearity
and<00:07:40.160><c> then</c><00:07:40.319><c> there's</c><00:07:40.560><c> this</c><00:07:40.800><c> output</c><00:07:41.199><c> layer</c><00:07:41.919><c> and</c>

00:07:42.070 --> 00:07:42.080 align:start position:0%
and then there's this output layer and
 

00:07:42.080 --> 00:07:44.390 align:start position:0%
and then there's this output layer and
because<00:07:42.400><c> there</c><00:07:42.479><c> are</c><00:07:42.639><c> 17</c><00:07:43.280><c> 000</c><00:07:43.680><c> possible</c><00:07:44.160><c> words</c>

00:07:44.390 --> 00:07:44.400 align:start position:0%
because there are 17 000 possible words
 

00:07:44.400 --> 00:07:45.830 align:start position:0%
because there are 17 000 possible words
that<00:07:44.560><c> could</c><00:07:44.720><c> come</c><00:07:44.960><c> next</c>

00:07:45.830 --> 00:07:45.840 align:start position:0%
that could come next
 

00:07:45.840 --> 00:07:48.629 align:start position:0%
that could come next
this<00:07:46.080><c> layer</c><00:07:46.400><c> has</c><00:07:46.560><c> 17</c><00:07:47.199><c> 000</c><00:07:47.599><c> neurons</c>

00:07:48.629 --> 00:07:48.639 align:start position:0%
this layer has 17 000 neurons
 

00:07:48.639 --> 00:07:51.270 align:start position:0%
this layer has 17 000 neurons
and<00:07:48.880><c> all</c><00:07:48.960><c> of</c><00:07:49.039><c> them</c><00:07:49.199><c> are</c><00:07:49.360><c> fully</c><00:07:49.599><c> connected</c><00:07:50.479><c> to</c>

00:07:51.270 --> 00:07:51.280 align:start position:0%
and all of them are fully connected to
 

00:07:51.280 --> 00:07:54.710 align:start position:0%
and all of them are fully connected to
all<00:07:51.440><c> of</c><00:07:51.520><c> these</c><00:07:51.680><c> neurons</c><00:07:52.240><c> in</c><00:07:52.319><c> the</c><00:07:52.479><c> hidden</c><00:07:53.280><c> layer</c>

00:07:54.710 --> 00:07:54.720 align:start position:0%
all of these neurons in the hidden layer
 

00:07:54.720 --> 00:07:56.070 align:start position:0%
all of these neurons in the hidden layer
so<00:07:54.879><c> there's</c><00:07:55.120><c> a</c><00:07:55.199><c> lot</c><00:07:55.360><c> of</c><00:07:55.440><c> parameters</c><00:07:55.919><c> here</c>

00:07:56.070 --> 00:07:56.080 align:start position:0%
so there's a lot of parameters here
 

00:07:56.080 --> 00:07:58.550 align:start position:0%
so there's a lot of parameters here
because<00:07:56.240><c> there's</c><00:07:56.479><c> a</c><00:07:56.639><c> lot</c><00:07:56.800><c> of</c><00:07:57.280><c> words</c><00:07:58.160><c> so</c><00:07:58.400><c> most</c>

00:07:58.550 --> 00:07:58.560 align:start position:0%
because there's a lot of words so most
 

00:07:58.560 --> 00:07:59.830 align:start position:0%
because there's a lot of words so most
computation<00:07:59.120><c> is</c><00:07:59.199><c> here</c><00:07:59.440><c> this</c><00:07:59.680><c> is</c><00:07:59.759><c> the</c>

00:07:59.830 --> 00:07:59.840 align:start position:0%
computation is here this is the
 

00:07:59.840 --> 00:08:01.670 align:start position:0%
computation is here this is the
expensive<00:08:00.240><c> layer</c>

00:08:01.670 --> 00:08:01.680 align:start position:0%
expensive layer
 

00:08:01.680 --> 00:08:04.710 align:start position:0%
expensive layer
now<00:08:01.919><c> there</c><00:08:02.160><c> are</c><00:08:02.240><c> 17</c><00:08:02.800><c> 000</c><00:08:03.199><c> logits</c><00:08:03.680><c> here</c><00:08:04.479><c> so</c><00:08:04.639><c> on</c>

00:08:04.710 --> 00:08:04.720 align:start position:0%
now there are 17 000 logits here so on
 

00:08:04.720 --> 00:08:06.869 align:start position:0%
now there are 17 000 logits here so on
top<00:08:04.960><c> of</c><00:08:05.039><c> there</c><00:08:05.280><c> we</c><00:08:05.440><c> have</c><00:08:05.599><c> the</c><00:08:05.680><c> softmax</c><00:08:06.319><c> layer</c>

00:08:06.869 --> 00:08:06.879 align:start position:0%
top of there we have the softmax layer
 

00:08:06.879 --> 00:08:08.469 align:start position:0%
top of there we have the softmax layer
which<00:08:07.120><c> we've</c><00:08:07.440><c> seen</c><00:08:07.599><c> in</c><00:08:07.759><c> our</c><00:08:07.840><c> previous</c><00:08:08.240><c> video</c>

00:08:08.469 --> 00:08:08.479 align:start position:0%
which we've seen in our previous video
 

00:08:08.479 --> 00:08:10.830 align:start position:0%
which we've seen in our previous video
as<00:08:08.639><c> well</c><00:08:09.120><c> so</c><00:08:09.360><c> every</c><00:08:09.520><c> one</c><00:08:09.680><c> of</c><00:08:09.759><c> these</c><00:08:09.919><c> logits</c><00:08:10.479><c> is</c>

00:08:10.830 --> 00:08:10.840 align:start position:0%
as well so every one of these logits is
 

00:08:10.840 --> 00:08:12.710 align:start position:0%
as well so every one of these logits is
exponentiated<00:08:11.919><c> and</c><00:08:12.000><c> then</c><00:08:12.240><c> everything</c><00:08:12.560><c> is</c>

00:08:12.710 --> 00:08:12.720 align:start position:0%
exponentiated and then everything is
 

00:08:12.720 --> 00:08:15.110 align:start position:0%
exponentiated and then everything is
normalized<00:08:13.280><c> to</c><00:08:13.440><c> sum</c><00:08:13.680><c> to</c><00:08:13.840><c> 1</c><00:08:14.400><c> so</c><00:08:14.560><c> that</c><00:08:14.720><c> we</c><00:08:14.879><c> have</c><00:08:14.960><c> a</c>

00:08:15.110 --> 00:08:15.120 align:start position:0%
normalized to sum to 1 so that we have a
 

00:08:15.120 --> 00:08:17.270 align:start position:0%
normalized to sum to 1 so that we have a
nice<00:08:15.840><c> probability</c><00:08:16.400><c> distribution</c><00:08:16.960><c> for</c><00:08:17.120><c> the</c>

00:08:17.270 --> 00:08:17.280 align:start position:0%
nice probability distribution for the
 

00:08:17.280 --> 00:08:19.830 align:start position:0%
nice probability distribution for the
next<00:08:17.840><c> word</c><00:08:18.240><c> in</c><00:08:18.400><c> the</c><00:08:18.479><c> sequence</c>

00:08:19.830 --> 00:08:19.840 align:start position:0%
next word in the sequence
 

00:08:19.840 --> 00:08:21.430 align:start position:0%
next word in the sequence
now<00:08:20.160><c> of</c><00:08:20.240><c> course</c><00:08:20.400><c> during</c><00:08:20.720><c> training</c><00:08:21.199><c> we</c>

00:08:21.430 --> 00:08:21.440 align:start position:0%
now of course during training we
 

00:08:21.440 --> 00:08:22.950 align:start position:0%
now of course during training we
actually<00:08:21.680><c> have</c><00:08:21.840><c> the</c><00:08:22.000><c> label</c><00:08:22.560><c> we</c><00:08:22.720><c> have</c><00:08:22.800><c> the</c>

00:08:22.950 --> 00:08:22.960 align:start position:0%
actually have the label we have the
 

00:08:22.960 --> 00:08:25.670 align:start position:0%
actually have the label we have the
identity<00:08:23.440><c> of</c><00:08:23.599><c> the</c><00:08:23.759><c> next</c><00:08:24.000><c> word</c><00:08:24.160><c> in</c><00:08:24.319><c> a</c><00:08:24.400><c> sequence</c>

00:08:25.670 --> 00:08:25.680 align:start position:0%
identity of the next word in a sequence
 

00:08:25.680 --> 00:08:26.950 align:start position:0%
identity of the next word in a sequence
that<00:08:26.160><c> word</c>

00:08:26.950 --> 00:08:26.960 align:start position:0%
that word
 

00:08:26.960 --> 00:08:30.710 align:start position:0%
that word
or<00:08:27.280><c> its</c><00:08:27.520><c> index</c><00:08:28.319><c> is</c><00:08:28.479><c> used</c><00:08:29.199><c> to</c><00:08:29.520><c> pluck</c><00:08:29.919><c> out</c><00:08:30.560><c> the</c>

00:08:30.710 --> 00:08:30.720 align:start position:0%
or its index is used to pluck out the
 

00:08:30.720 --> 00:08:32.709 align:start position:0%
or its index is used to pluck out the
probability<00:08:31.280><c> of</c><00:08:31.520><c> that</c><00:08:31.680><c> word</c>

00:08:32.709 --> 00:08:32.719 align:start position:0%
probability of that word
 

00:08:32.719 --> 00:08:34.790 align:start position:0%
probability of that word
and<00:08:32.800><c> then</c><00:08:32.959><c> we</c><00:08:33.120><c> are</c><00:08:33.440><c> maximizing</c><00:08:34.640><c> the</c>

00:08:34.790 --> 00:08:34.800 align:start position:0%
and then we are maximizing the
 

00:08:34.800 --> 00:08:37.029 align:start position:0%
and then we are maximizing the
probability<00:08:35.360><c> of</c><00:08:35.440><c> that</c><00:08:35.599><c> word</c>

00:08:37.029 --> 00:08:37.039 align:start position:0%
probability of that word
 

00:08:37.039 --> 00:08:38.630 align:start position:0%
probability of that word
with<00:08:37.200><c> respect</c><00:08:37.599><c> to</c><00:08:37.839><c> the</c><00:08:38.000><c> parameters</c><00:08:38.479><c> of</c><00:08:38.560><c> this</c>

00:08:38.630 --> 00:08:38.640 align:start position:0%
with respect to the parameters of this
 

00:08:38.640 --> 00:08:39.750 align:start position:0%
with respect to the parameters of this
neural<00:08:38.959><c> net</c>

00:08:39.750 --> 00:08:39.760 align:start position:0%
neural net
 

00:08:39.760 --> 00:08:41.350 align:start position:0%
neural net
so<00:08:39.919><c> the</c><00:08:40.080><c> parameters</c><00:08:40.640><c> are</c><00:08:40.800><c> the</c><00:08:40.880><c> weights</c><00:08:41.279><c> and</c>

00:08:41.350 --> 00:08:41.360 align:start position:0%
so the parameters are the weights and
 

00:08:41.360 --> 00:08:44.070 align:start position:0%
so the parameters are the weights and
biases<00:08:42.080><c> of</c><00:08:42.640><c> this</c><00:08:42.959><c> output</c><00:08:43.279><c> layer</c>

00:08:44.070 --> 00:08:44.080 align:start position:0%
biases of this output layer
 

00:08:44.080 --> 00:08:45.829 align:start position:0%
biases of this output layer
the<00:08:44.240><c> weights</c><00:08:44.560><c> and</c><00:08:44.720><c> biases</c><00:08:45.279><c> of</c><00:08:45.360><c> the</c><00:08:45.519><c> hidden</c>

00:08:45.829 --> 00:08:45.839 align:start position:0%
the weights and biases of the hidden
 

00:08:45.839 --> 00:08:49.110 align:start position:0%
the weights and biases of the hidden
layer<00:08:46.560><c> and</c><00:08:47.040><c> the</c><00:08:47.279><c> embedding</c><00:08:47.680><c> lookup</c><00:08:48.000><c> table</c><00:08:48.480><c> c</c>

00:08:49.110 --> 00:08:49.120 align:start position:0%
layer and the embedding lookup table c
 

00:08:49.120 --> 00:08:50.790 align:start position:0%
layer and the embedding lookup table c
and<00:08:49.279><c> all</c><00:08:49.440><c> of</c><00:08:49.519><c> that</c><00:08:49.680><c> is</c><00:08:49.839><c> optimized</c><00:08:50.320><c> using</c><00:08:50.560><c> back</c>

00:08:50.790 --> 00:08:50.800 align:start position:0%
and all of that is optimized using back
 

00:08:50.800 --> 00:08:52.310 align:start position:0%
and all of that is optimized using back
propagation

00:08:52.310 --> 00:08:52.320 align:start position:0%
propagation
 

00:08:52.320 --> 00:08:55.269 align:start position:0%
propagation
and<00:08:52.720><c> these</c><00:08:53.120><c> uh</c><00:08:53.440><c> dashed</c><00:08:53.839><c> arrows</c><00:08:54.480><c> ignore</c><00:08:54.880><c> those</c>

00:08:55.269 --> 00:08:55.279 align:start position:0%
and these uh dashed arrows ignore those
 

00:08:55.279 --> 00:08:57.030 align:start position:0%
and these uh dashed arrows ignore those
uh<00:08:55.519><c> that</c><00:08:55.839><c> represents</c><00:08:56.320><c> a</c><00:08:56.399><c> variation</c><00:08:56.880><c> of</c><00:08:56.959><c> a</c>

00:08:57.030 --> 00:08:57.040 align:start position:0%
uh that represents a variation of a
 

00:08:57.040 --> 00:08:58.310 align:start position:0%
uh that represents a variation of a
neural<00:08:57.279><c> nut</c><00:08:57.519><c> that</c><00:08:57.680><c> we</c><00:08:57.839><c> are</c><00:08:57.920><c> not</c><00:08:58.080><c> going</c><00:08:58.240><c> to</c>

00:08:58.310 --> 00:08:58.320 align:start position:0%
neural nut that we are not going to
 

00:08:58.320 --> 00:08:59.829 align:start position:0%
neural nut that we are not going to
explore<00:08:58.640><c> in</c><00:08:58.720><c> this</c><00:08:58.880><c> video</c>

00:08:59.829 --> 00:08:59.839 align:start position:0%
explore in this video
 

00:08:59.839 --> 00:09:01.190 align:start position:0%
explore in this video
so<00:09:00.000><c> that's</c><00:09:00.240><c> the</c><00:09:00.320><c> setup</c><00:09:00.720><c> and</c><00:09:00.800><c> now</c><00:09:01.040><c> let's</c>

00:09:01.190 --> 00:09:01.200 align:start position:0%
so that's the setup and now let's
 

00:09:01.200 --> 00:09:02.470 align:start position:0%
so that's the setup and now let's
implement<00:09:01.600><c> it</c>

00:09:02.470 --> 00:09:02.480 align:start position:0%
implement it
 

00:09:02.480 --> 00:09:04.150 align:start position:0%
implement it
okay<00:09:02.720><c> so</c><00:09:02.800><c> i</c><00:09:02.959><c> started</c><00:09:03.279><c> a</c><00:09:03.360><c> brand</c><00:09:03.519><c> new</c><00:09:03.680><c> notebook</c>

00:09:04.150 --> 00:09:04.160 align:start position:0%
okay so i started a brand new notebook
 

00:09:04.160 --> 00:09:05.509 align:start position:0%
okay so i started a brand new notebook
for<00:09:04.320><c> this</c><00:09:04.560><c> lecture</c>

00:09:05.509 --> 00:09:05.519 align:start position:0%
for this lecture
 

00:09:05.519 --> 00:09:07.750 align:start position:0%
for this lecture
we<00:09:05.760><c> are</c><00:09:05.920><c> importing</c><00:09:06.480><c> pytorch</c><00:09:07.279><c> and</c><00:09:07.440><c> we</c><00:09:07.600><c> are</c>

00:09:07.750 --> 00:09:07.760 align:start position:0%
we are importing pytorch and we are
 

00:09:07.760 --> 00:09:09.430 align:start position:0%
we are importing pytorch and we are
importing<00:09:08.240><c> matplotlib</c><00:09:08.800><c> so</c><00:09:08.959><c> we</c><00:09:09.040><c> can</c><00:09:09.200><c> create</c>

00:09:09.430 --> 00:09:09.440 align:start position:0%
importing matplotlib so we can create
 

00:09:09.440 --> 00:09:10.710 align:start position:0%
importing matplotlib so we can create
figures

00:09:10.710 --> 00:09:10.720 align:start position:0%
figures
 

00:09:10.720 --> 00:09:13.110 align:start position:0%
figures
then<00:09:10.959><c> i</c><00:09:11.040><c> am</c><00:09:11.200><c> reading</c><00:09:11.519><c> all</c><00:09:11.680><c> the</c><00:09:11.920><c> names</c><00:09:12.480><c> into</c><00:09:12.880><c> a</c>

00:09:13.110 --> 00:09:13.120 align:start position:0%
then i am reading all the names into a
 

00:09:13.120 --> 00:09:15.190 align:start position:0%
then i am reading all the names into a
list<00:09:13.440><c> of</c><00:09:13.680><c> words</c><00:09:14.000><c> like</c><00:09:14.240><c> i</c><00:09:14.320><c> did</c><00:09:14.480><c> before</c><00:09:14.880><c> and</c><00:09:15.040><c> i'm</c>

00:09:15.190 --> 00:09:15.200 align:start position:0%
list of words like i did before and i'm
 

00:09:15.200 --> 00:09:18.070 align:start position:0%
list of words like i did before and i'm
showing<00:09:15.440><c> the</c><00:09:15.519><c> first</c><00:09:15.920><c> eight</c><00:09:16.640><c> right</c><00:09:16.800><c> here</c>

00:09:18.070 --> 00:09:18.080 align:start position:0%
showing the first eight right here
 

00:09:18.080 --> 00:09:20.310 align:start position:0%
showing the first eight right here
keep<00:09:18.240><c> in</c><00:09:18.399><c> mind</c><00:09:18.560><c> that</c><00:09:18.720><c> we</c><00:09:18.800><c> have</c><00:09:18.959><c> a</c><00:09:19.120><c> 32</c><00:09:19.600><c> 000</c><00:09:20.160><c> in</c>

00:09:20.310 --> 00:09:20.320 align:start position:0%
keep in mind that we have a 32 000 in
 

00:09:20.320 --> 00:09:22.790 align:start position:0%
keep in mind that we have a 32 000 in
total<00:09:20.959><c> these</c><00:09:21.200><c> are</c><00:09:21.279><c> just</c><00:09:21.440><c> the</c><00:09:21.519><c> first</c><00:09:21.760><c> eight</c>

00:09:22.790 --> 00:09:22.800 align:start position:0%
total these are just the first eight
 

00:09:22.800 --> 00:09:23.990 align:start position:0%
total these are just the first eight
and<00:09:22.959><c> then</c><00:09:23.120><c> here</c><00:09:23.360><c> i'm</c><00:09:23.440><c> building</c><00:09:23.760><c> out</c><00:09:23.839><c> the</c>

00:09:23.990 --> 00:09:24.000 align:start position:0%
and then here i'm building out the
 

00:09:24.000 --> 00:09:25.670 align:start position:0%
and then here i'm building out the
vocabulary<00:09:24.560><c> of</c><00:09:24.720><c> characters</c><00:09:25.200><c> and</c><00:09:25.360><c> all</c><00:09:25.519><c> the</c>

00:09:25.670 --> 00:09:25.680 align:start position:0%
vocabulary of characters and all the
 

00:09:25.680 --> 00:09:28.230 align:start position:0%
vocabulary of characters and all the
mappings<00:09:26.399><c> from</c><00:09:26.800><c> the</c><00:09:26.959><c> characters</c><00:09:27.519><c> as</c><00:09:27.760><c> strings</c>

00:09:28.230 --> 00:09:28.240 align:start position:0%
mappings from the characters as strings
 

00:09:28.240 --> 00:09:31.269 align:start position:0%
mappings from the characters as strings
to<00:09:28.480><c> integers</c><00:09:29.200><c> and</c><00:09:29.600><c> vice</c><00:09:29.839><c> versa</c>

00:09:31.269 --> 00:09:31.279 align:start position:0%
to integers and vice versa
 

00:09:31.279 --> 00:09:32.710 align:start position:0%
to integers and vice versa
now<00:09:31.440><c> the</c><00:09:31.519><c> first</c><00:09:31.680><c> thing</c><00:09:31.839><c> we</c><00:09:31.920><c> want</c><00:09:32.080><c> to</c><00:09:32.160><c> do</c><00:09:32.399><c> is</c><00:09:32.560><c> we</c>

00:09:32.710 --> 00:09:32.720 align:start position:0%
now the first thing we want to do is we
 

00:09:32.720 --> 00:09:34.310 align:start position:0%
now the first thing we want to do is we
want<00:09:32.880><c> to</c><00:09:33.040><c> compile</c><00:09:33.440><c> the</c><00:09:33.600><c> data</c><00:09:33.839><c> set</c><00:09:34.080><c> for</c><00:09:34.240><c> the</c>

00:09:34.310 --> 00:09:34.320 align:start position:0%
want to compile the data set for the
 

00:09:34.320 --> 00:09:35.509 align:start position:0%
want to compile the data set for the
neural<00:09:34.560><c> network</c>

00:09:35.509 --> 00:09:35.519 align:start position:0%
neural network
 

00:09:35.519 --> 00:09:37.829 align:start position:0%
neural network
and<00:09:35.760><c> i</c><00:09:35.839><c> had</c><00:09:36.000><c> to</c><00:09:36.160><c> rewrite</c><00:09:36.560><c> this</c><00:09:36.720><c> code</c><00:09:37.279><c> um</c><00:09:37.680><c> i'll</c>

00:09:37.829 --> 00:09:37.839 align:start position:0%
and i had to rewrite this code um i'll
 

00:09:37.839 --> 00:09:41.110 align:start position:0%
and i had to rewrite this code um i'll
show<00:09:38.000><c> you</c><00:09:38.080><c> in</c><00:09:38.240><c> a</c><00:09:38.320><c> second</c><00:09:38.560><c> what</c><00:09:38.720><c> it</c><00:09:38.800><c> looks</c><00:09:39.040><c> like</c>

00:09:41.110 --> 00:09:41.120 align:start position:0%
show you in a second what it looks like
 

00:09:41.120 --> 00:09:43.030 align:start position:0%
show you in a second what it looks like
so<00:09:41.279><c> this</c><00:09:41.360><c> is</c><00:09:41.440><c> the</c><00:09:41.519><c> code</c><00:09:41.680><c> that</c><00:09:41.839><c> i</c><00:09:42.240><c> created</c><00:09:42.720><c> for</c>

00:09:43.030 --> 00:09:43.040 align:start position:0%
so this is the code that i created for
 

00:09:43.040 --> 00:09:44.949 align:start position:0%
so this is the code that i created for
the<00:09:43.120><c> dataset</c><00:09:43.600><c> creation</c><00:09:44.000><c> so</c><00:09:44.160><c> let</c><00:09:44.320><c> me</c><00:09:44.399><c> first</c><00:09:44.720><c> run</c>

00:09:44.949 --> 00:09:44.959 align:start position:0%
the dataset creation so let me first run
 

00:09:44.959 --> 00:09:46.630 align:start position:0%
the dataset creation so let me first run
it<00:09:45.200><c> and</c><00:09:45.279><c> then</c><00:09:45.440><c> i'll</c><00:09:45.600><c> briefly</c><00:09:46.000><c> explain</c><00:09:46.480><c> how</c>

00:09:46.630 --> 00:09:46.640 align:start position:0%
it and then i'll briefly explain how
 

00:09:46.640 --> 00:09:48.470 align:start position:0%
it and then i'll briefly explain how
this<00:09:46.800><c> works</c>

00:09:48.470 --> 00:09:48.480 align:start position:0%
this works
 

00:09:48.480 --> 00:09:50.070 align:start position:0%
this works
so<00:09:48.800><c> first</c><00:09:49.040><c> we're</c><00:09:49.200><c> going</c><00:09:49.360><c> to</c><00:09:49.440><c> define</c><00:09:49.760><c> something</c>

00:09:50.070 --> 00:09:50.080 align:start position:0%
so first we're going to define something
 

00:09:50.080 --> 00:09:52.389 align:start position:0%
so first we're going to define something
called<00:09:50.320><c> block</c><00:09:50.640><c> size</c><00:09:51.279><c> and</c><00:09:51.440><c> this</c><00:09:51.600><c> is</c><00:09:51.760><c> basically</c>

00:09:52.389 --> 00:09:52.399 align:start position:0%
called block size and this is basically
 

00:09:52.399 --> 00:09:54.150 align:start position:0%
called block size and this is basically
the<00:09:52.880><c> context</c><00:09:53.360><c> length</c><00:09:53.680><c> of</c><00:09:53.839><c> how</c><00:09:54.000><c> many</c>

00:09:54.150 --> 00:09:54.160 align:start position:0%
the context length of how many
 

00:09:54.160 --> 00:09:55.990 align:start position:0%
the context length of how many
characters<00:09:54.640><c> do</c><00:09:54.800><c> we</c><00:09:54.959><c> take</c><00:09:55.279><c> to</c><00:09:55.440><c> predict</c><00:09:55.839><c> the</c>

00:09:55.990 --> 00:09:56.000 align:start position:0%
characters do we take to predict the
 

00:09:56.000 --> 00:09:57.990 align:start position:0%
characters do we take to predict the
next<00:09:56.240><c> one</c><00:09:56.959><c> so</c><00:09:57.120><c> here</c><00:09:57.279><c> in</c><00:09:57.360><c> this</c><00:09:57.519><c> example</c><00:09:57.839><c> we're</c>

00:09:57.990 --> 00:09:58.000 align:start position:0%
next one so here in this example we're
 

00:09:58.000 --> 00:09:59.910 align:start position:0%
next one so here in this example we're
taking<00:09:58.320><c> three</c><00:09:58.560><c> characters</c><00:09:59.279><c> to</c><00:09:59.440><c> predict</c><00:09:59.760><c> the</c>

00:09:59.910 --> 00:09:59.920 align:start position:0%
taking three characters to predict the
 

00:09:59.920 --> 00:10:01.990 align:start position:0%
taking three characters to predict the
fourth<00:10:00.160><c> one</c><00:10:00.720><c> so</c><00:10:00.959><c> we</c><00:10:01.120><c> have</c><00:10:01.200><c> a</c><00:10:01.279><c> block</c><00:10:01.600><c> size</c><00:10:01.839><c> of</c>

00:10:01.990 --> 00:10:02.000 align:start position:0%
fourth one so we have a block size of
 

00:10:02.000 --> 00:10:04.310 align:start position:0%
fourth one so we have a block size of
three<00:10:02.320><c> that's</c><00:10:02.560><c> the</c><00:10:02.720><c> size</c><00:10:02.959><c> of</c><00:10:03.040><c> the</c><00:10:03.200><c> block</c><00:10:04.000><c> that</c>

00:10:04.310 --> 00:10:04.320 align:start position:0%
three that's the size of the block that
 

00:10:04.320 --> 00:10:06.550 align:start position:0%
three that's the size of the block that
supports<00:10:04.720><c> the</c><00:10:04.880><c> prediction</c>

00:10:06.550 --> 00:10:06.560 align:start position:0%
supports the prediction
 

00:10:06.560 --> 00:10:09.910 align:start position:0%
supports the prediction
then<00:10:06.800><c> here</c><00:10:07.040><c> i'm</c><00:10:07.200><c> building</c><00:10:07.519><c> out</c><00:10:08.000><c> the</c><00:10:08.560><c> x</c><00:10:08.959><c> and</c><00:10:09.120><c> y</c>

00:10:09.910 --> 00:10:09.920 align:start position:0%
then here i'm building out the x and y
 

00:10:09.920 --> 00:10:12.389 align:start position:0%
then here i'm building out the x and y
the<00:10:10.160><c> x</c><00:10:10.560><c> are</c><00:10:10.720><c> the</c><00:10:10.959><c> input</c><00:10:11.360><c> to</c><00:10:11.440><c> the</c><00:10:11.600><c> neural</c><00:10:11.920><c> net</c>

00:10:12.389 --> 00:10:12.399 align:start position:0%
the x are the input to the neural net
 

00:10:12.399 --> 00:10:15.110 align:start position:0%
the x are the input to the neural net
and<00:10:12.560><c> the</c><00:10:12.720><c> y</c><00:10:13.120><c> are</c><00:10:13.279><c> the</c><00:10:13.440><c> labels</c><00:10:14.160><c> for</c><00:10:14.399><c> each</c>

00:10:15.110 --> 00:10:15.120 align:start position:0%
and the y are the labels for each
 

00:10:15.120 --> 00:10:17.509 align:start position:0%
and the y are the labels for each
example<00:10:15.760><c> inside</c><00:10:16.240><c> x</c>

00:10:17.509 --> 00:10:17.519 align:start position:0%
example inside x
 

00:10:17.519 --> 00:10:19.350 align:start position:0%
example inside x
then<00:10:17.680><c> i'm</c><00:10:17.839><c> airing</c><00:10:18.160><c> over</c><00:10:18.560><c> the</c><00:10:18.720><c> first</c><00:10:19.120><c> five</c>

00:10:19.350 --> 00:10:19.360 align:start position:0%
then i'm airing over the first five
 

00:10:19.360 --> 00:10:21.269 align:start position:0%
then i'm airing over the first five
words<00:10:19.839><c> i'm</c><00:10:20.000><c> doing</c><00:10:20.320><c> first</c><00:10:20.560><c> five</c><00:10:20.800><c> just</c><00:10:21.040><c> for</c>

00:10:21.269 --> 00:10:21.279 align:start position:0%
words i'm doing first five just for
 

00:10:21.279 --> 00:10:23.110 align:start position:0%
words i'm doing first five just for
efficiency<00:10:21.920><c> while</c><00:10:22.079><c> we</c><00:10:22.240><c> are</c><00:10:22.399><c> developing</c><00:10:23.040><c> all</c>

00:10:23.110 --> 00:10:23.120 align:start position:0%
efficiency while we are developing all
 

00:10:23.120 --> 00:10:24.870 align:start position:0%
efficiency while we are developing all
the<00:10:23.279><c> code</c><00:10:23.839><c> but</c><00:10:24.000><c> then</c><00:10:24.160><c> later</c><00:10:24.399><c> we're</c><00:10:24.640><c> going</c><00:10:24.800><c> to</c>

00:10:24.870 --> 00:10:24.880 align:start position:0%
the code but then later we're going to
 

00:10:24.880 --> 00:10:26.790 align:start position:0%
the code but then later we're going to
come<00:10:25.120><c> here</c><00:10:25.519><c> and</c><00:10:25.760><c> erase</c><00:10:26.160><c> this</c><00:10:26.320><c> so</c><00:10:26.480><c> that</c><00:10:26.560><c> we</c><00:10:26.720><c> use</c>

00:10:26.790 --> 00:10:26.800 align:start position:0%
come here and erase this so that we use
 

00:10:26.800 --> 00:10:29.030 align:start position:0%
come here and erase this so that we use
the<00:10:26.959><c> entire</c><00:10:27.279><c> training</c><00:10:27.600><c> set</c>

00:10:29.030 --> 00:10:29.040 align:start position:0%
the entire training set
 

00:10:29.040 --> 00:10:30.829 align:start position:0%
the entire training set
so<00:10:29.279><c> here</c><00:10:29.440><c> i'm</c><00:10:29.519><c> printing</c><00:10:29.839><c> the</c><00:10:29.920><c> word</c>

00:10:30.829 --> 00:10:30.839 align:start position:0%
so here i'm printing the word
 

00:10:30.839 --> 00:10:33.910 align:start position:0%
so here i'm printing the word
emma<00:10:31.920><c> and</c><00:10:32.160><c> here</c><00:10:32.399><c> i'm</c><00:10:32.560><c> basically</c><00:10:32.880><c> showing</c><00:10:33.519><c> the</c>

00:10:33.910 --> 00:10:33.920 align:start position:0%
emma and here i'm basically showing the
 

00:10:33.920 --> 00:10:35.990 align:start position:0%
emma and here i'm basically showing the
examples<00:10:34.399><c> that</c><00:10:34.560><c> we</c><00:10:34.720><c> can</c><00:10:34.880><c> generate</c><00:10:35.600><c> the</c><00:10:35.760><c> five</c>

00:10:35.990 --> 00:10:36.000 align:start position:0%
examples that we can generate the five
 

00:10:36.000 --> 00:10:37.509 align:start position:0%
examples that we can generate the five
examples<00:10:36.399><c> that</c><00:10:36.480><c> we</c><00:10:36.640><c> can</c><00:10:36.720><c> generate</c><00:10:37.120><c> out</c><00:10:37.279><c> of</c><00:10:37.360><c> the</c>

00:10:37.509 --> 00:10:37.519 align:start position:0%
examples that we can generate out of the
 

00:10:37.519 --> 00:10:38.389 align:start position:0%
examples that we can generate out of the
single

00:10:38.389 --> 00:10:38.399 align:start position:0%
single
 

00:10:38.399 --> 00:10:41.110 align:start position:0%
single
um<00:10:38.880><c> sort</c><00:10:39.040><c> of</c><00:10:39.519><c> word</c><00:10:39.920><c> emma</c>

00:10:41.110 --> 00:10:41.120 align:start position:0%
um sort of word emma
 

00:10:41.120 --> 00:10:42.069 align:start position:0%
um sort of word emma
so

00:10:42.069 --> 00:10:42.079 align:start position:0%
so
 

00:10:42.079 --> 00:10:44.069 align:start position:0%
so
when<00:10:42.240><c> we</c><00:10:42.399><c> are</c><00:10:42.480><c> given</c><00:10:42.720><c> the</c><00:10:42.800><c> context</c><00:10:43.279><c> of</c><00:10:43.440><c> just</c><00:10:43.839><c> uh</c>

00:10:44.069 --> 00:10:44.079 align:start position:0%
when we are given the context of just uh
 

00:10:44.079 --> 00:10:45.910 align:start position:0%
when we are given the context of just uh
dot<00:10:44.399><c> dot</c><00:10:45.040><c> the</c><00:10:45.200><c> first</c><00:10:45.440><c> character</c><00:10:45.760><c> in</c><00:10:45.839><c> a</c>

00:10:45.910 --> 00:10:45.920 align:start position:0%
dot dot the first character in a
 

00:10:45.920 --> 00:10:47.590 align:start position:0%
dot dot the first character in a
sequence<00:10:46.320><c> is</c><00:10:46.640><c> e</c>

00:10:47.590 --> 00:10:47.600 align:start position:0%
sequence is e
 

00:10:47.600 --> 00:10:50.310 align:start position:0%
sequence is e
in<00:10:47.760><c> this</c><00:10:48.000><c> context</c><00:10:48.560><c> the</c><00:10:48.720><c> label</c><00:10:49.120><c> is</c><00:10:49.360><c> m</c>

00:10:50.310 --> 00:10:50.320 align:start position:0%
in this context the label is m
 

00:10:50.320 --> 00:10:53.269 align:start position:0%
in this context the label is m
when<00:10:50.480><c> the</c><00:10:50.640><c> context</c><00:10:51.040><c> is</c><00:10:51.200><c> this</c><00:10:51.440><c> the</c><00:10:51.519><c> label</c><00:10:51.839><c> is</c><00:10:52.079><c> m</c>

00:10:53.269 --> 00:10:53.279 align:start position:0%
when the context is this the label is m
 

00:10:53.279 --> 00:10:55.350 align:start position:0%
when the context is this the label is m
and<00:10:53.440><c> so</c><00:10:53.600><c> forth</c><00:10:54.320><c> and</c><00:10:54.480><c> so</c><00:10:54.640><c> the</c><00:10:54.720><c> way</c><00:10:54.880><c> i</c><00:10:54.959><c> build</c><00:10:55.120><c> this</c>

00:10:55.350 --> 00:10:55.360 align:start position:0%
and so forth and so the way i build this
 

00:10:55.360 --> 00:10:56.949 align:start position:0%
and so forth and so the way i build this
out<00:10:55.519><c> is</c><00:10:55.680><c> first</c><00:10:55.920><c> i</c><00:10:56.079><c> start</c><00:10:56.320><c> with</c><00:10:56.480><c> a</c><00:10:56.560><c> padded</c>

00:10:56.949 --> 00:10:56.959 align:start position:0%
out is first i start with a padded
 

00:10:56.959 --> 00:10:59.750 align:start position:0%
out is first i start with a padded
context<00:10:57.360><c> of</c><00:10:57.519><c> just</c><00:10:57.680><c> zero</c><00:10:58.000><c> tokens</c>

00:10:59.750 --> 00:10:59.760 align:start position:0%
context of just zero tokens
 

00:10:59.760 --> 00:11:01.910 align:start position:0%
context of just zero tokens
then<00:10:59.920><c> i</c><00:11:00.000><c> iterate</c><00:11:00.320><c> over</c><00:11:00.560><c> all</c><00:11:00.640><c> the</c><00:11:00.800><c> characters</c><00:11:01.760><c> i</c>

00:11:01.910 --> 00:11:01.920 align:start position:0%
then i iterate over all the characters i
 

00:11:01.920 --> 00:11:04.790 align:start position:0%
then i iterate over all the characters i
get<00:11:02.160><c> the</c><00:11:02.320><c> character</c><00:11:03.200><c> in</c><00:11:03.279><c> the</c><00:11:03.360><c> sequence</c><00:11:04.160><c> and</c><00:11:04.399><c> i</c>

00:11:04.790 --> 00:11:04.800 align:start position:0%
get the character in the sequence and i
 

00:11:04.800 --> 00:11:07.190 align:start position:0%
get the character in the sequence and i
basically<00:11:05.200><c> build</c><00:11:05.440><c> out</c><00:11:05.600><c> the</c><00:11:05.839><c> array</c><00:11:06.160><c> y</c><00:11:06.560><c> of</c><00:11:06.959><c> this</c>

00:11:07.190 --> 00:11:07.200 align:start position:0%
basically build out the array y of this
 

00:11:07.200 --> 00:11:09.509 align:start position:0%
basically build out the array y of this
current<00:11:07.519><c> character</c><00:11:08.320><c> and</c><00:11:08.560><c> the</c><00:11:08.720><c> array</c><00:11:09.120><c> x</c><00:11:09.360><c> which</c>

00:11:09.509 --> 00:11:09.519 align:start position:0%
current character and the array x which
 

00:11:09.519 --> 00:11:11.829 align:start position:0%
current character and the array x which
stores<00:11:09.839><c> the</c><00:11:10.000><c> current</c><00:11:10.320><c> running</c><00:11:10.640><c> context</c>

00:11:11.829 --> 00:11:11.839 align:start position:0%
stores the current running context
 

00:11:11.839 --> 00:11:14.069 align:start position:0%
stores the current running context
and<00:11:11.920><c> then</c><00:11:12.079><c> here</c><00:11:12.399><c> see</c><00:11:12.560><c> i</c><00:11:12.720><c> print</c><00:11:13.200><c> everything</c><00:11:13.760><c> and</c>

00:11:14.069 --> 00:11:14.079 align:start position:0%
and then here see i print everything and
 

00:11:14.079 --> 00:11:17.269 align:start position:0%
and then here see i print everything and
here<00:11:14.800><c> i</c><00:11:15.200><c> um</c><00:11:15.760><c> crop</c><00:11:16.160><c> the</c><00:11:16.320><c> context</c><00:11:16.720><c> and</c><00:11:16.880><c> enter</c><00:11:17.120><c> the</c>

00:11:17.269 --> 00:11:17.279 align:start position:0%
here i um crop the context and enter the
 

00:11:17.279 --> 00:11:18.949 align:start position:0%
here i um crop the context and enter the
new<00:11:17.440><c> character</c><00:11:17.760><c> in</c><00:11:17.839><c> a</c><00:11:17.920><c> sequence</c><00:11:18.480><c> so</c><00:11:18.640><c> this</c><00:11:18.880><c> is</c>

00:11:18.949 --> 00:11:18.959 align:start position:0%
new character in a sequence so this is
 

00:11:18.959 --> 00:11:22.630 align:start position:0%
new character in a sequence so this is
kind<00:11:19.040><c> of</c><00:11:19.120><c> like</c><00:11:19.360><c> a</c><00:11:19.440><c> rolling</c><00:11:19.839><c> window</c><00:11:20.240><c> of</c><00:11:20.399><c> context</c>

00:11:22.630 --> 00:11:22.640 align:start position:0%
kind of like a rolling window of context
 

00:11:22.640 --> 00:11:24.150 align:start position:0%
kind of like a rolling window of context
now<00:11:22.800><c> we</c><00:11:22.959><c> can</c><00:11:23.040><c> change</c><00:11:23.279><c> the</c><00:11:23.360><c> block</c><00:11:23.600><c> size</c><00:11:23.839><c> here</c><00:11:24.000><c> to</c>

00:11:24.150 --> 00:11:24.160 align:start position:0%
now we can change the block size here to
 

00:11:24.160 --> 00:11:25.750 align:start position:0%
now we can change the block size here to
for<00:11:24.320><c> example</c><00:11:24.720><c> four</c>

00:11:25.750 --> 00:11:25.760 align:start position:0%
for example four
 

00:11:25.760 --> 00:11:27.829 align:start position:0%
for example four
and<00:11:25.920><c> in</c><00:11:26.000><c> that</c><00:11:26.160><c> case</c><00:11:26.399><c> we'll</c><00:11:26.640><c> be</c><00:11:26.800><c> predicting</c><00:11:27.680><c> the</c>

00:11:27.829 --> 00:11:27.839 align:start position:0%
and in that case we'll be predicting the
 

00:11:27.839 --> 00:11:30.230 align:start position:0%
and in that case we'll be predicting the
fifth<00:11:28.079><c> character</c><00:11:28.560><c> given</c><00:11:28.800><c> the</c><00:11:28.959><c> previous</c><00:11:29.279><c> four</c>

00:11:30.230 --> 00:11:30.240 align:start position:0%
fifth character given the previous four
 

00:11:30.240 --> 00:11:31.750 align:start position:0%
fifth character given the previous four
or<00:11:30.399><c> it</c><00:11:30.560><c> can</c><00:11:30.720><c> be</c><00:11:30.880><c> five</c>

00:11:31.750 --> 00:11:31.760 align:start position:0%
or it can be five
 

00:11:31.760 --> 00:11:33.910 align:start position:0%
or it can be five
and<00:11:31.839><c> then</c><00:11:32.000><c> it</c><00:11:32.079><c> would</c><00:11:32.240><c> look</c><00:11:32.399><c> like</c><00:11:32.560><c> this</c>

00:11:33.910 --> 00:11:33.920 align:start position:0%
and then it would look like this
 

00:11:33.920 --> 00:11:36.550 align:start position:0%
and then it would look like this
or<00:11:34.079><c> it</c><00:11:34.160><c> can</c><00:11:34.320><c> be</c><00:11:34.560><c> say</c><00:11:34.800><c> ten</c>

00:11:36.550 --> 00:11:36.560 align:start position:0%
or it can be say ten
 

00:11:36.560 --> 00:11:37.590 align:start position:0%
or it can be say ten
and<00:11:36.640><c> then</c><00:11:36.880><c> it</c><00:11:37.040><c> would</c><00:11:37.120><c> look</c><00:11:37.279><c> something</c><00:11:37.519><c> like</c>

00:11:37.590 --> 00:11:37.600 align:start position:0%
and then it would look something like
 

00:11:37.600 --> 00:11:39.030 align:start position:0%
and then it would look something like
this<00:11:37.760><c> we're</c><00:11:37.920><c> taking</c><00:11:38.240><c> ten</c><00:11:38.480><c> characters</c><00:11:38.959><c> to</c>

00:11:39.030 --> 00:11:39.040 align:start position:0%
this we're taking ten characters to
 

00:11:39.040 --> 00:11:40.949 align:start position:0%
this we're taking ten characters to
predict<00:11:39.519><c> the</c><00:11:39.680><c> eleventh</c><00:11:40.160><c> one</c>

00:11:40.949 --> 00:11:40.959 align:start position:0%
predict the eleventh one
 

00:11:40.959 --> 00:11:43.190 align:start position:0%
predict the eleventh one
and<00:11:41.120><c> we're</c><00:11:41.279><c> always</c><00:11:41.600><c> padding</c><00:11:41.920><c> with</c><00:11:42.079><c> dots</c>

00:11:43.190 --> 00:11:43.200 align:start position:0%
and we're always padding with dots
 

00:11:43.200 --> 00:11:45.509 align:start position:0%
and we're always padding with dots
so<00:11:43.360><c> let</c><00:11:43.519><c> me</c><00:11:43.680><c> bring</c><00:11:43.920><c> this</c><00:11:44.160><c> back</c><00:11:44.320><c> to</c><00:11:44.640><c> three</c>

00:11:45.509 --> 00:11:45.519 align:start position:0%
so let me bring this back to three
 

00:11:45.519 --> 00:11:47.910 align:start position:0%
so let me bring this back to three
just<00:11:45.760><c> so</c><00:11:45.920><c> that</c><00:11:46.560><c> we</c><00:11:46.720><c> have</c><00:11:47.200><c> what</c><00:11:47.360><c> we</c><00:11:47.519><c> have</c><00:11:47.760><c> here</c>

00:11:47.910 --> 00:11:47.920 align:start position:0%
just so that we have what we have here
 

00:11:47.920 --> 00:11:49.990 align:start position:0%
just so that we have what we have here
in<00:11:48.079><c> the</c><00:11:48.320><c> paper</c>

00:11:49.990 --> 00:11:50.000 align:start position:0%
in the paper
 

00:11:50.000 --> 00:11:51.590 align:start position:0%
in the paper
and<00:11:50.240><c> finally</c><00:11:50.560><c> the</c><00:11:50.640><c> data</c><00:11:50.880><c> set</c><00:11:51.040><c> right</c><00:11:51.200><c> now</c><00:11:51.360><c> looks</c>

00:11:51.590 --> 00:11:51.600 align:start position:0%
and finally the data set right now looks
 

00:11:51.600 --> 00:11:53.430 align:start position:0%
and finally the data set right now looks
as<00:11:51.680><c> follows</c>

00:11:53.430 --> 00:11:53.440 align:start position:0%
as follows
 

00:11:53.440 --> 00:11:55.430 align:start position:0%
as follows
from<00:11:53.600><c> these</c><00:11:53.920><c> five</c><00:11:54.160><c> words</c><00:11:54.800><c> we</c><00:11:55.040><c> have</c><00:11:55.120><c> created</c><00:11:55.360><c> a</c>

00:11:55.430 --> 00:11:55.440 align:start position:0%
from these five words we have created a
 

00:11:55.440 --> 00:11:57.910 align:start position:0%
from these five words we have created a
data<00:11:55.680><c> set</c><00:11:55.839><c> of</c><00:11:56.000><c> 32</c><00:11:56.560><c> examples</c>

00:11:57.910 --> 00:11:57.920 align:start position:0%
data set of 32 examples
 

00:11:57.920 --> 00:11:59.750 align:start position:0%
data set of 32 examples
and<00:11:58.320><c> each</c><00:11:58.640><c> input</c><00:11:58.959><c> of</c><00:11:59.040><c> the</c><00:11:59.120><c> neural</c><00:11:59.360><c> net</c><00:11:59.600><c> is</c>

00:11:59.750 --> 00:11:59.760 align:start position:0%
and each input of the neural net is
 

00:11:59.760 --> 00:12:01.990 align:start position:0%
and each input of the neural net is
three<00:12:00.000><c> integers</c><00:12:00.959><c> and</c><00:12:01.200><c> we</c><00:12:01.279><c> have</c><00:12:01.440><c> a</c><00:12:01.519><c> label</c><00:12:01.839><c> that</c>

00:12:01.990 --> 00:12:02.000 align:start position:0%
three integers and we have a label that
 

00:12:02.000 --> 00:12:03.670 align:start position:0%
three integers and we have a label that
is<00:12:02.079><c> also</c><00:12:02.320><c> an</c><00:12:02.480><c> integer</c>

00:12:03.670 --> 00:12:03.680 align:start position:0%
is also an integer
 

00:12:03.680 --> 00:12:04.550 align:start position:0%
is also an integer
y

00:12:04.550 --> 00:12:04.560 align:start position:0%
y
 

00:12:04.560 --> 00:12:06.629 align:start position:0%
y
so<00:12:04.880><c> x</c><00:12:05.360><c> looks</c><00:12:05.600><c> like</c><00:12:05.760><c> this</c>

00:12:06.629 --> 00:12:06.639 align:start position:0%
so x looks like this
 

00:12:06.639 --> 00:12:08.790 align:start position:0%
so x looks like this
these<00:12:06.880><c> are</c><00:12:06.959><c> the</c><00:12:07.040><c> individual</c><00:12:07.519><c> examples</c>

00:12:08.790 --> 00:12:08.800 align:start position:0%
these are the individual examples
 

00:12:08.800 --> 00:12:12.389 align:start position:0%
these are the individual examples
and<00:12:08.880><c> then</c><00:12:09.200><c> y</c><00:12:09.839><c> are</c><00:12:09.920><c> the</c><00:12:10.079><c> labels</c>

00:12:12.389 --> 00:12:12.399 align:start position:0%
and then y are the labels
 

00:12:12.399 --> 00:12:13.670 align:start position:0%
and then y are the labels
so

00:12:13.670 --> 00:12:13.680 align:start position:0%
so
 

00:12:13.680 --> 00:12:15.350 align:start position:0%
so
given<00:12:14.000><c> this</c>

00:12:15.350 --> 00:12:15.360 align:start position:0%
given this
 

00:12:15.360 --> 00:12:17.030 align:start position:0%
given this
let's<00:12:15.519><c> now</c><00:12:15.680><c> write</c><00:12:15.920><c> a</c><00:12:16.079><c> neural</c><00:12:16.399><c> network</c><00:12:16.800><c> that</c>

00:12:17.030 --> 00:12:17.040 align:start position:0%
let's now write a neural network that
 

00:12:17.040 --> 00:12:19.190 align:start position:0%
let's now write a neural network that
takes<00:12:17.279><c> these</c><00:12:17.680><c> axes</c><00:12:18.079><c> and</c><00:12:18.160><c> predicts</c><00:12:18.560><c> the</c><00:12:18.720><c> y's</c>

00:12:19.190 --> 00:12:19.200 align:start position:0%
takes these axes and predicts the y's
 

00:12:19.200 --> 00:12:21.190 align:start position:0%
takes these axes and predicts the y's
first<00:12:19.519><c> let's</c><00:12:19.680><c> build</c><00:12:19.920><c> the</c><00:12:20.000><c> embedding</c><00:12:20.880><c> lookup</c>

00:12:21.190 --> 00:12:21.200 align:start position:0%
first let's build the embedding lookup
 

00:12:21.200 --> 00:12:23.110 align:start position:0%
first let's build the embedding lookup
table<00:12:21.600><c> c</c>

00:12:23.110 --> 00:12:23.120 align:start position:0%
table c
 

00:12:23.120 --> 00:12:25.269 align:start position:0%
table c
so<00:12:23.440><c> we</c><00:12:23.600><c> have</c><00:12:23.760><c> 27</c><00:12:24.240><c> possible</c><00:12:24.560><c> characters</c><00:12:25.200><c> and</c>

00:12:25.269 --> 00:12:25.279 align:start position:0%
so we have 27 possible characters and
 

00:12:25.279 --> 00:12:26.870 align:start position:0%
so we have 27 possible characters and
we're<00:12:25.440><c> going</c><00:12:25.600><c> to</c><00:12:25.760><c> embed</c><00:12:26.000><c> them</c><00:12:26.240><c> in</c><00:12:26.480><c> a</c><00:12:26.639><c> lower</c>

00:12:26.870 --> 00:12:26.880 align:start position:0%
we're going to embed them in a lower
 

00:12:26.880 --> 00:12:28.310 align:start position:0%
we're going to embed them in a lower
dimensional<00:12:27.279><c> space</c>

00:12:28.310 --> 00:12:28.320 align:start position:0%
dimensional space
 

00:12:28.320 --> 00:12:31.350 align:start position:0%
dimensional space
in<00:12:28.480><c> the</c><00:12:28.560><c> paper</c><00:12:28.959><c> they</c><00:12:29.120><c> have</c><00:12:29.279><c> 17</c><00:12:29.920><c> 000</c><00:12:30.560><c> words</c><00:12:31.200><c> and</c>

00:12:31.350 --> 00:12:31.360 align:start position:0%
in the paper they have 17 000 words and
 

00:12:31.360 --> 00:12:33.910 align:start position:0%
in the paper they have 17 000 words and
they<00:12:31.600><c> bet</c><00:12:31.760><c> them</c><00:12:32.079><c> in</c><00:12:32.480><c> uh</c><00:12:32.800><c> spaces</c><00:12:33.360><c> as</c><00:12:33.680><c> small</c>

00:12:33.910 --> 00:12:33.920 align:start position:0%
they bet them in uh spaces as small
 

00:12:33.920 --> 00:12:38.470 align:start position:0%
they bet them in uh spaces as small
dimensional<00:12:34.560><c> as</c><00:12:34.959><c> 30.</c><00:12:35.760><c> so</c><00:12:35.920><c> they</c><00:12:36.079><c> cram</c><00:12:36.399><c> 17</c><00:12:36.880><c> 000</c>

00:12:38.470 --> 00:12:38.480 align:start position:0%
dimensional as 30. so they cram 17 000
 

00:12:38.480 --> 00:12:40.710 align:start position:0%
dimensional as 30. so they cram 17 000
words<00:12:38.800><c> into</c><00:12:39.040><c> 30</c><00:12:39.279><c> dimensional</c><00:12:39.680><c> space</c><00:12:40.480><c> in</c><00:12:40.639><c> our</c>

00:12:40.710 --> 00:12:40.720 align:start position:0%
words into 30 dimensional space in our
 

00:12:40.720 --> 00:12:43.350 align:start position:0%
words into 30 dimensional space in our
case<00:12:40.959><c> we</c><00:12:41.040><c> have</c><00:12:41.200><c> only</c><00:12:41.440><c> 27</c><00:12:42.079><c> possible</c><00:12:42.480><c> characters</c>

00:12:43.350 --> 00:12:43.360 align:start position:0%
case we have only 27 possible characters
 

00:12:43.360 --> 00:12:45.190 align:start position:0%
case we have only 27 possible characters
so<00:12:43.519><c> let's</c><00:12:43.760><c> grab</c><00:12:44.000><c> them</c><00:12:44.160><c> in</c><00:12:44.240><c> something</c><00:12:44.560><c> as</c><00:12:44.800><c> small</c>

00:12:45.190 --> 00:12:45.200 align:start position:0%
so let's grab them in something as small
 

00:12:45.200 --> 00:12:46.790 align:start position:0%
so let's grab them in something as small
as<00:12:45.600><c> to</c><00:12:45.760><c> start</c><00:12:46.000><c> with</c><00:12:46.240><c> for</c><00:12:46.399><c> example</c><00:12:46.639><c> a</c>

00:12:46.790 --> 00:12:46.800 align:start position:0%
as to start with for example a
 

00:12:46.800 --> 00:12:48.470 align:start position:0%
as to start with for example a
two-dimensional<00:12:47.360><c> space</c>

00:12:48.470 --> 00:12:48.480 align:start position:0%
two-dimensional space
 

00:12:48.480 --> 00:12:50.069 align:start position:0%
two-dimensional space
so<00:12:48.639><c> this</c><00:12:48.800><c> lookup</c><00:12:49.120><c> table</c><00:12:49.360><c> will</c><00:12:49.519><c> be</c><00:12:49.680><c> random</c>

00:12:50.069 --> 00:12:50.079 align:start position:0%
so this lookup table will be random
 

00:12:50.079 --> 00:12:51.190 align:start position:0%
so this lookup table will be random
numbers

00:12:51.190 --> 00:12:51.200 align:start position:0%
numbers
 

00:12:51.200 --> 00:12:54.150 align:start position:0%
numbers
and<00:12:51.680><c> we'll</c><00:12:51.920><c> have</c><00:12:52.079><c> 27</c><00:12:52.880><c> rows</c><00:12:53.600><c> and</c><00:12:53.760><c> we'll</c><00:12:53.920><c> have</c>

00:12:54.150 --> 00:12:54.160 align:start position:0%
and we'll have 27 rows and we'll have
 

00:12:54.160 --> 00:12:56.069 align:start position:0%
and we'll have 27 rows and we'll have
two<00:12:54.800><c> columns</c>

00:12:56.069 --> 00:12:56.079 align:start position:0%
two columns
 

00:12:56.079 --> 00:12:58.470 align:start position:0%
two columns
right<00:12:56.320><c> so</c><00:12:56.560><c> each</c><00:12:57.120><c> 20</c><00:12:57.519><c> each</c><00:12:57.760><c> one</c><00:12:57.920><c> of</c><00:12:58.000><c> 27</c>

00:12:58.470 --> 00:12:58.480 align:start position:0%
right so each 20 each one of 27
 

00:12:58.480 --> 00:13:00.230 align:start position:0%
right so each 20 each one of 27
characters<00:12:59.200><c> will</c><00:12:59.360><c> have</c><00:12:59.519><c> a</c><00:12:59.600><c> two-dimensional</c>

00:13:00.230 --> 00:13:00.240 align:start position:0%
characters will have a two-dimensional
 

00:13:00.240 --> 00:13:01.990 align:start position:0%
characters will have a two-dimensional
embedding

00:13:01.990 --> 00:13:02.000 align:start position:0%
embedding
 

00:13:02.000 --> 00:13:05.509 align:start position:0%
embedding
so<00:13:02.160><c> that's</c><00:13:02.639><c> our</c><00:13:03.279><c> matrix</c><00:13:04.079><c> c</c><00:13:04.399><c> of</c><00:13:04.560><c> embeddings</c><00:13:05.360><c> in</c>

00:13:05.509 --> 00:13:05.519 align:start position:0%
so that's our matrix c of embeddings in
 

00:13:05.519 --> 00:13:07.829 align:start position:0%
so that's our matrix c of embeddings in
the<00:13:05.600><c> beginning</c><00:13:06.079><c> initialized</c><00:13:06.800><c> randomly</c>

00:13:07.829 --> 00:13:07.839 align:start position:0%
the beginning initialized randomly
 

00:13:07.839 --> 00:13:10.150 align:start position:0%
the beginning initialized randomly
now<00:13:08.000><c> before</c><00:13:08.240><c> we</c><00:13:08.480><c> embed</c><00:13:09.040><c> all</c><00:13:09.279><c> of</c><00:13:09.360><c> the</c><00:13:09.600><c> integers</c>

00:13:10.150 --> 00:13:10.160 align:start position:0%
now before we embed all of the integers
 

00:13:10.160 --> 00:13:12.470 align:start position:0%
now before we embed all of the integers
inside<00:13:10.399><c> the</c><00:13:10.560><c> input</c><00:13:11.040><c> x</c><00:13:11.680><c> using</c><00:13:12.000><c> this</c><00:13:12.160><c> lookup</c>

00:13:12.470 --> 00:13:12.480 align:start position:0%
inside the input x using this lookup
 

00:13:12.480 --> 00:13:14.150 align:start position:0%
inside the input x using this lookup
table<00:13:12.800><c> c</c>

00:13:14.150 --> 00:13:14.160 align:start position:0%
table c
 

00:13:14.160 --> 00:13:15.910 align:start position:0%
table c
let<00:13:14.399><c> me</c><00:13:14.480><c> actually</c><00:13:14.880><c> just</c><00:13:15.040><c> try</c><00:13:15.279><c> to</c><00:13:15.440><c> embed</c><00:13:15.760><c> a</c>

00:13:15.910 --> 00:13:15.920 align:start position:0%
let me actually just try to embed a
 

00:13:15.920 --> 00:13:19.590 align:start position:0%
let me actually just try to embed a
single<00:13:16.320><c> individual</c><00:13:16.800><c> integer</c><00:13:17.200><c> like</c><00:13:17.440><c> say</c><00:13:17.680><c> five</c>

00:13:19.590 --> 00:13:19.600 align:start position:0%
single individual integer like say five
 

00:13:19.600 --> 00:13:21.829 align:start position:0%
single individual integer like say five
so<00:13:19.760><c> we</c><00:13:19.839><c> get</c><00:13:19.920><c> a</c><00:13:20.000><c> sense</c><00:13:20.240><c> of</c><00:13:20.320><c> how</c><00:13:20.480><c> this</c><00:13:20.639><c> works</c>

00:13:21.829 --> 00:13:21.839 align:start position:0%
so we get a sense of how this works
 

00:13:21.839 --> 00:13:22.710 align:start position:0%
so we get a sense of how this works
now

00:13:22.710 --> 00:13:22.720 align:start position:0%
now
 

00:13:22.720 --> 00:13:24.230 align:start position:0%
now
one<00:13:22.959><c> way</c><00:13:23.120><c> this</c><00:13:23.279><c> works</c><00:13:23.600><c> of</c><00:13:23.680><c> course</c><00:13:23.920><c> is</c><00:13:24.000><c> we</c><00:13:24.160><c> can</c>

00:13:24.230 --> 00:13:24.240 align:start position:0%
one way this works of course is we can
 

00:13:24.240 --> 00:13:26.389 align:start position:0%
one way this works of course is we can
just<00:13:24.320><c> take</c><00:13:24.560><c> the</c><00:13:24.639><c> c</c><00:13:25.120><c> and</c><00:13:25.279><c> we</c><00:13:25.440><c> can</c><00:13:25.680><c> index</c><00:13:26.160><c> into</c>

00:13:26.389 --> 00:13:26.399 align:start position:0%
just take the c and we can index into
 

00:13:26.399 --> 00:13:27.829 align:start position:0%
just take the c and we can index into
row<00:13:26.639><c> five</c>

00:13:27.829 --> 00:13:27.839 align:start position:0%
row five
 

00:13:27.839 --> 00:13:30.389 align:start position:0%
row five
and<00:13:28.000><c> that</c><00:13:28.160><c> gives</c><00:13:28.399><c> us</c><00:13:28.639><c> a</c><00:13:28.800><c> vector</c><00:13:29.600><c> the</c><00:13:29.839><c> fifth</c><00:13:30.160><c> row</c>

00:13:30.389 --> 00:13:30.399 align:start position:0%
and that gives us a vector the fifth row
 

00:13:30.399 --> 00:13:31.590 align:start position:0%
and that gives us a vector the fifth row
of<00:13:30.560><c> c</c>

00:13:31.590 --> 00:13:31.600 align:start position:0%
of c
 

00:13:31.600 --> 00:13:33.030 align:start position:0%
of c
and<00:13:32.000><c> um</c>

00:13:33.030 --> 00:13:33.040 align:start position:0%
and um
 

00:13:33.040 --> 00:13:34.710 align:start position:0%
and um
this<00:13:33.279><c> is</c><00:13:33.360><c> one</c><00:13:33.519><c> way</c><00:13:33.680><c> to</c><00:13:33.760><c> do</c><00:13:34.000><c> it</c>

00:13:34.710 --> 00:13:34.720 align:start position:0%
this is one way to do it
 

00:13:34.720 --> 00:13:36.069 align:start position:0%
this is one way to do it
the<00:13:34.880><c> other</c><00:13:35.040><c> way</c><00:13:35.200><c> that</c><00:13:35.360><c> i</c><00:13:35.519><c> presented</c><00:13:35.920><c> in</c><00:13:36.000><c> the</c>

00:13:36.069 --> 00:13:36.079 align:start position:0%
the other way that i presented in the
 

00:13:36.079 --> 00:13:38.629 align:start position:0%
the other way that i presented in the
previous<00:13:36.399><c> lecture</c><00:13:37.279><c> is</c><00:13:37.519><c> actually</c><00:13:38.160><c> seemingly</c>

00:13:38.629 --> 00:13:38.639 align:start position:0%
previous lecture is actually seemingly
 

00:13:38.639 --> 00:13:40.949 align:start position:0%
previous lecture is actually seemingly
different<00:13:39.040><c> but</c><00:13:39.200><c> actually</c><00:13:39.600><c> identical</c><00:13:40.639><c> so</c><00:13:40.880><c> in</c>

00:13:40.949 --> 00:13:40.959 align:start position:0%
different but actually identical so in
 

00:13:40.959 --> 00:13:42.310 align:start position:0%
different but actually identical so in
the<00:13:41.040><c> previous</c><00:13:41.360><c> lecture</c><00:13:41.680><c> what</c><00:13:41.839><c> we</c><00:13:41.920><c> did</c><00:13:42.079><c> is</c><00:13:42.160><c> we</c>

00:13:42.310 --> 00:13:42.320 align:start position:0%
the previous lecture what we did is we
 

00:13:42.320 --> 00:13:44.230 align:start position:0%
the previous lecture what we did is we
took<00:13:42.480><c> these</c><00:13:42.720><c> integers</c><00:13:43.279><c> and</c><00:13:43.360><c> we</c><00:13:43.519><c> used</c><00:13:43.839><c> the</c><00:13:44.000><c> one</c>

00:13:44.230 --> 00:13:44.240 align:start position:0%
took these integers and we used the one
 

00:13:44.240 --> 00:13:47.590 align:start position:0%
took these integers and we used the one
hot<00:13:44.480><c> encoding</c><00:13:45.279><c> to</c><00:13:45.600><c> first</c><00:13:45.839><c> encode</c><00:13:46.160><c> them</c><00:13:46.800><c> so</c><00:13:47.040><c> f.1</c>

00:13:47.590 --> 00:13:47.600 align:start position:0%
hot encoding to first encode them so f.1
 

00:13:47.600 --> 00:13:48.710 align:start position:0%
hot encoding to first encode them so f.1
hot

00:13:48.710 --> 00:13:48.720 align:start position:0%
hot
 

00:13:48.720 --> 00:13:51.190 align:start position:0%
hot
we<00:13:48.880><c> want</c><00:13:49.040><c> to</c><00:13:49.200><c> encode</c><00:13:49.600><c> integer</c><00:13:50.000><c> 5</c><00:13:50.800><c> and</c><00:13:50.959><c> we</c><00:13:51.040><c> want</c>

00:13:51.190 --> 00:13:51.200 align:start position:0%
we want to encode integer 5 and we want
 

00:13:51.200 --> 00:13:52.870 align:start position:0%
we want to encode integer 5 and we want
to<00:13:51.360><c> tell</c><00:13:51.519><c> it</c><00:13:51.680><c> that</c><00:13:51.839><c> the</c><00:13:52.079><c> number</c><00:13:52.240><c> of</c><00:13:52.399><c> classes</c><00:13:52.800><c> is</c>

00:13:52.870 --> 00:13:52.880 align:start position:0%
to tell it that the number of classes is
 

00:13:52.880 --> 00:13:55.829 align:start position:0%
to tell it that the number of classes is
27<00:13:53.600><c> so</c><00:13:53.760><c> that's</c><00:13:53.920><c> the</c><00:13:54.560><c> 26</c><00:13:55.040><c> dimensional</c><00:13:55.440><c> vector</c>

00:13:55.829 --> 00:13:55.839 align:start position:0%
27 so that's the 26 dimensional vector
 

00:13:55.839 --> 00:13:57.910 align:start position:0%
27 so that's the 26 dimensional vector
of<00:13:56.079><c> all</c><00:13:56.240><c> zeros</c><00:13:56.800><c> except</c><00:13:57.120><c> the</c><00:13:57.199><c> fifth</c><00:13:57.440><c> bit</c><00:13:57.760><c> is</c>

00:13:57.910 --> 00:13:57.920 align:start position:0%
of all zeros except the fifth bit is
 

00:13:57.920 --> 00:13:59.910 align:start position:0%
of all zeros except the fifth bit is
turned<00:13:58.320><c> on</c>

00:13:59.910 --> 00:13:59.920 align:start position:0%
turned on
 

00:13:59.920 --> 00:14:03.110 align:start position:0%
turned on
now<00:14:00.639><c> this</c><00:14:00.959><c> actually</c><00:14:01.360><c> doesn't</c><00:14:01.680><c> work</c>

00:14:03.110 --> 00:14:03.120 align:start position:0%
now this actually doesn't work
 

00:14:03.120 --> 00:14:04.629 align:start position:0%
now this actually doesn't work
the<00:14:03.279><c> reason</c><00:14:03.680><c> is</c><00:14:03.839><c> that</c>

00:14:04.629 --> 00:14:04.639 align:start position:0%
the reason is that
 

00:14:04.639 --> 00:14:05.990 align:start position:0%
the reason is that
this<00:14:04.880><c> input</c><00:14:05.120><c> actually</c><00:14:05.279><c> must</c><00:14:05.440><c> be</c><00:14:05.600><c> a</c><00:14:05.680><c> doorstop</c>

00:14:05.990 --> 00:14:06.000 align:start position:0%
this input actually must be a doorstop
 

00:14:06.000 --> 00:14:07.910 align:start position:0%
this input actually must be a doorstop
tensor

00:14:07.910 --> 00:14:07.920 align:start position:0%
tensor
 

00:14:07.920 --> 00:14:09.189 align:start position:0%
tensor
and<00:14:08.079><c> i'm</c><00:14:08.160><c> making</c><00:14:08.399><c> some</c><00:14:08.560><c> of</c><00:14:08.639><c> these</c><00:14:08.800><c> errors</c>

00:14:09.189 --> 00:14:09.199 align:start position:0%
and i'm making some of these errors
 

00:14:09.199 --> 00:14:10.550 align:start position:0%
and i'm making some of these errors
intentionally<00:14:09.680><c> just</c><00:14:09.839><c> so</c><00:14:10.000><c> you</c><00:14:10.079><c> get</c><00:14:10.240><c> to</c><00:14:10.320><c> see</c>

00:14:10.550 --> 00:14:10.560 align:start position:0%
intentionally just so you get to see
 

00:14:10.560 --> 00:14:12.710 align:start position:0%
intentionally just so you get to see
some<00:14:10.800><c> errors</c><00:14:11.120><c> and</c><00:14:11.199><c> how</c><00:14:11.360><c> to</c><00:14:11.519><c> fix</c><00:14:11.760><c> them</c>

00:14:12.710 --> 00:14:12.720 align:start position:0%
some errors and how to fix them
 

00:14:12.720 --> 00:14:14.310 align:start position:0%
some errors and how to fix them
so<00:14:12.880><c> this</c><00:14:13.040><c> must</c><00:14:13.199><c> be</c><00:14:13.279><c> a</c><00:14:13.360><c> tester</c><00:14:13.680><c> not</c><00:14:13.839><c> an</c><00:14:14.000><c> int</c>

00:14:14.310 --> 00:14:14.320 align:start position:0%
so this must be a tester not an int
 

00:14:14.320 --> 00:14:16.550 align:start position:0%
so this must be a tester not an int
fairly<00:14:14.639><c> straightforward</c><00:14:15.120><c> to</c><00:14:15.279><c> fix</c><00:14:16.160><c> we</c><00:14:16.320><c> get</c><00:14:16.480><c> a</c>

00:14:16.550 --> 00:14:16.560 align:start position:0%
fairly straightforward to fix we get a
 

00:14:16.560 --> 00:14:18.949 align:start position:0%
fairly straightforward to fix we get a
one<00:14:16.720><c> hot</c><00:14:17.199><c> vector</c><00:14:18.000><c> the</c><00:14:18.160><c> fifth</c><00:14:18.399><c> dimension</c><00:14:18.880><c> is</c>

00:14:18.949 --> 00:14:18.959 align:start position:0%
one hot vector the fifth dimension is
 

00:14:18.959 --> 00:14:22.230 align:start position:0%
one hot vector the fifth dimension is
one<00:14:19.519><c> and</c><00:14:19.680><c> the</c><00:14:19.760><c> shape</c><00:14:20.000><c> of</c><00:14:20.079><c> this</c><00:14:20.320><c> is</c><00:14:20.399><c> 27.</c>

00:14:22.230 --> 00:14:22.240 align:start position:0%
one and the shape of this is 27.
 

00:14:22.240 --> 00:14:24.629 align:start position:0%
one and the shape of this is 27.
and<00:14:22.399><c> now</c><00:14:22.560><c> notice</c><00:14:22.959><c> that</c><00:14:23.519><c> just</c><00:14:23.760><c> as</c><00:14:23.920><c> i</c><00:14:24.079><c> briefly</c>

00:14:24.629 --> 00:14:24.639 align:start position:0%
and now notice that just as i briefly
 

00:14:24.639 --> 00:14:26.470 align:start position:0%
and now notice that just as i briefly
alluded<00:14:24.959><c> to</c><00:14:25.120><c> in</c><00:14:25.199><c> the</c><00:14:25.279><c> previous</c><00:14:25.600><c> video</c><00:14:26.160><c> if</c><00:14:26.320><c> we</c>

00:14:26.470 --> 00:14:26.480 align:start position:0%
alluded to in the previous video if we
 

00:14:26.480 --> 00:14:29.110 align:start position:0%
alluded to in the previous video if we
take<00:14:26.720><c> this</c><00:14:26.959><c> one</c><00:14:27.199><c> hot</c><00:14:27.600><c> vector</c><00:14:28.320><c> and</c><00:14:28.480><c> we</c><00:14:28.639><c> multiply</c>

00:14:29.110 --> 00:14:29.120 align:start position:0%
take this one hot vector and we multiply
 

00:14:29.120 --> 00:14:33.750 align:start position:0%
take this one hot vector and we multiply
it<00:14:29.199><c> by</c><00:14:29.440><c> c</c>

00:14:33.750 --> 00:14:33.760 align:start position:0%
 
 

00:14:33.760 --> 00:14:35.670 align:start position:0%
 
then

00:14:35.670 --> 00:14:35.680 align:start position:0%
then
 

00:14:35.680 --> 00:14:37.350 align:start position:0%
then
what<00:14:35.839><c> would</c><00:14:36.000><c> you</c><00:14:36.160><c> expect</c>

00:14:37.350 --> 00:14:37.360 align:start position:0%
what would you expect
 

00:14:37.360 --> 00:14:39.189 align:start position:0%
what would you expect
well<00:14:37.600><c> number</c><00:14:37.839><c> one</c>

00:14:39.189 --> 00:14:39.199 align:start position:0%
well number one
 

00:14:39.199 --> 00:14:41.750 align:start position:0%
well number one
first<00:14:39.440><c> you'd</c><00:14:39.680><c> expect</c><00:14:40.000><c> an</c><00:14:40.160><c> error</c>

00:14:41.750 --> 00:14:41.760 align:start position:0%
first you'd expect an error
 

00:14:41.760 --> 00:14:43.590 align:start position:0%
first you'd expect an error
because

00:14:43.590 --> 00:14:43.600 align:start position:0%
because
 

00:14:43.600 --> 00:14:45.350 align:start position:0%
because
expected<00:14:44.000><c> scalar</c><00:14:44.399><c> type</c><00:14:44.639><c> long</c><00:14:44.880><c> but</c><00:14:45.040><c> found</c>

00:14:45.350 --> 00:14:45.360 align:start position:0%
expected scalar type long but found
 

00:14:45.360 --> 00:14:46.310 align:start position:0%
expected scalar type long but found
float

00:14:46.310 --> 00:14:46.320 align:start position:0%
float
 

00:14:46.320 --> 00:14:48.550 align:start position:0%
float
so<00:14:46.560><c> a</c><00:14:46.639><c> little</c><00:14:46.800><c> bit</c><00:14:46.959><c> confusing</c><00:14:47.600><c> but</c>

00:14:48.550 --> 00:14:48.560 align:start position:0%
so a little bit confusing but
 

00:14:48.560 --> 00:14:50.150 align:start position:0%
so a little bit confusing but
the<00:14:48.720><c> problem</c><00:14:48.959><c> here</c><00:14:49.120><c> is</c><00:14:49.199><c> that</c><00:14:49.440><c> one</c><00:14:49.600><c> hot</c><00:14:50.000><c> the</c>

00:14:50.150 --> 00:14:50.160 align:start position:0%
the problem here is that one hot the
 

00:14:50.160 --> 00:14:52.150 align:start position:0%
the problem here is that one hot the
data<00:14:50.480><c> type</c><00:14:50.720><c> of</c><00:14:50.880><c> it</c>

00:14:52.150 --> 00:14:52.160 align:start position:0%
data type of it
 

00:14:52.160 --> 00:14:53.110 align:start position:0%
data type of it
is

00:14:53.110 --> 00:14:53.120 align:start position:0%
is
 

00:14:53.120 --> 00:14:56.550 align:start position:0%
is
long<00:14:53.839><c> it's</c><00:14:54.000><c> a</c><00:14:54.240><c> 64-bit</c><00:14:55.040><c> integer</c><00:14:55.920><c> but</c><00:14:56.079><c> this</c><00:14:56.320><c> is</c><00:14:56.480><c> a</c>

00:14:56.550 --> 00:14:56.560 align:start position:0%
long it's a 64-bit integer but this is a
 

00:14:56.560 --> 00:14:59.030 align:start position:0%
long it's a 64-bit integer but this is a
float<00:14:57.040><c> tensor</c><00:14:57.519><c> and</c><00:14:57.600><c> so</c><00:14:58.320><c> pytorch</c><00:14:58.720><c> doesn't</c><00:14:58.959><c> know</c>

00:14:59.030 --> 00:14:59.040 align:start position:0%
float tensor and so pytorch doesn't know
 

00:14:59.040 --> 00:15:01.590 align:start position:0%
float tensor and so pytorch doesn't know
how<00:14:59.199><c> to</c><00:14:59.279><c> multiply</c><00:14:59.920><c> an</c><00:15:00.079><c> int</c><00:15:00.320><c> with</c><00:15:00.560><c> a</c><00:15:00.639><c> float</c><00:15:01.120><c> and</c>

00:15:01.590 --> 00:15:01.600 align:start position:0%
how to multiply an int with a float and
 

00:15:01.600 --> 00:15:03.509 align:start position:0%
how to multiply an int with a float and
that's<00:15:01.839><c> why</c><00:15:02.000><c> we</c><00:15:02.240><c> had</c><00:15:02.399><c> to</c><00:15:02.720><c> explicitly</c><00:15:03.279><c> cast</c>

00:15:03.509 --> 00:15:03.519 align:start position:0%
that's why we had to explicitly cast
 

00:15:03.519 --> 00:15:06.310 align:start position:0%
that's why we had to explicitly cast
this<00:15:03.680><c> to</c><00:15:03.839><c> a</c><00:15:03.920><c> float</c><00:15:04.480><c> so</c><00:15:04.639><c> that</c><00:15:04.720><c> we</c><00:15:04.800><c> can</c><00:15:04.959><c> multiply</c>

00:15:06.310 --> 00:15:06.320 align:start position:0%
this to a float so that we can multiply
 

00:15:06.320 --> 00:15:09.350 align:start position:0%
this to a float so that we can multiply
now<00:15:06.880><c> the</c><00:15:07.120><c> output</c><00:15:07.519><c> actually</c><00:15:07.920><c> here</c>

00:15:09.350 --> 00:15:09.360 align:start position:0%
now the output actually here
 

00:15:09.360 --> 00:15:11.269 align:start position:0%
now the output actually here
is<00:15:09.600><c> identical</c>

00:15:11.269 --> 00:15:11.279 align:start position:0%
is identical
 

00:15:11.279 --> 00:15:12.710 align:start position:0%
is identical
and<00:15:11.440><c> that</c><00:15:11.680><c> it's</c><00:15:11.920><c> identical</c><00:15:12.399><c> because</c><00:15:12.560><c> of</c><00:15:12.639><c> the</c>

00:15:12.710 --> 00:15:12.720 align:start position:0%
and that it's identical because of the
 

00:15:12.720 --> 00:15:15.030 align:start position:0%
and that it's identical because of the
way<00:15:12.880><c> the</c><00:15:12.959><c> matrix</c><00:15:13.519><c> multiplication</c><00:15:14.240><c> here</c><00:15:14.480><c> works</c>

00:15:15.030 --> 00:15:15.040 align:start position:0%
way the matrix multiplication here works
 

00:15:15.040 --> 00:15:17.269 align:start position:0%
way the matrix multiplication here works
we<00:15:15.199><c> have</c><00:15:15.360><c> the</c><00:15:15.519><c> one</c><00:15:15.680><c> hot</c><00:15:16.320><c> um</c><00:15:16.800><c> vector</c>

00:15:17.269 --> 00:15:17.279 align:start position:0%
we have the one hot um vector
 

00:15:17.279 --> 00:15:19.829 align:start position:0%
we have the one hot um vector
multiplying<00:15:17.920><c> columns</c><00:15:18.480><c> of</c><00:15:19.120><c> c</c>

00:15:19.829 --> 00:15:19.839 align:start position:0%
multiplying columns of c
 

00:15:19.839 --> 00:15:21.670 align:start position:0%
multiplying columns of c
and<00:15:20.000><c> because</c><00:15:20.240><c> of</c><00:15:20.399><c> all</c><00:15:20.480><c> the</c><00:15:20.639><c> zeros</c><00:15:21.440><c> they</c>

00:15:21.670 --> 00:15:21.680 align:start position:0%
and because of all the zeros they
 

00:15:21.680 --> 00:15:23.509 align:start position:0%
and because of all the zeros they
actually<00:15:22.000><c> end</c><00:15:22.160><c> up</c><00:15:22.320><c> masking</c><00:15:22.800><c> out</c><00:15:23.120><c> everything</c>

00:15:23.509 --> 00:15:23.519 align:start position:0%
actually end up masking out everything
 

00:15:23.519 --> 00:15:25.590 align:start position:0%
actually end up masking out everything
in<00:15:23.680><c> c</c><00:15:24.000><c> except</c><00:15:24.320><c> for</c><00:15:24.399><c> the</c><00:15:24.560><c> fifth</c><00:15:24.880><c> row</c><00:15:25.279><c> which</c><00:15:25.440><c> is</c>

00:15:25.590 --> 00:15:25.600 align:start position:0%
in c except for the fifth row which is
 

00:15:25.600 --> 00:15:27.189 align:start position:0%
in c except for the fifth row which is
plucked<00:15:26.000><c> out</c>

00:15:27.189 --> 00:15:27.199 align:start position:0%
plucked out
 

00:15:27.199 --> 00:15:28.790 align:start position:0%
plucked out
and<00:15:27.360><c> so</c><00:15:27.600><c> we</c><00:15:27.760><c> actually</c><00:15:28.079><c> arrive</c><00:15:28.320><c> at</c><00:15:28.480><c> the</c><00:15:28.560><c> same</c>

00:15:28.790 --> 00:15:28.800 align:start position:0%
and so we actually arrive at the same
 

00:15:28.800 --> 00:15:29.829 align:start position:0%
and so we actually arrive at the same
result

00:15:29.829 --> 00:15:29.839 align:start position:0%
result
 

00:15:29.839 --> 00:15:31.350 align:start position:0%
result
and<00:15:30.000><c> that</c><00:15:30.160><c> tells</c><00:15:30.399><c> you</c><00:15:30.560><c> that</c>

00:15:31.350 --> 00:15:31.360 align:start position:0%
and that tells you that
 

00:15:31.360 --> 00:15:33.509 align:start position:0%
and that tells you that
here<00:15:31.600><c> we</c><00:15:31.760><c> can</c><00:15:32.000><c> interpret</c><00:15:32.399><c> this</c><00:15:32.639><c> first</c>

00:15:33.509 --> 00:15:33.519 align:start position:0%
here we can interpret this first
 

00:15:33.519 --> 00:15:35.590 align:start position:0%
here we can interpret this first
piece<00:15:33.760><c> here</c><00:15:34.079><c> this</c><00:15:34.320><c> embedding</c><00:15:34.720><c> of</c><00:15:34.800><c> the</c><00:15:34.959><c> integer</c>

00:15:35.590 --> 00:15:35.600 align:start position:0%
piece here this embedding of the integer
 

00:15:35.600 --> 00:15:37.590 align:start position:0%
piece here this embedding of the integer
we<00:15:35.760><c> can</c><00:15:35.839><c> either</c><00:15:36.160><c> think</c><00:15:36.320><c> of</c><00:15:36.480><c> it</c><00:15:36.639><c> as</c><00:15:36.959><c> the</c><00:15:37.120><c> integer</c>

00:15:37.590 --> 00:15:37.600 align:start position:0%
we can either think of it as the integer
 

00:15:37.600 --> 00:15:40.069 align:start position:0%
we can either think of it as the integer
indexing<00:15:38.079><c> into</c><00:15:38.240><c> a</c><00:15:38.320><c> lookup</c><00:15:38.639><c> table</c><00:15:38.959><c> c</c><00:15:39.839><c> but</c>

00:15:40.069 --> 00:15:40.079 align:start position:0%
indexing into a lookup table c but
 

00:15:40.079 --> 00:15:42.069 align:start position:0%
indexing into a lookup table c but
equivalently<00:15:40.800><c> we</c><00:15:40.959><c> can</c><00:15:41.120><c> also</c><00:15:41.360><c> think</c><00:15:41.600><c> of</c><00:15:41.760><c> this</c>

00:15:42.069 --> 00:15:42.079 align:start position:0%
equivalently we can also think of this
 

00:15:42.079 --> 00:15:44.389 align:start position:0%
equivalently we can also think of this
little<00:15:42.320><c> piece</c><00:15:42.560><c> here</c><00:15:42.800><c> as</c><00:15:42.959><c> a</c><00:15:43.199><c> first</c><00:15:43.839><c> layer</c><00:15:44.240><c> of</c>

00:15:44.389 --> 00:15:44.399 align:start position:0%
little piece here as a first layer of
 

00:15:44.399 --> 00:15:46.389 align:start position:0%
little piece here as a first layer of
this<00:15:44.720><c> bigger</c><00:15:45.040><c> neural</c><00:15:45.360><c> net</c>

00:15:46.389 --> 00:15:46.399 align:start position:0%
this bigger neural net
 

00:15:46.399 --> 00:15:48.949 align:start position:0%
this bigger neural net
this<00:15:46.639><c> layer</c><00:15:47.040><c> here</c><00:15:47.680><c> has</c><00:15:47.920><c> neurons</c><00:15:48.399><c> that</c><00:15:48.560><c> have</c><00:15:48.720><c> no</c>

00:15:48.949 --> 00:15:48.959 align:start position:0%
this layer here has neurons that have no
 

00:15:48.959 --> 00:15:50.710 align:start position:0%
this layer here has neurons that have no
non-linearity<00:15:49.680><c> there's</c><00:15:49.839><c> no</c><00:15:50.000><c> 10h</c><00:15:50.480><c> they're</c>

00:15:50.710 --> 00:15:50.720 align:start position:0%
non-linearity there's no 10h they're
 

00:15:50.720 --> 00:15:52.790 align:start position:0%
non-linearity there's no 10h they're
just<00:15:50.880><c> linear</c><00:15:51.279><c> neurons</c><00:15:52.240><c> and</c><00:15:52.320><c> their</c><00:15:52.560><c> weight</c>

00:15:52.790 --> 00:15:52.800 align:start position:0%
just linear neurons and their weight
 

00:15:52.800 --> 00:15:55.430 align:start position:0%
just linear neurons and their weight
matrix<00:15:53.440><c> is</c><00:15:54.000><c> c</c>

00:15:55.430 --> 00:15:55.440 align:start position:0%
matrix is c
 

00:15:55.440 --> 00:15:57.749 align:start position:0%
matrix is c
and<00:15:55.600><c> then</c><00:15:56.000><c> we</c><00:15:56.160><c> are</c><00:15:56.399><c> encoding</c><00:15:56.880><c> integers</c><00:15:57.519><c> into</c>

00:15:57.749 --> 00:15:57.759 align:start position:0%
and then we are encoding integers into
 

00:15:57.759 --> 00:15:59.509 align:start position:0%
and then we are encoding integers into
one<00:15:58.000><c> hot</c><00:15:58.320><c> and</c><00:15:58.480><c> feeding</c><00:15:58.800><c> those</c><00:15:58.959><c> into</c><00:15:59.199><c> a</c><00:15:59.279><c> neural</c>

00:15:59.509 --> 00:15:59.519 align:start position:0%
one hot and feeding those into a neural
 

00:15:59.519 --> 00:16:01.430 align:start position:0%
one hot and feeding those into a neural
net<00:16:00.000><c> and</c><00:16:00.079><c> this</c><00:16:00.240><c> first</c><00:16:00.480><c> layer</c><00:16:00.800><c> basically</c>

00:16:01.430 --> 00:16:01.440 align:start position:0%
net and this first layer basically
 

00:16:01.440 --> 00:16:02.629 align:start position:0%
net and this first layer basically
embeds<00:16:01.759><c> them</c>

00:16:02.629 --> 00:16:02.639 align:start position:0%
embeds them
 

00:16:02.639 --> 00:16:04.389 align:start position:0%
embeds them
so<00:16:02.800><c> those</c><00:16:02.959><c> are</c><00:16:03.120><c> two</c><00:16:03.279><c> equivalent</c><00:16:03.839><c> ways</c><00:16:04.160><c> of</c>

00:16:04.389 --> 00:16:04.399 align:start position:0%
so those are two equivalent ways of
 

00:16:04.399 --> 00:16:06.150 align:start position:0%
so those are two equivalent ways of
doing<00:16:04.639><c> the</c><00:16:04.720><c> same</c><00:16:04.959><c> thing</c><00:16:05.440><c> we're</c><00:16:05.680><c> just</c><00:16:05.839><c> going</c><00:16:06.000><c> to</c>

00:16:06.150 --> 00:16:06.160 align:start position:0%
doing the same thing we're just going to
 

00:16:06.160 --> 00:16:08.230 align:start position:0%
doing the same thing we're just going to
index<00:16:06.480><c> because</c><00:16:06.720><c> it's</c><00:16:06.880><c> much</c><00:16:07.040><c> much</c><00:16:07.199><c> faster</c><00:16:08.000><c> and</c>

00:16:08.230 --> 00:16:08.240 align:start position:0%
index because it's much much faster and
 

00:16:08.240 --> 00:16:09.269 align:start position:0%
index because it's much much faster and
we're<00:16:08.399><c> going</c><00:16:08.560><c> to</c><00:16:08.720><c> discard</c><00:16:09.120><c> this</c>

00:16:09.269 --> 00:16:09.279 align:start position:0%
we're going to discard this
 

00:16:09.279 --> 00:16:12.389 align:start position:0%
we're going to discard this
interpretation<00:16:10.000><c> of</c><00:16:10.240><c> one</c><00:16:10.480><c> hot</c><00:16:11.279><c> inputs</c><00:16:12.160><c> into</c>

00:16:12.389 --> 00:16:12.399 align:start position:0%
interpretation of one hot inputs into
 

00:16:12.399 --> 00:16:14.150 align:start position:0%
interpretation of one hot inputs into
neural<00:16:12.639><c> nets</c><00:16:13.199><c> and</c><00:16:13.360><c> we're</c><00:16:13.519><c> just</c><00:16:13.680><c> going</c><00:16:13.839><c> to</c>

00:16:14.150 --> 00:16:14.160 align:start position:0%
neural nets and we're just going to
 

00:16:14.160 --> 00:16:16.230 align:start position:0%
neural nets and we're just going to
index<00:16:14.560><c> integers</c><00:16:15.040><c> and</c><00:16:15.279><c> create</c><00:16:15.680><c> and</c><00:16:15.920><c> use</c>

00:16:16.230 --> 00:16:16.240 align:start position:0%
index integers and create and use
 

00:16:16.240 --> 00:16:18.310 align:start position:0%
index integers and create and use
embedding<00:16:16.560><c> tables</c><00:16:17.279><c> now</c><00:16:17.600><c> embedding</c><00:16:17.920><c> a</c><00:16:18.000><c> single</c>

00:16:18.310 --> 00:16:18.320 align:start position:0%
embedding tables now embedding a single
 

00:16:18.320 --> 00:16:20.870 align:start position:0%
embedding tables now embedding a single
integer<00:16:18.720><c> like</c><00:16:18.959><c> 5</c><00:16:19.360><c> is</c><00:16:19.519><c> easy</c><00:16:19.839><c> enough</c><00:16:20.560><c> we</c><00:16:20.720><c> can</c>

00:16:20.870 --> 00:16:20.880 align:start position:0%
integer like 5 is easy enough we can
 

00:16:20.880 --> 00:16:23.269 align:start position:0%
integer like 5 is easy enough we can
simply<00:16:21.759><c> ask</c><00:16:22.000><c> pytorch</c><00:16:22.480><c> to</c><00:16:22.560><c> retrieve</c><00:16:22.880><c> the</c><00:16:23.040><c> fifth</c>

00:16:23.269 --> 00:16:23.279 align:start position:0%
simply ask pytorch to retrieve the fifth
 

00:16:23.279 --> 00:16:24.470 align:start position:0%
simply ask pytorch to retrieve the fifth
row<00:16:23.519><c> of</c><00:16:23.600><c> c</c>

00:16:24.470 --> 00:16:24.480 align:start position:0%
row of c
 

00:16:24.480 --> 00:16:27.670 align:start position:0%
row of c
or<00:16:24.800><c> the</c><00:16:24.959><c> row</c><00:16:25.199><c> index</c><00:16:25.519><c> five</c><00:16:26.000><c> of</c><00:16:26.240><c> c</c>

00:16:27.670 --> 00:16:27.680 align:start position:0%
or the row index five of c
 

00:16:27.680 --> 00:16:30.069 align:start position:0%
or the row index five of c
but<00:16:28.000><c> how</c><00:16:28.160><c> do</c><00:16:28.320><c> we</c><00:16:28.800><c> simultaneously</c><00:16:29.519><c> embed</c><00:16:29.920><c> all</c>

00:16:30.069 --> 00:16:30.079 align:start position:0%
but how do we simultaneously embed all
 

00:16:30.079 --> 00:16:32.870 align:start position:0%
but how do we simultaneously embed all
of<00:16:30.160><c> these</c><00:16:30.399><c> 32</c><00:16:30.959><c> by</c><00:16:31.199><c> three</c><00:16:31.759><c> integers</c><00:16:32.320><c> stored</c><00:16:32.720><c> in</c>

00:16:32.870 --> 00:16:32.880 align:start position:0%
of these 32 by three integers stored in
 

00:16:32.880 --> 00:16:34.629 align:start position:0%
of these 32 by three integers stored in
array<00:16:33.360><c> x</c>

00:16:34.629 --> 00:16:34.639 align:start position:0%
array x
 

00:16:34.639 --> 00:16:36.310 align:start position:0%
array x
luckily<00:16:35.040><c> pytorch</c><00:16:35.440><c> indexing</c><00:16:35.839><c> is</c><00:16:35.920><c> fairly</c>

00:16:36.310 --> 00:16:36.320 align:start position:0%
luckily pytorch indexing is fairly
 

00:16:36.320 --> 00:16:38.150 align:start position:0%
luckily pytorch indexing is fairly
flexible<00:16:36.800><c> and</c><00:16:36.959><c> quite</c><00:16:37.199><c> powerful</c>

00:16:38.150 --> 00:16:38.160 align:start position:0%
flexible and quite powerful
 

00:16:38.160 --> 00:16:41.110 align:start position:0%
flexible and quite powerful
so<00:16:38.800><c> it</c><00:16:38.959><c> doesn't</c><00:16:39.279><c> just</c><00:16:39.519><c> work</c><00:16:39.759><c> to</c>

00:16:41.110 --> 00:16:41.120 align:start position:0%
so it doesn't just work to
 

00:16:41.120 --> 00:16:44.389 align:start position:0%
so it doesn't just work to
ask<00:16:41.519><c> for</c><00:16:41.920><c> a</c><00:16:42.000><c> single</c><00:16:42.560><c> element</c><00:16:43.199><c> five</c><00:16:43.519><c> like</c><00:16:43.680><c> this</c>

00:16:44.389 --> 00:16:44.399 align:start position:0%
ask for a single element five like this
 

00:16:44.399 --> 00:16:46.389 align:start position:0%
ask for a single element five like this
you<00:16:44.480><c> can</c><00:16:44.639><c> actually</c><00:16:44.959><c> index</c><00:16:45.279><c> using</c><00:16:45.600><c> lists</c><00:16:46.240><c> so</c>

00:16:46.389 --> 00:16:46.399 align:start position:0%
you can actually index using lists so
 

00:16:46.399 --> 00:16:48.470 align:start position:0%
you can actually index using lists so
for<00:16:46.560><c> example</c><00:16:46.880><c> we</c><00:16:47.040><c> can</c><00:16:47.199><c> get</c><00:16:47.440><c> the</c><00:16:47.600><c> rows</c><00:16:48.000><c> five</c><00:16:48.240><c> six</c>

00:16:48.470 --> 00:16:48.480 align:start position:0%
for example we can get the rows five six
 

00:16:48.480 --> 00:16:49.430 align:start position:0%
for example we can get the rows five six
and<00:16:48.639><c> seven</c>

00:16:49.430 --> 00:16:49.440 align:start position:0%
and seven
 

00:16:49.440 --> 00:16:51.829 align:start position:0%
and seven
and<00:16:50.240><c> this</c><00:16:50.480><c> will</c><00:16:50.639><c> just</c><00:16:50.800><c> work</c><00:16:51.040><c> like</c><00:16:51.199><c> this</c><00:16:51.519><c> we</c><00:16:51.680><c> can</c>

00:16:51.829 --> 00:16:51.839 align:start position:0%
and this will just work like this we can
 

00:16:51.839 --> 00:16:53.749 align:start position:0%
and this will just work like this we can
index<00:16:52.160><c> with</c><00:16:52.320><c> a</c><00:16:52.399><c> list</c>

00:16:53.749 --> 00:16:53.759 align:start position:0%
index with a list
 

00:16:53.759 --> 00:16:55.189 align:start position:0%
index with a list
it<00:16:53.839><c> doesn't</c><00:16:54.079><c> just</c><00:16:54.240><c> have</c><00:16:54.399><c> to</c><00:16:54.480><c> be</c><00:16:54.639><c> a</c><00:16:54.720><c> list</c><00:16:54.959><c> it</c><00:16:55.040><c> can</c>

00:16:55.189 --> 00:16:55.199 align:start position:0%
it doesn't just have to be a list it can
 

00:16:55.199 --> 00:16:58.470 align:start position:0%
it doesn't just have to be a list it can
also<00:16:55.360><c> be</c><00:16:55.600><c> a</c><00:16:55.839><c> actually</c><00:16:56.160><c> a</c><00:16:56.320><c> tensor</c><00:16:57.040><c> of</c><00:16:57.360><c> integers</c>

00:16:58.470 --> 00:16:58.480 align:start position:0%
also be a actually a tensor of integers
 

00:16:58.480 --> 00:17:00.550 align:start position:0%
also be a actually a tensor of integers
and<00:16:58.639><c> we</c><00:16:58.720><c> can</c><00:16:58.880><c> index</c><00:16:59.199><c> with</c><00:16:59.360><c> that</c>

00:17:00.550 --> 00:17:00.560 align:start position:0%
and we can index with that
 

00:17:00.560 --> 00:17:03.590 align:start position:0%
and we can index with that
so<00:17:00.720><c> this</c><00:17:00.959><c> is</c><00:17:01.120><c> a</c><00:17:01.440><c> integer</c><00:17:01.839><c> tensor</c><00:17:02.240><c> 567</c><00:17:03.279><c> and</c><00:17:03.440><c> this</c>

00:17:03.590 --> 00:17:03.600 align:start position:0%
so this is a integer tensor 567 and this
 

00:17:03.600 --> 00:17:05.909 align:start position:0%
so this is a integer tensor 567 and this
will<00:17:03.920><c> just</c><00:17:04.240><c> work</c><00:17:04.559><c> as</c><00:17:04.640><c> well</c>

00:17:05.909 --> 00:17:05.919 align:start position:0%
will just work as well
 

00:17:05.919 --> 00:17:08.390 align:start position:0%
will just work as well
in<00:17:06.079><c> fact</c><00:17:06.480><c> we</c><00:17:06.640><c> can</c><00:17:06.799><c> also</c><00:17:07.360><c> for</c><00:17:07.520><c> example</c><00:17:07.839><c> repeat</c>

00:17:08.390 --> 00:17:08.400 align:start position:0%
in fact we can also for example repeat
 

00:17:08.400 --> 00:17:10.949 align:start position:0%
in fact we can also for example repeat
row<00:17:08.640><c> 7</c><00:17:09.039><c> and</c><00:17:09.199><c> retrieve</c><00:17:09.600><c> it</c><00:17:09.679><c> multiple</c><00:17:10.079><c> times</c>

00:17:10.949 --> 00:17:10.959 align:start position:0%
row 7 and retrieve it multiple times
 

00:17:10.959 --> 00:17:12.150 align:start position:0%
row 7 and retrieve it multiple times
and

00:17:12.150 --> 00:17:12.160 align:start position:0%
and
 

00:17:12.160 --> 00:17:14.150 align:start position:0%
and
that<00:17:12.400><c> same</c><00:17:12.640><c> index</c><00:17:12.959><c> will</c><00:17:13.120><c> just</c><00:17:13.360><c> get</c><00:17:13.679><c> embedded</c>

00:17:14.150 --> 00:17:14.160 align:start position:0%
that same index will just get embedded
 

00:17:14.160 --> 00:17:16.069 align:start position:0%
that same index will just get embedded
multiple<00:17:14.559><c> times</c><00:17:14.880><c> here</c>

00:17:16.069 --> 00:17:16.079 align:start position:0%
multiple times here
 

00:17:16.079 --> 00:17:17.429 align:start position:0%
multiple times here
so<00:17:16.319><c> here</c><00:17:16.480><c> we</c><00:17:16.640><c> are</c><00:17:16.799><c> indexing</c><00:17:17.199><c> with</c><00:17:17.360><c> a</c>

00:17:17.429 --> 00:17:17.439 align:start position:0%
so here we are indexing with a
 

00:17:17.439 --> 00:17:18.870 align:start position:0%
so here we are indexing with a
one-dimensional

00:17:18.870 --> 00:17:18.880 align:start position:0%
one-dimensional
 

00:17:18.880 --> 00:17:21.429 align:start position:0%
one-dimensional
tensor<00:17:19.520><c> of</c><00:17:19.760><c> integers</c><00:17:20.640><c> but</c><00:17:20.799><c> it</c><00:17:20.880><c> turns</c><00:17:21.199><c> out</c><00:17:21.280><c> that</c>

00:17:21.429 --> 00:17:21.439 align:start position:0%
tensor of integers but it turns out that
 

00:17:21.439 --> 00:17:22.829 align:start position:0%
tensor of integers but it turns out that
you<00:17:21.600><c> can</c><00:17:21.679><c> also</c><00:17:22.000><c> index</c><00:17:22.400><c> with</c>

00:17:22.829 --> 00:17:22.839 align:start position:0%
you can also index with
 

00:17:22.839 --> 00:17:25.110 align:start position:0%
you can also index with
multi-dimensional<00:17:23.919><c> tensors</c><00:17:24.319><c> of</c><00:17:24.400><c> integers</c>

00:17:25.110 --> 00:17:25.120 align:start position:0%
multi-dimensional tensors of integers
 

00:17:25.120 --> 00:17:27.510 align:start position:0%
multi-dimensional tensors of integers
here<00:17:25.280><c> we</c><00:17:25.439><c> have</c><00:17:25.520><c> a</c><00:17:25.600><c> two-dimensional</c><00:17:26.640><c> in</c><00:17:27.199><c> tensor</c>

00:17:27.510 --> 00:17:27.520 align:start position:0%
here we have a two-dimensional in tensor
 

00:17:27.520 --> 00:17:30.470 align:start position:0%
here we have a two-dimensional in tensor
of<00:17:27.679><c> integers</c><00:17:28.559><c> so</c><00:17:28.720><c> we</c><00:17:28.880><c> can</c><00:17:29.360><c> simply</c><00:17:29.679><c> just</c><00:17:29.840><c> do</c><00:17:30.160><c> c</c>

00:17:30.470 --> 00:17:30.480 align:start position:0%
of integers so we can simply just do c
 

00:17:30.480 --> 00:17:34.630 align:start position:0%
of integers so we can simply just do c
at<00:17:30.840><c> x</c><00:17:32.080><c> and</c><00:17:32.240><c> this</c><00:17:32.720><c> just</c><00:17:32.960><c> works</c>

00:17:34.630 --> 00:17:34.640 align:start position:0%
at x and this just works
 

00:17:34.640 --> 00:17:36.150 align:start position:0%
at x and this just works
and<00:17:34.720><c> the</c><00:17:34.880><c> shape</c><00:17:35.120><c> of</c><00:17:35.200><c> this</c>

00:17:36.150 --> 00:17:36.160 align:start position:0%
and the shape of this
 

00:17:36.160 --> 00:17:37.190 align:start position:0%
and the shape of this
is

00:17:37.190 --> 00:17:37.200 align:start position:0%
is
 

00:17:37.200 --> 00:17:40.150 align:start position:0%
is
32<00:17:37.600><c> by</c><00:17:37.840><c> 3</c><00:17:38.480><c> which</c><00:17:38.720><c> is</c><00:17:38.799><c> the</c><00:17:38.960><c> original</c><00:17:39.360><c> shape</c><00:17:40.000><c> and</c>

00:17:40.150 --> 00:17:40.160 align:start position:0%
32 by 3 which is the original shape and
 

00:17:40.160 --> 00:17:41.669 align:start position:0%
32 by 3 which is the original shape and
now<00:17:40.320><c> for</c><00:17:40.480><c> every</c><00:17:40.640><c> one</c><00:17:40.799><c> of</c><00:17:40.880><c> those</c><00:17:40.960><c> 32</c><00:17:41.360><c> by</c><00:17:41.520><c> 3</c>

00:17:41.669 --> 00:17:41.679 align:start position:0%
now for every one of those 32 by 3
 

00:17:41.679 --> 00:17:43.750 align:start position:0%
now for every one of those 32 by 3
integers<00:17:42.320><c> we've</c><00:17:42.559><c> retrieved</c><00:17:43.039><c> the</c><00:17:43.200><c> embedding</c>

00:17:43.750 --> 00:17:43.760 align:start position:0%
integers we've retrieved the embedding
 

00:17:43.760 --> 00:17:44.830 align:start position:0%
integers we've retrieved the embedding
vector

00:17:44.830 --> 00:17:44.840 align:start position:0%
vector
 

00:17:44.840 --> 00:17:48.549 align:start position:0%
vector
here<00:17:45.919><c> so</c><00:17:46.080><c> basically</c><00:17:47.039><c> we</c><00:17:47.280><c> have</c><00:17:47.440><c> that</c><00:17:48.160><c> as</c><00:17:48.320><c> an</c>

00:17:48.549 --> 00:17:48.559 align:start position:0%
here so basically we have that as an
 

00:17:48.559 --> 00:17:49.750 align:start position:0%
here so basically we have that as an
example

00:17:49.750 --> 00:17:49.760 align:start position:0%
example
 

00:17:49.760 --> 00:17:54.310 align:start position:0%
example
the<00:17:50.400><c> 13th</c><00:17:51.280><c> or</c><00:17:51.520><c> example</c><00:17:52.320><c> index</c><00:17:52.720><c> 13</c>

00:17:54.310 --> 00:17:54.320 align:start position:0%
the 13th or example index 13
 

00:17:54.320 --> 00:17:57.190 align:start position:0%
the 13th or example index 13
the<00:17:54.480><c> second</c><00:17:54.799><c> dimension</c><00:17:55.679><c> is</c><00:17:55.840><c> the</c><00:17:56.000><c> integer</c><00:17:56.640><c> 1</c><00:17:57.039><c> as</c>

00:17:57.190 --> 00:17:57.200 align:start position:0%
the second dimension is the integer 1 as
 

00:17:57.200 --> 00:17:58.710 align:start position:0%
the second dimension is the integer 1 as
an<00:17:57.280><c> example</c>

00:17:58.710 --> 00:17:58.720 align:start position:0%
an example
 

00:17:58.720 --> 00:17:59.669 align:start position:0%
an example
and<00:17:58.880><c> so</c>

00:17:59.669 --> 00:17:59.679 align:start position:0%
and so
 

00:17:59.679 --> 00:18:02.789 align:start position:0%
and so
here<00:18:00.240><c> if</c><00:18:00.400><c> we</c><00:18:00.880><c> do</c><00:18:01.120><c> c</c><00:18:01.360><c> of</c><00:18:01.520><c> x</c><00:18:02.000><c> which</c><00:18:02.160><c> gives</c><00:18:02.400><c> us</c><00:18:02.559><c> that</c>

00:18:02.789 --> 00:18:02.799 align:start position:0%
here if we do c of x which gives us that
 

00:18:02.799 --> 00:18:05.830 align:start position:0%
here if we do c of x which gives us that
array<00:18:03.600><c> and</c><00:18:03.679><c> then</c><00:18:03.840><c> we</c><00:18:04.000><c> index</c><00:18:04.400><c> into</c><00:18:04.640><c> 13</c><00:18:04.960><c> by</c><00:18:05.120><c> two</c>

00:18:05.830 --> 00:18:05.840 align:start position:0%
array and then we index into 13 by two
 

00:18:05.840 --> 00:18:07.110 align:start position:0%
array and then we index into 13 by two
of<00:18:06.000><c> that</c><00:18:06.160><c> array</c>

00:18:07.110 --> 00:18:07.120 align:start position:0%
of that array
 

00:18:07.120 --> 00:18:09.590 align:start position:0%
of that array
then<00:18:07.360><c> we</c><00:18:07.679><c> we</c><00:18:07.840><c> get</c><00:18:08.000><c> the</c><00:18:08.160><c> embedding</c>

00:18:09.590 --> 00:18:09.600 align:start position:0%
then we we get the embedding
 

00:18:09.600 --> 00:18:10.470 align:start position:0%
then we we get the embedding
here

00:18:10.470 --> 00:18:10.480 align:start position:0%
here
 

00:18:10.480 --> 00:18:12.070 align:start position:0%
here
and<00:18:10.559><c> you</c><00:18:10.720><c> can</c><00:18:10.799><c> verify</c><00:18:11.280><c> that</c>

00:18:12.070 --> 00:18:12.080 align:start position:0%
and you can verify that
 

00:18:12.080 --> 00:18:12.789 align:start position:0%
and you can verify that
c

00:18:12.789 --> 00:18:12.799 align:start position:0%
c
 

00:18:12.799 --> 00:18:15.590 align:start position:0%
c
at<00:18:13.039><c> one</c><00:18:14.240><c> which</c><00:18:14.480><c> is</c><00:18:14.640><c> the</c><00:18:14.799><c> integer</c><00:18:15.280><c> at</c><00:18:15.360><c> that</c>

00:18:15.590 --> 00:18:15.600 align:start position:0%
at one which is the integer at that
 

00:18:15.600 --> 00:18:19.830 align:start position:0%
at one which is the integer at that
location<00:18:16.559><c> is</c><00:18:16.880><c> indeed</c><00:18:17.600><c> equal</c><00:18:17.919><c> to</c><00:18:18.080><c> this</c>

00:18:19.830 --> 00:18:19.840 align:start position:0%
location is indeed equal to this
 

00:18:19.840 --> 00:18:21.669 align:start position:0%
location is indeed equal to this
you<00:18:20.000><c> see</c><00:18:20.160><c> they're</c><00:18:20.320><c> equal</c>

00:18:21.669 --> 00:18:21.679 align:start position:0%
you see they're equal
 

00:18:21.679 --> 00:18:23.510 align:start position:0%
you see they're equal
so<00:18:21.840><c> basically</c><00:18:22.240><c> long</c><00:18:22.480><c> story</c><00:18:22.720><c> short</c><00:18:23.039><c> pytorch</c>

00:18:23.510 --> 00:18:23.520 align:start position:0%
so basically long story short pytorch
 

00:18:23.520 --> 00:18:26.549 align:start position:0%
so basically long story short pytorch
indexing<00:18:24.160><c> is</c><00:18:24.320><c> awesome</c><00:18:25.120><c> and</c><00:18:25.520><c> to</c><00:18:25.760><c> embed</c>

00:18:26.549 --> 00:18:26.559 align:start position:0%
indexing is awesome and to embed
 

00:18:26.559 --> 00:18:29.430 align:start position:0%
indexing is awesome and to embed
simultaneously<00:18:28.000><c> all</c><00:18:28.240><c> of</c><00:18:28.320><c> the</c><00:18:28.559><c> integers</c><00:18:28.960><c> in</c><00:18:29.200><c> x</c>

00:18:29.430 --> 00:18:29.440 align:start position:0%
simultaneously all of the integers in x
 

00:18:29.440 --> 00:18:31.270 align:start position:0%
simultaneously all of the integers in x
we<00:18:29.600><c> can</c><00:18:29.760><c> simply</c><00:18:30.000><c> do</c><00:18:30.160><c> c</c><00:18:30.400><c> of</c><00:18:30.559><c> x</c>

00:18:31.270 --> 00:18:31.280 align:start position:0%
we can simply do c of x
 

00:18:31.280 --> 00:18:33.110 align:start position:0%
we can simply do c of x
and<00:18:31.440><c> that</c><00:18:31.600><c> is</c><00:18:31.760><c> our</c><00:18:31.919><c> embedding</c>

00:18:33.110 --> 00:18:33.120 align:start position:0%
and that is our embedding
 

00:18:33.120 --> 00:18:35.029 align:start position:0%
and that is our embedding
and<00:18:33.600><c> that</c><00:18:33.760><c> just</c><00:18:34.000><c> works</c>

00:18:35.029 --> 00:18:35.039 align:start position:0%
and that just works
 

00:18:35.039 --> 00:18:37.110 align:start position:0%
and that just works
now<00:18:35.200><c> let's</c><00:18:35.360><c> construct</c><00:18:36.080><c> this</c><00:18:36.320><c> layer</c><00:18:36.640><c> here</c><00:18:37.039><c> the</c>

00:18:37.110 --> 00:18:37.120 align:start position:0%
now let's construct this layer here the
 

00:18:37.120 --> 00:18:38.789 align:start position:0%
now let's construct this layer here the
hidden<00:18:37.440><c> layer</c>

00:18:38.789 --> 00:18:38.799 align:start position:0%
hidden layer
 

00:18:38.799 --> 00:18:42.549 align:start position:0%
hidden layer
so<00:18:38.960><c> we</c><00:18:39.039><c> have</c><00:18:39.280><c> that</c><00:18:39.600><c> w1</c><00:18:40.240><c> as</c><00:18:40.400><c> i'll</c><00:18:40.559><c> call</c><00:18:40.799><c> it</c><00:18:42.160><c> are</c>

00:18:42.549 --> 00:18:42.559 align:start position:0%
so we have that w1 as i'll call it are
 

00:18:42.559 --> 00:18:44.789 align:start position:0%
so we have that w1 as i'll call it are
these<00:18:42.960><c> weights</c><00:18:43.600><c> which</c><00:18:43.840><c> we</c><00:18:44.080><c> will</c><00:18:44.320><c> initialize</c>

00:18:44.789 --> 00:18:44.799 align:start position:0%
these weights which we will initialize
 

00:18:44.799 --> 00:18:45.990 align:start position:0%
these weights which we will initialize
randomly

00:18:45.990 --> 00:18:46.000 align:start position:0%
randomly
 

00:18:46.000 --> 00:18:48.390 align:start position:0%
randomly
now<00:18:46.240><c> the</c><00:18:46.320><c> number</c><00:18:46.559><c> of</c><00:18:46.880><c> inputs</c><00:18:47.280><c> to</c><00:18:47.440><c> this</c><00:18:47.679><c> layer</c>

00:18:48.390 --> 00:18:48.400 align:start position:0%
now the number of inputs to this layer
 

00:18:48.400 --> 00:18:49.590 align:start position:0%
now the number of inputs to this layer
is<00:18:48.559><c> going</c><00:18:48.720><c> to</c><00:18:48.880><c> be</c>

00:18:49.590 --> 00:18:49.600 align:start position:0%
is going to be
 

00:18:49.600 --> 00:18:51.270 align:start position:0%
is going to be
three<00:18:49.919><c> times</c><00:18:50.240><c> two</c><00:18:50.559><c> right</c><00:18:50.880><c> because</c><00:18:51.039><c> we</c><00:18:51.200><c> have</c>

00:18:51.270 --> 00:18:51.280 align:start position:0%
three times two right because we have
 

00:18:51.280 --> 00:18:52.630 align:start position:0%
three times two right because we have
two<00:18:51.440><c> dimensional</c><00:18:51.840><c> embeddings</c><00:18:52.320><c> and</c><00:18:52.400><c> we</c><00:18:52.480><c> have</c>

00:18:52.630 --> 00:18:52.640 align:start position:0%
two dimensional embeddings and we have
 

00:18:52.640 --> 00:18:53.669 align:start position:0%
two dimensional embeddings and we have
three<00:18:52.880><c> of</c><00:18:52.960><c> them</c>

00:18:53.669 --> 00:18:53.679 align:start position:0%
three of them
 

00:18:53.679 --> 00:18:56.150 align:start position:0%
three of them
so<00:18:53.840><c> the</c><00:18:54.000><c> number</c><00:18:54.160><c> of</c><00:18:54.320><c> inputs</c><00:18:54.720><c> is</c><00:18:55.039><c> 6</c>

00:18:56.150 --> 00:18:56.160 align:start position:0%
so the number of inputs is 6
 

00:18:56.160 --> 00:18:58.390 align:start position:0%
so the number of inputs is 6
and<00:18:56.240><c> the</c><00:18:56.400><c> number</c><00:18:56.640><c> of</c><00:18:56.720><c> neurons</c><00:18:57.200><c> in</c><00:18:57.280><c> this</c><00:18:58.000><c> layer</c>

00:18:58.390 --> 00:18:58.400 align:start position:0%
and the number of neurons in this layer
 

00:18:58.400 --> 00:19:00.230 align:start position:0%
and the number of neurons in this layer
is<00:18:58.720><c> a</c><00:18:58.880><c> variable</c><00:18:59.280><c> up</c><00:18:59.360><c> to</c><00:18:59.600><c> us</c>

00:19:00.230 --> 00:19:00.240 align:start position:0%
is a variable up to us
 

00:19:00.240 --> 00:19:02.870 align:start position:0%
is a variable up to us
let's<00:19:00.480><c> use</c><00:19:00.720><c> 100</c><00:19:01.039><c> neurons</c><00:19:01.440><c> as</c><00:19:01.520><c> an</c><00:19:01.679><c> example</c>

00:19:02.870 --> 00:19:02.880 align:start position:0%
let's use 100 neurons as an example
 

00:19:02.880 --> 00:19:04.630 align:start position:0%
let's use 100 neurons as an example
and<00:19:03.039><c> then</c><00:19:03.520><c> biases</c>

00:19:04.630 --> 00:19:04.640 align:start position:0%
and then biases
 

00:19:04.640 --> 00:19:06.549 align:start position:0%
and then biases
will<00:19:04.880><c> be</c><00:19:05.039><c> also</c><00:19:05.360><c> initialized</c><00:19:05.840><c> randomly</c><00:19:06.240><c> as</c><00:19:06.400><c> an</c>

00:19:06.549 --> 00:19:06.559 align:start position:0%
will be also initialized randomly as an
 

00:19:06.559 --> 00:19:07.510 align:start position:0%
will be also initialized randomly as an
example

00:19:07.510 --> 00:19:07.520 align:start position:0%
example
 

00:19:07.520 --> 00:19:11.190 align:start position:0%
example
and<00:19:07.840><c> let's</c><00:19:08.400><c> and</c><00:19:08.559><c> we</c><00:19:08.720><c> just</c><00:19:08.960><c> need</c><00:19:09.120><c> 100</c><00:19:09.600><c> of</c><00:19:09.679><c> them</c>

00:19:11.190 --> 00:19:11.200 align:start position:0%
and let's and we just need 100 of them
 

00:19:11.200 --> 00:19:13.350 align:start position:0%
and let's and we just need 100 of them
now<00:19:11.360><c> the</c><00:19:11.440><c> problem</c><00:19:11.760><c> with</c><00:19:11.919><c> this</c><00:19:12.240><c> is</c><00:19:12.960><c> we</c><00:19:13.120><c> can't</c>

00:19:13.350 --> 00:19:13.360 align:start position:0%
now the problem with this is we can't
 

00:19:13.360 --> 00:19:15.590 align:start position:0%
now the problem with this is we can't
simply<00:19:14.080><c> normally</c><00:19:14.480><c> we</c><00:19:14.559><c> would</c><00:19:14.720><c> take</c><00:19:14.960><c> the</c><00:19:15.120><c> input</c>

00:19:15.590 --> 00:19:15.600 align:start position:0%
simply normally we would take the input
 

00:19:15.600 --> 00:19:17.510 align:start position:0%
simply normally we would take the input
in<00:19:15.760><c> this</c><00:19:15.919><c> case</c><00:19:16.160><c> that's</c><00:19:16.559><c> embedding</c><00:19:17.280><c> and</c><00:19:17.360><c> we'd</c>

00:19:17.510 --> 00:19:17.520 align:start position:0%
in this case that's embedding and we'd
 

00:19:17.520 --> 00:19:20.549 align:start position:0%
in this case that's embedding and we'd
like<00:19:17.679><c> to</c><00:19:17.840><c> multiply</c><00:19:18.320><c> it</c><00:19:18.880><c> with</c><00:19:19.360><c> these</c><00:19:19.600><c> weights</c>

00:19:20.549 --> 00:19:20.559 align:start position:0%
like to multiply it with these weights
 

00:19:20.559 --> 00:19:22.230 align:start position:0%
like to multiply it with these weights
and<00:19:20.640><c> then</c><00:19:20.799><c> we</c><00:19:20.880><c> would</c><00:19:20.960><c> like</c><00:19:21.120><c> to</c><00:19:21.280><c> add</c><00:19:21.600><c> the</c><00:19:21.760><c> bias</c>

00:19:22.230 --> 00:19:22.240 align:start position:0%
and then we would like to add the bias
 

00:19:22.240 --> 00:19:24.390 align:start position:0%
and then we would like to add the bias
this<00:19:22.480><c> is</c><00:19:22.559><c> roughly</c><00:19:22.880><c> what</c><00:19:22.960><c> we</c><00:19:23.120><c> want</c><00:19:23.280><c> to</c><00:19:23.440><c> do</c>

00:19:24.390 --> 00:19:24.400 align:start position:0%
this is roughly what we want to do
 

00:19:24.400 --> 00:19:25.909 align:start position:0%
this is roughly what we want to do
but<00:19:24.559><c> the</c><00:19:24.640><c> problem</c><00:19:24.960><c> here</c><00:19:25.200><c> is</c><00:19:25.280><c> that</c><00:19:25.679><c> these</c>

00:19:25.909 --> 00:19:25.919 align:start position:0%
but the problem here is that these
 

00:19:25.919 --> 00:19:27.750 align:start position:0%
but the problem here is that these
embeddings<00:19:26.480><c> are</c><00:19:26.720><c> stacked</c><00:19:27.120><c> up</c><00:19:27.520><c> in</c><00:19:27.600><c> the</c>

00:19:27.750 --> 00:19:27.760 align:start position:0%
embeddings are stacked up in the
 

00:19:27.760 --> 00:19:29.909 align:start position:0%
embeddings are stacked up in the
dimensions<00:19:28.320><c> of</c><00:19:28.400><c> this</c><00:19:28.559><c> input</c><00:19:28.799><c> tensor</c>

00:19:29.909 --> 00:19:29.919 align:start position:0%
dimensions of this input tensor
 

00:19:29.919 --> 00:19:31.350 align:start position:0%
dimensions of this input tensor
so<00:19:30.080><c> this</c><00:19:30.320><c> will</c><00:19:30.480><c> not</c><00:19:30.640><c> work</c><00:19:30.880><c> this</c><00:19:31.039><c> matrix</c>

00:19:31.350 --> 00:19:31.360 align:start position:0%
so this will not work this matrix
 

00:19:31.360 --> 00:19:32.870 align:start position:0%
so this will not work this matrix
multiplication<00:19:32.000><c> because</c><00:19:32.240><c> this</c><00:19:32.400><c> is</c><00:19:32.559><c> a</c><00:19:32.640><c> shape</c>

00:19:32.870 --> 00:19:32.880 align:start position:0%
multiplication because this is a shape
 

00:19:32.880 --> 00:19:35.350 align:start position:0%
multiplication because this is a shape
32<00:19:33.280><c> by</c><00:19:33.440><c> 3</c><00:19:33.679><c> by</c><00:19:33.840><c> 2</c><00:19:34.320><c> and</c><00:19:34.480><c> i</c><00:19:34.559><c> can't</c><00:19:34.799><c> multiply</c><00:19:35.200><c> that</c>

00:19:35.350 --> 00:19:35.360 align:start position:0%
32 by 3 by 2 and i can't multiply that
 

00:19:35.360 --> 00:19:37.110 align:start position:0%
32 by 3 by 2 and i can't multiply that
by<00:19:35.520><c> 6</c><00:19:35.760><c> by</c><00:19:35.919><c> 100</c>

00:19:37.110 --> 00:19:37.120 align:start position:0%
by 6 by 100
 

00:19:37.120 --> 00:19:39.990 align:start position:0%
by 6 by 100
so<00:19:37.280><c> somehow</c><00:19:37.679><c> we</c><00:19:37.840><c> need</c><00:19:38.000><c> to</c><00:19:38.080><c> concatenate</c><00:19:39.200><c> these</c>

00:19:39.990 --> 00:19:40.000 align:start position:0%
so somehow we need to concatenate these
 

00:19:40.000 --> 00:19:41.909 align:start position:0%
so somehow we need to concatenate these
inputs<00:19:40.320><c> here</c><00:19:40.559><c> together</c><00:19:41.280><c> so</c><00:19:41.440><c> that</c><00:19:41.520><c> we</c><00:19:41.679><c> can</c><00:19:41.760><c> do</c>

00:19:41.909 --> 00:19:41.919 align:start position:0%
inputs here together so that we can do
 

00:19:41.919 --> 00:19:43.110 align:start position:0%
inputs here together so that we can do
something<00:19:42.160><c> along</c><00:19:42.400><c> these</c><00:19:42.640><c> lines</c><00:19:42.880><c> which</c>

00:19:43.110 --> 00:19:43.120 align:start position:0%
something along these lines which
 

00:19:43.120 --> 00:19:45.029 align:start position:0%
something along these lines which
currently<00:19:43.520><c> does</c><00:19:43.679><c> not</c><00:19:43.919><c> work</c>

00:19:45.029 --> 00:19:45.039 align:start position:0%
currently does not work
 

00:19:45.039 --> 00:19:47.909 align:start position:0%
currently does not work
so<00:19:45.200><c> how</c><00:19:45.360><c> do</c><00:19:45.440><c> we</c><00:19:45.600><c> transform</c><00:19:46.080><c> this</c><00:19:46.400><c> 32</c><00:19:46.880><c> by</c><00:19:47.039><c> 3</c><00:19:47.200><c> by</c><00:19:47.440><c> 2</c>

00:19:47.909 --> 00:19:47.919 align:start position:0%
so how do we transform this 32 by 3 by 2
 

00:19:47.919 --> 00:19:50.710 align:start position:0%
so how do we transform this 32 by 3 by 2
into<00:19:48.240><c> a</c><00:19:48.320><c> 32</c><00:19:48.799><c> by</c><00:19:49.120><c> 6</c><00:19:49.840><c> so</c><00:19:50.000><c> that</c><00:19:50.160><c> we</c><00:19:50.240><c> can</c><00:19:50.400><c> actually</c>

00:19:50.710 --> 00:19:50.720 align:start position:0%
into a 32 by 6 so that we can actually
 

00:19:50.720 --> 00:19:51.830 align:start position:0%
into a 32 by 6 so that we can actually
perform

00:19:51.830 --> 00:19:51.840 align:start position:0%
perform
 

00:19:51.840 --> 00:19:52.789 align:start position:0%
perform
this

00:19:52.789 --> 00:19:52.799 align:start position:0%
this
 

00:19:52.799 --> 00:19:54.630 align:start position:0%
this
multiplication<00:19:53.360><c> over</c><00:19:53.600><c> here</c><00:19:54.160><c> i'd</c><00:19:54.320><c> like</c><00:19:54.480><c> to</c>

00:19:54.630 --> 00:19:54.640 align:start position:0%
multiplication over here i'd like to
 

00:19:54.640 --> 00:19:56.150 align:start position:0%
multiplication over here i'd like to
show<00:19:54.799><c> you</c><00:19:54.880><c> that</c><00:19:55.039><c> there</c><00:19:55.280><c> are</c><00:19:55.440><c> usually</c><00:19:55.840><c> many</c>

00:19:56.150 --> 00:19:56.160 align:start position:0%
show you that there are usually many
 

00:19:56.160 --> 00:19:57.430 align:start position:0%
show you that there are usually many
ways<00:19:56.640><c> of</c>

00:19:57.430 --> 00:19:57.440 align:start position:0%
ways of
 

00:19:57.440 --> 00:19:59.669 align:start position:0%
ways of
implementing<00:19:58.400><c> what</c><00:19:58.559><c> you'd</c><00:19:58.880><c> like</c><00:19:59.039><c> to</c><00:19:59.200><c> do</c><00:19:59.520><c> in</c>

00:19:59.669 --> 00:19:59.679 align:start position:0%
implementing what you'd like to do in
 

00:19:59.679 --> 00:20:01.830 align:start position:0%
implementing what you'd like to do in
torch<00:20:00.559><c> and</c><00:20:00.720><c> some</c><00:20:00.880><c> of</c><00:20:00.960><c> them</c><00:20:01.039><c> will</c><00:20:01.200><c> be</c><00:20:01.360><c> faster</c>

00:20:01.830 --> 00:20:01.840 align:start position:0%
torch and some of them will be faster
 

00:20:01.840 --> 00:20:03.750 align:start position:0%
torch and some of them will be faster
better<00:20:02.240><c> shorter</c><00:20:02.720><c> etc</c>

00:20:03.750 --> 00:20:03.760 align:start position:0%
better shorter etc
 

00:20:03.760 --> 00:20:06.230 align:start position:0%
better shorter etc
and<00:20:03.919><c> that's</c><00:20:04.080><c> because</c><00:20:04.400><c> torch</c><00:20:04.799><c> is</c><00:20:05.440><c> a</c><00:20:05.520><c> very</c><00:20:05.919><c> large</c>

00:20:06.230 --> 00:20:06.240 align:start position:0%
and that's because torch is a very large
 

00:20:06.240 --> 00:20:07.909 align:start position:0%
and that's because torch is a very large
library<00:20:06.799><c> and</c><00:20:06.960><c> it's</c><00:20:07.039><c> got</c><00:20:07.280><c> lots</c><00:20:07.520><c> and</c><00:20:07.600><c> lots</c><00:20:07.840><c> of</c>

00:20:07.909 --> 00:20:07.919 align:start position:0%
library and it's got lots and lots of
 

00:20:07.919 --> 00:20:09.430 align:start position:0%
library and it's got lots and lots of
functions<00:20:08.640><c> so</c><00:20:08.799><c> if</c><00:20:08.880><c> you</c><00:20:08.960><c> just</c><00:20:09.120><c> go</c><00:20:09.200><c> to</c><00:20:09.360><c> the</c>

00:20:09.430 --> 00:20:09.440 align:start position:0%
functions so if you just go to the
 

00:20:09.440 --> 00:20:11.350 align:start position:0%
functions so if you just go to the
documentation<00:20:10.000><c> and</c><00:20:10.080><c> click</c><00:20:10.240><c> on</c><00:20:10.400><c> torch</c><00:20:11.120><c> you'll</c>

00:20:11.350 --> 00:20:11.360 align:start position:0%
documentation and click on torch you'll
 

00:20:11.360 --> 00:20:14.150 align:start position:0%
documentation and click on torch you'll
see<00:20:11.520><c> that</c><00:20:12.080><c> my</c><00:20:12.320><c> slider</c><00:20:12.720><c> here</c><00:20:12.960><c> is</c><00:20:13.039><c> very</c><00:20:13.280><c> tiny</c><00:20:14.000><c> and</c>

00:20:14.150 --> 00:20:14.160 align:start position:0%
see that my slider here is very tiny and
 

00:20:14.160 --> 00:20:15.270 align:start position:0%
see that my slider here is very tiny and
that's<00:20:14.400><c> because</c><00:20:14.640><c> there</c><00:20:14.720><c> are</c><00:20:14.880><c> so</c><00:20:15.039><c> many</c>

00:20:15.270 --> 00:20:15.280 align:start position:0%
that's because there are so many
 

00:20:15.280 --> 00:20:16.630 align:start position:0%
that's because there are so many
functions<00:20:15.760><c> that</c><00:20:15.840><c> you</c><00:20:15.919><c> can</c><00:20:16.080><c> call</c><00:20:16.400><c> on</c><00:20:16.480><c> these</c>

00:20:16.630 --> 00:20:16.640 align:start position:0%
functions that you can call on these
 

00:20:16.640 --> 00:20:17.750 align:start position:0%
functions that you can call on these
tensors

00:20:17.750 --> 00:20:17.760 align:start position:0%
tensors
 

00:20:17.760 --> 00:20:20.070 align:start position:0%
tensors
to<00:20:17.919><c> transform</c><00:20:18.400><c> them</c><00:20:18.720><c> create</c><00:20:19.120><c> them</c><00:20:19.520><c> multiply</c>

00:20:20.070 --> 00:20:20.080 align:start position:0%
to transform them create them multiply
 

00:20:20.080 --> 00:20:21.990 align:start position:0%
to transform them create them multiply
them<00:20:20.400><c> add</c><00:20:20.559><c> them</c><00:20:21.280><c> perform</c><00:20:21.600><c> all</c><00:20:21.679><c> kinds</c><00:20:21.919><c> of</c>

00:20:21.990 --> 00:20:22.000 align:start position:0%
them add them perform all kinds of
 

00:20:22.000 --> 00:20:24.870 align:start position:0%
them add them perform all kinds of
different<00:20:22.240><c> operations</c><00:20:22.880><c> on</c><00:20:23.039><c> them</c>

00:20:24.870 --> 00:20:24.880 align:start position:0%
different operations on them
 

00:20:24.880 --> 00:20:28.470 align:start position:0%
different operations on them
and<00:20:25.039><c> so</c><00:20:25.600><c> this</c><00:20:25.840><c> is</c><00:20:26.000><c> kind</c><00:20:26.080><c> of</c><00:20:26.240><c> like</c>

00:20:28.470 --> 00:20:28.480 align:start position:0%
and so this is kind of like
 

00:20:28.480 --> 00:20:31.110 align:start position:0%
and so this is kind of like
the<00:20:28.640><c> space</c><00:20:28.960><c> of</c><00:20:29.120><c> possibility</c><00:20:29.840><c> if</c><00:20:30.000><c> you</c><00:20:30.159><c> will</c>

00:20:31.110 --> 00:20:31.120 align:start position:0%
the space of possibility if you will
 

00:20:31.120 --> 00:20:32.470 align:start position:0%
the space of possibility if you will
now<00:20:31.280><c> one</c><00:20:31.440><c> of</c><00:20:31.520><c> the</c><00:20:31.600><c> things</c><00:20:31.840><c> that</c><00:20:31.919><c> you</c><00:20:32.000><c> can</c><00:20:32.159><c> do</c><00:20:32.400><c> is</c>

00:20:32.470 --> 00:20:32.480 align:start position:0%
now one of the things that you can do is
 

00:20:32.480 --> 00:20:34.630 align:start position:0%
now one of the things that you can do is
if<00:20:32.640><c> we</c><00:20:32.799><c> can</c><00:20:32.960><c> control</c><00:20:33.440><c> here</c><00:20:33.919><c> ctrl</c><00:20:34.320><c> f</c><00:20:34.480><c> for</c>

00:20:34.630 --> 00:20:34.640 align:start position:0%
if we can control here ctrl f for
 

00:20:34.640 --> 00:20:36.549 align:start position:0%
if we can control here ctrl f for
concatenate<00:20:35.679><c> and</c><00:20:35.840><c> we</c><00:20:35.919><c> see</c><00:20:36.080><c> that</c><00:20:36.240><c> there's</c><00:20:36.480><c> a</c>

00:20:36.549 --> 00:20:36.559 align:start position:0%
concatenate and we see that there's a
 

00:20:36.559 --> 00:20:37.430 align:start position:0%
concatenate and we see that there's a
function

00:20:37.430 --> 00:20:37.440 align:start position:0%
function
 

00:20:37.440 --> 00:20:40.470 align:start position:0%
function
torque.cat<00:20:38.480><c> short</c><00:20:38.720><c> for</c><00:20:38.880><c> concatenate</c>

00:20:40.470 --> 00:20:40.480 align:start position:0%
torque.cat short for concatenate
 

00:20:40.480 --> 00:20:41.990 align:start position:0%
torque.cat short for concatenate
and<00:20:40.640><c> this</c><00:20:40.799><c> concatenates</c><00:20:41.360><c> the</c><00:20:41.440><c> given</c><00:20:41.600><c> sequence</c>

00:20:41.990 --> 00:20:42.000 align:start position:0%
and this concatenates the given sequence
 

00:20:42.000 --> 00:20:45.110 align:start position:0%
and this concatenates the given sequence
of<00:20:42.320><c> tensors</c><00:20:42.960><c> in</c><00:20:43.039><c> a</c><00:20:43.120><c> given</c><00:20:43.440><c> dimension</c>

00:20:45.110 --> 00:20:45.120 align:start position:0%
of tensors in a given dimension
 

00:20:45.120 --> 00:20:46.710 align:start position:0%
of tensors in a given dimension
and<00:20:45.600><c> these</c><00:20:45.760><c> sensors</c><00:20:46.080><c> must</c><00:20:46.240><c> have</c><00:20:46.400><c> the</c><00:20:46.480><c> same</c>

00:20:46.710 --> 00:20:46.720 align:start position:0%
and these sensors must have the same
 

00:20:46.720 --> 00:20:49.190 align:start position:0%
and these sensors must have the same
shape<00:20:47.200><c> etc</c><00:20:48.000><c> so</c><00:20:48.159><c> we</c><00:20:48.240><c> can</c><00:20:48.320><c> use</c><00:20:48.480><c> the</c><00:20:48.559><c> concatenate</c>

00:20:49.190 --> 00:20:49.200 align:start position:0%
shape etc so we can use the concatenate
 

00:20:49.200 --> 00:20:52.230 align:start position:0%
shape etc so we can use the concatenate
operation<00:20:49.760><c> to</c><00:20:50.240><c> in</c><00:20:50.400><c> a</c><00:20:50.559><c> naive</c><00:20:50.960><c> way</c><00:20:51.440><c> concatenate</c>

00:20:52.230 --> 00:20:52.240 align:start position:0%
operation to in a naive way concatenate
 

00:20:52.240 --> 00:20:55.990 align:start position:0%
operation to in a naive way concatenate
these<00:20:52.559><c> three</c><00:20:52.960><c> embeddings</c><00:20:53.840><c> for</c><00:20:54.080><c> each</c><00:20:54.720><c> input</c>

00:20:55.990 --> 00:20:56.000 align:start position:0%
these three embeddings for each input
 

00:20:56.000 --> 00:20:58.789 align:start position:0%
these three embeddings for each input
so<00:20:56.159><c> in</c><00:20:56.240><c> this</c><00:20:56.400><c> case</c><00:20:56.640><c> we</c><00:20:56.720><c> have</c><00:20:57.200><c> m</c><00:20:57.600><c> of</c>

00:20:58.789 --> 00:20:58.799 align:start position:0%
so in this case we have m of
 

00:20:58.799 --> 00:21:01.029 align:start position:0%
so in this case we have m of
amp<00:20:59.280><c> of</c><00:20:59.360><c> the</c><00:20:59.600><c> shape</c><00:21:00.320><c> and</c><00:21:00.400><c> really</c><00:21:00.640><c> what</c><00:21:00.799><c> we</c><00:21:00.880><c> want</c>

00:21:01.029 --> 00:21:01.039 align:start position:0%
amp of the shape and really what we want
 

00:21:01.039 --> 00:21:03.110 align:start position:0%
amp of the shape and really what we want
to<00:21:01.120><c> do</c><00:21:01.280><c> is</c><00:21:01.360><c> we</c><00:21:01.440><c> want</c><00:21:01.600><c> to</c><00:21:02.000><c> retrieve</c><00:21:02.480><c> these</c><00:21:02.799><c> three</c>

00:21:03.110 --> 00:21:03.120 align:start position:0%
to do is we want to retrieve these three
 

00:21:03.120 --> 00:21:04.950 align:start position:0%
to do is we want to retrieve these three
parts<00:21:03.440><c> and</c><00:21:03.520><c> concatenate</c><00:21:04.159><c> them</c>

00:21:04.950 --> 00:21:04.960 align:start position:0%
parts and concatenate them
 

00:21:04.960 --> 00:21:08.470 align:start position:0%
parts and concatenate them
so<00:21:05.440><c> we</c><00:21:05.600><c> want</c><00:21:05.760><c> to</c><00:21:05.919><c> grab</c><00:21:06.320><c> all</c><00:21:06.559><c> the</c><00:21:07.039><c> examples</c>

00:21:08.470 --> 00:21:08.480 align:start position:0%
so we want to grab all the examples
 

00:21:08.480 --> 00:21:10.230 align:start position:0%
so we want to grab all the examples
we<00:21:08.640><c> want</c><00:21:08.799><c> to</c><00:21:08.960><c> grab</c>

00:21:10.230 --> 00:21:10.240 align:start position:0%
we want to grab
 

00:21:10.240 --> 00:21:13.430 align:start position:0%
we want to grab
first<00:21:10.640><c> the</c><00:21:10.880><c> zeroth</c>

00:21:13.430 --> 00:21:13.440 align:start position:0%
first the zeroth
 

00:21:13.440 --> 00:21:14.549 align:start position:0%
first the zeroth
index

00:21:14.549 --> 00:21:14.559 align:start position:0%
index
 

00:21:14.559 --> 00:21:16.549 align:start position:0%
index
and<00:21:14.640><c> then</c><00:21:15.120><c> all</c><00:21:15.360><c> of</c>

00:21:16.549 --> 00:21:16.559 align:start position:0%
and then all of
 

00:21:16.559 --> 00:21:17.750 align:start position:0%
and then all of
this

00:21:17.750 --> 00:21:17.760 align:start position:0%
this
 

00:21:17.760 --> 00:21:20.390 align:start position:0%
this
so<00:21:18.080><c> this</c><00:21:18.559><c> plucks</c><00:21:18.960><c> out</c>

00:21:20.390 --> 00:21:20.400 align:start position:0%
so this plucks out
 

00:21:20.400 --> 00:21:24.310 align:start position:0%
so this plucks out
the<00:21:20.720><c> 32</c><00:21:21.200><c> by</c><00:21:21.440><c> 2</c><00:21:22.000><c> embeddings</c><00:21:22.799><c> of</c><00:21:23.039><c> just</c><00:21:23.280><c> the</c><00:21:23.440><c> first</c>

00:21:24.310 --> 00:21:24.320 align:start position:0%
the 32 by 2 embeddings of just the first
 

00:21:24.320 --> 00:21:26.390 align:start position:0%
the 32 by 2 embeddings of just the first
word<00:21:24.799><c> here</c>

00:21:26.390 --> 00:21:26.400 align:start position:0%
word here
 

00:21:26.400 --> 00:21:28.549 align:start position:0%
word here
and<00:21:26.559><c> so</c><00:21:26.720><c> basically</c><00:21:27.039><c> we</c><00:21:27.200><c> want</c><00:21:27.360><c> this</c><00:21:27.600><c> guy</c>

00:21:28.549 --> 00:21:28.559 align:start position:0%
and so basically we want this guy
 

00:21:28.559 --> 00:21:30.870 align:start position:0%
and so basically we want this guy
we<00:21:28.799><c> want</c><00:21:29.039><c> the</c><00:21:29.200><c> first</c><00:21:29.360><c> dimension</c><00:21:30.320><c> and</c><00:21:30.480><c> we</c><00:21:30.640><c> want</c>

00:21:30.870 --> 00:21:30.880 align:start position:0%
we want the first dimension and we want
 

00:21:30.880 --> 00:21:32.549 align:start position:0%
we want the first dimension and we want
the<00:21:31.039><c> second</c><00:21:31.280><c> dimension</c>

00:21:32.549 --> 00:21:32.559 align:start position:0%
the second dimension
 

00:21:32.559 --> 00:21:34.630 align:start position:0%
the second dimension
and<00:21:32.720><c> these</c><00:21:32.960><c> are</c><00:21:33.039><c> the</c><00:21:33.440><c> three</c><00:21:34.159><c> pieces</c>

00:21:34.630 --> 00:21:34.640 align:start position:0%
and these are the three pieces
 

00:21:34.640 --> 00:21:36.390 align:start position:0%
and these are the three pieces
individually

00:21:36.390 --> 00:21:36.400 align:start position:0%
individually
 

00:21:36.400 --> 00:21:37.990 align:start position:0%
individually
and<00:21:36.480><c> then</c><00:21:36.640><c> we</c><00:21:36.799><c> want</c><00:21:37.039><c> to</c><00:21:37.440><c> treat</c><00:21:37.679><c> this</c><00:21:37.840><c> as</c><00:21:37.919><c> a</c>

00:21:37.990 --> 00:21:38.000 align:start position:0%
and then we want to treat this as a
 

00:21:38.000 --> 00:21:40.549 align:start position:0%
and then we want to treat this as a
sequence<00:21:38.559><c> and</c><00:21:38.640><c> we</c><00:21:38.720><c> want</c><00:21:38.880><c> to</c><00:21:39.039><c> torch</c><00:21:39.360><c> that</c><00:21:39.600><c> cat</c>

00:21:40.549 --> 00:21:40.559 align:start position:0%
sequence and we want to torch that cat
 

00:21:40.559 --> 00:21:43.590 align:start position:0%
sequence and we want to torch that cat
on<00:21:40.799><c> that</c><00:21:41.039><c> sequence</c><00:21:41.520><c> so</c><00:21:41.679><c> this</c><00:21:41.840><c> is</c><00:21:41.919><c> the</c><00:21:42.240><c> list</c>

00:21:43.590 --> 00:21:43.600 align:start position:0%
on that sequence so this is the list
 

00:21:43.600 --> 00:21:45.590 align:start position:0%
on that sequence so this is the list
tor.cat<00:21:44.400><c> takes</c><00:21:44.799><c> a</c>

00:21:45.590 --> 00:21:45.600 align:start position:0%
tor.cat takes a
 

00:21:45.600 --> 00:21:46.710 align:start position:0%
tor.cat takes a
sequence

00:21:46.710 --> 00:21:46.720 align:start position:0%
sequence
 

00:21:46.720 --> 00:21:48.470 align:start position:0%
sequence
of<00:21:46.960><c> tensors</c><00:21:47.760><c> and</c><00:21:47.840><c> then</c><00:21:48.000><c> we</c><00:21:48.080><c> have</c><00:21:48.159><c> to</c><00:21:48.240><c> tell</c><00:21:48.400><c> it</c>

00:21:48.470 --> 00:21:48.480 align:start position:0%
of tensors and then we have to tell it
 

00:21:48.480 --> 00:21:51.190 align:start position:0%
of tensors and then we have to tell it
along<00:21:48.720><c> which</c><00:21:48.960><c> dimension</c><00:21:49.360><c> to</c><00:21:49.520><c> concatenate</c>

00:21:51.190 --> 00:21:51.200 align:start position:0%
along which dimension to concatenate
 

00:21:51.200 --> 00:21:53.590 align:start position:0%
along which dimension to concatenate
so<00:21:51.520><c> in</c><00:21:51.600><c> this</c><00:21:51.760><c> case</c><00:21:52.000><c> all</c><00:21:52.159><c> these</c><00:21:52.400><c> are</c><00:21:52.559><c> 32</c><00:21:52.960><c> by</c><00:21:53.120><c> 2</c>

00:21:53.590 --> 00:21:53.600 align:start position:0%
so in this case all these are 32 by 2
 

00:21:53.600 --> 00:21:55.270 align:start position:0%
so in this case all these are 32 by 2
and<00:21:53.679><c> we</c><00:21:53.840><c> want</c><00:21:54.000><c> to</c><00:21:54.080><c> concatenate</c><00:21:54.720><c> not</c><00:21:54.960><c> across</c>

00:21:55.270 --> 00:21:55.280 align:start position:0%
and we want to concatenate not across
 

00:21:55.280 --> 00:21:58.149 align:start position:0%
and we want to concatenate not across
dimension<00:21:55.679><c> 0</c><00:21:56.000><c> by</c><00:21:56.159><c> the</c><00:21:56.240><c> cross</c><00:21:56.480><c> dimension</c><00:21:57.200><c> one</c>

00:21:58.149 --> 00:21:58.159 align:start position:0%
dimension 0 by the cross dimension one
 

00:21:58.159 --> 00:21:59.990 align:start position:0%
dimension 0 by the cross dimension one
so<00:21:58.400><c> passing</c><00:21:58.720><c> in</c><00:21:58.880><c> one</c>

00:21:59.990 --> 00:22:00.000 align:start position:0%
so passing in one
 

00:22:00.000 --> 00:22:01.909 align:start position:0%
so passing in one
gives<00:22:00.240><c> us</c><00:22:00.400><c> a</c><00:22:00.480><c> result</c>

00:22:01.909 --> 00:22:01.919 align:start position:0%
gives us a result
 

00:22:01.919 --> 00:22:04.230 align:start position:0%
gives us a result
the<00:22:02.080><c> shape</c><00:22:02.400><c> of</c><00:22:02.480><c> this</c><00:22:02.720><c> is</c><00:22:02.799><c> 32</c><00:22:03.280><c> by</c><00:22:03.520><c> 6</c><00:22:03.760><c> exactly</c><00:22:04.159><c> as</c>

00:22:04.230 --> 00:22:04.240 align:start position:0%
the shape of this is 32 by 6 exactly as
 

00:22:04.240 --> 00:22:05.350 align:start position:0%
the shape of this is 32 by 6 exactly as
we'd<00:22:04.480><c> like</c>

00:22:05.350 --> 00:22:05.360 align:start position:0%
we'd like
 

00:22:05.360 --> 00:22:08.310 align:start position:0%
we'd like
so<00:22:05.520><c> that</c><00:22:05.679><c> basically</c><00:22:06.080><c> took</c><00:22:06.240><c> 32</c><00:22:07.039><c> and</c><00:22:07.760><c> squashed</c>

00:22:08.310 --> 00:22:08.320 align:start position:0%
so that basically took 32 and squashed
 

00:22:08.320 --> 00:22:10.549 align:start position:0%
so that basically took 32 and squashed
these<00:22:08.559><c> by</c><00:22:08.720><c> concatenating</c><00:22:09.440><c> them</c><00:22:09.760><c> into</c><00:22:10.000><c> 32</c><00:22:10.400><c> by</c>

00:22:10.549 --> 00:22:10.559 align:start position:0%
these by concatenating them into 32 by
 

00:22:10.559 --> 00:22:11.510 align:start position:0%
these by concatenating them into 32 by
6.

00:22:11.510 --> 00:22:11.520 align:start position:0%
6.
 

00:22:11.520 --> 00:22:13.430 align:start position:0%
6.
now<00:22:11.679><c> this</c><00:22:11.840><c> is</c><00:22:12.000><c> kind</c><00:22:12.080><c> of</c><00:22:12.240><c> ugly</c><00:22:12.640><c> because</c><00:22:13.200><c> this</c>

00:22:13.430 --> 00:22:13.440 align:start position:0%
now this is kind of ugly because this
 

00:22:13.440 --> 00:22:15.590 align:start position:0%
now this is kind of ugly because this
code<00:22:13.679><c> would</c><00:22:13.840><c> not</c><00:22:14.080><c> generalize</c><00:22:14.960><c> if</c><00:22:15.120><c> we</c><00:22:15.200><c> want</c><00:22:15.360><c> to</c>

00:22:15.590 --> 00:22:15.600 align:start position:0%
code would not generalize if we want to
 

00:22:15.600 --> 00:22:17.669 align:start position:0%
code would not generalize if we want to
later<00:22:15.919><c> change</c><00:22:16.159><c> the</c><00:22:16.320><c> block</c><00:22:16.559><c> size</c><00:22:17.200><c> right</c><00:22:17.360><c> now</c><00:22:17.520><c> we</c>

00:22:17.669 --> 00:22:17.679 align:start position:0%
later change the block size right now we
 

00:22:17.679 --> 00:22:19.669 align:start position:0%
later change the block size right now we
have<00:22:17.840><c> three</c><00:22:18.320><c> inputs</c>

00:22:19.669 --> 00:22:19.679 align:start position:0%
have three inputs
 

00:22:19.679 --> 00:22:22.230 align:start position:0%
have three inputs
three<00:22:19.919><c> words</c><00:22:20.480><c> but</c><00:22:20.640><c> what</c><00:22:20.880><c> if</c><00:22:20.960><c> we</c><00:22:21.039><c> had</c><00:22:21.200><c> five</c>

00:22:22.230 --> 00:22:22.240 align:start position:0%
three words but what if we had five
 

00:22:22.240 --> 00:22:23.510 align:start position:0%
three words but what if we had five
then<00:22:22.559><c> here</c><00:22:22.799><c> we</c><00:22:22.880><c> would</c><00:22:23.039><c> have</c><00:22:23.120><c> to</c><00:22:23.200><c> change</c><00:22:23.440><c> the</c>

00:22:23.510 --> 00:22:23.520 align:start position:0%
then here we would have to change the
 

00:22:23.520 --> 00:22:26.070 align:start position:0%
then here we would have to change the
code<00:22:23.919><c> because</c><00:22:24.159><c> i'm</c><00:22:24.320><c> indexing</c><00:22:24.840><c> directly</c><00:22:25.840><c> well</c>

00:22:26.070 --> 00:22:26.080 align:start position:0%
code because i'm indexing directly well
 

00:22:26.080 --> 00:22:28.149 align:start position:0%
code because i'm indexing directly well
torch<00:22:26.400><c> comes</c><00:22:26.559><c> to</c><00:22:26.640><c> rescue</c><00:22:27.039><c> again</c><00:22:27.679><c> because</c><00:22:28.000><c> that</c>

00:22:28.149 --> 00:22:28.159 align:start position:0%
torch comes to rescue again because that
 

00:22:28.159 --> 00:22:31.669 align:start position:0%
torch comes to rescue again because that
turns<00:22:28.480><c> out</c><00:22:28.640><c> to</c><00:22:28.799><c> be</c><00:22:29.360><c> a</c><00:22:29.440><c> function</c><00:22:29.760><c> called</c><00:22:30.080><c> unbind</c>

00:22:31.669 --> 00:22:31.679 align:start position:0%
turns out to be a function called unbind
 

00:22:31.679 --> 00:22:35.270 align:start position:0%
turns out to be a function called unbind
and<00:22:31.840><c> it</c><00:22:31.919><c> removes</c><00:22:32.320><c> a</c><00:22:32.400><c> tensor</c><00:22:32.720><c> dimension</c>

00:22:35.270 --> 00:22:35.280 align:start position:0%
 
 

00:22:35.280 --> 00:22:36.710 align:start position:0%
 
so<00:22:35.440><c> it</c><00:22:35.520><c> removes</c><00:22:35.840><c> the</c><00:22:35.919><c> tensor</c><00:22:36.240><c> dimension</c>

00:22:36.710 --> 00:22:36.720 align:start position:0%
so it removes the tensor dimension
 

00:22:36.720 --> 00:22:39.029 align:start position:0%
so it removes the tensor dimension
returns<00:22:37.120><c> a</c><00:22:37.280><c> tuple</c><00:22:37.919><c> of</c><00:22:38.080><c> all</c><00:22:38.240><c> slices</c><00:22:38.720><c> along</c><00:22:38.960><c> a</c>

00:22:39.029 --> 00:22:39.039 align:start position:0%
returns a tuple of all slices along a
 

00:22:39.039 --> 00:22:40.390 align:start position:0%
returns a tuple of all slices along a
given<00:22:39.280><c> dimension</c>

00:22:40.390 --> 00:22:40.400 align:start position:0%
given dimension
 

00:22:40.400 --> 00:22:41.669 align:start position:0%
given dimension
without<00:22:40.799><c> it</c>

00:22:41.669 --> 00:22:41.679 align:start position:0%
without it
 

00:22:41.679 --> 00:22:43.830 align:start position:0%
without it
so<00:22:41.919><c> this</c><00:22:42.080><c> is</c><00:22:42.240><c> exactly</c><00:22:42.559><c> what</c><00:22:42.720><c> we</c><00:22:42.880><c> need</c>

00:22:43.830 --> 00:22:43.840 align:start position:0%
so this is exactly what we need
 

00:22:43.840 --> 00:22:45.669 align:start position:0%
so this is exactly what we need
and<00:22:44.000><c> basically</c><00:22:44.480><c> when</c><00:22:44.640><c> we</c><00:22:44.880><c> call</c><00:22:45.200><c> torch</c><00:22:45.440><c> dot</c>

00:22:45.669 --> 00:22:45.679 align:start position:0%
and basically when we call torch dot
 

00:22:45.679 --> 00:22:47.990 align:start position:0%
and basically when we call torch dot
unbind

00:22:47.990 --> 00:22:48.000 align:start position:0%
unbind
 

00:22:48.000 --> 00:22:50.310 align:start position:0%
unbind
torch<00:22:48.640><c> dot</c><00:22:48.960><c> unbind</c>

00:22:50.310 --> 00:22:50.320 align:start position:0%
torch dot unbind
 

00:22:50.320 --> 00:22:51.669 align:start position:0%
torch dot unbind
of<00:22:50.799><c> m</c>

00:22:51.669 --> 00:22:51.679 align:start position:0%
of m
 

00:22:51.679 --> 00:22:54.710 align:start position:0%
of m
and<00:22:51.919><c> pass</c><00:22:52.159><c> in</c><00:22:52.320><c> dimension</c>

00:22:54.710 --> 00:22:54.720 align:start position:0%
and pass in dimension
 

00:22:54.720 --> 00:22:56.470 align:start position:0%
and pass in dimension
1<00:22:55.200><c> index</c><00:22:55.600><c> 1</c>

00:22:56.470 --> 00:22:56.480 align:start position:0%
1 index 1
 

00:22:56.480 --> 00:22:59.270 align:start position:0%
1 index 1
this<00:22:56.640><c> gives</c><00:22:56.960><c> us</c><00:22:57.120><c> a</c><00:22:57.280><c> list</c><00:22:57.679><c> of</c>

00:22:59.270 --> 00:22:59.280 align:start position:0%
this gives us a list of
 

00:22:59.280 --> 00:23:01.590 align:start position:0%
this gives us a list of
a<00:22:59.440><c> list</c><00:22:59.679><c> of</c><00:22:59.760><c> tensors</c><00:23:00.640><c> exactly</c><00:23:01.039><c> equivalent</c><00:23:01.440><c> to</c>

00:23:01.590 --> 00:23:01.600 align:start position:0%
a list of tensors exactly equivalent to
 

00:23:01.600 --> 00:23:02.470 align:start position:0%
a list of tensors exactly equivalent to
this

00:23:02.470 --> 00:23:02.480 align:start position:0%
this
 

00:23:02.480 --> 00:23:04.149 align:start position:0%
this
so<00:23:02.720><c> running</c><00:23:03.039><c> this</c>

00:23:04.149 --> 00:23:04.159 align:start position:0%
so running this
 

00:23:04.159 --> 00:23:06.390 align:start position:0%
so running this
gives<00:23:04.400><c> us</c><00:23:04.640><c> a</c><00:23:04.880><c> line</c>

00:23:06.390 --> 00:23:06.400 align:start position:0%
gives us a line
 

00:23:06.400 --> 00:23:07.510 align:start position:0%
gives us a line
3

00:23:07.510 --> 00:23:07.520 align:start position:0%
3
 

00:23:07.520 --> 00:23:09.430 align:start position:0%
3
and<00:23:07.679><c> it's</c><00:23:07.840><c> exactly</c><00:23:08.240><c> this</c><00:23:08.480><c> list</c><00:23:08.960><c> and</c><00:23:09.039><c> so</c><00:23:09.200><c> we</c><00:23:09.360><c> can</c>

00:23:09.430 --> 00:23:09.440 align:start position:0%
and it's exactly this list and so we can
 

00:23:09.440 --> 00:23:12.549 align:start position:0%
and it's exactly this list and so we can
call<00:23:09.760><c> torch.cat</c><00:23:10.559><c> on</c><00:23:10.720><c> it</c>

00:23:12.549 --> 00:23:12.559 align:start position:0%
call torch.cat on it
 

00:23:12.559 --> 00:23:14.950 align:start position:0%
call torch.cat on it
and<00:23:12.960><c> along</c><00:23:13.280><c> the</c><00:23:13.360><c> first</c><00:23:13.520><c> dimension</c>

00:23:14.950 --> 00:23:14.960 align:start position:0%
and along the first dimension
 

00:23:14.960 --> 00:23:16.870 align:start position:0%
and along the first dimension
and<00:23:15.120><c> this</c><00:23:15.360><c> works</c>

00:23:16.870 --> 00:23:16.880 align:start position:0%
and this works
 

00:23:16.880 --> 00:23:19.110 align:start position:0%
and this works
and<00:23:17.039><c> this</c><00:23:17.280><c> shape</c><00:23:17.760><c> is</c><00:23:18.000><c> the</c><00:23:18.080><c> same</c>

00:23:19.110 --> 00:23:19.120 align:start position:0%
and this shape is the same
 

00:23:19.120 --> 00:23:21.110 align:start position:0%
and this shape is the same
but<00:23:19.280><c> now</c><00:23:19.520><c> this</c><00:23:19.760><c> is</c><00:23:20.000><c> uh</c><00:23:20.320><c> it</c><00:23:20.480><c> doesn't</c><00:23:20.720><c> matter</c><00:23:20.960><c> if</c>

00:23:21.110 --> 00:23:21.120 align:start position:0%
but now this is uh it doesn't matter if
 

00:23:21.120 --> 00:23:23.350 align:start position:0%
but now this is uh it doesn't matter if
we<00:23:21.200><c> have</c><00:23:21.440><c> block</c><00:23:21.679><c> size</c><00:23:22.000><c> 3</c><00:23:22.240><c> or</c><00:23:22.400><c> 5</c><00:23:22.640><c> or</c><00:23:22.720><c> 10</c><00:23:23.200><c> this</c>

00:23:23.350 --> 00:23:23.360 align:start position:0%
we have block size 3 or 5 or 10 this
 

00:23:23.360 --> 00:23:24.789 align:start position:0%
we have block size 3 or 5 or 10 this
will<00:23:23.520><c> just</c><00:23:23.679><c> work</c>

00:23:24.789 --> 00:23:24.799 align:start position:0%
will just work
 

00:23:24.799 --> 00:23:26.950 align:start position:0%
will just work
so<00:23:24.960><c> this</c><00:23:25.200><c> is</c><00:23:25.280><c> one</c><00:23:25.520><c> way</c><00:23:25.679><c> to</c><00:23:25.840><c> do</c><00:23:26.000><c> it</c><00:23:26.320><c> but</c><00:23:26.559><c> it</c><00:23:26.720><c> turns</c>

00:23:26.950 --> 00:23:26.960 align:start position:0%
so this is one way to do it but it turns
 

00:23:26.960 --> 00:23:28.950 align:start position:0%
so this is one way to do it but it turns
out<00:23:27.039><c> that</c><00:23:27.280><c> in</c><00:23:27.360><c> this</c><00:23:27.600><c> case</c><00:23:28.159><c> there's</c><00:23:28.400><c> actually</c><00:23:28.799><c> a</c>

00:23:28.950 --> 00:23:28.960 align:start position:0%
out that in this case there's actually a
 

00:23:28.960 --> 00:23:30.710 align:start position:0%
out that in this case there's actually a
significantly<00:23:29.679><c> better</c><00:23:30.000><c> and</c><00:23:30.159><c> more</c><00:23:30.320><c> efficient</c>

00:23:30.710 --> 00:23:30.720 align:start position:0%
significantly better and more efficient
 

00:23:30.720 --> 00:23:32.870 align:start position:0%
significantly better and more efficient
way<00:23:31.360><c> and</c><00:23:31.520><c> this</c><00:23:31.679><c> gives</c><00:23:31.919><c> me</c><00:23:32.000><c> an</c><00:23:32.159><c> opportunity</c><00:23:32.720><c> to</c>

00:23:32.870 --> 00:23:32.880 align:start position:0%
way and this gives me an opportunity to
 

00:23:32.880 --> 00:23:34.710 align:start position:0%
way and this gives me an opportunity to
hint<00:23:33.120><c> at</c><00:23:33.280><c> some</c><00:23:33.440><c> of</c><00:23:33.600><c> the</c><00:23:34.080><c> internals</c><00:23:34.559><c> of</c>

00:23:34.710 --> 00:23:34.720 align:start position:0%
hint at some of the internals of
 

00:23:34.720 --> 00:23:36.390 align:start position:0%
hint at some of the internals of
torch.tensor

00:23:36.390 --> 00:23:36.400 align:start position:0%
torch.tensor
 

00:23:36.400 --> 00:23:37.909 align:start position:0%
torch.tensor
so<00:23:36.720><c> let's</c><00:23:36.960><c> create</c>

00:23:37.909 --> 00:23:37.919 align:start position:0%
so let's create
 

00:23:37.919 --> 00:23:40.149 align:start position:0%
so let's create
an<00:23:38.159><c> array</c><00:23:38.480><c> here</c>

00:23:40.149 --> 00:23:40.159 align:start position:0%
an array here
 

00:23:40.159 --> 00:23:42.549 align:start position:0%
an array here
of<00:23:40.400><c> elements</c><00:23:40.720><c> from</c><00:23:41.120><c> 0</c><00:23:41.360><c> to</c><00:23:41.520><c> 17</c>

00:23:42.549 --> 00:23:42.559 align:start position:0%
of elements from 0 to 17
 

00:23:42.559 --> 00:23:44.230 align:start position:0%
of elements from 0 to 17
and<00:23:42.720><c> the</c><00:23:42.880><c> shape</c><00:23:43.120><c> of</c><00:23:43.280><c> this</c>

00:23:44.230 --> 00:23:44.240 align:start position:0%
and the shape of this
 

00:23:44.240 --> 00:23:46.470 align:start position:0%
and the shape of this
is<00:23:44.400><c> just</c><00:23:44.720><c> 18.</c><00:23:45.200><c> it's</c><00:23:45.360><c> a</c><00:23:45.440><c> single</c><00:23:45.679><c> picture</c><00:23:46.000><c> of</c><00:23:46.159><c> 18</c>

00:23:46.470 --> 00:23:46.480 align:start position:0%
is just 18. it's a single picture of 18
 

00:23:46.480 --> 00:23:47.909 align:start position:0%
is just 18. it's a single picture of 18
numbers

00:23:47.909 --> 00:23:47.919 align:start position:0%
numbers
 

00:23:47.919 --> 00:23:49.909 align:start position:0%
numbers
it<00:23:48.080><c> turns</c><00:23:48.320><c> out</c><00:23:48.400><c> that</c><00:23:48.559><c> we</c><00:23:48.720><c> can</c><00:23:49.360><c> very</c><00:23:49.520><c> quickly</c>

00:23:49.909 --> 00:23:49.919 align:start position:0%
it turns out that we can very quickly
 

00:23:49.919 --> 00:23:52.950 align:start position:0%
it turns out that we can very quickly
re-represent<00:23:50.799><c> this</c><00:23:51.440><c> as</c><00:23:51.919><c> different</c><00:23:52.400><c> sized</c><00:23:52.799><c> and</c>

00:23:52.950 --> 00:23:52.960 align:start position:0%
re-represent this as different sized and
 

00:23:52.960 --> 00:23:54.470 align:start position:0%
re-represent this as different sized and
dimensional<00:23:53.440><c> tensors</c>

00:23:54.470 --> 00:23:54.480 align:start position:0%
dimensional tensors
 

00:23:54.480 --> 00:23:57.430 align:start position:0%
dimensional tensors
we<00:23:54.640><c> do</c><00:23:54.880><c> this</c><00:23:55.039><c> by</c><00:23:55.280><c> calling</c><00:23:56.000><c> a</c><00:23:56.159><c> view</c>

00:23:57.430 --> 00:23:57.440 align:start position:0%
we do this by calling a view
 

00:23:57.440 --> 00:23:59.270 align:start position:0%
we do this by calling a view
and<00:23:57.600><c> we</c><00:23:57.760><c> can</c><00:23:57.919><c> say</c><00:23:58.080><c> that</c><00:23:58.400><c> actually</c><00:23:58.640><c> this</c><00:23:58.880><c> is</c><00:23:58.960><c> not</c>

00:23:59.270 --> 00:23:59.280 align:start position:0%
and we can say that actually this is not
 

00:23:59.280 --> 00:24:02.149 align:start position:0%
and we can say that actually this is not
a<00:23:59.440><c> single</c><00:23:59.760><c> vector</c><00:24:00.080><c> of</c><00:24:00.240><c> 18</c><00:24:01.039><c> this</c><00:24:01.360><c> is</c><00:24:01.520><c> a</c><00:24:01.679><c> two</c><00:24:01.919><c> by</c>

00:24:02.149 --> 00:24:02.159 align:start position:0%
a single vector of 18 this is a two by
 

00:24:02.159 --> 00:24:05.590 align:start position:0%
a single vector of 18 this is a two by
nine<00:24:02.840><c> tensor</c><00:24:04.320><c> or</c><00:24:04.559><c> alternatively</c><00:24:05.200><c> this</c><00:24:05.360><c> is</c><00:24:05.440><c> a</c>

00:24:05.590 --> 00:24:05.600 align:start position:0%
nine tensor or alternatively this is a
 

00:24:05.600 --> 00:24:07.990 align:start position:0%
nine tensor or alternatively this is a
nine<00:24:05.760><c> by</c><00:24:05.919><c> two</c><00:24:06.159><c> tensor</c>

00:24:07.990 --> 00:24:08.000 align:start position:0%
nine by two tensor
 

00:24:08.000 --> 00:24:10.149 align:start position:0%
nine by two tensor
or<00:24:08.480><c> this</c><00:24:08.640><c> is</c><00:24:08.799><c> actually</c><00:24:09.120><c> a</c><00:24:09.280><c> three</c><00:24:09.520><c> by</c><00:24:09.679><c> three</c><00:24:10.000><c> by</c>

00:24:10.149 --> 00:24:10.159 align:start position:0%
or this is actually a three by three by
 

00:24:10.159 --> 00:24:11.830 align:start position:0%
or this is actually a three by three by
two<00:24:10.480><c> tensor</c>

00:24:11.830 --> 00:24:11.840 align:start position:0%
two tensor
 

00:24:11.840 --> 00:24:13.750 align:start position:0%
two tensor
as<00:24:12.000><c> long</c><00:24:12.159><c> as</c><00:24:12.320><c> the</c><00:24:12.400><c> total</c><00:24:12.640><c> number</c><00:24:12.960><c> of</c><00:24:13.200><c> elements</c>

00:24:13.750 --> 00:24:13.760 align:start position:0%
as long as the total number of elements
 

00:24:13.760 --> 00:24:16.470 align:start position:0%
as long as the total number of elements
here<00:24:14.480><c> multiply</c><00:24:14.960><c> to</c><00:24:15.120><c> be</c><00:24:15.279><c> the</c><00:24:15.360><c> same</c>

00:24:16.470 --> 00:24:16.480 align:start position:0%
here multiply to be the same
 

00:24:16.480 --> 00:24:18.950 align:start position:0%
here multiply to be the same
this<00:24:16.640><c> will</c><00:24:16.799><c> just</c><00:24:16.960><c> work</c><00:24:18.159><c> and</c>

00:24:18.950 --> 00:24:18.960 align:start position:0%
this will just work and
 

00:24:18.960 --> 00:24:21.510 align:start position:0%
this will just work and
in<00:24:19.120><c> pytorch</c><00:24:20.000><c> this</c><00:24:20.240><c> operation</c><00:24:20.960><c> calling</c><00:24:21.279><c> that</c>

00:24:21.510 --> 00:24:21.520 align:start position:0%
in pytorch this operation calling that
 

00:24:21.520 --> 00:24:23.990 align:start position:0%
in pytorch this operation calling that
view<00:24:22.080><c> is</c><00:24:22.320><c> extremely</c><00:24:22.880><c> efficient</c>

00:24:23.990 --> 00:24:24.000 align:start position:0%
view is extremely efficient
 

00:24:24.000 --> 00:24:25.990 align:start position:0%
view is extremely efficient
and<00:24:24.159><c> the</c><00:24:24.240><c> reason</c><00:24:24.559><c> for</c><00:24:24.720><c> that</c><00:24:25.039><c> is</c><00:24:25.200><c> that</c>

00:24:25.990 --> 00:24:26.000 align:start position:0%
and the reason for that is that
 

00:24:26.000 --> 00:24:27.830 align:start position:0%
and the reason for that is that
in<00:24:26.159><c> each</c><00:24:26.400><c> tensor</c><00:24:26.960><c> there's</c><00:24:27.360><c> something</c><00:24:27.679><c> called</c>

00:24:27.830 --> 00:24:27.840 align:start position:0%
in each tensor there's something called
 

00:24:27.840 --> 00:24:30.470 align:start position:0%
in each tensor there's something called
the<00:24:28.080><c> underlying</c><00:24:28.559><c> storage</c>

00:24:30.470 --> 00:24:30.480 align:start position:0%
the underlying storage
 

00:24:30.480 --> 00:24:32.789 align:start position:0%
the underlying storage
and<00:24:30.640><c> the</c><00:24:30.799><c> storage</c><00:24:31.360><c> is</c><00:24:31.520><c> just</c><00:24:32.000><c> the</c><00:24:32.159><c> numbers</c>

00:24:32.789 --> 00:24:32.799 align:start position:0%
and the storage is just the numbers
 

00:24:32.799 --> 00:24:34.870 align:start position:0%
and the storage is just the numbers
always<00:24:33.200><c> as</c><00:24:33.360><c> a</c><00:24:33.440><c> one-dimensional</c><00:24:34.159><c> vector</c><00:24:34.799><c> and</c>

00:24:34.870 --> 00:24:34.880 align:start position:0%
always as a one-dimensional vector and
 

00:24:34.880 --> 00:24:37.110 align:start position:0%
always as a one-dimensional vector and
this<00:24:35.120><c> is</c><00:24:35.279><c> how</c><00:24:35.760><c> this</c><00:24:36.000><c> tensor</c><00:24:36.480><c> is</c><00:24:36.559><c> represented</c>

00:24:37.110 --> 00:24:37.120 align:start position:0%
this is how this tensor is represented
 

00:24:37.120 --> 00:24:38.630 align:start position:0%
this is how this tensor is represented
in<00:24:37.200><c> the</c><00:24:37.360><c> computer</c><00:24:37.679><c> memory</c><00:24:38.080><c> it's</c><00:24:38.240><c> always</c><00:24:38.559><c> a</c>

00:24:38.630 --> 00:24:38.640 align:start position:0%
in the computer memory it's always a
 

00:24:38.640 --> 00:24:41.669 align:start position:0%
in the computer memory it's always a
one-dimensional<00:24:39.679><c> vector</c>

00:24:41.669 --> 00:24:41.679 align:start position:0%
one-dimensional vector
 

00:24:41.679 --> 00:24:43.990 align:start position:0%
one-dimensional vector
but<00:24:42.080><c> when</c><00:24:42.240><c> we</c><00:24:42.400><c> call</c><00:24:42.640><c> that</c><00:24:42.880><c> view</c><00:24:43.679><c> we</c><00:24:43.840><c> are</c>

00:24:43.990 --> 00:24:44.000 align:start position:0%
but when we call that view we are
 

00:24:44.000 --> 00:24:46.230 align:start position:0%
but when we call that view we are
manipulating<00:24:44.640><c> some</c><00:24:44.880><c> of</c><00:24:45.360><c> attributes</c><00:24:45.919><c> of</c><00:24:46.080><c> that</c>

00:24:46.230 --> 00:24:46.240 align:start position:0%
manipulating some of attributes of that
 

00:24:46.240 --> 00:24:48.630 align:start position:0%
manipulating some of attributes of that
tensor<00:24:47.200><c> that</c><00:24:47.679><c> dictate</c><00:24:48.320><c> how</c><00:24:48.480><c> this</c>

00:24:48.630 --> 00:24:48.640 align:start position:0%
tensor that dictate how this
 

00:24:48.640 --> 00:24:50.950 align:start position:0%
tensor that dictate how this
one-dimensional<00:24:49.200><c> sequence</c><00:24:50.080><c> is</c><00:24:50.320><c> interpreted</c>

00:24:50.950 --> 00:24:50.960 align:start position:0%
one-dimensional sequence is interpreted
 

00:24:50.960 --> 00:24:53.590 align:start position:0%
one-dimensional sequence is interpreted
to<00:24:51.120><c> be</c><00:24:51.600><c> an</c><00:24:51.760><c> n-dimensional</c><00:24:52.320><c> tensor</c>

00:24:53.590 --> 00:24:53.600 align:start position:0%
to be an n-dimensional tensor
 

00:24:53.600 --> 00:24:55.350 align:start position:0%
to be an n-dimensional tensor
and<00:24:53.760><c> so</c><00:24:53.919><c> what's</c><00:24:54.080><c> happening</c><00:24:54.400><c> here</c><00:24:54.720><c> is</c><00:24:54.880><c> that</c><00:24:55.120><c> no</c>

00:24:55.350 --> 00:24:55.360 align:start position:0%
and so what's happening here is that no
 

00:24:55.360 --> 00:24:57.350 align:start position:0%
and so what's happening here is that no
memory<00:24:55.679><c> is</c><00:24:55.840><c> being</c><00:24:56.080><c> changed</c><00:24:56.480><c> copied</c><00:24:56.880><c> moved</c><00:24:57.200><c> or</c>

00:24:57.350 --> 00:24:57.360 align:start position:0%
memory is being changed copied moved or
 

00:24:57.360 --> 00:24:59.430 align:start position:0%
memory is being changed copied moved or
created<00:24:57.919><c> when</c><00:24:58.080><c> we</c><00:24:58.240><c> call</c><00:24:58.400><c> that</c><00:24:58.640><c> view</c><00:24:59.279><c> the</c>

00:24:59.430 --> 00:24:59.440 align:start position:0%
created when we call that view the
 

00:24:59.440 --> 00:25:00.549 align:start position:0%
created when we call that view the
storage

00:25:00.549 --> 00:25:00.559 align:start position:0%
storage
 

00:25:00.559 --> 00:25:03.110 align:start position:0%
storage
is<00:25:00.799><c> identical</c><00:25:01.600><c> but</c><00:25:01.760><c> when</c><00:25:01.919><c> you</c><00:25:02.080><c> call</c><00:25:02.320><c> that</c><00:25:02.559><c> view</c>

00:25:03.110 --> 00:25:03.120 align:start position:0%
is identical but when you call that view
 

00:25:03.120 --> 00:25:05.110 align:start position:0%
is identical but when you call that view
some<00:25:03.279><c> of</c><00:25:03.440><c> the</c><00:25:03.600><c> internal</c>

00:25:05.110 --> 00:25:05.120 align:start position:0%
some of the internal
 

00:25:05.120 --> 00:25:07.830 align:start position:0%
some of the internal
attributes<00:25:05.919><c> of</c><00:25:06.320><c> the</c><00:25:06.559><c> view</c><00:25:06.880><c> of</c><00:25:06.960><c> the</c><00:25:07.039><c> sensor</c><00:25:07.679><c> are</c>

00:25:07.830 --> 00:25:07.840 align:start position:0%
attributes of the view of the sensor are
 

00:25:07.840 --> 00:25:09.510 align:start position:0%
attributes of the view of the sensor are
being<00:25:08.000><c> manipulated</c><00:25:08.640><c> and</c><00:25:08.799><c> changed</c><00:25:09.360><c> in</c>

00:25:09.510 --> 00:25:09.520 align:start position:0%
being manipulated and changed in
 

00:25:09.520 --> 00:25:10.549 align:start position:0%
being manipulated and changed in
particular<00:25:09.919><c> that's</c><00:25:10.080><c> something</c><00:25:10.320><c> there's</c>

00:25:10.549 --> 00:25:10.559 align:start position:0%
particular that's something there's
 

00:25:10.559 --> 00:25:12.310 align:start position:0%
particular that's something there's
something<00:25:10.799><c> called</c><00:25:11.120><c> a</c><00:25:11.279><c> storage</c><00:25:11.679><c> offset</c>

00:25:12.310 --> 00:25:12.320 align:start position:0%
something called a storage offset
 

00:25:12.320 --> 00:25:14.149 align:start position:0%
something called a storage offset
strides<00:25:12.960><c> and</c><00:25:13.120><c> shapes</c><00:25:13.760><c> and</c><00:25:13.840><c> those</c><00:25:14.080><c> are</c>

00:25:14.149 --> 00:25:14.159 align:start position:0%
strides and shapes and those are
 

00:25:14.159 --> 00:25:15.990 align:start position:0%
strides and shapes and those are
manipulated<00:25:14.960><c> so</c><00:25:15.120><c> that</c><00:25:15.279><c> this</c><00:25:15.440><c> one-dimensional</c>

00:25:15.990 --> 00:25:16.000 align:start position:0%
manipulated so that this one-dimensional
 

00:25:16.000 --> 00:25:18.549 align:start position:0%
manipulated so that this one-dimensional
sequence<00:25:16.480><c> of</c><00:25:16.799><c> bytes</c><00:25:17.360><c> is</c><00:25:17.679><c> seen</c><00:25:18.000><c> as</c><00:25:18.159><c> different</c>

00:25:18.549 --> 00:25:18.559 align:start position:0%
sequence of bytes is seen as different
 

00:25:18.559 --> 00:25:20.549 align:start position:0%
sequence of bytes is seen as different
and<00:25:18.640><c> dimensional</c><00:25:19.120><c> arrays</c>

00:25:20.549 --> 00:25:20.559 align:start position:0%
and dimensional arrays
 

00:25:20.559 --> 00:25:22.710 align:start position:0%
and dimensional arrays
there's<00:25:20.799><c> a</c><00:25:20.880><c> blog</c><00:25:21.120><c> post</c><00:25:21.360><c> here</c><00:25:21.679><c> from</c><00:25:22.159><c> eric</c>

00:25:22.710 --> 00:25:22.720 align:start position:0%
there's a blog post here from eric
 

00:25:22.720 --> 00:25:25.269 align:start position:0%
there's a blog post here from eric
called<00:25:22.960><c> pi</c><00:25:23.120><c> torch</c><00:25:23.440><c> internals</c><00:25:24.400><c> where</c><00:25:24.880><c> he</c><00:25:25.120><c> goes</c>

00:25:25.269 --> 00:25:25.279 align:start position:0%
called pi torch internals where he goes
 

00:25:25.279 --> 00:25:27.510 align:start position:0%
called pi torch internals where he goes
into<00:25:25.520><c> some</c><00:25:25.679><c> of</c><00:25:25.760><c> this</c><00:25:26.320><c> with</c><00:25:26.480><c> respect</c><00:25:26.799><c> to</c><00:25:26.960><c> tensor</c>

00:25:27.510 --> 00:25:27.520 align:start position:0%
into some of this with respect to tensor
 

00:25:27.520 --> 00:25:29.110 align:start position:0%
into some of this with respect to tensor
and<00:25:27.679><c> how</c><00:25:27.919><c> the</c><00:25:28.080><c> view</c><00:25:28.400><c> of</c><00:25:28.480><c> the</c><00:25:28.559><c> tensor</c><00:25:28.960><c> is</c>

00:25:29.110 --> 00:25:29.120 align:start position:0%
and how the view of the tensor is
 

00:25:29.120 --> 00:25:30.310 align:start position:0%
and how the view of the tensor is
represented

00:25:30.310 --> 00:25:30.320 align:start position:0%
represented
 

00:25:30.320 --> 00:25:32.390 align:start position:0%
represented
and<00:25:30.400><c> this</c><00:25:30.640><c> is</c><00:25:30.720><c> really</c><00:25:30.880><c> just</c><00:25:31.039><c> like</c><00:25:31.200><c> a</c><00:25:31.360><c> logical</c>

00:25:32.390 --> 00:25:32.400 align:start position:0%
and this is really just like a logical
 

00:25:32.400 --> 00:25:34.310 align:start position:0%
and this is really just like a logical
construct<00:25:33.120><c> of</c><00:25:33.360><c> representing</c><00:25:33.840><c> the</c><00:25:34.000><c> physical</c>

00:25:34.310 --> 00:25:34.320 align:start position:0%
construct of representing the physical
 

00:25:34.320 --> 00:25:35.750 align:start position:0%
construct of representing the physical
memory

00:25:35.750 --> 00:25:35.760 align:start position:0%
memory
 

00:25:35.760 --> 00:25:38.230 align:start position:0%
memory
and<00:25:36.159><c> so</c><00:25:36.320><c> this</c><00:25:36.480><c> is</c><00:25:36.559><c> a</c><00:25:36.640><c> pretty</c><00:25:36.880><c> good</c><00:25:37.279><c> um</c><00:25:38.000><c> blog</c>

00:25:38.230 --> 00:25:38.240 align:start position:0%
and so this is a pretty good um blog
 

00:25:38.240 --> 00:25:39.990 align:start position:0%
and so this is a pretty good um blog
post<00:25:38.400><c> that</c><00:25:38.559><c> you</c><00:25:38.640><c> can</c><00:25:38.720><c> go</c><00:25:38.880><c> into</c><00:25:39.360><c> i</c><00:25:39.520><c> might</c><00:25:39.760><c> also</c>

00:25:39.990 --> 00:25:40.000 align:start position:0%
post that you can go into i might also
 

00:25:40.000 --> 00:25:41.830 align:start position:0%
post that you can go into i might also
create<00:25:40.240><c> an</c><00:25:40.320><c> entire</c><00:25:40.720><c> video</c><00:25:41.200><c> on</c><00:25:41.279><c> the</c><00:25:41.440><c> internals</c>

00:25:41.830 --> 00:25:41.840 align:start position:0%
create an entire video on the internals
 

00:25:41.840 --> 00:25:44.390 align:start position:0%
create an entire video on the internals
of<00:25:41.919><c> torch</c><00:25:42.159><c> tensor</c><00:25:42.480><c> and</c><00:25:42.640><c> how</c><00:25:42.799><c> this</c><00:25:42.960><c> works</c>

00:25:44.390 --> 00:25:44.400 align:start position:0%
of torch tensor and how this works
 

00:25:44.400 --> 00:25:46.149 align:start position:0%
of torch tensor and how this works
for<00:25:44.640><c> here</c><00:25:45.120><c> we</c><00:25:45.279><c> just</c><00:25:45.440><c> note</c><00:25:45.600><c> that</c><00:25:45.760><c> this</c><00:25:45.919><c> is</c><00:25:46.000><c> an</c>

00:25:46.149 --> 00:25:46.159 align:start position:0%
for here we just note that this is an
 

00:25:46.159 --> 00:25:48.070 align:start position:0%
for here we just note that this is an
extremely<00:25:46.480><c> efficient</c><00:25:46.880><c> operation</c>

00:25:48.070 --> 00:25:48.080 align:start position:0%
extremely efficient operation
 

00:25:48.080 --> 00:25:50.549 align:start position:0%
extremely efficient operation
and<00:25:48.400><c> if</c><00:25:48.559><c> i</c><00:25:48.880><c> delete</c><00:25:49.279><c> this</c><00:25:49.679><c> and</c><00:25:49.840><c> come</c><00:25:50.000><c> back</c><00:25:50.320><c> to</c>

00:25:50.549 --> 00:25:50.559 align:start position:0%
and if i delete this and come back to
 

00:25:50.559 --> 00:25:53.110 align:start position:0%
and if i delete this and come back to
our<00:25:51.039><c> end</c>

00:25:53.110 --> 00:25:53.120 align:start position:0%
our end
 

00:25:53.120 --> 00:25:55.350 align:start position:0%
our end
we<00:25:53.279><c> see</c><00:25:53.440><c> that</c><00:25:53.600><c> the</c><00:25:53.760><c> shape</c><00:25:54.000><c> of</c><00:25:54.159><c> our</c><00:25:54.320><c> end</c><00:25:54.799><c> is</c><00:25:55.039><c> 32</c>

00:25:55.350 --> 00:25:55.360 align:start position:0%
we see that the shape of our end is 32
 

00:25:55.360 --> 00:25:58.070 align:start position:0%
we see that the shape of our end is 32
by<00:25:55.520><c> three</c><00:25:55.600><c> by</c><00:25:55.840><c> two</c><00:25:56.559><c> but</c><00:25:56.720><c> we</c><00:25:56.880><c> can</c><00:25:57.039><c> simply</c>

00:25:58.070 --> 00:25:58.080 align:start position:0%
by three by two but we can simply
 

00:25:58.080 --> 00:26:00.549 align:start position:0%
by three by two but we can simply
ask<00:25:58.559><c> for</c><00:25:58.720><c> pytorch</c><00:25:59.200><c> to</c><00:25:59.279><c> view</c><00:25:59.520><c> this</c><00:25:59.840><c> instead</c><00:26:00.400><c> as</c>

00:26:00.549 --> 00:26:00.559 align:start position:0%
ask for pytorch to view this instead as
 

00:26:00.559 --> 00:26:02.950 align:start position:0%
ask for pytorch to view this instead as
a<00:26:00.640><c> 32</c><00:26:01.039><c> by</c><00:26:01.200><c> six</c>

00:26:02.950 --> 00:26:02.960 align:start position:0%
a 32 by six
 

00:26:02.960 --> 00:26:05.350 align:start position:0%
a 32 by six
and<00:26:03.520><c> the</c><00:26:03.679><c> way</c><00:26:03.840><c> this</c><00:26:04.080><c> gets</c><00:26:04.559><c> flattened</c><00:26:05.120><c> into</c><00:26:05.279><c> a</c>

00:26:05.350 --> 00:26:05.360 align:start position:0%
and the way this gets flattened into a
 

00:26:05.360 --> 00:26:07.590 align:start position:0%
and the way this gets flattened into a
32<00:26:05.760><c> by</c><00:26:06.000><c> six</c><00:26:06.320><c> array</c>

00:26:07.590 --> 00:26:07.600 align:start position:0%
32 by six array
 

00:26:07.600 --> 00:26:09.350 align:start position:0%
32 by six array
just<00:26:07.840><c> happens</c><00:26:08.240><c> that</c>

00:26:09.350 --> 00:26:09.360 align:start position:0%
just happens that
 

00:26:09.360 --> 00:26:10.870 align:start position:0%
just happens that
these<00:26:09.679><c> two</c>

00:26:10.870 --> 00:26:10.880 align:start position:0%
these two
 

00:26:10.880 --> 00:26:12.470 align:start position:0%
these two
get<00:26:11.279><c> stacked</c><00:26:11.760><c> up</c>

00:26:12.470 --> 00:26:12.480 align:start position:0%
get stacked up
 

00:26:12.480 --> 00:26:14.390 align:start position:0%
get stacked up
in<00:26:12.640><c> a</c><00:26:12.720><c> single</c><00:26:13.120><c> row</c><00:26:13.679><c> and</c><00:26:13.760><c> so</c><00:26:13.919><c> that's</c><00:26:14.080><c> basically</c>

00:26:14.390 --> 00:26:14.400 align:start position:0%
in a single row and so that's basically
 

00:26:14.400 --> 00:26:15.830 align:start position:0%
in a single row and so that's basically
the<00:26:14.480><c> concatenation</c><00:26:15.200><c> operation</c><00:26:15.600><c> that</c><00:26:15.679><c> we're</c>

00:26:15.830 --> 00:26:15.840 align:start position:0%
the concatenation operation that we're
 

00:26:15.840 --> 00:26:17.190 align:start position:0%
the concatenation operation that we're
after

00:26:17.190 --> 00:26:17.200 align:start position:0%
after
 

00:26:17.200 --> 00:26:18.630 align:start position:0%
after
and<00:26:17.279><c> you</c><00:26:17.440><c> can</c><00:26:17.520><c> verify</c><00:26:17.919><c> that</c><00:26:18.080><c> this</c><00:26:18.320><c> actually</c>

00:26:18.630 --> 00:26:18.640 align:start position:0%
and you can verify that this actually
 

00:26:18.640 --> 00:26:20.390 align:start position:0%
and you can verify that this actually
gives<00:26:18.880><c> the</c><00:26:18.960><c> exact</c><00:26:19.279><c> same</c><00:26:19.520><c> result</c><00:26:20.000><c> as</c><00:26:20.159><c> what</c><00:26:20.320><c> we</c>

00:26:20.390 --> 00:26:20.400 align:start position:0%
gives the exact same result as what we
 

00:26:20.400 --> 00:26:22.149 align:start position:0%
gives the exact same result as what we
had<00:26:20.559><c> before</c>

00:26:22.149 --> 00:26:22.159 align:start position:0%
had before
 

00:26:22.159 --> 00:26:23.750 align:start position:0%
had before
so<00:26:22.320><c> this</c><00:26:22.480><c> is</c><00:26:22.640><c> an</c><00:26:22.799><c> element</c><00:26:23.039><c> y</c><00:26:23.279><c> equals</c><00:26:23.600><c> and</c><00:26:23.679><c> you</c>

00:26:23.750 --> 00:26:23.760 align:start position:0%
so this is an element y equals and you
 

00:26:23.760 --> 00:26:25.190 align:start position:0%
so this is an element y equals and you
can<00:26:23.919><c> see</c><00:26:24.080><c> that</c><00:26:24.240><c> all</c><00:26:24.320><c> the</c><00:26:24.480><c> elements</c><00:26:24.960><c> of</c><00:26:25.039><c> these</c>

00:26:25.190 --> 00:26:25.200 align:start position:0%
can see that all the elements of these
 

00:26:25.200 --> 00:26:27.669 align:start position:0%
can see that all the elements of these
two<00:26:25.360><c> tensors</c><00:26:26.000><c> are</c><00:26:26.400><c> the</c><00:26:26.559><c> same</c>

00:26:27.669 --> 00:26:27.679 align:start position:0%
two tensors are the same
 

00:26:27.679 --> 00:26:30.789 align:start position:0%
two tensors are the same
and<00:26:27.919><c> so</c><00:26:28.080><c> we</c><00:26:28.320><c> get</c><00:26:28.480><c> the</c><00:26:28.640><c> exact</c><00:26:28.960><c> same</c><00:26:29.120><c> result</c>

00:26:30.789 --> 00:26:30.799 align:start position:0%
and so we get the exact same result
 

00:26:30.799 --> 00:26:33.029 align:start position:0%
and so we get the exact same result
so<00:26:30.960><c> long</c><00:26:31.120><c> story</c><00:26:31.440><c> short</c><00:26:31.840><c> we</c><00:26:32.000><c> can</c><00:26:32.559><c> actually</c><00:26:32.880><c> just</c>

00:26:33.029 --> 00:26:33.039 align:start position:0%
so long story short we can actually just
 

00:26:33.039 --> 00:26:34.149 align:start position:0%
so long story short we can actually just
come<00:26:33.279><c> here</c>

00:26:34.149 --> 00:26:34.159 align:start position:0%
come here
 

00:26:34.159 --> 00:26:38.870 align:start position:0%
come here
and<00:26:34.320><c> if</c><00:26:34.480><c> we</c><00:26:34.640><c> just</c><00:26:34.880><c> view</c><00:26:35.039><c> this</c><00:26:35.440><c> as</c><00:26:35.600><c> a</c><00:26:35.760><c> 32x6</c>

00:26:38.870 --> 00:26:38.880 align:start position:0%
 
 

00:26:38.880 --> 00:26:40.789 align:start position:0%
 
instead<00:26:39.600><c> then</c><00:26:39.760><c> this</c><00:26:39.919><c> multiplication</c><00:26:40.640><c> will</c>

00:26:40.789 --> 00:26:40.799 align:start position:0%
instead then this multiplication will
 

00:26:40.799 --> 00:26:43.110 align:start position:0%
instead then this multiplication will
work<00:26:41.520><c> and</c><00:26:41.679><c> give</c><00:26:41.919><c> us</c><00:26:42.000><c> the</c><00:26:42.080><c> hidden</c><00:26:42.400><c> states</c><00:26:42.960><c> that</c>

00:26:43.110 --> 00:26:43.120 align:start position:0%
work and give us the hidden states that
 

00:26:43.120 --> 00:26:44.230 align:start position:0%
work and give us the hidden states that
we're<00:26:43.360><c> after</c>

00:26:44.230 --> 00:26:44.240 align:start position:0%
we're after
 

00:26:44.240 --> 00:26:45.909 align:start position:0%
we're after
so<00:26:44.400><c> if</c><00:26:44.480><c> this</c><00:26:44.720><c> is</c><00:26:44.960><c> h</c>

00:26:45.909 --> 00:26:45.919 align:start position:0%
so if this is h
 

00:26:45.919 --> 00:26:48.390 align:start position:0%
so if this is h
then<00:26:46.159><c> h</c><00:26:46.720><c> shape</c><00:26:47.440><c> is</c><00:26:47.600><c> now</c>

00:26:48.390 --> 00:26:48.400 align:start position:0%
then h shape is now
 

00:26:48.400 --> 00:26:51.029 align:start position:0%
then h shape is now
the<00:26:48.559><c> 100</c><00:26:48.799><c> dimensional</c><00:26:49.679><c> activations</c><00:26:50.799><c> for</c>

00:26:51.029 --> 00:26:51.039 align:start position:0%
the 100 dimensional activations for
 

00:26:51.039 --> 00:26:53.430 align:start position:0%
the 100 dimensional activations for
every<00:26:51.200><c> one</c><00:26:51.360><c> of</c><00:26:51.520><c> our</c><00:26:51.600><c> 32</c><00:26:52.320><c> examples</c>

00:26:53.430 --> 00:26:53.440 align:start position:0%
every one of our 32 examples
 

00:26:53.440 --> 00:26:55.590 align:start position:0%
every one of our 32 examples
and<00:26:53.520><c> this</c><00:26:53.760><c> gives</c><00:26:54.000><c> the</c><00:26:54.080><c> desired</c><00:26:54.640><c> result</c><00:26:55.360><c> let</c><00:26:55.520><c> me</c>

00:26:55.590 --> 00:26:55.600 align:start position:0%
and this gives the desired result let me
 

00:26:55.600 --> 00:26:57.909 align:start position:0%
and this gives the desired result let me
do<00:26:55.760><c> two</c><00:26:55.919><c> things</c><00:26:56.159><c> here</c><00:26:56.880><c> number</c><00:26:57.200><c> one</c><00:26:57.520><c> let's</c><00:26:57.760><c> not</c>

00:26:57.909 --> 00:26:57.919 align:start position:0%
do two things here number one let's not
 

00:26:57.919 --> 00:27:00.470 align:start position:0%
do two things here number one let's not
use<00:26:58.159><c> 32</c><00:26:58.720><c> we</c><00:26:58.880><c> can</c><00:26:59.120><c> for</c><00:26:59.279><c> example</c><00:26:59.760><c> do</c><00:27:00.000><c> something</c>

00:27:00.470 --> 00:27:00.480 align:start position:0%
use 32 we can for example do something
 

00:27:00.480 --> 00:27:02.990 align:start position:0%
use 32 we can for example do something
like

00:27:02.990 --> 00:27:03.000 align:start position:0%
 
 

00:27:03.000 --> 00:27:05.430 align:start position:0%
 
m.shape<00:27:04.240><c> at</c><00:27:04.400><c> 0</c>

00:27:05.430 --> 00:27:05.440 align:start position:0%
m.shape at 0
 

00:27:05.440 --> 00:27:07.430 align:start position:0%
m.shape at 0
so<00:27:05.600><c> that</c><00:27:05.760><c> we</c><00:27:05.840><c> don't</c><00:27:06.159><c> hard</c><00:27:06.400><c> code</c><00:27:06.720><c> these</c><00:27:06.960><c> numbers</c>

00:27:07.430 --> 00:27:07.440 align:start position:0%
so that we don't hard code these numbers
 

00:27:07.440 --> 00:27:09.350 align:start position:0%
so that we don't hard code these numbers
and<00:27:07.520><c> this</c><00:27:07.679><c> would</c><00:27:07.840><c> work</c><00:27:08.080><c> for</c><00:27:08.240><c> any</c><00:27:08.799><c> size</c><00:27:09.039><c> of</c><00:27:09.200><c> this</c>

00:27:09.350 --> 00:27:09.360 align:start position:0%
and this would work for any size of this
 

00:27:09.360 --> 00:27:10.310 align:start position:0%
and this would work for any size of this
amp

00:27:10.310 --> 00:27:10.320 align:start position:0%
amp
 

00:27:10.320 --> 00:27:11.909 align:start position:0%
amp
or<00:27:10.480><c> alternatively</c><00:27:11.039><c> we</c><00:27:11.120><c> can</c><00:27:11.279><c> also</c><00:27:11.440><c> do</c><00:27:11.600><c> negative</c>

00:27:11.909 --> 00:27:11.919 align:start position:0%
or alternatively we can also do negative
 

00:27:11.919 --> 00:27:14.149 align:start position:0%
or alternatively we can also do negative
one<00:27:12.480><c> when</c><00:27:12.640><c> we</c><00:27:12.720><c> do</c><00:27:12.880><c> negative</c><00:27:13.200><c> one</c><00:27:13.679><c> pi</c><00:27:13.919><c> torch</c>

00:27:14.149 --> 00:27:14.159 align:start position:0%
one when we do negative one pi torch
 

00:27:14.159 --> 00:27:16.710 align:start position:0%
one when we do negative one pi torch
will<00:27:14.400><c> infer</c><00:27:15.039><c> what</c><00:27:15.200><c> this</c><00:27:15.440><c> should</c><00:27:15.600><c> be</c>

00:27:16.710 --> 00:27:16.720 align:start position:0%
will infer what this should be
 

00:27:16.720 --> 00:27:17.909 align:start position:0%
will infer what this should be
because<00:27:16.960><c> the</c><00:27:17.039><c> number</c><00:27:17.279><c> of</c><00:27:17.360><c> elements</c><00:27:17.679><c> must</c><00:27:17.840><c> be</c>

00:27:17.909 --> 00:27:17.919 align:start position:0%
because the number of elements must be
 

00:27:17.919 --> 00:27:20.310 align:start position:0%
because the number of elements must be
the<00:27:18.159><c> same</c><00:27:18.720><c> and</c><00:27:18.880><c> we're</c><00:27:19.039><c> saying</c><00:27:19.279><c> that</c><00:27:19.360><c> this</c><00:27:19.520><c> is</c><00:27:19.679><c> 6</c>

00:27:20.310 --> 00:27:20.320 align:start position:0%
the same and we're saying that this is 6
 

00:27:20.320 --> 00:27:21.909 align:start position:0%
the same and we're saying that this is 6
by<00:27:20.480><c> church</c><00:27:20.720><c> will</c><00:27:20.799><c> derive</c><00:27:21.200><c> that</c><00:27:21.279><c> this</c><00:27:21.440><c> must</c><00:27:21.679><c> be</c>

00:27:21.909 --> 00:27:21.919 align:start position:0%
by church will derive that this must be
 

00:27:21.919 --> 00:27:24.789 align:start position:0%
by church will derive that this must be
32<00:27:22.640><c> or</c><00:27:22.799><c> whatever</c><00:27:23.200><c> else</c><00:27:23.520><c> it</c><00:27:23.679><c> is</c><00:27:24.080><c> if</c><00:27:24.320><c> m</c><00:27:24.559><c> is</c><00:27:24.640><c> of</c>

00:27:24.789 --> 00:27:24.799 align:start position:0%
32 or whatever else it is if m is of
 

00:27:24.799 --> 00:27:26.789 align:start position:0%
32 or whatever else it is if m is of
different<00:27:25.120><c> size</c>

00:27:26.789 --> 00:27:26.799 align:start position:0%
different size
 

00:27:26.799 --> 00:27:29.510 align:start position:0%
different size
the<00:27:26.960><c> other</c><00:27:27.120><c> thing</c><00:27:27.279><c> is</c><00:27:27.520><c> here</c><00:27:28.159><c> um</c>

00:27:29.510 --> 00:27:29.520 align:start position:0%
the other thing is here um
 

00:27:29.520 --> 00:27:33.029 align:start position:0%
the other thing is here um
one<00:27:29.679><c> more</c><00:27:29.840><c> thing</c><00:27:30.000><c> i'd</c><00:27:30.080><c> like</c><00:27:30.240><c> to</c><00:27:30.320><c> point</c><00:27:30.559><c> out</c><00:27:30.880><c> is</c>

00:27:33.029 --> 00:27:33.039 align:start position:0%
one more thing i'd like to point out is
 

00:27:33.039 --> 00:27:35.190 align:start position:0%
one more thing i'd like to point out is
here<00:27:33.200><c> when</c><00:27:33.360><c> we</c><00:27:33.440><c> do</c><00:27:33.600><c> the</c><00:27:33.760><c> concatenation</c>

00:27:35.190 --> 00:27:35.200 align:start position:0%
here when we do the concatenation
 

00:27:35.200 --> 00:27:37.590 align:start position:0%
here when we do the concatenation
this<00:27:35.440><c> actually</c><00:27:36.000><c> is</c><00:27:36.240><c> much</c><00:27:36.480><c> less</c><00:27:36.720><c> efficient</c>

00:27:37.590 --> 00:27:37.600 align:start position:0%
this actually is much less efficient
 

00:27:37.600 --> 00:27:39.909 align:start position:0%
this actually is much less efficient
because<00:27:38.400><c> um</c><00:27:38.799><c> this</c><00:27:39.039><c> concatenation</c><00:27:39.679><c> would</c>

00:27:39.909 --> 00:27:39.919 align:start position:0%
because um this concatenation would
 

00:27:39.919 --> 00:27:41.350 align:start position:0%
because um this concatenation would
create<00:27:40.080><c> a</c><00:27:40.159><c> whole</c><00:27:40.320><c> new</c><00:27:40.559><c> tensor</c><00:27:40.960><c> with</c><00:27:41.120><c> a</c><00:27:41.200><c> whole</c>

00:27:41.350 --> 00:27:41.360 align:start position:0%
create a whole new tensor with a whole
 

00:27:41.360 --> 00:27:43.269 align:start position:0%
create a whole new tensor with a whole
new<00:27:41.600><c> storage</c><00:27:42.240><c> so</c><00:27:42.480><c> new</c><00:27:42.640><c> memory</c><00:27:42.960><c> is</c><00:27:43.039><c> being</c>

00:27:43.269 --> 00:27:43.279 align:start position:0%
new storage so new memory is being
 

00:27:43.279 --> 00:27:44.870 align:start position:0%
new storage so new memory is being
created<00:27:44.000><c> because</c><00:27:44.240><c> there's</c><00:27:44.400><c> no</c><00:27:44.559><c> way</c><00:27:44.720><c> to</c>

00:27:44.870 --> 00:27:44.880 align:start position:0%
created because there's no way to
 

00:27:44.880 --> 00:27:46.950 align:start position:0%
created because there's no way to
concatenate<00:27:45.520><c> tensors</c><00:27:46.080><c> just</c><00:27:46.240><c> by</c><00:27:46.400><c> manipulating</c>

00:27:46.950 --> 00:27:46.960 align:start position:0%
concatenate tensors just by manipulating
 

00:27:46.960 --> 00:27:48.470 align:start position:0%
concatenate tensors just by manipulating
the<00:27:47.120><c> view</c><00:27:47.360><c> attributes</c>

00:27:48.470 --> 00:27:48.480 align:start position:0%
the view attributes
 

00:27:48.480 --> 00:27:50.070 align:start position:0%
the view attributes
so<00:27:48.640><c> this</c><00:27:48.880><c> is</c><00:27:49.039><c> inefficient</c><00:27:49.600><c> and</c><00:27:49.679><c> creates</c><00:27:50.000><c> all</c>

00:27:50.070 --> 00:27:50.080 align:start position:0%
so this is inefficient and creates all
 

00:27:50.080 --> 00:27:52.310 align:start position:0%
so this is inefficient and creates all
kinds<00:27:50.320><c> of</c><00:27:50.400><c> new</c><00:27:50.559><c> memory</c>

00:27:52.310 --> 00:27:52.320 align:start position:0%
kinds of new memory
 

00:27:52.320 --> 00:27:55.510 align:start position:0%
kinds of new memory
uh<00:27:52.480><c> so</c><00:27:52.640><c> let</c><00:27:52.799><c> me</c><00:27:53.279><c> delete</c><00:27:53.600><c> this</c><00:27:53.840><c> now</c>

00:27:55.510 --> 00:27:55.520 align:start position:0%
uh so let me delete this now
 

00:27:55.520 --> 00:27:57.190 align:start position:0%
uh so let me delete this now
we<00:27:55.679><c> don't</c><00:27:55.840><c> need</c><00:27:56.000><c> this</c>

00:27:57.190 --> 00:27:57.200 align:start position:0%
we don't need this
 

00:27:57.200 --> 00:27:59.590 align:start position:0%
we don't need this
and<00:27:57.360><c> here</c><00:27:57.600><c> to</c><00:27:57.679><c> calculate</c><00:27:58.240><c> h</c><00:27:58.640><c> we</c><00:27:58.880><c> want</c><00:27:59.039><c> to</c><00:27:59.200><c> also</c>

00:27:59.590 --> 00:27:59.600 align:start position:0%
and here to calculate h we want to also
 

00:27:59.600 --> 00:28:01.430 align:start position:0%
and here to calculate h we want to also
dot<00:27:59.840><c> 10h</c>

00:28:01.430 --> 00:28:01.440 align:start position:0%
dot 10h
 

00:28:01.440 --> 00:28:02.470 align:start position:0%
dot 10h
of<00:28:01.679><c> this</c>

00:28:02.470 --> 00:28:02.480 align:start position:0%
of this
 

00:28:02.480 --> 00:28:04.389 align:start position:0%
of this
to<00:28:02.640><c> get</c><00:28:02.960><c> our</c>

00:28:04.389 --> 00:28:04.399 align:start position:0%
to get our
 

00:28:04.399 --> 00:28:07.029 align:start position:0%
to get our
oops<00:28:04.880><c> to</c><00:28:05.039><c> get</c><00:28:05.279><c> our</c><00:28:05.440><c> h</c>

00:28:07.029 --> 00:28:07.039 align:start position:0%
oops to get our h
 

00:28:07.039 --> 00:28:08.230 align:start position:0%
oops to get our h
so<00:28:07.200><c> these</c><00:28:07.360><c> are</c><00:28:07.440><c> now</c><00:28:07.600><c> numbers</c><00:28:07.919><c> between</c>

00:28:08.230 --> 00:28:08.240 align:start position:0%
so these are now numbers between
 

00:28:08.240 --> 00:28:10.470 align:start position:0%
so these are now numbers between
negative<00:28:08.480><c> one</c><00:28:08.720><c> and</c><00:28:08.799><c> one</c><00:28:09.039><c> because</c><00:28:09.200><c> of</c><00:28:09.279><c> the</c><00:28:09.440><c> 10h</c>

00:28:10.470 --> 00:28:10.480 align:start position:0%
negative one and one because of the 10h
 

00:28:10.480 --> 00:28:11.669 align:start position:0%
negative one and one because of the 10h
and<00:28:10.640><c> we</c><00:28:10.799><c> have</c>

00:28:11.669 --> 00:28:11.679 align:start position:0%
and we have
 

00:28:11.679 --> 00:28:13.990 align:start position:0%
and we have
that<00:28:11.840><c> the</c><00:28:12.000><c> shape</c><00:28:12.240><c> is</c><00:28:12.320><c> 32</c><00:28:12.720><c> by</c><00:28:12.799><c> 100</c>

00:28:13.990 --> 00:28:14.000 align:start position:0%
that the shape is 32 by 100
 

00:28:14.000 --> 00:28:15.909 align:start position:0%
that the shape is 32 by 100
and<00:28:14.159><c> that</c><00:28:14.399><c> is</c><00:28:14.559><c> basically</c><00:28:14.960><c> this</c><00:28:15.440><c> hidden</c><00:28:15.679><c> layer</c>

00:28:15.909 --> 00:28:15.919 align:start position:0%
and that is basically this hidden layer
 

00:28:15.919 --> 00:28:17.590 align:start position:0%
and that is basically this hidden layer
of<00:28:16.080><c> activations</c><00:28:16.720><c> here</c>

00:28:17.590 --> 00:28:17.600 align:start position:0%
of activations here
 

00:28:17.600 --> 00:28:20.230 align:start position:0%
of activations here
for<00:28:17.760><c> every</c><00:28:17.919><c> one</c><00:28:18.080><c> of</c><00:28:18.240><c> our</c><00:28:18.399><c> 32</c><00:28:19.200><c> examples</c>

00:28:20.230 --> 00:28:20.240 align:start position:0%
for every one of our 32 examples
 

00:28:20.240 --> 00:28:21.510 align:start position:0%
for every one of our 32 examples
now<00:28:20.399><c> there's</c><00:28:20.559><c> one</c><00:28:20.720><c> more</c><00:28:20.880><c> thing</c><00:28:21.039><c> i've</c><00:28:21.200><c> lost</c>

00:28:21.510 --> 00:28:21.520 align:start position:0%
now there's one more thing i've lost
 

00:28:21.520 --> 00:28:23.029 align:start position:0%
now there's one more thing i've lost
over<00:28:21.919><c> that</c><00:28:22.159><c> we</c><00:28:22.240><c> have</c><00:28:22.399><c> to</c><00:28:22.480><c> be</c><00:28:22.559><c> very</c><00:28:22.720><c> careful</c>

00:28:23.029 --> 00:28:23.039 align:start position:0%
over that we have to be very careful
 

00:28:23.039 --> 00:28:24.389 align:start position:0%
over that we have to be very careful
with<00:28:23.279><c> and</c><00:28:23.360><c> that</c><00:28:23.600><c> this</c>

00:28:24.389 --> 00:28:24.399 align:start position:0%
with and that this
 

00:28:24.399 --> 00:28:26.149 align:start position:0%
with and that this
and<00:28:24.480><c> that's</c><00:28:24.720><c> this</c><00:28:25.039><c> plus</c><00:28:25.279><c> here</c>

00:28:26.149 --> 00:28:26.159 align:start position:0%
and that's this plus here
 

00:28:26.159 --> 00:28:27.510 align:start position:0%
and that's this plus here
in<00:28:26.320><c> particular</c><00:28:26.720><c> we</c><00:28:26.880><c> want</c><00:28:26.960><c> to</c><00:28:27.120><c> make</c><00:28:27.200><c> sure</c><00:28:27.360><c> that</c>

00:28:27.510 --> 00:28:27.520 align:start position:0%
in particular we want to make sure that
 

00:28:27.520 --> 00:28:30.710 align:start position:0%
in particular we want to make sure that
the<00:28:28.000><c> broadcasting</c><00:28:28.720><c> will</c><00:28:28.960><c> do</c><00:28:29.200><c> what</c><00:28:29.360><c> we</c><00:28:29.600><c> like</c>

00:28:30.710 --> 00:28:30.720 align:start position:0%
the broadcasting will do what we like
 

00:28:30.720 --> 00:28:33.350 align:start position:0%
the broadcasting will do what we like
the<00:28:30.880><c> shape</c><00:28:31.120><c> of</c><00:28:31.200><c> this</c><00:28:31.520><c> is</c><00:28:31.679><c> 32</c><00:28:32.080><c> by</c><00:28:32.240><c> 100</c><00:28:33.039><c> and</c><00:28:33.200><c> the</c>

00:28:33.350 --> 00:28:33.360 align:start position:0%
the shape of this is 32 by 100 and the
 

00:28:33.360 --> 00:28:35.669 align:start position:0%
the shape of this is 32 by 100 and the
ones<00:28:33.679><c> shape</c><00:28:34.159><c> is</c><00:28:34.320><c> 100.</c>

00:28:35.669 --> 00:28:35.679 align:start position:0%
ones shape is 100.
 

00:28:35.679 --> 00:28:37.590 align:start position:0%
ones shape is 100.
so<00:28:36.080><c> we</c><00:28:36.240><c> see</c><00:28:36.399><c> that</c><00:28:36.640><c> the</c><00:28:36.799><c> addition</c><00:28:37.200><c> here</c><00:28:37.440><c> will</c>

00:28:37.590 --> 00:28:37.600 align:start position:0%
so we see that the addition here will
 

00:28:37.600 --> 00:28:39.990 align:start position:0%
so we see that the addition here will
broadcast<00:28:38.159><c> these</c><00:28:38.399><c> two</c><00:28:38.960><c> and</c><00:28:39.279><c> in</c><00:28:39.440><c> particular</c><00:28:39.919><c> we</c>

00:28:39.990 --> 00:28:40.000 align:start position:0%
broadcast these two and in particular we
 

00:28:40.000 --> 00:28:44.230 align:start position:0%
broadcast these two and in particular we
have<00:28:40.240><c> 32</c><00:28:40.559><c> by</c><00:28:40.720><c> 100</c><00:28:41.440><c> broadcasting</c><00:28:42.080><c> to</c><00:28:42.320><c> 100.</c>

00:28:44.230 --> 00:28:44.240 align:start position:0%
have 32 by 100 broadcasting to 100.
 

00:28:44.240 --> 00:28:47.190 align:start position:0%
have 32 by 100 broadcasting to 100.
so<00:28:44.799><c> broadcasting</c><00:28:45.360><c> will</c><00:28:45.679><c> align</c><00:28:46.080><c> on</c><00:28:46.240><c> the</c><00:28:46.320><c> right</c>

00:28:47.190 --> 00:28:47.200 align:start position:0%
so broadcasting will align on the right
 

00:28:47.200 --> 00:28:49.269 align:start position:0%
so broadcasting will align on the right
create<00:28:47.520><c> a</c><00:28:47.600><c> fake</c><00:28:47.840><c> dimension</c><00:28:48.240><c> here</c><00:28:48.960><c> so</c><00:28:49.120><c> this</c>

00:28:49.269 --> 00:28:49.279 align:start position:0%
create a fake dimension here so this
 

00:28:49.279 --> 00:28:51.909 align:start position:0%
create a fake dimension here so this
will<00:28:49.440><c> become</c><00:28:49.679><c> a</c><00:28:49.760><c> 1</c><00:28:49.919><c> by</c><00:28:50.159><c> 100</c><00:28:50.640><c> row</c><00:28:50.880><c> vector</c><00:28:51.840><c> and</c>

00:28:51.909 --> 00:28:51.919 align:start position:0%
will become a 1 by 100 row vector and
 

00:28:51.919 --> 00:28:54.710 align:start position:0%
will become a 1 by 100 row vector and
then<00:28:52.080><c> it</c><00:28:52.240><c> will</c><00:28:52.480><c> copy</c><00:28:53.360><c> vertically</c>

00:28:54.710 --> 00:28:54.720 align:start position:0%
then it will copy vertically
 

00:28:54.720 --> 00:28:57.190 align:start position:0%
then it will copy vertically
for<00:28:54.960><c> every</c><00:28:55.200><c> one</c><00:28:55.360><c> of</c><00:28:55.440><c> these</c><00:28:55.600><c> rows</c><00:28:55.919><c> of</c><00:28:56.080><c> 32</c><00:28:56.960><c> and</c><00:28:57.039><c> do</c>

00:28:57.190 --> 00:28:57.200 align:start position:0%
for every one of these rows of 32 and do
 

00:28:57.200 --> 00:28:58.870 align:start position:0%
for every one of these rows of 32 and do
an<00:28:57.360><c> element</c><00:28:57.600><c> wise</c><00:28:57.840><c> addition</c>

00:28:58.870 --> 00:28:58.880 align:start position:0%
an element wise addition
 

00:28:58.880 --> 00:29:00.470 align:start position:0%
an element wise addition
so<00:28:59.360><c> in</c><00:28:59.440><c> this</c><00:28:59.600><c> case</c><00:28:59.840><c> the</c><00:28:59.919><c> correct</c><00:29:00.159><c> thing</c><00:29:00.320><c> will</c>

00:29:00.470 --> 00:29:00.480 align:start position:0%
so in this case the correct thing will
 

00:29:00.480 --> 00:29:02.470 align:start position:0%
so in this case the correct thing will
be<00:29:00.640><c> happening</c><00:29:01.120><c> because</c><00:29:01.440><c> the</c><00:29:01.600><c> same</c><00:29:02.159><c> bias</c>

00:29:02.470 --> 00:29:02.480 align:start position:0%
be happening because the same bias
 

00:29:02.480 --> 00:29:05.830 align:start position:0%
be happening because the same bias
vector<00:29:03.279><c> will</c><00:29:03.440><c> be</c><00:29:03.679><c> added</c><00:29:04.080><c> to</c><00:29:04.320><c> all</c><00:29:04.480><c> the</c><00:29:04.640><c> rows</c>

00:29:05.830 --> 00:29:05.840 align:start position:0%
vector will be added to all the rows
 

00:29:05.840 --> 00:29:06.630 align:start position:0%
vector will be added to all the rows
of

00:29:06.630 --> 00:29:06.640 align:start position:0%
of
 

00:29:06.640 --> 00:29:08.950 align:start position:0%
of
this<00:29:06.880><c> matrix</c><00:29:07.840><c> so</c><00:29:08.080><c> that</c><00:29:08.240><c> is</c><00:29:08.320><c> correct</c><00:29:08.720><c> that's</c>

00:29:08.950 --> 00:29:08.960 align:start position:0%
this matrix so that is correct that's
 

00:29:08.960 --> 00:29:11.269 align:start position:0%
this matrix so that is correct that's
what<00:29:09.039><c> we'd</c><00:29:09.279><c> like</c><00:29:09.919><c> and</c><00:29:10.480><c> it's</c><00:29:10.640><c> always</c><00:29:10.880><c> good</c>

00:29:11.269 --> 00:29:11.279 align:start position:0%
what we'd like and it's always good
 

00:29:11.279 --> 00:29:12.870 align:start position:0%
what we'd like and it's always good
practice<00:29:11.679><c> you</c><00:29:11.679><c> just</c><00:29:11.919><c> make</c><00:29:12.080><c> sure</c>

00:29:12.870 --> 00:29:12.880 align:start position:0%
practice you just make sure
 

00:29:12.880 --> 00:29:14.070 align:start position:0%
practice you just make sure
so<00:29:13.039><c> that</c><00:29:13.200><c> you</c><00:29:13.279><c> don't</c><00:29:13.440><c> shoot</c><00:29:13.679><c> yourself</c><00:29:13.919><c> in</c><00:29:14.000><c> the</c>

00:29:14.070 --> 00:29:14.080 align:start position:0%
so that you don't shoot yourself in the
 

00:29:14.080 --> 00:29:16.149 align:start position:0%
so that you don't shoot yourself in the
foot<00:29:14.720><c> and</c><00:29:14.880><c> finally</c><00:29:15.279><c> let's</c><00:29:15.520><c> create</c><00:29:15.679><c> the</c><00:29:15.840><c> final</c>

00:29:16.149 --> 00:29:16.159 align:start position:0%
foot and finally let's create the final
 

00:29:16.159 --> 00:29:17.590 align:start position:0%
foot and finally let's create the final
layer<00:29:16.399><c> here</c>

00:29:17.590 --> 00:29:17.600 align:start position:0%
layer here
 

00:29:17.600 --> 00:29:19.830 align:start position:0%
layer here
so<00:29:17.760><c> let's</c><00:29:18.000><c> create</c>

00:29:19.830 --> 00:29:19.840 align:start position:0%
so let's create
 

00:29:19.840 --> 00:29:22.630 align:start position:0%
so let's create
w2<00:29:20.320><c> and</c><00:29:20.480><c> v2</c>

00:29:22.630 --> 00:29:22.640 align:start position:0%
w2 and v2
 

00:29:22.640 --> 00:29:24.870 align:start position:0%
w2 and v2
the<00:29:22.880><c> input</c><00:29:23.200><c> now</c><00:29:23.520><c> is</c><00:29:23.679><c> 100</c>

00:29:24.870 --> 00:29:24.880 align:start position:0%
the input now is 100
 

00:29:24.880 --> 00:29:26.950 align:start position:0%
the input now is 100
and<00:29:25.039><c> the</c><00:29:25.200><c> output</c><00:29:25.600><c> number</c><00:29:25.840><c> of</c><00:29:25.919><c> neurons</c><00:29:26.640><c> will</c><00:29:26.799><c> be</c>

00:29:26.950 --> 00:29:26.960 align:start position:0%
and the output number of neurons will be
 

00:29:26.960 --> 00:29:29.750 align:start position:0%
and the output number of neurons will be
for<00:29:27.200><c> us</c><00:29:27.440><c> 27</c><00:29:28.080><c> because</c><00:29:28.320><c> we</c><00:29:28.399><c> have</c><00:29:28.559><c> 27</c><00:29:29.120><c> possible</c>

00:29:29.750 --> 00:29:29.760 align:start position:0%
for us 27 because we have 27 possible
 

00:29:29.760 --> 00:29:31.750 align:start position:0%
for us 27 because we have 27 possible
characters<00:29:30.320><c> that</c><00:29:30.480><c> come</c><00:29:30.720><c> next</c>

00:29:31.750 --> 00:29:31.760 align:start position:0%
characters that come next
 

00:29:31.760 --> 00:29:34.870 align:start position:0%
characters that come next
so<00:29:31.919><c> the</c><00:29:32.080><c> biases</c><00:29:32.480><c> will</c><00:29:32.640><c> be</c><00:29:32.799><c> 27</c><00:29:33.360><c> as</c><00:29:33.440><c> well</c>

00:29:34.870 --> 00:29:34.880 align:start position:0%
so the biases will be 27 as well
 

00:29:34.880 --> 00:29:36.630 align:start position:0%
so the biases will be 27 as well
so<00:29:35.039><c> therefore</c><00:29:35.360><c> the</c><00:29:35.520><c> logits</c><00:29:36.159><c> which</c><00:29:36.399><c> are</c><00:29:36.480><c> the</c>

00:29:36.630 --> 00:29:36.640 align:start position:0%
so therefore the logits which are the
 

00:29:36.640 --> 00:29:38.549 align:start position:0%
so therefore the logits which are the
outputs<00:29:37.039><c> of</c><00:29:37.120><c> this</c><00:29:37.279><c> neural</c><00:29:37.600><c> net</c>

00:29:38.549 --> 00:29:38.559 align:start position:0%
outputs of this neural net
 

00:29:38.559 --> 00:29:41.430 align:start position:0%
outputs of this neural net
are<00:29:38.799><c> going</c><00:29:38.960><c> to</c><00:29:39.200><c> be</c><00:29:39.840><c> um</c>

00:29:41.430 --> 00:29:41.440 align:start position:0%
are going to be um
 

00:29:41.440 --> 00:29:42.389 align:start position:0%
are going to be um
h

00:29:42.389 --> 00:29:42.399 align:start position:0%
h
 

00:29:42.399 --> 00:29:47.110 align:start position:0%
h
multiplied<00:29:43.200><c> by</c><00:29:43.440><c> w2</c><00:29:44.320><c> plus</c><00:29:44.799><c> b2</c>

00:29:47.110 --> 00:29:47.120 align:start position:0%
multiplied by w2 plus b2
 

00:29:47.120 --> 00:29:50.470 align:start position:0%
multiplied by w2 plus b2
logistic<00:29:47.679><c> shape</c><00:29:48.159><c> is</c><00:29:48.320><c> 32</c><00:29:48.720><c> by</c><00:29:48.880><c> 27</c>

00:29:50.470 --> 00:29:50.480 align:start position:0%
logistic shape is 32 by 27
 

00:29:50.480 --> 00:29:52.230 align:start position:0%
logistic shape is 32 by 27
and<00:29:50.640><c> the</c><00:29:50.799><c> logits</c><00:29:51.279><c> look</c>

00:29:52.230 --> 00:29:52.240 align:start position:0%
and the logits look
 

00:29:52.240 --> 00:29:54.149 align:start position:0%
and the logits look
good<00:29:52.880><c> now</c><00:29:53.200><c> exactly</c><00:29:53.600><c> as</c><00:29:53.679><c> we</c><00:29:53.840><c> saw</c><00:29:54.000><c> in</c><00:29:54.080><c> the</c>

00:29:54.149 --> 00:29:54.159 align:start position:0%
good now exactly as we saw in the
 

00:29:54.159 --> 00:29:55.669 align:start position:0%
good now exactly as we saw in the
previous<00:29:54.480><c> video</c><00:29:54.880><c> we</c><00:29:55.039><c> want</c><00:29:55.200><c> to</c><00:29:55.360><c> take</c><00:29:55.520><c> these</c>

00:29:55.669 --> 00:29:55.679 align:start position:0%
previous video we want to take these
 

00:29:55.679 --> 00:29:57.990 align:start position:0%
previous video we want to take these
logits<00:29:56.159><c> and</c><00:29:56.240><c> we</c><00:29:56.399><c> want</c><00:29:56.559><c> to</c><00:29:57.039><c> first</c><00:29:57.360><c> exponentiate</c>

00:29:57.990 --> 00:29:58.000 align:start position:0%
logits and we want to first exponentiate
 

00:29:58.000 --> 00:29:59.990 align:start position:0%
logits and we want to first exponentiate
them<00:29:58.240><c> to</c><00:29:58.399><c> get</c><00:29:58.559><c> our</c><00:29:58.720><c> fake</c><00:29:59.039><c> counts</c>

00:29:59.990 --> 00:30:00.000 align:start position:0%
them to get our fake counts
 

00:30:00.000 --> 00:30:01.350 align:start position:0%
them to get our fake counts
and<00:30:00.080><c> then</c><00:30:00.240><c> we</c><00:30:00.399><c> want</c><00:30:00.480><c> to</c><00:30:00.640><c> normalize</c><00:30:01.039><c> them</c><00:30:01.200><c> into</c>

00:30:01.350 --> 00:30:01.360 align:start position:0%
and then we want to normalize them into
 

00:30:01.360 --> 00:30:02.950 align:start position:0%
and then we want to normalize them into
a<00:30:01.440><c> probability</c>

00:30:02.950 --> 00:30:02.960 align:start position:0%
a probability
 

00:30:02.960 --> 00:30:05.590 align:start position:0%
a probability
so<00:30:03.200><c> prob</c><00:30:03.760><c> is</c><00:30:04.000><c> counts</c><00:30:04.399><c> divide</c>

00:30:05.590 --> 00:30:05.600 align:start position:0%
so prob is counts divide
 

00:30:05.600 --> 00:30:06.870 align:start position:0%
so prob is counts divide
and<00:30:05.840><c> now</c>

00:30:06.870 --> 00:30:06.880 align:start position:0%
and now
 

00:30:06.880 --> 00:30:10.549 align:start position:0%
and now
counts<00:30:07.600><c> dot</c><00:30:08.240><c> sum</c><00:30:08.960><c> along</c><00:30:09.279><c> the</c><00:30:09.440><c> first</c><00:30:09.679><c> dimension</c>

00:30:10.549 --> 00:30:10.559 align:start position:0%
counts dot sum along the first dimension
 

00:30:10.559 --> 00:30:12.470 align:start position:0%
counts dot sum along the first dimension
and<00:30:10.720><c> keep</c><00:30:10.960><c> them</c><00:30:11.279><c> as</c><00:30:11.440><c> true</c><00:30:11.840><c> exactly</c><00:30:12.240><c> as</c><00:30:12.320><c> in</c><00:30:12.399><c> the</c>

00:30:12.470 --> 00:30:12.480 align:start position:0%
and keep them as true exactly as in the
 

00:30:12.480 --> 00:30:14.389 align:start position:0%
and keep them as true exactly as in the
previous<00:30:12.799><c> video</c>

00:30:14.389 --> 00:30:14.399 align:start position:0%
previous video
 

00:30:14.399 --> 00:30:15.990 align:start position:0%
previous video
and<00:30:14.559><c> so</c>

00:30:15.990 --> 00:30:16.000 align:start position:0%
and so
 

00:30:16.000 --> 00:30:20.070 align:start position:0%
and so
prob<00:30:16.480><c> that</c><00:30:16.799><c> shape</c><00:30:17.200><c> now</c><00:30:17.520><c> is</c><00:30:17.679><c> 32</c><00:30:18.080><c> by</c><00:30:18.240><c> 27</c>

00:30:20.070 --> 00:30:20.080 align:start position:0%
prob that shape now is 32 by 27
 

00:30:20.080 --> 00:30:23.510 align:start position:0%
prob that shape now is 32 by 27
and<00:30:20.159><c> you'll</c><00:30:20.399><c> see</c><00:30:20.640><c> that</c><00:30:20.880><c> every</c><00:30:21.120><c> row</c><00:30:21.440><c> of</c><00:30:21.600><c> prob</c>

00:30:23.510 --> 00:30:23.520 align:start position:0%
and you'll see that every row of prob
 

00:30:23.520 --> 00:30:26.470 align:start position:0%
and you'll see that every row of prob
sums<00:30:24.080><c> to</c><00:30:24.320><c> one</c><00:30:24.640><c> so</c><00:30:24.799><c> it's</c><00:30:24.880><c> normalized</c>

00:30:26.470 --> 00:30:26.480 align:start position:0%
sums to one so it's normalized
 

00:30:26.480 --> 00:30:28.549 align:start position:0%
sums to one so it's normalized
so<00:30:26.640><c> that</c><00:30:26.799><c> gives</c><00:30:27.039><c> us</c><00:30:27.200><c> the</c><00:30:27.279><c> probabilities</c><00:30:28.320><c> now</c>

00:30:28.549 --> 00:30:28.559 align:start position:0%
so that gives us the probabilities now
 

00:30:28.559 --> 00:30:30.230 align:start position:0%
so that gives us the probabilities now
of<00:30:28.640><c> course</c><00:30:28.880><c> we</c><00:30:29.039><c> have</c><00:30:29.200><c> the</c><00:30:29.440><c> actual</c><00:30:29.760><c> letter</c><00:30:30.080><c> that</c>

00:30:30.230 --> 00:30:30.240 align:start position:0%
of course we have the actual letter that
 

00:30:30.240 --> 00:30:32.230 align:start position:0%
of course we have the actual letter that
comes<00:30:30.480><c> next</c><00:30:31.120><c> and</c><00:30:31.279><c> that</c><00:30:31.520><c> comes</c><00:30:31.760><c> from</c><00:30:31.919><c> this</c>

00:30:32.230 --> 00:30:32.240 align:start position:0%
comes next and that comes from this
 

00:30:32.240 --> 00:30:34.230 align:start position:0%
comes next and that comes from this
array<00:30:32.960><c> y</c>

00:30:34.230 --> 00:30:34.240 align:start position:0%
array y
 

00:30:34.240 --> 00:30:36.310 align:start position:0%
array y
which<00:30:34.640><c> we</c><00:30:35.120><c> which</c><00:30:35.360><c> we</c><00:30:35.600><c> created</c><00:30:35.919><c> during</c><00:30:36.159><c> the</c>

00:30:36.310 --> 00:30:36.320 align:start position:0%
which we which we created during the
 

00:30:36.320 --> 00:30:39.029 align:start position:0%
which we which we created during the
dataset<00:30:36.720><c> creation</c><00:30:37.600><c> so</c><00:30:37.840><c> why</c><00:30:38.159><c> is</c><00:30:38.320><c> this</c><00:30:38.559><c> last</c>

00:30:39.029 --> 00:30:39.039 align:start position:0%
dataset creation so why is this last
 

00:30:39.039 --> 00:30:40.870 align:start position:0%
dataset creation so why is this last
piece<00:30:39.279><c> here</c><00:30:39.760><c> which</c><00:30:40.000><c> is</c><00:30:40.080><c> the</c><00:30:40.240><c> identity</c><00:30:40.640><c> of</c><00:30:40.720><c> the</c>

00:30:40.870 --> 00:30:40.880 align:start position:0%
piece here which is the identity of the
 

00:30:40.880 --> 00:30:42.310 align:start position:0%
piece here which is the identity of the
next<00:30:41.120><c> character</c><00:30:41.440><c> in</c><00:30:41.520><c> the</c><00:30:41.600><c> sequence</c><00:30:42.080><c> that</c><00:30:42.159><c> we'd</c>

00:30:42.310 --> 00:30:42.320 align:start position:0%
next character in the sequence that we'd
 

00:30:42.320 --> 00:30:44.789 align:start position:0%
next character in the sequence that we'd
like<00:30:42.480><c> to</c><00:30:42.559><c> now</c><00:30:42.720><c> predict</c>

00:30:44.789 --> 00:30:44.799 align:start position:0%
like to now predict
 

00:30:44.799 --> 00:30:46.630 align:start position:0%
like to now predict
so<00:30:45.039><c> what</c><00:30:45.200><c> we'd</c><00:30:45.360><c> like</c><00:30:45.520><c> to</c><00:30:45.600><c> do</c><00:30:45.760><c> now</c><00:30:46.080><c> is</c><00:30:46.240><c> just</c><00:30:46.480><c> as</c>

00:30:46.630 --> 00:30:46.640 align:start position:0%
so what we'd like to do now is just as
 

00:30:46.640 --> 00:30:48.470 align:start position:0%
so what we'd like to do now is just as
in<00:30:46.720><c> the</c><00:30:46.799><c> previous</c><00:30:47.120><c> video</c><00:30:47.520><c> we'd</c><00:30:47.679><c> like</c><00:30:47.840><c> to</c><00:30:48.080><c> index</c>

00:30:48.470 --> 00:30:48.480 align:start position:0%
in the previous video we'd like to index
 

00:30:48.480 --> 00:30:51.269 align:start position:0%
in the previous video we'd like to index
into<00:30:48.880><c> the</c><00:30:49.039><c> rows</c><00:30:49.360><c> of</c><00:30:49.520><c> prob</c><00:30:50.320><c> and</c><00:30:50.480><c> in</c><00:30:50.559><c> each</c><00:30:50.880><c> row</c>

00:30:51.269 --> 00:30:51.279 align:start position:0%
into the rows of prob and in each row
 

00:30:51.279 --> 00:30:52.950 align:start position:0%
into the rows of prob and in each row
we'd<00:30:51.440><c> like</c><00:30:51.600><c> to</c><00:30:51.760><c> pluck</c><00:30:52.080><c> out</c><00:30:52.240><c> the</c><00:30:52.399><c> probability</c>

00:30:52.950 --> 00:30:52.960 align:start position:0%
we'd like to pluck out the probability
 

00:30:52.960 --> 00:30:55.110 align:start position:0%
we'd like to pluck out the probability
assigned<00:30:53.360><c> to</c><00:30:53.520><c> the</c><00:30:53.679><c> correct</c><00:30:54.000><c> character</c>

00:30:55.110 --> 00:30:55.120 align:start position:0%
assigned to the correct character
 

00:30:55.120 --> 00:30:56.950 align:start position:0%
assigned to the correct character
as<00:30:55.360><c> given</c><00:30:55.600><c> here</c>

00:30:56.950 --> 00:30:56.960 align:start position:0%
as given here
 

00:30:56.960 --> 00:31:00.470 align:start position:0%
as given here
so<00:30:57.200><c> first</c><00:30:57.679><c> we</c><00:30:57.919><c> have</c><00:30:58.159><c> torch.range</c><00:30:58.960><c> of</c><00:30:59.120><c> 32</c><00:31:00.080><c> which</c>

00:31:00.470 --> 00:31:00.480 align:start position:0%
so first we have torch.range of 32 which
 

00:31:00.480 --> 00:31:03.590 align:start position:0%
so first we have torch.range of 32 which
is<00:31:00.880><c> kind</c><00:31:01.039><c> of</c><00:31:01.120><c> like</c><00:31:01.360><c> a</c><00:31:01.520><c> iterator</c><00:31:02.159><c> over</c>

00:31:03.590 --> 00:31:03.600 align:start position:0%
is kind of like a iterator over
 

00:31:03.600 --> 00:31:05.750 align:start position:0%
is kind of like a iterator over
numbers<00:31:03.919><c> from</c><00:31:04.159><c> 0</c><00:31:04.320><c> to</c><00:31:04.480><c> 31</c>

00:31:05.750 --> 00:31:05.760 align:start position:0%
numbers from 0 to 31
 

00:31:05.760 --> 00:31:07.510 align:start position:0%
numbers from 0 to 31
and<00:31:05.840><c> then</c><00:31:06.000><c> we</c><00:31:06.159><c> can</c><00:31:06.399><c> index</c><00:31:06.799><c> into</c><00:31:07.039><c> prob</c><00:31:07.360><c> in</c><00:31:07.440><c> the</c>

00:31:07.510 --> 00:31:07.520 align:start position:0%
and then we can index into prob in the
 

00:31:07.520 --> 00:31:09.029 align:start position:0%
and then we can index into prob in the
following<00:31:07.919><c> way</c>

00:31:09.029 --> 00:31:09.039 align:start position:0%
following way
 

00:31:09.039 --> 00:31:10.190 align:start position:0%
following way
prop<00:31:09.440><c> in</c>

00:31:10.190 --> 00:31:10.200 align:start position:0%
prop in
 

00:31:10.200 --> 00:31:12.789 align:start position:0%
prop in
torch.range<00:31:11.440><c> of</c><00:31:11.600><c> 32</c><00:31:12.080><c> which</c><00:31:12.320><c> iterates</c><00:31:12.720><c> the</c>

00:31:12.789 --> 00:31:12.799 align:start position:0%
torch.range of 32 which iterates the
 

00:31:12.799 --> 00:31:15.669 align:start position:0%
torch.range of 32 which iterates the
roads<00:31:13.600><c> and</c><00:31:13.760><c> in</c><00:31:14.000><c> each</c><00:31:14.240><c> row</c><00:31:14.640><c> we'd</c><00:31:14.799><c> like</c><00:31:14.960><c> to</c><00:31:15.120><c> grab</c>

00:31:15.669 --> 00:31:15.679 align:start position:0%
roads and in each row we'd like to grab
 

00:31:15.679 --> 00:31:19.269 align:start position:0%
roads and in each row we'd like to grab
this<00:31:16.240><c> column</c><00:31:16.960><c> as</c><00:31:17.200><c> given</c><00:31:17.520><c> by</c><00:31:17.679><c> y</c>

00:31:19.269 --> 00:31:19.279 align:start position:0%
this column as given by y
 

00:31:19.279 --> 00:31:21.269 align:start position:0%
this column as given by y
so<00:31:19.440><c> this</c><00:31:19.679><c> gives</c><00:31:19.919><c> the</c><00:31:20.080><c> current</c><00:31:20.320><c> probabilities</c>

00:31:21.269 --> 00:31:21.279 align:start position:0%
so this gives the current probabilities
 

00:31:21.279 --> 00:31:23.110 align:start position:0%
so this gives the current probabilities
as<00:31:21.440><c> assigned</c><00:31:21.760><c> by</c><00:31:21.919><c> this</c><00:31:22.159><c> neural</c><00:31:22.480><c> network</c><00:31:22.960><c> with</c>

00:31:23.110 --> 00:31:23.120 align:start position:0%
as assigned by this neural network with
 

00:31:23.120 --> 00:31:24.870 align:start position:0%
as assigned by this neural network with
this<00:31:23.279><c> setting</c><00:31:23.600><c> of</c><00:31:23.760><c> its</c><00:31:23.919><c> weights</c>

00:31:24.870 --> 00:31:24.880 align:start position:0%
this setting of its weights
 

00:31:24.880 --> 00:31:27.750 align:start position:0%
this setting of its weights
to<00:31:25.039><c> the</c><00:31:25.440><c> correct</c><00:31:25.840><c> character</c><00:31:26.480><c> in</c><00:31:26.559><c> the</c><00:31:26.720><c> sequence</c>

00:31:27.750 --> 00:31:27.760 align:start position:0%
to the correct character in the sequence
 

00:31:27.760 --> 00:31:29.510 align:start position:0%
to the correct character in the sequence
and<00:31:27.840><c> you</c><00:31:28.000><c> can</c><00:31:28.080><c> see</c><00:31:28.240><c> here</c><00:31:28.480><c> that</c><00:31:28.960><c> this</c><00:31:29.200><c> looks</c>

00:31:29.510 --> 00:31:29.520 align:start position:0%
and you can see here that this looks
 

00:31:29.520 --> 00:31:30.950 align:start position:0%
and you can see here that this looks
okay<00:31:29.760><c> for</c><00:31:29.919><c> some</c><00:31:30.080><c> of</c><00:31:30.159><c> these</c><00:31:30.320><c> characters</c><00:31:30.799><c> like</c>

00:31:30.950 --> 00:31:30.960 align:start position:0%
okay for some of these characters like
 

00:31:30.960 --> 00:31:32.950 align:start position:0%
okay for some of these characters like
this<00:31:31.200><c> is</c><00:31:31.360><c> basically</c><00:31:31.760><c> 0.2</c>

00:31:32.950 --> 00:31:32.960 align:start position:0%
this is basically 0.2
 

00:31:32.960 --> 00:31:34.470 align:start position:0%
this is basically 0.2
but<00:31:33.200><c> it</c><00:31:33.279><c> doesn't</c><00:31:33.520><c> look</c><00:31:33.760><c> very</c><00:31:33.919><c> good</c><00:31:34.000><c> at</c><00:31:34.159><c> all</c><00:31:34.320><c> for</c>

00:31:34.470 --> 00:31:34.480 align:start position:0%
but it doesn't look very good at all for
 

00:31:34.480 --> 00:31:37.630 align:start position:0%
but it doesn't look very good at all for
many<00:31:34.640><c> other</c><00:31:34.880><c> characters</c><00:31:35.440><c> like</c><00:31:35.600><c> this</c><00:31:35.919><c> is</c>

00:31:37.630 --> 00:31:37.640 align:start position:0%
many other characters like this is
 

00:31:37.640 --> 00:31:40.470 align:start position:0%
many other characters like this is
0.0701<00:31:38.880><c> probability</c><00:31:39.840><c> and</c><00:31:39.919><c> so</c><00:31:40.080><c> the</c><00:31:40.240><c> network</c>

00:31:40.470 --> 00:31:40.480 align:start position:0%
0.0701 probability and so the network
 

00:31:40.480 --> 00:31:42.070 align:start position:0%
0.0701 probability and so the network
thinks<00:31:40.720><c> that</c><00:31:41.120><c> some</c><00:31:41.279><c> of</c><00:31:41.360><c> these</c><00:31:41.519><c> are</c><00:31:41.679><c> extremely</c>

00:31:42.070 --> 00:31:42.080 align:start position:0%
thinks that some of these are extremely
 

00:31:42.080 --> 00:31:43.669 align:start position:0%
thinks that some of these are extremely
unlikely<00:31:42.880><c> but</c><00:31:43.039><c> of</c><00:31:43.120><c> course</c><00:31:43.360><c> we</c><00:31:43.519><c> haven't</c>

00:31:43.669 --> 00:31:43.679 align:start position:0%
unlikely but of course we haven't
 

00:31:43.679 --> 00:31:47.110 align:start position:0%
unlikely but of course we haven't
trained<00:31:43.840><c> the</c><00:31:44.000><c> neural</c><00:31:44.240><c> network</c><00:31:44.799><c> yet</c><00:31:45.440><c> so</c>

00:31:47.110 --> 00:31:47.120 align:start position:0%
trained the neural network yet so
 

00:31:47.120 --> 00:31:48.950 align:start position:0%
trained the neural network yet so
this<00:31:47.279><c> will</c><00:31:47.519><c> improve</c><00:31:48.000><c> and</c><00:31:48.320><c> ideally</c><00:31:48.799><c> all</c><00:31:48.880><c> of</c>

00:31:48.950 --> 00:31:48.960 align:start position:0%
this will improve and ideally all of
 

00:31:48.960 --> 00:31:50.870 align:start position:0%
this will improve and ideally all of
these<00:31:49.120><c> numbers</c><00:31:49.440><c> here</c><00:31:49.600><c> of</c><00:31:49.760><c> course</c><00:31:50.000><c> are</c><00:31:50.240><c> one</c>

00:31:50.870 --> 00:31:50.880 align:start position:0%
these numbers here of course are one
 

00:31:50.880 --> 00:31:52.310 align:start position:0%
these numbers here of course are one
because<00:31:51.200><c> then</c><00:31:51.360><c> we</c><00:31:51.519><c> are</c><00:31:51.600><c> correctly</c><00:31:52.000><c> predicting</c>

00:31:52.310 --> 00:31:52.320 align:start position:0%
because then we are correctly predicting
 

00:31:52.320 --> 00:31:53.830 align:start position:0%
because then we are correctly predicting
the<00:31:52.399><c> next</c><00:31:52.559><c> character</c>

00:31:53.830 --> 00:31:53.840 align:start position:0%
the next character
 

00:31:53.840 --> 00:31:55.509 align:start position:0%
the next character
now<00:31:54.000><c> just</c><00:31:54.159><c> as</c><00:31:54.320><c> in</c><00:31:54.399><c> the</c><00:31:54.480><c> previous</c><00:31:54.880><c> video</c><00:31:55.360><c> we</c>

00:31:55.509 --> 00:31:55.519 align:start position:0%
now just as in the previous video we
 

00:31:55.519 --> 00:31:57.430 align:start position:0%
now just as in the previous video we
want<00:31:55.679><c> to</c><00:31:55.760><c> take</c><00:31:55.919><c> these</c><00:31:56.080><c> probabilities</c><00:31:57.120><c> we</c><00:31:57.279><c> want</c>

00:31:57.430 --> 00:31:57.440 align:start position:0%
want to take these probabilities we want
 

00:31:57.440 --> 00:31:59.350 align:start position:0%
want to take these probabilities we want
to<00:31:57.519><c> look</c><00:31:57.679><c> at</c><00:31:57.760><c> the</c><00:31:57.919><c> lock</c><00:31:58.159><c> probability</c>

00:31:59.350 --> 00:31:59.360 align:start position:0%
to look at the lock probability
 

00:31:59.360 --> 00:32:00.950 align:start position:0%
to look at the lock probability
and<00:31:59.440><c> then</c><00:31:59.600><c> we</c><00:31:59.679><c> want</c><00:31:59.840><c> to</c><00:31:59.919><c> look</c><00:32:00.080><c> at</c><00:32:00.240><c> the</c><00:32:00.399><c> average</c>

00:32:00.950 --> 00:32:00.960 align:start position:0%
and then we want to look at the average
 

00:32:00.960 --> 00:32:02.070 align:start position:0%
and then we want to look at the average
probability

00:32:02.070 --> 00:32:02.080 align:start position:0%
probability
 

00:32:02.080 --> 00:32:04.470 align:start position:0%
probability
and<00:32:02.159><c> the</c><00:32:02.399><c> negative</c><00:32:02.880><c> of</c><00:32:03.039><c> it</c><00:32:03.440><c> to</c><00:32:03.600><c> create</c><00:32:04.320><c> the</c>

00:32:04.470 --> 00:32:04.480 align:start position:0%
and the negative of it to create the
 

00:32:04.480 --> 00:32:07.509 align:start position:0%
and the negative of it to create the
negative<00:32:04.880><c> log</c><00:32:05.120><c> likelihood</c><00:32:05.760><c> loss</c>

00:32:07.509 --> 00:32:07.519 align:start position:0%
negative log likelihood loss
 

00:32:07.519 --> 00:32:10.230 align:start position:0%
negative log likelihood loss
so<00:32:07.919><c> the</c><00:32:08.080><c> loss</c><00:32:08.320><c> here</c><00:32:08.720><c> is</c><00:32:09.120><c> 17</c>

00:32:10.230 --> 00:32:10.240 align:start position:0%
so the loss here is 17
 

00:32:10.240 --> 00:32:11.750 align:start position:0%
so the loss here is 17
and<00:32:10.480><c> this</c><00:32:10.720><c> is</c><00:32:10.880><c> the</c><00:32:10.960><c> loss</c><00:32:11.200><c> that</c><00:32:11.279><c> we'd</c><00:32:11.440><c> like</c><00:32:11.600><c> to</c>

00:32:11.750 --> 00:32:11.760 align:start position:0%
and this is the loss that we'd like to
 

00:32:11.760 --> 00:32:14.149 align:start position:0%
and this is the loss that we'd like to
minimize<00:32:12.559><c> to</c><00:32:12.720><c> get</c><00:32:12.880><c> the</c><00:32:12.960><c> network</c><00:32:13.279><c> to</c><00:32:13.360><c> predict</c>

00:32:14.149 --> 00:32:14.159 align:start position:0%
minimize to get the network to predict
 

00:32:14.159 --> 00:32:16.630 align:start position:0%
minimize to get the network to predict
the<00:32:14.320><c> correct</c><00:32:14.640><c> character</c><00:32:15.519><c> in</c><00:32:15.840><c> the</c><00:32:16.000><c> sequence</c>

00:32:16.630 --> 00:32:16.640 align:start position:0%
the correct character in the sequence
 

00:32:16.640 --> 00:32:18.710 align:start position:0%
the correct character in the sequence
okay<00:32:16.799><c> so</c><00:32:16.960><c> i</c><00:32:17.120><c> rewrote</c><00:32:17.600><c> everything</c><00:32:18.320><c> here</c><00:32:18.640><c> and</c>

00:32:18.710 --> 00:32:18.720 align:start position:0%
okay so i rewrote everything here and
 

00:32:18.720 --> 00:32:20.789 align:start position:0%
okay so i rewrote everything here and
made<00:32:18.880><c> it</c><00:32:18.960><c> a</c><00:32:19.039><c> bit</c><00:32:19.200><c> more</c><00:32:19.360><c> respectable</c><00:32:20.399><c> so</c><00:32:20.559><c> here's</c>

00:32:20.789 --> 00:32:20.799 align:start position:0%
made it a bit more respectable so here's
 

00:32:20.799 --> 00:32:22.950 align:start position:0%
made it a bit more respectable so here's
our<00:32:20.880><c> data</c><00:32:21.200><c> set</c><00:32:21.919><c> here's</c><00:32:22.240><c> all</c><00:32:22.320><c> the</c><00:32:22.480><c> parameters</c>

00:32:22.950 --> 00:32:22.960 align:start position:0%
our data set here's all the parameters
 

00:32:22.960 --> 00:32:24.549 align:start position:0%
our data set here's all the parameters
that<00:32:23.039><c> we</c><00:32:23.120><c> defined</c>

00:32:24.549 --> 00:32:24.559 align:start position:0%
that we defined
 

00:32:24.559 --> 00:32:26.310 align:start position:0%
that we defined
i'm<00:32:24.720><c> now</c><00:32:24.960><c> using</c><00:32:25.440><c> a</c><00:32:25.519><c> generator</c><00:32:26.000><c> to</c><00:32:26.080><c> make</c><00:32:26.240><c> it</c>

00:32:26.310 --> 00:32:26.320 align:start position:0%
i'm now using a generator to make it
 

00:32:26.320 --> 00:32:27.669 align:start position:0%
i'm now using a generator to make it
reproducible

00:32:27.669 --> 00:32:27.679 align:start position:0%
reproducible
 

00:32:27.679 --> 00:32:29.350 align:start position:0%
reproducible
i<00:32:27.840><c> clustered</c><00:32:28.320><c> all</c><00:32:28.399><c> the</c><00:32:28.559><c> parameters</c><00:32:29.039><c> into</c><00:32:29.279><c> a</c>

00:32:29.350 --> 00:32:29.360 align:start position:0%
i clustered all the parameters into a
 

00:32:29.360 --> 00:32:31.430 align:start position:0%
i clustered all the parameters into a
single<00:32:29.679><c> list</c><00:32:30.000><c> of</c><00:32:30.080><c> parameters</c><00:32:30.880><c> so</c><00:32:31.039><c> that</c><00:32:31.200><c> for</c>

00:32:31.430 --> 00:32:31.440 align:start position:0%
single list of parameters so that for
 

00:32:31.440 --> 00:32:33.509 align:start position:0%
single list of parameters so that for
example<00:32:31.760><c> it's</c><00:32:31.919><c> easy</c><00:32:32.159><c> to</c><00:32:32.399><c> count</c><00:32:32.640><c> them</c><00:32:33.200><c> and</c><00:32:33.360><c> see</c>

00:32:33.509 --> 00:32:33.519 align:start position:0%
example it's easy to count them and see
 

00:32:33.519 --> 00:32:34.789 align:start position:0%
example it's easy to count them and see
that<00:32:33.679><c> in</c><00:32:33.760><c> total</c><00:32:34.000><c> we</c><00:32:34.159><c> currently</c><00:32:34.480><c> have</c><00:32:34.640><c> about</c>

00:32:34.789 --> 00:32:34.799 align:start position:0%
that in total we currently have about
 

00:32:34.799 --> 00:32:37.110 align:start position:0%
that in total we currently have about
3400<00:32:35.760><c> parameters</c>

00:32:37.110 --> 00:32:37.120 align:start position:0%
3400 parameters
 

00:32:37.120 --> 00:32:38.389 align:start position:0%
3400 parameters
and<00:32:37.200><c> this</c><00:32:37.360><c> is</c><00:32:37.440><c> the</c><00:32:37.519><c> forward</c><00:32:37.840><c> pass</c><00:32:38.080><c> as</c><00:32:38.240><c> we</c>

00:32:38.389 --> 00:32:38.399 align:start position:0%
and this is the forward pass as we
 

00:32:38.399 --> 00:32:39.590 align:start position:0%
and this is the forward pass as we
developed<00:32:38.799><c> it</c>

00:32:39.590 --> 00:32:39.600 align:start position:0%
developed it
 

00:32:39.600 --> 00:32:41.909 align:start position:0%
developed it
and<00:32:39.760><c> we</c><00:32:39.919><c> arrive</c><00:32:40.320><c> at</c><00:32:40.480><c> a</c><00:32:40.960><c> single</c><00:32:41.279><c> number</c><00:32:41.600><c> here</c>

00:32:41.909 --> 00:32:41.919 align:start position:0%
and we arrive at a single number here
 

00:32:41.919 --> 00:32:43.990 align:start position:0%
and we arrive at a single number here
the<00:32:42.080><c> loss</c><00:32:42.720><c> that</c><00:32:42.960><c> is</c><00:32:43.039><c> currently</c><00:32:43.440><c> expressing</c>

00:32:43.990 --> 00:32:44.000 align:start position:0%
the loss that is currently expressing
 

00:32:44.000 --> 00:32:45.029 align:start position:0%
the loss that is currently expressing
how<00:32:44.240><c> well</c>

00:32:45.029 --> 00:32:45.039 align:start position:0%
how well
 

00:32:45.039 --> 00:32:46.950 align:start position:0%
how well
this<00:32:45.200><c> neural</c><00:32:45.440><c> network</c><00:32:45.840><c> works</c><00:32:46.640><c> with</c><00:32:46.880><c> the</c>

00:32:46.950 --> 00:32:46.960 align:start position:0%
this neural network works with the
 

00:32:46.960 --> 00:32:48.710 align:start position:0%
this neural network works with the
current<00:32:47.200><c> setting</c><00:32:47.519><c> of</c><00:32:47.600><c> parameters</c>

00:32:48.710 --> 00:32:48.720 align:start position:0%
current setting of parameters
 

00:32:48.720 --> 00:32:50.070 align:start position:0%
current setting of parameters
now<00:32:48.960><c> i</c><00:32:49.039><c> would</c><00:32:49.120><c> like</c><00:32:49.279><c> to</c><00:32:49.360><c> make</c><00:32:49.519><c> it</c><00:32:49.679><c> even</c><00:32:49.840><c> more</c>

00:32:50.070 --> 00:32:50.080 align:start position:0%
now i would like to make it even more
 

00:32:50.080 --> 00:32:52.310 align:start position:0%
now i would like to make it even more
respectable<00:32:51.120><c> so</c><00:32:51.279><c> in</c><00:32:51.360><c> particular</c><00:32:51.919><c> see</c><00:32:52.080><c> these</c>

00:32:52.310 --> 00:32:52.320 align:start position:0%
respectable so in particular see these
 

00:32:52.320 --> 00:32:54.630 align:start position:0%
respectable so in particular see these
lines<00:32:52.640><c> here</c><00:32:53.120><c> where</c><00:32:53.279><c> we</c><00:32:53.440><c> take</c><00:32:53.760><c> the</c><00:32:53.919><c> logits</c><00:32:54.480><c> and</c>

00:32:54.630 --> 00:32:54.640 align:start position:0%
lines here where we take the logits and
 

00:32:54.640 --> 00:32:57.430 align:start position:0%
lines here where we take the logits and
we<00:32:54.799><c> calculate</c><00:32:55.360><c> the</c><00:32:55.600><c> loss</c>

00:32:57.430 --> 00:32:57.440 align:start position:0%
we calculate the loss
 

00:32:57.440 --> 00:32:59.430 align:start position:0%
we calculate the loss
we're<00:32:57.600><c> not</c><00:32:57.760><c> actually</c><00:32:58.559><c> reinventing</c><00:32:59.120><c> the</c><00:32:59.200><c> wheel</c>

00:32:59.430 --> 00:32:59.440 align:start position:0%
we're not actually reinventing the wheel
 

00:32:59.440 --> 00:33:01.430 align:start position:0%
we're not actually reinventing the wheel
here<00:32:59.919><c> this</c><00:33:00.159><c> is</c><00:33:00.320><c> just</c><00:33:00.640><c> um</c>

00:33:01.430 --> 00:33:01.440 align:start position:0%
here this is just um
 

00:33:01.440 --> 00:33:03.350 align:start position:0%
here this is just um
classification<00:33:02.559><c> and</c><00:33:02.720><c> many</c><00:33:02.960><c> people</c><00:33:03.200><c> use</c>

00:33:03.350 --> 00:33:03.360 align:start position:0%
classification and many people use
 

00:33:03.360 --> 00:33:05.669 align:start position:0%
classification and many people use
classification<00:33:04.240><c> and</c><00:33:04.399><c> that's</c><00:33:04.720><c> why</c><00:33:04.960><c> there</c><00:33:05.200><c> is</c><00:33:05.440><c> a</c>

00:33:05.669 --> 00:33:05.679 align:start position:0%
classification and that's why there is a
 

00:33:05.679 --> 00:33:07.430 align:start position:0%
classification and that's why there is a
functional.cross<00:33:06.640><c> entropy</c><00:33:07.039><c> function</c><00:33:07.360><c> in</c>

00:33:07.430 --> 00:33:07.440 align:start position:0%
functional.cross entropy function in
 

00:33:07.440 --> 00:33:09.590 align:start position:0%
functional.cross entropy function in
pytorch<00:33:08.399><c> to</c><00:33:08.559><c> calculate</c><00:33:08.960><c> this</c><00:33:09.279><c> much</c><00:33:09.440><c> more</c>

00:33:09.590 --> 00:33:09.600 align:start position:0%
pytorch to calculate this much more
 

00:33:09.600 --> 00:33:10.710 align:start position:0%
pytorch to calculate this much more
efficiently

00:33:10.710 --> 00:33:10.720 align:start position:0%
efficiently
 

00:33:10.720 --> 00:33:12.389 align:start position:0%
efficiently
so<00:33:10.880><c> we</c><00:33:10.960><c> can</c><00:33:11.120><c> just</c><00:33:11.279><c> simply</c><00:33:11.600><c> call</c><00:33:11.840><c> f.cross</c>

00:33:12.389 --> 00:33:12.399 align:start position:0%
so we can just simply call f.cross
 

00:33:12.399 --> 00:33:13.350 align:start position:0%
so we can just simply call f.cross
entropy

00:33:13.350 --> 00:33:13.360 align:start position:0%
entropy
 

00:33:13.360 --> 00:33:14.870 align:start position:0%
entropy
and<00:33:13.519><c> we</c><00:33:13.600><c> can</c><00:33:13.760><c> pass</c><00:33:14.000><c> in</c><00:33:14.080><c> the</c><00:33:14.159><c> logits</c><00:33:14.559><c> and</c><00:33:14.640><c> we</c><00:33:14.720><c> can</c>

00:33:14.870 --> 00:33:14.880 align:start position:0%
and we can pass in the logits and we can
 

00:33:14.880 --> 00:33:16.310 align:start position:0%
and we can pass in the logits and we can
pass<00:33:15.200><c> in</c><00:33:15.360><c> the</c>

00:33:16.310 --> 00:33:16.320 align:start position:0%
pass in the
 

00:33:16.320 --> 00:33:18.070 align:start position:0%
pass in the
array<00:33:16.640><c> of</c><00:33:16.720><c> targets</c><00:33:17.200><c> y</c>

00:33:18.070 --> 00:33:18.080 align:start position:0%
array of targets y
 

00:33:18.080 --> 00:33:22.230 align:start position:0%
array of targets y
and<00:33:18.240><c> this</c><00:33:18.399><c> calculates</c><00:33:18.799><c> the</c><00:33:18.960><c> exact</c><00:33:19.279><c> same</c><00:33:19.519><c> loss</c>

00:33:22.230 --> 00:33:22.240 align:start position:0%
 
 

00:33:22.240 --> 00:33:25.269 align:start position:0%
 
so<00:33:22.480><c> in</c><00:33:22.559><c> fact</c><00:33:22.799><c> we</c><00:33:22.960><c> can</c><00:33:23.120><c> simply</c><00:33:23.760><c> put</c><00:33:23.919><c> this</c><00:33:24.159><c> here</c>

00:33:25.269 --> 00:33:25.279 align:start position:0%
so in fact we can simply put this here
 

00:33:25.279 --> 00:33:27.350 align:start position:0%
so in fact we can simply put this here
and<00:33:25.600><c> erase</c><00:33:25.919><c> these</c><00:33:26.159><c> three</c><00:33:26.320><c> lines</c><00:33:27.039><c> and</c><00:33:27.200><c> we're</c>

00:33:27.350 --> 00:33:27.360 align:start position:0%
and erase these three lines and we're
 

00:33:27.360 --> 00:33:29.909 align:start position:0%
and erase these three lines and we're
going<00:33:27.519><c> to</c><00:33:27.679><c> get</c><00:33:27.840><c> the</c><00:33:28.480><c> exact</c><00:33:28.799><c> same</c><00:33:29.039><c> result</c><00:33:29.760><c> now</c>

00:33:29.909 --> 00:33:29.919 align:start position:0%
going to get the exact same result now
 

00:33:29.919 --> 00:33:31.430 align:start position:0%
going to get the exact same result now
there<00:33:30.080><c> are</c><00:33:30.240><c> actually</c><00:33:30.480><c> many</c><00:33:30.799><c> good</c><00:33:30.960><c> reasons</c><00:33:31.279><c> to</c>

00:33:31.430 --> 00:33:31.440 align:start position:0%
there are actually many good reasons to
 

00:33:31.440 --> 00:33:34.230 align:start position:0%
there are actually many good reasons to
prefer<00:33:31.840><c> f.cross</c><00:33:32.480><c> entropy</c><00:33:33.039><c> over</c><00:33:33.760><c> rolling</c><00:33:34.080><c> your</c>

00:33:34.230 --> 00:33:34.240 align:start position:0%
prefer f.cross entropy over rolling your
 

00:33:34.240 --> 00:33:36.230 align:start position:0%
prefer f.cross entropy over rolling your
own<00:33:34.399><c> implementation</c><00:33:34.960><c> like</c><00:33:35.120><c> this</c><00:33:35.760><c> i</c><00:33:35.919><c> did</c><00:33:36.080><c> this</c>

00:33:36.230 --> 00:33:36.240 align:start position:0%
own implementation like this i did this
 

00:33:36.240 --> 00:33:37.909 align:start position:0%
own implementation like this i did this
for<00:33:36.399><c> educational</c><00:33:36.960><c> reasons</c><00:33:37.279><c> but</c><00:33:37.519><c> you'd</c><00:33:37.679><c> never</c>

00:33:37.909 --> 00:33:37.919 align:start position:0%
for educational reasons but you'd never
 

00:33:37.919 --> 00:33:40.549 align:start position:0%
for educational reasons but you'd never
use<00:33:38.080><c> this</c><00:33:38.320><c> in</c><00:33:38.399><c> practice</c><00:33:39.120><c> why</c><00:33:39.360><c> is</c><00:33:39.440><c> that</c>

00:33:40.549 --> 00:33:40.559 align:start position:0%
use this in practice why is that
 

00:33:40.559 --> 00:33:42.870 align:start position:0%
use this in practice why is that
number<00:33:40.880><c> one</c><00:33:41.120><c> when</c><00:33:41.279><c> you</c><00:33:41.360><c> use</c><00:33:41.600><c> f.cross</c><00:33:42.159><c> entropy</c>

00:33:42.870 --> 00:33:42.880 align:start position:0%
number one when you use f.cross entropy
 

00:33:42.880 --> 00:33:44.950 align:start position:0%
number one when you use f.cross entropy
by<00:33:43.039><c> torch</c><00:33:43.360><c> will</c><00:33:43.440><c> not</c><00:33:43.679><c> actually</c><00:33:44.080><c> create</c><00:33:44.720><c> all</c>

00:33:44.950 --> 00:33:44.960 align:start position:0%
by torch will not actually create all
 

00:33:44.960 --> 00:33:46.870 align:start position:0%
by torch will not actually create all
these<00:33:45.200><c> intermediate</c><00:33:45.840><c> tensors</c><00:33:46.399><c> because</c><00:33:46.640><c> these</c>

00:33:46.870 --> 00:33:46.880 align:start position:0%
these intermediate tensors because these
 

00:33:46.880 --> 00:33:49.110 align:start position:0%
these intermediate tensors because these
are<00:33:47.039><c> all</c><00:33:47.279><c> new</c><00:33:47.519><c> tensors</c><00:33:48.000><c> in</c><00:33:48.080><c> memory</c><00:33:48.799><c> and</c><00:33:48.960><c> all</c>

00:33:49.110 --> 00:33:49.120 align:start position:0%
are all new tensors in memory and all
 

00:33:49.120 --> 00:33:51.350 align:start position:0%
are all new tensors in memory and all
this<00:33:49.360><c> is</c><00:33:49.679><c> fairly</c><00:33:50.080><c> inefficient</c><00:33:50.720><c> to</c><00:33:50.960><c> run</c><00:33:51.200><c> like</c>

00:33:51.350 --> 00:33:51.360 align:start position:0%
this is fairly inefficient to run like
 

00:33:51.360 --> 00:33:53.990 align:start position:0%
this is fairly inefficient to run like
this<00:33:52.159><c> instead</c><00:33:52.640><c> pytorch</c><00:33:53.120><c> will</c><00:33:53.279><c> cluster</c><00:33:53.679><c> up</c><00:33:53.840><c> all</c>

00:33:53.990 --> 00:33:54.000 align:start position:0%
this instead pytorch will cluster up all
 

00:33:54.000 --> 00:33:56.950 align:start position:0%
this instead pytorch will cluster up all
these<00:33:54.159><c> operations</c><00:33:55.120><c> and</c><00:33:55.440><c> very</c><00:33:55.679><c> often</c><00:33:56.399><c> create</c>

00:33:56.950 --> 00:33:56.960 align:start position:0%
these operations and very often create
 

00:33:56.960 --> 00:33:59.509 align:start position:0%
these operations and very often create
have<00:33:57.519><c> fused</c><00:33:57.919><c> kernels</c><00:33:58.559><c> that</c><00:33:58.720><c> very</c><00:33:58.960><c> efficiently</c>

00:33:59.509 --> 00:33:59.519 align:start position:0%
have fused kernels that very efficiently
 

00:33:59.519 --> 00:34:01.269 align:start position:0%
have fused kernels that very efficiently
evaluate<00:33:59.919><c> these</c><00:34:00.159><c> expressions</c><00:34:00.799><c> that</c><00:34:01.039><c> are</c><00:34:01.120><c> sort</c>

00:34:01.269 --> 00:34:01.279 align:start position:0%
evaluate these expressions that are sort
 

00:34:01.279 --> 00:34:03.110 align:start position:0%
evaluate these expressions that are sort
of<00:34:01.440><c> like</c><00:34:01.679><c> clustered</c><00:34:02.559><c> mathematical</c>

00:34:03.110 --> 00:34:03.120 align:start position:0%
of like clustered mathematical
 

00:34:03.120 --> 00:34:04.630 align:start position:0%
of like clustered mathematical
operations

00:34:04.630 --> 00:34:04.640 align:start position:0%
operations
 

00:34:04.640 --> 00:34:06.310 align:start position:0%
operations
number<00:34:04.960><c> two</c><00:34:05.200><c> the</c><00:34:05.279><c> backward</c><00:34:05.600><c> pass</c><00:34:05.840><c> can</c><00:34:06.000><c> be</c><00:34:06.080><c> made</c>

00:34:06.310 --> 00:34:06.320 align:start position:0%
number two the backward pass can be made
 

00:34:06.320 --> 00:34:08.310 align:start position:0%
number two the backward pass can be made
much<00:34:06.559><c> more</c><00:34:06.720><c> efficient</c><00:34:07.519><c> and</c><00:34:07.679><c> not</c><00:34:07.840><c> just</c><00:34:08.079><c> because</c>

00:34:08.310 --> 00:34:08.320 align:start position:0%
much more efficient and not just because
 

00:34:08.320 --> 00:34:10.389 align:start position:0%
much more efficient and not just because
it's<00:34:08.639><c> a</c><00:34:08.720><c> fused</c><00:34:09.040><c> kernel</c><00:34:09.679><c> but</c><00:34:09.919><c> also</c>

00:34:10.389 --> 00:34:10.399 align:start position:0%
it's a fused kernel but also
 

00:34:10.399 --> 00:34:12.470 align:start position:0%
it's a fused kernel but also
analytically<00:34:11.200><c> and</c><00:34:11.359><c> mathematically</c><00:34:12.240><c> it's</c>

00:34:12.470 --> 00:34:12.480 align:start position:0%
analytically and mathematically it's
 

00:34:12.480 --> 00:34:15.349 align:start position:0%
analytically and mathematically it's
much<00:34:13.040><c> it's</c><00:34:13.280><c> often</c><00:34:13.599><c> a</c><00:34:13.679><c> very</c><00:34:14.000><c> much</c><00:34:14.639><c> simpler</c>

00:34:15.349 --> 00:34:15.359 align:start position:0%
much it's often a very much simpler
 

00:34:15.359 --> 00:34:17.430 align:start position:0%
much it's often a very much simpler
backward<00:34:15.760><c> pass</c><00:34:16.079><c> to</c><00:34:16.320><c> implement</c>

00:34:17.430 --> 00:34:17.440 align:start position:0%
backward pass to implement
 

00:34:17.440 --> 00:34:19.589 align:start position:0%
backward pass to implement
we<00:34:17.599><c> actually</c><00:34:17.919><c> sell</c><00:34:18.079><c> this</c><00:34:18.240><c> with</c><00:34:18.399><c> micrograd</c>

00:34:19.589 --> 00:34:19.599 align:start position:0%
we actually sell this with micrograd
 

00:34:19.599 --> 00:34:21.990 align:start position:0%
we actually sell this with micrograd
you<00:34:19.760><c> see</c><00:34:19.919><c> here</c><00:34:20.079><c> when</c><00:34:20.240><c> we</c><00:34:20.399><c> implemented</c><00:34:20.879><c> 10h</c><00:34:21.760><c> the</c>

00:34:21.990 --> 00:34:22.000 align:start position:0%
you see here when we implemented 10h the
 

00:34:22.000 --> 00:34:23.909 align:start position:0%
you see here when we implemented 10h the
forward<00:34:22.320><c> pass</c><00:34:22.639><c> of</c><00:34:22.800><c> this</c><00:34:23.200><c> operation</c><00:34:23.760><c> to</c>

00:34:23.909 --> 00:34:23.919 align:start position:0%
forward pass of this operation to
 

00:34:23.919 --> 00:34:25.750 align:start position:0%
forward pass of this operation to
calculate<00:34:24.320><c> the</c><00:34:24.399><c> 10h</c><00:34:24.960><c> was</c><00:34:25.200><c> actually</c><00:34:25.359><c> a</c><00:34:25.440><c> fairly</c>

00:34:25.750 --> 00:34:25.760 align:start position:0%
calculate the 10h was actually a fairly
 

00:34:25.760 --> 00:34:28.230 align:start position:0%
calculate the 10h was actually a fairly
complicated<00:34:26.240><c> mathematical</c><00:34:26.720><c> expression</c>

00:34:28.230 --> 00:34:28.240 align:start position:0%
complicated mathematical expression
 

00:34:28.240 --> 00:34:29.349 align:start position:0%
complicated mathematical expression
but<00:34:28.399><c> because</c><00:34:28.639><c> it's</c><00:34:28.800><c> a</c><00:34:28.879><c> clustered</c>

00:34:29.349 --> 00:34:29.359 align:start position:0%
but because it's a clustered
 

00:34:29.359 --> 00:34:31.510 align:start position:0%
but because it's a clustered
mathematical<00:34:29.919><c> expression</c><00:34:30.879><c> when</c><00:34:31.040><c> we</c><00:34:31.200><c> did</c><00:34:31.359><c> the</c>

00:34:31.510 --> 00:34:31.520 align:start position:0%
mathematical expression when we did the
 

00:34:31.520 --> 00:34:33.430 align:start position:0%
mathematical expression when we did the
backward<00:34:31.919><c> pass</c><00:34:32.320><c> we</c><00:34:32.480><c> didn't</c><00:34:32.879><c> individually</c>

00:34:33.430 --> 00:34:33.440 align:start position:0%
backward pass we didn't individually
 

00:34:33.440 --> 00:34:35.909 align:start position:0%
backward pass we didn't individually
backward<00:34:33.919><c> through</c><00:34:34.079><c> the</c><00:34:34.480><c> x</c><00:34:34.960><c> and</c><00:34:35.040><c> the</c><00:34:35.280><c> two</c><00:34:35.599><c> times</c>

00:34:35.909 --> 00:34:35.919 align:start position:0%
backward through the x and the two times
 

00:34:35.919 --> 00:34:38.149 align:start position:0%
backward through the x and the two times
and<00:34:36.000><c> the</c><00:34:36.159><c> minus</c><00:34:36.399><c> one</c><00:34:36.639><c> in</c><00:34:36.720><c> division</c><00:34:37.119><c> etc</c><00:34:37.919><c> we</c>

00:34:38.149 --> 00:34:38.159 align:start position:0%
and the minus one in division etc we
 

00:34:38.159 --> 00:34:40.230 align:start position:0%
and the minus one in division etc we
just<00:34:38.320><c> said</c><00:34:38.560><c> it's</c><00:34:38.720><c> one</c><00:34:38.879><c> minus</c><00:34:39.200><c> t</c><00:34:39.359><c> squared</c><00:34:40.159><c> and</c>

00:34:40.230 --> 00:34:40.240 align:start position:0%
just said it's one minus t squared and
 

00:34:40.240 --> 00:34:42.069 align:start position:0%
just said it's one minus t squared and
that's<00:34:40.480><c> a</c><00:34:40.639><c> much</c><00:34:41.119><c> simpler</c><00:34:41.520><c> mathematical</c>

00:34:42.069 --> 00:34:42.079 align:start position:0%
that's a much simpler mathematical
 

00:34:42.079 --> 00:34:43.190 align:start position:0%
that's a much simpler mathematical
expression

00:34:43.190 --> 00:34:43.200 align:start position:0%
expression
 

00:34:43.200 --> 00:34:44.710 align:start position:0%
expression
and<00:34:43.359><c> we</c><00:34:43.520><c> were</c><00:34:43.679><c> able</c><00:34:43.919><c> to</c><00:34:44.000><c> do</c><00:34:44.240><c> this</c><00:34:44.480><c> because</c>

00:34:44.710 --> 00:34:44.720 align:start position:0%
and we were able to do this because
 

00:34:44.720 --> 00:34:46.470 align:start position:0%
and we were able to do this because
we're<00:34:44.960><c> able</c><00:34:45.119><c> to</c><00:34:45.200><c> reuse</c><00:34:45.520><c> calculations</c><00:34:46.320><c> and</c>

00:34:46.470 --> 00:34:46.480 align:start position:0%
we're able to reuse calculations and
 

00:34:46.480 --> 00:34:48.069 align:start position:0%
we're able to reuse calculations and
because<00:34:46.720><c> we</c><00:34:46.879><c> are</c><00:34:47.040><c> able</c><00:34:47.200><c> to</c><00:34:47.359><c> mathematically</c>

00:34:48.069 --> 00:34:48.079 align:start position:0%
because we are able to mathematically
 

00:34:48.079 --> 00:34:50.230 align:start position:0%
because we are able to mathematically
and<00:34:48.240><c> analytically</c><00:34:48.960><c> derive</c><00:34:49.280><c> the</c><00:34:49.440><c> derivative</c>

00:34:50.230 --> 00:34:50.240 align:start position:0%
and analytically derive the derivative
 

00:34:50.240 --> 00:34:52.310 align:start position:0%
and analytically derive the derivative
and<00:34:50.399><c> often</c><00:34:50.960><c> that</c><00:34:51.280><c> expression</c><00:34:51.839><c> simplifies</c>

00:34:52.310 --> 00:34:52.320 align:start position:0%
and often that expression simplifies
 

00:34:52.320 --> 00:34:54.790 align:start position:0%
and often that expression simplifies
mathematically<00:34:53.520><c> and</c><00:34:53.599><c> so</c><00:34:53.760><c> there's</c><00:34:54.000><c> much</c><00:34:54.480><c> less</c>

00:34:54.790 --> 00:34:54.800 align:start position:0%
mathematically and so there's much less
 

00:34:54.800 --> 00:34:56.069 align:start position:0%
mathematically and so there's much less
to<00:34:54.960><c> implement</c>

00:34:56.069 --> 00:34:56.079 align:start position:0%
to implement
 

00:34:56.079 --> 00:34:57.750 align:start position:0%
to implement
so<00:34:56.240><c> not</c><00:34:56.480><c> only</c><00:34:56.639><c> can</c><00:34:56.960><c> can</c><00:34:57.119><c> it</c><00:34:57.280><c> be</c><00:34:57.359><c> made</c><00:34:57.599><c> more</c>

00:34:57.750 --> 00:34:57.760 align:start position:0%
so not only can can it be made more
 

00:34:57.760 --> 00:34:59.510 align:start position:0%
so not only can can it be made more
efficient<00:34:58.160><c> because</c><00:34:58.480><c> it</c><00:34:58.640><c> runs</c><00:34:58.960><c> in</c><00:34:59.040><c> a</c><00:34:59.119><c> fused</c>

00:34:59.510 --> 00:34:59.520 align:start position:0%
efficient because it runs in a fused
 

00:34:59.520 --> 00:35:01.670 align:start position:0%
efficient because it runs in a fused
kernel<00:35:00.240><c> but</c><00:35:00.480><c> also</c><00:35:00.720><c> because</c><00:35:01.040><c> the</c><00:35:01.200><c> expressions</c>

00:35:01.670 --> 00:35:01.680 align:start position:0%
kernel but also because the expressions
 

00:35:01.680 --> 00:35:03.270 align:start position:0%
kernel but also because the expressions
can<00:35:01.839><c> take</c><00:35:02.000><c> a</c><00:35:02.079><c> much</c><00:35:02.400><c> simpler</c><00:35:02.880><c> form</c>

00:35:03.270 --> 00:35:03.280 align:start position:0%
can take a much simpler form
 

00:35:03.280 --> 00:35:05.910 align:start position:0%
can take a much simpler form
mathematically

00:35:05.910 --> 00:35:05.920 align:start position:0%
mathematically
 

00:35:05.920 --> 00:35:08.550 align:start position:0%
mathematically
so<00:35:06.079><c> that's</c><00:35:06.240><c> number</c><00:35:06.560><c> one</c><00:35:07.119><c> number</c><00:35:07.440><c> two</c>

00:35:08.550 --> 00:35:08.560 align:start position:0%
so that's number one number two
 

00:35:08.560 --> 00:35:10.470 align:start position:0%
so that's number one number two
under<00:35:08.800><c> the</c><00:35:08.960><c> hood</c><00:35:09.280><c> f</c><00:35:09.440><c> that</c><00:35:09.599><c> cross</c><00:35:09.920><c> entropy</c><00:35:10.320><c> can</c>

00:35:10.470 --> 00:35:10.480 align:start position:0%
under the hood f that cross entropy can
 

00:35:10.480 --> 00:35:13.589 align:start position:0%
under the hood f that cross entropy can
also<00:35:10.800><c> be</c><00:35:11.040><c> significantly</c><00:35:11.839><c> more</c><00:35:12.560><c> um</c>

00:35:13.589 --> 00:35:13.599 align:start position:0%
also be significantly more um
 

00:35:13.599 --> 00:35:15.430 align:start position:0%
also be significantly more um
numerically<00:35:14.160><c> well</c><00:35:14.400><c> behaved</c><00:35:14.960><c> let</c><00:35:15.119><c> me</c><00:35:15.200><c> show</c><00:35:15.359><c> you</c>

00:35:15.430 --> 00:35:15.440 align:start position:0%
numerically well behaved let me show you
 

00:35:15.440 --> 00:35:19.190 align:start position:0%
numerically well behaved let me show you
an<00:35:15.599><c> example</c><00:35:15.920><c> of</c><00:35:16.000><c> how</c><00:35:16.160><c> this</c><00:35:16.320><c> works</c>

00:35:19.190 --> 00:35:19.200 align:start position:0%
 
 

00:35:19.200 --> 00:35:21.510 align:start position:0%
 
suppose<00:35:19.599><c> we</c><00:35:19.680><c> have</c><00:35:19.839><c> a</c><00:35:19.920><c> logits</c><00:35:20.480><c> of</c><00:35:20.720><c> negative</c><00:35:21.040><c> 2</c><00:35:21.280><c> 3</c>

00:35:21.510 --> 00:35:21.520 align:start position:0%
suppose we have a logits of negative 2 3
 

00:35:21.520 --> 00:35:23.990 align:start position:0%
suppose we have a logits of negative 2 3
negative<00:35:21.839><c> 3</c><00:35:22.079><c> 0</c><00:35:22.480><c> and</c><00:35:22.640><c> 5</c>

00:35:23.990 --> 00:35:24.000 align:start position:0%
negative 3 0 and 5
 

00:35:24.000 --> 00:35:25.430 align:start position:0%
negative 3 0 and 5
and<00:35:24.079><c> then</c><00:35:24.240><c> we</c><00:35:24.400><c> are</c><00:35:24.480><c> taking</c><00:35:24.720><c> the</c><00:35:24.800><c> exponent</c><00:35:25.280><c> of</c>

00:35:25.430 --> 00:35:25.440 align:start position:0%
and then we are taking the exponent of
 

00:35:25.440 --> 00:35:27.589 align:start position:0%
and then we are taking the exponent of
it<00:35:25.680><c> and</c><00:35:25.839><c> normalizing</c><00:35:26.320><c> it</c><00:35:26.400><c> to</c><00:35:26.480><c> sum</c><00:35:26.640><c> to</c><00:35:26.800><c> 1.</c>

00:35:27.589 --> 00:35:27.599 align:start position:0%
it and normalizing it to sum to 1.
 

00:35:27.599 --> 00:35:28.310 align:start position:0%
it and normalizing it to sum to 1.
so

00:35:28.310 --> 00:35:28.320 align:start position:0%
so
 

00:35:28.320 --> 00:35:30.069 align:start position:0%
so
when<00:35:28.560><c> logits</c><00:35:28.960><c> take</c><00:35:29.200><c> on</c><00:35:29.280><c> this</c><00:35:29.520><c> values</c>

00:35:30.069 --> 00:35:30.079 align:start position:0%
when logits take on this values
 

00:35:30.079 --> 00:35:31.430 align:start position:0%
when logits take on this values
everything<00:35:30.400><c> is</c><00:35:30.480><c> well</c><00:35:30.720><c> and</c><00:35:30.800><c> good</c><00:35:31.040><c> and</c><00:35:31.119><c> we</c><00:35:31.280><c> get</c><00:35:31.359><c> a</c>

00:35:31.430 --> 00:35:31.440 align:start position:0%
everything is well and good and we get a
 

00:35:31.440 --> 00:35:33.750 align:start position:0%
everything is well and good and we get a
nice<00:35:31.599><c> probability</c><00:35:32.079><c> distribution</c>

00:35:33.750 --> 00:35:33.760 align:start position:0%
nice probability distribution
 

00:35:33.760 --> 00:35:35.190 align:start position:0%
nice probability distribution
now<00:35:33.920><c> consider</c><00:35:34.320><c> what</c><00:35:34.480><c> happens</c><00:35:34.720><c> when</c><00:35:34.960><c> some</c><00:35:35.119><c> of</c>

00:35:35.190 --> 00:35:35.200 align:start position:0%
now consider what happens when some of
 

00:35:35.200 --> 00:35:37.430 align:start position:0%
now consider what happens when some of
these<00:35:35.359><c> logits</c><00:35:35.760><c> take</c><00:35:36.000><c> on</c><00:35:36.079><c> more</c><00:35:36.320><c> extreme</c><00:35:36.720><c> values</c>

00:35:37.430 --> 00:35:37.440 align:start position:0%
these logits take on more extreme values
 

00:35:37.440 --> 00:35:38.950 align:start position:0%
these logits take on more extreme values
and<00:35:37.599><c> that</c><00:35:37.760><c> can</c><00:35:37.920><c> happen</c><00:35:38.160><c> during</c><00:35:38.400><c> optimization</c>

00:35:38.950 --> 00:35:38.960 align:start position:0%
and that can happen during optimization
 

00:35:38.960 --> 00:35:40.710 align:start position:0%
and that can happen during optimization
of<00:35:39.040><c> the</c><00:35:39.119><c> neural</c><00:35:39.359><c> network</c>

00:35:40.710 --> 00:35:40.720 align:start position:0%
of the neural network
 

00:35:40.720 --> 00:35:42.470 align:start position:0%
of the neural network
suppose<00:35:41.040><c> that</c><00:35:41.200><c> some</c><00:35:41.359><c> of</c><00:35:41.440><c> these</c><00:35:41.599><c> numbers</c><00:35:42.000><c> grow</c>

00:35:42.470 --> 00:35:42.480 align:start position:0%
suppose that some of these numbers grow
 

00:35:42.480 --> 00:35:45.190 align:start position:0%
suppose that some of these numbers grow
very<00:35:42.720><c> negative</c><00:35:43.200><c> like</c><00:35:43.359><c> say</c><00:35:43.520><c> negative</c><00:35:44.000><c> 100</c>

00:35:45.190 --> 00:35:45.200 align:start position:0%
very negative like say negative 100
 

00:35:45.200 --> 00:35:47.109 align:start position:0%
very negative like say negative 100
then<00:35:45.440><c> actually</c><00:35:45.760><c> everything</c><00:35:46.079><c> will</c><00:35:46.480><c> come</c><00:35:46.640><c> out</c>

00:35:47.109 --> 00:35:47.119 align:start position:0%
then actually everything will come out
 

00:35:47.119 --> 00:35:49.270 align:start position:0%
then actually everything will come out
fine<00:35:47.520><c> we</c><00:35:47.680><c> still</c><00:35:47.839><c> get</c><00:35:48.000><c> the</c><00:35:48.160><c> probabilities</c><00:35:48.800><c> that</c>

00:35:49.270 --> 00:35:49.280 align:start position:0%
fine we still get the probabilities that
 

00:35:49.280 --> 00:35:50.069 align:start position:0%
fine we still get the probabilities that
um

00:35:50.069 --> 00:35:50.079 align:start position:0%
um
 

00:35:50.079 --> 00:35:52.310 align:start position:0%
um
you<00:35:50.240><c> know</c><00:35:50.800><c> are</c><00:35:51.359><c> well</c><00:35:51.520><c> behaved</c><00:35:51.920><c> and</c><00:35:52.000><c> they</c><00:35:52.160><c> sum</c>

00:35:52.310 --> 00:35:52.320 align:start position:0%
you know are well behaved and they sum
 

00:35:52.320 --> 00:35:54.390 align:start position:0%
you know are well behaved and they sum
to<00:35:52.480><c> one</c><00:35:52.640><c> and</c><00:35:52.800><c> everything</c><00:35:53.119><c> is</c><00:35:53.200><c> great</c>

00:35:54.390 --> 00:35:54.400 align:start position:0%
to one and everything is great
 

00:35:54.400 --> 00:35:56.630 align:start position:0%
to one and everything is great
but<00:35:54.640><c> because</c><00:35:54.880><c> of</c><00:35:54.960><c> the</c><00:35:55.119><c> way</c><00:35:55.280><c> the</c><00:35:55.520><c> x</c><00:35:55.760><c> works</c><00:35:56.480><c> if</c>

00:35:56.630 --> 00:35:56.640 align:start position:0%
but because of the way the x works if
 

00:35:56.640 --> 00:35:58.630 align:start position:0%
but because of the way the x works if
you<00:35:56.800><c> have</c><00:35:57.119><c> very</c><00:35:57.440><c> positive</c><00:35:57.839><c> logits</c><00:35:58.320><c> let's</c><00:35:58.480><c> say</c>

00:35:58.630 --> 00:35:58.640 align:start position:0%
you have very positive logits let's say
 

00:35:58.640 --> 00:36:00.710 align:start position:0%
you have very positive logits let's say
positive<00:35:59.119><c> 100</c><00:35:59.680><c> in</c><00:35:59.839><c> here</c>

00:36:00.710 --> 00:36:00.720 align:start position:0%
positive 100 in here
 

00:36:00.720 --> 00:36:02.230 align:start position:0%
positive 100 in here
you<00:36:00.880><c> actually</c><00:36:01.119><c> start</c><00:36:01.359><c> to</c><00:36:01.440><c> run</c><00:36:01.599><c> into</c><00:36:01.839><c> trouble</c>

00:36:02.230 --> 00:36:02.240 align:start position:0%
you actually start to run into trouble
 

00:36:02.240 --> 00:36:04.470 align:start position:0%
you actually start to run into trouble
and<00:36:02.320><c> we</c><00:36:02.480><c> get</c><00:36:02.720><c> not</c><00:36:02.960><c> a</c><00:36:03.040><c> number</c><00:36:03.359><c> here</c>

00:36:04.470 --> 00:36:04.480 align:start position:0%
and we get not a number here
 

00:36:04.480 --> 00:36:06.310 align:start position:0%
and we get not a number here
and<00:36:04.560><c> the</c><00:36:04.720><c> reason</c><00:36:05.040><c> for</c><00:36:05.200><c> that</c><00:36:05.440><c> is</c><00:36:05.599><c> that</c><00:36:06.000><c> these</c>

00:36:06.310 --> 00:36:06.320 align:start position:0%
and the reason for that is that these
 

00:36:06.320 --> 00:36:08.790 align:start position:0%
and the reason for that is that these
counts

00:36:08.790 --> 00:36:08.800 align:start position:0%
 
 

00:36:08.800 --> 00:36:10.390 align:start position:0%
 
have<00:36:09.040><c> an</c><00:36:09.280><c> if</c><00:36:09.520><c> here</c>

00:36:10.390 --> 00:36:10.400 align:start position:0%
have an if here
 

00:36:10.400 --> 00:36:12.470 align:start position:0%
have an if here
so<00:36:10.560><c> if</c><00:36:10.720><c> you</c><00:36:10.800><c> pass</c><00:36:11.119><c> in</c><00:36:11.520><c> a</c><00:36:11.599><c> very</c><00:36:11.839><c> negative</c><00:36:12.160><c> number</c>

00:36:12.470 --> 00:36:12.480 align:start position:0%
so if you pass in a very negative number
 

00:36:12.480 --> 00:36:15.430 align:start position:0%
so if you pass in a very negative number
to<00:36:12.720><c> x</c><00:36:13.599><c> you</c><00:36:13.760><c> just</c><00:36:13.920><c> get</c><00:36:14.079><c> a</c><00:36:14.160><c> very</c><00:36:14.480><c> negative</c><00:36:15.200><c> sorry</c>

00:36:15.430 --> 00:36:15.440 align:start position:0%
to x you just get a very negative sorry
 

00:36:15.440 --> 00:36:17.589 align:start position:0%
to x you just get a very negative sorry
not<00:36:15.680><c> negative</c><00:36:16.000><c> but</c><00:36:16.240><c> very</c><00:36:16.480><c> small</c><00:36:16.800><c> number</c><00:36:17.200><c> very</c>

00:36:17.589 --> 00:36:17.599 align:start position:0%
not negative but very small number very
 

00:36:17.599 --> 00:36:19.829 align:start position:0%
not negative but very small number very
very<00:36:17.839><c> near</c><00:36:18.079><c> zero</c><00:36:18.560><c> and</c><00:36:18.720><c> that's</c><00:36:18.960><c> fine</c>

00:36:19.829 --> 00:36:19.839 align:start position:0%
very near zero and that's fine
 

00:36:19.839 --> 00:36:21.109 align:start position:0%
very near zero and that's fine
but<00:36:20.000><c> if</c><00:36:20.079><c> you</c><00:36:20.160><c> pass</c><00:36:20.400><c> in</c><00:36:20.480><c> a</c><00:36:20.560><c> very</c><00:36:20.720><c> positive</c>

00:36:21.109 --> 00:36:21.119 align:start position:0%
but if you pass in a very positive
 

00:36:21.119 --> 00:36:23.670 align:start position:0%
but if you pass in a very positive
number<00:36:21.760><c> suddenly</c><00:36:22.160><c> we</c><00:36:22.320><c> run</c><00:36:22.560><c> out</c><00:36:22.720><c> of</c><00:36:22.800><c> range</c><00:36:23.440><c> in</c>

00:36:23.670 --> 00:36:23.680 align:start position:0%
number suddenly we run out of range in
 

00:36:23.680 --> 00:36:25.510 align:start position:0%
number suddenly we run out of range in
our<00:36:24.000><c> floating</c><00:36:24.400><c> point</c><00:36:24.720><c> number</c><00:36:25.359><c> that</c>

00:36:25.510 --> 00:36:25.520 align:start position:0%
our floating point number that
 

00:36:25.520 --> 00:36:28.150 align:start position:0%
our floating point number that
represents<00:36:26.560><c> these</c><00:36:27.200><c> counts</c>

00:36:28.150 --> 00:36:28.160 align:start position:0%
represents these counts
 

00:36:28.160 --> 00:36:29.750 align:start position:0%
represents these counts
so<00:36:28.320><c> basically</c><00:36:28.560><c> we're</c><00:36:28.720><c> taking</c><00:36:29.119><c> e</c><00:36:29.440><c> and</c><00:36:29.520><c> we're</c>

00:36:29.750 --> 00:36:29.760 align:start position:0%
so basically we're taking e and we're
 

00:36:29.760 --> 00:36:31.910 align:start position:0%
so basically we're taking e and we're
raising<00:36:30.079><c> it</c><00:36:30.160><c> to</c><00:36:30.320><c> the</c><00:36:30.400><c> power</c><00:36:30.720><c> of</c><00:36:30.960><c> 100</c><00:36:31.680><c> and</c><00:36:31.760><c> that</c>

00:36:31.910 --> 00:36:31.920 align:start position:0%
raising it to the power of 100 and that
 

00:36:31.920 --> 00:36:33.990 align:start position:0%
raising it to the power of 100 and that
gives<00:36:32.160><c> us</c><00:36:32.400><c> if</c><00:36:33.200><c> because</c><00:36:33.440><c> we</c><00:36:33.599><c> run</c><00:36:33.839><c> out</c><00:36:33.920><c> of</c>

00:36:33.990 --> 00:36:34.000 align:start position:0%
gives us if because we run out of
 

00:36:34.000 --> 00:36:35.829 align:start position:0%
gives us if because we run out of
dynamic<00:36:34.400><c> range</c><00:36:34.800><c> on</c><00:36:34.880><c> this</c><00:36:35.280><c> floating</c><00:36:35.599><c> point</c>

00:36:35.829 --> 00:36:35.839 align:start position:0%
dynamic range on this floating point
 

00:36:35.839 --> 00:36:37.829 align:start position:0%
dynamic range on this floating point
number<00:36:36.079><c> that</c><00:36:36.320><c> is</c><00:36:36.400><c> count</c>

00:36:37.829 --> 00:36:37.839 align:start position:0%
number that is count
 

00:36:37.839 --> 00:36:41.109 align:start position:0%
number that is count
and<00:36:38.000><c> so</c><00:36:38.400><c> we</c><00:36:38.560><c> cannot</c><00:36:39.359><c> pass</c><00:36:39.680><c> very</c><00:36:40.000><c> large</c><00:36:40.400><c> logits</c>

00:36:41.109 --> 00:36:41.119 align:start position:0%
and so we cannot pass very large logits
 

00:36:41.119 --> 00:36:43.829 align:start position:0%
and so we cannot pass very large logits
through<00:36:41.359><c> this</c><00:36:42.000><c> expression</c>

00:36:43.829 --> 00:36:43.839 align:start position:0%
through this expression
 

00:36:43.839 --> 00:36:45.270 align:start position:0%
through this expression
now<00:36:44.000><c> let</c><00:36:44.160><c> me</c><00:36:44.320><c> reset</c><00:36:44.640><c> these</c><00:36:44.800><c> numbers</c><00:36:45.119><c> to</c>

00:36:45.270 --> 00:36:45.280 align:start position:0%
now let me reset these numbers to
 

00:36:45.280 --> 00:36:47.270 align:start position:0%
now let me reset these numbers to
something<00:36:45.839><c> reasonable</c>

00:36:47.270 --> 00:36:47.280 align:start position:0%
something reasonable
 

00:36:47.280 --> 00:36:49.190 align:start position:0%
something reasonable
the<00:36:47.440><c> way</c><00:36:47.680><c> pi</c><00:36:47.839><c> torch</c><00:36:48.160><c> solved</c><00:36:48.480><c> this</c>

00:36:49.190 --> 00:36:49.200 align:start position:0%
the way pi torch solved this
 

00:36:49.200 --> 00:36:50.230 align:start position:0%
the way pi torch solved this
is<00:36:49.440><c> that</c>

00:36:50.230 --> 00:36:50.240 align:start position:0%
is that
 

00:36:50.240 --> 00:36:52.230 align:start position:0%
is that
you<00:36:50.400><c> see</c><00:36:50.560><c> how</c><00:36:50.720><c> we</c><00:36:50.880><c> have</c><00:36:51.119><c> a</c><00:36:51.680><c> well-behaved</c>

00:36:52.230 --> 00:36:52.240 align:start position:0%
you see how we have a well-behaved
 

00:36:52.240 --> 00:36:53.510 align:start position:0%
you see how we have a well-behaved
result<00:36:52.560><c> here</c>

00:36:53.510 --> 00:36:53.520 align:start position:0%
result here
 

00:36:53.520 --> 00:36:54.710 align:start position:0%
result here
it<00:36:53.680><c> turns</c><00:36:53.920><c> out</c><00:36:54.000><c> that</c><00:36:54.240><c> because</c><00:36:54.480><c> of</c><00:36:54.560><c> the</c>

00:36:54.710 --> 00:36:54.720 align:start position:0%
it turns out that because of the
 

00:36:54.720 --> 00:36:56.630 align:start position:0%
it turns out that because of the
normalization<00:36:55.520><c> here</c><00:36:56.000><c> you</c><00:36:56.079><c> can</c><00:36:56.320><c> actually</c>

00:36:56.630 --> 00:36:56.640 align:start position:0%
normalization here you can actually
 

00:36:56.640 --> 00:36:59.589 align:start position:0%
normalization here you can actually
offset<00:36:57.520><c> logits</c><00:36:58.240><c> by</c><00:36:58.400><c> any</c><00:36:58.640><c> arbitrary</c><00:36:59.200><c> constant</c>

00:36:59.589 --> 00:36:59.599 align:start position:0%
offset logits by any arbitrary constant
 

00:36:59.599 --> 00:37:02.710 align:start position:0%
offset logits by any arbitrary constant
value<00:36:59.920><c> that</c><00:37:00.000><c> you</c><00:37:00.160><c> want</c><00:37:00.720><c> so</c><00:37:00.960><c> if</c><00:37:01.119><c> i</c><00:37:01.280><c> add</c><00:37:01.599><c> 1</c><00:37:01.839><c> here</c>

00:37:02.710 --> 00:37:02.720 align:start position:0%
value that you want so if i add 1 here
 

00:37:02.720 --> 00:37:04.710 align:start position:0%
value that you want so if i add 1 here
you<00:37:02.880><c> actually</c><00:37:03.119><c> get</c><00:37:03.280><c> the</c><00:37:03.359><c> exact</c><00:37:03.680><c> same</c><00:37:03.920><c> result</c>

00:37:04.710 --> 00:37:04.720 align:start position:0%
you actually get the exact same result
 

00:37:04.720 --> 00:37:06.310 align:start position:0%
you actually get the exact same result
or<00:37:04.880><c> if</c><00:37:05.040><c> i</c><00:37:05.119><c> add</c><00:37:05.359><c> 2</c>

00:37:06.310 --> 00:37:06.320 align:start position:0%
or if i add 2
 

00:37:06.320 --> 00:37:08.790 align:start position:0%
or if i add 2
or<00:37:06.560><c> if</c><00:37:06.720><c> i</c><00:37:06.880><c> subtract</c><00:37:07.839><c> three</c>

00:37:08.790 --> 00:37:08.800 align:start position:0%
or if i subtract three
 

00:37:08.800 --> 00:37:10.790 align:start position:0%
or if i subtract three
any<00:37:09.119><c> offset</c><00:37:09.520><c> will</c><00:37:09.680><c> produce</c><00:37:09.920><c> the</c><00:37:10.079><c> exact</c><00:37:10.400><c> same</c>

00:37:10.790 --> 00:37:10.800 align:start position:0%
any offset will produce the exact same
 

00:37:10.800 --> 00:37:12.710 align:start position:0%
any offset will produce the exact same
probabilities

00:37:12.710 --> 00:37:12.720 align:start position:0%
probabilities
 

00:37:12.720 --> 00:37:15.109 align:start position:0%
probabilities
so<00:37:13.040><c> because</c><00:37:13.599><c> negative</c><00:37:13.920><c> numbers</c><00:37:14.240><c> are</c><00:37:14.400><c> okay</c><00:37:14.880><c> but</c>

00:37:15.109 --> 00:37:15.119 align:start position:0%
so because negative numbers are okay but
 

00:37:15.119 --> 00:37:16.950 align:start position:0%
so because negative numbers are okay but
positive<00:37:15.440><c> numbers</c><00:37:15.920><c> can</c><00:37:16.160><c> actually</c><00:37:16.480><c> overflow</c>

00:37:16.950 --> 00:37:16.960 align:start position:0%
positive numbers can actually overflow
 

00:37:16.960 --> 00:37:19.510 align:start position:0%
positive numbers can actually overflow
this<00:37:17.280><c> x</c><00:37:18.079><c> what</c><00:37:18.320><c> patrick</c><00:37:18.720><c> does</c><00:37:19.119><c> is</c><00:37:19.280><c> it</c>

00:37:19.510 --> 00:37:19.520 align:start position:0%
this x what patrick does is it
 

00:37:19.520 --> 00:37:21.589 align:start position:0%
this x what patrick does is it
internally<00:37:20.160><c> calculates</c><00:37:20.640><c> the</c><00:37:20.720><c> maximum</c><00:37:21.280><c> value</c>

00:37:21.589 --> 00:37:21.599 align:start position:0%
internally calculates the maximum value
 

00:37:21.599 --> 00:37:23.349 align:start position:0%
internally calculates the maximum value
that<00:37:21.839><c> occurs</c><00:37:22.160><c> in</c><00:37:22.240><c> the</c><00:37:22.400><c> logits</c><00:37:23.119><c> and</c><00:37:23.280><c> it</c>

00:37:23.349 --> 00:37:23.359 align:start position:0%
that occurs in the logits and it
 

00:37:23.359 --> 00:37:25.270 align:start position:0%
that occurs in the logits and it
subtracts<00:37:23.920><c> it</c><00:37:24.400><c> so</c><00:37:24.640><c> in</c><00:37:24.720><c> this</c><00:37:24.800><c> case</c><00:37:25.040><c> it</c><00:37:25.119><c> would</c>

00:37:25.270 --> 00:37:25.280 align:start position:0%
subtracts it so in this case it would
 

00:37:25.280 --> 00:37:26.950 align:start position:0%
subtracts it so in this case it would
subtract<00:37:25.760><c> five</c>

00:37:26.950 --> 00:37:26.960 align:start position:0%
subtract five
 

00:37:26.960 --> 00:37:28.630 align:start position:0%
subtract five
and<00:37:27.119><c> so</c><00:37:27.280><c> therefore</c><00:37:27.599><c> the</c><00:37:27.839><c> greatest</c><00:37:28.240><c> number</c><00:37:28.560><c> in</c>

00:37:28.630 --> 00:37:28.640 align:start position:0%
and so therefore the greatest number in
 

00:37:28.640 --> 00:37:30.630 align:start position:0%
and so therefore the greatest number in
logits<00:37:29.119><c> will</c><00:37:29.359><c> become</c><00:37:29.599><c> zero</c><00:37:30.160><c> and</c><00:37:30.400><c> all</c><00:37:30.480><c> the</c>

00:37:30.630 --> 00:37:30.640 align:start position:0%
logits will become zero and all the
 

00:37:30.640 --> 00:37:32.069 align:start position:0%
logits will become zero and all the
other<00:37:30.800><c> numbers</c><00:37:31.119><c> will</c><00:37:31.280><c> become</c><00:37:31.520><c> some</c><00:37:31.760><c> negative</c>

00:37:32.069 --> 00:37:32.079 align:start position:0%
other numbers will become some negative
 

00:37:32.079 --> 00:37:33.109 align:start position:0%
other numbers will become some negative
numbers

00:37:33.109 --> 00:37:33.119 align:start position:0%
numbers
 

00:37:33.119 --> 00:37:35.109 align:start position:0%
numbers
and<00:37:33.280><c> then</c><00:37:33.760><c> the</c><00:37:33.920><c> result</c><00:37:34.320><c> of</c><00:37:34.400><c> this</c><00:37:34.640><c> is</c><00:37:34.800><c> always</c>

00:37:35.109 --> 00:37:35.119 align:start position:0%
and then the result of this is always
 

00:37:35.119 --> 00:37:37.910 align:start position:0%
and then the result of this is always
well<00:37:35.359><c> behaved</c><00:37:36.160><c> so</c><00:37:36.320><c> even</c><00:37:36.560><c> if</c><00:37:36.640><c> we</c><00:37:36.800><c> have</c><00:37:36.880><c> 100</c><00:37:37.280><c> here</c>

00:37:37.910 --> 00:37:37.920 align:start position:0%
well behaved so even if we have 100 here
 

00:37:37.920 --> 00:37:39.109 align:start position:0%
well behaved so even if we have 100 here
previously

00:37:39.109 --> 00:37:39.119 align:start position:0%
previously
 

00:37:39.119 --> 00:37:41.109 align:start position:0%
previously
not<00:37:39.359><c> good</c><00:37:40.079><c> but</c><00:37:40.320><c> because</c><00:37:40.560><c> pytorch</c><00:37:41.040><c> will</c>

00:37:41.109 --> 00:37:41.119 align:start position:0%
not good but because pytorch will
 

00:37:41.119 --> 00:37:44.310 align:start position:0%
not good but because pytorch will
subtract<00:37:41.520><c> 100</c><00:37:42.400><c> this</c><00:37:42.560><c> will</c><00:37:42.720><c> work</c>

00:37:44.310 --> 00:37:44.320 align:start position:0%
subtract 100 this will work
 

00:37:44.320 --> 00:37:46.950 align:start position:0%
subtract 100 this will work
and<00:37:44.560><c> so</c><00:37:44.880><c> there's</c><00:37:45.200><c> many</c><00:37:45.680><c> good</c><00:37:45.920><c> reasons</c><00:37:46.320><c> to</c><00:37:46.720><c> call</c>

00:37:46.950 --> 00:37:46.960 align:start position:0%
and so there's many good reasons to call
 

00:37:46.960 --> 00:37:49.190 align:start position:0%
and so there's many good reasons to call
cross-entropy<00:37:48.160><c> number</c><00:37:48.480><c> one</c><00:37:48.720><c> the</c><00:37:48.880><c> forward</c>

00:37:49.190 --> 00:37:49.200 align:start position:0%
cross-entropy number one the forward
 

00:37:49.200 --> 00:37:50.790 align:start position:0%
cross-entropy number one the forward
pass<00:37:49.440><c> can</c><00:37:49.599><c> be</c><00:37:49.680><c> much</c><00:37:49.920><c> more</c><00:37:50.079><c> efficient</c><00:37:50.640><c> the</c>

00:37:50.790 --> 00:37:50.800 align:start position:0%
pass can be much more efficient the
 

00:37:50.800 --> 00:37:53.030 align:start position:0%
pass can be much more efficient the
backward<00:37:51.119><c> pass</c><00:37:51.359><c> can</c><00:37:51.520><c> be</c><00:37:51.599><c> much</c><00:37:51.839><c> more</c><00:37:52.000><c> efficient</c>

00:37:53.030 --> 00:37:53.040 align:start position:0%
backward pass can be much more efficient
 

00:37:53.040 --> 00:37:54.950 align:start position:0%
backward pass can be much more efficient
and<00:37:53.599><c> also</c><00:37:53.920><c> things</c><00:37:54.160><c> can</c><00:37:54.320><c> be</c><00:37:54.400><c> much</c><00:37:54.640><c> more</c>

00:37:54.950 --> 00:37:54.960 align:start position:0%
and also things can be much more
 

00:37:54.960 --> 00:37:57.030 align:start position:0%
and also things can be much more
numerically<00:37:55.520><c> well</c><00:37:55.760><c> behaved</c><00:37:56.480><c> okay</c><00:37:56.640><c> so</c><00:37:56.800><c> let's</c>

00:37:57.030 --> 00:37:57.040 align:start position:0%
numerically well behaved okay so let's
 

00:37:57.040 --> 00:37:58.230 align:start position:0%
numerically well behaved okay so let's
now<00:37:57.200><c> set</c><00:37:57.359><c> up</c><00:37:57.440><c> the</c><00:37:57.520><c> training</c><00:37:57.839><c> of</c><00:37:57.920><c> this</c><00:37:58.000><c> neural</c>

00:37:58.230 --> 00:37:58.240 align:start position:0%
now set up the training of this neural
 

00:37:58.240 --> 00:37:59.270 align:start position:0%
now set up the training of this neural
net

00:37:59.270 --> 00:37:59.280 align:start position:0%
net
 

00:37:59.280 --> 00:38:02.470 align:start position:0%
net
we<00:37:59.440><c> have</c><00:37:59.680><c> the</c><00:37:59.760><c> forward</c><00:38:00.079><c> pass</c>

00:38:02.470 --> 00:38:02.480 align:start position:0%
 
 

00:38:02.480 --> 00:38:04.630 align:start position:0%
 
uh<00:38:02.720><c> we</c><00:38:02.960><c> don't</c><00:38:03.200><c> need</c><00:38:03.599><c> these</c>

00:38:04.630 --> 00:38:04.640 align:start position:0%
uh we don't need these
 

00:38:04.640 --> 00:38:06.790 align:start position:0%
uh we don't need these
is<00:38:04.800><c> that</c><00:38:04.960><c> we</c><00:38:05.040><c> have</c><00:38:05.119><c> the</c><00:38:05.359><c> losses</c><00:38:05.839><c> equal</c><00:38:06.079><c> to</c><00:38:06.560><c> the</c>

00:38:06.790 --> 00:38:06.800 align:start position:0%
is that we have the losses equal to the
 

00:38:06.800 --> 00:38:09.750 align:start position:0%
is that we have the losses equal to the
f.cross<00:38:07.440><c> entropy</c><00:38:08.079><c> that's</c><00:38:08.320><c> the</c><00:38:08.400><c> forward</c><00:38:08.720><c> pass</c>

00:38:09.750 --> 00:38:09.760 align:start position:0%
f.cross entropy that's the forward pass
 

00:38:09.760 --> 00:38:12.069 align:start position:0%
f.cross entropy that's the forward pass
then<00:38:10.000><c> we</c><00:38:10.079><c> need</c><00:38:10.400><c> the</c><00:38:10.560><c> backward</c><00:38:10.960><c> pass</c><00:38:11.680><c> first</c><00:38:11.920><c> we</c>

00:38:12.069 --> 00:38:12.079 align:start position:0%
then we need the backward pass first we
 

00:38:12.079 --> 00:38:14.630 align:start position:0%
then we need the backward pass first we
want<00:38:12.240><c> to</c><00:38:12.480><c> set</c><00:38:12.640><c> the</c><00:38:12.800><c> gradients</c><00:38:13.280><c> to</c><00:38:13.440><c> be</c><00:38:13.680><c> zero</c><00:38:14.400><c> so</c>

00:38:14.630 --> 00:38:14.640 align:start position:0%
want to set the gradients to be zero so
 

00:38:14.640 --> 00:38:16.230 align:start position:0%
want to set the gradients to be zero so
for<00:38:14.800><c> p</c><00:38:14.960><c> in</c><00:38:15.119><c> parameters</c>

00:38:16.230 --> 00:38:16.240 align:start position:0%
for p in parameters
 

00:38:16.240 --> 00:38:18.069 align:start position:0%
for p in parameters
we<00:38:16.400><c> want</c><00:38:16.560><c> to</c><00:38:16.640><c> make</c><00:38:16.800><c> sure</c><00:38:16.960><c> that</c><00:38:17.200><c> p</c><00:38:17.359><c> dot</c><00:38:17.599><c> grad</c><00:38:17.920><c> is</c>

00:38:18.069 --> 00:38:18.079 align:start position:0%
we want to make sure that p dot grad is
 

00:38:18.079 --> 00:38:19.430 align:start position:0%
we want to make sure that p dot grad is
none<00:38:18.400><c> which</c><00:38:18.560><c> is</c><00:38:18.640><c> the</c><00:38:18.720><c> same</c><00:38:18.960><c> as</c><00:38:19.040><c> setting</c><00:38:19.280><c> it</c><00:38:19.359><c> to</c>

00:38:19.430 --> 00:38:19.440 align:start position:0%
none which is the same as setting it to
 

00:38:19.440 --> 00:38:20.870 align:start position:0%
none which is the same as setting it to
zero<00:38:19.680><c> in</c><00:38:19.760><c> pi</c><00:38:20.000><c> torch</c>

00:38:20.870 --> 00:38:20.880 align:start position:0%
zero in pi torch
 

00:38:20.880 --> 00:38:23.030 align:start position:0%
zero in pi torch
and<00:38:21.040><c> then</c><00:38:21.280><c> lost</c><00:38:21.520><c> that</c><00:38:21.680><c> backward</c><00:38:22.320><c> to</c><00:38:22.480><c> populate</c>

00:38:23.030 --> 00:38:23.040 align:start position:0%
and then lost that backward to populate
 

00:38:23.040 --> 00:38:24.390 align:start position:0%
and then lost that backward to populate
those<00:38:23.280><c> gradients</c>

00:38:24.390 --> 00:38:24.400 align:start position:0%
those gradients
 

00:38:24.400 --> 00:38:25.750 align:start position:0%
those gradients
once<00:38:24.640><c> we</c><00:38:24.800><c> have</c><00:38:24.880><c> the</c><00:38:24.960><c> gradients</c><00:38:25.359><c> we</c><00:38:25.440><c> can</c><00:38:25.520><c> do</c><00:38:25.680><c> the</c>

00:38:25.750 --> 00:38:25.760 align:start position:0%
once we have the gradients we can do the
 

00:38:25.760 --> 00:38:28.230 align:start position:0%
once we have the gradients we can do the
parameter<00:38:26.240><c> update</c><00:38:27.040><c> so</c><00:38:27.200><c> for</c><00:38:27.440><c> p</c><00:38:27.599><c> in</c><00:38:27.680><c> parameters</c>

00:38:28.230 --> 00:38:28.240 align:start position:0%
parameter update so for p in parameters
 

00:38:28.240 --> 00:38:29.990 align:start position:0%
parameter update so for p in parameters
we<00:38:28.400><c> want</c><00:38:28.640><c> to</c><00:38:28.800><c> take</c><00:38:29.040><c> all</c><00:38:29.200><c> the</c>

00:38:29.990 --> 00:38:30.000 align:start position:0%
we want to take all the
 

00:38:30.000 --> 00:38:32.390 align:start position:0%
we want to take all the
data<00:38:30.720><c> and</c><00:38:30.800><c> we</c><00:38:30.960><c> want</c><00:38:31.040><c> to</c><00:38:31.200><c> nudge</c><00:38:31.520><c> it</c>

00:38:32.390 --> 00:38:32.400 align:start position:0%
data and we want to nudge it
 

00:38:32.400 --> 00:38:36.870 align:start position:0%
data and we want to nudge it
learning<00:38:32.720><c> rate</c><00:38:32.960><c> times</c><00:38:33.520><c> p</c><00:38:33.680><c> dot</c><00:38:34.160><c> grad</c>

00:38:36.870 --> 00:38:36.880 align:start position:0%
 
 

00:38:36.880 --> 00:38:39.750 align:start position:0%
 
and<00:38:37.040><c> then</c><00:38:37.280><c> we</c><00:38:37.440><c> want</c><00:38:37.760><c> to</c><00:38:38.320><c> repeat</c><00:38:38.720><c> this</c>

00:38:39.750 --> 00:38:39.760 align:start position:0%
and then we want to repeat this
 

00:38:39.760 --> 00:38:43.910 align:start position:0%
and then we want to repeat this
a<00:38:39.920><c> few</c><00:38:40.079><c> times</c>

00:38:43.910 --> 00:38:43.920 align:start position:0%
 
 

00:38:43.920 --> 00:38:48.790 align:start position:0%
 
and<00:38:44.160><c> let's</c><00:38:44.720><c> print</c><00:38:45.200><c> the</c><00:38:45.359><c> loss</c><00:38:45.680><c> here</c><00:38:45.920><c> as</c><00:38:46.079><c> well</c>

00:38:48.790 --> 00:38:48.800 align:start position:0%
 
 

00:38:48.800 --> 00:38:50.069 align:start position:0%
 
now<00:38:48.960><c> this</c><00:38:49.200><c> won't</c><00:38:49.359><c> suffice</c><00:38:49.760><c> and</c><00:38:49.920><c> it</c><00:38:50.000><c> will</c>

00:38:50.069 --> 00:38:50.079 align:start position:0%
now this won't suffice and it will
 

00:38:50.079 --> 00:38:51.910 align:start position:0%
now this won't suffice and it will
create<00:38:50.320><c> an</c><00:38:50.560><c> error</c><00:38:51.040><c> because</c><00:38:51.280><c> we</c><00:38:51.440><c> also</c><00:38:51.680><c> have</c><00:38:51.839><c> to</c>

00:38:51.910 --> 00:38:51.920 align:start position:0%
create an error because we also have to
 

00:38:51.920 --> 00:38:53.910 align:start position:0%
create an error because we also have to
go<00:38:52.160><c> for</c><00:38:52.320><c> pn</c><00:38:52.720><c> parameters</c>

00:38:53.910 --> 00:38:53.920 align:start position:0%
go for pn parameters
 

00:38:53.920 --> 00:38:55.589 align:start position:0%
go for pn parameters
and<00:38:54.000><c> we</c><00:38:54.160><c> have</c><00:38:54.240><c> to</c><00:38:54.320><c> make</c><00:38:54.480><c> sure</c><00:38:54.720><c> that</c><00:38:54.960><c> p</c><00:38:55.119><c> dot</c>

00:38:55.589 --> 00:38:55.599 align:start position:0%
and we have to make sure that p dot
 

00:38:55.599 --> 00:38:59.750 align:start position:0%
and we have to make sure that p dot
requires<00:38:56.160><c> grad</c><00:38:56.880><c> is</c><00:38:57.040><c> set</c><00:38:57.200><c> to</c><00:38:57.359><c> true</c><00:38:57.599><c> in</c><00:38:57.760><c> pi</c><00:38:57.920><c> torch</c>

00:38:59.750 --> 00:38:59.760 align:start position:0%
requires grad is set to true in pi torch
 

00:38:59.760 --> 00:39:03.750 align:start position:0%
requires grad is set to true in pi torch
and<00:39:00.160><c> this</c><00:39:00.480><c> should</c><00:39:01.280><c> just</c><00:39:02.000><c> work</c>

00:39:03.750 --> 00:39:03.760 align:start position:0%
and this should just work
 

00:39:03.760 --> 00:39:05.750 align:start position:0%
and this should just work
okay<00:39:04.240><c> so</c><00:39:04.400><c> we</c><00:39:04.480><c> started</c><00:39:04.720><c> off</c><00:39:04.880><c> with</c><00:39:04.960><c> loss</c><00:39:05.200><c> of</c><00:39:05.280><c> 17</c>

00:39:05.750 --> 00:39:05.760 align:start position:0%
okay so we started off with loss of 17
 

00:39:05.760 --> 00:39:08.069 align:start position:0%
okay so we started off with loss of 17
and<00:39:05.920><c> we're</c><00:39:06.480><c> decreasing</c><00:39:07.119><c> it</c>

00:39:08.069 --> 00:39:08.079 align:start position:0%
and we're decreasing it
 

00:39:08.079 --> 00:39:10.069 align:start position:0%
and we're decreasing it
let's<00:39:08.320><c> run</c><00:39:08.560><c> longer</c>

00:39:10.069 --> 00:39:10.079 align:start position:0%
let's run longer
 

00:39:10.079 --> 00:39:12.870 align:start position:0%
let's run longer
and<00:39:10.240><c> you</c><00:39:10.320><c> see</c><00:39:10.480><c> how</c><00:39:10.640><c> the</c><00:39:10.720><c> loss</c><00:39:10.960><c> decreases</c>

00:39:12.870 --> 00:39:12.880 align:start position:0%
and you see how the loss decreases
 

00:39:12.880 --> 00:39:17.190 align:start position:0%
and you see how the loss decreases
a<00:39:12.960><c> lot</c><00:39:13.200><c> here</c><00:39:13.440><c> so</c>

00:39:17.190 --> 00:39:17.200 align:start position:0%
 
 

00:39:17.200 --> 00:39:19.589 align:start position:0%
 
if<00:39:17.359><c> we</c><00:39:17.520><c> just</c><00:39:17.760><c> run</c><00:39:18.000><c> for</c><00:39:18.320><c> a</c><00:39:18.400><c> thousand</c><00:39:18.800><c> times</c>

00:39:19.589 --> 00:39:19.599 align:start position:0%
if we just run for a thousand times
 

00:39:19.599 --> 00:39:21.510 align:start position:0%
if we just run for a thousand times
we<00:39:19.760><c> get</c><00:39:19.920><c> a</c><00:39:20.000><c> very</c><00:39:20.240><c> very</c><00:39:20.480><c> low</c><00:39:20.720><c> loss</c><00:39:21.280><c> and</c><00:39:21.359><c> that</c>

00:39:21.510 --> 00:39:21.520 align:start position:0%
we get a very very low loss and that
 

00:39:21.520 --> 00:39:22.470 align:start position:0%
we get a very very low loss and that
means<00:39:21.760><c> that</c><00:39:21.839><c> we're</c><00:39:22.000><c> making</c><00:39:22.160><c> very</c><00:39:22.320><c> good</c>

00:39:22.470 --> 00:39:22.480 align:start position:0%
means that we're making very good
 

00:39:22.480 --> 00:39:25.270 align:start position:0%
means that we're making very good
predictions<00:39:23.440><c> now</c><00:39:23.599><c> the</c><00:39:23.760><c> reason</c><00:39:24.079><c> that</c><00:39:24.480><c> this</c><00:39:24.800><c> is</c>

00:39:25.270 --> 00:39:25.280 align:start position:0%
predictions now the reason that this is
 

00:39:25.280 --> 00:39:27.030 align:start position:0%
predictions now the reason that this is
so<00:39:25.440><c> straightforward</c><00:39:26.000><c> right</c><00:39:26.240><c> now</c>

00:39:27.030 --> 00:39:27.040 align:start position:0%
so straightforward right now
 

00:39:27.040 --> 00:39:29.349 align:start position:0%
so straightforward right now
is<00:39:27.200><c> because</c><00:39:27.440><c> we're</c><00:39:27.680><c> only</c><00:39:28.240><c> um</c>

00:39:29.349 --> 00:39:29.359 align:start position:0%
is because we're only um
 

00:39:29.359 --> 00:39:32.310 align:start position:0%
is because we're only um
overfitting<00:39:30.400><c> 32</c><00:39:31.119><c> examples</c>

00:39:32.310 --> 00:39:32.320 align:start position:0%
overfitting 32 examples
 

00:39:32.320 --> 00:39:34.630 align:start position:0%
overfitting 32 examples
so<00:39:32.560><c> we</c><00:39:32.720><c> only</c><00:39:32.880><c> have</c><00:39:32.960><c> 32</c><00:39:33.359><c> examples</c><00:39:34.079><c> uh</c><00:39:34.400><c> of</c><00:39:34.560><c> the</c>

00:39:34.630 --> 00:39:34.640 align:start position:0%
so we only have 32 examples uh of the
 

00:39:34.640 --> 00:39:36.390 align:start position:0%
so we only have 32 examples uh of the
first<00:39:34.960><c> five</c><00:39:35.200><c> words</c>

00:39:36.390 --> 00:39:36.400 align:start position:0%
first five words
 

00:39:36.400 --> 00:39:37.910 align:start position:0%
first five words
and<00:39:36.640><c> therefore</c><00:39:37.040><c> it's</c><00:39:37.200><c> very</c><00:39:37.359><c> easy</c><00:39:37.680><c> to</c><00:39:37.760><c> make</c>

00:39:37.910 --> 00:39:37.920 align:start position:0%
and therefore it's very easy to make
 

00:39:37.920 --> 00:39:40.790 align:start position:0%
and therefore it's very easy to make
this<00:39:38.160><c> neural</c><00:39:38.480><c> net</c><00:39:38.800><c> fit</c><00:39:39.440><c> only</c><00:39:39.760><c> these</c><00:39:39.920><c> two</c><00:39:40.320><c> 32</c>

00:39:40.790 --> 00:39:40.800 align:start position:0%
this neural net fit only these two 32
 

00:39:40.800 --> 00:39:43.109 align:start position:0%
this neural net fit only these two 32
examples<00:39:41.440><c> because</c><00:39:41.680><c> we</c><00:39:41.920><c> have</c><00:39:42.000><c> 3</c><00:39:42.560><c> 400</c>

00:39:43.109 --> 00:39:43.119 align:start position:0%
examples because we have 3 400
 

00:39:43.119 --> 00:39:46.310 align:start position:0%
examples because we have 3 400
parameters<00:39:44.240><c> and</c><00:39:44.400><c> only</c><00:39:44.960><c> 32</c><00:39:45.359><c> examples</c><00:39:46.000><c> so</c><00:39:46.160><c> we're</c>

00:39:46.310 --> 00:39:46.320 align:start position:0%
parameters and only 32 examples so we're
 

00:39:46.320 --> 00:39:48.150 align:start position:0%
parameters and only 32 examples so we're
doing<00:39:46.480><c> what's</c><00:39:46.720><c> called</c><00:39:46.960><c> overfitting</c><00:39:47.680><c> a</c><00:39:47.839><c> single</c>

00:39:48.150 --> 00:39:48.160 align:start position:0%
doing what's called overfitting a single
 

00:39:48.160 --> 00:39:50.150 align:start position:0%
doing what's called overfitting a single
batch<00:39:48.880><c> of</c><00:39:49.119><c> the</c><00:39:49.280><c> data</c>

00:39:50.150 --> 00:39:50.160 align:start position:0%
batch of the data
 

00:39:50.160 --> 00:39:52.310 align:start position:0%
batch of the data
and<00:39:50.320><c> getting</c><00:39:50.640><c> a</c><00:39:50.720><c> very</c><00:39:50.960><c> low</c><00:39:51.200><c> loss</c><00:39:52.000><c> and</c><00:39:52.160><c> good</c>

00:39:52.310 --> 00:39:52.320 align:start position:0%
and getting a very low loss and good
 

00:39:52.320 --> 00:39:53.430 align:start position:0%
and getting a very low loss and good
predictions

00:39:53.430 --> 00:39:53.440 align:start position:0%
predictions
 

00:39:53.440 --> 00:39:55.030 align:start position:0%
predictions
um<00:39:54.079><c> but</c><00:39:54.240><c> that's</c><00:39:54.400><c> just</c><00:39:54.560><c> because</c><00:39:54.720><c> we</c><00:39:54.800><c> have</c><00:39:54.880><c> so</c>

00:39:55.030 --> 00:39:55.040 align:start position:0%
um but that's just because we have so
 

00:39:55.040 --> 00:39:56.870 align:start position:0%
um but that's just because we have so
many<00:39:55.200><c> parameters</c><00:39:55.599><c> for</c><00:39:55.760><c> so</c><00:39:56.000><c> few</c><00:39:56.240><c> examples</c><00:39:56.720><c> so</c>

00:39:56.870 --> 00:39:56.880 align:start position:0%
many parameters for so few examples so
 

00:39:56.880 --> 00:39:57.990 align:start position:0%
many parameters for so few examples so
it's<00:39:57.040><c> easy</c><00:39:57.280><c> to</c>

00:39:57.990 --> 00:39:58.000 align:start position:0%
it's easy to
 

00:39:58.000 --> 00:40:00.069 align:start position:0%
it's easy to
uh<00:39:58.240><c> make</c><00:39:58.480><c> this</c><00:39:58.640><c> be</c><00:39:58.880><c> very</c><00:39:59.200><c> low</c>

00:40:00.069 --> 00:40:00.079 align:start position:0%
uh make this be very low
 

00:40:00.079 --> 00:40:01.750 align:start position:0%
uh make this be very low
now<00:40:00.320><c> we're</c><00:40:00.400><c> not</c><00:40:00.560><c> able</c><00:40:00.720><c> to</c><00:40:00.880><c> achieve</c><00:40:01.280><c> exactly</c>

00:40:01.750 --> 00:40:01.760 align:start position:0%
now we're not able to achieve exactly
 

00:40:01.760 --> 00:40:02.630 align:start position:0%
now we're not able to achieve exactly
zero

00:40:02.630 --> 00:40:02.640 align:start position:0%
zero
 

00:40:02.640 --> 00:40:04.470 align:start position:0%
zero
and<00:40:02.720><c> the</c><00:40:02.880><c> reason</c><00:40:03.119><c> for</c><00:40:03.280><c> that</c><00:40:03.599><c> is</c><00:40:04.079><c> we</c><00:40:04.240><c> can</c><00:40:04.320><c> for</c>

00:40:04.470 --> 00:40:04.480 align:start position:0%
and the reason for that is we can for
 

00:40:04.480 --> 00:40:06.310 align:start position:0%
and the reason for that is we can for
example<00:40:04.720><c> look</c><00:40:04.880><c> at</c><00:40:05.040><c> logits</c><00:40:05.839><c> which</c><00:40:06.079><c> are</c><00:40:06.160><c> being</c>

00:40:06.310 --> 00:40:06.320 align:start position:0%
example look at logits which are being
 

00:40:06.320 --> 00:40:08.390 align:start position:0%
example look at logits which are being
predicted

00:40:08.390 --> 00:40:08.400 align:start position:0%
predicted
 

00:40:08.400 --> 00:40:11.430 align:start position:0%
predicted
and<00:40:09.119><c> we</c><00:40:09.280><c> can</c><00:40:09.440><c> look</c><00:40:09.680><c> at</c><00:40:10.000><c> the</c><00:40:10.240><c> max</c><00:40:11.040><c> along</c><00:40:11.280><c> the</c>

00:40:11.430 --> 00:40:11.440 align:start position:0%
and we can look at the max along the
 

00:40:11.440 --> 00:40:13.510 align:start position:0%
and we can look at the max along the
first<00:40:11.680><c> dimension</c>

00:40:13.510 --> 00:40:13.520 align:start position:0%
first dimension
 

00:40:13.520 --> 00:40:15.510 align:start position:0%
first dimension
and<00:40:13.839><c> in</c><00:40:14.000><c> pi</c><00:40:14.240><c> torch</c>

00:40:15.510 --> 00:40:15.520 align:start position:0%
and in pi torch
 

00:40:15.520 --> 00:40:17.510 align:start position:0%
and in pi torch
max<00:40:15.839><c> reports</c><00:40:16.240><c> both</c><00:40:16.560><c> the</c><00:40:16.720><c> actual</c><00:40:17.040><c> values</c><00:40:17.440><c> that</c>

00:40:17.510 --> 00:40:17.520 align:start position:0%
max reports both the actual values that
 

00:40:17.520 --> 00:40:20.230 align:start position:0%
max reports both the actual values that
take<00:40:17.760><c> on</c><00:40:17.920><c> the</c><00:40:18.079><c> maximum</c><00:40:19.040><c> number</c><00:40:19.680><c> but</c><00:40:19.920><c> also</c><00:40:20.160><c> the</c>

00:40:20.230 --> 00:40:20.240 align:start position:0%
take on the maximum number but also the
 

00:40:20.240 --> 00:40:22.069 align:start position:0%
take on the maximum number but also the
indices<00:40:20.800><c> of</c><00:40:20.960><c> piece</c>

00:40:22.069 --> 00:40:22.079 align:start position:0%
indices of piece
 

00:40:22.079 --> 00:40:23.510 align:start position:0%
indices of piece
and<00:40:22.160><c> you'll</c><00:40:22.320><c> see</c><00:40:22.480><c> that</c><00:40:22.640><c> the</c><00:40:22.800><c> indices</c><00:40:23.200><c> are</c><00:40:23.359><c> very</c>

00:40:23.510 --> 00:40:23.520 align:start position:0%
and you'll see that the indices are very
 

00:40:23.520 --> 00:40:26.310 align:start position:0%
and you'll see that the indices are very
close<00:40:23.920><c> to</c><00:40:24.400><c> the</c><00:40:24.640><c> labels</c>

00:40:26.310 --> 00:40:26.320 align:start position:0%
close to the labels
 

00:40:26.320 --> 00:40:28.630 align:start position:0%
close to the labels
but<00:40:26.640><c> in</c><00:40:26.800><c> some</c><00:40:27.040><c> cases</c><00:40:27.440><c> they</c><00:40:27.680><c> differ</c>

00:40:28.630 --> 00:40:28.640 align:start position:0%
but in some cases they differ
 

00:40:28.640 --> 00:40:31.190 align:start position:0%
but in some cases they differ
for<00:40:28.800><c> example</c><00:40:29.119><c> in</c><00:40:29.200><c> this</c><00:40:29.359><c> very</c><00:40:29.599><c> first</c><00:40:29.920><c> example</c>

00:40:31.190 --> 00:40:31.200 align:start position:0%
for example in this very first example
 

00:40:31.200 --> 00:40:33.510 align:start position:0%
for example in this very first example
the<00:40:31.359><c> predicted</c><00:40:31.760><c> index</c><00:40:32.079><c> is</c><00:40:32.240><c> 19</c><00:40:32.880><c> but</c><00:40:33.040><c> the</c><00:40:33.200><c> label</c>

00:40:33.510 --> 00:40:33.520 align:start position:0%
the predicted index is 19 but the label
 

00:40:33.520 --> 00:40:35.030 align:start position:0%
the predicted index is 19 but the label
is<00:40:33.680><c> five</c>

00:40:35.030 --> 00:40:35.040 align:start position:0%
is five
 

00:40:35.040 --> 00:40:36.950 align:start position:0%
is five
and<00:40:35.200><c> we're</c><00:40:35.359><c> not</c><00:40:35.520><c> able</c><00:40:35.760><c> to</c><00:40:35.839><c> make</c><00:40:36.079><c> loss</c><00:40:36.400><c> be</c><00:40:36.560><c> zero</c>

00:40:36.950 --> 00:40:36.960 align:start position:0%
and we're not able to make loss be zero
 

00:40:36.960 --> 00:40:40.550 align:start position:0%
and we're not able to make loss be zero
and<00:40:37.119><c> fundamentally</c><00:40:37.680><c> that's</c><00:40:37.920><c> because</c><00:40:38.480><c> here</c>

00:40:40.550 --> 00:40:40.560 align:start position:0%
and fundamentally that's because here
 

00:40:40.560 --> 00:40:42.950 align:start position:0%
and fundamentally that's because here
the<00:40:40.720><c> very</c><00:40:41.040><c> first</c><00:40:41.440><c> or</c><00:40:41.599><c> the</c><00:40:41.760><c> zeroth</c><00:40:42.160><c> index</c><00:40:42.800><c> is</c>

00:40:42.950 --> 00:40:42.960 align:start position:0%
the very first or the zeroth index is
 

00:40:42.960 --> 00:40:44.390 align:start position:0%
the very first or the zeroth index is
the<00:40:43.119><c> example</c><00:40:43.520><c> where</c><00:40:43.760><c> dot</c><00:40:43.920><c> dot</c><00:40:44.079><c> dot</c><00:40:44.320><c> is</c>

00:40:44.390 --> 00:40:44.400 align:start position:0%
the example where dot dot dot is
 

00:40:44.400 --> 00:40:46.150 align:start position:0%
the example where dot dot dot is
supposed<00:40:44.640><c> to</c><00:40:44.800><c> predict</c><00:40:45.119><c> e</c><00:40:45.599><c> but</c><00:40:45.760><c> you</c><00:40:45.839><c> see</c><00:40:46.000><c> how</c>

00:40:46.150 --> 00:40:46.160 align:start position:0%
supposed to predict e but you see how
 

00:40:46.160 --> 00:40:48.069 align:start position:0%
supposed to predict e but you see how
dot<00:40:46.320><c> dot</c><00:40:46.560><c> dot</c><00:40:46.800><c> is</c><00:40:46.880><c> also</c><00:40:47.119><c> supposed</c><00:40:47.440><c> to</c><00:40:47.520><c> predict</c>

00:40:48.069 --> 00:40:48.079 align:start position:0%
dot dot dot is also supposed to predict
 

00:40:48.079 --> 00:40:50.470 align:start position:0%
dot dot dot is also supposed to predict
an<00:40:48.320><c> o</c><00:40:48.960><c> and</c><00:40:49.119><c> dot</c><00:40:49.440><c> dot</c><00:40:49.680><c> is</c><00:40:49.839><c> also</c><00:40:50.079><c> supposed</c><00:40:50.400><c> to</c>

00:40:50.470 --> 00:40:50.480 align:start position:0%
an o and dot dot is also supposed to
 

00:40:50.480 --> 00:40:53.270 align:start position:0%
an o and dot dot is also supposed to
predict<00:40:50.800><c> an</c><00:40:50.960><c> i</c><00:40:51.440><c> and</c><00:40:51.520><c> then</c><00:40:51.839><c> s</c><00:40:52.079><c> as</c><00:40:52.240><c> well</c><00:40:52.960><c> and</c><00:40:53.040><c> so</c>

00:40:53.270 --> 00:40:53.280 align:start position:0%
predict an i and then s as well and so
 

00:40:53.280 --> 00:40:57.190 align:start position:0%
predict an i and then s as well and so
basically<00:40:54.240><c> e</c><00:40:54.720><c> o</c><00:40:55.119><c> a</c><00:40:55.440><c> or</c><00:40:55.680><c> s</c><00:40:56.000><c> are</c><00:40:56.240><c> all</c><00:40:56.480><c> possible</c>

00:40:57.190 --> 00:40:57.200 align:start position:0%
basically e o a or s are all possible
 

00:40:57.200 --> 00:40:59.190 align:start position:0%
basically e o a or s are all possible
outcomes<00:40:57.599><c> in</c><00:40:57.760><c> a</c><00:40:57.839><c> training</c><00:40:58.160><c> set</c><00:40:58.560><c> for</c><00:40:58.720><c> the</c><00:40:58.800><c> exact</c>

00:40:59.190 --> 00:40:59.200 align:start position:0%
outcomes in a training set for the exact
 

00:40:59.200 --> 00:41:01.030 align:start position:0%
outcomes in a training set for the exact
same<00:40:59.520><c> input</c><00:41:00.160><c> so</c><00:41:00.319><c> we're</c><00:41:00.480><c> not</c><00:41:00.720><c> able</c><00:41:00.880><c> to</c>

00:41:01.030 --> 00:41:01.040 align:start position:0%
same input so we're not able to
 

00:41:01.040 --> 00:41:03.510 align:start position:0%
same input so we're not able to
completely<00:41:01.599><c> over</c><00:41:01.839><c> fit</c><00:41:02.160><c> and</c><00:41:02.640><c> um</c>

00:41:03.510 --> 00:41:03.520 align:start position:0%
completely over fit and um
 

00:41:03.520 --> 00:41:06.470 align:start position:0%
completely over fit and um
and<00:41:03.760><c> make</c><00:41:03.920><c> the</c><00:41:04.079><c> loss</c><00:41:04.240><c> be</c><00:41:04.400><c> exactly</c><00:41:04.880><c> zero</c><00:41:06.000><c> so</c><00:41:06.319><c> but</c>

00:41:06.470 --> 00:41:06.480 align:start position:0%
and make the loss be exactly zero so but
 

00:41:06.480 --> 00:41:08.870 align:start position:0%
and make the loss be exactly zero so but
we're<00:41:06.720><c> getting</c><00:41:06.960><c> very</c><00:41:07.280><c> close</c><00:41:08.079><c> in</c><00:41:08.240><c> the</c><00:41:08.319><c> cases</c>

00:41:08.870 --> 00:41:08.880 align:start position:0%
we're getting very close in the cases
 

00:41:08.880 --> 00:41:09.829 align:start position:0%
we're getting very close in the cases
where

00:41:09.829 --> 00:41:09.839 align:start position:0%
where
 

00:41:09.839 --> 00:41:11.750 align:start position:0%
where
there's<00:41:10.079><c> a</c><00:41:10.240><c> unique</c><00:41:10.560><c> input</c><00:41:11.040><c> for</c><00:41:11.200><c> a</c><00:41:11.359><c> unique</c>

00:41:11.750 --> 00:41:11.760 align:start position:0%
there's a unique input for a unique
 

00:41:11.760 --> 00:41:13.510 align:start position:0%
there's a unique input for a unique
output<00:41:12.400><c> in</c><00:41:12.560><c> those</c><00:41:12.720><c> cases</c><00:41:13.040><c> we</c><00:41:13.200><c> do</c><00:41:13.359><c> what's</c>

00:41:13.510 --> 00:41:13.520 align:start position:0%
output in those cases we do what's
 

00:41:13.520 --> 00:41:15.670 align:start position:0%
output in those cases we do what's
called<00:41:13.760><c> overfit</c><00:41:14.720><c> and</c><00:41:14.960><c> we</c><00:41:15.119><c> basically</c><00:41:15.440><c> get</c><00:41:15.599><c> the</c>

00:41:15.670 --> 00:41:15.680 align:start position:0%
called overfit and we basically get the
 

00:41:15.680 --> 00:41:19.030 align:start position:0%
called overfit and we basically get the
exact<00:41:16.000><c> same</c><00:41:16.480><c> and</c><00:41:16.800><c> the</c><00:41:16.960><c> exact</c><00:41:17.280><c> correct</c><00:41:17.599><c> result</c>

00:41:19.030 --> 00:41:19.040 align:start position:0%
exact same and the exact correct result
 

00:41:19.040 --> 00:41:21.109 align:start position:0%
exact same and the exact correct result
so<00:41:19.200><c> now</c><00:41:19.440><c> all</c><00:41:19.599><c> we</c><00:41:19.760><c> have</c><00:41:19.920><c> to</c><00:41:20.000><c> do</c>

00:41:21.109 --> 00:41:21.119 align:start position:0%
so now all we have to do
 

00:41:21.119 --> 00:41:22.710 align:start position:0%
so now all we have to do
is<00:41:21.359><c> we</c><00:41:21.520><c> just</c><00:41:21.680><c> need</c><00:41:21.920><c> to</c><00:41:22.000><c> make</c><00:41:22.160><c> sure</c><00:41:22.400><c> that</c><00:41:22.560><c> we</c>

00:41:22.710 --> 00:41:22.720 align:start position:0%
is we just need to make sure that we
 

00:41:22.720 --> 00:41:24.150 align:start position:0%
is we just need to make sure that we
read<00:41:22.960><c> in</c><00:41:23.040><c> the</c><00:41:23.119><c> full</c><00:41:23.280><c> data</c><00:41:23.520><c> set</c><00:41:23.680><c> and</c><00:41:23.839><c> optimize</c>

00:41:24.150 --> 00:41:24.160 align:start position:0%
read in the full data set and optimize
 

00:41:24.160 --> 00:41:25.430 align:start position:0%
read in the full data set and optimize
the<00:41:24.240><c> neural</c><00:41:24.480><c> net</c>

00:41:25.430 --> 00:41:25.440 align:start position:0%
the neural net
 

00:41:25.440 --> 00:41:27.190 align:start position:0%
the neural net
okay<00:41:25.680><c> so</c><00:41:25.760><c> let's</c><00:41:25.920><c> swing</c><00:41:26.240><c> back</c><00:41:26.480><c> up</c>

00:41:27.190 --> 00:41:27.200 align:start position:0%
okay so let's swing back up
 

00:41:27.200 --> 00:41:29.109 align:start position:0%
okay so let's swing back up
where<00:41:27.359><c> we</c><00:41:27.520><c> created</c><00:41:27.760><c> the</c><00:41:27.839><c> dataset</c>

00:41:29.109 --> 00:41:29.119 align:start position:0%
where we created the dataset
 

00:41:29.119 --> 00:41:30.630 align:start position:0%
where we created the dataset
and<00:41:29.280><c> we</c><00:41:29.440><c> see</c><00:41:29.599><c> that</c><00:41:29.760><c> here</c><00:41:29.920><c> we</c><00:41:30.079><c> only</c><00:41:30.319><c> use</c><00:41:30.480><c> the</c>

00:41:30.630 --> 00:41:30.640 align:start position:0%
and we see that here we only use the
 

00:41:30.640 --> 00:41:32.630 align:start position:0%
and we see that here we only use the
first<00:41:30.880><c> five</c><00:41:31.119><c> words</c><00:41:31.520><c> so</c><00:41:31.680><c> let</c><00:41:31.839><c> me</c><00:41:32.000><c> now</c><00:41:32.240><c> erase</c>

00:41:32.630 --> 00:41:32.640 align:start position:0%
first five words so let me now erase
 

00:41:32.640 --> 00:41:33.589 align:start position:0%
first five words so let me now erase
this

00:41:33.589 --> 00:41:33.599 align:start position:0%
this
 

00:41:33.599 --> 00:41:35.109 align:start position:0%
this
and<00:41:33.760><c> let</c><00:41:33.920><c> me</c><00:41:34.079><c> erase</c><00:41:34.400><c> the</c><00:41:34.560><c> print</c><00:41:34.720><c> statements</c>

00:41:35.109 --> 00:41:35.119 align:start position:0%
and let me erase the print statements
 

00:41:35.119 --> 00:41:37.990 align:start position:0%
and let me erase the print statements
otherwise<00:41:35.520><c> we'd</c><00:41:35.680><c> be</c><00:41:35.839><c> printing</c><00:41:36.160><c> way</c><00:41:36.400><c> too</c><00:41:36.560><c> much</c>

00:41:37.990 --> 00:41:38.000 align:start position:0%
otherwise we'd be printing way too much
 

00:41:38.000 --> 00:41:39.750 align:start position:0%
otherwise we'd be printing way too much
and<00:41:38.079><c> so</c><00:41:38.240><c> when</c><00:41:38.400><c> we</c><00:41:38.560><c> processed</c><00:41:38.960><c> the</c><00:41:39.200><c> full</c><00:41:39.520><c> data</c>

00:41:39.750 --> 00:41:39.760 align:start position:0%
and so when we processed the full data
 

00:41:39.760 --> 00:41:42.950 align:start position:0%
and so when we processed the full data
set<00:41:39.920><c> of</c><00:41:40.079><c> all</c><00:41:40.160><c> the</c><00:41:40.319><c> words</c><00:41:41.040><c> we</c><00:41:41.200><c> now</c><00:41:41.440><c> had</c><00:41:41.640><c> 228</c><00:41:42.720><c> 000</c>

00:41:42.950 --> 00:41:42.960 align:start position:0%
set of all the words we now had 228 000
 

00:41:42.960 --> 00:41:45.190 align:start position:0%
set of all the words we now had 228 000
examples<00:41:43.359><c> instead</c><00:41:43.599><c> of</c><00:41:43.680><c> just</c><00:41:43.920><c> 32.</c>

00:41:45.190 --> 00:41:45.200 align:start position:0%
examples instead of just 32.
 

00:41:45.200 --> 00:41:47.510 align:start position:0%
examples instead of just 32.
so<00:41:45.359><c> let's</c><00:41:45.520><c> now</c><00:41:45.760><c> scroll</c><00:41:46.319><c> back</c><00:41:46.560><c> down</c>

00:41:47.510 --> 00:41:47.520 align:start position:0%
so let's now scroll back down
 

00:41:47.520 --> 00:41:49.990 align:start position:0%
so let's now scroll back down
to<00:41:47.680><c> this</c><00:41:48.000><c> is</c><00:41:48.160><c> much</c><00:41:48.319><c> larger</c><00:41:49.200><c> reinitialize</c><00:41:49.839><c> the</c>

00:41:49.990 --> 00:41:50.000 align:start position:0%
to this is much larger reinitialize the
 

00:41:50.000 --> 00:41:52.309 align:start position:0%
to this is much larger reinitialize the
weights<00:41:50.720><c> the</c><00:41:50.880><c> same</c><00:41:51.119><c> number</c><00:41:51.359><c> of</c><00:41:51.440><c> parameters</c>

00:41:52.309 --> 00:41:52.319 align:start position:0%
weights the same number of parameters
 

00:41:52.319 --> 00:41:54.309 align:start position:0%
weights the same number of parameters
they<00:41:52.560><c> all</c><00:41:52.640><c> require</c><00:41:53.040><c> gradients</c>

00:41:54.309 --> 00:41:54.319 align:start position:0%
they all require gradients
 

00:41:54.319 --> 00:41:56.390 align:start position:0%
they all require gradients
and<00:41:54.400><c> then</c><00:41:54.640><c> let's</c><00:41:54.960><c> push</c><00:41:55.760><c> this</c><00:41:56.000><c> print</c><00:41:56.319><c> out</c>

00:41:56.390 --> 00:41:56.400 align:start position:0%
and then let's push this print out
 

00:41:56.400 --> 00:41:58.630 align:start position:0%
and then let's push this print out
lost.item<00:41:57.200><c> to</c><00:41:57.359><c> be</c><00:41:57.599><c> here</c>

00:41:58.630 --> 00:41:58.640 align:start position:0%
lost.item to be here
 

00:41:58.640 --> 00:41:59.910 align:start position:0%
lost.item to be here
and<00:41:58.720><c> let's</c><00:41:58.880><c> just</c><00:41:59.040><c> see</c><00:41:59.119><c> how</c><00:41:59.280><c> the</c><00:41:59.359><c> optimization</c>

00:41:59.910 --> 00:41:59.920 align:start position:0%
and let's just see how the optimization
 

00:41:59.920 --> 00:42:04.390 align:start position:0%
and let's just see how the optimization
goes<00:42:00.160><c> if</c><00:42:00.319><c> we</c><00:42:00.480><c> run</c><00:42:00.720><c> this</c>

00:42:04.390 --> 00:42:04.400 align:start position:0%
 
 

00:42:04.400 --> 00:42:05.829 align:start position:0%
 
okay<00:42:04.560><c> so</c><00:42:04.720><c> we</c><00:42:04.880><c> started</c><00:42:05.119><c> with</c><00:42:05.280><c> a</c><00:42:05.359><c> fairly</c><00:42:05.599><c> high</c>

00:42:05.829 --> 00:42:05.839 align:start position:0%
okay so we started with a fairly high
 

00:42:05.839 --> 00:42:07.750 align:start position:0%
okay so we started with a fairly high
loss<00:42:06.319><c> and</c><00:42:06.400><c> then</c><00:42:06.640><c> as</c><00:42:06.720><c> we're</c><00:42:06.960><c> optimizing</c><00:42:07.599><c> the</c>

00:42:07.750 --> 00:42:07.760 align:start position:0%
loss and then as we're optimizing the
 

00:42:07.760 --> 00:42:11.990 align:start position:0%
loss and then as we're optimizing the
loss<00:42:08.000><c> is</c><00:42:08.160><c> coming</c><00:42:08.400><c> down</c>

00:42:11.990 --> 00:42:12.000 align:start position:0%
 
 

00:42:12.000 --> 00:42:13.589 align:start position:0%
 
but<00:42:12.240><c> you'll</c><00:42:12.480><c> notice</c><00:42:12.720><c> that</c><00:42:12.880><c> it</c><00:42:12.960><c> takes</c><00:42:13.280><c> quite</c><00:42:13.520><c> a</c>

00:42:13.589 --> 00:42:13.599 align:start position:0%
but you'll notice that it takes quite a
 

00:42:13.599 --> 00:42:15.829 align:start position:0%
but you'll notice that it takes quite a
bit<00:42:13.760><c> of</c><00:42:13.920><c> time</c><00:42:14.319><c> for</c><00:42:14.560><c> every</c><00:42:14.720><c> single</c><00:42:14.960><c> iteration</c>

00:42:15.829 --> 00:42:15.839 align:start position:0%
bit of time for every single iteration
 

00:42:15.839 --> 00:42:17.829 align:start position:0%
bit of time for every single iteration
so<00:42:16.000><c> let's</c><00:42:16.400><c> actually</c><00:42:16.640><c> address</c><00:42:16.960><c> that</c><00:42:17.680><c> because</c>

00:42:17.829 --> 00:42:17.839 align:start position:0%
so let's actually address that because
 

00:42:17.839 --> 00:42:19.510 align:start position:0%
so let's actually address that because
we're<00:42:18.000><c> doing</c><00:42:18.240><c> way</c><00:42:18.480><c> too</c><00:42:18.640><c> much</c><00:42:18.800><c> work</c><00:42:19.040><c> forwarding</c>

00:42:19.510 --> 00:42:19.520 align:start position:0%
we're doing way too much work forwarding
 

00:42:19.520 --> 00:42:22.550 align:start position:0%
we're doing way too much work forwarding
and<00:42:19.599><c> backwarding</c><00:42:20.079><c> 220</c><00:42:21.040><c> 000</c><00:42:21.280><c> examples</c>

00:42:22.550 --> 00:42:22.560 align:start position:0%
and backwarding 220 000 examples
 

00:42:22.560 --> 00:42:24.309 align:start position:0%
and backwarding 220 000 examples
in<00:42:22.720><c> practice</c><00:42:23.119><c> what</c><00:42:23.280><c> people</c><00:42:23.520><c> usually</c><00:42:23.839><c> do</c><00:42:24.160><c> is</c>

00:42:24.309 --> 00:42:24.319 align:start position:0%
in practice what people usually do is
 

00:42:24.319 --> 00:42:26.790 align:start position:0%
in practice what people usually do is
they<00:42:24.800><c> perform</c><00:42:25.680><c> forward</c><00:42:26.079><c> and</c><00:42:26.240><c> backward</c><00:42:26.560><c> pass</c>

00:42:26.790 --> 00:42:26.800 align:start position:0%
they perform forward and backward pass
 

00:42:26.800 --> 00:42:29.589 align:start position:0%
they perform forward and backward pass
and<00:42:26.960><c> update</c><00:42:27.520><c> on</c><00:42:27.680><c> many</c><00:42:27.920><c> batches</c><00:42:28.400><c> of</c><00:42:28.480><c> the</c><00:42:28.640><c> data</c>

00:42:29.589 --> 00:42:29.599 align:start position:0%
and update on many batches of the data
 

00:42:29.599 --> 00:42:31.670 align:start position:0%
and update on many batches of the data
so<00:42:29.920><c> what</c><00:42:30.079><c> we</c><00:42:30.240><c> will</c><00:42:30.480><c> want</c><00:42:30.640><c> to</c><00:42:30.800><c> do</c><00:42:31.040><c> is</c><00:42:31.280><c> we</c><00:42:31.359><c> want</c><00:42:31.520><c> to</c>

00:42:31.670 --> 00:42:31.680 align:start position:0%
so what we will want to do is we want to
 

00:42:31.680 --> 00:42:33.670 align:start position:0%
so what we will want to do is we want to
randomly<00:42:32.160><c> select</c><00:42:32.560><c> some</c><00:42:32.880><c> portion</c><00:42:33.200><c> of</c><00:42:33.280><c> the</c><00:42:33.359><c> data</c>

00:42:33.670 --> 00:42:33.680 align:start position:0%
randomly select some portion of the data
 

00:42:33.680 --> 00:42:35.670 align:start position:0%
randomly select some portion of the data
set<00:42:34.240><c> and</c><00:42:34.319><c> that's</c><00:42:34.560><c> a</c><00:42:34.640><c> mini</c><00:42:34.880><c> batch</c><00:42:35.359><c> and</c><00:42:35.440><c> then</c>

00:42:35.670 --> 00:42:35.680 align:start position:0%
set and that's a mini batch and then
 

00:42:35.680 --> 00:42:37.510 align:start position:0%
set and that's a mini batch and then
only<00:42:35.920><c> forward</c><00:42:36.240><c> backward</c><00:42:36.720><c> and</c><00:42:36.880><c> update</c><00:42:37.200><c> on</c><00:42:37.359><c> that</c>

00:42:37.510 --> 00:42:37.520 align:start position:0%
only forward backward and update on that
 

00:42:37.520 --> 00:42:40.069 align:start position:0%
only forward backward and update on that
little<00:42:37.760><c> mini</c><00:42:38.000><c> batch</c><00:42:38.800><c> and</c><00:42:38.960><c> then</c>

00:42:40.069 --> 00:42:40.079 align:start position:0%
little mini batch and then
 

00:42:40.079 --> 00:42:41.990 align:start position:0%
little mini batch and then
we<00:42:40.240><c> iterate</c><00:42:40.560><c> on</c><00:42:40.640><c> those</c><00:42:40.800><c> many</c><00:42:41.040><c> batches</c>

00:42:41.990 --> 00:42:42.000 align:start position:0%
we iterate on those many batches
 

00:42:42.000 --> 00:42:43.589 align:start position:0%
we iterate on those many batches
so<00:42:42.319><c> in</c><00:42:42.400><c> pytorch</c><00:42:42.800><c> we</c><00:42:42.960><c> can</c><00:42:43.040><c> for</c><00:42:43.200><c> example</c><00:42:43.440><c> use</c>

00:42:43.589 --> 00:42:43.599 align:start position:0%
so in pytorch we can for example use
 

00:42:43.599 --> 00:42:45.109 align:start position:0%
so in pytorch we can for example use
storage.randint

00:42:45.109 --> 00:42:45.119 align:start position:0%
storage.randint
 

00:42:45.119 --> 00:42:47.589 align:start position:0%
storage.randint
we<00:42:45.280><c> can</c><00:42:45.440><c> generate</c><00:42:45.920><c> numbers</c><00:42:46.319><c> between</c><00:42:46.720><c> 0</c><00:42:47.119><c> and</c><00:42:47.359><c> 5</c>

00:42:47.589 --> 00:42:47.599 align:start position:0%
we can generate numbers between 0 and 5
 

00:42:47.599 --> 00:42:52.150 align:start position:0%
we can generate numbers between 0 and 5
and<00:42:47.760><c> make</c><00:42:47.920><c> 32</c><00:42:48.400><c> of</c><00:42:48.480><c> them</c>

00:42:52.150 --> 00:42:52.160 align:start position:0%
 
 

00:42:52.160 --> 00:42:54.309 align:start position:0%
 
i<00:42:52.319><c> believe</c><00:42:52.560><c> the</c><00:42:52.800><c> size</c><00:42:53.040><c> has</c><00:42:53.200><c> to</c><00:42:53.359><c> be</c><00:42:53.599><c> a</c>

00:42:54.309 --> 00:42:54.319 align:start position:0%
i believe the size has to be a
 

00:42:54.319 --> 00:42:56.390 align:start position:0%
i believe the size has to be a
tuple

00:42:56.390 --> 00:42:56.400 align:start position:0%
tuple
 

00:42:56.400 --> 00:42:57.750 align:start position:0%
tuple
in<00:42:56.720><c> my</c><00:42:56.880><c> torch</c>

00:42:57.750 --> 00:42:57.760 align:start position:0%
in my torch
 

00:42:57.760 --> 00:43:00.550 align:start position:0%
in my torch
so<00:42:57.839><c> we</c><00:42:58.000><c> can</c><00:42:58.079><c> have</c><00:42:58.319><c> a</c><00:42:58.560><c> tuple</c><00:42:59.280><c> 32</c><00:43:00.000><c> of</c><00:43:00.240><c> numbers</c>

00:43:00.550 --> 00:43:00.560 align:start position:0%
so we can have a tuple 32 of numbers
 

00:43:00.560 --> 00:43:02.550 align:start position:0%
so we can have a tuple 32 of numbers
between<00:43:00.800><c> zero</c><00:43:01.040><c> and</c><00:43:01.200><c> five</c><00:43:01.920><c> but</c><00:43:02.079><c> actually</c><00:43:02.400><c> we</c>

00:43:02.550 --> 00:43:02.560 align:start position:0%
between zero and five but actually we
 

00:43:02.560 --> 00:43:05.430 align:start position:0%
between zero and five but actually we
want<00:43:02.800><c> x</c><00:43:02.960><c> dot</c><00:43:03.200><c> shape</c><00:43:03.520><c> of</c><00:43:03.680><c> zero</c><00:43:04.079><c> here</c>

00:43:05.430 --> 00:43:05.440 align:start position:0%
want x dot shape of zero here
 

00:43:05.440 --> 00:43:08.150 align:start position:0%
want x dot shape of zero here
and<00:43:05.599><c> so</c><00:43:05.760><c> this</c><00:43:06.000><c> creates</c><00:43:06.640><c> uh</c><00:43:06.960><c> integers</c><00:43:07.839><c> that</c>

00:43:08.150 --> 00:43:08.160 align:start position:0%
and so this creates uh integers that
 

00:43:08.160 --> 00:43:10.150 align:start position:0%
and so this creates uh integers that
index<00:43:08.560><c> into</c><00:43:08.800><c> our</c><00:43:08.880><c> data</c><00:43:09.119><c> set</c><00:43:09.440><c> and</c><00:43:09.520><c> there's</c><00:43:09.680><c> 32</c>

00:43:10.150 --> 00:43:10.160 align:start position:0%
index into our data set and there's 32
 

00:43:10.160 --> 00:43:13.190 align:start position:0%
index into our data set and there's 32
of<00:43:10.319><c> them</c><00:43:10.960><c> so</c><00:43:11.200><c> if</c><00:43:11.280><c> our</c><00:43:11.440><c> mini</c><00:43:11.599><c> batch</c><00:43:11.839><c> size</c><00:43:12.160><c> is</c><00:43:12.319><c> 32</c>

00:43:13.190 --> 00:43:13.200 align:start position:0%
of them so if our mini batch size is 32
 

00:43:13.200 --> 00:43:14.950 align:start position:0%
of them so if our mini batch size is 32
then<00:43:13.440><c> we</c><00:43:13.440><c> can</c><00:43:13.599><c> come</c><00:43:13.839><c> here</c><00:43:14.160><c> and</c><00:43:14.240><c> we</c><00:43:14.400><c> can</c><00:43:14.640><c> first</c>

00:43:14.950 --> 00:43:14.960 align:start position:0%
then we can come here and we can first
 

00:43:14.960 --> 00:43:17.990 align:start position:0%
then we can come here and we can first
do<00:43:15.520><c> a</c><00:43:16.240><c> mini</c><00:43:16.480><c> batch</c>

00:43:17.990 --> 00:43:18.000 align:start position:0%
do a mini batch
 

00:43:18.000 --> 00:43:20.230 align:start position:0%
do a mini batch
construct

00:43:20.230 --> 00:43:20.240 align:start position:0%
construct
 

00:43:20.240 --> 00:43:21.990 align:start position:0%
construct
so<00:43:20.480><c> in</c><00:43:20.560><c> the</c><00:43:20.960><c> integers</c><00:43:21.359><c> that</c><00:43:21.440><c> we</c><00:43:21.520><c> want</c><00:43:21.680><c> to</c>

00:43:21.990 --> 00:43:22.000 align:start position:0%
so in the integers that we want to
 

00:43:22.000 --> 00:43:24.230 align:start position:0%
so in the integers that we want to
optimize<00:43:22.560><c> in</c><00:43:22.640><c> this</c>

00:43:24.230 --> 00:43:24.240 align:start position:0%
optimize in this
 

00:43:24.240 --> 00:43:25.670 align:start position:0%
optimize in this
single<00:43:24.560><c> iteration</c>

00:43:25.670 --> 00:43:25.680 align:start position:0%
single iteration
 

00:43:25.680 --> 00:43:27.670 align:start position:0%
single iteration
are<00:43:26.160><c> in</c><00:43:26.319><c> the</c><00:43:26.480><c> ix</c>

00:43:27.670 --> 00:43:27.680 align:start position:0%
are in the ix
 

00:43:27.680 --> 00:43:29.910 align:start position:0%
are in the ix
and<00:43:27.760><c> then</c><00:43:27.920><c> we</c><00:43:28.079><c> want</c><00:43:28.240><c> to</c><00:43:28.480><c> index</c><00:43:29.040><c> into</c>

00:43:29.910 --> 00:43:29.920 align:start position:0%
and then we want to index into
 

00:43:29.920 --> 00:43:30.790 align:start position:0%
and then we want to index into
x

00:43:30.790 --> 00:43:30.800 align:start position:0%
x
 

00:43:30.800 --> 00:43:34.150 align:start position:0%
x
with<00:43:31.440><c> ix</c><00:43:32.079><c> to</c><00:43:32.319><c> only</c><00:43:32.480><c> grab</c><00:43:32.880><c> those</c><00:43:33.280><c> rows</c>

00:43:34.150 --> 00:43:34.160 align:start position:0%
with ix to only grab those rows
 

00:43:34.160 --> 00:43:36.790 align:start position:0%
with ix to only grab those rows
so<00:43:34.319><c> we're</c><00:43:34.480><c> only</c><00:43:34.640><c> getting</c><00:43:34.960><c> 32</c><00:43:35.440><c> rows</c><00:43:35.760><c> of</c><00:43:36.000><c> x</c>

00:43:36.790 --> 00:43:36.800 align:start position:0%
so we're only getting 32 rows of x
 

00:43:36.800 --> 00:43:38.390 align:start position:0%
so we're only getting 32 rows of x
and<00:43:36.960><c> therefore</c><00:43:37.280><c> embeddings</c><00:43:37.680><c> will</c><00:43:37.839><c> again</c><00:43:38.240><c> be</c>

00:43:38.390 --> 00:43:38.400 align:start position:0%
and therefore embeddings will again be
 

00:43:38.400 --> 00:43:40.870 align:start position:0%
and therefore embeddings will again be
32<00:43:38.800><c> by</c><00:43:39.040><c> three</c><00:43:39.280><c> by</c><00:43:39.520><c> two</c><00:43:40.079><c> not</c><00:43:40.400><c> two</c><00:43:40.560><c> hundred</c>

00:43:40.870 --> 00:43:40.880 align:start position:0%
32 by three by two not two hundred
 

00:43:40.880 --> 00:43:43.270 align:start position:0%
32 by three by two not two hundred
thousand<00:43:41.359><c> by</c><00:43:41.599><c> three</c><00:43:41.920><c> by</c><00:43:42.079><c> two</c>

00:43:43.270 --> 00:43:43.280 align:start position:0%
thousand by three by two
 

00:43:43.280 --> 00:43:45.270 align:start position:0%
thousand by three by two
and<00:43:43.359><c> then</c><00:43:43.520><c> this</c><00:43:43.760><c> ix</c><00:43:44.240><c> has</c><00:43:44.319><c> to</c><00:43:44.400><c> be</c><00:43:44.560><c> used</c><00:43:44.720><c> not</c><00:43:44.880><c> just</c>

00:43:45.270 --> 00:43:45.280 align:start position:0%
and then this ix has to be used not just
 

00:43:45.280 --> 00:43:46.950 align:start position:0%
and then this ix has to be used not just
to<00:43:45.520><c> index</c><00:43:45.839><c> into</c><00:43:46.160><c> x</c>

00:43:46.950 --> 00:43:46.960 align:start position:0%
to index into x
 

00:43:46.960 --> 00:43:50.550 align:start position:0%
to index into x
but<00:43:47.200><c> also</c><00:43:47.440><c> to</c><00:43:47.680><c> index</c><00:43:48.079><c> into</c><00:43:48.720><c> y</c>

00:43:50.550 --> 00:43:50.560 align:start position:0%
but also to index into y
 

00:43:50.560 --> 00:43:52.630 align:start position:0%
but also to index into y
and<00:43:50.800><c> now</c><00:43:51.119><c> this</c><00:43:51.280><c> should</c><00:43:51.440><c> be</c><00:43:51.599><c> many</c><00:43:51.839><c> batches</c><00:43:52.480><c> and</c>

00:43:52.630 --> 00:43:52.640 align:start position:0%
and now this should be many batches and
 

00:43:52.640 --> 00:43:55.430 align:start position:0%
and now this should be many batches and
this<00:43:52.800><c> should</c><00:43:53.040><c> be</c><00:43:53.200><c> much</c><00:43:53.359><c> much</c><00:43:53.599><c> faster</c><00:43:54.160><c> so</c>

00:43:55.430 --> 00:43:55.440 align:start position:0%
this should be much much faster so
 

00:43:55.440 --> 00:43:57.910 align:start position:0%
this should be much much faster so
okay<00:43:55.680><c> so</c><00:43:55.839><c> it's</c><00:43:56.000><c> instant</c><00:43:56.400><c> almost</c>

00:43:57.910 --> 00:43:57.920 align:start position:0%
okay so it's instant almost
 

00:43:57.920 --> 00:44:00.069 align:start position:0%
okay so it's instant almost
so<00:43:58.160><c> this</c><00:43:58.400><c> way</c><00:43:58.720><c> we</c><00:43:58.880><c> can</c><00:43:59.040><c> run</c><00:43:59.280><c> many</c><00:43:59.520><c> many</c>

00:44:00.069 --> 00:44:00.079 align:start position:0%
so this way we can run many many
 

00:44:00.079 --> 00:44:01.510 align:start position:0%
so this way we can run many many
examples

00:44:01.510 --> 00:44:01.520 align:start position:0%
examples
 

00:44:01.520 --> 00:44:03.829 align:start position:0%
examples
nearly<00:44:01.920><c> instantly</c><00:44:02.720><c> and</c><00:44:02.880><c> decrease</c><00:44:03.280><c> the</c><00:44:03.440><c> loss</c>

00:44:03.829 --> 00:44:03.839 align:start position:0%
nearly instantly and decrease the loss
 

00:44:03.839 --> 00:44:05.589 align:start position:0%
nearly instantly and decrease the loss
much<00:44:04.079><c> much</c><00:44:04.319><c> faster</c>

00:44:05.589 --> 00:44:05.599 align:start position:0%
much much faster
 

00:44:05.599 --> 00:44:07.030 align:start position:0%
much much faster
now<00:44:05.839><c> because</c><00:44:06.079><c> we're</c><00:44:06.240><c> only</c><00:44:06.480><c> dealing</c><00:44:06.720><c> with</c><00:44:06.800><c> mini</c>

00:44:07.030 --> 00:44:07.040 align:start position:0%
now because we're only dealing with mini
 

00:44:07.040 --> 00:44:09.510 align:start position:0%
now because we're only dealing with mini
batches<00:44:07.760><c> the</c><00:44:08.000><c> quality</c><00:44:08.400><c> of</c><00:44:08.560><c> our</c><00:44:08.720><c> gradient</c><00:44:09.280><c> is</c>

00:44:09.510 --> 00:44:09.520 align:start position:0%
batches the quality of our gradient is
 

00:44:09.520 --> 00:44:11.510 align:start position:0%
batches the quality of our gradient is
lower<00:44:10.079><c> so</c><00:44:10.240><c> the</c><00:44:10.400><c> direction</c><00:44:10.960><c> is</c><00:44:11.119><c> not</c><00:44:11.280><c> as</c>

00:44:11.510 --> 00:44:11.520 align:start position:0%
lower so the direction is not as
 

00:44:11.520 --> 00:44:13.430 align:start position:0%
lower so the direction is not as
reliable<00:44:12.079><c> it's</c><00:44:12.240><c> not</c><00:44:12.400><c> the</c><00:44:12.640><c> actual</c><00:44:13.040><c> gradient</c>

00:44:13.430 --> 00:44:13.440 align:start position:0%
reliable it's not the actual gradient
 

00:44:13.440 --> 00:44:14.630 align:start position:0%
reliable it's not the actual gradient
direction

00:44:14.630 --> 00:44:14.640 align:start position:0%
direction
 

00:44:14.640 --> 00:44:16.470 align:start position:0%
direction
but<00:44:15.280><c> the</c><00:44:15.440><c> gradient</c><00:44:15.760><c> direction</c><00:44:16.160><c> is</c><00:44:16.240><c> good</c>

00:44:16.470 --> 00:44:16.480 align:start position:0%
but the gradient direction is good
 

00:44:16.480 --> 00:44:18.630 align:start position:0%
but the gradient direction is good
enough<00:44:17.040><c> even</c><00:44:17.200><c> when</c><00:44:17.359><c> it's</c><00:44:17.520><c> estimating</c><00:44:18.079><c> on</c><00:44:18.319><c> only</c>

00:44:18.630 --> 00:44:18.640 align:start position:0%
enough even when it's estimating on only
 

00:44:18.640 --> 00:44:22.230 align:start position:0%
enough even when it's estimating on only
32<00:44:19.200><c> examples</c><00:44:20.160><c> that</c><00:44:20.319><c> it</c><00:44:20.560><c> is</c><00:44:20.839><c> useful</c><00:44:21.839><c> and</c><00:44:22.000><c> so</c>

00:44:22.230 --> 00:44:22.240 align:start position:0%
32 examples that it is useful and so
 

00:44:22.240 --> 00:44:24.550 align:start position:0%
32 examples that it is useful and so
it's<00:44:22.480><c> much</c><00:44:22.720><c> better</c><00:44:23.440><c> to</c><00:44:23.680><c> have</c><00:44:23.839><c> an</c><00:44:24.000><c> approximate</c>

00:44:24.550 --> 00:44:24.560 align:start position:0%
it's much better to have an approximate
 

00:44:24.560 --> 00:44:26.710 align:start position:0%
it's much better to have an approximate
gradient<00:44:25.040><c> and</c><00:44:25.200><c> just</c><00:44:25.359><c> make</c><00:44:25.599><c> more</c><00:44:25.760><c> steps</c><00:44:26.480><c> than</c>

00:44:26.710 --> 00:44:26.720 align:start position:0%
gradient and just make more steps than
 

00:44:26.720 --> 00:44:29.030 align:start position:0%
gradient and just make more steps than
it<00:44:26.880><c> is</c><00:44:26.960><c> to</c><00:44:27.040><c> evaluate</c><00:44:27.520><c> the</c><00:44:27.680><c> exact</c><00:44:28.160><c> gradient</c><00:44:28.880><c> and</c>

00:44:29.030 --> 00:44:29.040 align:start position:0%
it is to evaluate the exact gradient and
 

00:44:29.040 --> 00:44:31.349 align:start position:0%
it is to evaluate the exact gradient and
take<00:44:29.440><c> fewer</c><00:44:29.760><c> steps</c><00:44:30.560><c> so</c><00:44:30.720><c> that's</c><00:44:30.960><c> why</c><00:44:31.200><c> in</c>

00:44:31.349 --> 00:44:31.359 align:start position:0%
take fewer steps so that's why in
 

00:44:31.359 --> 00:44:34.390 align:start position:0%
take fewer steps so that's why in
practice<00:44:32.160><c> uh</c><00:44:32.560><c> this</c><00:44:32.800><c> works</c><00:44:33.200><c> quite</c><00:44:33.520><c> well</c>

00:44:34.390 --> 00:44:34.400 align:start position:0%
practice uh this works quite well
 

00:44:34.400 --> 00:44:38.309 align:start position:0%
practice uh this works quite well
so<00:44:34.560><c> let's</c><00:44:34.720><c> now</c><00:44:34.880><c> continue</c><00:44:35.280><c> the</c><00:44:35.359><c> optimization</c>

00:44:38.309 --> 00:44:38.319 align:start position:0%
 
 

00:44:38.319 --> 00:44:41.670 align:start position:0%
 
let<00:44:38.480><c> me</c><00:44:38.640><c> take</c><00:44:38.880><c> out</c><00:44:39.119><c> this</c><00:44:39.599><c> lost</c><00:44:39.839><c> item</c><00:44:40.240><c> from</c><00:44:40.480><c> here</c>

00:44:41.670 --> 00:44:41.680 align:start position:0%
let me take out this lost item from here
 

00:44:41.680 --> 00:44:42.870 align:start position:0%
let me take out this lost item from here
and<00:44:42.079><c> uh</c>

00:44:42.870 --> 00:44:42.880 align:start position:0%
and uh
 

00:44:42.880 --> 00:44:45.829 align:start position:0%
and uh
place<00:44:43.200><c> it</c><00:44:43.680><c> over</c><00:44:43.839><c> here</c><00:44:44.000><c> at</c><00:44:44.079><c> the</c><00:44:44.240><c> end</c>

00:44:45.829 --> 00:44:45.839 align:start position:0%
place it over here at the end
 

00:44:45.839 --> 00:44:50.069 align:start position:0%
place it over here at the end
okay<00:44:46.079><c> so</c><00:44:46.240><c> we're</c><00:44:46.319><c> hovering</c><00:44:46.640><c> around</c><00:44:46.960><c> 2.5</c><00:44:47.920><c> or</c><00:44:48.079><c> so</c>

00:44:50.069 --> 00:44:50.079 align:start position:0%
okay so we're hovering around 2.5 or so
 

00:44:50.079 --> 00:44:51.510 align:start position:0%
okay so we're hovering around 2.5 or so
however<00:44:50.480><c> this</c><00:44:50.640><c> is</c><00:44:50.720><c> only</c><00:44:50.960><c> the</c><00:44:51.040><c> loss</c><00:44:51.280><c> for</c><00:44:51.359><c> that</c>

00:44:51.510 --> 00:44:51.520 align:start position:0%
however this is only the loss for that
 

00:44:51.520 --> 00:44:53.349 align:start position:0%
however this is only the loss for that
mini<00:44:51.760><c> batch</c><00:44:52.160><c> so</c><00:44:52.319><c> let's</c><00:44:52.560><c> actually</c><00:44:52.800><c> evaluate</c>

00:44:53.349 --> 00:44:53.359 align:start position:0%
mini batch so let's actually evaluate
 

00:44:53.359 --> 00:44:54.950 align:start position:0%
mini batch so let's actually evaluate
the<00:44:53.599><c> loss</c>

00:44:54.950 --> 00:44:54.960 align:start position:0%
the loss
 

00:44:54.960 --> 00:44:56.470 align:start position:0%
the loss
here

00:44:56.470 --> 00:44:56.480 align:start position:0%
here
 

00:44:56.480 --> 00:44:58.230 align:start position:0%
here
for<00:44:56.800><c> all</c><00:44:56.960><c> of</c><00:44:57.200><c> x</c>

00:44:58.230 --> 00:44:58.240 align:start position:0%
for all of x
 

00:44:58.240 --> 00:45:00.950 align:start position:0%
for all of x
and<00:44:58.480><c> for</c><00:44:58.800><c> all</c><00:44:58.960><c> of</c><00:44:59.280><c> y</c><00:44:59.680><c> just</c><00:44:59.839><c> so</c><00:45:00.000><c> we</c><00:45:00.160><c> have</c><00:45:00.319><c> a</c>

00:45:00.950 --> 00:45:00.960 align:start position:0%
and for all of y just so we have a
 

00:45:00.960 --> 00:45:03.030 align:start position:0%
and for all of y just so we have a
full<00:45:01.280><c> sense</c><00:45:01.599><c> of</c><00:45:01.760><c> exactly</c><00:45:02.079><c> how</c><00:45:02.319><c> all</c><00:45:02.480><c> the</c><00:45:02.720><c> model</c>

00:45:03.030 --> 00:45:03.040 align:start position:0%
full sense of exactly how all the model
 

00:45:03.040 --> 00:45:05.510 align:start position:0%
full sense of exactly how all the model
is<00:45:03.119><c> doing</c><00:45:03.359><c> right</c><00:45:03.520><c> now</c>

00:45:05.510 --> 00:45:05.520 align:start position:0%
is doing right now
 

00:45:05.520 --> 00:45:07.190 align:start position:0%
is doing right now
so<00:45:05.680><c> right</c><00:45:05.839><c> now</c><00:45:06.000><c> we're</c><00:45:06.160><c> at</c><00:45:06.240><c> about</c><00:45:06.400><c> 2.7</c><00:45:06.960><c> on</c><00:45:07.119><c> the</c>

00:45:07.190 --> 00:45:07.200 align:start position:0%
so right now we're at about 2.7 on the
 

00:45:07.200 --> 00:45:09.109 align:start position:0%
so right now we're at about 2.7 on the
entire<00:45:07.839><c> training</c><00:45:08.160><c> set</c>

00:45:09.109 --> 00:45:09.119 align:start position:0%
entire training set
 

00:45:09.119 --> 00:45:10.150 align:start position:0%
entire training set
so<00:45:09.280><c> let's</c>

00:45:10.150 --> 00:45:10.160 align:start position:0%
so let's
 

00:45:10.160 --> 00:45:12.550 align:start position:0%
so let's
run<00:45:10.319><c> the</c><00:45:10.480><c> optimization</c><00:45:10.960><c> for</c><00:45:11.119><c> a</c><00:45:11.200><c> while</c>

00:45:12.550 --> 00:45:12.560 align:start position:0%
run the optimization for a while
 

00:45:12.560 --> 00:45:15.270 align:start position:0%
run the optimization for a while
okay<00:45:12.880><c> right</c><00:45:13.040><c> 2.6</c>

00:45:15.270 --> 00:45:15.280 align:start position:0%
okay right 2.6
 

00:45:15.280 --> 00:45:17.510 align:start position:0%
okay right 2.6
2.57

00:45:17.510 --> 00:45:17.520 align:start position:0%
2.57
 

00:45:17.520 --> 00:45:21.910 align:start position:0%
2.57
2.53

00:45:21.910 --> 00:45:21.920 align:start position:0%
 
 

00:45:21.920 --> 00:45:22.790 align:start position:0%
 
okay

00:45:22.790 --> 00:45:22.800 align:start position:0%
okay
 

00:45:22.800 --> 00:45:25.030 align:start position:0%
okay
so<00:45:22.960><c> one</c><00:45:23.200><c> issue</c><00:45:23.440><c> of</c><00:45:23.520><c> course</c><00:45:23.839><c> is</c><00:45:24.480><c> we</c><00:45:24.640><c> don't</c><00:45:24.880><c> know</c>

00:45:25.030 --> 00:45:25.040 align:start position:0%
so one issue of course is we don't know
 

00:45:25.040 --> 00:45:28.630 align:start position:0%
so one issue of course is we don't know
if<00:45:25.200><c> we're</c><00:45:25.359><c> stepping</c><00:45:26.000><c> too</c><00:45:26.240><c> slow</c><00:45:26.640><c> or</c><00:45:26.800><c> too</c><00:45:27.119><c> fast</c>

00:45:28.630 --> 00:45:28.640 align:start position:0%
if we're stepping too slow or too fast
 

00:45:28.640 --> 00:45:30.790 align:start position:0%
if we're stepping too slow or too fast
so<00:45:28.880><c> this</c><00:45:29.119><c> point</c><00:45:29.280><c> one</c><00:45:29.520><c> i</c><00:45:29.599><c> just</c><00:45:29.839><c> guessed</c><00:45:30.160><c> it</c>

00:45:30.790 --> 00:45:30.800 align:start position:0%
so this point one i just guessed it
 

00:45:30.800 --> 00:45:33.190 align:start position:0%
so this point one i just guessed it
so<00:45:31.440><c> one</c><00:45:31.680><c> question</c><00:45:32.079><c> is</c><00:45:32.400><c> how</c><00:45:32.560><c> do</c><00:45:32.720><c> you</c><00:45:32.800><c> determine</c>

00:45:33.190 --> 00:45:33.200 align:start position:0%
so one question is how do you determine
 

00:45:33.200 --> 00:45:34.870 align:start position:0%
so one question is how do you determine
this<00:45:33.440><c> learning</c><00:45:33.760><c> rate</c>

00:45:34.870 --> 00:45:34.880 align:start position:0%
this learning rate
 

00:45:34.880 --> 00:45:37.349 align:start position:0%
this learning rate
and<00:45:35.440><c> how</c><00:45:35.599><c> do</c><00:45:35.680><c> we</c><00:45:35.920><c> gain</c><00:45:36.160><c> confidence</c><00:45:36.720><c> that</c><00:45:37.119><c> we're</c>

00:45:37.349 --> 00:45:37.359 align:start position:0%
and how do we gain confidence that we're
 

00:45:37.359 --> 00:45:39.430 align:start position:0%
and how do we gain confidence that we're
stepping<00:45:37.680><c> in</c><00:45:37.760><c> the</c><00:45:37.920><c> right</c>

00:45:39.430 --> 00:45:39.440 align:start position:0%
stepping in the right
 

00:45:39.440 --> 00:45:41.190 align:start position:0%
stepping in the right
sort<00:45:39.599><c> of</c><00:45:39.680><c> speed</c><00:45:40.319><c> so</c><00:45:40.480><c> i'll</c><00:45:40.560><c> show</c><00:45:40.720><c> you</c><00:45:40.880><c> one</c><00:45:41.040><c> way</c>

00:45:41.190 --> 00:45:41.200 align:start position:0%
sort of speed so i'll show you one way
 

00:45:41.200 --> 00:45:43.510 align:start position:0%
sort of speed so i'll show you one way
to<00:45:41.359><c> determine</c><00:45:41.760><c> a</c><00:45:41.920><c> reasonable</c><00:45:42.319><c> learning</c><00:45:42.640><c> rate</c>

00:45:43.510 --> 00:45:43.520 align:start position:0%
to determine a reasonable learning rate
 

00:45:43.520 --> 00:45:46.069 align:start position:0%
to determine a reasonable learning rate
it<00:45:43.680><c> works</c><00:45:43.920><c> as</c><00:45:44.000><c> follows</c><00:45:44.480><c> let's</c><00:45:44.720><c> reset</c><00:45:45.200><c> our</c>

00:45:46.069 --> 00:45:46.079 align:start position:0%
it works as follows let's reset our
 

00:45:46.079 --> 00:45:47.510 align:start position:0%
it works as follows let's reset our
parameters

00:45:47.510 --> 00:45:47.520 align:start position:0%
parameters
 

00:45:47.520 --> 00:45:49.750 align:start position:0%
parameters
to<00:45:47.680><c> the</c><00:45:47.920><c> initial</c>

00:45:49.750 --> 00:45:49.760 align:start position:0%
to the initial
 

00:45:49.760 --> 00:45:51.030 align:start position:0%
to the initial
settings

00:45:51.030 --> 00:45:51.040 align:start position:0%
settings
 

00:45:51.040 --> 00:45:52.710 align:start position:0%
settings
and<00:45:51.200><c> now</c><00:45:51.520><c> let's</c>

00:45:52.710 --> 00:45:52.720 align:start position:0%
and now let's
 

00:45:52.720 --> 00:45:54.950 align:start position:0%
and now let's
print<00:45:53.280><c> in</c><00:45:53.440><c> every</c><00:45:53.680><c> step</c>

00:45:54.950 --> 00:45:54.960 align:start position:0%
print in every step
 

00:45:54.960 --> 00:45:58.710 align:start position:0%
print in every step
but<00:45:55.119><c> let's</c><00:45:55.359><c> only</c><00:45:55.520><c> do</c><00:45:55.920><c> 10</c><00:45:56.640><c> steps</c><00:45:57.040><c> or</c><00:45:57.119><c> so</c>

00:45:58.710 --> 00:45:58.720 align:start position:0%
but let's only do 10 steps or so
 

00:45:58.720 --> 00:46:00.950 align:start position:0%
but let's only do 10 steps or so
or<00:45:58.880><c> maybe</c><00:45:59.359><c> maybe</c><00:45:59.599><c> 100</c><00:46:00.079><c> steps</c>

00:46:00.950 --> 00:46:00.960 align:start position:0%
or maybe maybe 100 steps
 

00:46:00.960 --> 00:46:02.710 align:start position:0%
or maybe maybe 100 steps
we<00:46:01.040><c> want</c><00:46:01.200><c> to</c><00:46:01.359><c> find</c><00:46:01.520><c> like</c><00:46:01.680><c> a</c><00:46:01.839><c> very</c><00:46:02.000><c> reasonable</c>

00:46:02.710 --> 00:46:02.720 align:start position:0%
we want to find like a very reasonable
 

00:46:02.720 --> 00:46:03.829 align:start position:0%
we want to find like a very reasonable
set

00:46:03.829 --> 00:46:03.839 align:start position:0%
set
 

00:46:03.839 --> 00:46:05.829 align:start position:0%
set
search<00:46:04.160><c> range</c><00:46:04.560><c> if</c><00:46:04.640><c> you</c><00:46:04.800><c> will</c><00:46:05.200><c> so</c><00:46:05.359><c> for</c><00:46:05.520><c> example</c>

00:46:05.829 --> 00:46:05.839 align:start position:0%
search range if you will so for example
 

00:46:05.839 --> 00:46:07.910 align:start position:0%
search range if you will so for example
if<00:46:05.920><c> this</c><00:46:06.160><c> is</c><00:46:06.319><c> like</c><00:46:06.560><c> very</c><00:46:06.800><c> low</c>

00:46:07.910 --> 00:46:07.920 align:start position:0%
if this is like very low
 

00:46:07.920 --> 00:46:09.829 align:start position:0%
if this is like very low
then

00:46:09.829 --> 00:46:09.839 align:start position:0%
then
 

00:46:09.839 --> 00:46:11.349 align:start position:0%
then
we<00:46:10.000><c> see</c><00:46:10.160><c> that</c><00:46:10.319><c> the</c><00:46:10.480><c> loss</c><00:46:10.800><c> is</c><00:46:10.960><c> barely</c>

00:46:11.349 --> 00:46:11.359 align:start position:0%
we see that the loss is barely
 

00:46:11.359 --> 00:46:13.270 align:start position:0%
we see that the loss is barely
decreasing<00:46:11.839><c> so</c><00:46:12.000><c> that's</c><00:46:12.319><c> not</c>

00:46:13.270 --> 00:46:13.280 align:start position:0%
decreasing so that's not
 

00:46:13.280 --> 00:46:15.589 align:start position:0%
decreasing so that's not
that's<00:46:13.599><c> like</c><00:46:13.920><c> too</c><00:46:14.079><c> low</c><00:46:14.319><c> basically</c><00:46:15.200><c> so</c><00:46:15.359><c> let's</c>

00:46:15.589 --> 00:46:15.599 align:start position:0%
that's like too low basically so let's
 

00:46:15.599 --> 00:46:16.550 align:start position:0%
that's like too low basically so let's
try

00:46:16.550 --> 00:46:16.560 align:start position:0%
try
 

00:46:16.560 --> 00:46:18.710 align:start position:0%
try
this<00:46:16.800><c> one</c>

00:46:18.710 --> 00:46:18.720 align:start position:0%
this one
 

00:46:18.720 --> 00:46:20.150 align:start position:0%
this one
okay<00:46:18.960><c> so</c><00:46:19.040><c> we're</c><00:46:19.200><c> decreasing</c><00:46:19.599><c> the</c><00:46:19.760><c> loss</c><00:46:20.000><c> but</c>

00:46:20.150 --> 00:46:20.160 align:start position:0%
okay so we're decreasing the loss but
 

00:46:20.160 --> 00:46:21.750 align:start position:0%
okay so we're decreasing the loss but
like<00:46:20.400><c> not</c><00:46:20.560><c> very</c><00:46:20.800><c> quickly</c><00:46:21.119><c> so</c><00:46:21.280><c> that's</c><00:46:21.440><c> a</c><00:46:21.520><c> pretty</c>

00:46:21.750 --> 00:46:21.760 align:start position:0%
like not very quickly so that's a pretty
 

00:46:21.760 --> 00:46:23.510 align:start position:0%
like not very quickly so that's a pretty
good<00:46:22.240><c> low</c><00:46:22.480><c> range</c>

00:46:23.510 --> 00:46:23.520 align:start position:0%
good low range
 

00:46:23.520 --> 00:46:25.829 align:start position:0%
good low range
now<00:46:23.680><c> let's</c><00:46:23.920><c> reset</c><00:46:24.240><c> it</c><00:46:24.400><c> again</c>

00:46:25.829 --> 00:46:25.839 align:start position:0%
now let's reset it again
 

00:46:25.839 --> 00:46:27.270 align:start position:0%
now let's reset it again
and<00:46:26.000><c> now</c><00:46:26.160><c> let's</c><00:46:26.319><c> try</c><00:46:26.480><c> to</c><00:46:26.560><c> find</c><00:46:26.800><c> the</c><00:46:26.880><c> place</c><00:46:27.200><c> at</c>

00:46:27.270 --> 00:46:27.280 align:start position:0%
and now let's try to find the place at
 

00:46:27.280 --> 00:46:29.430 align:start position:0%
and now let's try to find the place at
which<00:46:27.599><c> the</c><00:46:27.760><c> loss</c><00:46:28.000><c> kind</c><00:46:28.160><c> of</c><00:46:28.319><c> explodes</c>

00:46:29.430 --> 00:46:29.440 align:start position:0%
which the loss kind of explodes
 

00:46:29.440 --> 00:46:33.109 align:start position:0%
which the loss kind of explodes
uh<00:46:29.680><c> so</c><00:46:29.839><c> maybe</c><00:46:30.160><c> at</c><00:46:30.319><c> negative</c><00:46:30.640><c> one</c>

00:46:33.109 --> 00:46:33.119 align:start position:0%
 
 

00:46:33.119 --> 00:46:34.950 align:start position:0%
 
okay<00:46:33.359><c> we</c><00:46:33.520><c> see</c><00:46:33.680><c> that</c><00:46:33.839><c> we're</c><00:46:34.319><c> minimizing</c><00:46:34.800><c> the</c>

00:46:34.950 --> 00:46:34.960 align:start position:0%
okay we see that we're minimizing the
 

00:46:34.960 --> 00:46:36.870 align:start position:0%
okay we see that we're minimizing the
loss<00:46:35.200><c> but</c><00:46:35.520><c> you</c><00:46:35.680><c> see</c><00:46:35.839><c> how</c><00:46:36.160><c> uh</c><00:46:36.400><c> it's</c><00:46:36.560><c> kind</c><00:46:36.720><c> of</c>

00:46:36.870 --> 00:46:36.880 align:start position:0%
loss but you see how uh it's kind of
 

00:46:36.880 --> 00:46:39.349 align:start position:0%
loss but you see how uh it's kind of
unstable<00:46:37.280><c> it</c><00:46:37.440><c> goes</c><00:46:37.599><c> up</c><00:46:37.760><c> and</c><00:46:37.839><c> down</c><00:46:38.160><c> quite</c><00:46:38.319><c> a</c><00:46:38.400><c> bit</c>

00:46:39.349 --> 00:46:39.359 align:start position:0%
unstable it goes up and down quite a bit
 

00:46:39.359 --> 00:46:41.190 align:start position:0%
unstable it goes up and down quite a bit
um<00:46:39.839><c> so</c><00:46:40.000><c> negative</c><00:46:40.319><c> one</c><00:46:40.480><c> is</c><00:46:40.560><c> probably</c><00:46:40.880><c> like</c><00:46:41.040><c> a</c>

00:46:41.190 --> 00:46:41.200 align:start position:0%
um so negative one is probably like a
 

00:46:41.200 --> 00:46:44.309 align:start position:0%
um so negative one is probably like a
fast<00:46:42.240><c> learning</c><00:46:42.560><c> rate</c><00:46:43.200><c> let's</c><00:46:43.520><c> try</c><00:46:44.000><c> negative</c>

00:46:44.309 --> 00:46:44.319 align:start position:0%
fast learning rate let's try negative
 

00:46:44.319 --> 00:46:45.750 align:start position:0%
fast learning rate let's try negative
10.

00:46:45.750 --> 00:46:45.760 align:start position:0%
10.
 

00:46:45.760 --> 00:46:46.950 align:start position:0%
10.
okay<00:46:46.000><c> so</c><00:46:46.240><c> this</c>

00:46:46.950 --> 00:46:46.960 align:start position:0%
okay so this
 

00:46:46.960 --> 00:46:48.870 align:start position:0%
okay so this
isn't<00:46:47.200><c> optimizing</c><00:46:48.079><c> this</c><00:46:48.319><c> is</c><00:46:48.400><c> not</c><00:46:48.560><c> working</c>

00:46:48.870 --> 00:46:48.880 align:start position:0%
isn't optimizing this is not working
 

00:46:48.880 --> 00:46:50.950 align:start position:0%
isn't optimizing this is not working
very<00:46:49.040><c> well</c><00:46:49.359><c> so</c><00:46:49.520><c> negative</c><00:46:49.760><c> 10</c><00:46:49.920><c> is</c><00:46:50.079><c> way</c><00:46:50.240><c> too</c><00:46:50.400><c> big</c>

00:46:50.950 --> 00:46:50.960 align:start position:0%
very well so negative 10 is way too big
 

00:46:50.960 --> 00:46:53.109 align:start position:0%
very well so negative 10 is way too big
negative<00:46:51.200><c> one</c><00:46:51.440><c> was</c><00:46:51.599><c> already</c><00:46:52.000><c> kind</c><00:46:52.160><c> of</c><00:46:52.319><c> big</c>

00:46:53.109 --> 00:46:53.119 align:start position:0%
negative one was already kind of big
 

00:46:53.119 --> 00:46:54.790 align:start position:0%
negative one was already kind of big
um

00:46:54.790 --> 00:46:54.800 align:start position:0%
um
 

00:46:54.800 --> 00:46:56.390 align:start position:0%
um
so<00:46:55.359><c> therefore</c>

00:46:56.390 --> 00:46:56.400 align:start position:0%
so therefore
 

00:46:56.400 --> 00:46:57.589 align:start position:0%
so therefore
negative<00:46:56.720><c> one</c><00:46:56.880><c> was</c><00:46:57.119><c> like</c><00:46:57.280><c> somewhat</c>

00:46:57.589 --> 00:46:57.599 align:start position:0%
negative one was like somewhat
 

00:46:57.599 --> 00:47:00.390 align:start position:0%
negative one was like somewhat
reasonable<00:46:58.079><c> if</c><00:46:58.319><c> i</c><00:46:58.400><c> reset</c>

00:47:00.390 --> 00:47:00.400 align:start position:0%
reasonable if i reset
 

00:47:00.400 --> 00:47:01.589 align:start position:0%
reasonable if i reset
so<00:47:00.560><c> i'm</c><00:47:00.720><c> thinking</c><00:47:00.880><c> that</c><00:47:01.040><c> the</c><00:47:01.119><c> right</c><00:47:01.359><c> learning</c>

00:47:01.589 --> 00:47:01.599 align:start position:0%
so i'm thinking that the right learning
 

00:47:01.599 --> 00:47:03.349 align:start position:0%
so i'm thinking that the right learning
rate<00:47:01.839><c> is</c><00:47:01.920><c> somewhere</c><00:47:02.319><c> between</c>

00:47:03.349 --> 00:47:03.359 align:start position:0%
rate is somewhere between
 

00:47:03.359 --> 00:47:05.910 align:start position:0%
rate is somewhere between
uh<00:47:03.680><c> negative</c><00:47:04.000><c> zero</c><00:47:04.160><c> point</c><00:47:04.319><c> zero</c><00:47:04.560><c> zero</c><00:47:04.800><c> one</c><00:47:05.359><c> and</c>

00:47:05.910 --> 00:47:05.920 align:start position:0%
uh negative zero point zero zero one and
 

00:47:05.920 --> 00:47:06.950 align:start position:0%
uh negative zero point zero zero one and
um

00:47:06.950 --> 00:47:06.960 align:start position:0%
um
 

00:47:06.960 --> 00:47:08.230 align:start position:0%
um
negative<00:47:07.280><c> one</c>

00:47:08.230 --> 00:47:08.240 align:start position:0%
negative one
 

00:47:08.240 --> 00:47:09.990 align:start position:0%
negative one
so<00:47:08.400><c> the</c><00:47:08.480><c> way</c><00:47:08.640><c> we</c><00:47:08.800><c> can</c><00:47:08.960><c> do</c><00:47:09.119><c> this</c><00:47:09.359><c> here</c><00:47:09.599><c> is</c><00:47:09.680><c> we</c><00:47:09.839><c> can</c>

00:47:09.990 --> 00:47:10.000 align:start position:0%
so the way we can do this here is we can
 

00:47:10.000 --> 00:47:13.109 align:start position:0%
so the way we can do this here is we can
use<00:47:10.319><c> uh</c><00:47:10.640><c> torch</c><00:47:10.880><c> shot</c><00:47:11.119><c> lens</c><00:47:11.440><c> space</c>

00:47:13.109 --> 00:47:13.119 align:start position:0%
use uh torch shot lens space
 

00:47:13.119 --> 00:47:14.309 align:start position:0%
use uh torch shot lens space
and<00:47:13.280><c> we</c><00:47:13.359><c> want</c><00:47:13.520><c> to</c><00:47:13.599><c> basically</c><00:47:13.920><c> do</c><00:47:14.079><c> something</c>

00:47:14.309 --> 00:47:14.319 align:start position:0%
and we want to basically do something
 

00:47:14.319 --> 00:47:17.750 align:start position:0%
and we want to basically do something
like<00:47:14.480><c> this</c><00:47:14.720><c> between</c><00:47:15.520><c> zero</c><00:47:15.839><c> and</c><00:47:16.000><c> one</c><00:47:16.640><c> but</c>

00:47:17.750 --> 00:47:17.760 align:start position:0%
like this between zero and one but
 

00:47:17.760 --> 00:47:19.109 align:start position:0%
like this between zero and one but
um

00:47:19.109 --> 00:47:19.119 align:start position:0%
um
 

00:47:19.119 --> 00:47:20.950 align:start position:0%
um
those<00:47:19.520><c> number</c><00:47:19.760><c> of</c><00:47:19.920><c> steps</c><00:47:20.400><c> is</c><00:47:20.560><c> one</c><00:47:20.800><c> more</c>

00:47:20.950 --> 00:47:20.960 align:start position:0%
those number of steps is one more
 

00:47:20.960 --> 00:47:22.470 align:start position:0%
those number of steps is one more
parameter<00:47:21.359><c> that's</c><00:47:21.599><c> required</c><00:47:22.000><c> let's</c><00:47:22.240><c> do</c><00:47:22.400><c> a</c>

00:47:22.470 --> 00:47:22.480 align:start position:0%
parameter that's required let's do a
 

00:47:22.480 --> 00:47:26.309 align:start position:0%
parameter that's required let's do a
thousand<00:47:22.839><c> steps</c><00:47:23.839><c> this</c><00:47:24.079><c> creates</c><00:47:24.640><c> 1000</c>

00:47:26.309 --> 00:47:26.319 align:start position:0%
thousand steps this creates 1000
 

00:47:26.319 --> 00:47:29.750 align:start position:0%
thousand steps this creates 1000
numbers<00:47:26.800><c> between</c><00:47:27.160><c> 0.01</c><00:47:28.240><c> and</c><00:47:28.560><c> 1</c>

00:47:29.750 --> 00:47:29.760 align:start position:0%
numbers between 0.01 and 1
 

00:47:29.760 --> 00:47:31.430 align:start position:0%
numbers between 0.01 and 1
but<00:47:30.160><c> it</c><00:47:30.240><c> doesn't</c><00:47:30.480><c> really</c><00:47:30.640><c> make</c><00:47:30.800><c> sense</c><00:47:31.040><c> to</c><00:47:31.119><c> step</c>

00:47:31.430 --> 00:47:31.440 align:start position:0%
but it doesn't really make sense to step
 

00:47:31.440 --> 00:47:33.589 align:start position:0%
but it doesn't really make sense to step
between<00:47:31.760><c> these</c><00:47:32.000><c> linearly</c><00:47:32.720><c> so</c><00:47:32.960><c> instead</c><00:47:33.280><c> let</c><00:47:33.440><c> me</c>

00:47:33.589 --> 00:47:33.599 align:start position:0%
between these linearly so instead let me
 

00:47:33.599 --> 00:47:36.470 align:start position:0%
between these linearly so instead let me
create<00:47:34.079><c> learning</c><00:47:34.480><c> rate</c><00:47:35.040><c> exponent</c>

00:47:36.470 --> 00:47:36.480 align:start position:0%
create learning rate exponent
 

00:47:36.480 --> 00:47:39.190 align:start position:0%
create learning rate exponent
and<00:47:36.720><c> instead</c><00:47:37.040><c> of</c><00:47:37.200><c> 0.001</c><00:47:38.480><c> this</c><00:47:38.640><c> will</c><00:47:38.800><c> be</c><00:47:39.040><c> a</c>

00:47:39.190 --> 00:47:39.200 align:start position:0%
and instead of 0.001 this will be a
 

00:47:39.200 --> 00:47:41.670 align:start position:0%
and instead of 0.001 this will be a
negative<00:47:39.520><c> 3</c><00:47:40.000><c> and</c><00:47:40.079><c> this</c><00:47:40.240><c> will</c><00:47:40.400><c> be</c><00:47:40.560><c> a</c><00:47:40.640><c> zero</c>

00:47:41.670 --> 00:47:41.680 align:start position:0%
negative 3 and this will be a zero
 

00:47:41.680 --> 00:47:43.670 align:start position:0%
negative 3 and this will be a zero
and<00:47:41.760><c> then</c><00:47:41.920><c> the</c><00:47:42.079><c> actual</c><00:47:42.720><c> lrs</c><00:47:43.280><c> that</c><00:47:43.359><c> we</c><00:47:43.520><c> want</c><00:47:43.599><c> to</c>

00:47:43.670 --> 00:47:43.680 align:start position:0%
and then the actual lrs that we want to
 

00:47:43.680 --> 00:47:45.430 align:start position:0%
and then the actual lrs that we want to
search<00:47:44.000><c> over</c><00:47:44.319><c> are</c><00:47:44.480><c> going</c><00:47:44.640><c> to</c><00:47:44.800><c> be</c><00:47:44.960><c> 10</c><00:47:45.119><c> to</c><00:47:45.280><c> the</c>

00:47:45.430 --> 00:47:45.440 align:start position:0%
search over are going to be 10 to the
 

00:47:45.440 --> 00:47:48.309 align:start position:0%
search over are going to be 10 to the
power<00:47:45.760><c> of</c><00:47:46.000><c> lre</c>

00:47:48.309 --> 00:47:48.319 align:start position:0%
power of lre
 

00:47:48.319 --> 00:47:49.349 align:start position:0%
power of lre
so<00:47:48.480><c> now</c><00:47:48.640><c> what</c><00:47:48.720><c> we're</c><00:47:48.880><c> doing</c><00:47:49.119><c> is</c><00:47:49.200><c> we're</c>

00:47:49.349 --> 00:47:49.359 align:start position:0%
so now what we're doing is we're
 

00:47:49.359 --> 00:47:51.349 align:start position:0%
so now what we're doing is we're
stepping<00:47:49.760><c> linearly</c><00:47:50.240><c> between</c><00:47:50.480><c> the</c><00:47:50.640><c> exponents</c>

00:47:51.349 --> 00:47:51.359 align:start position:0%
stepping linearly between the exponents
 

00:47:51.359 --> 00:47:54.150 align:start position:0%
stepping linearly between the exponents
of<00:47:51.520><c> these</c><00:47:51.680><c> learning</c><00:47:52.000><c> rates</c><00:47:52.560><c> this</c><00:47:52.720><c> is</c><00:47:53.000><c> 0.001</c>

00:47:54.150 --> 00:47:54.160 align:start position:0%
of these learning rates this is 0.001
 

00:47:54.160 --> 00:47:57.109 align:start position:0%
of these learning rates this is 0.001
and<00:47:54.240><c> this</c><00:47:54.560><c> is</c><00:47:55.040><c> 1</c><00:47:55.599><c> because</c><00:47:56.400><c> 10</c><00:47:56.560><c> to</c><00:47:56.720><c> the</c><00:47:56.800><c> power</c><00:47:57.040><c> of</c>

00:47:57.109 --> 00:47:57.119 align:start position:0%
and this is 1 because 10 to the power of
 

00:47:57.119 --> 00:47:58.550 align:start position:0%
and this is 1 because 10 to the power of
0<00:47:57.440><c> is</c><00:47:57.520><c> 1.</c>

00:47:58.550 --> 00:47:58.560 align:start position:0%
0 is 1.
 

00:47:58.560 --> 00:48:00.069 align:start position:0%
0 is 1.
and<00:47:58.720><c> therefore</c><00:47:59.119><c> we</c><00:47:59.280><c> are</c><00:47:59.520><c> spaced</c>

00:48:00.069 --> 00:48:00.079 align:start position:0%
and therefore we are spaced
 

00:48:00.079 --> 00:48:02.069 align:start position:0%
and therefore we are spaced
exponentially<00:48:00.800><c> in</c><00:48:00.880><c> this</c><00:48:01.119><c> interval</c>

00:48:02.069 --> 00:48:02.079 align:start position:0%
exponentially in this interval
 

00:48:02.079 --> 00:48:03.430 align:start position:0%
exponentially in this interval
so<00:48:02.240><c> these</c><00:48:02.480><c> are</c><00:48:02.560><c> the</c><00:48:02.640><c> candidate</c><00:48:03.119><c> learning</c>

00:48:03.430 --> 00:48:03.440 align:start position:0%
so these are the candidate learning
 

00:48:03.440 --> 00:48:04.710 align:start position:0%
so these are the candidate learning
rates

00:48:04.710 --> 00:48:04.720 align:start position:0%
rates
 

00:48:04.720 --> 00:48:06.470 align:start position:0%
rates
that<00:48:04.880><c> we</c><00:48:05.040><c> want</c><00:48:05.200><c> to</c><00:48:05.280><c> sort</c><00:48:05.440><c> of</c><00:48:05.520><c> like</c><00:48:05.760><c> search</c><00:48:06.079><c> over</c>

00:48:06.470 --> 00:48:06.480 align:start position:0%
that we want to sort of like search over
 

00:48:06.480 --> 00:48:07.750 align:start position:0%
that we want to sort of like search over
roughly

00:48:07.750 --> 00:48:07.760 align:start position:0%
roughly
 

00:48:07.760 --> 00:48:10.870 align:start position:0%
roughly
so<00:48:07.920><c> now</c><00:48:08.079><c> what</c><00:48:08.160><c> we're</c><00:48:08.319><c> going</c><00:48:08.560><c> to</c><00:48:08.640><c> do</c><00:48:09.119><c> is</c>

00:48:10.870 --> 00:48:10.880 align:start position:0%
so now what we're going to do is
 

00:48:10.880 --> 00:48:12.470 align:start position:0%
so now what we're going to do is
here<00:48:11.520><c> we</c><00:48:11.680><c> are</c><00:48:11.839><c> going</c><00:48:12.000><c> to</c><00:48:12.160><c> run</c><00:48:12.319><c> the</c>

00:48:12.470 --> 00:48:12.480 align:start position:0%
here we are going to run the
 

00:48:12.480 --> 00:48:14.630 align:start position:0%
here we are going to run the
optimization<00:48:13.040><c> for</c><00:48:13.200><c> 1000</c><00:48:13.680><c> steps</c>

00:48:14.630 --> 00:48:14.640 align:start position:0%
optimization for 1000 steps
 

00:48:14.640 --> 00:48:16.710 align:start position:0%
optimization for 1000 steps
and<00:48:14.800><c> instead</c><00:48:15.040><c> of</c><00:48:15.200><c> using</c><00:48:15.440><c> a</c><00:48:15.520><c> fixed</c><00:48:15.760><c> number</c>

00:48:16.710 --> 00:48:16.720 align:start position:0%
and instead of using a fixed number
 

00:48:16.720 --> 00:48:19.510 align:start position:0%
and instead of using a fixed number
we<00:48:16.880><c> are</c><00:48:17.040><c> going</c><00:48:17.200><c> to</c><00:48:17.359><c> use</c><00:48:17.920><c> learning</c><00:48:18.240><c> rate</c>

00:48:19.510 --> 00:48:19.520 align:start position:0%
we are going to use learning rate
 

00:48:19.520 --> 00:48:22.470 align:start position:0%
we are going to use learning rate
indexing<00:48:20.160><c> into</c><00:48:20.480><c> here</c><00:48:21.040><c> lrs</c><00:48:21.520><c> of</c><00:48:21.680><c> i</c>

00:48:22.470 --> 00:48:22.480 align:start position:0%
indexing into here lrs of i
 

00:48:22.480 --> 00:48:25.670 align:start position:0%
indexing into here lrs of i
and<00:48:22.640><c> make</c><00:48:22.800><c> this</c><00:48:23.200><c> i</c>

00:48:25.670 --> 00:48:25.680 align:start position:0%
 
 

00:48:25.680 --> 00:48:28.230 align:start position:0%
 
so<00:48:25.839><c> basically</c><00:48:26.240><c> let</c><00:48:26.480><c> me</c><00:48:26.640><c> reset</c><00:48:27.040><c> this</c><00:48:27.280><c> to</c><00:48:27.440><c> be</c>

00:48:28.230 --> 00:48:28.240 align:start position:0%
so basically let me reset this to be
 

00:48:28.240 --> 00:48:30.470 align:start position:0%
so basically let me reset this to be
again<00:48:28.880><c> starting</c><00:48:29.200><c> from</c><00:48:29.359><c> random</c>

00:48:30.470 --> 00:48:30.480 align:start position:0%
again starting from random
 

00:48:30.480 --> 00:48:32.069 align:start position:0%
again starting from random
creating<00:48:30.800><c> these</c><00:48:30.960><c> learning</c><00:48:31.280><c> rates</c><00:48:31.520><c> between</c>

00:48:32.069 --> 00:48:32.079 align:start position:0%
creating these learning rates between
 

00:48:32.079 --> 00:48:33.270 align:start position:0%
creating these learning rates between
negative

00:48:33.270 --> 00:48:33.280 align:start position:0%
negative
 

00:48:33.280 --> 00:48:36.870 align:start position:0%
negative
zero<00:48:33.520><c> points</c><00:48:33.920><c> between</c><00:48:34.160><c> 0.001</c><00:48:35.280><c> and</c><00:48:35.920><c> um</c>

00:48:36.870 --> 00:48:36.880 align:start position:0%
zero points between 0.001 and um
 

00:48:36.880 --> 00:48:39.510 align:start position:0%
zero points between 0.001 and um
one<00:48:37.200><c> but</c><00:48:37.440><c> exponentially</c><00:48:38.079><c> stopped</c>

00:48:39.510 --> 00:48:39.520 align:start position:0%
one but exponentially stopped
 

00:48:39.520 --> 00:48:41.430 align:start position:0%
one but exponentially stopped
and<00:48:39.760><c> here</c><00:48:40.000><c> what</c><00:48:40.240><c> we're</c><00:48:40.400><c> doing</c><00:48:40.800><c> is</c><00:48:41.200><c> we're</c>

00:48:41.430 --> 00:48:41.440 align:start position:0%
and here what we're doing is we're
 

00:48:41.440 --> 00:48:43.270 align:start position:0%
and here what we're doing is we're
iterating<00:48:41.839><c> a</c><00:48:41.920><c> thousand</c><00:48:42.319><c> times</c>

00:48:43.270 --> 00:48:43.280 align:start position:0%
iterating a thousand times
 

00:48:43.280 --> 00:48:45.589 align:start position:0%
iterating a thousand times
we're<00:48:43.440><c> going</c><00:48:43.680><c> to</c><00:48:43.760><c> use</c><00:48:44.000><c> the</c><00:48:44.160><c> learning</c><00:48:44.559><c> rate</c>

00:48:45.589 --> 00:48:45.599 align:start position:0%
we're going to use the learning rate
 

00:48:45.599 --> 00:48:48.069 align:start position:0%
we're going to use the learning rate
um<00:48:46.319><c> that's</c><00:48:46.640><c> in</c><00:48:46.800><c> the</c><00:48:46.880><c> beginning</c><00:48:47.280><c> very</c><00:48:47.440><c> very</c><00:48:47.680><c> low</c>

00:48:48.069 --> 00:48:48.079 align:start position:0%
um that's in the beginning very very low
 

00:48:48.079 --> 00:48:50.470 align:start position:0%
um that's in the beginning very very low
in<00:48:48.240><c> the</c><00:48:48.319><c> beginning</c><00:48:48.720><c> is</c><00:48:48.800><c> going</c><00:48:48.880><c> to</c><00:48:49.040><c> be</c><00:48:49.200><c> 0.001</c>

00:48:50.470 --> 00:48:50.480 align:start position:0%
in the beginning is going to be 0.001
 

00:48:50.480 --> 00:48:52.230 align:start position:0%
in the beginning is going to be 0.001
but<00:48:50.640><c> by</c><00:48:50.800><c> the</c><00:48:50.880><c> end</c><00:48:51.119><c> it's</c><00:48:51.200><c> going</c><00:48:51.359><c> to</c><00:48:51.520><c> be</c>

00:48:52.230 --> 00:48:52.240 align:start position:0%
but by the end it's going to be
 

00:48:52.240 --> 00:48:53.430 align:start position:0%
but by the end it's going to be
1.

00:48:53.430 --> 00:48:53.440 align:start position:0%
1.
 

00:48:53.440 --> 00:48:55.030 align:start position:0%
1.
and<00:48:53.599><c> then</c><00:48:53.839><c> we're</c><00:48:54.000><c> going</c><00:48:54.160><c> to</c><00:48:54.240><c> step</c><00:48:54.640><c> with</c><00:48:54.800><c> that</c>

00:48:55.030 --> 00:48:55.040 align:start position:0%
and then we're going to step with that
 

00:48:55.040 --> 00:48:57.109 align:start position:0%
and then we're going to step with that
learning<00:48:55.359><c> rate</c>

00:48:57.109 --> 00:48:57.119 align:start position:0%
learning rate
 

00:48:57.119 --> 00:48:58.710 align:start position:0%
learning rate
and<00:48:57.280><c> now</c><00:48:57.440><c> what</c><00:48:57.599><c> we</c><00:48:57.680><c> want</c><00:48:57.839><c> to</c><00:48:57.920><c> do</c><00:48:58.079><c> is</c><00:48:58.240><c> we</c><00:48:58.400><c> want</c><00:48:58.559><c> to</c>

00:48:58.710 --> 00:48:58.720 align:start position:0%
and now what we want to do is we want to
 

00:48:58.720 --> 00:49:04.230 align:start position:0%
and now what we want to do is we want to
keep<00:48:58.960><c> track</c><00:48:59.280><c> of</c><00:48:59.760><c> the</c><00:49:00.400><c> uh</c>

00:49:04.230 --> 00:49:04.240 align:start position:0%
 
 

00:49:04.240 --> 00:49:05.910 align:start position:0%
 
learning<00:49:04.480><c> rates</c><00:49:04.720><c> that</c><00:49:04.800><c> we</c><00:49:04.960><c> used</c><00:49:05.520><c> and</c><00:49:05.599><c> we</c><00:49:05.760><c> want</c>

00:49:05.910 --> 00:49:05.920 align:start position:0%
learning rates that we used and we want
 

00:49:05.920 --> 00:49:07.910 align:start position:0%
learning rates that we used and we want
to<00:49:06.079><c> look</c><00:49:06.240><c> at</c><00:49:06.559><c> the</c><00:49:06.800><c> losses</c>

00:49:07.910 --> 00:49:07.920 align:start position:0%
to look at the losses
 

00:49:07.920 --> 00:49:09.829 align:start position:0%
to look at the losses
that<00:49:08.160><c> resulted</c>

00:49:09.829 --> 00:49:09.839 align:start position:0%
that resulted
 

00:49:09.839 --> 00:49:12.309 align:start position:0%
that resulted
and<00:49:09.920><c> so</c><00:49:10.160><c> here</c><00:49:10.800><c> let</c><00:49:10.960><c> me</c>

00:49:12.309 --> 00:49:12.319 align:start position:0%
and so here let me
 

00:49:12.319 --> 00:49:14.150 align:start position:0%
and so here let me
track<00:49:12.640><c> stats</c>

00:49:14.150 --> 00:49:14.160 align:start position:0%
track stats
 

00:49:14.160 --> 00:49:16.950 align:start position:0%
track stats
so<00:49:14.400><c> lri.append</c><00:49:15.760><c> lr</c>

00:49:16.950 --> 00:49:16.960 align:start position:0%
so lri.append lr
 

00:49:16.960 --> 00:49:20.230 align:start position:0%
so lri.append lr
and<00:49:17.440><c> um</c><00:49:18.240><c> lost</c><00:49:18.480><c> side</c><00:49:18.720><c> that</c><00:49:18.960><c> append</c>

00:49:20.230 --> 00:49:20.240 align:start position:0%
and um lost side that append
 

00:49:20.240 --> 00:49:22.390 align:start position:0%
and um lost side that append
loss<00:49:20.720><c> that</c><00:49:20.960><c> item</c>

00:49:22.390 --> 00:49:22.400 align:start position:0%
loss that item
 

00:49:22.400 --> 00:49:23.670 align:start position:0%
loss that item
okay

00:49:23.670 --> 00:49:23.680 align:start position:0%
okay
 

00:49:23.680 --> 00:49:27.190 align:start position:0%
okay
so<00:49:23.839><c> again</c><00:49:24.400><c> reset</c><00:49:24.800><c> everything</c>

00:49:27.190 --> 00:49:27.200 align:start position:0%
so again reset everything
 

00:49:27.200 --> 00:49:30.390 align:start position:0%
so again reset everything
and<00:49:27.359><c> then</c><00:49:27.680><c> run</c>

00:49:30.390 --> 00:49:30.400 align:start position:0%
and then run
 

00:49:30.400 --> 00:49:31.750 align:start position:0%
and then run
and<00:49:30.559><c> so</c><00:49:30.720><c> basically</c><00:49:31.040><c> we</c><00:49:31.119><c> started</c><00:49:31.359><c> with</c><00:49:31.440><c> a</c><00:49:31.520><c> very</c>

00:49:31.750 --> 00:49:31.760 align:start position:0%
and so basically we started with a very
 

00:49:31.760 --> 00:49:33.030 align:start position:0%
and so basically we started with a very
low<00:49:31.920><c> learning</c><00:49:32.160><c> rate</c><00:49:32.400><c> and</c><00:49:32.480><c> we</c><00:49:32.640><c> went</c><00:49:32.800><c> all</c><00:49:32.960><c> the</c>

00:49:33.030 --> 00:49:33.040 align:start position:0%
low learning rate and we went all the
 

00:49:33.040 --> 00:49:35.109 align:start position:0%
low learning rate and we went all the
way<00:49:33.200><c> up</c><00:49:33.359><c> to</c><00:49:33.839><c> a</c><00:49:34.079><c> learning</c><00:49:34.400><c> rate</c><00:49:34.640><c> of</c><00:49:34.800><c> negative</c>

00:49:35.109 --> 00:49:35.119 align:start position:0%
way up to a learning rate of negative
 

00:49:35.119 --> 00:49:35.910 align:start position:0%
way up to a learning rate of negative
one

00:49:35.910 --> 00:49:35.920 align:start position:0%
one
 

00:49:35.920 --> 00:49:37.670 align:start position:0%
one
and<00:49:36.079><c> now</c><00:49:36.240><c> what</c><00:49:36.319><c> we</c><00:49:36.480><c> can</c><00:49:36.559><c> do</c><00:49:36.800><c> is</c><00:49:36.880><c> we</c><00:49:37.040><c> can</c><00:49:37.200><c> plt</c>

00:49:37.670 --> 00:49:37.680 align:start position:0%
and now what we can do is we can plt
 

00:49:37.680 --> 00:49:38.950 align:start position:0%
and now what we can do is we can plt
that<00:49:37.920><c> plot</c>

00:49:38.950 --> 00:49:38.960 align:start position:0%
that plot
 

00:49:38.960 --> 00:49:41.270 align:start position:0%
that plot
and<00:49:39.200><c> we</c><00:49:39.359><c> can</c><00:49:39.599><c> plot</c><00:49:40.079><c> the</c><00:49:40.240><c> two</c><00:49:40.480><c> so</c><00:49:40.640><c> we</c><00:49:40.800><c> can</c><00:49:40.880><c> plot</c>

00:49:41.270 --> 00:49:41.280 align:start position:0%
and we can plot the two so we can plot
 

00:49:41.280 --> 00:49:43.510 align:start position:0%
and we can plot the two so we can plot
the<00:49:41.440><c> learning</c><00:49:41.760><c> rates</c><00:49:42.000><c> on</c><00:49:42.079><c> the</c><00:49:42.240><c> x-axis</c><00:49:43.200><c> and</c><00:49:43.280><c> the</c>

00:49:43.510 --> 00:49:43.520 align:start position:0%
the learning rates on the x-axis and the
 

00:49:43.520 --> 00:49:46.150 align:start position:0%
the learning rates on the x-axis and the
losses<00:49:43.920><c> we</c><00:49:44.079><c> saw</c><00:49:44.400><c> on</c><00:49:44.480><c> the</c><00:49:44.559><c> y-axis</c>

00:49:46.150 --> 00:49:46.160 align:start position:0%
losses we saw on the y-axis
 

00:49:46.160 --> 00:49:47.990 align:start position:0%
losses we saw on the y-axis
and<00:49:46.400><c> often</c><00:49:46.640><c> you're</c><00:49:46.800><c> going</c><00:49:46.960><c> to</c><00:49:47.119><c> find</c><00:49:47.599><c> that</c><00:49:47.760><c> your</c>

00:49:47.990 --> 00:49:48.000 align:start position:0%
and often you're going to find that your
 

00:49:48.000 --> 00:49:50.150 align:start position:0%
and often you're going to find that your
plot<00:49:48.240><c> looks</c><00:49:48.559><c> something</c><00:49:48.880><c> like</c><00:49:49.119><c> this</c>

00:49:50.150 --> 00:49:50.160 align:start position:0%
plot looks something like this
 

00:49:50.160 --> 00:49:51.990 align:start position:0%
plot looks something like this
where<00:49:50.400><c> in</c><00:49:50.480><c> the</c><00:49:50.559><c> beginning</c>

00:49:51.990 --> 00:49:52.000 align:start position:0%
where in the beginning
 

00:49:52.000 --> 00:49:53.430 align:start position:0%
where in the beginning
you<00:49:52.160><c> had</c><00:49:52.319><c> very</c><00:49:52.559><c> low</c><00:49:52.720><c> learning</c><00:49:52.960><c> rates</c><00:49:53.200><c> so</c>

00:49:53.430 --> 00:49:53.440 align:start position:0%
you had very low learning rates so
 

00:49:53.440 --> 00:49:54.950 align:start position:0%
you had very low learning rates so
basically<00:49:53.760><c> anything</c>

00:49:54.950 --> 00:49:54.960 align:start position:0%
basically anything
 

00:49:54.960 --> 00:49:57.030 align:start position:0%
basically anything
barely<00:49:55.280><c> anything</c><00:49:55.599><c> happened</c>

00:49:57.030 --> 00:49:57.040 align:start position:0%
barely anything happened
 

00:49:57.040 --> 00:50:00.069 align:start position:0%
barely anything happened
then<00:49:57.359><c> we</c><00:49:57.520><c> got</c><00:49:57.760><c> to</c><00:49:57.920><c> like</c><00:49:58.240><c> a</c><00:49:58.400><c> nice</c><00:49:58.720><c> spot</c><00:49:59.119><c> here</c>

00:50:00.069 --> 00:50:00.079 align:start position:0%
then we got to like a nice spot here
 

00:50:00.079 --> 00:50:01.430 align:start position:0%
then we got to like a nice spot here
and<00:50:00.160><c> then</c><00:50:00.400><c> as</c><00:50:00.559><c> we</c><00:50:00.720><c> increase</c><00:50:01.040><c> the</c><00:50:01.119><c> learning</c>

00:50:01.430 --> 00:50:01.440 align:start position:0%
and then as we increase the learning
 

00:50:01.440 --> 00:50:02.950 align:start position:0%
and then as we increase the learning
rate<00:50:01.839><c> enough</c>

00:50:02.950 --> 00:50:02.960 align:start position:0%
rate enough
 

00:50:02.960 --> 00:50:04.309 align:start position:0%
rate enough
we<00:50:03.119><c> basically</c><00:50:03.520><c> started</c><00:50:03.760><c> to</c><00:50:03.839><c> be</c><00:50:04.000><c> kind</c><00:50:04.160><c> of</c>

00:50:04.309 --> 00:50:04.319 align:start position:0%
we basically started to be kind of
 

00:50:04.319 --> 00:50:05.910 align:start position:0%
we basically started to be kind of
unstable<00:50:04.960><c> here</c>

00:50:05.910 --> 00:50:05.920 align:start position:0%
unstable here
 

00:50:05.920 --> 00:50:07.670 align:start position:0%
unstable here
so<00:50:06.079><c> a</c><00:50:06.240><c> good</c><00:50:06.400><c> learning</c><00:50:06.720><c> rate</c><00:50:06.880><c> turns</c><00:50:07.200><c> out</c><00:50:07.359><c> to</c><00:50:07.520><c> be</c>

00:50:07.670 --> 00:50:07.680 align:start position:0%
so a good learning rate turns out to be
 

00:50:07.680 --> 00:50:10.069 align:start position:0%
so a good learning rate turns out to be
somewhere<00:50:08.400><c> around</c><00:50:08.800><c> here</c>

00:50:10.069 --> 00:50:10.079 align:start position:0%
somewhere around here
 

00:50:10.079 --> 00:50:13.349 align:start position:0%
somewhere around here
um<00:50:10.559><c> and</c><00:50:10.800><c> because</c><00:50:11.200><c> we</c><00:50:11.359><c> have</c><00:50:11.680><c> lri</c><00:50:12.240><c> here</c>

00:50:13.349 --> 00:50:13.359 align:start position:0%
um and because we have lri here
 

00:50:13.359 --> 00:50:14.710 align:start position:0%
um and because we have lri here
um

00:50:14.710 --> 00:50:14.720 align:start position:0%
um
 

00:50:14.720 --> 00:50:16.630 align:start position:0%
um
we<00:50:14.880><c> actually</c><00:50:15.200><c> may</c><00:50:15.359><c> want</c><00:50:15.599><c> to</c>

00:50:16.630 --> 00:50:16.640 align:start position:0%
we actually may want to
 

00:50:16.640 --> 00:50:19.109 align:start position:0%
we actually may want to
um

00:50:19.109 --> 00:50:19.119 align:start position:0%
 
 

00:50:19.119 --> 00:50:20.950 align:start position:0%
 
do<00:50:19.280><c> not</c><00:50:19.520><c> lr</c>

00:50:20.950 --> 00:50:20.960 align:start position:0%
do not lr
 

00:50:20.960 --> 00:50:22.630 align:start position:0%
do not lr
not<00:50:21.200><c> the</c><00:50:21.359><c> learning</c><00:50:21.680><c> rate</c><00:50:21.839><c> but</c><00:50:22.000><c> the</c><00:50:22.079><c> exponent</c>

00:50:22.630 --> 00:50:22.640 align:start position:0%
not the learning rate but the exponent
 

00:50:22.640 --> 00:50:25.349 align:start position:0%
not the learning rate but the exponent
so<00:50:22.800><c> that</c><00:50:22.960><c> would</c><00:50:23.040><c> be</c><00:50:23.200><c> the</c><00:50:23.680><c> lre</c><00:50:24.319><c> at</c><00:50:24.559><c> i</c><00:50:24.960><c> is</c><00:50:25.119><c> maybe</c>

00:50:25.349 --> 00:50:25.359 align:start position:0%
so that would be the lre at i is maybe
 

00:50:25.359 --> 00:50:27.829 align:start position:0%
so that would be the lre at i is maybe
what<00:50:25.520><c> we</c><00:50:25.599><c> want</c><00:50:25.760><c> to</c><00:50:25.920><c> log</c><00:50:26.559><c> so</c><00:50:26.720><c> let</c><00:50:26.880><c> me</c><00:50:27.040><c> reset</c><00:50:27.440><c> this</c>

00:50:27.829 --> 00:50:27.839 align:start position:0%
what we want to log so let me reset this
 

00:50:27.839 --> 00:50:30.069 align:start position:0%
what we want to log so let me reset this
and<00:50:28.000><c> redo</c><00:50:28.319><c> that</c><00:50:28.880><c> calculation</c>

00:50:30.069 --> 00:50:30.079 align:start position:0%
and redo that calculation
 

00:50:30.079 --> 00:50:32.150 align:start position:0%
and redo that calculation
but<00:50:30.240><c> now</c><00:50:30.480><c> on</c><00:50:30.559><c> the</c><00:50:30.720><c> x</c><00:50:30.960><c> axis</c><00:50:31.520><c> we</c><00:50:31.680><c> have</c><00:50:32.000><c> the</c>

00:50:32.150 --> 00:50:32.160 align:start position:0%
but now on the x axis we have the
 

00:50:32.160 --> 00:50:34.069 align:start position:0%
but now on the x axis we have the
[Music]

00:50:34.069 --> 00:50:34.079 align:start position:0%
[Music]
 

00:50:34.079 --> 00:50:36.069 align:start position:0%
[Music]
exponent<00:50:34.559><c> of</c><00:50:34.640><c> the</c><00:50:34.720><c> learning</c><00:50:34.960><c> rate</c><00:50:35.680><c> and</c><00:50:35.760><c> so</c><00:50:35.920><c> we</c>

00:50:36.069 --> 00:50:36.079 align:start position:0%
exponent of the learning rate and so we
 

00:50:36.079 --> 00:50:37.430 align:start position:0%
exponent of the learning rate and so we
can<00:50:36.160><c> see</c><00:50:36.319><c> the</c><00:50:36.559><c> exponent</c><00:50:37.040><c> of</c><00:50:37.119><c> the</c><00:50:37.200><c> learning</c>

00:50:37.430 --> 00:50:37.440 align:start position:0%
can see the exponent of the learning
 

00:50:37.440 --> 00:50:38.790 align:start position:0%
can see the exponent of the learning
rate<00:50:37.680><c> that</c><00:50:37.839><c> is</c><00:50:37.920><c> good</c><00:50:38.079><c> to</c><00:50:38.240><c> use</c><00:50:38.480><c> it</c><00:50:38.559><c> would</c><00:50:38.720><c> be</c>

00:50:38.790 --> 00:50:38.800 align:start position:0%
rate that is good to use it would be
 

00:50:38.800 --> 00:50:41.349 align:start position:0%
rate that is good to use it would be
sort<00:50:38.960><c> of</c><00:50:39.040><c> like</c><00:50:39.280><c> roughly</c><00:50:39.920><c> in</c><00:50:40.319><c> the</c><00:50:40.480><c> valley</c><00:50:40.800><c> here</c>

00:50:41.349 --> 00:50:41.359 align:start position:0%
sort of like roughly in the valley here
 

00:50:41.359 --> 00:50:42.630 align:start position:0%
sort of like roughly in the valley here
because<00:50:41.599><c> here</c><00:50:41.839><c> the</c><00:50:41.920><c> learning</c><00:50:42.160><c> rates</c><00:50:42.400><c> are</c><00:50:42.480><c> just</c>

00:50:42.630 --> 00:50:42.640 align:start position:0%
because here the learning rates are just
 

00:50:42.640 --> 00:50:44.870 align:start position:0%
because here the learning rates are just
way<00:50:42.800><c> too</c><00:50:43.040><c> low</c><00:50:43.599><c> and</c><00:50:43.680><c> then</c><00:50:43.920><c> here</c><00:50:44.160><c> where</c><00:50:44.720><c> we</c>

00:50:44.870 --> 00:50:44.880 align:start position:0%
way too low and then here where we
 

00:50:44.880 --> 00:50:46.230 align:start position:0%
way too low and then here where we
expect<00:50:45.280><c> relatively</c><00:50:45.680><c> good</c><00:50:45.839><c> learning</c><00:50:46.079><c> rates</c>

00:50:46.230 --> 00:50:46.240 align:start position:0%
expect relatively good learning rates
 

00:50:46.240 --> 00:50:47.910 align:start position:0%
expect relatively good learning rates
somewhere<00:50:46.559><c> here</c><00:50:47.200><c> and</c><00:50:47.280><c> then</c><00:50:47.440><c> here</c><00:50:47.680><c> things</c><00:50:47.839><c> are</c>

00:50:47.910 --> 00:50:47.920 align:start position:0%
somewhere here and then here things are
 

00:50:47.920 --> 00:50:50.470 align:start position:0%
somewhere here and then here things are
starting<00:50:48.160><c> to</c><00:50:48.240><c> explode</c><00:50:49.200><c> so</c><00:50:49.440><c> somewhere</c><00:50:49.920><c> around</c>

00:50:50.470 --> 00:50:50.480 align:start position:0%
starting to explode so somewhere around
 

00:50:50.480 --> 00:50:51.910 align:start position:0%
starting to explode so somewhere around
negative<00:50:50.800><c> one</c><00:50:51.040><c> x</c><00:50:51.200><c> the</c><00:50:51.280><c> exponent</c><00:50:51.760><c> of</c><00:50:51.839><c> the</c>

00:50:51.910 --> 00:50:51.920 align:start position:0%
negative one x the exponent of the
 

00:50:51.920 --> 00:50:54.150 align:start position:0%
negative one x the exponent of the
learning<00:50:52.160><c> rate</c><00:50:52.559><c> is</c><00:50:52.720><c> a</c><00:50:52.800><c> pretty</c><00:50:53.040><c> good</c><00:50:53.280><c> setting</c>

00:50:54.150 --> 00:50:54.160 align:start position:0%
learning rate is a pretty good setting
 

00:50:54.160 --> 00:50:58.069 align:start position:0%
learning rate is a pretty good setting
and<00:50:54.559><c> 10</c><00:50:54.720><c> to</c><00:50:54.880><c> the</c><00:50:55.359><c> negative</c><00:50:55.760><c> one</c><00:50:56.160><c> is</c><00:50:56.400><c> 0.1</c><00:50:57.359><c> so</c><00:50:57.520><c> 0.1</c>

00:50:58.069 --> 00:50:58.079 align:start position:0%
and 10 to the negative one is 0.1 so 0.1
 

00:50:58.079 --> 00:50:59.829 align:start position:0%
and 10 to the negative one is 0.1 so 0.1
is<00:50:58.160><c> actually</c><00:50:58.559><c> 0.1</c><00:50:58.960><c> was</c><00:50:59.119><c> actually</c><00:50:59.359><c> a</c><00:50:59.520><c> fairly</c>

00:50:59.829 --> 00:50:59.839 align:start position:0%
is actually 0.1 was actually a fairly
 

00:50:59.839 --> 00:51:02.150 align:start position:0%
is actually 0.1 was actually a fairly
good<00:51:00.000><c> learning</c><00:51:00.319><c> rate</c><00:51:00.960><c> around</c><00:51:01.280><c> here</c>

00:51:02.150 --> 00:51:02.160 align:start position:0%
good learning rate around here
 

00:51:02.160 --> 00:51:03.829 align:start position:0%
good learning rate around here
and<00:51:02.240><c> that's</c><00:51:02.480><c> what</c><00:51:02.640><c> we</c><00:51:02.800><c> had</c><00:51:03.200><c> in</c><00:51:03.280><c> the</c><00:51:03.440><c> initial</c>

00:51:03.829 --> 00:51:03.839 align:start position:0%
and that's what we had in the initial
 

00:51:03.839 --> 00:51:05.349 align:start position:0%
and that's what we had in the initial
setting

00:51:05.349 --> 00:51:05.359 align:start position:0%
setting
 

00:51:05.359 --> 00:51:06.549 align:start position:0%
setting
but<00:51:05.520><c> that's</c><00:51:05.839><c> roughly</c><00:51:06.160><c> how</c><00:51:06.319><c> you</c><00:51:06.400><c> would</c>

00:51:06.549 --> 00:51:06.559 align:start position:0%
but that's roughly how you would
 

00:51:06.559 --> 00:51:09.510 align:start position:0%
but that's roughly how you would
determine<00:51:07.040><c> it</c><00:51:08.000><c> and</c><00:51:08.160><c> so</c><00:51:08.480><c> here</c><00:51:08.720><c> now</c><00:51:08.880><c> we</c><00:51:09.040><c> can</c><00:51:09.280><c> take</c>

00:51:09.510 --> 00:51:09.520 align:start position:0%
determine it and so here now we can take
 

00:51:09.520 --> 00:51:12.790 align:start position:0%
determine it and so here now we can take
out<00:51:09.839><c> the</c><00:51:10.000><c> tracking</c><00:51:10.480><c> of</c><00:51:10.559><c> these</c>

00:51:12.790 --> 00:51:12.800 align:start position:0%
out the tracking of these
 

00:51:12.800 --> 00:51:15.589 align:start position:0%
out the tracking of these
and<00:51:13.040><c> we</c><00:51:13.200><c> can</c><00:51:13.760><c> just</c><00:51:13.920><c> simply</c><00:51:14.319><c> set</c><00:51:14.559><c> lr</c><00:51:14.880><c> to</c><00:51:14.960><c> be</c><00:51:15.359><c> 10</c>

00:51:15.589 --> 00:51:15.599 align:start position:0%
and we can just simply set lr to be 10
 

00:51:15.599 --> 00:51:17.990 align:start position:0%
and we can just simply set lr to be 10
to<00:51:15.760><c> the</c><00:51:16.000><c> negative</c><00:51:16.400><c> one</c><00:51:17.119><c> or</c>

00:51:17.990 --> 00:51:18.000 align:start position:0%
to the negative one or
 

00:51:18.000 --> 00:51:20.790 align:start position:0%
to the negative one or
basically<00:51:18.400><c> otherwise</c><00:51:18.800><c> 0.1</c><00:51:19.359><c> as</c><00:51:19.599><c> it</c><00:51:19.680><c> was</c><00:51:19.839><c> before</c>

00:51:20.790 --> 00:51:20.800 align:start position:0%
basically otherwise 0.1 as it was before
 

00:51:20.800 --> 00:51:21.910 align:start position:0%
basically otherwise 0.1 as it was before
and<00:51:20.880><c> now</c><00:51:21.040><c> we</c><00:51:21.119><c> have</c><00:51:21.200><c> some</c><00:51:21.359><c> confidence</c><00:51:21.839><c> that</c>

00:51:21.910 --> 00:51:21.920 align:start position:0%
and now we have some confidence that
 

00:51:21.920 --> 00:51:23.430 align:start position:0%
and now we have some confidence that
this<00:51:22.000><c> is</c><00:51:22.160><c> actually</c><00:51:22.319><c> a</c><00:51:22.400><c> fairly</c><00:51:22.720><c> good</c><00:51:23.119><c> learning</c>

00:51:23.430 --> 00:51:23.440 align:start position:0%
this is actually a fairly good learning
 

00:51:23.440 --> 00:51:24.390 align:start position:0%
this is actually a fairly good learning
rate

00:51:24.390 --> 00:51:24.400 align:start position:0%
rate
 

00:51:24.400 --> 00:51:26.150 align:start position:0%
rate
and<00:51:24.480><c> so</c><00:51:24.640><c> now</c><00:51:24.800><c> we</c><00:51:24.960><c> can</c><00:51:25.040><c> do</c><00:51:25.200><c> is</c><00:51:25.359><c> we</c><00:51:25.520><c> can</c><00:51:25.680><c> crank</c><00:51:26.000><c> up</c>

00:51:26.150 --> 00:51:26.160 align:start position:0%
and so now we can do is we can crank up
 

00:51:26.160 --> 00:51:27.750 align:start position:0%
and so now we can do is we can crank up
the<00:51:26.319><c> iterations</c>

00:51:27.750 --> 00:51:27.760 align:start position:0%
the iterations
 

00:51:27.760 --> 00:51:30.710 align:start position:0%
the iterations
we<00:51:27.920><c> can</c><00:51:28.160><c> reset</c><00:51:28.640><c> our</c><00:51:28.800><c> optimization</c>

00:51:30.710 --> 00:51:30.720 align:start position:0%
we can reset our optimization
 

00:51:30.720 --> 00:51:32.069 align:start position:0%
we can reset our optimization
and

00:51:32.069 --> 00:51:32.079 align:start position:0%
and
 

00:51:32.079 --> 00:51:34.630 align:start position:0%
and
we<00:51:32.240><c> can</c><00:51:32.559><c> run</c><00:51:32.960><c> for</c><00:51:33.280><c> a</c><00:51:33.359><c> pretty</c><00:51:33.599><c> long</c><00:51:33.839><c> time</c><00:51:34.400><c> using</c>

00:51:34.630 --> 00:51:34.640 align:start position:0%
we can run for a pretty long time using
 

00:51:34.640 --> 00:51:36.470 align:start position:0%
we can run for a pretty long time using
this<00:51:34.880><c> learning</c><00:51:35.200><c> rate</c>

00:51:36.470 --> 00:51:36.480 align:start position:0%
this learning rate
 

00:51:36.480 --> 00:51:38.549 align:start position:0%
this learning rate
oops<00:51:37.040><c> and</c><00:51:37.200><c> we</c><00:51:37.359><c> don't</c><00:51:37.520><c> want</c><00:51:37.680><c> to</c><00:51:37.920><c> print</c><00:51:38.400><c> that's</c>

00:51:38.549 --> 00:51:38.559 align:start position:0%
oops and we don't want to print that's
 

00:51:38.559 --> 00:51:40.069 align:start position:0%
oops and we don't want to print that's
way<00:51:38.720><c> too</c><00:51:38.880><c> much</c><00:51:39.040><c> printing</c>

00:51:40.069 --> 00:51:40.079 align:start position:0%
way too much printing
 

00:51:40.079 --> 00:51:42.069 align:start position:0%
way too much printing
so<00:51:40.319><c> let</c><00:51:40.480><c> me</c><00:51:40.640><c> again</c><00:51:40.880><c> reset</c>

00:51:42.069 --> 00:51:42.079 align:start position:0%
so let me again reset
 

00:51:42.079 --> 00:51:48.470 align:start position:0%
so let me again reset
and<00:51:42.319><c> run</c><00:51:42.559><c> ten</c><00:51:42.720><c> thousand</c><00:51:43.040><c> stops</c>

00:51:48.470 --> 00:51:48.480 align:start position:0%
 
 

00:51:48.480 --> 00:51:52.069 align:start position:0%
 
okay<00:51:48.720><c> so</c><00:51:48.880><c> we're</c><00:51:49.200><c> 0.2</c><00:51:50.079><c> 2.48</c><00:51:51.040><c> roughly</c><00:51:51.680><c> let's</c><00:51:51.920><c> run</c>

00:51:52.069 --> 00:51:52.079 align:start position:0%
okay so we're 0.2 2.48 roughly let's run
 

00:51:52.079 --> 00:51:58.630 align:start position:0%
okay so we're 0.2 2.48 roughly let's run
another<00:51:52.400><c> 10</c><00:51:52.720><c> 000</c><00:51:52.880><c> steps</c>

00:51:58.630 --> 00:51:58.640 align:start position:0%
 
 

00:51:58.640 --> 00:52:00.230 align:start position:0%
 
2.46

00:52:00.230 --> 00:52:00.240 align:start position:0%
2.46
 

00:52:00.240 --> 00:52:02.390 align:start position:0%
2.46
and<00:52:00.400><c> now</c><00:52:00.640><c> let's</c><00:52:00.880><c> do</c><00:52:01.119><c> one</c><00:52:01.359><c> learning</c><00:52:01.680><c> rate</c><00:52:01.839><c> decay</c>

00:52:02.390 --> 00:52:02.400 align:start position:0%
and now let's do one learning rate decay
 

00:52:02.400 --> 00:52:03.670 align:start position:0%
and now let's do one learning rate decay
what<00:52:02.559><c> this</c><00:52:02.720><c> means</c><00:52:02.960><c> is</c><00:52:03.119><c> we're</c><00:52:03.280><c> going</c><00:52:03.440><c> to</c><00:52:03.520><c> take</c>

00:52:03.670 --> 00:52:03.680 align:start position:0%
what this means is we're going to take
 

00:52:03.680 --> 00:52:05.910 align:start position:0%
what this means is we're going to take
our<00:52:03.839><c> learning</c><00:52:04.079><c> rate</c><00:52:04.400><c> and</c><00:52:04.480><c> we're</c><00:52:04.640><c> going</c><00:52:04.880><c> to</c><00:52:05.280><c> 10x</c>

00:52:05.910 --> 00:52:05.920 align:start position:0%
our learning rate and we're going to 10x
 

00:52:05.920 --> 00:52:08.470 align:start position:0%
our learning rate and we're going to 10x
lower<00:52:06.240><c> it</c><00:52:06.800><c> and</c><00:52:06.960><c> so</c><00:52:07.280><c> we're</c><00:52:07.440><c> at</c><00:52:07.520><c> the</c><00:52:07.760><c> late</c><00:52:08.000><c> stages</c>

00:52:08.470 --> 00:52:08.480 align:start position:0%
lower it and so we're at the late stages
 

00:52:08.480 --> 00:52:10.390 align:start position:0%
lower it and so we're at the late stages
of<00:52:08.559><c> training</c><00:52:08.880><c> potentially</c><00:52:09.760><c> and</c><00:52:09.920><c> we</c><00:52:10.079><c> may</c><00:52:10.240><c> want</c>

00:52:10.390 --> 00:52:10.400 align:start position:0%
of training potentially and we may want
 

00:52:10.400 --> 00:52:12.870 align:start position:0%
of training potentially and we may want
to<00:52:10.480><c> go</c><00:52:11.119><c> a</c><00:52:11.200><c> bit</c><00:52:11.359><c> slower</c><00:52:12.160><c> let's</c><00:52:12.319><c> do</c><00:52:12.480><c> one</c><00:52:12.640><c> more</c>

00:52:12.870 --> 00:52:12.880 align:start position:0%
to go a bit slower let's do one more
 

00:52:12.880 --> 00:52:16.950 align:start position:0%
to go a bit slower let's do one more
actually<00:52:13.119><c> at</c><00:52:13.200><c> 0.1</c><00:52:14.079><c> just</c><00:52:14.240><c> to</c><00:52:14.400><c> see</c><00:52:14.640><c> if</c>

00:52:16.950 --> 00:52:16.960 align:start position:0%
 
 

00:52:16.960 --> 00:52:18.870 align:start position:0%
 
we're<00:52:17.119><c> making</c><00:52:17.359><c> a</c><00:52:17.440><c> dent</c><00:52:17.760><c> here</c>

00:52:18.870 --> 00:52:18.880 align:start position:0%
we're making a dent here
 

00:52:18.880 --> 00:52:20.630 align:start position:0%
we're making a dent here
okay<00:52:19.119><c> we're</c><00:52:19.280><c> still</c><00:52:19.440><c> making</c><00:52:19.680><c> dent</c><00:52:20.240><c> and</c><00:52:20.400><c> by</c><00:52:20.559><c> the</c>

00:52:20.630 --> 00:52:20.640 align:start position:0%
okay we're still making dent and by the
 

00:52:20.640 --> 00:52:21.670 align:start position:0%
okay we're still making dent and by the
way<00:52:20.880><c> the</c>

00:52:21.670 --> 00:52:21.680 align:start position:0%
way the
 

00:52:21.680 --> 00:52:24.230 align:start position:0%
way the
bi-gram<00:52:22.559><c> loss</c><00:52:22.800><c> that</c><00:52:22.960><c> we</c><00:52:23.119><c> achieved</c><00:52:23.680><c> last</c><00:52:23.920><c> video</c>

00:52:24.230 --> 00:52:24.240 align:start position:0%
bi-gram loss that we achieved last video
 

00:52:24.240 --> 00:52:27.109 align:start position:0%
bi-gram loss that we achieved last video
was<00:52:24.400><c> 2.45</c><00:52:25.680><c> so</c><00:52:25.839><c> we've</c><00:52:26.000><c> already</c><00:52:26.400><c> surpassed</c><00:52:26.960><c> the</c>

00:52:27.109 --> 00:52:27.119 align:start position:0%
was 2.45 so we've already surpassed the
 

00:52:27.119 --> 00:52:29.190 align:start position:0%
was 2.45 so we've already surpassed the
bi-gram<00:52:27.520><c> model</c>

00:52:29.190 --> 00:52:29.200 align:start position:0%
bi-gram model
 

00:52:29.200 --> 00:52:30.390 align:start position:0%
bi-gram model
and<00:52:29.359><c> once</c><00:52:29.599><c> i</c><00:52:29.680><c> get</c><00:52:29.760><c> a</c><00:52:29.839><c> sense</c><00:52:30.079><c> that</c><00:52:30.160><c> this</c><00:52:30.319><c> is</c>

00:52:30.390 --> 00:52:30.400 align:start position:0%
and once i get a sense that this is
 

00:52:30.400 --> 00:52:32.470 align:start position:0%
and once i get a sense that this is
actually<00:52:30.640><c> kind</c><00:52:30.800><c> of</c><00:52:30.880><c> starting</c><00:52:31.119><c> to</c><00:52:31.280><c> plateau</c><00:52:31.760><c> off</c>

00:52:32.470 --> 00:52:32.480 align:start position:0%
actually kind of starting to plateau off
 

00:52:32.480 --> 00:52:34.230 align:start position:0%
actually kind of starting to plateau off
people<00:52:32.720><c> like</c><00:52:32.960><c> to</c><00:52:33.040><c> do</c><00:52:33.200><c> as</c><00:52:33.280><c> i</c><00:52:33.359><c> mentioned</c><00:52:33.760><c> this</c>

00:52:34.230 --> 00:52:34.240 align:start position:0%
people like to do as i mentioned this
 

00:52:34.240 --> 00:52:36.230 align:start position:0%
people like to do as i mentioned this
learning<00:52:34.559><c> rate</c><00:52:34.720><c> decay</c><00:52:35.520><c> so</c><00:52:35.760><c> let's</c><00:52:36.000><c> try</c><00:52:36.160><c> to</c>

00:52:36.230 --> 00:52:36.240 align:start position:0%
learning rate decay so let's try to
 

00:52:36.240 --> 00:52:37.670 align:start position:0%
learning rate decay so let's try to
decay<00:52:36.559><c> the</c><00:52:36.720><c> loss</c>

00:52:37.670 --> 00:52:37.680 align:start position:0%
decay the loss
 

00:52:37.680 --> 00:52:42.150 align:start position:0%
decay the loss
the<00:52:37.839><c> learning</c><00:52:38.079><c> rate</c><00:52:38.319><c> i</c><00:52:38.400><c> mean</c>

00:52:42.150 --> 00:52:42.160 align:start position:0%
 
 

00:52:42.160 --> 00:52:46.390 align:start position:0%
 
and<00:52:42.960><c> we</c><00:52:43.200><c> achieve</c><00:52:43.520><c> it</c><00:52:43.680><c> about</c><00:52:43.920><c> 2.3</c><00:52:44.559><c> now</c>

00:52:46.390 --> 00:52:46.400 align:start position:0%
and we achieve it about 2.3 now
 

00:52:46.400 --> 00:52:48.069 align:start position:0%
and we achieve it about 2.3 now
obviously<00:52:46.720><c> this</c><00:52:46.880><c> is</c><00:52:46.960><c> janky</c><00:52:47.280><c> and</c><00:52:47.440><c> not</c><00:52:47.599><c> exactly</c>

00:52:48.069 --> 00:52:48.079 align:start position:0%
obviously this is janky and not exactly
 

00:52:48.079 --> 00:52:49.990 align:start position:0%
obviously this is janky and not exactly
how<00:52:48.240><c> you</c><00:52:48.319><c> would</c><00:52:48.480><c> train</c><00:52:48.720><c> it</c><00:52:48.960><c> in</c><00:52:49.200><c> production</c><00:52:49.839><c> but</c>

00:52:49.990 --> 00:52:50.000 align:start position:0%
how you would train it in production but
 

00:52:50.000 --> 00:52:51.190 align:start position:0%
how you would train it in production but
this<00:52:50.240><c> is</c><00:52:50.319><c> roughly</c><00:52:50.640><c> what</c><00:52:50.800><c> you're</c><00:52:50.960><c> going</c>

00:52:51.190 --> 00:52:51.200 align:start position:0%
this is roughly what you're going
 

00:52:51.200 --> 00:52:53.349 align:start position:0%
this is roughly what you're going
through<00:52:51.839><c> you</c><00:52:52.000><c> first</c><00:52:52.319><c> find</c><00:52:52.640><c> a</c><00:52:52.720><c> decent</c><00:52:53.119><c> learning</c>

00:52:53.349 --> 00:52:53.359 align:start position:0%
through you first find a decent learning
 

00:52:53.359 --> 00:52:54.790 align:start position:0%
through you first find a decent learning
rate<00:52:53.680><c> using</c><00:52:53.920><c> the</c><00:52:54.079><c> approach</c><00:52:54.400><c> that</c><00:52:54.559><c> i</c><00:52:54.640><c> showed</c>

00:52:54.790 --> 00:52:54.800 align:start position:0%
rate using the approach that i showed
 

00:52:54.800 --> 00:52:55.670 align:start position:0%
rate using the approach that i showed
you

00:52:55.670 --> 00:52:55.680 align:start position:0%
you
 

00:52:55.680 --> 00:52:57.190 align:start position:0%
you
then<00:52:55.920><c> you</c><00:52:56.160><c> start</c><00:52:56.400><c> with</c><00:52:56.480><c> that</c><00:52:56.640><c> learning</c><00:52:56.960><c> rate</c>

00:52:57.190 --> 00:52:57.200 align:start position:0%
then you start with that learning rate
 

00:52:57.200 --> 00:52:58.710 align:start position:0%
then you start with that learning rate
and<00:52:57.359><c> you</c><00:52:57.440><c> train</c><00:52:57.680><c> for</c><00:52:57.839><c> a</c><00:52:57.920><c> while</c>

00:52:58.710 --> 00:52:58.720 align:start position:0%
and you train for a while
 

00:52:58.720 --> 00:53:00.230 align:start position:0%
and you train for a while
and<00:52:58.880><c> then</c><00:52:59.119><c> at</c><00:52:59.200><c> the</c><00:52:59.359><c> end</c><00:52:59.599><c> people</c><00:52:59.760><c> like</c><00:52:59.920><c> to</c><00:53:00.000><c> do</c><00:53:00.160><c> a</c>

00:53:00.230 --> 00:53:00.240 align:start position:0%
and then at the end people like to do a
 

00:53:00.240 --> 00:53:02.230 align:start position:0%
and then at the end people like to do a
learning<00:53:00.559><c> rate</c><00:53:00.720><c> decay</c><00:53:01.359><c> where</c><00:53:01.520><c> you</c><00:53:01.760><c> decay</c><00:53:02.160><c> the</c>

00:53:02.230 --> 00:53:02.240 align:start position:0%
learning rate decay where you decay the
 

00:53:02.240 --> 00:53:03.910 align:start position:0%
learning rate decay where you decay the
learning<00:53:02.480><c> rate</c><00:53:02.640><c> by</c><00:53:02.800><c> say</c><00:53:02.960><c> a</c><00:53:03.040><c> factor</c><00:53:03.359><c> of</c><00:53:03.440><c> 10</c><00:53:03.760><c> and</c>

00:53:03.910 --> 00:53:03.920 align:start position:0%
learning rate by say a factor of 10 and
 

00:53:03.920 --> 00:53:06.230 align:start position:0%
learning rate by say a factor of 10 and
you<00:53:04.000><c> do</c><00:53:04.160><c> a</c><00:53:04.240><c> few</c><00:53:04.400><c> more</c><00:53:04.640><c> steps</c><00:53:05.359><c> and</c><00:53:05.760><c> then</c><00:53:05.920><c> you</c><00:53:06.079><c> get</c>

00:53:06.230 --> 00:53:06.240 align:start position:0%
you do a few more steps and then you get
 

00:53:06.240 --> 00:53:08.630 align:start position:0%
you do a few more steps and then you get
a<00:53:06.480><c> trained</c><00:53:06.800><c> network</c><00:53:07.359><c> roughly</c><00:53:07.760><c> speaking</c>

00:53:08.630 --> 00:53:08.640 align:start position:0%
a trained network roughly speaking
 

00:53:08.640 --> 00:53:11.589 align:start position:0%
a trained network roughly speaking
so<00:53:08.800><c> we've</c><00:53:08.960><c> achieved</c><00:53:09.359><c> 2.3</c><00:53:10.160><c> and</c><00:53:10.800><c> dramatically</c>

00:53:11.589 --> 00:53:11.599 align:start position:0%
so we've achieved 2.3 and dramatically
 

00:53:11.599 --> 00:53:13.510 align:start position:0%
so we've achieved 2.3 and dramatically
improved<00:53:12.160><c> on</c><00:53:12.319><c> the</c><00:53:12.400><c> bi-gram</c><00:53:12.800><c> language</c><00:53:13.040><c> model</c>

00:53:13.510 --> 00:53:13.520 align:start position:0%
improved on the bi-gram language model
 

00:53:13.520 --> 00:53:15.349 align:start position:0%
improved on the bi-gram language model
using<00:53:13.839><c> this</c><00:53:14.319><c> simple</c><00:53:14.640><c> neural</c><00:53:14.960><c> net</c><00:53:15.200><c> as</c>

00:53:15.349 --> 00:53:15.359 align:start position:0%
using this simple neural net as
 

00:53:15.359 --> 00:53:17.109 align:start position:0%
using this simple neural net as
described<00:53:15.839><c> here</c>

00:53:17.109 --> 00:53:17.119 align:start position:0%
described here
 

00:53:17.119 --> 00:53:20.390 align:start position:0%
described here
using<00:53:17.440><c> these</c><00:53:17.839><c> 3</c><00:53:18.559><c> 400</c><00:53:19.040><c> parameters</c><00:53:20.000><c> now</c><00:53:20.160><c> there's</c>

00:53:20.390 --> 00:53:20.400 align:start position:0%
using these 3 400 parameters now there's
 

00:53:20.400 --> 00:53:22.470 align:start position:0%
using these 3 400 parameters now there's
something<00:53:20.559><c> we</c><00:53:20.720><c> have</c><00:53:20.800><c> to</c><00:53:20.880><c> be</c><00:53:20.960><c> careful</c><00:53:21.280><c> with</c>

00:53:22.470 --> 00:53:22.480 align:start position:0%
something we have to be careful with
 

00:53:22.480 --> 00:53:24.069 align:start position:0%
something we have to be careful with
i<00:53:22.640><c> said</c><00:53:22.800><c> that</c><00:53:22.960><c> we</c><00:53:23.119><c> have</c><00:53:23.280><c> a</c><00:53:23.359><c> better</c><00:53:23.680><c> model</c>

00:53:24.069 --> 00:53:24.079 align:start position:0%
i said that we have a better model
 

00:53:24.079 --> 00:53:26.309 align:start position:0%
i said that we have a better model
because<00:53:24.240><c> we</c><00:53:24.400><c> are</c><00:53:24.559><c> achieving</c><00:53:25.280><c> a</c><00:53:25.440><c> lower</c><00:53:25.760><c> loss</c>

00:53:26.309 --> 00:53:26.319 align:start position:0%
because we are achieving a lower loss
 

00:53:26.319 --> 00:53:28.870 align:start position:0%
because we are achieving a lower loss
2.3<00:53:27.200><c> much</c><00:53:27.440><c> lower</c><00:53:27.680><c> than</c><00:53:27.839><c> 2.45</c><00:53:28.640><c> with</c><00:53:28.800><c> the</c>

00:53:28.870 --> 00:53:28.880 align:start position:0%
2.3 much lower than 2.45 with the
 

00:53:28.880 --> 00:53:30.630 align:start position:0%
2.3 much lower than 2.45 with the
bi-gram<00:53:29.280><c> model</c><00:53:29.520><c> previously</c>

00:53:30.630 --> 00:53:30.640 align:start position:0%
bi-gram model previously
 

00:53:30.640 --> 00:53:32.549 align:start position:0%
bi-gram model previously
now<00:53:30.800><c> that's</c><00:53:31.040><c> not</c><00:53:31.280><c> exactly</c><00:53:31.680><c> true</c><00:53:32.319><c> and</c><00:53:32.480><c> the</c>

00:53:32.549 --> 00:53:32.559 align:start position:0%
now that's not exactly true and the
 

00:53:32.559 --> 00:53:37.190 align:start position:0%
now that's not exactly true and the
reason<00:53:32.800><c> that's</c><00:53:33.040><c> not</c><00:53:33.280><c> true</c><00:53:34.000><c> is</c><00:53:34.160><c> that</c>

00:53:37.190 --> 00:53:37.200 align:start position:0%
 
 

00:53:37.200 --> 00:53:39.349 align:start position:0%
 
this<00:53:37.440><c> is</c><00:53:37.520><c> actually</c><00:53:37.760><c> fairly</c><00:53:38.079><c> small</c><00:53:38.400><c> model</c><00:53:39.040><c> but</c>

00:53:39.349 --> 00:53:39.359 align:start position:0%
this is actually fairly small model but
 

00:53:39.359 --> 00:53:41.030 align:start position:0%
this is actually fairly small model but
these<00:53:39.520><c> models</c><00:53:39.839><c> can</c><00:53:40.000><c> get</c><00:53:40.160><c> larger</c><00:53:40.559><c> and</c><00:53:40.640><c> larger</c>

00:53:41.030 --> 00:53:41.040 align:start position:0%
these models can get larger and larger
 

00:53:41.040 --> 00:53:42.309 align:start position:0%
these models can get larger and larger
if<00:53:41.119><c> you</c><00:53:41.280><c> keep</c><00:53:41.440><c> adding</c><00:53:41.760><c> neurons</c><00:53:42.240><c> and</c>

00:53:42.309 --> 00:53:42.319 align:start position:0%
if you keep adding neurons and
 

00:53:42.319 --> 00:53:44.470 align:start position:0%
if you keep adding neurons and
parameters<00:53:43.359><c> so</c><00:53:43.599><c> you</c><00:53:43.680><c> can</c><00:53:43.839><c> imagine</c><00:53:44.160><c> that</c><00:53:44.319><c> we</c>

00:53:44.470 --> 00:53:44.480 align:start position:0%
parameters so you can imagine that we
 

00:53:44.480 --> 00:53:45.829 align:start position:0%
parameters so you can imagine that we
don't<00:53:44.800><c> potentially</c><00:53:45.280><c> have</c><00:53:45.520><c> a</c><00:53:45.599><c> thousand</c>

00:53:45.829 --> 00:53:45.839 align:start position:0%
don't potentially have a thousand
 

00:53:45.839 --> 00:53:47.750 align:start position:0%
don't potentially have a thousand
parameters<00:53:46.319><c> we</c><00:53:46.400><c> could</c><00:53:46.559><c> have</c><00:53:46.640><c> 10</c><00:53:46.960><c> 000</c><00:53:47.280><c> or</c><00:53:47.359><c> 100</c>

00:53:47.750 --> 00:53:47.760 align:start position:0%
parameters we could have 10 000 or 100
 

00:53:47.760 --> 00:53:49.829 align:start position:0%
parameters we could have 10 000 or 100
000<00:53:48.079><c> or</c><00:53:48.319><c> millions</c><00:53:48.640><c> of</c><00:53:48.800><c> parameters</c>

00:53:49.829 --> 00:53:49.839 align:start position:0%
000 or millions of parameters
 

00:53:49.839 --> 00:53:51.190 align:start position:0%
000 or millions of parameters
and<00:53:50.000><c> as</c><00:53:50.160><c> the</c><00:53:50.319><c> capacity</c><00:53:50.800><c> of</c><00:53:50.880><c> the</c><00:53:50.960><c> neural</c>

00:53:51.190 --> 00:53:51.200 align:start position:0%
and as the capacity of the neural
 

00:53:51.200 --> 00:53:52.790 align:start position:0%
and as the capacity of the neural
network<00:53:51.599><c> grows</c>

00:53:52.790 --> 00:53:52.800 align:start position:0%
network grows
 

00:53:52.800 --> 00:53:54.950 align:start position:0%
network grows
it<00:53:53.200><c> becomes</c><00:53:53.599><c> more</c><00:53:53.839><c> and</c><00:53:54.000><c> more</c><00:53:54.160><c> capable</c><00:53:54.720><c> of</c>

00:53:54.950 --> 00:53:54.960 align:start position:0%
it becomes more and more capable of
 

00:53:54.960 --> 00:53:56.870 align:start position:0%
it becomes more and more capable of
overfitting<00:53:55.520><c> your</c><00:53:55.680><c> training</c><00:53:56.000><c> set</c>

00:53:56.870 --> 00:53:56.880 align:start position:0%
overfitting your training set
 

00:53:56.880 --> 00:53:59.030 align:start position:0%
overfitting your training set
what<00:53:57.119><c> that</c><00:53:57.359><c> means</c><00:53:57.680><c> is</c><00:53:57.839><c> that</c><00:53:58.240><c> the</c><00:53:58.400><c> loss</c><00:53:58.800><c> on</c><00:53:58.880><c> the</c>

00:53:59.030 --> 00:53:59.040 align:start position:0%
what that means is that the loss on the
 

00:53:59.040 --> 00:54:00.790 align:start position:0%
what that means is that the loss on the
training<00:53:59.440><c> set</c><00:54:00.000><c> on</c><00:54:00.160><c> the</c><00:54:00.240><c> data</c><00:54:00.559><c> that</c><00:54:00.640><c> you're</c>

00:54:00.790 --> 00:54:00.800 align:start position:0%
training set on the data that you're
 

00:54:00.800 --> 00:54:03.430 align:start position:0%
training set on the data that you're
training<00:54:01.200><c> on</c><00:54:01.680><c> will</c><00:54:02.000><c> become</c><00:54:02.400><c> very</c><00:54:02.640><c> very</c><00:54:02.880><c> low</c><00:54:03.200><c> as</c>

00:54:03.430 --> 00:54:03.440 align:start position:0%
training on will become very very low as
 

00:54:03.440 --> 00:54:04.790 align:start position:0%
training on will become very very low as
low<00:54:03.599><c> as</c><00:54:03.839><c> zero</c>

00:54:04.790 --> 00:54:04.800 align:start position:0%
low as zero
 

00:54:04.800 --> 00:54:06.230 align:start position:0%
low as zero
but<00:54:05.040><c> all</c><00:54:05.200><c> that</c><00:54:05.359><c> the</c><00:54:05.440><c> model</c><00:54:05.760><c> is</c><00:54:05.839><c> doing</c><00:54:06.079><c> is</c>

00:54:06.230 --> 00:54:06.240 align:start position:0%
but all that the model is doing is
 

00:54:06.240 --> 00:54:09.030 align:start position:0%
but all that the model is doing is
memorizing<00:54:06.960><c> your</c><00:54:07.200><c> training</c><00:54:07.520><c> set</c><00:54:07.920><c> verbatim</c><00:54:08.880><c> so</c>

00:54:09.030 --> 00:54:09.040 align:start position:0%
memorizing your training set verbatim so
 

00:54:09.040 --> 00:54:10.630 align:start position:0%
memorizing your training set verbatim so
if<00:54:09.119><c> you</c><00:54:09.280><c> take</c><00:54:09.440><c> that</c><00:54:09.599><c> model</c><00:54:10.079><c> and</c><00:54:10.160><c> it</c><00:54:10.319><c> looks</c><00:54:10.480><c> like</c>

00:54:10.630 --> 00:54:10.640 align:start position:0%
if you take that model and it looks like
 

00:54:10.640 --> 00:54:12.390 align:start position:0%
if you take that model and it looks like
it's<00:54:10.800><c> working</c><00:54:11.040><c> really</c><00:54:11.280><c> well</c><00:54:11.760><c> but</c><00:54:11.920><c> you</c><00:54:12.079><c> try</c><00:54:12.240><c> to</c>

00:54:12.390 --> 00:54:12.400 align:start position:0%
it's working really well but you try to
 

00:54:12.400 --> 00:54:14.309 align:start position:0%
it's working really well but you try to
sample<00:54:12.720><c> from</c><00:54:12.960><c> it</c><00:54:13.359><c> you</c><00:54:13.520><c> will</c><00:54:13.680><c> basically</c><00:54:14.160><c> only</c>

00:54:14.309 --> 00:54:14.319 align:start position:0%
sample from it you will basically only
 

00:54:14.319 --> 00:54:16.390 align:start position:0%
sample from it you will basically only
get<00:54:14.559><c> examples</c><00:54:15.200><c> exactly</c><00:54:15.760><c> as</c><00:54:15.839><c> they</c><00:54:16.079><c> are</c><00:54:16.240><c> in</c><00:54:16.319><c> the</c>

00:54:16.390 --> 00:54:16.400 align:start position:0%
get examples exactly as they are in the
 

00:54:16.400 --> 00:54:19.030 align:start position:0%
get examples exactly as they are in the
training<00:54:16.720><c> set</c><00:54:17.040><c> you</c><00:54:17.119><c> won't</c><00:54:17.280><c> get</c><00:54:17.520><c> any</c><00:54:17.760><c> new</c><00:54:18.079><c> data</c>

00:54:19.030 --> 00:54:19.040 align:start position:0%
training set you won't get any new data
 

00:54:19.040 --> 00:54:20.470 align:start position:0%
training set you won't get any new data
in<00:54:19.280><c> addition</c><00:54:19.520><c> to</c><00:54:19.680><c> that</c><00:54:19.839><c> if</c><00:54:20.000><c> you</c><00:54:20.160><c> try</c><00:54:20.319><c> to</c>

00:54:20.470 --> 00:54:20.480 align:start position:0%
in addition to that if you try to
 

00:54:20.480 --> 00:54:23.510 align:start position:0%
in addition to that if you try to
evaluate<00:54:20.960><c> the</c><00:54:21.119><c> loss</c><00:54:21.680><c> on</c><00:54:21.839><c> some</c><00:54:22.160><c> withheld</c><00:54:23.040><c> names</c>

00:54:23.510 --> 00:54:23.520 align:start position:0%
evaluate the loss on some withheld names
 

00:54:23.520 --> 00:54:24.870 align:start position:0%
evaluate the loss on some withheld names
or<00:54:23.680><c> other</c><00:54:24.000><c> words</c>

00:54:24.870 --> 00:54:24.880 align:start position:0%
or other words
 

00:54:24.880 --> 00:54:26.390 align:start position:0%
or other words
you<00:54:25.040><c> will</c><00:54:25.200><c> actually</c><00:54:25.440><c> see</c><00:54:25.599><c> that</c><00:54:25.760><c> the</c><00:54:25.920><c> loss</c><00:54:26.319><c> on</c>

00:54:26.390 --> 00:54:26.400 align:start position:0%
you will actually see that the loss on
 

00:54:26.400 --> 00:54:29.030 align:start position:0%
you will actually see that the loss on
those<00:54:27.040><c> can</c><00:54:27.200><c> be</c><00:54:27.359><c> very</c><00:54:27.599><c> high</c><00:54:28.400><c> and</c><00:54:28.559><c> so</c><00:54:28.720><c> basically</c>

00:54:29.030 --> 00:54:29.040 align:start position:0%
those can be very high and so basically
 

00:54:29.040 --> 00:54:30.790 align:start position:0%
those can be very high and so basically
it's<00:54:29.280><c> not</c><00:54:29.599><c> a</c><00:54:29.680><c> good</c><00:54:29.839><c> model</c>

00:54:30.790 --> 00:54:30.800 align:start position:0%
it's not a good model
 

00:54:30.800 --> 00:54:32.870 align:start position:0%
it's not a good model
so<00:54:30.960><c> the</c><00:54:31.119><c> standard</c><00:54:31.440><c> in</c><00:54:31.520><c> the</c><00:54:31.599><c> field</c><00:54:31.920><c> is</c><00:54:32.480><c> to</c><00:54:32.559><c> split</c>

00:54:32.870 --> 00:54:32.880 align:start position:0%
so the standard in the field is to split
 

00:54:32.880 --> 00:54:35.270 align:start position:0%
so the standard in the field is to split
up<00:54:33.119><c> your</c><00:54:33.359><c> data</c><00:54:33.599><c> set</c><00:54:33.839><c> into</c><00:54:34.079><c> three</c><00:54:34.480><c> splits</c><00:54:35.040><c> as</c><00:54:35.119><c> we</c>

00:54:35.270 --> 00:54:35.280 align:start position:0%
up your data set into three splits as we
 

00:54:35.280 --> 00:54:37.670 align:start position:0%
up your data set into three splits as we
call<00:54:35.440><c> them</c><00:54:36.000><c> we</c><00:54:36.160><c> have</c><00:54:36.240><c> the</c><00:54:36.400><c> training</c><00:54:36.720><c> split</c><00:54:37.520><c> the</c>

00:54:37.670 --> 00:54:37.680 align:start position:0%
call them we have the training split the
 

00:54:37.680 --> 00:54:40.069 align:start position:0%
call them we have the training split the
dev<00:54:38.000><c> split</c><00:54:38.400><c> or</c><00:54:38.480><c> the</c><00:54:38.640><c> validation</c><00:54:39.119><c> split</c>

00:54:40.069 --> 00:54:40.079 align:start position:0%
dev split or the validation split
 

00:54:40.079 --> 00:54:42.309 align:start position:0%
dev split or the validation split
and<00:54:40.400><c> the</c><00:54:40.640><c> test</c><00:54:40.960><c> split</c>

00:54:42.309 --> 00:54:42.319 align:start position:0%
and the test split
 

00:54:42.319 --> 00:54:43.190 align:start position:0%
and the test split
so

00:54:43.190 --> 00:54:43.200 align:start position:0%
so
 

00:54:43.200 --> 00:54:45.510 align:start position:0%
so
training<00:54:43.599><c> split</c>

00:54:45.510 --> 00:54:45.520 align:start position:0%
training split
 

00:54:45.520 --> 00:54:49.910 align:start position:0%
training split
test<00:54:46.000><c> or</c><00:54:46.559><c> um</c><00:54:46.880><c> sorry</c><00:54:47.520><c> dev</c><00:54:47.839><c> or</c><00:54:48.240><c> validation</c><00:54:48.800><c> split</c>

00:54:49.910 --> 00:54:49.920 align:start position:0%
test or um sorry dev or validation split
 

00:54:49.920 --> 00:54:53.109 align:start position:0%
test or um sorry dev or validation split
and<00:54:50.400><c> test</c><00:54:50.839><c> split</c><00:54:51.920><c> and</c><00:54:52.160><c> typically</c><00:54:52.800><c> this</c><00:54:52.960><c> would</c>

00:54:53.109 --> 00:54:53.119 align:start position:0%
and test split and typically this would
 

00:54:53.119 --> 00:54:54.870 align:start position:0%
and test split and typically this would
be<00:54:53.280><c> say</c><00:54:53.440><c> eighty</c><00:54:53.760><c> percent</c><00:54:54.000><c> of</c><00:54:54.160><c> your</c><00:54:54.319><c> data</c><00:54:54.559><c> set</c>

00:54:54.870 --> 00:54:54.880 align:start position:0%
be say eighty percent of your data set
 

00:54:54.880 --> 00:54:56.390 align:start position:0%
be say eighty percent of your data set
this<00:54:55.040><c> could</c><00:54:55.200><c> be</c><00:54:55.359><c> ten</c><00:54:55.520><c> percent</c><00:54:56.000><c> and</c><00:54:56.079><c> this</c><00:54:56.240><c> ten</c>

00:54:56.390 --> 00:54:56.400 align:start position:0%
this could be ten percent and this ten
 

00:54:56.400 --> 00:54:58.309 align:start position:0%
this could be ten percent and this ten
percent<00:54:57.040><c> roughly</c>

00:54:58.309 --> 00:54:58.319 align:start position:0%
percent roughly
 

00:54:58.319 --> 00:54:59.990 align:start position:0%
percent roughly
so<00:54:58.480><c> you</c><00:54:58.559><c> have</c><00:54:58.720><c> these</c><00:54:58.880><c> three</c><00:54:59.119><c> splits</c><00:54:59.680><c> of</c><00:54:59.839><c> the</c>

00:54:59.990 --> 00:55:00.000 align:start position:0%
so you have these three splits of the
 

00:55:00.000 --> 00:55:01.349 align:start position:0%
so you have these three splits of the
data

00:55:01.349 --> 00:55:01.359 align:start position:0%
data
 

00:55:01.359 --> 00:55:02.790 align:start position:0%
data
now<00:55:01.680><c> these</c><00:55:01.920><c> eighty</c><00:55:02.160><c> percent</c><00:55:02.480><c> of</c><00:55:02.559><c> your</c>

00:55:02.790 --> 00:55:02.800 align:start position:0%
now these eighty percent of your
 

00:55:02.800 --> 00:55:04.630 align:start position:0%
now these eighty percent of your
trainings<00:55:03.200><c> of</c><00:55:03.599><c> the</c><00:55:03.680><c> data</c><00:55:04.000><c> set</c><00:55:04.160><c> the</c><00:55:04.319><c> training</c>

00:55:04.630 --> 00:55:04.640 align:start position:0%
trainings of the data set the training
 

00:55:04.640 --> 00:55:06.870 align:start position:0%
trainings of the data set the training
set<00:55:05.119><c> is</c><00:55:05.280><c> used</c><00:55:05.599><c> to</c><00:55:05.839><c> optimize</c><00:55:06.240><c> the</c><00:55:06.319><c> parameters</c>

00:55:06.870 --> 00:55:06.880 align:start position:0%
set is used to optimize the parameters
 

00:55:06.880 --> 00:55:08.630 align:start position:0%
set is used to optimize the parameters
of<00:55:06.960><c> the</c><00:55:07.119><c> model</c><00:55:07.440><c> just</c><00:55:07.599><c> like</c><00:55:07.760><c> we're</c><00:55:07.920><c> doing</c><00:55:08.160><c> here</c>

00:55:08.630 --> 00:55:08.640 align:start position:0%
of the model just like we're doing here
 

00:55:08.640 --> 00:55:10.710 align:start position:0%
of the model just like we're doing here
using<00:55:08.880><c> gradient</c><00:55:09.200><c> descent</c>

00:55:10.710 --> 00:55:10.720 align:start position:0%
using gradient descent
 

00:55:10.720 --> 00:55:12.470 align:start position:0%
using gradient descent
these<00:55:10.960><c> 10</c><00:55:11.119><c> percent</c><00:55:11.440><c> of</c><00:55:11.520><c> the</c>

00:55:12.470 --> 00:55:12.480 align:start position:0%
these 10 percent of the
 

00:55:12.480 --> 00:55:14.710 align:start position:0%
these 10 percent of the
examples<00:55:13.200><c> the</c><00:55:13.359><c> dev</c><00:55:13.599><c> or</c><00:55:13.680><c> validation</c><00:55:14.240><c> split</c>

00:55:14.710 --> 00:55:14.720 align:start position:0%
examples the dev or validation split
 

00:55:14.720 --> 00:55:16.790 align:start position:0%
examples the dev or validation split
they're<00:55:14.960><c> used</c><00:55:15.119><c> for</c><00:55:15.440><c> development</c><00:55:16.319><c> over</c><00:55:16.640><c> all</c>

00:55:16.790 --> 00:55:16.800 align:start position:0%
they're used for development over all
 

00:55:16.800 --> 00:55:19.109 align:start position:0%
they're used for development over all
the<00:55:16.880><c> hyper</c><00:55:17.280><c> parameters</c><00:55:17.920><c> of</c><00:55:18.000><c> your</c><00:55:18.160><c> model</c><00:55:18.960><c> so</c>

00:55:19.109 --> 00:55:19.119 align:start position:0%
the hyper parameters of your model so
 

00:55:19.119 --> 00:55:21.030 align:start position:0%
the hyper parameters of your model so
hyper<00:55:19.440><c> parameters</c><00:55:20.000><c> are</c><00:55:20.160><c> for</c><00:55:20.319><c> example</c><00:55:20.880><c> the</c>

00:55:21.030 --> 00:55:21.040 align:start position:0%
hyper parameters are for example the
 

00:55:21.040 --> 00:55:22.630 align:start position:0%
hyper parameters are for example the
size<00:55:21.280><c> of</c><00:55:21.359><c> this</c><00:55:21.520><c> hidden</c><00:55:21.839><c> layer</c>

00:55:22.630 --> 00:55:22.640 align:start position:0%
size of this hidden layer
 

00:55:22.640 --> 00:55:24.710 align:start position:0%
size of this hidden layer
the<00:55:22.800><c> size</c><00:55:23.119><c> of</c><00:55:23.200><c> the</c><00:55:23.359><c> embedding</c><00:55:24.160><c> so</c><00:55:24.319><c> this</c><00:55:24.559><c> is</c><00:55:24.640><c> a</c>

00:55:24.710 --> 00:55:24.720 align:start position:0%
the size of the embedding so this is a
 

00:55:24.720 --> 00:55:26.470 align:start position:0%
the size of the embedding so this is a
hundred<00:55:25.119><c> or</c><00:55:25.280><c> a</c><00:55:25.359><c> two</c><00:55:25.599><c> for</c><00:55:25.760><c> us</c><00:55:25.920><c> but</c><00:55:26.079><c> we</c><00:55:26.160><c> could</c><00:55:26.319><c> try</c>

00:55:26.470 --> 00:55:26.480 align:start position:0%
hundred or a two for us but we could try
 

00:55:26.480 --> 00:55:27.990 align:start position:0%
hundred or a two for us but we could try
different<00:55:26.800><c> things</c>

00:55:27.990 --> 00:55:28.000 align:start position:0%
different things
 

00:55:28.000 --> 00:55:29.910 align:start position:0%
different things
the<00:55:28.160><c> strength</c><00:55:28.400><c> of</c><00:55:28.480><c> the</c><00:55:28.640><c> regularization</c><00:55:29.760><c> which</c>

00:55:29.910 --> 00:55:29.920 align:start position:0%
the strength of the regularization which
 

00:55:29.920 --> 00:55:31.910 align:start position:0%
the strength of the regularization which
we<00:55:30.079><c> aren't</c><00:55:30.400><c> using</c><00:55:30.640><c> yet</c><00:55:30.880><c> so</c><00:55:31.119><c> far</c>

00:55:31.910 --> 00:55:31.920 align:start position:0%
we aren't using yet so far
 

00:55:31.920 --> 00:55:33.109 align:start position:0%
we aren't using yet so far
so<00:55:32.079><c> there's</c><00:55:32.240><c> lots</c><00:55:32.480><c> of</c><00:55:32.559><c> different</c><00:55:32.800><c> hybrid</c>

00:55:33.109 --> 00:55:33.119 align:start position:0%
so there's lots of different hybrid
 

00:55:33.119 --> 00:55:34.710 align:start position:0%
so there's lots of different hybrid
parameters<00:55:33.680><c> and</c><00:55:33.839><c> settings</c><00:55:34.240><c> that</c><00:55:34.400><c> go</c><00:55:34.559><c> into</c>

00:55:34.710 --> 00:55:34.720 align:start position:0%
parameters and settings that go into
 

00:55:34.720 --> 00:55:36.790 align:start position:0%
parameters and settings that go into
defining<00:55:35.040><c> your</c><00:55:35.200><c> neural</c><00:55:35.440><c> net</c><00:55:36.079><c> and</c><00:55:36.240><c> you</c><00:55:36.319><c> can</c><00:55:36.480><c> try</c>

00:55:36.790 --> 00:55:36.800 align:start position:0%
defining your neural net and you can try
 

00:55:36.800 --> 00:55:38.790 align:start position:0%
defining your neural net and you can try
many<00:55:36.960><c> different</c><00:55:37.280><c> variations</c><00:55:37.920><c> of</c><00:55:38.000><c> them</c><00:55:38.640><c> and</c>

00:55:38.790 --> 00:55:38.800 align:start position:0%
many different variations of them and
 

00:55:38.800 --> 00:55:41.109 align:start position:0%
many different variations of them and
see<00:55:38.960><c> whichever</c><00:55:39.359><c> one</c><00:55:39.599><c> works</c><00:55:39.920><c> best</c><00:55:40.319><c> on</c><00:55:40.559><c> your</c>

00:55:41.109 --> 00:55:41.119 align:start position:0%
see whichever one works best on your
 

00:55:41.119 --> 00:55:43.109 align:start position:0%
see whichever one works best on your
validation<00:55:41.680><c> split</c>

00:55:43.109 --> 00:55:43.119 align:start position:0%
validation split
 

00:55:43.119 --> 00:55:45.750 align:start position:0%
validation split
so<00:55:43.599><c> this</c><00:55:43.839><c> is</c><00:55:44.079><c> used</c><00:55:44.319><c> to</c><00:55:44.400><c> train</c><00:55:44.559><c> the</c><00:55:44.720><c> parameters</c>

00:55:45.750 --> 00:55:45.760 align:start position:0%
so this is used to train the parameters
 

00:55:45.760 --> 00:55:48.630 align:start position:0%
so this is used to train the parameters
this<00:55:46.000><c> is</c><00:55:46.160><c> used</c><00:55:46.400><c> to</c><00:55:46.559><c> train</c><00:55:47.040><c> the</c><00:55:47.119><c> hyperprimers</c>

00:55:48.630 --> 00:55:48.640 align:start position:0%
this is used to train the hyperprimers
 

00:55:48.640 --> 00:55:51.670 align:start position:0%
this is used to train the hyperprimers
and<00:55:48.960><c> test</c><00:55:49.520><c> split</c><00:55:49.920><c> is</c><00:55:50.079><c> used</c><00:55:50.319><c> to</c><00:55:50.480><c> evaluate</c>

00:55:51.670 --> 00:55:51.680 align:start position:0%
and test split is used to evaluate
 

00:55:51.680 --> 00:55:53.030 align:start position:0%
and test split is used to evaluate
basically<00:55:52.079><c> the</c><00:55:52.160><c> performance</c><00:55:52.559><c> of</c><00:55:52.640><c> the</c><00:55:52.720><c> model</c>

00:55:53.030 --> 00:55:53.040 align:start position:0%
basically the performance of the model
 

00:55:53.040 --> 00:55:54.069 align:start position:0%
basically the performance of the model
at<00:55:53.119><c> the</c><00:55:53.280><c> end</c>

00:55:54.069 --> 00:55:54.079 align:start position:0%
at the end
 

00:55:54.079 --> 00:55:55.910 align:start position:0%
at the end
so<00:55:54.319><c> we're</c><00:55:54.559><c> only</c><00:55:54.720><c> evaluating</c><00:55:55.280><c> the</c><00:55:55.440><c> loss</c><00:55:55.680><c> on</c><00:55:55.839><c> the</c>

00:55:55.910 --> 00:55:55.920 align:start position:0%
so we're only evaluating the loss on the
 

00:55:55.920 --> 00:55:57.829 align:start position:0%
so we're only evaluating the loss on the
test<00:55:56.160><c> plate</c><00:55:56.400><c> very</c><00:55:56.559><c> very</c><00:55:56.799><c> sparingly</c><00:55:57.440><c> and</c><00:55:57.599><c> very</c>

00:55:57.829 --> 00:55:57.839 align:start position:0%
test plate very very sparingly and very
 

00:55:57.839 --> 00:56:00.390 align:start position:0%
test plate very very sparingly and very
few<00:55:58.079><c> times</c><00:55:58.799><c> because</c><00:55:59.200><c> every</c><00:55:59.440><c> single</c><00:55:59.760><c> time</c><00:56:00.160><c> you</c>

00:56:00.390 --> 00:56:00.400 align:start position:0%
few times because every single time you
 

00:56:00.400 --> 00:56:02.549 align:start position:0%
few times because every single time you
evaluate<00:56:00.960><c> your</c><00:56:01.119><c> test</c><00:56:01.440><c> loss</c><00:56:02.000><c> and</c><00:56:02.079><c> you</c><00:56:02.240><c> learn</c>

00:56:02.549 --> 00:56:02.559 align:start position:0%
evaluate your test loss and you learn
 

00:56:02.559 --> 00:56:03.829 align:start position:0%
evaluate your test loss and you learn
something<00:56:02.960><c> from</c><00:56:03.200><c> it</c>

00:56:03.829 --> 00:56:03.839 align:start position:0%
something from it
 

00:56:03.839 --> 00:56:06.470 align:start position:0%
something from it
you<00:56:04.079><c> are</c><00:56:04.160><c> basically</c><00:56:04.640><c> starting</c><00:56:04.960><c> to</c><00:56:05.520><c> also</c><00:56:06.000><c> train</c>

00:56:06.470 --> 00:56:06.480 align:start position:0%
you are basically starting to also train
 

00:56:06.480 --> 00:56:07.990 align:start position:0%
you are basically starting to also train
on<00:56:06.640><c> the</c><00:56:06.799><c> test</c><00:56:07.119><c> split</c>

00:56:07.990 --> 00:56:08.000 align:start position:0%
on the test split
 

00:56:08.000 --> 00:56:10.470 align:start position:0%
on the test split
so<00:56:08.319><c> you</c><00:56:08.559><c> are</c><00:56:08.720><c> only</c><00:56:08.960><c> allowed</c><00:56:09.280><c> to</c><00:56:09.599><c> test</c><00:56:09.920><c> the</c><00:56:10.079><c> loss</c>

00:56:10.470 --> 00:56:10.480 align:start position:0%
so you are only allowed to test the loss
 

00:56:10.480 --> 00:56:11.589 align:start position:0%
so you are only allowed to test the loss
on<00:56:10.640><c> a</c><00:56:10.720><c> test</c>

00:56:11.589 --> 00:56:11.599 align:start position:0%
on a test
 

00:56:11.599 --> 00:56:13.109 align:start position:0%
on a test
set

00:56:13.109 --> 00:56:13.119 align:start position:0%
set
 

00:56:13.119 --> 00:56:15.670 align:start position:0%
set
very<00:56:13.359><c> very</c><00:56:13.520><c> few</c><00:56:13.760><c> times</c><00:56:14.240><c> otherwise</c><00:56:14.720><c> you</c><00:56:15.119><c> risk</c>

00:56:15.670 --> 00:56:15.680 align:start position:0%
very very few times otherwise you risk
 

00:56:15.680 --> 00:56:17.589 align:start position:0%
very very few times otherwise you risk
overfitting<00:56:16.319><c> to</c><00:56:16.559><c> it</c><00:56:16.799><c> as</c><00:56:16.880><c> well</c><00:56:17.280><c> as</c><00:56:17.359><c> you</c>

00:56:17.589 --> 00:56:17.599 align:start position:0%
overfitting to it as well as you
 

00:56:17.599 --> 00:56:19.510 align:start position:0%
overfitting to it as well as you
experiment<00:56:18.240><c> on</c><00:56:18.319><c> your</c><00:56:18.480><c> model</c>

00:56:19.510 --> 00:56:19.520 align:start position:0%
experiment on your model
 

00:56:19.520 --> 00:56:21.990 align:start position:0%
experiment on your model
so<00:56:19.680><c> let's</c><00:56:20.000><c> also</c><00:56:20.240><c> split</c><00:56:20.559><c> up</c><00:56:20.799><c> our</c><00:56:21.040><c> training</c><00:56:21.520><c> data</c>

00:56:21.990 --> 00:56:22.000 align:start position:0%
so let's also split up our training data
 

00:56:22.000 --> 00:56:25.030 align:start position:0%
so let's also split up our training data
into<00:56:22.480><c> train</c><00:56:23.040><c> dev</c><00:56:23.440><c> and</c><00:56:23.520><c> test</c><00:56:24.319><c> and</c><00:56:24.480><c> then</c><00:56:24.799><c> we</c><00:56:24.960><c> are</c>

00:56:25.030 --> 00:56:25.040 align:start position:0%
into train dev and test and then we are
 

00:56:25.040 --> 00:56:26.549 align:start position:0%
into train dev and test and then we are
going<00:56:25.200><c> to</c><00:56:25.280><c> train</c><00:56:25.599><c> on</c><00:56:25.680><c> train</c>

00:56:26.549 --> 00:56:26.559 align:start position:0%
going to train on train
 

00:56:26.559 --> 00:56:28.230 align:start position:0%
going to train on train
and<00:56:26.799><c> only</c><00:56:27.040><c> evaluate</c><00:56:27.520><c> on</c><00:56:27.599><c> tests</c><00:56:27.920><c> very</c><00:56:28.079><c> very</c>

00:56:28.230 --> 00:56:28.240 align:start position:0%
and only evaluate on tests very very
 

00:56:28.240 --> 00:56:31.109 align:start position:0%
and only evaluate on tests very very
sparingly<00:56:29.280><c> okay</c><00:56:29.520><c> so</c><00:56:29.680><c> here</c><00:56:29.839><c> we</c><00:56:30.000><c> go</c>

00:56:31.109 --> 00:56:31.119 align:start position:0%
sparingly okay so here we go
 

00:56:31.119 --> 00:56:33.430 align:start position:0%
sparingly okay so here we go
here<00:56:31.440><c> is</c><00:56:31.680><c> where</c><00:56:31.839><c> we</c><00:56:32.160><c> took</c><00:56:32.480><c> all</c><00:56:32.640><c> the</c><00:56:32.799><c> words</c><00:56:33.280><c> and</c>

00:56:33.430 --> 00:56:33.440 align:start position:0%
here is where we took all the words and
 

00:56:33.440 --> 00:56:36.150 align:start position:0%
here is where we took all the words and
put<00:56:33.599><c> them</c><00:56:33.920><c> into</c><00:56:34.240><c> x</c><00:56:34.480><c> and</c><00:56:34.640><c> y</c><00:56:34.880><c> tensors</c>

00:56:36.150 --> 00:56:36.160 align:start position:0%
put them into x and y tensors
 

00:56:36.160 --> 00:56:38.230 align:start position:0%
put them into x and y tensors
so<00:56:36.319><c> instead</c><00:56:36.960><c> let</c><00:56:37.119><c> me</c><00:56:37.200><c> create</c><00:56:37.440><c> a</c><00:56:37.520><c> new</c><00:56:37.680><c> cell</c><00:56:37.920><c> here</c>

00:56:38.230 --> 00:56:38.240 align:start position:0%
so instead let me create a new cell here
 

00:56:38.240 --> 00:56:39.910 align:start position:0%
so instead let me create a new cell here
and<00:56:38.319><c> let</c><00:56:38.480><c> me</c><00:56:38.559><c> just</c><00:56:38.720><c> copy</c><00:56:39.040><c> paste</c><00:56:39.440><c> some</c><00:56:39.680><c> code</c>

00:56:39.910 --> 00:56:39.920 align:start position:0%
and let me just copy paste some code
 

00:56:39.920 --> 00:56:40.789 align:start position:0%
and let me just copy paste some code
here

00:56:40.789 --> 00:56:40.799 align:start position:0%
here
 

00:56:40.799 --> 00:56:43.030 align:start position:0%
here
because<00:56:41.119><c> i</c><00:56:41.200><c> don't</c><00:56:41.359><c> think</c><00:56:41.599><c> it's</c><00:56:41.760><c> that</c>

00:56:43.030 --> 00:56:43.040 align:start position:0%
because i don't think it's that
 

00:56:43.040 --> 00:56:45.349 align:start position:0%
because i don't think it's that
complex<00:56:44.000><c> but</c>

00:56:45.349 --> 00:56:45.359 align:start position:0%
complex but
 

00:56:45.359 --> 00:56:46.470 align:start position:0%
complex but
we're<00:56:45.520><c> going</c><00:56:45.599><c> to</c><00:56:45.680><c> try</c><00:56:45.839><c> to</c><00:56:45.920><c> save</c><00:56:46.160><c> a</c><00:56:46.160><c> little</c><00:56:46.319><c> bit</c>

00:56:46.470 --> 00:56:46.480 align:start position:0%
we're going to try to save a little bit
 

00:56:46.480 --> 00:56:47.589 align:start position:0%
we're going to try to save a little bit
of<00:56:46.559><c> time</c>

00:56:47.589 --> 00:56:47.599 align:start position:0%
of time
 

00:56:47.599 --> 00:56:49.589 align:start position:0%
of time
i'm<00:56:47.760><c> converting</c><00:56:48.160><c> this</c><00:56:48.319><c> to</c><00:56:48.480><c> be</c><00:56:48.559><c> a</c><00:56:48.640><c> function</c><00:56:49.040><c> now</c>

00:56:49.589 --> 00:56:49.599 align:start position:0%
i'm converting this to be a function now
 

00:56:49.599 --> 00:56:51.510 align:start position:0%
i'm converting this to be a function now
and<00:56:49.760><c> this</c><00:56:50.000><c> function</c><00:56:50.400><c> takes</c><00:56:50.880><c> some</c><00:56:51.119><c> list</c><00:56:51.359><c> of</c>

00:56:51.510 --> 00:56:51.520 align:start position:0%
and this function takes some list of
 

00:56:51.520 --> 00:56:54.309 align:start position:0%
and this function takes some list of
words<00:56:52.240><c> and</c><00:56:52.400><c> builds</c><00:56:52.799><c> the</c><00:56:52.960><c> arrays</c><00:56:53.440><c> x</c><00:56:53.599><c> and</c><00:56:53.760><c> y</c><00:56:54.079><c> for</c>

00:56:54.309 --> 00:56:54.319 align:start position:0%
words and builds the arrays x and y for
 

00:56:54.319 --> 00:56:56.549 align:start position:0%
words and builds the arrays x and y for
those<00:56:54.640><c> words</c><00:56:55.040><c> only</c>

00:56:56.549 --> 00:56:56.559 align:start position:0%
those words only
 

00:56:56.559 --> 00:56:59.270 align:start position:0%
those words only
and<00:56:56.640><c> then</c><00:56:56.880><c> here</c><00:56:57.520><c> i</c><00:56:57.760><c> am</c><00:56:58.400><c> shuffling</c><00:56:58.880><c> up</c><00:56:59.040><c> all</c><00:56:59.119><c> the</c>

00:56:59.270 --> 00:56:59.280 align:start position:0%
and then here i am shuffling up all the
 

00:56:59.280 --> 00:57:01.349 align:start position:0%
and then here i am shuffling up all the
words<00:56:59.839><c> so</c><00:57:00.240><c> these</c><00:57:00.480><c> are</c><00:57:00.559><c> the</c><00:57:00.720><c> input</c><00:57:00.960><c> words</c><00:57:01.200><c> that</c>

00:57:01.349 --> 00:57:01.359 align:start position:0%
words so these are the input words that
 

00:57:01.359 --> 00:57:02.230 align:start position:0%
words so these are the input words that
we<00:57:01.440><c> get</c>

00:57:02.230 --> 00:57:02.240 align:start position:0%
we get
 

00:57:02.240 --> 00:57:04.870 align:start position:0%
we get
we<00:57:02.400><c> are</c><00:57:02.559><c> randomly</c><00:57:03.040><c> shuffling</c><00:57:03.440><c> them</c><00:57:03.599><c> all</c><00:57:03.760><c> up</c>

00:57:04.870 --> 00:57:04.880 align:start position:0%
we are randomly shuffling them all up
 

00:57:04.880 --> 00:57:06.630 align:start position:0%
we are randomly shuffling them all up
and<00:57:05.119><c> then</c><00:57:05.599><c> um</c>

00:57:06.630 --> 00:57:06.640 align:start position:0%
and then um
 

00:57:06.640 --> 00:57:08.150 align:start position:0%
and then um
we're<00:57:06.880><c> going</c><00:57:07.040><c> to</c>

00:57:08.150 --> 00:57:08.160 align:start position:0%
we're going to
 

00:57:08.160 --> 00:57:09.910 align:start position:0%
we're going to
set<00:57:08.480><c> n1</c><00:57:08.880><c> to</c><00:57:09.040><c> be</c>

00:57:09.910 --> 00:57:09.920 align:start position:0%
set n1 to be
 

00:57:09.920 --> 00:57:11.670 align:start position:0%
set n1 to be
the<00:57:10.079><c> number</c><00:57:10.240><c> of</c><00:57:10.400><c> examples</c><00:57:10.880><c> that</c><00:57:10.880><c> there's</c><00:57:11.119><c> 80</c>

00:57:11.670 --> 00:57:11.680 align:start position:0%
the number of examples that there's 80
 

00:57:11.680 --> 00:57:13.750 align:start position:0%
the number of examples that there's 80
of<00:57:11.839><c> the</c><00:57:11.920><c> words</c><00:57:12.400><c> and</c><00:57:12.559><c> n2</c><00:57:12.960><c> to</c><00:57:13.040><c> be</c>

00:57:13.750 --> 00:57:13.760 align:start position:0%
of the words and n2 to be
 

00:57:13.760 --> 00:57:14.549 align:start position:0%
of the words and n2 to be
90

00:57:14.549 --> 00:57:14.559 align:start position:0%
90
 

00:57:14.559 --> 00:57:16.950 align:start position:0%
90
of<00:57:14.640><c> the</c><00:57:14.799><c> way</c><00:57:15.119><c> of</c><00:57:15.200><c> the</c><00:57:15.359><c> words</c><00:57:16.160><c> so</c><00:57:16.319><c> basically</c><00:57:16.799><c> if</c>

00:57:16.950 --> 00:57:16.960 align:start position:0%
of the way of the words so basically if
 

00:57:16.960 --> 00:57:21.589 align:start position:0%
of the way of the words so basically if
len<00:57:17.200><c> of</c><00:57:17.359><c> words</c><00:57:17.920><c> is</c><00:57:18.480><c> 32</c><00:57:18.960><c> 000</c><00:57:19.680><c> n1</c><00:57:20.319><c> is</c>

00:57:21.589 --> 00:57:21.599 align:start position:0%
len of words is 32 000 n1 is
 

00:57:21.599 --> 00:57:24.309 align:start position:0%
len of words is 32 000 n1 is
well<00:57:21.839><c> sorry</c><00:57:22.079><c> i</c><00:57:22.160><c> should</c><00:57:22.240><c> probably</c><00:57:22.559><c> run</c><00:57:22.720><c> this</c>

00:57:24.309 --> 00:57:24.319 align:start position:0%
well sorry i should probably run this
 

00:57:24.319 --> 00:57:28.150 align:start position:0%
well sorry i should probably run this
n1<00:57:24.720><c> is</c><00:57:24.960><c> 25</c><00:57:25.520><c> 000</c><00:57:25.839><c> and</c><00:57:26.079><c> n2</c><00:57:26.559><c> is</c><00:57:26.720><c> 28</c><00:57:27.280><c> 000.</c>

00:57:28.150 --> 00:57:28.160 align:start position:0%
n1 is 25 000 and n2 is 28 000.
 

00:57:28.160 --> 00:57:29.829 align:start position:0%
n1 is 25 000 and n2 is 28 000.
and<00:57:28.319><c> so</c><00:57:28.559><c> here</c><00:57:28.720><c> we</c><00:57:28.880><c> see</c><00:57:29.040><c> that</c>

00:57:29.829 --> 00:57:29.839 align:start position:0%
and so here we see that
 

00:57:29.839 --> 00:57:31.990 align:start position:0%
and so here we see that
i'm<00:57:30.000><c> calling</c><00:57:30.319><c> build</c><00:57:30.559><c> data</c><00:57:30.799><c> set</c><00:57:31.440><c> to</c><00:57:31.599><c> build</c><00:57:31.839><c> the</c>

00:57:31.990 --> 00:57:32.000 align:start position:0%
i'm calling build data set to build the
 

00:57:32.000 --> 00:57:33.910 align:start position:0%
i'm calling build data set to build the
training<00:57:32.319><c> set</c><00:57:32.640><c> x</c><00:57:32.880><c> and</c><00:57:33.040><c> y</c>

00:57:33.910 --> 00:57:33.920 align:start position:0%
training set x and y
 

00:57:33.920 --> 00:57:36.710 align:start position:0%
training set x and y
by<00:57:34.240><c> indexing</c><00:57:34.799><c> into</c><00:57:35.119><c> up</c><00:57:35.280><c> to</c><00:57:35.680><c> and</c><00:57:35.839><c> one</c><00:57:36.480><c> so</c><00:57:36.640><c> we're</c>

00:57:36.710 --> 00:57:36.720 align:start position:0%
by indexing into up to and one so we're
 

00:57:36.720 --> 00:57:39.670 align:start position:0%
by indexing into up to and one so we're
going<00:57:36.880><c> to</c><00:57:36.960><c> have</c><00:57:37.040><c> only</c><00:57:37.280><c> 25</c><00:57:37.839><c> 000</c><00:57:38.160><c> training</c><00:57:38.480><c> words</c>

00:57:39.670 --> 00:57:39.680 align:start position:0%
going to have only 25 000 training words
 

00:57:39.680 --> 00:57:42.470 align:start position:0%
going to have only 25 000 training words
and<00:57:39.760><c> then</c><00:57:39.920><c> we're</c><00:57:40.079><c> going</c><00:57:40.319><c> to</c><00:57:40.480><c> have</c>

00:57:42.470 --> 00:57:42.480 align:start position:0%
and then we're going to have
 

00:57:42.480 --> 00:57:44.230 align:start position:0%
and then we're going to have
roughly

00:57:44.230 --> 00:57:44.240 align:start position:0%
roughly
 

00:57:44.240 --> 00:57:46.069 align:start position:0%
roughly
n2<00:57:44.640><c> minus</c><00:57:45.040><c> n1</c>

00:57:46.069 --> 00:57:46.079 align:start position:0%
n2 minus n1
 

00:57:46.079 --> 00:57:49.510 align:start position:0%
n2 minus n1
3<00:57:46.480><c> 3</c><00:57:46.720><c> 000</c><00:57:47.359><c> validation</c><00:57:47.920><c> examples</c><00:57:48.799><c> or</c><00:57:49.040><c> dev</c>

00:57:49.510 --> 00:57:49.520 align:start position:0%
3 3 000 validation examples or dev
 

00:57:49.520 --> 00:57:53.510 align:start position:0%
3 3 000 validation examples or dev
examples<00:57:50.400><c> and</c><00:57:50.559><c> we're</c><00:57:50.720><c> going</c><00:57:50.960><c> to</c><00:57:51.119><c> have</c>

00:57:53.510 --> 00:57:53.520 align:start position:0%
 
 

00:57:53.520 --> 00:57:57.270 align:start position:0%
 
when<00:57:53.839><c> of</c><00:57:54.000><c> words</c><00:57:54.400><c> basically</c><00:57:55.440><c> minus</c><00:57:55.920><c> and</c><00:57:56.160><c> two</c>

00:57:57.270 --> 00:57:57.280 align:start position:0%
when of words basically minus and two
 

00:57:57.280 --> 00:57:58.150 align:start position:0%
when of words basically minus and two
or

00:57:58.150 --> 00:57:58.160 align:start position:0%
or
 

00:57:58.160 --> 00:58:00.950 align:start position:0%
or
3<00:57:58.640><c> 204</c><00:57:59.760><c> examples</c>

00:58:00.950 --> 00:58:00.960 align:start position:0%
3 204 examples
 

00:58:00.960 --> 00:58:03.670 align:start position:0%
3 204 examples
here<00:58:01.520><c> for</c><00:58:01.680><c> the</c><00:58:01.920><c> test</c><00:58:02.400><c> set</c>

00:58:03.670 --> 00:58:03.680 align:start position:0%
here for the test set
 

00:58:03.680 --> 00:58:04.789 align:start position:0%
here for the test set
so

00:58:04.789 --> 00:58:04.799 align:start position:0%
so
 

00:58:04.799 --> 00:58:07.109 align:start position:0%
so
now<00:58:04.960><c> we</c><00:58:05.119><c> have</c><00:58:05.440><c> x's</c><00:58:05.920><c> and</c><00:58:06.079><c> y's</c>

00:58:07.109 --> 00:58:07.119 align:start position:0%
now we have x's and y's
 

00:58:07.119 --> 00:58:13.349 align:start position:0%
now we have x's and y's
for<00:58:07.359><c> all</c><00:58:07.440><c> those</c><00:58:07.680><c> three</c><00:58:08.000><c> splits</c>

00:58:13.349 --> 00:58:13.359 align:start position:0%
 
 

00:58:13.359 --> 00:58:14.549 align:start position:0%
 
oh<00:58:13.520><c> yeah</c><00:58:13.680><c> i'm</c><00:58:13.760><c> printing</c><00:58:14.000><c> their</c><00:58:14.160><c> size</c><00:58:14.400><c> here</c>

00:58:14.549 --> 00:58:14.559 align:start position:0%
oh yeah i'm printing their size here
 

00:58:14.559 --> 00:58:18.870 align:start position:0%
oh yeah i'm printing their size here
inside<00:58:14.799><c> the</c><00:58:14.880><c> function</c><00:58:15.200><c> as</c><00:58:15.280><c> well</c>

00:58:18.870 --> 00:58:18.880 align:start position:0%
 
 

00:58:18.880 --> 00:58:20.549 align:start position:0%
 
but<00:58:19.119><c> here</c><00:58:19.440><c> we</c><00:58:19.599><c> don't</c><00:58:19.760><c> have</c><00:58:19.920><c> words</c><00:58:20.240><c> but</c><00:58:20.319><c> these</c>

00:58:20.549 --> 00:58:20.559 align:start position:0%
but here we don't have words but these
 

00:58:20.559 --> 00:58:22.549 align:start position:0%
but here we don't have words but these
are<00:58:20.720><c> already</c><00:58:21.040><c> the</c><00:58:21.200><c> individual</c><00:58:21.680><c> examples</c><00:58:22.240><c> made</c>

00:58:22.549 --> 00:58:22.559 align:start position:0%
are already the individual examples made
 

00:58:22.559 --> 00:58:25.190 align:start position:0%
are already the individual examples made
from<00:58:22.799><c> those</c><00:58:23.040><c> words</c>

00:58:25.190 --> 00:58:25.200 align:start position:0%
from those words
 

00:58:25.200 --> 00:58:27.589 align:start position:0%
from those words
so<00:58:25.359><c> let's</c><00:58:25.520><c> now</c><00:58:25.680><c> scroll</c><00:58:26.000><c> down</c><00:58:26.160><c> here</c>

00:58:27.589 --> 00:58:27.599 align:start position:0%
so let's now scroll down here
 

00:58:27.599 --> 00:58:31.190 align:start position:0%
so let's now scroll down here
and<00:58:27.760><c> the</c><00:58:27.920><c> data</c><00:58:28.240><c> set</c><00:58:28.400><c> now</c><00:58:28.559><c> for</c><00:58:28.799><c> training</c><00:58:29.440><c> is</c>

00:58:31.190 --> 00:58:31.200 align:start position:0%
and the data set now for training is
 

00:58:31.200 --> 00:58:33.190 align:start position:0%
and the data set now for training is
more<00:58:31.440><c> like</c><00:58:31.599><c> this</c>

00:58:33.190 --> 00:58:33.200 align:start position:0%
more like this
 

00:58:33.200 --> 00:58:38.309 align:start position:0%
more like this
and<00:58:33.359><c> then</c><00:58:33.520><c> when</c><00:58:33.760><c> we</c><00:58:34.400><c> reset</c><00:58:34.799><c> the</c><00:58:34.880><c> network</c>

00:58:38.309 --> 00:58:38.319 align:start position:0%
 
 

00:58:38.319 --> 00:58:40.069 align:start position:0%
 
when<00:58:38.480><c> we're</c><00:58:38.720><c> training</c><00:58:39.280><c> we're</c><00:58:39.520><c> only</c><00:58:39.760><c> going</c><00:58:40.000><c> to</c>

00:58:40.069 --> 00:58:40.079 align:start position:0%
when we're training we're only going to
 

00:58:40.079 --> 00:58:43.910 align:start position:0%
when we're training we're only going to
be<00:58:40.319><c> training</c><00:58:40.799><c> using</c><00:58:41.280><c> x</c><00:58:41.839><c> train</c>

00:58:43.910 --> 00:58:43.920 align:start position:0%
be training using x train
 

00:58:43.920 --> 00:58:47.750 align:start position:0%
be training using x train
x<00:58:44.400><c> train</c><00:58:45.200><c> and</c><00:58:45.440><c> y</c><00:58:46.079><c> train</c>

00:58:47.750 --> 00:58:47.760 align:start position:0%
x train and y train
 

00:58:47.760 --> 00:58:49.270 align:start position:0%
x train and y train
so<00:58:47.920><c> that's</c><00:58:48.160><c> the</c><00:58:48.240><c> only</c><00:58:48.400><c> thing</c><00:58:48.559><c> we're</c><00:58:48.960><c> training</c>

00:58:49.270 --> 00:58:49.280 align:start position:0%
so that's the only thing we're training
 

00:58:49.280 --> 00:58:57.670 align:start position:0%
so that's the only thing we're training
on

00:58:57.670 --> 00:58:57.680 align:start position:0%
 
 

00:58:57.680 --> 00:59:00.150 align:start position:0%
 
let's<00:58:58.319><c> see</c><00:58:58.559><c> where</c><00:58:58.720><c> we</c><00:58:58.880><c> are</c><00:58:59.119><c> on</c><00:58:59.200><c> the</c>

00:59:00.150 --> 00:59:00.160 align:start position:0%
let's see where we are on the
 

00:59:00.160 --> 00:59:02.150 align:start position:0%
let's see where we are on the
single<00:59:00.480><c> batch</c>

00:59:02.150 --> 00:59:02.160 align:start position:0%
single batch
 

00:59:02.160 --> 00:59:07.990 align:start position:0%
single batch
let's<00:59:02.400><c> now</c><00:59:02.559><c> train</c><00:59:02.880><c> maybe</c><00:59:03.359><c> a</c><00:59:03.440><c> few</c><00:59:03.599><c> more</c><00:59:03.839><c> steps</c>

00:59:07.990 --> 00:59:08.000 align:start position:0%
 
 

00:59:08.000 --> 00:59:09.349 align:start position:0%
 
training<00:59:08.319><c> neural</c><00:59:08.559><c> networks</c><00:59:08.880><c> can</c><00:59:09.040><c> take</c><00:59:09.200><c> a</c>

00:59:09.349 --> 00:59:09.359 align:start position:0%
training neural networks can take a
 

00:59:09.359 --> 00:59:11.190 align:start position:0%
training neural networks can take a
while<00:59:09.680><c> usually</c><00:59:10.000><c> you</c><00:59:10.079><c> don't</c><00:59:10.240><c> do</c><00:59:10.319><c> it</c><00:59:10.480><c> inline</c><00:59:11.040><c> you</c>

00:59:11.190 --> 00:59:11.200 align:start position:0%
while usually you don't do it inline you
 

00:59:11.200 --> 00:59:12.710 align:start position:0%
while usually you don't do it inline you
launch<00:59:11.440><c> a</c><00:59:11.520><c> bunch</c><00:59:11.760><c> of</c><00:59:11.839><c> jobs</c><00:59:12.160><c> and</c><00:59:12.240><c> you</c><00:59:12.319><c> wait</c><00:59:12.559><c> for</c>

00:59:12.710 --> 00:59:12.720 align:start position:0%
launch a bunch of jobs and you wait for
 

00:59:12.720 --> 00:59:15.270 align:start position:0%
launch a bunch of jobs and you wait for
them<00:59:12.799><c> to</c><00:59:12.960><c> finish</c><00:59:13.760><c> um</c><00:59:14.480><c> can</c><00:59:14.640><c> take</c><00:59:14.880><c> in</c><00:59:14.960><c> multiple</c>

00:59:15.270 --> 00:59:15.280 align:start position:0%
them to finish um can take in multiple
 

00:59:15.280 --> 00:59:16.630 align:start position:0%
them to finish um can take in multiple
days<00:59:15.599><c> and</c><00:59:15.680><c> so</c><00:59:15.839><c> on</c>

00:59:16.630 --> 00:59:16.640 align:start position:0%
days and so on
 

00:59:16.640 --> 00:59:20.950 align:start position:0%
days and so on
luckily<00:59:16.960><c> this</c><00:59:17.119><c> is</c><00:59:17.200><c> a</c><00:59:17.280><c> very</c><00:59:17.440><c> small</c><00:59:17.599><c> network</c>

00:59:20.950 --> 00:59:20.960 align:start position:0%
 
 

00:59:20.960 --> 00:59:23.270 align:start position:0%
 
okay<00:59:21.200><c> so</c><00:59:21.440><c> the</c><00:59:21.599><c> loss</c><00:59:21.920><c> is</c><00:59:22.160><c> pretty</c><00:59:22.400><c> good</c>

00:59:23.270 --> 00:59:23.280 align:start position:0%
okay so the loss is pretty good
 

00:59:23.280 --> 00:59:25.670 align:start position:0%
okay so the loss is pretty good
oh<00:59:23.839><c> we</c><00:59:24.079><c> accidentally</c><00:59:24.559><c> used</c><00:59:24.880><c> a</c><00:59:25.040><c> learning</c><00:59:25.359><c> rate</c>

00:59:25.670 --> 00:59:25.680 align:start position:0%
oh we accidentally used a learning rate
 

00:59:25.680 --> 00:59:27.510 align:start position:0%
oh we accidentally used a learning rate
that<00:59:25.839><c> is</c><00:59:26.000><c> way</c><00:59:26.160><c> too</c><00:59:26.400><c> low</c>

00:59:27.510 --> 00:59:27.520 align:start position:0%
that is way too low
 

00:59:27.520 --> 00:59:29.750 align:start position:0%
that is way too low
so<00:59:27.680><c> let</c><00:59:27.839><c> me</c><00:59:27.920><c> actually</c><00:59:28.160><c> come</c><00:59:28.400><c> back</c>

00:59:29.750 --> 00:59:29.760 align:start position:0%
so let me actually come back
 

00:59:29.760 --> 00:59:35.109 align:start position:0%
so let me actually come back
we<00:59:29.920><c> use</c><00:59:30.160><c> the</c><00:59:30.319><c> decay</c><00:59:30.720><c> learning</c><00:59:30.960><c> rate</c><00:59:31.200><c> of</c><00:59:31.359><c> 0.01</c>

00:59:35.109 --> 00:59:35.119 align:start position:0%
 
 

00:59:35.119 --> 00:59:37.109 align:start position:0%
 
so<00:59:35.280><c> this</c><00:59:35.440><c> will</c><00:59:35.599><c> train</c><00:59:35.760><c> much</c><00:59:35.920><c> faster</c>

00:59:37.109 --> 00:59:37.119 align:start position:0%
so this will train much faster
 

00:59:37.119 --> 00:59:39.270 align:start position:0%
so this will train much faster
and<00:59:37.200><c> then</c><00:59:37.440><c> here</c><00:59:37.680><c> when</c><00:59:37.839><c> we</c><00:59:38.000><c> evaluate</c>

00:59:39.270 --> 00:59:39.280 align:start position:0%
and then here when we evaluate
 

00:59:39.280 --> 00:59:42.309 align:start position:0%
and then here when we evaluate
let's<00:59:39.520><c> use</c><00:59:39.760><c> the</c><00:59:39.920><c> dep</c><00:59:40.559><c> set</c><00:59:40.799><c> here</c>

00:59:42.309 --> 00:59:42.319 align:start position:0%
let's use the dep set here
 

00:59:42.319 --> 00:59:43.589 align:start position:0%
let's use the dep set here
xdev

00:59:43.589 --> 00:59:43.599 align:start position:0%
xdev
 

00:59:43.599 --> 00:59:47.109 align:start position:0%
xdev
and<00:59:43.920><c> ydev</c><00:59:44.640><c> to</c><00:59:44.799><c> evaluate</c><00:59:45.280><c> the</c><00:59:45.440><c> loss</c>

00:59:47.109 --> 00:59:47.119 align:start position:0%
and ydev to evaluate the loss
 

00:59:47.119 --> 00:59:48.710 align:start position:0%
and ydev to evaluate the loss
okay

00:59:48.710 --> 00:59:48.720 align:start position:0%
okay
 

00:59:48.720 --> 00:59:50.630 align:start position:0%
okay
and<00:59:48.880><c> let's</c><00:59:49.200><c> now</c><00:59:49.359><c> decay</c><00:59:49.680><c> the</c><00:59:49.839><c> learning</c><00:59:50.079><c> rate</c>

00:59:50.630 --> 00:59:50.640 align:start position:0%
and let's now decay the learning rate
 

00:59:50.640 --> 00:59:55.430 align:start position:0%
and let's now decay the learning rate
and<00:59:50.880><c> only</c><00:59:51.119><c> do</c><00:59:51.359><c> say</c><00:59:51.680><c> 10</c><00:59:51.920><c> 000</c><00:59:52.160><c> examples</c>

00:59:55.430 --> 00:59:55.440 align:start position:0%
 
 

00:59:55.440 --> 00:59:57.670 align:start position:0%
 
and<00:59:55.520><c> let's</c><00:59:55.760><c> evaluate</c><00:59:56.160><c> the</c><00:59:56.319><c> dev</c><00:59:56.559><c> loss</c>

00:59:57.670 --> 00:59:57.680 align:start position:0%
and let's evaluate the dev loss
 

00:59:57.680 --> 00:59:59.190 align:start position:0%
and let's evaluate the dev loss
ones<00:59:58.079><c> here</c>

00:59:59.190 --> 00:59:59.200 align:start position:0%
ones here
 

00:59:59.200 --> 01:00:01.430 align:start position:0%
ones here
okay<00:59:59.440><c> so</c><00:59:59.520><c> we're</c><00:59:59.680><c> getting</c><00:59:59.839><c> about</c><01:00:00.000><c> 2.3</c><01:00:00.559><c> on</c><01:00:00.799><c> dev</c>

01:00:01.430 --> 01:00:01.440 align:start position:0%
okay so we're getting about 2.3 on dev
 

01:00:01.440 --> 01:00:02.630 align:start position:0%
okay so we're getting about 2.3 on dev
and<01:00:01.599><c> so</c><01:00:01.760><c> the</c><01:00:01.839><c> neural</c><01:00:02.000><c> network</c><01:00:02.240><c> when</c><01:00:02.400><c> it</c><01:00:02.480><c> was</c>

01:00:02.630 --> 01:00:02.640 align:start position:0%
and so the neural network when it was
 

01:00:02.640 --> 01:00:05.430 align:start position:0%
and so the neural network when it was
training<01:00:03.200><c> did</c><01:00:03.440><c> not</c><01:00:03.680><c> see</c><01:00:04.319><c> these</c><01:00:04.720><c> dev</c><01:00:05.040><c> examples</c>

01:00:05.430 --> 01:00:05.440 align:start position:0%
training did not see these dev examples
 

01:00:05.440 --> 01:00:07.990 align:start position:0%
training did not see these dev examples
it<01:00:05.599><c> hasn't</c><01:00:05.920><c> optimized</c><01:00:06.400><c> on</c><01:00:06.559><c> them</c><01:00:06.960><c> and</c><01:00:07.200><c> yet</c>

01:00:07.990 --> 01:00:08.000 align:start position:0%
it hasn't optimized on them and yet
 

01:00:08.000 --> 01:00:10.150 align:start position:0%
it hasn't optimized on them and yet
when<01:00:08.160><c> we</c><01:00:08.240><c> evaluate</c><01:00:08.640><c> the</c><01:00:08.960><c> loss</c><01:00:09.280><c> on</c><01:00:09.440><c> these</c><01:00:09.680><c> dev</c>

01:00:10.150 --> 01:00:10.160 align:start position:0%
when we evaluate the loss on these dev
 

01:00:10.160 --> 01:00:12.309 align:start position:0%
when we evaluate the loss on these dev
we<01:00:10.319><c> actually</c><01:00:10.559><c> get</c><01:00:10.720><c> a</c><01:00:10.799><c> pretty</c><01:00:11.040><c> decent</c><01:00:11.440><c> loss</c>

01:00:12.309 --> 01:00:12.319 align:start position:0%
we actually get a pretty decent loss
 

01:00:12.319 --> 01:00:16.069 align:start position:0%
we actually get a pretty decent loss
and<01:00:12.480><c> so</c><01:00:13.119><c> we</c><01:00:13.200><c> can</c><01:00:13.359><c> also</c><01:00:14.160><c> look</c><01:00:14.319><c> at</c><01:00:14.559><c> what</c><01:00:14.799><c> the</c>

01:00:16.069 --> 01:00:16.079 align:start position:0%
and so we can also look at what the
 

01:00:16.079 --> 01:00:18.950 align:start position:0%
and so we can also look at what the
loss<01:00:16.400><c> is</c><01:00:16.559><c> on</c><01:00:16.720><c> all</c><01:00:16.880><c> of</c><01:00:17.040><c> training</c><01:00:17.359><c> set</c>

01:00:18.950 --> 01:00:18.960 align:start position:0%
loss is on all of training set
 

01:00:18.960 --> 01:00:20.549 align:start position:0%
loss is on all of training set
oops

01:00:20.549 --> 01:00:20.559 align:start position:0%
oops
 

01:00:20.559 --> 01:00:22.309 align:start position:0%
oops
and<01:00:20.720><c> so</c><01:00:20.880><c> we</c><01:00:20.960><c> see</c><01:00:21.119><c> that</c><01:00:21.440><c> the</c><01:00:21.680><c> training</c><01:00:22.079><c> and</c><01:00:22.160><c> the</c>

01:00:22.309 --> 01:00:22.319 align:start position:0%
and so we see that the training and the
 

01:00:22.319 --> 01:00:24.630 align:start position:0%
and so we see that the training and the
dev<01:00:22.559><c> loss</c><01:00:22.880><c> are</c><01:00:23.040><c> about</c><01:00:23.359><c> equal</c><01:00:24.000><c> so</c><01:00:24.160><c> we're</c><01:00:24.400><c> not</c>

01:00:24.630 --> 01:00:24.640 align:start position:0%
dev loss are about equal so we're not
 

01:00:24.640 --> 01:00:25.750 align:start position:0%
dev loss are about equal so we're not
over<01:00:24.880><c> fitting</c>

01:00:25.750 --> 01:00:25.760 align:start position:0%
over fitting
 

01:00:25.760 --> 01:00:28.309 align:start position:0%
over fitting
um<01:00:26.319><c> this</c><01:00:26.559><c> model</c><01:00:26.880><c> is</c><01:00:26.960><c> not</c><01:00:27.200><c> powerful</c><01:00:27.680><c> enough</c><01:00:28.160><c> to</c>

01:00:28.309 --> 01:00:28.319 align:start position:0%
um this model is not powerful enough to
 

01:00:28.319 --> 01:00:31.109 align:start position:0%
um this model is not powerful enough to
just<01:00:28.559><c> be</c><01:00:28.799><c> purely</c><01:00:29.200><c> memorizing</c><01:00:29.760><c> the</c><01:00:29.839><c> data</c><01:00:30.480><c> and</c>

01:00:31.109 --> 01:00:31.119 align:start position:0%
just be purely memorizing the data and
 

01:00:31.119 --> 01:00:33.829 align:start position:0%
just be purely memorizing the data and
so<01:00:31.359><c> far</c><01:00:31.920><c> we</c><01:00:32.160><c> are</c><01:00:32.319><c> what's</c><01:00:32.559><c> called</c><01:00:32.880><c> underfitting</c>

01:00:33.829 --> 01:00:33.839 align:start position:0%
so far we are what's called underfitting
 

01:00:33.839 --> 01:00:35.910 align:start position:0%
so far we are what's called underfitting
because<01:00:34.079><c> the</c><01:00:34.319><c> training</c><01:00:34.640><c> loss</c><01:00:34.960><c> and</c><01:00:35.119><c> the</c><01:00:35.359><c> dev</c><01:00:35.680><c> or</c>

01:00:35.910 --> 01:00:35.920 align:start position:0%
because the training loss and the dev or
 

01:00:35.920 --> 01:00:38.150 align:start position:0%
because the training loss and the dev or
test<01:00:36.160><c> losses</c><01:00:36.559><c> are</c><01:00:36.720><c> roughly</c><01:00:37.119><c> equal</c><01:00:37.839><c> so</c><01:00:38.000><c> what</c>

01:00:38.150 --> 01:00:38.160 align:start position:0%
test losses are roughly equal so what
 

01:00:38.160 --> 01:00:40.309 align:start position:0%
test losses are roughly equal so what
that<01:00:38.319><c> typically</c><01:00:38.799><c> means</c><01:00:39.440><c> is</c><01:00:39.599><c> that</c><01:00:39.760><c> our</c><01:00:39.920><c> network</c>

01:00:40.309 --> 01:00:40.319 align:start position:0%
that typically means is that our network
 

01:00:40.319 --> 01:00:43.430 align:start position:0%
that typically means is that our network
is<01:00:40.559><c> very</c><01:00:40.880><c> tiny</c><01:00:41.680><c> very</c><01:00:41.920><c> small</c><01:00:42.640><c> and</c><01:00:42.799><c> we</c><01:00:42.960><c> expect</c><01:00:43.359><c> to</c>

01:00:43.430 --> 01:00:43.440 align:start position:0%
is very tiny very small and we expect to
 

01:00:43.440 --> 01:00:46.069 align:start position:0%
is very tiny very small and we expect to
make<01:00:44.079><c> performance</c><01:00:44.559><c> improvements</c><01:00:45.359><c> by</c><01:00:45.599><c> scaling</c>

01:00:46.069 --> 01:00:46.079 align:start position:0%
make performance improvements by scaling
 

01:00:46.079 --> 01:00:47.910 align:start position:0%
make performance improvements by scaling
up<01:00:46.319><c> the</c><01:00:46.480><c> size</c><01:00:46.720><c> of</c><01:00:46.799><c> this</c><01:00:46.960><c> neural</c><01:00:47.200><c> net</c><01:00:47.599><c> so</c><01:00:47.760><c> let's</c>

01:00:47.910 --> 01:00:47.920 align:start position:0%
up the size of this neural net so let's
 

01:00:47.920 --> 01:00:50.150 align:start position:0%
up the size of this neural net so let's
do<01:00:48.079><c> that</c><01:00:48.240><c> now</c><01:00:48.640><c> so</c><01:00:48.799><c> let's</c><01:00:48.960><c> come</c><01:00:49.200><c> over</c><01:00:49.359><c> here</c>

01:00:50.150 --> 01:00:50.160 align:start position:0%
do that now so let's come over here
 

01:00:50.160 --> 01:00:51.589 align:start position:0%
do that now so let's come over here
and<01:00:50.400><c> let's</c><01:00:50.720><c> increase</c><01:00:50.960><c> the</c><01:00:51.119><c> size</c><01:00:51.359><c> of</c><01:00:51.520><c> the</c>

01:00:51.589 --> 01:00:51.599 align:start position:0%
and let's increase the size of the
 

01:00:51.599 --> 01:00:53.829 align:start position:0%
and let's increase the size of the
neural<01:00:51.920><c> net</c><01:00:52.559><c> the</c><01:00:52.720><c> easiest</c><01:00:53.119><c> way</c><01:00:53.280><c> to</c><01:00:53.440><c> do</c><01:00:53.520><c> this</c><01:00:53.760><c> is</c>

01:00:53.829 --> 01:00:53.839 align:start position:0%
neural net the easiest way to do this is
 

01:00:53.839 --> 01:00:55.190 align:start position:0%
neural net the easiest way to do this is
we<01:00:54.000><c> can</c><01:00:54.079><c> come</c><01:00:54.240><c> here</c><01:00:54.400><c> to</c><01:00:54.559><c> the</c><01:00:54.640><c> hidden</c><01:00:54.960><c> layer</c>

01:00:55.190 --> 01:00:55.200 align:start position:0%
we can come here to the hidden layer
 

01:00:55.200 --> 01:00:56.950 align:start position:0%
we can come here to the hidden layer
which<01:00:55.359><c> currently</c><01:00:55.680><c> has</c><01:00:55.839><c> 100</c><01:00:56.160><c> neurons</c><01:00:56.799><c> and</c>

01:00:56.950 --> 01:00:56.960 align:start position:0%
which currently has 100 neurons and
 

01:00:56.960 --> 01:00:58.950 align:start position:0%
which currently has 100 neurons and
let's<01:00:57.119><c> just</c><01:00:57.359><c> bump</c><01:00:57.599><c> this</c><01:00:57.760><c> up</c><01:00:57.920><c> so</c><01:00:58.079><c> let's</c><01:00:58.319><c> do</c><01:00:58.480><c> 300</c>

01:00:58.950 --> 01:00:58.960 align:start position:0%
let's just bump this up so let's do 300
 

01:00:58.960 --> 01:01:00.630 align:start position:0%
let's just bump this up so let's do 300
neurons

01:01:00.630 --> 01:01:00.640 align:start position:0%
neurons
 

01:01:00.640 --> 01:01:03.430 align:start position:0%
neurons
and<01:01:00.799><c> then</c><01:01:01.359><c> this</c><01:01:01.520><c> is</c><01:01:01.680><c> also</c><01:01:01.920><c> 300</c><01:01:02.319><c> biases</c><01:01:03.200><c> and</c>

01:01:03.430 --> 01:01:03.440 align:start position:0%
and then this is also 300 biases and
 

01:01:03.440 --> 01:01:05.910 align:start position:0%
and then this is also 300 biases and
here<01:01:03.599><c> we</c><01:01:03.760><c> have</c><01:01:03.839><c> 300</c><01:01:04.319><c> inputs</c><01:01:04.799><c> into</c><01:01:05.200><c> the</c><01:01:05.359><c> final</c>

01:01:05.910 --> 01:01:05.920 align:start position:0%
here we have 300 inputs into the final
 

01:01:05.920 --> 01:01:07.270 align:start position:0%
here we have 300 inputs into the final
layer

01:01:07.270 --> 01:01:07.280 align:start position:0%
layer
 

01:01:07.280 --> 01:01:08.630 align:start position:0%
layer
so

01:01:08.630 --> 01:01:08.640 align:start position:0%
so
 

01:01:08.640 --> 01:01:10.870 align:start position:0%
so
let's<01:01:09.119><c> initialize</c><01:01:09.680><c> our</c><01:01:09.839><c> neural</c><01:01:10.160><c> net</c><01:01:10.480><c> we</c><01:01:10.640><c> now</c>

01:01:10.870 --> 01:01:10.880 align:start position:0%
let's initialize our neural net we now
 

01:01:10.880 --> 01:01:12.230 align:start position:0%
let's initialize our neural net we now
have<01:01:11.040><c> ten</c><01:01:11.200><c> thousand</c><01:01:11.440><c> ex</c><01:01:11.760><c> ten</c><01:01:11.920><c> thousand</c>

01:01:12.230 --> 01:01:12.240 align:start position:0%
have ten thousand ex ten thousand
 

01:01:12.240 --> 01:01:13.510 align:start position:0%
have ten thousand ex ten thousand
parameters<01:01:12.720><c> instead</c><01:01:12.960><c> of</c><01:01:13.119><c> three</c><01:01:13.280><c> thousand</c>

01:01:13.510 --> 01:01:13.520 align:start position:0%
parameters instead of three thousand
 

01:01:13.520 --> 01:01:15.829 align:start position:0%
parameters instead of three thousand
parameters

01:01:15.829 --> 01:01:15.839 align:start position:0%
parameters
 

01:01:15.839 --> 01:01:18.230 align:start position:0%
parameters
and<01:01:16.000><c> then</c><01:01:16.559><c> we're</c><01:01:16.720><c> not</c><01:01:16.960><c> using</c><01:01:17.200><c> this</c>

01:01:18.230 --> 01:01:18.240 align:start position:0%
and then we're not using this
 

01:01:18.240 --> 01:01:19.589 align:start position:0%
and then we're not using this
and<01:01:18.319><c> then</c><01:01:18.559><c> here</c><01:01:18.720><c> what</c><01:01:18.880><c> i'd</c><01:01:18.960><c> like</c><01:01:19.119><c> to</c><01:01:19.200><c> do</c><01:01:19.359><c> is</c><01:01:19.520><c> i'd</c>

01:01:19.589 --> 01:01:19.599 align:start position:0%
and then here what i'd like to do is i'd
 

01:01:19.599 --> 01:01:23.270 align:start position:0%
and then here what i'd like to do is i'd
like<01:01:19.760><c> to</c><01:01:19.920><c> actually</c><01:01:20.559><c> uh</c><01:01:20.880><c> keep</c><01:01:21.359><c> track</c><01:01:21.599><c> of</c><01:01:22.160><c> uh</c>

01:01:23.270 --> 01:01:23.280 align:start position:0%
like to actually uh keep track of uh
 

01:01:23.280 --> 01:01:24.630 align:start position:0%
like to actually uh keep track of uh
tap

01:01:24.630 --> 01:01:24.640 align:start position:0%
tap
 

01:01:24.640 --> 01:01:27.589 align:start position:0%
tap
um

01:01:27.589 --> 01:01:27.599 align:start position:0%
 
 

01:01:27.599 --> 01:01:29.829 align:start position:0%
 
okay<01:01:28.000><c> let's</c><01:01:28.160><c> just</c><01:01:28.319><c> do</c><01:01:28.480><c> this</c><01:01:28.960><c> let's</c><01:01:29.200><c> keep</c><01:01:29.440><c> stats</c>

01:01:29.829 --> 01:01:29.839 align:start position:0%
okay let's just do this let's keep stats
 

01:01:29.839 --> 01:01:30.870 align:start position:0%
okay let's just do this let's keep stats
again

01:01:30.870 --> 01:01:30.880 align:start position:0%
again
 

01:01:30.880 --> 01:01:34.870 align:start position:0%
again
and<01:01:31.119><c> here</c><01:01:31.359><c> when</c><01:01:31.520><c> we're</c><01:01:31.680><c> keeping</c><01:01:32.079><c> track</c><01:01:32.319><c> of</c><01:01:32.480><c> the</c>

01:01:34.870 --> 01:01:34.880 align:start position:0%
 
 

01:01:34.880 --> 01:01:37.829 align:start position:0%
 
loss<01:01:35.599><c> let's</c><01:01:35.760><c> just</c><01:01:36.000><c> also</c><01:01:36.640><c> keep</c><01:01:36.880><c> track</c><01:01:37.200><c> of</c><01:01:37.680><c> the</c>

01:01:37.829 --> 01:01:37.839 align:start position:0%
loss let's just also keep track of the
 

01:01:37.839 --> 01:01:40.870 align:start position:0%
loss let's just also keep track of the
steps<01:01:38.480><c> and</c><01:01:38.559><c> let's</c><01:01:38.799><c> just</c><01:01:39.200><c> have</c><01:01:39.440><c> i</c><01:01:39.680><c> here</c>

01:01:40.870 --> 01:01:40.880 align:start position:0%
steps and let's just have i here
 

01:01:40.880 --> 01:01:44.150 align:start position:0%
steps and let's just have i here
and<01:01:41.119><c> let's</c><01:01:41.760><c> train</c><01:01:42.079><c> on</c><01:01:42.640><c> thirty</c><01:01:42.960><c> thousand</c>

01:01:44.150 --> 01:01:44.160 align:start position:0%
and let's train on thirty thousand
 

01:01:44.160 --> 01:01:46.069 align:start position:0%
and let's train on thirty thousand
or<01:01:44.559><c> rather</c><01:01:44.880><c> say</c>

01:01:46.069 --> 01:01:46.079 align:start position:0%
or rather say
 

01:01:46.079 --> 01:01:48.150 align:start position:0%
or rather say
okay<01:01:46.400><c> let's</c><01:01:46.559><c> try</c><01:01:46.799><c> thirty</c><01:01:47.119><c> thousand</c>

01:01:48.150 --> 01:01:48.160 align:start position:0%
okay let's try thirty thousand
 

01:01:48.160 --> 01:01:51.190 align:start position:0%
okay let's try thirty thousand
and<01:01:48.400><c> we</c><01:01:48.559><c> are</c><01:01:48.720><c> at</c><01:01:48.960><c> point</c><01:01:49.200><c> one</c>

01:01:51.190 --> 01:01:51.200 align:start position:0%
and we are at point one
 

01:01:51.200 --> 01:01:52.470 align:start position:0%
and we are at point one
and

01:01:52.470 --> 01:01:52.480 align:start position:0%
and
 

01:01:52.480 --> 01:01:54.870 align:start position:0%
and
we<01:01:52.799><c> should</c><01:01:53.440><c> be</c><01:01:53.520><c> able</c><01:01:53.680><c> to</c><01:01:53.839><c> run</c><01:01:54.000><c> this</c>

01:01:54.870 --> 01:01:54.880 align:start position:0%
we should be able to run this
 

01:01:54.880 --> 01:01:57.270 align:start position:0%
we should be able to run this
and<01:01:55.040><c> optimize</c><01:01:55.440><c> the</c><01:01:55.520><c> neural</c><01:01:55.760><c> net</c>

01:01:57.270 --> 01:01:57.280 align:start position:0%
and optimize the neural net
 

01:01:57.280 --> 01:01:59.390 align:start position:0%
and optimize the neural net
and<01:01:57.440><c> then</c><01:01:57.599><c> here</c><01:01:57.839><c> basically</c><01:01:58.720><c> i</c><01:01:58.880><c> want</c><01:01:59.040><c> to</c>

01:01:59.390 --> 01:01:59.400 align:start position:0%
and then here basically i want to
 

01:01:59.400 --> 01:02:00.950 align:start position:0%
and then here basically i want to
plt.plot

01:02:00.950 --> 01:02:00.960 align:start position:0%
plt.plot
 

01:02:00.960 --> 01:02:02.390 align:start position:0%
plt.plot
the<01:02:01.119><c> steps</c>

01:02:02.390 --> 01:02:02.400 align:start position:0%
the steps
 

01:02:02.400 --> 01:02:09.030 align:start position:0%
the steps
against<01:02:03.040><c> the</c><01:02:03.200><c> loss</c>

01:02:09.030 --> 01:02:09.040 align:start position:0%
 
 

01:02:09.040 --> 01:02:11.510 align:start position:0%
 
so<01:02:09.200><c> these</c><01:02:09.440><c> are</c><01:02:09.520><c> the</c><01:02:09.680><c> x's</c><01:02:10.000><c> and</c><01:02:10.240><c> y's</c>

01:02:11.510 --> 01:02:11.520 align:start position:0%
so these are the x's and y's
 

01:02:11.520 --> 01:02:13.510 align:start position:0%
so these are the x's and y's
and<01:02:12.319><c> this</c><01:02:12.559><c> is</c>

01:02:13.510 --> 01:02:13.520 align:start position:0%
and this is
 

01:02:13.520 --> 01:02:15.349 align:start position:0%
and this is
the<01:02:13.599><c> loss</c><01:02:13.839><c> function</c><01:02:14.720><c> and</c><01:02:14.799><c> how</c><01:02:14.960><c> it's</c><01:02:15.119><c> being</c>

01:02:15.349 --> 01:02:15.359 align:start position:0%
the loss function and how it's being
 

01:02:15.359 --> 01:02:16.549 align:start position:0%
the loss function and how it's being
optimized

01:02:16.549 --> 01:02:16.559 align:start position:0%
optimized
 

01:02:16.559 --> 01:02:18.150 align:start position:0%
optimized
now<01:02:16.880><c> you</c><01:02:16.960><c> see</c><01:02:17.119><c> that</c><01:02:17.280><c> there's</c><01:02:17.440><c> quite</c><01:02:17.599><c> a</c><01:02:17.680><c> bit</c><01:02:17.839><c> of</c>

01:02:18.150 --> 01:02:18.160 align:start position:0%
now you see that there's quite a bit of
 

01:02:18.160 --> 01:02:19.829 align:start position:0%
now you see that there's quite a bit of
thickness<01:02:18.559><c> to</c><01:02:18.720><c> this</c><01:02:19.200><c> and</c><01:02:19.280><c> that's</c><01:02:19.520><c> because</c><01:02:19.680><c> we</c>

01:02:19.829 --> 01:02:19.839 align:start position:0%
thickness to this and that's because we
 

01:02:19.839 --> 01:02:21.750 align:start position:0%
thickness to this and that's because we
are<01:02:19.920><c> optimizing</c><01:02:20.400><c> over</c><01:02:20.559><c> these</c><01:02:20.720><c> mini</c><01:02:20.960><c> batches</c>

01:02:21.750 --> 01:02:21.760 align:start position:0%
are optimizing over these mini batches
 

01:02:21.760 --> 01:02:23.430 align:start position:0%
are optimizing over these mini batches
and<01:02:21.920><c> the</c><01:02:22.000><c> mini</c><01:02:22.240><c> batches</c><01:02:22.640><c> create</c><01:02:23.119><c> a</c><01:02:23.200><c> little</c><01:02:23.359><c> bit</c>

01:02:23.430 --> 01:02:23.440 align:start position:0%
and the mini batches create a little bit
 

01:02:23.440 --> 01:02:24.470 align:start position:0%
and the mini batches create a little bit
of<01:02:23.520><c> noise</c>

01:02:24.470 --> 01:02:24.480 align:start position:0%
of noise
 

01:02:24.480 --> 01:02:25.829 align:start position:0%
of noise
in<01:02:24.640><c> this</c>

01:02:25.829 --> 01:02:25.839 align:start position:0%
in this
 

01:02:25.839 --> 01:02:28.069 align:start position:0%
in this
uh<01:02:26.000><c> where</c><01:02:26.240><c> are</c><01:02:26.400><c> we</c><01:02:26.640><c> in</c><01:02:26.720><c> the</c><01:02:26.799><c> def</c><01:02:27.040><c> set</c><01:02:27.520><c> we</c><01:02:27.760><c> are</c><01:02:27.920><c> at</c>

01:02:28.069 --> 01:02:28.079 align:start position:0%
uh where are we in the def set we are at
 

01:02:28.079 --> 01:02:30.549 align:start position:0%
uh where are we in the def set we are at
2.5<01:02:28.960><c> so</c><01:02:29.200><c> we</c><01:02:29.680><c> still</c><01:02:29.839><c> haven't</c><01:02:30.079><c> optimized</c><01:02:30.480><c> this</c>

01:02:30.549 --> 01:02:30.559 align:start position:0%
2.5 so we still haven't optimized this
 

01:02:30.559 --> 01:02:32.069 align:start position:0%
2.5 so we still haven't optimized this
neural<01:02:30.799><c> net</c><01:02:31.040><c> very</c><01:02:31.200><c> well</c>

01:02:32.069 --> 01:02:32.079 align:start position:0%
neural net very well
 

01:02:32.079 --> 01:02:33.270 align:start position:0%
neural net very well
and<01:02:32.160><c> that's</c><01:02:32.319><c> probably</c><01:02:32.559><c> because</c><01:02:32.799><c> we</c><01:02:32.960><c> made</c><01:02:33.119><c> it</c>

01:02:33.270 --> 01:02:33.280 align:start position:0%
and that's probably because we made it
 

01:02:33.280 --> 01:02:34.789 align:start position:0%
and that's probably because we made it
bigger<01:02:33.599><c> it</c><01:02:33.760><c> might</c><01:02:33.920><c> take</c><01:02:34.160><c> longer</c><01:02:34.480><c> for</c><01:02:34.640><c> this</c>

01:02:34.789 --> 01:02:34.799 align:start position:0%
bigger it might take longer for this
 

01:02:34.799 --> 01:02:36.390 align:start position:0%
bigger it might take longer for this
neural<01:02:35.040><c> net</c><01:02:35.280><c> to</c><01:02:35.359><c> converge</c>

01:02:36.390 --> 01:02:36.400 align:start position:0%
neural net to converge
 

01:02:36.400 --> 01:02:37.510 align:start position:0%
neural net to converge
um

01:02:37.510 --> 01:02:37.520 align:start position:0%
um
 

01:02:37.520 --> 01:02:40.789 align:start position:0%
um
and<01:02:37.760><c> so</c><01:02:38.000><c> let's</c><01:02:38.240><c> continue</c><01:02:38.720><c> training</c>

01:02:40.789 --> 01:02:40.799 align:start position:0%
and so let's continue training
 

01:02:40.799 --> 01:02:42.789 align:start position:0%
and so let's continue training
um

01:02:42.789 --> 01:02:42.799 align:start position:0%
um
 

01:02:42.799 --> 01:02:46.549 align:start position:0%
um
yeah<01:02:42.960><c> let's</c><01:02:43.119><c> just</c><01:02:43.280><c> continue</c><01:02:43.680><c> training</c>

01:02:46.549 --> 01:02:46.559 align:start position:0%
 
 

01:02:46.559 --> 01:02:47.990 align:start position:0%
 
one<01:02:46.720><c> possibility</c><01:02:47.200><c> is</c><01:02:47.359><c> that</c><01:02:47.440><c> the</c><01:02:47.520><c> batch</c><01:02:47.680><c> size</c>

01:02:47.990 --> 01:02:48.000 align:start position:0%
one possibility is that the batch size
 

01:02:48.000 --> 01:02:49.270 align:start position:0%
one possibility is that the batch size
is<01:02:48.160><c> so</c><01:02:48.400><c> low</c>

01:02:49.270 --> 01:02:49.280 align:start position:0%
is so low
 

01:02:49.280 --> 01:02:51.670 align:start position:0%
is so low
that<01:02:49.760><c> uh</c><01:02:50.160><c> we</c><01:02:50.319><c> just</c><01:02:50.480><c> have</c><01:02:50.720><c> way</c><01:02:50.880><c> too</c><01:02:51.040><c> much</c><01:02:51.359><c> noise</c>

01:02:51.670 --> 01:02:51.680 align:start position:0%
that uh we just have way too much noise
 

01:02:51.680 --> 01:02:53.349 align:start position:0%
that uh we just have way too much noise
in<01:02:51.839><c> the</c><01:02:52.000><c> training</c><01:02:52.640><c> and</c><01:02:52.799><c> we</c><01:02:52.960><c> may</c><01:02:53.119><c> want</c><01:02:53.200><c> to</c>

01:02:53.349 --> 01:02:53.359 align:start position:0%
in the training and we may want to
 

01:02:53.359 --> 01:02:54.710 align:start position:0%
in the training and we may want to
increase<01:02:53.680><c> the</c><01:02:53.839><c> batch</c><01:02:54.079><c> size</c><01:02:54.240><c> so</c><01:02:54.400><c> that</c><01:02:54.480><c> we</c><01:02:54.640><c> have</c>

01:02:54.710 --> 01:02:54.720 align:start position:0%
increase the batch size so that we have
 

01:02:54.720 --> 01:02:57.349 align:start position:0%
increase the batch size so that we have
a<01:02:54.799><c> bit</c><01:02:54.960><c> more</c><01:02:55.599><c> um</c><01:02:56.079><c> correct</c><01:02:56.480><c> gradient</c><01:02:57.119><c> and</c><01:02:57.200><c> we're</c>

01:02:57.349 --> 01:02:57.359 align:start position:0%
a bit more um correct gradient and we're
 

01:02:57.359 --> 01:02:59.670 align:start position:0%
a bit more um correct gradient and we're
not<01:02:57.680><c> thrashing</c><01:02:58.400><c> too</c><01:02:58.640><c> much</c><01:02:59.280><c> and</c><01:02:59.440><c> we</c><01:02:59.520><c> can</c>

01:02:59.670 --> 01:02:59.680 align:start position:0%
not thrashing too much and we can
 

01:02:59.680 --> 01:03:07.910 align:start position:0%
not thrashing too much and we can
actually<01:03:00.000><c> like</c><01:03:00.480><c> optimize</c><01:03:00.960><c> more</c><01:03:01.200><c> properly</c>

01:03:07.910 --> 01:03:07.920 align:start position:0%
 
 

01:03:07.920 --> 01:03:08.789 align:start position:0%
 
okay

01:03:08.789 --> 01:03:08.799 align:start position:0%
okay
 

01:03:08.799 --> 01:03:10.470 align:start position:0%
okay
this<01:03:08.960><c> will</c><01:03:09.119><c> now</c><01:03:09.280><c> become</c><01:03:09.520><c> meaningless</c><01:03:10.079><c> because</c>

01:03:10.470 --> 01:03:10.480 align:start position:0%
this will now become meaningless because
 

01:03:10.480 --> 01:03:13.190 align:start position:0%
this will now become meaningless because
we've<01:03:10.799><c> reinitialized</c><01:03:11.520><c> these</c><01:03:11.920><c> so</c>

01:03:13.190 --> 01:03:13.200 align:start position:0%
we've reinitialized these so
 

01:03:13.200 --> 01:03:14.870 align:start position:0%
we've reinitialized these so
yeah<01:03:13.359><c> this</c><01:03:13.760><c> looks</c><01:03:14.079><c> not</c>

01:03:14.870 --> 01:03:14.880 align:start position:0%
yeah this looks not
 

01:03:14.880 --> 01:03:16.950 align:start position:0%
yeah this looks not
pleasing<01:03:15.359><c> right</c><01:03:15.520><c> now</c><01:03:16.160><c> but</c><01:03:16.319><c> there</c><01:03:16.559><c> probably</c><01:03:16.880><c> is</c>

01:03:16.950 --> 01:03:16.960 align:start position:0%
pleasing right now but there probably is
 

01:03:16.960 --> 01:03:18.549 align:start position:0%
pleasing right now but there probably is
like<01:03:17.119><c> a</c><01:03:17.200><c> tiny</c><01:03:17.520><c> improvement</c><01:03:17.839><c> but</c><01:03:18.079><c> it's</c><01:03:18.160><c> so</c><01:03:18.319><c> hard</c>

01:03:18.549 --> 01:03:18.559 align:start position:0%
like a tiny improvement but it's so hard
 

01:03:18.559 --> 01:03:20.309 align:start position:0%
like a tiny improvement but it's so hard
to<01:03:18.720><c> tell</c>

01:03:20.309 --> 01:03:20.319 align:start position:0%
to tell
 

01:03:20.319 --> 01:03:22.549 align:start position:0%
to tell
let's<01:03:20.720><c> go</c><01:03:21.039><c> again</c>

01:03:22.549 --> 01:03:22.559 align:start position:0%
let's go again
 

01:03:22.559 --> 01:03:25.510 align:start position:0%
let's go again
2.52

01:03:25.510 --> 01:03:25.520 align:start position:0%
 
 

01:03:25.520 --> 01:03:27.029 align:start position:0%
 
let's<01:03:25.680><c> try</c><01:03:25.920><c> to</c><01:03:26.160><c> decrease</c><01:03:26.480><c> the</c><01:03:26.640><c> learning</c><01:03:26.880><c> rate</c>

01:03:27.029 --> 01:03:27.039 align:start position:0%
let's try to decrease the learning rate
 

01:03:27.039 --> 01:03:49.990 align:start position:0%
let's try to decrease the learning rate
by<01:03:27.200><c> factor</c><01:03:27.599><c> two</c>

01:03:49.990 --> 01:03:50.000 align:start position:0%
 
 

01:03:50.000 --> 01:03:52.230 align:start position:0%
 
okay<01:03:50.240><c> we're</c><01:03:50.400><c> at</c><01:03:50.559><c> 2.32</c>

01:03:52.230 --> 01:03:52.240 align:start position:0%
okay we're at 2.32
 

01:03:52.240 --> 01:04:05.670 align:start position:0%
okay we're at 2.32
let's<01:03:52.480><c> continue</c><01:03:52.880><c> training</c>

01:04:05.670 --> 01:04:05.680 align:start position:0%
 
 

01:04:05.680 --> 01:04:07.510 align:start position:0%
 
we<01:04:05.839><c> basically</c><01:04:06.240><c> expect</c><01:04:06.480><c> to</c><01:04:06.640><c> see</c><01:04:06.880><c> a</c><01:04:07.039><c> lower</c><01:04:07.280><c> loss</c>

01:04:07.510 --> 01:04:07.520 align:start position:0%
we basically expect to see a lower loss
 

01:04:07.520 --> 01:04:08.950 align:start position:0%
we basically expect to see a lower loss
than<01:04:07.680><c> what</c><01:04:07.760><c> we</c><01:04:07.839><c> had</c><01:04:08.000><c> before</c><01:04:08.480><c> because</c><01:04:08.720><c> now</c><01:04:08.880><c> we</c>

01:04:08.950 --> 01:04:08.960 align:start position:0%
than what we had before because now we
 

01:04:08.960 --> 01:04:10.870 align:start position:0%
than what we had before because now we
have<01:04:09.119><c> a</c><01:04:09.200><c> much</c><01:04:09.359><c> much</c><01:04:09.520><c> bigger</c><01:04:09.760><c> model</c><01:04:10.559><c> and</c><01:04:10.720><c> we</c>

01:04:10.870 --> 01:04:10.880 align:start position:0%
have a much much bigger model and we
 

01:04:10.880 --> 01:04:12.789 align:start position:0%
have a much much bigger model and we
were<01:04:11.119><c> under</c><01:04:11.280><c> fitting</c><01:04:12.000><c> so</c><01:04:12.160><c> we'd</c><01:04:12.400><c> expect</c><01:04:12.640><c> that</c>

01:04:12.789 --> 01:04:12.799 align:start position:0%
were under fitting so we'd expect that
 

01:04:12.799 --> 01:04:14.069 align:start position:0%
were under fitting so we'd expect that
increasing<01:04:13.200><c> the</c><01:04:13.280><c> size</c><01:04:13.520><c> of</c><01:04:13.599><c> the</c><01:04:13.680><c> model</c><01:04:13.920><c> should</c>

01:04:14.069 --> 01:04:14.079 align:start position:0%
increasing the size of the model should
 

01:04:14.079 --> 01:04:16.069 align:start position:0%
increasing the size of the model should
help<01:04:14.240><c> the</c><01:04:14.400><c> neural</c><01:04:14.720><c> net</c>

01:04:16.069 --> 01:04:16.079 align:start position:0%
help the neural net
 

01:04:16.079 --> 01:04:18.390 align:start position:0%
help the neural net
2.32<01:04:17.039><c> okay</c><01:04:17.280><c> so</c><01:04:17.359><c> that's</c><01:04:17.599><c> not</c><01:04:17.760><c> happening</c><01:04:18.160><c> too</c>

01:04:18.390 --> 01:04:18.400 align:start position:0%
2.32 okay so that's not happening too
 

01:04:18.400 --> 01:04:19.430 align:start position:0%
2.32 okay so that's not happening too
well

01:04:19.430 --> 01:04:19.440 align:start position:0%
well
 

01:04:19.440 --> 01:04:21.190 align:start position:0%
well
now<01:04:19.599><c> one</c><01:04:19.839><c> other</c><01:04:20.079><c> concern</c><01:04:20.559><c> is</c><01:04:20.720><c> that</c><01:04:21.039><c> even</c>

01:04:21.190 --> 01:04:21.200 align:start position:0%
now one other concern is that even
 

01:04:21.200 --> 01:04:23.589 align:start position:0%
now one other concern is that even
though<01:04:21.359><c> we've</c><01:04:21.520><c> made</c><01:04:21.760><c> the</c><01:04:22.079><c> 10h</c><01:04:22.559><c> layer</c><01:04:22.880><c> here</c><01:04:23.359><c> or</c>

01:04:23.589 --> 01:04:23.599 align:start position:0%
though we've made the 10h layer here or
 

01:04:23.599 --> 01:04:25.510 align:start position:0%
though we've made the 10h layer here or
the<01:04:23.680><c> hidden</c><01:04:24.000><c> layer</c><01:04:24.240><c> much</c><01:04:24.480><c> much</c><01:04:24.640><c> bigger</c><01:04:25.359><c> it</c>

01:04:25.510 --> 01:04:25.520 align:start position:0%
the hidden layer much much bigger it
 

01:04:25.520 --> 01:04:26.710 align:start position:0%
the hidden layer much much bigger it
could<01:04:25.680><c> be</c><01:04:25.760><c> that</c><01:04:25.920><c> the</c><01:04:26.079><c> bottleneck</c><01:04:26.559><c> of</c><01:04:26.640><c> the</c>

01:04:26.710 --> 01:04:26.720 align:start position:0%
could be that the bottleneck of the
 

01:04:26.720 --> 01:04:28.789 align:start position:0%
could be that the bottleneck of the
network<01:04:27.119><c> right</c><01:04:27.280><c> now</c><01:04:27.760><c> are</c><01:04:27.920><c> these</c><01:04:28.160><c> embeddings</c>

01:04:28.789 --> 01:04:28.799 align:start position:0%
network right now are these embeddings
 

01:04:28.799 --> 01:04:30.789 align:start position:0%
network right now are these embeddings
that<01:04:28.960><c> are</c><01:04:29.039><c> two</c><01:04:29.200><c> dimensional</c><01:04:30.160><c> it</c><01:04:30.319><c> can</c><01:04:30.559><c> be</c><01:04:30.720><c> that</c>

01:04:30.789 --> 01:04:30.799 align:start position:0%
that are two dimensional it can be that
 

01:04:30.799 --> 01:04:32.069 align:start position:0%
that are two dimensional it can be that
we're<01:04:30.960><c> just</c><01:04:31.119><c> cramming</c><01:04:31.520><c> way</c><01:04:31.760><c> too</c><01:04:31.920><c> many</c>

01:04:32.069 --> 01:04:32.079 align:start position:0%
we're just cramming way too many
 

01:04:32.079 --> 01:04:34.069 align:start position:0%
we're just cramming way too many
characters<01:04:32.559><c> into</c><01:04:32.799><c> just</c><01:04:32.960><c> two</c><01:04:33.119><c> dimensions</c><01:04:33.920><c> and</c>

01:04:34.069 --> 01:04:34.079 align:start position:0%
characters into just two dimensions and
 

01:04:34.079 --> 01:04:36.470 align:start position:0%
characters into just two dimensions and
the<01:04:34.160><c> neural</c><01:04:34.480><c> net</c><01:04:34.720><c> is</c><01:04:34.799><c> not</c><01:04:35.039><c> able</c><01:04:35.280><c> to</c><01:04:35.440><c> really</c><01:04:36.240><c> use</c>

01:04:36.470 --> 01:04:36.480 align:start position:0%
the neural net is not able to really use
 

01:04:36.480 --> 01:04:38.710 align:start position:0%
the neural net is not able to really use
that<01:04:36.640><c> space</c><01:04:37.039><c> effectively</c><01:04:38.079><c> and</c><01:04:38.240><c> that</c><01:04:38.480><c> that</c><01:04:38.640><c> is</c>

01:04:38.710 --> 01:04:38.720 align:start position:0%
that space effectively and that that is
 

01:04:38.720 --> 01:04:39.910 align:start position:0%
that space effectively and that that is
sort<01:04:38.880><c> of</c><01:04:38.960><c> like</c><01:04:39.119><c> the</c><01:04:39.200><c> bottleneck</c><01:04:39.680><c> to</c><01:04:39.839><c> our</c>

01:04:39.910 --> 01:04:39.920 align:start position:0%
sort of like the bottleneck to our
 

01:04:39.920 --> 01:04:42.309 align:start position:0%
sort of like the bottleneck to our
network's<01:04:40.319><c> performance</c>

01:04:42.309 --> 01:04:42.319 align:start position:0%
network's performance
 

01:04:42.319 --> 01:04:45.029 align:start position:0%
network's performance
okay<01:04:42.559><c> 2.23</c><01:04:43.599><c> so</c><01:04:44.000><c> just</c><01:04:44.160><c> by</c><01:04:44.480><c> decreasing</c><01:04:44.960><c> the</c>

01:04:45.029 --> 01:04:45.039 align:start position:0%
okay 2.23 so just by decreasing the
 

01:04:45.039 --> 01:04:46.390 align:start position:0%
okay 2.23 so just by decreasing the
learning<01:04:45.280><c> rate</c><01:04:45.520><c> i</c><01:04:45.599><c> was</c><01:04:45.760><c> able</c><01:04:45.920><c> to</c><01:04:46.000><c> make</c><01:04:46.160><c> quite</c><01:04:46.319><c> a</c>

01:04:46.390 --> 01:04:46.400 align:start position:0%
learning rate i was able to make quite a
 

01:04:46.400 --> 01:04:48.150 align:start position:0%
learning rate i was able to make quite a
bit<01:04:46.480><c> of</c><01:04:46.559><c> progress</c><01:04:47.280><c> let's</c><01:04:47.520><c> run</c><01:04:47.680><c> this</c><01:04:47.839><c> one</c><01:04:48.000><c> more</c>

01:04:48.150 --> 01:04:48.160 align:start position:0%
bit of progress let's run this one more
 

01:04:48.160 --> 01:04:51.589 align:start position:0%
bit of progress let's run this one more
time

01:04:51.589 --> 01:04:51.599 align:start position:0%
 
 

01:04:51.599 --> 01:04:53.270 align:start position:0%
 
and<01:04:51.680><c> then</c><01:04:51.920><c> evaluate</c><01:04:52.319><c> the</c><01:04:52.559><c> training</c><01:04:53.039><c> and</c><01:04:53.200><c> the</c>

01:04:53.270 --> 01:04:53.280 align:start position:0%
and then evaluate the training and the
 

01:04:53.280 --> 01:04:56.630 align:start position:0%
and then evaluate the training and the
dev<01:04:53.520><c> loss</c>

01:04:56.630 --> 01:04:56.640 align:start position:0%
 
 

01:04:56.640 --> 01:04:58.150 align:start position:0%
 
now<01:04:56.799><c> one</c><01:04:56.960><c> more</c><01:04:57.200><c> thing</c><01:04:57.359><c> after</c><01:04:57.680><c> training</c><01:04:58.000><c> that</c>

01:04:58.150 --> 01:04:58.160 align:start position:0%
now one more thing after training that
 

01:04:58.160 --> 01:05:00.870 align:start position:0%
now one more thing after training that
i'd<01:04:58.240><c> like</c><01:04:58.400><c> to</c><01:04:58.480><c> do</c><01:04:58.960><c> is</c><01:04:59.200><c> i'd</c><01:04:59.280><c> like</c><01:04:59.440><c> to</c><01:04:59.680><c> visualize</c>

01:05:00.870 --> 01:05:00.880 align:start position:0%
i'd like to do is i'd like to visualize
 

01:05:00.880 --> 01:05:02.710 align:start position:0%
i'd like to do is i'd like to visualize
the<01:05:01.200><c> um</c>

01:05:02.710 --> 01:05:02.720 align:start position:0%
the um
 

01:05:02.720 --> 01:05:05.589 align:start position:0%
the um
embedding<01:05:03.200><c> vectors</c><01:05:04.079><c> for</c><01:05:04.319><c> these</c>

01:05:05.589 --> 01:05:05.599 align:start position:0%
embedding vectors for these
 

01:05:05.599 --> 01:05:07.910 align:start position:0%
embedding vectors for these
characters<01:05:06.160><c> before</c><01:05:06.480><c> we</c><01:05:06.640><c> scale</c><01:05:06.960><c> up</c><01:05:07.839><c> the</c>

01:05:07.910 --> 01:05:07.920 align:start position:0%
characters before we scale up the
 

01:05:07.920 --> 01:05:09.910 align:start position:0%
characters before we scale up the
embedding<01:05:08.319><c> size</c><01:05:08.640><c> from</c><01:05:08.880><c> two</c>

01:05:09.910 --> 01:05:09.920 align:start position:0%
embedding size from two
 

01:05:09.920 --> 01:05:11.270 align:start position:0%
embedding size from two
because<01:05:10.079><c> we'd</c><01:05:10.240><c> like</c><01:05:10.400><c> to</c><01:05:10.559><c> make</c><01:05:10.880><c> uh</c><01:05:11.039><c> this</c>

01:05:11.270 --> 01:05:11.280 align:start position:0%
because we'd like to make uh this
 

01:05:11.280 --> 01:05:13.510 align:start position:0%
because we'd like to make uh this
bottleneck<01:05:11.680><c> potentially</c><01:05:12.079><c> go</c><01:05:12.240><c> away</c>

01:05:13.510 --> 01:05:13.520 align:start position:0%
bottleneck potentially go away
 

01:05:13.520 --> 01:05:15.270 align:start position:0%
bottleneck potentially go away
but<01:05:13.760><c> once</c><01:05:14.000><c> i</c><01:05:14.160><c> make</c><01:05:14.319><c> this</c><01:05:14.559><c> greater</c><01:05:14.799><c> than</c><01:05:14.960><c> two</c><01:05:15.200><c> we</c>

01:05:15.270 --> 01:05:15.280 align:start position:0%
but once i make this greater than two we
 

01:05:15.280 --> 01:05:17.270 align:start position:0%
but once i make this greater than two we
won't<01:05:15.440><c> be</c><01:05:15.520><c> able</c><01:05:15.599><c> to</c><01:05:15.760><c> visualize</c><01:05:16.240><c> them</c>

01:05:17.270 --> 01:05:17.280 align:start position:0%
won't be able to visualize them
 

01:05:17.280 --> 01:05:18.230 align:start position:0%
won't be able to visualize them
so<01:05:17.520><c> here</c>

01:05:18.230 --> 01:05:18.240 align:start position:0%
so here
 

01:05:18.240 --> 01:05:21.510 align:start position:0%
so here
okay<01:05:18.480><c> we're</c><01:05:18.640><c> at</c><01:05:18.720><c> 2.23</c><01:05:19.920><c> and</c><01:05:20.079><c> 2.24</c>

01:05:21.510 --> 01:05:21.520 align:start position:0%
okay we're at 2.23 and 2.24
 

01:05:21.520 --> 01:05:24.150 align:start position:0%
okay we're at 2.23 and 2.24
so<01:05:21.839><c> um</c><01:05:22.480><c> we're</c><01:05:22.640><c> not</c><01:05:22.880><c> improving</c><01:05:23.359><c> much</c><01:05:23.599><c> more</c><01:05:24.000><c> and</c>

01:05:24.150 --> 01:05:24.160 align:start position:0%
so um we're not improving much more and
 

01:05:24.160 --> 01:05:25.510 align:start position:0%
so um we're not improving much more and
maybe<01:05:24.400><c> the</c><01:05:24.480><c> bottleneck</c><01:05:24.880><c> now</c><01:05:25.119><c> is</c><01:05:25.200><c> the</c>

01:05:25.510 --> 01:05:25.520 align:start position:0%
maybe the bottleneck now is the
 

01:05:25.520 --> 01:05:28.470 align:start position:0%
maybe the bottleneck now is the
character<01:05:25.920><c> embedding</c><01:05:26.240><c> size</c><01:05:26.480><c> which</c><01:05:26.720><c> is</c><01:05:26.799><c> two</c>

01:05:28.470 --> 01:05:28.480 align:start position:0%
character embedding size which is two
 

01:05:28.480 --> 01:05:29.910 align:start position:0%
character embedding size which is two
so<01:05:28.720><c> here</c><01:05:28.880><c> i</c><01:05:28.960><c> have</c><01:05:29.119><c> a</c><01:05:29.119><c> bunch</c><01:05:29.359><c> of</c><01:05:29.440><c> code</c><01:05:29.599><c> that</c><01:05:29.760><c> will</c>

01:05:29.910 --> 01:05:29.920 align:start position:0%
so here i have a bunch of code that will
 

01:05:29.920 --> 01:05:31.029 align:start position:0%
so here i have a bunch of code that will
create<01:05:30.079><c> a</c><01:05:30.160><c> figure</c>

01:05:31.029 --> 01:05:31.039 align:start position:0%
create a figure
 

01:05:31.039 --> 01:05:33.990 align:start position:0%
create a figure
and<01:05:31.200><c> then</c><01:05:31.359><c> we're</c><01:05:31.520><c> going</c><01:05:31.760><c> to</c><01:05:32.240><c> visualize</c>

01:05:33.990 --> 01:05:34.000 align:start position:0%
and then we're going to visualize
 

01:05:34.000 --> 01:05:35.510 align:start position:0%
and then we're going to visualize
the<01:05:34.079><c> embeddings</c><01:05:34.720><c> that</c><01:05:34.799><c> were</c><01:05:34.960><c> trained</c><01:05:35.280><c> by</c><01:05:35.359><c> the</c>

01:05:35.510 --> 01:05:35.520 align:start position:0%
the embeddings that were trained by the
 

01:05:35.520 --> 01:05:36.710 align:start position:0%
the embeddings that were trained by the
neural<01:05:35.760><c> net</c>

01:05:36.710 --> 01:05:36.720 align:start position:0%
neural net
 

01:05:36.720 --> 01:05:38.470 align:start position:0%
neural net
on<01:05:36.960><c> these</c><01:05:37.119><c> characters</c><01:05:38.000><c> because</c><01:05:38.240><c> right</c><01:05:38.400><c> now</c>

01:05:38.470 --> 01:05:38.480 align:start position:0%
on these characters because right now
 

01:05:38.480 --> 01:05:40.390 align:start position:0%
on these characters because right now
the<01:05:38.559><c> embedding</c><01:05:38.880><c> has</c><01:05:39.119><c> just</c><01:05:39.359><c> two</c><01:05:40.000><c> so</c><01:05:40.160><c> we</c><01:05:40.240><c> can</c>

01:05:40.390 --> 01:05:40.400 align:start position:0%
the embedding has just two so we can
 

01:05:40.400 --> 01:05:42.230 align:start position:0%
the embedding has just two so we can
visualize<01:05:40.880><c> all</c><01:05:40.960><c> the</c><01:05:41.039><c> characters</c><01:05:41.599><c> with</c><01:05:41.760><c> the</c><01:05:41.839><c> x</c>

01:05:42.230 --> 01:05:42.240 align:start position:0%
visualize all the characters with the x
 

01:05:42.240 --> 01:05:43.910 align:start position:0%
visualize all the characters with the x
and<01:05:42.319><c> the</c><01:05:42.480><c> y</c><01:05:42.720><c> coordinates</c><01:05:43.280><c> as</c><01:05:43.359><c> the</c><01:05:43.599><c> two</c>

01:05:43.910 --> 01:05:43.920 align:start position:0%
and the y coordinates as the two
 

01:05:43.920 --> 01:05:46.069 align:start position:0%
and the y coordinates as the two
embedding<01:05:44.400><c> locations</c><01:05:44.880><c> for</c><01:05:45.119><c> each</c><01:05:45.280><c> of</c><01:05:45.359><c> these</c>

01:05:46.069 --> 01:05:46.079 align:start position:0%
embedding locations for each of these
 

01:05:46.079 --> 01:05:47.750 align:start position:0%
embedding locations for each of these
characters

01:05:47.750 --> 01:05:47.760 align:start position:0%
characters
 

01:05:47.760 --> 01:05:49.990 align:start position:0%
characters
and<01:05:47.920><c> so</c><01:05:48.160><c> here</c><01:05:48.319><c> are</c><01:05:48.480><c> the</c><01:05:48.960><c> x</c><01:05:49.200><c> coordinates</c><01:05:49.839><c> and</c>

01:05:49.990 --> 01:05:50.000 align:start position:0%
and so here are the x coordinates and
 

01:05:50.000 --> 01:05:51.750 align:start position:0%
and so here are the x coordinates and
the<01:05:50.079><c> y</c><01:05:50.319><c> coordinates</c><01:05:50.960><c> which</c><01:05:51.200><c> are</c><01:05:51.280><c> the</c><01:05:51.440><c> columns</c>

01:05:51.750 --> 01:05:51.760 align:start position:0%
the y coordinates which are the columns
 

01:05:51.760 --> 01:05:52.789 align:start position:0%
the y coordinates which are the columns
of<01:05:51.920><c> c</c>

01:05:52.789 --> 01:05:52.799 align:start position:0%
of c
 

01:05:52.799 --> 01:05:55.430 align:start position:0%
of c
and<01:05:52.960><c> then</c><01:05:53.200><c> for</c><01:05:53.359><c> each</c><01:05:53.680><c> one</c><01:05:54.000><c> i</c><01:05:54.240><c> also</c><01:05:54.960><c> include</c><01:05:55.280><c> the</c>

01:05:55.430 --> 01:05:55.440 align:start position:0%
and then for each one i also include the
 

01:05:55.440 --> 01:05:58.309 align:start position:0%
and then for each one i also include the
text<01:05:56.079><c> of</c><01:05:56.160><c> the</c><01:05:56.240><c> little</c><01:05:56.480><c> character</c>

01:05:58.309 --> 01:05:58.319 align:start position:0%
text of the little character
 

01:05:58.319 --> 01:05:59.829 align:start position:0%
text of the little character
so<01:05:58.480><c> here</c><01:05:58.640><c> what</c><01:05:58.960><c> we</c><01:05:59.039><c> see</c><01:05:59.280><c> is</c><01:05:59.359><c> actually</c><01:05:59.599><c> kind</c><01:05:59.680><c> of</c>

01:05:59.829 --> 01:05:59.839 align:start position:0%
so here what we see is actually kind of
 

01:05:59.839 --> 01:06:02.390 align:start position:0%
so here what we see is actually kind of
interesting

01:06:02.390 --> 01:06:02.400 align:start position:0%
 
 

01:06:02.400 --> 01:06:04.470 align:start position:0%
 
the<01:06:02.559><c> network</c><01:06:02.960><c> has</c><01:06:03.119><c> basically</c><01:06:03.599><c> learned</c><01:06:04.319><c> to</c>

01:06:04.470 --> 01:06:04.480 align:start position:0%
the network has basically learned to
 

01:06:04.480 --> 01:06:06.150 align:start position:0%
the network has basically learned to
separate<01:06:04.960><c> out</c><01:06:05.119><c> the</c><01:06:05.200><c> characters</c><01:06:05.680><c> and</c><01:06:05.839><c> cluster</c>

01:06:06.150 --> 01:06:06.160 align:start position:0%
separate out the characters and cluster
 

01:06:06.160 --> 01:06:08.309 align:start position:0%
separate out the characters and cluster
them<01:06:06.400><c> a</c><01:06:06.480><c> little</c><01:06:06.720><c> bit</c><01:06:07.359><c> uh</c><01:06:07.599><c> so</c><01:06:07.760><c> for</c><01:06:07.839><c> example</c><01:06:08.160><c> you</c>

01:06:08.309 --> 01:06:08.319 align:start position:0%
them a little bit uh so for example you
 

01:06:08.319 --> 01:06:09.829 align:start position:0%
them a little bit uh so for example you
see<01:06:08.480><c> how</c><01:06:08.559><c> the</c><01:06:08.720><c> vowels</c>

01:06:09.829 --> 01:06:09.839 align:start position:0%
see how the vowels
 

01:06:09.839 --> 01:06:12.789 align:start position:0%
see how the vowels
a<01:06:10.160><c> e</c><01:06:10.480><c> i</c><01:06:10.720><c> o</c><01:06:10.960><c> u</c><01:06:11.280><c> are</c><01:06:11.440><c> clustered</c><01:06:11.920><c> up</c><01:06:12.000><c> here</c>

01:06:12.789 --> 01:06:12.799 align:start position:0%
a e i o u are clustered up here
 

01:06:12.799 --> 01:06:14.230 align:start position:0%
a e i o u are clustered up here
so<01:06:13.039><c> that's</c><01:06:13.200><c> telling</c><01:06:13.520><c> us</c><01:06:13.680><c> that</c><01:06:13.920><c> is</c><01:06:14.000><c> that</c><01:06:14.160><c> the</c>

01:06:14.230 --> 01:06:14.240 align:start position:0%
so that's telling us that is that the
 

01:06:14.240 --> 01:06:16.150 align:start position:0%
so that's telling us that is that the
neural<01:06:14.480><c> net</c><01:06:14.799><c> treats</c><01:06:15.039><c> these</c><01:06:15.280><c> is</c><01:06:15.440><c> very</c><01:06:15.680><c> similar</c>

01:06:16.150 --> 01:06:16.160 align:start position:0%
neural net treats these is very similar
 

01:06:16.160 --> 01:06:17.430 align:start position:0%
neural net treats these is very similar
right<01:06:16.480><c> because</c><01:06:16.640><c> when</c><01:06:16.799><c> they</c><01:06:16.960><c> feed</c><01:06:17.200><c> into</c><01:06:17.359><c> the</c>

01:06:17.430 --> 01:06:17.440 align:start position:0%
right because when they feed into the
 

01:06:17.440 --> 01:06:18.549 align:start position:0%
right because when they feed into the
neural<01:06:17.760><c> net</c>

01:06:18.549 --> 01:06:18.559 align:start position:0%
neural net
 

01:06:18.559 --> 01:06:20.710 align:start position:0%
neural net
the<01:06:18.799><c> embedding</c><01:06:19.599><c> uh</c><01:06:20.079><c> for</c><01:06:20.319><c> all</c><01:06:20.480><c> these</c>

01:06:20.710 --> 01:06:20.720 align:start position:0%
the embedding uh for all these
 

01:06:20.720 --> 01:06:22.630 align:start position:0%
the embedding uh for all these
characters<01:06:21.200><c> is</c><01:06:21.280><c> very</c><01:06:21.520><c> similar</c><01:06:22.160><c> and</c><01:06:22.319><c> so</c><01:06:22.480><c> the</c>

01:06:22.630 --> 01:06:22.640 align:start position:0%
characters is very similar and so the
 

01:06:22.640 --> 01:06:23.829 align:start position:0%
characters is very similar and so the
neural<01:06:22.960><c> net</c><01:06:23.039><c> thinks</c><01:06:23.280><c> that</c><01:06:23.359><c> they're</c><01:06:23.599><c> very</c>

01:06:23.829 --> 01:06:23.839 align:start position:0%
neural net thinks that they're very
 

01:06:23.839 --> 01:06:25.750 align:start position:0%
neural net thinks that they're very
similar<01:06:24.319><c> and</c><01:06:24.480><c> kind</c><01:06:24.640><c> of</c><01:06:24.720><c> like</c><01:06:24.960><c> interchangeable</c>

01:06:25.750 --> 01:06:25.760 align:start position:0%
similar and kind of like interchangeable
 

01:06:25.760 --> 01:06:27.349 align:start position:0%
similar and kind of like interchangeable
if<01:06:25.920><c> that</c><01:06:26.079><c> makes</c><01:06:26.319><c> sense</c>

01:06:27.349 --> 01:06:27.359 align:start position:0%
if that makes sense
 

01:06:27.359 --> 01:06:29.190 align:start position:0%
if that makes sense
um

01:06:29.190 --> 01:06:29.200 align:start position:0%
um
 

01:06:29.200 --> 01:06:31.109 align:start position:0%
um
then<01:06:29.680><c> the</c><01:06:30.000><c> the</c><01:06:30.160><c> points</c><01:06:30.400><c> that</c><01:06:30.559><c> are</c><01:06:30.720><c> like</c><01:06:30.880><c> really</c>

01:06:31.109 --> 01:06:31.119 align:start position:0%
then the the points that are like really
 

01:06:31.119 --> 01:06:33.430 align:start position:0%
then the the points that are like really
far<01:06:31.280><c> away</c><01:06:31.520><c> are</c><01:06:31.680><c> for</c><01:06:31.760><c> example</c><01:06:32.160><c> q</c><01:06:32.799><c> q</c><01:06:33.039><c> is</c><01:06:33.200><c> kind</c><01:06:33.280><c> of</c>

01:06:33.430 --> 01:06:33.440 align:start position:0%
far away are for example q q is kind of
 

01:06:33.440 --> 01:06:35.670 align:start position:0%
far away are for example q q is kind of
treated<01:06:33.680><c> as</c><01:06:33.839><c> an</c><01:06:33.920><c> exception</c><01:06:34.720><c> and</c><01:06:34.880><c> q</c><01:06:35.200><c> has</c><01:06:35.359><c> a</c><01:06:35.440><c> very</c>

01:06:35.670 --> 01:06:35.680 align:start position:0%
treated as an exception and q has a very
 

01:06:35.680 --> 01:06:36.630 align:start position:0%
treated as an exception and q has a very
special

01:06:36.630 --> 01:06:36.640 align:start position:0%
special
 

01:06:36.640 --> 01:06:38.710 align:start position:0%
special
embedding<01:06:36.960><c> vector</c><01:06:37.440><c> so</c><01:06:37.599><c> to</c><01:06:37.760><c> speak</c>

01:06:38.710 --> 01:06:38.720 align:start position:0%
embedding vector so to speak
 

01:06:38.720 --> 01:06:40.390 align:start position:0%
embedding vector so to speak
similarly<01:06:39.359><c> dot</c><01:06:39.680><c> which</c><01:06:39.920><c> is</c><01:06:40.000><c> a</c><01:06:40.160><c> special</c>

01:06:40.390 --> 01:06:40.400 align:start position:0%
similarly dot which is a special
 

01:06:40.400 --> 01:06:42.470 align:start position:0%
similarly dot which is a special
character<01:06:40.799><c> is</c><01:06:40.960><c> all</c><01:06:41.039><c> the</c><01:06:41.119><c> way</c><01:06:41.280><c> out</c><01:06:41.520><c> here</c>

01:06:42.470 --> 01:06:42.480 align:start position:0%
character is all the way out here
 

01:06:42.480 --> 01:06:44.230 align:start position:0%
character is all the way out here
and<01:06:42.960><c> a</c><01:06:43.039><c> lot</c><01:06:43.200><c> of</c><01:06:43.280><c> the</c><01:06:43.440><c> other</c><01:06:43.680><c> letters</c><01:06:44.000><c> are</c><01:06:44.079><c> sort</c>

01:06:44.230 --> 01:06:44.240 align:start position:0%
and a lot of the other letters are sort
 

01:06:44.240 --> 01:06:46.630 align:start position:0%
and a lot of the other letters are sort
of<01:06:44.319><c> like</c><01:06:44.480><c> clustered</c><01:06:44.960><c> up</c><01:06:45.359><c> here</c><01:06:46.319><c> and</c><01:06:46.400><c> so</c><01:06:46.559><c> it's</c>

01:06:46.630 --> 01:06:46.640 align:start position:0%
of like clustered up here and so it's
 

01:06:46.640 --> 01:06:47.990 align:start position:0%
of like clustered up here and so it's
kind<01:06:46.799><c> of</c><01:06:46.880><c> interesting</c><01:06:47.200><c> that</c><01:06:47.599><c> there's</c><01:06:47.920><c> a</c>

01:06:47.990 --> 01:06:48.000 align:start position:0%
kind of interesting that there's a
 

01:06:48.000 --> 01:06:50.069 align:start position:0%
kind of interesting that there's a
little<01:06:48.160><c> bit</c><01:06:48.319><c> of</c><01:06:48.400><c> structure</c><01:06:48.799><c> here</c>

01:06:50.069 --> 01:06:50.079 align:start position:0%
little bit of structure here
 

01:06:50.079 --> 01:06:51.589 align:start position:0%
little bit of structure here
after<01:06:50.480><c> the</c><01:06:50.640><c> training</c>

01:06:51.589 --> 01:06:51.599 align:start position:0%
after the training
 

01:06:51.599 --> 01:06:53.670 align:start position:0%
after the training
and<01:06:51.920><c> it's</c><01:06:52.079><c> not</c><01:06:52.480><c> definitely</c><01:06:52.880><c> not</c><01:06:53.119><c> random</c><01:06:53.520><c> and</c>

01:06:53.670 --> 01:06:53.680 align:start position:0%
and it's not definitely not random and
 

01:06:53.680 --> 01:06:55.910 align:start position:0%
and it's not definitely not random and
these<01:06:53.920><c> embeddings</c><01:06:54.640><c> make</c><01:06:54.880><c> sense</c>

01:06:55.910 --> 01:06:55.920 align:start position:0%
these embeddings make sense
 

01:06:55.920 --> 01:06:57.750 align:start position:0%
these embeddings make sense
so<01:06:56.079><c> we're</c><01:06:56.240><c> now</c><01:06:56.400><c> going</c><01:06:56.559><c> to</c><01:06:56.960><c> scale</c><01:06:57.280><c> up</c><01:06:57.599><c> the</c>

01:06:57.750 --> 01:06:57.760 align:start position:0%
so we're now going to scale up the
 

01:06:57.760 --> 01:06:59.029 align:start position:0%
so we're now going to scale up the
embedding<01:06:58.079><c> size</c><01:06:58.400><c> and</c><01:06:58.480><c> won't</c><01:06:58.640><c> be</c><01:06:58.799><c> able</c><01:06:58.960><c> to</c>

01:06:59.029 --> 01:06:59.039 align:start position:0%
embedding size and won't be able to
 

01:06:59.039 --> 01:07:01.670 align:start position:0%
embedding size and won't be able to
visualize<01:06:59.440><c> it</c><01:06:59.520><c> directly</c><01:07:00.240><c> but</c><01:07:00.400><c> we</c><01:07:00.559><c> expect</c><01:07:01.119><c> that</c>

01:07:01.670 --> 01:07:01.680 align:start position:0%
visualize it directly but we expect that
 

01:07:01.680 --> 01:07:03.670 align:start position:0%
visualize it directly but we expect that
because<01:07:02.000><c> we're</c><01:07:02.400><c> under</c><01:07:02.640><c> fitting</c>

01:07:03.670 --> 01:07:03.680 align:start position:0%
because we're under fitting
 

01:07:03.680 --> 01:07:06.069 align:start position:0%
because we're under fitting
and<01:07:04.000><c> we</c><01:07:04.319><c> made</c><01:07:04.799><c> this</c><01:07:05.039><c> layer</c><01:07:05.359><c> much</c><01:07:05.520><c> bigger</c><01:07:06.000><c> and</c>

01:07:06.069 --> 01:07:06.079 align:start position:0%
and we made this layer much bigger and
 

01:07:06.079 --> 01:07:08.150 align:start position:0%
and we made this layer much bigger and
did<01:07:06.319><c> not</c><01:07:06.480><c> sufficiently</c><01:07:07.039><c> improve</c><01:07:07.359><c> the</c><01:07:07.440><c> loss</c>

01:07:08.150 --> 01:07:08.160 align:start position:0%
did not sufficiently improve the loss
 

01:07:08.160 --> 01:07:10.789 align:start position:0%
did not sufficiently improve the loss
we're<01:07:08.319><c> thinking</c><01:07:08.640><c> that</c><01:07:08.880><c> the</c><01:07:09.520><c> um</c>

01:07:10.789 --> 01:07:10.799 align:start position:0%
we're thinking that the um
 

01:07:10.799 --> 01:07:12.549 align:start position:0%
we're thinking that the um
constraint<01:07:11.520><c> to</c><01:07:11.680><c> better</c><01:07:11.920><c> performance</c><01:07:12.400><c> right</c>

01:07:12.549 --> 01:07:12.559 align:start position:0%
constraint to better performance right
 

01:07:12.559 --> 01:07:15.109 align:start position:0%
constraint to better performance right
now<01:07:13.039><c> could</c><01:07:13.200><c> be</c><01:07:13.359><c> these</c><01:07:14.000><c> embedding</c><01:07:14.319><c> pictures</c><01:07:14.960><c> so</c>

01:07:15.109 --> 01:07:15.119 align:start position:0%
now could be these embedding pictures so
 

01:07:15.119 --> 01:07:16.630 align:start position:0%
now could be these embedding pictures so
let's<01:07:15.280><c> make</c><01:07:15.440><c> them</c><01:07:15.599><c> bigger</c><01:07:16.079><c> okay</c><01:07:16.319><c> so</c><01:07:16.480><c> let's</c>

01:07:16.630 --> 01:07:16.640 align:start position:0%
let's make them bigger okay so let's
 

01:07:16.640 --> 01:07:17.829 align:start position:0%
let's make them bigger okay so let's
scroll<01:07:16.880><c> up</c><01:07:17.039><c> here</c>

01:07:17.829 --> 01:07:17.839 align:start position:0%
scroll up here
 

01:07:17.839 --> 01:07:19.029 align:start position:0%
scroll up here
and<01:07:18.000><c> now</c><01:07:18.160><c> we</c><01:07:18.319><c> don't</c><01:07:18.400><c> have</c><01:07:18.559><c> two</c><01:07:18.720><c> dimensional</c>

01:07:19.029 --> 01:07:19.039 align:start position:0%
and now we don't have two dimensional
 

01:07:19.039 --> 01:07:21.589 align:start position:0%
and now we don't have two dimensional
embeddings<01:07:19.599><c> we</c><01:07:19.839><c> are</c><01:07:20.000><c> going</c><01:07:20.240><c> to</c><01:07:20.480><c> have</c>

01:07:21.589 --> 01:07:21.599 align:start position:0%
embeddings we are going to have
 

01:07:21.599 --> 01:07:23.430 align:start position:0%
embeddings we are going to have
say<01:07:21.839><c> 10</c><01:07:22.000><c> dimensional</c><01:07:22.400><c> embeddings</c><01:07:23.039><c> for</c><01:07:23.280><c> each</c>

01:07:23.430 --> 01:07:23.440 align:start position:0%
say 10 dimensional embeddings for each
 

01:07:23.440 --> 01:07:25.109 align:start position:0%
say 10 dimensional embeddings for each
word

01:07:25.109 --> 01:07:25.119 align:start position:0%
word
 

01:07:25.119 --> 01:07:26.150 align:start position:0%
word
then

01:07:26.150 --> 01:07:26.160 align:start position:0%
then
 

01:07:26.160 --> 01:07:30.470 align:start position:0%
then
this<01:07:26.400><c> layer</c><01:07:26.720><c> will</c><01:07:26.880><c> receive</c><01:07:28.079><c> 3</c><01:07:28.559><c> times</c><01:07:29.119><c> 10</c><01:07:29.680><c> so</c><01:07:30.000><c> 30</c>

01:07:30.470 --> 01:07:30.480 align:start position:0%
this layer will receive 3 times 10 so 30
 

01:07:30.480 --> 01:07:31.510 align:start position:0%
this layer will receive 3 times 10 so 30
inputs

01:07:31.510 --> 01:07:31.520 align:start position:0%
inputs
 

01:07:31.520 --> 01:07:33.750 align:start position:0%
inputs
will<01:07:31.760><c> go</c><01:07:31.920><c> into</c>

01:07:33.750 --> 01:07:33.760 align:start position:0%
will go into
 

01:07:33.760 --> 01:07:35.750 align:start position:0%
will go into
the<01:07:33.920><c> hidden</c><01:07:34.160><c> layer</c>

01:07:35.750 --> 01:07:35.760 align:start position:0%
the hidden layer
 

01:07:35.760 --> 01:07:37.029 align:start position:0%
the hidden layer
let's<01:07:36.000><c> also</c><01:07:36.160><c> make</c><01:07:36.319><c> the</c><01:07:36.400><c> hidden</c><01:07:36.559><c> layer</c><01:07:36.799><c> a</c><01:07:36.880><c> bit</c>

01:07:37.029 --> 01:07:37.039 align:start position:0%
let's also make the hidden layer a bit
 

01:07:37.039 --> 01:07:38.870 align:start position:0%
let's also make the hidden layer a bit
smaller<01:07:37.280><c> so</c><01:07:37.440><c> instead</c><01:07:37.680><c> of</c><01:07:37.760><c> 300</c><01:07:38.319><c> let's</c><01:07:38.559><c> just</c><01:07:38.720><c> do</c>

01:07:38.870 --> 01:07:38.880 align:start position:0%
smaller so instead of 300 let's just do
 

01:07:38.880 --> 01:07:41.589 align:start position:0%
smaller so instead of 300 let's just do
200<01:07:39.359><c> neurons</c><01:07:39.760><c> in</c><01:07:39.839><c> that</c><01:07:40.079><c> hidden</c><01:07:40.319><c> layer</c>

01:07:41.589 --> 01:07:41.599 align:start position:0%
200 neurons in that hidden layer
 

01:07:41.599 --> 01:07:43.510 align:start position:0%
200 neurons in that hidden layer
so<01:07:41.760><c> now</c><01:07:41.920><c> the</c><01:07:42.079><c> total</c><01:07:42.319><c> number</c><01:07:42.559><c> of</c><01:07:42.799><c> elements</c><01:07:43.280><c> will</c>

01:07:43.510 --> 01:07:43.520 align:start position:0%
so now the total number of elements will
 

01:07:43.520 --> 01:07:47.190 align:start position:0%
so now the total number of elements will
be<01:07:44.160><c> slightly</c><01:07:44.559><c> bigger</c><01:07:44.880><c> at</c><01:07:45.039><c> 11</c><01:07:45.440><c> 000</c>

01:07:47.190 --> 01:07:47.200 align:start position:0%
be slightly bigger at 11 000
 

01:07:47.200 --> 01:07:48.390 align:start position:0%
be slightly bigger at 11 000
and<01:07:47.280><c> then</c><01:07:47.599><c> here</c><01:07:47.760><c> we</c><01:07:47.920><c> have</c><01:07:48.000><c> to</c><01:07:48.079><c> be</c><01:07:48.240><c> a</c><01:07:48.240><c> bit</c>

01:07:48.390 --> 01:07:48.400 align:start position:0%
and then here we have to be a bit
 

01:07:48.400 --> 01:07:50.549 align:start position:0%
and then here we have to be a bit
careful<01:07:48.799><c> because</c><01:07:49.680><c> um</c>

01:07:50.549 --> 01:07:50.559 align:start position:0%
careful because um
 

01:07:50.559 --> 01:07:53.190 align:start position:0%
careful because um
okay<01:07:50.799><c> the</c><01:07:50.880><c> learning</c><01:07:51.200><c> rate</c><01:07:51.520><c> we</c><01:07:51.680><c> set</c><01:07:51.839><c> to</c><01:07:52.000><c> 0.1</c>

01:07:53.190 --> 01:07:53.200 align:start position:0%
okay the learning rate we set to 0.1
 

01:07:53.200 --> 01:07:55.990 align:start position:0%
okay the learning rate we set to 0.1
here<01:07:53.520><c> we</c><01:07:53.680><c> are</c><01:07:53.839><c> hardcoded</c><01:07:54.240><c> in</c><01:07:54.480><c> six</c><01:07:55.119><c> and</c>

01:07:55.990 --> 01:07:56.000 align:start position:0%
here we are hardcoded in six and
 

01:07:56.000 --> 01:07:56.870 align:start position:0%
here we are hardcoded in six and
obviously<01:07:56.400><c> if</c><01:07:56.480><c> you're</c><01:07:56.559><c> working</c><01:07:56.799><c> in</c>

01:07:56.870 --> 01:07:56.880 align:start position:0%
obviously if you're working in
 

01:07:56.880 --> 01:07:57.750 align:start position:0%
obviously if you're working in
production<01:07:57.280><c> you</c><01:07:57.359><c> don't</c><01:07:57.520><c> wanna</c><01:07:57.680><c> be</c>

01:07:57.750 --> 01:07:57.760 align:start position:0%
production you don't wanna be
 

01:07:57.760 --> 01:07:59.990 align:start position:0%
production you don't wanna be
hard-coding<01:07:58.319><c> magic</c><01:07:58.640><c> numbers</c><01:07:59.359><c> but</c><01:07:59.599><c> instead</c><01:07:59.920><c> of</c>

01:07:59.990 --> 01:08:00.000 align:start position:0%
hard-coding magic numbers but instead of
 

01:08:00.000 --> 01:08:02.309 align:start position:0%
hard-coding magic numbers but instead of
six<01:08:00.240><c> this</c><01:08:00.400><c> should</c><01:08:00.559><c> now</c><01:08:00.799><c> be</c><01:08:01.039><c> thirty</c>

01:08:02.309 --> 01:08:02.319 align:start position:0%
six this should now be thirty
 

01:08:02.319 --> 01:08:04.069 align:start position:0%
six this should now be thirty
um

01:08:04.069 --> 01:08:04.079 align:start position:0%
um
 

01:08:04.079 --> 01:08:05.670 align:start position:0%
um
and<01:08:04.319><c> let's</c><01:08:04.640><c> run</c><01:08:04.880><c> for</c><01:08:05.119><c> fifty</c><01:08:05.359><c> thousand</c>

01:08:05.670 --> 01:08:05.680 align:start position:0%
and let's run for fifty thousand
 

01:08:05.680 --> 01:08:07.910 align:start position:0%
and let's run for fifty thousand
iterations<01:08:06.799><c> and</c><01:08:06.960><c> let</c><01:08:07.119><c> me</c><01:08:07.280><c> split</c><01:08:07.680><c> out</c><01:08:07.839><c> the</c>

01:08:07.910 --> 01:08:07.920 align:start position:0%
iterations and let me split out the
 

01:08:07.920 --> 01:08:10.789 align:start position:0%
iterations and let me split out the
initialization<01:08:08.720><c> here</c><01:08:09.280><c> outside</c>

01:08:10.789 --> 01:08:10.799 align:start position:0%
initialization here outside
 

01:08:10.799 --> 01:08:12.630 align:start position:0%
initialization here outside
so<01:08:10.960><c> that</c><01:08:11.359><c> when</c><01:08:11.599><c> we</c><01:08:11.760><c> run</c><01:08:11.920><c> this</c><01:08:12.079><c> cell</c><01:08:12.319><c> multiple</c>

01:08:12.630 --> 01:08:12.640 align:start position:0%
so that when we run this cell multiple
 

01:08:12.640 --> 01:08:14.390 align:start position:0%
so that when we run this cell multiple
times<01:08:12.880><c> it's</c><01:08:12.960><c> not</c><01:08:13.119><c> going</c><01:08:13.280><c> to</c><01:08:13.440><c> wipe</c><01:08:13.680><c> out</c>

01:08:14.390 --> 01:08:14.400 align:start position:0%
times it's not going to wipe out
 

01:08:14.400 --> 01:08:17.510 align:start position:0%
times it's not going to wipe out
our<01:08:14.559><c> loss</c>

01:08:17.510 --> 01:08:17.520 align:start position:0%
 
 

01:08:17.520 --> 01:08:19.430 align:start position:0%
 
in<01:08:17.679><c> addition</c><01:08:18.000><c> to</c><01:08:18.080><c> that</c>

01:08:19.430 --> 01:08:19.440 align:start position:0%
in addition to that
 

01:08:19.440 --> 01:08:20.630 align:start position:0%
in addition to that
here

01:08:20.630 --> 01:08:20.640 align:start position:0%
here
 

01:08:20.640 --> 01:08:22.630 align:start position:0%
here
let's<01:08:20.960><c> instead</c><01:08:21.279><c> of</c><01:08:21.359><c> logging</c><01:08:21.679><c> lost.item</c><01:08:22.400><c> let's</c>

01:08:22.630 --> 01:08:22.640 align:start position:0%
let's instead of logging lost.item let's
 

01:08:22.640 --> 01:08:23.430 align:start position:0%
let's instead of logging lost.item let's
actually

01:08:23.430 --> 01:08:23.440 align:start position:0%
actually
 

01:08:23.440 --> 01:08:25.510 align:start position:0%
actually
log<01:08:23.839><c> the</c>

01:08:25.510 --> 01:08:25.520 align:start position:0%
log the
 

01:08:25.520 --> 01:08:26.550 align:start position:0%
log the
let's

01:08:26.550 --> 01:08:26.560 align:start position:0%
let's
 

01:08:26.560 --> 01:08:28.550 align:start position:0%
let's
do<01:08:26.799><c> log</c><01:08:27.120><c> 10</c>

01:08:28.550 --> 01:08:28.560 align:start position:0%
do log 10
 

01:08:28.560 --> 01:08:32.709 align:start position:0%
do log 10
i<01:08:28.719><c> believe</c><01:08:29.040><c> that's</c><01:08:29.359><c> a</c><01:08:29.440><c> function</c><01:08:30.159><c> of</c><01:08:30.319><c> the</c><01:08:30.480><c> loss</c>

01:08:32.709 --> 01:08:32.719 align:start position:0%
i believe that's a function of the loss
 

01:08:32.719 --> 01:08:34.309 align:start position:0%
i believe that's a function of the loss
and<01:08:32.880><c> i'll</c><01:08:32.960><c> show</c><01:08:33.120><c> you</c><01:08:33.279><c> why</c><01:08:33.440><c> in</c><01:08:33.520><c> a</c><01:08:33.600><c> second</c><01:08:34.080><c> let's</c>

01:08:34.309 --> 01:08:34.319 align:start position:0%
and i'll show you why in a second let's
 

01:08:34.319 --> 01:08:37.110 align:start position:0%
and i'll show you why in a second let's
optimize<01:08:34.799><c> this</c>

01:08:37.110 --> 01:08:37.120 align:start position:0%
 
 

01:08:37.120 --> 01:08:39.269 align:start position:0%
 
basically<01:08:37.440><c> i'd</c><01:08:37.520><c> like</c><01:08:37.679><c> to</c><01:08:37.839><c> plot</c><01:08:38.400><c> the</c><01:08:38.560><c> log</c><01:08:38.880><c> loss</c>

01:08:39.269 --> 01:08:39.279 align:start position:0%
basically i'd like to plot the log loss
 

01:08:39.279 --> 01:08:40.870 align:start position:0%
basically i'd like to plot the log loss
instead<01:08:39.520><c> of</c><01:08:39.600><c> the</c><01:08:39.759><c> loss</c><01:08:40.319><c> because</c><01:08:40.560><c> when</c><01:08:40.719><c> you</c>

01:08:40.870 --> 01:08:40.880 align:start position:0%
instead of the loss because when you
 

01:08:40.880 --> 01:08:42.229 align:start position:0%
instead of the loss because when you
plot<01:08:41.040><c> the</c><01:08:41.120><c> loss</c><01:08:41.440><c> many</c><01:08:41.600><c> times</c><01:08:41.839><c> it</c><01:08:41.920><c> can</c><01:08:42.080><c> have</c>

01:08:42.229 --> 01:08:42.239 align:start position:0%
plot the loss many times it can have
 

01:08:42.239 --> 01:08:44.950 align:start position:0%
plot the loss many times it can have
this<01:08:42.400><c> hockey</c><01:08:42.719><c> stick</c><01:08:42.960><c> appearance</c><01:08:43.920><c> and</c><01:08:44.319><c> log</c>

01:08:44.950 --> 01:08:44.960 align:start position:0%
this hockey stick appearance and log
 

01:08:44.960 --> 01:08:46.789 align:start position:0%
this hockey stick appearance and log
squashes<01:08:45.679><c> it</c><01:08:45.920><c> in</c>

01:08:46.789 --> 01:08:46.799 align:start position:0%
squashes it in
 

01:08:46.799 --> 01:08:48.950 align:start position:0%
squashes it in
uh<01:08:47.040><c> so</c><01:08:47.359><c> it</c><01:08:47.520><c> just</c><01:08:47.679><c> kind</c><01:08:47.839><c> of</c><01:08:47.920><c> like</c><01:08:48.080><c> looks</c><01:08:48.319><c> nicer</c>

01:08:48.950 --> 01:08:48.960 align:start position:0%
uh so it just kind of like looks nicer
 

01:08:48.960 --> 01:08:51.669 align:start position:0%
uh so it just kind of like looks nicer
so<01:08:49.120><c> the</c><01:08:49.279><c> x-axis</c><01:08:49.920><c> is</c><01:08:50.239><c> step</c><01:08:50.640><c> i</c>

01:08:51.669 --> 01:08:51.679 align:start position:0%
so the x-axis is step i
 

01:08:51.679 --> 01:09:00.789 align:start position:0%
so the x-axis is step i
and<01:08:51.839><c> the</c><01:08:51.920><c> y-axis</c><01:08:52.480><c> will</c><01:08:52.640><c> be</c><01:08:52.799><c> the</c><01:08:52.960><c> loss</c><01:08:53.279><c> i</c>

01:09:00.789 --> 01:09:00.799 align:start position:0%
 
 

01:09:00.799 --> 01:09:03.110 align:start position:0%
 
and<01:09:00.880><c> then</c><01:09:01.120><c> here</c><01:09:01.359><c> this</c><01:09:01.600><c> is</c><01:09:01.759><c> 30.</c>

01:09:03.110 --> 01:09:03.120 align:start position:0%
and then here this is 30.
 

01:09:03.120 --> 01:09:08.709 align:start position:0%
and then here this is 30.
ideally<01:09:03.600><c> we</c><01:09:03.759><c> wouldn't</c><01:09:04.000><c> be</c><01:09:04.159><c> hard-coding</c><01:09:04.719><c> these</c>

01:09:08.709 --> 01:09:08.719 align:start position:0%
 
 

01:09:08.719 --> 01:09:11.430 align:start position:0%
 
okay<01:09:08.960><c> so</c><01:09:09.040><c> let's</c><01:09:09.199><c> look</c><01:09:09.359><c> at</c><01:09:09.440><c> the</c><01:09:09.600><c> loss</c>

01:09:11.430 --> 01:09:11.440 align:start position:0%
okay so let's look at the loss
 

01:09:11.440 --> 01:09:13.430 align:start position:0%
okay so let's look at the loss
okay<01:09:12.000><c> it's</c><01:09:12.319><c> again</c><01:09:12.560><c> very</c><01:09:12.799><c> thick</c><01:09:13.120><c> because</c><01:09:13.359><c> the</c>

01:09:13.430 --> 01:09:13.440 align:start position:0%
okay it's again very thick because the
 

01:09:13.440 --> 01:09:15.510 align:start position:0%
okay it's again very thick because the
mini<01:09:13.679><c> batch</c><01:09:13.920><c> size</c><01:09:14.159><c> is</c><01:09:14.239><c> very</c><01:09:14.480><c> small</c><01:09:15.120><c> but</c><01:09:15.359><c> the</c>

01:09:15.510 --> 01:09:15.520 align:start position:0%
mini batch size is very small but the
 

01:09:15.520 --> 01:09:17.990 align:start position:0%
mini batch size is very small but the
total<01:09:15.759><c> loss</c><01:09:16.000><c> over</c><01:09:16.239><c> the</c><01:09:16.319><c> training</c><01:09:16.640><c> set</c><01:09:17.120><c> is</c><01:09:17.279><c> 2.3</c>

01:09:17.990 --> 01:09:18.000 align:start position:0%
total loss over the training set is 2.3
 

01:09:18.000 --> 01:09:20.870 align:start position:0%
total loss over the training set is 2.3
and<01:09:18.080><c> the</c><01:09:18.640><c> the</c><01:09:18.799><c> tests</c><01:09:19.440><c> or</c><01:09:19.520><c> the</c><01:09:19.679><c> def</c><01:09:19.920><c> set</c><01:09:20.159><c> is</c><01:09:20.239><c> 2.38</c>

01:09:20.870 --> 01:09:20.880 align:start position:0%
and the the tests or the def set is 2.38
 

01:09:20.880 --> 01:09:21.910 align:start position:0%
and the the tests or the def set is 2.38
as<01:09:20.960><c> well</c>

01:09:21.910 --> 01:09:21.920 align:start position:0%
as well
 

01:09:21.920 --> 01:09:24.070 align:start position:0%
as well
so<01:09:22.080><c> so</c><01:09:22.239><c> far</c><01:09:22.480><c> so</c><01:09:22.640><c> good</c><01:09:23.120><c> uh</c><01:09:23.279><c> let's</c><01:09:23.520><c> try</c><01:09:23.679><c> to</c><01:09:23.839><c> now</c>

01:09:24.070 --> 01:09:24.080 align:start position:0%
so so far so good uh let's try to now
 

01:09:24.080 --> 01:09:25.669 align:start position:0%
so so far so good uh let's try to now
decrease<01:09:24.480><c> the</c><01:09:24.560><c> learning</c><01:09:24.880><c> rate</c>

01:09:25.669 --> 01:09:25.679 align:start position:0%
decrease the learning rate
 

01:09:25.679 --> 01:09:29.110 align:start position:0%
decrease the learning rate
by<01:09:25.839><c> a</c><01:09:25.920><c> factor</c><01:09:26.400><c> of</c><01:09:26.560><c> 10</c>

01:09:29.110 --> 01:09:29.120 align:start position:0%
 
 

01:09:29.120 --> 01:09:35.269 align:start position:0%
 
and<01:09:29.199><c> train</c><01:09:29.440><c> for</c><01:09:29.679><c> another</c><01:09:30.000><c> 50</c><01:09:30.319><c> 000</c><01:09:30.560><c> iterations</c>

01:09:35.269 --> 01:09:35.279 align:start position:0%
 
 

01:09:35.279 --> 01:09:37.269 align:start position:0%
 
we'd<01:09:35.520><c> hope</c><01:09:35.759><c> that</c><01:09:36.000><c> we</c><01:09:36.159><c> would</c><01:09:36.319><c> be</c><01:09:36.480><c> able</c><01:09:36.640><c> to</c><01:09:36.799><c> beat</c>

01:09:37.269 --> 01:09:37.279 align:start position:0%
we'd hope that we would be able to beat
 

01:09:37.279 --> 01:09:43.269 align:start position:0%
we'd hope that we would be able to beat
uh<01:09:37.600><c> 2.32</c>

01:09:43.269 --> 01:09:43.279 align:start position:0%
 
 

01:09:43.279 --> 01:09:44.709 align:start position:0%
 
but<01:09:43.600><c> again</c><01:09:43.839><c> we're</c><01:09:44.000><c> just</c><01:09:44.159><c> kind</c><01:09:44.319><c> of</c><01:09:44.400><c> like</c><01:09:44.560><c> doing</c>

01:09:44.709 --> 01:09:44.719 align:start position:0%
but again we're just kind of like doing
 

01:09:44.719 --> 01:09:46.789 align:start position:0%
but again we're just kind of like doing
this<01:09:44.880><c> very</c><01:09:45.040><c> haphazardly</c><01:09:45.839><c> so</c><01:09:46.400><c> i</c><01:09:46.560><c> don't</c>

01:09:46.789 --> 01:09:46.799 align:start position:0%
this very haphazardly so i don't
 

01:09:46.799 --> 01:09:48.470 align:start position:0%
this very haphazardly so i don't
actually<01:09:47.040><c> have</c><01:09:47.199><c> confidence</c><01:09:47.679><c> that</c><01:09:48.319><c> our</c>

01:09:48.470 --> 01:09:48.480 align:start position:0%
actually have confidence that our
 

01:09:48.480 --> 01:09:50.470 align:start position:0%
actually have confidence that our
learning<01:09:48.799><c> rate</c><01:09:49.040><c> is</c><01:09:49.120><c> set</c><01:09:49.359><c> very</c><01:09:49.520><c> well</c><01:09:50.080><c> that</c><01:09:50.319><c> our</c>

01:09:50.470 --> 01:09:50.480 align:start position:0%
learning rate is set very well that our
 

01:09:50.480 --> 01:09:52.789 align:start position:0%
learning rate is set very well that our
learning<01:09:50.799><c> rate</c><01:09:50.960><c> decay</c><01:09:51.520><c> which</c><01:09:51.759><c> we</c><01:09:51.920><c> just</c><01:09:52.080><c> do</c>

01:09:52.789 --> 01:09:52.799 align:start position:0%
learning rate decay which we just do
 

01:09:52.799 --> 01:09:55.189 align:start position:0%
learning rate decay which we just do
at<01:09:53.040><c> random</c><01:09:53.600><c> is</c><01:09:53.759><c> set</c><01:09:54.000><c> very</c><01:09:54.239><c> well</c>

01:09:55.189 --> 01:09:55.199 align:start position:0%
at random is set very well
 

01:09:55.199 --> 01:09:57.510 align:start position:0%
at random is set very well
and<01:09:55.760><c> um</c><01:09:56.239><c> so</c><01:09:56.400><c> the</c><01:09:56.480><c> optimization</c><01:09:57.040><c> here</c><01:09:57.280><c> is</c><01:09:57.360><c> kind</c>

01:09:57.510 --> 01:09:57.520 align:start position:0%
and um so the optimization here is kind
 

01:09:57.520 --> 01:09:59.270 align:start position:0%
and um so the optimization here is kind
of<01:09:57.600><c> suspect</c><01:09:58.000><c> to</c><01:09:58.080><c> be</c><01:09:58.239><c> honest</c><01:09:58.800><c> and</c><01:09:58.880><c> this</c><01:09:59.040><c> is</c><01:09:59.120><c> not</c>

01:09:59.270 --> 01:09:59.280 align:start position:0%
of suspect to be honest and this is not
 

01:09:59.280 --> 01:10:00.229 align:start position:0%
of suspect to be honest and this is not
how<01:09:59.440><c> you</c><01:09:59.520><c> would</c><01:09:59.600><c> do</c><01:09:59.760><c> it</c><01:09:59.840><c> typically</c><01:10:00.159><c> in</c>

01:10:00.229 --> 01:10:00.239 align:start position:0%
how you would do it typically in
 

01:10:00.239 --> 01:10:01.990 align:start position:0%
how you would do it typically in
production<01:10:01.040><c> in</c><01:10:01.120><c> production</c><01:10:01.600><c> you</c><01:10:01.679><c> would</c>

01:10:01.990 --> 01:10:02.000 align:start position:0%
production in production you would
 

01:10:02.000 --> 01:10:04.070 align:start position:0%
production in production you would
create<01:10:02.400><c> parameters</c><01:10:03.040><c> or</c><01:10:03.199><c> hyper</c><01:10:03.520><c> parameters</c>

01:10:04.070 --> 01:10:04.080 align:start position:0%
create parameters or hyper parameters
 

01:10:04.080 --> 01:10:05.669 align:start position:0%
create parameters or hyper parameters
out<01:10:04.159><c> of</c><01:10:04.320><c> all</c><01:10:04.400><c> these</c><01:10:04.560><c> settings</c><01:10:05.360><c> and</c><01:10:05.440><c> then</c><01:10:05.600><c> you</c>

01:10:05.669 --> 01:10:05.679 align:start position:0%
out of all these settings and then you
 

01:10:05.679 --> 01:10:07.350 align:start position:0%
out of all these settings and then you
would<01:10:05.840><c> run</c><01:10:06.080><c> lots</c><01:10:06.320><c> of</c><01:10:06.400><c> experiments</c><01:10:07.040><c> and</c><01:10:07.199><c> see</c>

01:10:07.350 --> 01:10:07.360 align:start position:0%
would run lots of experiments and see
 

01:10:07.360 --> 01:10:11.270 align:start position:0%
would run lots of experiments and see
whichever<01:10:07.760><c> ones</c><01:10:08.320><c> are</c><01:10:08.480><c> working</c><01:10:08.800><c> well</c><01:10:08.960><c> for</c><01:10:09.120><c> you</c>

01:10:11.270 --> 01:10:11.280 align:start position:0%
whichever ones are working well for you
 

01:10:11.280 --> 01:10:12.630 align:start position:0%
whichever ones are working well for you
okay

01:10:12.630 --> 01:10:12.640 align:start position:0%
okay
 

01:10:12.640 --> 01:10:16.790 align:start position:0%
okay
so<01:10:12.800><c> we</c><01:10:12.960><c> have</c><01:10:13.280><c> 2.17</c><01:10:14.239><c> now</c><01:10:14.800><c> and</c><01:10:15.120><c> 2.2</c><01:10:16.000><c> okay</c><01:10:16.560><c> so</c><01:10:16.719><c> you</c>

01:10:16.790 --> 01:10:16.800 align:start position:0%
so we have 2.17 now and 2.2 okay so you
 

01:10:16.800 --> 01:10:19.430 align:start position:0%
so we have 2.17 now and 2.2 okay so you
see<01:10:16.960><c> how</c><01:10:17.199><c> the</c><01:10:17.440><c> training</c><01:10:18.080><c> and</c><01:10:18.239><c> the</c><01:10:18.560><c> validation</c>

01:10:19.430 --> 01:10:19.440 align:start position:0%
see how the training and the validation
 

01:10:19.440 --> 01:10:21.590 align:start position:0%
see how the training and the validation
performance<01:10:20.159><c> are</c><01:10:20.400><c> starting</c><01:10:20.719><c> to</c><01:10:20.960><c> slightly</c>

01:10:21.590 --> 01:10:21.600 align:start position:0%
performance are starting to slightly
 

01:10:21.600 --> 01:10:23.110 align:start position:0%
performance are starting to slightly
slowly<01:10:22.080><c> depart</c>

01:10:23.110 --> 01:10:23.120 align:start position:0%
slowly depart
 

01:10:23.120 --> 01:10:24.790 align:start position:0%
slowly depart
so<01:10:23.520><c> maybe</c><01:10:23.840><c> we're</c><01:10:24.000><c> getting</c><01:10:24.239><c> the</c><01:10:24.400><c> sense</c><01:10:24.640><c> that</c>

01:10:24.790 --> 01:10:24.800 align:start position:0%
so maybe we're getting the sense that
 

01:10:24.800 --> 01:10:26.070 align:start position:0%
so maybe we're getting the sense that
the<01:10:24.960><c> neural</c><01:10:25.280><c> net</c>

01:10:26.070 --> 01:10:26.080 align:start position:0%
the neural net
 

01:10:26.080 --> 01:10:28.390 align:start position:0%
the neural net
is<01:10:26.320><c> getting</c><01:10:26.719><c> good</c><01:10:26.880><c> enough</c><01:10:27.440><c> or</c>

01:10:28.390 --> 01:10:28.400 align:start position:0%
is getting good enough or
 

01:10:28.400 --> 01:10:30.310 align:start position:0%
is getting good enough or
that<01:10:28.800><c> number</c><01:10:29.040><c> of</c><01:10:29.120><c> parameters</c><01:10:29.520><c> is</c><01:10:30.000><c> large</c>

01:10:30.310 --> 01:10:30.320 align:start position:0%
that number of parameters is large
 

01:10:30.320 --> 01:10:32.310 align:start position:0%
that number of parameters is large
enough<01:10:30.960><c> that</c><01:10:31.120><c> we</c><01:10:31.280><c> are</c><01:10:31.440><c> slowly</c><01:10:31.920><c> starting</c><01:10:32.159><c> to</c>

01:10:32.310 --> 01:10:32.320 align:start position:0%
enough that we are slowly starting to
 

01:10:32.320 --> 01:10:34.149 align:start position:0%
enough that we are slowly starting to
overfit

01:10:34.149 --> 01:10:34.159 align:start position:0%
overfit
 

01:10:34.159 --> 01:10:36.390 align:start position:0%
overfit
let's<01:10:34.400><c> maybe</c><01:10:34.880><c> run</c><01:10:35.520><c> one</c><01:10:35.679><c> more</c><01:10:35.920><c> iteration</c><01:10:36.320><c> of</c>

01:10:36.390 --> 01:10:36.400 align:start position:0%
let's maybe run one more iteration of
 

01:10:36.400 --> 01:10:37.910 align:start position:0%
let's maybe run one more iteration of
this

01:10:37.910 --> 01:10:37.920 align:start position:0%
this
 

01:10:37.920 --> 01:10:41.510 align:start position:0%
this
and<01:10:38.080><c> see</c><01:10:38.239><c> where</c><01:10:38.400><c> we</c><01:10:38.560><c> get</c>

01:10:41.510 --> 01:10:41.520 align:start position:0%
 
 

01:10:41.520 --> 01:10:43.270 align:start position:0%
 
but<01:10:41.760><c> yeah</c><01:10:41.920><c> basically</c><01:10:42.560><c> you</c><01:10:42.719><c> would</c><01:10:42.880><c> be</c><01:10:43.040><c> running</c>

01:10:43.270 --> 01:10:43.280 align:start position:0%
but yeah basically you would be running
 

01:10:43.280 --> 01:10:44.790 align:start position:0%
but yeah basically you would be running
lots<01:10:43.520><c> of</c><01:10:43.600><c> experiments</c><01:10:44.320><c> and</c><01:10:44.400><c> then</c><01:10:44.560><c> you</c><01:10:44.719><c> are</c>

01:10:44.790 --> 01:10:44.800 align:start position:0%
lots of experiments and then you are
 

01:10:44.800 --> 01:10:46.390 align:start position:0%
lots of experiments and then you are
slowly<01:10:45.040><c> scrutinizing</c><01:10:45.600><c> whichever</c><01:10:46.000><c> ones</c><01:10:46.239><c> give</c>

01:10:46.390 --> 01:10:46.400 align:start position:0%
slowly scrutinizing whichever ones give
 

01:10:46.400 --> 01:10:48.550 align:start position:0%
slowly scrutinizing whichever ones give
you<01:10:46.480><c> the</c><01:10:46.560><c> best</c><01:10:47.040><c> depth</c><01:10:47.360><c> performance</c><01:10:48.320><c> and</c><01:10:48.400><c> then</c>

01:10:48.550 --> 01:10:48.560 align:start position:0%
you the best depth performance and then
 

01:10:48.560 --> 01:10:49.990 align:start position:0%
you the best depth performance and then
once<01:10:48.800><c> you</c><01:10:48.880><c> find</c><01:10:49.120><c> all</c><01:10:49.280><c> the</c>

01:10:49.990 --> 01:10:50.000 align:start position:0%
once you find all the
 

01:10:50.000 --> 01:10:51.750 align:start position:0%
once you find all the
hyper<01:10:50.320><c> parameters</c><01:10:50.880><c> that</c><01:10:51.040><c> make</c><01:10:51.280><c> your</c><01:10:51.520><c> dev</c>

01:10:51.750 --> 01:10:51.760 align:start position:0%
hyper parameters that make your dev
 

01:10:51.760 --> 01:10:53.990 align:start position:0%
hyper parameters that make your dev
performance<01:10:52.320><c> good</c><01:10:52.960><c> you</c><01:10:53.199><c> take</c><01:10:53.360><c> that</c><01:10:53.520><c> model</c><01:10:53.840><c> and</c>

01:10:53.990 --> 01:10:54.000 align:start position:0%
performance good you take that model and
 

01:10:54.000 --> 01:10:55.830 align:start position:0%
performance good you take that model and
you<01:10:54.159><c> evaluate</c><01:10:54.560><c> the</c><01:10:54.719><c> test</c><01:10:54.960><c> set</c><01:10:55.199><c> performance</c><01:10:55.679><c> a</c>

01:10:55.830 --> 01:10:55.840 align:start position:0%
you evaluate the test set performance a
 

01:10:55.840 --> 01:10:57.669 align:start position:0%
you evaluate the test set performance a
single<01:10:56.159><c> time</c><01:10:56.800><c> and</c><01:10:56.960><c> that's</c><01:10:57.199><c> the</c><01:10:57.280><c> number</c><01:10:57.520><c> that</c>

01:10:57.669 --> 01:10:57.679 align:start position:0%
single time and that's the number that
 

01:10:57.679 --> 01:10:59.669 align:start position:0%
single time and that's the number that
you<01:10:57.840><c> report</c><01:10:58.239><c> in</c><01:10:58.400><c> your</c><01:10:58.560><c> paper</c><01:10:59.120><c> or</c><01:10:59.280><c> wherever</c>

01:10:59.669 --> 01:10:59.679 align:start position:0%
you report in your paper or wherever
 

01:10:59.679 --> 01:11:01.189 align:start position:0%
you report in your paper or wherever
else<01:10:59.920><c> you</c><01:11:00.000><c> want</c><01:11:00.159><c> to</c><01:11:00.320><c> talk</c><01:11:00.560><c> about</c><01:11:00.800><c> and</c><01:11:00.960><c> brag</c>

01:11:01.189 --> 01:11:01.199 align:start position:0%
else you want to talk about and brag
 

01:11:01.199 --> 01:11:05.510 align:start position:0%
else you want to talk about and brag
about<01:11:01.920><c> your</c><01:11:02.080><c> model</c>

01:11:05.510 --> 01:11:05.520 align:start position:0%
 
 

01:11:05.520 --> 01:11:08.149 align:start position:0%
 
so<01:11:05.679><c> let's</c><01:11:05.920><c> then</c><01:11:06.560><c> rerun</c><01:11:06.960><c> the</c><01:11:07.120><c> plot</c><01:11:07.600><c> and</c><01:11:07.760><c> rerun</c>

01:11:08.149 --> 01:11:08.159 align:start position:0%
so let's then rerun the plot and rerun
 

01:11:08.159 --> 01:11:11.110 align:start position:0%
so let's then rerun the plot and rerun
the<01:11:08.239><c> train</c><01:11:08.560><c> and</c><01:11:08.640><c> death</c>

01:11:11.110 --> 01:11:11.120 align:start position:0%
 
 

01:11:11.120 --> 01:11:12.790 align:start position:0%
 
and<01:11:11.280><c> because</c><01:11:11.520><c> we're</c><01:11:11.600><c> getting</c><01:11:11.840><c> lower</c><01:11:12.159><c> loss</c><01:11:12.480><c> now</c>

01:11:12.790 --> 01:11:12.800 align:start position:0%
and because we're getting lower loss now
 

01:11:12.800 --> 01:11:15.189 align:start position:0%
and because we're getting lower loss now
it<01:11:13.040><c> is</c><01:11:13.199><c> the</c><01:11:13.360><c> case</c><01:11:13.920><c> that</c><01:11:14.239><c> the</c><01:11:14.400><c> embedding</c><01:11:14.880><c> size</c>

01:11:15.189 --> 01:11:15.199 align:start position:0%
it is the case that the embedding size
 

01:11:15.199 --> 01:11:20.070 align:start position:0%
it is the case that the embedding size
of<01:11:15.280><c> these</c><01:11:15.520><c> was</c><01:11:15.679><c> holding</c><01:11:16.000><c> us</c><01:11:16.159><c> back</c><01:11:16.800><c> very</c><01:11:17.040><c> likely</c>

01:11:20.070 --> 01:11:20.080 align:start position:0%
 
 

01:11:20.080 --> 01:11:22.870 align:start position:0%
 
okay<01:11:20.320><c> so</c><01:11:20.840><c> 2.162.19</c><01:11:22.000><c> is</c><01:11:22.080><c> what</c><01:11:22.320><c> we're</c><01:11:22.480><c> roughly</c>

01:11:22.870 --> 01:11:22.880 align:start position:0%
okay so 2.162.19 is what we're roughly
 

01:11:22.880 --> 01:11:24.470 align:start position:0%
okay so 2.162.19 is what we're roughly
getting

01:11:24.470 --> 01:11:24.480 align:start position:0%
getting
 

01:11:24.480 --> 01:11:26.470 align:start position:0%
getting
so<01:11:24.719><c> there's</c><01:11:24.960><c> many</c><01:11:25.120><c> ways</c><01:11:25.360><c> to</c><01:11:25.440><c> go</c><01:11:25.600><c> from</c><01:11:26.159><c> many</c>

01:11:26.470 --> 01:11:26.480 align:start position:0%
so there's many ways to go from many
 

01:11:26.480 --> 01:11:28.229 align:start position:0%
so there's many ways to go from many
ways<01:11:26.719><c> to</c><01:11:26.880><c> go</c><01:11:27.040><c> from</c><01:11:27.199><c> here</c><01:11:27.600><c> we</c><01:11:27.760><c> can</c><01:11:27.920><c> continue</c>

01:11:28.229 --> 01:11:28.239 align:start position:0%
ways to go from here we can continue
 

01:11:28.239 --> 01:11:30.229 align:start position:0%
ways to go from here we can continue
tuning<01:11:28.560><c> the</c><01:11:28.640><c> optimization</c>

01:11:30.229 --> 01:11:30.239 align:start position:0%
tuning the optimization
 

01:11:30.239 --> 01:11:32.070 align:start position:0%
tuning the optimization
we<01:11:30.400><c> can</c><01:11:30.800><c> continue</c><01:11:31.360><c> for</c><01:11:31.520><c> example</c><01:11:31.760><c> playing</c><01:11:32.000><c> with</c>

01:11:32.070 --> 01:11:32.080 align:start position:0%
we can continue for example playing with
 

01:11:32.080 --> 01:11:34.070 align:start position:0%
we can continue for example playing with
the<01:11:32.159><c> sizes</c><01:11:32.480><c> of</c><01:11:32.560><c> the</c><01:11:32.640><c> neural</c><01:11:32.960><c> net</c><01:11:33.520><c> or</c><01:11:33.760><c> we</c><01:11:33.920><c> can</c>

01:11:34.070 --> 01:11:34.080 align:start position:0%
the sizes of the neural net or we can
 

01:11:34.080 --> 01:11:36.149 align:start position:0%
the sizes of the neural net or we can
increase<01:11:34.400><c> the</c><01:11:34.560><c> number</c><01:11:34.800><c> of</c><01:11:35.199><c> uh</c>

01:11:36.149 --> 01:11:36.159 align:start position:0%
increase the number of uh
 

01:11:36.159 --> 01:11:38.310 align:start position:0%
increase the number of uh
words<01:11:36.719><c> or</c><01:11:36.960><c> characters</c><01:11:37.440><c> in</c><01:11:37.600><c> our</c><01:11:37.679><c> case</c><01:11:38.000><c> that</c><01:11:38.159><c> we</c>

01:11:38.310 --> 01:11:38.320 align:start position:0%
words or characters in our case that we
 

01:11:38.320 --> 01:11:39.830 align:start position:0%
words or characters in our case that we
are<01:11:38.400><c> taking</c><01:11:38.640><c> as</c><01:11:38.719><c> an</c><01:11:38.880><c> input</c><01:11:39.360><c> so</c><01:11:39.520><c> instead</c><01:11:39.760><c> of</c>

01:11:39.830 --> 01:11:39.840 align:start position:0%
are taking as an input so instead of
 

01:11:39.840 --> 01:11:41.430 align:start position:0%
are taking as an input so instead of
just<01:11:40.000><c> three</c><01:11:40.159><c> characters</c><01:11:40.560><c> we</c><01:11:40.719><c> could</c><01:11:40.800><c> be</c><01:11:40.880><c> taking</c>

01:11:41.430 --> 01:11:41.440 align:start position:0%
just three characters we could be taking
 

01:11:41.440 --> 01:11:43.590 align:start position:0%
just three characters we could be taking
more<01:11:41.679><c> characters</c><01:11:42.080><c> as</c><01:11:42.320><c> an</c><01:11:42.480><c> input</c><01:11:43.280><c> and</c><01:11:43.360><c> that</c>

01:11:43.590 --> 01:11:43.600 align:start position:0%
more characters as an input and that
 

01:11:43.600 --> 01:11:46.470 align:start position:0%
more characters as an input and that
could<01:11:43.920><c> further</c><01:11:44.480><c> improve</c><01:11:45.199><c> the</c><01:11:45.440><c> loss</c>

01:11:46.470 --> 01:11:46.480 align:start position:0%
could further improve the loss
 

01:11:46.480 --> 01:11:48.149 align:start position:0%
could further improve the loss
okay<01:11:46.719><c> so</c><01:11:46.880><c> i</c><01:11:46.960><c> changed</c><01:11:47.199><c> the</c><01:11:47.280><c> code</c><01:11:47.440><c> slightly</c><01:11:48.000><c> so</c>

01:11:48.149 --> 01:11:48.159 align:start position:0%
okay so i changed the code slightly so
 

01:11:48.159 --> 01:11:50.470 align:start position:0%
okay so i changed the code slightly so
we<01:11:48.320><c> have</c><01:11:48.880><c> here</c><01:11:49.120><c> 200</c><01:11:49.679><c> 000</c><01:11:49.920><c> steps</c><01:11:50.239><c> of</c><01:11:50.320><c> the</c>

01:11:50.470 --> 01:11:50.480 align:start position:0%
we have here 200 000 steps of the
 

01:11:50.480 --> 01:11:52.790 align:start position:0%
we have here 200 000 steps of the
optimization<01:11:51.520><c> and</c><01:11:51.679><c> in</c><01:11:51.760><c> the</c><01:11:51.840><c> first</c><01:11:52.000><c> 100</c><01:11:52.480><c> 000</c>

01:11:52.790 --> 01:11:52.800 align:start position:0%
optimization and in the first 100 000
 

01:11:52.800 --> 01:11:54.550 align:start position:0%
optimization and in the first 100 000
we're<01:11:52.960><c> using</c><01:11:53.199><c> a</c><01:11:53.280><c> learning</c><01:11:53.520><c> rate</c><01:11:53.679><c> of</c><01:11:53.840><c> 0.1</c><01:11:54.480><c> and</c>

01:11:54.550 --> 01:11:54.560 align:start position:0%
we're using a learning rate of 0.1 and
 

01:11:54.560 --> 01:11:56.310 align:start position:0%
we're using a learning rate of 0.1 and
then<01:11:54.719><c> in</c><01:11:54.800><c> the</c><01:11:54.880><c> next</c><01:11:55.120><c> 100</c><01:11:55.600><c> 000</c><01:11:55.840><c> we're</c><01:11:56.000><c> using</c><01:11:56.239><c> a</c>

01:11:56.310 --> 01:11:56.320 align:start position:0%
then in the next 100 000 we're using a
 

01:11:56.320 --> 01:11:58.470 align:start position:0%
then in the next 100 000 we're using a
learning<01:11:56.560><c> rate</c><01:11:56.800><c> of</c><01:11:56.960><c> 0.01</c>

01:11:58.470 --> 01:11:58.480 align:start position:0%
learning rate of 0.01
 

01:11:58.480 --> 01:12:00.390 align:start position:0%
learning rate of 0.01
this<01:11:58.719><c> is</c><01:11:58.800><c> the</c><01:11:58.960><c> loss</c><01:11:59.199><c> that</c><01:11:59.360><c> i</c><01:11:59.440><c> achieve</c>

01:12:00.390 --> 01:12:00.400 align:start position:0%
this is the loss that i achieve
 

01:12:00.400 --> 01:12:01.910 align:start position:0%
this is the loss that i achieve
and<01:12:00.560><c> these</c><01:12:00.880><c> are</c><01:12:01.040><c> the</c><01:12:01.199><c> performance</c><01:12:01.679><c> on</c><01:12:01.840><c> the</c>

01:12:01.910 --> 01:12:01.920 align:start position:0%
and these are the performance on the
 

01:12:01.920 --> 01:12:03.910 align:start position:0%
and these are the performance on the
training<01:12:02.239><c> and</c><01:12:02.400><c> validation</c><01:12:02.960><c> loss</c>

01:12:03.910 --> 01:12:03.920 align:start position:0%
training and validation loss
 

01:12:03.920 --> 01:12:05.750 align:start position:0%
training and validation loss
and<01:12:04.159><c> in</c><01:12:04.239><c> particular</c><01:12:04.960><c> the</c><01:12:05.120><c> best</c><01:12:05.360><c> validation</c>

01:12:05.750 --> 01:12:05.760 align:start position:0%
and in particular the best validation
 

01:12:05.760 --> 01:12:07.030 align:start position:0%
and in particular the best validation
loss<01:12:06.000><c> i've</c><01:12:06.080><c> been</c><01:12:06.239><c> able</c><01:12:06.400><c> to</c><01:12:06.560><c> obtain</c><01:12:06.880><c> in</c><01:12:06.960><c> the</c>

01:12:07.030 --> 01:12:07.040 align:start position:0%
loss i've been able to obtain in the
 

01:12:07.040 --> 01:12:10.550 align:start position:0%
loss i've been able to obtain in the
last<01:12:07.280><c> 30</c><01:12:07.520><c> minutes</c><01:12:07.840><c> or</c><01:12:07.920><c> so</c><01:12:08.480><c> is</c><01:12:08.719><c> 2.17</c>

01:12:10.550 --> 01:12:10.560 align:start position:0%
last 30 minutes or so is 2.17
 

01:12:10.560 --> 01:12:12.790 align:start position:0%
last 30 minutes or so is 2.17
so<01:12:10.719><c> now</c><01:12:10.960><c> i</c><01:12:11.120><c> invite</c><01:12:11.360><c> you</c><01:12:11.520><c> to</c><01:12:11.679><c> beat</c><01:12:11.920><c> this</c><01:12:12.080><c> number</c>

01:12:12.790 --> 01:12:12.800 align:start position:0%
so now i invite you to beat this number
 

01:12:12.800 --> 01:12:14.390 align:start position:0%
so now i invite you to beat this number
and<01:12:12.880><c> you</c><01:12:13.040><c> have</c><01:12:13.199><c> quite</c><01:12:13.360><c> a</c><01:12:13.440><c> few</c><01:12:13.600><c> knobs</c><01:12:14.000><c> available</c>

01:12:14.390 --> 01:12:14.400 align:start position:0%
and you have quite a few knobs available
 

01:12:14.400 --> 01:12:17.030 align:start position:0%
and you have quite a few knobs available
to<01:12:14.560><c> you</c><01:12:14.640><c> to</c><01:12:14.880><c> i</c><01:12:14.960><c> think</c><01:12:15.120><c> surpass</c><01:12:15.679><c> this</c><01:12:15.840><c> number</c>

01:12:17.030 --> 01:12:17.040 align:start position:0%
to you to i think surpass this number
 

01:12:17.040 --> 01:12:18.709 align:start position:0%
to you to i think surpass this number
so<01:12:17.280><c> number</c><01:12:17.600><c> one</c><01:12:17.920><c> you</c><01:12:18.000><c> can</c><01:12:18.159><c> of</c><01:12:18.239><c> course</c><01:12:18.480><c> change</c>

01:12:18.709 --> 01:12:18.719 align:start position:0%
so number one you can of course change
 

01:12:18.719 --> 01:12:20.310 align:start position:0%
so number one you can of course change
the<01:12:18.880><c> number</c><01:12:19.120><c> of</c><01:12:19.440><c> neurons</c><01:12:19.920><c> in</c><01:12:20.000><c> the</c><01:12:20.080><c> hidden</c>

01:12:20.310 --> 01:12:20.320 align:start position:0%
the number of neurons in the hidden
 

01:12:20.320 --> 01:12:22.229 align:start position:0%
the number of neurons in the hidden
layer<01:12:20.560><c> of</c><01:12:20.640><c> this</c><01:12:20.800><c> model</c><01:12:21.600><c> you</c><01:12:21.760><c> can</c><01:12:21.920><c> change</c><01:12:22.159><c> the</c>

01:12:22.229 --> 01:12:22.239 align:start position:0%
layer of this model you can change the
 

01:12:22.239 --> 01:12:24.229 align:start position:0%
layer of this model you can change the
dimensionality<01:12:22.960><c> of</c><01:12:23.040><c> the</c><01:12:23.199><c> embedding</c>

01:12:24.229 --> 01:12:24.239 align:start position:0%
dimensionality of the embedding
 

01:12:24.239 --> 01:12:25.430 align:start position:0%
dimensionality of the embedding
lookup<01:12:24.560><c> table</c>

01:12:25.430 --> 01:12:25.440 align:start position:0%
lookup table
 

01:12:25.440 --> 01:12:26.790 align:start position:0%
lookup table
you<01:12:25.600><c> can</c><01:12:25.760><c> change</c><01:12:25.920><c> the</c><01:12:26.080><c> number</c><01:12:26.239><c> of</c><01:12:26.320><c> characters</c>

01:12:26.790 --> 01:12:26.800 align:start position:0%
you can change the number of characters
 

01:12:26.800 --> 01:12:29.750 align:start position:0%
you can change the number of characters
that<01:12:26.960><c> are</c><01:12:27.120><c> feeding</c><01:12:27.520><c> in</c><01:12:28.000><c> as</c><01:12:28.159><c> an</c><01:12:28.320><c> input</c>

01:12:29.750 --> 01:12:29.760 align:start position:0%
that are feeding in as an input
 

01:12:29.760 --> 01:12:32.390 align:start position:0%
that are feeding in as an input
as<01:12:29.920><c> the</c><01:12:30.000><c> context</c><01:12:30.480><c> into</c><01:12:30.719><c> this</c><01:12:30.880><c> model</c>

01:12:32.390 --> 01:12:32.400 align:start position:0%
as the context into this model
 

01:12:32.400 --> 01:12:33.510 align:start position:0%
as the context into this model
and<01:12:32.560><c> then</c><01:12:32.800><c> of</c><01:12:32.880><c> course</c><01:12:33.040><c> you</c><01:12:33.199><c> can</c><01:12:33.280><c> change</c><01:12:33.440><c> the</c>

01:12:33.510 --> 01:12:33.520 align:start position:0%
and then of course you can change the
 

01:12:33.520 --> 01:12:35.510 align:start position:0%
and then of course you can change the
details<01:12:33.840><c> of</c><01:12:33.920><c> the</c><01:12:34.080><c> optimization</c><01:12:35.040><c> how</c><01:12:35.199><c> long</c><01:12:35.440><c> are</c>

01:12:35.510 --> 01:12:35.520 align:start position:0%
details of the optimization how long are
 

01:12:35.520 --> 01:12:37.510 align:start position:0%
details of the optimization how long are
we<01:12:35.679><c> running</c><01:12:36.320><c> what</c><01:12:36.480><c> is</c><01:12:36.560><c> the</c><01:12:36.719><c> learning</c><01:12:37.040><c> rate</c><01:12:37.360><c> how</c>

01:12:37.510 --> 01:12:37.520 align:start position:0%
we running what is the learning rate how
 

01:12:37.520 --> 01:12:39.350 align:start position:0%
we running what is the learning rate how
does<01:12:37.679><c> it</c><01:12:37.760><c> change</c><01:12:38.080><c> over</c><01:12:38.320><c> time</c>

01:12:39.350 --> 01:12:39.360 align:start position:0%
does it change over time
 

01:12:39.360 --> 01:12:41.110 align:start position:0%
does it change over time
how<01:12:39.520><c> does</c><01:12:39.679><c> it</c><01:12:39.760><c> decay</c>

01:12:41.110 --> 01:12:41.120 align:start position:0%
how does it decay
 

01:12:41.120 --> 01:12:42.630 align:start position:0%
how does it decay
you<01:12:41.280><c> can</c><01:12:41.360><c> change</c><01:12:41.600><c> the</c><01:12:41.760><c> batch</c><01:12:42.000><c> size</c><01:12:42.400><c> and</c><01:12:42.480><c> you</c>

01:12:42.630 --> 01:12:42.640 align:start position:0%
you can change the batch size and you
 

01:12:42.640 --> 01:12:44.310 align:start position:0%
you can change the batch size and you
may<01:12:42.800><c> be</c><01:12:42.880><c> able</c><01:12:43.040><c> to</c><01:12:43.199><c> actually</c><01:12:43.520><c> achieve</c><01:12:43.920><c> a</c><01:12:44.000><c> much</c>

01:12:44.310 --> 01:12:44.320 align:start position:0%
may be able to actually achieve a much
 

01:12:44.320 --> 01:12:46.390 align:start position:0%
may be able to actually achieve a much
better<01:12:44.800><c> convergence</c><01:12:45.520><c> speed</c>

01:12:46.390 --> 01:12:46.400 align:start position:0%
better convergence speed
 

01:12:46.400 --> 01:12:47.510 align:start position:0%
better convergence speed
in<01:12:46.480><c> terms</c><01:12:46.800><c> of</c>

01:12:47.510 --> 01:12:47.520 align:start position:0%
in terms of
 

01:12:47.520 --> 01:12:49.030 align:start position:0%
in terms of
how<01:12:47.679><c> many</c><01:12:47.840><c> seconds</c><01:12:48.239><c> or</c><01:12:48.320><c> minutes</c><01:12:48.640><c> it</c><01:12:48.719><c> takes</c><01:12:48.960><c> to</c>

01:12:49.030 --> 01:12:49.040 align:start position:0%
how many seconds or minutes it takes to
 

01:12:49.040 --> 01:12:51.510 align:start position:0%
how many seconds or minutes it takes to
train<01:12:49.280><c> the</c><01:12:49.360><c> model</c><01:12:50.000><c> and</c><01:12:50.640><c> get</c>

01:12:51.510 --> 01:12:51.520 align:start position:0%
train the model and get
 

01:12:51.520 --> 01:12:53.990 align:start position:0%
train the model and get
your<01:12:51.920><c> result</c><01:12:52.320><c> in</c><01:12:52.400><c> terms</c><01:12:52.640><c> of</c><01:12:52.719><c> really</c><01:12:52.960><c> good</c>

01:12:53.990 --> 01:12:54.000 align:start position:0%
your result in terms of really good
 

01:12:54.000 --> 01:12:55.669 align:start position:0%
your result in terms of really good
loss

01:12:55.669 --> 01:12:55.679 align:start position:0%
loss
 

01:12:55.679 --> 01:12:57.110 align:start position:0%
loss
and<01:12:55.760><c> then</c><01:12:56.000><c> of</c><01:12:56.080><c> course</c><01:12:56.400><c> i</c><01:12:56.480><c> actually</c><01:12:56.719><c> invite</c><01:12:56.960><c> you</c>

01:12:57.110 --> 01:12:57.120 align:start position:0%
and then of course i actually invite you
 

01:12:57.120 --> 01:12:59.590 align:start position:0%
and then of course i actually invite you
to<01:12:57.360><c> read</c><01:12:57.600><c> this</c><01:12:57.760><c> paper</c><01:12:58.159><c> it</c><01:12:58.320><c> is</c><01:12:58.480><c> 19</c><01:12:58.880><c> pages</c><01:12:59.280><c> but</c><01:12:59.520><c> at</c>

01:12:59.590 --> 01:12:59.600 align:start position:0%
to read this paper it is 19 pages but at
 

01:12:59.600 --> 01:13:00.950 align:start position:0%
to read this paper it is 19 pages but at
this<01:12:59.760><c> point</c><01:13:00.000><c> you</c><01:13:00.080><c> should</c><01:13:00.320><c> actually</c><01:13:00.640><c> be</c><01:13:00.800><c> able</c>

01:13:00.950 --> 01:13:00.960 align:start position:0%
this point you should actually be able
 

01:13:00.960 --> 01:13:03.110 align:start position:0%
this point you should actually be able
to<01:13:01.199><c> read</c><01:13:01.600><c> a</c><01:13:01.679><c> good</c><01:13:01.920><c> chunk</c><01:13:02.320><c> of</c><01:13:02.480><c> this</c><01:13:02.640><c> paper</c><01:13:02.960><c> and</c>

01:13:03.110 --> 01:13:03.120 align:start position:0%
to read a good chunk of this paper and
 

01:13:03.120 --> 01:13:04.870 align:start position:0%
to read a good chunk of this paper and
understand

01:13:04.870 --> 01:13:04.880 align:start position:0%
understand
 

01:13:04.880 --> 01:13:06.470 align:start position:0%
understand
pretty<01:13:05.120><c> good</c><01:13:05.280><c> chunks</c><01:13:05.600><c> of</c><01:13:05.760><c> it</c>

01:13:06.470 --> 01:13:06.480 align:start position:0%
pretty good chunks of it
 

01:13:06.480 --> 01:13:08.070 align:start position:0%
pretty good chunks of it
and<01:13:06.880><c> this</c><01:13:07.040><c> paper</c><01:13:07.360><c> also</c><01:13:07.520><c> has</c><01:13:07.679><c> quite</c><01:13:07.840><c> a</c><01:13:07.920><c> few</c>

01:13:08.070 --> 01:13:08.080 align:start position:0%
and this paper also has quite a few
 

01:13:08.080 --> 01:13:09.830 align:start position:0%
and this paper also has quite a few
ideas<01:13:08.480><c> for</c><01:13:08.719><c> improvements</c><01:13:09.280><c> that</c><01:13:09.440><c> you</c><01:13:09.520><c> can</c><01:13:09.679><c> play</c>

01:13:09.830 --> 01:13:09.840 align:start position:0%
ideas for improvements that you can play
 

01:13:09.840 --> 01:13:11.030 align:start position:0%
ideas for improvements that you can play
with

01:13:11.030 --> 01:13:11.040 align:start position:0%
with
 

01:13:11.040 --> 01:13:13.110 align:start position:0%
with
so<01:13:11.199><c> all</c><01:13:11.360><c> of</c><01:13:11.440><c> those</c><01:13:11.679><c> are</c><01:13:11.760><c> not</c><01:13:12.080><c> available</c><01:13:12.480><c> to</c><01:13:12.640><c> you</c>

01:13:13.110 --> 01:13:13.120 align:start position:0%
so all of those are not available to you
 

01:13:13.120 --> 01:13:14.550 align:start position:0%
so all of those are not available to you
and<01:13:13.440><c> you</c><01:13:13.600><c> should</c><01:13:13.760><c> be</c><01:13:13.840><c> able</c><01:13:14.000><c> to</c><01:13:14.159><c> beat</c><01:13:14.400><c> this</c>

01:13:14.550 --> 01:13:14.560 align:start position:0%
and you should be able to beat this
 

01:13:14.560 --> 01:13:16.390 align:start position:0%
and you should be able to beat this
number<01:13:15.040><c> i'm</c><01:13:15.199><c> leaving</c><01:13:15.440><c> that</c><01:13:15.600><c> as</c><01:13:15.679><c> an</c><01:13:15.840><c> exercise</c>

01:13:16.390 --> 01:13:16.400 align:start position:0%
number i'm leaving that as an exercise
 

01:13:16.400 --> 01:13:18.870 align:start position:0%
number i'm leaving that as an exercise
to<01:13:16.560><c> the</c><01:13:16.640><c> reader</c><01:13:17.440><c> and</c><01:13:17.760><c> that's</c><01:13:18.000><c> it</c><01:13:18.080><c> for</c><01:13:18.239><c> now</c><01:13:18.640><c> and</c>

01:13:18.870 --> 01:13:18.880 align:start position:0%
to the reader and that's it for now and
 

01:13:18.880 --> 01:13:24.229 align:start position:0%
to the reader and that's it for now and
i'll<01:13:18.960><c> see</c><01:13:19.120><c> you</c><01:13:19.199><c> next</c><01:13:19.440><c> time</c>

01:13:24.229 --> 01:13:24.239 align:start position:0%
 
 

01:13:24.239 --> 01:13:25.750 align:start position:0%
 
before<01:13:24.480><c> we</c><01:13:24.640><c> wrap</c><01:13:24.880><c> up</c><01:13:25.040><c> i</c><01:13:25.120><c> also</c><01:13:25.280><c> wanted</c><01:13:25.520><c> to</c><01:13:25.600><c> show</c>

01:13:25.750 --> 01:13:25.760 align:start position:0%
before we wrap up i also wanted to show
 

01:13:25.760 --> 01:13:28.149 align:start position:0%
before we wrap up i also wanted to show
how<01:13:25.920><c> you</c><01:13:26.000><c> would</c><01:13:26.159><c> sample</c><01:13:26.480><c> from</c><01:13:26.640><c> the</c><01:13:26.719><c> model</c>

01:13:28.149 --> 01:13:28.159 align:start position:0%
how you would sample from the model
 

01:13:28.159 --> 01:13:31.030 align:start position:0%
how you would sample from the model
so<01:13:28.800><c> we're</c><01:13:28.960><c> going</c><01:13:29.040><c> to</c><01:13:29.199><c> generate</c><01:13:29.600><c> 20</c><01:13:29.840><c> samples</c>

01:13:31.030 --> 01:13:31.040 align:start position:0%
so we're going to generate 20 samples
 

01:13:31.040 --> 01:13:33.750 align:start position:0%
so we're going to generate 20 samples
at<01:13:31.199><c> first</c><01:13:31.440><c> we</c><01:13:31.600><c> begin</c><01:13:32.000><c> with</c><01:13:32.239><c> all</c><01:13:32.800><c> dots</c><01:13:33.600><c> so</c>

01:13:33.750 --> 01:13:33.760 align:start position:0%
at first we begin with all dots so
 

01:13:33.760 --> 01:13:35.350 align:start position:0%
at first we begin with all dots so
that's<01:13:34.000><c> the</c><01:13:34.159><c> context</c>

01:13:35.350 --> 01:13:35.360 align:start position:0%
that's the context
 

01:13:35.360 --> 01:13:37.430 align:start position:0%
that's the context
and<01:13:35.440><c> then</c><01:13:35.679><c> until</c><01:13:36.159><c> we</c><01:13:36.400><c> generate</c>

01:13:37.430 --> 01:13:37.440 align:start position:0%
and then until we generate
 

01:13:37.440 --> 01:13:39.990 align:start position:0%
and then until we generate
the<01:13:37.679><c> zeroth</c><01:13:38.239><c> character</c><01:13:38.880><c> again</c>

01:13:39.990 --> 01:13:40.000 align:start position:0%
the zeroth character again
 

01:13:40.000 --> 01:13:43.669 align:start position:0%
the zeroth character again
we're<01:13:40.239><c> going</c><01:13:40.400><c> to</c><01:13:40.800><c> embed</c><01:13:41.520><c> the</c><01:13:41.679><c> current</c><01:13:42.080><c> context</c>

01:13:43.669 --> 01:13:43.679 align:start position:0%
we're going to embed the current context
 

01:13:43.679 --> 01:13:47.189 align:start position:0%
we're going to embed the current context
using<01:13:43.920><c> the</c><01:13:44.080><c> embedding</c><01:13:44.400><c> table</c><01:13:44.840><c> c</c><01:13:46.239><c> now</c><01:13:46.560><c> usually</c>

01:13:47.189 --> 01:13:47.199 align:start position:0%
using the embedding table c now usually
 

01:13:47.199 --> 01:13:49.430 align:start position:0%
using the embedding table c now usually
uh<01:13:47.520><c> here</c><01:13:47.920><c> the</c><01:13:48.080><c> first</c><01:13:48.320><c> dimension</c><01:13:48.800><c> was</c><01:13:49.040><c> the</c><01:13:49.199><c> size</c>

01:13:49.430 --> 01:13:49.440 align:start position:0%
uh here the first dimension was the size
 

01:13:49.440 --> 01:13:51.110 align:start position:0%
uh here the first dimension was the size
of<01:13:49.520><c> the</c><01:13:49.679><c> training</c><01:13:50.000><c> set</c><01:13:50.480><c> but</c><01:13:50.640><c> here</c><01:13:50.800><c> we're</c><01:13:50.960><c> only</c>

01:13:51.110 --> 01:13:51.120 align:start position:0%
of the training set but here we're only
 

01:13:51.120 --> 01:13:52.390 align:start position:0%
of the training set but here we're only
working<01:13:51.360><c> with</c><01:13:51.440><c> a</c><01:13:51.520><c> single</c><01:13:51.840><c> example</c><01:13:52.159><c> that</c><01:13:52.320><c> we're</c>

01:13:52.390 --> 01:13:52.400 align:start position:0%
working with a single example that we're
 

01:13:52.400 --> 01:13:55.030 align:start position:0%
working with a single example that we're
generating<01:13:53.280><c> so</c><01:13:53.520><c> this</c><01:13:53.760><c> is</c><01:13:53.840><c> just</c><01:13:54.560><c> the</c><01:13:54.719><c> mission</c>

01:13:55.030 --> 01:13:55.040 align:start position:0%
generating so this is just the mission
 

01:13:55.040 --> 01:13:58.550 align:start position:0%
generating so this is just the mission
one<01:13:55.520><c> just</c><01:13:55.679><c> for</c><01:13:55.840><c> simplicity</c>

01:13:58.550 --> 01:13:58.560 align:start position:0%
 
 

01:13:58.560 --> 01:14:00.630 align:start position:0%
 
and<01:13:58.719><c> so</c><01:13:58.960><c> this</c><01:13:59.199><c> embedding</c><01:13:59.679><c> then</c><01:14:00.080><c> gets</c>

01:14:00.630 --> 01:14:00.640 align:start position:0%
and so this embedding then gets
 

01:14:00.640 --> 01:14:02.470 align:start position:0%
and so this embedding then gets
projected<01:14:01.120><c> into</c><01:14:01.360><c> the</c><01:14:01.440><c> end</c><01:14:01.679><c> state</c><01:14:02.159><c> you</c><01:14:02.239><c> get</c><01:14:02.400><c> the</c>

01:14:02.470 --> 01:14:02.480 align:start position:0%
projected into the end state you get the
 

01:14:02.480 --> 01:14:03.590 align:start position:0%
projected into the end state you get the
logits

01:14:03.590 --> 01:14:03.600 align:start position:0%
logits
 

01:14:03.600 --> 01:14:05.669 align:start position:0%
logits
now<01:14:03.760><c> we</c><01:14:03.920><c> calculate</c><01:14:04.320><c> the</c><01:14:04.400><c> probabilities</c><01:14:05.440><c> for</c>

01:14:05.669 --> 01:14:05.679 align:start position:0%
now we calculate the probabilities for
 

01:14:05.679 --> 01:14:09.110 align:start position:0%
now we calculate the probabilities for
that<01:14:05.920><c> you</c><01:14:06.000><c> can</c><01:14:06.159><c> use</c><01:14:06.400><c> f.softmax</c>

01:14:09.110 --> 01:14:09.120 align:start position:0%
that you can use f.softmax
 

01:14:09.120 --> 01:14:10.870 align:start position:0%
that you can use f.softmax
of<01:14:09.280><c> logits</c><01:14:10.000><c> and</c><01:14:10.159><c> that</c><01:14:10.320><c> just</c><01:14:10.480><c> basically</c>

01:14:10.870 --> 01:14:10.880 align:start position:0%
of logits and that just basically
 

01:14:10.880 --> 01:14:12.310 align:start position:0%
of logits and that just basically
exponentiates<01:14:11.520><c> the</c><01:14:11.520><c> logits</c><01:14:11.920><c> and</c><01:14:12.000><c> makes</c><01:14:12.159><c> them</c>

01:14:12.310 --> 01:14:12.320 align:start position:0%
exponentiates the logits and makes them
 

01:14:12.320 --> 01:14:15.110 align:start position:0%
exponentiates the logits and makes them
sum<01:14:12.480><c> to</c><01:14:12.840><c> one</c><01:14:13.840><c> and</c><01:14:14.080><c> similar</c><01:14:14.400><c> to</c><01:14:14.480><c> cross</c><01:14:14.719><c> entropy</c>

01:14:15.110 --> 01:14:15.120 align:start position:0%
sum to one and similar to cross entropy
 

01:14:15.120 --> 01:14:18.630 align:start position:0%
sum to one and similar to cross entropy
it<01:14:15.280><c> is</c><01:14:15.440><c> careful</c><01:14:16.159><c> that</c><01:14:16.400><c> there's</c><01:14:16.640><c> no</c><01:14:16.880><c> overflows</c>

01:14:18.630 --> 01:14:18.640 align:start position:0%
it is careful that there's no overflows
 

01:14:18.640 --> 01:14:20.149 align:start position:0%
it is careful that there's no overflows
once<01:14:18.880><c> we</c><01:14:19.040><c> have</c><01:14:19.120><c> the</c><01:14:19.199><c> probabilities</c><01:14:19.760><c> we</c><01:14:19.920><c> sample</c>

01:14:20.149 --> 01:14:20.159 align:start position:0%
once we have the probabilities we sample
 

01:14:20.159 --> 01:14:21.990 align:start position:0%
once we have the probabilities we sample
from<01:14:20.320><c> them</c><01:14:20.640><c> using</c><01:14:20.880><c> torture</c><01:14:21.199><c> multinomial</c><01:14:21.920><c> to</c>

01:14:21.990 --> 01:14:22.000 align:start position:0%
from them using torture multinomial to
 

01:14:22.000 --> 01:14:24.470 align:start position:0%
from them using torture multinomial to
get<01:14:22.239><c> our</c><01:14:22.400><c> next</c><01:14:22.800><c> index</c><01:14:23.679><c> and</c><01:14:23.760><c> then</c><01:14:23.920><c> we</c><01:14:24.080><c> shift</c><01:14:24.400><c> the</c>

01:14:24.470 --> 01:14:24.480 align:start position:0%
get our next index and then we shift the
 

01:14:24.480 --> 01:14:26.790 align:start position:0%
get our next index and then we shift the
context<01:14:24.880><c> window</c><01:14:25.280><c> to</c><01:14:25.440><c> append</c><01:14:25.760><c> the</c><01:14:25.920><c> index</c><01:14:26.640><c> and</c>

01:14:26.790 --> 01:14:26.800 align:start position:0%
context window to append the index and
 

01:14:26.800 --> 01:14:29.669 align:start position:0%
context window to append the index and
record<01:14:27.199><c> it</c><01:14:28.080><c> and</c><01:14:28.239><c> then</c><01:14:28.480><c> we</c><01:14:28.640><c> can</c><01:14:28.880><c> just</c>

01:14:29.669 --> 01:14:29.679 align:start position:0%
record it and then we can just
 

01:14:29.679 --> 01:14:31.910 align:start position:0%
record it and then we can just
decode<01:14:30.159><c> all</c><01:14:30.239><c> the</c><01:14:30.320><c> integers</c><01:14:30.719><c> to</c><01:14:30.960><c> strings</c>

01:14:31.910 --> 01:14:31.920 align:start position:0%
decode all the integers to strings
 

01:14:31.920 --> 01:14:33.350 align:start position:0%
decode all the integers to strings
and<01:14:32.239><c> print</c><01:14:32.400><c> them</c><01:14:32.560><c> out</c>

01:14:33.350 --> 01:14:33.360 align:start position:0%
and print them out
 

01:14:33.360 --> 01:14:34.950 align:start position:0%
and print them out
and<01:14:33.440><c> so</c><01:14:33.600><c> these</c><01:14:33.760><c> are</c><01:14:34.000><c> some</c><01:14:34.159><c> example</c><01:14:34.480><c> samples</c>

01:14:34.950 --> 01:14:34.960 align:start position:0%
and so these are some example samples
 

01:14:34.960 --> 01:14:36.870 align:start position:0%
and so these are some example samples
and<01:14:35.120><c> you</c><01:14:35.199><c> can</c><01:14:35.360><c> see</c><01:14:35.520><c> that</c><01:14:35.679><c> the</c><01:14:35.760><c> model</c><01:14:36.080><c> now</c><01:14:36.560><c> works</c>

01:14:36.870 --> 01:14:36.880 align:start position:0%
and you can see that the model now works
 

01:14:36.880 --> 01:14:38.950 align:start position:0%
and you can see that the model now works
much<01:14:37.120><c> better</c><01:14:37.760><c> so</c><01:14:37.920><c> the</c><01:14:38.080><c> words</c><01:14:38.320><c> here</c><01:14:38.560><c> are</c><01:14:38.719><c> much</c>

01:14:38.950 --> 01:14:38.960 align:start position:0%
much better so the words here are much
 

01:14:38.960 --> 01:14:41.510 align:start position:0%
much better so the words here are much
more<01:14:39.440><c> word</c><01:14:39.920><c> like</c><01:14:40.239><c> or</c><01:14:40.480><c> name</c><01:14:40.719><c> like</c><01:14:41.199><c> so</c><01:14:41.360><c> we</c><01:14:41.440><c> have</c>

01:14:41.510 --> 01:14:41.520 align:start position:0%
more word like or name like so we have
 

01:14:41.520 --> 01:14:44.390 align:start position:0%
more word like or name like so we have
things<01:14:41.760><c> like</c><01:14:42.320><c> ham</c>

01:14:44.390 --> 01:14:44.400 align:start position:0%
things like ham
 

01:14:44.400 --> 01:14:48.070 align:start position:0%
things like ham
joes

01:14:48.070 --> 01:14:48.080 align:start position:0%
 
 

01:14:48.080 --> 01:14:49.510 align:start position:0%
 
you<01:14:48.159><c> know</c><01:14:48.320><c> it's</c><01:14:48.480><c> starting</c><01:14:48.719><c> to</c><01:14:48.960><c> sound</c><01:14:49.199><c> a</c><01:14:49.360><c> little</c>

01:14:49.510 --> 01:14:49.520 align:start position:0%
you know it's starting to sound a little
 

01:14:49.520 --> 01:14:51.270 align:start position:0%
you know it's starting to sound a little
bit<01:14:49.760><c> more</c><01:14:50.000><c> name-like</c><01:14:50.640><c> so</c><01:14:50.880><c> we're</c><01:14:50.960><c> definitely</c>

01:14:51.270 --> 01:14:51.280 align:start position:0%
bit more name-like so we're definitely
 

01:14:51.280 --> 01:14:53.430 align:start position:0%
bit more name-like so we're definitely
making<01:14:51.600><c> progress</c><01:14:52.480><c> but</c><01:14:52.640><c> we</c><01:14:52.800><c> can</c><01:14:52.960><c> still</c><01:14:53.120><c> improve</c>

01:14:53.430 --> 01:14:53.440 align:start position:0%
making progress but we can still improve
 

01:14:53.440 --> 01:14:55.430 align:start position:0%
making progress but we can still improve
on<01:14:53.520><c> this</c><01:14:53.679><c> model</c><01:14:54.000><c> quite</c><01:14:54.159><c> a</c><01:14:54.239><c> lot</c>

01:14:55.430 --> 01:14:55.440 align:start position:0%
on this model quite a lot
 

01:14:55.440 --> 01:14:57.510 align:start position:0%
on this model quite a lot
okay<01:14:55.679><c> sorry</c><01:14:55.920><c> there's</c><01:14:56.080><c> some</c><01:14:56.239><c> bonus</c><01:14:56.640><c> content</c><01:14:57.360><c> i</c>

01:14:57.510 --> 01:14:57.520 align:start position:0%
okay sorry there's some bonus content i
 

01:14:57.520 --> 01:14:59.430 align:start position:0%
okay sorry there's some bonus content i
wanted<01:14:57.760><c> to</c><01:14:57.920><c> mention</c><01:14:58.320><c> that</c><01:14:58.800><c> i</c><01:14:58.960><c> want</c><01:14:59.120><c> to</c><01:14:59.280><c> make</c>

01:14:59.430 --> 01:14:59.440 align:start position:0%
wanted to mention that i want to make
 

01:14:59.440 --> 01:15:01.830 align:start position:0%
wanted to mention that i want to make
these<01:14:59.600><c> notebooks</c><01:15:00.000><c> more</c><01:15:00.239><c> accessible</c><01:15:01.120><c> and</c><01:15:01.280><c> so</c><01:15:01.760><c> i</c>

01:15:01.830 --> 01:15:01.840 align:start position:0%
these notebooks more accessible and so i
 

01:15:01.840 --> 01:15:03.350 align:start position:0%
these notebooks more accessible and so i
don't<01:15:02.000><c> want</c><01:15:02.159><c> you</c><01:15:02.239><c> to</c><01:15:02.400><c> have</c><01:15:02.560><c> to</c><01:15:02.719><c> like</c><01:15:03.040><c> install</c>

01:15:03.350 --> 01:15:03.360 align:start position:0%
don't want you to have to like install
 

01:15:03.360 --> 01:15:04.709 align:start position:0%
don't want you to have to like install
jupyter<01:15:03.679><c> notebooks</c><01:15:04.159><c> and</c><01:15:04.239><c> torch</c><01:15:04.560><c> and</c>

01:15:04.709 --> 01:15:04.719 align:start position:0%
jupyter notebooks and torch and
 

01:15:04.719 --> 01:15:06.709 align:start position:0%
jupyter notebooks and torch and
everything<01:15:04.960><c> else</c><01:15:05.520><c> so</c><01:15:05.760><c> i</c><01:15:05.840><c> will</c><01:15:06.000><c> be</c><01:15:06.159><c> sharing</c><01:15:06.560><c> a</c>

01:15:06.709 --> 01:15:06.719 align:start position:0%
everything else so i will be sharing a
 

01:15:06.719 --> 01:15:08.950 align:start position:0%
everything else so i will be sharing a
link<01:15:07.040><c> to</c><01:15:07.199><c> a</c><01:15:07.360><c> google</c><01:15:07.679><c> colab</c>

01:15:08.950 --> 01:15:08.960 align:start position:0%
link to a google colab
 

01:15:08.960 --> 01:15:10.709 align:start position:0%
link to a google colab
and<01:15:09.199><c> google</c><01:15:09.440><c> collab</c><01:15:09.840><c> will</c><01:15:10.080><c> look</c><01:15:10.480><c> like</c><01:15:10.640><c> a</c>

01:15:10.709 --> 01:15:10.719 align:start position:0%
and google collab will look like a
 

01:15:10.719 --> 01:15:13.110 align:start position:0%
and google collab will look like a
notebook<01:15:11.679><c> in</c><01:15:11.840><c> your</c><01:15:12.080><c> browser</c><01:15:12.800><c> and</c><01:15:12.880><c> you</c><01:15:12.960><c> can</c>

01:15:13.110 --> 01:15:13.120 align:start position:0%
notebook in your browser and you can
 

01:15:13.120 --> 01:15:15.350 align:start position:0%
notebook in your browser and you can
just<01:15:13.280><c> go</c><01:15:13.440><c> to</c><01:15:13.520><c> the</c><01:15:13.600><c> url</c><01:15:14.560><c> and</c><01:15:14.719><c> you'll</c><01:15:14.880><c> be</c><01:15:15.040><c> able</c><01:15:15.120><c> to</c>

01:15:15.350 --> 01:15:15.360 align:start position:0%
just go to the url and you'll be able to
 

01:15:15.360 --> 01:15:17.750 align:start position:0%
just go to the url and you'll be able to
execute<01:15:15.920><c> all</c><01:15:16.080><c> of</c><01:15:16.159><c> the</c><01:15:16.239><c> code</c><01:15:16.480><c> that</c><01:15:16.640><c> you</c><01:15:16.800><c> saw</c><01:15:17.440><c> in</c>

01:15:17.750 --> 01:15:17.760 align:start position:0%
execute all of the code that you saw in
 

01:15:17.760 --> 01:15:19.990 align:start position:0%
execute all of the code that you saw in
the<01:15:17.840><c> google</c><01:15:18.239><c> collab</c><01:15:19.120><c> and</c><01:15:19.280><c> so</c><01:15:19.440><c> this</c><01:15:19.679><c> is</c><01:15:19.760><c> me</c>

01:15:19.990 --> 01:15:20.000 align:start position:0%
the google collab and so this is me
 

01:15:20.000 --> 01:15:22.310 align:start position:0%
the google collab and so this is me
executing<01:15:20.800><c> the</c><01:15:20.960><c> code</c><01:15:21.280><c> in</c><01:15:21.440><c> this</c><01:15:21.600><c> lecture</c><01:15:22.000><c> and</c><01:15:22.159><c> i</c>

01:15:22.310 --> 01:15:22.320 align:start position:0%
executing the code in this lecture and i
 

01:15:22.320 --> 01:15:24.709 align:start position:0%
executing the code in this lecture and i
shortened<01:15:22.719><c> it</c><01:15:22.880><c> a</c><01:15:22.960><c> little</c><01:15:23.120><c> bit</c><01:15:23.920><c> but</c><01:15:24.080><c> basically</c>

01:15:24.709 --> 01:15:24.719 align:start position:0%
shortened it a little bit but basically
 

01:15:24.719 --> 01:15:25.910 align:start position:0%
shortened it a little bit but basically
you're<01:15:24.880><c> able</c><01:15:25.120><c> to</c><01:15:25.199><c> train</c><01:15:25.360><c> the</c><01:15:25.440><c> exact</c><01:15:25.760><c> same</c>

01:15:25.910 --> 01:15:25.920 align:start position:0%
you're able to train the exact same
 

01:15:25.920 --> 01:15:28.470 align:start position:0%
you're able to train the exact same
network<01:15:26.640><c> and</c><01:15:26.800><c> then</c><01:15:27.199><c> plot</c><01:15:27.679><c> and</c><01:15:27.840><c> sample</c><01:15:28.239><c> from</c>

01:15:28.470 --> 01:15:28.480 align:start position:0%
network and then plot and sample from
 

01:15:28.480 --> 01:15:29.990 align:start position:0%
network and then plot and sample from
the<01:15:28.560><c> model</c><01:15:29.040><c> and</c><01:15:29.280><c> everything</c><01:15:29.520><c> is</c><01:15:29.679><c> ready</c><01:15:29.840><c> for</c>

01:15:29.990 --> 01:15:30.000 align:start position:0%
the model and everything is ready for
 

01:15:30.000 --> 01:15:31.669 align:start position:0%
the model and everything is ready for
you<01:15:30.159><c> to</c><01:15:30.320><c> like</c><01:15:30.480><c> tinker</c><01:15:30.800><c> with</c><01:15:30.880><c> the</c><01:15:30.960><c> numbers</c>

01:15:31.669 --> 01:15:31.679 align:start position:0%
you to like tinker with the numbers
 

01:15:31.679 --> 01:15:33.110 align:start position:0%
you to like tinker with the numbers
right<01:15:31.840><c> there</c><01:15:32.080><c> in</c><01:15:32.239><c> your</c><01:15:32.400><c> browser</c><01:15:32.960><c> no</c>

01:15:33.110 --> 01:15:33.120 align:start position:0%
right there in your browser no
 

01:15:33.120 --> 01:15:35.510 align:start position:0%
right there in your browser no
installation<01:15:33.600><c> necessary</c>

01:15:35.510 --> 01:15:35.520 align:start position:0%
installation necessary
 

01:15:35.520 --> 01:15:36.709 align:start position:0%
installation necessary
so<01:15:35.679><c> i</c><01:15:35.760><c> just</c><01:15:35.840><c> wanted</c><01:15:36.080><c> to</c><01:15:36.159><c> point</c><01:15:36.320><c> that</c><01:15:36.480><c> out</c><01:15:36.640><c> and</c>

01:15:36.709 --> 01:15:36.719 align:start position:0%
so i just wanted to point that out and
 

01:15:36.719 --> 01:15:38.149 align:start position:0%
so i just wanted to point that out and
the<01:15:36.880><c> link</c><01:15:37.120><c> to</c><01:15:37.199><c> this</c><01:15:37.360><c> will</c><01:15:37.520><c> be</c><01:15:37.679><c> in</c><01:15:37.840><c> the</c><01:15:37.920><c> video</c>

01:15:38.149 --> 01:15:38.159 align:start position:0%
the link to this will be in the video
 

01:15:38.159 --> 01:15:40.800 align:start position:0%
the link to this will be in the video
description

